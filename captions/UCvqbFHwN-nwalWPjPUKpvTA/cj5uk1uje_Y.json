[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "all right good afternoon everybody I'm Josh wood from core OS I'm here with ACS",
    "start": "0",
    "end": "6899"
  },
  {
    "text": "curio seniors officer senior systems engineer at Ticketmaster we're going to talk a little bit this afternoon about a",
    "start": "6899",
    "end": "13080"
  },
  {
    "text": "concept we've developed at core OS or a pattern you might call it for management of sophisticated stateful complex",
    "start": "13080",
    "end": "19770"
  },
  {
    "text": "applications on kubernetes and in terms of the kubernetes api we call that",
    "start": "19770",
    "end": "25619"
  },
  {
    "text": "concept operators if we do a good job this afternoon I will help to introduce some of the general principles and ideas",
    "start": "25619",
    "end": "32008"
  },
  {
    "text": "behind that give a couple examples of those that we've developed ourselves or that we see in the field and then I",
    "start": "32009",
    "end": "37829"
  },
  {
    "text": "think the really fun part of this will be when hey sis tells us about their use of a particular operator at Ticketmaster",
    "start": "37829",
    "end": "45149"
  },
  {
    "text": "to run a particular piece of mission critical software in their overall services stack so welcome cloud native",
    "start": "45149",
    "end": "53129"
  },
  {
    "text": "con coupe con 17 and thanks for coming on how many folks here verdict over",
    "start": "53129",
    "end": "59940"
  },
  {
    "text": "Nettie's I know you know the thing we",
    "start": "59940",
    "end": "66240"
  },
  {
    "start": "65000",
    "end": "192000"
  },
  {
    "text": "all love the most about kubernetes are certainly that drew my interest to it and I think is drawn corporate interest open source developer interests and",
    "start": "66240",
    "end": "73590"
  },
  {
    "text": "certainly industrial interest in the platform over the last year a year and a half since open sourcing is how easy it",
    "start": "73590",
    "end": "78750"
  },
  {
    "text": "makes it to scale stateless applications if we're talking about something like a web front-end or",
    "start": "78750",
    "end": "85340"
  },
  {
    "text": "any simple app that doesn't have connections to persistent storage that doesn't have its own Nessun notions of",
    "start": "85340",
    "end": "91680"
  },
  {
    "text": "clustering or internode communication scaling applications on kubernetes is as",
    "start": "91680",
    "end": "97979"
  },
  {
    "text": "simple as using the tube puddle scale command to scale a running application say from one to three how does this work",
    "start": "97979",
    "end": "107340"
  },
  {
    "text": "well we refer to the parts of kubernetes that provide command and control lifecycle management as the control",
    "start": "107340",
    "end": "113250"
  },
  {
    "text": "plane and that name comes from the primary piece of software that runs in that control plane which we call a",
    "start": "113250",
    "end": "118860"
  },
  {
    "text": "controller the basic stock kubernetes controller has a simple job it looks at",
    "start": "118860",
    "end": "126180"
  },
  {
    "text": "the desired state of an application or deployment described by Emmel manifest",
    "start": "126180",
    "end": "131430"
  },
  {
    "text": "file or wise coordinated by an administrator compares it to the actual state of that",
    "start": "131430",
    "end": "137930"
  },
  {
    "text": "deployment or application running a cluster and takes actions or steps to reconcile those two states this in",
    "start": "137930",
    "end": "144080"
  },
  {
    "text": "essence is the controller concept you could call it an Oda loop you can observe act and make decisions to",
    "start": "144080",
    "end": "151190"
  },
  {
    "text": "correct situations so let's say I have two pods running for my simple web",
    "start": "151190",
    "end": "156620"
  },
  {
    "text": "server application I just issued a coup puddle scale for three replicas essentially the controller loop looks at",
    "start": "156620",
    "end": "163100"
  },
  {
    "text": "the difference between my desired state in the actual condition in the universe and adds the pod so that now I have",
    "start": "163100",
    "end": "168350"
  },
  {
    "text": "three we've even made this simple enough that you can do it with a graphical application in our tectonic console and",
    "start": "168350",
    "end": "175310"
  },
  {
    "text": "take a look at the number of pods running ask for one more and you can watch it come up running live here in",
    "start": "175310",
    "end": "181700"
  },
  {
    "text": "this sort of animated slide so taking a look at the cube scheduler just ask for",
    "start": "181700",
    "end": "186950"
  },
  {
    "text": "two two are running very simple stateless applications but what about",
    "start": "186950",
    "end": "193550"
  },
  {
    "text": "apps that you know store data I some of my applications tend to read and write",
    "start": "193550",
    "end": "198590"
  },
  {
    "text": "files or report things in a database or have other notions of connection that",
    "start": "198590",
    "end": "204950"
  },
  {
    "text": "expand beyond what these kinds of stateless apps expect in the world and",
    "start": "204950",
    "end": "210620"
  },
  {
    "text": "are less easy to migrate between cluster node members in the event of application",
    "start": "210620",
    "end": "216590"
  },
  {
    "text": "failure or scaling requests like the one we just looked at we'd really like it if",
    "start": "216590",
    "end": "222670"
  },
  {
    "text": "managing complex apps like databases and file systems were as easy on kubernetes as creating them is and is easy to",
    "start": "222670",
    "end": "231050"
  },
  {
    "text": "manage and scale those apps as the simple stateless app that we took a short example look at it's not too hard",
    "start": "231050",
    "end": "236690"
  },
  {
    "text": "to say who cut will run some database you got an image and you bring it up and it's running however what if that",
    "start": "236690",
    "end": "242780"
  },
  {
    "text": "database has its own notions of clustering in terms of masters and",
    "start": "242780",
    "end": "248690"
  },
  {
    "text": "slaves or leaders and followers where are the files that record the persistent",
    "start": "248690",
    "end": "254120"
  },
  {
    "text": "data for that database located in terms of + or resources how do the pods that",
    "start": "254120",
    "end": "259280"
  },
  {
    "text": "implement the database application find connect to main authentication or otherwise access",
    "start": "259280",
    "end": "266410"
  },
  {
    "text": "those staple resources when these items exist in stateful applications when",
    "start": "266410",
    "end": "273040"
  },
  {
    "text": "there's a notion of clustering within that application like in database or distributed file system apps how do we",
    "start": "273040",
    "end": "279220"
  },
  {
    "text": "resize or upgrade the members of that cluster without disturbing their own",
    "start": "279220",
    "end": "284920"
  },
  {
    "text": "clustering connections to one another while still doing it in terms of the kubernetes api coop cuttle and the other",
    "start": "284920",
    "end": "291820"
  },
  {
    "text": "tools we use to manage kubernetes secondly how do we reconfigure these",
    "start": "291820",
    "end": "298180"
  },
  {
    "text": "kinds of applications when it's not enough to tell them make one more copy",
    "start": "298180",
    "end": "303310"
  },
  {
    "text": "of this how do we issue commands for locating persistent data stores persistent special network connections",
    "start": "303310",
    "end": "310120"
  },
  {
    "text": "perhaps even access to particular computer resources last but not least",
    "start": "310120",
    "end": "315520"
  },
  {
    "text": "any of these complex apps with complex data that persists somewhere in the",
    "start": "315520",
    "end": "320590"
  },
  {
    "text": "world either an object storage disk some kind of a volume claim in the end that",
    "start": "320590",
    "end": "325600"
  },
  {
    "text": "data needs to be backed up and managed with its own notion of what a life cycle",
    "start": "325600",
    "end": "331480"
  },
  {
    "text": "of data preservation looks like all of these things are beyond the knowledge of the basic stock kubernetes controller in",
    "start": "331480",
    "end": "339880"
  },
  {
    "text": "the control plane and are beyond the features presented by the stock default",
    "start": "339880",
    "end": "345070"
  },
  {
    "text": "kubernetes api if only kubernetes knew",
    "start": "345070",
    "end": "351250"
  },
  {
    "text": "about complex applications so the answer to make that happen is to take advantage",
    "start": "351250",
    "end": "356950"
  },
  {
    "text": "of the extensibility designed into the API and the kubernetes architecture to",
    "start": "356950",
    "end": "362320"
  },
  {
    "text": "extend kubernetes to work with particular applications the goal is to",
    "start": "362320",
    "end": "367660"
  },
  {
    "text": "come up with something simple that extends the kubernetes api to let us",
    "start": "367660",
    "end": "372820"
  },
  {
    "text": "talk about things we can't currently describe in API terms today what's the size of a cluster of databases or file",
    "start": "372820",
    "end": "379510"
  },
  {
    "text": "servers that I want to have running on my kubernetes cluster how many of those members are read replicas followers or",
    "start": "379510",
    "end": "388030"
  },
  {
    "text": "slaves in their own notion a clustering system what version of the software of the data store format is my",
    "start": "388030",
    "end": "396370"
  },
  {
    "text": "distributed database or distributed files or using while running on my kubernetes cluster operators are a way",
    "start": "396370",
    "end": "403840"
  },
  {
    "start": "402000",
    "end": "1028000"
  },
  {
    "text": "to encode this specific application knowledge from a human administrator or",
    "start": "403840",
    "end": "409780"
  },
  {
    "text": "operations team into software and pair it with extensions to the kubernetes api",
    "start": "409780",
    "end": "416050"
  },
  {
    "text": "in the form of third-party resources to allow kubernetes to manage these complex",
    "start": "416050",
    "end": "421960"
  },
  {
    "text": "stateful applications in terms of the kubernetes api while at the same time doing this in an extensible modular way",
    "start": "421960",
    "end": "429310"
  },
  {
    "text": "that doesn't disturb or interfere with or add complexity to the basic primitives that make up the kubernetes",
    "start": "429310",
    "end": "435880"
  },
  {
    "text": "architecture I think the easiest way possibly to bring this into some kind of",
    "start": "435880",
    "end": "440919"
  },
  {
    "text": "real picture that you can reason about is to take a look at one of the original operators we initiated at core or less",
    "start": "440919",
    "end": "447550"
  },
  {
    "text": "as we begin to define and explore this operators pattern how many of you have heard of SED so really like it so hard",
    "start": "447550",
    "end": "455740"
  },
  {
    "text": "conference ask questions to write like like how many of you are familiar with the diet of worms in 1331 and you know",
    "start": "455740",
    "end": "462729"
  },
  {
    "text": "like you have to change subject matter or everybody raises their hands sed is a very popular distributed key-value store",
    "start": "462729",
    "end": "469330"
  },
  {
    "text": "it solves a hard problem in distributed computing and does it in a simple lightweight way that human beings are at",
    "start": "469330",
    "end": "474729"
  },
  {
    "text": "least somewhat able to reason about by implementing the wrapped protocol rather than talk size for consensus in",
    "start": "474729",
    "end": "481229"
  },
  {
    "text": "distributed databases in short what sed does is store little bitty pieces of information that need to be coordinated",
    "start": "481229",
    "end": "487030"
  },
  {
    "text": "and kept consistent among multiple members storing that data around a cluster you find that CD at the heart of",
    "start": "487030",
    "end": "493360"
  },
  {
    "text": "kubernetes storing cluster application deployment services metadata for the stock kubernetes control plane STD is",
    "start": "493360",
    "end": "500800"
  },
  {
    "text": "also an important member of many other popular distributed applications from our friends in the open source and",
    "start": "500800",
    "end": "506560"
  },
  {
    "text": "industrial communities that's why this will sort of all on that slide that's",
    "start": "506560",
    "end": "512169"
  },
  {
    "text": "why ICD is one of the very first things for which we try to build an operator so",
    "start": "512169",
    "end": "517750"
  },
  {
    "text": "to review our basic operator ideas operators build on key Nettie's concepts like the controller",
    "start": "517750",
    "end": "523870"
  },
  {
    "text": "the control reconciliation loop and the API itself which it extends through",
    "start": "523870",
    "end": "529870"
  },
  {
    "text": "third-party resources and TP RS extend",
    "start": "529870",
    "end": "536350"
  },
  {
    "text": "that API with new API objects and you can think of these kind of like a database table schema like this is the",
    "start": "536350",
    "end": "542589"
  },
  {
    "text": "data model for this particular special application that we need to manage with an operator extensions added to the API",
    "start": "542589",
    "end": "550959"
  },
  {
    "text": "through third-party resources includes some of those samples that we were looking at in our idealized vml",
    "start": "550959",
    "end": "556570"
  },
  {
    "text": "description of an SED cluster manifest cluster size cluster version 4 sed now",
    "start": "556570",
    "end": "565029"
  },
  {
    "text": "of course the TPR mechanism was designed to build exactly these kinds of",
    "start": "565029",
    "end": "570100"
  },
  {
    "text": "extensions onto the kubernetes api so with the SED operator we built an",
    "start": "570100",
    "end": "577510"
  },
  {
    "text": "operator that knows how to manage SED clusters and keep them running reliably",
    "start": "577510",
    "end": "583240"
  },
  {
    "text": "over their lifecycle at scale deploying this operator looks really really simple",
    "start": "583240",
    "end": "588699"
  },
  {
    "text": "on the surface you pointed at a yamo file and at the end of the talk I'll give you the URLs where you need to find",
    "start": "588699",
    "end": "593740"
  },
  {
    "text": "this all of the work I'm speaking about today is open source so you can try this out on any kubernetes cluster pretty",
    "start": "593740",
    "end": "599230"
  },
  {
    "text": "much immediately this actually deploys the operator itself rather than an sed cluster what happens after this step is",
    "start": "599230",
    "end": "606310"
  },
  {
    "text": "we have now added the third-party resources and the custom controller binary in the cluster that are then able",
    "start": "606310",
    "end": "615550"
  },
  {
    "text": "to deploy create and manage sed clusters for us again looking at sort of a",
    "start": "615550",
    "end": "621670"
  },
  {
    "text": "idealized deployment for a net CD cluster these extensions may not be numerous or even in a great amount of",
    "start": "621670",
    "end": "628720"
  },
  {
    "text": "depth they just provide us the keys we need to make API manipulations of an application around which the API was not",
    "start": "628720",
    "end": "635949"
  },
  {
    "text": "originally designed so we're looking at how big is our cluster what version of s CD should be running in that cluster",
    "start": "635949",
    "end": "642600"
  },
  {
    "text": "pairing those extensions to third-party resources with our custom controller we",
    "start": "642600",
    "end": "648970"
  },
  {
    "text": "have a replacement or augmentation of a human s CD operator that",
    "start": "648970",
    "end": "654440"
  },
  {
    "text": "knows how to deploy STD clusters by deploying a master writing the initial",
    "start": "654440",
    "end": "660440"
  },
  {
    "text": "data store adding new member nodes and connecting them maintaining the sed",
    "start": "660440",
    "end": "665780"
  },
  {
    "text": "client endpoint aware applications access sed services how to backup sed in",
    "start": "665780",
    "end": "674540"
  },
  {
    "text": "a data lifecycle management sense and also how to perform spot backups before automatically undertaking operations",
    "start": "674540",
    "end": "680750"
  },
  {
    "text": "like restorations of failed nodes RIA ditions of new nodes to the existing sed",
    "start": "680750",
    "end": "686030"
  },
  {
    "text": "cluster and maybe most interestingly upgrades in versions both of the sed",
    "start": "686030",
    "end": "692120"
  },
  {
    "text": "binaries and the sed data store format between different versions of sed so to",
    "start": "692120",
    "end": "698240"
  },
  {
    "text": "take a look on the screen here if you look at sort of Group one we have we have what the controller maybe would",
    "start": "698240",
    "end": "704300"
  },
  {
    "text": "consider the picture of reality the thing we are going to compare to our desired state well if you've looked back",
    "start": "704300",
    "end": "710930"
  },
  {
    "text": "at the Yambol we were showing our desired state is considerably different",
    "start": "710930",
    "end": "716390"
  },
  {
    "text": "from the state represented in block a here we want three pods we only have two",
    "start": "716390",
    "end": "721730"
  },
  {
    "text": "running we want them all to be running SED version 3.1 point zero but we",
    "start": "721730",
    "end": "726860"
  },
  {
    "text": "actually can see that of the two that are running only one of them's running the version we requested so just as na",
    "start": "726860",
    "end": "733460"
  },
  {
    "text": "standards kübra a standard kubernetes controller but with additional specific application knowledge the sed custom",
    "start": "733460",
    "end": "741890"
  },
  {
    "text": "controller that comprises with the third-party resources the sed operator can examine the difference between",
    "start": "741890",
    "end": "748780"
  },
  {
    "text": "reality desired state and knows how to actually take steps in sed specific",
    "start": "748780",
    "end": "755240"
  },
  {
    "text": "terms to bring the condition of the sed cluster to that described in the desired",
    "start": "755240",
    "end": "761839"
  },
  {
    "text": "state that we showed in the manifest file what's that really going to mean in this particular highly simplified",
    "start": "761839",
    "end": "767180"
  },
  {
    "text": "idealized illustration it's going to mean that we're going to first of all recover at least one member because",
    "start": "767180",
    "end": "773780"
  },
  {
    "text": "we're short of one member of the three we've actually requested that run in our",
    "start": "773780",
    "end": "778880"
  },
  {
    "text": "cluster we are going then to actually back up the data store shared by that",
    "start": "778880",
    "end": "783920"
  },
  {
    "text": "entire sed cluster because the next and perhaps most important step we're going to take in our reconciliation is upgrading that",
    "start": "783920",
    "end": "790510"
  },
  {
    "text": "recalcitrant 3.09 member to 3.10 in short that's what the SED operator",
    "start": "790510",
    "end": "798320"
  },
  {
    "text": "does those are the basic kubernetes primitives it extends to accomplish that",
    "start": "798320",
    "end": "805910"
  },
  {
    "text": "work and it is open source code which you can examine use to run your own sed",
    "start": "805910",
    "end": "811810"
  },
  {
    "text": "clusters at scale on kubernetes manage them in terms of coop peddle commands in",
    "start": "811810",
    "end": "816920"
  },
  {
    "text": "the kubernetes api and additionally the sed operator is currently one of the",
    "start": "816920",
    "end": "821930"
  },
  {
    "text": "best and cleanest based examples of where you might start writing your own operators in addition to SED like we've",
    "start": "821930",
    "end": "830779"
  },
  {
    "text": "seen several operators arise both inside pour OS and in the field",
    "start": "830779",
    "end": "836120"
  },
  {
    "text": "first of all I'll talk a little bit about things we either are working on right now or have just delivered in the",
    "start": "836120",
    "end": "841310"
  },
  {
    "text": "sed operator and what it means to to some of our product and project offerings one of the things we talked",
    "start": "841310",
    "end": "848330"
  },
  {
    "text": "about a lot of core OS is this idea of self driving self hosted automatically updating infrastructure core OS",
    "start": "848330",
    "end": "855200"
  },
  {
    "text": "container Linux rather famously automatically updates with a sort of a/b",
    "start": "855200",
    "end": "860690"
  },
  {
    "text": "rollback partition scheme and a really similar way to your Chromebook or your mobile phone we're actually able to",
    "start": "860690",
    "end": "867440"
  },
  {
    "text": "deliver Linux operating system upgrades rather than being bound by dependencies",
    "start": "867440",
    "end": "873610"
  },
  {
    "text": "we can deliver these upgrades because the container gives us isolation between OS and application layer so the same I",
    "start": "873610",
    "end": "881300"
  },
  {
    "text": "to the same end we are trying to drive this idea of self updating auto updating self driving infrastructure up through",
    "start": "881300",
    "end": "887630"
  },
  {
    "text": "the stack from the operating system to things like at CD and to kubernetes itself the operator work is a key",
    "start": "887630",
    "end": "894770"
  },
  {
    "text": "underpinning of how we're delivering self driving infrastructure and delivering kubernetes clusters that can",
    "start": "894770",
    "end": "901550"
  },
  {
    "text": "upgrade and manage their own life cycles over time rather than requiring manual",
    "start": "901550",
    "end": "906620"
  },
  {
    "text": "or administrator a activity at grade points the sed",
    "start": "906620",
    "end": "913420"
  },
  {
    "text": "operator lies very near the heart of how that work is being delivered if you look at the latest release last week of",
    "start": "913420",
    "end": "919180"
  },
  {
    "text": "tectonic 150 5.2 shortly before the kubernetes one six release and in our",
    "start": "919180",
    "end": "925300"
  },
  {
    "text": "blog post making the release announcement for this we talk in some detail about the more high availability",
    "start": "925300",
    "end": "930820"
  },
  {
    "text": "at CD version that was delivered in this last release a lot of that is built around the the concepts of operators and",
    "start": "930820",
    "end": "937389"
  },
  {
    "text": "how they manage and automate the management of SED um and now I am going",
    "start": "937389",
    "end": "942730"
  },
  {
    "text": "to talk about one of the other operators that we built in the team and another",
    "start": "942730",
    "end": "947800"
  },
  {
    "text": "open source operator for managing the Prometheus monitoring and alerting system how many folks here used",
    "start": "947800",
    "end": "953199"
  },
  {
    "text": "Prometheus to monitor their systems supposed to raise your hand hisses I so",
    "start": "953199",
    "end": "962740"
  },
  {
    "text": "Prometheus is a really neat monitoring system do a lot of charts and graphs we can take many many detailed measurements",
    "start": "962740",
    "end": "968709"
  },
  {
    "text": "and much of the kubernetes api and the sort of pod interface and applications",
    "start": "968709",
    "end": "975310"
  },
  {
    "text": "that you run on kubernetes are instrumented in ways that Prometheus can gain insight to and report statistics",
    "start": "975310",
    "end": "982120"
  },
  {
    "text": "and measurements from out of those statistics and measurement you can construct reliable meaningful alerting",
    "start": "982120",
    "end": "987880"
  },
  {
    "text": "systems for when things do go wrong and people have to take action or perhaps alerts the fire operator actions in an",
    "start": "987880",
    "end": "995139"
  },
  {
    "text": "idealized automated world before I take too much time I am going to point out that our",
    "start": "995139",
    "end": "1000569"
  },
  {
    "text": "Prometheus operator is like the SCD operator open source work that anyone",
    "start": "1000569",
    "end": "1005910"
  },
  {
    "text": "can use and roll out one of the folks that has taken a lot of initiative in",
    "start": "1005910",
    "end": "1011100"
  },
  {
    "text": "rolling this operator out learning it in deep detail and building production",
    "start": "1011100",
    "end": "1016500"
  },
  {
    "text": "systems with it at scale at his place of employment I happen to have standing on stage with me today so I would actually",
    "start": "1016500",
    "end": "1023610"
  },
  {
    "text": "like to turn this over to KC's carrillo from Ticketmaster who's going to take",
    "start": "1023610",
    "end": "1029250"
  },
  {
    "text": "the general outline of what operators might be what they can accomplish and drive them down to the practical level",
    "start": "1029250",
    "end": "1035699"
  },
  {
    "text": "of what Ticketmaster and hey sis's teams are doing with the Prometheus operator at Tech",
    "start": "1035699",
    "end": "1040870"
  },
  {
    "text": "for today it is okay good evening everybody um emphasis Korea I work at the kid",
    "start": "1040870",
    "end": "1047800"
  },
  {
    "text": "master and today I'm going to talk about our journey on deploying and using",
    "start": "1047800",
    "end": "1054240"
  },
  {
    "text": "Prometheus ticket matter so first of all I want to set the context here and I",
    "start": "1054240",
    "end": "1062820"
  },
  {
    "start": "1057000",
    "end": "1100000"
  },
  {
    "text": "want to tell you how to get master is going to use or is using Prometheus so",
    "start": "1062820",
    "end": "1069520"
  },
  {
    "text": "as we transition to a DevOps model we are getting rid of on open th TV because",
    "start": "1069520",
    "end": "1076540"
  },
  {
    "text": "it's a gigantic burden in our operations teams to keep huge open th EB cluster",
    "start": "1076540",
    "end": "1085240"
  },
  {
    "text": "alive we are replacing legacy on alerting systems and now each team is",
    "start": "1085240",
    "end": "1092770"
  },
  {
    "text": "going to own its own monitoring and alerting which is better that way so we",
    "start": "1092770",
    "end": "1101920"
  },
  {
    "start": "1100000",
    "end": "1146000"
  },
  {
    "text": "we started evaluating our primitives and we did up remove concept it's super",
    "start": "1101920",
    "end": "1107980"
  },
  {
    "text": "basic and it was closed two teams that",
    "start": "1107980",
    "end": "1113050"
  },
  {
    "text": "arm they had already instrumental applications and making them our",
    "start": "1113050",
    "end": "1119710"
  },
  {
    "text": "Prometheus compatible was uneasy step and teams that were in the process of migrating their applications to AWS and",
    "start": "1119710",
    "end": "1127660"
  },
  {
    "text": "I wanted to take the extra step to make it on prometheus enabled the",
    "start": "1127660",
    "end": "1134050"
  },
  {
    "text": "architecture of this pfg was super simple it was Prometheus and Allard manager",
    "start": "1134050",
    "end": "1139300"
  },
  {
    "text": "running on very few instances and it was sharing which it was shared between teams so the PLC architecture looks",
    "start": "1139300",
    "end": "1148750"
  },
  {
    "start": "1146000",
    "end": "1170000"
  },
  {
    "text": "something like that we had a federation and the federation is just another set of promises on",
    "start": "1148750",
    "end": "1155460"
  },
  {
    "text": "scraping the arm lower layer promises and aggregating all the metrics into a",
    "start": "1155460",
    "end": "1162130"
  },
  {
    "text": "single point so we can hook up Ravana and do pretty drafts at a single point",
    "start": "1162130",
    "end": "1170790"
  },
  {
    "start": "1170000",
    "end": "1261000"
  },
  {
    "text": "what what we what problems wink and the lessons that we learn with this",
    "start": "1170850",
    "end": "1177389"
  },
  {
    "text": "POC we were cheating a lot of Federation script amounts because the data set that",
    "start": "1177389",
    "end": "1182940"
  },
  {
    "text": "the arm lower-level our premier cases were getting in was huge so we can get a",
    "start": "1182940",
    "end": "1191249"
  },
  {
    "text": "like a one-minute resolution because the data set was too too big and we were",
    "start": "1191249",
    "end": "1197580"
  },
  {
    "text": "when we didn't have time to get all the matrix by configurations can disrupt the",
    "start": "1197580",
    "end": "1204659"
  },
  {
    "text": "service arm throughout that merge request then had a typo and the new",
    "start": "1204659",
    "end": "1213059"
  },
  {
    "text": "alert rules weren't evaluated for like a day then at the Federation side ticking",
    "start": "1213059",
    "end": "1221669"
  },
  {
    "text": "the storage parameters takes time and it's like trying our error if I increase",
    "start": "1221669",
    "end": "1229710"
  },
  {
    "text": "it the instant size and more memory to the instance I had to go back and tweak",
    "start": "1229710",
    "end": "1235259"
  },
  {
    "text": "those parameters and also on the teams were facing a lot of network ATL's",
    "start": "1235259",
    "end": "1242009"
  },
  {
    "text": "problems or network is highly restricted so we had to find a way to make this um",
    "start": "1242009",
    "end": "1249830"
  },
  {
    "text": "the user experience better what we learn",
    "start": "1249830",
    "end": "1255119"
  },
  {
    "text": "is that each team shall have its own from each attack and we need to divide to conquer so then we say ok um let's",
    "start": "1255119",
    "end": "1263519"
  },
  {
    "start": "1261000",
    "end": "1358000"
  },
  {
    "text": "roll out Prometheus as a service so the teams can just quickly deploy their",
    "start": "1263519",
    "end": "1268980"
  },
  {
    "text": "primitive stack and get a lot of things out of the box with it so the Prometheus",
    "start": "1268980",
    "end": "1274379"
  },
  {
    "text": "as a service must allow the teams to quickly deploy ax are dedicated stack",
    "start": "1274379",
    "end": "1281309"
  },
  {
    "text": "and I have the goal of making it 2 minutes per meter stack it should not",
    "start": "1281309",
    "end": "1289619"
  },
  {
    "text": "represent any additional burden to the team so they just permit it'll just work",
    "start": "1289619",
    "end": "1294840"
  },
  {
    "text": "for them and we always up to date and also provide pre-configured et2 and",
    "start": "1294840",
    "end": "1301830"
  },
  {
    "text": "keyboard native service discovery based for ec2 based on tags",
    "start": "1301830",
    "end": "1308130"
  },
  {
    "text": "and Kira Nerys service discovery based on annotations and also it should be",
    "start": "1308130",
    "end": "1314760"
  },
  {
    "text": "based on helm because we could roll out our newer versions of the service",
    "start": "1314760",
    "end": "1325530"
  },
  {
    "text": "discovery templates um pretty quickly and easy and then we came up with a exporter a ticket master exported",
    "start": "1325530",
    "end": "1332400"
  },
  {
    "text": "database so to solve the network shield problems we provided a well known port",
    "start": "1332400",
    "end": "1340080"
  },
  {
    "text": "of of a well known port range for the exporters we open the akio and also all",
    "start": "1340080",
    "end": "1348450"
  },
  {
    "text": "this great jobs and easy to service discovery it's based on this database",
    "start": "1348450",
    "end": "1355100"
  },
  {
    "text": "exporter database then up so how we can",
    "start": "1355100",
    "end": "1360870"
  },
  {
    "text": "achieve this well with the Prometheus",
    "start": "1360870",
    "end": "1365910"
  },
  {
    "text": "operator it knows it allows us to model",
    "start": "1365910",
    "end": "1371730"
  },
  {
    "text": "our complex primitives stack in a few",
    "start": "1371730",
    "end": "1376800"
  },
  {
    "text": "lines of code of configuration also for the Federation the storage is outta tune",
    "start": "1376800",
    "end": "1385710"
  },
  {
    "text": "so if I increase the memory limit for the pond that is running our Federation workload the primitives operator does",
    "start": "1385710",
    "end": "1394650"
  },
  {
    "text": "the math and configures it and an important thing is that our manager is",
    "start": "1394650",
    "end": "1400980"
  },
  {
    "text": "highly available by default with the primitives operator I just need to say",
    "start": "1400980",
    "end": "1406670"
  },
  {
    "text": "give me three replicas of our manager and it will configure the clustering for",
    "start": "1406670",
    "end": "1412440"
  },
  {
    "text": "it so what we're looking forward with on this primitive operator arm we we are",
    "start": "1412440",
    "end": "1420330"
  },
  {
    "text": "really interested in the Federation EPR because right now it's manually and also",
    "start": "1420330",
    "end": "1426420"
  },
  {
    "text": "Federation charting because and this is really important for us in a non sale I don't want to be 2 a.m. in the morning",
    "start": "1426420",
    "end": "1433890"
  },
  {
    "text": "preparing for an on sale and have to scale everything and charge it manually right and also graph on integration so",
    "start": "1433890",
    "end": "1442029"
  },
  {
    "text": "if new primitives stack is deployed to the kinetics cluster I can have the arm",
    "start": "1442029",
    "end": "1450149"
  },
  {
    "text": "data source added for it and one",
    "start": "1450149",
    "end": "1455409"
  },
  {
    "text": "interesting thing is the company adoption rate everyone loves it we have two weeks of production already clusters",
    "start": "1455409",
    "end": "1464200"
  },
  {
    "text": "and the adoption rate is huge right now we have like four teams that are running",
    "start": "1464200",
    "end": "1470950"
  },
  {
    "text": "their production grade monitoring and alerting on chromakey our primitives and",
    "start": "1470950",
    "end": "1477250"
  },
  {
    "text": "the parameters operator and we have like 40 teams that are evaluating it in our",
    "start": "1477250",
    "end": "1484360"
  },
  {
    "text": "development clusters and this is a quick",
    "start": "1484360",
    "end": "1491429"
  },
  {
    "start": "1488000",
    "end": "1542000"
  },
  {
    "text": "chart of of hell or architecture looks we are using tectonic clusters and we",
    "start": "1491639",
    "end": "1497980"
  },
  {
    "text": "have deployed a set of easy to instances that are running there are then has a",
    "start": "1497980",
    "end": "1507120"
  },
  {
    "text": "specific Negra cells to be able to reach the ec2 instances on the port range that",
    "start": "1507120",
    "end": "1514600"
  },
  {
    "text": "we carved for this and then um we are using node selectors to schedule the",
    "start": "1514600",
    "end": "1520690"
  },
  {
    "text": "parameters workload to go to specific nodes and we also have calcium channel",
    "start": "1520690",
    "end": "1526779"
  },
  {
    "text": "or network policy and then the federation stores the data into any",
    "start": "1526779",
    "end": "1533200"
  },
  {
    "text": "beers volume EBS is eating the EBS are provisioning is also managed by the",
    "start": "1533200",
    "end": "1538570"
  },
  {
    "text": "operator so we don't need to do anything there does any one has questions about",
    "start": "1538570",
    "end": "1544570"
  },
  {
    "start": "1542000",
    "end": "1826000"
  },
  {
    "text": "this",
    "start": "1544570",
    "end": "1546870"
  },
  {
    "text": "a question about the meat department or",
    "start": "1549750",
    "end": "1554880"
  },
  {
    "text": "about how operators relate chart and",
    "start": "1554880",
    "end": "1561800"
  },
  {
    "text": "you're like yeah thanks so the question",
    "start": "1568870",
    "end": "1580340"
  },
  {
    "text": "since I don't know if we have the question mic room in the audience that seems to be sitting up here on the podium but the question was not specific",
    "start": "1580340",
    "end": "1588380"
  },
  {
    "text": "to the Prometheus operator but in general how do operators as a concept or",
    "start": "1588380",
    "end": "1593480"
  },
  {
    "text": "a pattern compared to things like Helms and the other deployment distribution techniques we've seen a rise around the",
    "start": "1593480",
    "end": "1598520"
  },
  {
    "text": "kubernetes ecosystem and secondly like you made a suggestion that operators maybe seem to you more like a concept or",
    "start": "1598520",
    "end": "1605630"
  },
  {
    "text": "a way of doing things so I'll start at the end I think you're right in that",
    "start": "1605630",
    "end": "1610850"
  },
  {
    "text": "sense um the way what I think I like to think of operators is the capital o as a",
    "start": "1610850",
    "end": "1616840"
  },
  {
    "text": "pattern or a concept the way that complex applications can be managed on",
    "start": "1616840",
    "end": "1622130"
  },
  {
    "text": "kubernetes we have not boiled operators down to an API that you can use to",
    "start": "1622130",
    "end": "1628610"
  },
  {
    "text": "easily construct your own I would imagine the future of that and the work that I know about I'm trying to",
    "start": "1628610",
    "end": "1633800"
  },
  {
    "text": "generalize that stuff is - it is probably going to look more like a like",
    "start": "1633800",
    "end": "1638840"
  },
  {
    "text": "an SDK like sort of maybe skeletal sample code things that you begin to build on top of a few functions that are",
    "start": "1638840",
    "end": "1646160"
  },
  {
    "text": "the main abstracts that we've repeated in our development of several different operators for different apps but one of",
    "start": "1646160",
    "end": "1652910"
  },
  {
    "text": "the key things about operators and why we didn't necessarily go directly to the kubernetes api and instead extended it",
    "start": "1652910",
    "end": "1660320"
  },
  {
    "text": "through the TPR mechanism and these custom controllers their very nature and",
    "start": "1660320",
    "end": "1665960"
  },
  {
    "text": "purpose is the long term management of the lifecycle of specific applications",
    "start": "1665960",
    "end": "1671600"
  },
  {
    "text": "they do encode a lot of application specific knowledge that we don't",
    "start": "1671600",
    "end": "1677390"
  },
  {
    "text": "necessarily think belongs architectural e in the main kubernetes api which is",
    "start": "1677390",
    "end": "1682610"
  },
  {
    "text": "why we chose to go sort of this route of extending the api so that the long term how do I build my own operator question",
    "start": "1682610",
    "end": "1689180"
  },
  {
    "text": "that this sort of train of thought leads us to is today unfortunately or fortunately",
    "start": "1689180",
    "end": "1695700"
  },
  {
    "text": "early days all this is pretty new stuff you can take a look at the existing actual operator code at least in the",
    "start": "1695700",
    "end": "1702150"
  },
  {
    "text": "HCDA operator there has been some work to abstract the general operator",
    "start": "1702150",
    "end": "1707400"
  },
  {
    "text": "functions somewhat from the sed functions but they still live in a single codebase right now in the future",
    "start": "1707400",
    "end": "1713880"
  },
  {
    "text": "I would expect there to be something like an SDK a basic software development kit that is like the bottom of an",
    "start": "1713880",
    "end": "1720240"
  },
  {
    "text": "operator the place where you might start writing your own how do operators",
    "start": "1720240",
    "end": "1725580"
  },
  {
    "text": "compare to helm I am here's a I'm going to answer this somewhat glibly and not",
    "start": "1725580",
    "end": "1731790"
  },
  {
    "text": "even make any attempt to hide my ignorance of one side of the question I know a little bit about helm I certainly",
    "start": "1731790",
    "end": "1738600"
  },
  {
    "text": "like all the folks at Deus and I think I've even been out there to Boulder to speak and so like I don't I just don't",
    "start": "1738600",
    "end": "1745440"
  },
  {
    "text": "happen to know a lot about home and use it on a day in day out from my knowledge which is limited the Asus might have a",
    "start": "1745440",
    "end": "1751320"
  },
  {
    "text": "comment after I wrap up here helm is very very deploy and replicate or in it",
    "start": "1751320",
    "end": "1757530"
  },
  {
    "text": "it feels more like configuration management if you map it to an older",
    "start": "1757530",
    "end": "1762930"
  },
  {
    "text": "kind of concept or something we maybe all have shared knowledge about an idea of what we think like config management",
    "start": "1762930",
    "end": "1768510"
  },
  {
    "text": "is operators are a long-running application that stays with these",
    "start": "1768510",
    "end": "1773820"
  },
  {
    "text": "special applications as they run on kubernetes clusters and not only deploy them in easy single command-line ways",
    "start": "1773820",
    "end": "1780570"
  },
  {
    "text": "but manage their overall life cycle can actually upgrade them when an upgrade is",
    "start": "1780570",
    "end": "1786420"
  },
  {
    "text": "available not when you run a set at home commands to deploy a new version in your chart and I think that's pretty much how",
    "start": "1786420",
    "end": "1793860"
  },
  {
    "text": "I see the difference between between like then but like what I know that folks do with helm versus what I do know",
    "start": "1793860",
    "end": "1800280"
  },
  {
    "text": "about operators and what I do myself with operators I could even and here will be where I go too far and really",
    "start": "1800280",
    "end": "1806280"
  },
  {
    "text": "reveal my ignorance I could even imagine a helmet that deployed some kind of",
    "start": "1806280",
    "end": "1811710"
  },
  {
    "text": "custom operator it might handle the deployment and replication of that and over and over again to then sped up",
    "start": "1811710",
    "end": "1818660"
  },
  {
    "text": "the operator which would then handle the actual lifecycle management of the app over time after that deployment yep so",
    "start": "1818660",
    "end": "1826730"
  },
  {
    "start": "1826000",
    "end": "1881000"
  },
  {
    "text": "for example we're using home to tilt the operator that we need our Prometheus",
    "start": "1826730",
    "end": "1834669"
  },
  {
    "text": "instance right so we we use it to generate like the in the examples that",
    "start": "1834669",
    "end": "1844820"
  },
  {
    "text": "George did on the the Gamo file that gets pushed to the API and and we would",
    "start": "1844820",
    "end": "1853070"
  },
  {
    "text": "help with hem we construct the the GPR configurations and then say to given",
    "start": "1853070",
    "end": "1859429"
  },
  {
    "text": "anything deploy this and then the operator takes it and it knows how to for example create another manager and",
    "start": "1859429",
    "end": "1865309"
  },
  {
    "text": "create a cluster of other managers that that's the difference right",
    "start": "1865309",
    "end": "1872529"
  },
  {
    "start": "1881000",
    "end": "1991000"
  },
  {
    "text": "not yet because it has a lot of Ticketmaster specific stuff because for",
    "start": "1882620",
    "end": "1888510"
  },
  {
    "text": "example we do or et to service discovery it's based on our own ec2 tags so make",
    "start": "1888510",
    "end": "1896370"
  },
  {
    "text": "maybe we can do something later",
    "start": "1896370",
    "end": "1901279"
  },
  {
    "text": "[Music]",
    "start": "1908740",
    "end": "1911809"
  },
  {
    "text": "which would be which is more something I should and then something happens that there commences you know I appreciate",
    "start": "1917240",
    "end": "1924330"
  },
  {
    "text": "personal that it has an astronomic you a",
    "start": "1924330",
    "end": "1929000"
  },
  {
    "text": "thank you okay so the roadmap means actually did not know about all such an",
    "start": "1930140",
    "end": "1936900"
  },
  {
    "text": "extra that their question on the Q&A they had but I waited to inform my",
    "start": "1936900",
    "end": "1941970"
  },
  {
    "text": "answer because I was trying to do a little bit Lauren conveyed with us refusing I mean I item I don't",
    "start": "1941970",
    "end": "1948630"
  },
  {
    "text": "personally have it must be so knowledge about that plan to bring home into the",
    "start": "1948630",
    "end": "1954150"
  },
  {
    "text": "problem very interesting idea clearly Khloe has you talk more about operators because this questions come up in some",
    "start": "1954150",
    "end": "1961050"
  },
  {
    "text": "degree before home and some mystery that people mine I'm going to simplify the problem and be able to understand",
    "start": "1961050",
    "end": "1967470"
  },
  {
    "text": "tactical ways yes difference and how am i entertaining about",
    "start": "1967470",
    "end": "1973580"
  },
  {
    "text": "[Music] so the question is are there plans for",
    "start": "1985110",
    "end": "1992269"
  },
  {
    "start": "1991000",
    "end": "2173000"
  },
  {
    "text": "operators for complex database applications like my sequel or Postgres",
    "start": "1992269",
    "end": "1997369"
  },
  {
    "text": "sequel we have done experimental work on them definitely for Postgres sequel that is a",
    "start": "1997369",
    "end": "2004629"
  },
  {
    "text": "piece of our overall infrastructure out at some edges and would be important to us and they are also those are exactly",
    "start": "2004629",
    "end": "2011590"
  },
  {
    "text": "the kind of apps that we would expect to see community development on I know about this much about early stages",
    "start": "2011590",
    "end": "2019559"
  },
  {
    "text": "Postgres sequel operator that did if I since I don't have my slides I'll try to",
    "start": "2019559",
    "end": "2025720"
  },
  {
    "text": "look it up after this talk maybe hands you a URL will shortly afterwards that's the only like here's excellent work and",
    "start": "2025720",
    "end": "2032859"
  },
  {
    "text": "code that I can send you to go look at but certainly those two applications along with applications like set",
    "start": "2032859",
    "end": "2040239"
  },
  {
    "text": "distributed file system storage are certainly what we had in mind as we",
    "start": "2040239",
    "end": "2046059"
  },
  {
    "text": "began developing the operator concept and so to go just a little bit away from your question and talk about that idea",
    "start": "2046059",
    "end": "2052450"
  },
  {
    "text": "of file storage there is a there's a company in a product called Brooke and",
    "start": "2052450",
    "end": "2058929"
  },
  {
    "text": "they are kind of a Enterprise packaging of the Ceph storage paired with an",
    "start": "2058929",
    "end": "2064569"
  },
  {
    "text": "operator based on the operators pattern that can manage set file system clusters",
    "start": "2064569",
    "end": "2070388"
  },
  {
    "text": "in a much more complicated but still basically the same as what I was showing with what the SVD cluster it knows about",
    "start": "2070389",
    "end": "2077408"
  },
  {
    "text": "SEFs notions of clustering so it can maintain those notions of clustering of",
    "start": "2077409",
    "end": "2082569"
  },
  {
    "text": "who's a node who's a leader where's the persistent storage live in terms of pure Nettie's and on top of kubernetes so",
    "start": "2082569",
    "end": "2089049"
  },
  {
    "text": "there is a work operator and it is a usable",
    "start": "2089049",
    "end": "2094950"
  },
  {
    "text": "in live running operator for running largest urban file systems a lot of problems are very similar in solving",
    "start": "2094950",
    "end": "2101579"
  },
  {
    "text": "need the large database systems issue so yes is a very long yes - one of the",
    "start": "2101579",
    "end": "2108839"
  },
  {
    "text": "things we love to manage with operators of our databases databases are tough to managing distributed clusters right now",
    "start": "2108839",
    "end": "2115380"
  },
  {
    "text": "we don't have good ways to manage a Postgres sequel database in kubernetes terms if we basically build a Postgres",
    "start": "2115380",
    "end": "2122730"
  },
  {
    "text": "cluster up on the side and then someone is responsible for maintaining that cluster keeping it alive and so is",
    "start": "2122730",
    "end": "2128609"
  },
  {
    "text": "exactly the kind of problem we'll assault with operators",
    "start": "2128609",
    "end": "2132920"
  },
  {
    "text": "so the question here is the previous talk talked about this idea of an open",
    "start": "2172680",
    "end": "2178150"
  },
  {
    "start": "2173000",
    "end": "2326000"
  },
  {
    "text": "services API which is sort of how to manage service endpoints is what that",
    "start": "2178150",
    "end": "2184420"
  },
  {
    "text": "sounds like to me so set of commands added to the default kubernetes api or set of end points in",
    "start": "2184420",
    "end": "2191230"
  },
  {
    "text": "that api that let you describe management of those service endpoints my",
    "start": "2191230",
    "end": "2197590"
  },
  {
    "text": "suspicion is that one the idea of the open services api is a general pattern",
    "start": "2197590",
    "end": "2204760"
  },
  {
    "text": "for all applications running on kubernetes whereas while an operator",
    "start": "2204760",
    "end": "2210670"
  },
  {
    "text": "might do very similar work or even itself use such an api to implement its",
    "start": "2210670",
    "end": "2217330"
  },
  {
    "text": "work it will continue to be more application specific for an SED for a my",
    "start": "2217330",
    "end": "2225010"
  },
  {
    "text": "sequel for a Postgres sequel and the thing that distinguishes operators in it I think you know actually in software",
    "start": "2225010",
    "end": "2231670"
  },
  {
    "text": "engineering you try very hard to generalize everything you can and reserve the specifics to the places where they must live part of the idea of",
    "start": "2231670",
    "end": "2238810"
  },
  {
    "text": "operators is they are that place where since there have to be some specifics this is where they should live these",
    "start": "2238810",
    "end": "2244480"
  },
  {
    "text": "custom controllers these third-party resources my suspicion is that the API from the previous talk is much more",
    "start": "2244480",
    "end": "2251470"
  },
  {
    "text": "general and would be a general kubernetes feature whereas you would build an operator for your application",
    "start": "2251470",
    "end": "2258190"
  },
  {
    "text": "that you run your work and that I may not know anything about I think that's",
    "start": "2258190",
    "end": "2263290"
  },
  {
    "text": "how they would differ again I know this much about an idea for for a services",
    "start": "2263290",
    "end": "2269110"
  },
  {
    "text": "API and an endpoint control API so I have an idea what's talking about but I didn't see the previous talk so it a",
    "start": "2269110",
    "end": "2275680"
  },
  {
    "text": "little hard to do a direct comparison certainly what distinguishes operators",
    "start": "2275680",
    "end": "2282550"
  },
  {
    "text": "is their specificity to particular applications that's so what's what's different about them than the work we do",
    "start": "2282550",
    "end": "2289360"
  },
  {
    "text": "every day upstream on stock open source kubernetes is we're trying all the ways",
    "start": "2289360",
    "end": "2297310"
  },
  {
    "text": "to generalize and abstract stuff we're putting in the main code base and reserve the specifics and the",
    "start": "2297310",
    "end": "2302920"
  },
  {
    "text": "intricacies of individual application design - to these operators reasonably",
    "start": "2302920",
    "end": "2309829"
  },
  {
    "text": "good answer I like can you score me",
    "start": "2309829",
    "end": "2314319"
  },
  {
    "text": "lessons this going to add to that Indian forget hey",
    "start": "2315099",
    "end": "2324130"
  }
]