[
  {
    "text": "so yeah this is a protocol detection uh",
    "start": "80",
    "end": "2879"
  },
  {
    "text": "a deep dive into how linker d achieves",
    "start": "2879",
    "end": "5440"
  },
  {
    "text": "zero config",
    "start": "5440",
    "end": "8480"
  },
  {
    "text": "um so my name is kevin limekuler uh i am",
    "start": "9200",
    "end": "12240"
  },
  {
    "text": "a software engineer at buoyant uh here",
    "start": "12240",
    "end": "15519"
  },
  {
    "text": "are not too active on twitter but",
    "start": "15519",
    "end": "18000"
  },
  {
    "text": "my handle is up there",
    "start": "18000",
    "end": "19600"
  },
  {
    "text": "you can reach out to me on github or our",
    "start": "19600",
    "end": "22960"
  },
  {
    "text": "linkedin slack",
    "start": "22960",
    "end": "25599"
  },
  {
    "text": "so i've been",
    "start": "25599",
    "end": "27199"
  },
  {
    "text": "at buoyant and working on linker d for",
    "start": "27199",
    "end": "29599"
  },
  {
    "text": "just a little over three years now",
    "start": "29599",
    "end": "33119"
  },
  {
    "text": "and it's been a very interesting journey",
    "start": "33520",
    "end": "34880"
  },
  {
    "text": "uh so for something so core to the cncf",
    "start": "34880",
    "end": "38160"
  },
  {
    "text": "it's",
    "start": "38160",
    "end": "39200"
  },
  {
    "text": "cncf it's fascinating to see how the",
    "start": "39200",
    "end": "41680"
  },
  {
    "text": "ecosystem has",
    "start": "41680",
    "end": "43520"
  },
  {
    "text": "changed over the years",
    "start": "43520",
    "end": "45760"
  },
  {
    "text": "but there's also just been a lot of",
    "start": "45760",
    "end": "47920"
  },
  {
    "text": "challenges",
    "start": "47920",
    "end": "49840"
  },
  {
    "text": "the things that we work on can be hard",
    "start": "49840",
    "end": "52000"
  },
  {
    "text": "to solve sometimes fairly cutting edge",
    "start": "52000",
    "end": "55920"
  },
  {
    "text": "and require a lot of design decisions",
    "start": "55920",
    "end": "58879"
  },
  {
    "text": "so today i'm kind of here to talk about",
    "start": "58879",
    "end": "62079"
  },
  {
    "text": "one of the things that i've really",
    "start": "62079",
    "end": "63440"
  },
  {
    "text": "enjoyed",
    "start": "63440",
    "end": "65040"
  },
  {
    "text": "designing over my time",
    "start": "65040",
    "end": "68560"
  },
  {
    "text": "so what's the story here um",
    "start": "70880",
    "end": "74320"
  },
  {
    "text": "so",
    "start": "74320",
    "end": "75520"
  },
  {
    "text": "up here earlier was uh my boss william",
    "start": "75520",
    "end": "78320"
  },
  {
    "text": "morgan and he was talking about you know",
    "start": "78320",
    "end": "81280"
  },
  {
    "text": "linker d and service meshes should be",
    "start": "81280",
    "end": "83680"
  },
  {
    "text": "boring you shouldn't have to think about",
    "start": "83680",
    "end": "85119"
  },
  {
    "text": "them",
    "start": "85119",
    "end": "86640"
  },
  {
    "text": "as as a user",
    "start": "86640",
    "end": "89040"
  },
  {
    "text": "which i agree with but also as an",
    "start": "89040",
    "end": "91439"
  },
  {
    "text": "engineer",
    "start": "91439",
    "end": "92560"
  },
  {
    "text": "that works on a service mesh",
    "start": "92560",
    "end": "94960"
  },
  {
    "text": "i find",
    "start": "94960",
    "end": "96320"
  },
  {
    "text": "that once you like really like look",
    "start": "96320",
    "end": "98159"
  },
  {
    "text": "under the hood there can be a lot of",
    "start": "98159",
    "end": "100240"
  },
  {
    "text": "really interesting things in there",
    "start": "100240",
    "end": "103840"
  },
  {
    "text": "and so",
    "start": "103920",
    "end": "104880"
  },
  {
    "text": "today for talk when i'm talking about",
    "start": "104880",
    "end": "106799"
  },
  {
    "text": "protocol detection and the things that",
    "start": "106799",
    "end": "108799"
  },
  {
    "text": "we do to handle certain protocols",
    "start": "108799",
    "end": "111360"
  },
  {
    "text": "it's something that i have found to be",
    "start": "111360",
    "end": "114000"
  },
  {
    "text": "really interesting as i work on",
    "start": "114000",
    "end": "117280"
  },
  {
    "text": "so i'm hoping that everyone here also",
    "start": "117280",
    "end": "119520"
  },
  {
    "text": "finds it to be as interesting as me",
    "start": "119520",
    "end": "122719"
  },
  {
    "text": "and i'm always happy to talk about at",
    "start": "122719",
    "end": "124880"
  },
  {
    "text": "the end feel free to find me ask",
    "start": "124880",
    "end": "127040"
  },
  {
    "text": "questions um i'll also upload the slides",
    "start": "127040",
    "end": "130959"
  },
  {
    "text": "afterwards so",
    "start": "130959",
    "end": "132800"
  },
  {
    "text": "i'll have some diagrams later",
    "start": "132800",
    "end": "135680"
  },
  {
    "text": "lynn i think we used a similar diagram",
    "start": "135680",
    "end": "140000"
  },
  {
    "text": "tool so",
    "start": "140000",
    "end": "141280"
  },
  {
    "text": "um",
    "start": "141280",
    "end": "142720"
  },
  {
    "text": "yeah",
    "start": "142720",
    "end": "143680"
  },
  {
    "text": "but yeah so if you",
    "start": "143680",
    "end": "145440"
  },
  {
    "text": "want to pick take pictures of slide of",
    "start": "145440",
    "end": "148080"
  },
  {
    "text": "diagrams i'll have them uploaded later",
    "start": "148080",
    "end": "152560"
  },
  {
    "text": "so",
    "start": "152720",
    "end": "154800"
  },
  {
    "text": "i'm going to assume during this talk",
    "start": "154800",
    "end": "157120"
  },
  {
    "text": "some level of knowledge about",
    "start": "157120",
    "end": "160080"
  },
  {
    "text": "how i think most service meshes work",
    "start": "160080",
    "end": "162640"
  },
  {
    "text": "these days",
    "start": "162640",
    "end": "163920"
  },
  {
    "text": "but to just give a quick overview right",
    "start": "163920",
    "end": "166560"
  },
  {
    "text": "now",
    "start": "166560",
    "end": "168239"
  },
  {
    "text": "this is",
    "start": "168239",
    "end": "169200"
  },
  {
    "text": "specific to linguine but",
    "start": "169200",
    "end": "172000"
  },
  {
    "text": "can be pretty generalized so we have a",
    "start": "172000",
    "end": "176239"
  },
  {
    "text": "control plane and we have a data plane",
    "start": "176239",
    "end": "179200"
  },
  {
    "text": "so the data plane is going to be a pod",
    "start": "179200",
    "end": "182480"
  },
  {
    "text": "and you're going to have your",
    "start": "182480",
    "end": "183360"
  },
  {
    "text": "application container on there and then",
    "start": "183360",
    "end": "186159"
  },
  {
    "text": "you're going",
    "start": "186159",
    "end": "187440"
  },
  {
    "text": "with the injection model you're going to",
    "start": "187440",
    "end": "189440"
  },
  {
    "text": "have a proxy for linker d that's the",
    "start": "189440",
    "end": "192480"
  },
  {
    "text": "linker d proxy for other service meshes",
    "start": "192480",
    "end": "195040"
  },
  {
    "text": "that tends to be the envoy proxy",
    "start": "195040",
    "end": "199360"
  },
  {
    "text": "every pod then",
    "start": "199360",
    "end": "201920"
  },
  {
    "text": "talks to one single control plane and",
    "start": "201920",
    "end": "204319"
  },
  {
    "text": "for linker d the components within that",
    "start": "204319",
    "end": "207040"
  },
  {
    "text": "are the",
    "start": "207040",
    "end": "208560"
  },
  {
    "text": "identity service where each proxy gets",
    "start": "208560",
    "end": "210720"
  },
  {
    "text": "this identity for mtls",
    "start": "210720",
    "end": "213599"
  },
  {
    "text": "policy",
    "start": "213599",
    "end": "215440"
  },
  {
    "text": "destination which i'll be talking a",
    "start": "215440",
    "end": "216879"
  },
  {
    "text": "little bit more about",
    "start": "216879",
    "end": "218400"
  },
  {
    "text": "during this presentation",
    "start": "218400",
    "end": "220959"
  },
  {
    "text": "proxy injector for",
    "start": "220959",
    "end": "223040"
  },
  {
    "text": "handling injection",
    "start": "223040",
    "end": "225680"
  },
  {
    "text": "yeah so that's kind of the basic",
    "start": "225680",
    "end": "228159"
  },
  {
    "text": "architecture",
    "start": "228159",
    "end": "229360"
  },
  {
    "text": "and like i said i'll get a little bit",
    "start": "229360",
    "end": "230959"
  },
  {
    "text": "more into",
    "start": "230959",
    "end": "232560"
  },
  {
    "text": "uh",
    "start": "232560",
    "end": "233519"
  },
  {
    "text": "how we use the destination to handle",
    "start": "233519",
    "end": "236000"
  },
  {
    "text": "protocol detection",
    "start": "236000",
    "end": "238959"
  },
  {
    "text": "and again i'll try to stay pretty",
    "start": "238959",
    "end": "241200"
  },
  {
    "text": "general where i can i don't want this",
    "start": "241200",
    "end": "243280"
  },
  {
    "text": "this isn't",
    "start": "243280",
    "end": "244640"
  },
  {
    "text": "you know",
    "start": "244640",
    "end": "246159"
  },
  {
    "text": "a",
    "start": "246159",
    "end": "246959"
  },
  {
    "text": "trying to sell you specifically on link",
    "start": "246959",
    "end": "249519"
  },
  {
    "text": "or d it's it's more about",
    "start": "249519",
    "end": "251840"
  },
  {
    "text": "protocol detection and other service",
    "start": "251840",
    "end": "253840"
  },
  {
    "text": "meshes may do something similar",
    "start": "253840",
    "end": "256639"
  },
  {
    "text": "i'm sure every everyone has has this",
    "start": "256639",
    "end": "259359"
  },
  {
    "text": "thing that makes it",
    "start": "259359",
    "end": "261199"
  },
  {
    "text": "super interesting so",
    "start": "261199",
    "end": "264560"
  },
  {
    "text": "um before we dive into protocol",
    "start": "265120",
    "end": "267199"
  },
  {
    "text": "detection i want to clarify a little bit",
    "start": "267199",
    "end": "269199"
  },
  {
    "text": "about what zero config means in the in",
    "start": "269199",
    "end": "272080"
  },
  {
    "text": "the title",
    "start": "272080",
    "end": "273199"
  },
  {
    "text": "so linker d is easy to install uh it",
    "start": "273199",
    "end": "276479"
  },
  {
    "text": "tries not to break existing applications",
    "start": "276479",
    "end": "278800"
  },
  {
    "text": "it strives to use kubernetes primitives",
    "start": "278800",
    "end": "281680"
  },
  {
    "text": "when possible",
    "start": "281680",
    "end": "282960"
  },
  {
    "text": "and requires minimal configuration",
    "start": "282960",
    "end": "286639"
  },
  {
    "text": "so i'd like to focus on minimal",
    "start": "286639",
    "end": "287919"
  },
  {
    "text": "configuration and how that affects",
    "start": "287919",
    "end": "290400"
  },
  {
    "text": "existing applications",
    "start": "290400",
    "end": "293280"
  },
  {
    "text": "so every application",
    "start": "293280",
    "end": "295280"
  },
  {
    "text": "is going to have some protocol that it",
    "start": "295280",
    "end": "297280"
  },
  {
    "text": "uses whether that's tcp udp",
    "start": "297280",
    "end": "300320"
  },
  {
    "text": "or something built off of one of the",
    "start": "300320",
    "end": "302479"
  },
  {
    "text": "built off one of those like http smtp or",
    "start": "302479",
    "end": "306000"
  },
  {
    "text": "mysql",
    "start": "306000",
    "end": "307680"
  },
  {
    "text": "in order for linkerd to not break",
    "start": "307680",
    "end": "309360"
  },
  {
    "text": "existing applications",
    "start": "309360",
    "end": "311440"
  },
  {
    "text": "it must be able to be installed and all",
    "start": "311440",
    "end": "313919"
  },
  {
    "text": "these protocols continue working as they",
    "start": "313919",
    "end": "316720"
  },
  {
    "text": "were before",
    "start": "316720",
    "end": "318000"
  },
  {
    "text": "and what i mean by that is when you",
    "start": "318000",
    "end": "320479"
  },
  {
    "text": "install link or d you don't need to",
    "start": "320479",
    "end": "323280"
  },
  {
    "text": "go around and say you know service x is",
    "start": "323280",
    "end": "327280"
  },
  {
    "text": "this protocol and service y is this",
    "start": "327280",
    "end": "329600"
  },
  {
    "text": "protocol it just",
    "start": "329600",
    "end": "331600"
  },
  {
    "text": "keeps working",
    "start": "331600",
    "end": "334240"
  },
  {
    "text": "so how do we achieve this minimal",
    "start": "336160",
    "end": "338400"
  },
  {
    "text": "configuration that i'm talking about",
    "start": "338400",
    "end": "340080"
  },
  {
    "text": "protocol detection",
    "start": "340080",
    "end": "341680"
  },
  {
    "text": "so put simply protocol detection is the",
    "start": "341680",
    "end": "343919"
  },
  {
    "text": "ability for the",
    "start": "343919",
    "end": "345759"
  },
  {
    "text": "proxy to peak the first few bytes of",
    "start": "345759",
    "end": "348320"
  },
  {
    "text": "every client connection",
    "start": "348320",
    "end": "350000"
  },
  {
    "text": "and determine which protocol that client",
    "start": "350000",
    "end": "352479"
  },
  {
    "text": "is using",
    "start": "352479",
    "end": "354000"
  },
  {
    "text": "so",
    "start": "354000",
    "end": "355120"
  },
  {
    "text": "let's first remember that all",
    "start": "355120",
    "end": "356960"
  },
  {
    "text": "meshed application traffic inbound and",
    "start": "356960",
    "end": "359440"
  },
  {
    "text": "outbound is going to travel through a",
    "start": "359440",
    "end": "362160"
  },
  {
    "text": "proxy",
    "start": "362160",
    "end": "364000"
  },
  {
    "text": "and therefore the proxy is going to see",
    "start": "364000",
    "end": "366319"
  },
  {
    "text": "the first few bytes",
    "start": "366319",
    "end": "368080"
  },
  {
    "text": "of each connection that it handles",
    "start": "368080",
    "end": "370479"
  },
  {
    "text": "and it uses these bytes to determine",
    "start": "370479",
    "end": "373039"
  },
  {
    "text": "which protocol that client is using",
    "start": "373039",
    "end": "376560"
  },
  {
    "text": "so up here we can we can see the",
    "start": "376560",
    "end": "379199"
  },
  {
    "text": "prefaces for http one and two",
    "start": "379199",
    "end": "382880"
  },
  {
    "text": "um there are",
    "start": "382880",
    "end": "384720"
  },
  {
    "text": "each protocol is gonna have some",
    "start": "384720",
    "end": "387120"
  },
  {
    "text": "preface",
    "start": "387120",
    "end": "388160"
  },
  {
    "text": "that",
    "start": "388160",
    "end": "389039"
  },
  {
    "text": "can be used by the proxy and the proxy",
    "start": "389039",
    "end": "391120"
  },
  {
    "text": "can confidently say you know this is",
    "start": "391120",
    "end": "394160"
  },
  {
    "text": "this certain protocol and make decisions",
    "start": "394160",
    "end": "396560"
  },
  {
    "text": "based off of that",
    "start": "396560",
    "end": "399440"
  },
  {
    "text": "[Music]",
    "start": "400310",
    "end": "402160"
  },
  {
    "text": "so why does protocol detection matter",
    "start": "402160",
    "end": "404720"
  },
  {
    "text": "so",
    "start": "404720",
    "end": "405680"
  },
  {
    "text": "most features of a service mesh fall",
    "start": "405680",
    "end": "407840"
  },
  {
    "text": "into one of three buckets observability",
    "start": "407840",
    "end": "411440"
  },
  {
    "text": "reliability and security",
    "start": "411440",
    "end": "414319"
  },
  {
    "text": "understanding which protocol is being",
    "start": "414319",
    "end": "416639"
  },
  {
    "text": "used is fundamental to each of these",
    "start": "416639",
    "end": "419280"
  },
  {
    "text": "categories",
    "start": "419280",
    "end": "421199"
  },
  {
    "text": "so to dive a little bit more into that",
    "start": "421199",
    "end": "422960"
  },
  {
    "text": "first uh observability um",
    "start": "422960",
    "end": "426240"
  },
  {
    "text": "is",
    "start": "426240",
    "end": "428000"
  },
  {
    "text": "one of the core things is knowing which",
    "start": "428000",
    "end": "429680"
  },
  {
    "text": "protocol is being handled so that the",
    "start": "429680",
    "end": "431680"
  },
  {
    "text": "proxy can parse that traffic coming",
    "start": "431680",
    "end": "434240"
  },
  {
    "text": "through",
    "start": "434240",
    "end": "435120"
  },
  {
    "text": "and provide additional details",
    "start": "435120",
    "end": "438000"
  },
  {
    "text": "if that traffic is http for example then",
    "start": "438000",
    "end": "441599"
  },
  {
    "text": "it",
    "start": "441599",
    "end": "442400"
  },
  {
    "text": "can record the number of requests and",
    "start": "442400",
    "end": "444080"
  },
  {
    "text": "responses",
    "start": "444080",
    "end": "445680"
  },
  {
    "text": "and the response codes",
    "start": "445680",
    "end": "447440"
  },
  {
    "text": "additionally once it knows the traffic",
    "start": "447440",
    "end": "449840"
  },
  {
    "text": "requests and responses it can calculate",
    "start": "449840",
    "end": "452160"
  },
  {
    "text": "latencies volumes error rates",
    "start": "452160",
    "end": "456639"
  },
  {
    "text": "if the proxy can't determine the",
    "start": "456639",
    "end": "458720"
  },
  {
    "text": "protocol we're really just limited to",
    "start": "458720",
    "end": "460800"
  },
  {
    "text": "the number of bytes read and received by",
    "start": "460800",
    "end": "463680"
  },
  {
    "text": "the proxy",
    "start": "463680",
    "end": "465520"
  },
  {
    "text": "um",
    "start": "465520",
    "end": "466479"
  },
  {
    "text": "and",
    "start": "466479",
    "end": "467280"
  },
  {
    "text": "how that",
    "start": "467280",
    "end": "468240"
  },
  {
    "text": "shows up is here's some screenshots from",
    "start": "468240",
    "end": "470800"
  },
  {
    "text": "the linguity dashboard for example",
    "start": "470800",
    "end": "473599"
  },
  {
    "text": "i have a",
    "start": "473599",
    "end": "475759"
  },
  {
    "text": "meshed curl pod and a mesh as an nginx",
    "start": "475759",
    "end": "478479"
  },
  {
    "text": "pod when i send a request from the curl",
    "start": "478479",
    "end": "481039"
  },
  {
    "text": "pod to the engine x-pod we can see the",
    "start": "481039",
    "end": "484160"
  },
  {
    "text": "path",
    "start": "484160",
    "end": "485440"
  },
  {
    "text": "the latency",
    "start": "485440",
    "end": "487120"
  },
  {
    "text": "success rate",
    "start": "487120",
    "end": "489440"
  },
  {
    "text": "again pretty simple example but this is",
    "start": "489440",
    "end": "492560"
  },
  {
    "text": "the kind of things that we get when we",
    "start": "492560",
    "end": "494800"
  },
  {
    "text": "know the protocol that we're handling if",
    "start": "494800",
    "end": "496879"
  },
  {
    "text": "the proxy was unable to determine the",
    "start": "496879",
    "end": "498720"
  },
  {
    "text": "protocol um we wouldn't really get all",
    "start": "498720",
    "end": "501360"
  },
  {
    "text": "this",
    "start": "501360",
    "end": "503599"
  },
  {
    "text": "uh so reliability um again a lot of the",
    "start": "504720",
    "end": "507440"
  },
  {
    "text": "features are gonna",
    "start": "507440",
    "end": "509840"
  },
  {
    "text": "such as reliability uh rely on knowing",
    "start": "509840",
    "end": "512159"
  },
  {
    "text": "the protocol",
    "start": "512159",
    "end": "513360"
  },
  {
    "text": "um continuing the example of",
    "start": "513360",
    "end": "517039"
  },
  {
    "text": "assuming that we're working with http",
    "start": "517039",
    "end": "519760"
  },
  {
    "text": "we can move from",
    "start": "519760",
    "end": "521839"
  },
  {
    "text": "connection level load balancing to",
    "start": "521839",
    "end": "523919"
  },
  {
    "text": "request level load balancing",
    "start": "523919",
    "end": "526959"
  },
  {
    "text": "we can configure retry policies",
    "start": "526959",
    "end": "530800"
  },
  {
    "text": "and we can observe failures when they",
    "start": "530800",
    "end": "532959"
  },
  {
    "text": "occur",
    "start": "532959",
    "end": "535519"
  },
  {
    "text": "and then finally security protocol",
    "start": "535519",
    "end": "537519"
  },
  {
    "text": "detection is a little",
    "start": "537519",
    "end": "539120"
  },
  {
    "text": "um",
    "start": "539120",
    "end": "540240"
  },
  {
    "text": "less",
    "start": "540240",
    "end": "541279"
  },
  {
    "text": "important here but the the main thing is",
    "start": "541279",
    "end": "543920"
  },
  {
    "text": "that",
    "start": "543920",
    "end": "544720"
  },
  {
    "text": "we know if the application is already",
    "start": "544720",
    "end": "548480"
  },
  {
    "text": "encrypting the traffic and the proxy can",
    "start": "548480",
    "end": "551120"
  },
  {
    "text": "peak that and say you know this is",
    "start": "551120",
    "end": "552800"
  },
  {
    "text": "already tls so i'm not going to worry",
    "start": "552800",
    "end": "555839"
  },
  {
    "text": "about re-tlsing it even if",
    "start": "555839",
    "end": "558480"
  },
  {
    "text": "we're talking to a meshed server",
    "start": "558480",
    "end": "563240"
  },
  {
    "text": "so when does protocol detection fail um",
    "start": "564720",
    "end": "568720"
  },
  {
    "text": "the",
    "start": "568720",
    "end": "570959"
  },
  {
    "text": "everything that we've talked about so",
    "start": "571120",
    "end": "572720"
  },
  {
    "text": "far",
    "start": "572720",
    "end": "573839"
  },
  {
    "text": "is going to",
    "start": "573839",
    "end": "575680"
  },
  {
    "text": "usually a protocol that the client is",
    "start": "575680",
    "end": "578800"
  },
  {
    "text": "responsible for sending the",
    "start": "578800",
    "end": "581279"
  },
  {
    "text": "initial traffic",
    "start": "581279",
    "end": "583200"
  },
  {
    "text": "and these protocols are",
    "start": "583200",
    "end": "585440"
  },
  {
    "text": "you know known as client speaks first",
    "start": "585440",
    "end": "587200"
  },
  {
    "text": "protocols",
    "start": "587200",
    "end": "589200"
  },
  {
    "text": "and they initiate the connection and",
    "start": "589200",
    "end": "591040"
  },
  {
    "text": "they also send the initial traffic",
    "start": "591040",
    "end": "593279"
  },
  {
    "text": "and the proxy sees what bytes the client",
    "start": "593279",
    "end": "595519"
  },
  {
    "text": "sends",
    "start": "595519",
    "end": "596480"
  },
  {
    "text": "and can determine the protocol before it",
    "start": "596480",
    "end": "599200"
  },
  {
    "text": "establishes a connection to the server",
    "start": "599200",
    "end": "602399"
  },
  {
    "text": "because before it establishes a",
    "start": "602399",
    "end": "604160"
  },
  {
    "text": "connection to the server um",
    "start": "604160",
    "end": "606560"
  },
  {
    "text": "it will",
    "start": "606560",
    "end": "607600"
  },
  {
    "text": "make decisions like load balancing if",
    "start": "607600",
    "end": "609680"
  },
  {
    "text": "there's",
    "start": "609680",
    "end": "610959"
  },
  {
    "text": "several endpoints and and things like",
    "start": "610959",
    "end": "612640"
  },
  {
    "text": "that",
    "start": "612640",
    "end": "614880"
  },
  {
    "text": "so now server week source protocols",
    "start": "616079",
    "end": "618720"
  },
  {
    "text": "uh",
    "start": "618720",
    "end": "619519"
  },
  {
    "text": "these are protocols where the server is",
    "start": "619519",
    "end": "622160"
  },
  {
    "text": "listening for a client to initiate the",
    "start": "622160",
    "end": "624000"
  },
  {
    "text": "request but unlike the previous examples",
    "start": "624000",
    "end": "626880"
  },
  {
    "text": "like http it's the server that sends the",
    "start": "626880",
    "end": "630000"
  },
  {
    "text": "first bytes on the connection so it may",
    "start": "630000",
    "end": "633120"
  },
  {
    "text": "for example be telling the client it's",
    "start": "633120",
    "end": "634880"
  },
  {
    "text": "version or other important metadata",
    "start": "634880",
    "end": "637519"
  },
  {
    "text": "um",
    "start": "637519",
    "end": "638399"
  },
  {
    "text": "above are you know some protocols that",
    "start": "638399",
    "end": "640959"
  },
  {
    "text": "are server speaks first or where the",
    "start": "640959",
    "end": "643440"
  },
  {
    "text": "client",
    "start": "643440",
    "end": "645120"
  },
  {
    "text": "kind of keeps the connection warm but",
    "start": "645120",
    "end": "646720"
  },
  {
    "text": "doesn't necessarily send initial traffic",
    "start": "646720",
    "end": "649279"
  },
  {
    "text": "and",
    "start": "649279",
    "end": "650240"
  },
  {
    "text": "as you can see these aren't really that",
    "start": "650240",
    "end": "652560"
  },
  {
    "text": "uncommon um so this is",
    "start": "652560",
    "end": "655519"
  },
  {
    "text": "a something that the proxy should be",
    "start": "655519",
    "end": "658320"
  },
  {
    "text": "able to handle well",
    "start": "658320",
    "end": "661760"
  },
  {
    "text": "so now that we understand when protocol",
    "start": "661760",
    "end": "663440"
  },
  {
    "text": "detection fails um",
    "start": "663440",
    "end": "665440"
  },
  {
    "text": "and the protocols that cause these",
    "start": "665440",
    "end": "667360"
  },
  {
    "text": "failures i haven't really explained like",
    "start": "667360",
    "end": "669839"
  },
  {
    "text": "why these failures actually happen",
    "start": "669839",
    "end": "672720"
  },
  {
    "text": "the server doesn't eventually respond",
    "start": "672720",
    "end": "676000"
  },
  {
    "text": "because the proxy never makes a",
    "start": "676000",
    "end": "678079"
  },
  {
    "text": "connection in the first place",
    "start": "678079",
    "end": "680399"
  },
  {
    "text": "um so here's the scenario where there's",
    "start": "680399",
    "end": "682160"
  },
  {
    "text": "a mesh client and a meshed or",
    "start": "682160",
    "end": "685279"
  },
  {
    "text": "in this case just a mysql pod",
    "start": "685279",
    "end": "688160"
  },
  {
    "text": "and the client application container",
    "start": "688160",
    "end": "690000"
  },
  {
    "text": "initiates a connection to the mysql",
    "start": "690000",
    "end": "692640"
  },
  {
    "text": "server which is first intercepted by the",
    "start": "692640",
    "end": "695040"
  },
  {
    "text": "proxy",
    "start": "695040",
    "end": "696640"
  },
  {
    "text": "and before the proxy initiates its own",
    "start": "696640",
    "end": "698959"
  },
  {
    "text": "connection to the mysql server it waits",
    "start": "698959",
    "end": "701519"
  },
  {
    "text": "for traffic sent by the client so that",
    "start": "701519",
    "end": "703519"
  },
  {
    "text": "it can determine which protocol is being",
    "start": "703519",
    "end": "705200"
  },
  {
    "text": "used and make decisions like which load",
    "start": "705200",
    "end": "707600"
  },
  {
    "text": "balancer to use if there's multiple",
    "start": "707600",
    "end": "710160"
  },
  {
    "text": "mysql endpoints",
    "start": "710160",
    "end": "712639"
  },
  {
    "text": "as we've covered though it's the server",
    "start": "712639",
    "end": "714720"
  },
  {
    "text": "that is responsible for sending the",
    "start": "714720",
    "end": "717360"
  },
  {
    "text": "initial traffic in the mysql case so the",
    "start": "717360",
    "end": "720000"
  },
  {
    "text": "proxy is now stuck waiting",
    "start": "720000",
    "end": "722240"
  },
  {
    "text": "for a connection and it never",
    "start": "722240",
    "end": "724320"
  },
  {
    "text": "makes the other connection to the mysql",
    "start": "724320",
    "end": "726320"
  },
  {
    "text": "server",
    "start": "726320",
    "end": "728639"
  },
  {
    "text": "so",
    "start": "729760",
    "end": "730720"
  },
  {
    "text": "before i",
    "start": "730720",
    "end": "731839"
  },
  {
    "text": "dive into the",
    "start": "731839",
    "end": "733839"
  },
  {
    "text": "the solution that we now have um i'd",
    "start": "733839",
    "end": "735920"
  },
  {
    "text": "like to first cover like how we solved",
    "start": "735920",
    "end": "737920"
  },
  {
    "text": "this before",
    "start": "737920",
    "end": "740240"
  },
  {
    "text": "so we could skip certain ports uh skip",
    "start": "740240",
    "end": "742480"
  },
  {
    "text": "proxy in certain ports",
    "start": "742480",
    "end": "744800"
  },
  {
    "text": "how this worked is that",
    "start": "744800",
    "end": "747680"
  },
  {
    "text": "there are",
    "start": "747680",
    "end": "748959"
  },
  {
    "text": "skip inbound and outbound ports",
    "start": "748959",
    "end": "752399"
  },
  {
    "text": "and",
    "start": "752399",
    "end": "753680"
  },
  {
    "text": "this is handles handled at the ip tables",
    "start": "753680",
    "end": "756320"
  },
  {
    "text": "level so every pod is",
    "start": "756320",
    "end": "759040"
  },
  {
    "text": "going to have iptable rules",
    "start": "759040",
    "end": "761200"
  },
  {
    "text": "um and",
    "start": "761200",
    "end": "762720"
  },
  {
    "text": "if you configure a pod to",
    "start": "762720",
    "end": "766000"
  },
  {
    "text": "skip",
    "start": "766000",
    "end": "767519"
  },
  {
    "text": "skip you know port",
    "start": "767519",
    "end": "769560"
  },
  {
    "text": "3306 outbound that means that when a",
    "start": "769560",
    "end": "774399"
  },
  {
    "text": "application container sends a request to",
    "start": "774399",
    "end": "777680"
  },
  {
    "text": "some",
    "start": "777680",
    "end": "779040"
  },
  {
    "text": "destination with port 336 iptables is",
    "start": "779040",
    "end": "782240"
  },
  {
    "text": "the first thing that gets that request",
    "start": "782240",
    "end": "784160"
  },
  {
    "text": "says",
    "start": "784160",
    "end": "785440"
  },
  {
    "text": "we are not sending this the proxy first",
    "start": "785440",
    "end": "788240"
  },
  {
    "text": "and so",
    "start": "788240",
    "end": "789440"
  },
  {
    "text": "um the application now just establishes",
    "start": "789440",
    "end": "792079"
  },
  {
    "text": "a connection directly to that",
    "start": "792079",
    "end": "793440"
  },
  {
    "text": "destination",
    "start": "793440",
    "end": "794720"
  },
  {
    "text": "um and this means that the proxy never",
    "start": "794720",
    "end": "796880"
  },
  {
    "text": "sees that",
    "start": "796880",
    "end": "798079"
  },
  {
    "text": "um so this is good because we",
    "start": "798079",
    "end": "801600"
  },
  {
    "text": "now are handling service week source",
    "start": "801600",
    "end": "803200"
  },
  {
    "text": "protocols fine um but it's not good",
    "start": "803200",
    "end": "806079"
  },
  {
    "text": "because this isn't going through the",
    "start": "806079",
    "end": "807839"
  },
  {
    "text": "proxy and now none of this application",
    "start": "807839",
    "end": "810800"
  },
  {
    "text": "is meshed so",
    "start": "810800",
    "end": "812639"
  },
  {
    "text": "um if",
    "start": "812639",
    "end": "814560"
  },
  {
    "text": "for like mtls you're not going to get",
    "start": "814560",
    "end": "816560"
  },
  {
    "text": "that you're not going to get",
    "start": "816560",
    "end": "817920"
  },
  {
    "text": "observability you're not going to get",
    "start": "817920",
    "end": "819360"
  },
  {
    "text": "the reliability features of",
    "start": "819360",
    "end": "822000"
  },
  {
    "text": "retries and load balancing and things",
    "start": "822000",
    "end": "824480"
  },
  {
    "text": "like",
    "start": "824480",
    "end": "826639"
  },
  {
    "text": "that uh we could also stop trying to",
    "start": "826839",
    "end": "830000"
  },
  {
    "text": "detect the protocol after a certain",
    "start": "830000",
    "end": "831920"
  },
  {
    "text": "point",
    "start": "831920",
    "end": "833760"
  },
  {
    "text": "um so",
    "start": "833760",
    "end": "835440"
  },
  {
    "text": "we can you know this is handled with a",
    "start": "835440",
    "end": "837600"
  },
  {
    "text": "protocol detection timeout um the proxy",
    "start": "837600",
    "end": "840399"
  },
  {
    "text": "attempts to detect the protocol for some",
    "start": "840399",
    "end": "842320"
  },
  {
    "text": "certain period of time by default in",
    "start": "842320",
    "end": "844079"
  },
  {
    "text": "linguity this is 10 seconds",
    "start": "844079",
    "end": "846320"
  },
  {
    "text": "and if it fails to detect the connect",
    "start": "846320",
    "end": "848320"
  },
  {
    "text": "the protocol then it passes the",
    "start": "848320",
    "end": "850160"
  },
  {
    "text": "connection through as tcp",
    "start": "850160",
    "end": "853199"
  },
  {
    "text": "the upside to this is that this traffic",
    "start": "853199",
    "end": "855519"
  },
  {
    "text": "is now meshed",
    "start": "855519",
    "end": "857120"
  },
  {
    "text": "you get mtls and all the observability",
    "start": "857120",
    "end": "859279"
  },
  {
    "text": "features",
    "start": "859279",
    "end": "860399"
  },
  {
    "text": "but new connections experience a 10",
    "start": "860399",
    "end": "862720"
  },
  {
    "text": "second timeout which is not ideal",
    "start": "862720",
    "end": "866639"
  },
  {
    "text": "um this is",
    "start": "866639",
    "end": "868240"
  },
  {
    "text": "a issue that has come up and you know if",
    "start": "868240",
    "end": "871519"
  },
  {
    "text": "you've ever popped in our slack",
    "start": "871519",
    "end": "873440"
  },
  {
    "text": "um",
    "start": "873440",
    "end": "874480"
  },
  {
    "text": "we help",
    "start": "874480",
    "end": "875839"
  },
  {
    "text": "this is like one of the log lines we",
    "start": "875839",
    "end": "877199"
  },
  {
    "text": "look for and that",
    "start": "877199",
    "end": "878639"
  },
  {
    "text": "um we have an outbound",
    "start": "878639",
    "end": "881519"
  },
  {
    "text": "connection the client address it's going",
    "start": "881519",
    "end": "883760"
  },
  {
    "text": "to some server port 3306",
    "start": "883760",
    "end": "887440"
  },
  {
    "text": "and we are continuing after a certain",
    "start": "887440",
    "end": "889680"
  },
  {
    "text": "timeout",
    "start": "889680",
    "end": "890720"
  },
  {
    "text": "and that time out is the fact that we",
    "start": "890720",
    "end": "892959"
  },
  {
    "text": "could not detect the protocol",
    "start": "892959",
    "end": "895600"
  },
  {
    "text": "we usually look for these log lines if",
    "start": "895600",
    "end": "897920"
  },
  {
    "text": "users come in and say hey i'm",
    "start": "897920",
    "end": "899360"
  },
  {
    "text": "experiencing a 10 second connection",
    "start": "899360",
    "end": "901519"
  },
  {
    "text": "delay what's going on here",
    "start": "901519",
    "end": "904880"
  },
  {
    "text": "so this leads us to opaque ports",
    "start": "906079",
    "end": "908720"
  },
  {
    "text": "so we've reviewed the two existing",
    "start": "908720",
    "end": "910480"
  },
  {
    "text": "solutions of skip ports and protocol",
    "start": "910480",
    "end": "912399"
  },
  {
    "text": "detection timeouts both of these were",
    "start": "912399",
    "end": "914560"
  },
  {
    "text": "temporary solutions and",
    "start": "914560",
    "end": "916800"
  },
  {
    "text": "they both have their downsides",
    "start": "916800",
    "end": "919120"
  },
  {
    "text": "but opaque ports encompass",
    "start": "919120",
    "end": "921600"
  },
  {
    "text": "both of these by leveraging the control",
    "start": "921600",
    "end": "923440"
  },
  {
    "text": "plane's destination service",
    "start": "923440",
    "end": "925680"
  },
  {
    "text": "and alpn if both the client and the",
    "start": "925680",
    "end": "928560"
  },
  {
    "text": "server are meshed",
    "start": "928560",
    "end": "931680"
  },
  {
    "text": "so here's where we're going to dive a",
    "start": "932880",
    "end": "934240"
  },
  {
    "text": "little bit more into",
    "start": "934240",
    "end": "935759"
  },
  {
    "text": "what exactly the destination pod is or",
    "start": "935759",
    "end": "938480"
  },
  {
    "text": "destination service is doing",
    "start": "938480",
    "end": "940560"
  },
  {
    "text": "um so we can see a pretty simplified",
    "start": "940560",
    "end": "943279"
  },
  {
    "text": "example um the client",
    "start": "943279",
    "end": "945920"
  },
  {
    "text": "pods proxy has received an outbound",
    "start": "945920",
    "end": "948560"
  },
  {
    "text": "connection request for 10.4201",
    "start": "948560",
    "end": "951600"
  },
  {
    "text": "port",
    "start": "951600",
    "end": "952839"
  },
  {
    "text": "3306. uh it asks the destination service",
    "start": "952839",
    "end": "956079"
  },
  {
    "text": "about additional metadata uh for this",
    "start": "956079",
    "end": "958560"
  },
  {
    "text": "destination um the information it",
    "start": "958560",
    "end": "961759"
  },
  {
    "text": "expects back is the destination's tls",
    "start": "961759",
    "end": "964399"
  },
  {
    "text": "identity a list of endpoints if there",
    "start": "964399",
    "end": "967040"
  },
  {
    "text": "are",
    "start": "967040",
    "end": "968480"
  },
  {
    "text": "multiple",
    "start": "968480",
    "end": "970320"
  },
  {
    "text": "multiple endpoints behind that",
    "start": "970320",
    "end": "971759"
  },
  {
    "text": "destination",
    "start": "971759",
    "end": "973040"
  },
  {
    "text": "metric labels",
    "start": "973040",
    "end": "974480"
  },
  {
    "text": "and if this destination is an opaque",
    "start": "974480",
    "end": "977279"
  },
  {
    "text": "destination",
    "start": "977279",
    "end": "979279"
  },
  {
    "text": "so the destination service takes this",
    "start": "979279",
    "end": "980959"
  },
  {
    "text": "request",
    "start": "980959",
    "end": "982720"
  },
  {
    "text": "and",
    "start": "982720",
    "end": "983920"
  },
  {
    "text": "because it's on",
    "start": "983920",
    "end": "985440"
  },
  {
    "text": "the same cluster",
    "start": "985440",
    "end": "987120"
  },
  {
    "text": "in this case as the destination",
    "start": "987120",
    "end": "989040"
  },
  {
    "text": "it can look directly at that mysql pod",
    "start": "989040",
    "end": "991519"
  },
  {
    "text": "and it can look at the annotations on it",
    "start": "991519",
    "end": "994079"
  },
  {
    "text": "it can",
    "start": "994079",
    "end": "995440"
  },
  {
    "text": "from those annotations it can see that",
    "start": "995440",
    "end": "997680"
  },
  {
    "text": "this has been marked as opaque i can",
    "start": "997680",
    "end": "1000480"
  },
  {
    "text": "look at the pod spec of that mysql",
    "start": "1000480",
    "end": "1003120"
  },
  {
    "text": "server and see that it's injected",
    "start": "1003120",
    "end": "1006200"
  },
  {
    "text": "[Music]",
    "start": "1006200",
    "end": "1007680"
  },
  {
    "text": "and it takes that information bundles it",
    "start": "1007680",
    "end": "1010320"
  },
  {
    "text": "up in a destination profile and sends it",
    "start": "1010320",
    "end": "1012880"
  },
  {
    "text": "back to the client proxy and the client",
    "start": "1012880",
    "end": "1015360"
  },
  {
    "text": "proxy is responsible for using that",
    "start": "1015360",
    "end": "1018240"
  },
  {
    "text": "destination profile to make these",
    "start": "1018240",
    "end": "1020639"
  },
  {
    "text": "protocol",
    "start": "1020639",
    "end": "1022240"
  },
  {
    "text": "detection decisions",
    "start": "1022240",
    "end": "1025800"
  },
  {
    "text": "so",
    "start": "1026319",
    "end": "1027760"
  },
  {
    "text": "this is",
    "start": "1027760",
    "end": "1028798"
  },
  {
    "text": "the most text slide uh so i will try to",
    "start": "1028799",
    "end": "1032240"
  },
  {
    "text": "keep this brief but basically what we're",
    "start": "1032240",
    "end": "1034558"
  },
  {
    "text": "seeing here is i made two destination",
    "start": "1034559",
    "end": "1036798"
  },
  {
    "text": "requests i'm just running the",
    "start": "1036799",
    "end": "1038079"
  },
  {
    "text": "destination service locally",
    "start": "1038079",
    "end": "1040558"
  },
  {
    "text": "and",
    "start": "1040559",
    "end": "1041760"
  },
  {
    "text": "it's i made it for the same path 10.42 0",
    "start": "1041760",
    "end": "1045199"
  },
  {
    "text": "14 port 80. the difference between these",
    "start": "1045199",
    "end": "1048160"
  },
  {
    "text": "two destination service requests",
    "start": "1048160",
    "end": "1050640"
  },
  {
    "text": "is that i added",
    "start": "1050640",
    "end": "1053039"
  },
  {
    "text": "i configured the destination i think was",
    "start": "1053039",
    "end": "1056000"
  },
  {
    "text": "an nginx pod in this case",
    "start": "1056000",
    "end": "1058320"
  },
  {
    "text": "uh to be opaque on port 80 for the",
    "start": "1058320",
    "end": "1061280"
  },
  {
    "text": "second request",
    "start": "1061280",
    "end": "1062880"
  },
  {
    "text": "and so",
    "start": "1062880",
    "end": "1064160"
  },
  {
    "text": "you can see that the responses are these",
    "start": "1064160",
    "end": "1066160"
  },
  {
    "text": "structured destination profiles that i",
    "start": "1066160",
    "end": "1068160"
  },
  {
    "text": "was explaining on the last side",
    "start": "1068160",
    "end": "1070240"
  },
  {
    "text": "but the second destination request is",
    "start": "1070240",
    "end": "1073200"
  },
  {
    "text": "differs from the first with the red",
    "start": "1073200",
    "end": "1075120"
  },
  {
    "text": "highlighting we can see that there's now",
    "start": "1075120",
    "end": "1077360"
  },
  {
    "text": "two new fields returned to the client",
    "start": "1077360",
    "end": "1081039"
  },
  {
    "text": "proxy in this case the first is this",
    "start": "1081039",
    "end": "1083679"
  },
  {
    "text": "opaque protocol true",
    "start": "1083679",
    "end": "1085600"
  },
  {
    "text": "and the second is this protocol hint",
    "start": "1085600",
    "end": "1088160"
  },
  {
    "text": "that says",
    "start": "1088160",
    "end": "1089760"
  },
  {
    "text": "you know",
    "start": "1089760",
    "end": "1090880"
  },
  {
    "text": "opaque transport with an inbound port of",
    "start": "1090880",
    "end": "1093480"
  },
  {
    "text": "4143",
    "start": "1093480",
    "end": "1095120"
  },
  {
    "text": "and",
    "start": "1095120",
    "end": "1096480"
  },
  {
    "text": "these two fields are",
    "start": "1096480",
    "end": "1099039"
  },
  {
    "text": "uh the the crux for how we implemented",
    "start": "1099039",
    "end": "1101520"
  },
  {
    "text": "opaque ports and i'll be explaining um",
    "start": "1101520",
    "end": "1104720"
  },
  {
    "text": "how these how the proxy actually use",
    "start": "1104720",
    "end": "1106720"
  },
  {
    "text": "these fields",
    "start": "1106720",
    "end": "1108799"
  },
  {
    "text": "to to solve this problem",
    "start": "1108799",
    "end": "1112320"
  },
  {
    "text": "so how do we use opaque protocol field",
    "start": "1112559",
    "end": "1116559"
  },
  {
    "text": "basically",
    "start": "1116559",
    "end": "1118000"
  },
  {
    "text": "we're kind of dive",
    "start": "1118000",
    "end": "1120000"
  },
  {
    "text": "dive inside of the pod now",
    "start": "1120000",
    "end": "1122640"
  },
  {
    "text": "and we have this application container",
    "start": "1122640",
    "end": "1125280"
  },
  {
    "text": "and then the proxy container",
    "start": "1125280",
    "end": "1127200"
  },
  {
    "text": "and one of the first things that the",
    "start": "1127200",
    "end": "1128960"
  },
  {
    "text": "proxy container looks at is this opaque",
    "start": "1128960",
    "end": "1131120"
  },
  {
    "text": "protocol field",
    "start": "1131120",
    "end": "1132559"
  },
  {
    "text": "if it's false",
    "start": "1132559",
    "end": "1134160"
  },
  {
    "text": "then the proxy when it's",
    "start": "1134160",
    "end": "1137840"
  },
  {
    "text": "making the connection it's going to wait",
    "start": "1137840",
    "end": "1141120"
  },
  {
    "text": "to detect the protocol",
    "start": "1141120",
    "end": "1142960"
  },
  {
    "text": "if opaque protocol is set to true then",
    "start": "1142960",
    "end": "1145760"
  },
  {
    "text": "the proxy knows you know the client is",
    "start": "1145760",
    "end": "1148320"
  },
  {
    "text": "not going to be sending any information",
    "start": "1148320",
    "end": "1149919"
  },
  {
    "text": "on this so i'm going to pass this",
    "start": "1149919",
    "end": "1151840"
  },
  {
    "text": "through as tcp and make the connection",
    "start": "1151840",
    "end": "1154480"
  },
  {
    "text": "to the server right away",
    "start": "1154480",
    "end": "1157600"
  },
  {
    "text": "also keep in mind that this happens",
    "start": "1157919",
    "end": "1160480"
  },
  {
    "text": "very early in in the proxy in the path",
    "start": "1160480",
    "end": "1164720"
  },
  {
    "text": "that the connection takes",
    "start": "1164720",
    "end": "1166799"
  },
  {
    "text": "um because after it's determined",
    "start": "1166799",
    "end": "1170320"
  },
  {
    "text": "if it's gonna use tcp or detect the",
    "start": "1170320",
    "end": "1172960"
  },
  {
    "text": "protocol it still has to make decisions",
    "start": "1172960",
    "end": "1175360"
  },
  {
    "text": "like if it's gonna",
    "start": "1175360",
    "end": "1176640"
  },
  {
    "text": "uh encrypt the traffic or not",
    "start": "1176640",
    "end": "1180559"
  },
  {
    "text": "so",
    "start": "1182480",
    "end": "1184000"
  },
  {
    "text": "before i explain the opaque transport",
    "start": "1184000",
    "end": "1186000"
  },
  {
    "text": "field i want to explain real quick why",
    "start": "1186000",
    "end": "1188400"
  },
  {
    "text": "we actually annotate the destination so",
    "start": "1188400",
    "end": "1191520"
  },
  {
    "text": "the opaque",
    "start": "1191520",
    "end": "1192400"
  },
  {
    "text": "ports uh annotation it you're supposed",
    "start": "1192400",
    "end": "1195360"
  },
  {
    "text": "to we put it on the destination um",
    "start": "1195360",
    "end": "1199039"
  },
  {
    "text": "and",
    "start": "1199039",
    "end": "1199840"
  },
  {
    "text": "it's for the reason",
    "start": "1199840",
    "end": "1201600"
  },
  {
    "text": "that",
    "start": "1201600",
    "end": "1202720"
  },
  {
    "text": "on the left here we have the client pod",
    "start": "1202720",
    "end": "1205280"
  },
  {
    "text": "and if the proxy can't determine the",
    "start": "1205280",
    "end": "1207520"
  },
  {
    "text": "protocol",
    "start": "1207520",
    "end": "1208559"
  },
  {
    "text": "it'll pass through that traffic because",
    "start": "1208559",
    "end": "1211440"
  },
  {
    "text": "it's it's just sending this traffic",
    "start": "1211440",
    "end": "1213840"
  },
  {
    "text": "some to some destination doesn't really",
    "start": "1213840",
    "end": "1215919"
  },
  {
    "text": "care",
    "start": "1215919",
    "end": "1216799"
  },
  {
    "text": "if it",
    "start": "1216799",
    "end": "1219039"
  },
  {
    "text": "if it can't determine the protocol and",
    "start": "1219039",
    "end": "1221440"
  },
  {
    "text": "then you know if",
    "start": "1221440",
    "end": "1223280"
  },
  {
    "text": "say it waits 10 seconds it doesn't get",
    "start": "1223280",
    "end": "1225520"
  },
  {
    "text": "anything it'll start passing that",
    "start": "1225520",
    "end": "1227440"
  },
  {
    "text": "traffic through maybe then it gets the",
    "start": "1227440",
    "end": "1230799"
  },
  {
    "text": "client hello for an mtls connection",
    "start": "1230799",
    "end": "1234400"
  },
  {
    "text": "it doesn't really care if that gets to",
    "start": "1234400",
    "end": "1236080"
  },
  {
    "text": "the",
    "start": "1236080",
    "end": "1236880"
  },
  {
    "text": "wherever it's going later",
    "start": "1236880",
    "end": "1239520"
  },
  {
    "text": "but on the destination side of things",
    "start": "1239520",
    "end": "1242240"
  },
  {
    "text": "the proxy",
    "start": "1242240",
    "end": "1243679"
  },
  {
    "text": "can't",
    "start": "1243679",
    "end": "1244880"
  },
  {
    "text": "time out",
    "start": "1244880",
    "end": "1246080"
  },
  {
    "text": "and then send this to the application",
    "start": "1246080",
    "end": "1249280"
  },
  {
    "text": "because",
    "start": "1249280",
    "end": "1250559"
  },
  {
    "text": "it may",
    "start": "1250559",
    "end": "1251919"
  },
  {
    "text": "like if the proxy receives an mtls",
    "start": "1251919",
    "end": "1254159"
  },
  {
    "text": "connection",
    "start": "1254159",
    "end": "1255200"
  },
  {
    "text": "and then says oh i can't determine the",
    "start": "1255200",
    "end": "1257360"
  },
  {
    "text": "protocol i'm just going to start sending",
    "start": "1257360",
    "end": "1259520"
  },
  {
    "text": "this all right to the application and",
    "start": "1259520",
    "end": "1261520"
  },
  {
    "text": "then it gets a client hello for an mtls",
    "start": "1261520",
    "end": "1264400"
  },
  {
    "text": "connection it's now feeding the",
    "start": "1264400",
    "end": "1266240"
  },
  {
    "text": "application just a bunch of",
    "start": "1266240",
    "end": "1269760"
  },
  {
    "text": "basically garbage traffic because it's",
    "start": "1269760",
    "end": "1272240"
  },
  {
    "text": "all encrypted",
    "start": "1272240",
    "end": "1274080"
  },
  {
    "text": "so therefore the destination needs to",
    "start": "1274080",
    "end": "1276159"
  },
  {
    "text": "know if its ports are going to be opaque",
    "start": "1276159",
    "end": "1279200"
  },
  {
    "text": "or not and the clients can just observe",
    "start": "1279200",
    "end": "1281039"
  },
  {
    "text": "that",
    "start": "1281039",
    "end": "1283279"
  },
  {
    "text": "so now uh",
    "start": "1285360",
    "end": "1286799"
  },
  {
    "text": "jumping into how opaque transport is",
    "start": "1286799",
    "end": "1288559"
  },
  {
    "text": "used",
    "start": "1288559",
    "end": "1290080"
  },
  {
    "text": "so we've established that we should not",
    "start": "1290080",
    "end": "1291760"
  },
  {
    "text": "detect the protocol for a connection",
    "start": "1291760",
    "end": "1293679"
  },
  {
    "text": "using the opaque protocol field",
    "start": "1293679",
    "end": "1296159"
  },
  {
    "text": "but now we need to ensure that the",
    "start": "1296159",
    "end": "1297600"
  },
  {
    "text": "connection is tlsed if the server is",
    "start": "1297600",
    "end": "1300480"
  },
  {
    "text": "also meshed",
    "start": "1300480",
    "end": "1303799"
  },
  {
    "text": "and what i mean by this is that",
    "start": "1304159",
    "end": "1306880"
  },
  {
    "text": "the proxy is making an outbound",
    "start": "1306880",
    "end": "1308480"
  },
  {
    "text": "connection and it's determined that it",
    "start": "1308480",
    "end": "1309679"
  },
  {
    "text": "should not detect the protocol",
    "start": "1309679",
    "end": "1311840"
  },
  {
    "text": "but now we need to determine whether it",
    "start": "1311840",
    "end": "1313520"
  },
  {
    "text": "should tls the connection and has to be",
    "start": "1313520",
    "end": "1316159"
  },
  {
    "text": "careful about doing this if the server",
    "start": "1316159",
    "end": "1318720"
  },
  {
    "text": "isn't meshed",
    "start": "1318720",
    "end": "1320159"
  },
  {
    "text": "then",
    "start": "1320159",
    "end": "1322000"
  },
  {
    "text": "the proxy doesn't want to encrypt that",
    "start": "1322000",
    "end": "1324799"
  },
  {
    "text": "traffic because the server isn't going",
    "start": "1324799",
    "end": "1326480"
  },
  {
    "text": "to know how to decrypt it so it has to",
    "start": "1326480",
    "end": "1329200"
  },
  {
    "text": "the client has to also know the server",
    "start": "1329200",
    "end": "1332080"
  },
  {
    "text": "it has another linguity proxy and that",
    "start": "1332080",
    "end": "1335360"
  },
  {
    "text": "we",
    "start": "1335360",
    "end": "1336400"
  },
  {
    "text": "that linkedin proxy will be able to",
    "start": "1336400",
    "end": "1337919"
  },
  {
    "text": "decrypt it before it passes it into the",
    "start": "1337919",
    "end": "1340159"
  },
  {
    "text": "server",
    "start": "1340159",
    "end": "1342559"
  },
  {
    "text": "so this is where opaque transport",
    "start": "1344159",
    "end": "1346400"
  },
  {
    "text": "field comes into play uh we've decided",
    "start": "1346400",
    "end": "1348960"
  },
  {
    "text": "that you know opaque protocol is true so",
    "start": "1348960",
    "end": "1350960"
  },
  {
    "text": "that we're gonna use tcp",
    "start": "1350960",
    "end": "1353200"
  },
  {
    "text": "and now we look at opaque transport",
    "start": "1353200",
    "end": "1355039"
  },
  {
    "text": "field",
    "start": "1355039",
    "end": "1356000"
  },
  {
    "text": "uh if there is no opaque transport field",
    "start": "1356000",
    "end": "1359520"
  },
  {
    "text": "in the protocol hint",
    "start": "1359520",
    "end": "1360960"
  },
  {
    "text": "then we'll pass just to the original",
    "start": "1360960",
    "end": "1364080"
  },
  {
    "text": "port number which in this case is port",
    "start": "1364080",
    "end": "1365679"
  },
  {
    "text": "3306",
    "start": "1365679",
    "end": "1367360"
  },
  {
    "text": "if we do have an inbound port that we",
    "start": "1367360",
    "end": "1369039"
  },
  {
    "text": "should use in this case it's 4143 and",
    "start": "1369039",
    "end": "1371760"
  },
  {
    "text": "i'll explain why in a sec",
    "start": "1371760",
    "end": "1373360"
  },
  {
    "text": "then we're going to pass our traffic to",
    "start": "1373360",
    "end": "1376240"
  },
  {
    "text": "that port",
    "start": "1376240",
    "end": "1378480"
  },
  {
    "text": "and that port tends to be the proxy on",
    "start": "1378480",
    "end": "1382080"
  },
  {
    "text": "the other end",
    "start": "1382080",
    "end": "1383520"
  },
  {
    "text": "because the proxy is going to be running",
    "start": "1383520",
    "end": "1384799"
  },
  {
    "text": "on a separate port than the",
    "start": "1384799",
    "end": "1387520"
  },
  {
    "text": "application",
    "start": "1387520",
    "end": "1389840"
  },
  {
    "text": "and so",
    "start": "1392159",
    "end": "1393120"
  },
  {
    "text": "it's pretty simple to get here is",
    "start": "1393120",
    "end": "1396640"
  },
  {
    "text": "some simplified code from the control",
    "start": "1396640",
    "end": "1399280"
  },
  {
    "text": "plane go",
    "start": "1399280",
    "end": "1400880"
  },
  {
    "text": "and we basically the destination service",
    "start": "1400880",
    "end": "1404000"
  },
  {
    "text": "when it's making this destination",
    "start": "1404000",
    "end": "1405440"
  },
  {
    "text": "profile that i talked about before looks",
    "start": "1405440",
    "end": "1407520"
  },
  {
    "text": "at the pod spec",
    "start": "1407520",
    "end": "1408880"
  },
  {
    "text": "loops through all the containers until",
    "start": "1408880",
    "end": "1410720"
  },
  {
    "text": "it finds the link with the proxy",
    "start": "1410720",
    "end": "1413200"
  },
  {
    "text": "it then loops through all of the",
    "start": "1413200",
    "end": "1414640"
  },
  {
    "text": "environment variables in the proxy and",
    "start": "1414640",
    "end": "1416880"
  },
  {
    "text": "it looks for this proxy inbound listen",
    "start": "1416880",
    "end": "1419280"
  },
  {
    "text": "adder environment variable",
    "start": "1419280",
    "end": "1421440"
  },
  {
    "text": "once it finds that",
    "start": "1421440",
    "end": "1422880"
  },
  {
    "text": "then it takes that address and it says",
    "start": "1422880",
    "end": "1426799"
  },
  {
    "text": "in the destination profile hey the proxy",
    "start": "1426799",
    "end": "1429360"
  },
  {
    "text": "is listening on this port 4143",
    "start": "1429360",
    "end": "1433279"
  },
  {
    "text": "so when you establish",
    "start": "1433279",
    "end": "1435440"
  },
  {
    "text": "this",
    "start": "1435440",
    "end": "1436640"
  },
  {
    "text": "tls connection",
    "start": "1436640",
    "end": "1438240"
  },
  {
    "text": "send your traffic to there",
    "start": "1438240",
    "end": "1440080"
  },
  {
    "text": "and then it will go to the application",
    "start": "1440080",
    "end": "1442559"
  },
  {
    "text": "port three three three three zero six",
    "start": "1442559",
    "end": "1446880"
  },
  {
    "text": "and so that's when alpn comes into play",
    "start": "1448880",
    "end": "1452720"
  },
  {
    "text": "so aopn is application layer protocol",
    "start": "1452720",
    "end": "1455760"
  },
  {
    "text": "negotiation and it's a tls extension",
    "start": "1455760",
    "end": "1458960"
  },
  {
    "text": "that allows an application to negotiate",
    "start": "1458960",
    "end": "1461279"
  },
  {
    "text": "which protocol should be performed over",
    "start": "1461279",
    "end": "1463440"
  },
  {
    "text": "a secure connection",
    "start": "1463440",
    "end": "1465200"
  },
  {
    "text": "the",
    "start": "1465200",
    "end": "1466000"
  },
  {
    "text": "protocol that is performed or this",
    "start": "1466000",
    "end": "1468640"
  },
  {
    "text": "secure connection in meshed",
    "start": "1468640",
    "end": "1470840"
  },
  {
    "text": "scenarios is this transport l5d dot io",
    "start": "1470840",
    "end": "1475279"
  },
  {
    "text": "version one",
    "start": "1475279",
    "end": "1477919"
  },
  {
    "text": "and so",
    "start": "1478640",
    "end": "1480320"
  },
  {
    "text": "what this is is it's",
    "start": "1480320",
    "end": "1482880"
  },
  {
    "text": "this",
    "start": "1482880",
    "end": "1484080"
  },
  {
    "text": "uh",
    "start": "1484080",
    "end": "1485279"
  },
  {
    "text": "additional protocol that we wrap an mtls",
    "start": "1485279",
    "end": "1488159"
  },
  {
    "text": "connection with",
    "start": "1488159",
    "end": "1489520"
  },
  {
    "text": "and",
    "start": "1489520",
    "end": "1490480"
  },
  {
    "text": "the client and the server which which",
    "start": "1490480",
    "end": "1493600"
  },
  {
    "text": "are in this case are both linguity",
    "start": "1493600",
    "end": "1495440"
  },
  {
    "text": "proxies are responsible for knowing um",
    "start": "1495440",
    "end": "1498960"
  },
  {
    "text": "that we're dealing with this transport",
    "start": "1498960",
    "end": "1502559"
  },
  {
    "text": "protocol that's wrapping an mtls",
    "start": "1502559",
    "end": "1505440"
  },
  {
    "text": "connection",
    "start": "1505440",
    "end": "1506559"
  },
  {
    "text": "um if the client knows that the server",
    "start": "1506559",
    "end": "1511440"
  },
  {
    "text": "speaks this transport l5d io protocol",
    "start": "1511440",
    "end": "1515520"
  },
  {
    "text": "then it knows that",
    "start": "1515520",
    "end": "1517279"
  },
  {
    "text": "it's talking to port 4143",
    "start": "1517279",
    "end": "1520480"
  },
  {
    "text": "and",
    "start": "1520480",
    "end": "1521600"
  },
  {
    "text": "the first thing it sends is this little",
    "start": "1521600",
    "end": "1524480"
  },
  {
    "text": "header that says hey once we've",
    "start": "1524480",
    "end": "1526880"
  },
  {
    "text": "established our connection",
    "start": "1526880",
    "end": "1529919"
  },
  {
    "text": "in this header is the",
    "start": "1529919",
    "end": "1532320"
  },
  {
    "text": "actual destination port 3306 in this",
    "start": "1532320",
    "end": "1535360"
  },
  {
    "text": "example so send this traffic to there",
    "start": "1535360",
    "end": "1538240"
  },
  {
    "text": "once you've decrypted it",
    "start": "1538240",
    "end": "1542360"
  },
  {
    "text": "and this kind of explains that um in",
    "start": "1542640",
    "end": "1546320"
  },
  {
    "text": "that the client proxy says you know hey",
    "start": "1546320",
    "end": "1548880"
  },
  {
    "text": "do you speak this",
    "start": "1548880",
    "end": "1550159"
  },
  {
    "text": "the server proxy says yep i'm good to go",
    "start": "1550159",
    "end": "1553440"
  },
  {
    "text": "client proxy says okay",
    "start": "1553440",
    "end": "1555440"
  },
  {
    "text": "here is this header port 3306",
    "start": "1555440",
    "end": "1559039"
  },
  {
    "text": "uh once you start receiving my traffic",
    "start": "1559039",
    "end": "1561440"
  },
  {
    "text": "and you've decrypted it",
    "start": "1561440",
    "end": "1563120"
  },
  {
    "text": "uh take that traffic and send it to this",
    "start": "1563120",
    "end": "1565760"
  },
  {
    "text": "port",
    "start": "1565760",
    "end": "1566640"
  },
  {
    "text": "uh in your pod",
    "start": "1566640",
    "end": "1568720"
  },
  {
    "text": "and so that's how we're able to",
    "start": "1568720",
    "end": "1572240"
  },
  {
    "text": "have this",
    "start": "1572240",
    "end": "1573440"
  },
  {
    "text": "traffic encrypted uh but it's also how",
    "start": "1573440",
    "end": "1576720"
  },
  {
    "text": "the server proxy knows where to send it",
    "start": "1576720",
    "end": "1579360"
  },
  {
    "text": "on the pod once it's been decrypted",
    "start": "1579360",
    "end": "1583640"
  },
  {
    "text": "so that's",
    "start": "1585039",
    "end": "1587520"
  },
  {
    "text": "how",
    "start": "1587520",
    "end": "1588320"
  },
  {
    "text": "we use these fields and the destination",
    "start": "1588320",
    "end": "1590240"
  },
  {
    "text": "service to to",
    "start": "1590240",
    "end": "1592159"
  },
  {
    "text": "achieve this",
    "start": "1592159",
    "end": "1594240"
  },
  {
    "text": "so",
    "start": "1594240",
    "end": "1595039"
  },
  {
    "text": "here's kind of like the",
    "start": "1595039",
    "end": "1596400"
  },
  {
    "text": "the last major decision tree that that",
    "start": "1596400",
    "end": "1599120"
  },
  {
    "text": "we work through um and so sometimes",
    "start": "1599120",
    "end": "1602400"
  },
  {
    "text": "configuration is required",
    "start": "1602400",
    "end": "1604480"
  },
  {
    "text": "uh",
    "start": "1604480",
    "end": "1605919"
  },
  {
    "text": "the text looks a little small in here",
    "start": "1605919",
    "end": "1607600"
  },
  {
    "text": "but uh",
    "start": "1607600",
    "end": "1608559"
  },
  {
    "text": "up at the top",
    "start": "1608559",
    "end": "1610400"
  },
  {
    "text": "the first thing that we determine is",
    "start": "1610400",
    "end": "1612720"
  },
  {
    "text": "is this protocol wrapped in tls",
    "start": "1612720",
    "end": "1615120"
  },
  {
    "text": "if it is then no configuration's ever",
    "start": "1615120",
    "end": "1617520"
  },
  {
    "text": "going to be required",
    "start": "1617520",
    "end": "1618880"
  },
  {
    "text": "um",
    "start": "1618880",
    "end": "1620080"
  },
  {
    "text": "if it's not then we have to look at the",
    "start": "1620080",
    "end": "1622880"
  },
  {
    "text": "opaque ports",
    "start": "1622880",
    "end": "1624799"
  },
  {
    "text": "if it's",
    "start": "1624799",
    "end": "1625840"
  },
  {
    "text": "if it is an opaque port and we",
    "start": "1625840",
    "end": "1628480"
  },
  {
    "text": "are in the network that we're aware of",
    "start": "1628480",
    "end": "1631039"
  },
  {
    "text": "no configuration is required um and if",
    "start": "1631039",
    "end": "1634559"
  },
  {
    "text": "the destination is not in this cluster's",
    "start": "1634559",
    "end": "1637440"
  },
  {
    "text": "networks",
    "start": "1637440",
    "end": "1638559"
  },
  {
    "text": "then we have to",
    "start": "1638559",
    "end": "1641120"
  },
  {
    "text": "enable",
    "start": "1641120",
    "end": "1642799"
  },
  {
    "text": "profile searches for that destination so",
    "start": "1642799",
    "end": "1645600"
  },
  {
    "text": "that we can",
    "start": "1645600",
    "end": "1647039"
  },
  {
    "text": "see if it's opaque or not",
    "start": "1647039",
    "end": "1649520"
  },
  {
    "text": "you can mark destinations as opaque that",
    "start": "1649520",
    "end": "1652799"
  },
  {
    "text": "aren't necessarily",
    "start": "1652799",
    "end": "1654399"
  },
  {
    "text": "meshed or on that cluster",
    "start": "1654399",
    "end": "1656880"
  },
  {
    "text": "um and if it's not an opaque port by",
    "start": "1656880",
    "end": "1659840"
  },
  {
    "text": "default",
    "start": "1659840",
    "end": "1660799"
  },
  {
    "text": "then you have to add it if we're working",
    "start": "1660799",
    "end": "1664000"
  },
  {
    "text": "with something in the cluster network",
    "start": "1664000",
    "end": "1666559"
  },
  {
    "text": "and if it's uh not annotated as opaque",
    "start": "1666559",
    "end": "1670640"
  },
  {
    "text": "and it's not in the cluster networks",
    "start": "1670640",
    "end": "1672960"
  },
  {
    "text": "then you do have to fall back to",
    "start": "1672960",
    "end": "1674399"
  },
  {
    "text": "skipping it um so that it doesn't go",
    "start": "1674399",
    "end": "1677120"
  },
  {
    "text": "through the proxy in the first place",
    "start": "1677120",
    "end": "1681158"
  },
  {
    "text": "we've",
    "start": "1683200",
    "end": "1684320"
  },
  {
    "text": "i talked",
    "start": "1684320",
    "end": "1685440"
  },
  {
    "text": "briefly about and william was up here",
    "start": "1685440",
    "end": "1687440"
  },
  {
    "text": "earlier talking about policy um it's",
    "start": "1687440",
    "end": "1690240"
  },
  {
    "text": "kind of the one of the newer ways that",
    "start": "1690240",
    "end": "1692720"
  },
  {
    "text": "we've introduced recently to",
    "start": "1692720",
    "end": "1694880"
  },
  {
    "text": "mark destinations as opaque you can use",
    "start": "1694880",
    "end": "1698240"
  },
  {
    "text": "servers and server policies",
    "start": "1698240",
    "end": "1700480"
  },
  {
    "text": "to",
    "start": "1700480",
    "end": "1702000"
  },
  {
    "text": "handle",
    "start": "1702000",
    "end": "1703200"
  },
  {
    "text": "marking destinations as opaque if you",
    "start": "1703200",
    "end": "1705440"
  },
  {
    "text": "don't want to worry about configuring",
    "start": "1705440",
    "end": "1708720"
  },
  {
    "text": "configuring",
    "start": "1708720",
    "end": "1710240"
  },
  {
    "text": "the",
    "start": "1710240",
    "end": "1711679"
  },
  {
    "text": "through annotations",
    "start": "1711679",
    "end": "1713200"
  },
  {
    "text": "um",
    "start": "1713200",
    "end": "1714080"
  },
  {
    "text": "so",
    "start": "1714080",
    "end": "1715279"
  },
  {
    "text": "yeah uh policy is still pretty new but",
    "start": "1715279",
    "end": "1717760"
  },
  {
    "text": "it's",
    "start": "1717760",
    "end": "1718720"
  },
  {
    "text": "will probably be the default way that we",
    "start": "1718720",
    "end": "1720320"
  },
  {
    "text": "move to for uh marking things as opaque",
    "start": "1720320",
    "end": "1724960"
  },
  {
    "text": "so yeah questions i",
    "start": "1724960",
    "end": "1727520"
  },
  {
    "text": "think i'm a little low on time here so",
    "start": "1727520",
    "end": "1729679"
  },
  {
    "text": "um",
    "start": "1729679",
    "end": "1730960"
  },
  {
    "text": "yeah i if anyone has questions that they",
    "start": "1730960",
    "end": "1733440"
  },
  {
    "text": "want to ask right now feel free",
    "start": "1733440",
    "end": "1736240"
  },
  {
    "text": "i'm also",
    "start": "1736240",
    "end": "1737360"
  },
  {
    "text": "happy to",
    "start": "1737360",
    "end": "1738720"
  },
  {
    "text": "talk if if you find me later about this",
    "start": "1738720",
    "end": "1740799"
  },
  {
    "text": "um again",
    "start": "1740799",
    "end": "1742240"
  },
  {
    "text": "i find this just to be very interesting",
    "start": "1742240",
    "end": "1744640"
  },
  {
    "text": "so if you have any more questions feel",
    "start": "1744640",
    "end": "1747120"
  },
  {
    "text": "feel free to find me after and ask but",
    "start": "1747120",
    "end": "1749600"
  },
  {
    "text": "uh",
    "start": "1749600",
    "end": "1750960"
  },
  {
    "text": "yeah",
    "start": "1750960",
    "end": "1752399"
  },
  {
    "text": "seems like no questions right now so",
    "start": "1752399",
    "end": "1755279"
  },
  {
    "text": "that's it for me um so again this is",
    "start": "1755279",
    "end": "1758960"
  },
  {
    "text": "all been pretty specific to linker d i",
    "start": "1758960",
    "end": "1760640"
  },
  {
    "text": "work at buoyant and we are hiring",
    "start": "1760640",
    "end": "1762880"
  },
  {
    "text": "um",
    "start": "1762880",
    "end": "1764640"
  },
  {
    "text": "yeah",
    "start": "1764640",
    "end": "1765600"
  },
  {
    "text": "thank you very much",
    "start": "1765600",
    "end": "1769080"
  }
]