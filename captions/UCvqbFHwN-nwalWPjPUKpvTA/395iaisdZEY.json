[
  {
    "text": "okay a thanks for coming hey my name is Eduardo Silva a software engineer at",
    "start": "500",
    "end": "6450"
  },
  {
    "text": "treasured data and I mostly work in the open-source team trying to fix a problems with login and trying to help",
    "start": "6450",
    "end": "13950"
  },
  {
    "text": "with the logging tools that we have built over the years and well we're quite happy here because as",
    "start": "13950",
    "end": "21000"
  },
  {
    "text": "you may read somewhere we're from the fluency team and yes today we join it to the CN CF so just like a great momentum",
    "start": "21000",
    "end": "27269"
  },
  {
    "text": "for us and thanks for coming so I am now I will assume that most of",
    "start": "27269",
    "end": "34620"
  },
  {
    "text": "us but most of you are using some kind of login solution or you have some kind",
    "start": "34620",
    "end": "39750"
  },
  {
    "text": "of deployment and just to get an idea how much of you are using docker right now",
    "start": "39750",
    "end": "46399"
  },
  {
    "text": "okay I would not nag more questions so like half of you is using kubernetes right",
    "start": "46399",
    "end": "52850"
  },
  {
    "text": "awesome okay so we're going to go from the beginning about this session about what",
    "start": "52850",
    "end": "58800"
  },
  {
    "text": "is log in and then introduce to the different patterns for an aggregation in the cloud how that integrates Kuni DS",
    "start": "58800",
    "end": "65010"
  },
  {
    "text": "docker and other surprises okay so let's get started log in is something very",
    "start": "65010",
    "end": "71430"
  },
  {
    "text": "fundamental for everybody you know login exists because of three main principles you need to monitor something or you",
    "start": "71430",
    "end": "78030"
  },
  {
    "text": "need to make some troubleshooting things happens or sometimes you need to cover some statistics right what's going on",
    "start": "78030",
    "end": "84540"
  },
  {
    "text": "with the application how its behaving so log in I would say that is not longer optional it used to be in the past but",
    "start": "84540",
    "end": "91560"
  },
  {
    "text": "when you need to dig in something really important you need to you need login you need to get information from somewhere",
    "start": "91560",
    "end": "98040"
  },
  {
    "text": "what happened it right and not just restore an application which trailer container and let's think that nothing",
    "start": "98040",
    "end": "104610"
  },
  {
    "text": "happens and now when we have the login the scenarios a login happens at",
    "start": "104610",
    "end": "110729"
  },
  {
    "text": "different levels the first one is like the operating system you know we need to know what's happening with the kernel",
    "start": "110729",
    "end": "116399"
  },
  {
    "text": "sometimes we have some storage running our service but that storage needs a",
    "start": "116399",
    "end": "121409"
  },
  {
    "text": "driver sometimes a driver fails and we need to know about it this is pretty common in enterprise a virtual servers",
    "start": "121409",
    "end": "128280"
  },
  {
    "text": "also we have our applications units my WordPress my web on my back-end for any",
    "start": "128280",
    "end": "134560"
  },
  {
    "text": "kind of things but also I need to monitor what's going on with that unit and also we have system services like",
    "start": "134560",
    "end": "142000"
  },
  {
    "text": "the same login services we have a mail services or any kind of third party",
    "start": "142000",
    "end": "147010"
  },
  {
    "text": "component that our application and depends on for example a database",
    "start": "147010",
    "end": "152760"
  },
  {
    "text": "and now we're going to talk about the containers right I assume that most of",
    "start": "152760",
    "end": "157870"
  },
  {
    "text": "you know what the containers is but anyways we are going to give a quick overview about the container a container",
    "start": "157870",
    "end": "164500"
  },
  {
    "text": "exists just to become to provide isolation to a process you know the",
    "start": "164500",
    "end": "170530"
  },
  {
    "text": "minimum a unit in an operating system of something running it's called a process but when we don't when we don't have the",
    "start": "170530",
    "end": "177640"
  },
  {
    "text": "containers that process is running it has a bunch of CPU it has a bunch of memory but at some point we would like",
    "start": "177640",
    "end": "184330"
  },
  {
    "text": "to insulate that application and restrict the number of resources that that application has access to so that",
    "start": "184330",
    "end": "191590"
  },
  {
    "text": "is how what a container is a container is not an a future and implementation a",
    "start": "191590",
    "end": "196989"
  },
  {
    "text": "container is a concept on top of cgroups control groups and namespaces from a pre",
    "start": "196989",
    "end": "202239"
  },
  {
    "text": "on an operating system level so your server is running here you had a host operating system and you have some",
    "start": "202239",
    "end": "209170"
  },
  {
    "text": "user space tools that allows you to create this kind of concept of container and of course you create a container and",
    "start": "209170",
    "end": "216430"
  },
  {
    "text": "on top of that you are deploying your application your application has its own dependencies it own libraries and of",
    "start": "216430",
    "end": "222850"
  },
  {
    "text": "course is fully isolated so on one container I can be running some application with I don't know open SSL",
    "start": "222850",
    "end": "229510"
  },
  {
    "text": "and maybe I'm testing a new in crypto library I can try in the other side a",
    "start": "229510",
    "end": "234850"
  },
  {
    "text": "board SSL or something like that it doesn't matter the system doesn't know what's going on inside the container it",
    "start": "234850",
    "end": "242049"
  },
  {
    "text": "just know about what time and what kind of CPU is consuming what kind of memory and what kind of devices is trying to",
    "start": "242049",
    "end": "248739"
  },
  {
    "text": "access and of course when you have containers you have applications you have the",
    "start": "248739",
    "end": "254290"
  },
  {
    "text": "system you have services unit and all of that needs logging so a what are the",
    "start": "254290",
    "end": "260169"
  },
  {
    "text": "kind of distribution channels that we have volume in containers the first one which is a",
    "start": "260169",
    "end": "265990"
  },
  {
    "text": "not legacy but the one that always works in a file system well always when your storage is working right so the file",
    "start": "265990",
    "end": "272830"
  },
  {
    "text": "system write some data to the file system so you can trigger and review that later also we have the standard",
    "start": "272830",
    "end": "279669"
  },
  {
    "text": "input and output interfaces I don't know if you are aware but every time that you start a process and Linux or any kind of",
    "start": "279669",
    "end": "285940"
  },
  {
    "text": "UNIX operating system at least you get to interface the standard output and they start that ever right we're not",
    "start": "285940",
    "end": "292419"
  },
  {
    "text": "going to discuss and discuss right now when you need to use each one right there's a problem I don't probably with",
    "start": "292419",
    "end": "299380"
  },
  {
    "text": "that but they exist and they are useful widely and sometimes you want to make",
    "start": "299380",
    "end": "305050"
  },
  {
    "text": "some login over the network maybe have some network and remote networking service and you want to send my messages",
    "start": "305050",
    "end": "310720"
  },
  {
    "text": "to that central place so as of now we have this kind of a channels so okay but",
    "start": "310720",
    "end": "319270"
  },
  {
    "text": "when you have your container okay you have the channels but also you can let your logs behave or put them in a",
    "start": "319270",
    "end": "326080"
  },
  {
    "text": "different way so for example docker integrate which is called the login drivers that means you're going to spawn",
    "start": "326080",
    "end": "333190"
  },
  {
    "text": "your own process this application is going to do something and maybe write some locks right but you can tell locate",
    "start": "333190",
    "end": "339639"
  },
  {
    "text": "please you want you know what I want my logs to be store in a JSON file you say",
    "start": "339639",
    "end": "345250"
  },
  {
    "text": "what yeah there are people using MongoDB right so that is quite useful some",
    "start": "345250",
    "end": "350259"
  },
  {
    "text": "people use syslog which is pretty fine I'm not saying that when a solution is better than the other I think that as",
    "start": "350259",
    "end": "356500"
  },
  {
    "text": "much as mass solutions you have not options is better you have generally from system D and also we have something",
    "start": "356500",
    "end": "364360"
  },
  {
    "text": "which is called flew in D which is a log in solution and some time ago we wrote",
    "start": "364360",
    "end": "369580"
  },
  {
    "text": "the driver for Tokyo so every time that you get docker you had the flu indeed driver on it and ever by default",
    "start": "369580",
    "end": "377400"
  },
  {
    "text": "we're going to make a pause here and talk about struck two blocks know every",
    "start": "377400",
    "end": "383680"
  },
  {
    "text": "time that you get some load message there's not an instructor most of the time for example if you look at the",
    "start": "383680",
    "end": "389620"
  },
  {
    "text": "Apache web server logs you will see that you have some timing associated there's a time there's time zone IP address and",
    "start": "389620",
    "end": "397690"
  },
  {
    "text": "what was about the HT dear requests right but there's a kind of a structure",
    "start": "397690",
    "end": "403000"
  },
  {
    "text": "but if you look at the nginx locks it's pretty similar but sometimes they are not the same and if you look at the nice",
    "start": "403000",
    "end": "409840"
  },
  {
    "text": "equal locks which is something total different there's a different instructor so how do you deal with these kind of",
    "start": "409840",
    "end": "416200"
  },
  {
    "text": "lock messages that are in a different format so structure looks allows you to handle",
    "start": "416200",
    "end": "423550"
  },
  {
    "text": "that for example when you talk about rotor clocks we try to make some",
    "start": "423550",
    "end": "429120"
  },
  {
    "text": "assumption that the locks will have some key and a value for example when you",
    "start": "429120",
    "end": "435040"
  },
  {
    "text": "look at the Apache logs you know you know that there's a time the key value will be the key will be time and the",
    "start": "435040",
    "end": "441550"
  },
  {
    "text": "value of course the time the time comes the time times over and of course you have to minimum keys the time and the",
    "start": "441550",
    "end": "448660"
  },
  {
    "text": "message time is something very critical because you need to know when something happens",
    "start": "448660",
    "end": "454270"
  },
  {
    "text": "and when you deal with structure locks there are two main formats around maybe there",
    "start": "454270",
    "end": "461140"
  },
  {
    "text": "are more but these two are quite famous the first one is Jason I know that",
    "start": "461140",
    "end": "466150"
  },
  {
    "text": "everybody knows Jason but jason has a really really big problem when you want",
    "start": "466150",
    "end": "471340"
  },
  {
    "text": "to parse JSON is quite expensive because it's a string is not binary you don't",
    "start": "471340",
    "end": "476680"
  },
  {
    "text": "know when a key start when the key ends so you need to read the whole message imagine that you have a JSON map and the",
    "start": "476680",
    "end": "484030"
  },
  {
    "text": "message field I don't know imagine that it's a thousand of characters but you",
    "start": "484030",
    "end": "489040"
  },
  {
    "text": "don't know there's a thousand so you need to go each by each one iterating and to fight the last one and say oh",
    "start": "489040",
    "end": "495490"
  },
  {
    "text": "this is 1000 and that is the very CPU intensive and also there is something a",
    "start": "495490",
    "end": "502030"
  },
  {
    "text": "different option which is called message pack which is like a JSON but in binary",
    "start": "502030",
    "end": "507370"
  },
  {
    "text": "mode it's a lesser realization format use it widely it's adjacent like but",
    "start": "507370",
    "end": "513010"
  },
  {
    "text": "it's quite very for that of course you cannot read message pack if you do cut and a file right you're going to get",
    "start": "513010",
    "end": "519039"
  },
  {
    "text": "some some trash on the on the on the terminal but with Jason you can do that",
    "start": "519039",
    "end": "524490"
  },
  {
    "text": "so how docker deal with this getting back to containers when you",
    "start": "524490",
    "end": "530470"
  },
  {
    "text": "write at a docker log or log message two standard outputs on the error you will",
    "start": "530470",
    "end": "535780"
  },
  {
    "text": "get some like this is a test message but when you're using the login drivers you're getting something more",
    "start": "535780",
    "end": "542230"
  },
  {
    "text": "interesting like this you get a container ID you get a container name",
    "start": "542230",
    "end": "547930"
  },
  {
    "text": "the source and of course the message so if you compare this scenario with the",
    "start": "547930",
    "end": "554680"
  },
  {
    "text": "other I will say that this is a little bit a little bit better because you have some metadata about where this",
    "start": "554680",
    "end": "560950"
  },
  {
    "text": "application is running right it doesn't matter if it's JSON or message in fact the things that you have",
    "start": "560950",
    "end": "566860"
  },
  {
    "text": "a struct or you know which kind of key you want to look up and do something with it",
    "start": "566860",
    "end": "572520"
  },
  {
    "text": "and now if you start thinking about microservices meaning how do we deploy",
    "start": "572520",
    "end": "578260"
  },
  {
    "text": "applications okay we are not going to discuss about in general about maker services but we want to focus on login",
    "start": "578260",
    "end": "585450"
  },
  {
    "text": "imagine that a monolithic application basically you have users the service application and this service application",
    "start": "585450",
    "end": "591850"
  },
  {
    "text": "is writing logs to somewhere over a network or file system but when you have",
    "start": "591850",
    "end": "596890"
  },
  {
    "text": "micro services you have applicant your application is split in many components",
    "start": "596890",
    "end": "602050"
  },
  {
    "text": "maybe one two or three it doesn't matter but as you know each of these components",
    "start": "602050",
    "end": "608620"
  },
  {
    "text": "needs also have some logging capabilities so hero login could be sown",
    "start": "608620",
    "end": "614590"
  },
  {
    "text": "a quite easy right you just write to somewhere but here you have multiple",
    "start": "614590",
    "end": "620380"
  },
  {
    "text": "applications run into the same unit of logging and of course when you want to",
    "start": "620380",
    "end": "626500"
  },
  {
    "text": "scale that it's a bit complex so imagine this when you creating is some",
    "start": "626500",
    "end": "631660"
  },
  {
    "text": "kind of application it generate the logs maybe in a different format and a meaning a different format the string is",
    "start": "631660",
    "end": "638500"
  },
  {
    "text": "different for each application I know if you the developers are here at",
    "start": "638500",
    "end": "643960"
  },
  {
    "text": "radians one application they wrote some kind of log message right and maybe two months later they would say oh I am",
    "start": "643960",
    "end": "650830"
  },
  {
    "text": "going to add more load messages and maybe those messages has a different format so how do you parse that there",
    "start": "650830",
    "end": "657550"
  },
  {
    "text": "are some people smiling right so it happens so and also parse the plain text file is",
    "start": "657550",
    "end": "664210"
  },
  {
    "text": "really really expensive and not all contain as per Apple my name is Suresh",
    "start": "664210",
    "end": "670360"
  },
  {
    "text": "sometimes you can start a container but that does not means that you have access to the file system",
    "start": "670360",
    "end": "676230"
  },
  {
    "text": "so where you write the logs so here we introduce the concept of",
    "start": "676230",
    "end": "682540"
  },
  {
    "text": "distributed logging where do we put our logs so when we are talking about this",
    "start": "682540",
    "end": "688660"
  },
  {
    "text": "kind of architecture we need to stop thinking about just a file justified",
    "start": "688660",
    "end": "693699"
  },
  {
    "text": "system just a fixed storage it's about how I'm going to deal with the different",
    "start": "693699",
    "end": "699009"
  },
  {
    "text": "a aggregation patterns how to distribute my logs imagine that you have for example you make a web application sorry",
    "start": "699009",
    "end": "705550"
  },
  {
    "text": "a mobile application you wrote the packing okay you have a hundred of users and your login system in the backing is",
    "start": "705550",
    "end": "712600"
  },
  {
    "text": "working pretty fine is writing to the file system it works but what happens if your application goes viral and now you",
    "start": "712600",
    "end": "719379"
  },
  {
    "text": "have 5,000 users you know or Pokemon go you know that it was used like a rocket",
    "start": "719379",
    "end": "725889"
  },
  {
    "text": "so how do you scale the login on that a scenaries okay so for that we have different",
    "start": "725889",
    "end": "733420"
  },
  {
    "text": "architectures we need to you need to find that we have collector nodes something that collect information or",
    "start": "733420",
    "end": "739059"
  },
  {
    "text": "collect information from somewhere that information is sent to which is called an aggregator then we get a collect",
    "start": "739059",
    "end": "745899"
  },
  {
    "text": "information and its job is to distribute that information back to some destination it could be a database a",
    "start": "745899",
    "end": "751839"
  },
  {
    "text": "cloud service or anything like that so the collector route to patrol logs from",
    "start": "751839",
    "end": "759220"
  },
  {
    "text": "the file system of the network aggregator get the data from multiple sources and on the destination it also",
    "start": "759220",
    "end": "766029"
  },
  {
    "text": "take care of distribute the logs but also a transform the logs to the right format that the destination is expecting",
    "start": "766029",
    "end": "773399"
  },
  {
    "text": "so logging is hard because there's many steps in the middle",
    "start": "773399",
    "end": "778920"
  },
  {
    "text": "and now there's something some items to consider when we are implementing this",
    "start": "778920",
    "end": "784930"
  },
  {
    "text": "kind of logging the first is what kind of network traffic do we want to",
    "start": "784930",
    "end": "790889"
  },
  {
    "text": "implement on this how much CPU I can afford for this and what kind of a",
    "start": "790889",
    "end": "796709"
  },
  {
    "text": "failover system high availability I'm going to implement so dependent of these we have different",
    "start": "796709",
    "end": "803830"
  },
  {
    "text": "application patterns okay we're going to focus on each one of them and see the",
    "start": "803830",
    "end": "809950"
  },
  {
    "text": "pros and cons so I'm not saying that a all of each one of these will be the",
    "start": "809950",
    "end": "815530"
  },
  {
    "text": "best case for you every architect or every deployment is different because everyone has a different look formats",
    "start": "815530",
    "end": "821350"
  },
  {
    "text": "everyone has a different load so we're going to discuss which one is better",
    "start": "821350",
    "end": "827820"
  },
  {
    "text": "okay we're going to discuss the source aggregation patterns so when the",
    "start": "827820",
    "end": "833200"
  },
  {
    "text": "application is running for example on this case without a source aggregation we have the collectors writing directly",
    "start": "833200",
    "end": "840220"
  },
  {
    "text": "to one aggregator right but with source application we put an aggregator",
    "start": "840220",
    "end": "847420"
  },
  {
    "text": "container inside our collector typically in a docker container typically inside",
    "start": "847420",
    "end": "853870"
  },
  {
    "text": "our kubernetes pot right it's about how do you want to handle this thing and what are one",
    "start": "853870",
    "end": "862120"
  },
  {
    "text": "advantage of this for example without source aggregation the configuration is",
    "start": "862120",
    "end": "867370"
  },
  {
    "text": "quite simple because you are just writing to one place but there has a problems and you cannot change the",
    "start": "867370",
    "end": "873850"
  },
  {
    "text": "regular endpoint address it will be a problem you will have many network connections and also you will have will",
    "start": "873850",
    "end": "880270"
  },
  {
    "text": "face a high load on the aggregator so how do you want to deal with that",
    "start": "880270",
    "end": "885600"
  },
  {
    "text": "with with source aggregation you have less connection of course your",
    "start": "885600",
    "end": "891130"
  },
  {
    "text": "aggregator don't have too much overhead and of course you have less configuration in the containers but you",
    "start": "891130",
    "end": "898840"
  },
  {
    "text": "need more resources because you need one aggregator container per cost because you are adding some one layer in",
    "start": "898840",
    "end": "905620"
  },
  {
    "text": "the middle but there's nothing free here you need to add some cost at some level the thing is worth",
    "start": "905620",
    "end": "913200"
  },
  {
    "text": "now when we talk about the destination when we are sending the data back to somewhere without destination",
    "start": "913500",
    "end": "920590"
  },
  {
    "text": "aggregation we have this pattern but with destination aggregation we can make",
    "start": "920590",
    "end": "925780"
  },
  {
    "text": "some interesting because as you know network fails storage fails things happens so at some point you",
    "start": "925780",
    "end": "933250"
  },
  {
    "text": "would like to implement some kind of never make a lesson in in what you can say okay I'm going to send the data to",
    "start": "933250",
    "end": "938740"
  },
  {
    "text": "the assassination but also I want to have this second a secondary destination",
    "start": "938740",
    "end": "944320"
  },
  {
    "text": "just in case something happens okay without destination you have less",
    "start": "944320",
    "end": "950170"
  },
  {
    "text": "note the configuration is simple the this one touches the storage side here",
    "start": "950170",
    "end": "955720"
  },
  {
    "text": "affects the collector side and you have the worst performance of course because you have many small writes each time",
    "start": "955720",
    "end": "963660"
  },
  {
    "text": "you're likely we would like to have some kind of buffering and a big write instead of many small writes",
    "start": "963660",
    "end": "971910"
  },
  {
    "text": "with the destination aggregation of course your collector configuration is free from storage changes so if you",
    "start": "972660",
    "end": "979930"
  },
  {
    "text": "change something at this site this has this guy here on the top level we don't",
    "start": "979930",
    "end": "984940"
  },
  {
    "text": "know about it he don't care you know because it just has a failure mechanism",
    "start": "984940",
    "end": "990790"
  },
  {
    "text": "and push these changes to here to this aggregator",
    "start": "990790",
    "end": "995850"
  },
  {
    "text": "so they think is how many nodes you have they think is how you want to distribute",
    "start": "995850",
    "end": "1001500"
  },
  {
    "text": "the load of the logs in different places I have I was talking yesterday with a person who said a ok I have some",
    "start": "1001500",
    "end": "1008820"
  },
  {
    "text": "problems because I don't know if I should have used an aggregator here or have multiple destination or small",
    "start": "1008820",
    "end": "1016020"
  },
  {
    "text": "writes and the question the simple question was okay do you have some network limitation no I don't you have",
    "start": "1016020",
    "end": "1023070"
  },
  {
    "text": "some CPU limitation yeah I had a diamond AMISOM ok so you know how to distribute",
    "start": "1023070",
    "end": "1028740"
  },
  {
    "text": "the load so you don't get a more expensive bill and to to implement all",
    "start": "1028740",
    "end": "1035220"
  },
  {
    "text": "this irrigation patterns which is kind of concept you need the right tool for this kind of solution so this is where",
    "start": "1035220",
    "end": "1043020"
  },
  {
    "text": "flu in D joints in flu in D is an open source data and lock collector which was",
    "start": "1043020",
    "end": "1049470"
  },
  {
    "text": "decided to achieve all these kind of aggregation patterns and adapt to your",
    "start": "1049470",
    "end": "1054600"
  },
  {
    "text": "own needs and well it was made with high performance man its built-in reliability",
    "start": "1054600",
    "end": "1060810"
  },
  {
    "text": "it managed structure clocks it has a pluggable architecture and oh I did not",
    "start": "1060810",
    "end": "1067230"
  },
  {
    "text": "update the slide but it's more than 600 plugins nowadays so hopefully Andy can accomplish all of",
    "start": "1067230",
    "end": "1074970"
  },
  {
    "text": "this talking about the architecture here you can imagine that you are",
    "start": "1074970",
    "end": "1081450"
  },
  {
    "text": "getting the data in from some kind of input so fluency supports many inputs imagine that a log file you can listen",
    "start": "1081450",
    "end": "1088620"
  },
  {
    "text": "from TCP or maybe you're listening for the darker log files over the network once you get the data in do you need to",
    "start": "1088620",
    "end": "1096000"
  },
  {
    "text": "do some parsing over that data right because the data has a different format it's not the same to listen for a JSON",
    "start": "1096000",
    "end": "1102690"
  },
  {
    "text": "message that listen from a syslog message so you need to parse that so",
    "start": "1102690",
    "end": "1107730"
  },
  {
    "text": "here's a lot of complexity and then you'll like to filter out some messages maybe you want all of them or maybe you",
    "start": "1107730",
    "end": "1114780"
  },
  {
    "text": "want to drop some messages once you finish this internally what",
    "start": "1114780",
    "end": "1120480"
  },
  {
    "text": "fluency does is provide you some kind of buffering what means buffering that every time that I get the data in I want",
    "start": "1120480",
    "end": "1128610"
  },
  {
    "text": "to keep them in memory or either in the file system because before to send this information back to a destination",
    "start": "1128610",
    "end": "1136130"
  },
  {
    "text": "something good happens okay destination goes down the storage is not working so",
    "start": "1136130",
    "end": "1141540"
  },
  {
    "text": "you need this buffering capability so if something gets well gets wrong you can",
    "start": "1141540",
    "end": "1146880"
  },
  {
    "text": "reload this kind of chunks of data and set it again later but",
    "start": "1146880",
    "end": "1152810"
  },
  {
    "text": "before to set it you have the you need the output plugins so where I'm going to",
    "start": "1152810",
    "end": "1158520"
  },
  {
    "text": "send this information so imagine that a ok I'm sending information to Amazon s3 right Amazon",
    "start": "1158520",
    "end": "1165780"
  },
  {
    "text": "has their own API their own format but sometimes somebody tell you know I want",
    "start": "1165780",
    "end": "1171390"
  },
  {
    "text": "to use my own elastic search an elastic cell has their own API their own format",
    "start": "1171390",
    "end": "1176460"
  },
  {
    "text": "so the thing is that from the main point where you collect this information and then send information back to somewhere",
    "start": "1176460",
    "end": "1182850"
  },
  {
    "text": "you need to collect you need to parts you need to fill that you to make buffering and adapt this buffered data",
    "start": "1182850",
    "end": "1188280"
  },
  {
    "text": "to the destination so now you can realize the make login in the right way",
    "start": "1188280",
    "end": "1193830"
  },
  {
    "text": "is quite complex and expensive by it nature unlikely you want to format the data out",
    "start": "1193830",
    "end": "1202160"
  },
  {
    "text": "so a fluent 'i have been doing this test the beginning it was starting on 2011 and now as you know it's quite loosely",
    "start": "1202160",
    "end": "1209480"
  },
  {
    "text": "it's very usable and well it has a lot of a opera opera leave it obeyed ability",
    "start": "1209480",
    "end": "1216350"
  },
  {
    "text": "with sorry the english at this time is not so good with token it's its main",
    "start": "1216350",
    "end": "1222380"
  },
  {
    "text": "inside kubernetes right communities decided that flew in d is a really good solution for for logging and what it's",
    "start": "1222380",
    "end": "1230630"
  },
  {
    "text": "doing is sad okay if it could need is provided the option if you want to probe and push your logs to for example Google",
    "start": "1230630",
    "end": "1236810"
  },
  {
    "text": "cloud services you can use you can use the setup for that using the Google Flu in the image which is inside for",
    "start": "1236810",
    "end": "1243560"
  },
  {
    "text": "kubernetes or you can deploy I don't know fluent please full flush the logs",
    "start": "1243560",
    "end": "1248720"
  },
  {
    "text": "from the same a community system to elasticsearch and it's set up fluently",
    "start": "1248720",
    "end": "1255110"
  },
  {
    "text": "for you for that and also open chief is using fluent D as the main aggregator so",
    "start": "1255110",
    "end": "1261290"
  },
  {
    "text": "as of now you can understand that log in is quite complex and flu in D is work is",
    "start": "1261290",
    "end": "1266390"
  },
  {
    "text": "everywhere right now some most of people is happy with it some people have some",
    "start": "1266390",
    "end": "1271490"
  },
  {
    "text": "concerns but we can discuss about it how this works in the docker use case",
    "start": "1271490",
    "end": "1277280"
  },
  {
    "text": "for example when docker flush out some blocks it adds a lot of metadata for",
    "start": "1277280",
    "end": "1283010"
  },
  {
    "text": "example container ID container name a timestamp and the lock message so ideally you want your containers started",
    "start": "1283010",
    "end": "1290780"
  },
  {
    "text": "flushing the whole logs to one central flu in D and from this flu in D you can",
    "start": "1290780",
    "end": "1296510"
  },
  {
    "text": "send back the information to elasticsearch or any kind of service that you are working here some people",
    "start": "1296510",
    "end": "1302690"
  },
  {
    "text": "use Hadoop elasticsearch my sequel and some people use an SQL light and it works",
    "start": "1302690",
    "end": "1309490"
  },
  {
    "text": "now in the case of kubernetes they put flu in the inside the node right so you",
    "start": "1309490",
    "end": "1317270"
  },
  {
    "text": "have your own applications in the pod running their logs and you have flu in d consuming that data from the file system",
    "start": "1317270",
    "end": "1322730"
  },
  {
    "text": "we need it has a philosophy that the whole logs need to go to storage first and then the the low collectors can read",
    "start": "1322730",
    "end": "1330800"
  },
  {
    "text": "from that which is predefined because it's like a safe way to work and fluently in the real world well it's",
    "start": "1330800",
    "end": "1339229"
  },
  {
    "text": "being used by Microsoft extensively at less angry Nintendo and a lot of companies the use",
    "start": "1339229",
    "end": "1346999"
  },
  {
    "text": "case of Microsoft is they have something which is called OMS I don't know if you hear about it like operation management",
    "start": "1346999",
    "end": "1353659"
  },
  {
    "text": "suite okay and what they do is that they said okay one",
    "start": "1353659",
    "end": "1359299"
  },
  {
    "text": "year ago they say we need an agent on each host that is working with Microsoft services and we need to collect",
    "start": "1359299",
    "end": "1364940"
  },
  {
    "text": "information so what they did they took Flo nd they package flow in d and add",
    "start": "1364940",
    "end": "1370279"
  },
  {
    "text": "some really good extension for that so flowing this like the official agent for Microsoft to collect data from most of",
    "start": "1370279",
    "end": "1376909"
  },
  {
    "text": "Linux boxes and of course we at the company we use windy a lot we useful indeed to collect",
    "start": "1376909",
    "end": "1384499"
  },
  {
    "text": "one that 8 million events per second so you can think that that is a lot of",
    "start": "1384499",
    "end": "1390080"
  },
  {
    "text": "information of course it's not just one fluently you know we are scaling that and at the company layer who where we",
    "start": "1390080",
    "end": "1397940"
  },
  {
    "text": "promote this project as we are proud member of Linux Foundation than a CNC F and",
    "start": "1397940",
    "end": "1402970"
  },
  {
    "text": "as I say before we got some news that the fluent D also joining the CN CF",
    "start": "1402970",
    "end": "1408739"
  },
  {
    "text": "today so what that means for everybody who's on this audience is that flew in D will will be a better citizen inside the",
    "start": "1408739",
    "end": "1416509"
  },
  {
    "text": "kubernetes ecosystem it will expose now different a kind of interfaces for permit you so they can gather some",
    "start": "1416509",
    "end": "1423739"
  },
  {
    "text": "matrix I get more information about it and this is really good for us because",
    "start": "1423739",
    "end": "1428929"
  },
  {
    "text": "the community is quite big now we have thousands of companies using flow in D",
    "start": "1428929",
    "end": "1434149"
  },
  {
    "text": "we have thousands of individual users and as you use so we have like more than",
    "start": "1434149",
    "end": "1439159"
  },
  {
    "text": "600 plugins around and most of them are made by individuals and now I wanted to",
    "start": "1439159",
    "end": "1446690"
  },
  {
    "text": "do something different get him back to logging you know I'm going to talk at the ANU Prague that just born like a",
    "start": "1446690",
    "end": "1453529"
  },
  {
    "text": "year ago which is called full and bit is different that flew in D and through a",
    "start": "1453529",
    "end": "1458779"
  },
  {
    "text": "bit initially born initially like a year ago to solve the data collection problem",
    "start": "1458779",
    "end": "1464720"
  },
  {
    "text": "but from embedded devices so when you have a really small device you cannot",
    "start": "1464720",
    "end": "1469820"
  },
  {
    "text": "think I'll have flu in the inside it right because fluid is made in Ruby right so it needs some kind of memory",
    "start": "1469820",
    "end": "1476180"
  },
  {
    "text": "some kind of CPU and for a really really small a device you cannot have it so we",
    "start": "1476180",
    "end": "1481820"
  },
  {
    "text": "started creating a new solution for that specific market and open source of course which is called flow and bit",
    "start": "1481820",
    "end": "1487760"
  },
  {
    "text": "which was reading in see fully high performance has a an architecture with plugins and also be capable to gather",
    "start": "1487760",
    "end": "1495740"
  },
  {
    "text": "some matrix of the system word it's running like CPU memory and networking",
    "start": "1495740",
    "end": "1501230"
  },
  {
    "text": "stuff is fully even driven and also is fluently compatible what that means that",
    "start": "1501230",
    "end": "1507860"
  },
  {
    "text": "for a min ba'di device on that moment you can gather some matrix you can gather some logs and send this",
    "start": "1507860",
    "end": "1513170"
  },
  {
    "text": "information back to fluent e and then from flu indeed you can do whatever you want",
    "start": "1513170",
    "end": "1518950"
  },
  {
    "text": "the architecture is quite similar and I'm not going to get into much detail so",
    "start": "1518950",
    "end": "1524780"
  },
  {
    "text": "name but it has like input plugins you have the main engine and once you get",
    "start": "1524780",
    "end": "1530390"
  },
  {
    "text": "the data in optionally you can dust buffering so you it does buffering either in memory or in the file system",
    "start": "1530390",
    "end": "1536750"
  },
  {
    "text": "it has its own POSIX threads to handle this information and the good thing",
    "start": "1536750",
    "end": "1542570"
  },
  {
    "text": "about this is that there's no locking at a program level everything is just the",
    "start": "1542570",
    "end": "1547730"
  },
  {
    "text": "engines one thread we have multiple workers POSIX threads on this side but",
    "start": "1547730",
    "end": "1553250"
  },
  {
    "text": "there's no login inside them every finish is done through messages internally",
    "start": "1553250",
    "end": "1560290"
  },
  {
    "text": "okay",
    "start": "1571720",
    "end": "1574408"
  },
  {
    "text": "well well you can do is to modify your application to write the logs to any standard output like a printf and you",
    "start": "1579230",
    "end": "1586010"
  },
  {
    "text": "let docker check that out to journal D or fluency or whatever that's a easy",
    "start": "1586010",
    "end": "1591080"
  },
  {
    "text": "ways this way so getting back to flowing bit so they're character square root",
    "start": "1591080",
    "end": "1597110"
  },
  {
    "text": "that is it does not have too much overhead there's no locking if threads but there's not locking or there's no",
    "start": "1597110",
    "end": "1603409"
  },
  {
    "text": "contention on that area and at the implementation level when distributing this information to some destination we",
    "start": "1603409",
    "end": "1610250"
  },
  {
    "text": "are using some coroutines you can imagine that i'm talking about a bit about how go lonk works and i will",
    "start": "1610250",
    "end": "1618049"
  },
  {
    "text": "set up flowing bit implement almost the same concepts that the goal and language",
    "start": "1618049",
    "end": "1623210"
  },
  {
    "text": "but in c so it's quite it's pretty straightforward to create a plug-in or",
    "start": "1623210",
    "end": "1628279"
  },
  {
    "text": "some extension for it and Fulham beat a support many things for example you can",
    "start": "1628279",
    "end": "1633289"
  },
  {
    "text": "send right now it's not just for embedded devices it's being used as a compliment for fluency and also",
    "start": "1633289",
    "end": "1639409"
  },
  {
    "text": "collected logs from different services okay we are not yet there with a lot of extension that we have but we are",
    "start": "1639409",
    "end": "1645500"
  },
  {
    "text": "working hard on it so when the destination which is really good for example elasticsearch if you use an",
    "start": "1645500",
    "end": "1651049"
  },
  {
    "text": "elastic search you can just pull in bit to show to push the logs also to elastic search and so for in bit support HTTP",
    "start": "1651049",
    "end": "1657860"
  },
  {
    "text": "output endpoints so if you have some HTTP web server and you can listen for",
    "start": "1657860",
    "end": "1662990"
  },
  {
    "text": "events you can just flew in bid to distribute the logs to that place also a fluent bid was made with forward",
    "start": "1662990",
    "end": "1672250"
  },
  {
    "text": "you know per future in mind what that means if I have one flew indeed to other",
    "start": "1672250",
    "end": "1677840"
  },
  {
    "text": "fluency of wind bits they can wrote the messages between them on that way you can make some kind of file over at",
    "start": "1677840",
    "end": "1684380"
  },
  {
    "text": "fluent bit it's quite fast the last benchmark we saw that we can send one",
    "start": "1684380",
    "end": "1690710"
  },
  {
    "text": "message from one flowing bit to the other around we can send 500,000 messages per second in this computer so",
    "start": "1690710",
    "end": "1698240"
  },
  {
    "text": "imagine what you can do in a biggest environment using just one CPU core and that is",
    "start": "1698240",
    "end": "1705169"
  },
  {
    "text": "quite good and getting back to architecture is basically yes a core engine with us initialization it does",
    "start": "1705169",
    "end": "1711740"
  },
  {
    "text": "buffering it handle the networking stuff it also supports TLS so if you care about security over the network it",
    "start": "1711740",
    "end": "1718160"
  },
  {
    "text": "provided you have a plugins manager so you can have your own plugins in the April for collect data or to send the",
    "start": "1718160",
    "end": "1725090"
  },
  {
    "text": "data back through output use message back internally we just talked about that you support TLS and use some",
    "start": "1725090",
    "end": "1732110"
  },
  {
    "text": "specific libraries like monkey to handle the whole event loop and memory handle",
    "start": "1732110",
    "end": "1738910"
  },
  {
    "text": "another good feature about flambéed is that if you are writing in an upper level language for example Python or",
    "start": "1738910",
    "end": "1746030"
  },
  {
    "text": "Ruby or whatever you can take advantage of fluent bit in a library mode that",
    "start": "1746030",
    "end": "1751370"
  },
  {
    "text": "means that flowing bit is not just a service it can behave as a library so you can say okay my apply I'm writing my",
    "start": "1751370",
    "end": "1757910"
  },
  {
    "text": "application Python I'm going to hook the fluent bit because I want to send the logs to elasticsearch but I don't want",
    "start": "1757910",
    "end": "1763280"
  },
  {
    "text": "to implement the last excerpt handler I can use flowing bit easily for that and",
    "start": "1763280",
    "end": "1768970"
  },
  {
    "text": "here we have a really small example I don't know if you can see in the screen",
    "start": "1768970",
    "end": "1774440"
  },
  {
    "text": "really well this is like a there's C API about how",
    "start": "1774440",
    "end": "1779570"
  },
  {
    "text": "you can useful in bit internally ok in the first line we just include a",
    "start": "1779570",
    "end": "1785240"
  },
  {
    "text": "header a are you familiar with software development here most of you okay this",
    "start": "1785240",
    "end": "1790490"
  },
  {
    "text": "is C but it's pretty straightforward okay in the first line we just include the header",
    "start": "1790490",
    "end": "1795580"
  },
  {
    "text": "right we just create a context of the library flb is like the prefix for",
    "start": "1795580",
    "end": "1800690"
  },
  {
    "text": "flowing bit then we define an input type because flowing B needs to collect data",
    "start": "1800690",
    "end": "1806180"
  },
  {
    "text": "from somewhere right we're going to use the lip or library mode which means that",
    "start": "1806180",
    "end": "1812030"
  },
  {
    "text": "my own application is to ingest data into flowing bit after that we're going to add some",
    "start": "1812030",
    "end": "1820190"
  },
  {
    "text": "metadata to this input we're adding which is called attack attack is like a",
    "start": "1820190",
    "end": "1825200"
  },
  {
    "text": "space special flag to each record that is coming from that input so once I get that data in in inside the flowing bit",
    "start": "1825200",
    "end": "1832160"
  },
  {
    "text": "engine I can say okay all the records that had this can this kind of tag are",
    "start": "1832160",
    "end": "1837500"
  },
  {
    "text": "going to elasticsearch this kind of record that has a different tile they are going to Amazon s3",
    "start": "1837500",
    "end": "1843160"
  },
  {
    "text": "that is what tag is for then we can't need to define the outputs",
    "start": "1843160",
    "end": "1848910"
  },
  {
    "text": "always we are using the context from the library and define an output tab on this",
    "start": "1848910",
    "end": "1853920"
  },
  {
    "text": "case we are used in the standard output and we are adding a match so everything",
    "start": "1853920",
    "end": "1859050"
  },
  {
    "text": "that match the tag test here that it was said before is going to the standard",
    "start": "1859050",
    "end": "1866820"
  },
  {
    "text": "output it's an i/o but it's just for debugging right it's not that it's not a big deal and just start flowing bit and",
    "start": "1866820",
    "end": "1873870"
  },
  {
    "text": "so in bid we'll start in a separate thread running in background and from your parent read you can take control of",
    "start": "1873870",
    "end": "1880560"
  },
  {
    "text": "it like for example ingest some data and what we add support for here is that you",
    "start": "1880560",
    "end": "1887490"
  },
  {
    "text": "just add some JSON message to flow in bit and it will interpret that internally and do something with it",
    "start": "1887490",
    "end": "1894620"
  },
  {
    "text": "and then you can stop at any time of course here you had your own code doing",
    "start": "1894620",
    "end": "1901860"
  },
  {
    "text": "your own stuff if you are doing some in data collection from sensors matrix",
    "start": "1901860",
    "end": "1907320"
  },
  {
    "text": "staff this is very very useful maybe it's more easy for you to write to",
    "start": "1907320",
    "end": "1912540"
  },
  {
    "text": "the file system but this is mostly for developers this area and a I wanted to",
    "start": "1912540",
    "end": "1920040"
  },
  {
    "text": "do something that was done a few days ago because I know that most of people don't know don't like too much C",
    "start": "1920040",
    "end": "1926460"
  },
  {
    "text": "language because it's quite complex for some missionaries but sometimes they like go so well with this it is to add",
    "start": "1926460",
    "end": "1933780"
  },
  {
    "text": "support to write and goal and plug-ins for flowing bit which is made in C but",
    "start": "1933780",
    "end": "1939000"
  },
  {
    "text": "you can write your own plugins and go do we have go developers here yeah so at least we can have a few",
    "start": "1939000",
    "end": "1946740"
  },
  {
    "text": "plugins in a few weeks right so a the thing is that you can write",
    "start": "1946740",
    "end": "1952020"
  },
  {
    "text": "your own plugins in go for fluent bit it's pretty functional at the wheel up",
    "start": "1952020",
    "end": "1957480"
  },
  {
    "text": "come in the next version in the next SEO that 10 release and also we need contributors for that you know we are",
    "start": "1957480",
    "end": "1964770"
  },
  {
    "text": "doing a pre we're pretty strong and collecting data handed that data optimising the whole engine but we need",
    "start": "1964770",
    "end": "1970860"
  },
  {
    "text": "people to help to contribute with destinations so we need there's a lot of",
    "start": "1970860",
    "end": "1976050"
  },
  {
    "text": "people asking for a casket output plugin you know but I'm not going to write and a casket output plug-in and see it it",
    "start": "1976050",
    "end": "1984060"
  },
  {
    "text": "will take a lot but there's some packets ready on go like so if somebody can want to take care about that will be great",
    "start": "1984060",
    "end": "1990690"
  },
  {
    "text": "and how a plugin looks like ok a first of all a package for sorry",
    "start": "1990690",
    "end": "1998820"
  },
  {
    "text": "apply a gold plugin for flowing bead it's basically a shared library so go",
    "start": "1998820",
    "end": "2005060"
  },
  {
    "text": "when you build a go code you can say I want to have a binary that you can run I",
    "start": "2005060",
    "end": "2010700"
  },
  {
    "text": "want to have an archive file or a shared library this works with a shared library so basically you import the flu in",
    "start": "2010700",
    "end": "2017630"
  },
  {
    "text": "bitgold package for example this is an example for the standard output but made in gold right and you define three",
    "start": "2017630",
    "end": "2025430"
  },
  {
    "text": "callbacks and you need to define the export because that is something required by the law by the by the code",
    "start": "2025430",
    "end": "2032360"
  },
  {
    "text": "language first we do the initialization and you register the plug-in right and",
    "start": "2032360",
    "end": "2039220"
  },
  {
    "text": "then when flew in Pete collect the data some world and want to send this information through the plugin in it'll",
    "start": "2039220",
    "end": "2046400"
  },
  {
    "text": "call some callback that will take care of that data and this is a flush call back right",
    "start": "2046400",
    "end": "2052388"
  },
  {
    "text": "at this point here you will like to send this information or do something with it",
    "start": "2052389",
    "end": "2058010"
  },
  {
    "text": "and the information that you get here is a message a packed format there's a good hunter for that on golang so that is",
    "start": "2058010",
    "end": "2064790"
  },
  {
    "text": "pretty pretty straightforward and of course you have your exit callback I don't know if we have time we can make a",
    "start": "2064790",
    "end": "2070700"
  },
  {
    "text": "quick demo bells will be intercept ok oh yeah we are almost on time",
    "start": "2070700",
    "end": "2076540"
  },
  {
    "text": "so I always get lost with this okay",
    "start": "2076540",
    "end": "2085530"
  },
  {
    "text": "so here okay flowing beat us like this",
    "start": "2086399",
    "end": "2093240"
  },
  {
    "text": "where I am okay",
    "start": "2094470",
    "end": "2101730"
  },
  {
    "text": "can you see that yep yeah when you ran flew in bit you have",
    "start": "2105200",
    "end": "2111650"
  },
  {
    "text": "some options but the most important part here are the the plugins that we support",
    "start": "2111650",
    "end": "2119140"
  },
  {
    "text": "if you can see here it means that the input plugins we can get a message from the CPU from the memory you can read",
    "start": "2119620",
    "end": "2126740"
  },
  {
    "text": "that your kernel log messages directly from the corner log buffer you can read",
    "start": "2126740",
    "end": "2132950"
  },
  {
    "text": "some files you have an input plug-in to check how healthy is a TCP service so",
    "start": "2132950",
    "end": "2138530"
  },
  {
    "text": "you can tell through a bit please pink this service every second and let us know when this is visa light or not we",
    "start": "2138530",
    "end": "2146000"
  },
  {
    "text": "have some you can listen for message from the start the serial interface the standard input TCP we support n QT t",
    "start": "2146000",
    "end": "2153190"
  },
  {
    "text": "forward protocol for flow in D and and so the outputs most interested one I",
    "start": "2153190",
    "end": "2158480"
  },
  {
    "text": "will say that is elasticsearch forward that we can set the message messages to a different fluent e and H to the P",
    "start": "2158480",
    "end": "2165770"
  },
  {
    "text": "output endpoint or treasure data our cloud service for analytics",
    "start": "2165770",
    "end": "2171190"
  },
  {
    "text": "so we are going to hear pretty quickly is to just collect information from the",
    "start": "2171190",
    "end": "2176840"
  },
  {
    "text": "CPU and send it to the standard output every 5 second is going to measure how",
    "start": "2176840",
    "end": "2183350"
  },
  {
    "text": "much CPU many computers consuming and print out some kind of JSON messages",
    "start": "2183350",
    "end": "2188560"
  },
  {
    "text": "right this is quite beautiful because you can measure how you machine is behaving I use it a lot I used to I used",
    "start": "2188560",
    "end": "2195890"
  },
  {
    "text": "to have many issues with one Wi-Fi driver here and it was using this to measure at what time and what kind of",
    "start": "2195890",
    "end": "2202130"
  },
  {
    "text": "time of the day it was consuming because what star consuming memory and that was very useful to perform some reports for",
    "start": "2202130",
    "end": "2209570"
  },
  {
    "text": "the people who's developing this okay if you see that it's working okay",
    "start": "2209570",
    "end": "2216430"
  },
  {
    "text": "okay but right now I want to show you",
    "start": "2216430",
    "end": "2222490"
  },
  {
    "text": "here we go they're flowing beat go package and the",
    "start": "2224170",
    "end": "2230530"
  },
  {
    "text": "examples here we have some go STD out plug-in pretty similar to the one that I show in",
    "start": "2230530",
    "end": "2236980"
  },
  {
    "text": "the slides so oh",
    "start": "2236980",
    "end": "2241829"
  },
  {
    "text": "there we go of course it's adding some message effect handle here to do",
    "start": "2242460",
    "end": "2249220"
  },
  {
    "text": "something with the data in the clinical box here we registered the plug-in here",
    "start": "2249220",
    "end": "2255849"
  },
  {
    "text": "we handle the fluid of the information we are decoding and just doing a simple",
    "start": "2255849",
    "end": "2260950"
  },
  {
    "text": "printf so if you implement a boat plugin of course your own code your own load",
    "start": "2260950",
    "end": "2266680"
  },
  {
    "text": "you will be on this call but everybody else you need to copy and paste that's it",
    "start": "2266680",
    "end": "2272160"
  },
  {
    "text": "so how this is built",
    "start": "2272160",
    "end": "2276510"
  },
  {
    "text": "look at this line this is a way to wrap to build a go plugin for Fulham bit so",
    "start": "2278490",
    "end": "2288130"
  },
  {
    "text": "we are going to type make the only issue is that when you build shared libraries with golang it take a few seconds",
    "start": "2288130",
    "end": "2295319"
  },
  {
    "text": "like 10 11 but the good thing is that it works",
    "start": "2295319",
    "end": "2302549"
  },
  {
    "text": "there you go so if you look at here we have the shared library",
    "start": "2302549",
    "end": "2311220"
  },
  {
    "text": "okay which was very made wind go language and if decides is a bit bigger",
    "start": "2311220",
    "end": "2317319"
  },
  {
    "text": "right we're 50 megabytes to bring to the",
    "start": "2317319",
    "end": "2323740"
  },
  {
    "text": "standard output but of course this is a way that goal and works you know that's easy cause the size but performance is",
    "start": "2323740",
    "end": "2330040"
  },
  {
    "text": "not too much so okay so we have the plug-in we have flowing beats so we want flowing bit to load this plugin as you",
    "start": "2330040",
    "end": "2337210"
  },
  {
    "text": "saw before if you look at the outputs there's no output here in the there's no golang",
    "start": "2337210",
    "end": "2345400"
  },
  {
    "text": "standard output but we can load it with extension model",
    "start": "2345400",
    "end": "2350819"
  },
  {
    "text": "go which our shared library exam through indeed go out of sorry",
    "start": "2350819",
    "end": "2360750"
  },
  {
    "text": "there we go oh geez okay we're going to trigger the help and",
    "start": "2360790",
    "end": "2368480"
  },
  {
    "text": "you will see that the plug-in is registered hit at bottom",
    "start": "2368480",
    "end": "2373810"
  },
  {
    "text": "this one so as you realize my intention is to",
    "start": "2373810",
    "end": "2381590"
  },
  {
    "text": "motivate go like developers to join this project and contribute with something so we're going to collect where I am",
    "start": "2381590",
    "end": "2391240"
  },
  {
    "text": "so indeed we are going to collect all we load this tension we load data from",
    "start": "2391720",
    "end": "2399170"
  },
  {
    "text": "the CPU and we send out the information to the Google so goal and standard",
    "start": "2399170",
    "end": "2404990"
  },
  {
    "text": "output so it's pretty much the same at the previous example but here is going to",
    "start": "2404990",
    "end": "2410359"
  },
  {
    "text": "use the golden code right so it's pretty straightforward how you can extend a",
    "start": "2410359",
    "end": "2415400"
  },
  {
    "text": "login solution the same is for flu Indy is you know Ruby you can explain mint your own destinations in Ruby language",
    "start": "2415400",
    "end": "2421520"
  },
  {
    "text": "or you can do it and go from flu in people and fluid ulcers joining the CN",
    "start": "2421520",
    "end": "2426650"
  },
  {
    "text": "CF a when to indeed join the CN CF need not join them alone it join it with 35",
    "start": "2426650",
    "end": "2432020"
  },
  {
    "text": "repositories of SDKs languages and child projects like this one so if you",
    "start": "2432020",
    "end": "2438020"
  },
  {
    "text": "contribute to this one you are going to contribute to something really really big",
    "start": "2438020",
    "end": "2443080"
  },
  {
    "text": "ok so getting back to the slides we are almost finished guys so this always",
    "start": "2443080",
    "end": "2449630"
  },
  {
    "text": "happens to you if you wait you have to go each one of them",
    "start": "2449630",
    "end": "2455109"
  },
  {
    "text": "Oh a lot of slicin next time will be",
    "start": "2457809",
    "end": "2463689"
  },
  {
    "text": "shorter so the rule not for sure that 10 is 2 right gulp plugins we are finishing",
    "start": "2463689",
    "end": "2468880"
  },
  {
    "text": "their built-in HTTP monitoring so flowing bit when it's start you can query the internals a add some variable",
    "start": "2468880",
    "end": "2475209"
  },
  {
    "text": "support because you may like it to add some hostname to each record IP address or anything that customizable and of",
    "start": "2475209",
    "end": "2482319"
  },
  {
    "text": "course filtering maybe you want to drop something this is the last slide there's my contact in",
    "start": "2482319",
    "end": "2488519"
  },
  {
    "text": "the breaks address they're all open source so if you want to join us you are welcome thank you",
    "start": "2488519",
    "end": "2495040"
  },
  {
    "text": "[Applause]",
    "start": "2495040",
    "end": "2502380"
  }
]