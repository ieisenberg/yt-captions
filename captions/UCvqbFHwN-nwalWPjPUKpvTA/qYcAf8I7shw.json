[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "hello everyone welcome to the virtual",
    "start": "1520",
    "end": "4240"
  },
  {
    "text": "conference",
    "start": "4240",
    "end": "5359"
  },
  {
    "text": "i'm in mumbai i'm hondu today",
    "start": "5359",
    "end": "9120"
  },
  {
    "text": "paul and i will share with you on the",
    "start": "9120",
    "end": "11759"
  },
  {
    "text": "unified",
    "start": "11759",
    "end": "12400"
  },
  {
    "text": "runtime service infrastructure we have",
    "start": "12400",
    "end": "14799"
  },
  {
    "text": "been working on",
    "start": "14799",
    "end": "17920"
  },
  {
    "start": "17000",
    "end": "265000"
  },
  {
    "text": "in this talk we will start from the",
    "start": "18240",
    "end": "20800"
  },
  {
    "text": "motivation",
    "start": "20800",
    "end": "21920"
  },
  {
    "text": "for the unified platform for vms",
    "start": "21920",
    "end": "24800"
  },
  {
    "text": "containers",
    "start": "24800",
    "end": "25760"
  },
  {
    "text": "and bare metals and a high level",
    "start": "25760",
    "end": "28800"
  },
  {
    "text": "introduction to the project actors",
    "start": "28800",
    "end": "32078"
  },
  {
    "text": "then we will dive deeper into the design",
    "start": "32079",
    "end": "35520"
  },
  {
    "text": "and implementation details of the",
    "start": "35520",
    "end": "38160"
  },
  {
    "text": "unified runtime project",
    "start": "38160",
    "end": "40079"
  },
  {
    "text": "in actors we will finish this talk",
    "start": "40079",
    "end": "43520"
  },
  {
    "text": "with a demo and some future works in",
    "start": "43520",
    "end": "46079"
  },
  {
    "text": "this area",
    "start": "46079",
    "end": "47840"
  },
  {
    "text": "we hope you can walk away from this talk",
    "start": "47840",
    "end": "50719"
  },
  {
    "text": "with",
    "start": "50719",
    "end": "51280"
  },
  {
    "text": "understanding on this novel design and",
    "start": "51280",
    "end": "53920"
  },
  {
    "text": "even better",
    "start": "53920",
    "end": "55120"
  },
  {
    "text": "inspired interested and contribute",
    "start": "55120",
    "end": "58239"
  },
  {
    "text": "to those projects okay let's start with",
    "start": "58239",
    "end": "61440"
  },
  {
    "text": "background and motivation",
    "start": "61440",
    "end": "63840"
  },
  {
    "text": "the motivation of this work comes from",
    "start": "63840",
    "end": "65600"
  },
  {
    "text": "the fact that we want to be able to run",
    "start": "65600",
    "end": "67360"
  },
  {
    "text": "virtual machine and a container at the",
    "start": "67360",
    "end": "68880"
  },
  {
    "text": "same time",
    "start": "68880",
    "end": "70240"
  },
  {
    "text": "traditionally if you want a virtual",
    "start": "70240",
    "end": "71920"
  },
  {
    "text": "machine you could use openstack for",
    "start": "71920",
    "end": "73520"
  },
  {
    "text": "container you could use",
    "start": "73520",
    "end": "74560"
  },
  {
    "text": "kubernetes but they're run as two",
    "start": "74560",
    "end": "76400"
  },
  {
    "text": "different clusters",
    "start": "76400",
    "end": "78159"
  },
  {
    "text": "uh at a certain point that we have this",
    "start": "78159",
    "end": "79920"
  },
  {
    "text": "requirement that okay we want to run",
    "start": "79920",
    "end": "81840"
  },
  {
    "text": "both virtual machine and container",
    "start": "81840",
    "end": "83600"
  },
  {
    "text": "in the same bare metal cluster we could",
    "start": "83600",
    "end": "86479"
  },
  {
    "text": "still use",
    "start": "86479",
    "end": "87119"
  },
  {
    "text": "two clusters two different stacks",
    "start": "87119",
    "end": "90400"
  },
  {
    "text": "the problem with that is that it's very",
    "start": "90400",
    "end": "92400"
  },
  {
    "text": "hard to coordinate the resource",
    "start": "92400",
    "end": "93920"
  },
  {
    "text": "allocation between these two stack",
    "start": "93920",
    "end": "95600"
  },
  {
    "text": "because they're being run",
    "start": "95600",
    "end": "96960"
  },
  {
    "text": "independently of each other this is",
    "start": "96960",
    "end": "99280"
  },
  {
    "text": "where the new design comes in where we",
    "start": "99280",
    "end": "101280"
  },
  {
    "text": "just want to have one single layer of",
    "start": "101280",
    "end": "103360"
  },
  {
    "text": "orchestration between the workloads and",
    "start": "103360",
    "end": "105759"
  },
  {
    "text": "the bare metal cluster",
    "start": "105759",
    "end": "108240"
  },
  {
    "text": "there are a few solutions to allow you",
    "start": "108240",
    "end": "110880"
  },
  {
    "text": "to have vm pod",
    "start": "110880",
    "end": "112079"
  },
  {
    "text": "in kubernetes for example you could do",
    "start": "112079",
    "end": "114960"
  },
  {
    "text": "the crd",
    "start": "114960",
    "end": "115759"
  },
  {
    "text": "and operator solution also you could",
    "start": "115759",
    "end": "117920"
  },
  {
    "text": "have some external component",
    "start": "117920",
    "end": "120000"
  },
  {
    "text": "to kubernetes to allow you to access the",
    "start": "120000",
    "end": "122560"
  },
  {
    "text": "vm",
    "start": "122560",
    "end": "123040"
  },
  {
    "text": "pod one issue here is that",
    "start": "123040",
    "end": "126159"
  },
  {
    "text": "by doing this we're still going through",
    "start": "126159",
    "end": "127920"
  },
  {
    "text": "what the kubernetes provide us",
    "start": "127920",
    "end": "129599"
  },
  {
    "text": "in terms of the cri interface and that",
    "start": "129599",
    "end": "132400"
  },
  {
    "text": "has some limitation",
    "start": "132400",
    "end": "133680"
  },
  {
    "text": "as to what kind of feature you can have",
    "start": "133680",
    "end": "136239"
  },
  {
    "text": "uh",
    "start": "136239",
    "end": "136800"
  },
  {
    "text": "in the virtual machine uh with our",
    "start": "136800",
    "end": "139840"
  },
  {
    "text": "project",
    "start": "139840",
    "end": "140319"
  },
  {
    "text": "which is called actos we are taking a",
    "start": "140319",
    "end": "142800"
  },
  {
    "text": "more more of a",
    "start": "142800",
    "end": "144480"
  },
  {
    "text": "native approach which means we are",
    "start": "144480",
    "end": "147040"
  },
  {
    "text": "making changes to kubernetes itself",
    "start": "147040",
    "end": "149280"
  },
  {
    "text": "and by doing this we want to provide the",
    "start": "149280",
    "end": "151840"
  },
  {
    "text": "virtual machine",
    "start": "151840",
    "end": "152640"
  },
  {
    "text": "as a first-class citizen and also we",
    "start": "152640",
    "end": "155280"
  },
  {
    "text": "want to provide",
    "start": "155280",
    "end": "156239"
  },
  {
    "text": "the full feature for virtual machine",
    "start": "156239",
    "end": "158319"
  },
  {
    "text": "instead of a simplified one",
    "start": "158319",
    "end": "161519"
  },
  {
    "text": "uh here are a few challenges we're",
    "start": "161519",
    "end": "163280"
  },
  {
    "text": "facing first of all we want to provide a",
    "start": "163280",
    "end": "165280"
  },
  {
    "text": "better solution than just kubernetes",
    "start": "165280",
    "end": "167040"
  },
  {
    "text": "plus openstack",
    "start": "167040",
    "end": "168319"
  },
  {
    "text": "as we have discussed we want to provide",
    "start": "168319",
    "end": "170319"
  },
  {
    "text": "feature like the resource allocation",
    "start": "170319",
    "end": "171920"
  },
  {
    "text": "coordination",
    "start": "171920",
    "end": "172959"
  },
  {
    "text": "to this second is we want to stay open",
    "start": "172959",
    "end": "175840"
  },
  {
    "text": "and",
    "start": "175840",
    "end": "176080"
  },
  {
    "text": "extensible for future if we have more",
    "start": "176080",
    "end": "179280"
  },
  {
    "text": "workload types",
    "start": "179280",
    "end": "180480"
  },
  {
    "text": "we we should be able to adapt to and",
    "start": "180480",
    "end": "183040"
  },
  {
    "text": "accommodate them",
    "start": "183040",
    "end": "184879"
  },
  {
    "text": "very easily the third one is uh",
    "start": "184879",
    "end": "188319"
  },
  {
    "text": "we will have a unified type definition",
    "start": "188319",
    "end": "190400"
  },
  {
    "text": "for both the virtual machine and the",
    "start": "190400",
    "end": "191840"
  },
  {
    "text": "container",
    "start": "191840",
    "end": "192640"
  },
  {
    "text": "what this means is that uh basically",
    "start": "192640",
    "end": "195599"
  },
  {
    "text": "virtual machine is the first class",
    "start": "195599",
    "end": "196959"
  },
  {
    "text": "season",
    "start": "196959",
    "end": "197440"
  },
  {
    "text": "it's not a guest or it's not the add-on",
    "start": "197440",
    "end": "200000"
  },
  {
    "text": "uh the",
    "start": "200000",
    "end": "200720"
  },
  {
    "text": "the pilot definition for instance is for",
    "start": "200720",
    "end": "203920"
  },
  {
    "text": "virtual machine it's very similar to the",
    "start": "203920",
    "end": "205760"
  },
  {
    "text": "pod definition for containers",
    "start": "205760",
    "end": "207840"
  },
  {
    "text": "and this also leads us to the the fourth",
    "start": "207840",
    "end": "210000"
  },
  {
    "text": "challenge",
    "start": "210000",
    "end": "211280"
  },
  {
    "text": "that we want to provide rich operations",
    "start": "211280",
    "end": "213680"
  },
  {
    "text": "for virtual machine",
    "start": "213680",
    "end": "214799"
  },
  {
    "text": "because we're a more native approach we",
    "start": "214799",
    "end": "217280"
  },
  {
    "text": "are able to extend the cri interface",
    "start": "217280",
    "end": "219840"
  },
  {
    "text": "and then that allows us the possibility",
    "start": "219840",
    "end": "222879"
  },
  {
    "text": "of providing more features there",
    "start": "222879",
    "end": "227840"
  },
  {
    "text": "the actos project has a lot of a lot of",
    "start": "227840",
    "end": "230319"
  },
  {
    "text": "features",
    "start": "230319",
    "end": "230879"
  },
  {
    "text": "the unified runtime is one of them this",
    "start": "230879",
    "end": "233200"
  },
  {
    "text": "is the focus of this talk today",
    "start": "233200",
    "end": "235120"
  },
  {
    "text": "but if you're interested in other part",
    "start": "235120",
    "end": "237680"
  },
  {
    "text": "of october's project",
    "start": "237680",
    "end": "239280"
  },
  {
    "text": "feel free to take a look at our virtual",
    "start": "239280",
    "end": "241200"
  },
  {
    "text": "booth and also actos project is",
    "start": "241200",
    "end": "244080"
  },
  {
    "text": "is part of a bigger project called",
    "start": "244080",
    "end": "246239"
  },
  {
    "text": "centeris from us",
    "start": "246239",
    "end": "247840"
  },
  {
    "text": "and uh yeah that will also be show shown",
    "start": "247840",
    "end": "250720"
  },
  {
    "text": "at the",
    "start": "250720",
    "end": "251200"
  },
  {
    "text": "virtual booth with this i'm gonna hand",
    "start": "251200",
    "end": "254560"
  },
  {
    "text": "over to human for design and features",
    "start": "254560",
    "end": "259040"
  },
  {
    "text": "okay let's go design",
    "start": "259919",
    "end": "263440"
  },
  {
    "start": "265000",
    "end": "498000"
  },
  {
    "text": "let's first briefly give a high level",
    "start": "267520",
    "end": "270880"
  },
  {
    "text": "review to refresh aaron's memory before",
    "start": "270880",
    "end": "274080"
  },
  {
    "text": "we dive",
    "start": "274080",
    "end": "274720"
  },
  {
    "text": "into the unified runtime design",
    "start": "274720",
    "end": "278000"
  },
  {
    "text": "cubelet gets content runtime endpoint",
    "start": "278000",
    "end": "281199"
  },
  {
    "text": "where the content runtime and the",
    "start": "281199",
    "end": "283600"
  },
  {
    "text": "container runtime endpoint command line",
    "start": "283600",
    "end": "285759"
  },
  {
    "text": "arguments",
    "start": "285759",
    "end": "287040"
  },
  {
    "text": "kubernetes use this information to",
    "start": "287040",
    "end": "289199"
  },
  {
    "text": "construct the remote runtime services",
    "start": "289199",
    "end": "292240"
  },
  {
    "text": "and pass it into the generic",
    "start": "292240",
    "end": "295440"
  },
  {
    "text": "random manager object when kubernetes",
    "start": "295440",
    "end": "298479"
  },
  {
    "text": "manager gets the part",
    "start": "298479",
    "end": "300639"
  },
  {
    "text": "it computes necessary actions for",
    "start": "300639",
    "end": "303120"
  },
  {
    "text": "example",
    "start": "303120",
    "end": "303840"
  },
  {
    "text": "create container for the given part",
    "start": "303840",
    "end": "307039"
  },
  {
    "text": "with a series of api invocations",
    "start": "307039",
    "end": "310400"
  },
  {
    "text": "the request is then handed out by the",
    "start": "310400",
    "end": "313039"
  },
  {
    "text": "remote runtime service",
    "start": "313039",
    "end": "314560"
  },
  {
    "text": "via the rpc call please keep in mind",
    "start": "314560",
    "end": "318800"
  },
  {
    "text": "that the current only one runtime",
    "start": "318800",
    "end": "322400"
  },
  {
    "text": "service supported in kubernetes",
    "start": "322400",
    "end": "327280"
  },
  {
    "text": "now let's take a look at the current",
    "start": "328400",
    "end": "330639"
  },
  {
    "text": "changes",
    "start": "330639",
    "end": "331680"
  },
  {
    "text": "in actors this is a high level design",
    "start": "331680",
    "end": "334880"
  },
  {
    "text": "diagram for the multiple runtime service",
    "start": "334880",
    "end": "337360"
  },
  {
    "text": "management in actors",
    "start": "337360",
    "end": "339440"
  },
  {
    "text": "the goals are simple natively support",
    "start": "339440",
    "end": "342639"
  },
  {
    "text": "vm workload extensible for future random",
    "start": "342639",
    "end": "346160"
  },
  {
    "text": "apis",
    "start": "346160",
    "end": "348400"
  },
  {
    "text": "the components highlights in purple and",
    "start": "348400",
    "end": "351199"
  },
  {
    "text": "time colors",
    "start": "351199",
    "end": "352320"
  },
  {
    "text": "are major changes to achieve these goals",
    "start": "352320",
    "end": "356639"
  },
  {
    "text": "the cubelets now accept multiple runtime",
    "start": "356639",
    "end": "359919"
  },
  {
    "text": "endpoints",
    "start": "359919",
    "end": "361039"
  },
  {
    "text": "and extra information for the workload",
    "start": "361039",
    "end": "363680"
  },
  {
    "text": "type",
    "start": "363680",
    "end": "364319"
  },
  {
    "text": "and the designated runtime names",
    "start": "364319",
    "end": "367759"
  },
  {
    "text": "a new component runtime registry",
    "start": "367759",
    "end": "370960"
  },
  {
    "text": "was added to store and maintains this",
    "start": "370960",
    "end": "374240"
  },
  {
    "text": "information",
    "start": "374240",
    "end": "375600"
  },
  {
    "text": "the cubelet when constructing the",
    "start": "375600",
    "end": "377919"
  },
  {
    "text": "runtime manager",
    "start": "377919",
    "end": "379360"
  },
  {
    "text": "instead of passing in the single remote",
    "start": "379360",
    "end": "381919"
  },
  {
    "text": "runtime service interface",
    "start": "381919",
    "end": "383919"
  },
  {
    "text": "now it passes in the runtime registry",
    "start": "383919",
    "end": "389199"
  },
  {
    "text": "the runtime registry provides gather",
    "start": "389440",
    "end": "392000"
  },
  {
    "text": "apis",
    "start": "392000",
    "end": "392880"
  },
  {
    "text": "to runtime manager to get the desired",
    "start": "392880",
    "end": "395440"
  },
  {
    "text": "workload",
    "start": "395440",
    "end": "396880"
  },
  {
    "text": "based on the part workload type",
    "start": "396880",
    "end": "401440"
  },
  {
    "text": "each runtime service for different",
    "start": "401440",
    "end": "404160"
  },
  {
    "text": "workload will require",
    "start": "404160",
    "end": "405520"
  },
  {
    "text": "different spec for the workload types",
    "start": "405520",
    "end": "408319"
  },
  {
    "text": "the port converter",
    "start": "408319",
    "end": "410000"
  },
  {
    "text": "is an adapter for type conversion",
    "start": "410000",
    "end": "412560"
  },
  {
    "text": "between actors",
    "start": "412560",
    "end": "413759"
  },
  {
    "text": "and runtime services in a nutshell",
    "start": "413759",
    "end": "417039"
  },
  {
    "text": "it translates the vm part definition",
    "start": "417039",
    "end": "419599"
  },
  {
    "text": "actors",
    "start": "419599",
    "end": "420560"
  },
  {
    "text": "to the desired spec that the remote",
    "start": "420560",
    "end": "423039"
  },
  {
    "text": "runtime service expects",
    "start": "423039",
    "end": "425680"
  },
  {
    "text": "last but not least the random container",
    "start": "425680",
    "end": "429360"
  },
  {
    "text": "interface",
    "start": "429360",
    "end": "430479"
  },
  {
    "text": "the runtime internal interface and the",
    "start": "430479",
    "end": "433280"
  },
  {
    "text": "cr",
    "start": "433280",
    "end": "433840"
  },
  {
    "text": "interface are extended to support vm",
    "start": "433840",
    "end": "436880"
  },
  {
    "text": "specific operations",
    "start": "436880",
    "end": "438560"
  },
  {
    "text": "such as start stop reboot click snapshot",
    "start": "438560",
    "end": "441759"
  },
  {
    "text": "etc",
    "start": "441759",
    "end": "443599"
  },
  {
    "text": "now in actors when a new part is created",
    "start": "443599",
    "end": "447440"
  },
  {
    "text": "and scheduled the rental manager gets",
    "start": "447440",
    "end": "450560"
  },
  {
    "text": "the pulse",
    "start": "450560",
    "end": "451440"
  },
  {
    "text": "it will call the runtime registry to get",
    "start": "451440",
    "end": "454479"
  },
  {
    "text": "the desired runtime service for the part",
    "start": "454479",
    "end": "458080"
  },
  {
    "text": "based on the workload type the desired",
    "start": "458080",
    "end": "461039"
  },
  {
    "text": "runtime service api",
    "start": "461039",
    "end": "463199"
  },
  {
    "text": "are called for the powered actions we",
    "start": "463199",
    "end": "466080"
  },
  {
    "text": "call this",
    "start": "466080",
    "end": "467440"
  },
  {
    "text": "the power runtime late binding",
    "start": "467440",
    "end": "471280"
  },
  {
    "text": "with the real-time registry power",
    "start": "471280",
    "end": "473840"
  },
  {
    "text": "converter",
    "start": "473840",
    "end": "474960"
  },
  {
    "text": "the crr extension together achieve the",
    "start": "474960",
    "end": "478319"
  },
  {
    "text": "goal",
    "start": "478319",
    "end": "478960"
  },
  {
    "text": "to support multiple random services",
    "start": "478960",
    "end": "481680"
  },
  {
    "text": "natively",
    "start": "481680",
    "end": "483360"
  },
  {
    "text": "and make actors extensible",
    "start": "483360",
    "end": "486639"
  },
  {
    "text": "for new runtime services and provide",
    "start": "486639",
    "end": "490479"
  },
  {
    "text": "rich vm operations in the next few",
    "start": "490479",
    "end": "493919"
  },
  {
    "text": "slides",
    "start": "493919",
    "end": "494879"
  },
  {
    "text": "we'll share some more details of them",
    "start": "494879",
    "end": "498800"
  },
  {
    "text": "let's take a closer look at the runtime",
    "start": "500080",
    "end": "502720"
  },
  {
    "text": "service registry type",
    "start": "502720",
    "end": "504400"
  },
  {
    "text": "and interfaces as we can see besides",
    "start": "504400",
    "end": "507919"
  },
  {
    "text": "the internal run internal api runtime",
    "start": "507919",
    "end": "511440"
  },
  {
    "text": "services",
    "start": "511440",
    "end": "512479"
  },
  {
    "text": "which is constructed by kubelet a few",
    "start": "512479",
    "end": "515518"
  },
  {
    "text": "more fields",
    "start": "515519",
    "end": "516560"
  },
  {
    "text": "are maintained the workload type is to",
    "start": "516560",
    "end": "519760"
  },
  {
    "text": "determine",
    "start": "519760",
    "end": "520800"
  },
  {
    "text": "which workload the runtime supports",
    "start": "520800",
    "end": "524640"
  },
  {
    "text": "the its primary field is used to",
    "start": "524640",
    "end": "527360"
  },
  {
    "text": "determine",
    "start": "527360",
    "end": "528160"
  },
  {
    "text": "the must-have runtime service on the",
    "start": "528160",
    "end": "530560"
  },
  {
    "text": "node",
    "start": "530560",
    "end": "531360"
  },
  {
    "text": "which is used for node readiness check",
    "start": "531360",
    "end": "535519"
  },
  {
    "text": "currently only static registration is",
    "start": "535519",
    "end": "538800"
  },
  {
    "text": "supported",
    "start": "538800",
    "end": "540240"
  },
  {
    "text": "in the future the dynamic registration",
    "start": "540240",
    "end": "542560"
  },
  {
    "text": "will be added",
    "start": "542560",
    "end": "544399"
  },
  {
    "text": "so when a node is ready to support new",
    "start": "544399",
    "end": "547519"
  },
  {
    "text": "workload",
    "start": "547519",
    "end": "548080"
  },
  {
    "text": "types couplet won't need to be restarted",
    "start": "548080",
    "end": "551839"
  },
  {
    "text": "to load it up",
    "start": "551839",
    "end": "554640"
  },
  {
    "text": "optos is designed to support",
    "start": "555839",
    "end": "558160"
  },
  {
    "text": "full-fledged",
    "start": "558160",
    "end": "559120"
  },
  {
    "text": "vm definition and operations on vms",
    "start": "559120",
    "end": "562720"
  },
  {
    "text": "to match the feature set currently",
    "start": "562720",
    "end": "565360"
  },
  {
    "text": "openstacks offer",
    "start": "565360",
    "end": "568399"
  },
  {
    "text": "in actors the cr interface has been",
    "start": "568480",
    "end": "572080"
  },
  {
    "text": "extended with a set of new apis",
    "start": "572080",
    "end": "575360"
  },
  {
    "text": "to support those operations need to",
    "start": "575360",
    "end": "578399"
  },
  {
    "text": "mention that",
    "start": "578399",
    "end": "579519"
  },
  {
    "text": "even currently there's no deep changes",
    "start": "579519",
    "end": "582880"
  },
  {
    "text": "at the internal data structures",
    "start": "582880",
    "end": "585920"
  },
  {
    "text": "with some effort to allow the runtime",
    "start": "585920",
    "end": "589279"
  },
  {
    "text": "sdk as plugins",
    "start": "589279",
    "end": "592720"
  },
  {
    "text": "in the remote package in kublet it can",
    "start": "592720",
    "end": "596080"
  },
  {
    "text": "be",
    "start": "596080",
    "end": "596399"
  },
  {
    "text": "extended to support customized",
    "start": "596399",
    "end": "599279"
  },
  {
    "text": "interfaces",
    "start": "599279",
    "end": "602000"
  },
  {
    "start": "602000",
    "end": "742000"
  },
  {
    "text": "invitation",
    "start": "602839",
    "end": "604079"
  },
  {
    "text": "with multiple runtime service in kubelet",
    "start": "604079",
    "end": "607120"
  },
  {
    "text": "and supporting vm types we have facing",
    "start": "607120",
    "end": "610560"
  },
  {
    "text": "some design decisions to make",
    "start": "610560",
    "end": "612959"
  },
  {
    "text": "due to time constraint i only share a",
    "start": "612959",
    "end": "614880"
  },
  {
    "text": "couple here",
    "start": "614880",
    "end": "616839"
  },
  {
    "text": "first we have to ensure",
    "start": "616839",
    "end": "620160"
  },
  {
    "text": "the compute resources such as cpu memory",
    "start": "620160",
    "end": "623120"
  },
  {
    "text": "etc are controlled",
    "start": "623120",
    "end": "625040"
  },
  {
    "text": "shared among the vm and the container",
    "start": "625040",
    "end": "627440"
  },
  {
    "text": "types on the node",
    "start": "627440",
    "end": "629279"
  },
  {
    "text": "in actors this is this is designed such",
    "start": "629279",
    "end": "632640"
  },
  {
    "text": "way",
    "start": "632640",
    "end": "633680"
  },
  {
    "text": "when the vm is created the actual",
    "start": "633680",
    "end": "636800"
  },
  {
    "text": "runtime service",
    "start": "636800",
    "end": "638000"
  },
  {
    "text": "creates the sql path for the vm",
    "start": "638000",
    "end": "641519"
  },
  {
    "text": "following the same layout pattern as the",
    "start": "641519",
    "end": "644480"
  },
  {
    "text": "container workload type",
    "start": "644480",
    "end": "646320"
  },
  {
    "text": "for example it would be under keeper",
    "start": "646320",
    "end": "649200"
  },
  {
    "text": "pause",
    "start": "649200",
    "end": "650079"
  },
  {
    "text": "burst ball slash port id slash vm id",
    "start": "650079",
    "end": "654399"
  },
  {
    "text": "and the random service moves the vm",
    "start": "654399",
    "end": "657680"
  },
  {
    "text": "process to the sql path for vms",
    "start": "657680",
    "end": "662240"
  },
  {
    "text": "there are three set of metadata in terms",
    "start": "662240",
    "end": "665519"
  },
  {
    "text": "of resource control",
    "start": "665519",
    "end": "667600"
  },
  {
    "text": "the first one is the sql metadata which",
    "start": "667600",
    "end": "670079"
  },
  {
    "text": "is sql files and each control",
    "start": "670079",
    "end": "673040"
  },
  {
    "text": "the second one is the random metadata",
    "start": "673040",
    "end": "676079"
  },
  {
    "text": "and the third one would be the leap word",
    "start": "676079",
    "end": "678640"
  },
  {
    "text": "vm",
    "start": "678640",
    "end": "679760"
  },
  {
    "text": "domain definition the actors vm runtime",
    "start": "679760",
    "end": "683519"
  },
  {
    "text": "service",
    "start": "683519",
    "end": "684160"
  },
  {
    "text": "keeps them synchronized by checking them",
    "start": "684160",
    "end": "687519"
  },
  {
    "text": "each time with the win win the vm status",
    "start": "687519",
    "end": "690959"
  },
  {
    "text": "is reported",
    "start": "690959",
    "end": "693760"
  },
  {
    "text": "another one is to handle the node status",
    "start": "694240",
    "end": "697839"
  },
  {
    "text": "with multiple runtime service on it",
    "start": "697839",
    "end": "700480"
  },
  {
    "text": "recall",
    "start": "700480",
    "end": "701600"
  },
  {
    "text": "the its primary field in the runtime",
    "start": "701600",
    "end": "704000"
  },
  {
    "text": "registry type",
    "start": "704000",
    "end": "705519"
  },
  {
    "text": "the actors with multiple runtime service",
    "start": "705519",
    "end": "708959"
  },
  {
    "text": "on the node we allow the cluster admin",
    "start": "708959",
    "end": "712079"
  },
  {
    "text": "to",
    "start": "712079",
    "end": "712480"
  },
  {
    "text": "elect one as the primary runtime service",
    "start": "712480",
    "end": "716240"
  },
  {
    "text": "and use it to determine the node's",
    "start": "716240",
    "end": "718880"
  },
  {
    "text": "runtime readiness",
    "start": "718880",
    "end": "720720"
  },
  {
    "text": "the scheduler will only schedule the",
    "start": "720720",
    "end": "724320"
  },
  {
    "text": "workload",
    "start": "724320",
    "end": "725200"
  },
  {
    "text": "to the node where the desired runtime",
    "start": "725200",
    "end": "728399"
  },
  {
    "text": "service is ready this is very important",
    "start": "728399",
    "end": "731760"
  },
  {
    "text": "in the cluster so the node will be still",
    "start": "731760",
    "end": "735040"
  },
  {
    "text": "useful",
    "start": "735040",
    "end": "735920"
  },
  {
    "text": "as long as the primary runtime service",
    "start": "735920",
    "end": "738959"
  },
  {
    "text": "is ready",
    "start": "738959",
    "end": "741519"
  },
  {
    "start": "742000",
    "end": "1085000"
  },
  {
    "text": "so with those uh design decisions we are",
    "start": "743040",
    "end": "745920"
  },
  {
    "text": "able to have this unified runtime to",
    "start": "745920",
    "end": "748000"
  },
  {
    "text": "allow the both the",
    "start": "748000",
    "end": "749440"
  },
  {
    "text": "vm and the container to run the same",
    "start": "749440",
    "end": "751360"
  },
  {
    "text": "time there are a few other",
    "start": "751360",
    "end": "753279"
  },
  {
    "text": "features that we want to mention here",
    "start": "753279",
    "end": "754959"
  },
  {
    "text": "one of them is the the pod state",
    "start": "754959",
    "end": "757040"
  },
  {
    "text": "management",
    "start": "757040",
    "end": "758160"
  },
  {
    "text": "what this allows us to do is to be able",
    "start": "758160",
    "end": "760639"
  },
  {
    "text": "to have the vm",
    "start": "760639",
    "end": "761920"
  },
  {
    "text": "to go from a running state to a shutdown",
    "start": "761920",
    "end": "764240"
  },
  {
    "text": "state",
    "start": "764240",
    "end": "765279"
  },
  {
    "text": "or to a hibernate state and come back",
    "start": "765279",
    "end": "768079"
  },
  {
    "text": "this is",
    "start": "768079",
    "end": "768720"
  },
  {
    "text": "different from just shutting down and",
    "start": "768720",
    "end": "770399"
  },
  {
    "text": "deleting",
    "start": "770399",
    "end": "771920"
  },
  {
    "text": "a pod this will keep all the state of",
    "start": "771920",
    "end": "774720"
  },
  {
    "text": "the vm",
    "start": "774720",
    "end": "775519"
  },
  {
    "text": "so that when we are ready we can bring",
    "start": "775519",
    "end": "777279"
  },
  {
    "text": "them back running with all the same",
    "start": "777279",
    "end": "778800"
  },
  {
    "text": "state",
    "start": "778800",
    "end": "779600"
  },
  {
    "text": "uh in this diagram i have a quick",
    "start": "779600",
    "end": "783200"
  },
  {
    "text": "mechanism showing how this works so for",
    "start": "783200",
    "end": "785760"
  },
  {
    "text": "example",
    "start": "785760",
    "end": "786480"
  },
  {
    "text": "we have this vm pod running on a node",
    "start": "786480",
    "end": "789839"
  },
  {
    "text": "and in the definition of this other in",
    "start": "789839",
    "end": "792560"
  },
  {
    "text": "the products back section we have this",
    "start": "792560",
    "end": "794240"
  },
  {
    "text": "virtual machine",
    "start": "794240",
    "end": "796560"
  },
  {
    "text": "and one of the the key is the power spec",
    "start": "796560",
    "end": "800880"
  },
  {
    "text": "that's showing the running state the",
    "start": "800880",
    "end": "802160"
  },
  {
    "text": "power spec indicates what the state",
    "start": "802160",
    "end": "804800"
  },
  {
    "text": "the vm should be running and now it's in",
    "start": "804800",
    "end": "807360"
  },
  {
    "text": "the running",
    "start": "807360",
    "end": "808160"
  },
  {
    "text": "state so that means that the power",
    "start": "808160",
    "end": "810079"
  },
  {
    "text": "should be running and it is running here",
    "start": "810079",
    "end": "812079"
  },
  {
    "text": "to change this for example at a certain",
    "start": "812079",
    "end": "813680"
  },
  {
    "text": "point that we want to shut this down",
    "start": "813680",
    "end": "815279"
  },
  {
    "text": "maybe to uh control resource uh or",
    "start": "815279",
    "end": "818399"
  },
  {
    "text": "just avoid using resources when we're",
    "start": "818399",
    "end": "820240"
  },
  {
    "text": "not using this virtual machine",
    "start": "820240",
    "end": "821920"
  },
  {
    "text": "what we can do is we can issue a patch",
    "start": "821920",
    "end": "824079"
  },
  {
    "text": "command to the pod",
    "start": "824079",
    "end": "826079"
  },
  {
    "text": "uh to indicate okay we want to change",
    "start": "826079",
    "end": "828000"
  },
  {
    "text": "this part to shut down",
    "start": "828000",
    "end": "829360"
  },
  {
    "text": "and then what's that's going to do is",
    "start": "829360",
    "end": "831680"
  },
  {
    "text": "it's not",
    "start": "831680",
    "end": "832480"
  },
  {
    "text": "it's going to trigger the control plan",
    "start": "832480",
    "end": "834480"
  },
  {
    "text": "to take this part out of resources",
    "start": "834480",
    "end": "837199"
  },
  {
    "text": "from the node and put that in a shutdown",
    "start": "837199",
    "end": "840480"
  },
  {
    "text": "state",
    "start": "840480",
    "end": "841279"
  },
  {
    "text": "when the scheduler sees this for example",
    "start": "841279",
    "end": "843120"
  },
  {
    "text": "it it will see the shutdown state they",
    "start": "843120",
    "end": "845199"
  },
  {
    "text": "will see that it's intended",
    "start": "845199",
    "end": "846800"
  },
  {
    "text": "so it will not uh try to reschedule this",
    "start": "846800",
    "end": "849839"
  },
  {
    "text": "part",
    "start": "849839",
    "end": "850160"
  },
  {
    "text": "anywhere else when we are ready to bring",
    "start": "850160",
    "end": "852639"
  },
  {
    "text": "this back",
    "start": "852639",
    "end": "853440"
  },
  {
    "text": "we can do something very similar to",
    "start": "853440",
    "end": "856560"
  },
  {
    "text": "brain back we can issue another patch",
    "start": "856560",
    "end": "858480"
  },
  {
    "text": "command to change this from shutdown to",
    "start": "858480",
    "end": "860399"
  },
  {
    "text": "running",
    "start": "860399",
    "end": "861680"
  },
  {
    "text": "similarly the control plan will see",
    "start": "861680",
    "end": "864240"
  },
  {
    "text": "these",
    "start": "864240",
    "end": "865040"
  },
  {
    "text": "changes and the controller now sees that",
    "start": "865040",
    "end": "868079"
  },
  {
    "text": "okay we want this to be in a running",
    "start": "868079",
    "end": "869600"
  },
  {
    "text": "state",
    "start": "869600",
    "end": "870000"
  },
  {
    "text": "the controller will schedule this",
    "start": "870000",
    "end": "872000"
  },
  {
    "text": "product to some note that the",
    "start": "872000",
    "end": "874079"
  },
  {
    "text": "new node can be the same node or it",
    "start": "874079",
    "end": "876000"
  },
  {
    "text": "cannot be the same node it all depends",
    "start": "876000",
    "end": "879120"
  },
  {
    "text": "on the",
    "start": "879120",
    "end": "879680"
  },
  {
    "text": "resource availability at that time",
    "start": "879680",
    "end": "883680"
  },
  {
    "text": "and when the pod is back up running it",
    "start": "883680",
    "end": "886079"
  },
  {
    "text": "will have",
    "start": "886079",
    "end": "886720"
  },
  {
    "text": "have all the state from the previous",
    "start": "886720",
    "end": "888800"
  },
  {
    "text": "life so it's as if we just pause the pod",
    "start": "888800",
    "end": "891360"
  },
  {
    "text": "for",
    "start": "891360",
    "end": "891760"
  },
  {
    "text": "for some time um here",
    "start": "891760",
    "end": "894880"
  },
  {
    "text": "the next one on the agenda is we were",
    "start": "894880",
    "end": "897360"
  },
  {
    "text": "going to do a demo",
    "start": "897360",
    "end": "899279"
  },
  {
    "text": "so in this demo let me switch to the",
    "start": "899279",
    "end": "902480"
  },
  {
    "text": "demo window",
    "start": "902480",
    "end": "903440"
  },
  {
    "text": "uh in this demo i will uh basically",
    "start": "903440",
    "end": "906720"
  },
  {
    "text": "let you see i will have two parts here",
    "start": "906720",
    "end": "909519"
  },
  {
    "text": "one",
    "start": "909519",
    "end": "909839"
  },
  {
    "text": "is a virtual machine pod as you can see",
    "start": "909839",
    "end": "911920"
  },
  {
    "text": "this part is the definition for the",
    "start": "911920",
    "end": "913839"
  },
  {
    "text": "virtual machine",
    "start": "913839",
    "end": "914880"
  },
  {
    "text": "on the right is a traditional uh",
    "start": "914880",
    "end": "916880"
  },
  {
    "text": "container a pod",
    "start": "916880",
    "end": "918160"
  },
  {
    "text": "so you can see that it's uh it's very",
    "start": "918160",
    "end": "919920"
  },
  {
    "text": "basic uh definition is",
    "start": "919920",
    "end": "921760"
  },
  {
    "text": "a very simple definition uh one thing i",
    "start": "921760",
    "end": "924320"
  },
  {
    "text": "want to point out here is that uh as you",
    "start": "924320",
    "end": "926240"
  },
  {
    "text": "can see the virtual machine now is",
    "start": "926240",
    "end": "927680"
  },
  {
    "text": "on the same level of definition to the",
    "start": "927680",
    "end": "930000"
  },
  {
    "text": "container so it's not a guess that is a",
    "start": "930000",
    "end": "932320"
  },
  {
    "text": "first class citizen",
    "start": "932320",
    "end": "933680"
  },
  {
    "text": "uh to be there and the the rest of the",
    "start": "933680",
    "end": "936639"
  },
  {
    "text": "definition for example for the resource",
    "start": "936639",
    "end": "938240"
  },
  {
    "text": "part and the",
    "start": "938240",
    "end": "939279"
  },
  {
    "text": "resource limited request is very similar",
    "start": "939279",
    "end": "941199"
  },
  {
    "text": "to the what the container has",
    "start": "941199",
    "end": "943600"
  },
  {
    "text": "okay so the first part of the demo is",
    "start": "943600",
    "end": "946720"
  },
  {
    "text": "let's create",
    "start": "946720",
    "end": "947519"
  },
  {
    "text": "this two parts i do that",
    "start": "947519",
    "end": "950560"
  },
  {
    "text": "create let's create the container part",
    "start": "950560",
    "end": "952560"
  },
  {
    "text": "and let's create the vm",
    "start": "952560",
    "end": "954000"
  },
  {
    "text": "part and here",
    "start": "954000",
    "end": "957279"
  },
  {
    "text": "we can see that the both parts are being",
    "start": "957279",
    "end": "960800"
  },
  {
    "text": "created and in a second we'll see that",
    "start": "960800",
    "end": "963279"
  },
  {
    "text": "they'll go from",
    "start": "963279",
    "end": "964720"
  },
  {
    "text": "pending to running that's good now let's",
    "start": "964720",
    "end": "967920"
  },
  {
    "text": "take a look at what the part",
    "start": "967920",
    "end": "969279"
  },
  {
    "text": "is actually the vm part so uh",
    "start": "969279",
    "end": "972720"
  },
  {
    "text": "here i'm gonna show you a few things one",
    "start": "972720",
    "end": "975600"
  },
  {
    "text": "is uh",
    "start": "975600",
    "end": "976160"
  },
  {
    "text": "we talked about this section right uh we",
    "start": "976160",
    "end": "977920"
  },
  {
    "text": "have this power spec to indicate the",
    "start": "977920",
    "end": "979920"
  },
  {
    "text": "what is that",
    "start": "979920",
    "end": "980959"
  },
  {
    "text": "the vm should be running and in the",
    "start": "980959",
    "end": "983600"
  },
  {
    "text": "status section",
    "start": "983600",
    "end": "984720"
  },
  {
    "text": "we actually have the the virtual machine",
    "start": "984720",
    "end": "987120"
  },
  {
    "text": "status",
    "start": "987120",
    "end": "987920"
  },
  {
    "text": "and also uh we have the product",
    "start": "987920",
    "end": "990480"
  },
  {
    "text": "scheduled",
    "start": "990480",
    "end": "991440"
  },
  {
    "text": "status for this part okay so that's good",
    "start": "991440",
    "end": "995120"
  },
  {
    "text": "now let's try to change this to shutdown",
    "start": "995120",
    "end": "997040"
  },
  {
    "text": "and bring it back",
    "start": "997040",
    "end": "999199"
  },
  {
    "text": "what i'm going to do is i will issue two",
    "start": "999199",
    "end": "1001839"
  },
  {
    "text": "patches one is to shut down the",
    "start": "1001839",
    "end": "1004160"
  },
  {
    "text": "the vm that's gonna work is uh",
    "start": "1004160",
    "end": "1007440"
  },
  {
    "text": "let's do i will do a patch like this so",
    "start": "1007440",
    "end": "1010720"
  },
  {
    "text": "if i do that",
    "start": "1010720",
    "end": "1011680"
  },
  {
    "text": "the controller the scheduler will see",
    "start": "1011680",
    "end": "1013920"
  },
  {
    "text": "that and it will",
    "start": "1013920",
    "end": "1015600"
  },
  {
    "text": "see that it's in a no schedule state so",
    "start": "1015600",
    "end": "1017920"
  },
  {
    "text": "it will not try to schedule it",
    "start": "1017920",
    "end": "1020000"
  },
  {
    "text": "uh if you're curious i can show you",
    "start": "1020000",
    "end": "1022079"
  },
  {
    "text": "what's in here which is very uh",
    "start": "1022079",
    "end": "1024240"
  },
  {
    "text": "straightforward we just are changing the",
    "start": "1024240",
    "end": "1026798"
  },
  {
    "text": "power spec section",
    "start": "1026799",
    "end": "1028160"
  },
  {
    "text": "of the pod spec okay and if we go back",
    "start": "1028160",
    "end": "1031678"
  },
  {
    "text": "and take again",
    "start": "1031679",
    "end": "1032798"
  },
  {
    "text": "look at uh the status we can see that",
    "start": "1032799",
    "end": "1036079"
  },
  {
    "text": "the pod is in the virtual machine",
    "start": "1036079",
    "end": "1038079"
  },
  {
    "text": "shutdown state",
    "start": "1038079",
    "end": "1039199"
  },
  {
    "text": "and it's in the no schedule no schedule",
    "start": "1039199",
    "end": "1041199"
  },
  {
    "text": "means again does the schedule will not",
    "start": "1041199",
    "end": "1043199"
  },
  {
    "text": "attempt to schedule this pathway",
    "start": "1043199",
    "end": "1044959"
  },
  {
    "text": "sees that okay now let's go back",
    "start": "1044959",
    "end": "1049039"
  },
  {
    "text": "uh okay now let's bring this back how do",
    "start": "1049039",
    "end": "1051919"
  },
  {
    "text": "we do that",
    "start": "1051919",
    "end": "1052559"
  },
  {
    "text": "we use uh we just do running we'll just",
    "start": "1052559",
    "end": "1055919"
  },
  {
    "text": "issue another patch",
    "start": "1055919",
    "end": "1057280"
  },
  {
    "text": "to to change the power spec section",
    "start": "1057280",
    "end": "1060559"
  },
  {
    "text": "and we can see that okay the the patch",
    "start": "1060559",
    "end": "1063440"
  },
  {
    "text": "has gone through",
    "start": "1063440",
    "end": "1064320"
  },
  {
    "text": "and let's just wait for it to go back to",
    "start": "1064320",
    "end": "1066320"
  },
  {
    "text": "running and now it's running",
    "start": "1066320",
    "end": "1067840"
  },
  {
    "text": "so that's very good uh this demonstrate",
    "start": "1067840",
    "end": "1070480"
  },
  {
    "text": "that uh",
    "start": "1070480",
    "end": "1071200"
  },
  {
    "text": "we can have both vm and the container",
    "start": "1071200",
    "end": "1073919"
  },
  {
    "text": "running at the same time and",
    "start": "1073919",
    "end": "1075039"
  },
  {
    "text": "we can have features like uh shutdown",
    "start": "1075039",
    "end": "1077679"
  },
  {
    "text": "and the restart",
    "start": "1077679",
    "end": "1079120"
  },
  {
    "text": "that concludes the demo for today",
    "start": "1079120",
    "end": "1082160"
  },
  {
    "text": "i will hand this back to human",
    "start": "1082160",
    "end": "1086000"
  },
  {
    "start": "1085000",
    "end": "1157000"
  },
  {
    "text": "great thank you for the good demo",
    "start": "1086000",
    "end": "1089760"
  },
  {
    "text": "the actual project is still in its early",
    "start": "1089760",
    "end": "1092840"
  },
  {
    "text": "stage",
    "start": "1092840",
    "end": "1094000"
  },
  {
    "text": "for the unified runtime area there are",
    "start": "1094000",
    "end": "1096480"
  },
  {
    "text": "quite few",
    "start": "1096480",
    "end": "1097280"
  },
  {
    "text": "new features that have been planned for",
    "start": "1097280",
    "end": "1100240"
  },
  {
    "text": "example",
    "start": "1100240",
    "end": "1101200"
  },
  {
    "text": "the bare metal support the gpu or device",
    "start": "1101200",
    "end": "1104640"
  },
  {
    "text": "pass through",
    "start": "1104640",
    "end": "1105919"
  },
  {
    "text": "more vm action support it's very",
    "start": "1105919",
    "end": "1109760"
  },
  {
    "text": "integration with the storage network",
    "start": "1109760",
    "end": "1111760"
  },
  {
    "text": "provider exactly",
    "start": "1111760",
    "end": "1114960"
  },
  {
    "text": "we have put some useful links here",
    "start": "1119360",
    "end": "1121760"
  },
  {
    "text": "including the",
    "start": "1121760",
    "end": "1123039"
  },
  {
    "text": "actors project repository and some",
    "start": "1123039",
    "end": "1125919"
  },
  {
    "text": "design documentation here",
    "start": "1125919",
    "end": "1127760"
  },
  {
    "text": "feel free to draw the code draw the",
    "start": "1127760",
    "end": "1129760"
  },
  {
    "text": "design documentation and learn more from",
    "start": "1129760",
    "end": "1131760"
  },
  {
    "text": "it",
    "start": "1131760",
    "end": "1133919"
  },
  {
    "text": "the future we have a virtual booth set",
    "start": "1134559",
    "end": "1137280"
  },
  {
    "text": "up",
    "start": "1137280",
    "end": "1138320"
  },
  {
    "text": "please visit us there and learn more",
    "start": "1138320",
    "end": "1140720"
  },
  {
    "text": "about",
    "start": "1140720",
    "end": "1141360"
  },
  {
    "text": "the project actors and other interesting",
    "start": "1141360",
    "end": "1144320"
  },
  {
    "text": "projects we are working on",
    "start": "1144320",
    "end": "1146400"
  },
  {
    "text": "feel free to contact us if you are",
    "start": "1146400",
    "end": "1148480"
  },
  {
    "text": "interested in contributing to those",
    "start": "1148480",
    "end": "1150400"
  },
  {
    "text": "projects",
    "start": "1150400",
    "end": "1152160"
  },
  {
    "text": "with that we'll be happy to take a few",
    "start": "1152160",
    "end": "1154880"
  },
  {
    "text": "questions",
    "start": "1154880",
    "end": "1155919"
  },
  {
    "text": "thank you",
    "start": "1155919",
    "end": "1159200"
  }
]