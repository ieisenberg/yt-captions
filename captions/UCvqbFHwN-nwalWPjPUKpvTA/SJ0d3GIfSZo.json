[
  {
    "start": "0",
    "end": "89000"
  },
  {
    "text": "hello cubecon and Cloud nativecon hi to everyone",
    "start": "1199",
    "end": "6540"
  },
  {
    "text": "I'm shweta bhora I am an architect in Winter blogger AWS Community Builder",
    "start": "6540",
    "end": "12960"
  },
  {
    "text": "open source Enthusiast and contributor at times before I start with this session I must",
    "start": "12960",
    "end": "20279"
  },
  {
    "text": "say what a phenomenal week this has been we all have gained observed and",
    "start": "20279",
    "end": "26580"
  },
  {
    "text": "interacted so much it's time after today to go back and see who and reflect back what we have gained",
    "start": "26580",
    "end": "33780"
  },
  {
    "text": "in this amazing cubecon and Cloud nativecon",
    "start": "33780",
    "end": "38840"
  },
  {
    "text": "before we go back today it's time for this session and it's about you like it",
    "start": "38840",
    "end": "45600"
  },
  {
    "text": "a lot you need it pki and certificate management let's get started",
    "start": "45600",
    "end": "52500"
  },
  {
    "text": "the contents which I'm planning to cover in this session are vocabulary and repressure about pki and certificate",
    "start": "52500",
    "end": "59100"
  },
  {
    "text": "management vocabulary for those who are new to this topic and refresher for those who are",
    "start": "59100",
    "end": "65100"
  },
  {
    "text": "might be aware of but they might learn a few things new from this",
    "start": "65100",
    "end": "70920"
  },
  {
    "text": "we are also going to talk about a case study which is common yet complex production case study and a",
    "start": "70920",
    "end": "76979"
  },
  {
    "text": "demonstration and we will be ending with the five pki design decisions that you must know",
    "start": "76979",
    "end": "84720"
  },
  {
    "text": "okay so here we are with the vocabulary and repression",
    "start": "84720",
    "end": "90119"
  },
  {
    "start": "89000",
    "end": "89000"
  },
  {
    "text": "pki public key infrastructure what is pki let's understand that",
    "start": "90119",
    "end": "97680"
  },
  {
    "text": "always when you communicate over Network you have two endpoints this could be",
    "start": "97680",
    "end": "103560"
  },
  {
    "text": "client and server now these endpoints talk to each other",
    "start": "103560",
    "end": "109020"
  },
  {
    "text": "let's say you are talk you are using a internet banking or a bank site where",
    "start": "109020",
    "end": "116460"
  },
  {
    "text": "you are doing internet banking and this happens over secure socket layer or transport layer security is",
    "start": "116460",
    "end": "122880"
  },
  {
    "text": "required and that protocol is used what this client and server how they",
    "start": "122880",
    "end": "128459"
  },
  {
    "text": "trust each other and to do what do they need there are two things primarily any",
    "start": "128459",
    "end": "133680"
  },
  {
    "text": "end point or two endpoints need from each other so that they can smoothly talk to each other the first one is the",
    "start": "133680",
    "end": "140459"
  },
  {
    "text": "trust establishment client needs to know that the server I'm talking to or let's say the bank site",
    "start": "140459",
    "end": "145560"
  },
  {
    "text": "I'm talking to is secured enough that I can share my data as information and once that trust is established you",
    "start": "145560",
    "end": "152459"
  },
  {
    "text": "need to exchange the encrypted data over Network now this happens day in and out when",
    "start": "152459",
    "end": "158340"
  },
  {
    "text": "they indirect over that work but what happens behind the scene how does pki come in picture let's look",
    "start": "158340",
    "end": "164940"
  },
  {
    "text": "at that to have that trust established your server needs",
    "start": "164940",
    "end": "170340"
  },
  {
    "text": "some authorities the first and foremost the certificate Authority registration Authority and the verification Authority",
    "start": "170340",
    "end": "177780"
  },
  {
    "text": "what the server does is that it requests the registration authority to issue and",
    "start": "177780",
    "end": "184140"
  },
  {
    "text": "assign certificate to the server using which it can give trust to the client",
    "start": "184140",
    "end": "191040"
  },
  {
    "text": "that yes it has a digital certificate and it communicates encrypted data over",
    "start": "191040",
    "end": "196500"
  },
  {
    "text": "Network in turn registration Authority takes that request and takes it to the",
    "start": "196500",
    "end": "201900"
  },
  {
    "text": "certificate Authority who issues that certificate to you the certificate Authority signs that",
    "start": "201900",
    "end": "208019"
  },
  {
    "text": "certificate for you and gives you two things first it gives back to the server a certificate and a private key",
    "start": "208019",
    "end": "216060"
  },
  {
    "text": "so this private key remains with very few entities who need to have hold of",
    "start": "216060",
    "end": "221940"
  },
  {
    "text": "that however on other hand certificate Authority also gives a certificate plus",
    "start": "221940",
    "end": "228180"
  },
  {
    "text": "public key which can remain anywhere available on the network because it is public",
    "start": "228180",
    "end": "234900"
  },
  {
    "text": "and verification Authority keep it with itself and can utilize when needed",
    "start": "234900",
    "end": "242099"
  },
  {
    "text": "now what happens when client needs to or browser let's say for instance needs to",
    "start": "242099",
    "end": "247140"
  },
  {
    "text": "see that that this bank site is a valid site and I need to trust on that that",
    "start": "247140",
    "end": "252840"
  },
  {
    "text": "client can request to verify the signature from the verification Authority and verification Authority",
    "start": "252840",
    "end": "259320"
  },
  {
    "text": "replies back saying that signature is okay or not okay so what this whole thing gets",
    "start": "259320",
    "end": "265800"
  },
  {
    "text": "established at the back or the behind the scenes then client uses the",
    "start": "265800",
    "end": "271380"
  },
  {
    "text": "encrypted data oh sorry key public key to encrypt the data and on the other",
    "start": "271380",
    "end": "277560"
  },
  {
    "text": "hand server decrypts the data by using the private key so in between there is",
    "start": "277560",
    "end": "284040"
  },
  {
    "text": "there is no one who can possibly there is no one who can decipher that data because public key is",
    "start": "284040",
    "end": "291780"
  },
  {
    "text": "available to all but to decrypt the data you need that private key and that's what public key infrastructure provides",
    "start": "291780",
    "end": "299280"
  },
  {
    "text": "you let's and one more thing before I move out of the slide that certificate and DB store",
    "start": "299280",
    "end": "306300"
  },
  {
    "text": "because this whole thing remains somewhere on these servers which we have seen and this certificate TBN store gets",
    "start": "306300",
    "end": "313620"
  },
  {
    "text": "utilized so what does pki provides you it",
    "start": "313620",
    "end": "320340"
  },
  {
    "text": "provides you cryptographic identity to the endpoints before I move on I want to emphasize on",
    "start": "320340",
    "end": "326820"
  },
  {
    "text": "that it need not be all the communication over public network it can be any endpoint for example one cluster",
    "start": "326820",
    "end": "333780"
  },
  {
    "text": "talking to other cluster one the Microsoft is talking to other microservers so it it can be any",
    "start": "333780",
    "end": "339240"
  },
  {
    "text": "endpoint and you can utilize pki for communication over Network be public or",
    "start": "339240",
    "end": "345360"
  },
  {
    "text": "private so you have to have a cryptographic identity they need encryption of data over Network so that",
    "start": "345360",
    "end": "352080"
  },
  {
    "text": "the data remains secured how it provides but pki provides it by",
    "start": "352080",
    "end": "358199"
  },
  {
    "text": "governing issuance and management of digital certificates and key components as we have seen in",
    "start": "358199",
    "end": "365039"
  },
  {
    "text": "the previous slide you need digital certificate you need Certificate Authority registration Authority",
    "start": "365039",
    "end": "370380"
  },
  {
    "text": "verification Authority sometimes these three authorities may be same or",
    "start": "370380",
    "end": "375780"
  },
  {
    "text": "different depends on situation to situation and also you need Certificate database or store which can be referred",
    "start": "375780",
    "end": "382139"
  },
  {
    "text": "as needed so pki is a framework not a specific",
    "start": "382139",
    "end": "388139"
  },
  {
    "text": "technology please keep in mind it provides you all these things by utilizing certain digital certificates",
    "start": "388139",
    "end": "394860"
  },
  {
    "text": "and infrastructure to achieve that why moving on certainly cryptography because public",
    "start": "394860",
    "end": "402180"
  },
  {
    "start": "398000",
    "end": "398000"
  },
  {
    "text": "and private key difference is something which we want to point out here and we need to understand what is this",
    "start": "402180",
    "end": "407880"
  },
  {
    "text": "cryptography cryptography is the sign of secret writing with the intention of",
    "start": "407880",
    "end": "414000"
  },
  {
    "text": "keeping your data Secret this cryptography or the algorithms which get used are classified into",
    "start": "414000",
    "end": "420419"
  },
  {
    "text": "symmetric or asymmetric cryptography in symmetric cryptography what happens",
    "start": "420419",
    "end": "426060"
  },
  {
    "text": "you have a private key which gets utilized for encryption as well as for",
    "start": "426060",
    "end": "432419"
  },
  {
    "text": "the description for the decryption of the data now the same key needs to be very very secure and that's why it's",
    "start": "432419",
    "end": "438780"
  },
  {
    "text": "called private key encryption or symmetric encryption on other hand you",
    "start": "438780",
    "end": "444599"
  },
  {
    "text": "have a symmetric cryptography where you have two different Keys one is public",
    "start": "444599",
    "end": "449940"
  },
  {
    "text": "and one is secret key or the private key which remains only with few entities and",
    "start": "449940",
    "end": "455819"
  },
  {
    "text": "public Keys publicly available now symmetric cryptography is simple so",
    "start": "455819",
    "end": "461639"
  },
  {
    "text": "faster but less secure however on the other hand a symmetric is comparatively slower but tough to break",
    "start": "461639",
    "end": "469800"
  },
  {
    "text": "and there are algorithms like RSA diffie-hellman ACC algorithm and many more",
    "start": "469800",
    "end": "476400"
  },
  {
    "text": "now pki uses public key cryptography framework not the private one so that's",
    "start": "476400",
    "end": "483419"
  },
  {
    "text": "why public key is the name given to the pki moving on",
    "start": "483419",
    "end": "489539"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "to all this is your gist is the digital certificate now let's understand what is a digital certificate",
    "start": "489539",
    "end": "496139"
  },
  {
    "text": "a digital certificate is a digital document that binds the identity to a public key infrastructure",
    "start": "496139",
    "end": "503879"
  },
  {
    "text": "now you use it at many places in Internet Protocol including TLs SSL which is the basis for https the secure",
    "start": "503879",
    "end": "511680"
  },
  {
    "text": "protocol you use for browsing the web for example if you use any browser you",
    "start": "511680",
    "end": "517500"
  },
  {
    "text": "see that there is either a lock comes or a um open lock also at times come which",
    "start": "517500",
    "end": "523260"
  },
  {
    "text": "shows you that it is secured or not secured now digital certificates you need to",
    "start": "523260",
    "end": "530279"
  },
  {
    "text": "generate how do you generate these there are many options that are widely available and those uh options adhere to",
    "start": "530279",
    "end": "537660"
  },
  {
    "text": "the international standard which is x509 standard some tools which I am listing here is",
    "start": "537660",
    "end": "543600"
  },
  {
    "text": "open SSL Libre SSL you have third party Ras and PAs like let's encrypt digicert",
    "start": "543600",
    "end": "549959"
  },
  {
    "text": "Etc you have also cloud services these days providing for example AWS certificate",
    "start": "549959",
    "end": "555240"
  },
  {
    "text": "manager Google certificate manager and the there there are many more which provide these digital certificate",
    "start": "555240",
    "end": "561839"
  },
  {
    "text": "services now what is the Key activities around the digital certificates because it's",
    "start": "561839",
    "end": "568320"
  },
  {
    "text": "not that you just issue it one time and you can use it forever it is",
    "start": "568320",
    "end": "573420"
  },
  {
    "text": "there is Generation and issuance which is required distribution deployment of those or installation of those",
    "start": "573420",
    "end": "579240"
  },
  {
    "text": "certificates that's when these certificates gets in use at times you need to revoke them when",
    "start": "579240",
    "end": "586620"
  },
  {
    "text": "there is um the certificate gets hacked or due to some changes you need to pull it back",
    "start": "586620",
    "end": "592980"
  },
  {
    "text": "you also need to renew and rotate these certificates time to time and last but",
    "start": "592980",
    "end": "598019"
  },
  {
    "text": "not the least certificate scanning and monitoring is essential which comes under the digital certificate life cycle",
    "start": "598019",
    "end": "604620"
  },
  {
    "text": "management while uh we are moving let's see some",
    "start": "604620",
    "end": "610200"
  },
  {
    "start": "607000",
    "end": "607000"
  },
  {
    "text": "sample certificates this one is from amazon.com it has on",
    "start": "610200",
    "end": "616560"
  },
  {
    "text": "the dim on the Windows it looks like this and you can run cert manager.msc to",
    "start": "616560",
    "end": "621779"
  },
  {
    "text": "see on the Windows box on command prompt to see this kind of certificate I'm",
    "start": "621779",
    "end": "627839"
  },
  {
    "text": "showing a sample certificate for amazon.com where it is issued to amazon.com issued by digisert it has",
    "start": "627839",
    "end": "636240"
  },
  {
    "text": "period of validity it has some hashing information associated with that now this is on Windows box however on",
    "start": "636240",
    "end": "642779"
  },
  {
    "text": "Linux box it looks like something like this a text file it has a now again a issuer a subject in",
    "start": "642779",
    "end": "650880"
  },
  {
    "text": "this case both C and CN stands for common name common name is same it means it shows that it is for a it is mostly a",
    "start": "650880",
    "end": "658860"
  },
  {
    "text": "certificate Authority or a root CA it also has public key information as we",
    "start": "658860",
    "end": "664860"
  },
  {
    "text": "discussed that public key information is easily available and accessible it also",
    "start": "664860",
    "end": "669959"
  },
  {
    "text": "comes bundled at times with your certificate information and the last here which I want to show",
    "start": "669959",
    "end": "676560"
  },
  {
    "text": "is that subject key identifier and Authority key identifier in this case if You observe this is same however if your",
    "start": "676560",
    "end": "684839"
  },
  {
    "text": "certificate is signed by some other authority then these Authority key identifier will differ from the subject",
    "start": "684839",
    "end": "691500"
  },
  {
    "text": "we identify so that's how a certificates look like",
    "start": "691500",
    "end": "697519"
  },
  {
    "start": "697000",
    "end": "697000"
  },
  {
    "text": "okay what are those files what are those encoding formats and files which uh",
    "start": "697920",
    "end": "703200"
  },
  {
    "text": "certificates come in under x509 certificate there are various encoding formats for example 10 pkcs",
    "start": "703200",
    "end": "711720"
  },
  {
    "text": "format pem and there are both but Pam make the popular one I'm showing the",
    "start": "711720",
    "end": "717540"
  },
  {
    "text": "files which it produce these green boxes as you see either the dot pem or the dot cert or dot Ser file which it produces",
    "start": "717540",
    "end": "724380"
  },
  {
    "text": "are these certificates and Dot key which it produces is the private key file",
    "start": "724380",
    "end": "730279"
  },
  {
    "text": "and it looks like something encrypted data between for example if it",
    "start": "730279",
    "end": "735959"
  },
  {
    "text": "is a certificate file then it will be begin certificate and end certificate on other hand if it is a key private key it",
    "start": "735959",
    "end": "742260"
  },
  {
    "text": "will be written like begin private key at end private key now how to how does these certificates",
    "start": "742260",
    "end": "748740"
  },
  {
    "text": "get generated there is always a request certificates signing request which goes",
    "start": "748740",
    "end": "755880"
  },
  {
    "text": "from a server or an end point in a form of dot CSR pipe and this request CSR",
    "start": "755880",
    "end": "762480"
  },
  {
    "text": "stands for certificate signing request this file looks like begin new",
    "start": "762480",
    "end": "767639"
  },
  {
    "text": "Certificate request and end new Certificate request so by reading this file simply opening that file if you see",
    "start": "767639",
    "end": "773100"
  },
  {
    "text": "this understand that this is a certificate signing request the certificate signing request goes to an",
    "start": "773100",
    "end": "779639"
  },
  {
    "text": "authority which could be root certificate Authority or intermediate certificate Authority which we will",
    "start": "779639",
    "end": "785940"
  },
  {
    "text": "understand in a moment once this request goes to the certificate Authority it signs it",
    "start": "785940",
    "end": "791700"
  },
  {
    "text": "digitally signs it you get this certificate and private key files which you need to keep or install at",
    "start": "791700",
    "end": "797700"
  },
  {
    "text": "appropriate places to make use of it so before uh we move on to the next topic",
    "start": "797700",
    "end": "805440"
  },
  {
    "start": "802000",
    "end": "802000"
  },
  {
    "text": "there is one more important thing for us to understand that there is a hierarchy",
    "start": "805440",
    "end": "810720"
  },
  {
    "text": "of certificates root CA to leave certificate and that's called the certificate hierarchy or chain of trust",
    "start": "810720",
    "end": "819120"
  },
  {
    "text": "it can be single layer or multi-layer cas why we need it we'll talk about it but",
    "start": "819120",
    "end": "824700"
  },
  {
    "text": "let's see how does it look like I've pulled a certificate for amazon.in",
    "start": "824700",
    "end": "830940"
  },
  {
    "text": "where you have root CA digital Global root G2 which is",
    "start": "830940",
    "end": "837180"
  },
  {
    "text": "providing the certificate then you have intermediate CA which gets",
    "start": "837180",
    "end": "843300"
  },
  {
    "text": "signed by this root CA intermediate CA then helping you sign with this server",
    "start": "843300",
    "end": "849180"
  },
  {
    "text": "certificate so like you have Amazon dot in amazon.uk amazon.us or whatnot you",
    "start": "849180",
    "end": "855360"
  },
  {
    "text": "can have multiple such server certificates which can be installed on those servers and you can view this",
    "start": "855360",
    "end": "861300"
  },
  {
    "text": "hierarchy and that's where the chain of trust or the certificate hierarchy is",
    "start": "861300",
    "end": "866519"
  },
  {
    "text": "gets built up for the actual environments or the pka environment",
    "start": "866519",
    "end": "872519"
  },
  {
    "text": "while that was about the vocabulary and refresher let's delve into a production",
    "start": "872519",
    "end": "878639"
  },
  {
    "text": "common yet complex production scenario but how this how does this pki looks",
    "start": "878639",
    "end": "884100"
  },
  {
    "text": "like in actual well in all uh complex scenarios you",
    "start": "884100",
    "end": "889320"
  },
  {
    "text": "have either a corporate data center or a cloud or a cloud to Cloud where you need",
    "start": "889320",
    "end": "895139"
  },
  {
    "text": "to talk between these entities and serve outside also",
    "start": "895139",
    "end": "900240"
  },
  {
    "text": "in in all these communications you have a compute layer which could be like your",
    "start": "900240",
    "end": "906060"
  },
  {
    "text": "VMS ec2s or a serverless compute on the other hand you can have a cluster",
    "start": "906060",
    "end": "911459"
  },
  {
    "text": "container orchestrator cluster which can be kubernetes and to add to the complexity we",
    "start": "911459",
    "end": "917820"
  },
  {
    "text": "we have Network layer which helps you talk to all the communication happening",
    "start": "917820",
    "end": "923519"
  },
  {
    "text": "over the network between two different entities or sometimes different different domains",
    "start": "923519",
    "end": "929100"
  },
  {
    "text": "so this network proxy layer typically contains either a API Gateway or elb or",
    "start": "929100",
    "end": "934500"
  },
  {
    "text": "Ingress Gateway and what else you have a service mesh",
    "start": "934500",
    "end": "941160"
  },
  {
    "text": "these days we have microservices which are talking to each other so there can be various microservices which",
    "start": "941160",
    "end": "947820"
  },
  {
    "text": "which reside in data plane they talk through control plane to your external world and all this gets called at",
    "start": "947820",
    "end": "956399"
  },
  {
    "text": "various points by internal users by application and interfaces by external",
    "start": "956399",
    "end": "961740"
  },
  {
    "text": "users and there's all the time communication happening between these systems",
    "start": "961740",
    "end": "967019"
  },
  {
    "text": "now to make this communication secure what you need you need pkin digital certificates and",
    "start": "967019",
    "end": "975600"
  },
  {
    "text": "where all you need you need all these yellow certificates which you see these are some simple places which I am",
    "start": "975600",
    "end": "980940"
  },
  {
    "text": "showing for example you need to secure your API Gateway you need to secure your load balances if you are using you need",
    "start": "980940",
    "end": "987720"
  },
  {
    "text": "to have microservices having your the those identity um and we just secured then you your",
    "start": "987720",
    "end": "996120"
  },
  {
    "text": "ec2s or VMS need these certificates your cluster needs certificates and whatnot",
    "start": "996120",
    "end": "1001579"
  },
  {
    "text": "even your public websites need these certificates so what we need to do how do we make",
    "start": "1001579",
    "end": "1007579"
  },
  {
    "text": "this secure now let's come to the what infrastructure or what pki framework you",
    "start": "1007579",
    "end": "1013519"
  },
  {
    "text": "need to establish around it so that this becomes a secure network with the digital certificates and communication",
    "start": "1013519",
    "end": "1020120"
  },
  {
    "text": "happening within the encrypted format foreign",
    "start": "1020120",
    "end": "1026000"
  },
  {
    "text": "so first and foremost you need for the external so here I am calling it external and public CA because for",
    "start": "1026000",
    "end": "1033620"
  },
  {
    "text": "having certificate issues and maintained so all your",
    "start": "1033620",
    "end": "1040058"
  },
  {
    "text": "caraba functionality at times is given by all these uh various tools or the",
    "start": "1040059",
    "end": "1046699"
  },
  {
    "text": "service providers like GoDaddy let's encrypted to certain what not they provide these root certificate",
    "start": "1046699",
    "end": "1054140"
  },
  {
    "text": "Authority which issues certificates to your websites and other entities which",
    "start": "1054140",
    "end": "1060080"
  },
  {
    "text": "need to interact over internet then typically inside our secured",
    "start": "1060080",
    "end": "1066620"
  },
  {
    "text": "Network we don't rely on these external certificates so you need another root CA within your secured Network could be a",
    "start": "1066620",
    "end": "1074179"
  },
  {
    "text": "corporate data center or or it could be a cloud which is your private cloud",
    "start": "1074179",
    "end": "1079580"
  },
  {
    "text": "and that's where you keep a root certificate Authority which issues the certificates",
    "start": "1079580",
    "end": "1085760"
  },
  {
    "text": "and it gives the certificates to the prime intermediate Cas or subordinate",
    "start": "1085760",
    "end": "1091940"
  },
  {
    "text": "ca's also we called so for example ICA could be your AWS certificate",
    "start": "1091940",
    "end": "1098240"
  },
  {
    "text": "manager where you sign your this particular subordinate CA using this",
    "start": "1098240",
    "end": "1104600"
  },
  {
    "text": "root CA and then AWS certificate manager issues those certificates on your behalf",
    "start": "1104600",
    "end": "1111140"
  },
  {
    "text": "and distributes it to elb or English Gateway or whatnot similarly a kubernetes cluster might",
    "start": "1111140",
    "end": "1118400"
  },
  {
    "text": "need a different IC altogether so that once it gets its identity signed by",
    "start": "1118400",
    "end": "1124400"
  },
  {
    "text": "Roots a then it distributes these the leave certificates to different",
    "start": "1124400",
    "end": "1129919"
  },
  {
    "text": "applications as per need theme is for your service mesh there can",
    "start": "1129919",
    "end": "1135919"
  },
  {
    "text": "be many microservices which keep on coming and going and there's a whole life cycle around those services so you",
    "start": "1135919",
    "end": "1142400"
  },
  {
    "text": "need some subordinate or intermediate CA which issues those certificates to your",
    "start": "1142400",
    "end": "1148000"
  },
  {
    "text": "the micro services or the leaf entities or the end points",
    "start": "1148000",
    "end": "1153320"
  },
  {
    "text": "so once it is in place what you get you get all these certificates from these",
    "start": "1153320",
    "end": "1158780"
  },
  {
    "text": "Cas signed installed and once this is installed your communication over the",
    "start": "1158780",
    "end": "1164600"
  },
  {
    "text": "network is trusted identifiable and encrypted so",
    "start": "1164600",
    "end": "1171559"
  },
  {
    "text": "um there is no chance that anybody can creep into your system and reads data",
    "start": "1171559",
    "end": "1176600"
  },
  {
    "text": "and easily can take away your data so this is what we have seen you have a",
    "start": "1176600",
    "end": "1184580"
  },
  {
    "start": "1181000",
    "end": "1181000"
  },
  {
    "text": "public CA which can be these tools like digicer let's encrypt and all which provides and",
    "start": "1184580",
    "end": "1191360"
  },
  {
    "text": "used for external facing website and interfaces then you can also have private and intermediate cas",
    "start": "1191360",
    "end": "1198080"
  },
  {
    "text": "reflected with these uh symbols in the previous diagram you can use open SSL to",
    "start": "1198080",
    "end": "1204020"
  },
  {
    "text": "issue the insert manager spiffy spire and there will be many other tools",
    "start": "1204020",
    "end": "1209600"
  },
  {
    "text": "then you also have these leave certificates which are the end entities",
    "start": "1209600",
    "end": "1215120"
  },
  {
    "text": "or those digital documents which we've been talking about so far and these These are what provide the actual",
    "start": "1215120",
    "end": "1221840"
  },
  {
    "text": "security to your system let's see a small demo which I have",
    "start": "1221840",
    "end": "1227360"
  },
  {
    "text": "already put up in place but let me quickly show you that how this looks like",
    "start": "1227360",
    "end": "1234340"
  },
  {
    "text": "okay so I am moving to",
    "start": "1236539",
    "end": "1242720"
  },
  {
    "text": "this folder or let me put it in format which is clearly visible",
    "start": "1242720",
    "end": "1251440"
  },
  {
    "text": "okay so let's say you have developed a root CA",
    "start": "1251480",
    "end": "1257059"
  },
  {
    "text": "now this root CA is a cell signed certificate and a key pair",
    "start": "1257059",
    "end": "1263240"
  },
  {
    "text": "where nobody else signs the root CA so root CA needs to be much more secured",
    "start": "1263240",
    "end": "1269500"
  },
  {
    "text": "and you get ca.cert and CA dot key I have used Root ca.com to generate",
    "start": "1269500",
    "end": "1277100"
  },
  {
    "text": "these files there is a some configuration let's say I'm using open SSL which I have used for this",
    "start": "1277100",
    "end": "1282799"
  },
  {
    "text": "particular case it needs a lot of configuration so all the time providing that configuration",
    "start": "1282799",
    "end": "1287960"
  },
  {
    "text": "over command line I have used it root ca.com where I have put all those configuration and I have generated these",
    "start": "1287960",
    "end": "1294320"
  },
  {
    "text": "certificates and key now once my root CA got generated I have got my intermediate",
    "start": "1294320",
    "end": "1301520"
  },
  {
    "text": "CA signed by this root CA so what I did I got the CSR generated certificate",
    "start": "1301520",
    "end": "1308240"
  },
  {
    "text": "signing request using which my root CA signed it and provided me with a third",
    "start": "1308240",
    "end": "1314240"
  },
  {
    "text": "which is my intermediate CA certificate again because it is a certificate",
    "start": "1314240",
    "end": "1321140"
  },
  {
    "text": "Authority you need a configuration a lot of configuration to be provided over the",
    "start": "1321140",
    "end": "1326179"
  },
  {
    "text": "command line so I have encoded it in this file now once these root CA and",
    "start": "1326179",
    "end": "1332240"
  },
  {
    "text": "intermediate Cas are ready what I did I start started creating my server",
    "start": "1332240",
    "end": "1337640"
  },
  {
    "text": "certificates or leave certificates so again I need a CSR this time my CSR got",
    "start": "1337640",
    "end": "1343640"
  },
  {
    "text": "signed by my intermediate CA and I got my server certificate generated so this",
    "start": "1343640",
    "end": "1350539"
  },
  {
    "text": "is how it looks like but in no production case you will see it in at one place visit definitely spread it",
    "start": "1350539",
    "end": "1357080"
  },
  {
    "text": "across the authorities and the servers but let's quickly also look at the format of few of them for example let me",
    "start": "1357080",
    "end": "1365539"
  },
  {
    "text": "show you um open SSL",
    "start": "1365539",
    "end": "1371419"
  },
  {
    "text": "give me",
    "start": "1371419",
    "end": "1374440"
  },
  {
    "text": "and I am entering here let's say my",
    "start": "1379760",
    "end": "1384940"
  },
  {
    "text": "second yes here I'm giving it um",
    "start": "1384940",
    "end": "1391299"
  },
  {
    "text": "my root CA and my CA dot cert",
    "start": "1391820",
    "end": "1397720"
  },
  {
    "text": "yes Okay so",
    "start": "1397940",
    "end": "1403100"
  },
  {
    "text": "this is how my certificate looks like as we have seen earlier also my issuer",
    "start": "1403100",
    "end": "1409340"
  },
  {
    "text": "and my subject in this case is same if you notice because this is a root CA and in root CA case",
    "start": "1409340",
    "end": "1416780"
  },
  {
    "text": "only you should ideally see that your issue and subject are same because it is self-signed root CA",
    "start": "1416780",
    "end": "1423919"
  },
  {
    "text": "then you will also see that you have subject key identifier here and",
    "start": "1423919",
    "end": "1430100"
  },
  {
    "text": "Authority key identifier are same which means that your key here if you",
    "start": "1430100",
    "end": "1436760"
  },
  {
    "text": "notice is exactly same again the reason is this is root C8 but if we see this",
    "start": "1436760",
    "end": "1442039"
  },
  {
    "text": "for any other certificate let's say now I'm opening it for intermediate CA and where is my",
    "start": "1442039",
    "end": "1451880"
  },
  {
    "text": "certified okay so this time interestingly If You",
    "start": "1451880",
    "end": "1458419"
  },
  {
    "text": "observe here that my issue is different then my subject my subject is",
    "start": "1458419",
    "end": "1466360"
  },
  {
    "text": "ica.demo.com this common name and my identifier subject key identifier is the",
    "start": "1466360",
    "end": "1474200"
  },
  {
    "text": "newly generated identifier for this particular intermediate seat but Authority key identifier is the one",
    "start": "1474200",
    "end": "1481220"
  },
  {
    "text": "which we saw in the root CA so that's how the certificates get generated but",
    "start": "1481220",
    "end": "1488179"
  },
  {
    "text": "what happens when you have your kubernetes cluster and istio",
    "start": "1488179",
    "end": "1494299"
  },
  {
    "text": "certificates would you be generating certificates like this for each and every microservices well that's a lot of work and we cannot",
    "start": "1494299",
    "end": "1502100"
  },
  {
    "text": "do it like that and that's where let's let's go back to our presentation where",
    "start": "1502100",
    "end": "1508220"
  },
  {
    "text": "I'm providing you a tool there can be more but spiffy inspired are coming up really well",
    "start": "1508220",
    "end": "1514280"
  },
  {
    "text": "where uh let's understand this piffy is secure production identity framework for",
    "start": "1514280",
    "end": "1519799"
  },
  {
    "text": "everyone which means Biffy provides you a framework to get those secured",
    "start": "1519799",
    "end": "1525140"
  },
  {
    "text": "identities and it's a framework now Spire is a production ready implementation of these",
    "start": "1525140",
    "end": "1531740"
  },
  {
    "text": "PV API so they usually you would see that spiffy Spire word gets used together these are both open source",
    "start": "1531740",
    "end": "1538820"
  },
  {
    "text": "graduated projects here spiffy provides you with the facility like first of all",
    "start": "1538820",
    "end": "1545539"
  },
  {
    "text": "you need to register your workloads identify your nodes and workloads so registration",
    "start": "1545539",
    "end": "1551600"
  },
  {
    "text": "feature then Federation when you have let's say two different domains or two",
    "start": "1551600",
    "end": "1556640"
  },
  {
    "text": "different clusters which is let's say one is running on Google another one is running on AWS on a data center to a",
    "start": "1556640",
    "end": "1562760"
  },
  {
    "text": "cloud you need to Federate those domains you need to establish trust between those domains and that's where it",
    "start": "1562760",
    "end": "1568940"
  },
  {
    "text": "provides you with the feature for the federating the Clusters or the nodes and domains then it also",
    "start": "1568940",
    "end": "1576980"
  },
  {
    "text": "gives you the feature to have your workloads identified and identifiable information given to those workloads and",
    "start": "1576980",
    "end": "1583400"
  },
  {
    "text": "time to time it provides you the attestation of those nodes and workflows",
    "start": "1583400",
    "end": "1588500"
  },
  {
    "text": "how spiffy provides it it provides it by exposing the apis",
    "start": "1588500",
    "end": "1593840"
  },
  {
    "text": "it um to whom it provides it provides these",
    "start": "1593840",
    "end": "1599559"
  },
  {
    "text": "features to the actual workload and the nodes so first thing comes as the node",
    "start": "1599559",
    "end": "1605179"
  },
  {
    "text": "where your workloads run and these nodes get a spiffy ID by exchanging few things",
    "start": "1605179",
    "end": "1611659"
  },
  {
    "text": "from your spiffy apis so this spiffy identity looks like",
    "start": "1611659",
    "end": "1618320"
  },
  {
    "text": "something like this piffy where your trust domain name your namespace and",
    "start": "1618320",
    "end": "1623779"
  },
  {
    "text": "your essay stands for uh service account which it belongs to so that's how it differentiate that Which principle it",
    "start": "1623779",
    "end": "1630559"
  },
  {
    "text": "identifies to then you have your workloads all the workloads running inside your nodes",
    "start": "1630559",
    "end": "1637100"
  },
  {
    "text": "get our identity so secure verifiable identity is the name for that which uh",
    "start": "1637100",
    "end": "1642140"
  },
  {
    "text": "spiffy calls it like SV IDs these svids are nothing but your certificates x dot",
    "start": "1642140",
    "end": "1649820"
  },
  {
    "text": "509 artifacts which it provides and how it does that it does it by having a",
    "start": "1649820",
    "end": "1655279"
  },
  {
    "text": "Spire server and Aspire agent because remember Spire is the implementation and spiffy is the framework of all that API",
    "start": "1655279",
    "end": "1663380"
  },
  {
    "text": "is what it exposes and once that is in place what happens as I said first you get your spiffy IDs",
    "start": "1663380",
    "end": "1671900"
  },
  {
    "text": "and some selectors along with it once that comes then your workloads get",
    "start": "1671900",
    "end": "1677900"
  },
  {
    "text": "identified so you need to have certificate signing require requests you have to have uh to get those SV IDs from",
    "start": "1677900",
    "end": "1685720"
  },
  {
    "text": "your again specific apis or the expire server gets it generated through these",
    "start": "1685720",
    "end": "1691460"
  },
  {
    "text": "usage of these apis and you get those nodes give CSR and get SV ID then spiffy",
    "start": "1691460",
    "end": "1697640"
  },
  {
    "text": "bundles which never leaves the node so you have these information comes up to the node and nodes time to time",
    "start": "1697640",
    "end": "1704140"
  },
  {
    "text": "distribute it and gives it to the various workloads now it doesn't matter workload go down or up and keeps coming",
    "start": "1704140",
    "end": "1711140"
  },
  {
    "text": "you have your secure verifiable identities and on top of that you need",
    "start": "1711140",
    "end": "1717679"
  },
  {
    "text": "not worry about renewal let's say or the rotation of those certificates it it",
    "start": "1717679",
    "end": "1722840"
  },
  {
    "text": "gets taken care by spiffy inspired through the field all right",
    "start": "1722840",
    "end": "1729380"
  },
  {
    "text": "so let's talk about five pki design decisions that you must know",
    "start": "1729380",
    "end": "1735140"
  },
  {
    "text": "first and foremost you should know how to design your certificate chain or hierarchy",
    "start": "1735140",
    "end": "1740720"
  },
  {
    "start": "1736000",
    "end": "1736000"
  },
  {
    "text": "it can be a single root CA Authority where single root signs the your icas",
    "start": "1740720",
    "end": "1746659"
  },
  {
    "text": "and other certificates and takes that ownership it can also be multiple intermediate Cas",
    "start": "1746659",
    "end": "1752960"
  },
  {
    "text": "to protect your root CA you can also have a subordinate CA or ICA which you",
    "start": "1752960",
    "end": "1760460"
  },
  {
    "text": "are delegating to and this in turn signs the other size icas",
    "start": "1760460",
    "end": "1765820"
  },
  {
    "text": "certificate signing requests other way of doing it in complex systems",
    "start": "1765820",
    "end": "1770960"
  },
  {
    "text": "that you have a geographical or departmental or domain distribution where it is segregated icas at geography",
    "start": "1770960",
    "end": "1778159"
  },
  {
    "text": "level it can be segregated icas at your department or domain level which in turn",
    "start": "1778159",
    "end": "1785179"
  },
  {
    "text": "take care of your leave certificates distribution and certificate life cycle management but to keep in mind that wise",
    "start": "1785179",
    "end": "1793100"
  },
  {
    "text": "thing is to keep design your certificate hierarchy based on size of your organization criticality levels of",
    "start": "1793100",
    "end": "1799820"
  },
  {
    "text": "security required and operational capacity you have because ultimately more the hierarchy more the burden you",
    "start": "1799820",
    "end": "1806000"
  },
  {
    "text": "have second point where to terminate your certificates by termination we mean that",
    "start": "1806000",
    "end": "1814220"
  },
  {
    "start": "1807000",
    "end": "1807000"
  },
  {
    "text": "um let's say if you're terminating your certificate at API Gateway then which means that Beyond this point your data",
    "start": "1814220",
    "end": "1821659"
  },
  {
    "text": "would be traversing it will be decrypted at this layer and data will be traversing in plain text so it will not",
    "start": "1821659",
    "end": "1827720"
  },
  {
    "text": "be end-to-end encryption but encryption will end here in most cases where it it",
    "start": "1827720",
    "end": "1833840"
  },
  {
    "text": "can be used that terminate it that API Gateway load balancer or increase controller layer which means the network",
    "start": "1833840",
    "end": "1840080"
  },
  {
    "text": "proxy layers or in other cases uh you might want to",
    "start": "1840080",
    "end": "1845480"
  },
  {
    "text": "end it at compute computation layer which means that the VMS or ec2s or at the pot containers now this depends on",
    "start": "1845480",
    "end": "1852320"
  },
  {
    "text": "that um how much of compliance how much of data in transit do you have a",
    "start": "1852320",
    "end": "1857539"
  },
  {
    "text": "requirement of end-to-end encryption requirements then yes it makes sense to do it at compute layer but in other",
    "start": "1857539",
    "end": "1863779"
  },
  {
    "text": "cases to keep it simple because it comes up with a lot of computation and performance requirements as well as the",
    "start": "1863779",
    "end": "1870799"
  },
  {
    "text": "operational needs to maintain those certificates which you generate so it's better that you end at Network proxy",
    "start": "1870799",
    "end": "1877640"
  },
  {
    "text": "layer because ultimately it then routes it to your internal secure network but look at your requirements and then",
    "start": "1877640",
    "end": "1883159"
  },
  {
    "text": "design that what is your requirement specifically third thing to keep in mind the TLs",
    "start": "1883159",
    "end": "1890059"
  },
  {
    "start": "1887000",
    "end": "1887000"
  },
  {
    "text": "version mismatches so at times we have uh PLS 1.2 to 1.3 or TLS versus mtls",
    "start": "1890059",
    "end": "1897380"
  },
  {
    "text": "need to coexist um for example in this instance if you have to coexist with TLS and mutual TLS",
    "start": "1897380",
    "end": "1905120"
  },
  {
    "text": "where TLS is one-way trust verification and on other hand mtls is two-way trust",
    "start": "1905120",
    "end": "1912760"
  },
  {
    "text": "handshake so sometimes you need to have both coexist for example in your in case",
    "start": "1912760",
    "end": "1919399"
  },
  {
    "text": "of istio service mesh it automatically configures your workload containers or sidecars to use Mutual TLS when calling",
    "start": "1919399",
    "end": "1927020"
  },
  {
    "text": "other workloads so how would you coexist with these variations so in such cases know the ways to exist for example use",
    "start": "1927020",
    "end": "1935240"
  },
  {
    "text": "mtls mode for peer authentication modes can be like strict permissive or disabled where strict is that strictly",
    "start": "1935240",
    "end": "1942080"
  },
  {
    "text": "you have to have mutual TLS to Mutual TLS communication permissive could be that it is optional it can be relaxed",
    "start": "1942080",
    "end": "1949520"
  },
  {
    "text": "and disable can be that you can totally disable Mutual TLS and keep it simple",
    "start": "1949520",
    "end": "1957440"
  },
  {
    "text": "so that's about the third point now fourth an important point that certificate revocation methods and",
    "start": "1957440",
    "end": "1965360"
  },
  {
    "start": "1959000",
    "end": "1959000"
  },
  {
    "text": "design so there are ways to revoke um revoke your certificates and keep a",
    "start": "1965360",
    "end": "1971000"
  },
  {
    "text": "list of it because when you do the revocation you also need to inform various uh entities or",
    "start": "1971000",
    "end": "1977299"
  },
  {
    "text": "verification authorities that yes these certificates have been revoked so how do you do that simplest way of doing is",
    "start": "1977299",
    "end": "1984260"
  },
  {
    "text": "that keep a certificate revocation list whenever you are evoking a certificate and this can be automated or manual",
    "start": "1984260",
    "end": "1990380"
  },
  {
    "text": "process where you keep checking whether any certificate is removed and take action appropriately either manual or",
    "start": "1990380",
    "end": "1997880"
  },
  {
    "text": "automatic another way of doing it in online certificate status protocol where",
    "start": "1997880",
    "end": "2003580"
  },
  {
    "text": "web browsers keep a tap on that what certificates are revoked and they they",
    "start": "2003580",
    "end": "2011380"
  },
  {
    "text": "change I mean whenever they get to know about this revocation of certificates they maintain that list and they renew",
    "start": "2011380",
    "end": "2017559"
  },
  {
    "text": "the site I get the new certificates from these cas es the the upward version of ocsp is",
    "start": "2017559",
    "end": "2024460"
  },
  {
    "text": "ocsp Step link where browse web browsers get this information rather than asking from CS get it stepped whenever they",
    "start": "2024460",
    "end": "2031600"
  },
  {
    "text": "there is a TLS handshake happening now why it is relevance because here are crl",
    "start": "2031600",
    "end": "2037419"
  },
  {
    "text": "design is often overlooked aspect of pki design so you should know how to design it",
    "start": "2037419",
    "end": "2043299"
  },
  {
    "text": "recommendation is for internal private CS use crl to keep it simple and use",
    "start": "2043299",
    "end": "2048398"
  },
  {
    "text": "customer automation but in public Cas where there is facility of such protocols then definitely you must use",
    "start": "2048399",
    "end": "2054339"
  },
  {
    "text": "of that fifth Point certificate Automation and monitoring again many a times unplanned",
    "start": "2054339",
    "end": "2061658"
  },
  {
    "start": "2056000",
    "end": "2056000"
  },
  {
    "text": "area and do you need to keep a balance about what and how much to automate in",
    "start": "2061659",
    "end": "2068500"
  },
  {
    "text": "operations few suggestions create certificate templates to keep it same within your organization and always",
    "start": "2068500",
    "end": "2075040"
  },
  {
    "text": "adhere to certain policies and configuration utilize certificates rolling deployment to avoid downtime",
    "start": "2075040",
    "end": "2081638"
  },
  {
    "text": "during certification renewal or expiry you can use tools like spiffy inspire",
    "start": "2081639",
    "end": "2088118"
  },
  {
    "text": "you can also use tools for monitoring tracing and alerting for better and easy certificate management",
    "start": "2088119",
    "end": "2094658"
  },
  {
    "text": "for example grafana gives you a nice little dashboard of certificate when it",
    "start": "2094659",
    "end": "2100180"
  },
  {
    "text": "is about to expire or when it is already expired um gives you this animation little",
    "start": "2100180",
    "end": "2108220"
  },
  {
    "text": "beautiful animation where it tells you that which all communication is secured through TLS and certificates and which",
    "start": "2108220",
    "end": "2114940"
  },
  {
    "text": "is not so have your own mechanism but tools can be any but utilize these tools",
    "start": "2114940",
    "end": "2121180"
  },
  {
    "text": "for automating monitoring and analyting yes we have reached to the end where a",
    "start": "2121180",
    "end": "2127540"
  },
  {
    "text": "lot we have covered uh thanks for listening patiently it's time for questions and please do leave your",
    "start": "2127540",
    "end": "2133900"
  },
  {
    "text": "feedback by scanning this QR code thank you so much",
    "start": "2133900",
    "end": "2138900"
  }
]