[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "okay all right we'll go ahead and get started um hi i'd like to thank everyone who is joining us welcome to today's cncf",
    "start": "1280",
    "end": "8000"
  },
  {
    "text": "webinar kubernetes security anatomy and the recently disclosed cves i'm christy tan i'll be moderating",
    "start": "8000",
    "end": "15599"
  },
  {
    "text": "today's webinar we'd like to welcome our presenter today gaddy noor cto and co-founder of",
    "start": "15599",
    "end": "21039"
  },
  {
    "text": "outside a few housekeeping items before we get started during the webinar you are not able to",
    "start": "21039",
    "end": "26480"
  },
  {
    "text": "talk as an attendee there's a q a box at the bottom of your screen please feel free to drop in your",
    "start": "26480",
    "end": "31920"
  },
  {
    "text": "questions in there and we'll get to as many as can in the end this is an official webinar of the cncf",
    "start": "31920",
    "end": "37920"
  },
  {
    "text": "and as such is subject to the cncf code of conduct please do not add anything to the chat or",
    "start": "37920",
    "end": "43680"
  },
  {
    "text": "questions that would be in violation of that code of conduct basically please be respectful of all",
    "start": "43680",
    "end": "48800"
  },
  {
    "text": "your fellow participants and presenters please also note that the recording and slides will be posted",
    "start": "48800",
    "end": "53920"
  },
  {
    "text": "later today to the cncf webinars page at dot io slash webinars with that i'll",
    "start": "53920",
    "end": "59760"
  },
  {
    "text": "hand it over to gaddy to kick off today's presentation take it away thank you so much christy",
    "start": "59760",
    "end": "65439"
  },
  {
    "start": "63000",
    "end": "359000"
  },
  {
    "text": "and thank you everyone for joining me today in our session today",
    "start": "65439",
    "end": "70799"
  },
  {
    "text": "i am going to talk about kubernetes security anatomy and specifically we have a very interesting topic related to the recent",
    "start": "70799",
    "end": "78240"
  },
  {
    "text": "cve disclosures um as an anecdote um while i submitted the original slides",
    "start": "78240",
    "end": "86240"
  },
  {
    "text": "for this talk we actually had only two cves as part of this",
    "start": "86240",
    "end": "91759"
  },
  {
    "text": "webinar and since then there were more three more cves disclosed which means that this is a great area",
    "start": "91759",
    "end": "99360"
  },
  {
    "text": "for anyone that is kind of adopting kubernetes as part of their um",
    "start": "99360",
    "end": "104399"
  },
  {
    "text": "cloud native application infrastructure um by way of uh me uh hosting you guys",
    "start": "104399",
    "end": "110960"
  },
  {
    "text": "today um as far as uh where i'm from i'm happily locked down or grounded i should",
    "start": "110960",
    "end": "117040"
  },
  {
    "text": "say in in tel aviv israel um and it looks like it's going to stay like that",
    "start": "117040",
    "end": "122880"
  },
  {
    "text": "in the foreseeable future unfortunately um other than doing cloud native uh",
    "start": "122880",
    "end": "129039"
  },
  {
    "text": "fun stuff i try to enjoy skateboarding which uh happily i i managed to do that more",
    "start": "129039",
    "end": "135120"
  },
  {
    "text": "often than than usual because of the new reality and by way of a professional",
    "start": "135120",
    "end": "140560"
  },
  {
    "text": "experience i spent most of my career um as a kernel developer in in the past",
    "start": "140560",
    "end": "145760"
  },
  {
    "text": "few years since starting alcide which is a pure play kubernetes security company which is",
    "start": "145760",
    "end": "152720"
  },
  {
    "text": "focused on delivering end-to-end kubernetes security i am i got an upgrade to deal with only",
    "start": "152720",
    "end": "159760"
  },
  {
    "text": "the fun stuff which is containers kubernetes and and dealing with um building scalable systems and",
    "start": "159760",
    "end": "165840"
  },
  {
    "text": "securing them what are we going to see in this session today so we are going to start with",
    "start": "165840",
    "end": "172319"
  },
  {
    "text": "an overview that kind of takes us to the four c's and and uh which is cloud",
    "start": "172319",
    "end": "178879"
  },
  {
    "text": "cluster containers which is somewhat kind of extended to kubernetes",
    "start": "178879",
    "end": "184000"
  },
  {
    "text": "and code and we'll see what are the building blocks that you really need to think of when we are trying to build",
    "start": "184000",
    "end": "190400"
  },
  {
    "text": "a practice or thesis around our kubernetes security hopefully i'll be able to show",
    "start": "190400",
    "end": "195680"
  },
  {
    "text": "you some demos that are relevant to the topics that i am going to discuss in this session as well as discuss the",
    "start": "195680",
    "end": "203840"
  },
  {
    "text": "recently disclosed cves as i mentioned there there were five of them and also talk about detections and",
    "start": "203840",
    "end": "210080"
  },
  {
    "text": "preventions in the context of those cves so without further ado",
    "start": "210080",
    "end": "215760"
  },
  {
    "text": "i'll dive right in so when we are really trying to think about uh what are the kubernetes security",
    "start": "215760",
    "end": "221680"
  },
  {
    "text": "building blocks um this is a relatively complex topic and it's not because kubernetes",
    "start": "221680",
    "end": "227599"
  },
  {
    "text": "is not complex it's because security by itself is a complex topic and when we really",
    "start": "227599",
    "end": "233200"
  },
  {
    "text": "try to think about what do we want to achieve with improving or",
    "start": "233200",
    "end": "238720"
  },
  {
    "text": "implementing security controls around our environments we really need to think about how we",
    "start": "238720",
    "end": "244319"
  },
  {
    "text": "build our clusters how we access our clusters how we operate our clusters and even before that what exactly are we",
    "start": "244319",
    "end": "251920"
  },
  {
    "text": "doing as far as the code that we are shipping into our infrastructure so let's start with the",
    "start": "251920",
    "end": "259120"
  },
  {
    "text": "easy stuff which we are not going to talk very much in depth in this",
    "start": "259120",
    "end": "264880"
  },
  {
    "text": "webinar it mainly revolves around the first c which is our code and when",
    "start": "264880",
    "end": "271040"
  },
  {
    "text": "we really think about what do we want to implement as far as our code controls so naturally we have the traditional",
    "start": "271040",
    "end": "278400"
  },
  {
    "text": "practices of scanning our code uh with code analyzers",
    "start": "278400",
    "end": "283680"
  },
  {
    "text": "there's whole religious around um security application testing and dynamic application security testing",
    "start": "283680",
    "end": "291040"
  },
  {
    "text": "and and software component analysis which pretty much kind of involves the",
    "start": "291040",
    "end": "297440"
  },
  {
    "text": "large challenges or the new challenges that we have with adopting and bringing in open source components",
    "start": "297440",
    "end": "302800"
  },
  {
    "text": "as part of our um applications and once we kind of feel comfortable around the practices that",
    "start": "302800",
    "end": "310160"
  },
  {
    "text": "the code analysis brings us we really want to think about how we package them in containers so we",
    "start": "310160",
    "end": "316080"
  },
  {
    "text": "want to think about container image scanning and the main motion that we see with the",
    "start": "316080",
    "end": "321759"
  },
  {
    "text": "security building blocks that we want to apply in this context mainly revolves around",
    "start": "321759",
    "end": "326960"
  },
  {
    "text": "integrated security controls to our development life cycle and development",
    "start": "326960",
    "end": "332479"
  },
  {
    "text": "kind of practices as well as our ci but once we move",
    "start": "332479",
    "end": "337520"
  },
  {
    "text": "from this point um and then think about the kubernetes environment that we are",
    "start": "337520",
    "end": "343280"
  },
  {
    "text": "spinning up so we really need to think about two more c's the first one",
    "start": "343280",
    "end": "348320"
  },
  {
    "text": "is the cloud we can't see your slides i think there's a delay on your end can",
    "start": "348320",
    "end": "353919"
  },
  {
    "text": "you check this uh let's see",
    "start": "353919",
    "end": "359440"
  },
  {
    "text": "can you see my slide yes we can now thanks all right so i am",
    "start": "359440",
    "end": "366240"
  },
  {
    "text": "for the sake of uh completeness this is the entire slide um and",
    "start": "366240",
    "end": "373120"
  },
  {
    "text": "right now i am at the two additional c so we talked about the code",
    "start": "373120",
    "end": "378639"
  },
  {
    "text": "and we really want to talk about um the cloud and the cluster so essentially when we",
    "start": "378639",
    "end": "384479"
  },
  {
    "text": "are deploying our kubernetes or provisioning our clusters",
    "start": "384479",
    "end": "389759"
  },
  {
    "text": "into the cloud we're willing to think about first of all how we secure our cloud account",
    "start": "389759",
    "end": "394800"
  },
  {
    "text": "so this is an entire topic by itself that we really need to kind of figure out how do we provision our",
    "start": "394800",
    "end": "401360"
  },
  {
    "text": "kubernetes clusters how do we segment them from other parts of our cloud infrastructure or",
    "start": "401360",
    "end": "407600"
  },
  {
    "text": "services how do we regulate access to the users to the cloud account because essentially this is something that can be",
    "start": "407600",
    "end": "413759"
  },
  {
    "text": "prerequisite to access our kubernetes environment but when we are starting to",
    "start": "413759",
    "end": "419759"
  },
  {
    "text": "think about the kubernetes cluster itself so we want to talk about",
    "start": "419759",
    "end": "424800"
  },
  {
    "text": "uh what exactly are we doing to secure the control plane which is the brain of our cluster um and we are leveraging",
    "start": "424800",
    "end": "432400"
  },
  {
    "text": "for example uh managed kubernetes services like eks or aks",
    "start": "432400",
    "end": "438000"
  },
  {
    "text": "then um the cloud providers actually takes a lot of the burden of uh from us in terms of securing the",
    "start": "438000",
    "end": "446240"
  },
  {
    "text": "control plane and the management plane of the cluster and and we'll see that slightly uh in depth later um as far as identity",
    "start": "446240",
    "end": "453759"
  },
  {
    "text": "like um as we think we try to think about who do we allow access to the cluster so",
    "start": "453759",
    "end": "460639"
  },
  {
    "text": "the first thing we want to make sure is to establish the identity of users as well as service accounts",
    "start": "460639",
    "end": "466960"
  },
  {
    "text": "that are accessing the cluster so here we want to make sure that we have very strong identity controls in terms",
    "start": "466960",
    "end": "474080"
  },
  {
    "text": "of accessing the cluster so we want to have something like um oidc which",
    "start": "474080",
    "end": "479599"
  },
  {
    "text": "pretty much enables us kind of stronger authentication and making sure that credentials are expired in relatively",
    "start": "479599",
    "end": "486160"
  },
  {
    "text": "short time intervals so we can make sure that users are not able to access the cluster",
    "start": "486160",
    "end": "494400"
  },
  {
    "text": "in a relatively permissive way if you try to think about a little bit of what",
    "start": "494400",
    "end": "499520"
  },
  {
    "text": "happened with twitter um it's i mean now that i'm trying to be kind of uh going depth there but essentially",
    "start": "499520",
    "end": "506479"
  },
  {
    "text": "there was some social engineering like human social engineering elements so if things are breaking through our",
    "start": "506479",
    "end": "513279"
  },
  {
    "text": "identity systems which is what happened uh with twitter think about the blast radius that would happen",
    "start": "513279",
    "end": "519839"
  },
  {
    "text": "in terms of your kubernetes cluster if your highly privileged sre is performing",
    "start": "519839",
    "end": "525360"
  },
  {
    "text": "actions against the cluster and we will see the relevance of that in the context of",
    "start": "525360",
    "end": "530720"
  },
  {
    "text": "the control plane cves that were disclosed now once we move from the identity to",
    "start": "530720",
    "end": "536480"
  },
  {
    "text": "our bach we really want to make sure that as far as authorization would basically regulate who is allowed to do what we",
    "start": "536480",
    "end": "544080"
  },
  {
    "text": "have the right controls in place and those controls should uh first off regulate what users are",
    "start": "544080",
    "end": "551839"
  },
  {
    "text": "allowed to do as well as uh what service accounts essentially operators and and automated processes",
    "start": "551839",
    "end": "558959"
  },
  {
    "text": "that are running from within the cluster and accessing the api server um",
    "start": "558959",
    "end": "564160"
  },
  {
    "text": "validating admission controllers and mutating admission controls you can really think about them as extensions to the um",
    "start": "564160",
    "end": "571920"
  },
  {
    "text": "kubernetes arbuck policies where whenever the arbuck policies are",
    "start": "571920",
    "end": "578399"
  },
  {
    "text": "not not granular enough uh or you really want to do some sort of operations that extend those",
    "start": "578399",
    "end": "584399"
  },
  {
    "text": "uh policies we can really turn into leveraging the extensible parts of",
    "start": "584399",
    "end": "590880"
  },
  {
    "text": "kubernetes which are in the form of those admission controllers",
    "start": "590880",
    "end": "596399"
  },
  {
    "start": "595000",
    "end": "813000"
  },
  {
    "text": "once we move from our infrastructure to our workloads then this is where",
    "start": "596399",
    "end": "602880"
  },
  {
    "text": "things become extremely interesting so we first want to make sure that we run our",
    "start": "602880",
    "end": "609680"
  },
  {
    "text": "workloads our application workloads and those can be also our infrastructure workloads",
    "start": "609680",
    "end": "615279"
  },
  {
    "text": "in the best secured manner in the sense that we are not we do not want to run anything",
    "start": "615279",
    "end": "621120"
  },
  {
    "text": "privileged we want to make sure that uh we don't create services of type load balancer that",
    "start": "621120",
    "end": "627120"
  },
  {
    "text": "enable access into the cluster we want to make sure for example that if we expose the",
    "start": "627120",
    "end": "633920"
  },
  {
    "text": "cluster to the outside world or we want to make sure that we expose the cluster only to",
    "start": "633920",
    "end": "638959"
  },
  {
    "text": "other parts of the cloud account we really want to make sure that we are using the right controls",
    "start": "638959",
    "end": "644480"
  },
  {
    "text": "and regulating that is something that arbuck by itself is insufficient port security policies",
    "start": "644480",
    "end": "650880"
  },
  {
    "text": "for those who know or or actually miss that um will not see the day of life in terms of",
    "start": "650880",
    "end": "657279"
  },
  {
    "text": "ga and presently the at least one element that is assumed to be replacing",
    "start": "657279",
    "end": "663600"
  },
  {
    "text": "part security policies is opa open policy agent and gatekeeper",
    "start": "663600",
    "end": "668880"
  },
  {
    "text": "which by itself has some challenges because part security policies are restrictive by nature which means",
    "start": "668880",
    "end": "676079"
  },
  {
    "text": "that if you deploy them then it might break your cluster on one way but on the other hand",
    "start": "676079",
    "end": "681600"
  },
  {
    "text": "you will be running in accordance to very strict policy profiles in terms of how your",
    "start": "681600",
    "end": "688880"
  },
  {
    "text": "pods and containers are running but on the other hand if you go the opa gatekeeper path then you really need to",
    "start": "688880",
    "end": "695920"
  },
  {
    "text": "manage um pretty much discrete features and making sure that",
    "start": "695920",
    "end": "701600"
  },
  {
    "text": "you apply those controls um in in an additive manner which is quite",
    "start": "701600",
    "end": "707920"
  },
  {
    "text": "different than how pot security policy works but at the end of the day if you think about it",
    "start": "707920",
    "end": "714480"
  },
  {
    "text": "our workloads or clusters never run with workloads that are not privileged",
    "start": "714480",
    "end": "720480"
  },
  {
    "text": "so some of the infrastructure components for example must run with some privileges with",
    "start": "720480",
    "end": "725760"
  },
  {
    "text": "respect to the host itself with some privileges to with respect to the network with some privileges with respect to the",
    "start": "725760",
    "end": "732480"
  },
  {
    "text": "api center and at the end of the day this is something that we really want to make",
    "start": "732480",
    "end": "737600"
  },
  {
    "text": "sure that we have um well-established guardrails in terms of both understanding what's what are the",
    "start": "737600",
    "end": "745200"
  },
  {
    "text": "risky parts as well as enforcing those policies once we move into um things like secrets which has their",
    "start": "745200",
    "end": "753600"
  },
  {
    "text": "own lifespan which is different than the cluster itself it makes up becomes extremely",
    "start": "753600",
    "end": "759040"
  },
  {
    "text": "challenging challenging and we want to revert to stuff that or or or components that help",
    "start": "759040",
    "end": "764480"
  },
  {
    "text": "us manage secret life cycle outside the cluster itself so things like hashicorp vault",
    "start": "764480",
    "end": "769519"
  },
  {
    "text": "or dynamic secret injection or leveraging things like pod identity injection",
    "start": "769519",
    "end": "775279"
  },
  {
    "text": "into the pod by components like for example imrols for aws",
    "start": "775279",
    "end": "781839"
  },
  {
    "text": "and eks clusters are really things that help us integrate our kubernetes workloads in a way that",
    "start": "781839",
    "end": "789120"
  },
  {
    "text": "kind of natively integrates with um cloud services or or cloud kind of",
    "start": "789120",
    "end": "796160"
  },
  {
    "text": "uh offering that do not require to wire secrets in in",
    "start": "796160",
    "end": "801600"
  },
  {
    "text": "in a weird way or in a way that essentially can be bypassed network policies are an",
    "start": "801600",
    "end": "807440"
  },
  {
    "text": "extremely important component we will see that shortly when it comes to the cves so",
    "start": "807440",
    "end": "813839"
  },
  {
    "start": "813000",
    "end": "896000"
  },
  {
    "text": "what exactly happened as far as um those security building blocks and the recent",
    "start": "813839",
    "end": "819040"
  },
  {
    "text": "cves that were discovered so what we really see here is the trust boundaries",
    "start": "819040",
    "end": "824240"
  },
  {
    "text": "uh of a typical kubernetes environment where we really want to make sure that the",
    "start": "824240",
    "end": "829279"
  },
  {
    "text": "code that we bake into containers is something that we fully understand",
    "start": "829279",
    "end": "835360"
  },
  {
    "text": "like which are the source container image registries from which we pull",
    "start": "835360",
    "end": "841040"
  },
  {
    "text": "images into the cluster because this is kind of a thread vector that uh inject injecting kind of",
    "start": "841040",
    "end": "848480"
  },
  {
    "text": "malicious images to our container image registry is something that eventually can land",
    "start": "848480",
    "end": "853680"
  },
  {
    "text": "into our cloud account our cluster worker nodes and then from there an attacker can",
    "start": "853680",
    "end": "859279"
  },
  {
    "text": "actually start to manipulate the cluster and and perform those lateral movements to",
    "start": "859279",
    "end": "865920"
  },
  {
    "text": "obtain or or get a hold of more valuable assets and in the worst case exfiltrate data",
    "start": "865920",
    "end": "872000"
  },
  {
    "text": "uh from the cluster but we really see several vulnerabilities that were",
    "start": "872000",
    "end": "878399"
  },
  {
    "text": "disclosed two of them are relevant to the control plan to the management of kubernetes um even in the event of the managed",
    "start": "878399",
    "end": "885839"
  },
  {
    "text": "kubernetes services and three more vulnerabilities that are related to",
    "start": "885839",
    "end": "891760"
  },
  {
    "text": "uh the working node themselves and let's take a deeper uh dive on that so just to summarize",
    "start": "891760",
    "end": "899519"
  },
  {
    "start": "896000",
    "end": "1056000"
  },
  {
    "text": "you really want to know what exactly you guys are trying to achieve as far as the",
    "start": "899519",
    "end": "904880"
  },
  {
    "text": "security posture that you're building um as well as understanding your",
    "start": "904880",
    "end": "910160"
  },
  {
    "text": "clusters so for example um we know that in every cluster",
    "start": "910160",
    "end": "915760"
  },
  {
    "text": "we have infrastructure components and we want to make sure that we account for them from a security",
    "start": "915760",
    "end": "922560"
  },
  {
    "text": "perspective in the sense that we know that they are supposed to run privilege we know that they are supposed to be",
    "start": "922560",
    "end": "928399"
  },
  {
    "text": "running for example like prometheus or security agents so we want to have a mechanism that enables us to kind of manage",
    "start": "928399",
    "end": "934959"
  },
  {
    "text": "those exceptions uh in our environment the second piece is if you guys are running with multiple",
    "start": "934959",
    "end": "941440"
  },
  {
    "text": "clusters automating and regulating security across multiple clusters",
    "start": "941440",
    "end": "946639"
  },
  {
    "text": "requires some unification of the security infrastructure that we want to implement",
    "start": "946639",
    "end": "951680"
  },
  {
    "text": "it's not straightforward to do that if there is a difference between application that",
    "start": "951680",
    "end": "956880"
  },
  {
    "text": "there are element that are application specific but if there are uh shared for example",
    "start": "956880",
    "end": "963040"
  },
  {
    "text": "um uh method for provisioning the cluster that you can really share um",
    "start": "963040",
    "end": "968160"
  },
  {
    "text": "the security building blocks and policies and guard wealth that you implement multi-cloud becomes",
    "start": "968160",
    "end": "974160"
  },
  {
    "text": "extremely challenging if you think about the the sea that cover the cloud aspect clouds",
    "start": "974160",
    "end": "981600"
  },
  {
    "text": "can be quite different than other uh from one another especially around the layers",
    "start": "981600",
    "end": "987199"
  },
  {
    "text": "that uh configure the account the credentials the networking uh even though kubernetes is",
    "start": "987199",
    "end": "994399"
  },
  {
    "text": "appears to be something that denormalize uh or abstracts many of the cloud uh the underlying",
    "start": "994399",
    "end": "1000959"
  },
  {
    "text": "cloud elements there are still cloud specific elements to kubernetes itself so again multi-cloud becomes extremely",
    "start": "1000959",
    "end": "1008079"
  },
  {
    "text": "um challenging as far as the security life cycle of components that are running inside the",
    "start": "1008079",
    "end": "1014560"
  },
  {
    "text": "cluster for example secrets api keys user identity certificates all of those needs to be well thought in",
    "start": "1014560",
    "end": "1022240"
  },
  {
    "text": "terms of how we bring them into our applications and",
    "start": "1022240",
    "end": "1027280"
  },
  {
    "text": "when it comes to shifting left or or uh the devsecops culture that we're trying",
    "start": "1027280",
    "end": "1032640"
  },
  {
    "text": "to build as far as bringing more security or delivering security through",
    "start": "1032640",
    "end": "1040640"
  },
  {
    "text": "awareness and implementation that is already done in the development cycle so you can",
    "start": "1040640",
    "end": "1046480"
  },
  {
    "text": "really implement that in ci by leveraging open tools or commercial tools which are",
    "start": "1046480",
    "end": "1053840"
  },
  {
    "text": "quite powerful in that sense so let's take a look quickly look at what does it mean to",
    "start": "1053840",
    "end": "1061600"
  },
  {
    "start": "1056000",
    "end": "1222000"
  },
  {
    "text": "scan our environment so i have prepared here",
    "start": "1061600",
    "end": "1067360"
  },
  {
    "text": "um and this is something that you can kind of register and create a nice dashboard for your environment",
    "start": "1067360",
    "end": "1072480"
  },
  {
    "text": "um so i have here a little cluster that i created as part of uh this for this webinar um",
    "start": "1072480",
    "end": "1080000"
  },
  {
    "text": "it's a kubernetes kind cluster it's a single node pretty simple um doesn't do really much",
    "start": "1080000",
    "end": "1085760"
  },
  {
    "text": "but this is something that is based on kubernetes version 18.2",
    "start": "1085760",
    "end": "1091440"
  },
  {
    "text": "and one of the things that you can achieve with a seed advisor for example is the",
    "start": "1091440",
    "end": "1097280"
  },
  {
    "text": "ability to define scan policies and specifically i define a policy that helps me",
    "start": "1097280",
    "end": "1103039"
  },
  {
    "text": "identify which kubernetes cves the kubernetes infrastructure cvs",
    "start": "1103039",
    "end": "1109679"
  },
  {
    "text": "my kubernetes kind cluster is presently vulnerable to and you can really see that as part of",
    "start": "1109679",
    "end": "1114880"
  },
  {
    "text": "the maintenance of the cve we can really flag which",
    "start": "1114880",
    "end": "1120960"
  },
  {
    "text": "cves are presently running inside the cluster now vulnerable doesn't mean exploitable but",
    "start": "1120960",
    "end": "1128640"
  },
  {
    "text": "it really means that presently the kubernetes software version that i'm running in this specific environment is vulnerable",
    "start": "1128640",
    "end": "1134799"
  },
  {
    "text": "to those following cves and you can pretty much drill down into the",
    "start": "1134799",
    "end": "1141760"
  },
  {
    "text": "individual details and really understand like what exactly is happening in terms of",
    "start": "1141760",
    "end": "1148000"
  },
  {
    "text": "what this cv is about whether it's relevant to the control plane or the nodes and essentially when you",
    "start": "1148000",
    "end": "1154240"
  },
  {
    "text": "try to think about uh vulnerabilities that are relevant to your cluster nodes",
    "start": "1154240",
    "end": "1159919"
  },
  {
    "text": "it's relatively harder to upgrade and maintain the nodes themselves pretty much if you",
    "start": "1159919",
    "end": "1165520"
  },
  {
    "text": "are running stateful applications it will take you longer to upgrade the",
    "start": "1165520",
    "end": "1170720"
  },
  {
    "text": "underlying kubernetes software pretty much because you need to account for the data that is running there and",
    "start": "1170720",
    "end": "1176160"
  },
  {
    "text": "make sure that you are rotating the nodes or or doing kind of this rolling upgrade",
    "start": "1176160",
    "end": "1181679"
  },
  {
    "text": "in a way that preserve uh the data so you really need to kind of build your cluster in a way that helps",
    "start": "1181679",
    "end": "1187919"
  },
  {
    "text": "you deal with those maintenance windows so this is an example where um a seed advisor um our",
    "start": "1187919",
    "end": "1195760"
  },
  {
    "text": "cloud sas can monitor your kubernetes clusters for",
    "start": "1195760",
    "end": "1201360"
  },
  {
    "text": "your cves and naturally you can define multiple scan profiles",
    "start": "1201360",
    "end": "1207280"
  },
  {
    "text": "for example those that enables you to see for example port security",
    "start": "1207280",
    "end": "1214320"
  },
  {
    "text": "analysis of your environment and we'll see that down the road when we are talking about",
    "start": "1214320",
    "end": "1220400"
  },
  {
    "text": "cves and how we can deal with that so what are seriously is and why they",
    "start": "1220400",
    "end": "1225679"
  },
  {
    "text": "are important and why everybody is talking about vulnerability scanning and what does it",
    "start": "1225679",
    "end": "1230799"
  },
  {
    "text": "mean in the context of kubernetes so first off cv stands for the common vulnerabilities",
    "start": "1230799",
    "end": "1235919"
  },
  {
    "text": "and exposures it's a database that basically allocates unique identifications for software issues that",
    "start": "1235919",
    "end": "1243280"
  },
  {
    "text": "are normally disclosed by software vendors some of the software vendors that are",
    "start": "1243280",
    "end": "1248799"
  },
  {
    "text": "out there has disclosure process and some of them do not but at the end of the day this is",
    "start": "1248799",
    "end": "1254799"
  },
  {
    "text": "something that pretty much tries to unify the way that we describe identify and understand the",
    "start": "1254799",
    "end": "1262240"
  },
  {
    "text": "risk around our software components that we are running image vulnerability scanning talks about",
    "start": "1262240",
    "end": "1269360"
  },
  {
    "text": "scanning the container images and understanding based on the os packages that are baked into the",
    "start": "1269360",
    "end": "1276480"
  },
  {
    "text": "container or with some more advanced tools you can actually do binary analysis but at the end of the day",
    "start": "1276480",
    "end": "1282159"
  },
  {
    "text": "it does talk about the images that are supposed to be scheduled to be running",
    "start": "1282159",
    "end": "1288000"
  },
  {
    "text": "inside the cluster kubernetes cv scanning pretty much scans your kubernetes components and",
    "start": "1288000",
    "end": "1294080"
  },
  {
    "text": "helps you understand whether you are running with vulnerable kubernetes software or not um so",
    "start": "1294080",
    "end": "1301840"
  },
  {
    "text": "in the four six weeks since uh kind of i started to do the",
    "start": "1301840",
    "end": "1307520"
  },
  {
    "text": "slides for this talk um there were five cves disclosed uh the interesting part here and i'm",
    "start": "1307520",
    "end": "1313840"
  },
  {
    "text": "taking here a wild guess that we will see five six so eight five five",
    "start": "1313840",
    "end": "1319039"
  },
  {
    "text": "five six disclose at some point in times the ideas that we see here uh do have a meaning kind of their",
    "start": "1319039",
    "end": "1325600"
  },
  {
    "text": "sequential in a way uh but uh it looks like something is going to be released",
    "start": "1325600",
    "end": "1330640"
  },
  {
    "text": "about it that's kind of a guess i don't know for sure but at the end of the day we had a couple of cves that talks about uh the",
    "start": "1330640",
    "end": "1337679"
  },
  {
    "text": "control plane and um the basic idea around it is",
    "start": "1337679",
    "end": "1343200"
  },
  {
    "text": "we want to make sure how or what is the risk or the blast radius that are",
    "start": "1343200",
    "end": "1348240"
  },
  {
    "text": "associated with each and every vulnerability or weakness that we have in our environment",
    "start": "1348240",
    "end": "1354240"
  },
  {
    "text": "and we want to make sure that we can understand in terms of the blast radius what are the components",
    "start": "1354240",
    "end": "1361280"
  },
  {
    "text": "inside our cluster that may risk our environment in a way",
    "start": "1361280",
    "end": "1366480"
  },
  {
    "text": "that can can someone can really exploit uh those uh vulnerabilities so",
    "start": "1366480",
    "end": "1371840"
  },
  {
    "text": "um for example uh the the one that actually was disclosed last week talks about",
    "start": "1371840",
    "end": "1378720"
  },
  {
    "text": "a pod that is able to inflict a denial of services essentially can uh",
    "start": "1378720",
    "end": "1384400"
  },
  {
    "text": "take down the entire node while the kubernetes control plane is not aware of the state of the node",
    "start": "1384400",
    "end": "1391200"
  },
  {
    "text": "itself so this is something that can be done with a pod that can mess in quotes uh with the storage of the",
    "start": "1391200",
    "end": "1399200"
  },
  {
    "text": "node itself and at the end of the day if a pod or if you're running workloads that are coming",
    "start": "1399200",
    "end": "1404320"
  },
  {
    "text": "from an untrusted source for example take uh build systems and if those build systems are running",
    "start": "1404320",
    "end": "1411919"
  },
  {
    "text": "code that can manipulate the node they can inflict a denial of service on the node and potentially on",
    "start": "1411919",
    "end": "1418000"
  },
  {
    "text": "the entire cloud service that may uh may be hosting that so this is kind of one example",
    "start": "1418000",
    "end": "1423919"
  },
  {
    "text": "of how we try to think about it so one major issue that was disclosed a few weeks ago",
    "start": "1423919",
    "end": "1431039"
  },
  {
    "start": "1425000",
    "end": "1493000"
  },
  {
    "text": "uh was really talking about men in the middle attack where um pods with enough privileges",
    "start": "1431039",
    "end": "1438960"
  },
  {
    "text": "could have been send malicious traffic or actually it's not malicious traffic but it's traffic",
    "start": "1438960",
    "end": "1444480"
  },
  {
    "text": "that at the end of the day is ipv6 router advertisement traffic which",
    "start": "1444480",
    "end": "1450159"
  },
  {
    "text": "basically confuses the forwarding play so think about calico for example",
    "start": "1450159",
    "end": "1455760"
  },
  {
    "text": "uh which was vulnerable to this attack or even a default kubernetes cni which was vulnerable to",
    "start": "1455760",
    "end": "1461919"
  },
  {
    "text": "this attack confuses the underlying forwarding mechanism the routing mechanism",
    "start": "1461919",
    "end": "1467360"
  },
  {
    "text": "of your cni the container networking interface in a way that the",
    "start": "1467360",
    "end": "1473360"
  },
  {
    "text": "pod can get a hold of a traffic that is destined to the host or destined to neighboring pods now the",
    "start": "1473360",
    "end": "1480480"
  },
  {
    "text": "prerequisite for the attack is the ability to craft ipv6 traffic",
    "start": "1480480",
    "end": "1487520"
  },
  {
    "text": "and this is a very specific process level capability that requires an attacker",
    "start": "1487520",
    "end": "1492799"
  },
  {
    "text": "to be able to mount such an attack mitigating the attack would kind of",
    "start": "1492799",
    "end": "1500320"
  },
  {
    "start": "1493000",
    "end": "1588000"
  },
  {
    "text": "help us if we could have blocked any egress traffic from pods in a way",
    "start": "1500320",
    "end": "1506559"
  },
  {
    "text": "that you know nobody can run ipv6 or inject",
    "start": "1506559",
    "end": "1511760"
  },
  {
    "text": "traffic into our pods or for example if we disable the very specific os kernel feature that",
    "start": "1511760",
    "end": "1519520"
  },
  {
    "text": "enables uh the support of ipv6 router advertisement now if you try to think about it why ipv6 is",
    "start": "1519520",
    "end": "1527760"
  },
  {
    "text": "relevant to your clusters if you are only using ipv4 and ipv6 is some some sort of a legendary",
    "start": "1527760",
    "end": "1533760"
  },
  {
    "text": "thing that everybody is talking about but not really implementing well the answer is that out of the box",
    "start": "1533760",
    "end": "1540880"
  },
  {
    "text": "linux systems are equipped with a working stack of ipv6 and the fact that malicious pod",
    "start": "1540880",
    "end": "1548720"
  },
  {
    "text": "or an attacker on the host is able essentially to mount this attack and get a hold",
    "start": "1548720",
    "end": "1556480"
  },
  {
    "text": "of network traffic that is destined to neighboring pods by manipulating the underlying",
    "start": "1556480",
    "end": "1561919"
  },
  {
    "text": "forwarding uh plane so essentially this is something that is relevant to",
    "start": "1561919",
    "end": "1567039"
  },
  {
    "text": "your system now let's think about what exactly are the prerequisites so",
    "start": "1567039",
    "end": "1572240"
  },
  {
    "text": "for example if we have a port that is running on the host namespace we really want to make sure that we do",
    "start": "1572240",
    "end": "1578799"
  },
  {
    "text": "not allow it to do its uh those type of attacks if you're running a privileged poll this is",
    "start": "1578799",
    "end": "1583919"
  },
  {
    "text": "something that we really want to make sure we cannot run so at the end of the day we're looking into something that",
    "start": "1583919",
    "end": "1590720"
  },
  {
    "start": "1588000",
    "end": "1717000"
  },
  {
    "text": "is really required by having the ability to send traffic",
    "start": "1590720",
    "end": "1596000"
  },
  {
    "text": "raw traffic into the host another good example a very recent one from last week um bypassing the localhost trust",
    "start": "1596000",
    "end": "1604159"
  },
  {
    "text": "boundary so again this is a this is a vulnerability in the way that kubernetes provisions",
    "start": "1604159",
    "end": "1611200"
  },
  {
    "text": "the hosts the nodes themselves pretty much related to q proxy and cubelet",
    "start": "1611200",
    "end": "1616720"
  },
  {
    "text": "which essentially an attacker can send a traffic from a neighboring pod or even",
    "start": "1616720",
    "end": "1622640"
  },
  {
    "text": "from the host itself from a pod to the localhost address so that's",
    "start": "1622640",
    "end": "1629200"
  },
  {
    "text": "127.0.0.1 so even if you are sending that from a neighboring node by manipulating the layer two",
    "start": "1629320",
    "end": "1637120"
  },
  {
    "text": "addresses and the layer three says you can really gain access",
    "start": "1637120",
    "end": "1642480"
  },
  {
    "text": "to a process that is listening on a port on the local host",
    "start": "1642480",
    "end": "1647840"
  },
  {
    "text": "from a remote host so this is something that for example an application can make an assumption that",
    "start": "1647840",
    "end": "1653840"
  },
  {
    "text": "no one can access a local or process that binds to a local host",
    "start": "1653840",
    "end": "1661200"
  },
  {
    "text": "and this vulnerability actually violates that so if we look about if we if you look about",
    "start": "1661200",
    "end": "1667200"
  },
  {
    "text": "this uh if we if we look into this vulnerability on a host on a node um it was rated as 5.4",
    "start": "1667200",
    "end": "1674960"
  },
  {
    "text": "but if we are able to load a pod on the control plane",
    "start": "1674960",
    "end": "1681120"
  },
  {
    "text": "which is something that is possible with the non-managed kubernetes services so if you're not using",
    "start": "1681120",
    "end": "1686640"
  },
  {
    "text": "eks but using cops for example then loading a pod on the node and and",
    "start": "1686640",
    "end": "1694880"
  },
  {
    "text": "exploiting kind of uh the api server running with insecure port which",
    "start": "1694880",
    "end": "1701200"
  },
  {
    "text": "is off by default but sometimes you can kind of change the default you can really kind of take the entire cluster",
    "start": "1701200",
    "end": "1707360"
  },
  {
    "text": "so this is something that is rated as 8.8 so if you think about how can you",
    "start": "1707360",
    "end": "1712799"
  },
  {
    "text": "know whether you are vulnerable or not this is something that you really need to make sure for example that",
    "start": "1712799",
    "end": "1719760"
  },
  {
    "text": "you don't have pods that are able to send traffic into the",
    "start": "1719760",
    "end": "1725840"
  },
  {
    "text": "network and if you have pods that has those uh toleration that enables them to run",
    "start": "1726159",
    "end": "1733039"
  },
  {
    "text": "on the control plane that's again something that you want to avoid so at the end of the day",
    "start": "1733039",
    "end": "1739279"
  },
  {
    "text": "we really want to we really want to understand the blast radius so let's take another example",
    "start": "1739279",
    "end": "1744720"
  },
  {
    "text": "this is a cve that is related to the kubernetes control plane so",
    "start": "1744720",
    "end": "1751600"
  },
  {
    "text": "the interesting part before we dive we are diving into this uh the details of that um this is",
    "start": "1751600",
    "end": "1757679"
  },
  {
    "text": "something that is relevant to um some extendable extensible parts of kubernetes",
    "start": "1757679",
    "end": "1763360"
  },
  {
    "text": "um specifically around storage class and the interesting part that you can see",
    "start": "1763360",
    "end": "1769200"
  },
  {
    "text": "that with definition of the storage class you can see that on the parameters you have a parameter",
    "start": "1769200",
    "end": "1775360"
  },
  {
    "text": "that says rest url which kind of gives us a hint",
    "start": "1775360",
    "end": "1780880"
  },
  {
    "text": "that kubernetes by way of the implementation is actually",
    "start": "1780880",
    "end": "1788159"
  },
  {
    "text": "activating this url so as far as rating goes on the none on the on the",
    "start": "1788159",
    "end": "1794799"
  },
  {
    "text": "non-managed kubernetes um it was rated as 6.3 effectively the vulnerability basically",
    "start": "1794799",
    "end": "1802159"
  },
  {
    "text": "enables an attacker so someone that can run um control command",
    "start": "1802159",
    "end": "1807760"
  },
  {
    "text": "to extract data from the api server and specifically the vulnerable",
    "start": "1807760",
    "end": "1813600"
  },
  {
    "text": "component is the cloud controller manager so this is the glue layer the cloud specific",
    "start": "1813600",
    "end": "1819679"
  },
  {
    "text": "kubernetes component that helps kubernetes kind of stay cloud agnostic so cloud controller",
    "start": "1819679",
    "end": "1826960"
  },
  {
    "text": "manager is actually the component that implements cloud specific calls to implement for example",
    "start": "1826960",
    "end": "1832799"
  },
  {
    "text": "services of type load balancer to provision storage and and and other resources that",
    "start": "1832799",
    "end": "1839279"
  },
  {
    "text": "are cloud specific so one point to actually",
    "start": "1839279",
    "end": "1844399"
  },
  {
    "start": "1842000",
    "end": "1986000"
  },
  {
    "text": "uh note as far as the disclosure timeline so when we",
    "start": "1844399",
    "end": "1850080"
  },
  {
    "text": "really think about yeah those cves are are",
    "start": "1850080",
    "end": "1855520"
  },
  {
    "text": "coming and going um pretty much uh quite often it's not really the case with kubernetes",
    "start": "1855520",
    "end": "1861360"
  },
  {
    "text": "at least recently the positive thing about those recent disclosures is that kubernetes",
    "start": "1861360",
    "end": "1867360"
  },
  {
    "text": "becomes more and more popular software and more security researchers are actually looking into the software and",
    "start": "1867360",
    "end": "1873120"
  },
  {
    "text": "manipulating the software in a way that those weaknesses are discovered",
    "start": "1873120",
    "end": "1878720"
  },
  {
    "text": "but the mind-blowing fact is that on december 6 2019",
    "start": "1878720",
    "end": "1884960"
  },
  {
    "text": "uh microsoft reach research center center was actually",
    "start": "1884960",
    "end": "1891519"
  },
  {
    "text": "had a submission around this specific vulnerability um so that's more than six months ago",
    "start": "1891519",
    "end": "1898240"
  },
  {
    "text": "and you can see that kubernetes security committee",
    "start": "1898240",
    "end": "1904080"
  },
  {
    "text": "requested an embargo so normally kind of the disclosure process you can see that from discovery",
    "start": "1904080",
    "end": "1911120"
  },
  {
    "text": "actually from disclosure to a fix is something that took significant",
    "start": "1911120",
    "end": "1917120"
  },
  {
    "text": "amount of time and if you think about it from a public",
    "start": "1917120",
    "end": "1922240"
  },
  {
    "text": "disclosure uh from from actually kubernetes releasing the patches",
    "start": "1922240",
    "end": "1927279"
  },
  {
    "text": "um it also takes time to apply those patches to your environment so at the end of the day if you think about",
    "start": "1927279",
    "end": "1934640"
  },
  {
    "text": "all of those cves it necessarily means that your systems were running",
    "start": "1934640",
    "end": "1939840"
  },
  {
    "text": "vulnerable for many many many months so effectively cves are almost kind of",
    "start": "1939840",
    "end": "1946880"
  },
  {
    "text": "or in some cases can be those postmodern fixes or remediation that we apply to",
    "start": "1946880",
    "end": "1953760"
  },
  {
    "text": "our system and our systems may have been exploited or abused by those cves if they are not",
    "start": "1953760",
    "end": "1962080"
  },
  {
    "text": "kind of disclosed or packed so there is a very wide time window that that",
    "start": "1962080",
    "end": "1967600"
  },
  {
    "text": "normally cves can be exploited by the systems and you really need to ask yourselves like what are the non",
    "start": "1967600",
    "end": "1975120"
  },
  {
    "text": "kubernetes native security controls that help you deal with uh figuring out for example",
    "start": "1975120",
    "end": "1982240"
  },
  {
    "text": "if those weaknesses are being exploited inside your environment so again going back to my uh",
    "start": "1982240",
    "end": "1990159"
  },
  {
    "text": "example here",
    "start": "1990159",
    "end": "1993120"
  },
  {
    "text": "if i am for example need to understand if someone is running with",
    "start": "1995279",
    "end": "2002559"
  },
  {
    "text": "capabilities that enables for example a port to send traffic into the network",
    "start": "2003200",
    "end": "2008559"
  },
  {
    "text": "so i can really go to my dashboard and build a profile that helped me analyze the cvs",
    "start": "2008559",
    "end": "2015440"
  },
  {
    "text": "so unlike opa for example that runs as an admission control here i can scan my existing",
    "start": "2015440",
    "end": "2023200"
  },
  {
    "text": "state of my cluster so whether this is something that actually went beyond my opa gatekeeper or even i",
    "start": "2023200",
    "end": "2029919"
  },
  {
    "text": "didn't have opi gatekeeper and i can drill down to specific pods that are running inside",
    "start": "2029919",
    "end": "2036880"
  },
  {
    "text": "the system and i can even beyond that i can really see for example",
    "start": "2036880",
    "end": "2042000"
  },
  {
    "text": "like which capabilities are being used by pods that are running inside my",
    "start": "2042000",
    "end": "2047279"
  },
  {
    "text": "cluster so for example this is the permission that",
    "start": "2047279",
    "end": "2055200"
  },
  {
    "text": "enables me to mount the network attack so bypassing the local host boundaries",
    "start": "2055200",
    "end": "2061118"
  },
  {
    "text": "or for example messing up with the ipv6 router advertisement so",
    "start": "2061119",
    "end": "2067440"
  },
  {
    "text": "this is an example where i can explicitly understand risk and blast radius and if i feel that this is something",
    "start": "2067440",
    "end": "2073919"
  },
  {
    "text": "that is by design and it's not exploitable i can really say okay",
    "start": "2073919",
    "end": "2079520"
  },
  {
    "text": "this is something i will understand i can exclude that from my scan results and i don't need to further dig in and",
    "start": "2079520",
    "end": "2087280"
  },
  {
    "text": "understand kind of the risk associated with that so again the ability to analyze our",
    "start": "2087280",
    "end": "2093200"
  },
  {
    "text": "configuration helps us to reduce dramatically the blast radius of our clusters",
    "start": "2093200",
    "end": "2101440"
  },
  {
    "text": "and environments in general so going back to the slides",
    "start": "2101440",
    "end": "2108320"
  },
  {
    "start": "2108000",
    "end": "2254000"
  },
  {
    "text": "so what really happened with the server side request forgery so let's track this because this is",
    "start": "2108800",
    "end": "2114960"
  },
  {
    "text": "something that actually i want to highlight something that is related to how we monitor the kubernetes api",
    "start": "2114960",
    "end": "2121359"
  },
  {
    "text": "server and what is the important behind kubernetes audit log so as we saw earlier the",
    "start": "2121359",
    "end": "2129200"
  },
  {
    "text": "weakness or the vulnerability is related to the fact that once we deploy storage classes from a",
    "start": "2129200",
    "end": "2134560"
  },
  {
    "text": "very specific kind which is glusterfest and and a couple of more whether using",
    "start": "2134560",
    "end": "2142079"
  },
  {
    "text": "this type of storage or not it's not really important um the kubernetes api server so an",
    "start": "2142079",
    "end": "2148240"
  },
  {
    "text": "attacker so think about me as a user typing keep control apply",
    "start": "2148240",
    "end": "2153920"
  },
  {
    "text": "a yaml file it contains this storage class it's getting deployed to the api server",
    "start": "2153920",
    "end": "2160240"
  },
  {
    "text": "the api server will turn this request to the cloud controller manager the",
    "start": "2160240",
    "end": "2165920"
  },
  {
    "text": "cloud glue layer of kubernetes and in a way if",
    "start": "2165920",
    "end": "2172000"
  },
  {
    "text": "i place in the rest url that we saw earlier um an attacker server that i can control",
    "start": "2172000",
    "end": "2180079"
  },
  {
    "text": "i can respond with http redirect which basically because of a weakness",
    "start": "2180079",
    "end": "2186880"
  },
  {
    "text": "that happens in the go http client and the way that the cloud controller manager implements",
    "start": "2186880",
    "end": "2194240"
  },
  {
    "text": "i can send an http redirect which will make the cloud controller manager make",
    "start": "2194240",
    "end": "2201920"
  },
  {
    "text": "a call of my discretion specifically if this is a managed kubernetes service i can call to the underlying cloud provider",
    "start": "2201920",
    "end": "2209440"
  },
  {
    "text": "perimeter so think about it you can perform http calls inside the manage kubernetes environment of",
    "start": "2209440",
    "end": "2216240"
  },
  {
    "text": "your eks gke and extract stuff from the metadata api server",
    "start": "2216240",
    "end": "2222800"
  },
  {
    "text": "or do other elements and the data that returns or some of it will be returned to the user that",
    "start": "2222800",
    "end": "2230720"
  },
  {
    "text": "actually performed those events if you really see kind of the",
    "start": "2230720",
    "end": "2236160"
  },
  {
    "text": "action that we see here we create resource of certain type we get events and in order to mount",
    "start": "2236160",
    "end": "2244880"
  },
  {
    "text": "an exploit we really need to kind of invoke those commands in a quite frequent manner which means",
    "start": "2244960",
    "end": "2251119"
  },
  {
    "text": "that if we monitor the kubernetes api server logs or the audit logs we can",
    "start": "2251119",
    "end": "2257680"
  },
  {
    "start": "2254000",
    "end": "2421000"
  },
  {
    "text": "really defer from those logs that actually something anomalous",
    "start": "2257680",
    "end": "2263040"
  },
  {
    "text": "happens in the system which brings me to the last topic i have for this uh webinar",
    "start": "2263040",
    "end": "2269520"
  },
  {
    "text": "so every kubernetes api server keeps an audit trail or an",
    "start": "2269520",
    "end": "2275839"
  },
  {
    "text": "audit log so think about it as like cloudtrail every api invocation made by human users like cubecontrol",
    "start": "2275839",
    "end": "2284240"
  },
  {
    "text": "or or even your cloud dashboard um is logged and",
    "start": "2284240",
    "end": "2290880"
  },
  {
    "text": "it's saved in normally into kind of persistent storage that external systems can actually stream",
    "start": "2290880",
    "end": "2298480"
  },
  {
    "text": "and analyze those streams and defer insights about the system",
    "start": "2298480",
    "end": "2303520"
  },
  {
    "text": "in terms of those logs so for example we can detect known and unknown",
    "start": "2303520",
    "end": "2310800"
  },
  {
    "text": "vulnerabilities in the kubernetes api server because of the way that the kubernetes",
    "start": "2310800",
    "end": "2316480"
  },
  {
    "text": "api server is being accessed or being or apis are being invoked",
    "start": "2316480",
    "end": "2322079"
  },
  {
    "text": "or for example if we are going back to the example of twitter and the social engineering if we",
    "start": "2322079",
    "end": "2327359"
  },
  {
    "text": "have users that someone breached into their laptops and now they are starting to perform those api",
    "start": "2327359",
    "end": "2335200"
  },
  {
    "text": "server calls using cubecontrol or directly or whatever or even from the",
    "start": "2335200",
    "end": "2340480"
  },
  {
    "text": "node itself we can really detect those anomalies because we are tracking",
    "start": "2340480",
    "end": "2346560"
  },
  {
    "text": "users and we are tracking how resources are being accessed and all of those moving parts is something",
    "start": "2346560",
    "end": "2352960"
  },
  {
    "text": "that the kubernetes audit log pretty much represents a gold mine from a security",
    "start": "2352960",
    "end": "2359079"
  },
  {
    "text": "perspective we can even detect our bug misconfiguration so for example",
    "start": "2359079",
    "end": "2365680"
  },
  {
    "text": "if we see a spike or an increase of permission denied after we deploy a new software version",
    "start": "2365680",
    "end": "2374160"
  },
  {
    "text": "one of the root causes for for that may be misconfigured or or not aligned",
    "start": "2374160",
    "end": "2381599"
  },
  {
    "text": "or our back policy is not aligned with the application",
    "start": "2381599",
    "end": "2386720"
  },
  {
    "text": "functionality um another actually good example that one can leverage as far as",
    "start": "2386720",
    "end": "2392720"
  },
  {
    "text": "the kubernetes audit log you can place rules that says for example if someone",
    "start": "2392720",
    "end": "2398560"
  },
  {
    "text": "exec into a pod um in a production cluster we really uh we can really send an alert to the",
    "start": "2398560",
    "end": "2405359"
  },
  {
    "text": "team so it really gives us the ability to both plug analysis uh and hunting for anomalous",
    "start": "2405359",
    "end": "2412480"
  },
  {
    "text": "behavior as well as placing policies that helps us kind of regulate how kubernetes cluster is being utilized",
    "start": "2412480",
    "end": "2420800"
  },
  {
    "text": "so when we kind of think about all of those use cases having something",
    "start": "2420800",
    "end": "2427920"
  },
  {
    "text": "that is more of kind of both policy driven and ai driven helps",
    "start": "2427920",
    "end": "2433040"
  },
  {
    "text": "us leverage the kubernetes audit log to detect the cv that is associated for",
    "start": "2433040",
    "end": "2439520"
  },
  {
    "text": "example with storage class so let's take that as an example if an attacker starts to",
    "start": "2439520",
    "end": "2444800"
  },
  {
    "text": "deploy storage class and create persistent volume claims",
    "start": "2444800",
    "end": "2450480"
  },
  {
    "text": "of this vulnerable storage class so an increase or or an unexpected",
    "start": "2450480",
    "end": "2456800"
  },
  {
    "text": "increase of those api invocations is something that threshold-based",
    "start": "2456800",
    "end": "2463440"
  },
  {
    "text": "approach can help us but the problem is that we really don't know beforehand",
    "start": "2463440",
    "end": "2468720"
  },
  {
    "text": "which are the vulnerable uh apis are there or how exploits are actually being exploited or",
    "start": "2468720",
    "end": "2475359"
  },
  {
    "text": "how vulnerabilities and weaknesses are being exploited by an attacker which means that having",
    "start": "2475359",
    "end": "2480800"
  },
  {
    "text": "something that is more of um adaptive that learns how",
    "start": "2480800",
    "end": "2486000"
  },
  {
    "text": "resources and users and service accounts activate the kubernetes apis is",
    "start": "2486000",
    "end": "2492160"
  },
  {
    "text": "something that can help us detect that so with that in mind let me show you an example of what",
    "start": "2492160",
    "end": "2500000"
  },
  {
    "start": "2494000",
    "end": "2618000"
  },
  {
    "text": "a system like that uh can perform so while the system loads",
    "start": "2500000",
    "end": "2506880"
  },
  {
    "text": "we can really see here an example of a timeline that tells us a story so i can zoom in",
    "start": "2507200",
    "end": "2513680"
  },
  {
    "text": "for example on a couple of assets i can investigate those specific users",
    "start": "2513680",
    "end": "2519680"
  },
  {
    "text": "but more importantly i can for example see that these specific users",
    "start": "2519680",
    "end": "2526800"
  },
  {
    "text": "which are unauthenticated users uh in the environment actually perform api access to the uh",
    "start": "2526800",
    "end": "2536160"
  },
  {
    "text": "kubernetes api server and got permission denied if i want to have a look on for example",
    "start": "2536160",
    "end": "2543839"
  },
  {
    "text": "which type of namespaces they were trying to access we can see that those assets actually",
    "start": "2543839",
    "end": "2551599"
  },
  {
    "text": "were able to access or trying to access all the namespaces in the environment if",
    "start": "2551599",
    "end": "2557280"
  },
  {
    "text": "you want to see for example the origin of those users i can pretty much",
    "start": "2557280",
    "end": "2563040"
  },
  {
    "text": "visualize those elements so at the end of the day the ability to understand for",
    "start": "2563040",
    "end": "2568400"
  },
  {
    "text": "example if we're taking again the example of the",
    "start": "2568400",
    "end": "2573520"
  },
  {
    "text": "cloud storage vulnerability we can for example see resource type",
    "start": "2573520",
    "end": "2580720"
  },
  {
    "text": "and we can see which resource types are being employed inside my environment so i",
    "start": "2580720",
    "end": "2587280"
  },
  {
    "text": "don't see here for example storage class so this is an indication that helps you understand that this some this is",
    "start": "2587280",
    "end": "2595359"
  },
  {
    "text": "this specific exploit was not applied into the system based on the",
    "start": "2595359",
    "end": "2601200"
  },
  {
    "text": "fact that we don't ever don't have a record of those um",
    "start": "2601200",
    "end": "2606720"
  },
  {
    "text": "storage class and pvc creation attempts so with that in mind i think it pretty",
    "start": "2606720",
    "end": "2613839"
  },
  {
    "text": "much wraps up the technical content i wanted to share and",
    "start": "2613839",
    "end": "2620000"
  },
  {
    "start": "2618000",
    "end": "2817000"
  },
  {
    "text": "i wanted to encourage you to whether you guys want to use some of our open source and open tools",
    "start": "2620000",
    "end": "2626480"
  },
  {
    "text": "on on github that would enable you to perform ci can",
    "start": "2626480",
    "end": "2633680"
  },
  {
    "text": "understand for example um analyzing your r buck or you want to take",
    "start": "2633680",
    "end": "2638800"
  },
  {
    "text": "um our cloud service for a spin and analyze your kubernetes clusters for cds or even",
    "start": "2638800",
    "end": "2645920"
  },
  {
    "text": "try kubernetes audit log analyzer which is also audit hit those links and we'd happy to",
    "start": "2645920",
    "end": "2653760"
  },
  {
    "text": "kind of uh take it for a deeper spin and with that in mind i think we can move into the q a part",
    "start": "2653760",
    "end": "2662400"
  },
  {
    "text": "awesome thanks so much for a great presentation um it looks like we have one question here",
    "start": "2662400",
    "end": "2667599"
  },
  {
    "text": "um it's from jindong and it says in the clusters",
    "start": "2667599",
    "end": "2674800"
  },
  {
    "text": "fs rest api example traffic to outside kubernetes should be controlled should be what was the last",
    "start": "2674800",
    "end": "2684000"
  },
  {
    "text": "yeah should it be controlled we so and then this is in the context",
    "start": "2684000",
    "end": "2691280"
  },
  {
    "text": "of the uh control plane vulnerability i believe so let me see hold on i think",
    "start": "2691280",
    "end": "2698560"
  },
  {
    "text": "they might be uh controlled yes yeah so so essentially",
    "start": "2698560",
    "end": "2705599"
  },
  {
    "text": "yes the general idea is that uh the control plane even in the managed kubernetes cloud uh",
    "start": "2705599",
    "end": "2713040"
  },
  {
    "text": "instance it should be controlled but going back to the beginning of this webinar",
    "start": "2713040",
    "end": "2720640"
  },
  {
    "text": "if we are provisioning our kubernetes cluster with a publicly facing api server so the",
    "start": "2720640",
    "end": "2728400"
  },
  {
    "text": "when you provision clusters you can actually do private clusters or you can do public clusters so if you",
    "start": "2728400",
    "end": "2735520"
  },
  {
    "text": "are using the managed kubernetes option with a public cluster the control plane can actually connect",
    "start": "2735520",
    "end": "2742240"
  },
  {
    "text": "from the cluster to the internet which means that an attacker can",
    "start": "2742240",
    "end": "2748000"
  },
  {
    "text": "can still manipulate uh a server that is running on the outside",
    "start": "2748000",
    "end": "2753280"
  },
  {
    "text": "and with those redirect that i showed earlier so it really boils down to how you provision the best practice",
    "start": "2753280",
    "end": "2760160"
  },
  {
    "text": "is provision private clusters that prevent the control plane from accessing",
    "start": "2760160",
    "end": "2765760"
  },
  {
    "text": "the outside world and the same goes for clusters that are running in private vpc",
    "start": "2765760",
    "end": "2774400"
  },
  {
    "text": "great okay okay folks another minute a reminder if you have a question feel free to drop it in the q",
    "start": "2774400",
    "end": "2780560"
  },
  {
    "text": "a box at the bottom of your screen give folks just a few moments here",
    "start": "2780560",
    "end": "2789760"
  },
  {
    "text": "okay well i think that is all the questions that we had for today uh thank you again gaby for a great",
    "start": "2789760",
    "end": "2795760"
  },
  {
    "text": "presentation um and thanks again to everyone for joining us um just a reminder that",
    "start": "2795760",
    "end": "2800800"
  },
  {
    "text": "the webinar recording and slides will be posted later today to the cncf website",
    "start": "2800800",
    "end": "2805839"
  },
  {
    "text": "uh we look forward to seeing you at a future cncf webinar and hopefully uh cubecon virtual here in a couple",
    "start": "2805839",
    "end": "2811440"
  },
  {
    "text": "weeks have a great day and thanks everyone thank you",
    "start": "2811440",
    "end": "2817839"
  }
]