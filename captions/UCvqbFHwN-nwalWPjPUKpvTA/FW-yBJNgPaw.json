[
  {
    "text": "all right hello everyone today we're",
    "start": "1880",
    "end": "5279"
  },
  {
    "text": "going to be talking about X registry and",
    "start": "5279",
    "end": "8080"
  },
  {
    "text": "Cloud events in general and mostly I",
    "start": "8080",
    "end": "10280"
  },
  {
    "text": "want to focus on how do we get to X",
    "start": "10280",
    "end": "12480"
  },
  {
    "text": "registry kind of um starting with Cloud",
    "start": "12480",
    "end": "16400"
  },
  {
    "text": "events moving through Cloud events SQL",
    "start": "16400",
    "end": "19359"
  },
  {
    "text": "which is another project the cloud",
    "start": "19359",
    "end": "20519"
  },
  {
    "text": "events Community came to and then",
    "start": "20519",
    "end": "22119"
  },
  {
    "text": "getting into X registry and trying to",
    "start": "22119",
    "end": "23920"
  },
  {
    "text": "understand why are we doing all this and",
    "start": "23920",
    "end": "25400"
  },
  {
    "text": "what are the key concepts of all these",
    "start": "25400",
    "end": "27359"
  },
  {
    "text": "different projects so to start I'm",
    "start": "27359",
    "end": "30119"
  },
  {
    "text": "Callum Murray I'm currently an",
    "start": "30119",
    "end": "31519"
  },
  {
    "text": "engineering science at the University of",
    "start": "31519",
    "end": "32840"
  },
  {
    "text": "Toronto I do research into language",
    "start": "32840",
    "end": "35320"
  },
  {
    "text": "models for software engineering tasks as",
    "start": "35320",
    "end": "37200"
  },
  {
    "text": "well as event driven in serverless",
    "start": "37200",
    "end": "38680"
  },
  {
    "text": "systems I'm also a k native Eventing",
    "start": "38680",
    "end": "40879"
  },
  {
    "text": "maintainer and ux lead and a cloud",
    "start": "40879",
    "end": "42879"
  },
  {
    "text": "events contributor where I focus mostly",
    "start": "42879",
    "end": "44879"
  },
  {
    "text": "on cloud events SQL and I'll be joining",
    "start": "44879",
    "end": "47360"
  },
  {
    "text": "Red Hat as a software engineer next",
    "start": "47360",
    "end": "49360"
  },
  {
    "text": "summer so to start let's start with quad",
    "start": "49360",
    "end": "52760"
  },
  {
    "text": "events so why do we have Cloud events um",
    "start": "52760",
    "end": "56079"
  },
  {
    "text": "I like to think of an analogy as you",
    "start": "56079",
    "end": "58800"
  },
  {
    "text": "know connecting different devices is if",
    "start": "58800",
    "end": "61000"
  },
  {
    "text": "they have the same type of port or",
    "start": "61000",
    "end": "62760"
  },
  {
    "text": "connection it's really easy you just",
    "start": "62760",
    "end": "64158"
  },
  {
    "text": "plug it",
    "start": "64159",
    "end": "65040"
  },
  {
    "text": "in but if they have different port types",
    "start": "65040",
    "end": "67720"
  },
  {
    "text": "and it doesn't match you actually need",
    "start": "67720",
    "end": "68840"
  },
  {
    "text": "to get another piece you need an adapter",
    "start": "68840",
    "end": "70479"
  },
  {
    "text": "of some kind to connect these and that's",
    "start": "70479",
    "end": "74159"
  },
  {
    "text": "really the problem that cloud events is",
    "start": "74159",
    "end": "75799"
  },
  {
    "text": "trying to approach because when we're",
    "start": "75799",
    "end": "78119"
  },
  {
    "text": "developing an app there's a lot of",
    "start": "78119",
    "end": "80479"
  },
  {
    "text": "different pieces that we need to put",
    "start": "80479",
    "end": "81840"
  },
  {
    "text": "together that often speak different",
    "start": "81840",
    "end": "83400"
  },
  {
    "text": "languages and a lot of our job is just",
    "start": "83400",
    "end": "85360"
  },
  {
    "text": "connecting these different Services they",
    "start": "85360",
    "end": "87040"
  },
  {
    "text": "might be like third party SAS offerings",
    "start": "87040",
    "end": "89640"
  },
  {
    "text": "or or even just other teams within the",
    "start": "89640",
    "end": "91280"
  },
  {
    "text": "same company and we want to make sure",
    "start": "91280",
    "end": "93200"
  },
  {
    "text": "that they're all able to talk to each",
    "start": "93200",
    "end": "94560"
  },
  {
    "text": "other as easily as",
    "start": "94560",
    "end": "96520"
  },
  {
    "text": "possible so it's an example I might have",
    "start": "96520",
    "end": "99240"
  },
  {
    "text": "two cloud services and the first one",
    "start": "99240",
    "end": "101000"
  },
  {
    "text": "wants to send you know just hello world",
    "start": "101000",
    "end": "103280"
  },
  {
    "text": "into the second",
    "start": "103280",
    "end": "104719"
  },
  {
    "text": "one",
    "start": "104719",
    "end": "106439"
  },
  {
    "text": "and that's all easy if they're in the",
    "start": "106439",
    "end": "108520"
  },
  {
    "text": "same protocol but what if the first one",
    "start": "108520",
    "end": "110520"
  },
  {
    "text": "speaks mqtt and the second one wants to",
    "start": "110520",
    "end": "112439"
  },
  {
    "text": "receive Kafka now I've got a bit of a",
    "start": "112439",
    "end": "116240"
  },
  {
    "text": "problem and so often times you'll see",
    "start": "116240",
    "end": "118640"
  },
  {
    "text": "people um basically building these boxes",
    "start": "118640",
    "end": "121960"
  },
  {
    "text": "like on the left with the producer so",
    "start": "121960",
    "end": "123360"
  },
  {
    "text": "you have your business logic in green",
    "start": "123360",
    "end": "125439"
  },
  {
    "text": "and then you've got some kind of glue",
    "start": "125439",
    "end": "126600"
  },
  {
    "text": "that turns that data you have into mqtt",
    "start": "126600",
    "end": "130239"
  },
  {
    "text": "or maybe converting your mqt data into a",
    "start": "130239",
    "end": "133560"
  },
  {
    "text": "delivery protocol of some kind in this",
    "start": "133560",
    "end": "135480"
  },
  {
    "text": "case CFA and then on the consumer side",
    "start": "135480",
    "end": "138080"
  },
  {
    "text": "you still have more custom glue",
    "start": "138080",
    "end": "140239"
  },
  {
    "text": "translating Kafka into something you can",
    "start": "140239",
    "end": "141760"
  },
  {
    "text": "speak and then you have all your",
    "start": "141760",
    "end": "143319"
  },
  {
    "text": "business logic and green which actually",
    "start": "143319",
    "end": "144599"
  },
  {
    "text": "handles data so there's a lot of Like",
    "start": "144599",
    "end": "146760"
  },
  {
    "text": "Glue here that we're writing over and",
    "start": "146760",
    "end": "148760"
  },
  {
    "text": "over again that we don't NE necessarily",
    "start": "148760",
    "end": "150360"
  },
  {
    "text": "need and that isn't providing any",
    "start": "150360",
    "end": "152080"
  },
  {
    "text": "business value and we need to do this",
    "start": "152080",
    "end": "154319"
  },
  {
    "text": "for every different protocol we're",
    "start": "154319",
    "end": "155760"
  },
  {
    "text": "interacting with and this gets worse",
    "start": "155760",
    "end": "158760"
  },
  {
    "text": "when we have a lot of services",
    "start": "158760",
    "end": "160360"
  },
  {
    "text": "especially if we want to have some kind",
    "start": "160360",
    "end": "161440"
  },
  {
    "text": "of roading middleware in the middle if I",
    "start": "161440",
    "end": "163560"
  },
  {
    "text": "wanted to be able to do different things",
    "start": "163560",
    "end": "165280"
  },
  {
    "text": "like filtering the data to different",
    "start": "165280",
    "end": "167200"
  },
  {
    "text": "destinations and I'm getting different",
    "start": "167200",
    "end": "169040"
  },
  {
    "text": "protocols and I have to speak different",
    "start": "169040",
    "end": "170760"
  },
  {
    "text": "protocols on the way out this is really",
    "start": "170760",
    "end": "173200"
  },
  {
    "text": "expensive to implement and really",
    "start": "173200",
    "end": "175319"
  },
  {
    "text": "hard and so this is where Cloud events",
    "start": "175319",
    "end": "177440"
  },
  {
    "text": "come in it's basically a specification",
    "start": "177440",
    "end": "179560"
  },
  {
    "text": "for describing the metadata in a common",
    "start": "179560",
    "end": "182879"
  },
  {
    "text": "way and then they have different ways to",
    "start": "182879",
    "end": "185599"
  },
  {
    "text": "bind this metadata onto all these",
    "start": "185599",
    "end": "188200"
  },
  {
    "text": "different protocols and so all you need",
    "start": "188200",
    "end": "190159"
  },
  {
    "text": "to do is pick which protocol you're",
    "start": "190159",
    "end": "192120"
  },
  {
    "text": "sending into and Cloud events has code",
    "start": "192120",
    "end": "194599"
  },
  {
    "text": "that's able to map your data into that",
    "start": "194599",
    "end": "197040"
  },
  {
    "text": "protocol and so whereas before we have",
    "start": "197040",
    "end": "199239"
  },
  {
    "text": "this custom glue and yellow with Cloud",
    "start": "199239",
    "end": "202120"
  },
  {
    "text": "events we just call the cloud events",
    "start": "202120",
    "end": "203799"
  },
  {
    "text": "library on every side and our code only",
    "start": "203799",
    "end": "205680"
  },
  {
    "text": "ever has to interact with Cloud events",
    "start": "205680",
    "end": "207680"
  },
  {
    "text": "and our business logic produces Cloud",
    "start": "207680",
    "end": "210239"
  },
  {
    "text": "events and consumes Cloud events and",
    "start": "210239",
    "end": "212599"
  },
  {
    "text": "then we just add a little bit from a",
    "start": "212599",
    "end": "214120"
  },
  {
    "text": "cloud events library to say hey send",
    "start": "214120",
    "end": "215360"
  },
  {
    "text": "this into Kafka or consume the S",
    "start": "215360",
    "end": "218000"
  },
  {
    "text": "ofns so yeah in go you know we have a",
    "start": "218000",
    "end": "221239"
  },
  {
    "text": "handle function that just takes in a",
    "start": "221239",
    "end": "222360"
  },
  {
    "text": "cloud event or in Java we might have an",
    "start": "222360",
    "end": "224560"
  },
  {
    "text": "event consumer that has a handle event",
    "start": "224560",
    "end": "226519"
  },
  {
    "text": "method which again takes into Cloud",
    "start": "226519",
    "end": "228000"
  },
  {
    "text": "event and so I don't need to worry about",
    "start": "228000",
    "end": "230200"
  },
  {
    "text": "the different protocols in my code",
    "start": "230200",
    "end": "232840"
  },
  {
    "text": "anymore and then as I was saying when I",
    "start": "232840",
    "end": "234799"
  },
  {
    "text": "want to send or receive the event this",
    "start": "234799",
    "end": "236200"
  },
  {
    "text": "is just some go code and you can see",
    "start": "236200",
    "end": "238840"
  },
  {
    "text": "there's um you make an HTTP client and",
    "start": "238840",
    "end": "242239"
  },
  {
    "text": "then you give it a Target saying like",
    "start": "242239",
    "end": "243840"
  },
  {
    "text": "Local Host 8080 and then I just send the",
    "start": "243840",
    "end": "245720"
  },
  {
    "text": "event and so that's not very much work",
    "start": "245720",
    "end": "248439"
  },
  {
    "text": "to send in HTTP or if I wanted to",
    "start": "248439",
    "end": "251000"
  },
  {
    "text": "receive a gats I'd make a new gats",
    "start": "251000",
    "end": "253519"
  },
  {
    "text": "consumer um there's a bit of like air",
    "start": "253519",
    "end": "255439"
  },
  {
    "text": "handling and stuff and then I just start",
    "start": "255439",
    "end": "257600"
  },
  {
    "text": "a receiver which has a function which",
    "start": "257600",
    "end": "259320"
  },
  {
    "text": "takes in the cloud events that are taken",
    "start": "259320",
    "end": "261519"
  },
  {
    "text": "out of nats and so I don't need to",
    "start": "261519",
    "end": "263000"
  },
  {
    "text": "really do that much work around these",
    "start": "263000",
    "end": "264720"
  },
  {
    "text": "protocols anymore and I just can speak",
    "start": "264720",
    "end": "266840"
  },
  {
    "text": "the same language everywhere and in",
    "start": "266840",
    "end": "269240"
  },
  {
    "text": "different program programming",
    "start": "269240",
    "end": "270720"
  },
  {
    "text": "languages so with Cloud events that",
    "start": "270720",
    "end": "273360"
  },
  {
    "text": "routing again it's all Cloud events in",
    "start": "273360",
    "end": "275240"
  },
  {
    "text": "the middle so it's easy I don't need to",
    "start": "275240",
    "end": "277039"
  },
  {
    "text": "worry about translating all these",
    "start": "277039",
    "end": "278080"
  },
  {
    "text": "protocols anymore I just have to speak",
    "start": "278080",
    "end": "279680"
  },
  {
    "text": "Cloud",
    "start": "279680",
    "end": "281960"
  },
  {
    "text": "events so the way that cloud events does",
    "start": "282199",
    "end": "284560"
  },
  {
    "text": "this is that events have a set of what",
    "start": "284560",
    "end": "288039"
  },
  {
    "text": "we call context attributes which",
    "start": "288039",
    "end": "289919"
  },
  {
    "text": "describe the metadata um they're",
    "start": "289919",
    "end": "292240"
  },
  {
    "text": "basically like typed headers for",
    "start": "292240",
    "end": "294199"
  },
  {
    "text": "HTTP um and there's four that are",
    "start": "294199",
    "end": "296560"
  },
  {
    "text": "required you need to say which",
    "start": "296560",
    "end": "297800"
  },
  {
    "text": "specification of cloud events you're",
    "start": "297800",
    "end": "299120"
  },
  {
    "text": "using that makes sense um it's how the",
    "start": "299120",
    "end": "301880"
  },
  {
    "text": "libraries are able to handle the thing",
    "start": "301880",
    "end": "303800"
  },
  {
    "text": "then you need to give an ID to the event",
    "start": "303800",
    "end": "305639"
  },
  {
    "text": "a source and a type um and then the cool",
    "start": "305639",
    "end": "309080"
  },
  {
    "text": "thing is you can add any number of",
    "start": "309080",
    "end": "310440"
  },
  {
    "text": "optional like user defined attributes",
    "start": "310440",
    "end": "312400"
  },
  {
    "text": "and so you can extend this to have",
    "start": "312400",
    "end": "313759"
  },
  {
    "text": "whatever information you care about and",
    "start": "313759",
    "end": "315960"
  },
  {
    "text": "so commonly you might copy a couple",
    "start": "315960",
    "end": "317560"
  },
  {
    "text": "things out of your payload into the",
    "start": "317560",
    "end": "319840"
  },
  {
    "text": "context attributes which you might want",
    "start": "319840",
    "end": "321240"
  },
  {
    "text": "to use for",
    "start": "321240",
    "end": "323638"
  },
  {
    "text": "routing and Beyond just defining these",
    "start": "324520",
    "end": "327360"
  },
  {
    "text": "attributes as I was mentioning before it",
    "start": "327360",
    "end": "328840"
  },
  {
    "text": "defines how the should be serialized and",
    "start": "328840",
    "end": "330680"
  },
  {
    "text": "deserialized into different protocols",
    "start": "330680",
    "end": "333400"
  },
  {
    "text": "and this is really where that um",
    "start": "333400",
    "end": "336240"
  },
  {
    "text": "reduction in complexity in your code",
    "start": "336240",
    "end": "337919"
  },
  {
    "text": "comes from so this is all handled by",
    "start": "337919",
    "end": "339319"
  },
  {
    "text": "Cloud events in a consistent way and",
    "start": "339319",
    "end": "341520"
  },
  {
    "text": "there's two ways that these encodings",
    "start": "341520",
    "end": "343680"
  },
  {
    "text": "can happen for each protocol there's a",
    "start": "343680",
    "end": "345000"
  },
  {
    "text": "binary encoding where all of the",
    "start": "345000",
    "end": "347199"
  },
  {
    "text": "attributes go into the headers and the",
    "start": "347199",
    "end": "349000"
  },
  {
    "text": "data is the payload or there's a",
    "start": "349000",
    "end": "351680"
  },
  {
    "text": "structured encoding where you just have",
    "start": "351680",
    "end": "352960"
  },
  {
    "text": "a big Json payload and all of the",
    "start": "352960",
    "end": "354960"
  },
  {
    "text": "attributes are Json keys and values and",
    "start": "354960",
    "end": "357400"
  },
  {
    "text": "then all of your data is in a data key",
    "start": "357400",
    "end": "360479"
  },
  {
    "text": "so for example in",
    "start": "360479",
    "end": "362160"
  },
  {
    "text": "HTTP an event could serialize on the",
    "start": "362160",
    "end": "364600"
  },
  {
    "text": "left in in binary and we can see we've",
    "start": "364600",
    "end": "366919"
  },
  {
    "text": "got c-pc version or C- type and all",
    "start": "366919",
    "end": "369560"
  },
  {
    "text": "these different Cloud events attributes",
    "start": "369560",
    "end": "371080"
  },
  {
    "text": "as headers and then in the body of that",
    "start": "371080",
    "end": "373960"
  },
  {
    "text": "HTTP request is all the data and then if",
    "start": "373960",
    "end": "376840"
  },
  {
    "text": "I change that into structured the spec",
    "start": "376840",
    "end": "379599"
  },
  {
    "text": "version and the type and all the other",
    "start": "379599",
    "end": "381440"
  },
  {
    "text": "attributes go inside the Json of the",
    "start": "381440",
    "end": "384199"
  },
  {
    "text": "request like in the request body and",
    "start": "384199",
    "end": "386199"
  },
  {
    "text": "there's a data key now which has the",
    "start": "386199",
    "end": "387840"
  },
  {
    "text": "application dat data Ed Ed within",
    "start": "387840",
    "end": "390680"
  },
  {
    "text": "it so there's there's trade-offs to both",
    "start": "390680",
    "end": "393080"
  },
  {
    "text": "approaches but generally speaking binary",
    "start": "393080",
    "end": "395759"
  },
  {
    "text": "is probably what you want to go with",
    "start": "395759",
    "end": "397360"
  },
  {
    "text": "it's also backwards compatible if you",
    "start": "397360",
    "end": "399039"
  },
  {
    "text": "have a payload and you want to add Cloud",
    "start": "399039",
    "end": "402080"
  },
  {
    "text": "events to it you just have to add a",
    "start": "402080",
    "end": "403120"
  },
  {
    "text": "couple headers you don't need to change",
    "start": "403120",
    "end": "404680"
  },
  {
    "text": "anything else about your request same",
    "start": "404680",
    "end": "407520"
  },
  {
    "text": "with Kafka in Kafka on the left we have",
    "start": "407520",
    "end": "410840"
  },
  {
    "text": "the binary version we see we've got some",
    "start": "410840",
    "end": "412639"
  },
  {
    "text": "headers um and then the data is just in",
    "start": "412639",
    "end": "414599"
  },
  {
    "text": "the value for that um CFA record and",
    "start": "414599",
    "end": "416919"
  },
  {
    "text": "then on the right we have the structured",
    "start": "416919",
    "end": "418639"
  },
  {
    "text": "CFA where it's all in record and here",
    "start": "418639",
    "end": "421240"
  },
  {
    "text": "again if you want to adopt Cloud events",
    "start": "421240",
    "end": "423720"
  },
  {
    "text": "into an existing cfus system you just",
    "start": "423720",
    "end": "425160"
  },
  {
    "text": "have to add some headers to your records",
    "start": "425160",
    "end": "426800"
  },
  {
    "text": "you don't have to change anything about",
    "start": "426800",
    "end": "428160"
  },
  {
    "text": "the rest of how you structure your data",
    "start": "428160",
    "end": "431000"
  },
  {
    "text": "um there are use cases for structured",
    "start": "431000",
    "end": "432879"
  },
  {
    "text": "for example if you wanted to talk with",
    "start": "432879",
    "end": "434639"
  },
  {
    "text": "AWS they normally require structured",
    "start": "434639",
    "end": "437280"
  },
  {
    "text": "Cloud events um as a rule um the nice",
    "start": "437280",
    "end": "440319"
  },
  {
    "text": "thing for you is the choosing between",
    "start": "440319",
    "end": "442479"
  },
  {
    "text": "binary and structured is just uh setting",
    "start": "442479",
    "end": "444720"
  },
  {
    "text": "in the library you don't have to really",
    "start": "444720",
    "end": "445879"
  },
  {
    "text": "worry too much about it but in General",
    "start": "445879",
    "end": "449199"
  },
  {
    "text": "trying default to Binary where you",
    "start": "449199",
    "end": "451599"
  },
  {
    "text": "can so one of the things that comes out",
    "start": "451599",
    "end": "453800"
  },
  {
    "text": "of this consistent metadata across all",
    "start": "453800",
    "end": "456759"
  },
  {
    "text": "of our events is we can probably query",
    "start": "456759",
    "end": "460440"
  },
  {
    "text": "information out of them now that this",
    "start": "460440",
    "end": "461840"
  },
  {
    "text": "they all have the same consistent",
    "start": "461840",
    "end": "463000"
  },
  {
    "text": "metadata and there's a we know where it",
    "start": "463000",
    "end": "464440"
  },
  {
    "text": "is and what it is and so one of the",
    "start": "464440",
    "end": "466840"
  },
  {
    "text": "things we were wondering in the cloud",
    "start": "466840",
    "end": "467800"
  },
  {
    "text": "events Community",
    "start": "467800",
    "end": "469520"
  },
  {
    "text": "is what's the best way to query",
    "start": "469520",
    "end": "471520"
  },
  {
    "text": "information of these events if they all",
    "start": "471520",
    "end": "473000"
  },
  {
    "text": "have this consistent metadata and what",
    "start": "473000",
    "end": "474720"
  },
  {
    "text": "we came up with is cloud events",
    "start": "474720",
    "end": "477599"
  },
  {
    "text": "SQL um and so I want to talk a little",
    "start": "477599",
    "end": "479280"
  },
  {
    "text": "bit about the why and how it",
    "start": "479280",
    "end": "483039"
  },
  {
    "text": "works so um the why is pretty simple",
    "start": "483039",
    "end": "486840"
  },
  {
    "text": "it's just you",
    "start": "486840",
    "end": "489080"
  },
  {
    "text": "have um you have a whole bunch of data",
    "start": "489080",
    "end": "491720"
  },
  {
    "text": "going in a system and you have you're",
    "start": "491720",
    "end": "493840"
  },
  {
    "text": "consistently describing it and so you",
    "start": "493840",
    "end": "495159"
  },
  {
    "text": "want to be able to ask questions about",
    "start": "495159",
    "end": "496599"
  },
  {
    "text": "it and you want to be able to um extract",
    "start": "496599",
    "end": "500639"
  },
  {
    "text": "some data from it and we want to be able",
    "start": "500639",
    "end": "502120"
  },
  {
    "text": "to do it in a language independent way",
    "start": "502120",
    "end": "503560"
  },
  {
    "text": "so you don't have we don't want you have",
    "start": "503560",
    "end": "504560"
  },
  {
    "text": "to write it once for go and once for",
    "start": "504560",
    "end": "506199"
  },
  {
    "text": "Java depending on how you're processing",
    "start": "506199",
    "end": "508120"
  },
  {
    "text": "it and so we want to make a",
    "start": "508120",
    "end": "510159"
  },
  {
    "text": "specification and a runtime where you",
    "start": "510159",
    "end": "512200"
  },
  {
    "text": "can lean on what you're used to when you",
    "start": "512200",
    "end": "514039"
  },
  {
    "text": "write SQL to extract this information",
    "start": "514039",
    "end": "517080"
  },
  {
    "text": "and so in June 2024 Cloud events",
    "start": "517080",
    "end": "519039"
  },
  {
    "text": "released Cloud events SQL version one um",
    "start": "519039",
    "end": "522440"
  },
  {
    "text": "and it's just a a simple language it's",
    "start": "522440",
    "end": "524519"
  },
  {
    "text": "not even turn in complete that allows",
    "start": "524519",
    "end": "526440"
  },
  {
    "text": "for computing events values and matching",
    "start": "526440",
    "end": "529200"
  },
  {
    "text": "attributes from the con like the cloud",
    "start": "529200",
    "end": "531680"
  },
  {
    "text": "event context attributes and you can",
    "start": "531680",
    "end": "533800"
  },
  {
    "text": "build pretty complex expressions and it",
    "start": "533800",
    "end": "535399"
  },
  {
    "text": "really leans on the syntax of SQL wear",
    "start": "535399",
    "end": "538120"
  },
  {
    "text": "Clauses that's where the cloud events",
    "start": "538120",
    "end": "540040"
  },
  {
    "text": "SQL comes from um and one of the",
    "start": "540040",
    "end": "543279"
  },
  {
    "text": "interesting things about the language",
    "start": "543279",
    "end": "544600"
  },
  {
    "text": "that was a design decision was made is",
    "start": "544600",
    "end": "546360"
  },
  {
    "text": "that each expression gives you a tuple",
    "start": "546360",
    "end": "548320"
  },
  {
    "text": "of the result and any errors that were",
    "start": "548320",
    "end": "550880"
  },
  {
    "text": "encountered along the way of the",
    "start": "550880",
    "end": "552440"
  },
  {
    "text": "computation and so even if you get",
    "start": "552440",
    "end": "554320"
  },
  {
    "text": "errors you still get a result out and",
    "start": "554320",
    "end": "555760"
  },
  {
    "text": "maybe if you look at those errors you",
    "start": "555760",
    "end": "557480"
  },
  {
    "text": "still are okay with the result or maybe",
    "start": "557480",
    "end": "559200"
  },
  {
    "text": "not and so that's a decision you get to",
    "start": "559200",
    "end": "560600"
  },
  {
    "text": "make",
    "start": "560600",
    "end": "561440"
  },
  {
    "text": "yourself um and you can also optionally",
    "start": "561440",
    "end": "564279"
  },
  {
    "text": "decide hey fail as soon as you get the",
    "start": "564279",
    "end": "565920"
  },
  {
    "text": "first error and don't keep going and",
    "start": "565920",
    "end": "567760"
  },
  {
    "text": "then it fails a bit faster for you in",
    "start": "567760",
    "end": "569560"
  },
  {
    "text": "some use",
    "start": "569560",
    "end": "570880"
  },
  {
    "text": "cases so if I wanted to access an event",
    "start": "570880",
    "end": "573440"
  },
  {
    "text": "attribute for example an ID in Cloud",
    "start": "573440",
    "end": "575320"
  },
  {
    "text": "events SQL I only have to write ID and I",
    "start": "575320",
    "end": "577040"
  },
  {
    "text": "get that attribute out of the cloud",
    "start": "577040",
    "end": "578959"
  },
  {
    "text": "event so this this is really simple and",
    "start": "578959",
    "end": "582440"
  },
  {
    "text": "I can start going much more complicated",
    "start": "582440",
    "end": "584959"
  },
  {
    "text": "for example if I want to check if an",
    "start": "584959",
    "end": "586920"
  },
  {
    "text": "attribute exists in the cloud event",
    "start": "586920",
    "end": "589440"
  },
  {
    "text": "there's this keyword exists which you",
    "start": "589440",
    "end": "591160"
  },
  {
    "text": "can use which just checks if that's",
    "start": "591160",
    "end": "593000"
  },
  {
    "text": "there um if you just want to write this",
    "start": "593000",
    "end": "595920"
  },
  {
    "text": "another little trick",
    "start": "595920",
    "end": "597519"
  },
  {
    "text": "is um if you're just checking if it",
    "start": "597519",
    "end": "599959"
  },
  {
    "text": "exists because you always get a result",
    "start": "599959",
    "end": "602040"
  },
  {
    "text": "out you could just write subject and see",
    "start": "602040",
    "end": "604560"
  },
  {
    "text": "if you get an error and if you got an",
    "start": "604560",
    "end": "606600"
  },
  {
    "text": "error that means it's not there but",
    "start": "606600",
    "end": "608880"
  },
  {
    "text": "maybe in a complex expression you want",
    "start": "608880",
    "end": "610800"
  },
  {
    "text": "to check if it exists or you want to",
    "start": "610800",
    "end": "612279"
  },
  {
    "text": "have simpler error handling and so you",
    "start": "612279",
    "end": "614200"
  },
  {
    "text": "want to use the exist",
    "start": "614200",
    "end": "615760"
  },
  {
    "text": "keyword or you can do comparisons so I",
    "start": "615760",
    "end": "618160"
  },
  {
    "text": "can check if first name is equal to Jane",
    "start": "618160",
    "end": "620120"
  },
  {
    "text": "or any other string or comparison I",
    "start": "620120",
    "end": "622800"
  },
  {
    "text": "might care about",
    "start": "622800",
    "end": "624920"
  },
  {
    "text": "here and then going beyond that I can",
    "start": "624920",
    "end": "626839"
  },
  {
    "text": "start chaining them with Boolean",
    "start": "626839",
    "end": "628000"
  },
  {
    "text": "operations of and and and or and this is",
    "start": "628000",
    "end": "631519"
  },
  {
    "text": "where we start to get into being able to",
    "start": "631519",
    "end": "632959"
  },
  {
    "text": "write really complex questions about our",
    "start": "632959",
    "end": "635519"
  },
  {
    "text": "events that are streaming through our",
    "start": "635519",
    "end": "638279"
  },
  {
    "text": "system and going beyond that we can",
    "start": "638279",
    "end": "640120"
  },
  {
    "text": "start nesting them and so this lets us",
    "start": "640120",
    "end": "643079"
  },
  {
    "text": "set kind of the Precedence and what's",
    "start": "643079",
    "end": "645480"
  },
  {
    "text": "more important in these",
    "start": "645480",
    "end": "648200"
  },
  {
    "text": "expressions and if you want to do",
    "start": "648200",
    "end": "650399"
  },
  {
    "text": "fancier matching we also support the",
    "start": "650399",
    "end": "652200"
  },
  {
    "text": "like expression you've seen in SQL where",
    "start": "652200",
    "end": "654320"
  },
  {
    "text": "you can have wild card characters and so",
    "start": "654320",
    "end": "657839"
  },
  {
    "text": "with all of these different types of",
    "start": "657839",
    "end": "658959"
  },
  {
    "text": "match you're able to really represent",
    "start": "658959",
    "end": "661320"
  },
  {
    "text": "hope at least we hope complex questions",
    "start": "661320",
    "end": "664279"
  },
  {
    "text": "about the events that are going through",
    "start": "664279",
    "end": "665399"
  },
  {
    "text": "your",
    "start": "665399",
    "end": "666800"
  },
  {
    "text": "system beyond that there's built-in",
    "start": "666800",
    "end": "668880"
  },
  {
    "text": "function calls I picked a couple there's",
    "start": "668880",
    "end": "671120"
  },
  {
    "text": "about 20 or 30 built-in functions so you",
    "start": "671120",
    "end": "674000"
  },
  {
    "text": "can check the length of a string you can",
    "start": "674000",
    "end": "676480"
  },
  {
    "text": "concatenate multiple strings you can",
    "start": "676480",
    "end": "679120"
  },
  {
    "text": "take the left portion of a string you",
    "start": "679120",
    "end": "681560"
  },
  {
    "text": "can take a",
    "start": "681560",
    "end": "682519"
  },
  {
    "text": "substring and one of the cool things is",
    "start": "682519",
    "end": "684720"
  },
  {
    "text": "there's type conversion between all the",
    "start": "684720",
    "end": "685920"
  },
  {
    "text": "types so if you have a cloud of an",
    "start": "685920",
    "end": "687639"
  },
  {
    "text": "attribute that isn't a string you can",
    "start": "687639",
    "end": "688959"
  },
  {
    "text": "just",
    "start": "688959",
    "end": "689800"
  },
  {
    "text": "concatenate it anyways and it'll get",
    "start": "689800",
    "end": "691120"
  },
  {
    "text": "converted to a",
    "start": "691120",
    "end": "692320"
  },
  {
    "text": "string um just make sure you check how",
    "start": "692320",
    "end": "695480"
  },
  {
    "text": "that conversion works for your different",
    "start": "695480",
    "end": "696760"
  },
  {
    "text": "types because you want to understand",
    "start": "696760",
    "end": "698760"
  },
  {
    "text": "what you're doing in the expression",
    "start": "698760",
    "end": "701200"
  },
  {
    "text": "beyond that if you don't like the",
    "start": "701200",
    "end": "702279"
  },
  {
    "text": "built-in functions the SQL engine",
    "start": "702279",
    "end": "704120"
  },
  {
    "text": "actually supports you defining your own",
    "start": "704120",
    "end": "706000"
  },
  {
    "text": "built-in functions that you can then use",
    "start": "706000",
    "end": "708160"
  },
  {
    "text": "in your Expressions just as you would",
    "start": "708160",
    "end": "709880"
  },
  {
    "text": "any other function and you these are",
    "start": "709880",
    "end": "712440"
  },
  {
    "text": "typed so you can say hey this value",
    "start": "712440",
    "end": "714000"
  },
  {
    "text": "needs to be a string or this value needs",
    "start": "714000",
    "end": "715279"
  },
  {
    "text": "to be an integer and Cloud events SQL",
    "start": "715279",
    "end": "716760"
  },
  {
    "text": "will handle all the type conversions for",
    "start": "716760",
    "end": "718240"
  },
  {
    "text": "you and then your code just works with",
    "start": "718240",
    "end": "719880"
  },
  {
    "text": "whatever types you said it should",
    "start": "719880",
    "end": "723600"
  },
  {
    "text": "accept and so one of the best use cases",
    "start": "723600",
    "end": "725880"
  },
  {
    "text": "for this is actually for event filtering",
    "start": "725880",
    "end": "728040"
  },
  {
    "text": "so in the K native project they've",
    "start": "728040",
    "end": "730040"
  },
  {
    "text": "adopted Cloud events SQL inside the K",
    "start": "730040",
    "end": "733040"
  },
  {
    "text": "native Brokers for filtering of the data",
    "start": "733040",
    "end": "735680"
  },
  {
    "text": "and so you're able to now Define on",
    "start": "735680",
    "end": "738160"
  },
  {
    "text": "these triggers which basically a trigger",
    "start": "738160",
    "end": "740480"
  },
  {
    "text": "connects the broker to some destination",
    "start": "740480",
    "end": "743600"
  },
  {
    "text": "that cares about events and when you",
    "start": "743600",
    "end": "745519"
  },
  {
    "text": "write the trigger if you look here in",
    "start": "745519",
    "end": "747000"
  },
  {
    "text": "the filters in the middle there's CES",
    "start": "747000",
    "end": "749199"
  },
  {
    "text": "SQL and so you can write any complex SQL",
    "start": "749199",
    "end": "752199"
  },
  {
    "text": "expression you care about to determine",
    "start": "752199",
    "end": "754320"
  },
  {
    "text": "what data should go to your event",
    "start": "754320",
    "end": "756560"
  },
  {
    "text": "consumer this is kind of the main use",
    "start": "756560",
    "end": "759000"
  },
  {
    "text": "case we see for this Cloud events SQL so",
    "start": "759000",
    "end": "761000"
  },
  {
    "text": "far and it lets you write filters for",
    "start": "761000",
    "end": "764120"
  },
  {
    "text": "what data should go through you could",
    "start": "764120",
    "end": "765800"
  },
  {
    "text": "also use it for extracting data from",
    "start": "765800",
    "end": "768199"
  },
  {
    "text": "events or combining data from a cloud",
    "start": "768199",
    "end": "771120"
  },
  {
    "text": "event and putting it into another",
    "start": "771120",
    "end": "772560"
  },
  {
    "text": "attribute but the best use case we can",
    "start": "772560",
    "end": "775639"
  },
  {
    "text": "think of it so far and where we've seen",
    "start": "775639",
    "end": "777000"
  },
  {
    "text": "people using it has been for filtering",
    "start": "777000",
    "end": "778720"
  },
  {
    "text": "if you have other use cases for cloud",
    "start": "778720",
    "end": "780279"
  },
  {
    "text": "events SQL please talk to us open an",
    "start": "780279",
    "end": "782120"
  },
  {
    "text": "issue on GitHub or join the cncf slack",
    "start": "782120",
    "end": "785199"
  },
  {
    "text": "um because we'd love to hear about other",
    "start": "785199",
    "end": "786279"
  },
  {
    "text": "use cases and see if there's anything we",
    "start": "786279",
    "end": "787760"
  },
  {
    "text": "can add to support them but so far it's",
    "start": "787760",
    "end": "790320"
  },
  {
    "text": "been mostly designed with filtering in",
    "start": "790320",
    "end": "793839"
  },
  {
    "text": "mind but there's a couple questions that",
    "start": "793839",
    "end": "796160"
  },
  {
    "text": "comes when I'm writing these filters to",
    "start": "796160",
    "end": "798079"
  },
  {
    "text": "try and get the data to the right place",
    "start": "798079",
    "end": "800720"
  },
  {
    "text": "for example how do I know which",
    "start": "800720",
    "end": "802279"
  },
  {
    "text": "attributes are actually existing on",
    "start": "802279",
    "end": "804399"
  },
  {
    "text": "events in my system I don't want to have",
    "start": "804399",
    "end": "806560"
  },
  {
    "text": "to always use the exists keyword to",
    "start": "806560",
    "end": "808160"
  },
  {
    "text": "check if it's there",
    "start": "808160",
    "end": "810600"
  },
  {
    "text": "even if I know that attributes there how",
    "start": "810600",
    "end": "812639"
  },
  {
    "text": "do I know what kind of values it can",
    "start": "812639",
    "end": "814399"
  },
  {
    "text": "have if I don't know what values they'll",
    "start": "814399",
    "end": "816600"
  },
  {
    "text": "take how do do I write any kind of",
    "start": "816600",
    "end": "818240"
  },
  {
    "text": "comparison to see if my expression makes",
    "start": "818240",
    "end": "822000"
  },
  {
    "text": "sense and you know if I'm supposed to",
    "start": "822000",
    "end": "824800"
  },
  {
    "text": "like Implement these filters how do I",
    "start": "824800",
    "end": "826279"
  },
  {
    "text": "know even know which endpoints of my",
    "start": "826279",
    "end": "827839"
  },
  {
    "text": "system wants which events and so all",
    "start": "827839",
    "end": "830399"
  },
  {
    "text": "these questions are actually pretty hard",
    "start": "830399",
    "end": "832079"
  },
  {
    "text": "in a large decoupled event driven system",
    "start": "832079",
    "end": "834759"
  },
  {
    "text": "if I've got hundreds of event sources",
    "start": "834759",
    "end": "837199"
  },
  {
    "text": "and dozens to hundreds of events",
    "start": "837199",
    "end": "839759"
  },
  {
    "text": "consumers understanding what's flowing",
    "start": "839759",
    "end": "841519"
  },
  {
    "text": "in my system gets really complicated",
    "start": "841519",
    "end": "843440"
  },
  {
    "text": "really",
    "start": "843440",
    "end": "845240"
  },
  {
    "text": "fast and yeah another one where where",
    "start": "845240",
    "end": "848600"
  },
  {
    "text": "are the events even coming from right if",
    "start": "848600",
    "end": "850560"
  },
  {
    "text": "I've got hundreds of them which one",
    "start": "850560",
    "end": "851639"
  },
  {
    "text": "which events come from",
    "start": "851639",
    "end": "853360"
  },
  {
    "text": "where so this is where X registry comes",
    "start": "853360",
    "end": "855759"
  },
  {
    "text": "in um we'll talk more about it in a",
    "start": "855759",
    "end": "858959"
  },
  {
    "text": "second um but basically today I want to",
    "start": "858959",
    "end": "860920"
  },
  {
    "text": "talk about for X registry what problem",
    "start": "860920",
    "end": "862320"
  },
  {
    "text": "is it actually",
    "start": "862320",
    "end": "863320"
  },
  {
    "text": "solving um a little bit about how it",
    "start": "863320",
    "end": "865320"
  },
  {
    "text": "solves the problem and some basic",
    "start": "865320",
    "end": "867839"
  },
  {
    "text": "details but nothing too complicated",
    "start": "867839",
    "end": "869639"
  },
  {
    "text": "since the Spec's evolving a",
    "start": "869639",
    "end": "871920"
  },
  {
    "text": "lot so a lot of the problems of X",
    "start": "871920",
    "end": "875519"
  },
  {
    "text": "registry is solving is how you ask those",
    "start": "875519",
    "end": "877000"
  },
  {
    "text": "questions I was asking before so what",
    "start": "877000",
    "end": "879560"
  },
  {
    "text": "events are used in a specific context",
    "start": "879560",
    "end": "881360"
  },
  {
    "text": "there's a registry where you have them",
    "start": "881360",
    "end": "883399"
  },
  {
    "text": "all defined um it's called the message",
    "start": "883399",
    "end": "886000"
  },
  {
    "text": "registry what do the payloads look like",
    "start": "886000",
    "end": "888240"
  },
  {
    "text": "for these events there's a schema",
    "start": "888240",
    "end": "889839"
  },
  {
    "text": "registry which contains all of the",
    "start": "889839",
    "end": "891160"
  },
  {
    "text": "different schemas of my payloads um if I",
    "start": "891160",
    "end": "894480"
  },
  {
    "text": "care where the events were being",
    "start": "894480",
    "end": "895519"
  },
  {
    "text": "produced or consumed there's an",
    "start": "895519",
    "end": "896920"
  },
  {
    "text": "endpoints registry which has all the",
    "start": "896920",
    "end": "898480"
  },
  {
    "text": "endpoints in my my system and well as",
    "start": "898480",
    "end": "900160"
  },
  {
    "text": "metadata is like this is a consumer this",
    "start": "900160",
    "end": "901839"
  },
  {
    "text": "is a",
    "start": "901839",
    "end": "902880"
  },
  {
    "text": "producer um and an interesting question",
    "start": "902880",
    "end": "905399"
  },
  {
    "text": "which X register is asking is what if I",
    "start": "905399",
    "end": "907560"
  },
  {
    "text": "need to manage other types of metadata",
    "start": "907560",
    "end": "909680"
  },
  {
    "text": "too like they don't want to make an",
    "start": "909680",
    "end": "911639"
  },
  {
    "text": "assumption on the only metadata you need",
    "start": "911639",
    "end": "914399"
  },
  {
    "text": "to deal with is just about these events",
    "start": "914399",
    "end": "916320"
  },
  {
    "text": "and these schemas and stuff you probably",
    "start": "916320",
    "end": "917800"
  },
  {
    "text": "have other metadata in your system and",
    "start": "917800",
    "end": "920279"
  },
  {
    "text": "so how do you manage this all",
    "start": "920279",
    "end": "922160"
  },
  {
    "text": "consistently across all these different",
    "start": "922160",
    "end": "923800"
  },
  {
    "text": "metadata formats and all this metadata",
    "start": "923800",
    "end": "925720"
  },
  {
    "text": "that your large system is",
    "start": "925720",
    "end": "927680"
  },
  {
    "text": "creating so X registry is a a",
    "start": "927680",
    "end": "931600"
  },
  {
    "text": "specification similar to all the other",
    "start": "931600",
    "end": "933480"
  },
  {
    "text": "Cloud events projects for managing this",
    "start": "933480",
    "end": "935759"
  },
  {
    "text": "metadata in a common and extensible way",
    "start": "935759",
    "end": "938800"
  },
  {
    "text": "the x in x registry stands for",
    "start": "938800",
    "end": "940759"
  },
  {
    "text": "extensible registry and so you're able",
    "start": "940759",
    "end": "943319"
  },
  {
    "text": "to extend it with whatever other",
    "start": "943319",
    "end": "944800"
  },
  {
    "text": "metadata you care about",
    "start": "944800",
    "end": "947440"
  },
  {
    "text": "tracking so the idea is there's this",
    "start": "947440",
    "end": "949639"
  },
  {
    "text": "core specification on how the registry",
    "start": "949639",
    "end": "952240"
  },
  {
    "text": "should work and then they've provided",
    "start": "952240",
    "end": "954519"
  },
  {
    "text": "some specific",
    "start": "954519",
    "end": "956839"
  },
  {
    "text": "Registries um so they have the event",
    "start": "956839",
    "end": "959720"
  },
  {
    "text": "definition registry which has been",
    "start": "959720",
    "end": "960959"
  },
  {
    "text": "called It's called The Message registry",
    "start": "960959",
    "end": "962480"
  },
  {
    "text": "these days I think there's a schema",
    "start": "962480",
    "end": "964319"
  },
  {
    "text": "registry and an endpoints registry which",
    "start": "964319",
    "end": "966959"
  },
  {
    "text": "are all like built-in registry",
    "start": "966959",
    "end": "969519"
  },
  {
    "text": "specifications they give for here's a",
    "start": "969519",
    "end": "972040"
  },
  {
    "text": "specific registry but they'll all have",
    "start": "972040",
    "end": "974319"
  },
  {
    "text": "the same API and so if you have your own",
    "start": "974319",
    "end": "976120"
  },
  {
    "text": "metadata you care about tracking you can",
    "start": "976120",
    "end": "979920"
  },
  {
    "text": "Define it and then it will have the same",
    "start": "979920",
    "end": "981839"
  },
  {
    "text": "API as all the other registries that are",
    "start": "981839",
    "end": "984959"
  },
  {
    "text": "running in your",
    "start": "984959",
    "end": "986480"
  },
  {
    "text": "system so yeah you can make your own",
    "start": "986480",
    "end": "988440"
  },
  {
    "text": "custom regist indes and the cool thing",
    "start": "988440",
    "end": "991279"
  },
  {
    "text": "is um they'll all have this API and so",
    "start": "991279",
    "end": "994040"
  },
  {
    "text": "your tooling can consistently talk to",
    "start": "994040",
    "end": "996120"
  },
  {
    "text": "your metadata across all the different",
    "start": "996120",
    "end": "997759"
  },
  {
    "text": "types of metadata you have um so we'll",
    "start": "997759",
    "end": "1002319"
  },
  {
    "text": "get more into exactly how these URLs",
    "start": "1002319",
    "end": "1004079"
  },
  {
    "text": "work but the high level idea is that you",
    "start": "1004079",
    "end": "1006480"
  },
  {
    "text": "have different groups of",
    "start": "1006480",
    "end": "1008680"
  },
  {
    "text": "metadata um for example schemas or",
    "start": "1008680",
    "end": "1011360"
  },
  {
    "text": "messages or endpoints and then you have",
    "start": "1011360",
    "end": "1014959"
  },
  {
    "text": "within those kind of types of groups",
    "start": "1014959",
    "end": "1017560"
  },
  {
    "text": "subgroups which like a group ID will",
    "start": "1017560",
    "end": "1020360"
  },
  {
    "text": "hold you know a collection of some",
    "start": "1020360",
    "end": "1022079"
  },
  {
    "text": "messages and some me some metadata about",
    "start": "1022079",
    "end": "1024600"
  },
  {
    "text": "that collection of messages and then",
    "start": "1024600",
    "end": "1026600"
  },
  {
    "text": "you've got that collection of resources",
    "start": "1026600",
    "end": "1028600"
  },
  {
    "text": "and then you can keep going down and so",
    "start": "1028600",
    "end": "1030240"
  },
  {
    "text": "it's a a nested structure of metadata so",
    "start": "1030240",
    "end": "1034038"
  },
  {
    "text": "to make this a bit more concrete since I",
    "start": "1034039",
    "end": "1035480"
  },
  {
    "text": "know when I saw this it was a bit too",
    "start": "1035480",
    "end": "1037319"
  },
  {
    "text": "abstract to understand um I want to look",
    "start": "1037319",
    "end": "1040600"
  },
  {
    "text": "specifically at the message registry",
    "start": "1040600",
    "end": "1042120"
  },
  {
    "text": "which would contain information about",
    "start": "1042120",
    "end": "1045000"
  },
  {
    "text": "events so if I get SL message groups SL",
    "start": "1045000",
    "end": "1048880"
  },
  {
    "text": "message groups is that all caps group",
    "start": "1048880",
    "end": "1052480"
  },
  {
    "text": "from the main API definition so if I",
    "start": "1052480",
    "end": "1055640"
  },
  {
    "text": "were to get SL message groups it would",
    "start": "1055640",
    "end": "1057720"
  },
  {
    "text": "give me all of the different groupings",
    "start": "1057720",
    "end": "1059720"
  },
  {
    "text": "of messages that I have in my registry",
    "start": "1059720",
    "end": "1063520"
  },
  {
    "text": "right now and for each of those groups",
    "start": "1063520",
    "end": "1065520"
  },
  {
    "text": "it's going to give me some metadata",
    "start": "1065520",
    "end": "1067600"
  },
  {
    "text": "about the groups and then I'll all the",
    "start": "1067600",
    "end": "1069280"
  },
  {
    "text": "nested messages and metadata about those",
    "start": "1069280",
    "end": "1071200"
  },
  {
    "text": "and keeps going down the",
    "start": "1071200",
    "end": "1072960"
  },
  {
    "text": "structure I can also get a specific",
    "start": "1072960",
    "end": "1075919"
  },
  {
    "text": "group so in that group is as I said",
    "start": "1075919",
    "end": "1079360"
  },
  {
    "text": "before it will have the metadata about",
    "start": "1079360",
    "end": "1080880"
  },
  {
    "text": "the",
    "start": "1080880",
    "end": "1081559"
  },
  {
    "text": "group um and then it will have some",
    "start": "1081559",
    "end": "1084520"
  },
  {
    "text": "nested data so maybe one of these groups",
    "start": "1084520",
    "end": "1086400"
  },
  {
    "text": "is for some kind of logical grouping of",
    "start": "1086400",
    "end": "1089600"
  },
  {
    "text": "apis in your system and you have some",
    "start": "1089600",
    "end": "1091720"
  },
  {
    "text": "metadata you care about for that group",
    "start": "1091720",
    "end": "1092960"
  },
  {
    "text": "maybe there's a team that manages that",
    "start": "1092960",
    "end": "1094360"
  },
  {
    "text": "group of messages and so you care about",
    "start": "1094360",
    "end": "1097679"
  },
  {
    "text": "what team manag that or something like",
    "start": "1097679",
    "end": "1099200"
  },
  {
    "text": "that and also there's normal metadata",
    "start": "1099200",
    "end": "1101039"
  },
  {
    "text": "like um the version and stuff like that",
    "start": "1101039",
    "end": "1104440"
  },
  {
    "text": "that would be stored in the",
    "start": "1104440",
    "end": "1106600"
  },
  {
    "text": "group then you can start get getting",
    "start": "1106600",
    "end": "1109640"
  },
  {
    "text": "specific messages from the group and",
    "start": "1109640",
    "end": "1111440"
  },
  {
    "text": "this will have metadata about the",
    "start": "1111440",
    "end": "1113120"
  },
  {
    "text": "message um for example if it's a cloud",
    "start": "1113120",
    "end": "1115400"
  },
  {
    "text": "event this will tell you what attributes",
    "start": "1115400",
    "end": "1116640"
  },
  {
    "text": "are there maybe what values are in that",
    "start": "1116640",
    "end": "1118960"
  },
  {
    "text": "cloud event as well and that's all",
    "start": "1118960",
    "end": "1121799"
  },
  {
    "text": "versioned so if we go back a couple",
    "start": "1121799",
    "end": "1124880"
  },
  {
    "text": "slides to here you can see that there's",
    "start": "1124880",
    "end": "1127360"
  },
  {
    "text": "versions for all these resources so if I",
    "start": "1127360",
    "end": "1129440"
  },
  {
    "text": "want to update one of my messages I can",
    "start": "1129440",
    "end": "1132480"
  },
  {
    "text": "just add a new version and you can see",
    "start": "1132480",
    "end": "1134559"
  },
  {
    "text": "all the versions that are currently",
    "start": "1134559",
    "end": "1135840"
  },
  {
    "text": "there",
    "start": "1135840",
    "end": "1138840"
  },
  {
    "text": "um similar if I wanted to do schemas",
    "start": "1139440",
    "end": "1142039"
  },
  {
    "text": "it's the exact same like access pattern",
    "start": "1142039",
    "end": "1146000"
  },
  {
    "text": "but now I'm getting schemas instead of",
    "start": "1146000",
    "end": "1147440"
  },
  {
    "text": "messages so if I care about the payload",
    "start": "1147440",
    "end": "1149000"
  },
  {
    "text": "now instead of those context attributes",
    "start": "1149000",
    "end": "1150520"
  },
  {
    "text": "in the cloud event I can use the schema",
    "start": "1150520",
    "end": "1153159"
  },
  {
    "text": "registry and maybe decoupling these",
    "start": "1153159",
    "end": "1156039"
  },
  {
    "text": "actually gives us some useful things",
    "start": "1156039",
    "end": "1157159"
  },
  {
    "text": "maybe I have the same payload on",
    "start": "1157159",
    "end": "1159880"
  },
  {
    "text": "different events and so I can have that",
    "start": "1159880",
    "end": "1162320"
  },
  {
    "text": "all referenced through this message and",
    "start": "1162320",
    "end": "1164039"
  },
  {
    "text": "schema",
    "start": "1164039",
    "end": "1166039"
  },
  {
    "text": "decoupling similar to how I'm using get",
    "start": "1166039",
    "end": "1168159"
  },
  {
    "text": "to retrieve everything everything can",
    "start": "1168159",
    "end": "1169039"
  },
  {
    "text": "also use all the normal post input and",
    "start": "1169039",
    "end": "1170760"
  },
  {
    "text": "patch and delete methods to create and",
    "start": "1170760",
    "end": "1173360"
  },
  {
    "text": "update different groups and resources um",
    "start": "1173360",
    "end": "1175640"
  },
  {
    "text": "it works exactly how you'd expect an",
    "start": "1175640",
    "end": "1177760"
  },
  {
    "text": "HTTP server to work in that",
    "start": "1177760",
    "end": "1181600"
  },
  {
    "text": "respect",
    "start": "1181600",
    "end": "1183159"
  },
  {
    "text": "so the key thing is that xer lets us",
    "start": "1183159",
    "end": "1186559"
  },
  {
    "text": "extend and reference other metadata for",
    "start": "1186559",
    "end": "1190679"
  },
  {
    "text": "example I can define a base message",
    "start": "1190679",
    "end": "1193520"
  },
  {
    "text": "which you see on the right side of this",
    "start": "1193520",
    "end": "1195000"
  },
  {
    "text": "diagram which is a generic Cloud events",
    "start": "1195000",
    "end": "1197080"
  },
  {
    "text": "message and put all the Met data about",
    "start": "1197080",
    "end": "1200039"
  },
  {
    "text": "how that um message works so what",
    "start": "1200039",
    "end": "1202960"
  },
  {
    "text": "attributes on the cloud event and then I",
    "start": "1202960",
    "end": "1205200"
  },
  {
    "text": "can make specific messages which",
    "start": "1205200",
    "end": "1207720"
  },
  {
    "text": "reference the original message and these",
    "start": "1207720",
    "end": "1210280"
  },
  {
    "text": "can be for different bindings for",
    "start": "1210280",
    "end": "1212120"
  },
  {
    "text": "example for htttp I might care about",
    "start": "1212120",
    "end": "1215039"
  },
  {
    "text": "which HTTP method do I actually want to",
    "start": "1215039",
    "end": "1217559"
  },
  {
    "text": "use for this Cloud event and so I can",
    "start": "1217559",
    "end": "1220919"
  },
  {
    "text": "specify hey this needs to be a post and",
    "start": "1220919",
    "end": "1223159"
  },
  {
    "text": "any other information I need to say",
    "start": "1223159",
    "end": "1224559"
  },
  {
    "text": "maybe there's an extra HTTP header my",
    "start": "1224559",
    "end": "1226320"
  },
  {
    "text": "system needs so I can do that and still",
    "start": "1226320",
    "end": "1229640"
  },
  {
    "text": "point back to the original cloud event",
    "start": "1229640",
    "end": "1231840"
  },
  {
    "text": "and so I this lets me model more complex",
    "start": "1231840",
    "end": "1234960"
  },
  {
    "text": "things and a lot of the ideas you'll see",
    "start": "1234960",
    "end": "1237640"
  },
  {
    "text": "in for example like objectoriented",
    "start": "1237640",
    "end": "1239440"
  },
  {
    "text": "design you can start using with these",
    "start": "1239440",
    "end": "1241000"
  },
  {
    "text": "different",
    "start": "1241000",
    "end": "1243280"
  },
  {
    "text": "references um it also lets me choose how",
    "start": "1243280",
    "end": "1245559"
  },
  {
    "text": "to organize and group The metadata my",
    "start": "1245559",
    "end": "1247760"
  },
  {
    "text": "favorite example of this is the",
    "start": "1247760",
    "end": "1249000"
  },
  {
    "text": "endpoints registry which we see in the X",
    "start": "1249000",
    "end": "1251120"
  },
  {
    "text": "registry so the endpoints registry is",
    "start": "1251120",
    "end": "1254000"
  },
  {
    "text": "basically giving me information about",
    "start": "1254000",
    "end": "1255480"
  },
  {
    "text": "different endpoints in my system and if",
    "start": "1255480",
    "end": "1257720"
  },
  {
    "text": "you think about the key thing things I",
    "start": "1257720",
    "end": "1258840"
  },
  {
    "text": "care about an endpoint um might be",
    "start": "1258840",
    "end": "1260679"
  },
  {
    "text": "things about who can access it how to",
    "start": "1260679",
    "end": "1262799"
  },
  {
    "text": "access it but also which messages can I",
    "start": "1262799",
    "end": "1265919"
  },
  {
    "text": "receive right and that's already being",
    "start": "1265919",
    "end": "1268200"
  },
  {
    "text": "covered in the messages",
    "start": "1268200",
    "end": "1270440"
  },
  {
    "text": "registry so how can I model that well",
    "start": "1270440",
    "end": "1274279"
  },
  {
    "text": "the endpoint registry instead of having",
    "start": "1274279",
    "end": "1276840"
  },
  {
    "text": "a nested resource type of endpoint is",
    "start": "1276840",
    "end": "1279640"
  },
  {
    "text": "basically a registry that also contains",
    "start": "1279640",
    "end": "1282919"
  },
  {
    "text": "messages so in the groups you get these",
    "start": "1282919",
    "end": "1286440"
  },
  {
    "text": "endpoint groups like SL scanner test but",
    "start": "1286440",
    "end": "1289840"
  },
  {
    "text": "they contain messages which can point",
    "start": "1289840",
    "end": "1292320"
  },
  {
    "text": "back to the original message registry",
    "start": "1292320",
    "end": "1294799"
  },
  {
    "text": "and so this lets me take all of the",
    "start": "1294799",
    "end": "1296559"
  },
  {
    "text": "messages I've already defined and group",
    "start": "1296559",
    "end": "1298360"
  },
  {
    "text": "them differently so I can Define all the",
    "start": "1298360",
    "end": "1300840"
  },
  {
    "text": "message types logically in my message",
    "start": "1300840",
    "end": "1302799"
  },
  {
    "text": "registry if I want to and then when I'm",
    "start": "1302799",
    "end": "1305120"
  },
  {
    "text": "saying oh this endpoint can take these",
    "start": "1305120",
    "end": "1306679"
  },
  {
    "text": "four messages I don't need to redefine",
    "start": "1306679",
    "end": "1308320"
  },
  {
    "text": "them I can just point them back and then",
    "start": "1308320",
    "end": "1310120"
  },
  {
    "text": "when there's a new version of that",
    "start": "1310120",
    "end": "1311360"
  },
  {
    "text": "message I'm still pointing at the new",
    "start": "1311360",
    "end": "1314320"
  },
  {
    "text": "version and so this is I think really",
    "start": "1314320",
    "end": "1317360"
  },
  {
    "text": "what makes X registry powerful it's that",
    "start": "1317360",
    "end": "1319279"
  },
  {
    "text": "I can you know I can extend my different",
    "start": "1319279",
    "end": "1322559"
  },
  {
    "text": "types of metadata with these references",
    "start": "1322559",
    "end": "1325520"
  },
  {
    "text": "and I can group it however I want to and",
    "start": "1325520",
    "end": "1328799"
  },
  {
    "text": "I don't have to use the built-in",
    "start": "1328799",
    "end": "1330440"
  },
  {
    "text": "metadata types I can add my own metadata",
    "start": "1330440",
    "end": "1332440"
  },
  {
    "text": "maybe I care about managing my databases",
    "start": "1332440",
    "end": "1336080"
  },
  {
    "text": "and what tables I have in my database",
    "start": "1336080",
    "end": "1337520"
  },
  {
    "text": "and information about that so my",
    "start": "1337520",
    "end": "1338880"
  },
  {
    "text": "developers can access that across",
    "start": "1338880",
    "end": "1340480"
  },
  {
    "text": "different clusters or different systems",
    "start": "1340480",
    "end": "1342760"
  },
  {
    "text": "so I can use the same API to access all",
    "start": "1342760",
    "end": "1345240"
  },
  {
    "text": "that which means if I'm building tooling",
    "start": "1345240",
    "end": "1346799"
  },
  {
    "text": "to talk to this I don't have have to",
    "start": "1346799",
    "end": "1348760"
  },
  {
    "text": "have different like interactions I can",
    "start": "1348760",
    "end": "1351080"
  },
  {
    "text": "just keep using the same methods for all",
    "start": "1351080",
    "end": "1353120"
  },
  {
    "text": "the",
    "start": "1353120",
    "end": "1354159"
  },
  {
    "text": "metadata and so just to summarize the",
    "start": "1354159",
    "end": "1356640"
  },
  {
    "text": "key points are that it's",
    "start": "1356640",
    "end": "1359320"
  },
  {
    "text": "extensible and",
    "start": "1359320",
    "end": "1362559"
  },
  {
    "text": "consistent so if I want to go back to",
    "start": "1363679",
    "end": "1365880"
  },
  {
    "text": "those questions about Cloud events SQL",
    "start": "1365880",
    "end": "1368360"
  },
  {
    "text": "and I want to know how do we know which",
    "start": "1368360",
    "end": "1370559"
  },
  {
    "text": "attributes exist for events in our",
    "start": "1370559",
    "end": "1371919"
  },
  {
    "text": "system I would check the message",
    "start": "1371919",
    "end": "1373919"
  },
  {
    "text": "registry if I want to know what values",
    "start": "1373919",
    "end": "1376039"
  },
  {
    "text": "those attributes have that would also be",
    "start": "1376039",
    "end": "1377640"
  },
  {
    "text": "in the message registry",
    "start": "1377640",
    "end": "1379840"
  },
  {
    "text": "and then if I want to know which",
    "start": "1379840",
    "end": "1380720"
  },
  {
    "text": "endpoints in my systems want which",
    "start": "1380720",
    "end": "1382159"
  },
  {
    "text": "events I can go and look in the endpoint",
    "start": "1382159",
    "end": "1384240"
  },
  {
    "text": "registry and see which messages they",
    "start": "1384240",
    "end": "1386120"
  },
  {
    "text": "care about and if I want to know where",
    "start": "1386120",
    "end": "1388240"
  },
  {
    "text": "they're coming from I also look in the",
    "start": "1388240",
    "end": "1389840"
  },
  {
    "text": "endpoint registry and see which",
    "start": "1389840",
    "end": "1391159"
  },
  {
    "text": "producers have those",
    "start": "1391159",
    "end": "1393960"
  },
  {
    "text": "messages so that takes us to the end of",
    "start": "1393960",
    "end": "1396559"
  },
  {
    "text": "the presentation for today and the Q&A I",
    "start": "1396559",
    "end": "1400000"
  },
  {
    "text": "hope sort of the why behind why you",
    "start": "1400000",
    "end": "1402240"
  },
  {
    "text": "might want to use x registry is a bit",
    "start": "1402240",
    "end": "1403919"
  },
  {
    "text": "clear and sort of how Cloud events has",
    "start": "1403919",
    "end": "1406279"
  },
  {
    "text": "come to Cloud events SQL has come to X",
    "start": "1406279",
    "end": "1408120"
  },
  {
    "text": "registry makes a bit more sense now so",
    "start": "1408120",
    "end": "1410880"
  },
  {
    "text": "thank",
    "start": "1410880",
    "end": "1412840"
  },
  {
    "text": "you so any questions you can use the mic",
    "start": "1412840",
    "end": "1415520"
  },
  {
    "text": "or if there's not a lot of people here",
    "start": "1415520",
    "end": "1416720"
  },
  {
    "text": "so you can probably just shout it as",
    "start": "1416720",
    "end": "1420080"
  },
  {
    "text": "well thank you",
    "start": "1426480",
    "end": "1428559"
  },
  {
    "text": "Callum uh so if if this x registry has",
    "start": "1428559",
    "end": "1431960"
  },
  {
    "text": "all these",
    "start": "1431960",
    "end": "1434000"
  },
  {
    "text": "messages would it be a good practice to",
    "start": "1434000",
    "end": "1437480"
  },
  {
    "text": "have a replication or a",
    "start": "1437480",
    "end": "1440520"
  },
  {
    "text": "replicant backup registry of the X",
    "start": "1440520",
    "end": "1443679"
  },
  {
    "text": "registry just in case it fails or is",
    "start": "1443679",
    "end": "1447600"
  },
  {
    "text": "there no failure point at all so it",
    "start": "1447600",
    "end": "1451279"
  },
  {
    "text": "depends on the implementation right now",
    "start": "1451279",
    "end": "1453440"
  },
  {
    "text": "there's mostly working on the",
    "start": "1453440",
    "end": "1455120"
  },
  {
    "text": "specification for how you describe this",
    "start": "1455120",
    "end": "1456720"
  },
  {
    "text": "stuff okay so the initial implementation",
    "start": "1456720",
    "end": "1460000"
  },
  {
    "text": "was you just have a file in GitHub",
    "start": "1460000",
    "end": "1461480"
  },
  {
    "text": "somewhere that has all of this in a big",
    "start": "1461480",
    "end": "1462960"
  },
  {
    "text": "Json format um and the newer one which",
    "start": "1462960",
    "end": "1468200"
  },
  {
    "text": "is is also part of the xry which has all",
    "start": "1468200",
    "end": "1470600"
  },
  {
    "text": "these HTTP methods I was talking about",
    "start": "1470600",
    "end": "1472279"
  },
  {
    "text": "they've got an implementation which has",
    "start": "1472279",
    "end": "1474039"
  },
  {
    "text": "an SQL Server backing it up and you'd",
    "start": "1474039",
    "end": "1476399"
  },
  {
    "text": "probably want to do all your normal",
    "start": "1476399",
    "end": "1477840"
  },
  {
    "text": "stuff for the database backing it um but",
    "start": "1477840",
    "end": "1480559"
  },
  {
    "text": "the key thing for X registry isn't",
    "start": "1480559",
    "end": "1482760"
  },
  {
    "text": "actually you know how are you running",
    "start": "1482760",
    "end": "1484840"
  },
  {
    "text": "this it's the API and how do you",
    "start": "1484840",
    "end": "1486559"
  },
  {
    "text": "interact with this and exactly what",
    "start": "1486559",
    "end": "1487919"
  },
  {
    "text": "metadata goes in there they want that to",
    "start": "1487919",
    "end": "1489399"
  },
  {
    "text": "be standardized more than exactly how",
    "start": "1489399",
    "end": "1491360"
  },
  {
    "text": "you run it to be standardized gotcha",
    "start": "1491360",
    "end": "1493440"
  },
  {
    "text": "thank you thank you yeah thanks any",
    "start": "1493440",
    "end": "1495600"
  },
  {
    "text": "other questions",
    "start": "1495600",
    "end": "1498840"
  },
  {
    "text": "all right I guess we can end a little",
    "start": "1500520",
    "end": "1501600"
  },
  {
    "text": "early then thanks for everyone who made",
    "start": "1501600",
    "end": "1503120"
  },
  {
    "text": "it out",
    "start": "1503120",
    "end": "1506240"
  }
]