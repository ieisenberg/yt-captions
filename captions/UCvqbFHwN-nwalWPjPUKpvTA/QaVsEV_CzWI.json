[
  {
    "start": "0",
    "end": "117000"
  },
  {
    "text": "hi everyone and welcome to this webinar how to protect your cloud-native data",
    "start": "1199",
    "end": "7359"
  },
  {
    "text": "one-on-one during the next hour we're going to take a look at data in kubernetes what all the different",
    "start": "7359",
    "end": "14480"
  },
  {
    "text": "paradigms concepts and what is required to secure your data and guarantee their",
    "start": "14480",
    "end": "21439"
  },
  {
    "text": "operation using some of those paradigms but also evaluating what you may need on top of",
    "start": "21439",
    "end": "28400"
  },
  {
    "text": "that so let's get started my name is nick vermandy i'm a principal",
    "start": "28400",
    "end": "33840"
  },
  {
    "text": "developer advocate with on that i've been working with quantities approximately for the past six years on",
    "start": "33840",
    "end": "41600"
  },
  {
    "text": "various areas such as network cni now more focused on the csi",
    "start": "41600",
    "end": "48320"
  },
  {
    "text": "so for today what i have in store for you is we're going to take a look at the definition of cloud native data",
    "start": "48320",
    "end": "56559"
  },
  {
    "text": "what other characteristics what all their you know what may be different options for you to",
    "start": "56559",
    "end": "63199"
  },
  {
    "text": "build data uh within the cloud because cloud native is not necessarily only about kubernetes but then we will",
    "start": "63199",
    "end": "70720"
  },
  {
    "text": "switch specifically to kubernetes uh talking about different concepts",
    "start": "70720",
    "end": "76720"
  },
  {
    "text": "involving data and also extended to",
    "start": "76720",
    "end": "81810"
  },
  {
    "text": "[Music] components that will help you protect your data",
    "start": "81810",
    "end": "87439"
  },
  {
    "text": "and finally we'll take a look at open source solutions around data protection",
    "start": "87439",
    "end": "94079"
  },
  {
    "text": "and also around more real time protection things like synchronous",
    "start": "94079",
    "end": "100400"
  },
  {
    "text": "replication how you could eventually do this with kubernetes and the csi driver so",
    "start": "100400",
    "end": "106640"
  },
  {
    "text": "let's get started what do we mean by cloud-native data",
    "start": "106640",
    "end": "114079"
  },
  {
    "text": "if we look at the gunner magic quadrant for",
    "start": "114079",
    "end": "120240"
  },
  {
    "start": "117000",
    "end": "117000"
  },
  {
    "text": "cloud database management systems it says that 75 percent of all databases",
    "start": "120240",
    "end": "127680"
  },
  {
    "text": "will be deployed or migrated to a client platform with only five percent ever consider for",
    "start": "127680",
    "end": "135280"
  },
  {
    "text": "repatriation to on premises so it means that",
    "start": "135280",
    "end": "141680"
  },
  {
    "text": "most of the time databases will be consumed as a service in the cloud not",
    "start": "141680",
    "end": "148000"
  },
  {
    "text": "necessarily in kubernetes but directly over a platform as a service such as you know",
    "start": "148000",
    "end": "155040"
  },
  {
    "text": "rds and alike it also states that by 2023",
    "start": "155040",
    "end": "161920"
  },
  {
    "text": "cloud preference for data management will reduce the vendor landscape while the growth",
    "start": "161920",
    "end": "167440"
  },
  {
    "text": "in multi-cloud increases the complexity for data governance and integration",
    "start": "167440",
    "end": "173920"
  },
  {
    "text": "and also cloud dbms revenue will account for 50 of the total dbms market revenue",
    "start": "173920",
    "end": "183680"
  },
  {
    "text": "so garner essentially look at the database and data ecosystem",
    "start": "183680",
    "end": "190560"
  },
  {
    "text": "as merely you know services running",
    "start": "190560",
    "end": "196159"
  },
  {
    "text": "in the the public cloud provider but what it doesn't said is that",
    "start": "196159",
    "end": "202000"
  },
  {
    "start": "200000",
    "end": "200000"
  },
  {
    "text": "you know we should consider this whole cloud native database",
    "start": "202000",
    "end": "208319"
  },
  {
    "text": "um concepts as a whole iceberg",
    "start": "208319",
    "end": "213360"
  },
  {
    "text": "at the top of the iceberg this is more or less the care bear world where",
    "start": "213360",
    "end": "219040"
  },
  {
    "text": "the narrative is told by the service club providers everything is easy is",
    "start": "219040",
    "end": "224879"
  },
  {
    "text": "naturally consumable via apis and you basically pay for what you consume",
    "start": "224879",
    "end": "232159"
  },
  {
    "text": "but of course the story is not as clean as what they say",
    "start": "232159",
    "end": "238959"
  },
  {
    "text": "all those services are specific to particular cloud service provider and as",
    "start": "238959",
    "end": "246480"
  },
  {
    "text": "we know today there's not such a thing as sticking with a",
    "start": "246480",
    "end": "253200"
  },
  {
    "text": "single cloud provider first of all because you don't control the business",
    "start": "253200",
    "end": "260639"
  },
  {
    "text": "you may have different merger and acquisitions and those companies may use a different",
    "start": "260639",
    "end": "266000"
  },
  {
    "text": "cloud that the one you have started with and another reason may be that",
    "start": "266000",
    "end": "272720"
  },
  {
    "text": "you may want to use a particular cloud for a particular function",
    "start": "272720",
    "end": "278000"
  },
  {
    "text": "if you look at maybe google to run kubernetes maybe aws to run your storage",
    "start": "278000",
    "end": "285199"
  },
  {
    "text": "and your buckets etc etc so you may want to have specialized cloud",
    "start": "285199",
    "end": "290720"
  },
  {
    "text": "for a specific set of function you want to provide to your business",
    "start": "290720",
    "end": "297040"
  },
  {
    "text": "and then the challenge becomes that as you move between different clouds",
    "start": "297040",
    "end": "302639"
  },
  {
    "text": "and reiterate um you know database migration or",
    "start": "302639",
    "end": "309600"
  },
  {
    "text": "operate databases into those different clouds you even though at the end it may be you",
    "start": "309600",
    "end": "315360"
  },
  {
    "text": "know relational database or no sequel database the fact is in terms of the operation",
    "start": "315360",
    "end": "322160"
  },
  {
    "text": "those are operated in different way because you are using different cloud providers so it's not exactly the same",
    "start": "322160",
    "end": "327919"
  },
  {
    "text": "api um but protecting your data will happen in a",
    "start": "327919",
    "end": "333840"
  },
  {
    "text": "different way and how you combine this data with your overall application",
    "start": "333840",
    "end": "339280"
  },
  {
    "text": "architecture will also be different and typically that means that you need a broader scope",
    "start": "339280",
    "end": "348080"
  },
  {
    "text": "in terms of the skill sets of your engineering teams your devops teams",
    "start": "348080",
    "end": "353840"
  },
  {
    "text": "as well as your developers in the end and on top of this there's also two other considerations to have",
    "start": "353840",
    "end": "361199"
  },
  {
    "text": "the first one is about cost when running databases services in the",
    "start": "361199",
    "end": "367520"
  },
  {
    "text": "cloud most of the time you will also have to account for the underlying",
    "start": "367520",
    "end": "374000"
  },
  {
    "text": "running instances that are powering your database so mainly this means you",
    "start": "374000",
    "end": "380720"
  },
  {
    "text": "will have to pay for the compute so the running instance as well as the storage for example your",
    "start": "380720",
    "end": "388720"
  },
  {
    "text": "lbs volume associating associated to your database that's one",
    "start": "388720",
    "end": "394400"
  },
  {
    "text": "and the second consideration to have is about availability as you probably know",
    "start": "394400",
    "end": "400960"
  },
  {
    "text": "most of the cloud database are replicated and highly available",
    "start": "400960",
    "end": "407440"
  },
  {
    "text": "within a particular availability zone as soon as you want to recover into a",
    "start": "407440",
    "end": "414000"
  },
  {
    "text": "different availability zone then it does incur some downtime potentially you have",
    "start": "414000",
    "end": "421599"
  },
  {
    "text": "to restore for snapshots and that also means you have to schedule and",
    "start": "421599",
    "end": "427680"
  },
  {
    "text": "manage the lifecycle of those snapshots by yourself and chances are that your snapshot may",
    "start": "427680",
    "end": "434639"
  },
  {
    "text": "not be you know restorable at the destination so on top of that you would have to test",
    "start": "434639",
    "end": "441840"
  },
  {
    "text": "your backup on a regular basis which is obviously causing some",
    "start": "441840",
    "end": "446960"
  },
  {
    "text": "overhead on top of your you know operations and again",
    "start": "446960",
    "end": "453039"
  },
  {
    "text": "this is for one particular cloud if you consume this database as a",
    "start": "453039",
    "end": "458880"
  },
  {
    "text": "service model from different clouds you will have to repeat the same sort of",
    "start": "458880",
    "end": "464160"
  },
  {
    "text": "automation and extended operation over multiple cloud",
    "start": "464160",
    "end": "470639"
  },
  {
    "text": "and you know automating snapshot testing the restore all those snapshots in different cloud will also",
    "start": "470639",
    "end": "477840"
  },
  {
    "text": "involve different skill sets because they are using different api",
    "start": "477840",
    "end": "483919"
  },
  {
    "text": "different sdks uh defense provider if we're talking about infrastructures code",
    "start": "483919",
    "end": "490000"
  },
  {
    "text": "and you know talking about devops pipeline for example so all of this needs to be",
    "start": "490000",
    "end": "496560"
  },
  {
    "text": "taken in and if we compare this to a let's say cloud native",
    "start": "496560",
    "end": "502720"
  },
  {
    "text": "kubernetes solution then there will be a couple of differences so let's first take a look",
    "start": "502720",
    "end": "510240"
  },
  {
    "text": "at the cloud native features what we could expect",
    "start": "510240",
    "end": "515360"
  },
  {
    "start": "511000",
    "end": "511000"
  },
  {
    "text": "from a kubernetes environment whether running on premises or in the public cloud",
    "start": "515360",
    "end": "521518"
  },
  {
    "text": "managed or unmanaged first it's all about scalability the",
    "start": "521519",
    "end": "526720"
  },
  {
    "text": "last couple of years i've seen the rays of auto scaling for pods but also auto",
    "start": "526720",
    "end": "533200"
  },
  {
    "text": "scaling for nodes so this means that as your application requires more power",
    "start": "533200",
    "end": "539839"
  },
  {
    "text": "you can also deploy more nodes in kubernetes as you would do with a",
    "start": "539839",
    "end": "546160"
  },
  {
    "text": "neutral scaling group in public cloud providers as well",
    "start": "546160",
    "end": "551440"
  },
  {
    "text": "so not only for nodes but also for the application itself so you can scale your application",
    "start": "551440",
    "end": "559920"
  },
  {
    "text": "to be able to take you know taking some of the peaks during um",
    "start": "560080",
    "end": "565400"
  },
  {
    "text": "[Music] high usage periods such as you know promotion",
    "start": "565400",
    "end": "571040"
  },
  {
    "text": "sales if it's that's a commercial application or during black friday for example",
    "start": "571040",
    "end": "576800"
  },
  {
    "text": "where potentially you need you need more power for your application so more web servers",
    "start": "576800",
    "end": "583680"
  },
  {
    "text": "uh maybe more database nodes to facilitate uh reads but also more kubernetes",
    "start": "583680",
    "end": "591200"
  },
  {
    "text": "compute nodes as well elasticity so that is the ability to",
    "start": "591200",
    "end": "597279"
  },
  {
    "text": "scale up but also down where when you don't need this this extra",
    "start": "597279",
    "end": "603600"
  },
  {
    "text": "power self-healing is also a very important",
    "start": "603600",
    "end": "610640"
  },
  {
    "text": "concept in kubernetes whereby kubernetes is fundamentally an",
    "start": "610640",
    "end": "616959"
  },
  {
    "text": "asynchronous system with eventual consistency where things happen",
    "start": "616959",
    "end": "623920"
  },
  {
    "text": "concurrently and will eventually converge to a finished state",
    "start": "623920",
    "end": "630000"
  },
  {
    "text": "so even though um things may not succeed the first time maybe the second time",
    "start": "630000",
    "end": "636800"
  },
  {
    "text": "uh a controller will try to do something all the prerequisites will be met",
    "start": "636800",
    "end": "641920"
  },
  {
    "text": "by you know if it depends on other controllers and in the end eventually",
    "start": "641920",
    "end": "647200"
  },
  {
    "text": "everything will converge sort of you know self-healing itself",
    "start": "647200",
    "end": "652720"
  },
  {
    "text": "observability is also key in communities they are you know proliferation of",
    "start": "653120",
    "end": "658800"
  },
  {
    "text": "solution like prometheus rafana different dashboards that are available",
    "start": "658800",
    "end": "664560"
  },
  {
    "text": "within kubernetes i would say you know at no extra costs so this is also a very",
    "start": "664560",
    "end": "670640"
  },
  {
    "text": "important factor so this is for the basic the foundation of kubernetes",
    "start": "670640",
    "end": "677920"
  },
  {
    "text": "and what kind of requirements and capability it is uh providing but how about persistent",
    "start": "677920",
    "end": "684480"
  },
  {
    "text": "data and storage let's say if you want to build your own database in kubernetes and",
    "start": "684480",
    "end": "690720"
  },
  {
    "text": "run it in production then first off of course it needs to be distributed you can not",
    "start": "690720",
    "end": "696800"
  },
  {
    "text": "run a single part database on a single node you want to",
    "start": "696800",
    "end": "702399"
  },
  {
    "text": "have a distribution of your data across multiple replicas across different commodities nodes",
    "start": "702399",
    "end": "710079"
  },
  {
    "text": "you want replication to happen as well because by default we're going to see",
    "start": "710160",
    "end": "715760"
  },
  {
    "text": "later uh some of the qualities primitives but the data itself",
    "start": "715760",
    "end": "721600"
  },
  {
    "text": "is not replicated by the platform so meaning that there are two main solutions",
    "start": "721600",
    "end": "727279"
  },
  {
    "text": "you can replicate your data at the application level meaning that you rely",
    "start": "727279",
    "end": "732639"
  },
  {
    "text": "on your database cluster or your database replicas to provide",
    "start": "732639",
    "end": "739279"
  },
  {
    "text": "multiple instances of the same data or alternatively you can also",
    "start": "739279",
    "end": "746639"
  },
  {
    "text": "rely on your storage provider or csi driver",
    "start": "746639",
    "end": "752560"
  },
  {
    "text": "to provide that particular feature or of replicating at the block level and we're going to",
    "start": "752560",
    "end": "759360"
  },
  {
    "text": "talk a little bit about this later as well",
    "start": "759360",
    "end": "764399"
  },
  {
    "text": "encryption is also something you have to consider especially if you're running database that help that are holding",
    "start": "764480",
    "end": "772320"
  },
  {
    "text": "sensitive data end-to-end encryption is really important in kubernetes um",
    "start": "772320",
    "end": "777600"
  },
  {
    "text": "and you have to find the right solution which is not necessarily relying only on",
    "start": "777600",
    "end": "783040"
  },
  {
    "text": "the cloud provider for encryption you may also want to encrypt your data directly",
    "start": "783040",
    "end": "790959"
  },
  {
    "text": "inside kubernetes so that no one can get access to your",
    "start": "790959",
    "end": "796959"
  },
  {
    "text": "queries volume if someone were to you know read it from",
    "start": "796959",
    "end": "802320"
  },
  {
    "text": "from kubernetes itself and another very important",
    "start": "802320",
    "end": "810399"
  },
  {
    "text": "function for your developer is self-service provisioning",
    "start": "810639",
    "end": "816880"
  },
  {
    "text": "so the idea here is as you know microservices become more and more popular",
    "start": "816880",
    "end": "823680"
  },
  {
    "text": "individual teams are responsible for you know a set of micro services",
    "start": "823680",
    "end": "829120"
  },
  {
    "text": "and each one of this team will run their own queuing or messaging system",
    "start": "829120",
    "end": "836079"
  },
  {
    "text": "and their own databases and you can simply you know in the",
    "start": "836079",
    "end": "841440"
  },
  {
    "text": "let's say cloud native philosophy you cannot rely",
    "start": "841440",
    "end": "847040"
  },
  {
    "text": "on a waiting time for developer to consume and to provision",
    "start": "847040",
    "end": "852800"
  },
  {
    "text": "their databases they need to be deployed on demand you cannot afford you know",
    "start": "852800",
    "end": "858800"
  },
  {
    "text": "waiting two three four or four days or even multiple weeks",
    "start": "858800",
    "end": "864560"
  },
  {
    "text": "to get the database up and running in an environment where potentially code",
    "start": "864560",
    "end": "870720"
  },
  {
    "text": "updates and new releases are deployed in production typically multiple times a",
    "start": "870720",
    "end": "876800"
  },
  {
    "text": "day so self self provisioning is a very important concept when it comes to",
    "start": "876800",
    "end": "884399"
  },
  {
    "text": "deploying and managing databases in in communities and because kubernetes",
    "start": "884480",
    "end": "890720"
  },
  {
    "text": "has all the fundamental prerequisites to enable this",
    "start": "890720",
    "end": "895920"
  },
  {
    "text": "kind of paradigms it makes it a the perfect platform",
    "start": "895920",
    "end": "901680"
  },
  {
    "text": "to run databases and finally all the functions we have been mentioning so far can be encapsulated",
    "start": "901680",
    "end": "909440"
  },
  {
    "text": "into devops pipelines and again you have two solutions either you could use",
    "start": "909440",
    "end": "916240"
  },
  {
    "text": "your cloud service provider native service such as azure pipelines and and others",
    "start": "916240",
    "end": "923760"
  },
  {
    "text": "and of course you will be subject to the same drawbacks i would say that we've seen",
    "start": "923760",
    "end": "930880"
  },
  {
    "text": "before in terms of different clouds having different apis",
    "start": "930880",
    "end": "936639"
  },
  {
    "text": "and different way of implementing those devops pipelines or alternatively you can choose to stay",
    "start": "936639",
    "end": "944480"
  },
  {
    "text": "within capabilities and use a kubernetes native devops tool such as tecton",
    "start": "944480",
    "end": "953199"
  },
  {
    "text": "which gives you the ability to develop your",
    "start": "953199",
    "end": "958240"
  },
  {
    "text": "devops pipeline without leaving kubernetes basically every task",
    "start": "958240",
    "end": "964880"
  },
  {
    "text": "defined in your devops pipeline in tecton is run as a distinct container so you",
    "start": "964880",
    "end": "972240"
  },
  {
    "text": "can compose your pipeline as you wish again using yaml which is the de facto",
    "start": "972240",
    "end": "977680"
  },
  {
    "text": "language declarative language in kubernetes so again no need to to learn anything",
    "start": "977680",
    "end": "983440"
  },
  {
    "text": "anything new just using yaml you can define your different action your different tasks and those tasks",
    "start": "983440",
    "end": "990399"
  },
  {
    "text": "can communicate to each other by using you know also your storage inside",
    "start": "990399",
    "end": "995759"
  },
  {
    "text": "kubernetes and essentially run the whole pipeline without leaving your cluster meaning",
    "start": "995759",
    "end": "1002240"
  },
  {
    "text": "that as you deploy kubernetes as your de facto cloud operating system",
    "start": "1002240",
    "end": "1008959"
  },
  {
    "text": "you can stay consistent across all different clouds in terms of building",
    "start": "1008959",
    "end": "1015920"
  },
  {
    "text": "your applications but also building your devops practice",
    "start": "1015920",
    "end": "1021040"
  },
  {
    "text": "so now let's take a look at some of the kubernetes data primitives",
    "start": "1021040",
    "end": "1027120"
  },
  {
    "text": "the most important primitive when it comes to persistent data in kubernetes and",
    "start": "1027120",
    "end": "1033120"
  },
  {
    "start": "1028000",
    "end": "1028000"
  },
  {
    "text": "non-persistent data actually is kubernetes volumes and commodities supports a variety",
    "start": "1033120",
    "end": "1040400"
  },
  {
    "text": "of volumes for this you can use coop ctl to get access to the whole descriptions as",
    "start": "1040400",
    "end": "1046880"
  },
  {
    "text": "usual so kubctl explain pod.spec.volume",
    "start": "1046880",
    "end": "1052760"
  },
  {
    "text": "recursive will give you the full list of supported volumes some of them",
    "start": "1052880",
    "end": "1059200"
  },
  {
    "text": "are legacy i would say because it also include the deprecated entry drivers but",
    "start": "1059200",
    "end": "1065200"
  },
  {
    "text": "kubernetes has moved away from the entry drivers into a more",
    "start": "1065200",
    "end": "1070960"
  },
  {
    "text": "modular approach where every store storage vendor or provider",
    "start": "1070960",
    "end": "1076640"
  },
  {
    "text": "developed its own driver called csi or container storage interface",
    "start": "1076640",
    "end": "1082880"
  },
  {
    "text": "it's a plugable architecture where only the required csi",
    "start": "1082880",
    "end": "1088799"
  },
  {
    "text": "will be installed by the user when you need it so for example if you're using",
    "start": "1088799",
    "end": "1094480"
  },
  {
    "text": "amazon eks you can install the ebs csi driver and so",
    "start": "1094480",
    "end": "1100559"
  },
  {
    "text": "you will be able to take advantage of a variety of features that comes with the csi",
    "start": "1100559",
    "end": "1106480"
  },
  {
    "text": "so all the kubernetes primitives and on top of that also additional capabilities the main",
    "start": "1106480",
    "end": "1113039"
  },
  {
    "text": "volume providers you're going to be using are displayed here",
    "start": "1113039",
    "end": "1118960"
  },
  {
    "text": "on the screen the first and more obvious one is the persistent",
    "start": "1118960",
    "end": "1124080"
  },
  {
    "text": "volume claim so a persistent volume claim is a request for a back-end persistent",
    "start": "1124080",
    "end": "1131520"
  },
  {
    "text": "volume that matches specific criteria such as you know the size the storage",
    "start": "1131520",
    "end": "1137360"
  },
  {
    "text": "class of the the volume you want to create",
    "start": "1137360",
    "end": "1142400"
  },
  {
    "text": "essentially when you create a pvc two things may happen",
    "start": "1142400",
    "end": "1148160"
  },
  {
    "text": "the first one if your csi can provision dynamically persistent volume",
    "start": "1148160",
    "end": "1154000"
  },
  {
    "text": "well when you create a pvc in the backend a persistent volume or pv is",
    "start": "1154000",
    "end": "1159440"
  },
  {
    "text": "dynamically created if the csi doesn't support",
    "start": "1159440",
    "end": "1165919"
  },
  {
    "text": "dynamic creation of pv then you have to statically link your persistent volume",
    "start": "1165919",
    "end": "1171440"
  },
  {
    "text": "claim with the back end persistent volume that has to be created before",
    "start": "1171440",
    "end": "1178400"
  },
  {
    "text": "but nowadays most of the the csi driver support",
    "start": "1178400",
    "end": "1183919"
  },
  {
    "text": "the the dynamic provisioning of persistent volume and typically what you will do is create a",
    "start": "1183919",
    "end": "1191679"
  },
  {
    "text": "particular storage class defining the type of storage you want to use and the csi you want to use",
    "start": "1191679",
    "end": "1198160"
  },
  {
    "text": "and then reference that particular storage class in the pvc definition as well as the",
    "start": "1198160",
    "end": "1204080"
  },
  {
    "text": "size and then the back-end per system volume will be",
    "start": "1204080",
    "end": "1209679"
  },
  {
    "text": "automatically created another important consideration is how",
    "start": "1209679",
    "end": "1215440"
  },
  {
    "text": "the pod will access the pvcs so if you have a single pod",
    "start": "1215440",
    "end": "1221039"
  },
  {
    "text": "you can have a pvc that is locally attached if the node fail",
    "start": "1221039",
    "end": "1226159"
  },
  {
    "text": "then unfortunately you will also lose the data now if",
    "start": "1226159",
    "end": "1231280"
  },
  {
    "text": "you create a higher level construct such as a deployment then",
    "start": "1231280",
    "end": "1236799"
  },
  {
    "text": "you will have to use a shared file system because in",
    "start": "1236799",
    "end": "1241919"
  },
  {
    "text": "the definition of your deployment you will specify a single pvc meaning that",
    "start": "1241919",
    "end": "1247280"
  },
  {
    "text": "if the pvc is a local attached file system",
    "start": "1247280",
    "end": "1253200"
  },
  {
    "text": "then only the first pod will be able to consume it right the other parts that will be",
    "start": "1253200",
    "end": "1259840"
  },
  {
    "text": "potentially residing on the same host won't be able to access it because it's been already claimed",
    "start": "1259840",
    "end": "1265280"
  },
  {
    "text": "by the first one and parts that are residing on other nodes well they won't",
    "start": "1265280",
    "end": "1270480"
  },
  {
    "text": "have access to the local attached volume right so the only",
    "start": "1270480",
    "end": "1275600"
  },
  {
    "text": "solution is to have a shared network file system if you need multiple pods part of a",
    "start": "1275600",
    "end": "1282320"
  },
  {
    "text": "deployment to access a particular pvc and then you have the",
    "start": "1282320",
    "end": "1287840"
  },
  {
    "text": "option to create a particular directory per pod basis so",
    "start": "1287840",
    "end": "1294080"
  },
  {
    "text": "you will have a shared file system and every pod that have access that has access to that",
    "start": "1294080",
    "end": "1300400"
  },
  {
    "text": "particular pvc will create or will use its own directory so in",
    "start": "1300400",
    "end": "1306080"
  },
  {
    "text": "terms of access definition it means that if you want to use a pvc",
    "start": "1306080",
    "end": "1311919"
  },
  {
    "text": "within a deployment and every pods need to write to that pvc you will need to use",
    "start": "1311919",
    "end": "1318559"
  },
  {
    "text": "read write many access backed by something like an nfs share",
    "start": "1318559",
    "end": "1324320"
  },
  {
    "text": "other volumes that can be used include empty gear which is a scratch directory typically mounted",
    "start": "1324320",
    "end": "1332080"
  },
  {
    "text": "from the root file system or ram on the node it starts empty",
    "start": "1332080",
    "end": "1339200"
  },
  {
    "text": "and of course the pod may write data to the directory that will be",
    "start": "1339200",
    "end": "1344480"
  },
  {
    "text": "mounted into it but when the pod is restarted the data that is located there",
    "start": "1344480",
    "end": "1350320"
  },
  {
    "text": "is um also scratched then hostpass which identifies a",
    "start": "1350320",
    "end": "1355919"
  },
  {
    "text": "particular path in the communities node that will be mounted",
    "start": "1355919",
    "end": "1361760"
  },
  {
    "text": "as a volume into the pod it is typically avoided",
    "start": "1361760",
    "end": "1367520"
  },
  {
    "text": "in production as it has some security involvement but also because it's only valid for naked",
    "start": "1367520",
    "end": "1375600"
  },
  {
    "text": "pods again if you create a higher level construct managed by a controller such",
    "start": "1375600",
    "end": "1382960"
  },
  {
    "text": "as a deployment stateful set etc then it doesn't make sense to use host",
    "start": "1382960",
    "end": "1388960"
  },
  {
    "text": "path right so typically used for testing or troubleshooting eventually then we",
    "start": "1388960",
    "end": "1395120"
  },
  {
    "text": "have config map which are a set of key value pairs that can be mounted to your pod as",
    "start": "1395120",
    "end": "1403039"
  },
  {
    "text": "environment variables but also as a volume um into the pod and then your",
    "start": "1403039",
    "end": "1408559"
  },
  {
    "text": "application can can access can get access to this information just by reading the files that will be present",
    "start": "1408559",
    "end": "1416240"
  },
  {
    "text": "into your mount point secrets sort of similar to config map",
    "start": "1416240",
    "end": "1422240"
  },
  {
    "text": "except that it is encoded in base 64 but not encrypted by default this is really",
    "start": "1422240",
    "end": "1429360"
  },
  {
    "text": "important then we have the downward api which can be very useful because it provides",
    "start": "1429360",
    "end": "1436320"
  },
  {
    "text": "contextual information for your application running inside your pod so the downward api allows you so to define",
    "start": "1436320",
    "end": "1445600"
  },
  {
    "text": "in yaml again inside your pod you can reference particular fields you want um to inject",
    "start": "1445600",
    "end": "1453600"
  },
  {
    "text": "into your running pot so it can be things like you know your pod ip",
    "start": "1453600",
    "end": "1459039"
  },
  {
    "text": "the amount you know the requests uh for your cpu the limits of the cpu memory",
    "start": "1459039",
    "end": "1465440"
  },
  {
    "text": "etc so give essentially a lot of contextual information for your application",
    "start": "1465440",
    "end": "1472559"
  },
  {
    "text": "as opposed to you know hard code um those information and finally we have",
    "start": "1472559",
    "end": "1478400"
  },
  {
    "text": "also a firm ephemeral volumes which are a bit more recent than the the others",
    "start": "1478400",
    "end": "1485600"
  },
  {
    "text": "and they have been created to meet the requirement of specific use cases",
    "start": "1485600",
    "end": "1492159"
  },
  {
    "text": "where applications don't really care if the attached volumes are persistent or",
    "start": "1492159",
    "end": "1498320"
  },
  {
    "text": "not so for example it may be a caching application um where the data you know can be easily",
    "start": "1498320",
    "end": "1506159"
  },
  {
    "text": "scratched when the pod get restarted and the application doesn't really care or care about that",
    "start": "1506159",
    "end": "1512240"
  },
  {
    "text": "or it gives also the ability to pre-populate data as input for the",
    "start": "1512240",
    "end": "1517840"
  },
  {
    "text": "application but essentially the main difference is that the life cycle of the volume is",
    "start": "1517840",
    "end": "1525520"
  },
  {
    "text": "the same as the one of the pod meaning that um the pod can get restarted on the node",
    "start": "1525520",
    "end": "1533120"
  },
  {
    "text": "where previously the volume didn't reside as opposed to as opposed",
    "start": "1533120",
    "end": "1538559"
  },
  {
    "text": "to a pvc for example as the pvc once it's been claimed will basically reside",
    "start": "1538559",
    "end": "1544880"
  },
  {
    "text": "forever on the particular node it means that the pod is tied",
    "start": "1544880",
    "end": "1550080"
  },
  {
    "text": "to the specific the specific node where the pvc resides so it cannot be restarted on another node here the",
    "start": "1550080",
    "end": "1557039"
  },
  {
    "text": "difference is that parts can be restarted on whatever nodes also in addition ephemeral volumes can",
    "start": "1557039",
    "end": "1564400"
  },
  {
    "text": "be supported by csi providers to deliver um some",
    "start": "1564400",
    "end": "1570240"
  },
  {
    "text": "additional capabilities such as snapshotting cloning resizing and",
    "start": "1570240",
    "end": "1578320"
  },
  {
    "text": "storage capacity tracking for those ephemeral volumes because they are",
    "start": "1578320",
    "end": "1583760"
  },
  {
    "text": "fundamentally csi capabilities okay so now let's focus",
    "start": "1583760",
    "end": "1588960"
  },
  {
    "start": "1588000",
    "end": "1588000"
  },
  {
    "text": "a little bit more on the csi basic capabilities what does a csi",
    "start": "1588960",
    "end": "1596000"
  },
  {
    "text": "need to deliver to kubernetes at the bare minimum so it is a standard defined",
    "start": "1596000",
    "end": "1601679"
  },
  {
    "text": "for storage plugins in 2018 when kubernetes moves from the entry",
    "start": "1601679",
    "end": "1608480"
  },
  {
    "text": "driver development meaning that for every modification the whole community system had to be",
    "start": "1608480",
    "end": "1615760"
  },
  {
    "text": "replaced so moving away from this entry to a more",
    "start": "1615760",
    "end": "1620880"
  },
  {
    "text": "pluggable architecture where you know you don't need to replace the",
    "start": "1620880",
    "end": "1627200"
  },
  {
    "text": "whole community system just to update or upgrade your csi driver so essentially",
    "start": "1627200",
    "end": "1633520"
  },
  {
    "text": "now the csi driver is delivered as an additional application that you installed",
    "start": "1633520",
    "end": "1641200"
  },
  {
    "text": "inside kubernetes as you deploy the cluster",
    "start": "1641200",
    "end": "1646880"
  },
  {
    "text": "so the csi driver need to be compliant with a couple of apis or",
    "start": "1646880",
    "end": "1655600"
  },
  {
    "text": "rpcs that will deliver specific function to kubernetes or",
    "start": "1655600",
    "end": "1660799"
  },
  {
    "text": "functions that commodities expect so dynamic provisioning and the provisioning of a volume",
    "start": "1660799",
    "end": "1667039"
  },
  {
    "text": "attaching or detaching the volume from a node mounting and mounting",
    "start": "1667039",
    "end": "1673200"
  },
  {
    "text": "volume from nodes also support the creation and also deletion of snapshots",
    "start": "1673200",
    "end": "1681679"
  },
  {
    "text": "and finally also provisioning a new volume from a snapshot those are typically",
    "start": "1681679",
    "end": "1688720"
  },
  {
    "text": "the features that the any csi will deliver now as i was saying",
    "start": "1688720",
    "end": "1695279"
  },
  {
    "text": "before the csi driver itself is installed as an application",
    "start": "1695279",
    "end": "1701200"
  },
  {
    "text": "on your kubernetes cluster and has typically multiple components",
    "start": "1701200",
    "end": "1707520"
  },
  {
    "text": "so the node plugin typically delivered as with daemon sets",
    "start": "1707520",
    "end": "1713200"
  },
  {
    "text": "holding a grpc endpoint then we have the controller plugin also",
    "start": "1713200",
    "end": "1718640"
  },
  {
    "text": "grpc endpoint and then the csi driver has multiple interfaces one responsible for",
    "start": "1718640",
    "end": "1726480"
  },
  {
    "text": "identity the identity services the controller services and finally the",
    "start": "1726480",
    "end": "1732960"
  },
  {
    "text": "node service now when it comes to",
    "start": "1732960",
    "end": "1739360"
  },
  {
    "text": "data protection the csi driver deliver multiple functions",
    "start": "1739360",
    "end": "1745600"
  },
  {
    "text": "that are represented as an extension of the kubernetes apis snapshots are",
    "start": "1745600",
    "end": "1752720"
  },
  {
    "text": "effectively represented as crds or custom resource definitions and are",
    "start": "1752720",
    "end": "1759440"
  },
  {
    "text": "composed of three main objects first the volume snapshot",
    "start": "1759440",
    "end": "1765520"
  },
  {
    "text": "the volume snapshot content and finally the volume snapshot class",
    "start": "1765520",
    "end": "1771039"
  },
  {
    "text": "so the volume snapshot is comparable to a pvc in the sense that it is actually a",
    "start": "1771039",
    "end": "1777760"
  },
  {
    "text": "request for a snapshot a real snapshot and that snapshot that",
    "start": "1777760",
    "end": "1784320"
  },
  {
    "text": "is taken is effectively similar to a persistent volume in the sense that it",
    "start": "1784320",
    "end": "1789919"
  },
  {
    "text": "is effectively the physical sort of snapshots and the corresponding",
    "start": "1789919",
    "end": "1795520"
  },
  {
    "text": "object is the volume snapshot content the volume snapshot is composed of a",
    "start": "1795520",
    "end": "1804799"
  },
  {
    "text": "snapshot controller as well as a validation webhook",
    "start": "1804799",
    "end": "1810159"
  },
  {
    "text": "and is effectively delivered by the csi driver so the snapshot controller",
    "start": "1810159",
    "end": "1816320"
  },
  {
    "text": "watches both volume snapshots and volume snapshot content and it's the component",
    "start": "1816320",
    "end": "1823200"
  },
  {
    "text": "responsible for the creation and the deletion of volume snapshot objects",
    "start": "1823200",
    "end": "1829919"
  },
  {
    "text": "on the other side the sidecar csi snapshotter",
    "start": "1829919",
    "end": "1835200"
  },
  {
    "text": "is the component that watches volume snapshot content objects and that",
    "start": "1835200",
    "end": "1840480"
  },
  {
    "text": "triggers create snapshots as well as delete snapshot operations",
    "start": "1840480",
    "end": "1846080"
  },
  {
    "text": "against a particular csi endpoint and finally",
    "start": "1846080",
    "end": "1851520"
  },
  {
    "text": "the validation webhook is nothing more but a http callback that",
    "start": "1851520",
    "end": "1858480"
  },
  {
    "text": "is there with the goal of tightening the validation for",
    "start": "1858480",
    "end": "1865200"
  },
  {
    "text": "volume object snapshot and um finally we also have the volume",
    "start": "1865200",
    "end": "1871679"
  },
  {
    "text": "snapshot class which specifies different attributes belonging",
    "start": "1871679",
    "end": "1877120"
  },
  {
    "text": "to a volume snapshot it is sort of similar to a storage class",
    "start": "1877120",
    "end": "1884320"
  },
  {
    "text": "if you want to compare volume snapshots to pvc again one other thing to notice is that the",
    "start": "1884320",
    "end": "1892080"
  },
  {
    "text": "volume snapshot content similarly to a persistent volume can be provisioned",
    "start": "1892080",
    "end": "1898559"
  },
  {
    "text": "dynamically or can be pre-existing so",
    "start": "1898559",
    "end": "1904480"
  },
  {
    "text": "for snapshots pre-provision or already existing mean that you can",
    "start": "1904480",
    "end": "1911120"
  },
  {
    "text": "link a volume snapshot object again which is the request to an existing",
    "start": "1911120",
    "end": "1917519"
  },
  {
    "text": "snapshot that has been taken maybe by your storage array so effectively",
    "start": "1917519",
    "end": "1922880"
  },
  {
    "text": "representing the external snapshot taken from the storage array",
    "start": "1922880",
    "end": "1928080"
  },
  {
    "text": "into a kubernetes first class citizen but most of the time of course",
    "start": "1928080",
    "end": "1933760"
  },
  {
    "text": "if the csi driver supports it when you will create a volume snapshot",
    "start": "1933760",
    "end": "1939200"
  },
  {
    "text": "the corresponding real snapshot the physical snapshot will be created",
    "start": "1939200",
    "end": "1944480"
  },
  {
    "text": "and will correspond to the volume snapshot content so obviously",
    "start": "1944480",
    "end": "1950320"
  },
  {
    "text": "snapshots are asynchronous that means they represent",
    "start": "1950320",
    "end": "1957760"
  },
  {
    "text": "at a particular time the content of the data",
    "start": "1957760",
    "end": "1965919"
  },
  {
    "text": "it's not a synchronous replication that is happening",
    "start": "1965919",
    "end": "1972000"
  },
  {
    "text": "continuously over time and that may be an issue in case of",
    "start": "1972000",
    "end": "1978240"
  },
  {
    "text": "um rpo that needs to be equal to zero so rpo or",
    "start": "1978240",
    "end": "1984000"
  },
  {
    "text": "recovery point objective is the representation of the data",
    "start": "1984000",
    "end": "1990480"
  },
  {
    "text": "then you can afford losing in case of",
    "start": "1990480",
    "end": "1995600"
  },
  {
    "text": "failure right so if you have an rpo equal to zero it means that you need",
    "start": "1995600",
    "end": "2001600"
  },
  {
    "text": "something um more synchronous",
    "start": "2001600",
    "end": "2006880"
  },
  {
    "text": "than a snapshot basically you need a representation",
    "start": "2006880",
    "end": "2011919"
  },
  {
    "text": "a continuous representation of your data over time and this is the type of thing that are",
    "start": "2011919",
    "end": "2019200"
  },
  {
    "start": "2017000",
    "end": "2017000"
  },
  {
    "text": "not um or cannot be represented directly or are not available directly",
    "start": "2019200",
    "end": "2025919"
  },
  {
    "text": "in kubernetes but by using particular csi drivers that can",
    "start": "2025919",
    "end": "2032720"
  },
  {
    "text": "produce and provide actually that feature on top of the",
    "start": "2032720",
    "end": "2037760"
  },
  {
    "text": "additional [Music] functions that are required by the",
    "start": "2037760",
    "end": "2043279"
  },
  {
    "text": "kubernetes api well the csi driver can itself deliver synchronous replication",
    "start": "2043279",
    "end": "2050079"
  },
  {
    "text": "so this is the case of the on that csi that is represented here on the screen",
    "start": "2050079",
    "end": "2057118"
  },
  {
    "text": "but other open source csi drivers like open ebs",
    "start": "2057119",
    "end": "2063440"
  },
  {
    "text": "can also support replication it's just to give you an example of how it can be delivered",
    "start": "2063440",
    "end": "2070878"
  },
  {
    "text": "so the idea here is to provide this additional capability",
    "start": "2070879",
    "end": "2076079"
  },
  {
    "text": "by giving the user the ability to configure",
    "start": "2076079",
    "end": "2082000"
  },
  {
    "text": "as yaml or in a declarative format to configure the",
    "start": "2082000",
    "end": "2087679"
  },
  {
    "text": "number of replicas on the per volume basis so that when a node fail even",
    "start": "2087679",
    "end": "2093440"
  },
  {
    "text": "though the storage is locally attached it's effectively aggregated",
    "start": "2093440",
    "end": "2099200"
  },
  {
    "text": "as a pool of available storage and every volume that is",
    "start": "2099200",
    "end": "2104640"
  },
  {
    "text": "consumed within that pool is also replicated on a set of other nodes",
    "start": "2104640",
    "end": "2110320"
  },
  {
    "text": "so when the node fails the pod can be restarted on another node where",
    "start": "2110320",
    "end": "2115680"
  },
  {
    "text": "the volume of replicas can in turn be promoted as the new",
    "start": "2115680",
    "end": "2122079"
  },
  {
    "text": "the new primary volume and this is what will enable you to",
    "start": "2122079",
    "end": "2128240"
  },
  {
    "text": "seamlessly recover in case of no failure with effectively zero data",
    "start": "2128240",
    "end": "2135680"
  },
  {
    "text": "loss okay so so far we've seen different paradigms",
    "start": "2135680",
    "end": "2141280"
  },
  {
    "text": "snapshots asynchronous synchronous application for zero or po",
    "start": "2141280",
    "end": "2148160"
  },
  {
    "text": "but fundamentally there is also something else which is creating backup from your",
    "start": "2148160",
    "end": "2154240"
  },
  {
    "text": "snapshot so your snapshot as such um are living",
    "start": "2154240",
    "end": "2159599"
  },
  {
    "text": "within kubernetes so in case of failure of course if you want to restore you need to restore from",
    "start": "2159599",
    "end": "2166720"
  },
  {
    "text": "a storage repository that is still available so typically you want to",
    "start": "2166720",
    "end": "2171839"
  },
  {
    "text": "externalize your snapshot and copy the data into an external storage repository like",
    "start": "2171839",
    "end": "2179440"
  },
  {
    "text": "aws s3 or google storage and again you can do these operations",
    "start": "2179440",
    "end": "2187359"
  },
  {
    "start": "2184000",
    "end": "2184000"
  },
  {
    "text": "without leaving kubernetes with again the same principle leveraging",
    "start": "2187359",
    "end": "2192720"
  },
  {
    "text": "controllers crds and the operator model so in our particular example we'll take",
    "start": "2192720",
    "end": "2199520"
  },
  {
    "text": "a look at canister which is an open tool by an open source tool by",
    "start": "2199520",
    "end": "2205280"
  },
  {
    "text": "casting and is effectively composed of crds",
    "start": "2205280",
    "end": "2210400"
  },
  {
    "text": "controller as well as a command line that we're going to explore in a minute at the center of the canister",
    "start": "2210400",
    "end": "2217920"
  },
  {
    "text": "architecture we have multiple crds including the blueprint which is",
    "start": "2217920",
    "end": "2224720"
  },
  {
    "text": "a custom resource defined as a set of instruction that",
    "start": "2224720",
    "end": "2229920"
  },
  {
    "text": "tell the canister controller how to perform actions on a specific application",
    "start": "2229920",
    "end": "2236000"
  },
  {
    "text": "they are typically a curated set of manifests that are maintained by the",
    "start": "2236000",
    "end": "2242079"
  },
  {
    "text": "community so every application will have a corresponding blueprint that will",
    "start": "2242079",
    "end": "2249119"
  },
  {
    "text": "encapsulate actions such as how to quiz the file system or the database etc",
    "start": "2249119",
    "end": "2258480"
  },
  {
    "text": "then as another set of custom resources",
    "start": "2258480",
    "end": "2263760"
  },
  {
    "text": "we have action sets which define actions that can be triggered",
    "start": "2263760",
    "end": "2270480"
  },
  {
    "text": "by the creation of the corresponding you know custom resource manifests so",
    "start": "2270480",
    "end": "2276480"
  },
  {
    "text": "typically if you want to do a backup or a restore actions you will do that by",
    "start": "2276480",
    "end": "2284160"
  },
  {
    "text": "creating those manifests and to help with the life cycle of those",
    "start": "2284160",
    "end": "2291280"
  },
  {
    "text": "custom resources you can also use a command line called can ctl",
    "start": "2291280",
    "end": "2298000"
  },
  {
    "text": "which can be used in dry mode to generate a different manifest and then",
    "start": "2298000",
    "end": "2303599"
  },
  {
    "text": "those manifest can be applied to the kubernetes cluster using coop ctl or you can just use ken ctl",
    "start": "2303599",
    "end": "2311280"
  },
  {
    "text": "without the driver an option and it will directly create those crds into",
    "start": "2311280",
    "end": "2317280"
  },
  {
    "text": "your kubernetes cluster so here we have an example for",
    "start": "2317280",
    "end": "2323119"
  },
  {
    "text": "the elasticsearch application the first thing you're going to do",
    "start": "2323119",
    "end": "2328160"
  },
  {
    "text": "in the workflow is to create a profile that encapsulate the information required to create",
    "start": "2328160",
    "end": "2335920"
  },
  {
    "text": "a remote storage location in that particular example we are using gcp and",
    "start": "2335920",
    "end": "2343200"
  },
  {
    "text": "cloud storage to externalize the data that we are going to backup from elasticsearch so it",
    "start": "2343200",
    "end": "2349760"
  },
  {
    "text": "encapsulates the information required to configure the xml bucket as well as the",
    "start": "2349760",
    "end": "2356880"
  },
  {
    "text": "corresponding credentials then once the profile has been created",
    "start": "2356880",
    "end": "2362720"
  },
  {
    "text": "you're going to create the blueprint that is available you know",
    "start": "2362720",
    "end": "2368640"
  },
  {
    "text": "publicly that is really specific to elasticsearch and defined how to perform",
    "start": "2368640",
    "end": "2375760"
  },
  {
    "text": "action on that particular application then we can use can ctl",
    "start": "2375760",
    "end": "2382480"
  },
  {
    "text": "with dry run mode uh to generate the the the manifest for the backup action set and later apply it",
    "start": "2382480",
    "end": "2390160"
  },
  {
    "text": "with ctl or here in the example we just use canned ctl without the driver mode",
    "start": "2390160",
    "end": "2396560"
  },
  {
    "text": "and that will directly create and push the manifest into your communities cluster",
    "start": "2396560",
    "end": "2402720"
  },
  {
    "text": "so here we specify the action set as backup we specify the blueprint that we",
    "start": "2402720",
    "end": "2408640"
  },
  {
    "text": "just created we specify the stateful set that is basically",
    "start": "2408640",
    "end": "2414560"
  },
  {
    "text": "representing the application that we want to backup so default elasticsearch",
    "start": "2414560",
    "end": "2419680"
  },
  {
    "text": "master represents the namespace and the name of the stateful set and finally we also reference the",
    "start": "2419680",
    "end": "2427520"
  },
  {
    "text": "profile that defines where we want to store our backup content",
    "start": "2427520",
    "end": "2434079"
  },
  {
    "text": "so once the action set has been created the manifest push to kubernetes the",
    "start": "2434079",
    "end": "2439200"
  },
  {
    "text": "controller will react to that and trigger effectively a backup",
    "start": "2439200",
    "end": "2444240"
  },
  {
    "text": "that you you can monitor in terms of the status using coupe ctl as well so just",
    "start": "2444240",
    "end": "2450240"
  },
  {
    "text": "monitoring that particular custom resource you will see once",
    "start": "2450240",
    "end": "2455280"
  },
  {
    "text": "you will be updated once the the backup has been completed and then in case of",
    "start": "2455280",
    "end": "2462240"
  },
  {
    "text": "disaster you and you want to restore the content of um of the remote location then again",
    "start": "2462240",
    "end": "2470480"
  },
  {
    "text": "you can just use can ctl as displayed here on the screen specify the namespace",
    "start": "2470480",
    "end": "2477040"
  },
  {
    "text": "create the action set this time the action set is restored and from the",
    "start": "2477040",
    "end": "2482800"
  },
  {
    "text": "backup name which is basically the name that has been",
    "start": "2482800",
    "end": "2489280"
  },
  {
    "text": "returned by the previous command when triggering the backup action set",
    "start": "2489280",
    "end": "2495200"
  },
  {
    "text": "and again it's a crds you can monitor the progress of the restore by using kubectl to",
    "start": "2495200",
    "end": "2503200"
  },
  {
    "text": "monitor the status of that particular crds and at some point the data the initial data",
    "start": "2503200",
    "end": "2509920"
  },
  {
    "text": "will be restored in the right place so that concludes our presentation for",
    "start": "2509920",
    "end": "2517200"
  },
  {
    "start": "2515000",
    "end": "2515000"
  },
  {
    "text": "today hopefully you learned something and it's been useful a couple of key takeaways",
    "start": "2517200",
    "end": "2524960"
  },
  {
    "text": "before moving on kubernetes is ready for stateful application with cloud native data this is a very",
    "start": "2524960",
    "end": "2532240"
  },
  {
    "text": "important point it has evolved over time so now it's not only about",
    "start": "2532240",
    "end": "2537920"
  },
  {
    "text": "cattle you can also run pets in cobilities but the key is to make sure that you can",
    "start": "2537920",
    "end": "2544720"
  },
  {
    "text": "reach the right level of availability scale and performance",
    "start": "2544720",
    "end": "2550800"
  },
  {
    "text": "and we've addressed today some of the challenges for persistent storage",
    "start": "2550800",
    "end": "2557520"
  },
  {
    "text": "and as you've seen they are not all addressed by default in kubernetes",
    "start": "2557520",
    "end": "2562720"
  },
  {
    "text": "especially when it comes to zero rpo and synchronous replication",
    "start": "2562720",
    "end": "2567760"
  },
  {
    "text": "and even when you have a csi driver that can provide",
    "start": "2567760",
    "end": "2573599"
  },
  {
    "text": "snapshots you also need to backup those nutshop those snapshots",
    "start": "2573599",
    "end": "2579040"
  },
  {
    "text": "into a remote location and this is where you may want to use again kubernetes native tools such as",
    "start": "2579040",
    "end": "2587359"
  },
  {
    "text": "canisters or valero or others and this is made possible by",
    "start": "2587359",
    "end": "2594000"
  },
  {
    "text": "extending kubernetes for data protection and making data protection first class",
    "start": "2594000",
    "end": "2600640"
  },
  {
    "text": "citizen in capabilities thanks to the ability of capabilities to extend its apis",
    "start": "2600640",
    "end": "2608960"
  },
  {
    "text": "so finally you want to make sure that your csi driver can protect your can",
    "start": "2608960",
    "end": "2614480"
  },
  {
    "text": "protect your stateful workloads in case of node failure or also cloud outage and",
    "start": "2614480",
    "end": "2620880"
  },
  {
    "text": "possibly a baby availability zone outage too",
    "start": "2620880",
    "end": "2626000"
  },
  {
    "text": "now a call to actions for you if you want to learn more about data on",
    "start": "2626000",
    "end": "2632160"
  },
  {
    "text": "kubernetes and how to run your stateful application and your stateful workload and kubernetes please",
    "start": "2632160",
    "end": "2639359"
  },
  {
    "text": "join the dok or data on kubernetes community you have the link there i'm",
    "start": "2639359",
    "end": "2645440"
  },
  {
    "text": "personally running the dok london meetup so if you're local",
    "start": "2645440",
    "end": "2650480"
  },
  {
    "text": "to the uk you can go and subscribe to the meetup page so that you are",
    "start": "2650480",
    "end": "2657200"
  },
  {
    "text": "always up to date when it comes to the next dates for our needs meetup the next",
    "start": "2657200",
    "end": "2662480"
  },
  {
    "text": "one will be it's in september so if you're local don't hesitate to join us",
    "start": "2662480",
    "end": "2668880"
  },
  {
    "text": "also if you want to learn more about on that and on our csi capabilities you",
    "start": "2668880",
    "end": "2675680"
  },
  {
    "text": "have a set of links there that you can go to for more information",
    "start": "2675680",
    "end": "2681040"
  },
  {
    "text": "i hope you enjoyed this presentation i wish you",
    "start": "2681040",
    "end": "2686240"
  },
  {
    "text": "a good day and take care of yourself see you next time",
    "start": "2686240",
    "end": "2692920"
  }
]