[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "thanks for coming everybody so this talk is about enforcing em TLS using linker D",
    "start": "30",
    "end": "7170"
  },
  {
    "text": "and OPA gatekeeper just by way of it",
    "start": "7170",
    "end": "12210"
  },
  {
    "text": "giving us a chance to get to know you folks better how many of us are currently using link to D by show of",
    "start": "12210",
    "end": "19380"
  },
  {
    "text": "hands a number of you how many of you are currently currently using open gate",
    "start": "19380",
    "end": "24750"
  },
  {
    "text": "keeper okay great cool you folks are in the right place so",
    "start": "24750",
    "end": "32610"
  },
  {
    "start": "31000",
    "end": "84000"
  },
  {
    "text": "here's the outline for the top we're gonna start off by presenting a very",
    "start": "32610",
    "end": "38070"
  },
  {
    "text": "high-level description of the problem and solution that the rest of the talk is going to focus on and then we are",
    "start": "38070",
    "end": "45840"
  },
  {
    "text": "going to break the ice a bit by introducing ourselves then from there",
    "start": "45840",
    "end": "51120"
  },
  {
    "text": "we're gonna spend a very short amount of time talking about why you sling caddy for your M TLS stuff and then we're",
    "start": "51120",
    "end": "59039"
  },
  {
    "text": "gonna dive into a time of demo where we will use linker D to row out M TLS on a kubernetes cluster and once mtrs is",
    "start": "59039",
    "end": "67650"
  },
  {
    "text": "rollout we will use the OPA gatekeeper to define and enforce em TLS policies",
    "start": "67650",
    "end": "73320"
  },
  {
    "text": "during what will omission so finally we're gonna conclude with some closing",
    "start": "73320",
    "end": "78900"
  },
  {
    "text": "thoughts and there will be a time of Q&A towards the end so all of us come to",
    "start": "78900",
    "end": "85439"
  },
  {
    "text": "cube Con because there is a set of problems that we really want to solve I assume the reason you are here this",
    "start": "85439",
    "end": "92100"
  },
  {
    "text": "afternoon is because one of the problems you need to tackle we walk around",
    "start": "92100",
    "end": "97170"
  },
  {
    "text": "securing it's west traffic within your kubernetes clusters with encryptions and",
    "start": "97170",
    "end": "102710"
  },
  {
    "text": "identity based authentication so there",
    "start": "102710",
    "end": "108390"
  },
  {
    "text": "are a number of things that you need to take into consideration when securing the in clusters our service to service communication but we believe MPLS is",
    "start": "108390",
    "end": "117270"
  },
  {
    "text": "going to play a very crucial part in that part of your security journey so",
    "start": "117270",
    "end": "124770"
  },
  {
    "start": "123000",
    "end": "145000"
  },
  {
    "text": "this is Ivan Singh he is a software engineer at buoyant and he's lady contributor and sharing the stage",
    "start": "124770",
    "end": "132450"
  },
  {
    "text": "with me this afternoon is Rita Jiang she's a software engineer from Microsoft and she's a maintainer of the open gate",
    "start": "132450",
    "end": "139890"
  },
  {
    "text": "keeper project so what is M TLS mutual",
    "start": "139890",
    "end": "145590"
  },
  {
    "start": "145000",
    "end": "168000"
  },
  {
    "text": "TLS not to be confused with multiplex cos the put it simply is that process",
    "start": "145590",
    "end": "151319"
  },
  {
    "text": "where two entities try to confirm each other's identity using TLS some",
    "start": "151319",
    "end": "157620"
  },
  {
    "text": "certificates now we can all read about the details of MPLS in the TOS RFC under",
    "start": "157620",
    "end": "165090"
  },
  {
    "text": "the TLS handshake protocol section but to again to put it simply M TLS",
    "start": "165090",
    "end": "171840"
  },
  {
    "start": "168000",
    "end": "208000"
  },
  {
    "text": "introduces a number of additional steps into the well-known TLS handshake process a protocol rather whereby the",
    "start": "171840",
    "end": "180420"
  },
  {
    "text": "server after issuing us and responding with a server hallow request and the",
    "start": "180420",
    "end": "186629"
  },
  {
    "text": "server certificate it also issue a request to the client and said hey wait a minute before we continue",
    "start": "186629",
    "end": "192090"
  },
  {
    "text": "show me your client certificate and after both parties receive each other's certificates they will attempt to verify",
    "start": "192090",
    "end": "199470"
  },
  {
    "text": "and confirm each other's identity by checking the digital signatures within the cert are you who you claim you are",
    "start": "199470",
    "end": "207769"
  },
  {
    "start": "208000",
    "end": "295000"
  },
  {
    "text": "so drawing from personal experience rolling our M TLS is not as simple as",
    "start": "209090",
    "end": "214739"
  },
  {
    "text": "one would hope now surprisingly though the problem is not usually non-technical",
    "start": "214739",
    "end": "221329"
  },
  {
    "text": "for my personal experience like rolling our mtrs involve challenges around keeping track",
    "start": "221329",
    "end": "227879"
  },
  {
    "text": "of all the assets the keys and the certificates where did they come from who created them and when they were",
    "start": "227879",
    "end": "235440"
  },
  {
    "text": "created what sort of configurations went into the tools can you trust the tools if the assets are stored in the vaults",
    "start": "235440",
    "end": "242069"
  },
  {
    "text": "who have access to those walls and when the CS the certificate signing request was first issue",
    "start": "242069",
    "end": "247709"
  },
  {
    "text": "what sort of settings went in there the other challenge that I had personally",
    "start": "247709",
    "end": "253650"
  },
  {
    "text": "experienced is getting everyone on board saying yeah you have service air trying to talk to service B via TLS can you can",
    "start": "253650",
    "end": "260609"
  },
  {
    "text": "we ensure that they both got at the same time if service is TLS and",
    "start": "260609",
    "end": "265620"
  },
  {
    "text": "the other one doesn't there needs to be some sort of stopgap solution in between but for how long for how many releases",
    "start": "265620",
    "end": "271340"
  },
  {
    "text": "and for those of us who manage and implement our own account certificate",
    "start": "271340",
    "end": "277229"
  },
  {
    "text": "authority solution I'm sure we can appreciate that amount of time and effort goes into maintaining these",
    "start": "277229",
    "end": "283169"
  },
  {
    "text": "components what if they're vulnerable these within your see a solution how",
    "start": "283169",
    "end": "289020"
  },
  {
    "text": "fixing and patching that affect the rest of your production workload so why use",
    "start": "289020",
    "end": "297810"
  },
  {
    "start": "295000",
    "end": "384000"
  },
  {
    "text": "linka d4m TOS why trust Lincoln D well for one I'm biased but I do think it is",
    "start": "297810",
    "end": "305069"
  },
  {
    "text": "secure just couple of months ago like yeah we link here the pass time penetration test and security audit code",
    "start": "305069",
    "end": "312360"
  },
  {
    "text": "audit conducted by a third-party company secure security company sponsored by the",
    "start": "312360",
    "end": "317849"
  },
  {
    "text": "Linux Foundation is the SEF and the team is proud to share that we passed the test with flying colors and you can read",
    "start": "317849",
    "end": "324690"
  },
  {
    "text": "about all the details of the audit in that link there and in addition lickity",
    "start": "324690",
    "end": "331169"
  },
  {
    "text": "also provides a simple and consistent way to row our MPLS a workload is either",
    "start": "331169",
    "end": "337500"
  },
  {
    "text": "in the mash or not in the mash and there's only one way to top in and there's only one way to opt-out an MTS",
    "start": "337500",
    "end": "344729"
  },
  {
    "text": "is enabled by default with zero config so no yeah Mo's and you guys may have",
    "start": "344729",
    "end": "351300"
  },
  {
    "text": "fun note notice that done this morning during the keynotes in the next couple releases we are going to make an TRS and",
    "start": "351300",
    "end": "357870"
  },
  {
    "text": "mandatory thing then you will work by default and it will continue to work by default and you will continue to work",
    "start": "357870",
    "end": "363569"
  },
  {
    "text": "seamlessly for all your workloads link it is also very scalable I know of one",
    "start": "363569",
    "end": "369840"
  },
  {
    "text": "user in our community who is using link Adi to support a production workload of three thousand and five hundred parts",
    "start": "369840",
    "end": "376319"
  },
  {
    "text": "and all of them are injected with the link of the proxies communicating via an",
    "start": "376319",
    "end": "381360"
  },
  {
    "text": "MPLS so what is link adiy it is an open",
    "start": "381360",
    "end": "388080"
  },
  {
    "start": "384000",
    "end": "404000"
  },
  {
    "text": "source service mash prod solution for kubernetes it is a CN CF project and it",
    "start": "388080",
    "end": "394650"
  },
  {
    "text": "offers an array of really cool feature for the purpose of this talk we are just going to focus on the automatic mpls",
    "start": "394650",
    "end": "401640"
  },
  {
    "text": "part so we're gonna switch over to a demo time",
    "start": "401640",
    "end": "407280"
  },
  {
    "start": "404000",
    "end": "739000"
  },
  {
    "text": "you mean the first part of the demo we are going to need to deploy two namespaces on the left is the link of",
    "start": "407280",
    "end": "414330"
  },
  {
    "text": "the control plane namespace with all the link in the control plane parts in there and to the right we are going to deploy",
    "start": "414330",
    "end": "420090"
  },
  {
    "text": "an insecure emoji application made out of four deployments and then we are",
    "start": "420090",
    "end": "426030"
  },
  {
    "text": "going to use some something called case sniff to perform a man-in-the-middle interception to sniff the traffic that",
    "start": "426030",
    "end": "432450"
  },
  {
    "text": "goes in and out of the web component and then we're gonna secure the insecure",
    "start": "432450",
    "end": "439110"
  },
  {
    "text": "emoji application by injecting the link of the proxy and then we will see how the mtrs got automatically deployed and",
    "start": "439110",
    "end": "446190"
  },
  {
    "text": "secure and encrypt all the traffic switch over to my terminals now and run",
    "start": "446190",
    "end": "454770"
  },
  {
    "text": "ten more time and run our script I want to make sure I am connected to my mini",
    "start": "454770",
    "end": "459960"
  },
  {
    "text": "cube incident yeah all right so first let's deploy the blue emoji app and as",
    "start": "459960",
    "end": "469800"
  },
  {
    "text": "you can see first we dump a bunch of components that is part of the",
    "start": "469800",
    "end": "474990"
  },
  {
    "text": "application and as the pot is coming up",
    "start": "474990",
    "end": "481069"
  },
  {
    "text": "next we're gonna actually install a Cardian in the cluster for the very",
    "start": "481940",
    "end": "487140"
  },
  {
    "text": "first time and as you can see linked ID has a really nice install CLI and one",
    "start": "487140",
    "end": "493500"
  },
  {
    "text": "command and you get everything out of the box just really nice so here we're",
    "start": "493500",
    "end": "500610"
  },
  {
    "text": "gonna run the control playing status command just to check the status of all the link ad components make sure they",
    "start": "500610",
    "end": "507180"
  },
  {
    "text": "all come up successfully it's the",
    "start": "507180",
    "end": "512310"
  },
  {
    "text": "terminal if I am is that I think it's a bug in the game the care console if I like and launch this if I change the",
    "start": "512310",
    "end": "520289"
  },
  {
    "text": "font size that I keep repeating my counter the standard output here but I assure you this is waiting for the",
    "start": "520289",
    "end": "526320"
  },
  {
    "text": "Prometheus and container to come up so what this has happening I can show you guys what that that emoji",
    "start": "526320",
    "end": "537830"
  },
  {
    "text": "application looks like I think we so",
    "start": "537830",
    "end": "543959"
  },
  {
    "text": "again nothing surprising there it's just an application that with web front and to backends that allows us to vote for",
    "start": "543959",
    "end": "552390"
  },
  {
    "text": "our favorite emojis and one of the donor emoji is intentionally broken just to",
    "start": "552390",
    "end": "557940"
  },
  {
    "text": "generate like I'm some faults and errors in there alright let's come back okay",
    "start": "557940",
    "end": "564740"
  },
  {
    "text": "the control point components are all up and running next we're gonna use case",
    "start": "564740",
    "end": "570360"
  },
  {
    "text": "nib which is a cube CTL plugin that allows us to use TCP dump and wire",
    "start": "570360",
    "end": "576660"
  },
  {
    "text": "shards to actually look at the traffic from our pot and we can actually sniff the traffic that allows us to actually",
    "start": "576660",
    "end": "583440"
  },
  {
    "text": "see the payload and if I'm a bad guy I should be able to see all this stuff in",
    "start": "583440",
    "end": "588570"
  },
  {
    "text": "clear text right mm-hmm all right so this is running we're gonna start up",
    "start": "588570",
    "end": "594420"
  },
  {
    "text": "wireshark I think mm-hmm trying to finally alter network interfaces",
    "start": "594420",
    "end": "600050"
  },
  {
    "text": "now you're gonna filter the requests so we're gonna look at or the 200 responses",
    "start": "600050",
    "end": "606750"
  },
  {
    "text": "that come back from the backends and not surprisingly we can see all the data",
    "start": "606750",
    "end": "611910"
  },
  {
    "text": "look at that imagine this is your password or your credit card number but",
    "start": "611910",
    "end": "618540"
  },
  {
    "text": "for now this is emojis my apologies for those of you at the back I think like",
    "start": "618540",
    "end": "624899"
  },
  {
    "text": "I'm the resolution may not be great I tried to fiddle around with the wires on UI but hopefully you can see part of it",
    "start": "624899",
    "end": "633589"
  },
  {
    "text": "so I'm gonna exit out of Wireshark okay",
    "start": "633589",
    "end": "641130"
  },
  {
    "text": "so next we're gonna run link ID and direct to see if we can actually inject",
    "start": "641130",
    "end": "646350"
  },
  {
    "text": "a link or a proxy into our application and this should actually automatically",
    "start": "646350",
    "end": "652490"
  },
  {
    "text": "enable em TLS for our service of our components and as you can see length of",
    "start": "652490",
    "end": "659120"
  },
  {
    "text": "the inject actually injects a psych psych our proxy container into that each",
    "start": "659120",
    "end": "665450"
  },
  {
    "text": "component and as this is updating we see that it now has two containers as",
    "start": "665450",
    "end": "672380"
  },
  {
    "text": "opposed to the previous installation has one and so now you see the proxy sidecar",
    "start": "672380",
    "end": "677390"
  },
  {
    "text": "has been added so next we're gonna use the same sniff command and now we're",
    "start": "677390",
    "end": "684710"
  },
  {
    "text": "look at the exact same application and let's see if we can still get the",
    "start": "684710",
    "end": "690110"
  },
  {
    "text": "content from wire sharp",
    "start": "690110",
    "end": "694690"
  },
  {
    "text": "I'm gonna pass a little bit so right away you can see all the application",
    "start": "701360",
    "end": "706430"
  },
  {
    "text": "data they are now encrypted so you can no longer see my favorite emoji me being",
    "start": "706430",
    "end": "712990"
  },
  {
    "text": "so so yeah and all that this happens",
    "start": "712990",
    "end": "718610"
  },
  {
    "text": "with just me typing in that come the link of the inject man and receiving",
    "start": "718610",
    "end": "724730"
  },
  {
    "text": "like I'm the deployment llamo offer live deployments so how is it going to be",
    "start": "724730",
    "end": "730850"
  },
  {
    "text": "able to do this good question it's Oh magic nah it's really simple actually",
    "start": "730850",
    "end": "739970"
  },
  {
    "text": "so what happened when we run the linker the injection so reading we reading this diagram from left to right so when we we",
    "start": "739970",
    "end": "748550"
  },
  {
    "text": "run like him the linker the inject command on like a yam or workload nginx or my sequel or whatever is in the CLI",
    "start": "748550",
    "end": "755990"
  },
  {
    "text": "simply no taste on the yamo with a special annotation and that is enough to tell the api server to call into the",
    "start": "755990",
    "end": "765230"
  },
  {
    "text": "omission web hook so what so with the mutated yamo we pipe it into cube how to",
    "start": "765230",
    "end": "770270"
  },
  {
    "text": "apply which sends the object to the api server in the api server takes the",
    "start": "770270",
    "end": "775910"
  },
  {
    "text": "kubernetes object i mean yeah the object through what we call the emission phase and during the mutating phase the api",
    "start": "775910",
    "end": "783620"
  },
  {
    "text": "server actually calls out to the linker the proxy injector deployment which is an emission web hook and the proxy",
    "start": "783620",
    "end": "790910"
  },
  {
    "text": "injector take the object mutated by inserting an additional citecar which is the link of the proxy sidecar into the",
    "start": "790910",
    "end": "797480"
  },
  {
    "text": "object and return the mutated object back to the api server and the api",
    "start": "797480",
    "end": "803630"
  },
  {
    "text": "server takes a mutator object and allows it to pass through the rest of the emission phase and eventually persist it",
    "start": "803630",
    "end": "809570"
  },
  {
    "text": "in a CD and this whole emission phase is it happens every time when you type keep",
    "start": "809570",
    "end": "815990"
  },
  {
    "text": "how to apply or Cupido run so what",
    "start": "815990",
    "end": "821029"
  },
  {
    "text": "happened after a service or an application is injected with the link of",
    "start": "821029",
    "end": "826070"
  },
  {
    "text": "the proxy again reading this diagram from left to right as part of the proxy startup process it will issue a",
    "start": "826070",
    "end": "832550"
  },
  {
    "text": "certificate signing request and send it to the identity service which is the internal certificate",
    "start": "832550",
    "end": "839600"
  },
  {
    "text": "authority component of the control plane so the proxy actually embeds is identity",
    "start": "839600",
    "end": "845570"
  },
  {
    "text": "into that signing request and they also said along the service account token to",
    "start": "845570",
    "end": "851570"
  },
  {
    "text": "the identity service so essentially we take we bind the identity the proxy the",
    "start": "851570",
    "end": "856880"
  },
  {
    "text": "proxies identity to the service account that the pod is using and then the",
    "start": "856880",
    "end": "863090"
  },
  {
    "text": "identity service from there we'll issue an API call to the API server via the",
    "start": "863090",
    "end": "868250"
  },
  {
    "text": "token review API and he says hey I just received in service account token is a legit and if the response that goes back",
    "start": "868250",
    "end": "876800"
  },
  {
    "text": "to the identity service is positive the identity services can assign the signing",
    "start": "876800",
    "end": "881810"
  },
  {
    "text": "request and then issue a tiara assert to the to the link add a proxy and then and",
    "start": "881810",
    "end": "887600"
  },
  {
    "text": "only then will the link in the proxy mark itself as ready to to send and receive from traffic and by default like",
    "start": "887600",
    "end": "896300"
  },
  {
    "text": "the proxy will auto rotate on the TLS cert every 24 hours and that value is configurable and it does that by issuing",
    "start": "896300",
    "end": "904610"
  },
  {
    "text": "a new CSR every 24 hours I want to stress that also like the private key",
    "start": "904610",
    "end": "909770"
  },
  {
    "text": "that was used to sign the CSR its historian memory and he lives and dives the proxy so he never leaves account",
    "start": "909770",
    "end": "916160"
  },
  {
    "text": "that the container or the pod now so how",
    "start": "916160",
    "end": "921500"
  },
  {
    "start": "920000",
    "end": "962000"
  },
  {
    "text": "does the proxy knows about his identity I mentioned earlier that we bind the proxies identity with this kubernetes",
    "start": "921500",
    "end": "927260"
  },
  {
    "text": "service account that a part of the users so there are a number of environment",
    "start": "927260",
    "end": "932360"
  },
  {
    "text": "variables which we defined as part of the proxy containers back so this will tell the aprox is your identity local",
    "start": "932360",
    "end": "939740"
  },
  {
    "text": "name is that second environment variable there and then this is where you can find a service account token file this",
    "start": "939740",
    "end": "945680"
  },
  {
    "text": "is the trust route that you can use for future communication and this is the endpoint of the identity service so just",
    "start": "945680",
    "end": "951920"
  },
  {
    "text": "very straightforward and it's something that you can just look at and debug if",
    "start": "951920",
    "end": "957160"
  },
  {
    "text": "something goes wrong and of course nothing goes wrong as we all know it and",
    "start": "957160",
    "end": "962930"
  },
  {
    "start": "962000",
    "end": "1029000"
  },
  {
    "text": "then what happened now when to injected proxies trying to talk to each other again reading this from",
    "start": "962930",
    "end": "968329"
  },
  {
    "text": "- right if I have a injector full-service trying to talk to an injector bar service the first thing the",
    "start": "968329",
    "end": "975589"
  },
  {
    "text": "food processor is going to do is gonna issue a lookup request to the destination service in the control plane",
    "start": "975589",
    "end": "982249"
  },
  {
    "text": "and you will say hey help me to look at where bar dot NS s and then the",
    "start": "982249",
    "end": "988279"
  },
  {
    "text": "destination service is going to issue like a call to the kubernetes api service and say get me the endpoints and",
    "start": "988279",
    "end": "994369"
  },
  {
    "text": "all the IP addresses and we receive that information and then you package it up",
    "start": "994369",
    "end": "999980"
  },
  {
    "text": "into something that we call service profile and then send it back to the fou-fou proxy and now the food processor",
    "start": "999980",
    "end": "1006970"
  },
  {
    "text": "will know okay the the bar proxy is at 10.0 tens one two and you also have some",
    "start": "1006970",
    "end": "1012610"
  },
  {
    "text": "extra information about it can the bar proxy participate in TLS for example can",
    "start": "1012610",
    "end": "1019420"
  },
  {
    "text": "it do retries we can like start doing like NGO RPC load balancing there that sort of things so from there like um",
    "start": "1019420",
    "end": "1026350"
  },
  {
    "text": "that here are some handshake we just start so if I were to switch back over",
    "start": "1026350",
    "end": "1031808"
  },
  {
    "start": "1029000",
    "end": "1071000"
  },
  {
    "text": "to my mini cubed constant right now and I type in cube color apply or keep I'll run you will see that I can't deploy any",
    "start": "1031809",
    "end": "1038529"
  },
  {
    "text": "and every sort of workload to my cluster again probably what we don't want for",
    "start": "1038529",
    "end": "1044740"
  },
  {
    "text": "our production environment right so currently like I'm in Lincoln D there is no way to define and enforce policies",
    "start": "1044740",
    "end": "1053399"
  },
  {
    "text": "saying that only this kind of workload with certain labels and annotations can",
    "start": "1053399",
    "end": "1058929"
  },
  {
    "text": "enter into the mash or can be deployed into on to the cluster and this is where",
    "start": "1058929",
    "end": "1064299"
  },
  {
    "text": "we feel like an open gate keeper it's gonna fit in nicely to solve the problem",
    "start": "1064299",
    "end": "1069929"
  },
  {
    "text": "all right so how many of you have heard about open this morning how evasive it is right so we are taking",
    "start": "1070440",
    "end": "1079539"
  },
  {
    "start": "1071000",
    "end": "1202000"
  },
  {
    "text": "this opportunity to talk about gatekeeper which is basically the customizable kubernetes admission",
    "start": "1079539",
    "end": "1085750"
  },
  {
    "text": "webhook that allows you that helps you enforce policies in your organization",
    "start": "1085750",
    "end": "1090760"
  },
  {
    "text": "and also strengthen governance of all the clusters that you have to manage so again it's based on an OPA",
    "start": "1090760",
    "end": "1098760"
  },
  {
    "text": "and it is something that is creative so that you the administrator can can",
    "start": "1098760",
    "end": "1103830"
  },
  {
    "text": "create and define your policies via configurations not code and let's talk",
    "start": "1103830",
    "end": "1110220"
  },
  {
    "text": "about some of the motivations behind the project so I know a lot of companies probably have a lot of policies that",
    "start": "1110220",
    "end": "1116520"
  },
  {
    "text": "they have in in place and a lot of Menace traders really want a way to",
    "start": "1116520",
    "end": "1122100"
  },
  {
    "text": "control what the end users can actually do on the cluster so this really helps with that and wouldn't it be nice to",
    "start": "1122100",
    "end": "1129000"
  },
  {
    "text": "also have a solution that helps you ensure your clusters are always in compliance to your company policies and",
    "start": "1129000",
    "end": "1135630"
  },
  {
    "text": "in any given time wouldn't it be nice if there's a solution that actually allows you to see hey looks like these",
    "start": "1135630",
    "end": "1141419"
  },
  {
    "text": "resources have issues and they're out of compliance and here's how I can read mediate those those issues and last but",
    "start": "1141419",
    "end": "1149370"
  },
  {
    "text": "not least when it also be nice to preview the new policies that you have created in the company into a lot of",
    "start": "1149370",
    "end": "1157140"
  },
  {
    "text": "these production clusters now a lot of us actually create policies or they're",
    "start": "1157140",
    "end": "1162480"
  },
  {
    "text": "new policy requests like that are creative for existing clusters that's been running for for a long time it",
    "start": "1162480",
    "end": "1169350"
  },
  {
    "text": "would be nice to actually be able to test these policies and build confidence before you actually in deploy in the",
    "start": "1169350",
    "end": "1176880"
  },
  {
    "text": "cluster and prevent impact on the existing workloads and impacting your",
    "start": "1176880",
    "end": "1182429"
  },
  {
    "text": "end-users and last but not least wouldn't be nice to actually make sure that the cluster admins and developers",
    "start": "1182429",
    "end": "1189240"
  },
  {
    "text": "can coexist and be happy together both ensuring the conformance but also not",
    "start": "1189240",
    "end": "1195030"
  },
  {
    "text": "sacrificing your agility and autonomy so that's basically the background behind",
    "start": "1195030",
    "end": "1200309"
  },
  {
    "text": "why the gatekeeper project was created we're currently at the three in the",
    "start": "1200309",
    "end": "1206490"
  },
  {
    "start": "1202000",
    "end": "1336000"
  },
  {
    "text": "project and as you can see this is a diagram of what the project what the",
    "start": "1206490",
    "end": "1211679"
  },
  {
    "text": "components look like and again at the heart of gatekeeper is OPA which is the policy agent that actually executes all",
    "start": "1211679",
    "end": "1218970"
  },
  {
    "text": "the actual Rago rules that you create now today it is mostly for validating a",
    "start": "1218970",
    "end": "1227100"
  },
  {
    "text": "mission and it has been implemented to run in yours it can be used for your CI CD pipelines",
    "start": "1227100",
    "end": "1234150"
  },
  {
    "text": "and the policies are actually written as CRTs now so what happens is you can then",
    "start": "1234150",
    "end": "1241690"
  },
  {
    "text": "define and create your policies by writing the regul as templates and you",
    "start": "1241690",
    "end": "1248470"
  },
  {
    "text": "can think of them as functions for your other policies that you are actually going to create instances for and when",
    "start": "1248470",
    "end": "1255760"
  },
  {
    "text": "you create a policy instance that's when you actually pass in the parameters for",
    "start": "1255760",
    "end": "1261070"
  },
  {
    "text": "these rules now once all these CR DS are in your cluster what happens is gate",
    "start": "1261070",
    "end": "1267610"
  },
  {
    "text": "keeper then replicates the information to OPA and depending on how you set it",
    "start": "1267610",
    "end": "1274870"
  },
  {
    "text": "up you can also replicate the resources in your cluster into OPA thus allowing",
    "start": "1274870",
    "end": "1280600"
  },
  {
    "text": "you to do things like referential policies where you are looking for uniqueness where you come comparing the",
    "start": "1280600",
    "end": "1286929"
  },
  {
    "text": "admission request versus everything else that already exists in the cluster and last but not least as you can see",
    "start": "1286929",
    "end": "1293169"
  },
  {
    "text": "there's also this audit feature that allows us to periodically query the",
    "start": "1293169",
    "end": "1298510"
  },
  {
    "text": "state of the cluster and as an administrator this really helps because then you can see okay what are the",
    "start": "1298510",
    "end": "1304780"
  },
  {
    "text": "resources that are out of compliance and what are the resources that are not meeting this particular policy and also",
    "start": "1304780",
    "end": "1312490"
  },
  {
    "text": "we've introduced the dry-run concept in the most recent release which really",
    "start": "1312490",
    "end": "1317650"
  },
  {
    "text": "enables gradual rollout to build confidence in the policies that you're rolling out for everybody else and last",
    "start": "1317650",
    "end": "1324100"
  },
  {
    "text": "but not least I want to thank Microsoft Google Red Hat CBA thyra for creating",
    "start": "1324100",
    "end": "1329770"
  },
  {
    "text": "this project and replicas for donating the gatekeeper named cool so right now",
    "start": "1329770",
    "end": "1338140"
  },
  {
    "start": "1336000",
    "end": "1811000"
  },
  {
    "text": "we are gonna continue with the second part of our demo and we're gonna run I",
    "start": "1338140",
    "end": "1343809"
  },
  {
    "text": "can continue that demo script on the same Mini Cooper cluster by the way it's not pre-recorded you know it is a real",
    "start": "1343809",
    "end": "1350590"
  },
  {
    "text": "like a mini Q cluster and I have a used mini cube just so that can I can get a sniff to run otherwise if I use kind",
    "start": "1350590",
    "end": "1356559"
  },
  {
    "text": "like container based communities and case it won't run anyways tangent so we",
    "start": "1356559",
    "end": "1363070"
  },
  {
    "text": "are in the part of the demo we are going to install gatekeeper and then we're gonna install",
    "start": "1363070",
    "end": "1368900"
  },
  {
    "text": "that insecure emoji application again this time around into a different name space and then we will see how like am",
    "start": "1368900",
    "end": "1376130"
  },
  {
    "text": "gatekeeper is able to detect there there is some insecure like a workload within",
    "start": "1376130",
    "end": "1381860"
  },
  {
    "text": "my clusters because it violated some of the empty our requirements it will raise",
    "start": "1381860",
    "end": "1387260"
  },
  {
    "text": "like some audit events and then we will see how we can resolve it by again",
    "start": "1387260",
    "end": "1392960"
  },
  {
    "text": "injecting the dosung workload with the link to the proxy and enable em TLS",
    "start": "1392960",
    "end": "1398650"
  },
  {
    "text": "gonna switch over to my terminal alright so now we're gonna install the same",
    "start": "1398650",
    "end": "1404750"
  },
  {
    "text": "application but now we call a green and it's going to be the point in its own",
    "start": "1404750",
    "end": "1410510"
  },
  {
    "text": "namespace so once it's applied and next",
    "start": "1410510",
    "end": "1416210"
  },
  {
    "text": "all the components are coming up and next we're going to install gatekeeper",
    "start": "1416210",
    "end": "1422000"
  },
  {
    "text": "for the very first time on the cluster you can grab the yamo and all the",
    "start": "1422000",
    "end": "1429080"
  },
  {
    "text": "gatekeeper components are now installed in the cluster and let's see all of them are let's wait to see make sure they're",
    "start": "1429080",
    "end": "1436010"
  },
  {
    "text": "all coming up alright so here what we're",
    "start": "1436010",
    "end": "1444890"
  },
  {
    "text": "gonna do is admit some of the namespaces from our policies just because you know",
    "start": "1444890",
    "end": "1451640"
  },
  {
    "text": "we know like queue system and gatekeepers are not the namespaces that we care about to for our for this",
    "start": "1451640",
    "end": "1457130"
  },
  {
    "text": "particular policy and the way we do that is by adding this namespace label that",
    "start": "1457130",
    "end": "1464360"
  },
  {
    "text": "we already know so once this is done we",
    "start": "1464360",
    "end": "1475940"
  },
  {
    "text": "are going to install the MT LS constrain template so as I mentioned earlier the",
    "start": "1475940",
    "end": "1482210"
  },
  {
    "text": "constrain templates are really where the Rago objects live so now the constrain templates are deployed and next",
    "start": "1482210",
    "end": "1491060"
  },
  {
    "text": "we're going to let's take a look at what that Rago looks like right we talked about it so much here let's see all",
    "start": "1491060",
    "end": "1502580"
  },
  {
    "text": "right so let's see so here we have a CR D and it is it actually defines what the",
    "start": "1502580",
    "end": "1511700"
  },
  {
    "text": "policy c rd looks like so here as you can see there's the spec for the CR D for this kind name link Rd mutual TLS",
    "start": "1511700",
    "end": "1519680"
  },
  {
    "text": "right it could be whatever you want and so with this what this kind every other",
    "start": "1519680",
    "end": "1525890"
  },
  {
    "text": "policy instance that you create thereafter will be based on this type right and so as you can also see down",
    "start": "1525890",
    "end": "1533600"
  },
  {
    "text": "below is where we have the actual Rago the logic for how we're defining what",
    "start": "1533600",
    "end": "1538670"
  },
  {
    "text": "the policy is gonna look like what resources gonna actually process and as",
    "start": "1538670",
    "end": "1543710"
  },
  {
    "text": "you can see we have bunch of spec validations right and and here's how we",
    "start": "1543710",
    "end": "1549110"
  },
  {
    "text": "know like hey looks like this container doesn't actually have the link or D proxy enabled",
    "start": "1549110",
    "end": "1554570"
  },
  {
    "text": "there's no proxy sidecar running for the there's no link or D proxy sidecar",
    "start": "1554570",
    "end": "1560990"
  },
  {
    "text": "running next to my application and it looks like there's no annotation that is",
    "start": "1560990",
    "end": "1566510"
  },
  {
    "text": "required to ensure that link or the linker these automatic em TLS has turned",
    "start": "1566510",
    "end": "1572870"
  },
  {
    "text": "on and next there's a bunch of environment variables that we know that",
    "start": "1572870",
    "end": "1578000"
  },
  {
    "text": "is required for mutual tell us to actually be enabled and working and",
    "start": "1578000",
    "end": "1583130"
  },
  {
    "text": "therefore these are the things that's in the spec that we're looking for and it's missing and if any one of these",
    "start": "1583130",
    "end": "1588980"
  },
  {
    "text": "requirements is missing that's one as you if you look at the top that's one we",
    "start": "1588980",
    "end": "1595340"
  },
  {
    "text": "we say okay looks like this there's a violation and then go ahead and display",
    "start": "1595340",
    "end": "1601460"
  },
  {
    "text": "this error message to your users so that they know hey it looks like you don't",
    "start": "1601460",
    "end": "1606530"
  },
  {
    "text": "have linker D inject enabled and it looks like you don't have an empty LS turned on so let's actually see how this",
    "start": "1606530",
    "end": "1614420"
  },
  {
    "text": "works in Reles maybe a couple of seconds for the",
    "start": "1614420",
    "end": "1619430"
  },
  {
    "text": "idea to get ready okay alright so next",
    "start": "1619430",
    "end": "1625310"
  },
  {
    "text": "we're actually installing the constraint and as I mentioned early that's where we",
    "start": "1625310",
    "end": "1630440"
  },
  {
    "text": "pass in the parameters right and so the parameters here as you can see were",
    "start": "1630440",
    "end": "1635530"
  },
  {
    "text": "going at the top right this is where we say okay for the link or the mutual TLS",
    "start": "1635530",
    "end": "1641510"
  },
  {
    "text": "kind here here are the matching kinds that we're going to match on and we're",
    "start": "1641510",
    "end": "1647690"
  },
  {
    "text": "gonna look at pot and and you and for other policies that you're gonna create",
    "start": "1647690",
    "end": "1652730"
  },
  {
    "text": "you can specify whatever resource you want right and then here we are actually gonna use namespace selector to just",
    "start": "1652730",
    "end": "1660070"
  },
  {
    "text": "whitelist out namespaces that we don't care about and then below is actually",
    "start": "1660070",
    "end": "1666680"
  },
  {
    "text": "where we pass in all the parameters that we think link are these actually looking",
    "start": "1666680",
    "end": "1671780"
  },
  {
    "text": "for for this particular policy to to run and if you recall from the array goes",
    "start": "1671780",
    "end": "1676880"
  },
  {
    "text": "these are the actual annotations and environment variables that the Ray goes",
    "start": "1676880",
    "end": "1682550"
  },
  {
    "text": "logics actually look for so cool all",
    "start": "1682550",
    "end": "1690350"
  },
  {
    "text": "right let's see if the application actually gets detected yeah so next",
    "start": "1690350",
    "end": "1699470"
  },
  {
    "text": "we're gonna describe on the constraint and this is where we see the auto",
    "start": "1699470",
    "end": "1705200"
  },
  {
    "text": "results so here as you can see the last",
    "start": "1705200",
    "end": "1714350"
  },
  {
    "text": "audit ran at this time which is like 30",
    "start": "1714350",
    "end": "1719450"
  },
  {
    "text": "seconds ago and then here all the violations in the cluster are now identified and as you can see the these",
    "start": "1719450",
    "end": "1727640"
  },
  {
    "text": "are these were the components in the Emoji grain application and they've been flagged as hey it looks like you don't",
    "start": "1727640",
    "end": "1734960"
  },
  {
    "text": "have MPLS turn on so how do we actually now that I know these are the issues",
    "start": "1734960",
    "end": "1741290"
  },
  {
    "text": "what do i how do I actually get myself out of this well we can inject this just",
    "start": "1741290",
    "end": "1747530"
  },
  {
    "text": "run the same the inject command against our grain emoji application and let's see how that",
    "start": "1747530",
    "end": "1755750"
  },
  {
    "text": "works all right so now length Rd does",
    "start": "1755750",
    "end": "1763970"
  },
  {
    "text": "it's magic now it's gonna come up all right",
    "start": "1763970",
    "end": "1773350"
  },
  {
    "text": "so now all the MTL s components are there they've been mutated let's see if the if",
    "start": "1779390",
    "end": "1787700"
  },
  {
    "text": "the auto results actually is updated so",
    "start": "1787700",
    "end": "1794660"
  },
  {
    "text": "now the audit got just ran and it looks like there are no violations so yeah",
    "start": "1794660",
    "end": "1800420"
  },
  {
    "text": "we're good yeah all right and so here",
    "start": "1800420",
    "end": "1814190"
  },
  {
    "text": "are just some examples of things that we thought that would be cool features for",
    "start": "1814190",
    "end": "1819260"
  },
  {
    "text": "for your applications you know in terms of securing your services that we didn't",
    "start": "1819260",
    "end": "1825320"
  },
  {
    "text": "quite have time for this demo so for example ensuring that you have policies that that actually checks",
    "start": "1825320",
    "end": "1831140"
  },
  {
    "text": "hey all your applications are actually actually HTTPS only making sure that in",
    "start": "1831140",
    "end": "1836270"
  },
  {
    "text": "all your ingresses have unique host names services should have globally unique selectors and yeah so some",
    "start": "1836270",
    "end": "1846049"
  },
  {
    "text": "additional rules that we can implement using Rago is to make sure that can that admission request we talked about like",
    "start": "1846049",
    "end": "1852559"
  },
  {
    "text": "campus has some sort of user ID being defined in them so you make sure the workload is actually submitted by",
    "start": "1852559",
    "end": "1859309"
  },
  {
    "text": "someone running Cairo apply with that appropriate the authentication and at",
    "start": "1859309",
    "end": "1866390"
  },
  {
    "text": "number five you know some of you may have noticed we actually run we deployed insecure green emoji application plus",
    "start": "1866390",
    "end": "1872270"
  },
  {
    "text": "then we install open gate keeper and we did that on purpose because we want to be able to show off that there audit",
    "start": "1872270",
    "end": "1878360"
  },
  {
    "text": "violation events but in like a real production environment you'll probably do it the other way around where you",
    "start": "1878360",
    "end": "1883940"
  },
  {
    "text": "will install gate keeper first and then you just reject outright anything that is not MPLS compliant finally like I'm",
    "start": "1883940",
    "end": "1890780"
  },
  {
    "text": "linked to this store like really rich on information about the traffic and the",
    "start": "1890780",
    "end": "1895940"
  },
  {
    "text": "matrixes in Prometheus and that include like and whether the traffic is TOS or not so if any story in prometheus guess",
    "start": "1895940",
    "end": "1903140"
  },
  {
    "text": "what I can like hook it up to alert manager and you said to notify me based",
    "start": "1903140",
    "end": "1908240"
  },
  {
    "text": "on the matrix in Prometheus that hey I we just detected some ninety hours traffic coming from this particular source so yeah very",
    "start": "1908240",
    "end": "1916660"
  },
  {
    "text": "cool and hands-on stuff that we can all try but just don't have time for it today so two different projects together",
    "start": "1916660",
    "end": "1926500"
  },
  {
    "text": "United and help where it's here to secure your service in conclusion excuse",
    "start": "1926500",
    "end": "1936380"
  },
  {
    "text": "me so beau Flynn Cody and oppa like a lot support it and contributed by BEC young",
    "start": "1936380",
    "end": "1942650"
  },
  {
    "text": "growing and healthy community communities in pálinka dee you can",
    "start": "1942650",
    "end": "1948110"
  },
  {
    "text": "finance on I don't know hop slack whatever social media is out there and",
    "start": "1948110",
    "end": "1954110"
  },
  {
    "text": "come to our monthly community calls and stuff and now for OPA there are various",
    "start": "1954110",
    "end": "1961850"
  },
  {
    "text": "ways of reaching out there slack with us so the open policy agent has its own",
    "start": "1961850",
    "end": "1967760"
  },
  {
    "text": "slack there's also kubernetes policy channel in there we're always hanging out there so if you have questions feel free to",
    "start": "1967760",
    "end": "1974150"
  },
  {
    "text": "ask and of course open issues and we're always looking for feedback to make this thing better and we have a weekly",
    "start": "1974150",
    "end": "1981260"
  },
  {
    "text": "Tuesday at 2 p.m. call if anybody wants to join well with",
    "start": "1981260",
    "end": "1988190"
  },
  {
    "text": "that thank you very much",
    "start": "1988190",
    "end": "1992019"
  },
  {
    "text": "do we have time for questions how about we can do three all right three",
    "start": "1996539",
    "end": "2003000"
  },
  {
    "text": "questions and made it count and if you enjoyed this talk there's a way to rate it from the schedule so go and give it a",
    "start": "2003000",
    "end": "2009899"
  },
  {
    "text": "happy face and give feedback which the presenters can see later any questions hi is there any solution",
    "start": "2009899",
    "end": "2027750"
  },
  {
    "text": "for hybrid environments like for example I have kubernetes and a bit of workload",
    "start": "2027750",
    "end": "2033059"
  },
  {
    "text": "running outside kubernetes so can there be a hybrid solution covering both of them yeah currently like for external",
    "start": "2033059",
    "end": "2039570"
  },
  {
    "text": "resources I can toss our because it's outside of the mash so Lincoln D is at",
    "start": "2039570",
    "end": "2045630"
  },
  {
    "text": "the moment as an look after securing those those traffic so you'd be up to",
    "start": "2045630",
    "end": "2051270"
  },
  {
    "text": "your application to because like also like if it is using like a different kind of cert empty the Lincoln a proxy",
    "start": "2051270",
    "end": "2059760"
  },
  {
    "text": "will be able to see it right cuz it's all encrypted unless it man in the middle of your traffic which is not good",
    "start": "2059760",
    "end": "2067128"
  },
  {
    "text": "once the policy changes our once linker D does M TLS by default with the policy",
    "start": "2068119",
    "end": "2074339"
  },
  {
    "text": "need to change from what you showed here to still track for that you know the policy stays the same well as long as",
    "start": "2074339",
    "end": "2081720"
  },
  {
    "text": "like the policy author as long as that gets updated per the policy you want to",
    "start": "2081720",
    "end": "2087330"
  },
  {
    "text": "apply or reinforce the policy just enforces at a mission time which we",
    "start": "2087330",
    "end": "2094260"
  },
  {
    "text": "didn't get to Stroh but essentially once you're out of the big 8 or whatever then",
    "start": "2094260",
    "end": "2101220"
  },
  {
    "text": "the audit results won't catch it so if you had like a way to raise alerts it",
    "start": "2101220",
    "end": "2106380"
  },
  {
    "text": "won't even come up",
    "start": "2106380",
    "end": "2109759"
  },
  {
    "text": "if I wanted to use em TLS to lock down communication so like service a can only",
    "start": "2117440",
    "end": "2124250"
  },
  {
    "text": "talk to be but a can't talk to seeking is that something like link or D could you we could use M TLS therefore or did",
    "start": "2124250",
    "end": "2130490"
  },
  {
    "text": "that we have to be something to follow like in the into the OPA namespace so",
    "start": "2130490",
    "end": "2135800"
  },
  {
    "text": "that's that's a good question I can I think we're so right now like link at the out-of-the-box doesn't support like",
    "start": "2135800",
    "end": "2142790"
  },
  {
    "text": "endpoint authorization so usually like when users bring that out we would ask",
    "start": "2142790",
    "end": "2149330"
  },
  {
    "text": "them with network policies with labels and selectors and IP addresses help with",
    "start": "2149330",
    "end": "2155000"
  },
  {
    "text": "it but if they want something more fine-grain they can I think eventually it will require some sort of policy",
    "start": "2155000",
    "end": "2161350"
  },
  {
    "text": "enforcement and a partnership of some sort between Minka T and also came up",
    "start": "2161350",
    "end": "2166970"
  },
  {
    "text": "when we weren't doing this talk it's actually something we want to explore further but the currently there is no",
    "start": "2166970",
    "end": "2173780"
  },
  {
    "text": "way that we are aware of yeah a couple",
    "start": "2173780",
    "end": "2179630"
  },
  {
    "text": "more nobody else does anybody else have any other questions awesome thank you so",
    "start": "2179630",
    "end": "2186500"
  },
  {
    "text": "much guys thank you [Applause]",
    "start": "2186500",
    "end": "2192460"
  }
]