[
  {
    "text": "today we are going to talk about cortex specifically we're going to talk about what happened since the beginning of",
    "start": "240",
    "end": "6660"
  },
  {
    "text": "this year and then what do we have in plan for cortex uh so here's the agenda oh actually let",
    "start": "6660",
    "end": "13380"
  },
  {
    "text": "me introduce myself first so my name is Alvin I'm one of the software development manager at AWS I joined as a",
    "start": "13380",
    "end": "20460"
  },
  {
    "text": "cortex maintainer about a year ago I started to look into the query path a lot so I have a little bit of technical",
    "start": "20460",
    "end": "27240"
  },
  {
    "text": "knowledge there but nowadays I mainly do releases doing some troll work like operating go wrong time to 1.19.2 I know",
    "start": "27240",
    "end": "34620"
  },
  {
    "text": "that those circular patching I know that and here with me is Alan who is the actual brand of Cortex and I'll let you",
    "start": "34620",
    "end": "41100"
  },
  {
    "text": "introduce himself hey my name is Alan I also work with uh for AWS on all this",
    "start": "41100",
    "end": "46860"
  },
  {
    "text": "team uh being worked with working with cortex for the last two years",
    "start": "46860",
    "end": "52020"
  },
  {
    "text": "work in scalability availability uh became maintainer in the last year",
    "start": "52020",
    "end": "57920"
  },
  {
    "text": "yeah trying to make cortex a better place",
    "start": "57920",
    "end": "63600"
  },
  {
    "text": "cool thanks Alan so Alan does most of the work I essentially do nothing and just tell Allied to do work",
    "start": "63600",
    "end": "69600"
  },
  {
    "text": "um and here with me is the Federation of course it's not here with me physically but it's very unfortunate I couldn't",
    "start": "69600",
    "end": "76140"
  },
  {
    "text": "make it so Federate is actually a very long time cortex user he deployed cortex clusters for Adobe and he runs I think",
    "start": "76140",
    "end": "82860"
  },
  {
    "text": "the number he told me it's the hundreds of clusters and if you were even even ever in the CNC cortex Channel then you",
    "start": "82860",
    "end": "90360"
  },
  {
    "text": "ask questions then cortex is the person who will answer your question so he is really active in the in the China is",
    "start": "90360",
    "end": "96119"
  },
  {
    "text": "there any questions regarding configuration optimization and all that let's but not the least we also have a",
    "start": "96119",
    "end": "102960"
  },
  {
    "text": "maintenance for uh from from Germany and his name is the Nicholas I didn't want",
    "start": "102960",
    "end": "108299"
  },
  {
    "text": "to go into linking and searching my face like stalking so I just grabbed this GitHub profile picture and that's why I give up profile picture looks like and",
    "start": "108299",
    "end": "114960"
  },
  {
    "text": "he's the maintainer for the helm chair and it's very active if you feel feel that hey help me see some configuration",
    "start": "114960",
    "end": "120600"
  },
  {
    "text": "I didn't add it and then Nicholas will always be there to emerge the pr",
    "start": "120600",
    "end": "126380"
  },
  {
    "text": "cool so to this agenda uh so I would imagine not a lot of people know how cortex cortex is and how does it work so",
    "start": "126960",
    "end": "134099"
  },
  {
    "text": "we will do a quick introduction to um to talk about cortex and then we'll do a little bit of the architectural dive",
    "start": "134099",
    "end": "139500"
  },
  {
    "text": "deep for cortex then I want to introduce three exciting features that come into cortex uh in the next release which will",
    "start": "139500",
    "end": "145920"
  },
  {
    "text": "be 1.14 and I'll give one operational tip so if you're running cortex right now then you should do this when you get",
    "start": "145920",
    "end": "152580"
  },
  {
    "text": "back to get back to work it's very useful like uh we run a lot of Cortex cluster back in AWS and that's one of",
    "start": "152580",
    "end": "158400"
  },
  {
    "text": "the tips that saves us a lot of memories then we'll do some look back to see what happened for the cortex release 1.13",
    "start": "158400",
    "end": "164940"
  },
  {
    "text": "then we will go through the voice of community or we call it the roadmap then we will talk about the call to actions",
    "start": "164940",
    "end": "172500"
  },
  {
    "text": "we need help cortex and help and then I would love more contribution to Cortex then we'll do our favorite part which is",
    "start": "172500",
    "end": "179220"
  },
  {
    "text": "the Q a all right so what is cortex cortex is a",
    "start": "179220",
    "end": "185760"
  },
  {
    "text": "horizontally scalable highly available multi-tenant long-term storage for premises so what does that mean",
    "start": "185760",
    "end": "192180"
  },
  {
    "text": "uh when we think about per mysterious initially when it was designed it's designed to be installed on a single",
    "start": "192180",
    "end": "197879"
  },
  {
    "text": "machine uh scrap a cluster of Matrix and then it is stored it onto a local local Drive",
    "start": "197879",
    "end": "204420"
  },
  {
    "text": "the problem is your local Drive cannot be as big as you would like to use so you usually have like a very fairly",
    "start": "204420",
    "end": "210060"
  },
  {
    "text": "short-term rotation period so cortex trying to solve that problem but in order to be able to store a lot of a lot",
    "start": "210060",
    "end": "215879"
  },
  {
    "text": "of Matrix millions billions of metrics you need scale so essentially what cortex is doing is to take a bit bits",
    "start": "215879",
    "end": "222180"
  },
  {
    "text": "and piss of uh cortex and then make it into microservices so you have you have",
    "start": "222180",
    "end": "227340"
  },
  {
    "text": "a micro service recording a micro service or ingestion a microservices for the moving data to the long-term storage",
    "start": "227340",
    "end": "232680"
  },
  {
    "text": "my courses preface for reading data from the long-term storage so like uh saying",
    "start": "232680",
    "end": "238260"
  },
  {
    "text": "cortex is the long-term storage is a little bit misleading because it's not just storage it is actually a system they allow querying",
    "start": "238260",
    "end": "245720"
  },
  {
    "text": "and cortex is the cncf project it's incubernating and Apache 2.0 license so",
    "start": "245879",
    "end": "251640"
  },
  {
    "text": "if you can do anything with it a bunch of contributors about 250 of them lots",
    "start": "251640",
    "end": "256799"
  },
  {
    "text": "of watches uh 5K star and so far we have about 5 000 comments and that Allen here",
    "start": "256799",
    "end": "262680"
  },
  {
    "text": "is making the comments going up every single day so um it is actually a very active project",
    "start": "262680",
    "end": "269719"
  },
  {
    "text": "this is a very high level view a bird's eye view at a very high level of Cortex",
    "start": "270419",
    "end": "275820"
  },
  {
    "text": "so essential holidays a typical use case of Cortex you have a bunch of Matthias right so you have one Premier system for",
    "start": "275820",
    "end": "280979"
  },
  {
    "text": "cluster a one Premiere CS4 cluster B and so on and so forth what you can do is you can configure pyramid spheres to do",
    "start": "280979",
    "end": "287100"
  },
  {
    "text": "a remote right into cortex all of them can just do a remote right to Cortex if you want a differentiate between clusters you can do add a label during",
    "start": "287100",
    "end": "293580"
  },
  {
    "text": "remote rights to differentiate different clusters they're just into cortex then you attach a dashboard tooling like a",
    "start": "293580",
    "end": "300240"
  },
  {
    "text": "kofana or whatever dashboard that you feel like in that you get a global view of your Matrix right you don't have to",
    "start": "300240",
    "end": "306240"
  },
  {
    "text": "go to like parameters a to look at class A permission speed you look at a cluster piece Matrix",
    "start": "306240",
    "end": "311699"
  },
  {
    "text": "so because remote right it is the protocol that it's a fairly stable from proposed so it's you don't have to just",
    "start": "311699",
    "end": "318060"
  },
  {
    "text": "use permafps you can also use the tools like open Telemetry to symmetrics to a cortex or if you're a little bit more",
    "start": "318060",
    "end": "324539"
  },
  {
    "text": "adventurous and then you like working code you can actually write your own code and goal in Java you see C plus plus whatever you want and just make",
    "start": "324539",
    "end": "331440"
  },
  {
    "text": "sure the message is in the remote right format then you should be able to send it to Cortex and you can send a lot of",
    "start": "331440",
    "end": "336780"
  },
  {
    "text": "metrics to Cortex you will be able to handle it so next I want to dive a little bit deeper into that cortex icon",
    "start": "336780",
    "end": "342600"
  },
  {
    "text": "to see how it actually works under the hood oh God this looks complicated I think I",
    "start": "342600",
    "end": "347880"
  },
  {
    "text": "need your help for this one oh well I will try my best here yeah uh we as we",
    "start": "347880",
    "end": "353160"
  },
  {
    "text": "can see like uh the community saying that cortex can scale a lot I can send a",
    "start": "353160",
    "end": "358860"
  },
  {
    "text": "bunch of match cases High available but it's complex to set up so uh this is",
    "start": "358860",
    "end": "366360"
  },
  {
    "text": "what usage to be cortex in the past a year or so we are trying to we are deprecating some dead code and some",
    "start": "366360",
    "end": "373919"
  },
  {
    "text": "deprecated storage so we're moving even from the code base and don't worry this",
    "start": "373919",
    "end": "379740"
  },
  {
    "text": "is not what cortex looks like uh inboard it looks more like this uh this is a",
    "start": "379740",
    "end": "386639"
  },
  {
    "text": "typical cortex deployment uh that you can find uh you can see like in",
    "start": "386639",
    "end": "392520"
  },
  {
    "text": "the yellow there uh that's the right path uh so remote remote right come from",
    "start": "392520",
    "end": "397979"
  },
  {
    "text": "Prometheus uh and in the in green there uh that's the read path so we still have",
    "start": "397979",
    "end": "403560"
  },
  {
    "text": "some components they I will try to explain what what is uh what are each",
    "start": "403560",
    "end": "409440"
  },
  {
    "text": "one of those components and hopefully to make more sense uh at the end of the",
    "start": "409440",
    "end": "414720"
  },
  {
    "text": "disc uh I will start with the right path so uh what what happens when uh Prometheus",
    "start": "414720",
    "end": "421199"
  },
  {
    "text": "and the right uh request to Cortex right uh the first component that uh rate like",
    "start": "421199",
    "end": "429240"
  },
  {
    "text": "that's rich that is that is called distributor and what is the distributor distributor is basically uh a Gateway",
    "start": "429240",
    "end": "437220"
  },
  {
    "text": "but uh that will forward the request to the writing gestures ingesters are",
    "start": "437220",
    "end": "443120"
  },
  {
    "text": "the storage nodes distributor will just forward the request for them but why we",
    "start": "443120",
    "end": "448620"
  },
  {
    "text": "need the distributor so distributor review uh it it will do sharding and",
    "start": "448620",
    "end": "453960"
  },
  {
    "text": "replicate your data and uh and do like pertaining charting and replicator data",
    "start": "453960",
    "end": "460020"
  },
  {
    "text": "and uh optionally we have you can set up things like Shuffle sharding that will",
    "start": "460020",
    "end": "465900"
  },
  {
    "text": "improve your tenant isolation uh or Zone aware awareness replication so",
    "start": "465900",
    "end": "471180"
  },
  {
    "text": "distributor is is the guy that to make sure that is sending one copper our data",
    "start": "471180",
    "end": "476280"
  },
  {
    "text": "to Haz it also does things like rate limiting and they jaded up so if you",
    "start": "476280",
    "end": "482699"
  },
  {
    "text": "have a Prometheus server that is sending is deployed in a AJ mode distributor is",
    "start": "482699",
    "end": "490380"
  },
  {
    "text": "the guy that we receive the same one sample and throw on the floor the second one after the distributor we have the",
    "start": "490380",
    "end": "498000"
  },
  {
    "text": "investors the ending gestures are basically uh motor 10 and tsdb so remember Alvin said that uh what cortex",
    "start": "498000",
    "end": "505680"
  },
  {
    "text": "does is take Prometheus and put in different microservices Prometheus is basically a tsdb and a query engine the",
    "start": "505680",
    "end": "513419"
  },
  {
    "text": "investors is the house of the tsdb so the first time that I received a sample",
    "start": "513419",
    "end": "518940"
  },
  {
    "text": "to one tenants uh ingesters receiver for example for one tenant it will create the tsdb block",
    "start": "518940",
    "end": "525260"
  },
  {
    "text": "the test B instance will keep a painting that and the after is configurable but",
    "start": "525260",
    "end": "530820"
  },
  {
    "text": "after typically after two hours you send those tsdb blocks to the block storage",
    "start": "530820",
    "end": "537600"
  },
  {
    "text": "and the block storage can be uh on Google Cloud Storage S3 uh any block",
    "start": "537600",
    "end": "543959"
  },
  {
    "text": "storage that you want we have support for Azure as well but now we can see that uh as I was",
    "start": "543959",
    "end": "551940"
  },
  {
    "text": "sending data so the data was that were on disk was replicated I sent to one",
    "start": "551940",
    "end": "557279"
  },
  {
    "text": "replica for each to Haz and now I have all these data uh duplicated data on S3",
    "start": "557279",
    "end": "563160"
  },
  {
    "text": "so that is where the compactor comes in the compactor will uh get all those",
    "start": "563160",
    "end": "568260"
  },
  {
    "text": "blocks it will Compact and compress those blocks and to make sure that this",
    "start": "568260",
    "end": "573420"
  },
  {
    "text": "data is in the is in the uh optimal way to be queried uh it also does things",
    "start": "573420",
    "end": "580740"
  },
  {
    "text": "like uh housekeeping so uh if you are if you configure your attention period for",
    "start": "580740",
    "end": "586260"
  },
  {
    "text": "one year compactor is the guy to start to delete blocks that's older than one year and things like that uh again all",
    "start": "586260",
    "end": "594420"
  },
  {
    "text": "those components can be Shuffle sharded and deployed in in uh with Zone awareness so you you have uh AC",
    "start": "594420",
    "end": "601860"
  },
  {
    "text": "tolerance and uh tenant isolation this is basically the right path but then you have to pair your data",
    "start": "601860",
    "end": "608880"
  },
  {
    "text": "right so uh they read the path uh the first component is called pirate front end which you do it's a similar thing",
    "start": "608880",
    "end": "616320"
  },
  {
    "text": "that distributor does but for the query uh it to shuffle shards uh and make sure",
    "start": "616320",
    "end": "623100"
  },
  {
    "text": "that queries for a given to an entire spread across this uh but it does more",
    "start": "623100",
    "end": "628200"
  },
  {
    "text": "than that right like it does uh qos for instance so it makes sure that uh 110 it",
    "start": "628200",
    "end": "633899"
  },
  {
    "text": "is not the starving other things or uh or do like cash of cash so imagine that",
    "start": "633899",
    "end": "641519"
  },
  {
    "text": "you have your dashboard there that's like refreshing every minute and instead of like recomputing or re-executing the",
    "start": "641519",
    "end": "649140"
  },
  {
    "text": "whole query the quest front end will just like uh fetch the Delta from the",
    "start": "649140",
    "end": "654540"
  },
  {
    "text": "last refresh to the refresh right now uh and do like things like vertical",
    "start": "654540",
    "end": "659880"
  },
  {
    "text": "vertical and horizontal horizontal sharding uh query sharding that I think Alvin will talk a little bit more about",
    "start": "659880",
    "end": "666000"
  },
  {
    "text": "that but it's basically uh get uh trying to split one query in",
    "start": "666000",
    "end": "672120"
  },
  {
    "text": "multiple uh smaller queries so I can run then in parallel uh in multiple",
    "start": "672120",
    "end": "677459"
  },
  {
    "text": "querier's code after the query front end we have the query the query is uh the house for the",
    "start": "677459",
    "end": "685680"
  },
  {
    "text": "prompt ql engine now so we have we run the promises from QR engine uh in that",
    "start": "685680",
    "end": "690959"
  },
  {
    "text": "component and basically receives the uh query request fetch data from investors",
    "start": "690959",
    "end": "697680"
  },
  {
    "text": "for recent data or for stock from store gateways for historical data merge all",
    "start": "697680",
    "end": "703380"
  },
  {
    "text": "of them uh evaluate the query return the result back to the query front end and to the",
    "start": "703380",
    "end": "709920"
  },
  {
    "text": "customer uh do things like rate limiting as well like some some",
    "start": "709920",
    "end": "716339"
  },
  {
    "text": "prevent to prevent out of members and things like that now we have this target uh what is this or Gateway is the",
    "start": "716339",
    "end": "723959"
  },
  {
    "text": "Gateway for the store uh basically what this guy is doing is like it's keeping a up-to-date view of the block storage so",
    "start": "723959",
    "end": "732120"
  },
  {
    "text": "every time that I receive a new block or I compact a new Block store Gateway uh",
    "start": "732120",
    "end": "737720"
  },
  {
    "text": "discovered that advertise that to the carrier so this block starts to be variable uh and and also download parts",
    "start": "737720",
    "end": "747480"
  },
  {
    "text": "of the index the block index to make sure that we can have a faster uh time",
    "start": "747480",
    "end": "755220"
  },
  {
    "text": "series lookup when you are running queries so basically this is like a normal cortex deployment optionally you",
    "start": "755220",
    "end": "763440"
  },
  {
    "text": "can also run rulers and alert manager and those components are basically a multi-tenant version of the Prometheus",
    "start": "763440",
    "end": "770220"
  },
  {
    "text": "ruler and alert manager again Zone awareness again show for sharded rulers your basically basically evaluate",
    "start": "770220",
    "end": "778019"
  },
  {
    "text": "recording and alerting rules we'll send alerts to the alert manager alert",
    "start": "778019",
    "end": "783720"
  },
  {
    "text": "manager you the dub group and send the alert for the right destination like",
    "start": "783720",
    "end": "790279"
  },
  {
    "text": "islac or page 30 you name it basically this is what cortex is right",
    "start": "790279",
    "end": "797459"
  },
  {
    "text": "now uh those are the components uh hopefully it makes",
    "start": "797459",
    "end": "803700"
  },
  {
    "text": "more sense after that and now it's back to Alvin yeah definitely I think makes",
    "start": "803700",
    "end": "809279"
  },
  {
    "text": "more sense than the diagram we showed at the beginning um all right cool so this is a list of the",
    "start": "809279",
    "end": "815760"
  },
  {
    "text": "companies they are currently using cortex running cortex cluster um",
    "start": "815760",
    "end": "820920"
  },
  {
    "text": "cool so now I want to introduce the three features that I was talking about and the first feature is the open",
    "start": "820920",
    "end": "827220"
  },
  {
    "text": "Telemetry bridge for tracing if you are the operator of a cortex cluster you will like this feature",
    "start": "827220",
    "end": "833639"
  },
  {
    "text": "so this feature essentially allows you to send traces to different destinations and in the graph here we have the",
    "start": "833639",
    "end": "839579"
  },
  {
    "text": "example of sending it to AWS x-ray so the story behind this feature is because one day I was just you know",
    "start": "839579",
    "end": "845579"
  },
  {
    "text": "writing the normal status report that managers should write every day I don't come into my office and he said over and",
    "start": "845579",
    "end": "851459"
  },
  {
    "text": "Alvin I think there's a button aggression query and query front end I don't know how to do it just Jagger cortex approxy",
    "start": "851459",
    "end": "859260"
  },
  {
    "text": "actors the first open trades just you know set up Jagger the island is like no I don't know I don't know how to set up",
    "start": "859260",
    "end": "864600"
  },
  {
    "text": "I said well spend some time set it up and Alex threw up is standing there and say hey you're not helping then he went",
    "start": "864600",
    "end": "870180"
  },
  {
    "text": "out of my office so I got back to my work a few hours later I didn't come in with this",
    "start": "870180",
    "end": "875220"
  },
  {
    "text": "screenshot exactly so hey Elvin look how I got it working I got I got I got it working with sex right now I see uh",
    "start": "875220",
    "end": "880740"
  },
  {
    "text": "there's a the bottleneck between between the curry front end and the query it's because the queue is overloaded the",
    "start": "880740",
    "end": "885839"
  },
  {
    "text": "there's a cue between them and it's overloaded I was like oh cool this is awesome how did you do it and I said oh yeah I do I integrate it with the open",
    "start": "885839",
    "end": "892680"
  },
  {
    "text": "telemetry and I said okay cool awesome should we open source this I said of",
    "start": "892680",
    "end": "898680"
  },
  {
    "text": "course why not so this is the hours of work from Ireland it is awesome if you ever run",
    "start": "898680",
    "end": "904500"
  },
  {
    "text": "cluster you have a problem use this feature it will help you uh troubleshoot a lot of issue uh here actually is like",
    "start": "904500",
    "end": "911160"
  },
  {
    "text": "the trades multiple times like if I multiple issue and do optimization even for the query vertical sharding Island",
    "start": "911160",
    "end": "916680"
  },
  {
    "text": "use that to analysis that analyze that hey it is actually boosting performance and then which I'll talk about a little bit later",
    "start": "916680",
    "end": "922920"
  },
  {
    "text": "so yeah so with the open Telemetry support you can send to multiple destinations that's the major selling points like to Jagger to Zipkin to Kafka",
    "start": "922920",
    "end": "929880"
  },
  {
    "text": "and to AWS x-ray there's a lot more you just have to configure the exporter and the reason why we say the open",
    "start": "929880",
    "end": "936000"
  },
  {
    "text": "television is good is because open Telemetry is a cncf project and it is the protocol it's a specification so you",
    "start": "936000",
    "end": "941820"
  },
  {
    "text": "don't have to worry about vendor locking all right cool",
    "start": "941820",
    "end": "947579"
  },
  {
    "text": "the next feature I want to talk about is a partitioning compactor so um I haven't finalized the name for this this feature",
    "start": "947579",
    "end": "953760"
  },
  {
    "text": "so uh I I promise I'll work with the the creator of this feature to come up with",
    "start": "953760",
    "end": "958860"
  },
  {
    "text": "a better name but for now what's the partitioning compactor privacy is as a",
    "start": "958860",
    "end": "964019"
  },
  {
    "text": "limitation each block so Prometheus tsdb is essentially bunch of block right and",
    "start": "964019",
    "end": "970079"
  },
  {
    "text": "each block has a limitation of 64 gigabytes of index size and the reason is because they have a reference that's",
    "start": "970079",
    "end": "975959"
  },
  {
    "text": "only able to address up to 64 gigabytes sure we can fix that problem but the",
    "start": "975959",
    "end": "981600"
  },
  {
    "text": "problem is a little bit hard to fix and might take a little bit long time imagine switching from 32-bit uh Windows",
    "start": "981600",
    "end": "987060"
  },
  {
    "text": "to 64-bit it will take a while we don't want to wait we can wait but we don't want to wait so what we're doing",
    "start": "987060",
    "end": "992399"
  },
  {
    "text": "here is that hey currently in cortex if you try to merge two blocks whose index size is close to 64 gigabytes you merge",
    "start": "992399",
    "end": "999660"
  },
  {
    "text": "them together and then the result is 100 gigabytes then cortex were choked",
    "start": "999660",
    "end": "1005600"
  },
  {
    "text": "what you have to do is you have to upload this uh local time marker to the source block of the blue one and then",
    "start": "1005600",
    "end": "1011000"
  },
  {
    "text": "tell the hey just don't don't compact this that's a workaround that's not fixed because if you look at the look at the",
    "start": "1011000",
    "end": "1017120"
  },
  {
    "text": "size over there 63 plus 63 it's bigger than 100 right but then if you go",
    "start": "1017120",
    "end": "1023000"
  },
  {
    "text": "through compaction process you guys should do the do the symbol table index the duplication which reduce the index",
    "start": "1023000",
    "end": "1028760"
  },
  {
    "text": "size by quite a bit so you save about like 26 gigabytes over there if you still go through with the compaction",
    "start": "1028760",
    "end": "1033860"
  },
  {
    "text": "process right 26 gigabytes is a lot you can save a lot of HD videos with 26",
    "start": "1033860",
    "end": "1038900"
  },
  {
    "text": "gigabytes so what we're doing is then hey the new compactor will say okay I'll partition The Matrix in such a small way so that",
    "start": "1038900",
    "end": "1045980"
  },
  {
    "text": "the you know I will still end up with two blocks but each of them will have a smaller index such that it doesn't hit",
    "start": "1045980",
    "end": "1051380"
  },
  {
    "text": "the limit of the permanency so we'll figure like how much partition we need we might end up partition maybe three uh",
    "start": "1051380",
    "end": "1056960"
  },
  {
    "text": "four blocks to three or two to two like in this example so with this another possibility to",
    "start": "1056960",
    "end": "1063500"
  },
  {
    "text": "begin begin to uh to uh to show up right you can actually do compaction Imperial because your restore is two blocks each",
    "start": "1063500",
    "end": "1069980"
  },
  {
    "text": "compaction can be wrong in each individual compactor versus per before with the blue boxes you need to do that",
    "start": "1069980",
    "end": "1076460"
  },
  {
    "text": "in one box right I saw the result of the new partitioning compactor is that we actually is observing about 50",
    "start": "1076460",
    "end": "1083059"
  },
  {
    "text": "compaction time reduction in our lab results for single tendon with 200 million times Series right we're still",
    "start": "1083059",
    "end": "1089419"
  },
  {
    "text": "doing testing this is still work in progress It's almost done the implementation is there uh we are we are",
    "start": "1089419",
    "end": "1094460"
  },
  {
    "text": "we are just doing uh testing and finalization then and then we'll merge a PR",
    "start": "1094460",
    "end": "1100160"
  },
  {
    "text": "yeah so with this feature you don't have the issue for the bigger than six flow gigabytes uh issue and then your block",
    "start": "1100160",
    "end": "1105500"
  },
  {
    "text": "will be optimized and another another side effect of the design is that uh the the the algorithm",
    "start": "1105500",
    "end": "1113660"
  },
  {
    "text": "is able to figure out who who's the source block of a destination block right so you don't have to download all the blocks from S3 into compactor when",
    "start": "1113660",
    "end": "1120380"
  },
  {
    "text": "you do compaction this is a that's a potential speed up of the compaction process as well",
    "start": "1120380",
    "end": "1125660"
  },
  {
    "text": "okay the last feature I want to go into is a query sharding",
    "start": "1125660",
    "end": "1131299"
  },
  {
    "text": "this is a very cool feature in my opinion um and before I go into that I want to",
    "start": "1131299",
    "end": "1137240"
  },
  {
    "text": "skip shout out to the fairness community over there for for making this possible because it is we actually use the",
    "start": "1137240",
    "end": "1142760"
  },
  {
    "text": "thermos code they do some uh query analyzer uh and spit output says hey they probably shareable not shoutable",
    "start": "1142760",
    "end": "1149299"
  },
  {
    "text": "and then we thought hey we have cortex user why not we bring it to Cortex so right uh called collaboration is always",
    "start": "1149299",
    "end": "1154460"
  },
  {
    "text": "beautiful so what's vertical what does vertical",
    "start": "1154460",
    "end": "1159500"
  },
  {
    "text": "mean when we talk about horizontal sharding uh just imagine you have query I want to query from day one to day two",
    "start": "1159500",
    "end": "1165260"
  },
  {
    "text": "so you have two day query uh uh uh uh horizontal shot it means",
    "start": "1165260",
    "end": "1170360"
  },
  {
    "text": "that you shot by a time interval so you can actually split the query into day one to just the beginning of day two and beginning of day two to end of day two",
    "start": "1170360",
    "end": "1177860"
  },
  {
    "text": "and then you can split them wrong them concurrently and then get the result they all works",
    "start": "1177860",
    "end": "1183679"
  },
  {
    "text": "but what if today your query is actually a instant query where you want to know the instant query means that I want to",
    "start": "1183679",
    "end": "1189020"
  },
  {
    "text": "know the data right now there's no time interval then how do you shut you cannot do horizontal starting because there's no time interval to shot that's where",
    "start": "1189020",
    "end": "1195380"
  },
  {
    "text": "vertical query sharding comes in so I'll do a little bit of Deep dive into the vertical query charting just",
    "start": "1195380",
    "end": "1200480"
  },
  {
    "text": "because I think it's a very cool concept and then it's the first step to a more optimize procure engine",
    "start": "1200480",
    "end": "1205760"
  },
  {
    "text": "so this feature is already available right now you can use it and I forgot to mention that the uh the open Telemetry",
    "start": "1205760",
    "end": "1211520"
  },
  {
    "text": "support is actually in the mainline Branch so if you are the type of person who don't mind using the midnight Branch",
    "start": "1211520",
    "end": "1217460"
  },
  {
    "text": "please do you can start using the future and then cortex thing we we try to make the main line stable so because uh",
    "start": "1217460",
    "end": "1224059"
  },
  {
    "text": "internally AWS we actually use the mainland as well so so we we tested the stuff before before we push to midline",
    "start": "1224059",
    "end": "1230900"
  },
  {
    "text": "so yeah so the vertical vertical questioning is available in my branch and then the the speed Improvement can",
    "start": "1230900",
    "end": "1236000"
  },
  {
    "text": "be up to it can be a 30 plus um and simple flag to enable the dosato2",
    "start": "1236000",
    "end": "1242000"
  },
  {
    "text": "flag and there's the documentation so I just want to touch a little bit on the",
    "start": "1242000",
    "end": "1247160"
  },
  {
    "text": "documentation it is under the V1 guarantee just because it is the experiment experimental feature so it's not in the configuration list",
    "start": "1247160",
    "end": "1254299"
  },
  {
    "text": "so just be aware that or you can use the slide so let's do a little bit deeper I found",
    "start": "1254299",
    "end": "1260840"
  },
  {
    "text": "how the vertical shotting works so consider this Matrix you don't have to stare too hard it's fine it's it's fairly uh simple it's a",
    "start": "1260840",
    "end": "1267620"
  },
  {
    "text": "you have metrics to calculate how many users you have per region so I'm using the North America and Europe as an",
    "start": "1267620",
    "end": "1272900"
  },
  {
    "text": "example and then when you collect the metrics usually you have multiple permissions instance for scalability you already you wouldn't you wouldn't just",
    "start": "1272900",
    "end": "1279260"
  },
  {
    "text": "have one right so that's why you have power one part two part three redundancy of three is always beautiful",
    "start": "1279260",
    "end": "1284720"
  },
  {
    "text": "and cost effective and then now imagine I want to run this query uh don't worry about starting this",
    "start": "1284720",
    "end": "1290360"
  },
  {
    "text": "curve this is just ahead I want another user per region right so and I want to get the result hey I have 100 people in",
    "start": "1290360",
    "end": "1295580"
  },
  {
    "text": "a 100 users in North America and I have 95 in Europe",
    "start": "1295580",
    "end": "1300700"
  },
  {
    "text": "cool without vertical shotting what what what what's done is that the whole core is",
    "start": "1302480",
    "end": "1309140"
  },
  {
    "text": "sent to one query and the query fetch all the data and then just and just and just merge them send it back to query from and back to user but if you kind of",
    "start": "1309140",
    "end": "1316220"
  },
  {
    "text": "think about that hey I can actually do the query or the aggregation for North",
    "start": "1316220",
    "end": "1321740"
  },
  {
    "text": "America and for Europe differently and color coded with uh I guess it's blue and purple",
    "start": "1321740",
    "end": "1328039"
  },
  {
    "text": "yeah blue and purple I'll stick with that um",
    "start": "1328039",
    "end": "1333080"
  },
  {
    "text": "so this is how without Curry shouting how it works Corey Franklin Korea go to the store and the store have its color",
    "start": "1333080",
    "end": "1339740"
  },
  {
    "text": "coded just to show you that hey we uh the the store doesn't store the same uh",
    "start": "1339740",
    "end": "1344960"
  },
  {
    "text": "the sandwich in the same store they are just you know interleaving everywhere",
    "start": "1344960",
    "end": "1350059"
  },
  {
    "text": "Korea to go to a store do everything aggregate table send it back to Korean customer is happy",
    "start": "1350059",
    "end": "1357400"
  },
  {
    "text": "well when it's a little bit slower they will not be happy but you know this is what happened to uh Curry",
    "start": "1357559",
    "end": "1364159"
  },
  {
    "text": "Chardon it is a little bit more complicated but what's happening right now is that the query front will",
    "start": "1364159",
    "end": "1370159"
  },
  {
    "text": "actually do a splitting notice that hey Courier One please do the European aggregation Courier two do the North",
    "start": "1370159",
    "end": "1377120"
  },
  {
    "text": "America aggregation and The Courier One actually talked to the store to say hey please just give me",
    "start": "1377120",
    "end": "1382460"
  },
  {
    "text": "the European one don't don't give me the North American data what what this uh allows us to reduce the network traffic",
    "start": "1382460",
    "end": "1388340"
  },
  {
    "text": "right so right now control one store two doesn't have to return all the data like before or overall the data is data sent",
    "start": "1388340",
    "end": "1395000"
  },
  {
    "text": "OverWatch does the same just each part will have legendary now to receive so query well we'll do aggregation for the",
    "start": "1395000",
    "end": "1400700"
  },
  {
    "text": "Europe and query 2 will do the aggregation for North America",
    "start": "1400700",
    "end": "1405799"
  },
  {
    "text": "and right now Corey Franklin will have their job to merge those together but the merchant",
    "start": "1405799",
    "end": "1411260"
  },
  {
    "text": "symbol is simply merged two table like you have two rows you imagine two row easy PC so it's not too much of an overhead for",
    "start": "1411260",
    "end": "1417140"
  },
  {
    "text": "the query front end and query front is designed for this kind of stuff customer customer again is happy I",
    "start": "1417140",
    "end": "1424220"
  },
  {
    "text": "couldn't find a happier Emoji so that's the one I have",
    "start": "1424220",
    "end": "1429158"
  },
  {
    "text": "all right cool so that's a feature and we added this the streaming Supply",
    "start": "1429860",
    "end": "1435440"
  },
  {
    "text": "belief in 1.13 so it's already available right so if you want to take away anything from this talk take this away",
    "start": "1435440",
    "end": "1443360"
  },
  {
    "text": "enable streaming between query and gesture it will save you a lot of memory issues we actually adding adding the",
    "start": "1443360",
    "end": "1449539"
  },
  {
    "text": "query ingester metadata streaming I think it's recently or is it already released it's not released it's not",
    "start": "1449539",
    "end": "1455900"
  },
  {
    "text": "released okay we'll make sure it really stood uh because uh only to happen to quarter",
    "start": "1455900",
    "end": "1461179"
  },
  {
    "text": "cortex a lot of limits right and then we're finding uh different limits we go and we try to combine agriculture limit",
    "start": "1461179",
    "end": "1466340"
  },
  {
    "text": "those are to come so why this saves memory is because if if",
    "start": "1466340",
    "end": "1472280"
  },
  {
    "text": "you were to get all the response from the injector in in an inquiry",
    "start": "1472280",
    "end": "1478100"
  },
  {
    "text": "it's actually big right you can query like the gigs of data and those have to be cash in memory before you start processing it's going to increase your",
    "start": "1478100",
    "end": "1484460"
  },
  {
    "text": "memory for people see a huge Spike of of your memory footprint and then you will not be able to be garbage collected",
    "start": "1484460",
    "end": "1491179"
  },
  {
    "text": "as long as you're processing a query with a streaming you process that you don't pay your process don't pay for",
    "start": "1491179",
    "end": "1496400"
  },
  {
    "text": "some query you can process it and dump it right so those are those uh process data can be garbage collected so you'll",
    "start": "1496400",
    "end": "1502700"
  },
  {
    "text": "see a smaller Spike but it still will still be Spike so yeah so streams are beautiful please",
    "start": "1502700",
    "end": "1508100"
  },
  {
    "text": "enable the streaming it will it would save you a lot of headache",
    "start": "1508100",
    "end": "1512740"
  },
  {
    "text": "so looking back we released the 1.13 1.13 we uh we one",
    "start": "1514460",
    "end": "1520520"
  },
  {
    "text": "of the major feature of 1.13 was parallel compaction and that was the first step to speed up to uh for compact",
    "start": "1520520",
    "end": "1526159"
  },
  {
    "text": "for compactor and it's actually complementary to the partitioning compactor um",
    "start": "1526159",
    "end": "1532039"
  },
  {
    "text": "so partition compactor actually make the pluralization a little bit better but but that still will be complementary making compaction faster",
    "start": "1532039",
    "end": "1538159"
  },
  {
    "text": "uh and we also Fork the the repository from kofana Lab that's cortex tool to",
    "start": "1538159",
    "end": "1543980"
  },
  {
    "text": "Cortex because it just makes sense we want to continue to support cortex tool as the cortex maintenance there's no",
    "start": "1543980",
    "end": "1549620"
  },
  {
    "text": "reason to leave it there leave it then say hey we don't support that anymore it's related to Cortex we want to support it",
    "start": "1549620",
    "end": "1555260"
  },
  {
    "text": "uh and I want to shout out to Alan Frederick and even Nicholas for stepping",
    "start": "1555260",
    "end": "1560539"
  },
  {
    "text": "up to become a maintenance of Cortex when he needed the most cortex went through went through some rough time this year but then it's now back in good",
    "start": "1560539",
    "end": "1567080"
  },
  {
    "text": "hands cool",
    "start": "1567080",
    "end": "1572740"
  },
  {
    "text": "so this is the longtime customer it's the federal Edge because I wrote this slide before I got his permission to use",
    "start": "1572840",
    "end": "1577940"
  },
  {
    "text": "his name but he gave me the permission so I can just explain it so federich he run the wronged a lot of cluster at",
    "start": "1577940",
    "end": "1584000"
  },
  {
    "text": "Adobe for his internal customers uh and it's fast right the the the injection",
    "start": "1584000",
    "end": "1590059"
  },
  {
    "text": "time is less than one second but FedEx is being very conservative in AWS our injection time usually is uh less than",
    "start": "1590059",
    "end": "1596720"
  },
  {
    "text": "10 milliseconds um and also 99.9 percent of the request",
    "start": "1596720",
    "end": "1602779"
  },
  {
    "text": "is less than 1.3 seconds 1.3 seconds speed but if you your query a long range of query that's fairly long okay it's",
    "start": "1602779",
    "end": "1609679"
  },
  {
    "text": "actually not not too bad of an applicable time and usually I think uh fader told me that his query usually",
    "start": "1609679",
    "end": "1615320"
  },
  {
    "text": "spent across one to two months if I remember correctly I have to double double verify and then a cortex we usually take the",
    "start": "1615320",
    "end": "1622159"
  },
  {
    "text": "backward compatibility very seriously so when Federer is trying to upgrade from 0.61 which is a very ancient version to",
    "start": "1622159",
    "end": "1629120"
  },
  {
    "text": "1.13 he uh it was a brick it was easy right he got he got some configuration that",
    "start": "1629120",
    "end": "1634940"
  },
  {
    "text": "was removed but then you know just removed those configurations from your yaml then you're good to go",
    "start": "1634940",
    "end": "1640220"
  },
  {
    "text": "um and then he upgrade to 1.13.0 and then was able to support 100 150 million",
    "start": "1640220",
    "end": "1645740"
  },
  {
    "text": "times series instead of 32. and the platform that was actually just a compaction the period compaction actually enabled a lot of 10 series 150",
    "start": "1645740",
    "end": "1653000"
  },
  {
    "text": "million my my it's not the maximum cortex can handle a lot bigger but there's a few factors we have to",
    "start": "1653000",
    "end": "1658580"
  },
  {
    "text": "consider which can be whole other talk all right so we also have the voice of",
    "start": "1658580",
    "end": "1665120"
  },
  {
    "text": "the community which are the feature that uh we uh customer users have taught us that one first one what first of them is",
    "start": "1665120",
    "end": "1670700"
  },
  {
    "text": "out of samples of a lot of older samples for backfilling data um this is already available merge into",
    "start": "1670700",
    "end": "1677179"
  },
  {
    "text": "premises I think not long ago so we'll enable that in cortex uh soon uh send it",
    "start": "1677179",
    "end": "1683299"
  },
  {
    "text": "for downtown standpoints down sampling there's some discussion about hey what exactly problem we're trying to solve for down sampling is it because faster",
    "start": "1683299",
    "end": "1689779"
  },
  {
    "text": "occurring or saving the storage we don't know yet so that one is still being discussed pertain encryption it is more",
    "start": "1689779",
    "end": "1695960"
  },
  {
    "text": "for like the people who cares about the hey sometimes I might accidentally I might have like a uh pii data personal",
    "start": "1695960",
    "end": "1703039"
  },
  {
    "text": "identifiable information Pi data in my Matrix then I would like to encrypt it on the rest even though I sent to the",
    "start": "1703039",
    "end": "1708440"
  },
  {
    "text": "cloud Central cluster I want to encrypt it at rest and of course you don't want to type one key for",
    "start": "1708440",
    "end": "1713960"
  },
  {
    "text": "all the pendant there will be you know what if like your external customer or your internal customer two different",
    "start": "1713960",
    "end": "1719059"
  },
  {
    "text": "teams they would like to be encrypted separately by different different keys right",
    "start": "1719059",
    "end": "1724299"
  },
  {
    "text": "time series why the feature is important is imagine that you you suspect that hey",
    "start": "1724299",
    "end": "1729919"
  },
  {
    "text": "one of my classes compromised and you go ahead and revoke the access to a key which result in hey the your",
    "start": "1729919",
    "end": "1737240"
  },
  {
    "text": "Matrix are not available anymore for that specific tenant so once you identify oh actually I only have like a",
    "start": "1737240",
    "end": "1742460"
  },
  {
    "text": "two time series they are affected that has like maybe critical number on the for some reason by the best of stealing",
    "start": "1742460",
    "end": "1748340"
  },
  {
    "text": "mistakes then you can say okay I'm gonna delete those two times threes and then re-enable the key then you're back to business",
    "start": "1748340",
    "end": "1753919"
  },
  {
    "text": "so that's one of the use case for using the time series and uh pertain encryption but there's other other use cases as",
    "start": "1753919",
    "end": "1760399"
  },
  {
    "text": "well there's a lot of recent driving behind this to uh just to uh asks and there's a lot more into our backlog so",
    "start": "1760399",
    "end": "1766640"
  },
  {
    "text": "please do tell us what you want um during the slack Channel talk to us share with Alan and I Federate who are",
    "start": "1766640",
    "end": "1773120"
  },
  {
    "text": "out there who are all friendly people you say hi to me I'll say hi back oh I will send Emoji wave back to you",
    "start": "1773120",
    "end": "1779299"
  },
  {
    "text": "um oh you should use beer right because I like beer uh and it goes to the",
    "start": "1779299",
    "end": "1784760"
  },
  {
    "text": "background to upload the issue that you want with the with a thumbs up or you can use a smiley face anything then to",
    "start": "1784760",
    "end": "1790399"
  },
  {
    "text": "let us know that hey this is important to you if we don't understand what is important you will maybe hopefully have",
    "start": "1790399",
    "end": "1795919"
  },
  {
    "text": "a conversation on GitHub or in Slack so if you want to contribute please just",
    "start": "1795919",
    "end": "1801679"
  },
  {
    "text": "go find out there's an issue tagged with a good first time issue um those are something like oh fix their",
    "start": "1801679",
    "end": "1807559"
  },
  {
    "text": "typo fixing this fixing small things and then if those are something you are interested to do please go ahead",
    "start": "1807559",
    "end": "1813820"
  },
  {
    "text": "all right and call to actions cortex currently have three maintainers and then I would like more because there's",
    "start": "1815179",
    "end": "1820399"
  },
  {
    "text": "so much more I want to I want to do but then while spreading a little sin here so if more people can contribute more",
    "start": "1820399",
    "end": "1825980"
  },
  {
    "text": "people can become internet it will be nice and help maintain home trial maintain the Codex style website and the",
    "start": "1825980",
    "end": "1831919"
  },
  {
    "text": "documentation so I'm the person who's trying to maintain the metrics cortex message.io now but I don't have any",
    "start": "1831919",
    "end": "1838220"
  },
  {
    "text": "artistic sense right I need someone who you know who really know the website I can know that to help me to predefather",
    "start": "1838220",
    "end": "1843320"
  },
  {
    "text": "organize the information a little bit better and all that um same thing for documentation cortex",
    "start": "1843320",
    "end": "1848600"
  },
  {
    "text": "documentation is not bad right now but you have a lot of room for improvement so if you finally typo you found any",
    "start": "1848600",
    "end": "1854419"
  },
  {
    "text": "information can be reorganized uh on the website it will be awesome for example I wanted to update the architecture",
    "start": "1854419",
    "end": "1860059"
  },
  {
    "text": "diagram on the cortex website that previously and the the last one is the",
    "start": "1860059",
    "end": "1866720"
  },
  {
    "text": "uh uh automatic benchmarking framework which is available in the Premier series report but they're not cortex and I",
    "start": "1866720",
    "end": "1872659"
  },
  {
    "text": "really want it because it will be so nice if appear comes in I do a slash Benchmark then you can automatically see the performance difference all that so",
    "start": "1872659",
    "end": "1878840"
  },
  {
    "text": "you don't have to do yourself uh eventually I might get to that but then if you cannot wait please tell me that oh I forgot to mention please engage",
    "start": "1878840",
    "end": "1885200"
  },
  {
    "text": "with the uh what Learners Community is trying to do they are trying to create a",
    "start": "1885200",
    "end": "1890240"
  },
  {
    "text": "procure engine that's scalable right so please let's join for Swiss then let's let's create a more scalable uh function",
    "start": "1890240",
    "end": "1897140"
  },
  {
    "text": "agent that's a support shot in beta shardin and note that right it's going to the arena of like how do you um",
    "start": "1897140",
    "end": "1902480"
  },
  {
    "text": "optimize like funkyos in the SQL in the old days what is this oh so thank you that's",
    "start": "1902480",
    "end": "1909020"
  },
  {
    "text": "everything uh sorry I'm a little bit over time but I guess we have some time for questions",
    "start": "1909020",
    "end": "1914679"
  },
  {
    "text": "I can maybe kick it off um I I noticed that um the architecture",
    "start": "1920059",
    "end": "1926120"
  },
  {
    "text": "um of the sort of query and storage looks very similar to Druid was there any exchange of ideas there or have you",
    "start": "1926120",
    "end": "1931940"
  },
  {
    "text": "guys looked at Druid at all to to Druid the database",
    "start": "1931940",
    "end": "1937360"
  },
  {
    "text": "it's not me because I have no idea what you're doing so so yeah you might check",
    "start": "1937399",
    "end": "1942679"
  },
  {
    "text": "it out it's a very interesting uh similar structure yeah cool cool yeah with the object storage on the back end",
    "start": "1942679",
    "end": "1948140"
  },
  {
    "text": "yeah anyway any other questions cool I have maybe a weird question sure",
    "start": "1948140",
    "end": "1956000"
  },
  {
    "text": "so in the new architecture diagram you have many components I wanted to know which one we're",
    "start": "1956000",
    "end": "1961100"
  },
  {
    "text": "stateless and you know I could run and say on the spot instance versus some that are stateful that I",
    "start": "1961100",
    "end": "1967880"
  },
  {
    "text": "don't want to lose this one right uh I'm imagining the compactor for",
    "start": "1967880",
    "end": "1972980"
  },
  {
    "text": "example if it's interrupted not a big deal can restart yeah stuff like that so",
    "start": "1972980",
    "end": "1978200"
  },
  {
    "text": "great question so some so distributor require front-end",
    "start": "1978200",
    "end": "1984140"
  },
  {
    "text": "Aquarius they are always stateless some components we can choose to run the",
    "start": "1984140",
    "end": "1990500"
  },
  {
    "text": "state four or not like uh ingesters should be stateful we should not never lose your data but components",
    "start": "1990500",
    "end": "1998179"
  },
  {
    "text": "like story Gateway you can choose uh mainly because like as I'm we are",
    "start": "1998179",
    "end": "2004480"
  },
  {
    "text": "downloading parts of the blocks uh it makes sense to be stateful because open restart you don't have to download",
    "start": "2004480",
    "end": "2010659"
  },
  {
    "text": "everything again uh compactor usually we we run state",
    "start": "2010659",
    "end": "2016240"
  },
  {
    "text": "food but just because we wanna more disk it doesn't need you but like case I want",
    "start": "2016240",
    "end": "2022720"
  },
  {
    "text": "to put a PVC there so I can put more disk if I if I have a huge tenant that I",
    "start": "2022720",
    "end": "2028600"
  },
  {
    "text": "have to compact but if if you are node it has the disk",
    "start": "2028600",
    "end": "2033640"
  },
  {
    "text": "enough for the size of your tenants you can be stateless okay",
    "start": "2033640",
    "end": "2039700"
  },
  {
    "text": "that was my question thank you thank you",
    "start": "2039700",
    "end": "2043679"
  },
  {
    "text": "hi uh thanks for the talk I have a question regarding the diagram why a ruler talks to the queryer and not to",
    "start": "2050020",
    "end": "2056378"
  },
  {
    "text": "query front end uh it's a good question we are thinking and",
    "start": "2056379",
    "end": "2061658"
  },
  {
    "text": "changing that uh and the reason because we want so right now this is not a 100",
    "start": "2061659",
    "end": "2068158"
  },
  {
    "text": "uh correct what happens is like the rulers run Aquarius embedded so it's the",
    "start": "2068159",
    "end": "2074560"
  },
  {
    "text": "same code but run in the same process logically is like that but right now it",
    "start": "2074560",
    "end": "2080200"
  },
  {
    "text": "runs the ruler doesn't really talk to the query talk directly to investors and store Gators uh",
    "start": "2080200",
    "end": "2087339"
  },
  {
    "text": "but we want to change that we need to do lots of benchmarks to see if makes sense especially because our rulers are",
    "start": "2087339",
    "end": "2093940"
  },
  {
    "text": "running instant queries like getting recent data mostly but we want to change that so we can get some of the",
    "start": "2093940",
    "end": "2100359"
  },
  {
    "text": "optimizations that we do in the query front end like okay thank you and one more question uh how distributor does",
    "start": "2100359",
    "end": "2106599"
  },
  {
    "text": "the duplication so usually you have like a",
    "start": "2106599",
    "end": "2113279"
  },
  {
    "text": "so it gets one of the pairs and say like this is the main one this is the the one",
    "start": "2114099",
    "end": "2121240"
  },
  {
    "text": "that will drop the data okay and those Prometheus is they need to talk to the same distributor all the time or you",
    "start": "2121240",
    "end": "2127300"
  },
  {
    "text": "don't have multiple Distributors everything like that that first Arrow there is a load balance okay thank you",
    "start": "2127300",
    "end": "2134800"
  },
  {
    "text": "very good observation about Korea from and PR will come by the way",
    "start": "2134800",
    "end": "2140079"
  },
  {
    "text": "no we actually started working on the on the on that already we just appear to enable that uh but it's just the first",
    "start": "2140079",
    "end": "2145900"
  },
  {
    "text": "step but feel free to chime in in that PR or the issue Hey so uh quick question you mentioned",
    "start": "2145900",
    "end": "2152440"
  },
  {
    "text": "is it a feature in progress to uh a sample or sorry to accept out of order sample ingestion and uh how are you",
    "start": "2152440",
    "end": "2160119"
  },
  {
    "text": "looking to approach that it's a great idea very helpful so you want to take",
    "start": "2160119",
    "end": "2165160"
  },
  {
    "text": "the hello uh how yeah so I think how it's mostly so Prometheus right yeah so like",
    "start": "2165160",
    "end": "2171460"
  },
  {
    "text": "Prometheus tsdb already have support for it uh basically it's creating a new head",
    "start": "2171460",
    "end": "2177460"
  },
  {
    "text": "chunk to accept the out of samples there's some overhead there uh in our",
    "start": "2177460",
    "end": "2183579"
  },
  {
    "text": "case is basically uh making like making it available for the customers to enable it yeah just before",
    "start": "2183579",
    "end": "2191260"
  },
  {
    "text": "we enable they want to be very careful about uh not to have users set up their own tour right so when I do our own",
    "start": "2191260",
    "end": "2196780"
  },
  {
    "text": "benchmarking when I say hey when I give a set of recommendations if you enable this maybe you don't want to backfill",
    "start": "2196780",
    "end": "2202359"
  },
  {
    "text": "like one year ago simple they might cause some issue like that yeah",
    "start": "2202359",
    "end": "2208020"
  },
  {
    "text": "I guess that's everything we ran out of time thank you so much for joining hopefully you enjoyed it out",
    "start": "2210460",
    "end": "2217310"
  },
  {
    "text": "[Applause]",
    "start": "2217310",
    "end": "2220420"
  }
]