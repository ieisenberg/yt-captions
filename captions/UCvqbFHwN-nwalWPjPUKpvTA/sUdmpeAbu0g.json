[
  {
    "start": "0",
    "end": "350000"
  },
  {
    "text": "hi everyone welcome to today's webinar",
    "start": "3040",
    "end": "5839"
  },
  {
    "text": "my name is",
    "start": "5839",
    "end": "7520"
  },
  {
    "text": "and i'm a software engineer at",
    "start": "7520",
    "end": "9440"
  },
  {
    "text": "programmatic today i'll be talking about",
    "start": "9440",
    "end": "12480"
  },
  {
    "text": "an open source project called cubecaria",
    "start": "12480",
    "end": "15519"
  },
  {
    "text": "and how you can manage thousands of",
    "start": "15519",
    "end": "17680"
  },
  {
    "text": "kubernetes applications by using look",
    "start": "17680",
    "end": "20080"
  },
  {
    "text": "area",
    "start": "20080",
    "end": "21680"
  },
  {
    "text": "let me briefly introduce myself i'm a",
    "start": "21680",
    "end": "24160"
  },
  {
    "text": "software engineer at fibromatic mostly",
    "start": "24160",
    "end": "26720"
  },
  {
    "text": "focusing on service and application",
    "start": "26720",
    "end": "29279"
  },
  {
    "text": "management on",
    "start": "29279",
    "end": "30960"
  },
  {
    "text": "cubometric kubernetes platform and i'm",
    "start": "30960",
    "end": "33520"
  },
  {
    "text": "one of the core maintainers of tube",
    "start": "33520",
    "end": "35360"
  },
  {
    "text": "carrier project",
    "start": "35360",
    "end": "37440"
  },
  {
    "text": "before we dive into cube carrier let's",
    "start": "37440",
    "end": "39680"
  },
  {
    "text": "talk about kubernetes operators",
    "start": "39680",
    "end": "42160"
  },
  {
    "text": "operators are",
    "start": "42160",
    "end": "43600"
  },
  {
    "text": "software extensions of kubernetes",
    "start": "43600",
    "end": "46239"
  },
  {
    "text": "which make use of customer resources to",
    "start": "46239",
    "end": "48800"
  },
  {
    "text": "manage application life cycle including",
    "start": "48800",
    "end": "52559"
  },
  {
    "text": "deployment upgrades and backups",
    "start": "52559",
    "end": "55920"
  },
  {
    "text": "operators are working nicely in single",
    "start": "55920",
    "end": "59280"
  },
  {
    "text": "cluster scenario however in the",
    "start": "59280",
    "end": "62239"
  },
  {
    "text": "multi-cluster scenario imagine you have",
    "start": "62239",
    "end": "64799"
  },
  {
    "text": "hundreds of clusters or thousands of",
    "start": "64799",
    "end": "67119"
  },
  {
    "text": "clusters",
    "start": "67119",
    "end": "68240"
  },
  {
    "text": "managing application resources in every",
    "start": "68240",
    "end": "71040"
  },
  {
    "text": "single cluster",
    "start": "71040",
    "end": "73600"
  },
  {
    "text": "can be complicated and the process needs",
    "start": "73600",
    "end": "76640"
  },
  {
    "text": "to be automated relying on a single",
    "start": "76640",
    "end": "80880"
  },
  {
    "text": "operator does not scale very well in",
    "start": "80880",
    "end": "83840"
  },
  {
    "text": "those complicated scenarios",
    "start": "83840",
    "end": "87040"
  },
  {
    "text": "that's why we built cubecarrier an open",
    "start": "87040",
    "end": "90159"
  },
  {
    "text": "source platform for managed applications",
    "start": "90159",
    "end": "92640"
  },
  {
    "text": "and services across multiple kubernetes",
    "start": "92640",
    "end": "95360"
  },
  {
    "text": "clusters",
    "start": "95360",
    "end": "96479"
  },
  {
    "text": "and it is built generically to work with",
    "start": "96479",
    "end": "100560"
  },
  {
    "text": "any",
    "start": "100560",
    "end": "101439"
  },
  {
    "text": "kubernetes operators also it provides a",
    "start": "101439",
    "end": "104880"
  },
  {
    "text": "centralized service hub to expose your",
    "start": "104880",
    "end": "107680"
  },
  {
    "text": "services and applications to users",
    "start": "107680",
    "end": "112240"
  },
  {
    "text": "here is a high level overview of uh cube",
    "start": "112240",
    "end": "116000"
  },
  {
    "text": "carrier so in two carrier we have a",
    "start": "116000",
    "end": "118399"
  },
  {
    "text": "management cluster which",
    "start": "118399",
    "end": "120880"
  },
  {
    "text": "has a cube carrier installed and running",
    "start": "120880",
    "end": "123840"
  },
  {
    "text": "a service provider can register on",
    "start": "123840",
    "end": "126719"
  },
  {
    "text": "service clusters to keep carrier and for",
    "start": "126719",
    "end": "130160"
  },
  {
    "text": "each service cluster they will deploy",
    "start": "130160",
    "end": "132879"
  },
  {
    "text": "the application operator",
    "start": "132879",
    "end": "136560"
  },
  {
    "text": "once the service user comes to",
    "start": "136560",
    "end": "138160"
  },
  {
    "text": "cubecarrier",
    "start": "138160",
    "end": "139520"
  },
  {
    "text": "the service user will only interact with",
    "start": "139520",
    "end": "143120"
  },
  {
    "text": "the management cluster and provide",
    "start": "143120",
    "end": "145760"
  },
  {
    "text": "instructions to",
    "start": "145760",
    "end": "147440"
  },
  {
    "text": "select and manage services and the real",
    "start": "147440",
    "end": "151680"
  },
  {
    "text": "service instances and the application",
    "start": "151680",
    "end": "154319"
  },
  {
    "text": "workloads will be deployed on service",
    "start": "154319",
    "end": "157760"
  },
  {
    "text": "cluster",
    "start": "157760",
    "end": "158879"
  },
  {
    "text": "by the application operators",
    "start": "158879",
    "end": "162800"
  },
  {
    "text": "then",
    "start": "163280",
    "end": "164720"
  },
  {
    "text": "let's",
    "start": "164720",
    "end": "165680"
  },
  {
    "text": "talk about cube carrier in more details",
    "start": "165680",
    "end": "168720"
  },
  {
    "text": "so as i mentioned in previous slides",
    "start": "168720",
    "end": "171200"
  },
  {
    "text": "there are two different types of",
    "start": "171200",
    "end": "173920"
  },
  {
    "text": "clusters in cube carrier one is a",
    "start": "173920",
    "end": "176239"
  },
  {
    "text": "management cluster we call it service",
    "start": "176239",
    "end": "178400"
  },
  {
    "text": "hub",
    "start": "178400",
    "end": "179519"
  },
  {
    "text": "another one type is service cluster",
    "start": "179519",
    "end": "181920"
  },
  {
    "text": "which will be",
    "start": "181920",
    "end": "183680"
  },
  {
    "text": "registered by service providers and",
    "start": "183680",
    "end": "186800"
  },
  {
    "text": "run application workloads and service",
    "start": "186800",
    "end": "189120"
  },
  {
    "text": "instances",
    "start": "189120",
    "end": "191840"
  },
  {
    "text": "also as i mentioned cubecarrier works",
    "start": "192000",
    "end": "194319"
  },
  {
    "text": "with kubernetes operators",
    "start": "194319",
    "end": "196720"
  },
  {
    "text": "which means the application operators",
    "start": "196720",
    "end": "198879"
  },
  {
    "text": "will be running the service clusters",
    "start": "198879",
    "end": "202239"
  },
  {
    "text": "and the cube carrier has a discover",
    "start": "202239",
    "end": "205519"
  },
  {
    "text": "mechanism to discover",
    "start": "205519",
    "end": "207840"
  },
  {
    "text": "crds of those operators and make some",
    "start": "207840",
    "end": "210959"
  },
  {
    "text": "available for user in the centralized",
    "start": "210959",
    "end": "214239"
  },
  {
    "text": "service hub",
    "start": "214239",
    "end": "216159"
  },
  {
    "text": "then cubecarrier also propagates the",
    "start": "216159",
    "end": "218799"
  },
  {
    "text": "customer resources from",
    "start": "218799",
    "end": "221120"
  },
  {
    "text": "the centralized service hub to service",
    "start": "221120",
    "end": "223440"
  },
  {
    "text": "clusters to drive the operators to",
    "start": "223440",
    "end": "226720"
  },
  {
    "text": "create",
    "start": "226720",
    "end": "228159"
  },
  {
    "text": "application workloads and the service",
    "start": "228159",
    "end": "230080"
  },
  {
    "text": "instances",
    "start": "230080",
    "end": "231519"
  },
  {
    "text": "also keep carrier has multi-tenant",
    "start": "231519",
    "end": "234799"
  },
  {
    "text": "c support",
    "start": "234799",
    "end": "236480"
  },
  {
    "text": "which means for",
    "start": "236480",
    "end": "238080"
  },
  {
    "text": "carrier installation",
    "start": "238080",
    "end": "240640"
  },
  {
    "text": "it supports multiple service providers",
    "start": "240640",
    "end": "243439"
  },
  {
    "text": "and multiple service consumers",
    "start": "243439",
    "end": "247360"
  },
  {
    "text": "this picture shows a",
    "start": "248239",
    "end": "250720"
  },
  {
    "text": "an overview of a multi-tenancy in cube",
    "start": "250720",
    "end": "254239"
  },
  {
    "text": "carrier",
    "start": "254239",
    "end": "255439"
  },
  {
    "text": "so in cube carrier there are three",
    "start": "255439",
    "end": "257359"
  },
  {
    "text": "personas",
    "start": "257359",
    "end": "258639"
  },
  {
    "text": "uh one is a pro",
    "start": "258639",
    "end": "260560"
  },
  {
    "text": "platform operator which will operate the",
    "start": "260560",
    "end": "264400"
  },
  {
    "text": "entire management cluster and the",
    "start": "264400",
    "end": "266560"
  },
  {
    "text": "managers could carry an installation and",
    "start": "266560",
    "end": "269120"
  },
  {
    "text": "the cubecarrier accounts",
    "start": "269120",
    "end": "271199"
  },
  {
    "text": "and another one is a service provider",
    "start": "271199",
    "end": "274960"
  },
  {
    "text": "which will manage service clusters for",
    "start": "274960",
    "end": "277199"
  },
  {
    "text": "example register them to",
    "start": "277199",
    "end": "279440"
  },
  {
    "text": "keep",
    "start": "279440",
    "end": "280479"
  },
  {
    "text": "carrier management cluster and also a",
    "start": "280479",
    "end": "283600"
  },
  {
    "text": "service provider will manage",
    "start": "283600",
    "end": "286080"
  },
  {
    "text": "operators and the service instances",
    "start": "286080",
    "end": "288800"
  },
  {
    "text": "which are running in the service cluster",
    "start": "288800",
    "end": "292240"
  },
  {
    "text": "then we have a service consumer who will",
    "start": "292240",
    "end": "295040"
  },
  {
    "text": "interact with the",
    "start": "295040",
    "end": "297360"
  },
  {
    "text": "club",
    "start": "297360",
    "end": "298479"
  },
  {
    "text": "carrier management cluster and request",
    "start": "298479",
    "end": "301680"
  },
  {
    "text": "and manage the services",
    "start": "301680",
    "end": "305360"
  },
  {
    "text": "and for each",
    "start": "305360",
    "end": "307199"
  },
  {
    "text": "account in cube carrier",
    "start": "307199",
    "end": "309360"
  },
  {
    "text": "it",
    "start": "309360",
    "end": "310479"
  },
  {
    "text": "it has a dedicated namespace",
    "start": "310479",
    "end": "313039"
  },
  {
    "text": "to isolate the resources from each other",
    "start": "313039",
    "end": "316720"
  },
  {
    "text": "and the cubecarrier will create our",
    "start": "316720",
    "end": "318960"
  },
  {
    "text": "backup permissions automatically for",
    "start": "318960",
    "end": "321600"
  },
  {
    "text": "each account to achieve multi-tenants",
    "start": "321600",
    "end": "326240"
  },
  {
    "text": "so",
    "start": "326320",
    "end": "327520"
  },
  {
    "text": "and so those are basic uh concepts and",
    "start": "327520",
    "end": "331360"
  },
  {
    "text": "the high level overview of cubecarrier",
    "start": "331360",
    "end": "334479"
  },
  {
    "text": "architecture",
    "start": "334479",
    "end": "336000"
  },
  {
    "text": "now let's move to the demo session in",
    "start": "336000",
    "end": "339039"
  },
  {
    "text": "the demo i will show you how to",
    "start": "339039",
    "end": "341680"
  },
  {
    "text": "um manage a radius database as a service",
    "start": "341680",
    "end": "345440"
  },
  {
    "text": "across multiple clusters by using",
    "start": "345440",
    "end": "347440"
  },
  {
    "text": "cubecarrier",
    "start": "347440",
    "end": "350320"
  },
  {
    "start": "350000",
    "end": "400000"
  },
  {
    "text": "so uh",
    "start": "351520",
    "end": "353360"
  },
  {
    "text": "firstly let me",
    "start": "353360",
    "end": "356400"
  },
  {
    "text": "present today's demo setup i'm using",
    "start": "356800",
    "end": "360080"
  },
  {
    "text": "kubromatic kubernetes platform to create",
    "start": "360080",
    "end": "363520"
  },
  {
    "text": "clusters in different providers as i",
    "start": "363520",
    "end": "366400"
  },
  {
    "text": "mentioned",
    "start": "366400",
    "end": "367520"
  },
  {
    "text": "in previous slides cube carrier work",
    "start": "367520",
    "end": "369919"
  },
  {
    "text": "with any kubernetes operators any",
    "start": "369919",
    "end": "373360"
  },
  {
    "text": "kubernetes distributions so in today's",
    "start": "373360",
    "end": "376080"
  },
  {
    "text": "demo we have four clusters across differ",
    "start": "376080",
    "end": "378960"
  },
  {
    "text": "across four providers",
    "start": "378960",
    "end": "381759"
  },
  {
    "text": "and we have a management cluster which",
    "start": "381759",
    "end": "385039"
  },
  {
    "text": "will",
    "start": "385039",
    "end": "386080"
  },
  {
    "text": "have which will have a carrier",
    "start": "386080",
    "end": "389440"
  },
  {
    "text": "up and running and we will have another",
    "start": "389440",
    "end": "392160"
  },
  {
    "text": "three service clusters which will be",
    "start": "392160",
    "end": "395520"
  },
  {
    "text": "running the real",
    "start": "395520",
    "end": "397440"
  },
  {
    "text": "radius database instances",
    "start": "397440",
    "end": "400639"
  },
  {
    "text": "okay let me share my terminal with you",
    "start": "400639",
    "end": "404000"
  },
  {
    "text": "so",
    "start": "404000",
    "end": "404800"
  },
  {
    "text": "so as we mentioned",
    "start": "404800",
    "end": "406400"
  },
  {
    "text": "we have four clusters and you can see",
    "start": "406400",
    "end": "409599"
  },
  {
    "text": "this is the management cluster and the",
    "start": "409599",
    "end": "412639"
  },
  {
    "text": "the rest of the clusters are for the",
    "start": "412639",
    "end": "415039"
  },
  {
    "text": "service cluster one two three",
    "start": "415039",
    "end": "419120"
  },
  {
    "text": "and",
    "start": "419120",
    "end": "420160"
  },
  {
    "text": "the first thing i would like to show you",
    "start": "420160",
    "end": "422560"
  },
  {
    "text": "is about the account that we mentioned",
    "start": "422560",
    "end": "426319"
  },
  {
    "text": "in cube carrier",
    "start": "426319",
    "end": "427840"
  },
  {
    "text": "so",
    "start": "427840",
    "end": "428720"
  },
  {
    "text": "here is an example of a account",
    "start": "428720",
    "end": "432319"
  },
  {
    "text": "uh you can see this account is for the",
    "start": "432319",
    "end": "435199"
  },
  {
    "text": "service provider",
    "start": "435199",
    "end": "436560"
  },
  {
    "text": "and if you look at the the rule rules",
    "start": "436560",
    "end": "440319"
  },
  {
    "text": "field",
    "start": "440319",
    "end": "442080"
  },
  {
    "text": "and this indicates the rule of this",
    "start": "442080",
    "end": "444960"
  },
  {
    "text": "account you keep",
    "start": "444960",
    "end": "446479"
  },
  {
    "text": "carrier for example it can be provider",
    "start": "446479",
    "end": "449120"
  },
  {
    "text": "which means this is a service provider",
    "start": "449120",
    "end": "451360"
  },
  {
    "text": "and it can also be tenant which means",
    "start": "451360",
    "end": "453680"
  },
  {
    "text": "it's a",
    "start": "453680",
    "end": "455199"
  },
  {
    "text": "service consumer also it can be a",
    "start": "455199",
    "end": "458560"
  },
  {
    "text": "provider and the tenant at the same time",
    "start": "458560",
    "end": "461360"
  },
  {
    "text": "which means you can provide your",
    "start": "461360",
    "end": "464000"
  },
  {
    "text": "services to other users at and at the",
    "start": "464000",
    "end": "467440"
  },
  {
    "text": "same time you can also consume services",
    "start": "467440",
    "end": "470240"
  },
  {
    "text": "from other providers and also there is a",
    "start": "470240",
    "end": "473840"
  },
  {
    "text": "subject field",
    "start": "473840",
    "end": "476240"
  },
  {
    "text": "in the account definition this is a",
    "start": "476240",
    "end": "478720"
  },
  {
    "text": "similar to the",
    "start": "478720",
    "end": "480560"
  },
  {
    "text": "subjects in",
    "start": "480560",
    "end": "482160"
  },
  {
    "text": "the cluster row binding and row body of",
    "start": "482160",
    "end": "485120"
  },
  {
    "text": "kubernetes object",
    "start": "485120",
    "end": "486800"
  },
  {
    "text": "and the uh cube carrier will create",
    "start": "486800",
    "end": "491039"
  },
  {
    "text": "our back rules and role bindings for",
    "start": "491039",
    "end": "494400"
  },
  {
    "text": "the users here to make sure that those",
    "start": "494400",
    "end": "497120"
  },
  {
    "text": "users can have access to this account",
    "start": "497120",
    "end": "501360"
  },
  {
    "text": "so this is as i mentioned this is an",
    "start": "501360",
    "end": "503360"
  },
  {
    "text": "example of the provider",
    "start": "503360",
    "end": "505280"
  },
  {
    "text": "and",
    "start": "505280",
    "end": "506560"
  },
  {
    "text": "let me show you",
    "start": "506560",
    "end": "508240"
  },
  {
    "text": "some examples of the tenant",
    "start": "508240",
    "end": "511199"
  },
  {
    "text": "so here are examples of tenants account",
    "start": "511199",
    "end": "513839"
  },
  {
    "text": "and you can see the rule is tenant",
    "start": "513839",
    "end": "516719"
  },
  {
    "text": "and currently in our system we have",
    "start": "516719",
    "end": "519599"
  },
  {
    "text": "already",
    "start": "519599",
    "end": "520560"
  },
  {
    "text": "four",
    "start": "520560",
    "end": "522560"
  },
  {
    "text": "accounts created let me go through them",
    "start": "522560",
    "end": "525680"
  },
  {
    "text": "one by one with you so the first one is",
    "start": "525680",
    "end": "528320"
  },
  {
    "text": "the radius provider which will be",
    "start": "528320",
    "end": "530480"
  },
  {
    "text": "providing radius database services in",
    "start": "530480",
    "end": "532880"
  },
  {
    "text": "our demo and there's another three",
    "start": "532880",
    "end": "536640"
  },
  {
    "text": "accounts are",
    "start": "536640",
    "end": "538160"
  },
  {
    "text": "tenants",
    "start": "538160",
    "end": "539360"
  },
  {
    "text": "they will be consuming the radius",
    "start": "539360",
    "end": "541680"
  },
  {
    "text": "services from the provider",
    "start": "541680",
    "end": "545600"
  },
  {
    "text": "okay",
    "start": "545600",
    "end": "546640"
  },
  {
    "text": "and the next thing i would like to show",
    "start": "546640",
    "end": "548720"
  },
  {
    "text": "you is about the service cluster",
    "start": "548720",
    "end": "551519"
  },
  {
    "text": "as you can see we have",
    "start": "551519",
    "end": "553519"
  },
  {
    "text": "currently we have three service clusters",
    "start": "553519",
    "end": "557120"
  },
  {
    "text": "and",
    "start": "557120",
    "end": "558480"
  },
  {
    "text": "there are two of them",
    "start": "558480",
    "end": "561120"
  },
  {
    "text": "which are already registered to",
    "start": "561120",
    "end": "564480"
  },
  {
    "text": "cubecarrier you can see the the service",
    "start": "564480",
    "end": "567680"
  },
  {
    "text": "classroom one and two are already",
    "start": "567680",
    "end": "569440"
  },
  {
    "text": "registered in cubecarrier and we will",
    "start": "569440",
    "end": "572480"
  },
  {
    "text": "use the service cluster 3",
    "start": "572480",
    "end": "574640"
  },
  {
    "text": "later in the demo",
    "start": "574640",
    "end": "576880"
  },
  {
    "text": "and you can also see the status are",
    "start": "576880",
    "end": "579360"
  },
  {
    "text": "ready and also the kubernetes version of",
    "start": "579360",
    "end": "582080"
  },
  {
    "text": "those",
    "start": "582080",
    "end": "583360"
  },
  {
    "text": "service clusters",
    "start": "583360",
    "end": "585040"
  },
  {
    "text": "so",
    "start": "585040",
    "end": "585839"
  },
  {
    "text": "so now we have registered the service",
    "start": "585839",
    "end": "588720"
  },
  {
    "text": "cluster to to cubecarrier and",
    "start": "588720",
    "end": "592320"
  },
  {
    "text": "we have already deployed the radius",
    "start": "592320",
    "end": "594560"
  },
  {
    "text": "operator on",
    "start": "594560",
    "end": "595920"
  },
  {
    "text": "each of them the nexus thing is to",
    "start": "595920",
    "end": "600480"
  },
  {
    "text": "let cubecarrier to discover the",
    "start": "600480",
    "end": "603760"
  },
  {
    "text": "crds of radius operator in the service",
    "start": "603760",
    "end": "607440"
  },
  {
    "text": "cluster",
    "start": "607440",
    "end": "608480"
  },
  {
    "text": "how can we do that we can do that by",
    "start": "608480",
    "end": "611600"
  },
  {
    "text": "creating a",
    "start": "611600",
    "end": "613519"
  },
  {
    "text": "catalog entry set",
    "start": "613519",
    "end": "616399"
  },
  {
    "start": "615000",
    "end": "760000"
  },
  {
    "text": "so here is an example of catalog entry",
    "start": "616399",
    "end": "618720"
  },
  {
    "text": "set",
    "start": "618720",
    "end": "619760"
  },
  {
    "text": "and if you look into the",
    "start": "619760",
    "end": "622480"
  },
  {
    "text": "discover configuration and there is a",
    "start": "622480",
    "end": "625279"
  },
  {
    "text": "crd field which you can specify the cr",
    "start": "625279",
    "end": "629519"
  },
  {
    "text": "the name",
    "start": "629519",
    "end": "630720"
  },
  {
    "text": "that you would like to",
    "start": "630720",
    "end": "633519"
  },
  {
    "text": "let a cube carrier to discover from the",
    "start": "633519",
    "end": "636880"
  },
  {
    "text": "service cluster in my case it's a radius",
    "start": "636880",
    "end": "640480"
  },
  {
    "text": "crd and also in the exposed config you",
    "start": "640480",
    "end": "644000"
  },
  {
    "text": "can specify which fields of the crd you",
    "start": "644000",
    "end": "648160"
  },
  {
    "text": "would like to",
    "start": "648160",
    "end": "649600"
  },
  {
    "text": "expose to user so in this case we",
    "start": "649600",
    "end": "652959"
  },
  {
    "text": "specify some of the fields and we want",
    "start": "652959",
    "end": "656160"
  },
  {
    "text": "to expose them to the end user",
    "start": "656160",
    "end": "658959"
  },
  {
    "text": "and also we point",
    "start": "658959",
    "end": "661040"
  },
  {
    "text": "to the crd in the catalog entry set so",
    "start": "661040",
    "end": "664720"
  },
  {
    "text": "the catalog entry set will",
    "start": "664720",
    "end": "667440"
  },
  {
    "text": "propagate the crd with this name from",
    "start": "667440",
    "end": "671120"
  },
  {
    "text": "service cluster to our management",
    "start": "671120",
    "end": "673680"
  },
  {
    "text": "cluster",
    "start": "673680",
    "end": "676240"
  },
  {
    "text": "okay let's try to create this in our",
    "start": "676880",
    "end": "681839"
  },
  {
    "text": "management cluster as a member of a",
    "start": "681839",
    "end": "684720"
  },
  {
    "text": "provider member",
    "start": "684720",
    "end": "688279"
  },
  {
    "text": "okay after this catalog entry set is",
    "start": "690399",
    "end": "693519"
  },
  {
    "text": "created next step",
    "start": "693519",
    "end": "695360"
  },
  {
    "text": "would be i'll create a catalog so here",
    "start": "695360",
    "end": "698959"
  },
  {
    "text": "is an example",
    "start": "698959",
    "end": "700800"
  },
  {
    "text": "the catalog",
    "start": "700800",
    "end": "702880"
  },
  {
    "text": "so for the catalog there are two",
    "start": "702880",
    "end": "705839"
  },
  {
    "text": "selectors in the spec one is for",
    "start": "705839",
    "end": "708640"
  },
  {
    "text": "selecting tenants",
    "start": "708640",
    "end": "710720"
  },
  {
    "text": "in this case we select the",
    "start": "710720",
    "end": "713680"
  },
  {
    "text": "tenant by using",
    "start": "713680",
    "end": "715760"
  },
  {
    "text": "label selectors for example",
    "start": "715760",
    "end": "718240"
  },
  {
    "text": "the talents with the label service with",
    "start": "718240",
    "end": "720959"
  },
  {
    "text": "value radius will be selected",
    "start": "720959",
    "end": "723200"
  },
  {
    "text": "i have already pre-configured our tenant",
    "start": "723200",
    "end": "725920"
  },
  {
    "text": "a and tenant b",
    "start": "725920",
    "end": "727839"
  },
  {
    "text": "by adding this label so only tenant a",
    "start": "727839",
    "end": "730720"
  },
  {
    "text": "and tenant b will see the services from",
    "start": "730720",
    "end": "734160"
  },
  {
    "text": "the this catalog",
    "start": "734160",
    "end": "736639"
  },
  {
    "text": "and",
    "start": "736639",
    "end": "738000"
  },
  {
    "text": "also there is a selector for catalog",
    "start": "738000",
    "end": "740720"
  },
  {
    "text": "entry and",
    "start": "740720",
    "end": "742639"
  },
  {
    "text": "in this case for a simple",
    "start": "742639",
    "end": "746480"
  },
  {
    "text": "demonstration we will select all the",
    "start": "746480",
    "end": "748800"
  },
  {
    "text": "catalog entries",
    "start": "748800",
    "end": "751760"
  },
  {
    "text": "okay so",
    "start": "751760",
    "end": "753279"
  },
  {
    "text": "it's time to create the catalog",
    "start": "753279",
    "end": "758200"
  },
  {
    "text": "here",
    "start": "758320",
    "end": "760480"
  },
  {
    "start": "760000",
    "end": "1000000"
  },
  {
    "text": "and after the catalog",
    "start": "760480",
    "end": "762880"
  },
  {
    "text": "is created we can wait until cubecarrier",
    "start": "762880",
    "end": "767519"
  },
  {
    "text": "to discover the crds from",
    "start": "767519",
    "end": "771120"
  },
  {
    "text": "service clusters and makes them",
    "start": "771120",
    "end": "773600"
  },
  {
    "text": "available for the users",
    "start": "773600",
    "end": "775760"
  },
  {
    "text": "so",
    "start": "775760",
    "end": "776800"
  },
  {
    "text": "for checking if",
    "start": "776800",
    "end": "778639"
  },
  {
    "text": "the service are available for users we",
    "start": "778639",
    "end": "781600"
  },
  {
    "text": "can check the offerings objects",
    "start": "781600",
    "end": "784800"
  },
  {
    "text": "from the tenants perspective",
    "start": "784800",
    "end": "789120"
  },
  {
    "text": "so you can see there are",
    "start": "789120",
    "end": "791360"
  },
  {
    "text": "two uh offerings objects that are",
    "start": "791360",
    "end": "794639"
  },
  {
    "text": "available for the user and",
    "start": "794639",
    "end": "797440"
  },
  {
    "text": "those offerings are explained by the",
    "start": "797440",
    "end": "800240"
  },
  {
    "text": "names for example for the first one",
    "start": "800240",
    "end": "803680"
  },
  {
    "text": "it's a radius service from service",
    "start": "803680",
    "end": "806000"
  },
  {
    "text": "cluster one",
    "start": "806000",
    "end": "807600"
  },
  {
    "text": "from a provider radius provider same",
    "start": "807600",
    "end": "810399"
  },
  {
    "text": "thing for the second one but the second",
    "start": "810399",
    "end": "813120"
  },
  {
    "text": "one is from the service cluster too but",
    "start": "813120",
    "end": "815680"
  },
  {
    "text": "also provided by the radius provider",
    "start": "815680",
    "end": "820000"
  },
  {
    "text": "okay so uh as i already mentioned we",
    "start": "820000",
    "end": "824000"
  },
  {
    "text": "only",
    "start": "824000",
    "end": "824880"
  },
  {
    "text": "expose the service to tenant a and the",
    "start": "824880",
    "end": "828240"
  },
  {
    "text": "tenant b but not tenancy we can verify",
    "start": "828240",
    "end": "831920"
  },
  {
    "text": "that",
    "start": "831920",
    "end": "833040"
  },
  {
    "text": "by checking the offerings objects in",
    "start": "833040",
    "end": "836000"
  },
  {
    "text": "every tenant namespace so you can see",
    "start": "836000",
    "end": "838959"
  },
  {
    "text": "for tenant a and tenant b they have two",
    "start": "838959",
    "end": "841360"
  },
  {
    "text": "available offerings",
    "start": "841360",
    "end": "842959"
  },
  {
    "text": "but for tenancy",
    "start": "842959",
    "end": "845120"
  },
  {
    "text": "there is no offering in tenancy this is",
    "start": "845120",
    "end": "847920"
  },
  {
    "text": "because our catalog",
    "start": "847920",
    "end": "849920"
  },
  {
    "text": "object that we created before",
    "start": "849920",
    "end": "852399"
  },
  {
    "text": "doesn't select tenancy",
    "start": "852399",
    "end": "854959"
  },
  {
    "text": "so tenancy cannot see the",
    "start": "854959",
    "end": "858079"
  },
  {
    "text": "radius",
    "start": "858079",
    "end": "859519"
  },
  {
    "text": "services",
    "start": "859519",
    "end": "862160"
  },
  {
    "text": "okay so it's time to create a service",
    "start": "862480",
    "end": "865760"
  },
  {
    "text": "for",
    "start": "865760",
    "end": "866639"
  },
  {
    "text": "uh the tenant",
    "start": "866639",
    "end": "868639"
  },
  {
    "text": "for the radius",
    "start": "868639",
    "end": "871040"
  },
  {
    "text": "service",
    "start": "871040",
    "end": "873279"
  },
  {
    "text": "so",
    "start": "873279",
    "end": "874240"
  },
  {
    "text": "here is an example of the radius service",
    "start": "874240",
    "end": "877519"
  },
  {
    "text": "that we can create",
    "start": "877519",
    "end": "880240"
  },
  {
    "text": "for tenant a and tenant b",
    "start": "880240",
    "end": "883040"
  },
  {
    "text": "so it's like a customer resource called",
    "start": "883040",
    "end": "885839"
  },
  {
    "text": "radius and here we specify some fields",
    "start": "885839",
    "end": "889519"
  },
  {
    "text": "that are exposed to user",
    "start": "889519",
    "end": "893360"
  },
  {
    "text": "and then we can just create the radius",
    "start": "893360",
    "end": "897680"
  },
  {
    "text": "customer resource as a member of tenant",
    "start": "897680",
    "end": "900480"
  },
  {
    "text": "a",
    "start": "900480",
    "end": "902720"
  },
  {
    "text": "and the you can see the real workload is",
    "start": "911120",
    "end": "914160"
  },
  {
    "text": "actually created in",
    "start": "914160",
    "end": "916240"
  },
  {
    "text": "the",
    "start": "916240",
    "end": "917120"
  },
  {
    "text": "service cluster",
    "start": "917120",
    "end": "919680"
  },
  {
    "text": "not in the management cluster",
    "start": "919680",
    "end": "922320"
  },
  {
    "text": "and we can we can do the uh",
    "start": "922320",
    "end": "925199"
  },
  {
    "text": "we can't",
    "start": "925199",
    "end": "926160"
  },
  {
    "text": "create another",
    "start": "926160",
    "end": "927760"
  },
  {
    "text": "uh we can create another service for",
    "start": "927760",
    "end": "932000"
  },
  {
    "text": "the tenant a but in service cluster two",
    "start": "932000",
    "end": "937399"
  },
  {
    "text": "you can see there is another radius",
    "start": "943440",
    "end": "945920"
  },
  {
    "text": "instance",
    "start": "945920",
    "end": "946959"
  },
  {
    "text": "which is created for tenant a service",
    "start": "946959",
    "end": "949680"
  },
  {
    "text": "cluster too",
    "start": "949680",
    "end": "953240"
  },
  {
    "text": "uh",
    "start": "954320",
    "end": "955120"
  },
  {
    "text": "and",
    "start": "955120",
    "end": "956079"
  },
  {
    "text": "another thing i would like to mention is",
    "start": "956079",
    "end": "958639"
  },
  {
    "text": "that all the uh",
    "start": "958639",
    "end": "960959"
  },
  {
    "text": "service instances in the service cluster",
    "start": "960959",
    "end": "964079"
  },
  {
    "text": "will be isolated",
    "start": "964079",
    "end": "965759"
  },
  {
    "text": "for",
    "start": "965759",
    "end": "966720"
  },
  {
    "text": "every tenant for example",
    "start": "966720",
    "end": "968639"
  },
  {
    "text": "if i create another um instance for",
    "start": "968639",
    "end": "972399"
  },
  {
    "text": "tenant b",
    "start": "972399",
    "end": "974800"
  },
  {
    "text": "in service cluster two",
    "start": "974800",
    "end": "978240"
  },
  {
    "text": "and you can see there is another radius",
    "start": "979440",
    "end": "982800"
  },
  {
    "text": "instance",
    "start": "982800",
    "end": "983839"
  },
  {
    "text": "it's created only for time b and this is",
    "start": "983839",
    "end": "987440"
  },
  {
    "text": "in different name space with the one",
    "start": "987440",
    "end": "990320"
  },
  {
    "text": "that created for tenant a so the",
    "start": "990320",
    "end": "992800"
  },
  {
    "text": "workloads are completely isolated on",
    "start": "992800",
    "end": "996560"
  },
  {
    "text": "a service cluster",
    "start": "996560",
    "end": "999519"
  },
  {
    "text": "okay",
    "start": "999519",
    "end": "1000639"
  },
  {
    "start": "1000000",
    "end": "1215000"
  },
  {
    "text": "now let's make use of the service",
    "start": "1000639",
    "end": "1003040"
  },
  {
    "text": "cluster 3. so what i would like to show",
    "start": "1003040",
    "end": "1006320"
  },
  {
    "text": "you is about how to register the",
    "start": "1006320",
    "end": "1010639"
  },
  {
    "text": "the service cluster to cubecarrier and",
    "start": "1010639",
    "end": "1013040"
  },
  {
    "text": "cubecarrier will automatically discover",
    "start": "1013040",
    "end": "1015839"
  },
  {
    "text": "the",
    "start": "1015839",
    "end": "1016880"
  },
  {
    "text": "crds and the services from the new",
    "start": "1016880",
    "end": "1021120"
  },
  {
    "text": "drawing new joined",
    "start": "1021120",
    "end": "1023199"
  },
  {
    "text": "service cluster",
    "start": "1023199",
    "end": "1024798"
  },
  {
    "text": "so",
    "start": "1024799",
    "end": "1025600"
  },
  {
    "text": "let me show you an example of service",
    "start": "1025600",
    "end": "1027918"
  },
  {
    "text": "cluster",
    "start": "1027919",
    "end": "1028959"
  },
  {
    "text": "object",
    "start": "1028959",
    "end": "1031199"
  },
  {
    "text": "so in the service cluster object there",
    "start": "1031199",
    "end": "1033600"
  },
  {
    "text": "is a cube config secret which is",
    "start": "1033600",
    "end": "1035918"
  },
  {
    "text": "pointing to the cube config of this",
    "start": "1035919",
    "end": "1039199"
  },
  {
    "text": "service cluster",
    "start": "1039199",
    "end": "1041520"
  },
  {
    "text": "and we can create this service cluster",
    "start": "1041520",
    "end": "1044480"
  },
  {
    "text": "by applying this",
    "start": "1044480",
    "end": "1046400"
  },
  {
    "text": "file",
    "start": "1046400",
    "end": "1048799"
  },
  {
    "text": "and after that we can check the service",
    "start": "1051360",
    "end": "1054480"
  },
  {
    "text": "casters in the",
    "start": "1054480",
    "end": "1056320"
  },
  {
    "text": "management cluster and wait until the",
    "start": "1056320",
    "end": "1060400"
  },
  {
    "text": "service cluster is ready",
    "start": "1060400",
    "end": "1064679"
  },
  {
    "text": "okay so now the new service cluster is",
    "start": "1070880",
    "end": "1074320"
  },
  {
    "text": "ready",
    "start": "1074320",
    "end": "1075360"
  },
  {
    "text": "which is a service cluster three",
    "start": "1075360",
    "end": "1078840"
  },
  {
    "text": "and",
    "start": "1078840",
    "end": "1080480"
  },
  {
    "text": "since for the service cluster 3 we have",
    "start": "1080480",
    "end": "1083520"
  },
  {
    "text": "already deployed the radius operator so",
    "start": "1083520",
    "end": "1086320"
  },
  {
    "text": "our um",
    "start": "1086320",
    "end": "1087140"
  },
  {
    "text": "[Music]",
    "start": "1087140",
    "end": "1088400"
  },
  {
    "text": "our cat our catalog will automatically",
    "start": "1088400",
    "end": "1091760"
  },
  {
    "text": "discover the radius service from",
    "start": "1091760",
    "end": "1095360"
  },
  {
    "text": "service 3 and make it available for",
    "start": "1095360",
    "end": "1099200"
  },
  {
    "text": "both tenant a and tenant b",
    "start": "1099200",
    "end": "1101600"
  },
  {
    "text": "let's try to get the offering object for",
    "start": "1101600",
    "end": "1105440"
  },
  {
    "text": "tenant a",
    "start": "1105440",
    "end": "1108919"
  },
  {
    "text": "and you can see there is a new created",
    "start": "1109760",
    "end": "1112880"
  },
  {
    "text": "offer",
    "start": "1112880",
    "end": "1113840"
  },
  {
    "text": "offering",
    "start": "1113840",
    "end": "1116000"
  },
  {
    "text": "which is a radius from service cluster 3",
    "start": "1116000",
    "end": "1120559"
  },
  {
    "text": "from a provider radius provider",
    "start": "1120559",
    "end": "1123600"
  },
  {
    "text": "and",
    "start": "1123600",
    "end": "1125840"
  },
  {
    "text": "and",
    "start": "1126400",
    "end": "1127919"
  },
  {
    "text": "then you can just",
    "start": "1127919",
    "end": "1129600"
  },
  {
    "text": "use this service and use this service",
    "start": "1129600",
    "end": "1132799"
  },
  {
    "text": "offerings and",
    "start": "1132799",
    "end": "1134400"
  },
  {
    "text": "create the",
    "start": "1134400",
    "end": "1136960"
  },
  {
    "text": "ins radius instance in",
    "start": "1136960",
    "end": "1139919"
  },
  {
    "text": "service cluster 3.",
    "start": "1139919",
    "end": "1143880"
  },
  {
    "text": "so you can see the",
    "start": "1150559",
    "end": "1152799"
  },
  {
    "text": "radius instance is created in",
    "start": "1152799",
    "end": "1155919"
  },
  {
    "text": "service cluster 3 for",
    "start": "1155919",
    "end": "1158240"
  },
  {
    "text": "tenant a",
    "start": "1158240",
    "end": "1161799"
  },
  {
    "text": "so",
    "start": "1168480",
    "end": "1169280"
  },
  {
    "text": "it is quite easy in cube carrier to",
    "start": "1169280",
    "end": "1172240"
  },
  {
    "text": "register a service cluster and make the",
    "start": "1172240",
    "end": "1175600"
  },
  {
    "text": "services available to the end user",
    "start": "1175600",
    "end": "1179120"
  },
  {
    "text": "by the",
    "start": "1179120",
    "end": "1180799"
  },
  {
    "text": "carrier service hub",
    "start": "1180799",
    "end": "1183440"
  },
  {
    "text": "okay this is",
    "start": "1183440",
    "end": "1185440"
  },
  {
    "text": "all this is all about today's demo",
    "start": "1185440",
    "end": "1189919"
  },
  {
    "text": "if you have any questions you can send",
    "start": "1189919",
    "end": "1192240"
  },
  {
    "text": "me",
    "start": "1192240",
    "end": "1192960"
  },
  {
    "text": "an email",
    "start": "1192960",
    "end": "1194720"
  },
  {
    "text": "or you can create issues on our project",
    "start": "1194720",
    "end": "1198080"
  },
  {
    "text": "page on github or if you are interested",
    "start": "1198080",
    "end": "1201120"
  },
  {
    "text": "in",
    "start": "1201120",
    "end": "1201919"
  },
  {
    "text": "more advanced topics about cubecarrier",
    "start": "1201919",
    "end": "1204640"
  },
  {
    "text": "you can check out our documentation",
    "start": "1204640",
    "end": "1208400"
  },
  {
    "text": "thanks for your joining and attention",
    "start": "1208400",
    "end": "1214200"
  }
]