[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "all right hello everyone thanks uh yeah",
    "start": "0",
    "end": "2879"
  },
  {
    "text": "my name is Luke I work at fastly I'm",
    "start": "2879",
    "end": "4680"
  },
  {
    "text": "going to be talking about the path to",
    "start": "4680",
    "end": "5880"
  },
  {
    "text": "components",
    "start": "5880",
    "end": "7259"
  },
  {
    "text": "so there's a big new standards proposal",
    "start": "7259",
    "end": "9660"
  },
  {
    "text": "that we've been working on called the",
    "start": "9660",
    "end": "11040"
  },
  {
    "text": "component model it sits in between Wazi",
    "start": "11040",
    "end": "13559"
  },
  {
    "text": "and core webassembly and provides a way",
    "start": "13559",
    "end": "15240"
  },
  {
    "text": "to compose code together like Lego",
    "start": "15240",
    "end": "16859"
  },
  {
    "text": "bricks",
    "start": "16859",
    "end": "18420"
  },
  {
    "text": "so with this talk we'll cover is the",
    "start": "18420",
    "end": "19920"
  },
  {
    "text": "path leading up to the component model",
    "start": "19920",
    "end": "21240"
  },
  {
    "text": "what problems the component model is",
    "start": "21240",
    "end": "23160"
  },
  {
    "text": "working to solve what the developer",
    "start": "23160",
    "end": "24900"
  },
  {
    "text": "experience is shaping up to look like",
    "start": "24900",
    "end": "26220"
  },
  {
    "text": "and what's next",
    "start": "26220",
    "end": "28380"
  },
  {
    "start": "28000",
    "end": "61000"
  },
  {
    "text": "so our path starts in 2017 with the",
    "start": "28380",
    "end": "31080"
  },
  {
    "text": "release in four browsers of webassembly",
    "start": "31080",
    "end": "33120"
  },
  {
    "text": "1.0 and we called it the MVP short for",
    "start": "33120",
    "end": "36180"
  },
  {
    "text": "minimum viable product because there are",
    "start": "36180",
    "end": "38219"
  },
  {
    "text": "still a lot of work left to do it was",
    "start": "38219",
    "end": "39899"
  },
  {
    "text": "definitely minimal so we collect a lot",
    "start": "39899",
    "end": "41940"
  },
  {
    "text": "of these remaining features to be done",
    "start": "41940",
    "end": "43140"
  },
  {
    "text": "and published this post MVP roadmap Lynn",
    "start": "43140",
    "end": "45719"
  },
  {
    "text": "Clark made this really cool video game",
    "start": "45719",
    "end": "47100"
  },
  {
    "text": "like skill tree diagram showing how all",
    "start": "47100",
    "end": "48899"
  },
  {
    "text": "the different features unlock different",
    "start": "48899",
    "end": "50100"
  },
  {
    "text": "use cases indeed a whole bunch of this",
    "start": "50100",
    "end": "52440"
  },
  {
    "text": "work has been in progress in the web",
    "start": "52440",
    "end": "53820"
  },
  {
    "text": "assembly CG extending the core of",
    "start": "53820",
    "end": "55320"
  },
  {
    "text": "webassembly with new instructions and",
    "start": "55320",
    "end": "57180"
  },
  {
    "text": "value types but if we look at this one",
    "start": "57180",
    "end": "59280"
  },
  {
    "text": "branch of the skilled tree and then zoom",
    "start": "59280",
    "end": "60960"
  },
  {
    "text": "in",
    "start": "60960",
    "end": "61920"
  },
  {
    "start": "61000",
    "end": "94000"
  },
  {
    "text": "it says portable interface so so what's",
    "start": "61920",
    "end": "64260"
  },
  {
    "text": "that about",
    "start": "64260",
    "end": "65820"
  },
  {
    "text": "so in general if we want to have",
    "start": "65820",
    "end": "67320"
  },
  {
    "text": "portable programs we need a portable",
    "start": "67320",
    "end": "68700"
  },
  {
    "text": "instruction set and a portable system",
    "start": "68700",
    "end": "70500"
  },
  {
    "text": "interface",
    "start": "70500",
    "end": "71700"
  },
  {
    "text": "now in the browser of course webassembly",
    "start": "71700",
    "end": "73680"
  },
  {
    "text": "is that designed to be that portable",
    "start": "73680",
    "end": "75000"
  },
  {
    "text": "instruction set and JavaScript and the",
    "start": "75000",
    "end": "77220"
  },
  {
    "text": "web platform are a natural portable",
    "start": "77220",
    "end": "78900"
  },
  {
    "text": "system interface",
    "start": "78900",
    "end": "80759"
  },
  {
    "text": "but if we want to run webassembly",
    "start": "80759",
    "end": "82320"
  },
  {
    "text": "everywhere then well what takes the role",
    "start": "82320",
    "end": "83880"
  },
  {
    "text": "when we don't necessarily have",
    "start": "83880",
    "end": "85140"
  },
  {
    "text": "JavaScript or the web platform",
    "start": "85140",
    "end": "87119"
  },
  {
    "text": "so to answer this question we started",
    "start": "87119",
    "end": "89580"
  },
  {
    "text": "the Wazi subgroup wazzy for standing for",
    "start": "89580",
    "end": "92100"
  },
  {
    "text": "webassembly system interface",
    "start": "92100",
    "end": "94140"
  },
  {
    "start": "94000",
    "end": "195000"
  },
  {
    "text": "but that immediately raised the question",
    "start": "94140",
    "end": "95640"
  },
  {
    "text": "well like what sort of system are we",
    "start": "95640",
    "end": "97380"
  },
  {
    "text": "even interfacing with here one is not",
    "start": "97380",
    "end": "98820"
  },
  {
    "text": "just generically interface with systems",
    "start": "98820",
    "end": "100979"
  },
  {
    "text": "and from you know experience we had this",
    "start": "100979",
    "end": "102900"
  },
  {
    "text": "high level goals of we wanted",
    "start": "102900",
    "end": "104340"
  },
  {
    "text": "capability-based security and modularity",
    "start": "104340",
    "end": "107220"
  },
  {
    "text": "so we went about kind of learning about",
    "start": "107220",
    "end": "108600"
  },
  {
    "text": "the background doing background research",
    "start": "108600",
    "end": "110759"
  },
  {
    "text": "and seeing what work had already be done",
    "start": "110759",
    "end": "112020"
  },
  {
    "text": "had already been done that we could",
    "start": "112020",
    "end": "113280"
  },
  {
    "text": "learn from",
    "start": "113280",
    "end": "114360"
  },
  {
    "text": "so in the direction of capability-based",
    "start": "114360",
    "end": "116759"
  },
  {
    "text": "security a great resource is Mark",
    "start": "116759",
    "end": "119040"
  },
  {
    "text": "Miller's dissertation on robust",
    "start": "119040",
    "end": "120840"
  },
  {
    "text": "composition and the takeaway here for me",
    "start": "120840",
    "end": "123299"
  },
  {
    "text": "was that capabilities by it's not just",
    "start": "123299",
    "end": "125040"
  },
  {
    "text": "security which is kind of like eating",
    "start": "125040",
    "end": "126659"
  },
  {
    "text": "our vegetables and that it's good for us",
    "start": "126659",
    "end": "128340"
  },
  {
    "text": "and eventually grow to like it but also",
    "start": "128340",
    "end": "131099"
  },
  {
    "text": "composability which is like the fire",
    "start": "131099",
    "end": "132360"
  },
  {
    "text": "flower that makes us like fire Mario and",
    "start": "132360",
    "end": "134459"
  },
  {
    "text": "uh productive so that was exciting",
    "start": "134459",
    "end": "136800"
  },
  {
    "text": "uh and we also you know did some",
    "start": "136800",
    "end": "138780"
  },
  {
    "text": "research in the modularity directions",
    "start": "138780",
    "end": "140160"
  },
  {
    "text": "around the ml module system and the work",
    "start": "140160",
    "end": "142260"
  },
  {
    "text": "on units and the high level takeaway",
    "start": "142260",
    "end": "144480"
  },
  {
    "text": "here is that complex modular",
    "start": "144480",
    "end": "146099"
  },
  {
    "text": "applications need what I'm going to call",
    "start": "146099",
    "end": "147840"
  },
  {
    "text": "parametric linking and I'm going to talk",
    "start": "147840",
    "end": "149400"
  },
  {
    "text": "more about later",
    "start": "149400",
    "end": "150900"
  },
  {
    "text": "and then combining these as a bit of",
    "start": "150900",
    "end": "152400"
  },
  {
    "text": "research on the wyvern language which",
    "start": "152400",
    "end": "154440"
  },
  {
    "text": "kind of really nicely Illustrated how",
    "start": "154440",
    "end": "155879"
  },
  {
    "text": "capabilities can go really well with",
    "start": "155879",
    "end": "158040"
  },
  {
    "text": "parametric linking",
    "start": "158040",
    "end": "159480"
  },
  {
    "text": "so excited by all this we published and",
    "start": "159480",
    "end": "162120"
  },
  {
    "text": "collected all these ideas into this",
    "start": "162120",
    "end": "163560"
  },
  {
    "text": "nanoprocess Vision blog post which kind",
    "start": "163560",
    "end": "165480"
  },
  {
    "text": "of painted this picture of a bunch of",
    "start": "165480",
    "end": "166739"
  },
  {
    "text": "really fine-grained nanoprocesses that",
    "start": "166739",
    "end": "168420"
  },
  {
    "text": "encapsulate their memory and are trading",
    "start": "168420",
    "end": "170340"
  },
  {
    "text": "fine grain capabilities between each",
    "start": "170340",
    "end": "171780"
  },
  {
    "text": "other",
    "start": "171780",
    "end": "172440"
  },
  {
    "text": "and then uh and then there is a bunch of",
    "start": "172440",
    "end": "175680"
  },
  {
    "text": "quiet so",
    "start": "175680",
    "end": "177239"
  },
  {
    "text": "um so sorry about the delay there",
    "start": "177239",
    "end": "179760"
  },
  {
    "text": "um",
    "start": "179760",
    "end": "180420"
  },
  {
    "text": "there was a whole um pandemic you know",
    "start": "180420",
    "end": "182879"
  },
  {
    "text": "and that you know didn't help that a",
    "start": "182879",
    "end": "184739"
  },
  {
    "text": "customer must have to switch employment",
    "start": "184739",
    "end": "186599"
  },
  {
    "text": "situations but uh but in general like",
    "start": "186599",
    "end": "188760"
  },
  {
    "text": "just digging into this nanoprocess model",
    "start": "188760",
    "end": "190620"
  },
  {
    "text": "like asking like well what concretely is",
    "start": "190620",
    "end": "192599"
  },
  {
    "text": "this box it's a it's a hard question",
    "start": "192599",
    "end": "195720"
  },
  {
    "start": "195000",
    "end": "224000"
  },
  {
    "text": "so you know a reasonable reply is well",
    "start": "195720",
    "end": "197459"
  },
  {
    "text": "why not just use a wasmified posix",
    "start": "197459",
    "end": "199260"
  },
  {
    "text": "process and indeed if you look at the",
    "start": "199260",
    "end": "201300"
  },
  {
    "text": "picture it says quasics because that's",
    "start": "201300",
    "end": "202980"
  },
  {
    "text": "where we started because it makes sense",
    "start": "202980",
    "end": "204599"
  },
  {
    "text": "that's uh you know we start with Cloud",
    "start": "204599",
    "end": "206099"
  },
  {
    "text": "API and because posic has a lot of what",
    "start": "206099",
    "end": "208800"
  },
  {
    "text": "we want it has encapsulated low-level",
    "start": "208800",
    "end": "210840"
  },
  {
    "text": "States cross-language interop",
    "start": "210840",
    "end": "213360"
  },
  {
    "text": "unforgeable capabilities and lots of",
    "start": "213360",
    "end": "215879"
  },
  {
    "text": "code that we want to use and spoiler",
    "start": "215879",
    "end": "217620"
  },
  {
    "text": "alert don't worry we will",
    "start": "217620",
    "end": "219599"
  },
  {
    "text": "so is that just it do we just take posix",
    "start": "219599",
    "end": "221459"
  },
  {
    "text": "and stuff it into wazzy and then you",
    "start": "221459",
    "end": "222780"
  },
  {
    "text": "know mission accomplished well let's",
    "start": "222780",
    "end": "224819"
  },
  {
    "start": "224000",
    "end": "283000"
  },
  {
    "text": "let's you know take a step back and say",
    "start": "224819",
    "end": "226680"
  },
  {
    "text": "first why are people putting wasm into",
    "start": "226680",
    "end": "228480"
  },
  {
    "text": "production",
    "start": "228480",
    "end": "229680"
  },
  {
    "text": "so you know there's some obvious reasons",
    "start": "229680",
    "end": "231239"
  },
  {
    "text": "like language Independence has an open",
    "start": "231239",
    "end": "233819"
  },
  {
    "text": "formally defined portable standard a",
    "start": "233819",
    "end": "236220"
  },
  {
    "text": "strong sandbox-based security",
    "start": "236220",
    "end": "238440"
  },
  {
    "text": "and then maybe we could ask is it are we",
    "start": "238440",
    "end": "240959"
  },
  {
    "text": "trying to run the same CLI tools the",
    "start": "240959",
    "end": "242700"
  },
  {
    "text": "same way just our thwasm as our",
    "start": "242700",
    "end": "244620"
  },
  {
    "text": "instruction set or are we trying to run",
    "start": "244620",
    "end": "246780"
  },
  {
    "text": "the same containers the same way just",
    "start": "246780",
    "end": "248400"
  },
  {
    "text": "now with wasm as the instruction set and",
    "start": "248400",
    "end": "250799"
  },
  {
    "text": "you know you could and you know",
    "start": "250799",
    "end": "252000"
  },
  {
    "text": "definitely people have played around",
    "start": "252000",
    "end": "252900"
  },
  {
    "text": "with it but that's that's not what's you",
    "start": "252900",
    "end": "254879"
  },
  {
    "text": "know motivating us as much as taking the",
    "start": "254879",
    "end": "257519"
  },
  {
    "text": "next steps smaller in the progression",
    "start": "257519",
    "end": "259139"
  },
  {
    "text": "from VMS to containers to webassembly",
    "start": "259139",
    "end": "262260"
  },
  {
    "text": "or serverless execution with ultra fast",
    "start": "262260",
    "end": "265139"
  },
  {
    "text": "cold start and ephemeral lifetimes",
    "start": "265139",
    "end": "267600"
  },
  {
    "text": "and so getting back to our previous",
    "start": "267600",
    "end": "268979"
  },
  {
    "text": "question just do posix would work pretty",
    "start": "268979",
    "end": "271500"
  },
  {
    "text": "well you know here but for these more",
    "start": "271500",
    "end": "273900"
  },
  {
    "text": "futuristic use cases we ran into trouble",
    "start": "273900",
    "end": "276060"
  },
  {
    "text": "and I'll summarize this with four",
    "start": "276060",
    "end": "277979"
  },
  {
    "text": "high-level pain points and then four",
    "start": "277979",
    "end": "280080"
  },
  {
    "text": "proposed design Alternatives that uh",
    "start": "280080",
    "end": "282180"
  },
  {
    "text": "that we worked on",
    "start": "282180",
    "end": "283800"
  },
  {
    "start": "283000",
    "end": "310000"
  },
  {
    "text": "so our first pain point is linking via",
    "start": "283800",
    "end": "286080"
  },
  {
    "text": "the file system",
    "start": "286080",
    "end": "287280"
  },
  {
    "text": "so a common experience I think here is",
    "start": "287280",
    "end": "289380"
  },
  {
    "text": "you have some software components and it",
    "start": "289380",
    "end": "290940"
  },
  {
    "text": "seems like they should be interface",
    "start": "290940",
    "end": "291960"
  },
  {
    "text": "compatible so I should be able to like",
    "start": "291960",
    "end": "293280"
  },
  {
    "text": "Snap them together and build this like",
    "start": "293280",
    "end": "294540"
  },
  {
    "text": "Tower of beautiful software that I have",
    "start": "294540",
    "end": "295860"
  },
  {
    "text": "in my mind",
    "start": "295860",
    "end": "296759"
  },
  {
    "text": "but the reality is like less pretty and",
    "start": "296759",
    "end": "299280"
  },
  {
    "text": "involves a lot more glue code and the",
    "start": "299280",
    "end": "301259"
  },
  {
    "text": "reason is that in addition to these",
    "start": "301259",
    "end": "302460"
  },
  {
    "text": "explicit interfaces we've got this file",
    "start": "302460",
    "end": "304080"
  },
  {
    "text": "system here that everything is kind of",
    "start": "304080",
    "end": "305639"
  },
  {
    "text": "colliding and with each other and a lot",
    "start": "305639",
    "end": "307680"
  },
  {
    "text": "of that glue code is working around that",
    "start": "307680",
    "end": "309840"
  },
  {
    "text": "so we're proposing instead is called",
    "start": "309840",
    "end": "311520"
  },
  {
    "start": "310000",
    "end": "401000"
  },
  {
    "text": "parametric linking this is kind of from",
    "start": "311520",
    "end": "313080"
  },
  {
    "text": "this background research",
    "start": "313080",
    "end": "315540"
  },
  {
    "text": "and I'm going to describe in three steps",
    "start": "315540",
    "end": "317220"
  },
  {
    "text": "so first we distinguish units of code",
    "start": "317220",
    "end": "319080"
  },
  {
    "text": "which are static and immutable like the",
    "start": "319080",
    "end": "320940"
  },
  {
    "text": "stuff you'd store in a file",
    "start": "320940",
    "end": "322620"
  },
  {
    "text": "distinguish that from instances of the",
    "start": "322620",
    "end": "324600"
  },
  {
    "text": "code which are Dynamic and stateful and",
    "start": "324600",
    "end": "326220"
  },
  {
    "text": "the type of things you load in memory",
    "start": "326220",
    "end": "327419"
  },
  {
    "text": "and run",
    "start": "327419",
    "end": "328800"
  },
  {
    "text": "next we say that a unit of code declares",
    "start": "328800",
    "end": "331259"
  },
  {
    "text": "Imports that must be supplied when the",
    "start": "331259",
    "end": "333240"
  },
  {
    "text": "code is instantiated so for example my",
    "start": "333240",
    "end": "335460"
  },
  {
    "text": "a.wasm can have an import X of type",
    "start": "335460",
    "end": "337560"
  },
  {
    "text": "string and when I instantiated the first",
    "start": "337560",
    "end": "339720"
  },
  {
    "text": "time I have to supply a value for that",
    "start": "339720",
    "end": "341160"
  },
  {
    "text": "import X and when I substantiate it a",
    "start": "341160",
    "end": "343740"
  },
  {
    "text": "second time I can supply a different",
    "start": "343740",
    "end": "345180"
  },
  {
    "text": "value and get a different instance",
    "start": "345180",
    "end": "347580"
  },
  {
    "text": "and then lastly we allow units of code",
    "start": "347580",
    "end": "349620"
  },
  {
    "text": "to instantiate other units of Code by",
    "start": "349620",
    "end": "352139"
  },
  {
    "text": "supplying their Imports so I've got my",
    "start": "352139",
    "end": "354720"
  },
  {
    "text": "a.wasm and I can have a b dot wasm that",
    "start": "354720",
    "end": "357120"
  },
  {
    "text": "Imports an instance of a and then C has",
    "start": "357120",
    "end": "359699"
  },
  {
    "text": "the flexibility if it wants to to say",
    "start": "359699",
    "end": "361860"
  },
  {
    "text": "when you instantiate a c first make one",
    "start": "361860",
    "end": "364440"
  },
  {
    "text": "instance of a in an instance of B linked",
    "start": "364440",
    "end": "366240"
  },
  {
    "text": "to that so in a second instance of a and",
    "start": "366240",
    "end": "368520"
  },
  {
    "text": "a second instance a b link to that",
    "start": "368520",
    "end": "371100"
  },
  {
    "text": "and while many module uh and package",
    "start": "371100",
    "end": "374580"
  },
  {
    "text": "systems have something like Imports",
    "start": "374580",
    "end": "376259"
  },
  {
    "text": "often called dependencies",
    "start": "376259",
    "end": "377940"
  },
  {
    "text": "fewer have this ability for code to",
    "start": "377940",
    "end": "380100"
  },
  {
    "text": "instantiate other code although",
    "start": "380100",
    "end": "381539"
  },
  {
    "text": "increasingly some do like react",
    "start": "381539",
    "end": "382919"
  },
  {
    "text": "components or terraform parameterized",
    "start": "382919",
    "end": "384660"
  },
  {
    "text": "modules and so we're kind of going with",
    "start": "384660",
    "end": "386039"
  },
  {
    "text": "that trend",
    "start": "386039",
    "end": "387539"
  },
  {
    "text": "and so concretely what this enables",
    "start": "387539",
    "end": "389340"
  },
  {
    "text": "things like mocking and local testing",
    "start": "389340",
    "end": "391800"
  },
  {
    "text": "without needing a dependency injection",
    "start": "391800",
    "end": "393120"
  },
  {
    "text": "framework",
    "start": "393120",
    "end": "394199"
  },
  {
    "text": "dependency resolution without lock files",
    "start": "394199",
    "end": "396360"
  },
  {
    "text": "at runtime",
    "start": "396360",
    "end": "397440"
  },
  {
    "text": "and service chaining without having an",
    "start": "397440",
    "end": "399419"
  },
  {
    "text": "intervening Network stack",
    "start": "399419",
    "end": "402300"
  },
  {
    "start": "401000",
    "end": "477000"
  },
  {
    "text": "so our second pain point is complex data",
    "start": "402300",
    "end": "404639"
  },
  {
    "text": "passed as unstructured text",
    "start": "404639",
    "end": "406860"
  },
  {
    "text": "so a common experience here I think is",
    "start": "406860",
    "end": "408720"
  },
  {
    "text": "I've got a programming it you know spits",
    "start": "408720",
    "end": "410580"
  },
  {
    "text": "out some Json I'd like to feed it into",
    "start": "410580",
    "end": "412020"
  },
  {
    "text": "the second program and ideally would",
    "start": "412020",
    "end": "413880"
  },
  {
    "text": "take the same Json but in practice you",
    "start": "413880",
    "end": "415500"
  },
  {
    "text": "know often it'll just take its own",
    "start": "415500",
    "end": "416580"
  },
  {
    "text": "random thing because it can parse its",
    "start": "416580",
    "end": "418259"
  },
  {
    "text": "own arbitrary input format so I have to",
    "start": "418259",
    "end": "420240"
  },
  {
    "text": "write some glue code to adapt between",
    "start": "420240",
    "end": "421800"
  },
  {
    "text": "the two and that's a composability pain",
    "start": "421800",
    "end": "423600"
  },
  {
    "text": "point",
    "start": "423600",
    "end": "425220"
  },
  {
    "text": "and next I have to program as to do all",
    "start": "425220",
    "end": "427740"
  },
  {
    "text": "this work stringifying the Json and",
    "start": "427740",
    "end": "429120"
  },
  {
    "text": "program BS to parse its input format and",
    "start": "429120",
    "end": "431160"
  },
  {
    "text": "so that cost performance and in this",
    "start": "431160",
    "end": "432479"
  },
  {
    "text": "nanoprocess model we have lots of",
    "start": "432479",
    "end": "433740"
  },
  {
    "text": "itty-bitty nanoprocesses this can add up",
    "start": "433740",
    "end": "435600"
  },
  {
    "text": "to a significant percentage of the",
    "start": "435600",
    "end": "436919"
  },
  {
    "text": "overall time",
    "start": "436919",
    "end": "438539"
  },
  {
    "text": "and lastly let's say program a has a",
    "start": "438539",
    "end": "440819"
  },
  {
    "text": "file descriptor pointing to a resource",
    "start": "440819",
    "end": "442440"
  },
  {
    "text": "and it wants to pass it over to program",
    "start": "442440",
    "end": "443940"
  },
  {
    "text": "B it could use in like out-of-band Unix",
    "start": "443940",
    "end": "446940"
  },
  {
    "text": "domain sock and send message but that's",
    "start": "446940",
    "end": "448440"
  },
  {
    "text": "kind of a pain and so mostly we don't do",
    "start": "448440",
    "end": "449880"
  },
  {
    "text": "that instead what we do is you stick the",
    "start": "449880",
    "end": "451800"
  },
  {
    "text": "resource in a whole file system give it",
    "start": "451800",
    "end": "453780"
  },
  {
    "text": "a file name have both programs import",
    "start": "453780",
    "end": "455880"
  },
  {
    "text": "the whole file system and that allows us",
    "start": "455880",
    "end": "458099"
  },
  {
    "text": "to pass the file by its file name in the",
    "start": "458099",
    "end": "460080"
  },
  {
    "text": "Json",
    "start": "460080",
    "end": "460919"
  },
  {
    "text": "and this is an example of a pattern that",
    "start": "460919",
    "end": "462960"
  },
  {
    "text": "colleague Dan Gomen calls ghosts and he",
    "start": "462960",
    "end": "465539"
  },
  {
    "text": "has a great blog post explaining kind of",
    "start": "465539",
    "end": "467039"
  },
  {
    "text": "how all the problems and pain points",
    "start": "467039",
    "end": "469380"
  },
  {
    "text": "that arise when you have ghosts in your",
    "start": "469380",
    "end": "470940"
  },
  {
    "text": "programs and more generally the fact",
    "start": "470940",
    "end": "472919"
  },
  {
    "text": "that program A and B import a whole file",
    "start": "472919",
    "end": "474660"
  },
  {
    "text": "system just to pass a file as an example",
    "start": "474660",
    "end": "476460"
  },
  {
    "text": "of excess Authority",
    "start": "476460",
    "end": "478440"
  },
  {
    "start": "477000",
    "end": "543000"
  },
  {
    "text": "so instead we're proposing to have high",
    "start": "478440",
    "end": "480360"
  },
  {
    "text": "level value types",
    "start": "480360",
    "end": "481860"
  },
  {
    "text": "so we start with value types like",
    "start": "481860",
    "end": "483539"
  },
  {
    "text": "strings lists records variants and add",
    "start": "483539",
    "end": "485940"
  },
  {
    "text": "subtyping so my program a can put out an",
    "start": "485940",
    "end": "488580"
  },
  {
    "text": "abstract record with two fields and",
    "start": "488580",
    "end": "490740"
  },
  {
    "text": "program B can take the same record or a",
    "start": "490740",
    "end": "492720"
  },
  {
    "text": "subtype for example here with an",
    "start": "492720",
    "end": "494160"
  },
  {
    "text": "optional extra field",
    "start": "494160",
    "end": "496860"
  },
  {
    "text": "which is allowed by subtyping which",
    "start": "496860",
    "end": "498660"
  },
  {
    "text": "allows us to evolve our interfaces over",
    "start": "498660",
    "end": "500340"
  },
  {
    "text": "time",
    "start": "500340",
    "end": "501720"
  },
  {
    "text": "next we make reading and writing these",
    "start": "501720",
    "end": "503400"
  },
  {
    "text": "values in and out of linear memory",
    "start": "503400",
    "end": "505080"
  },
  {
    "text": "configurable yet optimizable so",
    "start": "505080",
    "end": "507240"
  },
  {
    "text": "programmagas to specify how those bits",
    "start": "507240",
    "end": "509160"
  },
  {
    "text": "turn into the abstract record and for",
    "start": "509160",
    "end": "510780"
  },
  {
    "text": "example gets to choose the string",
    "start": "510780",
    "end": "512099"
  },
  {
    "text": "encoding whether it's utf-8 or utf-16",
    "start": "512099",
    "end": "514080"
  },
  {
    "text": "and program b gets to make the opposite",
    "start": "514080",
    "end": "516719"
  },
  {
    "text": "decision and then because an aot",
    "start": "516719",
    "end": "518760"
  },
  {
    "text": "compiler can see how these things are",
    "start": "518760",
    "end": "520200"
  },
  {
    "text": "configured it can compile this down to",
    "start": "520200",
    "end": "522300"
  },
  {
    "text": "do a direct copy and transform directly",
    "start": "522300",
    "end": "524159"
  },
  {
    "text": "from A's linear memory into B's linear",
    "start": "524159",
    "end": "525779"
  },
  {
    "text": "memory",
    "start": "525779",
    "end": "526920"
  },
  {
    "text": "and lastly we allow value types to",
    "start": "526920",
    "end": "528839"
  },
  {
    "text": "contain opaque handles",
    "start": "528839",
    "end": "530399"
  },
  {
    "text": "so for example program B can accept like",
    "start": "530399",
    "end": "532500"
  },
  {
    "text": "a picture field via a handle to a blob",
    "start": "532500",
    "end": "534480"
  },
  {
    "text": "not copying the contents of The Blob but",
    "start": "534480",
    "end": "536160"
  },
  {
    "text": "passing just a handle to it but that",
    "start": "536160",
    "end": "538140"
  },
  {
    "text": "does raise the question well we'll",
    "start": "538140",
    "end": "539519"
  },
  {
    "text": "handle to what where did blob come from",
    "start": "539519",
    "end": "541440"
  },
  {
    "text": "is it like just magically built into the",
    "start": "541440",
    "end": "543120"
  },
  {
    "start": "543000",
    "end": "589000"
  },
  {
    "text": "system",
    "start": "543120",
    "end": "544200"
  },
  {
    "text": "and this gets to our next pain point",
    "start": "544200",
    "end": "545820"
  },
  {
    "text": "which then positives everything as a",
    "start": "545820",
    "end": "547740"
  },
  {
    "text": "file descriptor",
    "start": "547740",
    "end": "549480"
  },
  {
    "text": "so if I have two programs and a bunch of",
    "start": "549480",
    "end": "551399"
  },
  {
    "text": "high-level interfaces they might want to",
    "start": "551399",
    "end": "552839"
  },
  {
    "text": "use I say like program B let's say uses",
    "start": "552839",
    "end": "555360"
  },
  {
    "text": "these interfaces and or program a uses",
    "start": "555360",
    "end": "557339"
  },
  {
    "text": "these ones and program B uses these",
    "start": "557339",
    "end": "558660"
  },
  {
    "text": "other interfaces when I compile it all",
    "start": "558660",
    "end": "560820"
  },
  {
    "text": "down to posix executables they kind of",
    "start": "560820",
    "end": "563040"
  },
  {
    "text": "look the same they both just use file",
    "start": "563040",
    "end": "564480"
  },
  {
    "text": "systems and sockets and so when I look",
    "start": "564480",
    "end": "566399"
  },
  {
    "text": "at them from an external perspective I",
    "start": "566399",
    "end": "568260"
  },
  {
    "text": "just say like these these have the same",
    "start": "568260",
    "end": "569580"
  },
  {
    "text": "interface I can't really tell the",
    "start": "569580",
    "end": "570899"
  },
  {
    "text": "difference from the outside and this is",
    "start": "570899",
    "end": "572760"
  },
  {
    "text": "from the perspective of say a dependency",
    "start": "572760",
    "end": "574440"
  },
  {
    "text": "auditor trying to understand risks",
    "start": "574440",
    "end": "576000"
  },
  {
    "text": "supply chain attacks virtualization",
    "start": "576000",
    "end": "578580"
  },
  {
    "text": "tooling trying to run programs and other",
    "start": "578580",
    "end": "580320"
  },
  {
    "text": "scenarios and they were compiled for",
    "start": "580320",
    "end": "582360"
  },
  {
    "text": "and a runtime orchestrator who's you",
    "start": "582360",
    "end": "584640"
  },
  {
    "text": "know orchestrating over distributed",
    "start": "584640",
    "end": "586080"
  },
  {
    "text": "heterogeneous networks saying where can",
    "start": "586080",
    "end": "587339"
  },
  {
    "text": "I run this program",
    "start": "587339",
    "end": "589200"
  },
  {
    "start": "589000",
    "end": "669000"
  },
  {
    "text": "so instead we're proposing this to have",
    "start": "589200",
    "end": "591180"
  },
  {
    "text": "resource and handle types",
    "start": "591180",
    "end": "593580"
  },
  {
    "text": "and we do this by first decoupling",
    "start": "593580",
    "end": "595640"
  },
  {
    "text": "resources which are non-copyable things",
    "start": "595640",
    "end": "597959"
  },
  {
    "text": "with lifetimes",
    "start": "597959",
    "end": "599820"
  },
  {
    "text": "handles which are values that point to",
    "start": "599820",
    "end": "601620"
  },
  {
    "text": "resources",
    "start": "601620",
    "end": "603120"
  },
  {
    "text": "and then functions that take and return",
    "start": "603120",
    "end": "604740"
  },
  {
    "text": "handles and operate on resources",
    "start": "604740",
    "end": "607920"
  },
  {
    "text": "next we say that resources have a",
    "start": "607920",
    "end": "609720"
  },
  {
    "text": "resource type and handles have a handle",
    "start": "609720",
    "end": "611580"
  },
  {
    "text": "type that specifies a resource type so",
    "start": "611580",
    "end": "614220"
  },
  {
    "text": "for example I can have a resource type",
    "start": "614220",
    "end": "615839"
  },
  {
    "text": "blob and a function that takes a handle",
    "start": "615839",
    "end": "617760"
  },
  {
    "text": "to a blob or two resource types requests",
    "start": "617760",
    "end": "620459"
  },
  {
    "text": "and Fields and a function that takes a",
    "start": "620459",
    "end": "622140"
  },
  {
    "text": "handle to request and returns a handle",
    "start": "622140",
    "end": "623760"
  },
  {
    "text": "to its fields",
    "start": "623760",
    "end": "625440"
  },
  {
    "text": "and lastly we say the resource types are",
    "start": "625440",
    "end": "627420"
  },
  {
    "text": "runtime type tags that can be imported",
    "start": "627420",
    "end": "629459"
  },
  {
    "text": "created and exported",
    "start": "629459",
    "end": "631260"
  },
  {
    "text": "so my program a can import the resource",
    "start": "631260",
    "end": "633240"
  },
  {
    "text": "type blob and program B can import the",
    "start": "633240",
    "end": "635880"
  },
  {
    "text": "request and field resource types and",
    "start": "635880",
    "end": "637800"
  },
  {
    "text": "importantly they look different from the",
    "start": "637800",
    "end": "639420"
  },
  {
    "text": "outside I can say without looking at the",
    "start": "639420",
    "end": "641640"
  },
  {
    "text": "code program a is working on blobs and",
    "start": "641640",
    "end": "643440"
  },
  {
    "text": "program B's working on HTTP requests",
    "start": "643440",
    "end": "646019"
  },
  {
    "text": "and what this enables",
    "start": "646019",
    "end": "647820"
  },
  {
    "text": "is things like layer 7 interfaces that",
    "start": "647820",
    "end": "649920"
  },
  {
    "text": "avoid sidecar protocol parsing overhead",
    "start": "649920",
    "end": "651959"
  },
  {
    "text": "so for example if two programs want to",
    "start": "651959",
    "end": "653880"
  },
  {
    "text": "pass a request between them they don't",
    "start": "653880",
    "end": "655079"
  },
  {
    "text": "have to serialize it to a socket just to",
    "start": "655079",
    "end": "656760"
  },
  {
    "text": "deserialize it on the other side things",
    "start": "656760",
    "end": "658079"
  },
  {
    "text": "pass the handle across the boundary",
    "start": "658079",
    "end": "660300"
  },
  {
    "text": "we can have resources that are directly",
    "start": "660300",
    "end": "662220"
  },
  {
    "text": "usable without manual glue code",
    "start": "662220",
    "end": "664320"
  },
  {
    "text": "and we can have virtual platform",
    "start": "664320",
    "end": "666480"
  },
  {
    "text": "layering which is something we'll return",
    "start": "666480",
    "end": "667800"
  },
  {
    "text": "to at the end",
    "start": "667800",
    "end": "669720"
  },
  {
    "start": "669000",
    "end": "739000"
  },
  {
    "text": "and our last pain point is low level",
    "start": "669720",
    "end": "671579"
  },
  {
    "text": "concurrency",
    "start": "671579",
    "end": "672899"
  },
  {
    "text": "so if I have two processes they both",
    "start": "672899",
    "end": "674760"
  },
  {
    "text": "start with a thread because every",
    "start": "674760",
    "end": "676380"
  },
  {
    "text": "process starts with a threatened posix",
    "start": "676380",
    "end": "678000"
  },
  {
    "text": "and that means for them to communicate",
    "start": "678000",
    "end": "679620"
  },
  {
    "text": "with each other they have to do thread",
    "start": "679620",
    "end": "680880"
  },
  {
    "text": "synchronization and then maybe that's",
    "start": "680880",
    "end": "682440"
  },
  {
    "text": "not a lot of overhead to have a few",
    "start": "682440",
    "end": "683820"
  },
  {
    "text": "monolithic processes but in this",
    "start": "683820",
    "end": "685560"
  },
  {
    "text": "nanoprocess Vision where I have lots of",
    "start": "685560",
    "end": "686940"
  },
  {
    "text": "tiny little processes this can add up",
    "start": "686940",
    "end": "688980"
  },
  {
    "text": "and add a lot of scheduling overhead",
    "start": "688980",
    "end": "691800"
  },
  {
    "text": "so that's a performance pain Point next",
    "start": "691800",
    "end": "694320"
  },
  {
    "text": "if I want to do concurrent i o I can use",
    "start": "694320",
    "end": "696480"
  },
  {
    "text": "multiple threads to do multiple blocking",
    "start": "696480",
    "end": "698279"
  },
  {
    "text": "requests but now I'm doing",
    "start": "698279",
    "end": "699899"
  },
  {
    "text": "multi-threading which is hard and if you",
    "start": "699899",
    "end": "702060"
  },
  {
    "text": "can't see this is a picture of a famous",
    "start": "702060",
    "end": "703980"
  },
  {
    "text": "Mozilla hacker David Barron who had used",
    "start": "703980",
    "end": "706200"
  },
  {
    "text": "to have a sign famously that you can see",
    "start": "706200",
    "end": "708240"
  },
  {
    "text": "in the top left top left that says Must",
    "start": "708240",
    "end": "710700"
  },
  {
    "text": "Be This Tall to write multi-threaded",
    "start": "710700",
    "end": "712079"
  },
  {
    "text": "code because it's hard and ultimately",
    "start": "712079",
    "end": "714540"
  },
  {
    "text": "leads to less composable components now",
    "start": "714540",
    "end": "717060"
  },
  {
    "text": "I don't have to do multi-threading",
    "start": "717060",
    "end": "718260"
  },
  {
    "text": "instead I can be using concurrency",
    "start": "718260",
    "end": "719579"
  },
  {
    "text": "mechanisms like select an e-pole but",
    "start": "719579",
    "end": "721860"
  },
  {
    "text": "these are rather coupled to the built-in",
    "start": "721860",
    "end": "723360"
  },
  {
    "text": "resource types of the operating system",
    "start": "723360",
    "end": "724860"
  },
  {
    "text": "and harder to make work with these",
    "start": "724860",
    "end": "726420"
  },
  {
    "text": "user-defined resource types that we were",
    "start": "726420",
    "end": "728040"
  },
  {
    "text": "just talking about",
    "start": "728040",
    "end": "729720"
  },
  {
    "text": "and additionally I want to use these",
    "start": "729720",
    "end": "731519"
  },
  {
    "text": "from a source language that means",
    "start": "731519",
    "end": "732959"
  },
  {
    "text": "writing a lot of high-level glue code to",
    "start": "732959",
    "end": "734519"
  },
  {
    "text": "manually bind it to all these low-level",
    "start": "734519",
    "end": "736140"
  },
  {
    "text": "concurrency mechanisms which is a",
    "start": "736140",
    "end": "737579"
  },
  {
    "text": "language interop pain point",
    "start": "737579",
    "end": "739680"
  },
  {
    "start": "739000",
    "end": "833000"
  },
  {
    "text": "so instead what we're proposing is to",
    "start": "739680",
    "end": "741300"
  },
  {
    "text": "have future and stream types where we",
    "start": "741300",
    "end": "743339"
  },
  {
    "text": "say that calls between instances can",
    "start": "743339",
    "end": "745079"
  },
  {
    "text": "share a stack so for example if I have",
    "start": "745079",
    "end": "747420"
  },
  {
    "text": "two instances linked together and the",
    "start": "747420",
    "end": "748920"
  },
  {
    "text": "host calls G I can be pushing frames on",
    "start": "748920",
    "end": "751860"
  },
  {
    "text": "the stack and then when I2 calls into i1",
    "start": "751860",
    "end": "754560"
  },
  {
    "text": "through F I can just keep pushing frames",
    "start": "754560",
    "end": "756600"
  },
  {
    "text": "on the stack sharing a stack and an",
    "start": "756600",
    "end": "758880"
  },
  {
    "text": "operating system literature this is",
    "start": "758880",
    "end": "760200"
  },
  {
    "text": "called thread migration and it's an",
    "start": "760200",
    "end": "761760"
  },
  {
    "text": "optimization to avoid cross-process",
    "start": "761760",
    "end": "763740"
  },
  {
    "text": "overhead which is effectively what we",
    "start": "763740",
    "end": "765360"
  },
  {
    "text": "want here",
    "start": "765360",
    "end": "766440"
  },
  {
    "text": "but additionally a colleague can suspend",
    "start": "766440",
    "end": "769260"
  },
  {
    "text": "itself allowing the caller to make",
    "start": "769260",
    "end": "770820"
  },
  {
    "text": "progress so I one can suspend itself",
    "start": "770820",
    "end": "773700"
  },
  {
    "text": "returning control flow to I2 which keeps",
    "start": "773700",
    "end": "776339"
  },
  {
    "text": "running holding a handle to the",
    "start": "776339",
    "end": "777720"
  },
  {
    "text": "suspended f-task",
    "start": "777720",
    "end": "779940"
  },
  {
    "text": "next we have future and stream types for",
    "start": "779940",
    "end": "781980"
  },
  {
    "text": "passing returning these handles to",
    "start": "781980",
    "end": "783600"
  },
  {
    "text": "suspended tasks",
    "start": "783600",
    "end": "785100"
  },
  {
    "text": "so I could have a fetch function that",
    "start": "785100",
    "end": "786420"
  },
  {
    "text": "returns a future response or more",
    "start": "786420",
    "end": "788880"
  },
  {
    "text": "generally a merge function that takes a",
    "start": "788880",
    "end": "790260"
  },
  {
    "text": "list of Futures and returns a stream",
    "start": "790260",
    "end": "793079"
  },
  {
    "text": "and lastly we Define a low level control",
    "start": "793079",
    "end": "795060"
  },
  {
    "text": "flow protocol for futures and streams",
    "start": "795060",
    "end": "797160"
  },
  {
    "text": "that language runtimes can integrate",
    "start": "797160",
    "end": "798720"
  },
  {
    "text": "with so that if I have three different",
    "start": "798720",
    "end": "800399"
  },
  {
    "text": "instances linked together compiled from",
    "start": "800399",
    "end": "802440"
  },
  {
    "text": "three different languages they can have",
    "start": "802440",
    "end": "803639"
  },
  {
    "text": "their three separate async runtimes",
    "start": "803639",
    "end": "805320"
  },
  {
    "text": "compiled inside of them and they work",
    "start": "805320",
    "end": "807000"
  },
  {
    "text": "together because they're all speaking",
    "start": "807000",
    "end": "808079"
  },
  {
    "text": "the same low level control flow protocol",
    "start": "808079",
    "end": "809639"
  },
  {
    "text": "with the async runtimes integrating kind",
    "start": "809639",
    "end": "812519"
  },
  {
    "text": "of like with kind of like they integrate",
    "start": "812519",
    "end": "814620"
  },
  {
    "text": "with an operating system",
    "start": "814620",
    "end": "816180"
  },
  {
    "text": "and what this enables is efficient bulk",
    "start": "816180",
    "end": "818760"
  },
  {
    "text": "data streaming into and out of quasim",
    "start": "818760",
    "end": "820200"
  },
  {
    "text": "linear memory async interfaces that are",
    "start": "820200",
    "end": "822660"
  },
  {
    "text": "directly usable without manual glue code",
    "start": "822660",
    "end": "824940"
  },
  {
    "text": "and defining and enforcing",
    "start": "824940",
    "end": "826320"
  },
  {
    "text": "cross-language structure concurrency",
    "start": "826320",
    "end": "827820"
  },
  {
    "text": "which is a whole separate topic they",
    "start": "827820",
    "end": "829200"
  },
  {
    "text": "don't have time to get into but it's",
    "start": "829200",
    "end": "830459"
  },
  {
    "text": "enabled by the high level nature of",
    "start": "830459",
    "end": "831899"
  },
  {
    "text": "Futures and streams",
    "start": "831899",
    "end": "834360"
  },
  {
    "text": "so putting this all together we started",
    "start": "834360",
    "end": "835800"
  },
  {
    "text": "with posix which defines IO with the",
    "start": "835800",
    "end": "838740"
  },
  {
    "text": "outside world and also a process model",
    "start": "838740",
    "end": "840720"
  },
  {
    "text": "we identified four pain points with the",
    "start": "840720",
    "end": "842820"
  },
  {
    "text": "process model and four design a proposed",
    "start": "842820",
    "end": "845639"
  },
  {
    "text": "design Alternatives so kind of",
    "start": "845639",
    "end": "847380"
  },
  {
    "text": "Performing that substitution is the",
    "start": "847380",
    "end": "849180"
  },
  {
    "text": "component model and it's layered on top",
    "start": "849180",
    "end": "851339"
  },
  {
    "text": "of webassembly core webassembly",
    "start": "851339",
    "end": "853380"
  },
  {
    "text": "providing the portable instruction set",
    "start": "853380",
    "end": "855420"
  },
  {
    "text": "that we can now bundle up into these",
    "start": "855420",
    "end": "857279"
  },
  {
    "text": "abstract black box reusable units of",
    "start": "857279",
    "end": "859139"
  },
  {
    "text": "code and this frees up Wazi to do what",
    "start": "859139",
    "end": "861540"
  },
  {
    "text": "is originally designed to do which or",
    "start": "861540",
    "end": "863040"
  },
  {
    "text": "started to do which is Define IO with",
    "start": "863040",
    "end": "865019"
  },
  {
    "text": "the outside world being layered on top",
    "start": "865019",
    "end": "866459"
  },
  {
    "text": "of the component model and being able to",
    "start": "866459",
    "end": "868320"
  },
  {
    "text": "Define modular interfaces for all the",
    "start": "868320",
    "end": "870000"
  },
  {
    "text": "sorts of things like logging config file",
    "start": "870000",
    "end": "871560"
  },
  {
    "text": "system sockets grpc and all that",
    "start": "871560",
    "end": "874040"
  },
  {
    "text": "so the component model is what we've",
    "start": "874040",
    "end": "876120"
  },
  {
    "text": "been spending a lot of time factoring",
    "start": "876120",
    "end": "877560"
  },
  {
    "text": "out of wazzy now if you've been around",
    "start": "877560",
    "end": "879959"
  },
  {
    "start": "878000",
    "end": "913000"
  },
  {
    "text": "the block a few times you might be",
    "start": "879959",
    "end": "881399"
  },
  {
    "text": "saying right now like components OMG not",
    "start": "881399",
    "end": "884820"
  },
  {
    "text": "korba again",
    "start": "884820",
    "end": "886260"
  },
  {
    "text": "or Java ee or MSD com right because",
    "start": "886260",
    "end": "888959"
  },
  {
    "text": "we've seen this before and there's a lot",
    "start": "888959",
    "end": "891060"
  },
  {
    "text": "of differences that can be pointed out",
    "start": "891060",
    "end": "892139"
  },
  {
    "text": "enough to fill the whole talk but the",
    "start": "892139",
    "end": "893399"
  },
  {
    "text": "big one I'd like to point out is that",
    "start": "893399",
    "end": "894660"
  },
  {
    "text": "distributed computing is out of scope",
    "start": "894660",
    "end": "896160"
  },
  {
    "text": "for the component model",
    "start": "896160",
    "end": "897899"
  },
  {
    "text": "this means partial failure persistence",
    "start": "897899",
    "end": "899940"
  },
  {
    "text": "live upgrade scalability and",
    "start": "899940",
    "end": "901320"
  },
  {
    "text": "availability these are definitely",
    "start": "901320",
    "end": "902519"
  },
  {
    "text": "important problems but they're not",
    "start": "902519",
    "end": "903839"
  },
  {
    "text": "something we can automatically solve in",
    "start": "903839",
    "end": "905279"
  },
  {
    "text": "the component model instead we're just",
    "start": "905279",
    "end": "906959"
  },
  {
    "text": "leaving these up to a higher layer like",
    "start": "906959",
    "end": "908519"
  },
  {
    "text": "the platform embedding and future higher",
    "start": "908519",
    "end": "910980"
  },
  {
    "text": "level specifications",
    "start": "910980",
    "end": "913380"
  },
  {
    "start": "913000",
    "end": "944000"
  },
  {
    "text": "so what's the developer experience look",
    "start": "913380",
    "end": "915180"
  },
  {
    "text": "like for all this",
    "start": "915180",
    "end": "916440"
  },
  {
    "text": "so a good starting point is to say that",
    "start": "916440",
    "end": "918120"
  },
  {
    "text": "components are sort of like the love",
    "start": "918120",
    "end": "919260"
  },
  {
    "text": "child of two things we're familiar with",
    "start": "919260",
    "end": "920760"
  },
  {
    "text": "on the one side Source language modules",
    "start": "920760",
    "end": "923160"
  },
  {
    "text": "like JavaScript modules where we're",
    "start": "923160",
    "end": "925199"
  },
  {
    "text": "doing fast sync and async calls to other",
    "start": "925199",
    "end": "927120"
  },
  {
    "text": "modules through imports and exports",
    "start": "927120",
    "end": "929459"
  },
  {
    "text": "and microservices defined by via IDL",
    "start": "929459",
    "end": "932040"
  },
  {
    "text": "like open API or grpc where we're",
    "start": "932040",
    "end": "935160"
  },
  {
    "text": "defining shared nothing interfaces in an",
    "start": "935160",
    "end": "937500"
  },
  {
    "text": "IDL and deriving our language specific",
    "start": "937500",
    "end": "940199"
  },
  {
    "text": "bindings from that",
    "start": "940199",
    "end": "941699"
  },
  {
    "text": "so that raises the question well what's",
    "start": "941699",
    "end": "943260"
  },
  {
    "text": "the ideal for components and that's",
    "start": "943260",
    "end": "945600"
  },
  {
    "text": "something that the wazzy subgroup has",
    "start": "945600",
    "end": "946980"
  },
  {
    "text": "been working on for a while and it's",
    "start": "946980",
    "end": "948120"
  },
  {
    "text": "called wit so just showing whip by way",
    "start": "948120",
    "end": "950399"
  },
  {
    "text": "of Abridged wazzy examples",
    "start": "950399",
    "end": "952440"
  },
  {
    "text": "whereas he could Define a wazzy CLI main",
    "start": "952440",
    "end": "955079"
  },
  {
    "text": "interface that defines a main function",
    "start": "955079",
    "end": "956940"
  },
  {
    "text": "that takes an arc V list of strings and",
    "start": "956940",
    "end": "958620"
  },
  {
    "text": "a standard N is a stream of chars where",
    "start": "958620",
    "end": "960240"
  },
  {
    "text": "it turns standard out as a stream of",
    "start": "960240",
    "end": "961560"
  },
  {
    "text": "chars",
    "start": "961560",
    "end": "962579"
  },
  {
    "text": "I could Define an interface logging back",
    "start": "962579",
    "end": "964260"
  },
  {
    "text": "end that defines a log function that",
    "start": "964260",
    "end": "966120"
  },
  {
    "text": "takes a log level and two strings",
    "start": "966120",
    "end": "968639"
  },
  {
    "text": "Define a wasi file system interface that",
    "start": "968639",
    "end": "970860"
  },
  {
    "text": "defines two resource types for",
    "start": "970860",
    "end": "972480"
  },
  {
    "text": "directories and files in the operations",
    "start": "972480",
    "end": "974339"
  },
  {
    "text": "that are appropriate on them",
    "start": "974339",
    "end": "975899"
  },
  {
    "text": "and then totally separately we can",
    "start": "975899",
    "end": "977820"
  },
  {
    "text": "define a was the HCB types interface",
    "start": "977820",
    "end": "980160"
  },
  {
    "text": "that defines a totally disjoint set of",
    "start": "980160",
    "end": "981899"
  },
  {
    "text": "resource types for appropriate for HTTP",
    "start": "981899",
    "end": "984060"
  },
  {
    "text": "things like Fields body requests and",
    "start": "984060",
    "end": "985860"
  },
  {
    "text": "responses",
    "start": "985860",
    "end": "986940"
  },
  {
    "text": "and then building on that HTTP types",
    "start": "986940",
    "end": "988680"
  },
  {
    "text": "interface we can define a Handler",
    "start": "988680",
    "end": "989940"
  },
  {
    "text": "interface that defines a handle function",
    "start": "989940",
    "end": "992040"
  },
  {
    "text": "that takes a request and returns a",
    "start": "992040",
    "end": "993480"
  },
  {
    "text": "future response and a whole bunch more",
    "start": "993480",
    "end": "995699"
  },
  {
    "text": "interfaces like that and hopefully the",
    "start": "995699",
    "end": "997560"
  },
  {
    "text": "picture you're getting here is that",
    "start": "997560",
    "end": "998579"
  },
  {
    "text": "these interfaces can be small and",
    "start": "998579",
    "end": "999959"
  },
  {
    "text": "modular and focus on just one task",
    "start": "999959",
    "end": "1002540"
  },
  {
    "text": "but then from a component other",
    "start": "1002540",
    "end": "1003980"
  },
  {
    "text": "perspective I'll have to ask the",
    "start": "1003980",
    "end": "1005180"
  },
  {
    "text": "question like which interfaces can I use",
    "start": "1005180",
    "end": "1007160"
  },
  {
    "text": "like all of them I mean that sounds nice",
    "start": "1007160",
    "end": "1009320"
  },
  {
    "text": "but like I'm a little skeptical that I'm",
    "start": "1009320",
    "end": "1010940"
  },
  {
    "text": "going to get a GPU or neural network",
    "start": "1010940",
    "end": "1012259"
  },
  {
    "text": "Hardware everywhere",
    "start": "1012259",
    "end": "1014000"
  },
  {
    "text": "and then from a platform vendor's",
    "start": "1014000",
    "end": "1015560"
  },
  {
    "text": "perspective I asked the same question do",
    "start": "1015560",
    "end": "1017180"
  },
  {
    "text": "I have to implement all these interfaces",
    "start": "1017180",
    "end": "1018740"
  },
  {
    "text": "and that's a much scarier proposition",
    "start": "1018740",
    "end": "1020360"
  },
  {
    "text": "because there's like a lot of them and",
    "start": "1020360",
    "end": "1021500"
  },
  {
    "text": "they're going to be growing over time",
    "start": "1021500",
    "end": "1022519"
  },
  {
    "text": "and not even possible to implement in",
    "start": "1022519",
    "end": "1023839"
  },
  {
    "text": "all places so we're missing one more",
    "start": "1023839",
    "end": "1026058"
  },
  {
    "text": "thing to kind of Link these together or",
    "start": "1026059",
    "end": "1027980"
  },
  {
    "text": "answer these questions and that thing is",
    "start": "1027980",
    "end": "1030438"
  },
  {
    "start": "1029000",
    "end": "1134000"
  },
  {
    "text": "being actively worked on it's and it's",
    "start": "1030439",
    "end": "1032000"
  },
  {
    "text": "called worlds",
    "start": "1032000",
    "end": "1033438"
  },
  {
    "text": "so just to show Worlds by way of example",
    "start": "1033439",
    "end": "1035660"
  },
  {
    "text": "I Define a world where called wazzy CLI",
    "start": "1035660",
    "end": "1038660"
  },
  {
    "text": "command that kind of captures a",
    "start": "1038660",
    "end": "1039980"
  },
  {
    "text": "traditional posix environment where I",
    "start": "1039980",
    "end": "1041959"
  },
  {
    "text": "get to import a logging back in as my",
    "start": "1041959",
    "end": "1044120"
  },
  {
    "text": "console and a file system and sockets",
    "start": "1044120",
    "end": "1045980"
  },
  {
    "text": "and then I export a main function that's",
    "start": "1045980",
    "end": "1048319"
  },
  {
    "text": "like a traditional kind of posix view of",
    "start": "1048319",
    "end": "1049940"
  },
  {
    "text": "the world",
    "start": "1049940",
    "end": "1050720"
  },
  {
    "text": "but separately I could have a wazzy HP",
    "start": "1050720",
    "end": "1053000"
  },
  {
    "text": "proxy world where I get to import a",
    "start": "1053000",
    "end": "1055039"
  },
  {
    "text": "console so here we're using the same",
    "start": "1055039",
    "end": "1056660"
  },
  {
    "text": "interface so interfaces don't care which",
    "start": "1056660",
    "end": "1058280"
  },
  {
    "text": "world they're used in they can be used",
    "start": "1058280",
    "end": "1059360"
  },
  {
    "text": "by multiple worlds",
    "start": "1059360",
    "end": "1060799"
  },
  {
    "text": "but instead of a file system in sockets",
    "start": "1060799",
    "end": "1062539"
  },
  {
    "text": "I'm importing an upstream Handler and a",
    "start": "1062539",
    "end": "1064520"
  },
  {
    "text": "config configuration values and instead",
    "start": "1064520",
    "end": "1066679"
  },
  {
    "text": "of exporting main I'm exporting an HP",
    "start": "1066679",
    "end": "1068480"
  },
  {
    "text": "Handler interface",
    "start": "1068480",
    "end": "1069740"
  },
  {
    "text": "and here we can see the same Waze HP",
    "start": "1069740",
    "end": "1071720"
  },
  {
    "text": "Handler interface used as both an import",
    "start": "1071720",
    "end": "1073220"
  },
  {
    "text": "and an export because interfaces don't",
    "start": "1073220",
    "end": "1075140"
  },
  {
    "text": "care they can be imported or exported",
    "start": "1075140",
    "end": "1076520"
  },
  {
    "text": "and this is critical for virtualization",
    "start": "1076520",
    "end": "1078260"
  },
  {
    "text": "which we'll get to in a bit",
    "start": "1078260",
    "end": "1080419"
  },
  {
    "text": "so in general we're gonna have Bunches",
    "start": "1080419",
    "end": "1082220"
  },
  {
    "text": "of interfaces growing over time and then",
    "start": "1082220",
    "end": "1084799"
  },
  {
    "text": "worlds kind of Select subsets of these",
    "start": "1084799",
    "end": "1086900"
  },
  {
    "text": "interfaces that are imported or exported",
    "start": "1086900",
    "end": "1088640"
  },
  {
    "text": "in a certain context so I showed these",
    "start": "1088640",
    "end": "1090860"
  },
  {
    "text": "two but you can imagine a whole bunch",
    "start": "1090860",
    "end": "1092179"
  },
  {
    "text": "more like a database user-defined",
    "start": "1092179",
    "end": "1093980"
  },
  {
    "text": "function or a cloud service world and a",
    "start": "1093980",
    "end": "1095780"
  },
  {
    "text": "bunch more",
    "start": "1095780",
    "end": "1096980"
  },
  {
    "text": "and because these worlds are set like we",
    "start": "1096980",
    "end": "1098960"
  },
  {
    "text": "can say things like the HP proxy world",
    "start": "1098960",
    "end": "1100940"
  },
  {
    "text": "is included in the cloud service world",
    "start": "1100940",
    "end": "1103340"
  },
  {
    "text": "or we can Define HP caching proxy world",
    "start": "1103340",
    "end": "1105380"
  },
  {
    "text": "that extends an HTTP proxy with a cache",
    "start": "1105380",
    "end": "1107660"
  },
  {
    "text": "we can Define things like unions and",
    "start": "1107660",
    "end": "1110120"
  },
  {
    "text": "intersections on worlds",
    "start": "1110120",
    "end": "1112940"
  },
  {
    "text": "so from a platform vendor perspective I",
    "start": "1112940",
    "end": "1115520"
  },
  {
    "text": "support a world by implementing its",
    "start": "1115520",
    "end": "1117860"
  },
  {
    "text": "Imports and calling its exports and then",
    "start": "1117860",
    "end": "1120320"
  },
  {
    "text": "dually from a component author",
    "start": "1120320",
    "end": "1122240"
  },
  {
    "text": "perspective like Target a world by",
    "start": "1122240",
    "end": "1123980"
  },
  {
    "text": "calling its Imports and implementing its",
    "start": "1123980",
    "end": "1126080"
  },
  {
    "text": "exports",
    "start": "1126080",
    "end": "1127280"
  },
  {
    "text": "and thus a world is sort of like a",
    "start": "1127280",
    "end": "1129620"
  },
  {
    "text": "higher order interface that sits in",
    "start": "1129620",
    "end": "1131120"
  },
  {
    "text": "between platform vendors and component",
    "start": "1131120",
    "end": "1132740"
  },
  {
    "text": "authors",
    "start": "1132740",
    "end": "1134120"
  },
  {
    "text": "okay so I have a world now what can I do",
    "start": "1134120",
    "end": "1136340"
  },
  {
    "text": "with it so let's take our example HTTP",
    "start": "1136340",
    "end": "1138860"
  },
  {
    "text": "proxy worlds there's a new tool that's",
    "start": "1138860",
    "end": "1141260"
  },
  {
    "text": "being worked on in the bytecode alliance",
    "start": "1141260",
    "end": "1142520"
  },
  {
    "text": "called whitbine gen and whitbungin gives",
    "start": "1142520",
    "end": "1144740"
  },
  {
    "text": "you a set of choices the first one is",
    "start": "1144740",
    "end": "1146780"
  },
  {
    "text": "are you making host bindings or guest",
    "start": "1146780",
    "end": "1148580"
  },
  {
    "text": "bindings if I go the guest Direction my",
    "start": "1148580",
    "end": "1151160"
  },
  {
    "text": "next question is well what guest",
    "start": "1151160",
    "end": "1152299"
  },
  {
    "text": "language are you using and there's a",
    "start": "1152299",
    "end": "1154100"
  },
  {
    "text": "bunch of languages in progress more than",
    "start": "1154100",
    "end": "1155480"
  },
  {
    "text": "I'm showing here including python go and",
    "start": "1155480",
    "end": "1157400"
  },
  {
    "text": "Java and c-sharp I'm going to show Jason",
    "start": "1157400",
    "end": "1159860"
  },
  {
    "text": "rust so if I go the rest Direction with",
    "start": "1159860",
    "end": "1162320"
  },
  {
    "text": "bindgen Will generate some Rust glue",
    "start": "1162320",
    "end": "1164059"
  },
  {
    "text": "code and this glue code will allow me to",
    "start": "1164059",
    "end": "1166280"
  },
  {
    "text": "write idiomatic nice kind of looking",
    "start": "1166280",
    "end": "1168080"
  },
  {
    "text": "rust code like in this white box like a",
    "start": "1168080",
    "end": "1170419"
  },
  {
    "text": "handle function that takes a request it",
    "start": "1170419",
    "end": "1172580"
  },
  {
    "text": "calls the log before passing on the",
    "start": "1172580",
    "end": "1174500"
  },
  {
    "text": "request to the Upstream and I compile",
    "start": "1174500",
    "end": "1176660"
  },
  {
    "text": "all the stress codes some core wasm and",
    "start": "1176660",
    "end": "1179179"
  },
  {
    "text": "feed that into a second tool being",
    "start": "1179179",
    "end": "1180440"
  },
  {
    "text": "developed in the bycode lines called wit",
    "start": "1180440",
    "end": "1182539"
  },
  {
    "text": "components wit component will bundle up",
    "start": "1182539",
    "end": "1184760"
  },
  {
    "text": "this corwasm along with the high level",
    "start": "1184760",
    "end": "1186559"
  },
  {
    "text": "types in the original World to create a",
    "start": "1186559",
    "end": "1188780"
  },
  {
    "text": "self-contained self-defining component",
    "start": "1188780",
    "end": "1191419"
  },
  {
    "text": "in a binary format defined by the",
    "start": "1191419",
    "end": "1193400"
  },
  {
    "text": "component model",
    "start": "1193400",
    "end": "1194720"
  },
  {
    "text": "now if I back up and go the Jazz",
    "start": "1194720",
    "end": "1196280"
  },
  {
    "text": "direction that will generate some js",
    "start": "1196280",
    "end": "1198020"
  },
  {
    "text": "engine glue code which will allow me to",
    "start": "1198020",
    "end": "1200240"
  },
  {
    "text": "write some idiomatic looking JS code",
    "start": "1200240",
    "end": "1201740"
  },
  {
    "text": "where I get to use JS Imports to import",
    "start": "1201740",
    "end": "1203960"
  },
  {
    "text": "the world's Imports and write JS exports",
    "start": "1203960",
    "end": "1207200"
  },
  {
    "text": "for World exports and when I compile",
    "start": "1207200",
    "end": "1209059"
  },
  {
    "text": "this to core wazum and feed it to wit",
    "start": "1209059",
    "end": "1210919"
  },
  {
    "text": "component I'll get a component of the",
    "start": "1210919",
    "end": "1212179"
  },
  {
    "text": "same shape and type as the rust",
    "start": "1212179",
    "end": "1213860"
  },
  {
    "text": "component just different guts",
    "start": "1213860",
    "end": "1215720"
  },
  {
    "text": "and some from a guest perspective what",
    "start": "1215720",
    "end": "1218299"
  },
  {
    "text": "width and wit component tooling give us",
    "start": "1218299",
    "end": "1220760"
  },
  {
    "text": "is sdks made easy",
    "start": "1220760",
    "end": "1222799"
  },
  {
    "text": "now if I go the host Direction I'll",
    "start": "1222799",
    "end": "1224360"
  },
  {
    "text": "again have the same language choice if I",
    "start": "1224360",
    "end": "1226760"
  },
  {
    "text": "go the rest Direction what that will do",
    "start": "1226760",
    "end": "1228320"
  },
  {
    "text": "is wrap wasm time with some glue code",
    "start": "1228320",
    "end": "1230360"
  },
  {
    "text": "that gives me safe high-level traits",
    "start": "1230360",
    "end": "1232100"
  },
  {
    "text": "that I Implement for imports and call",
    "start": "1232100",
    "end": "1233960"
  },
  {
    "text": "for exports and into this I can plug in",
    "start": "1233960",
    "end": "1236660"
  },
  {
    "text": "reusable implementations of common",
    "start": "1236660",
    "end": "1238160"
  },
  {
    "text": "standard Wazi interfaces or just my own",
    "start": "1238160",
    "end": "1240440"
  },
  {
    "text": "custom implementations",
    "start": "1240440",
    "end": "1242419"
  },
  {
    "text": "and then this wrapped was in time will",
    "start": "1242419",
    "end": "1244039"
  },
  {
    "text": "be able to run the components that I",
    "start": "1244039",
    "end": "1245539"
  },
  {
    "text": "compiled from the same world or any",
    "start": "1245539",
    "end": "1246919"
  },
  {
    "text": "compatible world",
    "start": "1246919",
    "end": "1248299"
  },
  {
    "text": "now in theory I shouldn't need the",
    "start": "1248299",
    "end": "1249620"
  },
  {
    "text": "host.js direction because the goal is",
    "start": "1249620",
    "end": "1251240"
  },
  {
    "text": "that the components will be native",
    "start": "1251240",
    "end": "1252679"
  },
  {
    "text": "Implement will be natively implemented",
    "start": "1252679",
    "end": "1254419"
  },
  {
    "text": "by JS runtimes just like corwasm is",
    "start": "1254419",
    "end": "1256460"
  },
  {
    "text": "today but until then",
    "start": "1256460",
    "end": "1258799"
  },
  {
    "text": "the host.js direction will give us a",
    "start": "1258799",
    "end": "1260900"
  },
  {
    "text": "polyfill that allow us to run components",
    "start": "1260900",
    "end": "1262580"
  },
  {
    "text": "in today's JS engines and browsers as",
    "start": "1262580",
    "end": "1265580"
  },
  {
    "text": "wasm 1.0 and JS glue code",
    "start": "1265580",
    "end": "1268640"
  },
  {
    "text": "so from a host perspective what wit",
    "start": "1268640",
    "end": "1270799"
  },
  {
    "text": "gives us is embedding made easy and I",
    "start": "1270799",
    "end": "1273200"
  },
  {
    "text": "get all of this from just the cost the",
    "start": "1273200",
    "end": "1275179"
  },
  {
    "text": "low low cost of one world",
    "start": "1275179",
    "end": "1278419"
  },
  {
    "start": "1278000",
    "end": "1421000"
  },
  {
    "text": "so that's the tooling that's in progress",
    "start": "1278419",
    "end": "1281059"
  },
  {
    "text": "now the next step in tooling is around",
    "start": "1281059",
    "end": "1282860"
  },
  {
    "text": "virtualization so to motivate this we've",
    "start": "1282860",
    "end": "1285440"
  },
  {
    "text": "got tons of posix programs that are",
    "start": "1285440",
    "end": "1287000"
  },
  {
    "text": "already written today and they use libc",
    "start": "1287000",
    "end": "1288620"
  },
  {
    "text": "and file systems and sockets",
    "start": "1288620",
    "end": "1290780"
  },
  {
    "text": "and the so these implicitly Target the",
    "start": "1290780",
    "end": "1292820"
  },
  {
    "text": "wazzy CLI command world that I showed so",
    "start": "1292820",
    "end": "1294919"
  },
  {
    "text": "that's what I have but let's say I want",
    "start": "1294919",
    "end": "1296840"
  },
  {
    "text": "to run this code in a cloud service",
    "start": "1296840",
    "end": "1298220"
  },
  {
    "text": "world",
    "start": "1298220",
    "end": "1299299"
  },
  {
    "text": "so how do I do that well I can start by",
    "start": "1299299",
    "end": "1301820"
  },
  {
    "text": "compiling my code to a components and",
    "start": "1301820",
    "end": "1304280"
  },
  {
    "text": "because it targets the CLI command world",
    "start": "1304280",
    "end": "1305960"
  },
  {
    "text": "I'm going to get a component that",
    "start": "1305960",
    "end": "1307039"
  },
  {
    "text": "Imports a file system and exports a main",
    "start": "1307039",
    "end": "1308900"
  },
  {
    "text": "interface",
    "start": "1308900",
    "end": "1309919"
  },
  {
    "text": "and now we want to wrap this in a",
    "start": "1309919",
    "end": "1311840"
  },
  {
    "text": "component that does Target the cloud",
    "start": "1311840",
    "end": "1313039"
  },
  {
    "text": "service world and to do that I'll use",
    "start": "1313039",
    "end": "1315320"
  },
  {
    "text": "some tool that I'm going to call",
    "start": "1315320",
    "end": "1316820"
  },
  {
    "text": "virtualize commands now it doesn't exist",
    "start": "1316820",
    "end": "1319039"
  },
  {
    "text": "today but the idea is not new this is",
    "start": "1319039",
    "end": "1320720"
  },
  {
    "text": "effectively what M scriptton's virtual",
    "start": "1320720",
    "end": "1322400"
  },
  {
    "text": "file system does in wazy VFS do today",
    "start": "1322400",
    "end": "1325039"
  },
  {
    "text": "and its inputs would be a configuration",
    "start": "1325039",
    "end": "1327260"
  },
  {
    "text": "file that says how do you want me to",
    "start": "1327260",
    "end": "1328520"
  },
  {
    "text": "virtualize this file system and I could",
    "start": "1328520",
    "end": "1330559"
  },
  {
    "text": "say things like well in the blobs",
    "start": "1330559",
    "end": "1332000"
  },
  {
    "text": "directory I'd like to mount a blob store",
    "start": "1332000",
    "end": "1333380"
  },
  {
    "text": "and the assets director I'd like to",
    "start": "1333380",
    "end": "1335059"
  },
  {
    "text": "stick some data some assets stored as",
    "start": "1335059",
    "end": "1336860"
  },
  {
    "text": "data segments and virtualize command",
    "start": "1336860",
    "end": "1338900"
  },
  {
    "text": "will then produce will synthesize some",
    "start": "1338900",
    "end": "1340940"
  },
  {
    "text": "adapter modules that will be linked with",
    "start": "1340940",
    "end": "1343760"
  },
  {
    "text": "my original components to implement the",
    "start": "1343760",
    "end": "1346100"
  },
  {
    "text": "cloud service world",
    "start": "1346100",
    "end": "1347600"
  },
  {
    "text": "and all this is linked together using",
    "start": "1347600",
    "end": "1349880"
  },
  {
    "text": "that parametric linking feature that I",
    "start": "1349880",
    "end": "1351440"
  },
  {
    "text": "talked about earlier and what this means",
    "start": "1351440",
    "end": "1353179"
  },
  {
    "text": "is I can ultimately produce a single",
    "start": "1353179",
    "end": "1354620"
  },
  {
    "text": "component that runs on a cloud service",
    "start": "1354620",
    "end": "1356360"
  },
  {
    "text": "so the cloud service world doesn't know",
    "start": "1356360",
    "end": "1357919"
  },
  {
    "text": "anything about the CLI command World it",
    "start": "1357919",
    "end": "1359480"
  },
  {
    "text": "kind of just works",
    "start": "1359480",
    "end": "1360740"
  },
  {
    "text": "and this specific example is uh an",
    "start": "1360740",
    "end": "1364520"
  },
  {
    "text": "example of a more General pattern that I",
    "start": "1364520",
    "end": "1366140"
  },
  {
    "text": "think we're going to see over and over",
    "start": "1366140",
    "end": "1367299"
  },
  {
    "text": "called virtual platform layering where",
    "start": "1367299",
    "end": "1370340"
  },
  {
    "text": "we Define a guest World which is what we",
    "start": "1370340",
    "end": "1372200"
  },
  {
    "text": "expose to our customers so they'll be",
    "start": "1372200",
    "end": "1374059"
  },
  {
    "text": "deploying components that run on our",
    "start": "1374059",
    "end": "1376280"
  },
  {
    "text": "platforms targeting this guest world but",
    "start": "1376280",
    "end": "1379460"
  },
  {
    "text": "then as an implementation detail we can",
    "start": "1379460",
    "end": "1381080"
  },
  {
    "text": "have a host world that has a totally",
    "start": "1381080",
    "end": "1382400"
  },
  {
    "text": "different set of imports and we",
    "start": "1382400",
    "end": "1384020"
  },
  {
    "text": "implement the guest World in terms of",
    "start": "1384020",
    "end": "1385460"
  },
  {
    "text": "the host world",
    "start": "1385460",
    "end": "1386720"
  },
  {
    "text": "and when we link all this together with",
    "start": "1386720",
    "end": "1388400"
  },
  {
    "text": "parametric linking this can run on a",
    "start": "1388400",
    "end": "1390080"
  },
  {
    "text": "host runtime that only knows about the",
    "start": "1390080",
    "end": "1391700"
  },
  {
    "text": "host world and what this allows us to do",
    "start": "1391700",
    "end": "1393860"
  },
  {
    "text": "is reduce the size of the trusted",
    "start": "1393860",
    "end": "1395360"
  },
  {
    "text": "Computing base and also decouple our",
    "start": "1395360",
    "end": "1397039"
  },
  {
    "text": "guest World from our host World allowing",
    "start": "1397039",
    "end": "1398539"
  },
  {
    "text": "us to evolve the host World kind of as",
    "start": "1398539",
    "end": "1399919"
  },
  {
    "text": "our platform evolves",
    "start": "1399919",
    "end": "1401720"
  },
  {
    "text": "and even Wilder is that this host World",
    "start": "1401720",
    "end": "1403760"
  },
  {
    "text": "itself could be a guest world of some",
    "start": "1403760",
    "end": "1406220"
  },
  {
    "text": "platform layer down which is what you",
    "start": "1406220",
    "end": "1408380"
  },
  {
    "text": "see when you have like large Enterprises",
    "start": "1408380",
    "end": "1410299"
  },
  {
    "text": "that have separate application and",
    "start": "1410299",
    "end": "1411679"
  },
  {
    "text": "platform teams or when we have companies",
    "start": "1411679",
    "end": "1414260"
  },
  {
    "text": "building platforms layered on top of",
    "start": "1414260",
    "end": "1415700"
  },
  {
    "text": "other companies platforms and so it's",
    "start": "1415700",
    "end": "1417200"
  },
  {
    "text": "important that the component models",
    "start": "1417200",
    "end": "1418340"
  },
  {
    "text": "support this all directly and",
    "start": "1418340",
    "end": "1419480"
  },
  {
    "text": "efficiently",
    "start": "1419480",
    "end": "1421520"
  },
  {
    "start": "1421000",
    "end": "1475000"
  },
  {
    "text": "so zooming way back out I think the big",
    "start": "1421520",
    "end": "1423980"
  },
  {
    "text": "picture here is we're bootstrapping",
    "start": "1423980",
    "end": "1425360"
  },
  {
    "text": "owassim meta ecosystem where we start",
    "start": "1425360",
    "end": "1428059"
  },
  {
    "text": "with platforms that are choosing wasm",
    "start": "1428059",
    "end": "1429980"
  },
  {
    "text": "for its unique qualities",
    "start": "1429980",
    "end": "1431900"
  },
  {
    "text": "and this attracts an initial set of",
    "start": "1431900",
    "end": "1433400"
  },
  {
    "text": "developers who are choosing wasm to run",
    "start": "1433400",
    "end": "1435140"
  },
  {
    "text": "code where they couldn't otherwise",
    "start": "1435140",
    "end": "1437659"
  },
  {
    "text": "and this causes us to build a set of",
    "start": "1437659",
    "end": "1439460"
  },
  {
    "text": "reusable tools that enable a first wave",
    "start": "1439460",
    "end": "1441740"
  },
  {
    "text": "of languages and apis but because these",
    "start": "1441740",
    "end": "1444020"
  },
  {
    "text": "tools aren't coupled to just one",
    "start": "1444020",
    "end": "1445640"
  },
  {
    "text": "platform they're kind of General using",
    "start": "1445640",
    "end": "1447440"
  },
  {
    "text": "the component model we can now attract a",
    "start": "1447440",
    "end": "1449360"
  },
  {
    "text": "new wave of platforms who are now",
    "start": "1449360",
    "end": "1450799"
  },
  {
    "text": "tapping into this meta ecosystem getting",
    "start": "1450799",
    "end": "1452659"
  },
  {
    "text": "a bunch of stuff they didn't have to",
    "start": "1452659",
    "end": "1453679"
  },
  {
    "text": "build themselves which can attract a big",
    "start": "1453679",
    "end": "1455960"
  },
  {
    "text": "newer wave of developers who are now",
    "start": "1455960",
    "end": "1457520"
  },
  {
    "text": "choosing wasm for its like ease of reuse",
    "start": "1457520",
    "end": "1459559"
  },
  {
    "text": "and productivity in all these reusable",
    "start": "1459559",
    "end": "1460820"
  },
  {
    "text": "components",
    "start": "1460820",
    "end": "1462140"
  },
  {
    "text": "and then this can cause us and lead us",
    "start": "1462140",
    "end": "1464299"
  },
  {
    "text": "to build a whole new wave of tooling",
    "start": "1464299",
    "end": "1465559"
  },
  {
    "text": "that allow us to compose applications",
    "start": "1465559",
    "end": "1467120"
  },
  {
    "text": "out of components and a whole new kind",
    "start": "1467120",
    "end": "1468559"
  },
  {
    "text": "of developer programming models",
    "start": "1468559",
    "end": "1470480"
  },
  {
    "text": "and at this point time will be fully",
    "start": "1470480",
    "end": "1471919"
  },
  {
    "text": "fully booted and having a good time",
    "start": "1471919",
    "end": "1475580"
  },
  {
    "start": "1475000",
    "end": "1540000"
  },
  {
    "text": "so what's the status of this all",
    "start": "1475580",
    "end": "1477860"
  },
  {
    "text": "well there's a formal specification in",
    "start": "1477860",
    "end": "1479480"
  },
  {
    "text": "progress with an operational semantics",
    "start": "1479480",
    "end": "1481340"
  },
  {
    "text": "reference interpreter and reference test",
    "start": "1481340",
    "end": "1483020"
  },
  {
    "text": "Suite",
    "start": "1483020",
    "end": "1484159"
  },
  {
    "text": "large parts are already implemented in",
    "start": "1484159",
    "end": "1485900"
  },
  {
    "text": "wasm time with bindgen and wasm tools",
    "start": "1485900",
    "end": "1489260"
  },
  {
    "text": "there's an upcoming Milestone called",
    "start": "1489260",
    "end": "1490940"
  },
  {
    "text": "sync components with full parametric",
    "start": "1490940",
    "end": "1493100"
  },
  {
    "text": "linking value resource and handle types",
    "start": "1493100",
    "end": "1495260"
  },
  {
    "text": "aimed for q1",
    "start": "1495260",
    "end": "1497059"
  },
  {
    "text": "and then after that the big milestone is",
    "start": "1497059",
    "end": "1498980"
  },
  {
    "text": "adding future and streams so the async",
    "start": "1498980",
    "end": "1500900"
  },
  {
    "text": "support to the component model",
    "start": "1500900",
    "end": "1502460"
  },
  {
    "text": "with the hard which is going to be hard",
    "start": "1502460",
    "end": "1504559"
  },
  {
    "text": "but it's going to factor out a bunch of",
    "start": "1504559",
    "end": "1505880"
  },
  {
    "text": "otherwise duplicated necessary work",
    "start": "1505880",
    "end": "1508940"
  },
  {
    "text": "and then some final bits to close out a",
    "start": "1508940",
    "end": "1510740"
  },
  {
    "text": "component model MVP for example optional",
    "start": "1510740",
    "end": "1513080"
  },
  {
    "text": "imports and exports",
    "start": "1513080",
    "end": "1515120"
  },
  {
    "text": "so that's it um here's a bunch of links",
    "start": "1515120",
    "end": "1517820"
  },
  {
    "text": "for if you're excited and you want to",
    "start": "1517820",
    "end": "1519080"
  },
  {
    "text": "get involved you can get involved in the",
    "start": "1519080",
    "end": "1520700"
  },
  {
    "text": "standards there's regular meetings and",
    "start": "1520700",
    "end": "1522620"
  },
  {
    "text": "here's a list of links to proposals that",
    "start": "1522620",
    "end": "1524299"
  },
  {
    "text": "you can kind of track the standards",
    "start": "1524299",
    "end": "1525799"
  },
  {
    "text": "proposals on here's links to there's",
    "start": "1525799",
    "end": "1528020"
  },
  {
    "text": "regular meetings around wasm time and",
    "start": "1528020",
    "end": "1529940"
  },
  {
    "text": "bind gen tooling and there's a general",
    "start": "1529940",
    "end": "1532159"
  },
  {
    "text": "bike online Studio chat so thanks a lot",
    "start": "1532159",
    "end": "1536799"
  },
  {
    "text": "thank you",
    "start": "1539179",
    "end": "1541299"
  }
]