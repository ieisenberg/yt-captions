[
  {
    "text": "thanks everyone for joining us we're going to dig into what's going on with jaeger what's new we're also going to",
    "start": "0",
    "end": "6000"
  },
  {
    "text": "talk a little bit about open Telemetry as well thanks for joining us it's",
    "start": "6000",
    "end": "11040"
  },
  {
    "text": "awesome to see the turnout at kubecon this year and I hope everyone has a great show it's an awesome City and I",
    "start": "11040",
    "end": "17580"
  },
  {
    "text": "hope you all enjoy your time here Pavel tell us a little bit about",
    "start": "17580",
    "end": "22859"
  },
  {
    "text": "yourself yeah so yeah I'm Paul I'm sister engineer at Jaeger maintainer",
    "start": "22859",
    "end": "28439"
  },
  {
    "text": "contributor as well open Telemetry contributor and maintainer to Opie of",
    "start": "28439",
    "end": "34500"
  },
  {
    "text": "open Telemetry operator based in Switzerland and when I'm not working I",
    "start": "34500",
    "end": "40500"
  },
  {
    "text": "spend time in the mountains as you can see doing some biking and Freight skiing",
    "start": "40500",
    "end": "46500"
  },
  {
    "text": "nice there were kind of opposites but I'm Jonah Cowell and I'm VP of product",
    "start": "46500",
    "end": "54719"
  },
  {
    "text": "management at Ivan and I work on a lot of various open source projects including Jaeger open Telemetry open",
    "start": "54719",
    "end": "63719"
  },
  {
    "text": "search and several other projects and when I'm not not working which is",
    "start": "63719",
    "end": "71760"
  },
  {
    "text": "rare I spend a lot of time underwater I live in South Florida and we've got great diving so some photos that I shot",
    "start": "71760",
    "end": "79320"
  },
  {
    "text": "over the last few years but definitely enjoy it so if you want to talk diving or",
    "start": "79320",
    "end": "85500"
  },
  {
    "text": "distributed tracing I'm happy to do that so we're going to talk a little bit",
    "start": "85500",
    "end": "91979"
  },
  {
    "text": "we're going to start with some Basics it may be not that interesting to the those of you that have implemented these",
    "start": "91979",
    "end": "98720"
  },
  {
    "text": "Technologies but we're going to talk a little bit about why you should look at distributed tracing and give you a",
    "start": "98720",
    "end": "105540"
  },
  {
    "text": "little intro to tracing and then Pavel is really going to dig into open Telemetry Auto instrumentation",
    "start": "105540",
    "end": "115159"
  },
  {
    "text": "pipelines and how you set up hotel and Jaeger and the various ways that we can",
    "start": "115159",
    "end": "121680"
  },
  {
    "text": "approach that also Pavel built the Jaeger operator and he's going to talk a",
    "start": "121680",
    "end": "128940"
  },
  {
    "text": "little bit about some of the patterns in the Jaeger operator it's really useful for deploying and managing Jaeger",
    "start": "128940",
    "end": "135680"
  },
  {
    "text": "I'm going to jump in a little bit and talk about some of the new capabilities in Jaeger namely the Prometheus",
    "start": "135680",
    "end": "142980"
  },
  {
    "text": "integration and kind of where we're going with new features in the road map and hopefully we'll have time for Q a so",
    "start": "142980",
    "end": "151319"
  },
  {
    "text": "uh if not you can tweet us too so feel free so just to give you a little refresher",
    "start": "151319",
    "end": "157739"
  },
  {
    "text": "on distributed tracing we sometimes want to talk about the technology and not ask",
    "start": "157739",
    "end": "163140"
  },
  {
    "text": "why we're doing these things or who we're doing them for so the problem is that most of us are",
    "start": "163140",
    "end": "169739"
  },
  {
    "text": "implementing microservices architectures and we've decided to decompose our teams",
    "start": "169739",
    "end": "175080"
  },
  {
    "text": "too so the challenge is when something breaks where is it broken and who can",
    "start": "175080",
    "end": "180780"
  },
  {
    "text": "fix it that's really the main reason why we look at distributed tracing is to make it easier to pinpoint the problem",
    "start": "180780",
    "end": "187680"
  },
  {
    "text": "and find who can actually fix the issue so it's important to think about that",
    "start": "187680",
    "end": "193200"
  },
  {
    "text": "and it's a lot of different teams in the organization that can really take",
    "start": "193200",
    "end": "198540"
  },
  {
    "text": "advantage of what tracing can do there's a lot of additional use cases",
    "start": "198540",
    "end": "204780"
  },
  {
    "text": "for tracing besides just problem detection and resolution if you want to",
    "start": "204780",
    "end": "210599"
  },
  {
    "text": "understand dependencies let's say you're making a change what is it going to affect let's say you're moving part of",
    "start": "210599",
    "end": "217019"
  },
  {
    "text": "your infrastructure to a different network how is that going to affect my application performance it really lets",
    "start": "217019",
    "end": "224879"
  },
  {
    "text": "you drill into specific user actions from a technical level so you can get usage information but also the",
    "start": "224879",
    "end": "232200"
  },
  {
    "text": "performance and how those users are using things so it can really help bridge the gap between you and",
    "start": "232200",
    "end": "239760"
  },
  {
    "text": "potentially a line of business or a marketing team it gives you a lot of common language that you can really talk",
    "start": "239760",
    "end": "245760"
  },
  {
    "text": "about and then finally when you use tracing for metrics which we're going to talk",
    "start": "245760",
    "end": "251159"
  },
  {
    "text": "about you can monitor and maintain slas with the same data and the same",
    "start": "251159",
    "end": "256560"
  },
  {
    "text": "instrumentation so that's these are some of the reasons why tracing is so important and",
    "start": "256560",
    "end": "263040"
  },
  {
    "text": "continues to be important so the things that you're going to hear us talk about if you're relatively new",
    "start": "263040",
    "end": "269580"
  },
  {
    "text": "to tracing there's a few key words here instrumentation you can think about this and I thought",
    "start": "269580",
    "end": "277020"
  },
  {
    "text": "this was funny because the gauges the company that made them is Jaeger which",
    "start": "277020",
    "end": "282060"
  },
  {
    "text": "is not intentional I did not make the graphics apparently there's a company that makes",
    "start": "282060",
    "end": "287300"
  },
  {
    "text": "instrumentation gauges that's called that but anyways it this is really how",
    "start": "287300",
    "end": "293160"
  },
  {
    "text": "we collect signals and data from applications and infrastructure we then",
    "start": "293160",
    "end": "298560"
  },
  {
    "text": "have to store the data somewhere that's where the data collection is and we're going to talk about that quite a bit",
    "start": "298560",
    "end": "304440"
  },
  {
    "text": "because Jaeger has a lot of options around data collection and storage and",
    "start": "304440",
    "end": "309660"
  },
  {
    "text": "then finally Jaeger the Jaeger UI is the analysis in visualization but you can",
    "start": "309660",
    "end": "315360"
  },
  {
    "text": "also use a lot of other tools so we're going to talk a little bit about grafana and how you can analyze data with that",
    "start": "315360",
    "end": "322020"
  },
  {
    "text": "in terms of the visualization so just a little background",
    "start": "322020",
    "end": "328259"
  },
  {
    "text": "now digging into this the semantics of open Telemetry so just a few other",
    "start": "328259",
    "end": "334080"
  },
  {
    "text": "ground rules before we get into some of the more sophisticated Concepts like",
    "start": "334080",
    "end": "339180"
  },
  {
    "text": "Auto instrumentation so when you hear about a trace this is the end-to-end request so think about it",
    "start": "339180",
    "end": "345840"
  },
  {
    "text": "when you go to a login page and you click login there's a transaction that's",
    "start": "345840",
    "end": "351120"
  },
  {
    "text": "running from end to end that's a trace that would be called login now that",
    "start": "351120",
    "end": "356880"
  },
  {
    "text": "Trace itself might be hitting several Services it's going to hit the user service it may hit a third-party oauth",
    "start": "356880",
    "end": "363780"
  },
  {
    "text": "provider these are all going to be spans that are part of that single trace",
    "start": "363780",
    "end": "370860"
  },
  {
    "text": "and the idea is that the span is a single component and inside that single component and the",
    "start": "370860",
    "end": "379139"
  },
  {
    "text": "span itself we can have tags and other metadata associated with it so this can",
    "start": "379139",
    "end": "385020"
  },
  {
    "text": "be a log message it could be geographic information about a user it could be the",
    "start": "385020",
    "end": "390900"
  },
  {
    "text": "data center that that particular server service is running in for example so you",
    "start": "390900",
    "end": "396660"
  },
  {
    "text": "can do all kinds of things to provide context around the trace itself",
    "start": "396660",
    "end": "402180"
  },
  {
    "text": "uh and so here's some visualizations as that transaction fans out to multiple",
    "start": "402180",
    "end": "408600"
  },
  {
    "text": "Services you essentially have a hierarchy that goes across these different components as they come",
    "start": "408600",
    "end": "415020"
  },
  {
    "text": "together to essentially deliver uh the request that the user made so there's a",
    "start": "415020",
    "end": "421199"
  },
  {
    "text": "few ways to visualize this and you'll see the timeline view over here is is",
    "start": "421199",
    "end": "426660"
  },
  {
    "text": "much more similar to what you would see in Jaeger which is showing you as time progresses how much time is being spent",
    "start": "426660",
    "end": "434100"
  },
  {
    "text": "so we're going to show you that when we get into the Jaeger UI a little bit",
    "start": "434100",
    "end": "441199"
  },
  {
    "text": "um so this is the first view of it but that's that timeline view as the time progresses here is the path that the",
    "start": "441840",
    "end": "449699"
  },
  {
    "text": "transaction is going through in the different components that it's interacting with",
    "start": "449699",
    "end": "456020"
  },
  {
    "text": "Pavel tell us a bit about Auto instrumentation all right I will cover",
    "start": "456120",
    "end": "461400"
  },
  {
    "text": "three topics I will start talking about the open Telemetry and open Telemetry Auto",
    "start": "461400",
    "end": "467699"
  },
  {
    "text": "instrumentation and how you can migrate to it from Jaeger sdks then I'll talk",
    "start": "467699",
    "end": "473220"
  },
  {
    "text": "about the kind of vehicle architectures and how we can fit the open Telemetry",
    "start": "473220",
    "end": "479160"
  },
  {
    "text": "collector into those architectures or kind of deployment models and then I'll talk about the Jaeger operator",
    "start": "479160",
    "end": "486840"
  },
  {
    "text": "so for the instrumentation you already know that the Jaeger ecosystem it used to like Jaeger project used to be",
    "start": "486840",
    "end": "493500"
  },
  {
    "text": "end-to-end tracing kind of platform that was handling data collections so how we",
    "start": "493500",
    "end": "498720"
  },
  {
    "text": "actually extract data from the applications but as well you know data collection storage and visualization uh in 2021 we",
    "start": "498720",
    "end": "507300"
  },
  {
    "text": "deprecated the Jaeger clients or the sdks and we kind of recommend users to",
    "start": "507300",
    "end": "513959"
  },
  {
    "text": "migrate to open telemetry so the eager SDK is the uh they",
    "start": "513959",
    "end": "519300"
  },
  {
    "text": "implemented open tracing which is another cncf project focus on kind of",
    "start": "519300",
    "end": "525779"
  },
  {
    "text": "providing you vendor Mutual API to that you could use to instrument your applications to report Trace data",
    "start": "525779",
    "end": "532880"
  },
  {
    "text": "this project was deprecated and merged with open sensors into open Telemetry and so the open Telemetry is the kind of",
    "start": "532880",
    "end": "540600"
  },
  {
    "text": "the right migration path for for jaeger users the good news is that the open",
    "start": "540600",
    "end": "546300"
  },
  {
    "text": "Telemetry project gives you open tracing shim which is a library that you can use",
    "start": "546300",
    "end": "552180"
  },
  {
    "text": "you can remove your Jaeger sdks and use the open Telemetry open tracing stream",
    "start": "552180",
    "end": "557220"
  },
  {
    "text": "instead as you can see the the language support in open Telemetry is is quite",
    "start": "557220",
    "end": "563580"
  },
  {
    "text": "good it supports most of the mainstream languages uh and so when you will be migrating the",
    "start": "563580",
    "end": "571019"
  },
  {
    "text": "first uh thing you will have to you know use the shim uh by using the shim it",
    "start": "571019",
    "end": "576360"
  },
  {
    "text": "will allow you to keep your instrumentation code in place so you know if you use the open tracing API in",
    "start": "576360",
    "end": "583019"
  },
  {
    "text": "your business logic or your instrument in its um HTTP or RPC Frameworks you keep you can",
    "start": "583019",
    "end": "589200"
  },
  {
    "text": "keep using those and then just change the initial initialization code with the",
    "start": "589200",
    "end": "594720"
  },
  {
    "text": "initialization code you will have to change the how the SDK is configured and good news is that the op the Jaeger SDK",
    "start": "594720",
    "end": "601380"
  },
  {
    "text": "open Telemetry sdks are very similar they use kind of the same Concepts also",
    "start": "601380",
    "end": "607620"
  },
  {
    "text": "on the left side we see the Jaeger environment variables and on the right side the open Telemetry ones",
    "start": "607620",
    "end": "612839"
  },
  {
    "text": "there is always like good alternative in open Telemetry so for instance in Jaeger",
    "start": "612839",
    "end": "619140"
  },
  {
    "text": "we had to set the the service name which is Jaeger underscore series name in Open",
    "start": "619140",
    "end": "624600"
  },
  {
    "text": "Telemetry we have you know very similar environment variable Hotel underscore service name uh and kind of the same",
    "start": "624600",
    "end": "630720"
  },
  {
    "text": "goes for other configuration options this is not the entire list if you would",
    "start": "630720",
    "end": "636120"
  },
  {
    "text": "like to get the entire list there is a URL on the slide the next thing you will have to solve is",
    "start": "636120",
    "end": "643680"
  },
  {
    "text": "the context propagation so as Jonah mentioned tracing uh kind of works",
    "start": "643680",
    "end": "648839"
  },
  {
    "text": "across the services it's able to capture the whole entire transaction and then correlate these data into a single kind",
    "start": "648839",
    "end": "655800"
  },
  {
    "text": "of unit called trace and to identify this Trace those",
    "start": "655800",
    "end": "660899"
  },
  {
    "text": "Services they have to propagate a unique ID and Jaeger uses so-called Jaeger",
    "start": "660899",
    "end": "666779"
  },
  {
    "text": "header to encode these IDs and open Telemetry uses w3c Trace context which",
    "start": "666779",
    "end": "673680"
  },
  {
    "text": "is kind of a different header with different format so if you want to kind of start slowly using open Telemetry you",
    "start": "673680",
    "end": "680820"
  },
  {
    "text": "have to configure it to use probably both Trace context and Jaeger at the same time",
    "start": "680820",
    "end": "686720"
  },
  {
    "text": "libraries they as well kind of support the trace context so you can you know",
    "start": "686720",
    "end": "691760"
  },
  {
    "text": "depending on your needs configure uh how you like it and like progressively move",
    "start": "691760",
    "end": "697200"
  },
  {
    "text": "to open Telemetry and Trace context",
    "start": "697200",
    "end": "701000"
  },
  {
    "text": "the the Jaeger project",
    "start": "702360",
    "end": "707420"
  },
  {
    "text": "it's or the Jager project hosted only the sdks right which is the the",
    "start": "707420",
    "end": "713339"
  },
  {
    "text": "implementation of open tracing API that you could use to build your instrumentation libraries uh or kind of",
    "start": "713339",
    "end": "720660"
  },
  {
    "text": "instrument your applications directly however open Telemetry is much wider project and it gives you kind of end",
    "start": "720660",
    "end": "727560"
  },
  {
    "text": "user packages that you can drop into your hosts or Docker images and those",
    "start": "727560",
    "end": "733980"
  },
  {
    "text": "packages will automatically instrument your your applications um they are usually called Auto",
    "start": "733980",
    "end": "740459"
  },
  {
    "text": "instrumentations or agents they are right now available for Java",
    "start": "740459",
    "end": "746180"
  },
  {
    "text": "python.net node.js um it's super easy to to get started with them and I would highly recommend",
    "start": "746180",
    "end": "752820"
  },
  {
    "text": "you to take a look at the auto instrumentation libraries if you are starting with with observability",
    "start": "752820",
    "end": "759180"
  },
  {
    "text": "they they also will do the context propagation so when you use the auto instrumentation it helps automate that",
    "start": "759180",
    "end": "766800"
  },
  {
    "text": "portion where you don't have to write any code the other piece is the Go Auto",
    "start": "766800",
    "end": "772680"
  },
  {
    "text": "instrumentation is currently not in the hotel GitHub repository but you can find",
    "start": "772680",
    "end": "778740"
  },
  {
    "text": "it and it uses evpf just because it's compiled so I think it has been already moved here",
    "start": "778740",
    "end": "785899"
  },
  {
    "text": "yeah but it's uh it's something new uh in the in the project it's maybe not you",
    "start": "785899",
    "end": "791220"
  },
  {
    "text": "know production stable production ready uh but it is something that you know it's happening and maybe over time we",
    "start": "791220",
    "end": "798180"
  },
  {
    "text": "will see more kind of ebpf based agents for another kind of natively compiled",
    "start": "798180",
    "end": "803880"
  },
  {
    "text": "languages in hotel uh so what you can see here on this slide",
    "start": "803880",
    "end": "810180"
  },
  {
    "text": "are essentially like free screenshots on the left is the whole kind of Trace with",
    "start": "810180",
    "end": "815220"
  },
  {
    "text": "the timeline you in the middle it's our attributes or from a span for HTTP request and on the",
    "start": "815220",
    "end": "823079"
  },
  {
    "text": "right are the attributes for a database call and this was taken from the spring",
    "start": "823079",
    "end": "830100"
  },
  {
    "text": "boot application uh that Joe and other Jaeger maintainer built and the app was instrumented with the open Telemetry",
    "start": "830100",
    "end": "837540"
  },
  {
    "text": "Auto instrumentation for Java and as you can see uh the the Java agent it",
    "start": "837540",
    "end": "844019"
  },
  {
    "text": "captures a lot of Rich information and so for instance for the database call we",
    "start": "844019",
    "end": "849180"
  },
  {
    "text": "get even the the database statement the the SQL table or the you know what was the operation",
    "start": "849180",
    "end": "856560"
  },
  {
    "text": "and so on now I'd like to talk about the the",
    "start": "856560",
    "end": "863700"
  },
  {
    "text": "pipelines and how we can start using how",
    "start": "863700",
    "end": "868740"
  },
  {
    "text": "we can fit open Telemetry collector into existing eaeger deployments",
    "start": "868740",
    "end": "874440"
  },
  {
    "text": "so you may first ask like why we should do that right and the the open Telemetry",
    "start": "874440",
    "end": "881459"
  },
  {
    "text": "collector it integrates with jaeger there is Jaeger receiver and exporter for the it supports the agent and",
    "start": "881459",
    "end": "888300"
  },
  {
    "text": "collector apis the hotel collector as well gives you a",
    "start": "888300",
    "end": "894120"
  },
  {
    "text": "possibility to use Jaeger remote sampler and it as well integrates its Kafka there is Kafka receiver and exporter",
    "start": "894120",
    "end": "900660"
  },
  {
    "text": "that can be configured to to use the the Jaeger format as a payload",
    "start": "900660",
    "end": "907880"
  },
  {
    "text": "you may want to use the collector as well because the open Telemetry collector because there is a lot of kind",
    "start": "908760",
    "end": "914880"
  },
  {
    "text": "of additional functionality that is not available in in Jaeger the this functionality is built usually",
    "start": "914880",
    "end": "921839"
  },
  {
    "text": "as a processor and this processor they allow you to usually mutate the data which can be super useful if you need to",
    "start": "921839",
    "end": "928199"
  },
  {
    "text": "extract new attributes that you can use later for querying or you need to do pii or for instance as Jonah will talk about",
    "start": "928199",
    "end": "935579"
  },
  {
    "text": "you can use processors to actually extract metrics from traces which is",
    "start": "935579",
    "end": "941100"
  },
  {
    "text": "super interesting and as well for instance there is a processor that allows you to",
    "start": "941100",
    "end": "947040"
  },
  {
    "text": "uh that recognizes like from where data is coming in your kubernetes cluster and automatically attach the kubernetes",
    "start": "947040",
    "end": "953339"
  },
  {
    "text": "resource attributes like the Pod name deployment name and so on and then of course tail based sampling which is",
    "start": "953339",
    "end": "960120"
  },
  {
    "text": "really useful which is making sampling decisions after a transaction is completed and that opens up a lot of use",
    "start": "960120",
    "end": "967800"
  },
  {
    "text": "cases like capturing all of my error traces and not capturing all of my",
    "start": "967800",
    "end": "974120"
  },
  {
    "text": "transactions that are okay or performing well which is super useful but does use",
    "start": "974120",
    "end": "979560"
  },
  {
    "text": "a lot of memory so be careful with it yeah exactly and the the auto collectors",
    "start": "979560",
    "end": "985440"
  },
  {
    "text": "as well very pluggable and if there is missing functionality it's easy to build your own collector to kind of solve your",
    "start": "985440",
    "end": "993120"
  },
  {
    "text": "specific use cases so the first architecture is kind of the",
    "start": "993120",
    "end": "999240"
  },
  {
    "text": "the simplest one meant for production so there is a database and Jaeger collector",
    "start": "999240",
    "end": "1005720"
  },
  {
    "text": "and query talking to database and then Jager agent receiving data from the applications in this case instrumental",
    "start": "1005720",
    "end": "1012380"
  },
  {
    "text": "client and so you can use the auto collector to kind of substitute the the Jaeger agent",
    "start": "1012380",
    "end": "1018320"
  },
  {
    "text": "because it supports the same kind of protocols this deployment it's uh it's scalable",
    "start": "1018320",
    "end": "1026418"
  },
  {
    "text": "right you can scale up the Yeager collector however at some point you will probably hit some scalability issues and",
    "start": "1026419",
    "end": "1033798"
  },
  {
    "text": "to kind of resolve the the scaling problems you can put Kafka",
    "start": "1033799",
    "end": "1039319"
  },
  {
    "text": "in front of your back end and in this case you will use the Jaeger ingester to read from Kafka and store",
    "start": "1039319",
    "end": "1047000"
  },
  {
    "text": "the data into into your backend in this case the auto collector can as",
    "start": "1047000",
    "end": "1052340"
  },
  {
    "text": "well substitute the Jaeger agent but it can as well substitute the Jaeger collector because there is Kafka",
    "start": "1052340",
    "end": "1057380"
  },
  {
    "text": "receiver and exporter",
    "start": "1057380",
    "end": "1060340"
  },
  {
    "text": "so let's talk about the operator and the operator is",
    "start": "1063860",
    "end": "1069520"
  },
  {
    "text": "kubernetes concept it's a component that you can deploy to your kubernetes cluster and it will allow you to to",
    "start": "1070160",
    "end": "1077480"
  },
  {
    "text": "provision Jaeger deployment and as well operate it over time you may ask like why you should be using",
    "start": "1077480",
    "end": "1084440"
  },
  {
    "text": "the operator and not the for instance the helm chart or like vanilla kubernetes manifest files and the reason",
    "start": "1084440",
    "end": "1090679"
  },
  {
    "text": "is that operators should be kind of the most sophisticated way how to provision and operate your business application",
    "start": "1090679",
    "end": "1099320"
  },
  {
    "text": "over time the the operator it's it kind of it can",
    "start": "1099320",
    "end": "1104360"
  },
  {
    "text": "provision a database it can do you know schema migrations it can as well fix any",
    "start": "1104360",
    "end": "1110660"
  },
  {
    "text": "kind of breaking changes in Jaeger if there is if there are any during the upgrade",
    "start": "1110660",
    "end": "1116419"
  },
  {
    "text": "it as well integrates with other you know kubernetes apis as a crds if if it",
    "start": "1116419",
    "end": "1122660"
  },
  {
    "text": "recognizes those crds in the cluster it can for instance provision storage backend for your Kafka clustering",
    "start": "1122660",
    "end": "1130039"
  },
  {
    "text": "the operator as well what we have in built in Jaeger it can you can give you the Jaeger CR and it can based on the CR",
    "start": "1130039",
    "end": "1137480"
  },
  {
    "text": "generate you the vanilla manifest files for for kubernetes if for some reason you cannot use the operator",
    "start": "1137480",
    "end": "1145840"
  },
  {
    "text": "so this is the uh the Jaeger crd there's a lot of missing kind of configuration",
    "start": "1146360",
    "end": "1152679"
  },
  {
    "text": "but kind of the most important two fields are are the the strategy the",
    "start": "1152679",
    "end": "1158900"
  },
  {
    "text": "all-in-one deploys the Jager all-in-one with in-memory storage in a single pot with aquarium collector running as a",
    "start": "1158900",
    "end": "1165799"
  },
  {
    "text": "single process then there is a production one which is the architecture that I showed earlier with you know",
    "start": "1165799",
    "end": "1171980"
  },
  {
    "text": "query and collector you know separate pods uh and then the streaming one that",
    "start": "1171980",
    "end": "1178039"
  },
  {
    "text": "as well before is the Jaeger investor and the storage type allows you to",
    "start": "1178039",
    "end": "1183140"
  },
  {
    "text": "choose from the in-memory elasticsearch Cassandra and other supported Jaeger storages",
    "start": "1183140",
    "end": "1189820"
  },
  {
    "text": "the Jaeger operator it as well allows you to inject the Jaeger agent into your",
    "start": "1190720",
    "end": "1198320"
  },
  {
    "text": "Bots as a sidecar and I would highly recommend you to start looking into the",
    "start": "1198320",
    "end": "1205220"
  },
  {
    "text": "open Telemetry operator that allows has the same capability but it injects the open Telemetry collector",
    "start": "1205220",
    "end": "1212320"
  },
  {
    "text": "and the reason is as I mentioned before the Hotel collector is much more it gives you more functionality than the",
    "start": "1212320",
    "end": "1219320"
  },
  {
    "text": "agre agent and as well I would like to invite you",
    "start": "1219320",
    "end": "1226160"
  },
  {
    "text": "on Friday there is a open Telemetry kubernetes tutorial we will talk about the open Telemetry operator how to use",
    "start": "1226160",
    "end": "1233600"
  },
  {
    "text": "it how to provision The Collector but as well how to use it to instrument your",
    "start": "1233600",
    "end": "1238700"
  },
  {
    "text": "applications on kubernetes using the open Telemetry Auto instrumentation libraries",
    "start": "1238700",
    "end": "1245080"
  },
  {
    "text": "awesome thanks Pavel so I wanted to talk about a cool feature that was built not",
    "start": "1246380",
    "end": "1252740"
  },
  {
    "text": "too long ago that's part of Jaeger which is moving Jaeger from just being a",
    "start": "1252740",
    "end": "1258080"
  },
  {
    "text": "diagnostic and debugging tool into being more of a proactive monitoring tool",
    "start": "1258080",
    "end": "1263179"
  },
  {
    "text": "and so the idea here is how do we start to collect information about the",
    "start": "1263179",
    "end": "1270020"
  },
  {
    "text": "traces that can be used for operational purposes namely metrics and be able to",
    "start": "1270020",
    "end": "1276020"
  },
  {
    "text": "understand when things are starting to go the wrong direction in your application so operational monitoring",
    "start": "1276020",
    "end": "1282380"
  },
  {
    "text": "alerting and being able to plan for changes are are some use cases around",
    "start": "1282380",
    "end": "1288080"
  },
  {
    "text": "that so to give you an idea uh when Pavel was",
    "start": "1288080",
    "end": "1293539"
  },
  {
    "text": "showing you the repository of different processors inside open Telemetry there's",
    "start": "1293539",
    "end": "1298940"
  },
  {
    "text": "a span metrics processor and so the way that this works is that when traces come",
    "start": "1298940",
    "end": "1305179"
  },
  {
    "text": "into your collector which is the little picture on the right we then are able to",
    "start": "1305179",
    "end": "1310340"
  },
  {
    "text": "derive metrics from the spans and send them to any Prometheus backend and the",
    "start": "1310340",
    "end": "1317120"
  },
  {
    "text": "the traces continue to move to your Jaeger back end so this happens inside",
    "start": "1317120",
    "end": "1322159"
  },
  {
    "text": "the open Telemetry Pipeline and it allows you to create those metrics off",
    "start": "1322159",
    "end": "1328340"
  },
  {
    "text": "of these spans hence the name uh and the reason why this is really",
    "start": "1328340",
    "end": "1334120"
  },
  {
    "text": "interesting is because then you can start to build histograms so this is a",
    "start": "1334120",
    "end": "1339140"
  },
  {
    "text": "configuration on the left hand side and we're basically uh looking at how many",
    "start": "1339140",
    "end": "1344600"
  },
  {
    "text": "transactions are falling into the buckets and also collecting data about certain methods in the application and",
    "start": "1344600",
    "end": "1352460"
  },
  {
    "text": "being able to look at basically the um you know the uh red the essentially the",
    "start": "1352460",
    "end": "1359360"
  },
  {
    "text": "latency errors and usage of the application itself so this can generate",
    "start": "1359360",
    "end": "1366020"
  },
  {
    "text": "a huge volume of metrics so you're going to have to tune this down the way that you want it to show up in your",
    "start": "1366020",
    "end": "1371480"
  },
  {
    "text": "application in your Prometheus back end otherwise you could run into cardinality",
    "start": "1371480",
    "end": "1376700"
  },
  {
    "text": "problems I've seen this generate huge volumes of unique metrics so you do have",
    "start": "1376700",
    "end": "1382039"
  },
  {
    "text": "to tune it and we're happy to help on the channel definitely we get a lot of",
    "start": "1382039",
    "end": "1387380"
  },
  {
    "text": "people coming and asking about tuning this one of the other maintainers Albert",
    "start": "1387380",
    "end": "1392600"
  },
  {
    "text": "wrote this stuff but it's also been taken by the open Telemetry community",
    "start": "1392600",
    "end": "1398360"
  },
  {
    "text": "and a lot of new things have been added to it uh I just I just wanted to mention",
    "start": "1398360",
    "end": "1403880"
  },
  {
    "text": "that the reason why you could use this or what you should use this is that you will",
    "start": "1403880",
    "end": "1409820"
  },
  {
    "text": "need only a single instrumentation that's for tracing and you don't have to kind of care about the the metrics",
    "start": "1409820",
    "end": "1415940"
  },
  {
    "text": "instrumentation in your uh in your applications and as well the this pen processor it will generate your",
    "start": "1415940",
    "end": "1422600"
  },
  {
    "text": "dashboards that are kind of saying for all your services that are instrumented I will see that later yeah",
    "start": "1422600",
    "end": "1429940"
  },
  {
    "text": "so and it avoids otherwise a lot of people will try to instrument their load",
    "start": "1429940",
    "end": "1437000"
  },
  {
    "text": "balancers or their API gateways or you know various other things to try to get",
    "start": "1437000",
    "end": "1443240"
  },
  {
    "text": "the same data but it's easier just to get it directly at the application Level because then you're just going to have",
    "start": "1443240",
    "end": "1449539"
  },
  {
    "text": "less blind spots and the pipelines much cleaner than trying to collect from so",
    "start": "1449539",
    "end": "1454760"
  },
  {
    "text": "many different places um",
    "start": "1454760",
    "end": "1459460"
  },
  {
    "text": "it's sorry it's not deprecated for sure",
    "start": "1460520",
    "end": "1466039"
  },
  {
    "text": "it's in use heavily all over so",
    "start": "1466039",
    "end": "1470320"
  },
  {
    "text": "I guess there's a new version way of now connect the pipeline the book",
    "start": "1473780",
    "end": "1481100"
  },
  {
    "text": "that we use without fabrication we'll provide an update on it apparently",
    "start": "1481100",
    "end": "1487640"
  },
  {
    "text": "there's a new collector that I mean a new processor let's replace this one so",
    "start": "1487640",
    "end": "1494179"
  },
  {
    "text": "we'll we'll update it wasn't aware of the change the idea is that this data then flows",
    "start": "1494179",
    "end": "1501020"
  },
  {
    "text": "into grafana while it flows into Prometheus and you can visualize it in grafana so this is",
    "start": "1501020",
    "end": "1507679"
  },
  {
    "text": "an example of what you can get in a simple dashboard from this data directly",
    "start": "1507679",
    "end": "1513320"
  },
  {
    "text": "so really giving you a good idea of what's happening in the application itself",
    "start": "1513320",
    "end": "1518440"
  },
  {
    "text": "this will work with any Prometheus compatible back end so it could be a",
    "start": "1518440",
    "end": "1524179"
  },
  {
    "text": "commercial service or it could be an open source back-end I listed a few popular ones here besides Prometheus",
    "start": "1524179",
    "end": "1531799"
  },
  {
    "text": "that you can use for this type of thing and anyone in the community can add additional support you can technically",
    "start": "1531799",
    "end": "1538880"
  },
  {
    "text": "send these metrics to any metric back end that is supported by open telemetry",
    "start": "1538880",
    "end": "1547100"
  },
  {
    "text": "um the difference is that inside the Jaeger UI there's now this new monitoring tab",
    "start": "1547100",
    "end": "1553720"
  },
  {
    "text": "which only works with Prometheus because it does prom ql queries but this gives",
    "start": "1553720",
    "end": "1560240"
  },
  {
    "text": "you a nice view within Jaeger it's just a new little tab that shows up on the top and queries the Prometheus backend",
    "start": "1560240",
    "end": "1568100"
  },
  {
    "text": "to pull this data in if you want to do alerting you obviously have to use alert manager and the standard kind of",
    "start": "1568100",
    "end": "1574400"
  },
  {
    "text": "Prometheus alerting capabilities but this at least lets you visualize",
    "start": "1574400",
    "end": "1579679"
  },
  {
    "text": "performance data in Jaeger so a little update in the last year kind",
    "start": "1579679",
    "end": "1587960"
  },
  {
    "text": "of the new key features that that have come out and then a road map on some of the things that the community is working",
    "start": "1587960",
    "end": "1594440"
  },
  {
    "text": "on today so uh we now support uh open Telemetry",
    "start": "1594440",
    "end": "1601460"
  },
  {
    "text": "line protocol the native protocol inside the Jaeger collector which means you can",
    "start": "1601460",
    "end": "1606679"
  },
  {
    "text": "send it directly without using the Jaeger protocol so that's a new capability uh Pavel mentioned the",
    "start": "1606679",
    "end": "1613940"
  },
  {
    "text": "Adaptive sampling we've basically now made that fully supported with open",
    "start": "1613940",
    "end": "1619580"
  },
  {
    "text": "Telemetry as well um and then there's been some contributions on visualizations we have",
    "start": "1619580",
    "end": "1627200"
  },
  {
    "text": "flame graph views now in the UI which is a new addition",
    "start": "1627200",
    "end": "1632600"
  },
  {
    "text": "um and as as Pavel mentioned uh the native sdks are not supported anymore and you should use open telemetry",
    "start": "1632600",
    "end": "1640580"
  },
  {
    "text": "uh we also have updated hot rod and Trace gen to use otel instead of the",
    "start": "1640580",
    "end": "1647240"
  },
  {
    "text": "Jaeger uh sdks so just kind of a few updates",
    "start": "1647240",
    "end": "1652460"
  },
  {
    "text": "that have happened so one of the things that we're working on right now is supporting click house",
    "start": "1652460",
    "end": "1658220"
  },
  {
    "text": "as a native data store for jaeger so this is uh contributed there's a lot of interest going on in Click house for",
    "start": "1658220",
    "end": "1666320"
  },
  {
    "text": "logging for metrics and for tracing so this is something that's going to become",
    "start": "1666320",
    "end": "1671720"
  },
  {
    "text": "officially supported as a back end for jaeger um and then you know there is some other",
    "start": "1671720",
    "end": "1678140"
  },
  {
    "text": "work on the UI around dependency graphs and trying to normalize those views",
    "start": "1678140",
    "end": "1684320"
  },
  {
    "text": "um and over time we would like to to replace the Jaeger collector with open",
    "start": "1684320",
    "end": "1689779"
  },
  {
    "text": "Telemetry it's not something that's actively worked on we did a few kind of early stage",
    "start": "1689779",
    "end": "1696220"
  },
  {
    "text": "pocs with it but the idea is really how do we make open Telemetry more native to",
    "start": "1696220",
    "end": "1702500"
  },
  {
    "text": "Jaeger and uh and so that's some of the the things that are going on uh in the",
    "start": "1702500",
    "end": "1707840"
  },
  {
    "text": "community today so with that we've got about five minutes left for Q a so if you want to",
    "start": "1707840",
    "end": "1715100"
  },
  {
    "text": "raise your hand and then one of us will repeat it and and answer the questions so",
    "start": "1715100",
    "end": "1721520"
  },
  {
    "text": "um feel free to raise your hand and we're happy to to take questions",
    "start": "1721520",
    "end": "1727299"
  },
  {
    "text": "uh first of all thank you very interesting presentation have a bit the controversial maybe controversial",
    "start": "1728480",
    "end": "1734779"
  },
  {
    "text": "question it's about the competitors I noticed that grafana released their",
    "start": "1734779",
    "end": "1741620"
  },
  {
    "text": "own tracing solution Tempo and after collecting some feedback from",
    "start": "1741620",
    "end": "1746779"
  },
  {
    "text": "different people what they don't like in open source tools and free tools is that",
    "start": "1746779",
    "end": "1752299"
  },
  {
    "text": "like there are a lot of signals logs metrics traces and you have like you know a nice tool but they're all like uh",
    "start": "1752299",
    "end": "1759500"
  },
  {
    "text": "separate and when you have an incident you need to open like 15 tabs and like",
    "start": "1759500",
    "end": "1764960"
  },
  {
    "text": "what grafana is now trying to do it's like you know to to make it as one product and that's what you know other paid",
    "start": "1764960",
    "end": "1771620"
  },
  {
    "text": "tools have um like how do you see this you know like competition between uh Jaeger and",
    "start": "1771620",
    "end": "1777559"
  },
  {
    "text": "the tempo you know like what's what's the plan like yeah so the main author of",
    "start": "1777559",
    "end": "1784399"
  },
  {
    "text": "tempo is a maintainer of Jaeger so we're pretty connected and Pavel does work on",
    "start": "1784399",
    "end": "1789679"
  },
  {
    "text": "tempo as well um I mean they're different they're different products for different use",
    "start": "1789679",
    "end": "1795740"
  },
  {
    "text": "cases I mean my opinion is that they're different they do different things so searching free form and Tempo is not",
    "start": "1795740",
    "end": "1803059"
  },
  {
    "text": "typically a good idea if you have a lot of Trace data however Jaeger supports that and so do the back ends for jaeger",
    "start": "1803059",
    "end": "1809659"
  },
  {
    "text": "so it's more of a full text search type of approach but as you said you know",
    "start": "1809659",
    "end": "1815480"
  },
  {
    "text": "grafana does bring together the signals and in Jaeger we don't quite do that there are other open source tools that",
    "start": "1815480",
    "end": "1822440"
  },
  {
    "text": "are doing things similar like like open search in things like cigna's that also",
    "start": "1822440",
    "end": "1827600"
  },
  {
    "text": "are doing some interesting things but um you know I think there's room for lots of options but as a cncf project",
    "start": "1827600",
    "end": "1835520"
  },
  {
    "text": "Jaeger will always be a community project we hope the other tools will stay that way but they're not part of a",
    "start": "1835520",
    "end": "1842480"
  },
  {
    "text": "software foundation so you have to think yeah there is there is that grafana will become a more closed Source right yeah",
    "start": "1842480",
    "end": "1849140"
  },
  {
    "text": "what's your take on it um I think you summarize it very well all right okay thank you",
    "start": "1849140",
    "end": "1857559"
  },
  {
    "text": "next question anyone yeah sure you can just yell it",
    "start": "1857840",
    "end": "1863720"
  },
  {
    "text": "and I'll repeat it or we can just here I'll do it",
    "start": "1863720",
    "end": "1871120"
  },
  {
    "text": "hello hey first of all again thanks for the talk uh so just maybe a little",
    "start": "1875840",
    "end": "1881840"
  },
  {
    "text": "request because at open Telemetry you guys oh we have also an open Telemetry demo repository and it's using both",
    "start": "1881840",
    "end": "1888500"
  },
  {
    "text": "eager and Primitives but the monitoring is not integrated so I think it will be good for demonstration purposes and for",
    "start": "1888500",
    "end": "1894679"
  },
  {
    "text": "visibility if this will work as well but yeah thanks",
    "start": "1894679",
    "end": "1900260"
  },
  {
    "text": "cool good suggestion thank you question",
    "start": "1900260",
    "end": "1907840"
  },
  {
    "text": "I think we have time for maybe one more if not um",
    "start": "1909500",
    "end": "1914799"
  },
  {
    "text": "one more last one",
    "start": "1914799",
    "end": "1918700"
  },
  {
    "text": "yeah so we're using Jaeger but we've come into",
    "start": "1920539",
    "end": "1925640"
  },
  {
    "text": "the well maybe age or problem how do you convince everyone to import a library to instrument their service or application",
    "start": "1925640",
    "end": "1932380"
  },
  {
    "text": "and ebpf helps a lot but we've been trying to figure out how to get as much",
    "start": "1932380",
    "end": "1938720"
  },
  {
    "text": "tracing information out of our architecture without hoping that everyone will expose these traces",
    "start": "1938720",
    "end": "1945799"
  },
  {
    "text": "themselves so we are using STL so we're thinking how does outside in tracing fit",
    "start": "1945799",
    "end": "1954080"
  },
  {
    "text": "into all of this do you want to take this or should I quote Yuri on the on his blog but it's",
    "start": "1954080",
    "end": "1961880"
  },
  {
    "text": "up to you I understood exactly what's just instrumenting istio is an easier",
    "start": "1961880",
    "end": "1967279"
  },
  {
    "text": "way to collect Tracy like the the series mesh doesn't provide",
    "start": "1967279",
    "end": "1973520"
  },
  {
    "text": "you with full tracing instrumentation right you still have to propagate the context inside your application from you",
    "start": "1973520",
    "end": "1980840"
  },
  {
    "text": "know the the Upstream to Downstream service so there's a great blog post that Yuri the creator of Jaeger wrote",
    "start": "1980840",
    "end": "1987620"
  },
  {
    "text": "that's on his medium that talks about this myth because we get it on the channel probably every week someone",
    "start": "1987620",
    "end": "1993860"
  },
  {
    "text": "comes and says I'm instrumenting a service mesh or a proxy and we explain",
    "start": "1993860",
    "end": "1999500"
  },
  {
    "text": "that you're not going to get the value of tracing because it's always going to just have the view of the tree of the",
    "start": "1999500",
    "end": "2005679"
  },
  {
    "text": "proxy and not the view of the application context yeah that's figured out as well and the problem is that you",
    "start": "2005679",
    "end": "2011980"
  },
  {
    "text": "your request ends at the service and the magic group resumes after the service so you're missing something but yeah",
    "start": "2011980",
    "end": "2017559"
  },
  {
    "text": "there's no easy way to get around that even eBay as well only halfway there yeah you have to instrument the",
    "start": "2017559",
    "end": "2023980"
  },
  {
    "text": "applications and then depends on your requirements how you want to do it but like on kubernetes there is this open",
    "start": "2023980",
    "end": "2029140"
  },
  {
    "text": "Telemetry operator that allows you to it has a modernization web hook that",
    "start": "2029140",
    "end": "2035740"
  },
  {
    "text": "will inject the auto instrumentation libraries to your workload at the startup so you don't have need you don't",
    "start": "2035740",
    "end": "2043059"
  },
  {
    "text": "have to touch your applications you don't have to even touch your kind of problems",
    "start": "2043059",
    "end": "2048360"
  },
  {
    "text": "amazing thank you all right I think I think that's it thank you everyone appreciate it",
    "start": "2049260",
    "end": "2057059"
  }
]