[
  {
    "start": "0",
    "end": "140000"
  },
  {
    "text": "okay I'd like to thank everyone who's joining us today welcome to today CN CF",
    "start": "16640",
    "end": "22670"
  },
  {
    "text": "webinar kuma service mesh and the future of application connectivity I'm Ariel",
    "start": "22670",
    "end": "29030"
  },
  {
    "text": "chatib I'm a business develop man the business development manager for cloud native technologies at NetApp and also a",
    "start": "29030",
    "end": "35630"
  },
  {
    "text": "CNCs ambassador I'll be moderating today's webinar and would like to",
    "start": "35630",
    "end": "41360"
  },
  {
    "text": "introduce today's presenters Marko Palladino CTO and co-founder Kong and",
    "start": "41360",
    "end": "47030"
  },
  {
    "text": "Kevin Cheng a developer advocate at comm a couple of housekeeping items before we",
    "start": "47030",
    "end": "53870"
  },
  {
    "text": "get started during the webinar you're not gonna be able to talk as an attendee there's a Q&A box at the bottom of the",
    "start": "53870",
    "end": "61040"
  },
  {
    "text": "screen feel free to drop your questions in there and we'll get to as many of those as we can at the end",
    "start": "61040",
    "end": "68210"
  },
  {
    "text": "this is an official CN CF webinar and as such subject to the CNCs protocol",
    "start": "68210",
    "end": "74690"
  },
  {
    "text": "conduct please do not add anything to chat or questions that would be in violation of that code of conduct",
    "start": "74690",
    "end": "81250"
  },
  {
    "text": "basically please be respectful of all your fellow participants and presenters",
    "start": "81250",
    "end": "86950"
  },
  {
    "text": "please also note that the recording and slides will be posted later today to the CN CF webinar page CN CF nioh forward",
    "start": "86950",
    "end": "94850"
  },
  {
    "text": "slash webinars with that I'll hand it over to Marko and Kevin for today's",
    "start": "94850",
    "end": "99860"
  },
  {
    "text": "presentation a thank you so much and and welcome everybody to these webinar today",
    "start": "99860",
    "end": "106700"
  },
  {
    "text": "we're going to be talking about service mesh application connectivity and kuma",
    "start": "106700",
    "end": "111799"
  },
  {
    "text": "my name is Marco Palladino I'm the CTO and co-founder of Kong and I'm joined",
    "start": "111799",
    "end": "118790"
  },
  {
    "text": "today by Kevin Tran who's a developer advocate at Kong this session is going",
    "start": "118790",
    "end": "124820"
  },
  {
    "text": "to be split in two different parts there's going to be my presentation and",
    "start": "124820",
    "end": "130850"
  },
  {
    "text": "then we're going to be seeing a live demo of kuma Kevin will lead that effort",
    "start": "130850",
    "end": "136930"
  },
  {
    "text": "so today we're going to be talking about service mesh and to really understand",
    "start": "136930",
    "end": "142360"
  },
  {
    "text": "why this is the time to talk about this new pattern we need to zoom out and take",
    "start": "142360",
    "end": "149209"
  },
  {
    "text": "a step back and understand that we are really entering and we have entered since a few",
    "start": "149209",
    "end": "155579"
  },
  {
    "text": "years a new era of software development we have transitioned away from large",
    "start": "155579",
    "end": "161370"
  },
  {
    "text": "monolithic applications that were baking all of the functionality and all of the",
    "start": "161370",
    "end": "167069"
  },
  {
    "text": "features in one in primarily one code base and we started to decouple and",
    "start": "167069",
    "end": "173579"
  },
  {
    "text": "distribute those large code bases into smaller decoupled services these",
    "start": "173579",
    "end": "180780"
  },
  {
    "text": "services are going to be powered by an API because they're separate we're not",
    "start": "180780",
    "end": "186510"
  },
  {
    "text": "going to be using function calls in our monolith to consume different parts of our application but we're going to be",
    "start": "186510",
    "end": "193409"
  },
  {
    "text": "making calls over a network to do that and we need this transition from",
    "start": "193409",
    "end": "199079"
  },
  {
    "text": "monolithic to micro services was started by a few technologies that came out in",
    "start": "199079",
    "end": "206189"
  },
  {
    "text": "2013 in 2014 one of them is obviously docker which popularized the adoption of",
    "start": "206189",
    "end": "213780"
  },
  {
    "text": "containers and the other one in 2014 was kubernetes which gave to everybody else",
    "start": "213780",
    "end": "219750"
  },
  {
    "text": "to the entire industry a platform that anybody could use self-service to deploy",
    "start": "219750",
    "end": "226319"
  },
  {
    "text": "our applications some companies have done this transition prior to kubernetes",
    "start": "226319",
    "end": "231900"
  },
  {
    "text": "of course I mean micro services they really exist and it had been existing for a long time if we think of Google",
    "start": "231900",
    "end": "238349"
  },
  {
    "text": "internally first and foremost but also Amazon companies like Netflix they did transition to micro services prior to",
    "start": "238349",
    "end": "244590"
  },
  {
    "text": "docker prior to kubernetes the difference is they had to build the wrong tooling from",
    "start": "244590",
    "end": "250560"
  },
  {
    "text": "scratch in order to be able to do that in order to be able to run those micro services but after 2013 after 2014 there",
    "start": "250560",
    "end": "258690"
  },
  {
    "text": "is a new ecosystem that's that's coming out in the industry that provides this",
    "start": "258690",
    "end": "264360"
  },
  {
    "text": "tooling out of the box for everybody else so we don't have to build our own monitoring solutions we don't have to",
    "start": "264360",
    "end": "270389"
  },
  {
    "text": "build our own orchestration platforms but we can go on landscapes ecosystems",
    "start": "270389",
    "end": "276810"
  },
  {
    "text": "like CN CF and then get the software we need without having to build it",
    "start": "276810",
    "end": "281820"
  },
  {
    "text": "ourselves in this sense 2013 and 2014 were pivotal",
    "start": "281820",
    "end": "286919"
  },
  {
    "text": "moments in the industry and created this new technological transformation in the",
    "start": "286919",
    "end": "292409"
  },
  {
    "text": "world a new era effectively and in",
    "start": "292409",
    "end": "297509"
  },
  {
    "text": "really this transformation we connects with pretty much every other technology transformation we're doing in the world",
    "start": "297509",
    "end": "302699"
  },
  {
    "text": "at the end of the day the goal that we have I have you have everybody has",
    "start": "302699",
    "end": "308339"
  },
  {
    "text": "really is to grow the business and to grow the business it is important that we can capture new users and we can",
    "start": "308339",
    "end": "315719"
  },
  {
    "text": "monetize the existing ones we can provide a better more reliable digital experience as a result to that we're",
    "start": "315719",
    "end": "321689"
  },
  {
    "text": "going to be making our applications more reliable we're going to be distributing them we're going to be decoupling them",
    "start": "321689",
    "end": "329129"
  },
  {
    "text": "over time we're going to be leveraging different regions different cloud members if we're making our software",
    "start": "329129",
    "end": "336059"
  },
  {
    "text": "more distributed and more decoupled in order to make our development speed faster to make our services our entire",
    "start": "336059",
    "end": "343559"
  },
  {
    "text": "experience more reliable so as we've transitioned from centralized to",
    "start": "343559",
    "end": "348899"
  },
  {
    "text": "decentralized architectures we're really transitioning from a more static if you wish sort of",
    "start": "348899",
    "end": "356159"
  },
  {
    "text": "architectures you know monolithic apps that we deploy all at once you know multiple people all the teams working on",
    "start": "356159",
    "end": "361649"
  },
  {
    "text": "one code base to a more dynamic to a more elastic if we wish architecture we",
    "start": "361649",
    "end": "367469"
  },
  {
    "text": "can be coupled with services we can deploy them independently we can build them with different technologies we can",
    "start": "367469",
    "end": "372899"
  },
  {
    "text": "deploy them without too much coordination across the different teams as we do that the number of services",
    "start": "372899",
    "end": "381919"
  },
  {
    "text": "increases over time in our systems it's inevitable from large monolithic",
    "start": "381919",
    "end": "387539"
  },
  {
    "text": "applications to smaller decoupled micro services as the number of services increases while we're introducing some",
    "start": "387539",
    "end": "394589"
  },
  {
    "text": "new challenges that we didn't have before and one some of them are more control more visibility on our overall",
    "start": "394589",
    "end": "400889"
  },
  {
    "text": "architecture in monolithic in the monolithic world we had a handful of systems running at the end of the game",
    "start": "400889",
    "end": "406679"
  },
  {
    "text": "they were hard to scale they were hard to build but it was just a few of them and we could deploy them very well in",
    "start": "406679",
    "end": "412379"
  },
  {
    "text": "micro services these gets harder because we have much more the scale of our of the things that",
    "start": "412379",
    "end": "418349"
  },
  {
    "text": "we're running increases for much much bigger scale and as we are decoupling",
    "start": "418349",
    "end": "425610"
  },
  {
    "start": "423000",
    "end": "572000"
  },
  {
    "text": "our monolithic applications in micro-services we are also introducing a",
    "start": "425610",
    "end": "432719"
  },
  {
    "text": "new variable into our architectures that was always existing even before",
    "start": "432719",
    "end": "438590"
  },
  {
    "text": "micro-services but now becomes becomes a much bigger bigger component a bigger",
    "start": "438590",
    "end": "443699"
  },
  {
    "text": "part of these modern architectures and that is the network as we are decoupling",
    "start": "443699",
    "end": "449189"
  },
  {
    "text": "our architectures into separate services that we can conceal beyond API and by",
    "start": "449189",
    "end": "455789"
  },
  {
    "text": "the way the API it's not necessarily just an HTTP API it can be any API with",
    "start": "455789",
    "end": "461520"
  },
  {
    "text": "any protocol that runs over the network it can be your PC it can be a cask event",
    "start": "461520",
    "end": "468389"
  },
  {
    "text": "it can be a Kafka stream it can be the more traditional service to service requests it can be anything but the",
    "start": "468389",
    "end": "473789"
  },
  {
    "text": "point is we're going to be having api's that are going to be accessing on a network and when we do that we're making",
    "start": "473789",
    "end": "482550"
  },
  {
    "text": "the network and the network reliability part of the overall picture in a much bigger way than monolithic applications",
    "start": "482550",
    "end": "489089"
  },
  {
    "text": "the network as we all know is not secure the network is unpredictable can be slow",
    "start": "489089",
    "end": "494550"
  },
  {
    "text": "at times and so when the network becomes such a bigger part of our overall",
    "start": "494550",
    "end": "499680"
  },
  {
    "text": "architecture problems in the network are going to be affecting our and experience",
    "start": "499680",
    "end": "505770"
  },
  {
    "text": "in the in in bigger ways and again this",
    "start": "505770",
    "end": "511409"
  },
  {
    "text": "is part of this transition that we're doing from running everything on a CPU you know we're effectively replacing the",
    "start": "511409",
    "end": "519149"
  },
  {
    "text": "reliability of the CPU with the unreliability of the network we are replacing our function calls our objects",
    "start": "519149",
    "end": "526709"
  },
  {
    "text": "in a monolith with Network calls now we always always had Network calls even",
    "start": "526709",
    "end": "533040"
  },
  {
    "text": "before this you know even in a monolithic world the monolith if anything was consuming a",
    "start": "533040",
    "end": "539070"
  },
  {
    "text": "data means and that was a network request and if that Network request went down then the model it was now what this",
    "start": "539070",
    "end": "546240"
  },
  {
    "text": "change now is the scale of those network requests and really we are having many more",
    "start": "546240",
    "end": "552779"
  },
  {
    "text": "Network operations and Network calls and network requests overall in",
    "start": "552779",
    "end": "558750"
  },
  {
    "text": "micro-services then we ever had with monolithic applications the network this",
    "start": "558750",
    "end": "566939"
  },
  {
    "text": "is the keyword service connectivity over the network now the network is a problem",
    "start": "566939",
    "end": "573629"
  },
  {
    "text": "because like we said it's not secure we need to encrypt the network we want to be able to build your trust security",
    "start": "573629",
    "end": "579990"
  },
  {
    "text": "models by assigning an identity to every workload that runs in the network if the",
    "start": "579990",
    "end": "585660"
  },
  {
    "text": "service wants to consume another service we want to make sure that the service is first and foremost a real service we can",
    "start": "585660",
    "end": "592800"
  },
  {
    "text": "verify the identity of that workload and then we can then guarantee a permission",
    "start": "592800",
    "end": "598129"
  },
  {
    "text": "to consume other services we want to be able to set up ACL rules that determine",
    "start": "598129",
    "end": "603629"
  },
  {
    "text": "what services can consume other services if we are very restricted service for",
    "start": "603629",
    "end": "608819"
  },
  {
    "text": "example that is exposing sensitive data in for user information we don't want every service perhaps to access that",
    "start": "608819",
    "end": "615209"
  },
  {
    "text": "that specific service you want to be able to set up rules to determine how we're going to be segmenting our traffic",
    "start": "615209",
    "end": "621889"
  },
  {
    "text": "services are going to be having different versions that we're going to be having feature of flagging",
    "start": "621889",
    "end": "628889"
  },
  {
    "text": "requirements so we want to be able to enable some features only if certain services or certain versions of our",
    "start": "628889",
    "end": "635250"
  },
  {
    "text": "services are making those requests we want to implement some complex routing and versioning over the network in a",
    "start": "635250",
    "end": "640889"
  },
  {
    "text": "monolithic application we would either create a new implementation on a class of an interface or we would redeploy the",
    "start": "640889",
    "end": "647610"
  },
  {
    "text": "entire thing over over and over again but with microservices because the application the overall application is",
    "start": "647610",
    "end": "654540"
  },
  {
    "text": "not in one place but it's made of these services running all together in",
    "start": "654540",
    "end": "659610"
  },
  {
    "text": "different versions of these services running together we need to have something that allows us to determine what is the behavior of the network in",
    "start": "659610",
    "end": "666839"
  },
  {
    "text": "our system we want to be able also to deploy our services in a safer way we",
    "start": "666839",
    "end": "673500"
  },
  {
    "text": "want to implement the canary releases we want to be able to observe all of this network connectivity that's going from",
    "start": "673500",
    "end": "680130"
  },
  {
    "text": "one service to another we want to be able to be able to collect metrics to upload the requests and trace them so",
    "start": "680130",
    "end": "686290"
  },
  {
    "text": "we can find bottlenecks we can find where the problem is in microservices",
    "start": "686290",
    "end": "691420"
  },
  {
    "text": "performance also becomes a much bigger requirement in a monolithic you know monolithic applications they had you",
    "start": "691420",
    "end": "698650"
  },
  {
    "text": "know many flaws but at the end of the day invoking a function was quick the",
    "start": "698650",
    "end": "705040"
  },
  {
    "text": "underlying you know java virtual machine for example was quite quick to consume",
    "start": "705040",
    "end": "710320"
  },
  {
    "text": "objects within the context of the JVM but with microservices we're not doing",
    "start": "710320",
    "end": "715780"
  },
  {
    "text": "that anymore we're making Network requests that go to the outside world to the outside outside",
    "start": "715780",
    "end": "721300"
  },
  {
    "text": "of that micro-service to consume another micro service therefore that performance",
    "start": "721300",
    "end": "727000"
  },
  {
    "text": "it's much more impacted by the network and so we want to be able to trace that network we want to be able to observe it",
    "start": "727000",
    "end": "733690"
  },
  {
    "text": "in greater and better ways there's a whole set of concerns that we need to",
    "start": "733690",
    "end": "739300"
  },
  {
    "text": "take care of and you know traditionally even in monolithic applications we will",
    "start": "739300",
    "end": "744550"
  },
  {
    "text": "have the network right and traditionally we would be writing more code the application teams we would be writing",
    "start": "744550",
    "end": "749950"
  },
  {
    "text": "more code to take care of this network so we would write smart clients for",
    "start": "749950",
    "end": "755800"
  },
  {
    "text": "example that would perhaps retry our requests through database maybe if that request failed they would log the",
    "start": "755800",
    "end": "762400"
  },
  {
    "text": "exception they would log any problem that the network experienced the problem",
    "start": "762400",
    "end": "767740"
  },
  {
    "text": "is that as we are transitioning away from a few handful of large code bases",
    "start": "767740",
    "end": "773170"
  },
  {
    "text": "to more and more micro services we want to be able to implement these network",
    "start": "773170",
    "end": "779410"
  },
  {
    "text": "management across the world not just in one place but on pretty much every service and so over time the problem is",
    "start": "779410",
    "end": "786940"
  },
  {
    "text": "that each team in each application in each service if we don't do anything",
    "start": "786940",
    "end": "792880"
  },
  {
    "text": "about this each service will then implement in one way or another their",
    "start": "792880",
    "end": "798190"
  },
  {
    "text": "own smart client or their own network management over time this creates lots of fragmentation especially if we're",
    "start": "798190",
    "end": "805270"
  },
  {
    "text": "going to be using different programming languages across the board because then we have to reimplemented is logic across",
    "start": "805270",
    "end": "811900"
  },
  {
    "text": "different languages this creates lots of fragmentation in creates",
    "start": "811900",
    "end": "819300"
  },
  {
    "text": "lots of problems including security problems compliance problems you know",
    "start": "819750",
    "end": "825149"
  },
  {
    "text": "observability incompatibility across these different services as different",
    "start": "825149",
    "end": "831220"
  },
  {
    "text": "teams are going to be creating this extra code to manage the network the teams should not be managing the network",
    "start": "831220",
    "end": "837759"
  },
  {
    "text": "the same way we don't ask the application teams to manage the data center we give them an abstraction that",
    "start": "837759",
    "end": "843939"
  },
  {
    "text": "they can use to deploy their services likewise we want the application teams",
    "start": "843939",
    "end": "848980"
  },
  {
    "text": "to focus on creating the service not on managing the network if they do manage",
    "start": "848980",
    "end": "854889"
  },
  {
    "text": "the network these will inevitably lead to fragmentation and poor",
    "start": "854889",
    "end": "860050"
  },
  {
    "text": "implementations it's not their job their job is to manage is to create the service the end user application and",
    "start": "860050",
    "end": "867490"
  },
  {
    "text": "make sure that that experience is reliable but managing the network is a side job that today they're implementing",
    "start": "867490",
    "end": "874449"
  },
  {
    "text": "themselves and we don't want them to do that you know if you imagine the networking are in a fragmented way in a",
    "start": "874449",
    "end": "881410"
  },
  {
    "text": "duplicated way across the board eventually this is going to hurt the",
    "start": "881410",
    "end": "886930"
  },
  {
    "start": "886000",
    "end": "903000"
  },
  {
    "text": "business it's going to be creating unreliable experiences",
    "start": "886930",
    "end": "892290"
  },
  {
    "text": "we want the teams to focus on creating the apps we want to abstract away that",
    "start": "892499",
    "end": "899199"
  },
  {
    "text": "Network manager so what if what if we take our code it",
    "start": "899199",
    "end": "908580"
  },
  {
    "text": "manages the Network retries in the network and forces security policies logs and observes all that's happening",
    "start": "908580",
    "end": "916980"
  },
  {
    "text": "when we make an advance request we receive an inbound requests and we extract it away so we separate that from",
    "start": "916980",
    "end": "924360"
  },
  {
    "text": "our service now what if we want to make",
    "start": "924360",
    "end": "929790"
  },
  {
    "text": "this particular code that's managing our network we want to make it portable",
    "start": "929790",
    "end": "935130"
  },
  {
    "text": "because we don't want these code to be tied to specific programming language we",
    "start": "935130",
    "end": "940260"
  },
  {
    "text": "want it to be portable across the board so that if the team wants to build a service in Python in ruby in golang in",
    "start": "940260",
    "end": "947040"
  },
  {
    "text": "java they can do that and these separate executable these separate network",
    "start": "947040",
    "end": "955110"
  },
  {
    "text": "management exact ability which is going to be managing all of the network concerns for us regardless on what",
    "start": "955110",
    "end": "962280"
  },
  {
    "text": "language or what technology the service is being built now if we did export this",
    "start": "962280",
    "end": "967380"
  },
  {
    "text": "as a separate executable we could also use this for the services that were not building but we're using for example a",
    "start": "967380",
    "end": "974160"
  },
  {
    "text": "database or something that you are downloading and running now for this to",
    "start": "974160",
    "end": "980340"
  },
  {
    "text": "work we need that component that network management executive all to build the",
    "start": "980340",
    "end": "987450"
  },
  {
    "text": "execution path of our requests we want that component to be able to take over",
    "start": "987450",
    "end": "992460"
  },
  {
    "text": "those requests and then proxy them to another service the originating service",
    "start": "992460",
    "end": "999570"
  },
  {
    "text": "that's making the network request should not be worrying about managing the network because this executable will do",
    "start": "999570",
    "end": "1005330"
  },
  {
    "text": "it for it now of course because we want the latency obviously we're adding a new",
    "start": "1005330",
    "end": "1012590"
  },
  {
    "text": "a new component in our requests",
    "start": "1012590",
    "end": "1018030"
  },
  {
    "text": "therefore this component is going to inevitably add some latency but this is",
    "start": "1018030",
    "end": "1023940"
  },
  {
    "text": "the catch if the latest it's very small very small in such a way that it doesn't",
    "start": "1023940",
    "end": "1030300"
  },
  {
    "text": "really affect the overall end-user experience but the benefits that it provides are so high well then it's",
    "start": "1030300",
    "end": "1037079"
  },
  {
    "text": "still worth adapting it so to reduce that latency we're going to be deploying these executive all that manages our our",
    "start": "1037080",
    "end": "1044699"
  },
  {
    "text": "network these proxy effectively we're going to be deploying it next to our",
    "start": "1044700",
    "end": "1050190"
  },
  {
    "text": "service on the same underlying host virtual machine or pod basically we want",
    "start": "1050190",
    "end": "1056520"
  },
  {
    "text": "the connections between the service and the network management to always happen on local O's we don't want to go outside",
    "start": "1056520",
    "end": "1064020"
  },
  {
    "text": "of the network otherwise you are define the purpose of every of every having this exactly in the first place we want",
    "start": "1064020",
    "end": "1070290"
  },
  {
    "text": "these to be as close as possible to the services kubernetes this would be a",
    "start": "1070290",
    "end": "1076200"
  },
  {
    "text": "cycler container which effectively is a way to tell kubernetes to deploy this",
    "start": "1076200",
    "end": "1081470"
  },
  {
    "text": "network management proxy on the same underlying virtual machine as the service that we're running and because",
    "start": "1081470",
    "end": "1087990"
  },
  {
    "text": "we want to be able to as part of the tasks that is exactly what should be doing we also want to be able to encrypt",
    "start": "1087990",
    "end": "1093540"
  },
  {
    "text": "the connections we're also going to be having this proxy on the other end when",
    "start": "1093540",
    "end": "1098940"
  },
  {
    "text": "receiving those are those requests in order to enforce encryption out-of-the-box without the services ever",
    "start": "1098940",
    "end": "1106260"
  },
  {
    "text": "knowing that any of this is happening by doing so if you look at this picture we",
    "start": "1106260",
    "end": "1111990"
  },
  {
    "text": "are effectively abstracting away the network management from our services",
    "start": "1111990",
    "end": "1117270"
  },
  {
    "text": "this means that we can take this code we can take this executable we can push it alongside every service and we can get",
    "start": "1117270",
    "end": "1125520"
  },
  {
    "text": "network management out of the box the teams that are building the services are never ever going to be worrying about",
    "start": "1125520",
    "end": "1131940"
  },
  {
    "text": "managing the network ever again all they care about is triggering those requests",
    "start": "1131940",
    "end": "1137880"
  },
  {
    "text": "or being able to receive those requests but how does requests are being secured how they're going to be observed are",
    "start": "1137880",
    "end": "1143820"
  },
  {
    "text": "there going to be retried and so on and so forth it's not a concern of the service itself therefore we can build",
    "start": "1143820",
    "end": "1150090"
  },
  {
    "text": "services in many languages in technologies and out-of-the-box we would",
    "start": "1150090",
    "end": "1155200"
  },
  {
    "text": "get network management via be a dis portable executable that were shipping alongside and deploying alongside our",
    "start": "1155200",
    "end": "1162220"
  },
  {
    "text": "services we can build our own or we can use",
    "start": "1162220",
    "end": "1168650"
  },
  {
    "text": "something that already exists from the landscape and if we want to use",
    "start": "1168650",
    "end": "1174260"
  },
  {
    "text": "something that has already been built out there that we want to use very",
    "start": "1174260",
    "end": "1179390"
  },
  {
    "text": "quickly we can definitely use something like envoy envoy is a proxy that we can",
    "start": "1179390",
    "end": "1184400"
  },
  {
    "text": "use for this kind of use cases it implements network management functionality that we can leverage",
    "start": "1184400",
    "end": "1190250"
  },
  {
    "text": "across the board alongside our services so we don't have to build it ourselves and because a boy runs as a separate",
    "start": "1190250",
    "end": "1198230"
  },
  {
    "text": "executable alongside our services all these network management comes out of the box regardless on what platform we",
    "start": "1198230",
    "end": "1205130"
  },
  {
    "text": "are using including containers but also virtual machines right there is nothing about",
    "start": "1205130",
    "end": "1210680"
  },
  {
    "text": "envoy that makes it very specific to containers and and couldn't you know be",
    "start": "1210680",
    "end": "1217160"
  },
  {
    "text": "executed on multiple machines or bare metal even if we want to it's a portable executable now if we do use envoy we",
    "start": "1217160",
    "end": "1224900"
  },
  {
    "text": "don't even have to build our own network management executive all because it comes out of the box from the community",
    "start": "1224900",
    "end": "1230620"
  },
  {
    "text": "from the ecosystem now if we take a step",
    "start": "1230620",
    "end": "1235790"
  },
  {
    "start": "1233000",
    "end": "1289000"
  },
  {
    "text": "back and we look at the big picture as we make the transition to micro services",
    "start": "1235790",
    "end": "1241130"
  },
  {
    "text": "as we introduce more and more services in our architecture we're going to be having alongside each one of these",
    "start": "1241130",
    "end": "1247070"
  },
  {
    "text": "services that we're creating an ongoing proxy the humble proxy is going to be responsible for processing the outbound",
    "start": "1247070",
    "end": "1253400"
  },
  {
    "text": "requests to another service and receiving the inbound requests from another service on top of these requests",
    "start": "1253400",
    "end": "1261950"
  },
  {
    "text": "we can create security encryption you know routing functionalities by",
    "start": "1261950",
    "end": "1266960"
  },
  {
    "text": "leveraging envoy without having to build them ourselves in our services effectively it's as if we were creating",
    "start": "1266960",
    "end": "1273680"
  },
  {
    "text": "this sort of network overlay the services are unaware of all the",
    "start": "1273680",
    "end": "1278750"
  },
  {
    "text": "complexities of the network out there but we're creating this overlay that's been provided by envoy out of the box",
    "start": "1278750",
    "end": "1284240"
  },
  {
    "text": "and that overlay will make our network requests more reliable now of course",
    "start": "1284240",
    "end": "1291400"
  },
  {
    "start": "1289000",
    "end": "1491000"
  },
  {
    "text": "because we're going to be having many instances of our proxy of amboy",
    "start": "1291400",
    "end": "1299210"
  },
  {
    "text": "alongside alongside our services it can become challenging to configure the",
    "start": "1299210",
    "end": "1304399"
  },
  {
    "text": "behavior of the network I mean the behavior of the network is something that over time we might want to change",
    "start": "1304399",
    "end": "1309559"
  },
  {
    "text": "we might want to change the permission settings we want we might want to change how we observe our traffic and every",
    "start": "1309559",
    "end": "1316610"
  },
  {
    "text": "time we make a change or every time we want to expose a new service to another service we don't want to manually go and",
    "start": "1316610",
    "end": "1324200"
  },
  {
    "text": "push that configuration - all of these are modes that we could but that",
    "start": "1324200",
    "end": "1330020"
  },
  {
    "text": "wouldn't be very smart it would be quite a painful process because we're going to be adding a data plane proxy boy it's",
    "start": "1330020",
    "end": "1336830"
  },
  {
    "text": "called data plane because it's under it sets on the execution on the data path of our requests we would have to",
    "start": "1336830",
    "end": "1344299"
  },
  {
    "text": "effectively then manually go ahead and reconfigure these proxies every time we want to make a change but we don't want",
    "start": "1344299",
    "end": "1350630"
  },
  {
    "text": "to do that what if we leverage another component the control plane whose only",
    "start": "1350630",
    "end": "1356090"
  },
  {
    "text": "job is to connect with these proxies and push that configuration the terminology",
    "start": "1356090",
    "end": "1363260"
  },
  {
    "text": "data plane and control plane it's actually quite common in the networking world world you know now we don't manage",
    "start": "1363260",
    "end": "1371450"
  },
  {
    "text": "our own data centers anymore we use the cloud but if we did manage our own data center you know we would have a bunch of",
    "start": "1371450",
    "end": "1378049"
  },
  {
    "text": "racks and servers sitting in this building each one of them will have its own switches and routers and so on and",
    "start": "1378049",
    "end": "1384260"
  },
  {
    "text": "every time we want to change something in the behavior of our network we don't",
    "start": "1384260",
    "end": "1389539"
  },
  {
    "text": "want to manually physically go into the data center and connect which rack and update the configuration of every switch",
    "start": "1389539",
    "end": "1396380"
  },
  {
    "text": "for example we want to be able to leverage a source of truth that's centralized and that source of truth",
    "start": "1396380",
    "end": "1403010"
  },
  {
    "text": "will be responsible for propagating the configuration to our switches and routers and so on the same thing is",
    "start": "1403010",
    "end": "1410179"
  },
  {
    "text": "happening here as we are deploying our data plane proxy across the board every",
    "start": "1410179",
    "end": "1415250"
  },
  {
    "text": "time we make a change we don't want to manually do it on every single proxy we want to be able to leverage a source of",
    "start": "1415250",
    "end": "1420950"
  },
  {
    "text": "truth the control plane that will connect to the data planes to push that",
    "start": "1420950",
    "end": "1425960"
  },
  {
    "text": "configuration now the catch here is that the control plane is never on the",
    "start": "1425960",
    "end": "1431480"
  },
  {
    "text": "execution path of this service to service requests the control plane it connects to the proxies only in",
    "start": "1431480",
    "end": "1439130"
  },
  {
    "text": "order to be able to push that configuration the actual service connectivity flows through the data",
    "start": "1439130",
    "end": "1445400"
  },
  {
    "text": "planes not to the control plane so technically the control plane could be down and if the control plane was down",
    "start": "1445400",
    "end": "1451970"
  },
  {
    "text": "that would not affect the service to service traffic the reason why amboy is",
    "start": "1451970",
    "end": "1457930"
  },
  {
    "text": "quite popular these days in this kind of use cases it's because amboy provides an",
    "start": "1457930",
    "end": "1464270"
  },
  {
    "text": "API that the control plane can implement in order to push that configuration very",
    "start": "1464270",
    "end": "1470270"
  },
  {
    "text": "easily so that API the XDS API is that Ambu provides come out of the box and",
    "start": "1470270",
    "end": "1476840"
  },
  {
    "text": "the communication between the control plane and the data plane on our Moy is done via G RPC",
    "start": "1476840",
    "end": "1484210"
  },
  {
    "text": "now likewise for you know our detail in",
    "start": "1484210",
    "end": "1490659"
  },
  {
    "text": "proxies we would be deploying our control plane alongside our application",
    "start": "1490659",
    "end": "1498399"
  },
  {
    "start": "1491000",
    "end": "1660000"
  },
  {
    "text": "so that the control plane can connect these data plan proxies and just like that we have learned what service mesh is service mash is a pattern that",
    "start": "1498399",
    "end": "1505210"
  },
  {
    "text": "implies having a data plane proxy running alongside every service that we're running so that the network",
    "start": "1505210",
    "end": "1511690"
  },
  {
    "text": "management can be abstracted away from the services rebuilding into this proxy one implementation of this proxies can",
    "start": "1511690",
    "end": "1518769"
  },
  {
    "text": "be annoying for example and then it implies having a control plane that can",
    "start": "1518769",
    "end": "1523990"
  },
  {
    "text": "connect these proxies so that we can reconfigure the network behavior without having to manually push that behavior",
    "start": "1523990",
    "end": "1530799"
  },
  {
    "text": "into the process themselves so the control plane becomes this source of truth the dynamically pushes the",
    "start": "1530799",
    "end": "1537490"
  },
  {
    "text": "configuration to the proxies if we want to change the network behavior we login",
    "start": "1537490",
    "end": "1543100"
  },
  {
    "text": "into the control plane or we change the state of the resources into the control",
    "start": "1543100",
    "end": "1548860"
  },
  {
    "text": "plane to make that happen we don't go directly into the proxies themselves",
    "start": "1548860",
    "end": "1555029"
  },
  {
    "text": "this is service mash service mash is not really a new concern even in a",
    "start": "1555029",
    "end": "1560919"
  },
  {
    "text": "monolithic world when a model that wants to make a request to a database to something that's outside the the code",
    "start": "1560919",
    "end": "1568090"
  },
  {
    "text": "base we have to make a network request and and we can use service mash in a",
    "start": "1568090",
    "end": "1573669"
  },
  {
    "text": "portable way not just in kubernetes but everywhere there's nothing that there's nothing that prevents a service mash in",
    "start": "1573669",
    "end": "1580059"
  },
  {
    "text": "this pattern to run on virtual machines for example if you wanted to and also from a pattern standpoint this is",
    "start": "1580059",
    "end": "1587110"
  },
  {
    "text": "something that we can use not just for micro services but for anything else we might be using today today even with a",
    "start": "1587110",
    "end": "1592899"
  },
  {
    "text": "model it talks to a database chances are we're managing that network with service",
    "start": "1592899",
    "end": "1598570"
  },
  {
    "text": "mesh we can make those monolids we can make those services much simpler to build by abstracting that network",
    "start": "1598570",
    "end": "1604720"
  },
  {
    "text": "management to service mash this is what service machines now likewise our boy is",
    "start": "1604720",
    "end": "1610690"
  },
  {
    "text": "an implementation of a cycle proxy that we can use for managing the network the control plane also has theirs",
    "start": "1610690",
    "end": "1618050"
  },
  {
    "text": "different implementations are there each one with its pro and cons and one of them and the one that we're going to be",
    "start": "1618050",
    "end": "1624260"
  },
  {
    "text": "addressing today is kuma this is the old load of kuma we're updating come up with",
    "start": "1624260",
    "end": "1629900"
  },
  {
    "text": "a new logo come it up from the next version and this is going to be the new log of kuma kuma is also a project that is in the",
    "start": "1629900",
    "end": "1638660"
  },
  {
    "text": "process of being donated to the CN CF foundation as a sandbox project last",
    "start": "1638660",
    "end": "1645140"
  },
  {
    "text": "Friday we opened up we started the process you know it's not there is a",
    "start": "1645140",
    "end": "1650150"
  },
  {
    "text": "process to follow but the goal of cumin is to be a vendor neutral open control",
    "start": "1650150",
    "end": "1656330"
  },
  {
    "text": "pain plane built on top of a more so we're going towards that direction so let's talk about kuma for a little bit",
    "start": "1656330",
    "end": "1662960"
  },
  {
    "start": "1660000",
    "end": "1716000"
  },
  {
    "text": "kuma is a control plane it's open source it was released in September 10 2009 teen bike on and it's an Apache License",
    "start": "1662960",
    "end": "1671840"
  },
  {
    "text": "2.0 project it's written in going and it provides a native and boy integration so",
    "start": "1671840",
    "end": "1679520"
  },
  {
    "text": "from a technical standpoint kuma is a control plane that implements the XDS",
    "start": "1679520",
    "end": "1684590"
  },
  {
    "text": "api so that it can communicate to envoy it has been written with with a very",
    "start": "1684590",
    "end": "1690260"
  },
  {
    "text": "clear design and goal in mind so first and foremost Combe has been built by",
    "start": "1690260",
    "end": "1695690"
  },
  {
    "text": "kong and cond at kong we really value the ease of use we think that simplicity",
    "start": "1695690",
    "end": "1702910"
  },
  {
    "text": "in using the product really is a feature in service mesh as being very complex",
    "start": "1702910",
    "end": "1708380"
  },
  {
    "text": "for a long time but it doesn't have to be that way so with Kula wanting to create something that was simple that was portable that",
    "start": "1708380",
    "end": "1714590"
  },
  {
    "text": "was extensible so kuma is first and foremost easy to use it's a very simple",
    "start": "1714590",
    "end": "1720020"
  },
  {
    "start": "1716000",
    "end": "1897000"
  },
  {
    "text": "lightweight and extensible control plane that supports amboy out of the box it",
    "start": "1720020",
    "end": "1725630"
  },
  {
    "text": "provides policies that we can use out of the box from engine or traffic for securing it for monitoring for observing",
    "start": "1725630",
    "end": "1732230"
  },
  {
    "text": "it and it comes with support for nepali",
    "start": "1732230",
    "end": "1737960"
  },
  {
    "text": "multiple platforms but also for multi-tenancy so kuma can be executed on",
    "start": "1737960",
    "end": "1743179"
  },
  {
    "text": "kubernetes in a native way and when running on kubernetes kuma will automatically inject the cycler proxy",
    "start": "1743179",
    "end": "1750620"
  },
  {
    "text": "envoy without us I mean to do anything about it it's just gonna happen and Kevin will",
    "start": "1750620",
    "end": "1756050"
  },
  {
    "text": "show you later how how that works but basically by using kuma we don't need to know how to use Envoy kuma abstracts",
    "start": "1756050",
    "end": "1763610"
  },
  {
    "text": "away that complexity so that all that you need to know is out to deploy kuma",
    "start": "1763610",
    "end": "1768950"
  },
  {
    "text": "and use the policies and that's it of course if we are power users and want to go deeper and change how the amboy",
    "start": "1768950",
    "end": "1775430"
  },
  {
    "text": "configuration is being created well we can still do that but it's not required kuma comes out of the box with native",
    "start": "1775430",
    "end": "1782750"
  },
  {
    "text": "support for kubernetes but also kuma can run on any other platform like I said",
    "start": "1782750",
    "end": "1788750"
  },
  {
    "text": "there is no reason why service matches the pattern cannot be implemented on kubernetes as well as virtual machines",
    "start": "1788750",
    "end": "1795350"
  },
  {
    "text": "at the end of the day if we can manage to deploy or recycle proxies and we can",
    "start": "1795350",
    "end": "1800360"
  },
  {
    "text": "deploy a control plane the service mesh pattern can be used pretty much everywhere if anything if you are",
    "start": "1800360",
    "end": "1805730"
  },
  {
    "text": "transitioning to kubernetes implementing service mesh and ripple machines will make it easier for us to transition some",
    "start": "1805730",
    "end": "1811070"
  },
  {
    "text": "workloads to kubernetes because we're getting rid of one extra concern and that is the network management we're",
    "start": "1811070",
    "end": "1817580"
  },
  {
    "text": "getting rid of that from the migration process therefore reducing the surface area of the things that you have to",
    "start": "1817580",
    "end": "1823580"
  },
  {
    "text": "migrate so if anything it enables that migration to be smoother because the network has already been taking care for",
    "start": "1823580",
    "end": "1829430"
  },
  {
    "text": "us so it runs on kubernetes it runs on pretty much any other platform its",
    "start": "1829430",
    "end": "1834620"
  },
  {
    "text": "efforts hybrid deployments and it's quite easy to scale kuma is one component we add more nodes more",
    "start": "1834620",
    "end": "1840860"
  },
  {
    "text": "replicas if you want to scale it and we remove them if we don't need as many it's multi-tenant since they want that",
    "start": "1840860",
    "end": "1847310"
  },
  {
    "text": "means that you know with many other service many implementations out there we need to start a new cluster of kuma",
    "start": "1847310",
    "end": "1855320"
  },
  {
    "text": "for each line of business or for each team that requires a service match and over time that becames operationally",
    "start": "1855320",
    "end": "1861770"
  },
  {
    "text": "very expensive because we do have to then manage you know all these clusters",
    "start": "1861770",
    "end": "1867080"
  },
  {
    "text": "running but with kuma that's not an issue because we can start one instance of kuma and increase as many measures as",
    "start": "1867080",
    "end": "1873440"
  },
  {
    "text": "we want and then we can determine on our end if you want those meshes to use the same underlying CA certificate authority",
    "start": "1873440",
    "end": "1881090"
  },
  {
    "text": "for provisioning those identities or we want to be using different",
    "start": "1881090",
    "end": "1887030"
  },
  {
    "text": "certificate authorities and all of these is dynamic inside of cumin so it's quite simple to get up and running with it and",
    "start": "1887030",
    "end": "1893090"
  },
  {
    "text": "Kevin will show you in a second you know what's what's the look and feel of coma it comes with native sir D is for",
    "start": "1893090",
    "end": "1900140"
  },
  {
    "start": "1897000",
    "end": "1949000"
  },
  {
    "text": "kubernetes it comes with a native CLI that we can use across the board so we've built these abstraction layer that",
    "start": "1900140",
    "end": "1907010"
  },
  {
    "text": "abstracts away how we are retrieving the cooler resources on kubernetes and non",
    "start": "1907010",
    "end": "1912320"
  },
  {
    "text": "kubernetes it provides a GUI out of the box that we can use to get up and",
    "start": "1912320",
    "end": "1918140"
  },
  {
    "text": "running with kuma and quite frankly we're making lots of work to make sure that the entry point for kuma is as easy",
    "start": "1918140",
    "end": "1925070"
  },
  {
    "text": "as possible of course this is a community driven project so we are always looking for feedback from the",
    "start": "1925070",
    "end": "1930650"
  },
  {
    "text": "community and as a matter of fact tomorrow we have a community call on kuma that if you want you can attend you",
    "start": "1930650",
    "end": "1938179"
  },
  {
    "text": "can check out the details for that call on kuma daughter euro / community you can find the slack channel you can find",
    "start": "1938179",
    "end": "1944570"
  },
  {
    "text": "all sorts of things including the information for the community call in",
    "start": "1944570",
    "end": "1949700"
  },
  {
    "start": "1949000",
    "end": "1986000"
  },
  {
    "text": "kuba again again it's community friendly so it's the only control plane built on",
    "start": "1949700",
    "end": "1956030"
  },
  {
    "text": "top of envoy with an open governance so there is a journey for contributors to become maintainer zuv cumin",
    "start": "1956030",
    "end": "1961640"
  },
  {
    "text": "we do have bi-weekly community calls like i just said the next one is tomorrow and we also are the first",
    "start": "1961640",
    "end": "1969290"
  },
  {
    "text": "family based control plane that is going to be donated to the scenes here so if you want to leave your plus-one that is",
    "start": "1969290",
    "end": "1976309"
  },
  {
    "text": "the sensor issue that has been opened to kick off the donation process in the",
    "start": "1976309",
    "end": "1983179"
  },
  {
    "text": "sandbox the velocity of the project is",
    "start": "1983179",
    "end": "1990410"
  },
  {
    "start": "1986000",
    "end": "2063000"
  },
  {
    "text": "quite high we're trying to make we're trying to learn about the kind of requirements and feedback the users have",
    "start": "1990410",
    "end": "1996980"
  },
  {
    "text": "around kuma and we try to keep quite a good velocity when it comes to implementing our roadmap we're going to",
    "start": "1996980",
    "end": "2003370"
  },
  {
    "text": "be talking about some of these road roadmap items in the community call but you know long story short there is",
    "start": "2003370",
    "end": "2009640"
  },
  {
    "text": "policies out of the box that you can apply once you deploy kuma to manage the network things like traffic permissions",
    "start": "2009640",
    "end": "2015970"
  },
  {
    "text": "neutral to life tracing observability multi-tenancy fault injections and so and so forth and",
    "start": "2015970",
    "end": "2021260"
  },
  {
    "text": "as part of the roadmap were working towards integrating more and more with",
    "start": "2021260",
    "end": "2026420"
  },
  {
    "text": "more complex network deployments so that we can create a mesh that can run simultaneously on kubernetes and",
    "start": "2026420",
    "end": "2032570"
  },
  {
    "text": "multiple machines as part of that overall picture of transitioning or integrating some of the Greenfield new",
    "start": "2032570",
    "end": "2039890"
  },
  {
    "text": "things that we're building with the brownfield applications we already have running as well as we're looking at",
    "start": "2039890",
    "end": "2045280"
  },
  {
    "text": "making it easier to manage cumin with SMI integrations with the open integrations and so and so forth so",
    "start": "2045280",
    "end": "2051790"
  },
  {
    "text": "these are all items that we are working on with the community and with the",
    "start": "2051790",
    "end": "2057320"
  },
  {
    "text": "community we prioritize designs depending on how many people want simple as that so this is a small introduction",
    "start": "2057320",
    "end": "2066679"
  },
  {
    "text": "to service mesh the pattern and Takuma the project so I'm going to be leaving it up to Kevin now to fur up the",
    "start": "2066679",
    "end": "2074360"
  },
  {
    "text": "terminal and Sakuma in action Kevin you're there yep thanks Monica can you",
    "start": "2074360",
    "end": "2080750"
  },
  {
    "text": "hear me yeah I can hear you I'm gonna stop sharing my screen so you can share yours awesome and then I'll take over",
    "start": "2080750",
    "end": "2088159"
  },
  {
    "text": "once you're done sounds good let me grab the screen share here and Marco can see",
    "start": "2088160",
    "end": "2096710"
  },
  {
    "text": "my screen yes thank you so hey everyone",
    "start": "2096710",
    "end": "2102230"
  },
  {
    "text": "today I'm gonna be illustrating you know how kuma works through a demo and to do that we built a demo application in",
    "start": "2102230",
    "end": "2109790"
  },
  {
    "text": "order to illustrate how como would run perhaps in your production environment so our application here is a marketplace",
    "start": "2109790",
    "end": "2117200"
  },
  {
    "text": "that has sells clothing items and split up into four services to represent you",
    "start": "2117200",
    "end": "2122720"
  },
  {
    "text": "know as you kind of break a parking mall that's how you would kind of distribute your the logic of the application we",
    "start": "2122720",
    "end": "2129470"
  },
  {
    "text": "have a front-end app which allows you to kind of visualize the marketplace it back in API built a node and then a",
    "start": "2129470",
    "end": "2135350"
  },
  {
    "text": "Postgres and Redis database to store the items in Postgres and the reviews of",
    "start": "2135350",
    "end": "2140930"
  },
  {
    "text": "each item in Redis so as Michael mentioned earlier there's various ways",
    "start": "2140930",
    "end": "2146510"
  },
  {
    "text": "you can deploy kula and we built out kind of deployment paths for both",
    "start": "2146510",
    "end": "2152480"
  },
  {
    "text": "kubernetes and universal for this demo application along with kuma but since",
    "start": "2152480",
    "end": "2158810"
  },
  {
    "text": "this is a CNC F webinar today I'm gonna be focusing on kubernetes I highly implore you to check out the universal",
    "start": "2158810",
    "end": "2165350"
  },
  {
    "text": "because I think that's one of the big value propositions of kuma is how easily you can get it up and running and",
    "start": "2165350",
    "end": "2170390"
  },
  {
    "text": "universal as well so everything I cover today here can be found on this kuma",
    "start": "2170390",
    "end": "2177440"
  },
  {
    "start": "2174000",
    "end": "2189000"
  },
  {
    "text": "demo repository which houses just the demo application and the deployment instructions you can also just find kuma",
    "start": "2177440",
    "end": "2184520"
  },
  {
    "text": "on github throw without the demo so as",
    "start": "2184520",
    "end": "2190160"
  },
  {
    "start": "2189000",
    "end": "2228000"
  },
  {
    "text": "you can see here as you follow through the kubernetes deployment guy on github everything will be drafted out here I",
    "start": "2190160",
    "end": "2196640"
  },
  {
    "text": "think you navigated through the table of contents to kind of spare some time and not have you guys watched my containers",
    "start": "2196640",
    "end": "2203600"
  },
  {
    "text": "and cluster spin up I already have the application deployed but there's illustrate how easy it is it merely is",
    "start": "2203600",
    "end": "2210590"
  },
  {
    "text": "just cube CT apply this manifest that we already have built out that includes the entire demo application across the floor",
    "start": "2210590",
    "end": "2216380"
  },
  {
    "text": "services and if we were to check that and I do cube CT I'll get pods in my",
    "start": "2216380",
    "end": "2223100"
  },
  {
    "text": "coma demo namespace here there you go",
    "start": "2223100",
    "end": "2228650"
  },
  {
    "text": "you'll see that I have these four pods up and running and each of them",
    "start": "2228650",
    "end": "2234050"
  },
  {
    "text": "correlate to one of the services that you see up here right the back end the front end the Postgres in the Redis well",
    "start": "2234050",
    "end": "2240500"
  },
  {
    "text": "one thing to notice that was in each pod right now we actually have two containers and that's because the first container itself is the applications and",
    "start": "2240500",
    "end": "2248180"
  },
  {
    "text": "the second one is that envoy sidecar proxy that Marco highlight that's what's going to be doing all your network logic",
    "start": "2248180",
    "end": "2255740"
  },
  {
    "text": "that you're going to abstract away from your application so cool we have both",
    "start": "2255740",
    "end": "2260750"
  },
  {
    "start": "2259000",
    "end": "2289000"
  },
  {
    "text": "cout and oh and to show you how to install Kumaon kubernetes as well it's",
    "start": "2260750",
    "end": "2265940"
  },
  {
    "text": "something that I already have installed it up and running it's merely downloading the kuma CTL command line",
    "start": "2265940",
    "end": "2272030"
  },
  {
    "text": "enter tool and then you use kuma CTL install control point and pipe down to keep CTO those two commands will",
    "start": "2272030",
    "end": "2279350"
  },
  {
    "text": "basically get the entire application kuma up or running on your local machine local cluster wherever you",
    "start": "2279350",
    "end": "2284769"
  },
  {
    "text": "choose that choose to be I'm having it I'm how I have up and running in mini tube so let's take a look at what this",
    "start": "2284769",
    "end": "2291249"
  },
  {
    "start": "2289000",
    "end": "2327000"
  },
  {
    "text": "demo application looks like I already have a port for it here as you can see I'm port forwarding the front end service on port 8080 and if I was to",
    "start": "2291249",
    "end": "2298690"
  },
  {
    "text": "navigate there you'll see voila we have a very simple cuma we're gonna have a big logo here obviously",
    "start": "2298690",
    "end": "2304799"
  },
  {
    "text": "marketplace you can shop for horrendously expensive dresses and which",
    "start": "2304799",
    "end": "2311259"
  },
  {
    "text": "these are all stored in Postgres service and then you can look at the reviews which is stored in Venice so this shows",
    "start": "2311259",
    "end": "2317410"
  },
  {
    "text": "you that the entire application is working as we would expect it to oh sorry",
    "start": "2317410",
    "end": "2324359"
  },
  {
    "text": "there you go lost my mouse there for a second but this is not enough as Marco",
    "start": "2324359",
    "end": "2330489"
  },
  {
    "start": "2327000",
    "end": "2344000"
  },
  {
    "text": "mentioned by default the network is insecure and not encrypted right all the",
    "start": "2330489",
    "end": "2335710"
  },
  {
    "text": "communication between the front end and the back end the back end and Postgres Aretas to fetch these items reviews is",
    "start": "2335710",
    "end": "2342190"
  },
  {
    "text": "not secure so how can we make it secure with kula well it's very simple we just",
    "start": "2342190",
    "end": "2348369"
  },
  {
    "text": "have to visit the mutual TLS policy so I'm just going to jump to that section",
    "start": "2348369",
    "end": "2353920"
  },
  {
    "text": "here you'll see that all the policies are listed out on the table of content so we're gonna jump to mutual TLS so",
    "start": "2353920",
    "end": "2360970"
  },
  {
    "text": "neutral TLS gives you the capacity to add encryption along all your services",
    "start": "2360970",
    "end": "2367150"
  },
  {
    "text": "in the mesh right and coolest ships with a built in CA which initializes with",
    "start": "2367150",
    "end": "2372390"
  },
  {
    "text": "auto-generated root certificate we also support a third party CAS and you can",
    "start": "2372390",
    "end": "2377410"
  },
  {
    "text": "configure that by looking at the docs but today I'm just going to use the built in CA so since the mutual TLS is",
    "start": "2377410",
    "end": "2384249"
  },
  {
    "start": "2382000",
    "end": "2419000"
  },
  {
    "text": "not enabled by default we have to configure the mesh resource to basically say hey we want mutual TLS within this",
    "start": "2384249",
    "end": "2391119"
  },
  {
    "text": "mesh and how will we go about doing that it's as simple as updating the mesh DRD with enable true so by default this is",
    "start": "2391119",
    "end": "2399009"
  },
  {
    "text": "what our mesh looks like right this section that'll highlight right here this is what the mesh would",
    "start": "2399009",
    "end": "2404619"
  },
  {
    "text": "research to originally look like without the enable true so we we were to add the additional and able true to our mesh",
    "start": "2404619",
    "end": "2411869"
  },
  {
    "text": "you'll see that mesh default is now configured and revisit our application you'll see",
    "start": "2411869",
    "end": "2420310"
  },
  {
    "text": "that the product API now has the issue no longer has the right permissions to communicate with our back-end API and if",
    "start": "2420310",
    "end": "2427900"
  },
  {
    "text": "you were to access the backend API directly within the container and curl and try to you know query one of the",
    "start": "2427900",
    "end": "2434740"
  },
  {
    "text": "post grass or Redis databases you'll also get the same issue you envoy",
    "start": "2434740",
    "end": "2439990"
  },
  {
    "text": "sidecar proxies will not give you that permission to do so so very quickly by",
    "start": "2439990",
    "end": "2446580"
  },
  {
    "start": "2446000",
    "end": "2473000"
  },
  {
    "text": "editing our mesh resource here we add that we add that level of security",
    "start": "2446580",
    "end": "2452230"
  },
  {
    "text": "encryption that did not exist by D for previously you would have to build out within each part of your application or",
    "start": "2452230",
    "end": "2458590"
  },
  {
    "text": "each service that you're deploying cool so now that we have mutual TLS enable",
    "start": "2458590",
    "end": "2464530"
  },
  {
    "text": "our application no longer work so we still need to get up and we're up and running right so this is where the next",
    "start": "2464530",
    "end": "2470680"
  },
  {
    "text": "policy comes into place and that's traffic permissions traffic permissions gives you the capacity to determine how",
    "start": "2470680",
    "end": "2477460"
  },
  {
    "start": "2473000",
    "end": "2521000"
  },
  {
    "text": "your service would communicate especially once you have mutual TLS and able you have to specify how you want",
    "start": "2477460",
    "end": "2483250"
  },
  {
    "text": "your services to talk to each other you can be very granular or very kind of overarching let's just kind of apply a",
    "start": "2483250",
    "end": "2490990"
  },
  {
    "text": "very blanket statement a blanket permission across our mesh and you'll see here I'm just gonna say for our",
    "start": "2490990",
    "end": "2498580"
  },
  {
    "text": "traffic permission named everything I want to add a spec that says match any source to any destination basically say",
    "start": "2498580",
    "end": "2506920"
  },
  {
    "text": "I want to allow any source service to talk to any destination at once go ahead apply this using cube CTL",
    "start": "2506920",
    "end": "2514650"
  },
  {
    "text": "you'll see that traffic permission everything is created and we go back to",
    "start": "2514650",
    "end": "2522580"
  },
  {
    "start": "2521000",
    "end": "2547000"
  },
  {
    "text": "our application and refresh that fiction works again it's now all these services with mutual TLS enabled have the right",
    "start": "2522580",
    "end": "2529540"
  },
  {
    "text": "permissions to communicate with each other right so as an end user I will not",
    "start": "2529540",
    "end": "2536110"
  },
  {
    "text": "be disrupt at all but from a networking standpoint everything is more secure and that's exactly what we want as we kind",
    "start": "2536110",
    "end": "2543100"
  },
  {
    "text": "of distribute more and more of our services before I go on to explore just",
    "start": "2543100",
    "end": "2549250"
  },
  {
    "start": "2547000",
    "end": "2571000"
  },
  {
    "text": "a few more services I wanted to take a step back and see you know we applied we edited or edited our mesh to enable mutual TOS we",
    "start": "2549250",
    "end": "2556030"
  },
  {
    "text": "added some traffic permissions how do I get a better overview of what's happening within kuma and this is what",
    "start": "2556030",
    "end": "2562330"
  },
  {
    "text": "the GUI comes into play Marco mentioned earlier that coolest shits by default with a GUI and this is what the GUI",
    "start": "2562330",
    "end": "2569080"
  },
  {
    "text": "looks like GUI gives you a easy way to overview eventually we're going to add more functionality on to it such as",
    "start": "2569080",
    "end": "2576490"
  },
  {
    "text": "onboarding wizard but you'll see here that it gives you a capacity to see exactly you know what our mesh looks",
    "start": "2576490",
    "end": "2582520"
  },
  {
    "text": "like and what our data planes and all the policies we have in our mesh if I",
    "start": "2582520",
    "end": "2587980"
  },
  {
    "start": "2587000",
    "end": "2613000"
  },
  {
    "text": "was to click the data planes tap here you'll see that we have the four data points on line as we have deployed the",
    "start": "2587980",
    "end": "2594850"
  },
  {
    "text": "services across four pods each of these services are data planes can have a tag",
    "start": "2594850",
    "end": "2600940"
  },
  {
    "text": "and we can eventually do some routing or traffic tracing based off these tags",
    "start": "2600940",
    "end": "2608340"
  },
  {
    "text": "okay so let's dive back to policies we I think we applied a very blanket policy",
    "start": "2608340",
    "end": "2616120"
  },
  {
    "text": "earlier but I think we want to be more specific you're never going to just say we want all services communicate that's",
    "start": "2616120",
    "end": "2622600"
  },
  {
    "text": "I think that's a little bit too broad so we can start looking into very granular",
    "start": "2622600",
    "end": "2627850"
  },
  {
    "text": "traffic permissions to do that let me delete the existing traffic permission we have so I'm gonna leave everything",
    "start": "2627850",
    "end": "2633370"
  },
  {
    "text": "there you go and what I'm gonna do next is add traffic permissions that",
    "start": "2633370",
    "end": "2639250"
  },
  {
    "start": "2634000",
    "end": "2671000"
  },
  {
    "text": "basically say hey I only want the front-end to talk to the back end and",
    "start": "2639250",
    "end": "2645430"
  },
  {
    "text": "the back end to talk to Postgres you'll see like these two traffic permissions over here which what I'm leaving out",
    "start": "2645430",
    "end": "2652780"
  },
  {
    "text": "here is Redis right I'm not giving permission for the backend to talk to Redis so by that we should not be able",
    "start": "2652780",
    "end": "2660100"
  },
  {
    "text": "to if I was to apply these permissions and I was to try to fetch any reviews",
    "start": "2660100",
    "end": "2665680"
  },
  {
    "text": "well no you won't be able to see those reviews so let's go ahead and apply this as you can see I'm going to leave out",
    "start": "2665680",
    "end": "2673240"
  },
  {
    "start": "2671000",
    "end": "2687000"
  },
  {
    "text": "the column front and here this is another part of this entire demo application that you can explore of how kong would play into this entire stack",
    "start": "2673240",
    "end": "2679900"
  },
  {
    "text": "so let me supply this",
    "start": "2679900",
    "end": "2685020"
  },
  {
    "text": "there you go so I have two new traffic permissions front to back end back into Postgres and",
    "start": "2686529",
    "end": "2691940"
  },
  {
    "start": "2687000",
    "end": "2714000"
  },
  {
    "text": "if we refresh the application it looks normal right you can see that the items on the screen but it were to read the",
    "start": "2691940",
    "end": "2699019"
  },
  {
    "text": "reviews the reviews that the backend API no longer has the ability to talk to Redis without the permission so this",
    "start": "2699019",
    "end": "2706039"
  },
  {
    "text": "this is how you can use that granularity to lockout services or to shut down services you don't want awesome so I",
    "start": "2706039",
    "end": "2715910"
  },
  {
    "start": "2714000",
    "end": "2788000"
  },
  {
    "text": "just explored adding neutral TLS and traffic permissions there's a lot more you can do health checks you can do",
    "start": "2715910",
    "end": "2722680"
  },
  {
    "text": "traffic routing based off tags and I'll leave you you know the link later for",
    "start": "2722680",
    "end": "2728869"
  },
  {
    "text": "you to explore these different policies we have built town but there's one more thing I do want to show you is",
    "start": "2728869",
    "end": "2733960"
  },
  {
    "text": "observability the ability to kind of see what's happening within all the data",
    "start": "2733960",
    "end": "2740240"
  },
  {
    "text": "planes and all your entire network right as traffic flows through it and this is where kuma comes into play with",
    "start": "2740240",
    "end": "2747829"
  },
  {
    "text": "Prometheus and Gravano the ability to do traffic metrics using these two tools is",
    "start": "2747829",
    "end": "2754759"
  },
  {
    "text": "really powerful as you can see we're gonna go back and use kuma CTO install",
    "start": "2754759",
    "end": "2760579"
  },
  {
    "text": "to install the necessary prometheus and core fauna components into your cluster",
    "start": "2760579",
    "end": "2768099"
  },
  {
    "text": "unchanged I actually have everything installed already so perfect so if I Luke you know get parts in the kuma coma",
    "start": "2768099",
    "end": "2776329"
  },
  {
    "text": "metrics namespace we'll have all the necessary permits and refine our components up and running and it'll be",
    "start": "2776329",
    "end": "2783140"
  },
  {
    "text": "all configured to work alongside cooler so this is a really quick way to go about it once we have metrics installed",
    "start": "2783140",
    "end": "2790339"
  },
  {
    "start": "2788000",
    "end": "2862000"
  },
  {
    "text": "all we have to do is basically revisit that mesh object that we have here earlier we we visited to enable mutual",
    "start": "2790339",
    "end": "2797420"
  },
  {
    "text": "TLS but now we want to enable Prometheus so it becomes necessary to include this",
    "start": "2797420",
    "end": "2804470"
  },
  {
    "text": "metrics Prometheus section in order to edit this we're basically telling kuma",
    "start": "2804470",
    "end": "2809900"
  },
  {
    "text": "hey we want to basically send all traffic along our cou our envoy data planes to this Prometheus",
    "start": "2809900",
    "end": "2816620"
  },
  {
    "text": "and visualize it using Cortana oh one thing I noticed that I have see a",
    "start": "2816620",
    "end": "2829400"
  },
  {
    "text": "built-in you'll see that this does not have enable true so Oh bummer",
    "start": "2829400",
    "end": "2834410"
  },
  {
    "text": "second there you go",
    "start": "2834410",
    "end": "2839870"
  },
  {
    "text": "this one will have it so just now that didn't have enable true we enable this",
    "start": "2839870",
    "end": "2846590"
  },
  {
    "text": "cool so you'll see the mesh object default is configured again we can go back to the GUI to make sure it is",
    "start": "2846590",
    "end": "2853460"
  },
  {
    "text": "you'll see the mesh entity here as the Prometheus section and by these are the",
    "start": "2853460",
    "end": "2858470"
  },
  {
    "text": "default parameters you can change this as you see fit and now if we were to",
    "start": "2858470",
    "end": "2864470"
  },
  {
    "text": "port for the graph on a dashboard will be able to visualize the metrics flowing through our marketplace but before I do",
    "start": "2864470",
    "end": "2871970"
  },
  {
    "text": "that I'm just gonna kind of you know that's query for some more sundresses see what absurd prices we have here are",
    "start": "2871970",
    "end": "2878350"
  },
  {
    "text": "generate some traffic read some reviews we still can't read reviews because we don't have traffic permissions and now",
    "start": "2878350",
    "end": "2886220"
  },
  {
    "text": "let's go ahead and pour for that that oh",
    "start": "2886220",
    "end": "2891860"
  },
  {
    "text": "there we go sorry Griffin a pod for come",
    "start": "2891860",
    "end": "2900560"
  },
  {
    "text": "on metrics sorry three thousand right",
    "start": "2900560",
    "end": "2910130"
  },
  {
    "text": "there okay so we were to access localhost mm you'll see our graph on a",
    "start": "2910130",
    "end": "2915890"
  },
  {
    "text": "dashboard and by default you login with admin admin and we'll skip this and here",
    "start": "2915890",
    "end": "2922520"
  },
  {
    "start": "2921000",
    "end": "2946000"
  },
  {
    "text": "you'll see three dash words that we have built out for you first is the mesh - work so you'll see your overall mesh you",
    "start": "2922520",
    "end": "2929570"
  },
  {
    "text": "can see the amount data plays data planes are connected to the control plane the bytes flowing through on voya",
    "start": "2929570",
    "end": "2935150"
  },
  {
    "text": "as a whole all these great metrics are starting to flow in here but you can you know dive in more granularly and then",
    "start": "2935150",
    "end": "2941930"
  },
  {
    "text": "look at specifically what's happening within a data plane right through this so you can look at your data plane",
    "start": "2941930",
    "end": "2948380"
  },
  {
    "text": "metrics based off which data plane you can here and then lastly you can look at expand explicitly what's happening",
    "start": "2948380",
    "end": "2954619"
  },
  {
    "text": "between two services so you can choose I want see the source of front-end to back-end and see exactly what's",
    "start": "2954619",
    "end": "2961009"
  },
  {
    "text": "happening between those two so this gives you a really good way to visualize your network and get there so okay Marko",
    "start": "2961009",
    "end": "2969170"
  },
  {
    "text": "uh since we're running low on time I hand it back to you thank you Kevin",
    "start": "2969170",
    "end": "2975319"
  },
  {
    "text": "I was I was answering to a few questions in the Q&A in the Q&A section let me",
    "start": "2975319",
    "end": "2984319"
  },
  {
    "start": "2976000",
    "end": "2999000"
  },
  {
    "text": "share my screen again there we go can",
    "start": "2984319",
    "end": "2993170"
  },
  {
    "text": "you see it yep looking at it yeah",
    "start": "2993170",
    "end": "2998979"
  },
  {
    "text": "so one of the questions that's very common that has been asked is how Kumud",
    "start": "2998979",
    "end": "3005920"
  },
  {
    "start": "2999000",
    "end": "3144000"
  },
  {
    "text": "differs from east EO so we built we were looking into East you to extend East and",
    "start": "3005920",
    "end": "3011559"
  },
  {
    "text": "we found that there were some fundamental problems with extending extending east EO that made us want to",
    "start": "3011559",
    "end": "3019450"
  },
  {
    "text": "create a new control plane one of them is the fact that east EO is not an open project it doesn't provide an open",
    "start": "3019450",
    "end": "3026650"
  },
  {
    "text": "governance it's not being donated and we needed to have something that we could be contributing on that was open and so",
    "start": "3026650",
    "end": "3035680"
  },
  {
    "text": "that's one of the reasons why we made kuma open with open governance and you know it's the only control plane that",
    "start": "3035680",
    "end": "3041769"
  },
  {
    "text": "supports envoy that does that there is some other control planes that are also open and donated of course but they're",
    "start": "3041769",
    "end": "3047410"
  },
  {
    "text": "not built on top of a boy the second thing is sto as being for some other users that we've been working with quite",
    "start": "3047410",
    "end": "3054369"
  },
  {
    "text": "complex to deploy the deployment modes of East you'll have changed in the past",
    "start": "3054369",
    "end": "3060009"
  },
  {
    "text": "but we decided to provide an easier way to deploy the system since they want",
    "start": "3060009",
    "end": "3065380"
  },
  {
    "text": "without any to go back on the fundamental architectural decisions do we we made when creating kuma our also",
    "start": "3065380",
    "end": "3073539"
  },
  {
    "text": "work with use cases that are not 100% kubernetes ready yet kubernetes is a",
    "start": "3073539",
    "end": "3081249"
  },
  {
    "text": "journey for many users out there and some of them are transitioning their VM based workloads into kubernetes or",
    "start": "3081249",
    "end": "3087710"
  },
  {
    "text": "they are building new workloads in kubernetes but they still want to integrate with virtual machines so we",
    "start": "3087710",
    "end": "3094640"
  },
  {
    "text": "needed a system that could run across all of these different environments and not just for the greenfield kubernetes",
    "start": "3094640",
    "end": "3102550"
  },
  {
    "text": "applications therefore we built a system like uma that can run on pretty much anything it's portable so you can run on",
    "start": "3102550",
    "end": "3109370"
  },
  {
    "text": "virtual machines can run in kubernetes we can mix and match it doesn't really matter as long as the data planes are",
    "start": "3109370",
    "end": "3116990"
  },
  {
    "text": "able to you know retrieve their policies from the control point I will also build an API abstraction layer that allows us",
    "start": "3116990",
    "end": "3124640"
  },
  {
    "text": "to integrate Cooma with the CI CD in order to retrieve the resources the",
    "start": "3124640",
    "end": "3130310"
  },
  {
    "text": "koomer resources that are being created in an agnostic way by either using HTTP api as well as the CLI in addition to",
    "start": "3130310",
    "end": "3138050"
  },
  {
    "text": "the kubernetes CRD coop carol integration as well as the GUI we have",
    "start": "3138050",
    "end": "3145370"
  },
  {
    "start": "3144000",
    "end": "3274000"
  },
  {
    "text": "also made kuma multi-tenant as you know initio you know if if we want to support",
    "start": "3145370",
    "end": "3151970"
  },
  {
    "text": "the entire organization ideally you know we would want to have a large mesh for",
    "start": "3151970",
    "end": "3157790"
  },
  {
    "text": "all of the workloads but pragmatically different teams are going to be adopting mesh at different times and in certain",
    "start": "3157790",
    "end": "3163940"
  },
  {
    "text": "industries especially the financial one they are requesting some form of",
    "start": "3163940",
    "end": "3169280"
  },
  {
    "text": "isolation between one mesh and another so with Kula we can create as many meshes as we want but we don't have to",
    "start": "3169280",
    "end": "3174950"
  },
  {
    "text": "do that by creating one Coma Cluster for each match so with the ployed kuma once it's quite simple to use and quite",
    "start": "3174950",
    "end": "3181730"
  },
  {
    "text": "simple to maintain across every environment and we can do all of that",
    "start": "3181730",
    "end": "3186770"
  },
  {
    "text": "from one single control plane and most importantly we can do that in a vendor neutral way sea scum is in the process",
    "start": "3186770",
    "end": "3192590"
  },
  {
    "text": "of being donated to the sincere if you have more questions around Kumar I'll be happy to answer those questions in the",
    "start": "3192590",
    "end": "3199790"
  },
  {
    "text": "kuma slack chat as well as in the community call tomorrow so I'm going to be sharing the feelings you know after",
    "start": "3199790",
    "end": "3206690"
  },
  {
    "text": "wrapping up this presentation that you can check in order to get in touch with the core team as well as ask any",
    "start": "3206690",
    "end": "3212660"
  },
  {
    "text": "questions you may have so today we looked a few things we are transitioning the",
    "start": "3212660",
    "end": "3218009"
  },
  {
    "text": "way we're building our software from analytic to micro services as we do that as a result to that we're getting many",
    "start": "3218009",
    "end": "3224130"
  },
  {
    "text": "benefits we can build software in different technologies we can deploy them independently but also we're going",
    "start": "3224130",
    "end": "3230730"
  },
  {
    "text": "to be introducing more and more service connectivity across across across the board the network becomes a bigger part",
    "start": "3230730",
    "end": "3237269"
  },
  {
    "text": "of the overall picture and we have to manage the network we don't want two teams to be managing the network",
    "start": "3237269",
    "end": "3242880"
  },
  {
    "text": "themselves in their own applications we want to be able to delegate that to a data plane proxy and a control plane",
    "start": "3242880",
    "end": "3249000"
  },
  {
    "text": "that can manage how the network behavior is being enforced that is service Nash and one implementation of service mesh",
    "start": "3249000",
    "end": "3255390"
  },
  {
    "text": "is cooler so you can download cooler from Kumud or i/o as well as you can check out the github repositories for",
    "start": "3255390",
    "end": "3262920"
  },
  {
    "text": "the kuma the kuma GUI the comeup way by the way ships already built in into kuma so we don't have to deploy a separate",
    "start": "3262920",
    "end": "3268950"
  },
  {
    "text": "component it's all built in as well as the slack Channel as well as Twitter well thank you so much I've been",
    "start": "3268950",
    "end": "3276509"
  },
  {
    "start": "3274000",
    "end": "3402000"
  },
  {
    "text": "answering some Q&A but perhaps Kevin you want to you want to proxy some of those",
    "start": "3276509",
    "end": "3282210"
  },
  {
    "text": "questions to me so I can answer them live yeah so we have one that came from Capisce yeah static kuma own does kuma",
    "start": "3282210",
    "end": "3290009"
  },
  {
    "text": "only work with employers or plans to kind of consider other data plan providers today kuma works with envoy we",
    "start": "3290009",
    "end": "3298920"
  },
  {
    "text": "like envoy we believe that boy has been doing a great job into providing a very solid networking primitive for managing",
    "start": "3298920",
    "end": "3306180"
  },
  {
    "text": "all of these network requests so kuma is leveraging envoy for both l 4 and l 7",
    "start": "3306180",
    "end": "3312059"
  },
  {
    "text": "communication that makes kuma suitable not just for let's say more traditional",
    "start": "3312059",
    "end": "3318539"
  },
  {
    "text": "HTTP traffic but can really be put in front of anything so we can put come in front of anything that's exposing that's",
    "start": "3318539",
    "end": "3326430"
  },
  {
    "text": "listening on a TCP port we can put come in front of databases we can put come in front of log collectors like Kafka we",
    "start": "3326430",
    "end": "3333180"
  },
  {
    "text": "can put come in front of anything that's using TCP as the underlying protocol of",
    "start": "3333180",
    "end": "3338190"
  },
  {
    "text": "course as an extension to that come in also supports your PC HTTP and so on but",
    "start": "3338190",
    "end": "3344609"
  },
  {
    "text": "really it can be used for any any source of traffic so today we're leveraging envoy for these kind of things and we",
    "start": "3344609",
    "end": "3351750"
  },
  {
    "text": "have not found any limitation in our void that prevents us from achieving our",
    "start": "3351750",
    "end": "3357690"
  },
  {
    "text": "goals which is to create a more secure and in manageable observable Network",
    "start": "3357690",
    "end": "3364170"
  },
  {
    "text": "overlay we have contributed back to envoy in those instances where we needed",
    "start": "3364170",
    "end": "3369539"
  },
  {
    "text": "something that our boy didn't provide and the Android community is being very helpful and very collaborative with us",
    "start": "3369539",
    "end": "3375329"
  },
  {
    "text": "so so far we're not planning to support other other data plane proxies but of",
    "start": "3375329",
    "end": "3381809"
  },
  {
    "text": "course things change and so I'll be happy to hear your feedback in the community channels if you think if you",
    "start": "3381809",
    "end": "3388740"
  },
  {
    "text": "think that Combe is not doing something that should be doing or if you have suggestions on supporting other data",
    "start": "3388740",
    "end": "3394950"
  },
  {
    "text": "playing proxies but so far in the foreseeable future Elmo is going to be the data player of choice awesome and Marco we could update",
    "start": "3394950",
    "end": "3405480"
  },
  {
    "start": "3402000",
    "end": "3470000"
  },
  {
    "text": "the sides real quick the kuma - mesh sock is for folks that",
    "start": "3405480",
    "end": "3410490"
  },
  {
    "text": "already joined so I want to include the link I'll just send it out to chat right now so in order to sign up for the slack",
    "start": "3410490",
    "end": "3418440"
  },
  {
    "text": "it's actually chat Kumud I'll just wanna make sure everyone gets that correct",
    "start": "3418440",
    "end": "3424380"
  },
  {
    "text": "link there and then one last question before I wrap it up since we ran out of time so yeah those links will SH be",
    "start": "3424380",
    "end": "3435750"
  },
  {
    "text": "sharing thank you all for for joining today Marco Kevin great stuff thank you",
    "start": "3435750",
    "end": "3440819"
  },
  {
    "text": "excited to hear this projects can be in the process of getting donated since CN CF and great overview with SEO stuff for",
    "start": "3440819",
    "end": "3449700"
  },
  {
    "text": "those who attended the webinar recording and the slides will be available today so those these links like the chat one",
    "start": "3449700",
    "end": "3457289"
  },
  {
    "text": "and the slack one will be available at that time thank you all for joining us",
    "start": "3457289",
    "end": "3463200"
  },
  {
    "text": "today and see you at a future CN CF webinar have a great day thank you thanks everyone",
    "start": "3463200",
    "end": "3471319"
  }
]