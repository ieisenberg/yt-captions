[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "hello everybody and welcome to our 2021",
    "start": "1199",
    "end": "4240"
  },
  {
    "text": "sig api machinery maintainers track",
    "start": "4240",
    "end": "7200"
  },
  {
    "text": "my name is federico von giovanni and i'm",
    "start": "7200",
    "end": "9599"
  },
  {
    "text": "the co-chair of seek api machinery in",
    "start": "9599",
    "end": "11759"
  },
  {
    "text": "kubernetes",
    "start": "11759",
    "end": "13519"
  },
  {
    "text": "we named our talk today applying what we",
    "start": "13519",
    "end": "15920"
  },
  {
    "text": "have learned",
    "start": "15920",
    "end": "17039"
  },
  {
    "text": "because on one hand we are going to talk",
    "start": "17039",
    "end": "19920"
  },
  {
    "text": "about servers i applied a feature that",
    "start": "19920",
    "end": "22480"
  },
  {
    "text": "has just graduated to ga in 122 and on",
    "start": "22480",
    "end": "25840"
  },
  {
    "text": "the other hand we are also going to",
    "start": "25840",
    "end": "27599"
  },
  {
    "text": "share some learning some practical",
    "start": "27599",
    "end": "29359"
  },
  {
    "text": "experiences",
    "start": "29359",
    "end": "30640"
  },
  {
    "text": "on priority and fairness",
    "start": "30640",
    "end": "34160"
  },
  {
    "text": "okay so this is what we have for you",
    "start": "34640",
    "end": "36719"
  },
  {
    "text": "today",
    "start": "36719",
    "end": "37840"
  },
  {
    "text": "first now that server side applies ga",
    "start": "37840",
    "end": "41200"
  },
  {
    "text": "joe is going to talk us through how you",
    "start": "41200",
    "end": "43920"
  },
  {
    "text": "should be using this feature when you",
    "start": "43920",
    "end": "45600"
  },
  {
    "text": "are dealing with controllers",
    "start": "45600",
    "end": "48559"
  },
  {
    "text": "second abu is going to share his deep",
    "start": "48559",
    "end": "51199"
  },
  {
    "text": "knowledge and some practical experiences",
    "start": "51199",
    "end": "53360"
  },
  {
    "text": "using and applying the feature of",
    "start": "53360",
    "end": "55600"
  },
  {
    "text": "priority and firmness",
    "start": "55600",
    "end": "58399"
  },
  {
    "text": "finally i will use two minutes at the",
    "start": "58399",
    "end": "60480"
  },
  {
    "text": "end to give you some practical",
    "start": "60480",
    "end": "61920"
  },
  {
    "text": "information about the seat and how i you",
    "start": "61920",
    "end": "64640"
  },
  {
    "text": "can contribute and get more involved",
    "start": "64640",
    "end": "67840"
  },
  {
    "text": "so with that introduction done i will",
    "start": "67840",
    "end": "70080"
  },
  {
    "text": "leave you with the speakers i hope you",
    "start": "70080",
    "end": "72159"
  },
  {
    "text": "learn and enjoy",
    "start": "72159",
    "end": "75280"
  },
  {
    "start": "76000",
    "end": "362000"
  },
  {
    "text": "hi my name is joe batts i'm an engineer",
    "start": "77600",
    "end": "79680"
  },
  {
    "text": "at google and a contributor to stig api",
    "start": "79680",
    "end": "81759"
  },
  {
    "text": "machinery today i'm going to talk about",
    "start": "81759",
    "end": "83439"
  },
  {
    "text": "some of the new",
    "start": "83439",
    "end": "84880"
  },
  {
    "text": "server-side apply functionality that",
    "start": "84880",
    "end": "86320"
  },
  {
    "text": "we've added for controllers this is part",
    "start": "86320",
    "end": "88960"
  },
  {
    "text": "of",
    "start": "88960",
    "end": "90000"
  },
  {
    "text": "the kubernetes 1.20 and newer releases",
    "start": "90000",
    "end": "93680"
  },
  {
    "text": "to give a little bit of context let's",
    "start": "93680",
    "end": "95280"
  },
  {
    "text": "talk about how you can access apply both",
    "start": "95280",
    "end": "97840"
  },
  {
    "text": "as a human and control and as a",
    "start": "97840",
    "end": "99280"
  },
  {
    "text": "controller",
    "start": "99280",
    "end": "101680"
  },
  {
    "text": "in the original client-side",
    "start": "101680",
    "end": "103040"
  },
  {
    "text": "implementation of apply you could access",
    "start": "103040",
    "end": "105439"
  },
  {
    "text": "it through coupe cuddle apply and you",
    "start": "105439",
    "end": "107360"
  },
  {
    "text": "would provide a file that included the",
    "start": "107360",
    "end": "109600"
  },
  {
    "text": "subset of fields of the object that you",
    "start": "109600",
    "end": "111280"
  },
  {
    "text": "cared about",
    "start": "111280",
    "end": "112479"
  },
  {
    "text": "whenever you change any of those values",
    "start": "112479",
    "end": "114000"
  },
  {
    "text": "and called apply again it would say it",
    "start": "114000",
    "end": "116240"
  },
  {
    "text": "would tell the server to change just",
    "start": "116240",
    "end": "117759"
  },
  {
    "text": "that particular value",
    "start": "117759",
    "end": "120799"
  },
  {
    "text": "there was no support for controllers for",
    "start": "121680",
    "end": "123280"
  },
  {
    "text": "this there's no reasonable way to use it",
    "start": "123280",
    "end": "125200"
  },
  {
    "text": "right first of all all the the applied",
    "start": "125200",
    "end": "128319"
  },
  {
    "text": "logic was bundled directly into cuddle",
    "start": "128319",
    "end": "130959"
  },
  {
    "text": "the only way to even theoretically",
    "start": "130959",
    "end": "132560"
  },
  {
    "text": "access it would have been to shell out",
    "start": "132560",
    "end": "134239"
  },
  {
    "text": "to cuddle but cuddle's a stateful thing",
    "start": "134239",
    "end": "136959"
  },
  {
    "text": "and controllers sometimes used to be ha",
    "start": "136959",
    "end": "139440"
  },
  {
    "text": "it just really wasn't a good fit",
    "start": "139440",
    "end": "143640"
  },
  {
    "text": "for server side apply",
    "start": "144160",
    "end": "146319"
  },
  {
    "text": "it's really easy to use the user",
    "start": "146319",
    "end": "147520"
  },
  {
    "text": "experience is almost the same as client",
    "start": "147520",
    "end": "149360"
  },
  {
    "text": "side except for you just add the dash",
    "start": "149360",
    "end": "151040"
  },
  {
    "text": "server-side flag",
    "start": "151040",
    "end": "152800"
  },
  {
    "text": "and you get all the benefits now all the",
    "start": "152800",
    "end": "154400"
  },
  {
    "text": "merging happens on the server",
    "start": "154400",
    "end": "157040"
  },
  {
    "text": "all the fields are tracked on the server",
    "start": "157040",
    "end": "158720"
  },
  {
    "text": "so ownership is very clear there's a",
    "start": "158720",
    "end": "160319"
  },
  {
    "text": "bunch of conflict detection and",
    "start": "160319",
    "end": "161519"
  },
  {
    "text": "resolution that goes on on the server",
    "start": "161519",
    "end": "163360"
  },
  {
    "text": "it's a much better implementation",
    "start": "163360",
    "end": "165440"
  },
  {
    "text": "of apply i would recommend everybody",
    "start": "165440",
    "end": "167680"
  },
  {
    "text": "switch to it",
    "start": "167680",
    "end": "169280"
  },
  {
    "text": "and nice conveniently it's",
    "start": "169280",
    "end": "171840"
  },
  {
    "text": "accessible to controllers you don't need",
    "start": "171840",
    "end": "174160"
  },
  {
    "text": "coop cuddle to access it you can access",
    "start": "174160",
    "end": "176319"
  },
  {
    "text": "it through the client go api",
    "start": "176319",
    "end": "178319"
  },
  {
    "text": "and today i'm going to focus on a bunch",
    "start": "178319",
    "end": "180239"
  },
  {
    "text": "of things that we've done to make this",
    "start": "180239",
    "end": "181680"
  },
  {
    "text": "really convenient to use from",
    "start": "181680",
    "end": "183440"
  },
  {
    "text": "controllers",
    "start": "183440",
    "end": "185920"
  },
  {
    "text": "to help motivate the example let's look",
    "start": "185920",
    "end": "187840"
  },
  {
    "text": "at what was available",
    "start": "187840",
    "end": "189680"
  },
  {
    "text": "um",
    "start": "189680",
    "end": "190640"
  },
  {
    "text": "in the client in 1.20 and earlier and",
    "start": "190640",
    "end": "193440"
  },
  {
    "text": "then we'll show how we improved on this",
    "start": "193440",
    "end": "195519"
  },
  {
    "text": "so in kubernetes 120 this is what the",
    "start": "195519",
    "end": "197920"
  },
  {
    "text": "api looks like you access server side",
    "start": "197920",
    "end": "200640"
  },
  {
    "text": "apply through the patch operation by",
    "start": "200640",
    "end": "202239"
  },
  {
    "text": "setting the patch type",
    "start": "202239",
    "end": "204560"
  },
  {
    "text": "appropriately and then you can make your",
    "start": "204560",
    "end": "206239"
  },
  {
    "text": "call",
    "start": "206239",
    "end": "207360"
  },
  {
    "text": "so let's try and actually use that and",
    "start": "207360",
    "end": "209200"
  },
  {
    "text": "go through an example case",
    "start": "209200",
    "end": "212159"
  },
  {
    "text": "and i'm going to pause here and give a",
    "start": "212159",
    "end": "213680"
  },
  {
    "text": "warning",
    "start": "213680",
    "end": "214799"
  },
  {
    "text": "i like the doctor strange idea of you",
    "start": "214799",
    "end": "217200"
  },
  {
    "text": "should put the warnings before the",
    "start": "217200",
    "end": "218640"
  },
  {
    "text": "spells so i'm going to do that",
    "start": "218640",
    "end": "221200"
  },
  {
    "text": "do not do this",
    "start": "221200",
    "end": "222879"
  },
  {
    "text": "if you",
    "start": "222879",
    "end": "224000"
  },
  {
    "text": "do what i show in this example here the",
    "start": "224000",
    "end": "225519"
  },
  {
    "text": "ghost trucks are going to",
    "start": "225519",
    "end": "227519"
  },
  {
    "text": "set fields that you didn't expect and",
    "start": "227519",
    "end": "229040"
  },
  {
    "text": "cause all kinds of problems",
    "start": "229040",
    "end": "231040"
  },
  {
    "text": "all right with that warning out of the",
    "start": "231040",
    "end": "232239"
  },
  {
    "text": "way what we're going to try and do is",
    "start": "232239",
    "end": "234239"
  },
  {
    "text": "we're going to try and programmatically",
    "start": "234239",
    "end": "235439"
  },
  {
    "text": "create an apply request",
    "start": "235439",
    "end": "237439"
  },
  {
    "text": "so",
    "start": "237439",
    "end": "238239"
  },
  {
    "text": "the obvious way to do that you know when",
    "start": "238239",
    "end": "240159"
  },
  {
    "text": "we do create an update the first thing",
    "start": "240159",
    "end": "241920"
  },
  {
    "text": "we do is we use the ghost structs to",
    "start": "241920",
    "end": "244000"
  },
  {
    "text": "construct",
    "start": "244000",
    "end": "245120"
  },
  {
    "text": "the",
    "start": "245120",
    "end": "246000"
  },
  {
    "text": "the request that we want to send to the",
    "start": "246000",
    "end": "247439"
  },
  {
    "text": "server",
    "start": "247439",
    "end": "248959"
  },
  {
    "text": "so we can do that for reply we're going",
    "start": "248959",
    "end": "251040"
  },
  {
    "text": "to create",
    "start": "251040",
    "end": "252319"
  },
  {
    "text": "a request that just sets the min",
    "start": "252319",
    "end": "253680"
  },
  {
    "text": "replicas value to zero all the other",
    "start": "253680",
    "end": "256079"
  },
  {
    "text": "fields here are just the coordinates of",
    "start": "256079",
    "end": "257600"
  },
  {
    "text": "the object that we're changing",
    "start": "257600",
    "end": "260479"
  },
  {
    "text": "next we need to call patch",
    "start": "260479",
    "end": "263120"
  },
  {
    "text": "with the typeset to apply",
    "start": "263120",
    "end": "265520"
  },
  {
    "text": "and that takes the data as a byte array",
    "start": "265520",
    "end": "267919"
  },
  {
    "text": "of yaml so we have to do some kind of",
    "start": "267919",
    "end": "269360"
  },
  {
    "text": "conversion i'll do that here",
    "start": "269360",
    "end": "271919"
  },
  {
    "text": "and that's it we've constructed and sent",
    "start": "271919",
    "end": "273600"
  },
  {
    "text": "an apply request to the server",
    "start": "273600",
    "end": "277120"
  },
  {
    "text": "on the left here is what i intended my",
    "start": "278320",
    "end": "280720"
  },
  {
    "text": "client to send to the server and the",
    "start": "280720",
    "end": "282720"
  },
  {
    "text": "right is what actually got sent to the",
    "start": "282720",
    "end": "284400"
  },
  {
    "text": "server and you're going to notice a",
    "start": "284400",
    "end": "285440"
  },
  {
    "text": "couple differences um in particular",
    "start": "285440",
    "end": "288560"
  },
  {
    "text": "there is this max replicas equals zero",
    "start": "288560",
    "end": "291520"
  },
  {
    "text": "that got sent to the server",
    "start": "291520",
    "end": "294560"
  },
  {
    "text": "this is pretty bad um so what this tells",
    "start": "294560",
    "end": "297840"
  },
  {
    "text": "the server to do is whatever service",
    "start": "297840",
    "end": "300400"
  },
  {
    "text": "this auto scaler controls selling to",
    "start": "300400",
    "end": "302880"
  },
  {
    "text": "downscale to zero pots",
    "start": "302880",
    "end": "304880"
  },
  {
    "text": "if this is a production service running",
    "start": "304880",
    "end": "306479"
  },
  {
    "text": "hundreds of pods across the cluster we",
    "start": "306479",
    "end": "308400"
  },
  {
    "text": "just downscaled that to zero pages were",
    "start": "308400",
    "end": "310320"
  },
  {
    "text": "definitely gonna go off this could be a",
    "start": "310320",
    "end": "311840"
  },
  {
    "text": "major outage",
    "start": "311840",
    "end": "313360"
  },
  {
    "text": "and this is particularly worrying",
    "start": "313360",
    "end": "314960"
  },
  {
    "text": "because there was nothing in our",
    "start": "314960",
    "end": "318720"
  },
  {
    "text": "request that said anything about this",
    "start": "318720",
    "end": "320720"
  },
  {
    "text": "this field there's nothing here about",
    "start": "320720",
    "end": "322479"
  },
  {
    "text": "max replicas",
    "start": "322479",
    "end": "324960"
  },
  {
    "text": "so why did why did this get included in",
    "start": "324960",
    "end": "327680"
  },
  {
    "text": "our request",
    "start": "327680",
    "end": "328960"
  },
  {
    "text": "well the answer lies in the way that the",
    "start": "328960",
    "end": "330479"
  },
  {
    "text": "ghost trucks work",
    "start": "330479",
    "end": "332320"
  },
  {
    "text": "so um here is the horizontal autoscaler",
    "start": "332320",
    "end": "335120"
  },
  {
    "text": "spec",
    "start": "335120",
    "end": "335919"
  },
  {
    "text": "the max replicas field you'll notice",
    "start": "335919",
    "end": "337840"
  },
  {
    "text": "that it's an n32 it's not a pointer",
    "start": "337840",
    "end": "340479"
  },
  {
    "text": "there's no omit empty json tag set on it",
    "start": "340479",
    "end": "343520"
  },
  {
    "text": "and so the way that this gets serialized",
    "start": "343520",
    "end": "346080"
  },
  {
    "text": "is that if you don't actually set max",
    "start": "346080",
    "end": "348000"
  },
  {
    "text": "replicas to zero or to any value",
    "start": "348000",
    "end": "350720"
  },
  {
    "text": "it's going to get zero valued",
    "start": "350720",
    "end": "352880"
  },
  {
    "text": "automatically by go and that's going to",
    "start": "352880",
    "end": "355120"
  },
  {
    "text": "become the value that gets sent over the",
    "start": "355120",
    "end": "356639"
  },
  {
    "text": "wire",
    "start": "356639",
    "end": "358639"
  },
  {
    "text": "and that's why you see what happened",
    "start": "358639",
    "end": "362479"
  },
  {
    "start": "362000",
    "end": "588000"
  },
  {
    "text": "this is pretty surprising um and you",
    "start": "363360",
    "end": "365120"
  },
  {
    "text": "should get a couple takeaways from this",
    "start": "365120",
    "end": "367280"
  },
  {
    "text": "the first takeaway is that the ghost",
    "start": "367280",
    "end": "369520"
  },
  {
    "text": "trucks are absolutely not safe to be",
    "start": "369520",
    "end": "372160"
  },
  {
    "text": "used with apply",
    "start": "372160",
    "end": "374560"
  },
  {
    "text": "they're perfectly fine for create an",
    "start": "374560",
    "end": "376160"
  },
  {
    "text": "update they were designed for those use",
    "start": "376160",
    "end": "377600"
  },
  {
    "text": "cases but apply as an additional",
    "start": "377600",
    "end": "379440"
  },
  {
    "text": "constraint that you need to only send",
    "start": "379440",
    "end": "381039"
  },
  {
    "text": "the fields that you care about so all",
    "start": "381039",
    "end": "383120"
  },
  {
    "text": "the defaulting and zero valuing that can",
    "start": "383120",
    "end": "385120"
  },
  {
    "text": "happen in the ghost trucks which is safe",
    "start": "385120",
    "end": "387120"
  },
  {
    "text": "for create an update is not safe for why",
    "start": "387120",
    "end": "388960"
  },
  {
    "text": "you cannot use them there are many other",
    "start": "388960",
    "end": "390880"
  },
  {
    "text": "examples throughout the code base some",
    "start": "390880",
    "end": "392720"
  },
  {
    "text": "of them are more or less subtle",
    "start": "392720",
    "end": "394960"
  },
  {
    "text": "but the kind of the warning here is the",
    "start": "394960",
    "end": "397120"
  },
  {
    "text": "same there's just too many foot guns in",
    "start": "397120",
    "end": "399520"
  },
  {
    "text": "the use of ghost trucks you should just",
    "start": "399520",
    "end": "400880"
  },
  {
    "text": "not do this",
    "start": "400880",
    "end": "403440"
  },
  {
    "text": "the other takeaway you should hopefully",
    "start": "403440",
    "end": "405600"
  },
  {
    "text": "get is this is totally a fine way to um",
    "start": "405600",
    "end": "409599"
  },
  {
    "text": "send",
    "start": "409599",
    "end": "410639"
  },
  {
    "text": "uh you know a yaml file that you've",
    "start": "410639",
    "end": "412560"
  },
  {
    "text": "handwritten you can load that file from",
    "start": "412560",
    "end": "414960"
  },
  {
    "text": "disk and then you can send it to",
    "start": "414960",
    "end": "417599"
  },
  {
    "text": "um a server side apply through the patch",
    "start": "417599",
    "end": "419840"
  },
  {
    "text": "operation that's fine it's just the",
    "start": "419840",
    "end": "421520"
  },
  {
    "text": "ghost trucks here that are the problem",
    "start": "421520",
    "end": "425039"
  },
  {
    "text": "all right so what i'm going to do",
    "start": "425039",
    "end": "426000"
  },
  {
    "text": "instead we still need some kind of",
    "start": "426000",
    "end": "427199"
  },
  {
    "text": "support for controllers and the go",
    "start": "427199",
    "end": "428560"
  },
  {
    "text": "structure in work so in 121 what we",
    "start": "428560",
    "end": "430960"
  },
  {
    "text": "introduced is a bunch of packages",
    "start": "430960",
    "end": "433440"
  },
  {
    "text": "bundled under this apply configurations",
    "start": "433440",
    "end": "435759"
  },
  {
    "text": "package in client go",
    "start": "435759",
    "end": "438240"
  },
  {
    "text": "and there is a",
    "start": "438240",
    "end": "440240"
  },
  {
    "text": "a new",
    "start": "440240",
    "end": "441759"
  },
  {
    "text": "go struct that we've generated which we",
    "start": "441759",
    "end": "444000"
  },
  {
    "text": "call an apply configuration where all",
    "start": "444000",
    "end": "446000"
  },
  {
    "text": "the fields are optional",
    "start": "446000",
    "end": "448160"
  },
  {
    "text": "and they're all pointers so if you don't",
    "start": "448160",
    "end": "450000"
  },
  {
    "text": "explicitly include a field it's just not",
    "start": "450000",
    "end": "452160"
  },
  {
    "text": "going to be sent to the server at all",
    "start": "452160",
    "end": "453360"
  },
  {
    "text": "this just kind of solves the immediate",
    "start": "453360",
    "end": "454800"
  },
  {
    "text": "problem that we described",
    "start": "454800",
    "end": "457759"
  },
  {
    "text": "we added some conveniences around these",
    "start": "458240",
    "end": "459680"
  },
  {
    "text": "newly generated types um so each one has",
    "start": "459680",
    "end": "462240"
  },
  {
    "text": "a constructor so you can very quickly",
    "start": "462240",
    "end": "464240"
  },
  {
    "text": "construct an object",
    "start": "464240",
    "end": "466879"
  },
  {
    "text": "it automatically sets the name the kind",
    "start": "466879",
    "end": "468879"
  },
  {
    "text": "in the api version for you here",
    "start": "468879",
    "end": "470960"
  },
  {
    "text": "we also have these builder functions",
    "start": "470960",
    "end": "473360"
  },
  {
    "text": "since all the fields are pointers we",
    "start": "473360",
    "end": "475280"
  },
  {
    "text": "provide these utility functions to set",
    "start": "475280",
    "end": "476800"
  },
  {
    "text": "the fields and you don't have to provide",
    "start": "476800",
    "end": "478560"
  },
  {
    "text": "the pointer value you just provide an",
    "start": "478560",
    "end": "480000"
  },
  {
    "text": "actual reference and this is a lot more",
    "start": "480000",
    "end": "482000"
  },
  {
    "text": "convenient",
    "start": "482000",
    "end": "483280"
  },
  {
    "text": "especially for primitive types i'll show",
    "start": "483280",
    "end": "484879"
  },
  {
    "text": "some examples of why that would be",
    "start": "484879",
    "end": "486560"
  },
  {
    "text": "difficult otherwise in just a moment",
    "start": "486560",
    "end": "489199"
  },
  {
    "text": "and then of course the last thing you do",
    "start": "489199",
    "end": "491440"
  },
  {
    "text": "is you call apply we generated the new",
    "start": "491440",
    "end": "494400"
  },
  {
    "text": "apply function right next to create and",
    "start": "494400",
    "end": "496400"
  },
  {
    "text": "update and delete so you no longer have",
    "start": "496400",
    "end": "498240"
  },
  {
    "text": "to go through patch to do server side",
    "start": "498240",
    "end": "499840"
  },
  {
    "text": "apply also this takes the apply",
    "start": "499840",
    "end": "502000"
  },
  {
    "text": "configuration type as the argument so",
    "start": "502000",
    "end": "504400"
  },
  {
    "text": "you don't have to do any serialization",
    "start": "504400",
    "end": "505680"
  },
  {
    "text": "and it's really clear what type you're",
    "start": "505680",
    "end": "507759"
  },
  {
    "text": "expected to construct and send in here",
    "start": "507759",
    "end": "511440"
  },
  {
    "text": "all right so um i mentioned that we",
    "start": "511599",
    "end": "514000"
  },
  {
    "text": "needed these kind of builder utility",
    "start": "514000",
    "end": "515919"
  },
  {
    "text": "functions to get around some problems",
    "start": "515919",
    "end": "517200"
  },
  {
    "text": "with pointers",
    "start": "517200",
    "end": "518399"
  },
  {
    "text": "let's break that down a little bit so",
    "start": "518399",
    "end": "520240"
  },
  {
    "text": "one there's a limitation and go where",
    "start": "520240",
    "end": "521839"
  },
  {
    "text": "you cannot do an inline pointer to a",
    "start": "521839",
    "end": "523839"
  },
  {
    "text": "literal so um ampersand zero is is not a",
    "start": "523839",
    "end": "527279"
  },
  {
    "text": "legal expression income",
    "start": "527279",
    "end": "529920"
  },
  {
    "text": "you can assign a variable to zero and",
    "start": "529920",
    "end": "531839"
  },
  {
    "text": "then you can take the a reference of",
    "start": "531839",
    "end": "533519"
  },
  {
    "text": "that",
    "start": "533519",
    "end": "534480"
  },
  {
    "text": "but then you would have to in this",
    "start": "534480",
    "end": "535920"
  },
  {
    "text": "example you'd have to like put a line up",
    "start": "535920",
    "end": "537760"
  },
  {
    "text": "above your actual like",
    "start": "537760",
    "end": "540240"
  },
  {
    "text": "um",
    "start": "540240",
    "end": "541279"
  },
  {
    "text": "inline go struck declaration saying",
    "start": "541279",
    "end": "544399"
  },
  {
    "text": "every single literal that you're going",
    "start": "544399",
    "end": "545519"
  },
  {
    "text": "to then include in your in your in your",
    "start": "545519",
    "end": "547440"
  },
  {
    "text": "actual struct",
    "start": "547440",
    "end": "549040"
  },
  {
    "text": "that's inconvenient so uh there's uh you",
    "start": "549040",
    "end": "551839"
  },
  {
    "text": "know other people have run into this",
    "start": "551839",
    "end": "553200"
  },
  {
    "text": "with go this is not a problem specific",
    "start": "553200",
    "end": "555040"
  },
  {
    "text": "to our use case um and so there's",
    "start": "555040",
    "end": "556959"
  },
  {
    "text": "libraries that people have written to",
    "start": "556959",
    "end": "558160"
  },
  {
    "text": "kind of get around this um",
    "start": "558160",
    "end": "560240"
  },
  {
    "text": "kubernetes has this pointer library you",
    "start": "560240",
    "end": "562160"
  },
  {
    "text": "can provide a literal and it returns a",
    "start": "562160",
    "end": "563680"
  },
  {
    "text": "pointer of a literal",
    "start": "563680",
    "end": "565360"
  },
  {
    "text": "unfortunately this doesn't really fully",
    "start": "565360",
    "end": "567600"
  },
  {
    "text": "solve the problem kubernetes has a lot",
    "start": "567600",
    "end": "569760"
  },
  {
    "text": "of idiom types",
    "start": "569760",
    "end": "571680"
  },
  {
    "text": "and you can't pass them to pointed out",
    "start": "571680",
    "end": "574160"
  },
  {
    "text": "string because they're their own type",
    "start": "574160",
    "end": "575680"
  },
  {
    "text": "they're some type ref to string but",
    "start": "575680",
    "end": "577040"
  },
  {
    "text": "they're actually you know in this case",
    "start": "577040",
    "end": "579440"
  },
  {
    "text": "uh the protocol one is core v one dot",
    "start": "579440",
    "end": "581440"
  },
  {
    "text": "protocol that's its type and since go",
    "start": "581440",
    "end": "583519"
  },
  {
    "text": "doesn't have any generics there's no way",
    "start": "583519",
    "end": "585440"
  },
  {
    "text": "to write one of these pointer libraries",
    "start": "585440",
    "end": "587040"
  },
  {
    "text": "for it",
    "start": "587040",
    "end": "589360"
  },
  {
    "text": "now if you still don't like the builder",
    "start": "589360",
    "end": "591279"
  },
  {
    "text": "functions and you would rather you you",
    "start": "591279",
    "end": "593440"
  },
  {
    "text": "prefer the use of ghost drugs that's",
    "start": "593440",
    "end": "595600"
  },
  {
    "text": "fine you can actually use the structs um",
    "start": "595600",
    "end": "598560"
  },
  {
    "text": "when we implemented these um when we",
    "start": "598560",
    "end": "600800"
  },
  {
    "text": "generated these apply configuration",
    "start": "600800",
    "end": "602240"
  },
  {
    "text": "types expect we exported all of the",
    "start": "602240",
    "end": "605120"
  },
  {
    "text": "fields so you can still use the fields",
    "start": "605120",
    "end": "607519"
  },
  {
    "text": "directly if that's what you prefer",
    "start": "607519",
    "end": "610800"
  },
  {
    "text": "but i'll warn you every field is",
    "start": "610800",
    "end": "612480"
  },
  {
    "text": "optional there are a lot of pointers to",
    "start": "612480",
    "end": "614160"
  },
  {
    "text": "deal with and you might end up changing",
    "start": "614160",
    "end": "615839"
  },
  {
    "text": "your mind if you go that route and",
    "start": "615839",
    "end": "617200"
  },
  {
    "text": "actually find the builders are pretty",
    "start": "617200",
    "end": "618720"
  },
  {
    "text": "helpful",
    "start": "618720",
    "end": "620399"
  },
  {
    "text": "the other thing i'll say is in the",
    "start": "620399",
    "end": "621680"
  },
  {
    "text": "future this could change right",
    "start": "621680",
    "end": "623600"
  },
  {
    "text": "go could add support for generics it",
    "start": "623600",
    "end": "625839"
  },
  {
    "text": "could",
    "start": "625839",
    "end": "626720"
  },
  {
    "text": "fix the support for",
    "start": "626720",
    "end": "628640"
  },
  {
    "text": "um",
    "start": "628640",
    "end": "629760"
  },
  {
    "text": "you know inline",
    "start": "629760",
    "end": "631839"
  },
  {
    "text": "pointer literals in which case this",
    "start": "631839",
    "end": "634160"
  },
  {
    "text": "might become a lot more convenient and",
    "start": "634160",
    "end": "635519"
  },
  {
    "text": "the builders might not be as useful if",
    "start": "635519",
    "end": "637920"
  },
  {
    "text": "any of that happens since we've already",
    "start": "637920",
    "end": "639920"
  },
  {
    "text": "exposed all the",
    "start": "639920",
    "end": "641440"
  },
  {
    "text": "all the fields you could just start",
    "start": "641440",
    "end": "643040"
  },
  {
    "text": "using that new functionality so that way",
    "start": "643040",
    "end": "644560"
  },
  {
    "text": "we've kind of made our implementation",
    "start": "644560",
    "end": "645839"
  },
  {
    "text": "future purif while still at the same",
    "start": "645839",
    "end": "647680"
  },
  {
    "text": "time trying to make things as convenient",
    "start": "647680",
    "end": "649279"
  },
  {
    "text": "as possible for people today",
    "start": "649279",
    "end": "652560"
  },
  {
    "text": "all right so now that's how you use",
    "start": "652560",
    "end": "654480"
  },
  {
    "text": "controllers in the basic case let's",
    "start": "654480",
    "end": "656640"
  },
  {
    "text": "let's talk a little bit about migrating",
    "start": "656640",
    "end": "659120"
  },
  {
    "text": "controllers to server side apply",
    "start": "659120",
    "end": "662160"
  },
  {
    "text": "so um in the basic case you've got a",
    "start": "662160",
    "end": "664800"
  },
  {
    "text": "controller that just has a single",
    "start": "664800",
    "end": "666320"
  },
  {
    "text": "reconciliation that's actually really",
    "start": "666320",
    "end": "668320"
  },
  {
    "text": "easy to migrate to apply usually you",
    "start": "668320",
    "end": "670160"
  },
  {
    "text": "just find the one update call you made",
    "start": "670160",
    "end": "672399"
  },
  {
    "text": "and instead of calling update you call",
    "start": "672399",
    "end": "674880"
  },
  {
    "text": "apply and sell the same fields that you",
    "start": "674880",
    "end": "676640"
  },
  {
    "text": "are changing when you call to update",
    "start": "676640",
    "end": "679600"
  },
  {
    "text": "um you do it unconditionally right even",
    "start": "679600",
    "end": "681519"
  },
  {
    "text": "if the field hasn't changed in the",
    "start": "681519",
    "end": "683600"
  },
  {
    "text": "current state of the object you still",
    "start": "683600",
    "end": "685519"
  },
  {
    "text": "you still call it pi",
    "start": "685519",
    "end": "687279"
  },
  {
    "text": "one of the properties of apply is that",
    "start": "687279",
    "end": "689519"
  },
  {
    "text": "if you don't include a field in your",
    "start": "689519",
    "end": "691279"
  },
  {
    "text": "apply request",
    "start": "691279",
    "end": "693040"
  },
  {
    "text": "then the server",
    "start": "693040",
    "end": "694640"
  },
  {
    "text": "interprets that as you're not carrying",
    "start": "694640",
    "end": "696000"
  },
  {
    "text": "with that field anymore and if you're",
    "start": "696000",
    "end": "697839"
  },
  {
    "text": "the owner of that field and you don't",
    "start": "697839",
    "end": "699200"
  },
  {
    "text": "care about it anymore the server",
    "start": "699200",
    "end": "700320"
  },
  {
    "text": "believes it's safe to delete it so",
    "start": "700320",
    "end": "703279"
  },
  {
    "text": "in code where you're doing an update if",
    "start": "703279",
    "end": "705120"
  },
  {
    "text": "you have some something like if the",
    "start": "705120",
    "end": "706959"
  },
  {
    "text": "field is changed then set it to",
    "start": "706959",
    "end": "708880"
  },
  {
    "text": "something you wouldn't do that you would",
    "start": "708880",
    "end": "710639"
  },
  {
    "text": "always set the field to whatever value",
    "start": "710639",
    "end": "712320"
  },
  {
    "text": "you want that's kind of the only caveat",
    "start": "712320",
    "end": "714079"
  },
  {
    "text": "here other than that it's really",
    "start": "714079",
    "end": "714959"
  },
  {
    "text": "straightforward",
    "start": "714959",
    "end": "716639"
  },
  {
    "text": "now there are much more complicated use",
    "start": "716639",
    "end": "718560"
  },
  {
    "text": "cases we've seen a number of controllers",
    "start": "718560",
    "end": "720639"
  },
  {
    "text": "that have multiple code paths whereas in",
    "start": "720639",
    "end": "722800"
  },
  {
    "text": "some cases they update some set of",
    "start": "722800",
    "end": "724399"
  },
  {
    "text": "fields and another code path they update",
    "start": "724399",
    "end": "726720"
  },
  {
    "text": "a different set of fields for that we've",
    "start": "726720",
    "end": "728720"
  },
  {
    "text": "added a special feature to try and make",
    "start": "728720",
    "end": "731680"
  },
  {
    "text": "those easier to migrate i'm going to",
    "start": "731680",
    "end": "733600"
  },
  {
    "text": "walk through that",
    "start": "733600",
    "end": "736319"
  },
  {
    "text": "typically what you have is a code when",
    "start": "736880",
    "end": "739440"
  },
  {
    "text": "you have when you're using update",
    "start": "739440",
    "end": "741760"
  },
  {
    "text": "is that you read an object you modify it",
    "start": "741760",
    "end": "744480"
  },
  {
    "text": "place and then you update the object",
    "start": "744480",
    "end": "747279"
  },
  {
    "text": "if you want to convert those types of",
    "start": "747279",
    "end": "749839"
  },
  {
    "text": "things to apply",
    "start": "749839",
    "end": "751279"
  },
  {
    "text": "this is a simple approach you can take",
    "start": "751279",
    "end": "753600"
  },
  {
    "text": "the first thing you do is you read the",
    "start": "753600",
    "end": "754959"
  },
  {
    "text": "object just like you did before the next",
    "start": "754959",
    "end": "756800"
  },
  {
    "text": "thing you do is you do something called",
    "start": "756800",
    "end": "758480"
  },
  {
    "text": "extract there's an extract function on",
    "start": "758480",
    "end": "760720"
  },
  {
    "text": "every single apply configuration type",
    "start": "760720",
    "end": "763360"
  },
  {
    "text": "and you provide in the object that",
    "start": "763360",
    "end": "764639"
  },
  {
    "text": "you've read",
    "start": "764639",
    "end": "765839"
  },
  {
    "text": "plus the name of the field manager that",
    "start": "765839",
    "end": "768399"
  },
  {
    "text": "that controller identifies itself as",
    "start": "768399",
    "end": "771600"
  },
  {
    "text": "and what this function does is it",
    "start": "771600",
    "end": "773360"
  },
  {
    "text": "reconstructs and apply configuration",
    "start": "773360",
    "end": "775440"
  },
  {
    "text": "based",
    "start": "775440",
    "end": "776320"
  },
  {
    "text": "on the field manager state from the",
    "start": "776320",
    "end": "778399"
  },
  {
    "text": "server so if previously you applied",
    "start": "778399",
    "end": "780720"
  },
  {
    "text": "field a and b",
    "start": "780720",
    "end": "782399"
  },
  {
    "text": "and then you call",
    "start": "782399",
    "end": "784560"
  },
  {
    "text": "this extract function it's going to",
    "start": "784560",
    "end": "786480"
  },
  {
    "text": "reconstruct you and apply configuration",
    "start": "786480",
    "end": "788240"
  },
  {
    "text": "with a and b again as long as no other",
    "start": "788240",
    "end": "790320"
  },
  {
    "text": "you know field manager claimed ownership",
    "start": "790320",
    "end": "792160"
  },
  {
    "text": "of those that's going to be your pi",
    "start": "792160",
    "end": "793600"
  },
  {
    "text": "configuration so now you can go ahead",
    "start": "793600",
    "end": "795519"
  },
  {
    "text": "and just change any fields you want and",
    "start": "795519",
    "end": "797360"
  },
  {
    "text": "then call apply again",
    "start": "797360",
    "end": "799120"
  },
  {
    "text": "this works great if you have a",
    "start": "799120",
    "end": "800800"
  },
  {
    "text": "controller that has multiple code paths",
    "start": "800800",
    "end": "802560"
  },
  {
    "text": "where one path changes some fields and",
    "start": "802560",
    "end": "804399"
  },
  {
    "text": "the other path changes the others",
    "start": "804399",
    "end": "805920"
  },
  {
    "text": "because in both cases they're going to",
    "start": "805920",
    "end": "807279"
  },
  {
    "text": "load up the full apply configuration on",
    "start": "807279",
    "end": "809519"
  },
  {
    "text": "the server before they apply their",
    "start": "809519",
    "end": "810800"
  },
  {
    "text": "changes so no fields get",
    "start": "810800",
    "end": "812839"
  },
  {
    "text": "dropped the next thing you do",
    "start": "812839",
    "end": "815600"
  },
  {
    "text": "is you um set any fields that you care",
    "start": "815600",
    "end": "817519"
  },
  {
    "text": "about just the same exact way that you",
    "start": "817519",
    "end": "819839"
  },
  {
    "text": "would do if you're doing update and then",
    "start": "819839",
    "end": "821360"
  },
  {
    "text": "the last thing you do is you call apply",
    "start": "821360",
    "end": "823120"
  },
  {
    "text": "you set force to true because you're",
    "start": "823120",
    "end": "824639"
  },
  {
    "text": "unconditionally changing the fields to",
    "start": "824639",
    "end": "826160"
  },
  {
    "text": "the values you want them to be this is",
    "start": "826160",
    "end": "828160"
  },
  {
    "text": "typical for controllers",
    "start": "828160",
    "end": "830160"
  },
  {
    "text": "the one nice thing about calling apply",
    "start": "830160",
    "end": "831920"
  },
  {
    "text": "here is you don't have to worry about",
    "start": "831920",
    "end": "833600"
  },
  {
    "text": "optimistic concurrency control if you're",
    "start": "833600",
    "end": "835519"
  },
  {
    "text": "doing an update there's a possibility",
    "start": "835519",
    "end": "837600"
  },
  {
    "text": "that somebody did it right between you",
    "start": "837600",
    "end": "839120"
  },
  {
    "text": "when you did a read and when you do your",
    "start": "839120",
    "end": "840880"
  },
  {
    "text": "right",
    "start": "840880",
    "end": "841760"
  },
  {
    "text": "in which case your rights gonna fail",
    "start": "841760",
    "end": "844320"
  },
  {
    "text": "and you're gonna have to retry you're",
    "start": "844320",
    "end": "845519"
  },
  {
    "text": "gonna have to read again try reapplying",
    "start": "845519",
    "end": "847440"
  },
  {
    "text": "the the changes you wanna make a second",
    "start": "847440",
    "end": "849519"
  },
  {
    "text": "time and then try and write again and",
    "start": "849519",
    "end": "851360"
  },
  {
    "text": "you could have to loop and do that as",
    "start": "851360",
    "end": "852560"
  },
  {
    "text": "many times as you get conflicts",
    "start": "852560",
    "end": "854720"
  },
  {
    "text": "with apply you don't have to do that all",
    "start": "854720",
    "end": "856399"
  },
  {
    "text": "the merging happens on the server so you",
    "start": "856399",
    "end": "857839"
  },
  {
    "text": "just send the the request once and",
    "start": "857839",
    "end": "859519"
  },
  {
    "text": "you're done you're also sending the",
    "start": "859519",
    "end": "861040"
  },
  {
    "text": "minimal request about the information",
    "start": "861040",
    "end": "862560"
  },
  {
    "text": "you need to change whereas update sends",
    "start": "862560",
    "end": "864000"
  },
  {
    "text": "the entire state of the object so",
    "start": "864000",
    "end": "865920"
  },
  {
    "text": "there's some advantages",
    "start": "865920",
    "end": "867519"
  },
  {
    "text": "um",
    "start": "867519",
    "end": "868399"
  },
  {
    "text": "let's just recap um so if you're doing a",
    "start": "868399",
    "end": "870800"
  },
  {
    "text": "controller um migration",
    "start": "870800",
    "end": "874000"
  },
  {
    "text": "to apply and the controller is really",
    "start": "874000",
    "end": "875519"
  },
  {
    "text": "simple and straightforward",
    "start": "875519",
    "end": "876959"
  },
  {
    "text": "just rewrite it to use apply you don't",
    "start": "876959",
    "end": "879360"
  },
  {
    "text": "need to use this extract function it's",
    "start": "879360",
    "end": "881279"
  },
  {
    "text": "easy it's safe it's efficient",
    "start": "881279",
    "end": "883360"
  },
  {
    "text": "it's pretty low risk",
    "start": "883360",
    "end": "885279"
  },
  {
    "text": "if the controller has multiple code",
    "start": "885279",
    "end": "886959"
  },
  {
    "text": "paths and some code has changed some",
    "start": "886959",
    "end": "888800"
  },
  {
    "text": "fields some change in other that's a",
    "start": "888800",
    "end": "890880"
  },
  {
    "text": "good time to use this as at least as a",
    "start": "890880",
    "end": "893120"
  },
  {
    "text": "first step in your migration",
    "start": "893120",
    "end": "895120"
  },
  {
    "text": "because you avoid the risk of",
    "start": "895120",
    "end": "896639"
  },
  {
    "text": "accidentally deleting any fields",
    "start": "896639",
    "end": "899120"
  },
  {
    "text": "and that's a really big cap you have to",
    "start": "899120",
    "end": "901040"
  },
  {
    "text": "be aware of when you're working with",
    "start": "901040",
    "end": "902000"
  },
  {
    "text": "controllers is that if you forget to",
    "start": "902000",
    "end": "904320"
  },
  {
    "text": "include a field when you apply the",
    "start": "904320",
    "end": "906560"
  },
  {
    "text": "server probably will delete that field",
    "start": "906560",
    "end": "909920"
  },
  {
    "text": "if it's a required field um then you'll",
    "start": "909920",
    "end": "912079"
  },
  {
    "text": "get something else um but that's a real",
    "start": "912079",
    "end": "914320"
  },
  {
    "text": "danger and so that's something that this",
    "start": "914320",
    "end": "916560"
  },
  {
    "text": "this um migration path allows you to",
    "start": "916560",
    "end": "918399"
  },
  {
    "text": "avoid",
    "start": "918399",
    "end": "920079"
  },
  {
    "text": "and that's it um thank you so much uh",
    "start": "920079",
    "end": "922560"
  },
  {
    "text": "for listening and i'm gonna hand it back",
    "start": "922560",
    "end": "924399"
  },
  {
    "text": "for the rest of our presentation",
    "start": "924399",
    "end": "927839"
  },
  {
    "text": "hi everyone my name is abu kashim i'm an",
    "start": "931440",
    "end": "934399"
  },
  {
    "text": "engineer at red hat and a contributor to",
    "start": "934399",
    "end": "937360"
  },
  {
    "text": "ckpi machinery today i want to share",
    "start": "937360",
    "end": "939920"
  },
  {
    "text": "with you some of the practical",
    "start": "939920",
    "end": "941199"
  },
  {
    "text": "experiences with priority and fairness",
    "start": "941199",
    "end": "944639"
  },
  {
    "text": "first let's do a refresher on priority",
    "start": "944639",
    "end": "947120"
  },
  {
    "text": "and fairness and how it is typically",
    "start": "947120",
    "end": "948800"
  },
  {
    "text": "configured in a cluster",
    "start": "948800",
    "end": "950639"
  },
  {
    "text": "and then i will share with you some of",
    "start": "950639",
    "end": "952160"
  },
  {
    "text": "the practical experiences",
    "start": "952160",
    "end": "955440"
  },
  {
    "start": "955000",
    "end": "1017000"
  },
  {
    "text": "priority unfairness is the new",
    "start": "955440",
    "end": "957120"
  },
  {
    "text": "self-protection mechanism for the",
    "start": "957120",
    "end": "958720"
  },
  {
    "text": "kuberca server self-protection implies",
    "start": "958720",
    "end": "961199"
  },
  {
    "text": "that we need to prioritize",
    "start": "961199",
    "end": "964079"
  },
  {
    "text": "cluster critical requests for",
    "start": "964079",
    "end": "965680"
  },
  {
    "text": "self-maintenance we also need to prevent",
    "start": "965680",
    "end": "968880"
  },
  {
    "text": "a flood of inbound requests from",
    "start": "968880",
    "end": "970720"
  },
  {
    "text": "overloading and potentially crashing the",
    "start": "970720",
    "end": "973120"
  },
  {
    "text": "api server",
    "start": "973120",
    "end": "974560"
  },
  {
    "text": "priority and fairness is available since",
    "start": "974560",
    "end": "977040"
  },
  {
    "text": "118 and it has replaced the max",
    "start": "977040",
    "end": "980079"
  },
  {
    "text": "in-flight filter",
    "start": "980079",
    "end": "982240"
  },
  {
    "text": "the maxim flight filter limits the total",
    "start": "982240",
    "end": "985120"
  },
  {
    "text": "number of executing requests",
    "start": "985120",
    "end": "987360"
  },
  {
    "text": "at any time",
    "start": "987360",
    "end": "988720"
  },
  {
    "text": "the kuberpi server provides two command",
    "start": "988720",
    "end": "991040"
  },
  {
    "text": "line options through which a cluster",
    "start": "991040",
    "end": "993360"
  },
  {
    "text": "operator can configure the concurrency",
    "start": "993360",
    "end": "995519"
  },
  {
    "text": "limits of the api server",
    "start": "995519",
    "end": "997920"
  },
  {
    "text": "max requests in flight this is the",
    "start": "997920",
    "end": "1000079"
  },
  {
    "text": "maximum number of read-only requests in",
    "start": "1000079",
    "end": "1002639"
  },
  {
    "text": "flight allowed at any given time and",
    "start": "1002639",
    "end": "1005920"
  },
  {
    "text": "then we have",
    "start": "1005920",
    "end": "1007279"
  },
  {
    "text": "max mutating requests in flight it is",
    "start": "1007279",
    "end": "1010079"
  },
  {
    "text": "the maximum number of mutating requests",
    "start": "1010079",
    "end": "1012560"
  },
  {
    "text": "in flight",
    "start": "1012560",
    "end": "1013920"
  },
  {
    "text": "allowed",
    "start": "1013920",
    "end": "1014880"
  },
  {
    "text": "at any given time",
    "start": "1014880",
    "end": "1017920"
  },
  {
    "start": "1017000",
    "end": "1159000"
  },
  {
    "text": "when any of these two limits is exceeded",
    "start": "1018160",
    "end": "1021440"
  },
  {
    "text": "the server will reject the request",
    "start": "1021440",
    "end": "1023519"
  },
  {
    "text": "instructing the client to retry",
    "start": "1023519",
    "end": "1026160"
  },
  {
    "text": "if we sum up these two maxim flight",
    "start": "1026160",
    "end": "1028558"
  },
  {
    "text": "limits we get the overall server",
    "start": "1028559",
    "end": "1030959"
  },
  {
    "text": "concurrency limit",
    "start": "1030959",
    "end": "1034079"
  },
  {
    "text": "priority and fairness improves",
    "start": "1034319",
    "end": "1037120"
  },
  {
    "text": "upon max in flight filter by using the",
    "start": "1037120",
    "end": "1040240"
  },
  {
    "text": "rule-based flow scheme api",
    "start": "1040240",
    "end": "1042480"
  },
  {
    "text": "we can classify incoming requests into a",
    "start": "1042480",
    "end": "1044880"
  },
  {
    "text": "matching priority level",
    "start": "1044880",
    "end": "1047120"
  },
  {
    "text": "each priority level has its own",
    "start": "1047120",
    "end": "1049280"
  },
  {
    "text": "concurrency limit and three",
    "start": "1049280",
    "end": "1051200"
  },
  {
    "text": "configuration",
    "start": "1051200",
    "end": "1052880"
  },
  {
    "text": "this is the float in natural so a",
    "start": "1052880",
    "end": "1055039"
  },
  {
    "text": "request arrives at the api server",
    "start": "1055039",
    "end": "1057679"
  },
  {
    "text": "apf iterates through the flow schema",
    "start": "1057679",
    "end": "1059919"
  },
  {
    "text": "objects and selects the one that matches",
    "start": "1059919",
    "end": "1062480"
  },
  {
    "text": "the request",
    "start": "1062480",
    "end": "1064080"
  },
  {
    "text": "the flow schema object has a link to the",
    "start": "1064080",
    "end": "1066480"
  },
  {
    "text": "associated priority level",
    "start": "1066480",
    "end": "1069200"
  },
  {
    "text": "shuffle sharding technique is used to",
    "start": "1069200",
    "end": "1071280"
  },
  {
    "text": "pick one of the cues from the matching",
    "start": "1071280",
    "end": "1073600"
  },
  {
    "text": "priority level",
    "start": "1073600",
    "end": "1075600"
  },
  {
    "text": "the request is then put to the",
    "start": "1075600",
    "end": "1077520"
  },
  {
    "text": "designated queue",
    "start": "1077520",
    "end": "1079200"
  },
  {
    "text": "and the scheduler pops the request from",
    "start": "1079200",
    "end": "1081280"
  },
  {
    "text": "the queue dispatches it by using fair",
    "start": "1081280",
    "end": "1084320"
  },
  {
    "text": "queueing algorithm",
    "start": "1084320",
    "end": "1086480"
  },
  {
    "text": "fpf takes the server concurrency limit",
    "start": "1086480",
    "end": "1089280"
  },
  {
    "text": "and divides it among the priority levels",
    "start": "1089280",
    "end": "1091600"
  },
  {
    "text": "appropriate",
    "start": "1091600",
    "end": "1092880"
  },
  {
    "text": "now let's take a quick look",
    "start": "1092880",
    "end": "1094799"
  },
  {
    "text": "at the api resources for apf",
    "start": "1094799",
    "end": "1099600"
  },
  {
    "text": "each flow schema maps to exactly one",
    "start": "1102080",
    "end": "1104960"
  },
  {
    "text": "priority level",
    "start": "1104960",
    "end": "1106640"
  },
  {
    "text": "multiple flow scheme objects can be",
    "start": "1106640",
    "end": "1108880"
  },
  {
    "text": "associated with one priority level",
    "start": "1108880",
    "end": "1113520"
  },
  {
    "text": "rules inside a flow schema object",
    "start": "1113520",
    "end": "1115679"
  },
  {
    "text": "dictate whether an incoming request",
    "start": "1115679",
    "end": "1117840"
  },
  {
    "text": "matches the flow schema",
    "start": "1117840",
    "end": "1121640"
  },
  {
    "text": "the cluster operator can allocate a",
    "start": "1123600",
    "end": "1125600"
  },
  {
    "text": "concurrency limit for a priority level",
    "start": "1125600",
    "end": "1128720"
  },
  {
    "text": "and",
    "start": "1128720",
    "end": "1129600"
  },
  {
    "text": "also a specified queuing configuration",
    "start": "1129600",
    "end": "1133520"
  },
  {
    "text": "a vanilla queries",
    "start": "1133520",
    "end": "1135280"
  },
  {
    "text": "cluster ships with a set of bootstrap",
    "start": "1135280",
    "end": "1137679"
  },
  {
    "text": "apf configuration objects",
    "start": "1137679",
    "end": "1139919"
  },
  {
    "text": "this chart shows what percentage of the",
    "start": "1139919",
    "end": "1143440"
  },
  {
    "text": "server concurrency limit is allocated to",
    "start": "1143440",
    "end": "1145760"
  },
  {
    "text": "each priority level for example",
    "start": "1145760",
    "end": "1148640"
  },
  {
    "text": "we reserve about 12",
    "start": "1148640",
    "end": "1151360"
  },
  {
    "text": "of the server concurrency limit",
    "start": "1151360",
    "end": "1154000"
  },
  {
    "text": "for cubelet traffic",
    "start": "1154000",
    "end": "1155679"
  },
  {
    "text": "via the system priority level",
    "start": "1155679",
    "end": "1159120"
  },
  {
    "start": "1159000",
    "end": "1198000"
  },
  {
    "text": "let's go through some of the experiences",
    "start": "1159120",
    "end": "1161919"
  },
  {
    "text": "that we had",
    "start": "1161919",
    "end": "1164799"
  },
  {
    "text": "we ran into an incident where the cooper",
    "start": "1164799",
    "end": "1166960"
  },
  {
    "text": "pa server was overloaded but somewhat",
    "start": "1166960",
    "end": "1169919"
  },
  {
    "text": "functioning",
    "start": "1169919",
    "end": "1171120"
  },
  {
    "text": "if you probed",
    "start": "1171120",
    "end": "1172720"
  },
  {
    "text": "the health z endpoint from inside the",
    "start": "1172720",
    "end": "1174880"
  },
  {
    "text": "apk server it would have returned an",
    "start": "1174880",
    "end": "1177600"
  },
  {
    "text": "okay response",
    "start": "1177600",
    "end": "1179360"
  },
  {
    "text": "but cubelet healthcheck was on the api",
    "start": "1179360",
    "end": "1181440"
  },
  {
    "text": "server was failing with 429 too many",
    "start": "1181440",
    "end": "1183919"
  },
  {
    "text": "requests",
    "start": "1183919",
    "end": "1185679"
  },
  {
    "text": "consequently cubelet killed and",
    "start": "1185679",
    "end": "1188000"
  },
  {
    "text": "restarted the api server instance",
    "start": "1188000",
    "end": "1190480"
  },
  {
    "text": "this is not good the cluster is degraded",
    "start": "1190480",
    "end": "1193520"
  },
  {
    "text": "as it is and cubelet killing the ps over",
    "start": "1193520",
    "end": "1196160"
  },
  {
    "text": "is worse",
    "start": "1196160",
    "end": "1198400"
  },
  {
    "start": "1198000",
    "end": "1298000"
  },
  {
    "text": "we know that cubelet liveness checks are",
    "start": "1198400",
    "end": "1201200"
  },
  {
    "text": "anonymous",
    "start": "1201200",
    "end": "1202400"
  },
  {
    "text": "and further investigation revealed that",
    "start": "1202400",
    "end": "1205360"
  },
  {
    "text": "all anonymous requests are assigned to",
    "start": "1205360",
    "end": "1208240"
  },
  {
    "text": "the global default priority level",
    "start": "1208240",
    "end": "1211440"
  },
  {
    "text": "that has a lower concurrency limit",
    "start": "1211440",
    "end": "1214480"
  },
  {
    "text": "due to degradation the global default",
    "start": "1214480",
    "end": "1217280"
  },
  {
    "text": "priority level was already saturated and",
    "start": "1217280",
    "end": "1220320"
  },
  {
    "text": "consequently cubelet healthcheck was",
    "start": "1220320",
    "end": "1222880"
  },
  {
    "text": "being throttled by apf and resulted in",
    "start": "1222880",
    "end": "1225919"
  },
  {
    "text": "429.",
    "start": "1225919",
    "end": "1227520"
  },
  {
    "text": "the resolution was simple cubelet should",
    "start": "1227520",
    "end": "1229600"
  },
  {
    "text": "not kill an overloaded api server",
    "start": "1229600",
    "end": "1232080"
  },
  {
    "text": "so we added a new apf rule",
    "start": "1232080",
    "end": "1234480"
  },
  {
    "text": "that exempts all liveness probes for",
    "start": "1234480",
    "end": "1237840"
  },
  {
    "text": "example",
    "start": "1237840",
    "end": "1238799"
  },
  {
    "text": "live z ready z and health c",
    "start": "1238799",
    "end": "1242960"
  },
  {
    "text": "the next one is priority inversion",
    "start": "1243520",
    "end": "1246159"
  },
  {
    "text": "many operators extend their cluster with",
    "start": "1246159",
    "end": "1248960"
  },
  {
    "text": "aggregated api server and admission",
    "start": "1248960",
    "end": "1250799"
  },
  {
    "text": "workbooks",
    "start": "1250799",
    "end": "1252720"
  },
  {
    "text": "in this slide i'm going to walk through",
    "start": "1252720",
    "end": "1254960"
  },
  {
    "text": "an example of priority inversion where",
    "start": "1254960",
    "end": "1257200"
  },
  {
    "text": "an aggregated api server is involved",
    "start": "1257200",
    "end": "1261039"
  },
  {
    "text": "the user sends a request is labeled as a",
    "start": "1261039",
    "end": "1264720"
  },
  {
    "text": "in this diagram",
    "start": "1264720",
    "end": "1266960"
  },
  {
    "text": "the aggregation layer inside the api",
    "start": "1266960",
    "end": "1268960"
  },
  {
    "text": "server forwards the request",
    "start": "1268960",
    "end": "1272000"
  },
  {
    "text": "to the corresponding aggregated api",
    "start": "1272000",
    "end": "1273760"
  },
  {
    "text": "server",
    "start": "1273760",
    "end": "1275840"
  },
  {
    "text": "in order to serve a the aggregated api",
    "start": "1275840",
    "end": "1278320"
  },
  {
    "text": "server spawns a new request",
    "start": "1278320",
    "end": "1280960"
  },
  {
    "text": "labeled as b",
    "start": "1280960",
    "end": "1282880"
  },
  {
    "text": "now when b arrives at the api server apf",
    "start": "1282880",
    "end": "1285760"
  },
  {
    "text": "is not aware that b is in the same",
    "start": "1285760",
    "end": "1288000"
  },
  {
    "text": "request chain as a",
    "start": "1288000",
    "end": "1290559"
  },
  {
    "text": "if b has lower priority it means a has a",
    "start": "1290559",
    "end": "1293840"
  },
  {
    "text": "higher chance of being",
    "start": "1293840",
    "end": "1295919"
  },
  {
    "text": "rejected",
    "start": "1295919",
    "end": "1298400"
  },
  {
    "start": "1298000",
    "end": "1427000"
  },
  {
    "text": "ideally b should have higher priority",
    "start": "1298400",
    "end": "1301280"
  },
  {
    "text": "than a since a is already executing",
    "start": "1301280",
    "end": "1304400"
  },
  {
    "text": "for now we will we work around priority",
    "start": "1304400",
    "end": "1307120"
  },
  {
    "text": "inversion",
    "start": "1307120",
    "end": "1308240"
  },
  {
    "text": "by first",
    "start": "1308240",
    "end": "1309600"
  },
  {
    "text": "identifying the these spont requests",
    "start": "1309600",
    "end": "1312640"
  },
  {
    "text": "originating from the aggregated api",
    "start": "1312640",
    "end": "1314400"
  },
  {
    "text": "server",
    "start": "1314400",
    "end": "1315360"
  },
  {
    "text": "and",
    "start": "1315360",
    "end": "1316159"
  },
  {
    "text": "we then create apf rule to mark them as",
    "start": "1316159",
    "end": "1319520"
  },
  {
    "text": "exempt for example",
    "start": "1319520",
    "end": "1321679"
  },
  {
    "text": "if you have delegated authorization",
    "start": "1321679",
    "end": "1324480"
  },
  {
    "text": "the aggregated api server will send a",
    "start": "1324480",
    "end": "1327280"
  },
  {
    "text": "subject access review to the kubercase",
    "start": "1327280",
    "end": "1329520"
  },
  {
    "text": "server in order to determine whether a",
    "start": "1329520",
    "end": "1332320"
  },
  {
    "text": "should be allowed or denied",
    "start": "1332320",
    "end": "1334720"
  },
  {
    "text": "so to avoid priority inversion we create",
    "start": "1334720",
    "end": "1337760"
  },
  {
    "text": "a rule to exempt all success access",
    "start": "1337760",
    "end": "1341039"
  },
  {
    "text": "review requests",
    "start": "1341039",
    "end": "1342480"
  },
  {
    "text": "originating from the aggregated api",
    "start": "1342480",
    "end": "1344559"
  },
  {
    "text": "server",
    "start": "1344559",
    "end": "1347559"
  },
  {
    "text": "this one is",
    "start": "1348400",
    "end": "1349679"
  },
  {
    "text": "we allow",
    "start": "1349679",
    "end": "1351039"
  },
  {
    "text": "the cluster operator to set the server",
    "start": "1351039",
    "end": "1353440"
  },
  {
    "text": "concurrence limit via the maxim 5",
    "start": "1353440",
    "end": "1355520"
  },
  {
    "text": "settings",
    "start": "1355520",
    "end": "1356559"
  },
  {
    "text": "what if it is set at a much higher",
    "start": "1356559",
    "end": "1359280"
  },
  {
    "text": "threshold",
    "start": "1359280",
    "end": "1360400"
  },
  {
    "text": "than the actual server capacity",
    "start": "1360400",
    "end": "1362960"
  },
  {
    "text": "for example",
    "start": "1362960",
    "end": "1364240"
  },
  {
    "text": "the number of cpu cores allocated to the",
    "start": "1364240",
    "end": "1366480"
  },
  {
    "text": "api server may not be enough to sustain",
    "start": "1366480",
    "end": "1369120"
  },
  {
    "text": "the load at the concurrency limit",
    "start": "1369120",
    "end": "1372159"
  },
  {
    "text": "let's look at the graph",
    "start": "1372159",
    "end": "1373679"
  },
  {
    "text": "the x-axis represents requests in flight",
    "start": "1373679",
    "end": "1377039"
  },
  {
    "text": "or concurrency",
    "start": "1377039",
    "end": "1378559"
  },
  {
    "text": "a higher value indicates a higher load",
    "start": "1378559",
    "end": "1381280"
  },
  {
    "text": "on the api server",
    "start": "1381280",
    "end": "1382960"
  },
  {
    "text": "the y-axis represents cpu usage",
    "start": "1382960",
    "end": "1386960"
  },
  {
    "text": "if the cpu usage goes beyond the yellow",
    "start": "1386960",
    "end": "1390159"
  },
  {
    "text": "line",
    "start": "1390159",
    "end": "1391280"
  },
  {
    "text": "we will start experiencing cluster",
    "start": "1391280",
    "end": "1393440"
  },
  {
    "text": "degradation",
    "start": "1393440",
    "end": "1395039"
  },
  {
    "text": "the blue line depicts a relationship of",
    "start": "1395039",
    "end": "1397600"
  },
  {
    "text": "how cpu uses",
    "start": "1397600",
    "end": "1399760"
  },
  {
    "text": "relates to increasing load where the",
    "start": "1399760",
    "end": "1403039"
  },
  {
    "text": "blue line meets the yellow is the",
    "start": "1403039",
    "end": "1405280"
  },
  {
    "text": "saturation point",
    "start": "1405280",
    "end": "1406880"
  },
  {
    "text": "ideally the server concurrency limit",
    "start": "1406880",
    "end": "1409520"
  },
  {
    "text": "should be below the saturation point",
    "start": "1409520",
    "end": "1412720"
  },
  {
    "text": "since the actual server concurrency",
    "start": "1412720",
    "end": "1414799"
  },
  {
    "text": "limit set by the cluster operator is",
    "start": "1414799",
    "end": "1417039"
  },
  {
    "text": "well above the saturation point",
    "start": "1417039",
    "end": "1419200"
  },
  {
    "text": "degradation starts well before apf has",
    "start": "1419200",
    "end": "1422640"
  },
  {
    "text": "an opportunity to protect the api server",
    "start": "1422640",
    "end": "1427360"
  },
  {
    "start": "1427000",
    "end": "1497000"
  },
  {
    "text": "ideally you need to tune server",
    "start": "1427840",
    "end": "1430240"
  },
  {
    "text": "concurrency limit based on the number of",
    "start": "1430240",
    "end": "1432960"
  },
  {
    "text": "cpu cores available",
    "start": "1432960",
    "end": "1435279"
  },
  {
    "text": "we can find a good heuristics of how",
    "start": "1435279",
    "end": "1438559"
  },
  {
    "text": "many concurrent requests should be",
    "start": "1438559",
    "end": "1440640"
  },
  {
    "text": "allocated to one cpu core that makes it",
    "start": "1440640",
    "end": "1443200"
  },
  {
    "text": "easier to calculate an effective server",
    "start": "1443200",
    "end": "1445919"
  },
  {
    "text": "concurrency limit",
    "start": "1445919",
    "end": "1448880"
  },
  {
    "text": "the graph you see in this slide is an",
    "start": "1449840",
    "end": "1452240"
  },
  {
    "text": "actual prometheus query screenshot taken",
    "start": "1452240",
    "end": "1454720"
  },
  {
    "text": "from an aja cluster with three qba",
    "start": "1454720",
    "end": "1457760"
  },
  {
    "text": "server instances",
    "start": "1457760",
    "end": "1459440"
  },
  {
    "text": "it shows the number of registered",
    "start": "1459440",
    "end": "1461919"
  },
  {
    "text": "watches over time per api server",
    "start": "1461919",
    "end": "1464159"
  },
  {
    "text": "instance",
    "start": "1464159",
    "end": "1465360"
  },
  {
    "text": "each api server is represented by a",
    "start": "1465360",
    "end": "1468320"
  },
  {
    "text": "color label",
    "start": "1468320",
    "end": "1469919"
  },
  {
    "text": "the gap on the line indicates a downtime",
    "start": "1469919",
    "end": "1473200"
  },
  {
    "text": "for an api server the cluster was",
    "start": "1473200",
    "end": "1475440"
  },
  {
    "text": "degraded for some reason",
    "start": "1475440",
    "end": "1477919"
  },
  {
    "text": "let's focus on the highlighted area",
    "start": "1477919",
    "end": "1480960"
  },
  {
    "text": "the blue instance",
    "start": "1480960",
    "end": "1482640"
  },
  {
    "text": "had about 2 000 watches established",
    "start": "1482640",
    "end": "1486240"
  },
  {
    "text": "it dies due to some underlying condition",
    "start": "1486240",
    "end": "1489279"
  },
  {
    "text": "the watches on the blue instance",
    "start": "1489279",
    "end": "1491360"
  },
  {
    "text": "re-established on the green instance",
    "start": "1491360",
    "end": "1493919"
  },
  {
    "text": "almost immediately",
    "start": "1493919",
    "end": "1497120"
  },
  {
    "start": "1497000",
    "end": "1559000"
  },
  {
    "text": "a watch storm like this can overload or",
    "start": "1497679",
    "end": "1500480"
  },
  {
    "text": "even crash an api server watch requests",
    "start": "1500480",
    "end": "1503679"
  },
  {
    "text": "was originally outside the scope of apf",
    "start": "1503679",
    "end": "1507039"
  },
  {
    "text": "but since 122",
    "start": "1507039",
    "end": "1509120"
  },
  {
    "text": "apf accounts for the initialization part",
    "start": "1509120",
    "end": "1512799"
  },
  {
    "text": "of watch requests",
    "start": "1512799",
    "end": "1516240"
  },
  {
    "text": "okay here",
    "start": "1517360",
    "end": "1518559"
  },
  {
    "text": "on the left",
    "start": "1518559",
    "end": "1520320"
  },
  {
    "text": "you have an overloaded priority level",
    "start": "1520320",
    "end": "1522960"
  },
  {
    "text": "requests are being rejected",
    "start": "1522960",
    "end": "1525279"
  },
  {
    "text": "since the concurrency limit has been",
    "start": "1525279",
    "end": "1527039"
  },
  {
    "text": "exceeded on the right you have an under",
    "start": "1527039",
    "end": "1530640"
  },
  {
    "text": "utilized priority level the number of",
    "start": "1530640",
    "end": "1533120"
  },
  {
    "text": "currently executing requests is far",
    "start": "1533120",
    "end": "1535200"
  },
  {
    "text": "below the limit",
    "start": "1535200",
    "end": "1536720"
  },
  {
    "text": "even though the server has more capacity",
    "start": "1536720",
    "end": "1538880"
  },
  {
    "text": "to spare",
    "start": "1538880",
    "end": "1540000"
  },
  {
    "text": "the over-utilized priority level cannot",
    "start": "1540000",
    "end": "1542880"
  },
  {
    "text": "borrow",
    "start": "1542880",
    "end": "1543840"
  },
  {
    "text": "from the one that is under-utilized",
    "start": "1543840",
    "end": "1546799"
  },
  {
    "text": "this is because",
    "start": "1546799",
    "end": "1548400"
  },
  {
    "text": "each priority level manages its",
    "start": "1548400",
    "end": "1550240"
  },
  {
    "text": "concurrency pool independently",
    "start": "1550240",
    "end": "1553120"
  },
  {
    "text": "of the other and there is no concept of",
    "start": "1553120",
    "end": "1555760"
  },
  {
    "text": "borrowing yet",
    "start": "1555760",
    "end": "1558720"
  },
  {
    "start": "1559000",
    "end": "1627000"
  },
  {
    "text": "this slide is about cost of request",
    "start": "1559840",
    "end": "1562080"
  },
  {
    "text": "today",
    "start": "1562080",
    "end": "1563520"
  },
  {
    "text": "priority and fairness assigns the same",
    "start": "1563520",
    "end": "1565840"
  },
  {
    "text": "cost to all requests",
    "start": "1565840",
    "end": "1568000"
  },
  {
    "text": "even though",
    "start": "1568000",
    "end": "1569279"
  },
  {
    "text": "cost of request varies",
    "start": "1569279",
    "end": "1571600"
  },
  {
    "text": "this is not fair starting with 123 apf",
    "start": "1571600",
    "end": "1575520"
  },
  {
    "text": "will estimate cost of list and mutating",
    "start": "1575520",
    "end": "1578240"
  },
  {
    "text": "requests like create update patch and",
    "start": "1578240",
    "end": "1580960"
  },
  {
    "text": "delete",
    "start": "1580960",
    "end": "1582559"
  },
  {
    "text": "today irrespective",
    "start": "1582559",
    "end": "1584559"
  },
  {
    "text": "of its cost",
    "start": "1584559",
    "end": "1586080"
  },
  {
    "text": "every request occupies one seat or",
    "start": "1586080",
    "end": "1588960"
  },
  {
    "text": "concurrency from the priority level",
    "start": "1588960",
    "end": "1591840"
  },
  {
    "text": "while it is executing",
    "start": "1591840",
    "end": "1593919"
  },
  {
    "text": "so a list with thousand items is treated",
    "start": "1593919",
    "end": "1597200"
  },
  {
    "text": "the same as a simple get",
    "start": "1597200",
    "end": "1599919"
  },
  {
    "text": "starting with 123",
    "start": "1599919",
    "end": "1602000"
  },
  {
    "text": "apf will estimate",
    "start": "1602000",
    "end": "1604000"
  },
  {
    "text": "that a certain",
    "start": "1604000",
    "end": "1605440"
  },
  {
    "text": "list request might occupy more than one",
    "start": "1605440",
    "end": "1608480"
  },
  {
    "text": "seat or concurrency",
    "start": "1608480",
    "end": "1611200"
  },
  {
    "text": "from the priority level since it will",
    "start": "1611200",
    "end": "1613600"
  },
  {
    "text": "draw more power from the server",
    "start": "1613600",
    "end": "1617278"
  },
  {
    "text": "this estimation process is back up the",
    "start": "1617440",
    "end": "1620080"
  },
  {
    "text": "envelope type in the initial release but",
    "start": "1620080",
    "end": "1622880"
  },
  {
    "text": "we plan to improve it in future",
    "start": "1622880",
    "end": "1625279"
  },
  {
    "text": "iterations",
    "start": "1625279",
    "end": "1627840"
  },
  {
    "start": "1627000",
    "end": "1681000"
  },
  {
    "text": "this one is about retry",
    "start": "1628000",
    "end": "1630080"
  },
  {
    "text": "when apf rejects a request it sends a",
    "start": "1630080",
    "end": "1633200"
  },
  {
    "text": "four to nine status code it means too",
    "start": "1633200",
    "end": "1635919"
  },
  {
    "text": "many requests",
    "start": "1635919",
    "end": "1637360"
  },
  {
    "text": "and the client should retry later apf",
    "start": "1637360",
    "end": "1640640"
  },
  {
    "text": "also adds a retry after header in the",
    "start": "1640640",
    "end": "1643200"
  },
  {
    "text": "response",
    "start": "1643200",
    "end": "1644399"
  },
  {
    "text": "as an indication that the client should",
    "start": "1644399",
    "end": "1646399"
  },
  {
    "text": "retry after n seconds",
    "start": "1646399",
    "end": "1649039"
  },
  {
    "text": "client go is built to automatically",
    "start": "1649039",
    "end": "1651520"
  },
  {
    "text": "retry a rejected request but we found",
    "start": "1651520",
    "end": "1654399"
  },
  {
    "text": "out that",
    "start": "1654399",
    "end": "1655440"
  },
  {
    "text": "watch and stream did not have the retry",
    "start": "1655440",
    "end": "1658240"
  },
  {
    "text": "mechanism enabled",
    "start": "1658240",
    "end": "1660559"
  },
  {
    "text": "we added retry for watch and stream",
    "start": "1660559",
    "end": "1663279"
  },
  {
    "text": "starting with client go",
    "start": "1663279",
    "end": "1665279"
  },
  {
    "text": "version",
    "start": "1665279",
    "end": "1666960"
  },
  {
    "text": "0.22",
    "start": "1666960",
    "end": "1669840"
  },
  {
    "text": "that's it thank you for listening in",
    "start": "1670080",
    "end": "1673919"
  },
  {
    "text": "hello again i hope you have enjoyed",
    "start": "1681679",
    "end": "1684480"
  },
  {
    "text": "joe and abu's talks as much as i did",
    "start": "1684480",
    "end": "1687440"
  },
  {
    "text": "i truly always learn a lot when i listen",
    "start": "1687440",
    "end": "1689440"
  },
  {
    "text": "to my colleagues and it's one of the",
    "start": "1689440",
    "end": "1691120"
  },
  {
    "text": "things i like the most about this",
    "start": "1691120",
    "end": "1692720"
  },
  {
    "text": "community and this city",
    "start": "1692720",
    "end": "1694640"
  },
  {
    "text": "thank you both joe and abu for",
    "start": "1694640",
    "end": "1696399"
  },
  {
    "text": "presenting today",
    "start": "1696399",
    "end": "1698559"
  },
  {
    "text": "now to close let's get some quick info",
    "start": "1698559",
    "end": "1700960"
  },
  {
    "text": "about the sea",
    "start": "1700960",
    "end": "1703440"
  },
  {
    "text": "we meet every two weeks on wednesdays",
    "start": "1703440",
    "end": "1705520"
  },
  {
    "text": "the agenda is public and the topics are",
    "start": "1705520",
    "end": "1707520"
  },
  {
    "text": "usually very interesting",
    "start": "1707520",
    "end": "1709520"
  },
  {
    "text": "on top of that we meet twice a week for",
    "start": "1709520",
    "end": "1711840"
  },
  {
    "text": "regular bag and beer triages",
    "start": "1711840",
    "end": "1714799"
  },
  {
    "text": "there is no need to be an expert to join",
    "start": "1714799",
    "end": "1716640"
  },
  {
    "text": "either of the meetings everybody is",
    "start": "1716640",
    "end": "1718240"
  },
  {
    "text": "welcome",
    "start": "1718240",
    "end": "1719360"
  },
  {
    "text": "the triage meetings are a great concrete",
    "start": "1719360",
    "end": "1721360"
  },
  {
    "text": "way to get familiar with what's going on",
    "start": "1721360",
    "end": "1723360"
  },
  {
    "text": "in the day by day of the sea",
    "start": "1723360",
    "end": "1726000"
  },
  {
    "text": "the sig meetings are recorded and they",
    "start": "1726000",
    "end": "1727840"
  },
  {
    "text": "are available in our youtube playlist",
    "start": "1727840",
    "end": "1730720"
  },
  {
    "text": "to get all these invites you have to",
    "start": "1730720",
    "end": "1732240"
  },
  {
    "text": "join the mailing list and then you will",
    "start": "1732240",
    "end": "1734399"
  },
  {
    "text": "get them automatically",
    "start": "1734399",
    "end": "1736720"
  },
  {
    "text": "api machinery also owns the api",
    "start": "1736720",
    "end": "1739200"
  },
  {
    "text": "expressions working group and the queue",
    "start": "1739200",
    "end": "1741200"
  },
  {
    "text": "builder working group",
    "start": "1741200",
    "end": "1742880"
  },
  {
    "text": "these two have separate meeting",
    "start": "1742880",
    "end": "1744480"
  },
  {
    "text": "schedules and they have dedicated slack",
    "start": "1744480",
    "end": "1747039"
  },
  {
    "text": "channels too",
    "start": "1747039",
    "end": "1749360"
  },
  {
    "text": "the leadership of the c",
    "start": "1749360",
    "end": "1751120"
  },
  {
    "text": "is david eats and stefan shimanski from",
    "start": "1751120",
    "end": "1753760"
  },
  {
    "text": "red hat",
    "start": "1753760",
    "end": "1754880"
  },
  {
    "text": "and daniel smith and myself from google",
    "start": "1754880",
    "end": "1759520"
  },
  {
    "text": "finally i will leave you a list of",
    "start": "1759520",
    "end": "1761440"
  },
  {
    "text": "useful links so you don't have to be",
    "start": "1761440",
    "end": "1763520"
  },
  {
    "text": "searching in case you need them",
    "start": "1763520",
    "end": "1766480"
  },
  {
    "text": "i hope you have enjoyed our presentation",
    "start": "1766480",
    "end": "1768640"
  },
  {
    "text": "today i want to thank everybody for your",
    "start": "1768640",
    "end": "1770960"
  },
  {
    "text": "time and for coming and showing your",
    "start": "1770960",
    "end": "1772880"
  },
  {
    "text": "interest",
    "start": "1772880",
    "end": "1773840"
  },
  {
    "text": "thank you so much",
    "start": "1773840",
    "end": "1777398"
  }
]