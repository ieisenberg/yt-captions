[
  {
    "text": "hello everyone uh thank you guys for joining us uh on the maintainer summit so our session today is about uh a",
    "start": "799",
    "end": "7279"
  },
  {
    "text": "workshop on Hands-On chos engineering we would want it to be very interactive so we'd want you guys to follow along we",
    "start": "7279",
    "end": "13160"
  },
  {
    "text": "have a lot of U QR codes for you to scan the repos and clone it and then also",
    "start": "13160",
    "end": "19760"
  },
  {
    "text": "download the binaries and everything so we all can get started together we have four speakers we have shubam Sara me and",
    "start": "19760",
    "end": "27160"
  },
  {
    "text": "namu I'll just allow them to introduce themselves",
    "start": "27160",
    "end": "31960"
  },
  {
    "text": "yeah hi I am shabam Chri maintainer of lmas chaos and Senior soft engine at",
    "start": "32320",
    "end": "38520"
  },
  {
    "text": "harness hi everyone this is sarna and I'm also one of the maintenance of lmas Kos and Senior software engineer at",
    "start": "38520",
    "end": "45079"
  },
  {
    "text": "harness thank you hi this is nam Park I'm a one of the",
    "start": "45079",
    "end": "50879"
  },
  {
    "text": "Ros chos maintainer and also a CNC Ambassador thank you and lastly I'm cheyen I'm also one",
    "start": "50879",
    "end": "58039"
  },
  {
    "text": "of the maintainers and uh I'm also a community manager for litmas and harness",
    "start": "58039",
    "end": "63920"
  },
  {
    "text": "so we majorly me and Sham will be um covering the theory and the workshop",
    "start": "63920",
    "end": "69240"
  },
  {
    "text": "part of it and it's very less Theory don't worry uh and namu and Sera will be helping out U troubleshoot or any in",
    "start": "69240",
    "end": "76400"
  },
  {
    "text": "case you guys get stuck on anything so they'll be uh around helping everyone so",
    "start": "76400",
    "end": "81520"
  },
  {
    "text": "what does the agenda look like we start with introduction to chaos engineering and litmas which is very short then we",
    "start": "81520",
    "end": "87400"
  },
  {
    "text": "move on to the graduation updates that we are pursuing for litmus and then we move on to the litmus SDK which is the",
    "start": "87400",
    "end": "93680"
  },
  {
    "text": "main SDK we'll be used to create and bootstrap your chaos experiments and then finally we'll see how you can",
    "start": "93680",
    "end": "99640"
  },
  {
    "text": "create these experiments push them to Kos sub and run these experiments so uh just uh quick um shout",
    "start": "99640",
    "end": "107360"
  },
  {
    "text": "out to the pre like this a quick prerequisites before we get started it'll be great if you guys can uh",
    "start": "107360",
    "end": "113560"
  },
  {
    "text": "install goang if you don't have it already and there's the second link which is the litmus go which is the",
    "start": "113560",
    "end": "119240"
  },
  {
    "text": "Repository which will be using and cloning uh which has the litmus SDK basically and the third one is a read me",
    "start": "119240",
    "end": "125200"
  },
  {
    "text": "with all the step-by-step guides so you can just quickly scan these two QR codes",
    "start": "125200",
    "end": "130239"
  },
  {
    "text": "uh and it should be uh you'll be good to get started there's also the hosted chaos Center which we have already",
    "start": "130239",
    "end": "135440"
  },
  {
    "text": "hosted for you guys so if you want to down like you know install litmas in your system fresh you can do that",
    "start": "135440",
    "end": "141760"
  },
  {
    "text": "there's a Dev wiki guide as well but in case you don't want to there's also the hosted K center with this link which is",
    "start": "141760",
    "end": "148239"
  },
  {
    "text": "quite bad so we have the QR code you can go there the credentials are admin and uh Route atate 1 123 so litmus is",
    "start": "148239",
    "end": "155720"
  },
  {
    "text": "already hosted there you guys can just simply scan it play around with the portal and uh when we do the workshop",
    "start": "155720",
    "end": "161879"
  },
  {
    "text": "you guys can follow along you can take a quick snapshot or just uh download it now it's",
    "start": "161879",
    "end": "168040"
  },
  {
    "text": "fine so we have the QR as well when I talk about chaos engineering so you guys can still do the scanning but yeah just",
    "start": "168959",
    "end": "176120"
  },
  {
    "text": "starting with what is chaos engineering it is a very simple in simple term terms it is a practice of uh injecting chaos",
    "start": "176120",
    "end": "182440"
  },
  {
    "text": "in your system so to prove and to see how resilient your systems are so that is in very short very basic what chaos",
    "start": "182440",
    "end": "190040"
  },
  {
    "text": "engineering is and this is taken from the principles of chaos uh.org which is the Holy Grail of chaos engineering it",
    "start": "190040",
    "end": "196159"
  },
  {
    "text": "was first published by Netflix and it has still been there and is the major source of all knowledge on chos",
    "start": "196159",
    "end": "203640"
  },
  {
    "text": "engineering next uh what are the few steps on how you should practice chos engineering you should first start with",
    "start": "203640",
    "end": "210439"
  },
  {
    "text": "the system to test you should select which system you want to test identify them then you select which chaos",
    "start": "210439",
    "end": "216400"
  },
  {
    "text": "experiments you want to run on top of them so you would first find some vulnerabilities or some weaknesses in",
    "start": "216400",
    "end": "223159"
  },
  {
    "text": "your system and based on that you would select certain experiments to perform to mitigate those vulnerabilities so that",
    "start": "223159",
    "end": "228879"
  },
  {
    "text": "is step two the third is you run those set of experiments on the targeted system that you have identified and step",
    "start": "228879",
    "end": "234879"
  },
  {
    "text": "four is You observe the result You observe what you found as",
    "start": "234879",
    "end": "240920"
  },
  {
    "text": "part of the experiment and then the fifth and the last one is you use those learnings to make your system",
    "start": "240920",
    "end": "248159"
  },
  {
    "text": "better now talking about the product which is litmas it is open source it is a cross cloud cloud native uh skos",
    "start": "248599",
    "end": "255720"
  },
  {
    "text": "engineering solution uh which is a cncf sandbo cncf incubation incubating",
    "start": "255720",
    "end": "261000"
  },
  {
    "text": "project right now and it is very flexible in terms of U plugging with other um Open Source Products or it",
    "start": "261000",
    "end": "268960"
  },
  {
    "text": "supports uh more than 51s as of today and also it has support for giops and a",
    "start": "268960",
    "end": "274000"
  },
  {
    "text": "lot of other things like um multiple chaos planes and uh uh control plane and",
    "start": "274000",
    "end": "281560"
  },
  {
    "text": "execution plane so it's very flexible to inject chaos into it because it's like broken down into multiple pieces and",
    "start": "281560",
    "end": "287840"
  },
  {
    "text": "here's the Journey of lmas uh until today so we started off in September 2019 when we made the repository public",
    "start": "287840",
    "end": "294880"
  },
  {
    "text": "for the first time then we joined sandbox on June of 2020 and then we",
    "start": "294880",
    "end": "300840"
  },
  {
    "text": "shifted to cncf incubating on uh January 2022 and now we are moving to",
    "start": "300840",
    "end": "307960"
  },
  {
    "text": "graduation yeah so um a few updates on what we have been doing to reach the",
    "start": "311720",
    "end": "318160"
  },
  {
    "text": "graduation Milestone are these so we have completed the tech docs analysis very recently uh huge thanks to Dave and",
    "start": "318160",
    "end": "325680"
  },
  {
    "text": "Nate uh for helping with that uh we have also completed the security audit which was done by 7year security so really a",
    "start": "325680",
    "end": "333080"
  },
  {
    "text": "good a great shout out to them for helping us with the security audits we also have the litmas Kos con",
    "start": "333080",
    "end": "340280"
  },
  {
    "text": "which is the flagship event of litmas which happens on the September of every year and this was the first year which",
    "start": "340280",
    "end": "346600"
  },
  {
    "text": "we sort of inaugurated that uh conference so we are really very proud of that and the next one will happen on",
    "start": "346600",
    "end": "352360"
  },
  {
    "text": "2025 September so we're really looking forward to you guys joining there we also have the mentorship",
    "start": "352360",
    "end": "360400"
  },
  {
    "text": "which um we do as part of gck outreachy LFX so we are very active with gck and",
    "start": "360400",
    "end": "366400"
  },
  {
    "text": "LFX at the moment uh and we participate in all the terms so the next one is coming right up on January which is the",
    "start": "366400",
    "end": "371960"
  },
  {
    "text": "term one uh I believe it's the the term one on January so feel free to join them",
    "start": "371960",
    "end": "378400"
  },
  {
    "text": "if you're a new open source uh contributor you can uh join us and we'll",
    "start": "378400",
    "end": "383919"
  },
  {
    "text": "have me will Mentor you to uh contribute better and we'll also highlight some of",
    "start": "383919",
    "end": "389400"
  },
  {
    "text": "the recent contributions uh done on litmas which are um adding distributed",
    "start": "389400",
    "end": "395319"
  },
  {
    "text": "tracing which was done by namu will also um we'll also talk about um some",
    "start": "395319",
    "end": "402720"
  },
  {
    "text": "other contributions like the upgrade upgrade agent which was made more seamless uh which was also part of 2.x",
    "start": "402720",
    "end": "410199"
  },
  {
    "text": "but then we removed it uh and now it's back again on 3.x which helps you make a",
    "start": "410199",
    "end": "415240"
  },
  {
    "text": "smoother transition and changes to your schema your DB migrations Etc we also",
    "start": "415240",
    "end": "421599"
  },
  {
    "text": "have uh updates on Crow operations that were done as part of the resilience probes uh and finally uh there's couple",
    "start": "421599",
    "end": "430879"
  },
  {
    "text": "of more updates on um I think we missing one yeah multiple project owners which",
    "start": "430879",
    "end": "437840"
  },
  {
    "text": "was also added as part of litmas 3.x so a couple of great contributions we have as part of litmas 3.x uh but yeah that's",
    "start": "437840",
    "end": "445240"
  },
  {
    "text": "just uh some of the uh contributions that we want to highlight and move moving forward there's a session",
    "start": "445240",
    "end": "450840"
  },
  {
    "text": "tomorrow as well there's a lightning talk on litmus Kos Evolution there will be a 5 minute talks on uh what security",
    "start": "450840",
    "end": "457199"
  },
  {
    "text": "enhancements we have been doing and things like that which the QR code you can scan and RSVP for",
    "start": "457199",
    "end": "463440"
  },
  {
    "text": "that next up we have the chos sub which is the central repository where we host",
    "start": "464039",
    "end": "469479"
  },
  {
    "text": "all our faults so we currently have a list of 51 plus faults at the moment which are not just limited to specific",
    "start": "469479",
    "end": "475720"
  },
  {
    "text": "like very generic faults but also vendor specific faults and also apption specific FS like k6 spring Etc which",
    "start": "475720",
    "end": "483280"
  },
  {
    "text": "we'll be using as part of the workshop so now I'll hand it over to Sham who will taking take you through",
    "start": "483280",
    "end": "489639"
  },
  {
    "text": "the SDK what it is and also how you can use it for the",
    "start": "489639",
    "end": "495879"
  },
  {
    "text": "workshop it's yeah mic testing yeah",
    "start": "502800",
    "end": "510759"
  },
  {
    "text": "so we have a litmus SDK where you can generate your own chaos experiments and",
    "start": "510759",
    "end": "515800"
  },
  {
    "text": "once the experiment is created you can generate a chart and you can host into the chaos Hub so chos Hub is a",
    "start": "515800",
    "end": "522800"
  },
  {
    "text": "marketplace where where you we have a we can list the charts so as we see in the previous slide we have 51 plus",
    "start": "522800",
    "end": "529480"
  },
  {
    "text": "experiments so you can host your charts into the chaos subub and then you can use when while you constructed the",
    "start": "529480",
    "end": "535040"
  },
  {
    "text": "experiment then you can uh choose the charts from the Kos sub and you can run the experiments so as part of a litmas",
    "start": "535040",
    "end": "542120"
  },
  {
    "text": "SDK uh we have attribute. HML file where you can where the experiment metadata is",
    "start": "542120",
    "end": "548000"
  },
  {
    "text": "present so based on that experiment metadata we can generate the experiment which support the multiple types so it's",
    "start": "548000",
    "end": "554959"
  },
  {
    "text": "it can be a vendor specific like AWS uh gcp VMware as your and it can be a in",
    "start": "554959",
    "end": "561120"
  },
  {
    "text": "the kubernetes it can be a exit based or helper base models and once the experiment is created we can generate a",
    "start": "561120",
    "end": "567279"
  },
  {
    "text": "chart as well in chart it is K engine and Chaos experiment which are the custom resources and we have a CSV which",
    "start": "567279",
    "end": "574959"
  },
  {
    "text": "which contain the metadata of the experiment So based on this CSV file we uh show things in the chaos sub and once",
    "start": "574959",
    "end": "581800"
  },
  {
    "text": "we create an experiment so it contain our placeholders so in the placeholders there are a study state check which you",
    "start": "581800",
    "end": "587640"
  },
  {
    "text": "can add in a pre- chaos and post chaos based on the based on the fall type and",
    "start": "587640",
    "end": "592920"
  },
  {
    "text": "there is a chaos injection and Chaos revert logic there based on your scenario you can update the chaos",
    "start": "592920",
    "end": "598920"
  },
  {
    "text": "injection in rever Step as well so this is the repo link so you can",
    "start": "598920",
    "end": "604920"
  },
  {
    "text": "scan the QR code and here we have the user guide where we mention all the steps and this is our hosted CH Center",
    "start": "604920",
    "end": "612240"
  },
  {
    "text": "uh like this is the where we have ch Center you can use this K Center to run",
    "start": "612240",
    "end": "617959"
  },
  {
    "text": "those Falls so there are the credentials so username is admin and password is root at theate 1",
    "start": "617959",
    "end": "624839"
  },
  {
    "text": "23 uh one more thing I'd like to add if you face any problems while you are following along just raise your hands or",
    "start": "625160",
    "end": "631000"
  },
  {
    "text": "anything and we we'll just come and help you out yeah so this is the readme where we",
    "start": "631000",
    "end": "638200"
  },
  {
    "text": "have all the steps so uh the prerequisite is go should be installed in your system and then next step is uh",
    "start": "638200",
    "end": "646760"
  },
  {
    "text": "we have a litmus go repository where we are maintaining the templates and the litmus SDK so you need to clone this",
    "start": "646760",
    "end": "653639"
  },
  {
    "text": "repository uh and then uh in the litmus go/ contribute slev developer guide we",
    "start": "653639",
    "end": "659839"
  },
  {
    "text": "you can like move to this directory where the litmas SDK is present so you",
    "start": "659839",
    "end": "665160"
  },
  {
    "text": "can follow me uh like I will run all these",
    "start": "665160",
    "end": "669839"
  },
  {
    "text": "steps okay yeah so this is the uh litmus go repositive which I already cloned so",
    "start": "677040",
    "end": "683480"
  },
  {
    "text": "we can move to the contribute developer guide directory",
    "start": "683480",
    "end": "688680"
  },
  {
    "text": "and here we have a litmas SDK so we we can follow these steps so first we can",
    "start": "688680",
    "end": "695000"
  },
  {
    "text": "generate a binary based on our OS and uh like architecture so I'm just generating",
    "start": "695000",
    "end": "701079"
  },
  {
    "text": "a binary for litmas SDK so local binary is generated now we",
    "start": "701079",
    "end": "707639"
  },
  {
    "text": "can we have a attribute. EML file so here we have a attribute EML do sample",
    "start": "707639",
    "end": "713680"
  },
  {
    "text": "file so we can create a attribute. EML file based on this",
    "start": "713680",
    "end": "721240"
  },
  {
    "text": "in the ID you can see uh attribute. EML file is there which is which contain the metadata of the uh the new fault which",
    "start": "723720",
    "end": "730399"
  },
  {
    "text": "you wanted to create So based on our fault type we can change the data here so it is the name of the fault so let's",
    "start": "730399",
    "end": "737120"
  },
  {
    "text": "say I'm creating a pod CPU stress fault and the version It's initial",
    "start": "737120",
    "end": "743959"
  },
  {
    "text": "version so I'm just shoting 0.1.0 here we can give the category so it's let's say ber",
    "start": "743959",
    "end": "750199"
  },
  {
    "text": "is and the other URL in the description you can provide so I'm right now using all the default values and if you wanted",
    "start": "750199",
    "end": "757560"
  },
  {
    "text": "to uh these are the keywords based on these keyword you can list these on the chaos Hub so I'm using the default",
    "start": "757560",
    "end": "764720"
  },
  {
    "text": "keywords and everything and this is the permission this is the RB permissions required for the kubernetes and then",
    "start": "764720",
    "end": "771839"
  },
  {
    "text": "here the maintainer details and provider and other references you can provide so I'm using all defaults values",
    "start": "771839",
    "end": "780519"
  },
  {
    "text": "and the next step is once you have populated all the values in the attribute. EML file you can generate a",
    "start": "782240",
    "end": "789440"
  },
  {
    "text": "experiment based on this so uh like here is a hyphen t uh",
    "start": "789440",
    "end": "797639"
  },
  {
    "text": "command which support exit uh Helper and AWS VMware aure and gcp so in exit based",
    "start": "797639",
    "end": "803480"
  },
  {
    "text": "model we are from the experiment pod we are exec into the target pod and then we",
    "start": "803480",
    "end": "808760"
  },
  {
    "text": "are running some chaos inject and rever command in a helper based mode we are creating a helper pod and without exit",
    "start": "808760",
    "end": "816160"
  },
  {
    "text": "into the target application we are injecting chaos from the outside without actually exec into it and we have a like",
    "start": "816160",
    "end": "823120"
  },
  {
    "text": "Cloud specific like AWS VMware as your gcp as well so if you want to construct any fault into these platform then then",
    "start": "823120",
    "end": "829760"
  },
  {
    "text": "also you can construct so I'm using a exit based uh",
    "start": "829760",
    "end": "835519"
  },
  {
    "text": "mode here so the EXP experiment is",
    "start": "835519",
    "end": "841480"
  },
  {
    "text": "created so once we create an uh once the experiment is created so it uh like in",
    "start": "841480",
    "end": "847880"
  },
  {
    "text": "like the category is kubernetes inside the category the Pod CPU stress directory is created which is the name",
    "start": "847880",
    "end": "853279"
  },
  {
    "text": "of the experiment and here you will find the experiment directory so this experiment directory contain the like",
    "start": "853279",
    "end": "859720"
  },
  {
    "text": "the whole life cycle of the experiment so it uh as we saw in the previous slide it's have a steady state check chaos",
    "start": "859720",
    "end": "865759"
  },
  {
    "text": "inject and reverse steps so here I have uh put the placeholders So based on your",
    "start": "865759",
    "end": "872240"
  },
  {
    "text": "uh application you can add a pre uh like pre-os Steps so right now it's by",
    "start": "872240",
    "end": "877399"
  },
  {
    "text": "default because it is a pod specific fault so we already have a heal check for the pod which is already there so if",
    "start": "877399",
    "end": "884199"
  },
  {
    "text": "you wanted to add any add addition additional study state check then you can add but I'm keeping the default",
    "start": "884199",
    "end": "890120"
  },
  {
    "text": "values here and same uh same is true for the Post chaos as well in the post chaos",
    "start": "890120",
    "end": "896160"
  },
  {
    "text": "also we have a placeholders you can provide a study state validations here so and the default aut check is there",
    "start": "896160",
    "end": "903320"
  },
  {
    "text": "and then inside the chaos lift directory we will have a pod CPU",
    "start": "903320",
    "end": "908759"
  },
  {
    "text": "stress so this this chaos lip uh contains the business logic of the",
    "start": "908759",
    "end": "914120"
  },
  {
    "text": "fault so this is exit base uh in exit base you can provide the chaos inject",
    "start": "914120",
    "end": "919360"
  },
  {
    "text": "and revert command and it will exit inside the target application it will run those inject command and after the",
    "start": "919360",
    "end": "924399"
  },
  {
    "text": "chaos duration is over it will revert that so uh so it contain all the business logic here and if you wanted to",
    "start": "924399",
    "end": "930720"
  },
  {
    "text": "modify anything then uh then you can change the code a uh so I'm using the default uh default",
    "start": "930720",
    "end": "938319"
  },
  {
    "text": "experiment uh here and once the experiment is created and if whatever the tuning we wanted to do once we are",
    "start": "938319",
    "end": "944839"
  },
  {
    "text": "done with the tuning we can uh create a image of this experiment so to we can",
    "start": "944839",
    "end": "951560"
  },
  {
    "text": "directly run the docker command and we can build the docker image from here and",
    "start": "951560",
    "end": "956639"
  },
  {
    "text": "then uh we can generate a chart which we can upload to the hub to generate a",
    "start": "956639",
    "end": "961880"
  },
  {
    "text": "chart we can use this command so it's generated the chart so",
    "start": "961880",
    "end": "970399"
  },
  {
    "text": "we can see the chart in the same directory experiments kubernetes uh name of experiment and",
    "start": "970399",
    "end": "977839"
  },
  {
    "text": "here the charts is are there so it contain engine and experiments which are the custom resources we have a CSV file",
    "start": "977839",
    "end": "985120"
  },
  {
    "text": "for the uh fault also for the category also we have a CSV file and a package. EML and also the RB Al we have based on",
    "start": "985120",
    "end": "993000"
  },
  {
    "text": "the permission we have provided in the attribute. EML file so once we have all the all these charts then we have a",
    "start": "993000",
    "end": "998680"
  },
  {
    "text": "chaos charts repo Ina uh in based on this chaos chart repo we are we are creating a chos subub",
    "start": "998680",
    "end": "1006160"
  },
  {
    "text": "so if you can see this is our default chos sub which have 51 Falls and the all the data populated here is based on the",
    "start": "1006160",
    "end": "1013240"
  },
  {
    "text": "chaos chart repo itself so you can uh clone the chaos charts repo uh or you can create your own repo it should",
    "start": "1013240",
    "end": "1019880"
  },
  {
    "text": "follow a specific format so let's say this is my chos chart repo which I created for this experiment so it",
    "start": "1019880",
    "end": "1026520"
  },
  {
    "text": "contain a like name of category for category we should have a package. EML file and the CSV file which is already",
    "start": "1026520",
    "end": "1033480"
  },
  {
    "text": "created using SDK here this is the package. EML and CSV file and then",
    "start": "1033480",
    "end": "1038760"
  },
  {
    "text": "inside uh inside this uh fault we have engine. EML F.L and CSV file so these",
    "start": "1038760",
    "end": "1044798"
  },
  {
    "text": "three file also present here engine. ml this is fall. ml equivalent and we have a CSV file also so you can copy paste",
    "start": "1044799",
    "end": "1052080"
  },
  {
    "text": "these file into the charts and then you can push that chart to the GitHub so I have already pushed this chart to the G",
    "start": "1052080",
    "end": "1059080"
  },
  {
    "text": "GitHub so this chart is present here and once the chart is pushed to the",
    "start": "1059080",
    "end": "1065679"
  },
  {
    "text": "chaos Hub then we can uh we can connect a chaos subub from the chaos",
    "start": "1065679",
    "end": "1071919"
  },
  {
    "text": "Center so we can create a new chos sub we can let's say I'm using it's a byoc",
    "start": "1071919",
    "end": "1077880"
  },
  {
    "text": "which is bring your own chaos uh and then you can Pro you can copy the repository",
    "start": "1077880",
    "end": "1084960"
  },
  {
    "text": "link so we are using a https URL of the",
    "start": "1084960",
    "end": "1091000"
  },
  {
    "text": "repository and then you can provide a branch name so I'm using byoc Branch here and then it support a multiple uh",
    "start": "1092679",
    "end": "1100760"
  },
  {
    "text": "VCS types so I'm using GitHub",
    "start": "1100760",
    "end": "1105000"
  },
  {
    "text": "here and then we we can connect it yeah so it's connect it is in Connected",
    "start": "1105960",
    "end": "1111880"
  },
  {
    "text": "state so we can also open so we can see there is only a single fault so this is the same fault which we just created P",
    "start": "1111880",
    "end": "1118080"
  },
  {
    "text": "CPU stress and then you can uh go to the chaos experiment section and then you",
    "start": "1118080",
    "end": "1124000"
  },
  {
    "text": "can use the same Hub to uh create a new experiment",
    "start": "1124000",
    "end": "1129520"
  },
  {
    "text": "so so uh I have already have a in infrastructure so infrastructure is where the our execution plane is running",
    "start": "1135679",
    "end": "1142360"
  },
  {
    "text": "so whatever the kubernetes cluster we wanted to Target we can install a infrastructure on that cluster and then",
    "start": "1142360",
    "end": "1148400"
  },
  {
    "text": "it will discover all the service which are present on that cluster so I already have a infrastructure which is running",
    "start": "1148400",
    "end": "1153520"
  },
  {
    "text": "on my kubernetes cluster so I'm selecting that infrastructure and we have a multiple",
    "start": "1153520",
    "end": "1159000"
  },
  {
    "text": "options here so I'm using a blank canvas and then I'm selecting a fault from Hub so first step uh I I can select a fault",
    "start": "1159000",
    "end": "1165960"
  },
  {
    "text": "from uh Hub so I'm using a pod C CP stress fault and then uh I need to select the",
    "start": "1165960",
    "end": "1173760"
  },
  {
    "text": "target application which I wanted to Target so it's kindest deployment name space so it is doing the discovery based",
    "start": "1173760",
    "end": "1180400"
  },
  {
    "text": "on my execution plane so it's running in a litmas name space and I can use a simple engine X application so so it is",
    "start": "1180400",
    "end": "1188320"
  },
  {
    "text": "listing all the uh label of all the applications which are present in lman name space then I can provide a envs",
    "start": "1188320",
    "end": "1196039"
  },
  {
    "text": "here so I'm running the chaos for the 120 seconds and we can provide a chaos inject and",
    "start": "1196039",
    "end": "1201520"
  },
  {
    "text": "revert command here so I'm using a md5 some command which will run a like which will inject a CPU stress and then I'm",
    "start": "1201520",
    "end": "1208480"
  },
  {
    "text": "reverting it and then uh we have a probes so you can verify your like",
    "start": "1208480",
    "end": "1215080"
  },
  {
    "text": "hypothesis also you can perform some health check and all those SLO validation you can perform so as part of",
    "start": "1215080",
    "end": "1221520"
  },
  {
    "text": "probe I'm validating the target application is running or not in the s in the before the test and after the",
    "start": "1221520",
    "end": "1227360"
  },
  {
    "text": "test so it is engine X L check so I am adding that probe in the edge mode which is start of test and also end of",
    "start": "1227360",
    "end": "1236280"
  },
  {
    "text": "test and then I'm running this experiment and I have also uh set up the",
    "start": "1236280",
    "end": "1243200"
  },
  {
    "text": "grafana for this so which is showing the CPU stress so right now there is no",
    "start": "1243200",
    "end": "1248799"
  },
  {
    "text": "fault and the it's almost consuming a zero like M CPU so that's why we are",
    "start": "1248799",
    "end": "1254880"
  },
  {
    "text": "seeing the value is uh zero and so it's it started the fault so once",
    "start": "1254880",
    "end": "1262280"
  },
  {
    "text": "the fault will chaos will be injected you will see some CPU Spike",
    "start": "1262280",
    "end": "1268360"
  },
  {
    "text": "here yeah I mean it will take a while so I mean do you have any questions in the",
    "start": "1278000",
    "end": "1283039"
  },
  {
    "text": "meantime yeah",
    "start": "1283039",
    "end": "1287039"
  },
  {
    "text": "we have added right now these are local a specific someone",
    "start": "1288760",
    "end": "1293840"
  },
  {
    "text": "who has created this Hub in their system Global is only 51 which by default comes",
    "start": "1293840",
    "end": "1299400"
  },
  {
    "text": "correct yes and if somebody wants to put into something to the global then there is a process or yeah so uh there is a",
    "start": "1299400",
    "end": "1306600"
  },
  {
    "text": "litmus chaos chaos chart repo okay from whereever the default Hub is created so",
    "start": "1306600",
    "end": "1311760"
  },
  {
    "text": "you can raise a PR there and then once the pr got much it will list there okay got it and apart from that anybody have",
    "start": "1311760",
    "end": "1319120"
  },
  {
    "text": "this Hub in locally in their system they will get this 5051 whatever the predefined chaos is already there",
    "start": "1319120",
    "end": "1325880"
  },
  {
    "text": "correct so it's based on the like let's say you can create a for out of the default repo lmas chos chaos chart and",
    "start": "1325880",
    "end": "1332120"
  },
  {
    "text": "then you can add your own fault also so 51 is there plus if you wanted to add one more from your side then it will",
    "start": "1332120",
    "end": "1337919"
  },
  {
    "text": "become 52 and then you can use it got it thank you",
    "start": "1337919",
    "end": "1343480"
  },
  {
    "text": "okay uh I had a question around uh how the fs are injected so here you saw that",
    "start": "1344279",
    "end": "1349480"
  },
  {
    "text": "you added md5 as a command yourself right to make the CPU Spike um for stuff",
    "start": "1349480",
    "end": "1354760"
  },
  {
    "text": "that is not really easy to do on our own for example let's say I want to check a disc stall issue or a dis failure issue",
    "start": "1354760",
    "end": "1361799"
  },
  {
    "text": "those AR there really is no command for me to run that will cause the disc to stall so how does that happen is this part of the 51 that is already there um",
    "start": "1361799",
    "end": "1369279"
  },
  {
    "text": "is how is that implemented or how do you that so all these like if you see this uh here let me open the chaos subub so",
    "start": "1369279",
    "end": "1375320"
  },
  {
    "text": "you will find uh let's say kubernetes specific so we have a pod delete container kill CPU stress Network loss",
    "start": "1375320",
    "end": "1382679"
  },
  {
    "text": "uh also the disk fill is there which is filling your fmrl storage uh so we already have we have covered almost all",
    "start": "1382679",
    "end": "1390000"
  },
  {
    "text": "all type of Falls so this is I use a sample like CPU stress to just illustrate how you can create a sample",
    "start": "1390000",
    "end": "1396440"
  },
  {
    "text": "experiment um so how is this different from the Amazon's fault Injection Service that they have is it similar to",
    "start": "1396440",
    "end": "1402400"
  },
  {
    "text": "you tie in with that um if I for example use AWS instead of kubernetes over here and I try to um simulate a dis failure",
    "start": "1402400",
    "end": "1409960"
  },
  {
    "text": "so I can use fault Injection Service that that's actually what I'm doing right now in my CI um and if I try to",
    "start": "1409960",
    "end": "1415799"
  },
  {
    "text": "use your system how would that be different would it still use the same system so AWS is uh you talking about",
    "start": "1415799",
    "end": "1421320"
  },
  {
    "text": "kubernetes specific or AWS ec2 instance or E instance ec2 instance specifically",
    "start": "1421320",
    "end": "1426760"
  },
  {
    "text": "that I I I want to check what happens to my application when the disc stalls while I'm running it on AWS the whole",
    "start": "1426760",
    "end": "1432919"
  },
  {
    "text": "kubernetes environment is running on top of that but I want to check on the absolute down level what happens if ec2",
    "start": "1432919",
    "end": "1438000"
  },
  {
    "text": "crashes a disc on E2 crashes got it yeah so if you are talking about only ec2",
    "start": "1438000",
    "end": "1443600"
  },
  {
    "text": "specific then of course you can use that like Amazon specific on this one uh like under the hood they are using like all",
    "start": "1443600",
    "end": "1449880"
  },
  {
    "text": "are using the same way but uh it's all about variety so let's say in AWS you will see only AWS specific fault only",
    "start": "1449880",
    "end": "1456919"
  },
  {
    "text": "but it contain cross infra it contain uh like if you're talking about Cloud it contain AWS as your VMware gcp",
    "start": "1456919",
    "end": "1463240"
  },
  {
    "text": "everything also for kubernetes we have a lot of faults right if you see it's uh like more than 20 to 30 Falls we have",
    "start": "1463240",
    "end": "1470559"
  },
  {
    "text": "for KU on so I can use AWS injections as well through your system that basically means that if I come here I that's why B",
    "start": "1470559",
    "end": "1476520"
  },
  {
    "text": "there so you can use any fault even you can use a AWS specific fault as well thank you so much yeah we have I think",
    "start": "1476520",
    "end": "1481840"
  },
  {
    "text": "AWS SSM also we have integrated so you can use AWS ssf through our thing we can",
    "start": "1481840",
    "end": "1487480"
  },
  {
    "text": "orchestrate that as well also um I have one question uh is",
    "start": "1487480",
    "end": "1493720"
  },
  {
    "text": "it just application Level or uh we can also like test it on an infrastructure level for example if I want to like",
    "start": "1493720",
    "end": "1499919"
  },
  {
    "text": "stress test a GPU machine so is that possible in chos correct correct yeah I",
    "start": "1499919",
    "end": "1505200"
  },
  {
    "text": "mean uh like in this example we were just talking about uh only a application",
    "start": "1505200",
    "end": "1510640"
  },
  {
    "text": "specific pod and all but it can be a node level it can be at a VM lbel as well so you can cover everything even",
    "start": "1510640",
    "end": "1516919"
  },
  {
    "text": "disk you can uh you know detach and attach disk also and you can do a",
    "start": "1516919",
    "end": "1522159"
  },
  {
    "text": "network loss at the node level as well uh I mean all all the variety of Falls we have okay is there any like",
    "start": "1522159",
    "end": "1529279"
  },
  {
    "text": "predefined fault for uh testing infrastructure stresses yeah so can you explain the",
    "start": "1529279",
    "end": "1535919"
  },
  {
    "text": "scenario for example like I have a VM um or a kubernetes cluster that has a GPU",
    "start": "1535919",
    "end": "1541320"
  },
  {
    "text": "attached to it and I want to stress test that like apart from running a full-fledged uh computer intensive application I just",
    "start": "1541320",
    "end": "1548720"
  },
  {
    "text": "want to stress justest that GPU is actually able to handle the stress and will it be able to like uh run my",
    "start": "1548720",
    "end": "1555720"
  },
  {
    "text": "application which I wanted to run at that level got it so if uh that that uh",
    "start": "1555720",
    "end": "1561679"
  },
  {
    "text": "VM is a part of kubernetes then of course you we have a node node memory and not node CPU as well so you can use",
    "start": "1561679",
    "end": "1568399"
  },
  {
    "text": "that and if it is let's say normal ec2 then ec2 specific fault also we have so",
    "start": "1568399",
    "end": "1573520"
  },
  {
    "text": "it's based on like if it is eks then of course you can use node or ec2 base if it is ec2 then you need to use a VM",
    "start": "1573520",
    "end": "1580640"
  },
  {
    "text": "specific you can't use kubernetes specific faults just to add on that we also have the infra chos label in the",
    "start": "1580640",
    "end": "1586720"
  },
  {
    "text": "hub so everything which is infras specific chaos will be labeled with the infr label it's high blast radius you",
    "start": "1586720",
    "end": "1592520"
  },
  {
    "text": "can got you thank you yeah so uh I think yeah grafana you can see the metrix so",
    "start": "1592520",
    "end": "1599080"
  },
  {
    "text": "it's a average so that's why you you can see the spike even that red reasons I",
    "start": "1599080",
    "end": "1604279"
  },
  {
    "text": "mean after the red region is because it's an average value but yeah I mean you can see once the within the red",
    "start": "1604279",
    "end": "1609520"
  },
  {
    "text": "region the CPU Spike and then it's drop down so yeah I mean that's that that's",
    "start": "1609520",
    "end": "1615960"
  },
  {
    "text": "the uh you know observability of the CPU hog so we verify by that",
    "start": "1615960",
    "end": "1624278"
  },
  {
    "text": "yeah so any other questions",
    "start": "1626200",
    "end": "1630799"
  },
  {
    "text": "or thank you I'm trying to figure out let's assume I have something a specific",
    "start": "1635159",
    "end": "1640360"
  },
  {
    "text": "set of chaos u i I'm designed myself so how the whole step I'm can Define is",
    "start": "1640360",
    "end": "1646320"
  },
  {
    "text": "there a specific type of language or the format you guys have where we have to Define okay let's",
    "start": "1646320",
    "end": "1652000"
  },
  {
    "text": "assume I can do stressing with the same time putting something I'm just giving you example like lots of thing like uh",
    "start": "1652000",
    "end": "1658960"
  },
  {
    "text": "what are those steps how those steps we can follow to create our own chaos these are fine this I have understand you have",
    "start": "1658960",
    "end": "1664960"
  },
  {
    "text": "some specific Co when it is in the cloud wise but something more complex than this or maybe simpler but a different",
    "start": "1664960",
    "end": "1671640"
  },
  {
    "text": "total uh like utilization something I want to try how I can Define this steps",
    "start": "1671640",
    "end": "1677320"
  },
  {
    "text": "is it difficult is a specific to language or is some kind of a format you guys are providing right now so how easy",
    "start": "1677320",
    "end": "1683399"
  },
  {
    "text": "or how difficult it is to define a new chaos got it so uh first part is uh like",
    "start": "1683399",
    "end": "1689720"
  },
  {
    "text": "let's say if you wanted to create your own fold first part is the what part right yeah so what exactly you wanted to",
    "start": "1689720",
    "end": "1694919"
  },
  {
    "text": "test so based on your problem statement of course you you need to construct the steps right uh I'm not talking about",
    "start": "1694919",
    "end": "1701480"
  },
  {
    "text": "language specific let's say I'm talking about the steps of pseudo code kind of thing let's say I wanted to uh let's say",
    "start": "1701480",
    "end": "1707000"
  },
  {
    "text": "stress or anything or whatever you want to do first you should have a problem statement and then in the",
    "start": "1707000",
    "end": "1712919"
  },
  {
    "text": "SDK we are orchestrating the experiment the exact business business logic of course you need to write let's say we",
    "start": "1712919",
    "end": "1718440"
  },
  {
    "text": "have a helper model in helper you can create your own helper so because this is a microservices based so it's",
    "start": "1718440",
    "end": "1724159"
  },
  {
    "text": "language independent the orchestration is of course based on SDK let's say we have a python SDK we have we have a ncel",
    "start": "1724159",
    "end": "1731080"
  },
  {
    "text": "SDK we have a goang SDK okay so you can use a SDK to run the August station but if let's say you don't want to use goang",
    "start": "1731080",
    "end": "1738480"
  },
  {
    "text": "you want to use your specific language then you can create your own helper in that specific language you can dockerize",
    "start": "1738480",
    "end": "1743919"
  },
  {
    "text": "it and then you can use that image as a lib image and then you can run it got it because it's a micros service base so I",
    "start": "1743919",
    "end": "1749919"
  },
  {
    "text": "mean it's language independent and it can communicate to API server or anything the kubernetes API correct",
    "start": "1749919",
    "end": "1755039"
  },
  {
    "text": "correct you can use the kubernetes client in your own language okay got it now thank you uh one one more additional",
    "start": "1755039",
    "end": "1760960"
  },
  {
    "text": "thing we also have the concept called resilience probe which you can use to inject uh ad hoc stuff on top of the",
    "start": "1760960",
    "end": "1767159"
  },
  {
    "text": "chaos injection that you doing so anything that your experiment doesn't touch you can do via the resilience",
    "start": "1767159",
    "end": "1773480"
  },
  {
    "text": "probes that is something you uh is like a binary uh like there are HTTP probe",
    "start": "1774120",
    "end": "1781200"
  },
  {
    "text": "CMD probe Prometheus probe so you can write your promql queries or CMD commands yeah yeah just one additional",
    "start": "1781200",
    "end": "1787440"
  },
  {
    "text": "point so fault is basically like uh you are injecting a fault you are disrupting the system uh and probe is like once you",
    "start": "1787440",
    "end": "1795039"
  },
  {
    "text": "are disrupting the system uh you are you wanted to validate few things right if it is healthy or not or your few things",
    "start": "1795039",
    "end": "1802519"
  },
  {
    "text": "are failing that you can do via probe so we have a kubernetes probe we have a Prometheus probe let's say you have a",
    "start": "1802519",
    "end": "1807880"
  },
  {
    "text": "Prometheus Matrix you wanted to validate and based on that you can uh attach a weightage also and then it will give a",
    "start": "1807880",
    "end": "1813760"
  },
  {
    "text": "resiliency score out of it I think next part sh will cover yeah",
    "start": "1813760",
    "end": "1820000"
  },
  {
    "text": "we we just um concluding now so we'll just like to mention a few points on how",
    "start": "1820000",
    "end": "1825240"
  },
  {
    "text": "you guys can contribute if you want to so we welcome contributions not just technical but non-technical too so we",
    "start": "1825240",
    "end": "1831279"
  },
  {
    "text": "have a lot of areas on documentation there are bug and feature reports there's a discussion as well which we can start if there's something you want",
    "start": "1831279",
    "end": "1837360"
  },
  {
    "text": "to add on and also the development of features bug fixes proposals everything is encouraged so it's not just code",
    "start": "1837360",
    "end": "1843519"
  },
  {
    "text": "contribution but if you want to add a new fault let's say or if you want to propose something new you can create a proposal as well on the issues and here",
    "start": "1843519",
    "end": "1850760"
  },
  {
    "text": "are just a nonexhaustive list of the Rios that you can contribute to the chaos charts which sham already",
    "start": "1850760",
    "end": "1856639"
  },
  {
    "text": "mentioned with the Hub repository the chaos workflows test tools is where all the helpers for litmas uh reside litmas",
    "start": "1856639",
    "end": "1863760"
  },
  {
    "text": "UI is kind of archived now uh it is the old design library of litmas we have",
    "start": "1863760",
    "end": "1869159"
  },
  {
    "text": "litmas go which is the one we're using today and website litmas Kos is the litmas website which is for UI",
    "start": "1869159",
    "end": "1877360"
  },
  {
    "text": "developers lastly just the Cadence of the litmus Community calls that we have so there are two calls that we currently",
    "start": "1877360",
    "end": "1884240"
  },
  {
    "text": "run which is the contributors and maintainers meeting which happens on every second and fourth Thursday of the month and the other one is the community",
    "start": "1884240",
    "end": "1891120"
  },
  {
    "text": "meeting which is sort of non-technical and covers most of the road map items and uh community members uh the",
    "start": "1891120",
    "end": "1898039"
  },
  {
    "text": "contributions that they do and it's more for the community and the contributors one is more for the maintainers so this",
    "start": "1898039",
    "end": "1904320"
  },
  {
    "text": "happens on every third Wednesday of the month so we have three uh calls each month uh which you're Fe free to join",
    "start": "1904320",
    "end": "1910519"
  },
  {
    "text": "and uh that's all of this uh could be find found on the website as well as on the slack channel so if you're not on",
    "start": "1910519",
    "end": "1916760"
  },
  {
    "text": "the slack already you can use this slack. gats.io which is the kubernetes workspace and you can just search the",
    "start": "1916760",
    "end": "1922840"
  },
  {
    "text": "litmus Channel there and join us so um that's all uh for uh today from us we",
    "start": "1922840",
    "end": "1929679"
  },
  {
    "text": "have two talks the project lightning talk up next tomorrow and then the day after we have another litmus talk on",
    "start": "1929679",
    "end": "1936919"
  },
  {
    "text": "safeguarding your slas using resilience probe which I talked about uh by a few other maintainers um and we also have",
    "start": "1936919",
    "end": "1943760"
  },
  {
    "text": "the booth table table number five which will be there from 11 on Thursday in the",
    "start": "1943760",
    "end": "1948840"
  },
  {
    "text": "solution showcase so if you have any questions feel free to join us and we have a couple of swags which we would",
    "start": "1948840",
    "end": "1954440"
  },
  {
    "text": "like to distribute to so yeah that's all from us if you have any questions we'd love to take",
    "start": "1954440",
    "end": "1961600"
  },
  {
    "text": "them question um first of all thank you to all four of you it was a great session",
    "start": "1970039",
    "end": "1976240"
  },
  {
    "text": "if you have questions we are here I think all four of the speakers are here for a while but after this talk we'll",
    "start": "1976240",
    "end": "1983840"
  },
  {
    "text": "have the lunch so we can use that as a hallway track as well if you want to grab your lunch and talk uh I have a",
    "start": "1983840",
    "end": "1990120"
  },
  {
    "text": "question the workshop link uh that you shared the first QR code that will stay",
    "start": "1990120",
    "end": "1996399"
  },
  {
    "text": "remain for how long if somebody wants to let it try and uh we can keep that open for a",
    "start": "1996399",
    "end": "2005000"
  },
  {
    "text": "little while like 2 three more hours I think that should be fine or to the end of today is also fine end of uh today so",
    "start": "2005000",
    "end": "2011399"
  },
  {
    "text": "if you want to try that out feel free to try try that out and then we'll sort of uh modify the link once after today",
    "start": "2011399",
    "end": "2021158"
  }
]