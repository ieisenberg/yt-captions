[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "hi everyone uh my name is max",
    "start": "80",
    "end": "2080"
  },
  {
    "text": "schritzinger",
    "start": "2080",
    "end": "3040"
  },
  {
    "text": "i'm an sre at bloomberg and today i'm",
    "start": "3040",
    "end": "5040"
  },
  {
    "text": "going to talk about",
    "start": "5040",
    "end": "6799"
  },
  {
    "text": "integrating kubernetes networking into",
    "start": "6799",
    "end": "8800"
  },
  {
    "text": "bare metal or on-premise environments",
    "start": "8800",
    "end": "11679"
  },
  {
    "text": "so just kind of an overview of this talk",
    "start": "11679",
    "end": "14160"
  },
  {
    "start": "12000",
    "end": "12000"
  },
  {
    "text": "the first thing i'm going to go over",
    "start": "14160",
    "end": "15440"
  },
  {
    "text": "is kind of the uh the basics of",
    "start": "15440",
    "end": "18560"
  },
  {
    "text": "kubernetes networking",
    "start": "18560",
    "end": "19680"
  },
  {
    "text": "um i'm gonna talk about kind of what the",
    "start": "19680",
    "end": "21680"
  },
  {
    "text": "options are for",
    "start": "21680",
    "end": "23039"
  },
  {
    "text": "implementing that network model uh",
    "start": "23039",
    "end": "24880"
  },
  {
    "text": "on-prem or on bare metal",
    "start": "24880",
    "end": "26960"
  },
  {
    "text": "um i'm gonna talk about our specific",
    "start": "26960",
    "end": "28400"
  },
  {
    "text": "networking environment so",
    "start": "28400",
    "end": "30080"
  },
  {
    "text": "um what our hosts like what our hosts",
    "start": "30080",
    "end": "32960"
  },
  {
    "text": "look like",
    "start": "32960",
    "end": "33680"
  },
  {
    "text": "what our network looks like and kind of",
    "start": "33680",
    "end": "35600"
  },
  {
    "text": "how that creates some challenges",
    "start": "35600",
    "end": "37200"
  },
  {
    "text": "in implementing some kubernetes",
    "start": "37200",
    "end": "39120"
  },
  {
    "text": "networking uh and then",
    "start": "39120",
    "end": "40879"
  },
  {
    "text": "hopefully if i have time i'm gonna talk",
    "start": "40879",
    "end": "42480"
  },
  {
    "text": "about some tips and some tools that you",
    "start": "42480",
    "end": "44559"
  },
  {
    "text": "might be able to use to",
    "start": "44559",
    "end": "46079"
  },
  {
    "text": "debug your own environments if you're",
    "start": "46079",
    "end": "47680"
  },
  {
    "text": "doing this so",
    "start": "47680",
    "end": "49760"
  },
  {
    "start": "49000",
    "end": "49000"
  },
  {
    "text": "the first thing i want to do is i want",
    "start": "49760",
    "end": "50800"
  },
  {
    "text": "to get on the same page around what the",
    "start": "50800",
    "end": "52559"
  },
  {
    "text": "kubernetes networking model is so",
    "start": "52559",
    "end": "55039"
  },
  {
    "text": "pods are our schedule units work they",
    "start": "55039",
    "end": "57440"
  },
  {
    "text": "all get an ip address and",
    "start": "57440",
    "end": "59359"
  },
  {
    "text": "the model says among other things that",
    "start": "59359",
    "end": "61440"
  },
  {
    "text": "uh pods need to be able to communicate",
    "start": "61440",
    "end": "63520"
  },
  {
    "text": "with each other",
    "start": "63520",
    "end": "64239"
  },
  {
    "text": "so there's no real spec on how you have",
    "start": "64239",
    "end": "67119"
  },
  {
    "text": "to implement that",
    "start": "67119",
    "end": "68080"
  },
  {
    "text": "but in general there's kind of two",
    "start": "68080",
    "end": "69200"
  },
  {
    "text": "categories of implementations",
    "start": "69200",
    "end": "72000"
  },
  {
    "text": "um so there are overlay networks uh and",
    "start": "72000",
    "end": "74720"
  },
  {
    "text": "then there's kind of more of a flat",
    "start": "74720",
    "end": "76240"
  },
  {
    "text": "network model and the distinction",
    "start": "76240",
    "end": "77680"
  },
  {
    "text": "between these two",
    "start": "77680",
    "end": "78479"
  },
  {
    "text": "is uh does the rest of the network have",
    "start": "78479",
    "end": "81439"
  },
  {
    "text": "knowledge of the pod id space",
    "start": "81439",
    "end": "83439"
  },
  {
    "text": "of the pod cider if the rest",
    "start": "83439",
    "end": "86479"
  },
  {
    "text": "rest of the network does um then you're",
    "start": "86479",
    "end": "88400"
  },
  {
    "text": "probably running with a flat network",
    "start": "88400",
    "end": "90159"
  },
  {
    "text": "if the rest of the network doesn't",
    "start": "90159",
    "end": "91920"
  },
  {
    "text": "really have any knowledge of the pod ip",
    "start": "91920",
    "end": "93280"
  },
  {
    "text": "space",
    "start": "93280",
    "end": "94000"
  },
  {
    "text": "uh then you're probably using an overlay",
    "start": "94000",
    "end": "95520"
  },
  {
    "text": "and i guess really the",
    "start": "95520",
    "end": "97119"
  },
  {
    "text": "obvious difference here is that you know",
    "start": "97119",
    "end": "98479"
  },
  {
    "text": "if you're off cluster if you can talk to",
    "start": "98479",
    "end": "100000"
  },
  {
    "text": "a pod ip",
    "start": "100000",
    "end": "101119"
  },
  {
    "text": "uh then you're probably running the flat",
    "start": "101119",
    "end": "102399"
  },
  {
    "text": "network uh and if you can't then it's",
    "start": "102399",
    "end": "104000"
  },
  {
    "text": "probably an overlay",
    "start": "104000",
    "end": "104880"
  },
  {
    "text": "so in our in our environments uh we have",
    "start": "104880",
    "end": "107680"
  },
  {
    "text": "to support both",
    "start": "107680",
    "end": "108479"
  },
  {
    "text": "um so i'm gonna talk about that um but",
    "start": "108479",
    "end": "110720"
  },
  {
    "text": "you might be wondering",
    "start": "110720",
    "end": "111759"
  },
  {
    "text": "uh you know what are uh what is required",
    "start": "111759",
    "end": "114880"
  },
  {
    "start": "112000",
    "end": "112000"
  },
  {
    "text": "in order to implement these right",
    "start": "114880",
    "end": "116320"
  },
  {
    "text": "so overlay networks we need two things",
    "start": "116320",
    "end": "119600"
  },
  {
    "text": "um we need encapsulation if we ever want",
    "start": "119600",
    "end": "122000"
  },
  {
    "text": "to talk to a pod ip from",
    "start": "122000",
    "end": "123360"
  },
  {
    "text": "a pod or a host in the cluster um",
    "start": "123360",
    "end": "126479"
  },
  {
    "text": "so if we drop packets onto the wire with",
    "start": "126479",
    "end": "128959"
  },
  {
    "text": "a destination address being a pod ip",
    "start": "128959",
    "end": "131120"
  },
  {
    "text": "uh that network's just or the network's",
    "start": "131120",
    "end": "132800"
  },
  {
    "text": "just gonna drop uh that traffic on the",
    "start": "132800",
    "end": "134720"
  },
  {
    "text": "ground because again",
    "start": "134720",
    "end": "135520"
  },
  {
    "text": "in an overlay scenario uh the network",
    "start": "135520",
    "end": "137920"
  },
  {
    "text": "doesn't have any knowledge of the body b",
    "start": "137920",
    "end": "139680"
  },
  {
    "text": "space",
    "start": "139680",
    "end": "140160"
  },
  {
    "text": "so what we do is uh we take that",
    "start": "140160",
    "end": "141920"
  },
  {
    "text": "original traffic uh the original",
    "start": "141920",
    "end": "143680"
  },
  {
    "text": "uh the encapsulated traffic and we put",
    "start": "143680",
    "end": "146239"
  },
  {
    "text": "it in another protocol like",
    "start": "146239",
    "end": "148000"
  },
  {
    "text": "uh udp if you're doing a vxlan or in",
    "start": "148000",
    "end": "151519"
  },
  {
    "text": "an ip packet if you're doing ip and ip",
    "start": "151519",
    "end": "153519"
  },
  {
    "text": "tunnels",
    "start": "153519",
    "end": "155200"
  },
  {
    "text": "and now the destination address on this",
    "start": "155200",
    "end": "156720"
  },
  {
    "text": "encapsulating packet is going to be",
    "start": "156720",
    "end": "159360"
  },
  {
    "text": "the host that the destination pod lives",
    "start": "159360",
    "end": "161519"
  },
  {
    "text": "on uh the source address is going to be",
    "start": "161519",
    "end": "163840"
  },
  {
    "text": "the",
    "start": "163840",
    "end": "164560"
  },
  {
    "text": "uh the host the originating pod lives on",
    "start": "164560",
    "end": "166959"
  },
  {
    "text": "and now we can pass that traffic uh when",
    "start": "166959",
    "end": "168720"
  },
  {
    "text": "it gets to the destination host the",
    "start": "168720",
    "end": "170239"
  },
  {
    "text": "station notice we'll unwrap it",
    "start": "170239",
    "end": "171760"
  },
  {
    "text": "and then pass it all kind of",
    "start": "171760",
    "end": "172800"
  },
  {
    "text": "transparently to the pod but if we want",
    "start": "172800",
    "end": "174959"
  },
  {
    "text": "to have this",
    "start": "174959",
    "end": "175519"
  },
  {
    "text": "going uh we need kind of an agent that's",
    "start": "175519",
    "end": "177519"
  },
  {
    "text": "running on all of our nodes that's",
    "start": "177519",
    "end": "179120"
  },
  {
    "text": "programming these routes",
    "start": "179120",
    "end": "180640"
  },
  {
    "text": "that knows if a pod gets launched on a",
    "start": "180640",
    "end": "183040"
  },
  {
    "text": "certain host",
    "start": "183040",
    "end": "184560"
  },
  {
    "text": "um if any of the other hosts want to",
    "start": "184560",
    "end": "186319"
  },
  {
    "text": "talk to that pod ip then they need to",
    "start": "186319",
    "end": "187760"
  },
  {
    "text": "encapsulate traffic",
    "start": "187760",
    "end": "189040"
  },
  {
    "text": "to that host so that's one of the things",
    "start": "189040",
    "end": "190640"
  },
  {
    "text": "that we need for implementing an overlay",
    "start": "190640",
    "end": "192159"
  },
  {
    "text": "network",
    "start": "192159",
    "end": "192800"
  },
  {
    "text": "uh the second thing that we need is we",
    "start": "192800",
    "end": "194319"
  },
  {
    "text": "need source stating uh if my pod wants",
    "start": "194319",
    "end": "196480"
  },
  {
    "text": "to talk to",
    "start": "196480",
    "end": "197360"
  },
  {
    "text": "the rest of the network um then",
    "start": "197360",
    "end": "200640"
  },
  {
    "text": "again if the source addresses a pod ip",
    "start": "200640",
    "end": "202560"
  },
  {
    "text": "the traffic might reach the destination",
    "start": "202560",
    "end": "204480"
  },
  {
    "text": "but it's not going to be able to come",
    "start": "204480",
    "end": "205599"
  },
  {
    "text": "back so what we do is we take",
    "start": "205599",
    "end": "207360"
  },
  {
    "text": "the host ip and we put that put that in",
    "start": "207360",
    "end": "209920"
  },
  {
    "text": "place of the the pods address",
    "start": "209920",
    "end": "212080"
  },
  {
    "text": "and then the kernel will kind of keep",
    "start": "212080",
    "end": "213280"
  },
  {
    "text": "track of this address translates",
    "start": "213280",
    "end": "215440"
  },
  {
    "text": "address translation that that's happened",
    "start": "215440",
    "end": "218080"
  },
  {
    "text": "and on linux this is usually done using",
    "start": "218080",
    "end": "219760"
  },
  {
    "text": "uh iptables masquerade",
    "start": "219760",
    "end": "223120"
  },
  {
    "text": "conversely flat networks we don't need",
    "start": "223599",
    "end": "225360"
  },
  {
    "text": "encapsulation we don't need source",
    "start": "225360",
    "end": "226799"
  },
  {
    "text": "snapping",
    "start": "226799",
    "end": "227280"
  },
  {
    "text": "right because uh you can just talk",
    "start": "227280",
    "end": "229519"
  },
  {
    "text": "directly to pod ips",
    "start": "229519",
    "end": "231120"
  },
  {
    "text": "they're totally routable on the network",
    "start": "231120",
    "end": "233040"
  },
  {
    "text": "what you do need though is you still",
    "start": "233040",
    "end": "234239"
  },
  {
    "text": "kind of need an agent that",
    "start": "234239",
    "end": "236319"
  },
  {
    "text": "is sharing pod routes so again if pod",
    "start": "236319",
    "end": "238480"
  },
  {
    "text": "gets launched we need some way of",
    "start": "238480",
    "end": "239920"
  },
  {
    "text": "informing",
    "start": "239920",
    "end": "240560"
  },
  {
    "text": "the rest of the network that this pod",
    "start": "240560",
    "end": "242400"
  },
  {
    "text": "lives on this host and this is where the",
    "start": "242400",
    "end": "243599"
  },
  {
    "text": "traffic should go",
    "start": "243599",
    "end": "245760"
  },
  {
    "text": "um so you're maybe wondering you know",
    "start": "245760",
    "end": "247280"
  },
  {
    "start": "246000",
    "end": "246000"
  },
  {
    "text": "what what should you choose um and i",
    "start": "247280",
    "end": "249040"
  },
  {
    "text": "think there's probably pros and cons to",
    "start": "249040",
    "end": "250560"
  },
  {
    "text": "each",
    "start": "250560",
    "end": "250959"
  },
  {
    "text": "so with overlay networks",
    "start": "250959",
    "end": "254560"
  },
  {
    "text": "you don't actually need to maybe engage",
    "start": "254560",
    "end": "256560"
  },
  {
    "text": "your network team for these so all you",
    "start": "256560",
    "end": "258000"
  },
  {
    "text": "really need to implement an overlay",
    "start": "258000",
    "end": "259600"
  },
  {
    "text": "is udp connectivity or ipconnectivity",
    "start": "259600",
    "end": "262720"
  },
  {
    "text": "but i'll put a little asterisk by that",
    "start": "262720",
    "end": "264160"
  },
  {
    "text": "and come back to that later",
    "start": "264160",
    "end": "266400"
  },
  {
    "text": "you can reuse the pod ip space between",
    "start": "266400",
    "end": "268160"
  },
  {
    "text": "clusters because again this is not",
    "start": "268160",
    "end": "270160"
  },
  {
    "text": "these are not real ips you don't have to",
    "start": "270160",
    "end": "271600"
  },
  {
    "text": "worry about allocating out of",
    "start": "271600",
    "end": "273759"
  },
  {
    "text": "um your organization's range range or",
    "start": "273759",
    "end": "276000"
  },
  {
    "text": "something um",
    "start": "276000",
    "end": "277840"
  },
  {
    "text": "and something else that i think is",
    "start": "277840",
    "end": "278960"
  },
  {
    "text": "really nice about these is that the",
    "start": "278960",
    "end": "280960"
  },
  {
    "text": "ingress points your cluster are really",
    "start": "280960",
    "end": "282880"
  },
  {
    "text": "well defined so you've got",
    "start": "282880",
    "end": "284720"
  },
  {
    "text": "um you've got node port services you've",
    "start": "284720",
    "end": "286720"
  },
  {
    "text": "got load balancer services",
    "start": "286720",
    "end": "288080"
  },
  {
    "text": "uh you've got host network pods but it's",
    "start": "288080",
    "end": "290479"
  },
  {
    "text": "it's really kind of obvious where",
    "start": "290479",
    "end": "291680"
  },
  {
    "text": "traffic can come into your cluster",
    "start": "291680",
    "end": "293199"
  },
  {
    "text": "um and that's not the case uh with flat",
    "start": "293199",
    "end": "295360"
  },
  {
    "text": "networks",
    "start": "295360",
    "end": "296240"
  },
  {
    "text": "um some downsides though are that you",
    "start": "296240",
    "end": "298000"
  },
  {
    "text": "are going to pay a little bit of",
    "start": "298000",
    "end": "298960"
  },
  {
    "text": "overhead in terms of computation in",
    "start": "298960",
    "end": "300400"
  },
  {
    "text": "terms of space on the packet in terms of",
    "start": "300400",
    "end": "301919"
  },
  {
    "text": "encapsulation",
    "start": "301919",
    "end": "302800"
  },
  {
    "text": "so that's not so great um",
    "start": "302800",
    "end": "306400"
  },
  {
    "text": "also if you if you have on the rest of",
    "start": "306400",
    "end": "308720"
  },
  {
    "text": "your network",
    "start": "308720",
    "end": "309840"
  },
  {
    "text": "source address space firewalls uh all of",
    "start": "309840",
    "end": "312720"
  },
  {
    "text": "your pod traffic is going to have the",
    "start": "312720",
    "end": "314320"
  },
  {
    "text": "ips of your host",
    "start": "314320",
    "end": "315280"
  },
  {
    "text": "so all of your pods are going to be as",
    "start": "315280",
    "end": "317280"
  },
  {
    "text": "privileged or as unprivileged as your",
    "start": "317280",
    "end": "319120"
  },
  {
    "text": "hosts are",
    "start": "319120",
    "end": "319840"
  },
  {
    "text": "against those firewalls so that may be",
    "start": "319840",
    "end": "321759"
  },
  {
    "text": "something that you don't want or",
    "start": "321759",
    "end": "322880"
  },
  {
    "text": "something that you do want but",
    "start": "322880",
    "end": "324479"
  },
  {
    "text": "something to consider and also uh this",
    "start": "324479",
    "end": "327199"
  },
  {
    "text": "does kind of complicate debugging",
    "start": "327199",
    "end": "328720"
  },
  {
    "text": "um so you have to be aware that this",
    "start": "328720",
    "end": "331199"
  },
  {
    "text": "source now is happening or this",
    "start": "331199",
    "end": "332720"
  },
  {
    "text": "encapsulation is happening if you're",
    "start": "332720",
    "end": "334080"
  },
  {
    "text": "using a tool like tcp dump",
    "start": "334080",
    "end": "336800"
  },
  {
    "text": "to contrast flat networks don't have",
    "start": "336800",
    "end": "338560"
  },
  {
    "start": "337000",
    "end": "337000"
  },
  {
    "text": "that same issue uh",
    "start": "338560",
    "end": "340560"
  },
  {
    "text": "so if you're using tcp dump everything",
    "start": "340560",
    "end": "342720"
  },
  {
    "text": "kind of looks as you'd expect",
    "start": "342720",
    "end": "345039"
  },
  {
    "text": "um so that's kind of nice uh also pods",
    "start": "345039",
    "end": "348240"
  },
  {
    "text": "can be talked to you directly so because",
    "start": "348240",
    "end": "349759"
  },
  {
    "text": "they're routable",
    "start": "349759",
    "end": "350479"
  },
  {
    "text": "on the rest of the network you could",
    "start": "350479",
    "end": "351520"
  },
  {
    "text": "imagine maybe a service discovery",
    "start": "351520",
    "end": "354160"
  },
  {
    "text": "mechanism where we talked directly to",
    "start": "354160",
    "end": "355680"
  },
  {
    "text": "pods",
    "start": "355680",
    "end": "356240"
  },
  {
    "text": "i'm not sure if i would do that but",
    "start": "356240",
    "end": "357680"
  },
  {
    "text": "something you could do",
    "start": "357680",
    "end": "359360"
  },
  {
    "text": "there's also lots of options for sort of",
    "start": "359360",
    "end": "361120"
  },
  {
    "text": "stress phase filtering so i mentioned",
    "start": "361120",
    "end": "362639"
  },
  {
    "text": "before that",
    "start": "362639",
    "end": "363680"
  },
  {
    "text": "with source snatting everything is as",
    "start": "363680",
    "end": "366160"
  },
  {
    "text": "privileged as your host but",
    "start": "366160",
    "end": "367919"
  },
  {
    "text": "in a flat network we can kind of choose",
    "start": "367919",
    "end": "369840"
  },
  {
    "text": "depending on what your net network",
    "start": "369840",
    "end": "371039"
  },
  {
    "text": "provider is we can kind of choose which",
    "start": "371039",
    "end": "372560"
  },
  {
    "text": "ip ranges we want to drop pods into",
    "start": "372560",
    "end": "375039"
  },
  {
    "text": "um and so that can kind of make them",
    "start": "375039",
    "end": "376639"
  },
  {
    "text": "more or less privileged",
    "start": "376639",
    "end": "378160"
  },
  {
    "text": "against those hosts or the source",
    "start": "378160",
    "end": "379759"
  },
  {
    "text": "address-based firewalls",
    "start": "379759",
    "end": "381759"
  },
  {
    "text": "uh the downside of this is that you",
    "start": "381759",
    "end": "383600"
  },
  {
    "text": "definitely are going to have to start",
    "start": "383600",
    "end": "384560"
  },
  {
    "text": "your network team because",
    "start": "384560",
    "end": "386160"
  },
  {
    "text": "these are real ip addresses on your",
    "start": "386160",
    "end": "387600"
  },
  {
    "text": "network um you are gonna have to",
    "start": "387600",
    "end": "389280"
  },
  {
    "text": "allocate real ranges you are gonna have",
    "start": "389280",
    "end": "390800"
  },
  {
    "text": "to",
    "start": "390800",
    "end": "391280"
  },
  {
    "text": "uh share those ranges somehow so you are",
    "start": "391280",
    "end": "394240"
  },
  {
    "text": "going to have to talk to",
    "start": "394240",
    "end": "395280"
  },
  {
    "text": "the network team we also have this nice",
    "start": "395280",
    "end": "398479"
  },
  {
    "text": "property where",
    "start": "398479",
    "end": "399199"
  },
  {
    "text": "it's really obvious where traffic is",
    "start": "399199",
    "end": "400960"
  },
  {
    "text": "coming into the cluster so",
    "start": "400960",
    "end": "402560"
  },
  {
    "text": "you might be exposing certain services",
    "start": "402560",
    "end": "405120"
  },
  {
    "text": "to the broader network",
    "start": "405120",
    "end": "406319"
  },
  {
    "text": "in a flat network or it's just something",
    "start": "406319",
    "end": "407919"
  },
  {
    "text": "that you have to be aware of and kind of",
    "start": "407919",
    "end": "409759"
  },
  {
    "text": "handle maybe with network policy",
    "start": "409759",
    "end": "412000"
  },
  {
    "text": "um and i think something that that is",
    "start": "412000",
    "end": "414479"
  },
  {
    "text": "really uh",
    "start": "414479",
    "end": "415599"
  },
  {
    "text": "overlooked is that uh ip address",
    "start": "415599",
    "end": "417840"
  },
  {
    "text": "management is",
    "start": "417840",
    "end": "418720"
  },
  {
    "text": "is a huge issue um in flat networks so",
    "start": "418720",
    "end": "421759"
  },
  {
    "text": "i i talked a little bit about that here",
    "start": "421759",
    "end": "423520"
  },
  {
    "start": "422000",
    "end": "422000"
  },
  {
    "text": "um",
    "start": "423520",
    "end": "425120"
  },
  {
    "text": "i think a really common scenario is that",
    "start": "425120",
    "end": "427039"
  },
  {
    "text": "in a data center you may have multiple",
    "start": "427039",
    "end": "428800"
  },
  {
    "text": "availability zones",
    "start": "428800",
    "end": "429919"
  },
  {
    "text": "and each of these availability zones may",
    "start": "429919",
    "end": "431759"
  },
  {
    "text": "correspond to",
    "start": "431759",
    "end": "433039"
  },
  {
    "text": "a different ip range um and so a",
    "start": "433039",
    "end": "435199"
  },
  {
    "text": "requirement on your cluster is going to",
    "start": "435199",
    "end": "436479"
  },
  {
    "text": "be that if you launch a pod",
    "start": "436479",
    "end": "437840"
  },
  {
    "text": "in one availability zone you need to",
    "start": "437840",
    "end": "439520"
  },
  {
    "text": "make sure that it gets an ip",
    "start": "439520",
    "end": "442000"
  },
  {
    "text": "from that zone's range and conversely",
    "start": "442000",
    "end": "443840"
  },
  {
    "text": "you know if it's launched in the other",
    "start": "443840",
    "end": "444960"
  },
  {
    "text": "zone it needs an ip from the other zones",
    "start": "444960",
    "end": "446720"
  },
  {
    "text": "range",
    "start": "446720",
    "end": "448000"
  },
  {
    "text": "and so this is something that you know",
    "start": "448000",
    "end": "449199"
  },
  {
    "text": "you really need to be thinking about uh",
    "start": "449199",
    "end": "451120"
  },
  {
    "text": "if you're going to go down the flat",
    "start": "451120",
    "end": "452960"
  },
  {
    "text": "network path",
    "start": "452960",
    "end": "454880"
  },
  {
    "text": "and it's kind of for that reason that um",
    "start": "454880",
    "end": "456800"
  },
  {
    "text": "i wouldn't suggest advertising",
    "start": "456800",
    "end": "458479"
  },
  {
    "text": "service fips uh to the rest of your",
    "start": "458479",
    "end": "460240"
  },
  {
    "text": "network so i know that's something that",
    "start": "460240",
    "end": "461759"
  },
  {
    "text": "some network providers will do but",
    "start": "461759",
    "end": "463840"
  },
  {
    "text": "there's really",
    "start": "463840",
    "end": "464560"
  },
  {
    "text": "as far as i know no great way of getting",
    "start": "464560",
    "end": "467360"
  },
  {
    "text": "uh",
    "start": "467360",
    "end": "468080"
  },
  {
    "text": "good ipam management around these",
    "start": "468080",
    "end": "470240"
  },
  {
    "text": "service hips so",
    "start": "470240",
    "end": "471280"
  },
  {
    "text": "something to uh keep in mind um i",
    "start": "471280",
    "end": "474560"
  },
  {
    "text": "mentioned previously",
    "start": "474560",
    "end": "475599"
  },
  {
    "text": "with overlays you may not have to talk",
    "start": "475599",
    "end": "476879"
  },
  {
    "text": "document that we're saying what should",
    "start": "476879",
    "end": "477840"
  },
  {
    "text": "be good but",
    "start": "477840",
    "end": "478879"
  },
  {
    "text": "i think you should also consider that i",
    "start": "478879",
    "end": "481199"
  },
  {
    "text": "if you don't",
    "start": "481199",
    "end": "482000"
  },
  {
    "text": "then your options for layer 3 or layer 4",
    "start": "482000",
    "end": "484080"
  },
  {
    "text": "ingress are just node boards",
    "start": "484080",
    "end": "486080"
  },
  {
    "text": "and that may not be enough for you so",
    "start": "486080",
    "end": "488879"
  },
  {
    "text": "you might not be out of the woods in",
    "start": "488879",
    "end": "490000"
  },
  {
    "text": "that regard",
    "start": "490000",
    "end": "491599"
  },
  {
    "text": "and even with node ports there's some",
    "start": "491599",
    "end": "493520"
  },
  {
    "text": "downsides right so you have to come",
    "start": "493520",
    "end": "495120"
  },
  {
    "text": "you have to grab a port out of this high",
    "start": "495120",
    "end": "496560"
  },
  {
    "text": "port range um clients still have to find",
    "start": "496560",
    "end": "498879"
  },
  {
    "text": "out about your node ips somehow so you",
    "start": "498879",
    "end": "500560"
  },
  {
    "text": "still need some service discovery",
    "start": "500560",
    "end": "501759"
  },
  {
    "text": "mechanism",
    "start": "501759",
    "end": "502879"
  },
  {
    "text": "um so something to consider uh the last",
    "start": "502879",
    "end": "506000"
  },
  {
    "text": "thing i'll say is that",
    "start": "506000",
    "end": "507280"
  },
  {
    "text": "uh by default uh the kubernetes",
    "start": "507280",
    "end": "509759"
  },
  {
    "text": "controller manager assumes that you have",
    "start": "509759",
    "end": "511360"
  },
  {
    "text": "one",
    "start": "511360",
    "end": "512240"
  },
  {
    "text": "pod slider that's gonna cover your",
    "start": "512240",
    "end": "513599"
  },
  {
    "text": "entire uh cluster range",
    "start": "513599",
    "end": "516479"
  },
  {
    "text": "um and out of this cider it's gonna kind",
    "start": "516479",
    "end": "518479"
  },
  {
    "text": "of hand out a",
    "start": "518479",
    "end": "519680"
  },
  {
    "text": "node sider to every single node that",
    "start": "519680",
    "end": "521120"
  },
  {
    "text": "joins your cluster",
    "start": "521120",
    "end": "523039"
  },
  {
    "text": "on a flat network i think this is",
    "start": "523039",
    "end": "524560"
  },
  {
    "text": "probably too heavy-handed to work",
    "start": "524560",
    "end": "526880"
  },
  {
    "text": "especially if you ever want to like grow",
    "start": "526880",
    "end": "528399"
  },
  {
    "text": "your ip range if you want to just joint",
    "start": "528399",
    "end": "530240"
  },
  {
    "text": "ip range that's probably not something",
    "start": "530240",
    "end": "532959"
  },
  {
    "text": "that's going to work for you in a flat",
    "start": "532959",
    "end": "534080"
  },
  {
    "text": "network in an overlay it might be okay",
    "start": "534080",
    "end": "536640"
  },
  {
    "text": "um but but again something to think",
    "start": "536640",
    "end": "538160"
  },
  {
    "text": "about when you're choosing your network",
    "start": "538160",
    "end": "539519"
  },
  {
    "text": "provider",
    "start": "539519",
    "end": "541680"
  },
  {
    "text": "um so for us we use calco for",
    "start": "541680",
    "end": "543600"
  },
  {
    "text": "implementing both these models",
    "start": "543600",
    "end": "545120"
  },
  {
    "text": "um it does overlays those flat networks",
    "start": "545120",
    "end": "547839"
  },
  {
    "text": "and it has really good support for ipam",
    "start": "547839",
    "end": "549680"
  },
  {
    "text": "so with calco i can say if i launch a",
    "start": "549680",
    "end": "552959"
  },
  {
    "text": "host on a certain node or actually if i",
    "start": "552959",
    "end": "555519"
  },
  {
    "text": "launch a pod",
    "start": "555519",
    "end": "556320"
  },
  {
    "text": "on a node i can look at the node label",
    "start": "556320",
    "end": "558320"
  },
  {
    "text": "and use that node label to determine",
    "start": "558320",
    "end": "560000"
  },
  {
    "text": "which ipool",
    "start": "560000",
    "end": "561440"
  },
  {
    "text": "that pod gets an ip from you can also do",
    "start": "561440",
    "end": "563600"
  },
  {
    "text": "this with labels on a pod so you can say",
    "start": "563600",
    "end": "565519"
  },
  {
    "text": "pods with a certain label should get",
    "start": "565519",
    "end": "567200"
  },
  {
    "text": "ips out of a certain pool um and and",
    "start": "567200",
    "end": "569600"
  },
  {
    "text": "this is this is really flexible um you",
    "start": "569600",
    "end": "571600"
  },
  {
    "text": "can get really fine grain control here",
    "start": "571600",
    "end": "573360"
  },
  {
    "text": "which is great great for us um it also",
    "start": "573360",
    "end": "576399"
  },
  {
    "text": "implements kubernetes network policies",
    "start": "576399",
    "end": "578000"
  },
  {
    "text": "which is good",
    "start": "578000",
    "end": "579920"
  },
  {
    "text": "um so what are the problems that we run",
    "start": "579920",
    "end": "582080"
  },
  {
    "text": "into um",
    "start": "582080",
    "end": "583200"
  },
  {
    "text": "we run so as a bit of backgrounds we run",
    "start": "583200",
    "end": "585600"
  },
  {
    "text": "both bare metal on-prem and also in",
    "start": "585600",
    "end": "587600"
  },
  {
    "text": "private cloud vms",
    "start": "587600",
    "end": "589519"
  },
  {
    "text": "uh we support both um and we kind of had",
    "start": "589519",
    "end": "592240"
  },
  {
    "text": "some tooling that we could point at",
    "start": "592240",
    "end": "593600"
  },
  {
    "text": "legacy hosts and",
    "start": "593600",
    "end": "594720"
  },
  {
    "text": "and get out of uh kubernetes cluster um",
    "start": "594720",
    "end": "597920"
  },
  {
    "text": "but we have this new network",
    "start": "597920",
    "end": "599040"
  },
  {
    "text": "architecture kind of coming to view and",
    "start": "599040",
    "end": "601360"
  },
  {
    "text": "now our tooling breaks uh for networking",
    "start": "601360",
    "end": "603440"
  },
  {
    "text": "reasons pretty much",
    "start": "603440",
    "end": "605120"
  },
  {
    "text": "um so what does that new environment",
    "start": "605120",
    "end": "606720"
  },
  {
    "text": "look like and and how does it cause",
    "start": "606720",
    "end": "608320"
  },
  {
    "text": "challenges so",
    "start": "608320",
    "end": "609440"
  },
  {
    "text": "on our new hosts in this new environment",
    "start": "609440",
    "end": "611279"
  },
  {
    "text": "we do layer three ecmp",
    "start": "611279",
    "end": "613200"
  },
  {
    "text": "uh down to each host uh so eco cost",
    "start": "613200",
    "end": "615519"
  },
  {
    "text": "multi-path",
    "start": "615519",
    "end": "616880"
  },
  {
    "text": "uh routing down to every single host",
    "start": "616880",
    "end": "619920"
  },
  {
    "text": "and uh what that means is that we have",
    "start": "619920",
    "end": "623600"
  },
  {
    "text": "multiple independent paths",
    "start": "623600",
    "end": "625360"
  },
  {
    "text": "um to each of our hosts which is really",
    "start": "625360",
    "end": "627920"
  },
  {
    "text": "really nice we also get",
    "start": "627920",
    "end": "629200"
  },
  {
    "text": "full throughput across two links um so",
    "start": "629200",
    "end": "632959"
  },
  {
    "text": "there's some benefits uh for the network",
    "start": "632959",
    "end": "635600"
  },
  {
    "text": "team in terms of maintenance",
    "start": "635600",
    "end": "637120"
  },
  {
    "text": "and we've also managed to kind of",
    "start": "637120",
    "end": "638880"
  },
  {
    "text": "eliminate layer two domains in this",
    "start": "638880",
    "end": "640560"
  },
  {
    "text": "model which which simplifies",
    "start": "640560",
    "end": "642240"
  },
  {
    "text": "again thanks to the network team and so",
    "start": "642240",
    "end": "644880"
  },
  {
    "text": "that means that each host is kind of",
    "start": "644880",
    "end": "646399"
  },
  {
    "text": "advertising",
    "start": "646399",
    "end": "647200"
  },
  {
    "text": "its address uh using bgp to",
    "start": "647200",
    "end": "650480"
  },
  {
    "text": "the two top rack switches what that kind",
    "start": "650480",
    "end": "653040"
  },
  {
    "text": "of looks like",
    "start": "653040",
    "end": "654079"
  },
  {
    "text": "uh is shown in this diagram so each host",
    "start": "654079",
    "end": "657040"
  },
  {
    "text": "has a service ip what we call a service",
    "start": "657040",
    "end": "658959"
  },
  {
    "text": "ip",
    "start": "658959",
    "end": "659519"
  },
  {
    "text": "and that is the real address of the host",
    "start": "659519",
    "end": "661040"
  },
  {
    "text": "that that is the address that",
    "start": "661040",
    "end": "662800"
  },
  {
    "text": "other hosts or pods are going to be able",
    "start": "662800",
    "end": "664480"
  },
  {
    "text": "to talk to that host on",
    "start": "664480",
    "end": "665839"
  },
  {
    "text": "um but it's also got on the actual",
    "start": "665839",
    "end": "667839"
  },
  {
    "text": "interfaces it's got",
    "start": "667839",
    "end": "669120"
  },
  {
    "text": "two what we call transit addresses and",
    "start": "669120",
    "end": "671760"
  },
  {
    "text": "these transit addresses",
    "start": "671760",
    "end": "673120"
  },
  {
    "text": "you can think of them as like link local",
    "start": "673120",
    "end": "674640"
  },
  {
    "text": "addresses they're not going to be",
    "start": "674640",
    "end": "676320"
  },
  {
    "text": "routable on the rest of the network and",
    "start": "676320",
    "end": "677920"
  },
  {
    "text": "the only thing that they're really used",
    "start": "677920",
    "end": "679040"
  },
  {
    "text": "for is for advertising",
    "start": "679040",
    "end": "681760"
  },
  {
    "text": "this service address using bgp to the",
    "start": "681760",
    "end": "684160"
  },
  {
    "text": "top rack switch",
    "start": "684160",
    "end": "685120"
  },
  {
    "text": "so we can talk to the service addresses",
    "start": "685120",
    "end": "688160"
  },
  {
    "text": "uh we can't talk to the transit",
    "start": "688160",
    "end": "689360"
  },
  {
    "text": "addresses so how does that",
    "start": "689360",
    "end": "691279"
  },
  {
    "text": "cause issues for us um well",
    "start": "691279",
    "end": "694720"
  },
  {
    "text": "one one thing that really stands out is",
    "start": "694720",
    "end": "696320"
  },
  {
    "text": "that you know when we look at",
    "start": "696320",
    "end": "698959"
  },
  {
    "text": "github issues or prs we don't see that",
    "start": "698959",
    "end": "701519"
  },
  {
    "text": "many people that are running into the",
    "start": "701519",
    "end": "702640"
  },
  {
    "text": "same problems that we've run into",
    "start": "702640",
    "end": "704480"
  },
  {
    "text": "with our setup so we're thinking that",
    "start": "704480",
    "end": "707200"
  },
  {
    "text": "there maybe aren't that many people",
    "start": "707200",
    "end": "708399"
  },
  {
    "text": "doing this",
    "start": "708399",
    "end": "709440"
  },
  {
    "text": "and so that's kind of a challenge",
    "start": "709440",
    "end": "711040"
  },
  {
    "text": "another challenge is that",
    "start": "711040",
    "end": "713360"
  },
  {
    "text": "typically your networking stack is going",
    "start": "713360",
    "end": "714639"
  },
  {
    "text": "to be made up of these open source",
    "start": "714639",
    "end": "715680"
  },
  {
    "text": "components",
    "start": "715680",
    "end": "717120"
  },
  {
    "text": "so you may have to make changes to those",
    "start": "717120",
    "end": "718639"
  },
  {
    "text": "open source components",
    "start": "718639",
    "end": "720560"
  },
  {
    "text": "you may have to post-hoc kind of figure",
    "start": "720560",
    "end": "722880"
  },
  {
    "text": "out what certain implementation",
    "start": "722880",
    "end": "724399"
  },
  {
    "text": "implementation details are supposed to",
    "start": "724399",
    "end": "726000"
  },
  {
    "text": "do so why certain iptables rule exists",
    "start": "726000",
    "end": "729279"
  },
  {
    "text": "are why routing is set up in a certain",
    "start": "729279",
    "end": "731040"
  },
  {
    "text": "way and maybe that's in the code maybe",
    "start": "731040",
    "end": "733200"
  },
  {
    "text": "that's nowhere and you just kind of have",
    "start": "733200",
    "end": "734560"
  },
  {
    "text": "to figure out on your own uh why that is",
    "start": "734560",
    "end": "737760"
  },
  {
    "text": "and sometimes people don't understand",
    "start": "737760",
    "end": "739040"
  },
  {
    "text": "your use case so if you go back to this",
    "start": "739040",
    "end": "740800"
  },
  {
    "text": "slide here this is a little tough to",
    "start": "740800",
    "end": "742639"
  },
  {
    "text": "kind of explain in a github issue and",
    "start": "742639",
    "end": "745680"
  },
  {
    "text": "people may not understand why you need",
    "start": "745680",
    "end": "747200"
  },
  {
    "text": "the feature that you need",
    "start": "747200",
    "end": "748000"
  },
  {
    "text": "so that can be a little challenging as",
    "start": "748000",
    "end": "750320"
  },
  {
    "text": "well",
    "start": "750320",
    "end": "752240"
  },
  {
    "start": "752000",
    "end": "752000"
  },
  {
    "text": "so uh what's the first major issue that",
    "start": "752240",
    "end": "754480"
  },
  {
    "text": "we run into",
    "start": "754480",
    "end": "755680"
  },
  {
    "text": "so i mentioned before that our hosts are",
    "start": "755680",
    "end": "757600"
  },
  {
    "text": "advertising",
    "start": "757600",
    "end": "758959"
  },
  {
    "text": "their service addresses their real",
    "start": "758959",
    "end": "760240"
  },
  {
    "text": "addresses using bgp",
    "start": "760240",
    "end": "762079"
  },
  {
    "text": "and they're running bird which is a",
    "start": "762079",
    "end": "763279"
  },
  {
    "text": "routing daemon to do so so it's a",
    "start": "763279",
    "end": "765519"
  },
  {
    "text": "process that runs and speaks bgp to the",
    "start": "765519",
    "end": "767519"
  },
  {
    "text": "switches",
    "start": "767519",
    "end": "769360"
  },
  {
    "text": "calico also makes use of bird which",
    "start": "769360",
    "end": "771680"
  },
  {
    "text": "turns out to be",
    "start": "771680",
    "end": "772639"
  },
  {
    "text": "uh something that's that's kind of hard",
    "start": "772639",
    "end": "774320"
  },
  {
    "text": "to deal with so",
    "start": "774320",
    "end": "776000"
  },
  {
    "text": "they both are running in the root",
    "start": "776000",
    "end": "777040"
  },
  {
    "text": "network name space they're both binding",
    "start": "777040",
    "end": "778959"
  },
  {
    "text": "the same ports and addresses",
    "start": "778959",
    "end": "780560"
  },
  {
    "text": "and also because the bgp spec the top",
    "start": "780560",
    "end": "783360"
  },
  {
    "text": "rack switch is only going to accept",
    "start": "783360",
    "end": "784880"
  },
  {
    "text": "one peering connection from our host so",
    "start": "784880",
    "end": "788000"
  },
  {
    "text": "how do we deal with this um for",
    "start": "788000",
    "end": "791200"
  },
  {
    "text": "the same port and same address issue we",
    "start": "791200",
    "end": "793200"
  },
  {
    "text": "can handle this pretty neatly",
    "start": "793200",
    "end": "794959"
  },
  {
    "text": "um by overriding calico config templates",
    "start": "794959",
    "end": "798320"
  },
  {
    "text": "so in the calco node container image",
    "start": "798320",
    "end": "801040"
  },
  {
    "text": "there are some templates that are used",
    "start": "801040",
    "end": "802480"
  },
  {
    "text": "for",
    "start": "802480",
    "end": "804000"
  },
  {
    "text": "configuring bird and saying what the",
    "start": "804000",
    "end": "805519"
  },
  {
    "text": "bird config should be",
    "start": "805519",
    "end": "807120"
  },
  {
    "text": "and you can overwrite them either with a",
    "start": "807120",
    "end": "809120"
  },
  {
    "text": "config map or",
    "start": "809120",
    "end": "810480"
  },
  {
    "text": "a local file and that can kind of let",
    "start": "810480",
    "end": "812639"
  },
  {
    "text": "you get custom behavior in calico",
    "start": "812639",
    "end": "815440"
  },
  {
    "text": "that you may need for your specific",
    "start": "815440",
    "end": "817120"
  },
  {
    "text": "environment",
    "start": "817120",
    "end": "818800"
  },
  {
    "text": "um you and also of course you know you",
    "start": "818800",
    "end": "820959"
  },
  {
    "text": "can change the",
    "start": "820959",
    "end": "822079"
  },
  {
    "text": "the configure the the bird instance",
    "start": "822079",
    "end": "824320"
  },
  {
    "text": "that's running for the host and for the",
    "start": "824320",
    "end": "825680"
  },
  {
    "text": "service id",
    "start": "825680",
    "end": "827360"
  },
  {
    "text": "um the tour only accepting one peering",
    "start": "827360",
    "end": "830399"
  },
  {
    "text": "connection",
    "start": "830399",
    "end": "830959"
  },
  {
    "text": "is a little bit tougher to deal with so",
    "start": "830959",
    "end": "832959"
  },
  {
    "text": "we were trying to figure out you know",
    "start": "832959",
    "end": "834320"
  },
  {
    "text": "should we even run two bird instances",
    "start": "834320",
    "end": "836639"
  },
  {
    "text": "um maybe we could you know bootstrap our",
    "start": "836639",
    "end": "839360"
  },
  {
    "text": "host and then once kubernetes comes up",
    "start": "839360",
    "end": "841120"
  },
  {
    "text": "we could have the calico bird be",
    "start": "841120",
    "end": "842959"
  },
  {
    "text": "responsible for",
    "start": "842959",
    "end": "843839"
  },
  {
    "text": "advertising both kubernetes pod routes",
    "start": "843839",
    "end": "847199"
  },
  {
    "text": "and the service address but we didn't",
    "start": "847199",
    "end": "850079"
  },
  {
    "text": "want we didn't really want to do that",
    "start": "850079",
    "end": "851279"
  },
  {
    "text": "because",
    "start": "851279",
    "end": "852560"
  },
  {
    "text": "you know we don't really want to rely on",
    "start": "852560",
    "end": "854079"
  },
  {
    "text": "our cni provider to be up in order for",
    "start": "854079",
    "end": "855760"
  },
  {
    "text": "our hosts to be reachable on the network",
    "start": "855760",
    "end": "857279"
  },
  {
    "text": "you can imagine you know that that would",
    "start": "857279",
    "end": "858880"
  },
  {
    "text": "be a tough dependency to have",
    "start": "858880",
    "end": "862320"
  },
  {
    "text": "so uh and you know in the other",
    "start": "862320",
    "end": "865040"
  },
  {
    "text": "direction",
    "start": "865040",
    "end": "865680"
  },
  {
    "text": "you know maybe there's some way we could",
    "start": "865680",
    "end": "867040"
  },
  {
    "text": "have figured out how to",
    "start": "867040",
    "end": "868880"
  },
  {
    "text": "get the host bird to advertise",
    "start": "868880",
    "end": "871680"
  },
  {
    "text": "kubernetes routes but",
    "start": "871680",
    "end": "873600"
  },
  {
    "text": "uh i think that was something that was",
    "start": "873600",
    "end": "875680"
  },
  {
    "text": "going to be a little tricky to figure",
    "start": "875680",
    "end": "876800"
  },
  {
    "text": "out",
    "start": "876800",
    "end": "877120"
  },
  {
    "text": "so what we ended up doing is we ended up",
    "start": "877120",
    "end": "879760"
  },
  {
    "text": "pairing them together",
    "start": "879760",
    "end": "881040"
  },
  {
    "text": "so calico bird and as you can see in",
    "start": "881040",
    "end": "883519"
  },
  {
    "text": "this",
    "start": "883519",
    "end": "884160"
  },
  {
    "text": "uh this slide calico bird is sharing",
    "start": "884160",
    "end": "886560"
  },
  {
    "text": "these kubernetes routes",
    "start": "886560",
    "end": "888000"
  },
  {
    "text": "to the host bird and the host birds kind",
    "start": "888000",
    "end": "890160"
  },
  {
    "text": "of acting as a route aggregator",
    "start": "890160",
    "end": "891600"
  },
  {
    "text": "combining them all up and",
    "start": "891600",
    "end": "893040"
  },
  {
    "text": "advertising all of them to the top rack",
    "start": "893040",
    "end": "894880"
  },
  {
    "text": "switch so that's how we dealt with that",
    "start": "894880",
    "end": "896959"
  },
  {
    "text": "um but after after dealing with that now",
    "start": "896959",
    "end": "900079"
  },
  {
    "text": "we see that our hosts",
    "start": "900079",
    "end": "901279"
  },
  {
    "text": "kind of drop on and off the network",
    "start": "901279",
    "end": "902880"
  },
  {
    "text": "intermittently and so",
    "start": "902880",
    "end": "904800"
  },
  {
    "text": "we actually weren't really sure what was",
    "start": "904800",
    "end": "906079"
  },
  {
    "text": "going on here um",
    "start": "906079",
    "end": "908880"
  },
  {
    "text": "and and to have an idea you kind of have",
    "start": "908880",
    "end": "910800"
  },
  {
    "text": "to understand how bird works so",
    "start": "910800",
    "end": "912639"
  },
  {
    "text": "bird i think like a lot of routing",
    "start": "912639",
    "end": "914160"
  },
  {
    "text": "daemons works like a similarly to a",
    "start": "914160",
    "end": "916240"
  },
  {
    "text": "kubernetes operator",
    "start": "916240",
    "end": "917360"
  },
  {
    "text": "in that it has a desired state which is",
    "start": "917360",
    "end": "919920"
  },
  {
    "text": "all the routes that it knows about",
    "start": "919920",
    "end": "921440"
  },
  {
    "text": "and it's constantly sinking and diffing",
    "start": "921440",
    "end": "924880"
  },
  {
    "text": "that desired state against an actual",
    "start": "924880",
    "end": "926720"
  },
  {
    "text": "state in this case that's going to be",
    "start": "926720",
    "end": "928000"
  },
  {
    "text": "your routing table",
    "start": "928000",
    "end": "928880"
  },
  {
    "text": "so it's going to look at all the bird",
    "start": "928880",
    "end": "931680"
  },
  {
    "text": "routes in the routing table",
    "start": "931680",
    "end": "932959"
  },
  {
    "text": "do a diff against the ones that it",
    "start": "932959",
    "end": "934399"
  },
  {
    "text": "expects and then either delete or add",
    "start": "934399",
    "end": "936399"
  },
  {
    "text": "routes based on that so a problem here",
    "start": "936399",
    "end": "939600"
  },
  {
    "text": "is that both of these birds and bird",
    "start": "939600",
    "end": "941519"
  },
  {
    "text": "instances are thinking the same routing",
    "start": "941519",
    "end": "943120"
  },
  {
    "text": "table they're both seeing routes written",
    "start": "943120",
    "end": "944480"
  },
  {
    "text": "by the other bird and saying that those",
    "start": "944480",
    "end": "945839"
  },
  {
    "text": "rods shouldn't be there",
    "start": "945839",
    "end": "946880"
  },
  {
    "text": "and so they're they're constantly",
    "start": "946880",
    "end": "948320"
  },
  {
    "text": "fighting for control over this routing",
    "start": "948320",
    "end": "949759"
  },
  {
    "text": "table so something you can do",
    "start": "949759",
    "end": "952160"
  },
  {
    "text": "is actually sync them to separate",
    "start": "952160",
    "end": "953680"
  },
  {
    "text": "routing tables so i didn't know about",
    "start": "953680",
    "end": "955199"
  },
  {
    "text": "this",
    "start": "955199",
    "end": "955600"
  },
  {
    "text": "feature on linux before doing this work",
    "start": "955600",
    "end": "957759"
  },
  {
    "text": "but um",
    "start": "957759",
    "end": "958959"
  },
  {
    "text": "you can linux the kernel actually",
    "start": "958959",
    "end": "960720"
  },
  {
    "text": "supports up to like 250",
    "start": "960720",
    "end": "962720"
  },
  {
    "text": "uh i think routing tables per network",
    "start": "962720",
    "end": "964720"
  },
  {
    "text": "name space and you can",
    "start": "964720",
    "end": "966320"
  },
  {
    "text": "configure how they're how they're",
    "start": "966320",
    "end": "968079"
  },
  {
    "text": "accessed using ip rule",
    "start": "968079",
    "end": "970320"
  },
  {
    "text": "so we ended up syncing them to two",
    "start": "970320",
    "end": "972639"
  },
  {
    "text": "separate routing tables",
    "start": "972639",
    "end": "973920"
  },
  {
    "text": "and now we can run two bird instances at",
    "start": "973920",
    "end": "976160"
  },
  {
    "text": "the same time",
    "start": "976160",
    "end": "977600"
  },
  {
    "text": "so that's those were kind of the bird",
    "start": "977600",
    "end": "979279"
  },
  {
    "text": "issues we faced",
    "start": "979279",
    "end": "981040"
  },
  {
    "start": "980000",
    "end": "980000"
  },
  {
    "text": "the second really big issue is that",
    "start": "981040",
    "end": "982880"
  },
  {
    "text": "iptables masquerade is tough to deal",
    "start": "982880",
    "end": "984800"
  },
  {
    "text": "with in our environment",
    "start": "984800",
    "end": "985759"
  },
  {
    "text": "so iptables masquerade is an iptables",
    "start": "985759",
    "end": "988160"
  },
  {
    "text": "target that's used for source netting",
    "start": "988160",
    "end": "989680"
  },
  {
    "text": "which i mentioned we need for overlay",
    "start": "989680",
    "end": "991199"
  },
  {
    "text": "networks",
    "start": "991199",
    "end": "992160"
  },
  {
    "text": "but it's used in some other places as",
    "start": "992160",
    "end": "993600"
  },
  {
    "text": "well and",
    "start": "993600",
    "end": "995519"
  },
  {
    "text": "what it does is it determines the",
    "start": "995519",
    "end": "997279"
  },
  {
    "text": "address to use for that source and",
    "start": "997279",
    "end": "998639"
  },
  {
    "text": "adding kind of",
    "start": "998639",
    "end": "999600"
  },
  {
    "text": "automatically um it what it does is it",
    "start": "999600",
    "end": "1002959"
  },
  {
    "text": "looks at the address",
    "start": "1002959",
    "end": "1004240"
  },
  {
    "text": "on the interface that that traffic is",
    "start": "1004240",
    "end": "1005680"
  },
  {
    "text": "leaving out of and it uses",
    "start": "1005680",
    "end": "1007519"
  },
  {
    "text": "that primary ip address on that",
    "start": "1007519",
    "end": "1009600"
  },
  {
    "text": "interface",
    "start": "1009600",
    "end": "1010639"
  },
  {
    "text": "as the source address for the source",
    "start": "1010639",
    "end": "1012800"
  },
  {
    "text": "netting",
    "start": "1012800",
    "end": "1014079"
  },
  {
    "text": "so this is useful in a lot of situations",
    "start": "1014079",
    "end": "1016320"
  },
  {
    "text": "but not ours",
    "start": "1016320",
    "end": "1017199"
  },
  {
    "text": "because if you go back to this diagram",
    "start": "1017199",
    "end": "1018639"
  },
  {
    "text": "you'll see that on our interfaces we've",
    "start": "1018639",
    "end": "1020480"
  },
  {
    "text": "got these unreadable transit ips",
    "start": "1020480",
    "end": "1022560"
  },
  {
    "text": "and so any masquerade rules are going to",
    "start": "1022560",
    "end": "1024558"
  },
  {
    "text": "pick up those transit ips",
    "start": "1024559",
    "end": "1025918"
  },
  {
    "text": "because those are the interfaces that",
    "start": "1025919",
    "end": "1027438"
  },
  {
    "text": "the traffic is actually leaving on",
    "start": "1027439",
    "end": "1030079"
  },
  {
    "text": "um so this presents some challenges",
    "start": "1030079",
    "end": "1031760"
  },
  {
    "text": "because masquerade is used in a lot of",
    "start": "1031760",
    "end": "1032959"
  },
  {
    "text": "different places",
    "start": "1032959",
    "end": "1033918"
  },
  {
    "text": "um it's used in q proxy calco",
    "start": "1033919",
    "end": "1037438"
  },
  {
    "text": "it's used for short standing of pods",
    "start": "1037439",
    "end": "1039038"
  },
  {
    "text": "this is for hairpin traffic",
    "start": "1039039",
    "end": "1041199"
  },
  {
    "text": "and in most of these cases we need an",
    "start": "1041199",
    "end": "1043600"
  },
  {
    "text": "iptables snap rule instead",
    "start": "1043600",
    "end": "1045760"
  },
  {
    "text": "and an snap rule allows you to specify a",
    "start": "1045760",
    "end": "1047760"
  },
  {
    "text": "specific ip address to use",
    "start": "1047760",
    "end": "1049280"
  },
  {
    "text": "for that that source and adding uh but",
    "start": "1049280",
    "end": "1052480"
  },
  {
    "text": "it's not all that we don't always need",
    "start": "1052480",
    "end": "1054080"
  },
  {
    "text": "an",
    "start": "1054080",
    "end": "1054320"
  },
  {
    "text": "sr so the tricky part here is that you",
    "start": "1054320",
    "end": "1056880"
  },
  {
    "text": "know we can't just find and replace all",
    "start": "1056880",
    "end": "1058400"
  },
  {
    "text": "the mask grades and replace them with",
    "start": "1058400",
    "end": "1059679"
  },
  {
    "text": "snaps because there are certain",
    "start": "1059679",
    "end": "1060880"
  },
  {
    "text": "situations",
    "start": "1060880",
    "end": "1061760"
  },
  {
    "text": "in which we do need that masquerade to",
    "start": "1061760",
    "end": "1063200"
  },
  {
    "text": "happen uh typically with an overlay",
    "start": "1063200",
    "end": "1066799"
  },
  {
    "text": "so in calico addressing mask grade is",
    "start": "1066799",
    "end": "1069760"
  },
  {
    "text": "somewhat easy so",
    "start": "1069760",
    "end": "1070880"
  },
  {
    "text": "what we did was we modified calico node",
    "start": "1070880",
    "end": "1072799"
  },
  {
    "text": "to accept as a parameter",
    "start": "1072799",
    "end": "1075039"
  },
  {
    "text": "to its config and ip address to be used",
    "start": "1075039",
    "end": "1077200"
  },
  {
    "text": "for an snap rule",
    "start": "1077200",
    "end": "1079200"
  },
  {
    "text": "and we upstream those changes so if",
    "start": "1079200",
    "end": "1081600"
  },
  {
    "text": "anyone else is is running in a similar",
    "start": "1081600",
    "end": "1083280"
  },
  {
    "text": "setup",
    "start": "1083280",
    "end": "1084000"
  },
  {
    "text": "that's something that you can use in",
    "start": "1084000",
    "end": "1086640"
  },
  {
    "text": "coup proxy",
    "start": "1086640",
    "end": "1087440"
  },
  {
    "text": "the issue is a little more nuanced so",
    "start": "1087440",
    "end": "1090000"
  },
  {
    "text": "coup proxy uses",
    "start": "1090000",
    "end": "1091600"
  },
  {
    "text": "masquerade for uh more",
    "start": "1091600",
    "end": "1094640"
  },
  {
    "text": "more in more nuanced cases right so",
    "start": "1094640",
    "end": "1098400"
  },
  {
    "text": "it's used for hairpin traffic for",
    "start": "1098400",
    "end": "1099760"
  },
  {
    "text": "traffic that's coming off cluster",
    "start": "1099760",
    "end": "1102160"
  },
  {
    "text": "um but we do sometimes need the",
    "start": "1102160",
    "end": "1103679"
  },
  {
    "text": "masquerade typically with an overlay",
    "start": "1103679",
    "end": "1105440"
  },
  {
    "text": "network and a tunnel device",
    "start": "1105440",
    "end": "1107200"
  },
  {
    "text": "because the address on the tunnel device",
    "start": "1107200",
    "end": "1108960"
  },
  {
    "text": "is actually the address we want to use",
    "start": "1108960",
    "end": "1111520"
  },
  {
    "text": "so we kind of have to look at you know",
    "start": "1111520",
    "end": "1113440"
  },
  {
    "text": "each of these situations in coup proxy",
    "start": "1113440",
    "end": "1116559"
  },
  {
    "text": "kind of on a case-by-case basis",
    "start": "1116559",
    "end": "1119760"
  },
  {
    "text": "so in the course of this we ran into",
    "start": "1119760",
    "end": "1122720"
  },
  {
    "start": "1120000",
    "end": "1120000"
  },
  {
    "text": "something that",
    "start": "1122720",
    "end": "1123280"
  },
  {
    "text": "seemed like a kernel bug we were running",
    "start": "1123280",
    "end": "1125440"
  },
  {
    "text": "in an overlay environment using ip and",
    "start": "1125440",
    "end": "1127120"
  },
  {
    "text": "ip tunnels",
    "start": "1127120",
    "end": "1128320"
  },
  {
    "text": "and some hosts that were talking to a",
    "start": "1128320",
    "end": "1129760"
  },
  {
    "text": "kubernetes service bip were doing",
    "start": "1129760",
    "end": "1131679"
  },
  {
    "text": "masquerade on the encapsulating traffic",
    "start": "1131679",
    "end": "1134960"
  },
  {
    "text": "but only to some bips only on some hosts",
    "start": "1134960",
    "end": "1137520"
  },
  {
    "text": "so",
    "start": "1137520",
    "end": "1138160"
  },
  {
    "text": "again i mentioned you have this",
    "start": "1138160",
    "end": "1139280"
  },
  {
    "text": "encapsulated traffic and this is kind of",
    "start": "1139280",
    "end": "1141200"
  },
  {
    "text": "the original",
    "start": "1141200",
    "end": "1142000"
  },
  {
    "text": "traffic to the pod and then we",
    "start": "1142000",
    "end": "1143600"
  },
  {
    "text": "encapsulated in another protocol",
    "start": "1143600",
    "end": "1145120"
  },
  {
    "text": "and the encapsulating packet is the one",
    "start": "1145120",
    "end": "1148000"
  },
  {
    "text": "that was getting the masquerade done um",
    "start": "1148000",
    "end": "1150400"
  },
  {
    "text": "erroneously so we saw it on some hosts",
    "start": "1150400",
    "end": "1153520"
  },
  {
    "text": "didn't see it on others",
    "start": "1153520",
    "end": "1155520"
  },
  {
    "text": "and the issue seems to like come and go",
    "start": "1155520",
    "end": "1156960"
  },
  {
    "text": "intermittently and you know we've got",
    "start": "1156960",
    "end": "1158559"
  },
  {
    "text": "two hosts that are set up identically",
    "start": "1158559",
    "end": "1159840"
  },
  {
    "text": "that seem to be exhibiting",
    "start": "1159840",
    "end": "1161600"
  },
  {
    "text": "uh different behaviors so it kind of",
    "start": "1161600",
    "end": "1164000"
  },
  {
    "text": "looks like a kernel bug at this point",
    "start": "1164000",
    "end": "1165679"
  },
  {
    "text": "but let's dig in so",
    "start": "1165679",
    "end": "1169520"
  },
  {
    "text": "um in addressing pretty much any",
    "start": "1169520",
    "end": "1171360"
  },
  {
    "text": "kubernetes networking issue the",
    "start": "1171360",
    "end": "1172720"
  },
  {
    "text": "the first tools i go to are ping dig",
    "start": "1172720",
    "end": "1175200"
  },
  {
    "text": "medcat",
    "start": "1175200",
    "end": "1175760"
  },
  {
    "text": "and nip route pretty much so ping for",
    "start": "1175760",
    "end": "1179200"
  },
  {
    "text": "checking out routability to pod ips dig",
    "start": "1179200",
    "end": "1182080"
  },
  {
    "text": "if there's",
    "start": "1182080",
    "end": "1182559"
  },
  {
    "text": "seems like there's something related to",
    "start": "1182559",
    "end": "1183919"
  },
  {
    "text": "dns",
    "start": "1183919",
    "end": "1186080"
  },
  {
    "text": "netcat for testing up your tcp",
    "start": "1186080",
    "end": "1188080"
  },
  {
    "text": "connectivity and then ip route 2. so",
    "start": "1188080",
    "end": "1190720"
  },
  {
    "text": "looking at how your routing's configured",
    "start": "1190720",
    "end": "1192400"
  },
  {
    "text": "looking at how",
    "start": "1192400",
    "end": "1193840"
  },
  {
    "text": "the sockets are are listening or not",
    "start": "1193840",
    "end": "1195440"
  },
  {
    "text": "listening",
    "start": "1195440",
    "end": "1197440"
  },
  {
    "text": "and we we ran this across both these",
    "start": "1197440",
    "end": "1199520"
  },
  {
    "text": "hosts and",
    "start": "1199520",
    "end": "1200480"
  },
  {
    "text": "actually we were reproducing the issue",
    "start": "1200480",
    "end": "1201919"
  },
  {
    "text": "with netcat so the netcat was not able",
    "start": "1201919",
    "end": "1204559"
  },
  {
    "text": "to",
    "start": "1204559",
    "end": "1205120"
  },
  {
    "text": "uh netcat was demonstrating the issue",
    "start": "1205120",
    "end": "1207760"
  },
  {
    "text": "but but all these other tools kind of",
    "start": "1207760",
    "end": "1209919"
  },
  {
    "text": "uh it appeared that both hosts that you",
    "start": "1209919",
    "end": "1212159"
  },
  {
    "text": "know the ones that were working the ones",
    "start": "1212159",
    "end": "1213360"
  },
  {
    "text": "that were not working",
    "start": "1213360",
    "end": "1214640"
  },
  {
    "text": "kind of had the same setup so going a",
    "start": "1214640",
    "end": "1217760"
  },
  {
    "start": "1217000",
    "end": "1217000"
  },
  {
    "text": "little deeper",
    "start": "1217760",
    "end": "1218400"
  },
  {
    "text": "um you can use tcv dump so tcp dump",
    "start": "1218400",
    "end": "1221440"
  },
  {
    "text": "kind of lets you treat the kernel as a",
    "start": "1221440",
    "end": "1223600"
  },
  {
    "text": "black box you can kind of look at",
    "start": "1223600",
    "end": "1225200"
  },
  {
    "text": "how traffic looks like when it goes in",
    "start": "1225200",
    "end": "1226960"
  },
  {
    "text": "you can look at how traffic looks like",
    "start": "1226960",
    "end": "1228320"
  },
  {
    "text": "when it goes out",
    "start": "1228320",
    "end": "1229360"
  },
  {
    "text": "and then from there you can kind of",
    "start": "1229360",
    "end": "1230480"
  },
  {
    "text": "guess what all these kubernetes",
    "start": "1230480",
    "end": "1232080"
  },
  {
    "text": "components in the middle are doing um so",
    "start": "1232080",
    "end": "1234240"
  },
  {
    "text": "it's really useful for seeing",
    "start": "1234240",
    "end": "1235760"
  },
  {
    "text": "you know what does the network see when",
    "start": "1235760",
    "end": "1237440"
  },
  {
    "text": "we drop traffic on it",
    "start": "1237440",
    "end": "1239360"
  },
  {
    "text": "um it's also really useful for even",
    "start": "1239360",
    "end": "1240960"
  },
  {
    "text": "seeing if traffic is on the wire so",
    "start": "1240960",
    "end": "1242960"
  },
  {
    "text": "a lot of times if you check that first",
    "start": "1242960",
    "end": "1245200"
  },
  {
    "text": "if you check if the post",
    "start": "1245200",
    "end": "1246480"
  },
  {
    "text": "host is even passing traffic you can",
    "start": "1246480",
    "end": "1248320"
  },
  {
    "text": "solve the issue right there",
    "start": "1248320",
    "end": "1249679"
  },
  {
    "text": "or have a better idea of where to start",
    "start": "1249679",
    "end": "1251200"
  },
  {
    "text": "looking",
    "start": "1251200",
    "end": "1252799"
  },
  {
    "text": "um the second tool i'll mention is",
    "start": "1252799",
    "end": "1254240"
  },
  {
    "text": "iptables so i think",
    "start": "1254240",
    "end": "1255919"
  },
  {
    "text": "i think it has a little bit of a a bad",
    "start": "1255919",
    "end": "1258080"
  },
  {
    "text": "wrap or maybe like a scary wrap",
    "start": "1258080",
    "end": "1260080"
  },
  {
    "text": "but i think it's you know once you uh",
    "start": "1260080",
    "end": "1263120"
  },
  {
    "text": "run through a couple of scenarios with",
    "start": "1263120",
    "end": "1264400"
  },
  {
    "text": "it i think it's not too hard to grasp",
    "start": "1264400",
    "end": "1266320"
  },
  {
    "text": "and and i definitely think it's",
    "start": "1266320",
    "end": "1267600"
  },
  {
    "text": "it's very much readable uh with some",
    "start": "1267600",
    "end": "1270080"
  },
  {
    "text": "practice",
    "start": "1270080",
    "end": "1271039"
  },
  {
    "text": "but if if that still seems a little",
    "start": "1271039",
    "end": "1273360"
  },
  {
    "text": "tough you can also use the ipd plus",
    "start": "1273360",
    "end": "1274960"
  },
  {
    "text": "trace target",
    "start": "1274960",
    "end": "1276480"
  },
  {
    "text": "which is an ip tables target that will",
    "start": "1276480",
    "end": "1279039"
  },
  {
    "text": "output every single ip tablespool that",
    "start": "1279039",
    "end": "1280720"
  },
  {
    "text": "gets hit",
    "start": "1280720",
    "end": "1281919"
  },
  {
    "text": "to a kernel buffer and then you can kind",
    "start": "1281919",
    "end": "1283679"
  },
  {
    "text": "of trace the path of packets",
    "start": "1283679",
    "end": "1286400"
  },
  {
    "text": "that way last tool i'll mention is",
    "start": "1286400",
    "end": "1289039"
  },
  {
    "text": "contract so i didn't know about this",
    "start": "1289039",
    "end": "1290640"
  },
  {
    "text": "tool uh when i started doing this work",
    "start": "1290640",
    "end": "1292799"
  },
  {
    "text": "um and if i had it would have really",
    "start": "1292799",
    "end": "1294960"
  },
  {
    "text": "helped me out which i'll talk about in a",
    "start": "1294960",
    "end": "1296320"
  },
  {
    "text": "sec but",
    "start": "1296320",
    "end": "1297840"
  },
  {
    "text": "contract is something that will show you",
    "start": "1297840",
    "end": "1300000"
  },
  {
    "text": "all the connections that the kernel",
    "start": "1300000",
    "end": "1301200"
  },
  {
    "text": "knows about and all the address",
    "start": "1301200",
    "end": "1302559"
  },
  {
    "text": "translation that's done on those",
    "start": "1302559",
    "end": "1305039"
  },
  {
    "text": "connections so essentially it's just a",
    "start": "1305039",
    "end": "1307200"
  },
  {
    "text": "big table of",
    "start": "1307200",
    "end": "1308320"
  },
  {
    "text": "connections um with the address",
    "start": "1308320",
    "end": "1310640"
  },
  {
    "text": "translation that that's been done",
    "start": "1310640",
    "end": "1313919"
  },
  {
    "start": "1313000",
    "end": "1313000"
  },
  {
    "text": "so uh all those things were kind of",
    "start": "1314400",
    "end": "1317200"
  },
  {
    "text": "showing us",
    "start": "1317200",
    "end": "1318720"
  },
  {
    "text": "uh the same behavior or they were kind",
    "start": "1318720",
    "end": "1320799"
  },
  {
    "text": "of showing us what we expected",
    "start": "1320799",
    "end": "1322159"
  },
  {
    "text": "on the good meadows so again we don't we",
    "start": "1322159",
    "end": "1324480"
  },
  {
    "text": "don't really know",
    "start": "1324480",
    "end": "1325919"
  },
  {
    "text": "um what's happening and what's causing",
    "start": "1325919",
    "end": "1328480"
  },
  {
    "text": "this issue",
    "start": "1328480",
    "end": "1329280"
  },
  {
    "text": "so we have to go a little bit deeper in",
    "start": "1329280",
    "end": "1331440"
  },
  {
    "text": "this case we're not even",
    "start": "1331440",
    "end": "1334320"
  },
  {
    "text": "debugging the network anymore we're kind",
    "start": "1334320",
    "end": "1335679"
  },
  {
    "text": "of debugging the kernel and so",
    "start": "1335679",
    "end": "1338080"
  },
  {
    "text": "the tools i recommend for that at least",
    "start": "1338080",
    "end": "1340080"
  },
  {
    "text": "starting out are like perf trace",
    "start": "1340080",
    "end": "1341840"
  },
  {
    "text": "so perf trace is an s-trace kind of",
    "start": "1341840",
    "end": "1343760"
  },
  {
    "text": "drop-in replacement",
    "start": "1343760",
    "end": "1345360"
  },
  {
    "text": "but it also gives you in addition to the",
    "start": "1345360",
    "end": "1347679"
  },
  {
    "text": "system call boundary",
    "start": "1347679",
    "end": "1348880"
  },
  {
    "text": "you can also get events that are",
    "start": "1348880",
    "end": "1350320"
  },
  {
    "text": "happening inside the kernel",
    "start": "1350320",
    "end": "1352320"
  },
  {
    "text": "so there's all these trace points within",
    "start": "1352320",
    "end": "1355120"
  },
  {
    "text": "the kernel",
    "start": "1355120",
    "end": "1355919"
  },
  {
    "text": "that perf trace is able to show you",
    "start": "1355919",
    "end": "1358000"
  },
  {
    "text": "happening so",
    "start": "1358000",
    "end": "1359120"
  },
  {
    "text": "we ran perf trace on the working and",
    "start": "1359120",
    "end": "1360880"
  },
  {
    "text": "non-working hosts and",
    "start": "1360880",
    "end": "1363120"
  },
  {
    "text": "you know replicate the issue and we",
    "start": "1363120",
    "end": "1365120"
  },
  {
    "text": "didn't actually see a difference there",
    "start": "1365120",
    "end": "1366400"
  },
  {
    "text": "but",
    "start": "1366400",
    "end": "1366720"
  },
  {
    "text": "what it was really useful for was with",
    "start": "1366720",
    "end": "1368960"
  },
  {
    "text": "these tracepoint events that gives us a",
    "start": "1368960",
    "end": "1370640"
  },
  {
    "text": "place to",
    "start": "1370640",
    "end": "1371280"
  },
  {
    "text": "go back into kernel code and start",
    "start": "1371280",
    "end": "1373200"
  },
  {
    "text": "digging into",
    "start": "1373200",
    "end": "1374480"
  },
  {
    "text": "kernel code and kernel functions so i'm",
    "start": "1374480",
    "end": "1377440"
  },
  {
    "text": "obviously not a kernel expert but",
    "start": "1377440",
    "end": "1379360"
  },
  {
    "text": "using these trace points i can get an",
    "start": "1379360",
    "end": "1380960"
  },
  {
    "text": "idea of you know what are the functions",
    "start": "1380960",
    "end": "1382799"
  },
  {
    "text": "involved in this",
    "start": "1382799",
    "end": "1383840"
  },
  {
    "text": "and and where can i start looking in",
    "start": "1383840",
    "end": "1386240"
  },
  {
    "text": "using that i can",
    "start": "1386240",
    "end": "1387360"
  },
  {
    "text": "start using evpf so evpf is really",
    "start": "1387360",
    "end": "1390799"
  },
  {
    "text": "uh hot really cool right now for cni",
    "start": "1390799",
    "end": "1393280"
  },
  {
    "text": "implementations",
    "start": "1393280",
    "end": "1394240"
  },
  {
    "text": "but you can also use it to inspect",
    "start": "1394240",
    "end": "1396960"
  },
  {
    "text": "functions",
    "start": "1396960",
    "end": "1397679"
  },
  {
    "text": "or inspect arguments to kernel functions",
    "start": "1397679",
    "end": "1400000"
  },
  {
    "text": "on basically stock systems",
    "start": "1400000",
    "end": "1402080"
  },
  {
    "text": "you can look at return values of these",
    "start": "1402080",
    "end": "1403440"
  },
  {
    "text": "functions",
    "start": "1403440",
    "end": "1405200"
  },
  {
    "text": "and so once you have a place to kind of",
    "start": "1405200",
    "end": "1406720"
  },
  {
    "text": "dig in using proof trace eupf can",
    "start": "1406720",
    "end": "1409200"
  },
  {
    "text": "give you a little bit more insight the",
    "start": "1409200",
    "end": "1411520"
  },
  {
    "text": "last one i'll mention is f trace",
    "start": "1411520",
    "end": "1413039"
  },
  {
    "text": "so like evpf you kind of need an idea of",
    "start": "1413039",
    "end": "1415760"
  },
  {
    "text": "where you want to start looking first",
    "start": "1415760",
    "end": "1416960"
  },
  {
    "text": "but",
    "start": "1416960",
    "end": "1418000"
  },
  {
    "text": "it's going to show you the entire call",
    "start": "1418000",
    "end": "1420080"
  },
  {
    "text": "stack for",
    "start": "1420080",
    "end": "1421600"
  },
  {
    "text": "a process that is using kernel code",
    "start": "1421600",
    "end": "1425039"
  },
  {
    "text": "and it'll also you know if you need it",
    "start": "1425039",
    "end": "1427520"
  },
  {
    "text": "can show you",
    "start": "1427520",
    "end": "1428159"
  },
  {
    "text": "every kernel function that runs on a",
    "start": "1428159",
    "end": "1430000"
  },
  {
    "text": "given cpu core so",
    "start": "1430000",
    "end": "1432000"
  },
  {
    "text": "again you kind of have to have an idea",
    "start": "1432000",
    "end": "1433760"
  },
  {
    "text": "of where you want to be looking but",
    "start": "1433760",
    "end": "1435200"
  },
  {
    "text": "if you do then ebpf and f trace are",
    "start": "1435200",
    "end": "1437360"
  },
  {
    "text": "really useful too",
    "start": "1437360",
    "end": "1439840"
  },
  {
    "text": "so uh what was our issue",
    "start": "1439840",
    "end": "1442960"
  },
  {
    "text": "um so to understand kind of what's going",
    "start": "1442960",
    "end": "1445600"
  },
  {
    "text": "on here i need to",
    "start": "1445600",
    "end": "1447200"
  },
  {
    "text": "mention that um something that may not",
    "start": "1447200",
    "end": "1449440"
  },
  {
    "text": "know is that in ip tables",
    "start": "1449440",
    "end": "1451039"
  },
  {
    "text": "the nat table is only processed once per",
    "start": "1451039",
    "end": "1453360"
  },
  {
    "text": "connection so i mentioned contract",
    "start": "1453360",
    "end": "1455279"
  },
  {
    "text": "is uh the table that has all these",
    "start": "1455279",
    "end": "1457600"
  },
  {
    "text": "connections in it and that is only done",
    "start": "1457600",
    "end": "1459200"
  },
  {
    "text": "once so",
    "start": "1459200",
    "end": "1460159"
  },
  {
    "text": "every other connection that or every",
    "start": "1460159",
    "end": "1462960"
  },
  {
    "text": "other packet that is in that connection",
    "start": "1462960",
    "end": "1464640"
  },
  {
    "text": "is going to use that same entry",
    "start": "1464640",
    "end": "1466400"
  },
  {
    "text": "in the contract table so coup proxy",
    "start": "1466400",
    "end": "1469919"
  },
  {
    "text": "is using iptable's mark to select",
    "start": "1469919",
    "end": "1472240"
  },
  {
    "text": "packets for masquerading so",
    "start": "1472240",
    "end": "1474960"
  },
  {
    "text": "when it does destination that if that",
    "start": "1474960",
    "end": "1476559"
  },
  {
    "text": "packet is going to need a source out as",
    "start": "1476559",
    "end": "1478720"
  },
  {
    "text": "well it'll mark that packet",
    "start": "1478720",
    "end": "1481279"
  },
  {
    "text": "and using evpf we would able to see that",
    "start": "1481279",
    "end": "1484240"
  },
  {
    "text": "this mark",
    "start": "1484240",
    "end": "1484880"
  },
  {
    "text": "persists through encapsulation so",
    "start": "1484880",
    "end": "1488240"
  },
  {
    "text": "uh if if we had an encapsulated",
    "start": "1488240",
    "end": "1490960"
  },
  {
    "text": "connection",
    "start": "1490960",
    "end": "1491679"
  },
  {
    "text": "that is marked for masquerade then the",
    "start": "1491679",
    "end": "1493520"
  },
  {
    "text": "encapsulating connection is also going",
    "start": "1493520",
    "end": "1494960"
  },
  {
    "text": "to be marked for masquerade",
    "start": "1494960",
    "end": "1496159"
  },
  {
    "text": "so this kind of explains why on",
    "start": "1496159",
    "end": "1497679"
  },
  {
    "text": "encapsulating packet we were seeing",
    "start": "1497679",
    "end": "1500080"
  },
  {
    "text": "the masquerade as well what it doesn't",
    "start": "1500080",
    "end": "1502640"
  },
  {
    "text": "explain",
    "start": "1502640",
    "end": "1503200"
  },
  {
    "text": "is why some hosts were good why the",
    "start": "1503200",
    "end": "1505600"
  },
  {
    "text": "problem would kind of come and go",
    "start": "1505600",
    "end": "1507279"
  },
  {
    "text": "and uh why you know",
    "start": "1507279",
    "end": "1510880"
  },
  {
    "text": "why would you see this on some hosts and",
    "start": "1510880",
    "end": "1512640"
  },
  {
    "text": "not others so",
    "start": "1512640",
    "end": "1514720"
  },
  {
    "text": "the reason for that is that the",
    "start": "1514720",
    "end": "1515840"
  },
  {
    "text": "encapsulating protocol is ipip which is",
    "start": "1515840",
    "end": "1518480"
  },
  {
    "text": "a stateless protocol",
    "start": "1518480",
    "end": "1519520"
  },
  {
    "text": "so every subsequent encapsulated",
    "start": "1519520",
    "end": "1522480"
  },
  {
    "text": "connection that",
    "start": "1522480",
    "end": "1523600"
  },
  {
    "text": "is going to be used over this tunnel is",
    "start": "1523600",
    "end": "1525520"
  },
  {
    "text": "going to use the same",
    "start": "1525520",
    "end": "1526640"
  },
  {
    "text": "encapsulating connection in",
    "start": "1526640",
    "end": "1529840"
  },
  {
    "text": "contract so if the first",
    "start": "1529840",
    "end": "1533679"
  },
  {
    "text": "encapsulated traffic that goes through",
    "start": "1533679",
    "end": "1535120"
  },
  {
    "text": "this tunnel is march for masquerade then",
    "start": "1535120",
    "end": "1537679"
  },
  {
    "text": "all subsequent encapsulated traffic even",
    "start": "1537679",
    "end": "1540000"
  },
  {
    "text": "if it's on",
    "start": "1540000",
    "end": "1541279"
  },
  {
    "text": "a different encapsulated connection is",
    "start": "1541279",
    "end": "1543360"
  },
  {
    "text": "going to be using the same encapsulating",
    "start": "1543360",
    "end": "1545120"
  },
  {
    "text": "connection",
    "start": "1545120",
    "end": "1545840"
  },
  {
    "text": "and so it's all that traffic is going to",
    "start": "1545840",
    "end": "1547520"
  },
  {
    "text": "be masqueraded conversely",
    "start": "1547520",
    "end": "1549360"
  },
  {
    "text": "if the first encapsulated traffic that",
    "start": "1549360",
    "end": "1551200"
  },
  {
    "text": "passes through that tunnel",
    "start": "1551200",
    "end": "1552720"
  },
  {
    "text": "is not marked for masquerade then when",
    "start": "1552720",
    "end": "1555360"
  },
  {
    "text": "that encapsulating connection gets",
    "start": "1555360",
    "end": "1556960"
  },
  {
    "text": "created it's not going to have the mask",
    "start": "1556960",
    "end": "1558320"
  },
  {
    "text": "rate on it",
    "start": "1558320",
    "end": "1559760"
  },
  {
    "text": "and so any subsequent encapsulated",
    "start": "1559760",
    "end": "1562480"
  },
  {
    "text": "traffic that",
    "start": "1562480",
    "end": "1563360"
  },
  {
    "text": "goes to that tunnel again even if it's",
    "start": "1563360",
    "end": "1565039"
  },
  {
    "text": "on a separate connection",
    "start": "1565039",
    "end": "1566640"
  },
  {
    "text": "is not going to be marked for masquerade",
    "start": "1566640",
    "end": "1568640"
  },
  {
    "text": "so uh",
    "start": "1568640",
    "end": "1569919"
  },
  {
    "text": "that ended up being our big issue um and",
    "start": "1569919",
    "end": "1572960"
  },
  {
    "text": "yeah that's that's pretty much my talk",
    "start": "1572960",
    "end": "1575279"
  },
  {
    "text": "um i thank you for listening and and i",
    "start": "1575279",
    "end": "1577840"
  },
  {
    "text": "hope that you got something useful out",
    "start": "1577840",
    "end": "1579200"
  },
  {
    "text": "of this",
    "start": "1579200",
    "end": "1579600"
  },
  {
    "text": "bloomberg is hiring sres if that's",
    "start": "1579600",
    "end": "1581520"
  },
  {
    "text": "something you're interested in",
    "start": "1581520",
    "end": "1582960"
  },
  {
    "text": "and i'll be available for questions",
    "start": "1582960",
    "end": "1584880"
  },
  {
    "text": "right now",
    "start": "1584880",
    "end": "1588080"
  }
]