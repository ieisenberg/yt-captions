[
  {
    "text": "well it's good to uh to be back in person and and see some some friendly",
    "start": "80",
    "end": "5600"
  },
  {
    "text": "faces or at least uh right at least some partial faces so",
    "start": "5600",
    "end": "11280"
  },
  {
    "text": "one step uh back to normalcy so i'm really excited to be here today my name is damian hansen i'm a software",
    "start": "11280",
    "end": "18400"
  },
  {
    "text": "engineer with tetrate i've been involved with various cncf projects contributor",
    "start": "18400",
    "end": "25279"
  },
  {
    "text": "maintainer since the early days of kubernetes and cncf",
    "start": "25279",
    "end": "32160"
  },
  {
    "text": "but today i'm here to talk to you about envoy and specifically envoy extensibility using",
    "start": "32160",
    "end": "38719"
  },
  {
    "text": "webassembly or wasm for short you know one of the powerful aspects of",
    "start": "38719",
    "end": "45600"
  },
  {
    "text": "envoy is its uh extensibility and",
    "start": "45600",
    "end": "51360"
  },
  {
    "text": "envoy provides several different ways to be extended",
    "start": "51360",
    "end": "57920"
  },
  {
    "text": "one option is if you need to extend envoy you can write a native c plus plus filter",
    "start": "57920",
    "end": "66798"
  },
  {
    "text": "if you know c plus plus that's great if the filter is generalized enough",
    "start": "67360",
    "end": "73280"
  },
  {
    "text": "you may even be able to add that filter to the native envoy filters but if it's not",
    "start": "73280",
    "end": "79600"
  },
  {
    "text": "then you have to maintain that filter uh on your own and you have to maintain",
    "start": "79600",
    "end": "86159"
  },
  {
    "text": "that envoy binary on your own because you'd have to go ahead and you",
    "start": "86159",
    "end": "93360"
  },
  {
    "text": "would take the envoy source code add your filter to it and compile it with your filter and maintain your own",
    "start": "93360",
    "end": "100720"
  },
  {
    "text": "envoy binary another option is lua base filters envoy exposes a minimalistic lua api so you",
    "start": "100720",
    "end": "109360"
  },
  {
    "text": "can write lua scripts again if you if you know lua",
    "start": "109360",
    "end": "114399"
  },
  {
    "text": "could be a great option for you especially if uh if it's very basic uh functionality that you need to to add",
    "start": "114399",
    "end": "122560"
  },
  {
    "text": "but today i'm going to talk to you about the last and the newest option which is wasm filters",
    "start": "122560",
    "end": "129039"
  },
  {
    "text": "so let's first start off talking about what is wasm",
    "start": "129039",
    "end": "134720"
  },
  {
    "text": "so it's a binary instruction format right so it's a format to group a bunch of ones and zeroes together into fields",
    "start": "134720",
    "end": "140319"
  },
  {
    "text": "that can be interpreted by a stack based virtual machine right so",
    "start": "140319",
    "end": "145920"
  },
  {
    "text": "stack based virtual machine will will pull and put values onto a stack",
    "start": "145920",
    "end": "153599"
  },
  {
    "text": "and wasm says that it's designed to be poor a portable compilation target right",
    "start": "153599",
    "end": "158640"
  },
  {
    "text": "so you could go ahead and you can write a wasm module in the language of your choice",
    "start": "158640",
    "end": "164879"
  },
  {
    "text": "and then you compile it into the swaza module that is that binary instruction",
    "start": "164879",
    "end": "169920"
  },
  {
    "text": "format and it is portable in the sense that",
    "start": "169920",
    "end": "174959"
  },
  {
    "text": "it can run inside a web browser it could run inside",
    "start": "174959",
    "end": "180159"
  },
  {
    "text": "a node.js application and what we're going to talk about in detail today is actually running it inside of a server",
    "start": "180159",
    "end": "187519"
  },
  {
    "text": "which is of course onboard so let's uh discuss some of the benefits of wasm",
    "start": "187519",
    "end": "193920"
  },
  {
    "text": "so so wasm currently supports over 30 different languages that you can write",
    "start": "193920",
    "end": "199280"
  },
  {
    "text": "your wasm modules in uh it is fast so it's a it",
    "start": "199280",
    "end": "204560"
  },
  {
    "text": "is it gets built very quickly it's uh the binary format is very",
    "start": "204560",
    "end": "211519"
  },
  {
    "text": "efficient so you can load your modules very quickly it's safe so",
    "start": "211519",
    "end": "217680"
  },
  {
    "text": "the wasm module actually runs inside of a sandbox called a wasm vm which we'll",
    "start": "217680",
    "end": "223760"
  },
  {
    "text": "talk about in more detail and so the the wasm vm has no direct",
    "start": "223760",
    "end": "230000"
  },
  {
    "text": "access to the host any type of access is done through apis and we'll talk about those apis in more",
    "start": "230000",
    "end": "237360"
  },
  {
    "text": "detail in future slides also um and i mentioned that it is portable",
    "start": "237360",
    "end": "243920"
  },
  {
    "text": "so again it could uh run in various uh environments",
    "start": "243920",
    "end": "249040"
  },
  {
    "text": "but let's talk about wasm and envoy and in more detail",
    "start": "249040",
    "end": "254640"
  },
  {
    "text": "so uh wasm or envoy supports wasm run times by",
    "start": "254640",
    "end": "259919"
  },
  {
    "text": "default it's the the v8 runtime which is",
    "start": "259919",
    "end": "265040"
  },
  {
    "text": "a a wasm run time that uh is built in c",
    "start": "265040",
    "end": "271680"
  },
  {
    "text": "plus plus um and um again the default for for envoy",
    "start": "271680",
    "end": "278479"
  },
  {
    "text": "and as we know envoy has a multi-threading model architecture and so each worker",
    "start": "278479",
    "end": "285520"
  },
  {
    "text": "thread would have one or more of these wasm vms",
    "start": "285520",
    "end": "291680"
  },
  {
    "text": "and these vms would be created if you create an a filter like an http filter or a network",
    "start": "291680",
    "end": "299759"
  },
  {
    "text": "filter that you want to provide this additional customized logic using wasm",
    "start": "299759",
    "end": "306560"
  },
  {
    "text": "but there's also a vm that can run in the main thread and this is called a singleton vm so one of these vms that",
    "start": "306560",
    "end": "313680"
  },
  {
    "text": "runs in the main thread that's responsible for more you know very similar uh type of tasks that uh that",
    "start": "313680",
    "end": "320000"
  },
  {
    "text": "the main threads are responsible for some kind of global tasks and we'll talk about some examples of",
    "start": "320000",
    "end": "326400"
  },
  {
    "text": "these global tasks in more detail",
    "start": "326400",
    "end": "330240"
  },
  {
    "text": "and proxy wasm is a is a standard um it's an",
    "start": "333919",
    "end": "340240"
  },
  {
    "text": "implementation agnostics uh standard of interfaces uh for running wasm and proxies and",
    "start": "340240",
    "end": "347600"
  },
  {
    "text": "envoy has implemented this standard and the standard defines these low-level",
    "start": "347600",
    "end": "354400"
  },
  {
    "text": "uh it's considered an abi but this low-level interactions between envoy",
    "start": "354400",
    "end": "361039"
  },
  {
    "text": "and your wasm vms",
    "start": "361039",
    "end": "365720"
  },
  {
    "text": "and instead of using this low-level standard abi",
    "start": "366240",
    "end": "371360"
  },
  {
    "text": "uh proxy wasm also supports several different sdks language specific sdks",
    "start": "371360",
    "end": "378720"
  },
  {
    "text": "like uh rust um go and the go sdk is what i'm gonna go",
    "start": "378720",
    "end": "384160"
  },
  {
    "text": "ahead and demonstrate later on in today's talk and those uh sdks",
    "start": "384160",
    "end": "390639"
  },
  {
    "text": "provide uh the functions the callbacks that you would use for writing uh your",
    "start": "390639",
    "end": "396560"
  },
  {
    "text": "wasm modules",
    "start": "396560",
    "end": "399520"
  },
  {
    "text": "and so the wasm service right so i mentioned earlier that there are a few",
    "start": "401840",
    "end": "407919"
  },
  {
    "text": "different um that that the vms don't actually have access directly to the",
    "start": "407919",
    "end": "413039"
  },
  {
    "text": "host the vms communicate through apis and and envoy exposes several different apis",
    "start": "413039",
    "end": "421680"
  },
  {
    "text": "it you know if you want to go ahead and use a stats or log api to",
    "start": "421680",
    "end": "427919"
  },
  {
    "text": "along with a timer api to periodically uh go ahead and send",
    "start": "427919",
    "end": "433520"
  },
  {
    "text": "metrics to a sync like a stat sync [Music]",
    "start": "433520",
    "end": "439520"
  },
  {
    "text": "there's also the shared data and message queue apis that allow for interaction",
    "start": "439520",
    "end": "445360"
  },
  {
    "text": "between your vms so your worker thread vms",
    "start": "445360",
    "end": "450400"
  },
  {
    "text": "they can be collecting metrics and then storing those metrics in this",
    "start": "450400",
    "end": "457520"
  },
  {
    "text": "using the shared data api and the wasm service extension that singleton vm can periodically go ahead",
    "start": "457520",
    "end": "464160"
  },
  {
    "text": "and pull those metrics from the shared data and then again export those or vice versa right the the",
    "start": "464160",
    "end": "472080"
  },
  {
    "text": "wasm service could periodically use the http or grpc apis to make external",
    "start": "472080",
    "end": "478720"
  },
  {
    "text": "grpc or http calls and then store that data in shared data",
    "start": "478720",
    "end": "484879"
  },
  {
    "text": "or again with a message queue the wasm service could be a subscriber for your worker thread vms that",
    "start": "484879",
    "end": "492080"
  },
  {
    "text": "periodically publish some sort of data to the message queue",
    "start": "492080",
    "end": "498639"
  },
  {
    "text": "and so this wasm capability is uh is",
    "start": "501520",
    "end": "508319"
  },
  {
    "text": "managed through the envoy configuration right and so depending on whether you're",
    "start": "508319",
    "end": "515440"
  },
  {
    "text": "creating a http filter or a network filter or you're using the wasm",
    "start": "515440",
    "end": "521039"
  },
  {
    "text": "singleton service all of this is configured through the envoy configuration and one of the key aspects",
    "start": "521039",
    "end": "527200"
  },
  {
    "text": "of that configuration you tell envoy where does this wasm module exist",
    "start": "527200",
    "end": "533680"
  },
  {
    "text": "now just like um you know other services and configuration of envoy",
    "start": "533680",
    "end": "539120"
  },
  {
    "text": "you could have a control plane like istio and use xds to go ahead and grab",
    "start": "539120",
    "end": "545040"
  },
  {
    "text": "that configuration extension configuration or ecds is a service that can be used to",
    "start": "545040",
    "end": "552959"
  },
  {
    "text": "to manage the extension configuration and instead of just having this module",
    "start": "552959",
    "end": "559839"
  },
  {
    "text": "locally the module can exist remotely and and",
    "start": "559839",
    "end": "564880"
  },
  {
    "text": "again part of this configuration envoy will go ahead and grab that wasm",
    "start": "564880",
    "end": "572480"
  },
  {
    "text": "module remotely and then instantiate it",
    "start": "572480",
    "end": "577839"
  },
  {
    "text": "well and here's a configuration of the wasm service again there's only one wasm service within envoy that runs on the",
    "start": "581120",
    "end": "587440"
  },
  {
    "text": "main thread and as i mentioned right you could go ahead and have a local file name",
    "start": "587440",
    "end": "595120"
  },
  {
    "text": "or store your wasm module remotely and the wasm extension right this is our",
    "start": "595120",
    "end": "602079"
  },
  {
    "text": "our byte code that the webassembly byte code that was compiled",
    "start": "602079",
    "end": "609519"
  },
  {
    "text": "and here's one of the key parameters is a singleton true uh and you see that all of the wasm",
    "start": "612320",
    "end": "619040"
  },
  {
    "text": "service configuration is done in inside the bootstrap extensions",
    "start": "619040",
    "end": "624160"
  },
  {
    "text": "and there's really two key areas of this configuration right there's configuration of the vm itself",
    "start": "624160",
    "end": "630160"
  },
  {
    "text": "uh and you see here where we're specifying the v8 runtime and again the v8 runtime is the default run runtime",
    "start": "630160",
    "end": "637120"
  },
  {
    "text": "for for envoy and we specify where that module exists",
    "start": "637120",
    "end": "644959"
  },
  {
    "text": "along with this other configuration this is a configuration here the my",
    "start": "644959",
    "end": "650320"
  },
  {
    "text": "config value and my value the key value pair this is a configuration that you actually pass into",
    "start": "650320",
    "end": "656880"
  },
  {
    "text": "the module itself and i'll show an example of that in my",
    "start": "656880",
    "end": "662160"
  },
  {
    "text": "demonstration here's an example wasm http filter",
    "start": "662160",
    "end": "667839"
  },
  {
    "text": "configuration you see under the http filter section of the envoy configuration we specify that this is a",
    "start": "667839",
    "end": "674560"
  },
  {
    "text": "wasm http filter we give it its typed config",
    "start": "674560",
    "end": "679839"
  },
  {
    "text": "a name an id for the vm",
    "start": "679839",
    "end": "686079"
  },
  {
    "text": "in this example we're passing no configuration but just like the other example we",
    "start": "686560",
    "end": "692880"
  },
  {
    "text": "specify for the http filter where this wasm byte code exists",
    "start": "692880",
    "end": "702279"
  },
  {
    "text": "so let's uh jump into a demo i'll pause here for a second in case anyone wants to follow along i have the demonstration",
    "start": "703920",
    "end": "710480"
  },
  {
    "text": "hosted in my github repo",
    "start": "710480",
    "end": "714000"
  },
  {
    "text": "let me exit out of here and let's go",
    "start": "715600",
    "end": "723360"
  },
  {
    "text": "pull this up so here is the repo where i am i am hosting uh the demo",
    "start": "725279",
    "end": "731600"
  },
  {
    "text": "and instead of i thought maybe i'd be short on time so instead of going through each step of the demo",
    "start": "731600",
    "end": "737519"
  },
  {
    "text": "i went ahead and kind of jumped through set some things up uh have already created the wasm module",
    "start": "737519",
    "end": "743519"
  },
  {
    "text": "we'll talk through what that looks like and i use the the go sdk because that's",
    "start": "743519",
    "end": "750560"
  },
  {
    "text": "what i program in but in the proxy wasm repo there's links to",
    "start": "750560",
    "end": "755839"
  },
  {
    "text": "all the other sdks language specific sdks if you prefer a different language",
    "start": "755839",
    "end": "763519"
  },
  {
    "text": "let's actually let me pull up my ide and show you what this module looks like",
    "start": "763519",
    "end": "770240"
  },
  {
    "text": "right how does that look is that big enough",
    "start": "770240",
    "end": "776880"
  },
  {
    "text": "where everyone can read a little bigger let's see how we do this here",
    "start": "776880",
    "end": "782000"
  },
  {
    "text": "oh um let's see",
    "start": "782000",
    "end": "788480"
  },
  {
    "text": "can i make it bigger",
    "start": "788480",
    "end": "791600"
  },
  {
    "text": "don't know how to make it larger here so just bear with me and um and again if uh if you'd like you can go ahead and jump",
    "start": "796480",
    "end": "802959"
  },
  {
    "text": "to my repo i apologize for that uh so what we define here is uh you know",
    "start": "802959",
    "end": "811279"
  },
  {
    "text": "main is function main is the entry point into a go program",
    "start": "811279",
    "end": "817360"
  },
  {
    "text": "and it calls it makes a call oh here we can do this does that zoom in for you guys as well",
    "start": "817360",
    "end": "823040"
  },
  {
    "text": "okay cool all right here we go coming up with solutions",
    "start": "823040",
    "end": "829120"
  },
  {
    "text": "so it makes a call to the the proxy wasm set vm context",
    "start": "829120",
    "end": "835519"
  },
  {
    "text": "so there is a vm context that's created for each wasm",
    "start": "835519",
    "end": "840839"
  },
  {
    "text": "vm and it's responsible for managing plugins",
    "start": "840839",
    "end": "846399"
  },
  {
    "text": "right and and we'll walk through what the plugin looks like as well",
    "start": "846399",
    "end": "852160"
  },
  {
    "text": "we're using the default context vm context",
    "start": "852160",
    "end": "857199"
  },
  {
    "text": "we create so not only do we create this uh this vm context but now we need to",
    "start": "857199",
    "end": "863120"
  },
  {
    "text": "create a plug-in context so we're essentially now plumbing through",
    "start": "863120",
    "end": "869040"
  },
  {
    "text": "uh we're plumbing through attributes of our wasm module",
    "start": "869040",
    "end": "876720"
  },
  {
    "text": "throughout our code so the vm contacts as i men mentioned it's responsible for creating",
    "start": "876720",
    "end": "882720"
  },
  {
    "text": "and managing plug-in context and you have a plug-in that then manages",
    "start": "882720",
    "end": "890399"
  },
  {
    "text": "your filters either your http or network filters which are represented",
    "start": "890399",
    "end": "896480"
  },
  {
    "text": "as context in their own and so we have a context id",
    "start": "896480",
    "end": "901680"
  },
  {
    "text": "and in the demo we're going to go ahead and add headers",
    "start": "901680",
    "end": "906720"
  },
  {
    "text": "for for responses and we're also going to take advantage",
    "start": "906720",
    "end": "913279"
  },
  {
    "text": "of the the counters um",
    "start": "913279",
    "end": "918320"
  },
  {
    "text": "the the counter api and add a header counter every time we",
    "start": "918320",
    "end": "924480"
  },
  {
    "text": "we see a a request",
    "start": "924480",
    "end": "930560"
  },
  {
    "text": "not only are we going to add the headers but we're also going to go ahead and manage a counter here's our plugin context",
    "start": "930560",
    "end": "937920"
  },
  {
    "text": "where we again plumb through the additional headers the context and the hello header counter",
    "start": "937920",
    "end": "944959"
  },
  {
    "text": "and so this uh this hello header counter what it will do is it's going to look for a specific",
    "start": "944959",
    "end": "951759"
  },
  {
    "text": "header uh key and based on that key it will increment the counter and we'll see this",
    "start": "951759",
    "end": "957839"
  },
  {
    "text": "in the http context so",
    "start": "957839",
    "end": "963199"
  },
  {
    "text": "we need to start up the plugin a vm again there's a single vm context",
    "start": "963199",
    "end": "969600"
  },
  {
    "text": "per wasm vm but we could have multiple plug-ins within the vm context",
    "start": "969600",
    "end": "979199"
  },
  {
    "text": "and so we we get the configuration of the of the plugin",
    "start": "979440",
    "end": "987040"
  },
  {
    "text": "we go ahead and log a critical error if there's any issues loading the configuration",
    "start": "987519",
    "end": "993680"
  },
  {
    "text": "when i say the configuration in this example i'm going to run envoy locally and pass through this envoy",
    "start": "993680",
    "end": "1000880"
  },
  {
    "text": "config and in the slide that i showed you earlier there was no configuration that",
    "start": "1000880",
    "end": "1006000"
  },
  {
    "text": "was being added but in my http filter you're going to see that i actually have some configuration",
    "start": "1006000",
    "end": "1012720"
  },
  {
    "text": "here and the values that i'm passing in is this header 1 equals some value",
    "start": "1012720",
    "end": "1018639"
  },
  {
    "text": "header 2 equals a second value just some basic configuration that i'm passing into my wasm module",
    "start": "1018639",
    "end": "1027199"
  },
  {
    "text": "and so this is where right the plugin goes it goes ahead and",
    "start": "1036000",
    "end": "1041038"
  },
  {
    "text": "reads that configuration gets the configuration and stores it in this value",
    "start": "1041039",
    "end": "1046558"
  },
  {
    "text": "or in this variable excuse me",
    "start": "1046559",
    "end": "1050760"
  },
  {
    "text": "and we will go ahead and skip any any configuration that has a comment in front of it but what we're doing is is",
    "start": "1053600",
    "end": "1060720"
  },
  {
    "text": "we're going to go ahead and we're going to um we're going to look for any",
    "start": "1060720",
    "end": "1067840"
  },
  {
    "text": "configuration that has this equals value separator and again if we go back to the envoy yaml",
    "start": "1067840",
    "end": "1076000"
  },
  {
    "text": "that's exactly what our configuration does so instead of actually creating any of these values within the code i'm",
    "start": "1076000",
    "end": "1083520"
  },
  {
    "text": "going to go ahead and just read them from the configuration i create a new http context and go ahead",
    "start": "1083520",
    "end": "1089440"
  },
  {
    "text": "and continue to plumb through the the headers the response headers and the",
    "start": "1089440",
    "end": "1096080"
  },
  {
    "text": "hello header counter and you and this http headers type",
    "start": "1096080",
    "end": "1102240"
  },
  {
    "text": "is of the default http context and continue to plumb through",
    "start": "1102240",
    "end": "1107440"
  },
  {
    "text": "the additional headers and the header counter and this is where we go ahead and we say",
    "start": "1107440",
    "end": "1116240"
  },
  {
    "text": "get the request header if the request header includes hello",
    "start": "1116240",
    "end": "1122880"
  },
  {
    "text": "we don't care about the value we just go ahead and ignore the value here if if the um if the request header right",
    "start": "1122880",
    "end": "1129679"
  },
  {
    "text": "so we're operating on a request header here for this http context and if we don't find the the hello uh",
    "start": "1129679",
    "end": "1137200"
  },
  {
    "text": "key we don't care about the value but if we don't find it we'll just continue right we don't want to",
    "start": "1137200",
    "end": "1142400"
  },
  {
    "text": "um you know drop the connection or or drop the request anything like that we'll",
    "start": "1142400",
    "end": "1147600"
  },
  {
    "text": "just continue but if we do find it we're going to go ahead and increment that hello header",
    "start": "1147600",
    "end": "1152960"
  },
  {
    "text": "counter we're going to also log that we have incremented the counter",
    "start": "1152960",
    "end": "1161200"
  },
  {
    "text": "and then we also have an on http response headers right so we whenever",
    "start": "1161679",
    "end": "1166960"
  },
  {
    "text": "this method is called we'll log and we'll see that in the envoy logs",
    "start": "1166960",
    "end": "1173039"
  },
  {
    "text": "and we add additional headers right so um the additional headers are those",
    "start": "1173039",
    "end": "1179440"
  },
  {
    "text": "headers that we go ahead and pass into the configuration we'll see that as we go ahead and and test this out",
    "start": "1179440",
    "end": "1186880"
  },
  {
    "text": "all right so let's go here and",
    "start": "1188880",
    "end": "1195120"
  },
  {
    "text": "so one of the first things we're going to do here let's see [Music]",
    "start": "1195120",
    "end": "1201039"
  },
  {
    "text": "is compile our arwaza module and the go stk actually",
    "start": "1201039",
    "end": "1207280"
  },
  {
    "text": "uses tiny go which replaces the goes native compiler into",
    "start": "1207280",
    "end": "1212470"
  },
  {
    "text": "[Music] replaces the native compiler so that the compiled programs are much smaller",
    "start": "1212470",
    "end": "1219039"
  },
  {
    "text": "in size there are some caveats and limitations so if you're interested in the sdk go ahead and take a look at the",
    "start": "1219039",
    "end": "1225120"
  },
  {
    "text": "docs and make sure you familiarize yourself with those caveats but let's go ahead and what we do here",
    "start": "1225120",
    "end": "1232480"
  },
  {
    "text": "is we're going to go ahead and build our wasm module",
    "start": "1232480",
    "end": "1238400"
  },
  {
    "text": "from this main.go",
    "start": "1238480",
    "end": "1242320"
  },
  {
    "text": "we now have the main.wasm and again this is uh this is the module that we go ahead and",
    "start": "1247520",
    "end": "1254159"
  },
  {
    "text": "if we go back to the envoy config here we'll see that we've got main.wasm",
    "start": "1254159",
    "end": "1260880"
  },
  {
    "text": "right so we're telling the the wasm vm that this main.wasm is",
    "start": "1260880",
    "end": "1267679"
  },
  {
    "text": "is local and what's used to instantiate the vm",
    "start": "1267679",
    "end": "1274158"
  },
  {
    "text": "so let me start envoy",
    "start": "1275280",
    "end": "1279440"
  },
  {
    "text": "i'm gonna have to pull up another screen here show",
    "start": "1288400",
    "end": "1293200"
  },
  {
    "text": "split horizontally",
    "start": "1294880",
    "end": "1298400"
  },
  {
    "text": "actually my split shell split",
    "start": "1300559",
    "end": "1305559"
  },
  {
    "text": "there we go",
    "start": "1312159",
    "end": "1315559"
  },
  {
    "text": "so so let's start envoy again here and let",
    "start": "1329120",
    "end": "1334720"
  },
  {
    "text": "me curl",
    "start": "1334720",
    "end": "1338039"
  },
  {
    "text": "i have it here",
    "start": "1351280",
    "end": "1355000"
  },
  {
    "text": "so here we go uh so in the left-hand side of the screen here we've got envoy running",
    "start": "1364640",
    "end": "1371360"
  },
  {
    "text": "we specified where the config file is",
    "start": "1371360",
    "end": "1376880"
  },
  {
    "text": "and on the right hand side and again i've got envoy running locally",
    "start": "1377120",
    "end": "1382640"
  },
  {
    "text": "here on my laptop and the right hand side represents a client that is uh you know",
    "start": "1382640",
    "end": "1389440"
  },
  {
    "text": "hitting envoy and a couple things that i'm doing with curl",
    "start": "1389440",
    "end": "1394559"
  },
  {
    "text": "here is i'm specifying um a header hello is a key me is a value",
    "start": "1394559",
    "end": "1402159"
  },
  {
    "text": "and then envoycon.danian.com that just resolves to",
    "start": "1402159",
    "end": "1407280"
  },
  {
    "text": "my loopback address or localhost and in my envoy configuration i have a",
    "start": "1407280",
    "end": "1412480"
  },
  {
    "text": "listener on port 10000. um maybe i should actually jump over",
    "start": "1412480",
    "end": "1417840"
  },
  {
    "text": "here and again here's the the listener on",
    "start": "1417840",
    "end": "1422960"
  },
  {
    "text": "uh port 1000 and the configuration that i'm passing into",
    "start": "1422960",
    "end": "1428880"
  },
  {
    "text": "envoy let me show you here the configuration a little bit more so on this",
    "start": "1428880",
    "end": "1434799"
  },
  {
    "text": "listener i've got my filter chains and i've got just envoy configured to set up a direct",
    "start": "1434799",
    "end": "1441120"
  },
  {
    "text": "response for the uh for a root uh to respond with a",
    "start": "1441120",
    "end": "1446320"
  },
  {
    "text": "200 status code and a hello world so",
    "start": "1446320",
    "end": "1451600"
  },
  {
    "text": "what we see here is envoy does respond as we will go ahead and hit",
    "start": "1451600",
    "end": "1457679"
  },
  {
    "text": "that listener and because it's running with our wasm",
    "start": "1457679",
    "end": "1464320"
  },
  {
    "text": "module you see a couple things here is that",
    "start": "1464320",
    "end": "1469360"
  },
  {
    "text": "we've got those headers those response headers that were set in our configuration",
    "start": "1469360",
    "end": "1477120"
  },
  {
    "text": "and then again envoy is uh is responding with with hello world a direct direct",
    "start": "1478240",
    "end": "1483360"
  },
  {
    "text": "response um now one of the things that",
    "start": "1483360",
    "end": "1488720"
  },
  {
    "text": "we're doing in the wasa module is actually adding a metric counter",
    "start": "1488720",
    "end": "1493919"
  },
  {
    "text": "so that uh actually before i get into that on the left hand side here you see the the logging that i set up in within",
    "start": "1493919",
    "end": "1501600"
  },
  {
    "text": "the module and so we are logging the different methods",
    "start": "1501600",
    "end": "1507440"
  },
  {
    "text": "that were that we're calling we're logging that the hello",
    "start": "1507440",
    "end": "1512960"
  },
  {
    "text": "header counter was incremented and that it's done",
    "start": "1512960",
    "end": "1519919"
  },
  {
    "text": "the filter is done processing",
    "start": "1519919",
    "end": "1524240"
  },
  {
    "text": "and so if i do hello me",
    "start": "1525120",
    "end": "1530320"
  },
  {
    "text": "again you see again we're able to to hit envoy's listener",
    "start": "1530320",
    "end": "1536799"
  },
  {
    "text": "and now what i did here is that uh envoy my",
    "start": "1536799",
    "end": "1543840"
  },
  {
    "text": "local envoys exposing uh the admin",
    "start": "1543840",
    "end": "1549840"
  },
  {
    "text": "or manage admin endpoint on 8001 and so i can go ahead and get uh the stats i",
    "start": "1549840",
    "end": "1556480"
  },
  {
    "text": "mentioned that the [Music] the wasa module is",
    "start": "1556480",
    "end": "1562559"
  },
  {
    "text": "collecting metrics i created this hello header counter metric",
    "start": "1562559",
    "end": "1568400"
  },
  {
    "text": "and every time that we that we go ahead and curl that",
    "start": "1568400",
    "end": "1573919"
  },
  {
    "text": "that listener it increments this hello header counter",
    "start": "1573919",
    "end": "1579840"
  },
  {
    "text": "metric and one of the things i could have done to expand this as as i mentioned that",
    "start": "1579840",
    "end": "1586640"
  },
  {
    "text": "singleton service right we can take advantage of the other envoy apis uh to",
    "start": "1586640",
    "end": "1592559"
  },
  {
    "text": "go ahead and uh cl you know store these metrics in the shared data",
    "start": "1592559",
    "end": "1599200"
  },
  {
    "text": "pull those metrics and then periodically export those to our",
    "start": "1599200",
    "end": "1604799"
  },
  {
    "text": "stat sync so let's see here that's running how are",
    "start": "1604799",
    "end": "1611440"
  },
  {
    "text": "we doing with time two minutes all right let me i should have time to to show you this as well um",
    "start": "1611440",
    "end": "1618400"
  },
  {
    "text": "so i mentioned right so this example is just envoy running locally",
    "start": "1618400",
    "end": "1624400"
  },
  {
    "text": "but i also showed you that uh envoy um that you know wasm that",
    "start": "1624400",
    "end": "1630720"
  },
  {
    "text": "the extension config uh can be managed through an xds server and",
    "start": "1630720",
    "end": "1636320"
  },
  {
    "text": "so um i've got uh let's see i've got istio running",
    "start": "1636320",
    "end": "1643519"
  },
  {
    "text": "let's make sure that we're good to go here so i've got istio running and",
    "start": "1650320",
    "end": "1656720"
  },
  {
    "text": "and i have let me show you what i have here so i've got",
    "start": "1656720",
    "end": "1663120"
  },
  {
    "text": "um i've got an envoy filter and i've got an example application my http bin",
    "start": "1663120",
    "end": "1671279"
  },
  {
    "text": "application that is exposed using an istio gateway and an istio virtual service",
    "start": "1671279",
    "end": "1680159"
  },
  {
    "text": "and and what i'm going to do is with this",
    "start": "1680159",
    "end": "1685600"
  },
  {
    "text": "envoy filter is tell the envoy sidecar for this application",
    "start": "1685600",
    "end": "1692970"
  },
  {
    "text": "[Music] that it is to use this wasm module the",
    "start": "1692970",
    "end": "1698080"
  },
  {
    "text": "same waza model module that i showed locally um i'm now storing that instead of",
    "start": "1698080",
    "end": "1703919"
  },
  {
    "text": "locally i'm still storing it remotely um and so uh the istio agent that runs with the",
    "start": "1703919",
    "end": "1710880"
  },
  {
    "text": "envoy sidecar will go ahead and pull um this wasm module",
    "start": "1710880",
    "end": "1716720"
  },
  {
    "text": "validated against uh the uh wasm spec spec make sure it's safe to run and then",
    "start": "1716720",
    "end": "1722320"
  },
  {
    "text": "go ahead and run it in a wasm vm and so if we go ahead and",
    "start": "1722320",
    "end": "1727679"
  },
  {
    "text": "we apply let's see here",
    "start": "1727679",
    "end": "1734520"
  },
  {
    "text": "let's see um",
    "start": "1747200",
    "end": "1750760"
  },
  {
    "text": "demo manifest and http bin",
    "start": "1752399",
    "end": "1758080"
  },
  {
    "text": "all right our http bin app is running with its sidecar",
    "start": "1763440",
    "end": "1768720"
  },
  {
    "text": "and if i go headers",
    "start": "1768720",
    "end": "1773000"
  },
  {
    "text": "you see that uh through the istio gateway i'm i'm able to oh wait no that's not it actually didn't",
    "start": "1788399",
    "end": "1795360"
  },
  {
    "text": "hit it um",
    "start": "1795360",
    "end": "1799000"
  },
  {
    "text": "this hose",
    "start": "1808240",
    "end": "1810960"
  },
  {
    "text": "there we go now we hit it you see that i received a 200 response",
    "start": "1813279",
    "end": "1819039"
  },
  {
    "text": "from my app through the istio gateway and virtual service right and so now let's go ahead and and",
    "start": "1819039",
    "end": "1827279"
  },
  {
    "text": "and those uh those headers that response headers that i'm setting with um",
    "start": "1827279",
    "end": "1833200"
  },
  {
    "text": "with my wasa module they don't exist right we don't see any of these these response headers but let me go",
    "start": "1833200",
    "end": "1838880"
  },
  {
    "text": "ahead really quickly because i know i'm running out of time here let me go ahead and",
    "start": "1838880",
    "end": "1843919"
  },
  {
    "text": "add the envoy filter all right and again one of the powerful aspects of",
    "start": "1843919",
    "end": "1850559"
  },
  {
    "text": "waza modules is we don't have to reload envoy uh your module's dynamically linked into um the envoy process",
    "start": "1850559",
    "end": "1859039"
  },
  {
    "text": "and now when i curl",
    "start": "1859039",
    "end": "1864960"
  },
  {
    "text": "now you see the two headers that are being added to the http response",
    "start": "1864960",
    "end": "1870880"
  },
  {
    "text": "so um so yeah that's it i hope uh i hope you found the this time in you know",
    "start": "1870880",
    "end": "1877360"
  },
  {
    "text": "informational and it gives you a little uh insight into wasm modules being able",
    "start": "1877360",
    "end": "1882720"
  },
  {
    "text": "to extend envoy through wasm and i'll be around so if you have any additional questions",
    "start": "1882720",
    "end": "1888240"
  },
  {
    "text": "feel free to to reach out to me",
    "start": "1888240",
    "end": "1893840"
  },
  {
    "text": "okay",
    "start": "1894000",
    "end": "1897000"
  }
]