[
  {
    "text": "um hi folks uh let's get started so today my teammate Bogden and I VI are going to talk about mastering ET",
    "start": "1120",
    "end": "7400"
  },
  {
    "text": "absorbability so let's just get into it first um there's a prerequisite that uh",
    "start": "7400",
    "end": "12559"
  },
  {
    "text": "we would recommend that you kind of go through um is this something that we would recommend that you download",
    "start": "12559",
    "end": "18039"
  },
  {
    "text": "because some are Docker compos images and Internet isn't really stable right now so if it's possible then uh just",
    "start": "18039",
    "end": "24680"
  },
  {
    "text": "scan the barcode or just follow the link along and then uh we get started I'll just give it a minute once we're done we",
    "start": "24680",
    "end": "31160"
  },
  {
    "text": "can just move",
    "start": "31160",
    "end": "33720"
  },
  {
    "text": "forward okay I think Bon's going to help you out uh",
    "start": "42600",
    "end": "47879"
  },
  {
    "text": "so just uh raise your hand if you have a problem or anything like that uh but we",
    "start": "54239",
    "end": "60039"
  },
  {
    "text": "strongly recommend you follow us follow us along while we go on this journey it' be",
    "start": "60039",
    "end": "65920"
  },
  {
    "text": "fun okay um so just moving on uh just to kind of review what we're going to",
    "start": "86880",
    "end": "92240"
  },
  {
    "text": "achieve today or what we're going to learn today um just the fundamentals of hcd um just talk about leader election",
    "start": "92240",
    "end": "98720"
  },
  {
    "text": "in general and how it impacts that CD uh the architecture of how um how everything is placed how everything",
    "start": "98720",
    "end": "104960"
  },
  {
    "text": "interacts um uh the meat of everything metrics and their fundamentals of how",
    "start": "104960",
    "end": "110520"
  },
  {
    "text": "they're structured how you can access metrics how you can look at them and make sense of it and then we have a lab",
    "start": "110520",
    "end": "116280"
  },
  {
    "text": "session after this uh just just after this brief intro uh we just run through a few scenarios of what problems you",
    "start": "116280",
    "end": "121960"
  },
  {
    "text": "might run into and what metrics are really important for you to look at in these scenarios so let's just take a",
    "start": "121960",
    "end": "128119"
  },
  {
    "text": "walk um so the basic fundamental question you'd ask is what is atcd atcd",
    "start": "128119",
    "end": "133560"
  },
  {
    "text": "is just a simple key value store it's distributed in nature what does that mean it means that the computation like",
    "start": "133560",
    "end": "139440"
  },
  {
    "text": "the storage layer is separated or like split up among different computers and not just one single computer um so all",
    "start": "139440",
    "end": "145840"
  },
  {
    "text": "the computation the storage happens on uh in a distributed fashion the next thing is",
    "start": "145840",
    "end": "151959"
  },
  {
    "text": "replication um a replic by replication it means that it replicates data on all the members of the node uh of of the",
    "start": "151959",
    "end": "159239"
  },
  {
    "text": "cluster um HD is a cluster and it has multiple members within it so that's kind of the idea um consistency so",
    "start": "159239",
    "end": "167519"
  },
  {
    "text": "getting and setting or like getting and putting data in happens in a consistent fashion which is what is primary or like",
    "start": "167519",
    "end": "174280"
  },
  {
    "text": "very essential to a database so that's kind of what this um makes available and",
    "start": "174280",
    "end": "179360"
  },
  {
    "text": "then highly available uh that just means that until and unless ET has Corum",
    "start": "179360",
    "end": "184879"
  },
  {
    "text": "you're good to go so say for example if ET has like five members in the cluster and one of them was to go down you'd",
    "start": "184879",
    "end": "190799"
  },
  {
    "text": "still get the data and you'd still be able to store data and all that would be fine so just losing a node does not mean",
    "start": "190799",
    "end": "197000"
  },
  {
    "text": "that she is going to go down so that it provides resiliency and that's what we mean by highly available so let's just",
    "start": "197000",
    "end": "203200"
  },
  {
    "text": "kind of understand leader election uh leader election is done by raft um in",
    "start": "203200",
    "end": "208599"
  },
  {
    "text": "this case uh raft is just the fundamental algorithm that hcd uses to perform leader election and why leader",
    "start": "208599",
    "end": "214000"
  },
  {
    "text": "election is important is because it helps you keep the data consistent um so let's just look at this",
    "start": "214000",
    "end": "221040"
  },
  {
    "text": "um just keep in mind there are two concepts um a leader and a follower a leader is just the one that uh runs or",
    "start": "221040",
    "end": "227200"
  },
  {
    "text": "like makes sure that everyone everyone is in sync and leader or the followers are just the the other members of the",
    "start": "227200",
    "end": "234480"
  },
  {
    "text": "cluster so there's that now let's just look at leader election um so if you see",
    "start": "234480",
    "end": "239760"
  },
  {
    "text": "like um there are five members in the cluster and there's a gray timeout or like a gray bar that's going over that's",
    "start": "239760",
    "end": "246079"
  },
  {
    "text": "just the election timeout so after this time out uh all the members will send a message to everyone and this is a",
    "start": "246079",
    "end": "252799"
  },
  {
    "text": "candidate message which means that hey uh I'm a candidate to become a leader and it sends it to everyone and then",
    "start": "252799",
    "end": "258880"
  },
  {
    "text": "once everyone confirms like hey I think I got your message and I'm good to go uh they will accept the candidacy and move",
    "start": "258880",
    "end": "264520"
  },
  {
    "text": "to U agreeing that yeah this one person should be the leader in this case S1",
    "start": "264520",
    "end": "269600"
  },
  {
    "text": "comes a leader and the second timeout is about the heartbeat so once the election is over uh the leader periodically will",
    "start": "269600",
    "end": "275840"
  },
  {
    "text": "keep sending messages to the followers to just check like if the health of all the followers is fine and if they're",
    "start": "275840",
    "end": "281759"
  },
  {
    "text": "healthy and within the cluster itself so this just helps us kind of understand how HD operates within its members uh",
    "start": "281759",
    "end": "289800"
  },
  {
    "text": "the next item is architectur so um just in general how HD structured and what",
    "start": "289800",
    "end": "295199"
  },
  {
    "text": "are the main components that we should be looking at when you're thinking about HD so one is the server side which is",
    "start": "295199",
    "end": "301320"
  },
  {
    "text": "just generally the API that you would access uh raft is the algorithm that hcd runs on top of as we saw in the previous",
    "start": "301320",
    "end": "307000"
  },
  {
    "text": "slide uh regarding the leader election um the next one is mvcc uh it's just a",
    "start": "307000",
    "end": "312960"
  },
  {
    "text": "multiversion concurrency control don't worry about these um terms like we already have a glossery in the GitHub",
    "start": "312960",
    "end": "319039"
  },
  {
    "text": "repo as well just in case if you have to review it back but just to get give you a brief idea mbcc is just for you to put",
    "start": "319039",
    "end": "325720"
  },
  {
    "text": "it simply it just tracks all the revisions of your keys so you had a key and you updated the key 50 times uh the",
    "start": "325720",
    "end": "331880"
  },
  {
    "text": "mvcc stores all the revisions of the keys so it basically stores all the updates that you made to the key so",
    "start": "331880",
    "end": "337600"
  },
  {
    "text": "far uh the next thing is a client a client is just a simple computer that you you you would use to kind of access",
    "start": "337600",
    "end": "344160"
  },
  {
    "text": "the HD server and uh bold DB now bold DB is the backend that uh we use to store",
    "start": "344160",
    "end": "351039"
  },
  {
    "text": "data in atcd as well it's a very simple database and that's kind of its feature like Simplicity is what bold DB brings",
    "start": "351039",
    "end": "356639"
  },
  {
    "text": "to the table um there's the right right ahead log which is just uh it's just a",
    "start": "356639",
    "end": "362240"
  },
  {
    "text": "log of all the transaction you've committed so far and it just stores all of that um on uh in the in the",
    "start": "362240",
    "end": "369360"
  },
  {
    "text": "server now the this is how all the items interact with each other so if you see",
    "start": "369360",
    "end": "375039"
  },
  {
    "text": "like uh just if you start your journey from the client you hit the grpc server and then you think of this HC server as",
    "start": "375039",
    "end": "382280"
  },
  {
    "text": "the central brain to like the whole architecture of ETV it connects to",
    "start": "382280",
    "end": "387840"
  },
  {
    "text": "different components and this this is kind of how we think about HD when you generally just go through different",
    "start": "387840",
    "end": "395000"
  },
  {
    "text": "items um so now let's just jump into a few operations so that was a reference diagram that we saw before and now we're",
    "start": "395000",
    "end": "400960"
  },
  {
    "text": "going to see how hcd performs like all these operations that we mentioned so we're just going to jump into read and write but um just to give you brief",
    "start": "400960",
    "end": "408039"
  },
  {
    "text": "background on what a transaction is it's just a complicated combination of uh reads and wres and that's what um you",
    "start": "408039",
    "end": "414039"
  },
  {
    "text": "just want to do two things in one go or maybe you want to do multiple rights in one go so that's what you use a transaction for for and a watch uh watch",
    "start": "414039",
    "end": "421599"
  },
  {
    "text": "is um if you think about it like if you have a key in mind uh that you want to check updates on frequently so if a key",
    "start": "421599",
    "end": "428000"
  },
  {
    "text": "gets updated you get an event back saying hey the key got updated to this value and so on and so forth so until",
    "start": "428000",
    "end": "433080"
  },
  {
    "text": "you're watching the key uh it keeps sending you updates as in when the key gets updated um so this is a read flow",
    "start": "433080",
    "end": "440080"
  },
  {
    "text": "diagram uh if you see um let me just zoom in a little bit might be easier",
    "start": "440080",
    "end": "447599"
  },
  {
    "text": "yeah okay so if if you see um the just let's just walk through a request right",
    "start": "447599",
    "end": "454720"
  },
  {
    "text": "um you send a request it hits the grpc server first which then gets forwarded to the E server loop from there on what",
    "start": "454720",
    "end": "461400"
  },
  {
    "text": "happens is in the third step you get a read index now what does that mean a read index in general means that it'll",
    "start": "461400",
    "end": "467919"
  },
  {
    "text": "find it'll talk to the leader and get the latest um read revision which means this is the uh latest version that the",
    "start": "467919",
    "end": "474639"
  },
  {
    "text": "database was updated to uh when the request came in and this is kind of important important for consistency as",
    "start": "474639",
    "end": "480720"
  },
  {
    "text": "we spoke about before uh once it gets the read index from the leader sometimes this uh member might be the leader",
    "start": "480720",
    "end": "488120"
  },
  {
    "text": "itself so it just finds out what the read index is and then finds the lat latest KV pair which is just a key value",
    "start": "488120",
    "end": "494560"
  },
  {
    "text": "pair and responds with whatever the data was so that's kind of a simple read transac uh read operation uh it's",
    "start": "494560",
    "end": "501240"
  },
  {
    "text": "simplified there's a lot going on obviously but uh this is a very simplistic approach just for the sake of this",
    "start": "501240",
    "end": "506720"
  },
  {
    "text": "presentation okay um so let's look at a right flow this is",
    "start": "506720",
    "end": "512399"
  },
  {
    "text": "a little more complicated than read um let's look at all the components that it walks through in general so you s",
    "start": "512399",
    "end": "518440"
  },
  {
    "text": "similarly you put it put in a request it goes to the grpc server um it hits the H",
    "start": "518440",
    "end": "524159"
  },
  {
    "text": "server Loop and then what happens is um there are two three steps if you see there's a replicate which goes through",
    "start": "524159",
    "end": "530120"
  },
  {
    "text": "the peers and there's uh another persist one uh which processes to the transaction to the wall log um so what",
    "start": "530120",
    "end": "537880"
  },
  {
    "text": "happens is once the server gets the request it goes through raft raft makes sure that the Quorum is kind of met in",
    "start": "537880",
    "end": "544120"
  },
  {
    "text": "the sense that it'll agree with at least majority of the members of the cluster and say like yeah this looks good I",
    "start": "544120",
    "end": "550360"
  },
  {
    "text": "think we're good to go so in that case once raft agrees that uh this transaction is committed and most of the",
    "start": "550360",
    "end": "555399"
  },
  {
    "text": "members actually got it it persists to itself and also sends it to all the members so that the data is replicated",
    "start": "555399",
    "end": "561040"
  },
  {
    "text": "so in the instance of one member going down you still won't lose the data in that point but it also means it's",
    "start": "561040",
    "end": "567560"
  },
  {
    "text": "consistency and then one once that's done it just applies it simply to the mbcc store and sends you a response back",
    "start": "567560",
    "end": "574440"
  },
  {
    "text": "and just keep in mind uh it also syncs it to the Bold TV asynchronously every 100 milliseconds or so so that it",
    "start": "574440",
    "end": "580120"
  },
  {
    "text": "doesn't like kind of queue up the dis as much right it just cheaper this way to batch transaction and not do them all at",
    "start": "580120",
    "end": "587200"
  },
  {
    "text": "once so this was just a simple right flow and now uh so let's get into the",
    "start": "587200",
    "end": "593519"
  },
  {
    "text": "meat of what our presentation is about um so just we kind of to recap we just",
    "start": "593519",
    "end": "598600"
  },
  {
    "text": "saw Prim on what it CD is what kind of transaction it performs and the leader election that we saw uh after that now",
    "start": "598600",
    "end": "605920"
  },
  {
    "text": "we're in metrics so just uh uh HD produces or like generates",
    "start": "605920",
    "end": "612399"
  },
  {
    "text": "Prometheus based metrics U it just means that if you just um have it just spins",
    "start": "612399",
    "end": "617800"
  },
  {
    "text": "up a primitive server and then scrap like presents all the metrics which you can then scrape um you can scrape it",
    "start": "617800",
    "end": "624279"
  },
  {
    "text": "from the metric standpoint the if you just hop onto a host and just do a SL metric you should be able to see the metrics that that member is kind of",
    "start": "624279",
    "end": "630680"
  },
  {
    "text": "emitting at that point in time now the detail level so you can set the detail level to be basic or",
    "start": "630680",
    "end": "636760"
  },
  {
    "text": "extensive basic just means that you'd get a smaller set of metrics and then extensive is just it gives you all the",
    "start": "636760",
    "end": "642880"
  },
  {
    "text": "metrics that exist I think if I remember correctly there's about 126 metrics started M at any point in time um the",
    "start": "642880",
    "end": "651040"
  },
  {
    "text": "next one is avoid at cdor debugging uh so sdore debugging are metrics that are",
    "start": "651040",
    "end": "657200"
  },
  {
    "text": "unstable or un flux right now they be being developed so might not be the best kind of uh presentation at that point so",
    "start": "657200",
    "end": "663959"
  },
  {
    "text": "might want to just avoid it for now and namespace just means that at CD metrics and namespaced by the module they're",
    "start": "663959",
    "end": "669440"
  },
  {
    "text": "kind of working in so if you have mbcc then you'd see at cdor mbcc whatever the metric name be and so on and so forth",
    "start": "669440",
    "end": "676240"
  },
  {
    "text": "for the server and just any other module that you can think of within now we're going to focus on these",
    "start": "676240",
    "end": "684079"
  },
  {
    "text": "three uh components for like the most part of our presentation uh just to kind of limit the amount of exposure that we",
    "start": "684079",
    "end": "690800"
  },
  {
    "text": "make with that CD but the idea is these three components um are just kind of be going to be a focus area with with",
    "start": "690800",
    "end": "697200"
  },
  {
    "text": "respect to operations um now if you just scan this QR code um it's the same QR code that we",
    "start": "697200",
    "end": "705040"
  },
  {
    "text": "had like at the beginning but in case just someone came in late and just wanted to scan it just want to make sure everything's like fine so Bon is going",
    "start": "705040",
    "end": "711639"
  },
  {
    "text": "to take you through just the lab uh going forward and uh just in case if you have any questions raise your hand I'll",
    "start": "711639",
    "end": "717880"
  },
  {
    "text": "be walking around just in in case if you need any help uh just H holler at",
    "start": "717880",
    "end": "723560"
  },
  {
    "text": "me okay thank you viik hello folks so we're going to jump into the lab portion",
    "start": "727720",
    "end": "734279"
  },
  {
    "text": "of our presentation",
    "start": "734279",
    "end": "740600"
  },
  {
    "text": "okay okay so I hope everyone had a chance to",
    "start": "747880",
    "end": "753399"
  },
  {
    "text": "check out the repository um and run the prerequisites so I'm going to do it uh together with",
    "start": "753399",
    "end": "760240"
  },
  {
    "text": "you right now I already have images downloaded so it'll be faster for",
    "start": "760240",
    "end": "765959"
  },
  {
    "text": "me so the first order of business we're going to bring up uh uh ourd",
    "start": "768480",
    "end": "776560"
  },
  {
    "text": "cluster so what we're doing here we bring up a re node SD cluster and grafana and pris",
    "start": "777839",
    "end": "786160"
  },
  {
    "text": "service and we're going to use premisus to pump metrics from ETD and graph for",
    "start": "786160",
    "end": "792160"
  },
  {
    "text": "our dashboards ignore if I know there there was a question about the logs and some",
    "start": "792160",
    "end": "798560"
  },
  {
    "text": "of the errors here ignore that there's some grafana uh errors um that's",
    "start": "798560",
    "end": "806000"
  },
  {
    "text": "okay now to verify that everything is working really well we'll try The",
    "start": "807760",
    "end": "813800"
  },
  {
    "text": "Benchmark and I'll talk about the Benchmark in a",
    "start": "813800",
    "end": "818480"
  },
  {
    "text": "bit okay so what I did right now I ran the at CD Benchmark that comes um uh as",
    "start": "818880",
    "end": "826160"
  },
  {
    "text": "part of SD repository for the purposes of this demo I build a new SD image to include the",
    "start": "826160",
    "end": "833120"
  },
  {
    "text": "Benchmark and couple other tools because the release image obviously doesn't have the Benchmark tool um uh so what we're",
    "start": "833120",
    "end": "839759"
  },
  {
    "text": "doing here zoom in a little bit um we're doing",
    "start": "839759",
    "end": "848040"
  },
  {
    "text": "a we're doing a put benchmark right here we say the command that we want to execute uh we provide the endpoints that",
    "start": "848680",
    "end": "856880"
  },
  {
    "text": "our clients will connect to and then some information about the type of puts we want to uh issue and the total number",
    "start": "856880",
    "end": "863440"
  },
  {
    "text": "of puts um so the nice uh thing about the Benchmark it will also provided the",
    "start": "863440",
    "end": "869680"
  },
  {
    "text": "summary but uh we will be looking at the dashboards mostly for for our",
    "start": "869680",
    "end": "877360"
  },
  {
    "text": "lab okay and the next step let's check out uh default SD dashboard so um if",
    "start": "878920",
    "end": "887240"
  },
  {
    "text": "some some people might have a uh grafana uh login prompt so use this credentials",
    "start": "887240",
    "end": "894399"
  },
  {
    "text": "if you get that um okay let me do a quicker view of this default dashboard so this is the",
    "start": "894399",
    "end": "901480"
  },
  {
    "text": "dashboard that is linked in the documentation and you can download this from the grafana uh",
    "start": "901480",
    "end": "908480"
  },
  {
    "text": "website I'm not going to dive in uh into uh various areas here just a quick",
    "start": "908480",
    "end": "914680"
  },
  {
    "text": "glance and then we're going to go into scenarios and uh uh hopefully you'll you'll get more exposure to various",
    "start": "914680",
    "end": "921040"
  },
  {
    "text": "metrics through that uh so uh SD uses rough uh rough is the con protocol it",
    "start": "921040",
    "end": "929440"
  },
  {
    "text": "has a notion of the leader which is uh very important so of course there's like a big message that we have a leader",
    "start": "929440",
    "end": "935600"
  },
  {
    "text": "because if we don't then things are really bad um next uh RPC rate um SD is",
    "start": "935600",
    "end": "942920"
  },
  {
    "text": "the grpc server uh so this is one of the first metrics we want to look at so we",
    "start": "942920",
    "end": "948560"
  },
  {
    "text": "have uh summary of all rates for all the requests so we did some puts so that's",
    "start": "948560",
    "end": "953920"
  },
  {
    "text": "why we got some uh uh increase here and after our B Benchmark stopped uh nothing",
    "start": "953920",
    "end": "960000"
  },
  {
    "text": "is happening right now then we have active streams so we have watches and Lees uh we won't have time to go into",
    "start": "960000",
    "end": "967079"
  },
  {
    "text": "watches and Lees unfortunately for uh during this demo then we have uh some information",
    "start": "967079",
    "end": "973959"
  },
  {
    "text": "about the database uh so this is the bball database DB size notice there's no",
    "start": "973959",
    "end": "979680"
  },
  {
    "text": "data here so there's actually a bug with this dashboard I didn't fix it just wanted to show you guys uh what's going",
    "start": "979680",
    "end": "986399"
  },
  {
    "text": "on here so uh the problem here is that um this metric is a little bit older",
    "start": "986399",
    "end": "992680"
  },
  {
    "text": "it's using this debugging um metric name space and was",
    "start": "992680",
    "end": "998399"
  },
  {
    "text": "uh already graduated to non debugging one so so if I do that that that actually",
    "start": "998399",
    "end": "1007319"
  },
  {
    "text": "works okay then we have disc sync duration going to talk about this uh later this is this is important uh",
    "start": "1011680",
    "end": "1018480"
  },
  {
    "text": "special the wall if syn then the memory then our client traffic in and out so",
    "start": "1018480",
    "end": "1023920"
  },
  {
    "text": "this is from our Benchmark tool then peer traffic in and out this is between the ATD",
    "start": "1023920",
    "end": "1030360"
  },
  {
    "text": "members uh then we have information about the proposals and we'll also dive",
    "start": "1030360",
    "end": "1036000"
  },
  {
    "text": "into this uh um next scenario but important uh uh point is that raft um",
    "start": "1036000",
    "end": "1044918"
  },
  {
    "text": "has a notion of proposal and it's a crucial uh um component of it so every",
    "start": "1044919",
    "end": "1051799"
  },
  {
    "text": "time you're trying to replicate a log message through raft you submit a proposal uh for that so that's why",
    "start": "1051799",
    "end": "1059039"
  },
  {
    "text": "keeping track of this is important and then we have proposals committed we have proposals pending and on this one you",
    "start": "1059039",
    "end": "1065720"
  },
  {
    "text": "also have proposals applied I'll explain what is the difference between the applied and committed proposals when we",
    "start": "1065720",
    "end": "1071640"
  },
  {
    "text": "get to next scenario and we have some dis operations and network okay",
    "start": "1071640",
    "end": "1078960"
  },
  {
    "text": "so let's jump into our first scenario so I called it scenario zero just because",
    "start": "1078960",
    "end": "1084760"
  },
  {
    "text": "this is just uh exposes as to uh some basic operations put in ranges for CD",
    "start": "1084760",
    "end": "1091440"
  },
  {
    "text": "we're not going to stress out the system uh significantly in this uh",
    "start": "1091440",
    "end": "1096559"
  },
  {
    "text": "scenario okay so first thing let's look at uh this sequence diagram for puts so",
    "start": "1096559",
    "end": "1103440"
  },
  {
    "text": "I know vivik had a uh diagram for SCD architecture and the",
    "start": "1103440",
    "end": "1111280"
  },
  {
    "text": "right so I have a little bit more complicated diagram and I know it has internal ET",
    "start": "1111280",
    "end": "1119720"
  },
  {
    "text": "details oops but unfortunately to understand how metric metric works and",
    "start": "1119720",
    "end": "1125480"
  },
  {
    "text": "what they mean you have to dive in into some of the SD internals",
    "start": "1125480",
    "end": "1132480"
  },
  {
    "text": "um okay is this hope this is visible let me zoom in a little more",
    "start": "1132480",
    "end": "1140320"
  },
  {
    "text": "okay okay so um let's walk through put uh sequence diagram so ETD is the grpc",
    "start": "1141720",
    "end": "1149320"
  },
  {
    "text": "server so the first order of business is to accept those grpc requests and",
    "start": "1149320",
    "end": "1154919"
  },
  {
    "text": "there's some boiler plate here and then put goes into etsd server so etsd server",
    "start": "1154919",
    "end": "1160440"
  },
  {
    "text": "is a kind of a Workhorse uh it does a lot of coordination and uh uh",
    "start": "1160440",
    "end": "1165480"
  },
  {
    "text": "translation between the uh JPC and in various internal layers of the system so",
    "start": "1165480",
    "end": "1171400"
  },
  {
    "text": "right away we increment this started total metric which is part of the grpc middleware so it comes U um as part of",
    "start": "1171400",
    "end": "1178919"
  },
  {
    "text": "the go grpc implementation uh next",
    "start": "1178919",
    "end": "1184840"
  },
  {
    "text": "um since rough doesn't have a notion of put uh it we can just do a put uh to to",
    "start": "1184840",
    "end": "1192720"
  },
  {
    "text": "sort of rough protocol we have to operate in proposals so that's what the",
    "start": "1192720",
    "end": "1198039"
  },
  {
    "text": "ser is doing it translates the put uh into proposal for uh and submits it to",
    "start": "1198039",
    "end": "1205080"
  },
  {
    "text": "ra to uh to run their log replication right away when we submit",
    "start": "1205080",
    "end": "1211200"
  },
  {
    "text": "the proposal we increment the proposal's pending now the the raft portion of ATD",
    "start": "1211200",
    "end": "1218240"
  },
  {
    "text": "uh raft is implemented ra is a standalone library at this point so recently I think like maybe half a year",
    "start": "1218240",
    "end": "1224000"
  },
  {
    "text": "a year ago ATD um refracted raft in to a separate",
    "start": "1224000",
    "end": "1230640"
  },
  {
    "text": "repository uh but uh this LCD server rough node is the implementation that is",
    "start": "1230640",
    "end": "1237400"
  },
  {
    "text": "required uh uh to run uh rough inside the SD so when we submit the proposal so",
    "start": "1237400",
    "end": "1245720"
  },
  {
    "text": "rough does it magic goes communicates to uh with the peers and then you get this uh I think uh this this channel the ray",
    "start": "1245720",
    "end": "1254679"
  },
  {
    "text": "Channel and uh uh it's it's required for ra implementation to persist the",
    "start": "1254679",
    "end": "1261760"
  },
  {
    "text": "information to the um to the storage so that's the number six is",
    "start": "1261760",
    "end": "1267360"
  },
  {
    "text": "doing here it's saving uh this information to wall log so wall stands for rad log so this is a very important",
    "start": "1267360",
    "end": "1274679"
  },
  {
    "text": "and crucial piece of of the equation uh because every time uh there is a",
    "start": "1274679",
    "end": "1280240"
  },
  {
    "text": "proposal uh each member will save it to uh wall log when we save we actually F sync",
    "start": "1280240",
    "end": "1288120"
  },
  {
    "text": "every time right after every time we save we have sync uh this is I think is a little bit different than most",
    "start": "1288120",
    "end": "1293799"
  },
  {
    "text": "databases I think usually databases don't if sync on every right but uh uh",
    "start": "1293799",
    "end": "1299960"
  },
  {
    "text": "to um to for R correctness you have to F sync and persist the uh the data and",
    "start": "1299960",
    "end": "1306919"
  },
  {
    "text": "guarantee the persistence so that's why uh we F sync and we increment this wall",
    "start": "1306919",
    "end": "1312200"
  },
  {
    "text": "of sync duration this is this is one of the uh important metrics in my opinion",
    "start": "1312200",
    "end": "1317520"
  },
  {
    "text": "uh because if this is slow or you know spiking you can have uh obvious",
    "start": "1317520",
    "end": "1323679"
  },
  {
    "text": "performance issues with that CD so okay we're done with saving our uh data to",
    "start": "1323679",
    "end": "1330640"
  },
  {
    "text": "the wall log so then we Mark The Proposal as sorry as committed um so proposal committed means",
    "start": "1330640",
    "end": "1338960"
  },
  {
    "text": "it's saved to the wall log uh and then uh flow goes back to our ATD server as",
    "start": "1338960",
    "end": "1347320"
  },
  {
    "text": "again through this I think Channel there's a little bit more going in ond server I'm simplifying here and then SD",
    "start": "1347320",
    "end": "1353600"
  },
  {
    "text": "server calls out uh this apply operation and uh this is a second part of our",
    "start": "1353600",
    "end": "1361279"
  },
  {
    "text": "uh of our persistent of of our put so we save to wall and then now we need to",
    "start": "1361279",
    "end": "1366960"
  },
  {
    "text": "save it to the back end to the bball DB and to our mvcc uh so this is what it's doing so it",
    "start": "1366960",
    "end": "1374400"
  },
  {
    "text": "goes through the applier it dispatches this uh to uh mvcc so multiversion",
    "start": "1374400",
    "end": "1381360"
  },
  {
    "text": "concurrency control subcomponent of LCD and what this does it will create it",
    "start": "1381360",
    "end": "1389120"
  },
  {
    "text": "will maintain the history of of uh of your changes so because ra itself",
    "start": "1389120",
    "end": "1394679"
  },
  {
    "text": "doesn't doesn't have a notion of you know history just a log so mvcc will",
    "start": "1394679",
    "end": "1400240"
  },
  {
    "text": "create a revision for each uh uh change for your key it will maintain this in",
    "start": "1400240",
    "end": "1406039"
  },
  {
    "text": "memory index between r Visions uh and keys um so that's when we put to this in",
    "start": "1406039",
    "end": "1414080"
  },
  {
    "text": "memory index and there's you know some logic here to get the revision and then we prois to the back end this is this",
    "start": "1414080",
    "end": "1421279"
  },
  {
    "text": "unsafe sequence put and this is the backend uh uh abstraction uh and the",
    "start": "1421279",
    "end": "1428480"
  },
  {
    "text": "back end Ford is the B bolt uh databas this is embeded memory map database it's",
    "start": "1428480",
    "end": "1434200"
  },
  {
    "text": "a clone of lightning DB notice that um after we put to the back end we",
    "start": "1434200",
    "end": "1441400"
  },
  {
    "text": "actually don't uh commit uh the control flow goes back to the um at CD server",
    "start": "1441400",
    "end": "1448559"
  },
  {
    "text": "and then we return so we Mark The Proposal as applied and uh we decrement proposal",
    "start": "1448559",
    "end": "1454440"
  },
  {
    "text": "pending and we return to the client uh part of this uh response will be",
    "start": "1454440",
    "end": "1460039"
  },
  {
    "text": "revision uh that got assigned to like during this mvcc uh portion and uh it",
    "start": "1460039",
    "end": "1465760"
  },
  {
    "text": "can be useful in various scenarios for your uh for your work and then uh",
    "start": "1465760",
    "end": "1471399"
  },
  {
    "text": "backend commits asynchronously so there's that it will commit every 100 milliseconds or so there's also a buffer",
    "start": "1471399",
    "end": "1477799"
  },
  {
    "text": "so if the buffer reaches a certain uh number of operations I believe like thousand or so it will commit and then",
    "start": "1477799",
    "end": "1485320"
  },
  {
    "text": "we increment this back in commit duration seconds metric so again important",
    "start": "1485320",
    "end": "1491000"
  },
  {
    "text": "uh but not as important in my opinion as the uh the wall if",
    "start": "1491000",
    "end": "1496159"
  },
  {
    "text": "sync okay so that was the sequence diagram and now let's kind of put it in",
    "start": "1496159",
    "end": "1501960"
  },
  {
    "text": "practice and run the little Benchmark here for",
    "start": "1501960",
    "end": "1508760"
  },
  {
    "text": "puts okay so I increased the number of puts",
    "start": "1511679",
    "end": "1516799"
  },
  {
    "text": "so compared to like the total flag uh just to keep the Benchmark running so it",
    "start": "1516799",
    "end": "1523320"
  },
  {
    "text": "won't exit right away and we've prepared this dashboard",
    "start": "1523320",
    "end": "1529120"
  },
  {
    "text": "for you specifically focused on put I'm going to collapse the sections just to",
    "start": "1529120",
    "end": "1534360"
  },
  {
    "text": "demonstrate what we got here so similar to the sequence diagram I try to group",
    "start": "1534360",
    "end": "1541840"
  },
  {
    "text": "this by uh SD components so there's a grpc server there's ETD server War log",
    "start": "1541840",
    "end": "1548240"
  },
  {
    "text": "mvcc and BB DB uh I mean of course for your production dashboards you probably want",
    "start": "1548240",
    "end": "1554720"
  },
  {
    "text": "to um you know arrange it in in a different different way um it's hard to",
    "start": "1554720",
    "end": "1560039"
  },
  {
    "text": "really recommend uh the best arrangement because people have various slos they uh",
    "start": "1560039",
    "end": "1565799"
  },
  {
    "text": "various hardware and so on so um I think it's and also it's good idea to arrange your own dashboards so you actually",
    "start": "1565799",
    "end": "1572279"
  },
  {
    "text": "understand the what uh what what SS mean and not just take the default ETD",
    "start": "1572279",
    "end": "1578840"
  },
  {
    "text": "dashboard so okay let's dive in so we have our grpc so we're doing some puts",
    "start": "1578840",
    "end": "1584399"
  },
  {
    "text": "right now so the start puts incremented so this is the rate and we're actually doing uh quite a lot of load this is",
    "start": "1584399",
    "end": "1591640"
  },
  {
    "text": "running on the docka container so uh um",
    "start": "1591640",
    "end": "1596679"
  },
  {
    "text": "the fsync I think is actually pretty good but uh because it's right into VM",
    "start": "1596679",
    "end": "1602880"
  },
  {
    "text": "of some sorts um then we have handle puts so that's the puts they already",
    "start": "1602880",
    "end": "1608320"
  },
  {
    "text": "completed notice that um we also display er codes here so everything's okay right",
    "start": "1608320",
    "end": "1614440"
  },
  {
    "text": "now and we have also 90 percentile latency for puts so",
    "start": "1614440",
    "end": "1620960"
  },
  {
    "text": "we like uh 60 milliseconds and that's pretty good for amount of uh load we're",
    "start": "1620960",
    "end": "1626960"
  },
  {
    "text": "doing in my opinion um now let's jump into ND server so this is now about proposals so as I",
    "start": "1626960",
    "end": "1633880"
  },
  {
    "text": "mentioned the proposal is the important Concept in rough uh so we have proposals pending so",
    "start": "1633880",
    "end": "1640640"
  },
  {
    "text": "this these are the ones that you know that's went to rough uh but haven't been",
    "start": "1640640",
    "end": "1646200"
  },
  {
    "text": "committed and applied yet um although they they can be committed but not applied it still will count dis",
    "start": "1646200",
    "end": "1653279"
  },
  {
    "text": "spending um so we kind of going towards like 300 here queuing up some proposals",
    "start": "1653279",
    "end": "1658799"
  },
  {
    "text": "but overall we uh we're doing well uh then we have committed tra so this is",
    "start": "1658799",
    "end": "1664039"
  },
  {
    "text": "the ones that are written to wall so when when the",
    "start": "1664039",
    "end": "1669919"
  },
  {
    "text": "proposal when raft replicates it and then calls back to ourd member to",
    "start": "1669919",
    "end": "1675120"
  },
  {
    "text": "persist it uh the proposal will be written to wall right ahead log and will be marked as",
    "start": "1675120",
    "end": "1680760"
  },
  {
    "text": "committed and then we have proposals applied uh and applied means applied to",
    "start": "1680760",
    "end": "1687240"
  },
  {
    "text": "our back end BB DB okay so then uh this is uh uh",
    "start": "1687240",
    "end": "1696600"
  },
  {
    "text": "sometimes it's important to see the difference between committed and implied uh if this uh difference reaches certain",
    "start": "1696600",
    "end": "1703960"
  },
  {
    "text": "threshold ET will stop accepting uh new proposals uh which will be uh pretty bad",
    "start": "1703960",
    "end": "1711919"
  },
  {
    "text": "for uh for ever um and we'll have one scenario which is",
    "start": "1711919",
    "end": "1719039"
  },
  {
    "text": "kind of optional to try to trigger this okay then proposals failed so everything is good right now we're not",
    "start": "1719039",
    "end": "1725080"
  },
  {
    "text": "like doing anything crazy with our LD so nothing is failing then slow applies so",
    "start": "1725080",
    "end": "1732159"
  },
  {
    "text": "this will get incremented I believe it is 100 milliseconds or 300 milliseconds um when if if",
    "start": "1732159",
    "end": "1739559"
  },
  {
    "text": "the applying portion of the proposal takes more than that uh this metric will be Implement incremented and there will",
    "start": "1739559",
    "end": "1746080"
  },
  {
    "text": "be stuff logged into the logs about the slow apply and then wall so okay this is",
    "start": "1746080",
    "end": "1751880"
  },
  {
    "text": "this is important uh uh stuff so this is the um how much we write per second and",
    "start": "1751880",
    "end": "1759440"
  },
  {
    "text": "here's like The crucial metric the wall of sync duration so we doing 15",
    "start": "1759440",
    "end": "1766000"
  },
  {
    "text": "milliseconds uh this is okay I've seen much better I've seen like worse I mean",
    "start": "1766000",
    "end": "1773240"
  },
  {
    "text": "but for for the traffic we're doing for our demo I think this is uh uh this is",
    "start": "1773240",
    "end": "1779320"
  },
  {
    "text": "good but uh um ETD has in the documentation SD has a special um",
    "start": "1779320",
    "end": "1786159"
  },
  {
    "text": "section about performance and um there's a uh link to the article how to",
    "start": "1786159",
    "end": "1793320"
  },
  {
    "text": "Benchmark your disc and uh uh what parameters to use for um f tool I",
    "start": "1793320",
    "end": "1801600"
  },
  {
    "text": "believe uh so that's pretty useful you you if you you know if you're serious about that uh you know I recommend",
    "start": "1801600",
    "end": "1808080"
  },
  {
    "text": "running The Benchmark and Benchmark dis um now this is just",
    "start": "1808080",
    "end": "1814840"
  },
  {
    "text": "count okay so we're done with the wall and uh for mvcc we only have one metric",
    "start": "1814840",
    "end": "1820360"
  },
  {
    "text": "here which is puts per second this ones this are the puts that go through",
    "start": "1820360",
    "end": "1826240"
  },
  {
    "text": "mvcc and for the uh bbold we got uh",
    "start": "1826240",
    "end": "1831799"
  },
  {
    "text": "commits per second and uh uh database size notice that commits per second is",
    "start": "1831799",
    "end": "1837399"
  },
  {
    "text": "uh you know we're doing like 10 uh much lower than you know uh the wall uh FC",
    "start": "1837399",
    "end": "1844440"
  },
  {
    "text": "count uh that's because we commit in in in patches and we have the database size",
    "start": "1844440",
    "end": "1850440"
  },
  {
    "text": "so notice that the database science is growing right now we have a scenario uh",
    "start": "1850440",
    "end": "1855480"
  },
  {
    "text": "when we actually hit the limit uh which is by default this uh 2 GB and",
    "start": "1855480",
    "end": "1861399"
  },
  {
    "text": "we'll we'll talk about what happens then and how to um avoid that there are two",
    "start": "1861399",
    "end": "1866960"
  },
  {
    "text": "metrics that are important here with the database size there's like database uh uh total size and the database in use so",
    "start": "1866960",
    "end": "1876120"
  },
  {
    "text": "when we go to compaction section that's when the uh database in use I'll explain how that",
    "start": "1876120",
    "end": "1882360"
  },
  {
    "text": "works uh and we have the uh commit uh",
    "start": "1882360",
    "end": "1887519"
  },
  {
    "text": "back and commit um nous percentile so we're doing similar to F",
    "start": "1887519",
    "end": "1895039"
  },
  {
    "text": "sync um okay so that's our put now let's look at the ranges so this",
    "start": "1895039",
    "end": "1903360"
  },
  {
    "text": "sequence diagram will be uh",
    "start": "1903360",
    "end": "1908000"
  },
  {
    "text": "shorter so again with the range G ETD is a grpc server so uh for S of business is",
    "start": "1914880",
    "end": "1921639"
  },
  {
    "text": "to accept that grpc request and then forward it to the ATD server so in case of puts we were doing",
    "start": "1921639",
    "end": "1930120"
  },
  {
    "text": "proposals to the ra but for range uh you know we're not really uh submitting",
    "start": "1930120",
    "end": "1935960"
  },
  {
    "text": "anything to the log we're not proposing but atcd guarantees the linearizability of of operations uh including ranges by",
    "start": "1935960",
    "end": "1944480"
  },
  {
    "text": "default so for that uh SC server has to communicate with raft and get the",
    "start": "1944480",
    "end": "1950320"
  },
  {
    "text": "so-called read index to make sure that uh um it's in sync uh with with other",
    "start": "1950320",
    "end": "1956840"
  },
  {
    "text": "members so there's there's a uh I'll say a quite uh uh some complex logic here to",
    "start": "1956840",
    "end": "1964720"
  },
  {
    "text": "get this read index you We R try multiple times if you know if if it if it can't and if the if this is slow uh",
    "start": "1964720",
    "end": "1973480"
  },
  {
    "text": "this slow read index metric will be incremented so uh important uh uh for uh",
    "start": "1973480",
    "end": "1980399"
  },
  {
    "text": "our range performance um so again we get actually when we issue the read index we still",
    "start": "1980399",
    "end": "1986440"
  },
  {
    "text": "get the notification on the on this ready Channel similar to similar to the",
    "start": "1986440",
    "end": "1991880"
  },
  {
    "text": "puts uh but instead of saving to wall uh we just uh write to another channel uh",
    "start": "1991880",
    "end": "1998440"
  },
  {
    "text": "to notify the SD server so when this uh dance is done then we can uh go and get",
    "start": "1998440",
    "end": "2005600"
  },
  {
    "text": "our um information from the back end so this doesn't involve any other members now so",
    "start": "2005600",
    "end": "2011639"
  },
  {
    "text": "this is just local to the node so we go to the socalled trans uh",
    "start": "2011639",
    "end": "2017679"
  },
  {
    "text": "txm uh package and call range so again we hit our mvcc um component that is",
    "start": "2017679",
    "end": "2026600"
  },
  {
    "text": "responsible for keeping track of the revisions so one interesting bit is that uh",
    "start": "2026600",
    "end": "2032799"
  },
  {
    "text": "um the mvcc will quate the index for uh revisions that that correspond to the",
    "start": "2032799",
    "end": "2040240"
  },
  {
    "text": "keys in the in the range and then for each of those revisions we're going to issue uh uh so this unsaved range to the",
    "start": "2040240",
    "end": "2048839"
  },
  {
    "text": "back end uh sometimes it's kind of confusing because you would say range maybe there's a support for range on the",
    "start": "2048839",
    "end": "2055480"
  },
  {
    "text": "B bolt so you'll be like okay why can I just like grab uh everything in optimal",
    "start": "2055480",
    "end": "2061720"
  },
  {
    "text": "fashion but because of the revisions uh it's basically just the range translates into a get for each individual",
    "start": "2061720",
    "end": "2069960"
  },
  {
    "text": "revision uh then we increment this range total",
    "start": "2069960",
    "end": "2076320"
  },
  {
    "text": "and then we return back to the client and this is similar here JPC metrix so",
    "start": "2076320",
    "end": "2082960"
  },
  {
    "text": "we have handle too and handl in seconds so uh actually when preparing this uh uh",
    "start": "2082960",
    "end": "2089398"
  },
  {
    "text": "demo I noticed that we don't have timing for for this portion of uh range um so",
    "start": "2089399",
    "end": "2098160"
  },
  {
    "text": "I've added the issue Ford to add the metric here I think it's it was missed I",
    "start": "2098160",
    "end": "2104440"
  },
  {
    "text": "think it'll be quite good to have ability to see how long just this portion takes you know not uh without",
    "start": "2104440",
    "end": "2111160"
  },
  {
    "text": "the rough okay so let's issue some uh let's run Benchmark for",
    "start": "2111160",
    "end": "2118640"
  },
  {
    "text": "in and I'm still running my put benchmark uh so I'm not going to stop that I'm going to just do the range at",
    "start": "2120920",
    "end": "2127400"
  },
  {
    "text": "the same time and uh We've prepared the Rangers",
    "start": "2127400",
    "end": "2132480"
  },
  {
    "text": "dashboard that follows the similar structure as our puts and all our dashboards try to follow this structure",
    "start": "2132480",
    "end": "2139400"
  },
  {
    "text": "of we have JPC at CD server mvcc on the back end if it that involved so not that",
    "start": "2139400",
    "end": "2144720"
  },
  {
    "text": "many metrics for range unfortunately uh so we have the range started",
    "start": "2144720",
    "end": "2151359"
  },
  {
    "text": "um uh handled uh with uh with codes then the latency",
    "start": "2151359",
    "end": "2157720"
  },
  {
    "text": "um so I think we're doing okayish by the way we actually coring here we're just coring for the empty key uh so and we're",
    "start": "2157720",
    "end": "2165440"
  },
  {
    "text": "doing this while we're doing a bunch of puts uh so that's why there is some uh",
    "start": "2165440",
    "end": "2170839"
  },
  {
    "text": "latency uh that is happening there's send bytes then on the ETD server we",
    "start": "2170839",
    "end": "2177240"
  },
  {
    "text": "have those slow slow read index again everything is",
    "start": "2177240",
    "end": "2182280"
  },
  {
    "text": "uh working fine right now so uh it's zero at this point and we also have U uh",
    "start": "2182280",
    "end": "2187359"
  },
  {
    "text": "failed read index and the on the mvcc part we have",
    "start": "2187359",
    "end": "2192920"
  },
  {
    "text": "our ranges total okay so that's",
    "start": "2192920",
    "end": "2198200"
  },
  {
    "text": "the uh that's the range dashboard so let's jump into something a little bit more interesting so the next two",
    "start": "2198200",
    "end": "2204119"
  },
  {
    "text": "scenarios we're going to try to introduce some uh we try to try to trigger some failures and",
    "start": "2204119",
    "end": "2209520"
  },
  {
    "text": "delays um so let's uh let's let's start doing that so the first scenario we're",
    "start": "2209520",
    "end": "2216000"
  },
  {
    "text": "going to try to delay that fsync uh that uh uh that we using to ride to wall and",
    "start": "2216000",
    "end": "2222760"
  },
  {
    "text": "we'll see how that affects the performance of SD puts",
    "start": "2222760",
    "end": "2229440"
  },
  {
    "text": "uh so I think we're still running this Benchmark okay that's fine uh okay so to uh to add this",
    "start": "2230960",
    "end": "2239359"
  },
  {
    "text": "delay we're going to use the Go fail library that SD is built with and I",
    "start": "2239359",
    "end": "2245520"
  },
  {
    "text": "specifically buil this image with goil enabled to allow for uh to allow insert",
    "start": "2245520",
    "end": "2253000"
  },
  {
    "text": "to all to insert this delays you know the production the image uh has this obviously disabled since it probably be",
    "start": "2253000",
    "end": "2259680"
  },
  {
    "text": "like a security uh uh red flag",
    "start": "2259680",
    "end": "2265319"
  },
  {
    "text": "um but for our demo I build was enable and we're going to what we're going to do here we're going to insert sleep in a",
    "start": "2265319",
    "end": "2271960"
  },
  {
    "text": "certain uh predefined place in code so this this will be in wall before fsync",
    "start": "2271960",
    "end": "2277920"
  },
  {
    "text": "so right before we fsync there's the there's there's the place that will be",
    "start": "2277920",
    "end": "2283359"
  },
  {
    "text": "processed by uh Goa library and uh we have an ability to insert the Sleep uh",
    "start": "2283359",
    "end": "2289520"
  },
  {
    "text": "while our cluster is running so I'm going to do",
    "start": "2289520",
    "end": "2294960"
  },
  {
    "text": "that okay and uh let's check out our puts right away we worried that we might",
    "start": "2295119",
    "end": "2301800"
  },
  {
    "text": "run out of the space soon I think we're still good so after 2 Gab since start",
    "start": "2301800",
    "end": "2307560"
  },
  {
    "text": "failing but I think we're not reaching that yet so so let's see what",
    "start": "2307560",
    "end": "2312839"
  },
  {
    "text": "uh what's happening so let's wait for a little bit for data to refresh okay here we go so",
    "start": "2312839",
    "end": "2321599"
  },
  {
    "text": "so we inserted the um 100 milliseconds delay for the fsync and right away we",
    "start": "2321599",
    "end": "2327280"
  },
  {
    "text": "see the uh spikes uh as expected um now let's see what's",
    "start": "2327280",
    "end": "2334680"
  },
  {
    "text": "happening to our put requests so we'll also see some slow",
    "start": "2334680",
    "end": "2342280"
  },
  {
    "text": "applies and then our so our proposal applied Dro in",
    "start": "2342280",
    "end": "2350640"
  },
  {
    "text": "because we can't keep up uh the PRI rate because of that again we can't keep up",
    "start": "2350640",
    "end": "2356079"
  },
  {
    "text": "with PRI rate and let's look at the latency so here we go",
    "start": "2356079",
    "end": "2364480"
  },
  {
    "text": "the so put l climbing up slowly let's give it a little",
    "start": "2364480",
    "end": "2371119"
  },
  {
    "text": "bit and the rate of handled uh puts is",
    "start": "2373079",
    "end": "2378359"
  },
  {
    "text": "dropping just waiting for the latency to climb up even",
    "start": "2388560",
    "end": "2393960"
  },
  {
    "text": "more so this show cases the importance of of your fsync and how it affects the",
    "start": "2393960",
    "end": "2401079"
  },
  {
    "text": "the put request latency uh so um important for your production dashboards",
    "start": "2401079",
    "end": "2406800"
  },
  {
    "text": "to and alerts to um to look the",
    "start": "2406800",
    "end": "2411920"
  },
  {
    "text": "fsync um okay so we added a small delay um so we we saw the impact now",
    "start": "2411920",
    "end": "2420720"
  },
  {
    "text": "let's add like larger delay uh which is one second see what's",
    "start": "2420720",
    "end": "2428359"
  },
  {
    "text": "happening",
    "start": "2428359",
    "end": "2431359"
  },
  {
    "text": "oops okay going back to our P dashboard so the latency climbed up uh for",
    "start": "2439720",
    "end": "2445760"
  },
  {
    "text": "previous um the data is still not uh refreshed fully yet uh by the way notice",
    "start": "2445760",
    "end": "2452599"
  },
  {
    "text": "that the um uh leader usually processes the request",
    "start": "2452599",
    "end": "2459960"
  },
  {
    "text": "faster uh than the than other members than the followers uh that's because",
    "start": "2459960",
    "end": "2465960"
  },
  {
    "text": "there is a it saves round trip time uh uh because you hidden leader but uh it's",
    "start": "2465960",
    "end": "2473200"
  },
  {
    "text": "not recommended to direct uh your request uh um from your client to the leader ETD has on the client it has a",
    "start": "2473200",
    "end": "2480920"
  },
  {
    "text": "building load balancer so you always want to really send your uh specify all the end points uh for City cluster so it",
    "start": "2480920",
    "end": "2487760"
  },
  {
    "text": "will load balance to them so again we now climbing up to uh like 500",
    "start": "2487760",
    "end": "2493000"
  },
  {
    "text": "milliseconds that's because we're doing the one second delay on the fsync but we still can keep up with the uh with the",
    "start": "2493000",
    "end": "2499839"
  },
  {
    "text": "traffic um so n was still getting okay of course our rate uh",
    "start": "2499839",
    "end": "2507040"
  },
  {
    "text": "dropped u i mean in my opinion this is already kind of reaching the level of",
    "start": "2507040",
    "end": "2513760"
  },
  {
    "text": "unacceptable latency um um see our proposal spending I kind of",
    "start": "2513760",
    "end": "2520960"
  },
  {
    "text": "uh starting to que up a little bit more here and then let's look at the",
    "start": "2520960",
    "end": "2529160"
  },
  {
    "text": "fsync yeah so the fsync as expected is uh uh go to one",
    "start": "2529160",
    "end": "2534520"
  },
  {
    "text": "second um so the conclusion is that we can keep up with our traffic but uh if",
    "start": "2534520",
    "end": "2542839"
  },
  {
    "text": "you have uh uh some slos in terms of the latency probably uh those will will will",
    "start": "2542839",
    "end": "2548480"
  },
  {
    "text": "start firing",
    "start": "2548480",
    "end": "2551680"
  },
  {
    "text": "um okay and also let's try running some ranges again and see what",
    "start": "2557359",
    "end": "2564440"
  },
  {
    "text": "happens there so while our puts are still running so start the ranges Benchmark",
    "start": "2564440",
    "end": "2571760"
  },
  {
    "text": "you can see that this is like barely moving um let me open the ranges",
    "start": "2571760",
    "end": "2578640"
  },
  {
    "text": "dashboard here let's see what we got in terms of",
    "start": "2578640",
    "end": "2584720"
  },
  {
    "text": "the latency let's wait for a little bit for",
    "start": "2584720",
    "end": "2591920"
  },
  {
    "text": "the so we have 4 seconds this is by the way empty key there so there's no data",
    "start": "2591920",
    "end": "2599599"
  },
  {
    "text": "uh U you know so this is unacceptable um and why",
    "start": "2599599",
    "end": "2606720"
  },
  {
    "text": "well that's because we see this slow uh read index so because uh ra is sort of",
    "start": "2606720",
    "end": "2614200"
  },
  {
    "text": "queued up with the uh processing those ranges because the F sync is slow that also affects the",
    "start": "2614200",
    "end": "2621359"
  },
  {
    "text": "read index and uh um so this demonstrates how",
    "start": "2621359",
    "end": "2627319"
  },
  {
    "text": "the slow f sync for what you would say what you think you would be okay like why would that portion of the system",
    "start": "2627319",
    "end": "2634800"
  },
  {
    "text": "affect this portion but because ever since synchronizes in rough and uh we're doing this read index uh your ranges",
    "start": "2634800",
    "end": "2642839"
  },
  {
    "text": "also will be affected um",
    "start": "2642839",
    "end": "2648040"
  },
  {
    "text": "now I can disable linearizable requirement for our",
    "start": "2648040",
    "end": "2653880"
  },
  {
    "text": "ranges so I can change the consistency to seizable and what will what this do",
    "start": "2653880",
    "end": "2660200"
  },
  {
    "text": "let's try that out so we see here like here we we just fly through this Benchmark so why",
    "start": "2660200",
    "end": "2667760"
  },
  {
    "text": "because when we do uh serializable uh consistency level we",
    "start": "2667760",
    "end": "2673599"
  },
  {
    "text": "don't need to coordinate with other uh SD members so we not engage in our um",
    "start": "2673599",
    "end": "2681000"
  },
  {
    "text": "slow our read index um so we can process the requests much",
    "start": "2681000",
    "end": "2688000"
  },
  {
    "text": "faster okay so uh this shows the how fsync affects the performance of the",
    "start": "2689760",
    "end": "2696400"
  },
  {
    "text": "system let's go to our next scenario which is which",
    "start": "2696400",
    "end": "2701480"
  },
  {
    "text": "is uh network uh delays uh that demonstrates that not only fsync matters",
    "start": "2701480",
    "end": "2707520"
  },
  {
    "text": "for SD but if you can you can probably guess that because raft is coordinating between uh SD members we also network",
    "start": "2707520",
    "end": "2715480"
  },
  {
    "text": "communication between those members also plays a role in the performance uh so we're actually going",
    "start": "2715480",
    "end": "2720920"
  },
  {
    "text": "to start another cluster that has a little bit different setup",
    "start": "2720920",
    "end": "2727520"
  },
  {
    "text": "so for uh to introduce some Network delays I'm not using the Go fail I'm using uh",
    "start": "2727520",
    "end": "2735000"
  },
  {
    "text": "this bridge tool that allows me to proxy traffic between um",
    "start": "2735000",
    "end": "2740119"
  },
  {
    "text": "SD members and uh it's also shipped withd not very widely used uh but you",
    "start": "2740119",
    "end": "2745920"
  },
  {
    "text": "can specify this RX delay uh when you start it up and I set it to one second",
    "start": "2745920",
    "end": "2751880"
  },
  {
    "text": "and we're going to we're going to see what's what happens when we do that",
    "start": "2751880",
    "end": "2757880"
  },
  {
    "text": "so let's",
    "start": "2758760",
    "end": "2765839"
  },
  {
    "text": "sorry let's wait for that to get",
    "start": "2768079",
    "end": "2772280"
  },
  {
    "text": "started now that's some log about bridging uh the",
    "start": "2784079",
    "end": "2790318"
  },
  {
    "text": "traffic so prepared Pier dashboard uh for for this",
    "start": "2794760",
    "end": "2803000"
  },
  {
    "text": "scenario so this is some important metrics in my opinion that represent communication between SD peers so I",
    "start": "2803000",
    "end": "2809880"
  },
  {
    "text": "include raft proposals in here uh just because it's uh um important uh overall",
    "start": "2809880",
    "end": "2818280"
  },
  {
    "text": "and uh um it's always good idea to I guess look at uh how how your proposals",
    "start": "2818280",
    "end": "2824599"
  },
  {
    "text": "are committing then we have leader changes so uh you know if if if you see spikes here and leader is changing",
    "start": "2824599",
    "end": "2830880"
  },
  {
    "text": "frequently something probably not uh working right uh so maybe the problem",
    "start": "2830880",
    "end": "2837240"
  },
  {
    "text": "might be with the network um between your peers so we have the rafter lead this is",
    "start": "2837240",
    "end": "2842920"
  },
  {
    "text": "just to indicate who is the uh leader at the moment and we have the heartbeat failures I think VI talked about the",
    "start": "2842920",
    "end": "2849440"
  },
  {
    "text": "heartbeat so ETD uh rough does the um heartbeat between the members and the",
    "start": "2849440",
    "end": "2856240"
  },
  {
    "text": "leader and uh if certain threshold of heartbeat failures is reached it will um",
    "start": "2856240",
    "end": "2862720"
  },
  {
    "text": "uh start a new election and then uh for peer networking",
    "start": "2862720",
    "end": "2868400"
  },
  {
    "text": "so we have this rtt so ETD kind of surprising surprisingly but rcd ETD has",
    "start": "2868400",
    "end": "2874880"
  },
  {
    "text": "internal um prober that uh probs uh uh other",
    "start": "2874880",
    "end": "2882839"
  },
  {
    "text": "members uh of the cluster uh it U issues get request to a",
    "start": "2882839",
    "end": "2889599"
  },
  {
    "text": "special endpoint and uh it records their round trip time in this metric um so",
    "start": "2889599",
    "end": "2897040"
  },
  {
    "text": "we've already started our cluster with 1 second delay so that's why you know this is going to one second like from prior",
    "start": "2897040",
    "end": "2903640"
  },
  {
    "text": "prior data you know was was very low um and then we'll have send bytes and",
    "start": "2903640",
    "end": "2910760"
  },
  {
    "text": "received bytes and there's some um",
    "start": "2910760",
    "end": "2915680"
  },
  {
    "text": "failers so really this is what I wanted to show you the indication that our um",
    "start": "2915880",
    "end": "2921000"
  },
  {
    "text": "RT our round trip time is already delayed so now let's try running some benchmarks and see what's what's going",
    "start": "2921000",
    "end": "2928040"
  },
  {
    "text": "to happen to our",
    "start": "2928040",
    "end": "2930920"
  },
  {
    "text": "performance",
    "start": "2934599",
    "end": "2937599"
  },
  {
    "text": "okay so this is uh you can see this is actually already failing there some see",
    "start": "2939720",
    "end": "2945000"
  },
  {
    "text": "some too many requests uh so on yeah so let's look at the P dashboard",
    "start": "2945000",
    "end": "2954280"
  },
  {
    "text": "and going scroll",
    "start": "2957880",
    "end": "2961400"
  },
  {
    "text": "up",
    "start": "2964520",
    "end": "2967520"
  },
  {
    "text": "let me run that again to",
    "start": "2973400",
    "end": "2976520"
  },
  {
    "text": "just",
    "start": "2994520",
    "end": "2997520"
  },
  {
    "text": "I'm going to wait a little bit for the data to",
    "start": "3005799",
    "end": "3009799"
  },
  {
    "text": "refresh let me increase",
    "start": "3018960",
    "end": "3022799"
  },
  {
    "text": "the yeah so we hav't a um we can't even keep up with this at this point uh this",
    "start": "3024440",
    "end": "3031319"
  },
  {
    "text": "demo sometimes is kind of try to you know when I was running this intestin um I didn't uh um it didn't fail right away",
    "start": "3031319",
    "end": "3040040"
  },
  {
    "text": "so it was actually more interesting to to show that um but of course when you",
    "start": "3040040",
    "end": "3046240"
  },
  {
    "text": "present it has to not work as you expect um but I think it still indicates that you know we can't really do the um the",
    "start": "3046240",
    "end": "3054599"
  },
  {
    "text": "puts uh while our um while we have Network um delays between the",
    "start": "3054599",
    "end": "3063240"
  },
  {
    "text": "peers okay so the the purpose of the demo is to uh show you that not only",
    "start": "3078520",
    "end": "3085520"
  },
  {
    "text": "fsync but also network is important for SD performance so I'm going to stop this",
    "start": "3085520",
    "end": "3092520"
  },
  {
    "text": "cluster with the network",
    "start": "3092520",
    "end": "3095799"
  },
  {
    "text": "delays how by the way how people are doing if anybody is following aan any",
    "start": "3098200",
    "end": "3105400"
  },
  {
    "text": "questions",
    "start": "3107079",
    "end": "3110079"
  },
  {
    "text": "okay I have a question um",
    "start": "3112280",
    "end": "3117359"
  },
  {
    "text": "also C for SL",
    "start": "3126200",
    "end": "3132839"
  },
  {
    "text": "like right so um one thing to check is the network another sin is like",
    "start": "3139160",
    "end": "3145520"
  },
  {
    "text": "sometimes other operations like for example if you uh run defrag it will uh",
    "start": "3145520",
    "end": "3151760"
  },
  {
    "text": "uh can block the the back end um so for compaction can I think uh sometimes",
    "start": "3151760",
    "end": "3158559"
  },
  {
    "text": "cause uh uh slowness um so I would check",
    "start": "3158559",
    "end": "3164240"
  },
  {
    "text": "the um the network um that will be my",
    "start": "3164240",
    "end": "3169880"
  },
  {
    "text": "first so check those rtt um times",
    "start": "3169880",
    "end": "3175920"
  },
  {
    "text": "uh that'll be like my first response um but yeah there may be some something else as well um again depends",
    "start": "3175920",
    "end": "3183599"
  },
  {
    "text": "on the what version of szd you're running I think there can be differences between the 35 and the 34 in terms of",
    "start": "3183599",
    "end": "3191440"
  },
  {
    "text": "the performance um you you can also maybe be doing like ranges for example",
    "start": "3191440",
    "end": "3199400"
  },
  {
    "text": "that uh uh slowing down some of the um some of the puts",
    "start": "3199400",
    "end": "3207160"
  },
  {
    "text": "so so apply time uh includes the um the",
    "start": "3225720",
    "end": "3231720"
  },
  {
    "text": "applying portion of the flow so that's already after the",
    "start": "3231720",
    "end": "3236760"
  },
  {
    "text": "um after we committed the message to wall um but it I guess it can block on",
    "start": "3236760",
    "end": "3247319"
  },
  {
    "text": "um so it's kind of more towards geared towards the bolt",
    "start": "3247319",
    "end": "3252559"
  },
  {
    "text": "performance um so I would I would check what's your database size for",
    "start": "3252559",
    "end": "3258760"
  },
  {
    "text": "example uh and",
    "start": "3258760",
    "end": "3264079"
  },
  {
    "text": "huh right so um I think you already uh you",
    "start": "3264079",
    "end": "3271160"
  },
  {
    "text": "already moved beyond the recommended ATD limit for yeah so uh so yeah like apply",
    "start": "3271160",
    "end": "3278960"
  },
  {
    "text": "time is about uh back end M VCC so that's kind of past the raft uh or the",
    "start": "3278960",
    "end": "3286400"
  },
  {
    "text": "slow applies uh so I think like for example I've seen um like for example in",
    "start": "3286400",
    "end": "3292880"
  },
  {
    "text": "kubernetes right if people are coring old po and in a big cluster uh and uh not",
    "start": "3292880",
    "end": "3299760"
  },
  {
    "text": "paging um then you might you know get into this uh",
    "start": "3299760",
    "end": "3306720"
  },
  {
    "text": "issue hi yeah uh thanks a lot that was very insightful uh at some point you mentioned that uh as best practice it",
    "start": "3311200",
    "end": "3317960"
  },
  {
    "text": "was interesting to have like the clients pointing to any member which was not a leader is there any uh like buil way in",
    "start": "3317960",
    "end": "3325520"
  },
  {
    "text": "the libraries to do so or like so s can you repeat that again at some point I",
    "start": "3325520",
    "end": "3331160"
  },
  {
    "text": "believe I understood that you mentioned that it would be as a general practice interesting to have all the clients pointing to uh non-leader uh members",
    "start": "3331160",
    "end": "3339960"
  },
  {
    "text": "yeah how do you uh in practice uh implement this so in in practice I think",
    "start": "3339960",
    "end": "3347200"
  },
  {
    "text": "if you uh in kuber for example uh you specify the SD endpoints and usually you",
    "start": "3347200",
    "end": "3354280"
  },
  {
    "text": "list all of them so you just plug that in in your connection scen uh and then",
    "start": "3354280",
    "end": "3361160"
  },
  {
    "text": "uh s client will round robin uh between those endpoints so let say it's uh you",
    "start": "3361160",
    "end": "3369839"
  },
  {
    "text": "you kind of control that right so if you uh specify okay this endpoint is a",
    "start": "3369839",
    "end": "3375119"
  },
  {
    "text": "leader and you just put that then all the traffic is going to go there then at some point for example the leader",
    "start": "3375119",
    "end": "3380960"
  },
  {
    "text": "changes so that point is leader no more so then your logic is flawed right so",
    "start": "3380960",
    "end": "3387520"
  },
  {
    "text": "it's not recommended to uh to do that so just specify all the end points and",
    "start": "3387520",
    "end": "3394599"
  },
  {
    "text": "yeah I initially thought that you mentioned it was not recommended to send",
    "start": "3394599",
    "end": "3399680"
  },
  {
    "text": "traffic to the leader but uh okay yeah right right yeah what I'm saying is",
    "start": "3399680",
    "end": "3405359"
  },
  {
    "text": "that don't like here's my leader I'm just going to send there and you know just because I'm think I think there's",
    "start": "3405359",
    "end": "3411200"
  },
  {
    "text": "going to be some you know better performance uh so that's what I'm trying trying to say yeah makes sense okay",
    "start": "3411200",
    "end": "3416400"
  },
  {
    "text": "thanks for the [Music]",
    "start": "3416400",
    "end": "3421780"
  },
  {
    "text": "clarification yeah it's a uh wherever gooses Yeah so basically it's a",
    "start": "3423799",
    "end": "3431880"
  },
  {
    "text": "uh um f is it called f data sync or something in the",
    "start": "3431880",
    "end": "3438480"
  },
  {
    "text": "huh yeah but on the Linux API I don't remember what it's called is it in",
    "start": "3438480",
    "end": "3444480"
  },
  {
    "text": "Justus yeah so um the I think there have been some discussions about removing if",
    "start": "3444480",
    "end": "3451079"
  },
  {
    "text": "sync but I think the rough doesn't really uh um then then you might violate um some",
    "start": "3451079",
    "end": "3459440"
  },
  {
    "text": "of the correctness to Raft uh and another thing about uh about this is to",
    "start": "3459440",
    "end": "3465359"
  },
  {
    "text": "watch uh other services using your dis so for example uh if if you r at CD on",
    "start": "3465359",
    "end": "3473079"
  },
  {
    "text": "the Node and then you also making some backups of your you know data directory",
    "start": "3473079",
    "end": "3478440"
  },
  {
    "text": "on the same dis it might introduce some um fyn delays during when you run that",
    "start": "3478440",
    "end": "3486520"
  },
  {
    "text": "backup okay so let's uh let's move to the scenario number three um and we're",
    "start": "3486920",
    "end": "3494880"
  },
  {
    "text": "going to trigger that database size limit um I'm going to start the cluster",
    "start": "3494880",
    "end": "3501680"
  },
  {
    "text": "again oops",
    "start": "3503280",
    "end": "3506720"
  },
  {
    "text": "so that's our put",
    "start": "3517200",
    "end": "3521078"
  },
  {
    "text": "dashboard I'm going to run the puts Benchmark with um increased value size",
    "start": "3522920",
    "end": "3528440"
  },
  {
    "text": "to trigger this condition so specified value size there",
    "start": "3528440",
    "end": "3533920"
  },
  {
    "text": "of uh 10 kilobytes let's see what's going to happen I'm going to switch to puts",
    "start": "3533920",
    "end": "3542079"
  },
  {
    "text": "dashboard and I'm going to look at the database",
    "start": "3542079",
    "end": "3547839"
  },
  {
    "text": "size okay so we're kind of climbing up so we've done uh about 500 megab so far s just a",
    "start": "3552039",
    "end": "3560720"
  },
  {
    "text": "little bit for it to reach um 2 GB and then uh observe what's going to happen",
    "start": "3560720",
    "end": "3568760"
  },
  {
    "text": "um okay I think we're almost",
    "start": "3568760",
    "end": "3573119"
  },
  {
    "text": "there okay so we reached our limit and uh what happens at CD then stop will",
    "start": "3584480",
    "end": "3590200"
  },
  {
    "text": "stop uh accepting new uh requests inut requests and start",
    "start": "3590200",
    "end": "3596440"
  },
  {
    "text": "issuing resource exhausted error code so that's what I'm going to try to show you",
    "start": "3596440",
    "end": "3602720"
  },
  {
    "text": "so yeah in the handle puts where we also have the error codes we start seeing the",
    "start": "3602720",
    "end": "3608799"
  },
  {
    "text": "resource exhausted um so it's a simple uh demo",
    "start": "3608799",
    "end": "3614079"
  },
  {
    "text": "and but I feel like people get confused about this sometimes uh another point of",
    "start": "3614079",
    "end": "3620680"
  },
  {
    "text": "confusion is when ETD reaches the limit it sets so-called alarm and then to uh",
    "start": "3620680",
    "end": "3628400"
  },
  {
    "text": "to get rid of it you have to go and uh issue a disarm command uh which I've",
    "start": "3628400",
    "end": "3633599"
  },
  {
    "text": "seen people get confused by that but from the metrics perspective this is kind of what what I think to watch out",
    "start": "3633599",
    "end": "3639160"
  },
  {
    "text": "for so you need to remember what's your database size limit and have some alerts",
    "start": "3639160",
    "end": "3644359"
  },
  {
    "text": "about about that and also um that's one of the reasons to get the resource",
    "start": "3644359",
    "end": "3650440"
  },
  {
    "text": "exhausted code so that's a just a simple and and then here you will see all this",
    "start": "3650440",
    "end": "3656119"
  },
  {
    "text": "errors for resource exhausted blah blah database space",
    "start": "3656119",
    "end": "3661640"
  },
  {
    "text": "exceeded so yeah simple um but",
    "start": "3661640",
    "end": "3667440"
  },
  {
    "text": "important okay now to deal with the space uh uh what are our options so",
    "start": "3667440",
    "end": "3675000"
  },
  {
    "text": "really the option is compaction so since s CD maintains kind of all all the history of your uh Keys uh at some point",
    "start": "3675000",
    "end": "3684559"
  },
  {
    "text": "when you you want to compact the old history um I linked some docs about the",
    "start": "3684559",
    "end": "3690839"
  },
  {
    "text": "compaction you can run it in uh two ways so there's the compaction call from the client",
    "start": "3690839",
    "end": "3698280"
  },
  {
    "text": "where the client itself decides when to when it wants to Compact and issues the",
    "start": "3698280",
    "end": "3703400"
  },
  {
    "text": "compact call that's what kubernetes does IT issues the compact every five",
    "start": "3703400",
    "end": "3709280"
  },
  {
    "text": "minutes but there's also an option to run so-called Auto compaction based on time",
    "start": "3709280",
    "end": "3715200"
  },
  {
    "text": "so I think it's um by hours so you can specify the Quran compaction every",
    "start": "3715200",
    "end": "3720400"
  },
  {
    "text": "hour um and there's some logic I think some settings to decide what to compact",
    "start": "3720400",
    "end": "3725760"
  },
  {
    "text": "we're going to do the call from the client and uh I also have a sequence",
    "start": "3725760",
    "end": "3732839"
  },
  {
    "text": "diagram uh I hope these diagrams are you you guys can see them they're not too",
    "start": "3732839",
    "end": "3739599"
  },
  {
    "text": "confusing with the internals but uh compession is actually",
    "start": "3739599",
    "end": "3744880"
  },
  {
    "text": "implementation in my opinion is quite uh um complicated um but let's try to to to go",
    "start": "3744880",
    "end": "3753039"
  },
  {
    "text": "through that so first of all an interesting part is that compaction is actually going to translate into another",
    "start": "3753039",
    "end": "3758880"
  },
  {
    "text": "proposal to uh to wall so if you issue compact to One SD node um it will get",
    "start": "3758880",
    "end": "3767680"
  },
  {
    "text": "replicated and then every node is going to compact um so similar to other proposal",
    "start": "3767680",
    "end": "3774920"
  },
  {
    "text": "you get the same metrics uh start toll proposal spending and so on and then you",
    "start": "3774920",
    "end": "3780440"
  },
  {
    "text": "even save this uh to wall the information about this uh",
    "start": "3780440",
    "end": "3785920"
  },
  {
    "text": "operation uh but the difference comes when you go to the um apply apply",
    "start": "3785920",
    "end": "3791599"
  },
  {
    "text": "portion of this so that will call this compact method on the uh mvcc uh subsystem and",
    "start": "3791599",
    "end": "3800440"
  },
  {
    "text": "that will uh in turn schedule compaction uh so there's the contion of the",
    "start": "3800440",
    "end": "3806680"
  },
  {
    "text": "compaction job and uh um this gets scheduled and by",
    "start": "3806680",
    "end": "3813799"
  },
  {
    "text": "default uh SCD solver will return to the client but the compaction is still",
    "start": "3813799",
    "end": "3819720"
  },
  {
    "text": "running here you can specify a flag to to make it weight uh but it can be also",
    "start": "3819720",
    "end": "3826039"
  },
  {
    "text": "confusing that it returns right away but you know you just kicked off a compaction that can take you know um",
    "start": "3826039",
    "end": "3832520"
  },
  {
    "text": "longer uh then you have SC compaction so it compacts the that in memory index of",
    "start": "3832520",
    "end": "3838720"
  },
  {
    "text": "revisions first and then we have this index compaction pause duration metric",
    "start": "3838720",
    "end": "3846279"
  },
  {
    "text": "um it's actually defined on the LD debugging level uh which is indication that it might change um but um um let's",
    "start": "3846279",
    "end": "3856200"
  },
  {
    "text": "work with that for now so what that means is just uh when we issue compact",
    "start": "3856200",
    "end": "3861400"
  },
  {
    "text": "to the index it will um block the IND IND and uh this just records how long",
    "start": "3861400",
    "end": "3867359"
  },
  {
    "text": "that portion of compaction takes and then for to compact actually data on the",
    "start": "3867359",
    "end": "3873760"
  },
  {
    "text": "back hand uh there's logic to go and determine sort of which revisions to",
    "start": "3873760",
    "end": "3880160"
  },
  {
    "text": "Compact and then it sort of uses this compaction batch limit to uh to Loop",
    "start": "3880160",
    "end": "3885839"
  },
  {
    "text": "like it will kind of run multiple Loops of compaction batch limit size to uh to",
    "start": "3885839",
    "end": "3891599"
  },
  {
    "text": "do this deletes on the back end and then records compaction pause DB compaction",
    "start": "3891599",
    "end": "3897200"
  },
  {
    "text": "pause but this pause is actually for each cycle of the loop it's kind of uh",
    "start": "3897200",
    "end": "3902720"
  },
  {
    "text": "uh in my opinion complicated um there's probably good chance to like refactor",
    "start": "3902720",
    "end": "3908599"
  },
  {
    "text": "this in but that's what it is right now and then we have the compaction total so that includes the whole around time of",
    "start": "3908599",
    "end": "3915000"
  },
  {
    "text": "the job uh yeah so um let's let's try this",
    "start": "3915000",
    "end": "3921720"
  },
  {
    "text": "out and see it on the dashboard",
    "start": "3921720",
    "end": "3926078"
  },
  {
    "text": "so I'm going to I'm issuing the force recreate and",
    "start": "3933520",
    "end": "3939720"
  },
  {
    "text": "minus V to clean out the um the volumes",
    "start": "3939720",
    "end": "3944880"
  },
  {
    "text": "thatd is mounted with so that 2 GB uh",
    "start": "3944880",
    "end": "3950240"
  },
  {
    "text": "size limit when I stop the cluster and um it will that volume will get blown",
    "start": "3950240",
    "end": "3956640"
  },
  {
    "text": "away in the interesting portion that the grafana um setup uh uses uh I think it's",
    "start": "3956640",
    "end": "3963480"
  },
  {
    "text": "called external volumes so that uh will be persisted um so that's why in the",
    "start": "3963480",
    "end": "3969720"
  },
  {
    "text": "dashboard you kind of see the history of the prior runs uh just just a side note okay so",
    "start": "3969720",
    "end": "3976920"
  },
  {
    "text": "let's start the cluster okay and uh now we're going to",
    "start": "3976920",
    "end": "3984920"
  },
  {
    "text": "run the put benchmark but with compaction so basically what it's doing",
    "start": "3984920",
    "end": "3991279"
  },
  {
    "text": "is running the inputs but also it has this options to uh compact every there's",
    "start": "3991279",
    "end": "3998240"
  },
  {
    "text": "a compact interval with specifi 10 seconds so in production you're not going to be compacting every 10 seconds",
    "start": "3998240",
    "end": "4004160"
  },
  {
    "text": "but for for the demo purposes just to show how the metrics reflect that we use 10 seconds and then you have this",
    "start": "4004160",
    "end": "4010119"
  },
  {
    "text": "compact index Delta this is actually only for benchmark Mark so um the the",
    "start": "4010119",
    "end": "4017200"
  },
  {
    "text": "actual command uh to SD steel is different so let's run",
    "start": "4017200",
    "end": "4023880"
  },
  {
    "text": "this so have a dashboard for you again similar so again compaction is",
    "start": "4026559",
    "end": "4033200"
  },
  {
    "text": "the GPC call again so we have the GPC metrics uh for",
    "start": "4033200",
    "end": "4038240"
  },
  {
    "text": "it I guess let's wait for 10 seconds for now on the mvcc part we have uh this",
    "start": "4038240",
    "end": "4048440"
  },
  {
    "text": "two metrics current and compacted revision so uh the current one is as it",
    "start": "4048440",
    "end": "4055680"
  },
  {
    "text": "says is just the latest revision of uh of of the latest change in the database",
    "start": "4055680",
    "end": "4063279"
  },
  {
    "text": "and then the compacted is the one that the stuff we compacted below that",
    "start": "4063279",
    "end": "4068720"
  },
  {
    "text": "revision so the logic of compaction also no there's one uh exception to that rule",
    "start": "4068720",
    "end": "4074240"
  },
  {
    "text": "if the key didn't wasn't changed um and its revision sort of is",
    "start": "4074240",
    "end": "4080119"
  },
  {
    "text": "still below it will keep the latest value of that key so you know so it doesn't remove",
    "start": "4080119",
    "end": "4087200"
  },
  {
    "text": "um doesn't remove the revision of the key even if it's below uh compacted",
    "start": "4087200",
    "end": "4092680"
  },
  {
    "text": "revision if you're trying to uh uh if it's the latest version right because you you don't want to",
    "start": "4092680",
    "end": "4098440"
  },
  {
    "text": "actually go and say oh you know like remove the even the latest version of this key right you you only really care",
    "start": "4098440",
    "end": "4104238"
  },
  {
    "text": "about the history so you're trying to clean up the history and there's some I think it's you know that's is how it's",
    "start": "4104239",
    "end": "4110480"
  },
  {
    "text": "implemented but uh something to keep in mind um so here we can see that uh",
    "start": "4110480",
    "end": "4116080"
  },
  {
    "text": "because we can find it every 10 seconds uh our compacted revision sort of",
    "start": "4116080",
    "end": "4123278"
  },
  {
    "text": "follows um uh in step with the",
    "start": "4123279",
    "end": "4130040"
  },
  {
    "text": "current and then we have uh the compaction latency but again this latency is sort of uh not",
    "start": "4130040",
    "end": "4137440"
  },
  {
    "text": "true latency because this is just the GPC and as as I said there is a flag by",
    "start": "4137440",
    "end": "4143640"
  },
  {
    "text": "default this will return right away not waiting for the job to finish so what you actually care about",
    "start": "4143640",
    "end": "4150278"
  },
  {
    "text": "is uh this which is you can see here like 5",
    "start": "4150279",
    "end": "4155480"
  },
  {
    "text": "seconds is kind of a um High um that's",
    "start": "4155480",
    "end": "4160880"
  },
  {
    "text": "because it's loopin um and uh uh compact in the back end in those",
    "start": "4160880",
    "end": "4167880"
  },
  {
    "text": "compact batches um so the good part at least that it's not blocking the you know back",
    "start": "4167880",
    "end": "4174278"
  },
  {
    "text": "end for five seconds so then we have the DB compaction pause so that's the pause",
    "start": "4174279",
    "end": "4179880"
  },
  {
    "text": "within each iteration of the loop um so that's kind of you know more reasonable and then we have the index",
    "start": "4179880",
    "end": "4187359"
  },
  {
    "text": "compaction pause um and then the",
    "start": "4187359",
    "end": "4194560"
  },
  {
    "text": "the DB size so now we should",
    "start": "4194560",
    "end": "4201040"
  },
  {
    "text": "um so the interesting part is that we are writing something right but you can see that our DB size is not",
    "start": "4201040",
    "end": "4207440"
  },
  {
    "text": "increasing um I'm look at at this like uh latest portion of the data this was from the prior run uh why because we can",
    "start": "4207440",
    "end": "4216840"
  },
  {
    "text": "uh compact uh fast enough to free up the space and uh that space will be reused",
    "start": "4216840",
    "end": "4223280"
  },
  {
    "text": "so this is what the um DB total is the total database size and the size and use",
    "start": "4223280",
    "end": "4231400"
  },
  {
    "text": "is actually what's uh uh what is used by information that you know that is",
    "start": "4231400",
    "end": "4236520"
  },
  {
    "text": "valuable so when you compact stuff when when uh revision and keys are",
    "start": "4236520",
    "end": "4241679"
  },
  {
    "text": "deleted uh those uh bball pages will be moved in so-called free list and then",
    "start": "4241679",
    "end": "4247320"
  },
  {
    "text": "the next operation can take that uh um can reuse that space",
    "start": "4247320",
    "end": "4255640"
  },
  {
    "text": "okay so that's the",
    "start": "4256719",
    "end": "4260400"
  },
  {
    "text": "compaction okay there's this optional scenario that might or might not work let me try it out see if I",
    "start": "4262679",
    "end": "4270800"
  },
  {
    "text": "can stop the this for now so um what I'm doing here I'm writing keys with the",
    "start": "4273040",
    "end": "4281000"
  },
  {
    "text": "larger value size like 10 K but I'm also trying to set up a",
    "start": "4281000",
    "end": "4286040"
  },
  {
    "text": "compaction so it kind of keeps up so remember when we in when we did this for each DB size limit we reach the DB size",
    "start": "4286040",
    "end": "4292760"
  },
  {
    "text": "pretty quickly what I'm trying to do here is to uh not you know not reach the DB size but compact um so let's let's",
    "start": "4292760",
    "end": "4300760"
  },
  {
    "text": "let's gra the",
    "start": "4300760",
    "end": "4303480"
  },
  {
    "text": "scenario let's so I'm on the compaction dashboard so and we have a ser seconds",
    "start": "4306840",
    "end": "4314280"
  },
  {
    "text": "interval set in that test so um need to wait a little bit longer",
    "start": "4314280",
    "end": "4321360"
  },
  {
    "text": "let's jump to the revisions I think that that's probably the best way to see",
    "start": "4321360",
    "end": "4328880"
  },
  {
    "text": "the compaction updates",
    "start": "4328880",
    "end": "4333000"
  },
  {
    "text": "things okay so so it compacted this jumped up",
    "start": "4342480",
    "end": "4350960"
  },
  {
    "text": "towards the current so let's let's give it a a moment um let's now look at",
    "start": "4350960",
    "end": "4359400"
  },
  {
    "text": "our let's look at actually how long that compaction",
    "start": "4359400",
    "end": "4365600"
  },
  {
    "text": "took yeah so DB compaction pauses increasing",
    "start": "4369760",
    "end": "4375440"
  },
  {
    "text": "um the index paes um",
    "start": "4378560",
    "end": "4384239"
  },
  {
    "text": "also up see how we're doing with a",
    "start": "4385679",
    "end": "4391199"
  },
  {
    "text": "space so with the space so we kind of okayish so we're not reaching that 2 GB",
    "start": "4391199",
    "end": "4397040"
  },
  {
    "text": "that's what I trying to do with the scenario try to uh make it run for longer and be able to Compact and keep",
    "start": "4397040",
    "end": "4405719"
  },
  {
    "text": "up and at some point we should start seeing errors so now we we're still",
    "start": "4407920",
    "end": "4414679"
  },
  {
    "text": "doing puts with this Benchmark so let's look at our put performance make sure that this is still",
    "start": "4414679",
    "end": "4421400"
  },
  {
    "text": "good okay this is still running",
    "start": "4421400",
    "end": "4429400"
  },
  {
    "text": "oops",
    "start": "4432360",
    "end": "4435360"
  },
  {
    "text": "so we're still doing okay here but let's give it just couple",
    "start": "4453920",
    "end": "4459040"
  },
  {
    "text": "more minutes time have 15 minutes",
    "start": "4459040",
    "end": "4465280"
  },
  {
    "text": "okay I was still keeping up yeah I said DB compaction pauses",
    "start": "4474920",
    "end": "4481440"
  },
  {
    "text": "raises to like one second cuz we compacting all those uh",
    "start": "4481440",
    "end": "4488239"
  },
  {
    "text": "large uh key values",
    "start": "4488239",
    "end": "4494199"
  },
  {
    "text": "and then the full compaction takes like a really long time so I'm hoping",
    "start": "4494199",
    "end": "4502080"
  },
  {
    "text": "that this is going to cause issues with our puts",
    "start": "4502080",
    "end": "4509280"
  },
  {
    "text": "finally well we still can keep up um again as as I said this scenario",
    "start": "4518960",
    "end": "4525679"
  },
  {
    "text": "is optional um it's kind of hard to trigger that error",
    "start": "4525679",
    "end": "4531320"
  },
  {
    "text": "reliably this",
    "start": "4531320",
    "end": "4534638"
  },
  {
    "text": "was",
    "start": "4552199",
    "end": "4555199"
  },
  {
    "text": "okay let's move on as I said this is optional um let's now jump into uh",
    "start": "4567760",
    "end": "4574880"
  },
  {
    "text": "defragmentation so when we uh compacting um our back end we have that difference",
    "start": "4574880",
    "end": "4581400"
  },
  {
    "text": "between the uh Total Space that database takes and the uh space in use uh so",
    "start": "4581400",
    "end": "4589639"
  },
  {
    "text": "sometimes you want to reduce your total space and uh for that uh you you want to",
    "start": "4589639",
    "end": "4595840"
  },
  {
    "text": "run def fragmentation I'm going like link you to the docs um and let's try it out on the",
    "start": "4595840",
    "end": "4606080"
  },
  {
    "text": "cluster okay I think we start getting some errors there but anyway I'm going to move on don't have much",
    "start": "4610000",
    "end": "4616960"
  },
  {
    "text": "time okay so I'm",
    "start": "4625840",
    "end": "4630520"
  },
  {
    "text": "GNA write some data with the quick put",
    "start": "4632040",
    "end": "4637239"
  },
  {
    "text": "benchmark",
    "start": "4642000",
    "end": "4645000"
  },
  {
    "text": "and then I'm going to run this uh puts with",
    "start": "4647080",
    "end": "4652599"
  },
  {
    "text": "compaction okay let's check out",
    "start": "4655520",
    "end": "4659360"
  },
  {
    "text": "our puts dashboard let's look at the DB size right",
    "start": "4660600",
    "end": "4666280"
  },
  {
    "text": "away where is it right here okay",
    "start": "4667800",
    "end": "4675000"
  },
  {
    "text": "so wait a little",
    "start": "4679440",
    "end": "4682600"
  },
  {
    "text": "bit okay so our um DB size is um because we did that",
    "start": "4691080",
    "end": "4698080"
  },
  {
    "text": "initial puts we got some data in so now and we doing just uh um smaller puts but",
    "start": "4698080",
    "end": "4704080"
  },
  {
    "text": "with compaction and we can see that our uh DB",
    "start": "4704080",
    "end": "4709920"
  },
  {
    "text": "size in use for example is a little bit less than the total DB size uh so this",
    "start": "4709920",
    "end": "4716239"
  },
  {
    "text": "is where the compaction will be helpful when we defragmentation will be helpful when we do defrag then the total DB size",
    "start": "4716239",
    "end": "4723199"
  },
  {
    "text": "will will get reduced to what is actually in use",
    "start": "4723199",
    "end": "4728560"
  },
  {
    "text": "um and uh let's run the",
    "start": "4728560",
    "end": "4734000"
  },
  {
    "text": "[Music]",
    "start": "4734000",
    "end": "4737039"
  },
  {
    "text": "defrag okay and then I also have a dashboard for D",
    "start": "4750880",
    "end": "4756840"
  },
  {
    "text": "frag so we can see so we ran the defrag on",
    "start": "4761840",
    "end": "4767639"
  },
  {
    "text": "the um sd3 here by the way defrag",
    "start": "4767639",
    "end": "4774520"
  },
  {
    "text": "uh is not like competion in a sense that it's only done per member so there's no",
    "start": "4775560",
    "end": "4782360"
  },
  {
    "text": "uh writing that to the logs and then replicating everywhere and next I'll explain why so",
    "start": "4782360",
    "end": "4787880"
  },
  {
    "text": "we can see that our uh total DB size uh",
    "start": "4787880",
    "end": "4793679"
  },
  {
    "text": "got uh um like dropped here to the DB si",
    "start": "4793679",
    "end": "4799480"
  },
  {
    "text": "in use so that was the result of defragmenting this member um so what",
    "start": "4799480",
    "end": "4804840"
  },
  {
    "text": "defragmentation does it will uh read all the keys and reinsert back uh to the to",
    "start": "4804840",
    "end": "4811560"
  },
  {
    "text": "the new back end um it's a pretty heavy operation and while it's doing that it's going to block um uh all the backand uh",
    "start": "4811560",
    "end": "4821760"
  },
  {
    "text": "rights so if your",
    "start": "4821760",
    "end": "4827800"
  },
  {
    "text": "defrag uh will take takes long time uh then you're going to experience some",
    "start": "4827800",
    "end": "4834760"
  },
  {
    "text": "failures uh in terms of the request incoming requests and this is what the next scenario is about but we only have",
    "start": "4834760",
    "end": "4841000"
  },
  {
    "text": "10 minutes so I want to make sure I have some I'll leave some time for questions um anybody has any",
    "start": "4841000",
    "end": "4849440"
  },
  {
    "text": "questions yeah",
    "start": "4849440",
    "end": "4854719"
  },
  {
    "text": "yeah so it it it literally goes to think and just blocks yeah like takes a lock on the whole back end and uh it blocks",
    "start": "4855880",
    "end": "4863920"
  },
  {
    "text": "right on that member right so it's like the applied portion of the um flow right",
    "start": "4863920",
    "end": "4869199"
  },
  {
    "text": "so the right is still will be written to the wall log so it will be committed so",
    "start": "4869199",
    "end": "4874800"
  },
  {
    "text": "the raft itself still works the fsync to wall still works but the back end is",
    "start": "4874800",
    "end": "4882840"
  },
  {
    "text": "blocked so then what happens is if if your defrag for example runs for some number of time you get a difference",
    "start": "4882840",
    "end": "4889760"
  },
  {
    "text": "between committed and implied um I have that metric there and then after some",
    "start": "4889760",
    "end": "4895360"
  },
  {
    "text": "threshold ET just like okay no more uh and the starts responding I think I",
    "start": "4895360",
    "end": "4901040"
  },
  {
    "text": "believe was like too many requests yeah um so yeah so to answer a question it",
    "start": "4901040",
    "end": "4906520"
  },
  {
    "text": "does block the Hol in when is",
    "start": "4906520",
    "end": "4911639"
  },
  {
    "text": "running is there a problem for cents to requests",
    "start": "4911639",
    "end": "4916960"
  },
  {
    "text": "do that yeah yeah so actually there there was a change recently like ideally",
    "start": "4916960",
    "end": "4922600"
  },
  {
    "text": "right what what you would want is when we have a defrag that note should be not serving traffic and uh ETD client has",
    "start": "4922600",
    "end": "4930360"
  },
  {
    "text": "internal load balancer but it doesn't know about the fact that that node is running the defrag so it's still sends",
    "start": "4930360",
    "end": "4937199"
  },
  {
    "text": "uh uh you know traffic until let's say it U if if the request starts failing",
    "start": "4937199",
    "end": "4942920"
  },
  {
    "text": "then yeah the load balancer will you know uh distribute load to uh to other",
    "start": "4942920",
    "end": "4949000"
  },
  {
    "text": "members but there are the situations and then there's a change recently that uses now um grpc Health um implementation to",
    "start": "4949000",
    "end": "4958520"
  },
  {
    "text": "actually notify client uh from the member to take",
    "start": "4958520",
    "end": "4963800"
  },
  {
    "text": "out the uh member from the uh from servant traffic for the period of defrag",
    "start": "4963800",
    "end": "4970199"
  },
  {
    "text": "that's much like two weeks ago so there not probably in",
    "start": "4970199",
    "end": "4975320"
  },
  {
    "text": "the yeah so it it you can end up uh failing if your defrag takes a long",
    "start": "4977840",
    "end": "4984840"
  },
  {
    "text": "time um and I think that's the last scenario that I had there was the adding",
    "start": "4985760",
    "end": "4990920"
  },
  {
    "text": "delay uh that tries to mimic that problem because what I did there I just added a delay to a uh defrag using the",
    "start": "4990920",
    "end": "4999360"
  },
  {
    "text": "Go fail and then um while running put um that should trigger some errors to",
    "start": "4999360",
    "end": "5005679"
  },
  {
    "text": "demonstrate that um any other",
    "start": "5005679",
    "end": "5010880"
  },
  {
    "text": "questions",
    "start": "5010880",
    "end": "5013880"
  },
  {
    "text": "yeah sorry can you use the M does the compaction cause any",
    "start": "5016560",
    "end": "5024600"
  },
  {
    "text": "performance issues well I guess a lot of question that all depends on like uh you know uh",
    "start": "5024600",
    "end": "5032679"
  },
  {
    "text": "how much you compact in and uh uh so on so you do want to watch for those metrics so one of the scenarios optional",
    "start": "5032679",
    "end": "5039880"
  },
  {
    "text": "one right I was trying to trigger an issue by running a compaction and uh uh",
    "start": "5039880",
    "end": "5044920"
  },
  {
    "text": "when the compaction was taken uh you know long time and the pauses were kind",
    "start": "5044920",
    "end": "5050840"
  },
  {
    "text": "of climbing up so uh yeah it it let's say it can cause an issue but usually it",
    "start": "5050840",
    "end": "5056400"
  },
  {
    "text": "won't it won't in the normal operations like if you compac in every 5 minutes uh",
    "start": "5056400",
    "end": "5061920"
  },
  {
    "text": "you should be um good but the point of the demo I think you should be watching",
    "start": "5061920",
    "end": "5067679"
  },
  {
    "text": "those metrics just to be aware of what's going on in the system uh so that's",
    "start": "5067679",
    "end": "5074000"
  },
  {
    "text": "that's uh in kubernetes I I think the that five minutes compaction I think",
    "start": "5074000",
    "end": "5080639"
  },
  {
    "text": "works uh pretty well in my experience um yeah I mean I've seen",
    "start": "5080639",
    "end": "5087560"
  },
  {
    "text": "people not compacting but you know don't like for not kubernetes uh uh use cases",
    "start": "5087560",
    "end": "5095199"
  },
  {
    "text": "but thank",
    "start": "5095199",
    "end": "5098360"
  },
  {
    "text": "you sorry I take that back not defragging uh you you always want to compact because you're going to run out",
    "start": "5101239",
    "end": "5107280"
  },
  {
    "text": "of the out of the space pretty quickly uh",
    "start": "5107280",
    "end": "5115760"
  },
  {
    "text": "yeah um you really have to I'm not like expert on the kubernetes storage layer",
    "start": "5121280",
    "end": "5128000"
  },
  {
    "text": "uh but uh um so I don't have a good answer for you uh I know that uh well I",
    "start": "5128000",
    "end": "5135239"
  },
  {
    "text": "don't have an answer on top of my head I know there's like a storage layer in kubernetes that uh abstracts away ATD",
    "start": "5135239",
    "end": "5141239"
  },
  {
    "text": "and uh you know it has its interface um and that's uh that's how it",
    "start": "5141239",
    "end": "5147480"
  },
  {
    "text": "operates uh it uses notion of revisions so uh the visions that LD",
    "start": "5147480",
    "end": "5154080"
  },
  {
    "text": "exposes uh I think they're important for kubernetes to keep in track of sense for",
    "start": "5154080",
    "end": "5159360"
  },
  {
    "text": "example for compaction I know that uh kubernetes keep track of the L compacted",
    "start": "5159360",
    "end": "5164880"
  },
  {
    "text": "revision or something like that and uh then makes the calculations Bas of",
    "start": "5164880",
    "end": "5171080"
  },
  {
    "text": "that any other questions again we didn't uh I I hope I hope this was useful I",
    "start": "5172280",
    "end": "5177560"
  },
  {
    "text": "think the purpose was to really uh show like some failure scenario",
    "start": "5177560",
    "end": "5182840"
  },
  {
    "text": "and again I know this is not production it's it's um everybody has their own hardware and uh slos and so on and the",
    "start": "5182840",
    "end": "5190280"
  },
  {
    "text": "sizes uh but maybe this kind of gives a starting point uh like describes areas",
    "start": "5190280",
    "end": "5196159"
  },
  {
    "text": "you can look look uh at and maybe put some uh some of this metrics on your",
    "start": "5196159",
    "end": "5203000"
  },
  {
    "text": "dashboards um uh another area is watches that wouldn't really touch at all and",
    "start": "5203000",
    "end": "5209119"
  },
  {
    "text": "kubernetes uses uh uh uses that um and we didn't touch",
    "start": "5209119",
    "end": "5214239"
  },
  {
    "text": "leases um but yeah I hope this was useful if if something doesn't work you",
    "start": "5214239",
    "end": "5220560"
  },
  {
    "text": "file an issue against the um repository um and if also there will be",
    "start": "5220560",
    "end": "5229159"
  },
  {
    "text": "another talk tomorrow from one of the SC maintainers who will uh uh dive in into",
    "start": "5229159",
    "end": "5237280"
  },
  {
    "text": "um um some interesting challenges operating ATD so I recommend going",
    "start": "5237280",
    "end": "5243199"
  },
  {
    "text": "checking checking that out um let's see what else so in terms of the metrics uh",
    "start": "5243199",
    "end": "5248639"
  },
  {
    "text": "you know if if you find some metrics are not useful or can be improved or added",
    "start": "5248639",
    "end": "5253800"
  },
  {
    "text": "it'll be you just file an issue against SD uh or you're welcome to contribute as",
    "start": "5253800",
    "end": "5259600"
  },
  {
    "text": "well I think it's relatively easy to add a metric to ATD um",
    "start": "5259600",
    "end": "5267158"
  },
  {
    "text": "yeah oh yeah sorry can so they are in the GitHub they are",
    "start": "5267840",
    "end": "5274639"
  },
  {
    "text": "they done using the the mermaid tool so it's just a link so I think they should",
    "start": "5274639",
    "end": "5280760"
  },
  {
    "text": "be there if you just click the link it should open the merid oh which flowcharts my or from the",
    "start": "5280760",
    "end": "5288440"
  },
  {
    "text": "in beginning of the yeah so those should be in the in",
    "start": "5288440",
    "end": "5296400"
  },
  {
    "text": "there in it's part of the readme it's just a link to uh",
    "start": "5296400",
    "end": "5303119"
  },
  {
    "text": "made look for sequence diagrams I think that's how",
    "start": "5303119",
    "end": "5308440"
  },
  {
    "text": "I and for the flow charts I did try to simplify certain components like",
    "start": "5308440",
    "end": "5314159"
  },
  {
    "text": "collapse for instance so if you actually go and go and explore the code base uh which I really recommend doing uh you",
    "start": "5314159",
    "end": "5322400"
  },
  {
    "text": "know it might be even more complicated than on the flowchart um but I just couldn't uh U reasonably fit it into",
    "start": "5322400",
    "end": "5330719"
  },
  {
    "text": "into the chart",
    "start": "5330719",
    "end": "5334000"
  },
  {
    "text": "I so that's that's that's right there in the read",
    "start": "5345280",
    "end": "5350119"
  },
  {
    "text": "me but if you open it should give you the",
    "start": "5355159",
    "end": "5360920"
  },
  {
    "text": "um hold",
    "start": "5360920",
    "end": "5365960"
  },
  {
    "text": "on",
    "start": "5365960",
    "end": "5368960"
  },
  {
    "text": "okay oh okay yeah I got it I saw that",
    "start": "5372760",
    "end": "5379039"
  },
  {
    "text": "uh right right here on this side do does",
    "start": "5381920",
    "end": "5387360"
  },
  {
    "text": "so oh okay yeah sounds good yeah for sure",
    "start": "5387639",
    "end": "5393920"
  },
  {
    "text": "typo yeah",
    "start": "5398400",
    "end": "5401400"
  },
  {
    "text": "probably um okay thank you folks and we also um",
    "start": "5403639",
    "end": "5411080"
  },
  {
    "text": "just at the last slide there's feedback just in case if you want to give there's a QR code with the link um just in case",
    "start": "5411080",
    "end": "5416280"
  },
  {
    "text": "you have any feedback please feel free to do that thank you",
    "start": "5416280",
    "end": "5423840"
  }
]