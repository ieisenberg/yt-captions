[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "hi folks welcome to my presentation room in this cookie car um by the way it's been two years since",
    "start": "80",
    "end": "5359"
  },
  {
    "text": "the kobe situation and all the credit card events are still virtual this year again",
    "start": "5359",
    "end": "11200"
  },
  {
    "text": "so hopefully um just everything will be over really soon and i do hope everyone to be safe and well wherever you are",
    "start": "11200",
    "end": "17039"
  },
  {
    "text": "living in or working in okay let's get on to our business today and",
    "start": "17039",
    "end": "22560"
  },
  {
    "text": "the topic of my presentation is api server builder extending kubernetes pair and aggregated api server",
    "start": "22560",
    "end": "29199"
  },
  {
    "text": "um my whole presentation is going to start with a very detailed introduction about the technique of api server",
    "start": "29199",
    "end": "35840"
  },
  {
    "text": "aggregation per se um and in the next one i'm going to expand the",
    "start": "35840",
    "end": "41200"
  },
  {
    "text": "details about the subprojects named api server builder and also it's a successor",
    "start": "41200",
    "end": "46559"
  },
  {
    "text": "news a project named api server runtimes and in the end they've also been qa sections",
    "start": "46559",
    "end": "52879"
  },
  {
    "text": "in which i will be addressing all the questions from you um if there's any and the time is",
    "start": "52879",
    "end": "58239"
  },
  {
    "text": "limited so we can probably extend our q a sections to the slack channels over there you can",
    "start": "58239",
    "end": "64720"
  },
  {
    "text": "just dm me or whatever you want and [Music] okay",
    "start": "64720",
    "end": "70320"
  },
  {
    "start": "70000",
    "end": "70000"
  },
  {
    "text": "i'm gonna start with a brief introduction about myself uh my name is mein jin and i'm a",
    "start": "70320",
    "end": "75600"
  },
  {
    "text": "software engineer working at alibaba clouds and and i'm also a kubernetes",
    "start": "75600",
    "end": "81040"
  },
  {
    "text": "machinery working in siege api machinery i'm the project owner of multiple",
    "start": "81040",
    "end": "86159"
  },
  {
    "text": "kubernetes subjects and i'm also the speaker of kubica um 2019 europe 2019 2019 north america",
    "start": "86159",
    "end": "94400"
  },
  {
    "text": "2020 north america and besides kubernetes i'm also actively running the project of open class manager",
    "start": "94400",
    "end": "101280"
  },
  {
    "text": "i also maintained the um the api server with aggregation related",
    "start": "101280",
    "end": "106560"
  },
  {
    "text": "libraries for most warriors and you can contact me via my mailbox or in",
    "start": "106560",
    "end": "113280"
  },
  {
    "text": "or just mention me in the kitchen or dm in the channels or discord",
    "start": "113280",
    "end": "120320"
  },
  {
    "start": "120000",
    "end": "120000"
  },
  {
    "text": "[Music] so i outlined my presentations into basically five parts",
    "start": "120320",
    "end": "126799"
  },
  {
    "text": "um the first is the background around the api server application in which i will um sharing the",
    "start": "126799",
    "end": "134080"
  },
  {
    "text": "basic fundamental knowledge of the technique and then we will sort of the history of",
    "start": "134080",
    "end": "140080"
  },
  {
    "text": "ipr silver aggregation projects on the evolution of api server then code builder and controller runtimes",
    "start": "140080",
    "end": "147440"
  },
  {
    "text": "and in the third part i will um announce the new project of api server runtime",
    "start": "147440",
    "end": "153440"
  },
  {
    "text": "which is incubated by the um from from the api server builders um similar to",
    "start": "153440",
    "end": "158959"
  },
  {
    "text": "the similar 2d um relationship between the cookie builder and controller runtime",
    "start": "158959",
    "end": "164480"
  },
  {
    "text": "and in the first concept i have a demo of how api server runtime works and",
    "start": "164480",
    "end": "171120"
  },
  {
    "text": "there are also a few projects i will i will show you um in the end um i will",
    "start": "171120",
    "end": "178480"
  },
  {
    "text": "i will share with you the future roadmaps of these projects [Music]",
    "start": "178480",
    "end": "186000"
  },
  {
    "start": "184000",
    "end": "184000"
  },
  {
    "text": "okay let's move on to the second part of to start the first part of my presentation um it's the background",
    "start": "186000",
    "end": "192959"
  },
  {
    "text": "about api server obligation over the years of community support i found many",
    "start": "192959",
    "end": "198640"
  },
  {
    "text": "developers are stuck in a builder complaining that a technique is too complicated to understand",
    "start": "198640",
    "end": "205519"
  },
  {
    "text": "and most of them are starting at the um for example the installation of api server applications or the um the",
    "start": "205519",
    "end": "212879"
  },
  {
    "text": "management the management of certification and or something like that so today um",
    "start": "212879",
    "end": "218959"
  },
  {
    "text": "in this part i will be elaborating the details about how the um api server picture works and",
    "start": "218959",
    "end": "225440"
  },
  {
    "text": "um to share share the detail the fundamental knowledge with you guys",
    "start": "225440",
    "end": "231120"
  },
  {
    "start": "231000",
    "end": "231000"
  },
  {
    "text": "so um the aaa a is actually the um um the acronym",
    "start": "231200",
    "end": "236879"
  },
  {
    "text": "of api server application and um it's a it's an api um that's beta in 1.6 and graduated into",
    "start": "236879",
    "end": "245680"
  },
  {
    "text": "ga since 1.10 and from the from the perspective of a user the um aa works by which is bring",
    "start": "245680",
    "end": "253840"
  },
  {
    "text": "one resource named api service into the kubernetes cluster and in the spec of api service you can",
    "start": "253840",
    "end": "261120"
  },
  {
    "text": "specify the endpoints of the a server instances or you can just",
    "start": "261120",
    "end": "266560"
  },
  {
    "text": "passing and reference of the service then the kubernetes cluster will automatically resolve the endpoints for",
    "start": "266560",
    "end": "271840"
  },
  {
    "text": "you um as for how to build an a server there are basically three physical",
    "start": "271840",
    "end": "278800"
  },
  {
    "text": "approaches the first one is just um copy and pasting from another official",
    "start": "278800",
    "end": "284000"
  },
  {
    "text": "project named sample api server and but the project is actually hard coded so",
    "start": "284000",
    "end": "290160"
  },
  {
    "text": "you will have to edit the for example the resource name of the um the",
    "start": "290160",
    "end": "296560"
  },
  {
    "text": "servers and the second approach is um extending the api servers where the",
    "start": "296560",
    "end": "303840"
  },
  {
    "text": "scaffoldings provided by the api server builder which will be on similar to the user",
    "start": "303840",
    "end": "310000"
  },
  {
    "text": "user experience of how cookie builder works and um",
    "start": "310000",
    "end": "315120"
  },
  {
    "text": "the the third phase by the way will be just um importing the the libraries of",
    "start": "315120",
    "end": "320720"
  },
  {
    "text": "api server runtime which i will elaborate later um you can just um",
    "start": "320720",
    "end": "326160"
  },
  {
    "text": "initialize a brand new column project and just um add the api server runtimes",
    "start": "326160",
    "end": "331440"
  },
  {
    "text": "into the dependencies and um the magic will happens",
    "start": "331440",
    "end": "339000"
  },
  {
    "text": "as far as for the insights of a api server applications we're gonna expand",
    "start": "339199",
    "end": "344720"
  },
  {
    "text": "the um the internal technique from four aspects of the authentication and",
    "start": "344720",
    "end": "351120"
  },
  {
    "text": "authorization emission controls and class panelists the api priority",
    "start": "351120",
    "end": "356400"
  },
  {
    "text": "firmness by by leveraging the technique of aaa you can",
    "start": "356400",
    "end": "362479"
  },
  {
    "text": "basically do any kinds of customization customizations if you want um for example you can even replace the",
    "start": "362479",
    "end": "368880"
  },
  {
    "text": "persistent layer for an api server um the uh normally",
    "start": "368880",
    "end": "373919"
  },
  {
    "text": "the storage layer of an api server is supposed to be etc but you can um you by",
    "start": "373919",
    "end": "380560"
  },
  {
    "text": "by leveraging a you can just replace it with any kinds of other storages you want",
    "start": "380560",
    "end": "386560"
  },
  {
    "text": "and this picture shows how na works um in the architecture so",
    "start": "386560",
    "end": "392560"
  },
  {
    "text": "um and a server is a standalone api server outside of google api server and",
    "start": "392560",
    "end": "399039"
  },
  {
    "text": "by the spec of api service you can um make the traffic",
    "start": "399039",
    "end": "404400"
  },
  {
    "text": "going through the qbf server successfully proceeded to to the um to",
    "start": "404400",
    "end": "409520"
  },
  {
    "text": "the downstream of a servers and you can even develop your custom controllers working based on the um au",
    "start": "409520",
    "end": "417280"
  },
  {
    "text": "servers the the custom controllers are supposed to connect a servers",
    "start": "417280",
    "end": "422639"
  },
  {
    "text": "while the proxy of 2d ips server instead of requesting direct speed however",
    "start": "422639",
    "end": "428800"
  },
  {
    "text": "direct requesting will also be working which i will also be explaining later",
    "start": "428800",
    "end": "434960"
  },
  {
    "text": "so before we dive into the authentication of apis of application we have to um understand how the trs the",
    "start": "434960",
    "end": "442000"
  },
  {
    "start": "435000",
    "end": "435000"
  },
  {
    "text": "general technique of tis works basically there are two kinds of drs in in",
    "start": "442000",
    "end": "448080"
  },
  {
    "text": "in the world um the first is manila toss or we can call it the simple tis which",
    "start": "448080",
    "end": "454479"
  },
  {
    "text": "is um widely used in the um in the um hdbs servers um in the vanilla tos the",
    "start": "454479",
    "end": "461599"
  },
  {
    "text": "only verification what happens is that um when the client is um trying to",
    "start": "461599",
    "end": "469039"
  },
  {
    "text": "request downloading contents from the server then the server will be returning its server certificates to back to the",
    "start": "469039",
    "end": "475520"
  },
  {
    "text": "clients then the clients we can can can check can check designer ca the authority of",
    "start": "475520",
    "end": "482560"
  },
  {
    "text": "the server certificate and check whether the ca is seen in the client's trusted",
    "start": "482560",
    "end": "487680"
  },
  {
    "text": "list and and also the clients can will find the server certificates san",
    "start": "487680",
    "end": "494160"
  },
  {
    "text": "which is um the sand stands for um subject alternative names which is a list of",
    "start": "494160",
    "end": "500960"
  },
  {
    "text": "domain names or ip addresses so so the the essay basically restricts the",
    "start": "500960",
    "end": "508000"
  },
  {
    "text": "usage of of server certificates and as for the um mutual trs",
    "start": "508000",
    "end": "514240"
  },
  {
    "text": "in addition to vanilla tls of the mutual trs as another round of",
    "start": "514240",
    "end": "520800"
  },
  {
    "text": "verifications which is um the server will also verify the um the",
    "start": "520800",
    "end": "526800"
  },
  {
    "text": "client certificates from from the clients um so so there's a there's a trusted um",
    "start": "526800",
    "end": "532959"
  },
  {
    "text": "authorities in memory inside of servers the servers is supposed to reject any",
    "start": "532959",
    "end": "540240"
  },
  {
    "text": "any requests that doesn't doesn't contain doesn't have the client certificate signed by that ca so",
    "start": "540240",
    "end": "547600"
  },
  {
    "text": "this is basically how the mutual tis works um in the indian there's also an a",
    "start": "547600",
    "end": "553200"
  },
  {
    "text": "optional step of verifying the concepts in but actually in the",
    "start": "553200",
    "end": "558880"
  },
  {
    "text": "kubernetes native libraries is skipped by defaults",
    "start": "558880",
    "end": "564430"
  },
  {
    "text": "[Music] okay after after knowing how tis works let's take a look at how authentication works",
    "start": "564430",
    "end": "571839"
  },
  {
    "start": "565000",
    "end": "565000"
  },
  {
    "text": "this picture is um the typical case when a client is trying to request a a server",
    "start": "571839",
    "end": "577760"
  },
  {
    "text": "the proxy of kubi api server so um the normal authentication happens between that between the kubic console",
    "start": "577760",
    "end": "584240"
  },
  {
    "text": "and the could be api server the um the qb api server will will check whether the client",
    "start": "584240",
    "end": "591200"
  },
  {
    "text": "certificate is signed by um a ca authorities which is specified by a flag",
    "start": "591200",
    "end": "597680"
  },
  {
    "text": "named the desktop client ca file and um however",
    "start": "597680",
    "end": "602720"
  },
  {
    "text": "this is rather simple but however let's take a look at the um authentications the mutual gos happens",
    "start": "602720",
    "end": "610000"
  },
  {
    "text": "between the kubiak server and the aggregated api server the a server um [Music]",
    "start": "610000",
    "end": "616160"
  },
  {
    "text": "is actually it's um sorry it could be a data server it's actually is is the client when by processing the request to",
    "start": "616160",
    "end": "623279"
  },
  {
    "text": "the a servers so um the client verification happens when um the a",
    "start": "623279",
    "end": "629120"
  },
  {
    "text": "server returning the server certificate back to the kubi api server so the decoupage server will check",
    "start": "629120",
    "end": "636079"
  },
  {
    "text": "whether the server certificates of a server is signed by the",
    "start": "636079",
    "end": "642399"
  },
  {
    "text": "dca bundles specified in this api service and",
    "start": "642399",
    "end": "647839"
  },
  {
    "text": "the a server will also perform another round of server verifications by um",
    "start": "647839",
    "end": "653040"
  },
  {
    "text": "checking whether the client certificates from the queue api servers are checking the client certificates um is",
    "start": "653040",
    "end": "661120"
  },
  {
    "text": "defined by the ca authorities specified by the um dash dash to crash charter um",
    "start": "661120",
    "end": "667200"
  },
  {
    "text": "ca client file the flag and optionally if the a servers are",
    "start": "667200",
    "end": "672800"
  },
  {
    "text": "deployed inside of kubernetes clusters you can also looking for a config maps",
    "start": "672800",
    "end": "678079"
  },
  {
    "text": "under the namespace of kuby system and then the extension api server authentications",
    "start": "678079",
    "end": "683920"
  },
  {
    "text": "um there's a key named requested cva file then the content will be on the",
    "start": "683920",
    "end": "690320"
  },
  {
    "text": "expected signer of client certificates and",
    "start": "690320",
    "end": "696160"
  },
  {
    "text": "this is the um this is the indirect approach when a client is accessing any",
    "start": "696160",
    "end": "701519"
  },
  {
    "text": "servers where the crosshair communicator server however client can also access a",
    "start": "701519",
    "end": "706800"
  },
  {
    "text": "a server directly without the result proxy by the qb server or in this case",
    "start": "706800",
    "end": "712480"
  },
  {
    "text": "um [Music] the case can be different when the clients if a client says um requesting",
    "start": "712480",
    "end": "718399"
  },
  {
    "text": "using a signed certificate then there could be aps then the aggregated api server will just checking",
    "start": "718399",
    "end": "724880"
  },
  {
    "text": "whether the um the decline certificates by um by",
    "start": "724880",
    "end": "731800"
  },
  {
    "text": "authorities passed from the flags dash dash client cm file which is um identical to the flags of kubi api",
    "start": "732639",
    "end": "739920"
  },
  {
    "text": "server and the acer will be also be looking for [Music] the the config map under the cookie",
    "start": "739920",
    "end": "746000"
  },
  {
    "text": "system the same config map but the key is client-ca dashboard [Music]",
    "start": "746000",
    "end": "752079"
  },
  {
    "text": "which which is happening inside of when is deployed inside of kubernetes classes",
    "start": "752079",
    "end": "758560"
  },
  {
    "text": "and um repeating repeatedly again the the servers will just um",
    "start": "758560",
    "end": "764079"
  },
  {
    "text": "um we'll just verify whether the client certificate is signed by this ca",
    "start": "764079",
    "end": "770079"
  },
  {
    "text": "and however if the client is um um the credential if the credential is",
    "start": "770079",
    "end": "775839"
  },
  {
    "text": "some service account tokens the aa servers will do not understand how to verify the",
    "start": "775839",
    "end": "782560"
  },
  {
    "text": "essay tokens often some reasons so instead of verification in memory you",
    "start": "782560",
    "end": "788000"
  },
  {
    "text": "just navigate the um verification of service service contacts back to the qbfa servers where an api names token",
    "start": "788000",
    "end": "795600"
  },
  {
    "text": "review and um after after um getting the response from google server um the acer will know",
    "start": "795600",
    "end": "802800"
  },
  {
    "text": "whether the tokens are validated or not so this is how the authentication works",
    "start": "802800",
    "end": "808079"
  },
  {
    "text": "between kubi api server and na server which is a bit complex then then they",
    "start": "808079",
    "end": "813519"
  },
  {
    "text": "are density of simple cookie cutter on could be api server authentication",
    "start": "813519",
    "end": "820639"
  },
  {
    "start": "819000",
    "end": "819000"
  },
  {
    "text": "then after the authentication the the left ddd directly the next thing will happen",
    "start": "820639",
    "end": "827279"
  },
  {
    "text": "is the of the authorization the authorization works inside a server is",
    "start": "827279",
    "end": "832320"
  },
  {
    "text": "um pretty easy um first of all for clarification there could be api server",
    "start": "832320",
    "end": "838560"
  },
  {
    "text": "we're just forwarding all the requests to any servers without performing any kinds of",
    "start": "838560",
    "end": "844000"
  },
  {
    "text": "authorization check so all the authorization checks are happening inside of a servers but",
    "start": "844000",
    "end": "850000"
  },
  {
    "text": "um dda server doesn't contain any logic of authorization so again the a servers will be delegating",
    "start": "850000",
    "end": "857040"
  },
  {
    "text": "the authorization back to include the api server um they are in dedicated api",
    "start": "857040",
    "end": "862320"
  },
  {
    "text": "named subject access review and the results of um authorization check",
    "start": "862320",
    "end": "868880"
  },
  {
    "text": "will be cached inside of a servers and and also we can also um wipe off the",
    "start": "868880",
    "end": "875279"
  },
  {
    "text": "authorizations in the a servers but this is strongly not recommended because this will be",
    "start": "875279",
    "end": "881279"
  },
  {
    "text": "leaving the um leaving dvda servers unprotected can be attacked by hackers",
    "start": "881279",
    "end": "889040"
  },
  {
    "text": "and similar to authorizations the emission controls inside of aa also happens by",
    "start": "889040",
    "end": "895760"
  },
  {
    "start": "890000",
    "end": "890000"
  },
  {
    "text": "delegating the emission control request to the back to the qbap server the could be a pair",
    "start": "895760",
    "end": "901760"
  },
  {
    "text": "server do not performs any any kind of mission controls upon receiving requests",
    "start": "901760",
    "end": "907839"
  },
  {
    "text": "instead they just proxy redirect the request to aas and [Music]",
    "start": "907839",
    "end": "913680"
  },
  {
    "text": "and after that the a servers can either execute the built-in emission",
    "start": "913680",
    "end": "918800"
  },
  {
    "text": "controllers such as namespace controllers or resource coders",
    "start": "918800",
    "end": "924079"
  },
  {
    "text": "books or the a servers can just um delegate the emission controls back back to",
    "start": "924079",
    "end": "930320"
  },
  {
    "text": "kubernetes server via in similar api name mission review",
    "start": "930320",
    "end": "936000"
  },
  {
    "text": "and we can also wipe off the emission controllers inside of aaa but",
    "start": "936000",
    "end": "941279"
  },
  {
    "text": "this is still not recommended but disabling the authorization",
    "start": "941279",
    "end": "946959"
  },
  {
    "text": "animation controllers can can sometimes can be useful helpful when you are debugging in",
    "start": "946959",
    "end": "952639"
  },
  {
    "text": "your local environment because sometimes you just don't don't need that um",
    "start": "952639",
    "end": "958000"
  },
  {
    "text": "secure the check um you just when you just want to verify the logic of your api servers",
    "start": "958000",
    "end": "967279"
  },
  {
    "start": "967000",
    "end": "967000"
  },
  {
    "text": "and this is how everything works in a piece on the host build the event um",
    "start": "967680",
    "end": "974320"
  },
  {
    "text": "the when it could be cut out sends a request to create api server this is how authentication works",
    "start": "974320",
    "end": "981519"
  },
  {
    "text": "it just works in the flow um the visual tis between clients and qb of data",
    "start": "981519",
    "end": "986560"
  },
  {
    "text": "server then the mutual tiers between the could be ipa server and the a servers",
    "start": "986560",
    "end": "992000"
  },
  {
    "text": "and then upon authorization the a servers will be delegating the authorizations back to",
    "start": "992000",
    "end": "999040"
  },
  {
    "text": "kubiak server and returning the responses then um",
    "start": "999040",
    "end": "1004079"
  },
  {
    "text": "in terms of mission control um aggregated api server delegates again",
    "start": "1004079",
    "end": "1009440"
  },
  {
    "text": "then the responses are returned and finally the a servers will be returning the actual result back to the",
    "start": "1009440",
    "end": "1015680"
  },
  {
    "text": "clients and there's also a advanced feature named",
    "start": "1015680",
    "end": "1022800"
  },
  {
    "text": "apf added to qb api server na servers since",
    "start": "1022800",
    "end": "1028120"
  },
  {
    "text": "1.18 um but and it's also uh later since 1.20 which",
    "start": "1028120",
    "end": "1035678"
  },
  {
    "text": "means that the feature will be enabled by default so this can be useful for for",
    "start": "1035679",
    "end": "1041199"
  },
  {
    "text": "you to understand how apf works between the kube apso and a servers",
    "start": "1041199",
    "end": "1047520"
  },
  {
    "text": "so in the original design of apf we disable the flow controls by defaults",
    "start": "1047520",
    "end": "1053840"
  },
  {
    "text": "so that um in order to avoid cyclic lookups or the cyclic",
    "start": "1053840",
    "end": "1059679"
  },
  {
    "text": "dependencies between qbiq servers and a servers so",
    "start": "1059679",
    "end": "1064880"
  },
  {
    "text": "every request will be queued just for only once inside of qvap server or regulated api server um",
    "start": "1064880",
    "end": "1072799"
  },
  {
    "text": "as it's shown in the picture the um the request will be killed upon its first arrival at the qbi",
    "start": "1072799",
    "end": "1080480"
  },
  {
    "text": "server [Music] then killed again inside of a servers upon arrival",
    "start": "1080480",
    "end": "1085760"
  },
  {
    "text": "but the however the delegated authorization will never be throttled and because of um this will be",
    "start": "1085760",
    "end": "1092640"
  },
  {
    "text": "classified into the exam priority class also um",
    "start": "1092640",
    "end": "1097840"
  },
  {
    "text": "the mission control will not be filtered okay after understanding the",
    "start": "1097840",
    "end": "1104880"
  },
  {
    "start": "1101000",
    "end": "1101000"
  },
  {
    "text": "details of implementation of a servers let's um let's",
    "start": "1104880",
    "end": "1110160"
  },
  {
    "text": "take a step back and take take a look at the crds",
    "start": "1110160",
    "end": "1116000"
  },
  {
    "text": "in a higher level let's take a comparison between crds and a the crd is basically a declarative api",
    "start": "1116000",
    "end": "1123600"
  },
  {
    "text": "however the aaa is implantative um though by by the declarative api we can",
    "start": "1123600",
    "end": "1129760"
  },
  {
    "text": "easily define um the schema of cr crds by using the grammar of oas or the old",
    "start": "1129760",
    "end": "1138720"
  },
  {
    "text": "swagger and but there are some inconvenience when we are trying to um",
    "start": "1138720",
    "end": "1144720"
  },
  {
    "text": "to develop a multiversion crds um dcrd has a mechanism of conversion",
    "start": "1144720",
    "end": "1151280"
  },
  {
    "text": "bubble however this can be um somehow difficult to develop one because um it",
    "start": "1151280",
    "end": "1158080"
  },
  {
    "text": "requires a much more um background knowledge of how kubernetes api works and",
    "start": "1158080",
    "end": "1165120"
  },
  {
    "text": "as for some resources crds only have skills of resource and status of resource",
    "start": "1165120",
    "end": "1170320"
  },
  {
    "text": "so when you are trying to extend your arbitrage of resources then it will be probably something you are looking for",
    "start": "1170320",
    "end": "1177520"
  },
  {
    "text": "and the technique a can help us to replace the",
    "start": "1177520",
    "end": "1184640"
  },
  {
    "text": "etcd as the persistent layer we can we can build dna working based on mysql other kinds of",
    "start": "1184640",
    "end": "1192240"
  },
  {
    "text": "sql storages or even you can be working on a local file",
    "start": "1192240",
    "end": "1198399"
  },
  {
    "text": "in spots on the dark slide of a is that we're going to define our schemas in",
    "start": "1198640",
    "end": "1204480"
  },
  {
    "text": "golang and it requires of actual work of coding and",
    "start": "1204480",
    "end": "1212080"
  },
  {
    "text": "this can be uh this can be all more costly comparing to just writing a yamo in your local computers",
    "start": "1212960",
    "end": "1220799"
  },
  {
    "start": "1220000",
    "end": "1220000"
  },
  {
    "text": "and um so uh after the comparison i have some",
    "start": "1220799",
    "end": "1226559"
  },
  {
    "text": "personal suggestions for choosing between series and me um",
    "start": "1226559",
    "end": "1232000"
  },
  {
    "text": "the rule number one if you're extending a triple customer resources for for",
    "start": "1232000",
    "end": "1237520"
  },
  {
    "text": "example if you if you are just trying to structuralize the schema of your custom",
    "start": "1237520",
    "end": "1242559"
  },
  {
    "text": "resource um then you can you can you can try crds however if you are looking for",
    "start": "1242559",
    "end": "1249679"
  },
  {
    "text": "offloading api calls from could be api servers for example to um",
    "start": "1249679",
    "end": "1255039"
  },
  {
    "text": "for example to um to get some data out of the main etcd clusters um if you if you want",
    "start": "1255039",
    "end": "1262960"
  },
  {
    "text": "your a servers working on a dedicated apc clusters and this will this will be offloading",
    "start": "1262960",
    "end": "1268559"
  },
  {
    "text": "some edc read and write costs um and also there will be um if you're using aadb",
    "start": "1268559",
    "end": "1274799"
  },
  {
    "text": "because the burden of could be again server will be will be reduced in essence",
    "start": "1274799",
    "end": "1281919"
  },
  {
    "text": "and also if you are trying to develop a specialized api",
    "start": "1281919",
    "end": "1287039"
  },
  {
    "text": "for example extending custom sub-resources such as proxy",
    "start": "1287039",
    "end": "1293440"
  },
  {
    "text": "the process of resources is already used in the in the kubernetes such as",
    "start": "1293440",
    "end": "1299600"
  },
  {
    "text": "pulse proxy service proxy so if you are looking for a custom proxy um",
    "start": "1299600",
    "end": "1305840"
  },
  {
    "text": "implementation or other any kinds of um some resources then um you should",
    "start": "1305840",
    "end": "1312080"
  },
  {
    "text": "probably try a and also if you are if you want to get rid of ecd storage i",
    "start": "1312080",
    "end": "1318159"
  },
  {
    "text": "think the a will be the only choice to go um",
    "start": "1318159",
    "end": "1324080"
  },
  {
    "text": "so by replacing the storage layer of the etc we can easily encapsulate a third-party apis",
    "start": "1324080",
    "end": "1331600"
  },
  {
    "text": "into kubernetes resource and also adapting adopting other kinds of other",
    "start": "1331600",
    "end": "1338080"
  },
  {
    "text": "types of storages and even integrates your legacy systems into the",
    "start": "1338080",
    "end": "1343280"
  },
  {
    "text": "kubernetes concerts and let's move on to our second part",
    "start": "1343280",
    "end": "1348559"
  },
  {
    "text": "um the evolution of of api server to computer from the control runtime to",
    "start": "1348559",
    "end": "1354080"
  },
  {
    "text": "apis overall time so in the past they are a bigger general debates between crds and",
    "start": "1354080",
    "end": "1361840"
  },
  {
    "start": "1356000",
    "end": "1356000"
  },
  {
    "text": "na and the at that time the crds na they are they",
    "start": "1361840",
    "end": "1368559"
  },
  {
    "text": "are neither mature and developers are having trouble",
    "start": "1368559",
    "end": "1373919"
  },
  {
    "text": "getting on board any any any of techniques so the query builder is actually",
    "start": "1373919",
    "end": "1379039"
  },
  {
    "text": "trying to providing users a converging abstraction layer that eliminates the gaps because there it is",
    "start": "1379039",
    "end": "1384960"
  },
  {
    "text": "in a so the users will be just um facing running running on the obstructions",
    "start": "1384960",
    "end": "1391840"
  },
  {
    "text": "um provided by the computer builder or guest over builders and make",
    "start": "1391840",
    "end": "1397520"
  },
  {
    "text": "let the builders do all the rest to do that to do the dirty things for you",
    "start": "1397520",
    "end": "1402960"
  },
  {
    "text": "um the the second goal will be scaffolding the scaffolding um basically covers",
    "start": "1402960",
    "end": "1410159"
  },
  {
    "text": "first of all is the templating of your um projects no matter is some controller",
    "start": "1410159",
    "end": "1415840"
  },
  {
    "text": "or in a servers and also we need a scrapbooking to setting up um the local testing",
    "start": "1415840",
    "end": "1422480"
  },
  {
    "text": "environment um in the past um setting of having a local environment that you say actually",
    "start": "1422480",
    "end": "1429279"
  },
  {
    "text": "luxury things because um um it involves too many dependencies but",
    "start": "1429279",
    "end": "1434720"
  },
  {
    "text": "for now we have the kmd projects which help us to easily customize developer",
    "start": "1434720",
    "end": "1441679"
  },
  {
    "text": "on kubernetes clusters um",
    "start": "1441679",
    "end": "1446799"
  },
  {
    "text": "and the uh the builders the api server builders are also trying to provide",
    "start": "1446799",
    "end": "1452080"
  },
  {
    "text": "users a user friendly api concepts that some that's um hiding some",
    "start": "1452080",
    "end": "1459120"
  },
  {
    "text": "complicated details from the users",
    "start": "1459120",
    "end": "1463759"
  },
  {
    "text": "so as you can see in the peak actually the cookie builder is um forks from the api server in the very",
    "start": "1464320",
    "end": "1471120"
  },
  {
    "text": "beginning the picture is the um very first valid commit of kobe builders",
    "start": "1471120",
    "end": "1476320"
  },
  {
    "text": "so the original idea is that um the the kuby builders is supposed to",
    "start": "1476320",
    "end": "1482400"
  },
  {
    "text": "learning or the defects learning the fading lessons from the api servers then i'll have a better um",
    "start": "1482400",
    "end": "1489919"
  },
  {
    "text": "building toolings for the developers and",
    "start": "1489919",
    "end": "1495760"
  },
  {
    "start": "1493000",
    "end": "1493000"
  },
  {
    "text": "after the kobe builder then we have the controller runtime um this this picture",
    "start": "1495760",
    "end": "1500880"
  },
  {
    "text": "shows how how the um how how is the control runtime evolving over time um in",
    "start": "1500880",
    "end": "1506400"
  },
  {
    "text": "the very beginning the only thing we have is a project named sample controller the sample controller is",
    "start": "1506400",
    "end": "1512880"
  },
  {
    "text": "very well documented but it's not user-friendly for developers because um",
    "start": "1512880",
    "end": "1518720"
  },
  {
    "text": "you will need to um re-read the internals and every every developers may have",
    "start": "1518720",
    "end": "1525279"
  },
  {
    "text": "their own understanding of how a controller works um after a period of time um",
    "start": "1525279",
    "end": "1532080"
  },
  {
    "text": "we extracted the gold template from the sample controller so um we don't we",
    "start": "1532080",
    "end": "1537120"
  },
  {
    "text": "don't have to manually copy and paste it from the simple controllers anymore but it's still not user friendly because um",
    "start": "1537120",
    "end": "1544159"
  },
  {
    "text": "we don't have the unified obstruction of controller so um in the end we had so so so we",
    "start": "1544159",
    "end": "1551200"
  },
  {
    "text": "initiated the project control runtimes if you notice many packages inside of controller",
    "start": "1551200",
    "end": "1557440"
  },
  {
    "text": "runtimes are are defined as golang's internal packages",
    "start": "1557440",
    "end": "1563200"
  },
  {
    "text": "and that's the point of hiding the internals hiding the underneath details",
    "start": "1563200",
    "end": "1568640"
  },
  {
    "text": "from the users as much as possible and the controller's controller and times have have a few uh have its",
    "start": "1568640",
    "end": "1575840"
  },
  {
    "text": "standardized interface of the controller and it's a no easy it's an easy sdk",
    "start": "1575840",
    "end": "1582400"
  },
  {
    "text": "framework for developing and testing um yes the testing is also covered in the",
    "start": "1582400",
    "end": "1587520"
  },
  {
    "text": "control runtime however however their the dark side of controller runtime is that some packages is conflicting with",
    "start": "1587520",
    "end": "1594320"
  },
  {
    "text": "the uh native libraries from the kubernetes um but in um sometimes",
    "start": "1594320",
    "end": "1601200"
  },
  {
    "text": "the diverging can be misleading um because um",
    "start": "1601200",
    "end": "1606960"
  },
  {
    "text": "sometimes the abstractions in the control runtimes are just not correct anyway",
    "start": "1606960",
    "end": "1614159"
  },
  {
    "text": "and by learning from the success of kobe builder and the controller runtime we",
    "start": "1614159",
    "end": "1619840"
  },
  {
    "text": "made um a new project named api server runtimes um",
    "start": "1619840",
    "end": "1625360"
  },
  {
    "text": "so the name is similar so i think you you you can get it um the first draft level api server",
    "start": "1625360",
    "end": "1631679"
  },
  {
    "text": "runtime is drafted in 2018 um by",
    "start": "1631679",
    "end": "1637039"
  },
  {
    "text": "um by the founder of controller runtime soli and the source is still available in his",
    "start": "1637039",
    "end": "1643919"
  },
  {
    "text": "repositories and now it's incubating into a official kubernetes subject",
    "start": "1643919",
    "end": "1651600"
  },
  {
    "text": "which is now publicly available here and",
    "start": "1651600",
    "end": "1656640"
  },
  {
    "text": "the different thing um comparing to the controller time is that the api server runtime is completely",
    "start": "1656640",
    "end": "1662720"
  },
  {
    "text": "honoring the original implement original implementation of sample api server um",
    "start": "1662720",
    "end": "1668159"
  },
  {
    "text": "it works by just um importing the sample api servers into the api runtimes",
    "start": "1668159",
    "end": "1673679"
  },
  {
    "text": "and then the api server has its own lightweight",
    "start": "1673679",
    "end": "1678960"
  },
  {
    "text": "overriding layer or obstruction layer of overly sample api servers for users to",
    "start": "1678960",
    "end": "1684320"
  },
  {
    "text": "be working on and as you can see in the link the sample api servers is",
    "start": "1684320",
    "end": "1691520"
  },
  {
    "text": "inlined into api server runtimes as an internal package so users will not be um",
    "start": "1691520",
    "end": "1698720"
  },
  {
    "text": "don't don't have to care about the fps or attempts but still um getting help from the subway visitors",
    "start": "1698720",
    "end": "1706720"
  },
  {
    "start": "1706000",
    "end": "1706000"
  },
  {
    "text": "and after after um telling the evolution of",
    "start": "1706720",
    "end": "1712240"
  },
  {
    "text": "the projects um let's clarify the scope of vpn servers and apis or runtimes",
    "start": "1712240",
    "end": "1719200"
  },
  {
    "text": "overall the api servers will be a project of doing scaffoldings or api",
    "start": "1719200",
    "end": "1724960"
  },
  {
    "text": "server runtime which is similar to the relationship between code builder and controller runtime and also um",
    "start": "1724960",
    "end": "1732720"
  },
  {
    "text": "the api server builder provides users a set of um useful utilities the command",
    "start": "1732720",
    "end": "1738480"
  },
  {
    "text": "lines to operate the ai servers inside your kubernetes clusters",
    "start": "1738480",
    "end": "1745440"
  },
  {
    "text": "as for templating or the code generations note that the api server builders will only do those one shot",
    "start": "1745440",
    "end": "1751520"
  },
  {
    "text": "code generations for you including the project initializations or adding your custom resources",
    "start": "1751520",
    "end": "1758000"
  },
  {
    "text": "all of these work will just happen once and it's not consistent",
    "start": "1758000",
    "end": "1763440"
  },
  {
    "text": "and um um as for the scope of api server runtime um",
    "start": "1763440",
    "end": "1770000"
  },
  {
    "text": "it's um aiming at being a user-friendly library for building aggregated server",
    "start": "1770000",
    "end": "1775440"
  },
  {
    "text": "and it's also providing um one light switch two links for code generations",
    "start": "1775440",
    "end": "1781279"
  },
  {
    "text": "which is the consistent code generations um not comparing to the ips server the",
    "start": "1781279",
    "end": "1786720"
  },
  {
    "text": "api server does one-time things but in the api runtimes the decode",
    "start": "1786720",
    "end": "1791840"
  },
  {
    "text": "generation is actually referencing the original",
    "start": "1791840",
    "end": "1796880"
  },
  {
    "text": "code generators such as um deep copy generator and conversion generator um",
    "start": "1796880",
    "end": "1803360"
  },
  {
    "text": "quite generally to inform the former analysis generators um",
    "start": "1803360",
    "end": "1808399"
  },
  {
    "text": "the aim of api server runtime jam is just um saving saving your time by",
    "start": "1808399",
    "end": "1813919"
  },
  {
    "text": "um you don't need to download or the binary is on your own anymore",
    "start": "1813919",
    "end": "1820240"
  },
  {
    "start": "1820000",
    "end": "1820000"
  },
  {
    "text": "then let's take a look at how the original sample api server works um",
    "start": "1821440",
    "end": "1826480"
  },
  {
    "text": "the code from the code codewise um in the code um you can see that the rust",
    "start": "1826480",
    "end": "1834399"
  },
  {
    "text": "storage implementation is initialized um is instantiated manually",
    "start": "1834399",
    "end": "1840559"
  },
  {
    "text": "in the code um you need to organize or organize all the resources into a into a golan map which is",
    "start": "1840559",
    "end": "1847360"
  },
  {
    "text": "a bit hard to understand then you can just install the api groups into generic api servers",
    "start": "1847360",
    "end": "1854960"
  },
  {
    "text": "um but ideally we hope users not to",
    "start": "1854960",
    "end": "1860000"
  },
  {
    "text": "touch any internal details like this um instead in the api server and terms",
    "start": "1860000",
    "end": "1866320"
  },
  {
    "start": "1865000",
    "end": "1865000"
  },
  {
    "text": "we had we developed a fluence builder flow for developing an aggregated engine server um",
    "start": "1866320",
    "end": "1872159"
  },
  {
    "text": "we call this um the fluent builder flow or wildlife flow this is pretty common in the in the java",
    "start": "1872159",
    "end": "1878159"
  },
  {
    "text": "world so we found this it's really useful so we just decided to uh moving moving it",
    "start": "1878159",
    "end": "1884559"
  },
  {
    "text": "to the golden world so as you see we can just",
    "start": "1884559",
    "end": "1890000"
  },
  {
    "text": "build our own custom servers in one line by just by registering the resources",
    "start": "1890000",
    "end": "1895679"
  },
  {
    "text": "and um tuning a few configurations and we can also",
    "start": "1895679",
    "end": "1902399"
  },
  {
    "text": "adjust the flag registrations or other there are many um",
    "start": "1902399",
    "end": "1908240"
  },
  {
    "text": "the accessibilities are sufficient for um for for your custom use and",
    "start": "1908240",
    "end": "1913919"
  },
  {
    "text": "also by the aps or runtimes we can develop our new coordinated resources by",
    "start": "1913919",
    "end": "1921039"
  },
  {
    "text": "online api service interface surgeons if you are if your ide is supported you",
    "start": "1921039",
    "end": "1928000"
  },
  {
    "text": "can just research your custom api types with a resource store",
    "start": "1928000",
    "end": "1933039"
  },
  {
    "text": "objects interface and assert your this type with resource store object list",
    "start": "1933039",
    "end": "1938799"
  },
  {
    "text": "interface then um then after you um you make the um",
    "start": "1938799",
    "end": "1944399"
  },
  {
    "text": "interface session works then um new kubernetes resources are supposed",
    "start": "1944399",
    "end": "1950799"
  },
  {
    "text": "to looking like a charm and optionally this is the mandatory the",
    "start": "1950799",
    "end": "1956080"
  },
  {
    "text": "required um step of developing a custom resources but however there are",
    "start": "1956080",
    "end": "1962399"
  },
  {
    "text": "some optional steps of advanced on customizations for example",
    "start": "1962399",
    "end": "1967679"
  },
  {
    "text": "the validators you can assert your custom type with a interface named validator then in the",
    "start": "1967679",
    "end": "1974960"
  },
  {
    "text": "in the interface in the implementation of validator you can do advanced logics like crossfield validations or",
    "start": "1974960",
    "end": "1981679"
  },
  {
    "text": "any kinds of non-trivial validations if you want and",
    "start": "1981679",
    "end": "1987519"
  },
  {
    "start": "1985000",
    "end": "1985000"
  },
  {
    "text": "and this picture also shows you the uh how to develop a",
    "start": "1987519",
    "end": "1993440"
  },
  {
    "text": "non-native cd api servers using the apis or runtimes um ddr",
    "start": "1993440",
    "end": "2000559"
  },
  {
    "text": "as you can see uh in the independent flow we can call without eccd",
    "start": "2000559",
    "end": "2006159"
  },
  {
    "text": "methods then this will be completely disabling etc related settings that flags from the custom servers",
    "start": "2006159",
    "end": "2013360"
  },
  {
    "text": "and then if we replace the storage layer with something",
    "start": "2013360",
    "end": "2018640"
  },
  {
    "text": "other than the etc then the server will be running completely intercity free",
    "start": "2018640",
    "end": "2026559"
  },
  {
    "text": "then let's move on to the demo the class by the of runtimes the cluster gateways",
    "start": "2026559",
    "end": "2033279"
  },
  {
    "start": "2029000",
    "end": "2029000"
  },
  {
    "text": "will be um easily developing any kinds of sub-resources um this time it's going to",
    "start": "2033279",
    "end": "2040640"
  },
  {
    "text": "be the connector sub-resource or the proxy sub-resource um as you can see in",
    "start": "2040640",
    "end": "2045919"
  },
  {
    "text": "the picture um i asserted the subresource with an interface named",
    "start": "2045919",
    "end": "2051040"
  },
  {
    "text": "connector then um the implementation of connectors uh",
    "start": "2051040",
    "end": "2056079"
  },
  {
    "text": "the connect method will just returning a http docs handler the registered api is under this group",
    "start": "2056079",
    "end": "2063440"
  },
  {
    "text": "um after all after setting up the aad connection between kubernetes and",
    "start": "2063440",
    "end": "2068960"
  },
  {
    "text": "servers and a then the qb api servers will be understanding um there are",
    "start": "2068960",
    "end": "2074398"
  },
  {
    "text": "inside of a there's a new resource named crossover k2is and um the",
    "start": "2074399",
    "end": "2080240"
  },
  {
    "text": "there's a subresource named proxy first of all i'm gonna show you how to",
    "start": "2080240",
    "end": "2086320"
  },
  {
    "text": "crawl prop the healthiness of cluster without there",
    "start": "2086320",
    "end": "2092240"
  },
  {
    "text": "using the process of resource okay this is how the process sub-resource works um",
    "start": "2092240",
    "end": "2100240"
  },
  {
    "text": "the process of results will be directing redirecting order requests under the under under the proxy subresources to",
    "start": "2100240",
    "end": "2107839"
  },
  {
    "text": "the to the actual real cluster um okay i will leave my time",
    "start": "2107839",
    "end": "2112960"
  },
  {
    "text": "to the last q a sections so if you get any questions i think this is a media record",
    "start": "2112960",
    "end": "2118960"
  },
  {
    "text": "but when during my presentation i will also be available in the presentation room so",
    "start": "2118960",
    "end": "2125760"
  },
  {
    "text": "feel free to ask any questions simpler thank you",
    "start": "2125760",
    "end": "2131760"
  }
]