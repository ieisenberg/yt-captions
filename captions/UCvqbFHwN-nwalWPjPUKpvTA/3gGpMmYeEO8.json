[
  {
    "start": "0",
    "end": "173000"
  },
  {
    "text": "alright let's get started my name is Ahmet Balkan I work at Google cloud as a",
    "start": "30",
    "end": "6899"
  },
  {
    "text": "software engineer and I'm here to talk about Korres Network policies so one of",
    "start": "6899",
    "end": "12960"
  },
  {
    "text": "the things that keeps me interested about this feature is its simple so I hope many of the beginners here if there",
    "start": "12960",
    "end": "19680"
  },
  {
    "text": "are any can also understand this without knowing too much about currents but I hope you know some amount of coronaries",
    "start": "19680",
    "end": "25519"
  },
  {
    "text": "after a talk you can come pick up some Google cloud stickers we are actually have a pretty cute logo I want to show",
    "start": "25519",
    "end": "31140"
  },
  {
    "text": "it much better than they won our there and we have some GK stickers if you're",
    "start": "31140",
    "end": "37110"
  },
  {
    "text": "interested in that so as I said I work on I work at Google and the Google query",
    "start": "37110",
    "end": "42210"
  },
  {
    "text": "engine team and we're gonna be talking about they're never policies today and me and my agenda is like what are the",
    "start": "42210",
    "end": "49350"
  },
  {
    "text": "network policies how do you write them how do they work and hopefully the port item is on you go home and actually",
    "start": "49350",
    "end": "54690"
  },
  {
    "text": "start using them so network policies control traffic coming out of the pods",
    "start": "54690",
    "end": "61949"
  },
  {
    "text": "and coming to the pods so this is a construct that manages traffic at the",
    "start": "61949",
    "end": "67500"
  },
  {
    "text": "pod layer like you basically say that I want to you know control what comes to this port and what goes out of this",
    "start": "67500",
    "end": "73020"
  },
  {
    "text": "cloud network policies let you do that yeah so who's using Eric policies",
    "start": "73020",
    "end": "79470"
  },
  {
    "text": "already really curious so for the record there are like less than 10 people out",
    "start": "79470",
    "end": "85259"
  },
  {
    "text": "of a full room that's amazing alright I hope you were gonna learn something today so without the crew",
    "start": "85259",
    "end": "92130"
  },
  {
    "text": "network policies your clusters are like actually they don't know they're on fire but you know I try to do the this is",
    "start": "92130",
    "end": "99509"
  },
  {
    "text": "fine dog meme but it didn't work because copyrighted anyway your clusters are actually not fine just so you know and",
    "start": "99509",
    "end": "107549"
  },
  {
    "text": "so the network policy API is started around the work around and our policy",
    "start": "107549",
    "end": "113430"
  },
  {
    "text": "has started around late 2015 from mainly the folks interested in the",
    "start": "113430",
    "end": "118829"
  },
  {
    "text": "networking space I'm bringing you know closer network integration through kubernetes and you know as you can see it took quite a long time for the API to",
    "start": "118829",
    "end": "125670"
  },
  {
    "text": "actually evolve we have some couple seats up here if you want so the API",
    "start": "125670",
    "end": "131930"
  },
  {
    "text": "went through some stuff period and that period wasn't necessary because if you actually look at the",
    "start": "131930",
    "end": "137220"
  },
  {
    "text": "initial proposal of the API it's completely different than what we have today actually want to say thanks to the",
    "start": "137220",
    "end": "143340"
  },
  {
    "text": "people who who contributed the feature a lot namely KC Devonport from Nigeria I'm",
    "start": "143340",
    "end": "148860"
  },
  {
    "text": "like Christopher Luciano from IBM and danwon from Red Hat these people made the future happen by the way I did not",
    "start": "148860",
    "end": "155099"
  },
  {
    "text": "work on the feature I actually liked the feature so much that's why I'm here to tell you about it but yet these people",
    "start": "155099",
    "end": "160349"
  },
  {
    "text": "actually did all the hard work so it goes you know I guess the things go to them so the feature has been stable",
    "start": "160349",
    "end": "168030"
  },
  {
    "text": "since 1.7 it means that this API is in your careers clusters if you're using 1.7 all about let's talk about in their",
    "start": "168030",
    "end": "174959"
  },
  {
    "start": "173000",
    "end": "237000"
  },
  {
    "text": "writing Network policies like how do I write one right so first I need to talk to you about labels if you don't know",
    "start": "174959",
    "end": "181440"
  },
  {
    "text": "what labels you know every part and communities better have labels it's not mandatory but this is how we do things",
    "start": "181440",
    "end": "187950"
  },
  {
    "text": "in currents and this is how pretty much everything in coronaries works so labels basically associate some metadata with",
    "start": "187950",
    "end": "194190"
  },
  {
    "text": "the pods and then we have label selectors which can select a set of pods using these attributes and you know in",
    "start": "194190",
    "end": "201269"
  },
  {
    "text": "this case you know in on the right you can see I have a label selector that says mesh labels at equals shopping and",
    "start": "201269",
    "end": "207359"
  },
  {
    "text": "in this case I selected these two parts so in this case I said you know choose the database tier and I selected those",
    "start": "207359",
    "end": "214709"
  },
  {
    "text": "two pods on the right pretty simple right so the next thing is what like the empty selector is that there is a thing",
    "start": "214709",
    "end": "220079"
  },
  {
    "text": "and I want to just like ask this question what do you think the aunt the label selector is going to select who",
    "start": "220079",
    "end": "225840"
  },
  {
    "text": "says it's gonna select none of the pods to two people okay who select it say",
    "start": "225840",
    "end": "232680"
  },
  {
    "text": "likes everything perfect this is amazing alright so let's talk about you know",
    "start": "232680",
    "end": "239280"
  },
  {
    "start": "237000",
    "end": "694000"
  },
  {
    "text": "what's in the network policy like how do I write a network policy so first you got to specify which pause does this thing apply to you like what is it",
    "start": "239280",
    "end": "245790"
  },
  {
    "text": "control right and we do that by using label selectors or pod selectors which can select using labels so the second",
    "start": "245790",
    "end": "252720"
  },
  {
    "text": "thing is where does this policy apply to is this for which direction right it's like controlling the incoming traffic or",
    "start": "252720",
    "end": "258750"
  },
  {
    "text": "is this controlling the outgoing traffic so in this case we call the outgoing traffic egress and the other way is",
    "start": "258750",
    "end": "264270"
  },
  {
    "text": "ingress and what are the rules like for let's say an",
    "start": "264270",
    "end": "269900"
  },
  {
    "text": "ingress room allowing traffic to the pal who can connect to the spot so we got to specify some sources that are white",
    "start": "269900",
    "end": "275510"
  },
  {
    "text": "listed to connect to this pot so this is roughly how the object looks like you",
    "start": "275510",
    "end": "281120"
  },
  {
    "text": "know it's in the networking case that I obi-wan in API version is called Network policy and I scan all the metadata as",
    "start": "281120",
    "end": "288110"
  },
  {
    "text": "usual it's got the spec and in the spec we definitely need to have a pod selector and we definitely need to",
    "start": "288110",
    "end": "293390"
  },
  {
    "text": "specify a direction you can either specify ingress or egress or both and",
    "start": "293390",
    "end": "298760"
  },
  {
    "text": "those can have multiple rules so the first rule of network policy is the",
    "start": "298760",
    "end": "305210"
  },
  {
    "text": "traffic is allowed by default unless there is a policy in place controlling",
    "start": "305210",
    "end": "310850"
  },
  {
    "text": "that traffic so if you are selecting the pod from a Nanette from a network policy",
    "start": "310850",
    "end": "316660"
  },
  {
    "text": "that is actually restricted in traffic so if but if you don't do anything all the traffic is allowed right now if you",
    "start": "316660",
    "end": "323570"
  },
  {
    "text": "use two rays and if you don't use network policies which is pretty much all of you network policies are not",
    "start": "323570",
    "end": "329450"
  },
  {
    "text": "restricting anything so the rule rule 2 is traffic is denied if there are pods",
    "start": "329450",
    "end": "335419"
  },
  {
    "text": "selecting that traffic those pods sorry if there are narrow policies selecting that traffic but none of those policies",
    "start": "335419",
    "end": "342470"
  },
  {
    "text": "are actually allowing that particular you know source or destination so I'll",
    "start": "342470",
    "end": "348169"
  },
  {
    "text": "come to that I'll come back to this in a moment but I think this is important to understand from rule 1 and 2 I can say",
    "start": "348169",
    "end": "353660"
  },
  {
    "text": "that you can only write rules that allow traffic like you cannot if you watch the keynote today they were showing Abe was",
    "start": "353660",
    "end": "361070"
  },
  {
    "text": "at the keynote I'm trying ranbir I guess it was the keynote they show they never policy which was specific to Tigers",
    "start": "361070",
    "end": "367130"
  },
  {
    "text": "implementation that's not the Koreans core network policy but in those places in those in their api's they had a deny",
    "start": "367130",
    "end": "373910"
  },
  {
    "text": "rule you cannot have deny rules like you can say I want to deny this explicitly in Korean every policy so what you do is",
    "start": "373910",
    "end": "380750"
  },
  {
    "text": "you only allow things so as an example so this is denying everything this is a",
    "start": "380750",
    "end": "387410"
  },
  {
    "text": "policy object it will deny all the incoming traffic to all your pods and the way it does is first you see a poll",
    "start": "387410",
    "end": "394880"
  },
  {
    "text": "selector right it selects all the posits empty selector and then it specifies ingress means that this policy",
    "start": "394880",
    "end": "400520"
  },
  {
    "text": "enforcing the incoming traffic and then it's not specifying any rules it has an empty array in the ammo and this means",
    "start": "400520",
    "end": "407560"
  },
  {
    "text": "nothing is whitelisted so once you put this policy in place all the incoming",
    "start": "407560",
    "end": "412699"
  },
  {
    "text": "traffic to all your pods from you know outside the cluster from within the cluster everything is blocked so this is",
    "start": "412699",
    "end": "418580"
  },
  {
    "text": "how it works so the room 3 is traffic is allowed if there's at least one policy",
    "start": "418580",
    "end": "425120"
  },
  {
    "text": "allowing it so let's say you deploy bunch of policies you know you deny bunch of traffic here and there but if",
    "start": "425120",
    "end": "430729"
  },
  {
    "text": "you have like one policy that allows that traffic it'll go through so let's",
    "start": "430729",
    "end": "437449"
  },
  {
    "text": "give more concrete example in this case in the middle I have a database application on the Left I have a",
    "start": "437449",
    "end": "442819"
  },
  {
    "text": "back-end which is you know you can't talk to the database just fine but the front-end probably should not be",
    "start": "442819",
    "end": "447949"
  },
  {
    "text": "directly talking to the database it should produce something else so how do I write a traffic Network policy that",
    "start": "447949",
    "end": "454520"
  },
  {
    "text": "enforces these traffic rules the way to do that is I have a pod selector that matches to the database first right it's",
    "start": "454520",
    "end": "461659"
  },
  {
    "text": "enforcing the rule on the database pods and then in the ingre section I have a single rule like if you just look below",
    "start": "461659",
    "end": "469070"
  },
  {
    "text": "the ingress you're going to see that there's on a dash indicating this is a rule and in that rule I see a from",
    "start": "469070",
    "end": "474590"
  },
  {
    "text": "statement it means a lot of traffic from these pods which is in this case it's selecting the backend pods and it's",
    "start": "474590",
    "end": "480349"
  },
  {
    "text": "allowing the traffic only from those pods so this is if you deploy this you're gonna get basically a system",
    "start": "480349",
    "end": "486680"
  },
  {
    "text": "where they can just talk to them talk to the database but not too big the",
    "start": "486680",
    "end": "491840"
  },
  {
    "text": "front-end cannot do that and in this case no other pods cannot talk to the database either so we were basically",
    "start": "491840",
    "end": "498229"
  },
  {
    "text": "blacklisting everything except the backend let's take this example further",
    "start": "498229",
    "end": "503270"
  },
  {
    "text": "and let's say the database is exposing two ports one is port 80 and what the other one is like my circle port 3306 so",
    "start": "503270",
    "end": "511039"
  },
  {
    "text": "you don't want the port 80 to be accessible so you just take the same rule and say I want to exit I want to",
    "start": "511039",
    "end": "517459"
  },
  {
    "text": "add these ports explicitly if you say poor story or a PCP the back end will be",
    "start": "517459",
    "end": "523490"
  },
  {
    "text": "only able to use that port if you don't spice don't specify any ports all ports are all from open by default so this is",
    "start": "523490",
    "end": "530480"
  },
  {
    "text": "like further adding that you know a little bit more security in terms of you know whatever minimal",
    "start": "530480",
    "end": "536940"
  },
  {
    "text": "access is needed in this case the back end only needs to access the port 3 308 then you just give access only to that",
    "start": "536940",
    "end": "543150"
  },
  {
    "text": "port a little bit small not about the port numbers you can't currently use the",
    "start": "543150",
    "end": "549060"
  },
  {
    "text": "service port so you have to specify the actual plot numbers I don't know what is it why this is the case currently all",
    "start": "549060",
    "end": "555210"
  },
  {
    "text": "the network policy implementations are just going this way except other like",
    "start": "555210",
    "end": "561300"
  },
  {
    "text": "the spec is not saying that but it's this big is not blocking that either so we'll come back to how the network",
    "start": "561300",
    "end": "566790"
  },
  {
    "text": "policies enforced so I'll have a chance to talk about it later so we talked",
    "start": "566790",
    "end": "572580"
  },
  {
    "text": "about it we said that you know all the policies are if there's like one policy allowing the traffic the traffic will",
    "start": "572580",
    "end": "578339"
  },
  {
    "text": "definitely go through right so let's talk about like how the policies are evaluated so if you if you have a bunch",
    "start": "578339",
    "end": "583830"
  },
  {
    "text": "of let's say ingress rules in your network policy basically if any of those match the traffic then the traffic will",
    "start": "583830",
    "end": "591029"
  },
  {
    "text": "be allowed so it's not like you know it should match this room 1 and then it should match this rule 2 it's not an end",
    "start": "591029",
    "end": "596520"
  },
  {
    "text": "statement it's an or statement so to give a I guess a little bit more concrete example in this case I have a",
    "start": "596520",
    "end": "602730"
  },
  {
    "text": "single ingress rule which has two pod selectors so if any of the pods are",
    "start": "602730",
    "end": "609030"
  },
  {
    "text": "matching volunteers condition one of these pod selectors then they will be able to get in so these are combined",
    "start": "609030",
    "end": "616050"
  },
  {
    "text": "with an or statement not an end statement similarly I have two rules here right they I have two from roles and",
    "start": "616050",
    "end": "622080"
  },
  {
    "text": "this is this has the same effect as the previous one by the way just because everything is or in this case the rule",
    "start": "622080",
    "end": "628620"
  },
  {
    "text": "one is ordered with the rule two so you're at the end you're getting the same effect so let's talk a little bit",
    "start": "628620",
    "end": "637110"
  },
  {
    "text": "about empty selectors because you can do cool things with them so I want to say allow all the monitoring pods to connect",
    "start": "637110",
    "end": "644580"
  },
  {
    "text": "port 5000 of all the pods so I come up with a very simple network network",
    "start": "644580",
    "end": "651120"
  },
  {
    "text": "policy spec like this so this spec says you know select all the pods and then you know allow port five a lot of",
    "start": "651120",
    "end": "658860"
  },
  {
    "text": "traffic to port 5,000 of the role equals monitoring label right so does anyone",
    "start": "658860",
    "end": "665730"
  },
  {
    "text": "see any problem with this at all yes please",
    "start": "665730",
    "end": "673620"
  },
  {
    "text": "he has anyone Canada container with them role equals monitoring that's true but",
    "start": "675080",
    "end": "680269"
  },
  {
    "text": "that's not that's not gonna it's not what I was trying to get it so the this is this works only if the monitoring",
    "start": "680269",
    "end": "685790"
  },
  {
    "text": "pods and the spa's you're selecting are in the current namespace if you're",
    "start": "685790",
    "end": "691070"
  },
  {
    "text": "monitoring part is somewhere else this is not gonna work so the reason is that the pot selector is selecting only pots",
    "start": "691070",
    "end": "699350"
  },
  {
    "text": "from the current namespace and the never policy object itself is an it namespace scope object so you have to if you have",
    "start": "699350",
    "end": "706160"
  },
  {
    "text": "a network policy you have to deploy that to every single name space you have to enforce the same kind of thing you know",
    "start": "706160",
    "end": "711950"
  },
  {
    "text": "to illustrate this better like let's say I have the same setup in both namespaces you know about and below the the one",
    "start": "711950",
    "end": "718220"
  },
  {
    "text": "below does not have any network policy enforcement because you did not deploy your policy there so you have to deploy",
    "start": "718220",
    "end": "723350"
  },
  {
    "text": "your policies to every single namespace you have so then in this case how do we",
    "start": "723350",
    "end": "729740"
  },
  {
    "text": "allow traffic from the other name from other namespaces because you know the pod selector is matching only there you",
    "start": "729740",
    "end": "735079"
  },
  {
    "text": "know the local namespace it is deployed to so we need a new kind of selector in",
    "start": "735079",
    "end": "740270"
  },
  {
    "text": "this case which is the namespace selector it's like the pod selector you know it still uses labels it but it",
    "start": "740270",
    "end": "747529"
  },
  {
    "text": "selects namespaces by the way who is actually labeling their namespaces I'm really curious",
    "start": "747529",
    "end": "754089"
  },
  {
    "text": "some people like very very few okay so",
    "start": "754089",
    "end": "761630"
  },
  {
    "text": "the gentleman back there said we only only label our namespaces because never a policy needs them that's that's cool",
    "start": "761630",
    "end": "768290"
  },
  {
    "text": "so yeah that they came up with this thing so if you want to use up with namespaces you told the label your namespaces so I guess let's give an",
    "start": "768290",
    "end": "774860"
  },
  {
    "text": "example in this case I have two namespaces let's say foo Pradhan food",
    "start": "774860",
    "end": "780949"
  },
  {
    "text": "storage and I want to you know give access to my apps in prod storage so I",
    "start": "780949",
    "end": "787310"
  },
  {
    "text": "basically specify that I want this namespace selector i specify label",
    "start": "787310",
    "end": "792500"
  },
  {
    "text": "purpose equals prod and then i basically allow traffic from all the pods in that",
    "start": "792500",
    "end": "798019"
  },
  {
    "text": "namespace so there's a problem with that if you if you use namespace selector it",
    "start": "798019",
    "end": "804290"
  },
  {
    "text": "does not let you specify traffic selectively from another name space you either allow all traffic from",
    "start": "804290",
    "end": "810470"
  },
  {
    "text": "that particular namespace or those namespaces or you don't allow any traffic from those namespaces so you",
    "start": "810470",
    "end": "816649"
  },
  {
    "text": "can't do what what I just illustrated in the picture you can't print you know we can enforce traffic to selectively",
    "start": "816649",
    "end": "822920"
  },
  {
    "text": "different parts because the rules are applied with or once you allow traffic to all of the namespace you can't reduce",
    "start": "822920",
    "end": "829579"
  },
  {
    "text": "it back so so far we learn about you know three ways we learn about two ways",
    "start": "829579",
    "end": "835220"
  },
  {
    "text": "to specify where the traffic can come from there's a third way which is called IP block so if you don't know what I see",
    "start": "835220",
    "end": "841790"
  },
  {
    "text": "I see the IRS it's a way to specify IP ranges so I put a little diagram I put a",
    "start": "841790",
    "end": "848119"
  },
  {
    "text": "little table on the left it shows you you know if you do 10.000 slash eight",
    "start": "848119",
    "end": "853490"
  },
  {
    "text": "that basically means all turned up something IP addresses so that's what CDI CDRs in the example on the right you",
    "start": "853490",
    "end": "860959"
  },
  {
    "text": "can see that I have a from rule and I'm in this case I specify a CIDR range and",
    "start": "860959",
    "end": "866449"
  },
  {
    "text": "I basically traffic allowed traffic only from there and in the example below I say ok exactly a lot of traffic from",
    "start": "866449",
    "end": "872269"
  },
  {
    "text": "that IP block but except this particular smaller block so that's a feature let's",
    "start": "872269",
    "end": "879379"
  },
  {
    "text": "talk about the egress rules so egress rules are pretty much the same thing as the ingress rules that allow traffic to",
    "start": "879379",
    "end": "885259"
  },
  {
    "text": "your pods and egress rules and forcing traffic to whatever you know is going",
    "start": "885259",
    "end": "890600"
  },
  {
    "text": "from the pod to outside so you can send traffic to some places but not everywhere this is actually pretty",
    "start": "890600",
    "end": "897019"
  },
  {
    "text": "helpful and it's as helpful as the ingress rules these are very simply added in kubernetes 1.7 if i'm not",
    "start": "897019",
    "end": "904879"
  },
  {
    "text": "mistaken so here's the same example for the one we have with ingress how do I",
    "start": "904879",
    "end": "910999"
  },
  {
    "text": "all the egress traffic so in this case we're looking at selecting all the pods",
    "start": "910999",
    "end": "916009"
  },
  {
    "text": "again different than the ingress one i specify your policy types and one of the",
    "start": "916009",
    "end": "921620"
  },
  {
    "text": "elements in there is called egress you have to explicitly specify this if unless i'm mistaken it's just the thing",
    "start": "921620",
    "end": "927920"
  },
  {
    "text": "if you do with the egress you can also expose to specify the ingress but I think it's inferred because of the api",
    "start": "927920",
    "end": "933410"
  },
  {
    "text": "compatibility reasons so in the egress section I specify again an empty set of",
    "start": "933410",
    "end": "939410"
  },
  {
    "text": "rules this means I'm allowing any traffic to go out right so that's what it is so this is a more",
    "start": "939410",
    "end": "947000"
  },
  {
    "text": "concrete example you don't want the front-end instance to call anywhere except the back end so I mesh to the",
    "start": "947000",
    "end": "954050"
  },
  {
    "text": "front end and then in the egress section I say you know go to the only tier equals back end",
    "start": "954050",
    "end": "960260"
  },
  {
    "text": "pause so this is enforcing that policy pretty simple so if I actually go into",
    "start": "960260",
    "end": "966620"
  },
  {
    "text": "the front end pod you know if I do like QC DL exec and I do like pure HTTP - -",
    "start": "966620",
    "end": "972500"
  },
  {
    "text": "back end it says cannot resolve host back-end didn't I just allow access to",
    "start": "972500",
    "end": "978020"
  },
  {
    "text": "back-end ways of giving you that error does anyone have any ideas DNS yes so",
    "start": "978020",
    "end": "985610"
  },
  {
    "text": "this thing turns out actually blocks cube DNS - or DNS resolution in general so you have to either allow all the DNS",
    "start": "985610",
    "end": "992510"
  },
  {
    "text": "traffic or you have to figure out the IP address of your queue DNS service and give access whitelist that particular IP",
    "start": "992510",
    "end": "999320"
  },
  {
    "text": "address in this simple example I do basically just added ports here it's a",
    "start": "999320",
    "end": "1004360"
  },
  {
    "text": "new rule it's like the rule one is that the one at that accused access to the back end the rule 2 is giving access to",
    "start": "1004360",
    "end": "1010120"
  },
  {
    "text": "ports in this case I don't specify a destination so all access on port 53 can",
    "start": "1010120",
    "end": "1015730"
  },
  {
    "text": "go out can go to internal IPs can go to external IPs but in this case I'm giving access to both UDP and TCP or port 53",
    "start": "1015730",
    "end": "1023290"
  },
  {
    "text": "because this is the DNS traffic that we want so you know more fun with egress",
    "start": "1023290",
    "end": "1030520"
  },
  {
    "text": "you can actually block the external traffic and limit your cluster traffic to internal stuff like let's say you have an app you definitely don't want",
    "start": "1030520",
    "end": "1037089"
  },
  {
    "text": "that app to establish connections to outside your cluster like you don't want it to go download packages you don't",
    "start": "1037089",
    "end": "1042730"
  },
  {
    "text": "want it to go I don't know send your passwords to somewhere else or something so this is how you do it and",
    "start": "1042730",
    "end": "1049330"
  },
  {
    "text": "in this case I'm again much matching to all pods but in the two section I'm",
    "start": "1049330",
    "end": "1054880"
  },
  {
    "text": "selecting namespaces but I have an empty selector so this is selecting all the",
    "start": "1054880",
    "end": "1060100"
  },
  {
    "text": "namespaces and all the pods in them and it's not selecting anything else so this is only restrict this is restricting",
    "start": "1060100",
    "end": "1066730"
  },
  {
    "text": "traffic only two pods other pods in your cluster",
    "start": "1066730",
    "end": "1072000"
  },
  {
    "text": "so that's useful let's talk about how the network policies are actually enforced so I have a surprise if you",
    "start": "1072640",
    "end": "1080620"
  },
  {
    "start": "1074000",
    "end": "1286000"
  },
  {
    "text": "don't have a networking policy installed in your cluster you can go home deploy these rules and nothing is gonna happen",
    "start": "1080620",
    "end": "1085720"
  },
  {
    "text": "there silently ignored like that was my little surprise I thought it was just kind of magically Yorick so it actually",
    "start": "1085720",
    "end": "1092230"
  },
  {
    "text": "does not work out of the box you have to install something called something like calico Venus or Romana I don't",
    "start": "1092230",
    "end": "1097929"
  },
  {
    "text": "personally and there's anything but I'll come to that later you need a plug-in to",
    "start": "1097929",
    "end": "1103960"
  },
  {
    "text": "enforce your network policies so in Google play's engine we use calico and",
    "start": "1103960",
    "end": "1110520"
  },
  {
    "text": "it's pretty simple to create a cluster with network policy enforcement we basically just say gee called beta",
    "start": "1110520",
    "end": "1116770"
  },
  {
    "text": "containment clusters create - enable Network policy so this is installing the Calico networking plug-in to your",
    "start": "1116770",
    "end": "1122770"
  },
  {
    "text": "cluster this is something that calico and Google manages together like if there's any problems with your network",
    "start": "1122770",
    "end": "1129400"
  },
  {
    "text": "policy pods you know we know about it the uncle comes and fixes it so the Google series are on this this is like",
    "start": "1129400",
    "end": "1134410"
  },
  {
    "text": "you don't have to install and manage this yourself we can still manage that for you and if you got a GU club back",
    "start": "1134410",
    "end": "1140799"
  },
  {
    "text": "google.com slash Carini's engine you can find more documentation about how this works so more on never policy",
    "start": "1140799",
    "end": "1147520"
  },
  {
    "text": "enforcement so you gotta know the connections or duplex like meaning they're two-way once a can connect to be",
    "start": "1147520",
    "end": "1154090"
  },
  {
    "text": "obviously be can con we can send data back to a on the same connection that's how HTTP and everything works right so",
    "start": "1154090",
    "end": "1159900"
  },
  {
    "text": "but does not that does not mean B can't connect to a so don't Phunk don't think of it this like I don't think of it like",
    "start": "1159900",
    "end": "1166860"
  },
  {
    "text": "once you have a policy restricting the outbound traffic you cannot send any packages ever that's not the case at all",
    "start": "1166860",
    "end": "1173309"
  },
  {
    "text": "this is pretty much how you would expect I think it works so the second thing is",
    "start": "1173309",
    "end": "1179290"
  },
  {
    "text": "never policy is a connection level filter it's not a it's not apply to packages it's a it applies to",
    "start": "1179290",
    "end": "1186429"
  },
  {
    "text": "connections that are established so after you start I guess after you deploy",
    "start": "1186429",
    "end": "1192250"
  },
  {
    "text": "a network policy that would block some connections if you already have some connections in flight that are established already network policy is",
    "start": "1192250",
    "end": "1199120"
  },
  {
    "text": "not gonna kill those this is not in the specification some providers out there might be killing that but the spec does",
    "start": "1199120",
    "end": "1204940"
  },
  {
    "text": "not say anything about it so don't expect to really kill but any new connections established after the nerd policy takes",
    "start": "1204940",
    "end": "1210600"
  },
  {
    "text": "effect those are going to be blocked and they look like they're timing out most of the time I guess that also depends on",
    "start": "1210600",
    "end": "1216389"
  },
  {
    "text": "the implementation so I want to talk about a little bit about you know what are the performance implications of",
    "start": "1216389",
    "end": "1223169"
  },
  {
    "text": "using network policies because I like when I was using that I'm like this definitely changes the performance because I just think you know they",
    "start": "1223169",
    "end": "1228840"
  },
  {
    "text": "definitely create like an overlay network and like they a bunch of rules in there and they really ate the rules anytime there's a new pod comes up of",
    "start": "1228840",
    "end": "1235470"
  },
  {
    "text": "orders and even every policy comes up so I thought it probably you know adds a",
    "start": "1235470",
    "end": "1240749"
  },
  {
    "text": "lot of latency so good things that the Romagna folks actually publish the blog post about it and the blog post",
    "start": "1240749",
    "end": "1246960"
  },
  {
    "text": "basically says that you know we deployed so many thousands of rules and it only affects like only a little and that's",
    "start": "1246960",
    "end": "1252330"
  },
  {
    "text": "like during the first time to bite or something so it's not a big deal and I",
    "start": "1252330",
    "end": "1258059"
  },
  {
    "text": "guess this also depends on the implementation some providers use IP tables some just establish an overlay Network on your network so also depends",
    "start": "1258059",
    "end": "1266009"
  },
  {
    "text": "on how they actually implement the algorithms like how do they do how they do caching and how they react to you",
    "start": "1266009",
    "end": "1272249"
  },
  {
    "text": "know how the pods coming up and so on so because basically anytime a new pod comes up you have to update your entire",
    "start": "1272249",
    "end": "1278489"
  },
  {
    "text": "cluster with the new set of IP tables rules so there's a little bit of work",
    "start": "1278489",
    "end": "1284309"
  },
  {
    "text": "there so let's talk a little bit about best practices I showed the default deny",
    "start": "1284309",
    "end": "1291960"
  },
  {
    "start": "1286000",
    "end": "1475000"
  },
  {
    "text": "rules for ingress and egress I think those are really important the reason",
    "start": "1291960",
    "end": "1297179"
  },
  {
    "text": "they're important is they I think establish a baseline because you're blocking everything and then you're",
    "start": "1297179",
    "end": "1302399"
  },
  {
    "text": "whitelisting one by one based on the need right if you're developing a new micro service and you know where it's",
    "start": "1302399",
    "end": "1307889"
  },
  {
    "text": "definitely going to talk to you're establishing that network policy that's allowing that traffic one by one so you",
    "start": "1307889",
    "end": "1314129"
  },
  {
    "text": "you're basically starting from zero and building up as opposed to you know having everything able to access each",
    "start": "1314129",
    "end": "1320009"
  },
  {
    "text": "other that's not great so I think this is one of the best practices the second",
    "start": "1320009",
    "end": "1325529"
  },
  {
    "text": "thing is you have to understand how the rules are actually evaluated it's always",
    "start": "1325529",
    "end": "1331379"
  },
  {
    "text": "good to be explicit about what you mean one of the problem is that like I right",
    "start": "1331379",
    "end": "1336929"
  },
  {
    "text": "now I am up here you know I'm giving this talk but I cannot confidently say the difference",
    "start": "1336929",
    "end": "1342210"
  },
  {
    "text": "between those four things I can tell some of them but like some of them are blocking all traffic some of them are",
    "start": "1342210",
    "end": "1347490"
  },
  {
    "text": "allowing all traffic and depends on where do you know the empty object is specified it can allow or deny all",
    "start": "1347490",
    "end": "1353700"
  },
  {
    "text": "traffic so you should be you should be careful about what you're doing which brings me my next topic you should test",
    "start": "1353700",
    "end": "1360150"
  },
  {
    "text": "your policies and once you deploy a policy make sure it's actually doing what you expect it to do and test it",
    "start": "1360150",
    "end": "1366990"
  },
  {
    "text": "with like different conditions like test the external networking tested I don't know kind of excess DNS can it like you",
    "start": "1366990",
    "end": "1373920"
  },
  {
    "text": "know go outside the cluster can it access another namespace can other namespaces access this so if you try all",
    "start": "1373920",
    "end": "1379500"
  },
  {
    "text": "these things you'll have a better understanding of how the feature works as well also the I think if I'm not",
    "start": "1379500",
    "end": "1386760"
  },
  {
    "text": "mistaken kubernetes 1.9 is going to ship with a better qct I'll describe printer which is gonna explain the network",
    "start": "1386760",
    "end": "1393120"
  },
  {
    "text": "policy is much better than today so that should actually help the so I've",
    "start": "1393120",
    "end": "1400260"
  },
  {
    "text": "been working on some narrow policy tutorial repository it says tutorial but it's not really a tutorial it's like",
    "start": "1400260",
    "end": "1405390"
  },
  {
    "text": "your recipes repository so if I figure out like a you know cool thing to do with narrative policies I just put it up",
    "start": "1405390",
    "end": "1411960"
  },
  {
    "text": "there and you can contribute to it as well I have some you know drawing some diagrams explaining how everything works",
    "start": "1411960",
    "end": "1418290"
  },
  {
    "text": "and I have the policies you can directly download from there so there's that but you know never policy is not the end",
    "start": "1418290",
    "end": "1425250"
  },
  {
    "text": "game you know you there are already several Network policy implementations",
    "start": "1425250",
    "end": "1431040"
  },
  {
    "text": "in different parts of the stack right it still claims to be doing some part of it some never policy providers are claim to",
    "start": "1431040",
    "end": "1438240"
  },
  {
    "text": "doing what SEO does and you know everything everybody is like attacking one layer above and below so I think",
    "start": "1438240",
    "end": "1444840"
  },
  {
    "text": "that is fine but in this case you know your applications have larger concerns such as how do you the authorization how",
    "start": "1444840",
    "end": "1451140"
  },
  {
    "text": "do you do part identity you know how do you do how do you make sure you're",
    "start": "1451140",
    "end": "1456780"
  },
  {
    "text": "enforcing the right set of policies like I think these are these are these can be used if additively this is more defense",
    "start": "1456780",
    "end": "1464970"
  },
  {
    "text": "in death like you can use steal but you can also add the network policy on top of it it would just work fine so this is",
    "start": "1464970",
    "end": "1471060"
  },
  {
    "text": "not the end game you know this is not going to give you the this is silver bullet this is pretty",
    "start": "1471060",
    "end": "1476140"
  },
  {
    "start": "1475000",
    "end": "1854000"
  },
  {
    "text": "much my talk if you're actually interested in the narrow pulse recipes repo definitely check out that",
    "start": "1476140",
    "end": "1481270"
  },
  {
    "text": "repository you can find my slides also on the talk page so if you wanna give a try to the coronaries engine definitely",
    "start": "1481270",
    "end": "1488110"
  },
  {
    "text": "go try it out I think we have a pretty good free trial and if you want some stickers they're here if you have some",
    "start": "1488110",
    "end": "1494050"
  },
  {
    "text": "questions I think we got actually some time well I'm impressed yeah please go to the microphone",
    "start": "1494050",
    "end": "1499840"
  },
  {
    "text": "thank you I have to repeat it if you",
    "start": "1499840",
    "end": "1511540"
  },
  {
    "text": "don't say it to the microphone",
    "start": "1511540",
    "end": "1514560"
  },
  {
    "text": "so I have a question about egress policies actually so cuz repeat that I couldn't hear about egress policies so",
    "start": "1523510",
    "end": "1530620"
  },
  {
    "text": "if a pod accesses a service IP address basically the question is what is",
    "start": "1530620",
    "end": "1536470"
  },
  {
    "text": "supposed to happen especially if the egress policies allow a subset of the",
    "start": "1536470",
    "end": "1543900"
  },
  {
    "text": "pods that could be accessed by that service - if you're trying to access",
    "start": "1543900",
    "end": "1550060"
  },
  {
    "text": "another service I would just copy the labels of that service and edit - the egress route so I'm from a just from a",
    "start": "1550060",
    "end": "1557800"
  },
  {
    "text": "spec perspective yeah you know if you're doing an implementation hypothetically you've never yeah what would what what",
    "start": "1557800",
    "end": "1564940"
  },
  {
    "text": "what is actually supposed to happen that's a good question I'm not sure actually I mean would you whitelist the",
    "start": "1564940",
    "end": "1571630"
  },
  {
    "text": "pod IPS would you whitelist the server side piece I mean it's it's actually pretty awkward anyway because at the",
    "start": "1571630",
    "end": "1577090"
  },
  {
    "text": "level where you're applying the network policy you are you're seeing just the service IP so it's not really clear if",
    "start": "1577090",
    "end": "1584080"
  },
  {
    "text": "you're supposed to be pulling information about this the service endpoints into the network policy and",
    "start": "1584080",
    "end": "1589270"
  },
  {
    "text": "applying it at that lab level or it's it's problematic in a way the ingress policy is not it definitely won't work",
    "start": "1589270",
    "end": "1606250"
  },
  {
    "text": "but the question is like what is it supposed to do for example you can imagine I intersect the labels on the",
    "start": "1606250",
    "end": "1612100"
  },
  {
    "text": "service with the labels of the network policy and apply only to the subset of network policies and then it would have",
    "start": "1612100",
    "end": "1617350"
  },
  {
    "text": "to be integrated with the load balancer so the load balancer would only load balance to the right set of pots I'm not",
    "start": "1617350",
    "end": "1624010"
  },
  {
    "text": "sure why it wouldn't work with the cluster IP directly because the the cluster IP is not an IP address of a pod",
    "start": "1624010",
    "end": "1633120"
  },
  {
    "text": "that is selected by one of the network policies because the network policy applies only to pods it does not apply",
    "start": "1633120",
    "end": "1638680"
  },
  {
    "text": "to services that's true yeah I honestly I don't know how its enforced on the services yeah I would",
    "start": "1638680",
    "end": "1646120"
  },
  {
    "text": "say sticking to labels will probably solve it solve it oh that is the labels",
    "start": "1646120",
    "end": "1651940"
  },
  {
    "text": "are what Scott the problem is because the latest like I guess that I'll have to maybe bring it",
    "start": "1651940",
    "end": "1658269"
  },
  {
    "text": "up in and Signet workers probably yeah sinking that work is definitely a good place as these questions let's go ahead",
    "start": "1658269",
    "end": "1665130"
  },
  {
    "text": "so I think if I heard it properly when installed given it is it doesn't have a",
    "start": "1665130",
    "end": "1670809"
  },
  {
    "text": "network policy implementer quite default right it does not have a default implementation now so what's the reason",
    "start": "1670809",
    "end": "1678039"
  },
  {
    "text": "for that that's a good question I think the reason is because everybody has a different way of doing networking and",
    "start": "1678039",
    "end": "1684340"
  },
  {
    "text": "every pretty much everything every platform you're using is using a different networking model and there is",
    "start": "1684340",
    "end": "1690970"
  },
  {
    "text": "no single implementation to rule them all there are ways like the way you live and",
    "start": "1690970",
    "end": "1697480"
  },
  {
    "text": "with bare metal versus clawed it is wildly different so I'm guessing that's why also the",
    "start": "1697480",
    "end": "1703090"
  },
  {
    "text": "current implementations are offered by commercial companies so I think that's one of the reasons why there is no",
    "start": "1703090",
    "end": "1708940"
  },
  {
    "text": "default yeah but that doesn't quite resonate if it's a part of the spec and then you write it in your EML files I",
    "start": "1708940",
    "end": "1715570"
  },
  {
    "text": "find it interesting too I agree like there is it's a core object and there should be probably a reference",
    "start": "1715570",
    "end": "1721149"
  },
  {
    "text": "implementation that works on say mini cube right yeah I agree with you yeah",
    "start": "1721149",
    "end": "1726580"
  },
  {
    "text": "thank you any other questions yes I will repeat",
    "start": "1726580",
    "end": "1732879"
  },
  {
    "text": "your question",
    "start": "1732879",
    "end": "1735389"
  },
  {
    "text": "you would probably yeah so the question was what if like I have like a matrix system like Prometheus and deployed in I",
    "start": "1755830",
    "end": "1762380"
  },
  {
    "text": "restrict the namespace and I have like a multi-tenant cluster where everybody's got their own namespace and the customer",
    "start": "1762380",
    "end": "1767630"
  },
  {
    "text": "wants to access that their own metrics I would deploy I don't know my own custom",
    "start": "1767630",
    "end": "1773120"
  },
  {
    "text": "solution or multiple Prometheus instances I don't know problem every",
    "start": "1773120",
    "end": "1784850"
  },
  {
    "text": "wall policy will help you yep yes that question",
    "start": "1784850",
    "end": "1791080"
  },
  {
    "text": "what is that as so the question was did you have any question did we have any discussions about cluster level network",
    "start": "1795560",
    "end": "1801540"
  },
  {
    "text": "policy what does that mean like applies to every pod or something yeah so that",
    "start": "1801540",
    "end": "1810420"
  },
  {
    "text": "is not part of the core API I think the private providers like calico they're enforcing that in their separate",
    "start": "1810420",
    "end": "1817440"
  },
  {
    "text": "implementations and API so I think that's possible with their api's but I don't think there's anything going on with the Koreans core API right now yep",
    "start": "1817440",
    "end": "1826700"
  },
  {
    "text": "okay so the slides are actually on the event page you can go to the event page click the event and download all the",
    "start": "1832340",
    "end": "1838320"
  },
  {
    "text": "slides I'll be also tweeting about them yes question there I use iPad just with",
    "start": "1838320",
    "end": "1846750"
  },
  {
    "text": "a pencil you all right thank you thank you all for coming appreciate [Applause]",
    "start": "1846750",
    "end": "1856590"
  }
]