[
  {
    "text": "so hello everyone thank you so much for joining our Workshop session and welcome",
    "start": "2080",
    "end": "7200"
  },
  {
    "text": "again to litmus Chaos on our Flagship event for the open source project now that I really reflect on how far we have",
    "start": "7200",
    "end": "14599"
  },
  {
    "text": "come with the litmus chaos project I simply cannot thank you guys enough for",
    "start": "14599",
    "end": "19920"
  },
  {
    "text": "making it such a successful project uh so yeah before we even start the workshop I think the Testament to how",
    "start": "19920",
    "end": "27720"
  },
  {
    "text": "chaos has evolved is uh large part to how you folks have contributed and",
    "start": "27720",
    "end": "33840"
  },
  {
    "text": "supported us so we have a token of gratitude from our side um starting with a workshop uh let me just introduce",
    "start": "33840",
    "end": "41239"
  },
  {
    "text": "myself I'm nanan and uh I'm a software engineer working at harness as well as",
    "start": "41239",
    "end": "47520"
  },
  {
    "text": "I'm a maintainer for the litmos chaos project mainly on the darkg site but uh",
    "start": "47520",
    "end": "53239"
  },
  {
    "text": "yeah basically I make sure that all the fults and the documentation is in order",
    "start": "53239",
    "end": "59079"
  },
  {
    "text": "and uh I have Raj Das with me today so Raj would you like to introduce yourself",
    "start": "59079",
    "end": "65280"
  },
  {
    "text": "yeah thanks n hey everyone I'm Raj and I work at harness as as a staff engineer",
    "start": "65280",
    "end": "71400"
  },
  {
    "text": "uh and I also a contributor uh and a maintainer to litmus Kos so I've been",
    "start": "71400",
    "end": "77479"
  },
  {
    "text": "contributing and maintaining litmus Kos from Last 5 Years uh so yeah uh that's all about me thank you thank you so much",
    "start": "77479",
    "end": "85320"
  },
  {
    "text": "Raj so yeah with that let us try to understand the agenda for the next 1 hour we are going to learn about",
    "start": "85320",
    "end": "91600"
  },
  {
    "text": "resilience proves today resilience probes as you understand are a way of",
    "start": "91600",
    "end": "96720"
  },
  {
    "text": "defining your chaos hypothesis and measuring the impact upon your target",
    "start": "96720",
    "end": "102240"
  },
  {
    "text": "application so if that all sounds a little bit gibberish don't worry we have",
    "start": "102240",
    "end": "107520"
  },
  {
    "text": "you covered so yeah we welcome all the beginners we welcome all the intermediates and we also welcome all",
    "start": "107520",
    "end": "113439"
  },
  {
    "text": "the advance you will definitely have a lot to learn today so without further Ado let's actually dive into the",
    "start": "113439",
    "end": "119399"
  },
  {
    "text": "workshop but yeah before that what even is chaos let's talk a little bit about chaos",
    "start": "119399",
    "end": "125640"
  },
  {
    "text": "before we start the workshop in order to understand chaos we need to understand what motivates it so",
    "start": "125640",
    "end": "132879"
  },
  {
    "text": "yeah understanding what is a downtime is a good place what causes a down time and",
    "start": "132879",
    "end": "138680"
  },
  {
    "text": "it's a very important question sure we have all been there and experienced it and perhaps even multiple times but it",
    "start": "138680",
    "end": "145879"
  },
  {
    "text": "never gets easy a downtime has several adver effects for any organization take",
    "start": "145879",
    "end": "152319"
  },
  {
    "text": "instance of slack whose SLA violations led to 8 million payout and Gravely impacted the company's Revenue Wells",
    "start": "152319",
    "end": "159959"
  },
  {
    "text": "Faro the financial giant suffered a power shutdown in our data center due to",
    "start": "159959",
    "end": "165560"
  },
  {
    "text": "smoke which caused a loss of transactions and some direct uh deposit",
    "start": "165560",
    "end": "170599"
  },
  {
    "text": "checks were not deposited so in this case a single hour of downtime costed",
    "start": "170599",
    "end": "175800"
  },
  {
    "text": "them over $100,000 lastly British Airways had to",
    "start": "175800",
    "end": "181080"
  },
  {
    "text": "cancel 400 flights which led 75,000 passengers getting stranded and costed",
    "start": "181080",
    "end": "187400"
  },
  {
    "text": "them over 100 million in losses so in this case it was a debugging issue in",
    "start": "187400",
    "end": "192519"
  },
  {
    "text": "one server that cascaded to other servers which impacted in the billing systems and of course very recently we",
    "start": "192519",
    "end": "200159"
  },
  {
    "text": "also remember the crowd strike outage which caused over 8.5 million Windows",
    "start": "200159",
    "end": "205599"
  },
  {
    "text": "devices to be completely unusable and caused a loss of over $5.4 billion and",
    "start": "205599",
    "end": "212840"
  },
  {
    "text": "that's the figure only for the Fortune 500 companies therefore a downtime is",
    "start": "212840",
    "end": "218760"
  },
  {
    "text": "often a result of combination of issues as we understood so with ever increasing",
    "start": "218760",
    "end": "224959"
  },
  {
    "text": "complexity of cloud native microservice applications the question is how can we ensure that our distributed systems",
    "start": "224959",
    "end": "232159"
  },
  {
    "text": "always withstand the adverse and potentially unforeseen situations how",
    "start": "232159",
    "end": "237879"
  },
  {
    "text": "can we determine with confence that the resiliency of an application is",
    "start": "237879",
    "end": "244400"
  },
  {
    "text": "withstanding given the adversity of the situations so let us actually try to",
    "start": "244400",
    "end": "251000"
  },
  {
    "text": "better understand it in context of what are the existing solutions for these",
    "start": "251000",
    "end": "256720"
  },
  {
    "text": "problems and the question that we should be asking ourselves is why are we not better at managing down times and there",
    "start": "256720",
    "end": "264160"
  },
  {
    "text": "are majorly three reasons for this as we identified it first of all the microservices are prone to down times",
    "start": "264160",
    "end": "271520"
  },
  {
    "text": "while one can prepare for the apparent causes that need attention no one can fully anticipate an overwhelming",
    "start": "271520",
    "end": "277840"
  },
  {
    "text": "downtime before it actually takes place since there are a plethora of ways in",
    "start": "277840",
    "end": "282919"
  },
  {
    "text": "which things can go wrong and that's where chaos engineering provides a good alternative it provides a way in",
    "start": "282919",
    "end": "290320"
  },
  {
    "text": "uncovering the weaknesses in a system and becoming better prepared and managing these various scenarios as",
    "start": "290320",
    "end": "296440"
  },
  {
    "text": "we'll learn later secondly chaos Fe scenarios can be difficult to run while",
    "start": "296440",
    "end": "303000"
  },
  {
    "text": "ensuring the safety of your target resources and often there isn't a good culture around it as well which makes it",
    "start": "303000",
    "end": "309680"
  },
  {
    "text": "even more difficult to implement and scale lastly as more volume of code gets",
    "start": "309680",
    "end": "316000"
  },
  {
    "text": "pushed over time in any organization it becomes very difficult to assess the",
    "start": "316000",
    "end": "321240"
  },
  {
    "text": "system against the weaknesses at scale due to the lack of a good cic pipeline",
    "start": "321240",
    "end": "326759"
  },
  {
    "text": "of chaos integration and this integration is definitely required at the development",
    "start": "326759",
    "end": "332919"
  },
  {
    "text": "stage as well as in a Sr or a later stage where you can scale it up",
    "start": "332919",
    "end": "338039"
  },
  {
    "text": "effectively so this results in in a failure to effectively uh measure the",
    "start": "338039",
    "end": "343960"
  },
  {
    "text": "impact of the faults automatically at scale which in turn causes difficulty in",
    "start": "343960",
    "end": "349960"
  },
  {
    "text": "anticipating the resilience of the application so let's try to understand",
    "start": "349960",
    "end": "355319"
  },
  {
    "text": "this problem in a better context now consider this your application now",
    "start": "355319",
    "end": "361199"
  },
  {
    "text": "being Cloud native stands a top of other uh plethora of other services that",
    "start": "361199",
    "end": "367360"
  },
  {
    "text": "determines its functioning and resiliency so you have your application",
    "start": "367360",
    "end": "372919"
  },
  {
    "text": "dependencies then the other Cloud native Services provisioning the underlying",
    "start": "372919",
    "end": "378039"
  },
  {
    "text": "infrastructure then the kubernetes services itself and lastly the platform",
    "start": "378039",
    "end": "383599"
  },
  {
    "text": "on which your application is deployed so as you understand failure in any one of",
    "start": "383599",
    "end": "388840"
  },
  {
    "text": "these services can cause your entire application to not be able to cope up the problem is only accentuated as more",
    "start": "388840",
    "end": "396479"
  },
  {
    "text": "amount of code is shipped more frequently at a weekly or even shorter Cadence which is expected to run in a",
    "start": "396479",
    "end": "404560"
  },
  {
    "text": "different environments so this unpredictability of",
    "start": "404560",
    "end": "410039"
  },
  {
    "text": "the application behavior is the prime cause for service outages since there is",
    "start": "410039",
    "end": "415199"
  },
  {
    "text": "no reliable way to know how our application will behave when subject ug at to an unanticipated",
    "start": "415199",
    "end": "422319"
  },
  {
    "text": "situation so here's where chaos engineering provides a way to",
    "start": "422319",
    "end": "427720"
  },
  {
    "text": "effectively mitigate as well as assess your application's",
    "start": "427720",
    "end": "432800"
  },
  {
    "text": "resiliency and how does it work well chaos engineering is a series of steps",
    "start": "432800",
    "end": "438440"
  },
  {
    "text": "which you do uh iteratively in accordance to how your",
    "start": "438440",
    "end": "443840"
  },
  {
    "text": "application uh resilience uh comes out to be so in the very first step you",
    "start": "443840",
    "end": "450000"
  },
  {
    "text": "select a system to test so let's say you have an application that is running in kubernetes a cloud native application",
    "start": "450000",
    "end": "457120"
  },
  {
    "text": "and you want to test a certain aspect of that application so in accordance to",
    "start": "457120",
    "end": "462720"
  },
  {
    "text": "what you want to test you will select a chaos experiment so you will you will",
    "start": "462720",
    "end": "468400"
  },
  {
    "text": "you should be able to like choose a chaos experiment from a wide variety of experiments which will help you in turn",
    "start": "468400",
    "end": "475440"
  },
  {
    "text": "create diverse chaos scenarios then you you will run those set of chaos experiments on your target",
    "start": "475440",
    "end": "482919"
  },
  {
    "text": "application in order to prove your hypothesis if your hypothesis stands",
    "start": "482919",
    "end": "489720"
  },
  {
    "text": "that is upon analysis when you will see if it stands or not uh if your",
    "start": "489720",
    "end": "494960"
  },
  {
    "text": "hypothesis stands then it basically means that your application is resilient that's a good news because your",
    "start": "494960",
    "end": "500960"
  },
  {
    "text": "application is now ready to withstand any impact that is caused by the kind of",
    "start": "500960",
    "end": "506840"
  },
  {
    "text": "impact that is caused uh by your experiment however if your hypothesis fails if",
    "start": "506840",
    "end": "513800"
  },
  {
    "text": "whatever you were expecting doesn't stand true then you essentially start from the beginning again you decide upon",
    "start": "513800",
    "end": "521080"
  },
  {
    "text": "the kind of test that you want to perform after making sure that you are making some changes to your application",
    "start": "521080",
    "end": "528720"
  },
  {
    "text": "such that it is able to now withstand the chaos uh faults that you had selected earlier so yeah it's basically",
    "start": "528720",
    "end": "536839"
  },
  {
    "text": "a long process where you are trying to reach to a point where your applications",
    "start": "536839",
    "end": "542959"
  },
  {
    "text": "are healthy and they are able to withstand the uncertain events that may happen during the deployment of the",
    "start": "542959",
    "end": "550440"
  },
  {
    "text": "application so if that sounds like a lot then the question is how can you",
    "start": "550440",
    "end": "555959"
  },
  {
    "text": "simplify this process because chaos Engineering in its fundamental assesses the application's resiliency at scale",
    "start": "555959",
    "end": "563560"
  },
  {
    "text": "and you need to do it very frequently but the question is how can you do it effectively how can make the process",
    "start": "563560",
    "end": "570360"
  },
  {
    "text": "simpler well that's where lmus chaos can help you lmus chaos is basically nothing",
    "start": "570360",
    "end": "578000"
  },
  {
    "text": "but a chaos engineering tool that helps you perform chaos engineering into Cloud",
    "start": "578000",
    "end": "583120"
  },
  {
    "text": "native environments so uh what does a good chaos engineering implementation even",
    "start": "583120",
    "end": "589959"
  },
  {
    "text": "look like well as far as a general best practices go chaos engineering is a",
    "start": "589959",
    "end": "595240"
  },
  {
    "text": "culture oriented approach which Finds Its place as part of the devop Str practices and hence developers and",
    "start": "595240",
    "end": "601560"
  },
  {
    "text": "assari should work together for the best results while developers should run the",
    "start": "601560",
    "end": "607000"
  },
  {
    "text": "experiments from an early stage in the development and slowly scale up to cover",
    "start": "607000",
    "end": "612880"
  },
  {
    "text": "all the different kind of chaos scenarios that are possible Sr should focus on how to make the chaos",
    "start": "612880",
    "end": "619120"
  },
  {
    "text": "engineering practices scalable enough to run into the cicd pipelines as well as",
    "start": "619120",
    "end": "625079"
  },
  {
    "text": "execute the set test within the staging and eventually in the production",
    "start": "625079",
    "end": "630839"
  },
  {
    "text": "environment also it is Paramount to have a robust set of chaos experiments that can cover all the different kinds of",
    "start": "630839",
    "end": "637920"
  },
  {
    "text": "failures that you potentially might want to inject in your application just for an example you might want to inject",
    "start": "637920",
    "end": "644120"
  },
  {
    "text": "Network faults you might want to inject uh resource uh Spike fall such as CPU",
    "start": "644120",
    "end": "649760"
  },
  {
    "text": "outage or memory uh constraints so these all uh faults should be available to you",
    "start": "649760",
    "end": "656760"
  },
  {
    "text": "and lastly you also need a good observe uh you need to be able to uh observe the",
    "start": "656760",
    "end": "663240"
  },
  {
    "text": "impact of the chaos throughout the system and hence your chaos engineering tools should provide with enough",
    "start": "663240",
    "end": "669399"
  },
  {
    "text": "insights that can help you understand if the application is deviating from its steady state in an unanticipated manner",
    "start": "669399",
    "end": "676839"
  },
  {
    "text": "or not so basically litmus chaos can help you achieve all of these objectives",
    "start": "676839",
    "end": "685440"
  },
  {
    "text": "lmus chaos is helpful for both developers and sres while developers can",
    "start": "685440",
    "end": "691920"
  },
  {
    "text": "start from an early stage and Implement their chaos experiments uh for all the",
    "start": "691920",
    "end": "697600"
  },
  {
    "text": "different kind of scenarios that they might face during the deployment of the application they can also ensure that",
    "start": "697600",
    "end": "704440"
  },
  {
    "text": "they are left Shifting the resilience so this helps in building up the application's resilience from the ground",
    "start": "704440",
    "end": "711639"
  },
  {
    "text": "up as the application is build up incrementally on the other hand sres can",
    "start": "711639",
    "end": "717440"
  },
  {
    "text": "make sure that the chaos pipelines that are being developed by the developers",
    "start": "717440",
    "end": "722639"
  },
  {
    "text": "can be scaled up for all the different microservices they can ensure that the",
    "start": "722639",
    "end": "727800"
  },
  {
    "text": "adoption of the chaos Falls is at a greater scale and throughout all the",
    "start": "727800",
    "end": "733199"
  },
  {
    "text": "microservices that are present as part of the application deployment as well as they can implement the chaos assisted uh",
    "start": "733199",
    "end": "740720"
  },
  {
    "text": "observ that is they can ensure that the different metrics that are required for",
    "start": "740720",
    "end": "746760"
  },
  {
    "text": "observing the result of experiments are implemented properly or not as we'll",
    "start": "746760",
    "end": "752639"
  },
  {
    "text": "understand in our Workshop better it basically means that you should have apms you should have enough amount of",
    "start": "752639",
    "end": "759720"
  },
  {
    "text": "logs and uh events for kubernetes in order to assess how your application is",
    "start": "759720",
    "end": "766519"
  },
  {
    "text": "performed so what does litmus chaos provide you at the heart of it litmus",
    "start": "766519",
    "end": "772279"
  },
  {
    "text": "chaos as a tool provides you with a robust set of experiments and it is a",
    "start": "772279",
    "end": "778040"
  },
  {
    "text": "lot of different experiment spanning not only across kubernetes but also different Cloud native uh platforms such",
    "start": "778040",
    "end": "785279"
  },
  {
    "text": "as AWS gcp Azure uh kubernetes included",
    "start": "785279",
    "end": "790920"
  },
  {
    "text": "and also bare metal and so on you also get the support of chaos workflows which",
    "start": "790920",
    "end": "797399"
  },
  {
    "text": "provides you a declarative way to define your chaos intent so that you can Define",
    "start": "797399",
    "end": "804160"
  },
  {
    "text": "all of the chaos uh faults that you want to Target against a specific application",
    "start": "804160",
    "end": "809360"
  },
  {
    "text": "in a simple and declarative manner it also allows you to collaborate with your team so that you can Define different",
    "start": "809360",
    "end": "816560"
  },
  {
    "text": "ACLS and role based access controls and therefore you this helps you in",
    "start": "816560",
    "end": "822079"
  },
  {
    "text": "containing the blast radius by providing the appropriate amount of access to the",
    "start": "822079",
    "end": "827320"
  },
  {
    "text": "uh respective stakeholders lastly you can also templae your experiments you",
    "start": "827320",
    "end": "832880"
  },
  {
    "text": "can save them for later as well as you can share them with your teammates so",
    "start": "832880",
    "end": "838079"
  },
  {
    "text": "what this basically results into is you can drastically improve your recovery",
    "start": "838079",
    "end": "843440"
  },
  {
    "text": "time as you will be better prepared even before a outage happens your teams can",
    "start": "843440",
    "end": "848959"
  },
  {
    "text": "be better prepared at handling the outages since they would have practiced that chaos scenario much before it also",
    "start": "848959",
    "end": "857199"
  },
  {
    "text": "helps you in reducing the cloud costs so for example if you have a Dr setup a",
    "start": "857199",
    "end": "863360"
  },
  {
    "text": "disaster recovery setup you can validate it using chaos engineering using litmus",
    "start": "863360",
    "end": "868639"
  },
  {
    "text": "chaos and therefore you can be certain that whether the resources that you're",
    "start": "868639",
    "end": "873800"
  },
  {
    "text": "provisioning are sufficient and you're not over provisioning the resources in your disaster recovery and this in terms",
    "start": "873800",
    "end": "880959"
  },
  {
    "text": "helps you greatly save Cloud costs and this over the time helps in building a",
    "start": "880959",
    "end": "888160"
  },
  {
    "text": "resilient application and develops confidence in your application which in turns results in good business revenue",
    "start": "888160",
    "end": "896279"
  },
  {
    "text": "and it helps in significantly reducing service outages so yeah that's a lot of theory",
    "start": "896279",
    "end": "903320"
  },
  {
    "text": "about lus chaos now it's time for a workshop so as part of the workshop we",
    "start": "903320",
    "end": "909600"
  },
  {
    "text": "have a lot of things planned for you I'll just go to my litmus chaos panel",
    "start": "909600",
    "end": "914839"
  },
  {
    "text": "here so you can see that this is the litmus UI as you land in the litmus UI you will get to see such a dashboard for",
    "start": "914839",
    "end": "921800"
  },
  {
    "text": "the newcomers don't worry I'll walk you through the different screens of the litmus chos now so every litmus chos has",
    "start": "921800",
    "end": "928560"
  },
  {
    "text": "a problem project eventually uh when you are creating your litmus chaos when you are installing it in the beginning you",
    "start": "928560",
    "end": "934639"
  },
  {
    "text": "will get a default project which is the admin project actually so here in we can see at a glance that what are the",
    "start": "934639",
    "end": "941000"
  },
  {
    "text": "resources and different uh attributes of our uh project we can see that we have",
    "start": "941000",
    "end": "946680"
  },
  {
    "text": "quite a few recent experiment runs which we'll see in just a short while and uh",
    "start": "946680",
    "end": "952160"
  },
  {
    "text": "we have a chaos infrastructure also upon uh inside the total number of",
    "start": "952160",
    "end": "957680"
  },
  {
    "text": "infrastructures we see one we'll understand what is a chaos infrastructure as well as a chaos herbest there under the chaos",
    "start": "957680",
    "end": "964839"
  },
  {
    "text": "experiments tab we can see that we have the five experiments that we got to see in the overview page we'll dive into",
    "start": "964839",
    "end": "971240"
  },
  {
    "text": "them shortly but before that we have something known as an environment an environment is nothing but a way to",
    "start": "971240",
    "end": "977240"
  },
  {
    "text": "package the different targets that you have inside your uh Target environment",
    "start": "977240",
    "end": "982720"
  },
  {
    "text": "so let's say that uh I want to Target various different kubernetes clusters so",
    "start": "982720",
    "end": "988720"
  },
  {
    "text": "each each one of them can be grouped under different environments so we have only one environment right now named",
    "start": "988720",
    "end": "994959"
  },
  {
    "text": "proda if we see inside we can see it's called the boutique infra but even before that what is a chaos",
    "start": "994959",
    "end": "1001240"
  },
  {
    "text": "infrastructure a chaos infrastructure is nothing but a piece of uh agent that",
    "start": "1001240",
    "end": "1008360"
  },
  {
    "text": "basically helps in connecting the litmus control plane to inject chaos into your",
    "start": "1008360",
    "end": "1014720"
  },
  {
    "text": "target applications in your uh Target execution plane so essentially here in",
    "start": "1014720",
    "end": "1020680"
  },
  {
    "text": "our context Boutique infra is nothing but a kubernetes application which is",
    "start": "1020680",
    "end": "1026400"
  },
  {
    "text": "basically running in a kubernetes cluster and boutique infra helps us Target that uh application as we'll see",
    "start": "1026400",
    "end": "1034720"
  },
  {
    "text": "but more importantly Boutique infra is an agent which uh to which the litmus",
    "start": "1034720",
    "end": "1040438"
  },
  {
    "text": "control plane can communicate it can ask it to hey run uh XYZ experiment upon the",
    "start": "1040439",
    "end": "1047839"
  },
  {
    "text": "uh application that we are targeting so yeah it helps you to basically scale up",
    "start": "1047839",
    "end": "1053320"
  },
  {
    "text": "your chaos experiment across different targets so we have only one chaos",
    "start": "1053320",
    "end": "1058360"
  },
  {
    "text": "infrastructure right now but similarly you can connect more chaos infrastructures so uh we will see how",
    "start": "1058360",
    "end": "1065960"
  },
  {
    "text": "this chaos infrastructure looks like in practice uh but before that we also have",
    "start": "1065960",
    "end": "1071360"
  },
  {
    "text": "something known as residence probes aha this is the heart of our Workshop today",
    "start": "1071360",
    "end": "1077320"
  },
  {
    "text": "we'll learn how to Leverage proofs to effectively measure your chaos hypothesis and how you can uh better uh",
    "start": "1077320",
    "end": "1086039"
  },
  {
    "text": "you can better develop probes that will be effective in measuring your chaos inent so we have quite a few probes here",
    "start": "1086039",
    "end": "1093559"
  },
  {
    "text": "as you can see each one of those probes has a type such as sgtp probe or",
    "start": "1093559",
    "end": "1098799"
  },
  {
    "text": "Prometheus probe or CMD probe I'll keep that a secret Raj will tell us later",
    "start": "1098799",
    "end": "1103840"
  },
  {
    "text": "that what these are about but basically a probe is nothing but a way to measure the chaos intent as raj will tell us",
    "start": "1103840",
    "end": "1111240"
  },
  {
    "text": "later next up we have chaos Hub a chaos Hub is a Cornerstone in how you practice",
    "start": "1111240",
    "end": "1118440"
  },
  {
    "text": "chaos engineering because this is where you keep all your chaos experiments and",
    "start": "1118440",
    "end": "1124200"
  },
  {
    "text": "fonts right out of the box you can see that we have 10 chaos experiments that",
    "start": "1124200",
    "end": "1129320"
  },
  {
    "text": "are provided to you by default uh as part of the Enterprise chaos Hub or the",
    "start": "1129320",
    "end": "1134760"
  },
  {
    "text": "default chaos Hub and you can see the different chaos fault here so we have 51",
    "start": "1134760",
    "end": "1141360"
  },
  {
    "text": "chaos faults uh in this uh chaos Hub already which are provided to you by",
    "start": "1141360",
    "end": "1146440"
  },
  {
    "text": "default and it enables you to you know Target your kios intent across a variety",
    "start": "1146440",
    "end": "1151880"
  },
  {
    "text": "of different uh Cloud native platforms so that includes AWS Azure gcp",
    "start": "1151880",
    "end": "1158720"
  },
  {
    "text": "kubernetes spring boot VMware you name it so yeah that's a fair uh introduction",
    "start": "1158720",
    "end": "1165320"
  },
  {
    "text": "to the litmus chios UI now let us actually try to see a dashboard and try",
    "start": "1165320",
    "end": "1171039"
  },
  {
    "text": "to understand what does it do well we have the boutique application the",
    "start": "1171039",
    "end": "1176320"
  },
  {
    "text": "boutique application is nothing but a cloud native application which is deployed into kubernetes as I told you",
    "start": "1176320",
    "end": "1182120"
  },
  {
    "text": "before and we'll see that as raj will describe it but before that we have an Absol dashboard here and as you can see",
    "start": "1182120",
    "end": "1189600"
  },
  {
    "text": "it's nothing but a grafana dashboard I can spill some beans here and tell that it is being powered from a Prometheus",
    "start": "1189600",
    "end": "1196039"
  },
  {
    "text": "time series database so uh let us try to understand that what are we measuring here as part of uh this Prometheus uh",
    "start": "1196039",
    "end": "1205280"
  },
  {
    "text": "excuse me in this grafana dashboard we can see that we have a pro success percentage which basically determines",
    "start": "1205280",
    "end": "1212000"
  },
  {
    "text": "that whether our application is reachable or not so here we are measuring it in terms of percentage 100%",
    "start": "1212000",
    "end": "1219000"
  },
  {
    "text": "means that we are able to access our application and everything is healthy next up we have the node CPU utilization",
    "start": "1219000",
    "end": "1227400"
  },
  {
    "text": "it basically says that how much of our total node CPU capacity are we using",
    "start": "1227400",
    "end": "1233360"
  },
  {
    "text": "right now so as you can see our utilization lies somewhere between 15 and 16% so that is uh the stady state",
    "start": "1233360",
    "end": "1241280"
  },
  {
    "text": "metric that we have uh for how much node is being consumed by our uh kubernetes",
    "start": "1241280",
    "end": "1248880"
  },
  {
    "text": "cluster where we have installed our Target that is our chaos",
    "start": "1248880",
    "end": "1254000"
  },
  {
    "text": "infrastructure next up we have these uh graphs so we have on the left hand side",
    "start": "1254000",
    "end": "1260400"
  },
  {
    "text": "the QPS and on the right hand side the access duration QPS corresponds to",
    "start": "1260400",
    "end": "1265880"
  },
  {
    "text": "queries per second and it corresponds to how many queries per second are we able",
    "start": "1265880",
    "end": "1270960"
  },
  {
    "text": "to do for a given microservice so we have quite a few microservices as part",
    "start": "1270960",
    "end": "1277200"
  },
  {
    "text": "of the uh Boutique application as I said it's a microservice application so there are different microservices so one of",
    "start": "1277200",
    "end": "1284320"
  },
  {
    "text": "them is let's say frontend microservice and we can see that currently the number of QPS is averaging between 100 and 150",
    "start": "1284320",
    "end": "1292760"
  },
  {
    "text": "operations per second which means that we are able to reach out to that microservice applications this many",
    "start": "1292760",
    "end": "1299080"
  },
  {
    "text": "times in a second on the other hand you can see also in the legend that there is a",
    "start": "1299080",
    "end": "1304640"
  },
  {
    "text": "yellow marking over here and that determines the failure rate or more",
    "start": "1304640",
    "end": "1309960"
  },
  {
    "text": "specifically the 99 percentile failure rate when we are not able to actually reach the application so uh we'll later",
    "start": "1309960",
    "end": "1317760"
  },
  {
    "text": "see that how that plays out when we are actually injecting the chaos on the right hand side we have the access",
    "start": "1317760",
    "end": "1324240"
  },
  {
    "text": "duration an access duration can be roughly corresponded to the latency so",
    "start": "1324240",
    "end": "1330000"
  },
  {
    "text": "we can see that it takes us close to 32 and 36 millisecond to access the",
    "start": "1330000",
    "end": "1337120"
  },
  {
    "text": "frontend uh microservice right now so that is the access duration or the latency uh with which we are able to",
    "start": "1337120",
    "end": "1344159"
  },
  {
    "text": "access the frontend microservice similarly we have have other microservices as well namely cart",
    "start": "1344159",
    "end": "1352200"
  },
  {
    "text": "or product or checkout and then we also have the access uh duration for the same",
    "start": "1352200",
    "end": "1358279"
  },
  {
    "text": "you name it so yeah with that uh I'll invite Raj to you know decompose these",
    "start": "1358279",
    "end": "1365279"
  },
  {
    "text": "different parts and show you under the hood that how do these microservices fit in together within kubernetes and also",
    "start": "1365279",
    "end": "1372159"
  },
  {
    "text": "show you the boutique application in all its Glory so yeah with that Raj over to you",
    "start": "1372159",
    "end": "1378919"
  },
  {
    "text": "uh hey hey Nan hey everyone thanks nanan for the great introduction I learned a lot I didn't know much some some areas",
    "start": "1378919",
    "end": "1386400"
  },
  {
    "text": "where I didn't know so thanks for the great great explanation uh let me quickly share uh the",
    "start": "1386400",
    "end": "1393360"
  },
  {
    "text": "screen yeah uh hopefully my screen is visible right",
    "start": "1393360",
    "end": "1399559"
  },
  {
    "text": "uh can you yeah yeah uh so yeah uh so let's talk little bit uh more on the",
    "start": "1399559",
    "end": "1406400"
  },
  {
    "text": "resiliency probes so res resy probes are one of the key features in litmus chos",
    "start": "1406400",
    "end": "1411640"
  },
  {
    "text": "so it is designed to assess the impact of chos experiment when the systems are",
    "start": "1411640",
    "end": "1416760"
  },
  {
    "text": "under test when you execute experiment when these are Under test these are very useful the goal of these uh proves is to",
    "start": "1416760",
    "end": "1423799"
  },
  {
    "text": "continuously validate the system uh is remain resilient or not during the disruption also so the probes are act as",
    "start": "1423799",
    "end": "1432279"
  },
  {
    "text": "a checkpoint that ensure uh critical components are still operational and and",
    "start": "1432279",
    "end": "1437520"
  },
  {
    "text": "it is uh it is meeting the predefined conditions which we set before executing the experiment right and these are as",
    "start": "1437520",
    "end": "1444679"
  },
  {
    "text": "you mentioned like these are pluggable checks uh that can be attached uh during the Kos experiment and we support uh",
    "start": "1444679",
    "end": "1452760"
  },
  {
    "text": "four kinds of probe the first one is HTTP probe so as name suggest the HTTP probe basically validates if an endpoint",
    "start": "1452760",
    "end": "1461000"
  },
  {
    "text": "HTTP endpoint uh is uh is giving us the correct result let's say I am uh I am",
    "start": "1461000",
    "end": "1467960"
  },
  {
    "text": "calling an HTTP endpoint and if the status code is 200 then I'm saying that",
    "start": "1467960",
    "end": "1473200"
  },
  {
    "text": "this probe is passed or failed so uh HTTP probe is supported uh in like https",
    "start": "1473200",
    "end": "1479240"
  },
  {
    "text": "mode also and HTTP mode both and you can compare the values based on the operators and we we check in our demo",
    "start": "1479240",
    "end": "1488000"
  },
  {
    "text": "and the command probe is basically where you can write uh command custom commands also like uh you can also write some Cur",
    "start": "1488000",
    "end": "1495159"
  },
  {
    "text": "commands to call some apis or uh some uh Linux uh uh let's say Linux top command",
    "start": "1495159",
    "end": "1502600"
  },
  {
    "text": "you can use to check if uh uh if the CPU uh is uh having the correct value or not",
    "start": "1502600",
    "end": "1509840"
  },
  {
    "text": "during the execution of experiment and the next one is the Prometheus Pro so Prometheus Pro basically checks the",
    "start": "1509840",
    "end": "1515919"
  },
  {
    "text": "Prometheus uh and checks the promql and it validates the value which we set uh",
    "start": "1515919",
    "end": "1521520"
  },
  {
    "text": "with the operator and based on the condition it makes the pro passed and",
    "start": "1521520",
    "end": "1526960"
  },
  {
    "text": "fail then we have the last one that is the kubernetes probe kubernetes probe is basically uh the it basically checks the",
    "start": "1526960",
    "end": "1534480"
  },
  {
    "text": "kubernetes resources are present or not and based on the condition it uh it uh make make the probe pass and fail so now",
    "start": "1534480",
    "end": "1542520"
  },
  {
    "text": "uh we have uh uh uh we have we can go to the demo so uh in this demo so uh we'll",
    "start": "1542520",
    "end": "1549760"
  },
  {
    "text": "Target one of the uh e-commerce application that is called online boutique application so just a quick uh",
    "start": "1549760",
    "end": "1556559"
  },
  {
    "text": "work through to the product uh so basically it has multiple products you can see and each product uh has",
    "start": "1556559",
    "end": "1562440"
  },
  {
    "text": "different pages and once you go to the pages you can add the item to the cart",
    "start": "1562440",
    "end": "1568120"
  },
  {
    "text": "and once the once you are okay you can place the order so it has lot of microservices behind it so I'll show you",
    "start": "1568120",
    "end": "1575240"
  },
  {
    "text": "the microservices uh so if I go to the boutique name space you can see these are the micros service like card service",
    "start": "1575240",
    "end": "1581279"
  },
  {
    "text": "checkout service Currency Service and like there are approx 19 uh",
    "start": "1581279",
    "end": "1588440"
  },
  {
    "text": "microservices right so we are going to Target one of the microservices and uh check the hypothesis and and check the",
    "start": "1588440",
    "end": "1595320"
  },
  {
    "text": "probe also so uh let's uh before that we have the grafana dashboard as uh nanen",
    "start": "1595320",
    "end": "1600559"
  },
  {
    "text": "mentioned so where we can check the real time data and how the components are",
    "start": "1600559",
    "end": "1606240"
  },
  {
    "text": "performing during the chos so right now you can see everything is green so everything is under the threshold value",
    "start": "1606240",
    "end": "1613159"
  },
  {
    "text": "and these are some of the microservices and each microservice has a query per second Dash dashboard and the access",
    "start": "1613159",
    "end": "1619600"
  },
  {
    "text": "duration dashboard and overall as a probes access uh dashboard right and we can Al we also have a uh system on",
    "start": "1619600",
    "end": "1627480"
  },
  {
    "text": "system or infr level dashboard that is the node uh dashboard right and now we can go to the",
    "start": "1627480",
    "end": "1634679"
  },
  {
    "text": "experiment page so in this experiment uh uh we are going to have four different",
    "start": "1634679",
    "end": "1640840"
  },
  {
    "text": "kind of experiments so the first one is uh to kill the card service network so",
    "start": "1640840",
    "end": "1646000"
  },
  {
    "text": "if you see uh there's a card service right so we are going to uh break the",
    "start": "1646000",
    "end": "1652640"
  },
  {
    "text": "network to the card network service so that uh it it will fail to order or it will fail to proceed from the page to",
    "start": "1652640",
    "end": "1659159"
  },
  {
    "text": "the checkout page right product page to the checkout page so here we have the experiment already pre-configured and if",
    "start": "1659159",
    "end": "1665159"
  },
  {
    "text": "you go inside this experiment we have the Pod network uh loss right so and if",
    "start": "1665159",
    "end": "1671760"
  },
  {
    "text": "you uh open this model or uh the sidebar you can see the app kind is deployment",
    "start": "1671760",
    "end": "1678200"
  },
  {
    "text": "because our application is a is a is a deployment then it is under Boutique name space and how to identify or Target",
    "start": "1678200",
    "end": "1685799"
  },
  {
    "text": "that particular application right we have the label so if I go and uh Cube C",
    "start": "1685799",
    "end": "1691640"
  },
  {
    "text": "get pods minus and boutique show",
    "start": "1691640",
    "end": "1699720"
  },
  {
    "text": "labels right I can find this label right so I'm targeting this uh this this has",
    "start": "1700840",
    "end": "1706039"
  },
  {
    "text": "to be unique otherwise it will Target any random so suppose if it is a common label then it can Target the other uh",
    "start": "1706039",
    "end": "1713080"
  },
  {
    "text": "other uh deployment of P also so we are we going to Target this service card",
    "start": "1713080",
    "end": "1718519"
  },
  {
    "text": "service and that's why we have added the label and uh the next page is the Fault",
    "start": "1718519",
    "end": "1724159"
  },
  {
    "text": "configuration page so where uh we have mentioned like uh for how much duration we want to do the chos so we want to do",
    "start": "1724159",
    "end": "1730679"
  },
  {
    "text": "it for 1 minute 60 seconds uh and uh and the network loss percentage we are going",
    "start": "1730679",
    "end": "1736600"
  },
  {
    "text": "to Target 100% Network so if so 50% means it can pass sometimes and it it",
    "start": "1736600",
    "end": "1744120"
  },
  {
    "text": "can uh it will not pass sometime but with 100% it will block all the network connectivity to uh the card service",
    "start": "1744120",
    "end": "1750799"
  },
  {
    "text": "right and with that we have assigned some uh resiliency points uh so the it's",
    "start": "1750799",
    "end": "1756799"
  },
  {
    "text": "10 by default so we don't have to configure the other properties and",
    "start": "1756799",
    "end": "1761840"
  },
  {
    "text": "quickly we can go the probes so now as I mentioned earlier we have different kind of probes right so let's uh what are the",
    "start": "1761840",
    "end": "1768600"
  },
  {
    "text": "proves we have added in this experiment so in this experiment we have added one network latency check right and another",
    "start": "1768600",
    "end": "1775519"
  },
  {
    "text": "one is xtb check so let's quickly go to the pro page and see what are the values",
    "start": "1775519",
    "end": "1780760"
  },
  {
    "text": "defined in the uh uh in these proes so first one is the Prometheus Pro you can",
    "start": "1780760",
    "end": "1786240"
  },
  {
    "text": "uh see by the type right if I go inside right so I can see there's a",
    "start": "1786240",
    "end": "1792679"
  },
  {
    "text": "Prometheus uh probe configuration and in the Prometheus probe configuration I have mentioned a Prometheus query like",
    "start": "1792679",
    "end": "1799279"
  },
  {
    "text": "uh if the pro derivation is less than uh 20 seconds",
    "start": "1799279",
    "end": "1804440"
  },
  {
    "text": "right and uh it should call this Prometheus endpoint which is also available in this cluster and it will",
    "start": "1804440",
    "end": "1811080"
  },
  {
    "text": "call this Prometheus endpoint it will query this from from query and if the value is less than 202 it will pass the",
    "start": "1811080",
    "end": "1817320"
  },
  {
    "text": "probe otherwise it will fail the probe right so that is the condition we have set and these are some of the values we",
    "start": "1817320",
    "end": "1823519"
  },
  {
    "text": "can set like what is the time out of the probe like how many time we have to attempt if the probe fails or if even if",
    "start": "1823519",
    "end": "1829200"
  },
  {
    "text": "prob fail how many time how many times we have to uh uh check this probe then",
    "start": "1829200",
    "end": "1835559"
  },
  {
    "text": "interval uh like if the after the first atem how what is the interval between",
    "start": "1835559",
    "end": "1840679"
  },
  {
    "text": "the second retri so and and these are some of the values which we can uh skip",
    "start": "1840679",
    "end": "1846159"
  },
  {
    "text": "uh for now and let's go to the next probe which we",
    "start": "1846159",
    "end": "1851480"
  },
  {
    "text": "added so the next Pro is the card service HTTP check so cart service HTTP",
    "start": "1851559",
    "end": "1857559"
  },
  {
    "text": "check is HTTP kind of a probe and if I go inside this",
    "start": "1857559",
    "end": "1863039"
  },
  {
    "text": "probe you can you can see uh I'm calling uh a HTTP endpoint this is the fqdn and",
    "start": "1863159",
    "end": "1871639"
  },
  {
    "text": "we are checking uh a get uh so because it's uh publicly available so we are doing a get uh get method and we",
    "start": "1871639",
    "end": "1878360"
  },
  {
    "text": "checking if the response is 200 or not if it is 200 then it will pass the pro",
    "start": "1878360",
    "end": "1883399"
  },
  {
    "text": "let it will fill the pro so these are the two proves we have added to this experiment and let's trigger this",
    "start": "1883399",
    "end": "1890080"
  },
  {
    "text": "experiment and see if the proof pass the field right and yeah uh so this is so this is the experiment uh C kill card",
    "start": "1890080",
    "end": "1897039"
  },
  {
    "text": "service network so we are going to break the network of card service so let me trigger this one and it will take few",
    "start": "1897039",
    "end": "1904440"
  },
  {
    "text": "time uh few uh few time to execute so uh it has multiple steps like you can see",
    "start": "1904440",
    "end": "1910519"
  },
  {
    "text": "first it will install the fault configuration to the cluster right and",
    "start": "1910519",
    "end": "1916399"
  },
  {
    "text": "uh once it is installed so is installing now so once it installed then it will do the actual uh chos that is the Pod",
    "start": "1916399",
    "end": "1923159"
  },
  {
    "text": "Network loss on the card service then after that it will uh it'll try to clean up all the resources uh from that uh",
    "start": "1923159",
    "end": "1931000"
  },
  {
    "text": "from the cluster right so it'll it'll take a few seconds maybe few minute uh",
    "start": "1931000",
    "end": "1937120"
  },
  {
    "text": "meanwhile do we have any questions nanan uh we can take I saw one question from",
    "start": "1937120",
    "end": "1944840"
  },
  {
    "text": "fenu darapuri so he asked that shift left resiliency is a good idea",
    "start": "1944840",
    "end": "1950720"
  },
  {
    "text": "what are the driving principle to achieve this and what are the outcomes and how to track them um I tried to",
    "start": "1950720",
    "end": "1957279"
  },
  {
    "text": "answer it but let me just answer it for the greater audience as well the whole idea behind left Shifting The Residency",
    "start": "1957279",
    "end": "1964320"
  },
  {
    "text": "is to introduce the idea of resiliency early on right from the development stage and how does that help us well",
    "start": "1964320",
    "end": "1972600"
  },
  {
    "text": "left shifting resiliency will make sure that we are introducing the idea of",
    "start": "1972600",
    "end": "1978039"
  },
  {
    "text": "resiliency from the ground up so we have right now different ways of ensuring",
    "start": "1978039",
    "end": "1983720"
  },
  {
    "text": "that our code is efficient and it withstands in our production such as we",
    "start": "1983720",
    "end": "1989760"
  },
  {
    "text": "Define unit test uh we basically make sure there are less number of vulnerabilities why not add chaos tests",
    "start": "1989760",
    "end": "1997120"
  },
  {
    "text": "as well as part of your validations so this will make sure that your application is resilient from ground up",
    "start": "1997120",
    "end": "2004399"
  },
  {
    "text": "and it kind of offsets the responsibilities that are us ually right shifted often we think that it's a it's",
    "start": "2004399",
    "end": "2012279"
  },
  {
    "text": "the respon responsibilities of sres to determine the resiliency of an",
    "start": "2012279",
    "end": "2017799"
  },
  {
    "text": "application to make sure that the application is running but I would like to disagree with that statement it is",
    "start": "2017799",
    "end": "2024080"
  },
  {
    "text": "the it is the common goal of both developers and sres to work hand inand",
    "start": "2024080",
    "end": "2029279"
  },
  {
    "text": "in order to make chaos a success so if we have the different chaos experiments",
    "start": "2029279",
    "end": "2034480"
  },
  {
    "text": "right up from the beginning uh of our development cycle then the sres should",
    "start": "2034480",
    "end": "2039639"
  },
  {
    "text": "be able to scale them up for the other parts of their application as well let's",
    "start": "2039639",
    "end": "2045760"
  },
  {
    "text": "say you have a pre-pro environment you have a QA environment you have a prod environment then the sres will be able",
    "start": "2045760",
    "end": "2051398"
  },
  {
    "text": "to better take up those uh uh those pipelines and able to introduce chaos",
    "start": "2051399",
    "end": "2058118"
  },
  {
    "text": "into those environments similarly if you are able to uh like free of the SR they",
    "start": "2058119",
    "end": "2064358"
  },
  {
    "text": "are also able to improve better obser for your entire application as I quite",
    "start": "2064359",
    "end": "2069440"
  },
  {
    "text": "often say obsy is the uh foremost pillar of chaos engineering without observ you",
    "start": "2069440",
    "end": "2076118"
  },
  {
    "text": "are just doing Chaos so uh essentially that's what corresponds to a good chaos",
    "start": "2076119",
    "end": "2082320"
  },
  {
    "text": "engineering practice and it definitely impacts in the greater adoptability and",
    "start": "2082320",
    "end": "2088158"
  },
  {
    "text": "success that you gain out of chaos engineering so that is the tangible outcome that you'll see hope that the",
    "start": "2088159",
    "end": "2096118"
  },
  {
    "text": "question uh thank you nanan for answering this question so I I think uh our experiment",
    "start": "2096119",
    "end": "2102440"
  },
  {
    "text": "has started so as you can say as you can see right it has completed I'll go to",
    "start": "2102440",
    "end": "2107839"
  },
  {
    "text": "the status later so but we can see the statuses in the grafana right so within",
    "start": "2107839",
    "end": "2113680"
  },
  {
    "text": "that last five minutes right so we can see there is a downtime right because we killed the network and the pro success",
    "start": "2113680",
    "end": "2119560"
  },
  {
    "text": "percentage went down from 100 to0 you can see the uh dip right and the there's",
    "start": "2119560",
    "end": "2125240"
  },
  {
    "text": "annotation of chaos over it so you can see the that there's a actual Kos happened right and it has now come back",
    "start": "2125240",
    "end": "2131320"
  },
  {
    "text": "to the after we killed the network it came back to the original state right so",
    "start": "2131320",
    "end": "2136480"
  },
  {
    "text": "let's check the uh experiment what why it is uh completed with failure right so",
    "start": "2136480",
    "end": "2142839"
  },
  {
    "text": "this stat is completed with failure and I'll just quickly go back and refresh it yeah so you can see the middle step has",
    "start": "2142839",
    "end": "2149800"
  },
  {
    "text": "been failed so the first probe failed uh because you can see uh the Prometheus",
    "start": "2149800",
    "end": "2156119"
  },
  {
    "text": "query uh it it got 445 seconds something uh and it is expecting like uh 20",
    "start": "2156119",
    "end": "2162720"
  },
  {
    "text": "seconds uh it should less than 20 seconds right but our duration is like",
    "start": "2162720",
    "end": "2167960"
  },
  {
    "text": "because of the uh time out it it went from like I'm uh around 44",
    "start": "2167960",
    "end": "2175119"
  },
  {
    "text": "444 seconds right so uh due to the the condition uh it failed uh the",
    "start": "2175119",
    "end": "2183119"
  },
  {
    "text": "condition didn't met and it failed and the second one why it failed is because we are trying to call this endpoint HTTP",
    "start": "2183119",
    "end": "2189440"
  },
  {
    "text": "endpoint and because of the time out it like the default time out was 10 seconds",
    "start": "2189440",
    "end": "2194800"
  },
  {
    "text": "maybe so due to the time out it got into error state or or it failed due to the",
    "start": "2194800",
    "end": "2201119"
  },
  {
    "text": "time out right so these two probes fail ultimately the experiment field so with this experiment we validated the the",
    "start": "2201119",
    "end": "2207319"
  },
  {
    "text": "probe uh during the experiment the probe uh should met the condition otherwise uh",
    "start": "2207319",
    "end": "2213920"
  },
  {
    "text": "uh otherwise the it will impact uh the real micros servic right so this is one of the experiment",
    "start": "2213920",
    "end": "2220760"
  },
  {
    "text": "and the second experiment we can take is uh uh the spike uh increase the CPU",
    "start": "2220760",
    "end": "2227000"
  },
  {
    "text": "Spike of the card service we'll do a spike in CPU in the card service so let",
    "start": "2227000",
    "end": "2233359"
  },
  {
    "text": "me again go to the experiment and uh if you see this experiment right we are",
    "start": "2233359",
    "end": "2239640"
  },
  {
    "text": "targeting the same application uh card service the name space is Boutique and deployment and if I uh expand the tune",
    "start": "2239640",
    "end": "2248560"
  },
  {
    "text": "fults we can see the duration is again 60 seconds we are doing it for uh one core",
    "start": "2248560",
    "end": "2254040"
  },
  {
    "text": "CPU and and these are some of the default values we don't have to reconfigure it and uh in the probes if",
    "start": "2254040",
    "end": "2260680"
  },
  {
    "text": "you see uh we have one uh uh probe that basically checks the HTTP which we already added in the previous experiment",
    "start": "2260680",
    "end": "2269480"
  },
  {
    "text": "basically checks the HTTP end point of the card service if it is working fine before the test because it it has",
    "start": "2269480",
    "end": "2274920"
  },
  {
    "text": "different kind of modes that I'll go after this so uh this is doing a start",
    "start": "2274920",
    "end": "2280440"
  },
  {
    "text": "of the uh test it is checking the HTTP probe and on the Kos it is basically",
    "start": "2280440",
    "end": "2286400"
  },
  {
    "text": "checking the CPU uses so let let's go to this gr and uh let's expand the",
    "start": "2286400",
    "end": "2292040"
  },
  {
    "text": "details so uh if you see this CPU uses right it's a uh it's a CMD Pro uh so CMD",
    "start": "2292040",
    "end": "2301000"
  },
  {
    "text": "uh we can add any commands right Cube Cal command also we can add so in this Cube command you can see we are doing a",
    "start": "2301000",
    "end": "2306880"
  },
  {
    "text": "cube Cal top and uh we are getting the CPU right if the CPU is less than a",
    "start": "2306880",
    "end": "2312839"
  },
  {
    "text": "certain threshold so I think the threshold will be visible after we edit let's say the threshold is 30 uh uhu 2 m",
    "start": "2312839",
    "end": "2320960"
  },
  {
    "text": "core CPU uh if it is less than 32 Millo CPU we mark this prob as passed",
    "start": "2320960",
    "end": "2326200"
  },
  {
    "text": "otherwise it will fail so we can just copy and paste in the uh in the terminal to check if it",
    "start": "2326200",
    "end": "2333079"
  },
  {
    "text": "working or not so it is working so you can see uh it is giving me 20 so if I if I apply without",
    "start": "2333079",
    "end": "2340599"
  },
  {
    "text": "the flags and all so I can see the it's 20 M core CPU right and if it increase",
    "start": "2340599",
    "end": "2347000"
  },
  {
    "text": "during the chos it should fail right uh because we have a probe assigned to it",
    "start": "2347000",
    "end": "2352440"
  },
  {
    "text": "so let me go inside the experiment and you can see the probes",
    "start": "2352440",
    "end": "2357920"
  },
  {
    "text": "are already added and let me just run it",
    "start": "2357920",
    "end": "2362838"
  },
  {
    "text": "here so yeah uh so it will again uh",
    "start": "2363359",
    "end": "2368440"
  },
  {
    "text": "yeah it started so it will again uh uh go through the same steps installing of the Kos faults then",
    "start": "2368440",
    "end": "2376119"
  },
  {
    "text": "uh uh then it will perform the actual chaos then it will clean up so meanwhile we can go to the probes and uh try to",
    "start": "2376119",
    "end": "2382839"
  },
  {
    "text": "explain like try to understand what are the different kind of modes right which probes can execute uh let me edit",
    "start": "2382839",
    "end": "2391359"
  },
  {
    "text": "uh yeah let me create new uh probe so let's",
    "start": "2391359",
    "end": "2399839"
  },
  {
    "text": "create this probe uh okay uh let me go inside any of",
    "start": "2399839",
    "end": "2406680"
  },
  {
    "text": "the [Music] experiment try to add a new",
    "start": "2406680",
    "end": "2415200"
  },
  {
    "text": "proe let's take an example of this probe yeah so these are the modes I I'm trying",
    "start": "2415880",
    "end": "2422000"
  },
  {
    "text": "to uh explain uh so this uh uh the probe",
    "start": "2422000",
    "end": "2427319"
  },
  {
    "text": "start of the test it will execute when your experiment started uh before the experiment started so it will just uh",
    "start": "2427319",
    "end": "2433200"
  },
  {
    "text": "try to check the HTTP or any other Pro which you configur right before the experiment and if it pass it will allow",
    "start": "2433200",
    "end": "2440520"
  },
  {
    "text": "the next experiment uh next phase to start or it'll fail according to the condition right",
    "start": "2440520",
    "end": "2447359"
  },
  {
    "text": "and the another one is the end of the test that basically uh runs after after we execute the experiment and after",
    "start": "2447359",
    "end": "2454359"
  },
  {
    "text": "during the end process of the experiment we execute this probe and there there's a edge mode where we uh check both in",
    "start": "2454359",
    "end": "2461560"
  },
  {
    "text": "the start of the uh experiment or uh end of the end end of the experiment we both",
    "start": "2461560",
    "end": "2466599"
  },
  {
    "text": "the check the pro and based on the condition we pass the proves uh and the",
    "start": "2466599",
    "end": "2472240"
  },
  {
    "text": "second one is a continuous which will execute from the beginning of the test beginning of the experiment till the end",
    "start": "2472240",
    "end": "2477599"
  },
  {
    "text": "of the experiment and during the Kos also it will it'll perform this Pro uh and then the last one is the onos so uh",
    "start": "2477599",
    "end": "2485240"
  },
  {
    "text": "so after it started right during the actual C the middle step which I I was uh showing right so during that phase",
    "start": "2485240",
    "end": "2492000"
  },
  {
    "text": "it'll try to execute this probe so these are the uh five modes we have right now",
    "start": "2492000",
    "end": "2497640"
  },
  {
    "text": "uh and based on the probe mode it also uh it can also determine the condition",
    "start": "2497640",
    "end": "2504680"
  },
  {
    "text": "right and let's go back to our experiment and I think we can see there",
    "start": "2504680",
    "end": "2511880"
  },
  {
    "text": "we can go back to logs and let's see the dashboard right",
    "start": "2511880",
    "end": "2517920"
  },
  {
    "text": "so you can see there there is a slight hike in the CPU let",
    "start": "2517920",
    "end": "2524599"
  },
  {
    "text": "me the top command [Music] also it",
    "start": "2524599",
    "end": "2532559"
  },
  {
    "text": "start um nanan do you have any other questions yeah yeah we have quite a few",
    "start": "2536720",
    "end": "2542160"
  },
  {
    "text": "questions thank you folks for asking such informative questions so I'll just try to answer all of them so Ganesh who",
    "start": "2542160",
    "end": "2548880"
  },
  {
    "text": "asks uh where we need to install chaos kubernetes cluster yes uh Ganesh so as",
    "start": "2548880",
    "end": "2555440"
  },
  {
    "text": "we saw chaos infrastructure is nothing but an agent which you need to install in the same cluster where your target",
    "start": "2555440",
    "end": "2561880"
  },
  {
    "text": "application is running where your target kubernetes application is running so the advantage that you get out of litmus",
    "start": "2561880",
    "end": "2568000"
  },
  {
    "text": "chaos is you can have one control plane and several different uh execution",
    "start": "2568000",
    "end": "2573880"
  },
  {
    "text": "planes that is several different targets Target kuet clusters where you can Target the different kuties",
    "start": "2573880",
    "end": "2580839"
  },
  {
    "text": "applications moving on to the next question uh Vu asks is there source for",
    "start": "2580839",
    "end": "2586280"
  },
  {
    "text": "these proes in GitHub uh we can uh definitely try to look into that we can",
    "start": "2586280",
    "end": "2592160"
  },
  {
    "text": "definitely try to provide these GRS for you next venu again Ask are the specific",
    "start": "2592160",
    "end": "2598040"
  },
  {
    "text": "metric litmus relays to provide these insights uh by insights I'm guessing you",
    "start": "2598040",
    "end": "2605559"
  },
  {
    "text": "are talking about uh the chaos uh like result those kind of insights because",
    "start": "2605559",
    "end": "2612280"
  },
  {
    "text": "see uh the kind of insights that let that lmus provides is for example this annotation that you see in your screen",
    "start": "2612280",
    "end": "2618760"
  },
  {
    "text": "currently this is provided by the litmus it determines that what was the chaos duration through which the chaos was",
    "start": "2618760",
    "end": "2625319"
  },
  {
    "text": "actually injected then uh it also gives you chaos result and it's a neatly",
    "start": "2625319",
    "end": "2631079"
  },
  {
    "text": "compacted form of the entire experiment's result that what did it manifest into what part what didn't pass",
    "start": "2631079",
    "end": "2638400"
  },
  {
    "text": "and so on so more of that you can definitely see into your UI or access them using apis as well next question by",
    "start": "2638400",
    "end": "2646200"
  },
  {
    "text": "Muhammad Awan uh he that is grafana dashboard required for separate",
    "start": "2646200",
    "end": "2652599"
  },
  {
    "text": "installation or it is bundled with litmus GitHub uh no Mohammad like we do not package litmus Kos with any APM tool",
    "start": "2652599",
    "end": "2660400"
  },
  {
    "text": "but then it can be used with any APM tool that you already have as I said before uh obser is very crucial for lmos",
    "start": "2660400",
    "end": "2668880"
  },
  {
    "text": "for performing chaos engineering because without obser you won't be able to realize how your application is getting",
    "start": "2668880",
    "end": "2675000"
  },
  {
    "text": "affected during the chaos so essentially uh you would want to keep all your uh",
    "start": "2675000",
    "end": "2682520"
  },
  {
    "text": "obser uh APM tools into the same uh pan where the litmus chaos is running so",
    "start": "2682520",
    "end": "2688880"
  },
  {
    "text": "that you can use the different probes or other different uh Tools in order to",
    "start": "2688880",
    "end": "2694040"
  },
  {
    "text": "understand how your application is behaving and on top of that you can can then build uh different probes using the",
    "start": "2694040",
    "end": "2700480"
  },
  {
    "text": "CMD probe as explained by Raj earlier right so with that I'll definitely come back to all the questions but I think",
    "start": "2700480",
    "end": "2706680"
  },
  {
    "text": "the fault has completed so yeah so uh I I'll go back again and check the status",
    "start": "2706680",
    "end": "2713760"
  },
  {
    "text": "again yeah so again it it is completed by failure and we'll check why it failed",
    "start": "2713760",
    "end": "2719839"
  },
  {
    "text": "right here you can see we have attached two probes and one of them are fail like one is pass one is failed and let's",
    "start": "2719839",
    "end": "2727000"
  },
  {
    "text": "check the HTTP uh proof uh the first one the first one says uh the end point is",
    "start": "2727000",
    "end": "2733920"
  },
  {
    "text": "uh the endpoint was available uh before because it was start of the test rate the end point was accessible and it was",
    "start": "2733920",
    "end": "2740040"
  },
  {
    "text": "giving 200 that's why the first case passed then second case failed because",
    "start": "2740040",
    "end": "2745319"
  },
  {
    "text": "the actual value of the cube C top Command right which we applied right so",
    "start": "2745319",
    "end": "2750359"
  },
  {
    "text": "it was around 47 but our expectation is it should be less than 32 then we can",
    "start": "2750359",
    "end": "2755599"
  },
  {
    "text": "say this probe is passed or this probe is passed right so now we can",
    "start": "2755599",
    "end": "2760720"
  },
  {
    "text": "uh see that we are getting 47 that's why this probe failed and ultimately the",
    "start": "2760720",
    "end": "2765839"
  },
  {
    "text": "experiment failed with it is completed but it with failure right you can see and it also impact the resiliency score",
    "start": "2765839",
    "end": "2772200"
  },
  {
    "text": "you can see the 50% resilien score because one is pass one is failed and due to which uh you can consider this is",
    "start": "2772200",
    "end": "2778520"
  },
  {
    "text": "a 50% resilient application right and uh and the next one we have is the node uh",
    "start": "2778520",
    "end": "2787119"
  },
  {
    "text": "we are going to uh increase the node right uh so our application so is uh",
    "start": "2787119",
    "end": "2793440"
  },
  {
    "text": "let's say this card service right if I check this card service this card service is assigned to a not pool so we",
    "start": "2793440",
    "end": "2798839"
  },
  {
    "text": "have created a node pool dedicated not pool for this Boutique uh Services right and our Affinity is set for this card",
    "start": "2798839",
    "end": "2806359"
  },
  {
    "text": "service uh let's uh show you uh",
    "start": "2806359",
    "end": "2812799"
  },
  {
    "text": "yeah we can see uh this uh card service card service is",
    "start": "2818240",
    "end": "2823800"
  },
  {
    "text": "uh uh card service is scheduled to this pool uh there's only one node in the pool and what we are going to do is we",
    "start": "2823800",
    "end": "2830559"
  },
  {
    "text": "are going to Target this uh node pool or this node like we'll increase the CPU",
    "start": "2830559",
    "end": "2836599"
  },
  {
    "text": "and we'll see uh if uh if the proe pass the F so let let's go to the experiment",
    "start": "2836599",
    "end": "2841680"
  },
  {
    "text": "first so let me go inside the experiment and this is the CPU hog experiment and",
    "start": "2841680",
    "end": "2847359"
  },
  {
    "text": "here we are doing it for 120 seconds and we are targeting this node right uh this",
    "start": "2847359",
    "end": "2853040"
  },
  {
    "text": "5K C3 you can compare 5K 5K C3 and other",
    "start": "2853040",
    "end": "2858920"
  },
  {
    "text": "others are like default values we don't have to reconfigure Now Now quickly check the uh proves right so now we have two",
    "start": "2858920",
    "end": "2867079"
  },
  {
    "text": "kind of uh proves one is the CMD probe and one is the Prometheus probe so both are in continuous mode that means it",
    "start": "2867079",
    "end": "2873319"
  },
  {
    "text": "will uh start running uh during the start of the experiment till then end of the experiment right let's quickly check",
    "start": "2873319",
    "end": "2879200"
  },
  {
    "text": "this node CPU uh",
    "start": "2879200",
    "end": "2883680"
  },
  {
    "text": "probe so this probe is configured like it doing a top nodes so previously we",
    "start": "2884480",
    "end": "2890559"
  },
  {
    "text": "had done the CU Cil top proves uh pods top pods now we are going to do a top",
    "start": "2890559",
    "end": "2896440"
  },
  {
    "text": "node uh and check the uh value of the CPU right if I apply the same command",
    "start": "2896440",
    "end": "2902680"
  },
  {
    "text": "here I can see the current value is 12 and I can remove all the flags and see the raw",
    "start": "2902680",
    "end": "2909440"
  },
  {
    "text": "value so I can see that the the CPU is 12% right and now expectation let me",
    "start": "2910880",
    "end": "2916760"
  },
  {
    "text": "edit this to view the expectation now expectation is it should",
    "start": "2916760",
    "end": "2922440"
  },
  {
    "text": "it should less than 50 then we can consider this probe as passed otherwise failed right so this is one of the probe",
    "start": "2922440",
    "end": "2928720"
  },
  {
    "text": "uh and the second probe we are having is Prometheus probe again here we have the",
    "start": "2928720",
    "end": "2935760"
  },
  {
    "text": "configuration where we are calling this Prometheus endpoint and the there's a query uh let me edit this",
    "start": "2935760",
    "end": "2943640"
  },
  {
    "text": "query and the query is basically giving us the CPU U uh CPU percentage right at",
    "start": "2943640",
    "end": "2950559"
  },
  {
    "text": "at the given point of time and if it should less than 50 otherwise it will fail so same promes query is uh there in",
    "start": "2950559",
    "end": "2958000"
  },
  {
    "text": "this dashboard so in this panel basically so we can see all the things in this panel right so let's quickly run",
    "start": "2958000",
    "end": "2963960"
  },
  {
    "text": "this experiment and see what's the stat of so let me run this third",
    "start": "2963960",
    "end": "2969560"
  },
  {
    "text": "[Music]",
    "start": "2969560",
    "end": "2972639"
  },
  {
    "text": "experiment so again uh three steps uh first we'll install then uh the",
    "start": "2975839",
    "end": "2981920"
  },
  {
    "text": "execution of that uh c will happen and then we'll clean up the experiments from",
    "start": "2981920",
    "end": "2987920"
  },
  {
    "text": "the cluster yeah again we are going back to",
    "start": "2987920",
    "end": "2993640"
  },
  {
    "text": "Q&A so nanan do we have any other question yes we do Raj and so many nice questions",
    "start": "2993640",
    "end": "3000640"
  },
  {
    "text": "thank you so much folks for asking so many good questions so yeah first I'll start with miladin sorry if I completely",
    "start": "3000640",
    "end": "3009079"
  },
  {
    "text": "butchering your name so he asked that uh can you target with two labels I have a",
    "start": "3009079",
    "end": "3014559"
  },
  {
    "text": "case where let's say I have two cart Services one active and one standby so I need to Target with label app is equal",
    "start": "3014559",
    "end": "3021680"
  },
  {
    "text": "to card and St status is equal to active uh so the answer is no actually you cannot use more than one label and there",
    "start": "3021680",
    "end": "3028960"
  },
  {
    "text": "are quite a few reasons for that essentially because a single label can correspond to multiple uh Resources by",
    "start": "3028960",
    "end": "3036160"
  },
  {
    "text": "Nature so usually you wouldn't need two labels right and uh speaking of your",
    "start": "3036160",
    "end": "3041960"
  },
  {
    "text": "particular use case litmus actually will basically ignore any pod let's say which",
    "start": "3041960",
    "end": "3048079"
  },
  {
    "text": "is not in an active status which is not running basically so you wouldn't need that but however in practice in theory",
    "start": "3048079",
    "end": "3054839"
  },
  {
    "text": "you can always add a global uh label that will uh group all the resources",
    "start": "3054839",
    "end": "3060559"
  },
  {
    "text": "that you want uh to Target together basically so yeah that's uh it and then",
    "start": "3060559",
    "end": "3067000"
  },
  {
    "text": "pry asks can I use data de or other APM uh apms other than Prometheus in the",
    "start": "3067000",
    "end": "3073799"
  },
  {
    "text": "resilience probes uh the answer is yes because you can use the command probe as",
    "start": "3073799",
    "end": "3079799"
  },
  {
    "text": "raj is showing for example for CBE CTL similarly for uh other apms also say",
    "start": "3079799",
    "end": "3085319"
  },
  {
    "text": "you're using data dog Relic any of it uh you can uh use the command probe to",
    "start": "3085319",
    "end": "3091040"
  },
  {
    "text": "invoke the apis that should be able to query uh your APM tool and then fetch",
    "start": "3091040",
    "end": "3096280"
  },
  {
    "text": "the metrics based on which you can then able to uh compare and you know make",
    "start": "3096280",
    "end": "3101559"
  },
  {
    "text": "your uh hypotheses uh pry then again asks if we have some dependencies for the script I",
    "start": "3101559",
    "end": "3108119"
  },
  {
    "text": "want to run as part of the command probe how can I achieve that uh that's a very nice question thank you for asking that",
    "start": "3108119",
    "end": "3114520"
  },
  {
    "text": "so we can basically use the uh Source probe mode for the command probe so",
    "start": "3114520",
    "end": "3121599"
  },
  {
    "text": "let's say you have a lot of application dependencies and as we normally do using Docker we can make a nice image out of",
    "start": "3121599",
    "end": "3128640"
  },
  {
    "text": "it so it will contain all the different dependencies that your script uses now",
    "start": "3128640",
    "end": "3133680"
  },
  {
    "text": "you can use a source probe command uh probe which not which is nothing but a",
    "start": "3133680",
    "end": "3140040"
  },
  {
    "text": "independent probe uh pod which will be running in your uh Target infrastructure",
    "start": "3140040",
    "end": "3146319"
  },
  {
    "text": "so so this individual Pro pod will basically ensure that you have all your",
    "start": "3146319",
    "end": "3151799"
  },
  {
    "text": "dependencies as you're executing your uh hypothesis condition and therefore you",
    "start": "3151799",
    "end": "3156880"
  },
  {
    "text": "should be able to like very write very complex scripts as well you should be able to introduce different binaries",
    "start": "3156880",
    "end": "3163359"
  },
  {
    "text": "different uh uh different clis and so on",
    "start": "3163359",
    "end": "3168400"
  },
  {
    "text": "moving on to the next question miladin asks how we can set HTTP proof for",
    "start": "3168400",
    "end": "3174119"
  },
  {
    "text": "microservice which is not exposed to public on the inside Kus to communicate with other service I can use IP of",
    "start": "3174119",
    "end": "3180760"
  },
  {
    "text": "service in Kus but name of the service is not working for me so I'm wondering is there other wave because IP is",
    "start": "3180760",
    "end": "3186599"
  },
  {
    "text": "randomly added by KS you can definitely use the fqdn miladin like as raj was",
    "start": "3186599",
    "end": "3192520"
  },
  {
    "text": "showing right a few moments ago we are using the fqdn for the card service in",
    "start": "3192520",
    "end": "3199240"
  },
  {
    "text": "order to Target and check the HTTP status of that uh service right so that",
    "start": "3199240",
    "end": "3205280"
  },
  {
    "text": "is definitely uh achievable and you can do that uh okay I think the fault has ended",
    "start": "3205280",
    "end": "3212520"
  },
  {
    "text": "we'll definitely Dive Right into Q&A but traj please yeah sure thank you so again",
    "start": "3212520",
    "end": "3218920"
  },
  {
    "text": "it failed with uh with it it completed with failure so we'll check the probes again so let me go back and quickly",
    "start": "3218920",
    "end": "3225160"
  },
  {
    "text": "refresh and yeah uh so in now case both proves",
    "start": "3225160",
    "end": "3230960"
  },
  {
    "text": "failed so the first pro failed because the expected value like uh which is from the cuc top Command right it it was",
    "start": "3230960",
    "end": "3237680"
  },
  {
    "text": "around3 percentage right and we expecting 50 percentage and the same you can see in the dashboard right so we we",
    "start": "3237680",
    "end": "3244400"
  },
  {
    "text": "are approx 100 and something 100 plus uh uh it it is",
    "start": "3244400",
    "end": "3249880"
  },
  {
    "text": "going approx 100 and 1005 so due to which it got failed right so it is not",
    "start": "3249880",
    "end": "3255160"
  },
  {
    "text": "able to uh keep the uh value below the threshold right and you can see the",
    "start": "3255160",
    "end": "3262319"
  },
  {
    "text": "proof fi because of the uh it passes the threshold value the second probe failed",
    "start": "3262319",
    "end": "3267760"
  },
  {
    "text": "because of the uh value from the Prometheus right so the Prometheus was giving like more than 50% right and uh",
    "start": "3267760",
    "end": "3275400"
  },
  {
    "text": "uh and so this is the random value because both executed at the random time so that's why that you can see 13% and",
    "start": "3275400",
    "end": "3281760"
  },
  {
    "text": "here and here 61% right so the the value exr the",
    "start": "3281760",
    "end": "3288319"
  },
  {
    "text": "threshold value and due to which this Pro fail and ultimately we have the resiliency score zero because both Pro",
    "start": "3288319",
    "end": "3294880"
  },
  {
    "text": "fail and ultimately we can we considering this experiment as non non-resilient experiment and yeah uh I",
    "start": "3294880",
    "end": "3301160"
  },
  {
    "text": "think we have uh we have three experiment which we demonstrated and",
    "start": "3301160",
    "end": "3306240"
  },
  {
    "text": "with multiple fa uh multiple Pro combination right uh we have uh we have",
    "start": "3306240",
    "end": "3312079"
  },
  {
    "text": "demonstrated the HTTP then we have Pro Prometheus probe and CMD probe and",
    "start": "3312079",
    "end": "3317480"
  },
  {
    "text": "there's one more probe which we haven't demonstrated is the kubernetes probe so in kubernetes probe what we can do is we",
    "start": "3317480",
    "end": "3323680"
  },
  {
    "text": "can uh check a particular resource or like let's say P or deployment is present during the during the chos or",
    "start": "3323680",
    "end": "3330480"
  },
  {
    "text": "not so that we that is al already present in the so you can probably check check this out later right and we have",
    "start": "3330480",
    "end": "3337359"
  },
  {
    "text": "one more experiment but I think due to the uh time constraint I think we should move to Q right L uh I hope we have some",
    "start": "3337359",
    "end": "3345880"
  },
  {
    "text": "more questions left yeah yeah we do have a lot more questions so Raj would you like to answer any of",
    "start": "3345880",
    "end": "3352319"
  },
  {
    "text": "them otherwise I can take them yeah you can go ahead uh let okay okay so yeah",
    "start": "3352319",
    "end": "3357760"
  },
  {
    "text": "panduka asks would running these experiments under load for a service SLS",
    "start": "3357760",
    "end": "3364039"
  },
  {
    "text": "service under test I'm assuming make more sense definitely uh you can definitely have a load balancer uh",
    "start": "3364039",
    "end": "3371599"
  },
  {
    "text": "excuse me not load balancer a load generator in parallel to your chaos",
    "start": "3371599",
    "end": "3376640"
  },
  {
    "text": "experiment which is running so as you understand chaos experiment or the way we Define our chaos experiments is a",
    "start": "3376640",
    "end": "3383440"
  },
  {
    "text": "declarative manifest and it's nothing but uh Argo uh workflow manifest so",
    "start": "3383440",
    "end": "3390559"
  },
  {
    "text": "basically you can define an Argo workflow step in parallel to your chaos experiment wherein you can have a some",
    "start": "3390559",
    "end": "3396920"
  },
  {
    "text": "kind of a load uh generator working so that will create some artificial traffic let's say for your uh application and",
    "start": "3396920",
    "end": "3404280"
  },
  {
    "text": "yeah it will definitely make more sense because that will very closely correspond to the real world scenario",
    "start": "3404280",
    "end": "3410400"
  },
  {
    "text": "which is very important while doing Chaos experiments thank you for that question next we have a question from",
    "start": "3410400",
    "end": "3416839"
  },
  {
    "text": "Devon he asked that do we have a latest video demonstrating the installation of lmus chaos using both Cube CTL and Helm",
    "start": "3416839",
    "end": "3423640"
  },
  {
    "text": "I followed the documentation and the subscriber pod was getting into crash Loop thanks uh so sorry to hear that",
    "start": "3423640",
    "end": "3429920"
  },
  {
    "text": "Deon but definitely we can help you uh get there so if you haven't already please join the lmus chaos channel in",
    "start": "3429920",
    "end": "3437319"
  },
  {
    "text": "the kuber slack we are all present over there and I'll also try to like help you",
    "start": "3437319",
    "end": "3443119"
  },
  {
    "text": "uh for debugging while you're getting a crash Loop but yeah unfortunately we don't have a video as of yet but yeah",
    "start": "3443119",
    "end": "3448680"
  },
  {
    "text": "we'll definitely help you debug your issue venue then asks are chaos pipelines tangential to regular test",
    "start": "3448680",
    "end": "3456160"
  },
  {
    "text": "jobs or they integrated together of course you can integrate together with your other pipelines as well so as I was",
    "start": "3456160",
    "end": "3462960"
  },
  {
    "text": "trying to instill the previous uh question that you had asked that how we",
    "start": "3462960",
    "end": "3468119"
  },
  {
    "text": "can uh like left shift the entire uh chaos experiments in that same pipelines",
    "start": "3468119",
    "end": "3475160"
  },
  {
    "text": "where you are let's say testing your unit test you know you're doing a trivy vulnerability scan you can definitely",
    "start": "3475160",
    "end": "3482400"
  },
  {
    "text": "add a you can definitely add a chaos experiment as well because litmus H also",
    "start": "3482400",
    "end": "3488559"
  },
  {
    "text": "provides the apis that can enable you to do so essentially what it would look like in practices in your GitHub Ci or",
    "start": "3488559",
    "end": "3496119"
  },
  {
    "text": "your circle CI you will Define a step wherein you will call a litmus API that will run a chaos experiment and Target",
    "start": "3496119",
    "end": "3504000"
  },
  {
    "text": "the applications or the microservices that you want to Target so let's say a application deployment will happen a CD",
    "start": "3504000",
    "end": "3510960"
  },
  {
    "text": "step will be uh previous to this which will uh deploy your application in a test environment and then you can Define",
    "start": "3510960",
    "end": "3517720"
  },
  {
    "text": "the CI step which will run the chios experiments to Target the targets that",
    "start": "3517720",
    "end": "3522839"
  },
  {
    "text": "are test so that's what a functional chos cicd integration might look like",
    "start": "3522839",
    "end": "3529640"
  },
  {
    "text": "next question by is by Lawrence so they asked that if you want to Target uh test",
    "start": "3529640",
    "end": "3535400"
  },
  {
    "text": "several separate applications in parallel in the same Target cluster should you have different agents for",
    "start": "3535400",
    "end": "3541839"
  },
  {
    "text": "each name space absolutely not so litmus actually provides two way of installation one is the cluster mode and",
    "start": "3541839",
    "end": "3549200"
  },
  {
    "text": "second is the uh namespace mode in cluster mode basically you allow lus",
    "start": "3549200",
    "end": "3554880"
  },
  {
    "text": "agent to Target chaos across the entire cluster so as it might be useful let's say in your case it also possesses a",
    "start": "3554880",
    "end": "3562000"
  },
  {
    "text": "slight risk that you end up targeting an application which you do not want want to Target so that's where the names",
    "start": "3562000",
    "end": "3568200"
  },
  {
    "text": "Space Mod uh namespace mode helps it contains the chaos it basically makes sure that your blast radius is",
    "start": "3568200",
    "end": "3576599"
  },
  {
    "text": "contained okay the next question is by pry can the experiment automatically stop if a pro fails yes it can",
    "start": "3576599",
    "end": "3583520"
  },
  {
    "text": "definitely be stopped there's a feature called stop on failure provided as part of every Pro which will essentially stop",
    "start": "3583520",
    "end": "3591480"
  },
  {
    "text": "the experiment execution as soon as the pro fails so this essentially helps uh",
    "start": "3591480",
    "end": "3598319"
  },
  {
    "text": "your application uh Health to be preserved let's say that it's deviating in a place where your your application",
    "start": "3598319",
    "end": "3605319"
  },
  {
    "text": "is not uh you know it's going to be harmed and you can sense that on U you",
    "start": "3605319",
    "end": "3611799"
  },
  {
    "text": "know when you're targeting the chaos so you can definitely turn on the stop on failure and that will stop the",
    "start": "3611799",
    "end": "3619000"
  },
  {
    "text": "experiment all right uh then we have a",
    "start": "3619000",
    "end": "3624359"
  },
  {
    "text": "question probably we are bit over time we can take the next question yeah yeah sure or we can",
    "start": "3624359",
    "end": "3633799"
  },
  {
    "text": "maybe yeah just wanted to put this out here uh if you have any more questions please feel free to reach out in the",
    "start": "3633799",
    "end": "3640400"
  },
  {
    "text": "kubernetes slack we have a thread I think there so please clst all your questions there I'll be personally be",
    "start": "3640400",
    "end": "3645440"
  },
  {
    "text": "answering all of them over to you Shan",
    "start": "3645440",
    "end": "3650078"
  }
]