[
  {
    "text": "okay so hello everyone and uh welcome to chaos mesh overview practices and F",
    "start": "680",
    "end": "8440"
  },
  {
    "text": "features so my name is s and I'm working as a field CTO at coo and I am a cncf",
    "start": "8440",
    "end": "15920"
  },
  {
    "text": "Ambassador I'm cka and cks S scenarios book author I'm also founder of K",
    "start": "15920",
    "end": "21039"
  },
  {
    "text": "simplify that aims to simplify Cloud native so even after the session feel",
    "start": "21039",
    "end": "26320"
  },
  {
    "text": "free to reach me out at different places unfortunately my co-presenter was not able to make it to CU Cod but we have a",
    "start": "26320",
    "end": "33200"
  },
  {
    "text": "Live recorded demo um from my co-presenter today we'll be discussing",
    "start": "33200",
    "end": "40160"
  },
  {
    "text": "about obviously chaos engineering um chaos mesh uh some of the demos project",
    "start": "40160",
    "end": "46320"
  },
  {
    "text": "updates and where the project is heading towards so we'll be sharing some of the",
    "start": "46320",
    "end": "51399"
  },
  {
    "text": "insights of the um road map as well uh what we are looking towards adding or",
    "start": "51399",
    "end": "58640"
  },
  {
    "text": "improving in the Cure mesh ecosystem so starting",
    "start": "58640",
    "end": "66880"
  },
  {
    "text": "off introducing chios engineering before we dwell into the discussion um of the chios engineering",
    "start": "66880",
    "end": "74960"
  },
  {
    "text": "we need to understand the current context and in the current context the systems are complex with the rise of um",
    "start": "74960",
    "end": "83280"
  },
  {
    "text": "adopting microservices all these architectures the complexity of the",
    "start": "83280",
    "end": "88360"
  },
  {
    "text": "applications is steadily incre inreasing and even the best and the best in-class",
    "start": "88360",
    "end": "93759"
  },
  {
    "text": "Engineers are keeping it um you know hard to battle the complexity and in these uh",
    "start": "93759",
    "end": "101079"
  },
  {
    "text": "scenarios conducting testing is extremely difficult especially to cover",
    "start": "101079",
    "end": "106840"
  },
  {
    "text": "all the corner cases that you can imagine and this is where chaos engineering comes into play and in this",
    "start": "106840",
    "end": "113079"
  },
  {
    "text": "you actually inject or simulate various failures failure scenarios which are",
    "start": "113079",
    "end": "118479"
  },
  {
    "text": "very much the real world scenarios and Chaos engineering can help us better understand and improve the systems uh",
    "start": "118479",
    "end": "126119"
  },
  {
    "text": "the entry point again is to simulate an extreme scenario that could occur in",
    "start": "126119",
    "end": "131599"
  },
  {
    "text": "real world that's that's the main goal uh but it should be done in a controlled",
    "start": "131599",
    "end": "137800"
  },
  {
    "text": "environment because we are trying to replicate something that happens in the real world in the production system so",
    "start": "137800",
    "end": "143480"
  },
  {
    "text": "we cannot randomly do and break things and thereby uh verifying and",
    "start": "143480",
    "end": "149239"
  },
  {
    "text": "improving on the systems so failures and incidents can",
    "start": "149239",
    "end": "157640"
  },
  {
    "text": "happen anytime if you see the timeline you'll be able to see the um almost 44",
    "start": "157640",
    "end": "165239"
  },
  {
    "text": "outages in the past 3 months within GitHub itself like even regardless of",
    "start": "165239",
    "end": "171400"
  },
  {
    "text": "the size of the organization the number of Engineers working in that organization the best practices follows",
    "start": "171400",
    "end": "176959"
  },
  {
    "text": "in the followed uh by an organization things can fail and they do things do",
    "start": "176959",
    "end": "184040"
  },
  {
    "text": "break human error um all these things and or poor decision making anything can",
    "start": "184040",
    "end": "190239"
  },
  {
    "text": "lead to um all these things so what is chaos engineering and",
    "start": "190239",
    "end": "197120"
  },
  {
    "text": "what it is not chaos engineering is about breaking things in the controlled",
    "start": "197120",
    "end": "202959"
  },
  {
    "text": "environment and through well planned experiments in order to build confidence in your application to with stand",
    "start": "202959",
    "end": "210200"
  },
  {
    "text": "turbulent conditions so you can see the the five steps over there uh the first one the",
    "start": "210200",
    "end": "217319"
  },
  {
    "text": "steady state so first is defining the steady state so what do you mean by that",
    "start": "217319",
    "end": "223040"
  },
  {
    "text": "is U it's actually the measurable output of a system that indicates a normal",
    "start": "223040",
    "end": "228920"
  },
  {
    "text": "behavior and uh we can we can get that behavior by observing the systems um",
    "start": "228920",
    "end": "234959"
  },
  {
    "text": "carefully and get the stady state now we Define the hypothesis so second second portion the second part comes in the",
    "start": "234959",
    "end": "242640"
  },
  {
    "text": "hypothesis that the steady state will be in the control will be same will",
    "start": "242640",
    "end": "248120"
  },
  {
    "text": "continue to remain the same in both the control group and the experiment groups now we introduce the experiments",
    "start": "248120",
    "end": "256000"
  },
  {
    "text": "and these are the real world chaos experiments that are there so introducing all these variables like",
    "start": "256000",
    "end": "262360"
  },
  {
    "text": "Hardware failures Network failures Network slowdown um all these kind of U",
    "start": "262360",
    "end": "267800"
  },
  {
    "text": "failures can be injected and then trying to validate and disprove the",
    "start": "267800",
    "end": "273520"
  },
  {
    "text": "hypothesis to find the difference between the steady state and the uh",
    "start": "273520",
    "end": "278800"
  },
  {
    "text": "between the control group and the uh experiment group uh and then keep on analyzing improving based on the results",
    "start": "278800",
    "end": "286120"
  },
  {
    "text": "uh that is getting cleared the last point is important chaos engineering is not about breaking things randomly which",
    "start": "286120",
    "end": "293360"
  },
  {
    "text": "I I just mentioned before as well without a purpose because since this is being done in production um also the the development",
    "start": "293360",
    "end": "301759"
  },
  {
    "text": "or when when we go back the memory lane it's it's not very new concept or",
    "start": "301759",
    "end": "308080"
  },
  {
    "text": "terminology this has been there for about decade more than a decade now so",
    "start": "308080",
    "end": "313560"
  },
  {
    "text": "the development of chaos engineering can be divided into like you can see different stages in a timeline starting",
    "start": "313560",
    "end": "320000"
  },
  {
    "text": "from the early days of Netflix uh doing their business killing down the uh",
    "start": "320000",
    "end": "325280"
  },
  {
    "text": "virtual machines uh to understand the resiliency of the systems back when the cloud provider like AWS were not uh that",
    "start": "325280",
    "end": "332400"
  },
  {
    "text": "much resilient uh so and this really worked well for them and slowly and slowly they started writing more and",
    "start": "332400",
    "end": "338919"
  },
  {
    "text": "more engineering blogs on how they are uh implementing these kind of failure scenarios um getting the cultural change",
    "start": "338919",
    "end": "346720"
  },
  {
    "text": "like we have the cultural shift we had the cultural shift of devops so cultural shift of uh this learning and",
    "start": "346720",
    "end": "352160"
  },
  {
    "text": "implementation in the architectures as well and as you can see on the timeline different organizations different",
    "start": "352160",
    "end": "358080"
  },
  {
    "text": "companies coming in and in 2017 you can see more and more of Open Source",
    "start": "358080",
    "end": "363440"
  },
  {
    "text": "projects um like chaos toolkit chaos Cube um litmas chaos mesh Chaos Blade",
    "start": "363440",
    "end": "370800"
  },
  {
    "text": "all those coming in and then even the cloud providers um providing their own",
    "start": "370800",
    "end": "377440"
  },
  {
    "text": "SAS kind of offerings um and then Gremlin and all these uh so this is not",
    "start": "377440",
    "end": "384039"
  },
  {
    "text": "something that happened suddenly obviously it has it's kind of a combined effort over the years and knowledge that",
    "start": "384039",
    "end": "390319"
  },
  {
    "text": "has been transitioned from over different set of systems production systems um to with respect to the",
    "start": "390319",
    "end": "397000"
  },
  {
    "text": "adoption of the cloud native technology because as the technology has evolved there there have been a lot more",
    "start": "397000",
    "end": "402319"
  },
  {
    "text": "complexity that has increased and so has the has so has the chos engineering",
    "start": "402319",
    "end": "408039"
  },
  {
    "text": "experiment way of doing things and what do I mean by that so",
    "start": "408039",
    "end": "414319"
  },
  {
    "text": "when we talk about the uh adoption of cloud native technology chaos engine",
    "start": "414319",
    "end": "419560"
  },
  {
    "text": "ining is more and more integrated into into the engineering environments with respect to the declarative API now you",
    "start": "419560",
    "end": "426039"
  },
  {
    "text": "can declare the steady state you can Define this is this is what uh the steady state looks like expected state",
    "start": "426039",
    "end": "433000"
  },
  {
    "text": "looks like and the controller then you know verifies that and tries to read",
    "start": "433000",
    "end": "439240"
  },
  {
    "text": "that particular desired State clearly and then fit it into the chaos like creating the chaos out there in the in",
    "start": "439240",
    "end": "445400"
  },
  {
    "text": "the systems and which you can easily control and observe uh the popularity of Linux containers obviously allows the",
    "start": "445400",
    "end": "451960"
  },
  {
    "text": "application to run in the isolated environments that's what the containers have been uh so when you can run them in",
    "start": "451960",
    "end": "458360"
  },
  {
    "text": "the isolated environments it makes it even easier to minimize the blast radius uh when we talk about doing things in",
    "start": "458360",
    "end": "465039"
  },
  {
    "text": "production and also the uh standardization of the cuberes container",
    "start": "465039",
    "end": "470560"
  },
  {
    "text": "runtime makes it makes the fault injection more easy smooth and um",
    "start": "470560",
    "end": "477479"
  },
  {
    "text": "Universal um and then you can also also use something called privilege container to perform node level chaos when you",
    "start": "477479",
    "end": "483599"
  },
  {
    "text": "talk about the communities ecosystem uh also coming to chaos",
    "start": "483599",
    "end": "491560"
  },
  {
    "text": "mesh so chaos mesh is uh an open source tool and it is a chaos engineering",
    "start": "492280",
    "end": "498759"
  },
  {
    "text": "platform that provides comprehensive and userfriendly Tool chain to do chaos",
    "start": "498759",
    "end": "504520"
  },
  {
    "text": "experiments on kubernetes um and even Beyond actually I touch on that as",
    "start": "504520",
    "end": "511599"
  },
  {
    "text": "well so to understand the key features like what chaos Mish gives is it offers",
    "start": "511599",
    "end": "518518"
  },
  {
    "text": "the several kind of chaos experiments um that you can see but it's not limited to those uh pod chaos Network chaos IO",
    "start": "518519",
    "end": "526320"
  },
  {
    "text": "chaos DNS time jvm all these type of chaos and also you can extend these",
    "start": "526320",
    "end": "533080"
  },
  {
    "text": "capabilities via chaos d uh to do the node level experiments like stress dis",
    "start": "533080",
    "end": "540640"
  },
  {
    "text": "failures uh Network failures and things like that uh chaos mesh also offers a",
    "start": "540640",
    "end": "545720"
  },
  {
    "text": "dedicated um predictable chaos experiments and scheduled scheduled workflow features so you can create your",
    "start": "545720",
    "end": "552839"
  },
  {
    "text": "own set of workflows with different set of chaos experiments in that and create a whole workflow in it and additionally",
    "start": "552839",
    "end": "559399"
  },
  {
    "text": "yes it has a web UI to manage and inspect all the uh chaos experiments so",
    "start": "559399",
    "end": "565600"
  },
  {
    "text": "the design goals have always been you know to make it easy to use use um",
    "start": "565600",
    "end": "570640"
  },
  {
    "text": "regardless you are a beginner or an expert you should be able to understand because every chaos experiment has a",
    "start": "570640",
    "end": "576880"
  },
  {
    "text": "separate uh kind of custom resource definition so you should be able to Simply understand if this is this type",
    "start": "576880",
    "end": "582360"
  },
  {
    "text": "of chaos then these are the set of parameters that you need to set um coming to the chaos mesh",
    "start": "582360",
    "end": "589240"
  },
  {
    "text": "architectures there are majorly three main components one is the uh chaos",
    "start": "589240",
    "end": "595600"
  },
  {
    "text": "dashboard uh that is again simple web UI to manage and inspect chaos experiments",
    "start": "595600",
    "end": "600760"
  },
  {
    "text": "it like allows you to run manage create uh the even monitor the chaos",
    "start": "600760",
    "end": "607040"
  },
  {
    "text": "experiments uh the next one is the brain of brain heart whatever you want to call it of uh the chaos me architecture which",
    "start": "607040",
    "end": "616200"
  },
  {
    "text": "is the chaos controller manager uh so that is actually responsible for managing and scheduling the uh chaos",
    "start": "616200",
    "end": "622600"
  },
  {
    "text": "experiment so basically when you when you define what you want inside a chaos experiment the then the goes to uh the",
    "start": "622600",
    "end": "630560"
  },
  {
    "text": "chaos controller manager and uh it detects handles that state based on what",
    "start": "630560",
    "end": "635720"
  },
  {
    "text": "you have defined and it it's it also embedded it also is embedded with within",
    "start": "635720",
    "end": "641399"
  },
  {
    "text": "the workflow engine uh where you can Define and execute the complex um chaos",
    "start": "641399",
    "end": "647440"
  },
  {
    "text": "scenarios so users can use it to orchestrate multiple chaos experiments creating more uh you",
    "start": "647440",
    "end": "654360"
  },
  {
    "text": "know complex use cases and complex scenarios uh um close to real life",
    "start": "654360",
    "end": "660920"
  },
  {
    "text": "production scenarios and health checking and all that stuff is there and the next",
    "start": "660920",
    "end": "666240"
  },
  {
    "text": "one is the chaos demon which actually injects and runs the chaos",
    "start": "666240",
    "end": "672880"
  },
  {
    "text": "experiments and you can you can actually do it via UI via the",
    "start": "672880",
    "end": "678839"
  },
  {
    "text": "API and the CLI so you should be able to do all customized templates so you should be able to do it in different",
    "start": "678839",
    "end": "685040"
  },
  {
    "text": "ways as well so it's not only the UI that you should you can create the chos experiment so this is the chaos controller manager",
    "start": "685040",
    "end": "691639"
  },
  {
    "text": "uh one of the key components and U it monitors the creation changes and deletion of the resources uh when",
    "start": "691639",
    "end": "697880"
  },
  {
    "text": "whenever there's a change uh or there's a new experiment which is created the controller manager determines where to",
    "start": "697880",
    "end": "705360"
  },
  {
    "text": "inject uh when to revert from a fail over recover from The Faults and this",
    "start": "705360",
    "end": "711120"
  },
  {
    "text": "decision is based on the configuration provided once the decision has has been made it goes to the uh chaos teamon",
    "start": "711120",
    "end": "718560"
  },
  {
    "text": "chaos demon operates in a Linux environment and is responsible for actually injecting the uh chaos uh fault",
    "start": "718560",
    "end": "727760"
  },
  {
    "text": "and it uses common Linux name spaces and c groups Concepts to inject the fals",
    "start": "727760",
    "end": "734360"
  },
  {
    "text": "fault inside the Linux containers and then you have uh",
    "start": "734360",
    "end": "739519"
  },
  {
    "text": "different type of chaos experiments will be having uh different dedicated executors uh for them for example the if",
    "start": "739519",
    "end": "748519"
  },
  {
    "text": "you can see the kubernetes Pod kubernetes API is used to implement the Pod chaos pod kill and different",
    "start": "748519",
    "end": "754000"
  },
  {
    "text": "container runtime kind of scenarios and Linux kernel Network and command line tools like IP tables uh is used to",
    "start": "754000",
    "end": "761360"
  },
  {
    "text": "implement the network chaos uh we have a built built-in user mode um",
    "start": "761360",
    "end": "767440"
  },
  {
    "text": "like uh for for the io chos and then the layer three transport protocol for the",
    "start": "767440",
    "end": "773360"
  },
  {
    "text": "sttp Kos uh also the built-in kernel module um that you can see uh the block",
    "start": "773360",
    "end": "778959"
  },
  {
    "text": "shular chaos driver um for the block chaos and then the U with the existing",
    "start": "778959",
    "end": "785320"
  },
  {
    "text": "tools integrated by man to implement the jbm Kos so instead of using the the",
    "start": "785320",
    "end": "790519"
  },
  {
    "text": "scripts and and series of scripts on how to define uh the design philosophy has been pretty straightforward with chaos",
    "start": "790519",
    "end": "797839"
  },
  {
    "text": "mesh and you know you you you define everyone has a different executor um and",
    "start": "797839",
    "end": "804079"
  },
  {
    "text": "and it runs um and for different types you have",
    "start": "804079",
    "end": "809839"
  },
  {
    "text": "to write a different type of crd we we'll get to know like we'll do a sample kind of crd how how it actually looks",
    "start": "809839",
    "end": "816399"
  },
  {
    "text": "like so for different type of chaos experiments using a deterministic executors along with the custom resource",
    "start": "816399",
    "end": "823079"
  },
  {
    "text": "definition is another aspect of the chaos mesh design architecture so you",
    "start": "823079",
    "end": "828880"
  },
  {
    "text": "will be having a standard U yaml file which everyone is used to writing in the cloud native ecosystem where you talk",
    "start": "828880",
    "end": "834680"
  },
  {
    "text": "about kubernetes containers you you have a cluster uh you write DL file for",
    "start": "834680",
    "end": "839800"
  },
  {
    "text": "whatever object you want to create and when you install chaos mesh it install",
    "start": "839800",
    "end": "846199"
  },
  {
    "text": "the custom resource definitions so not only you can use the standard uh so it",
    "start": "846199",
    "end": "851680"
  },
  {
    "text": "it lets you use the different set of chaos experence like uh you can use Network chaos so the kind will be",
    "start": "851680",
    "end": "857839"
  },
  {
    "text": "Network chaos so those things can be done um and the same time um we also",
    "start": "857839",
    "end": "864320"
  },
  {
    "text": "have the workflows uh and the schedule objects that can allow to allow users to combine",
    "start": "864320",
    "end": "869920"
  },
  {
    "text": "all these things all the complex experiment scenarios and you can also do the health check for more detailing and",
    "start": "869920",
    "end": "876160"
  },
  {
    "text": "understanding of the health of the application um allowing the workflow to respond to the changes in the",
    "start": "876160",
    "end": "882680"
  },
  {
    "text": "application status such as uh terminating the workflow or uh when the",
    "start": "882680",
    "end": "889079"
  },
  {
    "text": "application is unavailable so this particular example",
    "start": "889079",
    "end": "897320"
  },
  {
    "text": "um is of Network chaos I don't know how how much visible that is but yeah you",
    "start": "897320",
    "end": "902839"
  },
  {
    "text": "you need to trust me this this is Network chaos so this is a network chaos",
    "start": "902839",
    "end": "908240"
  },
  {
    "text": "example um and we have several so think",
    "start": "908240",
    "end": "913560"
  },
  {
    "text": "it is as a there's a redis and there's a backend so there is a backend application redis instances these two",
    "start": "913560",
    "end": "919000"
  },
  {
    "text": "things are there and what we want to do is randomly select a backend application randomly select a redish application and",
    "start": "919000",
    "end": "926519"
  },
  {
    "text": "inject a delay from the backend application to redis application periodically for a certain duration of",
    "start": "926519",
    "end": "932839"
  },
  {
    "text": "time so we want to add a delay for a particular seconds and do it on a",
    "start": "932839",
    "end": "939000"
  },
  {
    "text": "regular basis from the backend application to the redis application to simulate this uh real world Network",
    "start": "939000",
    "end": "945399"
  },
  {
    "text": "chaos like if something like this happens then then what happens uh so that is done and uh",
    "start": "945399",
    "end": "952360"
  },
  {
    "text": "selected randomly and let's see how it is done so the the boxes that you can",
    "start": "952360",
    "end": "958160"
  },
  {
    "text": "see are the selectors so we use selectors to Mark our source and Target",
    "start": "958160",
    "end": "963360"
  },
  {
    "text": "where the usage of selector is uh consistent with that of cuberes itself um an additional point to note over here",
    "start": "963360",
    "end": "969920"
  },
  {
    "text": "is the mode is one so it will only select one pod like there can be",
    "start": "969920",
    "end": "975319"
  },
  {
    "text": "multiple replicas when you specify stuff within cuberes so it will only select one out of that and that's where uh you",
    "start": "975319",
    "end": "983519"
  },
  {
    "text": "do it in a controlled manner so you don't just kill everything or you just you just don't delay traffic uh from all",
    "start": "983519",
    "end": "990680"
  },
  {
    "text": "the pods to all the pods you select one particular pod from uh from",
    "start": "990680",
    "end": "996680"
  },
  {
    "text": "it and then you declare the experiment action as delay so you can see uh the",
    "start": "996680",
    "end": "1003279"
  },
  {
    "text": "delay over there and configure the chaos experiment delay of 10 seconds on the outgoing uh the the network",
    "start": "1003279",
    "end": "1011600"
  },
  {
    "text": "traffic and then is the scheduling object so you define the duration that",
    "start": "1011600",
    "end": "1016920"
  },
  {
    "text": "this experiment this particular experiment will uh run for 30 seconds every 60",
    "start": "1016920",
    "end": "1024280"
  },
  {
    "text": "seconds so as a result something like this should appear if you see on the",
    "start": "1024280",
    "end": "1029640"
  },
  {
    "text": "graph for 30 seconds every 60 seconds that's that's how it will run and from the back end uh part to the redish part",
    "start": "1029640",
    "end": "1038640"
  },
  {
    "text": "uh things things are going so that's how kind of uh easy it is and it actually",
    "start": "1038640",
    "end": "1044438"
  },
  {
    "text": "should give you in your head that yes this can happen in produ and when this happens what happens you",
    "start": "1044439",
    "end": "1051440"
  },
  {
    "text": "you can see and then you try to figure out whether your systems application everything is running fine if not then",
    "start": "1051440",
    "end": "1057679"
  },
  {
    "text": "you need to fine tune or you need to see what you need to do more more replicas or um certain other aspects that you can",
    "start": "1057679",
    "end": "1065640"
  },
  {
    "text": "um use uh to fix if there is any issue comes in the",
    "start": "1065640",
    "end": "1073080"
  },
  {
    "text": "production um just to add a bit more about chaos D which I talked",
    "start": "1075159",
    "end": "1081600"
  },
  {
    "text": "briefly uh so in in our community there were many requirements for conducting the chaos experiments not only on",
    "start": "1081600",
    "end": "1087520"
  },
  {
    "text": "kubernetes clusters but on the bare metal servers and the virtual machines uh so chaos D is actually can be",
    "start": "1087520",
    "end": "1095480"
  },
  {
    "text": "actually used independently so it's a collection again of Vault injection tools um that we have",
    "start": "1095480",
    "end": "1102760"
  },
  {
    "text": "reused the injection logic of the same chaos demon that actually injects uh at the and exec UT es the um chaos it can",
    "start": "1102760",
    "end": "1111000"
  },
  {
    "text": "be used as a CLI as well as as uh agent node as a service when used as a service",
    "start": "1111000",
    "end": "1119039"
  },
  {
    "text": "it can be integrated with chaos mesh using um the kind physical machine",
    "start": "1119039",
    "end": "1127200"
  },
  {
    "text": "chaos so the kind uh that was Network chaos the kind will be physical machine",
    "start": "1127200",
    "end": "1133799"
  },
  {
    "text": "chaos and then you should be able to um either create a workflow together for the the physical machine chaos Network",
    "start": "1133799",
    "end": "1139559"
  },
  {
    "text": "chaos create one after the other or do the chaining so but in summary outside of",
    "start": "1139559",
    "end": "1144919"
  },
  {
    "text": "kubernetes chaos D is also a powerful chaos injection tool soorry chaos D yeah chaos",
    "start": "1144919",
    "end": "1152440"
  },
  {
    "text": "d uh now coming to the demo hope it plays as",
    "start": "1152440",
    "end": "1159200"
  },
  {
    "text": "expected hello everyone I'm here to show you some uh awesome demos and some",
    "start": "1159200",
    "end": "1165280"
  },
  {
    "text": "practices about chaos Nash um my name is j and I am the M K smes and I'm also a",
    "start": "1165280",
    "end": "1173480"
  },
  {
    "text": "I'm also an individual freelancer so uh about the demo we are going to use this",
    "start": "1173480",
    "end": "1179120"
  },
  {
    "text": "application called potato hat uh it's a very funny uh application and it's the",
    "start": "1179120",
    "end": "1184520"
  },
  {
    "text": "demo app for the in Tech Apple delivery and uh it use it's use microservice",
    "start": "1184520",
    "end": "1191039"
  },
  {
    "text": "architecture uh about the micros service um the application is split into several",
    "start": "1191039",
    "end": "1196240"
  },
  {
    "text": "components which um uh which responds a part of the the the potato man's body",
    "start": "1196240",
    "end": "1202240"
  },
  {
    "text": "like uh the Hat the arms and the legs so um it's very interesting for uh an",
    "start": "1202240",
    "end": "1209280"
  },
  {
    "text": "application use composition man to respond the micros Serv architecture um",
    "start": "1209280",
    "end": "1215640"
  },
  {
    "text": "today we are going to show uh we're going to show you three typical three typical cases about chaos mesh uh the PO",
    "start": "1215640",
    "end": "1222080"
  },
  {
    "text": "chaos the network chaos and HTTP chaos uh so I'm already in",
    "start": "1222080",
    "end": "1228799"
  },
  {
    "text": "the C Smash and um po potato application inside of my uh Min Cube cluster so the",
    "start": "1228799",
    "end": "1236559"
  },
  {
    "text": "first I'm going to show you the poos so Po in this Cas in this case I will K one",
    "start": "1236559",
    "end": "1243559"
  },
  {
    "text": "of the Pod such as that and the rest of the micros service show also works but",
    "start": "1243559",
    "end": "1250200"
  },
  {
    "text": "you could see on the preview uh this part will not works so I started this is",
    "start": "1250200",
    "end": "1257039"
  },
  {
    "text": "a noral situation of application and then I will in inject this uh this this",
    "start": "1257039",
    "end": "1266640"
  },
  {
    "text": "PO into the application so I will execute it by C control apply D",
    "start": "1266640",
    "end": "1274000"
  },
  {
    "text": "fos oh sorry y DF so this this K is is created",
    "start": "1275360",
    "end": "1283840"
  },
  {
    "text": "and let's refresh the pages and we find this page is already gone and if we want",
    "start": "1283840",
    "end": "1289080"
  },
  {
    "text": "to recover this okay also just remove this",
    "start": "1289080",
    "end": "1294320"
  },
  {
    "text": "object yeah just K instead of control so and let's take a look about",
    "start": "1295159",
    "end": "1302039"
  },
  {
    "text": "the status of the uh status of the path it will be left arm and the status be",
    "start": "1302039",
    "end": "1308480"
  },
  {
    "text": "running and it's already restarted and let's refresh the applic yes back so uh",
    "start": "1308480",
    "end": "1314679"
  },
  {
    "text": "the application goes well so uh actually this uh this this situation uh reflects",
    "start": "1314679",
    "end": "1321640"
  },
  {
    "text": "a uh design a better design called single point failure actually it could",
    "start": "1321640",
    "end": "1326760"
  },
  {
    "text": "be um pass through by multiple replicas so maybe I could show you another uh",
    "start": "1326760",
    "end": "1334679"
  },
  {
    "text": "cases uh let's scale the left arm to three",
    "start": "1334679",
    "end": "1341360"
  },
  {
    "text": "replicas yeah and let's take a look the PA is",
    "start": "1341360",
    "end": "1346600"
  },
  {
    "text": "creating yeah this right so if we execute this scos experiments again",
    "start": "1346600",
    "end": "1353159"
  },
  {
    "text": "please no this we are using mode one it means we we will only make one part",
    "start": "1353159",
    "end": "1358440"
  },
  {
    "text": "failure so uh if uh one po failure the rest two still works and it should be",
    "start": "1358440",
    "end": "1365559"
  },
  {
    "text": "well for a high available High available application so let's start",
    "start": "1365559",
    "end": "1372278"
  },
  {
    "text": "it let's let's create this chos again and yeah it's still well why because",
    "start": "1375080",
    "end": "1381720"
  },
  {
    "text": "there are still other instance running very pretty well",
    "start": "1381720",
    "end": "1387240"
  },
  {
    "text": "pretty well so okay that's the part the",
    "start": "1387240",
    "end": "1394000"
  },
  {
    "text": "part chaos and another chaos is the network chos I will I will inject nwork",
    "start": "1394000",
    "end": "1399440"
  },
  {
    "text": "networks delay to uh different components and change the sequence the",
    "start": "1399440",
    "end": "1405120"
  },
  {
    "text": "uh uh appear to the web from page so this is a normal situation when I",
    "start": "1405120",
    "end": "1411240"
  },
  {
    "text": "refresh the pages it disappear so quickly and after I apply the network has delay yeah before that I I I",
    "start": "1411240",
    "end": "1419640"
  },
  {
    "text": "actually take a look about the content I will I will create different delay into",
    "start": "1419640",
    "end": "1425760"
  },
  {
    "text": "the onto the different components 200 400 800 so I",
    "start": "1425760",
    "end": "1433400"
  },
  {
    "text": "create create eight and then I refresh it yeah you can say the different parts",
    "start": "1433400",
    "end": "1439159"
  },
  {
    "text": "of the body appears one by one yeah this kind of this is C because of the network",
    "start": "1439159",
    "end": "1447600"
  },
  {
    "text": "delay let's delete it let's recover it by just delete it yeah it's it's go back",
    "start": "1449520",
    "end": "1454919"
  },
  {
    "text": "to more more and and At Last I want to show you the most interesting uh here is",
    "start": "1454919",
    "end": "1460799"
  },
  {
    "text": "is is HTTP Kos um actually uh HTTP Kos could modify the content of the request",
    "start": "1460799",
    "end": "1467559"
  },
  {
    "text": "or response and in this Cas is I will use another picture to replace the original the the head picture I will use",
    "start": "1467559",
    "end": "1474159"
  },
  {
    "text": "K smash logo to replace it and also we could take get the back of the",
    "start": "1474159",
    "end": "1481919"
  },
  {
    "text": "file yeah there a lot of things because actually this is a content of the SVG file let do not care about that yeah HDs",
    "start": "1481919",
    "end": "1491640"
  },
  {
    "text": "replace replace the body with this kind of content as we create it",
    "start": "1491640",
    "end": "1499360"
  },
  {
    "text": "yeah then take a refresh so yeah that's",
    "start": "1499360",
    "end": "1506240"
  },
  {
    "text": "yeah the chaos thep chos injected and it replaced the picture with the chaos MH",
    "start": "1506240",
    "end": "1512159"
  },
  {
    "text": "logo and then we recover it by just delete the",
    "start": "1512159",
    "end": "1519440"
  },
  {
    "text": "object yeah it do recover very quickly very efficiently so yeah that's how I",
    "start": "1519440",
    "end": "1526159"
  },
  {
    "text": "think you already get the awesome thing which could which chaos match could do and as then I will I I will share some",
    "start": "1526159",
    "end": "1533520"
  },
  {
    "text": "practice uh from our adopters uh to talk about the integration",
    "start": "1533520",
    "end": "1540200"
  },
  {
    "text": "um the integration with C mesh and their own platform so uh the first share is",
    "start": "1540200",
    "end": "1546799"
  },
  {
    "text": "called U uh stability test in TB releases TB is the product of P CAP and",
    "start": "1546799",
    "end": "1555039"
  },
  {
    "text": "it's a um High availability and a distributed database system and they",
    "start": "1555039",
    "end": "1561080"
  },
  {
    "text": "using C Mes in their CI system their CI Pipeline and in which in each releases",
    "start": "1561080",
    "end": "1567520"
  },
  {
    "text": "vers released version they will use lots of situations or there's lots of situations of CH test to verify that TB",
    "start": "1567520",
    "end": "1575799"
  },
  {
    "text": "is still fit for the higher availability uh requirements yeah this this this is",
    "start": "1575799",
    "end": "1581480"
  },
  {
    "text": "one of the usage another usage is chaos smes on TB Cloud U P CAP also say that",
    "start": "1581480",
    "end": "1586880"
  },
  {
    "text": "global area available PB Service uh called um PB cloud and bu is across um",
    "start": "1586880",
    "end": "1594679"
  },
  {
    "text": "lot of the uh uh region region and available Zone and the design is there",
    "start": "1594679",
    "end": "1601480"
  },
  {
    "text": "is a regional chos mesh and it could inject different C into their into into",
    "start": "1601480",
    "end": "1607480"
  },
  {
    "text": "the tenant uh instance under the um same same region yeah it's kind of very",
    "start": "1607480",
    "end": "1613880"
  },
  {
    "text": "efficient uh design is is avoided um or or heading to install too much K smesh",
    "start": "1613880",
    "end": "1621000"
  },
  {
    "text": "instance of a tenance cluster and they also have their products called Clinic",
    "start": "1621000",
    "end": "1626600"
  },
  {
    "text": "which also integrated the chaos mesh inside of their product and you could say um the tidb user could just use the",
    "start": "1626600",
    "end": "1635600"
  },
  {
    "text": "drill test um functionality to uh simulate some chaos experiments in their",
    "start": "1635600",
    "end": "1641360"
  },
  {
    "text": "Custer and also with some beautiful uh metrix matrix chart inside the page and",
    "start": "1641360",
    "end": "1649159"
  },
  {
    "text": "another cons another adapter is tensent cloud uh they they also have their own",
    "start": "1649159",
    "end": "1655159"
  },
  {
    "text": "platform called osar and it's a t private CL chaos engine your platform",
    "start": "1655159",
    "end": "1660840"
  },
  {
    "text": "it's really um a complex a complex system and they have uh lots of",
    "start": "1660840",
    "end": "1666600"
  },
  {
    "text": "customers um for such as internal cust internal customers like uh you can po",
    "start": "1666600",
    "end": "1673080"
  },
  {
    "text": "platforms and the we pay and they also have other external customers like um um Bank company insurance company and",
    "start": "1673080",
    "end": "1680240"
  },
  {
    "text": "finance companies and inside of their design C mesh um case chaos me as a",
    "start": "1680240",
    "end": "1686360"
  },
  {
    "text": "powerful tool to inject chaos and they have other um they have other they have",
    "start": "1686360",
    "end": "1693120"
  },
  {
    "text": "other components to uh Management on orchestrate the chaos experiment uh for",
    "start": "1693120",
    "end": "1698320"
  },
  {
    "text": "example uh there are lot of chaos experiment could be reuse and they have built their um management system called",
    "start": "1698320",
    "end": "1705799"
  },
  {
    "text": "Oscar Hub Oscar hub have lots of templates of chaos experiments which could be reused by different user and",
    "start": "1705799",
    "end": "1713000"
  },
  {
    "text": "they could also um use there uh cmtb is is really like the label label things in",
    "start": "1713000",
    "end": "1720919"
  },
  {
    "text": "kuity system could dynamically to choose uh the uh chos experiment Target to get",
    "start": "1720919",
    "end": "1728600"
  },
  {
    "text": "injected and they had and osar also have their um management system they have uh",
    "start": "1728600",
    "end": "1736159"
  },
  {
    "text": "they build they build the um great uh dashboard for",
    "start": "1736159",
    "end": "1741880"
  },
  {
    "text": "management and the report uh you know C does not provide this kind of",
    "start": "1741880",
    "end": "1747559"
  },
  {
    "text": "functionality about um experiments reporting or k experiment history so uh",
    "start": "1747559",
    "end": "1753760"
  },
  {
    "text": "they just do it by theirself so yeah there's some practices about how to use",
    "start": "1753760",
    "end": "1760440"
  },
  {
    "text": "how to integrate Kos meas with their ow platform so um I'm very happy to share",
    "start": "1760440",
    "end": "1767000"
  },
  {
    "text": "uh the demo and practices and thank you very much to join us and back to Sayan",
    "start": "1767000",
    "end": "1773799"
  },
  {
    "text": "thanks awesome demo um coming to the project updates and the road map so um",
    "start": "1773799",
    "end": "1782399"
  },
  {
    "text": "some of the updates with the ongoing project uh so firstly it's we have a new",
    "start": "1782399",
    "end": "1788399"
  },
  {
    "text": "release kosmas 262 um the latest version comes with",
    "start": "1788399",
    "end": "1793480"
  },
  {
    "text": "some of the enhanced features uh and buck fixes providing more robust solution for chaos",
    "start": "1793480",
    "end": "1799799"
  },
  {
    "text": "engineering experiments and Chaos mesh always follows the Upstream so it's it",
    "start": "1799799",
    "end": "1806240"
  },
  {
    "text": "supports the latest kubernetes version 1.28 um also defined the dashboard view",
    "start": "1806240",
    "end": "1814080"
  },
  {
    "text": "so the updates aim to provide more userfriendly interface and better overall user",
    "start": "1814080",
    "end": "1820600"
  },
  {
    "text": "experience um in the in the commitment with respect to security and safety",
    "start": "1820600",
    "end": "1827880"
  },
  {
    "text": "um we have upgraded the dependencies to address the vulnerable issues uh this",
    "start": "1827880",
    "end": "1834320"
  },
  {
    "text": "ensures the platform continues to be secure and reliable and lastly the",
    "start": "1834320",
    "end": "1840120"
  },
  {
    "text": "introduction of um s bombs software builds of material and the signed container images uh obviously this",
    "start": "1840120",
    "end": "1846240"
  },
  {
    "text": "feature again enhance the transparency and uh trustworthiness of the uh of the",
    "start": "1846240",
    "end": "1851360"
  },
  {
    "text": "software products that you're using as bombs is mandatory yes that's not new thing now uh looking at the future of chaos",
    "start": "1851360",
    "end": "1860880"
  },
  {
    "text": "mesh some one of the most requested one as well uh so con consistently the team",
    "start": "1860880",
    "end": "1866360"
  },
  {
    "text": "is working on providing more and more um observability um in chaos mes so we plan",
    "start": "1866360",
    "end": "1874080"
  },
  {
    "text": "to provide the metrics for chaos mesh for helping better understand the effects of that chaos experiment uh",
    "start": "1874080",
    "end": "1880399"
  },
  {
    "text": "mainly the graph that you shown so those sort of more more um graphs that you can",
    "start": "1880399",
    "end": "1886519"
  },
  {
    "text": "you can see when the chaos experiment happened what happened in that particular duration the network loss happened uh so for example in that",
    "start": "1886519",
    "end": "1894159"
  },
  {
    "text": "Network latency uh the injected pod for Network chaos fine grain CPU memory",
    "start": "1894159",
    "end": "1900080"
  },
  {
    "text": "usage metrics uh for the stress chaos and and all those things and then we also plan to increase the uh ability of",
    "start": "1900080",
    "end": "1907000"
  },
  {
    "text": "health check with the goal of achieving the similar liveness probe um on a pod",
    "start": "1907000",
    "end": "1913159"
  },
  {
    "text": "um then multicluster uh support chaos allowing you users to conduct experiment",
    "start": "1913159",
    "end": "1918279"
  },
  {
    "text": "across multiple clusters um using a centralized management and scheduling so centralized management scheduling and",
    "start": "1918279",
    "end": "1924200"
  },
  {
    "text": "you should be able to um run different experiments across different",
    "start": "1924200",
    "end": "1930159"
  },
  {
    "text": "clusters then uh code base is continuously being optimized um and with respect to latest",
    "start": "1930159",
    "end": "1937760"
  },
  {
    "text": "cuber support um end to end testing integration testing all that stuff and",
    "start": "1937760",
    "end": "1944519"
  },
  {
    "text": "um a very interesting thing that is Happ happen in or which which the the kind of",
    "start": "1944519",
    "end": "1950200"
  },
  {
    "text": "aim is um is striving to collaborate with other open source projects to build",
    "start": "1950200",
    "end": "1957519"
  },
  {
    "text": "a chaos automation platform kind of so um c c chap like chap which is the chaos",
    "start": "1957519",
    "end": "1965679"
  },
  {
    "text": "uh automation platform that like we call it like that originates from the internal practices at Netflix and uh can",
    "start": "1965679",
    "end": "1972480"
  },
  {
    "text": "automatically carry out small scale chaos experiments and provide automated analysis and reports uh so this allows",
    "start": "1972480",
    "end": "1979960"
  },
  {
    "text": "the um idea of sacrificing the experiments of a very small portion of users exchange for the stability of the",
    "start": "1979960",
    "end": "1987279"
  },
  {
    "text": "entire platform um obviously there are many technical points involved in",
    "start": "1987279",
    "end": "1993960"
  },
  {
    "text": "automatic chaos experiments uh and the development of uh this particular",
    "start": "1993960",
    "end": "1999039"
  },
  {
    "text": "platform uh needs a lot of effort meeting and all those things so U for",
    "start": "1999039",
    "end": "2005240"
  },
  {
    "text": "example we we can use skeptic for Canary releases um and roll back after the",
    "start": "2005240",
    "end": "2010720"
  },
  {
    "text": "experiment is completed we can use service mesh or Gateway API to schedule traffic uh redirect very small portion",
    "start": "2010720",
    "end": "2018279"
  },
  {
    "text": "of traffic of chaos experiment group and the world we can use k6 grafana k6 um as",
    "start": "2018279",
    "end": "2025720"
  },
  {
    "text": "an additional load testing tool for simulating additional loads um and we can finally use observability facilities",
    "start": "2025720",
    "end": "2034320"
  },
  {
    "text": "um to collect analyze performance logs generate reports create fancy graphs and",
    "start": "2034320",
    "end": "2040600"
  },
  {
    "text": "and all those things so yes the there are a lot of future possibilities that",
    "start": "2040600",
    "end": "2045639"
  },
  {
    "text": "will be there with respect to uh chaos mesh so but this is the direction that",
    "start": "2045639",
    "end": "2051398"
  },
  {
    "text": "the project is going but they're also looking for more and more contributors so that these things can",
    "start": "2051399",
    "end": "2057440"
  },
  {
    "text": "happen fast so as we move towards uh",
    "start": "2057440",
    "end": "2062800"
  },
  {
    "text": "exploring all the challenging things and more and more opportunities for for building the uh chaplik Solutions the",
    "start": "2062800",
    "end": "2070679"
  },
  {
    "text": "chaos automation platform and integrating the different set of tooling kep I mean these are just the examples",
    "start": "2070679",
    "end": "2076638"
  },
  {
    "text": "but there are there are other set of toolings as well um and that should be",
    "start": "2076639",
    "end": "2082358"
  },
  {
    "text": "needing more and more contributors so that's pretty much it that I had for this particular session uh with my",
    "start": "2082359",
    "end": "2088280"
  },
  {
    "text": "co-presenter who was not there but you saw the awesome Potato Head application um I mean that was that was really funny",
    "start": "2088280",
    "end": "2094520"
  },
  {
    "text": "right um so thank you so much for for coming in and I'll be here around hanging if you have any Q&A I think the",
    "start": "2094520",
    "end": "2101640"
  },
  {
    "text": "time is already done so thank you so much for coming",
    "start": "2101640",
    "end": "2109560"
  }
]