[
  {
    "text": "hello everyone uh happy to be speaking here and happy to that all of you are",
    "start": "120",
    "end": "5720"
  },
  {
    "text": "here uh I'm Anna I work at is valent on all observability things uh related",
    "start": "5720",
    "end": "14200"
  },
  {
    "text": "to networking and security use cases um",
    "start": "14200",
    "end": "19320"
  },
  {
    "text": "yeah I'm a software engineer uh Building Solutions uh on top of EF for network",
    "start": "19320",
    "end": "25800"
  },
  {
    "text": "and security visibility H and today I will talk about uh using ebpf for observability um what",
    "start": "25800",
    "end": "35280"
  },
  {
    "text": "are common issues with this and uh show you some examples how um we see it com",
    "start": "35280",
    "end": "43480"
  },
  {
    "text": "ebpf being commonly used for observability uh and uh yeah common news",
    "start": "43480",
    "end": "48600"
  },
  {
    "text": "cases we we see so uh EF is present in observability",
    "start": "48600",
    "end": "55000"
  },
  {
    "text": "space for quite a while um and it promises a lot uh it it promises uh that",
    "start": "55000",
    "end": "61640"
  },
  {
    "text": "we will that we will get no instrumentation uh observability we just",
    "start": "61640",
    "end": "67360"
  },
  {
    "text": "drop in something and uh magically get observability for our applications it",
    "start": "67360",
    "end": "73720"
  },
  {
    "text": "promises complete visibility because ebpf is running in the",
    "start": "73720",
    "end": "79840"
  },
  {
    "text": "kernel um it sees all the applications running on the machine uh especially",
    "start": "79840",
    "end": "86960"
  },
  {
    "text": "important in um environments like kubernetes is when uh applications can be just scheduled anywhere um and um",
    "start": "86960",
    "end": "96360"
  },
  {
    "text": "application developers don't generally need to think about where they are running uh but ebpf uh program still can",
    "start": "96360",
    "end": "103840"
  },
  {
    "text": "see them uh ebpf also promises low overhead of um of the visibility we are",
    "start": "103840",
    "end": "112399"
  },
  {
    "text": "getting um and reliability and reliability is a part that's uh in my",
    "start": "112399",
    "end": "118280"
  },
  {
    "text": "opinion a bit underappreciated um because evf programs are",
    "start": "118280",
    "end": "125759"
  },
  {
    "text": "verified uh they to run in a caral they have to be checked that they are uh safe",
    "start": "125759",
    "end": "132280"
  },
  {
    "text": "to run um it means that they are they are pretty reliable they are not back",
    "start": "132280",
    "end": "139080"
  },
  {
    "text": "free of course but they are more reliable than most software ding right and uh for all of these things like uh",
    "start": "139080",
    "end": "146680"
  },
  {
    "text": "to get observability with no instrument ation there are other approaches like we",
    "start": "146680",
    "end": "152040"
  },
  {
    "text": "can install some um some agents we can inject some side cars but uh I'm sure",
    "start": "152040",
    "end": "158319"
  },
  {
    "text": "many of us have experienced this Dreadful incidents that uh for example",
    "start": "158319",
    "end": "163519"
  },
  {
    "text": "affected connectivity between site car and an application and then when we need",
    "start": "163519",
    "end": "169480"
  },
  {
    "text": "data the most we lose them um with ebpf because programs are running in the",
    "start": "169480",
    "end": "176440"
  },
  {
    "text": "kernel um we in general they just stay there and run uh they don't cause that",
    "start": "176440",
    "end": "183760"
  },
  {
    "text": "that many issues as uh user space um agents or side cars that can crash uh so",
    "start": "183760",
    "end": "191440"
  },
  {
    "text": "they uh at this extra layer of reliability so this are all things that",
    "start": "191440",
    "end": "197360"
  },
  {
    "text": "uh if promises ask for observability uh how it works uh I assume not uh",
    "start": "197360",
    "end": "204000"
  },
  {
    "text": "everybody is familiar uh so BPF is here for a while but uh it's most of us using",
    "start": "204000",
    "end": "210319"
  },
  {
    "text": "indirectly and not really writing vpf code so uh short uh overview of how it",
    "start": "210319",
    "end": "217840"
  },
  {
    "text": "works um we have a user space",
    "start": "217840",
    "end": "224000"
  },
  {
    "text": "agent uh yeah so usually there is some um some sort of agent that loads BPF",
    "start": "224000",
    "end": "230599"
  },
  {
    "text": "programs um then evf programs Lo are verified by the",
    "start": "230599",
    "end": "237959"
  },
  {
    "text": "verifier verifier is very interesting piece of software that I'm not going to go into but it essentially checks that",
    "start": "237959",
    "end": "244319"
  },
  {
    "text": "programs are safe to safe to run that they uh won't use all memory won't crush",
    "start": "244319",
    "end": "251079"
  },
  {
    "text": "the machine things like that uh then the programs are uh just in time compiled um",
    "start": "251079",
    "end": "257079"
  },
  {
    "text": "so this piece provides us uh minimal overhead because everything is um it's",
    "start": "257079",
    "end": "264440"
  },
  {
    "text": "just running um in the kernel and it's compiled uh efficiently and and then uh",
    "start": "264440",
    "end": "271320"
  },
  {
    "text": "the BPF program is hooked uh it is hooked to uh on this picture it's uh an",
    "start": "271320",
    "end": "278680"
  },
  {
    "text": "example Cisco but it doesn't have to be Cisco there are many different hook points uh it's hooked somewhere and then",
    "start": "278680",
    "end": "286120"
  },
  {
    "text": "it runs on every execution of this hook point and this is the bit that gives us",
    "start": "286120",
    "end": "293120"
  },
  {
    "text": "this complete visibility because um the ebpa program doesn't care what triggered",
    "start": "293120",
    "end": "300479"
  },
  {
    "text": "this hook Point uh we have applications um running in written in many languages",
    "start": "300479",
    "end": "308759"
  },
  {
    "text": "um maintained by many different teams um no matter what language application is",
    "start": "308759",
    "end": "314520"
  },
  {
    "text": "written in the hook point will be executed um yeah and there's no way for",
    "start": "314520",
    "end": "320919"
  },
  {
    "text": "application to to stop it okay uh I was talking about the hook points so what they are uh here you have a sneak peek",
    "start": "320919",
    "end": "328120"
  },
  {
    "text": "of uh tool that I'm at the moment working on tetragon uh",
    "start": "328120",
    "end": "333960"
  },
  {
    "text": "so this is a example tetragon configuration um a tracing policy uh",
    "start": "333960",
    "end": "340960"
  },
  {
    "text": "which is pretty lowlevel configuration where you can Define which hook points",
    "start": "340960",
    "end": "346639"
  },
  {
    "text": "exactly you want to hook into uh in which ones you want to observe uh we",
    "start": "346639",
    "end": "353000"
  },
  {
    "text": "have K propes caps are kernel props which are any kernel functions",
    "start": "353000",
    "end": "359039"
  },
  {
    "text": "practically uh yeah essentially you can uh hook into any uh kernel function uh there are K",
    "start": "359039",
    "end": "366680"
  },
  {
    "text": "red probes which are like K probes but executed on uh the return of the",
    "start": "366680",
    "end": "371880"
  },
  {
    "text": "function not uh when it starts um very often in observability context we use",
    "start": "371880",
    "end": "378319"
  },
  {
    "text": "both K probes and K red probes because we we usually want to understand what uh",
    "start": "378319",
    "end": "384039"
  },
  {
    "text": "the function was doing what it did exactly and not only that it executed",
    "start": "384039",
    "end": "390199"
  },
  {
    "text": "uh there are Trace points which are like uh like K probes but uh static so a bit",
    "start": "390199",
    "end": "396720"
  },
  {
    "text": "more stable uh and there are also U probes and Ed probes um so like K probes",
    "start": "396720",
    "end": "403080"
  },
  {
    "text": "again but user user space user level uh probes when we hook can hook into um",
    "start": "403080",
    "end": "408800"
  },
  {
    "text": "like user application symbols uh also very commonly used uh in observability I",
    "start": "408800",
    "end": "415120"
  },
  {
    "text": "don't have them in this example but uh very commonly used for example for",
    "start": "415120",
    "end": "420240"
  },
  {
    "text": "um um automated uh Auto instrumentation for distributed",
    "start": "420240",
    "end": "426680"
  },
  {
    "text": "tracing all right um so yeah and now um",
    "start": "426680",
    "end": "433280"
  },
  {
    "text": "this um is promising us a lot but you might now think how this can actually",
    "start": "433280",
    "end": "440120"
  },
  {
    "text": "help us with observability because uh well it's it's cool that we can see like",
    "start": "440120",
    "end": "446599"
  },
  {
    "text": "what Kel is doing but this is not what we exactly would call",
    "start": "446599",
    "end": "452919"
  },
  {
    "text": "observability um what what actually we would call observability then uh so in",
    "start": "452919",
    "end": "459599"
  },
  {
    "text": "the past uh like at this point uh we would quote somebody who has some smart",
    "start": "459599",
    "end": "468159"
  },
  {
    "text": "things to say about it these days we are asking CH GPT for things like that so I",
    "start": "468159",
    "end": "473560"
  },
  {
    "text": "did this um so this is what Chad gbt told me what what is observability um",
    "start": "473560",
    "end": "479520"
  },
  {
    "text": "observability is the capability to inspect and understand a system State based on its external outputs such as",
    "start": "479520",
    "end": "485400"
  },
  {
    "text": "logs metrics and traces it involves collecting and analyzing these data",
    "start": "485400",
    "end": "490560"
  },
  {
    "text": "points to our diagnose issues optimize performance and ensure that systems reliability observability provides deep",
    "start": "490560",
    "end": "496000"
  },
  {
    "text": "insight into the system facilitating proactive problem solving and improving overall system understanding okay this",
    "start": "496000",
    "end": "502120"
  },
  {
    "text": "this sounds like reasonable to me not not different from from uh what I",
    "start": "502120",
    "end": "507440"
  },
  {
    "text": "actually hearing from humans um the key points are that um there's",
    "start": "507440",
    "end": "513440"
  },
  {
    "text": "system that exposes some data um logs metric races or other data but there is",
    "start": "513440",
    "end": "518640"
  },
  {
    "text": "some data exposed by the system we are collecting this data in some database and then we are expecting that this data",
    "start": "518640",
    "end": "527880"
  },
  {
    "text": "will allow will let us understand the system so we without touching the system",
    "start": "527880",
    "end": "534200"
  },
  {
    "text": "we we just need to query the data um probably we need some query language",
    "start": "534200",
    "end": "539600"
  },
  {
    "text": "some visualization maybe but the goal is to understand um the system uh for",
    "start": "539600",
    "end": "546720"
  },
  {
    "text": "whatever we are doing all right and now um if we think",
    "start": "546720",
    "end": "553800"
  },
  {
    "text": "back about uh what we are doing with a BPF we are hooking to some Cent functions or some uh new probes whatever",
    "start": "553800",
    "end": "561360"
  },
  {
    "text": "um how does it actually help us understand the system the fact that uh",
    "start": "561360",
    "end": "567519"
  },
  {
    "text": "well some kernel functions are EX executing yeah of course they are executing they are doing something but",
    "start": "567519",
    "end": "574079"
  },
  {
    "text": "uh this is something happening in the kernel what uh and we want to understand",
    "start": "574079",
    "end": "580040"
  },
  {
    "text": "not the kernel but the the whole system um our applications and the the the",
    "start": "580040",
    "end": "585880"
  },
  {
    "text": "wider system so um in my opinion the two key things to uh to really uh ensure",
    "start": "585880",
    "end": "596160"
  },
  {
    "text": "system observability uh is context and correlation um what what we really need",
    "start": "596160",
    "end": "604519"
  },
  {
    "text": "in an observability tool is uh we need context we need to have this user",
    "start": "604519",
    "end": "610079"
  },
  {
    "text": "context to understand uh not only that Kel is doing something but also",
    "start": "610079",
    "end": "617519"
  },
  {
    "text": "understand um understand it in the context of uh user requests of um some",
    "start": "617519",
    "end": "625000"
  },
  {
    "text": "business application uh whatever the application is is doing and we need",
    "start": "625000",
    "end": "630079"
  },
  {
    "text": "correlation uh because the system is doing so much that if if we just have",
    "start": "630079",
    "end": "639000"
  },
  {
    "text": "some individual events about what what is going on then still understanding the",
    "start": "639000",
    "end": "646079"
  },
  {
    "text": "system from this individual events would be very very difficult because um how to",
    "start": "646079",
    "end": "653440"
  },
  {
    "text": "build full picture from from all of them uh and uh one feature in in",
    "start": "653440",
    "end": "659760"
  },
  {
    "text": "B in BPF that really allows us to use it for um for observability and for",
    "start": "659760",
    "end": "667959"
  },
  {
    "text": "anything else really uh BPF Maps BPF maps are like uh",
    "start": "667959",
    "end": "674079"
  },
  {
    "text": "like data store in BPF world so wherever we would use a database a cach in BPF",
    "start": "674079",
    "end": "680880"
  },
  {
    "text": "world we use a BPF map there are many different kinds of them but they are like key value Stores um s in in kernel",
    "start": "680880",
    "end": "688920"
  },
  {
    "text": "memory they are used for uh a few things so first of all this is uh they allow us",
    "start": "688920",
    "end": "696240"
  },
  {
    "text": "to pass the high level context to Kernel so this is the bit that really allows us",
    "start": "696240",
    "end": "702680"
  },
  {
    "text": "to build observability tool with evf not only uh just observe what the kernel is",
    "start": "702680",
    "end": "711480"
  },
  {
    "text": "doing and inform user about it we can pass this high level context for example from um kubernetes metala would be",
    "start": "711480",
    "end": "718519"
  },
  {
    "text": "standard example or any sort of uh business context really uh we can correlate between different events so",
    "start": "718519",
    "end": "724320"
  },
  {
    "text": "different evf programs can use same map uh and thanks to that we can correlate for example between kpr and K probe this",
    "start": "724320",
    "end": "732279"
  },
  {
    "text": "is what we do very often but also uh between completely different events like u a network event and a file event why",
    "start": "732279",
    "end": "740000"
  },
  {
    "text": "not we we can correlate them to to understand the full picture of what is going on um and then uh kind of basic",
    "start": "740000",
    "end": "748680"
  },
  {
    "text": "usage of uh of BPF maps and fundamental to everything we do we we need to",
    "start": "748680",
    "end": "753839"
  },
  {
    "text": "somehow pass the data from uh uh from the kernel to the user so uh yeah we we",
    "start": "753839",
    "end": "760760"
  },
  {
    "text": "use BPF map for that too because both kernel and the user uh the the agent",
    "start": "760760",
    "end": "766560"
  },
  {
    "text": "user space agent can uh access it um let's zoom into to this bit a little bit",
    "start": "766560",
    "end": "773160"
  },
  {
    "text": "so um in general in in observability",
    "start": "773160",
    "end": "778199"
  },
  {
    "text": "tooling there we we there are two modes of how data is retrieved either we pull things or push",
    "start": "778199",
    "end": "786040"
  },
  {
    "text": "things um typically in pritus for example we pull metrics uh from the",
    "start": "786040",
    "end": "793279"
  },
  {
    "text": "targets um other uh other tools uh might",
    "start": "793279",
    "end": "799040"
  },
  {
    "text": "prefer uh pushing some some events so uh two typical",
    "start": "799040",
    "end": "804800"
  },
  {
    "text": "uh how we typically uh transfer data between user space in Kel space we uh",
    "start": "804800",
    "end": "811040"
  },
  {
    "text": "push events uh through a ring buffer with user space agent and then the user",
    "start": "811040",
    "end": "817680"
  },
  {
    "text": "space engine uh has to keep with with the ring buffer",
    "start": "817680",
    "end": "822920"
  },
  {
    "text": "um and and just read this event and uh we can also pull metrics from uh from a",
    "start": "822920",
    "end": "830839"
  },
  {
    "text": "map uh I will dive into this uh a little bit uh later all right so um the data problem",
    "start": "830839",
    "end": "840320"
  },
  {
    "text": "uh here we see um this is uh a graph from recent survey from gra analabs",
    "start": "840320",
    "end": "849279"
  },
  {
    "text": "about biggest concerns about observability and uh well working on uh",
    "start": "849279",
    "end": "855000"
  },
  {
    "text": "you know BPF based observability tooling what I would like to say see here is that the biggest concern is that uh",
    "start": "855000",
    "end": "862600"
  },
  {
    "text": "instrumentation is the F and that we are like bam BPF no observability no no instrumentation and full observability",
    "start": "862600",
    "end": "869440"
  },
  {
    "text": "or like uh that the overhead is big and we are like bumf low overhead but it it",
    "start": "869440",
    "end": "876839"
  },
  {
    "text": "doesn't look like that exactly uh what what we see here is that the biggest concern is cost uh and EF can help with",
    "start": "876839",
    "end": "885240"
  },
  {
    "text": "this uh all of these aspects I talked about uh contribute to cost and can help",
    "start": "885240",
    "end": "891720"
  },
  {
    "text": "to reduce cost but cost is a complex thing there are million factors to it",
    "start": "891720",
    "end": "897399"
  },
  {
    "text": "and it's pretty hard to measure measure how we are actually affecting the the cost of observability tooling of the the",
    "start": "897399",
    "end": "904600"
  },
  {
    "text": "whole pipeline um the next uh biggest concerns are uh complexity orginality",
    "start": "904600",
    "end": "912440"
  },
  {
    "text": "signal to noise ratio and data retention time uh so essentially we we see here a",
    "start": "912440",
    "end": "918839"
  },
  {
    "text": "lot of things related to data to cardinality of data um how much of",
    "start": "918839",
    "end": "927880"
  },
  {
    "text": "this data is signal how much is noise that we need to somehow filter out to actually find the",
    "start": "927880",
    "end": "934720"
  },
  {
    "text": "signal uh how much data can we actually store uh to make troubleshooting",
    "start": "934720",
    "end": "941399"
  },
  {
    "text": "possible but still keep the cost reasonable um the ebpf based",
    "start": "941399",
    "end": "950680"
  },
  {
    "text": "observability tools produce different kinds of data um here are a few uh tool",
    "start": "950680",
    "end": "958639"
  },
  {
    "text": "few of these tools uh tetragon which produces uh events events by events I",
    "start": "958639",
    "end": "965000"
  },
  {
    "text": "mean like uh locks but structured so uh",
    "start": "965000",
    "end": "971959"
  },
  {
    "text": "yeah essentially locks with with uh with a schema that are just exported in Json",
    "start": "971959",
    "end": "979079"
  },
  {
    "text": "format and Metric uh there is Pixie which uh exports uh metrics and profiles",
    "start": "979079",
    "end": "985399"
  },
  {
    "text": "there are a few other abpf based profilers too like parka or uh pyroscope uh there is recently more",
    "start": "985399",
    "end": "992399"
  },
  {
    "text": "recently released Kaba which U provides metrics to and uh Trace pants so it does",
    "start": "992399",
    "end": "1000040"
  },
  {
    "text": "um Auto instrumentation for distributed tracing and exports um Trace",
    "start": "1000040",
    "end": "1005560"
  },
  {
    "text": "pants um I uh currently I work on the on",
    "start": "1005560",
    "end": "1011279"
  },
  {
    "text": "tetragon uh so I know it the most so I show a few examples from from this one",
    "start": "1011279",
    "end": "1016600"
  },
  {
    "text": "um this is graphics uh describing tetragon in in more details uh it's was",
    "start": "1016600",
    "end": "1023519"
  },
  {
    "text": "built as a security Tool uh so most so",
    "start": "1023519",
    "end": "1029000"
  },
  {
    "text": "the main use cases are are focused on security but in reality the the core",
    "start": "1029000",
    "end": "1037160"
  },
  {
    "text": "functionality uh is pretty generic uh loader of probes so we can use it for",
    "start": "1037160",
    "end": "1046120"
  },
  {
    "text": "million different use cases from security to Dom but also from uh many",
    "start": "1046120",
    "end": "1051200"
  },
  {
    "text": "other domains because if we can load any K probe or U probe then um we can do",
    "start": "1051200",
    "end": "1058280"
  },
  {
    "text": "whatever we we want with with events we we are getting from it um so here is the example um",
    "start": "1058280",
    "end": "1068840"
  },
  {
    "text": "configuration uh of for tetragon uh tetragon in general is configured um",
    "start": "1068840",
    "end": "1075080"
  },
  {
    "text": "with tracing policy crd and um this example is um a tracing",
    "start": "1075080",
    "end": "1084679"
  },
  {
    "text": "policy for um monitoring uh file",
    "start": "1084679",
    "end": "1089919"
  },
  {
    "text": "operations uh now it it it is pretty low level and um it's uh if you are wondering how uh",
    "start": "1089919",
    "end": "1099960"
  },
  {
    "text": "you can see that it hooks into security file permission cap rope um if you are",
    "start": "1099960",
    "end": "1105880"
  },
  {
    "text": "wondering how I came up with this particular l k probe I did not I generally uh rely on um kernel",
    "start": "1105880",
    "end": "1116480"
  },
  {
    "text": "Engineers who uh know Kel very well and know exactly uh where uh where to hook",
    "start": "1116480",
    "end": "1123080"
  },
  {
    "text": "to for example observe uh fire operations because it turns out that there are many different uh ways how we",
    "start": "1123080",
    "end": "1131159"
  },
  {
    "text": "the application can uh actually write two files um",
    "start": "1131159",
    "end": "1139559"
  },
  {
    "text": "if you like me are not a current developer then in the tetragon",
    "start": "1139559",
    "end": "1144960"
  },
  {
    "text": "repository there is a quite big directory with examples of tracing",
    "start": "1144960",
    "end": "1150440"
  },
  {
    "text": "policy for many many different use cases uh from security domain but also uh some",
    "start": "1150440",
    "end": "1156360"
  },
  {
    "text": "networking use cases so I invite you to uh go to um examples directory in uh in",
    "start": "1156360",
    "end": "1164400"
  },
  {
    "text": "uh tetron repository and browse this uh this examples all right so uh if we load",
    "start": "1164400",
    "end": "1170960"
  },
  {
    "text": "this policy to observe all file operations you can imagine that this",
    "start": "1170960",
    "end": "1176440"
  },
  {
    "text": "this would produce a lot of data because there applications are doing a lot of file operations applications developers",
    "start": "1176440",
    "end": "1184000"
  },
  {
    "text": "don't that often need to think about it because a library is abstracted for us",
    "start": "1184000",
    "end": "1190760"
  },
  {
    "text": "but most applications are doing a ton of file operations all the time so what do",
    "start": "1190760",
    "end": "1197280"
  },
  {
    "text": "we do with all this data and um how how",
    "start": "1197280",
    "end": "1202760"
  },
  {
    "text": "uh we generally approach uh using evf for observability um the first step is to",
    "start": "1202760",
    "end": "1212039"
  },
  {
    "text": "understand why we are using even using mpf for observability and um how how it",
    "start": "1212039",
    "end": "1220280"
  },
  {
    "text": "typically looks like so most companies when they are building their observability pipeline then go through a",
    "start": "1220280",
    "end": "1226400"
  },
  {
    "text": "few stages and this is like very very simplified view of this but first uh",
    "start": "1226400",
    "end": "1232480"
  },
  {
    "text": "when we first build applications usually we don't put any instrumentation in",
    "start": "1232480",
    "end": "1238360"
  },
  {
    "text": "there and there is very good reason for that because instrumentation is an additional overhead and if code is",
    "start": "1238360",
    "end": "1246480"
  },
  {
    "text": "evolving rapidly then this overhead either slows us down or you",
    "start": "1246480",
    "end": "1253600"
  },
  {
    "text": "just end up with very very incorrect instrumentation which is worse than knowing instrumentation because it is",
    "start": "1253600",
    "end": "1259799"
  },
  {
    "text": "completely misleading to us so this is this is not bad that yeah we we don't",
    "start": "1259799",
    "end": "1265840"
  },
  {
    "text": "write instrumentation from day one but then um uh we also end up with painful",
    "start": "1265840",
    "end": "1273080"
  },
  {
    "text": "incidents uh and very often the second step is do something go from nothing to",
    "start": "1273080",
    "end": "1281520"
  },
  {
    "text": "something from from zero to one and this step is usually a game changer so there",
    "start": "1281520",
    "end": "1287279"
  },
  {
    "text": "are plenty of tools now that provide uh some sort of Auto instrumentation that provide outof the Box solution so that",
    "start": "1287279",
    "end": "1294000"
  },
  {
    "text": "we are getting some visibility with one command for example um and this is great um this",
    "start": "1294000",
    "end": "1303320"
  },
  {
    "text": "already uh allows us to troubleshoot incidents more easily while it's also uh",
    "start": "1303320",
    "end": "1310960"
  },
  {
    "text": "it's still a low maintenance solution because we just installed something and we don't have to have a whole team",
    "start": "1310960",
    "end": "1317400"
  },
  {
    "text": "actually maintaining it and then there are probably a few other stages that I skipped on this slide uh but at some",
    "start": "1317400",
    "end": "1325240"
  },
  {
    "text": "point the the uh company has a actually",
    "start": "1325240",
    "end": "1330799"
  },
  {
    "text": "mature observability platform a team maintaining it uh B some business",
    "start": "1330799",
    "end": "1336440"
  },
  {
    "text": "specific instrumentation that allows teams to travel shot incidents efficiently um however usually there are",
    "start": "1336440",
    "end": "1345720"
  },
  {
    "text": "many te and many applications that are different mat maturity levels different stages of of this whole journey um and",
    "start": "1345720",
    "end": "1354080"
  },
  {
    "text": "usually uh we still uh want to keep low overhead and maybe um in particular in",
    "start": "1354080",
    "end": "1362159"
  },
  {
    "text": "mature uh big organizations we want to keep very low overhead because at scale it really adds up and uh it adds up very",
    "start": "1362159",
    "end": "1370320"
  },
  {
    "text": "quickly so um if BF can help with uh step one a lot uh because we get kn",
    "start": "1370320",
    "end": "1378520"
  },
  {
    "text": "instrumentations and many BPF uh based Solutions are uh provided out of the box",
    "start": "1378520",
    "end": "1384559"
  },
  {
    "text": "experience that you install something and you get um the whole um whole",
    "start": "1384559",
    "end": "1390320"
  },
  {
    "text": "solution uh but it can also help with uh immature organizations where um there",
    "start": "1390320",
    "end": "1396360"
  },
  {
    "text": "are many applications and this full visibility aspect of of vpf uh really",
    "start": "1396360",
    "end": "1403480"
  },
  {
    "text": "kicks off here that it can see everything that is happening uh not only",
    "start": "1403480",
    "end": "1409080"
  },
  {
    "text": "uh applications that are well uh instrumented and we are getting low",
    "start": "1409080",
    "end": "1414159"
  },
  {
    "text": "overhead with what matters lot of scale um many abpf based tools are not really",
    "start": "1414159",
    "end": "1420720"
  },
  {
    "text": "providing uh something like completely new that is impossible uh for with with",
    "start": "1420720",
    "end": "1428000"
  },
  {
    "text": "any other tools but are providing uh more efficient or easier to use easier",
    "start": "1428000",
    "end": "1434679"
  },
  {
    "text": "to maintain uh replacement um this is one example of this um so with tetragon",
    "start": "1434679",
    "end": "1442440"
  },
  {
    "text": "uh we built some grafana dashboards uh for networking and security use cases uh",
    "start": "1442440",
    "end": "1449240"
  },
  {
    "text": "which uh this example is uh showing the TCP traffic um this kind of data is also",
    "start": "1449240",
    "end": "1458240"
  },
  {
    "text": "uh possible to get with uh buil-in uh C advisor metrics built into kubernetes uh",
    "start": "1458240",
    "end": "1466679"
  },
  {
    "text": "and CU promus dashboard with ton in general it's uh it's likely",
    "start": "1466679",
    "end": "1474760"
  },
  {
    "text": "uh to be more efficient because uh data is aggregated in uh in the kernel",
    "start": "1474760",
    "end": "1482640"
  },
  {
    "text": "but um and also we might get uh we get extra information like the biner",
    "start": "1482640",
    "end": "1489000"
  },
  {
    "text": "association so uh you might need it you might not uh but probably it doesn't make sense to keep both of these tools",
    "start": "1489000",
    "end": "1496840"
  },
  {
    "text": "uh which is common cause of uh of the overhead in the observability space that we just have so many tools",
    "start": "1496840",
    "end": "1503720"
  },
  {
    "text": "that are duplicating each other and all right the step two um what we want to",
    "start": "1503720",
    "end": "1510360"
  },
  {
    "text": "observe um so uh filtering and I will show now a",
    "start": "1510360",
    "end": "1517640"
  },
  {
    "text": "few examples of um tetragon tracing policy that we uh saw previously so we",
    "start": "1517640",
    "end": "1525120"
  },
  {
    "text": "saw this example with um uh pile operation and",
    "start": "1525120",
    "end": "1530320"
  },
  {
    "text": "um the solution to to like all the uh",
    "start": "1530320",
    "end": "1535480"
  },
  {
    "text": "fluid of data we are would get with this uh is to uh filter by only some files",
    "start": "1535480",
    "end": "1543200"
  },
  {
    "text": "for example here um something that security teams like very much because",
    "start": "1543200",
    "end": "1549240"
  },
  {
    "text": "this was B with security teams mind uh filtering only rights to ITC password uh",
    "start": "1549240",
    "end": "1555880"
  },
  {
    "text": "so uh we can write configuration like that and uh tetragon will pass this",
    "start": "1555880",
    "end": "1562279"
  },
  {
    "text": "configuration to the kernel so the filtering actually happens in BPF",
    "start": "1562279",
    "end": "1567600"
  },
  {
    "text": "programs not in user space this is what what allows us to um to have this very",
    "start": "1567600",
    "end": "1573320"
  },
  {
    "text": "very low overhead because yeah everything is happening in the Kel and only relevant events are pushed to user",
    "start": "1573320",
    "end": "1579440"
  },
  {
    "text": "space second example is something that is pretty new uh I think uh part of it is still in in PR request but um St",
    "start": "1579440",
    "end": "1588399"
  },
  {
    "text": "traces um on crashes so uh we can hook",
    "start": "1588399",
    "end": "1594039"
  },
  {
    "text": "into function that uh that is called when application is SE falting and uh",
    "start": "1594039",
    "end": "1600279"
  },
  {
    "text": "get stack trace for it um many many companies use some tools uh that um that",
    "start": "1600279",
    "end": "1609720"
  },
  {
    "text": "provide you that par all the collect all the errors for you and",
    "start": "1609720",
    "end": "1616399"
  },
  {
    "text": "um and like group them for you um",
    "start": "1616399",
    "end": "1621919"
  },
  {
    "text": "however uh What uh we saw is uh we saw",
    "start": "1621919",
    "end": "1627039"
  },
  {
    "text": "is very beneficial with BPF is that it provides this extra layer of reliability",
    "start": "1627039",
    "end": "1632760"
  },
  {
    "text": "and uh when applications def folding this is something you you really need to investigate you really need this uh to",
    "start": "1632760",
    "end": "1640559"
  },
  {
    "text": "have this information this St traces so uh this kind of policy can be used to provide this extra layer of uh",
    "start": "1640559",
    "end": "1647399"
  },
  {
    "text": "visibility uh of like reliability and uh be passed",
    "start": "1647399",
    "end": "1653559"
  },
  {
    "text": "plugged in into some sort of uh stock Trace parer uh next example is uh external",
    "start": "1653559",
    "end": "1660799"
  },
  {
    "text": "traffic so uh very often traffic in kubernetes cluster is observed by for example a service mesh but very often",
    "start": "1660799",
    "end": "1668240"
  },
  {
    "text": "also external traffic is something that people care more about for various reasons um we've worked uh in with a few",
    "start": "1668240",
    "end": "1676880"
  },
  {
    "text": "aircraft environments where um people wanted to detect attempts to external",
    "start": "1676880",
    "end": "1683320"
  },
  {
    "text": "traff to like external connections not only even un successful attempts so not",
    "start": "1683320",
    "end": "1688360"
  },
  {
    "text": "only like ongoing external traffic which shouldn't be happening at all uh cost",
    "start": "1688360",
    "end": "1693440"
  },
  {
    "text": "monitoring is a big thing external traffic ESS traffic usually costs more uh to Providers usually charge up more",
    "start": "1693440",
    "end": "1701440"
  },
  {
    "text": "from for it so um monitoring it to monitor cost is uh usually important and",
    "start": "1701440",
    "end": "1708880"
  },
  {
    "text": "uh s request external SS request are are generally um common uh attack Vector uh",
    "start": "1708880",
    "end": "1717320"
  },
  {
    "text": "tracing policy for this uh looks like this so uh here we hook into TCP uh to",
    "start": "1717320",
    "end": "1725159"
  },
  {
    "text": "function that's called when TCB packet is sent but we filter by uh cluster",
    "start": "1725159",
    "end": "1731159"
  },
  {
    "text": "ciders so um we filter out all traffic that is going uh that is happening with",
    "start": "1731159",
    "end": "1738240"
  },
  {
    "text": "in pots and services cers and Local Host so then um we will get events only on",
    "start": "1738240",
    "end": "1746760"
  },
  {
    "text": "external traffic and uh just because I like showing the PF code on slides and",
    "start": "1746760",
    "end": "1752159"
  },
  {
    "text": "to show that it's the filtering is happening in ker this is actual code from tetragon you can go on link in the",
    "start": "1752159",
    "end": "1758440"
  },
  {
    "text": "slides and see the full code this is heavily truncated because yeah it wouldn't fit on slide but what is",
    "start": "1758440",
    "end": "1764240"
  },
  {
    "text": "happening is that we uh we store this filter from tracing po see in a map and",
    "start": "1764240",
    "end": "1769559"
  },
  {
    "text": "here you can see um uh map look up which uh compares the",
    "start": "1769559",
    "end": "1778159"
  },
  {
    "text": "uh address uh that that we are handling right now to the range in the map and",
    "start": "1778159",
    "end": "1785200"
  },
  {
    "text": "decides if uh we should get an event on this um do something on on uh this IP or",
    "start": "1785200",
    "end": "1792640"
  },
  {
    "text": "not okay and then last thing uh and maybe something that's that's",
    "start": "1792640",
    "end": "1800039"
  },
  {
    "text": "[Music]",
    "start": "1804490",
    "end": "1807660"
  },
  {
    "text": "[Music]",
    "start": "1816080",
    "end": "1827319"
  },
  {
    "text": "[Music]",
    "start": "1835900",
    "end": "1839130"
  },
  {
    "text": "[Music]",
    "start": "1842360",
    "end": "1845510"
  },
  {
    "text": "one Library however we can separate these parts we can in particular we can",
    "start": "1858080",
    "end": "1863720"
  },
  {
    "text": "um defer the collection part to EF and how we do this is uh this is",
    "start": "1863720",
    "end": "1872399"
  },
  {
    "text": "example where we collect metrics um per",
    "start": "1872399",
    "end": "1877559"
  },
  {
    "text": "so we want metrics with labels um from with kubernetes metadata uh because this",
    "start": "1877559",
    "end": "1883919"
  },
  {
    "text": "has gives us this high level context and this allows us to uh ass associate events with part with like",
    "start": "1883919",
    "end": "1892039"
  },
  {
    "text": "teams in the organization for example so uh in the tetragon agent we watch BS uh",
    "start": "1892039",
    "end": "1900159"
  },
  {
    "text": "this can be done with kades if with the Kates uh by watching API server or",
    "start": "1900159",
    "end": "1905840"
  },
  {
    "text": "container run times we actually switched from API server to container runtimes at some point because of um security",
    "start": "1905840",
    "end": "1912679"
  },
  {
    "text": "reasons but in general like both of these are possible for observability tools um and then we pass this um",
    "start": "1912679",
    "end": "1920279"
  },
  {
    "text": "metadata we got uh about the the pots to uh to the kernel to the uh we write them",
    "start": "1920279",
    "end": "1926880"
  },
  {
    "text": "to BPF map um where we map container ID to kubernetes metadata the next uh step",
    "start": "1926880",
    "end": "1934639"
  },
  {
    "text": "is that we have BPF program and on every event when where it's hooked it gathers",
    "start": "1934639",
    "end": "1940159"
  },
  {
    "text": "labels from this map and it updates metrics stored in another map um and as",
    "start": "1940159",
    "end": "1946519"
  },
  {
    "text": "simple as that we we in user space uh what we need to do uh this is again a",
    "start": "1946519",
    "end": "1954080"
  },
  {
    "text": "bit tranced code but uh the only thing that we need to do is um read this",
    "start": "1954080",
    "end": "1961279"
  },
  {
    "text": "metrics iterate over this uh metrics map to collect metric uh with for all the um",
    "start": "1961279",
    "end": "1971600"
  },
  {
    "text": "uh all the kubernetes labels uh and expose them with uh with Primitives all",
    "start": "1971600",
    "end": "1978120"
  },
  {
    "text": "right I'm think I'm out out of time so thank you very much for",
    "start": "1978120",
    "end": "1983840"
  },
  {
    "text": "[Applause]",
    "start": "1984970",
    "end": "1994109"
  },
  {
    "text": "listening um do we have for [Music]",
    "start": "1995320",
    "end": "2002670"
  },
  {
    "text": "question if anybody has any questions then yeah feel free to uh find me here or anytime",
    "start": "2006840",
    "end": "2014880"
  },
  {
    "text": "at the",
    "start": "2014880",
    "end": "2017159"
  },
  {
    "text": "conference hi sorry quick question I'm here I'm",
    "start": "2024440",
    "end": "2031080"
  },
  {
    "text": "here um IPv6 support sorry IPv6 support",
    "start": "2031080",
    "end": "2037639"
  },
  {
    "text": "uh do do we support IPv6 with this IPv6 yeah yes yeah so uh this codes that for",
    "start": "2037639",
    "end": "2046559"
  },
  {
    "text": "filtering I showed yeah actually one thing that I trated there was IPv6 because it wouldn't fit on a slide but",
    "start": "2046559",
    "end": "2052560"
  },
  {
    "text": "yes absolutely we support ip6",
    "start": "2052560",
    "end": "2056359"
  },
  {
    "text": "yeah thank you for your talk sorry I have a question about ebpf you were",
    "start": "2058159",
    "end": "2063919"
  },
  {
    "text": "showing some C code yes I played a bit with ef and one wondering if maybe",
    "start": "2063919",
    "end": "2069960"
  },
  {
    "text": "someone is working maybe you know on another language on top of it to maybe",
    "start": "2069960",
    "end": "2075040"
  },
  {
    "text": "make make it more mainstream could or maybe even sub why is it C do do you know if some",
    "start": "2075040",
    "end": "2082040"
  },
  {
    "text": "people are trying to also make BPF available for no Kel developers let's",
    "start": "2082040",
    "end": "2087560"
  },
  {
    "text": "say than yeah so so it's C because Kel is written in C uh I know there are",
    "start": "2087560",
    "end": "2093240"
  },
  {
    "text": "people writing some BPF code in Rust uh",
    "start": "2093240",
    "end": "2098280"
  },
  {
    "text": "I know it's a thing but I haven't DED that much into it so yeah this this is",
    "start": "2098280",
    "end": "2104880"
  },
  {
    "text": "another language I no it's it it's possible okay already about",
    "start": "2104880",
    "end": "2112839"
  },
  {
    "text": "what no not at all because I think they have kind of transp from go programs",
    "start": "2112839",
    "end": "2118720"
  },
  {
    "text": "to if I remember to their and Che yeah please",
    "start": "2118720",
    "end": "2124280"
  },
  {
    "text": "check them hello so do we have a bunch of uh default uh",
    "start": "2124280",
    "end": "2131480"
  },
  {
    "text": "policies or uh blueprints which companies who want to move to tagon can",
    "start": "2131480",
    "end": "2138040"
  },
  {
    "text": "get for free or by default or is it like everything has to be created from scratch for example the example you",
    "start": "2138040",
    "end": "2144720"
  },
  {
    "text": "showed where the etcd uh password exess changing that is a warning alert like do",
    "start": "2144720",
    "end": "2151800"
  },
  {
    "text": "we get those things for free or is it like we have to create those rules ourselves you have to create those rules",
    "start": "2151800",
    "end": "2160599"
  },
  {
    "text": "yourself you don't necessarily have to write them yourself you can use uh the",
    "start": "2160599",
    "end": "2165960"
  },
  {
    "text": "examples directory in the uh in tagon repository so yeah this is this is the",
    "start": "2165960",
    "end": "2172480"
  },
  {
    "text": "current solution for this because writing this tracing policies is difficult for non-kernel",
    "start": "2172480",
    "end": "2177680"
  },
  {
    "text": "developers uh we all know this so uh the current solution for this is this like",
    "start": "2177680",
    "end": "2182720"
  },
  {
    "text": "examples Library uh which has documented policies for many different use cases",
    "start": "2182720",
    "end": "2188440"
  },
  {
    "text": "uh so you just take them and you apply them um yeah by default like when you",
    "start": "2188440",
    "end": "2195000"
  },
  {
    "text": "just install tagon and don't apply this configuration you I think we will get events uh for process execution",
    "start": "2195000",
    "end": "2204119"
  },
  {
    "text": "only um this is all done to ensure lower overhead this is like the the main goal",
    "start": "2204119",
    "end": "2211280"
  },
  {
    "text": "of this this decision that by default uh you don't get like this this you know",
    "start": "2211280",
    "end": "2218400"
  },
  {
    "text": "events for things you are not interested it or things you monitor with other tools because um tetragon is often used",
    "start": "2218400",
    "end": "2225400"
  },
  {
    "text": "with with also other tools that know can duplicate this so yeah just you just the",
    "start": "2225400",
    "end": "2230640"
  },
  {
    "text": "answer is like use the examples and I'm going to assume that",
    "start": "2230640",
    "end": "2236599"
  },
  {
    "text": "there's also no a Community Driven rules like like these rules are good for rest",
    "start": "2236599",
    "end": "2242440"
  },
  {
    "text": "app these good these rules are good for uh postgress application databases like",
    "start": "2242440",
    "end": "2247760"
  },
  {
    "text": "there's no a Community Driven like we can look at like certain uh scenarios",
    "start": "2247760",
    "end": "2254040"
  },
  {
    "text": "yes so I would say like this examples directory in ton repository is is Community Driven uh most of the examples",
    "start": "2254040",
    "end": "2262200"
  },
  {
    "text": "at this point are security focused uh there are not that many based for",
    "start": "2262200",
    "end": "2269319"
  },
  {
    "text": "monitoring for user applications so not that many",
    "start": "2269319",
    "end": "2274520"
  },
  {
    "text": "applic policies using U probes for example but it's absolutely possible um I guess",
    "start": "2274520",
    "end": "2281160"
  },
  {
    "text": "most of them were written by know Kel developers not postgress developers uh",
    "start": "2281160",
    "end": "2287880"
  },
  {
    "text": "and when you have rules for like um monitoring specific user space",
    "start": "2287880",
    "end": "2295560"
  },
  {
    "text": "application then writing this rule always requires certain expertise like",
    "start": "2295560",
    "end": "2301160"
  },
  {
    "text": "knowledge of internals of the application uh this is something we can't work out really so uh yeah it it",
    "start": "2301160",
    "end": "2306960"
  },
  {
    "text": "is uh Community Driven we would absolutely love to have like more examples from the community for specific",
    "start": "2306960",
    "end": "2314319"
  },
  {
    "text": "applications specific uses thank you hi congratulations for",
    "start": "2314319",
    "end": "2319560"
  },
  {
    "text": "your presentation um there are some integration based in Auto",
    "start": "2319560",
    "end": "2325400"
  },
  {
    "text": "instrumentation for traces there are some integration integration with open Teter for example collect the data sent",
    "start": "2325400",
    "end": "2332800"
  },
  {
    "text": "to open Teter and Implement some kind of sampling maybe head sampling or tail",
    "start": "2332800",
    "end": "2339280"
  },
  {
    "text": "sampling because the volume of data I imagine that can be",
    "start": "2339280",
    "end": "2344680"
  },
  {
    "text": "high yeah so for for distributed tracing specifically right uh the tools that I",
    "start": "2344680",
    "end": "2351040"
  },
  {
    "text": "know about um",
    "start": "2351040",
    "end": "2356280"
  },
  {
    "text": "they I I think you can um so open Telemetry itself provides",
    "start": "2356280",
    "end": "2363920"
  },
  {
    "text": "like Auto instrumentation but I think it doesn't have like build in uh ebpf based",
    "start": "2363920",
    "end": "2370400"
  },
  {
    "text": "instrumentation but as far as I know you there you can language is instrumented",
    "start": "2370400",
    "end": "2377280"
  },
  {
    "text": "by open t using ebpf for example maybe yeah yeah yeah um I mean I am not sure",
    "start": "2377280",
    "end": "2385200"
  },
  {
    "text": "how the sampling configuration looks looks there because I think um I don't",
    "start": "2385200",
    "end": "2392200"
  },
  {
    "text": "recall any sort of something happening actually in BPF there but also I haven't",
    "start": "2392200",
    "end": "2397520"
  },
  {
    "text": "looked in the face that much so so maybe because you can sample for sure like somewhere in the pipeline where wherever",
    "start": "2397520",
    "end": "2403680"
  },
  {
    "text": "you go like you can sample it uh when you collect the traces uh the most",
    "start": "2403680",
    "end": "2411800"
  },
  {
    "text": "efficient thing would be to sample um in kernel so that you don't produce this",
    "start": "2411800",
    "end": "2417040"
  },
  {
    "text": "trp but I didn't see this happening but yeah maybe I guess the people would be",
    "start": "2417040",
    "end": "2424160"
  },
  {
    "text": "good to ask about okay thank you so much hello Dominic from epfl E po Technic",
    "start": "2424160",
    "end": "2431160"
  },
  {
    "text": "Federal of loan in Switzerland uh congrats for your awesome presentation",
    "start": "2431160",
    "end": "2436280"
  },
  {
    "text": "and synthetical thinking you were able to present a very complex Topic in a very clear and efficient fashion thank",
    "start": "2436280",
    "end": "2442560"
  },
  {
    "text": "you very much for that I've got a question regarding uh so you know you",
    "start": "2442560",
    "end": "2447880"
  },
  {
    "text": "probably know of D Trace you probably remember of the D Trace that had mhm",
    "start": "2447880",
    "end": "2453000"
  },
  {
    "text": "that was the thing that uh did a bit like ebpf but with a no passive effect",
    "start": "2453000",
    "end": "2458359"
  },
  {
    "text": "at all because it was able to mutate some code inside the kernel when the probe was active and remove itself when",
    "start": "2458359",
    "end": "2465480"
  },
  {
    "text": "not and there was a feature that was really interesting in that which was that it had user space support uh you",
    "start": "2465480",
    "end": "2473680"
  },
  {
    "text": "could put uh the very same kind of probes inside programs that didn't even consent to it is there an equivalent in",
    "start": "2473680",
    "end": "2480720"
  },
  {
    "text": "have where do you have like a lipy ebpf or something like",
    "start": "2480720",
    "end": "2485960"
  },
  {
    "text": "that um I mean there are you probes but honestly",
    "start": "2485960",
    "end": "2492440"
  },
  {
    "text": "I uh I don't know exactly how how this um work in D so not sure how uh so I I",
    "start": "2492440",
    "end": "2502200"
  },
  {
    "text": "don't know sorry all right how close it is you can answer this question thank you uh D TR uh uh",
    "start": "2502200",
    "end": "2510839"
  },
  {
    "text": "was used back in the past but had a higher overhead than ebpf so you can",
    "start": "2510839",
    "end": "2516680"
  },
  {
    "text": "cover the tracing that you were able to do with the trace with EV BPF with all lower",
    "start": "2516680",
    "end": "2522160"
  },
  {
    "text": "overhead so sayf is even better it's better a lower",
    "start": "2522160",
    "end": "2528160"
  },
  {
    "text": "over thank you",
    "start": "2528160",
    "end": "2532440"
  }
]