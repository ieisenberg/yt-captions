[
  {
    "start": "0",
    "end": "348000"
  },
  {
    "text": "[Music]",
    "start": "760",
    "end": "25199"
  },
  {
    "text": "hello all welcome to our talk the future",
    "start": "25199",
    "end": "27599"
  },
  {
    "text": "of database observability is open",
    "start": "27599",
    "end": "30880"
  },
  {
    "text": "i am nimesh bhagat",
    "start": "30880",
    "end": "33120"
  },
  {
    "text": "i am a product manager at google cloud i",
    "start": "33120",
    "end": "35280"
  },
  {
    "text": "lead database observable with me i have",
    "start": "35280",
    "end": "38000"
  },
  {
    "text": "jan kreinert",
    "start": "38000",
    "end": "39440"
  },
  {
    "text": "jan is our lead on developer advocacy",
    "start": "39440",
    "end": "42559"
  },
  {
    "text": "team",
    "start": "42559",
    "end": "44160"
  },
  {
    "text": "me and jan have a common passion we want",
    "start": "44160",
    "end": "46399"
  },
  {
    "text": "to simplify database for",
    "start": "46399",
    "end": "48320"
  },
  {
    "text": "developers",
    "start": "48320",
    "end": "50879"
  },
  {
    "text": "today we're going to talk to you about",
    "start": "50879",
    "end": "52879"
  },
  {
    "text": "how we can improve database",
    "start": "52879",
    "end": "54640"
  },
  {
    "text": "observability for developers",
    "start": "54640",
    "end": "56960"
  },
  {
    "text": "on the agenda we have one we'll tell you",
    "start": "56960",
    "end": "58800"
  },
  {
    "text": "what is database observability for",
    "start": "58800",
    "end": "60559"
  },
  {
    "text": "developers give you an overview on sql",
    "start": "60559",
    "end": "62879"
  },
  {
    "text": "commenter which helps you simplify it",
    "start": "62879",
    "end": "65600"
  },
  {
    "text": "then we'll get into a demo and close it",
    "start": "65600",
    "end": "68320"
  },
  {
    "text": "with a q a",
    "start": "68320",
    "end": "71880"
  },
  {
    "text": "so let's start why there needs to be a",
    "start": "72479",
    "end": "74159"
  },
  {
    "text": "database observability for developers",
    "start": "74159",
    "end": "77920"
  },
  {
    "text": "at google we did an extensive research",
    "start": "77920",
    "end": "80000"
  },
  {
    "text": "and we found with devops more and more",
    "start": "80000",
    "end": "82640"
  },
  {
    "text": "developers are responsible for",
    "start": "82640",
    "end": "84640"
  },
  {
    "text": "troubleshooting database so when a pager",
    "start": "84640",
    "end": "87759"
  },
  {
    "text": "goes up at 2 am",
    "start": "87759",
    "end": "90159"
  },
  {
    "text": "it is the developer is on the line and",
    "start": "90159",
    "end": "92000"
  },
  {
    "text": "less and less bba is in many of the",
    "start": "92000",
    "end": "93840"
  },
  {
    "text": "organizations",
    "start": "93840",
    "end": "96719"
  },
  {
    "text": "what our reset fund is the three key",
    "start": "96880",
    "end": "99680"
  },
  {
    "text": "aspects where a developer might differ",
    "start": "99680",
    "end": "102159"
  },
  {
    "text": "than a dba",
    "start": "102159",
    "end": "104000"
  },
  {
    "text": "the number one",
    "start": "104000",
    "end": "106240"
  },
  {
    "text": "is",
    "start": "106240",
    "end": "107040"
  },
  {
    "text": "the developers are responsible for the",
    "start": "107040",
    "end": "108799"
  },
  {
    "text": "full stack and not just the databases",
    "start": "108799",
    "end": "111759"
  },
  {
    "text": "number two",
    "start": "111759",
    "end": "113280"
  },
  {
    "text": "many of these developers are",
    "start": "113280",
    "end": "114560"
  },
  {
    "text": "increasingly using",
    "start": "114560",
    "end": "116880"
  },
  {
    "text": "orms to write the database code in their",
    "start": "116880",
    "end": "119600"
  },
  {
    "text": "favorite programming language and not",
    "start": "119600",
    "end": "121439"
  },
  {
    "text": "sql",
    "start": "121439",
    "end": "123280"
  },
  {
    "text": "and three these developers",
    "start": "123280",
    "end": "125920"
  },
  {
    "text": "more and more use application",
    "start": "125920",
    "end": "127520"
  },
  {
    "text": "performance monitoring tools to",
    "start": "127520",
    "end": "129599"
  },
  {
    "text": "troubleshoot issues and they don't start",
    "start": "129599",
    "end": "131840"
  },
  {
    "text": "a journey inside database",
    "start": "131840",
    "end": "135040"
  },
  {
    "text": "if you look at the picture on the right",
    "start": "135920",
    "end": "138239"
  },
  {
    "text": "that's how a modern application",
    "start": "138239",
    "end": "140560"
  },
  {
    "text": "stack looks like when you have so many",
    "start": "140560",
    "end": "143120"
  },
  {
    "text": "micro services it becomes hard even to",
    "start": "143120",
    "end": "145840"
  },
  {
    "text": "tell if the database is a problem",
    "start": "145840",
    "end": "148160"
  },
  {
    "text": "or even tell",
    "start": "148160",
    "end": "149840"
  },
  {
    "text": "what part of the application start stack",
    "start": "149840",
    "end": "151840"
  },
  {
    "text": "is causing the slowness",
    "start": "151840",
    "end": "154720"
  },
  {
    "text": "that is where application performance",
    "start": "154720",
    "end": "156319"
  },
  {
    "text": "monitoring tools",
    "start": "156319",
    "end": "158000"
  },
  {
    "text": "come to rescue developers love them and",
    "start": "158000",
    "end": "160319"
  },
  {
    "text": "there are plenty of them available",
    "start": "160319",
    "end": "162480"
  },
  {
    "text": "which each of the teams and developers",
    "start": "162480",
    "end": "164640"
  },
  {
    "text": "prefer",
    "start": "164640",
    "end": "166959"
  },
  {
    "text": "but what we saw is admins typically",
    "start": "167519",
    "end": "170560"
  },
  {
    "text": "limit",
    "start": "170560",
    "end": "171760"
  },
  {
    "text": "the number of apm tools they permit",
    "start": "171760",
    "end": "174480"
  },
  {
    "text": "in the ecosystem",
    "start": "174480",
    "end": "176879"
  },
  {
    "text": "let's take a look at the picture on the",
    "start": "176879",
    "end": "178800"
  },
  {
    "text": "right",
    "start": "178800",
    "end": "180879"
  },
  {
    "text": "the boxes show the apm tools",
    "start": "180879",
    "end": "183120"
  },
  {
    "text": "in order for those apm tools to talk to",
    "start": "183120",
    "end": "185440"
  },
  {
    "text": "the database",
    "start": "185440",
    "end": "186879"
  },
  {
    "text": "they have to pass on the application",
    "start": "186879",
    "end": "188319"
  },
  {
    "text": "context",
    "start": "188319",
    "end": "189360"
  },
  {
    "text": "associated with database telemetry and",
    "start": "189360",
    "end": "191440"
  },
  {
    "text": "for that each one of them",
    "start": "191440",
    "end": "194000"
  },
  {
    "text": "creates a format and a plugin which",
    "start": "194000",
    "end": "196400"
  },
  {
    "text": "needs to be installed on the database",
    "start": "196400",
    "end": "199920"
  },
  {
    "text": "now most dbas will limit the number of",
    "start": "199920",
    "end": "202080"
  },
  {
    "text": "plugins which are permitted on the",
    "start": "202080",
    "end": "204000"
  },
  {
    "text": "database which limits the number of",
    "start": "204000",
    "end": "206000"
  },
  {
    "text": "tools they permit",
    "start": "206000",
    "end": "207599"
  },
  {
    "text": "and to make things even more challenging",
    "start": "207599",
    "end": "210159"
  },
  {
    "text": "most manage database services",
    "start": "210159",
    "end": "212400"
  },
  {
    "text": "on cloud do not permit installation of",
    "start": "212400",
    "end": "216640"
  },
  {
    "text": "plugins on the databases which means",
    "start": "216640",
    "end": "219760"
  },
  {
    "text": "many of these apm tools",
    "start": "219760",
    "end": "221760"
  },
  {
    "text": "cannot get a good visibility into the",
    "start": "221760",
    "end": "224080"
  },
  {
    "text": "database",
    "start": "224080",
    "end": "227080"
  },
  {
    "text": "now think of a word",
    "start": "228720",
    "end": "230799"
  },
  {
    "text": "wherein",
    "start": "230799",
    "end": "232080"
  },
  {
    "text": "every apm tool talks to any database",
    "start": "232080",
    "end": "234879"
  },
  {
    "text": "engine type",
    "start": "234879",
    "end": "237120"
  },
  {
    "text": "wherever it's hosted in a common format",
    "start": "237120",
    "end": "242159"
  },
  {
    "text": "imagine your tags and open telemetry",
    "start": "242319",
    "end": "245680"
  },
  {
    "text": "context is pushed to database the",
    "start": "245680",
    "end": "247920"
  },
  {
    "text": "database creates its own telemetry and",
    "start": "247920",
    "end": "249840"
  },
  {
    "text": "associates with this space and adds its",
    "start": "249840",
    "end": "251599"
  },
  {
    "text": "own",
    "start": "251599",
    "end": "252840"
  },
  {
    "text": "span in such a world",
    "start": "252840",
    "end": "255760"
  },
  {
    "text": "the developers can use their own tool",
    "start": "255760",
    "end": "258320"
  },
  {
    "text": "the dbs no longer have to think about",
    "start": "258320",
    "end": "262320"
  },
  {
    "text": "installing agents",
    "start": "262320",
    "end": "264240"
  },
  {
    "text": "the ecosystem partners the apm tools",
    "start": "264240",
    "end": "268400"
  },
  {
    "text": "they can focus their energies in",
    "start": "268400",
    "end": "270160"
  },
  {
    "text": "building really good",
    "start": "270160",
    "end": "272560"
  },
  {
    "text": "tools the ones which focus on analysis",
    "start": "272560",
    "end": "275280"
  },
  {
    "text": "and stop focusing their energies on",
    "start": "275280",
    "end": "276960"
  },
  {
    "text": "building",
    "start": "276960",
    "end": "277840"
  },
  {
    "text": "custom formats and plugins",
    "start": "277840",
    "end": "281199"
  },
  {
    "text": "in this world everyone wins",
    "start": "281199",
    "end": "283600"
  },
  {
    "text": "you might say this is the this is what",
    "start": "283600",
    "end": "285600"
  },
  {
    "text": "open telemetry is supposed to do",
    "start": "285600",
    "end": "288720"
  },
  {
    "text": "and",
    "start": "288720",
    "end": "289600"
  },
  {
    "text": "that was a missing gap in open telemetry",
    "start": "289600",
    "end": "291680"
  },
  {
    "text": "is what we found for databases",
    "start": "291680",
    "end": "294160"
  },
  {
    "text": "earlier in in this year in january we'll",
    "start": "294160",
    "end": "296639"
  },
  {
    "text": "launch cloud sql insights and in order",
    "start": "296639",
    "end": "298880"
  },
  {
    "text": "to enable this application centric",
    "start": "298880",
    "end": "300479"
  },
  {
    "text": "monitoring",
    "start": "300479",
    "end": "301759"
  },
  {
    "text": "we open sourced a library called sql",
    "start": "301759",
    "end": "304160"
  },
  {
    "text": "commander",
    "start": "304160",
    "end": "305440"
  },
  {
    "text": "what sql commander does is it passes",
    "start": "305440",
    "end": "308080"
  },
  {
    "text": "tags",
    "start": "308080",
    "end": "309600"
  },
  {
    "text": "open telemetry context",
    "start": "309600",
    "end": "311840"
  },
  {
    "text": "to databases via sql commands",
    "start": "311840",
    "end": "314560"
  },
  {
    "text": "as you see",
    "start": "314560",
    "end": "316000"
  },
  {
    "text": "in the example on the right over here",
    "start": "316000",
    "end": "319680"
  },
  {
    "text": "now once we got sql commander",
    "start": "320400",
    "end": "322560"
  },
  {
    "text": "we found our open source community a",
    "start": "322560",
    "end": "325520"
  },
  {
    "text": "partner starting to think about sql",
    "start": "325520",
    "end": "327759"
  },
  {
    "text": "commenter as a solution",
    "start": "327759",
    "end": "329759"
  },
  {
    "text": "to close the gap which open telemetry",
    "start": "329759",
    "end": "331840"
  },
  {
    "text": "has for databases",
    "start": "331840",
    "end": "334320"
  },
  {
    "text": "and the good news is in september we",
    "start": "334320",
    "end": "336800"
  },
  {
    "text": "merge sql commenter to open telemetry to",
    "start": "336800",
    "end": "339280"
  },
  {
    "text": "extend the vision of databases",
    "start": "339280",
    "end": "341919"
  },
  {
    "text": "to open telemetry",
    "start": "341919",
    "end": "344160"
  },
  {
    "text": "i'll hand it over to jan",
    "start": "344160",
    "end": "346240"
  },
  {
    "text": "to tell you how",
    "start": "346240",
    "end": "348560"
  },
  {
    "start": "348000",
    "end": "557000"
  },
  {
    "text": "thanks numesch",
    "start": "348560",
    "end": "349840"
  },
  {
    "text": "now we're going to look at how sql",
    "start": "349840",
    "end": "351199"
  },
  {
    "text": "commenter works and then how to enable",
    "start": "351199",
    "end": "353120"
  },
  {
    "text": "it and use it in an application",
    "start": "353120",
    "end": "355600"
  },
  {
    "text": "as namesh explains sql commenter is an",
    "start": "355600",
    "end": "357759"
  },
  {
    "text": "open source library that enables orms to",
    "start": "357759",
    "end": "360800"
  },
  {
    "text": "augment sql statements before execution",
    "start": "360800",
    "end": "363680"
  },
  {
    "text": "with comments about the code that caused",
    "start": "363680",
    "end": "365360"
  },
  {
    "text": "that execution",
    "start": "365360",
    "end": "367039"
  },
  {
    "text": "this helps in more easily correlating",
    "start": "367039",
    "end": "368880"
  },
  {
    "text": "slow queries with source code giving",
    "start": "368880",
    "end": "370960"
  },
  {
    "text": "insights into back-end database",
    "start": "370960",
    "end": "372560"
  },
  {
    "text": "performance",
    "start": "372560",
    "end": "373919"
  },
  {
    "text": "in short it provides observability into",
    "start": "373919",
    "end": "375840"
  },
  {
    "text": "the state of client-side applications",
    "start": "375840",
    "end": "377759"
  },
  {
    "text": "and their impact on database performance",
    "start": "377759",
    "end": "380880"
  },
  {
    "text": "application developers don't need to do",
    "start": "380880",
    "end": "382479"
  },
  {
    "text": "very much code change at all to enable",
    "start": "382479",
    "end": "384479"
  },
  {
    "text": "sql commenter for applications using",
    "start": "384479",
    "end": "386720"
  },
  {
    "text": "supported orms",
    "start": "386720",
    "end": "388800"
  },
  {
    "text": "you can find the link on this slide to",
    "start": "388800",
    "end": "390400"
  },
  {
    "text": "the github repo which in turn links to",
    "start": "390400",
    "end": "392319"
  },
  {
    "text": "the documentation for sql commenter",
    "start": "392319",
    "end": "396400"
  },
  {
    "text": "sql commenter is available for python",
    "start": "397680",
    "end": "400000"
  },
  {
    "text": "java node.js and ruby and it's supported",
    "start": "400000",
    "end": "402960"
  },
  {
    "text": "already by several frameworks that you",
    "start": "402960",
    "end": "404639"
  },
  {
    "text": "can see here",
    "start": "404639",
    "end": "406479"
  },
  {
    "text": "it's also been tested against a number",
    "start": "406479",
    "end": "408160"
  },
  {
    "text": "of databases including postgres mysql",
    "start": "408160",
    "end": "410800"
  },
  {
    "text": "mariadb sqlite and cloud sql",
    "start": "410800",
    "end": "414000"
  },
  {
    "text": "if you're not using one of the supported",
    "start": "414000",
    "end": "415520"
  },
  {
    "text": "orms you can still use sql commenter's",
    "start": "415520",
    "end": "417680"
  },
  {
    "text": "algorithm to generate comments yourself",
    "start": "417680",
    "end": "419759"
  },
  {
    "text": "and tag sql statements",
    "start": "419759",
    "end": "423479"
  },
  {
    "text": "let's look at some of the key parts of",
    "start": "423599",
    "end": "425280"
  },
  {
    "text": "the specification for sql commenter's",
    "start": "425280",
    "end": "427280"
  },
  {
    "text": "algorithm to understand how it works",
    "start": "427280",
    "end": "430639"
  },
  {
    "text": "sql commenter augments sql statements",
    "start": "430639",
    "end": "432639"
  },
  {
    "text": "with a comment containing serialized key",
    "start": "432639",
    "end": "435120"
  },
  {
    "text": "value pairs",
    "start": "435120",
    "end": "436400"
  },
  {
    "text": "that are retrieved from the supported",
    "start": "436400",
    "end": "438000"
  },
  {
    "text": "orm or framework that you're using this",
    "start": "438000",
    "end": "440479"
  },
  {
    "text": "can pass information along such as",
    "start": "440479",
    "end": "442560"
  },
  {
    "text": "action controller route framework as",
    "start": "442560",
    "end": "445680"
  },
  {
    "text": "well as the open telemetry trace context",
    "start": "445680",
    "end": "449680"
  },
  {
    "text": "these comments must come after the sql",
    "start": "449680",
    "end": "451599"
  },
  {
    "text": "statement",
    "start": "451599",
    "end": "452960"
  },
  {
    "text": "any existing comments must be preserved",
    "start": "452960",
    "end": "456160"
  },
  {
    "text": "and the key value pairs have to be comma",
    "start": "456160",
    "end": "458240"
  },
  {
    "text": "separated url encoded with meta",
    "start": "458240",
    "end": "461039"
  },
  {
    "text": "characters escaped and then sorted in",
    "start": "461039",
    "end": "463599"
  },
  {
    "text": "lexicographical order",
    "start": "463599",
    "end": "466319"
  },
  {
    "text": "you can read even more detail on the",
    "start": "466319",
    "end": "468080"
  },
  {
    "text": "spec and algorithm at the link on the",
    "start": "468080",
    "end": "470000"
  },
  {
    "text": "slide",
    "start": "470000",
    "end": "472080"
  },
  {
    "text": "so these augmented sql statements will",
    "start": "472080",
    "end": "474000"
  },
  {
    "text": "then show up in your database logs",
    "start": "474000",
    "end": "476800"
  },
  {
    "text": "by having these application tags from",
    "start": "476800",
    "end": "478800"
  },
  {
    "text": "the orm in your log sql commenter helps",
    "start": "478800",
    "end": "481280"
  },
  {
    "text": "developers determine",
    "start": "481280",
    "end": "482960"
  },
  {
    "text": "what application code is associated with",
    "start": "482960",
    "end": "485599"
  },
  {
    "text": "the slow or problematic queries",
    "start": "485599",
    "end": "488240"
  },
  {
    "text": "here's an example of a query log from a",
    "start": "488240",
    "end": "490400"
  },
  {
    "text": "postgres database that's being used by a",
    "start": "490400",
    "end": "492639"
  },
  {
    "text": "django application with sql commenter",
    "start": "492639",
    "end": "494720"
  },
  {
    "text": "for django enabled",
    "start": "494720",
    "end": "496479"
  },
  {
    "text": "in the log you can see an update",
    "start": "496479",
    "end": "498080"
  },
  {
    "text": "statement being executed",
    "start": "498080",
    "end": "500080"
  },
  {
    "text": "and at the end of the sql statement you",
    "start": "500080",
    "end": "502319"
  },
  {
    "text": "can see the sql style comment has been",
    "start": "502319",
    "end": "504080"
  },
  {
    "text": "added in the form of key value pairs",
    "start": "504080",
    "end": "507039"
  },
  {
    "text": "the comment was added by sql commenter",
    "start": "507039",
    "end": "509039"
  },
  {
    "text": "to the query that was generated by the",
    "start": "509039",
    "end": "510879"
  },
  {
    "text": "django orm",
    "start": "510879",
    "end": "513200"
  },
  {
    "text": "as you can see from the comments it",
    "start": "513200",
    "end": "514640"
  },
  {
    "text": "provides information about the",
    "start": "514640",
    "end": "516000"
  },
  {
    "text": "controller which in this case is a sign",
    "start": "516000",
    "end": "518000"
  },
  {
    "text": "order",
    "start": "518000",
    "end": "519039"
  },
  {
    "text": "this is the controller method that sent",
    "start": "519039",
    "end": "520800"
  },
  {
    "text": "the query",
    "start": "520800",
    "end": "522000"
  },
  {
    "text": "in the case of django the controller in",
    "start": "522000",
    "end": "523760"
  },
  {
    "text": "an mvc pattern maps to the view in the",
    "start": "523760",
    "end": "525760"
  },
  {
    "text": "django app",
    "start": "525760",
    "end": "527120"
  },
  {
    "text": "you can also see information about the",
    "start": "527120",
    "end": "528959"
  },
  {
    "text": "route database driver framework and",
    "start": "528959",
    "end": "531200"
  },
  {
    "text": "trace context",
    "start": "531200",
    "end": "533360"
  },
  {
    "text": "since this query has taken 400",
    "start": "533360",
    "end": "534880"
  },
  {
    "text": "milliseconds we could go into the assign",
    "start": "534880",
    "end": "536720"
  },
  {
    "text": "order method to see if we can understand",
    "start": "536720",
    "end": "538800"
  },
  {
    "text": "why it's taking a long time",
    "start": "538800",
    "end": "542320"
  },
  {
    "text": "now we're going to walk through the",
    "start": "543360",
    "end": "544480"
  },
  {
    "text": "process of setting up a postgres",
    "start": "544480",
    "end": "546000"
  },
  {
    "text": "application deploying an app that uses",
    "start": "546000",
    "end": "548480"
  },
  {
    "text": "postgres database for back-end storage",
    "start": "548480",
    "end": "550959"
  },
  {
    "text": "then we'll enable sql commenter in the",
    "start": "550959",
    "end": "552640"
  },
  {
    "text": "application and look at logs to view and",
    "start": "552640",
    "end": "555360"
  },
  {
    "text": "monitor queries",
    "start": "555360",
    "end": "557440"
  },
  {
    "start": "557000",
    "end": "1056000"
  },
  {
    "text": "the application for our demo is a food",
    "start": "557440",
    "end": "559760"
  },
  {
    "text": "delivery application",
    "start": "559760",
    "end": "561600"
  },
  {
    "text": "so there are drivers there are orders",
    "start": "561600",
    "end": "565680"
  },
  {
    "text": "the drivers need to be able to charge",
    "start": "565680",
    "end": "568560"
  },
  {
    "text": "and refund orders as well as see a",
    "start": "568560",
    "end": "570640"
  },
  {
    "text": "listing of orders and you need to be",
    "start": "570640",
    "end": "572080"
  },
  {
    "text": "able to register both drivers and",
    "start": "572080",
    "end": "573839"
  },
  {
    "text": "customers",
    "start": "573839",
    "end": "575600"
  },
  {
    "text": "our application is backed by a postgres",
    "start": "575600",
    "end": "577600"
  },
  {
    "text": "database we happen to be using cloud sql",
    "start": "577600",
    "end": "580240"
  },
  {
    "text": "here but you could be using any postgres",
    "start": "580240",
    "end": "582080"
  },
  {
    "text": "database",
    "start": "582080",
    "end": "584080"
  },
  {
    "text": "now we got a report within the last hour",
    "start": "584080",
    "end": "586399"
  },
  {
    "text": "that some of our drivers are",
    "start": "586399",
    "end": "588000"
  },
  {
    "text": "experiencing slowness with the",
    "start": "588000",
    "end": "589680"
  },
  {
    "text": "application",
    "start": "589680",
    "end": "591680"
  },
  {
    "text": "when we deployed this application we",
    "start": "591680",
    "end": "593440"
  },
  {
    "text": "enabled sql commenter",
    "start": "593440",
    "end": "595519"
  },
  {
    "text": "so we should be able to take advantage",
    "start": "595519",
    "end": "597200"
  },
  {
    "text": "of some of that information",
    "start": "597200",
    "end": "599440"
  },
  {
    "text": "as we troubleshoot this issue",
    "start": "599440",
    "end": "602640"
  },
  {
    "text": "let me show you first how we enabled sql",
    "start": "602640",
    "end": "604800"
  },
  {
    "text": "commenter for the application",
    "start": "604800",
    "end": "607839"
  },
  {
    "text": "if you're using one of the supported",
    "start": "607839",
    "end": "609360"
  },
  {
    "text": "orms for sql commenter there's really",
    "start": "609360",
    "end": "612399"
  },
  {
    "text": "not much application code changes that",
    "start": "612399",
    "end": "614720"
  },
  {
    "text": "you have to do to be able to get sql",
    "start": "614720",
    "end": "616880"
  },
  {
    "text": "commenter up and running",
    "start": "616880",
    "end": "619120"
  },
  {
    "text": "since we're working on a python app that",
    "start": "619120",
    "end": "620880"
  },
  {
    "text": "uses django i've pulled up the",
    "start": "620880",
    "end": "622399"
  },
  {
    "text": "documentation in the github repo that",
    "start": "622399",
    "end": "625040"
  },
  {
    "text": "tells us what we need to do to install",
    "start": "625040",
    "end": "627040"
  },
  {
    "text": "sql commenter and enable it in our",
    "start": "627040",
    "end": "628880"
  },
  {
    "text": "application",
    "start": "628880",
    "end": "631200"
  },
  {
    "text": "so you can see the commands you need to",
    "start": "631200",
    "end": "633360"
  },
  {
    "text": "use to install the proper python modules",
    "start": "633360",
    "end": "635839"
  },
  {
    "text": "here",
    "start": "635839",
    "end": "638079"
  },
  {
    "text": "and then there's information on usage",
    "start": "638320",
    "end": "640160"
  },
  {
    "text": "again we're using django so this is what",
    "start": "640160",
    "end": "641839"
  },
  {
    "text": "we need to look at",
    "start": "641839",
    "end": "643360"
  },
  {
    "text": "we have to add this line to the",
    "start": "643360",
    "end": "645360"
  },
  {
    "text": "middleware section",
    "start": "645360",
    "end": "647360"
  },
  {
    "text": "to",
    "start": "647360",
    "end": "648160"
  },
  {
    "text": "be able to use sql commenter",
    "start": "648160",
    "end": "651360"
  },
  {
    "text": "there are also some attributes that you",
    "start": "651360",
    "end": "653680"
  },
  {
    "text": "can enable",
    "start": "653680",
    "end": "655279"
  },
  {
    "text": "for things like if you want the",
    "start": "655279",
    "end": "658720"
  },
  {
    "text": "application name to flow through in the",
    "start": "658720",
    "end": "660480"
  },
  {
    "text": "comments or if you want to use open",
    "start": "660480",
    "end": "662240"
  },
  {
    "text": "census or open telemetry",
    "start": "662240",
    "end": "665839"
  },
  {
    "text": "we're not using sql alchemy",
    "start": "666079",
    "end": "668640"
  },
  {
    "text": "in our application but you can see that",
    "start": "668640",
    "end": "670399"
  },
  {
    "text": "there's also instructions for that and",
    "start": "670399",
    "end": "672560"
  },
  {
    "text": "other frameworks as well",
    "start": "672560",
    "end": "675120"
  },
  {
    "text": "in the case of this django app",
    "start": "675120",
    "end": "677360"
  },
  {
    "text": "we installed the necessary",
    "start": "677360",
    "end": "680880"
  },
  {
    "text": "requirements",
    "start": "680880",
    "end": "682160"
  },
  {
    "text": "and then in the middleware section here",
    "start": "682160",
    "end": "684560"
  },
  {
    "text": "we added",
    "start": "684560",
    "end": "685839"
  },
  {
    "text": "this line here",
    "start": "685839",
    "end": "688320"
  },
  {
    "text": "we wanted to set some particular options",
    "start": "688320",
    "end": "690720"
  },
  {
    "text": "for our sql commenter",
    "start": "690720",
    "end": "693760"
  },
  {
    "text": "integration so we've set app name is",
    "start": "693760",
    "end": "696399"
  },
  {
    "text": "true",
    "start": "696399",
    "end": "697200"
  },
  {
    "text": "db driver is true now with all of that",
    "start": "697200",
    "end": "699600"
  },
  {
    "text": "done that means that as our application",
    "start": "699600",
    "end": "702560"
  },
  {
    "text": "is running sql commenter is augmenting",
    "start": "702560",
    "end": "706079"
  },
  {
    "text": "any of these queries that are issued by",
    "start": "706079",
    "end": "707760"
  },
  {
    "text": "our application with the comments",
    "start": "707760",
    "end": "710399"
  },
  {
    "text": "for my database i have cloud sql",
    "start": "710399",
    "end": "712079"
  },
  {
    "text": "insights enabled",
    "start": "712079",
    "end": "713519"
  },
  {
    "text": "and",
    "start": "713519",
    "end": "714399"
  },
  {
    "text": "that's using that sql commenter data as",
    "start": "714399",
    "end": "716560"
  },
  {
    "text": "well so not only are we able to see the",
    "start": "716560",
    "end": "719040"
  },
  {
    "text": "queries that were",
    "start": "719040",
    "end": "720720"
  },
  {
    "text": "issued by our application we can also",
    "start": "720720",
    "end": "723600"
  },
  {
    "text": "look at the application centric data",
    "start": "723600",
    "end": "725760"
  },
  {
    "text": "through the application tags that we're",
    "start": "725760",
    "end": "728160"
  },
  {
    "text": "providing through the sql commenter",
    "start": "728160",
    "end": "729839"
  },
  {
    "text": "integration",
    "start": "729839",
    "end": "731120"
  },
  {
    "text": "but before we look at that",
    "start": "731120",
    "end": "733120"
  },
  {
    "text": "let's look straight at the logs",
    "start": "733120",
    "end": "736240"
  },
  {
    "text": "because we don't need cloud sql insights",
    "start": "736240",
    "end": "738399"
  },
  {
    "text": "in order to be able to take advantage of",
    "start": "738399",
    "end": "740079"
  },
  {
    "text": "this information",
    "start": "740079",
    "end": "743320"
  },
  {
    "text": "i'm going to pull up logging right now",
    "start": "744399",
    "end": "748320"
  },
  {
    "text": "and i'm going to filter just",
    "start": "748480",
    "end": "751680"
  },
  {
    "text": "for database logs",
    "start": "751680",
    "end": "753760"
  },
  {
    "text": "so we want to see the logs for our",
    "start": "753760",
    "end": "754959"
  },
  {
    "text": "postgres database",
    "start": "754959",
    "end": "756639"
  },
  {
    "text": "let's look for",
    "start": "756639",
    "end": "758480"
  },
  {
    "text": "a time frame that matches",
    "start": "758480",
    "end": "760639"
  },
  {
    "text": "what we had",
    "start": "760639",
    "end": "762000"
  },
  {
    "text": "in our application",
    "start": "762000",
    "end": "763920"
  },
  {
    "text": "something like this",
    "start": "763920",
    "end": "765680"
  },
  {
    "text": "all right let's look in our logs to see",
    "start": "765680",
    "end": "767839"
  },
  {
    "text": "if we can find any of these sql comments",
    "start": "767839",
    "end": "770079"
  },
  {
    "text": "in our statements",
    "start": "770079",
    "end": "771440"
  },
  {
    "text": "they show up here in this text payload",
    "start": "771440",
    "end": "773600"
  },
  {
    "text": "and we'll look for things like",
    "start": "773600",
    "end": "775839"
  },
  {
    "text": "we'll look for things like controller",
    "start": "775839",
    "end": "779279"
  },
  {
    "text": "and see what we can find",
    "start": "779279",
    "end": "782399"
  },
  {
    "text": "okay so you can see similar to what we",
    "start": "782880",
    "end": "784800"
  },
  {
    "text": "saw in some of our examples we have a",
    "start": "784800",
    "end": "786399"
  },
  {
    "text": "select statement here",
    "start": "786399",
    "end": "789680"
  },
  {
    "text": "followed",
    "start": "790399",
    "end": "791760"
  },
  {
    "text": "by",
    "start": "791760",
    "end": "792720"
  },
  {
    "text": "a comment",
    "start": "792720",
    "end": "794720"
  },
  {
    "text": "that was generated by sql commenter so",
    "start": "794720",
    "end": "796639"
  },
  {
    "text": "you can see we have controller is",
    "start": "796639",
    "end": "798160"
  },
  {
    "text": "payment charge db driver",
    "start": "798160",
    "end": "801120"
  },
  {
    "text": "framework the route of demo charge and",
    "start": "801120",
    "end": "804079"
  },
  {
    "text": "then trace parent",
    "start": "804079",
    "end": "806480"
  },
  {
    "text": "so this information is successfully",
    "start": "806480",
    "end": "808240"
  },
  {
    "text": "flowing in through to our log so we can",
    "start": "808240",
    "end": "810639"
  },
  {
    "text": "use that now to understand what's going",
    "start": "810639",
    "end": "812800"
  },
  {
    "text": "on",
    "start": "812800",
    "end": "813680"
  },
  {
    "text": "now let's look at query insights to see",
    "start": "813680",
    "end": "815680"
  },
  {
    "text": "how that sql commenter information sent",
    "start": "815680",
    "end": "818480"
  },
  {
    "text": "through to the logs can be integrated",
    "start": "818480",
    "end": "820639"
  },
  {
    "text": "into your tools",
    "start": "820639",
    "end": "823440"
  },
  {
    "text": "in this case we see payment charge here",
    "start": "823680",
    "end": "826160"
  },
  {
    "text": "this is the one that seems to have the",
    "start": "826160",
    "end": "827680"
  },
  {
    "text": "most total time",
    "start": "827680",
    "end": "831040"
  },
  {
    "text": "let's click in",
    "start": "831120",
    "end": "832880"
  },
  {
    "text": "and see what we've got so you can see",
    "start": "832880",
    "end": "834720"
  },
  {
    "text": "here we've got some query plan samples",
    "start": "834720",
    "end": "838880"
  },
  {
    "text": "i'll choose one of these",
    "start": "838880",
    "end": "841120"
  },
  {
    "text": "and see what we can see so you can see",
    "start": "841120",
    "end": "842560"
  },
  {
    "text": "we have the query plan here but what i'm",
    "start": "842560",
    "end": "844480"
  },
  {
    "text": "interested in is the end to end tracing",
    "start": "844480",
    "end": "847680"
  },
  {
    "text": "and here in the in tracing we can see",
    "start": "847680",
    "end": "849680"
  },
  {
    "text": "this information about the queries",
    "start": "849680",
    "end": "852800"
  },
  {
    "text": "and we have that",
    "start": "852800",
    "end": "854480"
  },
  {
    "text": "normalized query data coming through",
    "start": "854480",
    "end": "856240"
  },
  {
    "text": "here as well as the route demo charge",
    "start": "856240",
    "end": "859120"
  },
  {
    "text": "and",
    "start": "859120",
    "end": "860240"
  },
  {
    "text": "controller that we saw on the dashboard",
    "start": "860240",
    "end": "862480"
  },
  {
    "text": "here",
    "start": "862480",
    "end": "863440"
  },
  {
    "text": "so this is one example you can see the",
    "start": "863440",
    "end": "865279"
  },
  {
    "text": "total duration of the query here",
    "start": "865279",
    "end": "868560"
  },
  {
    "text": "and if we look at another one of these",
    "start": "868560",
    "end": "870560"
  },
  {
    "text": "with a longer duration we can see what",
    "start": "870560",
    "end": "873519"
  },
  {
    "text": "is different between the two if anything",
    "start": "873519",
    "end": "877680"
  },
  {
    "text": "we could go back to the logs from here",
    "start": "877920",
    "end": "879519"
  },
  {
    "text": "if we choose",
    "start": "879519",
    "end": "880880"
  },
  {
    "text": "but we've already looked at that",
    "start": "880880",
    "end": "884079"
  },
  {
    "text": "now cloud sql insights is just one tool",
    "start": "884079",
    "end": "887360"
  },
  {
    "text": "many of your favorite apms could also",
    "start": "887360",
    "end": "889440"
  },
  {
    "text": "pull in this type of information",
    "start": "889440",
    "end": "892079"
  },
  {
    "text": "so that you could",
    "start": "892079",
    "end": "893920"
  },
  {
    "text": "do a lot of your monitoring all in one",
    "start": "893920",
    "end": "895600"
  },
  {
    "text": "place",
    "start": "895600",
    "end": "896720"
  },
  {
    "text": "all right let's have a quick recap of",
    "start": "896720",
    "end": "898240"
  },
  {
    "text": "what we've covered today",
    "start": "898240",
    "end": "901279"
  },
  {
    "text": "google is merging and donating sql",
    "start": "902800",
    "end": "904720"
  },
  {
    "text": "commenter to open telemetry in order to",
    "start": "904720",
    "end": "907279"
  },
  {
    "text": "create a vendor-neutral standard for",
    "start": "907279",
    "end": "908959"
  },
  {
    "text": "database observability",
    "start": "908959",
    "end": "911440"
  },
  {
    "text": "database observability is important to",
    "start": "911440",
    "end": "913519"
  },
  {
    "text": "pretty much every role in an",
    "start": "913519",
    "end": "914639"
  },
  {
    "text": "organization",
    "start": "914639",
    "end": "915920"
  },
  {
    "text": "developers dba security engineers data",
    "start": "915920",
    "end": "918399"
  },
  {
    "text": "engineers sres",
    "start": "918399",
    "end": "920480"
  },
  {
    "text": "list goes on",
    "start": "920480",
    "end": "922399"
  },
  {
    "text": "each one of these roles uses a variety",
    "start": "922399",
    "end": "924399"
  },
  {
    "text": "of application and monitoring tools that",
    "start": "924399",
    "end": "926480"
  },
  {
    "text": "need access to database activity so it's",
    "start": "926480",
    "end": "928639"
  },
  {
    "text": "important that database telemetry is",
    "start": "928639",
    "end": "930959"
  },
  {
    "text": "easily accessible and can integrate",
    "start": "930959",
    "end": "932959"
  },
  {
    "text": "seamlessly into your choice of tools",
    "start": "932959",
    "end": "935839"
  },
  {
    "text": "open telemetry makes it easy to create",
    "start": "935839",
    "end": "937759"
  },
  {
    "text": "and collect telemetry data from services",
    "start": "937759",
    "end": "939759"
  },
  {
    "text": "and software and then forward them to a",
    "start": "939759",
    "end": "941920"
  },
  {
    "text": "variety of analysis tools",
    "start": "941920",
    "end": "944720"
  },
  {
    "text": "but currently open telemetry lacks a",
    "start": "944720",
    "end": "947040"
  },
  {
    "text": "common standard by which application",
    "start": "947040",
    "end": "948720"
  },
  {
    "text": "tags and traces can be sent to databases",
    "start": "948720",
    "end": "951440"
  },
  {
    "text": "and correlated with the application",
    "start": "951440",
    "end": "952959"
  },
  {
    "text": "stack",
    "start": "952959",
    "end": "954399"
  },
  {
    "text": "by adding sql commenter to open",
    "start": "954399",
    "end": "956079"
  },
  {
    "text": "telemetry this will enable a rich",
    "start": "956079",
    "end": "958240"
  },
  {
    "text": "ecosystem of apm tools to integrate with",
    "start": "958240",
    "end": "960639"
  },
  {
    "text": "databases and eliminate the need to",
    "start": "960639",
    "end": "962800"
  },
  {
    "text": "build custom integration for every",
    "start": "962800",
    "end": "964240"
  },
  {
    "text": "database",
    "start": "964240",
    "end": "966720"
  },
  {
    "text": "vendor we've also covered",
    "start": "966839",
    "end": "969440"
  },
  {
    "text": "the steps it takes to enable sql",
    "start": "969440",
    "end": "971519"
  },
  {
    "text": "commenter in a django application",
    "start": "971519",
    "end": "974399"
  },
  {
    "text": "and talked a little bit about the other",
    "start": "974399",
    "end": "975920"
  },
  {
    "text": "frameworks",
    "start": "975920",
    "end": "977279"
  },
  {
    "text": "programming languages and orms that are",
    "start": "977279",
    "end": "979600"
  },
  {
    "text": "currently supported",
    "start": "979600",
    "end": "981440"
  },
  {
    "text": "in addition we looked at the sql",
    "start": "981440",
    "end": "983279"
  },
  {
    "text": "commenter algorithm",
    "start": "983279",
    "end": "985519"
  },
  {
    "text": "and the specification which you can use",
    "start": "985519",
    "end": "987519"
  },
  {
    "text": "if you want to manually comment your sql",
    "start": "987519",
    "end": "989920"
  },
  {
    "text": "statements yourself",
    "start": "989920",
    "end": "992720"
  },
  {
    "text": "finally we looked at how that",
    "start": "993279",
    "end": "995360"
  },
  {
    "text": "application tagging information and",
    "start": "995360",
    "end": "997519"
  },
  {
    "text": "trace",
    "start": "997519",
    "end": "998880"
  },
  {
    "text": "context can propagate through to your",
    "start": "998880",
    "end": "1000800"
  },
  {
    "text": "logs so that you can use it for",
    "start": "1000800",
    "end": "1003199"
  },
  {
    "text": "application centric monitoring and",
    "start": "1003199",
    "end": "1005279"
  },
  {
    "text": "troubleshooting around database",
    "start": "1005279",
    "end": "1006800"
  },
  {
    "text": "performance with your application",
    "start": "1006800",
    "end": "1010680"
  },
  {
    "text": "all right so now we've had a demo i want",
    "start": "1012000",
    "end": "1014000"
  },
  {
    "text": "to leave you with some resources where",
    "start": "1014000",
    "end": "1015680"
  },
  {
    "text": "you can learn more",
    "start": "1015680",
    "end": "1017839"
  },
  {
    "text": "for resources on sql commenter there are",
    "start": "1017839",
    "end": "1020079"
  },
  {
    "text": "links here to the documentation as well",
    "start": "1020079",
    "end": "1022240"
  },
  {
    "text": "as the github repo there's a recent blog",
    "start": "1022240",
    "end": "1025120"
  },
  {
    "text": "post that",
    "start": "1025120",
    "end": "1026319"
  },
  {
    "text": "names put together on the donation of",
    "start": "1026319",
    "end": "1029120"
  },
  {
    "text": "sql commenter to open telemetry there's",
    "start": "1029120",
    "end": "1031199"
  },
  {
    "text": "a lot of great information there",
    "start": "1031199",
    "end": "1033120"
  },
  {
    "text": "including if you want to get involved",
    "start": "1033120",
    "end": "1035199"
  },
  {
    "text": "and then finally we touched a little bit",
    "start": "1035199",
    "end": "1036798"
  },
  {
    "text": "on cloud sql insights so if you'd like",
    "start": "1036799",
    "end": "1038640"
  },
  {
    "text": "to learn more about that and how it",
    "start": "1038640",
    "end": "1040319"
  },
  {
    "text": "integrates some of that sql commenter",
    "start": "1040319",
    "end": "1042240"
  },
  {
    "text": "information",
    "start": "1042240",
    "end": "1043438"
  },
  {
    "text": "there's a link to the documentation here",
    "start": "1043439",
    "end": "1045438"
  },
  {
    "text": "as well",
    "start": "1045439",
    "end": "1046880"
  },
  {
    "text": "thank you so much for joining us for",
    "start": "1046880",
    "end": "1048480"
  },
  {
    "text": "this talk namesh and i will be sticking",
    "start": "1048480",
    "end": "1050400"
  },
  {
    "text": "around for q a and we'll be happy to",
    "start": "1050400",
    "end": "1052960"
  },
  {
    "text": "answer any questions that you have",
    "start": "1052960",
    "end": "1054720"
  },
  {
    "text": "thanks so much",
    "start": "1054720",
    "end": "1058080"
  }
]