[
  {
    "text": "hello everyone and welcome to the dapper",
    "start": "0",
    "end": "1920"
  },
  {
    "text": "maintainers track session",
    "start": "1920",
    "end": "3760"
  },
  {
    "text": "my name is eron schneider i'm a",
    "start": "3760",
    "end": "5359"
  },
  {
    "text": "co-founder and cto of dagrid",
    "start": "5359",
    "end": "7759"
  },
  {
    "text": "and my name is hal spang and i'm a",
    "start": "7759",
    "end": "9120"
  },
  {
    "text": "senior engineer at microsoft",
    "start": "9120",
    "end": "11200"
  },
  {
    "text": "okay i'm going to be sharing the screen",
    "start": "11200",
    "end": "13120"
  },
  {
    "text": "so how please let me know when you can",
    "start": "13120",
    "end": "15839"
  },
  {
    "text": "see it",
    "start": "15839",
    "end": "18160"
  },
  {
    "text": "what's good",
    "start": "20800",
    "end": "21920"
  },
  {
    "text": "okay so today we're going to talk about",
    "start": "21920",
    "end": "23680"
  },
  {
    "text": "dapper and how it can help make your",
    "start": "23680",
    "end": "25920"
  },
  {
    "text": "application infrastructure services more",
    "start": "25920",
    "end": "27760"
  },
  {
    "text": "resilient and fault tolerant",
    "start": "27760",
    "end": "31840"
  },
  {
    "text": "but before we deep dive into that let's",
    "start": "32640",
    "end": "34719"
  },
  {
    "text": "talk about what's dapper dapper is",
    "start": "34719",
    "end": "37120"
  },
  {
    "text": "essentially a set of apis for",
    "start": "37120",
    "end": "38960"
  },
  {
    "text": "application developers to help them",
    "start": "38960",
    "end": "41040"
  },
  {
    "text": "write their applications faster and more",
    "start": "41040",
    "end": "42879"
  },
  {
    "text": "reliable so instead of focusing on",
    "start": "42879",
    "end": "45280"
  },
  {
    "text": "things like state management and pub sub",
    "start": "45280",
    "end": "48079"
  },
  {
    "text": "inventory and architectures and",
    "start": "48079",
    "end": "50559"
  },
  {
    "text": "triggering their code based on events",
    "start": "50559",
    "end": "52399"
  },
  {
    "text": "coming in from different systems and",
    "start": "52399",
    "end": "54800"
  },
  {
    "text": "fetching secrets or configuration",
    "start": "54800",
    "end": "57360"
  },
  {
    "text": "uh dapper gives them these building",
    "start": "57360",
    "end": "59280"
  },
  {
    "text": "blocks for them to just consume these",
    "start": "59280",
    "end": "61760"
  },
  {
    "text": "apis from so that they're free to focus",
    "start": "61760",
    "end": "64239"
  },
  {
    "text": "on their code on their company's ip and",
    "start": "64239",
    "end": "66479"
  },
  {
    "text": "their business logic",
    "start": "66479",
    "end": "68080"
  },
  {
    "text": "dapper runs on any infrastructure it",
    "start": "68080",
    "end": "70560"
  },
  {
    "text": "runs particularly well on kubernetes",
    "start": "70560",
    "end": "72560"
  },
  {
    "text": "which is the recommended production",
    "start": "72560",
    "end": "74400"
  },
  {
    "text": "platform for it but it'll also just run",
    "start": "74400",
    "end": "76960"
  },
  {
    "text": "on virtual machines",
    "start": "76960",
    "end": "80080"
  },
  {
    "text": "dapper has a sidecar architecture",
    "start": "81759",
    "end": "84479"
  },
  {
    "text": "in which you have your application here",
    "start": "84479",
    "end": "86560"
  },
  {
    "text": "and then the dapper sidecar and the",
    "start": "86560",
    "end": "89360"
  },
  {
    "text": "application will just call dapper via",
    "start": "89360",
    "end": "91119"
  },
  {
    "text": "http or jrpc so literally any",
    "start": "91119",
    "end": "94640"
  },
  {
    "text": "programming language that understands",
    "start": "94640",
    "end": "96400"
  },
  {
    "text": "each peer jerkbc can be used to talk to",
    "start": "96400",
    "end": "99119"
  },
  {
    "text": "debber",
    "start": "99119",
    "end": "100240"
  },
  {
    "text": "and so the application will call dapper",
    "start": "100240",
    "end": "102640"
  },
  {
    "text": "um over these protocols and here are",
    "start": "102640",
    "end": "104880"
  },
  {
    "text": "some examples of how these look like so",
    "start": "104880",
    "end": "107280"
  },
  {
    "text": "for example here the application will",
    "start": "107280",
    "end": "109119"
  },
  {
    "text": "call localhost and it's going to tell",
    "start": "109119",
    "end": "111280"
  },
  {
    "text": "dapper hey dapper please invoke the card",
    "start": "111280",
    "end": "113439"
  },
  {
    "text": "application for me on the method new",
    "start": "113439",
    "end": "116000"
  },
  {
    "text": "order",
    "start": "116000",
    "end": "117119"
  },
  {
    "text": "and this is an example of state so the",
    "start": "117119",
    "end": "119439"
  },
  {
    "text": "application is basically telling dapper",
    "start": "119439",
    "end": "121439"
  },
  {
    "text": "hey dapper please fetch the item 67",
    "start": "121439",
    "end": "124799"
  },
  {
    "text": "state",
    "start": "124799",
    "end": "126000"
  },
  {
    "text": "for me from a key value store that i",
    "start": "126000",
    "end": "128560"
  },
  {
    "text": "configure you work with this is an",
    "start": "128560",
    "end": "130640"
  },
  {
    "text": "example of the upper pub sub",
    "start": "130640",
    "end": "133120"
  },
  {
    "text": "so publish subscribe",
    "start": "133120",
    "end": "135440"
  },
  {
    "text": "and this is an example of how an",
    "start": "135440",
    "end": "137280"
  },
  {
    "text": "application might fetch a secret from",
    "start": "137280",
    "end": "138800"
  },
  {
    "text": "the upper from a component called key",
    "start": "138800",
    "end": "140959"
  },
  {
    "text": "vault so what are these components for",
    "start": "140959",
    "end": "143520"
  },
  {
    "text": "state publish and secrets",
    "start": "143520",
    "end": "146800"
  },
  {
    "text": "dapper at its very heart has the concept",
    "start": "146800",
    "end": "149120"
  },
  {
    "text": "of components",
    "start": "149120",
    "end": "150640"
  },
  {
    "text": "which are how developers talk to",
    "start": "150640",
    "end": "154239"
  },
  {
    "text": "these different apis or ac rather the",
    "start": "154239",
    "end": "157519"
  },
  {
    "text": "actual implementation behind those apis",
    "start": "157519",
    "end": "160239"
  },
  {
    "text": "so for example if a developer",
    "start": "160239",
    "end": "162720"
  },
  {
    "text": "talks to the adapter state api an",
    "start": "162720",
    "end": "164800"
  },
  {
    "text": "operator or developer can basically",
    "start": "164800",
    "end": "166560"
  },
  {
    "text": "configure dapper based in the",
    "start": "166560",
    "end": "168319"
  },
  {
    "text": "environment they're running in to talk",
    "start": "168319",
    "end": "170239"
  },
  {
    "text": "to different databases so for example if",
    "start": "170239",
    "end": "172560"
  },
  {
    "text": "they're on an aws they will configure",
    "start": "172560",
    "end": "174720"
  },
  {
    "text": "dapper to run against aws dynamodb if",
    "start": "174720",
    "end": "177840"
  },
  {
    "text": "they're running in azure it might be",
    "start": "177840",
    "end": "178879"
  },
  {
    "text": "cosmos db if they're running on-prem or",
    "start": "178879",
    "end": "181040"
  },
  {
    "text": "locally it might be rudders or cassandra",
    "start": "181040",
    "end": "183360"
  },
  {
    "text": "firebase for google cloud and the same",
    "start": "183360",
    "end": "185519"
  },
  {
    "text": "goes for any one of the adapter apis so",
    "start": "185519",
    "end": "188879"
  },
  {
    "text": "whether using bindings to trigger",
    "start": "188879",
    "end": "191040"
  },
  {
    "text": "application pub sub to connect different",
    "start": "191040",
    "end": "193519"
  },
  {
    "text": "systems asynchronously or the state",
    "start": "193519",
    "end": "196239"
  },
  {
    "text": "management to save state configuration",
    "start": "196239",
    "end": "198720"
  },
  {
    "text": "management to get configuration items or",
    "start": "198720",
    "end": "201040"
  },
  {
    "text": "any of the other apis components are",
    "start": "201040",
    "end": "203200"
  },
  {
    "text": "really had at the heart of the upper and",
    "start": "203200",
    "end": "206239"
  },
  {
    "text": "they run both locally and on kubernetes",
    "start": "206239",
    "end": "210959"
  },
  {
    "text": "on kubernetes dapper has a pretty simple",
    "start": "211040",
    "end": "213280"
  },
  {
    "text": "architecture it has a control plane that",
    "start": "213280",
    "end": "215680"
  },
  {
    "text": "is used to configure the data plane so",
    "start": "215680",
    "end": "218400"
  },
  {
    "text": "the control plane runs four main pods um",
    "start": "218400",
    "end": "222000"
  },
  {
    "text": "these pods are the dapper runtime",
    "start": "222000",
    "end": "224159"
  },
  {
    "text": "injector which is a sidecar injector",
    "start": "224159",
    "end": "226560"
  },
  {
    "text": "it'll inject the dapper sidecar into",
    "start": "226560",
    "end": "228879"
  },
  {
    "text": "your application once you've annotated",
    "start": "228879",
    "end": "230959"
  },
  {
    "text": "your deployment yaml for it",
    "start": "230959",
    "end": "233760"
  },
  {
    "text": "the sentry service is gonna",
    "start": "233760",
    "end": "236319"
  },
  {
    "text": "come up with uh certificates for your",
    "start": "236319",
    "end": "238799"
  },
  {
    "text": "application which contain a spiffy",
    "start": "238799",
    "end": "241040"
  },
  {
    "text": "compliant identity so you can then use",
    "start": "241040",
    "end": "243920"
  },
  {
    "text": "that identity to tell dapper to uh apply",
    "start": "243920",
    "end": "247680"
  },
  {
    "text": "um policies authorization policies so",
    "start": "247680",
    "end": "250000"
  },
  {
    "text": "that one app can only call the apps it's",
    "start": "250000",
    "end": "252480"
  },
  {
    "text": "been configured to call and the operator",
    "start": "252480",
    "end": "255680"
  },
  {
    "text": "is",
    "start": "255680",
    "end": "256400"
  },
  {
    "text": "the component that runs in the cluster",
    "start": "256400",
    "end": "258400"
  },
  {
    "text": "that listens to new components so for",
    "start": "258400",
    "end": "260959"
  },
  {
    "text": "example if you're",
    "start": "260959",
    "end": "262479"
  },
  {
    "text": "applying a component of a state server",
    "start": "262479",
    "end": "264639"
  },
  {
    "text": "type or a publish",
    "start": "264639",
    "end": "266560"
  },
  {
    "text": "or a pub subtype uh the operator will",
    "start": "266560",
    "end": "269040"
  },
  {
    "text": "detect that and then update the sidecar",
    "start": "269040",
    "end": "271520"
  },
  {
    "text": "with the latest metadata",
    "start": "271520",
    "end": "274000"
  },
  {
    "text": "the actor partition placement service is",
    "start": "274000",
    "end": "276320"
  },
  {
    "text": "used for a very specialized uh dapper",
    "start": "276320",
    "end": "279120"
  },
  {
    "text": "building block which is called actors",
    "start": "279120",
    "end": "280800"
  },
  {
    "text": "which is used to distribute uh verse",
    "start": "280800",
    "end": "283840"
  },
  {
    "text": "volumes of computing state throughout",
    "start": "283840",
    "end": "285440"
  },
  {
    "text": "the cluster millions of these the dapper",
    "start": "285440",
    "end": "287680"
  },
  {
    "text": "can just fail over and rehydrate with",
    "start": "287680",
    "end": "290000"
  },
  {
    "text": "their state if you're not using actors",
    "start": "290000",
    "end": "291919"
  },
  {
    "text": "you don't actually need i have to run",
    "start": "291919",
    "end": "293840"
  },
  {
    "text": "that pod",
    "start": "293840",
    "end": "296160"
  },
  {
    "text": "and then dapper will essentially the",
    "start": "296160",
    "end": "298240"
  },
  {
    "text": "runtime will make sure that it listens",
    "start": "298240",
    "end": "300479"
  },
  {
    "text": "to all of these components and your",
    "start": "300479",
    "end": "301919"
  },
  {
    "text": "application can just talk to it using",
    "start": "301919",
    "end": "304320"
  },
  {
    "text": "regular http or grpc",
    "start": "304320",
    "end": "309120"
  },
  {
    "text": "let's talk about resiliency so far we've",
    "start": "309280",
    "end": "311280"
  },
  {
    "text": "talked about how dapper can uh give you",
    "start": "311280",
    "end": "314320"
  },
  {
    "text": "apis so that you can talk to state",
    "start": "314320",
    "end": "316639"
  },
  {
    "text": "stores or publish messages or subscribe",
    "start": "316639",
    "end": "319039"
  },
  {
    "text": "to messages or retrieve secrets",
    "start": "319039",
    "end": "321440"
  },
  {
    "text": "but at the heart of all of these",
    "start": "321440",
    "end": "323120"
  },
  {
    "text": "operations you have something that your",
    "start": "323120",
    "end": "325840"
  },
  {
    "text": "application depends on it's not alone in",
    "start": "325840",
    "end": "328160"
  },
  {
    "text": "the world it's not isolated your",
    "start": "328160",
    "end": "330160"
  },
  {
    "text": "application might have a direct method",
    "start": "330160",
    "end": "332160"
  },
  {
    "text": "called to a different service via",
    "start": "332160",
    "end": "334160"
  },
  {
    "text": "service and location",
    "start": "334160",
    "end": "336160"
  },
  {
    "text": "or if you're getting an application",
    "start": "336160",
    "end": "337520"
  },
  {
    "text": "configuration there's got to be a",
    "start": "337520",
    "end": "339120"
  },
  {
    "text": "backhand that's fetching these",
    "start": "339120",
    "end": "342080"
  },
  {
    "text": "or more to the point storing these",
    "start": "342080",
    "end": "344320"
  },
  {
    "text": "configurations for you for your adapter",
    "start": "344320",
    "end": "346320"
  },
  {
    "text": "application to fetch uh same thing with",
    "start": "346320",
    "end": "348400"
  },
  {
    "text": "state management when you get state or",
    "start": "348400",
    "end": "350639"
  },
  {
    "text": "save state you know most of the times",
    "start": "350639",
    "end": "352479"
  },
  {
    "text": "it's not being",
    "start": "352479",
    "end": "353680"
  },
  {
    "text": "um the call's not being made from an",
    "start": "353680",
    "end": "355520"
  },
  {
    "text": "in-memory store you're probably talking",
    "start": "355520",
    "end": "358000"
  },
  {
    "text": "to something like denmark beer firebase",
    "start": "358000",
    "end": "360479"
  },
  {
    "text": "or radish or cassandra and input",
    "start": "360479",
    "end": "362479"
  },
  {
    "text": "bindings are events that trigger your",
    "start": "362479",
    "end": "365280"
  },
  {
    "text": "system um like twilio api or twitter api",
    "start": "365280",
    "end": "369280"
  },
  {
    "text": "stream for example but each one of these",
    "start": "369280",
    "end": "371840"
  },
  {
    "text": "dependencies might become unreliable at",
    "start": "371840",
    "end": "374160"
  },
  {
    "text": "some point and that's where adapter",
    "start": "374160",
    "end": "376479"
  },
  {
    "text": "entries introduces resiliency since the",
    "start": "376479",
    "end": "378720"
  },
  {
    "text": "1.7 release",
    "start": "378720",
    "end": "380400"
  },
  {
    "text": "and what's special about dapper's",
    "start": "380400",
    "end": "381759"
  },
  {
    "text": "resiliency policies is that it allows",
    "start": "381759",
    "end": "384560"
  },
  {
    "text": "you to define uh these policies that",
    "start": "384560",
    "end": "386479"
  },
  {
    "text": "just make your infrastructure more",
    "start": "386479",
    "end": "387680"
  },
  {
    "text": "reliable using circuit breakers retries",
    "start": "387680",
    "end": "390080"
  },
  {
    "text": "and time modes which hal is going to",
    "start": "390080",
    "end": "391680"
  },
  {
    "text": "deep dive into in a sec",
    "start": "391680",
    "end": "394160"
  },
  {
    "text": "but what's special here is that for",
    "start": "394160",
    "end": "396479"
  },
  {
    "text": "example",
    "start": "396479",
    "end": "397440"
  },
  {
    "text": "unlike service meshes which give you",
    "start": "397440",
    "end": "399520"
  },
  {
    "text": "these capabilities for service to",
    "start": "399520",
    "end": "401199"
  },
  {
    "text": "service calls dapper really allows you",
    "start": "401199",
    "end": "404240"
  },
  {
    "text": "to apply these policies holistically and",
    "start": "404240",
    "end": "406160"
  },
  {
    "text": "globally throughout your entire",
    "start": "406160",
    "end": "407919"
  },
  {
    "text": "application so it'll cover service to",
    "start": "407919",
    "end": "410400"
  },
  {
    "text": "service calls but it'll also cover other",
    "start": "410400",
    "end": "412639"
  },
  {
    "text": "application dependencies like databases",
    "start": "412639",
    "end": "414639"
  },
  {
    "text": "and caches and secret stores and all of",
    "start": "414639",
    "end": "417280"
  },
  {
    "text": "your applications external dependencies",
    "start": "417280",
    "end": "419280"
  },
  {
    "text": "also",
    "start": "419280",
    "end": "420639"
  },
  {
    "text": "and with that i'm going to hand over to",
    "start": "420639",
    "end": "423759"
  },
  {
    "text": "health to continue deep diving into that",
    "start": "423759",
    "end": "425599"
  },
  {
    "text": "resiliency",
    "start": "425599",
    "end": "427599"
  },
  {
    "text": "all right",
    "start": "427599",
    "end": "430000"
  },
  {
    "text": "i will share my screen let me know when",
    "start": "430720",
    "end": "432080"
  },
  {
    "text": "you can see it",
    "start": "432080",
    "end": "435478"
  },
  {
    "text": "all right uh let's",
    "start": "448720",
    "end": "452319"
  },
  {
    "text": "oh gosh",
    "start": "453199",
    "end": "454240"
  },
  {
    "text": "you can uh click the",
    "start": "454240",
    "end": "455680"
  },
  {
    "text": "right there it is thank you yeah",
    "start": "455680",
    "end": "457919"
  },
  {
    "text": "as a microsoft employee i use more",
    "start": "457919",
    "end": "459440"
  },
  {
    "text": "powerpoints",
    "start": "459440",
    "end": "460800"
  },
  {
    "text": "um",
    "start": "460800",
    "end": "461680"
  },
  {
    "text": "so here's the uh resiliency you know as",
    "start": "461680",
    "end": "464160"
  },
  {
    "text": "a whole",
    "start": "464160",
    "end": "465599"
  },
  {
    "text": "what it is inside of dapper is a",
    "start": "465599",
    "end": "468639"
  },
  {
    "text": "a yaml",
    "start": "468639",
    "end": "470000"
  },
  {
    "text": "if you're running standalone or a crd",
    "start": "470000",
    "end": "471919"
  },
  {
    "text": "but that's also a yaml",
    "start": "471919",
    "end": "473599"
  },
  {
    "text": "but it's basically it's a piece of",
    "start": "473599",
    "end": "475199"
  },
  {
    "text": "configuration that allows you to set up",
    "start": "475199",
    "end": "478319"
  },
  {
    "text": "several different policies across a",
    "start": "478319",
    "end": "480720"
  },
  {
    "text": "series of targets in your uh",
    "start": "480720",
    "end": "484080"
  },
  {
    "text": "in your application um so as a compared",
    "start": "484080",
    "end": "487680"
  },
  {
    "text": "to doing something like this with an sdk",
    "start": "487680",
    "end": "489599"
  },
  {
    "text": "or",
    "start": "489599",
    "end": "490639"
  },
  {
    "text": "you know any other piece of code where",
    "start": "490639",
    "end": "492319"
  },
  {
    "text": "you're manually",
    "start": "492319",
    "end": "493840"
  },
  {
    "text": "wrapping each of your individual message",
    "start": "493840",
    "end": "495680"
  },
  {
    "text": "calls what dapper does here is it lets",
    "start": "495680",
    "end": "497599"
  },
  {
    "text": "you define you know a a whole policy",
    "start": "497599",
    "end": "500160"
  },
  {
    "text": "that lets you take things and apply it",
    "start": "500160",
    "end": "502240"
  },
  {
    "text": "across a bunch of different sets so",
    "start": "502240",
    "end": "504639"
  },
  {
    "text": "instead of worrying about your",
    "start": "504639",
    "end": "505759"
  },
  {
    "text": "individual calls or where things are",
    "start": "505759",
    "end": "507840"
  },
  {
    "text": "being set up that way you actually have",
    "start": "507840",
    "end": "510560"
  },
  {
    "text": "this you know",
    "start": "510560",
    "end": "512159"
  },
  {
    "text": "big easy way to",
    "start": "512159",
    "end": "514240"
  },
  {
    "text": "set up uh you know a global resiliency",
    "start": "514240",
    "end": "517360"
  },
  {
    "text": "policy you had kind of like a one-stop",
    "start": "517360",
    "end": "519039"
  },
  {
    "text": "shop for all of your retries and",
    "start": "519039",
    "end": "520959"
  },
  {
    "text": "timeouts and circuit breakers",
    "start": "520959",
    "end": "523518"
  },
  {
    "text": "so",
    "start": "523519",
    "end": "524399"
  },
  {
    "text": "what those are",
    "start": "524399",
    "end": "525920"
  },
  {
    "text": "is or i guess i'll go to crd first um",
    "start": "525920",
    "end": "529839"
  },
  {
    "text": "so that was the yaml which you can run",
    "start": "529839",
    "end": "532080"
  },
  {
    "text": "as a standalone uh the crd itself is a",
    "start": "532080",
    "end": "535120"
  },
  {
    "text": "you know the kubernetes concept uh which",
    "start": "535120",
    "end": "537279"
  },
  {
    "text": "uh your row mesh and dapper does run on",
    "start": "537279",
    "end": "538800"
  },
  {
    "text": "kubernetes um and in that case uh",
    "start": "538800",
    "end": "542240"
  },
  {
    "text": "what we're allowing is for uh also",
    "start": "542240",
    "end": "544880"
  },
  {
    "text": "multiple crds to be defined with your",
    "start": "544880",
    "end": "548000"
  },
  {
    "text": "or multiple crds to be fined and then",
    "start": "548000",
    "end": "550160"
  },
  {
    "text": "they all get merged together so you can",
    "start": "550160",
    "end": "551600"
  },
  {
    "text": "see here we actually have two you know",
    "start": "551600",
    "end": "554240"
  },
  {
    "text": "different very short policies these are",
    "start": "554240",
    "end": "555680"
  },
  {
    "text": "not you know full things by any means",
    "start": "555680",
    "end": "557680"
  },
  {
    "text": "but you can see you know one specifies a",
    "start": "557680",
    "end": "559200"
  },
  {
    "text": "timeout one specifies a retry",
    "start": "559200",
    "end": "561760"
  },
  {
    "text": "and then they get merged into one big",
    "start": "561760",
    "end": "564000"
  },
  {
    "text": "policy so this also allows you to",
    "start": "564000",
    "end": "566160"
  },
  {
    "text": "uh define multiple crds across even you",
    "start": "566160",
    "end": "569120"
  },
  {
    "text": "know different teams different",
    "start": "569120",
    "end": "570959"
  },
  {
    "text": "organizations you know a bunch of",
    "start": "570959",
    "end": "572560"
  },
  {
    "text": "different people can provide",
    "start": "572560",
    "end": "574160"
  },
  {
    "text": "the resiliency that they care about and",
    "start": "574160",
    "end": "576399"
  },
  {
    "text": "that works with their app uh and they",
    "start": "576399",
    "end": "578880"
  },
  {
    "text": "don't need to necessarily merge it all",
    "start": "578880",
    "end": "580640"
  },
  {
    "text": "together at once so you can kind of work",
    "start": "580640",
    "end": "582480"
  },
  {
    "text": "a little bit more in your own",
    "start": "582480",
    "end": "583440"
  },
  {
    "text": "independent manner while also still you",
    "start": "583440",
    "end": "585519"
  },
  {
    "text": "know cohabitating in the same kubernetes",
    "start": "585519",
    "end": "587200"
  },
  {
    "text": "cluster",
    "start": "587200",
    "end": "589519"
  },
  {
    "text": "so what does every part of the",
    "start": "589519",
    "end": "591120"
  },
  {
    "text": "resiliency structure mean um there are",
    "start": "591120",
    "end": "594240"
  },
  {
    "text": "three main policies we have timeouts we",
    "start": "594240",
    "end": "596640"
  },
  {
    "text": "have retries and we have circuit",
    "start": "596640",
    "end": "598080"
  },
  {
    "text": "breakers",
    "start": "598080",
    "end": "599360"
  },
  {
    "text": "timeouts are the easiest out of all",
    "start": "599360",
    "end": "601040"
  },
  {
    "text": "these guys",
    "start": "601040",
    "end": "602079"
  },
  {
    "text": "they simply let us specify a duration",
    "start": "602079",
    "end": "604800"
  },
  {
    "text": "and after that duration has expired we",
    "start": "604800",
    "end": "606959"
  },
  {
    "text": "timeout and the request fails um you",
    "start": "606959",
    "end": "609760"
  },
  {
    "text": "know",
    "start": "609760",
    "end": "610720"
  },
  {
    "text": "really straightforward stuff but allows",
    "start": "610720",
    "end": "612240"
  },
  {
    "text": "you to set it instead of worrying about",
    "start": "612240",
    "end": "613680"
  },
  {
    "text": "per http call per grpc call and which",
    "start": "613680",
    "end": "616160"
  },
  {
    "text": "client you're using you know you can",
    "start": "616160",
    "end": "617519"
  },
  {
    "text": "just set it at one level it can apply",
    "start": "617519",
    "end": "619519"
  },
  {
    "text": "across all your different components all",
    "start": "619519",
    "end": "621040"
  },
  {
    "text": "your different you know apps everything",
    "start": "621040",
    "end": "622959"
  },
  {
    "text": "so",
    "start": "622959",
    "end": "623760"
  },
  {
    "text": "it's there and it's nice and easy to use",
    "start": "623760",
    "end": "626000"
  },
  {
    "text": "uh retries exactly what they sound like",
    "start": "626000",
    "end": "628399"
  },
  {
    "text": "um just allows for generic retrying of",
    "start": "628399",
    "end": "630560"
  },
  {
    "text": "requests or operations",
    "start": "630560",
    "end": "633040"
  },
  {
    "text": "we support two different types of",
    "start": "633040",
    "end": "634240"
  },
  {
    "text": "retries right now we have constant",
    "start": "634240",
    "end": "635920"
  },
  {
    "text": "retries and exponential retries",
    "start": "635920",
    "end": "638480"
  },
  {
    "text": "and then inside of the retry as well you",
    "start": "638480",
    "end": "641200"
  },
  {
    "text": "can even specify um",
    "start": "641200",
    "end": "643120"
  },
  {
    "text": "internal adapter you can specify if a",
    "start": "643120",
    "end": "645440"
  },
  {
    "text": "retry is uh",
    "start": "645440",
    "end": "647279"
  },
  {
    "text": "if an error is actually retriable or if",
    "start": "647279",
    "end": "648800"
  },
  {
    "text": "it's a more permanent error",
    "start": "648800",
    "end": "651360"
  },
  {
    "text": "and then finally we have circuit",
    "start": "651360",
    "end": "652399"
  },
  {
    "text": "breakers uh circuit breakers being one",
    "start": "652399",
    "end": "654160"
  },
  {
    "text": "of the more complicated sections of",
    "start": "654160",
    "end": "655680"
  },
  {
    "text": "resiliency but essentially what they",
    "start": "655680",
    "end": "657760"
  },
  {
    "text": "allow you to do is cut off systems from",
    "start": "657760",
    "end": "660800"
  },
  {
    "text": "traffic or reduce traffic um to allow",
    "start": "660800",
    "end": "663519"
  },
  {
    "text": "for recovery time this is in situations",
    "start": "663519",
    "end": "665360"
  },
  {
    "text": "where you're having a component or",
    "start": "665360",
    "end": "667680"
  },
  {
    "text": "service that is you know simply not",
    "start": "667680",
    "end": "669680"
  },
  {
    "text": "working appropriately or you know",
    "start": "669680",
    "end": "671839"
  },
  {
    "text": "causing a large number of errors",
    "start": "671839",
    "end": "674480"
  },
  {
    "text": "now with these three policies i wanted",
    "start": "674480",
    "end": "676320"
  },
  {
    "text": "to highlight here how they work together",
    "start": "676320",
    "end": "679279"
  },
  {
    "text": "you know they essentially all wrap each",
    "start": "679279",
    "end": "680959"
  },
  {
    "text": "other we have retry at the outermost",
    "start": "680959",
    "end": "683680"
  },
  {
    "text": "layer uh followed by circuit breaker",
    "start": "683680",
    "end": "685760"
  },
  {
    "text": "breakers followed by timeouts and then",
    "start": "685760",
    "end": "687839"
  },
  {
    "text": "finally the actual wrapped function or",
    "start": "687839",
    "end": "689680"
  },
  {
    "text": "code that's being called by the",
    "start": "689680",
    "end": "690959"
  },
  {
    "text": "resiliency policy",
    "start": "690959",
    "end": "692560"
  },
  {
    "text": "uh the reason we have them in that order",
    "start": "692560",
    "end": "694240"
  },
  {
    "text": "is because that allows the timeout to",
    "start": "694240",
    "end": "696480"
  },
  {
    "text": "signify error to the circuit breaker and",
    "start": "696480",
    "end": "698399"
  },
  {
    "text": "then it also allows circuit breakers to",
    "start": "698399",
    "end": "699920"
  },
  {
    "text": "signify to the retry policy when uh",
    "start": "699920",
    "end": "702880"
  },
  {
    "text": "we've gone too far you know if the",
    "start": "702880",
    "end": "704399"
  },
  {
    "text": "circuit breaker is now open we don't",
    "start": "704399",
    "end": "706160"
  },
  {
    "text": "want to keep retrying and uh",
    "start": "706160",
    "end": "707680"
  },
  {
    "text": "continuously spinning our wheels so the",
    "start": "707680",
    "end": "709200"
  },
  {
    "text": "circuit breaker uh allows us to at that",
    "start": "709200",
    "end": "712160"
  },
  {
    "text": "level allows us to specify a permanent",
    "start": "712160",
    "end": "714320"
  },
  {
    "text": "error back to the retry policy thus",
    "start": "714320",
    "end": "716079"
  },
  {
    "text": "stopping all the retries and allowing",
    "start": "716079",
    "end": "718079"
  },
  {
    "text": "for whatever the timeout period that",
    "start": "718079",
    "end": "719600"
  },
  {
    "text": "we've set is",
    "start": "719600",
    "end": "722319"
  },
  {
    "text": "so going into the policies just a little",
    "start": "723200",
    "end": "724800"
  },
  {
    "text": "bit retries like i said we have constant",
    "start": "724800",
    "end": "726880"
  },
  {
    "text": "and exponential policies",
    "start": "726880",
    "end": "729200"
  },
  {
    "text": "constant policies really simple they",
    "start": "729200",
    "end": "731120"
  },
  {
    "text": "have a maximum number of retries and",
    "start": "731120",
    "end": "732800"
  },
  {
    "text": "they have a duration uh maximum retries",
    "start": "732800",
    "end": "734959"
  },
  {
    "text": "how many retries we have duration how",
    "start": "734959",
    "end": "737279"
  },
  {
    "text": "long in between each individual request",
    "start": "737279",
    "end": "740160"
  },
  {
    "text": "exponential policies are a little bit",
    "start": "740160",
    "end": "741519"
  },
  {
    "text": "more complicated because they have a",
    "start": "741519",
    "end": "743440"
  },
  {
    "text": "little bit more advanced behavior but we",
    "start": "743440",
    "end": "745839"
  },
  {
    "text": "can set the max retries again maximum",
    "start": "745839",
    "end": "747680"
  },
  {
    "text": "number of retries that we want to make",
    "start": "747680",
    "end": "749839"
  },
  {
    "text": "you can set the initial interval which",
    "start": "749839",
    "end": "751360"
  },
  {
    "text": "is uh the starting point at that you",
    "start": "751360",
    "end": "754079"
  },
  {
    "text": "start doing exponential backup at we",
    "start": "754079",
    "end": "756000"
  },
  {
    "text": "have a randomization factor which is",
    "start": "756000",
    "end": "757519"
  },
  {
    "text": "used to introduce jitter so that way you",
    "start": "757519",
    "end": "758959"
  },
  {
    "text": "don't have everything uh",
    "start": "758959",
    "end": "761360"
  },
  {
    "text": "you know calling at the same time",
    "start": "761360",
    "end": "762639"
  },
  {
    "text": "because again you can just have swarms",
    "start": "762639",
    "end": "763920"
  },
  {
    "text": "of requests that way",
    "start": "763920",
    "end": "765279"
  },
  {
    "text": "there's a multiplier which is the growth",
    "start": "765279",
    "end": "767760"
  },
  {
    "text": "rate of the initial interview interval",
    "start": "767760",
    "end": "770720"
  },
  {
    "text": "you know so the bigger the multiplier",
    "start": "770720",
    "end": "772079"
  },
  {
    "text": "the faster we back off",
    "start": "772079",
    "end": "773760"
  },
  {
    "text": "um",
    "start": "773760",
    "end": "774880"
  },
  {
    "text": "we have a maximum interval um which is",
    "start": "774880",
    "end": "776720"
  },
  {
    "text": "the maximum amount of time you will have",
    "start": "776720",
    "end": "778240"
  },
  {
    "text": "between retries again important because",
    "start": "778240",
    "end": "780399"
  },
  {
    "text": "if you don't if you don't specify these",
    "start": "780399",
    "end": "781839"
  },
  {
    "text": "kind of things uh especially in",
    "start": "781839",
    "end": "783760"
  },
  {
    "text": "exponential policy you can be waiting",
    "start": "783760",
    "end": "785120"
  },
  {
    "text": "forever and then a maximum elapsed time",
    "start": "785120",
    "end": "787680"
  },
  {
    "text": "which is the overall maximum amount of",
    "start": "787680",
    "end": "789680"
  },
  {
    "text": "time spent for all the retries",
    "start": "789680",
    "end": "792639"
  },
  {
    "text": "so that way you can kind of control the",
    "start": "792639",
    "end": "794639"
  },
  {
    "text": "global level of your policy",
    "start": "794639",
    "end": "797839"
  },
  {
    "text": "now getting into circuit breakers um",
    "start": "798560",
    "end": "800800"
  },
  {
    "text": "which again uh are how you stop traffic",
    "start": "800800",
    "end": "803279"
  },
  {
    "text": "from one another um",
    "start": "803279",
    "end": "805600"
  },
  {
    "text": "their stuff is a little bit more uh",
    "start": "805600",
    "end": "807279"
  },
  {
    "text": "intricate so we have the max requests um",
    "start": "807279",
    "end": "809760"
  },
  {
    "text": "well this is actually the maximum number",
    "start": "809760",
    "end": "811120"
  },
  {
    "text": "of requests that are uh handled in the",
    "start": "811120",
    "end": "814079"
  },
  {
    "text": "half open state of a circuit breaker",
    "start": "814079",
    "end": "816399"
  },
  {
    "text": "a circuit breaker has three states which",
    "start": "816399",
    "end": "818800"
  },
  {
    "text": "are closed open and half open",
    "start": "818800",
    "end": "821600"
  },
  {
    "text": "closed",
    "start": "821600",
    "end": "822880"
  },
  {
    "text": "similar to an actual circuit breaker",
    "start": "822880",
    "end": "824639"
  },
  {
    "text": "like in your house's electrical system",
    "start": "824639",
    "end": "827040"
  },
  {
    "text": "means that everything is running",
    "start": "827040",
    "end": "827920"
  },
  {
    "text": "normally open means we have flipped the",
    "start": "827920",
    "end": "829920"
  },
  {
    "text": "circuit breaker which is stopping all",
    "start": "829920",
    "end": "831760"
  },
  {
    "text": "traffic",
    "start": "831760",
    "end": "832720"
  },
  {
    "text": "and then half open is a state where",
    "start": "832720",
    "end": "835040"
  },
  {
    "text": "we will let through the max number of",
    "start": "835040",
    "end": "836720"
  },
  {
    "text": "requests that you see here and that's",
    "start": "836720",
    "end": "838160"
  },
  {
    "text": "where we look for a successful message",
    "start": "838160",
    "end": "840959"
  },
  {
    "text": "or successful request",
    "start": "840959",
    "end": "842880"
  },
  {
    "text": "if we get a successful request then the",
    "start": "842880",
    "end": "844959"
  },
  {
    "text": "circuit breaker can close again and we",
    "start": "844959",
    "end": "846480"
  },
  {
    "text": "can now resume normal traffic if we",
    "start": "846480",
    "end": "848320"
  },
  {
    "text": "don't get a successful request the",
    "start": "848320",
    "end": "849839"
  },
  {
    "text": "circuit breaker goes back to being fully",
    "start": "849839",
    "end": "851440"
  },
  {
    "text": "open",
    "start": "851440",
    "end": "853680"
  },
  {
    "text": "the next thing we look at is actually",
    "start": "853920",
    "end": "855279"
  },
  {
    "text": "the interval which is the cyclical",
    "start": "855279",
    "end": "856880"
  },
  {
    "text": "period um that errors are evaluated in",
    "start": "856880",
    "end": "859680"
  },
  {
    "text": "so that means that we have a rolling",
    "start": "859680",
    "end": "861519"
  },
  {
    "text": "window where we're looking for a certain",
    "start": "861519",
    "end": "863680"
  },
  {
    "text": "number of errors or a certain condition",
    "start": "863680",
    "end": "865279"
  },
  {
    "text": "to be set and if that condition is met",
    "start": "865279",
    "end": "867519"
  },
  {
    "text": "then that's when the circuit breaker",
    "start": "867519",
    "end": "868639"
  },
  {
    "text": "opens so we're looking for failure",
    "start": "868639",
    "end": "870000"
  },
  {
    "text": "scenarios here as opposed to anything",
    "start": "870000",
    "end": "871680"
  },
  {
    "text": "else",
    "start": "871680",
    "end": "872639"
  },
  {
    "text": "if you don't specify an interval it just",
    "start": "872639",
    "end": "874399"
  },
  {
    "text": "aggregates forever",
    "start": "874399",
    "end": "875960"
  },
  {
    "text": "[Music]",
    "start": "875960",
    "end": "877279"
  },
  {
    "text": "the timeout is how long the circuit",
    "start": "877279",
    "end": "879519"
  },
  {
    "text": "breaker",
    "start": "879519",
    "end": "880399"
  },
  {
    "text": "remains open before going back to the",
    "start": "880399",
    "end": "882160"
  },
  {
    "text": "half open state so if you set a timeout",
    "start": "882160",
    "end": "884560"
  },
  {
    "text": "of 60 seconds that means that all",
    "start": "884560",
    "end": "886079"
  },
  {
    "text": "traffic will be denied to whatever that",
    "start": "886079",
    "end": "888079"
  },
  {
    "text": "target is for those 60 seconds and after",
    "start": "888079",
    "end": "890720"
  },
  {
    "text": "60 seconds we'll do half open we'll let",
    "start": "890720",
    "end": "892959"
  },
  {
    "text": "through the number of max requests",
    "start": "892959",
    "end": "895440"
  },
  {
    "text": "and again if those succeed back to close",
    "start": "895440",
    "end": "898000"
  },
  {
    "text": "if they don't back to open",
    "start": "898000",
    "end": "899760"
  },
  {
    "text": "and then finally is the trip which is",
    "start": "899760",
    "end": "901360"
  },
  {
    "text": "the actual uh you know thing that we",
    "start": "901360",
    "end": "904160"
  },
  {
    "text": "evaluate in the circuit breaker um",
    "start": "904160",
    "end": "906639"
  },
  {
    "text": "generally these are uh fairly",
    "start": "906639",
    "end": "908959"
  },
  {
    "text": "straightforward cases um you know the",
    "start": "908959",
    "end": "911040"
  },
  {
    "text": "and the default that we see here is",
    "start": "911040",
    "end": "912399"
  },
  {
    "text": "consecutive failure count um",
    "start": "912399",
    "end": "915600"
  },
  {
    "text": "so uh that means instead of looking at",
    "start": "915600",
    "end": "918240"
  },
  {
    "text": "uh and again since it is consecutive",
    "start": "918240",
    "end": "919680"
  },
  {
    "text": "failures which what we're looking for",
    "start": "919680",
    "end": "920800"
  },
  {
    "text": "here um in that interval you know you",
    "start": "920800",
    "end": "923920"
  },
  {
    "text": "it's uh",
    "start": "923920",
    "end": "925199"
  },
  {
    "text": "you need to actually have those errors",
    "start": "925199",
    "end": "926320"
  },
  {
    "text": "back to back you can't have air success",
    "start": "926320",
    "end": "927839"
  },
  {
    "text": "error success we're looking for a total",
    "start": "927839",
    "end": "929759"
  },
  {
    "text": "failure here although you can also you",
    "start": "929759",
    "end": "931680"
  },
  {
    "text": "can also set it to look for a total",
    "start": "931680",
    "end": "933360"
  },
  {
    "text": "number of failures over the course of uh",
    "start": "933360",
    "end": "936240"
  },
  {
    "text": "the interval",
    "start": "936240",
    "end": "937680"
  },
  {
    "text": "so that's how those go in the and",
    "start": "937680",
    "end": "940320"
  },
  {
    "text": "function like that and again on the uh",
    "start": "940320",
    "end": "943120"
  },
  {
    "text": "going from half open to closed again",
    "start": "943120",
    "end": "945759"
  },
  {
    "text": "we're not uh or half open to open we're",
    "start": "945759",
    "end": "948240"
  },
  {
    "text": "not looking for the full trip value at",
    "start": "948240",
    "end": "949759"
  },
  {
    "text": "the half open open that's looking for a",
    "start": "949759",
    "end": "952160"
  },
  {
    "text": "basically a single",
    "start": "952160",
    "end": "953839"
  },
  {
    "text": "piece of success or failure",
    "start": "953839",
    "end": "955680"
  },
  {
    "text": "in that regard so that's not evaluating",
    "start": "955680",
    "end": "957839"
  },
  {
    "text": "the trip again",
    "start": "957839",
    "end": "960320"
  },
  {
    "text": "and now we also have the targets which",
    "start": "961440",
    "end": "962880"
  },
  {
    "text": "is the other side of the resiliency",
    "start": "962880",
    "end": "965920"
  },
  {
    "text": "policy",
    "start": "965920",
    "end": "967759"
  },
  {
    "text": "so these can be applications actors or",
    "start": "967759",
    "end": "970079"
  },
  {
    "text": "components",
    "start": "970079",
    "end": "971600"
  },
  {
    "text": "and then what they do here is they're",
    "start": "971600",
    "end": "973759"
  },
  {
    "text": "mapping uh policies into or mapping",
    "start": "973759",
    "end": "978160"
  },
  {
    "text": "policies into the system that you're",
    "start": "978160",
    "end": "979759"
  },
  {
    "text": "calling",
    "start": "979759",
    "end": "980800"
  },
  {
    "text": "um so the entire resiliency",
    "start": "980800",
    "end": "982959"
  },
  {
    "text": "configuration is basically setting up a",
    "start": "982959",
    "end": "985360"
  },
  {
    "text": "string to value map",
    "start": "985360",
    "end": "987199"
  },
  {
    "text": "where the string is you know the name of",
    "start": "987199",
    "end": "989360"
  },
  {
    "text": "the policy to the actual policy itself",
    "start": "989360",
    "end": "992240"
  },
  {
    "text": "and then in the target it's the name of",
    "start": "992240",
    "end": "993839"
  },
  {
    "text": "the target to what the policies look or",
    "start": "993839",
    "end": "996160"
  },
  {
    "text": "what the target is looking for in terms",
    "start": "996160",
    "end": "997680"
  },
  {
    "text": "of a retry policy",
    "start": "997680",
    "end": "1000000"
  },
  {
    "text": "so",
    "start": "1000000",
    "end": "1000880"
  },
  {
    "text": "first we have apps and we have just an",
    "start": "1000880",
    "end": "1003199"
  },
  {
    "text": "example here app a",
    "start": "1003199",
    "end": "1005040"
  },
  {
    "text": "so this means that when any application",
    "start": "1005040",
    "end": "1006959"
  },
  {
    "text": "calls into application a including",
    "start": "1006959",
    "end": "1009519"
  },
  {
    "text": "itself if application a called its own",
    "start": "1009519",
    "end": "1011600"
  },
  {
    "text": "method um it would be using these",
    "start": "1011600",
    "end": "1014160"
  },
  {
    "text": "policies so it would have a general",
    "start": "1014160",
    "end": "1016240"
  },
  {
    "text": "timeout the retributive service retry",
    "start": "1016240",
    "end": "1018320"
  },
  {
    "text": "and the circuit breaker would be service",
    "start": "1018320",
    "end": "1019360"
  },
  {
    "text": "circuit breaker",
    "start": "1019360",
    "end": "1020560"
  },
  {
    "text": "none of those are defined here but",
    "start": "1020560",
    "end": "1022240"
  },
  {
    "text": "that's basically how this is going to",
    "start": "1022240",
    "end": "1023279"
  },
  {
    "text": "work out is that you would expect in",
    "start": "1023279",
    "end": "1025038"
  },
  {
    "text": "your resiliency policy",
    "start": "1025039",
    "end": "1027280"
  },
  {
    "text": "to find a timeout named general a retry",
    "start": "1027280",
    "end": "1030160"
  },
  {
    "text": "named service retry a circuit breaker",
    "start": "1030160",
    "end": "1031918"
  },
  {
    "text": "named service circuit breaker",
    "start": "1031919",
    "end": "1034319"
  },
  {
    "text": "components are a little bit different",
    "start": "1034319",
    "end": "1035678"
  },
  {
    "text": "than apps because they have a slightly",
    "start": "1035679",
    "end": "1039199"
  },
  {
    "text": "different set of behavior here",
    "start": "1039199",
    "end": "1041120"
  },
  {
    "text": "you notice that we have",
    "start": "1041120",
    "end": "1042798"
  },
  {
    "text": "a pub sub component that we're defining",
    "start": "1042799",
    "end": "1044880"
  },
  {
    "text": "this for and it has two different",
    "start": "1044880",
    "end": "1047280"
  },
  {
    "text": "types that we're defining for outbound",
    "start": "1047280",
    "end": "1048880"
  },
  {
    "text": "and inbound",
    "start": "1048880",
    "end": "1050160"
  },
  {
    "text": "now pub sub and",
    "start": "1050160",
    "end": "1052400"
  },
  {
    "text": "bindings are actually the only ones that",
    "start": "1052400",
    "end": "1054160"
  },
  {
    "text": "have an inbound policy and the reason",
    "start": "1054160",
    "end": "1056480"
  },
  {
    "text": "for that is uh you can look at",
    "start": "1056480",
    "end": "1058400"
  },
  {
    "text": "components essentially as calling",
    "start": "1058400",
    "end": "1060400"
  },
  {
    "text": "generally an external source",
    "start": "1060400",
    "end": "1062320"
  },
  {
    "text": "so",
    "start": "1062320",
    "end": "1063840"
  },
  {
    "text": "an outbound policy is calling into that",
    "start": "1063840",
    "end": "1066799"
  },
  {
    "text": "component you know for example if i have",
    "start": "1066799",
    "end": "1068559"
  },
  {
    "text": "an azure service bus component",
    "start": "1068559",
    "end": "1070960"
  },
  {
    "text": "and i wanted to publish a message a",
    "start": "1070960",
    "end": "1072559"
  },
  {
    "text": "method or message um i would then call",
    "start": "1072559",
    "end": "1075840"
  },
  {
    "text": "uh that pub so component with its",
    "start": "1075840",
    "end": "1077600"
  },
  {
    "text": "outbound policy because i'm calling that",
    "start": "1077600",
    "end": "1079919"
  },
  {
    "text": "component",
    "start": "1079919",
    "end": "1081039"
  },
  {
    "text": "now the other side of that pub sub",
    "start": "1081039",
    "end": "1082799"
  },
  {
    "text": "component is when you are subscribing to",
    "start": "1082799",
    "end": "1084880"
  },
  {
    "text": "or listening for messages and um the",
    "start": "1084880",
    "end": "1087200"
  },
  {
    "text": "reason we call is an inbound policy is",
    "start": "1087200",
    "end": "1088559"
  },
  {
    "text": "because in that case dapper is calling",
    "start": "1088559",
    "end": "1090799"
  },
  {
    "text": "into your app",
    "start": "1090799",
    "end": "1092720"
  },
  {
    "text": "so um that's why we have these kind of",
    "start": "1092720",
    "end": "1095280"
  },
  {
    "text": "two different policies and in this case",
    "start": "1095280",
    "end": "1096720"
  },
  {
    "text": "they're set up very very similarly um",
    "start": "1096720",
    "end": "1100080"
  },
  {
    "text": "but uh they are two separate things and",
    "start": "1100080",
    "end": "1102240"
  },
  {
    "text": "you can handle them separately because",
    "start": "1102240",
    "end": "1103760"
  },
  {
    "text": "uh often or in most cases",
    "start": "1103760",
    "end": "1107039"
  },
  {
    "text": "when you're publishing a message to your",
    "start": "1107039",
    "end": "1108880"
  },
  {
    "text": "uh pub sub system you're not going to",
    "start": "1108880",
    "end": "1111520"
  },
  {
    "text": "have the same kind of resiliency",
    "start": "1111520",
    "end": "1113360"
  },
  {
    "text": "requirements as when you're actually",
    "start": "1113360",
    "end": "1115520"
  },
  {
    "text": "processing that message you know which",
    "start": "1115520",
    "end": "1117360"
  },
  {
    "text": "is another thing handled by dapper when",
    "start": "1117360",
    "end": "1118640"
  },
  {
    "text": "we have it receive a message and then it",
    "start": "1118640",
    "end": "1120320"
  },
  {
    "text": "calls into our application they're two",
    "start": "1120320",
    "end": "1121760"
  },
  {
    "text": "different scenarios so in the case of",
    "start": "1121760",
    "end": "1124000"
  },
  {
    "text": "resiliency they've received two",
    "start": "1124000",
    "end": "1125200"
  },
  {
    "text": "different policy definitions",
    "start": "1125200",
    "end": "1127039"
  },
  {
    "text": "and finally we have actors again these",
    "start": "1127039",
    "end": "1129120"
  },
  {
    "text": "are a little bit different than",
    "start": "1129120",
    "end": "1130799"
  },
  {
    "text": "the other",
    "start": "1130799",
    "end": "1132400"
  },
  {
    "text": "systems very similar to apps except they",
    "start": "1132400",
    "end": "1134320"
  },
  {
    "text": "have two extra fields which is the",
    "start": "1134320",
    "end": "1135520"
  },
  {
    "text": "circuit breaker scope and as well as the",
    "start": "1135520",
    "end": "1137280"
  },
  {
    "text": "circuit breaker cache size",
    "start": "1137280",
    "end": "1139120"
  },
  {
    "text": "the scope for an actor can include the",
    "start": "1139120",
    "end": "1141440"
  },
  {
    "text": "type of the actor which you can actually",
    "start": "1141440",
    "end": "1142880"
  },
  {
    "text": "see is the uh how we index into this we",
    "start": "1142880",
    "end": "1145520"
  },
  {
    "text": "have actors and then my actor type so",
    "start": "1145520",
    "end": "1147360"
  },
  {
    "text": "that's actually how we would use this we",
    "start": "1147360",
    "end": "1148720"
  },
  {
    "text": "called an actor of my actor type we",
    "start": "1148720",
    "end": "1150480"
  },
  {
    "text": "would use this policy",
    "start": "1150480",
    "end": "1152559"
  },
  {
    "text": "and the scope can be type id or both",
    "start": "1152559",
    "end": "1155840"
  },
  {
    "text": "and when you're using both or id what",
    "start": "1155840",
    "end": "1157520"
  },
  {
    "text": "it's looking for is actually the",
    "start": "1157520",
    "end": "1159440"
  },
  {
    "text": "individual actor so you can actually",
    "start": "1159440",
    "end": "1161440"
  },
  {
    "text": "have your circuit spread your circuit",
    "start": "1161440",
    "end": "1162880"
  },
  {
    "text": "breaker go all the way down to saying i",
    "start": "1162880",
    "end": "1164799"
  },
  {
    "text": "want to fail this individual actor",
    "start": "1164799",
    "end": "1166240"
  },
  {
    "text": "because maybe one actor host is failing",
    "start": "1166240",
    "end": "1168640"
  },
  {
    "text": "as opposed to uh the other ones so",
    "start": "1168640",
    "end": "1170480"
  },
  {
    "text": "you're actually you don't want to stop",
    "start": "1170480",
    "end": "1171760"
  },
  {
    "text": "all traffic to all actors but you want",
    "start": "1171760",
    "end": "1173840"
  },
  {
    "text": "to stop traffic to that host while that",
    "start": "1173840",
    "end": "1175679"
  },
  {
    "text": "host recovers from whatever is happening",
    "start": "1175679",
    "end": "1177440"
  },
  {
    "text": "or while the host is de-provisioned and",
    "start": "1177440",
    "end": "1178960"
  },
  {
    "text": "a new host is reprovisioned",
    "start": "1178960",
    "end": "1181039"
  },
  {
    "text": "uh and then finally we also have the",
    "start": "1181039",
    "end": "1182400"
  },
  {
    "text": "circuit breaker cache size",
    "start": "1182400",
    "end": "1184400"
  },
  {
    "text": "which again is important because as your",
    "start": "1184400",
    "end": "1186400"
  },
  {
    "text": "own stated earlier uh actors and dapper",
    "start": "1186400",
    "end": "1189600"
  },
  {
    "text": "they're very specific uh paradigm of how",
    "start": "1189600",
    "end": "1191840"
  },
  {
    "text": "you're doing some development",
    "start": "1191840",
    "end": "1193520"
  },
  {
    "text": "and it's designed to distribute load and",
    "start": "1193520",
    "end": "1195039"
  },
  {
    "text": "it's designed to distribute you know",
    "start": "1195039",
    "end": "1196559"
  },
  {
    "text": "tens of thousands to even millions of uh",
    "start": "1196559",
    "end": "1199200"
  },
  {
    "text": "of actors so in this case um",
    "start": "1199200",
    "end": "1201840"
  },
  {
    "text": "you know we can't keep uh",
    "start": "1201840",
    "end": "1204159"
  },
  {
    "text": "all circuit breaker scope into our or",
    "start": "1204159",
    "end": "1206720"
  },
  {
    "text": "all circuit breaker",
    "start": "1206720",
    "end": "1208000"
  },
  {
    "text": "uh all circuit breakers in our memory",
    "start": "1208000",
    "end": "1209679"
  },
  {
    "text": "because you know it could balloon",
    "start": "1209679",
    "end": "1211360"
  },
  {
    "text": "infinitely",
    "start": "1211360",
    "end": "1212799"
  },
  {
    "text": "um",
    "start": "1212799",
    "end": "1213600"
  },
  {
    "text": "it's also uh",
    "start": "1213600",
    "end": "1215200"
  },
  {
    "text": "worth",
    "start": "1215200",
    "end": "1216159"
  },
  {
    "text": "calling out um circuit breakers going",
    "start": "1216159",
    "end": "1218480"
  },
  {
    "text": "back for a second here um circuit",
    "start": "1218480",
    "end": "1220720"
  },
  {
    "text": "breakers as we can see from this",
    "start": "1220720",
    "end": "1221840"
  },
  {
    "text": "definition or this uh image here uh are",
    "start": "1221840",
    "end": "1224960"
  },
  {
    "text": "actually stored locally to your sidecar",
    "start": "1224960",
    "end": "1227440"
  },
  {
    "text": "so each sidecar has its own circuit",
    "start": "1227440",
    "end": "1229520"
  },
  {
    "text": "breaker and its own circuit breaker",
    "start": "1229520",
    "end": "1230880"
  },
  {
    "text": "cache um i should say um so as you can",
    "start": "1230880",
    "end": "1234400"
  },
  {
    "text": "see here i kind of define the flow of an",
    "start": "1234400",
    "end": "1236960"
  },
  {
    "text": "uh of an app invocation um if app a",
    "start": "1236960",
    "end": "1240159"
  },
  {
    "text": "wants to call app b",
    "start": "1240159",
    "end": "1242400"
  },
  {
    "text": "app a calls into us uh into a step or",
    "start": "1242400",
    "end": "1244720"
  },
  {
    "text": "sidecar which is going to handle all of",
    "start": "1244720",
    "end": "1246000"
  },
  {
    "text": "your you know resolution and",
    "start": "1246000",
    "end": "1248400"
  },
  {
    "text": "networking things of that sort and know",
    "start": "1248400",
    "end": "1250799"
  },
  {
    "text": "how to call appb but the first what it's",
    "start": "1250799",
    "end": "1252799"
  },
  {
    "text": "going to do is going to check it's",
    "start": "1252799",
    "end": "1253919"
  },
  {
    "text": "circuit breaker cache it's going to look",
    "start": "1253919",
    "end": "1255840"
  },
  {
    "text": "for",
    "start": "1255840",
    "end": "1257200"
  },
  {
    "text": "a",
    "start": "1257200",
    "end": "1258720"
  },
  {
    "text": "a circuit breaker for app b and it's",
    "start": "1258720",
    "end": "1260799"
  },
  {
    "text": "going to try and put that request",
    "start": "1260799",
    "end": "1262400"
  },
  {
    "text": "through its circuit breaker um the",
    "start": "1262400",
    "end": "1264559"
  },
  {
    "text": "reason for this is because if app b is",
    "start": "1264559",
    "end": "1266799"
  },
  {
    "text": "broken we you know we need to know about",
    "start": "1266799",
    "end": "1268320"
  },
  {
    "text": "it on app a",
    "start": "1268320",
    "end": "1270480"
  },
  {
    "text": "so we keep all that data there and each",
    "start": "1270480",
    "end": "1272400"
  },
  {
    "text": "of these apps interacts individually",
    "start": "1272400",
    "end": "1274640"
  },
  {
    "text": "with their own circuit breaker so that",
    "start": "1274640",
    "end": "1276000"
  },
  {
    "text": "way um you know we don't have any of",
    "start": "1276000",
    "end": "1277840"
  },
  {
    "text": "these",
    "start": "1277840",
    "end": "1278720"
  },
  {
    "text": "they're not widespread failures then you",
    "start": "1278720",
    "end": "1280480"
  },
  {
    "text": "know nothing no",
    "start": "1280480",
    "end": "1282000"
  },
  {
    "text": "you know app a to app b failure is going",
    "start": "1282000",
    "end": "1283600"
  },
  {
    "text": "to impact um you know app c to app b if",
    "start": "1283600",
    "end": "1286400"
  },
  {
    "text": "those two things are okay you can kind",
    "start": "1286400",
    "end": "1287840"
  },
  {
    "text": "of imagine this might happen if you're",
    "start": "1287840",
    "end": "1289440"
  },
  {
    "text": "you know doing multi-az cloud work and",
    "start": "1289440",
    "end": "1291520"
  },
  {
    "text": "maybe az1 to az2 is down but you know",
    "start": "1291520",
    "end": "1293760"
  },
  {
    "text": "az2 to az3 is fine",
    "start": "1293760",
    "end": "1295840"
  },
  {
    "text": "you don't want",
    "start": "1295840",
    "end": "1296960"
  },
  {
    "text": "an easy one to 82 failure to stop your",
    "start": "1296960",
    "end": "1298799"
  },
  {
    "text": "entire traffic set so circuit breakers",
    "start": "1298799",
    "end": "1301120"
  },
  {
    "text": "live on the individual hosts and that",
    "start": "1301120",
    "end": "1302799"
  },
  {
    "text": "way we can have some more fine grained",
    "start": "1302799",
    "end": "1304320"
  },
  {
    "text": "control of how traffic is managed",
    "start": "1304320",
    "end": "1308320"
  },
  {
    "text": "um so finally let's do some target",
    "start": "1308799",
    "end": "1310480"
  },
  {
    "text": "examples just to make sure everything uh",
    "start": "1310480",
    "end": "1312799"
  },
  {
    "text": "you know is",
    "start": "1312799",
    "end": "1313840"
  },
  {
    "text": "syncing appropriately so i have a really",
    "start": "1313840",
    "end": "1315679"
  },
  {
    "text": "simple policy to find here",
    "start": "1315679",
    "end": "1318000"
  },
  {
    "text": "we define a few timeouts we have fast at",
    "start": "1318000",
    "end": "1320320"
  },
  {
    "text": "two seconds and slow at ten seconds",
    "start": "1320320",
    "end": "1322480"
  },
  {
    "text": "we have a general retry which is a",
    "start": "1322480",
    "end": "1324960"
  },
  {
    "text": "constant policy with a duration of five",
    "start": "1324960",
    "end": "1326559"
  },
  {
    "text": "seconds between requests and a maximum",
    "start": "1326559",
    "end": "1328080"
  },
  {
    "text": "of ten retries",
    "start": "1328080",
    "end": "1329600"
  },
  {
    "text": "we have",
    "start": "1329600",
    "end": "1330559"
  },
  {
    "text": "an app b retry which is exponential and",
    "start": "1330559",
    "end": "1332720"
  },
  {
    "text": "has a max interval of 20 seconds but you",
    "start": "1332720",
    "end": "1334400"
  },
  {
    "text": "notice it doesn't actually have anything",
    "start": "1334400",
    "end": "1336400"
  },
  {
    "text": "else set including maximum retries when",
    "start": "1336400",
    "end": "1338480"
  },
  {
    "text": "you don't set the maximum retries we're",
    "start": "1338480",
    "end": "1340240"
  },
  {
    "text": "actually going to be trying to do some",
    "start": "1340240",
    "end": "1341679"
  },
  {
    "text": "more",
    "start": "1341679",
    "end": "1343200"
  },
  {
    "text": "we're going to try and do essentially",
    "start": "1343200",
    "end": "1344640"
  },
  {
    "text": "infinite retry so maybe at b",
    "start": "1344640",
    "end": "1346880"
  },
  {
    "text": "we don't care how long it takes we just",
    "start": "1346880",
    "end": "1348480"
  },
  {
    "text": "want that thing to you know uh",
    "start": "1348480",
    "end": "1351039"
  },
  {
    "text": "to succeed eventually",
    "start": "1351039",
    "end": "1353280"
  },
  {
    "text": "um we also define a circuit breaker app",
    "start": "1353280",
    "end": "1355120"
  },
  {
    "text": "acb or a's circuit breaker",
    "start": "1355120",
    "end": "1358320"
  },
  {
    "text": "then we have just our two targets down",
    "start": "1358320",
    "end": "1359760"
  },
  {
    "text": "here app a and at b you can see that app",
    "start": "1359760",
    "end": "1362080"
  },
  {
    "text": "a references the general retry which is",
    "start": "1362080",
    "end": "1364000"
  },
  {
    "text": "this retry policy right here",
    "start": "1364000",
    "end": "1366080"
  },
  {
    "text": "um and then it references the timeout",
    "start": "1366080",
    "end": "1368000"
  },
  {
    "text": "fast so request here would come out",
    "start": "1368000",
    "end": "1370000"
  },
  {
    "text": "after two seconds going into app a and",
    "start": "1370000",
    "end": "1372159"
  },
  {
    "text": "then it also uses app a's circuit",
    "start": "1372159",
    "end": "1373679"
  },
  {
    "text": "breaker",
    "start": "1373679",
    "end": "1374960"
  },
  {
    "text": "app b however uses app b's retry so it's",
    "start": "1374960",
    "end": "1377440"
  },
  {
    "text": "going to retry forever calling into app",
    "start": "1377440",
    "end": "1379520"
  },
  {
    "text": "b is going to retry forever",
    "start": "1379520",
    "end": "1381440"
  },
  {
    "text": "and then we have also the timeline slow",
    "start": "1381440",
    "end": "1383039"
  },
  {
    "text": "so a 10 second timeout because you know",
    "start": "1383039",
    "end": "1384960"
  },
  {
    "text": "maybe we know that the application has",
    "start": "1384960",
    "end": "1386480"
  },
  {
    "text": "longer uh running",
    "start": "1386480",
    "end": "1389600"
  },
  {
    "text": "systems or functions or whatever but we",
    "start": "1389600",
    "end": "1391840"
  },
  {
    "text": "know it's going to take a bit longer and",
    "start": "1391840",
    "end": "1393200"
  },
  {
    "text": "we want to retry longer so these two",
    "start": "1393200",
    "end": "1395360"
  },
  {
    "text": "apps have their own policies defined but",
    "start": "1395360",
    "end": "1397840"
  },
  {
    "text": "it's all in the same thing it's all very",
    "start": "1397840",
    "end": "1399280"
  },
  {
    "text": "short and succinct right here",
    "start": "1399280",
    "end": "1402480"
  },
  {
    "text": "so now i can show everyone a quick demo",
    "start": "1402480",
    "end": "1405360"
  },
  {
    "text": "of uh how",
    "start": "1405360",
    "end": "1407280"
  },
  {
    "text": "circuit breakers work",
    "start": "1407280",
    "end": "1410159"
  },
  {
    "text": "i need to do that",
    "start": "1410320",
    "end": "1413600"
  },
  {
    "text": "all right",
    "start": "1413600",
    "end": "1414720"
  },
  {
    "text": "so what i have here uh is i have two",
    "start": "1414720",
    "end": "1417360"
  },
  {
    "text": "dotnet apps uh one of which i have",
    "start": "1417360",
    "end": "1420000"
  },
  {
    "text": "called a generator one of which i have",
    "start": "1420000",
    "end": "1421919"
  },
  {
    "text": "called an analyzer now the generator um",
    "start": "1421919",
    "end": "1425039"
  },
  {
    "text": "basically just uh puts data every 10",
    "start": "1425039",
    "end": "1428080"
  },
  {
    "text": "seconds into my cosmos into a cosmos db",
    "start": "1428080",
    "end": "1430880"
  },
  {
    "text": "uh component or statement component that",
    "start": "1430880",
    "end": "1432480"
  },
  {
    "text": "i have set up",
    "start": "1432480",
    "end": "1434000"
  },
  {
    "text": "um and then sends a message via azure",
    "start": "1434000",
    "end": "1436880"
  },
  {
    "text": "service bus over to an analyzer or to",
    "start": "1436880",
    "end": "1438720"
  },
  {
    "text": "this analyzer app here um basically",
    "start": "1438720",
    "end": "1440799"
  },
  {
    "text": "saying to do your analyzing work",
    "start": "1440799",
    "end": "1443200"
  },
  {
    "text": "now in this case the analog's not really",
    "start": "1443200",
    "end": "1444640"
  },
  {
    "text": "doing anything it's actually here to",
    "start": "1444640",
    "end": "1446480"
  },
  {
    "text": "sing or to show a bit of a bug",
    "start": "1446480",
    "end": "1449600"
  },
  {
    "text": "but what we're going for here is",
    "start": "1449600",
    "end": "1453520"
  },
  {
    "text": "the",
    "start": "1453520",
    "end": "1454640"
  },
  {
    "text": "analyzer right now doesn't have any",
    "start": "1454640",
    "end": "1456480"
  },
  {
    "text": "resiliency set up on it and uh i've just",
    "start": "1456480",
    "end": "1459679"
  },
  {
    "text": "you know i've made some new changes to",
    "start": "1459679",
    "end": "1461120"
  },
  {
    "text": "it and i'm pushing it out for the first",
    "start": "1461120",
    "end": "1462960"
  },
  {
    "text": "time",
    "start": "1462960",
    "end": "1463760"
  },
  {
    "text": "and now we're going to see how it runs",
    "start": "1463760",
    "end": "1465760"
  },
  {
    "text": "um so we can start my generator who's",
    "start": "1465760",
    "end": "1468159"
  },
  {
    "text": "going to start generating some data for",
    "start": "1468159",
    "end": "1469440"
  },
  {
    "text": "us",
    "start": "1469440",
    "end": "1470480"
  },
  {
    "text": "we should see in just a little bit so it",
    "start": "1470480",
    "end": "1472640"
  },
  {
    "text": "started generating data you can see that",
    "start": "1472640",
    "end": "1474159"
  },
  {
    "text": "we're getting hitting our items",
    "start": "1474159",
    "end": "1476080"
  },
  {
    "text": "uh we have found 11 items to process uh",
    "start": "1476080",
    "end": "1478720"
  },
  {
    "text": "that's great um we have some data in",
    "start": "1478720",
    "end": "1480480"
  },
  {
    "text": "there already um",
    "start": "1480480",
    "end": "1482400"
  },
  {
    "text": "oh but look now we notice that we have",
    "start": "1482400",
    "end": "1484080"
  },
  {
    "text": "13 instead of 12 even though we've",
    "start": "1484080",
    "end": "1485600"
  },
  {
    "text": "already added one so maybe something",
    "start": "1485600",
    "end": "1486960"
  },
  {
    "text": "weird is happening with this application",
    "start": "1486960",
    "end": "1489600"
  },
  {
    "text": "but we can revisit it in just a moment",
    "start": "1489600",
    "end": "1491520"
  },
  {
    "text": "because first i want to show off my",
    "start": "1491520",
    "end": "1492799"
  },
  {
    "text": "resiliency policy so it's going to look",
    "start": "1492799",
    "end": "1494640"
  },
  {
    "text": "very similar to the one that we have",
    "start": "1494640",
    "end": "1496880"
  },
  {
    "text": "in the in the slides",
    "start": "1496880",
    "end": "1499600"
  },
  {
    "text": "but what you can see here is i have a",
    "start": "1499600",
    "end": "1501360"
  },
  {
    "text": "timeout which is a fast timeout a a",
    "start": "1501360",
    "end": "1503840"
  },
  {
    "text": "retry and then i have some circuit",
    "start": "1503840",
    "end": "1505520"
  },
  {
    "text": "breakers the one we're interested in",
    "start": "1505520",
    "end": "1506799"
  },
  {
    "text": "here is actually the state circuit",
    "start": "1506799",
    "end": "1508480"
  },
  {
    "text": "breaker",
    "start": "1508480",
    "end": "1509919"
  },
  {
    "text": "you can see that down here my cosmos db",
    "start": "1509919",
    "end": "1512559"
  },
  {
    "text": "state has an outbound uh policy where",
    "start": "1512559",
    "end": "1515279"
  },
  {
    "text": "i'm just using the circuit breaker state",
    "start": "1515279",
    "end": "1516720"
  },
  {
    "text": "circuit breaker",
    "start": "1516720",
    "end": "1518080"
  },
  {
    "text": "it has a trip of consecutive failures",
    "start": "1518080",
    "end": "1520320"
  },
  {
    "text": "greater than one it has a timeout of 60",
    "start": "1520320",
    "end": "1522159"
  },
  {
    "text": "seconds and has an interval of 30",
    "start": "1522159",
    "end": "1523600"
  },
  {
    "text": "seconds and a mass request of one second",
    "start": "1523600",
    "end": "1526159"
  },
  {
    "text": "so what this means is that after more",
    "start": "1526159",
    "end": "1528640"
  },
  {
    "text": "than one consecutive failure uh my app",
    "start": "1528640",
    "end": "1531279"
  },
  {
    "text": "is now going to start triggering its",
    "start": "1531279",
    "end": "1532400"
  },
  {
    "text": "circuit breaker",
    "start": "1532400",
    "end": "1534720"
  },
  {
    "text": "which hopefully will find that my app",
    "start": "1534720",
    "end": "1536960"
  },
  {
    "text": "you'll see now we're getting up to 23",
    "start": "1536960",
    "end": "1538640"
  },
  {
    "text": "items in here",
    "start": "1538640",
    "end": "1540480"
  },
  {
    "text": "so shortly my application is going to",
    "start": "1540480",
    "end": "1542640"
  },
  {
    "text": "hit this point where it's um you know",
    "start": "1542640",
    "end": "1545039"
  },
  {
    "text": "because of you know maybe we have a",
    "start": "1545039",
    "end": "1546799"
  },
  {
    "text": "filter that's incorrect on our on our",
    "start": "1546799",
    "end": "1548720"
  },
  {
    "text": "query scan um that we're actually",
    "start": "1548720",
    "end": "1550960"
  },
  {
    "text": "getting too much data and we're going to",
    "start": "1550960",
    "end": "1552400"
  },
  {
    "text": "start you know putting too much pressure",
    "start": "1552400",
    "end": "1554159"
  },
  {
    "text": "on to",
    "start": "1554159",
    "end": "1555200"
  },
  {
    "text": "uh columns db instance",
    "start": "1555200",
    "end": "1558240"
  },
  {
    "text": "so without the circuit breaker what",
    "start": "1558240",
    "end": "1559600"
  },
  {
    "text": "we're going to see is that we're just",
    "start": "1559600",
    "end": "1560720"
  },
  {
    "text": "going to start failing a lot in there",
    "start": "1560720",
    "end": "1563039"
  },
  {
    "text": "right on cue",
    "start": "1563039",
    "end": "1564400"
  },
  {
    "text": "it started failing it gives us",
    "start": "1564400",
    "end": "1566559"
  },
  {
    "text": "this big",
    "start": "1566559",
    "end": "1568159"
  },
  {
    "text": "message",
    "start": "1568159",
    "end": "1569120"
  },
  {
    "text": "which if we scan in here for a little",
    "start": "1569120",
    "end": "1571120"
  },
  {
    "text": "bit um you can see that we have um",
    "start": "1571120",
    "end": "1574240"
  },
  {
    "text": "too many requests the request rate is",
    "start": "1574240",
    "end": "1576320"
  },
  {
    "text": "too large please try again after some",
    "start": "1576320",
    "end": "1578080"
  },
  {
    "text": "time",
    "start": "1578080",
    "end": "1579440"
  },
  {
    "text": "so what that means is that yes we have",
    "start": "1579440",
    "end": "1581840"
  },
  {
    "text": "accidentally overloaded our cosmos db",
    "start": "1581840",
    "end": "1585360"
  },
  {
    "text": "and you see look and there it is again",
    "start": "1585360",
    "end": "1587360"
  },
  {
    "text": "so",
    "start": "1587360",
    "end": "1588320"
  },
  {
    "text": "right now",
    "start": "1588320",
    "end": "1589440"
  },
  {
    "text": "we're just",
    "start": "1589440",
    "end": "1590559"
  },
  {
    "text": "hitting columns db we're getting 429s",
    "start": "1590559",
    "end": "1592799"
  },
  {
    "text": "which is caused to use error code for",
    "start": "1592799",
    "end": "1594000"
  },
  {
    "text": "going too fast and it's just going to",
    "start": "1594000",
    "end": "1596000"
  },
  {
    "text": "keep happening over and over again",
    "start": "1596000",
    "end": "1597600"
  },
  {
    "text": "because uh you know our app is broken",
    "start": "1597600",
    "end": "1600480"
  },
  {
    "text": "essentially we we pushed out a bad",
    "start": "1600480",
    "end": "1602159"
  },
  {
    "text": "deployment we're now causing too much",
    "start": "1602159",
    "end": "1603919"
  },
  {
    "text": "traffic and what this means in",
    "start": "1603919",
    "end": "1606240"
  },
  {
    "text": "in our our day-to-day life is that uh",
    "start": "1606240",
    "end": "1609200"
  },
  {
    "text": "you know we're gonna start running up uh",
    "start": "1609200",
    "end": "1610960"
  },
  {
    "text": "unintentional cost on cosmos db if this",
    "start": "1610960",
    "end": "1613760"
  },
  {
    "text": "gets big enough our thing that's",
    "start": "1613760",
    "end": "1615200"
  },
  {
    "text": "generating data which is the bigger or",
    "start": "1615200",
    "end": "1617279"
  },
  {
    "text": "the more important of our apps is also",
    "start": "1617279",
    "end": "1618720"
  },
  {
    "text": "going to start seeing errors for how uh",
    "start": "1618720",
    "end": "1620559"
  },
  {
    "text": "its data is generated",
    "start": "1620559",
    "end": "1622240"
  },
  {
    "text": "so let's kill this really quick and then",
    "start": "1622240",
    "end": "1624720"
  },
  {
    "text": "what we're going to do is we're going to",
    "start": "1624720",
    "end": "1625760"
  },
  {
    "text": "go back and um",
    "start": "1625760",
    "end": "1627919"
  },
  {
    "text": "we're going to restart my application",
    "start": "1627919",
    "end": "1629520"
  },
  {
    "text": "but this time we have a config enabled",
    "start": "1629520",
    "end": "1632480"
  },
  {
    "text": "that uh enables the resiliency feature",
    "start": "1632480",
    "end": "1635919"
  },
  {
    "text": "so now we'll restart it we'll see",
    "start": "1635919",
    "end": "1638799"
  },
  {
    "text": "that it should",
    "start": "1638799",
    "end": "1641360"
  },
  {
    "text": "fail immediately which is good but then",
    "start": "1641360",
    "end": "1643360"
  },
  {
    "text": "you notice look we failed our request",
    "start": "1643360",
    "end": "1645679"
  },
  {
    "text": "but now we have this our",
    "start": "1645679",
    "end": "1647760"
  },
  {
    "text": "uh query states uh we failed to query",
    "start": "1647760",
    "end": "1650159"
  },
  {
    "text": "the state store because the circuit",
    "start": "1650159",
    "end": "1651520"
  },
  {
    "text": "breaker is open and now you'll see that",
    "start": "1651520",
    "end": "1654159"
  },
  {
    "text": "we keep failing our circuit breaker",
    "start": "1654159",
    "end": "1656559"
  },
  {
    "text": "um so what this means is that we're no",
    "start": "1656559",
    "end": "1658320"
  },
  {
    "text": "longer putting pressure on cosmos db it",
    "start": "1658320",
    "end": "1660799"
  },
  {
    "text": "means that our first application",
    "start": "1660799",
    "end": "1663440"
  },
  {
    "text": "doesn't need to worry about there being",
    "start": "1663440",
    "end": "1665360"
  },
  {
    "text": "too much traffic for it to get its job",
    "start": "1665360",
    "end": "1666880"
  },
  {
    "text": "done",
    "start": "1666880",
    "end": "1667679"
  },
  {
    "text": "and then because the circuit breaker is",
    "start": "1667679",
    "end": "1669279"
  },
  {
    "text": "applied on the granule level of the",
    "start": "1669279",
    "end": "1671520"
  },
  {
    "text": "cosmos db you'll notice that it actually",
    "start": "1671520",
    "end": "1673520"
  },
  {
    "text": "means that we're still processing",
    "start": "1673520",
    "end": "1674799"
  },
  {
    "text": "messages on this application we're still",
    "start": "1674799",
    "end": "1676880"
  },
  {
    "text": "getting our pub sub um this app is still",
    "start": "1676880",
    "end": "1679279"
  },
  {
    "text": "open for service invocation if you had",
    "start": "1679279",
    "end": "1681200"
  },
  {
    "text": "to do other things to it",
    "start": "1681200",
    "end": "1683200"
  },
  {
    "text": "you know so uh",
    "start": "1683200",
    "end": "1685120"
  },
  {
    "text": "it's",
    "start": "1685120",
    "end": "1686159"
  },
  {
    "text": "is isolating just the bad portion of the",
    "start": "1686159",
    "end": "1688480"
  },
  {
    "text": "code and now with the circuit breaker",
    "start": "1688480",
    "end": "1690640"
  },
  {
    "text": "we're giving ourselves time to",
    "start": "1690640",
    "end": "1692559"
  },
  {
    "text": "investigate time to find the bug time to",
    "start": "1692559",
    "end": "1694559"
  },
  {
    "text": "roll back or fix it um",
    "start": "1694559",
    "end": "1697679"
  },
  {
    "text": "without having to risk the uh the",
    "start": "1697679",
    "end": "1700559"
  },
  {
    "text": "failure state you know we don't have to",
    "start": "1700559",
    "end": "1702559"
  },
  {
    "text": "uh have any of these you know",
    "start": "1702559",
    "end": "1704960"
  },
  {
    "text": "over over charges or or",
    "start": "1704960",
    "end": "1707600"
  },
  {
    "text": "risk a bigger outage and you can see",
    "start": "1707600",
    "end": "1709600"
  },
  {
    "text": "here that we failed again uh the reason",
    "start": "1709600",
    "end": "1711440"
  },
  {
    "text": "for that is of course our circuit",
    "start": "1711440",
    "end": "1713520"
  },
  {
    "text": "breaker went from uh open to half open",
    "start": "1713520",
    "end": "1716720"
  },
  {
    "text": "so now you can see that we failed again",
    "start": "1716720",
    "end": "1718880"
  },
  {
    "text": "so now we're back to being closed and",
    "start": "1718880",
    "end": "1720480"
  },
  {
    "text": "that's uh how it's going to go now going",
    "start": "1720480",
    "end": "1722720"
  },
  {
    "text": "forward and of course you could tune",
    "start": "1722720",
    "end": "1724559"
  },
  {
    "text": "this to have a longer outage period if",
    "start": "1724559",
    "end": "1726320"
  },
  {
    "text": "you wanted to or shorter one you could",
    "start": "1726320",
    "end": "1728159"
  },
  {
    "text": "take more requests but at the end of the",
    "start": "1728159",
    "end": "1730399"
  },
  {
    "text": "day what's happening is you know our",
    "start": "1730399",
    "end": "1732159"
  },
  {
    "text": "circuit breaker is stopping us from",
    "start": "1732159",
    "end": "1733600"
  },
  {
    "text": "overloading the database",
    "start": "1733600",
    "end": "1735360"
  },
  {
    "text": "and stopping us from causing further",
    "start": "1735360",
    "end": "1736799"
  },
  {
    "text": "impact with our bad deployment",
    "start": "1736799",
    "end": "1738640"
  },
  {
    "text": "so",
    "start": "1738640",
    "end": "1739919"
  },
  {
    "text": "that is uh the demo",
    "start": "1739919",
    "end": "1742880"
  },
  {
    "text": "any questions before i uh stop sharing",
    "start": "1742880",
    "end": "1744640"
  },
  {
    "text": "your own",
    "start": "1744640",
    "end": "1746240"
  },
  {
    "text": "no i just want to say that this is",
    "start": "1746240",
    "end": "1747600"
  },
  {
    "text": "really great because it removed a bunch",
    "start": "1747600",
    "end": "1749520"
  },
  {
    "text": "of",
    "start": "1749520",
    "end": "1750320"
  },
  {
    "text": "code boilerplate code the developers",
    "start": "1750320",
    "end": "1752000"
  },
  {
    "text": "would essentially have to write inside",
    "start": "1752000",
    "end": "1753760"
  },
  {
    "text": "of their apps like to hard code these",
    "start": "1753760",
    "end": "1755919"
  },
  {
    "text": "circuit breakers which are very",
    "start": "1755919",
    "end": "1757679"
  },
  {
    "text": "difficult to get right and revise and",
    "start": "1757679",
    "end": "1760159"
  },
  {
    "text": "time out so",
    "start": "1760159",
    "end": "1761520"
  },
  {
    "text": "and this is also great because it can be",
    "start": "1761520",
    "end": "1763039"
  },
  {
    "text": "used across any",
    "start": "1763039",
    "end": "1764720"
  },
  {
    "text": "state store the dapper supports in any",
    "start": "1764720",
    "end": "1766399"
  },
  {
    "text": "pub sub or you know binding system",
    "start": "1766399",
    "end": "1768320"
  },
  {
    "text": "exactly and both of these applications",
    "start": "1768320",
    "end": "1770240"
  },
  {
    "text": "can also even use the same policy so you",
    "start": "1770240",
    "end": "1772000"
  },
  {
    "text": "can get the exact same behavior across",
    "start": "1772000",
    "end": "1774080"
  },
  {
    "text": "multiple different applications without",
    "start": "1774080",
    "end": "1775520"
  },
  {
    "text": "having to change any or either the",
    "start": "1775520",
    "end": "1777120"
  },
  {
    "text": "application's code because it's all done",
    "start": "1777120",
    "end": "1778399"
  },
  {
    "text": "with that configuration",
    "start": "1778399",
    "end": "1780240"
  },
  {
    "text": "yeah this is really great uh thanks",
    "start": "1780240",
    "end": "1782399"
  },
  {
    "text": "everyone for tuning in and we'd love to",
    "start": "1782399",
    "end": "1784000"
  },
  {
    "text": "take your questions at the q a section",
    "start": "1784000",
    "end": "1786880"
  },
  {
    "text": "thanks everyone",
    "start": "1786880",
    "end": "1788559"
  },
  {
    "text": "bye thank you bye",
    "start": "1788559",
    "end": "1792679"
  }
]