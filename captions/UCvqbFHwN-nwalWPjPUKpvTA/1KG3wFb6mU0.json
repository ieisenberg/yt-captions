[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hello everybody uh thank you for",
    "start": "640",
    "end": "2240"
  },
  {
    "text": "attending service meshcon north america",
    "start": "2240",
    "end": "4240"
  },
  {
    "text": "and thank you for attending this session",
    "start": "4240",
    "end": "5600"
  },
  {
    "text": "where we will be talking about metrics",
    "start": "5600",
    "end": "7520"
  },
  {
    "text": "merging in service mesh uh my name is",
    "start": "7520",
    "end": "9920"
  },
  {
    "text": "lawrence godban and i'm a field engineer",
    "start": "9920",
    "end": "11440"
  },
  {
    "text": "at solo.io where we have several",
    "start": "11440",
    "end": "13360"
  },
  {
    "text": "products related to application",
    "start": "13360",
    "end": "14639"
  },
  {
    "text": "networking in a cloud-native environment",
    "start": "14639",
    "end": "17039"
  },
  {
    "text": "um so let's jump into it so monitoring",
    "start": "17039",
    "end": "19840"
  },
  {
    "start": "18000",
    "end": "18000"
  },
  {
    "text": "and metrics in general are very",
    "start": "19840",
    "end": "21600"
  },
  {
    "text": "important especially when you're talking",
    "start": "21600",
    "end": "22960"
  },
  {
    "text": "about distributed systems",
    "start": "22960",
    "end": "24800"
  },
  {
    "text": "because you'll have applications running",
    "start": "24800",
    "end": "26160"
  },
  {
    "text": "in several different places spinning up",
    "start": "26160",
    "end": "27680"
  },
  {
    "text": "and down et cetera and you need a way of",
    "start": "27680",
    "end": "29599"
  },
  {
    "text": "understanding the behavior of those",
    "start": "29599",
    "end": "31039"
  },
  {
    "text": "applications and those deployments so a",
    "start": "31039",
    "end": "33760"
  },
  {
    "text": "common tool to do this is prometheus you",
    "start": "33760",
    "end": "35920"
  },
  {
    "text": "know prometheus is a cncf graduated",
    "start": "35920",
    "end": "37760"
  },
  {
    "text": "project it defines a very commonly used",
    "start": "37760",
    "end": "40480"
  },
  {
    "text": "metrics format and also provides a way",
    "start": "40480",
    "end": "42640"
  },
  {
    "text": "of scraping those metrics and giving you",
    "start": "42640",
    "end": "44480"
  },
  {
    "text": "a way of querying that data so that you",
    "start": "44480",
    "end": "45920"
  },
  {
    "text": "can do things like monitor and",
    "start": "45920",
    "end": "47120"
  },
  {
    "text": "understand the behavior of your systems",
    "start": "47120",
    "end": "50480"
  },
  {
    "text": "uh so looking at this diagram here we",
    "start": "50480",
    "end": "53440"
  },
  {
    "text": "have a pretty you know common or typical",
    "start": "53440",
    "end": "55280"
  },
  {
    "text": "deployment where you have you know a few",
    "start": "55280",
    "end": "56960"
  },
  {
    "text": "name spaces running the kubernetes",
    "start": "56960",
    "end": "58399"
  },
  {
    "text": "cluster you have different workloads",
    "start": "58399",
    "end": "59840"
  },
  {
    "text": "running in those name spaces and you",
    "start": "59840",
    "end": "61680"
  },
  {
    "text": "need a way of monitoring them so we'll",
    "start": "61680",
    "end": "63359"
  },
  {
    "text": "do we will be using metrics to do that",
    "start": "63359",
    "end": "65040"
  },
  {
    "text": "today um so we have prometheus deployed",
    "start": "65040",
    "end": "67439"
  },
  {
    "text": "in that same cluster in its own",
    "start": "67439",
    "end": "69119"
  },
  {
    "text": "namespace and so we want to have",
    "start": "69119",
    "end": "70560"
  },
  {
    "text": "prometheus scrape these applications so",
    "start": "70560",
    "end": "73040"
  },
  {
    "text": "that we can get their their metrics from",
    "start": "73040",
    "end": "74880"
  },
  {
    "text": "them so that we can monitor an alert and",
    "start": "74880",
    "end": "77600"
  },
  {
    "text": "so on based off of the runtime behavior",
    "start": "77600",
    "end": "79600"
  },
  {
    "text": "of these applications",
    "start": "79600",
    "end": "81119"
  },
  {
    "text": "so what that means is we'll have you",
    "start": "81119",
    "end": "82720"
  },
  {
    "text": "know we need to configure prometheus to",
    "start": "82720",
    "end": "84880"
  },
  {
    "text": "have a way of knowing where to actually",
    "start": "84880",
    "end": "88000"
  },
  {
    "text": "go first of all how to find these",
    "start": "88000",
    "end": "90320"
  },
  {
    "text": "endpoints that we need are these these",
    "start": "90320",
    "end": "91920"
  },
  {
    "text": "workloads that we need to scrape and",
    "start": "91920",
    "end": "93600"
  },
  {
    "text": "then also how to actually scrape so how",
    "start": "93600",
    "end": "96000"
  },
  {
    "text": "do i find the metrics endpoint that i",
    "start": "96000",
    "end": "98159"
  },
  {
    "text": "need to send a scrape request to right",
    "start": "98159",
    "end": "100479"
  },
  {
    "text": "so that's done using spray scraped",
    "start": "100479",
    "end": "102240"
  },
  {
    "text": "configuration and service discovery and",
    "start": "102240",
    "end": "103680"
  },
  {
    "text": "prometheus so straight configs will tell",
    "start": "103680",
    "end": "105759"
  },
  {
    "text": "prometheus how to actually do the the",
    "start": "105759",
    "end": "107600"
  },
  {
    "text": "scraping you know gather those metrics",
    "start": "107600",
    "end": "109360"
  },
  {
    "text": "and then service discovery tells",
    "start": "109360",
    "end": "110960"
  },
  {
    "text": "prometheus about the plate the targets",
    "start": "110960",
    "end": "113119"
  },
  {
    "text": "that it does need to scrape",
    "start": "113119",
    "end": "115520"
  },
  {
    "text": "so",
    "start": "115520",
    "end": "117200"
  },
  {
    "text": "the way that a very common way to do",
    "start": "117200",
    "end": "119200"
  },
  {
    "text": "this um you know this is not like this a",
    "start": "119200",
    "end": "121520"
  },
  {
    "text": "standard but very close to it a very",
    "start": "121520",
    "end": "123600"
  },
  {
    "text": "commonly used way of doing this is to",
    "start": "123600",
    "end": "125759"
  },
  {
    "text": "utilize kubernetes service discovery",
    "start": "125759",
    "end": "128399"
  },
  {
    "text": "which does which which provides",
    "start": "128399",
    "end": "130080"
  },
  {
    "text": "prometheus with things like pods and",
    "start": "130080",
    "end": "131920"
  },
  {
    "text": "services and so on so that prometheus",
    "start": "131920",
    "end": "133840"
  },
  {
    "text": "understands uh you know kubernetes",
    "start": "133840",
    "end": "135760"
  },
  {
    "text": "primitives right but then there's an",
    "start": "135760",
    "end": "137920"
  },
  {
    "text": "additional part which is this kind of",
    "start": "137920",
    "end": "139920"
  },
  {
    "text": "the non-standard",
    "start": "139920",
    "end": "141360"
  },
  {
    "text": "part where there are prometheus",
    "start": "141360",
    "end": "144000"
  },
  {
    "text": "annotations prometheus.io annotations",
    "start": "144000",
    "end": "146560"
  },
  {
    "text": "that say you annotate a pod these",
    "start": "146560",
    "end": "148800"
  },
  {
    "text": "annotations will give me this additional",
    "start": "148800",
    "end": "150480"
  },
  {
    "text": "information so looking at these",
    "start": "150480",
    "end": "152560"
  },
  {
    "text": "annotations here in this example we have",
    "start": "152560",
    "end": "154560"
  },
  {
    "text": "a path a prometheus path annotation set",
    "start": "154560",
    "end": "157200"
  },
  {
    "text": "to slash metrics we have a port set to",
    "start": "157200",
    "end": "159280"
  },
  {
    "text": "8080 and scrape to true so what we're",
    "start": "159280",
    "end": "161519"
  },
  {
    "text": "doing is we're telling prometheus that",
    "start": "161519",
    "end": "163040"
  },
  {
    "text": "hey i want you to scrape this pod um the",
    "start": "163040",
    "end": "165840"
  },
  {
    "text": "the port that you need to talk to is",
    "start": "165840",
    "end": "167760"
  },
  {
    "text": "8080 and the path that you can send the",
    "start": "167760",
    "end": "170319"
  },
  {
    "text": "request to in order to get those metrics",
    "start": "170319",
    "end": "172319"
  },
  {
    "text": "is slash metrics right and so then",
    "start": "172319",
    "end": "174160"
  },
  {
    "text": "combined with a given pod ip uh you know",
    "start": "174160",
    "end": "176640"
  },
  {
    "text": "a request a script request might look",
    "start": "176640",
    "end": "178400"
  },
  {
    "text": "something like this where does it get to",
    "start": "178400",
    "end": "179920"
  },
  {
    "text": "the ip and the correct port and slash",
    "start": "179920",
    "end": "182480"
  },
  {
    "text": "metrics right and so then the end result",
    "start": "182480",
    "end": "184239"
  },
  {
    "text": "is that this request will return result",
    "start": "184239",
    "end": "186800"
  },
  {
    "text": "in a response that has the metrics for",
    "start": "186800",
    "end": "188720"
  },
  {
    "text": "this given workflow",
    "start": "188720",
    "end": "191360"
  },
  {
    "start": "191000",
    "end": "191000"
  },
  {
    "text": "so when we're talking about a service",
    "start": "191360",
    "end": "192720"
  },
  {
    "text": "mesh just quickly looking at the",
    "start": "192720",
    "end": "193840"
  },
  {
    "text": "architecture right you have workloads",
    "start": "193840",
    "end": "196080"
  },
  {
    "text": "and traditionally you know that means",
    "start": "196080",
    "end": "197760"
  },
  {
    "text": "you have a data plane so your data plane",
    "start": "197760",
    "end": "200319"
  },
  {
    "text": "are the proxies that are usually",
    "start": "200319",
    "end": "201599"
  },
  {
    "text": "deployed alongside as like a side car to",
    "start": "201599",
    "end": "203920"
  },
  {
    "text": "these workloads and you have a control",
    "start": "203920",
    "end": "205680"
  },
  {
    "text": "plane that actually configures those",
    "start": "205680",
    "end": "207040"
  },
  {
    "text": "proxies based on the state of the",
    "start": "207040",
    "end": "208959"
  },
  {
    "text": "environment you know user config or so",
    "start": "208959",
    "end": "212080"
  },
  {
    "text": "on right and so that that's all great",
    "start": "212080",
    "end": "215040"
  },
  {
    "text": "you know that makes sense from a service",
    "start": "215040",
    "end": "216400"
  },
  {
    "text": "perspective from a monitoring and",
    "start": "216400",
    "end": "218000"
  },
  {
    "text": "metrics perspective what that means is",
    "start": "218000",
    "end": "220080"
  },
  {
    "text": "that now prometheus has to know about",
    "start": "220080",
    "end": "222239"
  },
  {
    "text": "more components to scrape right because",
    "start": "222239",
    "end": "224159"
  },
  {
    "text": "now we have to scrape from the",
    "start": "224159",
    "end": "225120"
  },
  {
    "text": "application as well as the proxies and",
    "start": "225120",
    "end": "227440"
  },
  {
    "text": "the control plane control plane's not",
    "start": "227440",
    "end": "229040"
  },
  {
    "text": "too difficult usually it's just a",
    "start": "229040",
    "end": "230480"
  },
  {
    "text": "standard deployment but it gets a little",
    "start": "230480",
    "end": "232080"
  },
  {
    "text": "tricky when you're talking about having",
    "start": "232080",
    "end": "233599"
  },
  {
    "text": "a two components in a single pod for",
    "start": "233599",
    "end": "235920"
  },
  {
    "text": "example the the proxy and the workload",
    "start": "235920",
    "end": "239200"
  },
  {
    "text": "so looking at istio in particular it",
    "start": "239200",
    "end": "241599"
  },
  {
    "start": "240000",
    "end": "240000"
  },
  {
    "text": "gets even more complex because now we",
    "start": "241599",
    "end": "243439"
  },
  {
    "text": "have an additional component called the",
    "start": "243439",
    "end": "244799"
  },
  {
    "text": "agent or the istio agent so this this",
    "start": "244799",
    "end": "247360"
  },
  {
    "text": "component does you know several",
    "start": "247360",
    "end": "248879"
  },
  {
    "text": "auxiliary tasks related to the workload",
    "start": "248879",
    "end": "252400"
  },
  {
    "text": "but it it is a component and you do need",
    "start": "252400",
    "end": "254560"
  },
  {
    "text": "to scrape its metrics usually and that",
    "start": "254560",
    "end": "257440"
  },
  {
    "text": "it makes it challenging right because",
    "start": "257440",
    "end": "258560"
  },
  {
    "text": "now you have three different places in a",
    "start": "258560",
    "end": "260079"
  },
  {
    "text": "given pod that you need to scrape",
    "start": "260079",
    "end": "262240"
  },
  {
    "text": "so",
    "start": "262240",
    "end": "263919"
  },
  {
    "text": "if we look at the previous example we're",
    "start": "263919",
    "end": "265440"
  },
  {
    "text": "talking about the annotations let's see",
    "start": "265440",
    "end": "266880"
  },
  {
    "text": "what that would look like in istio so",
    "start": "266880",
    "end": "268880"
  },
  {
    "text": "you know our pod has the correct",
    "start": "268880",
    "end": "270000"
  },
  {
    "text": "annotations so prometheus is going to",
    "start": "270000",
    "end": "271919"
  },
  {
    "text": "try to scrape our application metrics",
    "start": "271919",
    "end": "273520"
  },
  {
    "text": "which are at port 8080 slash metrics so",
    "start": "273520",
    "end": "276320"
  },
  {
    "text": "then the the request will go through the",
    "start": "276320",
    "end": "277840"
  },
  {
    "text": "proxy like in a you know typical service",
    "start": "277840",
    "end": "279919"
  },
  {
    "text": "mesh environment",
    "start": "279919",
    "end": "281360"
  },
  {
    "text": "and get routed to the the application",
    "start": "281360",
    "end": "283520"
  },
  {
    "text": "workload which will then return the",
    "start": "283520",
    "end": "284880"
  },
  {
    "text": "metrics for the application workload but",
    "start": "284880",
    "end": "287280"
  },
  {
    "text": "that is a problem right because then",
    "start": "287280",
    "end": "289040"
  },
  {
    "text": "we're not getting the metrics for the",
    "start": "289040",
    "end": "290400"
  },
  {
    "text": "proxy and we're not getting metrics for",
    "start": "290400",
    "end": "292000"
  },
  {
    "text": "the agent",
    "start": "292000",
    "end": "293520"
  },
  {
    "text": "so to solve this",
    "start": "293520",
    "end": "295280"
  },
  {
    "text": "istio has a concept called metrics",
    "start": "295280",
    "end": "297120"
  },
  {
    "start": "296000",
    "end": "296000"
  },
  {
    "text": "merging which provides a solution to",
    "start": "297120",
    "end": "298960"
  },
  {
    "text": "this by exposing a single endpoint and",
    "start": "298960",
    "end": "301280"
  },
  {
    "text": "so remember that agent is a standalone",
    "start": "301280",
    "end": "303199"
  },
  {
    "text": "component and so it can perform logic it",
    "start": "303199",
    "end": "305360"
  },
  {
    "text": "can perform tasks and in this case the",
    "start": "305360",
    "end": "307919"
  },
  {
    "text": "agent is what's responsible for exposing",
    "start": "307919",
    "end": "310000"
  },
  {
    "text": "an endpoint that prometheus can scrape",
    "start": "310000",
    "end": "312320"
  },
  {
    "text": "and then the agent you know when it",
    "start": "312320",
    "end": "314000"
  },
  {
    "text": "handles that request will then provide a",
    "start": "314000",
    "end": "316479"
  },
  {
    "text": "merged document of all three of the",
    "start": "316479",
    "end": "319759"
  },
  {
    "text": "metrics from the proxy the application",
    "start": "319759",
    "end": "321840"
  },
  {
    "text": "workload and the agent itself",
    "start": "321840",
    "end": "323759"
  },
  {
    "text": "so in order to accomplish this",
    "start": "323759",
    "end": "327120"
  },
  {
    "text": "let's look at how how istio solves that",
    "start": "327120",
    "end": "329360"
  },
  {
    "text": "so when you inject a workload you're in",
    "start": "329360",
    "end": "332560"
  },
  {
    "text": "istio typically that's done using a web",
    "start": "332560",
    "end": "334560"
  },
  {
    "text": "hook a mutating web hook and so in this",
    "start": "334560",
    "end": "337199"
  },
  {
    "text": "example what we'll look at is you know",
    "start": "337199",
    "end": "338960"
  },
  {
    "text": "we're passing in a pod is being created",
    "start": "338960",
    "end": "341199"
  },
  {
    "text": "and admitted to the kubernetes api so",
    "start": "341199",
    "end": "342800"
  },
  {
    "text": "then it will go to them through the web",
    "start": "342800",
    "end": "344240"
  },
  {
    "text": "hook for injection so in that case what",
    "start": "344240",
    "end": "346639"
  },
  {
    "text": "we're going to do is you know",
    "start": "346639",
    "end": "348160"
  },
  {
    "text": "when a pod has the prometheus",
    "start": "348160",
    "end": "349919"
  },
  {
    "text": "annotations those annotations will be",
    "start": "349919",
    "end": "352560"
  },
  {
    "text": "changed or overwritten to have the",
    "start": "352560",
    "end": "354720"
  },
  {
    "text": "correct annotations that point to the",
    "start": "354720",
    "end": "356880"
  },
  {
    "text": "istio agent's endpoint the metrics end",
    "start": "356880",
    "end": "359440"
  },
  {
    "text": "point that is able to provide kind of",
    "start": "359440",
    "end": "361680"
  },
  {
    "text": "this aggregated metric right and so the",
    "start": "361680",
    "end": "363919"
  },
  {
    "text": "the old annotations are essentially",
    "start": "363919",
    "end": "365440"
  },
  {
    "text": "replaced during injection with the",
    "start": "365440",
    "end": "367280"
  },
  {
    "text": "correct annotations that point to this",
    "start": "367280",
    "end": "369039"
  },
  {
    "text": "endpoint",
    "start": "369039",
    "end": "370160"
  },
  {
    "text": "um",
    "start": "370160",
    "end": "371199"
  },
  {
    "text": "but we actually still store the original",
    "start": "371199",
    "end": "374479"
  },
  {
    "text": "the original annotation so that we can",
    "start": "374479",
    "end": "376400"
  },
  {
    "text": "then the agent can then know how to",
    "start": "376400",
    "end": "378080"
  },
  {
    "text": "actually get to the application",
    "start": "378080",
    "end": "379199"
  },
  {
    "text": "workloads metrics right",
    "start": "379199",
    "end": "381039"
  },
  {
    "text": "so then what it looks like is okay we",
    "start": "381039",
    "end": "383680"
  },
  {
    "text": "have a pod that has the correct",
    "start": "383680",
    "end": "385039"
  },
  {
    "text": "annotations to point to the agent's",
    "start": "385039",
    "end": "386960"
  },
  {
    "text": "endpoint at port 15",
    "start": "386960",
    "end": "389039"
  },
  {
    "text": "15020 and the path is slash that's",
    "start": "389039",
    "end": "392000"
  },
  {
    "text": "prometheus",
    "start": "392000",
    "end": "393600"
  },
  {
    "text": "so then prometheus will generate a",
    "start": "393600",
    "end": "395280"
  },
  {
    "text": "script request to the pod's ip to the",
    "start": "395280",
    "end": "398400"
  },
  {
    "text": "the correct port and the correct path so",
    "start": "398400",
    "end": "400720"
  },
  {
    "text": "then the request will make it to the",
    "start": "400720",
    "end": "402400"
  },
  {
    "text": "agent's end point",
    "start": "402400",
    "end": "404160"
  },
  {
    "text": "then it's up to the agent to since we",
    "start": "404160",
    "end": "406479"
  },
  {
    "text": "stored those original the original",
    "start": "406479",
    "end": "407919"
  },
  {
    "text": "annotations it knows how to get the",
    "start": "407919",
    "end": "409360"
  },
  {
    "text": "application metrics so we'll make a",
    "start": "409360",
    "end": "411039"
  },
  {
    "text": "request to that correct location and",
    "start": "411039",
    "end": "413039"
  },
  {
    "text": "we'll get back some application metrics",
    "start": "413039",
    "end": "415120"
  },
  {
    "text": "then we'll also scrape the metrics from",
    "start": "415120",
    "end": "416960"
  },
  {
    "text": "the proxy um since the agent is also",
    "start": "416960",
    "end": "419280"
  },
  {
    "text": "responsible for launching the proxy it",
    "start": "419280",
    "end": "421199"
  },
  {
    "text": "knows where the proxies age the proxy's",
    "start": "421199",
    "end": "423360"
  },
  {
    "text": "metrics end point is already so it will",
    "start": "423360",
    "end": "425599"
  },
  {
    "text": "go ahead and scrape that from its",
    "start": "425599",
    "end": "426800"
  },
  {
    "text": "well-known endpoint and then it will",
    "start": "426800",
    "end": "429120"
  },
  {
    "text": "merge those two and then additionally",
    "start": "429120",
    "end": "430960"
  },
  {
    "text": "add its own agent metrics so now what",
    "start": "430960",
    "end": "433520"
  },
  {
    "text": "happens is we have a full document that",
    "start": "433520",
    "end": "435520"
  },
  {
    "text": "contains the metrics from all three of",
    "start": "435520",
    "end": "437759"
  },
  {
    "text": "the components in the in a given pod and",
    "start": "437759",
    "end": "440240"
  },
  {
    "text": "now that can be returned back to",
    "start": "440240",
    "end": "441360"
  },
  {
    "text": "prometheus and we have a single endpoint",
    "start": "441360",
    "end": "444240"
  },
  {
    "text": "from a single endpoint we have all of",
    "start": "444240",
    "end": "445759"
  },
  {
    "text": "the metrics we need for a given pod",
    "start": "445759",
    "end": "448400"
  },
  {
    "start": "448000",
    "end": "448000"
  },
  {
    "text": "so that works great in most cases it's",
    "start": "448400",
    "end": "450720"
  },
  {
    "text": "very transparent to the workload as long",
    "start": "450720",
    "end": "452880"
  },
  {
    "text": "as you're using those annotations we'll",
    "start": "452880",
    "end": "454319"
  },
  {
    "text": "talk about that here in a second but",
    "start": "454319",
    "end": "456000"
  },
  {
    "text": "another thing to consider is that since",
    "start": "456000",
    "end": "458319"
  },
  {
    "text": "the agent itself is exposing this",
    "start": "458319",
    "end": "460560"
  },
  {
    "text": "endpoint it's excluded from the proxy",
    "start": "460560",
    "end": "462720"
  },
  {
    "text": "and that means that you don't get things",
    "start": "462720",
    "end": "464080"
  },
  {
    "text": "like mutual tls for free um so that in",
    "start": "464080",
    "end": "467599"
  },
  {
    "text": "most cases i would say is probably not a",
    "start": "467599",
    "end": "469680"
  },
  {
    "text": "problem",
    "start": "469680",
    "end": "470879"
  },
  {
    "text": "but if you do have super strict security",
    "start": "470879",
    "end": "472560"
  },
  {
    "text": "requirements that require even",
    "start": "472560",
    "end": "474960"
  },
  {
    "text": "metrics data to be encrypted you will",
    "start": "474960",
    "end": "477280"
  },
  {
    "text": "not be able to use the solution so that",
    "start": "477280",
    "end": "478879"
  },
  {
    "text": "you'll have to use an alternative there",
    "start": "478879",
    "end": "480319"
  },
  {
    "text": "are some outlined on the istio.io",
    "start": "480319",
    "end": "482160"
  },
  {
    "text": "website that talked about alternatives",
    "start": "482160",
    "end": "484080"
  },
  {
    "text": "for handling the the tls portion",
    "start": "484080",
    "end": "487280"
  },
  {
    "text": "um and like i just mentioned earlier",
    "start": "487280",
    "end": "489919"
  },
  {
    "text": "this this feature or this solution",
    "start": "489919",
    "end": "492319"
  },
  {
    "text": "requires prometheus annotations to work",
    "start": "492319",
    "end": "494560"
  },
  {
    "text": "so if you're using a tool that doesn't",
    "start": "494560",
    "end": "496720"
  },
  {
    "text": "respect those prometheus annotations",
    "start": "496720",
    "end": "498800"
  },
  {
    "text": "this will not work either a very common",
    "start": "498800",
    "end": "501039"
  },
  {
    "text": "example of that is prometheus operator",
    "start": "501039",
    "end": "502879"
  },
  {
    "text": "which has its own kind of mechanism kind",
    "start": "502879",
    "end": "504879"
  },
  {
    "text": "of crd-based mechanism for discovering",
    "start": "504879",
    "end": "507759"
  },
  {
    "text": "which crd and custom resources mechanism",
    "start": "507759",
    "end": "510400"
  },
  {
    "text": "that that you know tells prometheus",
    "start": "510400",
    "end": "512880"
  },
  {
    "text": "where to go to scrape so in that case",
    "start": "512880",
    "end": "515039"
  },
  {
    "text": "the annotation-based solution will not",
    "start": "515039",
    "end": "516560"
  },
  {
    "text": "work",
    "start": "516560",
    "end": "518080"
  },
  {
    "start": "518000",
    "end": "518000"
  },
  {
    "text": "um so in general though there are other",
    "start": "518080",
    "end": "520320"
  },
  {
    "text": "alternatives to solve this so you could",
    "start": "520320",
    "end": "521839"
  },
  {
    "text": "configure prometheus directly to to",
    "start": "521839",
    "end": "524480"
  },
  {
    "text": "understand",
    "start": "524480",
    "end": "525680"
  },
  {
    "text": "where the data planes um live right so",
    "start": "525680",
    "end": "529120"
  },
  {
    "text": "whether that's through like kind of",
    "start": "529120",
    "end": "530240"
  },
  {
    "text": "convention or well-known labeling or so",
    "start": "530240",
    "end": "532480"
  },
  {
    "text": "on it's very you know you could",
    "start": "532480",
    "end": "534080"
  },
  {
    "text": "configure prometheus directly to um to",
    "start": "534080",
    "end": "536880"
  },
  {
    "text": "understand the the data planes and you",
    "start": "536880",
    "end": "538640"
  },
  {
    "text": "don't have to worry about kind of",
    "start": "538640",
    "end": "539760"
  },
  {
    "text": "merging them together another",
    "start": "539760",
    "end": "541279"
  },
  {
    "text": "interesting thing uh kuma another cncf",
    "start": "541279",
    "end": "543519"
  },
  {
    "text": "project has uh they have a native",
    "start": "543519",
    "end": "545600"
  },
  {
    "text": "prometheus service discovery plug-in um",
    "start": "545600",
    "end": "548000"
  },
  {
    "text": "which means that you know",
    "start": "548000",
    "end": "549519"
  },
  {
    "text": "it tells it gives prometheus the ability",
    "start": "549519",
    "end": "552080"
  },
  {
    "text": "to to really understand uh natively what",
    "start": "552080",
    "end": "555200"
  },
  {
    "text": "kuma's uh you know deployment looks like",
    "start": "555200",
    "end": "557600"
  },
  {
    "text": "so you have data planes and so on the",
    "start": "557600",
    "end": "559600"
  },
  {
    "text": "proxies",
    "start": "559600",
    "end": "560720"
  },
  {
    "text": "prometheus will understand that",
    "start": "560720",
    "end": "563120"
  },
  {
    "text": "it does require a change to prometheus",
    "start": "563120",
    "end": "564560"
  },
  {
    "text": "deployment uh which kind of leads into",
    "start": "564560",
    "end": "566560"
  },
  {
    "text": "the next more sophisticated approach",
    "start": "566560",
    "end": "568640"
  },
  {
    "text": "which would be a very dynamic native",
    "start": "568640",
    "end": "571680"
  },
  {
    "text": "integration that would use a service to",
    "start": "571680",
    "end": "573760"
  },
  {
    "text": "configure it you know rather than having",
    "start": "573760",
    "end": "575360"
  },
  {
    "text": "to modify the prometheus deployment you",
    "start": "575360",
    "end": "576800"
  },
  {
    "text": "could configure it through a service um",
    "start": "576800",
    "end": "578800"
  },
  {
    "text": "and if you're familiar with envoy you",
    "start": "578800",
    "end": "580080"
  },
  {
    "text": "know what the xds apis there may be a",
    "start": "580080",
    "end": "582800"
  },
  {
    "text": "play there to allow the control plane to",
    "start": "582800",
    "end": "585839"
  },
  {
    "text": "configure prometheus since the control",
    "start": "585839",
    "end": "588320"
  },
  {
    "text": "plane knows about your data planes it",
    "start": "588320",
    "end": "589519"
  },
  {
    "text": "knows about your",
    "start": "589519",
    "end": "591279"
  },
  {
    "text": "you know the workloads and so on that",
    "start": "591279",
    "end": "593680"
  },
  {
    "text": "means the control plane can dynamically",
    "start": "593680",
    "end": "595279"
  },
  {
    "text": "configure prometheus",
    "start": "595279",
    "end": "597519"
  },
  {
    "text": "with a native integration as well",
    "start": "597519",
    "end": "599680"
  },
  {
    "text": "um but yeah that's pretty much it just a",
    "start": "599680",
    "end": "602320"
  },
  {
    "text": "quick plug if you are attending in",
    "start": "602320",
    "end": "604160"
  },
  {
    "text": "person or virtually uh come check us out",
    "start": "604160",
    "end": "606959"
  },
  {
    "text": "at the solo.i o team uh we have an",
    "start": "606959",
    "end": "608720"
  },
  {
    "text": "in-person booth at booth s4 in the",
    "start": "608720",
    "end": "610720"
  },
  {
    "text": "solutions showcase uh we also have a",
    "start": "610720",
    "end": "612480"
  },
  {
    "text": "virtual booth come talk to us come check",
    "start": "612480",
    "end": "614640"
  },
  {
    "text": "us out and you can also enter for a",
    "start": "614640",
    "end": "615839"
  },
  {
    "text": "chance to win some airpods",
    "start": "615839",
    "end": "618000"
  },
  {
    "text": "and that is all i have thank you very",
    "start": "618000",
    "end": "619600"
  },
  {
    "text": "much",
    "start": "619600",
    "end": "622560"
  }
]