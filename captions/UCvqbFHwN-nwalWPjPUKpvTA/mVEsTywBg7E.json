[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "yeah so in this talk lightning talk will",
    "start": "30",
    "end": "3030"
  },
  {
    "text": "cover how you can get a hundred percent",
    "start": "3030",
    "end": "5430"
  },
  {
    "text": "visibility into your services",
    "start": "5430",
    "end": "7799"
  },
  {
    "text": "communication the flow of data between",
    "start": "7799",
    "end": "9840"
  },
  {
    "text": "your services on kubernetes I'll first",
    "start": "9840",
    "end": "12809"
  },
  {
    "text": "go through why you would want to monitor",
    "start": "12809",
    "end": "14940"
  },
  {
    "text": "the flow between your services then go",
    "start": "14940",
    "end": "17010"
  },
  {
    "text": "through an example of how you can get",
    "start": "17010",
    "end": "18539"
  },
  {
    "text": "Mis data cover technology that would",
    "start": "18539",
    "end": "21300"
  },
  {
    "text": "allow you to get this efficiently run",
    "start": "21300",
    "end": "23490"
  },
  {
    "text": "through an example cluster of how this",
    "start": "23490",
    "end": "26310"
  },
  {
    "text": "data looks like and briefly touch on how",
    "start": "26310",
    "end": "28500"
  },
  {
    "text": "to productionize it what are the",
    "start": "28500",
    "end": "30119"
  },
  {
    "text": "challenges so why would you even want to",
    "start": "30119",
    "end": "32668"
  },
  {
    "start": "31000",
    "end": "87000"
  },
  {
    "text": "get flow monitoring data well with flow",
    "start": "32669",
    "end": "35610"
  },
  {
    "text": "data you can get a complete picture of",
    "start": "35610",
    "end": "38250"
  },
  {
    "text": "your application architecture do I have",
    "start": "38250",
    "end": "41370"
  },
  {
    "text": "a service to service dependency that I",
    "start": "41370",
    "end": "44040"
  },
  {
    "text": "don't know about or that is undesirable",
    "start": "44040",
    "end": "46079"
  },
  {
    "text": "is there a dependency between",
    "start": "46079",
    "end": "48210"
  },
  {
    "text": "availability zones that could hurt the",
    "start": "48210",
    "end": "50640"
  },
  {
    "text": "high availability strategy is there",
    "start": "50640",
    "end": "52800"
  },
  {
    "text": "dependency between environments for",
    "start": "52800",
    "end": "54149"
  },
  {
    "text": "example production and staging you'd be",
    "start": "54149",
    "end": "56070"
  },
  {
    "text": "surprised",
    "start": "56070",
    "end": "57629"
  },
  {
    "text": "second monitoring health it's easy to",
    "start": "57629",
    "end": "60390"
  },
  {
    "text": "introduce bugs configuration errors and",
    "start": "60390",
    "end": "63420"
  },
  {
    "text": "incompatibilities for each service that",
    "start": "63420",
    "end": "65970"
  },
  {
    "text": "you're running for the upstream services",
    "start": "65970",
    "end": "67979"
  },
  {
    "text": "which interaction is unhealthy how can",
    "start": "67979",
    "end": "70560"
  },
  {
    "text": "you find that which versions are",
    "start": "70560",
    "end": "72330"
  },
  {
    "text": "affected which services are affected in",
    "start": "72330",
    "end": "73950"
  },
  {
    "text": "which availability zones and finally in",
    "start": "73950",
    "end": "76710"
  },
  {
    "text": "the public cloud communication between",
    "start": "76710",
    "end": "78659"
  },
  {
    "text": "availability zones and regions is",
    "start": "78659",
    "end": "80729"
  },
  {
    "text": "expensive how do you monitor which",
    "start": "80729",
    "end": "83009"
  },
  {
    "text": "services are using this expensive",
    "start": "83009",
    "end": "85080"
  },
  {
    "text": "resources you can optimize let's go",
    "start": "85080",
    "end": "87750"
  },
  {
    "start": "87000",
    "end": "154000"
  },
  {
    "text": "through an example of how you could get",
    "start": "87750",
    "end": "89729"
  },
  {
    "text": "this flow data so let's say you have a",
    "start": "89729",
    "end": "91770"
  },
  {
    "text": "pod a wants to communicate to a service",
    "start": "91770",
    "end": "94020"
  },
  {
    "text": "X and X is backed by a pod B in the",
    "start": "94020",
    "end": "98189"
  },
  {
    "text": "default implementation using iptables",
    "start": "98189",
    "end": "101000"
  },
  {
    "text": "cube proxy configures iptables with this",
    "start": "101000",
    "end": "103950"
  },
  {
    "text": "mapping of X to B so a opens a socket to",
    "start": "103950",
    "end": "106680"
  },
  {
    "text": "X then iptables Maps translates X's",
    "start": "106680",
    "end": "110549"
  },
  {
    "text": "address to b's address so that B's sees",
    "start": "110549",
    "end": "113970"
  },
  {
    "text": "the connection is if it arrives directly",
    "start": "113970",
    "end": "115770"
  },
  {
    "text": "from a to get this flow data you use",
    "start": "115770",
    "end": "118619"
  },
  {
    "text": "three data sources from the kubernetes",
    "start": "118619",
    "end": "121979"
  },
  {
    "text": "api you can get the names of the pods",
    "start": "121979",
    "end": "124680"
  },
  {
    "text": "and their IP addresses from the socket",
    "start": "124680",
    "end": "127380"
  },
  {
    "text": "subsystem in the kernel here using the",
    "start": "127380",
    "end": "129390"
  },
  {
    "text": "SS tool you can get socket information",
    "start": "129390",
    "end": "132540"
  },
  {
    "text": "here",
    "start": "132540",
    "end": "133000"
  },
  {
    "text": "a 2x and also metadata on the socket so",
    "start": "133000",
    "end": "136710"
  },
  {
    "text": "throughput RX and TX packet drops",
    "start": "136710",
    "end": "139510"
  },
  {
    "text": "round-trip times from IP tables you can",
    "start": "139510",
    "end": "142930"
  },
  {
    "text": "get this mapping here a 2x is mapped to",
    "start": "142930",
    "end": "146110"
  },
  {
    "text": "a to B so using these three data sources",
    "start": "146110",
    "end": "148900"
  },
  {
    "text": "kubernetes api socket subsystem and IP",
    "start": "148900",
    "end": "151750"
  },
  {
    "text": "tables you can get this flow data how do",
    "start": "151750",
    "end": "154930"
  },
  {
    "start": "154000",
    "end": "225000"
  },
  {
    "text": "you get that efficiently",
    "start": "154930",
    "end": "156370"
  },
  {
    "text": "well BPF 4e b PF has been around in the",
    "start": "156370",
    "end": "159820"
  },
  {
    "text": "linux kernel and in the form that I'm",
    "start": "159820",
    "end": "161620"
  },
  {
    "text": "talking about since 3:18 it allows you",
    "start": "161620",
    "end": "164410"
  },
  {
    "text": "to space programs to run code snippets",
    "start": "164410",
    "end": "166780"
  },
  {
    "text": "on different kernel events and so for",
    "start": "166780",
    "end": "169720"
  },
  {
    "text": "example you can get instead of going",
    "start": "169720",
    "end": "171820"
  },
  {
    "text": "through all the sockets in the kernel",
    "start": "171820",
    "end": "173590"
  },
  {
    "text": "you can get just streaming updates of",
    "start": "173590",
    "end": "175630"
  },
  {
    "text": "what changed so it's much more efficient",
    "start": "175630",
    "end": "177850"
  },
  {
    "text": "and you also have access to much more",
    "start": "177850",
    "end": "180459"
  },
  {
    "text": "data from the kernel there are a lot of",
    "start": "180459",
    "end": "183489"
  },
  {
    "text": "safety mechanisms for BPF for example",
    "start": "183489",
    "end": "187150"
  },
  {
    "text": "the BBF has an internal verifier that",
    "start": "187150",
    "end": "189910"
  },
  {
    "text": "ensures that programs cannot access",
    "start": "189910",
    "end": "192910"
  },
  {
    "text": "invalid memory and in the context of",
    "start": "192910",
    "end": "195580"
  },
  {
    "text": "this talk all of the programs we run in",
    "start": "195580",
    "end": "198760"
  },
  {
    "text": "read-only context so they cannot garble",
    "start": "198760",
    "end": "201670"
  },
  {
    "text": "in kernel data structures programs are",
    "start": "201670",
    "end": "205360"
  },
  {
    "text": "also just-in-time compiled to very",
    "start": "205360",
    "end": "207430"
  },
  {
    "text": "efficient machine code so this is super",
    "start": "207430",
    "end": "209260"
  },
  {
    "text": "fast",
    "start": "209260",
    "end": "209799"
  },
  {
    "text": "all in all using the EPF it's possible",
    "start": "209799",
    "end": "213459"
  },
  {
    "text": "to get a hundred percent coverage of all",
    "start": "213459",
    "end": "216340"
  },
  {
    "text": "the flows in your cluster directly from",
    "start": "216340",
    "end": "219010"
  },
  {
    "text": "the operating system without application",
    "start": "219010",
    "end": "221170"
  },
  {
    "text": "changes and with extremely low overhead",
    "start": "221170",
    "end": "223180"
  },
  {
    "text": "so that's a big win let me give you a",
    "start": "223180",
    "end": "226239"
  },
  {
    "start": "225000",
    "end": "263000"
  },
  {
    "text": "tour of our one of our staging",
    "start": "226239",
    "end": "228400"
  },
  {
    "text": "environments here you can see the",
    "start": "228400",
    "end": "231130"
  },
  {
    "text": "kubernetes nodes and some of the health",
    "start": "231130",
    "end": "233019"
  },
  {
    "text": "checks that cubelet performs to",
    "start": "233019",
    "end": "234790"
  },
  {
    "text": "containers in the cluster here you can",
    "start": "234790",
    "end": "237400"
  },
  {
    "text": "see out of cluster traffic hitting our",
    "start": "237400",
    "end": "239980"
  },
  {
    "text": "API s and our front-end",
    "start": "239980",
    "end": "242280"
  },
  {
    "text": "and here you can see the flow analysis",
    "start": "242280",
    "end": "245230"
  },
  {
    "text": "server and Prometheus scraping it",
    "start": "245230",
    "end": "248230"
  },
  {
    "text": "I mentioned collecting throughput packet",
    "start": "248230",
    "end": "251260"
  },
  {
    "text": "drops and round-trip time by analyzing",
    "start": "251260",
    "end": "253900"
  },
  {
    "text": "the time series data it's possible to",
    "start": "253900",
    "end": "256299"
  },
  {
    "text": "establish baselines of what the behavior",
    "start": "256299",
    "end": "258280"
  },
  {
    "text": "should look like so the system could",
    "start": "258280",
    "end": "260200"
  },
  {
    "text": "alert you on changes on anomalies there",
    "start": "260200",
    "end": "264490"
  },
  {
    "start": "263000",
    "end": "306000"
  },
  {
    "text": "are several challenges in getting such",
    "start": "264490",
    "end": "266560"
  },
  {
    "text": "as",
    "start": "266560",
    "end": "267010"
  },
  {
    "text": "into production I don't have much time",
    "start": "267010",
    "end": "268570"
  },
  {
    "text": "so I'll cover those briefly first you",
    "start": "268570",
    "end": "271360"
  },
  {
    "text": "get is extremely efficient but you could",
    "start": "271360",
    "end": "273970"
  },
  {
    "text": "shoot yourself in the butt with it so",
    "start": "273970",
    "end": "275710"
  },
  {
    "text": "you need to be careful using it well",
    "start": "275710",
    "end": "278730"
  },
  {
    "text": "Network overhead if you ship a lot of",
    "start": "278730",
    "end": "282910"
  },
  {
    "text": "data out you make sure that you do this",
    "start": "282910",
    "end": "284890"
  },
  {
    "text": "efficiently so compress there are also",
    "start": "284890",
    "end": "287400"
  },
  {
    "text": "security implication you want the system",
    "start": "287400",
    "end": "290200"
  },
  {
    "text": "to be real time so you can alert on it",
    "start": "290200",
    "end": "292150"
  },
  {
    "text": "but I'm you and Prometheus has",
    "start": "292150",
    "end": "295960"
  },
  {
    "text": "cardinality issues you need to tackle",
    "start": "295960",
    "end": "297580"
  },
  {
    "text": "and more and more and more my contact",
    "start": "297580",
    "end": "299920"
  },
  {
    "text": "details are in the bottom so if you find",
    "start": "299920",
    "end": "301510"
  },
  {
    "text": "this interesting please reach out",
    "start": "301510",
    "end": "304570"
  },
  {
    "text": "[Applause]",
    "start": "304570",
    "end": "308759"
  }
]