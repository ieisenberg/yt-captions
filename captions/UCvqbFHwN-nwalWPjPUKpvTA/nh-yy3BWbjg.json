[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "hi everyone thanks thanks for coming today I'll run a session about custom",
    "start": "319",
    "end": "7500"
  },
  {
    "text": "diplomat searches for communities I work at Atlassian we are building into a internal platform as-a-service",
    "start": "7500",
    "end": "13259"
  },
  {
    "text": "built on top of communities we use lots of theories and like effectively the",
    "start": "13259",
    "end": "18539"
  },
  {
    "text": "talk is inspired by my actual work at Atlassian hopefully you'll find it",
    "start": "18539",
    "end": "24480"
  },
  {
    "text": "useful so just some brief overview for",
    "start": "24480",
    "end": "32850"
  },
  {
    "start": "26000",
    "end": "93000"
  },
  {
    "text": "the context I suppose that most people here are familiar with continuous delivery concept and continually is an",
    "start": "32850",
    "end": "41250"
  },
  {
    "text": "approach where teams release products frequently and predictably from source code repository to production in an",
    "start": "41250",
    "end": "46289"
  },
  {
    "text": "automated version so for this particular kind I will be focusing on the automation side of things and the",
    "start": "46289",
    "end": "55020"
  },
  {
    "text": "typical CI CD pipeline have multiple stages which with it reject transitions",
    "start": "55020",
    "end": "60989"
  },
  {
    "text": "which are either automatic or manual triggered and normally we have the",
    "start": "60989",
    "end": "66810"
  },
  {
    "text": "Glitter stage is building artifact running some unit tests then we can deploy artifact to the staging",
    "start": "66810",
    "end": "73290"
  },
  {
    "text": "environment and then we run more tests against the staging environment once i",
    "start": "73290",
    "end": "78420"
  },
  {
    "text": "canta confident that there is no regression we can deploy it to production and finally in production we",
    "start": "78420",
    "end": "83880"
  },
  {
    "text": "keep on you touring our applications to make sure that the application is healthy and today i will mostly focus on",
    "start": "83880",
    "end": "90659"
  },
  {
    "text": "the deployment to production stage so first let's talk about community",
    "start": "90659",
    "end": "96090"
  },
  {
    "start": "93000",
    "end": "194000"
  },
  {
    "text": "deployments so the way to deploy deploy applications in communities is using unities deployment resource that has to",
    "start": "96090",
    "end": "104729"
  },
  {
    "text": "update strategies or create unrolling update so they recreate strategy is",
    "start": "104729",
    "end": "111869"
  },
  {
    "text": "killing all existing pods before creating new ones it may be useful mostly for working notes it's not as",
    "start": "111869",
    "end": "117869"
  },
  {
    "text": "much useful for user facing applications which have some end points so the rolling update strategy is actually the",
    "start": "117869",
    "end": "124799"
  },
  {
    "text": "default one so if you don't specify the rollout strategy in your deployments",
    "start": "124799",
    "end": "129959"
  },
  {
    "text": "pack this is the strategy you'll get and rolling update scales creates a new",
    "start": "129959",
    "end": "135100"
  },
  {
    "text": "replica set scales is up while the old replica set is being scaled down so it was just quick a brief look at and",
    "start": "135100",
    "end": "142960"
  },
  {
    "text": "they're rolling updates through surgery so deployment manages replica sets and replica sets manage pods and when you",
    "start": "142960",
    "end": "149080"
  },
  {
    "text": "first create your deployment you get one replica sets with all version one creating multiple as many pots as you",
    "start": "149080",
    "end": "155260"
  },
  {
    "text": "want of this particular version so next when you update the diplom spec you get a new",
    "start": "155260",
    "end": "162670"
  },
  {
    "text": "replica set created and this new replica set is scaled out while the old is being",
    "start": "162670",
    "end": "169210"
  },
  {
    "text": "scaled up and down and in the end you again have just one replica set that is active and serving all creating all the",
    "start": "169210",
    "end": "176320"
  },
  {
    "text": "pods and making sure that the certain number of replicas are running the old replica cells are normally not deleted",
    "start": "176320",
    "end": "184470"
  },
  {
    "text": "straight away it depends on the revision history limit parameter in the des plaines back but for the purpose of this",
    "start": "184470",
    "end": "190840"
  },
  {
    "text": "talk it's not really important so next continuous deployment so with the",
    "start": "190840",
    "end": "197320"
  },
  {
    "start": "194000",
    "end": "244000"
  },
  {
    "text": "continuous deployment the the thing is that we don't just focus on the happy path where and we our rolling update for",
    "start": "197320",
    "end": "204640"
  },
  {
    "text": "example works as except expected and we don't have any bugs the more important part is the automation of the are",
    "start": "204640",
    "end": "211630"
  },
  {
    "text": "allowed and rollback and for the rolling update the traffic timeline looks like",
    "start": "211630",
    "end": "217060"
  },
  {
    "text": "this we eventually replace all the pods of version 1 with the plaza version 2 and",
    "start": "217060",
    "end": "222130"
  },
  {
    "text": "once we are done we although the pods are running a new version of the application and in case of a bad release",
    "start": "222130",
    "end": "228400"
  },
  {
    "text": "what happens that as soon as we detected T some some issue we roll back the",
    "start": "228400",
    "end": "234130"
  },
  {
    "text": "deployment and we back effectively we do the reverse we create new pods of the",
    "start": "234130",
    "end": "240490"
  },
  {
    "text": "old version which replace the the version 2 so next question is how do we",
    "start": "240490",
    "end": "248230"
  },
  {
    "start": "244000",
    "end": "398000"
  },
  {
    "text": "detect issues in productions so we use metrics for example we can monitor a",
    "start": "248230",
    "end": "254260"
  },
  {
    "text": "number of failed requests over the last five minutes and based on the of this number we can make a decision whether there's in some regression in the",
    "start": "254260",
    "end": "261130"
  },
  {
    "text": "functionality and the next question is as you have seen you they if there is a new bed release it",
    "start": "261130",
    "end": "268080"
  },
  {
    "text": "affects all users 100% of the users and it would be nice to reduce the impact in",
    "start": "268080",
    "end": "274170"
  },
  {
    "text": "case of bad release and to achieve that we can use some custom diplomat search this rather than just a single different",
    "start": "274170",
    "end": "280830"
  },
  {
    "text": "object and the way we can implement custom diplomat strategies is just by creating multiple different objects",
    "start": "280830",
    "end": "287370"
  },
  {
    "text": "which gives us more flexibility you have seen you'll see it on some of the next",
    "start": "287370",
    "end": "292890"
  },
  {
    "text": "slides so the first strategy is blueberry in deployment where we create to deployment objects one is labeled as",
    "start": "292890",
    "end": "299640"
  },
  {
    "text": "blue another is green and we also have ingress and service to serve gtp",
    "start": "299640",
    "end": "305910"
  },
  {
    "text": "requests for example for the users and only the port of one deployment are",
    "start": "305910",
    "end": "311550"
  },
  {
    "text": "processing all the requests at a time so on this picture blue is processing all the requests while the green deployment",
    "start": "311550",
    "end": "316860"
  },
  {
    "text": "is effectively is inactive so when we need to roll out a new version we update",
    "start": "316860",
    "end": "321930"
  },
  {
    "text": "the the inactive deployment which is green on this picture and once the deployment is ready we can",
    "start": "321930",
    "end": "328110"
  },
  {
    "text": "run some tests against it to make sure that some trivial happy scenario for",
    "start": "328110",
    "end": "333330"
  },
  {
    "text": "example passes and once we're confident that it looks fine we update this service port selector so that now all",
    "start": "333330",
    "end": "340170"
  },
  {
    "text": "the requests from the users are being served by the green deployment and blue deployment is inactive so next time we",
    "start": "340170",
    "end": "347520"
  },
  {
    "text": "will need to update the our application to version 3 let's say we will be using blue deployment so we will update blue",
    "start": "347520",
    "end": "356370"
  },
  {
    "text": "deployment with a spec of version 3 and eventually again will update service pod selector and now the glute deployment is",
    "start": "356370",
    "end": "363360"
  },
  {
    "text": "and is active so we repeat this operation every time and this is how we can implement Google deployment in",
    "start": "363360",
    "end": "369810"
  },
  {
    "text": "communities traffic timeline for blue green deployment looks like this the cut",
    "start": "369810",
    "end": "376410"
  },
  {
    "text": "over his instantaneous because we only update our pod selector once the deployment is ready so it has been",
    "start": "376410",
    "end": "383220"
  },
  {
    "text": "scaled up with it with the new pods and in case of red release the rollback is",
    "start": "383220",
    "end": "388980"
  },
  {
    "text": "also instantaneous since we keep the old deployment running either for error or for certain period of time we can",
    "start": "388980",
    "end": "395730"
  },
  {
    "text": "quickly rollback once we detect that the issue next two days can I release and least",
    "start": "395730",
    "end": "406690"
  },
  {
    "start": "398000",
    "end": "505000"
  },
  {
    "text": "30g helps us to reduce the impact effectively rather than rolling out we",
    "start": "406690",
    "end": "412120"
  },
  {
    "text": "change to all of the users we first make an update only for a small subset of",
    "start": "412120",
    "end": "417820"
  },
  {
    "text": "users and once we're confident that the new version is fine we are allowed to the rest of the users and the picture is",
    "start": "417820",
    "end": "425260"
  },
  {
    "text": "very similar we also have two deployments one is marked as stable and others canary and the difference with",
    "start": "425260",
    "end": "431860"
  },
  {
    "text": "Bluegreen deployment is that was of both deployments are serving the requests some subset of the requests and also",
    "start": "431860",
    "end": "437560"
  },
  {
    "text": "here we have an ingress that supports weighted load balancing for example it could be happy or contour or nginx",
    "start": "437560",
    "end": "444340"
  },
  {
    "text": "ingress controller or any other and here we have configured that 90% of the",
    "start": "444340",
    "end": "450280"
  },
  {
    "text": "requests are processed by this table deployment and the rest 10% are processed by the connect deployment so",
    "start": "450280",
    "end": "455830"
  },
  {
    "text": "when the new version is it comes up we'll just first update can our deployment with version 2 we will keep",
    "start": "455830",
    "end": "463330"
  },
  {
    "text": "monitoring it for some period of time and once we are confident that it looks fine we'll update the deployments the",
    "start": "463330",
    "end": "471310"
  },
  {
    "text": "stable deployment to version 2 and again in the end we have both reports running",
    "start": "471310",
    "end": "476980"
  },
  {
    "text": "this new version of the application traffic timeline looks like this first we roll out the change to a small",
    "start": "476980",
    "end": "483970"
  },
  {
    "text": "subset of users and once we confident we proceed with our rollout and in case of rollback this is like the most important",
    "start": "483970",
    "end": "491410"
  },
  {
    "text": "part of the canary deployment is that if we detect the issue only a small subset",
    "start": "491410",
    "end": "496600"
  },
  {
    "text": "of users is affected now let's talk a bit a little bit about the automation",
    "start": "496600",
    "end": "502210"
  },
  {
    "text": "for this custom deployment surgery how do they automate the deployment rollout",
    "start": "502210",
    "end": "508780"
  },
  {
    "start": "505000",
    "end": "571000"
  },
  {
    "text": "so we I think the most common pattern being widely used is just implementing",
    "start": "508780",
    "end": "515680"
  },
  {
    "text": "this logic on this side of si si do si do for example you can write a groovy script in Jenkins or bamboo which will",
    "start": "515680",
    "end": "521500"
  },
  {
    "text": "manage this deployment objects so let's first have a look at how this script would look like it would be perfectly we",
    "start": "521500",
    "end": "529450"
  },
  {
    "text": "will be able to just use keep city reply which is a fact or keep control our code to use a",
    "start": "529450",
    "end": "537520"
  },
  {
    "text": "declarative way of updating the deployment spec and other objects as well it means that we have minimal logic",
    "start": "537520",
    "end": "544810"
  },
  {
    "text": "in the in our CI CD but the problem here",
    "start": "544810",
    "end": "550060"
  },
  {
    "text": "is that we cannot actually update both deployments at the same time we need some extra logic so for example after",
    "start": "550060",
    "end": "556510"
  },
  {
    "text": "updating deployment a canary deployment object we sleep for some period of time wait until all the my it processes a",
    "start": "556510",
    "end": "564010"
  },
  {
    "text": "certain number of requests that the metrics are now up to date with check the metrics and then we make a decision",
    "start": "564010",
    "end": "570070"
  },
  {
    "text": "whether to proceed or rollback so are there any other options first of all I'd",
    "start": "570070",
    "end": "575710"
  },
  {
    "start": "571000",
    "end": "593000"
  },
  {
    "text": "just like to ask audience if anyone has brought some code against given a tcpi",
    "start": "575710",
    "end": "581860"
  },
  {
    "text": "using climb goal library can you please raise your hands if you did okay",
    "start": "581860",
    "end": "588010"
  },
  {
    "text": "a couple of people did so this is what I will focus on next so instead of writing",
    "start": "588010",
    "end": "595660"
  },
  {
    "text": "skills creep on CI CD tool we can actually implement the automation on the community side and to do that we can",
    "start": "595660",
    "end": "601720"
  },
  {
    "text": "implement the CDP Rd controller also known as a curator I think it was a very popular target at this conference so",
    "start": "601720",
    "end": "608980"
  },
  {
    "text": "most people are probably already familiar with it so why CRE just to name",
    "start": "608980",
    "end": "615910"
  },
  {
    "text": "a few benefits of series declarative we describe the desired state rather than",
    "start": "615910",
    "end": "621640"
  },
  {
    "text": "the steps to reach it self-healing meaning that communities control of",
    "start": "621640",
    "end": "626920"
  },
  {
    "text": "project will take care of making sure that we have we reach the final state it will retry if needed",
    "start": "626920",
    "end": "632709"
  },
  {
    "text": "and finally reusability so if you build this year as early as a building block",
    "start": "632709",
    "end": "638560"
  },
  {
    "text": "you can use it along with other series or communities native resources and in",
    "start": "638560",
    "end": "644050"
  },
  {
    "text": "the same way as you would do with any other communities resources so let's",
    "start": "644050",
    "end": "649959"
  },
  {
    "text": "just go back to the Canario deployment picture and see what we actually need to",
    "start": "649959",
    "end": "655779"
  },
  {
    "text": "automate to implement this theory so first of all let's forget for a moment",
    "start": "655779",
    "end": "661089"
  },
  {
    "text": "about replica sets and posts because they are managed by deployments a controller and now these are the objects we need to",
    "start": "661089",
    "end": "668050"
  },
  {
    "text": "manage for our Canary deployment controller next services service and linguist objects are actually very",
    "start": "668050",
    "end": "674650"
  },
  {
    "text": "effective aesthetic we just apply them at once we don't need to update them every time we ever have a new version of the application",
    "start": "674650",
    "end": "679780"
  },
  {
    "text": "so we only need to manage deployment objects and this is where the new Sierra comes in we can implement a new canary",
    "start": "679780",
    "end": "687880"
  },
  {
    "text": "diplomacy ID with a controller that will take care of the deployment objects and",
    "start": "687880",
    "end": "692890"
  },
  {
    "text": "finally we have this type of picture where all of these objects can be",
    "start": "692890",
    "end": "698320"
  },
  {
    "text": "managed declarative declaratory and particular controller will take care of",
    "start": "698320",
    "end": "703330"
  },
  {
    "text": "them so in the end this is how your CI a CDA script would look like and this is",
    "start": "703330",
    "end": "708760"
  },
  {
    "text": "exactly what we wanted it has all the declarative apply without extra any extra logic and specifics of which",
    "start": "708760",
    "end": "715570"
  },
  {
    "text": "monitoring tool you use for example or anything like that so next I'll be",
    "start": "715570",
    "end": "721510"
  },
  {
    "start": "718000",
    "end": "758000"
  },
  {
    "text": "talking about metrics so when not all controller needs to integrate with",
    "start": "721510",
    "end": "726940"
  },
  {
    "text": "something metrics API the question is which one to choose so the most common is probably in open",
    "start": "726940",
    "end": "732670"
  },
  {
    "text": "source is Prometheus for communities but the rels stick driver for Google cloud for example or cloud watch in AWS there",
    "start": "732670",
    "end": "740260"
  },
  {
    "text": "are data Dirk and other tools and all of them have their own api's and like if we",
    "start": "740260",
    "end": "746200"
  },
  {
    "text": "just integrate with one of these tools it doesn't scale we'll have to add more and more every time we need a new",
    "start": "746200",
    "end": "752170"
  },
  {
    "text": "metrics API what a parenting community offers a set of standard metrics api's which we can use and if you are familiar",
    "start": "752170",
    "end": "761410"
  },
  {
    "start": "758000",
    "end": "803000"
  },
  {
    "text": "with horizontal proton a scalar it be a resource this is the one which is currently using cuny's metrics api's and",
    "start": "761410",
    "end": "768610"
  },
  {
    "text": "this is the resource which you configure you provide a reference to the deployment and let the controller of HPA",
    "start": "768610",
    "end": "775740"
  },
  {
    "text": "scale up or down your deployment based on the metrics",
    "start": "775740",
    "end": "781120"
  },
  {
    "text": "normally CPU and memory but there are other ways as well so this is how HPA controller works it talks to the three",
    "start": "781120",
    "end": "788050"
  },
  {
    "text": "standard communities metrics ap is and manage the deployment object similarly we can do exactly the same for our",
    "start": "788050",
    "end": "794290"
  },
  {
    "text": "controller we can also talk to the same api's about instead of scaling up and down we make a",
    "start": "794290",
    "end": "799330"
  },
  {
    "text": "decision whether to proceed or roll back with a different so first metric CPI is",
    "start": "799330",
    "end": "806440"
  },
  {
    "start": "803000",
    "end": "814000"
  },
  {
    "text": "a resource metrics API that is specific to pods and notes and it just provides CPU and memory utilization metrics next",
    "start": "806440",
    "end": "815980"
  },
  {
    "start": "814000",
    "end": "850000"
  },
  {
    "text": "there is a custom metrics API that provides arbitrary matrix for any community resource for example pod",
    "start": "815980",
    "end": "822430"
  },
  {
    "text": "service and the ingress and this is actually the most interesting metric CPI for us because this is effectively an",
    "start": "822430",
    "end": "829360"
  },
  {
    "text": "abstraction layer where you can implement an adapter for your particular metric solution for example there is",
    "start": "829360",
    "end": "835930"
  },
  {
    "text": "already an open-source parameters adapter which you can configure as a implementation for Prometheus stick",
    "start": "835930",
    "end": "842050"
  },
  {
    "text": "driver in Google cloud already supports the city as well Aurore data dog and there are examples you can also",
    "start": "842050",
    "end": "847930"
  },
  {
    "text": "implement your own if you want it's all available on github and finally there is",
    "start": "847930",
    "end": "854650"
  },
  {
    "start": "850000",
    "end": "873000"
  },
  {
    "text": "external metrics API that is very similar to custom metrics if I had only difference is that these metrics are not",
    "start": "854650",
    "end": "860050"
  },
  {
    "text": "associated with any community resource which means that they can be used for some objects that we've outside your",
    "start": "860050",
    "end": "866170"
  },
  {
    "text": "communities cluster for example as Amazon s qsq size or Google Cloud pops up and the alert messages so you can use",
    "start": "866170",
    "end": "873730"
  },
  {
    "start": "873000",
    "end": "972000"
  },
  {
    "text": "that as well so finally let's talk about Canary deployments Eid format and this",
    "start": "873730",
    "end": "880480"
  },
  {
    "text": "is how the standard deployment looks like probably most people here are familiar with it it has a number of",
    "start": "880480",
    "end": "885880"
  },
  {
    "text": "replicas it has a selector for the ports to manage by this deployment and it has",
    "start": "885880",
    "end": "891490"
  },
  {
    "text": "a bottom plate for the pods aspect to be created so we can reuse the same",
    "start": "891490",
    "end": "896770"
  },
  {
    "text": "structure for our Canary deployment resource it also has self selector in template and it has some extra fields",
    "start": "896770",
    "end": "902170"
  },
  {
    "text": "specific to Canary and stable tracks so let's have a look at the specifics of",
    "start": "902170",
    "end": "907870"
  },
  {
    "text": "they Canary deployment configuration these are the two sections I will take a",
    "start": "907870",
    "end": "913300"
  },
  {
    "text": "look now and these two sections have separate numbers of replicas to manage for example we want to run just one port",
    "start": "913300",
    "end": "921520"
  },
  {
    "text": "or canary deployment even we want to run five calls for stable deployment there",
    "start": "921520",
    "end": "926830"
  },
  {
    "text": "is also configurable labels to make sure that service can be can route the request for tea for Basel particular deployment and",
    "start": "926830",
    "end": "933990"
  },
  {
    "text": "finally there is a section for metrics and first we can figure how how long do",
    "start": "933990",
    "end": "941980"
  },
  {
    "text": "we want to wait until we check the metric values once they we updated the canary deployment and then we provide a",
    "start": "941980",
    "end": "947650"
  },
  {
    "text": "list of metrics to check against so here",
    "start": "947650",
    "end": "952840"
  },
  {
    "text": "is a service called foo canary and the metric we want to check is the request failure rate so the target value here",
    "start": "952840",
    "end": "961840"
  },
  {
    "text": "says that if we if the number of failed requests over the last minute has",
    "start": "961840",
    "end": "967240"
  },
  {
    "text": "exceeded 10% we will mark this deployment as failing and we will need to roll back so time for the demo just a",
    "start": "967240",
    "end": "979510"
  },
  {
    "start": "972000",
    "end": "998000"
  },
  {
    "text": "little bit more details on the demo I have implemented so for my demo I am running our community fast on my local",
    "start": "979510",
    "end": "986410"
  },
  {
    "text": "machine and it's using Prometheus as with Prometheus adapter is an implementation of custom metrics API and",
    "start": "986410",
    "end": "992460"
  },
  {
    "text": "also I have installed Gahanna just for a better visualization for the demo the",
    "start": "992460",
    "end": "999370"
  },
  {
    "start": "998000",
    "end": "1021000"
  },
  {
    "text": "demo is available on github you can check it out it's both the the demo in control itself so everything is on",
    "start": "999370",
    "end": "1005550"
  },
  {
    "text": "github please check it out leave a feedback radius npr's and so on at this moment is mostly a proof of",
    "start": "1005550",
    "end": "1012060"
  },
  {
    "text": "concept but I would be happy to make it production radius all so let's see yeah",
    "start": "1012060",
    "end": "1021920"
  },
  {
    "text": "I'm afraid I don't have as good internet as Kelsey this morning but hopefully the",
    "start": "1021920",
    "end": "1028319"
  },
  {
    "text": "Wi-Fi is not about we stop downloading your movies if you do so first of all I",
    "start": "1028320",
    "end": "1034520"
  },
  {
    "start": "1033000",
    "end": "1086000"
  },
  {
    "text": "have a graph on dashboard here showing the some metrics and I'm I have an a",
    "start": "1034520",
    "end": "1043790"
  },
  {
    "text": "cluster with with extra companies",
    "start": "1043790",
    "end": "1051840"
  },
  {
    "text": "installed so here I'm writing a communities in docker and I have",
    "start": "1051840",
    "end": "1056970"
  },
  {
    "text": "installed a bunch of companies including contour for the ingress with weighted",
    "start": "1056970",
    "end": "1062250"
  },
  {
    "text": "load balancing there is a graph on Oh ramita separator for running your Prometheus on inside communities cluster",
    "start": "1062250",
    "end": "1068790"
  },
  {
    "text": "there is a Prometheus adapter which runs as custom API server inside communities",
    "start": "1068790",
    "end": "1077810"
  },
  {
    "text": "and finally I have installed an application a time application to show",
    "start": "1077810",
    "end": "1083670"
  },
  {
    "text": "to showcase how does it all work so the",
    "start": "1083670",
    "end": "1088800"
  },
  {
    "start": "1086000",
    "end": "1530000"
  },
  {
    "text": "application I'm using here is very simple it just shows the version number of the application it's every single",
    "start": "1088800",
    "end": "1094500"
  },
  {
    "text": "second it sends a request to the backend and we're waiting user doing some activity and also this application is",
    "start": "1094500",
    "end": "1101270"
  },
  {
    "text": "exposing an endpoint with metrics so",
    "start": "1101270",
    "end": "1108030"
  },
  {
    "text": "here we can see that all of our requests for version 1 here are succeeding so",
    "start": "1108030",
    "end": "1113430"
  },
  {
    "text": "it's a healthy version of the application the next version I will be using for showcasing the canard opponent is a",
    "start": "1113430",
    "end": "1120080"
  },
  {
    "text": "version 2 which is a bad release effectively and it needs the failing",
    "start": "1120080",
    "end": "1126660"
  },
  {
    "text": "metrics so let's check if it does so here you can see that most of the",
    "start": "1126660",
    "end": "1132240"
  },
  {
    "text": "requests are failing and finally I have a version 3 of the vacation that just",
    "start": "1132240",
    "end": "1140720"
  },
  {
    "text": "generates different kinds of emergency but it's a happy version of the application so this is the application",
    "start": "1140720",
    "end": "1148410"
  },
  {
    "text": "that is configured with ingress currently and if we check the dashboard",
    "start": "1148410",
    "end": "1153830"
  },
  {
    "text": "all of the requests are processed by version 1 there are no errors and here",
    "start": "1153830",
    "end": "1158970"
  },
  {
    "text": "is a breakdown on the left you can see the canary pods and metrics and on the right there is a stable Basel metrics so",
    "start": "1158970",
    "end": "1166440"
  },
  {
    "text": "there's one canary pod three stable ports all of them are succeeding and both running version 1 of the",
    "start": "1166440",
    "end": "1172500"
  },
  {
    "text": "application so let's see what do we have",
    "start": "1172500",
    "end": "1180720"
  },
  {
    "text": "here for the demo for our application so this is just a watch for the ports all",
    "start": "1180720",
    "end": "1189630"
  },
  {
    "text": "of my application here are just for pause once canary through stable or running version 1 and to configure the",
    "start": "1189630",
    "end": "1198479"
  },
  {
    "text": "ingress for example what I do here is I just specify the wait for canary service",
    "start": "1198479",
    "end": "1206109"
  },
  {
    "text": "wait for this table service so 20% of the requests are served by the canary a deployment and the rest 80% are served",
    "start": "1206109",
    "end": "1212739"
  },
  {
    "text": "by the stable deployment next I have also configured parameters here with an",
    "start": "1212739",
    "end": "1220869"
  },
  {
    "text": "endpoint to watch against and the labels for to find the services that we need to",
    "start": "1220869",
    "end": "1226109"
  },
  {
    "text": "collect metrics from and finally we'll",
    "start": "1226109",
    "end": "1231609"
  },
  {
    "text": "also here I configured custom metrics that to derive from the metrics that I",
    "start": "1231609",
    "end": "1238059"
  },
  {
    "text": "exposed by exposed of the dime application so here I'm just collecting the failure rate over the last minute",
    "start": "1238059",
    "end": "1244719"
  },
  {
    "text": "and based on this metric I will make a decision whether to proceed or rollback",
    "start": "1244719",
    "end": "1250089"
  },
  {
    "text": "and finally this is the instance of the canary deployment we have here so we",
    "start": "1250089",
    "end": "1257469"
  },
  {
    "text": "have selector template as usually we have in this pack we have version 1 of",
    "start": "1257469",
    "end": "1262479"
  },
  {
    "text": "the application and here we have configured the metrics to before to wait",
    "start": "1262479",
    "end": "1268149"
  },
  {
    "text": "for one minute before we check the metrics here is the name of the metric which I have just showed you in the Prometheus row and the value is 10% so",
    "start": "1268149",
    "end": "1277629"
  },
  {
    "text": "now let's try updating our canary deployment to version 2 which is I",
    "start": "1277629",
    "end": "1285070"
  },
  {
    "text": "showed you before is a bad version so I just updated the docker image I applying",
    "start": "1285070",
    "end": "1294249"
  },
  {
    "text": "the change and let's see what happens in our watch immediately we see that",
    "start": "1294249",
    "end": "1299739"
  },
  {
    "text": "version 2 of the placate a pod of version 2 has been created it's not ready yet which means that they all body",
    "start": "1299739",
    "end": "1305440"
  },
  {
    "text": "still running while once it becomes ready the pod of Russian top 2 will be sorry",
    "start": "1305440",
    "end": "1312669"
  },
  {
    "text": "the old port of version 1 will be terminating this is what we see here right now and here are just some events",
    "start": "1312669",
    "end": "1319059"
  },
  {
    "text": "from my a CID controller which says that the canary plan has been updated and it will wait for 60 seconds until checking",
    "start": "1319059",
    "end": "1327009"
  },
  {
    "text": "the metrics so let's go back to our your phone and",
    "start": "1327009",
    "end": "1332870"
  },
  {
    "text": "the report first let's just check what happened has happened to our application so 20% of the requests are served by the",
    "start": "1332870",
    "end": "1338510"
  },
  {
    "text": "Canary deployment and we see that it actually arrives version 2 of the application so some of the requests are",
    "start": "1338510",
    "end": "1344620"
  },
  {
    "text": "processed by the version 2 of the application here we see that the portal",
    "start": "1344620",
    "end": "1350090"
  },
  {
    "text": "version 1 has been replaced with the provision 2 and here we see that actually we see more and more failures",
    "start": "1350090",
    "end": "1358010"
  },
  {
    "text": "over the last minute while the stable port is still running version 1 so",
    "start": "1358010",
    "end": "1363430"
  },
  {
    "text": "everything is fine with a stable one but the cannery",
    "start": "1363430",
    "end": "1369320"
  },
  {
    "text": "is running unhealthy version here you can see the breakdown of the total requests so 20% and requests are now",
    "start": "1369320",
    "end": "1376910"
  },
  {
    "text": "processed by the version 2 of the application and the rest requests sto process by the version 1 so after one",
    "start": "1376910",
    "end": "1385520"
  },
  {
    "text": "minute we should be able to see that our canary deployment controller checks the",
    "start": "1385520",
    "end": "1391700"
  },
  {
    "text": "matrix it checks the value which can feel like almost hundred percent of the",
    "start": "1391700",
    "end": "1397280"
  },
  {
    "text": "requests are failing for canary deployments we need to rollback and what we'll see here is that version two of",
    "start": "1397280",
    "end": "1403820"
  },
  {
    "text": "the application of the port is now terminating while the version 1 has been created just 30 seconds 60 seconds old",
    "start": "1403820",
    "end": "1411110"
  },
  {
    "text": "so we have rolled back to the previous state of the system and let's see what",
    "start": "1411110",
    "end": "1416630"
  },
  {
    "text": "happens here so as I showed you I just did keeps it up I declared way I didn't",
    "start": "1416630",
    "end": "1422600"
  },
  {
    "text": "do anything extra but we see that now the application is recovering and if you scroll here we see that we have rolled",
    "start": "1422600",
    "end": "1430310"
  },
  {
    "text": "back to the previous state in the canary deployment and now our application is recovering and if we switch to our",
    "start": "1430310",
    "end": "1438200"
  },
  {
    "text": "application here we see that again hundred percent of the requests are processed by the version 1 on the",
    "start": "1438200",
    "end": "1443360"
  },
  {
    "text": "application so now let's see if we will be able to update it to the version 3",
    "start": "1443360",
    "end": "1449150"
  },
  {
    "text": "which is healthy one so I just update the docker image to version 3",
    "start": "1449150",
    "end": "1456640"
  },
  {
    "text": "and because it keeps it apply and wash",
    "start": "1457070",
    "end": "1462630"
  },
  {
    "text": "with what should we see here is the Russian three what has been created exactly the same ways as we seen before",
    "start": "1462630",
    "end": "1470010"
  },
  {
    "text": "with version 2 once it's ready it will stop processing requests and the old",
    "start": "1470010",
    "end": "1476670"
  },
  {
    "text": "port of version 1 will be terminated yep that's what we see here again in our",
    "start": "1476670",
    "end": "1483870"
  },
  {
    "text": "event block we see that controller is waiting for one minute and you're making",
    "start": "1483870",
    "end": "1489480"
  },
  {
    "text": "decision whether to proceed to the stable deployment or rollback and if we",
    "start": "1489480",
    "end": "1495660"
  },
  {
    "text": "go back to our application which we should see that 20% of the requests should be processed by the version 3",
    "start": "1495660",
    "end": "1503870"
  },
  {
    "text": "are we unlucky okay yeah here we go so 20% of the requests are processed by",
    "start": "1504080",
    "end": "1511020"
  },
  {
    "text": "the canary deployment which runs for some three now and if we go here you'll see this picture exactly so we we were",
    "start": "1511020",
    "end": "1519150"
  },
  {
    "text": "running version 1 then version 2 and we rolled back and now we are writing version 3 and in the arrow breakdown we",
    "start": "1519150",
    "end": "1527130"
  },
  {
    "text": "see that actually everything seems fine we don't see any new errors so after a minute we should be able to proceed with",
    "start": "1527130",
    "end": "1533880"
  },
  {
    "start": "1530000",
    "end": "1573000"
  },
  {
    "text": "a rollout if I go back I should see that",
    "start": "1533880",
    "end": "1539480"
  },
  {
    "text": "yep the matter check was successful now the controller has updated the stable",
    "start": "1539480",
    "end": "1546300"
  },
  {
    "text": "deployment and now we should see all of the ports of version 1 of the stable",
    "start": "1546300",
    "end": "1552150"
  },
  {
    "text": "deployment replaced by version 3 so eventually we'll see that we'll see 3 or",
    "start": "1552150",
    "end": "1559470"
  },
  {
    "text": "3 ports of version 3 for the stable deployment and all the positive version",
    "start": "1559470",
    "end": "1564960"
  },
  {
    "text": "1 being terminated once this is done we'll see that actually all of the",
    "start": "1564960",
    "end": "1570570"
  },
  {
    "text": "requests are being processed by the new version of the application let's see what happens with the stable deployment",
    "start": "1570570",
    "end": "1576780"
  },
  {
    "start": "1573000",
    "end": "1592000"
  },
  {
    "text": "this is what we see here so for now just one port is running version 3 to other",
    "start": "1576780",
    "end": "1583170"
  },
  {
    "text": "ports are still writing version 1 now we have 2 ports or an Englishman 3 and arrestor we will see that all of the",
    "start": "1583170",
    "end": "1589200"
  },
  {
    "text": "ports are running versions application so on the traffic timeline",
    "start": "1589200",
    "end": "1596309"
  },
  {
    "start": "1592000",
    "end": "1605000"
  },
  {
    "text": "what we'll see what we will see is that eventually all of their requests all of",
    "start": "1596309",
    "end": "1602460"
  },
  {
    "text": "the user requests will be processed by the version 3 and if you go to our",
    "start": "1602460",
    "end": "1607500"
  },
  {
    "start": "1605000",
    "end": "1623000"
  },
  {
    "text": "application this is what we see 100% of the requests are being served by the version 3 and this is the success path",
    "start": "1607500",
    "end": "1614340"
  },
  {
    "text": "for our Canary deployment controller ok I think we are done with the demo and",
    "start": "1614340",
    "end": "1619860"
  },
  {
    "text": "now let's switch back to the slides for a moment so these are some links from my demo",
    "start": "1619860",
    "end": "1627270"
  },
  {
    "start": "1623000",
    "end": "1775000"
  },
  {
    "text": "first this is the canary deployment controller that I have implemented please check it out and there are some",
    "start": "1627270",
    "end": "1632549"
  },
  {
    "text": "other companies I have used for this demo the interesting part here is that parameters adapter is a custom metrics",
    "start": "1632549",
    "end": "1639090"
  },
  {
    "text": "API server and from it is a curator is a CRT controller as well as help to control which is also CID controller so",
    "start": "1639090",
    "end": "1645690"
  },
  {
    "text": "I have used CID controllers created by other from either other companies of",
    "start": "1645690",
    "end": "1651900"
  },
  {
    "text": "other people and I have just integrated with them reuse them so this is really great extensibility of communities some",
    "start": "1651900",
    "end": "1659400"
  },
  {
    "text": "keto rakes key takeaways takeaways for implementing CID controllers so first of",
    "start": "1659400",
    "end": "1666240"
  },
  {
    "text": "all we reuse existing resources no need to reinvent the wheel meaning that in Canary deployment",
    "start": "1666240",
    "end": "1672659"
  },
  {
    "text": "controller I haven't been creating replicas as opposed directly I have just reused the normal deployment which runs",
    "start": "1672659",
    "end": "1679470"
  },
  {
    "text": "rolling update and it worked perfectly next keep it simple so rather than trying to encapsulate the entire logic",
    "start": "1679470",
    "end": "1686970"
  },
  {
    "text": "of your canary are allowed in your theory it might be a better idea to just implement this subset that needs to be",
    "start": "1686970",
    "end": "1694559"
  },
  {
    "text": "automated like in this example I don't manage service and ingress objects I",
    "start": "1694559",
    "end": "1699870"
  },
  {
    "text": "only own manage deployment objects next use abstractions in this example I have used given its metrics API which allows",
    "start": "1699870",
    "end": "1706740"
  },
  {
    "text": "for a lot of extensibility you can integrate with any other any metrics provider without a single line of code",
    "start": "1706740",
    "end": "1714030"
  },
  {
    "text": "in CID controller and finally use the power of open source I have read lots of",
    "start": "1714030",
    "end": "1721730"
  },
  {
    "text": "in communities mana rapport primarily primarily a deployment controller code",
    "start": "1721730",
    "end": "1727220"
  },
  {
    "text": "you reuse some patterns and I have uploaded my code on github as well so",
    "start": "1727220",
    "end": "1732350"
  },
  {
    "text": "you can use it as well so yeah just follow the best practices and you'll be",
    "start": "1732350",
    "end": "1738610"
  },
  {
    "text": "good finally yeah I think we still have some time for questions",
    "start": "1738610",
    "end": "1744720"
  },
  {
    "text": "[Applause]",
    "start": "1744720",
    "end": "1748349"
  },
  {
    "text": "yep that's okay",
    "start": "1754000",
    "end": "1762429"
  },
  {
    "text": "right so so the question the question is once the canary deployment has passed",
    "start": "1774269",
    "end": "1780969"
  },
  {
    "start": "1775000",
    "end": "2282000"
  },
  {
    "text": "the initial matter check whether the controller keeps monitoring it so for this proof of concept",
    "start": "1780969",
    "end": "1786429"
  },
  {
    "text": "I didn't implement that but obviously you can be extended and make it I think it can be made optional because probably",
    "start": "1786429",
    "end": "1791919"
  },
  {
    "text": "not in all cases you'd want to keep monitoring by the controller it could be ad like normally once you have finished",
    "start": "1791919",
    "end": "1797919"
  },
  {
    "text": "you're allowed I think the better way is to set up some alerts rather than full controller to keep monitoring the the",
    "start": "1797919",
    "end": "1804489"
  },
  {
    "text": "object so yeah I mean it there are different ways of addressing it yep yes",
    "start": "1804489",
    "end": "1813849"
  },
  {
    "text": "yes the great question so the question is whether instead of using ingress",
    "start": "1813849",
    "end": "1819209"
  },
  {
    "text": "capture control controller you can use East Joe yeah actually both East you and contour",
    "start": "1819209",
    "end": "1824499"
  },
  {
    "text": "eye using envoy underneath so it's like internal it will be exactly the same solution so actually for this is the",
    "start": "1824499",
    "end": "1832419"
  },
  {
    "text": "perfect example of this Yeti control that it doesn't manage ingress so you can just implement ingress with SEO or",
    "start": "1832419",
    "end": "1838149"
  },
  {
    "text": "any other way you are out your request to the final to the deployment and it",
    "start": "1838149",
    "end": "1843999"
  },
  {
    "text": "will just work fine without any code change yep",
    "start": "1843999",
    "end": "1850289"
  },
  {
    "text": "right yeah so the question is why the standard deployment only supports could recreate enrolling updated it doesn't",
    "start": "1860040",
    "end": "1866110"
  },
  {
    "text": "support blue green or canary or any other advanced researcher I think the answer is that it's probably quite hard",
    "start": "1866110",
    "end": "1873010"
  },
  {
    "text": "like everybody understand the concepts the generic concept of Bluegreen deployment and canary deployment but",
    "start": "1873010",
    "end": "1878460"
  },
  {
    "text": "most people have different implementation details and I think it's pretty hard to get the abstraction right",
    "start": "1878460",
    "end": "1883990"
  },
  {
    "text": "what actually and at this point they were for example metrics IP I I believe didn't even exist I think this is at the",
    "start": "1883990",
    "end": "1889690"
  },
  {
    "text": "time where we can actually start thinking about extending the set of supported strategies and it could be a",
    "start": "1889690",
    "end": "1896590"
  },
  {
    "text": "separate Syriac and it could be a normal deployment yep yes yep so in terms of",
    "start": "1896590",
    "end": "1913930"
  },
  {
    "text": "ppi it's it's very easy to do this was mostly a proof-of-concept i have implemented like within the last month",
    "start": "1913930",
    "end": "1920620"
  },
  {
    "text": "but yes we can easily extend it so the questions are it was whether we can check the metrics not just for canary",
    "start": "1920620",
    "end": "1927070"
  },
  {
    "text": "deployment but profit stable deployment as well yes it's very easy to implement it we can just reuse exactly the same code and we just provide the name of the",
    "start": "1927070",
    "end": "1933940"
  },
  {
    "text": "department which is a stable one rather than canary",
    "start": "1933940",
    "end": "1937950"
  },
  {
    "text": "with HTTP sure Oh with HPA yeah also a great question",
    "start": "1946390",
    "end": "1952490"
  },
  {
    "text": "so currently I think the my controller will be actually conflicting with the HPA because they will be fighting",
    "start": "1952490",
    "end": "1957770"
  },
  {
    "text": "against the replicas value but I yeah actually I have to thought about that but I haven't implemented yet yet yeah I",
    "start": "1957770",
    "end": "1963680"
  },
  {
    "text": "think we need to have some kind of flag saying that if we replicas like don't touch the replicas field or something",
    "start": "1963680",
    "end": "1969200"
  },
  {
    "text": "like that yeah it's very easy to implement",
    "start": "1969200",
    "end": "1972910"
  },
  {
    "text": "so the question is we do apply the declarative state in our script but now",
    "start": "1993780",
    "end": "1999610"
  },
  {
    "text": "our desired like our desired spec doesn't match the reality but this is",
    "start": "1999610",
    "end": "2005790"
  },
  {
    "text": "kind of part of the design of communities in community you have spec which is affected by a desired state of the status which is actual state and in",
    "start": "2005790",
    "end": "2013320"
  },
  {
    "text": "my case I don't roll back this back of the canary deployment object which manages the deployment underneath right",
    "start": "2013320",
    "end": "2018570"
  },
  {
    "text": "so it still says that yes the desired state is still version - even if it's failing but the status will say that hey I",
    "start": "2018570",
    "end": "2024600"
  },
  {
    "text": "cannot make it happen because you have a better image so I don't roll back the",
    "start": "2024600",
    "end": "2030690"
  },
  {
    "text": "canary deployments back itself I don't touch it at all just to be clear that this is I think it's consistent with",
    "start": "2030690",
    "end": "2036450"
  },
  {
    "text": "community CPI where you rather than touching this back you just report on this status that something is wrong",
    "start": "2036450",
    "end": "2041550"
  },
  {
    "text": "please go and fix your speck",
    "start": "2041550",
    "end": "2045860"
  },
  {
    "text": "the question is whether I considered integration with ham releases so the",
    "start": "2051140",
    "end": "2057210"
  },
  {
    "text": "answer the short answer is no but I think that it is possible for me is more",
    "start": "2057210",
    "end": "2064919"
  },
  {
    "text": "of that ham is hell is probably the wrong level of traction for this type of",
    "start": "2064920",
    "end": "2070020"
  },
  {
    "text": "theory because theory is managing like unisys objects directly rather than using so it you can use hell on top of",
    "start": "2070020",
    "end": "2078270"
  },
  {
    "text": "this theory for example in your help chart rather than having a deployment Hammel you can declare a canary",
    "start": "2078270",
    "end": "2084600"
  },
  {
    "text": "deployment URL and this is also should work but in between canary deployment",
    "start": "2084600",
    "end": "2090149"
  },
  {
    "text": "and deployment now I didn't consider you but because I didn't want to like break the abstraction effectively",
    "start": "2090150",
    "end": "2098240"
  },
  {
    "text": "yeah so the question is a deployment there are more probably less known",
    "start": "2105800",
    "end": "2112000"
  },
  {
    "text": "configuration files for example progress deadlines I think for now I just copy the progress there live from canal",
    "start": "2112000",
    "end": "2118280"
  },
  {
    "text": "deployment back up to both deployments and like well communities take care of these things but yeah we can probably",
    "start": "2118280",
    "end": "2125390"
  },
  {
    "text": "improve that as well",
    "start": "2125390",
    "end": "2128440"
  },
  {
    "text": "sorry HPA what",
    "start": "2131920",
    "end": "2135640"
  },
  {
    "text": "right so the question is HP is like also",
    "start": "2140230",
    "end": "2145310"
  },
  {
    "text": "using metrics and make it makes the decision whether to scale up or scale down right and during the rollout it",
    "start": "2145310",
    "end": "2152750"
  },
  {
    "text": "could happen that for example HP a will just like let's say that your new application is running out of memory",
    "start": "2152750",
    "end": "2158690"
  },
  {
    "text": "constantly and HP a controller keeps up just it's going up and up and up and it",
    "start": "2158690",
    "end": "2163850"
  },
  {
    "text": "means that metric can can be still showing that the applications healthy when it's not and I think for that we",
    "start": "2163850",
    "end": "2169670"
  },
  {
    "text": "can just like first of all in the HP you can specify the max number of replicas",
    "start": "2169670",
    "end": "2175190"
  },
  {
    "text": "you're happy to run and next here I have a delay to check so I like I think you",
    "start": "2175190",
    "end": "2180860"
  },
  {
    "text": "can increase the delay for example so if HP a scales up for like 5 minutes and 10 mins later is you see that even with",
    "start": "2180860",
    "end": "2187480"
  },
  {
    "text": "hundreds of replicas they still running out of memory this is definitely a reason to roll back so yeah it's a bit",
    "start": "2187480",
    "end": "2195080"
  },
  {
    "text": "tricky but I think you can get it right with the product numbers",
    "start": "2195080",
    "end": "2200410"
  },
  {
    "text": "that way my candidate percentage to be updated",
    "start": "2205710",
    "end": "2212329"
  },
  {
    "text": "you mean the neck Dominika dynamically update the yeah yeah yeah so this is",
    "start": "2213620",
    "end": "2224150"
  },
  {
    "text": "actually a different way of implementing canary deployment and it's definitely possible because a CRT controller only",
    "start": "2224150",
    "end": "2231440"
  },
  {
    "text": "manages deployment objects it doesn't manage the percentage of traffic so you can just imagine updating your ingress",
    "start": "2231440",
    "end": "2239770"
  },
  {
    "text": "route which has weighted weights configured right you can have some other",
    "start": "2239770",
    "end": "2245180"
  },
  {
    "text": "logic control or whatever which will update this percentage dynamically yeah it's not only possible it's like it's",
    "start": "2245180",
    "end": "2252260"
  },
  {
    "text": "not specific to this controller actually no no it's not part of this control it's",
    "start": "2252260",
    "end": "2259460"
  },
  {
    "text": "like you can implement I don't know Canary ingress or something Siri like yet another Siri or it could be again it",
    "start": "2259460",
    "end": "2267350"
  },
  {
    "text": "could be on the side of CI CD or whatever you prefer but it's out of scope of this particular jetty okay I",
    "start": "2267350",
    "end": "2275900"
  },
  {
    "text": "think we're done if you have any more questions please find me yeah thank you",
    "start": "2275900",
    "end": "2281170"
  },
  {
    "text": "[Applause]",
    "start": "2281170",
    "end": "2284749"
  }
]