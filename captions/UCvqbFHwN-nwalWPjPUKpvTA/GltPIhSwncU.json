[
  {
    "text": "so this is an intro session talking about the open policy agent just like a",
    "start": "0",
    "end": "5279"
  },
  {
    "text": "little show of hands how many people here have heard of the open policy agent before coming to this conference one two",
    "start": "5279",
    "end": "14519"
  },
  {
    "text": "three okay so this is totally new for most people so that's that's fine what I'm gonna do",
    "start": "14519",
    "end": "20130"
  },
  {
    "text": "today is talk a little bit about where the project started and explain the core",
    "start": "20130",
    "end": "27119"
  },
  {
    "text": "features that you get when you use OPA and then I'm gonna show how to integrate a service with OPA as well so we started",
    "start": "27119",
    "end": "36809"
  },
  {
    "text": "the project at a company called steerer where I work in early 2016 and the goal",
    "start": "36809",
    "end": "42540"
  },
  {
    "text": "was to basically create a reusable building block that you could use to enforce policies across a wide range of",
    "start": "42540",
    "end": "50879"
  },
  {
    "text": "Technology over the last year or so we've seen a lot of growth in terms of",
    "start": "50879",
    "end": "57210"
  },
  {
    "text": "the number of people that are using OPA or the open policy agent one example of",
    "start": "57210",
    "end": "64408"
  },
  {
    "text": "a company that's using OPA is Netflix so they were one of the earliest adopters of the project and they use OPA to",
    "start": "64409",
    "end": "70560"
  },
  {
    "text": "enforce authorization in a highly distributed environment so they have hundreds or thousands of micro services",
    "start": "70560",
    "end": "76740"
  },
  {
    "text": "that are written in all kinds of different languages that have different identity systems",
    "start": "76740",
    "end": "82020"
  },
  {
    "text": "that execute different ends of environments and they need to enforce rules to control who can access those",
    "start": "82020",
    "end": "87990"
  },
  {
    "text": "services internally at the company and so today they're using open to enforce API authorization policies over HTTP and",
    "start": "87990",
    "end": "95610"
  },
  {
    "text": "G RPC ap is they're also using open to enforce authorization policies over",
    "start": "95610",
    "end": "101280"
  },
  {
    "text": "Kafka so they have certain topics in Kafka that have a very high fan-out what",
    "start": "101280",
    "end": "106470"
  },
  {
    "text": "that means is that a right into Kafka gets seen by a large number of consumer services it's very expensive if a bad",
    "start": "106470",
    "end": "114869"
  },
  {
    "text": "right happens because they have to go and recover the system so they use open to protect the system from Bad Rights",
    "start": "114869",
    "end": "121340"
  },
  {
    "text": "and so today it's being it's integrated into their security platform and it's used across a number of different teams",
    "start": "121340",
    "end": "126689"
  },
  {
    "text": "and Netflix Medallia is another company using OPA they have a completely different use",
    "start": "126689",
    "end": "132780"
  },
  {
    "text": "case though they use open to an invariants over their infrastructure and their platform so for example they use",
    "start": "132780",
    "end": "140189"
  },
  {
    "text": "it with terraform for risk management if you've ever worked with terraform you'll",
    "start": "140189",
    "end": "145769"
  },
  {
    "text": "know that a very small change in a terraform file can have a huge impact on your infrastructure you can bring down a",
    "start": "145769",
    "end": "151200"
  },
  {
    "text": "scaling group you could bring down a you know a network service so you have to be very careful when you're changing terraform files what value does is they",
    "start": "151200",
    "end": "158879"
  },
  {
    "text": "basically have a policy they have a set of policies that compute a risk score for changes to terraform so the",
    "start": "158879",
    "end": "165629"
  },
  {
    "text": "terraform plan that contains add and remove operations is provided as input to OPA and then OPA evaluates the",
    "start": "165629",
    "end": "173280"
  },
  {
    "text": "policies and calculates a score or a number that represents how risky those changes are and then what they do is",
    "start": "173280",
    "end": "178560"
  },
  {
    "text": "they compare that number to the budget that the person making the change has so like a junior engineer has a very low",
    "start": "178560",
    "end": "185280"
  },
  {
    "text": "risk budget but a senior or a principal engineer has you know a high or infinite risk budget they're also using open to",
    "start": "185280",
    "end": "191730"
  },
  {
    "text": "audit their AWS network security group security posture and other other",
    "start": "191730",
    "end": "197129"
  },
  {
    "text": "infrastructure concerns that they have chef is another company using OPA again their use case is completely",
    "start": "197129",
    "end": "203250"
  },
  {
    "text": "different so they use open to enforce or to enable authorization over end-users of one of their products with OPA so",
    "start": "203250",
    "end": "209310"
  },
  {
    "text": "they they basically pass all the incoming requests into their product to open they ask should this request be allowed or denied so for them hope is",
    "start": "209310",
    "end": "216030"
  },
  {
    "text": "useful because it helps them get to market quicker they don't have to roll this authorization system from scratch and they're also using OPA to answer",
    "start": "216030",
    "end": "221959"
  },
  {
    "text": "audit questions like you know which users have access to which resources in the system so this is just three",
    "start": "221959",
    "end": "227879"
  },
  {
    "text": "examples of companies using OPA but even sort of public about it but we have others there companies like CloudFlare Intuit Pinterest State Street",
    "start": "227879",
    "end": "234629"
  },
  {
    "text": "which is a massive Bank in the North America SolarWinds Cisco and more all using open to enforce a variety of different",
    "start": "234629",
    "end": "239819"
  },
  {
    "text": "policies across different technology the project itself is part of the cloud native compute foundation we joined as a",
    "start": "239819",
    "end": "246449"
  },
  {
    "text": "sandbox tier project earlier this year and we're really excited to be part of the CN CF and we've been seeing a lot of",
    "start": "246449",
    "end": "252030"
  },
  {
    "text": "growth in the project over the past year or so as well so today we have about 36 different people have contributed to the",
    "start": "252030",
    "end": "257430"
  },
  {
    "text": "project we have over close to 400 people on slack today that are asking questions",
    "start": "257430",
    "end": "263780"
  },
  {
    "text": "answering questions for other people talking about use cases and so on we see 25,000 container downloads a week",
    "start": "263780",
    "end": "270120"
  },
  {
    "text": "for the project and we have over 20 integrations with open source projects in the ecosystem so what what is what is",
    "start": "270120",
    "end": "277740"
  },
  {
    "text": "the open policy agent what is Opa Opa is a general-purpose policy engine and so",
    "start": "277740",
    "end": "283140"
  },
  {
    "text": "what that means is that you can take OPA and you can use it to help enforce policies in any service in any system at",
    "start": "283140",
    "end": "290700"
  },
  {
    "text": "any layer of the stack so when you're using open what you're doing is you're decoupling policy decision-making from",
    "start": "290700",
    "end": "296880"
  },
  {
    "text": "policy enforcement so for example if you have a service and it receives an API request it might need to decide whether",
    "start": "296880",
    "end": "302940"
  },
  {
    "text": "to allow or deny that request and so the way this works is that when the service receives a request it executes a query",
    "start": "302940",
    "end": "308670"
  },
  {
    "text": "against open says should this request be allowed OPA takes the policies and the",
    "start": "308670",
    "end": "313680"
  },
  {
    "text": "data that it has access to it computes a decision like a lower deny which it sends back to the service to be enforced so when using open your decoupling",
    "start": "313680",
    "end": "320040"
  },
  {
    "text": "policy decision-making from policy enforcement so for example if you have a service that serves salary data when a",
    "start": "320040",
    "end": "326910"
  },
  {
    "text": "request comes in to say get Bob salary from Alice the salary service will query",
    "start": "326910",
    "end": "332130"
  },
  {
    "text": "OPA and when it does that it'll provide certain inputs it'll provide attributes that describe the request that's taking",
    "start": "332130",
    "end": "337710"
  },
  {
    "text": "place so they'll provide things like the method and the path and the user that's executing that API request in this case",
    "start": "337710",
    "end": "344370"
  },
  {
    "text": "the user is considered the authenticated user so OPA is not helping you solve authentication it's helping you solve",
    "start": "344370",
    "end": "349740"
  },
  {
    "text": "authorization who can do what and so that open would evaluate this and then it would produce a decision like true or",
    "start": "349740",
    "end": "355740"
  },
  {
    "text": "false to represent allow deny that ultimately get sent back to the salary service to be enforced now it's",
    "start": "355740",
    "end": "362520"
  },
  {
    "text": "important to keep in mind here that the service can refer to a number of different types of components in the system so we could refer to an internal",
    "start": "362520",
    "end": "368190"
  },
  {
    "text": "micro service that you've built it could refer to the API gateway that's terminating you know traffic from your customers it could refer to a message",
    "start": "368190",
    "end": "374220"
  },
  {
    "text": "broker it could refer to the kubernetes api server or it could just be a script in your CI CD pipeline so this is why we",
    "start": "374220",
    "end": "380700"
  },
  {
    "text": "call open general purpose because you can use it across all of these different parts of your system now in order to",
    "start": "380700",
    "end": "386070"
  },
  {
    "text": "make that happen we've made certain decisions with how opens design and so one of those decisions is that OPA is not coupled to any domain specific model",
    "start": "386070",
    "end": "393750"
  },
  {
    "text": "or any project specific model so when you execute a query against OPA you can actually supply arbitrary JSON data as",
    "start": "393750",
    "end": "399960"
  },
  {
    "text": "in so you can provide strings arrays numbers or deeply nested objects now",
    "start": "399960",
    "end": "405129"
  },
  {
    "text": "oppa doesn't understand what those things mean that's what your policies have to do they have to apply meaning to",
    "start": "405129",
    "end": "410779"
  },
  {
    "text": "that input but on its own opens not coupled to that to that those data models at all and then similarly the",
    "start": "410779",
    "end": "416449"
  },
  {
    "text": "decisions that open generates can also be arbitrary JSON data so you can have like a true or false decision for a",
    "start": "416449",
    "end": "421969"
  },
  {
    "text": "simple API authorization policy or you know you might generate a list of servers where a workload has to be",
    "start": "421969",
    "end": "427400"
  },
  {
    "text": "placed or you know the set of violations that have occurred in the system now",
    "start": "427400",
    "end": "433370"
  },
  {
    "text": "when you're using open once you do that through like one-time integration effort what you find yourself doing mostly is",
    "start": "433370",
    "end": "439159"
  },
  {
    "text": "writing policy writing rules that govern how the system should behave and so to do that oppan provides a purpose-built",
    "start": "439159",
    "end": "445370"
  },
  {
    "text": "declarative language that we call Rago and Rago is basically designed and built from scratch to help you codify policies",
    "start": "445370",
    "end": "452419"
  },
  {
    "text": "over this arbitrary kind of JSON data so it's really good at helping answer questions like can this user do this",
    "start": "452419",
    "end": "458689"
  },
  {
    "text": "operation on this resource or you know which invariants are violated by this",
    "start": "458689",
    "end": "464029"
  },
  {
    "text": "workload when it's created in kubernetes or we know which users can SSH into production hosts so opus very very good",
    "start": "464029",
    "end": "470240"
  },
  {
    "text": "or the language is very very good at helping you write down logic that express constraints over the system now",
    "start": "470240",
    "end": "477409"
  },
  {
    "text": "when you actually go to integrate with OPA you have different options but they're all kind of the same so whether you're going with a library integration",
    "start": "477409",
    "end": "483979"
  },
  {
    "text": "or a sidecar integration or a host level daemon integration the model is basically the same and the way that we",
    "start": "483979",
    "end": "489289"
  },
  {
    "text": "think of OPA is sort of as this host local cache for policy decisions so opens as close to the service as",
    "start": "489289",
    "end": "495979"
  },
  {
    "text": "possible and the reason for that is twofold so first of all you want to minimize the amount of latency that you",
    "start": "495979",
    "end": "501319"
  },
  {
    "text": "introduce into the request path in order to make the policy decision in a high frequency low latency use case like",
    "start": "501319",
    "end": "507680"
  },
  {
    "text": "micro service API authorization you can't pay a network hop every time you have to decide whether a request should",
    "start": "507680",
    "end": "513140"
  },
  {
    "text": "be allowed right the second reason is availability if every time your service has to make a decision it's got a call-out across the",
    "start": "513140",
    "end": "519529"
  },
  {
    "text": "network then if the network goes down or the host that opens running on goes down you're gonna have an error come back to",
    "start": "519529",
    "end": "526100"
  },
  {
    "text": "your service and you're not able to serve traffic right you're gonna have downtime and you don't so we think of oppa as this host local",
    "start": "526100",
    "end": "532480"
  },
  {
    "text": "cash and we recommend that you run it as close to the service as possible ideally on the same host now in order to make",
    "start": "532480",
    "end": "537940"
  },
  {
    "text": "that happen we've made certain decide decisions in oppa so the first design decision is that all the policy and data",
    "start": "537940",
    "end": "543730"
  },
  {
    "text": "that oppa uses to make decisions all of that is kept in memory okay so there's no external database that opens",
    "start": "543730",
    "end": "549790"
  },
  {
    "text": "connecting to in order to get policies from we found this is really valuable because every time someone takes oppa",
    "start": "549790",
    "end": "555190"
  },
  {
    "text": "and uses it they already have some place where they want to store policies that they want to treat as the source of truth for the policies in the context we",
    "start": "555190",
    "end": "562180"
  },
  {
    "text": "don't want to add yet another source of truth into the system or other source of persistence into the system with oppa",
    "start": "562180",
    "end": "568470"
  },
  {
    "text": "the second thing is that when oppa makes decisions it's not going to call out to any external systems okay all of the",
    "start": "568470",
    "end": "574930"
  },
  {
    "text": "policy and data that open needs to make a decision is stored in memory in the agent now you can take oppa and you can",
    "start": "574930",
    "end": "582220"
  },
  {
    "text": "extend it to call out to other systems we have built-in functions in the language that allow you to do things like execute an HTTP request but on its",
    "start": "582220",
    "end": "588610"
  },
  {
    "text": "own oppa is not going to do that it's all host local now that begs the question well where are the policies and",
    "start": "588610",
    "end": "593620"
  },
  {
    "text": "the data come from and so the answer to that is that we have a set of API is that you can implement to control and",
    "start": "593620",
    "end": "598630"
  },
  {
    "text": "monitor the oppa's so for example we have a bundle service API that you can use to send policy and data down to the",
    "start": "598630",
    "end": "605649"
  },
  {
    "text": "oppa we have a status service API that you can use to receive status updates",
    "start": "605649",
    "end": "610899"
  },
  {
    "text": "from the oppa so you can monitor them you can know what version of the policy they're running with whether there are any errors trying to activate the most",
    "start": "610899",
    "end": "617470"
  },
  {
    "text": "recent version of the bundle and so on and then we also have this log service API for receiving an audit log of all",
    "start": "617470",
    "end": "622839"
  },
  {
    "text": "the decisions that opens made over the last period of time and so this is very useful when you need to audit what",
    "start": "622839",
    "end": "629050"
  },
  {
    "text": "policy decisions have been made or when you need to debug the policy decisions are being made in the system because now",
    "start": "629050",
    "end": "634060"
  },
  {
    "text": "you have this what you can do that centrally and then in addition to the management API is we also have a set of tooling that you can use to build test",
    "start": "634060",
    "end": "640899"
  },
  {
    "text": "and debug your policies so we have an interactive shell or read eval print loop that allows you to experiment with",
    "start": "640899",
    "end": "645910"
  },
  {
    "text": "policies like command line we have a test framework so you can codify that your policies are actually correct we",
    "start": "645910",
    "end": "651579"
  },
  {
    "text": "have things to help you format your code execute dependency analysis static analysis and the policies do semantic",
    "start": "651579",
    "end": "657940"
  },
  {
    "text": "checks and so on we also have a VSO visual studio code extension which is really nice because it's very",
    "start": "657940",
    "end": "663310"
  },
  {
    "text": "you can kind of visually select policies and evaluate them and see what they return it's really useful when you're",
    "start": "663310",
    "end": "668320"
  },
  {
    "text": "when you're building up policies to be able to see very quickly what the policies are generating and then we also",
    "start": "668320",
    "end": "673390"
  },
  {
    "text": "have more advanced features like tracing that tell you exactly why a decision was made the way it was made and then in",
    "start": "673390",
    "end": "681370"
  },
  {
    "text": "addition to all of that tooling and core kind of language features we also have a number of integrations with different",
    "start": "681370",
    "end": "686830"
  },
  {
    "text": "projects in the ecosystem so as you can see these are kind of across the stack",
    "start": "686830",
    "end": "692260"
  },
  {
    "text": "but one very common use case for OPA is this problem of admission control so in Mission Control if you're not familiar with it is this problem where you know",
    "start": "692260",
    "end": "699160"
  },
  {
    "text": "anytime you create a resource in a kubernetes cluster you need to decide whether that resource should be created",
    "start": "699160",
    "end": "704980"
  },
  {
    "text": "and this is much more fine-grained than just regular authorization so admission control sees the full extent of the",
    "start": "704980",
    "end": "711970"
  },
  {
    "text": "resources that are being created right it sees the images that are being specified in containers it sees the host names that are contained in ingres",
    "start": "711970",
    "end": "718000"
  },
  {
    "text": "objects and so on right now what we're seeing a lot is that there are all these organizations",
    "start": "718000",
    "end": "723339"
  },
  {
    "text": "adopting kubernetes but typically there's a team in these organizations that's responsible for operating kubernetes and this applies whether",
    "start": "723339",
    "end": "729400"
  },
  {
    "text": "you're talking about on pram or hybrid or a managed version of kubernetes there's usually some team that's responsible for making sure that the",
    "start": "729400",
    "end": "735700"
  },
  {
    "text": "workloads and the services and so on they're deployed on top are well-behaved and following like the the policy that",
    "start": "735700",
    "end": "741130"
  },
  {
    "text": "the organization is set forth and so OPA helps them enforce those kinds of policies we also have a bunch of",
    "start": "741130",
    "end": "747880"
  },
  {
    "text": "integrations with different service and sort of application level networking projects like envoy and sto and Kong and",
    "start": "747880",
    "end": "754120"
  },
  {
    "text": "spring security and so the nice thing about these is that you can basically started forcing access control or API authorization over",
    "start": "754120",
    "end": "760210"
  },
  {
    "text": "your services without writing any code for those services you just as long as you're running on top of one of those platforms you can basically start",
    "start": "760210",
    "end": "765550"
  },
  {
    "text": "applying OPA policies to them now these are all fairly high level but we also",
    "start": "765550",
    "end": "771310"
  },
  {
    "text": "have a like a Linux Pam integration so Pam is this it's the system for controlling access to things like SSH",
    "start": "771310",
    "end": "777790"
  },
  {
    "text": "and sudo at the host level and so we have one user of OPA that restricts SSH",
    "start": "777790",
    "end": "783220"
  },
  {
    "text": "access based on an interesting policy what they do is they say that developers can SSH into hosts if they have a",
    "start": "783220",
    "end": "791020"
  },
  {
    "text": "certificate for an application that has an open ticket at that time and so",
    "start": "791020",
    "end": "796690"
  },
  {
    "text": "otherwise they can't for an application running on that machine with an open ticket it's a very fine-grained context-aware",
    "start": "796690",
    "end": "802090"
  },
  {
    "text": "example of policy that people are using over to enforce and then in addition recently we've started integrating with",
    "start": "802090",
    "end": "807490"
  },
  {
    "text": "a bunch of different projects in the data storage space so we have integrations with SEF Minaya Kafka a",
    "start": "807490",
    "end": "813040"
  },
  {
    "text": "sequel light and elastic search and the idea there is that people are using okhla to enforce fine-grained policies",
    "start": "813040",
    "end": "818260"
  },
  {
    "text": "over who can see what and what who can access sensitive data in the system okay",
    "start": "818260",
    "end": "824680"
  },
  {
    "text": "so how does OPA actually work to explain how open actually works I'm going to",
    "start": "824680",
    "end": "830110"
  },
  {
    "text": "kind of step through and give this example policy that says that employees are allowed to read their own salary as",
    "start": "830110",
    "end": "835240"
  },
  {
    "text": "well as the salary of anybody they manage in this in the salary service now",
    "start": "835240",
    "end": "840550"
  },
  {
    "text": "in English this policy sort of has two parts to it there's sort of two statements here so the first statement",
    "start": "840550",
    "end": "846970"
  },
  {
    "text": "says employees can read their own salary and the second statement says that they",
    "start": "846970",
    "end": "852070"
  },
  {
    "text": "can read the salary of anyone they manage and so what we're gonna do is we're gonna implement two rules in OPA",
    "start": "852070",
    "end": "858040"
  },
  {
    "text": "to enforce this policy now in order to implement those rules we need some input",
    "start": "858040",
    "end": "864490"
  },
  {
    "text": "data that we can reason about and so what we're gonna do is start with this input data that says the method is get and the path is the array salary Bob and",
    "start": "864490",
    "end": "872260"
  },
  {
    "text": "the user is Bob so the user is the authenticated user making the request we've already done authentication now we",
    "start": "872260",
    "end": "878410"
  },
  {
    "text": "want to authorize and we're representing the path as an array we'll see why in a second so this is the first rule that",
    "start": "878410",
    "end": "884980"
  },
  {
    "text": "we're gonna use this is going to implement the first statement and the way you can understand this rule is allow is true if input method matches",
    "start": "884980",
    "end": "893530"
  },
  {
    "text": "get and input path matches salary employee ID and input user matches",
    "start": "893530",
    "end": "900880"
  },
  {
    "text": "employee ID now the interesting thing about this rule is the second and third",
    "start": "900880",
    "end": "907870"
  },
  {
    "text": "expressions in the body of the rule the input path matches salary and input user matches employee ID what's interesting",
    "start": "907870",
    "end": "914440"
  },
  {
    "text": "about those expressions is that employee ID is a variable and when oppa evaluates",
    "start": "914440",
    "end": "921010"
  },
  {
    "text": "this rule it's gonna bind that variable to the same value in all of the",
    "start": "921010",
    "end": "926410"
  },
  {
    "text": "expressions so in this case when oppa evaluates the rule",
    "start": "926410",
    "end": "931470"
  },
  {
    "text": "employee ID is going to be bound to Bob and so if you just sort of step through",
    "start": "931470",
    "end": "937300"
  },
  {
    "text": "this in your head you'll see that well employee input method equals get an input path equals salary Bob an input",
    "start": "937300",
    "end": "945069"
  },
  {
    "text": "user equals Bob so all of the expressions in the body of the rule are",
    "start": "945069",
    "end": "950769"
  },
  {
    "text": "true so if the service asked for the value of allow it would get true back",
    "start": "950769",
    "end": "955779"
  },
  {
    "text": "and it would just allow the request right and that's what we want that's the first part of this policy now suppose a",
    "start": "955779",
    "end": "961929"
  },
  {
    "text": "different user asked for Bob salary so now Alice is asking for Bob's salary",
    "start": "961929",
    "end": "969660"
  },
  {
    "text": "what's going to happen well in this case the same thing is gonna happen it's gonna go and evaluate and employee",
    "start": "969660",
    "end": "976839"
  },
  {
    "text": "IDs gonna be bound to Bob but the last expression is no longer true right input",
    "start": "976839",
    "end": "982990"
  },
  {
    "text": "user does not equal Bob and so we say that that expression is going to fail and so if the service was asking for",
    "start": "982990",
    "end": "991480"
  },
  {
    "text": "allow Oprah would not be able to find a way to prove that allow should be equal to true because one of the expressions",
    "start": "991480",
    "end": "996939"
  },
  {
    "text": "in the body is false so in this case the request would be denied but suppose that",
    "start": "996939",
    "end": "1003449"
  },
  {
    "text": "that's actually Bob's manager so in order to implement the second part of",
    "start": "1003449",
    "end": "1009089"
  },
  {
    "text": "the policy what we're gonna do is make use of some context so on the bottom left you can see a little data structure",
    "start": "1009089",
    "end": "1014670"
  },
  {
    "text": "there and just imagine that that data somehow got loaded into oppa and now it's cached in memory in oppa so now we",
    "start": "1014670",
    "end": "1021899"
  },
  {
    "text": "have a notion of who manages who and we can extend the policy to use that so",
    "start": "1021899",
    "end": "1028319"
  },
  {
    "text": "we're gonna add a second rule to deal with the second part of the policy and that rule looks very similar you'll",
    "start": "1028319",
    "end": "1033750"
  },
  {
    "text": "notice on the top I've added an import line that's just aliasing the the manager's data for below so the second",
    "start": "1033750",
    "end": "1040678"
  },
  {
    "text": "rule says allow is true if input method matches get an input path matches salary",
    "start": "1040679",
    "end": "1046770"
  },
  {
    "text": "employee ID but now the third expression is a little bit different it says input user must match managers employee ID",
    "start": "1046770",
    "end": "1053070"
  },
  {
    "text": "underscore so what's interesting about this rule is that well employee IDs",
    "start": "1053070",
    "end": "1059309"
  },
  {
    "text": "gonna get evaluated the same way it's gonna get bound to Bob but that underscore is special what that underscore does is it tell",
    "start": "1059309",
    "end": "1065010"
  },
  {
    "text": "oppan to search the array referred to by data managers Bob for a value that makes",
    "start": "1065010",
    "end": "1070740"
  },
  {
    "text": "the body true so what's gonna happen is that opens gonna search over that array",
    "start": "1070740",
    "end": "1076170"
  },
  {
    "text": "and it's gonna find Alice and again if you look at the rule you'll see that",
    "start": "1076170",
    "end": "1082500"
  },
  {
    "text": "method is get and path the salary Bob and input user is Alice and so this time Oprah would be able to generate the",
    "start": "1082500",
    "end": "1088680"
  },
  {
    "text": "value true for allow so the expressions and the bodies of the rules are ANDed",
    "start": "1088680",
    "end": "1094380"
  },
  {
    "text": "together and then you can create multiple rules to express like logical or disjunction okay so if you're",
    "start": "1094380",
    "end": "1103740"
  },
  {
    "text": "interested in more details about how open works how the language works check out the website open policy agent",
    "start": "1103740",
    "end": "1109710"
  },
  {
    "text": "org we have a bunch of documentation on there that goes into detail about the",
    "start": "1109710",
    "end": "1114990"
  },
  {
    "text": "different constructs available to you as a policy author so check out how do I write policies that explains the",
    "start": "1114990",
    "end": "1120720"
  },
  {
    "text": "language in detail if you find yourself writing actual policies take a look at the language reference that has a",
    "start": "1120720",
    "end": "1125910"
  },
  {
    "text": "detailed got our list of all the built in functions in the language so if you need to do things like use regular",
    "start": "1125910",
    "end": "1131400"
  },
  {
    "text": "expressions or you need to parse you know JSON web tokens or you need to parse x.509 certificates and so on we",
    "start": "1131400",
    "end": "1137670"
  },
  {
    "text": "have built-in functions that are part of OPA that help you do that and then finally we also have tutorials if you",
    "start": "1137670",
    "end": "1143100"
  },
  {
    "text": "just want to kick the tires and try it out we have tutorials for things like HTTP API authorization kubernetes",
    "start": "1143100",
    "end": "1148560"
  },
  {
    "text": "admission control Kafka SSH and so on",
    "start": "1148560",
    "end": "1153650"
  },
  {
    "text": "okay so now I want to talk about how you can actually integrate with OPA so there",
    "start": "1153650",
    "end": "1160890"
  },
  {
    "text": "are sort of three different ways that you can write integrations with ova the simplest way is just to run OPA on the",
    "start": "1160890",
    "end": "1167610"
  },
  {
    "text": "command line so OPA has a as a sub command called eval that allows you to",
    "start": "1167610",
    "end": "1172620"
  },
  {
    "text": "provide a query and then it'll basically print the result of that query to standard out and so this is really",
    "start": "1172620",
    "end": "1178230"
  },
  {
    "text": "useful if you just want to enforce policies in like a C ICD pipeline right you get the OPA binary you run it and",
    "start": "1178230",
    "end": "1184530"
  },
  {
    "text": "you just check the output if you want you can also check you can make it fail you can better that you make it exit",
    "start": "1184530",
    "end": "1190800"
  },
  {
    "text": "with a non zero status code in certain cases but it's pretty easy to talk about up the second way of integrating OPA is",
    "start": "1190800",
    "end": "1197880"
  },
  {
    "text": "with is via HTTP so this allows you to",
    "start": "1197880",
    "end": "1203019"
  },
  {
    "text": "basically integrate oppa in any language in any framework in any in a runtime right you just execute a single HTTP",
    "start": "1203019",
    "end": "1208509"
  },
  {
    "text": "POST against oppa you can specify the name of the policy or you can just leave that out and then you provide arbitrary",
    "start": "1208509",
    "end": "1215739"
  },
  {
    "text": "JSON data as input and you get a decision out in order to do that you obviously have to run oppa as a daemon",
    "start": "1215739",
    "end": "1221859"
  },
  {
    "text": "or as a sidecar and when you do that you want to take security into account you want to make sure that you know not just",
    "start": "1221859",
    "end": "1227379"
  },
  {
    "text": "anybody can access the open API and change things so consider using a UNIX domain socket or if you run it over TCP",
    "start": "1227379",
    "end": "1236109"
  },
  {
    "text": "then use TLS with authentication and authorization enabled and then the third",
    "start": "1236109",
    "end": "1243459"
  },
  {
    "text": "way of integrating with oppa is by embedding it as a library and so I I",
    "start": "1243459",
    "end": "1249429"
  },
  {
    "text": "like this approach a lot because the open itself the code base is fairly lightweight there are very few",
    "start": "1249429",
    "end": "1254529"
  },
  {
    "text": "dependencies and the API that it gives you I think is fairly simple but it exposes basically all of the functionality that you get with oppa so",
    "start": "1254529",
    "end": "1262690"
  },
  {
    "text": "it's nice because there's no extra deployment steps right you don't have to worry about running you know a new daemon say on every machine or adding it",
    "start": "1262690",
    "end": "1269109"
  },
  {
    "text": "as a sidecar to all your container all your pods in kubernetes it's very easy to get up and running so this is what",
    "start": "1269109",
    "end": "1277079"
  },
  {
    "text": "HelloWorld with oppa as a library looks like so the first thing you need to do",
    "start": "1277079",
    "end": "1282339"
  },
  {
    "text": "is you have to import this github comm slash open policy agent slash oppa / Rago package and then once you've done",
    "start": "1282339",
    "end": "1288879"
  },
  {
    "text": "that you can start evaluating queries and so the first thing you have to do is construct a Rago object and here we're",
    "start": "1288879",
    "end": "1296889"
  },
  {
    "text": "just passing in a single query that says that you know a must be one and then",
    "start": "1296889",
    "end": "1301959"
  },
  {
    "text": "once you've constructed the Rago object you can evaluate it when you run evaluation you have to provide a go",
    "start": "1301959",
    "end": "1307959"
  },
  {
    "text": "context that's important because as I mentioned before it's possible for you",
    "start": "1307959",
    "end": "1313779"
  },
  {
    "text": "to extend OPA to call out to an external system during evaluation if you need to and so that's important to propagate the context there but it's also useful if",
    "start": "1313779",
    "end": "1321099"
  },
  {
    "text": "you need to cancel evaluation because it's maybe taking too long in an API authorization use case that's not user",
    "start": "1321099",
    "end": "1326499"
  },
  {
    "text": "the case open waits very quickly on the order of you know 50 microseconds or 100 microseconds but if you have policies",
    "start": "1326499",
    "end": "1332379"
  },
  {
    "text": "that are doing a large search over you know contextual data then that that's query can take a little while and you you",
    "start": "1332379",
    "end": "1338590"
  },
  {
    "text": "might want to be able to cancel it and so then once you get the answer back the result said or RS here you just have to",
    "start": "1338590",
    "end": "1344770"
  },
  {
    "text": "interpret that and so here we're checking if there's an error otherwise we're printing the result now the output",
    "start": "1344770",
    "end": "1350710"
  },
  {
    "text": "that open gives you it's kind of interesting so here we have a single result and in each result in a set there",
    "start": "1350710",
    "end": "1357850"
  },
  {
    "text": "are going to be two things that you get so the first thing is this set is that are the values of the expressions in the",
    "start": "1357850",
    "end": "1362890"
  },
  {
    "text": "query so in this case we just know that a equals one is true because it's trivial we also get the variable",
    "start": "1362890",
    "end": "1370360"
  },
  {
    "text": "bindings though so this tells you like in this case a was bound to one went oppa valuated that query okay let's look",
    "start": "1370360",
    "end": "1377530"
  },
  {
    "text": "at a slightly more interesting example so here we've taken the first rule from before and we've just stuffed that into",
    "start": "1377530",
    "end": "1384490"
  },
  {
    "text": "a query that says you know input method must be get path must be salary employee ID and input user must be employee ID",
    "start": "1384490",
    "end": "1390809"
  },
  {
    "text": "but now we're also supplying input when we run evaluation and so I've just created a map literal here that we saw",
    "start": "1390809",
    "end": "1398650"
  },
  {
    "text": "before we run evaluation and we can see now the output has three expression values in it it's saying that all of the",
    "start": "1398650",
    "end": "1404559"
  },
  {
    "text": "expressions are true but employee ID was bound to Bob okay if we have a different",
    "start": "1404559",
    "end": "1411970"
  },
  {
    "text": "user say Alice was was provided in the input then in this case there's no way for open to prove that these expressions",
    "start": "1411970",
    "end": "1420970"
  },
  {
    "text": "could be satisfied and so the empty or the result set would be empty so let's",
    "start": "1420970",
    "end": "1428140"
  },
  {
    "text": "look at how you but okay so the thing is like this is you know we've only shown a query and some input here you don't want to try to encode your entire policy into",
    "start": "1428140",
    "end": "1435280"
  },
  {
    "text": "a single query that would be very very painful and so what we're gonna do is",
    "start": "1435280",
    "end": "1440770"
  },
  {
    "text": "basically start providing other things so we're gonna basically define our policy from before in a string we call",
    "start": "1440770",
    "end": "1446380"
  },
  {
    "text": "those strings modules and we're also going to define some context here we're",
    "start": "1446380",
    "end": "1451420"
  },
  {
    "text": "going to instantiate oppa's in memory storage providing the manager list and then we're gonna go and construct the",
    "start": "1451420",
    "end": "1457540"
  },
  {
    "text": "regular object and so this time we're supplying 4/4 inputs to the Rago object we're providing the module the policy",
    "start": "1457540",
    "end": "1463060"
  },
  {
    "text": "we're providing the the storage we're providing the query this time it doesn't have any variables in it it says",
    "start": "1463060",
    "end": "1468389"
  },
  {
    "text": "assert that example dot allow is equal to true and then we're providing some input rather the same implement as",
    "start": "1468389",
    "end": "1474539"
  },
  {
    "text": "before and so the result here there are no variables so the variable binding list is empty but the one expression in",
    "start": "1474539",
    "end": "1481080"
  },
  {
    "text": "it happens to be true okay so how would you take this and now hook it up to an",
    "start": "1481080",
    "end": "1486539"
  },
  {
    "text": "actual application right this is just sort of hello world but we won't actually show how you would integrate this into an actual you know application",
    "start": "1486539",
    "end": "1492740"
  },
  {
    "text": "all right so I mentioned this already but basically the results said if it's empty in this case you would deny if it",
    "start": "1492740",
    "end": "1497759"
  },
  {
    "text": "was non-empty you would you would allow the request and so this is this is an",
    "start": "1497759",
    "end": "1503309"
  },
  {
    "text": "example of how you would integrate opah with the gorilla mocks package so I don't know if anybody here is familiar with gorilla mocks it's a really simple",
    "start": "1503309",
    "end": "1510450"
  },
  {
    "text": "HTTP router built on top of the standard library very few dependencies and so here we've",
    "start": "1510450",
    "end": "1516509"
  },
  {
    "text": "created a router we've registered the end point salary ID with it we provided",
    "start": "1516509",
    "end": "1523409"
  },
  {
    "text": "this salary get implementation below and then we've also registered this this piece of middleware that we called",
    "start": "1523409",
    "end": "1529230"
  },
  {
    "text": "authorize here so that third line in the main function registers an authorizer on",
    "start": "1529230",
    "end": "1534450"
  },
  {
    "text": "the router and so what we're gonna do is implement that authorizer using OPA so",
    "start": "1534450",
    "end": "1540330"
  },
  {
    "text": "this is what the authorizer has to do it's basically gonna get called before the other handlers that have been",
    "start": "1540330",
    "end": "1547860"
  },
  {
    "text": "registered by the application so before the actual application code runs this codes gonna run and so what it has to do",
    "start": "1547860",
    "end": "1555960"
  },
  {
    "text": "is first authorize the request it has to decide whether other question be if there was an error during that",
    "start": "1555960",
    "end": "1561869"
  },
  {
    "text": "process you know you'd return 500 or something if there was a if it was supposed to be denied you return 403",
    "start": "1561869",
    "end": "1567269"
  },
  {
    "text": "otherwise you just invoke the applications Handler and so this is what it looks like so again you go and",
    "start": "1567269",
    "end": "1573539"
  },
  {
    "text": "construct your Rago object you provide the policy that you want to have evaluated you provide the handle to the",
    "start": "1573539",
    "end": "1579899"
  },
  {
    "text": "storage that you want to use you provide the input which you're going to construct from the HTTP request that's",
    "start": "1579899",
    "end": "1585299"
  },
  {
    "text": "being serviced right now and then the query to run and then you just interpret that just like before so if there was an",
    "start": "1585299",
    "end": "1590669"
  },
  {
    "text": "error you return 500 if the result set is empty meaning there's no way that this could possibly be true then you",
    "start": "1590669",
    "end": "1597090"
  },
  {
    "text": "deny the request otherwise you like the application code and so that's it that's actually all",
    "start": "1597090",
    "end": "1602130"
  },
  {
    "text": "you'd have to do to get a simple integration going with with an HTTP package like gorilla MUX so if you'd",
    "start": "1602130",
    "end": "1611250"
  },
  {
    "text": "like to look at this example in more detail I've posted it on my github account torrent piece and I'll slash",
    "start": "1611250",
    "end": "1616559"
  },
  {
    "text": "koukin Shanghai 2018 if you're interested in integrating or embedding open as a library go look at the go doc",
    "start": "1616559",
    "end": "1623789"
  },
  {
    "text": "examples for the project they go into fairly good detail with examples of how",
    "start": "1623789",
    "end": "1629039"
  },
  {
    "text": "to do that and if you're interested in seeing like a full-blown integration for an go for HTTP API authorization look at",
    "start": "1629039",
    "end": "1637110"
  },
  {
    "text": "the example API Ozzy go repo under the open policy agent organization that has",
    "start": "1637110",
    "end": "1642480"
  },
  {
    "text": "examples of what I showed you just now as well as how you can configure open to pull down policies from a bundle server",
    "start": "1642480",
    "end": "1647549"
  },
  {
    "text": "report status for port decision logs and so on and that's it",
    "start": "1647549",
    "end": "1653519"
  },
  {
    "text": "so thank you very much I'm happy to take questions or answer anything like that we do have this slack organization that",
    "start": "1653519",
    "end": "1659309"
  },
  {
    "text": "I mentioned before so if you have questions after the conference please join the slack org lots of friendly people on there that's the github repo",
    "start": "1659309",
    "end": "1666389"
  },
  {
    "text": "you can check out the code go star the repo if you if you like it and if you're interested in contributing we have a",
    "start": "1666389",
    "end": "1671909"
  },
  {
    "text": "bunch of issues that are tagged as low-hanging fruit as well as Help Wanted and so those are great places to get",
    "start": "1671909",
    "end": "1677190"
  },
  {
    "text": "started with contribution so thank you",
    "start": "1677190",
    "end": "1681950"
  },
  {
    "text": "[Applause] yeah it might be like an existing CEO",
    "start": "1683500",
    "end": "1692669"
  },
  {
    "text": "questions first great work I think there's a space for this the question is do you see this getting into the space",
    "start": "1692669",
    "end": "1700200"
  },
  {
    "text": "of rules management because it feels a lot like rules management where you provide the facts and you provide the",
    "start": "1700200",
    "end": "1706139"
  },
  {
    "text": "policy and you ask for evaluation of those facts against the policy what do",
    "start": "1706139",
    "end": "1712919"
  },
  {
    "text": "you mean by rules management because the rules management and rules measurements it's it's it's like it's kind of a so",
    "start": "1712919",
    "end": "1718529"
  },
  {
    "text": "problem in so many ways so like you said like these are the rules these are my facts could be like hundred megabytes of",
    "start": "1718529",
    "end": "1725220"
  },
  {
    "text": "facts like match them against my rules and then you get results could be like red scoring so a credit score it's a",
    "start": "1725220",
    "end": "1731909"
  },
  {
    "text": "great example for rules manager you know and just like if thinking where",
    "start": "1731909",
    "end": "1738640"
  },
  {
    "text": "you would like the project to go if you see you getting to more complex use case such as like time window base",
    "start": "1738640",
    "end": "1746250"
  },
  {
    "text": "authorizations because you need to start thinking about like a stream of data instead of just a plane like a set of",
    "start": "1746250",
    "end": "1754480"
  },
  {
    "text": "facts mmm yeah so people have looked at OPA and compared it to like projects like drools and for example I think that",
    "start": "1754480",
    "end": "1761800"
  },
  {
    "text": "OPA it's a you know a hole in the ecosystem today I don't think there's a good alternative really in the open",
    "start": "1761800",
    "end": "1768670"
  },
  {
    "text": "source ecosystem today in terms of like drools is a very heavyweight system for example like definitely not embedding it",
    "start": "1768670",
    "end": "1774280"
  },
  {
    "text": "as a library easily opens very easily embeddable we've seen a lot of traction with OPA around admission control and",
    "start": "1774280",
    "end": "1781210"
  },
  {
    "text": "enforcing invariance over infrastructure part of that has to do with the way the language is designed it's very good at",
    "start": "1781210",
    "end": "1786370"
  },
  {
    "text": "that certain rule systems aren't as aren't as good of a fit for that they don't allow you to you know take one",
    "start": "1786370",
    "end": "1792970"
  },
  {
    "text": "policy and then use it for both enforcement online as well as offline auditing for example so opens a great",
    "start": "1792970",
    "end": "1799000"
  },
  {
    "text": "bit for that and it's also quite performant so you know like at Netflix",
    "start": "1799000",
    "end": "1805180"
  },
  {
    "text": "they have certain policies that have to you know that always have to execute an under you know certainly no more than a millisecond right but under 100",
    "start": "1805180",
    "end": "1811540"
  },
  {
    "text": "microseconds in a lot of cases and so we've put a lot of work into making sure that opens performing enough for those high frequency low latency use cases so",
    "start": "1811540",
    "end": "1817990"
  },
  {
    "text": "I definitely think that there's a there's a fit for it and the users seem to agree as well so if you have policies",
    "start": "1817990",
    "end": "1834880"
  },
  {
    "text": "that you want to to enforce like let's say throughout your your infrastructure or in in every service",
    "start": "1834880",
    "end": "1842490"
  },
  {
    "text": "so since OPA seems to be very service dependent so the services themselves are",
    "start": "1842490",
    "end": "1848140"
  },
  {
    "text": "supposed to you know call upon OPA to see if these you know conditions pass muster etc is there any way of enforcing",
    "start": "1848140",
    "end": "1856860"
  },
  {
    "text": "those services to to properly use OPA I mean to make sure that like you know some team that doesn't know what they're",
    "start": "1856860",
    "end": "1862990"
  },
  {
    "text": "doing comes onboard and deploy services that aren't OPA compliant the way that you would want them to be yeah and so are you talking",
    "start": "1862990",
    "end": "1869440"
  },
  {
    "text": "about like API authorization or more just more generally like in the case of API authorization yeah just complete",
    "start": "1869440",
    "end": "1875050"
  },
  {
    "text": "just completely broadly yeah so you know things like external admission control and kubernetes right like a developer",
    "start": "1875050",
    "end": "1880780"
  },
  {
    "text": "can't opt out of that right once the administrator deploys OPA and configures it with policies then you know all the",
    "start": "1880780",
    "end": "1885910"
  },
  {
    "text": "workloads that are being deployed or subject to those policies and there's no way to get out of that with API authorization if you're using a service",
    "start": "1885910",
    "end": "1891910"
  },
  {
    "text": "you know service smash project like sto or using envoy or something like that then again it's outside of the",
    "start": "1891910",
    "end": "1896950"
  },
  {
    "text": "application developers control right it's happening before their code even executes and even if you've got a",
    "start": "1896950",
    "end": "1902080"
  },
  {
    "text": "library integration like with spring or something like that or guerilla right it's not really the application developer writing that code necessarily",
    "start": "1902080",
    "end": "1907780"
  },
  {
    "text": "to do the call out to oh but it's you know one team that manages the frameworks on the runtimes inside of the",
    "start": "1907780",
    "end": "1913179"
  },
  {
    "text": "sign up the inside of the organization so yeah so I think that but at the end of the day you know if they don't do",
    "start": "1913179",
    "end": "1919059"
  },
  {
    "text": "that integration correctly then you know it's not gonna get it properly right so if if you want to make sure that that if",
    "start": "1919059",
    "end": "1925450"
  },
  {
    "text": "your finance and you don't want anybody to make withdrawals over ten million dollars or something somebody could",
    "start": "1925450",
    "end": "1931540"
  },
  {
    "text": "still write a service though that allows that you wouldn't be able to say but you",
    "start": "1931540",
    "end": "1937840"
  },
  {
    "text": "wouldn't be able to enforce that across all services you have to go into the service the deals with for drawls and",
    "start": "1937840",
    "end": "1943540"
  },
  {
    "text": "then make sure that it's you know talking about right right exactly okay I see what you mean yeah I am",
    "start": "1943540",
    "end": "1954400"
  },
  {
    "text": "service yeah what policies do I have like so externalize policy configuration",
    "start": "1954400",
    "end": "1960100"
  },
  {
    "text": "you you could do that usually we don't even recommend that you provide a name when you invoke oh but you just provide",
    "start": "1960100",
    "end": "1965260"
  },
  {
    "text": "a bunch of input attributes and then over returns a decision to you that's been sort of the best practice that we've seen that way that you don't have",
    "start": "1965260",
    "end": "1971320"
  },
  {
    "text": "to configure the services very much it's just you know hostname and port or something like that to call OPA and then",
    "start": "1971320",
    "end": "1977650"
  },
  {
    "text": "provide JSON and get JSON out done I think we're running on time so I'm happy",
    "start": "1977650",
    "end": "1983620"
  },
  {
    "text": "to do questions afterwards as well thank you",
    "start": "1983620",
    "end": "1989160"
  },
  {
    "text": "[Applause]",
    "start": "1990170",
    "end": "1993369"
  }
]