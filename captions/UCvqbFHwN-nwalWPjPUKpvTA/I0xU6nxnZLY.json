[
  {
    "text": "alright let's get started thanks for",
    "start": "350",
    "end": "3629"
  },
  {
    "text": "coming today I know there's a lot of",
    "start": "3629",
    "end": "5279"
  },
  {
    "text": "talks to choose from and I'm happy to",
    "start": "5279",
    "end": "7350"
  },
  {
    "text": "present to you",
    "start": "7350",
    "end": "8250"
  },
  {
    "text": "so I'm Stephen day or Steve ooh you've",
    "start": "8250",
    "end": "11309"
  },
  {
    "text": "probably seen me on github in docker or",
    "start": "11309",
    "end": "15049"
  },
  {
    "text": "container D or you know various places",
    "start": "15049",
    "end": "18060"
  },
  {
    "text": "maybe gr PC or something like that and",
    "start": "18060",
    "end": "20820"
  },
  {
    "text": "today I'll be talking a little bit just",
    "start": "20820",
    "end": "22710"
  },
  {
    "text": "kind of an overview about container D",
    "start": "22710",
    "end": "24090"
  },
  {
    "text": "and then hopefully I can give you some",
    "start": "24090",
    "end": "25590"
  },
  {
    "text": "pointers on where to go with the project",
    "start": "25590",
    "end": "27420"
  },
  {
    "text": "and you know what you can do with it and",
    "start": "27420",
    "end": "30060"
  },
  {
    "text": "if we have time in the end I'll do like",
    "start": "30060",
    "end": "32308"
  },
  {
    "text": "a couple of little demos and just show",
    "start": "32309",
    "end": "34110"
  },
  {
    "text": "you the basics of it so a little bit of",
    "start": "34110",
    "end": "37590"
  },
  {
    "text": "history so the project was started in",
    "start": "37590",
    "end": "40469"
  },
  {
    "text": "April April 2016 and was released with",
    "start": "40469",
    "end": "44070"
  },
  {
    "text": "docker 111 and so basically provide",
    "start": "44070",
    "end": "47670"
  },
  {
    "text": "provided like a supervisor or management",
    "start": "47670",
    "end": "50250"
  },
  {
    "text": "of osci Runcie processes we wanted to",
    "start": "50250",
    "end": "54329"
  },
  {
    "text": "expand the project as of December 2010",
    "start": "54329",
    "end": "57030"
  },
  {
    "text": "and with that we started the like",
    "start": "57030",
    "end": "59489"
  },
  {
    "text": "container d 1.0 work stream and which",
    "start": "59489",
    "end": "63329"
  },
  {
    "text": "was finalized or released in December of",
    "start": "63329",
    "end": "67100"
  },
  {
    "text": "2017 and then we've recently had a",
    "start": "67100",
    "end": "69750"
  },
  {
    "text": "release in December or sorry and uh just",
    "start": "69750",
    "end": "72659"
  },
  {
    "text": "just a week ago at the end of April",
    "start": "72659",
    "end": "74250"
  },
  {
    "text": "which includes CRI support and I'll talk",
    "start": "74250",
    "end": "76229"
  },
  {
    "text": "a little bit about that here's the",
    "start": "76229",
    "end": "78799"
  },
  {
    "text": "github URL watch out for pretenders this",
    "start": "78799",
    "end": "83220"
  },
  {
    "text": "is the real container D it's a container",
    "start": "83220",
    "end": "84780"
  },
  {
    "text": "to slash container D so in you can go",
    "start": "84780",
    "end": "87720"
  },
  {
    "text": "there anything you want to talk about",
    "start": "87720",
    "end": "89130"
  },
  {
    "text": "the project file bugs send us pull",
    "start": "89130",
    "end": "92430"
  },
  {
    "text": "requests complain whatever we're willing",
    "start": "92430",
    "end": "95820"
  },
  {
    "text": "to take your contributions because",
    "start": "95820",
    "end": "98340"
  },
  {
    "text": "that's great",
    "start": "98340",
    "end": "100680"
  },
  {
    "text": "so why did we do this why why another",
    "start": "100680",
    "end": "103770"
  },
  {
    "text": "container runtime so the the the main",
    "start": "103770",
    "end": "107430"
  },
  {
    "text": "issue was the docker in roughly in 2016",
    "start": "107430",
    "end": "110850"
  },
  {
    "text": "that the docker engine was really",
    "start": "110850",
    "end": "112140"
  },
  {
    "text": "becoming a monolith and we wanted to",
    "start": "112140",
    "end": "113729"
  },
  {
    "text": "spin things out of there so we could",
    "start": "113729",
    "end": "115079"
  },
  {
    "text": "make different components useful without",
    "start": "115079",
    "end": "117450"
  },
  {
    "text": "having to stand up the entire docker",
    "start": "117450",
    "end": "118799"
  },
  {
    "text": "engine we also wanted to have other use",
    "start": "118799",
    "end": "121380"
  },
  {
    "text": "cases such as like the kubernetes CRI",
    "start": "121380",
    "end": "123860"
  },
  {
    "text": "build kit which is another project that",
    "start": "123860",
    "end": "126659"
  },
  {
    "text": "does build as well as other stuff we",
    "start": "126659",
    "end": "129780"
  },
  {
    "text": "haven't thought of so and we wanted to",
    "start": "129780",
    "end": "132660"
  },
  {
    "text": "donate it to a",
    "start": "132660",
    "end": "133620"
  },
  {
    "text": "datian so with broad industry support so",
    "start": "133620",
    "end": "136349"
  },
  {
    "text": "we have lots of contributors like IBM",
    "start": "136349",
    "end": "138319"
  },
  {
    "text": "Microsoft Amazon VMware and Google and",
    "start": "138319",
    "end": "144299"
  },
  {
    "text": "people from the communities community as",
    "start": "144299",
    "end": "145920"
  },
  {
    "text": "well so our technical goals were to",
    "start": "145920",
    "end": "150390"
  },
  {
    "text": "ensure that we had a really clean G RPC",
    "start": "150390",
    "end": "153090"
  },
  {
    "text": "based API in client library we wanted",
    "start": "153090",
    "end": "155400"
  },
  {
    "text": "full",
    "start": "155400",
    "end": "155940"
  },
  {
    "text": "OC I support so that like it kind of",
    "start": "155940",
    "end": "158670"
  },
  {
    "text": "felt OC I native works really good with",
    "start": "158670",
    "end": "160500"
  },
  {
    "text": "SDI primitives and they don't feel",
    "start": "160500",
    "end": "162090"
  },
  {
    "text": "tacked on we also folk wanted to focus",
    "start": "162090",
    "end": "164790"
  },
  {
    "text": "on stability and performance with like a",
    "start": "164790",
    "end": "167190"
  },
  {
    "text": "really well-defined core and kind of a",
    "start": "167190",
    "end": "170459"
  },
  {
    "text": "void feature creep over time and part of",
    "start": "170459",
    "end": "173340"
  },
  {
    "text": "that was designing it for like decoupled",
    "start": "173340",
    "end": "175859"
  },
  {
    "text": "systems so we wanted the image the file",
    "start": "175859",
    "end": "177840"
  },
  {
    "text": "system the runtime to be available for",
    "start": "177840",
    "end": "180870"
  },
  {
    "text": "plug ability and reuse so I another way",
    "start": "180870",
    "end": "184620"
  },
  {
    "text": "of putting that is container D is very",
    "start": "184620",
    "end": "186480"
  },
  {
    "text": "ala carte so you can choose you can use",
    "start": "186480",
    "end": "188640"
  },
  {
    "text": "the whole thing or you can choose which",
    "start": "188640",
    "end": "189900"
  },
  {
    "text": "parts depending on your problem space or",
    "start": "189900",
    "end": "191700"
  },
  {
    "text": "what systems you're integrating with we",
    "start": "191700",
    "end": "193920"
  },
  {
    "text": "also wanted to have be agile with actual",
    "start": "193920",
    "end": "196560"
  },
  {
    "text": "runtimes so in container to you we don't",
    "start": "196560",
    "end": "199440"
  },
  {
    "text": "actually touch osc I configs we just",
    "start": "199440",
    "end": "202019"
  },
  {
    "text": "pass them through which actually means",
    "start": "202019",
    "end": "203760"
  },
  {
    "text": "you don't have to do an OC I configure",
    "start": "203760",
    "end": "205440"
  },
  {
    "text": "on your runtime you can do other kinds",
    "start": "205440",
    "end": "206940"
  },
  {
    "text": "of runtimes that take different",
    "start": "206940",
    "end": "208139"
  },
  {
    "text": "configurations so for example like",
    "start": "208139",
    "end": "210389"
  },
  {
    "text": "Windows doesn't have an OC I configure",
    "start": "210389",
    "end": "212160"
  },
  {
    "text": "has its own kind of configuration but it",
    "start": "212160",
    "end": "214019"
  },
  {
    "text": "also allows us to do things like adding",
    "start": "214019",
    "end": "217290"
  },
  {
    "text": "support for cata containers took no no",
    "start": "217290",
    "end": "220109"
  },
  {
    "text": "changes in lines of code we just added",
    "start": "220109",
    "end": "221940"
  },
  {
    "text": "it and it worked because it was run C",
    "start": "221940",
    "end": "223560"
  },
  {
    "text": "compatible and I've already said that",
    "start": "223560",
    "end": "226440"
  },
  {
    "text": "part we do use Prometheus for metrics",
    "start": "226440",
    "end": "228720"
  },
  {
    "text": "I'll mention that so we have to try to",
    "start": "228720",
    "end": "231329"
  },
  {
    "text": "use other CN CF projects inside of",
    "start": "231329",
    "end": "233849"
  },
  {
    "text": "container D where it makes sense so",
    "start": "233849",
    "end": "235319"
  },
  {
    "text": "again well OC I is not CN CF but it's",
    "start": "235319",
    "end": "238019"
  },
  {
    "text": "very closely related but G RPC for API",
    "start": "238019",
    "end": "240750"
  },
  {
    "text": "and Prometheus for metrics so the kinds",
    "start": "240750",
    "end": "244260"
  },
  {
    "text": "of use cases that container D fits into",
    "start": "244260",
    "end": "246569"
  },
  {
    "text": "is so I this big umbrella of container",
    "start": "246569",
    "end": "249989"
  },
  {
    "text": "API implementations we can put like",
    "start": "249989",
    "end": "252510"
  },
  {
    "text": "docker mobi under their kubernetes CRI",
    "start": "252510",
    "end": "255919"
  },
  {
    "text": "Alibaba",
    "start": "255919",
    "end": "257070"
  },
  {
    "text": "pouch has been cropping up lately that's",
    "start": "257070",
    "end": "258870"
  },
  {
    "text": "kind of an interesting project and then",
    "start": "258870",
    "end": "261479"
  },
  {
    "text": "also like swarm kit and other stuff and",
    "start": "261479",
    "end": "264210"
  },
  {
    "text": "then the other the other two big use",
    "start": "264210",
    "end": "265919"
  },
  {
    "text": "cases we're looking at",
    "start": "265919",
    "end": "267300"
  },
  {
    "text": "there's more use cases that I've left",
    "start": "267300",
    "end": "268500"
  },
  {
    "text": "off of here that you know people can try",
    "start": "268500",
    "end": "270300"
  },
  {
    "text": "out but building images so this is this",
    "start": "270300",
    "end": "273990"
  },
  {
    "text": "is what build kit does it leverages",
    "start": "273990",
    "end": "275490"
  },
  {
    "text": "container D heavily and the models and",
    "start": "275490",
    "end": "278120"
  },
  {
    "text": "architecture within container D and then",
    "start": "278120",
    "end": "280500"
  },
  {
    "text": "as well as container us I was trying to",
    "start": "280500",
    "end": "282389"
  },
  {
    "text": "generalize basically what Linux kit is",
    "start": "282389",
    "end": "284610"
  },
  {
    "text": "doing so Linux kid actually runs its",
    "start": "284610",
    "end": "287039"
  },
  {
    "text": "internal services as containers and this",
    "start": "287039",
    "end": "289199"
  },
  {
    "text": "has been a long ask of docker it was it",
    "start": "289199",
    "end": "291659"
  },
  {
    "text": "was it was it was kind of a problem with",
    "start": "291659",
    "end": "293039"
  },
  {
    "text": "docker because you would start up docker",
    "start": "293039",
    "end": "294990"
  },
  {
    "text": "and try and run system services and",
    "start": "294990",
    "end": "296639"
  },
  {
    "text": "actually implement that you'd have to",
    "start": "296639",
    "end": "297720"
  },
  {
    "text": "have two Dockers but with with the",
    "start": "297720",
    "end": "299669"
  },
  {
    "text": "architecture and container D you only",
    "start": "299669",
    "end": "301919"
  },
  {
    "text": "need one container D and it can run all",
    "start": "301919",
    "end": "304169"
  },
  {
    "text": "of these different things on the host",
    "start": "304169",
    "end": "306060"
  },
  {
    "text": "and then there's also like IBM cloud is",
    "start": "306060",
    "end": "308099"
  },
  {
    "text": "an example of a cloud provider that uses",
    "start": "308099",
    "end": "310050"
  },
  {
    "text": "container D so there's a lot lots of",
    "start": "310050",
    "end": "311580"
  },
  {
    "text": "different use cases it fits into a lot",
    "start": "311580",
    "end": "313050"
  },
  {
    "text": "of spaces because of its flexibility so",
    "start": "313050",
    "end": "316650"
  },
  {
    "text": "a little bit about the architecture so",
    "start": "316650",
    "end": "318360"
  },
  {
    "text": "there's kind of a three layer",
    "start": "318360",
    "end": "319199"
  },
  {
    "text": "architecture at the top we have like",
    "start": "319199",
    "end": "322319"
  },
  {
    "text": "what you interact with being a G RPC and",
    "start": "322319",
    "end": "324990"
  },
  {
    "text": "the metrics API and then in the middle",
    "start": "324990",
    "end": "327180"
  },
  {
    "text": "we have a suite of services that are",
    "start": "327180",
    "end": "330180"
  },
  {
    "text": "loosely coupled and some of them",
    "start": "330180",
    "end": "332639"
  },
  {
    "text": "interact depending on what's needed but",
    "start": "332639",
    "end": "334380"
  },
  {
    "text": "we can roughly divide them into 3 parts",
    "start": "334380",
    "end": "336569"
  },
  {
    "text": "there's storage which is images and",
    "start": "336569",
    "end": "339240"
  },
  {
    "text": "snapshot file systems and diffs for",
    "start": "339240",
    "end": "341460"
  },
  {
    "text": "building images then there's a metadata",
    "start": "341460",
    "end": "343380"
  },
  {
    "text": "portion which declares containers and",
    "start": "343380",
    "end": "345779"
  },
  {
    "text": "images and how they relate to other",
    "start": "345779",
    "end": "348360"
  },
  {
    "text": "parts of the system and then there's a",
    "start": "348360",
    "end": "351330"
  },
  {
    "text": "tasks API and the tasks API is the",
    "start": "351330",
    "end": "353969"
  },
  {
    "text": "actual runtime of the actual runtime",
    "start": "353969",
    "end": "356759"
  },
  {
    "text": "manipulation so and all of this sits on",
    "start": "356759",
    "end": "360120"
  },
  {
    "text": "top of the operating system and then",
    "start": "360120",
    "end": "361830"
  },
  {
    "text": "interacts with the runtimes and then",
    "start": "361830",
    "end": "363629"
  },
  {
    "text": "across all of the services we have an",
    "start": "363629",
    "end": "365159"
  },
  {
    "text": "event service so container D can",
    "start": "365159",
    "end": "367229"
  },
  {
    "text": "actually you can consume events and then",
    "start": "367229",
    "end": "369449"
  },
  {
    "text": "you can actually generate events back in",
    "start": "369449",
    "end": "371550"
  },
  {
    "text": "new container D so that like if you have",
    "start": "371550",
    "end": "373080"
  },
  {
    "text": "another component that's kind of outside",
    "start": "373080",
    "end": "375659"
  },
  {
    "text": "of container D it can generate its own",
    "start": "375659",
    "end": "377190"
  },
  {
    "text": "events and you can consume those within",
    "start": "377190",
    "end": "378840"
  },
  {
    "text": "another component that you've integrated",
    "start": "378840",
    "end": "380190"
  },
  {
    "text": "with so continuty is what's called a",
    "start": "380190",
    "end": "385050"
  },
  {
    "text": "client heavy architecture meaning that",
    "start": "385050",
    "end": "387810"
  },
  {
    "text": "well stepping back we really wanted to",
    "start": "387810",
    "end": "390599"
  },
  {
    "text": "avoid having abstractions that prevented",
    "start": "390599",
    "end": "392699"
  },
  {
    "text": "people from doing what they want this",
    "start": "392699",
    "end": "394349"
  },
  {
    "text": "was a huge problem in docker because",
    "start": "394349",
    "end": "395669"
  },
  {
    "text": "you'd kind of squint it people's",
    "start": "395669",
    "end": "397349"
  },
  {
    "text": "problems and you'd say oh I don't know",
    "start": "397349",
    "end": "399330"
  },
  {
    "text": "if it fits into the abstraction like I",
    "start": "399330",
    "end": "400740"
  },
  {
    "text": "don't",
    "start": "400740",
    "end": "400950"
  },
  {
    "text": "is the right way to do it and eventually",
    "start": "400950",
    "end": "402540"
  },
  {
    "text": "you end up with a very inflexible system",
    "start": "402540",
    "end": "404820"
  },
  {
    "text": "but with container D we kind of said all",
    "start": "404820",
    "end": "406890"
  },
  {
    "text": "right well let's go down a level and say",
    "start": "406890",
    "end": "408930"
  },
  {
    "text": "you can interact with what's necessary",
    "start": "408930",
    "end": "410940"
  },
  {
    "text": "in container D and container deep only",
    "start": "410940",
    "end": "412710"
  },
  {
    "text": "provides what's necessary but then the",
    "start": "412710",
    "end": "414750"
  },
  {
    "text": "client can actually integrate with the",
    "start": "414750",
    "end": "416430"
  },
  {
    "text": "operating system to provide",
    "start": "416430",
    "end": "417930"
  },
  {
    "text": "functionality and so we've worked very",
    "start": "417930",
    "end": "422040"
  },
  {
    "text": "hard to build a solid client library to",
    "start": "422040",
    "end": "424770"
  },
  {
    "text": "make this a reality but it means that",
    "start": "424770",
    "end": "426620"
  },
  {
    "text": "you can so rather than building plugins",
    "start": "426620",
    "end": "429240"
  },
  {
    "text": "everywhere to add functionality you can",
    "start": "429240",
    "end": "431040"
  },
  {
    "text": "build your own code and do everything",
    "start": "431040",
    "end": "433980"
  },
  {
    "text": "you want and then interact with the",
    "start": "433980",
    "end": "435420"
  },
  {
    "text": "container D abstractions so here's a",
    "start": "435420",
    "end": "439470"
  },
  {
    "text": "couple of links take a picture or you",
    "start": "439470",
    "end": "443280"
  },
  {
    "text": "can probably find them with with some",
    "start": "443280",
    "end": "444840"
  },
  {
    "text": "careful Google foo but the one on top is",
    "start": "444840",
    "end": "448650"
  },
  {
    "text": "a getting started guide everything I'm",
    "start": "448650",
    "end": "450390"
  },
  {
    "text": "talking about here will be in the",
    "start": "450390",
    "end": "453060"
  },
  {
    "text": "getting started guide and I suggest you",
    "start": "453060",
    "end": "454920"
  },
  {
    "text": "go through it if you really want to",
    "start": "454920",
    "end": "455910"
  },
  {
    "text": "understand container D deeply and then",
    "start": "455910",
    "end": "457770"
  },
  {
    "text": "also the go dock is great and so this go",
    "start": "457770",
    "end": "461250"
  },
  {
    "text": "dock link takes you directly to the",
    "start": "461250",
    "end": "462600"
  },
  {
    "text": "client and that'll be how to implement",
    "start": "462600",
    "end": "465650"
  },
  {
    "text": "containers with that and in these",
    "start": "465650",
    "end": "470250"
  },
  {
    "text": "examples we'll all use interfaces that",
    "start": "470250",
    "end": "472710"
  },
  {
    "text": "are defined in the go dock so a little",
    "start": "472710",
    "end": "475830"
  },
  {
    "text": "bit about kind of how these services fit",
    "start": "475830",
    "end": "478590"
  },
  {
    "text": "together like a it looks like just a",
    "start": "478590",
    "end": "480630"
  },
  {
    "text": "bunch of services what do they do looks",
    "start": "480630",
    "end": "482400"
  },
  {
    "text": "really complicated and and so I think",
    "start": "482400",
    "end": "484980"
  },
  {
    "text": "pulling an image is a great example it's",
    "start": "484980",
    "end": "486540"
  },
  {
    "text": "a really complicated thing it's it's",
    "start": "486540",
    "end": "488100"
  },
  {
    "text": "magic and docker and recreating that",
    "start": "488100",
    "end": "491820"
  },
  {
    "text": "magic and defining the different parts",
    "start": "491820",
    "end": "493860"
  },
  {
    "text": "of it is very very important to a good",
    "start": "493860",
    "end": "495990"
  },
  {
    "text": "container system so the way I like to",
    "start": "495990",
    "end": "501030"
  },
  {
    "text": "think of it is this data flow diagram on",
    "start": "501030",
    "end": "503190"
  },
  {
    "text": "the bottom we have the services and then",
    "start": "503190",
    "end": "505230"
  },
  {
    "text": "the colored boxes are the like client",
    "start": "505230",
    "end": "507990"
  },
  {
    "text": "heavy implementation and then we have",
    "start": "507990",
    "end": "509970"
  },
  {
    "text": "our goal at the end which is mounts and",
    "start": "509970",
    "end": "513150"
  },
  {
    "text": "mounts are just things you pass the",
    "start": "513150",
    "end": "514830"
  },
  {
    "text": "container to make up the root filesystem",
    "start": "514830",
    "end": "516120"
  },
  {
    "text": "so to run a container your goal is to",
    "start": "516120",
    "end": "518490"
  },
  {
    "text": "get a root filesystem and so you say",
    "start": "518490",
    "end": "520590"
  },
  {
    "text": "when you say pull you're going to start",
    "start": "520590",
    "end": "522870"
  },
  {
    "text": "doing three things or sorry two things",
    "start": "522870",
    "end": "524940"
  },
  {
    "text": "your first operation is going to be to",
    "start": "524940",
    "end": "527100"
  },
  {
    "text": "fetch the image data from the from a",
    "start": "527100",
    "end": "530070"
  },
  {
    "text": "remote register it with the content",
    "start": "530070",
    "end": "531840"
  },
  {
    "text": "store which is where",
    "start": "531840",
    "end": "533710"
  },
  {
    "text": "we store securely store all of the image",
    "start": "533710",
    "end": "537460"
  },
  {
    "text": "metadata or sorry all of the image like",
    "start": "537460",
    "end": "541030"
  },
  {
    "text": "layer files manifests manifest lists etc",
    "start": "541030",
    "end": "545590"
  },
  {
    "text": "and then we register that with the image",
    "start": "545590",
    "end": "547660"
  },
  {
    "text": "store so that's just a link back to that",
    "start": "547660",
    "end": "549310"
  },
  {
    "text": "and then we also do an unpack process",
    "start": "549310",
    "end": "552160"
  },
  {
    "text": "and so what that'll do is take the",
    "start": "552160",
    "end": "554920"
  },
  {
    "text": "contents such as a layer and then it'll",
    "start": "554920",
    "end": "556480"
  },
  {
    "text": "apply it to a model we call snapshots",
    "start": "556480",
    "end": "559150"
  },
  {
    "text": "and snapshots what they do is provide",
    "start": "559150",
    "end": "560950"
  },
  {
    "text": "something similar to what's in graph",
    "start": "560950",
    "end": "562960"
  },
  {
    "text": "drivers and and this gives you the the",
    "start": "562960",
    "end": "566440"
  },
  {
    "text": "ability to have a kind of a revision",
    "start": "566440",
    "end": "569680"
  },
  {
    "text": "container file system and I'll talk a",
    "start": "569680",
    "end": "571540"
  },
  {
    "text": "little bit about that later so so the",
    "start": "571540",
    "end": "576160"
  },
  {
    "text": "snapshot airs are you know who's who's",
    "start": "576160",
    "end": "581020"
  },
  {
    "text": "familiar with graph drivers like just",
    "start": "581020",
    "end": "582550"
  },
  {
    "text": "sheriff hands ok so yeah so snap",
    "start": "582550",
    "end": "585730"
  },
  {
    "text": "shutters is so I won't explain it with",
    "start": "585730",
    "end": "588430"
  },
  {
    "text": "based on graph drivers but snapchatters",
    "start": "588430",
    "end": "590470"
  },
  {
    "text": "are just a way of saying I have a base",
    "start": "590470",
    "end": "594220"
  },
  {
    "text": "layer and then I have a set of change",
    "start": "594220",
    "end": "597190"
  },
  {
    "text": "sets on top of that and how they relate",
    "start": "597190",
    "end": "599050"
  },
  {
    "text": "to each other and so it lets you build",
    "start": "599050",
    "end": "601660"
  },
  {
    "text": "up a root filesystem from that and the",
    "start": "601660",
    "end": "605350"
  },
  {
    "text": "the architecture is relatively simple",
    "start": "605350",
    "end": "606760"
  },
  {
    "text": "all you have is a metadata store that",
    "start": "606760",
    "end": "609430"
  },
  {
    "text": "contains references into the snapshot ER",
    "start": "609430",
    "end": "612250"
  },
  {
    "text": "and into the content store and what in",
    "start": "612250",
    "end": "614860"
  },
  {
    "text": "based on that pull flow you can actually",
    "start": "614860",
    "end": "617500"
  },
  {
    "text": "pull your image config which becomes a",
    "start": "617500",
    "end": "620020"
  },
  {
    "text": "no CI config and then your route FS",
    "start": "620020",
    "end": "622330"
  },
  {
    "text": "which is a set of mounts so here's an",
    "start": "622330",
    "end": "626050"
  },
  {
    "text": "example of investigating the root",
    "start": "626050",
    "end": "628090"
  },
  {
    "text": "filesystem we can do CTR snapshot LS and",
    "start": "628090",
    "end": "631720"
  },
  {
    "text": "that will tell us what snapshots are and",
    "start": "631720",
    "end": "634150"
  },
  {
    "text": "what container file systems are there",
    "start": "634150",
    "end": "635560"
  },
  {
    "text": "and we can see the relationships if",
    "start": "635560",
    "end": "637450"
  },
  {
    "text": "anybody remembers docker tree the",
    "start": "637450",
    "end": "639970"
  },
  {
    "text": "command that was removed we can actually",
    "start": "639970",
    "end": "642130"
  },
  {
    "text": "do that a lot better because of the",
    "start": "642130",
    "end": "643510"
  },
  {
    "text": "abstractions in container D and we can",
    "start": "643510",
    "end": "644860"
  },
  {
    "text": "support it and then you can actually",
    "start": "644860",
    "end": "646930"
  },
  {
    "text": "take that and you can generate a mount",
    "start": "646930",
    "end": "648280"
  },
  {
    "text": "command so I can I can mount a",
    "start": "648280",
    "end": "650370"
  },
  {
    "text": "containers filesystem without actually",
    "start": "650370",
    "end": "652420"
  },
  {
    "text": "running a container which is pretty",
    "start": "652420",
    "end": "654040"
  },
  {
    "text": "pretty which is useful so running",
    "start": "654040",
    "end": "657670"
  },
  {
    "text": "running container is pretty similar but",
    "start": "657670",
    "end": "659980"
  },
  {
    "text": "I wanted to highlight part of the all",
    "start": "659980",
    "end": "662380"
  },
  {
    "text": "the cart of container D here we see an",
    "start": "662380",
    "end": "665530"
  },
  {
    "text": "overview of",
    "start": "665530",
    "end": "667600"
  },
  {
    "text": "The Container Service which is a",
    "start": "667600",
    "end": "669610"
  },
  {
    "text": "metadata service and the task service",
    "start": "669610",
    "end": "671140"
  },
  {
    "text": "which is our like run time controller",
    "start": "671140",
    "end": "672520"
  },
  {
    "text": "and what actually happens is you give it",
    "start": "672520",
    "end": "675490"
  },
  {
    "text": "a run time config into the containers",
    "start": "675490",
    "end": "677530"
  },
  {
    "text": "service and then when you start up at a",
    "start": "677530",
    "end": "680380"
  },
  {
    "text": "container using the task service you use",
    "start": "680380",
    "end": "682360"
  },
  {
    "text": "the mounts that are consumed from the",
    "start": "682360",
    "end": "683650"
  },
  {
    "text": "snapshot and then you pass then you",
    "start": "683650",
    "end": "685390"
  },
  {
    "text": "convert all of that down to the runtime",
    "start": "685390",
    "end": "686830"
  },
  {
    "text": "config and then you can run these",
    "start": "686830",
    "end": "688420"
  },
  {
    "text": "various things and that this this is",
    "start": "688420",
    "end": "690730"
  },
  {
    "text": "this loosely what it looks like on the",
    "start": "690730",
    "end": "693310"
  },
  {
    "text": "backend and just to give you a kind of",
    "start": "693310",
    "end": "696160"
  },
  {
    "text": "an idea of how that how the",
    "start": "696160",
    "end": "697570"
  },
  {
    "text": "relationships might work the same we do",
    "start": "697570",
    "end": "700900"
  },
  {
    "text": "way we do pull here's how we do is start",
    "start": "700900",
    "end": "703360"
  },
  {
    "text": "on a can or a run rather on a container",
    "start": "703360",
    "end": "705520"
  },
  {
    "text": "so we start out and we initialize so",
    "start": "705520",
    "end": "708760"
  },
  {
    "text": "we'll grab the images and snapshots",
    "start": "708760",
    "end": "710290"
  },
  {
    "text": "we'll build a new container file system",
    "start": "710290",
    "end": "711880"
  },
  {
    "text": "into the snapshot store which will fork",
    "start": "711880",
    "end": "713470"
  },
  {
    "text": "off of an existing image snapshot and",
    "start": "713470",
    "end": "715360"
  },
  {
    "text": "then we set it up so we build this",
    "start": "715360",
    "end": "718060"
  },
  {
    "text": "container we build an OC I config from",
    "start": "718060",
    "end": "719950"
  },
  {
    "text": "that and then and we get mounts and then",
    "start": "719950",
    "end": "723820"
  },
  {
    "text": "we actually start the container and then",
    "start": "723820",
    "end": "725260"
  },
  {
    "text": "out the out the arrow on the other end",
    "start": "725260",
    "end": "727480"
  },
  {
    "text": "we have running containers hopefully all",
    "start": "727480",
    "end": "730570"
  },
  {
    "text": "right so I'm gonna actually leave the",
    "start": "730570",
    "end": "732130"
  },
  {
    "text": "demo to the end because these are rather",
    "start": "732130",
    "end": "734560"
  },
  {
    "text": "short but what I want I do want to show",
    "start": "734560",
    "end": "737440"
  },
  {
    "text": "you a couple of I've talked a lot about",
    "start": "737440",
    "end": "739030"
  },
  {
    "text": "code in the client heavy architecture",
    "start": "739030",
    "end": "740800"
  },
  {
    "text": "and I just want to show you how simple",
    "start": "740800",
    "end": "742620"
  },
  {
    "text": "pulling an image running containers is",
    "start": "742620",
    "end": "745090"
  },
  {
    "text": "and you know it's it doesn't you know it",
    "start": "745090",
    "end": "748600"
  },
  {
    "text": "like with docker you drive like an API",
    "start": "748600",
    "end": "751120"
  },
  {
    "text": "where is this like I can go into this",
    "start": "751120",
    "end": "753730"
  },
  {
    "text": "code and I can modify how everything",
    "start": "753730",
    "end": "756160"
  },
  {
    "text": "happens I can change everything I could",
    "start": "756160",
    "end": "758560"
  },
  {
    "text": "you know I could send out a tweet every",
    "start": "758560",
    "end": "760450"
  },
  {
    "text": "time I pull an image or something like",
    "start": "760450",
    "end": "761680"
  },
  {
    "text": "that somebody should do that it'd be",
    "start": "761680",
    "end": "763900"
  },
  {
    "text": "annoying but cool so so the way this",
    "start": "763900",
    "end": "767950"
  },
  {
    "text": "works is you start out and you create a",
    "start": "767950",
    "end": "769210"
  },
  {
    "text": "client and then you can you can add a",
    "start": "769210",
    "end": "772480"
  },
  {
    "text": "defer for closing that client container",
    "start": "772480",
    "end": "775570"
  },
  {
    "text": "Diaz namespaced",
    "start": "775570",
    "end": "776560"
  },
  {
    "text": "meaning that it's very much like",
    "start": "776560",
    "end": "778390"
  },
  {
    "text": "kubernetes and that I can run multiple",
    "start": "778390",
    "end": "779980"
  },
  {
    "text": "different clients on top of it and they",
    "start": "779980",
    "end": "782230"
  },
  {
    "text": "don't conflict with each other so like",
    "start": "782230",
    "end": "783970"
  },
  {
    "text": "you can run docker and cubelet next to",
    "start": "783970",
    "end": "785560"
  },
  {
    "text": "each other next to a builder and they",
    "start": "785560",
    "end": "787810"
  },
  {
    "text": "won't see their containers and actually",
    "start": "787810",
    "end": "789370"
  },
  {
    "text": "docker runs internal containers that you",
    "start": "789370",
    "end": "791980"
  },
  {
    "text": "won't see in the regular like docker PS",
    "start": "791980",
    "end": "794530"
  },
  {
    "text": "that are hidden by this namespacing",
    "start": "794530",
    "end": "797200"
  },
  {
    "text": "feature so then you declare this",
    "start": "797200",
    "end": "799360"
  },
  {
    "text": "namespace which is example",
    "start": "799360",
    "end": "800740"
  },
  {
    "text": "and then you just call client dot pol",
    "start": "800740",
    "end": "802600"
  },
  {
    "text": "and then on the left side of the slide",
    "start": "802600",
    "end": "804220"
  },
  {
    "text": "we have a very similar a command line",
    "start": "804220",
    "end": "807610"
  },
  {
    "text": "example so running a container is very",
    "start": "807610",
    "end": "811450"
  },
  {
    "text": "similar like it continues to build on",
    "start": "811450",
    "end": "814420"
  },
  {
    "text": "this accommodator api so you use the",
    "start": "814420",
    "end": "816610"
  },
  {
    "text": "same client that you declared before you",
    "start": "816610",
    "end": "819220"
  },
  {
    "text": "can here we specify that we're going to",
    "start": "819220",
    "end": "821920"
  },
  {
    "text": "use a particular image which was defined",
    "start": "821920",
    "end": "824080"
  },
  {
    "text": "off the screen and then we can grab this",
    "start": "824080",
    "end": "827590"
  },
  {
    "text": "specification directly from the image",
    "start": "827590",
    "end": "829420"
  },
  {
    "text": "config so that's actually so I can",
    "start": "829420",
    "end": "831850"
  },
  {
    "text": "actually define my own OCI generations",
    "start": "831850",
    "end": "835090"
  },
  {
    "text": "like I don't have to use an image I can",
    "start": "835090",
    "end": "836980"
  },
  {
    "text": "define my own OCI generation process or",
    "start": "836980",
    "end": "839530"
  },
  {
    "text": "I can like modify it with my own SEC",
    "start": "839530",
    "end": "841900"
  },
  {
    "text": "profiles or whatever you want so you can",
    "start": "841900",
    "end": "844120"
  },
  {
    "text": "build new Combinator's and and really",
    "start": "844120",
    "end": "846100"
  },
  {
    "text": "customize what's happening and we delete",
    "start": "846100",
    "end": "848140"
  },
  {
    "text": "the container when we exit the function",
    "start": "848140",
    "end": "850510"
  },
  {
    "text": "and then so once we have a container the",
    "start": "850510",
    "end": "852790"
  },
  {
    "text": "container is like a metadata object and",
    "start": "852790",
    "end": "854380"
  },
  {
    "text": "we can use it to generate tasks and so",
    "start": "854380",
    "end": "857340"
  },
  {
    "text": "you call container dot new tasks and",
    "start": "857340",
    "end": "859870"
  },
  {
    "text": "that's your actual runtime handle one",
    "start": "859870",
    "end": "862450"
  },
  {
    "text": "interesting point that we did with",
    "start": "862450",
    "end": "863650"
  },
  {
    "text": "container D is we split out the concept",
    "start": "863650",
    "end": "865780"
  },
  {
    "text": "of the metadata object and the actual",
    "start": "865780",
    "end": "867670"
  },
  {
    "text": "runtime objects due to performance and",
    "start": "867670",
    "end": "870670"
  },
  {
    "text": "the reason for this is in docker",
    "start": "870670",
    "end": "872980"
  },
  {
    "text": "container the container object is a",
    "start": "872980",
    "end": "875710"
  },
  {
    "text": "super object meaning it ended up having",
    "start": "875710",
    "end": "877840"
  },
  {
    "text": "lots of locks so anytime you want to",
    "start": "877840",
    "end": "879460"
  },
  {
    "text": "modify it you have to grab all those",
    "start": "879460",
    "end": "880780"
  },
  {
    "text": "locks and you have to deal with the",
    "start": "880780",
    "end": "881890"
  },
  {
    "text": "runtime State anytime you want to like",
    "start": "881890",
    "end": "884500"
  },
  {
    "text": "start a container stop a container",
    "start": "884500",
    "end": "885850"
  },
  {
    "text": "you're grabbing all these locks and we",
    "start": "885850",
    "end": "887620"
  },
  {
    "text": "avoid this in container D as much as",
    "start": "887620",
    "end": "889090"
  },
  {
    "text": "possible so the next step is you wait on",
    "start": "889090",
    "end": "893380"
  },
  {
    "text": "the task and that just calls a wait API",
    "start": "893380",
    "end": "896800"
  },
  {
    "text": "and that gives you back a channel and",
    "start": "896800",
    "end": "898870"
  },
  {
    "text": "then you can wait on that channel later",
    "start": "898870",
    "end": "901270"
  },
  {
    "text": "I think we have an example following",
    "start": "901270",
    "end": "902560"
  },
  {
    "text": "this and then you can call task dot",
    "start": "902560",
    "end": "904480"
  },
  {
    "text": "start so this is this very similar to",
    "start": "904480",
    "end": "906760"
  },
  {
    "text": "when you like create a container and",
    "start": "906760",
    "end": "908050"
  },
  {
    "text": "docker and then you start a container in",
    "start": "908050",
    "end": "910060"
  },
  {
    "text": "docker and you can do anything in",
    "start": "910060",
    "end": "911350"
  },
  {
    "text": "between there and and really hook into",
    "start": "911350",
    "end": "913450"
  },
  {
    "text": "anything so here here we just like the",
    "start": "913450",
    "end": "916930"
  },
  {
    "text": "last example we have we have our tasks",
    "start": "916930",
    "end": "920020"
  },
  {
    "text": "that wait in our exit status channel",
    "start": "920020",
    "end": "922930"
  },
  {
    "text": "that we can actually use and so what",
    "start": "922930",
    "end": "924070"
  },
  {
    "text": "were going to do is we can wait on the",
    "start": "924070",
    "end": "927460"
  },
  {
    "text": "task sleep a little bit and then we can",
    "start": "927460",
    "end": "929560"
  },
  {
    "text": "send it a sig term which which goes to",
    "start": "929560",
    "end": "931330"
  },
  {
    "text": "the GRP C API and does the correct thing",
    "start": "931330",
    "end": "934269"
  },
  {
    "text": "and then we can actually wait on that",
    "start": "934269",
    "end": "935529"
  },
  {
    "text": "channel and see and then when this",
    "start": "935529",
    "end": "938170"
  },
  {
    "text": "channel returns an object it returns a",
    "start": "938170",
    "end": "941529"
  },
  {
    "text": "little status object and then out of",
    "start": "941529",
    "end": "942820"
  },
  {
    "text": "that you can get the exit code and the",
    "start": "942820",
    "end": "945070"
  },
  {
    "text": "time of exit and that kind of thing and",
    "start": "945070",
    "end": "947440"
  },
  {
    "text": "then we have a fancy print statement",
    "start": "947440",
    "end": "949190"
  },
  {
    "text": "[Music]",
    "start": "949190",
    "end": "950279"
  },
  {
    "text": "another thing about this Combinator API",
    "start": "950279",
    "end": "953019"
  },
  {
    "text": "is that you can do things like you can",
    "start": "953019",
    "end": "955870"
  },
  {
    "text": "define your own functions that you can",
    "start": "955870",
    "end": "957940"
  },
  {
    "text": "do on top of a spec so there's an",
    "start": "957940",
    "end": "959350"
  },
  {
    "text": "example of a accommodator that you can",
    "start": "959350",
    "end": "962260"
  },
  {
    "text": "pass into creating a new container that",
    "start": "962260",
    "end": "966459"
  },
  {
    "text": "will generate an H top config and you",
    "start": "966459",
    "end": "969100"
  },
  {
    "text": "can so you can exec in and just run H",
    "start": "969100",
    "end": "971110"
  },
  {
    "text": "table with with a TTY and there's all",
    "start": "971110",
    "end": "973810"
  },
  {
    "text": "sorts of cool things you can do you can",
    "start": "973810",
    "end": "975070"
  },
  {
    "text": "do it you can define networking",
    "start": "975070",
    "end": "976709"
  },
  {
    "text": "accommodators like this so so here's an",
    "start": "976709",
    "end": "978910"
  },
  {
    "text": "example of with host namespace but we",
    "start": "978910",
    "end": "980860"
  },
  {
    "text": "can we can do this in CRE I believe",
    "start": "980860",
    "end": "983560"
  },
  {
    "text": "there's places where we used similar",
    "start": "983560",
    "end": "985510"
  },
  {
    "text": "Combinator's to actually hook into CNI",
    "start": "985510",
    "end": "988410"
  },
  {
    "text": "so a little bit about the project since",
    "start": "988410",
    "end": "992709"
  },
  {
    "text": "this is an intro so we have a very",
    "start": "992709",
    "end": "995620"
  },
  {
    "text": "well-defined release process and we",
    "start": "995620",
    "end": "998230"
  },
  {
    "text": "don't just say oh we use semver",
    "start": "998230",
    "end": "999910"
  },
  {
    "text": "and then argue about it layer we",
    "start": "999910",
    "end": "1001620"
  },
  {
    "text": "actually outlined exactly which parts of",
    "start": "1001620",
    "end": "1004620"
  },
  {
    "text": "semver are done we define which",
    "start": "1004620",
    "end": "1008490"
  },
  {
    "text": "components are covered by the semantic",
    "start": "1008490",
    "end": "1010019"
  },
  {
    "text": "versioning we also define the lifecycle",
    "start": "1010019",
    "end": "1012720"
  },
  {
    "text": "of the releases and you can read all",
    "start": "1012720",
    "end": "1015690"
  },
  {
    "text": "about that here in detail but I'll just",
    "start": "1015690",
    "end": "1017399"
  },
  {
    "text": "give you a quick overview so this is one",
    "start": "1017399",
    "end": "1019829"
  },
  {
    "text": "component which is called our support",
    "start": "1019829",
    "end": "1021149"
  },
  {
    "text": "horizon and it defines how long we have",
    "start": "1021149",
    "end": "1024120"
  },
  {
    "text": "branches so each branch has a state",
    "start": "1024120",
    "end": "1026668"
  },
  {
    "text": "end-of-life which is old branches we no",
    "start": "1026669",
    "end": "1029880"
  },
  {
    "text": "longer back port fixes to those we have",
    "start": "1029880",
    "end": "1031980"
  },
  {
    "text": "active branches which is includes 1.0",
    "start": "1031980",
    "end": "1034168"
  },
  {
    "text": "and 1.1 which will be we have this fancy",
    "start": "1034169",
    "end": "1038130"
  },
  {
    "text": "you can parse that and figure that out",
    "start": "1038130",
    "end": "1040470"
  },
  {
    "text": "but basically we're saying okay well",
    "start": "1040470",
    "end": "1042329"
  },
  {
    "text": "we'll support it till the end of",
    "start": "1042329",
    "end": "1043260"
  },
  {
    "text": "kubernetes or the release of 1.2 or",
    "start": "1043260",
    "end": "1046709"
  },
  {
    "text": "April 23rd 2019 and we'll take whichever",
    "start": "1046709",
    "end": "1050610"
  },
  {
    "text": "is the maximum of those so that you're",
    "start": "1050610",
    "end": "1053070"
  },
  {
    "text": "not left in a state where one point",
    "start": "1053070",
    "end": "1055110"
  },
  {
    "text": "you're still running one point one but",
    "start": "1055110",
    "end": "1056640"
  },
  {
    "text": "there's a security problem and it's",
    "start": "1056640",
    "end": "1058710"
  },
  {
    "text": "still in use by kubernetes or or what",
    "start": "1058710",
    "end": "1061169"
  },
  {
    "text": "have you",
    "start": "1061169",
    "end": "1061559"
  },
  {
    "text": "so in this this release process is",
    "start": "1061559",
    "end": "1063840"
  },
  {
    "text": "defined in that release documents we",
    "start": "1063840",
    "end": "1065730"
  },
  {
    "text": "also identify",
    "start": "1065730",
    "end": "1066860"
  },
  {
    "text": "which components are supported at this",
    "start": "1066860",
    "end": "1068960"
  },
  {
    "text": "time and this can change depending on",
    "start": "1068960",
    "end": "1071179"
  },
  {
    "text": "users and depending on what actually",
    "start": "1071179",
    "end": "1073130"
  },
  {
    "text": "people want",
    "start": "1073130",
    "end": "1074870"
  },
  {
    "text": "so like the GRP capi we're considering",
    "start": "1074870",
    "end": "1076730"
  },
  {
    "text": "stable we won't do any backwards",
    "start": "1076730",
    "end": "1078350"
  },
  {
    "text": "incompatible changes to it purposefully",
    "start": "1078350",
    "end": "1083570"
  },
  {
    "text": "so there could be changes that are",
    "start": "1083570",
    "end": "1085850"
  },
  {
    "text": "accidentally happening but we do",
    "start": "1085850",
    "end": "1087440"
  },
  {
    "text": "consider it stable the metrics API is",
    "start": "1087440",
    "end": "1088789"
  },
  {
    "text": "considered stable and we've actually",
    "start": "1088789",
    "end": "1090799"
  },
  {
    "text": "versioned it for Prometheus so if we do",
    "start": "1090799",
    "end": "1093710"
  },
  {
    "text": "want to change it we can add a v2",
    "start": "1093710",
    "end": "1095539"
  },
  {
    "text": "metrics or v3 metrics hopefully that",
    "start": "1095539",
    "end": "1097820"
  },
  {
    "text": "won't happen the other components right",
    "start": "1097820",
    "end": "1100039"
  },
  {
    "text": "now are considered unstable just because",
    "start": "1100039",
    "end": "1102710"
  },
  {
    "text": "they're changing or integrating with a",
    "start": "1102710",
    "end": "1104120"
  },
  {
    "text": "bunch of systems and we want to be able",
    "start": "1104120",
    "end": "1105590"
  },
  {
    "text": "to make changes so that that things work",
    "start": "1105590",
    "end": "1108470"
  },
  {
    "text": "well so the client API is unstable",
    "start": "1108470",
    "end": "1111049"
  },
  {
    "text": "although it's relatively stable so don't",
    "start": "1111049",
    "end": "1113149"
  },
  {
    "text": "be afraid to use it",
    "start": "1113149",
    "end": "1114320"
  },
  {
    "text": "the CRA the CR IG RPC API is considered",
    "start": "1114320",
    "end": "1117799"
  },
  {
    "text": "unstable because it's still in alpha and",
    "start": "1117799",
    "end": "1120620"
  },
  {
    "text": "I'm not sure when that comes out of when",
    "start": "1120620",
    "end": "1123320"
  },
  {
    "text": "that comes out of alpha yet and then the",
    "start": "1123320",
    "end": "1125450"
  },
  {
    "text": "command line tool the CTR CTR tool is",
    "start": "1125450",
    "end": "1127970"
  },
  {
    "text": "also considered unstable and right now",
    "start": "1127970",
    "end": "1130519"
  },
  {
    "text": "it's out of scope I know people have",
    "start": "1130519",
    "end": "1132440"
  },
  {
    "text": "more interest in that so if you do let",
    "start": "1132440",
    "end": "1135019"
  },
  {
    "text": "us know but it you know don't deeply",
    "start": "1135019",
    "end": "1138529"
  },
  {
    "text": "integrate scripts if you're going to do",
    "start": "1138529",
    "end": "1139789"
  },
  {
    "text": "production work with container D I",
    "start": "1139789",
    "end": "1141230"
  },
  {
    "text": "highly recommend writing your own go",
    "start": "1141230",
    "end": "1142850"
  },
  {
    "text": "code or building your own client CRC our",
    "start": "1142850",
    "end": "1146659"
  },
  {
    "text": "CRI tool is an example of that and it",
    "start": "1146659",
    "end": "1149600"
  },
  {
    "text": "works great in because of the way you're",
    "start": "1149600",
    "end": "1152720"
  },
  {
    "text": "because you really want integrate with a",
    "start": "1152720",
    "end": "1154279"
  },
  {
    "text": "target system rather than these",
    "start": "1154279",
    "end": "1155539"
  },
  {
    "text": "low-level things like container D is",
    "start": "1155539",
    "end": "1157070"
  },
  {
    "text": "really like a container runtime building",
    "start": "1157070",
    "end": "1161240"
  },
  {
    "text": "system so that that really impacts how",
    "start": "1161240",
    "end": "1166460"
  },
  {
    "text": "we do that so the so the latest release",
    "start": "1166460",
    "end": "1169580"
  },
  {
    "text": "was done with the April 26th I want to",
    "start": "1169580",
    "end": "1172610"
  },
  {
    "text": "say is that right and so there's two big",
    "start": "1172610",
    "end": "1176389"
  },
  {
    "text": "things I mean that there's a whole big",
    "start": "1176389",
    "end": "1177500"
  },
  {
    "text": "list I suggest you go read these release",
    "start": "1177500",
    "end": "1179269"
  },
  {
    "text": "notes it's a really cool release it's",
    "start": "1179269",
    "end": "1181399"
  },
  {
    "text": "really cool to see that see the project",
    "start": "1181399",
    "end": "1183049"
  },
  {
    "text": "taking shape and and but the biggest",
    "start": "1183049",
    "end": "1185690"
  },
  {
    "text": "thing is we merged in ceará kubernetes",
    "start": "1185690",
    "end": "1188510"
  },
  {
    "text": "CRI support so you can run container d",
    "start": "1188510",
    "end": "1191120"
  },
  {
    "text": "with kubernetes out of the box and then",
    "start": "1191120",
    "end": "1193639"
  },
  {
    "text": "we also there was a lot of requests for",
    "start": "1193639",
    "end": "1196090"
  },
  {
    "text": "snapshot or plugins but we actually",
    "start": "1196090",
    "end": "1198590"
  },
  {
    "text": "found that there's really only three",
    "start": "1198590",
    "end": "1200690"
  },
  {
    "text": "that were really popular and so we just",
    "start": "1200690",
    "end": "1203120"
  },
  {
    "text": "added those rather than adding a complex",
    "start": "1203120",
    "end": "1205070"
  },
  {
    "text": "plug-in system that might break and",
    "start": "1205070",
    "end": "1207320"
  },
  {
    "text": "that's ZFS au FS and a native snapshot",
    "start": "1207320",
    "end": "1211010"
  },
  {
    "text": "ER and then there's lots of other great",
    "start": "1211010",
    "end": "1214010"
  },
  {
    "text": "things in this release and I definitely",
    "start": "1214010",
    "end": "1215870"
  },
  {
    "text": "go to this link and and read it they",
    "start": "1215870",
    "end": "1218030"
  },
  {
    "text": "were the people worked hard on it just",
    "start": "1218030",
    "end": "1220100"
  },
  {
    "text": "just to give you an idea of how a kind",
    "start": "1220100",
    "end": "1222350"
  },
  {
    "text": "of native plugin works in in container D",
    "start": "1222350",
    "end": "1226340"
  },
  {
    "text": "this is how the integration with the",
    "start": "1226340",
    "end": "1228620"
  },
  {
    "text": "kubernetes CRI there's a there's a",
    "start": "1228620",
    "end": "1230600"
  },
  {
    "text": "component called CRI within container d",
    "start": "1230600",
    "end": "1233300"
  },
  {
    "text": "and it actually interacts with the core",
    "start": "1233300",
    "end": "1235160"
  },
  {
    "text": "services which I showed you back on that",
    "start": "1235160",
    "end": "1236690"
  },
  {
    "text": "diagram before but it itself is within",
    "start": "1236690",
    "end": "1239540"
  },
  {
    "text": "container D and then influences the the",
    "start": "1239540",
    "end": "1242180"
  },
  {
    "text": "operating system which consists of",
    "start": "1242180",
    "end": "1243770"
  },
  {
    "text": "storage filesystem networking so on and",
    "start": "1243770",
    "end": "1245990"
  },
  {
    "text": "then the core services actually control",
    "start": "1245990",
    "end": "1247850"
  },
  {
    "text": "the runtimes so going further with",
    "start": "1247850",
    "end": "1250940"
  },
  {
    "text": "container D again here's the link the",
    "start": "1250940",
    "end": "1253280"
  },
  {
    "text": "project please let us know if you can",
    "start": "1253280",
    "end": "1257000"
  },
  {
    "text": "help we do need help with documentation",
    "start": "1257000",
    "end": "1258770"
  },
  {
    "text": "right now but there's other areas like",
    "start": "1258770",
    "end": "1260720"
  },
  {
    "text": "bug fixes tests validation that kind of",
    "start": "1260720",
    "end": "1263210"
  },
  {
    "text": "thing again check out the getting",
    "start": "1263210",
    "end": "1267170"
  },
  {
    "text": "started guide it's it's really really",
    "start": "1267170",
    "end": "1269360"
  },
  {
    "text": "really good especially if your go",
    "start": "1269360",
    "end": "1271670"
  },
  {
    "text": "developer it should be pretty pretty",
    "start": "1271670",
    "end": "1273140"
  },
  {
    "text": "straightforward to get started and then",
    "start": "1273140",
    "end": "1276520"
  },
  {
    "text": "porting testing tested on your",
    "start": "1276520",
    "end": "1278870"
  },
  {
    "text": "architecture of choice let us know if",
    "start": "1278870",
    "end": "1280700"
  },
  {
    "text": "there's problems with that we do want",
    "start": "1280700",
    "end": "1282140"
  },
  {
    "text": "better multi arc support and that that",
    "start": "1282140",
    "end": "1284570"
  },
  {
    "text": "should be coming down the pipe we also",
    "start": "1284570",
    "end": "1286520"
  },
  {
    "text": "do heavy upstream testing with",
    "start": "1286520",
    "end": "1288800"
  },
  {
    "text": "kubernetes test grid and you can check",
    "start": "1288800",
    "end": "1291590"
  },
  {
    "text": "out the status of that in cig node",
    "start": "1291590",
    "end": "1293150"
  },
  {
    "text": "container D so a couple of new talks I",
    "start": "1293150",
    "end": "1297980"
  },
  {
    "text": "talked a lot about snapshots and it's a",
    "start": "1297980",
    "end": "1300500"
  },
  {
    "text": "complex topic and it involves file",
    "start": "1300500",
    "end": "1303050"
  },
  {
    "text": "systems and other fun stuff I'm doing a",
    "start": "1303050",
    "end": "1305600"
  },
  {
    "text": "talk on it in an hour and I'll go over",
    "start": "1305600",
    "end": "1308420"
  },
  {
    "text": "all the cool stuff you can do with",
    "start": "1308420",
    "end": "1310010"
  },
  {
    "text": "snapshot at file systems and then also",
    "start": "1310010",
    "end": "1312380"
  },
  {
    "text": "we'll do a deep dive into container D",
    "start": "1312380",
    "end": "1314240"
  },
  {
    "text": "and I'll use this same slide set but I'm",
    "start": "1314240",
    "end": "1317540"
  },
  {
    "text": "gonna like push everything on the side",
    "start": "1317540",
    "end": "1319040"
  },
  {
    "text": "and just like do mostly demo and kind of",
    "start": "1319040",
    "end": "1321560"
  },
  {
    "text": "show you like okay here's CRI tool",
    "start": "1321560",
    "end": "1323620"
  },
  {
    "text": "here's how the pods look and or actually",
    "start": "1323620",
    "end": "1327560"
  },
  {
    "text": "first we'll convert over from docker to",
    "start": "1327560",
    "end": "1329000"
  },
  {
    "text": "container D and then we'll look at the",
    "start": "1329000",
    "end": "1331070"
  },
  {
    "text": "pods and we'll play with them and it",
    "start": "1331070",
    "end": "1332840"
  },
  {
    "text": "will pull apart all the pods",
    "start": "1332840",
    "end": "1334400"
  },
  {
    "text": "look at the metadata storage and then",
    "start": "1334400",
    "end": "1335720"
  },
  {
    "text": "actually we can get down to the run so",
    "start": "1335720",
    "end": "1336920"
  },
  {
    "text": "you can fig so that'll be a fun talk and",
    "start": "1336920",
    "end": "1338450"
  },
  {
    "text": "hopefully it'll be more interactive so",
    "start": "1338450",
    "end": "1341680"
  },
  {
    "text": "how much time how much time do I have 15",
    "start": "1341680",
    "end": "1347750"
  },
  {
    "text": "minutes okay so so I want to leave some",
    "start": "1347750",
    "end": "1350090"
  },
  {
    "text": "time for questions",
    "start": "1350090",
    "end": "1351860"
  },
  {
    "text": "and then if there's no or or we can do",
    "start": "1351860",
    "end": "1354560"
  },
  {
    "text": "some demos is there any questions right",
    "start": "1354560",
    "end": "1356510"
  },
  {
    "text": "off the bat yeah right right right here",
    "start": "1356510",
    "end": "1361720"
  },
  {
    "text": "so the question he's asking is do we",
    "start": "1363590",
    "end": "1365420"
  },
  {
    "text": "support device mapper we'd have not",
    "start": "1365420",
    "end": "1367970"
  },
  {
    "text": "gotten a contribution for device mapper",
    "start": "1367970",
    "end": "1369470"
  },
  {
    "text": "and I don't know if the container D",
    "start": "1369470",
    "end": "1371840"
  },
  {
    "text": "maintainer czar interested in it but I",
    "start": "1371840",
    "end": "1373550"
  },
  {
    "text": "don't see a reason they wouldn't take a",
    "start": "1373550",
    "end": "1375620"
  },
  {
    "text": "contribution of for a device mapper you",
    "start": "1375620",
    "end": "1378920"
  },
  {
    "text": "know as long as it's well implemented",
    "start": "1378920",
    "end": "1379970"
  },
  {
    "text": "and we we have a really good test suite",
    "start": "1379970",
    "end": "1381950"
  },
  {
    "text": "too so I'll talk a little bit about that",
    "start": "1381950",
    "end": "1383570"
  },
  {
    "text": "in the snapshot or talk if you're more",
    "start": "1383570",
    "end": "1384980"
  },
  {
    "text": "curious right here no no the the",
    "start": "1384980",
    "end": "1398210"
  },
  {
    "text": "portable interface needs to be at the I",
    "start": "1398210",
    "end": "1400130"
  },
  {
    "text": "mean yes the API is in container D will",
    "start": "1400130",
    "end": "1402860"
  },
  {
    "text": "be portable from platform to platform",
    "start": "1402860",
    "end": "1404060"
  },
  {
    "text": "but there's so many differences between",
    "start": "1404060",
    "end": "1406760"
  },
  {
    "text": "each platform and the way they implement",
    "start": "1406760",
    "end": "1408680"
  },
  {
    "text": "containers we had to implement a like a",
    "start": "1408680",
    "end": "1411770"
  },
  {
    "text": "strict subset of what's between them so",
    "start": "1411770",
    "end": "1414020"
  },
  {
    "text": "like for instance our runtime model",
    "start": "1414020",
    "end": "1415850"
  },
  {
    "text": "isn't is definitely like platform",
    "start": "1415850",
    "end": "1418190"
  },
  {
    "text": "agnostic but if you your snapshot are",
    "start": "1418190",
    "end": "1421190"
  },
  {
    "text": "not going to be that that way so you",
    "start": "1421190",
    "end": "1422810"
  },
  {
    "text": "need to be able to interact with the",
    "start": "1422810",
    "end": "1423950"
  },
  {
    "text": "file system and really be it's like like",
    "start": "1423950",
    "end": "1426560"
  },
  {
    "text": "it has to be local to the host so it's",
    "start": "1426560",
    "end": "1428150"
  },
  {
    "text": "not a remote API so it's a little",
    "start": "1428150",
    "end": "1429920"
  },
  {
    "text": "different from like say docker pouch",
    "start": "1429920",
    "end": "1431510"
  },
  {
    "text": "sure or any of those other projects like",
    "start": "1431510",
    "end": "1433340"
  },
  {
    "text": "that so I'm sorry what was that yeah",
    "start": "1433340",
    "end": "1454960"
  },
  {
    "text": "so oh yeah yeah so it will come with",
    "start": "1455320",
    "end": "1459650"
  },
  {
    "text": "with things that are so so the question",
    "start": "1459650",
    "end": "1461270"
  },
  {
    "text": "was will it come with components that",
    "start": "1461270",
    "end": "1465320"
  },
  {
    "text": "are suitable for the various platforms",
    "start": "1465320",
    "end": "1466490"
  },
  {
    "text": "and the answer is yes what I'm saying",
    "start": "1466490",
    "end": "1469400"
  },
  {
    "text": "it's not platform agnostic like docker",
    "start": "1469400",
    "end": "1471380"
  },
  {
    "text": "for example like you mostly interact",
    "start": "1471380",
    "end": "1473870"
  },
  {
    "text": "with the API",
    "start": "1473870",
    "end": "1475850"
  },
  {
    "text": "whereas with container D we say well",
    "start": "1475850",
    "end": "1478400"
  },
  {
    "text": "you're gonna be local to the host and",
    "start": "1478400",
    "end": "1479780"
  },
  {
    "text": "you can interact with the API as well as",
    "start": "1479780",
    "end": "1482540"
  },
  {
    "text": "the host operating system that is that",
    "start": "1482540",
    "end": "1484790"
  },
  {
    "text": "clarify okay are there any other",
    "start": "1484790",
    "end": "1487700"
  },
  {
    "text": "questions all right so let's do some",
    "start": "1487700",
    "end": "1491419"
  },
  {
    "text": "demos okay so so running a container is",
    "start": "1491419",
    "end": "1495980"
  },
  {
    "text": "pretty simple I have an image here and I",
    "start": "1495980",
    "end": "1501140"
  },
  {
    "text": "mean CTR is you know it's kind of like",
    "start": "1501140",
    "end": "1503750"
  },
  {
    "text": "docker you know as much as it can be",
    "start": "1503750",
    "end": "1506600"
  },
  {
    "text": "this is a whole bunch of specific OCI",
    "start": "1506600",
    "end": "1509450"
  },
  {
    "text": "stuff like we have our we have on the",
    "start": "1509450",
    "end": "1512990"
  },
  {
    "text": "the far left we have our image name and",
    "start": "1512990",
    "end": "1515299"
  },
  {
    "text": "we have the type of the image and then",
    "start": "1515299",
    "end": "1517700"
  },
  {
    "text": "we have you know information about what",
    "start": "1517700",
    "end": "1520190"
  },
  {
    "text": "platforms I'll run on and we actually",
    "start": "1520190",
    "end": "1521750"
  },
  {
    "text": "have the total size so and then we can",
    "start": "1521750",
    "end": "1524090"
  },
  {
    "text": "we can just take that this is good old",
    "start": "1524090",
    "end": "1526160"
  },
  {
    "text": "Redis Redis is the Redis runs everything",
    "start": "1526160",
    "end": "1530299"
  },
  {
    "text": "works right so we can take that and so",
    "start": "1530299",
    "end": "1535730"
  },
  {
    "text": "in container D we use fully qualified",
    "start": "1535730",
    "end": "1538309"
  },
  {
    "text": "image names so there's no kind of short",
    "start": "1538309",
    "end": "1541370"
  },
  {
    "text": "image names and this keeps things from",
    "start": "1541370",
    "end": "1542990"
  },
  {
    "text": "being unambiguous in a lot of cases so",
    "start": "1542990",
    "end": "1545870"
  },
  {
    "text": "but your container runtime could",
    "start": "1545870",
    "end": "1547280"
  },
  {
    "text": "implement your own kind of image parsing",
    "start": "1547280",
    "end": "1549110"
  },
  {
    "text": "the the actual image naming format is",
    "start": "1549110",
    "end": "1551750"
  },
  {
    "text": "very very simple so just you know",
    "start": "1551750",
    "end": "1554419"
  },
  {
    "text": "running here really simple oops",
    "start": "1554419",
    "end": "1557929"
  },
  {
    "text": "so let's do a test oh one what do I do",
    "start": "1557929",
    "end": "1561860"
  },
  {
    "text": "here",
    "start": "1561860",
    "end": "1564190"
  },
  {
    "text": "so there's there's a there's running",
    "start": "1565419",
    "end": "1567609"
  },
  {
    "text": "race and you can see it's it's running a",
    "start": "1567609",
    "end": "1571629"
  },
  {
    "text": "few things about this so so that so",
    "start": "1571629",
    "end": "1575409"
  },
  {
    "text": "remember that that starting a container",
    "start": "1575409",
    "end": "1577299"
  },
  {
    "text": "kind of data flow diagram we did before",
    "start": "1577299",
    "end": "1580889"
  },
  {
    "text": "that's that's what happened and I can",
    "start": "1580889",
    "end": "1582909"
  },
  {
    "text": "actually show you the byproducts of that",
    "start": "1582909",
    "end": "1584200"
  },
  {
    "text": "so we can we can do a CT our containers",
    "start": "1584200",
    "end": "1589450"
  },
  {
    "text": "LS and we can see oh there's my test one",
    "start": "1589450",
    "end": "1592539"
  },
  {
    "text": "that didn't work because I didn't have",
    "start": "1592539",
    "end": "1594820"
  },
  {
    "text": "access to create the FIFO and then we",
    "start": "1594820",
    "end": "1597129"
  },
  {
    "text": "have our test o2 we can also see we can",
    "start": "1597129",
    "end": "1600940"
  },
  {
    "text": "also take a peek at the tasks that are",
    "start": "1600940",
    "end": "1602469"
  },
  {
    "text": "associated with that I think they've all",
    "start": "1602469",
    "end": "1604359"
  },
  {
    "text": "exited so they're not going to show up",
    "start": "1604359",
    "end": "1605729"
  },
  {
    "text": "and then we can actually look at the",
    "start": "1605729",
    "end": "1608889"
  },
  {
    "text": "snapshots that were created as a",
    "start": "1608889",
    "end": "1610089"
  },
  {
    "text": "byproduct of that so I can do a snapshot",
    "start": "1610089",
    "end": "1611829"
  },
  {
    "text": "LS and Wow what's going on there we have",
    "start": "1611829",
    "end": "1614409"
  },
  {
    "text": "more hashes we can see I was playing",
    "start": "1614409",
    "end": "1616629"
  },
  {
    "text": "around with Boo and far bar and foo here",
    "start": "1616629",
    "end": "1620079"
  },
  {
    "text": "and then you can see the relationships",
    "start": "1620079",
    "end": "1623619"
  },
  {
    "text": "so across the top we can see we have",
    "start": "1623619",
    "end": "1624969"
  },
  {
    "text": "committed snapshots and these two active",
    "start": "1624969",
    "end": "1626679"
  },
  {
    "text": "snapshots are actually those are the",
    "start": "1626679",
    "end": "1630159"
  },
  {
    "text": "running container file systems we can",
    "start": "1630159",
    "end": "1632619"
  },
  {
    "text": "actually take this and we can we can",
    "start": "1632619",
    "end": "1634599"
  },
  {
    "text": "look at the relationship here and we can",
    "start": "1634599",
    "end": "1635919"
  },
  {
    "text": "see that you know everything's descended",
    "start": "1635919",
    "end": "1638019"
  },
  {
    "text": "from that one Redis image and this hash",
    "start": "1638019",
    "end": "1641289"
  },
  {
    "text": "is slightly different than what was up",
    "start": "1641289",
    "end": "1643059"
  },
  {
    "text": "in the images LS for implementation",
    "start": "1643059",
    "end": "1644859"
  },
  {
    "text": "details but I hopefully you'll believe",
    "start": "1644859",
    "end": "1649029"
  },
  {
    "text": "me that this is the actual Redis image",
    "start": "1649029",
    "end": "1651700"
  },
  {
    "text": "so before I said that container D was",
    "start": "1651700",
    "end": "1656200"
  },
  {
    "text": "namespaced and I actually have a running",
    "start": "1656200",
    "end": "1658690"
  },
  {
    "text": "kubernetes thing on here I think it's",
    "start": "1658690",
    "end": "1661749"
  },
  {
    "text": "it's hurtin though because so it I swear",
    "start": "1661749",
    "end": "1668409"
  },
  {
    "text": "kubernetes is actually running I think",
    "start": "1668409",
    "end": "1669639"
  },
  {
    "text": "CRI scuttle should work so the problem",
    "start": "1669639",
    "end": "1672159"
  },
  {
    "text": "is the wife wet each time you go on the",
    "start": "1672159",
    "end": "1673809"
  },
  {
    "text": "Wi-Fi you lose the IP address and I need",
    "start": "1673809",
    "end": "1675940"
  },
  {
    "text": "to figure that out for I'll have it",
    "start": "1675940",
    "end": "1677469"
  },
  {
    "text": "figured out by Friday hopefully but",
    "start": "1677469",
    "end": "1679539"
  },
  {
    "text": "here's but you can see all of the pods",
    "start": "1679539",
    "end": "1680979"
  },
  {
    "text": "running and I got I got nginx",
    "start": "1680979",
    "end": "1682989"
  },
  {
    "text": "deployments some HelloWorld stuff and",
    "start": "1682989",
    "end": "1685479"
  },
  {
    "text": "then calico and a bunch of other stuff",
    "start": "1685479",
    "end": "1687419"
  },
  {
    "text": "and well I mean now you're wondering",
    "start": "1687419",
    "end": "1690609"
  },
  {
    "text": "though okay well you said it's running",
    "start": "1690609",
    "end": "1692169"
  },
  {
    "text": "in container D where are the containers",
    "start": "1692169",
    "end": "1693609"
  },
  {
    "text": "so they do you know oh those were just",
    "start": "1693609",
    "end": "1696579"
  },
  {
    "text": "my test containers actually container D",
    "start": "1696579",
    "end": "1698559"
  },
  {
    "text": "is namespace",
    "start": "1698559",
    "end": "1699260"
  },
  {
    "text": "so all of these containers are",
    "start": "1699260",
    "end": "1700970"
  },
  {
    "text": "completely hidden from from from the",
    "start": "1700970",
    "end": "1703490"
  },
  {
    "text": "default namespace so here's the actual",
    "start": "1703490",
    "end": "1705470"
  },
  {
    "text": "container D containers that are",
    "start": "1705470",
    "end": "1706940"
  },
  {
    "text": "implementing the pods inside of cry",
    "start": "1706940",
    "end": "1708710"
  },
  {
    "text": "cuddle so alright I think we're about",
    "start": "1708710",
    "end": "1712430"
  },
  {
    "text": "out of time any questions on the demo No",
    "start": "1712430",
    "end": "1715130"
  },
  {
    "text": "all right all right thanks guys",
    "start": "1715130",
    "end": "1719330"
  },
  {
    "text": "[Applause]",
    "start": "1719330",
    "end": "1724640"
  }
]