[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "yes so hello everyone i'm michael",
    "start": "240",
    "end": "3120"
  },
  {
    "text": "dostetski and i would like to talk about",
    "start": "3120",
    "end": "5839"
  },
  {
    "text": "the project loxi which is trying to",
    "start": "5839",
    "end": "8480"
  },
  {
    "text": "contain the containers which do not",
    "start": "8480",
    "end": "10559"
  },
  {
    "text": "contain",
    "start": "10559",
    "end": "12400"
  },
  {
    "text": "before i dig into the project a bit",
    "start": "12400",
    "end": "15040"
  },
  {
    "text": "about myself",
    "start": "15040",
    "end": "16560"
  },
  {
    "text": "i'm michael dostetski",
    "start": "16560",
    "end": "18320"
  },
  {
    "text": "my nickname in open source communities",
    "start": "18320",
    "end": "20480"
  },
  {
    "text": "is wadodovsky",
    "start": "20480",
    "end": "22320"
  },
  {
    "text": "i'm a software engineer at deep fence",
    "start": "22320",
    "end": "24640"
  },
  {
    "text": "and nowadays i rewrite mostly in rust",
    "start": "24640",
    "end": "27599"
  },
  {
    "text": "and it became my favorite language",
    "start": "27599",
    "end": "30400"
  },
  {
    "text": "although i have a huge background in go",
    "start": "30400",
    "end": "33120"
  },
  {
    "text": "c and python",
    "start": "33120",
    "end": "36320"
  },
  {
    "text": "what",
    "start": "37520",
    "end": "38960"
  },
  {
    "text": "oh really oh",
    "start": "38960",
    "end": "42920"
  },
  {
    "text": "oh okay",
    "start": "57520",
    "end": "59440"
  },
  {
    "text": "i apologize for that uh so yeah that was",
    "start": "59440",
    "end": "62879"
  },
  {
    "text": "the first slide",
    "start": "62879",
    "end": "66000"
  },
  {
    "start": "65000",
    "end": "100000"
  },
  {
    "text": "it was about me and yeah here uh on this",
    "start": "66000",
    "end": "68960"
  },
  {
    "text": "collocated event we talk about container",
    "start": "68960",
    "end": "71200"
  },
  {
    "text": "security the fact that we have this",
    "start": "71200",
    "end": "73439"
  },
  {
    "text": "collocated event proves so much how this",
    "start": "73439",
    "end": "76880"
  },
  {
    "text": "space is emerging and how much good",
    "start": "76880",
    "end": "79280"
  },
  {
    "text": "progress we have here",
    "start": "79280",
    "end": "80880"
  },
  {
    "text": "although i must say that",
    "start": "80880",
    "end": "83280"
  },
  {
    "text": "the most of initiatives and most of",
    "start": "83280",
    "end": "85360"
  },
  {
    "text": "projects in kubernetes about security",
    "start": "85360",
    "end": "87600"
  },
  {
    "text": "are focusing either on securing",
    "start": "87600",
    "end": "89840"
  },
  {
    "text": "kubernetes api",
    "start": "89840",
    "end": "91600"
  },
  {
    "text": "or",
    "start": "91600",
    "end": "92560"
  },
  {
    "text": "finding vulnerabilities in images",
    "start": "92560",
    "end": "95600"
  },
  {
    "text": "and",
    "start": "95600",
    "end": "96640"
  },
  {
    "text": "the project i'm going to talk about is",
    "start": "96640",
    "end": "98720"
  },
  {
    "text": "trying to cover the other area",
    "start": "98720",
    "end": "101119"
  },
  {
    "text": "it's it's trying to cover container",
    "start": "101119",
    "end": "103280"
  },
  {
    "text": "runtimes and everything which is closer",
    "start": "103280",
    "end": "105759"
  },
  {
    "text": "to the linux kernel and try to enforce",
    "start": "105759",
    "end": "109119"
  },
  {
    "text": "security policies there",
    "start": "109119",
    "end": "111200"
  },
  {
    "text": "and",
    "start": "111200",
    "end": "112640"
  },
  {
    "text": "it also aims to do it in run container",
    "start": "112640",
    "end": "116000"
  },
  {
    "text": "runtime agnostic and container engine",
    "start": "116000",
    "end": "118479"
  },
  {
    "text": "agnostic way in the long term",
    "start": "118479",
    "end": "121600"
  },
  {
    "start": "120000",
    "end": "217000"
  },
  {
    "text": "uh you've probably heard a lot about",
    "start": "121600",
    "end": "124960"
  },
  {
    "text": "ebpf either on kubecon or any kubernetes",
    "start": "124960",
    "end": "128720"
  },
  {
    "text": "related conference",
    "start": "128720",
    "end": "130399"
  },
  {
    "text": "but to briefly describe it",
    "start": "130399",
    "end": "133120"
  },
  {
    "text": "it's a technology coming from the linux",
    "start": "133120",
    "end": "135200"
  },
  {
    "text": "kernel",
    "start": "135200",
    "end": "136560"
  },
  {
    "text": "which allows to run sandbox programs",
    "start": "136560",
    "end": "139680"
  },
  {
    "text": "inside the linux kernel and those",
    "start": "139680",
    "end": "141840"
  },
  {
    "text": "programs are triggered by various events",
    "start": "141840",
    "end": "145680"
  },
  {
    "text": "it can be the event of calling a kernel",
    "start": "145680",
    "end": "148800"
  },
  {
    "text": "function it can be an event related to",
    "start": "148800",
    "end": "152319"
  },
  {
    "text": "incoming network packet in the system",
    "start": "152319",
    "end": "154959"
  },
  {
    "text": "and ebpf is event driven so ebpf allows",
    "start": "154959",
    "end": "158480"
  },
  {
    "text": "you to write programs which are",
    "start": "158480",
    "end": "161200"
  },
  {
    "text": "triggered by specific kernel event",
    "start": "161200",
    "end": "164080"
  },
  {
    "text": "which gets the context of that event and",
    "start": "164080",
    "end": "166959"
  },
  {
    "text": "does something with it",
    "start": "166959",
    "end": "168879"
  },
  {
    "text": "and ebpf is already it has many years",
    "start": "168879",
    "end": "172800"
  },
  {
    "text": "it's widely adopted",
    "start": "172800",
    "end": "174560"
  },
  {
    "text": "there is the most known project called",
    "start": "174560",
    "end": "176640"
  },
  {
    "text": "celium which is",
    "start": "176640",
    "end": "178159"
  },
  {
    "text": "using it with great success for",
    "start": "178159",
    "end": "180879"
  },
  {
    "text": "um for networking for kubernetes",
    "start": "180879",
    "end": "183200"
  },
  {
    "text": "networking",
    "start": "183200",
    "end": "184640"
  },
  {
    "text": "there are also several projects for",
    "start": "184640",
    "end": "186480"
  },
  {
    "text": "example project falco which is",
    "start": "186480",
    "end": "189120"
  },
  {
    "text": "leveraging it for",
    "start": "189120",
    "end": "191280"
  },
  {
    "text": "observing potentially malicious behavior",
    "start": "191280",
    "end": "193920"
  },
  {
    "text": "in the system",
    "start": "193920",
    "end": "196000"
  },
  {
    "text": "although there are many security",
    "start": "196000",
    "end": "197760"
  },
  {
    "text": "projects which already use ebpf for",
    "start": "197760",
    "end": "200239"
  },
  {
    "text": "observing the events and",
    "start": "200239",
    "end": "202319"
  },
  {
    "text": "malicious behavior",
    "start": "202319",
    "end": "204239"
  },
  {
    "text": "the question is whether eppf could be",
    "start": "204239",
    "end": "206799"
  },
  {
    "text": "used also for preventing such behavior",
    "start": "206799",
    "end": "209760"
  },
  {
    "text": "and",
    "start": "209760",
    "end": "210560"
  },
  {
    "text": "actually enforcing policies and",
    "start": "210560",
    "end": "214400"
  },
  {
    "text": "cutting of the attacker from the",
    "start": "214400",
    "end": "216000"
  },
  {
    "text": "containers",
    "start": "216000",
    "end": "217760"
  },
  {
    "start": "217000",
    "end": "345000"
  },
  {
    "text": "and before i come with straightforward",
    "start": "217760",
    "end": "220640"
  },
  {
    "text": "answer to that question",
    "start": "220640",
    "end": "222799"
  },
  {
    "text": "i will explain the another concept in",
    "start": "222799",
    "end": "225440"
  },
  {
    "text": "the linux kernel",
    "start": "225440",
    "end": "227200"
  },
  {
    "text": "which is called lsm",
    "start": "227200",
    "end": "229200"
  },
  {
    "text": "which stands for linux security modules",
    "start": "229200",
    "end": "232239"
  },
  {
    "text": "and",
    "start": "232239",
    "end": "233200"
  },
  {
    "text": "most of you probably know",
    "start": "233200",
    "end": "235519"
  },
  {
    "text": "the two popular security systems in",
    "start": "235519",
    "end": "237840"
  },
  {
    "text": "linux",
    "start": "237840",
    "end": "239360"
  },
  {
    "text": "one is s linux the other is up armor",
    "start": "239360",
    "end": "242560"
  },
  {
    "text": "and both of them are built on top lsm",
    "start": "242560",
    "end": "246640"
  },
  {
    "text": "and lsm is an api in the kernel",
    "start": "246640",
    "end": "250080"
  },
  {
    "text": "which provides various hooks",
    "start": "250080",
    "end": "252720"
  },
  {
    "text": "inside their linux kernel",
    "start": "252720",
    "end": "254560"
  },
  {
    "text": "which led programmers which would let",
    "start": "254560",
    "end": "257199"
  },
  {
    "text": "developers of security security systems",
    "start": "257199",
    "end": "260239"
  },
  {
    "text": "to decide whether some particular action",
    "start": "260239",
    "end": "262479"
  },
  {
    "text": "is allowed to happen",
    "start": "262479",
    "end": "264639"
  },
  {
    "text": "and",
    "start": "264639",
    "end": "266000"
  },
  {
    "text": "huge examples of lsm hooks are",
    "start": "266000",
    "end": "269280"
  },
  {
    "text": "there's",
    "start": "269280",
    "end": "270080"
  },
  {
    "text": "a hook for opening a file so",
    "start": "270080",
    "end": "273440"
  },
  {
    "text": "for example as linux or up armor are",
    "start": "273440",
    "end": "276000"
  },
  {
    "text": "triggered by the event when you",
    "start": "276000",
    "end": "278560"
  },
  {
    "text": "are opening some file in the operating",
    "start": "278560",
    "end": "280639"
  },
  {
    "text": "system it's getting the data what the",
    "start": "280639",
    "end": "284000"
  },
  {
    "text": "file is who is initiating that",
    "start": "284000",
    "end": "286960"
  },
  {
    "text": "file opening action and based on that",
    "start": "286960",
    "end": "290479"
  },
  {
    "text": "security systems are making a decision",
    "start": "290479",
    "end": "293040"
  },
  {
    "text": "whether it's",
    "start": "293040",
    "end": "294639"
  },
  {
    "text": "it looks safe to them",
    "start": "294639",
    "end": "296400"
  },
  {
    "text": "or whether it's a malicious behavior and",
    "start": "296400",
    "end": "300800"
  },
  {
    "text": "they want to deny it",
    "start": "300800",
    "end": "303280"
  },
  {
    "text": "and",
    "start": "303280",
    "end": "304720"
  },
  {
    "text": "well for the most of time",
    "start": "304720",
    "end": "307360"
  },
  {
    "text": "development of linux security modules",
    "start": "307360",
    "end": "309680"
  },
  {
    "text": "involved either writing your kernel",
    "start": "309680",
    "end": "311759"
  },
  {
    "text": "module which would have to be loads with",
    "start": "311759",
    "end": "314160"
  },
  {
    "text": "ls mall for example",
    "start": "314160",
    "end": "315919"
  },
  {
    "text": "or",
    "start": "315919",
    "end": "317199"
  },
  {
    "text": "contributing to the linux kernel source",
    "start": "317199",
    "end": "319680"
  },
  {
    "text": "tree and s linux and up armor actually",
    "start": "319680",
    "end": "322720"
  },
  {
    "text": "have",
    "start": "322720",
    "end": "324320"
  },
  {
    "text": "kernel modules inside the upstream",
    "start": "324320",
    "end": "326880"
  },
  {
    "text": "kernel source code so they are developed",
    "start": "326880",
    "end": "329280"
  },
  {
    "text": "together with the",
    "start": "329280",
    "end": "331039"
  },
  {
    "text": "linux kernel",
    "start": "331039",
    "end": "332639"
  },
  {
    "text": "developers",
    "start": "332639",
    "end": "333840"
  },
  {
    "text": "patches of",
    "start": "333840",
    "end": "335120"
  },
  {
    "text": "s linux and armor developers are",
    "start": "335120",
    "end": "337280"
  },
  {
    "text": "eventually",
    "start": "337280",
    "end": "338479"
  },
  {
    "text": "ending up",
    "start": "338479",
    "end": "340160"
  },
  {
    "text": "in the star wars review and linux kernel",
    "start": "340160",
    "end": "343120"
  },
  {
    "text": "3",
    "start": "343120",
    "end": "344479"
  },
  {
    "text": "but that was for the majority of time",
    "start": "344479",
    "end": "347280"
  },
  {
    "start": "345000",
    "end": "392000"
  },
  {
    "text": "although since kernel 5.7",
    "start": "347280",
    "end": "350560"
  },
  {
    "text": "there is a new type of bpf programs",
    "start": "350560",
    "end": "353600"
  },
  {
    "text": "which actually can leverage lsm hooks so",
    "start": "353600",
    "end": "357360"
  },
  {
    "text": "nowadays",
    "start": "357360",
    "end": "358800"
  },
  {
    "text": "there is no need anymore for writing",
    "start": "358800",
    "end": "361120"
  },
  {
    "text": "kernel modules or control on or",
    "start": "361120",
    "end": "364960"
  },
  {
    "text": "modifying the kernel source code",
    "start": "364960",
    "end": "367520"
  },
  {
    "text": "nowadays",
    "start": "367520",
    "end": "368880"
  },
  {
    "text": "you can write your external bpf program",
    "start": "368880",
    "end": "371440"
  },
  {
    "text": "which is attaching to lsn hooks and",
    "start": "371440",
    "end": "375120"
  },
  {
    "text": "write your own policy engine that way",
    "start": "375120",
    "end": "378720"
  },
  {
    "text": "and you can just load it uh when you are",
    "start": "378720",
    "end": "381440"
  },
  {
    "text": "a realtor user in the system and you",
    "start": "381440",
    "end": "383759"
  },
  {
    "text": "have your own ls mbpf programs you can",
    "start": "383759",
    "end": "386240"
  },
  {
    "text": "just load them and they work on the",
    "start": "386240",
    "end": "388639"
  },
  {
    "text": "kernel if the kernel is recent enough",
    "start": "388639",
    "end": "392880"
  },
  {
    "text": "and that technology is used by loxi and",
    "start": "392880",
    "end": "396880"
  },
  {
    "text": "lox is the project which is trying to",
    "start": "396880",
    "end": "399199"
  },
  {
    "text": "use ebpf lsm",
    "start": "399199",
    "end": "401280"
  },
  {
    "text": "to make containers more secure to make",
    "start": "401280",
    "end": "404479"
  },
  {
    "text": "containers hardened",
    "start": "404479",
    "end": "406720"
  },
  {
    "text": "and",
    "start": "406720",
    "end": "407600"
  },
  {
    "text": "loxi is also using the other thing the",
    "start": "407600",
    "end": "410080"
  },
  {
    "text": "other exciting technology related to a",
    "start": "410080",
    "end": "412720"
  },
  {
    "text": "bpf it's using aya and aya is a rust",
    "start": "412720",
    "end": "417360"
  },
  {
    "text": "library which lets you write bpf",
    "start": "417360",
    "end": "419840"
  },
  {
    "text": "programs purely in rust",
    "start": "419840",
    "end": "422560"
  },
  {
    "text": "both eppf part and user space part there",
    "start": "422560",
    "end": "425280"
  },
  {
    "text": "is no",
    "start": "425280",
    "end": "426319"
  },
  {
    "text": "coding and see needed and there is no",
    "start": "426319",
    "end": "429120"
  },
  {
    "text": "need to use sleep bpf everything is",
    "start": "429120",
    "end": "432479"
  },
  {
    "text": "done in pure rust",
    "start": "432479",
    "end": "434319"
  },
  {
    "text": "and everything you need to build bpf",
    "start": "434319",
    "end": "437120"
  },
  {
    "text": "programs with aya is just having",
    "start": "437120",
    "end": "439919"
  },
  {
    "text": "uh cargo and rust nightly on your",
    "start": "439919",
    "end": "442160"
  },
  {
    "text": "machine",
    "start": "442160",
    "end": "443199"
  },
  {
    "text": "so that's pretty cool i think",
    "start": "443199",
    "end": "445360"
  },
  {
    "text": "and",
    "start": "445360",
    "end": "446160"
  },
  {
    "text": "loxi is aiming to secure containers and",
    "start": "446160",
    "end": "450000"
  },
  {
    "text": "it's doing so by detecting currency",
    "start": "450000",
    "end": "452479"
  },
  {
    "text": "processes",
    "start": "452479",
    "end": "453599"
  },
  {
    "text": "tracking their children and forcing",
    "start": "453599",
    "end": "455759"
  },
  {
    "text": "policies on them",
    "start": "455759",
    "end": "457599"
  },
  {
    "text": "and for now the approach which looks he",
    "start": "457599",
    "end": "460560"
  },
  {
    "text": "took with implementing policies is that",
    "start": "460560",
    "end": "463680"
  },
  {
    "text": "it comes with three predefined policies",
    "start": "463680",
    "end": "466319"
  },
  {
    "text": "inspired by say port security admission",
    "start": "466319",
    "end": "468800"
  },
  {
    "text": "controller in abstract humanities",
    "start": "468800",
    "end": "471199"
  },
  {
    "text": "so these are restricted baseline",
    "start": "471199",
    "end": "475280"
  },
  {
    "text": "policies which are meant for regular",
    "start": "475280",
    "end": "477199"
  },
  {
    "text": "applications running in kubernetes",
    "start": "477199",
    "end": "479039"
  },
  {
    "text": "cluster and the privileged one where",
    "start": "479039",
    "end": "481520"
  },
  {
    "text": "everything is allowed and that",
    "start": "481520",
    "end": "483280"
  },
  {
    "text": "privileged policy is meant mostly for",
    "start": "483280",
    "end": "486479"
  },
  {
    "text": "let's say the part of infrastructure cni",
    "start": "486479",
    "end": "489520"
  },
  {
    "text": "plugins",
    "start": "489520",
    "end": "490879"
  },
  {
    "text": "service meshes or anything which",
    "start": "490879",
    "end": "493759"
  },
  {
    "text": "needs to do something more than regular",
    "start": "493759",
    "end": "496560"
  },
  {
    "text": "containers should be allowed to do",
    "start": "496560",
    "end": "499039"
  },
  {
    "text": "inside kubernetes cluster",
    "start": "499039",
    "end": "501360"
  },
  {
    "text": "and uh to briefly step by step describe",
    "start": "501360",
    "end": "504479"
  },
  {
    "text": "carloxy works is that",
    "start": "504479",
    "end": "507599"
  },
  {
    "text": "there is one bpf program",
    "start": "507599",
    "end": "510479"
  },
  {
    "text": "and there is fa notify",
    "start": "510479",
    "end": "513440"
  },
  {
    "text": "mechanism which is tracking neurancy",
    "start": "513440",
    "end": "516080"
  },
  {
    "text": "processes",
    "start": "516080",
    "end": "517279"
  },
  {
    "text": "so when",
    "start": "517279",
    "end": "519120"
  },
  {
    "text": "a new runc create and transit start",
    "start": "519120",
    "end": "521599"
  },
  {
    "text": "process comes in in the system on the",
    "start": "521599",
    "end": "523440"
  },
  {
    "text": "kubernetes node",
    "start": "523440",
    "end": "525680"
  },
  {
    "text": "or on the node where we are using docker",
    "start": "525680",
    "end": "528160"
  },
  {
    "text": "then",
    "start": "528160",
    "end": "529519"
  },
  {
    "text": "loxi is being aware of that",
    "start": "529519",
    "end": "532839"
  },
  {
    "text": "and um it's getting the container id",
    "start": "532839",
    "end": "536480"
  },
  {
    "text": "and pid of the transient process which",
    "start": "536480",
    "end": "538880"
  },
  {
    "text": "is starting",
    "start": "538880",
    "end": "540320"
  },
  {
    "text": "and based on that it's trying to figure",
    "start": "540320",
    "end": "543360"
  },
  {
    "text": "out whether what's the context of that",
    "start": "543360",
    "end": "545519"
  },
  {
    "text": "container whether it's running in docker",
    "start": "545519",
    "end": "548160"
  },
  {
    "text": "or whether it's running in kubernetes if",
    "start": "548160",
    "end": "550399"
  },
  {
    "text": "it's running in kubernetes it's trying",
    "start": "550399",
    "end": "552240"
  },
  {
    "text": "to figure out the policy which should be",
    "start": "552240",
    "end": "554640"
  },
  {
    "text": "applied there and after figuring that",
    "start": "554640",
    "end": "557200"
  },
  {
    "text": "out it's saving the information about",
    "start": "557200",
    "end": "560880"
  },
  {
    "text": "the initial process runs the process",
    "start": "560880",
    "end": "563279"
  },
  {
    "text": "content container and policy level into",
    "start": "563279",
    "end": "565360"
  },
  {
    "text": "bpf maps and afterwards there are other",
    "start": "565360",
    "end": "569279"
  },
  {
    "text": "lsmbpf programs which based on that",
    "start": "569279",
    "end": "573519"
  },
  {
    "text": "when there is a",
    "start": "573519",
    "end": "575200"
  },
  {
    "text": "lsm hook triggered in the system they",
    "start": "575200",
    "end": "577680"
  },
  {
    "text": "are firstly checking whether the given",
    "start": "577680",
    "end": "579920"
  },
  {
    "text": "process is containerized and if it's",
    "start": "579920",
    "end": "582240"
  },
  {
    "text": "containerized then it's uh applying",
    "start": "582240",
    "end": "585200"
  },
  {
    "text": "policies uh according to",
    "start": "585200",
    "end": "588320"
  },
  {
    "text": "according to logic which is present in",
    "start": "588320",
    "end": "590240"
  },
  {
    "text": "loxi codebase",
    "start": "590240",
    "end": "593279"
  },
  {
    "start": "593000",
    "end": "670000"
  },
  {
    "text": "and",
    "start": "594720",
    "end": "595839"
  },
  {
    "text": "for now loxi is able to enforce policies",
    "start": "595839",
    "end": "599760"
  },
  {
    "text": "on byte mounts so it's able to prevent",
    "start": "599760",
    "end": "602720"
  },
  {
    "text": "baseline and restricted containers from",
    "start": "602720",
    "end": "606240"
  },
  {
    "text": "binding and from bind mounting anything",
    "start": "606240",
    "end": "608640"
  },
  {
    "text": "from the host file system",
    "start": "608640",
    "end": "610720"
  },
  {
    "text": "it also is able to restrict some",
    "start": "610720",
    "end": "614480"
  },
  {
    "text": "potentially",
    "start": "614480",
    "end": "616560"
  },
  {
    "text": "some directories from being accessed",
    "start": "616560",
    "end": "619360"
  },
  {
    "text": "which can potentially leak some",
    "start": "619360",
    "end": "620959"
  },
  {
    "text": "information about the host because for",
    "start": "620959",
    "end": "623120"
  },
  {
    "text": "example like",
    "start": "623120",
    "end": "624720"
  },
  {
    "text": "there is csfs",
    "start": "624720",
    "end": "627760"
  },
  {
    "text": "and directory inside containers which",
    "start": "627760",
    "end": "630399"
  },
  {
    "text": "has i did identical content with the",
    "start": "630399",
    "end": "633200"
  },
  {
    "text": "host file system",
    "start": "633200",
    "end": "634800"
  },
  {
    "text": "so the goal of log c is for every such",
    "start": "634800",
    "end": "638480"
  },
  {
    "text": "an unnamed based",
    "start": "638480",
    "end": "640640"
  },
  {
    "text": "uh directory which can potentially leak",
    "start": "640640",
    "end": "643279"
  },
  {
    "text": "information from the host",
    "start": "643279",
    "end": "645120"
  },
  {
    "text": "loxi is trying to hide them",
    "start": "645120",
    "end": "648560"
  },
  {
    "text": "loxi is also preventing the access to",
    "start": "648560",
    "end": "651200"
  },
  {
    "text": "kernel syslog",
    "start": "651200",
    "end": "652880"
  },
  {
    "text": "because",
    "start": "652880",
    "end": "654240"
  },
  {
    "text": "in on many container runtimes and many",
    "start": "654240",
    "end": "656880"
  },
  {
    "text": "kubernetes clusters you're able to",
    "start": "656880",
    "end": "659839"
  },
  {
    "text": "execute the mask inside container",
    "start": "659839",
    "end": "662720"
  },
  {
    "text": "and",
    "start": "662720",
    "end": "663680"
  },
  {
    "text": "loxy is also coming with the policies",
    "start": "663680",
    "end": "666240"
  },
  {
    "text": "about",
    "start": "666240",
    "end": "667519"
  },
  {
    "text": "user id so it prevents from logging as",
    "start": "667519",
    "end": "670480"
  },
  {
    "start": "670000",
    "end": "840000"
  },
  {
    "text": "root",
    "start": "670480",
    "end": "672160"
  },
  {
    "text": "this is how the policy level can be",
    "start": "672160",
    "end": "674000"
  },
  {
    "text": "applied on kubernetes",
    "start": "674000",
    "end": "676240"
  },
  {
    "text": "and the future plan for loxi is",
    "start": "676240",
    "end": "679839"
  },
  {
    "text": "to",
    "start": "679839",
    "end": "681440"
  },
  {
    "text": "allow executing only specific binaries",
    "start": "681440",
    "end": "683680"
  },
  {
    "text": "in the end every point for",
    "start": "683680",
    "end": "685360"
  },
  {
    "text": "for example",
    "start": "685360",
    "end": "687760"
  },
  {
    "text": "there is a plan of for making the most",
    "start": "687760",
    "end": "690640"
  },
  {
    "text": "of container file system read only",
    "start": "690640",
    "end": "693120"
  },
  {
    "text": "immutable",
    "start": "693120",
    "end": "695360"
  },
  {
    "text": "the plan is to support more container",
    "start": "695360",
    "end": "697440"
  },
  {
    "text": "runtimes because for now only neurons is",
    "start": "697440",
    "end": "699360"
  },
  {
    "text": "supported and more container engines",
    "start": "699360",
    "end": "704079"
  },
  {
    "text": "we also plan to",
    "start": "704160",
    "end": "706079"
  },
  {
    "text": "leverage ebpf lsm attached to c groups",
    "start": "706079",
    "end": "709040"
  },
  {
    "text": "and maybe also a good plan would be to",
    "start": "709040",
    "end": "712639"
  },
  {
    "text": "develop loxi in the direction of",
    "start": "712639",
    "end": "714399"
  },
  {
    "text": "providing a policy language",
    "start": "714399",
    "end": "717120"
  },
  {
    "text": "do i have some time for small demo yet",
    "start": "717120",
    "end": "719440"
  },
  {
    "text": "or not really all right",
    "start": "719440",
    "end": "723200"
  },
  {
    "text": "okay",
    "start": "723279",
    "end": "724240"
  },
  {
    "text": "so",
    "start": "724240",
    "end": "725600"
  },
  {
    "text": "here i have a kubernetes cluster which",
    "start": "725600",
    "end": "728320"
  },
  {
    "text": "is running loxi",
    "start": "728320",
    "end": "730800"
  },
  {
    "text": "so",
    "start": "730800",
    "end": "733040"
  },
  {
    "text": "we can get",
    "start": "733360",
    "end": "735360"
  },
  {
    "text": "lots of it and for now it's just an",
    "start": "735360",
    "end": "737519"
  },
  {
    "text": "empty k3s cluster",
    "start": "737519",
    "end": "740000"
  },
  {
    "text": "let's try to look for lox he locks in",
    "start": "740000",
    "end": "742880"
  },
  {
    "text": "the separate terminal here",
    "start": "742880",
    "end": "745279"
  },
  {
    "text": "for that you can we can use journal ctl",
    "start": "745279",
    "end": "748959"
  },
  {
    "text": "a fu lock c",
    "start": "748959",
    "end": "751040"
  },
  {
    "text": "and here are the locks",
    "start": "751040",
    "end": "753120"
  },
  {
    "text": "and",
    "start": "753120",
    "end": "754240"
  },
  {
    "text": "i prepared two types of demons of",
    "start": "754240",
    "end": "757200"
  },
  {
    "text": "deployments so there is one deployment",
    "start": "757200",
    "end": "760959"
  },
  {
    "text": "with engine x",
    "start": "760959",
    "end": "762639"
  },
  {
    "text": "which should fail and that's because",
    "start": "762639",
    "end": "765120"
  },
  {
    "text": "it's using the",
    "start": "765120",
    "end": "765870"
  },
  {
    "text": "[Music]",
    "start": "765870",
    "end": "767360"
  },
  {
    "text": "default container image of engine x",
    "start": "767360",
    "end": "769760"
  },
  {
    "text": "which is running as root and by default",
    "start": "769760",
    "end": "771920"
  },
  {
    "text": "loxi is enforcing a good practice of",
    "start": "771920",
    "end": "775519"
  },
  {
    "text": "logging as a regular user inside",
    "start": "775519",
    "end": "777440"
  },
  {
    "text": "containers not running",
    "start": "777440",
    "end": "779200"
  },
  {
    "text": "regular applications as a route",
    "start": "779200",
    "end": "781600"
  },
  {
    "text": "so when we try to deploy it",
    "start": "781600",
    "end": "786199"
  },
  {
    "text": "um",
    "start": "788000",
    "end": "790240"
  },
  {
    "text": "loxi should prevent it from running and",
    "start": "790959",
    "end": "793839"
  },
  {
    "text": "let's see whether that works yeah it's",
    "start": "793839",
    "end": "795760"
  },
  {
    "text": "crashing but also there is another",
    "start": "795760",
    "end": "798480"
  },
  {
    "text": "engine x should succeed which is based",
    "start": "798480",
    "end": "800959"
  },
  {
    "text": "on bitnami image with",
    "start": "800959",
    "end": "802959"
  },
  {
    "text": "regular user running",
    "start": "802959",
    "end": "805040"
  },
  {
    "text": "and it's succeeding",
    "start": "805040",
    "end": "808959"
  },
  {
    "text": "thank you for listening",
    "start": "813040",
    "end": "814720"
  },
  {
    "text": "i invite you to check our documentation",
    "start": "814720",
    "end": "817200"
  },
  {
    "text": "which is on loxiproject github.io",
    "start": "817200",
    "end": "820959"
  },
  {
    "text": "we have a github repository where you",
    "start": "820959",
    "end": "823279"
  },
  {
    "text": "can check out the code and the",
    "start": "823279",
    "end": "825040"
  },
  {
    "text": "discussion about the project is",
    "start": "825040",
    "end": "827600"
  },
  {
    "text": "taking place on rus cloud native discord",
    "start": "827600",
    "end": "830880"
  },
  {
    "text": "server where we have a dedicated channel",
    "start": "830880",
    "end": "833440"
  },
  {
    "text": "for the project",
    "start": "833440",
    "end": "835040"
  },
  {
    "text": "thank you very much for listening",
    "start": "835040",
    "end": "837030"
  },
  {
    "text": "[Applause]",
    "start": "837030",
    "end": "842389"
  }
]