[
  {
    "text": "hello everybody I am Sundar nadato from",
    "start": "1500",
    "end": "4620"
  },
  {
    "text": "Intel and I'm happy to co-present this",
    "start": "4620",
    "end": "7440"
  },
  {
    "text": "talk with Sandeep Sharma from all our",
    "start": "7440",
    "end": "10200"
  },
  {
    "text": "networks in this talk we will first",
    "start": "10200",
    "end": "13139"
  },
  {
    "text": "introduce MCO and describe how it",
    "start": "13139",
    "end": "15960"
  },
  {
    "text": "manages workflows then Sandeep will",
    "start": "15960",
    "end": "18840"
  },
  {
    "text": "explain the work that Arna has done in",
    "start": "18840",
    "end": "21720"
  },
  {
    "text": "using MCO workflows to automate",
    "start": "21720",
    "end": "24140"
  },
  {
    "text": "policy-based service Assurance for cloud",
    "start": "24140",
    "end": "26699"
  },
  {
    "text": "native workloads",
    "start": "26699",
    "end": "28560"
  },
  {
    "text": "The Edge and multi-cluster orchestrator",
    "start": "28560",
    "end": "31080"
  },
  {
    "text": "is an open source project to deploy and",
    "start": "31080",
    "end": "34200"
  },
  {
    "text": "manage Cloud native applications and",
    "start": "34200",
    "end": "36719"
  },
  {
    "text": "network functions across kubernetes",
    "start": "36719",
    "end": "39059"
  },
  {
    "text": "clusters it is designed to handle jio",
    "start": "39059",
    "end": "41760"
  },
  {
    "text": "distributed microservice based workloads",
    "start": "41760",
    "end": "44820"
  },
  {
    "text": "which need to be deployed at scale",
    "start": "44820",
    "end": "47100"
  },
  {
    "text": "across jio boundaries in public or",
    "start": "47100",
    "end": "50399"
  },
  {
    "text": "private clouds in Telco or co-location",
    "start": "50399",
    "end": "53399"
  },
  {
    "text": "edges and on-prem data centers",
    "start": "53399",
    "end": "57059"
  },
  {
    "text": "MCO is unique among app orchestrators in",
    "start": "57059",
    "end": "60899"
  },
  {
    "text": "that it can not only deploy apps scan",
    "start": "60899",
    "end": "63600"
  },
  {
    "text": "charts but also automate the",
    "start": "63600",
    "end": "65640"
  },
  {
    "text": "configuration of the environment around",
    "start": "65640",
    "end": "67619"
  },
  {
    "text": "the application for example if the",
    "start": "67619",
    "end": "70439"
  },
  {
    "text": "kubernetes Clusters Ingress Gateway it",
    "start": "70439",
    "end": "73740"
  },
  {
    "text": "may need to be provisioned with the HTTP",
    "start": "73740",
    "end": "76320"
  },
  {
    "text": "routes for the application",
    "start": "76320",
    "end": "78180"
  },
  {
    "text": "also the Enterprise deploying the app",
    "start": "78180",
    "end": "81180"
  },
  {
    "text": "may have its own certificate Authority",
    "start": "81180",
    "end": "83540"
  },
  {
    "text": "if so an intermediate CA has to be set",
    "start": "83540",
    "end": "87420"
  },
  {
    "text": "up for the cluster and certificates for",
    "start": "87420",
    "end": "90299"
  },
  {
    "text": "mtls and other needs need to be derived",
    "start": "90299",
    "end": "93600"
  },
  {
    "text": "from that",
    "start": "93600",
    "end": "95119"
  },
  {
    "text": "MCO automates all these scenarios MCO",
    "start": "95119",
    "end": "99060"
  },
  {
    "text": "has been designed to be extensible it",
    "start": "99060",
    "end": "101640"
  },
  {
    "text": "has a micro service based architecture",
    "start": "101640",
    "end": "103619"
  },
  {
    "text": "and can be extended by adding more",
    "start": "103619",
    "end": "106680"
  },
  {
    "text": "controllers or custom workflows",
    "start": "106680",
    "end": "109500"
  },
  {
    "text": "MCO can be used as a building block for",
    "start": "109500",
    "end": "112860"
  },
  {
    "text": "larger Stacks such as the 5G super",
    "start": "112860",
    "end": "115560"
  },
  {
    "text": "blueprint from Lux Foundation",
    "start": "115560",
    "end": "119118"
  },
  {
    "text": "Emco has been a separate open source",
    "start": "119700",
    "end": "122579"
  },
  {
    "text": "project from 2019 since its origination",
    "start": "122579",
    "end": "126180"
  },
  {
    "text": "as a module and own app since last year",
    "start": "126180",
    "end": "129060"
  },
  {
    "text": "it has been a part of Linux Foundation",
    "start": "129060",
    "end": "131459"
  },
  {
    "text": "we have participation from several",
    "start": "131459",
    "end": "133739"
  },
  {
    "text": "leading industry players including",
    "start": "133739",
    "end": "135599"
  },
  {
    "text": "telcos commercial support is available",
    "start": "135599",
    "end": "138180"
  },
  {
    "text": "for example from RNR networks as part of",
    "start": "138180",
    "end": "141959"
  },
  {
    "text": "their amp car platform",
    "start": "141959",
    "end": "143760"
  },
  {
    "text": "Emco is a part of the 5G super blueprint",
    "start": "143760",
    "end": "147120"
  },
  {
    "text": "from Lux Foundation networking",
    "start": "147120",
    "end": "149340"
  },
  {
    "text": "we have an active ecosystem and there",
    "start": "149340",
    "end": "151980"
  },
  {
    "text": "are ongoing engagements with some telcos",
    "start": "151980",
    "end": "154620"
  },
  {
    "text": "for deployment",
    "start": "154620",
    "end": "157560"
  },
  {
    "text": "MCO can be extended by adding new",
    "start": "157560",
    "end": "160920"
  },
  {
    "text": "controllers that execute as part of the",
    "start": "160920",
    "end": "163620"
  },
  {
    "text": "app deployment life cycle but you can",
    "start": "163620",
    "end": "166440"
  },
  {
    "text": "also extend MCO functionality with",
    "start": "166440",
    "end": "168900"
  },
  {
    "text": "workflows for situations where actions",
    "start": "168900",
    "end": "172319"
  },
  {
    "text": "need to be taken outside of application",
    "start": "172319",
    "end": "175080"
  },
  {
    "text": "life cycle events or when you want a",
    "start": "175080",
    "end": "178080"
  },
  {
    "text": "limit access to the MCO shared resource",
    "start": "178080",
    "end": "180840"
  },
  {
    "text": "and databases",
    "start": "180840",
    "end": "182160"
  },
  {
    "text": "MCO can handle workflows using the",
    "start": "182160",
    "end": "185160"
  },
  {
    "text": "temporal workflow engine since mco's",
    "start": "185160",
    "end": "187980"
  },
  {
    "text": "22o3 release you can launch workflows",
    "start": "187980",
    "end": "191099"
  },
  {
    "text": "monitor the status and cancel them all",
    "start": "191099",
    "end": "194519"
  },
  {
    "text": "using MCO apis",
    "start": "194519",
    "end": "197340"
  },
  {
    "text": "temporal is a widely used open source",
    "start": "197340",
    "end": "200580"
  },
  {
    "text": "engine that offers resilience and proven",
    "start": "200580",
    "end": "203280"
  },
  {
    "text": "scale we can think of temporal workflows",
    "start": "203280",
    "end": "206220"
  },
  {
    "text": "as a set of distributed processes Each",
    "start": "206220",
    "end": "209159"
  },
  {
    "text": "of which execute several complex",
    "start": "209159",
    "end": "211200"
  },
  {
    "text": "stateful steps these workflows may run",
    "start": "211200",
    "end": "214319"
  },
  {
    "text": "for days or months and may even be cron",
    "start": "214319",
    "end": "217620"
  },
  {
    "text": "jobs that repeat periodically the",
    "start": "217620",
    "end": "220260"
  },
  {
    "text": "temporal framework provides many",
    "start": "220260",
    "end": "222120"
  },
  {
    "text": "benefits one is resilience since the",
    "start": "222120",
    "end": "225239"
  },
  {
    "text": "temporal server records the state for",
    "start": "225239",
    "end": "228000"
  },
  {
    "text": "each task and restores the state in the",
    "start": "228000",
    "end": "231060"
  },
  {
    "text": "event of a failure it provides a",
    "start": "231060",
    "end": "233280"
  },
  {
    "text": "standard way to set timeout values and",
    "start": "233280",
    "end": "236280"
  },
  {
    "text": "retry policies for workflows and their",
    "start": "236280",
    "end": "239580"
  },
  {
    "text": "constitute activities it also helps with",
    "start": "239580",
    "end": "242459"
  },
  {
    "text": "observability of workflows with status",
    "start": "242459",
    "end": "245220"
  },
  {
    "text": "checks and queries and it is known to",
    "start": "245220",
    "end": "247980"
  },
  {
    "text": "scale to a large number of workflows and",
    "start": "247980",
    "end": "250260"
  },
  {
    "text": "tasks these workflows can be written in",
    "start": "250260",
    "end": "253080"
  },
  {
    "text": "many common languages",
    "start": "253080",
    "end": "255299"
  },
  {
    "text": "let us now look at how temporal can be",
    "start": "255299",
    "end": "258299"
  },
  {
    "text": "integrated with MCO in a cloud native",
    "start": "258299",
    "end": "260699"
  },
  {
    "text": "deployment the temporal server will be",
    "start": "260699",
    "end": "263220"
  },
  {
    "text": "deployed as a container running in one",
    "start": "263220",
    "end": "265440"
  },
  {
    "text": "or more kubernetes parts",
    "start": "265440",
    "end": "267540"
  },
  {
    "text": "the worker processes will also be",
    "start": "267540",
    "end": "270060"
  },
  {
    "text": "deployed as kubernetes Parts perhaps in",
    "start": "270060",
    "end": "272699"
  },
  {
    "text": "a different cluster",
    "start": "272699",
    "end": "274199"
  },
  {
    "text": "they may be deployed with the help shot",
    "start": "274199",
    "end": "276180"
  },
  {
    "text": "across one or more clusters possibly by",
    "start": "276180",
    "end": "279060"
  },
  {
    "text": "MCO itself",
    "start": "279060",
    "end": "280620"
  },
  {
    "text": "a single worker can execute many tasks",
    "start": "280620",
    "end": "283500"
  },
  {
    "text": "from different workflows",
    "start": "283500",
    "end": "285840"
  },
  {
    "text": "the workflow client will also be",
    "start": "285840",
    "end": "288540"
  },
  {
    "text": "deployed as a kubernetes part and it may",
    "start": "288540",
    "end": "291240"
  },
  {
    "text": "be in yet another cluster one part may",
    "start": "291240",
    "end": "294120"
  },
  {
    "text": "contain more than one workflow client",
    "start": "294120",
    "end": "295979"
  },
  {
    "text": "and each client may possibly handle more",
    "start": "295979",
    "end": "299580"
  },
  {
    "text": "than one workflow",
    "start": "299580",
    "end": "301080"
  },
  {
    "text": "MCO needs a way to invoke this workflow",
    "start": "301080",
    "end": "304500"
  },
  {
    "text": "client so we expect the client is",
    "start": "304500",
    "end": "307440"
  },
  {
    "text": "packaged with the HTTP server",
    "start": "307440",
    "end": "310440"
  },
  {
    "text": "this HTTP server takes an HTTP post call",
    "start": "310440",
    "end": "314160"
  },
  {
    "text": "to trigger the right workflow client the",
    "start": "314160",
    "end": "317639"
  },
  {
    "text": "workflow parameters are included in the",
    "start": "317639",
    "end": "320100"
  },
  {
    "text": "body of the postcard",
    "start": "320100",
    "end": "322259"
  },
  {
    "text": "M course composed of many microservices",
    "start": "322259",
    "end": "324979"
  },
  {
    "text": "MCO may be deployed in a different",
    "start": "324979",
    "end": "327600"
  },
  {
    "text": "kubernetes cluster than workflow clients",
    "start": "327600",
    "end": "331020"
  },
  {
    "text": "we have added the workflow manager as a",
    "start": "331020",
    "end": "334259"
  },
  {
    "text": "separate microservice that allows MCO",
    "start": "334259",
    "end": "336840"
  },
  {
    "text": "users to Define intents for workflows",
    "start": "336840",
    "end": "339620"
  },
  {
    "text": "including the workflow client location",
    "start": "339620",
    "end": "342000"
  },
  {
    "text": "as well as timeouts and retry policies",
    "start": "342000",
    "end": "345240"
  },
  {
    "text": "for each activity and for the whole",
    "start": "345240",
    "end": "347639"
  },
  {
    "text": "workflow",
    "start": "347639",
    "end": "348780"
  },
  {
    "text": "the workflow manager initiates a",
    "start": "348780",
    "end": "351240"
  },
  {
    "text": "workflow by adding a HTTP post to the",
    "start": "351240",
    "end": "354539"
  },
  {
    "text": "workflow client",
    "start": "354539",
    "end": "356820"
  },
  {
    "text": "the workflow manager can also perform",
    "start": "356820",
    "end": "358919"
  },
  {
    "text": "status checks and execute queries on a",
    "start": "358919",
    "end": "362220"
  },
  {
    "text": "workflow by directly calling the",
    "start": "362220",
    "end": "364380"
  },
  {
    "text": "temporal server it can also cancel or",
    "start": "364380",
    "end": "367620"
  },
  {
    "text": "terminate a workflow",
    "start": "367620",
    "end": "369539"
  },
  {
    "text": "I now hand over the floor to Sandeep",
    "start": "369539",
    "end": "371820"
  },
  {
    "text": "thank you thank you sunder",
    "start": "371820",
    "end": "374699"
  },
  {
    "text": "hi all my name is Sandeep and I am from",
    "start": "374699",
    "end": "377039"
  },
  {
    "text": "Arna networks and I am going to",
    "start": "377039",
    "end": "379199"
  },
  {
    "text": "demonstrate a service Assurance use case",
    "start": "379199",
    "end": "381300"
  },
  {
    "text": "using MCO",
    "start": "381300",
    "end": "383699"
  },
  {
    "text": "for this purpose we have introduced a",
    "start": "383699",
    "end": "386280"
  },
  {
    "text": "new controller in Amco and it is called",
    "start": "386280",
    "end": "388080"
  },
  {
    "text": "the policy controller",
    "start": "388080",
    "end": "389880"
  },
  {
    "text": "this controller will enable users to",
    "start": "389880",
    "end": "392340"
  },
  {
    "text": "define the closed loops and Via Amco",
    "start": "392340",
    "end": "396000"
  },
  {
    "text": "intents and deploy the closed Loops in",
    "start": "396000",
    "end": "397919"
  },
  {
    "text": "the Target clusters",
    "start": "397919",
    "end": "400199"
  },
  {
    "text": "the policy engine that we have used in",
    "start": "400199",
    "end": "402660"
  },
  {
    "text": "this controller is the Oppa open policy",
    "start": "402660",
    "end": "406319"
  },
  {
    "text": "agent",
    "start": "406319",
    "end": "407699"
  },
  {
    "text": "opard",
    "start": "407699",
    "end": "409259"
  },
  {
    "text": "enables users to Define policies",
    "start": "409259",
    "end": "412139"
  },
  {
    "text": "declaratively",
    "start": "412139",
    "end": "413880"
  },
  {
    "text": "and opar separates the policy code from",
    "start": "413880",
    "end": "417419"
  },
  {
    "text": "the application code from the micro",
    "start": "417419",
    "end": "419520"
  },
  {
    "text": "service code code flow",
    "start": "419520",
    "end": "422039"
  },
  {
    "text": "so with that brief introduction I'll div",
    "start": "422039",
    "end": "424860"
  },
  {
    "text": "I'll describe what the Amco policy",
    "start": "424860",
    "end": "428280"
  },
  {
    "text": "controller is about",
    "start": "428280",
    "end": "431000"
  },
  {
    "text": "so Amco policy controller is a new",
    "start": "432000",
    "end": "433860"
  },
  {
    "text": "microservice that is introduced in memco",
    "start": "433860",
    "end": "436800"
  },
  {
    "text": "and it acts as the policy informants",
    "start": "436800",
    "end": "438780"
  },
  {
    "text": "enforcement point and as I have already",
    "start": "438780",
    "end": "441300"
  },
  {
    "text": "described",
    "start": "441300",
    "end": "442759"
  },
  {
    "text": "the policy controller uses oppa as the",
    "start": "442759",
    "end": "445560"
  },
  {
    "text": "policy agent",
    "start": "445560",
    "end": "446880"
  },
  {
    "text": "so there are two parts to this policy",
    "start": "446880",
    "end": "448979"
  },
  {
    "text": "controller one is the policy agents",
    "start": "448979",
    "end": "452340"
  },
  {
    "text": "these agents are deployed in the Target",
    "start": "452340",
    "end": "454620"
  },
  {
    "text": "clusters and their sole responsibility",
    "start": "454620",
    "end": "457139"
  },
  {
    "text": "is to collect metrics from different",
    "start": "457139",
    "end": "459120"
  },
  {
    "text": "resources",
    "start": "459120",
    "end": "460380"
  },
  {
    "text": "Prometheus is an example and in our",
    "start": "460380",
    "end": "462720"
  },
  {
    "text": "demonstration we are using Prometheus",
    "start": "462720",
    "end": "465240"
  },
  {
    "text": "this agent is implemented as a",
    "start": "465240",
    "end": "468599"
  },
  {
    "text": "kubernetes controller",
    "start": "468599",
    "end": "470580"
  },
  {
    "text": "and we Define custom resources",
    "start": "470580",
    "end": "474439"
  },
  {
    "text": "for when we Define custom resources",
    "start": "474539",
    "end": "477919"
  },
  {
    "text": "specifying the metrics the kind of",
    "start": "477919",
    "end": "481139"
  },
  {
    "text": "metrics that we want to collect the in",
    "start": "481139",
    "end": "483660"
  },
  {
    "text": "the intervals of metric collection",
    "start": "483660",
    "end": "486660"
  },
  {
    "text": "etcetera",
    "start": "486660",
    "end": "487800"
  },
  {
    "text": "these agents collect metrics and they",
    "start": "487800",
    "end": "490560"
  },
  {
    "text": "enrich these metrics with with very",
    "start": "490560",
    "end": "493560"
  },
  {
    "text": "specific information which the Amco",
    "start": "493560",
    "end": "496560"
  },
  {
    "text": "controller requires in the central Data",
    "start": "496560",
    "end": "498840"
  },
  {
    "text": "Center",
    "start": "498840",
    "end": "499860"
  },
  {
    "text": "in order to in order to complete the",
    "start": "499860",
    "end": "502560"
  },
  {
    "text": "closed loop",
    "start": "502560",
    "end": "504720"
  },
  {
    "text": "the other part of the controller is the",
    "start": "504720",
    "end": "508259"
  },
  {
    "text": "the main policy controller which sits in",
    "start": "508259",
    "end": "510360"
  },
  {
    "text": "the central Data Center",
    "start": "510360",
    "end": "511979"
  },
  {
    "text": "its main responsibilities are to serve",
    "start": "511979",
    "end": "514800"
  },
  {
    "text": "the policy intent apis which the user",
    "start": "514800",
    "end": "517620"
  },
  {
    "text": "specifies",
    "start": "517620",
    "end": "518880"
  },
  {
    "text": "and it also is responsible for calling",
    "start": "518880",
    "end": "521520"
  },
  {
    "text": "the the policy engine itself for uh for",
    "start": "521520",
    "end": "526140"
  },
  {
    "text": "the evaluation of the policies based on",
    "start": "526140",
    "end": "529140"
  },
  {
    "text": "the kpis and metrics that it receives",
    "start": "529140",
    "end": "531540"
  },
  {
    "text": "from the agents in the Target clusters",
    "start": "531540",
    "end": "534180"
  },
  {
    "text": "and after the evaluation the policy also",
    "start": "534180",
    "end": "537480"
  },
  {
    "text": "uh and after the evaluation the policy",
    "start": "537480",
    "end": "539940"
  },
  {
    "text": "controller also calls the actors and as",
    "start": "539940",
    "end": "543720"
  },
  {
    "text": "we know in a typical closed loop",
    "start": "543720",
    "end": "545279"
  },
  {
    "text": "scenario there is a component which",
    "start": "545279",
    "end": "548279"
  },
  {
    "text": "executes the policy and then there is a",
    "start": "548279",
    "end": "550440"
  },
  {
    "text": "component which takes the actual action",
    "start": "550440",
    "end": "552720"
  },
  {
    "text": "of the uh of auto correction",
    "start": "552720",
    "end": "556260"
  },
  {
    "text": "so in our case the controller that is",
    "start": "556260",
    "end": "559560"
  },
  {
    "text": "doing the auto correction is the",
    "start": "559560",
    "end": "561300"
  },
  {
    "text": "temporal workflow engine in MCO",
    "start": "561300",
    "end": "563580"
  },
  {
    "text": "and in our use case the auto corrective",
    "start": "563580",
    "end": "565680"
  },
  {
    "text": "action that we have to take is to",
    "start": "565680",
    "end": "568200"
  },
  {
    "text": "migrate an application from one cluster",
    "start": "568200",
    "end": "570060"
  },
  {
    "text": "to another",
    "start": "570060",
    "end": "571740"
  },
  {
    "text": "so temporal workflow as the temporal",
    "start": "571740",
    "end": "576360"
  },
  {
    "text": "workflow engine as the actor is",
    "start": "576360",
    "end": "578459"
  },
  {
    "text": "configured in the policy controller that",
    "start": "578459",
    "end": "581760"
  },
  {
    "text": "I will show in the demonstration",
    "start": "581760",
    "end": "584760"
  },
  {
    "text": "so these are the responsibilities of the",
    "start": "584760",
    "end": "587220"
  },
  {
    "text": "agents which sit in the central Data",
    "start": "587220",
    "end": "589680"
  },
  {
    "text": "Center",
    "start": "589680",
    "end": "591240"
  },
  {
    "text": "so this slide explains the policy",
    "start": "591240",
    "end": "593760"
  },
  {
    "text": "controller and temporal workflow",
    "start": "593760",
    "end": "595380"
  },
  {
    "text": "integration",
    "start": "595380",
    "end": "598380"
  },
  {
    "text": "so as I have already explained the actor",
    "start": "598500",
    "end": "600839"
  },
  {
    "text": "in this case",
    "start": "600839",
    "end": "602399"
  },
  {
    "text": "is the temporal workflow engine in MCO",
    "start": "602399",
    "end": "606779"
  },
  {
    "text": "and the the policy controller after the",
    "start": "606779",
    "end": "609660"
  },
  {
    "text": "evaluation of policies will call a",
    "start": "609660",
    "end": "613200"
  },
  {
    "text": "specific workflow in the temporal",
    "start": "613200",
    "end": "615959"
  },
  {
    "text": "workflow engine",
    "start": "615959",
    "end": "617820"
  },
  {
    "text": "for performing the auto corrective",
    "start": "617820",
    "end": "619560"
  },
  {
    "text": "action",
    "start": "619560",
    "end": "620880"
  },
  {
    "text": "this diagram explains the end to end",
    "start": "620880",
    "end": "622860"
  },
  {
    "text": "closed loop flow",
    "start": "622860",
    "end": "624240"
  },
  {
    "text": "as we see there are policy controllers",
    "start": "624240",
    "end": "627000"
  },
  {
    "text": "in the central data center which are",
    "start": "627000",
    "end": "628980"
  },
  {
    "text": "consuming events from the agents which",
    "start": "628980",
    "end": "631740"
  },
  {
    "text": "sit in the Target clusters",
    "start": "631740",
    "end": "634080"
  },
  {
    "text": "and policy controller is consuming these",
    "start": "634080",
    "end": "636959"
  },
  {
    "text": "events and evaluating the policies",
    "start": "636959",
    "end": "639420"
  },
  {
    "text": "against the metrics that are present in",
    "start": "639420",
    "end": "642779"
  },
  {
    "text": "these events",
    "start": "642779",
    "end": "644040"
  },
  {
    "text": "and",
    "start": "644040",
    "end": "645540"
  },
  {
    "text": "if the policy condition is met",
    "start": "645540",
    "end": "648120"
  },
  {
    "text": "the policy controller is then calling",
    "start": "648120",
    "end": "650040"
  },
  {
    "text": "the actor which is the temporal workflow",
    "start": "650040",
    "end": "652980"
  },
  {
    "text": "so with this explanation I'll jump on to",
    "start": "652980",
    "end": "656160"
  },
  {
    "text": "the demo and demonstrate the service",
    "start": "656160",
    "end": "658740"
  },
  {
    "text": "Assurance use case",
    "start": "658740",
    "end": "660480"
  },
  {
    "text": "using MCO in this use case we are going",
    "start": "660480",
    "end": "663839"
  },
  {
    "text": "to consume the",
    "start": "663839",
    "end": "666899"
  },
  {
    "text": "memory memory utilization As the metric",
    "start": "666899",
    "end": "669779"
  },
  {
    "text": "from application and the condition that",
    "start": "669779",
    "end": "672899"
  },
  {
    "text": "is fed in t policy is that if the memory",
    "start": "672899",
    "end": "675480"
  },
  {
    "text": "utilization is above a certain value we",
    "start": "675480",
    "end": "680279"
  },
  {
    "text": "migrate that application from one",
    "start": "680279",
    "end": "682620"
  },
  {
    "text": "cluster to the other",
    "start": "682620",
    "end": "684600"
  },
  {
    "text": "so in this demand demonstration we are",
    "start": "684600",
    "end": "687000"
  },
  {
    "text": "going to show the",
    "start": "687000",
    "end": "689519"
  },
  {
    "text": "policy intent specification and the",
    "start": "689519",
    "end": "693000"
  },
  {
    "text": "workflow intent specification since",
    "start": "693000",
    "end": "694620"
  },
  {
    "text": "workflow is the actor in the service",
    "start": "694620",
    "end": "696779"
  },
  {
    "text": "Assurance use case",
    "start": "696779",
    "end": "698399"
  },
  {
    "text": "so we will start",
    "start": "698399",
    "end": "699959"
  },
  {
    "text": "by showing the the custom resource that",
    "start": "699959",
    "end": "703200"
  },
  {
    "text": "is created for collecting the metrics so",
    "start": "703200",
    "end": "706200"
  },
  {
    "text": "add ahead as I had explained the agents",
    "start": "706200",
    "end": "709620"
  },
  {
    "text": "which sit in the Target cluster are",
    "start": "709620",
    "end": "712079"
  },
  {
    "text": "are implemented as the kubernetes",
    "start": "712079",
    "end": "714779"
  },
  {
    "text": "controllers",
    "start": "714779",
    "end": "717560"
  },
  {
    "text": "so at this point we can look at",
    "start": "718560",
    "end": "722519"
  },
  {
    "text": "one of the custom resource",
    "start": "722519",
    "end": "725040"
  },
  {
    "text": "that we have created",
    "start": "725040",
    "end": "728240"
  },
  {
    "text": "so the spec is very simple all we are",
    "start": "733200",
    "end": "735600"
  },
  {
    "text": "saying is that we want to collect CPU",
    "start": "735600",
    "end": "737760"
  },
  {
    "text": "and memory related metrics and",
    "start": "737760",
    "end": "740880"
  },
  {
    "text": "with the specification of this CR the",
    "start": "740880",
    "end": "743339"
  },
  {
    "text": "controller will reconcile to it and it",
    "start": "743339",
    "end": "745440"
  },
  {
    "text": "will start collecting these metrics from",
    "start": "745440",
    "end": "747899"
  },
  {
    "text": "all the parts that are created via Amco",
    "start": "747899",
    "end": "750540"
  },
  {
    "text": "and these metrics are collected through",
    "start": "750540",
    "end": "752640"
  },
  {
    "text": "Prometheus",
    "start": "752640",
    "end": "754200"
  },
  {
    "text": "and after collection of these metrics",
    "start": "754200",
    "end": "756180"
  },
  {
    "text": "the the agent is going to enrich these",
    "start": "756180",
    "end": "759180"
  },
  {
    "text": "events and for in the enrichment is done",
    "start": "759180",
    "end": "762779"
  },
  {
    "text": "by adding the deployment ID of these",
    "start": "762779",
    "end": "766260"
  },
  {
    "text": "pods so that MCO in the central data",
    "start": "766260",
    "end": "769920"
  },
  {
    "text": "center could relate these parts to the",
    "start": "769920",
    "end": "772200"
  },
  {
    "text": "composite applications",
    "start": "772200",
    "end": "774079"
  },
  {
    "text": "and the entry deployment intent groups",
    "start": "774079",
    "end": "777600"
  },
  {
    "text": "because the the intent the policy intent",
    "start": "777600",
    "end": "780779"
  },
  {
    "text": "and the workflow intent they are",
    "start": "780779",
    "end": "782279"
  },
  {
    "text": "specified at the deployment intent group",
    "start": "782279",
    "end": "785279"
  },
  {
    "text": "level so this is how the whole",
    "start": "785279",
    "end": "788000"
  },
  {
    "text": "relationship is getting resolved and",
    "start": "788000",
    "end": "790680"
  },
  {
    "text": "maintained",
    "start": "790680",
    "end": "793160"
  },
  {
    "text": "so after this we are going to",
    "start": "793220",
    "end": "796680"
  },
  {
    "text": "prepare the actor and",
    "start": "796680",
    "end": "799980"
  },
  {
    "text": "so by by that what I mean is that we",
    "start": "799980",
    "end": "802380"
  },
  {
    "text": "have to specify the the temporal",
    "start": "802380",
    "end": "804480"
  },
  {
    "text": "workflow intent which Sundar already has",
    "start": "804480",
    "end": "807300"
  },
  {
    "text": "described",
    "start": "807300",
    "end": "810300"
  },
  {
    "text": "this is the uh",
    "start": "812880",
    "end": "816019"
  },
  {
    "text": "this is the workflow definition so it's",
    "start": "816540",
    "end": "819660"
  },
  {
    "text": "a very simple workflow all we are doing",
    "start": "819660",
    "end": "821639"
  },
  {
    "text": "is we are going to migrate an",
    "start": "821639",
    "end": "824100"
  },
  {
    "text": "application from one cluster to other",
    "start": "824100",
    "end": "826440"
  },
  {
    "text": "cluster and this will be triggered via",
    "start": "826440",
    "end": "830459"
  },
  {
    "text": "the action that is that will be taken by",
    "start": "830459",
    "end": "833220"
  },
  {
    "text": "the policy valuation",
    "start": "833220",
    "end": "836240"
  },
  {
    "text": "now we can start",
    "start": "838139",
    "end": "839880"
  },
  {
    "text": "applying the uh the intent",
    "start": "839880",
    "end": "844100"
  },
  {
    "text": "so this CML defines the intent so we are",
    "start": "844860",
    "end": "848519"
  },
  {
    "text": "applying the intent the",
    "start": "848519",
    "end": "851820"
  },
  {
    "text": "workflow intent",
    "start": "851820",
    "end": "854779"
  },
  {
    "text": "so after the intent specification",
    "start": "877260",
    "end": "880380"
  },
  {
    "text": "now we are going to uh",
    "start": "880380",
    "end": "883320"
  },
  {
    "text": "specify the policy intent",
    "start": "883320",
    "end": "887940"
  },
  {
    "text": "so this is the definition of the policy",
    "start": "890940",
    "end": "892860"
  },
  {
    "text": "intent so the policy it has to the",
    "start": "892860",
    "end": "895440"
  },
  {
    "text": "intent has to know the endpoint of the",
    "start": "895440",
    "end": "897300"
  },
  {
    "text": "policy controller",
    "start": "897300",
    "end": "898920"
  },
  {
    "text": "and the uh the workflow name which it",
    "start": "898920",
    "end": "901260"
  },
  {
    "text": "has to trigger",
    "start": "901260",
    "end": "904040"
  },
  {
    "text": "so this is the uh",
    "start": "909779",
    "end": "912240"
  },
  {
    "text": "this is the policy definition",
    "start": "912240",
    "end": "914639"
  },
  {
    "text": "and dynamically we are going to change",
    "start": "914639",
    "end": "916920"
  },
  {
    "text": "this number",
    "start": "916920",
    "end": "920579"
  },
  {
    "text": "which is basically the memory usage",
    "start": "920579",
    "end": "923040"
  },
  {
    "text": "bytes so we will make it a",
    "start": "923040",
    "end": "926300"
  },
  {
    "text": "more logical number",
    "start": "926300",
    "end": "929339"
  },
  {
    "text": "so that this condition is hit",
    "start": "929339",
    "end": "933199"
  },
  {
    "text": "after changing the uh",
    "start": "937680",
    "end": "941279"
  },
  {
    "text": "the value of the memory bytes that is to",
    "start": "941279",
    "end": "944040"
  },
  {
    "text": "be compared with",
    "start": "944040",
    "end": "945959"
  },
  {
    "text": "we see that the policy has hit and and",
    "start": "945959",
    "end": "950399"
  },
  {
    "text": "it has already triggered the actor to",
    "start": "950399",
    "end": "953100"
  },
  {
    "text": "take the action and on the right hand",
    "start": "953100",
    "end": "955019"
  },
  {
    "text": "side of the screen we see that the the",
    "start": "955019",
    "end": "957420"
  },
  {
    "text": "application has already started",
    "start": "957420",
    "end": "958800"
  },
  {
    "text": "migrating so it it is terminating in the",
    "start": "958800",
    "end": "961320"
  },
  {
    "text": "cluster one and it has started to come",
    "start": "961320",
    "end": "963959"
  },
  {
    "text": "up in the cluster too",
    "start": "963959",
    "end": "967260"
  },
  {
    "text": "so yeah so that concludes my demo thank",
    "start": "967260",
    "end": "970620"
  },
  {
    "text": "you",
    "start": "970620",
    "end": "972740"
  }
]