[
  {
    "text": "thanks for coming to our pitch um we're going to talk about node resources",
    "start": "1260",
    "end": "7080"
  },
  {
    "text": "it's a node resource well you've probably heard of kubernetes and kublet and container run times maybe and",
    "start": "7080",
    "end": "14099"
  },
  {
    "text": "anybody needs to know a little bit more about container runtime raise your hand if you're good if you're if you",
    "start": "14099",
    "end": "19920"
  },
  {
    "text": "understand what those are that then that's great hey about I'd say about six years ago",
    "start": "19920",
    "end": "25320"
  },
  {
    "text": "I'm just gonna do a little intro a little history before handing off to Christian",
    "start": "25320",
    "end": "30900"
  },
  {
    "text": "about six years ago we were sitting around a round table doing the open container specification for runtime",
    "start": "30900",
    "end": "37739"
  },
  {
    "text": "specifications and a guy named Bernal Patel I don't know if he's here or not but Ronald Patel came up with an idea to",
    "start": "37739",
    "end": "44040"
  },
  {
    "text": "do hooks in inside of the Run C runtime using some text that would go into the oci",
    "start": "44040",
    "end": "51180"
  },
  {
    "text": "specification and those hooks would be executable programs that will be run at",
    "start": "51180",
    "end": "56579"
  },
  {
    "text": "particular points at which a container is executed for example pre-start post",
    "start": "56579",
    "end": "61680"
  },
  {
    "text": "start you know that kind of thing but how would people Define were that",
    "start": "61680",
    "end": "67979"
  },
  {
    "text": "where would they put them okay uh there would just be a path in the oci spec to",
    "start": "67979",
    "end": "73500"
  },
  {
    "text": "where these hook these application programs would be that would actually receive the contents of the oci spec",
    "start": "73500",
    "end": "80640"
  },
  {
    "text": "maybe some State and then reply back um you know synchronously in with maybe",
    "start": "80640",
    "end": "85860"
  },
  {
    "text": "some modifications to the oci spec or they would do an attach or a resource and that's where no resource comes in",
    "start": "85860",
    "end": "93180"
  },
  {
    "text": "the reason that people need to extend the these container runtime engines if",
    "start": "93180",
    "end": "98460"
  },
  {
    "text": "you will underneath the covers is because resource managers need to be",
    "start": "98460",
    "end": "103500"
  },
  {
    "text": "able to modify how the containers get access to the resources how much resources they get and we we try to do",
    "start": "103500",
    "end": "111960"
  },
  {
    "text": "some configuration if you will in the container runtimes but we always seem to get it wrong and resource managers need",
    "start": "111960",
    "end": "118079"
  },
  {
    "text": "to not just manage the resource for pods and containers but also they need to",
    "start": "118079",
    "end": "124020"
  },
  {
    "text": "manage the resources for Docker containers for you know other kinds of",
    "start": "124020",
    "end": "129720"
  },
  {
    "text": "container runtimes that are running in parallel on your node paired in parallel",
    "start": "129720",
    "end": "135300"
  },
  {
    "text": "with kubelet and worker node pods that have been assigned and Intel is one of the the groups that",
    "start": "135300",
    "end": "142920"
  },
  {
    "text": "always needed to be able to have their own resource managers and so they're heavily involved we we did do Beyond",
    "start": "142920",
    "end": "150000"
  },
  {
    "text": "this whole thing we didn't know ceiling spec we contained runtime groups put together this runtime schema",
    "start": "150000",
    "end": "157200"
  },
  {
    "text": "for for our hook schema sorry that would sit on a directory and then a container",
    "start": "157200",
    "end": "163920"
  },
  {
    "text": "runtime could bring in that schema or look at look at the Json for anybody who",
    "start": "163920",
    "end": "170099"
  },
  {
    "text": "wants to do a resource book inside of the runtimes and some of the people didn't really want to just use the",
    "start": "170099",
    "end": "176220"
  },
  {
    "text": "runtime schemas they wanted to be able to hook into container run times themselves so that the the modifications of the",
    "start": "176220",
    "end": "184019"
  },
  {
    "text": "container runtime can be adjusted as well um before getting all the way down into the bottom end of the run you know the",
    "start": "184019",
    "end": "190500"
  },
  {
    "text": "runtime engines so one of our plugins that we're looking at is actually the ability to use the this",
    "start": "190500",
    "end": "198599"
  },
  {
    "text": "this hook schema to load up plugins that you know executable",
    "start": "198599",
    "end": "204420"
  },
  {
    "text": "programs that will run at boot time based on your system the being being able to you know modify",
    "start": "204420",
    "end": "211140"
  },
  {
    "text": "those configs anyways and set dependencies I don't probably into too",
    "start": "211140",
    "end": "216300"
  },
  {
    "text": "much detail but Christian has put together a great little plugin that will",
    "start": "216300",
    "end": "221340"
  },
  {
    "text": "run in container run times so that you can actually have a process that's",
    "start": "221340",
    "end": "226379"
  },
  {
    "text": "loaded by systemd for example and then call into the Container runtime over a ttrpc interface we might even do a grpc",
    "start": "226379",
    "end": "233819"
  },
  {
    "text": "one as well but we're going to start with ttrpc which is how we do shims in inside of container runtimes but this",
    "start": "233819",
    "end": "240659"
  },
  {
    "text": "this ttrpc interface will host the ability for a uh a runtime a service",
    "start": "240659",
    "end": "247260"
  },
  {
    "text": "sorry a resource service manager to be able to actually tell the container runtime it's interested and a certain",
    "start": "247260",
    "end": "253439"
  },
  {
    "text": "type of sandbox like a pod sandbox for the ability to make modifications to it",
    "start": "253439",
    "end": "258780"
  },
  {
    "text": "okay so I'm going to hand over to Christian now he's a great developer we're about to merge",
    "start": "258780",
    "end": "265139"
  },
  {
    "text": "a couple of years in the cryo and virginity",
    "start": "265139",
    "end": "270560"
  },
  {
    "text": "thank you Mike and thanks everyone for joining this session so my name is Christian litke I work for Intel as a",
    "start": "270840",
    "end": "278759"
  },
  {
    "text": "cloud software engineer uh mostly in the orchestration and the runtime resource",
    "start": "278759",
    "end": "284580"
  },
  {
    "text": "management area so",
    "start": "284580",
    "end": "289810"
  },
  {
    "text": "[Music]",
    "start": "289810",
    "end": "292949"
  },
  {
    "text": "so we are going to talk about NRI the node Resort node resource interface",
    "start": "295259",
    "end": "300960"
  },
  {
    "text": "so what is an array so NRI is a common framework for plugging extensions into",
    "start": "300960",
    "end": "306660"
  },
  {
    "text": "oci compatible runtimes these extensions or as we call them NRI plugins Implement custom Logic for",
    "start": "306660",
    "end": "314040"
  },
  {
    "text": "controlling container configuration so what do we mean by a common framework",
    "start": "314040",
    "end": "319919"
  },
  {
    "text": "well it's common because ideally NRI support should be present in all common runtimes",
    "start": "319919",
    "end": "327539"
  },
  {
    "text": "and also NRI plugin should work identically across all and unreliable",
    "start": "327539",
    "end": "333539"
  },
  {
    "text": "runtimes it's a framework because it comes in multiple pieces which together achieve",
    "start": "333539",
    "end": "340100"
  },
  {
    "text": "the goal that we set for MRI and that goal is to allow altering how",
    "start": "340100",
    "end": "347400"
  },
  {
    "text": "the runtime configuration configures containers without actually modifying the runtime itself",
    "start": "347400",
    "end": "354860"
  },
  {
    "text": "so the benefits some of the benefits of NRI so for run times it's I think obvious it",
    "start": "356220",
    "end": "362940"
  },
  {
    "text": "is another way to share and reuse code so in addition to just using the same",
    "start": "362940",
    "end": "368280"
  },
  {
    "text": "packages in the runtime implementations there is now a common interface to plug in your functionality which can be",
    "start": "368280",
    "end": "374820"
  },
  {
    "text": "implemented once and then plugged into any of the NRI enabled runtimes",
    "start": "374820",
    "end": "381360"
  },
  {
    "text": "for cluster administrators NRI provides the necessary Plumbing to customize or",
    "start": "381360",
    "end": "388020"
  },
  {
    "text": "enforce how containers are configured so this includes control over the initial container configuration during",
    "start": "388020",
    "end": "394800"
  },
  {
    "text": "creation and any subsequent container configuration updates",
    "start": "394800",
    "end": "399840"
  },
  {
    "text": "so additionally and I also and loss configuration changes in response in",
    "start": "399840",
    "end": "405720"
  },
  {
    "text": "response to external events which are not actually from inside the container runtime",
    "start": "405720",
    "end": "413400"
  },
  {
    "text": "so essentially if you plug in your plugin so plug in your MRI plugin",
    "start": "413400",
    "end": "420780"
  },
  {
    "text": "your extension into the runtime in your cluster then you are free to implement",
    "start": "420780",
    "end": "426780"
  },
  {
    "text": "your own custom Logic for container configuration but only within the",
    "start": "426780",
    "end": "431819"
  },
  {
    "text": "boundaries imposed by NRI so there are certain things which even with NRA you",
    "start": "431819",
    "end": "437460"
  },
  {
    "text": "are not not able to or not allowed to do so how does NRI work",
    "start": "437460",
    "end": "445080"
  },
  {
    "text": "to explain how Anri works we need to first take a look at how the content",
    "start": "445080",
    "end": "450599"
  },
  {
    "text": "accusation signaling flow looks like from a high level in our kubernetes cluster so this is",
    "start": "450599",
    "end": "457620"
  },
  {
    "text": "going to be a lost over simplification of what is going on but it should be sufficient to understand in this context",
    "start": "457620",
    "end": "464099"
  },
  {
    "text": "the necessary details so first a port spec is created",
    "start": "464099",
    "end": "470340"
  },
  {
    "text": "and this typically happens as a end result of creating some higher level object for instance a service demon said",
    "start": "470340",
    "end": "479280"
  },
  {
    "text": "replica set or something similar So eventually this puts back ends up in the",
    "start": "479280",
    "end": "484860"
  },
  {
    "text": "kubernetes node agent the cubelet on a worker node",
    "start": "484860",
    "end": "490680"
  },
  {
    "text": "the cubelet uses the container runtime interface",
    "start": "490680",
    "end": "495740"
  },
  {
    "text": "to uh request the creation of a pod and one or",
    "start": "496520",
    "end": "502319"
  },
  {
    "text": "more containers within that port so the container runtime",
    "start": "502319",
    "end": "509879"
  },
  {
    "text": "constructs from this CRI request and oci specification this also a",
    "start": "509879",
    "end": "516719"
  },
  {
    "text": "specification describes the containers parameters for the low level runtime",
    "start": "516719",
    "end": "523380"
  },
  {
    "text": "and this oci spec is then passed on to the low level runtime for instance runs your cutter containers",
    "start": "523380",
    "end": "529380"
  },
  {
    "text": "which then creates the container",
    "start": "529380",
    "end": "533540"
  },
  {
    "text": "so with an error in the picture so things work a little bit differently",
    "start": "541260",
    "end": "549080"
  },
  {
    "text": "so once the initial oci spec has been created in the runtime",
    "start": "549540",
    "end": "554880"
  },
  {
    "text": "it is best to enter eye",
    "start": "554880",
    "end": "558680"
  },
  {
    "text": "and the Android plugins",
    "start": "561000",
    "end": "566279"
  },
  {
    "text": "can basically perform customizations according to their own logic to the this",
    "start": "566279",
    "end": "571380"
  },
  {
    "text": "initial oci spec and then this updated oci spec it's",
    "start": "571380",
    "end": "576899"
  },
  {
    "text": "final updated OC aspect is passed on to the lower level runtime",
    "start": "576899",
    "end": "582839"
  },
  {
    "text": "which then creates the container [Music]",
    "start": "582839",
    "end": "588060"
  },
  {
    "text": "so there are other container lifecycle events",
    "start": "588060",
    "end": "593880"
  },
  {
    "text": "wherever I can hook in and basically the details of the signaling flow are",
    "start": "593880",
    "end": "599640"
  },
  {
    "text": "slightly different but the important thing from the general point",
    "start": "599640",
    "end": "605220"
  },
  {
    "text": "of view is that usually a request or always a request comes in via the Sierra interface as long as we are talking",
    "start": "605220",
    "end": "610500"
  },
  {
    "text": "about kubernetes clusters and and kubernetes containers",
    "start": "610500",
    "end": "616519"
  },
  {
    "text": "and then NRI is acting basically before that request can be finally processed",
    "start": "617279",
    "end": "623100"
  },
  {
    "text": "and making modifications inside the runtime",
    "start": "623100",
    "end": "628040"
  },
  {
    "text": "so if we take a closer look at the MRI bits in this previous picture",
    "start": "630019",
    "end": "636600"
  },
  {
    "text": "so if we zoom in and take a look at how nris",
    "start": "636600",
    "end": "643880"
  },
  {
    "text": "decomposed so so we notice that there are several components which work in tandem",
    "start": "643880",
    "end": "649079"
  },
  {
    "text": "and this is why we earlier called an array framework so",
    "start": "649079",
    "end": "654779"
  },
  {
    "text": "there is an adaptation client which is basically a runtime agnostic",
    "start": "654779",
    "end": "662279"
  },
  {
    "text": "Library to help runtimes integrate to enter itself and interact with the Android",
    "start": "662279",
    "end": "667380"
  },
  {
    "text": "plugins then there is an NRI plugins tab",
    "start": "667380",
    "end": "673760"
  },
  {
    "text": "which takes care of the low-level boring details of writing a plugin",
    "start": "674040",
    "end": "679260"
  },
  {
    "text": "so this should improve improve code reuse",
    "start": "679260",
    "end": "684079"
  },
  {
    "text": "because instead of each plugin author having to implement all the low level necessary functionality which are common",
    "start": "685320",
    "end": "691860"
  },
  {
    "text": "to our plugins they can by using the stuff they can directly dive in and",
    "start": "691860",
    "end": "697079"
  },
  {
    "text": "start focusing on the custom logic that they need to implement so this tab takes care of things like connection",
    "start": "697079",
    "end": "703560"
  },
  {
    "text": "establishment to the runtime uh communication",
    "start": "703560",
    "end": "710820"
  },
  {
    "text": "plugin registration and so forth so finally",
    "start": "710820",
    "end": "718339"
  },
  {
    "text": "there is the NRI protocol itself which this is above or previously",
    "start": "719459",
    "end": "726060"
  },
  {
    "text": "mentioned two components so the adaptation client and the plugins",
    "start": "726060",
    "end": "731220"
  },
  {
    "text": "the abuse to communicate and interact with each other so the NRI protocol is defined as a protobuf based API with",
    "start": "731220",
    "end": "739260"
  },
  {
    "text": "ttrpc bindings the protocol defense and execution model",
    "start": "739260",
    "end": "746000"
  },
  {
    "text": "and the data model for NRI the execution model is basically a set of potent container life cycle events",
    "start": "746279",
    "end": "753300"
  },
  {
    "text": "the channel I knows about and plugins can be interested in and the",
    "start": "753300",
    "end": "758880"
  },
  {
    "text": "data model defines which subset of the oci spec and the right plugins are exposed to and how this subset can be",
    "start": "758880",
    "end": "765720"
  },
  {
    "text": "modified by NRI plugins so another way of describing this would",
    "start": "765720",
    "end": "772620"
  },
  {
    "text": "be that the execution model basically defines",
    "start": "772620",
    "end": "777980"
  },
  {
    "text": "the event and the data model defines the inputs and outputs that NRI plugins receive and",
    "start": "779220",
    "end": "787500"
  },
  {
    "text": "produce while processing those events",
    "start": "787500",
    "end": "791600"
  },
  {
    "text": "so if we look into the events in more",
    "start": "793200",
    "end": "798660"
  },
  {
    "text": "detail so the NRI API defines an event subscription mechanism and plugins only need to subscribe to",
    "start": "798660",
    "end": "804600"
  },
  {
    "text": "those potent container lifecycle events which they are interested in and they only get notified about those events",
    "start": "804600",
    "end": "810300"
  },
  {
    "text": "which they have subscribed to So currently ports cannot be modified by any right plugins plugins can still",
    "start": "810300",
    "end": "817260"
  },
  {
    "text": "track the life cycle state of ports by subscribing to the available for lifecycle events and",
    "start": "817260",
    "end": "825000"
  },
  {
    "text": "they can also act on those events so because",
    "start": "825000",
    "end": "831839"
  },
  {
    "text": "there are no possibilities for plugins to change anything in a pod the CIA the Enterprise",
    "start": "831839",
    "end": "839040"
  },
  {
    "text": "lifecycle events are exactly the same as for CRI so these are both creation or",
    "start": "839040",
    "end": "845579"
  },
  {
    "text": "Grandpa sandbox topping stop on Sandbox and pod removal",
    "start": "845579",
    "end": "852959"
  },
  {
    "text": "or remove pot sandbox for content for container lifecycle",
    "start": "852959",
    "end": "859980"
  },
  {
    "text": "events situation is a bit different because container configuration can be customized by plugins",
    "start": "859980",
    "end": "867180"
  },
  {
    "text": "so then I defined lifecycle events for containers are similar to The CRI ones",
    "start": "867180",
    "end": "872519"
  },
  {
    "text": "but there are a few additional post-wariants as we call them so this full event set is",
    "start": "872519",
    "end": "881100"
  },
  {
    "text": "create post create start",
    "start": "881100",
    "end": "887160"
  },
  {
    "text": "post start update first update",
    "start": "887160",
    "end": "892680"
  },
  {
    "text": "top which is semantically a post stop and then remove",
    "start": "892680",
    "end": "899480"
  },
  {
    "text": "plugins can customize containers during creation update and stopping",
    "start": "900620",
    "end": "907139"
  },
  {
    "text": "therefore these events are actually semantical requests and not events so plugins can respond to them with the",
    "start": "907139",
    "end": "914040"
  },
  {
    "text": "set of customer customization changes that they wish to perform in response to these events",
    "start": "914040",
    "end": "921740"
  },
  {
    "text": "so if next we take a look at the data model so plug-in inputs and outputs",
    "start": "922160",
    "end": "929959"
  },
  {
    "text": "so for ports again because reports cannot be modified",
    "start": "930360",
    "end": "935399"
  },
  {
    "text": "uh the amount of data that we",
    "start": "935399",
    "end": "941279"
  },
  {
    "text": "take from from CRI and Passover to NRI is slightly small enough for containers",
    "start": "941279",
    "end": "947100"
  },
  {
    "text": "so for pots the available data includes the kubernetes namespace labels",
    "start": "947100",
    "end": "953399"
  },
  {
    "text": "annotations C group parent and runtime handling",
    "start": "953399",
    "end": "959160"
  },
  {
    "text": "for containers the data available to Enterprise plugins include the containers labels",
    "start": "959160",
    "end": "965279"
  },
  {
    "text": "annotations commands so the command line arguments",
    "start": "965279",
    "end": "971100"
  },
  {
    "text": "environment variables mounts devices oci hooks secret parameters",
    "start": "971100",
    "end": "977339"
  },
  {
    "text": "which are related to Native resources so these are CPU scheduling parameters",
    "start": "977339",
    "end": "983220"
  },
  {
    "text": "CPU and memory pinning memory and huge page limits",
    "start": "983220",
    "end": "988740"
  },
  {
    "text": "and I think that's it and additionally there are two classes or classes",
    "start": "988740",
    "end": "995459"
  },
  {
    "text": "so one is for last level cache allocation",
    "start": "995459",
    "end": "1000800"
  },
  {
    "text": "which is called the rdt clause and the other is for Block i o",
    "start": "1000940",
    "end": "1007959"
  },
  {
    "text": "scheduling and throttling and that is called the block device clause",
    "start": "1008180",
    "end": "1014000"
  },
  {
    "text": "so the container event determines what kind of changes a plug-in can request in response",
    "start": "1014000",
    "end": "1020480"
  },
  {
    "text": "so for container creation",
    "start": "1020480",
    "end": "1024160"
  },
  {
    "text": "and actually this so for Content creation is the one where the largest amount of modifications can be performed",
    "start": "1026500",
    "end": "1033199"
  },
  {
    "text": "by a plugin and this directly comes from the underlying container model defined",
    "start": "1033199",
    "end": "1038298"
  },
  {
    "text": "by the oci specification so once the container has been created then most of its parameters cannot be changed but",
    "start": "1038299",
    "end": "1044780"
  },
  {
    "text": "there is a subset which can and this is reflected in the possible responses to these various",
    "start": "1044780",
    "end": "1051320"
  },
  {
    "text": "elements so for contact for container creation plugins can request modifications to",
    "start": "1051320",
    "end": "1057320"
  },
  {
    "text": "annotations environment variables mounts devices oci hooks the resource related",
    "start": "1057320",
    "end": "1063559"
  },
  {
    "text": "SQL parameters that I mentioned previously the last level cache so rdt",
    "start": "1063559",
    "end": "1068900"
  },
  {
    "text": "and the block i o close or classes",
    "start": "1068900",
    "end": "1074679"
  },
  {
    "text": "so and additionally uh for a Content a creation request",
    "start": "1075020",
    "end": "1082100"
  },
  {
    "text": "plugins can also request updates to other existing containers",
    "start": "1082100",
    "end": "1087260"
  },
  {
    "text": "in the runtime not only the one which is being created so for container updates the requested",
    "start": "1087260",
    "end": "1095120"
  },
  {
    "text": "update can modify the resource related signal parameters",
    "start": "1095120",
    "end": "1101419"
  },
  {
    "text": "both for the container being updated and other existing containers",
    "start": "1101419",
    "end": "1106700"
  },
  {
    "text": "and this is the same for stopping",
    "start": "1106700",
    "end": "1111700"
  },
  {
    "text": "so what there is a MRI plugin can do so there are a number of other things",
    "start": "1119600",
    "end": "1125480"
  },
  {
    "text": "plugins can do during registration to the runtime the plugin is offered a chance to",
    "start": "1125480",
    "end": "1133460"
  },
  {
    "text": "synchronize its state with the runtime so during the synchronization it receives a full",
    "start": "1133460",
    "end": "1139400"
  },
  {
    "text": "set and a full dump of all existing ports and all existing containers in the",
    "start": "1139400",
    "end": "1145280"
  },
  {
    "text": "runtime and in response to this it has the chance to",
    "start": "1145280",
    "end": "1152600"
  },
  {
    "text": "do customizations to the configuration of any of these containers",
    "start": "1152600",
    "end": "1157940"
  },
  {
    "text": "and these customizations are exactly the same as can be done for a stop or an update event so not the same as for",
    "start": "1157940",
    "end": "1164480"
  },
  {
    "text": "Creative basically resources can be updated but not much else",
    "start": "1164480",
    "end": "1170080"
  },
  {
    "text": "um so plugins can of course also subscribe and react to for lifecycle events but they cannot modify pods",
    "start": "1171860",
    "end": "1179960"
  },
  {
    "text": "and they can control things which are outside the scope and control of the OCS specification",
    "start": "1179960",
    "end": "1186380"
  },
  {
    "text": "nothing prevents a plug-in from doing that there are also a number of things that",
    "start": "1186380",
    "end": "1193039"
  },
  {
    "text": "NRI plugins can't or shouldn't be doing so multiple plugins cannot make",
    "start": "1193039",
    "end": "1198880"
  },
  {
    "text": "simultaneous conflicting changes to the same container so this is",
    "start": "1198880",
    "end": "1204280"
  },
  {
    "text": "checked caught by the NRA infrastructure and it's like the semi error so",
    "start": "1204280",
    "end": "1210080"
  },
  {
    "text": "basically if this happens during Continental creation or container update",
    "start": "1210080",
    "end": "1215840"
  },
  {
    "text": "then it is sort of transactionally",
    "start": "1215840",
    "end": "1221059"
  },
  {
    "text": "rejected with an error",
    "start": "1221059",
    "end": "1224679"
  },
  {
    "text": "so another thing that plugins can do is that they cannot control",
    "start": "1229580",
    "end": "1238419"
  },
  {
    "text": "those parts of the OC aspect which have been intentionally left out of the NRA specification",
    "start": "1238460",
    "end": "1244520"
  },
  {
    "text": "so we try to be careful to include everything that we think is",
    "start": "1244520",
    "end": "1250760"
  },
  {
    "text": "needed of course there it is possible that something we Overlook but the rest of the parameters which cannot be controlled by",
    "start": "1250760",
    "end": "1257840"
  },
  {
    "text": "any right plugins are international and although I said that",
    "start": "1257840",
    "end": "1263299"
  },
  {
    "text": "energy plugins cannot do such control in reality this is only true if any plugins are not trying to",
    "start": "1263299",
    "end": "1271580"
  },
  {
    "text": "bypass the runtime and for instance by direct sake of manipulation make change changes",
    "start": "1271580",
    "end": "1277820"
  },
  {
    "text": "on their own to these parameters which they should not do",
    "start": "1277820",
    "end": "1282460"
  },
  {
    "text": "soul how to write an NRI plugin",
    "start": "1284299",
    "end": "1289700"
  },
  {
    "text": "so if you are interested in writing an Android plugin of your own then the easiest way to start is to copy",
    "start": "1289700",
    "end": "1295280"
  },
  {
    "text": "the template plugin that we have and fill in the missing details so the template plugin basically is a very few",
    "start": "1295280",
    "end": "1302299"
  },
  {
    "text": "lines of code wrapping the stub just to be able to create an executable",
    "start": "1302299",
    "end": "1308740"
  },
  {
    "text": "start it up uh without any modifications the plugin so",
    "start": "1308740",
    "end": "1316460"
  },
  {
    "text": "this template plugins simply subscribes to all events and then it",
    "start": "1316460",
    "end": "1322700"
  },
  {
    "text": "just prints out the events as they as it is",
    "start": "1322700",
    "end": "1328179"
  },
  {
    "text": "so and this plugin does not make any customizations to any any container",
    "start": "1329179",
    "end": "1335360"
  },
  {
    "text": "so basically it always responds with a empty empty response",
    "start": "1335360",
    "end": "1342320"
  },
  {
    "text": "so and the easiest way to get up and running is that you clone this one and",
    "start": "1342320",
    "end": "1348020"
  },
  {
    "text": "then you start modifying it and how you need to modify it well first you need to subscribe to the events that you need",
    "start": "1348020",
    "end": "1353480"
  },
  {
    "text": "because you probably don't want maybe you don't want to receive all the events and then you need to implement actual",
    "start": "1353480",
    "end": "1359240"
  },
  {
    "text": "customization Logic for containers so if you remember there were",
    "start": "1359240",
    "end": "1366320"
  },
  {
    "text": "three events [Music] to which a plugin can respond with",
    "start": "1366320",
    "end": "1373820"
  },
  {
    "text": "customizations so those are the control points that you have so to those usually",
    "start": "1373820",
    "end": "1378980"
  },
  {
    "text": "you want to subscribe so these are the create container update container and",
    "start": "1378980",
    "end": "1384860"
  },
  {
    "text": "stop container events so",
    "start": "1384860",
    "end": "1390340"
  },
  {
    "text": "and what what you want to do is that you make your initial customization in",
    "start": "1391520",
    "end": "1398299"
  },
  {
    "text": "response to the container create creation event or request",
    "start": "1398299",
    "end": "1405400"
  },
  {
    "text": "and if your custom logic is such that the changes you are making to The",
    "start": "1407900",
    "end": "1414980"
  },
  {
    "text": "Container being created have side effects or effects on the",
    "start": "1414980",
    "end": "1420980"
  },
  {
    "text": "existing containers then in response to this event you typically want to also",
    "start": "1420980",
    "end": "1427159"
  },
  {
    "text": "customize the configuration of existing containers so that this effect is somehow mitigated",
    "start": "1427159",
    "end": "1434600"
  },
  {
    "text": "or reflected so a good example would be that if you want to allocate for instance exclusive",
    "start": "1434600",
    "end": "1440960"
  },
  {
    "text": "CPU to a container then it's only exclusive if you basically exclude the same CPU",
    "start": "1440960",
    "end": "1447620"
  },
  {
    "text": "from the outload set of the other containers uh so if you do this if you are",
    "start": "1447620",
    "end": "1455000"
  },
  {
    "text": "modifying modifying other containers so existing containers for like a create container request then you typically",
    "start": "1455000",
    "end": "1462140"
  },
  {
    "text": "want to subscribe also to a stop container event because then you need to undo",
    "start": "1462140",
    "end": "1468200"
  },
  {
    "text": "somehow those modifications that you did for the creation events so in a way the other",
    "start": "1468200",
    "end": "1473240"
  },
  {
    "text": "direction and this is true also for for update",
    "start": "1473240",
    "end": "1482620"
  },
  {
    "text": "so in addition to this so these are all reactive changes or",
    "start": "1483260",
    "end": "1488480"
  },
  {
    "text": "reactive customizations so something NRI is telling you something that something is happening in the runtime a content is",
    "start": "1488480",
    "end": "1494539"
  },
  {
    "text": "being created updated or stopped and then you react with with customizations in the response but then",
    "start": "1494539",
    "end": "1501919"
  },
  {
    "text": "I also provides a mechanism for uh doing unsolicited",
    "start": "1501919",
    "end": "1508539"
  },
  {
    "text": "customizations so for instance one example would be that",
    "start": "1508539",
    "end": "1514039"
  },
  {
    "text": "you are collecting some kind of runtime metrics and then based on those metrics you would like to let's say redo how CPR",
    "start": "1514039",
    "end": "1522260"
  },
  {
    "text": "location is spread across the containers so that those could perform better",
    "start": "1522260",
    "end": "1529580"
  },
  {
    "text": "so this you can do that is with the update update",
    "start": "1529580",
    "end": "1534799"
  },
  {
    "text": "containers a call which is actually control flow wise in",
    "start": "1534799",
    "end": "1540140"
  },
  {
    "text": "the other direction so an error is not calling you but you are calling into NRI tell your customizations these",
    "start": "1540140",
    "end": "1546860"
  },
  {
    "text": "customizations are exact same as for stopping or update so they are only to the clauses",
    "start": "1546860",
    "end": "1554659"
  },
  {
    "text": "and then enter I will tell you whether this succeeded or not and if not then you need to somehow",
    "start": "1558740",
    "end": "1564200"
  },
  {
    "text": "react to that uh so those are the",
    "start": "1564200",
    "end": "1569960"
  },
  {
    "text": "short guidelines how to write the plugin and of course one good idea is to take a look at our sample plugins that we have",
    "start": "1569960",
    "end": "1575960"
  },
  {
    "text": "in our repository we have a few not too many but those can be used for inspiration and guidance and of course",
    "start": "1575960",
    "end": "1582740"
  },
  {
    "text": "we have some some set of documentation a little bit limited but we are working on that",
    "start": "1582740",
    "end": "1589720"
  },
  {
    "text": "so examples and use cases so we have a few plugins already available",
    "start": "1589940",
    "end": "1597020"
  },
  {
    "text": "so some of those are real world plugins because those have been written uh",
    "start": "1597020",
    "end": "1604640"
  },
  {
    "text": "to mimic existing similar functionality in some of the runtimes",
    "start": "1604640",
    "end": "1611500"
  },
  {
    "text": "sometimes questionable whether those use cases are such that you that they really make sense nowadays but nevertheless",
    "start": "1612559",
    "end": "1618200"
  },
  {
    "text": "they exist and we wrote those in the hope that once NRI is merged then",
    "start": "1618200",
    "end": "1625880"
  },
  {
    "text": "some of these could be removed from the core of the runtime and then made available as a",
    "start": "1625880",
    "end": "1632240"
  },
  {
    "text": "NRI plugin somehow keep the core a little bit uh",
    "start": "1632240",
    "end": "1638059"
  },
  {
    "text": "more manageable to prevent this kind of I don't know whether I should call them",
    "start": "1638059",
    "end": "1643100"
  },
  {
    "text": "customers specific additions but that's a little bit how those look like to me so keep those out",
    "start": "1643100",
    "end": "1650360"
  },
  {
    "text": "and rather Implement them as an Android plugins so these real world ones that we have so one is an annotation-based",
    "start": "1650360",
    "end": "1656720"
  },
  {
    "text": "device injection so if I recall correctly I saw this code in cryo then I but okay I will implement this in a",
    "start": "1656720",
    "end": "1663140"
  },
  {
    "text": "right plugin so basically it reads A annotation with a random key and then interprets the value as a description of",
    "start": "1663140",
    "end": "1669860"
  },
  {
    "text": "a device device parameters which should be injected into into the container and then it injects it",
    "start": "1669860",
    "end": "1676460"
  },
  {
    "text": "then we have another one the CDI device injection which is by now obsolete but it's still",
    "start": "1676460",
    "end": "1684740"
  },
  {
    "text": "available so this is basically uh",
    "start": "1684740",
    "end": "1689960"
  },
  {
    "text": "so this is how we initially Implement CDR device injection so if you know if you don't know what CDI is so Celia is",
    "start": "1689960",
    "end": "1697340"
  },
  {
    "text": "basically the low level device description format used by the upcoming dra or dynamic resource allocation",
    "start": "1697340",
    "end": "1703340"
  },
  {
    "text": "featuring kubernetes the inject devices into containers and manage them a little",
    "start": "1703340",
    "end": "1709340"
  },
  {
    "text": "bit better than you can do with or actually a lot better than you can do with with traditional device plugins",
    "start": "1709340",
    "end": "1716360"
  },
  {
    "text": "so this was easy to implement as as a",
    "start": "1716360",
    "end": "1723080"
  },
  {
    "text": "snmri plug-in so it was one of the first sort of test cases for ourselves that do",
    "start": "1723080",
    "end": "1728120"
  },
  {
    "text": "we have in our functional coverage that some useful things can be done but because we did not want to",
    "start": "1728120",
    "end": "1733820"
  },
  {
    "text": "uh uh we did not want to add the dependency between from the array to MRI",
    "start": "1733820",
    "end": "1739520"
  },
  {
    "text": "so we wanted to completely decouple those then eventually we implement it natively this in both cryo and content",
    "start": "1739520",
    "end": "1746539"
  },
  {
    "text": "added that's why this is now obsolete then the third one I think it's Mike's",
    "start": "1746539",
    "end": "1752419"
  },
  {
    "text": "favorite it's the oci hook injection and that is",
    "start": "1752419",
    "end": "1758539"
  },
  {
    "text": "basically so in cryo you have oci hook injection support but you don't have it in container day and this has been a",
    "start": "1758539",
    "end": "1764899"
  },
  {
    "text": "long standing discussion several times have been attempted in one way or another but",
    "start": "1764899",
    "end": "1770000"
  },
  {
    "text": "the pr did not really ever go in yeah so and then we",
    "start": "1770000",
    "end": "1775580"
  },
  {
    "text": "decided that maybe another plugin would be a good idea because then it's not a configuration option but you",
    "start": "1775580",
    "end": "1781580"
  },
  {
    "text": "can completely leave out the code so if you need to lock down some in some environments continually so that this is",
    "start": "1781580",
    "end": "1786860"
  },
  {
    "text": "absolutely not possible then to access this is a little bit easier if you simply don't have the plugin present on",
    "start": "1786860",
    "end": "1792380"
  },
  {
    "text": "the system then just take a look at the configuration so this code has almost heard about them",
    "start": "1792380",
    "end": "1798200"
  },
  {
    "text": "been taken from the cryo implementation turned into Anri plugin it's really just",
    "start": "1798200",
    "end": "1804380"
  },
  {
    "text": "the fuel lens of code and if you have a Anri enabled containerd",
    "start": "1804380",
    "end": "1813740"
  },
  {
    "text": "and download this plugin then it works exactly identically how cryo would",
    "start": "1813740",
    "end": "1819500"
  },
  {
    "text": "handle uh the schema based oci hook injection for",
    "start": "1819500",
    "end": "1825020"
  },
  {
    "text": "a container there is one more real world plugin on",
    "start": "1825020",
    "end": "1830120"
  },
  {
    "text": "our to-do list and this also comes from the cryo code base so cryo has a",
    "start": "1830120",
    "end": "1835520"
  },
  {
    "text": "built-in they call it high performance hooks",
    "start": "1835520",
    "end": "1840860"
  },
  {
    "text": "so this is a really good example actually of some functionality value react to some",
    "start": "1840860",
    "end": "1847880"
  },
  {
    "text": "container life cycle event but then you perform actions which are outside the",
    "start": "1847880",
    "end": "1853039"
  },
  {
    "text": "realm of the OC specification so this piece of code is not there for fun but",
    "start": "1853039",
    "end": "1858500"
  },
  {
    "text": "it's there because the same thing cannot be done by the ocean specification and the reason for that is that",
    "start": "1858500",
    "end": "1864620"
  },
  {
    "text": "nowadays it does also other things but but initially when I took a look at it so one of the things it was doing is",
    "start": "1864620",
    "end": "1871880"
  },
  {
    "text": "that that if you so when you create a uh",
    "start": "1871880",
    "end": "1877659"
  },
  {
    "text": "guaranteed qos container and that container gets an exclusive CPU",
    "start": "1877659",
    "end": "1883279"
  },
  {
    "text": "allocation then it was basically migrating but it is migrating off all the",
    "start": "1883279",
    "end": "1890539"
  },
  {
    "text": "interrupt address from those CPUs which have been assigned to this container so that",
    "start": "1890539",
    "end": "1897940"
  },
  {
    "text": "actually your user space processing is not getting preempted by kernel of a",
    "start": "1897940",
    "end": "1903080"
  },
  {
    "text": "liar Queen so this is providing even more isolation from",
    "start": "1903080",
    "end": "1910240"
  },
  {
    "text": "other containers and system and the processes running on the system then just by getting a normal",
    "start": "1910700",
    "end": "1917120"
  },
  {
    "text": "exclusive CPU and when that container is stopped then this migration is done in",
    "start": "1917120",
    "end": "1923000"
  },
  {
    "text": "the other way around so I put the so the higher grinding state is",
    "start": "1923000",
    "end": "1929120"
  },
  {
    "text": "restored to the origin so we haven't we don't have a plugin for that but this is one of the because this",
    "start": "1929120",
    "end": "1934940"
  },
  {
    "text": "is something that we promised for the cryo force that we will do",
    "start": "1934940",
    "end": "1940480"
  },
  {
    "text": "um then we have a couple of debugging and development plugins so we have event logger so that's an easy way",
    "start": "1941059",
    "end": "1948200"
  },
  {
    "text": "to take a look at what is going on in the NRI sense in a runtime so it registers itself so",
    "start": "1948200",
    "end": "1956179"
  },
  {
    "text": "the logger registers itself to the runtime hit subscribed to all events and",
    "start": "1956179",
    "end": "1963860"
  },
  {
    "text": "then it does a full dump of every single event it receives and it never",
    "start": "1963860",
    "end": "1970580"
  },
  {
    "text": "request any customizations of custom containers so in that sense it's a knob",
    "start": "1970580",
    "end": "1976159"
  },
  {
    "text": "plugin then we have a container buffer so that is a mode that is basically a",
    "start": "1976159",
    "end": "1981919"
  },
  {
    "text": "modification of this ID so instead of that that",
    "start": "1981919",
    "end": "1988240"
  },
  {
    "text": "basically works by the same principle it registers itself subscribes to all events never does any customizations but",
    "start": "1988880",
    "end": "1996620"
  },
  {
    "text": "instead of dumping the events it only dumps this",
    "start": "1996620",
    "end": "2002580"
  },
  {
    "text": "between the chain of customizations that several",
    "start": "2003880",
    "end": "2009940"
  },
  {
    "text": "plugins are requesting the container so if you have more than one then you can see what is going on",
    "start": "2009940",
    "end": "2017220"
  },
  {
    "text": "and then we have the plugin template which is the basically it's a it's a simplified",
    "start": "2017799",
    "end": "2025059"
  },
  {
    "text": "version of the load gear it's not doing well it was logging but otherwise it's almost the same",
    "start": "2025059",
    "end": "2031720"
  },
  {
    "text": "and then we have one more experimental plugin and so that is a modified version of a",
    "start": "2031720",
    "end": "2041760"
  },
  {
    "text": "I would call it an experimentation vehicle that we have in now for a couple of years using in our team to",
    "start": "2041980",
    "end": "2049960"
  },
  {
    "text": "experiment with various resources assignment policy improvements",
    "start": "2049960",
    "end": "2055540"
  },
  {
    "text": "for orchestration and the runtime space so originally it was written so that it",
    "start": "2055540",
    "end": "2062980"
  },
  {
    "text": "so if you remember the cubelet and the runtime communicates with something called the CRI so the container random",
    "start": "2062980",
    "end": "2068740"
  },
  {
    "text": "interface and the original implementation of this is a resource so",
    "start": "2068740",
    "end": "2073898"
  },
  {
    "text": "I say right proxy that's why it's called the Sierra resource how it works",
    "start": "2073899",
    "end": "2078940"
  },
  {
    "text": "towards the cubeletic presence to be the runtime towards the runtime it presents to be the cube right",
    "start": "2078940",
    "end": "2084820"
  },
  {
    "text": "and as the requests are passing by it is just Consulting its own policy that hey",
    "start": "2084820",
    "end": "2090940"
  },
  {
    "text": "what should happen and then that's the customization by modifying the CRI requests and he goes this is a some kind",
    "start": "2090940",
    "end": "2098140"
  },
  {
    "text": "of a hack so we decided that since we have",
    "start": "2098140",
    "end": "2104320"
  },
  {
    "text": "possibility to do to do much of these same things we then arise so we",
    "start": "2104320",
    "end": "2112000"
  },
  {
    "text": "modified it that we added an array plug-in support to it so we give it a special command line option then it",
    "start": "2112000",
    "end": "2117460"
  },
  {
    "text": "registers itself to the runtime with another interface and then does all the same things",
    "start": "2117460",
    "end": "2123099"
  },
  {
    "text": "that it will do over the CRI proxy method but using Android customizations",
    "start": "2123099",
    "end": "2131578"
  },
  {
    "text": "um so I think that that was all so",
    "start": "2133240",
    "end": "2140200"
  },
  {
    "text": "do you want to say Mike something about the current status so where we are",
    "start": "2140200",
    "end": "2146680"
  },
  {
    "text": "we're close to merging the pr okay so in contact the uh",
    "start": "2146680",
    "end": "2152619"
  },
  {
    "text": "we are close to getting it merged but it's not not yet there yet yeah schedule scheduled for 1.7 continue the",
    "start": "2152619",
    "end": "2160300"
  },
  {
    "text": "um but minor getting there go dependency issues yes we'll get that result maybe",
    "start": "2160300",
    "end": "2166720"
  },
  {
    "text": "Monday Okay so if you want to take a look at the NRI So",
    "start": "2166720",
    "end": "2173200"
  },
  {
    "text": "currently you can do it so that you are take you for instance close a clone from those pending Piers or you can wait",
    "start": "2173200",
    "end": "2179500"
  },
  {
    "text": "until we get those match and then you can get your hands dirt with it any",
    "start": "2179500",
    "end": "2186700"
  },
  {
    "text": "questions I think we're probably close on time do",
    "start": "2186700",
    "end": "2191980"
  },
  {
    "text": "we have any extra buffer between now and the next",
    "start": "2191980",
    "end": "2197220"
  },
  {
    "text": "all right cool cool thanks Chris um questions",
    "start": "2198280",
    "end": "2204540"
  },
  {
    "text": "anybody have any questions",
    "start": "2204579",
    "end": "2207420"
  },
  {
    "text": "hi um just a simple question the NRI plugin do you have any kind of mechanism for",
    "start": "2214000",
    "end": "2219099"
  },
  {
    "text": "dependencies between NRI Plugin or they have to be no so we want it's a good question we want",
    "start": "2219099",
    "end": "2226300"
  },
  {
    "text": "it to start very simple uh so we recognize that it might be",
    "start": "2226300",
    "end": "2232240"
  },
  {
    "text": "possible that you want to split up your full processing chain into smaller components because it might be that you",
    "start": "2232240",
    "end": "2238420"
  },
  {
    "text": "want to just in some configurations do part of it but not all we have done we have our own test for that",
    "start": "2238420",
    "end": "2244480"
  },
  {
    "text": "but we wanted to start very simple so basically we went with the traditional in its Style",
    "start": "2244480",
    "end": "2250060"
  },
  {
    "text": "index and this is something that we later might change if it turns out that that that's",
    "start": "2250060",
    "end": "2256119"
  },
  {
    "text": "a sort of dominant usage pattern but at the moment for us it has not been",
    "start": "2256119",
    "end": "2263560"
  },
  {
    "text": "yeah there's there's no reason you couldn't just set up some system D dependencies run your plug-in each of",
    "start": "2263560",
    "end": "2270040"
  },
  {
    "text": "those plugins would be have their own requirements right and then call in to the Detroit API if you start by system",
    "start": "2270040",
    "end": "2276640"
  },
  {
    "text": "this is a pattern we'll talk about this pattern if you started by system dedan system they can do this for you exactly yeah",
    "start": "2276640",
    "end": "2283300"
  },
  {
    "text": "exactly exactly control the other plug-in everybody wants to be first and everybody wants to be last right so yeah",
    "start": "2283300",
    "end": "2289720"
  },
  {
    "text": "so basically okay sorry I forgot to say that that's how it goes that the plugin and the plugin registers itself it gives an index and the name yep and the index",
    "start": "2289720",
    "end": "2296560"
  },
  {
    "text": "is used to order them and that's it a name is used to basically pass it some configuration if if you want to manage",
    "start": "2296560",
    "end": "2301900"
  },
  {
    "text": "your configuration right that way and that's it",
    "start": "2301900",
    "end": "2305579"
  },
  {
    "text": "what are the security implications for running something like this so",
    "start": "2306940",
    "end": "2314578"
  },
  {
    "text": "so for the security so we try to live out everything which is directly related in",
    "start": "2315940",
    "end": "2321460"
  },
  {
    "text": "Security in the OC aspect so second filters system course none of it you can touch",
    "start": "2321460",
    "end": "2328540"
  },
  {
    "text": "my NRI uh but currently it is so that the NRI has",
    "start": "2328540",
    "end": "2335619"
  },
  {
    "text": "no any kind of uh excess control with various privilege",
    "start": "2335619",
    "end": "2342520"
  },
  {
    "text": "levels so once if you are able to connect to the NRI socket if you are able to register yourself",
    "start": "2342520",
    "end": "2348040"
  },
  {
    "text": "then you can do whatever is possible currently then this is something that we have discussed with Mike that you know",
    "start": "2348040",
    "end": "2354160"
  },
  {
    "text": "do we need something like that and I think this is something that we need to so we need to experiment with this whole",
    "start": "2354160",
    "end": "2359440"
  },
  {
    "text": "thing a little bit more and then we will understand whether such a thing is needed or Not So currently we think that",
    "start": "2359440",
    "end": "2364720"
  },
  {
    "text": "it's enough that you either lock it fully down or you let somebody in and then because",
    "start": "2364720",
    "end": "2370780"
  },
  {
    "text": "our ex so our we try to mitigate this security implications so that we just left",
    "start": "2370780",
    "end": "2377500"
  },
  {
    "text": "everything out that we think is problematic potentially",
    "start": "2377500",
    "end": "2384240"
  },
  {
    "text": "yes so we yes so this we had this one so the",
    "start": "2388599",
    "end": "2394780"
  },
  {
    "text": "Sierra resource manager that's basically work so that it has several built-in policies so what we were thinking is that we we would like to so as this is",
    "start": "2394780",
    "end": "2402640"
  },
  {
    "text": "merged then then we would like to rework that so that we rip out all the CRI based code we clean it up",
    "start": "2402640",
    "end": "2409780"
  },
  {
    "text": "and then we would like to split it up to smaller pieces and then make it available a little bit like the stub",
    "start": "2409780",
    "end": "2415720"
  },
  {
    "text": "so the idea will be hey if you want because you can do other things than just so you can do other things than",
    "start": "2415720",
    "end": "2421119"
  },
  {
    "text": "actual Resource Management to dislike the oci hook injection but if you want to do with Resource Management if you",
    "start": "2421119",
    "end": "2427000"
  },
  {
    "text": "want to experiment with that if you would like to you know disable the corresponding components the CPU manager",
    "start": "2427000",
    "end": "2432760"
  },
  {
    "text": "memory manager topology manager in the cubelet and you would like to try doing it here then the idea is that we will",
    "start": "2432760",
    "end": "2438640"
  },
  {
    "text": "turn that into something that you could start from and just you know it has a little bit higher level",
    "start": "2438640",
    "end": "2443680"
  },
  {
    "text": "abstraction than this one so it has a much closer to so it has things like",
    "start": "2443680",
    "end": "2448839"
  },
  {
    "text": "allocate and release resources and that's it so then you implement and program against that interface which is",
    "start": "2448839",
    "end": "2454780"
  },
  {
    "text": "resource assignment specific and then you could you could use that but we don't have at the moment that cleaned up",
    "start": "2454780",
    "end": "2460540"
  },
  {
    "text": "and and modified in this it's a great question right it's going to be default off however",
    "start": "2460540",
    "end": "2467079"
  },
  {
    "text": "the hope well yeah and and the point of this right is some of those hooks we",
    "start": "2467079",
    "end": "2472420"
  },
  {
    "text": "talked about some of the ways that you do Resource Management already I mean it already exists there for real right so",
    "start": "2472420",
    "end": "2478420"
  },
  {
    "text": "we're trying to put together a higher level process where we can start managing this with policies for example",
    "start": "2478420",
    "end": "2484540"
  },
  {
    "text": "this pod is immutable that could be a policy that we could hand through right and then say sorry no hooks because it's",
    "start": "2484540",
    "end": "2490480"
  },
  {
    "text": "immutable come help",
    "start": "2490480",
    "end": "2496500"
  },
  {
    "text": "exactly exactly",
    "start": "2500800",
    "end": "2504000"
  },
  {
    "text": "thank you first off my apologies I missed your whole talk I just came here cool so here's my question here's my the",
    "start": "2511660",
    "end": "2517660"
  },
  {
    "text": "problem that I have and I'm just curious if this would help uh I'm with the company that's a storage solution and we",
    "start": "2517660",
    "end": "2523060"
  },
  {
    "text": "need to install a kernel driver right now there's there was SRO which was the",
    "start": "2523060",
    "end": "2528520"
  },
  {
    "text": "special resource operator openshift specific it's a genealogical dead end kmmo is the replacement if you're",
    "start": "2528520",
    "end": "2534520"
  },
  {
    "text": "familiar with kmmo does this help yep could you talk about it so in your",
    "start": "2534520",
    "end": "2540339"
  },
  {
    "text": "particular case you would want to have a plug-in that would actually do the install before the first pod ran or",
    "start": "2540339",
    "end": "2545500"
  },
  {
    "text": "before the first container run and it would just be a plug-in that",
    "start": "2545500",
    "end": "2551560"
  },
  {
    "text": "registers interest in making sure that that dependency has been met that would be one way to do it right other or you",
    "start": "2551560",
    "end": "2557920"
  },
  {
    "text": "could just run your own",
    "start": "2557920",
    "end": "2560700"
  },
  {
    "text": "well you you said yourself student you needed your resource to be installed your application yeah",
    "start": "2565240",
    "end": "2572400"
  },
  {
    "text": "exactly so it's a dependency you have yes",
    "start": "2572820",
    "end": "2580200"
  },
  {
    "text": "it's an interesting so did I inter did I understand it correctly that basically the problem is that so in connection with some of the",
    "start": "2580480",
    "end": "2587020"
  },
  {
    "text": "some of the life cycle events you want to do something on the host side so insta something to make sure okay yeah that should be possible",
    "start": "2587020",
    "end": "2594599"
  },
  {
    "text": "and it could be also Dynamic right so Mike I think we are out of time at a",
    "start": "2595839",
    "end": "2602980"
  },
  {
    "text": "time one more question and then come forward and ask questions",
    "start": "2602980",
    "end": "2609099"
  },
  {
    "text": "thank you very much for delivering a great talk I really appreciate that um I have a question related to",
    "start": "2609099",
    "end": "2614319"
  },
  {
    "text": "container and cryo configuration itself if you look at how to integrate that there's a lot of manual steps go do that",
    "start": "2614319",
    "end": "2621220"
  },
  {
    "text": "systemd and blah blah blah kanji are you stand load map that to simplify that",
    "start": "2621220",
    "end": "2627280"
  },
  {
    "text": "step uh maybe some hook just like you mentioned do something because",
    "start": "2627280",
    "end": "2632800"
  },
  {
    "text": "manually changes wherever you're making there are greater chances that failure as something goes with you",
    "start": "2632800",
    "end": "2640359"
  },
  {
    "text": "yeah it'll it for administrators there's going to be more work to do different",
    "start": "2640359",
    "end": "2645520"
  },
  {
    "text": "work to do right you can currently configure your system in in cryo to do this by putting your",
    "start": "2645520",
    "end": "2652780"
  },
  {
    "text": "your your hook schemas in a particular location just the administrator has to set it up",
    "start": "2652780",
    "end": "2659920"
  },
  {
    "text": "and you know with the defining jsons for what's going to run at a particular point in time and this just sort of",
    "start": "2659920",
    "end": "2665740"
  },
  {
    "text": "modifies that so you no longer have to do that administratively but again each resource manager may have its own",
    "start": "2665740",
    "end": "2672040"
  },
  {
    "text": "complexity we haven't we haven't made this simple for users yet this is more",
    "start": "2672040",
    "end": "2677079"
  },
  {
    "text": "of a for developers and the owners of the resource managers at this point we're we're going to have to as he",
    "start": "2677079",
    "end": "2683319"
  },
  {
    "text": "mentioned earlier we're going to have to look work on policies and that's going to it's going to mean we need more",
    "start": "2683319",
    "end": "2689140"
  },
  {
    "text": "declarative rate specifications that are going to be setting your plots back make it simple",
    "start": "2689140",
    "end": "2695800"
  },
  {
    "text": "bring it down pass it to The Container runtime through CRI and then and we can just execute it with the plugins",
    "start": "2695800",
    "end": "2701560"
  },
  {
    "text": "receiving the information for the policy requirements it's not going to be easy but we'll we'll get to it",
    "start": "2701560",
    "end": "2709440"
  }
]