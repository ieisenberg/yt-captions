[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "so a very good afternoon everyone",
    "start": "160",
    "end": "2399"
  },
  {
    "text": "welcome once again to kcd chennai 2022.",
    "start": "2399",
    "end": "5759"
  },
  {
    "text": "so i am avi and today i'm going to",
    "start": "5759",
    "end": "8080"
  },
  {
    "text": "present you a talk on creating",
    "start": "8080",
    "end": "10080"
  },
  {
    "text": "serverless ci cd on kubernetes with",
    "start": "10080",
    "end": "12480"
  },
  {
    "text": "githubs so this talk will be beneficial",
    "start": "12480",
    "end": "15040"
  },
  {
    "text": "for those who are trying to understand",
    "start": "15040",
    "end": "17119"
  },
  {
    "text": "what you mean by serverless on",
    "start": "17119",
    "end": "18960"
  },
  {
    "text": "kubernetes and how to set up ci city",
    "start": "18960",
    "end": "21439"
  },
  {
    "text": "pipelines on kubernetes for deploying",
    "start": "21439",
    "end": "23840"
  },
  {
    "text": "serverless application following the",
    "start": "23840",
    "end": "25680"
  },
  {
    "text": "github's principles",
    "start": "25680",
    "end": "27359"
  },
  {
    "start": "27000",
    "end": "49000"
  },
  {
    "text": "a bit about myself i'm currently a",
    "start": "27359",
    "end": "29679"
  },
  {
    "text": "software engineer intern at red hat",
    "start": "29679",
    "end": "31599"
  },
  {
    "text": "india i currently contribute to projects",
    "start": "31599",
    "end": "34079"
  },
  {
    "text": "like openshift techton captain etc i",
    "start": "34079",
    "end": "37840"
  },
  {
    "text": "like to engage with new people and",
    "start": "37840",
    "end": "39760"
  },
  {
    "text": "contribute to various projects every",
    "start": "39760",
    "end": "41520"
  },
  {
    "text": "month you can follow me on twitter",
    "start": "41520",
    "end": "43680"
  },
  {
    "text": "linkedin or github i also write monthly",
    "start": "43680",
    "end": "46480"
  },
  {
    "text": "medium articles so you can check those",
    "start": "46480",
    "end": "48480"
  },
  {
    "text": "out too now let's understand what do you",
    "start": "48480",
    "end": "51039"
  },
  {
    "start": "49000",
    "end": "97000"
  },
  {
    "text": "mean by serverless so serverless is just",
    "start": "51039",
    "end": "53760"
  },
  {
    "text": "an abstract term and is not to be taken",
    "start": "53760",
    "end": "56000"
  },
  {
    "text": "literally in the same way as cloud",
    "start": "56000",
    "end": "58480"
  },
  {
    "text": "computing does not involve the sky",
    "start": "58480",
    "end": "60879"
  },
  {
    "text": "serverless computing does not mean that",
    "start": "60879",
    "end": "63280"
  },
  {
    "text": "the code is executing without service",
    "start": "63280",
    "end": "66159"
  },
  {
    "text": "basically it refers to the experience a",
    "start": "66159",
    "end": "68880"
  },
  {
    "text": "user or a customer has and represents a",
    "start": "68880",
    "end": "71920"
  },
  {
    "text": "continuum of how close one needs to work",
    "start": "71920",
    "end": "75119"
  },
  {
    "text": "with hardware and infrastructure",
    "start": "75119",
    "end": "77360"
  },
  {
    "text": "in simple terms it means there is much",
    "start": "77360",
    "end": "79759"
  },
  {
    "text": "focus on code it's a even driven",
    "start": "79759",
    "end": "82080"
  },
  {
    "text": "architecture and it's more easier to",
    "start": "82080",
    "end": "84240"
  },
  {
    "text": "manage because it's stateless and",
    "start": "84240",
    "end": "86560"
  },
  {
    "text": "isomorphic so we see there is a gradual",
    "start": "86560",
    "end": "89600"
  },
  {
    "text": "decrease in the concern for",
    "start": "89600",
    "end": "91520"
  },
  {
    "text": "infrastructure and a gradual increase",
    "start": "91520",
    "end": "94000"
  },
  {
    "text": "for the decomposition of the workloads",
    "start": "94000",
    "end": "96400"
  },
  {
    "text": "now let's understand the different",
    "start": "96400",
    "end": "98640"
  },
  {
    "start": "97000",
    "end": "178000"
  },
  {
    "text": "categories of products when we are",
    "start": "98640",
    "end": "100720"
  },
  {
    "text": "trying to exclude the serverless",
    "start": "100720",
    "end": "102240"
  },
  {
    "text": "ecosystem so we see two categories",
    "start": "102240",
    "end": "105119"
  },
  {
    "text": "mainly that is serverless 1.2 and a",
    "start": "105119",
    "end": "107680"
  },
  {
    "text": "serverless 2.0 the surface 1.0 revolves",
    "start": "107680",
    "end": "111360"
  },
  {
    "text": "around the products launched by the",
    "start": "111360",
    "end": "113360"
  },
  {
    "text": "various cloud providers it can be aws",
    "start": "113360",
    "end": "116799"
  },
  {
    "text": "lambda provided by amazon or azure",
    "start": "116799",
    "end": "119439"
  },
  {
    "text": "functions provided by azure",
    "start": "119439",
    "end": "121920"
  },
  {
    "text": "so the main issue with this kind of",
    "start": "121920",
    "end": "124320"
  },
  {
    "text": "services is that they are not portable",
    "start": "124320",
    "end": "127439"
  },
  {
    "text": "enough because it becomes difficult to",
    "start": "127439",
    "end": "130160"
  },
  {
    "text": "transfer applications from one cloud to",
    "start": "130160",
    "end": "132720"
  },
  {
    "text": "another this is because the signatures",
    "start": "132720",
    "end": "135520"
  },
  {
    "text": "are different and the way the zip file",
    "start": "135520",
    "end": "137520"
  },
  {
    "text": "is constructed is also different for",
    "start": "137520",
    "end": "139680"
  },
  {
    "text": "different clouds",
    "start": "139680",
    "end": "141440"
  },
  {
    "text": "this problem of portability is solved in",
    "start": "141440",
    "end": "144640"
  },
  {
    "text": "serverless 2.0 applications because they",
    "start": "144640",
    "end": "148000"
  },
  {
    "text": "follow a universal definition that is",
    "start": "148000",
    "end": "151040"
  },
  {
    "text": "the applications will be stored in oci",
    "start": "151040",
    "end": "153360"
  },
  {
    "text": "compatible container images it will be",
    "start": "153360",
    "end": "156160"
  },
  {
    "text": "exposing the http server at port 8080",
    "start": "156160",
    "end": "160160"
  },
  {
    "text": "and it can be configured with the help",
    "start": "160160",
    "end": "162319"
  },
  {
    "text": "of environment variables",
    "start": "162319",
    "end": "164400"
  },
  {
    "text": "thus any application written in python",
    "start": "164400",
    "end": "168480"
  },
  {
    "text": "or any other binaries could be easily",
    "start": "168480",
    "end": "170959"
  },
  {
    "text": "moved between the seven serverless 2.0",
    "start": "170959",
    "end": "173680"
  },
  {
    "text": "platforms like open fast or creative",
    "start": "173680",
    "end": "176640"
  },
  {
    "text": "with ease",
    "start": "176640",
    "end": "178480"
  },
  {
    "start": "178000",
    "end": "228000"
  },
  {
    "text": "so now let's move on to one of the",
    "start": "178480",
    "end": "180400"
  },
  {
    "text": "applications we are going to use in our",
    "start": "180400",
    "end": "182319"
  },
  {
    "text": "demonstration that is scannative so k",
    "start": "182319",
    "end": "185440"
  },
  {
    "text": "native is an open source enterprise",
    "start": "185440",
    "end": "188080"
  },
  {
    "text": "level solution for building serverless",
    "start": "188080",
    "end": "190560"
  },
  {
    "text": "and event-driven applications",
    "start": "190560",
    "end": "192879"
  },
  {
    "text": "originally developed by google",
    "start": "192879",
    "end": "194959"
  },
  {
    "text": "k native now has contributors from ibm",
    "start": "194959",
    "end": "197920"
  },
  {
    "text": "red hat and vmware",
    "start": "197920",
    "end": "199920"
  },
  {
    "text": "so the main purpose of using genitive is",
    "start": "199920",
    "end": "202800"
  },
  {
    "text": "to deploy serverless containers on top",
    "start": "202800",
    "end": "205360"
  },
  {
    "text": "of cubicles",
    "start": "205360",
    "end": "206879"
  },
  {
    "text": "so currently kenyattv has two different",
    "start": "206879",
    "end": "209200"
  },
  {
    "text": "components the first one is creative",
    "start": "209200",
    "end": "211760"
  },
  {
    "text": "serving which is responsible for rapid",
    "start": "211760",
    "end": "214560"
  },
  {
    "text": "deployment and auto scaling of",
    "start": "214560",
    "end": "216480"
  },
  {
    "text": "serverless containers and of course we",
    "start": "216480",
    "end": "218959"
  },
  {
    "text": "have canadian event which is responsible",
    "start": "218959",
    "end": "222239"
  },
  {
    "text": "for enabling developers for setting up",
    "start": "222239",
    "end": "225120"
  },
  {
    "text": "the even-driven architectures",
    "start": "225120",
    "end": "228159"
  },
  {
    "start": "228000",
    "end": "310000"
  },
  {
    "text": "now let's understand the architecture of",
    "start": "228159",
    "end": "230799"
  },
  {
    "text": "k native so we have the compute cluster",
    "start": "230799",
    "end": "234159"
  },
  {
    "text": "on top of which we have the communities",
    "start": "234159",
    "end": "236239"
  },
  {
    "text": "installed",
    "start": "236239",
    "end": "237280"
  },
  {
    "text": "now before installing canada we need to",
    "start": "237280",
    "end": "239840"
  },
  {
    "text": "have a networking layer so in this",
    "start": "239840",
    "end": "242400"
  },
  {
    "text": "example we are using issue but you can",
    "start": "242400",
    "end": "244560"
  },
  {
    "text": "use other applications like contour",
    "start": "244560",
    "end": "246560"
  },
  {
    "text": "courier etc",
    "start": "246560",
    "end": "248080"
  },
  {
    "text": "then we install the k native application",
    "start": "248080",
    "end": "250720"
  },
  {
    "text": "so with the help of k native we will be",
    "start": "250720",
    "end": "252959"
  },
  {
    "text": "able to deploy applications on",
    "start": "252959",
    "end": "254879"
  },
  {
    "text": "kubernetes within without having to",
    "start": "254879",
    "end": "257120"
  },
  {
    "text": "write about the deployment or the",
    "start": "257120",
    "end": "259280"
  },
  {
    "text": "service yaml files",
    "start": "259280",
    "end": "261040"
  },
  {
    "text": "how does this work so for that we have",
    "start": "261040",
    "end": "263520"
  },
  {
    "text": "the right diagram so the most important",
    "start": "263520",
    "end": "266080"
  },
  {
    "text": "thing of k native is the k native",
    "start": "266080",
    "end": "268080"
  },
  {
    "text": "service file so in this service file we",
    "start": "268080",
    "end": "270800"
  },
  {
    "text": "have to mention the container image that",
    "start": "270800",
    "end": "273360"
  },
  {
    "text": "should be deployed as well as the",
    "start": "273360",
    "end": "275520"
  },
  {
    "text": "environment variables followed by the",
    "start": "275520",
    "end": "277520"
  },
  {
    "text": "parameters",
    "start": "277520",
    "end": "278880"
  },
  {
    "text": "so whenever any is any change in this",
    "start": "278880",
    "end": "281759"
  },
  {
    "text": "file",
    "start": "281759",
    "end": "282720"
  },
  {
    "text": "a revision is created which is snapshot",
    "start": "282720",
    "end": "285759"
  },
  {
    "text": "of the application code so now whenever",
    "start": "285759",
    "end": "288880"
  },
  {
    "text": "there is a new revision created the",
    "start": "288880",
    "end": "291040"
  },
  {
    "text": "traffic is routed to this new division",
    "start": "291040",
    "end": "293360"
  },
  {
    "text": "but still we can control the traffic",
    "start": "293360",
    "end": "295759"
  },
  {
    "text": "with the help of the native service file",
    "start": "295759",
    "end": "298800"
  },
  {
    "text": "thus with the help of a single yaml file",
    "start": "298800",
    "end": "301759"
  },
  {
    "text": "we are able to deploy applications on",
    "start": "301759",
    "end": "303840"
  },
  {
    "text": "kubernetes without having to write the",
    "start": "303840",
    "end": "306160"
  },
  {
    "text": "standard yaml files that is required for",
    "start": "306160",
    "end": "308479"
  },
  {
    "text": "deploying applications so we have",
    "start": "308479",
    "end": "310479"
  },
  {
    "start": "310000",
    "end": "376000"
  },
  {
    "text": "understood how to deploy serverless",
    "start": "310479",
    "end": "312720"
  },
  {
    "text": "applications on kubernetes with the help",
    "start": "312720",
    "end": "315199"
  },
  {
    "text": "of k native",
    "start": "315199",
    "end": "316639"
  },
  {
    "text": "but now there is a need to create a ci",
    "start": "316639",
    "end": "319440"
  },
  {
    "text": "cd system to automate this process of",
    "start": "319440",
    "end": "321919"
  },
  {
    "text": "deployment so here comes tikton so",
    "start": "321919",
    "end": "324960"
  },
  {
    "text": "techton is a powerful open source cloud",
    "start": "324960",
    "end": "327280"
  },
  {
    "text": "native framework for creating ci cd",
    "start": "327280",
    "end": "329680"
  },
  {
    "text": "systems",
    "start": "329680",
    "end": "330720"
  },
  {
    "text": "originally it was known as sk native",
    "start": "330720",
    "end": "332880"
  },
  {
    "text": "build but it spun off as a separate",
    "start": "332880",
    "end": "335360"
  },
  {
    "text": "project and is one of the incubating",
    "start": "335360",
    "end": "337520"
  },
  {
    "text": "projects from the cd foundation",
    "start": "337520",
    "end": "340080"
  },
  {
    "text": "so the main feature of tecton is that",
    "start": "340080",
    "end": "342400"
  },
  {
    "text": "it's cloud native so it can be deployed",
    "start": "342400",
    "end": "345520"
  },
  {
    "text": "on any kubernetes cluster across the",
    "start": "345520",
    "end": "348080"
  },
  {
    "text": "multiple hybrid cloud riders",
    "start": "348080",
    "end": "351600"
  },
  {
    "text": "techton is made up of two main",
    "start": "351600",
    "end": "353199"
  },
  {
    "text": "components that is the tectonic",
    "start": "353199",
    "end": "355039"
  },
  {
    "text": "pipelines and electron triggers tecton",
    "start": "355039",
    "end": "358080"
  },
  {
    "text": "pipelines is more responsible for",
    "start": "358080",
    "end": "360720"
  },
  {
    "text": "providing kubernetes style yaml based",
    "start": "360720",
    "end": "363360"
  },
  {
    "text": "resources for declaring the ci series",
    "start": "363360",
    "end": "365919"
  },
  {
    "text": "pipelines and tecton triggers helps you",
    "start": "365919",
    "end": "369440"
  },
  {
    "text": "to create the kubernetes resources based",
    "start": "369440",
    "end": "372240"
  },
  {
    "text": "on the information about the even",
    "start": "372240",
    "end": "374560"
  },
  {
    "text": "payloads",
    "start": "374560",
    "end": "375759"
  },
  {
    "text": "so now let's see the architecture of",
    "start": "375759",
    "end": "377840"
  },
  {
    "start": "376000",
    "end": "406000"
  },
  {
    "text": "tectonic pipelines",
    "start": "377840",
    "end": "379600"
  },
  {
    "text": "so the smallest resource in tecton",
    "start": "379600",
    "end": "381680"
  },
  {
    "text": "pipelines is known as a step",
    "start": "381680",
    "end": "384000"
  },
  {
    "text": "so step is a job that you want to",
    "start": "384000",
    "end": "386080"
  },
  {
    "text": "automate",
    "start": "386080",
    "end": "387120"
  },
  {
    "text": "so a collection of steps make a task a",
    "start": "387120",
    "end": "390319"
  },
  {
    "text": "collection of tasks make a pipeline",
    "start": "390319",
    "end": "393440"
  },
  {
    "text": "now to run a task you need to have",
    "start": "393440",
    "end": "396160"
  },
  {
    "text": "another resource known as a task run",
    "start": "396160",
    "end": "399199"
  },
  {
    "text": "while to run a pipeline you need another",
    "start": "399199",
    "end": "401520"
  },
  {
    "text": "resource known as a pipeline one",
    "start": "401520",
    "end": "405039"
  },
  {
    "text": "now let's look at the architecture of",
    "start": "405039",
    "end": "407919"
  },
  {
    "start": "406000",
    "end": "452000"
  },
  {
    "text": "tecton triggers",
    "start": "407919",
    "end": "409599"
  },
  {
    "text": "so tecton triggers also has various",
    "start": "409599",
    "end": "411840"
  },
  {
    "text": "resources the most important one is the",
    "start": "411840",
    "end": "414639"
  },
  {
    "text": "event listener board",
    "start": "414639",
    "end": "416319"
  },
  {
    "text": "so this pod is continuously listening to",
    "start": "416319",
    "end": "418880"
  },
  {
    "text": "any event that is coming from outside",
    "start": "418880",
    "end": "421120"
  },
  {
    "text": "the cluster so whenever it receives an",
    "start": "421120",
    "end": "423840"
  },
  {
    "text": "event it sends it information to trigger",
    "start": "423840",
    "end": "426880"
  },
  {
    "text": "binding a trigger binding extracts the",
    "start": "426880",
    "end": "430000"
  },
  {
    "text": "important information and sends it as",
    "start": "430000",
    "end": "432720"
  },
  {
    "text": "parameters to a to your template",
    "start": "432720",
    "end": "435360"
  },
  {
    "text": "a trigger template in turns fires the",
    "start": "435360",
    "end": "438160"
  },
  {
    "text": "pipeline one which is in turn",
    "start": "438160",
    "end": "440240"
  },
  {
    "text": "responsible for starting off the",
    "start": "440240",
    "end": "442160"
  },
  {
    "text": "pipeline",
    "start": "442160",
    "end": "443360"
  },
  {
    "text": "thus with the help of tecton triggers",
    "start": "443360",
    "end": "445840"
  },
  {
    "text": "and tecton pipelines we are able to",
    "start": "445840",
    "end": "448240"
  },
  {
    "text": "achieve a fully ci cd system",
    "start": "448240",
    "end": "451599"
  },
  {
    "text": "so now let's understand what you mean by",
    "start": "451599",
    "end": "454160"
  },
  {
    "text": "githubs and argo cd",
    "start": "454160",
    "end": "456160"
  },
  {
    "text": "so get ops is a way of implementing",
    "start": "456160",
    "end": "458720"
  },
  {
    "text": "continuous deployment for cloud native",
    "start": "458720",
    "end": "461199"
  },
  {
    "text": "applications",
    "start": "461199",
    "end": "462639"
  },
  {
    "text": "so it focuses on a developer centric",
    "start": "462639",
    "end": "465360"
  },
  {
    "text": "experience when operating with",
    "start": "465360",
    "end": "467520"
  },
  {
    "text": "infrastructures",
    "start": "467520",
    "end": "469199"
  },
  {
    "text": "with the help of tools the developer are",
    "start": "469199",
    "end": "471759"
  },
  {
    "text": "already familiar with including git and",
    "start": "471759",
    "end": "475120"
  },
  {
    "text": "other continuous deployment tools",
    "start": "475120",
    "end": "477759"
  },
  {
    "text": "so sargo cd is a tool that follows the",
    "start": "477759",
    "end": "481280"
  },
  {
    "text": "getup pattern of git repositories as a",
    "start": "481280",
    "end": "484479"
  },
  {
    "text": "single source for truth for defining the",
    "start": "484479",
    "end": "487280"
  },
  {
    "text": "desired application state",
    "start": "487280",
    "end": "489360"
  },
  {
    "text": "so the main feature of argo cd is that",
    "start": "489360",
    "end": "491759"
  },
  {
    "text": "it can help in automated deployment of",
    "start": "491759",
    "end": "494560"
  },
  {
    "text": "applications to specified target",
    "start": "494560",
    "end": "497039"
  },
  {
    "text": "environments",
    "start": "497039",
    "end": "498400"
  },
  {
    "text": "so now let's understand the cicd",
    "start": "498400",
    "end": "500400"
  },
  {
    "start": "499000",
    "end": "668000"
  },
  {
    "text": "workflow of the demonstration we are",
    "start": "500400",
    "end": "502319"
  },
  {
    "text": "going to see",
    "start": "502319",
    "end": "503440"
  },
  {
    "text": "before that let's understand what we are",
    "start": "503440",
    "end": "505599"
  },
  {
    "text": "trying to achieve",
    "start": "505599",
    "end": "506960"
  },
  {
    "text": "so whenever a developer will push some",
    "start": "506960",
    "end": "509120"
  },
  {
    "text": "new changes in the application",
    "start": "509120",
    "end": "510960"
  },
  {
    "text": "repository he must be seeing the latest",
    "start": "510960",
    "end": "513360"
  },
  {
    "text": "code changes back into the website url",
    "start": "513360",
    "end": "516479"
  },
  {
    "text": "so for that we need to create the cli",
    "start": "516479",
    "end": "518479"
  },
  {
    "text": "series system",
    "start": "518479",
    "end": "519760"
  },
  {
    "text": "so",
    "start": "519760",
    "end": "520399"
  },
  {
    "text": "first of all whenever the developer will",
    "start": "520399",
    "end": "523039"
  },
  {
    "text": "push the application code into the",
    "start": "523039",
    "end": "525360"
  },
  {
    "text": "application repository a web hook will",
    "start": "525360",
    "end": "527680"
  },
  {
    "text": "be triggered which will inform the event",
    "start": "527680",
    "end": "530640"
  },
  {
    "text": "listener that is running inside the",
    "start": "530640",
    "end": "532800"
  },
  {
    "text": "capabilities cluster",
    "start": "532800",
    "end": "534399"
  },
  {
    "text": "that a event has been occurred in the",
    "start": "534399",
    "end": "536720"
  },
  {
    "text": "application repository",
    "start": "536720",
    "end": "538640"
  },
  {
    "text": "the event listener will then transfer",
    "start": "538640",
    "end": "541040"
  },
  {
    "text": "the response to the trigger binding the",
    "start": "541040",
    "end": "544080"
  },
  {
    "text": "trigger binding and turn will extract",
    "start": "544080",
    "end": "546399"
  },
  {
    "text": "the important information like the",
    "start": "546399",
    "end": "548800"
  },
  {
    "text": "commit url and the commit id",
    "start": "548800",
    "end": "551600"
  },
  {
    "text": "and pass it to the trigger template",
    "start": "551600",
    "end": "554560"
  },
  {
    "text": "the trigger template in turn will use",
    "start": "554560",
    "end": "556959"
  },
  {
    "text": "these information as parameters to run",
    "start": "556959",
    "end": "559600"
  },
  {
    "text": "the pipeline one and as we know the",
    "start": "559600",
    "end": "562080"
  },
  {
    "text": "pipeline one is responsible for running",
    "start": "562080",
    "end": "564240"
  },
  {
    "text": "the pipeline so the pipeline will be",
    "start": "564240",
    "end": "567040"
  },
  {
    "text": "running the three tasks that is listed",
    "start": "567040",
    "end": "569040"
  },
  {
    "text": "here so the first task will be cloning",
    "start": "569040",
    "end": "571839"
  },
  {
    "text": "the source repository that means the",
    "start": "571839",
    "end": "574480"
  },
  {
    "text": "application repository will be cloned",
    "start": "574480",
    "end": "576480"
  },
  {
    "text": "inside the tecton",
    "start": "576480",
    "end": "578000"
  },
  {
    "text": "environment",
    "start": "578000",
    "end": "579279"
  },
  {
    "text": "after that",
    "start": "579279",
    "end": "580640"
  },
  {
    "text": "the application repository contains a",
    "start": "580640",
    "end": "583120"
  },
  {
    "text": "docker file so with the docker file we",
    "start": "583120",
    "end": "585680"
  },
  {
    "text": "will be able to build the docker",
    "start": "585680",
    "end": "587279"
  },
  {
    "text": "container and push that container image",
    "start": "587279",
    "end": "590000"
  },
  {
    "text": "into docker hub",
    "start": "590000",
    "end": "592000"
  },
  {
    "text": "after that the third task will be",
    "start": "592000",
    "end": "594399"
  },
  {
    "text": "fetching the latest github's",
    "start": "594399",
    "end": "596160"
  },
  {
    "text": "configuration details from the github's",
    "start": "596160",
    "end": "598640"
  },
  {
    "text": "configuration requestory so this",
    "start": "598640",
    "end": "600720"
  },
  {
    "text": "repository contains the cognitive ml",
    "start": "600720",
    "end": "603040"
  },
  {
    "text": "files as well other configuration files",
    "start": "603040",
    "end": "606160"
  },
  {
    "text": "so after fetching these files",
    "start": "606160",
    "end": "608800"
  },
  {
    "text": "our task will be to update the canadian",
    "start": "608800",
    "end": "611600"
  },
  {
    "text": "service yaml so that it now contains the",
    "start": "611600",
    "end": "614720"
  },
  {
    "text": "information about the latest docker",
    "start": "614720",
    "end": "616640"
  },
  {
    "text": "container that has been pushed to dock",
    "start": "616640",
    "end": "619360"
  },
  {
    "text": "so after this change is made then the",
    "start": "619360",
    "end": "622079"
  },
  {
    "text": "updated file is again pushed into the",
    "start": "622079",
    "end": "624399"
  },
  {
    "text": "keyboard's configuration repository so",
    "start": "624399",
    "end": "626800"
  },
  {
    "text": "this entire process must be done",
    "start": "626800",
    "end": "628800"
  },
  {
    "text": "automatically",
    "start": "628800",
    "end": "630320"
  },
  {
    "text": "on the other hand argo city is",
    "start": "630320",
    "end": "632560"
  },
  {
    "text": "constantly looking at the github's",
    "start": "632560",
    "end": "634480"
  },
  {
    "text": "configuration repository so whenever it",
    "start": "634480",
    "end": "637200"
  },
  {
    "text": "sees there is a change in the files in",
    "start": "637200",
    "end": "639279"
  },
  {
    "text": "the configuration repository it",
    "start": "639279",
    "end": "641200"
  },
  {
    "text": "understands it is out of sync",
    "start": "641200",
    "end": "643519"
  },
  {
    "text": "so it fetches the latest files from the",
    "start": "643519",
    "end": "646160"
  },
  {
    "text": "repository and then applies those in the",
    "start": "646160",
    "end": "648959"
  },
  {
    "text": "cognitive environment that is underlying",
    "start": "648959",
    "end": "651600"
  },
  {
    "text": "inside the kubernetes cluster",
    "start": "651600",
    "end": "654480"
  },
  {
    "text": "so now with the help of the creative",
    "start": "654480",
    "end": "656880"
  },
  {
    "text": "service file which has been updated with",
    "start": "656880",
    "end": "659120"
  },
  {
    "text": "the latest docker image",
    "start": "659120",
    "end": "660959"
  },
  {
    "text": "the application developer can see the",
    "start": "660959",
    "end": "663360"
  },
  {
    "text": "latest code change in the application",
    "start": "663360",
    "end": "665680"
  },
  {
    "text": "url",
    "start": "665680",
    "end": "667760"
  },
  {
    "text": "so now let's explore the code base to",
    "start": "667760",
    "end": "670240"
  },
  {
    "start": "668000",
    "end": "686000"
  },
  {
    "text": "understand how the configuration files",
    "start": "670240",
    "end": "672959"
  },
  {
    "text": "for managing the k native tikton and",
    "start": "672959",
    "end": "675680"
  },
  {
    "text": "argo cd are written",
    "start": "675680",
    "end": "677519"
  },
  {
    "text": "so currently i've already started a two",
    "start": "677519",
    "end": "680079"
  },
  {
    "text": "node eks cluster on amazon with the help",
    "start": "680079",
    "end": "683360"
  },
  {
    "text": "of ek ctl command line so currently you",
    "start": "683360",
    "end": "686880"
  },
  {
    "start": "686000",
    "end": "883000"
  },
  {
    "text": "can see my vs code screen in which all",
    "start": "686880",
    "end": "689680"
  },
  {
    "text": "the configuration files as well as the",
    "start": "689680",
    "end": "691680"
  },
  {
    "text": "application code is present so let's",
    "start": "691680",
    "end": "694079"
  },
  {
    "text": "browse to each and every file so first",
    "start": "694079",
    "end": "696399"
  },
  {
    "text": "let's see the application code so here",
    "start": "696399",
    "end": "698640"
  },
  {
    "text": "we have a simple golang application with",
    "start": "698640",
    "end": "701200"
  },
  {
    "text": "a goodmain.gov file so in this main.go",
    "start": "701200",
    "end": "704000"
  },
  {
    "text": "file we have a hello world that is going",
    "start": "704000",
    "end": "706160"
  },
  {
    "text": "to be printed on the website",
    "start": "706160",
    "end": "708399"
  },
  {
    "text": "apart from this we also have a docker",
    "start": "708399",
    "end": "710639"
  },
  {
    "text": "file so this docker file will be used to",
    "start": "710639",
    "end": "712880"
  },
  {
    "text": "create the docker containers in our ci",
    "start": "712880",
    "end": "714959"
  },
  {
    "text": "cicd pipeline",
    "start": "714959",
    "end": "716560"
  },
  {
    "text": "so next we have the k native service",
    "start": "716560",
    "end": "718959"
  },
  {
    "text": "yaml file so in the service eml file the",
    "start": "718959",
    "end": "722160"
  },
  {
    "text": "most important thing is the container",
    "start": "722160",
    "end": "724480"
  },
  {
    "text": "image name here you can see it is",
    "start": "724480",
    "end": "727040"
  },
  {
    "text": "directing to the go sample app that is",
    "start": "727040",
    "end": "729519"
  },
  {
    "text": "present in my docker registry apart from",
    "start": "729519",
    "end": "732399"
  },
  {
    "text": "this you can also see a docker tag",
    "start": "732399",
    "end": "734480"
  },
  {
    "text": "mentioned this is important because we",
    "start": "734480",
    "end": "737279"
  },
  {
    "text": "are going to update this docker tag",
    "start": "737279",
    "end": "739519"
  },
  {
    "text": "automatically with the help of the ci cd",
    "start": "739519",
    "end": "741839"
  },
  {
    "text": "pipelines in the further steps so",
    "start": "741839",
    "end": "744399"
  },
  {
    "text": "finally let's see the configurations for",
    "start": "744399",
    "end": "747200"
  },
  {
    "text": "the tecton pipelines and figures",
    "start": "747200",
    "end": "749600"
  },
  {
    "text": "so first let's start off with the",
    "start": "749600",
    "end": "751839"
  },
  {
    "text": "explanation of the task configuration",
    "start": "751839",
    "end": "754560"
  },
  {
    "text": "so here we can see there are two",
    "start": "754560",
    "end": "756240"
  },
  {
    "text": "different files for the two tasks",
    "start": "756240",
    "end": "759040"
  },
  {
    "text": "but according to the diagram before we",
    "start": "759040",
    "end": "761200"
  },
  {
    "text": "have three different tasks so the first",
    "start": "761200",
    "end": "764160"
  },
  {
    "text": "task that is the cloning of the git",
    "start": "764160",
    "end": "766160"
  },
  {
    "text": "repository is a very common task and is",
    "start": "766160",
    "end": "768720"
  },
  {
    "text": "present in almost all the pipelines",
    "start": "768720",
    "end": "771440"
  },
  {
    "text": "therefore rather than writing the task",
    "start": "771440",
    "end": "774240"
  },
  {
    "text": "manually i have downloaded the task from",
    "start": "774240",
    "end": "777120"
  },
  {
    "text": "the tickton hub so tickton hub is a",
    "start": "777120",
    "end": "780000"
  },
  {
    "text": "marketplace from where you can download",
    "start": "780000",
    "end": "782480"
  },
  {
    "text": "pre-created tasks and use them directly",
    "start": "782480",
    "end": "784880"
  },
  {
    "text": "in your pipeline so from this i have",
    "start": "784880",
    "end": "787279"
  },
  {
    "text": "downloaded this git clone task and i've",
    "start": "787279",
    "end": "790240"
  },
  {
    "text": "installed it with this simple command",
    "start": "790240",
    "end": "792800"
  },
  {
    "text": "so after installing this task i'm able",
    "start": "792800",
    "end": "795519"
  },
  {
    "text": "to use the starts directly in my",
    "start": "795519",
    "end": "797519"
  },
  {
    "text": "pipeline so apart from this task i have",
    "start": "797519",
    "end": "800160"
  },
  {
    "text": "written this builder task so this",
    "start": "800160",
    "end": "802480"
  },
  {
    "text": "builder task is responsible for building",
    "start": "802480",
    "end": "805519"
  },
  {
    "text": "tagging and pushing the docker container",
    "start": "805519",
    "end": "807839"
  },
  {
    "text": "into docker hub so this task contains a",
    "start": "807839",
    "end": "810639"
  },
  {
    "text": "multiple steps the first step is",
    "start": "810639",
    "end": "813360"
  },
  {
    "text": "building the docker container with the",
    "start": "813360",
    "end": "815279"
  },
  {
    "text": "help of the docker file already present",
    "start": "815279",
    "end": "817360"
  },
  {
    "text": "in the application requestory",
    "start": "817360",
    "end": "819360"
  },
  {
    "text": "so once the docker container is built",
    "start": "819360",
    "end": "821680"
  },
  {
    "text": "then it is stacked in the second step",
    "start": "821680",
    "end": "824399"
  },
  {
    "text": "the final step involves pushing the",
    "start": "824399",
    "end": "826880"
  },
  {
    "text": "docker container into the docker hub so",
    "start": "826880",
    "end": "829839"
  },
  {
    "text": "finally with this task i am able to",
    "start": "829839",
    "end": "832560"
  },
  {
    "text": "build tag and post attacker containers",
    "start": "832560",
    "end": "835199"
  },
  {
    "text": "to docker hub",
    "start": "835199",
    "end": "836880"
  },
  {
    "text": "so the final task involves updating the",
    "start": "836880",
    "end": "839440"
  },
  {
    "text": "github's configuration repository with",
    "start": "839440",
    "end": "841760"
  },
  {
    "text": "the latest code change so this task is",
    "start": "841760",
    "end": "844320"
  },
  {
    "text": "also consists of three steps",
    "start": "844320",
    "end": "846800"
  },
  {
    "text": "the first step involves checking out the",
    "start": "846800",
    "end": "849680"
  },
  {
    "text": "code from the github's configuration",
    "start": "849680",
    "end": "851680"
  },
  {
    "text": "repository",
    "start": "851680",
    "end": "852959"
  },
  {
    "text": "the second step involves updating the",
    "start": "852959",
    "end": "855760"
  },
  {
    "text": "kinetic service yaml file with the",
    "start": "855760",
    "end": "858399"
  },
  {
    "text": "docker tag of the new container that",
    "start": "858399",
    "end": "860880"
  },
  {
    "text": "just has been pushed to docker hub and",
    "start": "860880",
    "end": "863600"
  },
  {
    "text": "we are able to achieve this with the",
    "start": "863600",
    "end": "865360"
  },
  {
    "text": "help of a utility known as yq",
    "start": "865360",
    "end": "868240"
  },
  {
    "text": "the final step of this task involves",
    "start": "868240",
    "end": "871199"
  },
  {
    "text": "pushing the latest code changes back",
    "start": "871199",
    "end": "873680"
  },
  {
    "text": "into the github's configuration",
    "start": "873680",
    "end": "875040"
  },
  {
    "text": "requestory so for this we have already",
    "start": "875040",
    "end": "877199"
  },
  {
    "text": "said the ssh keys so that automatically",
    "start": "877199",
    "end": "880240"
  },
  {
    "text": "a commit can be made",
    "start": "880240",
    "end": "882800"
  },
  {
    "text": "next let's see the configuration for the",
    "start": "882800",
    "end": "885519"
  },
  {
    "start": "883000",
    "end": "949000"
  },
  {
    "text": "pipeline resource for that we have",
    "start": "885519",
    "end": "888079"
  },
  {
    "text": "defined the pipeline.ml file",
    "start": "888079",
    "end": "890880"
  },
  {
    "text": "so in this file we are going to specify",
    "start": "890880",
    "end": "892959"
  },
  {
    "text": "all the configurations that are required",
    "start": "892959",
    "end": "895120"
  },
  {
    "text": "to setup the pipeline resource we",
    "start": "895120",
    "end": "897519"
  },
  {
    "text": "already know that a pipeline constitutes",
    "start": "897519",
    "end": "899440"
  },
  {
    "text": "a multiple tasks so in this file",
    "start": "899440",
    "end": "902160"
  },
  {
    "text": "specifically we are mentioning which are",
    "start": "902160",
    "end": "904160"
  },
  {
    "text": "the tasks that are going to be executed",
    "start": "904160",
    "end": "906240"
  },
  {
    "text": "in this pipeline so you can see here the",
    "start": "906240",
    "end": "908959"
  },
  {
    "text": "first task is a fetch repository task",
    "start": "908959",
    "end": "911680"
  },
  {
    "text": "this task is using the git loan task we",
    "start": "911680",
    "end": "914240"
  },
  {
    "text": "have downloaded from the tecton hub",
    "start": "914240",
    "end": "916560"
  },
  {
    "text": "apart from this the second task is the",
    "start": "916560",
    "end": "918720"
  },
  {
    "text": "build and push task which is using the",
    "start": "918720",
    "end": "921040"
  },
  {
    "text": "builder task we had defined before and",
    "start": "921040",
    "end": "923519"
  },
  {
    "text": "the final task is the update docker tag",
    "start": "923519",
    "end": "925920"
  },
  {
    "text": "config repo which is using the update",
    "start": "925920",
    "end": "928399"
  },
  {
    "text": "github's repo task we had defined before",
    "start": "928399",
    "end": "931360"
  },
  {
    "text": "so these three tasks are going to run",
    "start": "931360",
    "end": "934079"
  },
  {
    "text": "sequentially one after the other to",
    "start": "934079",
    "end": "936639"
  },
  {
    "text": "ensure this we have used the run after",
    "start": "936639",
    "end": "938800"
  },
  {
    "text": "parameters in this",
    "start": "938800",
    "end": "940880"
  },
  {
    "text": "so finally we are able to create the",
    "start": "940880",
    "end": "943120"
  },
  {
    "text": "pipeline to set up the continuous",
    "start": "943120",
    "end": "945360"
  },
  {
    "text": "integration process for deploying our",
    "start": "945360",
    "end": "947600"
  },
  {
    "text": "application so till now we have set up",
    "start": "947600",
    "end": "950079"
  },
  {
    "start": "949000",
    "end": "1043000"
  },
  {
    "text": "the tecton pipelines",
    "start": "950079",
    "end": "951920"
  },
  {
    "text": "but to automatically trigger these",
    "start": "951920",
    "end": "953920"
  },
  {
    "text": "pipelines whenever there will be any",
    "start": "953920",
    "end": "956000"
  },
  {
    "text": "code push inside the application data",
    "start": "956000",
    "end": "958079"
  },
  {
    "text": "repository we need to set up detect on",
    "start": "958079",
    "end": "960480"
  },
  {
    "text": "triggers so for that we first set up the",
    "start": "960480",
    "end": "963199"
  },
  {
    "text": "event listener so whenever a user will",
    "start": "963199",
    "end": "966399"
  },
  {
    "text": "push some new code inside the",
    "start": "966399",
    "end": "968000"
  },
  {
    "text": "application github repository our",
    "start": "968000",
    "end": "969839"
  },
  {
    "text": "webhook will be triggered this webhook",
    "start": "969839",
    "end": "972240"
  },
  {
    "text": "will send the information about the",
    "start": "972240",
    "end": "974000"
  },
  {
    "text": "latest comment to the event listener",
    "start": "974000",
    "end": "976959"
  },
  {
    "text": "now to the event listener has to",
    "start": "976959",
    "end": "979120"
  },
  {
    "text": "understand this comment so for that we",
    "start": "979120",
    "end": "981440"
  },
  {
    "text": "are using the github listener",
    "start": "981440",
    "end": "983519"
  },
  {
    "text": "so once the event listener receives the",
    "start": "983519",
    "end": "986000"
  },
  {
    "text": "payload response now it will send that",
    "start": "986000",
    "end": "988560"
  },
  {
    "text": "payload response to the trigger binding",
    "start": "988560",
    "end": "991600"
  },
  {
    "text": "now the trigger binding will in turn",
    "start": "991600",
    "end": "993759"
  },
  {
    "text": "extract the important information from",
    "start": "993759",
    "end": "996079"
  },
  {
    "text": "the payload response that is the clone",
    "start": "996079",
    "end": "998399"
  },
  {
    "text": "url and the commit id",
    "start": "998399",
    "end": "1000560"
  },
  {
    "text": "so once it extracts those information it",
    "start": "1000560",
    "end": "1003120"
  },
  {
    "text": "will send this as parameters to the",
    "start": "1003120",
    "end": "1005440"
  },
  {
    "text": "trigger template so now the trigger",
    "start": "1005440",
    "end": "1007600"
  },
  {
    "text": "template is responsible for starting off",
    "start": "1007600",
    "end": "1010160"
  },
  {
    "text": "the pipelines with the help of the",
    "start": "1010160",
    "end": "1011920"
  },
  {
    "text": "pipeline one resource so here you can",
    "start": "1011920",
    "end": "1014240"
  },
  {
    "text": "see we are defining the pipeline one",
    "start": "1014240",
    "end": "1016320"
  },
  {
    "text": "resource and also passing the parameters",
    "start": "1016320",
    "end": "1018880"
  },
  {
    "text": "that are required to run the pipeline so",
    "start": "1018880",
    "end": "1021680"
  },
  {
    "text": "thus with the help of tecton triggers as",
    "start": "1021680",
    "end": "1024160"
  },
  {
    "text": "well as tecton pipelines we are able to",
    "start": "1024160",
    "end": "1026558"
  },
  {
    "text": "create the ci platform so whenever a",
    "start": "1026559",
    "end": "1029199"
  },
  {
    "text": "user will post some code changes",
    "start": "1029199",
    "end": "1031360"
  },
  {
    "text": "automatically tecton pipelines will run",
    "start": "1031360",
    "end": "1034400"
  },
  {
    "text": "which will build and push the container",
    "start": "1034400",
    "end": "1036558"
  },
  {
    "text": "to docker hub and also update the kdp",
    "start": "1036559",
    "end": "1039360"
  },
  {
    "text": "service cml file with the latest docker",
    "start": "1039360",
    "end": "1041600"
  },
  {
    "text": "image tag",
    "start": "1041600",
    "end": "1043438"
  },
  {
    "start": "1043000",
    "end": "1090000"
  },
  {
    "text": "so finally let's see the configuration",
    "start": "1043439",
    "end": "1045918"
  },
  {
    "text": "for the argo c",
    "start": "1045919",
    "end": "1047520"
  },
  {
    "text": "so here for argo cd the configuration is",
    "start": "1047520",
    "end": "1050640"
  },
  {
    "text": "very simple so most important thing is",
    "start": "1050640",
    "end": "1053039"
  },
  {
    "text": "the repository url that argo cd will",
    "start": "1053039",
    "end": "1055760"
  },
  {
    "text": "continuously look into for any code",
    "start": "1055760",
    "end": "1058000"
  },
  {
    "text": "change",
    "start": "1058000",
    "end": "1058960"
  },
  {
    "text": "apart from this we can also mention the",
    "start": "1058960",
    "end": "1061280"
  },
  {
    "text": "destination name space in which the argo",
    "start": "1061280",
    "end": "1063600"
  },
  {
    "text": "cd will install the kubernetes",
    "start": "1063600",
    "end": "1065520"
  },
  {
    "text": "application",
    "start": "1065520",
    "end": "1066640"
  },
  {
    "text": "apart from that we can also mention some",
    "start": "1066640",
    "end": "1068720"
  },
  {
    "text": "of the same policies and the sync",
    "start": "1068720",
    "end": "1070640"
  },
  {
    "text": "options",
    "start": "1070640",
    "end": "1071760"
  },
  {
    "text": "therefore by applying all these",
    "start": "1071760",
    "end": "1074000"
  },
  {
    "text": "configuration yaml files inside the",
    "start": "1074000",
    "end": "1076400"
  },
  {
    "text": "capabilities cluster we will be able to",
    "start": "1076400",
    "end": "1079039"
  },
  {
    "text": "successfully configure the k native",
    "start": "1079039",
    "end": "1081679"
  },
  {
    "text": "pikton and argo cd to set up the entire",
    "start": "1081679",
    "end": "1084960"
  },
  {
    "text": "serverless ci cd for deploying",
    "start": "1084960",
    "end": "1087120"
  },
  {
    "text": "applications on kubernetes",
    "start": "1087120",
    "end": "1090080"
  },
  {
    "start": "1090000",
    "end": "1283000"
  },
  {
    "text": "so finally let's see the workflow",
    "start": "1090080",
    "end": "1092400"
  },
  {
    "text": "demonstration so in the current screen",
    "start": "1092400",
    "end": "1095440"
  },
  {
    "text": "you can see",
    "start": "1095440",
    "end": "1096640"
  },
  {
    "text": "the application code repository so here",
    "start": "1096640",
    "end": "1099360"
  },
  {
    "text": "we have a simple go application",
    "start": "1099360",
    "end": "1101840"
  },
  {
    "text": "so here you can see it's going to print",
    "start": "1101840",
    "end": "1104000"
  },
  {
    "text": "hello world on the screen so let me show",
    "start": "1104000",
    "end": "1106240"
  },
  {
    "text": "you the initial website",
    "start": "1106240",
    "end": "1108400"
  },
  {
    "text": "so currently you can see here hello",
    "start": "1108400",
    "end": "1110080"
  },
  {
    "text": "world is printed",
    "start": "1110080",
    "end": "1111600"
  },
  {
    "text": "so now if i go back and if i edit it",
    "start": "1111600",
    "end": "1115200"
  },
  {
    "text": "to something like",
    "start": "1115200",
    "end": "1117919"
  },
  {
    "text": "hello",
    "start": "1117919",
    "end": "1120320"
  },
  {
    "text": "kcd",
    "start": "1121760",
    "end": "1124080"
  },
  {
    "text": "channel",
    "start": "1124080",
    "end": "1126559"
  },
  {
    "text": "and then if i commit it",
    "start": "1126640",
    "end": "1130799"
  },
  {
    "text": "now if i go to the tickton dashboard i",
    "start": "1132640",
    "end": "1136000"
  },
  {
    "text": "can see here a new pipeline has started",
    "start": "1136000",
    "end": "1138880"
  },
  {
    "text": "to run",
    "start": "1138880",
    "end": "1139919"
  },
  {
    "text": "so if i click on that i can see the",
    "start": "1139919",
    "end": "1142240"
  },
  {
    "text": "three tasks that we had already defined",
    "start": "1142240",
    "end": "1144320"
  },
  {
    "text": "before that is the fetch repository",
    "start": "1144320",
    "end": "1146799"
  },
  {
    "text": "build and push image and update the",
    "start": "1146799",
    "end": "1148799"
  },
  {
    "text": "docker tag so the fetch repository is",
    "start": "1148799",
    "end": "1151360"
  },
  {
    "text": "trying to clone the application and then",
    "start": "1151360",
    "end": "1154160"
  },
  {
    "text": "build and push image is trying to build",
    "start": "1154160",
    "end": "1156080"
  },
  {
    "text": "the docker container with the docker",
    "start": "1156080",
    "end": "1158000"
  },
  {
    "text": "file that is present in application",
    "start": "1158000",
    "end": "1159760"
  },
  {
    "text": "source requestry and then it's going to",
    "start": "1159760",
    "end": "1161919"
  },
  {
    "text": "push it to the docker hub after that the",
    "start": "1161919",
    "end": "1165600"
  },
  {
    "text": "third task will run which will update",
    "start": "1165600",
    "end": "1167679"
  },
  {
    "text": "the docker tag in the canadian service",
    "start": "1167679",
    "end": "1169600"
  },
  {
    "text": "yaml file",
    "start": "1169600",
    "end": "1171200"
  },
  {
    "text": "so finally all the tasks has been",
    "start": "1171200",
    "end": "1173280"
  },
  {
    "text": "completed now let's go to the docker hub",
    "start": "1173280",
    "end": "1176080"
  },
  {
    "text": "here i can see that a new container has",
    "start": "1176080",
    "end": "1178720"
  },
  {
    "text": "been pushed a few seconds ago",
    "start": "1178720",
    "end": "1181120"
  },
  {
    "text": "now let me go to the github's config",
    "start": "1181120",
    "end": "1183520"
  },
  {
    "text": "repository here also i can see a code",
    "start": "1183520",
    "end": "1186480"
  },
  {
    "text": "change or a code commit has been done 28",
    "start": "1186480",
    "end": "1188880"
  },
  {
    "text": "seconds ago so if i click the comments",
    "start": "1188880",
    "end": "1191840"
  },
  {
    "text": "and see what is the change that has been",
    "start": "1191840",
    "end": "1193760"
  },
  {
    "text": "done here i'll see the docker container",
    "start": "1193760",
    "end": "1197120"
  },
  {
    "text": "tag has been updated now this tag is",
    "start": "1197120",
    "end": "1200000"
  },
  {
    "text": "exactly the same tag that has been",
    "start": "1200000",
    "end": "1202640"
  },
  {
    "text": "updated here",
    "start": "1202640",
    "end": "1204080"
  },
  {
    "text": "so now i can understand that the",
    "start": "1204080",
    "end": "1206240"
  },
  {
    "text": "cognitive service eml file has been",
    "start": "1206240",
    "end": "1208400"
  },
  {
    "text": "updated with the latest docker tag",
    "start": "1208400",
    "end": "1210480"
  },
  {
    "text": "automatically by the tecton pipelines",
    "start": "1210480",
    "end": "1213520"
  },
  {
    "text": "so this completes the three tasks of the",
    "start": "1213520",
    "end": "1215520"
  },
  {
    "text": "tecton pipelines",
    "start": "1215520",
    "end": "1217280"
  },
  {
    "text": "so finally if i head back to the argo cd",
    "start": "1217280",
    "end": "1220080"
  },
  {
    "text": "portal i can see the sync status is okay",
    "start": "1220080",
    "end": "1223600"
  },
  {
    "text": "and also i can see it has succeeded a",
    "start": "1223600",
    "end": "1226080"
  },
  {
    "text": "few seconds ago and also if i compare",
    "start": "1226080",
    "end": "1228720"
  },
  {
    "text": "the head commit id that is c0cc",
    "start": "1228720",
    "end": "1232400"
  },
  {
    "text": "with the commit id present here in the",
    "start": "1232400",
    "end": "1235039"
  },
  {
    "text": "repository that is also c0cc that means",
    "start": "1235039",
    "end": "1238640"
  },
  {
    "text": "argo cd had understood a new comment has",
    "start": "1238640",
    "end": "1241280"
  },
  {
    "text": "been done in the config repository it",
    "start": "1241280",
    "end": "1243440"
  },
  {
    "text": "had pulled the new change and also",
    "start": "1243440",
    "end": "1245840"
  },
  {
    "text": "applied it into the community's cluster",
    "start": "1245840",
    "end": "1248240"
  },
  {
    "text": "so now if i head back to the original",
    "start": "1248240",
    "end": "1250640"
  },
  {
    "text": "website and if i click the refresh",
    "start": "1250640",
    "end": "1252799"
  },
  {
    "text": "button",
    "start": "1252799",
    "end": "1253679"
  },
  {
    "text": "i can see it has changed to hello kcd",
    "start": "1253679",
    "end": "1256559"
  },
  {
    "text": "channel",
    "start": "1256559",
    "end": "1257600"
  },
  {
    "text": "so by this demonstration we can see",
    "start": "1257600",
    "end": "1260320"
  },
  {
    "text": "whenever a developer will change the",
    "start": "1260320",
    "end": "1262640"
  },
  {
    "text": "code base in the application called",
    "start": "1262640",
    "end": "1264320"
  },
  {
    "text": "repository automatically the tickton",
    "start": "1264320",
    "end": "1266799"
  },
  {
    "text": "pipelines will run which will create and",
    "start": "1266799",
    "end": "1269600"
  },
  {
    "text": "build the container and push it to",
    "start": "1269600",
    "end": "1271280"
  },
  {
    "text": "docker hub then the cognitive service ml",
    "start": "1271280",
    "end": "1274480"
  },
  {
    "text": "file will be updated with the latest",
    "start": "1274480",
    "end": "1276320"
  },
  {
    "text": "docker tag and finally we will be able",
    "start": "1276320",
    "end": "1279039"
  },
  {
    "text": "to see the updated information on the",
    "start": "1279039",
    "end": "1281520"
  },
  {
    "text": "website url",
    "start": "1281520",
    "end": "1283760"
  },
  {
    "start": "1283000",
    "end": "1322000"
  },
  {
    "text": "so with that we have come to the end to",
    "start": "1283760",
    "end": "1285600"
  },
  {
    "text": "the presentation you can find the",
    "start": "1285600",
    "end": "1287760"
  },
  {
    "text": "application code repository as well as a",
    "start": "1287760",
    "end": "1289919"
  },
  {
    "text": "github configuration repository with the",
    "start": "1289919",
    "end": "1292000"
  },
  {
    "text": "following links apart from that i've",
    "start": "1292000",
    "end": "1294159"
  },
  {
    "text": "also listed down the documentations of",
    "start": "1294159",
    "end": "1296480"
  },
  {
    "text": "the projects we have used if you have",
    "start": "1296480",
    "end": "1298799"
  },
  {
    "text": "any queries or suggestions you can reach",
    "start": "1298799",
    "end": "1300880"
  },
  {
    "text": "out to me on twitter linkedin or on cncf",
    "start": "1300880",
    "end": "1303760"
  },
  {
    "text": "slack you can also scan this qr code to",
    "start": "1303760",
    "end": "1306559"
  },
  {
    "text": "get all my social accounts",
    "start": "1306559",
    "end": "1308880"
  },
  {
    "text": "apart from that i am also going to write",
    "start": "1308880",
    "end": "1310799"
  },
  {
    "text": "a written walkthrough of the entire",
    "start": "1310799",
    "end": "1312640"
  },
  {
    "text": "demonstration so for that keep you to my",
    "start": "1312640",
    "end": "1315440"
  },
  {
    "text": "medium page",
    "start": "1315440",
    "end": "1316799"
  },
  {
    "text": "so i hope you have loved this",
    "start": "1316799",
    "end": "1318080"
  },
  {
    "text": "presentation thank you all for joining",
    "start": "1318080",
    "end": "1320480"
  },
  {
    "text": "in",
    "start": "1320480",
    "end": "1323480"
  }
]