[
  {
    "text": "okay so as a pus user have you ever been",
    "start": "1400",
    "end": "5279"
  },
  {
    "text": "wondering about how to make the world",
    "start": "5279",
    "end": "8840"
  },
  {
    "text": "the single point of failure of your",
    "start": "8840",
    "end": "11679"
  },
  {
    "text": "infrastructure so whether it's private",
    "start": "11679",
    "end": "14240"
  },
  {
    "text": "public hybrid multicloud you're probably",
    "start": "14240",
    "end": "17480"
  },
  {
    "text": "wondering which one to use and then how",
    "start": "17480",
    "end": "20279"
  },
  {
    "text": "can you mitigate the risk of vendor Lo",
    "start": "20279",
    "end": "23279"
  },
  {
    "text": "in so hi everyone I'm Gabriel bolini and",
    "start": "23279",
    "end": "27439"
  },
  {
    "text": "today I'll try and help you and these",
    "start": "27439",
    "end": "30720"
  },
  {
    "text": "questions by sharing with you the",
    "start": "30720",
    "end": "33160"
  },
  {
    "text": "unparalled range of",
    "start": "33160",
    "end": "35239"
  },
  {
    "text": "possibilities and freedom that the open",
    "start": "35239",
    "end": "38640"
  },
  {
    "text": "source Trio made of kubernetes pogress",
    "start": "38640",
    "end": "42160"
  },
  {
    "text": "and Cloud native PG",
    "start": "42160",
    "end": "45039"
  },
  {
    "text": "offer so before we dive in allow me to",
    "start": "45039",
    "end": "47760"
  },
  {
    "text": "introduce myself I'm a seasoned open",
    "start": "47760",
    "end": "50719"
  },
  {
    "text": "source programmer and former",
    "start": "50719",
    "end": "53440"
  },
  {
    "text": "entrepreneur and I'm deeply passionate",
    "start": "53440",
    "end": "55800"
  },
  {
    "text": "about databases and data warehousing my",
    "start": "55800",
    "end": "58760"
  },
  {
    "text": "journey with pgus uh started in the",
    "start": "58760",
    "end": "61760"
  },
  {
    "text": "early",
    "start": "61760",
    "end": "62840"
  },
  {
    "text": "2000 and now I'm I'm a vice president of",
    "start": "62840",
    "end": "66119"
  },
  {
    "text": "cloud native at EDB one of the major",
    "start": "66119",
    "end": "68560"
  },
  {
    "text": "contributors of the open source Posas",
    "start": "68560",
    "end": "71119"
  },
  {
    "text": "project as D on kubernetes admin",
    "start": "71119",
    "end": "74200"
  },
  {
    "text": "Ambassador so I'm really happy to be",
    "start": "74200",
    "end": "76119"
  },
  {
    "text": "here today and I'm proud to advocate for",
    "start": "76119",
    "end": "79360"
  },
  {
    "text": "the seamless integration of stateful",
    "start": "79360",
    "end": "81439"
  },
  {
    "text": "workloads in",
    "start": "81439",
    "end": "83159"
  },
  {
    "text": "kubernetes my mission is to spread the",
    "start": "83159",
    "end": "85799"
  },
  {
    "text": "message that running Posas in kubernetes",
    "start": "85799",
    "end": "88880"
  },
  {
    "text": "is not only effici efficient but often",
    "start": "88880",
    "end": "91520"
  },
  {
    "text": "Superior to traditional VMS or bare",
    "start": "91520",
    "end": "94320"
  },
  {
    "text": "metal setups and then I'm all about lean",
    "start": "94320",
    "end": "98240"
  },
  {
    "text": "and devops so I've been practicing these",
    "start": "98240",
    "end": "101439"
  },
  {
    "text": "two disciplines for many many years and",
    "start": "101439",
    "end": "104320"
  },
  {
    "text": "they're actually the reason why I'm into",
    "start": "104320",
    "end": "107479"
  },
  {
    "text": "kubernetes and who knows there might be",
    "start": "107479",
    "end": "109600"
  },
  {
    "text": "the reason uh that might to to go away",
    "start": "109600",
    "end": "113280"
  },
  {
    "text": "from kubernetes one day and then I'm one",
    "start": "113280",
    "end": "116640"
  },
  {
    "text": "of the people behind two open source uh",
    "start": "116640",
    "end": "119520"
  },
  {
    "text": "project",
    "start": "119520",
    "end": "120759"
  },
  {
    "text": "uh in the pogus ecosystem one is Barman",
    "start": "120759",
    "end": "123960"
  },
  {
    "text": "which is a popular open source project",
    "start": "123960",
    "end": "126719"
  },
  {
    "text": "and the other one is cloud native PG the",
    "start": "126719",
    "end": "129479"
  },
  {
    "text": "topic for",
    "start": "129479",
    "end": "131080"
  },
  {
    "text": "today if you want to talk with me I'm",
    "start": "131080",
    "end": "134280"
  },
  {
    "text": "I'm available uh through until Friday",
    "start": "134280",
    "end": "137640"
  },
  {
    "text": "evening so we've got a booth uh come and",
    "start": "137640",
    "end": "140800"
  },
  {
    "text": "join me and also the other developers of",
    "start": "140800",
    "end": "144040"
  },
  {
    "text": "CLG if you have questions and I'm also",
    "start": "144040",
    "end": "146959"
  },
  {
    "text": "speaking uh about vertical scalability",
    "start": "146959",
    "end": "149640"
  },
  {
    "text": "of pus databases in kubernetes with Gary",
    "start": "149640",
    "end": "152480"
  },
  {
    "text": "Singh from Google Cloud uh Thursday",
    "start": "152480",
    "end": "156920"
  },
  {
    "text": "afternoon so today agenda includes",
    "start": "156920",
    "end": "160000"
  },
  {
    "text": "exploring the potential of cloud native",
    "start": "160000",
    "end": "161959"
  },
  {
    "text": "PG and kubernetes when managing POS High",
    "start": "161959",
    "end": "166120"
  },
  {
    "text": "availability and disaster",
    "start": "166120",
    "end": "168640"
  },
  {
    "text": "recovery and then we'll delve into",
    "start": "168640",
    "end": "171000"
  },
  {
    "text": "recommended architectures uh and",
    "start": "171000",
    "end": "173400"
  },
  {
    "text": "strategy followed by the",
    "start": "173400",
    "end": "175680"
  },
  {
    "text": "conclusions uh of this",
    "start": "175680",
    "end": "178360"
  },
  {
    "text": "presentation so before before we begin I",
    "start": "178360",
    "end": "181120"
  },
  {
    "text": "don't want to waste too much time but",
    "start": "181120",
    "end": "183799"
  },
  {
    "text": "it's just remind I think everyone knows",
    "start": "183799",
    "end": "185920"
  },
  {
    "text": "what pgus is pogus was also voted",
    "start": "185920",
    "end": "189040"
  },
  {
    "text": "database of the Year very recently",
    "start": "189040",
    "end": "191599"
  },
  {
    "text": "despite its age it keeps improving and",
    "start": "191599",
    "end": "194959"
  },
  {
    "text": "it keeps renovating itself and PG Vector",
    "start": "194959",
    "end": "197760"
  },
  {
    "text": "for example or other",
    "start": "197760",
    "end": "199920"
  },
  {
    "text": "extensions uh around uh vectorial",
    "start": "199920",
    "end": "203360"
  },
  {
    "text": "databases are one of the areas that are",
    "start": "203360",
    "end": "205799"
  },
  {
    "text": "growing more and more in in pus these",
    "start": "205799",
    "end": "208760"
  },
  {
    "text": "days",
    "start": "208760",
    "end": "210560"
  },
  {
    "text": "if you want to know more I'm suggesting",
    "start": "210560",
    "end": "213200"
  },
  {
    "text": "now two blog articles this is about the",
    "start": "213200",
    "end": "216439"
  },
  {
    "text": "microservice database pattern if you're",
    "start": "216439",
    "end": "219239"
  },
  {
    "text": "interested it also explains why and all",
    "start": "219239",
    "end": "222599"
  },
  {
    "text": "the journey we did that led us",
    "start": "222599",
    "end": "225680"
  },
  {
    "text": "here uh with this project and the other",
    "start": "225680",
    "end": "228920"
  },
  {
    "text": "one is about the recommended",
    "start": "228920",
    "end": "231000"
  },
  {
    "text": "architectures for pogus in kubernetes",
    "start": "231000",
    "end": "233799"
  },
  {
    "text": "it's a Blog that I wrote for the",
    "start": "233799",
    "end": "236159"
  },
  {
    "text": "cncf uh",
    "start": "236159",
    "end": "238360"
  },
  {
    "text": "website so let's start with pogress and",
    "start": "238360",
    "end": "242159"
  },
  {
    "text": "high",
    "start": "242159",
    "end": "243640"
  },
  {
    "text": "availability so a cloud native PG is",
    "start": "243640",
    "end": "247280"
  },
  {
    "text": "basically a level five kubernetes",
    "start": "247280",
    "end": "250200"
  },
  {
    "text": "operator that seamlessly manages pogress",
    "start": "250200",
    "end": "254120"
  },
  {
    "text": "uh clusters for high availability",
    "start": "254120",
    "end": "256959"
  },
  {
    "text": "primarily throughout the entire uh",
    "start": "256959",
    "end": "259759"
  },
  {
    "text": "operational life cycle from day Zero to",
    "start": "259759",
    "end": "262880"
  },
  {
    "text": "day two it's production ready and it's",
    "start": "262880",
    "end": "266840"
  },
  {
    "text": "widely embraced by top tier database as",
    "start": "266840",
    "end": "269880"
  },
  {
    "text": "a service solutions like uh big animal",
    "start": "269880",
    "end": "274000"
  },
  {
    "text": "from MB IBM Cloud pack uh Google cloud",
    "start": "274000",
    "end": "277800"
  },
  {
    "text": "and",
    "start": "277800",
    "end": "278960"
  },
  {
    "text": "Tempo um as an open source project um",
    "start": "278960",
    "end": "283560"
  },
  {
    "text": "it's available under under the the",
    "start": "283560",
    "end": "286120"
  },
  {
    "text": "Apachi",
    "start": "286120",
    "end": "287080"
  },
  {
    "text": "license and uh um it was originated in",
    "start": "287080",
    "end": "292520"
  },
  {
    "text": "2019 by my team when I was part of",
    "start": "292520",
    "end": "295160"
  },
  {
    "text": "second quadrant which was later acquired",
    "start": "295160",
    "end": "297280"
  },
  {
    "text": "by DB and uh Cloud native PG made a",
    "start": "297280",
    "end": "301520"
  },
  {
    "text": "significant leap in",
    "start": "301520",
    "end": "303440"
  },
  {
    "text": "2022 in May before cubon Valencia when",
    "start": "303440",
    "end": "308000"
  },
  {
    "text": "EDB contributed uh the project to an",
    "start": "308000",
    "end": "311080"
  },
  {
    "text": "open source and vendor neutral community",
    "start": "311080",
    "end": "314680"
  },
  {
    "text": "that is openly governed the clown native",
    "start": "314680",
    "end": "316639"
  },
  {
    "text": "PG community that you are more than",
    "start": "316639",
    "end": "319560"
  },
  {
    "text": "welcome to join and uh Cloud native PG",
    "start": "319560",
    "end": "322880"
  },
  {
    "text": "was acknowledged the most uh popular",
    "start": "322880",
    "end": "325720"
  },
  {
    "text": "operator for pgus in 2023 according to",
    "start": "325720",
    "end": "328919"
  },
  {
    "text": "the to a time scale",
    "start": "328919",
    "end": "331360"
  },
  {
    "text": "survey and it's rap rapidly gaining",
    "start": "331360",
    "end": "334639"
  },
  {
    "text": "traction with over 3,000 stars in less",
    "start": "334639",
    "end": "338000"
  },
  {
    "text": "than two years in",
    "start": "338000",
    "end": "339400"
  },
  {
    "text": "GitHub anyway given our time constraints",
    "start": "339400",
    "end": "342600"
  },
  {
    "text": "uh I'll refrain from covering basic",
    "start": "342600",
    "end": "344639"
  },
  {
    "text": "instructions and commands today and for",
    "start": "344639",
    "end": "347440"
  },
  {
    "text": "deeper insights please find the",
    "start": "347440",
    "end": "350280"
  },
  {
    "text": "documentation and all the information",
    "start": "350280",
    "end": "352120"
  },
  {
    "text": "available from the website and again if",
    "start": "352120",
    "end": "355160"
  },
  {
    "text": "you want you know stop me I think it's",
    "start": "355160",
    "end": "357520"
  },
  {
    "text": "more important we use this 20 some",
    "start": "357520",
    "end": "360560"
  },
  {
    "text": "minutes to talk to trigger questions and",
    "start": "360560",
    "end": "365199"
  },
  {
    "text": "to talk about possibilities okay so we",
    "start": "365199",
    "end": "368599"
  },
  {
    "text": "will talk about building blocks that",
    "start": "368599",
    "end": "371000"
  },
  {
    "text": "will uh give you unprecedented in my",
    "start": "371000",
    "end": "373240"
  },
  {
    "text": "opinion possibilities to run",
    "start": "373240",
    "end": "375800"
  },
  {
    "text": "Posas so I will briefly mention these",
    "start": "375800",
    "end": "378759"
  },
  {
    "text": "four pillars they actually uh been",
    "start": "378759",
    "end": "381360"
  },
  {
    "text": "defined by Patrick mcfadin and Jeff",
    "start": "381360",
    "end": "384360"
  },
  {
    "text": "Carpenter in their book about uh Cloud",
    "start": "384360",
    "end": "387000"
  },
  {
    "text": "native",
    "start": "387000",
    "end": "387880"
  },
  {
    "text": "databases so uh",
    "start": "387880",
    "end": "390800"
  },
  {
    "text": "native PG leverages the kubernetes API",
    "start": "390800",
    "end": "393720"
  },
  {
    "text": "so we kind of extend the kubernetes",
    "start": "393720",
    "end": "396880"
  },
  {
    "text": "controller teaching how to manage a",
    "start": "396880",
    "end": "399400"
  },
  {
    "text": "postas",
    "start": "399400",
    "end": "401000"
  },
  {
    "text": "clust uh through the operator pattern",
    "start": "401000",
    "end": "404039"
  },
  {
    "text": "okay so then the second one is",
    "start": "404039",
    "end": "405599"
  },
  {
    "text": "declarative",
    "start": "405599",
    "end": "407440"
  },
  {
    "text": "configuration that through through it we",
    "start": "407440",
    "end": "409759"
  },
  {
    "text": "can deploy scale and maintain databases",
    "start": "409759",
    "end": "413240"
  },
  {
    "text": "that sell fill and uh also Implement",
    "start": "413240",
    "end": "416560"
  },
  {
    "text": "infrastructure as code",
    "start": "416560",
    "end": "418520"
  },
  {
    "text": "practices",
    "start": "418520",
    "end": "420039"
  },
  {
    "text": "third one is about observability we have",
    "start": "420039",
    "end": "422919"
  },
  {
    "text": "a native Prometheus exporter we log to",
    "start": "422919",
    "end": "425639"
  },
  {
    "text": "standard output in Jon nativ Le so you",
    "start": "425639",
    "end": "428120"
  },
  {
    "text": "can pretty much integrate it with",
    "start": "428120",
    "end": "429919"
  },
  {
    "text": "everything we have grafana dashboard and",
    "start": "429919",
    "end": "432800"
  },
  {
    "text": "so on finally uh the security by default",
    "start": "432800",
    "end": "437800"
  },
  {
    "text": "Paradigm uh again read the the article",
    "start": "437800",
    "end": "441120"
  },
  {
    "text": "about the microservice database in which",
    "start": "441120",
    "end": "443199"
  },
  {
    "text": "I explain this kind of security by",
    "start": "443199",
    "end": "445800"
  },
  {
    "text": "default concept where the database is",
    "start": "445800",
    "end": "448599"
  },
  {
    "text": "owned by the application developer not",
    "start": "448599",
    "end": "450879"
  },
  {
    "text": "the administrators so developers own the",
    "start": "450879",
    "end": "453520"
  },
  {
    "text": "database and they can put it in their",
    "start": "453520",
    "end": "456680"
  },
  {
    "text": "pipelines and then you know with",
    "start": "456680",
    "end": "458560"
  },
  {
    "text": "security by default we start from actual",
    "start": "458560",
    "end": "461000"
  },
  {
    "text": "uh code",
    "start": "461000",
    "end": "462199"
  },
  {
    "text": "writing uh then uh we also uh how how we",
    "start": "462199",
    "end": "466639"
  },
  {
    "text": "build the containers uh how we scan the",
    "start": "466639",
    "end": "469599"
  },
  {
    "text": "images and then also in the container",
    "start": "469599",
    "end": "472560"
  },
  {
    "text": "itself with Posas measures and also",
    "start": "472560",
    "end": "475199"
  },
  {
    "text": "kubernetes",
    "start": "475199",
    "end": "476560"
  },
  {
    "text": "measures for example we have mtls by",
    "start": "476560",
    "end": "479599"
  },
  {
    "text": "fault so we",
    "start": "479599",
    "end": "481919"
  },
  {
    "text": "we and we actually advocate for um uh",
    "start": "481919",
    "end": "488440"
  },
  {
    "text": "certificate based authentication okay",
    "start": "488440",
    "end": "491919"
  },
  {
    "text": "everything I'll show you today is",
    "start": "491919",
    "end": "493720"
  },
  {
    "text": "achieved declaratively unless I say that",
    "start": "493720",
    "end": "496199"
  },
  {
    "text": "there's only one thing that at the",
    "start": "496199",
    "end": "497840"
  },
  {
    "text": "moment needs to do needs to be done",
    "start": "497840",
    "end": "500400"
  },
  {
    "text": "manually and we'll see",
    "start": "500400",
    "end": "502120"
  },
  {
    "text": "it this is how we Implement a kubernetes",
    "start": "502120",
    "end": "505879"
  },
  {
    "text": "a Posas cluster in kubernetes with clown",
    "start": "505879",
    "end": "508440"
  },
  {
    "text": "PG I think the Simplicity it it what",
    "start": "508440",
    "end": "512518"
  },
  {
    "text": "strikes out here uh this pretty much",
    "start": "512519",
    "end": "516479"
  },
  {
    "text": "highlights the declar the convention of",
    "start": "516479",
    "end": "519039"
  },
  {
    "text": "a configuration Paradigm that uh we",
    "start": "519039",
    "end": "522640"
  },
  {
    "text": "Implement with our declarative",
    "start": "522640",
    "end": "524240"
  },
  {
    "text": "configuration approach and so you don't",
    "start": "524240",
    "end": "527200"
  },
  {
    "text": "have to specify all the parameters but",
    "start": "527200",
    "end": "529519"
  },
  {
    "text": "you can actually modify all of them",
    "start": "529519",
    "end": "532000"
  },
  {
    "text": "because we make opinioned decisions",
    "start": "532000",
    "end": "534200"
  },
  {
    "text": "about the",
    "start": "534200",
    "end": "535680"
  },
  {
    "text": "defaults so um for example in this EX in",
    "start": "535680",
    "end": "539560"
  },
  {
    "text": "this uh yaml file here we request",
    "start": "539560",
    "end": "543040"
  },
  {
    "text": "clpg to uh create one primary and two",
    "start": "543040",
    "end": "546640"
  },
  {
    "text": "replicas so three instances and one of",
    "start": "546640",
    "end": "549839"
  },
  {
    "text": "them to be synchronous this means that",
    "start": "549839",
    "end": "552360"
  },
  {
    "text": "every time the application starts a",
    "start": "552360",
    "end": "555000"
  },
  {
    "text": "commit a transaction and writes commit",
    "start": "555000",
    "end": "559079"
  },
  {
    "text": "uh the primary doesn't return to the",
    "start": "559079",
    "end": "560839"
  },
  {
    "text": "application until the commit is written",
    "start": "560839",
    "end": "563560"
  },
  {
    "text": "on disk on at least another another",
    "start": "563560",
    "end": "566519"
  },
  {
    "text": "standby we can also change these and",
    "start": "566519",
    "end": "569399"
  },
  {
    "text": "show that not only that it's written but",
    "start": "569399",
    "end": "571680"
  },
  {
    "text": "it's also replayed on the standby so",
    "start": "571680",
    "end": "575240"
  },
  {
    "text": "that we can pretty much perform a readon",
    "start": "575240",
    "end": "578440"
  },
  {
    "text": "query later and is consistent in the",
    "start": "578440",
    "end": "581560"
  },
  {
    "text": "entire cluster that means you slow down",
    "start": "581560",
    "end": "584480"
  },
  {
    "text": "the entire right process but you you",
    "start": "584480",
    "end": "588160"
  },
  {
    "text": "have pretty much less probability of",
    "start": "588160",
    "end": "590680"
  },
  {
    "text": "data loss and faster RTO anyway all of",
    "start": "590680",
    "end": "593800"
  },
  {
    "text": "this is configurable all of this is",
    "start": "593800",
    "end": "596600"
  },
  {
    "text": "pogress okay so um that's the beauty I",
    "start": "596600",
    "end": "601160"
  },
  {
    "text": "think of Open Source in general whether",
    "start": "601160",
    "end": "603200"
  },
  {
    "text": "it's kubernetes or pogus is that it's",
    "start": "603200",
    "end": "606000"
  },
  {
    "text": "all about you all about",
    "start": "606000",
    "end": "608760"
  },
  {
    "text": "us so this is what happens under the",
    "start": "608760",
    "end": "611240"
  },
  {
    "text": "hood so suppose you've got a kubernetes",
    "start": "611240",
    "end": "613120"
  },
  {
    "text": "cluster with three availability zones",
    "start": "613120",
    "end": "616079"
  },
  {
    "text": "and our work in nodes ah I forgot to say",
    "start": "616079",
    "end": "619040"
  },
  {
    "text": "that here I",
    "start": "619040",
    "end": "620800"
  },
  {
    "text": "request to place the the instances on",
    "start": "620800",
    "end": "624600"
  },
  {
    "text": "nodes where we've got the workload",
    "start": "624600",
    "end": "627240"
  },
  {
    "text": "pogress label okay so basically here we",
    "start": "627240",
    "end": "631720"
  },
  {
    "text": "have three worker nodes with the pogus",
    "start": "631720",
    "end": "634839"
  },
  {
    "text": "label so the operator pretty much places",
    "start": "634839",
    "end": "638720"
  },
  {
    "text": "the instance is only on those workers we",
    "start": "638720",
    "end": "641440"
  },
  {
    "text": "can choose you know different Affinity",
    "start": "641440",
    "end": "643560"
  },
  {
    "text": "settings you know it's all",
    "start": "643560",
    "end": "646519"
  },
  {
    "text": "there then we start Rising the volumes",
    "start": "646519",
    "end": "649920"
  },
  {
    "text": "that's where we start the volumes are",
    "start": "649920",
    "end": "652200"
  },
  {
    "text": "the most important part in pogress we",
    "start": "652200",
    "end": "655000"
  },
  {
    "text": "start with the PG data which is the",
    "start": "655000",
    "end": "656959"
  },
  {
    "text": "pogress data where all the database",
    "start": "656959",
    "end": "660040"
  },
  {
    "text": "files are stored and the Wall Files are",
    "start": "660040",
    "end": "662480"
  },
  {
    "text": "the transaction",
    "start": "662480",
    "end": "663880"
  },
  {
    "text": "files so that's how we we achieve data",
    "start": "663880",
    "end": "667279"
  },
  {
    "text": "durability with",
    "start": "667279",
    "end": "668720"
  },
  {
    "text": "pgus then the primary started and the",
    "start": "668720",
    "end": "672240"
  },
  {
    "text": "operator creates a read write service",
    "start": "672240",
    "end": "674639"
  },
  {
    "text": "automatically so that your applications",
    "start": "674639",
    "end": "677079"
  },
  {
    "text": "or you know your AI work CLS can connect",
    "start": "677079",
    "end": "680160"
  },
  {
    "text": "directly to",
    "start": "680160",
    "end": "682000"
  },
  {
    "text": "it then it automatically creates clones",
    "start": "682000",
    "end": "685240"
  },
  {
    "text": "the P the the primary and creates the",
    "start": "685240",
    "end": "687200"
  },
  {
    "text": "first replica which is sync",
    "start": "687200",
    "end": "689920"
  },
  {
    "text": "and the second",
    "start": "689920",
    "end": "691480"
  },
  {
    "text": "one all in streaming replication so we",
    "start": "691480",
    "end": "694320"
  },
  {
    "text": "don't use the storage replication we",
    "start": "694320",
    "end": "696839"
  },
  {
    "text": "just relying on pogress replication",
    "start": "696839",
    "end": "698800"
  },
  {
    "text": "which can be controlled at transaction",
    "start": "698800",
    "end": "701880"
  },
  {
    "text": "level and then we create the read only",
    "start": "701880",
    "end": "704800"
  },
  {
    "text": "service so if you want to to perform",
    "start": "704800",
    "end": "708320"
  },
  {
    "text": "read operations you can you can use the",
    "start": "708320",
    "end": "712160"
  },
  {
    "text": "standbys so let's see what happens in",
    "start": "712160",
    "end": "715680"
  },
  {
    "text": "case of",
    "start": "715680",
    "end": "716560"
  },
  {
    "text": "failover the whole for example the",
    "start": "716560",
    "end": "718720"
  },
  {
    "text": "worker",
    "start": "718720",
    "end": "720079"
  },
  {
    "text": "know where the primary is is you know as",
    "start": "720079",
    "end": "723399"
  },
  {
    "text": "a",
    "start": "723399",
    "end": "724160"
  },
  {
    "text": "failure kubernetes immediately detects",
    "start": "724160",
    "end": "726920"
  },
  {
    "text": "that the operator stops the r right",
    "start": "726920",
    "end": "729839"
  },
  {
    "text": "service so we've got a",
    "start": "729839",
    "end": "732079"
  },
  {
    "text": "downtime this operation is very fast",
    "start": "732079",
    "end": "735399"
  },
  {
    "text": "normally a few seconds you can try it",
    "start": "735399",
    "end": "737839"
  },
  {
    "text": "yourself and the re the service the the",
    "start": "737839",
    "end": "741639"
  },
  {
    "text": "stand the synchron standby is promoted",
    "start": "741639",
    "end": "743760"
  },
  {
    "text": "and the service is",
    "start": "743760",
    "end": "745519"
  },
  {
    "text": "updated and then when the worker node",
    "start": "745519",
    "end": "748560"
  },
  {
    "text": "comes back again our instance manager",
    "start": "748560",
    "end": "752040"
  },
  {
    "text": "actually stops that so that's how we",
    "start": "752040",
    "end": "754920"
  },
  {
    "text": "prevent uh split uh split brains from",
    "start": "754920",
    "end": "758160"
  },
  {
    "text": "happening and says you think you are the",
    "start": "758160",
    "end": "760880"
  },
  {
    "text": "primary but you're not so it demotes",
    "start": "760880",
    "end": "763839"
  },
  {
    "text": "itself and resynchronize it as a standby",
    "start": "763839",
    "end": "768279"
  },
  {
    "text": "and the service is",
    "start": "768279",
    "end": "771480"
  },
  {
    "text": "updated let's talk about backup and",
    "start": "771560",
    "end": "773880"
  },
  {
    "text": "recovery so by the way if you want to",
    "start": "773880",
    "end": "776760"
  },
  {
    "text": "hear the whole story that's my talk with",
    "start": "776760",
    "end": "779360"
  },
  {
    "text": "Michelle a from Google in which we we",
    "start": "779360",
    "end": "783560"
  },
  {
    "text": "cover disaster recovery of very large",
    "start": "783560",
    "end": "785760"
  },
  {
    "text": "databases with posis in",
    "start": "785760",
    "end": "788519"
  },
  {
    "text": "Chicago and we showed we basically",
    "start": "788519",
    "end": "790920"
  },
  {
    "text": "recovered a 4.5 terabyte database in in",
    "start": "790920",
    "end": "794360"
  },
  {
    "text": "2 minutes thanks to volume",
    "start": "794360",
    "end": "797639"
  },
  {
    "text": "snapshots there's the whole story but",
    "start": "797639",
    "end": "799959"
  },
  {
    "text": "briefly a continuous backup is achieved",
    "start": "799959",
    "end": "803399"
  },
  {
    "text": "uh in two ways with the wall archive so",
    "start": "803399",
    "end": "806560"
  },
  {
    "text": "we basically copy the Wall Files in in",
    "start": "806560",
    "end": "809199"
  },
  {
    "text": "another location at the moment we only",
    "start": "809199",
    "end": "811760"
  },
  {
    "text": "support object",
    "start": "811760",
    "end": "813440"
  },
  {
    "text": "stores and by default they are stored",
    "start": "813440",
    "end": "816839"
  },
  {
    "text": "every 5 minutes in the wall",
    "start": "816839",
    "end": "819240"
  },
  {
    "text": "archive okay so that means that your RPO",
    "start": "819240",
    "end": "822079"
  },
  {
    "text": "is maximum 5 minutes by default if",
    "start": "822079",
    "end": "826079"
  },
  {
    "text": "you've got backup in",
    "start": "826079",
    "end": "828560"
  },
  {
    "text": "place the other part are physical based",
    "start": "828560",
    "end": "831480"
  },
  {
    "text": "backups so you can take physical based",
    "start": "831480",
    "end": "834519"
  },
  {
    "text": "backups which is a pus",
    "start": "834519",
    "end": "836959"
  },
  {
    "text": "technology uh from either the prime or",
    "start": "836959",
    "end": "839600"
  },
  {
    "text": "or the standby you can choose this",
    "start": "839600",
    "end": "841399"
  },
  {
    "text": "target by default is the standby they",
    "start": "841399",
    "end": "844320"
  },
  {
    "text": "can be schedule or on demand and they",
    "start": "844320",
    "end": "847279"
  },
  {
    "text": "can be on object stores and they're only",
    "start": "847279",
    "end": "849880"
  },
  {
    "text": "hot so online backups or on kubernetes",
    "start": "849880",
    "end": "853120"
  },
  {
    "text": "volume snapshots and they can be both",
    "start": "853120",
    "end": "855320"
  },
  {
    "text": "hot or cold so meaning that they are",
    "start": "855320",
    "end": "859000"
  },
  {
    "text": "consistent and they don't require Wall",
    "start": "859000",
    "end": "861480"
  },
  {
    "text": "Files to be",
    "start": "861480",
    "end": "863240"
  },
  {
    "text": "restored and you can exploit the storage",
    "start": "863240",
    "end": "866880"
  },
  {
    "text": "class capabilities in terms of transpar",
    "start": "866880",
    "end": "869600"
  },
  {
    "text": "uh uh incremental and differential",
    "start": "869600",
    "end": "872199"
  },
  {
    "text": "backup we are also working on an",
    "start": "872199",
    "end": "874720"
  },
  {
    "text": "interface through which you can pretty",
    "start": "874720",
    "end": "876800"
  },
  {
    "text": "much write your own backup uh scripts",
    "start": "876800",
    "end": "880279"
  },
  {
    "text": "backup",
    "start": "880279",
    "end": "881360"
  },
  {
    "text": "tools and extend it this is how",
    "start": "881360",
    "end": "885079"
  },
  {
    "text": "continuous backup Works you've got a",
    "start": "885079",
    "end": "886959"
  },
  {
    "text": "cluster so it's done at cluster level",
    "start": "886959",
    "end": "889079"
  },
  {
    "text": "not at instance level we copy the wall",
    "start": "889079",
    "end": "892360"
  },
  {
    "text": "the Wall Files in the wall archive and",
    "start": "892360",
    "end": "894839"
  },
  {
    "text": "then we take base backups to build a a",
    "start": "894839",
    "end": "897639"
  },
  {
    "text": "catalog of backups",
    "start": "897639",
    "end": "899959"
  },
  {
    "text": "this is how we have continuous",
    "start": "899959",
    "end": "902279"
  },
  {
    "text": "backup recovery is essentially a",
    "start": "902279",
    "end": "904639"
  },
  {
    "text": "bootstrap method so we copy the physical",
    "start": "904639",
    "end": "907680"
  },
  {
    "text": "base back up somewhere and then we start",
    "start": "907680",
    "end": "910360"
  },
  {
    "text": "reapplying the redo logs from the wall",
    "start": "910360",
    "end": "913240"
  },
  {
    "text": "files and until we reach a target the",
    "start": "913240",
    "end": "916440"
  },
  {
    "text": "target can be the full recovery so until",
    "start": "916440",
    "end": "918720"
  },
  {
    "text": "the",
    "start": "918720",
    "end": "919399"
  },
  {
    "text": "end and if we do that that's actually",
    "start": "919399",
    "end": "922639"
  },
  {
    "text": "that's also the foundation of uh",
    "start": "922639",
    "end": "925160"
  },
  {
    "text": "continuous replication continuous",
    "start": "925160",
    "end": "927639"
  },
  {
    "text": "recovery so you can create what we call",
    "start": "927639",
    "end": "930440"
  },
  {
    "text": "replica clusters that could be pretty",
    "start": "930440",
    "end": "933360"
  },
  {
    "text": "much aligned or even",
    "start": "933360",
    "end": "935600"
  },
  {
    "text": "delayed or if you select a Target you",
    "start": "935600",
    "end": "938600"
  },
  {
    "text": "can uh get point in time",
    "start": "938600",
    "end": "941600"
  },
  {
    "text": "recovery when the target is reached by",
    "start": "941600",
    "end": "944560"
  },
  {
    "text": "default pogus uh promotes",
    "start": "944560",
    "end": "947759"
  },
  {
    "text": "itself so it becomes another cluster",
    "start": "947759",
    "end": "950720"
  },
  {
    "text": "this cluster you can use it also for",
    "start": "950720",
    "end": "952399"
  },
  {
    "text": "reporting so for example every day you",
    "start": "952399",
    "end": "954279"
  },
  {
    "text": "can recreate a pogus cluster just for",
    "start": "954279",
    "end": "957560"
  },
  {
    "text": "development of report",
    "start": "957560",
    "end": "959639"
  },
  {
    "text": "and destroyed at the end of the",
    "start": "959639",
    "end": "963120"
  },
  {
    "text": "day on the same technology we build the",
    "start": "964040",
    "end": "966959"
  },
  {
    "text": "replica cluster the replica cluster is",
    "start": "966959",
    "end": "968920"
  },
  {
    "text": "primarily used for Dr but also for",
    "start": "968920",
    "end": "972000"
  },
  {
    "text": "recover for reporting and it's",
    "start": "972000",
    "end": "974480"
  },
  {
    "text": "essentially the same uh technology",
    "start": "974480",
    "end": "978639"
  },
  {
    "text": "instead of promoting the the the pogus",
    "start": "978639",
    "end": "981720"
  },
  {
    "text": "cluster we keep it in continuous",
    "start": "981720",
    "end": "984120"
  },
  {
    "text": "recovery and we can re perform readon",
    "start": "984120",
    "end": "987360"
  },
  {
    "text": "queries on those servers",
    "start": "987360",
    "end": "990000"
  },
  {
    "text": "so if think about that you've got this",
    "start": "990000",
    "end": "992279"
  },
  {
    "text": "replica cluster in another region is",
    "start": "992279",
    "end": "994199"
  },
  {
    "text": "continuously replicating and I can",
    "start": "994199",
    "end": "996880"
  },
  {
    "text": "promote it if",
    "start": "996880",
    "end": "999639"
  },
  {
    "text": "needed so let's let's so we've seen now",
    "start": "1000040",
    "end": "1003279"
  },
  {
    "text": "a single kubernetes cluster let's go",
    "start": "1003279",
    "end": "1005440"
  },
  {
    "text": "beyond the single kubernetes cluster",
    "start": "1005440",
    "end": "1008199"
  },
  {
    "text": "which is our single point of failure",
    "start": "1008199",
    "end": "1010720"
  },
  {
    "text": "we've got pgus with its backup we can",
    "start": "1010720",
    "end": "1014639"
  },
  {
    "text": "use in a different cluster simply the",
    "start": "1014639",
    "end": "1018120"
  },
  {
    "text": "Wall Files the wall archive so we think",
    "start": "1018120",
    "end": "1021120"
  },
  {
    "text": "about that we create a replica cluster",
    "start": "1021120",
    "end": "1023319"
  },
  {
    "text": "in another kubernetes cluster from a",
    "start": "1023319",
    "end": "1026438"
  },
  {
    "text": "backup and then we start replaying the",
    "start": "1026439",
    "end": "1028880"
  },
  {
    "text": "wall finds from the object store we",
    "start": "1028880",
    "end": "1030678"
  },
  {
    "text": "don't even need the connection between",
    "start": "1030679",
    "end": "1033280"
  },
  {
    "text": "the two servers just by using b files",
    "start": "1033280",
    "end": "1036959"
  },
  {
    "text": "it's pretty much lagging five minutes by",
    "start": "1036959",
    "end": "1040079"
  },
  {
    "text": "default without doing anything if you",
    "start": "1040079",
    "end": "1042720"
  },
  {
    "text": "want so the the other interesting thing",
    "start": "1042720",
    "end": "1045520"
  },
  {
    "text": "is that if you want you can set up the",
    "start": "1045520",
    "end": "1047760"
  },
  {
    "text": "backup in the other region",
    "start": "1047760",
    "end": "1050120"
  },
  {
    "text": "and you have two independent backups",
    "start": "1050120",
    "end": "1053080"
  },
  {
    "text": "architecturally uh in place and if you",
    "start": "1053080",
    "end": "1056400"
  },
  {
    "text": "want to reduce the RPO you create a",
    "start": "1056400",
    "end": "1059080"
  },
  {
    "text": "streaming replication connection between",
    "start": "1059080",
    "end": "1061919"
  },
  {
    "text": "the two",
    "start": "1061919",
    "end": "1064279"
  },
  {
    "text": "clusters so that's simple right so all",
    "start": "1064559",
    "end": "1067760"
  },
  {
    "text": "building blocks you build on top okay",
    "start": "1067760",
    "end": "1070720"
  },
  {
    "text": "you don't have to get there",
    "start": "1070720",
    "end": "1072880"
  },
  {
    "text": "immediately but you can get there",
    "start": "1072880",
    "end": "1076120"
  },
  {
    "text": "starting from this this is normally the",
    "start": "1076120",
    "end": "1078480"
  },
  {
    "text": "develop",
    "start": "1078480",
    "end": "1079480"
  },
  {
    "text": "cluster you can do it like you do in",
    "start": "1079480",
    "end": "1082520"
  },
  {
    "text": "production with three instances or you",
    "start": "1082520",
    "end": "1084200"
  },
  {
    "text": "can even use one single instance and",
    "start": "1084200",
    "end": "1087480"
  },
  {
    "text": "remember to disable po disruption",
    "start": "1087480",
    "end": "1089840"
  },
  {
    "text": "budgets otherwise the node where these",
    "start": "1089840",
    "end": "1093440"
  },
  {
    "text": "instance is placed will not be drained",
    "start": "1093440",
    "end": "1097039"
  },
  {
    "text": "okay and then if you want you can create",
    "start": "1097039",
    "end": "1100400"
  },
  {
    "text": "your continuous backup uh",
    "start": "1100400",
    "end": "1103760"
  },
  {
    "text": "infrastructure so this is how it looks",
    "start": "1103760",
    "end": "1106919"
  },
  {
    "text": "um a production clust",
    "start": "1106919",
    "end": "1110520"
  },
  {
    "text": "in a kubernetes cluster with at least",
    "start": "1110520",
    "end": "1112679"
  },
  {
    "text": "three availability Zone that gives you",
    "start": "1112679",
    "end": "1115760"
  },
  {
    "text": "very little RTO so in case of failure of",
    "start": "1115760",
    "end": "1118760"
  },
  {
    "text": "the primary in a few seconds you w",
    "start": "1118760",
    "end": "1121480"
  },
  {
    "text": "without doing",
    "start": "1121480",
    "end": "1123240"
  },
  {
    "text": "anything and then at the same time gives",
    "start": "1123240",
    "end": "1125679"
  },
  {
    "text": "you RPO 5 minutes which with the cloud",
    "start": "1125679",
    "end": "1128840"
  },
  {
    "text": "native PG interface we are aiming to",
    "start": "1128840",
    "end": "1131679"
  },
  {
    "text": "reduce to",
    "start": "1131679",
    "end": "1133360"
  },
  {
    "text": "zero so all you have to do you have the",
    "start": "1133360",
    "end": "1135679"
  },
  {
    "text": "wall",
    "start": "1135679",
    "end": "1136600"
  },
  {
    "text": "archive the wall archive can also be",
    "start": "1136600",
    "end": "1139039"
  },
  {
    "text": "used as a fallback in case the streaming",
    "start": "1139039",
    "end": "1141360"
  },
  {
    "text": "replication between the primary and the",
    "start": "1141360",
    "end": "1144120"
  },
  {
    "text": "standby goes down temporarily you have a",
    "start": "1144120",
    "end": "1147400"
  },
  {
    "text": "dual channel for res",
    "start": "1147400",
    "end": "1150640"
  },
  {
    "text": "resilience and then you build your uh",
    "start": "1150640",
    "end": "1153159"
  },
  {
    "text": "catalog of Base",
    "start": "1153159",
    "end": "1156120"
  },
  {
    "text": "backups so we've seen one single cluster",
    "start": "1157720",
    "end": "1161640"
  },
  {
    "text": "all good you don't have to do anything",
    "start": "1161640",
    "end": "1164960"
  },
  {
    "text": "kubernetes can do uh self feeling and ha",
    "start": "1164960",
    "end": "1169880"
  },
  {
    "text": "with clpg without you doing anything",
    "start": "1169880",
    "end": "1173320"
  },
  {
    "text": "except monitoring and you know receiving",
    "start": "1173320",
    "end": "1177480"
  },
  {
    "text": "alerts let's extend the the the",
    "start": "1177480",
    "end": "1180000"
  },
  {
    "text": "architecture on two kubernetes clusters",
    "start": "1180000",
    "end": "1183799"
  },
  {
    "text": "normally they're also we we can also",
    "start": "1183799",
    "end": "1186360"
  },
  {
    "text": "think about them in terms of",
    "start": "1186360",
    "end": "1189200"
  },
  {
    "text": "regions and",
    "start": "1189200",
    "end": "1191799"
  },
  {
    "text": "uh we have pretty much an identical",
    "start": "1191799",
    "end": "1194600"
  },
  {
    "text": "kubernetes cluster in another region",
    "start": "1194600",
    "end": "1198080"
  },
  {
    "text": "let's say",
    "start": "1198080",
    "end": "1199840"
  },
  {
    "text": "we use the base backup to create the PVC",
    "start": "1199840",
    "end": "1203320"
  },
  {
    "text": "and the wall archive to build what we",
    "start": "1203320",
    "end": "1205280"
  },
  {
    "text": "call Designated primary it's basically a",
    "start": "1205280",
    "end": "1208039"
  },
  {
    "text": "standby that is ready to be promoted in",
    "start": "1208039",
    "end": "1211320"
  },
  {
    "text": "case the first uh data center the first",
    "start": "1211320",
    "end": "1214480"
  },
  {
    "text": "kubernetes cluster goes",
    "start": "1214480",
    "end": "1216400"
  },
  {
    "text": "down then you create the wall local wall",
    "start": "1216400",
    "end": "1220919"
  },
  {
    "text": "archive and the catalog of backups so",
    "start": "1220919",
    "end": "1224240"
  },
  {
    "text": "you are already ready in case there's a",
    "start": "1224240",
    "end": "1227799"
  },
  {
    "text": "disaster to assume the role of primary",
    "start": "1227799",
    "end": "1231039"
  },
  {
    "text": "cluster",
    "start": "1231039",
    "end": "1233440"
  },
  {
    "text": "and then if you want you can even",
    "start": "1233440",
    "end": "1236080"
  },
  {
    "text": "immediately or later when it's promoted",
    "start": "1236080",
    "end": "1238280"
  },
  {
    "text": "create the replicas that's entirely up",
    "start": "1238280",
    "end": "1240440"
  },
  {
    "text": "to you and if you want to reduce the the",
    "start": "1240440",
    "end": "1243919"
  },
  {
    "text": "RPO you can set up the streaming",
    "start": "1243919",
    "end": "1248000"
  },
  {
    "text": "connection and this is the only manual",
    "start": "1248000",
    "end": "1251240"
  },
  {
    "text": "thing you need to do at the moment and",
    "start": "1251240",
    "end": "1254360"
  },
  {
    "text": "probably let's not say manual controlled",
    "start": "1254360",
    "end": "1257120"
  },
  {
    "text": "because what we are aiming to do is to",
    "start": "1257120",
    "end": "1258880"
  },
  {
    "text": "define a declarative way to perform this",
    "start": "1258880",
    "end": "1262159"
  },
  {
    "text": "operation across clusters",
    "start": "1262159",
    "end": "1265559"
  },
  {
    "text": "okay you have the whole region is",
    "start": "1265559",
    "end": "1269520"
  },
  {
    "text": "down so this is this should be treated",
    "start": "1269520",
    "end": "1272039"
  },
  {
    "text": "as a rare event okay but if that happens",
    "start": "1272039",
    "end": "1275240"
  },
  {
    "text": "all you have to do",
    "start": "1275240",
    "end": "1277000"
  },
  {
    "text": "so probably you have lost maximum five",
    "start": "1277000",
    "end": "1280159"
  },
  {
    "text": "minutes of data but we're talking about",
    "start": "1280159",
    "end": "1282360"
  },
  {
    "text": "in massive disaster and you can quickly",
    "start": "1282360",
    "end": "1287279"
  },
  {
    "text": "make that become the prime",
    "start": "1287279",
    "end": "1290520"
  },
  {
    "text": "okay you can even go beyond that you can",
    "start": "1291600",
    "end": "1294840"
  },
  {
    "text": "use cascading replication and go with",
    "start": "1294840",
    "end": "1297559"
  },
  {
    "text": "three four five regions it's really up",
    "start": "1297559",
    "end": "1299960"
  },
  {
    "text": "to you okay these are all building",
    "start": "1299960",
    "end": "1302919"
  },
  {
    "text": "blocks the only problem is when you have",
    "start": "1302919",
    "end": "1305279"
  },
  {
    "text": "a single availability Zone kubernetes",
    "start": "1305279",
    "end": "1308000"
  },
  {
    "text": "cluster which is very typical from what",
    "start": "1308000",
    "end": "1310880"
  },
  {
    "text": "I see in on premise setups where still",
    "start": "1310880",
    "end": "1313320"
  },
  {
    "text": "the lift and shift mindset is",
    "start": "1313320",
    "end": "1316279"
  },
  {
    "text": "prevalent so you mapping pretty pretty",
    "start": "1316279",
    "end": "1318760"
  },
  {
    "text": "much one data center with one kubernetes",
    "start": "1318760",
    "end": "1321440"
  },
  {
    "text": "cluster so all you have to do here is",
    "start": "1321440",
    "end": "1323919"
  },
  {
    "text": "spread the database across nodes and",
    "start": "1323919",
    "end": "1326400"
  },
  {
    "text": "storage so divide as much as you can but",
    "start": "1326400",
    "end": "1330080"
  },
  {
    "text": "still your data center is the single",
    "start": "1330080",
    "end": "1332600"
  },
  {
    "text": "point of failure you're missing out on",
    "start": "1332600",
    "end": "1335080"
  },
  {
    "text": "kubernetes a",
    "start": "1335080",
    "end": "1336559"
  },
  {
    "text": "lot and what that generates is the more",
    "start": "1336559",
    "end": "1340279"
  },
  {
    "text": "complex business pro continuity",
    "start": "1340279",
    "end": "1342480"
  },
  {
    "text": "procedures like we used to",
    "start": "1342480",
    "end": "1344240"
  },
  {
    "text": "do and you could stop doing them with",
    "start": "1344240",
    "end": "1346840"
  },
  {
    "text": "kubernetes if you had three availability",
    "start": "1346840",
    "end": "1349559"
  },
  {
    "text": "zones at least for pus you have to do",
    "start": "1349559",
    "end": "1352480"
  },
  {
    "text": "them and you have to do more of them uh",
    "start": "1352480",
    "end": "1356720"
  },
  {
    "text": "with the more applications you have for",
    "start": "1356720",
    "end": "1358360"
  },
  {
    "text": "each application you need to have",
    "start": "1358360",
    "end": "1360320"
  },
  {
    "text": "business continuity procedures that you",
    "start": "1360320",
    "end": "1362400"
  },
  {
    "text": "could avoid so my advice is if you have",
    "start": "1362400",
    "end": "1365880"
  },
  {
    "text": "two data centers try and push for a",
    "start": "1365880",
    "end": "1368039"
  },
  {
    "text": "stretch kubernetes cluster so at least",
    "start": "1368039",
    "end": "1370360"
  },
  {
    "text": "extend the kubernetes control plane over",
    "start": "1370360",
    "end": "1374279"
  },
  {
    "text": "three data centers",
    "start": "1374279",
    "end": "1376000"
  },
  {
    "text": "somehow and plan for the third dat",
    "start": "1376000",
    "end": "1379679"
  },
  {
    "text": "Center so this is the",
    "start": "1379679",
    "end": "1382480"
  },
  {
    "text": "end I want to thank all the community of",
    "start": "1382480",
    "end": "1386000"
  },
  {
    "text": "clpg starting you know from some of the",
    "start": "1386000",
    "end": "1388919"
  },
  {
    "text": "developers are here but really the",
    "start": "1388919",
    "end": "1391360"
  },
  {
    "text": "adopters and everyone that is",
    "start": "1391360",
    "end": "1394120"
  },
  {
    "text": "contributed to this uh growing",
    "start": "1394120",
    "end": "1397200"
  },
  {
    "text": "Community what we working on uh the",
    "start": "1397200",
    "end": "1400159"
  },
  {
    "text": "image catalog so for example there's",
    "start": "1400159",
    "end": "1402039"
  },
  {
    "text": "people that want to use time",
    "start": "1402039",
    "end": "1403840"
  },
  {
    "text": "scale uh with our operator or other",
    "start": "1403840",
    "end": "1407039"
  },
  {
    "text": "extensions you can write your own image",
    "start": "1407039",
    "end": "1409520"
  },
  {
    "text": "catalog and just point to that uh",
    "start": "1409520",
    "end": "1412880"
  },
  {
    "text": "without specifying the image name the",
    "start": "1412880",
    "end": "1415880"
  },
  {
    "text": "generic interface that I was talking",
    "start": "1415880",
    "end": "1418080"
  },
  {
    "text": "about",
    "start": "1418080",
    "end": "1419480"
  },
  {
    "text": "before will allow us to pretty much uh",
    "start": "1419480",
    "end": "1423279"
  },
  {
    "text": "simplify the work of the",
    "start": "1423279",
    "end": "1425240"
  },
  {
    "text": "operator uh through external",
    "start": "1425240",
    "end": "1427960"
  },
  {
    "text": "plugins so primarily wall manager backup",
    "start": "1427960",
    "end": "1431480"
  },
  {
    "text": "metrics and and",
    "start": "1431480",
    "end": "1433400"
  },
  {
    "text": "logging we want to control the switch",
    "start": "1433400",
    "end": "1437159"
  },
  {
    "text": "over across kubernetes clusters with the",
    "start": "1437159",
    "end": "1439520"
  },
  {
    "text": "replica cluster switch over we also want",
    "start": "1439520",
    "end": "1442000"
  },
  {
    "text": "to introduce synchronous replica",
    "start": "1442000",
    "end": "1443679"
  },
  {
    "text": "clusters for those that have two data",
    "start": "1443679",
    "end": "1446919"
  },
  {
    "text": "centers in the same city and two",
    "start": "1446919",
    "end": "1449760"
  },
  {
    "text": "kubernetes clusters the only way for",
    "start": "1449760",
    "end": "1451600"
  },
  {
    "text": "them to talk is through replica",
    "start": "1451600",
    "end": "1453840"
  },
  {
    "text": "clusters and we we can you know add the",
    "start": "1453840",
    "end": "1457240"
  },
  {
    "text": "synchronous one declarative management",
    "start": "1457240",
    "end": "1459840"
  },
  {
    "text": "of databases databases are the only",
    "start": "1459840",
    "end": "1462520"
  },
  {
    "text": "global object that that we are missing",
    "start": "1462520",
    "end": "1464640"
  },
  {
    "text": "with cloud npg and then logical",
    "start": "1464640",
    "end": "1467360"
  },
  {
    "text": "replication uh publication and",
    "start": "1467360",
    "end": "1470320"
  },
  {
    "text": "subscriptions by the way we have an",
    "start": "1470320",
    "end": "1473120"
  },
  {
    "text": "imperative way already to set up logical",
    "start": "1473120",
    "end": "1476440"
  },
  {
    "text": "replication Publications and",
    "start": "1476440",
    "end": "1478200"
  },
  {
    "text": "subscriptions and also update the",
    "start": "1478200",
    "end": "1480799"
  },
  {
    "text": "sequences we released it last",
    "start": "1480799",
    "end": "1483480"
  },
  {
    "text": "week so theoretically you can move",
    "start": "1483480",
    "end": "1485880"
  },
  {
    "text": "already from any poest 10 database in",
    "start": "1485880",
    "end": "1488840"
  },
  {
    "text": "the world into Cloud native PG following",
    "start": "1488840",
    "end": "1491799"
  },
  {
    "text": "three steps with a plug-in if you want",
    "start": "1491799",
    "end": "1494880"
  },
  {
    "text": "to talk you know we can talk more",
    "start": "1494880",
    "end": "1497279"
  },
  {
    "text": "foreign servers and also storage Autos",
    "start": "1497279",
    "end": "1499679"
  },
  {
    "text": "scaling with the we are working on",
    "start": "1499679",
    "end": "1503320"
  },
  {
    "text": "that so ultimately choose whatever works",
    "start": "1503320",
    "end": "1507440"
  },
  {
    "text": "for your organization so every",
    "start": "1507440",
    "end": "1509240"
  },
  {
    "text": "organization is unique don't believe to",
    "start": "1509240",
    "end": "1512039"
  },
  {
    "text": "to those that tell you that you know all",
    "start": "1512039",
    "end": "1514360"
  },
  {
    "text": "organizations are the same Define your",
    "start": "1514360",
    "end": "1517120"
  },
  {
    "text": "goals RTO RPO TPS and let you guide let",
    "start": "1517120",
    "end": "1521520"
  },
  {
    "text": "you be guided by",
    "start": "1521520",
    "end": "1523799"
  },
  {
    "text": "them and on Thursday I'll show you some",
    "start": "1523799",
    "end": "1527000"
  },
  {
    "text": "amazing results uh in terms of TPS that",
    "start": "1527000",
    "end": "1530520"
  },
  {
    "text": "you can achieve we're working with",
    "start": "1530520",
    "end": "1532480"
  },
  {
    "text": "storage companies to you know this new",
    "start": "1532480",
    "end": "1536600"
  },
  {
    "text": "frontier mitigate the risk of endroid",
    "start": "1536600",
    "end": "1538960"
  },
  {
    "text": "loin at all levels from the cloud down",
    "start": "1538960",
    "end": "1541440"
  },
  {
    "text": "to the you know uh infrastructure",
    "start": "1541440",
    "end": "1544520"
  },
  {
    "text": "level and you know set it on on",
    "start": "1544520",
    "end": "1548640"
  },
  {
    "text": "Prem private public hybrid multicloud",
    "start": "1548640",
    "end": "1552360"
  },
  {
    "text": "you can do pretty much everything with",
    "start": "1552360",
    "end": "1553919"
  },
  {
    "text": "vanilla kubernetes third party",
    "start": "1553919",
    "end": "1556520"
  },
  {
    "text": "kubernetes dist distributions bare metal",
    "start": "1556520",
    "end": "1560000"
  },
  {
    "text": "VM and choose the right storage for you",
    "start": "1560000",
    "end": "1564000"
  },
  {
    "text": "our uh advice is to go with share",
    "start": "1564000",
    "end": "1566640"
  },
  {
    "text": "nothing architectures and to take",
    "start": "1566640",
    "end": "1568880"
  },
  {
    "text": "advantage of nodes and availability",
    "start": "1568880",
    "end": "1571039"
  },
  {
    "text": "zones that as I said come from free with",
    "start": "1571039",
    "end": "1573960"
  },
  {
    "text": "with kubernetes so I hope that I gave",
    "start": "1573960",
    "end": "1577200"
  },
  {
    "text": "you an idea on how you can make the",
    "start": "1577200",
    "end": "1579760"
  },
  {
    "text": "world be the single point of failure for",
    "start": "1579760",
    "end": "1583080"
  },
  {
    "text": "your pogus datab basis thanks to",
    "start": "1583080",
    "end": "1585080"
  },
  {
    "text": "kubernetes I've been using pgus for many",
    "start": "1585080",
    "end": "1587760"
  },
  {
    "text": "years and I really believe that the best",
    "start": "1587760",
    "end": "1590120"
  },
  {
    "text": "way to run pgus is in",
    "start": "1590120",
    "end": "1592440"
  },
  {
    "text": "kubernetes",
    "start": "1592440",
    "end": "1594760"
  },
  {
    "text": "okay",
    "start": "1594760",
    "end": "1596559"
  },
  {
    "text": "finally this is my last slide you know",
    "start": "1596559",
    "end": "1600000"
  },
  {
    "text": "it's completely off topic this is a",
    "start": "1600000",
    "end": "1602720"
  },
  {
    "text": "great book and all I don't know if you",
    "start": "1602720",
    "end": "1605480"
  },
  {
    "text": "know this book anyone has who's read",
    "start": "1605480",
    "end": "1609200"
  },
  {
    "text": "this book from Jin Kim Stephen P",
    "start": "1609200",
    "end": "1613279"
  },
  {
    "text": "spear this book is",
    "start": "1613279",
    "end": "1615720"
  },
  {
    "text": "basically in my opinion",
    "start": "1615720",
    "end": "1618880"
  },
  {
    "text": "a tremendous opportunity for kubernetes",
    "start": "1618880",
    "end": "1621679"
  },
  {
    "text": "to shine as a way to move from danger",
    "start": "1621679",
    "end": "1624200"
  },
  {
    "text": "zone to winning Zone through slow",
    "start": "1624200",
    "end": "1626960"
  },
  {
    "text": "ification and",
    "start": "1626960",
    "end": "1629240"
  },
  {
    "text": "simplification okay so if you have time",
    "start": "1629240",
    "end": "1631880"
  },
  {
    "text": "I suggest to read that book and you know",
    "start": "1631880",
    "end": "1635399"
  },
  {
    "text": "come and meet me at Botho G30 and uh",
    "start": "1635399",
    "end": "1639600"
  },
  {
    "text": "around around here so I'm done thank",
    "start": "1639600",
    "end": "1645279"
  },
  {
    "text": "you",
    "start": "1645279",
    "end": "1648279"
  }
]