[
  {
    "start": "0",
    "end": "41000"
  },
  {
    "text": "all right cool so I'm gonna go ahead and get started thank you all for coming to my session about using a kubernetes",
    "start": "0",
    "end": "5279"
  },
  {
    "text": "operator to manage tendency in a b2b Sassa so on the Internet",
    "start": "5279",
    "end": "10830"
  },
  {
    "text": "most people call me Mar paya except if you're on Twitter because Mar piyo is already taken a mic our paya that's",
    "start": "10830",
    "end": "18960"
  },
  {
    "text": "relevant because there's a bunch of code snippets and my deck that you probably won't be able to read although this",
    "start": "18960",
    "end": "24840"
  },
  {
    "text": "screen is really large so maybe you will be able to read them but I tweeted out my deck earlier it's also on the sched",
    "start": "24840",
    "end": "31700"
  },
  {
    "text": "for my talk so you know don't worry about taking photos or anything you can",
    "start": "31700",
    "end": "38160"
  },
  {
    "text": "find all of that on the Internet so a little bit about me I'm the co-founder and CTO of an infrastructure",
    "start": "38160",
    "end": "43620"
  },
  {
    "start": "41000",
    "end": "41000"
  },
  {
    "text": "analytics startup called collide I used to work at Facebook Etsy ISEC partners a",
    "start": "43620",
    "end": "49710"
  },
  {
    "text": "few other security companies doing security infrastructure stuff I was also",
    "start": "49710",
    "end": "54719"
  },
  {
    "text": "on the kubernetes release team for 111 112 and 113 doing release notes stuff",
    "start": "54719",
    "end": "59930"
  },
  {
    "text": "and that's a that was awesome love the release team I also was the creator of",
    "start": "59930",
    "end": "65489"
  },
  {
    "text": "an open source tool called OS query when I worked at Facebook some of you may be into operating system monitoring may be",
    "start": "65489",
    "end": "71939"
  },
  {
    "text": "familiar with us crew I love go I really good developers I",
    "start": "71939",
    "end": "77880"
  },
  {
    "text": "like to say I've been writing go stands go one and I'm all about it and I played the bass and I loved skiing and climbing",
    "start": "77880",
    "end": "85470"
  },
  {
    "text": "and hiking and trailering and all that good stuff so that's all you need to know about me really about collide",
    "start": "85470",
    "end": "91520"
  },
  {
    "start": "90000",
    "end": "90000"
  },
  {
    "text": "collide is an infrastructure analytics company b2b we basically sell we have a",
    "start": "91520",
    "end": "98790"
  },
  {
    "text": "web application that does operating system analytics for our customers the",
    "start": "98790",
    "end": "104600"
  },
  {
    "text": "principle thing that you need to know about collide for this presentation is that we have a SAS product we sell to",
    "start": "104600",
    "end": "111420"
  },
  {
    "text": "other businesses and the data that we collect from our customers is the most sensitive data that they have so",
    "start": "111420",
    "end": "118020"
  },
  {
    "text": "security is super important to us and that motivates a lot of the decisions that we make around data isolation and",
    "start": "118020",
    "end": "124590"
  },
  {
    "text": "architecture so keep that in mind I also want to give a shout out to the two sres",
    "start": "124590",
    "end": "130890"
  },
  {
    "text": "that work at collide the left there is Victor and you may know him as Group on the internet and on",
    "start": "130890",
    "end": "138010"
  },
  {
    "text": "the right is SEF with an S not a C and you may know him on the Internet as directionless and they have been super",
    "start": "138010",
    "end": "146140"
  },
  {
    "text": "instrumental in this whole process of both coming up with all of these ideas with me as well as putting them into",
    "start": "146140",
    "end": "151810"
  },
  {
    "text": "production so couldn't have done any of this without those two guys so for the talk today I want to talk to you I want",
    "start": "151810",
    "end": "158860"
  },
  {
    "start": "156000",
    "end": "156000"
  },
  {
    "text": "to discuss the few hockey concepts and the multi-tenancy space and make sure",
    "start": "158860",
    "end": "165070"
  },
  {
    "text": "that we all agree on some shared definitions I want to give you a quick rundown of how we chose to deploy our",
    "start": "165070",
    "end": "172090"
  },
  {
    "text": "application and manage tenancy at collide and then I want to dive deep into the kubernetes operator ecosystem",
    "start": "172090",
    "end": "179140"
  },
  {
    "text": "and how we've used the operator to accomplish various aspects of operating",
    "start": "179140",
    "end": "184690"
  },
  {
    "text": "a production system such as deploying that system the networking involved security aspects of it what have you and",
    "start": "184690",
    "end": "191709"
  },
  {
    "text": "then I have a few links to various community projects that hopefully you may be interested in as well as some",
    "start": "191709",
    "end": "198450"
  },
  {
    "text": "enumerations of lessons learnt lessons learned interesting gotchas and other things that you might want to take away",
    "start": "198450",
    "end": "204370"
  },
  {
    "text": "from this presentation about whether or not you should or should not do this based on you know the different",
    "start": "204370",
    "end": "210040"
  },
  {
    "text": "properties of your business so let's hop right into it some multi-tenancy concepts so this",
    "start": "210040",
    "end": "217030"
  },
  {
    "start": "217000",
    "end": "217000"
  },
  {
    "text": "talks all about application tenancy and that is the de you know companies that",
    "start": "217030",
    "end": "224440"
  },
  {
    "text": "create products for other companies have to reason about the isolation between",
    "start": "224440",
    "end": "229530"
  },
  {
    "text": "the different companies and there are two complete ends of the spectrum on how",
    "start": "229530",
    "end": "235030"
  },
  {
    "text": "you could go about managing application tenancy one is to create you know a kind",
    "start": "235030",
    "end": "240220"
  },
  {
    "text": "of monolithic application and which handles tenant data isolation via application logic middleware stuff like",
    "start": "240220",
    "end": "247540"
  },
  {
    "text": "that and the other end of the spectrum is to deploy and proxy to many independent isolated single tenant",
    "start": "247540",
    "end": "254440"
  },
  {
    "text": "applications and this tall kind of you know it's choose-your-own-adventure we",
    "start": "254440",
    "end": "260470"
  },
  {
    "text": "chose the second path and we chose to manage that with kubernetes operator and that's you know what I'm gonna explain so I",
    "start": "260470",
    "end": "266660"
  },
  {
    "text": "just want to explain the spectrum and that you know you may or may not choose that path but if you do and you want to",
    "start": "266660",
    "end": "272150"
  },
  {
    "text": "manage it with kubernetes operator this talks for you and I'll talk about some of the at the end I'll talk about some",
    "start": "272150",
    "end": "277280"
  },
  {
    "text": "of the properties that you know it may be a better idea for you to consider one",
    "start": "277280",
    "end": "282410"
  },
  {
    "text": "way or the other if your organization and has different kinds of properties so",
    "start": "282410",
    "end": "288020"
  },
  {
    "text": "within the kubernetes space people often talk about hard and soft multi-tenancy as it turns and I think it's useful to",
    "start": "288020",
    "end": "294830"
  },
  {
    "text": "understand these two terms so Jessie Frisell it has a ton of interesting",
    "start": "294830",
    "end": "301660"
  },
  {
    "start": "301000",
    "end": "301000"
  },
  {
    "text": "documents that she's our and she used to be the lead of the multi-tenancy working",
    "start": "301660",
    "end": "306860"
  },
  {
    "text": "group and we're a ton of really interesting documents on this topic and I like her definitions of these two",
    "start": "306860",
    "end": "312710"
  },
  {
    "text": "topics so I'll read them to you kubernetes is new kernel we can refer to",
    "start": "312710",
    "end": "318260"
  },
  {
    "text": "it as a cluster kernel versus a typical operating system kernel this means a lot of great things for users trying to play",
    "start": "318260",
    "end": "324260"
  },
  {
    "text": "applications it also leads to a lot of the same challenges we've already faced with operating system kernels one of",
    "start": "324260",
    "end": "329300"
  },
  {
    "text": "which being privilege isolation in kubernetes we refer to this as multi-tenancy or the dream of being able",
    "start": "329300",
    "end": "335000"
  },
  {
    "text": "to isolate tentative clusters so hard multi-tenancy is really this idea of you want to you know a common use case for",
    "start": "335000",
    "end": "342560"
  },
  {
    "text": "hard multi-tenancy might be if you're selling kubernetes like if you're a kubernetes provider and you want to give",
    "start": "342560",
    "end": "348050"
  },
  {
    "text": "someone a control plan that they only they have access to but you perhaps want",
    "start": "348050",
    "end": "354320"
  },
  {
    "text": "to run all of these like kubernetes clusters that you're distributing in kubernetes this would be hard",
    "start": "354320",
    "end": "359990"
  },
  {
    "text": "multi-tenancy there's no shared infrastructure between the tenants the",
    "start": "359990",
    "end": "365120"
  },
  {
    "text": "other is soft multi-tenancy now what jesse wrote about soft multi-tenancy is",
    "start": "365120",
    "end": "370640"
  },
  {
    "text": "multiple users within the same organization in the same cluster soft multi-tenancy could have possible bad",
    "start": "370640",
    "end": "377210"
  },
  {
    "text": "actors such as people leaving the company the users are not thought to be actively malicious since they are within",
    "start": "377210",
    "end": "382250"
  },
  {
    "text": "the same organization but potential for accidents or evil leaving employees a large focus of soft multi-tenancy is to",
    "start": "382250",
    "end": "388940"
  },
  {
    "text": "prevent accidents I think that last point is really important so the common use case for soft multi-tenancy is if",
    "start": "388940",
    "end": "395180"
  },
  {
    "text": "you're a cluster operator at a company and you know there's a lot of different teams that each wants space on your",
    "start": "395180",
    "end": "400829"
  },
  {
    "text": "kubernetes cluster this is a soft multi-tenancy where you can kind of trust people but you you know want to",
    "start": "400829",
    "end": "407819"
  },
  {
    "text": "put some guardrails up so we think about hard versus soft multi-tenancy it's a",
    "start": "407819",
    "end": "413339"
  },
  {
    "start": "410000",
    "end": "410000"
  },
  {
    "text": "big spectrum and there's a few key points of isolation that you can trigger",
    "start": "413339",
    "end": "418529"
  },
  {
    "text": "and then everything between those points is kind of you know a little more ethereal but the SAS application",
    "start": "418529",
    "end": "425279"
  },
  {
    "text": "multi-tenancy problem space is firmly soft multi-tenancy so you know we're not",
    "start": "425279",
    "end": "430709"
  },
  {
    "text": "really interested in super concrete isolation between the different tents",
    "start": "430709",
    "end": "437789"
  },
  {
    "text": "because we not we you know we're ones where a set of operators that wrote all",
    "start": "437789",
    "end": "445589"
  },
  {
    "text": "the software that we're deploying right so we trust the software we trust that you know it's not like we we don't even",
    "start": "445589",
    "end": "452699"
  },
  {
    "text": "have to deal with employees being disgruntled we can trying to you know circumvent our protections because we're",
    "start": "452699",
    "end": "459539"
  },
  {
    "text": "not giving our employees unfettered access to deploy whatever they want our clustered so multi-tenancy for us is",
    "start": "459539",
    "end": "465929"
  },
  {
    "text": "more of this logical operation and you know that's something to keep in mind",
    "start": "465929",
    "end": "471739"
  },
  {
    "text": "another topic that's often talked about multi-tenancy that i'm not going to talk about at all today is metering and this",
    "start": "471739",
    "end": "478409"
  },
  {
    "start": "473000",
    "end": "473000"
  },
  {
    "text": "is really popular in choruses operator framework and this is the idea of you",
    "start": "478409",
    "end": "484499"
  },
  {
    "text": "know controlling how many resources a single tenant can use compared to another we don't do any meter metering",
    "start": "484499",
    "end": "491659"
  },
  {
    "text": "because that would imply that you know you know we want to kind of you know",
    "start": "491659",
    "end": "501779"
  },
  {
    "text": "limit the computational resources that one of our own customers can use via our own software you know wouldn't really",
    "start": "501779",
    "end": "507479"
  },
  {
    "text": "make sense for yeast kiss so we don't do any metering but there's a lot of really interesting metering stuff out there if",
    "start": "507479",
    "end": "513029"
  },
  {
    "text": "that's interesting to you so keep that in mind alright cool app architecture so I want to talk to you a little bit about",
    "start": "513029",
    "end": "519448"
  },
  {
    "text": "the chosen architecture that we have for this that I'll go over for this talk because",
    "start": "519449",
    "end": "524470"
  },
  {
    "text": "I think it's useful to understand the kind of general goal of the deployment model and then we'll go into how we",
    "start": "524470",
    "end": "531130"
  },
  {
    "text": "accomplish that so generally a single application instance per customer so",
    "start": "531130",
    "end": "536230"
  },
  {
    "start": "532000",
    "end": "532000"
  },
  {
    "text": "there is various components to the application you know this contrived example where there's just three",
    "start": "536230",
    "end": "542380"
  },
  {
    "text": "components you know one on the top left one in the top right one in the bottom and all of the boxes represent various",
    "start": "542380",
    "end": "548890"
  },
  {
    "text": "infrastructure components but the key here is that each compute and data requirement of a tenant is completely",
    "start": "548890",
    "end": "555700"
  },
  {
    "text": "isolated into its own box and one of the few advantages to this few disadvantages",
    "start": "555700",
    "end": "561970"
  },
  {
    "text": "to this you know this optimizes data and compute for very sensitive use cases",
    "start": "561970",
    "end": "567580"
  },
  {
    "text": "like I talked about we do operating system instrumentation and analytics for security reasons for our customers so",
    "start": "567580",
    "end": "573730"
  },
  {
    "text": "this is very sensitive data so we don't want any risk of cross-pollination of that data and this also eliminates the",
    "start": "573730",
    "end": "579730"
  },
  {
    "text": "need for product developers to reason about data isolation and multi-tenancy which are historically kind of",
    "start": "579730",
    "end": "584830"
  },
  {
    "text": "complicated topics and you know if you find yourself at an organization that has a lot of infrastructure folks but",
    "start": "584830",
    "end": "591760"
  },
  {
    "text": "not a lot of product developers this might be a compromise that you can make to offload your product developers from",
    "start": "591760",
    "end": "597730"
  },
  {
    "text": "having to reason about multi-tenancy if you can make it an infrastructure problem and also you know we're startup",
    "start": "597730",
    "end": "605140"
  },
  {
    "text": "we just we did our series a like a year and a half ago so we're pretty early-stage still and this allows us to",
    "start": "605140",
    "end": "612310"
  },
  {
    "text": "have our infrastructure infrastructure orchestration and account management deployment tooling all that kind of",
    "start": "612310",
    "end": "617890"
  },
  {
    "text": "outlast any products that we want to try out and spike someone wants to write a",
    "start": "617890",
    "end": "623380"
  },
  {
    "text": "new version of the app and deploy it to a few tenants we can do that because it's all rather decoupled so you know a",
    "start": "623380",
    "end": "630130"
  },
  {
    "text": "few a few interesting considerations so once you have these little clusters of",
    "start": "630130",
    "end": "635850"
  },
  {
    "text": "applications the general strategy we have is that we deploy all of them",
    "start": "635850",
    "end": "642430"
  },
  {
    "text": "independently and then we have a networking layer that exposes you single unified ingress and that ingress",
    "start": "642430",
    "end": "649630"
  },
  {
    "text": "takes care of routing traffic to customers based on some per request identifier and I can go more into that",
    "start": "649630",
    "end": "656680"
  },
  {
    "text": "what those are later there's like a networking section so we'll get into that that's the goal you know we've got",
    "start": "656680",
    "end": "661930"
  },
  {
    "text": "these little boxes these boxes are full of application components each tenant gets their own application components we",
    "start": "661930",
    "end": "667570"
  },
  {
    "text": "ingress at a unified point and then route to all of them independently and",
    "start": "667570",
    "end": "672610"
  },
  {
    "text": "note that you know we'll get to this but this doesn't always it's not always in",
    "start": "672610",
    "end": "678339"
  },
  {
    "text": "one cluster we've reached we like reach the limit of what we could handle with one cluster",
    "start": "678339",
    "end": "683440"
  },
  {
    "text": "and had to reason about doing this kind of multi tenant ingress for many",
    "start": "683440",
    "end": "688570"
  },
  {
    "text": "customers so that's its own interesting consideration so this talk is really about managing tenants with an operator",
    "start": "688570",
    "end": "694540"
  },
  {
    "start": "692000",
    "end": "692000"
  },
  {
    "text": "so once we decided on this architecture it was pretty and you know we've been using kubernetes for a while I was",
    "start": "694540",
    "end": "700570"
  },
  {
    "text": "pretty uh you know pretty obvious path that we should go down well",
    "start": "700570",
    "end": "705820"
  },
  {
    "text": "so each tenant gets its own kubernetes namespace and all the compute resources live there we also have a higher level",
    "start": "705820",
    "end": "713080"
  },
  {
    "text": "control plan for things like sign up routing that ingress proxy that I talked to you for account management you know",
    "start": "713080",
    "end": "721300"
  },
  {
    "text": "deployment server stuff like that so let's take a quick aside and talk about",
    "start": "721300",
    "end": "727030"
  },
  {
    "text": "the operator ecosystem for those of you who either are not super familiar with",
    "start": "727030",
    "end": "732040"
  },
  {
    "text": "operators or not super familiar with the software development ecosystem around it so kubernetes operators are like",
    "start": "732040",
    "end": "738520"
  },
  {
    "start": "736000",
    "end": "736000"
  },
  {
    "text": "operator is this kind of marketing term that core OS made up a few years ago I like to define it concretely as a",
    "start": "738520",
    "end": "745030"
  },
  {
    "text": "combination of a custom resource definition and a controller and your custom resource definition represents",
    "start": "745030",
    "end": "751570"
  },
  {
    "text": "the schema of your well I'll get to the",
    "start": "751570",
    "end": "757270"
  },
  {
    "text": "definition of each of them you know kubernetes out operations are awesome so",
    "start": "757270",
    "end": "763410"
  },
  {
    "text": "yeah so for this talk I'm not really going to use the term operator anymore I'll use C Rd and CR to reference the",
    "start": "763410",
    "end": "772420"
  },
  {
    "text": "customer resource definitions and the customer resources to turn controller to represent these",
    "start": "772420",
    "end": "777880"
  },
  {
    "text": "like deployed thing in the cluster that interacts with the API server and takes",
    "start": "777880",
    "end": "783250"
  },
  {
    "text": "action based on the instances of the custom resource alright awesome so CR DS",
    "start": "783250",
    "end": "788350"
  },
  {
    "start": "787000",
    "end": "787000"
  },
  {
    "text": "are really awesome cut the CR dapi is kind of a you know popular topic at the",
    "start": "788350",
    "end": "794680"
  },
  {
    "text": "conference this year which is great and I love it because the source of truth is an annotated go struct which",
    "start": "794680",
    "end": "801040"
  },
  {
    "text": "works directly with all of the kubernetes api machinery and then source of truth is a ghost struct that always",
    "start": "801040",
    "end": "806680"
  },
  {
    "text": "makes for a great day and Michael and that's awesome and it's a neat standard to adhere to since you know everyone",
    "start": "806680",
    "end": "815650"
  },
  {
    "text": "kind of has the yeah mole problem you've got too much e amyl you don't know what to do with it but at least you know if",
    "start": "815650",
    "end": "820840"
  },
  {
    "text": "somebody figures out a better way to manage all the yeah Mille everyone can use it so I don't have a great yeah",
    "start": "820840",
    "end": "826060"
  },
  {
    "text": "Mille solution for you yet but you know when one comes out I'm sure we'll all benefit from it now the difference",
    "start": "826060",
    "end": "833950"
  },
  {
    "text": "between custom resource definition and a custom resource is also one of interesting note so custom resource",
    "start": "833950",
    "end": "839290"
  },
  {
    "text": "definitions are like the schema the specification what fields you're allowed to set on this object and",
    "start": "839290",
    "end": "846910"
  },
  {
    "text": "a custom resource is you know it's just a resource it's one instance of the",
    "start": "846910",
    "end": "852100"
  },
  {
    "text": "custom resource definition and I think it's worth being explicit about using CR",
    "start": "852100",
    "end": "857470"
  },
  {
    "text": "D and C are appropriately when you know when you're talking about the different",
    "start": "857470",
    "end": "862750"
  },
  {
    "text": "things whether you're talking about the schema of the resources or a specific",
    "start": "862750",
    "end": "868120"
  },
  {
    "text": "resource so this is great because you know we call our custom resource definition tenant and you can get all of",
    "start": "868120",
    "end": "875350"
  },
  {
    "text": "your custom resources by doing things like ooh cuddle get tenants and stuff",
    "start": "875350",
    "end": "880360"
  },
  {
    "text": "like that so you know sometimes like I said it's parameterised via things like helm in case on it and I use helm",
    "start": "880360",
    "end": "886300"
  },
  {
    "text": "because I don't like the tiller but you know your mileage may vary so this is kind of this is I think the only place",
    "start": "886300",
    "end": "892870"
  },
  {
    "text": "actually in the talk where the custom research is shown but this is a you know",
    "start": "892870",
    "end": "898690"
  },
  {
    "text": "just a rough example of the kinds of things we have in here for each tenant so for you know we have the name of the",
    "start": "898690",
    "end": "904480"
  },
  {
    "text": "tenant which are just these like random strings we have a few to bases so if you want like to my",
    "start": "904480",
    "end": "909930"
  },
  {
    "text": "sequel databases in a post-grad database for one tenant you can enumerate those there there's some high-level aspects of",
    "start": "909930",
    "end": "916380"
  },
  {
    "text": "the like account management bits so when a user signs up we create the tenant we",
    "start": "916380",
    "end": "921930"
  },
  {
    "text": "include these account management bits so that we can invite them or send them a email saying their instance is up and",
    "start": "921930",
    "end": "927720"
  },
  {
    "text": "running when when it's ready so you know it's useful to have all that information",
    "start": "927720",
    "end": "932910"
  },
  {
    "text": "there and then we have some random information like how large the PG bouncer pool size should be and you know",
    "start": "932910",
    "end": "939840"
  },
  {
    "text": "these are things that we've just kind of iterated on and then the main bit the repos bit is all of the different micro",
    "start": "939840",
    "end": "946950"
  },
  {
    "text": "services that make up your are tenant so you know there's only two listed here but in practice there's several more on",
    "start": "946950",
    "end": "953190"
  },
  {
    "text": "each of our tenants so you know that's that's in there and then you know that",
    "start": "953190",
    "end": "959130"
  },
  {
    "text": "we basically specify the container that gets deployed and then some parameterize diamo which we have like kind of a helm esque",
    "start": "959130",
    "end": "966600"
  },
  {
    "text": "templating engine that we use that's like helm except without the tiller so",
    "start": "966600",
    "end": "973140"
  },
  {
    "start": "972000",
    "end": "972000"
  },
  {
    "text": "controllers so controllers are the other side of customers or the operator",
    "start": "973140",
    "end": "978870"
  },
  {
    "text": "pattern right controllers are long-running single instance processes typically written and go the interact",
    "start": "978870",
    "end": "985830"
  },
  {
    "text": "with kubernetes api server to observe how your customer resources are changing over time and you know merging observing",
    "start": "985830",
    "end": "993810"
  },
  {
    "text": "what the state of because customer resources it is observing the state of reality translating the domain specific",
    "start": "993810",
    "end": "1001490"
  },
  {
    "text": "information about what needs to happen and taking action on your cluster based on you know all of its observations so",
    "start": "1001490",
    "end": "1008930"
  },
  {
    "text": "there's a lot of different ways to write controllers and go I base this operator",
    "start": "1008930",
    "end": "1016400"
  },
  {
    "start": "1013000",
    "end": "1013000"
  },
  {
    "text": "off of the sample controller the you know github.com such kubernetes slash sample controller which is produced by",
    "start": "1016400",
    "end": "1023720"
  },
  {
    "text": "ad API machinery and it's a little more you know there's we were at this before",
    "start": "1023720",
    "end": "1030170"
  },
  {
    "text": "the operator framework was around if I could go back and do it and if the operator framework was around",
    "start": "1030170",
    "end": "1036540"
  },
  {
    "text": "when we started the project probably would have used it but I don't regret not using it because now that we've used",
    "start": "1036540",
    "end": "1042209"
  },
  {
    "text": "sample controller we just have a lot more control so I would say if you're",
    "start": "1042210",
    "end": "1047490"
  },
  {
    "text": "not afraid of dealing with the kubernetes the API is very deeply then go for you know go for the metal try to",
    "start": "1047490",
    "end": "1055200"
  },
  {
    "text": "get as close to the API machinery as possible but you know if you're a new do to kubernetes but you like writing go",
    "start": "1055200",
    "end": "1061260"
  },
  {
    "text": "the operator framework is definitely more user-friendly API but I encourage you to get familiar with the kubernetes",
    "start": "1061260",
    "end": "1066990"
  },
  {
    "text": "api is and go if you're a good developer because once you learn the general patterns they're all very consistent and",
    "start": "1066990",
    "end": "1072570"
  },
  {
    "text": "it's really easy to work with so you know go for it so I'm going to show you a few code examples of our controller",
    "start": "1072570",
    "end": "1079980"
  },
  {
    "text": "just to show you how we do so just to like show you the general life cycle of you know controller starts how do we do",
    "start": "1079980",
    "end": "1086670"
  },
  {
    "text": "initialization and how do we get into this control loop where tenants are managed so and like I said you know",
    "start": "1086670",
    "end": "1093090"
  },
  {
    "start": "1091000",
    "end": "1091000"
  },
  {
    "text": "you're probably not gonna be able to read most of this from your seats that's fine I just want to exhibit like you",
    "start": "1093090",
    "end": "1098130"
  },
  {
    "text": "know the smaller the text is the more its kind of on purpose because you know the more kind of unfortunate",
    "start": "1098130",
    "end": "1104010"
  },
  {
    "text": "initialization you have to do so this is the main so when you're starting up when",
    "start": "1104010",
    "end": "1109680"
  },
  {
    "text": "you're creating all of your kubernetes API clients and stuff you have to get all your cube configs and you have to",
    "start": "1109680",
    "end": "1114750"
  },
  {
    "text": "create all of your informer factories and your factory factories and your factory factory factories and then at",
    "start": "1114750",
    "end": "1120870"
  },
  {
    "text": "the end of the day you can start a run with and that's at the bottom you see C dot run and you're running your",
    "start": "1120870",
    "end": "1126870"
  },
  {
    "text": "controller so basically initialize all your kubernetes api dependencies your kubernetes api clients for all of the",
    "start": "1126870",
    "end": "1131970"
  },
  {
    "text": "core types as well as all of the types that your custom resource definition is",
    "start": "1131970",
    "end": "1137430"
  },
  {
    "text": "adding once we get into the initialization of the controller itself when we initialize new controller you",
    "start": "1137430",
    "end": "1145470"
  },
  {
    "start": "1139000",
    "end": "1139000"
  },
  {
    "text": "know it accepts to all of those initialized bits from main and then",
    "start": "1145470",
    "end": "1151080"
  },
  {
    "text": "further initializes Informers and what Informer's are these kind of event based",
    "start": "1151080",
    "end": "1156390"
  },
  {
    "text": "api objects that you can instantiate that allow you to watch you know you can",
    "start": "1156390",
    "end": "1162630"
  },
  {
    "text": "watch objects as well as have an in-memory cache of objects that the api",
    "start": "1162630",
    "end": "1168510"
  },
  {
    "text": "server knows about so that you don't have to hit the API server every time you want to list the namespaces in your cluster or something",
    "start": "1168510",
    "end": "1174920"
  },
  {
    "text": "like that so for a very very slight memory hit you can have all of this",
    "start": "1174920",
    "end": "1181610"
  },
  {
    "text": "stuff cached locally which is really great so if you're listing out deployments or secrets or namespaces or",
    "start": "1181610",
    "end": "1187070"
  },
  {
    "text": "pod disruption budgets or any of the other stuff that you invariably will need to operate on creating all these",
    "start": "1187070",
    "end": "1192620"
  },
  {
    "text": "informers is really nice so you can see there's like namespace secret deployment stateful set services pod structured",
    "start": "1192620",
    "end": "1198320"
  },
  {
    "text": "budgets and then towards the bottom there there's the tenant Informer so that's our kind of API object for the",
    "start": "1198320",
    "end": "1205610"
  },
  {
    "text": "tenant and it's great because all of the informer factories and all of that get auto generated by the code that is part",
    "start": "1205610",
    "end": "1213290"
  },
  {
    "text": "of the upstream API machinery so there's really great code generation for that now you know this is where we set up the",
    "start": "1213290",
    "end": "1222140"
  },
  {
    "text": "event handler so this is kind of an important bit of code here in new controller and you'll see this all the",
    "start": "1222140",
    "end": "1227480"
  },
  {
    "text": "way at the end right before we return the controller struck that we've just instantiate impactful of in former",
    "start": "1227480",
    "end": "1233270"
  },
  {
    "text": "factories and all that good stuff we set an event handler so that when you know a",
    "start": "1233270",
    "end": "1239810"
  },
  {
    "text": "tenant is created or updated we in queue it we add it to the queue and now the",
    "start": "1239810",
    "end": "1246050"
  },
  {
    "text": "queuing logic is separate and we'll get to that but this is just to exhibit that there is a you know function there's a",
    "start": "1246050",
    "end": "1253190"
  },
  {
    "text": "function on the controller struct called in queue tenant which will add the tenant to the work queue which is",
    "start": "1253190",
    "end": "1259190"
  },
  {
    "text": "internally managed now synchronization this is where them this is where the magic happens right this was MTV Cribs",
    "start": "1259190",
    "end": "1266000"
  },
  {
    "start": "1261000",
    "end": "1261000"
  },
  {
    "text": "it would be the bedrooms but uh so there's this function we have called",
    "start": "1266000",
    "end": "1271310"
  },
  {
    "text": "resolve tenant state and this basically accepts a key in this keys the name of",
    "start": "1271310",
    "end": "1276590"
  },
  {
    "text": "the tenant so then we use the tenant and former factory to get the full typed odd",
    "start": "1276590",
    "end": "1282410"
  },
  {
    "text": "the full type struct for that tank key and based on the state of the tenant",
    "start": "1282410",
    "end": "1289070"
  },
  {
    "text": "which I'll explain we then you know resolve it in a certain way so when we",
    "start": "1289070",
    "end": "1294140"
  },
  {
    "text": "first created this we would just resolve tenants in one but then we started to get a lot of customers some customers churn out and",
    "start": "1294140",
    "end": "1300570"
  },
  {
    "text": "you know you don't want to keep their tenant around or you want to keep it in kind of this idle state so we added a",
    "start": "1300570",
    "end": "1306180"
  },
  {
    "text": "bunch of states to tenon so that's another thing we added to our customer resource definition and we have",
    "start": "1306180",
    "end": "1311760"
  },
  {
    "text": "different kind of synchronization loops for each for each one so I'm not going to go into each of the different",
    "start": "1311760",
    "end": "1318180"
  },
  {
    "text": "resolutions for each of the different states but you can see the states there are frozen archived purged and then we",
    "start": "1318180",
    "end": "1325950"
  },
  {
    "text": "have a general you know catch-all for things like whether they're idle or new",
    "start": "1325950",
    "end": "1331440"
  },
  {
    "text": "or anything like that they're just going to we're just gonna make sure that they're fully deployed and healthy so",
    "start": "1331440",
    "end": "1336660"
  },
  {
    "text": "you know this is the general life cycle we instantiate our kubernetes API clients we create our informers we",
    "start": "1336660",
    "end": "1342510"
  },
  {
    "text": "instantiate it controller we have a little run loop that's provided by the API machinery and then you know based on",
    "start": "1342510",
    "end": "1348510"
  },
  {
    "text": "the state of the tenant we'll take some different actions to ensure that the tenant is deployed properly right so",
    "start": "1348510",
    "end": "1354930"
  },
  {
    "text": "that's all well and good now I want to talk about I want to go through the you know aspects of production system part",
    "start": "1354930",
    "end": "1361350"
  },
  {
    "text": "where we talk about deployments networking security stuff like that so deployments so to salute a frequent",
    "start": "1361350",
    "end": "1369570"
  },
  {
    "start": "1367000",
    "end": "1367000"
  },
  {
    "text": "deployments we like everyone else like to deploy as quickly as possible you know because it's 2018 and who doesn't",
    "start": "1369570",
    "end": "1375240"
  },
  {
    "text": "like to deploy several times a day so we were a slack bot that interacts with the kubernetes api that allows you to you",
    "start": "1375240",
    "end": "1382920"
  },
  {
    "text": "know make certain changes to tenon so like let me show you a little example of what that looks like so we have a deploy",
    "start": "1382920",
    "end": "1389130"
  },
  {
    "text": "channel in slack and we wrote the slack bot called cloud cuddle so you'll do cloud cuddle deploy application name",
    "start": "1389130",
    "end": "1396450"
  },
  {
    "text": "hash and you know in this example the application name is called herd and you",
    "start": "1396450",
    "end": "1402270"
  },
  {
    "text": "know Victor is deploying a specific hash and now what that'll do is a new it'll",
    "start": "1402270",
    "end": "1407880"
  },
  {
    "text": "talk to the kubernetes api list the relevant tenants that you're trying to deploy now you could do like cloud",
    "start": "1407880",
    "end": "1413970"
  },
  {
    "text": "cuddle deploy heard that hash - - tenants - Bob a and that'll only deploy",
    "start": "1413970",
    "end": "1419700"
  },
  {
    "text": "that hash for that part of the application - that tenant if you leave it off it deploys it to everyone so the",
    "start": "1419700",
    "end": "1425310"
  },
  {
    "text": "slack bot here is kind of interacting with all the different these API servers for all the different",
    "start": "1425310",
    "end": "1431250"
  },
  {
    "text": "clusters where tenants may exist and basically doing like a poor-man's apply",
    "start": "1431250",
    "end": "1438440"
  },
  {
    "text": "which is interesting I'll talk about I'll talk more about a server side apply and kind of updating in the perils",
    "start": "1438440",
    "end": "1444630"
  },
  {
    "text": "therein but that's really fun that's cool so this is kind of again this is something",
    "start": "1444630",
    "end": "1451170"
  },
  {
    "start": "1447000",
    "end": "1447000"
  },
  {
    "text": "that you can look at in the slides for reference later if you want to but this is basically going through all of the",
    "start": "1451170",
    "end": "1457260"
  },
  {
    "text": "different kubernetes clusters we have resolving whatever tenants were supplied and you know going and doing an update",
    "start": "1457260",
    "end": "1466130"
  },
  {
    "text": "again this is kind of just going through and you know in this specific example",
    "start": "1466130",
    "end": "1472260"
  },
  {
    "text": "here you see the kind of halfway through we do like a get we do a list of the tenants then we enumerate through those",
    "start": "1472260",
    "end": "1479130"
  },
  {
    "text": "tenants do the update to them based on whatever hash we're trying to deploy and then do a an update operation with the",
    "start": "1479130",
    "end": "1487140"
  },
  {
    "text": "kubernetes api so that now the tenant is changed and it will be again queued in",
    "start": "1487140",
    "end": "1492750"
  },
  {
    "text": "the controller so that's kind of the flow you write a slack command the slack bot interacts with the kubernetes api",
    "start": "1492750",
    "end": "1500210"
  },
  {
    "text": "updates the tenant custom resources the controller has an informer factory it",
    "start": "1500210",
    "end": "1505980"
  },
  {
    "text": "observes that these updates have happened and takes the action to converge actual state with desired state",
    "start": "1505980",
    "end": "1513049"
  },
  {
    "text": "that's the place that's it yes",
    "start": "1513049",
    "end": "1517880"
  },
  {
    "text": "if there the question is is there a reason why we do this and go instead of just using coop go and coop cuttle",
    "start": "1523280",
    "end": "1529250"
  },
  {
    "text": "applying yeah we don't actually keep any of the tenant animals yeah they're all",
    "start": "1529250",
    "end": "1535160"
  },
  {
    "text": "just we operate on weed yeah we don't have like a repository of the animals or anything we just reason about them as",
    "start": "1535160",
    "end": "1541760"
  },
  {
    "text": "API objects yeah networking new topic so the most",
    "start": "1541760",
    "end": "1548930"
  },
  {
    "start": "1548000",
    "end": "1548000"
  },
  {
    "text": "interesting thing that we do with networking is this ingress bit so for any kind of tenant in sharding scenario",
    "start": "1548930",
    "end": "1555500"
  },
  {
    "text": "you need to central index for managing external ingress traffic and there are a ton of options for this envoy you can",
    "start": "1555500",
    "end": "1562610"
  },
  {
    "text": "script with nginx there's a really great talk from Shopify des or Recon about this for our needs we like writing",
    "start": "1562610",
    "end": "1568610"
  },
  {
    "text": "everything and go we were at a whole custom ingress proxy and go that does exactly what we need and nothing that we",
    "start": "1568610",
    "end": "1574310"
  },
  {
    "text": "don't we like our custom proxy although we may reevaluate that as different",
    "start": "1574310",
    "end": "1580040"
  },
  {
    "text": "options become more mature so a few details about this this proxy it's all",
    "start": "1580040",
    "end": "1586910"
  },
  {
    "start": "1582000",
    "end": "1582000"
  },
  {
    "text": "l4 so it makes it super easy we just you",
    "start": "1586910",
    "end": "1593180"
  },
  {
    "text": "know terminate you know we l4 directly to the pods for each tenant so each",
    "start": "1593180",
    "end": "1598790"
  },
  {
    "text": "application is a ghost service that is totally willing and capable and able to",
    "start": "1598790",
    "end": "1603800"
  },
  {
    "text": "terminate a tail force so that makes things a lot easier it's called shuffler it's similar to",
    "start": "1603800",
    "end": "1608900"
  },
  {
    "text": "envoy with regards to the fact that it separates the control plane from the",
    "start": "1608900",
    "end": "1614420"
  },
  {
    "text": "data plan so we have a G RPC API where we can set mappings where we can say hey",
    "start": "1614420",
    "end": "1621020"
  },
  {
    "text": "a new tenant signed up we deployed them in this cluster so create a mapping so that when you see traffic for this",
    "start": "1621020",
    "end": "1626960"
  },
  {
    "text": "tenant name it needs to go to this kubernetes namespace so we use GCP datastore to persist that GCP datastore",
    "start": "1626960",
    "end": "1633740"
  },
  {
    "text": "effectively scales forever for this use case so it's really great and then the",
    "start": "1633740",
    "end": "1638810"
  },
  {
    "text": "data plane just kind of gets that keeps an in-memory cache of that information and you know just on-the-fly makes a",
    "start": "1638810",
    "end": "1644510"
  },
  {
    "text": "decision about where this request needs to go based on the tenant ID that's in an HTTP header and this adds about one",
    "start": "1644510",
    "end": "1651710"
  },
  {
    "text": "millisecond of latency which you know isn't awesome but is definitely not our bottleneck so so we",
    "start": "1651710",
    "end": "1658769"
  },
  {
    "text": "don't really worry too much about that in training space traffic traffic within the namespace is interesting",
    "start": "1658769",
    "end": "1664919"
  },
  {
    "start": "1660000",
    "end": "1660000"
  },
  {
    "text": "so for per tenant service the service traffic we just used the you know you can use just for example herd is one",
    "start": "1664919",
    "end": "1673049"
  },
  {
    "text": "thing that is in each tenant you can just refer to it via the DNS herd this is actually pretty convenient because it",
    "start": "1673049",
    "end": "1679260"
  },
  {
    "text": "allows you to communicate intra tenant services without having to do any fancy service routing because any every tenant",
    "start": "1679260",
    "end": "1687840"
  },
  {
    "text": "that you know needs to talk to its herd or its K store or whatever it's like you",
    "start": "1687840",
    "end": "1693690"
  },
  {
    "text": "know service that needs to talk to you for a tenant it can talk to it via the same name and you can use network",
    "start": "1693690",
    "end": "1699870"
  },
  {
    "text": "policies which are a part of court to lock down this network graph depending",
    "start": "1699870",
    "end": "1706559"
  },
  {
    "text": "on your use case and we do for ours so that's an interesting little tidbit now",
    "start": "1706559",
    "end": "1712130"
  },
  {
    "text": "security now this is an interesting one for sure this is kind of interesting",
    "start": "1712130",
    "end": "1718320"
  },
  {
    "text": "from a few perspectives one of the things that I think is the most interesting and the thing that come from",
    "start": "1718320",
    "end": "1724260"
  },
  {
    "text": "not cause us the most pain but that we spent a lot of time kind of reasoning about and discussing and optimizing is",
    "start": "1724260",
    "end": "1729929"
  },
  {
    "text": "secret distribution so each tenant needs a variety of Secrets API keys for things",
    "start": "1729929",
    "end": "1736260"
  },
  {
    "text": "like SendGrid or what-have-you as well as the database credentials for the per tenant you know data resources that it",
    "start": "1736260",
    "end": "1743669"
  },
  {
    "text": "has and what have you and you know if you've used kubernetes before you likely know that kubernetes secrets cannot be",
    "start": "1743669",
    "end": "1751320"
  },
  {
    "text": "shared across namespaces so for you know the things like the share of the API",
    "start": "1751320",
    "end": "1756510"
  },
  {
    "text": "keys SendGrid stuff like that we we can't have like that secret in one place",
    "start": "1756510",
    "end": "1762510"
  },
  {
    "text": "and have it shared by all tenants we have to manage the distribution of these secrets to every tenant which is",
    "start": "1762510",
    "end": "1768120"
  },
  {
    "text": "interesting so the way we do this is we",
    "start": "1768120",
    "end": "1773279"
  },
  {
    "text": "have tooling in the control in the run loop and the synchronization loop in the controller that when we go to deploy a",
    "start": "1773279",
    "end": "1779279"
  },
  {
    "text": "tenant they will look you've like enumerate the secrets that are in that namespace via the share",
    "start": "1779279",
    "end": "1784550"
  },
  {
    "text": "former that we have for kubernetes secrets observe what's there observed what should be there and make any",
    "start": "1784550",
    "end": "1790610"
  },
  {
    "text": "changes necessary right so this we since",
    "start": "1790610",
    "end": "1797630"
  },
  {
    "start": "1797000",
    "end": "1797000"
  },
  {
    "text": "we deploy multiple clusters we can't use like a single shared namespace or anything as a source of truth so we have",
    "start": "1797630",
    "end": "1805790"
  },
  {
    "text": "to have some EXO cluster secret storage mechanism where we can pull these secrets from so for our East case we",
    "start": "1805790",
    "end": "1813350"
  },
  {
    "text": "have this little interface that we made called store which just is get list put delete and it actually operates on the",
    "start": "1813350",
    "end": "1820490"
  },
  {
    "text": "core v1 secret objects which is really nice we use kubernetes for everything there's already a typed object for",
    "start": "1820490",
    "end": "1825590"
  },
  {
    "text": "secrets so we have this very minimal interface for accessing secrets from an",
    "start": "1825590",
    "end": "1830900"
  },
  {
    "text": "external source and you know this is what the controller uses to get secrets",
    "start": "1830900",
    "end": "1836330"
  },
  {
    "text": "from that source now for the actual implementation of this interface we use",
    "start": "1836330",
    "end": "1841600"
  },
  {
    "text": "KMS and GCS which are GCP products basically we don't use vaults because",
    "start": "1841600",
    "end": "1849740"
  },
  {
    "text": "auto unseal isn't free so we're already really heavy users of GCP so KMS is",
    "start": "1849740",
    "end": "1856730"
  },
  {
    "text": "basically a way for you to encrypt very small data you know it's just an API you",
    "start": "1856730",
    "end": "1862550"
  },
  {
    "text": "know it has like an encrypt and decrypt RPC that you can call and then we store",
    "start": "1862550",
    "end": "1867770"
  },
  {
    "text": "the encrypted secrets in GCS so whenever we need to get a secret that we'll go",
    "start": "1867770",
    "end": "1872930"
  },
  {
    "text": "get the encrypted object from GCS decrypted from with kms and then you know we operate in code with the core v1",
    "start": "1872930",
    "end": "1879620"
  },
  {
    "text": "secret even though at rest they're encrypted via keys that we can rotate and manage permissions to with I am kms",
    "start": "1879620",
    "end": "1887570"
  },
  {
    "text": "is pretty cool product it's got some got some gripes that though we can talk about that after if you want if you're",
    "start": "1887570",
    "end": "1892610"
  },
  {
    "text": "into synchronization loop performance is really interesting when it comes to secrets because make in you know and",
    "start": "1892610",
    "end": "1899900"
  },
  {
    "start": "1894000",
    "end": "1894000"
  },
  {
    "text": "your happy path your synchronization loop happens really quickly like if you're just you know maybe updating the",
    "start": "1899900",
    "end": "1907400"
  },
  {
    "text": "size of the PG bouncer configuration or what-have-you making these very my new",
    "start": "1907400",
    "end": "1914030"
  },
  {
    "text": "changes you don't want the run Loup for that tenant to take very long right so another reason why is when you",
    "start": "1914030",
    "end": "1922800"
  },
  {
    "text": "start up the controller the first thing it does is it enumerates all the custom resources that it needs to operate on",
    "start": "1922800",
    "end": "1929670"
  },
  {
    "text": "and it runs the synchronization loop on all of them so you want your controller to be able to reboot pretty quickly when",
    "start": "1929670",
    "end": "1934950"
  },
  {
    "text": "you have new updates so you want this so if nothing's changed you want it to be able to just work through all of the",
    "start": "1934950",
    "end": "1941600"
  },
  {
    "text": "you know all of the items that it has to process as quickly as possible and this process for us was almost completely a",
    "start": "1941600",
    "end": "1949430"
  },
  {
    "text": "practice of seeing you know how efficiently we could manage the dis acure distribution of secrets so a lot",
    "start": "1949430",
    "end": "1958200"
  },
  {
    "text": "of interesting optimizations here but generally this you know we really had to",
    "start": "1958200",
    "end": "1966930"
  },
  {
    "text": "optimize out making any calls to the kubernetes api server and the hot path",
    "start": "1966930",
    "end": "1972060"
  },
  {
    "text": "of synchronization so originally when we started doing this every time we synchronized a tenant we would list all",
    "start": "1972060",
    "end": "1978570"
  },
  {
    "text": "of the secrets that were encrypted in GCS we would make a get for each item in",
    "start": "1978570",
    "end": "1983610"
  },
  {
    "text": "a folder in GCS we would make an API call to kms to decrypt it we would list all the secrets in the namespace we",
    "start": "1983610",
    "end": "1989850"
  },
  {
    "text": "would compare all of them and then you know make the changes we had so we made",
    "start": "1989850",
    "end": "1994950"
  },
  {
    "text": "like you know 40 RPC calls to Google products 40 RPC calls so the kubernetes",
    "start": "1994950",
    "end": "2000650"
  },
  {
    "text": "api for every 10 it was super slow took like several seconds to synchronize 110 if nothing had changed and at the end of",
    "start": "2000650",
    "end": "2008060"
  },
  {
    "text": "all of the optimizations that we made we basically pre-staged the shared secrets into a kubernetes namespace and used",
    "start": "2008060",
    "end": "2015080"
  },
  {
    "text": "shared informers to enlist that namespace we would use a shared Informer to in memory list the",
    "start": "2015080",
    "end": "2021440"
  },
  {
    "text": "tenant namespace compare all those and then we would only use the GCS storage",
    "start": "2021440",
    "end": "2026900"
  },
  {
    "text": "for per tenant specific secrets and that got that basically made this you know",
    "start": "2026900",
    "end": "2034010"
  },
  {
    "text": "run loop performance and non-issue so you know be warned that was a big deal and it was a pretty easy fix but it's",
    "start": "2034010",
    "end": "2042320"
  },
  {
    "text": "thing that you have to pay attention to for sure when you're interacting with kubernetes api and you know something",
    "start": "2042320",
    "end": "2048200"
  },
  {
    "text": "that could be running you know highly concurrently as these work queues often",
    "start": "2048200",
    "end": "2054169"
  },
  {
    "text": "can occur so um all right I'm gonna skip to that stuff we've learned yeah so like",
    "start": "2054169",
    "end": "2064280"
  },
  {
    "start": "2060000",
    "end": "2060000"
  },
  {
    "text": "I said with regards to performance you know it was very much a practice of optimizing the the speed at which the",
    "start": "2064280",
    "end": "2072169"
  },
  {
    "text": "controller could work through one tenant when minimal things had changed when we reach about a thousand tenants the",
    "start": "2072169",
    "end": "2080060"
  },
  {
    "text": "cluster started falling apart miraculously in a number of different ways so we kind of pointed at that and",
    "start": "2080060",
    "end": "2085849"
  },
  {
    "text": "said alright that's the most that's the like max number of tenants we're going to deploy in a cluster we started",
    "start": "2085849",
    "end": "2091190"
  },
  {
    "text": "scaling to more clusters so you know keep in mind this number may be different for you but that's where it was for us we knew that we you we knew",
    "start": "2091190",
    "end": "2098750"
  },
  {
    "text": "that we were going to have a one cluster max I'll answer your question at the end because I just don't have much time",
    "start": "2098750",
    "end": "2103940"
  },
  {
    "text": "right now another interesting thing thing we learned optimizing for customer",
    "start": "2103940",
    "end": "2110000"
  },
  {
    "start": "2105000",
    "end": "2105000"
  },
  {
    "text": "time to value when people sign up for your product they want to start getting value as quickly as possible obviously so in order to so I'll take that we",
    "start": "2110000",
    "end": "2116960"
  },
  {
    "text": "started creating we added a new state of tenants which were unallocated tenants",
    "start": "2116960",
    "end": "2122599"
  },
  {
    "text": "so we would have kind of a worker keeping a pool of like 10 or 20 unallocated tenants and then when",
    "start": "2122599",
    "end": "2128420"
  },
  {
    "text": "someone signed up we would just allocate that tenant and drop them instantly into",
    "start": "2128420",
    "end": "2133760"
  },
  {
    "text": "it so that they didn't have to wait for you know getting an email and having to go back into the application so that",
    "start": "2133760",
    "end": "2138950"
  },
  {
    "text": "they could convert they would just sign up and immediately be dropped into a user experience you know so that's",
    "start": "2138950",
    "end": "2145520"
  },
  {
    "text": "possible to do and as any product person will tell you this was super important",
    "start": "2145520",
    "end": "2150619"
  },
  {
    "text": "we did it really early and I encourage you to as well if you go down this path another thing we learned is health",
    "start": "2150619",
    "end": "2157790"
  },
  {
    "start": "2154000",
    "end": "2154000"
  },
  {
    "text": "checking so initially when we were doing this we would go through the in table we'd like synchronize a tenant and make",
    "start": "2157790",
    "end": "2164000"
  },
  {
    "text": "all of the we would like you know create a deployment we would create a service we would create all the API resources by",
    "start": "2164000",
    "end": "2169880"
  },
  {
    "text": "interacting with the kubernetes api and then we would just be like ok we're done and move on to the next",
    "start": "2169880",
    "end": "2175190"
  },
  {
    "text": "that wound up overloading the kubernetes api because we would basically go",
    "start": "2175190",
    "end": "2180380"
  },
  {
    "text": "through all of the tenants make all of these operations and then all of these things would be pending and the kubernetes api server would be trying to",
    "start": "2180380",
    "end": "2187340"
  },
  {
    "text": "interact with all of the different cubelets and it was it was a pain so what we did was um at the end of the",
    "start": "2187340",
    "end": "2193940"
  },
  {
    "text": "synchronization loop we healthcheck the tenant and wait and block until everything is deployed as we want it to",
    "start": "2193940",
    "end": "2199880"
  },
  {
    "text": "so that the parallels parallelization of the control loop that we're operating on",
    "start": "2199880",
    "end": "2206560"
  },
  {
    "text": "influences how many concurrent tenants were operating on so that we don't get",
    "start": "2206560",
    "end": "2212930"
  },
  {
    "text": "to a point where we're you know where every single namespace has something",
    "start": "2212930",
    "end": "2218930"
  },
  {
    "text": "going on in it so you know we can adjust the parallelism of the work queue and that is the total number of tenants that",
    "start": "2218930",
    "end": "2226010"
  },
  {
    "text": "will ever be operated on at one time that's interesting so just to sum things",
    "start": "2226010",
    "end": "2231860"
  },
  {
    "text": "up situations where this architecture works really well is if you have a relatively small number of relatively",
    "start": "2231860",
    "end": "2238940"
  },
  {
    "text": "large customers that have relatively unique resource requirements where you",
    "start": "2238940",
    "end": "2245000"
  },
  {
    "text": "can really take advantage of your ability to fine tune each different tenant that's really awesome",
    "start": "2245000",
    "end": "2252650"
  },
  {
    "text": "if you have application components were in several different languages this is really nice because you can kind of piece them all together and the tenant",
    "start": "2252650",
    "end": "2258440"
  },
  {
    "text": "abstraction allows you to do that really easily that's awesome situations where the",
    "start": "2258440",
    "end": "2264230"
  },
  {
    "start": "2263000",
    "end": "2263000"
  },
  {
    "text": "starchitect doesn't really work out that well is if you have a very large number of very small tenants because the thing",
    "start": "2264230",
    "end": "2271340"
  },
  {
    "text": "that you're gonna optimize is the minimal cost like you're gonna be able to compact a single instance of your",
    "start": "2271340",
    "end": "2278210"
  },
  {
    "text": "application as small as possible and that's great because it gives you a single point where you can be like okay well we know one tenant costs us a",
    "start": "2278210",
    "end": "2284420"
  },
  {
    "text": "dollar a month to run so we need to make that 30 cents and you know then we'll be",
    "start": "2284420",
    "end": "2290060"
  },
  {
    "text": "mega profitable but if you have just a ton of customers that are so small that",
    "start": "2290060",
    "end": "2296630"
  },
  {
    "text": "you need to just run so many of these tenants than the economics of that probably just won't really work out for",
    "start": "2296630",
    "end": "2301790"
  },
  {
    "text": "you if your data security requirements aren't very stringent the juice might not be worth the school",
    "start": "2301790",
    "end": "2307700"
  },
  {
    "text": "you know this is very much a like data isolation security effort so if you don't really care about that this might",
    "start": "2307700",
    "end": "2313970"
  },
  {
    "text": "also might not be a great move for you and if you don't like writing go you probably won't like interacting with the kubernetes api so keep that in mind like",
    "start": "2313970",
    "end": "2322849"
  },
  {
    "start": "2322000",
    "end": "2322000"
  },
  {
    "text": "I said general benefits of this approach is that you get really reliable 10g isolation outages in a component of a",
    "start": "2322849",
    "end": "2329480"
  },
  {
    "text": "tenant are generally very confined to one tenant so you know if you're you",
    "start": "2329480",
    "end": "2335869"
  },
  {
    "text": "know back-end goes down for because of some random thing that's happening it generally only affects that one customer",
    "start": "2335869",
    "end": "2341839"
  },
  {
    "text": "which is really nice it completely decouples the infer teams from the product development teams which",
    "start": "2341839",
    "end": "2347150"
  },
  {
    "text": "is awesome the CR D is a really nice clean typed interface for everything",
    "start": "2347150",
    "end": "2353150"
  },
  {
    "text": "that can be different about each tenant so if something needs to be tweaked or modified add it to the CR D that creates",
    "start": "2353150",
    "end": "2359299"
  },
  {
    "text": "a really nice interface for that and this all of this ecosystem is really fun and exciting and if you do stuff like",
    "start": "2359299",
    "end": "2365270"
  },
  {
    "text": "this it'll be easy to find really smart people that want to work with you because they want to work on this technology to some pain points of this",
    "start": "2365270",
    "end": "2372890"
  },
  {
    "start": "2371000",
    "end": "2371000"
  },
  {
    "text": "approach or you have to really maintain a strict culture of articulating your",
    "start": "2372890",
    "end": "2378440"
  },
  {
    "text": "operations tasks in go code so if your SRE team is full of people that don't",
    "start": "2378440",
    "end": "2384500"
  },
  {
    "text": "like writing go or and don't like you know everything that you do for a tenant",
    "start": "2384500",
    "end": "2390319"
  },
  {
    "text": "needs to be scaled across all of your tenants so you need to incorporate all of these kind of individual tasks into",
    "start": "2390319",
    "end": "2396410"
  },
  {
    "text": "some mechanism in to go software so if your SRE team is really down to",
    "start": "2396410",
    "end": "2401720"
  },
  {
    "text": "completely manage operations as a go software development project then is",
    "start": "2401720",
    "end": "2407510"
  },
  {
    "text": "awesome if that's not what you're looking to do don't do this for sure because that's for sure what you're gonna be doing the other downside I'd",
    "start": "2407510",
    "end": "2414650"
  },
  {
    "text": "say the big downside of this is most people don't bend kubernetes this way they don't try to run a lot of really",
    "start": "2414650",
    "end": "2422960"
  },
  {
    "text": "small tenants or a lot of really small namespaces rather you know kubernetes",
    "start": "2422960",
    "end": "2428059"
  },
  {
    "text": "says that the limit of pods on a node is 110 if you try and pack as many reach",
    "start": "2428059",
    "end": "2435020"
  },
  {
    "text": "the pods as possible onto a tenon and you start approaching that number things start to hang up and get really",
    "start": "2435020",
    "end": "2441730"
  },
  {
    "text": "sketchy in really interesting ways also once you scale past one cluster custom",
    "start": "2441730",
    "end": "2447519"
  },
  {
    "text": "resource definitions don't really work well it allowing you articulate multi cluster topics or ideas that span",
    "start": "2447519",
    "end": "2453309"
  },
  {
    "text": "clusters and you know obviously observability is a constant challenge",
    "start": "2453309",
    "end": "2458440"
  },
  {
    "text": "and the fact that there is no server-side apply yet makes a lot of",
    "start": "2458440",
    "end": "2463569"
  },
  {
    "text": "these kinds of operations somewhat unsafe so there's a multi-tenancy working group that's doing really",
    "start": "2463569",
    "end": "2469480"
  },
  {
    "start": "2468000",
    "end": "2468000"
  },
  {
    "text": "interesting stuff that's led by david Oppenheimer who was one of the people who was wrote the kubernetes research",
    "start": "2469480",
    "end": "2477789"
  },
  {
    "text": "paper which is awesome so he's written a lot of great documents as is Jesse on the concepts with multi-tenancy that are",
    "start": "2477789",
    "end": "2484210"
  },
  {
    "text": "you know super worth a read there's also a new lead of that working group named",
    "start": "2484210",
    "end": "2489339"
  },
  {
    "text": "Tasha who I haven't met but I'm looking forward to working with you know there's a lot of great stuff going on in this",
    "start": "2489339",
    "end": "2495609"
  },
  {
    "text": "working group but they're mostly focused on establishing definitions and you know working groups aren't long-lived and",
    "start": "2495609",
    "end": "2501999"
  },
  {
    "text": "they don't produce code so you know based on what you like to contribute",
    "start": "2501999",
    "end": "2507369"
  },
  {
    "text": "that may or may not be something that you want to get involved with and the other thing is lesser which is kind of a",
    "start": "2507369",
    "end": "2513249"
  },
  {
    "text": "shell I started working on a version of this that is open source and it's",
    "start": "2513249",
    "end": "2518529"
  },
  {
    "text": "basically just a shell of a controller for me to work on open source you know multi-tenancy concepts so if",
    "start": "2518529",
    "end": "2525730"
  },
  {
    "text": "you are interested in working on something like this or you want something like this in your organization and you want to work together on it let",
    "start": "2525730",
    "end": "2532660"
  },
  {
    "text": "me know and maybe we can make something that's a little more generic for your use case I don't think I have time for questions but that's all my contact",
    "start": "2532660",
    "end": "2539079"
  },
  {
    "text": "information and thank you all for sticking with me",
    "start": "2539079",
    "end": "2543359"
  }
]