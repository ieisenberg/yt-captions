[
  {
    "text": "uh thanks everyone for joining the session today uh after a break uh hope you had a nice break so uh we are going",
    "start": "1120",
    "end": "7919"
  },
  {
    "text": "to start the session now uh let me introduce myself uh I am",
    "start": "7919",
    "end": "15599"
  },
  {
    "text": "Sumit matur uh engineering manager in intute of traffic team and with me uh I",
    "start": "15599",
    "end": "21000"
  },
  {
    "text": "have shushant he is a traffic lead in in and our topic uh is scaling service MH",
    "start": "21000",
    "end": "28000"
  },
  {
    "text": "uh selfservice Beyond 300 clusters so uh we are going to uh talk about what is",
    "start": "28000",
    "end": "33600"
  },
  {
    "text": "scaling means here what is self service means here what is that uh 300 cluster so we are going to break down all of",
    "start": "33600",
    "end": "39920"
  },
  {
    "text": "this uh in next 30 minutes uh let's get a started what is",
    "start": "39920",
    "end": "46520"
  },
  {
    "text": "intute is and what we have done so intute is a fintech company uh based out of us and it has uh accounting and tax",
    "start": "46520",
    "end": "54079"
  },
  {
    "text": "products uh and we believe in open source and some of our uh open source",
    "start": "54079",
    "end": "59640"
  },
  {
    "text": "contri itions are like Argo Admiral and at the end we are end user customers",
    "start": "59640",
    "end": "64878"
  },
  {
    "text": "also like kubernetes sto Prometheus uh this is the scale at uh",
    "start": "64879",
    "end": "71920"
  },
  {
    "text": "which we operate uh like more than 300 plus kubernetes clusters 16,000 plus",
    "start": "71920",
    "end": "77080"
  },
  {
    "text": "name spaces more than 2,000 microservices so it's like a factory of microservices that we have and then more",
    "start": "77080",
    "end": "83320"
  },
  {
    "text": "than thousands of teams with 10,000 developers who are using our platforms and uh we are on the Journey of uh",
    "start": "83320",
    "end": "89560"
  },
  {
    "text": "modern s platform and building the lot of abstraction uh so that we ease the life of the",
    "start": "89560",
    "end": "96280"
  },
  {
    "text": "developers uh from the traffic team uh this is our contribution to the sto Community the Admiral uh you can check",
    "start": "97000",
    "end": "104280"
  },
  {
    "text": "uh more about Admiral on the gab link but at a high level uh Admiral allows us for the cross-cluster communication and",
    "start": "104280",
    "end": "111040"
  },
  {
    "text": "the service Discovery in service mesh",
    "start": "111040",
    "end": "114680"
  },
  {
    "text": "world uh let's uh before we go uh Deep dive in like what's the today's topic and everything I just want to make sure",
    "start": "116159",
    "end": "122920"
  },
  {
    "text": "like uh we all understand uh some of the basic terms of traffic so may I know uh",
    "start": "122920",
    "end": "128280"
  },
  {
    "text": "how many of you know API Gateway good uh do you know uh what sto",
    "start": "128280",
    "end": "137959"
  },
  {
    "text": "is nice do you know what service",
    "start": "137959",
    "end": "143760"
  },
  {
    "text": "meshes thanks so I see a good amount of audience who knows these terminologies and there are few who don't know",
    "start": "143879",
    "end": "150400"
  },
  {
    "text": "so let's uh start with that understanding those basic terminologies of traffic and uh so this is our agenda",
    "start": "150400",
    "end": "158200"
  },
  {
    "text": "where we are going to cover what is API Gateway what is service mesh what are the common functionalities like rate",
    "start": "158200",
    "end": "163720"
  },
  {
    "text": "limiting traffic dialing what's problem uh statement why we are here why you are here and then the solutioning part of it",
    "start": "163720",
    "end": "171159"
  },
  {
    "text": "and what's there in the road map for us so uh let's look at uh what API",
    "start": "171159",
    "end": "177440"
  },
  {
    "text": "Gateway is so uh consider uh a developer who is",
    "start": "177440",
    "end": "182480"
  },
  {
    "text": "developing the API is writing the business Logic for your company uh and his core uh uh work is just to write an",
    "start": "182480",
    "end": "189840"
  },
  {
    "text": "API which can generate the revenue for the company and as he develops the apis they get their first client and they",
    "start": "189840",
    "end": "196360"
  },
  {
    "text": "shared the API specs uh all the authentication mechanism and it works well no issues with that but as the",
    "start": "196360",
    "end": "203040"
  },
  {
    "text": "spectrum of the business grows you get your more clients like desktop client mobile client browser clients uh even",
    "start": "203040",
    "end": "210280"
  },
  {
    "text": "the applications within your own ecosystem or a third party applications which use your capability uh to develop",
    "start": "210280",
    "end": "217000"
  },
  {
    "text": "a new capability so now if you look at it this the developer who was developing",
    "start": "217000",
    "end": "222720"
  },
  {
    "text": "the business logic he has to take care a lot more things now like how the authentication will work for all these",
    "start": "222720",
    "end": "228319"
  },
  {
    "text": "different kinds of clients how the authorization will work what if one of the client start misusing the uh apis",
    "start": "228319",
    "end": "235000"
  },
  {
    "text": "and they overload you or do attack you so how do I do the rate limiting how does the traffic will happen in case uh",
    "start": "235000",
    "end": "241200"
  },
  {
    "text": "the users uh like you know in case your business expense and you want to dial the traffic depending on the HTTP apis",
    "start": "241200",
    "end": "247120"
  },
  {
    "text": "or the type of the clients so that's where uh your API Gateway comes in picture it takes care",
    "start": "247120",
    "end": "254720"
  },
  {
    "text": "uh of like you know uh uh handling all those um uh operations like uh traffic",
    "start": "254720",
    "end": "261600"
  },
  {
    "text": "dialing rate limiting authentication authorization so all your clients connects to the AP Gateway it takes care",
    "start": "261600",
    "end": "268199"
  },
  {
    "text": "of all those uh things and then forward the request to your backend service so",
    "start": "268199",
    "end": "273560"
  },
  {
    "text": "that's what uh API Gateway at high level and uh in intute uh we have been",
    "start": "273560",
    "end": "279800"
  },
  {
    "text": "developing API Gateway for last 10 years due to our customs uh requirement so we",
    "start": "279800",
    "end": "285320"
  },
  {
    "text": "are not using the uh whatever there is uh open in the market but we have developed it over last uh 10 to 12 years",
    "start": "285320",
    "end": "291199"
  },
  {
    "text": "our own API Gateway which take care of all these uh like you know authentication authorization rate",
    "start": "291199",
    "end": "296600"
  },
  {
    "text": "limiting and whatnot so uh with this understanding of API Gateway Let's uh cover what service",
    "start": "296600",
    "end": "305320"
  },
  {
    "text": "meshes so uh in kubernetes uh we know like this is generally the typical",
    "start": "305320",
    "end": "311160"
  },
  {
    "text": "architecture where uh you have a service deployed in one cluster communicating to another service uh in the same cluster",
    "start": "311160",
    "end": "317560"
  },
  {
    "text": "or to a different clusters right now uh if you have to get the same capability",
    "start": "317560",
    "end": "323280"
  },
  {
    "text": "that we have discussed about the API Gateway you need something like this where your service will communicate like",
    "start": "323280",
    "end": "329880"
  },
  {
    "text": "for example in this case S1 communicates to service S3 by an API Gateway now if",
    "start": "329880",
    "end": "336080"
  },
  {
    "text": "you see something uh weird here is your service is going out of the cluster to a",
    "start": "336080",
    "end": "341280"
  },
  {
    "text": "different VPC or to a different networking Zone and then going back to a kubernetes cluster and all that is",
    "start": "341280",
    "end": "346720"
  },
  {
    "text": "happening within your own ecosystem boundary so this is not what we really want in the kubernetes world we have a",
    "start": "346720",
    "end": "354000"
  },
  {
    "text": "concept of pods containers so what we really want is something like this each pod should get their own uh you know a",
    "start": "354000",
    "end": "361039"
  },
  {
    "text": "mini API Gateway which take care of all those things that we have talked about and uh in service mesh world the",
    "start": "361039",
    "end": "367759"
  },
  {
    "text": "capability has been provided by sto so sto take cares of all your traffic management capabilities and uh it allows",
    "start": "367759",
    "end": "374919"
  },
  {
    "text": "you for service to service communication and that's what we call as service mesh so uh with these two uh",
    "start": "374919",
    "end": "381639"
  },
  {
    "text": "terminologies being clarified like what is Gateway what is service mesh let's go and understand some of the core capabilities that they provide so that",
    "start": "381639",
    "end": "388400"
  },
  {
    "text": "uh we can build the story that uh we for which we are here let's consider uh the",
    "start": "388400",
    "end": "393919"
  },
  {
    "text": "rate limiting what is rate limiting is about so uh rate limiting means uh how",
    "start": "393919",
    "end": "399319"
  },
  {
    "text": "much transactions are allowed to be served for your service so for example let's look with an example in this case",
    "start": "399319",
    "end": "407080"
  },
  {
    "text": "a service which is backend by API Gateway or service smash it allows only one transactions per minute so how does",
    "start": "407080",
    "end": "413360"
  },
  {
    "text": "it work so at the beginning of the uh second you get your first request it is",
    "start": "413360",
    "end": "419400"
  },
  {
    "text": "with in the limit so what will happen is the request will get forwarded to the",
    "start": "419400",
    "end": "426319"
  },
  {
    "text": "backend service now after some time you get another request let's say at the 30th",
    "start": "426319",
    "end": "432639"
  },
  {
    "text": "second you get a second request at this point of time what Gateway service M will do is it will reject it because",
    "start": "432639",
    "end": "439520"
  },
  {
    "text": "that's AC crossing your threshold so that is what we call at a high level rate",
    "start": "439520",
    "end": "446039"
  },
  {
    "text": "limiting now uh let's understand what is traffic dialing uh in our use case",
    "start": "446039",
    "end": "452919"
  },
  {
    "text": "is uh let's look at a client and a service so a client is connecting to a service which is deployed in a coones",
    "start": "452919",
    "end": "460080"
  },
  {
    "text": "over uh let's say deployment one and all the request is going to that deployment this works well uh when your",
    "start": "460080",
    "end": "467159"
  },
  {
    "text": "uh service is is small but as your uh business requirement goes what exactly happen is you Shard your application",
    "start": "467159",
    "end": "474000"
  },
  {
    "text": "depending on the use cases like either HTTP verbs or uh your uh depending on your application ation right so in",
    "start": "474000",
    "end": "481400"
  },
  {
    "text": "reality it's like this where your service is deployed over a multiple deployments right so the scenarios can",
    "start": "481400",
    "end": "488560"
  },
  {
    "text": "be like this where your clients are connecting to your application uh over like for example in this case get V1",
    "start": "488560",
    "end": "495039"
  },
  {
    "text": "connects to deployment 2 update calls goes to deployment one and get V2 calls goes to deployment 3 that's how you sh",
    "start": "495039",
    "end": "501800"
  },
  {
    "text": "your application right so that's what we call as uh traffic dialing and if you look uh one more thing here is what we",
    "start": "501800",
    "end": "509720"
  },
  {
    "text": "want is whenever a users makes a call to the service before it uh before it exits the",
    "start": "509720",
    "end": "516680"
  },
  {
    "text": "NY proxy or the St proxy on the client side that it should know okay where it has to go right so your traffic dialing",
    "start": "516680",
    "end": "522039"
  },
  {
    "text": "really really need to happen on the client side because if it reaches on the service s you can do that but that's a",
    "start": "522039",
    "end": "528160"
  },
  {
    "text": "costly operation that you need to redirect keep on redirecting the request right so that's we call as uh traffic",
    "start": "528160",
    "end": "534200"
  },
  {
    "text": "dialing so now uh with uh basic understanding of Gateway service mesh rate limiting and traffic dialing let's",
    "start": "534200",
    "end": "541000"
  },
  {
    "text": "understand like what is the complexity uh that happens uh when you have a scale of 300 plus clusters running in the",
    "start": "541000",
    "end": "547279"
  },
  {
    "text": "production uh what can you know uh what can go wrong you know when these",
    "start": "547279",
    "end": "552519"
  },
  {
    "text": "capabilities uh work at a scale so uh typically in intute like",
    "start": "552519",
    "end": "558040"
  },
  {
    "text": "whenever we start a service whenever we developed a new microservices we start with one",
    "start": "558040",
    "end": "563880"
  },
  {
    "text": "region and then uh as the business grows we expanded to the second region and uh",
    "start": "563880",
    "end": "570240"
  },
  {
    "text": "typically like all the services are behind the API Gateway they Tak the traffic from API Gateway and we call it",
    "start": "570240",
    "end": "576920"
  },
  {
    "text": "as North South traffic so we know like you know any traffic which is coming",
    "start": "576920",
    "end": "582320"
  },
  {
    "text": "over an internet will goes through an AP Gateway and we call it as north south now let's consider a scenario",
    "start": "582320",
    "end": "589040"
  },
  {
    "text": "where uh you have a service within which is within your own ecosystem so how does uh this",
    "start": "589040",
    "end": "596399"
  },
  {
    "text": "communication will happen if you remember site back I talked about",
    "start": "596399",
    "end": "601600"
  },
  {
    "text": "service mesh so any service which is deployed within your own ecosystem boundary uh in the kubernetes cluster",
    "start": "601600",
    "end": "608519"
  },
  {
    "text": "you use a service mesh so this is a typical architecture and intute for any of the services that we have any",
    "start": "608519",
    "end": "616160"
  },
  {
    "text": "internet traffic comes over an API Gateway any traffic within the intu boundaries generally goes through a service",
    "start": "616160",
    "end": "623279"
  },
  {
    "text": "mesh now uh let's configure uh the rate limiting in this architecture",
    "start": "624920",
    "end": "630040"
  },
  {
    "text": "so we have our service deployed with this architecture and if I have to uh deploy a rate limiting for North South",
    "start": "630040",
    "end": "637160"
  },
  {
    "text": "traffic where should I deploy the traffic for uh the rate limiting for North South",
    "start": "637160",
    "end": "642200"
  },
  {
    "text": "traffic it is at API Gateway right so you configure the rate limiting for region one you",
    "start": "642200",
    "end": "648680"
  },
  {
    "text": "configure the rate limiting for your region two and your north south rate limiting is",
    "start": "648680",
    "end": "654160"
  },
  {
    "text": "done now let's look at what should I do for uh east west traffic Where do I to",
    "start": "654160",
    "end": "659519"
  },
  {
    "text": "configure the rate limiting for East West traffic it is a service cluster so you configure your rate limiting on the",
    "start": "659519",
    "end": "665920"
  },
  {
    "text": "cluster similarly on the region you configure and this works really well for your east west traffic but if you see",
    "start": "665920",
    "end": "673680"
  },
  {
    "text": "what we have done is we have configured the rate limiting at Gateway we have configured the rate limiting at service",
    "start": "673680",
    "end": "679240"
  },
  {
    "text": "mesh so how do we keep them in sync right that's a great uh that's a real problem now uh in our case like uh where",
    "start": "679240",
    "end": "686200"
  },
  {
    "text": "we have started our journey uh like you know 10 to 12 years back uh with only a p Gateway until adopted",
    "start": "686200",
    "end": "691760"
  },
  {
    "text": "the sto there were many services where which have started configuring rate limiting at Gateway then at service mesh",
    "start": "691760",
    "end": "698720"
  },
  {
    "text": "so we have a great challenge like you know all these 2,000 Services which are in running in production how to keep this in sync so this is uh one of our uh",
    "start": "698720",
    "end": "707560"
  },
  {
    "text": "problem statement let's keep uh this problem statement uh and let's look how to do",
    "start": "707560",
    "end": "713279"
  },
  {
    "text": "the traffic dialing again uh going back to our uh deployment architecture",
    "start": "713279",
    "end": "721160"
  },
  {
    "text": "so uh where should I configure the traffic Dialing for North South",
    "start": "721160",
    "end": "726920"
  },
  {
    "text": "traffic it is at API Gateway because that's where your internet traffic is coming so you configure the traffic",
    "start": "726920",
    "end": "732680"
  },
  {
    "text": "dialing at API",
    "start": "732680",
    "end": "736000"
  },
  {
    "text": "Gateway but what about uh east west traffic where I need to configure for East West",
    "start": "738279",
    "end": "744399"
  },
  {
    "text": "traffic if you remember uh I just talked about a few slides back what traffic dialing is and where exactly we need to",
    "start": "744399",
    "end": "750760"
  },
  {
    "text": "configure so the traffic dialing needs to happen at client site because if the request reaches on the service side then",
    "start": "750760",
    "end": "758120"
  },
  {
    "text": "there is no point of doing the dialing right we really want to handle it on the client side itself before the request",
    "start": "758120",
    "end": "763360"
  },
  {
    "text": "exit the St proxy and that's how you configure your",
    "start": "763360",
    "end": "768440"
  },
  {
    "text": "east west traffic dialing so this looks uh very good like you know you worked with your client you configure all their",
    "start": "768440",
    "end": "775360"
  },
  {
    "text": "uh like you know yaml uh with all the traffic dialing rules that you really want according to their timeline and it works",
    "start": "775360",
    "end": "781560"
  },
  {
    "text": "perfectly well if you have just one client but now what happens if you have hundreds of such client in our case like",
    "start": "781560",
    "end": "788000"
  },
  {
    "text": "you know a given service can have hundreds of clients who are using this and they are spread across the Clusters",
    "start": "788000",
    "end": "793639"
  },
  {
    "text": "so you can have something scenarios like this where your clients are running on",
    "start": "793639",
    "end": "798959"
  },
  {
    "text": "hundreds of clusters connecting to your service so what you need to do again you work with your second client get their",
    "start": "798959",
    "end": "805880"
  },
  {
    "text": "timeline you are on their Mercy whether they are available and you configure your traffic dialing on client 2 but",
    "start": "805880",
    "end": "812800"
  },
  {
    "text": "what happens at this during this phase you are really dependent on them and that makes you frustrated like you",
    "start": "812800",
    "end": "818040"
  },
  {
    "text": "cannot scale your application because you have a dependency on them and so forth so you work with your third client",
    "start": "818040",
    "end": "823839"
  },
  {
    "text": "fourth client and at then you are really really frustrated and annoyed like oh this is not what we really want at the",
    "start": "823839",
    "end": "829839"
  },
  {
    "text": "scale of like you know 300 plus clusters what we really want is something a different thing which can help us in",
    "start": "829839",
    "end": "835880"
  },
  {
    "text": "doing all these things uh seamlessly irrespective of dependenc on the clients so let me call suant to discuss the",
    "start": "835880",
    "end": "843040"
  },
  {
    "text": "solutioning part of it uh thanks for uh setting the context",
    "start": "843040",
    "end": "851120"
  },
  {
    "text": "for this uh for our talk today they explaining us the basics so let's get",
    "start": "851120",
    "end": "857320"
  },
  {
    "text": "started so as said we have we're going to discuss two problems uh in our service M ad option with API Gateway uh",
    "start": "857320",
    "end": "865079"
  },
  {
    "text": "that we already had uh so first thing yes service m distribution and",
    "start": "865079",
    "end": "870759"
  },
  {
    "text": "reconcilation U at scale so we deploy stod in every single cluster so that",
    "start": "870759",
    "end": "876480"
  },
  {
    "text": "means we have to um the the virtual the the client side configurations really",
    "start": "876480",
    "end": "881800"
  },
  {
    "text": "have to be distributed in every single cluster right so we have control hiso control plane running in every single",
    "start": "881800",
    "end": "887800"
  },
  {
    "text": "cluster so now the problem is if I have a service um 300 different clients",
    "start": "887800",
    "end": "894360"
  },
  {
    "text": "hosted on 300 different clusters let's say it's a pain to really go work with everybody to uh distribute the",
    "start": "894360",
    "end": "901839"
  },
  {
    "text": "configurations and it's a drag on our developer velocity so the second problem is uh again as suit mentioned we have an",
    "start": "901839",
    "end": "909880"
  },
  {
    "text": "API Gateway which we have developed over the last decade and we've kept improving it uh but now service mesh is much more",
    "start": "909880",
    "end": "916680"
  },
  {
    "text": "recent right so um and it solves a completely different set of traffic the east west traffic AP Gateway sols the",
    "start": "916680",
    "end": "923600"
  },
  {
    "text": "north nor traffic so any configuration um trate limiting as I said or traffic",
    "start": "923600",
    "end": "929639"
  },
  {
    "text": "dialing has to be done on both the sides and they all have to be kept in sync there should not be any drift right so",
    "start": "929639",
    "end": "936759"
  },
  {
    "text": "imagine thousands of uh developers at a company doing uh working on this there",
    "start": "936759",
    "end": "941920"
  },
  {
    "text": "is going to be some drift and some incidents that are going to be cost because of this uh so we'll walk you",
    "start": "941920",
    "end": "948199"
  },
  {
    "text": "through our story of how we uh went about solving this uh problem now so",
    "start": "948199",
    "end": "954120"
  },
  {
    "text": "there are many different ways you can solve this uh uh so this is one of the ways uh that we've solved it at",
    "start": "954120",
    "end": "961480"
  },
  {
    "text": "into so let's tackle the config distribution uh problem in the service mesh first to solve this we introduced a",
    "start": "961480",
    "end": "968720"
  },
  {
    "text": "new component called uh navic so let's use the same example that",
    "start": "968720",
    "end": "974120"
  },
  {
    "text": "uh suit um started us with so the service is hosted on uh two different uh",
    "start": "974120",
    "end": "980120"
  },
  {
    "text": "clusters in two different regions we introduce navic navic is running in a uh",
    "start": "980120",
    "end": "986319"
  },
  {
    "text": "Global control plane so this means it's not running in every single cluster we have it running in one cluster in West",
    "start": "986319",
    "end": "993240"
  },
  {
    "text": "um in in region one and um we also have Dr solution which we are not going to uh talk about today the Naik also runs in",
    "start": "993240",
    "end": "1000240"
  },
  {
    "text": "the other region as well so this component navic is",
    "start": "1000240",
    "end": "1005600"
  },
  {
    "text": "monitoring the API servers of every single cluster right so and it also",
    "start": "1005600",
    "end": "1010839"
  },
  {
    "text": "knows where a particular service is hosted so in this case it's really these",
    "start": "1010839",
    "end": "1016000"
  },
  {
    "text": "two clusters right so how does it get to know we use annotations so we have introduced",
    "start": "1016000",
    "end": "1022560"
  },
  {
    "text": "an annotation called identifier the value is the same then navic thinks that hey it's the same service which is",
    "start": "1022560",
    "end": "1028839"
  },
  {
    "text": "hosted on these two different clusters and uh yes and what we have",
    "start": "1028839",
    "end": "1036438"
  },
  {
    "text": "also done is we introduced a new custom object um we we talk about abstractions going forward now so this is the first",
    "start": "1036439",
    "end": "1042558"
  },
  {
    "text": "abstraction that we introduced which is a traffic config custom object um and uh",
    "start": "1042559",
    "end": "1048640"
  },
  {
    "text": "this is really used by uh the owners of the service in this case the service fund to control um the runtime behavior",
    "start": "1048640",
    "end": "1057000"
  },
  {
    "text": "of the service mesh right so again nav is continuously monitoring changes to this custom object um and uh the config",
    "start": "1057000",
    "end": "1065799"
  },
  {
    "text": "uh looks something like this so you have options for updating rate limiting uh",
    "start": "1065799",
    "end": "1071160"
  },
  {
    "text": "traffic dialing timeouts cars and a bunch of other things so let's say uh",
    "start": "1071160",
    "end": "1078159"
  },
  {
    "text": "the owner of this service wants to change uh the rate limmit of uh the service from 50 to 75",
    "start": "1078159",
    "end": "1084600"
  },
  {
    "text": "DPS now we immediately identifies that hey it's a config change that's done on that service it knows where the service",
    "start": "1084600",
    "end": "1091559"
  },
  {
    "text": "is hosted that these two different uh clusters and uh what it's going to do",
    "start": "1091559",
    "end": "1096640"
  },
  {
    "text": "now is it's going to call the API server of uh region one of the particular",
    "start": "1096640",
    "end": "1102960"
  },
  {
    "text": "cluster and write um a particular config uh what is this real config so at into",
    "start": "1102960",
    "end": "1110679"
  },
  {
    "text": "it we have written our own um custom uh rate limiting uh filters so this rate",
    "start": "1110679",
    "end": "1116520"
  },
  {
    "text": "limiting filter now has to be injected into uh the filter chain at a particular",
    "start": "1116520",
    "end": "1121559"
  },
  {
    "text": "location of U of un filter chain right so the way to do this uh in STO is using",
    "start": "1121559",
    "end": "1128080"
  },
  {
    "text": "a custom object called anoy filter so this essentially navic is generating the",
    "start": "1128080",
    "end": "1133480"
  },
  {
    "text": "envoy filter and uh that necessary configuration now it's updating the value from 50 to 75 and it's uh yeah",
    "start": "1133480",
    "end": "1140840"
  },
  {
    "text": "writing it to both these clusters and that's it right so what",
    "start": "1140840",
    "end": "1146600"
  },
  {
    "text": "we've done with this is we have abstracted uh the service level configurations so the service could be hosted on two clusters or 50 clusters or",
    "start": "1146600",
    "end": "1154000"
  },
  {
    "text": "100 clusters the owner of the service doesn't have to go you know update the",
    "start": "1154000",
    "end": "1160200"
  },
  {
    "text": "configurations across they just have to work with one uh custom object in one uh Global control plane and U na is going",
    "start": "1160200",
    "end": "1167880"
  },
  {
    "text": "to distributed across and make sure that there's no config uh issues right this",
    "start": "1167880",
    "end": "1173600"
  },
  {
    "text": "is this configuration an no filter that is generated is using an automation um so there there will not be",
    "start": "1173600",
    "end": "1180320"
  },
  {
    "text": "U scope for any config issues so let's go to the second part of U second",
    "start": "1180320",
    "end": "1186799"
  },
  {
    "text": "problem that um suit brought up which is the client site config distribution right so so to do this we really need a",
    "start": "1186799",
    "end": "1194640"
  },
  {
    "text": "way to model what are the different clients that a particular service has uh",
    "start": "1194640",
    "end": "1200039"
  },
  {
    "text": "so we are again uh we again contribute to Admiral as well so we've used the same custom object uh called",
    "start": "1200039",
    "end": "1206120"
  },
  {
    "text": "dependencies that we use in Admiral so what uh yeah again NAIC is continuously monitoring uh these dependencies this is",
    "start": "1206120",
    "end": "1213919"
  },
  {
    "text": "what U the dependency custom object uh would look like it says Hey the name is client that's the name of identifier uh",
    "start": "1213919",
    "end": "1222000"
  },
  {
    "text": "of a client and it says hey I'm dependent on service one service two and service",
    "start": "1222000",
    "end": "1227440"
  },
  {
    "text": "three uh sake of this discussion we have service one here so let's say yeah yeah",
    "start": "1227440",
    "end": "1234280"
  },
  {
    "text": "we service one has five different dependenc uh clients then we have five dependency objects let's introduce uh",
    "start": "1234280",
    "end": "1242679"
  },
  {
    "text": "the client into this discussion so we have uh the client one hosted on these two clusters again how does NAIC know",
    "start": "1242679",
    "end": "1249640"
  },
  {
    "text": "about it yes using the annotations it's monitoring those clusters so now it",
    "start": "1249640",
    "end": "1254679"
  },
  {
    "text": "knows where are all the clients hosted at this point let's say the",
    "start": "1254679",
    "end": "1260240"
  },
  {
    "text": "service owner of uh service one comes in and says hey I want to change the",
    "start": "1260240",
    "end": "1265360"
  },
  {
    "text": "traffic that is sent by this client uh I want to uh move all the gets to West and",
    "start": "1265360",
    "end": "1272360"
  },
  {
    "text": "reads to East or some any any of those changes essentially the config distribution has to happen on the client",
    "start": "1272360",
    "end": "1277960"
  },
  {
    "text": "side at this point again there's a config change now gets to know about it",
    "start": "1277960",
    "end": "1283080"
  },
  {
    "text": "and yes it's going to write it knows where the client is really hosted in which cluster is it hosted in it's going",
    "start": "1283080",
    "end": "1289799"
  },
  {
    "text": "to call the API server of um those clusters to distribute the custom",
    "start": "1289799",
    "end": "1295760"
  },
  {
    "text": "objects so in case of traffic dialing we have not built our own custom filters we",
    "start": "1295760",
    "end": "1301080"
  },
  {
    "text": "are using um the virtual service custom object that's provided by uh sto we just",
    "start": "1301080",
    "end": "1306880"
  },
  {
    "text": "configure the right values um and we write uh to the particular API server uh",
    "start": "1306880",
    "end": "1313559"
  },
  {
    "text": "in question in this uh the two clusters are getting updated so so if you really",
    "start": "1313559",
    "end": "1319360"
  },
  {
    "text": "look at it we were able to um what happen Okay so we were able to abstract",
    "start": "1319360",
    "end": "1326200"
  },
  {
    "text": "the service side changes as well as the client side changes as a service a user",
    "start": "1326200",
    "end": "1331559"
  },
  {
    "text": "a developer in interet at interet if they have you know deployments across",
    "start": "1331559",
    "end": "1338080"
  },
  {
    "text": "Services clients across Services all of that is attracted by by this so one",
    "start": "1338080",
    "end": "1344200"
  },
  {
    "text": "byproduct that we also got from this is now we can also handle break",
    "start": "1344200",
    "end": "1349880"
  },
  {
    "text": "um API changes or um you know yls that that keep changing the custom object",
    "start": "1349880",
    "end": "1355039"
  },
  {
    "text": "structure can change across uor uh releases so the mesh admins are also",
    "start": "1355039",
    "end": "1361640"
  },
  {
    "text": "happy about this right otherwise if we had to the decision of uh asking all our",
    "start": "1361640",
    "end": "1367679"
  },
  {
    "text": "users thousands of developers to just use the custom objects provided by sto directly and breaking API chain let's",
    "start": "1367679",
    "end": "1374559"
  },
  {
    "text": "say you want to change the API from V1 to V2 or some structure has to change in the yamel then essentially we have to",
    "start": "1374559",
    "end": "1381559"
  },
  {
    "text": "work with everybody at um inter right so that's uh not what we wanted and now we",
    "start": "1381559",
    "end": "1388039"
  },
  {
    "text": "are able to since everybody is working with the abstractions that is uh the virtual uh the traffic config object and",
    "start": "1388039",
    "end": "1394039"
  },
  {
    "text": "the dependency we are able to transparently uh roll out any breaking um esto changes",
    "start": "1394039",
    "end": "1400919"
  },
  {
    "text": "um as well across clusters so at this point of time uh",
    "start": "1400919",
    "end": "1406080"
  },
  {
    "text": "let's um start talking about the second big problem um that we had which is how",
    "start": "1406080",
    "end": "1412480"
  },
  {
    "text": "to control the config drift between the API Gateway that we already had and our service mesh as suit said we built our",
    "start": "1412480",
    "end": "1419600"
  },
  {
    "text": "API Gateway over the last uh decade improved it over the decade so we not using the new age U AP gateways uh",
    "start": "1419600",
    "end": "1426679"
  },
  {
    "text": "that's there but now how do we keep configurations in s if you look at it",
    "start": "1426679",
    "end": "1431960"
  },
  {
    "text": "finally API Gateway or service mesh it's the same set of parts that are finally going to get the request right so we",
    "start": "1431960",
    "end": "1438159"
  },
  {
    "text": "want Ed um a solution to keep these configurations in sync let's see how is",
    "start": "1438159",
    "end": "1443320"
  },
  {
    "text": "that done so this is uh how uh the self",
    "start": "1443320",
    "end": "1449400"
  },
  {
    "text": "service is currently done um at at into it we have a developer portal where",
    "start": "1449400",
    "end": "1454840"
  },
  {
    "text": "thousands of our Engineers um manage any requirement related to their development",
    "start": "1454840",
    "end": "1461559"
  },
  {
    "text": "needs can create uh new name spaces uh new AWS accounts and also configure our",
    "start": "1461559",
    "end": "1467640"
  },
  {
    "text": "API Gateway so the way this config is done is using a yaml again the yaml you can use to",
    "start": "1467640",
    "end": "1475960"
  },
  {
    "text": "change cost change uh rate limiting configurations change traffic dialing anything that you need um and if you",
    "start": "1475960",
    "end": "1483720"
  },
  {
    "text": "really look at it this uh this is uh this is where the inspiration came for",
    "start": "1483720",
    "end": "1489320"
  },
  {
    "text": "uh the traffic config that we spoke about in the previous slide you know so when we went through this uh exercise of",
    "start": "1489320",
    "end": "1496320"
  },
  {
    "text": "U defining hey what should the self experience for service mesh uh should be",
    "start": "1496320",
    "end": "1501640"
  },
  {
    "text": "like um we thought hey let's not introduce a completely new yaml and",
    "start": "1501640",
    "end": "1507200"
  },
  {
    "text": "educate thousands of Engineers at into it again um this yaml was already used",
    "start": "1507200",
    "end": "1513559"
  },
  {
    "text": "um for the last 5 six years to configure a Gateway folks were already um familiar",
    "start": "1513559",
    "end": "1519679"
  },
  {
    "text": "with the yam so we decided hey let's use the same uh yaml and add new Fields into this if it's relevant for service mesh",
    "start": "1519679",
    "end": "1527760"
  },
  {
    "text": "so and we also what we did is uh we went one step ahead and uh looked at what are",
    "start": "1527760",
    "end": "1533559"
  },
  {
    "text": "the commonly used features on our API Gateway um and we abstracted that into a simple uh UI as well right so any",
    "start": "1533559",
    "end": "1540880"
  },
  {
    "text": "changes into this UI finally gets reconciled uh into the Yul that we spoke about um and all of this gets stored in",
    "start": "1540880",
    "end": "1547840"
  },
  {
    "text": "a config store and um we have an API Gateway which uh essentially uses this",
    "start": "1547840",
    "end": "1554200"
  },
  {
    "text": "configuration so let's say somebody again changed the rate limit from 50 to 75 TPS this config change has to be",
    "start": "1554200",
    "end": "1562000"
  },
  {
    "text": "synced up all the way to API Gateway but uh you may ask hey somebody wakes up in the middle of the night makes a config",
    "start": "1562000",
    "end": "1567600"
  },
  {
    "text": "change how does the API Gateway get to know about this yeah we used standard um",
    "start": "1567600",
    "end": "1572880"
  },
  {
    "text": "inventing mechanism for this we have API Gateway um being a as a consumer to a",
    "start": "1572880",
    "end": "1578960"
  },
  {
    "text": "messaging service so any change uh we push a message to the messaging service um and API Gateway syncs the latest",
    "start": "1578960",
    "end": "1585919"
  },
  {
    "text": "config so that's how any config change is uh distributed all the way to the API",
    "start": "1585919",
    "end": "1591399"
  },
  {
    "text": "Gateway in a matter of um you know uh 12 to 15 seconds so at this point let's see how",
    "start": "1591399",
    "end": "1598640"
  },
  {
    "text": "we can um unify both the worlds the AP Gateway world and uh the service mesh um",
    "start": "1598640",
    "end": "1604640"
  },
  {
    "text": "world so we continue to keep um developer portal be the place for all the Self Service uh for this unified AP",
    "start": "1604640",
    "end": "1612039"
  },
  {
    "text": "Gateway and service mesh and we the same yaml and the UI was continued to be the",
    "start": "1612039",
    "end": "1617919"
  },
  {
    "text": "place for uh the self service at this point Let's uh merge both the worlds",
    "start": "1617919",
    "end": "1624679"
  },
  {
    "text": "right so the left panel that you see is uh API Gateway self service and the right side that you see is uh the right",
    "start": "1624679",
    "end": "1630559"
  },
  {
    "text": "panel is the service mesh um ecosystem that we have so na is the component as",
    "start": "1630559",
    "end": "1637039"
  },
  {
    "text": "we discussed which um abstracts all the sto configs it's the one that's uh",
    "start": "1637039",
    "end": "1642559"
  },
  {
    "text": "generating all the sto custom objects and distributing to all the Clusters so so but there is a problem",
    "start": "1642559",
    "end": "1650760"
  },
  {
    "text": "right so we spoke about dependencies and traffic config yaml that's there so somebody has to generate and modify this",
    "start": "1650760",
    "end": "1658360"
  },
  {
    "text": "we did not want thousands of developers getting access to this updating the the yaml no that's not what we wanted so we",
    "start": "1658360",
    "end": "1665679"
  },
  {
    "text": "really wanted this to be autogenerated uh so we wrote an adapter which again um",
    "start": "1665679",
    "end": "1672919"
  },
  {
    "text": "looks at the yamel that is uh responsible for API Gateway uh any change in there it gets to know about it",
    "start": "1672919",
    "end": "1678960"
  },
  {
    "text": "and uh reconciles those two yaml U that we spoke about those two custom objects that we spoke about so again we follow",
    "start": "1678960",
    "end": "1686799"
  },
  {
    "text": "the same uh mechanism somebody wants to change uh rate limit a message is uh",
    "start": "1686799",
    "end": "1693039"
  },
  {
    "text": "pushed to uh the messaging uh platform that we have the API Gateway gets it now the adapter is also a consumer to this",
    "start": "1693039",
    "end": "1700720"
  },
  {
    "text": "messaging service and now it knows that hey something changed the value of rate limit has changed from 50 to 75 uh let a",
    "start": "1700720",
    "end": "1708440"
  },
  {
    "text": "TPS and U it is it it knows about it now it makes a call to the config store and",
    "start": "1708440",
    "end": "1715279"
  },
  {
    "text": "reconciles uh these objects the traffic config and uh dependencies but now since this value",
    "start": "1715279",
    "end": "1721559"
  },
  {
    "text": "has changed now it gets to know about it since a custom object the traffic config is edited by the adapter nav gets to",
    "start": "1721559",
    "end": "1727600"
  },
  {
    "text": "know that hey the rate limit has changed from 50 to 75 and na also knows that hey",
    "start": "1727600",
    "end": "1733519"
  },
  {
    "text": "it's the service F which got modified it's going to generate those",
    "start": "1733519",
    "end": "1738600"
  },
  {
    "text": "Envoy filters that we spoke about into these two um beautiful clusters that we have",
    "start": "1738600",
    "end": "1745120"
  },
  {
    "text": "here so the end goal is users are really happy right so they just got a text box",
    "start": "1745120",
    "end": "1752240"
  },
  {
    "text": "where they edited the rate limit let's say from 50 to 75 and they were able to",
    "start": "1752240",
    "end": "1758240"
  },
  {
    "text": "control this and distribute this Behavior across two different runtime environment AP Gateway and uh service",
    "start": "1758240",
    "end": "1765240"
  },
  {
    "text": "mesh um very easily right so again let's quickly recap what did we just achieve",
    "start": "1765240",
    "end": "1772760"
  },
  {
    "text": "yes we were able to keep API Gateway and service machion sync um we able to",
    "start": "1772760",
    "end": "1778039"
  },
  {
    "text": "distribute configs across 300 clusters in less than 10 seconds uh but we want to improve this number U uh going",
    "start": "1778039",
    "end": "1785679"
  },
  {
    "text": "forward easy way to distribute custom objects across large number because of abstraction the both the most important",
    "start": "1785679",
    "end": "1793000"
  },
  {
    "text": "win for us is the increased developer velocity it applies to all our users as",
    "start": "1793000",
    "end": "1799039"
  },
  {
    "text": "well as the mesh admins that we have so when we started uh the our mesh journey",
    "start": "1799039",
    "end": "1805039"
  },
  {
    "text": "I think we were one of the early adopters of service mesh um 5 six years",
    "start": "1805039",
    "end": "1810240"
  },
  {
    "text": "back initially we asked our users to look at the sto documentation use those",
    "start": "1810240",
    "end": "1816760"
  },
  {
    "text": "custom objects and directly configure it in their clusters guess what they misconfigured",
    "start": "1816760",
    "end": "1823159"
  },
  {
    "text": "it and the entire cluster went down along with it since we are a multicluster system uh the misconfigured",
    "start": "1823159",
    "end": "1829200"
  },
  {
    "text": "value got copied over to multiple clusters and you know multiple clusters went down in a nonpr environment um so",
    "start": "1829200",
    "end": "1836559"
  },
  {
    "text": "that's when we really decided hey look uh we don't want to get into this um uh",
    "start": "1836559",
    "end": "1841840"
  },
  {
    "text": "business of having a service users uh authoring configurations based on the is",
    "start": "1841840",
    "end": "1847960"
  },
  {
    "text": "documentation so uh we want to take all the responsibility of U abstracting the",
    "start": "1847960",
    "end": "1853799"
  },
  {
    "text": "feature by we we mean the service mesh platform team um and and thousands of",
    "start": "1853799",
    "end": "1859159"
  },
  {
    "text": "Engineers at inter don't really have to go through the documentation uh for sto",
    "start": "1859159",
    "end": "1865080"
  },
  {
    "text": "and uh yeah have also a possible chance of misconfiguration since we already had a self service for API Gateway they just",
    "start": "1865080",
    "end": "1871720"
  },
  {
    "text": "use that um and it's almost abstracted from them that hey they also have a East",
    "start": "1871720",
    "end": "1877279"
  },
  {
    "text": "West uh configuration and a north south configuration they have a unified traffic configuration which takes care",
    "start": "1877279",
    "end": "1882880"
  },
  {
    "text": "of both East West and north south and the last Point uh we also spoke about this it's uh yeah we able to handle",
    "start": "1882880",
    "end": "1890720"
  },
  {
    "text": "breaking crd changes U or yeah breaking sto changes doing upgrades uh",
    "start": "1890720",
    "end": "1896480"
  },
  {
    "text": "transparently so the mesh team is extremely happy because they have uh",
    "start": "1896480",
    "end": "1901840"
  },
  {
    "text": "full authority to update configurations transparently so what are the next steps",
    "start": "1901840",
    "end": "1907240"
  },
  {
    "text": "for this um yes so you want to handle feedback automatically for right",
    "start": "1907240",
    "end": "1912679"
  },
  {
    "text": "operations across clusters at this point um uh if right on one of the customer",
    "start": "1912679",
    "end": "1918519"
  },
  {
    "text": "fails we really rely on uh logging and alerting to let the on call know that",
    "start": "1918519",
    "end": "1923720"
  },
  {
    "text": "something is broken and let me go update it we're working on designs to automatically heal our ecosystem um when",
    "start": "1923720",
    "end": "1930440"
  },
  {
    "text": "something like this breaks this can happen due to network issues but we want to be resilient um to any such changes",
    "start": "1930440",
    "end": "1937279"
  },
  {
    "text": "and automatically fix these things we we are improving observability and uh we",
    "start": "1937279",
    "end": "1942320"
  },
  {
    "text": "are also working on adding um the most commonly used features uh provided by sto uh in",
    "start": "1942320",
    "end": "1949080"
  },
  {
    "text": "Naik so we are almost at the end of ccon but just wanted to share that these are",
    "start": "1949080",
    "end": "1954120"
  },
  {
    "text": "some of the talks U my colleagues at inate have presented at cucon and also",
    "start": "1954120",
    "end": "1960559"
  },
  {
    "text": "um at uh the collocated events so we have open sourced uh navic",
    "start": "1960559",
    "end": "1967000"
  },
  {
    "text": "uh this week and uh this is the link for it uh so this entire slide deck is",
    "start": "1967000",
    "end": "1972799"
  },
  {
    "text": "available uh sorry the QR code is for uh uh for the feedback back so the we have",
    "start": "1972799",
    "end": "1979320"
  },
  {
    "text": "we don't have the QR code for navik but it's completely available in the sced U app this entire slide deck is available",
    "start": "1979320",
    "end": "1986960"
  },
  {
    "text": "uh we have uh open source navic and uh please feel free to check out please we request you to check out try it if you",
    "start": "1986960",
    "end": "1993679"
  },
  {
    "text": "have any new use cases that you want us to handle you can uh uh if you want to contribute you can reach out to us on",
    "start": "1993679",
    "end": "2000000"
  },
  {
    "text": "these emails or email or um yeah you can reach out to us on um on GitHub and if",
    "start": "2000000",
    "end": "2005120"
  },
  {
    "text": "you also want to check out hey what is inter doing uh about open source you can please uh scan this code on the left and",
    "start": "2005120",
    "end": "2012080"
  },
  {
    "text": "uh yeah follow uh into it open source work as well thank you so at this point um yeah",
    "start": "2012080",
    "end": "2019880"
  },
  {
    "text": "like to thank everyone to be patient uh um with us uh when we uh share our",
    "start": "2019880",
    "end": "2025559"
  },
  {
    "text": "traffic story with you and we also want to thank the organizers for helping us um provide this platform um again to",
    "start": "2025559",
    "end": "2033120"
  },
  {
    "text": "share our story with you thanks everyone",
    "start": "2033120",
    "end": "2039720"
  }
]