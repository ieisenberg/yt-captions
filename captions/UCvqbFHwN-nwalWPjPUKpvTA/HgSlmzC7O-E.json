[
  {
    "text": "all right can you hear me guys all right before i uh before i start can i have a selfie",
    "start": "719",
    "end": "7520"
  },
  {
    "text": "with you all is it okay all right thank you",
    "start": "7520",
    "end": "13480"
  },
  {
    "text": "all right thank you so much well uh i'm hershey i work with planet",
    "start": "17279",
    "end": "25039"
  },
  {
    "text": "scale and uh i've been maintainer of witness and i have been with the project for almost uh six years now",
    "start": "25039",
    "end": "31599"
  },
  {
    "text": "and uh with me i have manan who is also working with planet scale he joined as an intern and now he's also a maintainer",
    "start": "31599",
    "end": "37600"
  },
  {
    "text": "of veterans he's been working for more than one year now and we are talking about scaling",
    "start": "37600",
    "end": "43760"
  },
  {
    "text": "databases with witness today so let's go over agenda uh we'll be talking",
    "start": "43760",
    "end": "49280"
  },
  {
    "text": "about what witness is uh where it got evolved and how it how it looks like what it's it's trying to",
    "start": "49280",
    "end": "55760"
  },
  {
    "text": "solve the purpose and about that will go into the demo uh we'll show you how you can actually",
    "start": "55760",
    "end": "61600"
  },
  {
    "text": "import data from aws rds to witness and how it seamlessly work with rails uh or wittes and also uh based on",
    "start": "61600",
    "end": "69680"
  },
  {
    "text": "the time we'll also talk about some upcoming feature",
    "start": "69680",
    "end": "73840"
  },
  {
    "text": "so witus is basically a horizontal starting solution on top of",
    "start": "76000",
    "end": "81520"
  },
  {
    "text": "mysql which which basically means that if you if you're running out of scale on",
    "start": "81520",
    "end": "87840"
  },
  {
    "text": "my sequel you can put witness on top and it will it will do seamless uh shorting for you uh i'll talk in more details",
    "start": "87840",
    "end": "94479"
  },
  {
    "text": "about it uh but that's what with us is at a higher level uh it's a eighth cncf",
    "start": "94479",
    "end": "99759"
  },
  {
    "text": "graduated project uh and it was started in uh youtube at 2010 and it was then",
    "start": "99759",
    "end": "105360"
  },
  {
    "text": "donated to cncf for maintenance and it's open source project uh we have a highly",
    "start": "105360",
    "end": "110799"
  },
  {
    "text": "uh distributed community and the contributor across the world who is contributing to witness as a project",
    "start": "110799",
    "end": "118640"
  },
  {
    "text": "these are some of the clients custom like companies which are actually having",
    "start": "120880",
    "end": "127119"
  },
  {
    "text": "millions of qps on in production on witis uh some of them is like jd.com uh which",
    "start": "127119",
    "end": "132879"
  },
  {
    "text": "has like uh in 2019 they did 35 million qps in on their singles day in",
    "start": "132879",
    "end": "138560"
  },
  {
    "text": "uh and now they have been doing much more on with us there's slack who is running like hundred percent of their database on",
    "start": "138560",
    "end": "145200"
  },
  {
    "text": "witness uh they square cash up a financial uh cash up which also doing which is also",
    "start": "145200",
    "end": "150239"
  },
  {
    "text": "running their application on witness uh this planet scale who is basically",
    "start": "150239",
    "end": "155280"
  },
  {
    "text": "offering uh witness their offering powered by wittis and",
    "start": "155280",
    "end": "160400"
  },
  {
    "text": "they are running tens of thousands of clusters by now",
    "start": "160400",
    "end": "165040"
  },
  {
    "text": "so what is solved basically so we talked about right it's all scalability issues on mysql and there can be three types of",
    "start": "165760",
    "end": "173040"
  },
  {
    "text": "scalability in general like you have you're having a lot of qps and you're not able to serve from single mysql so",
    "start": "173040",
    "end": "178959"
  },
  {
    "text": "you need to shard and you so that your qps are distributed similarly for your data you are running into terabytes or petabytes",
    "start": "178959",
    "end": "186080"
  },
  {
    "text": "of data and you cannot uh basically uh keep it in single minus sql instance",
    "start": "186080",
    "end": "191120"
  },
  {
    "text": "then again you have to do sharding so so that you are able to scale and also your and also connection so you have a lot of",
    "start": "191120",
    "end": "197280"
  },
  {
    "text": "applications we are trying to just connect to a single mysql instance and you're running out of connections so uh",
    "start": "197280",
    "end": "202800"
  },
  {
    "text": "we so we just basically do connection pooling for you so that you you can scale",
    "start": "202800",
    "end": "209200"
  },
  {
    "text": "let's go into some features uh now because i talked about sharding which means you'll have a lot of lot of my",
    "start": "211120",
    "end": "216480"
  },
  {
    "text": "sequences running per shot and you it will be very difficult to manage so it does easy cluster management for you",
    "start": "216480",
    "end": "223360"
  },
  {
    "text": "which means if your primary goes down it knows which replica to bring up as a primary and it will fix all your",
    "start": "223360",
    "end": "229200"
  },
  {
    "text": "application stuff and you you just keep start you'll just keep serving your traffic um if",
    "start": "229200",
    "end": "235760"
  },
  {
    "text": "yeah and and it also like uh so in cluster management it also comes",
    "start": "235760",
    "end": "241200"
  },
  {
    "text": "like if you have if because you have done sharding like you might have to also move tables across it doesn't know how",
    "start": "241200",
    "end": "247760"
  },
  {
    "text": "to do it and and it can you can move data tables from one database to another database and",
    "start": "247760",
    "end": "254959"
  },
  {
    "text": "like if you if you run out of like database on one shot then it knows how to do",
    "start": "254959",
    "end": "260160"
  },
  {
    "text": "resharing so that you can again keep scaling your database",
    "start": "260160",
    "end": "265919"
  },
  {
    "text": "one of the other thing is like you have migrations uh which means you you're trying to create new table add column",
    "start": "266960",
    "end": "272720"
  },
  {
    "text": "delete column or things like that and uh it just provides you online ddl operations uh which which",
    "start": "272720",
    "end": "279199"
  },
  {
    "text": "means that you don't have to take any downtime or anything and it will just do seamless",
    "start": "279199",
    "end": "285280"
  },
  {
    "text": "migrations for you another one is the backup recovery which",
    "start": "285280",
    "end": "290479"
  },
  {
    "text": "means uh if you can tell where you have want to take backup for and it will uh it will it",
    "start": "290479",
    "end": "295919"
  },
  {
    "text": "will take backup for you and whenever you start a new replica it knows where which is the latest backup it will pull",
    "start": "295919",
    "end": "302160"
  },
  {
    "text": "it down and uh it will again plug it back to the replic primary and fix your application for you",
    "start": "302160",
    "end": "308160"
  },
  {
    "text": "and once it is caught up it will again go into the serving state for you and that will also just start",
    "start": "308160",
    "end": "314240"
  },
  {
    "text": "serving traffic for you yeah another is a query consolidation",
    "start": "314240",
    "end": "320000"
  },
  {
    "text": "which means if you are hitting same kind of queries or same query basically like suppose uh",
    "start": "320000",
    "end": "326240"
  },
  {
    "text": "it just got uh exploded with the it just went uh global with same same kind of",
    "start": "326240",
    "end": "331759"
  },
  {
    "text": "information which means you'll use every your data will start receiving same kind of query to your same chart then it does query",
    "start": "331759",
    "end": "338960"
  },
  {
    "text": "consultation for you which means it's try to do hot pro protection for you and it will consolidate it which means it",
    "start": "338960",
    "end": "344080"
  },
  {
    "text": "will not send all the same kind of queries down it will it will buffer it and it will only send one query down and same result will just",
    "start": "344080",
    "end": "351120"
  },
  {
    "text": "keep back send back to you so it tries to protect your database to going down",
    "start": "351120",
    "end": "358560"
  },
  {
    "text": "another is the human errors where you just wrote some bad query or you try to select all the data from all the shards",
    "start": "359199",
    "end": "365840"
  },
  {
    "text": "or you try to update all the rows and stuff so it put those limitations around",
    "start": "365840",
    "end": "371199"
  },
  {
    "text": "it so that you'll you you won't run into getting your database down in those terms and also you can do block listing",
    "start": "371199",
    "end": "378080"
  },
  {
    "text": "you can do you can give query patterns that that should not allow you and it will handle it will ensure that those",
    "start": "378080",
    "end": "383680"
  },
  {
    "text": "kind of query patterns does not go to your mysql",
    "start": "383680",
    "end": "387759"
  },
  {
    "text": "so before i go into the architecture i just there just two words i want to just get into it uh one is shot i already",
    "start": "389199",
    "end": "396000"
  },
  {
    "text": "talked about you uh basically a shard is nothing but having a primary and lot of replicas running and then you'll have",
    "start": "396000",
    "end": "401680"
  },
  {
    "text": "multiple shards running and the key key space is just uh cinnamon synonym to like your database which",
    "start": "401680",
    "end": "409039"
  },
  {
    "text": "means a key space is basically containing of multiple charts so",
    "start": "409039",
    "end": "414880"
  },
  {
    "text": "in our demo also we'll be using key space terms so basically it's a collection of shards",
    "start": "414880",
    "end": "422039"
  },
  {
    "text": "yeah let's go into the architecture uh if you if you see here uh we have",
    "start": "423440",
    "end": "428639"
  },
  {
    "text": "something called uh uh shard watch or two shot three two shot in which belongs to one key space",
    "start": "428639",
    "end": "434639"
  },
  {
    "text": "um here we are running mysql and on top of it we have we call it something called witty tablet which is a sidecar",
    "start": "434639",
    "end": "442160"
  },
  {
    "text": "which is sidecar which is running along with your mysql what it does is basically this is the one which manages",
    "start": "442160",
    "end": "447919"
  },
  {
    "text": "your mysql and also any query that will come will ultimately come to this and then it will be sent down to mysql this",
    "start": "447919",
    "end": "454400"
  },
  {
    "text": "is the one which also does the connection pooling uh which which means uh no all the connections will be",
    "start": "454400",
    "end": "460240"
  },
  {
    "text": "handled by this sidecar this exposes a grpc",
    "start": "460240",
    "end": "465280"
  },
  {
    "text": "api to the outside world and the outside world is basically nothing but vt gates",
    "start": "465280",
    "end": "470319"
  },
  {
    "text": "uh vt gates are the one which will be talking to the video tablet using the grpc",
    "start": "470319",
    "end": "475440"
  },
  {
    "text": "and this is this is the entry point for your applications so what vtgate does is basically it will receive all the",
    "start": "475440",
    "end": "481360"
  },
  {
    "text": "traffic to uh to it and it will basically vtgate will do the query parsing for you and then it will do the",
    "start": "481360",
    "end": "488160"
  },
  {
    "text": "query planning and then it will execute those plans and vtgate knows where your data resides",
    "start": "488160",
    "end": "493680"
  },
  {
    "text": "so it will it will send your data to the right chart it will do the right insert selects and everything it also it has an",
    "start": "493680",
    "end": "500160"
  },
  {
    "text": "um evaluation engine which means that it knows that uh how to evaluate a",
    "start": "500160",
    "end": "508400"
  },
  {
    "text": "query how to do aggregations and ordering and everything so it has we have it has whole new engine written on",
    "start": "508400",
    "end": "515279"
  },
  {
    "text": "on it so that you can do crosstalk queries um and it's basically stateless which",
    "start": "515279",
    "end": "520959"
  },
  {
    "text": "means you can run n number of uh vt gates based on how much qps you have and",
    "start": "520959",
    "end": "526560"
  },
  {
    "text": "accordingly you can just scale and on on top of it you can put a load balancer uh basically so that you know",
    "start": "526560",
    "end": "533040"
  },
  {
    "text": "how to make the discovery and how to connect to the the vtgate which is the least used and",
    "start": "533040",
    "end": "539120"
  },
  {
    "text": "vtgate talks a mysql protocol which means uh that you don't have to change anything on your application uh and it knows how",
    "start": "539120",
    "end": "546800"
  },
  {
    "text": "to basically you can just use this normal mysql driver that is available for for that language and it will just",
    "start": "546800",
    "end": "552640"
  },
  {
    "text": "continue to work as is so you just have to change that instead of directly going to mysql you can just you have to go through the",
    "start": "552640",
    "end": "558480"
  },
  {
    "text": "vt gates there is another component called vtc tld which is the admin part of the width",
    "start": "558480",
    "end": "564320"
  },
  {
    "text": "cluster which will which will ensure which will help you to manage your latest cluster itself",
    "start": "564320",
    "end": "569360"
  },
  {
    "text": "and also we have something uh topo server so you can plug in any turbo servers for storing with test metadata",
    "start": "569360",
    "end": "574560"
  },
  {
    "text": "into it that's all about the architecture and",
    "start": "574560",
    "end": "580560"
  },
  {
    "text": "the intro part of the witness i'll have manan and over he'll talk about the demo",
    "start": "580560",
    "end": "587200"
  },
  {
    "text": "hello can you guys hear me i think it's working fine right okay i'm alan hello everyone and i'm going to be taking you",
    "start": "587440",
    "end": "593600"
  },
  {
    "text": "through the demo the demo is really simple to follow but it is extremely powerful in what it does so we're going to start with the rails app which is",
    "start": "593600",
    "end": "599920"
  },
  {
    "text": "connected to an rds instance and the entire point of the demo is to move from that rds instance to with tests without",
    "start": "599920",
    "end": "605839"
  },
  {
    "text": "having and moving all your data from rds into a test so first the step that we'll do is we'll",
    "start": "605839",
    "end": "612560"
  },
  {
    "text": "first have a test cluster which is called rds on top of rds itself rds mysql and rails will be querying with",
    "start": "612560",
    "end": "618880"
  },
  {
    "text": "srds going through rds the data will be stored in rds but will be routed through a test so we'll be using the vtgate",
    "start": "618880",
    "end": "624399"
  },
  {
    "text": "endpoint and a vt tablet on top of an rds external data store once we have that running we're actually",
    "start": "624399",
    "end": "630399"
  },
  {
    "text": "going to copy all the data from that rds key space into a bit test key space so this with test is the name of the key",
    "start": "630399",
    "end": "635839"
  },
  {
    "text": "space that we're going to use for storing web tests locally and that we're going to copy all over the data that we have in rds over to a test once we're",
    "start": "635839",
    "end": "643120"
  },
  {
    "text": "doing that our traffic is still going to rds once that's done we're actually going to switch the traffic to go from",
    "start": "643120",
    "end": "648560"
  },
  {
    "text": "the rdst space to the test key space at this point rds is still running it has your data but the data has also been",
    "start": "648560",
    "end": "654320"
  },
  {
    "text": "copied over to it s after that once everything is done everything is working we can remove the",
    "start": "654320",
    "end": "659360"
  },
  {
    "text": "rds instance you can you can choose to destroy the data keep the data do whatever you want with it but at that",
    "start": "659360",
    "end": "665040"
  },
  {
    "text": "point your rails app is running entirely with your test so this is the workflow that we're going to follow for the uh demo let's get",
    "start": "665040",
    "end": "671600"
  },
  {
    "text": "started all right so over here i have a rds instance already running it takes a little while",
    "start": "671600",
    "end": "677760"
  },
  {
    "text": "to spin it up so i'll just point it up beforehand and if you take a look at the databases that we have we have one called rails app this is the one that",
    "start": "677760",
    "end": "684320"
  },
  {
    "text": "we're going to use just before i continue this font size is fine for everyone people at the back can you see that all right great so if you",
    "start": "684320",
    "end": "691839"
  },
  {
    "text": "use",
    "start": "691839",
    "end": "694839"
  },
  {
    "text": "there we go so here i've already set up rails as an app itself so you see that there are two internal tables that rails",
    "start": "703519",
    "end": "709600"
  },
  {
    "text": "uses the ar internal metadata and the schema migrations both of them are rails internal tables and there's one extra",
    "start": "709600",
    "end": "714800"
  },
  {
    "text": "table that we have created it's called users we're only using that table for the purpose of this demo essentially we're going to insert data into that",
    "start": "714800",
    "end": "720639"
  },
  {
    "text": "users table and we're going to record the latency as to how fast or how slow it was",
    "start": "720639",
    "end": "726000"
  },
  {
    "text": "so this is what we have at the rds side have the rails and we have already done",
    "start": "726000",
    "end": "731680"
  },
  {
    "text": "the migration itself i'm going to spawn the rail server now",
    "start": "731680",
    "end": "736480"
  },
  {
    "text": "okay so we go over here restart this page there we go i already had inserted a few amount of data in the",
    "start": "741440",
    "end": "747279"
  },
  {
    "text": "beginning but now it's going to insert about four users every second and it's gonna keep track of the latency that it",
    "start": "747279",
    "end": "752720"
  },
  {
    "text": "took to do those insertions averaged over five seconds and that's what we're plotting over here we're also keeping track of the total error count that we",
    "start": "752720",
    "end": "758399"
  },
  {
    "text": "see while we're doing those insertions right now we're starting with zero errors but we'll see how how we go",
    "start": "758399",
    "end": "766560"
  },
  {
    "text": "okay over here we're going to set up a watch on",
    "start": "767600",
    "end": "773839"
  },
  {
    "text": "there we go so here we're just counting like we're keeping a watch on the number of users that are there it's essentially a very",
    "start": "774480",
    "end": "780480"
  },
  {
    "text": "easy watch we're just doing a select construct from users and this is running against rds so you can see that the user",
    "start": "780480",
    "end": "785920"
  },
  {
    "text": "count is increasing on rds we're running against that now if you remember from a slide the second thing that we want to do is spawn",
    "start": "785920",
    "end": "791760"
  },
  {
    "text": "off a bit test server and have it in front of rds so i already have a wet test running as",
    "start": "791760",
    "end": "796959"
  },
  {
    "text": "well i'm running it in kind so i'm not running it on on on kubernetes on i'm",
    "start": "796959",
    "end": "802000"
  },
  {
    "text": "running at kubernetes but not in gcp or aws you can do that too with test operator works with all of those platforms right now i'm running in kind",
    "start": "802000",
    "end": "808639"
  },
  {
    "text": "locally and um i already have it set up so i can really quickly go over and show you the configuration that i'm using",
    "start": "808639",
    "end": "815440"
  },
  {
    "text": "so if you look at the configuration over here so we have key space configurations over here we",
    "start": "815440",
    "end": "820800"
  },
  {
    "text": "have one with test key space and we're not using it right now but we eventually will as i showed you in the",
    "start": "820800",
    "end": "826160"
  },
  {
    "text": "slides and this is completely better zone you'll also have a mysql instance running inside and over here we have an rdst space and",
    "start": "826160",
    "end": "834320"
  },
  {
    "text": "if you see it's using an external data store so it's not using mysql directly it's using an external data store and here you're providing the parameters to",
    "start": "834320",
    "end": "840639"
  },
  {
    "text": "how to connect to that external data store which rds user idsdb name these are all environment variables that i've",
    "start": "840639",
    "end": "846240"
  },
  {
    "text": "set it out in in the startup script",
    "start": "846240",
    "end": "850320"
  },
  {
    "text": "so now that we have the test running a goal is to actually copy data we want to move the traffic from rds",
    "start": "851360",
    "end": "857680"
  },
  {
    "text": "going directly to rds but through the test so let's go ahead and do that",
    "start": "857680",
    "end": "863199"
  },
  {
    "text": "so we go over into the database configuration university hamlet they're here right now",
    "start": "865760",
    "end": "871519"
  },
  {
    "text": "we're using those environment variables that are configured in with tests as well rds host rds db name so we can change these host is localhost because",
    "start": "871519",
    "end": "878240"
  },
  {
    "text": "i'm running it locally database we're going to use is called rds because that's the name of the key",
    "start": "878240",
    "end": "884399"
  },
  {
    "text": "space and like hershey said the key space is like an equivalent for database in the test analogy",
    "start": "884399",
    "end": "890560"
  },
  {
    "text": "the user we're going to use is user all of this is configurable in the in the configuration of this operator right now",
    "start": "890560",
    "end": "897279"
  },
  {
    "text": "we're not running with any password so there's no protection on our on my cluster numbering locally plus we don't do that in production",
    "start": "897279",
    "end": "903040"
  },
  {
    "text": "and the port that we have is 15306",
    "start": "903040",
    "end": "907199"
  },
  {
    "text": "so take a look at the error com and take a look at the latency right now right now i haven't restarted the app so for any database configuration changes i",
    "start": "910079",
    "end": "916320"
  },
  {
    "text": "need to restart the rails server",
    "start": "916320",
    "end": "919839"
  },
  {
    "text": "there you go so here you see their account increased to about nine but remember this set account is because i",
    "start": "924240",
    "end": "930560"
  },
  {
    "text": "changed the rails configuration i to take it down for this file and and then spawn it off again during that time and then the latency is going to drop",
    "start": "930560",
    "end": "938720"
  },
  {
    "text": "this is the witty gate page this is like a wit test bt do you guys remember that the proxy layer that's on top which is",
    "start": "939040",
    "end": "944160"
  },
  {
    "text": "connected with the users connect to and this is the plane for that a ui and it shows the purpose that serving so early",
    "start": "944160",
    "end": "950240"
  },
  {
    "text": "on it was no qps because we weren't wearing bits directly at all but now we're going through the test even to rds so we have this graph that's coming up",
    "start": "950240",
    "end": "956800"
  },
  {
    "text": "for qps at bt gate okay so this is all working fine we're",
    "start": "956800",
    "end": "963920"
  },
  {
    "text": "now running we're still going to rds so look at the latency latency has come down it's stabilized to the point that it was before it spiked up for a bit but",
    "start": "963920",
    "end": "970320"
  },
  {
    "text": "it's back down to where it used to be it's still going to idea so the data is stored in rds if you go over to the watch",
    "start": "970320",
    "end": "976720"
  },
  {
    "text": "on rds you see that the data is still being stored in rds but it's going through a test",
    "start": "976720",
    "end": "982720"
  },
  {
    "text": "the next thing that we're going to do is we want to move the database uh the the data from that rds key space into a",
    "start": "982720",
    "end": "987759"
  },
  {
    "text": "widespread space which we saw in the configuration is running all locally to do that we have a command called move",
    "start": "987759",
    "end": "993360"
  },
  {
    "text": "tables now i've already spawned this command off as well before i started the demo move tables come on it takes in two",
    "start": "993360",
    "end": "998959"
  },
  {
    "text": "arguments you can give the source key space which for us is rds and you can give it the uh in the in the parameter",
    "start": "998959",
    "end": "1004720"
  },
  {
    "text": "of this you give it the destination key space but that is rails and rails app is just the name for the workflow you can",
    "start": "1004720",
    "end": "1010000"
  },
  {
    "text": "you can choose to provide anything there this all parameters saying what all tables i want to move since i'm moving",
    "start": "1010000",
    "end": "1015040"
  },
  {
    "text": "all the data i want to move all the tables the internal internal rails tables and also the users table that you're using for the demo so",
    "start": "1015040",
    "end": "1021680"
  },
  {
    "text": "we have this point we can now check out the progress that we have made on this",
    "start": "1021680",
    "end": "1028400"
  },
  {
    "text": "there we go so the copy is complete but we still have a replica we still have a v stream running what that v stream is doing is because you're inserting data",
    "start": "1031760",
    "end": "1038319"
  },
  {
    "text": "consistently constantly into rds you want to keep keep copying it into a test as well right because you don't want to",
    "start": "1038319",
    "end": "1044400"
  },
  {
    "text": "lose data when you cut over from rds to a test so we keep a stream running which is continuing which is",
    "start": "1044400",
    "end": "1049440"
  },
  {
    "text": "see that status side status running we stream and it has a lag about a second but it's keep on keeping on inserting",
    "start": "1049440",
    "end": "1054720"
  },
  {
    "text": "the radiator that you you're inserting into rds also into the test key space at this point we're ready to switch the",
    "start": "1054720",
    "end": "1060880"
  },
  {
    "text": "traffic we can switch the traffic from the uh the rds key space to a test key space take a look at the error account",
    "start": "1060880",
    "end": "1066720"
  },
  {
    "text": "right now so it's nine and let's do a switch traffic",
    "start": "1066720",
    "end": "1072279"
  },
  {
    "text": "okay okay all right so that one second time lag that's that's generally the amount of time it takes for it to catch up",
    "start": "1081360",
    "end": "1087120"
  },
  {
    "text": "because it will stop right from the rds and it'll uh it'll it'll buffer those lights and it'll start doing them on the",
    "start": "1087120",
    "end": "1092720"
  },
  {
    "text": "rdsp space you look at the initial start state that we had that we had not switched the reads or the rights both of",
    "start": "1092720",
    "end": "1097919"
  },
  {
    "text": "them were going to the rds key space in the end our current state is that all the reads and the rights have been switched you can choose to do this in",
    "start": "1097919",
    "end": "1103919"
  },
  {
    "text": "two parts just switch the reads first and then switch the rights or just do the switch the rights first in which case half the traffic would be going to",
    "start": "1103919",
    "end": "1110160"
  },
  {
    "text": "the test key space half the traffic would be going to the rdsp space in this demo i've done both together so reads",
    "start": "1110160",
    "end": "1116320"
  },
  {
    "text": "and writes about switched and we go over you see that the latency has dropped",
    "start": "1116320",
    "end": "1121520"
  },
  {
    "text": "that latency drop is because i'm using bittes locally so all the loopback interface calls that were going to rds",
    "start": "1121520",
    "end": "1126960"
  },
  {
    "text": "server spawned off in paris are now just running locally so this drop is coming because i'm running with us locally and",
    "start": "1126960",
    "end": "1132559"
  },
  {
    "text": "you see the error count we have a few errors that happen but i'll come to that point later",
    "start": "1132559",
    "end": "1138799"
  },
  {
    "text": "okay so we've done the switch traffic so at this point we've copied over data and we're using with s",
    "start": "1139360",
    "end": "1145919"
  },
  {
    "text": "the key space so once you're happy with everything you've seen that everything is working you can actually change your",
    "start": "1145919",
    "end": "1151120"
  },
  {
    "text": "configuration of that if you look over here you're still connected to the rds key space so how this works in the test",
    "start": "1151120",
    "end": "1156240"
  },
  {
    "text": "is that you can i'll show you the routing rules so vitesse transparently also creates the routing rules for you",
    "start": "1156240",
    "end": "1164799"
  },
  {
    "text": "so that even though when you do when you do the switch traffic even though a user is connected to the rds key space they're actually going to the test so if",
    "start": "1164799",
    "end": "1170880"
  },
  {
    "text": "you took a look over here it says that any query that comes to the rds users table should actually be",
    "start": "1170880",
    "end": "1176240"
  },
  {
    "text": "served on the webtest users table because you've done the switch traffic so essentially your app does not need to change when you do the switch traffic",
    "start": "1176240",
    "end": "1182640"
  },
  {
    "text": "once you've done with it and you're happy with everything then you can change your app to actually start serving traffic from uh from",
    "start": "1182640",
    "end": "1189760"
  },
  {
    "text": "the directly from the test key space so there we go all we need to do is change this to the test",
    "start": "1189760",
    "end": "1195200"
  },
  {
    "text": "and like before if you want this to take effect we have to actually restart the app",
    "start": "1195200",
    "end": "1200799"
  },
  {
    "text": "at this point we're querying directly to test so we're at the last step of the demo that you have rds running uh you have rails running and it's squaring",
    "start": "1203280",
    "end": "1209360"
  },
  {
    "text": "directly to the test the rds is not being used and if you take a look at the watch over here",
    "start": "1209360",
    "end": "1215280"
  },
  {
    "text": "this watch is still getting data the reason that is what the reason we do this is until you actually complete the",
    "start": "1215280",
    "end": "1221440"
  },
  {
    "text": "uh the entire move tables command we insert the data back from the test into rds so that if if whatever something",
    "start": "1221440",
    "end": "1228320"
  },
  {
    "text": "something does not work out there are some queries some queries are not working against the test because the shared database we have my sql compatibility but there are some queries",
    "start": "1228320",
    "end": "1234320"
  },
  {
    "text": "that won't work if something like that you hit roadblocks in that sense then you can actually go back and you won't reduce any data",
    "start": "1234320",
    "end": "1241919"
  },
  {
    "text": "once everything is done and you're happy with everything then you can go ahead and complete the workflow",
    "start": "1244159",
    "end": "1250720"
  },
  {
    "text": "this takes in one more parameter it says keep data so i'm choosing to keep the data in the rds server if you don't if",
    "start": "1255200",
    "end": "1260640"
  },
  {
    "text": "you don't provide this parameter it'll by default go ahead and delete all the data that you had in the source key space",
    "start": "1260640",
    "end": "1265760"
  },
  {
    "text": "and if i go ahead and look at rds now this count is now stagnated like it's not going to increase any further it's",
    "start": "1265760",
    "end": "1272000"
  },
  {
    "text": "stabilized because we've completed the workflow everything is moved over to test you no longer need to insert data back into rds",
    "start": "1272000",
    "end": "1278559"
  },
  {
    "text": "and if you go and you like that you still have insertions happening while this is going on",
    "start": "1278559",
    "end": "1284080"
  },
  {
    "text": "and that is it for the demo",
    "start": "1287360",
    "end": "1291720"
  },
  {
    "text": "okay so let's see how much time do we have okay we have enough time we have about 10 minutes left so we can talk",
    "start": "1302880",
    "end": "1308480"
  },
  {
    "text": "about the upcoming features so actually i created the slide but i wasn't sure how much time i'd have so i",
    "start": "1308480",
    "end": "1314960"
  },
  {
    "text": "thought that i'll talk about them and as much time as this left so we have enough time so this first one is vtr this is",
    "start": "1314960",
    "end": "1320320"
  },
  {
    "text": "bts orchestrator it's a fork of orchestrator that we have tailor-made for the test essentially this is the uh",
    "start": "1320320",
    "end": "1325919"
  },
  {
    "text": "so hershey talked about automatic fixes and things right like if uh if you were running bts and kubernetes you could",
    "start": "1325919",
    "end": "1331919"
  },
  {
    "text": "have a mysql port that got evicted so it got restarted if it restarts then it's its replication will not set up",
    "start": "1331919",
    "end": "1337120"
  },
  {
    "text": "correctly things like these so right now if you if you uh so right now if you're not using vitesse",
    "start": "1337120",
    "end": "1342159"
  },
  {
    "text": "and if you're doing managing things yourself someone has to go over there and fix those replications right and vtr",
    "start": "1342159",
    "end": "1347440"
  },
  {
    "text": "is the automated component of a test which will do this automatically it will go over it to check that there are automatic failure scenarios it will",
    "start": "1347440",
    "end": "1354000"
  },
  {
    "text": "check that you have a primary you have a replica the replica is not connected to that primary or that it's not sending",
    "start": "1354000",
    "end": "1359039"
  },
  {
    "text": "some icing acts or it is said to read only so there are a bunch of failure scenarios whatever goes wrong vtr is the",
    "start": "1359039",
    "end": "1364080"
  },
  {
    "text": "single single thing that can fix it so we have we have operations that you can do manually as well through the btc",
    "start": "1364080",
    "end": "1370320"
  },
  {
    "text": "tld but vtr is the automated failure fixing thing that with tess offers so if you have youtube running anything",
    "start": "1370320",
    "end": "1376720"
  },
  {
    "text": "that fails video can go and fix it it can do emergency dependent charts it can do anything like if the primary for the",
    "start": "1376720",
    "end": "1382559"
  },
  {
    "text": "primary fails we can even switch traffic to a a read-only and a replica server",
    "start": "1382559",
    "end": "1388000"
  },
  {
    "text": "and and guarantee that there won't be any uh data losses so we'll find the one which is the most advanced and if you're",
    "start": "1388000",
    "end": "1393280"
  },
  {
    "text": "using semi-sync the one which is the most advanced there will be at least one server which has all the app",
    "start": "1393280",
    "end": "1398400"
  },
  {
    "text": "transactions right so we'll promote that and that is how we guarantee that you won't lose any data even if your primary",
    "start": "1398400",
    "end": "1403600"
  },
  {
    "text": "fails and these things happen in production right i was scared a little about the demo as well",
    "start": "1403600",
    "end": "1408799"
  },
  {
    "text": "i had i had the internet running on my local phone but you never know right so the next thing that we have here is vt",
    "start": "1408799",
    "end": "1414400"
  },
  {
    "text": "admin and that is a new and improved ui so right now i can show you the vtctl ui",
    "start": "1414400",
    "end": "1419600"
  },
  {
    "text": "that we have okay let's go",
    "start": "1419600",
    "end": "1425000"
  },
  {
    "text": "this is pretty good so 15 000 should be really ctl",
    "start": "1435039",
    "end": "1440960"
  },
  {
    "text": "right so this is the ui that you have this is the vtc tld ui it shows the shards it shows the uh the number of",
    "start": "1443120",
    "end": "1448720"
  },
  {
    "text": "charge that you have in each key space right now we're running them in uncharted so we only have one chart but you can chart them out as your data",
    "start": "1448720",
    "end": "1454000"
  },
  {
    "text": "grows into multiple charts and if you go over in here you get the serving charts and the list of tablets that we're running so currently we're",
    "start": "1454000",
    "end": "1460080"
  },
  {
    "text": "running in one one primary one replica mode this is the old old ui so it does the work but",
    "start": "1460080",
    "end": "1466320"
  },
  {
    "text": "i can't actually show you bt admin right now don't have it running locally but if you go over to the bittest docs and you spawn it off yourself you'll see that",
    "start": "1466320",
    "end": "1472159"
  },
  {
    "text": "it's a much better ui you can look at how queries are run against you can look at the look and look look at the instructions",
    "start": "1472159",
    "end": "1478000"
  },
  {
    "text": "that with test will run to actually execute the query it's good for debugging you can do all the operations there as well so you don't need to",
    "start": "1478000",
    "end": "1483919"
  },
  {
    "text": "actually go to the to the cli and run start replication or something like that you can actually do it through the bt",
    "start": "1483919",
    "end": "1489600"
  },
  {
    "text": "admin as well so vt admin is going general availability in the next release of a test and vtr is going general",
    "start": "1489600",
    "end": "1495039"
  },
  {
    "text": "availability in the release after that so these are the two great amazing features that are coming up in vertex",
    "start": "1495039",
    "end": "1501919"
  },
  {
    "text": "yeah just to add to that um vtr is already used in production uh but",
    "start": "1501919",
    "end": "1507760"
  },
  {
    "text": "the company does not want to be named so but they are already using in production but we call it experimental because we want to make sure that we are ready like",
    "start": "1507760",
    "end": "1514720"
  },
  {
    "text": "as a witness community is ready to take on videos but it's there people are already using it and 14 release is going",
    "start": "1514720",
    "end": "1522559"
  },
  {
    "text": "to happen next month and it's going to be very stable anyways there",
    "start": "1522559",
    "end": "1528559"
  },
  {
    "text": "okay so these are the resources i have the link to the demo you guys can go along that link and you can follow along it",
    "start": "1528559",
    "end": "1534640"
  },
  {
    "text": "has all the instructions how you do there's only one prerequisite which is you need to have rds running",
    "start": "1534640",
    "end": "1539840"
  },
  {
    "text": "uh these are the docs the code link for bitters website and and the twitter handle",
    "start": "1539840",
    "end": "1545200"
  },
  {
    "text": "we're open for questions now thank you",
    "start": "1545200",
    "end": "1550840"
  },
  {
    "text": "okay this is working so the vt tablet uh component is that",
    "start": "1564000",
    "end": "1571039"
  },
  {
    "text": "basically your uh consensus state machine or would you repeat the question i didn't",
    "start": "1571039",
    "end": "1576480"
  },
  {
    "text": "get it so on top of my sequel you mentioned you have this vt tablet component yes can you talk a bit more about that and what that is is that just",
    "start": "1576480",
    "end": "1582840"
  },
  {
    "text": "uh considering video tablet is like a side car instance so basically if you want to send a query like vtr it needs",
    "start": "1582840",
    "end": "1588559"
  },
  {
    "text": "to some some way to like start replication of my sequel instead of querying directly to mysql we prefer to have a sidecar instance pd tablet which",
    "start": "1588559",
    "end": "1594799"
  },
  {
    "text": "supports grpc protocol and few other things that you can use so vtr will query tablet and it'll and the wii",
    "start": "1594799",
    "end": "1600159"
  },
  {
    "text": "tablet is the instance that will run it on my sql same goes for the component so it's like for communication purposes for",
    "start": "1600159",
    "end": "1605360"
  },
  {
    "text": "other things for like uh getting like the health health stream as to uh video tablet will also sell send health",
    "start": "1605360",
    "end": "1610720"
  },
  {
    "text": "streams to mitigate it's like for registry purposes for all of those things we have a video tablet sidecar",
    "start": "1610720",
    "end": "1615760"
  },
  {
    "text": "it's not the one that does the uh the durability things that actually happens through the btcple and the durability",
    "start": "1615760",
    "end": "1621600"
  },
  {
    "text": "also happens directly into my sequel so you have a primary instance and you set it up with how many number of semi-sync",
    "start": "1621600",
    "end": "1627039"
  },
  {
    "text": "acts you require for it to make progress and that is the number that is how you use the durability and with test will",
    "start": "1627039",
    "end": "1632559"
  },
  {
    "text": "guarantee that when you do the failovers it will respect the durability policy that you set right does that answer your question",
    "start": "1632559",
    "end": "1639120"
  },
  {
    "text": "yeah okay all right would you ask them",
    "start": "1639120",
    "end": "1644159"
  },
  {
    "text": "sure i have two questions about backups and",
    "start": "1648399",
    "end": "1653440"
  },
  {
    "text": "the first one the first of them is where does bts store the actual backups",
    "start": "1653440",
    "end": "1659200"
  },
  {
    "text": "what providers yeah so actually some it's a community basically",
    "start": "1659200",
    "end": "1665679"
  },
  {
    "text": "supported by a community right so a few of the backups that it already supports is like uh storage s3 and and you can do",
    "start": "1665679",
    "end": "1674000"
  },
  {
    "text": "contributions on more on those and file systems and stuff so and you have to just give in in the vt tablet that we",
    "start": "1674000",
    "end": "1680320"
  },
  {
    "text": "showed the sidecar that will take those inputs that where you want to store the backup and it will it will use that information to",
    "start": "1680320",
    "end": "1687039"
  },
  {
    "text": "do the backup and when you start a new replica it will know like how to get",
    "start": "1687039",
    "end": "1692880"
  },
  {
    "text": "from the latest backup and then hook it to the primary and start the replication okay so thank you and the second",
    "start": "1692880",
    "end": "1699039"
  },
  {
    "text": "question is does it support point in time recovery does it uh does it support point-in-time",
    "start": "1699039",
    "end": "1704720"
  },
  {
    "text": "recovery that like does it do binary log",
    "start": "1704720",
    "end": "1709840"
  },
  {
    "text": "no point in time recovery yes you want to take okay we have a maintainer actually",
    "start": "1709840",
    "end": "1715840"
  },
  {
    "text": "uh she is uh and she is a team uh team lead on uh yeah",
    "start": "1715840",
    "end": "1721679"
  },
  {
    "text": "uh witness does support point in time recovery we don't have our own bin log server but we integrate with ripple",
    "start": "1721679",
    "end": "1728399"
  },
  {
    "text": "ripple which is a bin log server we do plan to provide urban log server with witness so that we don't have an",
    "start": "1728399",
    "end": "1735039"
  },
  {
    "text": "external dependency",
    "start": "1735039",
    "end": "1738440"
  },
  {
    "text": "anyone else anyone else does bts support",
    "start": "1741840",
    "end": "1750159"
  },
  {
    "text": "mariadvi it used to support but then the marijuana fork actually changed income",
    "start": "1750159",
    "end": "1756080"
  },
  {
    "text": "in incompatible ways that we have to drop after 10.14 i think 10 not for 10.",
    "start": "1756080",
    "end": "1762480"
  },
  {
    "text": "yeah okay and no plans at all for sure for supporting possibly right no",
    "start": "1762480",
    "end": "1770398"
  },
  {
    "text": "yeah let's see one more question what about support for",
    "start": "1770640",
    "end": "1776799"
  },
  {
    "text": "hybrid or multi-cloud deployments sorry can you say that again",
    "start": "1776799",
    "end": "1783120"
  },
  {
    "text": "support for multi-cloud or ivory cloud deployments",
    "start": "1783120",
    "end": "1788880"
  },
  {
    "text": "i saw it yes",
    "start": "1788880",
    "end": "1794039"
  },
  {
    "text": "so to add to what harshit said the witness operator for kubernetes works on any cloud providers kubernetes but you",
    "start": "1804399",
    "end": "1810799"
  },
  {
    "text": "will have to do the multi-cloud networking yourself that part is not part of the operator that we currently",
    "start": "1810799",
    "end": "1816399"
  },
  {
    "text": "have yeah but if you like to do contributions yes we would love to have it",
    "start": "1816399",
    "end": "1824080"
  },
  {
    "text": "okay so i guess okay there's one more here",
    "start": "1828399",
    "end": "1832480"
  },
  {
    "text": "um so when when you did the demo it looks like you're effectively traffic splitting",
    "start": "1834720",
    "end": "1839840"
  },
  {
    "text": "between rds and the vitesse key space right right",
    "start": "1839840",
    "end": "1845039"
  },
  {
    "text": "no we didn't we didn't split the traffic it was earlier going entirely to rds and at one point we switched over and it was",
    "start": "1845039",
    "end": "1850720"
  },
  {
    "text": "going entirely to test you can however split the traffic but only between reads and writes so you can uh you can just",
    "start": "1850720",
    "end": "1857360"
  },
  {
    "text": "switch the reads over to the test first keep the rights going to rds because your vstream is still running the all",
    "start": "1857360",
    "end": "1862559"
  },
  {
    "text": "the rights that go to rds will eventually also show up in the test so you're safe there but you can you can do it in two steps okay yeah it will run",
    "start": "1862559",
    "end": "1869039"
  },
  {
    "text": "only at one place but we don't allow doing things like uh 20 going to rds and 80 percent going to be",
    "start": "1869039",
    "end": "1874640"
  },
  {
    "text": "test things like that are not permitted you can do in one step for reads one step for rights or both together which i did in the demo",
    "start": "1874640",
    "end": "1880559"
  },
  {
    "text": "when we said it is going through witness doesn't mean that we are storing it in width it was going through vitas means the the vt gate level that i showed",
    "start": "1880559",
    "end": "1887440"
  },
  {
    "text": "through vtg it is still going to rds for or the",
    "start": "1887440",
    "end": "1893919"
  },
  {
    "text": "curious if you also support the other way around we do we do like um we test to rds you",
    "start": "1895440",
    "end": "1901440"
  },
  {
    "text": "do you can you can switch the traffic back if you need so the question is whether we support a migration from bitters to rds",
    "start": "1901440",
    "end": "1909919"
  },
  {
    "text": "you i think you can do it because our move tables are written in such a way that it doesn't matter you just have to",
    "start": "1909919",
    "end": "1915440"
  },
  {
    "text": "define that key space and if you define the key space you can do move table to that key space in that case it can be rds",
    "start": "1915440",
    "end": "1921600"
  },
  {
    "text": "like like how we did it i think in the demo uh you were writing to one and you said you can read from with us but when you",
    "start": "1921600",
    "end": "1928399"
  },
  {
    "text": "move over this one stopped updating when we do the pitch right",
    "start": "1928399",
    "end": "1934720"
  },
  {
    "text": "it was still going back but when we did say complete now we have done the complete migration then only it stops so",
    "start": "1935440",
    "end": "1941760"
  },
  {
    "text": "we could have done the demo in a way where you switch the read and writes from bitters but rds is kept up today it",
    "start": "1941760",
    "end": "1948080"
  },
  {
    "text": "was there it is there it was happening you didn't do the complete yeah so first",
    "start": "1948080",
    "end": "1953760"
  },
  {
    "text": "you have everything in rds you have a bit test on top of rds then you copied everything to the vitas key space",
    "start": "1953760",
    "end": "1960480"
  },
  {
    "text": "at that point rds is still running our data's going to rds you do the switch traffic we have a reverse replication",
    "start": "1960480",
    "end": "1965760"
  },
  {
    "text": "stream running which means that any data that's going to be test is also being copied over to rds until you do like",
    "start": "1965760",
    "end": "1970960"
  },
  {
    "text": "complete everything is fine and you're done with it we won't stop uh sending data to rds too",
    "start": "1970960",
    "end": "1976640"
  },
  {
    "text": "yeah okay so the way uh the we had to show the demo we had to",
    "start": "1976640",
    "end": "1982000"
  },
  {
    "text": "show all the steps at once but in real life what people will do is that they will wait for a few days before they do",
    "start": "1982000",
    "end": "1988559"
  },
  {
    "text": "the complete and stop the reverse replication",
    "start": "1988559",
    "end": "1993120"
  },
  {
    "text": "hi thank you for the presentation uh during the demo you mentioned the errors and that you explained them later could",
    "start": "2002080",
    "end": "2008000"
  },
  {
    "text": "you tell us the errors yeah the errors yes so what happened there",
    "start": "2008000",
    "end": "2015440"
  },
  {
    "text": "the errors right with the errors they were shown when the errors will come so uh basically we the errors were coming",
    "start": "2015440",
    "end": "2021360"
  },
  {
    "text": "because we have to stop the rail server but when you do you will do rolling updates of your rail server when you're picking up the new configuration those",
    "start": "2021360",
    "end": "2027760"
  },
  {
    "text": "errors can be provided and sometimes you'll see a few errors that we saw in the demo when we start buffering so a couple of errors will start the",
    "start": "2027760",
    "end": "2033679"
  },
  {
    "text": "buffering at bt gate level and then it will start buffering all those requests and you won't see errors further so from the beginning the errors that we saw for",
    "start": "2033679",
    "end": "2040159"
  },
  {
    "text": "example that i had to take down the rail server and bring it back up again which we saw like 10-15 years that was because",
    "start": "2040159",
    "end": "2045279"
  },
  {
    "text": "i only had one real server running in the demo but if you have multiple rail server you can just take one down change its configuration bring it back up while",
    "start": "2045279",
    "end": "2051599"
  },
  {
    "text": "others are serving traffic in which case you won't see those those those errors",
    "start": "2051599",
    "end": "2057599"
  },
  {
    "text": "yeah we have a buffering basic mechanism yeah any any planned operation through the test whether it's a reshard so it's",
    "start": "2058560",
    "end": "2064800"
  },
  {
    "text": "a repair or a move tables we buffer traffic at btk but you need to configure the buffer pool and how many queries you",
    "start": "2064800",
    "end": "2070000"
  },
  {
    "text": "want to buffer at a time because you could have like out of memory issues if you buffer too much right so at that point we start",
    "start": "2070000",
    "end": "2075839"
  },
  {
    "text": "we stop buffering the amount the queries that are old and we start throwing errors for those hi how much latency is added to the vt",
    "start": "2075839",
    "end": "2083679"
  },
  {
    "text": "gate you have an extra how much latency is added extra latency through vtgate",
    "start": "2083679",
    "end": "2088878"
  },
  {
    "text": "yes it is usually one to two milliseconds that's what we claim one to two milliseconds extra yeah",
    "start": "2088879",
    "end": "2096800"
  },
  {
    "text": "but but you should think it's uh distributed so it is going through one server and then if you have a good network then it's fine if you have a bad",
    "start": "2096800",
    "end": "2102320"
  },
  {
    "text": "yeah the network latency is there networking",
    "start": "2102320",
    "end": "2105920"
  },
  {
    "text": "hi when do you plan to support uh select star query on the shutter",
    "start": "2109760",
    "end": "2115119"
  },
  {
    "text": "key spaces we do we do we do we support all the all started like uh we have a good set of support",
    "start": "2115119",
    "end": "2122400"
  },
  {
    "text": "for the sharded queries and you should just try it on and see if it works for you mostly it should",
    "start": "2122400",
    "end": "2128560"
  },
  {
    "text": "yeah most of the query should work in the sharded level as well so example if you have data that is stored in two different charts and you're trying to",
    "start": "2128560",
    "end": "2134079"
  },
  {
    "text": "join that also it works that also works we have an evaluation engine at the vtgate level that will do those things for you but there are things that still",
    "start": "2134079",
    "end": "2140800"
  },
  {
    "text": "won't work for example uh window window functions because in an uncharted mode we can rely on mysql to do that all for",
    "start": "2140800",
    "end": "2147920"
  },
  {
    "text": "you like we can just spin the query down to my sql but for window transaction functions other things like uh sharded",
    "start": "2147920",
    "end": "2153200"
  },
  {
    "text": "mode that support is not there but uh evaluation engine is the primary that you need to add support to so uh if",
    "start": "2153200",
    "end": "2158560"
  },
  {
    "text": "there's something that is not supported we welcome contributions for that yeah if you open an issue and you really want some queries not working we'll just we",
    "start": "2158560",
    "end": "2165119"
  },
  {
    "text": "just make it work for you so if you tried this before uh say january of",
    "start": "2165119",
    "end": "2170720"
  },
  {
    "text": "2021 and you found that certain things didn't work we've actually implemented a new query planner called gen4 which is",
    "start": "2170720",
    "end": "2177520"
  },
  {
    "text": "opt-in right now which supports a lot more of the select star type of queries",
    "start": "2177520",
    "end": "2182720"
  },
  {
    "text": "with sharded mode yeah so select start definitely should work",
    "start": "2182720",
    "end": "2188640"
  },
  {
    "text": "yeah even if you add new columns left joins right joins everything it",
    "start": "2188640",
    "end": "2194079"
  },
  {
    "text": "just works for sharded queries so we do group buys aggregations everything on vtgate level as well it's for more",
    "start": "2194079",
    "end": "2199359"
  },
  {
    "text": "advanced recently added 8.0 functions and stuff that right now we don't have support for",
    "start": "2199359",
    "end": "2204800"
  },
  {
    "text": "yes so like i said a lot of sharded query support has been added over the past year so you should try out a newer",
    "start": "2204800",
    "end": "2210480"
  },
  {
    "text": "release if you've run into errors in the past",
    "start": "2210480",
    "end": "2215480"
  },
  {
    "text": "i have a few questions sure sure one is in terms of sharding",
    "start": "2226480",
    "end": "2233280"
  },
  {
    "text": "strategy is there like a fixed set that you support or it's up to us to choose yeah so we have some um",
    "start": "2233280",
    "end": "2240240"
  },
  {
    "text": "set that you can choose from otherwise you can write your own sharding strategy and there's an interface which is or",
    "start": "2240240",
    "end": "2245599"
  },
  {
    "text": "plug-in basically if you implement that plug-in you will use your sharding strategy and i saw like the number of",
    "start": "2245599",
    "end": "2251440"
  },
  {
    "text": "where you keep your replicas and all that is independently configurable yes right yes one of uh in a multi-tenant",
    "start": "2251440",
    "end": "2257440"
  },
  {
    "text": "situation you might want to have certain like you know your europe customers data and american data",
    "start": "2257440",
    "end": "2263119"
  },
  {
    "text": "right we we support uh region-based sharding and we we call that multi-column windex and",
    "start": "2263119",
    "end": "2269760"
  },
  {
    "text": "you can say this column is for region starting and this is where you want to do local within region i see but it's",
    "start": "2269760",
    "end": "2275680"
  },
  {
    "text": "still considered one instance of it yes nice you you can still if you want you",
    "start": "2275680",
    "end": "2280720"
  },
  {
    "text": "can make it multi instance but we still consider one if if you want to do that it's highly",
    "start": "2280720",
    "end": "2285839"
  },
  {
    "text": "configurable it's up to you how you would want to run it yeah the last question probably it's a little bit more open-ended is how do you compare with",
    "start": "2285839",
    "end": "2291839"
  },
  {
    "text": "like cockroach and yoga bite and like yeah they're all your competitors here right there",
    "start": "2291839",
    "end": "2298640"
  },
  {
    "text": "how would you what do you do so uh witus is completely open source uh",
    "start": "2298640",
    "end": "2305680"
  },
  {
    "text": "in the first place and uh wittes has been around a lot longer and it's built",
    "start": "2305680",
    "end": "2311280"
  },
  {
    "text": "on 25 years of work done on mysql so",
    "start": "2311280",
    "end": "2317920"
  },
  {
    "text": "at the query execution layer it's very efficient and the sharding strategy for vitus is very",
    "start": "2317920",
    "end": "2324560"
  },
  {
    "text": "flexible it's not uh hard coded so these are some of the things that we",
    "start": "2324560",
    "end": "2331280"
  },
  {
    "text": "feel are very good about with us and it has been heavily tested basically it's it was built in 2010 and was heavily",
    "start": "2331280",
    "end": "2338720"
  },
  {
    "text": "used at youtube at that point so it's heavily tested i'm not sure about the other",
    "start": "2338720",
    "end": "2344800"
  },
  {
    "text": "part so yeah that's other part if you yes they",
    "start": "2344800",
    "end": "2350160"
  },
  {
    "text": "bet on different things yes yeah",
    "start": "2350160",
    "end": "2355838"
  },
  {
    "text": "my sequel yes",
    "start": "2356160",
    "end": "2359039"
  },
  {
    "text": "yes so that's the best part we don't have to build everything in vtga level we can rely on the mic equal to do a lot",
    "start": "2361440",
    "end": "2367119"
  },
  {
    "text": "of heavy lifting for us if we so we pushed a lot of things down for my sequel to do it so if you do count star",
    "start": "2367119",
    "end": "2372880"
  },
  {
    "text": "right i'll just give you an example so if you do count star on some table right we don't do we don't select all",
    "start": "2372880",
    "end": "2379119"
  },
  {
    "text": "the rows to vt gate what we do is we push down that query down to the mysql level to do the counting for us and we",
    "start": "2379119",
    "end": "2384960"
  },
  {
    "text": "just do the summing at the vtga level so our engine is built in such a way that try to push maximum to my sequence",
    "start": "2384960",
    "end": "2390079"
  },
  {
    "text": "because it knows how to do things it's already been doing for so long so why not and then",
    "start": "2390079",
    "end": "2397320"
  },
  {
    "text": "ah okay so uh for analytics with us is probably not",
    "start": "2398720",
    "end": "2403920"
  },
  {
    "text": "the benefit for transactional workloads is where you should use with us",
    "start": "2403920",
    "end": "2410599"
  },
  {
    "text": "we have not found uh i mean obviously there might be people who tried with us and",
    "start": "2412319",
    "end": "2417839"
  },
  {
    "text": "did not go into production with it but the number of users we already have the workloads are",
    "start": "2417839",
    "end": "2424480"
  },
  {
    "text": "very diverse so there is slack which is chat",
    "start": "2424480",
    "end": "2429839"
  },
  {
    "text": "you had youtube then square which is a financial app",
    "start": "2429839",
    "end": "2434880"
  },
  {
    "text": "there are e-commerce websites were using these gaming companies are using it",
    "start": "2434880",
    "end": "2440400"
  },
  {
    "text": "yeah so food company any any i think i it's almost now in every",
    "start": "2440400",
    "end": "2446880"
  },
  {
    "text": "department yeah any sector yeah i think uh jd.com really proved the scalability",
    "start": "2446880",
    "end": "2452960"
  },
  {
    "text": "of with us even beyond youtube because they've been running it and",
    "start": "2452960",
    "end": "2458240"
  },
  {
    "text": "when they do the single stay in china the amount of traffic they get on their website is beyond anything",
    "start": "2458240",
    "end": "2464400"
  },
  {
    "text": "we see in other parts of the world",
    "start": "2464400",
    "end": "2468400"
  },
  {
    "text": "i think we're out of time so we are available to talk at the test booth as well over here so uh please thank you so",
    "start": "2469599",
    "end": "2475520"
  },
  {
    "text": "much thank you so much",
    "start": "2475520",
    "end": "2478920"
  }
]