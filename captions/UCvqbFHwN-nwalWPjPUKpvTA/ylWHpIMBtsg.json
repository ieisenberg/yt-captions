[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "all right good afternoon everyone uh",
    "start": "1520",
    "end": "3840"
  },
  {
    "text": "thank you for coming to our talk uh",
    "start": "3840",
    "end": "5520"
  },
  {
    "text": "today Sebastian and I will be talking",
    "start": "5520",
    "end": "7839"
  },
  {
    "text": "about a few of the lessons we have",
    "start": "7839",
    "end": "9599"
  },
  {
    "text": "learned along the way in running a",
    "start": "9599",
    "end": "11960"
  },
  {
    "text": "database in our case mongodb on",
    "start": "11960",
    "end": "14440"
  },
  {
    "text": "kubernetes we hope you can take some of",
    "start": "14440",
    "end": "16600"
  },
  {
    "text": "the insights that we had to learn the",
    "start": "16600",
    "end": "17920"
  },
  {
    "text": "hard rate the solutions you are",
    "start": "17920",
    "end": "20960"
  },
  {
    "text": "building a quick introduction of",
    "start": "20960",
    "end": "22760"
  },
  {
    "start": "21000",
    "end": "47000"
  },
  {
    "text": "ourselves uh I'm Raj I was an",
    "start": "22760",
    "end": "24880"
  },
  {
    "text": "engineering leader of the team",
    "start": "24880",
    "end": "26080"
  },
  {
    "text": "responsible for running um and managing",
    "start": "26080",
    "end": "28320"
  },
  {
    "text": "mongodb on kubernetes and and I'm here",
    "start": "28320",
    "end": "31039"
  },
  {
    "text": "with my colleague Sebastian I let him",
    "start": "31039",
    "end": "32680"
  },
  {
    "text": "introduce himself hi my name is",
    "start": "32680",
    "end": "34719"
  },
  {
    "text": "Sebastian wasit I'm based in Poland I'm",
    "start": "34719",
    "end": "37840"
  },
  {
    "text": "a Staff engineer working for mongodb",
    "start": "37840",
    "end": "40520"
  },
  {
    "text": "focusing on the hosted and outlas",
    "start": "40520",
    "end": "43640"
  },
  {
    "text": "operators as well as on-prem",
    "start": "43640",
    "end": "47440"
  },
  {
    "start": "47000",
    "end": "135000"
  },
  {
    "text": "deployments all right uh for folks who",
    "start": "47440",
    "end": "49920"
  },
  {
    "text": "are not aware of what mongodb is uh",
    "start": "49920",
    "end": "52640"
  },
  {
    "text": "mongodb is basically a document database",
    "start": "52640",
    "end": "55520"
  },
  {
    "text": "that offers you the flexibility and the",
    "start": "55520",
    "end": "57559"
  },
  {
    "text": "scalability of storing and quering data",
    "start": "57559",
    "end": "60359"
  },
  {
    "text": "however you need the same data the same",
    "start": "60359",
    "end": "62960"
  },
  {
    "text": "database supports different use cases",
    "start": "62960",
    "end": "65000"
  },
  {
    "text": "like streams Vector search and so on now",
    "start": "65000",
    "end": "68799"
  },
  {
    "text": "you can take the server binary and can",
    "start": "68799",
    "end": "70799"
  },
  {
    "text": "run it anywhere you want from your local",
    "start": "70799",
    "end": "72960"
  },
  {
    "text": "machine to on a bunch of machines hosted",
    "start": "72960",
    "end": "75479"
  },
  {
    "text": "somewhere we internally broadly classify",
    "start": "75479",
    "end": "78159"
  },
  {
    "text": "the deployment models into the following",
    "start": "78159",
    "end": "80040"
  },
  {
    "text": "categories to meet the needs of",
    "start": "80040",
    "end": "81680"
  },
  {
    "text": "different personels of our",
    "start": "81680",
    "end": "83680"
  },
  {
    "text": "customers the first one is fully managed",
    "start": "83680",
    "end": "86720"
  },
  {
    "text": "where mongodb offers you a managed",
    "start": "86720",
    "end": "88520"
  },
  {
    "text": "database as a service experience",
    "start": "88520",
    "end": "89920"
  },
  {
    "text": "experience where both the control plane",
    "start": "89920",
    "end": "92079"
  },
  {
    "text": "and the data plane are managed by us we",
    "start": "92079",
    "end": "95040"
  },
  {
    "text": "run it for our users on public Cloud",
    "start": "95040",
    "end": "97759"
  },
  {
    "text": "infrastructure Atlas is mongodb's",
    "start": "97759",
    "end": "100200"
  },
  {
    "text": "completely managed",
    "start": "100200",
    "end": "101680"
  },
  {
    "text": "offering the second model is something",
    "start": "101680",
    "end": "103920"
  },
  {
    "text": "we call semi-managed where the data",
    "start": "103920",
    "end": "106520"
  },
  {
    "text": "plane is on our customer data center but",
    "start": "106520",
    "end": "109399"
  },
  {
    "text": "the control plane which we call as Cloud",
    "start": "109399",
    "end": "111280"
  },
  {
    "text": "manager is managed and run by",
    "start": "111280",
    "end": "113840"
  },
  {
    "text": "mongodb the third one selfhosted is what",
    "start": "113840",
    "end": "117079"
  },
  {
    "text": "we will Deep dive into today where the",
    "start": "117079",
    "end": "119240"
  },
  {
    "text": "customers run both the control plane and",
    "start": "119240",
    "end": "121439"
  },
  {
    "text": "the data plane on their own data centers",
    "start": "121439",
    "end": "123520"
  },
  {
    "text": "or private",
    "start": "123520",
    "end": "125079"
  },
  {
    "text": "Cloud we basically provide the container",
    "start": "125079",
    "end": "127719"
  },
  {
    "text": "images for our self-hosted control plane",
    "start": "127719",
    "end": "130119"
  },
  {
    "text": "which they can run on the data centers",
    "start": "130119",
    "end": "132040"
  },
  {
    "text": "and manage the mongodb",
    "start": "132040",
    "end": "135200"
  },
  {
    "start": "135000",
    "end": "236000"
  },
  {
    "text": "deployments to zoom in further into",
    "start": "135480",
    "end": "137720"
  },
  {
    "text": "selfhosted kubernetes serves as the",
    "start": "137720",
    "end": "139959"
  },
  {
    "text": "backbone for both the control and the",
    "start": "139959",
    "end": "142200"
  },
  {
    "text": "data plane to give some historical",
    "start": "142200",
    "end": "144920"
  },
  {
    "text": "context uh prior to our Cube operators",
    "start": "144920",
    "end": "147800"
  },
  {
    "text": "our users would manually install the",
    "start": "147800",
    "end": "149519"
  },
  {
    "text": "control plane first wire them up and",
    "start": "149519",
    "end": "152319"
  },
  {
    "text": "then configure and deploy the data plane",
    "start": "152319",
    "end": "155319"
  },
  {
    "text": "as you can imagine this would be like a",
    "start": "155319",
    "end": "157400"
  },
  {
    "text": "series of manual potentially error prone",
    "start": "157400",
    "end": "160239"
  },
  {
    "text": "steps to manage a database at scale this",
    "start": "160239",
    "end": "163680"
  },
  {
    "text": "was an ideal use case to automate the",
    "start": "163680",
    "end": "165440"
  },
  {
    "text": "deployment and management of the",
    "start": "165440",
    "end": "167040"
  },
  {
    "text": "database using kubernetes operators for",
    "start": "167040",
    "end": "170120"
  },
  {
    "text": "those who are not familiar with what",
    "start": "170120",
    "end": "171480"
  },
  {
    "text": "operators are it's basically an active",
    "start": "171480",
    "end": "173360"
  },
  {
    "text": "reconciliation Loop running in your",
    "start": "173360",
    "end": "175040"
  },
  {
    "text": "cluster that takes some desired state of",
    "start": "175040",
    "end": "176879"
  },
  {
    "text": "the world and converges the current",
    "start": "176879",
    "end": "179120"
  },
  {
    "text": "state of the world to towards the",
    "start": "179120",
    "end": "180200"
  },
  {
    "text": "desired",
    "start": "180200",
    "end": "181480"
  },
  {
    "text": "State we divide the deployment into two",
    "start": "181480",
    "end": "184040"
  },
  {
    "text": "parts the first one is the control plane",
    "start": "184040",
    "end": "186440"
  },
  {
    "text": "which comprises of the mongodb",
    "start": "186440",
    "end": "187959"
  },
  {
    "text": "kubernetes operator and a software",
    "start": "187959",
    "end": "190239"
  },
  {
    "text": "component called ops manager this is",
    "start": "190239",
    "end": "191959"
  },
  {
    "text": "only needed for the Enterprise",
    "start": "191959",
    "end": "193879"
  },
  {
    "text": "deployments at a high level the operator",
    "start": "193879",
    "end": "196319"
  },
  {
    "text": "handles the kubernetes side of things",
    "start": "196319",
    "end": "198360"
  },
  {
    "text": "like scheduling the database pods uh",
    "start": "198360",
    "end": "200799"
  },
  {
    "text": "doing the upgrades and biing to Vol",
    "start": "200799",
    "end": "203159"
  },
  {
    "text": "volumes and the off manager uh handles",
    "start": "203159",
    "end": "206440"
  },
  {
    "text": "the mongodb side of things like",
    "start": "206440",
    "end": "208239"
  },
  {
    "text": "performing monitoring uh monitoring",
    "start": "208239",
    "end": "210080"
  },
  {
    "text": "backups and",
    "start": "210080",
    "end": "211640"
  },
  {
    "text": "restores the data plane no surprise here",
    "start": "211640",
    "end": "214720"
  },
  {
    "text": "has the mongodb server and a component",
    "start": "214720",
    "end": "216920"
  },
  {
    "text": "we call the",
    "start": "216920",
    "end": "218000"
  },
  {
    "text": "agent the agent is basically a sidecar",
    "start": "218000",
    "end": "220640"
  },
  {
    "text": "proxy which runs along the mongod binary",
    "start": "220640",
    "end": "223360"
  },
  {
    "text": "which gets the instructions from the",
    "start": "223360",
    "end": "224680"
  },
  {
    "text": "control plane and ensures that the",
    "start": "224680",
    "end": "226480"
  },
  {
    "text": "mongodb server is running with the same",
    "start": "226480",
    "end": "228319"
  },
  {
    "text": "instructions that we have configured in",
    "start": "228319",
    "end": "229879"
  },
  {
    "text": "the data plane I will now hand it over",
    "start": "229879",
    "end": "232400"
  },
  {
    "text": "to Sebastian to zoom in further into the",
    "start": "232400",
    "end": "236200"
  },
  {
    "start": "236000",
    "end": "255000"
  },
  {
    "text": "design going forward with the mongod be",
    "start": "236480",
    "end": "239439"
  },
  {
    "text": "ENT price operator architecture imagine",
    "start": "239439",
    "end": "242560"
  },
  {
    "text": "a running kuus cluster with mongodb",
    "start": "242560",
    "end": "245760"
  },
  {
    "text": "operator deployed in one of the",
    "start": "245760",
    "end": "248640"
  },
  {
    "text": "namespaces let's take the initial step",
    "start": "248640",
    "end": "251560"
  },
  {
    "text": "by deploying an ops manager custom",
    "start": "251560",
    "end": "255479"
  },
  {
    "start": "255000",
    "end": "317000"
  },
  {
    "text": "resource once the ops manager CR is",
    "start": "255479",
    "end": "259079"
  },
  {
    "text": "discovered by the operator it creates an",
    "start": "259079",
    "end": "261759"
  },
  {
    "text": "updb it is a backing database for ops",
    "start": "261759",
    "end": "265520"
  },
  {
    "text": "manager",
    "start": "265520",
    "end": "266919"
  },
  {
    "text": "application going to the abdb pod it is",
    "start": "266919",
    "end": "270080"
  },
  {
    "text": "composed of two containers a database",
    "start": "270080",
    "end": "273720"
  },
  {
    "text": "and an automation agent what makes this",
    "start": "273720",
    "end": "276479"
  },
  {
    "text": "setup interesting is the role of the",
    "start": "276479",
    "end": "278759"
  },
  {
    "text": "agent it is responsible for rendering",
    "start": "278759",
    "end": "281919"
  },
  {
    "text": "the entire configuration static and",
    "start": "281919",
    "end": "284720"
  },
  {
    "text": "verion each time we would like to change",
    "start": "284720",
    "end": "287320"
  },
  {
    "text": "anything in the database for example",
    "start": "287320",
    "end": "289960"
  },
  {
    "text": "create a new role or a new user the",
    "start": "289960",
    "end": "293759"
  },
  {
    "text": "operator creates a new version of the",
    "start": "293759",
    "end": "296000"
  },
  {
    "text": "automation config which is then served",
    "start": "296000",
    "end": "298720"
  },
  {
    "text": "to the agents",
    "start": "298720",
    "end": "300479"
  },
  {
    "text": "the agents deploy all the changes into",
    "start": "300479",
    "end": "302960"
  },
  {
    "text": "the database think of the agent as a",
    "start": "302960",
    "end": "306000"
  },
  {
    "text": "myestro of the mongod orchestra with",
    "start": "306000",
    "end": "309039"
  },
  {
    "text": "full control over database from managing",
    "start": "309039",
    "end": "312160"
  },
  {
    "text": "its life cycle to orchestrating backup",
    "start": "312160",
    "end": "315400"
  },
  {
    "text": "and restore",
    "start": "315400",
    "end": "318080"
  },
  {
    "text": "processes as we move forward the",
    "start": "318080",
    "end": "321120"
  },
  {
    "text": "operator deploys an ops manager it is a",
    "start": "321120",
    "end": "324280"
  },
  {
    "text": "Java based application focused on the",
    "start": "324280",
    "end": "326919"
  },
  {
    "text": "operational aspect of the mongodb system",
    "start": "326919",
    "end": "331120"
  },
  {
    "text": "it is useful to think about ops manager",
    "start": "331120",
    "end": "333400"
  },
  {
    "text": "as an administrative panel for mongodb",
    "start": "333400",
    "end": "337120"
  },
  {
    "text": "databases that has additional",
    "start": "337120",
    "end": "339520"
  },
  {
    "text": "responsibilities for backups including",
    "start": "339520",
    "end": "342080"
  },
  {
    "text": "all the housekeeping work monitoring",
    "start": "342080",
    "end": "345160"
  },
  {
    "text": "alerting and supervising the running",
    "start": "345160",
    "end": "347560"
  },
  {
    "text": "mongodb clusters typically a single",
    "start": "347560",
    "end": "351360"
  },
  {
    "text": "instance of an ops manager is managing",
    "start": "351360",
    "end": "354000"
  },
  {
    "text": "multiple mongodb",
    "start": "354000",
    "end": "357240"
  },
  {
    "start": "357000",
    "end": "404000"
  },
  {
    "text": "clusters once ops manager deployed",
    "start": "357280",
    "end": "359600"
  },
  {
    "text": "deployed users typically start deploying",
    "start": "359600",
    "end": "362160"
  },
  {
    "text": "mongodb workloads with mongodb custom",
    "start": "362160",
    "end": "366280"
  },
  {
    "text": "resources the agent processes download",
    "start": "366280",
    "end": "369360"
  },
  {
    "text": "all necessary data from ops manager and",
    "start": "369360",
    "end": "372280"
  },
  {
    "text": "kikongo D off once everything is running",
    "start": "372280",
    "end": "376199"
  },
  {
    "text": "we can expose the cluster to the outer",
    "start": "376199",
    "end": "378280"
  },
  {
    "text": "consumption in this example we are using",
    "start": "378280",
    "end": "380720"
  },
  {
    "text": "not Port Services but using load",
    "start": "380720",
    "end": "383599"
  },
  {
    "text": "balancers is yet another popular",
    "start": "383599",
    "end": "387000"
  },
  {
    "text": "option BR previously talked quite a bit",
    "start": "387000",
    "end": "390120"
  },
  {
    "text": "about the control and data plane",
    "start": "390120",
    "end": "392479"
  },
  {
    "text": "separation in our example we can draw a",
    "start": "392479",
    "end": "395360"
  },
  {
    "text": "horizontal line and the yellow part of",
    "start": "395360",
    "end": "398240"
  },
  {
    "text": "the slide represents the control plane",
    "start": "398240",
    "end": "400919"
  },
  {
    "text": "whereas the gray one the data",
    "start": "400919",
    "end": "404039"
  },
  {
    "start": "404000",
    "end": "505000"
  },
  {
    "text": "plane so when is thinking about the",
    "start": "404039",
    "end": "407919"
  },
  {
    "text": "control and data plane separation useful",
    "start": "407919",
    "end": "410400"
  },
  {
    "text": "Well turns out we have very creative",
    "start": "410400",
    "end": "414080"
  },
  {
    "text": "customers who started using the operator",
    "start": "414080",
    "end": "416800"
  },
  {
    "text": "in a way we haven't thought about some",
    "start": "416800",
    "end": "419919"
  },
  {
    "text": "customers build their own internal data",
    "start": "419919",
    "end": "423520"
  },
  {
    "text": "platforms they often expose a way to",
    "start": "423520",
    "end": "426720"
  },
  {
    "text": "create mongodb clusters on Demand by",
    "start": "426720",
    "end": "429960"
  },
  {
    "text": "their internal development teams this",
    "start": "429960",
    "end": "433120"
  },
  {
    "text": "enables them to take the best out of Two",
    "start": "433120",
    "end": "435240"
  },
  {
    "text": "Worlds centralized control plane with",
    "start": "435240",
    "end": "438199"
  },
  {
    "text": "centralized reporting and creating",
    "start": "438199",
    "end": "440720"
  },
  {
    "text": "clusters on",
    "start": "440720",
    "end": "442199"
  },
  {
    "text": "demand this example made us realize a",
    "start": "442199",
    "end": "445120"
  },
  {
    "text": "few things ops manager and mongod dbcs",
    "start": "445120",
    "end": "450160"
  },
  {
    "text": "cannot directly relate to each other the",
    "start": "450160",
    "end": "453800"
  },
  {
    "text": "reference between them needs to be",
    "start": "453800",
    "end": "455800"
  },
  {
    "text": "supplied in a standard form such as",
    "start": "455800",
    "end": "457840"
  },
  {
    "text": "config map or a secret the mongod VCRs",
    "start": "457840",
    "end": "461960"
  },
  {
    "text": "need quite often to be prepopulated to",
    "start": "461960",
    "end": "465520"
  },
  {
    "text": "point to the centralized control plane",
    "start": "465520",
    "end": "468319"
  },
  {
    "text": "this is where the opinionated templates",
    "start": "468319",
    "end": "470919"
  },
  {
    "text": "come into play and Helm is just one tool",
    "start": "470919",
    "end": "473800"
  },
  {
    "text": "to enable that the mongodb Clusters May",
    "start": "473800",
    "end": "478120"
  },
  {
    "text": "reside in different physical",
    "start": "478120",
    "end": "480599"
  },
  {
    "text": "locations as long as there's",
    "start": "480599",
    "end": "482599"
  },
  {
    "text": "connectivity between the data plane and",
    "start": "482599",
    "end": "485199"
  },
  {
    "text": "control plane everything should work out",
    "start": "485199",
    "end": "487720"
  },
  {
    "text": "of the box finally the control plane",
    "start": "487720",
    "end": "491599"
  },
  {
    "text": "doesn't need to be deployed on top of",
    "start": "491599",
    "end": "493599"
  },
  {
    "text": "cube some of the customers choose VM",
    "start": "493599",
    "end": "496479"
  },
  {
    "text": "deployments for it now let's have a look",
    "start": "496479",
    "end": "499680"
  },
  {
    "text": "at some of the pitfalls with fallen into",
    "start": "499680",
    "end": "501879"
  },
  {
    "text": "and designing the operator over to your",
    "start": "501879",
    "end": "505400"
  },
  {
    "start": "505000",
    "end": "573000"
  },
  {
    "text": "Raj all right uh running a stateful",
    "start": "505400",
    "end": "508400"
  },
  {
    "text": "application like data on kubernetes two",
    "start": "508400",
    "end": "510960"
  },
  {
    "text": "of the areas where we had to be more",
    "start": "510960",
    "end": "512959"
  },
  {
    "text": "thoughtful while evaluating the",
    "start": "512959",
    "end": "514518"
  },
  {
    "text": "trade-offs and the design decisions were",
    "start": "514519",
    "end": "516479"
  },
  {
    "text": "around storage and",
    "start": "516479",
    "end": "518320"
  },
  {
    "text": "networking on the storage side we have",
    "start": "518320",
    "end": "520760"
  },
  {
    "text": "tried to be as agnostic as possible of",
    "start": "520760",
    "end": "523039"
  },
  {
    "text": "the underlying storage that our users",
    "start": "523039",
    "end": "524760"
  },
  {
    "text": "provisioned for the",
    "start": "524760",
    "end": "526240"
  },
  {
    "text": "database we do provide some defaults but",
    "start": "526240",
    "end": "529040"
  },
  {
    "text": "we let users configure most of the",
    "start": "529040",
    "end": "530760"
  },
  {
    "text": "parameters related to storage like users",
    "start": "530760",
    "end": "532880"
  },
  {
    "text": "can leverage CSI topology to collocate",
    "start": "532880",
    "end": "535279"
  },
  {
    "text": "the database pods alongside the storage",
    "start": "535279",
    "end": "538279"
  },
  {
    "text": "they can override persist settings for",
    "start": "538279",
    "end": "540320"
  },
  {
    "text": "mongodb journals and oplocks all this is",
    "start": "540320",
    "end": "543160"
  },
  {
    "text": "possible via the custom resource where",
    "start": "543160",
    "end": "545399"
  },
  {
    "text": "they can provide the override",
    "start": "545399",
    "end": "547760"
  },
  {
    "text": "settings lastly we would like to call",
    "start": "547760",
    "end": "549880"
  },
  {
    "text": "out this particular Upstream issue",
    "start": "549880",
    "end": "551720"
  },
  {
    "text": "around supporting volume resize via the",
    "start": "551720",
    "end": "554120"
  },
  {
    "text": "state F",
    "start": "554120",
    "end": "555079"
  },
  {
    "text": "set currently you would need to patch",
    "start": "555079",
    "end": "557480"
  },
  {
    "text": "the volume off from the stateful set",
    "start": "557480",
    "end": "559399"
  },
  {
    "text": "pods and recreate the stateful set to",
    "start": "559399",
    "end": "561399"
  },
  {
    "text": "resize the storage we are in the process",
    "start": "561399",
    "end": "564240"
  },
  {
    "text": "of automating it so that our users don't",
    "start": "564240",
    "end": "566440"
  },
  {
    "text": "need to perform these manual steps but",
    "start": "566440",
    "end": "569399"
  },
  {
    "text": "having a support for this in the",
    "start": "569399",
    "end": "570839"
  },
  {
    "text": "Upstream would be the ideal",
    "start": "570839",
    "end": "573720"
  },
  {
    "start": "573000",
    "end": "690000"
  },
  {
    "text": "fix on the networking side basically we",
    "start": "573720",
    "end": "576959"
  },
  {
    "text": "have two Communications that are",
    "start": "576959",
    "end": "578279"
  },
  {
    "text": "happening one is between the database",
    "start": "578279",
    "end": "580760"
  },
  {
    "text": "nodes to perform operations like Quorum",
    "start": "580760",
    "end": "583560"
  },
  {
    "text": "or replication and the second is from",
    "start": "583560",
    "end": "585920"
  },
  {
    "text": "the database clients or the drivers",
    "start": "585920",
    "end": "587880"
  },
  {
    "text": "talking to the",
    "start": "587880",
    "end": "589000"
  },
  {
    "text": "DB if both these communications are",
    "start": "589000",
    "end": "591399"
  },
  {
    "text": "happening within the cluster things are",
    "start": "591399",
    "end": "593360"
  },
  {
    "text": "pretty straightforward and we Leverage",
    "start": "593360",
    "end": "595360"
  },
  {
    "text": "The Headless service that we create for",
    "start": "595360",
    "end": "597440"
  },
  {
    "text": "the mongodb stateful set to enable it",
    "start": "597440",
    "end": "600640"
  },
  {
    "text": "things get slightly interesting when we",
    "start": "600640",
    "end": "602399"
  },
  {
    "text": "start looking into the DB drivers living",
    "start": "602399",
    "end": "604560"
  },
  {
    "text": "outside the kubes",
    "start": "604560",
    "end": "606800"
  },
  {
    "text": "cluster we leverage something called the",
    "start": "606800",
    "end": "609560"
  },
  {
    "text": "split Horizon feature in the server I",
    "start": "609560",
    "end": "612079"
  },
  {
    "text": "won't Deep dive too much into it but at",
    "start": "612079",
    "end": "614320"
  },
  {
    "text": "a high level think of it like the server",
    "start": "614320",
    "end": "616440"
  },
  {
    "text": "has a notion of multiple address",
    "start": "616440",
    "end": "618839"
  },
  {
    "text": "spaces which means that within the",
    "start": "618839",
    "end": "621120"
  },
  {
    "text": "cluster it can talk over the service of",
    "start": "621120",
    "end": "623560"
  },
  {
    "text": "qn and for the outside cluster it can",
    "start": "623560",
    "end": "626200"
  },
  {
    "text": "lever it can leverage the load balancer",
    "start": "626200",
    "end": "628079"
  },
  {
    "text": "host name for the DB client",
    "start": "628079",
    "end": "630680"
  },
  {
    "text": "it does this by maintaining a lookup",
    "start": "630680",
    "end": "632279"
  },
  {
    "text": "table where the key is basically a",
    "start": "632279",
    "end": "634160"
  },
  {
    "text": "horizon or the view and the values are",
    "start": "634160",
    "end": "636560"
  },
  {
    "text": "basically the server addresses",
    "start": "636560",
    "end": "637959"
  },
  {
    "text": "corresponding to that view the advantage",
    "start": "637959",
    "end": "640760"
  },
  {
    "text": "of this approach is that the internode",
    "start": "640760",
    "end": "642480"
  },
  {
    "text": "communication still happens without",
    "start": "642480",
    "end": "644959"
  },
  {
    "text": "leaving the cluster so there's a low",
    "start": "644959",
    "end": "647360"
  },
  {
    "text": "Network latency while the drivers are",
    "start": "647360",
    "end": "649560"
  },
  {
    "text": "still talking over a load",
    "start": "649560",
    "end": "651360"
  },
  {
    "text": "balancer the second way is to override",
    "start": "651360",
    "end": "653800"
  },
  {
    "text": "the addresses of each server with the",
    "start": "653800",
    "end": "655920"
  },
  {
    "text": "load balancer hosting that provision for",
    "start": "655920",
    "end": "657959"
  },
  {
    "text": "each of the mongodb nodes",
    "start": "657959",
    "end": "660800"
  },
  {
    "text": "the reason why someone would do this is",
    "start": "660800",
    "end": "662680"
  },
  {
    "text": "because the cluster certificate",
    "start": "662680",
    "end": "664160"
  },
  {
    "text": "Authority might not be able to provision",
    "start": "664160",
    "end": "666320"
  },
  {
    "text": "certificate for the local fqdn which is",
    "start": "666320",
    "end": "668480"
  },
  {
    "text": "service. cluster. looc so they need one",
    "start": "668480",
    "end": "671160"
  },
  {
    "text": "Central host name to Central host name",
    "start": "671160",
    "end": "673079"
  },
  {
    "text": "to serve traffic as you would have",
    "start": "673079",
    "end": "675120"
  },
  {
    "text": "guessed already uh the downset of this",
    "start": "675120",
    "end": "677320"
  },
  {
    "text": "approach is that the internal TV",
    "start": "677320",
    "end": "678839"
  },
  {
    "text": "communication is also happening over a",
    "start": "678839",
    "end": "680440"
  },
  {
    "text": "load balancer which might entail some",
    "start": "680440",
    "end": "682800"
  },
  {
    "text": "latency lastly we are looking into",
    "start": "682800",
    "end": "685320"
  },
  {
    "text": "leveraging service measure options which",
    "start": "685320",
    "end": "687160"
  },
  {
    "text": "I will talk about a bit more in the next",
    "start": "687160",
    "end": "688880"
  },
  {
    "text": "slide",
    "start": "688880",
    "end": "691240"
  },
  {
    "start": "690000",
    "end": "798000"
  },
  {
    "text": "all right uh multicluster is one of the",
    "start": "691880",
    "end": "693519"
  },
  {
    "text": "topics that we excited to talk about uh",
    "start": "693519",
    "end": "695959"
  },
  {
    "text": "where we let users run the mongodb",
    "start": "695959",
    "end": "698000"
  },
  {
    "text": "deployments across multiple isolated",
    "start": "698000",
    "end": "700279"
  },
  {
    "text": "kues clusters potentially spread across",
    "start": "700279",
    "end": "702920"
  },
  {
    "text": "different regions currently we only SP",
    "start": "702920",
    "end": "706120"
  },
  {
    "text": "uh only span the data plane across",
    "start": "706120",
    "end": "708040"
  },
  {
    "text": "multiple kues clusters we have this",
    "start": "708040",
    "end": "710800"
  },
  {
    "text": "notion of Central and member clusters",
    "start": "710800",
    "end": "713959"
  },
  {
    "text": "the central cluster is basically where",
    "start": "713959",
    "end": "715800"
  },
  {
    "text": "the control plane runs and the member",
    "start": "715800",
    "end": "717639"
  },
  {
    "text": "cluster is for the data plane",
    "start": "717639",
    "end": "720480"
  },
  {
    "text": "having said that if users want to",
    "start": "720480",
    "end": "722800"
  },
  {
    "text": "optimize for resources they can leverage",
    "start": "722800",
    "end": "724959"
  },
  {
    "text": "the same cluster for both the uh uh",
    "start": "724959",
    "end": "727839"
  },
  {
    "text": "control plane and the data",
    "start": "727839",
    "end": "729600"
  },
  {
    "text": "plane as I briefly touched upon in the",
    "start": "729600",
    "end": "732040"
  },
  {
    "text": "previous slide we heavily recommend our",
    "start": "732040",
    "end": "734160"
  },
  {
    "text": "users to leverage a service mesh",
    "start": "734160",
    "end": "735760"
  },
  {
    "text": "solution to solve the problem of mongodb",
    "start": "735760",
    "end": "738560"
  },
  {
    "text": "server discoverability across",
    "start": "738560",
    "end": "740720"
  },
  {
    "text": "clusters however users can use their own",
    "start": "740720",
    "end": "743279"
  },
  {
    "text": "networking solution if need be we have",
    "start": "743279",
    "end": "746199"
  },
  {
    "text": "tried to we have tried to make the",
    "start": "746199",
    "end": "747600"
  },
  {
    "text": "design fairly agnostic of of the",
    "start": "747600",
    "end": "749560"
  },
  {
    "text": "networking solution that they",
    "start": "749560",
    "end": "751680"
  },
  {
    "text": "choose one of the capabilities I would",
    "start": "751680",
    "end": "753959"
  },
  {
    "text": "like to briefly touch on is handling Dr",
    "start": "753959",
    "end": "757199"
  },
  {
    "text": "scenarios users can uh leverage the",
    "start": "757199",
    "end": "759839"
  },
  {
    "text": "operator to perform the Dr scenarios",
    "start": "759839",
    "end": "762760"
  },
  {
    "text": "automatically where the operator does",
    "start": "762760",
    "end": "764680"
  },
  {
    "text": "the health check for each of the member",
    "start": "764680",
    "end": "766839"
  },
  {
    "text": "clusters and verifies if it's down if",
    "start": "766839",
    "end": "769839"
  },
  {
    "text": "it's failing health check it tries to",
    "start": "769839",
    "end": "771800"
  },
  {
    "text": "shuffle around nodes to healthy cluster",
    "start": "771800",
    "end": "774079"
  },
  {
    "text": "based on some algorithm to distribute",
    "start": "774079",
    "end": "776839"
  },
  {
    "text": "the workloads efficiently and evenly",
    "start": "776839",
    "end": "780399"
  },
  {
    "text": "for customers who don't want to use the",
    "start": "780399",
    "end": "782120"
  },
  {
    "text": "automatic Dr feature we also provide a",
    "start": "782120",
    "end": "784399"
  },
  {
    "text": "CLI experience which users can leverage",
    "start": "784399",
    "end": "787839"
  },
  {
    "text": "to perform the recover manually by",
    "start": "787839",
    "end": "789680"
  },
  {
    "text": "interacting with the customer",
    "start": "789680",
    "end": "791720"
  },
  {
    "text": "Source I will now hand over to Sebastian",
    "start": "791720",
    "end": "794560"
  },
  {
    "text": "to talk about few of the future",
    "start": "794560",
    "end": "797959"
  },
  {
    "start": "798000",
    "end": "960000"
  },
  {
    "text": "challenges at the moment we are working",
    "start": "798959",
    "end": "801399"
  },
  {
    "text": "on a few very exciting projects that I",
    "start": "801399",
    "end": "803440"
  },
  {
    "text": "wanted to share with you as R mentioned",
    "start": "803440",
    "end": "807000"
  },
  {
    "text": "we've used the hob cluster pattern for",
    "start": "807000",
    "end": "809639"
  },
  {
    "text": "multicluster deployments now we'd like",
    "start": "809639",
    "end": "812440"
  },
  {
    "text": "to take this one step further and think",
    "start": "812440",
    "end": "815560"
  },
  {
    "text": "how to make the control plane more",
    "start": "815560",
    "end": "818639"
  },
  {
    "text": "highly available we are exploring",
    "start": "818639",
    "end": "821160"
  },
  {
    "text": "different possibilities including the",
    "start": "821160",
    "end": "823880"
  },
  {
    "text": "operator failover or designing it in",
    "start": "823880",
    "end": "826760"
  },
  {
    "text": "such a way so that it can be moved from",
    "start": "826760",
    "end": "829279"
  },
  {
    "text": "cluster to Cluster very",
    "start": "829279",
    "end": "831079"
  },
  {
    "text": "quickly another very interesting topic",
    "start": "831079",
    "end": "834240"
  },
  {
    "text": "that recently popped up is to allocate",
    "start": "834240",
    "end": "837480"
  },
  {
    "text": "different resources for specific pods in",
    "start": "837480",
    "end": "840519"
  },
  {
    "text": "a stateful set in order to unlock the",
    "start": "840519",
    "end": "843120"
  },
  {
    "text": "full potential of mongodb the primary",
    "start": "843120",
    "end": "846040"
  },
  {
    "text": "needs to have faster discs because it",
    "start": "846040",
    "end": "848839"
  },
  {
    "text": "perform rides and more memory because of",
    "start": "848839",
    "end": "852120"
  },
  {
    "text": "query",
    "start": "852120",
    "end": "853639"
  },
  {
    "text": "aggregation the existing stateful set",
    "start": "853639",
    "end": "856199"
  },
  {
    "text": "implementation doesn't provide such",
    "start": "856199",
    "end": "858440"
  },
  {
    "text": "options but we are investigating the",
    "start": "858440",
    "end": "860839"
  },
  {
    "text": "leader worker set that could help us",
    "start": "860839",
    "end": "864360"
  },
  {
    "text": "here next one is external connectivity",
    "start": "864360",
    "end": "868399"
  },
  {
    "text": "mongodb uses an intelligent driver that",
    "start": "868399",
    "end": "871279"
  },
  {
    "text": "picks specific nodes in a replica set",
    "start": "871279",
    "end": "874759"
  },
  {
    "text": "for that reason we require to deploy a",
    "start": "874759",
    "end": "878120"
  },
  {
    "text": "load balancer in front of every replica",
    "start": "878120",
    "end": "881720"
  },
  {
    "text": "set member we are experimenting with",
    "start": "881720",
    "end": "884360"
  },
  {
    "text": "sacrificing a bit of performance and",
    "start": "884360",
    "end": "887240"
  },
  {
    "text": "making this scenario a little bit more",
    "start": "887240",
    "end": "889320"
  },
  {
    "text": "user friendly there are number of",
    "start": "889320",
    "end": "891880"
  },
  {
    "text": "options on table including our own",
    "start": "891880",
    "end": "894759"
  },
  {
    "text": "s processes that aggregate data from",
    "start": "894759",
    "end": "898279"
  },
  {
    "text": "multiple n noes and can act as routers",
    "start": "898279",
    "end": "901920"
  },
  {
    "text": "but we are also considering using Envoy",
    "start": "901920",
    "end": "904279"
  },
  {
    "text": "proxy and teaching it certain aspects of",
    "start": "904279",
    "end": "907800"
  },
  {
    "text": "the mongodb wire protocol so to Route",
    "start": "907800",
    "end": "910560"
  },
  {
    "text": "the traffic effectively finally the",
    "start": "910560",
    "end": "913519"
  },
  {
    "text": "Gateway API will help us providing",
    "start": "913519",
    "end": "916240"
  },
  {
    "text": "streamlined",
    "start": "916240",
    "end": "918600"
  },
  {
    "text": "experience last but not least is",
    "start": "918600",
    "end": "921680"
  },
  {
    "text": "telemetry anyone who tried to collect",
    "start": "921680",
    "end": "924279"
  },
  {
    "text": "Telemetry data knows that customers",
    "start": "924279",
    "end": "926800"
  },
  {
    "text": "quite often disable it in production and",
    "start": "926800",
    "end": "929319"
  },
  {
    "text": "Gathering data from Dev and staging",
    "start": "929319",
    "end": "932160"
  },
  {
    "text": "clusters doesn't really make sense so we",
    "start": "932160",
    "end": "935639"
  },
  {
    "text": "are experimenting with different",
    "start": "935639",
    "end": "937279"
  },
  {
    "text": "approaches but as always we'd like to",
    "start": "937279",
    "end": "939480"
  },
  {
    "text": "act as good citizens collect only data",
    "start": "939480",
    "end": "942279"
  },
  {
    "text": "we are allowed to anonymize sensitive",
    "start": "942279",
    "end": "945440"
  },
  {
    "text": "information and ensure we have enough",
    "start": "945440",
    "end": "948160"
  },
  {
    "text": "insights for our customers so that we",
    "start": "948160",
    "end": "950759"
  },
  {
    "text": "could drive our business",
    "start": "950759",
    "end": "953600"
  },
  {
    "text": "effectively having said that thank you",
    "start": "953600",
    "end": "955920"
  },
  {
    "text": "all for listening and we are ready to",
    "start": "955920",
    "end": "957959"
  },
  {
    "text": "take the questions",
    "start": "957959",
    "end": "960920"
  },
  {
    "start": "960000",
    "end": "992000"
  },
  {
    "text": "thank",
    "start": "980839",
    "end": "982040"
  },
  {
    "text": "you hey thank you for the presentation",
    "start": "982040",
    "end": "985759"
  },
  {
    "text": "your mention about M cluster and I saw",
    "start": "985759",
    "end": "989759"
  },
  {
    "text": "in the the diagram that you were",
    "start": "989759",
    "end": "992079"
  },
  {
    "start": "992000",
    "end": "1190000"
  },
  {
    "text": "showing you mentioned that you need a",
    "start": "992079",
    "end": "994959"
  },
  {
    "text": "dedicated centralized cluster right can",
    "start": "994959",
    "end": "997240"
  },
  {
    "text": "you explain exactly",
    "start": "997240",
    "end": "999160"
  },
  {
    "text": "why yeah thank you for the question um",
    "start": "999160",
    "end": "1002319"
  },
  {
    "text": "so the reason we have a separation of",
    "start": "1002319",
    "end": "1005160"
  },
  {
    "text": "the Central and the member cluster is",
    "start": "1005160",
    "end": "1006759"
  },
  {
    "text": "primarily because of the separation of",
    "start": "1006759",
    "end": "1008279"
  },
  {
    "text": "concern like we want to dedicate a",
    "start": "1008279",
    "end": "1010519"
  },
  {
    "text": "particular cluster for only the control",
    "start": "1010519",
    "end": "1012199"
  },
  {
    "text": "plane and a particular set of clusters",
    "start": "1012199",
    "end": "1014279"
  },
  {
    "text": "for the data plane this is pretty",
    "start": "1014279",
    "end": "1016839"
  },
  {
    "text": "similar to how equ Works in general like",
    "start": "1016839",
    "end": "1019759"
  },
  {
    "text": "you have the master nodes for the",
    "start": "1019759",
    "end": "1020920"
  },
  {
    "text": "control plane and the regular nodes for",
    "start": "1020920",
    "end": "1022839"
  },
  {
    "text": "your actual",
    "start": "1022839",
    "end": "1024038"
  },
  {
    "text": "workloads having said that uh as I",
    "start": "1024039",
    "end": "1026720"
  },
  {
    "text": "mentioned if you want to optimize for",
    "start": "1026720",
    "end": "1028959"
  },
  {
    "text": "resources you can use the same you can",
    "start": "1028959",
    "end": "1030880"
  },
  {
    "text": "choose the same cluster for both this",
    "start": "1030880",
    "end": "1032880"
  },
  {
    "text": "like the control plane and the data",
    "start": "1032880",
    "end": "1034199"
  },
  {
    "text": "plane we we don't make it a hard",
    "start": "1034199",
    "end": "1038079"
  },
  {
    "text": "requirement I think we even have some",
    "start": "1038079",
    "end": "1040360"
  },
  {
    "text": "customers that run two clusters only and",
    "start": "1040360",
    "end": "1043199"
  },
  {
    "text": "they squash everything into those two",
    "start": "1043199",
    "end": "1045280"
  },
  {
    "text": "clusters so there are many different",
    "start": "1045280",
    "end": "1047600"
  },
  {
    "text": "options you can deploy things don't set",
    "start": "1047600",
    "end": "1049799"
  },
  {
    "text": "any hard requirements um so it's really",
    "start": "1049799",
    "end": "1053440"
  },
  {
    "text": "up to the customer how to deploy",
    "start": "1053440",
    "end": "1056960"
  },
  {
    "text": "it uh hello uh I wanted to ask you about",
    "start": "1058760",
    "end": "1062360"
  },
  {
    "text": "the state for set because you briefly",
    "start": "1062360",
    "end": "1064880"
  },
  {
    "text": "touch several topics that probably the",
    "start": "1064880",
    "end": "1066880"
  },
  {
    "text": "state will set for bits for now I just",
    "start": "1066880",
    "end": "1069400"
  },
  {
    "text": "wanted to ask uh about your thoughts to",
    "start": "1069400",
    "end": "1072120"
  },
  {
    "text": "migrate to something else maybe to",
    "start": "1072120",
    "end": "1074080"
  },
  {
    "text": "manage the plots on your own or you",
    "start": "1074080",
    "end": "1075840"
  },
  {
    "text": "mentioned some other Solutions we do",
    "start": "1075840",
    "end": "1078039"
  },
  {
    "text": "have a great example example with cl",
    "start": "1078039",
    "end": "1079840"
  },
  {
    "text": "native PG that switched or the other",
    "start": "1079840",
    "end": "1083640"
  },
  {
    "text": "pogress operators typically used State",
    "start": "1083640",
    "end": "1085559"
  },
  {
    "text": "Forest up to some extent the cloud",
    "start": "1085559",
    "end": "1088039"
  },
  {
    "text": "native P does this otherwise so I was",
    "start": "1088039",
    "end": "1090200"
  },
  {
    "text": "just wondering what are your options",
    "start": "1090200",
    "end": "1092360"
  },
  {
    "text": "here and if you see any benefits",
    "start": "1092360",
    "end": "1094039"
  },
  {
    "text": "switching uh away from state",
    "start": "1094039",
    "end": "1098000"
  },
  {
    "text": "foret so",
    "start": "1098039",
    "end": "1100840"
  },
  {
    "text": "um the answer we we don't have any",
    "start": "1100840",
    "end": "1104240"
  },
  {
    "text": "straightforward answer so we started",
    "start": "1104240",
    "end": "1106840"
  },
  {
    "text": "with stateful sets and later as we we",
    "start": "1106840",
    "end": "1108919"
  },
  {
    "text": "were developing the operator we were",
    "start": "1108919",
    "end": "1111840"
  },
  {
    "text": "especially when we were designing the",
    "start": "1111840",
    "end": "1113760"
  },
  {
    "text": "multicluster capabilities we were",
    "start": "1113760",
    "end": "1115600"
  },
  {
    "text": "experimenting with writing custom",
    "start": "1115600",
    "end": "1117159"
  },
  {
    "text": "controllers to do that we even",
    "start": "1117159",
    "end": "1119360"
  },
  {
    "text": "experimented with some controllers that",
    "start": "1119360",
    "end": "1122360"
  },
  {
    "text": "were available back then but it was a",
    "start": "1122360",
    "end": "1125120"
  },
  {
    "text": "few years back so uh the ecosystem",
    "start": "1125120",
    "end": "1127280"
  },
  {
    "text": "wasn't that rich as today so for now we",
    "start": "1127280",
    "end": "1132559"
  },
  {
    "text": "noce very interesting proposal from",
    "start": "1132559",
    "end": "1135159"
  },
  {
    "text": "Google about the leader worker set it's",
    "start": "1135159",
    "end": "1138000"
  },
  {
    "text": "designed for machine learning however it",
    "start": "1138000",
    "end": "1141400"
  },
  {
    "text": "enables us to set those different amount",
    "start": "1141400",
    "end": "1145039"
  },
  {
    "text": "of resources and different amount of",
    "start": "1145039",
    "end": "1146880"
  },
  {
    "text": "expectations from a very specific nodes",
    "start": "1146880",
    "end": "1149720"
  },
  {
    "text": "uh like we have primary and we have also",
    "start": "1149720",
    "end": "1152640"
  },
  {
    "text": "secondaries um so that's one of the",
    "start": "1152640",
    "end": "1155360"
  },
  {
    "text": "hopes that we have that our development",
    "start": "1155360",
    "end": "1157280"
  },
  {
    "text": "could uh could explore later on um but",
    "start": "1157280",
    "end": "1161840"
  },
  {
    "text": "we are open to any suggestions so if you",
    "start": "1161840",
    "end": "1164440"
  },
  {
    "text": "if you have any any good uh things that",
    "start": "1164440",
    "end": "1167000"
  },
  {
    "text": "we could explore we would be more than",
    "start": "1167000",
    "end": "1169320"
  },
  {
    "text": "happy to to take this feedback okay",
    "start": "1169320",
    "end": "1171960"
  },
  {
    "text": "let's discuss thank",
    "start": "1171960",
    "end": "1175080"
  },
  {
    "text": "you hey thanks for the presentation uh",
    "start": "1184360",
    "end": "1187400"
  },
  {
    "text": "regarding the challenges that you un",
    "start": "1187400",
    "end": "1189039"
  },
  {
    "text": "shown in the last",
    "start": "1189039",
    "end": "1191679"
  },
  {
    "text": "slide so oh",
    "start": "1191679",
    "end": "1194240"
  },
  {
    "text": "sorry so for the external connectivity",
    "start": "1194240",
    "end": "1196919"
  },
  {
    "text": "basically I guess Mongol to is used",
    "start": "1196919",
    "end": "1198720"
  },
  {
    "text": "using",
    "start": "1198720",
    "end": "1199640"
  },
  {
    "text": "TCP so what do you guys think about",
    "start": "1199640",
    "end": "1202280"
  },
  {
    "text": "using L4 lbs for instead of going",
    "start": "1202280",
    "end": "1205200"
  },
  {
    "text": "through a Ingress or adding one more H",
    "start": "1205200",
    "end": "1207600"
  },
  {
    "text": "in between clients to the",
    "start": "1207600",
    "end": "1211080"
  },
  {
    "text": "database",
    "start": "1211360",
    "end": "1214039"
  },
  {
    "text": "um sorry uh could you please repeat the",
    "start": "1214039",
    "end": "1216640"
  },
  {
    "text": "question so instead of using Ingress or",
    "start": "1216640",
    "end": "1219440"
  },
  {
    "text": "like one more hop in between clients and",
    "start": "1219440",
    "end": "1221640"
  },
  {
    "text": "the debas so what are your thoughts",
    "start": "1221640",
    "end": "1224000"
  },
  {
    "text": "about using L4 lbas in",
    "start": "1224000",
    "end": "1227640"
  },
  {
    "text": "between",
    "start": "1227640",
    "end": "1230120"
  },
  {
    "text": "L Force you mean the uh when we use load",
    "start": "1230120",
    "end": "1233520"
  },
  {
    "text": "so what's the maybe let's um let's",
    "start": "1233520",
    "end": "1236640"
  },
  {
    "text": "explore what the scenario here the",
    "start": "1236640",
    "end": "1238400"
  },
  {
    "text": "customer is outside of the of the",
    "start": "1238400",
    "end": "1240640"
  },
  {
    "text": "cluster and we have cluster inside of",
    "start": "1240640",
    "end": "1243520"
  },
  {
    "text": "Cube and we are trying to connect to it",
    "start": "1243520",
    "end": "1246640"
  },
  {
    "text": "yes so basically we talk about database",
    "start": "1246640",
    "end": "1249520"
  },
  {
    "text": "here so it's huge amount of data when we",
    "start": "1249520",
    "end": "1251320"
  },
  {
    "text": "add like more hops in between it might",
    "start": "1251320",
    "end": "1253559"
  },
  {
    "text": "add few latencies So to avoid that what",
    "start": "1253559",
    "end": "1257559"
  },
  {
    "text": "like do we have any ideas to reduce the",
    "start": "1257559",
    "end": "1259559"
  },
  {
    "text": "number of hops in between like for",
    "start": "1259559",
    "end": "1261720"
  },
  {
    "text": "example celum",
    "start": "1261720",
    "end": "1263880"
  },
  {
    "text": "provides uh load balance at L4",
    "start": "1263880",
    "end": "1268240"
  },
  {
    "text": "level okay so uh I think this this",
    "start": "1268240",
    "end": "1270919"
  },
  {
    "text": "problem could be split into two pieces",
    "start": "1270919",
    "end": "1272919"
  },
  {
    "text": "one of them is the scenario that that",
    "start": "1272919",
    "end": "1276039"
  },
  {
    "text": "the the client application is outside of",
    "start": "1276039",
    "end": "1278799"
  },
  {
    "text": "kuber's cluster and we Al we need L4",
    "start": "1278799",
    "end": "1282240"
  },
  {
    "text": "load balancers to connect to the mongodb",
    "start": "1282240",
    "end": "1284520"
  },
  {
    "text": "cluster because mongodb wire protocol is",
    "start": "1284520",
    "end": "1287200"
  },
  {
    "text": "built on top of TC P it's not HTTP",
    "start": "1287200",
    "end": "1290120"
  },
  {
    "text": "protocol so that's why we need L4 load",
    "start": "1290120",
    "end": "1293360"
  },
  {
    "text": "balancer for it now we also explored the",
    "start": "1293360",
    "end": "1297039"
  },
  {
    "text": "for simplification we explored the",
    "start": "1297039",
    "end": "1299400"
  },
  {
    "text": "scenario of",
    "start": "1299400",
    "end": "1301080"
  },
  {
    "text": "having a replica set",
    "start": "1301080",
    "end": "1304279"
  },
  {
    "text": "members connecting through a load",
    "start": "1304279",
    "end": "1306600"
  },
  {
    "text": "balancers internally so like the node",
    "start": "1306600",
    "end": "1309960"
  },
  {
    "text": "replication primary to secondary so we",
    "start": "1309960",
    "end": "1314440"
  },
  {
    "text": "came up with an",
    "start": "1314440",
    "end": "1315880"
  },
  {
    "text": "optimization we patched the Q of DN s to",
    "start": "1315880",
    "end": "1320159"
  },
  {
    "text": "avoid the hair pinning that means so",
    "start": "1320159",
    "end": "1322679"
  },
  {
    "text": "that we tricked the DNS to return proper",
    "start": "1322679",
    "end": "1326559"
  },
  {
    "text": "addresses in the in the cube cluster it",
    "start": "1326559",
    "end": "1329440"
  },
  {
    "text": "is not it's definitely not a solution",
    "start": "1329440",
    "end": "1331880"
  },
  {
    "text": "that is production ready",
    "start": "1331880",
    "end": "1335080"
  },
  {
    "text": "um it probably satisfies only a few",
    "start": "1335080",
    "end": "1338120"
  },
  {
    "text": "customers um because of the complexity",
    "start": "1338120",
    "end": "1340720"
  },
  {
    "text": "of this whole setup um but again it it",
    "start": "1340720",
    "end": "1344400"
  },
  {
    "text": "depends whether we optimize for",
    "start": "1344400",
    "end": "1346159"
  },
  {
    "text": "Simplicity and then it's probably fine",
    "start": "1346159",
    "end": "1348600"
  },
  {
    "text": "fine or do we optimize for performance",
    "start": "1348600",
    "end": "1350600"
  },
  {
    "text": "and then we definitely need to do",
    "start": "1350600",
    "end": "1352039"
  },
  {
    "text": "something about this okay uh just",
    "start": "1352039",
    "end": "1355400"
  },
  {
    "text": "something to add to it uh since we",
    "start": "1355400",
    "end": "1357600"
  },
  {
    "text": "mentioned in the slide that we try to",
    "start": "1357600",
    "end": "1360080"
  },
  {
    "text": "keep our deployment like as agnostic of",
    "start": "1360080",
    "end": "1362640"
  },
  {
    "text": "the under infrastructure and since you",
    "start": "1362640",
    "end": "1364840"
  },
  {
    "text": "mentioned celium um we do have few of",
    "start": "1364840",
    "end": "1367799"
  },
  {
    "text": "our like users who have gotten both",
    "start": "1367799",
    "end": "1370559"
  },
  {
    "text": "single cluster and multi cluster running",
    "start": "1370559",
    "end": "1372760"
  },
  {
    "text": "with like using C celum as the cni and",
    "start": "1372760",
    "end": "1375279"
  },
  {
    "text": "also the service mesh so a lot of the",
    "start": "1375279",
    "end": "1377559"
  },
  {
    "text": "solutions like we might not be aware of",
    "start": "1377559",
    "end": "1379480"
  },
  {
    "text": "but our customers have also like have",
    "start": "1379480",
    "end": "1381440"
  },
  {
    "text": "already have it running in their",
    "start": "1381440",
    "end": "1382919"
  },
  {
    "text": "production",
    "start": "1382919",
    "end": "1384600"
  },
  {
    "text": "usage okay thank",
    "start": "1384600",
    "end": "1388080"
  },
  {
    "text": "you okay thank you",
    "start": "1397279",
    "end": "1400760"
  },
  {
    "text": "again oh one more all approach one more",
    "start": "1400760",
    "end": "1405480"
  },
  {
    "text": "I'm sorry yeah hello thank you um",
    "start": "1405480",
    "end": "1409559"
  },
  {
    "text": "when spreading the data plane across",
    "start": "1409559",
    "end": "1411320"
  },
  {
    "text": "multiple clusters in a cross region",
    "start": "1411320",
    "end": "1413480"
  },
  {
    "text": "replication model are there certain",
    "start": "1413480",
    "end": "1415520"
  },
  {
    "text": "latency thresholds after which you know",
    "start": "1415520",
    "end": "1418440"
  },
  {
    "text": "Things Fall",
    "start": "1418440",
    "end": "1420679"
  },
  {
    "text": "Apart or is that not known",
    "start": "1420679",
    "end": "1424039"
  },
  {
    "text": "definitively uh so if I get your",
    "start": "1424039",
    "end": "1426120"
  },
  {
    "text": "question correctly you're like uh have",
    "start": "1426120",
    "end": "1428760"
  },
  {
    "text": "we reached the limit where the cross",
    "start": "1428760",
    "end": "1431840"
  },
  {
    "text": "region replication for multicluster like",
    "start": "1431840",
    "end": "1434200"
  },
  {
    "text": "we have hit some botlink around that yes",
    "start": "1434200",
    "end": "1437159"
  },
  {
    "text": "yeah so that's a great question and uh",
    "start": "1437159",
    "end": "1440360"
  },
  {
    "text": "so far we haven't uh we have like",
    "start": "1440360",
    "end": "1443240"
  },
  {
    "text": "recently G this feature and like we have",
    "start": "1443240",
    "end": "1446000"
  },
  {
    "text": "some like uh Network latency",
    "start": "1446000",
    "end": "1448000"
  },
  {
    "text": "requirements from our customers which",
    "start": "1448000",
    "end": "1449760"
  },
  {
    "text": "basically they have to adhere to get",
    "start": "1449760",
    "end": "1451200"
  },
  {
    "text": "multicluster running uh but we are very",
    "start": "1451200",
    "end": "1453600"
  },
  {
    "text": "much aware that at some point uh the",
    "start": "1453600",
    "end": "1455640"
  },
  {
    "text": "network latency would probably impose a",
    "start": "1455640",
    "end": "1457919"
  },
  {
    "text": "limitation on the way the replication",
    "start": "1457919",
    "end": "1459320"
  },
  {
    "text": "works there could be some data drift uh",
    "start": "1459320",
    "end": "1461520"
  },
  {
    "text": "but we don't have a good answer for that",
    "start": "1461520",
    "end": "1463080"
  },
  {
    "text": "yet and we are still like investigating",
    "start": "1463080",
    "end": "1465880"
  },
  {
    "text": "how to like like either lower that",
    "start": "1465880",
    "end": "1467640"
  },
  {
    "text": "latency or basically hack on the",
    "start": "1467640",
    "end": "1469760"
  },
  {
    "text": "wire",
    "start": "1469760",
    "end": "1472000"
  },
  {
    "text": "protocol okay thank you again thank",
    "start": "1475919",
    "end": "1479080"
  },
  {
    "text": "you",
    "start": "1479080",
    "end": "1482080"
  }
]