[
  {
    "text": "so hi everyone so glad to see you all here especially on like the last day of cubec con um hope your conference went",
    "start": "40",
    "end": "7839"
  },
  {
    "text": "well and you were able to learn some cool stuff visit some cool boots maybe grab some stickers as well um so this",
    "start": "7839",
    "end": "15519"
  },
  {
    "text": "talk will be a little bit like a case study with some examples and these",
    "start": "15519",
    "end": "21800"
  },
  {
    "text": "examples will kind of give you an idea of certain unique things that you can do",
    "start": "21800",
    "end": "27119"
  },
  {
    "text": "with Thanos to derive more value from it so a quick show of hands um but who",
    "start": "27119",
    "end": "34480"
  },
  {
    "text": "knows what an infinity stone is okay so that's a good chunk of you",
    "start": "34480",
    "end": "41039"
  },
  {
    "text": "but for those who are uninitiated it's basically a stone that grants you power over some aspect of life and that is",
    "start": "41039",
    "end": "49280"
  },
  {
    "text": "what Thanos uses in like the Marvel movies to wipe off the world but we are",
    "start": "49280",
    "end": "54440"
  },
  {
    "text": "going to use the Infinity Stones a bit more productively uh here so um an",
    "start": "54440",
    "end": "59480"
  },
  {
    "text": "infinity Key Stone for the purposes of this talk is an Innovative way to use",
    "start": "59480",
    "end": "64559"
  },
  {
    "text": "Thanos or the data within Thanos uh that kind of enables you to do more with it",
    "start": "64559",
    "end": "70799"
  },
  {
    "text": "but before that if you're observant you might have noticed that there's only one speaker on the stage instead of two um",
    "start": "70799",
    "end": "77119"
  },
  {
    "text": "sadly my co-speaker Daniel Moore who is a manager for several observability teams at shat had to fly back since his",
    "start": "77119",
    "end": "84360"
  },
  {
    "text": "child fell ill but shout out to him for uh his help on the talk and in any case",
    "start": "84360",
    "end": "89520"
  },
  {
    "text": "you'll be hearing me yep for like half an hour um so uh time for a quick intro",
    "start": "89520",
    "end": "95960"
  },
  {
    "text": "my name is Shasha mukarji I'm a software engineer at Red Hat where I mostly work",
    "start": "95960",
    "end": "101119"
  },
  {
    "text": "on monitoring platforms largely based around Thanos I'm also maintainer of Thanos um and was previously a Google",
    "start": "101119",
    "end": "108439"
  },
  {
    "text": "summer of code Mente under the same project about 3 years ago and I helped",
    "start": "108439",
    "end": "113520"
  },
  {
    "text": "maintain certain other cncf adjacent gotools and libraries and you can find me as um atate s I'm good pretty much uh",
    "start": "113520",
    "end": "122439"
  },
  {
    "text": "anywhere so let's start from the basics of all this which at its score is",
    "start": "122439",
    "end": "127479"
  },
  {
    "text": "metrics and why we need them to monitor our applications and why do we even need to monitor our",
    "start": "127479",
    "end": "133920"
  },
  {
    "text": "applications so whether you fancy on Prem the cloud any hybrid in between you",
    "start": "133920",
    "end": "139680"
  },
  {
    "text": "want to make sure that whatever offering you have is actually working most of the time and if it isn't working you want it",
    "start": "139680",
    "end": "146800"
  },
  {
    "text": "to call you up at 3:00 a.m. so that you can fix it so you use tools like preus and alert",
    "start": "146800",
    "end": "153040"
  },
  {
    "text": "manager to check on your infrastructure maybe every 30 seconds or so um record",
    "start": "153040",
    "end": "158280"
  },
  {
    "text": "that data and alert you when things don't look too good the data model of",
    "start": "158280",
    "end": "163879"
  },
  {
    "text": "recording samples or flow values with time stamps and appending it to a Time",
    "start": "163879",
    "end": "169440"
  },
  {
    "text": "series is what we commonly call as metrics and simply put it is an aggregation of events happening over",
    "start": "169440",
    "end": "176159"
  },
  {
    "text": "time in your infrastructure and it is still the cheap signal to use and store",
    "start": "176159",
    "end": "181720"
  },
  {
    "text": "in 2024 with very mature storage systems qu models and providers that allow you",
    "start": "181720",
    "end": "187879"
  },
  {
    "text": "to gain insights from it and over the course of time users of tools like Prometheus would like to",
    "start": "187879",
    "end": "194640"
  },
  {
    "text": "scale their monitoring to suit the needs of ever expanding infrastructure of to",
    "start": "194640",
    "end": "200400"
  },
  {
    "text": "global scale and this is where Thanos kind of steps in so if you haven't",
    "start": "200400",
    "end": "205680"
  },
  {
    "text": "already heard of Thanos it is a distributed and scalable monitoring system system based on Prometheus with",
    "start": "205680",
    "end": "211760"
  },
  {
    "text": "highly available and scalable components that provide you with a global view of",
    "start": "211760",
    "end": "216920"
  },
  {
    "text": "all your metrics and long-term storage and querying with features like down sampling and even multi-tenancy it can",
    "start": "216920",
    "end": "223840"
  },
  {
    "text": "actually be termed as a sort of distributed Prometheus Plus+ as it distributes parts of Prometheus like the",
    "start": "223840",
    "end": "229920"
  },
  {
    "text": "rule engine query engine scrape engine and so on and makes it scalable whilst also enabling more functionality um out",
    "start": "229920",
    "end": "238159"
  },
  {
    "text": "in the wild it is often used in either of two architectures and I won't go too in depth into explaining what Thanos is",
    "start": "238159",
    "end": "245480"
  },
  {
    "text": "because the talk is about something else and we're just going to go over the couple of architectures so firstly is",
    "start": "245480",
    "end": "252720"
  },
  {
    "text": "the sidecar architecture so that this is the architecture that Thanos kind of started with initially and here as you",
    "start": "252720",
    "end": "259199"
  },
  {
    "text": "can see we have Thanos side car components attached to premes instances and it basically reads data from",
    "start": "259199",
    "end": "266280"
  },
  {
    "text": "Prometheus um and serves it to the querer whenever a qu is fired and it uses the remote read API to do so all",
    "start": "266280",
    "end": "273759"
  },
  {
    "text": "these side cars also make sure to ship time series database blocks um from the",
    "start": "273759",
    "end": "279240"
  },
  {
    "text": "promethee that they are attached to into an object storage of your choosing and you can then run your prometh with very",
    "start": "279240",
    "end": "286240"
  },
  {
    "text": "low retention and you can query data over a longer time with the help of store Gateway and compactor also you can",
    "start": "286240",
    "end": "293680"
  },
  {
    "text": "set rules to get Global alerting and recording rules and so on the second",
    "start": "293680",
    "end": "299039"
  },
  {
    "text": "architecture is the receive and this was introduced to make Thanos into a sort of",
    "start": "299039",
    "end": "304360"
  },
  {
    "text": "monitoring as a service offering so here different PRI can remote write their",
    "start": "304360",
    "end": "310000"
  },
  {
    "text": "metrics even across Network boundaries to Thanos receives which are kind of",
    "start": "310000",
    "end": "315800"
  },
  {
    "text": "horizontally scalable tsvs using hash rings and so on and so this these",
    "start": "315800",
    "end": "320960"
  },
  {
    "text": "receives either in justest or replicate or forward these remote tra requests",
    "start": "320960",
    "end": "326400"
  },
  {
    "text": "throughout the hashing to other receip nodes and they then store these metrics in their own local tsbs and expose them",
    "start": "326400",
    "end": "334160"
  },
  {
    "text": "for Thanos quer to query they onor ship blocks to um object storage which are",
    "start": "334160",
    "end": "340360"
  },
  {
    "text": "again queriable via the store Gateway and querer and so we now have some notion of",
    "start": "340360",
    "end": "347160"
  },
  {
    "text": "what a standard T setup kind of looks like and we can move on to refreshing um",
    "start": "347160",
    "end": "352600"
  },
  {
    "text": "our memories on what some of the traditional use cases for these metrics are starting with debugging and slos and",
    "start": "352600",
    "end": "360240"
  },
  {
    "text": "so most of you will probably already be aware of this but the single most common use case of metrics is to use it for",
    "start": "360240",
    "end": "366759"
  },
  {
    "text": "debugging um either your application running on PR or something else uh by collecting metrics from them and then",
    "start": "366759",
    "end": "373240"
  },
  {
    "text": "firing ad hoc queries once you notice an issue maybe via some firing alerts or so",
    "start": "373240",
    "end": "379599"
  },
  {
    "text": "it is also used to guarantee service level objectives as mentioned maybe in your organization service level",
    "start": "379599",
    "end": "385680"
  },
  {
    "text": "agreement such as a 99.9% up time over window of 30 days or so and there are",
    "start": "385680",
    "end": "392000"
  },
  {
    "text": "tools that people use for this such as the Thanos UI and alert manager or page of Duty to get notified uh when",
    "start": "392000",
    "end": "398160"
  },
  {
    "text": "something goes wrong or for ad hoc querying and for slos you can have either a combination of alerts and",
    "start": "398160",
    "end": "404479"
  },
  {
    "text": "dashboards or even sophisticated tools like P which uh can keep track of them",
    "start": "404479",
    "end": "409680"
  },
  {
    "text": "and visualize them next is what we like to call as dashboarding and you might argue that",
    "start": "409680",
    "end": "415639"
  },
  {
    "text": "technically it is still debugging and it feels like a part of debug in but there",
    "start": "415639",
    "end": "420720"
  },
  {
    "text": "are adjacent functionalities to it which is converting metrics to human friendly",
    "start": "420720",
    "end": "426039"
  },
  {
    "text": "visualizations that kind of allow you to communicate different information to different users and so an example of",
    "start": "426039",
    "end": "432479"
  },
  {
    "text": "this is maybe you have dashboards for your server Health which is quite useful to diagnose issues at a single glance",
    "start": "432479",
    "end": "438919"
  },
  {
    "text": "for SES or developer personas or maybe you have dashboards to represent the",
    "start": "438919",
    "end": "444360"
  },
  {
    "text": "success of your product like number of users in the last 30 days or so um or even SLO dashboards that that may be are",
    "start": "444360",
    "end": "450720"
  },
  {
    "text": "shared with people higher up on your chin and tunes like grafana are crucial for things like this and there are",
    "start": "450720",
    "end": "456759"
  },
  {
    "text": "certain Alternatives that are popping up like proccess um and so on and finally a",
    "start": "456759",
    "end": "462960"
  },
  {
    "text": "large part of why people use Thanos is that they want to store their metric data over longer periods of time and to",
    "start": "462960",
    "end": "469800"
  },
  {
    "text": "be able to measure different things uh over longer durations and this involves",
    "start": "469800",
    "end": "475360"
  },
  {
    "text": "a couple of things which are storage and querying and so the storage part is largely handled by shipping tsdb blocks",
    "start": "475360",
    "end": "481319"
  },
  {
    "text": "to um object storage which is virtually kind of unlimited and the quaring part",
    "start": "481319",
    "end": "487120"
  },
  {
    "text": "is slightly trickier which is why features like compaction and down sampling exist on Thanos so that you can",
    "start": "487120",
    "end": "493520"
  },
  {
    "text": "query for years of data without oming all your thos components so you might",
    "start": "493520",
    "end": "499280"
  },
  {
    "text": "want to keep track of slos over a year or see the number of sales over year and so on with features like",
    "start": "499280",
    "end": "505000"
  },
  {
    "text": "this but what else can you do with metrics stored in Thanos Beyond these",
    "start": "505000",
    "end": "510879"
  },
  {
    "text": "traditional use cases and I asked this question as you are already kind of",
    "start": "510879",
    "end": "516240"
  },
  {
    "text": "paying quite a lot for computing maybe not so much for storage but you're pay for uh hiring people with the knowledge",
    "start": "516240",
    "end": "523518"
  },
  {
    "text": "of keeping systems like Thanos up and healthy and while good global scale observability is enough of a motivated",
    "start": "523519",
    "end": "530720"
  },
  {
    "text": "to continue to do so there are things that can be done from aside from like",
    "start": "530720",
    "end": "536240"
  },
  {
    "text": "the operational and the SR um functions your your long-term terabytes of metrics",
    "start": "536240",
    "end": "541959"
  },
  {
    "text": "enable a lot of use cases but a lot of data just remains and sits there and sure you can delete it or dup it compact",
    "start": "541959",
    "end": "549600"
  },
  {
    "text": "it um but your return on investment would continue to Fed with time and",
    "start": "549600",
    "end": "554800"
  },
  {
    "text": "maybe there's um some ways you for you to like use or reuse some of the stuff",
    "start": "554800",
    "end": "559959"
  },
  {
    "text": "that you have stored or maybe to deploy it better with more optimize user experience for your SES or developer",
    "start": "559959",
    "end": "566279"
  },
  {
    "text": "personas um and so on or there is even like some room to maybe automate a bunch",
    "start": "566279",
    "end": "571440"
  },
  {
    "text": "of this and so we can optimize quite a bit here hence I'll actually be sharing",
    "start": "571440",
    "end": "577120"
  },
  {
    "text": "some Infinity Stones to add to your Gauntlet with Thanos many of which may",
    "start": "577120",
    "end": "582200"
  },
  {
    "text": "tie in with your traditional use cases and try to enhance your monitoring setup",
    "start": "582200",
    "end": "587440"
  },
  {
    "text": "so starting with the first infinity stone which is telemetry so the term",
    "start": "587440",
    "end": "593040"
  },
  {
    "text": "Telemetry might sound uh familiar and is often used interchangeably with monitoring but Telemetry means something",
    "start": "593040",
    "end": "600959"
  },
  {
    "text": "slightly different and it refers to the collection of data from remote sources now when I mention Telemetry as an",
    "start": "600959",
    "end": "607839"
  },
  {
    "text": "infinity stone it might occur to you that wait I already scrip my applications and stored them in tunnel",
    "start": "607839",
    "end": "614440"
  },
  {
    "text": "so what more can I do about that but the important aspect of telemetry is where",
    "start": "614440",
    "end": "620600"
  },
  {
    "text": "you get your data from yes you can collect it from your own infrastructure which is what everyone is already kind",
    "start": "620600",
    "end": "626839"
  },
  {
    "text": "of doing but you can also collect it from your users I people who might be",
    "start": "626839",
    "end": "632399"
  },
  {
    "text": "running the workloads that you are offering them uh or even the hardware that you built for them and this is",
    "start": "632399",
    "end": "639320"
  },
  {
    "text": "something that we've been seeing a lot of in the Tas Community where people have created Hardware or software",
    "start": "639320",
    "end": "645720"
  },
  {
    "text": "products with inbuilt agents that can remote right metrics back to their tanos setups that they can then store and",
    "start": "645720",
    "end": "652720"
  },
  {
    "text": "query and an important thing to note here is that a user should be aware of what data you are scraping from them and",
    "start": "652720",
    "end": "659360"
  },
  {
    "text": "and that you're doing so with their consent um don't use Thanos creepily but",
    "start": "659360",
    "end": "664839"
  },
  {
    "text": "um so at Red Hat we've been doing this for a while now actually even before preus remote right uh was a thing um and",
    "start": "664839",
    "end": "672880"
  },
  {
    "text": "so we actually have agents running on all open shift clusters out in the wild and they report back metrics that we",
    "start": "672880",
    "end": "680079"
  },
  {
    "text": "first authenticate using a lightweight proxy called telemeter and then Teter validates the request and we ingest it",
    "start": "680079",
    "end": "686880"
  },
  {
    "text": "into our Thanos receive hashing that that we run internally we then stored this data for up to a year and then",
    "start": "686880",
    "end": "693320"
  },
  {
    "text": "replicated elsewhere too which I'll discuss in a bit but red Hatters can actually use all of this data across",
    "start": "693320",
    "end": "699760"
  },
  {
    "text": "different business units over long ranges of time and gain insights of that",
    "start": "699760",
    "end": "704800"
  },
  {
    "text": "go beyond just simple debugging and as for how this unique",
    "start": "704800",
    "end": "710399"
  },
  {
    "text": "data is used you could use it for a variety of things such as making actual",
    "start": "710399",
    "end": "715440"
  },
  {
    "text": "customer data backed decisions across your port folio of products you could",
    "start": "715440",
    "end": "721279"
  },
  {
    "text": "conduct user experience research and improve on that maybe even build your customers you can also do a bunch of",
    "start": "721279",
    "end": "728079"
  },
  {
    "text": "analytics on this data especially if you have quite a long time ranges for like multiple years of data or so um but what",
    "start": "728079",
    "end": "735040"
  },
  {
    "text": "sort of analytics could you do with them and that brings me to the next infinity",
    "start": "735040",
    "end": "740160"
  },
  {
    "text": "stone which is analytics and so Prometheus metric are time series data with each series being",
    "start": "740160",
    "end": "747000"
  },
  {
    "text": "labeled and containing samples where a sample is basically a combination of a float value and a Tim stamp so this high",
    "start": "747000",
    "end": "755440"
  },
  {
    "text": "quality structured numerical data um becomes ideal for things like",
    "start": "755440",
    "end": "760680"
  },
  {
    "text": "analytics but what sort of analytics could you do well like most stuff in software engineering it depends um",
    "start": "760680",
    "end": "768320"
  },
  {
    "text": "largely on your business context and on the Telemetry that you gather so far so",
    "start": "768320",
    "end": "773560"
  },
  {
    "text": "analytics can be hugely powerful and value adding to your teams with long-term metrics if you know what you",
    "start": "773560",
    "end": "779240"
  },
  {
    "text": "want or you know what your customers want at red hat we had close collaborations with certain analytics",
    "start": "779240",
    "end": "785320"
  },
  {
    "text": "teams to share some of this customer data to data scientists who can actually figure out how that data might be",
    "start": "785320",
    "end": "791880"
  },
  {
    "text": "valuable to us and what we can do with it and so the replication job I",
    "start": "791880",
    "end": "797120"
  },
  {
    "text": "mentioned in earlier slides was exactly for this where they replicate data over a much longer time range um into a read",
    "start": "797120",
    "end": "804320"
  },
  {
    "text": "only thos setup and then they prepare that data from for experiments using using tools such as open data Hub with",
    "start": "804320",
    "end": "811839"
  },
  {
    "text": "quite a complex architecture to prepare for experiments and that they plan to run and models that they plan to train",
    "start": "811839",
    "end": "820000"
  },
  {
    "text": "and many of these experiments actually are very unique and impressive um now I",
    "start": "820000",
    "end": "825199"
  },
  {
    "text": "will mention some machine learning and AI but uh which I'm sure a lot of you are tired of hearing by now but",
    "start": "825199",
    "end": "831240"
  },
  {
    "text": "internally at redart we actually used Telemetry data from our customers in",
    "start": "831240",
    "end": "836560"
  },
  {
    "text": "particular their cluster Health Data and train models on them and they can now predict how risky it might be to upgrade",
    "start": "836560",
    "end": "844040"
  },
  {
    "text": "a particular open shift cluster and what those risk factors actually are and so in a very real way we've given customers",
    "start": "844040",
    "end": "851880"
  },
  {
    "text": "back some new feature that they can use to get more reliability just from collecting Telemetry into Thanos and",
    "start": "851880",
    "end": "858720"
  },
  {
    "text": "this is a tool customers can now use with inferences made from the latest Telemetry data from their clusters and",
    "start": "858720",
    "end": "864480"
  },
  {
    "text": "they can view what their upgrade risks are and have a safer upgrade experience",
    "start": "864480",
    "end": "869920"
  },
  {
    "text": "um and there are other unique examples and experiments that we've done like correlation of uh alerts that fire at",
    "start": "869920",
    "end": "876519"
  },
  {
    "text": "roughly that same time and how they share context to make sense of alerts firing during an incident and what users",
    "start": "876519",
    "end": "884519"
  },
  {
    "text": "can do to fix them basically going with the assumption that they are not a coincidence now looking at things like",
    "start": "884519",
    "end": "891160"
  },
  {
    "text": "this you might ask okay how are we actually collecting this data on open shift clusters to enable things like",
    "start": "891160",
    "end": "897399"
  },
  {
    "text": "this and how are we doing things like that and that brings me to my third infinity stone which is single cluster",
    "start": "897399",
    "end": "903839"
  },
  {
    "text": "monitoring so this is a bit of a tricky one as you think Thanos probably doesn't",
    "start": "903839",
    "end": "909360"
  },
  {
    "text": "have much to do on just a single cluster right so I'll first explain what I think",
    "start": "909360",
    "end": "914480"
  },
  {
    "text": "might be a standard scenario and then what we do for red heart open shift so",
    "start": "914480",
    "end": "919560"
  },
  {
    "text": "let's say you have or you are some platform engineering team that is in charge of a few singular clusters and",
    "start": "919560",
    "end": "926839"
  },
  {
    "text": "you have Prem operator installed on them and these clusters uh May then be used by certain other teams to deploy the",
    "start": "926839",
    "end": "933399"
  },
  {
    "text": "workloads now you realize that your team might care about the cluster health and",
    "start": "933399",
    "end": "938440"
  },
  {
    "text": "more of the platform side of things while teams using your clusters only care about their workloads and so",
    "start": "938440",
    "end": "944839"
  },
  {
    "text": "quaring the same Prometheus for metrics and firing the same alerts tends to be",
    "start": "944839",
    "end": "950519"
  },
  {
    "text": "confusing and while you do want to correlate certain platform metrics and certain user workload metrics for some",
    "start": "950519",
    "end": "956880"
  },
  {
    "text": "specialized applications it is not the standard use case so with Prometheus",
    "start": "956880",
    "end": "962160"
  },
  {
    "text": "operator what you can do is just declare a second Prometheus um object and now",
    "start": "962160",
    "end": "967440"
  },
  {
    "text": "you have one Prometheus have data for only the platform and uh another",
    "start": "967440",
    "end": "972800"
  },
  {
    "text": "Prometheus to be shared by your user workloads and this is the sort of logical split that makes sense but then",
    "start": "972800",
    "end": "979480"
  },
  {
    "text": "you have a missing piece of puzzle which is now some of your specialized applications don't work as they need",
    "start": "979480",
    "end": "985040"
  },
  {
    "text": "data from both platform metrics and user workload metrics so how do we leverage the powers of Thanos to solve this well",
    "start": "985040",
    "end": "992920"
  },
  {
    "text": "it's actually kind of easy you just need to deploy a side car for each of your PRI and then hook them up to a Thanos",
    "start": "992920",
    "end": "999040"
  },
  {
    "text": "quer and instantaneously you now have a way to support all your use cases while still maintaining clear views for you",
    "start": "999040",
    "end": "1006360"
  },
  {
    "text": "and your customer teams and you can also set um alerts on maybe a Thanos ruler if",
    "start": "1006360",
    "end": "1012319"
  },
  {
    "text": "you need to do Global alerting on certain things and this is actually what",
    "start": "1012319",
    "end": "1017639"
  },
  {
    "text": "we ship uh with open shift in Red Hat as part of the monitoring stack with a spit",
    "start": "1017639",
    "end": "1022839"
  },
  {
    "text": "between platform and user workload tied in nicely with the th sareer and this logical splint also allows us to ship",
    "start": "1022839",
    "end": "1029520"
  },
  {
    "text": "relevant things we need from this clusters to our own Telemetry pipeline without ever having touched the user",
    "start": "1029520",
    "end": "1035918"
  },
  {
    "text": "workload metrics now what do you do if you have more than one cluster that you need to monitor um and this is the point",
    "start": "1035919",
    "end": "1043520"
  },
  {
    "text": "to introduce the fourth infinity stone which is multicluster use cases when I",
    "start": "1043520",
    "end": "1049039"
  },
  {
    "text": "share here is mostly how we do it at Red Heart and how you can replicate a setup like ours as nearly all of it is open",
    "start": "1049039",
    "end": "1055480"
  },
  {
    "text": "source and permissively licensed so this is actually one of the most common use",
    "start": "1055480",
    "end": "1060679"
  },
  {
    "text": "cases of Thanos that we've seen But essentially um these days people seem to love following a clusters as cattle",
    "start": "1060679",
    "end": "1067840"
  },
  {
    "text": "Paradigm where where tearing down and bringing up clusters quickly and enabling to link to manage all of these",
    "start": "1067840",
    "end": "1074600"
  },
  {
    "text": "is in Trend and monitoring part of this is where I think Thanos fits super well",
    "start": "1074600",
    "end": "1080520"
  },
  {
    "text": "and shines and so you can run Thanos easily here to support Dynamic clusters like",
    "start": "1080520",
    "end": "1086159"
  },
  {
    "text": "this but our internal monting service at Red Hat actually looks something like",
    "start": "1086159",
    "end": "1091600"
  },
  {
    "text": "this um so as you can see we run a received based setup and we have some",
    "start": "1091600",
    "end": "1096799"
  },
  {
    "text": "custom open source components called observatorium uh combine and these are",
    "start": "1096799",
    "end": "1102400"
  },
  {
    "text": "lightweight components that uh we actually use to ensure tency on Thanos",
    "start": "1102400",
    "end": "1107679"
  },
  {
    "text": "and easy Authentication and authorizations for tenant teams that want to use us and so our tenant teams",
    "start": "1107679",
    "end": "1113480"
  },
  {
    "text": "can choose to remote right metrics from any Prometheus they want across all of their multiple clusters and",
    "start": "1113480",
    "end": "1119600"
  },
  {
    "text": "infrastructures and we just injest it into receive and they can then get a global view of all the infrastructure",
    "start": "1119600",
    "end": "1126480"
  },
  {
    "text": "and query metrics from us and they only get to see their own metrics and not metrics from other teams so they can",
    "start": "1126480",
    "end": "1133159"
  },
  {
    "text": "also set their recording and alerting rules with us which we then sync um to the th ruler",
    "start": "1133159",
    "end": "1139320"
  },
  {
    "text": "and Fire and Fire alerts to an alert manager of their choice and all of this",
    "start": "1139320",
    "end": "1144640"
  },
  {
    "text": "is actually open sourced under the gith observatorium or with permissively licensed um projects so you can",
    "start": "1144640",
    "end": "1151280"
  },
  {
    "text": "replicate a setup like this for yourself um by using this across all of your clusters and we actually try to ship",
    "start": "1151280",
    "end": "1158520"
  },
  {
    "text": "this on Prem with red hat as well with something that we like to call as advanced cluster management um so this",
    "start": "1158520",
    "end": "1165000"
  },
  {
    "text": "is something you use when you want to manage multiple open shift clusters in a high kill way and it is largely based on",
    "start": "1165000",
    "end": "1172280"
  },
  {
    "text": "the open source open cluster management project that we have um so we ship the",
    "start": "1172280",
    "end": "1177360"
  },
  {
    "text": "observability part of it as a sort of similar tack to the ones we run internally um so customers can achieve",
    "start": "1177360",
    "end": "1184159"
  },
  {
    "text": "the same winds with observability that we do so it is kind of based on like a",
    "start": "1184159",
    "end": "1189280"
  },
  {
    "text": "hub and spoke architecture where the Hub cluster has Thanos components running receive querer store Gateway and other",
    "start": "1189280",
    "end": "1196240"
  },
  {
    "text": "crucial parts and the spokes have a collector um remote writing metrics to",
    "start": "1196240",
    "end": "1201720"
  },
  {
    "text": "the Thanos receive hash RG um present on the Hub by default we only send the",
    "start": "1201720",
    "end": "1207480"
  },
  {
    "text": "platform Prometheus metric but since all of this is on the customers cloud or on the customers on Prem they can choose to",
    "start": "1207480",
    "end": "1214840"
  },
  {
    "text": "actually send their own user workloads to the hub cluster and get a global view of the entire fleet of clusters and",
    "start": "1214840",
    "end": "1222080"
  },
  {
    "text": "these clusters are Dynamic by the way they can be detached attached reattached whatever um and now you might actually",
    "start": "1222080",
    "end": "1228080"
  },
  {
    "text": "be wondering okay wait how do you ship this to customers because the all of this is manual right is there an",
    "start": "1228080",
    "end": "1234360"
  },
  {
    "text": "operator that sets this up for you and you'd be right um and that brings me to",
    "start": "1234360",
    "end": "1240520"
  },
  {
    "text": "my fifth infinity stone which is an operator and so there are a lot of operations with Thanos that are still",
    "start": "1240520",
    "end": "1247400"
  },
  {
    "text": "quite manual and require lots of time and expertise to get right especially when you have large scale environments",
    "start": "1247400",
    "end": "1254520"
  },
  {
    "text": "so it makes sense to automate at least some of these operations as most most of these things uh are run in kubernetes",
    "start": "1254520",
    "end": "1261919"
  },
  {
    "text": "and so why not Leverage The extensibility there so to preface this I will say that at this point in time",
    "start": "1261919",
    "end": "1268240"
  },
  {
    "text": "there is no single perfect Thanos operator that will give you everything that you need and works in the way that",
    "start": "1268240",
    "end": "1273679"
  },
  {
    "text": "you expected to so to start with some context you can use the Prometheus",
    "start": "1273679",
    "end": "1278799"
  },
  {
    "text": "operator to manage side cars and rulers but you would still need to set up your own querier compactors and store",
    "start": "1278799",
    "end": "1285400"
  },
  {
    "text": "gateways EV receives if you choose to use that so this leaves quite a lot of things to",
    "start": "1285400",
    "end": "1291360"
  },
  {
    "text": "automate so for red Hut's ACM project internally we use something called the",
    "start": "1291360",
    "end": "1296840"
  },
  {
    "text": "observatorium operator and this is quite a unique project to be honest um but it",
    "start": "1296840",
    "end": "1302799"
  },
  {
    "text": "helps you set up Thanos in a receiver architecture with some observatorium add-ons to maintain tency in a very",
    "start": "1302799",
    "end": "1309960"
  },
  {
    "text": "self-contained way and it is actually based on this locutus project which is a",
    "start": "1309960",
    "end": "1315279"
  },
  {
    "text": "paradigm to be able to render jset templates with options to override those",
    "start": "1315279",
    "end": "1320880"
  },
  {
    "text": "templates with crd configs um and it rolls it out and it does so on a trigger",
    "start": "1320880",
    "end": "1326240"
  },
  {
    "text": "like watching changes um in a particular crd that we configured to do so or even time based interval ones um and Locus",
    "start": "1326240",
    "end": "1334120"
  },
  {
    "text": "itself is a great concept and experiment that challenges a lot of um The",
    "start": "1334120",
    "end": "1339720"
  },
  {
    "text": "Operators out there that could actually just be something gener it could just be a cube apply command and it works well",
    "start": "1339720",
    "end": "1345720"
  },
  {
    "text": "from projects where you don't need to control the entire life cycle of all of your workloads um but at Red Heart we've",
    "start": "1345720",
    "end": "1353600"
  },
  {
    "text": "realized that this becomes tricky to use with things like Thanos or things with a similar complexity level as you have a",
    "start": "1353600",
    "end": "1360520"
  },
  {
    "text": "variety of options across components that various environments might need and often these options can influence your",
    "start": "1360520",
    "end": "1367600"
  },
  {
    "text": "life cycle um and representing this in static jonet templates uh not to mention",
    "start": "1367600",
    "end": "1373760"
  },
  {
    "text": "not having control of the life cycle and without delving into extending lyest with custom go code is quite hard to do",
    "start": "1373760",
    "end": "1381480"
  },
  {
    "text": "and this Paradigm is not something most people within the community might be familiar with as most people who have",
    "start": "1381480",
    "end": "1387720"
  },
  {
    "text": "built operators or who've interacted with operators are mostly using things like CU Builder and operator SDK instead",
    "start": "1387720",
    "end": "1395120"
  },
  {
    "text": "of Json net as a medium for the rollouts and loc at this while a very stable and",
    "start": "1395120",
    "end": "1400440"
  },
  {
    "text": "a very Innovative project is still new is still a new project and it can break in very unexpected",
    "start": "1400440",
    "end": "1406760"
  },
  {
    "text": "ways so those vorum operator is functional and we do use a fork of it uh",
    "start": "1406760",
    "end": "1412600"
  },
  {
    "text": "for some stuff at red hat but it leaves a lot to be desired and it can be better",
    "start": "1412600",
    "end": "1418000"
  },
  {
    "text": "and thus we felt the need to start a new Initiative for uh Thanos operator with a",
    "start": "1418000",
    "end": "1423840"
  },
  {
    "text": "special focus on receive mode where we can Define um special controller reconciliation Loops for specific modes",
    "start": "1423840",
    "end": "1431279"
  },
  {
    "text": "of operation across various T components and it should play well with the existing beloved preus operator and",
    "start": "1431279",
    "end": "1438480"
  },
  {
    "text": "extend functionality on top of that and so we've started taking some some steps",
    "start": "1438480",
    "end": "1443600"
  },
  {
    "text": "towards AOS operative project whose repo literally created yesterday which is a",
    "start": "1443600",
    "end": "1448919"
  },
  {
    "text": "cube Builder based um operator and the road map for that looks something like",
    "start": "1448919",
    "end": "1454240"
  },
  {
    "text": "this um again all of this is dbd but still th components are installed with",
    "start": "1454240",
    "end": "1460039"
  },
  {
    "text": "some easy mechanisms for setting up receive hash rings and this would be the first step as well as reusing things",
    "start": "1460039",
    "end": "1466559"
  },
  {
    "text": "such as Prometheus rule crds um that can sync with components like trans ruler and then as part of some",
    "start": "1466559",
    "end": "1474039"
  },
  {
    "text": "future work maybe at some point we have something like t-shirt sizing where you can pick a size in some crd based on how",
    "start": "1474039",
    "end": "1481200"
  },
  {
    "text": "much metrics you think you'll be ingesting and wearing uh which would then size your Thanos accordingly for",
    "start": "1481200",
    "end": "1487559"
  },
  {
    "text": "you without you having to do much work um and it'll have overridable options in case you need something custom or with",
    "start": "1487559",
    "end": "1494720"
  },
  {
    "text": "some Auto scale and maybe even a par component pause switch so that uh you can stop the operator to debug certain",
    "start": "1494720",
    "end": "1502000"
  },
  {
    "text": "Thanos components if you need to we also aim to be pragmatic about this and to only put things that make actual sense",
    "start": "1502000",
    "end": "1508799"
  },
  {
    "text": "within the operator um so things that must be external to Thanos or cubees",
    "start": "1508799",
    "end": "1513960"
  },
  {
    "text": "specific should be what goes into this particular operator and to create all this we plan to leverage the thas",
    "start": "1513960",
    "end": "1521080"
  },
  {
    "text": "community um especially those who feel the need for a similar operator like this to automate uh some of these manual",
    "start": "1521080",
    "end": "1527720"
  },
  {
    "text": "operations and to make managing tanos easy and those who would love to work with us and that brings me to my final",
    "start": "1527720",
    "end": "1535240"
  },
  {
    "text": "infinity stone which is uh community so it's no secret that your project will be",
    "start": "1535240",
    "end": "1541120"
  },
  {
    "text": "as great as the community behind it people and their intentions um to build or use something great matter a lot and",
    "start": "1541120",
    "end": "1548679"
  },
  {
    "text": "to this end one of the super Ms that I think tanos gives you is the presents of a great Community um it is one of the",
    "start": "1548679",
    "end": "1554799"
  },
  {
    "text": "greatest ones you'll find people are ready to help each other people are kind and people are ready to share their",
    "start": "1554799",
    "end": "1560000"
  },
  {
    "text": "experiences with you and these people include the team members mentees active",
    "start": "1560000",
    "end": "1565480"
  },
  {
    "text": "contributors our users or just anyone who is looking to learn and get",
    "start": "1565480",
    "end": "1571080"
  },
  {
    "text": "involved and uh the way you get involved is to just join the communication happening on our slack channels either",
    "start": "1571080",
    "end": "1577480"
  },
  {
    "text": "on Thanos or Thanos Dev on our GitHub issues and PRS where all the major work happens or or even like decide what the",
    "start": "1577480",
    "end": "1584240"
  },
  {
    "text": "future of Tas should be like by commenting on these issues and for meeting with people in the",
    "start": "1584240",
    "end": "1590520"
  },
  {
    "text": "Thanos Community we try to have bi-weekly office hours although that is hard to organize at times and we meet",
    "start": "1590520",
    "end": "1596360"
  },
  {
    "text": "you in person at cupon um and this time we actually had our first ever tanos con",
    "start": "1596360",
    "end": "1602000"
  },
  {
    "text": "which was amazing um you got to see a room chalk full of people who use Thanos and just want to learn more and work",
    "start": "1602000",
    "end": "1608919"
  },
  {
    "text": "with us and we had some excellent talks from people across various different large",
    "start": "1608919",
    "end": "1614640"
  },
  {
    "text": "companies and we have our mentorship programs as well which which are one of the best ways to on board with an OSS",
    "start": "1614640",
    "end": "1621120"
  },
  {
    "text": "project in my opinion and you pair with two of us either from the tnos maintenant teams or um from some of our",
    "start": "1621120",
    "end": "1627679"
  },
  {
    "text": "co-workers who are actually using tanos in their day job and just learn a lot whilst working on a very cool project uh",
    "start": "1627679",
    "end": "1634760"
  },
  {
    "text": "which benefits tanos which benefits you as well and we have regular retrospectives during these mentorships",
    "start": "1634760",
    "end": "1640679"
  },
  {
    "text": "to ensure you get enough actionable feedback so that you would grow not only",
    "start": "1640679",
    "end": "1645720"
  },
  {
    "text": "technically but actually as an engineer and this is literally how I got hired to dead as well and so definitely leverage",
    "start": "1645720",
    "end": "1652880"
  },
  {
    "text": "the community and feel free to reach out to us and work with us so as a summary",
    "start": "1652880",
    "end": "1657960"
  },
  {
    "text": "we've learned a few things so starting with using Thanos to get Telemetry from",
    "start": "1657960",
    "end": "1663000"
  },
  {
    "text": "customers or other sources that makes more sense in your context running analytics on the long range data that",
    "start": "1663000",
    "end": "1669159"
  },
  {
    "text": "you have stored in Thanos um how Thanos can be useful in single cluster setups",
    "start": "1669159",
    "end": "1674720"
  },
  {
    "text": "how it can be useful in multicluster setups and how you can get that easy with open source um components that you",
    "start": "1674720",
    "end": "1680960"
  },
  {
    "text": "can contribute to the operator initiative and why automating this would make sense and how to leverage and get",
    "start": "1680960",
    "end": "1687320"
  },
  {
    "text": "involved with the THS community so any",
    "start": "1687320",
    "end": "1693000"
  },
  {
    "text": "[Applause]",
    "start": "1693910",
    "end": "1697679"
  },
  {
    "text": "[Applause] questions um you might need to come up",
    "start": "1700690",
    "end": "1706039"
  },
  {
    "text": "to that mic I'm not sure yeah so thank you for your presentation",
    "start": "1706039",
    "end": "1712120"
  },
  {
    "text": "and um we have seen that there are two main methods to aggregate promeo sing uh",
    "start": "1712120",
    "end": "1719159"
  },
  {
    "text": "the first one is with side card and the second one is with receive remote ride",
    "start": "1719159",
    "end": "1725399"
  },
  {
    "text": "and which are the uh use cases when to use one me or another me um so receive",
    "start": "1725399",
    "end": "1732960"
  },
  {
    "text": "can be something for like environments where you have egress only environments or just environment where you don't",
    "start": "1732960",
    "end": "1739320"
  },
  {
    "text": "really control the source of the metrics so maybe you have you are maybe like a platform engineering team and you have",
    "start": "1739320",
    "end": "1746080"
  },
  {
    "text": "separate teams who are dealing with a bunch of other things but they want to use you as a metrics provider and so you",
    "start": "1746080",
    "end": "1752679"
  },
  {
    "text": "let them control their own Prometheus and just set a remote right Target and you just ingest the metrics and act as a",
    "start": "1752679",
    "end": "1758080"
  },
  {
    "text": "sort of database that they can send metrics through and query so that is um what I would say rece us for sidecar on",
    "start": "1758080",
    "end": "1765640"
  },
  {
    "text": "the other hand is something where um you would use if you have both egress and Ingress only as well as more control",
    "start": "1765640",
    "end": "1773399"
  },
  {
    "text": "over the actual Prometheus that's running on any infrastructure of your CH but yeah that would be my",
    "start": "1773399",
    "end": "1781640"
  },
  {
    "text": "suggestion anyone else",
    "start": "1782760",
    "end": "1790120"
  },
  {
    "text": "good thanks for your presentation um in the in the hypothesis",
    "start": "1791159",
    "end": "1796399"
  },
  {
    "text": "that we have lots of clusters lot of clusters and all",
    "start": "1796399",
    "end": "1801720"
  },
  {
    "text": "of them require a robust monitoring so we are not deploying only prus in each",
    "start": "1801720",
    "end": "1807679"
  },
  {
    "text": "cluster but we are deploying EOS installation for each cluster how can we then monitor them together also from",
    "start": "1807679",
    "end": "1816120"
  },
  {
    "text": "using some Legacy tool that only reads some pruse interface because we did in",
    "start": "1816120",
    "end": "1824000"
  },
  {
    "text": "production but we had to add another custom piece of code that introduced the Federation feature pres",
    "start": "1824000",
    "end": "1832120"
  },
  {
    "text": "init but is currently not present in tanos mhm um so if I understand your",
    "start": "1832120",
    "end": "1838039"
  },
  {
    "text": "question correctly you are running a Thanos installation on every cluster and this Thanos installation is what",
    "start": "1838039",
    "end": "1844640"
  },
  {
    "text": "components like cier and side car or more yes it's a full a full stos",
    "start": "1844640",
    "end": "1850039"
  },
  {
    "text": "installation okay so my question would be why are you doing that but um in any",
    "start": "1850039",
    "end": "1855840"
  },
  {
    "text": "case I think like uh what would be IDE for you is to centralize this in some way um so you just maybe have side cars",
    "start": "1855840",
    "end": "1863039"
  },
  {
    "text": "on these clusters and then you start a global querier which federates",
    "start": "1863039",
    "end": "1869159"
  },
  {
    "text": "information from all of these uh side cars so that would be my recommendation as step one as for your legacy toing I'm",
    "start": "1869159",
    "end": "1876600"
  },
  {
    "text": "not really sure how you would like to Meer that I'm not familiar but yeah okay",
    "start": "1876600",
    "end": "1882080"
  },
  {
    "text": "thanks for lot anyone else",
    "start": "1882080",
    "end": "1889919"
  },
  {
    "text": "going once going twice okay thanks a lot for [Applause]",
    "start": "1890240",
    "end": "1896600"
  },
  {
    "text": "listening",
    "start": "1896600",
    "end": "1899600"
  }
]