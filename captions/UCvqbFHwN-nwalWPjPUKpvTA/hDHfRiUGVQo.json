[
  {
    "text": "hi everyone thanks for coming to our",
    "start": "0",
    "end": "2730"
  },
  {
    "text": "talk I'm David and I'm here with Alex we",
    "start": "2730",
    "end": "7230"
  },
  {
    "text": "both from the Cuban esteem at lassen",
    "start": "7230",
    "end": "10110"
  },
  {
    "text": "here in Sydney and today we're here to",
    "start": "10110",
    "end": "13410"
  },
  {
    "text": "talk about securing untrusted were close",
    "start": "13410",
    "end": "16198"
  },
  {
    "text": "we've cut our containers so just",
    "start": "16199",
    "end": "19350"
  },
  {
    "text": "get a quick hands up",
    "start": "19350",
    "end": "22320"
  },
  {
    "text": "so who heard of Kara containers in the",
    "start": "22320",
    "end": "25439"
  },
  {
    "text": "room oh cool okay that's good",
    "start": "25439",
    "end": "29630"
  },
  {
    "text": "so I'll just give a little brief",
    "start": "29630",
    "end": "32578"
  },
  {
    "text": "overview of kubernetes Atlassian's",
    "start": "32579",
    "end": "34770"
  },
  {
    "text": "so we've been running in Prague for",
    "start": "34770",
    "end": "36780"
  },
  {
    "text": "three years now",
    "start": "36780",
    "end": "38309"
  },
  {
    "text": "and we didn't have many tools at the",
    "start": "38309",
    "end": "40680"
  },
  {
    "text": "time to deploy accumulates clusters we",
    "start": "40680",
    "end": "43350"
  },
  {
    "text": "really talk we will say we've done it",
    "start": "43350",
    "end": "45750"
  },
  {
    "text": "the hard way there's a tutorial",
    "start": "45750",
    "end": "47969"
  },
  {
    "text": "communities the hard way well we've",
    "start": "47969",
    "end": "49500"
  },
  {
    "text": "pretty much done that we have a",
    "start": "49500",
    "end": "52020"
  },
  {
    "text": "dedicated team to run those clusters so",
    "start": "52020",
    "end": "54510"
  },
  {
    "text": "we take responsibility for running the",
    "start": "54510",
    "end": "58230"
  },
  {
    "text": "clusters and the work nodes the worker",
    "start": "58230",
    "end": "60660"
  },
  {
    "text": "nodes um so the the good emergent one",
    "start": "60660",
    "end": "62879"
  },
  {
    "text": "would be the API server where we",
    "start": "62879",
    "end": "65189"
  },
  {
    "text": "provided a server for internal teams to",
    "start": "65189",
    "end": "67530"
  },
  {
    "text": "consume and deploy their workload on on",
    "start": "67530",
    "end": "70110"
  },
  {
    "text": "top of the clusters 50 clusters on",
    "start": "70110",
    "end": "73890"
  },
  {
    "text": "growing was that correct that was yeah",
    "start": "73890",
    "end": "77840"
  },
  {
    "text": "well which one she multi-tenant our",
    "start": "77840",
    "end": "80670"
  },
  {
    "text": "clusters as much as possible",
    "start": "80670",
    "end": "82049"
  },
  {
    "text": "but sometimes it's not always possible",
    "start": "82049",
    "end": "83549"
  },
  {
    "text": "or different reasons security networking",
    "start": "83549",
    "end": "86640"
  },
  {
    "text": "or things like that but most of the time",
    "start": "86640",
    "end": "90030"
  },
  {
    "text": "we remove to tenant our cluster zhim and",
    "start": "90030",
    "end": "93540"
  },
  {
    "text": "then which once you separate concerns",
    "start": "93540",
    "end": "95369"
  },
  {
    "text": "like for instance we run cumulus",
    "start": "95369",
    "end": "97229"
  },
  {
    "text": "clusters for job based workload and in",
    "start": "97229",
    "end": "100200"
  },
  {
    "text": "some cases for stay lists one of the the",
    "start": "100200",
    "end": "106229"
  },
  {
    "text": "tools that Alison offering that runs on",
    "start": "106229",
    "end": "108869"
  },
  {
    "text": "top of I cubanelles clusters is",
    "start": "108869",
    "end": "110610"
  },
  {
    "text": "bitbucket pipeline so if you don't know",
    "start": "110610",
    "end": "113520"
  },
  {
    "text": "bitbucket pipeline it allows you to",
    "start": "113520",
    "end": "115710"
  },
  {
    "text": "deploy and build your code directly from",
    "start": "115710",
    "end": "120780"
  },
  {
    "text": "where it is hosting on bitbucket so",
    "start": "120780",
    "end": "122430"
  },
  {
    "text": "within a few clicks you can actually",
    "start": "122430",
    "end": "124350"
  },
  {
    "text": "start building your code and and deploy",
    "start": "124350",
    "end": "127560"
  },
  {
    "text": "as well so that runs on top of",
    "start": "127560",
    "end": "131970"
  },
  {
    "text": "kubernetes",
    "start": "131970",
    "end": "133380"
  },
  {
    "text": "and each whenever you do a did push for",
    "start": "133380",
    "end": "137190"
  },
  {
    "text": "instance each jobs were billed will be a",
    "start": "137190",
    "end": "140910"
  },
  {
    "text": "cube or any spot in its own namespace",
    "start": "140910",
    "end": "143940"
  },
  {
    "text": "and that runs on a pool of co-locating",
    "start": "143940",
    "end": "145860"
  },
  {
    "text": "notes so it's not really hard to",
    "start": "145860",
    "end": "148440"
  },
  {
    "text": "understand why are we talking about you",
    "start": "148440",
    "end": "151020"
  },
  {
    "text": "know hard multi penalty here everything",
    "start": "151020",
    "end": "153780"
  },
  {
    "text": "has to be isolated from each other every",
    "start": "153780",
    "end": "156360"
  },
  {
    "text": "container",
    "start": "156360",
    "end": "157910"
  },
  {
    "text": "like need not to know about the other so",
    "start": "157910",
    "end": "161130"
  },
  {
    "text": "we shall have a a job from a customer a",
    "start": "161130",
    "end": "163200"
  },
  {
    "text": "it needs to be completely isolated from",
    "start": "163200",
    "end": "166650"
  },
  {
    "text": "another job from customer B so really",
    "start": "166650",
    "end": "171630"
  },
  {
    "text": "security is something really critical in",
    "start": "171630",
    "end": "174690"
  },
  {
    "text": "a class and that's what we really talk",
    "start": "174690",
    "end": "176070"
  },
  {
    "text": "about hard multi-tenancy so we always on",
    "start": "176070",
    "end": "179220"
  },
  {
    "text": "the look for new ways of securing at",
    "start": "179220",
    "end": "182700"
  },
  {
    "text": "clusters and securing those containers",
    "start": "182700",
    "end": "186920"
  },
  {
    "text": "so if I have a look at how the",
    "start": "186920",
    "end": "190020"
  },
  {
    "text": "traditional containers and when I say",
    "start": "190020",
    "end": "191730"
  },
  {
    "text": "traditional containers you probably",
    "start": "191730",
    "end": "193200"
  },
  {
    "text": "understand better if I say docker",
    "start": "193200",
    "end": "194940"
  },
  {
    "text": "containers we don't run docker demon",
    "start": "194940",
    "end": "197220"
  },
  {
    "text": "anymore in our clusters but it is",
    "start": "197220",
    "end": "199560"
  },
  {
    "text": "effectively a docker container so the",
    "start": "199560",
    "end": "202500"
  },
  {
    "text": "isolation works with kernel namespaces",
    "start": "202500",
    "end": "205290"
  },
  {
    "text": "and that's basically going to control",
    "start": "205290",
    "end": "206910"
  },
  {
    "text": "what the process are going to be able to",
    "start": "206910",
    "end": "209520"
  },
  {
    "text": "to see or not see so here I have like",
    "start": "209520",
    "end": "214290"
  },
  {
    "text": "three containers process a-b and fee",
    "start": "214290",
    "end": "216830"
  },
  {
    "text": "with their own kernel namespaces and",
    "start": "216830",
    "end": "220830"
  },
  {
    "text": "then a half see groups obviously that's",
    "start": "220830",
    "end": "222480"
  },
  {
    "text": "going to control what resources they can",
    "start": "222480",
    "end": "224340"
  },
  {
    "text": "access you can limit the CPU or a memory",
    "start": "224340",
    "end": "226170"
  },
  {
    "text": "for instance and in a bunch of other",
    "start": "226170",
    "end": "228240"
  },
  {
    "text": "things but the critical part here is",
    "start": "228240",
    "end": "230270"
  },
  {
    "text": "those process actually share the same",
    "start": "230270",
    "end": "234780"
  },
  {
    "text": "kernel so when you talk about securing",
    "start": "234780",
    "end": "237540"
  },
  {
    "text": "those those process that the worst that",
    "start": "237540",
    "end": "239220"
  },
  {
    "text": "could happen is having a container break",
    "start": "239220",
    "end": "243090"
  },
  {
    "text": "out it's pretty rare but it could",
    "start": "243090",
    "end": "245160"
  },
  {
    "text": "potentially happen",
    "start": "245160",
    "end": "247100"
  },
  {
    "text": "so this fission mechanism you can or",
    "start": "247100",
    "end": "251030"
  },
  {
    "text": "things you can do to secure those does",
    "start": "251030",
    "end": "253740"
  },
  {
    "text": "contain a bit further and then it was",
    "start": "253740",
    "end": "255240"
  },
  {
    "text": "just to talk about during the best",
    "start": "255240",
    "end": "256560"
  },
  {
    "text": "practices what you can do for for",
    "start": "256560",
    "end": "259320"
  },
  {
    "text": "security and then we do most of that if",
    "start": "259320",
    "end": "261570"
  },
  {
    "text": "not everything network policies for",
    "start": "261570",
    "end": "264479"
  },
  {
    "text": "instance is a good one",
    "start": "264479",
    "end": "266099"
  },
  {
    "text": "where you're gonna have your container a",
    "start": "266099",
    "end": "269620"
  },
  {
    "text": "running from a customer not going to be",
    "start": "269620",
    "end": "273280"
  },
  {
    "text": "able to talk to you container be the",
    "start": "273280",
    "end": "276280"
  },
  {
    "text": "rules are pretty simple in those",
    "start": "276280",
    "end": "278080"
  },
  {
    "text": "clusters for instance where you're only",
    "start": "278080",
    "end": "280599"
  },
  {
    "text": "going to be able to talk to the internet",
    "start": "280599",
    "end": "282069"
  },
  {
    "text": "you're going to be able to push pull",
    "start": "282069",
    "end": "283599"
  },
  {
    "text": "some code do things that are be never",
    "start": "283599",
    "end": "285879"
  },
  {
    "text": "going to be able to talk to you another",
    "start": "285879",
    "end": "287500"
  },
  {
    "text": "container running that cluster or the",
    "start": "287500",
    "end": "289930"
  },
  {
    "text": "underlying host said company",
    "start": "289930",
    "end": "292659"
  },
  {
    "text": "capabilities is something that you",
    "start": "292659",
    "end": "294219"
  },
  {
    "text": "should also need to do and then be very",
    "start": "294219",
    "end": "296050"
  },
  {
    "text": "aware of dropping capabilities and",
    "start": "296050",
    "end": "298449"
  },
  {
    "text": "controlling what sis calls can be made",
    "start": "298449",
    "end": "300580"
  },
  {
    "text": "on your coasters is something really",
    "start": "300580",
    "end": "302590"
  },
  {
    "text": "critical",
    "start": "302590",
    "end": "303270"
  },
  {
    "text": "selinux help where if there was really",
    "start": "303270",
    "end": "307599"
  },
  {
    "text": "something really bad happening in",
    "start": "307599",
    "end": "308949"
  },
  {
    "text": "aversive component breakout well having",
    "start": "308949",
    "end": "310569"
  },
  {
    "text": "those labels on your files SELinux",
    "start": "310569",
    "end": "312699"
  },
  {
    "text": "tables would really limit the damage",
    "start": "312699",
    "end": "315340"
  },
  {
    "text": "that could be done and then finally not",
    "start": "315340",
    "end": "317800"
  },
  {
    "text": "running containers as route it's a good",
    "start": "317800",
    "end": "320139"
  },
  {
    "text": "thing for obvious reasons right so as I",
    "start": "320139",
    "end": "327250"
  },
  {
    "text": "said the worst thing that could happen",
    "start": "327250",
    "end": "328539"
  },
  {
    "text": "is really a container breakout and then",
    "start": "328539",
    "end": "332139"
  },
  {
    "text": "we have some interesting requirements in",
    "start": "332139",
    "end": "334180"
  },
  {
    "text": "that cluster and in one of those",
    "start": "334180",
    "end": "335590"
  },
  {
    "text": "requirement is docking docker developers",
    "start": "335590",
    "end": "339729"
  },
  {
    "text": "love docker and dagger so do you start a",
    "start": "339729",
    "end": "342400"
  },
  {
    "text": "container for them with a build and they",
    "start": "342400",
    "end": "346449"
  },
  {
    "text": "want to be able to build their code in",
    "start": "346449",
    "end": "348610"
  },
  {
    "text": "that container but they also want to",
    "start": "348610",
    "end": "351330"
  },
  {
    "text": "build their docker images and then also",
    "start": "351330",
    "end": "353889"
  },
  {
    "text": "want to push their double images so like",
    "start": "353889",
    "end": "355539"
  },
  {
    "text": "that build actually has a something they",
    "start": "355539",
    "end": "357969"
  },
  {
    "text": "can start using straightaway so in order",
    "start": "357969",
    "end": "360219"
  },
  {
    "text": "to do that we have to run docker and",
    "start": "360219",
    "end": "362379"
  },
  {
    "text": "docker I create a docker container and",
    "start": "362379",
    "end": "364719"
  },
  {
    "text": "then you're gonna run docker container",
    "start": "364719",
    "end": "366069"
  },
  {
    "text": "in Dhaka so that requires what root uses",
    "start": "366069",
    "end": "370089"
  },
  {
    "text": "privilege mode extra capabilities it's a",
    "start": "370089",
    "end": "374050"
  },
  {
    "text": "bit of a nightmare for at you bananas",
    "start": "374050",
    "end": "375699"
  },
  {
    "text": "that means to secure it so really",
    "start": "375699",
    "end": "380879"
  },
  {
    "text": "challenging security think that doctor",
    "start": "380879",
    "end": "384370"
  },
  {
    "text": "of Dhaka requirement another thing is C",
    "start": "384370",
    "end": "387729"
  },
  {
    "text": "B's CV is a really this big scary thing",
    "start": "387729",
    "end": "390759"
  },
  {
    "text": "that you don't know what's gonna hit you",
    "start": "390759",
    "end": "392409"
  },
  {
    "text": "and most of the time when they are",
    "start": "392409",
    "end": "396029"
  },
  {
    "text": "announced you",
    "start": "396029",
    "end": "398310"
  },
  {
    "text": "actually have a fix already and then you",
    "start": "398310",
    "end": "401190"
  },
  {
    "text": "can push that fix but it is the big",
    "start": "401190",
    "end": "404370"
  },
  {
    "text": "scary thing here where you running",
    "start": "404370",
    "end": "406970"
  },
  {
    "text": "infrastructure but really untrusted",
    "start": "406970",
    "end": "408870"
  },
  {
    "text": "workload and and well you're trying to",
    "start": "408870",
    "end": "413730"
  },
  {
    "text": "protect yourself against unknown CVS so",
    "start": "413730",
    "end": "417030"
  },
  {
    "text": "this is where we really require the",
    "start": "417030",
    "end": "418530"
  },
  {
    "text": "extra level of security where we think",
    "start": "418530",
    "end": "420630"
  },
  {
    "text": "well the container isolation might not",
    "start": "420630",
    "end": "423030"
  },
  {
    "text": "be just enough and then we need another",
    "start": "423030",
    "end": "425910"
  },
  {
    "text": "level another layer of security I think",
    "start": "425910",
    "end": "428970"
  },
  {
    "text": "it's a good thing like security is like",
    "start": "428970",
    "end": "431010"
  },
  {
    "text": "an onion",
    "start": "431010",
    "end": "431580"
  },
  {
    "text": "not because it makes you cry and it's",
    "start": "431580",
    "end": "433200"
  },
  {
    "text": "hard but because it's all about the",
    "start": "433200",
    "end": "436530"
  },
  {
    "text": "different layers so this is where we",
    "start": "436530",
    "end": "442400"
  },
  {
    "text": "started with Keira containers and that",
    "start": "442400",
    "end": "445290"
  },
  {
    "text": "comes straight from their website where",
    "start": "445290",
    "end": "446670"
  },
  {
    "text": "it says the speed of containers and the",
    "start": "446670",
    "end": "449220"
  },
  {
    "text": "security of VMs well it almost sounds",
    "start": "449220",
    "end": "453390"
  },
  {
    "text": "too good to be true well you usually",
    "start": "453390",
    "end": "456390"
  },
  {
    "text": "spinning up a VM will take you 30",
    "start": "456390",
    "end": "460620"
  },
  {
    "text": "seconds a minute starting you contain it",
    "start": "460620",
    "end": "462660"
  },
  {
    "text": "takes service sub-second like if you",
    "start": "462660",
    "end": "464820"
  },
  {
    "text": "have the image the image stunning in",
    "start": "464820",
    "end": "467310"
  },
  {
    "text": "containers almost instant well kara can",
    "start": "467310",
    "end": "470010"
  },
  {
    "text": "provide stuff and it does up with",
    "start": "470010",
    "end": "473490"
  },
  {
    "text": "running what they call micro virtual",
    "start": "473490",
    "end": "476040"
  },
  {
    "text": "machine so if I have a look at the",
    "start": "476040",
    "end": "477900"
  },
  {
    "text": "isolation aware I have the same",
    "start": "477900",
    "end": "480120"
  },
  {
    "text": "traditional container isolation with my",
    "start": "480120",
    "end": "482010"
  },
  {
    "text": "three same process a B and C that",
    "start": "482010",
    "end": "484500"
  },
  {
    "text": "sharing that Linux kernel in the cutter",
    "start": "484500",
    "end": "488250"
  },
  {
    "text": "container world I have a micro virtual",
    "start": "488250",
    "end": "491790"
  },
  {
    "text": "machine wrapping those containers so",
    "start": "491790",
    "end": "495420"
  },
  {
    "text": "each of my process a B and C which",
    "start": "495420",
    "end": "498600"
  },
  {
    "text": "different containers will have their own",
    "start": "498600",
    "end": "501240"
  },
  {
    "text": "Linux kernel a B and C and then this is",
    "start": "501240",
    "end": "504480"
  },
  {
    "text": "really where that extra level of",
    "start": "504480",
    "end": "506490"
  },
  {
    "text": "isolation comes from where you really",
    "start": "506490",
    "end": "508530"
  },
  {
    "text": "have the hardware virtualization on the",
    "start": "508530",
    "end": "511830"
  },
  {
    "text": "underlying host you have like the normal",
    "start": "511830",
    "end": "513270"
  },
  {
    "text": "like in its kernel so how does it work",
    "start": "513270",
    "end": "518190"
  },
  {
    "text": "well Cara is OCI compliant that means",
    "start": "518190",
    "end": "523140"
  },
  {
    "text": "cubed any saw or in that case the",
    "start": "523140",
    "end": "525060"
  },
  {
    "text": "cubelet doesn't actually know it's gonna",
    "start": "525060",
    "end": "527100"
  },
  {
    "text": "start a micro vm to start your container",
    "start": "527100",
    "end": "531000"
  },
  {
    "text": "so",
    "start": "531000",
    "end": "531720"
  },
  {
    "text": "is a shim in between that's gonna",
    "start": "531720",
    "end": "533310"
  },
  {
    "text": "basically translate all the calls and",
    "start": "533310",
    "end": "535350"
  },
  {
    "text": "then send them through a V sock to a an",
    "start": "535350",
    "end": "540089"
  },
  {
    "text": "agent that runs inside a virtual machine",
    "start": "540089",
    "end": "542610"
  },
  {
    "text": "and that is that agent I was actually",
    "start": "542610",
    "end": "545100"
  },
  {
    "text": "gonna start those containers so you have",
    "start": "545100",
    "end": "549120"
  },
  {
    "text": "all the benefits of kubernetes and the",
    "start": "549120",
    "end": "550800"
  },
  {
    "text": "speed of it and then you can keep still",
    "start": "550800",
    "end": "552839"
  },
  {
    "text": "exec and everything straight into that",
    "start": "552839",
    "end": "556069"
  },
  {
    "text": "micro virtual machine with the extra",
    "start": "556069",
    "end": "559319"
  },
  {
    "text": "level of isolation so in order to start",
    "start": "559319",
    "end": "566699"
  },
  {
    "text": "a car a container you have to tell Cuban",
    "start": "566699",
    "end": "570269"
  },
  {
    "text": "Aires how to start the container so this",
    "start": "570269",
    "end": "574290"
  },
  {
    "text": "is done with an annotation and in a more",
    "start": "574290",
    "end": "576750"
  },
  {
    "text": "recent version of kubernetes a runtime",
    "start": "576750",
    "end": "578850"
  },
  {
    "text": "class car can run on the same machine as",
    "start": "578850",
    "end": "582720"
  },
  {
    "text": "a normal traditional container which is",
    "start": "582720",
    "end": "585240"
  },
  {
    "text": "a run sea container basically so in run",
    "start": "585240",
    "end": "587939"
  },
  {
    "text": "container the cryo or even docker",
    "start": "587939",
    "end": "591060"
  },
  {
    "text": "alongside Keira containers that runs",
    "start": "591060",
    "end": "593639"
  },
  {
    "text": "gonna run inside a virtual machine color",
    "start": "593639",
    "end": "598110"
  },
  {
    "text": "containers for different hypervisor so",
    "start": "598110",
    "end": "600509"
  },
  {
    "text": "this a Big Bertha firecracker which has",
    "start": "600509",
    "end": "604079"
  },
  {
    "text": "been released recently by AWS but we run",
    "start": "604079",
    "end": "607370"
  },
  {
    "text": "the normal QM you manage k vm based",
    "start": "607370",
    "end": "611250"
  },
  {
    "text": "virtual machine so really all you need",
    "start": "611250",
    "end": "614220"
  },
  {
    "text": "to do is drop the packages for four",
    "start": "614220",
    "end": "617610"
  },
  {
    "text": "color containers and an annotate or use",
    "start": "617610",
    "end": "620370"
  },
  {
    "text": "every one-time class for your pod and",
    "start": "620370",
    "end": "622199"
  },
  {
    "text": "then automatically cubelet will just",
    "start": "622199",
    "end": "624540"
  },
  {
    "text": "start your containers in that micro",
    "start": "624540",
    "end": "627540"
  },
  {
    "text": "virtual machine so we've done a",
    "start": "627540",
    "end": "632639"
  },
  {
    "text": "proof-of-concept in in about a week time",
    "start": "632639",
    "end": "635329"
  },
  {
    "text": "another super easy to do and then we're",
    "start": "635329",
    "end": "638730"
  },
  {
    "text": "like well can we actually run some of",
    "start": "638730",
    "end": "641490"
  },
  {
    "text": "the most entrusted workload we have in",
    "start": "641490",
    "end": "643620"
  },
  {
    "text": "the company on inside color containers",
    "start": "643620",
    "end": "647610"
  },
  {
    "text": "and weave those stock and docker",
    "start": "647610",
    "end": "649139"
  },
  {
    "text": "requirements and and then things like",
    "start": "649139",
    "end": "652079"
  },
  {
    "text": "that we've proved that we could and and",
    "start": "652079",
    "end": "656910"
  },
  {
    "text": "this is where I went to my boss and I",
    "start": "656910",
    "end": "659880"
  },
  {
    "text": "said look I think we should definitely",
    "start": "659880",
    "end": "661139"
  },
  {
    "text": "do this and",
    "start": "661139",
    "end": "662850"
  },
  {
    "text": "we are handed over to Alex and then this",
    "start": "662850",
    "end": "666300"
  },
  {
    "text": "is where all the challenges of making",
    "start": "666300",
    "end": "668820"
  },
  {
    "text": "something production came in and he's",
    "start": "668820",
    "end": "671250"
  },
  {
    "text": "going to talk a little bit more about",
    "start": "671250",
    "end": "672540"
  },
  {
    "text": "that thanks David",
    "start": "672540",
    "end": "676230"
  },
  {
    "text": "so as we were transitioning to Carter",
    "start": "676230",
    "end": "677850"
  },
  {
    "text": "containers one of the first hurdles that",
    "start": "677850",
    "end": "679290"
  },
  {
    "text": "we encountered was this performance",
    "start": "679290",
    "end": "681060"
  },
  {
    "text": "inside the virtual machine by default",
    "start": "681060",
    "end": "684839"
  },
  {
    "text": "Carter uses a system called nine PFS to",
    "start": "684839",
    "end": "687360"
  },
  {
    "text": "share the route FS of the container",
    "start": "687360",
    "end": "689390"
  },
  {
    "text": "config Maps secrets volumes into the VM",
    "start": "689390",
    "end": "692899"
  },
  {
    "text": "any changes made to inside the VM are",
    "start": "692899",
    "end": "696600"
  },
  {
    "text": "propagated back to the host side and",
    "start": "696600",
    "end": "698279"
  },
  {
    "text": "vice versa this allows the qubit to",
    "start": "698279",
    "end": "700950"
  },
  {
    "text": "manage things like secrets and config",
    "start": "700950",
    "end": "702690"
  },
  {
    "text": "maps from the host side and then have",
    "start": "702690",
    "end": "705600"
  },
  {
    "text": "those changes replicated back into the",
    "start": "705600",
    "end": "707579"
  },
  {
    "text": "VM a benefit of using an old established",
    "start": "707579",
    "end": "711060"
  },
  {
    "text": "protocol like 9p FS is that it is really",
    "start": "711060",
    "end": "714060"
  },
  {
    "text": "reliable and it has really good",
    "start": "714060",
    "end": "716550"
  },
  {
    "text": "compatibility with certain file systems",
    "start": "716550",
    "end": "718230"
  },
  {
    "text": "at one point we were able to run an",
    "start": "718230",
    "end": "720510"
  },
  {
    "text": "overlay file system on top of 9p inside",
    "start": "720510",
    "end": "723930"
  },
  {
    "text": "that VM but well we soon got reports",
    "start": "723930",
    "end": "728190"
  },
  {
    "text": "that builds are running really really",
    "start": "728190",
    "end": "729779"
  },
  {
    "text": "slowly in Carter containers verse",
    "start": "729779",
    "end": "731310"
  },
  {
    "text": "natively in run C in some cases these",
    "start": "731310",
    "end": "734790"
  },
  {
    "text": "builds were taking much longer and were",
    "start": "734790",
    "end": "738690"
  },
  {
    "text": "performing worse than on the developers",
    "start": "738690",
    "end": "741240"
  },
  {
    "text": "laptop so we started doing some",
    "start": "741240",
    "end": "744600"
  },
  {
    "text": "performance benchmarks of the file",
    "start": "744600",
    "end": "747000"
  },
  {
    "text": "system used by the containers inside the",
    "start": "747000",
    "end": "749160"
  },
  {
    "text": "VM and we quickly discovered why it was",
    "start": "749160",
    "end": "751230"
  },
  {
    "text": "subpar this is a sequential right of a",
    "start": "751230",
    "end": "755540"
  },
  {
    "text": "of an eight gigabyte file to the root of",
    "start": "755540",
    "end": "757890"
  },
  {
    "text": "us and it performed pretty poorly at",
    "start": "757890",
    "end": "760019"
  },
  {
    "text": "eighty eight megabytes a second for some",
    "start": "760019",
    "end": "762420"
  },
  {
    "text": "perspective consumer hard drives operate",
    "start": "762420",
    "end": "765029"
  },
  {
    "text": "at around 150 megabytes a second when",
    "start": "765029",
    "end": "767399"
  },
  {
    "text": "writing if our goal was to provide a",
    "start": "767399",
    "end": "769829"
  },
  {
    "text": "system from the early 2000s then we",
    "start": "769829",
    "end": "772290"
  },
  {
    "text": "definitely achieved that and here's the",
    "start": "772290",
    "end": "776459"
  },
  {
    "text": "same performance on my macbook which is",
    "start": "776459",
    "end": "779190"
  },
  {
    "text": "considerably better so it was really",
    "start": "779190",
    "end": "782339"
  },
  {
    "text": "obvious now why developers were getting",
    "start": "782339",
    "end": "784199"
  },
  {
    "text": "better performance on their laptops so",
    "start": "784199",
    "end": "787170"
  },
  {
    "text": "with some research we discovered that",
    "start": "787170",
    "end": "789149"
  },
  {
    "text": "cada has support for plugging",
    "start": "789149",
    "end": "791130"
  },
  {
    "text": "block devices into the VM this is done",
    "start": "791130",
    "end": "794100"
  },
  {
    "text": "by leveraging device mapper and",
    "start": "794100",
    "end": "796529"
  },
  {
    "text": "lugging built-in to contain addy that's",
    "start": "796529",
    "end": "798389"
  },
  {
    "text": "fairly new rather than provisioning the",
    "start": "798389",
    "end": "800490"
  },
  {
    "text": "docker images lays on the host with",
    "start": "800490",
    "end": "802170"
  },
  {
    "text": "overlay FS and using that for the",
    "start": "802170",
    "end": "803970"
  },
  {
    "text": "containers read FS the container D",
    "start": "803970",
    "end": "806339"
  },
  {
    "text": "plug-in will create thin provision",
    "start": "806339",
    "end": "808199"
  },
  {
    "text": "copy-on-write block devices for the",
    "start": "808199",
    "end": "810269"
  },
  {
    "text": "docker image layers with each block",
    "start": "810269",
    "end": "813870"
  },
  {
    "text": "device they're then plugged into the",
    "start": "813870",
    "end": "815879"
  },
  {
    "text": "virtual machine and mounted into the",
    "start": "815879",
    "end": "817860"
  },
  {
    "text": "correct location for the containers",
    "start": "817860",
    "end": "819480"
  },
  {
    "text": "route FS by using block devices we avoid",
    "start": "819480",
    "end": "822749"
  },
  {
    "text": "the encoding and decoding overhead of",
    "start": "822749",
    "end": "825499"
  },
  {
    "text": "9pf s while also maintaining that",
    "start": "825499",
    "end": "827879"
  },
  {
    "text": "compatibility that being said we still",
    "start": "827879",
    "end": "830189"
  },
  {
    "text": "have to rely on 9 p FS for some sharing",
    "start": "830189",
    "end": "832800"
  },
  {
    "text": "of directives and pass but we've ensured",
    "start": "832800",
    "end": "834389"
  },
  {
    "text": "that though these are not in the",
    "start": "834389",
    "end": "836339"
  },
  {
    "text": "critical path of builds for example the",
    "start": "836339",
    "end": "838769"
  },
  {
    "text": "container secrets and comping Maps still",
    "start": "838769",
    "end": "841499"
  },
  {
    "text": "use 9 p FS but these are small files",
    "start": "841499",
    "end": "843689"
  },
  {
    "text": "where the penalty of 9 p FS isn't as",
    "start": "843689",
    "end": "845879"
  },
  {
    "text": "significant finally we've ensured that",
    "start": "845879",
    "end": "848279"
  },
  {
    "text": "device mapper blocks are provisioned on",
    "start": "848279",
    "end": "850110"
  },
  {
    "text": "top of an array of nvme SSDs and help",
    "start": "850110",
    "end": "853290"
  },
  {
    "text": "boost performance and so our sequential",
    "start": "853290",
    "end": "857220"
  },
  {
    "text": "performance now looks like this which is",
    "start": "857220",
    "end": "859439"
  },
  {
    "text": "pretty good considering that it's inside",
    "start": "859439",
    "end": "861389"
  },
  {
    "text": "a virtual machine it's running on a",
    "start": "861389",
    "end": "863100"
  },
  {
    "text": "multi-tenant anode and we've found that",
    "start": "863100",
    "end": "866040"
  },
  {
    "text": "out device mapper setup has been able to",
    "start": "866040",
    "end": "867990"
  },
  {
    "text": "sustain 250,000 a ops without issue",
    "start": "867990",
    "end": "871069"
  },
  {
    "text": "which is really ideal for a platform",
    "start": "871069",
    "end": "873420"
  },
  {
    "text": "that relies on running a large number of",
    "start": "873420",
    "end": "875639"
  },
  {
    "text": "builds on a single host so the next",
    "start": "875639",
    "end": "879899"
  },
  {
    "text": "challenge that we ran into was related",
    "start": "879899",
    "end": "882449"
  },
  {
    "text": "to one of our requirements moving Takada",
    "start": "882449",
    "end": "884550"
  },
  {
    "text": "that was being able to run privileged",
    "start": "884550",
    "end": "886319"
  },
  {
    "text": "containers in a secure fashion as David",
    "start": "886319",
    "end": "889259"
  },
  {
    "text": "mentioned earlier this requirement would",
    "start": "889259",
    "end": "890610"
  },
  {
    "text": "allow us to run docker and docker inside",
    "start": "890610",
    "end": "893879"
  },
  {
    "text": "the VM giving customers access to not",
    "start": "893879",
    "end": "895980"
  },
  {
    "text": "only building images but running those",
    "start": "895980",
    "end": "898110"
  },
  {
    "text": "images within their build everyone's",
    "start": "898110",
    "end": "902339"
  },
  {
    "text": "probably made a privileged container",
    "start": "902339",
    "end": "903809"
  },
  {
    "text": "before but if you haven't this is what",
    "start": "903809",
    "end": "905339"
  },
  {
    "text": "it looks like you simply add privilege",
    "start": "905339",
    "end": "908009"
  },
  {
    "text": "equals true to your security context for",
    "start": "908009",
    "end": "909750"
  },
  {
    "text": "the container and so along with having a",
    "start": "909750",
    "end": "912389"
  },
  {
    "text": "correctly setup pod security policy this",
    "start": "912389",
    "end": "914879"
  },
  {
    "text": "will create the container with elevated",
    "start": "914879",
    "end": "916410"
  },
  {
    "text": "privileges all of the capabilities that",
    "start": "916410",
    "end": "918540"
  },
  {
    "text": "you could ever want and access to all",
    "start": "918540",
    "end": "920939"
  },
  {
    "text": "host devices and this is what we require",
    "start": "920939",
    "end": "923730"
  },
  {
    "text": "to run docker in docker letting people",
    "start": "923730",
    "end": "926519"
  },
  {
    "text": "build images in run containers",
    "start": "926519",
    "end": "928230"
  },
  {
    "text": "within their pod so by default if you",
    "start": "928230",
    "end": "931920"
  },
  {
    "text": "don't have privileged setup containers",
    "start": "931920",
    "end": "934590"
  },
  {
    "text": "do not have access to devices on the",
    "start": "934590",
    "end": "937140"
  },
  {
    "text": "host but one of the things that",
    "start": "937140",
    "end": "938940"
  },
  {
    "text": "privilege does grant you is read/write",
    "start": "938940",
    "end": "940830"
  },
  {
    "text": "access to all of the host devices if you",
    "start": "940830",
    "end": "943200"
  },
  {
    "text": "ever needed to manage a disk on the host",
    "start": "943200",
    "end": "944760"
  },
  {
    "text": "or a USB device from a container then",
    "start": "944760",
    "end": "946920"
  },
  {
    "text": "giving privileges probably the easiest",
    "start": "946920",
    "end": "949080"
  },
  {
    "text": "way to achieve this but this ease of use",
    "start": "949080",
    "end": "952320"
  },
  {
    "text": "can have some disastrous effects if if",
    "start": "952320",
    "end": "955080"
  },
  {
    "text": "not understood properly or done in a",
    "start": "955080",
    "end": "957270"
  },
  {
    "text": "multi-tenant tentative environment so",
    "start": "957270",
    "end": "959910"
  },
  {
    "text": "having access to those devices in the",
    "start": "959910",
    "end": "961350"
  },
  {
    "text": "host minute you can not only read and",
    "start": "961350",
    "end": "962940"
  },
  {
    "text": "modify the disk file systems but also",
    "start": "962940",
    "end": "965190"
  },
  {
    "text": "file systems of other containers on the",
    "start": "965190",
    "end": "967350"
  },
  {
    "text": "host itself these capabilities in the",
    "start": "967350",
    "end": "969960"
  },
  {
    "text": "wrong hands could result in data loss",
    "start": "969960",
    "end": "972000"
  },
  {
    "text": "secrets exfiltrated and customer data",
    "start": "972000",
    "end": "974430"
  },
  {
    "text": "stolen for this example I've actually",
    "start": "974430",
    "end": "976770"
  },
  {
    "text": "listed out all of the device mapper",
    "start": "976770",
    "end": "978810"
  },
  {
    "text": "devices that we are using in our cargo",
    "start": "978810",
    "end": "981390"
  },
  {
    "text": "containers from the host side and so",
    "start": "981390",
    "end": "985500"
  },
  {
    "text": "when we run a privileged container on",
    "start": "985500",
    "end": "987390"
  },
  {
    "text": "cutter we also get all those privileged",
    "start": "987390",
    "end": "989580"
  },
  {
    "text": "devices within LVM which breaks the",
    "start": "989580",
    "end": "994530"
  },
  {
    "text": "isolation that we thought we would have",
    "start": "994530",
    "end": "996170"
  },
  {
    "text": "with cauda",
    "start": "996170",
    "end": "999470"
  },
  {
    "text": "so what does this let us do well inside",
    "start": "1000080",
    "end": "1002180"
  },
  {
    "text": "our privilege container or as brooders",
    "start": "1002180",
    "end": "1003620"
  },
  {
    "text": "inside the VM we can then mount and",
    "start": "1003620",
    "end": "1005990"
  },
  {
    "text": "explore any file system mounted into the",
    "start": "1005990",
    "end": "1008060"
  },
  {
    "text": "virtual machine in this case there was",
    "start": "1008060",
    "end": "1010250"
  },
  {
    "text": "another container running on the host",
    "start": "1010250",
    "end": "1011660"
  },
  {
    "text": "file system which was dam 25 this",
    "start": "1011660",
    "end": "1015590"
  },
  {
    "text": "particular container was an odious",
    "start": "1015590",
    "end": "1017180"
  },
  {
    "text": "Xpress up I've then managed to mount dam",
    "start": "1017180",
    "end": "1020270"
  },
  {
    "text": "25 to a path inside the vehm with the",
    "start": "1020270",
    "end": "1023180"
  },
  {
    "text": "Linux mount command once mounted we can",
    "start": "1023180",
    "end": "1024949"
  },
  {
    "text": "list any files in the container",
    "start": "1024950",
    "end": "1026329"
  },
  {
    "text": "including readwrite if we wanted to we",
    "start": "1026330",
    "end": "1029900"
  },
  {
    "text": "can't view any processes memory or",
    "start": "1029900",
    "end": "1031790"
  },
  {
    "text": "environment variables of that container",
    "start": "1031790",
    "end": "1033650"
  },
  {
    "text": "but being able to view another",
    "start": "1033650",
    "end": "1035660"
  },
  {
    "text": "containers where FS is pretty bad",
    "start": "1035660",
    "end": "1039430"
  },
  {
    "text": "as a remedy for this we've contributed a",
    "start": "1046280",
    "end": "1048260"
  },
  {
    "text": "flag to the CRI component within",
    "start": "1048260",
    "end": "1050450"
  },
  {
    "text": "container D to allow us to overload the",
    "start": "1050450",
    "end": "1053180"
  },
  {
    "text": "default privilege behavior with this",
    "start": "1053180",
    "end": "1055880"
  },
  {
    "text": "flag we can disable adding of those host",
    "start": "1055880",
    "end": "1058670"
  },
  {
    "text": "devices for certain runtimes in",
    "start": "1058670",
    "end": "1060680"
  },
  {
    "text": "container D and that's not mounting them",
    "start": "1060680",
    "end": "1062390"
  },
  {
    "text": "into the card a virtual machine so",
    "start": "1062390",
    "end": "1066740"
  },
  {
    "text": "overall this was a really good learning",
    "start": "1066740",
    "end": "1067670"
  },
  {
    "text": "experience for us and some of our key",
    "start": "1067670",
    "end": "1069500"
  },
  {
    "text": "takeaways are that we shouldn't assume",
    "start": "1069500",
    "end": "1070670"
  },
  {
    "text": "isolation with anything especially",
    "start": "1070670",
    "end": "1074120"
  },
  {
    "text": "virtual machines performing an audit of",
    "start": "1074120",
    "end": "1077570"
  },
  {
    "text": "the resources being exposed in shared",
    "start": "1077570",
    "end": "1079040"
  },
  {
    "text": "Takada helps uncover this problem we did",
    "start": "1079040",
    "end": "1081800"
  },
  {
    "text": "this from both the host side and also",
    "start": "1081800",
    "end": "1083720"
  },
  {
    "text": "from within the VAM as it might not be",
    "start": "1083720",
    "end": "1085970"
  },
  {
    "text": "evident on the host side that something",
    "start": "1085970",
    "end": "1087470"
  },
  {
    "text": "is being shared into the van finally we",
    "start": "1087470",
    "end": "1090650"
  },
  {
    "text": "are interested in improving the",
    "start": "1090650",
    "end": "1092180"
  },
  {
    "text": "improving the state of privilege in",
    "start": "1092180",
    "end": "1094130"
  },
  {
    "text": "communities this solution that we sort",
    "start": "1094130",
    "end": "1097490"
  },
  {
    "text": "of hacked together isn't a great",
    "start": "1097490",
    "end": "1099320"
  },
  {
    "text": "long-term solution we'd like to see",
    "start": "1099320",
    "end": "1101330"
  },
  {
    "text": "privilege in kubernetes mature to a",
    "start": "1101330",
    "end": "1103340"
  },
  {
    "text": "point where users have granularity over",
    "start": "1103340",
    "end": "1105410"
  },
  {
    "text": "the extra privileges that privilege",
    "start": "1105410",
    "end": "1107990"
  },
  {
    "text": "provides to a container so that leads me",
    "start": "1107990",
    "end": "1111950"
  },
  {
    "text": "to the final challenge that we've",
    "start": "1111950",
    "end": "1113120"
  },
  {
    "text": "encountered monitoring of containers",
    "start": "1113120",
    "end": "1115010"
  },
  {
    "text": "running in Carter so I'm wondering who",
    "start": "1115010",
    "end": "1119750"
  },
  {
    "text": "containers the regular containers is",
    "start": "1119750",
    "end": "1122120"
  },
  {
    "text": "fairly straightforward tasks when using",
    "start": "1122120",
    "end": "1124130"
  },
  {
    "text": "run C there are few components but it",
    "start": "1124130",
    "end": "1126470"
  },
  {
    "text": "essentially boils down to the qubit",
    "start": "1126470",
    "end": "1128200"
  },
  {
    "text": "exposing an endpoint with metrics of all",
    "start": "1128200",
    "end": "1131300"
  },
  {
    "text": "the containers on the host the qubit",
    "start": "1131300",
    "end": "1133760"
  },
  {
    "text": "then gets these metrics from C advisor",
    "start": "1133760",
    "end": "1136100"
  },
  {
    "text": "which in turn scrapes the C groups for",
    "start": "1136100",
    "end": "1138740"
  },
  {
    "text": "the plods and containers on the host",
    "start": "1138740",
    "end": "1139940"
  },
  {
    "text": "side of the actual metric value C groups",
    "start": "1139940",
    "end": "1143630"
  },
  {
    "text": "are utilized to control the resources",
    "start": "1143630",
    "end": "1145070"
  },
  {
    "text": "for containers and so CPU memory and",
    "start": "1145070",
    "end": "1148520"
  },
  {
    "text": "network and so on as a result of them",
    "start": "1148520",
    "end": "1151550"
  },
  {
    "text": "using to control the resources they have",
    "start": "1151550",
    "end": "1153590"
  },
  {
    "text": "very accurate and reliable metrics on",
    "start": "1153590",
    "end": "1156320"
  },
  {
    "text": "the consumption of those resources so",
    "start": "1156320",
    "end": "1160700"
  },
  {
    "text": "when we look at that same metrics",
    "start": "1160700",
    "end": "1162580"
  },
  {
    "text": "pipeline in the context of Carter we run",
    "start": "1162580",
    "end": "1165560"
  },
  {
    "text": "into a few problems initially things",
    "start": "1165560",
    "end": "1167720"
  },
  {
    "text": "look pretty good",
    "start": "1167720",
    "end": "1168590"
  },
  {
    "text": "q Buddha's I would have query C advisor",
    "start": "1168590",
    "end": "1170270"
  },
  {
    "text": "which is in turn able to scrape the C",
    "start": "1170270",
    "end": "1171980"
  },
  {
    "text": "groups from metrics however the metrics",
    "start": "1171980",
    "end": "1174080"
  },
  {
    "text": "return from C groups we see",
    "start": "1174080",
    "end": "1175830"
  },
  {
    "text": "individual container metrics do the",
    "start": "1175830",
    "end": "1177900"
  },
  {
    "text": "container process now running in a",
    "start": "1177900",
    "end": "1180120"
  },
  {
    "text": "completely separate virtual machine and",
    "start": "1180120",
    "end": "1181830"
  },
  {
    "text": "not on the host itself the only process",
    "start": "1181830",
    "end": "1184140"
  },
  {
    "text": "in that host see group is now the VM",
    "start": "1184140",
    "end": "1186650"
  },
  {
    "text": "process which is managing the van and so",
    "start": "1186650",
    "end": "1191340"
  },
  {
    "text": "those metrics are now completely",
    "start": "1191340",
    "end": "1192660"
  },
  {
    "text": "inaccurate the metrics will measure the",
    "start": "1192660",
    "end": "1195900"
  },
  {
    "text": "resources consumed to run the van it's",
    "start": "1195900",
    "end": "1198270"
  },
  {
    "text": "in total but we've lost the ability to",
    "start": "1198270",
    "end": "1200940"
  },
  {
    "text": "view individual containers so with that",
    "start": "1200940",
    "end": "1205410"
  },
  {
    "text": "we looked for an alternative method for",
    "start": "1205410",
    "end": "1207660"
  },
  {
    "text": "metrics collection will have defined in",
    "start": "1207660",
    "end": "1210180"
  },
  {
    "text": "humanities 114 there is now a new",
    "start": "1210180",
    "end": "1212760"
  },
  {
    "text": "metrics endpoint being exposed on the",
    "start": "1212760",
    "end": "1215400"
  },
  {
    "text": "cubelet the main benefit we say for this",
    "start": "1215400",
    "end": "1218040"
  },
  {
    "text": "endpoint is it is now runtime aware it",
    "start": "1218040",
    "end": "1221670"
  },
  {
    "text": "will delegate its metrics collection off",
    "start": "1221670",
    "end": "1223440"
  },
  {
    "text": "to the runtime so whether you were",
    "start": "1223440",
    "end": "1225270"
  },
  {
    "text": "running Carter or run C or some other",
    "start": "1225270",
    "end": "1227510"
  },
  {
    "text": "runtime the Rob the runtime itself is",
    "start": "1227510",
    "end": "1230370"
  },
  {
    "text": "responsible for collecting metrics and",
    "start": "1230370",
    "end": "1232050"
  },
  {
    "text": "shipping them back to the Cuba for",
    "start": "1232050",
    "end": "1234690"
  },
  {
    "text": "unseen nothing much has changed it'll",
    "start": "1234690",
    "end": "1236490"
  },
  {
    "text": "still look at the C groups on the host",
    "start": "1236490",
    "end": "1238410"
  },
  {
    "text": "for resource consumption and so when we",
    "start": "1238410",
    "end": "1241380"
  },
  {
    "text": "go to get metrics for our Carter pods",
    "start": "1241380",
    "end": "1243570"
  },
  {
    "text": "the runtime knows it needs to take a few",
    "start": "1243570",
    "end": "1245760"
  },
  {
    "text": "extra hops or steps to collect the",
    "start": "1245760",
    "end": "1247440"
  },
  {
    "text": "metrics for its containers it will query",
    "start": "1247440",
    "end": "1250170"
  },
  {
    "text": "the C groups from within the virtual",
    "start": "1250170",
    "end": "1251850"
  },
  {
    "text": "machine rather than the C groups on the",
    "start": "1251850",
    "end": "1253620"
  },
  {
    "text": "host and finally if you have mixed",
    "start": "1253620",
    "end": "1256110"
  },
  {
    "text": "workloads running on the host the",
    "start": "1256110",
    "end": "1258600"
  },
  {
    "text": "endpoint works seamlessly with both run",
    "start": "1258600",
    "end": "1260190"
  },
  {
    "text": "C and card a container and whatever",
    "start": "1260190",
    "end": "1262710"
  },
  {
    "text": "other runtime you want to run so what's",
    "start": "1262710",
    "end": "1267300"
  },
  {
    "text": "next for us with our journey in Bukhara",
    "start": "1267300",
    "end": "1269940"
  },
  {
    "text": "still got a few issues to work through",
    "start": "1269940",
    "end": "1271710"
  },
  {
    "text": "and a few things that we're looking to",
    "start": "1271710",
    "end": "1274440"
  },
  {
    "text": "utilize in the future first is auto",
    "start": "1274440",
    "end": "1277140"
  },
  {
    "text": "scaling I'm not sure if David mentioned",
    "start": "1277140",
    "end": "1279750"
  },
  {
    "text": "it but we require large metal instances",
    "start": "1279750",
    "end": "1282170"
  },
  {
    "text": "to run these Carter pods for a while now",
    "start": "1282170",
    "end": "1286260"
  },
  {
    "text": "we've been used to the start time of",
    "start": "1286260",
    "end": "1287490"
  },
  {
    "text": "virtual instances in AWS which can be up",
    "start": "1287490",
    "end": "1289890"
  },
  {
    "text": "and running in a matter of seconds but",
    "start": "1289890",
    "end": "1291960"
  },
  {
    "text": "with metal instances start times can be",
    "start": "1291960",
    "end": "1293880"
  },
  {
    "text": "up to 10 minutes for a whole node to",
    "start": "1293880",
    "end": "1295860"
  },
  {
    "text": "come up with this we need to be ensure",
    "start": "1295860",
    "end": "1298590"
  },
  {
    "text": "that we have enough capacity to absorb",
    "start": "1298590",
    "end": "1300630"
  },
  {
    "text": "spikes and load but also be really",
    "start": "1300630",
    "end": "1302760"
  },
  {
    "text": "mindful of the cost of running these",
    "start": "1302760",
    "end": "1304020"
  },
  {
    "text": "large instances I don't think we're",
    "start": "1304020",
    "end": "1307140"
  },
  {
    "text": "looking forward to is annotations",
    "start": "1307140",
    "end": "1309660"
  },
  {
    "text": "that Carta provides for us so this lets",
    "start": "1309660",
    "end": "1311850"
  },
  {
    "text": "you add a notation to your pods back and",
    "start": "1311850",
    "end": "1314400"
  },
  {
    "text": "then configure things that would",
    "start": "1314400",
    "end": "1317370"
  },
  {
    "text": "normally be statically configured we've",
    "start": "1317370",
    "end": "1319290"
  },
  {
    "text": "cut off so things like our the CPU",
    "start": "1319290",
    "end": "1321360"
  },
  {
    "text": "counts that are exposed to the bam but",
    "start": "1321360",
    "end": "1323610"
  },
  {
    "text": "we're also like different kernel",
    "start": "1323610",
    "end": "1326040"
  },
  {
    "text": "versions so we could have applied to",
    "start": "1326040",
    "end": "1327690"
  },
  {
    "text": "different pods on the same host running",
    "start": "1327690",
    "end": "1329310"
  },
  {
    "text": "to different kernel versions if we",
    "start": "1329310",
    "end": "1330570"
  },
  {
    "text": "wanted to test a new kernel finally",
    "start": "1330570",
    "end": "1333480"
  },
  {
    "text": "we're looking forward to using",
    "start": "1333480",
    "end": "1334490"
  },
  {
    "text": "firecracker as our virtual machine",
    "start": "1334490",
    "end": "1336510"
  },
  {
    "text": "monitor firecracker is really appealing",
    "start": "1336510",
    "end": "1339300"
  },
  {
    "text": "to us with its focus on security",
    "start": "1339300",
    "end": "1341900"
  },
  {
    "text": "performance and the workload density but",
    "start": "1341900",
    "end": "1344550"
  },
  {
    "text": "unfortunately it does not fully support",
    "start": "1344550",
    "end": "1346200"
  },
  {
    "text": "all the features that we require just",
    "start": "1346200",
    "end": "1348060"
  },
  {
    "text": "yet and that's what we had today thank",
    "start": "1348060",
    "end": "1352500"
  },
  {
    "text": "you",
    "start": "1352500",
    "end": "1352680"
  },
  {
    "text": "I think we have two minutes for",
    "start": "1352680",
    "end": "1360210"
  },
  {
    "text": "questions so if anyone has a question I",
    "start": "1360210",
    "end": "1362160"
  },
  {
    "text": "have a mic I'll run around",
    "start": "1362160",
    "end": "1365210"
  },
  {
    "text": "hello thanks a lot for great",
    "start": "1384680",
    "end": "1387080"
  },
  {
    "text": "presentation a question about your",
    "start": "1387080",
    "end": "1390080"
  },
  {
    "text": "runtime engine so basically have you",
    "start": "1390080",
    "end": "1391580"
  },
  {
    "text": "considered utterly opposite direction",
    "start": "1391580",
    "end": "1393680"
  },
  {
    "text": "instead of having huge machine with high",
    "start": "1393680",
    "end": "1396620"
  },
  {
    "text": "tendency and like a lot of pot on that",
    "start": "1396620",
    "end": "1398630"
  },
  {
    "text": "small machines one container per machine",
    "start": "1398630",
    "end": "1401660"
  },
  {
    "text": "there are a few project that can",
    "start": "1401660",
    "end": "1403280"
  },
  {
    "text": "implement that thanks there's a really",
    "start": "1403280",
    "end": "1406340"
  },
  {
    "text": "good question",
    "start": "1406340",
    "end": "1408580"
  },
  {
    "text": "yes one of the key features like the key",
    "start": "1408580",
    "end": "1413420"
  },
  {
    "text": "feature is that the start time we're",
    "start": "1413420",
    "end": "1417640"
  },
  {
    "text": "having having those nodes already there",
    "start": "1417640",
    "end": "1421130"
  },
  {
    "text": "and being able to pull more they already",
    "start": "1421130",
    "end": "1423800"
  },
  {
    "text": "have the agents images pulled already so",
    "start": "1423800",
    "end": "1427730"
  },
  {
    "text": "that the start time is almost instant",
    "start": "1427730",
    "end": "1430460"
  },
  {
    "text": "with Cuban Aires and having warm nodes",
    "start": "1430460",
    "end": "1433640"
  },
  {
    "text": "if you will I think that that was our",
    "start": "1433640",
    "end": "1437540"
  },
  {
    "text": "agreed to trade off we might have",
    "start": "1437540",
    "end": "1439310"
  },
  {
    "text": "reconsidered up with new things like",
    "start": "1439310",
    "end": "1441760"
  },
  {
    "text": "Fargate for instance where we eventually",
    "start": "1441760",
    "end": "1445880"
  },
  {
    "text": "we will be able to run a container in in",
    "start": "1445880",
    "end": "1449810"
  },
  {
    "text": "its own virtual machine or cube fit but",
    "start": "1449810",
    "end": "1452390"
  },
  {
    "text": "they're not there yet so that's why we",
    "start": "1452390",
    "end": "1454520"
  },
  {
    "text": "had to go the car out to run those",
    "start": "1454520",
    "end": "1457460"
  },
  {
    "text": "privileged containers in their own",
    "start": "1457460",
    "end": "1461960"
  },
  {
    "text": "kernel so did it's not there yet but yes",
    "start": "1461960",
    "end": "1465560"
  },
  {
    "text": "absolutely in the future I think with",
    "start": "1465560",
    "end": "1467450"
  },
  {
    "text": "the start I'm improving we will be able",
    "start": "1467450",
    "end": "1469250"
  },
  {
    "text": "to",
    "start": "1469250",
    "end": "1471430"
  },
  {
    "text": "any more questions",
    "start": "1476710",
    "end": "1480190"
  },
  {
    "text": "cool well wellness out of time thanks",
    "start": "1487830",
    "end": "1490680"
  },
  {
    "text": "all for coming thank you",
    "start": "1490680",
    "end": "1492470"
  },
  {
    "text": "[Applause]",
    "start": "1492470",
    "end": "1498390"
  }
]