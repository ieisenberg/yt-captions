[
  {
    "text": "okay hi and welcome everyone my name is yans I work for rad and uh I prepared",
    "start": "1840",
    "end": "8719"
  },
  {
    "text": "this presentation together with my colleague prip he can't be here today so this talk is about how we can leverage",
    "start": "8719",
    "end": "16039"
  },
  {
    "text": "confidential Computing technology to enhance the security and the resilience",
    "start": "16039",
    "end": "21600"
  },
  {
    "text": "of data and use in the kubernetes control plane so before we jump in um I'd just",
    "start": "21600",
    "end": "28519"
  },
  {
    "text": "like to get a feeling for the audience who here has heard of confidential Computing can you show your hand okay",
    "start": "28519",
    "end": "34960"
  },
  {
    "text": "who has heard of uh CER containers also quite a few and uh who",
    "start": "34960",
    "end": "40559"
  },
  {
    "text": "are sort of confidential containers oh still also a few hands",
    "start": "40559",
    "end": "45680"
  },
  {
    "text": "great so um let's jump in but let's see",
    "start": "45680",
    "end": "51520"
  },
  {
    "text": "why the control plane what it does and why it needs to be protected in the beginning um so the control plane you",
    "start": "51520",
    "end": "58680"
  },
  {
    "text": "know I think it's already in the name um it controls your cluster and if you own it you're basically root in your cluster",
    "start": "58680",
    "end": "65600"
  },
  {
    "text": "so what does it do well it does orchestrates all major cluster activities um like deploying",
    "start": "65600",
    "end": "72200"
  },
  {
    "text": "applications controlling pods and nodes scaling resources up and down so really",
    "start": "72200",
    "end": "77400"
  },
  {
    "text": "complex tasks and it also houses sensitive data um it houses secrets that",
    "start": "77400",
    "end": "84840"
  },
  {
    "text": "could be passwords or API Keys um it has state data which represents the current",
    "start": "84840",
    "end": "91320"
  },
  {
    "text": "state of the cluster and many more things that need to be protected it has",
    "start": "91320",
    "end": "96399"
  },
  {
    "text": "access control um and it also the API is the big part of it um it's the primary",
    "start": "96399",
    "end": "103560"
  },
  {
    "text": "interface through which users and external systems interact with the cluster and it receives requests for",
    "start": "103560",
    "end": "110159"
  },
  {
    "text": "operations then translates it into internal communication protocols and ensures the correct execution so it has",
    "start": "110159",
    "end": "118200"
  },
  {
    "text": "a really pivotal role really um and its security is uh of great",
    "start": "118200",
    "end": "123600"
  },
  {
    "text": "importance of course so there's a subset of control",
    "start": "123600",
    "end": "129080"
  },
  {
    "text": "components that we want to focus on here and it's those that are end user facing so we call it I call it request serving",
    "start": "129080",
    "end": "135560"
  },
  {
    "text": "control plane components and these include of course the API server but there's also others like ingros or o and",
    "start": "135560",
    "end": "142440"
  },
  {
    "text": "there then there also um kubernetes dist specific services so these components are all",
    "start": "142440",
    "end": "149000"
  },
  {
    "text": "critical because handle requests from users directly um",
    "start": "149000",
    "end": "155120"
  },
  {
    "text": "now let's take a closer look um the bottom line is we need to protect",
    "start": "155120",
    "end": "161959"
  },
  {
    "text": "those parts from unauthorized access and from manipulation so that trust can be",
    "start": "161959",
    "end": "167360"
  },
  {
    "text": "established um it's they are very exposed that's in the nature of these",
    "start": "167360",
    "end": "173000"
  },
  {
    "text": "components they need to be accessible at all times and listen for incoming requests so this Direct exposure um to",
    "start": "173000",
    "end": "182080"
  },
  {
    "text": "external entities losers and software um makes them basically the first line of defense and also a prime target for",
    "start": "182080",
    "end": "189840"
  },
  {
    "text": "potential attackers uh it has a lot of complexities like it handles a complex",
    "start": "189840",
    "end": "196000"
  },
  {
    "text": "array of operations it has to pass data it has to interpret protocols it does um",
    "start": "196000",
    "end": "201560"
  },
  {
    "text": "performs authentication and authorization checks so and the complexity of these um tasks can lead to",
    "start": "201560",
    "end": "208680"
  },
  {
    "text": "vulnerabilities especially if there are oversights in a management it hases a",
    "start": "208680",
    "end": "213799"
  },
  {
    "text": "lot of um privileged operations um and as I said it mentions",
    "start": "213799",
    "end": "219319"
  },
  {
    "text": "ites also does um rization and because of this complexity there's also a chance",
    "start": "219319",
    "end": "225480"
  },
  {
    "text": "of misconfiguration so these are just some",
    "start": "225480",
    "end": "230840"
  },
  {
    "text": "examples I think we all have seen some examples and we all know that it's not unlikely that there will be more",
    "start": "230840",
    "end": "238280"
  },
  {
    "text": "vulnerabilities so how how do we protect uh the control plan and clusters",
    "start": "238280",
    "end": "244680"
  },
  {
    "text": "in general at the moment of course there's a a large number of already existing projects and",
    "start": "244680",
    "end": "252680"
  },
  {
    "text": "practices and um best practices and methods that we apply and they are all",
    "start": "252680",
    "end": "258440"
  },
  {
    "text": "important and will not change what we propose here is just something that comes on top of that in addition to",
    "start": "258440",
    "end": "264320"
  },
  {
    "text": "existing things so want just want to add something defense and depth basic",
    "start": "264320",
    "end": "271599"
  },
  {
    "text": "so now let's take a look at how clusters are used and how it evolves often so",
    "start": "272280",
    "end": "278199"
  },
  {
    "text": "often a journey starts with a single shared cluster means shared control",
    "start": "278199",
    "end": "284320"
  },
  {
    "text": "plane and there's many good reasons to do this there's some resource efficiency cost saving um there's simple",
    "start": "284320",
    "end": "291440"
  },
  {
    "text": "Administration um there fast and easy to provision and for isolation between",
    "start": "291440",
    "end": "297880"
  },
  {
    "text": "tenants here we're looking at um soft multi-tenancy which is often enough for",
    "start": "297880",
    "end": "304199"
  },
  {
    "text": "use for many use cases but at some points more tenants join and we run out of resources or",
    "start": "304199",
    "end": "311280"
  },
  {
    "text": "maintenance becomes harder um trust changes with a growing number of tenants so you create more clusters and",
    "start": "311280",
    "end": "319000"
  },
  {
    "text": "some reason why some reasons why companies do this are for for compliance requirements um from customers or",
    "start": "319000",
    "end": "326759"
  },
  {
    "text": "projects we need more Independence more flexib ility um we need more performance more",
    "start": "326759",
    "end": "332720"
  },
  {
    "text": "resources um we need maybe predictable costs um and maybe also we need a",
    "start": "332720",
    "end": "339919"
  },
  {
    "text": "stronger isolation we to move towards more hard multi-",
    "start": "339919",
    "end": "345680"
  },
  {
    "text": "tendency and then often we end up implementing something like managed",
    "start": "345880",
    "end": "351160"
  },
  {
    "text": "control planes so in that case and there are many implementations of this um Gard",
    "start": "351160",
    "end": "357680"
  },
  {
    "text": "as one but also all major public Cloud providers that offer managed Services Implement some form of this",
    "start": "357680",
    "end": "364880"
  },
  {
    "text": "architecture and then there's also hypers shift and today I want to focus on on hypers",
    "start": "364880",
    "end": "373000"
  },
  {
    "text": "shift and now you'll say wait isn't that open shift specific um yes it is at the",
    "start": "373000",
    "end": "379400"
  },
  {
    "text": "moment you can get it to run on hypers shift but it's work in progress to make that more easy um so I will talk about",
    "start": "379400",
    "end": "386880"
  },
  {
    "text": "the example of hypers shift today um but I will what I will show is not only",
    "start": "386880",
    "end": "393400"
  },
  {
    "text": "applicable to hypers shift it's just it's a generic solution or a generic techniques that we can apply to all of",
    "start": "393400",
    "end": "400919"
  },
  {
    "text": "these different implementation and in general to kubernetes workloads kubernetes pots so it's not specific to",
    "start": "400919",
    "end": "407560"
  },
  {
    "text": "hypers shift I just use it as an example that was um easy to use for",
    "start": "407560",
    "end": "413400"
  },
  {
    "text": "me so just a brief um introduction to that this is what a classic pluster",
    "start": "413400",
    "end": "419919"
  },
  {
    "text": "looks like um you have control plane nodes and then you have a set of machine pools that's all in one",
    "start": "419919",
    "end": "426360"
  },
  {
    "text": "entity and controlled by a single team and",
    "start": "426360",
    "end": "431720"
  },
  {
    "text": "then hypers shift changes that hypershift um basically decouples the control plane from the data plane from",
    "start": "431720",
    "end": "438960"
  },
  {
    "text": "workers and also separates the networks domains and provides a shared interface",
    "start": "438960",
    "end": "444120"
  },
  {
    "text": "through which admins and sres can easily operate like a fleet of clusters",
    "start": "444120",
    "end": "449960"
  },
  {
    "text": "so now the control plane acts and behaves like any other workload the same",
    "start": "449960",
    "end": "455680"
  },
  {
    "text": "Rich stack that used to monitor secure operate your applications um can be reused for",
    "start": "455680",
    "end": "462440"
  },
  {
    "text": "managing the control plane so are many more advantes but I'll stop here this is not what the main topic is",
    "start": "462440",
    "end": "471639"
  },
  {
    "text": "um we seen transitioning to manage control plane Solutions like this can",
    "start": "471639",
    "end": "479000"
  },
  {
    "text": "bring efficiency and scalability but it also introduces additional complexity in",
    "start": "479000",
    "end": "485599"
  },
  {
    "text": "terms of security and Trust And even so the fundamental trust relationships and",
    "start": "485599",
    "end": "492199"
  },
  {
    "text": "roles they remain consistent across these different setups the ways in which",
    "start": "492199",
    "end": "497440"
  },
  {
    "text": "we need to manage and secure these setups",
    "start": "497440",
    "end": "502680"
  },
  {
    "text": "evolve so now we're going to take a closer look at how trust is established",
    "start": "502680",
    "end": "507879"
  },
  {
    "text": "and maintained and Trust relationship ships and also I also go into why um",
    "start": "507879",
    "end": "513360"
  },
  {
    "text": "technical Assurance becomes increasingly important uh in these complexer",
    "start": "513360",
    "end": "520680"
  },
  {
    "text": "environments so let's talk about trust I'm the workload owner um the cloud provider is",
    "start": "520680",
    "end": "527560"
  },
  {
    "text": "the infrastructure owner and I want to use my software in a cloud but maybe I'm hesitant but who do I have to trust",
    "start": "527560",
    "end": "533959"
  },
  {
    "text": "there's different groups it starts already in house right there's a whole bunch of teams or groups that I need to",
    "start": "533959",
    "end": "539240"
  },
  {
    "text": "trust there's admin as admins there's software production teams there's developers and more then for cloud",
    "start": "539240",
    "end": "545640"
  },
  {
    "text": "providers we have of course sres and all their other personnel and software that",
    "start": "545640",
    "end": "551440"
  },
  {
    "text": "they run to maintain their infrastructure and um their processes as well and then there's third parties um",
    "start": "551440",
    "end": "559079"
  },
  {
    "text": "other tenants maybe other container providers third party software so in a typical kubernetes",
    "start": "559079",
    "end": "567839"
  },
  {
    "text": "context um the infrastructure provider like a public cloud provider is not",
    "start": "567839",
    "end": "573720"
  },
  {
    "text": "considered a threat agent it is a trusted actor of a kubernetes",
    "start": "573720",
    "end": "579920"
  },
  {
    "text": "deployment but in a confidential Computing context that assumption no longer applies and the infrastructure",
    "start": "579920",
    "end": "587600"
  },
  {
    "text": "provider is a Potential Threat agent so confidential Computing in",
    "start": "587600",
    "end": "593720"
  },
  {
    "text": "general um and conf containers in particular it tried to protect kuber is",
    "start": "593720",
    "end": "600399"
  },
  {
    "text": "workload um from the workload owners from the infrastructure provider so any",
    "start": "600399",
    "end": "605959"
  },
  {
    "text": "software component that belongs to the infrastructure and that can also be the",
    "start": "605959",
    "end": "611519"
  },
  {
    "text": "control plane um is untrusted so there's all these different",
    "start": "611519",
    "end": "618000"
  },
  {
    "text": "groups and the question is do I have to trust them to what degree do they need",
    "start": "618000",
    "end": "624200"
  },
  {
    "text": "all this trust in order to perform that job and often the answer is",
    "start": "624200",
    "end": "630680"
  },
  {
    "text": "no same is true for um in-house all the groups that I trust um do they need this",
    "start": "630680",
    "end": "638200"
  },
  {
    "text": "to perform their job and often the answer is no and the same is true also",
    "start": "638200",
    "end": "643600"
  },
  {
    "text": "for third parties do I have to trust him to this",
    "start": "643600",
    "end": "650200"
  },
  {
    "text": "degree of the answer is no so if we take the infrastructure",
    "start": "651760",
    "end": "658600"
  },
  {
    "text": "provider as a threat agent then what are the threat",
    "start": "658600",
    "end": "663639"
  },
  {
    "text": "vectors there's container images and the infastructure provider could potentially tamper and",
    "start": "663639",
    "end": "670519"
  },
  {
    "text": "access my pot container images during storage or pull operations there's the memory",
    "start": "670519",
    "end": "677360"
  },
  {
    "text": "infrastructure provider could manipulate or access or just few the inuse memory",
    "start": "677360",
    "end": "683240"
  },
  {
    "text": "of my applications while they're running and then there also the data um",
    "start": "683240",
    "end": "689320"
  },
  {
    "text": "that are stored the infrastructure provider could also um temper with them change them",
    "start": "689320",
    "end": "696360"
  },
  {
    "text": "view them and what we want is to reduce the",
    "start": "696360",
    "end": "704279"
  },
  {
    "text": "software and the people and the processes that we have to trust and this is where confidential",
    "start": "704279",
    "end": "712160"
  },
  {
    "text": "Computing technology comes into play balls down to operational assurance",
    "start": "712160",
    "end": "719560"
  },
  {
    "text": "versus technical Assurance or as I call it here trust based and procedural Assurance versus um systemic and",
    "start": "719560",
    "end": "726360"
  },
  {
    "text": "cryptographic Assurance so one says we promise not to mess with your data and",
    "start": "726360",
    "end": "733560"
  },
  {
    "text": "the other one says we can't mess with your data one says we promise not to the",
    "start": "733560",
    "end": "739639"
  },
  {
    "text": "other one we can't and as a project that has the goal",
    "start": "739639",
    "end": "746360"
  },
  {
    "text": "of bringing confidential Computing to Cloud native workloads to kubernetes and it's called confidential",
    "start": "746360",
    "end": "754399"
  },
  {
    "text": "containers a sandboxing project in the cncf um there's a healthy and and",
    "start": "754399",
    "end": "759680"
  },
  {
    "text": "growing community of contributors from many companies there's Cloud providers",
    "start": "759680",
    "end": "766079"
  },
  {
    "text": "isvs SS companies many Hardware vendors and of course companies like rad um that",
    "start": "766079",
    "end": "774480"
  },
  {
    "text": "contribute so what does confidential container do exactly what does it",
    "start": "774680",
    "end": "782199"
  },
  {
    "text": "add it reduces The Trusted Computing trusted compute base so it's based on",
    "start": "782199",
    "end": "788480"
  },
  {
    "text": "virtualization technology and card containers remember card containers um",
    "start": "788480",
    "end": "794519"
  },
  {
    "text": "you run your container wrapped inside a lightweight VM and from the user's point of view it looks and feels like a normal",
    "start": "794519",
    "end": "803399"
  },
  {
    "text": "pot so confidential containers combines cutter containers and te is trusted",
    "start": "803399",
    "end": "809079"
  },
  {
    "text": "execution environments it means the VM that is created by K is a confidential VM and",
    "start": "809079",
    "end": "816120"
  },
  {
    "text": "that means it makes use of the te and its capabilities gas memory is encrypted and",
    "start": "816120",
    "end": "822320"
  },
  {
    "text": "it allows for remote adapation and without it workloads were",
    "start": "822320",
    "end": "829040"
  },
  {
    "text": "isolated um from each other on the same host and also my host was better isolated from malicious",
    "start": "829040",
    "end": "836480"
  },
  {
    "text": "workloads but um so when you break take out of a container you're still contained inside of ym and not on the",
    "start": "836480",
    "end": "843120"
  },
  {
    "text": "host Coco adds confidentiality it adds protection for",
    "start": "843120",
    "end": "850040"
  },
  {
    "text": "your workload from the host and the infrastructure and organization that operates",
    "start": "850040",
    "end": "856480"
  },
  {
    "text": "it so going back to our threat vectors um we talked about it these are the",
    "start": "856480",
    "end": "861639"
  },
  {
    "text": "threat vectors that the COO project tries to address uh so what are the",
    "start": "861639",
    "end": "867040"
  },
  {
    "text": "mitigations um for container images we shift the control of the of the",
    "start": "867040",
    "end": "872600"
  },
  {
    "text": "container images away from the infrastructure owner these images they",
    "start": "872600",
    "end": "878040"
  },
  {
    "text": "must either be signed or encrypted um to ensure the infrastructure owner cannot manage store",
    "start": "878040",
    "end": "885120"
  },
  {
    "text": "or pull these images only the workload itself should be capable of doing this",
    "start": "885120",
    "end": "890360"
  },
  {
    "text": "of pulling decrypting verifying and possibly storing them so storing and",
    "start": "890360",
    "end": "897160"
  },
  {
    "text": "crypted and sign images and confidential memory ensures that they remain inaccessible to the infrastructure",
    "start": "897160",
    "end": "904040"
  },
  {
    "text": "provider and by this it's mitigating threat Factor number one then there's memory um exclusive use",
    "start": "904040",
    "end": "913040"
  },
  {
    "text": "of confidential encrypted memory so the Coco model mandates that workloads run",
    "start": "913040",
    "end": "919440"
  },
  {
    "text": "only in encrypted memory and this offers Hardware level assurance that the",
    "start": "919440",
    "end": "925040"
  },
  {
    "text": "infrastructure provider cannot temper with the memory while it's in",
    "start": "925040",
    "end": "930079"
  },
  {
    "text": "use by this addressing Threat Vector number two and then that storage",
    "start": "930079",
    "end": "936040"
  },
  {
    "text": "confidential containers ensure kubernetes pot volumes are encrypted and maintain a trcy it will um not allow to",
    "start": "936040",
    "end": "944959"
  },
  {
    "text": "unprotected volumes then to be uh at a station ined secrets or they will not be",
    "start": "944959",
    "end": "950000"
  },
  {
    "text": "mounted or cread by confidential containers so and this Safeguard",
    "start": "950000",
    "end": "956240"
  },
  {
    "text": "basically ensures that we mitigate SP Threat Vector number",
    "start": "956240",
    "end": "961680"
  },
  {
    "text": "three okay let's bring it together in the first part of the talk um we talked",
    "start": "964839",
    "end": "970440"
  },
  {
    "text": "about manage control planes and we talked about the control plane itself",
    "start": "970440",
    "end": "975959"
  },
  {
    "text": "why it needs to be protected um now then we talked about confidential containers",
    "start": "975959",
    "end": "981959"
  },
  {
    "text": "and confidential Computing so now let's try and bring it together the scenario",
    "start": "981959",
    "end": "987839"
  },
  {
    "text": "is um now organizations are like increasingly adopting these models where",
    "start": "987839",
    "end": "993959"
  },
  {
    "text": "multiple kubernetes control planes are hosted on a single centralized",
    "start": "993959",
    "end": "999319"
  },
  {
    "text": "management cluster and each tenant control plane is isolated within its own name space so while the actual workload",
    "start": "999319",
    "end": "1007120"
  },
  {
    "text": "they run on separate node pools but in addition um Cloud tenants",
    "start": "1007120",
    "end": "1013759"
  },
  {
    "text": "you know they're worried about privilege misuse and malicious insiders exploits things like",
    "start": "1013759",
    "end": "1019759"
  },
  {
    "text": "this what are the risks um we've seen that managed control ples they um bring",
    "start": "1019759",
    "end": "1026760"
  },
  {
    "text": "efficiency and scalability but they also bring risk there's still cross tenant",
    "start": "1026760",
    "end": "1032038"
  },
  {
    "text": "vulnerabilities with name spaces there's uh still a Potential Threat that one tenant might access or impact um",
    "start": "1032039",
    "end": "1039400"
  },
  {
    "text": "another's resources um there's still the problem of excessive resource usage",
    "start": "1039400",
    "end": "1045160"
  },
  {
    "text": "which will affect other tenants um so what do I want as a tenant",
    "start": "1045160",
    "end": "1050720"
  },
  {
    "text": "um I want full control over my environment no matter how shared it is",
    "start": "1050720",
    "end": "1056960"
  },
  {
    "text": "um I want to feel like I'm in a private setting and of course um I want to",
    "start": "1056960",
    "end": "1062280"
  },
  {
    "text": "ensure that my control plane is the control plane that I intend to run and I want it to be security checked and its",
    "start": "1062280",
    "end": "1068799"
  },
  {
    "text": "Integrity verified so what can we do let's drill",
    "start": "1068799",
    "end": "1075400"
  },
  {
    "text": "down into uh the scenario here a little a little bit I have um a few hosted",
    "start": "1075400",
    "end": "1080880"
  },
  {
    "text": "control planes with the um consisting of the known Services running as pots in a",
    "start": "1080880",
    "end": "1086480"
  },
  {
    "text": "nam space um and we have a set of node pools where our workloads run but the",
    "start": "1086480",
    "end": "1091520"
  },
  {
    "text": "node pools they are not interesting for our example here so we concentrate just on the control plane and we pick a",
    "start": "1091520",
    "end": "1098840"
  },
  {
    "text": "component and run it as a confidential container so for that we",
    "start": "1098840",
    "end": "1104360"
  },
  {
    "text": "need um of course uh a hypers shift setup we need to um install the operator",
    "start": "1104360",
    "end": "1110320"
  },
  {
    "text": "and create the hosted clusters which create the um control planes and for",
    "start": "1110320",
    "end": "1115919"
  },
  {
    "text": "confidential containers we need uh the operator to install the operator it will deploy the runtime that we need to run",
    "start": "1115919",
    "end": "1123559"
  },
  {
    "text": "um cutter container and the configuration that turns it into confidential",
    "start": "1123559",
    "end": "1128720"
  },
  {
    "text": "containers so when we have the setup um we modify the API server as an example",
    "start": "1128720",
    "end": "1136880"
  },
  {
    "text": "and literally all all we need to do here is to add a few lines uh to the",
    "start": "1136880",
    "end": "1142480"
  },
  {
    "text": "deployment specification there's a we modified a pot template because we need",
    "start": "1142480",
    "end": "1148720"
  },
  {
    "text": "to add a runtime class and this runtime class was created when we installed the confidential",
    "start": "1148720",
    "end": "1155520"
  },
  {
    "text": "containers operator so this will guarantee that my IPI server will not run as a normal run cbas container it",
    "start": "1155520",
    "end": "1163520"
  },
  {
    "text": "will use the C container runtime and the configuration that makes it a use a",
    "start": "1163520",
    "end": "1168919"
  },
  {
    "text": "confidential VM back by the hardware te instead of a normal VM so memory",
    "start": "1168919",
    "end": "1175640"
  },
  {
    "text": "encryption guarantees the confidentiality and nobody can dump my",
    "start": "1175640",
    "end": "1180760"
  },
  {
    "text": "guest memory and and look at it um but it does not guarantee at the Integrity",
    "start": "1180760",
    "end": "1185840"
  },
  {
    "text": "of my API server I want to know that it runs the in a secure Enclave that's one and on",
    "start": "1185840",
    "end": "1193200"
  },
  {
    "text": "top I want to know that it's exactly the API server unchanged and not temp but",
    "start": "1193200",
    "end": "1198480"
  },
  {
    "text": "with that I need to run so how would that work this is where the adastation part",
    "start": "1198480",
    "end": "1205760"
  },
  {
    "text": "comes in so there are different ways to achieve this one is that we store a",
    "start": "1205760",
    "end": "1211840"
  },
  {
    "text": "signature in the KBS component which is controlled by the user not the cloud provider or an admin it's by me and I",
    "start": "1211840",
    "end": "1220159"
  },
  {
    "text": "configured confidential containers in a way that it connects to my KBS during the attestation",
    "start": "1220159",
    "end": "1226240"
  },
  {
    "text": "process so we use the KBS and adastation service to run the adastation process",
    "start": "1226240",
    "end": "1232159"
  },
  {
    "text": "for my API server and only after successful adastation um that is we",
    "start": "1232159",
    "end": "1237440"
  },
  {
    "text": "verified the things that I just mentioned it will start up if this",
    "start": "1237440",
    "end": "1242919"
  },
  {
    "text": "adapation process fails my container will not even start up if it fails it",
    "start": "1242919",
    "end": "1248480"
  },
  {
    "text": "won't even run and this is how I know that something is not",
    "start": "1248480",
    "end": "1253760"
  },
  {
    "text": "right so if setation attestation was successful and uh my components are",
    "start": "1253760",
    "end": "1259960"
  },
  {
    "text": "started they will run and they will run in the secure Enclave in my confidential container backed by the hardware C where",
    "start": "1259960",
    "end": "1267039"
  },
  {
    "text": "memory is encrypted so this is the full um",
    "start": "1267039",
    "end": "1273840"
  },
  {
    "text": "confidential container adapation workflow I will not go into full detail",
    "start": "1273840",
    "end": "1279440"
  },
  {
    "text": "here um because we still have want to show a demo a short demo um but if you",
    "start": "1279440",
    "end": "1286200"
  },
  {
    "text": "have question around this um I have lots of additional information in the slides",
    "start": "1286200",
    "end": "1291360"
  },
  {
    "text": "we have a whole series of blocks around how this works especially for confidential containers and how we got",
    "start": "1291360",
    "end": "1298000"
  },
  {
    "text": "here um you can find all of this information in the",
    "start": "1298000",
    "end": "1302799"
  },
  {
    "text": "slides so now it's time for",
    "start": "1304080",
    "end": "1309360"
  },
  {
    "text": "demo",
    "start": "1317039",
    "end": "1320039"
  },
  {
    "text": "so I have my setup installed I have created a hosted cluster with my hypershift setup and in it I see the",
    "start": "1326000",
    "end": "1334600"
  },
  {
    "text": "control plane components running as pots so here we see a list of all of them and",
    "start": "1334600",
    "end": "1341640"
  },
  {
    "text": "we find the API server here it is and",
    "start": "1341640",
    "end": "1346960"
  },
  {
    "text": "now I'm going to show the runtime classes you can't see it so there's two",
    "start": "1346960",
    "end": "1354919"
  },
  {
    "text": "runtime glasses um that's",
    "start": "1354919",
    "end": "1361720"
  },
  {
    "text": "kada and C remote um and now I open the",
    "start": "1362440",
    "end": "1368159"
  },
  {
    "text": "deployment and I go to the P template and I add the runtime",
    "start": "1368159",
    "end": "1374240"
  },
  {
    "text": "class so here you can see um we're adding runtime class name this Carter remotes",
    "start": "1375279",
    "end": "1381279"
  },
  {
    "text": "you see for confidential containers instead of a normal cter",
    "start": "1381279",
    "end": "1387240"
  },
  {
    "text": "container and I close it and my API server restarts as a confidential",
    "start": "1387960",
    "end": "1395039"
  },
  {
    "text": "container so this is",
    "start": "1395039",
    "end": "1399720"
  },
  {
    "text": "unfortunate no okay here I show um all the parts",
    "start": "1402559",
    "end": "1408559"
  },
  {
    "text": "that used the runtime class name and um you can see that it's the",
    "start": "1408559",
    "end": "1415600"
  },
  {
    "text": "API server and uh the rest is the runtime class",
    "start": "1415600",
    "end": "1422240"
  },
  {
    "text": "name so now I mentioned the KBS that I need to run before um that as part of",
    "start": "1422240",
    "end": "1430120"
  },
  {
    "text": "the adastation um this I have running somewhere else that's on my control this",
    "start": "1430120",
    "end": "1435600"
  },
  {
    "text": "is the pot I deployed this while another operator um it's running here and",
    "start": "1435600",
    "end": "1442440"
  },
  {
    "text": "now I need to stop I think um my API server has already restarted and it has",
    "start": "1442440",
    "end": "1449159"
  },
  {
    "text": "already um gone through the adapation process um so now we'll show just a um",
    "start": "1449159",
    "end": "1457000"
  },
  {
    "text": "look at the locks and see uh what",
    "start": "1457000",
    "end": "1461360"
  },
  {
    "text": "happened so this is um basically what happens here um",
    "start": "1463279",
    "end": "1468840"
  },
  {
    "text": "attestation means it sends a request first then it gets a challenge as a",
    "start": "1468840",
    "end": "1475600"
  },
  {
    "text": "response and then the attestation happens on the Node where my container",
    "start": "1475600",
    "end": "1481440"
  },
  {
    "text": "runs basically the attestation agent requests the evidence from the hardw by",
    "start": "1481440",
    "end": "1487880"
  },
  {
    "text": "performing uh executing this command and requesting the evidence and the evidence basically",
    "start": "1487880",
    "end": "1495640"
  },
  {
    "text": "states that it's running in a secure enclave and a confidential",
    "start": "1495640",
    "end": "1500840"
  },
  {
    "text": "VM and I can see here that it returns",
    "start": "1500840",
    "end": "1506200"
  },
  {
    "text": "um uh uh a a response um including the evidence and",
    "start": "1506200",
    "end": "1512880"
  },
  {
    "text": "uh a key that's signed and",
    "start": "1512880",
    "end": "1518039"
  },
  {
    "text": "um yeah here I see that it Returns the key so in this case my container was not",
    "start": "1518039",
    "end": "1524399"
  },
  {
    "text": "just signed it was um encrypted and I got the decryption key to decrypt the",
    "start": "1524399",
    "end": "1530320"
  },
  {
    "text": "container image before it starts before it starts",
    "start": "1530320",
    "end": "1535639"
  },
  {
    "text": "running and I think this is the end of my",
    "start": "1537600",
    "end": "1543120"
  },
  {
    "text": "demo hope I've seen that",
    "start": "1554760",
    "end": "1559960"
  },
  {
    "text": "already so future work um of course this was just a a proof of concept uh a demo",
    "start": "1561200",
    "end": "1568520"
  },
  {
    "text": "um this needs to be integrated into hypers shift so that when I deploy my",
    "start": "1568520",
    "end": "1573720"
  },
  {
    "text": "setup I can configure it in a way maybe I can tell which components I want to run as confidential containers um so",
    "start": "1573720",
    "end": "1581360"
  },
  {
    "text": "basically needs integration with the tooling what I've showed in the demo was um you wouldn't do that uh eventually it",
    "start": "1581360",
    "end": "1588159"
  },
  {
    "text": "would we would um integrate it into the typers shift tooling so that um you can configure it when you create your",
    "start": "1588159",
    "end": "1594360"
  },
  {
    "text": "hostage control planes what components do you want to run as confidential containers and where would it connect to",
    "start": "1594360",
    "end": "1601240"
  },
  {
    "text": "and things like this so there's still work to done uh work to be done and also",
    "start": "1601240",
    "end": "1606320"
  },
  {
    "text": "for the Copo project in general there's um also lots of interesting open",
    "start": "1606320",
    "end": "1611919"
  },
  {
    "text": "problems to work on um I've listed also some in the slides some of the more interesting ones um but in general um if",
    "start": "1611919",
    "end": "1620320"
  },
  {
    "text": "you're interested in a space this is a very open and welcoming Community um I've also added links to our community",
    "start": "1620320",
    "end": "1626600"
  },
  {
    "text": "meeting or come talk to me uh after the talk um we are looking for more people",
    "start": "1626600",
    "end": "1632440"
  },
  {
    "text": "and contributors so yeah these are some of the things um that I wanted to share",
    "start": "1632440",
    "end": "1639360"
  },
  {
    "text": "I'll just leave them in the slides um I just wanted to mention um this is our GitHub we have a slack channel in",
    "start": "1639360",
    "end": "1645840"
  },
  {
    "text": "cncf um we have a new release coming out soon um and we have a weekly meeting",
    "start": "1645840",
    "end": "1653399"
  },
  {
    "text": "where we discuss technical topics and release topics but usually we have every",
    "start": "1653399",
    "end": "1658760"
  },
  {
    "text": "week one uh interesting technical presentation from someone that is a",
    "start": "1658760",
    "end": "1664200"
  },
  {
    "text": "specialist in one of the fields and then um I wanted to make you",
    "start": "1664200",
    "end": "1669360"
  },
  {
    "text": "aware of um our blogs that we published um we published a whole series of blogs not just about adapation but also",
    "start": "1669360",
    "end": "1676440"
  },
  {
    "text": "introductory blogs um blogs documenting use cases and demos that we did um we've also shown some",
    "start": "1676440",
    "end": "1684840"
  },
  {
    "text": "demos that at a boost at the redard Boost here um I can also demonstrate",
    "start": "1684840",
    "end": "1689960"
  },
  {
    "text": "them for you if you approach me um we've shown for example workloads that protect",
    "start": "1689960",
    "end": "1695440"
  },
  {
    "text": "um an AI model in a public Cloud um using an in Asia in this example um one",
    "start": "1695440",
    "end": "1704039"
  },
  {
    "text": "was on TDX hardware and the other one other themed was um together with the startup and crypt AI they um offer the",
    "start": "1704039",
    "end": "1713200"
  },
  {
    "text": "protection for AI models um but they use homomorphic encryption and we've shown a demo where they add confidential",
    "start": "1713200",
    "end": "1720440"
  },
  {
    "text": "containers to the mix to protect a part of their setup um also there's some other",
    "start": "1720440",
    "end": "1726760"
  },
  {
    "text": "relevant talks if you're interested in this topic um there exp go into more",
    "start": "1726760",
    "end": "1733000"
  },
  {
    "text": "detail into more technical detail of some parts of this um um there was one",
    "start": "1733000",
    "end": "1738159"
  },
  {
    "text": "from last cucon from jum puosi who goes more into the adastation details how that works more uh in detail from the",
    "start": "1738159",
    "end": "1745919"
  },
  {
    "text": "kernel side of things from the hardware side of things um there's also like more introduction talk on how to deploy",
    "start": "1745919",
    "end": "1753440"
  },
  {
    "text": "confidential containers by Fabiano feno from the kada project and myself um and",
    "start": "1753440",
    "end": "1759919"
  },
  {
    "text": "then there's also uh previous talks um that were interesting the last one five",
    "start": "1759919",
    "end": "1765960"
  },
  {
    "text": "big problems was from last KVM Forum where Kristoff talks about like the current five biggest problems that we're",
    "start": "1765960",
    "end": "1773519"
  },
  {
    "text": "still trying to",
    "start": "1773519",
    "end": "1776279"
  },
  {
    "text": "address with this I'm at the end of my talk if you have questions thank",
    "start": "1778880",
    "end": "1786760"
  },
  {
    "text": "you there are questions please come up to the mic so that uh it will be on recording and I can hear",
    "start": "1787279",
    "end": "1794960"
  },
  {
    "text": "you",
    "start": "1796320",
    "end": "1799320"
  },
  {
    "text": "hey um so in a cloud hosted uh control",
    "start": "1802120",
    "end": "1807600"
  },
  {
    "text": "plane you're trying to uh basically verify that the the API server and stuff",
    "start": "1807600",
    "end": "1812919"
  },
  {
    "text": "are are as you expect how can you trust that the cloud provider has installed the right version of uh confidential",
    "start": "1812919",
    "end": "1818360"
  },
  {
    "text": "containers and all of that uh and the runtime and all of that in order to even have it validate um when you actually go",
    "start": "1818360",
    "end": "1824559"
  },
  {
    "text": "to uh relaunch the API server like where do you where do you start this whole process okay um so that's part of the",
    "start": "1824559",
    "end": "1832840"
  },
  {
    "text": "Coco model is that you don't trust the um the uh all the components that are",
    "start": "1832840",
    "end": "1839240"
  },
  {
    "text": "outside of the virtual machine so you don't it's part of the concept that you don't whatever they install if they",
    "start": "1839240",
    "end": "1846200"
  },
  {
    "text": "install something that um was tempered with um it will most likely your",
    "start": "1846200",
    "end": "1851960"
  },
  {
    "text": "container will not start up um because if they fake the evidence or if they say",
    "start": "1851960",
    "end": "1858240"
  },
  {
    "text": "um temper something in between um the KPS part is in your um in your control",
    "start": "1858240",
    "end": "1865720"
  },
  {
    "text": "so where the where you check the evidence and basically verify it but you could decide to also let that let an",
    "start": "1865720",
    "end": "1873960"
  },
  {
    "text": "attestation service do that um but the point is that part is on your control that that attestation is coming",
    "start": "1873960",
    "end": "1881200"
  },
  {
    "text": "from the um the runtime back to the the um the KDs the KBs yes so the adapation",
    "start": "1881200",
    "end": "1889480"
  },
  {
    "text": "evidence basically um comes from the hardware where your container is running",
    "start": "1889480",
    "end": "1896120"
  },
  {
    "text": "so once you once it uh you send a request to the KBS it needs to",
    "start": "1896120",
    "end": "1901399"
  },
  {
    "text": "authenticate itself and it sends a challenge uh with a NS and then um a",
    "start": "1901399",
    "end": "1907399"
  },
  {
    "text": "component that runs on the Node as part of the VM where your container runs um",
    "start": "1907399",
    "end": "1913399"
  },
  {
    "text": "that's uh basically just collecting the evidence by requesting it from the",
    "start": "1913399",
    "end": "1918679"
  },
  {
    "text": "hardware and then um to run that uh that broker service somewhere would you in",
    "start": "1918679",
    "end": "1925720"
  },
  {
    "text": "order to get this whole thing started would you want to run that somewhere else like locally or something in order",
    "start": "1925720",
    "end": "1930760"
  },
  {
    "text": "to get an environment that you can have all the the validation in and then move the broker service to that environment",
    "start": "1930760",
    "end": "1937639"
  },
  {
    "text": "and then kind of propagate out that way yes that's that's a very a valid deployment model and you you can take",
    "start": "1937639",
    "end": "1944720"
  },
  {
    "text": "this wherever you want how how how much caution you need or what your use case is um depending on how paranoid you are",
    "start": "1944720",
    "end": "1952240"
  },
  {
    "text": "you can um run more or less on yourself you can also use cloud provider um",
    "start": "1952240",
    "end": "1958960"
  },
  {
    "text": "adapation Services um if you want if that's enough for you basically um and",
    "start": "1958960",
    "end": "1966799"
  },
  {
    "text": "they they can also run their services in confidential um VMS for example thank",
    "start": "1966799",
    "end": "1972960"
  },
  {
    "text": "you okay any other",
    "start": "1972960",
    "end": "1978720"
  },
  {
    "text": "questions okay thank you very much",
    "start": "1978720",
    "end": "1984760"
  }
]