[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "so I'm gonna talk today about the kubernetes resource model and its ecosystem this was an immediate track",
    "start": "30",
    "end": "5790"
  },
  {
    "text": "but I kinda wanted this feel when do a lot of audiences I'm not sure where people are at how many people have heard of a CRD have some idea what it is okay",
    "start": "5790",
    "end": "13620"
  },
  {
    "text": "like everybody so I'll go fast over that power who's heard the term krm COO Bernays resource model some of you less",
    "start": "13620",
    "end": "20640"
  },
  {
    "text": "okay so that won't bore you so kubernetes api is is the term I like",
    "start": "20640",
    "end": "26580"
  },
  {
    "start": "22000",
    "end": "63000"
  },
  {
    "text": "to use to refer to like the ones that come with kubernetes they're document on Q&A at i/o there in the kubernetes",
    "start": "26580",
    "end": "32189"
  },
  {
    "text": "release they're about containers they're things like pod and service a distinction from that as the COO Rene's",
    "start": "32189",
    "end": "38399"
  },
  {
    "text": "resource model it's not an API it's a pattern for API is to follow it doesn't",
    "start": "38399",
    "end": "46440"
  },
  {
    "text": "mean that API has to have any do with containers if it has a bunch of attributes the pattern which I'll talk about in a second so an example of an",
    "start": "46440",
    "end": "52559"
  },
  {
    "text": "attribute of the KRM pattern is that the body of a post is also a file format",
    "start": "52559",
    "end": "59309"
  },
  {
    "text": "that you use to store things on the client side and all this some others in a second so I use a term model and",
    "start": "59309",
    "end": "67170"
  },
  {
    "start": "63000",
    "end": "170000"
  },
  {
    "text": "framework and patterns so let me explain what those mean to me a model is something that a bunch of api's have in",
    "start": "67170",
    "end": "73590"
  },
  {
    "text": "common it could mean the wire format or headers that are required or other things rest is an API model that most",
    "start": "73590",
    "end": "80850"
  },
  {
    "text": "people have heard of I don't say that kubernetes perfectly follows the rest model like it doesn't use links for",
    "start": "80850",
    "end": "88110"
  },
  {
    "text": "everything or link relations framework is a term I mean to use like libraries",
    "start": "88110",
    "end": "93810"
  },
  {
    "text": "or tools or like meta api's or API services IDL's to help you create things",
    "start": "93810",
    "end": "100920"
  },
  {
    "text": "that follow the model is not necessarily required but it help them helps a lot if",
    "start": "100920",
    "end": "106860"
  },
  {
    "text": "you're going to use a REST API you might use flask as a library to help you fork a api's I like to use cube builder could",
    "start": "106860",
    "end": "114299"
  },
  {
    "text": "be other uses see RDS you don't have to use CRTs but you should and then finally",
    "start": "114299",
    "end": "119700"
  },
  {
    "text": "a pattern is something that tends to emerge is a good way to do things it's not something that every API uses within",
    "start": "119700",
    "end": "126149"
  },
  {
    "text": "the model but it's that a lot of API is in the model use it so if you search for rest patterns on Google you're going to",
    "start": "126149",
    "end": "131819"
  },
  {
    "text": "find a lot of hits if you search for G RPC patterns the RPC is another model and you're gonna get an",
    "start": "131819",
    "end": "138790"
  },
  {
    "text": "official G RPC guide with like a list of like 20 patterns it's really good by the way I will post the most updated slides",
    "start": "138790",
    "end": "146049"
  },
  {
    "text": "that you know later today so don't feel you how to photograph everything but to",
    "start": "146049",
    "end": "151239"
  },
  {
    "text": "feel free to if you want to if you search for krm or kubernetes api patterns you basically will get almost",
    "start": "151239",
    "end": "157840"
  },
  {
    "text": "no useful hits so that's something I'd like to solve for us as a community and only this talk is like a beginning and",
    "start": "157840",
    "end": "163989"
  },
  {
    "text": "we can have a conversation about whether these patterns make sense and document them and collect more so like what are",
    "start": "163989",
    "end": "172599"
  },
  {
    "start": "170000",
    "end": "236000"
  },
  {
    "text": "some common attributes for care api's mostly you know this but I'm gonna recapitulate this for people that maybe",
    "start": "172599",
    "end": "177849"
  },
  {
    "text": "are are new to this they all share one at least one CLI they can interact with them coop CTL they all have metadata",
    "start": "177849",
    "end": "184810"
  },
  {
    "text": "like labels and annotations they all share one state storage which means the API implementation is stateless and",
    "start": "184810",
    "end": "191709"
  },
  {
    "text": "somebody else gets to worry about the backup they all share a common authentication authorization audit",
    "start": "191709",
    "end": "198639"
  },
  {
    "text": "logging model they share a consistency model for better or for worse of you all don't like eventual consistency but at least the consistent",
    "start": "198639",
    "end": "205810"
  },
  {
    "text": "it's consistently expecting it sets expectations they all share that least",
    "start": "205810",
    "end": "212470"
  },
  {
    "text": "dynamic clients in some languages they have schema reflection that can help ID ease help people edit the client-side",
    "start": "212470",
    "end": "220780"
  },
  {
    "text": "documents in the future apply on the server side is gonna apply to everything in this ecosystem there's a growing",
    "start": "220780",
    "end": "227829"
  },
  {
    "text": "ecosystem of clients like configuration tools whether use customized or helm charts or something to template eyes or",
    "start": "227829",
    "end": "234609"
  },
  {
    "text": "edit your configuration so one thing I noticed as I was looking at sort of all",
    "start": "234609",
    "end": "241000"
  },
  {
    "text": "the chemi api's out there is that CS CF uses them a lot identified 18 projects",
    "start": "241000",
    "end": "246220"
  },
  {
    "text": "that are somewhere in CNCs support folio and I highlighted those in a solid line",
    "start": "246220",
    "end": "251470"
  },
  {
    "text": "circle and all those use km in their core project and then there's another six that they don't actually use Karen",
    "start": "251470",
    "end": "260500"
  },
  {
    "text": "in the core project but there's like a well supported you know operator or some other third-party project that's",
    "start": "260500",
    "end": "266500"
  },
  {
    "text": "supporting that with km prometheus I would say is a great example is a chorus prometheus operator people I know that",
    "start": "266500",
    "end": "273190"
  },
  {
    "text": "run huge for me these installations that have deep experience and definitely recommend you use that and they use it",
    "start": "273190",
    "end": "279400"
  },
  {
    "text": "for themselves in production so overall there's like 136 types just among CN CF projects so you can see how kerim has",
    "start": "279400",
    "end": "286540"
  },
  {
    "text": "just sort of without anyone intending it as bringing a level of consistency to this whole portfolio in fact you could",
    "start": "286540",
    "end": "293710"
  },
  {
    "text": "say that I'd say half of the projects in the portfolio share this API model I",
    "start": "293710",
    "end": "300610"
  },
  {
    "text": "want to as an aside I want to say that like I mentioned G RPC is a different model and GRP see is a CNCs project and",
    "start": "300610",
    "end": "307780"
  },
  {
    "text": "I viewed G RPC as complementary to krm G RPC is flexible it's great for",
    "start": "307780",
    "end": "314890"
  },
  {
    "text": "imperative programming it's great for high bandwidth this high efficiency it doesn't have quite as many opinions",
    "start": "314890",
    "end": "320290"
  },
  {
    "text": "I think kerim is great for declaring infrastructure it unlike GRDC it models",
    "start": "320290",
    "end": "325450"
  },
  {
    "text": "the reconciliation loop sort of as part of its model as opposed to not making",
    "start": "325450",
    "end": "330970"
  },
  {
    "text": "any assumptions about that so I hear some other projects and you weren't aware of how broad the ecosystem is",
    "start": "330970",
    "end": "337120"
  },
  {
    "start": "332000",
    "end": "354000"
  },
  {
    "text": "these are all things that have more than 500 stars on github that use krm it's certainly not an exhaustive list what I",
    "start": "337120",
    "end": "343120"
  },
  {
    "text": "wanted to bring out is like there's a lot of things here that are not about containers and within each category there's like lots of good options these",
    "start": "343120",
    "end": "349660"
  },
  {
    "text": "are just a sampling for some of these so",
    "start": "349660",
    "end": "355450"
  },
  {
    "text": "I've been working on kubernetes project since nearly the beginning as Paul suggested and I see him really rapid",
    "start": "355450",
    "end": "360700"
  },
  {
    "text": "growth the project overall and I've seen the api's as well grow really rapidly at",
    "start": "360700",
    "end": "365710"
  },
  {
    "text": "the beginning of the project I wrote some api's that are in the core and then I moved to doing API reviews I don't do",
    "start": "365710",
    "end": "371620"
  },
  {
    "text": "that anymore I it's like there's too many to review Jordan thank you very much for for staying on those I moved on",
    "start": "371620",
    "end": "378040"
  },
  {
    "text": "to trying to help teams within my company build km API sort of consulting and even that has like stopped scaling",
    "start": "378040",
    "end": "384400"
  },
  {
    "text": "and all units I think in scale is documentation and frameworks and and I",
    "start": "384400",
    "end": "390669"
  },
  {
    "text": "recently I did something which I've done a few times in my career which I think is good and has helped me a lot is I",
    "start": "390669",
    "end": "396669"
  },
  {
    "text": "take off my engineer hat where you're trying to sort of say how things and I put on my Naturals hat which is",
    "start": "396669",
    "end": "402369"
  },
  {
    "text": "more let's just look at all the things that exist out in nature a natural so if",
    "start": "402369",
    "end": "407919"
  },
  {
    "text": "you don't know like a scientist who collects and classifies things maybe seashells so let me describe my time as",
    "start": "407919",
    "end": "413619"
  },
  {
    "text": "a naturalist in the kubernetes or km ecosystem so this was like several",
    "start": "413619",
    "end": "419020"
  },
  {
    "start": "417000",
    "end": "439000"
  },
  {
    "text": "centuries ago you were a naturalist there was no place you could go that had a collection of all the shells so you",
    "start": "419020",
    "end": "424839"
  },
  {
    "text": "would have to go find a beach and walk along and pick up everything looks like a shell and you might count them then",
    "start": "424839",
    "end": "430419"
  },
  {
    "text": "you might throw away some rocks you might try to sort them and guess what species they are and look for patterns across species and that's basically what",
    "start": "430419",
    "end": "437529"
  },
  {
    "text": "I set aside some time to do so there's not a list of all the KPIs but there's a",
    "start": "437529",
    "end": "443649"
  },
  {
    "start": "439000",
    "end": "532000"
  },
  {
    "text": "lot of stuff on github so what I did was search github for every file that looks like it might be having to do with krm",
    "start": "443649",
    "end": "451529"
  },
  {
    "text": "that included yeah no files and go files and JSON files and I won't go into depth",
    "start": "451529",
    "end": "456759"
  },
  {
    "text": "but I figured out if you just look at the PMO files you pretty much get a picture of like 90% of all the things",
    "start": "456759",
    "end": "462039"
  },
  {
    "text": "that are in the Karem ecosystem so I'm going to focus on that for today it's nice because I can parse it and",
    "start": "462039",
    "end": "467439"
  },
  {
    "text": "understand the you know structure within there so I downloaded all of them put",
    "start": "467439",
    "end": "474099"
  },
  {
    "text": "them in a database kind of clean the data got rid of duplicated files right",
    "start": "474099",
    "end": "479619"
  },
  {
    "text": "some people have copied stuff github tries to get rid of Forks but you still",
    "start": "479619",
    "end": "484809"
  },
  {
    "text": "end up with a lot of duplicates conveniently unlike an actual list like the things are labeled with their genus",
    "start": "484809",
    "end": "490839"
  },
  {
    "text": "and species right they have an API group name which is a unique domain and a kind or which I call it type name so I do",
    "start": "490839",
    "end": "497889"
  },
  {
    "text": "this in October it took a while to get this data because github like doesn't want you just search everything and they have all this DDoS protections but I",
    "start": "497889",
    "end": "504399"
  },
  {
    "text": "ended up with like 27,000 EML files and then you sort of those have like",
    "start": "504399",
    "end": "509889"
  },
  {
    "text": "different documents in so you break those I began a bunch of objects and this the end it was 67,000 CR DS there's",
    "start": "509889",
    "end": "516130"
  },
  {
    "text": "some duplication there you went all that down figure out this stuff that's not possible and I found that there are 50",
    "start": "516130",
    "end": "522189"
  },
  {
    "text": "6005 as of mid-october KRM types that are defined somewhere and those are all",
    "start": "522189",
    "end": "530260"
  },
  {
    "text": "different groups and kinds so I done a similar search this like two",
    "start": "530260",
    "end": "535280"
  },
  {
    "start": "532000",
    "end": "630000"
  },
  {
    "text": "years ago so I was I knew that 56,000 was a lot and there was significant growth but I wanted to like understand",
    "start": "535280",
    "end": "540920"
  },
  {
    "text": "the growth trends a little bit better so it's pretty impractical and not a good use of my time to try to figure out like",
    "start": "540920",
    "end": "547280"
  },
  {
    "text": "the for every single revision like what was the first revision where that CRT appeared and what date was that like",
    "start": "547280",
    "end": "553460"
  },
  {
    "text": "that's not practical what I could do was associate all the CRTs with you know",
    "start": "553460",
    "end": "558710"
  },
  {
    "text": "when the repo was created which is sort of a proxy for when somebody created that that resource and so I can graph",
    "start": "558710",
    "end": "565250"
  },
  {
    "text": "that over time there's you know it's a little bit funky because you see stuff before CRTs were introduced so there's",
    "start": "565250",
    "end": "571760"
  },
  {
    "text": "some there's some noise in this method but you also some big spikes those are real that was one project called cube",
    "start": "571760",
    "end": "577790"
  },
  {
    "text": "form over on the right they entered they created a repo and it has like more than a thousand types in it so that kind of",
    "start": "577790",
    "end": "585050"
  },
  {
    "text": "figure it's not fair to like count those guys is one thing and really what's more interesting is how many independent",
    "start": "585050",
    "end": "590510"
  },
  {
    "text": "groups are building things so I decided just to focus on API groups for this",
    "start": "590510",
    "end": "595550"
  },
  {
    "text": "graph and you can still see this really steady trend of new API groups showing up on github so if you extrapolate and",
    "start": "595550",
    "end": "604250"
  },
  {
    "text": "say well we got past the exponential phase and it's just linear for the last year I still extrapolate a thousand new",
    "start": "604250",
    "end": "611210"
  },
  {
    "text": "API groups will be created in the next year so that's great more things for us to you know configure along with our",
    "start": "611210",
    "end": "618590"
  },
  {
    "text": "kubernetes clusters but it's also a chance to influence the next group of people that build an API so how can we",
    "start": "618590",
    "end": "626840"
  },
  {
    "text": "provide good advice and support and tooling to those folks so I'm clearly",
    "start": "626840",
    "end": "632780"
  },
  {
    "start": "630000",
    "end": "813000"
  },
  {
    "text": "one way we're keeping API is consistent so far is through frameworks through C RDS through things like controller",
    "start": "632780",
    "end": "639170"
  },
  {
    "text": "runtime so definitely we should look back and say like what frameworks are people actually using in the wild what",
    "start": "639170",
    "end": "645680"
  },
  {
    "text": "do we build and do they like it and I'm not sure I can tell you why they like the things they didn't like but but I'll tell you the numbers of what got used",
    "start": "645680",
    "end": "653770"
  },
  {
    "text": "like I'll say it first like you don't have to use a CRT to make a kubernetes",
    "start": "653770",
    "end": "659390"
  },
  {
    "text": "api you can write it in scratch I don't recommend doing that you can use something called extension API servers",
    "start": "659390",
    "end": "664400"
  },
  {
    "text": "or aggregated API servers I don't recommend you do that but you can around early 2017 the community was",
    "start": "664400",
    "end": "673640"
  },
  {
    "text": "trying to decide like we had invested heavily in aggregation and in extension API servers and they thought this was",
    "start": "673640",
    "end": "678890"
  },
  {
    "text": "the most flexible way to build new api's and I kind of said wait a second that's",
    "start": "678890",
    "end": "683900"
  },
  {
    "text": "really hard isn't it better if more people come to the ecosystem even if they don't build api's that are quite as",
    "start": "683900",
    "end": "690140"
  },
  {
    "text": "full featured as we want them to be let's focus on T PRS which became CR DS",
    "start": "690140",
    "end": "695330"
  },
  {
    "text": "and so I think that at least I was part of the conversation that shifted the community effort there I think it was",
    "start": "695330",
    "end": "701060"
  },
  {
    "text": "the right call because looking back as a hundred times more see RDS and there are extension API servers that basically",
    "start": "701060",
    "end": "707300"
  },
  {
    "text": "grew not at all over the last two years and CR DS have just gone gone vertical",
    "start": "707300",
    "end": "712960"
  },
  {
    "text": "so where was I",
    "start": "712960",
    "end": "719410"
  },
  {
    "text": "a lot of things are optional for CRTs at least in v1 beta one validation is",
    "start": "721070",
    "end": "726080"
  },
  {
    "text": "optional it's sort of required in v1 but let's talk about what you can you know use in in your clusters today i'm i",
    "start": "726080",
    "end": "733310"
  },
  {
    "text": "should mention CR DS went v 1 in 116 if you didn't hear that so that's kind of a good chance to reflect back on them but",
    "start": "733310",
    "end": "740480"
  },
  {
    "text": "60% of all the CR days at github use some validation they have some kind of scheme at least telling you if this is",
    "start": "740480",
    "end": "746360"
  },
  {
    "text": "not like just curly braces or like in the no schema it's like some properties are listed so I think that's fantastic",
    "start": "746360",
    "end": "753650"
  },
  {
    "text": "adoption for something that didn't come out at the beginning additional printer columns is kind of one of my favorite",
    "start": "753650",
    "end": "759800"
  },
  {
    "text": "things it means that just means that when you coop CTL get some type name",
    "start": "759800",
    "end": "764990"
  },
  {
    "text": "that you get columns other than like the creation time in the name which is kind of boring but you get columns that were",
    "start": "764990",
    "end": "771500"
  },
  {
    "text": "picked by the author I highly recommend that by the way if you're building a CRT status sub resource I'm really happy",
    "start": "771500",
    "end": "777800"
  },
  {
    "text": "that people are following the status pattern I think it's not used enough in the core but people are adopting it well",
    "start": "777800",
    "end": "783710"
  },
  {
    "text": "for CR DS and Conditions that's an area I think we could work to sort of tell",
    "start": "783710",
    "end": "789740"
  },
  {
    "text": "people like whether they should use those how to use them or not scale sub",
    "start": "789740",
    "end": "794780"
  },
  {
    "text": "resource surprised me like no one basically uses scale and it seems like it's just as easy to use a status but",
    "start": "794780",
    "end": "800600"
  },
  {
    "text": "only 1% of the CRTs I could find define scale and so I think maybe that's",
    "start": "800600",
    "end": "806780"
  },
  {
    "text": "because not everything needs to be scaled or if it needs to be scaled it needs like more than one dimension but",
    "start": "806780",
    "end": "812930"
  },
  {
    "text": "that's something to reflect on ok so I kind of talked about where we are in the",
    "start": "812930",
    "end": "818710"
  },
  {
    "start": "813000",
    "end": "830000"
  },
  {
    "text": "what ecosystems like let me try to talk about some patterns by the way if you",
    "start": "818710",
    "end": "824030"
  },
  {
    "text": "see this pattern on shell don't pick it up it's poisonous",
    "start": "824030",
    "end": "828400"
  },
  {
    "start": "830000",
    "end": "907000"
  },
  {
    "text": "so I'm gonna talk about two different patterns the first one that I'd like to promote the idea of is a controller",
    "start": "831880",
    "end": "838029"
  },
  {
    "text": "pattern this is less about like what the schema is this is about what does the controller do and so the first",
    "start": "838029",
    "end": "844240"
  },
  {
    "text": "bifurcation I make is between controllers that create some kind of resource and controllers that don't",
    "start": "844240",
    "end": "849370"
  },
  {
    "text": "create resources but maybe they make something to resources so on the create resources side if it creates a krm",
    "start": "849370",
    "end": "857310"
  },
  {
    "text": "resource I call that a comp composite and I'll explain why I think that's",
    "start": "857310",
    "end": "862329"
  },
  {
    "text": "different from the other option which is where it makes a non care and resource for you like that could be a cloud",
    "start": "862329",
    "end": "868149"
  },
  {
    "text": "provider resource I call that second one a provision or on the other branch things that don't actually manage",
    "start": "868149",
    "end": "874660"
  },
  {
    "text": "resource lifetime one branch is where they act on requests I call that a",
    "start": "874660",
    "end": "879819"
  },
  {
    "text": "enforcer that's kind of a shorter way to say like mutating or validating admission webhook",
    "start": "879819",
    "end": "886329"
  },
  {
    "text": "which i think is kind of a mouthful the other option is where they act continue those like grab synchronously the",
    "start": "886329",
    "end": "893319"
  },
  {
    "text": "request when you try to make something or mute or to update it but they don't",
    "start": "893319",
    "end": "898720"
  },
  {
    "text": "do anything if it's the things just they're in steady state if you want to act on something in steady state i call that a governor pattern and it's",
    "start": "898720",
    "end": "904750"
  },
  {
    "text": "actually quite different to implement so let me go over each of those pretty quickly prisoner pattern is really",
    "start": "904750",
    "end": "912399"
  },
  {
    "start": "907000",
    "end": "937000"
  },
  {
    "text": "popular I'd say 25% of all the resources that I found on github are some kind of",
    "start": "912399",
    "end": "918100"
  },
  {
    "text": "provision or part of that is biased towards people you know leveraging terraform providers but still even",
    "start": "918100",
    "end": "924790"
  },
  {
    "text": "outside the terraform providers a lot of people that are like hey I just want to make like a GCS or an s3 bucket and",
    "start": "924790",
    "end": "931569"
  },
  {
    "text": "define that next to my application I've seen a lot of people try to do that and",
    "start": "931569",
    "end": "938110"
  },
  {
    "start": "937000",
    "end": "970000"
  },
  {
    "text": "so if you're doing that if you use UCP i'd recommend you check out google config connector it does that for you",
    "start": "938110",
    "end": "946000"
  },
  {
    "text": "and so in the simplest possible version you just make this really succinct",
    "start": "946000",
    "end": "952209"
  },
  {
    "text": "object doesn't even need a spec because everything's default able the reconcile is going to go off and make a cloud",
    "start": "952209",
    "end": "958000"
  },
  {
    "text": "provider bucket for you and it's gonna set some status which I don't show there if you want to get down into all the",
    "start": "958000",
    "end": "963370"
  },
  {
    "text": "details like you know koror's or whatever for like serving from a web bucket and who pays there are",
    "start": "963370",
    "end": "968490"
  },
  {
    "text": "fields for that but it's it's simple to start with so if you're interested in provisioners a bunch of examples I",
    "start": "968490",
    "end": "974250"
  },
  {
    "start": "970000",
    "end": "1013000"
  },
  {
    "text": "mentioned conveyed connector cross plane dot IO is pretty cool project it takes an abstract angle where it's",
    "start": "974250",
    "end": "981120"
  },
  {
    "text": "like trying to hide this sort of the differentiators of each cloud and view each view every cloud as being having a",
    "start": "981120",
    "end": "987449"
  },
  {
    "text": "least common denominator of resources with a focus on portability Kubb form is saying let's just take the terraform",
    "start": "987449",
    "end": "993360"
  },
  {
    "text": "providers which have pretty much all the options for each cloud provider so there's not symmetry o'clock across",
    "start": "993360",
    "end": "998730"
  },
  {
    "text": "similar resources from cloud providers until very recently I would have said check out AWS service operator fusing",
    "start": "998730",
    "end": "1005930"
  },
  {
    "text": "AWS but unfortunately that seems to be archived and I'm hoping they'll they'll revive it because I think it's it's",
    "start": "1005930",
    "end": "1012019"
  },
  {
    "text": "useful so composite pattern so this is",
    "start": "1012019",
    "end": "1018170"
  },
  {
    "start": "1013000",
    "end": "1040000"
  },
  {
    "text": "very familiar deployments stateful set are very common CN CF examples are Jagger and V tests there's a controlling",
    "start": "1018170",
    "end": "1025040"
  },
  {
    "text": "resource which is the one that's defined in your CR D the controller watches the controlling resource and then it makes",
    "start": "1025040",
    "end": "1030319"
  },
  {
    "text": "one or more camera sources that are the controlled or or lower resources some people like to say parent child I find",
    "start": "1030319",
    "end": "1037400"
  },
  {
    "text": "that gets like a little bit too far into the analogies so some of the concern for",
    "start": "1037400",
    "end": "1043490"
  },
  {
    "start": "1040000",
    "end": "1081000"
  },
  {
    "text": "composite resources like basically are definitely you want to represent and this is the word composite comes from",
    "start": "1043490",
    "end": "1050059"
  },
  {
    "text": "the Gang of Four design pattern which is about part-whole hierarchies and so you're gonna want to use object",
    "start": "1050059",
    "end": "1055850"
  },
  {
    "text": "references to refer sort of down or across in the hierarchy and then owner references to refer up there's some",
    "start": "1055850",
    "end": "1062900"
  },
  {
    "text": "support for doing that in frameworks like controller runtime but I think we need to make that more consistent and",
    "start": "1062900",
    "end": "1068120"
  },
  {
    "text": "more ubiquitous some advanced concerns or how do you deal with like attaching and detaching resources to move them",
    "start": "1068120",
    "end": "1073429"
  },
  {
    "text": "between controllers I think a really important one is like how much reconfigurability or changing the defaults do you want to give users and a",
    "start": "1073429",
    "end": "1080090"
  },
  {
    "text": "lot of that surround pod templates at one of the spectrum I've seen where people like you could have it basically",
    "start": "1080090",
    "end": "1086030"
  },
  {
    "start": "1081000",
    "end": "1105000"
  },
  {
    "text": "as zero line CRT and it makes something useful in this examples from jeager tracing you just say Jagger names",
    "start": "1086030",
    "end": "1093260"
  },
  {
    "text": "simplest and then you don't give any spec at all and it's going to go and make you the most basic sort of one",
    "start": "1093260",
    "end": "1098299"
  },
  {
    "text": "binding in one pod jeager tracing thing but it has a bunch of options in fact you can",
    "start": "1098299",
    "end": "1104000"
  },
  {
    "text": "go like I can't even fit in the whole page like you can override node affinity",
    "start": "1104000",
    "end": "1109280"
  },
  {
    "start": "1105000",
    "end": "1131000"
  },
  {
    "text": "and and stuff but doesn't use a pod template but as it stands of her resources and so I don't know that we",
    "start": "1109280",
    "end": "1114470"
  },
  {
    "text": "have a consistent thing a consistent pattern yet for templates in our ecosystem which is why I didn't add them",
    "start": "1114470",
    "end": "1120710"
  },
  {
    "text": "I should use a pod template or should you just put in the things that you want people to override I'm hoping we can at",
    "start": "1120710",
    "end": "1128690"
  },
  {
    "text": "least solidify some advice to people on that so third pattern I call enforcer",
    "start": "1128690",
    "end": "1134380"
  },
  {
    "start": "1131000",
    "end": "1178000"
  },
  {
    "text": "this is gonna allow or deny and maybe edit creation update requests so unlike",
    "start": "1134380",
    "end": "1141770"
  },
  {
    "text": "the previous two patterns the controlling resource is not one to one or one to several with the resources",
    "start": "1141770",
    "end": "1148280"
  },
  {
    "text": "that get created because nothing created it's more like the controlling resources just configuration at the cluster or",
    "start": "1148280",
    "end": "1154220"
  },
  {
    "text": "namespace level for this policy engine and so you try to create something and then maybe you get to creator you don't",
    "start": "1154220",
    "end": "1160700"
  },
  {
    "text": "so a lot of this is like sidecar injection or security policies pod",
    "start": "1160700",
    "end": "1166400"
  },
  {
    "text": "security policy if you need a general way to do this I would definitely recommend you to check out the gatekeeper project I link that at the",
    "start": "1166400",
    "end": "1172280"
  },
  {
    "text": "bottom it's part of OPA which I guess is part of CN CF I think how about I'm gonna speak their fourth one is governor",
    "start": "1172280",
    "end": "1181070"
  },
  {
    "start": "1178000",
    "end": "1205000"
  },
  {
    "text": "pattern so this is where you're continuously updating a resource but you didn't create it and you don't own it and you can detach the governor or add",
    "start": "1181070",
    "end": "1188929"
  },
  {
    "text": "it to a resource I'm not sure why this is covering up but it's supposed to say horizontal plot autoscaler a vertical",
    "start": "1188929",
    "end": "1195200"
  },
  {
    "text": "part autoscaler and then a project called ke da could not try to pronounce that this is what I could find the least",
    "start": "1195200",
    "end": "1200900"
  },
  {
    "text": "examples of but I wanted to include it for a completeness okay so let me talk",
    "start": "1200900",
    "end": "1206419"
  },
  {
    "start": "1205000",
    "end": "1277000"
  },
  {
    "text": "about a totally different set of patterns I call this I don't have a",
    "start": "1206419",
    "end": "1212539"
  },
  {
    "text": "great name for this but kind pair patterns so this is where you have two",
    "start": "1212539",
    "end": "1217880"
  },
  {
    "text": "different types that work together and you split them and one like why didn't you put them all in one resource all the",
    "start": "1217880",
    "end": "1223909"
  },
  {
    "text": "information so I call this X cluster X",
    "start": "1223909",
    "end": "1231380"
  },
  {
    "text": "so you might have like the basic example the first one I know about is like roll and cluster roll or",
    "start": "1231380",
    "end": "1237500"
  },
  {
    "text": "roll binding and cluster roll binding and there's always excellent always have to be the same string but you'll see",
    "start": "1237500",
    "end": "1243260"
  },
  {
    "text": "this pattern a fair amount like why what why would you use this you'd use this if",
    "start": "1243260",
    "end": "1249290"
  },
  {
    "text": "you want the administrator to be able to create like defaults or limited selection for users or you just don't",
    "start": "1249290",
    "end": "1255200"
  },
  {
    "text": "want to repeat yourself and you want to give different missions for the X resource so that each team sorry I",
    "start": "1255200",
    "end": "1263240"
  },
  {
    "text": "didn't scribe that right if you want to make cluster objects only writable by",
    "start": "1263240",
    "end": "1269690"
  },
  {
    "text": "the administrator but you want each team to also have some additional set of objects in their namespace you'd use",
    "start": "1269690",
    "end": "1275450"
  },
  {
    "text": "this pattern so here's some examples I",
    "start": "1275450",
    "end": "1281740"
  },
  {
    "start": "1277000",
    "end": "1289000"
  },
  {
    "text": "found like around 40 of these as I was just like looking for the pattern of X",
    "start": "1281740",
    "end": "1287720"
  },
  {
    "text": "and cluster X within the same API group next one is I call X and X claim so an",
    "start": "1287720",
    "end": "1295640"
  },
  {
    "start": "1289000",
    "end": "1318000"
  },
  {
    "text": "exclaim is something that a user creates to represent they won or equal to like request a resource and then it gets",
    "start": "1295640",
    "end": "1301100"
  },
  {
    "text": "fulfilled with some X resource and so this is splitting them so they can have different lifetimes maybe you want the X",
    "start": "1301100",
    "end": "1307250"
  },
  {
    "text": "thing to be recycled you want to have different permissions for who could manage each one I think is a useful",
    "start": "1307250",
    "end": "1312830"
  },
  {
    "text": "pattern it worked well for Peavey's and PVCs which use that pattern and I found",
    "start": "1312830",
    "end": "1319720"
  },
  {
    "start": "1318000",
    "end": "1337000"
  },
  {
    "text": "fairly small number of examples actually one that was sort of used in quite a few places is this object bucket claim it",
    "start": "1319720",
    "end": "1327080"
  },
  {
    "text": "actually doesn't claim object buckets it can claim different types of things that implement buckets on different platforms",
    "start": "1327080",
    "end": "1333080"
  },
  {
    "text": "so there's some variation how people are applying this one I'd like to understand",
    "start": "1333080",
    "end": "1338120"
  },
  {
    "start": "1337000",
    "end": "1397000"
  },
  {
    "text": "like what the best way to use it is and the let's see last one is X and X class",
    "start": "1338120",
    "end": "1344960"
  },
  {
    "text": "so an X class holds defaults or preferences does that I do that right",
    "start": "1344960",
    "end": "1350840"
  },
  {
    "text": "yeah for some type X and then the X objects might copy those from the next",
    "start": "1350840",
    "end": "1357440"
  },
  {
    "text": "class when it's created and this again is about separation of privilege it's also about like these are not even have",
    "start": "1357440",
    "end": "1363620"
  },
  {
    "text": "to think about it so I'll be able to create like site-specific our cluster specific defaults the",
    "start": "1363620",
    "end": "1370040"
  },
  {
    "text": "developers don't have to think about there's sort of two ways this plays out I've seen it used like with the enforcer",
    "start": "1370040",
    "end": "1375050"
  },
  {
    "text": "pattern where the X class values get copied into the X as like site-specific defaults priority class pattern does",
    "start": "1375050",
    "end": "1381890"
  },
  {
    "text": "this so it like sets a numeric value from a string value into a pod or is",
    "start": "1381890",
    "end": "1386930"
  },
  {
    "text": "another way is like with a provision or pattern you don't ever see the child object or the lower object that's",
    "start": "1386930",
    "end": "1392360"
  },
  {
    "text": "created but the X class is telling you the defaults to put in there so I saw a",
    "start": "1392360",
    "end": "1400820"
  },
  {
    "text": "decent number of these it's used quite a what quite a bit when the core or I",
    "start": "1400820",
    "end": "1405860"
  },
  {
    "text": "guess three places in the core API crossplane dot IO uses Wadud recommend you check that out if you're interested",
    "start": "1405860",
    "end": "1411380"
  },
  {
    "text": "in a agnostic cloud storage solution I",
    "start": "1411380",
    "end": "1418640"
  },
  {
    "start": "1418000",
    "end": "1435000"
  },
  {
    "text": "haven't used myself but it's interesting from an API standpoint okay so I covered like adoption growing frameworks",
    "start": "1418640",
    "end": "1426260"
  },
  {
    "text": "patterns models how those fit together some patterns I've seen and there's",
    "start": "1426260",
    "end": "1431630"
  },
  {
    "text": "quite a few more for us to discover I kinda want to reflect now on like what's",
    "start": "1431630",
    "end": "1437630"
  },
  {
    "start": "1435000",
    "end": "1483000"
  },
  {
    "text": "worked and what should we do going forward so I talked about this is just a",
    "start": "1437630",
    "end": "1445190"
  },
  {
    "text": "slight that top half of this is just that slide from before where I showed how often I saw people using these",
    "start": "1445190",
    "end": "1450940"
  },
  {
    "text": "patterns that are supported by the framework or I guess features of the",
    "start": "1450940",
    "end": "1456140"
  },
  {
    "text": "framework and the bottom thing is these three paired patterns I just talked about which are not supported by any",
    "start": "1456140",
    "end": "1461720"
  },
  {
    "text": "framework anywhere you just have to sort of know about them and I saw the adoption of these patterns is like a lot",
    "start": "1461720",
    "end": "1467720"
  },
  {
    "text": "lower so I'm not sure if that means that these are less applicable or whether people just need help for tooling to",
    "start": "1467720",
    "end": "1474470"
  },
  {
    "text": "adopt these more uniformly but clearly patterns are getting adopted a lot more",
    "start": "1474470",
    "end": "1480410"
  },
  {
    "text": "slowly than things that are supported it within frameworks so let me try to sum",
    "start": "1480410",
    "end": "1488300"
  },
  {
    "start": "1483000",
    "end": "1552000"
  },
  {
    "text": "up again Karam api's are not limited to containers or kubernetes you can use",
    "start": "1488300",
    "end": "1494840"
  },
  {
    "text": "them without using kubernetes if you want you can create a cluster and not have any nodes in it",
    "start": "1494840",
    "end": "1499860"
  },
  {
    "text": "not have any pause in it because it was growing really rapidly there's like 2,000 API is they'll be another thousand",
    "start": "1499860",
    "end": "1506100"
  },
  {
    "text": "next year and I find a consistency across those really valuable unless people reuse",
    "start": "1506100",
    "end": "1511890"
  },
  {
    "text": "their understanding and reuse tooling framework adoption is happening much faster than pattern adoption and more",
    "start": "1511890",
    "end": "1518580"
  },
  {
    "text": "mature API models do document their patterns and I think we need to invest",
    "start": "1518580",
    "end": "1523830"
  },
  {
    "text": "more in that as a community so let's try to move forward on that if you're building an API I'd recommend you try qu",
    "start": "1523830",
    "end": "1529410"
  },
  {
    "text": "build video I think it's where there's the most activity around bringing new",
    "start": "1529410",
    "end": "1536400"
  },
  {
    "text": "features into the framework and if you want to hear more about krm you can follow me on twitter our DME if you have",
    "start": "1536400",
    "end": "1543780"
  },
  {
    "text": "comments or ideas looks like I talked fast and I've got a lot of time for questions so I shall take questions",
    "start": "1543780",
    "end": "1551190"
  },
  {
    "text": "thank you",
    "start": "1551190",
    "end": "1553580"
  },
  {
    "start": "1552000",
    "end": "1687000"
  },
  {
    "text": "hi okay well okay great I like this good talk I like the idea of",
    "start": "1567940",
    "end": "1573770"
  },
  {
    "text": "patterns in fact I think I've noticed there's some other another kind or sort of pattern exemplify for example in",
    "start": "1573770",
    "end": "1580790"
  },
  {
    "text": "storage and pods so between a what you might call it a hard dependency all right so PVC is a hard dependency on",
    "start": "1580790",
    "end": "1587510"
  },
  {
    "text": "the PV a pod using a PVC is a hard dependency on the PVC and finalizer is",
    "start": "1587510",
    "end": "1592880"
  },
  {
    "text": "used to implement this and it's a it's a kind of a piece in aspect but it's",
    "start": "1592880",
    "end": "1599570"
  },
  {
    "text": "another kind of pattern that I think is worth and it's just one example of that that sort of pattern I think it's worth understanding and talking about as well",
    "start": "1599570",
    "end": "1607690"
  },
  {
    "text": "so are you saying that object references are a pattern or is there more to it",
    "start": "1608500",
    "end": "1614810"
  },
  {
    "text": "cannot I guess there's more to the pattern than just an object reference all right it's a specific kind of",
    "start": "1614810",
    "end": "1621350"
  },
  {
    "text": "relationship and the way you implement the relationship alright so if you look for example in a relationship between",
    "start": "1621350",
    "end": "1626600"
  },
  {
    "text": "PVC and PV there's a kind of a pattern in the code and there's same kind of pattern in weight uses as finalized or",
    "start": "1626600",
    "end": "1633050"
  },
  {
    "text": "the object reference and then what's wrapped around all right same kind of pattern again between pod and the PVC okay so that that's the kind of thing",
    "start": "1633050",
    "end": "1639890"
  },
  {
    "text": "I'm talking about thank you are there other questions",
    "start": "1639890",
    "end": "1645040"
  },
  {
    "text": "yeah hi um so while you're going through all those different controller patterns",
    "start": "1654880",
    "end": "1661130"
  },
  {
    "text": "I found myself thinking of some of my controllers we've written and thinking we've kind of implemented all all of",
    "start": "1661130",
    "end": "1666740"
  },
  {
    "text": "those in one controller here so and maybe that's not the best idea so is",
    "start": "1666740",
    "end": "1672200"
  },
  {
    "text": "this sort of more do you mean this sort of as I serve a starting point or is there anything more sort of guideline II",
    "start": "1672200",
    "end": "1677809"
  },
  {
    "text": "or prescriptive you you can say when you find yourself maybe implementing too many of these or yeah if that makes",
    "start": "1677809",
    "end": "1685700"
  },
  {
    "text": "sense okay I heard two parts of that question one is when will you give me some",
    "start": "1685700",
    "end": "1691280"
  },
  {
    "start": "1687000",
    "end": "1720000"
  },
  {
    "text": "prescriptive advice instead of descriptive information so I wanted to",
    "start": "1691280",
    "end": "1699320"
  },
  {
    "text": "get feedback from people and weather that this made sense and if it does I would love to share more prescriptive advice with the community I'm not sure",
    "start": "1699320",
    "end": "1707000"
  },
  {
    "text": "whether that belongs in the kubernetes repo or coup build or something so I'd love to talk to people afterwards about that and that in terms of how like",
    "start": "1707000",
    "end": "1715010"
  },
  {
    "text": "should you implement these patterns in the same controller I definitely see that like I think for example certain",
    "start": "1715010",
    "end": "1722270"
  },
  {
    "start": "1720000",
    "end": "1968000"
  },
  {
    "text": "manager uses like I think all these patterns as well but I think it is useful to least have names for the parts",
    "start": "1722270",
    "end": "1728690"
  },
  {
    "text": "of the controller that do it I also have found implementing control loops that it's definitely even if you don't expose",
    "start": "1728690",
    "end": "1734720"
  },
  {
    "text": "it to your users I think it's less error-prone to try to implement separate control loops for each of these patterns",
    "start": "1734720",
    "end": "1740299"
  },
  {
    "text": "because they really have different concerns I think we probably need to categorize like libraries as supporting",
    "start": "1740299",
    "end": "1746270"
  },
  {
    "text": "different ones of these patterns you can link in more than one library and I",
    "start": "1746270",
    "end": "1751520"
  },
  {
    "text": "actually I think you don't want to try to shove if you can help it all these",
    "start": "1751520",
    "end": "1756650"
  },
  {
    "text": "patterns into like one custom resource so I think it's useful at least from a",
    "start": "1756650",
    "end": "1763789"
  },
  {
    "text": "debug ability understand ability if you're going to build something that's like gonna provision cloud resources for",
    "start": "1763789",
    "end": "1771860"
  },
  {
    "text": "a bunch of different clouds you could sort of use the cloud provider plug-in model where it's sort of invisible what",
    "start": "1771860",
    "end": "1778400"
  },
  {
    "text": "the relationship is between the top level CRD and then the created cloud resources and you can't see them but I",
    "start": "1778400",
    "end": "1783890"
  },
  {
    "text": "actually like it better when you have an intermediate step where the top-level resource then creates like a",
    "start": "1783890",
    "end": "1789799"
  },
  {
    "text": "provisioner style resource and the provisioner then goes and makes the cloud resource that would allow cloud",
    "start": "1789799",
    "end": "1797120"
  },
  {
    "text": "providers or people were experts in each system each type of pattern to to leverage each other's work and I think",
    "start": "1797120",
    "end": "1803809"
  },
  {
    "text": "it's a good separation it concerns are there any more questions okay so when I",
    "start": "1803809",
    "end": "1817309"
  },
  {
    "text": "think of resources in kubernetes I think of them as describing the desired state and controllers as what reconciles the",
    "start": "1817309",
    "end": "1824690"
  },
  {
    "text": "actual state to be aligned with the desired state but I've seen other instances where people will create actions with resources like for instance",
    "start": "1824690",
    "end": "1832460"
  },
  {
    "text": "an ad-hoc backup of a database and in the how the controller do that so do you",
    "start": "1832460",
    "end": "1838640"
  },
  {
    "text": "have any opinions on whether that's appropriate or not yeah I mean I I considered putting in a slide on that",
    "start": "1838640",
    "end": "1844970"
  },
  {
    "text": "which I call like the job like pattern and I think it's definitely useful to",
    "start": "1844970",
    "end": "1850970"
  },
  {
    "text": "have a pattern for resources that reach a terminal state because a lot of times you want to know like is this done",
    "start": "1850970",
    "end": "1856280"
  },
  {
    "text": "I think the contract there should be like if you offer a status that says",
    "start": "1856280",
    "end": "1861289"
  },
  {
    "text": "that you're completed or succeeded or failed like you should never be able to leave that state again that way because",
    "start": "1861289",
    "end": "1867169"
  },
  {
    "text": "it'd be weird if he said that my job's done and then you like we're like okay great I'm doing the next thing and the job saying just kidding I'm not done",
    "start": "1867169",
    "end": "1873320"
  },
  {
    "text": "especially with eventual consistency we're like you sort of you know you might have to wait a long time to get",
    "start": "1873320",
    "end": "1878539"
  },
  {
    "text": "the message that it's done hopefully not like you definitely don't want the messages crossing in them in the night",
    "start": "1878539",
    "end": "1883880"
  },
  {
    "text": "so you need to use monotonically increasing signals in an eventually consistent system to sort of help you",
    "start": "1883880",
    "end": "1889460"
  },
  {
    "text": "advance your state forward so I think we definitely need a pattern there and I will please",
    "start": "1889460",
    "end": "1896330"
  },
  {
    "text": "DME if you have ideas but I'll try to write some more about that in the future okay who really wants to ask a question",
    "start": "1896330",
    "end": "1902990"
  },
  {
    "text": "or needs time to get to the next building okay I got one word",
    "start": "1902990",
    "end": "1908799"
  },
  {
    "text": "what's your take about the duck typing pattern and K native I went to that talk",
    "start": "1911370",
    "end": "1918809"
  },
  {
    "text": "I really liked it those guys are all really creative folks i my first reaction was hey I've got",
    "start": "1918809",
    "end": "1926280"
  },
  {
    "text": "this database of like all the CR DS on github I wonder how many of them actually fit their formal definition of",
    "start": "1926280",
    "end": "1931650"
  },
  {
    "text": "pods peccable because I've seen a lot of different ways that people allow you to sort of override some or all the",
    "start": "1931650",
    "end": "1937920"
  },
  {
    "text": "features of the pod or they actually have two different pods or like 50 different pods that you know specs that",
    "start": "1937920",
    "end": "1943140"
  },
  {
    "text": "make up their thing if you look at coop flow job like there's you know or spark job there's different roles and so I'm",
    "start": "1943140",
    "end": "1950520"
  },
  {
    "text": "interested in seeing how we could formalize that to make it general enough to be usable but I don't I don't yet",
    "start": "1950520",
    "end": "1958020"
  },
  {
    "text": "have an opinion on like where the trade-offs are for that it's a good area to look at thanks everyone for coming",
    "start": "1958020",
    "end": "1963630"
  },
  {
    "text": "and for making the check over to this hotel [Applause]",
    "start": "1963630",
    "end": "1969859"
  }
]