[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "welcome everyone uh this is six",
    "start": "1599",
    "end": "3679"
  },
  {
    "text": "capability introduction and the deep",
    "start": "3679",
    "end": "6319"
  },
  {
    "text": "dive",
    "start": "6319",
    "end": "8480"
  },
  {
    "text": "and um i'm martial jumper i'm software",
    "start": "8480",
    "end": "11599"
  },
  {
    "text": "engineer at google and also a sixth cd",
    "start": "11599",
    "end": "14799"
  },
  {
    "text": "member unfortunately white tech won't be",
    "start": "14799",
    "end": "17760"
  },
  {
    "text": "presenting with me",
    "start": "17760",
    "end": "19520"
  },
  {
    "text": "today but hopefully he will join for the",
    "start": "19520",
    "end": "21920"
  },
  {
    "text": "q a session",
    "start": "21920",
    "end": "23600"
  },
  {
    "text": "he's senior staff software engineer at",
    "start": "23600",
    "end": "25439"
  },
  {
    "text": "google and sixth city",
    "start": "25439",
    "end": "27599"
  },
  {
    "text": "tech",
    "start": "27599",
    "end": "30599"
  },
  {
    "start": "30000",
    "end": "30000"
  },
  {
    "text": "so first of all let's start with",
    "start": "30880",
    "end": "33680"
  },
  {
    "text": "what do we do as a sixth capability",
    "start": "33680",
    "end": "36160"
  },
  {
    "text": "there are five different um",
    "start": "36160",
    "end": "38960"
  },
  {
    "text": "main areas that we are interested in",
    "start": "38960",
    "end": "41680"
  },
  {
    "text": "starting with defining and driving",
    "start": "41680",
    "end": "43840"
  },
  {
    "text": "scalability definition and goals",
    "start": "43840",
    "end": "46800"
  },
  {
    "text": "once we have those goals we are",
    "start": "46800",
    "end": "48480"
  },
  {
    "text": "interested in monitoring and measuring",
    "start": "48480",
    "end": "51520"
  },
  {
    "text": "performance of the kubernetes",
    "start": "51520",
    "end": "54079"
  },
  {
    "text": "so we have goals we have measurements so",
    "start": "54079",
    "end": "56879"
  },
  {
    "text": "now it's time for improvements",
    "start": "56879",
    "end": "59920"
  },
  {
    "text": "basically with those measurements we can",
    "start": "59920",
    "end": "61840"
  },
  {
    "text": "find some bottlenecks and drive those",
    "start": "61840",
    "end": "64878"
  },
  {
    "text": "performance improvements in kubernetes",
    "start": "64879",
    "end": "67200"
  },
  {
    "text": "and those performance improvements can",
    "start": "67200",
    "end": "69200"
  },
  {
    "text": "happen in two different",
    "start": "69200",
    "end": "70840"
  },
  {
    "text": "ways either we just contribute to",
    "start": "70840",
    "end": "73200"
  },
  {
    "text": "kubernetes or we coordinate with",
    "start": "73200",
    "end": "74960"
  },
  {
    "text": "different seeks to make it happen",
    "start": "74960",
    "end": "78159"
  },
  {
    "text": "as you can imagine in",
    "start": "78159",
    "end": "80400"
  },
  {
    "text": "kubernetes with each version there is a",
    "start": "80400",
    "end": "82400"
  },
  {
    "text": "bunch of new features added so what we",
    "start": "82400",
    "end": "86240"
  },
  {
    "text": "want to do is also protect kubernetes",
    "start": "86240",
    "end": "88880"
  },
  {
    "text": "from any scalability",
    "start": "88880",
    "end": "90880"
  },
  {
    "text": "regressions",
    "start": "90880",
    "end": "92960"
  },
  {
    "text": "last but not least it's consult and",
    "start": "92960",
    "end": "95600"
  },
  {
    "text": "coach community members about",
    "start": "95600",
    "end": "97759"
  },
  {
    "text": "scalability",
    "start": "97759",
    "end": "100240"
  },
  {
    "text": "you want to add some new feature to",
    "start": "100240",
    "end": "102560"
  },
  {
    "text": "kubernetes and",
    "start": "102560",
    "end": "105119"
  },
  {
    "text": "basically",
    "start": "105119",
    "end": "106479"
  },
  {
    "text": "before you",
    "start": "106479",
    "end": "107759"
  },
  {
    "text": "start implementation it might be worth",
    "start": "107759",
    "end": "110159"
  },
  {
    "text": "to consult it with",
    "start": "110159",
    "end": "112159"
  },
  {
    "text": "with us to make sure that there is no",
    "start": "112159",
    "end": "114720"
  },
  {
    "text": "any obvious bottlenecks",
    "start": "114720",
    "end": "116960"
  },
  {
    "text": "from",
    "start": "116960",
    "end": "117759"
  },
  {
    "text": "scalability point of view",
    "start": "117759",
    "end": "120159"
  },
  {
    "text": "and the most important",
    "start": "120159",
    "end": "122000"
  },
  {
    "text": "it's though",
    "start": "122000",
    "end": "123200"
  },
  {
    "text": "not to confuse six capabilities with",
    "start": "123200",
    "end": "126159"
  },
  {
    "text": "sick auto scaling it actually happens",
    "start": "126159",
    "end": "128720"
  },
  {
    "text": "quite often",
    "start": "128720",
    "end": "131360"
  },
  {
    "text": "and yeah we will go through those five",
    "start": "132400",
    "end": "134720"
  },
  {
    "text": "different areas",
    "start": "134720",
    "end": "136319"
  },
  {
    "text": "uh and",
    "start": "136319",
    "end": "138400"
  },
  {
    "text": "during this presentation so let's start",
    "start": "138400",
    "end": "140400"
  },
  {
    "text": "with defining what actually",
    "start": "140400",
    "end": "143360"
  },
  {
    "text": "kubernetes scalability means if you ask",
    "start": "143360",
    "end": "146080"
  },
  {
    "text": "average user okay so",
    "start": "146080",
    "end": "148319"
  },
  {
    "text": "what do you want in terms of scalability",
    "start": "148319",
    "end": "151360"
  },
  {
    "text": "well they will sell scalable clusters",
    "start": "151360",
    "end": "154000"
  },
  {
    "text": "but if you ask okay but what does it",
    "start": "154000",
    "end": "156000"
  },
  {
    "text": "mean well most of the users",
    "start": "156000",
    "end": "158319"
  },
  {
    "text": "unfortunately don't know",
    "start": "158319",
    "end": "161200"
  },
  {
    "text": "so maybe let's let's look back",
    "start": "161200",
    "end": "164720"
  },
  {
    "text": "at the history of kubernetes",
    "start": "164720",
    "end": "166959"
  },
  {
    "text": "and kubernetes 1.0 was released in 2015",
    "start": "166959",
    "end": "171920"
  },
  {
    "text": "and officially it supported",
    "start": "171920",
    "end": "174480"
  },
  {
    "text": "100 nodes and this number changed over",
    "start": "174480",
    "end": "177360"
  },
  {
    "text": "time",
    "start": "177360",
    "end": "178159"
  },
  {
    "text": "it was",
    "start": "178159",
    "end": "179120"
  },
  {
    "text": "1 000 notes and then",
    "start": "179120",
    "end": "181280"
  },
  {
    "text": "in 2017 5 000 nodes",
    "start": "181280",
    "end": "184879"
  },
  {
    "text": "so you might ask okay so",
    "start": "184879",
    "end": "187040"
  },
  {
    "text": "how much nodes kubernetes supports right",
    "start": "187040",
    "end": "190000"
  },
  {
    "text": "now and the answer is that",
    "start": "190000",
    "end": "192879"
  },
  {
    "text": "this number",
    "start": "192879",
    "end": "195360"
  },
  {
    "text": "didn't change at all it's still five",
    "start": "195360",
    "end": "197920"
  },
  {
    "text": "thousand notes",
    "start": "197920",
    "end": "199599"
  },
  {
    "text": "so you may ask okay um well then six",
    "start": "199599",
    "end": "203040"
  },
  {
    "text": "calabiti what were you doing during the",
    "start": "203040",
    "end": "204879"
  },
  {
    "text": "last four",
    "start": "204879",
    "end": "206080"
  },
  {
    "text": "four years well it turns out that",
    "start": "206080",
    "end": "208400"
  },
  {
    "text": "stability is not just the number of",
    "start": "208400",
    "end": "210720"
  },
  {
    "text": "nodes that kubernetes supports",
    "start": "210720",
    "end": "213840"
  },
  {
    "text": "in fact scalability",
    "start": "213840",
    "end": "216159"
  },
  {
    "start": "214000",
    "end": "214000"
  },
  {
    "text": "is something that you need to analyze in",
    "start": "216159",
    "end": "219280"
  },
  {
    "text": "many more dimensions to give you",
    "start": "219280",
    "end": "221599"
  },
  {
    "text": "a few examples",
    "start": "221599",
    "end": "223200"
  },
  {
    "text": "number of nodes is just one of those",
    "start": "223200",
    "end": "225519"
  },
  {
    "text": "dimensions we have a bunch of other",
    "start": "225519",
    "end": "227840"
  },
  {
    "text": "dimensions like number of namespaces",
    "start": "227840",
    "end": "230400"
  },
  {
    "text": "number of secrets services and if you",
    "start": "230400",
    "end": "233360"
  },
  {
    "text": "have number of services then for each",
    "start": "233360",
    "end": "235920"
  },
  {
    "text": "service what's important is how many",
    "start": "235920",
    "end": "238159"
  },
  {
    "text": "backends do you have per service",
    "start": "238159",
    "end": "240480"
  },
  {
    "text": "and so on",
    "start": "240480",
    "end": "241920"
  },
  {
    "text": "so based on those",
    "start": "241920",
    "end": "243680"
  },
  {
    "text": "um dimensions what we would like to do",
    "start": "243680",
    "end": "246159"
  },
  {
    "text": "is",
    "start": "246159",
    "end": "247439"
  },
  {
    "text": "define",
    "start": "247439",
    "end": "248560"
  },
  {
    "text": "save zone scalability envelope which is",
    "start": "248560",
    "end": "251439"
  },
  {
    "text": "a safe zone",
    "start": "251439",
    "end": "252879"
  },
  {
    "text": "and by save zone what i mean is that if",
    "start": "252879",
    "end": "256639"
  },
  {
    "text": "your plaster is within this save zone",
    "start": "256639",
    "end": "259440"
  },
  {
    "text": "your cluster will be happy",
    "start": "259440",
    "end": "261680"
  },
  {
    "text": "but",
    "start": "261680",
    "end": "262880"
  },
  {
    "text": "again what does it mean that the cluster",
    "start": "262880",
    "end": "264800"
  },
  {
    "text": "is happy what is the save zone",
    "start": "264800",
    "end": "267600"
  },
  {
    "text": "we will try to define and explain that",
    "start": "267600",
    "end": "270479"
  },
  {
    "text": "in more details on the few next slides",
    "start": "270479",
    "end": "273520"
  },
  {
    "text": "so maybe let's start with",
    "start": "273520",
    "end": "275680"
  },
  {
    "text": "what does the mintage cluster is heavy",
    "start": "275680",
    "end": "279199"
  },
  {
    "start": "278000",
    "end": "278000"
  },
  {
    "text": "and here we have two",
    "start": "279199",
    "end": "281600"
  },
  {
    "text": "key concepts sli and slo",
    "start": "281600",
    "end": "284560"
  },
  {
    "text": "sli is service level indicator",
    "start": "284560",
    "end": "287840"
  },
  {
    "text": "imagine that you have",
    "start": "287840",
    "end": "289280"
  },
  {
    "text": "that you have cluster",
    "start": "289280",
    "end": "291360"
  },
  {
    "text": "and you're interested",
    "start": "291360",
    "end": "294080"
  },
  {
    "text": "for example in pod startup latency",
    "start": "294080",
    "end": "297680"
  },
  {
    "text": "pod startup latency is the time",
    "start": "297680",
    "end": "300080"
  },
  {
    "text": "how much it takes",
    "start": "300080",
    "end": "301759"
  },
  {
    "text": "for pot to be running since it was",
    "start": "301759",
    "end": "304400"
  },
  {
    "text": "scheduled to particular node",
    "start": "304400",
    "end": "306960"
  },
  {
    "text": "so you are making those measurements",
    "start": "306960",
    "end": "309680"
  },
  {
    "text": "you have a bunch of them and then you",
    "start": "309680",
    "end": "311280"
  },
  {
    "text": "take 99th percentile of of both startup",
    "start": "311280",
    "end": "314960"
  },
  {
    "text": "latency measurements and it turns out to",
    "start": "314960",
    "end": "317680"
  },
  {
    "text": "be let's say three seconds",
    "start": "317680",
    "end": "320800"
  },
  {
    "text": "so this would be actually sli for put",
    "start": "320800",
    "end": "323199"
  },
  {
    "text": "startup latency",
    "start": "323199",
    "end": "325280"
  },
  {
    "text": "for your for your cluster and on top of",
    "start": "325280",
    "end": "328400"
  },
  {
    "text": "that what we do as a six capability we",
    "start": "328400",
    "end": "330800"
  },
  {
    "text": "add threshold to it",
    "start": "330800",
    "end": "332720"
  },
  {
    "text": "and forward startup latency let's say",
    "start": "332720",
    "end": "335039"
  },
  {
    "text": "it's five seconds",
    "start": "335039",
    "end": "336800"
  },
  {
    "text": "and this is basically slo so we can",
    "start": "336800",
    "end": "339120"
  },
  {
    "text": "think of slo as a sli plus threshold and",
    "start": "339120",
    "end": "343440"
  },
  {
    "text": "that should be satisfied",
    "start": "343440",
    "end": "347039"
  },
  {
    "start": "347000",
    "end": "347000"
  },
  {
    "text": "and in six callability",
    "start": "348560",
    "end": "350479"
  },
  {
    "text": "we have bunch of bunch of different slos",
    "start": "350479",
    "end": "354000"
  },
  {
    "text": "a few examples like api call latency uh",
    "start": "354000",
    "end": "357840"
  },
  {
    "text": "already mentioned bot startup latency",
    "start": "357840",
    "end": "360720"
  },
  {
    "text": "and different types of networking",
    "start": "360720",
    "end": "363199"
  },
  {
    "text": "latencies",
    "start": "363199",
    "end": "364560"
  },
  {
    "text": "like dns latency you can find all those",
    "start": "364560",
    "end": "367600"
  },
  {
    "text": "slos that we support as six capability",
    "start": "367600",
    "end": "370400"
  },
  {
    "text": "on our github page",
    "start": "370400",
    "end": "372720"
  },
  {
    "text": "so maybe let's see",
    "start": "372720",
    "end": "374560"
  },
  {
    "text": "how the definition of api call latency",
    "start": "374560",
    "end": "377440"
  },
  {
    "text": "looks like it will be a little bit",
    "start": "377440",
    "end": "379759"
  },
  {
    "start": "378000",
    "end": "378000"
  },
  {
    "text": "simplified version you can find full",
    "start": "379759",
    "end": "381759"
  },
  {
    "text": "version on our",
    "start": "381759",
    "end": "383520"
  },
  {
    "text": "github page and but basically um",
    "start": "383520",
    "end": "387199"
  },
  {
    "text": "api calls",
    "start": "387199",
    "end": "389120"
  },
  {
    "text": "we would like to divide them into two",
    "start": "389120",
    "end": "391840"
  },
  {
    "text": "two groups one will be right calls and",
    "start": "391840",
    "end": "395360"
  },
  {
    "text": "99 of right calls",
    "start": "395360",
    "end": "397919"
  },
  {
    "text": "we would like to",
    "start": "397919",
    "end": "400240"
  },
  {
    "text": "have latency below one second",
    "start": "400240",
    "end": "403120"
  },
  {
    "text": "for read calls we would like to have",
    "start": "403120",
    "end": "406160"
  },
  {
    "text": "it's a little bit more complex if you",
    "start": "406160",
    "end": "408000"
  },
  {
    "text": "are just getting one object like let's",
    "start": "408000",
    "end": "410319"
  },
  {
    "text": "say you are getting pod then the latency",
    "start": "410319",
    "end": "412800"
  },
  {
    "text": "should also be",
    "start": "412800",
    "end": "414160"
  },
  {
    "text": "within one second",
    "start": "414160",
    "end": "415759"
  },
  {
    "text": "but if you are trying to for example",
    "start": "415759",
    "end": "417599"
  },
  {
    "text": "list all the secrets in the namespace",
    "start": "417599",
    "end": "420240"
  },
  {
    "text": "and then it may it might take up to five",
    "start": "420240",
    "end": "423120"
  },
  {
    "text": "seconds",
    "start": "423120",
    "end": "424880"
  },
  {
    "text": "uh on the other hand if you want to list",
    "start": "424880",
    "end": "427520"
  },
  {
    "text": "all the",
    "start": "427520",
    "end": "428880"
  },
  {
    "text": "pods in your cluster all the secrets",
    "start": "428880",
    "end": "432319"
  },
  {
    "text": "across all the namespaces then this type",
    "start": "432319",
    "end": "435199"
  },
  {
    "text": "of request might be quite long running",
    "start": "435199",
    "end": "438080"
  },
  {
    "text": "up to 30 seconds",
    "start": "438080",
    "end": "440639"
  },
  {
    "text": "uh in total so yeah and remember that",
    "start": "440639",
    "end": "443199"
  },
  {
    "text": "it's 99",
    "start": "443199",
    "end": "444560"
  },
  {
    "text": "so you can always be unlucky and",
    "start": "444560",
    "end": "447599"
  },
  {
    "text": "in this one percent",
    "start": "447599",
    "end": "449599"
  },
  {
    "text": "and basically that your request will",
    "start": "449599",
    "end": "451520"
  },
  {
    "text": "take longer than that",
    "start": "451520",
    "end": "454319"
  },
  {
    "text": "okay so we have i think we have pretty",
    "start": "454319",
    "end": "456560"
  },
  {
    "text": "much good understanding what kind of uh",
    "start": "456560",
    "end": "459280"
  },
  {
    "text": "sls",
    "start": "459280",
    "end": "460560"
  },
  {
    "text": "and six callability uh provides how do",
    "start": "460560",
    "end": "463919"
  },
  {
    "text": "they look like",
    "start": "463919",
    "end": "465120"
  },
  {
    "start": "465000",
    "end": "465000"
  },
  {
    "text": "so now we can actually define what does",
    "start": "465120",
    "end": "468240"
  },
  {
    "text": "it mean that cluster is happy",
    "start": "468240",
    "end": "470879"
  },
  {
    "text": "so cluster is happy when all of those",
    "start": "470879",
    "end": "473520"
  },
  {
    "text": "scalability slos are satisfied",
    "start": "473520",
    "end": "476720"
  },
  {
    "text": "and based on that um we can have this",
    "start": "476720",
    "end": "479919"
  },
  {
    "text": "kind of like framework",
    "start": "479919",
    "end": "481919"
  },
  {
    "text": "and that if you promise us that",
    "start": "481919",
    "end": "484400"
  },
  {
    "text": "your cluster will be within save zone",
    "start": "484400",
    "end": "488080"
  },
  {
    "text": "then we can promise you that all",
    "start": "488080",
    "end": "489840"
  },
  {
    "text": "scalability sls will be satisfied",
    "start": "489840",
    "end": "492479"
  },
  {
    "text": "but we still didn't discuss um",
    "start": "492479",
    "end": "495680"
  },
  {
    "text": "we still didn't discuss",
    "start": "495680",
    "end": "498080"
  },
  {
    "text": "what's the safe zone",
    "start": "498080",
    "end": "500319"
  },
  {
    "start": "499000",
    "end": "499000"
  },
  {
    "text": "so",
    "start": "500319",
    "end": "501120"
  },
  {
    "text": "if we want to compute this scalability",
    "start": "501120",
    "end": "503039"
  },
  {
    "text": "envelope it's actually impossible to",
    "start": "503039",
    "end": "506240"
  },
  {
    "text": "compute it precisely",
    "start": "506240",
    "end": "508160"
  },
  {
    "text": "because there are multiple different",
    "start": "508160",
    "end": "510319"
  },
  {
    "text": "dependencies between dimensions which",
    "start": "510319",
    "end": "512959"
  },
  {
    "text": "are quite",
    "start": "512959",
    "end": "514159"
  },
  {
    "text": "quite complex",
    "start": "514159",
    "end": "516240"
  },
  {
    "text": "and obviously it's changing all the time",
    "start": "516240",
    "end": "518719"
  },
  {
    "text": "but instead of trying to find like this",
    "start": "518719",
    "end": "520640"
  },
  {
    "text": "precise scalability envelope that",
    "start": "520640",
    "end": "523360"
  },
  {
    "text": "you can put whatever configuration of",
    "start": "523360",
    "end": "526160"
  },
  {
    "text": "of cluster you can imagine and then get",
    "start": "526160",
    "end": "528800"
  },
  {
    "text": "output whether you are within or not and",
    "start": "528800",
    "end": "531120"
  },
  {
    "text": "what we can do is actually",
    "start": "531120",
    "end": "533760"
  },
  {
    "text": "approximated and we try to approximate",
    "start": "533760",
    "end": "536959"
  },
  {
    "text": "it by set of limits and as mentioned",
    "start": "536959",
    "end": "539519"
  },
  {
    "text": "before we have",
    "start": "539519",
    "end": "540959"
  },
  {
    "text": "one one limit at its number of nodes",
    "start": "540959",
    "end": "543200"
  },
  {
    "text": "it's up to 5 000",
    "start": "543200",
    "end": "545360"
  },
  {
    "text": "nodes",
    "start": "545360",
    "end": "546320"
  },
  {
    "text": "then what we have is number of pots",
    "start": "546320",
    "end": "549040"
  },
  {
    "text": "number of pots should be less than equal",
    "start": "549040",
    "end": "551440"
  },
  {
    "text": "30 times number of",
    "start": "551440",
    "end": "553360"
  },
  {
    "text": "of nodes so we can think of it",
    "start": "553360",
    "end": "556080"
  },
  {
    "text": "as",
    "start": "556080",
    "end": "557120"
  },
  {
    "text": "30 pots on average per node",
    "start": "557120",
    "end": "560320"
  },
  {
    "text": "and for example other limit and that we",
    "start": "560320",
    "end": "563440"
  },
  {
    "text": "have is number of services which is 10",
    "start": "563440",
    "end": "565760"
  },
  {
    "text": "000",
    "start": "565760",
    "end": "566640"
  },
  {
    "text": "and all those kind of",
    "start": "566640",
    "end": "569040"
  },
  {
    "text": "all those kind of limits you can find on",
    "start": "569040",
    "end": "571839"
  },
  {
    "text": "our website so",
    "start": "571839",
    "end": "574560"
  },
  {
    "text": "at the end what happens is that if you",
    "start": "574560",
    "end": "576800"
  },
  {
    "text": "have cluster you are probably interested",
    "start": "576800",
    "end": "578959"
  },
  {
    "text": "in",
    "start": "578959",
    "end": "580000"
  },
  {
    "text": "in those",
    "start": "580000",
    "end": "581040"
  },
  {
    "text": "uh in those",
    "start": "581040",
    "end": "582399"
  },
  {
    "text": "limits",
    "start": "582399",
    "end": "583360"
  },
  {
    "text": "and if they are satisfied then we",
    "start": "583360",
    "end": "585120"
  },
  {
    "text": "promise you um",
    "start": "585120",
    "end": "587120"
  },
  {
    "text": "our scalability slos will be satisfied",
    "start": "587120",
    "end": "590320"
  },
  {
    "text": "as well",
    "start": "590320",
    "end": "592880"
  },
  {
    "text": "so now we need to make sure that",
    "start": "593360",
    "end": "595360"
  },
  {
    "text": "actually",
    "start": "595360",
    "end": "596640"
  },
  {
    "text": "for for this stability envelope uh those",
    "start": "596640",
    "end": "600240"
  },
  {
    "text": "slos are satisfied and here we have",
    "start": "600240",
    "end": "603200"
  },
  {
    "text": "stability testing infrastructure",
    "start": "603200",
    "end": "606480"
  },
  {
    "start": "606000",
    "end": "606000"
  },
  {
    "text": "we will start with cluster loader",
    "start": "606480",
    "end": "608800"
  },
  {
    "text": "and a few years ago actually we didn't",
    "start": "608800",
    "end": "611600"
  },
  {
    "text": "have cluster loader and our scalability",
    "start": "611600",
    "end": "614640"
  },
  {
    "text": "tests were purely written and going you",
    "start": "614640",
    "end": "617200"
  },
  {
    "text": "can imagine how",
    "start": "617200",
    "end": "618880"
  },
  {
    "text": "how hard it was to actually",
    "start": "618880",
    "end": "621920"
  },
  {
    "text": "maintain those tests and since then we",
    "start": "621920",
    "end": "624720"
  },
  {
    "text": "developed cluster loader",
    "start": "624720",
    "end": "627040"
  },
  {
    "text": "which is really great and",
    "start": "627040",
    "end": "630240"
  },
  {
    "text": "you can basically bring your own yam",
    "start": "630240",
    "end": "633440"
  },
  {
    "text": "with test description",
    "start": "633440",
    "end": "635519"
  },
  {
    "text": "and the test description",
    "start": "635519",
    "end": "637360"
  },
  {
    "text": "consists of states in which you want",
    "start": "637360",
    "end": "640800"
  },
  {
    "text": "your cluster to be in",
    "start": "640800",
    "end": "643040"
  },
  {
    "text": "so you have you can have multiple states",
    "start": "643040",
    "end": "645680"
  },
  {
    "text": "you can also specify how to transition",
    "start": "645680",
    "end": "648000"
  },
  {
    "text": "between those states",
    "start": "648000",
    "end": "650160"
  },
  {
    "text": "and during this whole testing and",
    "start": "650160",
    "end": "653360"
  },
  {
    "text": "cluster loader also is gathering a bunch",
    "start": "653360",
    "end": "656640"
  },
  {
    "text": "of measurements",
    "start": "656640",
    "end": "658720"
  },
  {
    "text": "so he can make a decision whether",
    "start": "658720",
    "end": "661839"
  },
  {
    "text": "whether all scalability slos were",
    "start": "661839",
    "end": "664160"
  },
  {
    "text": "satisfied satisfied during this test",
    "start": "664160",
    "end": "668480"
  },
  {
    "text": "except for that",
    "start": "668480",
    "end": "669920"
  },
  {
    "text": "um",
    "start": "669920",
    "end": "671680"
  },
  {
    "text": "cluster loader also provides a lot of",
    "start": "671680",
    "end": "674320"
  },
  {
    "text": "extra observability for debugging",
    "start": "674320",
    "end": "678640"
  },
  {
    "text": "which we will actually cover",
    "start": "678640",
    "end": "681440"
  },
  {
    "text": "later",
    "start": "681440",
    "end": "682399"
  },
  {
    "text": "you can find all those features",
    "start": "682399",
    "end": "684800"
  },
  {
    "text": "in our perth test repository which has",
    "start": "684800",
    "end": "687519"
  },
  {
    "text": "also implementation of cluster loader 2.",
    "start": "687519",
    "end": "692480"
  },
  {
    "start": "692000",
    "end": "692000"
  },
  {
    "text": "the other tool that we commonly use is",
    "start": "693040",
    "end": "695760"
  },
  {
    "text": "cubemark",
    "start": "695760",
    "end": "697200"
  },
  {
    "text": "maybe it's not a tool it's actually",
    "start": "697200",
    "end": "699440"
  },
  {
    "text": "cluster simulation",
    "start": "699440",
    "end": "701680"
  },
  {
    "text": "so",
    "start": "701680",
    "end": "702399"
  },
  {
    "text": "in the scalability envelope you saw that",
    "start": "702399",
    "end": "704800"
  },
  {
    "text": "we support up to 5000 nodes",
    "start": "704800",
    "end": "708240"
  },
  {
    "text": "and",
    "start": "708240",
    "end": "709120"
  },
  {
    "text": "testing",
    "start": "709120",
    "end": "710560"
  },
  {
    "text": "cluster consisting of 5 000 nodes it's",
    "start": "710560",
    "end": "713279"
  },
  {
    "text": "it's quite",
    "start": "713279",
    "end": "715040"
  },
  {
    "text": "quite expensive and",
    "start": "715040",
    "end": "716800"
  },
  {
    "text": "time consuming",
    "start": "716800",
    "end": "718240"
  },
  {
    "text": "so instead of",
    "start": "718240",
    "end": "720000"
  },
  {
    "text": "having",
    "start": "720000",
    "end": "721200"
  },
  {
    "text": "actual 5000",
    "start": "721200",
    "end": "723440"
  },
  {
    "text": "vms but",
    "start": "723440",
    "end": "724880"
  },
  {
    "text": "what we are doing is",
    "start": "724880",
    "end": "727440"
  },
  {
    "text": "we are creating something we call whole",
    "start": "727440",
    "end": "730160"
  },
  {
    "text": "nodes",
    "start": "730160",
    "end": "731920"
  },
  {
    "text": "so here what you can see is okay we have",
    "start": "731920",
    "end": "734880"
  },
  {
    "text": "three",
    "start": "734880",
    "end": "735839"
  },
  {
    "text": "actual vms",
    "start": "735839",
    "end": "737519"
  },
  {
    "text": "and each of this vm is running multiple",
    "start": "737519",
    "end": "740800"
  },
  {
    "text": "hollow nodes",
    "start": "740800",
    "end": "742800"
  },
  {
    "text": "and those hollow nodes kind of simulate",
    "start": "742800",
    "end": "745600"
  },
  {
    "text": "regular nodes the difference is that",
    "start": "745600",
    "end": "748639"
  },
  {
    "text": "if you if you schedule some pod on a",
    "start": "748639",
    "end": "751440"
  },
  {
    "text": "regular kubernetes cluster it will be",
    "start": "751440",
    "end": "754639"
  },
  {
    "text": "actually running",
    "start": "754639",
    "end": "756800"
  },
  {
    "text": "but here if you schedule it on hollow",
    "start": "756800",
    "end": "758880"
  },
  {
    "text": "note then",
    "start": "758880",
    "end": "760959"
  },
  {
    "text": "kublet which we call also hollow kublad",
    "start": "760959",
    "end": "764000"
  },
  {
    "text": "will only say okay i'm running this uh",
    "start": "764000",
    "end": "767040"
  },
  {
    "text": "this container this spot",
    "start": "767040",
    "end": "769120"
  },
  {
    "text": "but it will not actually run it so and",
    "start": "769120",
    "end": "772560"
  },
  {
    "text": "this allows us to run multiple hole",
    "start": "772560",
    "end": "774720"
  },
  {
    "text": "nodes",
    "start": "774720",
    "end": "775920"
  },
  {
    "text": "on one node and each of those whole",
    "start": "775920",
    "end": "778800"
  },
  {
    "text": "nodes is actually running three",
    "start": "778800",
    "end": "780959"
  },
  {
    "text": "containers",
    "start": "780959",
    "end": "782480"
  },
  {
    "text": "one is a couplet",
    "start": "782480",
    "end": "784800"
  },
  {
    "text": "the other is cube proxy",
    "start": "784800",
    "end": "787200"
  },
  {
    "text": "and a node problem detector",
    "start": "787200",
    "end": "790959"
  },
  {
    "text": "so those whole nodes connect to",
    "start": "790959",
    "end": "793600"
  },
  {
    "text": "master and this master is fully",
    "start": "793600",
    "end": "795760"
  },
  {
    "text": "functional",
    "start": "795760",
    "end": "797519"
  },
  {
    "text": "so basically we test this master and",
    "start": "797519",
    "end": "801200"
  },
  {
    "text": "whether all the slos are satisfied with",
    "start": "801200",
    "end": "805360"
  },
  {
    "text": "cluster loader",
    "start": "805360",
    "end": "808160"
  },
  {
    "text": "with our cluster loader",
    "start": "808160",
    "end": "810560"
  },
  {
    "text": "the only problem with this kind of setup",
    "start": "810560",
    "end": "812800"
  },
  {
    "text": "is",
    "start": "812800",
    "end": "813600"
  },
  {
    "text": "yeah but",
    "start": "813600",
    "end": "814639"
  },
  {
    "text": "how how do you actually deploy those",
    "start": "814639",
    "end": "816560"
  },
  {
    "text": "whole nodes",
    "start": "816560",
    "end": "817839"
  },
  {
    "text": "so this becomes a little bit tricky",
    "start": "817839",
    "end": "819920"
  },
  {
    "text": "because",
    "start": "819920",
    "end": "820959"
  },
  {
    "text": "um let's say you have hundreds of nodes",
    "start": "820959",
    "end": "823760"
  },
  {
    "text": "and then you want to run those hollow",
    "start": "823760",
    "end": "826000"
  },
  {
    "text": "nodes on",
    "start": "826000",
    "end": "827680"
  },
  {
    "text": "on those hundreds of vms",
    "start": "827680",
    "end": "830880"
  },
  {
    "text": "and",
    "start": "830880",
    "end": "831760"
  },
  {
    "text": "well running multiple containers is",
    "start": "831760",
    "end": "834160"
  },
  {
    "text": "something that actually kubernetes",
    "start": "834160",
    "end": "836320"
  },
  {
    "text": "solved so those whole nodes are",
    "start": "836320",
    "end": "839519"
  },
  {
    "text": "are",
    "start": "839519",
    "end": "840240"
  },
  {
    "text": "scheduled and",
    "start": "840240",
    "end": "842300"
  },
  {
    "text": "[Music]",
    "start": "842300",
    "end": "843519"
  },
  {
    "text": "scheduled basically by separate master",
    "start": "843519",
    "end": "846560"
  },
  {
    "text": "this master is responsible only for",
    "start": "846560",
    "end": "849839"
  },
  {
    "text": "scheduling those whole nodes and running",
    "start": "849839",
    "end": "852240"
  },
  {
    "text": "them on physical machines",
    "start": "852240",
    "end": "855600"
  },
  {
    "text": "and that's basically",
    "start": "855600",
    "end": "858079"
  },
  {
    "text": "that's basically it so we have two",
    "start": "858079",
    "end": "860079"
  },
  {
    "text": "masters this master is",
    "start": "860079",
    "end": "862480"
  },
  {
    "text": "is not being",
    "start": "862480",
    "end": "864959"
  },
  {
    "text": "tested",
    "start": "864959",
    "end": "867519"
  },
  {
    "text": "and to give you some some examples um",
    "start": "868240",
    "end": "871279"
  },
  {
    "text": "i mentioned that yeah we we support 5000",
    "start": "871279",
    "end": "874079"
  },
  {
    "text": "knots we also have 5 000 nodes",
    "start": "874079",
    "end": "877760"
  },
  {
    "text": "tests but using cubemark uh instead of",
    "start": "877760",
    "end": "880720"
  },
  {
    "text": "using 5000 cores",
    "start": "880720",
    "end": "883440"
  },
  {
    "text": "we are actually we can",
    "start": "883440",
    "end": "885680"
  },
  {
    "text": "use 700 cores and kind of simulate 5000",
    "start": "885680",
    "end": "890000"
  },
  {
    "text": "cluster which which is",
    "start": "890000",
    "end": "892320"
  },
  {
    "text": "really great because it allows us to",
    "start": "892320",
    "end": "895440"
  },
  {
    "text": "cut down the cost but",
    "start": "895440",
    "end": "897600"
  },
  {
    "text": "also iterate easier if if you can",
    "start": "897600",
    "end": "899920"
  },
  {
    "text": "imagine that there is regression that",
    "start": "899920",
    "end": "901440"
  },
  {
    "text": "happens only",
    "start": "901440",
    "end": "903120"
  },
  {
    "text": "from time to time let's say one in five",
    "start": "903120",
    "end": "905760"
  },
  {
    "text": "runs",
    "start": "905760",
    "end": "906800"
  },
  {
    "text": "uh then with cubemark we can easily run",
    "start": "906800",
    "end": "909680"
  },
  {
    "text": "ten",
    "start": "909680",
    "end": "910880"
  },
  {
    "text": "tens basically of of those runs to find",
    "start": "910880",
    "end": "914399"
  },
  {
    "text": "this issue",
    "start": "914399",
    "end": "915680"
  },
  {
    "text": "easier",
    "start": "915680",
    "end": "918000"
  },
  {
    "start": "917000",
    "end": "917000"
  },
  {
    "text": "so now we will go uh to observability",
    "start": "918000",
    "end": "921040"
  },
  {
    "text": "and debugging",
    "start": "921040",
    "end": "923440"
  },
  {
    "text": "and one of our best tools for",
    "start": "923440",
    "end": "925680"
  },
  {
    "text": "visualization is",
    "start": "925680",
    "end": "927920"
  },
  {
    "text": "is perv dash and it is really great",
    "start": "927920",
    "end": "930959"
  },
  {
    "text": "because",
    "start": "930959",
    "end": "933360"
  },
  {
    "text": "just satisfying slo is not always enough",
    "start": "933360",
    "end": "937040"
  },
  {
    "text": "here you can see example of pot startup",
    "start": "937040",
    "end": "939680"
  },
  {
    "text": "latency",
    "start": "939680",
    "end": "940959"
  },
  {
    "text": "and",
    "start": "940959",
    "end": "942160"
  },
  {
    "text": "we can see",
    "start": "942160",
    "end": "943680"
  },
  {
    "text": "for example",
    "start": "943680",
    "end": "946240"
  },
  {
    "text": "the blue line is 99th percentile",
    "start": "946560",
    "end": "950079"
  },
  {
    "text": "of pot startup latency and on the x axis",
    "start": "950079",
    "end": "954480"
  },
  {
    "text": "you can see different runs uh it's",
    "start": "954480",
    "end": "957120"
  },
  {
    "text": "around uh 100 points so i would say it's",
    "start": "957120",
    "end": "961120"
  },
  {
    "text": "like three months",
    "start": "961120",
    "end": "962880"
  },
  {
    "text": "and you can see that okay we had around",
    "start": "962880",
    "end": "966160"
  },
  {
    "text": "four seconds uh four seconds uh put",
    "start": "966160",
    "end": "969440"
  },
  {
    "text": "startup latency and then it decreased i",
    "start": "969440",
    "end": "971920"
  },
  {
    "text": "would say on average it's around",
    "start": "971920",
    "end": "974519"
  },
  {
    "text": "360 let's say",
    "start": "974519",
    "end": "977120"
  },
  {
    "text": "uh 300",
    "start": "977120",
    "end": "979120"
  },
  {
    "text": "300",
    "start": "979120",
    "end": "980639"
  },
  {
    "text": "uh sorry three second 3.6 seconds",
    "start": "980639",
    "end": "984240"
  },
  {
    "text": "so from four seconds to 3.6 seconds and",
    "start": "984240",
    "end": "987519"
  },
  {
    "text": "the question is was it some kind of",
    "start": "987519",
    "end": "989440"
  },
  {
    "text": "scalability improvement actually it was",
    "start": "989440",
    "end": "992079"
  },
  {
    "text": "a",
    "start": "992079",
    "end": "992800"
  },
  {
    "text": "regression that we found and then we",
    "start": "992800",
    "end": "994720"
  },
  {
    "text": "fixed but we will talk about it a little",
    "start": "994720",
    "end": "997199"
  },
  {
    "text": "bit",
    "start": "997199",
    "end": "998320"
  },
  {
    "text": "later so um peridot basically analyzes",
    "start": "998320",
    "end": "1001839"
  },
  {
    "text": "all those runs and allows us to compare",
    "start": "1001839",
    "end": "1005120"
  },
  {
    "text": "different runs different slis but also",
    "start": "1005120",
    "end": "1008399"
  },
  {
    "text": "let's say cpu usage of vm",
    "start": "1008399",
    "end": "1011440"
  },
  {
    "text": "or",
    "start": "1011440",
    "end": "1012240"
  },
  {
    "text": "memory usage",
    "start": "1012240",
    "end": "1013920"
  },
  {
    "text": "so it's very useful for finding",
    "start": "1013920",
    "end": "1015920"
  },
  {
    "text": "regressions that are not necessarily",
    "start": "1015920",
    "end": "1018639"
  },
  {
    "text": "violating",
    "start": "1018639",
    "end": "1020000"
  },
  {
    "text": "slo",
    "start": "1020000",
    "end": "1021920"
  },
  {
    "text": "except for that for each run cluster",
    "start": "1021920",
    "end": "1024798"
  },
  {
    "text": "loader has ability to",
    "start": "1024799",
    "end": "1027438"
  },
  {
    "text": "run prometheus within your cluster and",
    "start": "1027439",
    "end": "1029760"
  },
  {
    "text": "gather multiple",
    "start": "1029760",
    "end": "1032000"
  },
  {
    "text": "multiple metrics and for example cube",
    "start": "1032000",
    "end": "1034798"
  },
  {
    "text": "api server metrics or at cd",
    "start": "1034799",
    "end": "1037839"
  },
  {
    "text": "scheduler",
    "start": "1037839",
    "end": "1039438"
  },
  {
    "text": "and so on but also if you are running",
    "start": "1039439",
    "end": "1043918"
  },
  {
    "text": "for example dns",
    "start": "1043919",
    "end": "1046079"
  },
  {
    "text": "latency test",
    "start": "1046079",
    "end": "1048319"
  },
  {
    "text": "then",
    "start": "1048319",
    "end": "1049200"
  },
  {
    "text": "you can configure it quite easily to",
    "start": "1049200",
    "end": "1051840"
  },
  {
    "text": "also scrape metrics from",
    "start": "1051840",
    "end": "1054400"
  },
  {
    "text": "from",
    "start": "1054400",
    "end": "1055840"
  },
  {
    "text": "some dns spots that are making",
    "start": "1055840",
    "end": "1058480"
  },
  {
    "text": "requests to check what's the latest",
    "start": "1058480",
    "end": "1062400"
  },
  {
    "text": "and with those metrics we have pretty",
    "start": "1062400",
    "end": "1065120"
  },
  {
    "text": "pretty nice setup of grafana that allows",
    "start": "1065120",
    "end": "1067200"
  },
  {
    "text": "you to quite easily uh check",
    "start": "1067200",
    "end": "1071120"
  },
  {
    "text": "what kind of api calls for example were",
    "start": "1071120",
    "end": "1073840"
  },
  {
    "text": "evaluated in what what part of tests and",
    "start": "1073840",
    "end": "1076880"
  },
  {
    "text": "so on",
    "start": "1076880",
    "end": "1078799"
  },
  {
    "text": "except for that cluster loader also",
    "start": "1078799",
    "end": "1080720"
  },
  {
    "start": "1079000",
    "end": "1079000"
  },
  {
    "text": "automates gathering profiling data",
    "start": "1080720",
    "end": "1083919"
  },
  {
    "text": "uh it's basically",
    "start": "1083919",
    "end": "1085760"
  },
  {
    "text": "a cpu",
    "start": "1085760",
    "end": "1087200"
  },
  {
    "text": "but also memory and and mutexes",
    "start": "1087200",
    "end": "1091200"
  },
  {
    "text": "base and once you are running the test",
    "start": "1091200",
    "end": "1093600"
  },
  {
    "text": "with cluster loader what happens is then",
    "start": "1093600",
    "end": "1096559"
  },
  {
    "text": "at the end you also are getting a bunch",
    "start": "1096559",
    "end": "1098640"
  },
  {
    "text": "of profiling data uh which comes in",
    "start": "1098640",
    "end": "1101280"
  },
  {
    "text": "handy when dealing with cpu regression",
    "start": "1101280",
    "end": "1104799"
  },
  {
    "text": "or memory regression on",
    "start": "1104799",
    "end": "1108000"
  },
  {
    "text": "kubernetes master",
    "start": "1108000",
    "end": "1111120"
  },
  {
    "text": "so now let's go",
    "start": "1111120",
    "end": "1113200"
  },
  {
    "text": "to scalability tests what kind of tests",
    "start": "1113200",
    "end": "1115919"
  },
  {
    "text": "we have",
    "start": "1115919",
    "end": "1118320"
  },
  {
    "text": "we have periodic tests that's our these",
    "start": "1118400",
    "end": "1121120"
  },
  {
    "text": "are one of the most important for",
    "start": "1121120",
    "end": "1123280"
  },
  {
    "text": "finding",
    "start": "1123280",
    "end": "1124559"
  },
  {
    "text": "regression in kubernetes",
    "start": "1124559",
    "end": "1127200"
  },
  {
    "text": "we have release blocking tests but also",
    "start": "1127200",
    "end": "1129280"
  },
  {
    "text": "non-release blocking tests for release",
    "start": "1129280",
    "end": "1131520"
  },
  {
    "text": "blocking tests",
    "start": "1131520",
    "end": "1133039"
  },
  {
    "text": "we have performance tests",
    "start": "1133039",
    "end": "1135520"
  },
  {
    "text": "performance test basically tests all",
    "start": "1135520",
    "end": "1138240"
  },
  {
    "text": "those slos and we we for two scales one",
    "start": "1138240",
    "end": "1142000"
  },
  {
    "text": "is 100 notes and 5 000 nodes",
    "start": "1142000",
    "end": "1145520"
  },
  {
    "text": "but also we test correctness so",
    "start": "1145520",
    "end": "1148000"
  },
  {
    "text": "correctness is not only if all the slos",
    "start": "1148000",
    "end": "1151600"
  },
  {
    "text": "were",
    "start": "1151600",
    "end": "1152559"
  },
  {
    "text": "fine",
    "start": "1152559",
    "end": "1153520"
  },
  {
    "text": "that's the purpose of performance test",
    "start": "1153520",
    "end": "1156400"
  },
  {
    "text": "in correctness we also check if it's",
    "start": "1156400",
    "end": "1158799"
  },
  {
    "text": "actually functional",
    "start": "1158799",
    "end": "1161679"
  },
  {
    "text": "so maybe i will tell you a little bit",
    "start": "1161679",
    "end": "1163200"
  },
  {
    "text": "more how the performance test works so i",
    "start": "1163200",
    "end": "1166400"
  },
  {
    "text": "would say that the performance test you",
    "start": "1166400",
    "end": "1168880"
  },
  {
    "text": "can kind of have three main stages of",
    "start": "1168880",
    "end": "1172480"
  },
  {
    "text": "performance test",
    "start": "1172480",
    "end": "1175280"
  },
  {
    "text": "let's say we are starting with empty",
    "start": "1175280",
    "end": "1177039"
  },
  {
    "text": "cluster and the first stage stage is to",
    "start": "1177039",
    "end": "1179919"
  },
  {
    "text": "actually load the cluster so we have the",
    "start": "1179919",
    "end": "1182080"
  },
  {
    "text": "scalability envelope",
    "start": "1182080",
    "end": "1183840"
  },
  {
    "text": "and we are trying to maximize all those",
    "start": "1183840",
    "end": "1186240"
  },
  {
    "text": "dimensions that we think should be in",
    "start": "1186240",
    "end": "1189200"
  },
  {
    "text": "safe zone and once once we do that uh",
    "start": "1189200",
    "end": "1192400"
  },
  {
    "text": "what what happens is that the",
    "start": "1192400",
    "end": "1195360"
  },
  {
    "text": "next stage is",
    "start": "1195360",
    "end": "1197200"
  },
  {
    "text": "um scaling up and down",
    "start": "1197200",
    "end": "1199919"
  },
  {
    "text": "different deployments updating demon",
    "start": "1199919",
    "end": "1202240"
  },
  {
    "text": "sets so a bunch of different uh stuff",
    "start": "1202240",
    "end": "1204720"
  },
  {
    "text": "that's generally generating a pot return",
    "start": "1204720",
    "end": "1209760"
  },
  {
    "text": "and the last stage basically is deleting",
    "start": "1210720",
    "end": "1213840"
  },
  {
    "text": "all those things",
    "start": "1213840",
    "end": "1216400"
  },
  {
    "text": "and we test this in two scales 100 nodes",
    "start": "1216400",
    "end": "1219280"
  },
  {
    "text": "and 5 000 nodes",
    "start": "1219280",
    "end": "1221039"
  },
  {
    "text": "um because uh",
    "start": "1221039",
    "end": "1223440"
  },
  {
    "text": "100 nodes sometimes help us to pinpoint",
    "start": "1223440",
    "end": "1227039"
  },
  {
    "text": "exact comet",
    "start": "1227039",
    "end": "1229039"
  },
  {
    "text": "that",
    "start": "1229039",
    "end": "1229840"
  },
  {
    "text": "you know broke",
    "start": "1229840",
    "end": "1231280"
  },
  {
    "text": "kubernetes",
    "start": "1231280",
    "end": "1232720"
  },
  {
    "text": "and",
    "start": "1232720",
    "end": "1233600"
  },
  {
    "text": "5000 nodes are run only once once a day",
    "start": "1233600",
    "end": "1237120"
  },
  {
    "text": "for",
    "start": "1237120",
    "end": "1237919"
  },
  {
    "text": "non-release blocking we have different",
    "start": "1237919",
    "end": "1240400"
  },
  {
    "text": "tests",
    "start": "1240400",
    "end": "1241520"
  },
  {
    "text": "starting with cubemark that i mentioned",
    "start": "1241520",
    "end": "1243280"
  },
  {
    "text": "before but also storage and benchmarks",
    "start": "1243280",
    "end": "1247039"
  },
  {
    "text": "one of the one of my favorite benchmarks",
    "start": "1247039",
    "end": "1249840"
  },
  {
    "text": "is actually a column compiler",
    "start": "1249840",
    "end": "1253280"
  },
  {
    "text": "so",
    "start": "1253280",
    "end": "1254559"
  },
  {
    "text": "what we do is we took a performance test",
    "start": "1254559",
    "end": "1258480"
  },
  {
    "text": "uh we've",
    "start": "1258480",
    "end": "1259919"
  },
  {
    "text": "we kind of fixed all the of the",
    "start": "1259919",
    "end": "1262400"
  },
  {
    "text": "dependencies except for the golang",
    "start": "1262400",
    "end": "1264640"
  },
  {
    "text": "compiler so we are taking basically uh",
    "start": "1264640",
    "end": "1267440"
  },
  {
    "text": "one kubernetes version all the",
    "start": "1267440",
    "end": "1269520"
  },
  {
    "text": "dependencies are the same and what we",
    "start": "1269520",
    "end": "1272240"
  },
  {
    "text": "are changing is we are compiling uh",
    "start": "1272240",
    "end": "1275200"
  },
  {
    "text": "kubernetes with newer and newer golang",
    "start": "1275200",
    "end": "1278320"
  },
  {
    "text": "compiler",
    "start": "1278320",
    "end": "1279520"
  },
  {
    "text": "and we are checking whether uh whether",
    "start": "1279520",
    "end": "1281840"
  },
  {
    "text": "there's any regression",
    "start": "1281840",
    "end": "1283840"
  },
  {
    "text": "introduced by comic and this is super",
    "start": "1283840",
    "end": "1285760"
  },
  {
    "text": "interesting because actually in the past",
    "start": "1285760",
    "end": "1287679"
  },
  {
    "text": "we had um we had bunch of different",
    "start": "1287679",
    "end": "1290400"
  },
  {
    "text": "regressions caused by going",
    "start": "1290400",
    "end": "1293919"
  },
  {
    "text": "except for periodic tests we also do",
    "start": "1293919",
    "end": "1295919"
  },
  {
    "text": "have pre-submit tests",
    "start": "1295919",
    "end": "1297760"
  },
  {
    "text": "and this is only basically performance",
    "start": "1297760",
    "end": "1300880"
  },
  {
    "text": "test on the scale of 100 nodes and we",
    "start": "1300880",
    "end": "1304240"
  },
  {
    "text": "are running those pre-submits for",
    "start": "1304240",
    "end": "1306080"
  },
  {
    "text": "kubernetes so if you ever created pr",
    "start": "1306080",
    "end": "1309200"
  },
  {
    "text": "kubernetes to improve something and you",
    "start": "1309200",
    "end": "1311360"
  },
  {
    "text": "have this bunch of list of",
    "start": "1311360",
    "end": "1314720"
  },
  {
    "text": "pre-submits one of them is our six",
    "start": "1314720",
    "end": "1317120"
  },
  {
    "text": "capability",
    "start": "1317120",
    "end": "1318720"
  },
  {
    "text": "pre-submit",
    "start": "1318720",
    "end": "1321440"
  },
  {
    "text": "so how are we protecting",
    "start": "1322559",
    "end": "1326159"
  },
  {
    "text": "how are we protecting scalability",
    "start": "1326159",
    "end": "1328559"
  },
  {
    "text": "of kubernetes",
    "start": "1328559",
    "end": "1330320"
  },
  {
    "start": "1330000",
    "end": "1330000"
  },
  {
    "text": "so first of all",
    "start": "1330320",
    "end": "1331679"
  },
  {
    "text": "we do have no we do have test grid uh",
    "start": "1331679",
    "end": "1335120"
  },
  {
    "text": "everyone",
    "start": "1335120",
    "end": "1336240"
  },
  {
    "text": "it's publicly open you can go there and",
    "start": "1336240",
    "end": "1339280"
  },
  {
    "text": "and see okay so what's the status of",
    "start": "1339280",
    "end": "1342480"
  },
  {
    "text": "as",
    "start": "1342480",
    "end": "1343520"
  },
  {
    "text": "performance test at scale or what's the",
    "start": "1343520",
    "end": "1346640"
  },
  {
    "text": "performance",
    "start": "1346640",
    "end": "1349280"
  },
  {
    "text": "status of",
    "start": "1350240",
    "end": "1351840"
  },
  {
    "text": "scalability test",
    "start": "1351840",
    "end": "1353679"
  },
  {
    "text": "on scale of 100 nodes",
    "start": "1353679",
    "end": "1356400"
  },
  {
    "text": "and it's basically one of the",
    "start": "1356400",
    "end": "1358640"
  },
  {
    "text": "first tools that we use for protecting",
    "start": "1358640",
    "end": "1360880"
  },
  {
    "text": "our",
    "start": "1360880",
    "end": "1363039"
  },
  {
    "text": "protecting kubernetes from scalability",
    "start": "1363039",
    "end": "1364960"
  },
  {
    "text": "regressions",
    "start": "1364960",
    "end": "1367360"
  },
  {
    "text": "and the thing is that scalability is",
    "start": "1367360",
    "end": "1370320"
  },
  {
    "text": "very sensitive",
    "start": "1370320",
    "end": "1371760"
  },
  {
    "text": "so",
    "start": "1371760",
    "end": "1373120"
  },
  {
    "text": "we've seen regressions coming pretty",
    "start": "1373120",
    "end": "1375120"
  },
  {
    "text": "much from everywhere as i mentioned",
    "start": "1375120",
    "end": "1376960"
  },
  {
    "text": "before one of the examples is calling",
    "start": "1376960",
    "end": "1379760"
  },
  {
    "text": "but then also operating system",
    "start": "1379760",
    "end": "1381760"
  },
  {
    "text": "controllers api machinery scheduler and",
    "start": "1381760",
    "end": "1385280"
  },
  {
    "text": "cd couplet",
    "start": "1385280",
    "end": "1386720"
  },
  {
    "text": "and what we do is we either fix by",
    "start": "1386720",
    "end": "1389120"
  },
  {
    "text": "ourselves or we try hash that to",
    "start": "1389120",
    "end": "1391919"
  },
  {
    "text": "other seeks",
    "start": "1391919",
    "end": "1394639"
  },
  {
    "start": "1394000",
    "end": "1394000"
  },
  {
    "text": "so",
    "start": "1395120",
    "end": "1395919"
  },
  {
    "text": "i would like to tell you a little bit",
    "start": "1395919",
    "end": "1397679"
  },
  {
    "text": "more about two regressions that we",
    "start": "1397679",
    "end": "1399679"
  },
  {
    "text": "prevented",
    "start": "1399679",
    "end": "1401200"
  },
  {
    "text": "in 122.",
    "start": "1401200",
    "end": "1403120"
  },
  {
    "text": "they were pretty interesting",
    "start": "1403120",
    "end": "1404960"
  },
  {
    "text": "one is spot startup latency regression",
    "start": "1404960",
    "end": "1408400"
  },
  {
    "text": "so i was actually showing you this",
    "start": "1408400",
    "end": "1410559"
  },
  {
    "text": "regression in perv dash the difference",
    "start": "1410559",
    "end": "1413120"
  },
  {
    "text": "was around half second let's say",
    "start": "1413120",
    "end": "1417120"
  },
  {
    "text": "and this this regression was really",
    "start": "1417120",
    "end": "1419840"
  },
  {
    "text": "interesting because",
    "start": "1419840",
    "end": "1422240"
  },
  {
    "text": "by itself it didn't break our tests but",
    "start": "1422240",
    "end": "1424960"
  },
  {
    "text": "due to the perv dash we were able to",
    "start": "1424960",
    "end": "1427039"
  },
  {
    "text": "find it",
    "start": "1427039",
    "end": "1428799"
  },
  {
    "text": "and what happened was that the number of",
    "start": "1428799",
    "end": "1430960"
  },
  {
    "text": "routines in kubernetes increased twice",
    "start": "1430960",
    "end": "1434640"
  },
  {
    "text": "normally we have around five thousand",
    "start": "1434640",
    "end": "1437120"
  },
  {
    "text": "hundred five five hundred thousands of",
    "start": "1437120",
    "end": "1440000"
  },
  {
    "text": "core routines running in api server at",
    "start": "1440000",
    "end": "1442720"
  },
  {
    "text": "scale",
    "start": "1442720",
    "end": "1443760"
  },
  {
    "text": "but after this change",
    "start": "1443760",
    "end": "1445760"
  },
  {
    "text": "uh which was related to some",
    "start": "1445760",
    "end": "1447919"
  },
  {
    "text": "improvements to priority and fairness",
    "start": "1447919",
    "end": "1450000"
  },
  {
    "text": "the number of goal routines jumped to",
    "start": "1450000",
    "end": "1452799"
  },
  {
    "text": "the one million",
    "start": "1452799",
    "end": "1455120"
  },
  {
    "text": "and all of those all of those um slows",
    "start": "1455120",
    "end": "1458720"
  },
  {
    "text": "were still satisfied but but we saw that",
    "start": "1458720",
    "end": "1462320"
  },
  {
    "text": "uh put startup latency 99th percentile",
    "start": "1462320",
    "end": "1465799"
  },
  {
    "text": "significantly uh increased so we",
    "start": "1465799",
    "end": "1468960"
  },
  {
    "text": "basically debugged it and",
    "start": "1468960",
    "end": "1471679"
  },
  {
    "text": "and fix the issue",
    "start": "1471679",
    "end": "1473520"
  },
  {
    "text": "except for that we had really",
    "start": "1473520",
    "end": "1474880"
  },
  {
    "text": "interesting other regression um",
    "start": "1474880",
    "end": "1478640"
  },
  {
    "text": "which was really tricky because one of",
    "start": "1478640",
    "end": "1481039"
  },
  {
    "text": "the features was introduced also to pnf",
    "start": "1481039",
    "end": "1484480"
  },
  {
    "text": "and it happened to be that",
    "start": "1484480",
    "end": "1487600"
  },
  {
    "text": "bug was found in totally different place",
    "start": "1487600",
    "end": "1490559"
  },
  {
    "text": "and the priority and fairness was only a",
    "start": "1490559",
    "end": "1492880"
  },
  {
    "text": "trigger for this bug",
    "start": "1492880",
    "end": "1495360"
  },
  {
    "text": "the idea was that",
    "start": "1495360",
    "end": "1497200"
  },
  {
    "text": "you have",
    "start": "1497200",
    "end": "1498720"
  },
  {
    "text": "some periodic calls in api server like",
    "start": "1498720",
    "end": "1501919"
  },
  {
    "text": "updating releases of nodes",
    "start": "1501919",
    "end": "1505120"
  },
  {
    "text": "and",
    "start": "1505120",
    "end": "1506159"
  },
  {
    "text": "by default they happen",
    "start": "1506159",
    "end": "1508240"
  },
  {
    "text": "every 10 seconds",
    "start": "1508240",
    "end": "1510720"
  },
  {
    "text": "so if you have",
    "start": "1510720",
    "end": "1512480"
  },
  {
    "text": "5000 nodes cluster",
    "start": "1512480",
    "end": "1514880"
  },
  {
    "text": "then",
    "start": "1514880",
    "end": "1516400"
  },
  {
    "text": "you can on average have around 500",
    "start": "1516400",
    "end": "1519279"
  },
  {
    "text": "updates per second",
    "start": "1519279",
    "end": "1521200"
  },
  {
    "text": "and if those uh updates are evenly",
    "start": "1521200",
    "end": "1524000"
  },
  {
    "text": "distributed across the whole second then",
    "start": "1524000",
    "end": "1526480"
  },
  {
    "text": "it's fine but some changes in priority",
    "start": "1526480",
    "end": "1529679"
  },
  {
    "text": "and fairness caused those 500 or even",
    "start": "1529679",
    "end": "1532799"
  },
  {
    "text": "more calls to kind of like synchronize",
    "start": "1532799",
    "end": "1535840"
  },
  {
    "text": "and this synchronization is really bad",
    "start": "1535840",
    "end": "1537520"
  },
  {
    "text": "because the load was not spread",
    "start": "1537520",
    "end": "1539840"
  },
  {
    "text": "evenly so this was very interesting",
    "start": "1539840",
    "end": "1543039"
  },
  {
    "text": "and that's one of the regressions that",
    "start": "1543039",
    "end": "1545279"
  },
  {
    "text": "we also fixed recently",
    "start": "1545279",
    "end": "1548720"
  },
  {
    "text": "but also we are driving some scalability",
    "start": "1548720",
    "end": "1551039"
  },
  {
    "text": "improvements",
    "start": "1551039",
    "end": "1552320"
  },
  {
    "start": "1552000",
    "end": "1552000"
  },
  {
    "text": "and let's go through three of them",
    "start": "1552320",
    "end": "1555279"
  },
  {
    "text": "so the first one will be efficient watch",
    "start": "1555279",
    "end": "1557760"
  },
  {
    "text": "resumption",
    "start": "1557760",
    "end": "1558880"
  },
  {
    "text": "efficient watch resumption is",
    "start": "1558880",
    "end": "1561039"
  },
  {
    "text": "a really great",
    "start": "1561039",
    "end": "1562960"
  },
  {
    "text": "new improvement that helps you",
    "start": "1562960",
    "end": "1565760"
  },
  {
    "text": "with upgrading your your masters",
    "start": "1565760",
    "end": "1569360"
  },
  {
    "text": "so as you might know",
    "start": "1569360",
    "end": "1571279"
  },
  {
    "text": "if you if for example",
    "start": "1571279",
    "end": "1573679"
  },
  {
    "text": "kublaid wants to get secret or config",
    "start": "1573679",
    "end": "1576559"
  },
  {
    "text": "map",
    "start": "1576559",
    "end": "1577360"
  },
  {
    "text": "then what it does it's making get call",
    "start": "1577360",
    "end": "1580320"
  },
  {
    "text": "but then also it's making watch call and",
    "start": "1580320",
    "end": "1583440"
  },
  {
    "text": "this watch call",
    "start": "1583440",
    "end": "1584799"
  },
  {
    "text": "basically should be kept alive all the",
    "start": "1584799",
    "end": "1587840"
  },
  {
    "text": "time all the time",
    "start": "1587840",
    "end": "1589279"
  },
  {
    "text": "but when the api server restarts or you",
    "start": "1589279",
    "end": "1592400"
  },
  {
    "text": "upgrade it",
    "start": "1592400",
    "end": "1593520"
  },
  {
    "text": "then unfortunately this watch couldn't",
    "start": "1593520",
    "end": "1595679"
  },
  {
    "text": "be resumed",
    "start": "1595679",
    "end": "1597520"
  },
  {
    "text": "and this was a huge issue because",
    "start": "1597520",
    "end": "1599919"
  },
  {
    "text": "um let's imagine that you are upgrading",
    "start": "1599919",
    "end": "1601919"
  },
  {
    "text": "your cluster and then all those watches",
    "start": "1601919",
    "end": "1604559"
  },
  {
    "text": "break and then all",
    "start": "1604559",
    "end": "1606559"
  },
  {
    "text": "uh all 5000 machines are actually trying",
    "start": "1606559",
    "end": "1609440"
  },
  {
    "text": "to to get what they want at the same",
    "start": "1609440",
    "end": "1612720"
  },
  {
    "text": "time and this can quite easily overload",
    "start": "1612720",
    "end": "1616559"
  },
  {
    "text": "api servers so efficient watch",
    "start": "1616559",
    "end": "1618640"
  },
  {
    "text": "resumption actually fix the issue where",
    "start": "1618640",
    "end": "1620720"
  },
  {
    "text": "where the watch can be",
    "start": "1620720",
    "end": "1623360"
  },
  {
    "text": "can be resumed",
    "start": "1623360",
    "end": "1625440"
  },
  {
    "text": "except for that",
    "start": "1625440",
    "end": "1627039"
  },
  {
    "text": "we are working with",
    "start": "1627039",
    "end": "1628559"
  },
  {
    "text": "different seeks on priority and fairness",
    "start": "1628559",
    "end": "1631120"
  },
  {
    "text": "we are constantly improving it also from",
    "start": "1631120",
    "end": "1633600"
  },
  {
    "text": "scalability point of view",
    "start": "1633600",
    "end": "1636159"
  },
  {
    "text": "like first version for example of",
    "start": "1636159",
    "end": "1637840"
  },
  {
    "text": "priority and fairness",
    "start": "1637840",
    "end": "1639520"
  },
  {
    "text": "was not distinguishing between get goals",
    "start": "1639520",
    "end": "1642799"
  },
  {
    "text": "and list calls",
    "start": "1642799",
    "end": "1645200"
  },
  {
    "text": "also as",
    "start": "1645200",
    "end": "1646880"
  },
  {
    "text": "as you might think those watch calls are",
    "start": "1646880",
    "end": "1649039"
  },
  {
    "text": "also",
    "start": "1649039",
    "end": "1650640"
  },
  {
    "text": "important in kubernetes so we also added",
    "start": "1650640",
    "end": "1654480"
  },
  {
    "text": "support for initialization and things",
    "start": "1654480",
    "end": "1657279"
  },
  {
    "text": "like that and basically we are working",
    "start": "1657279",
    "end": "1659760"
  },
  {
    "text": "with with other",
    "start": "1659760",
    "end": "1661919"
  },
  {
    "text": "sick teams to to make it",
    "start": "1661919",
    "end": "1664159"
  },
  {
    "text": "better and better",
    "start": "1664159",
    "end": "1665919"
  },
  {
    "text": "to have better reliability of api server",
    "start": "1665919",
    "end": "1670159"
  },
  {
    "text": "and last but not least",
    "start": "1670159",
    "end": "1672159"
  },
  {
    "text": "immutable secrets",
    "start": "1672159",
    "end": "1673840"
  },
  {
    "text": "so imitable secrets",
    "start": "1673840",
    "end": "1676159"
  },
  {
    "text": "actually",
    "start": "1676159",
    "end": "1678640"
  },
  {
    "text": "reduced the load and potential load that",
    "start": "1679120",
    "end": "1682640"
  },
  {
    "text": "api server is receiving",
    "start": "1682640",
    "end": "1685440"
  },
  {
    "text": "going back to the same example if if you",
    "start": "1685440",
    "end": "1687840"
  },
  {
    "text": "have pod and the spot is using some",
    "start": "1687840",
    "end": "1690320"
  },
  {
    "text": "secret what happens underneath in",
    "start": "1690320",
    "end": "1692640"
  },
  {
    "text": "kubernetes is that",
    "start": "1692640",
    "end": "1695039"
  },
  {
    "text": "first of all kubernetes is kublad",
    "start": "1695039",
    "end": "1698399"
  },
  {
    "text": "specifically is getting the secret from",
    "start": "1698399",
    "end": "1700960"
  },
  {
    "text": "api server but then it also watches for",
    "start": "1700960",
    "end": "1703440"
  },
  {
    "text": "any possible changes",
    "start": "1703440",
    "end": "1705520"
  },
  {
    "text": "in most cases",
    "start": "1705520",
    "end": "1707120"
  },
  {
    "text": "those changes never happen and because",
    "start": "1707120",
    "end": "1709679"
  },
  {
    "text": "they never happen",
    "start": "1709679",
    "end": "1711120"
  },
  {
    "text": "then",
    "start": "1711120",
    "end": "1713279"
  },
  {
    "text": "then it doesn't make sense to keep this",
    "start": "1713279",
    "end": "1714960"
  },
  {
    "text": "watch so this introduced immutable",
    "start": "1714960",
    "end": "1717120"
  },
  {
    "text": "secrets that",
    "start": "1717120",
    "end": "1718640"
  },
  {
    "text": "help with reducing number of watches and",
    "start": "1718640",
    "end": "1721200"
  },
  {
    "text": "reducing load on",
    "start": "1721200",
    "end": "1723200"
  },
  {
    "text": "api server",
    "start": "1723200",
    "end": "1724640"
  },
  {
    "text": "so if you want to get involved",
    "start": "1724640",
    "end": "1726880"
  },
  {
    "text": "here is",
    "start": "1726880",
    "end": "1728080"
  },
  {
    "text": "some",
    "start": "1728080",
    "end": "1729440"
  },
  {
    "text": "links",
    "start": "1729440",
    "end": "1730480"
  },
  {
    "text": "you can find our homepage but also you",
    "start": "1730480",
    "end": "1733279"
  },
  {
    "text": "can join our slack channel our mailing",
    "start": "1733279",
    "end": "1736080"
  },
  {
    "text": "list",
    "start": "1736080",
    "end": "1736880"
  },
  {
    "text": "and if you want to get involved",
    "start": "1736880",
    "end": "1739279"
  },
  {
    "text": "and then you can just ping us on slack",
    "start": "1739279",
    "end": "1741600"
  },
  {
    "text": "or or just maybe",
    "start": "1741600",
    "end": "1743679"
  },
  {
    "text": "you can",
    "start": "1743679",
    "end": "1744559"
  },
  {
    "text": "check how what kind of issues we have in",
    "start": "1744559",
    "end": "1747679"
  },
  {
    "text": "our repositories with",
    "start": "1747679",
    "end": "1750000"
  },
  {
    "text": "getting started or have wanted",
    "start": "1750000",
    "end": "1753039"
  },
  {
    "text": "labels and",
    "start": "1753039",
    "end": "1755200"
  },
  {
    "text": "yeah looking forward to it if you are",
    "start": "1755200",
    "end": "1756960"
  },
  {
    "text": "interested",
    "start": "1756960",
    "end": "1758080"
  },
  {
    "text": "so that would be",
    "start": "1758080",
    "end": "1760880"
  },
  {
    "text": "all and thank you for attending and now",
    "start": "1760880",
    "end": "1763279"
  },
  {
    "text": "it's time for q a",
    "start": "1763279",
    "end": "1765360"
  },
  {
    "text": "thank you",
    "start": "1765360",
    "end": "1767840"
  }
]