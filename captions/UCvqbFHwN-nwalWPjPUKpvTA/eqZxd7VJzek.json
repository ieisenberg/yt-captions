[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "okay let's get started i'd like to thank everyone for joining us today welcome to today's cncf webinar",
    "start": "8960",
    "end": "15679"
  },
  {
    "text": "getting started with container runtime security using foul copy i'm jerry fallon i'll be",
    "start": "15679",
    "end": "20960"
  },
  {
    "text": "moderating today's webinar we'd like to welcome our presenter today loris dejani",
    "start": "20960",
    "end": "26400"
  },
  {
    "text": "cto and founder at sysdaig just a few housekeeping items before we get started during the webinar you are",
    "start": "26400",
    "end": "32640"
  },
  {
    "text": "not able to talk as an attendee there's a q a box at the bottom of your screen please feel free to drop your",
    "start": "32640",
    "end": "37760"
  },
  {
    "text": "questions in there and we'll get to as many as we can at the end this is an official webinar of the cncf",
    "start": "37760",
    "end": "43280"
  },
  {
    "text": "and as such is subject to the cncf code of conduct please do not add anything to the chat",
    "start": "43280",
    "end": "48399"
  },
  {
    "text": "or questions that would be in violation of the code of conduct please be respectful of all of your fellow participants and presenters",
    "start": "48399",
    "end": "56079"
  },
  {
    "text": "please note that the recording and slides will be posted later today on the cncf webinar page at cncf dot io slash webinars with that",
    "start": "56079",
    "end": "63520"
  },
  {
    "text": "i'll hand it over to lawrence to kick off today's presentation thank you very much and welcome",
    "start": "63520",
    "end": "72320"
  },
  {
    "start": "67000",
    "end": "92000"
  },
  {
    "text": "everyone to this webinar today we're going to talk about runtime security uh and",
    "start": "72320",
    "end": "80799"
  },
  {
    "text": "in particular runtime security with a an open source tool which is also a",
    "start": "80799",
    "end": "87040"
  },
  {
    "text": "cncf incubating uh project which is called falco",
    "start": "87040",
    "end": "93200"
  },
  {
    "start": "92000",
    "end": "182000"
  },
  {
    "text": "my name is loris de joanni i'm cto and founder of sysdig",
    "start": "93200",
    "end": "100079"
  },
  {
    "text": "sisdig is my second company my first company was called the case technologies and was the",
    "start": "100079",
    "end": "106799"
  },
  {
    "text": "uh commercial entity behind an open source network analyzer called wireshark",
    "start": "106799",
    "end": "112560"
  },
  {
    "text": "so i have done open source uh for my whole career",
    "start": "112560",
    "end": "119920"
  },
  {
    "text": "in the networking space first and uh now in cloud native",
    "start": "119920",
    "end": "127680"
  },
  {
    "text": "right now i work for a company called csd sysdig offers uh visibility",
    "start": "127680",
    "end": "135200"
  },
  {
    "text": "uh observability and security tools for cloud native kubernetes-based and",
    "start": "135200",
    "end": "142720"
  },
  {
    "text": "cloud and container-based uh applications uh sysdig is uh um",
    "start": "142720",
    "end": "151360"
  },
  {
    "text": "based heavily on open source but offers also commercial solutions on top of uh our uh",
    "start": "151360",
    "end": "159440"
  },
  {
    "text": "open source projects like like falco were heavily integrated with the rest of the ecosystem and we tr",
    "start": "159440",
    "end": "167040"
  },
  {
    "text": "we tend to focus on enterprise customers and we have essentially products that uh",
    "start": "167040",
    "end": "174080"
  },
  {
    "text": "scale and offer solutions to any scale when when it's a matter of security and",
    "start": "174080",
    "end": "180879"
  },
  {
    "text": "visibility for for kubernetes today we're going to talk about uh an",
    "start": "180879",
    "end": "186159"
  },
  {
    "start": "182000",
    "end": "248000"
  },
  {
    "text": "overview of runtime security uh comparing different approaches",
    "start": "186159",
    "end": "191920"
  },
  {
    "text": "uh when dealing with instrumentation for runtime security and understanding essentially the pros and cons",
    "start": "191920",
    "end": "198400"
  },
  {
    "text": "of instrumenting your containers your applications uh your workloads uh with the with these",
    "start": "198400",
    "end": "204799"
  },
  {
    "text": "different approaches we're then going to dive into falco i will give an overview of",
    "start": "204799",
    "end": "212640"
  },
  {
    "text": "falco and then i will try to become a little bit more practical to show you know uh a little bit of the",
    "start": "212640",
    "end": "220239"
  },
  {
    "text": "falco architecture how rules work and so on and then we'll try to put this in practice",
    "start": "220239",
    "end": "225519"
  },
  {
    "text": "uh quickly in terms of showing file connection and uh uh seeing seeing it",
    "start": "225519",
    "end": "233360"
  },
  {
    "text": "essentially in in a demo and then i will finish the presentation i will finish the webinar with a little",
    "start": "233360",
    "end": "239519"
  },
  {
    "text": "bit of history and what's coming next you know for falco so first of all overview of runtime",
    "start": "239519",
    "end": "247040"
  },
  {
    "text": "security let's start by what is runtime security",
    "start": "247040",
    "end": "252560"
  },
  {
    "start": "248000",
    "end": "392000"
  },
  {
    "text": "and why we need it so runtime security means being able to",
    "start": "252560",
    "end": "258079"
  },
  {
    "text": "observe and protect your software your containers",
    "start": "258079",
    "end": "264639"
  },
  {
    "text": "your applications as they run they run in developmental test environments or",
    "start": "264639",
    "end": "271440"
  },
  {
    "text": "they run even more importantly in production this is uh extremely important because",
    "start": "271440",
    "end": "279600"
  },
  {
    "text": "security breaches and risks happen while our software is running so",
    "start": "279600",
    "end": "285840"
  },
  {
    "text": "it's very important to protect the software during the whole you know cicd pipeline but in practice",
    "start": "285840",
    "end": "292479"
  },
  {
    "text": "the risks happen while our software is actually deployed somewhere and runs right um example",
    "start": "292479",
    "end": "300960"
  },
  {
    "text": "of uh stuff that you can accomplish with runtime security",
    "start": "300960",
    "end": "308240"
  },
  {
    "text": "detecting malicious behavior understanding if an image is drifted uh from",
    "start": "308240",
    "end": "315039"
  },
  {
    "text": "uh when we created it and we put it in in a repository uh find uh",
    "start": "315039",
    "end": "321600"
  },
  {
    "text": "issues or vulnerabilities that are only present in and only surface during the run time",
    "start": "321600",
    "end": "328800"
  },
  {
    "text": "of your containers detecting threats that are like zero-day",
    "start": "328800",
    "end": "335680"
  },
  {
    "text": "vulnerabilities that were not yet exposed and documented",
    "start": "335680",
    "end": "340880"
  },
  {
    "text": "when your software was created and was pushed to a repository",
    "start": "340880",
    "end": "346080"
  },
  {
    "text": "runtime security is an integral starting point for things like",
    "start": "346080",
    "end": "353520"
  },
  {
    "text": "incident response or forensics typically uh your forensics activity",
    "start": "353520",
    "end": "360160"
  },
  {
    "text": "uh you know understanding the blessed radios of an of an attack or something like that always starts essentially from uh",
    "start": "360160",
    "end": "367360"
  },
  {
    "text": "signals and data that are collected that are collected during runtime and of",
    "start": "367360",
    "end": "373360"
  },
  {
    "text": "course runtime is also uh extremely important in terms of compliance because uh",
    "start": "373360",
    "end": "378880"
  },
  {
    "text": "frameworks like pci nist or sock essentially depend very much on",
    "start": "378880",
    "end": "386800"
  },
  {
    "text": "understanding what's happening while your containers your applications are running this",
    "start": "386800",
    "end": "392960"
  },
  {
    "start": "392000",
    "end": "510000"
  },
  {
    "text": "slider depicts a little bit uh sort of the cicd journey right and i used to articulate this as",
    "start": "392960",
    "end": "401280"
  },
  {
    "text": "build run respond the phases of life the stages of life of",
    "start": "401280",
    "end": "407360"
  },
  {
    "text": "a modern application and as we know very well security",
    "start": "407360",
    "end": "413599"
  },
  {
    "text": "in cloud native is not only one of these items but it's",
    "start": "413599",
    "end": "420400"
  },
  {
    "text": "making sure that the whole journey of your code from your laptop to a production",
    "start": "420400",
    "end": "426720"
  },
  {
    "text": "environment and after you know production after maybe uh the containers",
    "start": "426720",
    "end": "431840"
  },
  {
    "text": "are gone is all properly monitored and uh secure um in during the build phase",
    "start": "431840",
    "end": "439919"
  },
  {
    "text": "uh it's important for example to have vulnerability scanning configuration validation during runtime as we're saying runtime",
    "start": "439919",
    "end": "446960"
  },
  {
    "text": "security vulnerability reporting security monitoring and then of course you need to respond to the",
    "start": "446960",
    "end": "452560"
  },
  {
    "text": "issues that happen so instant response forensics audit i it's",
    "start": "452560",
    "end": "458400"
  },
  {
    "text": "important to clarify that all of these are essential",
    "start": "458400",
    "end": "465520"
  },
  {
    "text": "uh when talking about the correct posture for cloud native applications this",
    "start": "465520",
    "end": "472479"
  },
  {
    "text": "webinar focuses specifically on the middle of the slide on the green part not because we think it's the only",
    "start": "472479",
    "end": "480319"
  },
  {
    "text": "important one or not because we think that falco is the only thing that you need to deploy but because because we think that falco",
    "start": "480319",
    "end": "487680"
  },
  {
    "text": "is is an important piece in the equation so as you think about these as you think about",
    "start": "487680",
    "end": "493599"
  },
  {
    "text": "your holistic approach to these uh this webinar will hopefully you know give you information",
    "start": "493599",
    "end": "500479"
  },
  {
    "text": "about how to cover the centerpiece and in particular how to do that with the cloud native cncf",
    "start": "500479",
    "end": "508160"
  },
  {
    "text": "tool which is falco let's go a little bit more",
    "start": "508160",
    "end": "515039"
  },
  {
    "start": "510000",
    "end": "543000"
  },
  {
    "text": "into the",
    "start": "515039",
    "end": "520240"
  },
  {
    "text": "technology here and into the actual implementation and let's start",
    "start": "520240",
    "end": "526720"
  },
  {
    "text": "talking first of all about uh what where runtime security starts runtime security starts",
    "start": "526720",
    "end": "533040"
  },
  {
    "text": "from being able to collect the best data from processes",
    "start": "533040",
    "end": "540160"
  },
  {
    "text": "and containers that are running live on your infrastructure so if we simplify the concept",
    "start": "540160",
    "end": "548399"
  },
  {
    "start": "543000",
    "end": "701000"
  },
  {
    "text": "as much as possible we have for example something like an application that is running inside the",
    "start": "548399",
    "end": "555040"
  },
  {
    "text": "container that is running on top of an operating",
    "start": "555040",
    "end": "560480"
  },
  {
    "text": "system in a machine and of course you you will have uh almost guaranteed you know",
    "start": "560480",
    "end": "565519"
  },
  {
    "text": "multiple applications multiple processes running on top of multiple containers running on",
    "start": "565519",
    "end": "571360"
  },
  {
    "text": "top of multiple machines so this is just a little piece",
    "start": "571360",
    "end": "576480"
  },
  {
    "text": "of of the equation but from this point of view essentially uh it's very important to collect",
    "start": "576480",
    "end": "583680"
  },
  {
    "text": "signals that are very rich for uh this application and in order to do",
    "start": "583680",
    "end": "589040"
  },
  {
    "text": "that essentially we need to be able to intercept the path of communication between the application and the external",
    "start": "589040",
    "end": "595760"
  },
  {
    "text": "world and this goes through the operating system right and we want to understand uh what this",
    "start": "595760",
    "end": "602399"
  },
  {
    "text": "application does on the network for example we want to understand what this application does on",
    "start": "602399",
    "end": "607600"
  },
  {
    "text": "the file system we want to understand what this application does in terms",
    "start": "607600",
    "end": "613040"
  },
  {
    "text": "of activity like executing commands spawning",
    "start": "613040",
    "end": "619120"
  },
  {
    "text": "processes doing inter-process communication accessing data all of this kind of stuff",
    "start": "619120",
    "end": "625279"
  },
  {
    "text": "and typically all of this information goes through the operating system and so we want to be able to intercept",
    "start": "625279",
    "end": "631680"
  },
  {
    "text": "it one way to do that is a technique so called ld preload",
    "start": "631680",
    "end": "637120"
  },
  {
    "text": "ld preload consists in taking a",
    "start": "637120",
    "end": "644000"
  },
  {
    "text": "running application and somehow replacing uh the libraries that this application",
    "start": "644160",
    "end": "649920"
  },
  {
    "text": "uses to talk to the to the operating system so we instead of using the normal for",
    "start": "649920",
    "end": "655519"
  },
  {
    "text": "example c libraries the c library is what what is typically used by the majority of the applications",
    "start": "655519",
    "end": "660640"
  },
  {
    "text": "to access the file system doing everything that has to do with with system calls like opening files",
    "start": "660640",
    "end": "666880"
  },
  {
    "text": "establishing connections all this kind of stuff we can somehow as the container loads replace the lib lipstick that is inside",
    "start": "666880",
    "end": "673839"
  },
  {
    "text": "the container by me maybe mapping a volume or something like that and you and then use an environment variable to tell the container okay go and use",
    "start": "673839",
    "end": "680880"
  },
  {
    "text": "this different lipstick which is instrumented the instrumented lipsy is able essentially to",
    "start": "680880",
    "end": "686560"
  },
  {
    "text": "act as a pass-through for all of these calls that the application does to the operating system",
    "start": "686560",
    "end": "692079"
  },
  {
    "text": "and uh collect them and ship them somewhere so that they can be analyzed and can be used as signal a",
    "start": "692079",
    "end": "699680"
  },
  {
    "text": "signal for runtime security ld preload is used by",
    "start": "699680",
    "end": "705440"
  },
  {
    "start": "701000",
    "end": "796000"
  },
  {
    "text": "many projects and vendors because it has the benefit",
    "start": "705440",
    "end": "711680"
  },
  {
    "text": "that it works pretty much everywhere it's uh it's efficient and",
    "start": "711680",
    "end": "718320"
  },
  {
    "text": "it's a relatively easy and relatively low risk way to",
    "start": "718320",
    "end": "723440"
  },
  {
    "text": "essentially observe any anything at a high granularity that your applications",
    "start": "723440",
    "end": "729040"
  },
  {
    "text": "are doing uh it also has limitations uh the big uh one uh is",
    "start": "729040",
    "end": "737040"
  },
  {
    "text": "uh probably uh the third one here on this slide which is uh um in order for you to be",
    "start": "737040",
    "end": "744240"
  },
  {
    "text": "able to replace ipc your application needs to you use libsy which is sort of a traditionally a good",
    "start": "744240",
    "end": "750399"
  },
  {
    "text": "assumption you know because uh everything c applications java applications python",
    "start": "750399",
    "end": "755760"
  },
  {
    "text": "you name it they all use libsy but there are nowadays whole classes of applications that don't",
    "start": "755760",
    "end": "762320"
  },
  {
    "text": "for example go as a programming language very interestingly really implements uh its own runtime",
    "start": "762320",
    "end": "769120"
  },
  {
    "text": "and one of the design kind of architectural choices of go is",
    "start": "769120",
    "end": "776079"
  },
  {
    "text": "that go produces fully static binaries so go doesn't use external libraries so the streak",
    "start": "776079",
    "end": "781839"
  },
  {
    "text": "of loading different libraries doesn't work for application which as you can imagine is a pretty strong limitation in uh",
    "start": "781839",
    "end": "789440"
  },
  {
    "text": "in in cloud native uh and of course you know nd preload requires you to go and",
    "start": "789440",
    "end": "794560"
  },
  {
    "text": "instrument every container so let's look at another way to do this another way is by using ptrace ptrace is a",
    "start": "794560",
    "end": "801839"
  },
  {
    "start": "796000",
    "end": "948000"
  },
  {
    "text": "functionality in the linux of operating system and it's actually the facility in linux",
    "start": "801839",
    "end": "809760"
  },
  {
    "text": "that is used to create stuff like debuggers so gdb is essentially a glorified",
    "start": "809760",
    "end": "817360"
  },
  {
    "text": "user interface on top of ptrace i don't want to diminish what gdp does it's something that all of",
    "start": "817360",
    "end": "823600"
  },
  {
    "text": "us use all the time but the magic to",
    "start": "823600",
    "end": "829199"
  },
  {
    "text": "freeze a target process uh set a breakpoint introspect the process the registers the",
    "start": "829199",
    "end": "834880"
  },
  {
    "text": "memory change stuff uh into into the target process this is all stuff",
    "start": "834880",
    "end": "840240"
  },
  {
    "text": "that uh gdp essentially just calls this this linux system call called betrays to",
    "start": "840240",
    "end": "845920"
  },
  {
    "text": "do that um ptrace uh is uh nice because it is a facility of the",
    "start": "845920",
    "end": "853279"
  },
  {
    "text": "operating system so it's much more accurate for example when you when you use b tracing",
    "start": "853279",
    "end": "858480"
  },
  {
    "text": "you don't need a dynamic library to do the instrumentation so um these covers for example go",
    "start": "858480",
    "end": "865279"
  },
  {
    "text": "processes uh p trace is a language and stack independent because it relies on linux on the operating system and not on",
    "start": "865279",
    "end": "872320"
  },
  {
    "text": "a library or on a piece of functionality or on the language that you're that you're using uh it's also safer",
    "start": "872320",
    "end": "879120"
  },
  {
    "text": "than any preload because it doesn't require you to do the relatively dirty trick of repair",
    "start": "879120",
    "end": "884160"
  },
  {
    "text": "replacing libraries but you can do that by just telling petraeus okay i want essentially to introspect every single system call",
    "start": "884160",
    "end": "890959"
  },
  {
    "text": "so beautiful only problem is uh ptrace is very inefficient because",
    "start": "890959",
    "end": "898959"
  },
  {
    "text": "if you look at the diagram every time there's essentially a request like opening a file or establishing a connection",
    "start": "898959",
    "end": "904959"
  },
  {
    "text": "you need to do a bunch of stuff essentially in the operating system to to pass all of this data",
    "start": "904959",
    "end": "912880"
  },
  {
    "text": "to a separate process which is depicted as an agent here in the diagram to uh that can receive",
    "start": "912880",
    "end": "919360"
  },
  {
    "text": "this data so um ptrace is uh the uh magic bullet for uh",
    "start": "919360",
    "end": "927120"
  },
  {
    "text": "for everything with with the only problem that um it's uh uh",
    "start": "927120",
    "end": "934639"
  },
  {
    "text": "it it's too slow typically to be used in production and of course with",
    "start": "934639",
    "end": "940480"
  },
  {
    "text": "bitrates as well we need to uh",
    "start": "940480",
    "end": "945680"
  },
  {
    "text": "we are required to instrument every container let's look at another possible way to do",
    "start": "945680",
    "end": "952839"
  },
  {
    "start": "948000",
    "end": "1061000"
  },
  {
    "text": "this which is a kernel based instrumentation so what we do here",
    "start": "952839",
    "end": "958240"
  },
  {
    "text": "is slightly different here we have still a diagram of the machine and",
    "start": "958240",
    "end": "964560"
  },
  {
    "text": "we see three containers on the on this machine uh based on three",
    "start": "964560",
    "end": "971199"
  },
  {
    "text": "different essentially container runtimes and what happens here is",
    "start": "971199",
    "end": "977360"
  },
  {
    "text": "you deploy essentially your instrumentation as container running",
    "start": "977360",
    "end": "984000"
  },
  {
    "text": "on the same machine these container what it does is it",
    "start": "984000",
    "end": "992079"
  },
  {
    "text": "instruments the operating system linux nowadays",
    "start": "992079",
    "end": "997279"
  },
  {
    "text": "offers a functionality called ebpf ebpf uh is the acronym for extended berkeley",
    "start": "997279",
    "end": "1004800"
  },
  {
    "text": "filter and it's essentially a full-blown powerful virtual machine that can be",
    "start": "1004800",
    "end": "1011600"
  },
  {
    "text": "used to execute programs inside the kernel of the operating system ebpm",
    "start": "1011600",
    "end": "1018800"
  },
  {
    "text": "is cool because essentially it allows you to add functionality to the kernel of the operating system",
    "start": "1018800",
    "end": "1024079"
  },
  {
    "text": "but in a way that is fully validated and that guarantees",
    "start": "1024079",
    "end": "1031918"
  },
  {
    "text": "that you are not crashing the operating systems or generating deadlocks in the operating system",
    "start": "1031919",
    "end": "1038079"
  },
  {
    "text": "by doing this it's possible essentially to create a layer of instrumentation that now sits underneath the containers",
    "start": "1038079",
    "end": "1044558"
  },
  {
    "text": "so you don't need to live inside the containers and that is able to without",
    "start": "1044559",
    "end": "1050720"
  },
  {
    "text": "any change without any sidecar or installing anything in the container it's able to uh",
    "start": "1050720",
    "end": "1058640"
  },
  {
    "text": "collect the data that is required uh kernel instrumentation is the advantage",
    "start": "1059039",
    "end": "1064480"
  },
  {
    "start": "1061000",
    "end": "1114000"
  },
  {
    "text": "of being extremely accurate because it runs in the kernel of the operating system you cannot fool it",
    "start": "1064480",
    "end": "1070799"
  },
  {
    "text": "you it's extremely efficient and extremely",
    "start": "1070799",
    "end": "1077120"
  },
  {
    "text": "scalable extremely efficient because the data is collected um in",
    "start": "1077120",
    "end": "1082799"
  },
  {
    "text": "a way uh just really where it's generated in the corner of the operating system it's scalable because",
    "start": "1082799",
    "end": "1088880"
  },
  {
    "text": "you don't need it's the only way when where you don't need to put something inside every every container but",
    "start": "1088880",
    "end": "1094640"
  },
  {
    "text": "another container an external container can do that so imagine having i don't know enter containers running",
    "start": "1094640",
    "end": "1101840"
  },
  {
    "text": "on a single machine with ld preload and with ptrace you will need to instrument under different things with",
    "start": "1101840",
    "end": "1108240"
  },
  {
    "text": "kernel level instrumentation you will only do need to do the instrumentation one once when talking about instrumentation",
    "start": "1108240",
    "end": "1116160"
  },
  {
    "start": "1114000",
    "end": "1162000"
  },
  {
    "text": "the other thing that is important is metadata collection and applying metadata",
    "start": "1116160",
    "end": "1121679"
  },
  {
    "text": "to the detections so this slide shows a bunch of hosts each of which is",
    "start": "1121679",
    "end": "1127600"
  },
  {
    "text": "running four containers and here the color coding is essentially the service that these containers",
    "start": "1127600",
    "end": "1134080"
  },
  {
    "text": "uh belong to uh when uh uh working",
    "start": "1134080",
    "end": "1140320"
  },
  {
    "text": "with anything related to runtime security you typically don't want to approach things like on the left side of",
    "start": "1140320",
    "end": "1145679"
  },
  {
    "text": "the slide but you want to look at things like on the on the right side so service by service you want to",
    "start": "1145679",
    "end": "1151679"
  },
  {
    "text": "apply rules uh that are per name space per service per deployment",
    "start": "1151679",
    "end": "1159039"
  },
  {
    "text": "and not per host or per con per container all right this is the theory okay now",
    "start": "1159039",
    "end": "1165679"
  },
  {
    "start": "1162000",
    "end": "1299000"
  },
  {
    "text": "let's move into the practice and let's start talking about falco what is falco first of all palco is a",
    "start": "1165679",
    "end": "1171760"
  },
  {
    "text": "runtime security engine based on observability from the kernel",
    "start": "1171760",
    "end": "1177039"
  },
  {
    "text": "so when i was showing you the different options before the one that falco privileges when",
    "start": "1177039",
    "end": "1182320"
  },
  {
    "text": "possible is collection based on access to the kernel of the operating",
    "start": "1182320",
    "end": "1188480"
  },
  {
    "text": "system because of the reasons that i was mentioning before sometimes this is not possible and i will show it to you uh",
    "start": "1188480",
    "end": "1194880"
  },
  {
    "text": "quickly in the demo in that case we switch to other mechanisms like ptrace but by",
    "start": "1194880",
    "end": "1201280"
  },
  {
    "text": "default falco wants to be as scalable and efficient as possible so when bpf is available that's what we",
    "start": "1201280",
    "end": "1208799"
  },
  {
    "text": "use falco is designed to be consumable and modular so as i was saying falco's",
    "start": "1208799",
    "end": "1215679"
  },
  {
    "text": "designed not to be your complete solution for kubernetes security for cloud-native security but is",
    "start": "1215679",
    "end": "1221840"
  },
  {
    "text": "designed to be a component in it that can be orchestrated and can",
    "start": "1221840",
    "end": "1226880"
  },
  {
    "text": "be composed together with other stuff to create the full solution that is ideal",
    "start": "1226880",
    "end": "1232159"
  },
  {
    "text": "for you and this full solution of course can be part of a something that has been",
    "start": "1232159",
    "end": "1239600"
  },
  {
    "text": "completely out of a community built in maintained",
    "start": "1239600",
    "end": "1244960"
  },
  {
    "text": "pieces but falco is also designed to potentially if required to be connected to",
    "start": "1244960",
    "end": "1253200"
  },
  {
    "text": "proprietary components and to into commercial products",
    "start": "1253200",
    "end": "1258320"
  },
  {
    "text": "falco puts a lot of emphasis not only or on using the kernel as a source of",
    "start": "1258400",
    "end": "1266159"
  },
  {
    "text": "truth but also on enriching the data with metadata so that your approach can be service oriented uh and um uh",
    "start": "1266159",
    "end": "1275360"
  },
  {
    "text": "it essentially allows you to create uh or to leverage a bunch of rules and then it gives you alarms when one of",
    "start": "1275360",
    "end": "1282400"
  },
  {
    "text": "these rules is is violated falco is a cncf incubating project uh we released falco in 2016",
    "start": "1282400",
    "end": "1290640"
  },
  {
    "text": "we became part of cncf in 2018 and it was promoted to incubation in",
    "start": "1290640",
    "end": "1297480"
  },
  {
    "text": "2019. we are strong strongly driven as a",
    "start": "1297480",
    "end": "1303039"
  },
  {
    "start": "1299000",
    "end": "1336000"
  },
  {
    "text": "community by community principles in particular we are inspired by everything that is",
    "start": "1303039",
    "end": "1309360"
  },
  {
    "text": "called native and kubernetes first in the way we manage our community we really try",
    "start": "1309360",
    "end": "1314880"
  },
  {
    "text": "to be you know like the voice and of our end users and work together with",
    "start": "1314880",
    "end": "1320559"
  },
  {
    "text": "them but we also want to be vendor friendly and vendor neutral so we",
    "start": "1320559",
    "end": "1326880"
  },
  {
    "text": "as you can see there are multiple commercial entities that take falco and enhance it and base their",
    "start": "1326880",
    "end": "1333919"
  },
  {
    "text": "products uh on top of funko uh a couple of examples of uh using falco in production",
    "start": "1333919",
    "end": "1341280"
  },
  {
    "start": "1336000",
    "end": "1412000"
  },
  {
    "text": "one is shopify big production environment [Music]",
    "start": "1341280",
    "end": "1346480"
  },
  {
    "text": "it's essentially a pci compliant environment in the cloud in aws slash",
    "start": "1346480",
    "end": "1353440"
  },
  {
    "text": "eks and this is you know shopify is a big company that does a lot of transactions",
    "start": "1353440",
    "end": "1359840"
  },
  {
    "text": "and they are you know 150 million dollars of transactions",
    "start": "1359840",
    "end": "1365440"
  },
  {
    "text": "uh per day are essentially a pro in an environment that is protected by",
    "start": "1365440",
    "end": "1370559"
  },
  {
    "text": "falco and where falco contributes to establishing",
    "start": "1370559",
    "end": "1376159"
  },
  {
    "text": "essentially pci compliance and making environment pci a pci compliant shopify",
    "start": "1376159",
    "end": "1382799"
  },
  {
    "text": "specifically i recommend to go to the cncf youtube youtube channel",
    "start": "1382799",
    "end": "1390080"
  },
  {
    "text": "uh there was a wonderful keynote at the last uh kubecon uh in in europe in",
    "start": "1390080",
    "end": "1397919"
  },
  {
    "text": "in amsterdam where the shopify team together with uh chris",
    "start": "1397919",
    "end": "1403360"
  },
  {
    "text": "nova showed essentially uh on stage falco used by shopify and it's very",
    "start": "1403360",
    "end": "1410640"
  },
  {
    "text": "interesting if you want to learn more about their use case another use case is sky scanner sky scanner has a 200 plus nodes",
    "start": "1410640",
    "end": "1419760"
  },
  {
    "start": "1412000",
    "end": "1465000"
  },
  {
    "text": "on 30 clusters with 160 services on top of them and i have a link to the blog post in",
    "start": "1419760",
    "end": "1425679"
  },
  {
    "text": "which they describe essentially how they use falco and the kind of uh evaluation that they did",
    "start": "1425679",
    "end": "1431120"
  },
  {
    "text": "with falco before putting it in into production for example it's very interesting to look how important for them",
    "start": "1431120",
    "end": "1437600"
  },
  {
    "text": "the overhead of this instrumentation was and we go back to you know ptrace versus kernel module and so on",
    "start": "1437600",
    "end": "1443600"
  },
  {
    "text": "and how they really scrutinized you know falco performance wise and overhead wise",
    "start": "1443600",
    "end": "1450080"
  },
  {
    "text": "before deploying it on their on their infrastructure and blog posts like that are cool for me to see because of course",
    "start": "1450080",
    "end": "1455840"
  },
  {
    "text": "the falco community and the falco engineers put a lot of effort into making it efficient so seeing how",
    "start": "1455840",
    "end": "1461520"
  },
  {
    "text": "it can be used in production is always very very rewarding architecturally falco is relatively",
    "start": "1461520",
    "end": "1467840"
  },
  {
    "start": "1465000",
    "end": "1529000"
  },
  {
    "text": "simple it has inputs an engine and outputs",
    "start": "1467840",
    "end": "1473679"
  },
  {
    "text": "uh inputs are all of these events coming from from instrument in the application so",
    "start": "1473679",
    "end": "1479279"
  },
  {
    "text": "system calls kernel events activity events user user activity",
    "start": "1479279",
    "end": "1484880"
  },
  {
    "text": "network data all of this kind of stuff and also kubernetes events in the form of audit events",
    "start": "1484880",
    "end": "1492080"
  },
  {
    "text": "and in the form of metadata all of this goes into the engine which receives",
    "start": "1492080",
    "end": "1499039"
  },
  {
    "text": "rules as as its other input and essentially the rules are matched",
    "start": "1499039",
    "end": "1505039"
  },
  {
    "text": "against the stream of data that is constantly coming into the engine and if rules matches",
    "start": "1505039",
    "end": "1510960"
  },
  {
    "text": "if rules match a uh an alert is generated through a number",
    "start": "1510960",
    "end": "1517120"
  },
  {
    "text": "of ways again falco's designed to be composable so grpc web books syslog sdk is like even",
    "start": "1517120",
    "end": "1522480"
  },
  {
    "text": "you you name it you know we have uh all of these ways essentially to notify you that the sun rule was was violated",
    "start": "1522480",
    "end": "1530159"
  },
  {
    "start": "1529000",
    "end": "1567000"
  },
  {
    "text": "collection wise um two",
    "start": "1530159",
    "end": "1535279"
  },
  {
    "text": "great sources of data as i was saying one is the system calls the other one is the kubernetes events",
    "start": "1535279",
    "end": "1541039"
  },
  {
    "text": "and rules can be created on both and can be mixed and matched uh so you",
    "start": "1541039",
    "end": "1546720"
  },
  {
    "text": "can mix a rule that is specific on for example of a system called like opening a",
    "start": "1546720",
    "end": "1552159"
  },
  {
    "text": "specific file which one which is based on a kubernetes action like i don't know spinning up uh a a service or something",
    "start": "1552159",
    "end": "1559760"
  },
  {
    "text": "like that and and and rules essentially can take these two sources of data and alert on on either one or both",
    "start": "1559760",
    "end": "1566240"
  },
  {
    "text": "together rules so what's a rule exactly compared to other tools like for example",
    "start": "1566240",
    "end": "1574240"
  },
  {
    "start": "1567000",
    "end": "1658000"
  },
  {
    "text": "i don't know an oppa to mention something that is a very popular rule engine for kubernetes",
    "start": "1574240",
    "end": "1580159"
  },
  {
    "text": "falco focuses more on staying close to the edge high performance and simplicity",
    "start": "1580159",
    "end": "1588720"
  },
  {
    "text": "so when oppa optimizes a little bit more for a high level",
    "start": "1588720",
    "end": "1595919"
  },
  {
    "text": "overview on the cluster and high expressiveness falco focuses more on being everywhere",
    "start": "1595919",
    "end": "1603279"
  },
  {
    "text": "seeing stuff everywhere very very efficiently with with low overhead and rules that are",
    "start": "1603279",
    "end": "1610240"
  },
  {
    "text": "seem simpler to craft essentially some examples",
    "start": "1610240",
    "end": "1616720"
  },
  {
    "text": "a share is running a container the rule is container id different from host and process name equal bash",
    "start": "1616720",
    "end": "1624320"
  },
  {
    "text": "overwrite system binaries uh there there needs to be access on a file descriptor in a directory and this",
    "start": "1625200",
    "end": "1631919"
  },
  {
    "text": "directory can be you know one of the directories that are uh in this room so as you can see it's",
    "start": "1631919",
    "end": "1637600"
  },
  {
    "text": "essentially boolean expressions that can be used to chain",
    "start": "1637600",
    "end": "1643840"
  },
  {
    "text": "checks that are done on different",
    "start": "1644880",
    "end": "1650000"
  },
  {
    "text": "different fields and the list of fields is is pretty pretty big and it's essentially",
    "start": "1650000",
    "end": "1655120"
  },
  {
    "text": "documented uh in the in in the funko guitar example of",
    "start": "1655120",
    "end": "1660320"
  },
  {
    "start": "1658000",
    "end": "1697000"
  },
  {
    "text": "for example spawn a shell a database spawns a shell",
    "start": "1660320",
    "end": "1667760"
  },
  {
    "text": "this is the condition you know process name in database binaries and process is spawned and",
    "start": "1667760",
    "end": "1675039"
  },
  {
    "text": "the process name is not one of the processes that you would expect",
    "start": "1675039",
    "end": "1680480"
  },
  {
    "text": "there's an output which is what you see when you receive a notification when this is violated",
    "start": "1680480",
    "end": "1687440"
  },
  {
    "text": "the source as we as we were saying it can be kubernetes or system called description and um",
    "start": "1687440",
    "end": "1695520"
  },
  {
    "text": "priority and text uh rules can contain lists and macros",
    "start": "1695520",
    "end": "1700960"
  },
  {
    "text": "so that can be written in a more compact and reusable way and of course we don't expect you to you",
    "start": "1700960",
    "end": "1708880"
  },
  {
    "start": "1705000",
    "end": "1766000"
  },
  {
    "text": "know download falco and then to write your own rules and learn the syntax and so on of course",
    "start": "1708880",
    "end": "1714399"
  },
  {
    "text": "you are welcome to do that and we try to document this as well as possible but uh falco comes packaged with tens",
    "start": "1714399",
    "end": "1721679"
  },
  {
    "text": "and tens and that's probably hundreds at this point of rules that are pre-packaged for you by",
    "start": "1721679",
    "end": "1727760"
  },
  {
    "text": "an active community of people that maintains these rules keeps an eye",
    "start": "1727760",
    "end": "1732960"
  },
  {
    "text": "on the noisiness uh adds new or constantly new applications and new tools",
    "start": "1732960",
    "end": "1738720"
  },
  {
    "text": "and uh and and stuff like that rules are even you",
    "start": "1738720",
    "end": "1746080"
  },
  {
    "text": "know aggregated and tagged based on the different uses for example there's",
    "start": "1746080",
    "end": "1751200"
  },
  {
    "text": "a miter rule metrics where they where rules are tagged and and you can you have a subset of rules",
    "start": "1751200",
    "end": "1756640"
  },
  {
    "text": "that is just for miter framework you know and and you can use those you know exclusively with falco if you want to",
    "start": "1756640",
    "end": "1763200"
  },
  {
    "text": "essentially be compliant with that framework",
    "start": "1763200",
    "end": "1768320"
  },
  {
    "start": "1766000",
    "end": "2173000"
  },
  {
    "text": "all right um let's start with the slides uh for a second and let's actually take a",
    "start": "1768320",
    "end": "1774000"
  },
  {
    "text": "look so let me actually go into my virtual machine and uh let me just",
    "start": "1774000",
    "end": "1780640"
  },
  {
    "text": "run falco you know right right now this is the possible way uh to run falco uh and and give it a try",
    "start": "1780640",
    "end": "1787200"
  },
  {
    "text": "you know you download the turbo uh from uh the falco the falco repository and",
    "start": "1787200",
    "end": "1793440"
  },
  {
    "text": "then you just run it you know and when you do that nothing happens but uh",
    "start": "1793440",
    "end": "1798720"
  },
  {
    "text": "i can you know start operating in this machine and i say i can",
    "start": "1798720",
    "end": "1804960"
  },
  {
    "text": "generate some pseudo malicious activity like let's uh modify a binary file which is",
    "start": "1806000",
    "end": "1814240"
  },
  {
    "text": "something that is uh never uh that nice and immediately as you can see focus just",
    "start": "1814240",
    "end": "1819840"
  },
  {
    "text": "under the hood here in this machine and uh looking at uh at what's happening and",
    "start": "1819840",
    "end": "1825440"
  },
  {
    "text": "the text is and tells me essentially uh file below binary directory open for writing",
    "start": "1825440",
    "end": "1831360"
  },
  {
    "text": "it tells me you know information about the user information about the process that did did that was the target for this uh the",
    "start": "1831360",
    "end": "1839120"
  },
  {
    "text": "sorry the command line that generated this the process that was the target for this was the parent uh all of this kind of",
    "start": "1839120",
    "end": "1846080"
  },
  {
    "text": "nice information that right now i just get on standard output which is one of the many ways falco keeps out its output",
    "start": "1846080",
    "end": "1854080"
  },
  {
    "text": "but it can be you know anything else that we want let me try to do actually to start a",
    "start": "1854080",
    "end": "1860799"
  },
  {
    "text": "container so i'm just starting in a ubuntu container and when i do this immediately falco",
    "start": "1860799",
    "end": "1868880"
  },
  {
    "text": "tells me okay somebody spawned a shell in a container which is normal here because it's an",
    "start": "1868880",
    "end": "1874640"
  },
  {
    "text": "ubuntu container but you would agree with me that in production is never good when somebody",
    "start": "1874640",
    "end": "1880000"
  },
  {
    "text": "just spawns a shell in a container that is supposed to be mutable so falco",
    "start": "1880000",
    "end": "1885279"
  },
  {
    "text": "gives me a notice for that you know okay careful because there's a container now and somebody",
    "start": "1885279",
    "end": "1890720"
  },
  {
    "text": "that has a root share essentially inside the container and again inside the container i can generate some",
    "start": "1890720",
    "end": "1896559"
  },
  {
    "text": "malicious activity like uh garbage into slash dev slash fake",
    "start": "1896559",
    "end": "1905200"
  },
  {
    "text": "device for example so i simulated creating essentially a",
    "start": "1905200",
    "end": "1911120"
  },
  {
    "text": "file under dead you know and and falco essentially tells me that a program that it doesn't trust",
    "start": "1911120",
    "end": "1917279"
  },
  {
    "text": "uh has done it so as you can see now i'm inside the container but falco even even if it's running in",
    "start": "1917279",
    "end": "1923600"
  },
  {
    "text": "the host is able to essentially keep track of what's happening inside this specific",
    "start": "1923600",
    "end": "1929519"
  },
  {
    "text": "container in any other container and it doesn't matter how many have",
    "start": "1929519",
    "end": "1936159"
  },
  {
    "text": "running on this machine because it uses it it installed you know this literally bpf3 in the kernel of the",
    "start": "1936159",
    "end": "1941840"
  },
  {
    "text": "operating system and now sees everything at the same time with maximum efficiency",
    "start": "1941840",
    "end": "1946880"
  },
  {
    "text": "and by barely slowing down the target [Music] the target processes of course i can",
    "start": "1946880",
    "end": "1954240"
  },
  {
    "text": "also run falco on this machine as a docker container so now falco",
    "start": "1954240",
    "end": "1962320"
  },
  {
    "text": "yeah just started inside a container this is an even simpler way to run falco but notice how i can",
    "start": "1962320",
    "end": "1970240"
  },
  {
    "text": "again you know generate malicious activity anywhere in the machine and even if it's",
    "start": "1970240",
    "end": "1975279"
  },
  {
    "text": "if it's living in a container falco is still able to see for uh its container the host and any",
    "start": "1975279",
    "end": "1982240"
  },
  {
    "text": "other container so uh the beauty of this is that uh yeah at that point deploying something like",
    "start": "1982240",
    "end": "1989200"
  },
  {
    "text": "this especially orchestrating the deployment of something like this becomes very nice you don't need to have cycles",
    "start": "1989200",
    "end": "1994960"
  },
  {
    "text": "you don't need to have to link libraries you don't need to to use all of these more invasive ways",
    "start": "1994960",
    "end": "2001279"
  },
  {
    "text": "to deploy it you just use a demon set on kubernetes and you tell kubernetes i would like to have one of these",
    "start": "2001279",
    "end": "2007279"
  },
  {
    "text": "running on each of my physical hosts and then you know uh with a little bit of glue configuration to tell essentially falco",
    "start": "2007279",
    "end": "2013600"
  },
  {
    "text": "where to pipe these events uh you're you're good you're covered right so that's uh",
    "start": "2013600",
    "end": "2019039"
  },
  {
    "text": "the the power and the richness of uh of falco similarly uh",
    "start": "2019039",
    "end": "2025600"
  },
  {
    "text": "if we want to look at these uh actually let me go out to full screen um",
    "start": "2025600",
    "end": "2033440"
  },
  {
    "text": "here i have actually uh a more like realistic deployment of falco where falco",
    "start": "2033440",
    "end": "2040000"
  },
  {
    "text": "is running uh on aws in this case on a far gate task",
    "start": "2040000",
    "end": "2047039"
  },
  {
    "text": "so here i have my task and i can",
    "start": "2047039",
    "end": "2052720"
  },
  {
    "text": "take the ip address of one of the containers on my task and i",
    "start": "2054240",
    "end": "2062000"
  },
  {
    "text": "and i can go and log into it",
    "start": "2065200",
    "end": "2070720"
  },
  {
    "text": "looks like i lost my connectivity",
    "start": "2071119",
    "end": "2077280"
  },
  {
    "text": "is the right address no",
    "start": "2077520",
    "end": "2081200"
  },
  {
    "text": "there it is and then go inside and i can do the same",
    "start": "2083679",
    "end": "2088720"
  },
  {
    "text": "i can just simulate uh slash uh bin slash cat",
    "start": "2088720",
    "end": "2094320"
  },
  {
    "text": "the same thing that i did before so now i logged into into the container and uh i uh",
    "start": "2094320",
    "end": "2102160"
  },
  {
    "text": "activity and now i can go and look at the logs in cloud watching as you can see",
    "start": "2102160",
    "end": "2109680"
  },
  {
    "text": "i'm getting the logs of falco essentially detecting this in particular notice here specifically",
    "start": "2109680",
    "end": "2117280"
  },
  {
    "text": "falco was run in a far gate task so in this specific instance",
    "start": "2117280",
    "end": "2125280"
  },
  {
    "text": "we don't use the kernel module to instrument because it's not possible in fargate and",
    "start": "2125280",
    "end": "2131760"
  },
  {
    "text": "we revert to a technology which is called pdig which allows falco essentially to",
    "start": "2131760",
    "end": "2137680"
  },
  {
    "text": "collect this information by sitting inside the container and using ptrace so as you can see from one point of view falco",
    "start": "2137680",
    "end": "2144240"
  },
  {
    "text": "tries to be as efficient as possible by defaulting to like ebpf and kernel module which are the",
    "start": "2144240",
    "end": "2149440"
  },
  {
    "text": "most efficient ways when possible but when not possible it can also go into",
    "start": "2149440",
    "end": "2155119"
  },
  {
    "text": "like orchestrated container technologies in the cloud like fargate and and still work by uh using",
    "start": "2155119",
    "end": "2162240"
  },
  {
    "text": "uh other technologies like ptrace to to do the instrumentation so there's quite a bit of sophisticated stuff",
    "start": "2162240",
    "end": "2168079"
  },
  {
    "text": "going on under the hood uh here um okay just another",
    "start": "2168079",
    "end": "2175119"
  },
  {
    "start": "2173000",
    "end": "2278000"
  },
  {
    "text": "a couple of slides before we we go into questions so uh first of all a little bit of",
    "start": "2175119",
    "end": "2181760"
  },
  {
    "text": "history we actually started falco in 2016 uh",
    "start": "2181760",
    "end": "2187680"
  },
  {
    "text": "as a way to uh uh",
    "start": "2187680",
    "end": "2194800"
  },
  {
    "text": "apply some of the concepts in network security to",
    "start": "2194800",
    "end": "2201280"
  },
  {
    "text": "broader containers like slash cloud native security as i was mentioning at the beginning of",
    "start": "2201280",
    "end": "2206320"
  },
  {
    "text": "the presentation my background is uh pekka capture and in particular wireshark",
    "start": "2206320",
    "end": "2211359"
  },
  {
    "text": "and another very important class of things that you can do with packets is uh networking through intrusion",
    "start": "2211359",
    "end": "2217839"
  },
  {
    "text": "detection tools like snort or sturikata and so on essentially are based on capturing network packets",
    "start": "2217839",
    "end": "2224400"
  },
  {
    "text": "applying rules on top of the network packets and uh giving giving you alerts if",
    "start": "2224400",
    "end": "2229839"
  },
  {
    "text": "something for example is uh sending you malware or something like that and uh",
    "start": "2229839",
    "end": "2235440"
  },
  {
    "text": "of course you know doing stuff from the network point of view doing this kind of stuff from the network point of view it's harder and harder you know in a",
    "start": "2235440",
    "end": "2240880"
  },
  {
    "text": "world where we have a heavy orchestration uh heavy encryption in the network uh and the use of",
    "start": "2240880",
    "end": "2247200"
  },
  {
    "text": "containers that that make everything opaque so falco was designed with a similar concept but with a",
    "start": "2247200",
    "end": "2253680"
  },
  {
    "text": "different vintage point the system calls the runtime data coming from the operating system which is uh",
    "start": "2253680",
    "end": "2260079"
  },
  {
    "text": "much closer to the final application and it's much more collectible in cloud native palco evolved quite a",
    "start": "2260079",
    "end": "2267440"
  },
  {
    "text": "lot both in terms of you know becoming part of the cncf and in terms of features and grew quite a bit in terms of you know",
    "start": "2267440",
    "end": "2274240"
  },
  {
    "text": "contributors and number of users among the things that we um added uh",
    "start": "2274240",
    "end": "2282480"
  },
  {
    "start": "2278000",
    "end": "2373000"
  },
  {
    "text": "recently to falco uh like in the last six months many rules improvements and in",
    "start": "2282480",
    "end": "2288000"
  },
  {
    "text": "particular a group of groups of rules uh for like post security policies",
    "start": "2288000",
    "end": "2293359"
  },
  {
    "text": "for la for mitre framework for crypto mining which is another one that is pretty popular with our users um we added a grpc",
    "start": "2293359",
    "end": "2301920"
  },
  {
    "text": "input and output interface these goals uh toward making falco",
    "start": "2301920",
    "end": "2309119"
  },
  {
    "text": "able to integrate well with any other touring ecosystem and also being able being",
    "start": "2309119",
    "end": "2314720"
  },
  {
    "text": "composable and being essentially a part of the stack that you can use in different ways based on this general input output",
    "start": "2314720",
    "end": "2322400"
  },
  {
    "text": "interface we create a lot of integrations prometheus slack elasticsearch aw",
    "start": "2322400",
    "end": "2328000"
  },
  {
    "text": "aws lambda and so on we also worked quite a bit on deployment of falco",
    "start": "2328000",
    "end": "2333440"
  },
  {
    "text": "trying to make make it easier and easier for example by",
    "start": "2333440",
    "end": "2339839"
  },
  {
    "text": "offering helm charts that come essentially pre-packaged as recipes and um",
    "start": "2339839",
    "end": "2346640"
  },
  {
    "text": "also we've been uh spending quite a bit of time recently",
    "start": "2346640",
    "end": "2351680"
  },
  {
    "text": "on petra's instrumentation to make it possible to collect data for",
    "start": "2351680",
    "end": "2358480"
  },
  {
    "text": "um stuff like a lambda exactly like i showed you before during the demo there's a blog post that we",
    "start": "2358480",
    "end": "2365200"
  },
  {
    "text": "released recently with stuff that we added recently i uh encourage you to go take a look if",
    "start": "2365200",
    "end": "2371599"
  },
  {
    "text": "you want to if you want to learn more roadmap wise what we are looking into",
    "start": "2371599",
    "end": "2378960"
  },
  {
    "start": "2373000",
    "end": "2478000"
  },
  {
    "text": "is falco developers uh first of all uh the most important",
    "start": "2378960",
    "end": "2386160"
  },
  {
    "text": "thing that we put on top of everything else is expand our community by delighting our",
    "start": "2386160",
    "end": "2391440"
  },
  {
    "text": "users so we are focused there on building something that solves the problem",
    "start": "2391440",
    "end": "2397520"
  },
  {
    "text": "solves the problem in a way that is uh not only effective but also elegant and uh and uh",
    "start": "2397520",
    "end": "2404319"
  },
  {
    "text": "and cool actually and nice to use lowering the barrier of course falco is and will remain a",
    "start": "2404319",
    "end": "2411359"
  },
  {
    "text": "distributed tool that needs to run everywhere if you really want through security",
    "start": "2411359",
    "end": "2416800"
  },
  {
    "text": "in potentially big and complex infrastructure so we are always talking to users that struggle with ease",
    "start": "2416800",
    "end": "2424000"
  },
  {
    "text": "of deployment with maybe performance in particular situations or maybe with stability so the team is",
    "start": "2424000",
    "end": "2430960"
  },
  {
    "text": "really focused on trying to just making this experience better and better so that falcon can be used",
    "start": "2430960",
    "end": "2436720"
  },
  {
    "text": "more confidently by people integrations and being able to plug falco into many",
    "start": "2436720",
    "end": "2442800"
  },
  {
    "text": "different things cloud things kubernetes things and so on and placement platform coverage fargate",
    "start": "2442800",
    "end": "2449119"
  },
  {
    "text": "that i was mentioning before is an example but uh for sure with something that collects uh",
    "start": "2449119",
    "end": "2454240"
  },
  {
    "text": "the the data in such a rich way and that uh is really uh",
    "start": "2454240",
    "end": "2459680"
  },
  {
    "text": "based on the idea of having the best data coverage and uh",
    "start": "2459680",
    "end": "2466400"
  },
  {
    "text": "i don't know fargate lambda uh cloud run all of this kind of stuff is always a",
    "start": "2466400",
    "end": "2472240"
  },
  {
    "text": "focus in the direction for us so that falco can really be used broadly and cover any possible use case",
    "start": "2472240",
    "end": "2479119"
  },
  {
    "start": "2478000",
    "end": "2563000"
  },
  {
    "text": "and we are at 45 so uh i'm going to just put some links on the",
    "start": "2479119",
    "end": "2485680"
  },
  {
    "text": "screen and i am going to stop here to see if there are questions from the audience",
    "start": "2485680",
    "end": "2493119"
  },
  {
    "text": "okay well thank you very much for a wonderful presentation um as i said before feel free to drop",
    "start": "2493119",
    "end": "2499920"
  },
  {
    "text": "some questions into the q a section it looks like we already have one here from regest that says when is the ga",
    "start": "2499920",
    "end": "2507599"
  },
  {
    "text": "version due uh falco is uh has been ga",
    "start": "2507599",
    "end": "2515200"
  },
  {
    "text": "uh for for for quite a bit now so if you go to falco.org uh and uh you",
    "start": "2515200",
    "end": "2523520"
  },
  {
    "text": "um you follow the instructions you can install it on your cluster and falco is",
    "start": "2523520",
    "end": "2530079"
  },
  {
    "text": "um is a tool that can be used for",
    "start": "2530079",
    "end": "2535200"
  },
  {
    "text": "production-ready workloads so ga wise i would assume you know we're always releasing new stuff",
    "start": "2535200",
    "end": "2541359"
  },
  {
    "text": "but but falco should be considered you know ready ready to be used",
    "start": "2541359",
    "end": "2547599"
  },
  {
    "text": "okay does anyone else have any questions at all",
    "start": "2548839",
    "end": "2553839"
  },
  {
    "text": "okay yuri lee says that he installed falco and has an error that repeats",
    "start": "2562480",
    "end": "2569040"
  },
  {
    "start": "2563000",
    "end": "2683000"
  },
  {
    "text": "falco internal syscall event drop one system calls dropped in the last",
    "start": "2569040",
    "end": "2575119"
  },
  {
    "text": "second okay this is a pretty benign benign",
    "start": "2575119",
    "end": "2580160"
  },
  {
    "text": "error i recommend uh you just go to our github here",
    "start": "2580160",
    "end": "2587599"
  },
  {
    "text": "and open an issue and the uh",
    "start": "2587599",
    "end": "2593920"
  },
  {
    "text": "some of the uh engineers that that work on falco will be able to to",
    "start": "2593920",
    "end": "2599119"
  },
  {
    "text": "help you but uh you it looks like you have some some kind of drops",
    "start": "2599119",
    "end": "2605119"
  },
  {
    "text": "so it could be a configuration of falco but if it's just one one system called that is dropped",
    "start": "2605119",
    "end": "2610960"
  },
  {
    "text": "it's probably like just physiological but um it's something that uh uh we",
    "start": "2610960",
    "end": "2616560"
  },
  {
    "text": "see from users once in a while and we'll be able to help you with that if",
    "start": "2616560",
    "end": "2622160"
  },
  {
    "text": "you if you just go to our github and and you open an issue with us",
    "start": "2622160",
    "end": "2627599"
  },
  {
    "text": "okay does system provide any support for it if necessary",
    "start": "2627599",
    "end": "2634078"
  },
  {
    "text": "does provide support for falco yes csd also offers a product",
    "start": "2634240",
    "end": "2640560"
  },
  {
    "text": "called sysnick secure that is",
    "start": "2640560",
    "end": "2645520"
  },
  {
    "text": "heavily based on falco for runtime security so siddiq secure also offers",
    "start": "2646640",
    "end": "2653680"
  },
  {
    "text": "a bunch of other functionality like image scanning forensics uh audi stream compliance and all of",
    "start": "2653680",
    "end": "2659359"
  },
  {
    "text": "this kind of stuff but for let's say uh commercial use",
    "start": "2659359",
    "end": "2665760"
  },
  {
    "text": "you can come to this to sysdig for both essentially support with uh uh running",
    "start": "2665760",
    "end": "2672000"
  },
  {
    "text": "falco uh as as in as an independent tool or for commercial tools that are based on",
    "start": "2672000",
    "end": "2678480"
  },
  {
    "text": "topo farco",
    "start": "2678480",
    "end": "2681200"
  },
  {
    "start": "2683000",
    "end": "2828000"
  },
  {
    "text": "what is the difference between falco and isoteo so uh istio is uh",
    "start": "2684480",
    "end": "2692960"
  },
  {
    "text": "uh more like uh let's say a generic network mesh",
    "start": "2692960",
    "end": "2700160"
  },
  {
    "text": "so istio is a mesh a network of sidecars that you put",
    "start": "2700160",
    "end": "2708800"
  },
  {
    "text": "of little proxies that you that you deploy as cycles near inside all of your pots near your",
    "start": "2708800",
    "end": "2715520"
  },
  {
    "text": "your containers near your your applications and essentially with istio",
    "start": "2715520",
    "end": "2721040"
  },
  {
    "text": "all of the network traffic uh of uh of your applications of your containers",
    "start": "2721040",
    "end": "2727040"
  },
  {
    "text": "in in kubernetes will go through the istio proxies at that point istio",
    "start": "2727040",
    "end": "2732640"
  },
  {
    "text": "can do a bunch of stuff that ranges from observability",
    "start": "2732640",
    "end": "2739440"
  },
  {
    "text": "a circuit breaker and testing and and also uh",
    "start": "2739520",
    "end": "2745680"
  },
  {
    "text": "security uh enforcement and micro segmentation so istio is uh very much network",
    "start": "2745680",
    "end": "2753280"
  },
  {
    "text": "oriented uh and it's another part important part of the runtime security",
    "start": "2753280",
    "end": "2760000"
  },
  {
    "text": "equation and operates from the especially from the security point of view",
    "start": "2760000",
    "end": "2765920"
  },
  {
    "text": "at the network segmentation level while falco is more like",
    "start": "2765920",
    "end": "2772960"
  },
  {
    "text": "able to see inside the containers and to notify you when something",
    "start": "2772960",
    "end": "2780319"
  },
  {
    "text": "that you should pay attention to happens inside your containers if we go back to you know",
    "start": "2780319",
    "end": "2787599"
  },
  {
    "text": "the previous world the previous data center world istio is more like your firewall your",
    "start": "2787599",
    "end": "2793920"
  },
  {
    "text": "checkpoint firewall falco is more like your intrusion detection system",
    "start": "2793920",
    "end": "2799040"
  },
  {
    "text": "like your uh source fire cisco intrusion detection system you",
    "start": "2799040",
    "end": "2807119"
  },
  {
    "text": "want both because one essentially is your lock on the door the other one is your",
    "start": "2807119",
    "end": "2814079"
  },
  {
    "text": "security camera falco is the security camera istio is more like among other things that the lock on the",
    "start": "2814079",
    "end": "2820640"
  },
  {
    "text": "door",
    "start": "2820640",
    "end": "2822880"
  },
  {
    "start": "2828000",
    "end": "3003000"
  },
  {
    "text": "can you elaborate on the compliance rule supported by falco oob",
    "start": "2828480",
    "end": "2834960"
  },
  {
    "text": "yes so um compliance is many things right and uh starts",
    "start": "2834960",
    "end": "2841520"
  },
  {
    "text": "at the csd level you know starts in the in the build phase of of of ci cd",
    "start": "2841520",
    "end": "2849200"
  },
  {
    "text": "where you want to check con configuration for your images and so on but then compliance is also a",
    "start": "2849200",
    "end": "2856960"
  },
  {
    "text": "runtime and essentially making sure that uh",
    "start": "2856960",
    "end": "2862960"
  },
  {
    "text": "actions that uh are a concern from the security point of",
    "start": "2863839",
    "end": "2869280"
  },
  {
    "text": "view are not performed at runtime and if they are you are notified",
    "start": "2869280",
    "end": "2874400"
  },
  {
    "text": "and there's a trail that essentially allows you to document them and improve essentially the",
    "start": "2874400",
    "end": "2881200"
  },
  {
    "text": "the the compliance of of your infrastructure examples of things that",
    "start": "2881200",
    "end": "2888559"
  },
  {
    "text": "you want to check at runtime from the compliance point of view",
    "start": "2888559",
    "end": "2893760"
  },
  {
    "text": "not running privileged containers is a good example a specific policies on the data you know",
    "start": "2894319",
    "end": "2901760"
  },
  {
    "text": "that you have or on the on the processes that you run not running as i was showing before",
    "start": "2901760",
    "end": "2907200"
  },
  {
    "text": "shells you know uh in your production environment all of this kind of stuff can be detected by falco and falco can",
    "start": "2907200",
    "end": "2915119"
  },
  {
    "text": "report all of these uh or all of this information and allow you essentially to create a",
    "start": "2915119",
    "end": "2921440"
  },
  {
    "text": "paper trail of of anything that happened in uh in your in your environment across time so that",
    "start": "2921440",
    "end": "2928800"
  },
  {
    "text": "if an auditor comes you know you you you can show that in the last six months you didn't have any uh privileged",
    "start": "2928800",
    "end": "2936480"
  },
  {
    "text": "container that was executed in in your infrastructure falco",
    "start": "2936480",
    "end": "2942000"
  },
  {
    "text": "is a set of rules that are particularly specifically crafted to match against",
    "start": "2942000",
    "end": "2949119"
  },
  {
    "text": "the main compliance frameworks for example pci so if you go to the falco uh",
    "start": "2949119",
    "end": "2957119"
  },
  {
    "text": "rule set which is a big yaml file and you look at the tags you will see that many rules in the falco rule set",
    "start": "2957119",
    "end": "2962559"
  },
  {
    "text": "are tagged as pci these are rules that have been created by security professionals by members of",
    "start": "2962559",
    "end": "2968559"
  },
  {
    "text": "the of the falco community that will notify you if something that happens on your infrastructure violates",
    "start": "2968559",
    "end": "2974559"
  },
  {
    "text": "a specific pci rule you know a specific pc pci entry",
    "start": "2974559",
    "end": "2981200"
  },
  {
    "text": "and when you deploy falco uh you can essentially if you want",
    "start": "2981200",
    "end": "2988800"
  },
  {
    "text": "choose to only deploy deploy rule sets that map to specific compliance",
    "start": "2988800",
    "end": "2994079"
  },
  {
    "text": "frameworks and offer a certain percentage of coverage for these frameworks",
    "start": "2994079",
    "end": "3001280"
  },
  {
    "text": "can falco be integrated with celium uh not",
    "start": "3002800",
    "end": "3010960"
  },
  {
    "text": "really because they do uh",
    "start": "3010960",
    "end": "3015359"
  },
  {
    "text": "slide they do different things the thing that falcon serium have in",
    "start": "3016720",
    "end": "3022720"
  },
  {
    "text": "common is that they're both based on ebpf so they both use these powerful and revolutionary",
    "start": "3022720",
    "end": "3030079"
  },
  {
    "text": "functionality in the linux current but selium uses ebpf to be much more",
    "start": "3030079",
    "end": "3036319"
  },
  {
    "text": "attached to the networking stack while falco wants to be again a broader",
    "start": "3036319",
    "end": "3043359"
  },
  {
    "text": "intrusion detection system so psyllium from the point of view of essential integration",
    "start": "3043359",
    "end": "3049119"
  },
  {
    "text": "and be used together is a little bit more like uh",
    "start": "3049119",
    "end": "3054880"
  },
  {
    "text": "something that that matches istio rather than falco so um some similar",
    "start": "3054880",
    "end": "3061520"
  },
  {
    "text": "technological choices but we don't really have deep integration among among the tools",
    "start": "3061520",
    "end": "3069838"
  },
  {
    "text": "okay does anybody else have any questions at all",
    "start": "3070400",
    "end": "3083838"
  },
  {
    "start": "3078000",
    "end": "3333000"
  },
  {
    "text": "do you have any plain integration with notifications beyond slack",
    "start": "3089119",
    "end": "3094160"
  },
  {
    "text": "yeah there's a bunch i mean again go to the website i cannot list all of them here but uh if you need to integrate falco",
    "start": "3094160",
    "end": "3101839"
  },
  {
    "text": "with something very good chance it's already there slack was an example you know but uh",
    "start": "3101839",
    "end": "3107839"
  },
  {
    "text": "uh there's there's uh you name it you know uh log collection systems uh like splunk",
    "start": "3107839",
    "end": "3114720"
  },
  {
    "text": "and so on uh stuff like pagerduty and similar uh chats uh web books uh",
    "start": "3114720",
    "end": "3123839"
  },
  {
    "text": "monitoring to prometheus so there's there's a bunch of them so it's not only slack",
    "start": "3123839",
    "end": "3133359"
  },
  {
    "text": "is there any ui on top of falco uh",
    "start": "3137280",
    "end": "3143760"
  },
  {
    "text": "not on top of falco open source you can buy sysbig secure it's",
    "start": "3145200",
    "end": "3151359"
  },
  {
    "text": "commercial but it gives you a very very nice ui farco",
    "start": "3151359",
    "end": "3156720"
  },
  {
    "text": "is there a difference between system falco service and falco in container",
    "start": "3156720",
    "end": "3161920"
  },
  {
    "text": "no if properly configured no because they do the same thing so",
    "start": "3161920",
    "end": "3168720"
  },
  {
    "text": "we give you the choice from running it in the system for example installing it",
    "start": "3168720",
    "end": "3175040"
  },
  {
    "text": "in the host as a tarball or running it inside a container",
    "start": "3175040",
    "end": "3180079"
  },
  {
    "text": "functionality wise performance wise they are absolutely equivalent so whatever works best for",
    "start": "3180079",
    "end": "3186240"
  },
  {
    "text": "you okay do we have any more questions",
    "start": "3186240",
    "end": "3194000"
  },
  {
    "text": "we have about three minutes left",
    "start": "3194000",
    "end": "3197520"
  },
  {
    "text": "talking about performance what is the overhead okay uh market the answer",
    "start": "3203839",
    "end": "3212400"
  },
  {
    "text": "it's low um in practice the overhead depends",
    "start": "3212400",
    "end": "3219200"
  },
  {
    "text": "on the workload profile of the system that",
    "start": "3219200",
    "end": "3225200"
  },
  {
    "text": "falco is observing so uh if falco",
    "start": "3225200",
    "end": "3230480"
  },
  {
    "text": "is properly configured and tuned and the system is uh",
    "start": "3230480",
    "end": "3237839"
  },
  {
    "text": "not like an edge case you should expect to see",
    "start": "3237839",
    "end": "3244400"
  },
  {
    "text": "something like a handful of cpu percentage points",
    "start": "3244400",
    "end": "3250880"
  },
  {
    "text": "used by falco and an amount of memory that varies depending",
    "start": "3250880",
    "end": "3257680"
  },
  {
    "text": "on what you do with falco because if falco is is configured to only look at local data and not",
    "start": "3257680",
    "end": "3264319"
  },
  {
    "text": "consume the kubernetes state then the memory footprint is tiny if falco is configured to fetch the",
    "start": "3264319",
    "end": "3271359"
  },
  {
    "text": "kubernetes metadata because you have service oriented rules or stuff like that then there's a memory requirement in",
    "start": "3271359",
    "end": "3279040"
  },
  {
    "text": "terms of bringing in essentially the kubernetes state to understand metadata and all that kind of stuff and memory can grow higher to",
    "start": "3279040",
    "end": "3287040"
  },
  {
    "text": "up to let's say hundreds of megabytes or or something like that so that",
    "start": "3287040",
    "end": "3293119"
  },
  {
    "text": "depends um but uh overall again falco has been designed to run in",
    "start": "3293119",
    "end": "3299200"
  },
  {
    "text": "a production environment in a way that whose overhead should be barely measurable",
    "start": "3299200",
    "end": "3307839"
  },
  {
    "text": "well thank you very much that's about all the time we have for today as i said",
    "start": "3315200",
    "end": "3320400"
  },
  {
    "text": "before uh today's presentation will be available later today on the cncf website thank you again everyone for",
    "start": "3320400",
    "end": "3327200"
  },
  {
    "text": "your time have a wonderful day thank you",
    "start": "3327200",
    "end": "3335200"
  }
]