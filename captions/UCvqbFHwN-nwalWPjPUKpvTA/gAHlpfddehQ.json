[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "kubernetes is not just kubernetes",
    "start": "240",
    "end": "2000"
  },
  {
    "text": "there's a lot more going on to make a",
    "start": "2000",
    "end": "3840"
  },
  {
    "text": "complete picture",
    "start": "3840",
    "end": "4799"
  },
  {
    "text": "kubernetes is sort of like raising a kid",
    "start": "4799",
    "end": "6960"
  },
  {
    "text": "we've caught ourselves saying",
    "start": "6960",
    "end": "8320"
  },
  {
    "text": "as soon as they're out of diapers things",
    "start": "8320",
    "end": "10240"
  },
  {
    "text": "will get better then we catch ourselves",
    "start": "10240",
    "end": "12240"
  },
  {
    "text": "saying",
    "start": "12240",
    "end": "12639"
  },
  {
    "text": "as soon as they're in school things will",
    "start": "12639",
    "end": "14559"
  },
  {
    "text": "get better the same thing can be said",
    "start": "14559",
    "end": "16160"
  },
  {
    "text": "about kubernetes as soon as i figure out",
    "start": "16160",
    "end": "18240"
  },
  {
    "text": "how to create a kubernetes cluster",
    "start": "18240",
    "end": "20000"
  },
  {
    "text": "then i can work on networking and after",
    "start": "20000",
    "end": "22000"
  },
  {
    "text": "networking i can tackle application",
    "start": "22000",
    "end": "23760"
  },
  {
    "text": "deployment",
    "start": "23760",
    "end": "24320"
  },
  {
    "text": "and after that i'll figure out how to",
    "start": "24320",
    "end": "25920"
  },
  {
    "text": "backup and restore it",
    "start": "25920",
    "end": "27359"
  },
  {
    "start": "26000",
    "end": "451000"
  },
  {
    "text": "you get it it's a constant evolution of",
    "start": "27359",
    "end": "29599"
  },
  {
    "text": "hurdles and milestones",
    "start": "29599",
    "end": "31199"
  },
  {
    "text": "so what we're gonna do is look at",
    "start": "31199",
    "end": "32640"
  },
  {
    "text": "kubernetes and everything else that is",
    "start": "32640",
    "end": "34399"
  },
  {
    "text": "connected to it",
    "start": "34399",
    "end": "35440"
  },
  {
    "text": "and map it to open source projects that",
    "start": "35440",
    "end": "37360"
  },
  {
    "text": "vmware is actively contributing to",
    "start": "37360",
    "end": "39200"
  },
  {
    "text": "and using vmware is also contributing",
    "start": "39200",
    "end": "41600"
  },
  {
    "text": "back to the core of kubernetes itself",
    "start": "41600",
    "end": "43440"
  },
  {
    "text": "we're all in this together to create a",
    "start": "43440",
    "end": "45200"
  },
  {
    "text": "better experience for everyone alright",
    "start": "45200",
    "end": "47680"
  },
  {
    "text": "so you got your first kubernetes cluster",
    "start": "47680",
    "end": "49600"
  },
  {
    "text": "up and running",
    "start": "49600",
    "end": "50559"
  },
  {
    "text": "now your manager is saying we need you",
    "start": "50559",
    "end": "52480"
  },
  {
    "text": "to do that 20 more times for each",
    "start": "52480",
    "end": "54239"
  },
  {
    "text": "developer",
    "start": "54239",
    "end": "55120"
  },
  {
    "text": "what's your next move well you could",
    "start": "55120",
    "end": "57120"
  },
  {
    "text": "start sweating and cancel",
    "start": "57120",
    "end": "58640"
  },
  {
    "text": "any beach vacation plans you had for the",
    "start": "58640",
    "end": "60320"
  },
  {
    "text": "next few weekends or",
    "start": "60320",
    "end": "61680"
  },
  {
    "text": "you can look at cluster api it's the",
    "start": "61680",
    "end": "64320"
  },
  {
    "text": "ultimate standard for life cycle",
    "start": "64320",
    "end": "65840"
  },
  {
    "text": "management of kubernetes clusters",
    "start": "65840",
    "end": "67760"
  },
  {
    "text": "why do things the hard way when there's",
    "start": "67760",
    "end": "69439"
  },
  {
    "text": "a much easier way",
    "start": "69439",
    "end": "71119"
  },
  {
    "text": "cluster api uses a desired state",
    "start": "71119",
    "end": "73280"
  },
  {
    "text": "configuration",
    "start": "73280",
    "end": "74159"
  },
  {
    "text": "to determine what a cluster should look",
    "start": "74159",
    "end": "76000"
  },
  {
    "text": "like here's an example",
    "start": "76000",
    "end": "77600"
  },
  {
    "text": "say that i want a kubernetes cluster for",
    "start": "77600",
    "end": "79360"
  },
  {
    "text": "my own development purposes",
    "start": "79360",
    "end": "80799"
  },
  {
    "text": "that has three control plane nodes and",
    "start": "80799",
    "end": "82479"
  },
  {
    "text": "three workers i put this into a",
    "start": "82479",
    "end": "84560"
  },
  {
    "text": "specification that cluster api knows how",
    "start": "84560",
    "end": "86640"
  },
  {
    "text": "to read",
    "start": "86640",
    "end": "87280"
  },
  {
    "text": "and i give that to my management cluster",
    "start": "87280",
    "end": "89040"
  },
  {
    "text": "now i didn't talk about what a",
    "start": "89040",
    "end": "90560"
  },
  {
    "text": "management cluster does because we only",
    "start": "90560",
    "end": "92079"
  },
  {
    "text": "have 15 minutes here",
    "start": "92079",
    "end": "93439"
  },
  {
    "text": "just know that the management cluster is",
    "start": "93439",
    "end": "95119"
  },
  {
    "text": "responsible for managing and deploying",
    "start": "95119",
    "end": "97040"
  },
  {
    "text": "all other kubernetes clusters yes you",
    "start": "97040",
    "end": "99360"
  },
  {
    "text": "heard that right",
    "start": "99360",
    "end": "100240"
  },
  {
    "text": "we can do this again and again and again",
    "start": "100240",
    "end": "102960"
  },
  {
    "text": "so i give this specification to my",
    "start": "102960",
    "end": "104399"
  },
  {
    "text": "management cluster and it will take over",
    "start": "104399",
    "end": "106159"
  },
  {
    "text": "from there",
    "start": "106159",
    "end": "106960"
  },
  {
    "text": "new virtual machines will be created and",
    "start": "106960",
    "end": "108720"
  },
  {
    "text": "before i know it the cluster is up and",
    "start": "108720",
    "end": "110640"
  },
  {
    "text": "running and ready for the next",
    "start": "110640",
    "end": "112000"
  },
  {
    "text": "instructions",
    "start": "112000",
    "end": "113040"
  },
  {
    "text": "all this happened because i specified",
    "start": "113040",
    "end": "114640"
  },
  {
    "text": "one file of what i want the cluster to",
    "start": "114640",
    "end": "116320"
  },
  {
    "text": "look like",
    "start": "116320",
    "end": "116960"
  },
  {
    "text": "and from there a bunch of cool",
    "start": "116960",
    "end": "118640"
  },
  {
    "text": "automation happened to talk to my",
    "start": "118640",
    "end": "120000"
  },
  {
    "text": "infrastructure",
    "start": "120000",
    "end": "120719"
  },
  {
    "text": "to create new machines oh yeah this is",
    "start": "120719",
    "end": "123360"
  },
  {
    "text": "also the tool that will take care of",
    "start": "123360",
    "end": "124719"
  },
  {
    "text": "cluster upgrades",
    "start": "124719",
    "end": "125680"
  },
  {
    "text": "that's a pretty important feature we",
    "start": "125680",
    "end": "127280"
  },
  {
    "text": "can't forget so what does that actually",
    "start": "127280",
    "end": "129520"
  },
  {
    "text": "mean to vmware",
    "start": "129520",
    "end": "130640"
  },
  {
    "text": "well i'll show you this fancy table so",
    "start": "130640",
    "end": "132480"
  },
  {
    "text": "you can see exactly what's happening in",
    "start": "132480",
    "end": "134160"
  },
  {
    "text": "open source",
    "start": "134160",
    "end": "134879"
  },
  {
    "text": "and how we're using those projects",
    "start": "134879",
    "end": "136800"
  },
  {
    "text": "cluster api is the building block for",
    "start": "136800",
    "end": "138640"
  },
  {
    "text": "how vmware is provisioning kubernetes",
    "start": "138640",
    "end": "140400"
  },
  {
    "text": "clusters",
    "start": "140400",
    "end": "141120"
  },
  {
    "text": "as a part of tons of committee's grid",
    "start": "141120",
    "end": "143360"
  },
  {
    "text": "it's all the benefits of clustering api",
    "start": "143360",
    "end": "145440"
  },
  {
    "text": "but",
    "start": "145440",
    "end": "145760"
  },
  {
    "text": "wrapped in a tighter bundle with more",
    "start": "145760",
    "end": "147280"
  },
  {
    "text": "abstraction to make deployments a breeze",
    "start": "147280",
    "end": "150000"
  },
  {
    "text": "let's see a demo here's an example of a",
    "start": "150000",
    "end": "152319"
  },
  {
    "text": "kubernetes cluster that has one control",
    "start": "152319",
    "end": "154239"
  },
  {
    "text": "plane node and three worker nodes",
    "start": "154239",
    "end": "156160"
  },
  {
    "text": "i have control over the size of the",
    "start": "156160",
    "end": "157519"
  },
  {
    "text": "virtual machines as well as resource",
    "start": "157519",
    "end": "159519"
  },
  {
    "text": "guarantees",
    "start": "159519",
    "end": "160480"
  },
  {
    "text": "the great thing is that all of the hard",
    "start": "160480",
    "end": "162239"
  },
  {
    "text": "stuff has been abstracted",
    "start": "162239",
    "end": "163840"
  },
  {
    "text": "and i can focus on applications not time",
    "start": "163840",
    "end": "166480"
  },
  {
    "text": "spent on building infrastructure",
    "start": "166480",
    "end": "168480"
  },
  {
    "text": "i apply this yaml spec as i would a",
    "start": "168480",
    "end": "170319"
  },
  {
    "text": "kubernetes deployment",
    "start": "170319",
    "end": "171680"
  },
  {
    "text": "and cluster api is responsible for",
    "start": "171680",
    "end": "173599"
  },
  {
    "text": "provisioning the machines",
    "start": "173599",
    "end": "174879"
  },
  {
    "text": "and using cube8m to cluster them",
    "start": "174879",
    "end": "176879"
  },
  {
    "text": "together at the end",
    "start": "176879",
    "end": "178400"
  },
  {
    "text": "i'm left with a cluster that is pure",
    "start": "178400",
    "end": "180480"
  },
  {
    "text": "upstream kubernetes",
    "start": "180480",
    "end": "181760"
  },
  {
    "text": "and i can fire away with anything i want",
    "start": "181760",
    "end": "183920"
  },
  {
    "text": "to deploy",
    "start": "183920",
    "end": "185360"
  },
  {
    "text": "now that the cluster is running or is it",
    "start": "185360",
    "end": "187599"
  },
  {
    "text": "actually running",
    "start": "187599",
    "end": "188640"
  },
  {
    "text": "one of the most critical pieces of a",
    "start": "188640",
    "end": "190159"
  },
  {
    "text": "kubernetes cluster is how pods can talk",
    "start": "190159",
    "end": "192239"
  },
  {
    "text": "to each other",
    "start": "192239",
    "end": "192959"
  },
  {
    "text": "and this is accomplished the container",
    "start": "192959",
    "end": "194640"
  },
  {
    "text": "network interface and you guessed it",
    "start": "194640",
    "end": "196720"
  },
  {
    "text": "vmware has an open source",
    "start": "196720",
    "end": "198000"
  },
  {
    "text": "solution for that too andrea was built",
    "start": "198000",
    "end": "200319"
  },
  {
    "text": "as a kubernetes native project",
    "start": "200319",
    "end": "202080"
  },
  {
    "text": "that does network connectivity and",
    "start": "202080",
    "end": "203840"
  },
  {
    "text": "security for pods",
    "start": "203840",
    "end": "205120"
  },
  {
    "text": "it has some standout features such as a",
    "start": "205120",
    "end": "207200"
  },
  {
    "text": "comprehensive enterprise grade network",
    "start": "207200",
    "end": "209120"
  },
  {
    "text": "policy model",
    "start": "209120",
    "end": "210239"
  },
  {
    "text": "visibility and insights into the network",
    "start": "210239",
    "end": "212080"
  },
  {
    "text": "and improving network performance",
    "start": "212080",
    "end": "214000"
  },
  {
    "text": "but not just by using ovs but also",
    "start": "214000",
    "end": "216319"
  },
  {
    "text": "through the enablement of smart nic",
    "start": "216319",
    "end": "217920"
  },
  {
    "text": "hardware offload",
    "start": "217920",
    "end": "219360"
  },
  {
    "text": "by default every tons of kubernetes",
    "start": "219360",
    "end": "221519"
  },
  {
    "text": "cluster is automatically configured with",
    "start": "221519",
    "end": "223360"
  },
  {
    "text": "andrea",
    "start": "223360",
    "end": "224159"
  },
  {
    "text": "and we can see the running pods in the",
    "start": "224159",
    "end": "225760"
  },
  {
    "text": "cube system namespace",
    "start": "225760",
    "end": "227599"
  },
  {
    "text": "no extra administration steps just",
    "start": "227599",
    "end": "229680"
  },
  {
    "text": "getting a new cluster ready to start",
    "start": "229680",
    "end": "231360"
  },
  {
    "text": "accepting application deployments and",
    "start": "231360",
    "end": "233360"
  },
  {
    "text": "when clusters are lightly loaded and",
    "start": "233360",
    "end": "234879"
  },
  {
    "text": "running smoothly",
    "start": "234879",
    "end": "235920"
  },
  {
    "text": "life is good but what happens when",
    "start": "235920",
    "end": "238000"
  },
  {
    "text": "contention occurs and resources get",
    "start": "238000",
    "end": "240159"
  },
  {
    "text": "constrained",
    "start": "240159",
    "end": "241280"
  },
  {
    "text": "andrea delivers new functionality by",
    "start": "241280",
    "end": "243360"
  },
  {
    "text": "providing insights into network flows",
    "start": "243360",
    "end": "245439"
  },
  {
    "text": "from kubernetes objects",
    "start": "245439",
    "end": "246799"
  },
  {
    "text": "and namespaces here is an entry of flow",
    "start": "246799",
    "end": "249360"
  },
  {
    "text": "capture",
    "start": "249360",
    "end": "250000"
  },
  {
    "text": "labeled with source and destination pod",
    "start": "250000",
    "end": "252319"
  },
  {
    "text": "name and namespaces in other words",
    "start": "252319",
    "end": "254720"
  },
  {
    "text": "in terms of kubernetes objects and not",
    "start": "254720",
    "end": "256959"
  },
  {
    "text": "just ip addresses",
    "start": "256959",
    "end": "258400"
  },
  {
    "text": "and we can move on to comparative flow",
    "start": "258400",
    "end": "260239"
  },
  {
    "text": "stats in terms of services",
    "start": "260239",
    "end": "262000"
  },
  {
    "text": "and consumers once again from a",
    "start": "262000",
    "end": "264400"
  },
  {
    "text": "kubernetes object perspective",
    "start": "264400",
    "end": "266960"
  },
  {
    "text": "back to the fancy table andrea is the",
    "start": "266960",
    "end": "269120"
  },
  {
    "text": "default cni deployed with tons of",
    "start": "269120",
    "end": "271040"
  },
  {
    "text": "kubernetes grid",
    "start": "271040",
    "end": "272160"
  },
  {
    "text": "there is no post cluster creation",
    "start": "272160",
    "end": "273919"
  },
  {
    "text": "deployment necessary",
    "start": "273919",
    "end": "275600"
  },
  {
    "text": "alright now we're ready for our first",
    "start": "275600",
    "end": "277440"
  },
  {
    "text": "application deployment",
    "start": "277440",
    "end": "278720"
  },
  {
    "text": "do you know where your images originate",
    "start": "278720",
    "end": "280320"
  },
  {
    "text": "that are being deployed like when you",
    "start": "280320",
    "end": "282160"
  },
  {
    "text": "say",
    "start": "282160",
    "end": "282479"
  },
  {
    "text": "use image nginx it actually pulls down",
    "start": "282479",
    "end": "284960"
  },
  {
    "text": "from a public registry",
    "start": "284960",
    "end": "286560"
  },
  {
    "text": "and you're probably moving beyond public",
    "start": "286560",
    "end": "288240"
  },
  {
    "text": "images at this point and you want your",
    "start": "288240",
    "end": "289759"
  },
  {
    "text": "own custom or",
    "start": "289759",
    "end": "290639"
  },
  {
    "text": "modified apps it's time to manage your",
    "start": "290639",
    "end": "293040"
  },
  {
    "text": "own container registry",
    "start": "293040",
    "end": "294560"
  },
  {
    "text": "this way you can take care of",
    "start": "294560",
    "end": "295919"
  },
  {
    "text": "authentication and authorization",
    "start": "295919",
    "end": "297680"
  },
  {
    "text": "as well as add more layers of security",
    "start": "297680",
    "end": "300560"
  },
  {
    "text": "well",
    "start": "300560",
    "end": "300880"
  },
  {
    "text": "say hello to harbor harbor is the only",
    "start": "300880",
    "end": "303360"
  },
  {
    "text": "cloud native computing foundation",
    "start": "303360",
    "end": "304880"
  },
  {
    "text": "container registry",
    "start": "304880",
    "end": "306000"
  },
  {
    "text": "that has been moved to a graduated and",
    "start": "306000",
    "end": "307840"
  },
  {
    "text": "stable project",
    "start": "307840",
    "end": "309039"
  },
  {
    "text": "over the years we have listened to what",
    "start": "309039",
    "end": "310720"
  },
  {
    "text": "you want in managing your own container",
    "start": "310720",
    "end": "312639"
  },
  {
    "text": "registry",
    "start": "312639",
    "end": "313680"
  },
  {
    "text": "it's the most feature-rich and widely",
    "start": "313680",
    "end": "315759"
  },
  {
    "text": "used container registry within the cncf",
    "start": "315759",
    "end": "318160"
  },
  {
    "text": "landscape",
    "start": "318160",
    "end": "318880"
  },
  {
    "text": "with features like multi-tenant",
    "start": "318880",
    "end": "320479"
  },
  {
    "text": "isolation role-based access control",
    "start": "320479",
    "end": "322960"
  },
  {
    "text": "image vulnerability scanning and an",
    "start": "322960",
    "end": "324800"
  },
  {
    "text": "extensible api",
    "start": "324800",
    "end": "326160"
  },
  {
    "text": "it's no wonder why thousands of users",
    "start": "326160",
    "end": "328080"
  },
  {
    "text": "trust harbor with their container images",
    "start": "328080",
    "end": "330320"
  },
  {
    "text": "and why this is a graduated project",
    "start": "330320",
    "end": "332240"
  },
  {
    "text": "within the cncf",
    "start": "332240",
    "end": "333840"
  },
  {
    "text": "here we see the administration interface",
    "start": "333840",
    "end": "335680"
  },
  {
    "text": "with lots of knobs to turn",
    "start": "335680",
    "end": "337600"
  },
  {
    "text": "not only is there image vulnerability",
    "start": "337600",
    "end": "339520"
  },
  {
    "text": "scanning but harper has the ability to",
    "start": "339520",
    "end": "341520"
  },
  {
    "text": "add",
    "start": "341520",
    "end": "341840"
  },
  {
    "text": "third-party scanners this will show the",
    "start": "341840",
    "end": "344080"
  },
  {
    "text": "health of images we have running in our",
    "start": "344080",
    "end": "345759"
  },
  {
    "text": "clusters right now",
    "start": "345759",
    "end": "347360"
  },
  {
    "text": "we can take this a step further and",
    "start": "347360",
    "end": "349039"
  },
  {
    "text": "replicate harbor not only to just to",
    "start": "349039",
    "end": "351120"
  },
  {
    "text": "other harbor instances",
    "start": "351120",
    "end": "352400"
  },
  {
    "text": "but to different registries replication",
    "start": "352400",
    "end": "355039"
  },
  {
    "text": "rules can be created that determine",
    "start": "355039",
    "end": "356400"
  },
  {
    "text": "whether hardware will push or pull",
    "start": "356400",
    "end": "357840"
  },
  {
    "text": "images",
    "start": "357840",
    "end": "358560"
  },
  {
    "text": "and we can specify if it's only a single",
    "start": "358560",
    "end": "360400"
  },
  {
    "text": "image one repository or",
    "start": "360400",
    "end": "362400"
  },
  {
    "text": "the whole thing we can also set project",
    "start": "362400",
    "end": "364880"
  },
  {
    "text": "quotas that will enforce the amount of",
    "start": "364880",
    "end": "366800"
  },
  {
    "text": "space that can be used by",
    "start": "366800",
    "end": "368240"
  },
  {
    "text": "images there's tag retention policies",
    "start": "368240",
    "end": "371120"
  },
  {
    "text": "online garbage collection",
    "start": "371120",
    "end": "372560"
  },
  {
    "text": "and much more check it out after this",
    "start": "372560",
    "end": "375039"
  },
  {
    "text": "video at go",
    "start": "375039",
    "end": "375919"
  },
  {
    "text": "harbor dot io so yep vmware's got you",
    "start": "375919",
    "end": "379199"
  },
  {
    "text": "covered there as well",
    "start": "379199",
    "end": "381360"
  },
  {
    "text": "all right now it's time to deploy some",
    "start": "381360",
    "end": "383199"
  },
  {
    "text": "apps we've got a container registry but",
    "start": "383199",
    "end": "385280"
  },
  {
    "text": "what if we even wanted",
    "start": "385280",
    "end": "386479"
  },
  {
    "text": "more apps how about a bunch of open",
    "start": "386479",
    "end": "388479"
  },
  {
    "text": "source applications",
    "start": "388479",
    "end": "390000"
  },
  {
    "text": "cube apps is a web-based ui for",
    "start": "390000",
    "end": "391919"
  },
  {
    "text": "deploying and managing",
    "start": "391919",
    "end": "393039"
  },
  {
    "text": "applications in kubernetes clusters",
    "start": "393039",
    "end": "395360"
  },
  {
    "text": "browse helm charts and kubernetes",
    "start": "395360",
    "end": "396960"
  },
  {
    "text": "operators from public and private",
    "start": "396960",
    "end": "398400"
  },
  {
    "text": "registries",
    "start": "398400",
    "end": "399120"
  },
  {
    "text": "while also performing day two operations",
    "start": "399120",
    "end": "401440"
  },
  {
    "text": "like upgrades or rollbacks",
    "start": "401440",
    "end": "403199"
  },
  {
    "text": "vmware wraps us all up with enterprise",
    "start": "403199",
    "end": "405360"
  },
  {
    "text": "support with the vmware tonzu",
    "start": "405360",
    "end": "407280"
  },
  {
    "text": "application catalog so check this out",
    "start": "407280",
    "end": "409919"
  },
  {
    "text": "the process is super simple",
    "start": "409919",
    "end": "411919"
  },
  {
    "text": "the first thing we want to do is design",
    "start": "411919",
    "end": "413919"
  },
  {
    "text": "our catalog which maps a private",
    "start": "413919",
    "end": "415680"
  },
  {
    "text": "repository for our organization",
    "start": "415680",
    "end": "417680"
  },
  {
    "text": "then we select if we want a container or",
    "start": "417680",
    "end": "419599"
  },
  {
    "text": "helm chart repository",
    "start": "419599",
    "end": "421039"
  },
  {
    "text": "we choose our base os then we link this",
    "start": "421039",
    "end": "423120"
  },
  {
    "text": "to our image registry such as",
    "start": "423120",
    "end": "424880"
  },
  {
    "text": "project harbor last we decide what apps",
    "start": "424880",
    "end": "427199"
  },
  {
    "text": "we want",
    "start": "427199",
    "end": "427919"
  },
  {
    "text": "it's as simple as hitting check boxes",
    "start": "427919",
    "end": "429680"
  },
  {
    "text": "for different open source projects",
    "start": "429680",
    "end": "431360"
  },
  {
    "text": "and then hitting submit from there all",
    "start": "431360",
    "end": "433520"
  },
  {
    "text": "the images will be pushed to your",
    "start": "433520",
    "end": "434960"
  },
  {
    "text": "registry",
    "start": "434960",
    "end": "435759"
  },
  {
    "text": "and it doesn't just stop there not only",
    "start": "435759",
    "end": "438000"
  },
  {
    "text": "can these images be inspected",
    "start": "438000",
    "end": "439840"
  },
  {
    "text": "but anytime there is a new version",
    "start": "439840",
    "end": "441680"
  },
  {
    "text": "upstream it will be synced",
    "start": "441680",
    "end": "443440"
  },
  {
    "text": "and tagged appropriately no more",
    "start": "443440",
    "end": "445599"
  },
  {
    "text": "guessing if you have the latest version",
    "start": "445599",
    "end": "448080"
  },
  {
    "text": "apps who would have thought vmware does",
    "start": "448080",
    "end": "450160"
  },
  {
    "text": "that as well",
    "start": "450160",
    "end": "451759"
  },
  {
    "start": "451000",
    "end": "553000"
  },
  {
    "text": "now that our kubernetes deployments are",
    "start": "451759",
    "end": "453199"
  },
  {
    "text": "getting bigger we need to think about",
    "start": "453199",
    "end": "454880"
  },
  {
    "text": "how we can continue to scale without",
    "start": "454880",
    "end": "456639"
  },
  {
    "text": "burning up",
    "start": "456639",
    "end": "457280"
  },
  {
    "text": "more ip addresses this is where we need",
    "start": "457280",
    "end": "460000"
  },
  {
    "text": "a layer 7 load balancer",
    "start": "460000",
    "end": "461759"
  },
  {
    "text": "this operates at the application layer",
    "start": "461759",
    "end": "463599"
  },
  {
    "text": "and deals with the content of a message",
    "start": "463599",
    "end": "465520"
  },
  {
    "text": "versus the transport layer which",
    "start": "465520",
    "end": "467360"
  },
  {
    "text": "typically would define",
    "start": "467360",
    "end": "468639"
  },
  {
    "text": "https access layer 7 makes smarter load",
    "start": "468639",
    "end": "472000"
  },
  {
    "text": "balancing decisions and can even",
    "start": "472000",
    "end": "473599"
  },
  {
    "text": "increase your application performance",
    "start": "473599",
    "end": "476240"
  },
  {
    "text": "so let's take a look at another open",
    "start": "476240",
    "end": "477919"
  },
  {
    "text": "source project from vmware called",
    "start": "477919",
    "end": "479680"
  },
  {
    "text": "contour this is a high performance",
    "start": "479680",
    "end": "482080"
  },
  {
    "text": "ingress controller for kubernetes",
    "start": "482080",
    "end": "484080"
  },
  {
    "text": "it functions as a control plane for",
    "start": "484080",
    "end": "485840"
  },
  {
    "text": "envoy which is another verifiably",
    "start": "485840",
    "end": "488240"
  },
  {
    "text": "trusted cncf project",
    "start": "488240",
    "end": "490160"
  },
  {
    "text": "with features like dynamic",
    "start": "490160",
    "end": "491440"
  },
  {
    "text": "reconfiguration and secure ingress",
    "start": "491440",
    "end": "493680"
  },
  {
    "text": "delegation",
    "start": "493680",
    "end": "494639"
  },
  {
    "text": "it's your answer to having a",
    "start": "494639",
    "end": "496240"
  },
  {
    "text": "feature-rich kubernetes",
    "start": "496240",
    "end": "497840"
  },
  {
    "text": "ingress controller contour is all about",
    "start": "497840",
    "end": "500479"
  },
  {
    "text": "routing based on the application",
    "start": "500479",
    "end": "502000"
  },
  {
    "text": "endpoint",
    "start": "502000",
    "end": "502720"
  },
  {
    "text": "in this example we have delegated the",
    "start": "502720",
    "end": "504400"
  },
  {
    "text": "root domain to the namespace called team",
    "start": "504400",
    "end": "506639"
  },
  {
    "text": "a meaning that any service such as slash",
    "start": "506639",
    "end": "509039"
  },
  {
    "text": "demo or slash example",
    "start": "509039",
    "end": "510720"
  },
  {
    "text": "will default to the root ingress route",
    "start": "510720",
    "end": "512640"
  },
  {
    "text": "that has an application running on port",
    "start": "512640",
    "end": "514680"
  },
  {
    "text": "1112",
    "start": "514680",
    "end": "516159"
  },
  {
    "text": "after that ingress route is applied the",
    "start": "516159",
    "end": "518240"
  },
  {
    "text": "root domain becomes active and",
    "start": "518240",
    "end": "520000"
  },
  {
    "text": "valid now navigating to this load",
    "start": "520000",
    "end": "522000"
  },
  {
    "text": "balancer ip address",
    "start": "522000",
    "end": "523279"
  },
  {
    "text": "it gets me to the desired application",
    "start": "523279",
    "end": "525279"
  },
  {
    "text": "endpoint which maps back to the",
    "start": "525279",
    "end": "526720"
  },
  {
    "text": "container running on port",
    "start": "526720",
    "end": "528000"
  },
  {
    "text": "one one one two taking this a step",
    "start": "528000",
    "end": "530720"
  },
  {
    "text": "further i can do easy blue green testing",
    "start": "530720",
    "end": "532959"
  },
  {
    "text": "by creating two pots",
    "start": "532959",
    "end": "534320"
  },
  {
    "text": "and assigning them the labels of blue",
    "start": "534320",
    "end": "536080"
  },
  {
    "text": "and green within the root ingress",
    "start": "536080",
    "end": "538399"
  },
  {
    "text": "route i specify the route to match to be",
    "start": "538399",
    "end": "540560"
  },
  {
    "text": "either blue or green",
    "start": "540560",
    "end": "542080"
  },
  {
    "text": "apply the yaml and reload the page to",
    "start": "542080",
    "end": "544160"
  },
  {
    "text": "see version 2",
    "start": "544160",
    "end": "545120"
  },
  {
    "text": "of my application project contour is in",
    "start": "545120",
    "end": "547680"
  },
  {
    "text": "the incubating stage within the cloud",
    "start": "547680",
    "end": "549519"
  },
  {
    "text": "native computing foundation",
    "start": "549519",
    "end": "550959"
  },
  {
    "text": "so pay real close attention to this one",
    "start": "550959",
    "end": "553680"
  },
  {
    "start": "553000",
    "end": "652000"
  },
  {
    "text": "all right",
    "start": "553680",
    "end": "554240"
  },
  {
    "text": "now we're cooking we've got our",
    "start": "554240",
    "end": "555920"
  },
  {
    "text": "applications running scaling and",
    "start": "555920",
    "end": "557920"
  },
  {
    "text": "servicing lots of users",
    "start": "557920",
    "end": "559839"
  },
  {
    "text": "but as a developer i may want to see my",
    "start": "559839",
    "end": "562080"
  },
  {
    "text": "application dependencies outside of the",
    "start": "562080",
    "end": "564000"
  },
  {
    "text": "command line",
    "start": "564000",
    "end": "565040"
  },
  {
    "text": "sure it's nice to run a few commands to",
    "start": "565040",
    "end": "566959"
  },
  {
    "text": "see my services linked to pods that are",
    "start": "566959",
    "end": "568880"
  },
  {
    "text": "linked to persistent volumes but",
    "start": "568880",
    "end": "570480"
  },
  {
    "text": "how can i visually see this welcome",
    "start": "570480",
    "end": "573200"
  },
  {
    "text": "project",
    "start": "573200",
    "end": "573680"
  },
  {
    "text": "octant to the party octant is an open",
    "start": "573680",
    "end": "575839"
  },
  {
    "text": "source developer-centric web interface",
    "start": "575839",
    "end": "577839"
  },
  {
    "text": "for kubernetes",
    "start": "577839",
    "end": "578800"
  },
  {
    "text": "that lets you inspect a kubernetes",
    "start": "578800",
    "end": "580320"
  },
  {
    "text": "cluster and its applications",
    "start": "580320",
    "end": "582240"
  },
  {
    "text": "octane provides a visual interface to",
    "start": "582240",
    "end": "584240"
  },
  {
    "text": "managing kubernetes",
    "start": "584240",
    "end": "585600"
  },
  {
    "text": "that complements and extends existing",
    "start": "585600",
    "end": "587680"
  },
  {
    "text": "tools like cubectl and customize",
    "start": "587680",
    "end": "590160"
  },
  {
    "text": "use octan to debug your application or",
    "start": "590160",
    "end": "592560"
  },
  {
    "text": "filter what's happening in the cluster",
    "start": "592560",
    "end": "594160"
  },
  {
    "text": "using labels",
    "start": "594160",
    "end": "595279"
  },
  {
    "text": "octane is the only graphical user",
    "start": "595279",
    "end": "597279"
  },
  {
    "text": "interface that also provides plug-in",
    "start": "597279",
    "end": "599279"
  },
  {
    "text": "extensibility",
    "start": "599279",
    "end": "600160"
  },
  {
    "text": "to make it look like whatever you want",
    "start": "600160",
    "end": "602399"
  },
  {
    "text": "so here's octon",
    "start": "602399",
    "end": "603519"
  },
  {
    "text": "it shows everything running in a cluster",
    "start": "603519",
    "end": "605760"
  },
  {
    "text": "the first thing to do is select the",
    "start": "605760",
    "end": "607360"
  },
  {
    "text": "kubernetes namespace",
    "start": "607360",
    "end": "608720"
  },
  {
    "text": "which will populate the deployments pods",
    "start": "608720",
    "end": "610959"
  },
  {
    "text": "services config maps",
    "start": "610959",
    "end": "612480"
  },
  {
    "text": "i mean you name it everything in a",
    "start": "612480",
    "end": "614399"
  },
  {
    "text": "namespace so we click on deployments to",
    "start": "614399",
    "end": "616640"
  },
  {
    "text": "get a deeper view",
    "start": "616640",
    "end": "617680"
  },
  {
    "text": "and we can see the labels but we can",
    "start": "617680",
    "end": "619440"
  },
  {
    "text": "also scale replicas",
    "start": "619440",
    "end": "620959"
  },
  {
    "text": "directly from the ui so here's the",
    "start": "620959",
    "end": "623200"
  },
  {
    "text": "corresponding pods",
    "start": "623200",
    "end": "624560"
  },
  {
    "text": "its template and we can even edit the",
    "start": "624560",
    "end": "626640"
  },
  {
    "text": "version of the image on the fly",
    "start": "626640",
    "end": "628480"
  },
  {
    "text": "by doing that the event log kicks off",
    "start": "628480",
    "end": "630560"
  },
  {
    "text": "and the rolling upgrade begins",
    "start": "630560",
    "end": "632560"
  },
  {
    "text": "alright if you're not impressed yet what",
    "start": "632560",
    "end": "634240"
  },
  {
    "text": "about seeing relationship mapping",
    "start": "634240",
    "end": "636160"
  },
  {
    "text": "this allows me as a developer to see how",
    "start": "636160",
    "end": "638000"
  },
  {
    "text": "my deployment is connected to pods",
    "start": "638000",
    "end": "640160"
  },
  {
    "text": "load balancers ingress routes persistent",
    "start": "640160",
    "end": "642720"
  },
  {
    "text": "volumes",
    "start": "642720",
    "end": "643200"
  },
  {
    "text": "secrets and everything else it's an easy",
    "start": "643200",
    "end": "646240"
  },
  {
    "text": "visualization tool",
    "start": "646240",
    "end": "647360"
  },
  {
    "text": "ran directly from my desktop cool",
    "start": "647360",
    "end": "650320"
  },
  {
    "text": "another vmware open source project",
    "start": "650320",
    "end": "652800"
  },
  {
    "start": "652000",
    "end": "771000"
  },
  {
    "text": "but what's the one thing we always",
    "start": "652800",
    "end": "654560"
  },
  {
    "text": "forget about until it's too late",
    "start": "654560",
    "end": "656480"
  },
  {
    "text": "womp womp it's backup and restore when",
    "start": "656480",
    "end": "659200"
  },
  {
    "text": "containers first became popular",
    "start": "659200",
    "end": "660959"
  },
  {
    "text": "no one cared about backing them up",
    "start": "660959",
    "end": "662640"
  },
  {
    "text": "because they were stateless",
    "start": "662640",
    "end": "664399"
  },
  {
    "text": "but things progressed and now we have",
    "start": "664399",
    "end": "666320"
  },
  {
    "text": "databases and other applications that",
    "start": "666320",
    "end": "668320"
  },
  {
    "text": "require persistent volumes",
    "start": "668320",
    "end": "670240"
  },
  {
    "text": "containers still rock in situations like",
    "start": "670240",
    "end": "672240"
  },
  {
    "text": "these because it's all the benefits of a",
    "start": "672240",
    "end": "674320"
  },
  {
    "text": "container",
    "start": "674320",
    "end": "674959"
  },
  {
    "text": "but the storage is decoupled making it",
    "start": "674959",
    "end": "677200"
  },
  {
    "text": "super portable",
    "start": "677200",
    "end": "678959"
  },
  {
    "text": "lights camera valero valero is an open",
    "start": "678959",
    "end": "682160"
  },
  {
    "text": "source project from vmware that backs up",
    "start": "682160",
    "end": "684160"
  },
  {
    "text": "and restores",
    "start": "684160",
    "end": "685040"
  },
  {
    "text": "performs disaster recovery and migrates",
    "start": "685040",
    "end": "687519"
  },
  {
    "text": "kubernetes",
    "start": "687519",
    "end": "688079"
  },
  {
    "text": "cluster resources and persistent volumes",
    "start": "688079",
    "end": "691120"
  },
  {
    "text": "it's so simple point valero at a pod",
    "start": "691120",
    "end": "693600"
  },
  {
    "text": "deployment or an entire cluster",
    "start": "693600",
    "end": "695600"
  },
  {
    "text": "set a schedule for when backups should",
    "start": "695600",
    "end": "697200"
  },
  {
    "text": "be taken and rest easy knowing if",
    "start": "697200",
    "end": "699200"
  },
  {
    "text": "something happens to your cluster",
    "start": "699200",
    "end": "700720"
  },
  {
    "text": "a restoration is only a single command",
    "start": "700720",
    "end": "702640"
  },
  {
    "text": "line away do you want to get notified in",
    "start": "702640",
    "end": "704720"
  },
  {
    "text": "slack whenever a backup is complete",
    "start": "704720",
    "end": "706560"
  },
  {
    "text": "you can do that too with the new valero",
    "start": "706560",
    "end": "708399"
  },
  {
    "text": "web hooks",
    "start": "708399",
    "end": "709600"
  },
  {
    "text": "for this example let's use wordpress the",
    "start": "709600",
    "end": "712079"
  },
  {
    "text": "most widely used blogging platform on",
    "start": "712079",
    "end": "714000"
  },
  {
    "text": "the internet",
    "start": "714000",
    "end": "714880"
  },
  {
    "text": "it uses a mysql backend and both",
    "start": "714880",
    "end": "716959"
  },
  {
    "text": "services require persistent volumes",
    "start": "716959",
    "end": "719120"
  },
  {
    "text": "we can see that steve's awesome blog is",
    "start": "719120",
    "end": "720959"
  },
  {
    "text": "running and we've got our first post",
    "start": "720959",
    "end": "722480"
  },
  {
    "text": "published",
    "start": "722480",
    "end": "723200"
  },
  {
    "text": "let's create a backup of everything in",
    "start": "723200",
    "end": "724880"
  },
  {
    "text": "the default namespace",
    "start": "724880",
    "end": "726560"
  },
  {
    "text": "depending on the storage environment",
    "start": "726560",
    "end": "728079"
  },
  {
    "text": "different processes will occur",
    "start": "728079",
    "end": "730000"
  },
  {
    "text": "if you're on aws ebs snapshots are",
    "start": "730000",
    "end": "732320"
  },
  {
    "text": "created if you're on vsphere the volumes",
    "start": "732320",
    "end": "734320"
  },
  {
    "text": "will be copied to an s3 compatible data",
    "start": "734320",
    "end": "736480"
  },
  {
    "text": "store",
    "start": "736480",
    "end": "737120"
  },
  {
    "text": "again it depends on your environment and",
    "start": "737120",
    "end": "739360"
  },
  {
    "text": "let's replicate a scenario that",
    "start": "739360",
    "end": "740959"
  },
  {
    "text": "none of us ever want to experience and",
    "start": "740959",
    "end": "743040"
  },
  {
    "text": "we will delete the deployment",
    "start": "743040",
    "end": "744560"
  },
  {
    "text": "services and all the persistent volumes",
    "start": "744560",
    "end": "747360"
  },
  {
    "text": "poof",
    "start": "747360",
    "end": "748160"
  },
  {
    "text": "it's gone well don't start sweating yet",
    "start": "748160",
    "end": "750399"
  },
  {
    "text": "we've got this",
    "start": "750399",
    "end": "751519"
  },
  {
    "text": "so let's go to a completely different",
    "start": "751519",
    "end": "753120"
  },
  {
    "text": "kubernetes cluster and use valero to",
    "start": "753120",
    "end": "755200"
  },
  {
    "text": "restore the backup from the storage",
    "start": "755200",
    "end": "756800"
  },
  {
    "text": "location",
    "start": "756800",
    "end": "757839"
  },
  {
    "text": "after just a few seconds our deployments",
    "start": "757839",
    "end": "760160"
  },
  {
    "text": "services and persistent volumes",
    "start": "760160",
    "end": "762079"
  },
  {
    "text": "are all running once again we can",
    "start": "762079",
    "end": "763920"
  },
  {
    "text": "refresh our blog",
    "start": "763920",
    "end": "765120"
  },
  {
    "text": "and everything is back to normal crisis",
    "start": "765120",
    "end": "767360"
  },
  {
    "text": "averted",
    "start": "767360",
    "end": "768560"
  },
  {
    "text": "let's put valero on the board alright",
    "start": "768560",
    "end": "771600"
  },
  {
    "text": "let's imagine we are six months into",
    "start": "771600",
    "end": "773360"
  },
  {
    "text": "using kubernetes in production",
    "start": "773360",
    "end": "775040"
  },
  {
    "text": "everything is going great we just want",
    "start": "775040",
    "end": "776800"
  },
  {
    "text": "to make sure things continue to stay",
    "start": "776800",
    "end": "778480"
  },
  {
    "text": "great",
    "start": "778480",
    "end": "779279"
  },
  {
    "text": "to make that happen we want to do some",
    "start": "779279",
    "end": "780959"
  },
  {
    "text": "health checks just to make sure someone",
    "start": "780959",
    "end": "782880"
  },
  {
    "text": "didn't install something that would make",
    "start": "782880",
    "end": "784399"
  },
  {
    "text": "our kubernetes cluster be non-conformant",
    "start": "784399",
    "end": "786720"
  },
  {
    "text": "what is non-conformant well i'm glad you",
    "start": "786720",
    "end": "788800"
  },
  {
    "text": "asked you see the upstream at open",
    "start": "788800",
    "end": "790720"
  },
  {
    "text": "source version of kubernetes is really",
    "start": "790720",
    "end": "792240"
  },
  {
    "text": "the gold standard",
    "start": "792240",
    "end": "793519"
  },
  {
    "text": "that's what all applications and",
    "start": "793519",
    "end": "795040"
  },
  {
    "text": "integrations are tested against",
    "start": "795040",
    "end": "796800"
  },
  {
    "text": "if you start manipulating the cluster to",
    "start": "796800",
    "end": "798560"
  },
  {
    "text": "a point where it basically becomes a",
    "start": "798560",
    "end": "800000"
  },
  {
    "text": "fork",
    "start": "800000",
    "end": "800639"
  },
  {
    "text": "then you've got a snowflake and it's",
    "start": "800639",
    "end": "802399"
  },
  {
    "text": "going to be impossible to determine if",
    "start": "802399",
    "end": "804000"
  },
  {
    "text": "new applications or integrations will",
    "start": "804000",
    "end": "805920"
  },
  {
    "text": "actually work oh hey there sonoboy",
    "start": "805920",
    "end": "808720"
  },
  {
    "text": "sonobuoy is a tool that does",
    "start": "808720",
    "end": "810240"
  },
  {
    "text": "just that it will scan the cluster to",
    "start": "810240",
    "end": "812399"
  },
  {
    "text": "make sure things are healthy",
    "start": "812399",
    "end": "813680"
  },
  {
    "text": "and you can rest easy knowing that it's",
    "start": "813680",
    "end": "815519"
  },
  {
    "text": "not snowing in your data center",
    "start": "815519",
    "end": "817760"
  },
  {
    "text": "so we've got this for one cluster but",
    "start": "817760",
    "end": "819600"
  },
  {
    "text": "how do we do it for many clusters or",
    "start": "819600",
    "end": "821440"
  },
  {
    "text": "across",
    "start": "821440",
    "end": "822000"
  },
  {
    "text": "any cloud enter tanzu mission control",
    "start": "822000",
    "end": "825360"
  },
  {
    "text": "here's the tonzu mission control web",
    "start": "825360",
    "end": "827199"
  },
  {
    "text": "interface we can create tanzu kubernetes",
    "start": "827199",
    "end": "829680"
  },
  {
    "text": "clusters directly on aws",
    "start": "829680",
    "end": "831279"
  },
  {
    "text": "and vsphere but we can also attach any",
    "start": "831279",
    "end": "834000"
  },
  {
    "text": "kubernetes cluster running anywhere",
    "start": "834000",
    "end": "835920"
  },
  {
    "text": "not just for visibility but for also",
    "start": "835920",
    "end": "837760"
  },
  {
    "text": "control i can also perform",
    "start": "837760",
    "end": "839519"
  },
  {
    "text": "upgrades and scale clusters directly",
    "start": "839519",
    "end": "841360"
  },
  {
    "text": "from here too tons of mission control",
    "start": "841360",
    "end": "843440"
  },
  {
    "text": "has a number of policy types available",
    "start": "843440",
    "end": "845440"
  },
  {
    "text": "including access image network security",
    "start": "845440",
    "end": "848240"
  },
  {
    "text": "quota and even our own custom policies",
    "start": "848240",
    "end": "850720"
  },
  {
    "text": "that are all built on top of open policy",
    "start": "850720",
    "end": "853120"
  },
  {
    "text": "agent these policies can be applied to",
    "start": "853120",
    "end": "854959"
  },
  {
    "text": "multiple clusters and",
    "start": "854959",
    "end": "856000"
  },
  {
    "text": "everything is centrally managed by",
    "start": "856000",
    "end": "858160"
  },
  {
    "text": "drilling into a single cluster",
    "start": "858160",
    "end": "859600"
  },
  {
    "text": "i can see the overall health of it and i",
    "start": "859600",
    "end": "861600"
  },
  {
    "text": "can take it a step further in the",
    "start": "861600",
    "end": "863040"
  },
  {
    "text": "inspections tab",
    "start": "863040",
    "end": "864160"
  },
  {
    "text": "and you see those green check boxes",
    "start": "864160",
    "end": "866000"
  },
  {
    "text": "that's a sono boy conformance check",
    "start": "866000",
    "end": "867920"
  },
  {
    "text": "and making it visible to you we can even",
    "start": "867920",
    "end": "870000"
  },
  {
    "text": "run cis benchmarks and we can set valero",
    "start": "870000",
    "end": "872720"
  },
  {
    "text": "backup schedules from the data",
    "start": "872720",
    "end": "874240"
  },
  {
    "text": "protection tab too",
    "start": "874240",
    "end": "876240"
  },
  {
    "text": "that's a lot so far but we did it and to",
    "start": "876240",
    "end": "878639"
  },
  {
    "text": "be fair there's still more to tackle but",
    "start": "878639",
    "end": "880720"
  },
  {
    "text": "we can't make it happen with this short",
    "start": "880720",
    "end": "882480"
  },
  {
    "text": "video",
    "start": "882480",
    "end": "883120"
  },
  {
    "text": "so here's the other open source projects",
    "start": "883120",
    "end": "884959"
  },
  {
    "text": "that relate to kubernetes and",
    "start": "884959",
    "end": "886160"
  },
  {
    "text": "application development",
    "start": "886160",
    "end": "887360"
  },
  {
    "text": "that vmware is actively contributing to",
    "start": "887360",
    "end": "889279"
  },
  {
    "text": "and you should go check out",
    "start": "889279",
    "end": "891040"
  },
  {
    "text": "well that's all for today folks find out",
    "start": "891040",
    "end": "893199"
  },
  {
    "text": "more at tonsu.vmr.com",
    "start": "893199",
    "end": "896000"
  },
  {
    "text": "open source",
    "start": "896000",
    "end": "899839"
  }
]