[
  {
    "start": "0",
    "end": "81000"
  },
  {
    "text": "all right we're gonna go ahead and get started thank you everyone for joining us today welcome to today's webinar",
    "start": "2110",
    "end": "9280"
  },
  {
    "text": "service mess to service mesh I'm Taylor Wagner at the operations analyst here at",
    "start": "9280",
    "end": "15469"
  },
  {
    "text": "CNCs and I will be hosting such moderating today we'd like to welcome our presenters",
    "start": "15469",
    "end": "20810"
  },
  {
    "text": "Kavya Perlman the cyber security strategist at Wall arm and Rob Richardson Technical Evangelist at mem",
    "start": "20810",
    "end": "27350"
  },
  {
    "text": "sequel before we get started I'd like to go over a few housekeeping items during the webinar you are not able to talk as",
    "start": "27350",
    "end": "34460"
  },
  {
    "text": "an attendee but there is a Q&A box at the bottom of your zoom screen so please feel free to drop your questions in",
    "start": "34460",
    "end": "40460"
  },
  {
    "text": "there we're at it in the normal chat window and we'll get to as many as we can during the Q&A at the end um a",
    "start": "40460",
    "end": "46550"
  },
  {
    "text": "reminder that this is an official webinar of the CNCs and as such is subject to the CNC F code of conduct so",
    "start": "46550",
    "end": "53149"
  },
  {
    "text": "please don't add anything to the chat or to the Q&A that would be in violation of that code and basically please be",
    "start": "53149",
    "end": "59179"
  },
  {
    "text": "respectful of all of your fellow participants and the presenters and a reminder that the recording and slides",
    "start": "59179",
    "end": "64878"
  },
  {
    "text": "will be posted later today on the CMC ah go up on our page which is CN CF dot io slash webinars with that I'd like to",
    "start": "64879",
    "end": "72620"
  },
  {
    "text": "hand it over to Kavya and Rob to kick off today's presentation the",
    "start": "72620",
    "end": "79080"
  },
  {
    "text": "you tailor what if there were no traffic",
    "start": "79080",
    "end": "84870"
  },
  {
    "start": "81000",
    "end": "81000"
  },
  {
    "text": "rules and barely any traffic lights just one traffic cop basically for the",
    "start": "84870",
    "end": "91170"
  },
  {
    "text": "namesake and every car just a car or automobiles just in the town had",
    "start": "91170",
    "end": "97860"
  },
  {
    "text": "someplace ago just no set of standard rules on how to get there so what ends",
    "start": "97860",
    "end": "104070"
  },
  {
    "text": "up happening is these cars people police traffic signals create a messy situation",
    "start": "104070",
    "end": "111380"
  },
  {
    "text": "in fact imagine traffic cop is giving people tickets and telling people where",
    "start": "111380",
    "end": "118140"
  },
  {
    "text": "they should go however none of this is really helping the situation",
    "start": "118140",
    "end": "123799"
  },
  {
    "text": "now think about another scenario something more futuristic word there is",
    "start": "124340",
    "end": "130020"
  },
  {
    "text": "not just a set of rules but a real-time continuous intelligence sharing full",
    "start": "130020",
    "end": "136380"
  },
  {
    "text": "visibility full connectivity kind of like the fully autonomous vehicles",
    "start": "136380",
    "end": "142340"
  },
  {
    "text": "contrary to handing out tickets now we could now route our traffic and",
    "start": "142340",
    "end": "147810"
  },
  {
    "text": "communicate intelligently and efficiently so that we could maximize on all the knowledge each vehicle and the",
    "start": "147810",
    "end": "155880"
  },
  {
    "text": "cop has this is the analogy we would like to use today and we would like you",
    "start": "155880",
    "end": "162630"
  },
  {
    "text": "to keep in mind this analogy as we go through the webinar together presenting",
    "start": "162630",
    "end": "168690"
  },
  {
    "text": "with me today is Rob Richardson my very good friend Rob began as a software",
    "start": "168690",
    "end": "174030"
  },
  {
    "start": "169000",
    "end": "169000"
  },
  {
    "text": "developer in 2000 the times when we needed to deploy our website so he got",
    "start": "174030",
    "end": "179910"
  },
  {
    "text": "good at server administration for Windows and Linux as a community got better at source control Rob learned and",
    "start": "179910",
    "end": "187709"
  },
  {
    "text": "taught CBS see SVN and get and in the time community got better at unit",
    "start": "187709",
    "end": "194160"
  },
  {
    "text": "testing software so he learned unit testing and dependency injection we move",
    "start": "194160",
    "end": "200070"
  },
  {
    "text": "towards continuous integration principle so Rob learned cruise control team city",
    "start": "200070",
    "end": "206160"
  },
  {
    "text": "and eventually Azure DevOps leading workshops and courses for individuals and companies learning",
    "start": "206160",
    "end": "212560"
  },
  {
    "text": "Automation now we are in a containerized world so rob has been learning and teaching docker and kubernetes is 2016",
    "start": "212560",
    "end": "221050"
  },
  {
    "text": "Rob is first and foremost a developer and a teacher so he's grown with us through the",
    "start": "221050",
    "end": "226450"
  },
  {
    "text": "software mess now Rob is a tech evangelist from M sequel where he gets to share his passion for software",
    "start": "226450",
    "end": "232690"
  },
  {
    "text": "development and application architecture with the world as an international conference speaker but even still Rob",
    "start": "232690",
    "end": "240099"
  },
  {
    "text": "can be seen tinkering with the code and teaching a few teaching the view at events like a Z give camp and southeast",
    "start": "240099",
    "end": "247360"
  },
  {
    "text": "Valley dotnet user group this is funny one of the things that he is most proud",
    "start": "247360",
    "end": "252819"
  },
  {
    "text": "of is and because I've done this intro a few times for of it's always funny when",
    "start": "252819",
    "end": "257859"
  },
  {
    "text": "I read this he's he's most proud of the comment that he posted at dotnet rocks",
    "start": "257859",
    "end": "264880"
  },
  {
    "text": "for podcasts they gave they read it on the air and sent him goofer of I met Rob",
    "start": "264880",
    "end": "273010"
  },
  {
    "text": "Richardson as he was teaching at security teaching security at Phoenix at",
    "start": "273010",
    "end": "278919"
  },
  {
    "text": "a dev Cyclops conference he was doing a Cooper needed security talk and I could totally see his passion for teaching",
    "start": "278919",
    "end": "285340"
  },
  {
    "text": "various technologies including cloud native security that's what brought him",
    "start": "285340",
    "end": "290440"
  },
  {
    "text": "to mem sequel were fancy cool recently launched their cloud native manage database meant sequel Helios Rob and I",
    "start": "290440",
    "end": "297970"
  },
  {
    "text": "have written blogs together given a few talks together including CNC a FinTech",
    "start": "297970",
    "end": "303520"
  },
  {
    "text": "forum at Wall Street New York's New York City talking about kubernetes security",
    "start": "303520",
    "end": "308560"
  },
  {
    "text": "so Rob thank you again so much for this collaboration I am really excited now",
    "start": "308560",
    "end": "315250"
  },
  {
    "text": "and I'm glad that we continue this journey together for teaching and learning and as always I look forward to",
    "start": "315250",
    "end": "322180"
  },
  {
    "text": "learning with you today most definitely thanks for the kind words Kavya I'm",
    "start": "322180",
    "end": "327669"
  },
  {
    "text": "really excited to join with you my good friend cobby is a cybersecurity strategist at wall armed an application",
    "start": "327669",
    "end": "333910"
  },
  {
    "text": "security company that protects api's and cloud native technologies just last year",
    "start": "333910",
    "end": "340990"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "at cube con Kavya was part of a big launch where wall arm extended their capabilities support service mesh architecture and",
    "start": "340990",
    "end": "347400"
  },
  {
    "text": "envoy proxy here's my favorite part as we dig into the history and story of Kavya she's amazing Kavya was a third",
    "start": "347400",
    "end": "353970"
  },
  {
    "text": "party security adviser for Facebook during the last US presidential election so she was able to review technologies",
    "start": "353970",
    "end": "360600"
  },
  {
    "text": "in various sizes and innovative things like cloud native and virtual and augmented reality and see how it could",
    "start": "360600",
    "end": "366630"
  },
  {
    "text": "impact a platform as big as Facebook with 2 billion users due to her work and contribution to the security industry",
    "start": "366630",
    "end": "372450"
  },
  {
    "text": "she has won several awards she's also known as the cyber Guardian she's the founder and CEO of the XR Safety",
    "start": "372450",
    "end": "379350"
  },
  {
    "text": "Initiative a non-profit organization dedicated to helping build safe and immersive environments via virtual",
    "start": "379350",
    "end": "385470"
  },
  {
    "text": "reality and augmented reality and mixed reality I'm really excited to see the skills and talents of Kavya and really",
    "start": "385470",
    "end": "392160"
  },
  {
    "text": "thrilled that I get to share the stage with you my good friend thank you Rob so",
    "start": "392160",
    "end": "398850"
  },
  {
    "text": "let's dig into what we're gonna talk about today we're witnessing the rise of micro services and cloud native technologies",
    "start": "398850",
    "end": "405060"
  },
  {
    "text": "however one big challenge of micro service architecture is the overhead of managing network communication between",
    "start": "405060",
    "end": "411300"
  },
  {
    "text": "services many companies are successfully using tools like Cooper Nettie's for deployment but they still face runtime",
    "start": "411300",
    "end": "417330"
  },
  {
    "text": "challenges with routing monitoring and security having a mess of tens hundreds",
    "start": "417330",
    "end": "422610"
  },
  {
    "text": "or even thousands of services communicating into production is a job",
    "start": "422610",
    "end": "428130"
  },
  {
    "text": "only for the brave technical hearts this is where service mesh comes to clean up the mess in the next 40 minutes we'll",
    "start": "428130",
    "end": "435690"
  },
  {
    "text": "discuss the service mesh we'll discuss our history of getting from monolithic to micro services will discuss the",
    "start": "435690",
    "end": "442320"
  },
  {
    "text": "challenge that we had with API gateways and the market that it created for a service mesh we'll dive deep into the",
    "start": "442320",
    "end": "448380"
  },
  {
    "text": "principles and practices of service mesh looking at both sto and linker D as",
    "start": "448380",
    "end": "453900"
  },
  {
    "text": "examples we'll do a demo of both linker D and sto and then we'll summarize with",
    "start": "453900",
    "end": "459030"
  },
  {
    "text": "service mesh best practices in cases where you may choose to use it or may choose not to use it",
    "start": "459030",
    "end": "465860"
  },
  {
    "text": "so what is service mesh Rob and I have spent a great deal of time reviewing",
    "start": "466800",
    "end": "472949"
  },
  {
    "text": "various definitions of service mesh and we arrived at one of the simplest one",
    "start": "472949",
    "end": "478800"
  },
  {
    "text": "being our favorite a service mesh manages the network traffic between",
    "start": "478800",
    "end": "484669"
  },
  {
    "text": "services in a graceful and scalable way service mesh is the answer to how do I",
    "start": "484669",
    "end": "493169"
  },
  {
    "text": "observe control and secure communication",
    "start": "493169",
    "end": "498360"
  },
  {
    "text": "between micro services a service mesh",
    "start": "498360",
    "end": "503580"
  },
  {
    "text": "answers the question how do I observe control secure communication between",
    "start": "503580",
    "end": "508650"
  },
  {
    "text": "services so let's look deeper a service mesh inter intercepts traffic going into and",
    "start": "508650",
    "end": "515010"
  },
  {
    "text": "out of a container whether between containers or from to outside of",
    "start": "515010",
    "end": "520050"
  },
  {
    "text": "resources because it intercepts all cluster network traffic it can monitor",
    "start": "520050",
    "end": "525720"
  },
  {
    "text": "and validate connections mapping out the communications between services it can",
    "start": "525720",
    "end": "530940"
  },
  {
    "text": "also understand service health intercept failures or inject chaos the beauty of",
    "start": "530940",
    "end": "536670"
  },
  {
    "text": "intercepting all cluster traffic is that service mesh can do freely interesting things to validate and route traffic in",
    "start": "536670",
    "end": "543899"
  },
  {
    "text": "general we choose a service mesh when we are looking to solve one of these",
    "start": "543899",
    "end": "548910"
  },
  {
    "text": "problems observe observe traffic in the cluster discover map or log control",
    "start": "548910",
    "end": "558920"
  },
  {
    "text": "control traffic in the cluster access policies split traffic between versions",
    "start": "558920",
    "end": "564570"
  },
  {
    "text": "and finally secure secure traffic between network resources such as HTTP",
    "start": "564570",
    "end": "571560"
  },
  {
    "text": "between containers now let's take a look at the difference between monolithic and",
    "start": "571560",
    "end": "578730"
  },
  {
    "start": "575000",
    "end": "575000"
  },
  {
    "text": "Microsoft's architectures monolithic architecture is a traditional model for",
    "start": "578730",
    "end": "584339"
  },
  {
    "text": "designing and developing software the monolithic applications consists of a single contained single self-contained",
    "start": "584339",
    "end": "591870"
  },
  {
    "text": "unit in which all the code exists in a single codebase and in which modules are",
    "start": "591870",
    "end": "597329"
  },
  {
    "text": "interconnected at the Klieman time the entire code base is deployed and scaling is achieved by",
    "start": "597329",
    "end": "603790"
  },
  {
    "text": "adding additional notes however though much like the evolution of automobiles",
    "start": "603790",
    "end": "609820"
  },
  {
    "text": "the more complex the system became but the more challenging it was to maintain",
    "start": "609820",
    "end": "615100"
  },
  {
    "text": "self-contained solutions the problem was that as the codebase and the applications grew in terms of",
    "start": "615100",
    "end": "621280"
  },
  {
    "text": "functionality and complexity the more challenging it became to iterate on it",
    "start": "621280",
    "end": "626290"
  },
  {
    "text": "each component of monolith had to be tuned to work perfectly with the other components or else the entire system",
    "start": "626290",
    "end": "633040"
  },
  {
    "text": "applications would fail and prior to actually doing the Facebook third party right after doing the phase but third",
    "start": "633040",
    "end": "639730"
  },
  {
    "text": "party is securities work I joined as a head of security for virtual reality",
    "start": "639730",
    "end": "645190"
  },
  {
    "text": "firm and the oldest virtual world Second Life at Linden Lab and as a head of",
    "start": "645190",
    "end": "651910"
  },
  {
    "text": "security with all those legacy system I really got to witness this entire sort of messy situation and moving on to",
    "start": "651910",
    "end": "658060"
  },
  {
    "text": "micro services and this is where micro services are really great a micro",
    "start": "658060",
    "end": "663940"
  },
  {
    "text": "service architecture involves the building of modules that address a specific task or business objective",
    "start": "663940",
    "end": "670600"
  },
  {
    "text": "micro services are created in order to overcome the issues and constraints of",
    "start": "670600",
    "end": "676330"
  },
  {
    "text": "monolithic applications one of the thing applications have a tendency to grow over time and in size so as the",
    "start": "676330",
    "end": "684280"
  },
  {
    "text": "applications become larger and larger this sort of tight coupling between components result in slower and more",
    "start": "684280",
    "end": "691780"
  },
  {
    "text": "challenging deployments micro services solve these challenges of monolithic",
    "start": "691780",
    "end": "697000"
  },
  {
    "text": "system and because they are much more much you know being as modular as possible so in the simplest form they",
    "start": "697000",
    "end": "704050"
  },
  {
    "text": "help build an application as a suite of small services each running its own",
    "start": "704050",
    "end": "709240"
  },
  {
    "text": "process and are independently deployable these services may be written in different programming languages and may",
    "start": "709240",
    "end": "716260"
  },
  {
    "text": "use different data storage techniques in our monolithic old architecture we dealt",
    "start": "716260",
    "end": "723610"
  },
  {
    "start": "719000",
    "end": "719000"
  },
  {
    "text": "mostly exclusively with north-south traffic but with micro services we must",
    "start": "723610",
    "end": "729480"
  },
  {
    "text": "increasingly deal with traffic inside the sir McMullen model it's different",
    "start": "729480",
    "end": "735160"
  },
  {
    "text": "components communicated with each other using function calls within the application edge gateways abstracted",
    "start": "735160",
    "end": "742060"
  },
  {
    "text": "away common traffic orchestration function at the edge such as authentication logging rate limiting the",
    "start": "742060",
    "end": "750130"
  },
  {
    "text": "communication conducted within the confines of the monolith did not require any of those activities while east-west",
    "start": "750130",
    "end": "757300"
  },
  {
    "text": "traffic presents a greater challenge due to replacing our function calls of communication over the network it allows",
    "start": "757300",
    "end": "763420"
  },
  {
    "text": "us to use whatever transport method we want as we replaced function in a",
    "start": "763420",
    "end": "769000"
  },
  {
    "text": "invocation with api's over network this means that the different services within",
    "start": "769000",
    "end": "775480"
  },
  {
    "text": "our architecture don't have to know about each other if our api is consumable then we have",
    "start": "775480",
    "end": "781570"
  },
  {
    "text": "the flexibility with everything else this can provide a big advantage for",
    "start": "781570",
    "end": "786730"
  },
  {
    "text": "instance if we're a big organization and if we acquire another team we don't have",
    "start": "786730",
    "end": "792070"
  },
  {
    "text": "to worry about the coding language they're using or how they do things so with the increased east-west traffic",
    "start": "792070",
    "end": "798670"
  },
  {
    "text": "that comes with micro services we now need the ability to properly orchestrate",
    "start": "798670",
    "end": "804190"
  },
  {
    "text": "it which is the same issue we face with our monoliths at the edge we needed to",
    "start": "804190",
    "end": "809830"
  },
  {
    "text": "effectively route the traffic and that's where we first learn on the about the",
    "start": "809830",
    "end": "815440"
  },
  {
    "text": "api gateways which rob is going to tell us more about over the rubb most",
    "start": "815440",
    "end": "822670"
  },
  {
    "text": "definitely I love this analogy of Northwest and north-south and east-west and thank you for teaching that to us",
    "start": "822670",
    "end": "828930"
  },
  {
    "text": "north-south is into containers and east-west is between containers and",
    "start": "828930",
    "end": "834220"
  },
  {
    "text": "that's really where we start to hit this wall with API gateways an API gateway is great at standing in front of our",
    "start": "834220",
    "end": "841870"
  },
  {
    "start": "835000",
    "end": "835000"
  },
  {
    "text": "cluster and being that initial gate that initial barrier assuming that our user",
    "start": "841870",
    "end": "848230"
  },
  {
    "text": "interface is in the browser a thick client spa the user interface will connect to the API gateway and the API",
    "start": "848230",
    "end": "854230"
  },
  {
    "text": "gateway will fan out that traffic to each micro service but what we see down here at the bottom is that some of our",
    "start": "854230",
    "end": "859630"
  },
  {
    "text": "micro services have misbehaved they're not doing that thing about micro service should own its own data source",
    "start": "859630",
    "end": "866440"
  },
  {
    "text": "they're going directly to other microservices data sources and an api gateway being that boundary around our",
    "start": "866440",
    "end": "872860"
  },
  {
    "text": "cluster really can't help us here it can only really say well you know the traffic was valid coming in and so when",
    "start": "872860",
    "end": "880720"
  },
  {
    "text": "we reach the limit of API gateways that's when we started to dig into",
    "start": "880720",
    "end": "886170"
  },
  {
    "text": "service meshes we want a way to be able to control the traffic not only into our",
    "start": "886170",
    "end": "891340"
  },
  {
    "text": "cluster and out of our cluster that north-south content but also between our microservices east-west as we go through",
    "start": "891340",
    "end": "898540"
  },
  {
    "text": "our cluster so here's an example of a service mesh in our service mesh",
    "start": "898540",
    "end": "904230"
  },
  {
    "start": "900000",
    "end": "900000"
  },
  {
    "text": "scenario service a wants to connect to service B now instead of service a",
    "start": "904230",
    "end": "909280"
  },
  {
    "text": "connecting directly to service B as it would without a service mesh service a is going to reach out into that sidecar",
    "start": "909280",
    "end": "914890"
  },
  {
    "text": "proxy that's the clue that's defined in that same pod so as service a got deployed the sidecar proxy got included",
    "start": "914890",
    "end": "922300"
  },
  {
    "text": "in there so service a reaches out to the side of the sidecar proxy and the sidecar proxy reaches out to the service",
    "start": "922300",
    "end": "928960"
  },
  {
    "text": "meshes control plane is service a allowed to connect to service B what's the URL for service B those details come",
    "start": "928960",
    "end": "936370"
  },
  {
    "text": "back to the service a sidecar proxy and the proxy then connects to service B",
    "start": "936370",
    "end": "942430"
  },
  {
    "text": "sidecar proxy and we can do mutual TLS if we choose to do so so service B",
    "start": "942430",
    "end": "947500"
  },
  {
    "text": "sidecar proxy then reaches out to the control plane as well and says hey is service a allowed to connect to me the",
    "start": "947500",
    "end": "954100"
  },
  {
    "text": "control plane confirms that and service B's proxy for is that traffic on the service B the cool part is that service",
    "start": "954100",
    "end": "960430"
  },
  {
    "text": "a and service B are now able to communicate but all of the details about am i authorized to connect to that other",
    "start": "960430",
    "end": "966400"
  },
  {
    "text": "service all of the details about mutual TLS all of those are handled by these sarkar proxies and the service mesh",
    "start": "966400",
    "end": "973030"
  },
  {
    "text": "control plane we can do similar analogies if service a wanted to talk to an external service or if ingress",
    "start": "973030",
    "end": "979270"
  },
  {
    "text": "traffic was flowing into service B all of that detail is managed by the service",
    "start": "979270",
    "end": "985000"
  },
  {
    "text": "mesh control plane and all of the sidecar proxies deployed with each service allow us to get those insights",
    "start": "985000",
    "end": "990850"
  },
  {
    "text": "allow us to collect telemetry and logging and really get a feel for how the traffic moves through our cluster",
    "start": "990850",
    "end": "999170"
  },
  {
    "text": "so we talked about observe control and secure as we start to dig into the features of service mesh we get a really",
    "start": "999170",
    "end": "1006880"
  },
  {
    "text": "good feel for observe control and secure on the observe side because we have",
    "start": "1006880",
    "end": "1012370"
  },
  {
    "text": "these sidecar proxies proxying all the traffic in our cluster we can start to",
    "start": "1012370",
    "end": "1018399"
  },
  {
    "text": "monitor that network traffic we can see failures we can log failures we can log up time towards control we have access",
    "start": "1018399",
    "end": "1026380"
  },
  {
    "text": "policies is service a allowed to connect to service B we can create additional policies like only things within my",
    "start": "1026380",
    "end": "1032500"
  },
  {
    "text": "namespace or only things with this are back token are allowed to connect to this cluster are this container towards",
    "start": "1032500",
    "end": "1040630"
  },
  {
    "text": "secure we now have mutual TLS and it's mutual TLS that didn't require code changes in our applications to ensure",
    "start": "1040630",
    "end": "1047020"
  },
  {
    "text": "the the content we don't need to worry about trust chains we don't need to worry about certificate revocation all",
    "start": "1047020",
    "end": "1054010"
  },
  {
    "text": "of that is handled by the service mesh digging a bit deeper now that we're",
    "start": "1054010",
    "end": "1060610"
  },
  {
    "start": "1059000",
    "end": "1059000"
  },
  {
    "text": "proxying traffic between all services we can create some of these higher-level services we can do things like",
    "start": "1060610",
    "end": "1067600"
  },
  {
    "text": "monitoring service health and logging when systems are up and down we can dig",
    "start": "1067600",
    "end": "1073540"
  },
  {
    "text": "into more complex logging grabbing all of the response codes and validating",
    "start": "1073540",
    "end": "1078640"
  },
  {
    "text": "service health detailing traffic between",
    "start": "1078640",
    "end": "1084400"
  },
  {
    "text": "services and keeping track of how a request flows across the system because",
    "start": "1084400",
    "end": "1091900"
  },
  {
    "text": "we're practicing proxying all traffic between all containers one of the really cool things is we can ask the service",
    "start": "1091900",
    "end": "1099100"
  },
  {
    "text": "mesh for a network topology diagram a network architecture diagram now the beauty here it's not what the developer",
    "start": "1099100",
    "end": "1105340"
  },
  {
    "text": "thought would happen but it's what's actually happening in the cluster based on actual traffic patterns digging",
    "start": "1105340",
    "end": "1113320"
  },
  {
    "text": "further into the features because we're routing all of the traffic we can do some really intelligent things with that",
    "start": "1113320",
    "end": "1119590"
  },
  {
    "text": "traffic so for example if a service is failing we can flip the circuit breaker and suddenly no traffic is flowing to",
    "start": "1119590",
    "end": "1126130"
  },
  {
    "text": "that surface service while that service heals so when the service comes back online the service mesh can notice and",
    "start": "1126130",
    "end": "1132580"
  },
  {
    "text": "start routing traffic to it in the meantime it's just going to intelligently fail all of the requests",
    "start": "1132580",
    "end": "1137770"
  },
  {
    "text": "to that service so that additional so the clients aren't waiting for that content similarly we can do a/b testing",
    "start": "1137770",
    "end": "1145780"
  },
  {
    "text": "where a portion of the traffic goes to the new channel the new version while we validate that that behaves as expected",
    "start": "1145780",
    "end": "1152370"
  },
  {
    "text": "once that system is contained and healthy we can start to wrap more traffic eventually strangling the",
    "start": "1152370",
    "end": "1158860"
  },
  {
    "text": "content from the old version similarly we could create a beta channel or a canary release where we can say here's",
    "start": "1158860",
    "end": "1165940"
  },
  {
    "text": "that newest feature for those people who are able to see it so we can grab details like HTTP headers or",
    "start": "1165940",
    "end": "1173409"
  },
  {
    "text": "authentication tokens and route content to the new versions while keeping the majority of the content at the original",
    "start": "1173409",
    "end": "1179409"
  },
  {
    "text": "versions all these are possible with these advanced routing rules because we're proxying all traffic across all",
    "start": "1179409",
    "end": "1186400"
  },
  {
    "text": "services digging deeper we now have dashboards over the top of our service",
    "start": "1186400",
    "end": "1193960"
  },
  {
    "text": "mesh where we can take a look at on the left the service health and history of",
    "start": "1193960",
    "end": "1200049"
  },
  {
    "text": "each service on the right there's that network topology diagram where we can ask the services exactly what they're",
    "start": "1200049",
    "end": "1206590"
  },
  {
    "text": "doing and route actual traffic and show actual traffic routing across our our",
    "start": "1206590",
    "end": "1211960"
  },
  {
    "text": "history our service finish",
    "start": "1211960",
    "end": "1215669"
  },
  {
    "text": "so because we have these proxies validating all of the rules we won't end",
    "start": "1216990",
    "end": "1223030"
  },
  {
    "text": "up in this scenario where a micro service accidentally calls into a different micro services data store we",
    "start": "1223030",
    "end": "1230140"
  },
  {
    "text": "can create those rules to ensure that each micro service owns its own data store and only those authorized to",
    "start": "1230140",
    "end": "1236799"
  },
  {
    "text": "connect to each container are allowed to do so",
    "start": "1236799",
    "end": "1241590"
  },
  {
    "text": "so we're going to look at two examples of service meshes today we're gonna look at both linker D and sto and so before",
    "start": "1242920",
    "end": "1249650"
  },
  {
    "text": "we do that let's look at kind of a high level what linker D is about now we can do a bake off comparing speed or",
    "start": "1249650",
    "end": "1256460"
  },
  {
    "text": "features but that's gonna be transient and that's gonna evolve over time instead let's look at kind of the methodology the methodology of linker D",
    "start": "1256460",
    "end": "1263840"
  },
  {
    "text": "is that they focus on a simple set up they're really proud of their install procedure and just a core piece of",
    "start": "1263840",
    "end": "1272180"
  },
  {
    "text": "functionality that allows you to get going if you need advanced scenarios then they invite you to grab third-party",
    "start": "1272180",
    "end": "1278330"
  },
  {
    "text": "components and strap those on all of those core pieces they build in-house",
    "start": "1278330",
    "end": "1283520"
  },
  {
    "text": "and so they're really great at can contributing to the go and rust",
    "start": "1283520",
    "end": "1288620"
  },
  {
    "text": "communities as they build out the features necessary to create these this content",
    "start": "1288620",
    "end": "1295860"
  },
  {
    "text": "similarly with sto s Tio's methodology is to create a suite of features that",
    "start": "1295860",
    "end": "1301630"
  },
  {
    "text": "you can toggle on and off so by installing their software you have all of the pieces that you need to go",
    "start": "1301630",
    "end": "1307540"
  },
  {
    "text": "sto is also really good at combining the best from the industry so they include a",
    "start": "1307540",
    "end": "1313330"
  },
  {
    "text": "whole lot of third-party products linker D in version 2 uses a non-void proxy as",
    "start": "1313330",
    "end": "1318460"
  },
  {
    "text": "well sto uses an envoy proxy metrics from Griffin ax a Prometheus dashboard a",
    "start": "1318460",
    "end": "1323620"
  },
  {
    "text": "jeager tracing dashboard and we'll see other dashboards as well we can see on the right because we have this",
    "start": "1323620",
    "end": "1330210"
  },
  {
    "text": "methodology of proxying all traffic on the right as this virtual service that allows 75% of the traffic to version 1",
    "start": "1330210",
    "end": "1337810"
  },
  {
    "text": "and 25 percent of the traffic to version 2 for this service that's possible in",
    "start": "1337810",
    "end": "1343180"
  },
  {
    "text": "ISTE o given these advanced routing rules",
    "start": "1343180",
    "end": "1347280"
  },
  {
    "text": "so let's dig into a demo we're gonna take a look at sto and linker D so I",
    "start": "1348260",
    "end": "1356250"
  },
  {
    "text": "don't have link or D running yet I just have an empty cluster but let's start",
    "start": "1356250",
    "end": "1363450"
  },
  {
    "text": "out doing exactly that let's go to the linker D startup page I am gonna have to",
    "start": "1363450",
    "end": "1371130"
  },
  {
    "text": "break out of the slides the sto the",
    "start": "1371130",
    "end": "1376320"
  },
  {
    "text": "linker D getting started page is really elegant and walks us through all of the processes for getting that installed I'm",
    "start": "1376320",
    "end": "1382530"
  },
  {
    "text": "gonna do exactly that I'm gonna do this linker D check and it can go validate",
    "start": "1382530",
    "end": "1389880"
  },
  {
    "text": "that my cluster meets the necessary recommendations for linker D once I've",
    "start": "1389880",
    "end": "1398760"
  },
  {
    "text": "got that in place let's go download link or D so I did install the linker D",
    "start": "1398760",
    "end": "1404910"
  },
  {
    "text": "command-line I did put that in my path and so I can just do that linker D install linker D check is great linker D",
    "start": "1404910",
    "end": "1414870"
  },
  {
    "text": "check will now go see how did it do it's going to watch those pods and validate",
    "start": "1414870",
    "end": "1421380"
  },
  {
    "text": "that they start up correctly and keep track of all of the details in in linker",
    "start": "1421380",
    "end": "1426420"
  },
  {
    "text": "D to make sure that everything is running correctly I love that it enumerates all of the pieces of my",
    "start": "1426420",
    "end": "1431550"
  },
  {
    "text": "cluster and validates that it's working correctly",
    "start": "1431550",
    "end": "1435680"
  },
  {
    "text": "so this just takes a minute to get going I'll scroll up nope I won't scroll up",
    "start": "1437360",
    "end": "1444049"
  },
  {
    "text": "that link Rd install I just piped that off to cube CTL apply and ultimately",
    "start": "1444049",
    "end": "1450570"
  },
  {
    "text": "that gets that content into place so great now my linker D install is ready",
    "start": "1450570",
    "end": "1455700"
  },
  {
    "text": "to go let's go take a look at it linker D dashboard so linker D dashboard",
    "start": "1455700",
    "end": "1463350"
  },
  {
    "text": "will start this dashboard and I'll be able to see all of the pieces of my cluster I'm going to switch over to the",
    "start": "1463350",
    "end": "1469799"
  },
  {
    "text": "link or D namespace and I can see all of the containers I can see the various",
    "start": "1469799",
    "end": "1475500"
  },
  {
    "text": "details with each one if I switch over to deployments or other content here I",
    "start": "1475500",
    "end": "1482759"
  },
  {
    "text": "can then flip over to the graph on a dashboard where I can see the actual metrics for this service doing all the",
    "start": "1482759",
    "end": "1490049"
  },
  {
    "text": "things that it needs to do now this is really great I get to see",
    "start": "1490049",
    "end": "1495389"
  },
  {
    "text": "the service health I get to see gravano dashboards I get to see all of the content involved in my linker D",
    "start": "1495389",
    "end": "1501929"
  },
  {
    "text": "dashboard so I'm going to break out of that and let's switch over to Sto",
    "start": "1501929",
    "end": "1507720"
  },
  {
    "text": "oh one more thing that dashboard was really good for harvesting all the",
    "start": "1507720",
    "end": "1514139"
  },
  {
    "text": "statistics but in time I may want to flip over to doing that from a command line interface where I can harvest this",
    "start": "1514139",
    "end": "1520529"
  },
  {
    "text": "and push that content elsewhere I do have a Prometheus dashboard where I can grab that content using Prometheus a",
    "start": "1520529",
    "end": "1528320"
  },
  {
    "text": "Prometheus sink rather but I can also grab these metrics from the command line where I could use that to pipe it to",
    "start": "1528320",
    "end": "1534720"
  },
  {
    "text": "other content as well so switching over to Sto",
    "start": "1534720",
    "end": "1543379"
  },
  {
    "text": "let's flip over to the sto cluster where",
    "start": "1545480",
    "end": "1551850"
  },
  {
    "text": "link RD focused on that really fast setup experience sto focuses on having",
    "start": "1551850",
    "end": "1557179"
  },
  {
    "text": "pieces that allow us to turn things on and off so for example here's the",
    "start": "1557179",
    "end": "1564919"
  },
  {
    "text": "profiles that allow us to turn on and off various features so if I want if I",
    "start": "1564919",
    "end": "1571049"
  },
  {
    "text": "want to default to all things on which I do in this case I have the demo profile running then I have all of these",
    "start": "1571049",
    "end": "1576899"
  },
  {
    "text": "features enabled and so if I don't find a profile that exactly matches what I'm looking for I can definitely turn on and",
    "start": "1576899",
    "end": "1583860"
  },
  {
    "text": "off features as I go Griffen ax sto tracing ple Prometheus all these",
    "start": "1583860",
    "end": "1590850"
  },
  {
    "text": "dashboards we can enable or disable by just triggering turning them on and off inside sto",
    "start": "1590850",
    "end": "1598519"
  },
  {
    "text": "so the sto docks are really great at getting us started I already have the",
    "start": "1598960",
    "end": "1606710"
  },
  {
    "text": "sto setup installed and I have this demo app now this demo app is really cool it",
    "start": "1606710",
    "end": "1613220"
  },
  {
    "text": "kind of highlighting those advanced routing rules each of these boxes are a spot where it has a proxy involved so I",
    "start": "1613220",
    "end": "1621169"
  },
  {
    "text": "have an ingress proxy that will hand me off to the product page the product page will call into a detail service to get",
    "start": "1621169",
    "end": "1627889"
  },
  {
    "text": "the product details and also call into a review service now the review service goes and gets the ratings from this node",
    "start": "1627889",
    "end": "1634279"
  },
  {
    "text": "app and then it'll show different stars or not stars depending on the version in",
    "start": "1634279",
    "end": "1639470"
  },
  {
    "text": "version one it shows no stars in version two it'll show black stars and in",
    "start": "1639470",
    "end": "1644570"
  },
  {
    "text": "version three it'll show red stars so I've got that application up right here",
    "start": "1644570",
    "end": "1650239"
  },
  {
    "text": "I can push refresh and I see that now I have no starts those stars are gone in",
    "start": "1650239",
    "end": "1655850"
  },
  {
    "text": "version one well the interesting thing here in ISTE o is that I've got this",
    "start": "1655850",
    "end": "1661369"
  },
  {
    "text": "virtual service that routes all traffic to version one now I could choose",
    "start": "1661369",
    "end": "1667009"
  },
  {
    "text": "instead to perhaps route traffic let's start up version two and I want to start",
    "start": "1667009",
    "end": "1672049"
  },
  {
    "text": "by just putting twenty percent of the traffic towards version two the other eighty percent will stay to version one",
    "start": "1672049",
    "end": "1677859"
  },
  {
    "text": "so I'm going to go grab that",
    "start": "1677859",
    "end": "1681669"
  },
  {
    "text": "grab that Gamal and set that in place",
    "start": "1684610",
    "end": "1689629"
  },
  {
    "text": "cube CTL apply that gamma file and now I've got that traffic ready to go",
    "start": "1689629",
    "end": "1694909"
  },
  {
    "text": "flipping back over to the browser 20% of the time I will get black stars and 80%",
    "start": "1694909",
    "end": "1703610"
  },
  {
    "text": "of the time I'll get no stars and it looks like I'm hitting the 80% of the",
    "start": "1703610",
    "end": "1709190"
  },
  {
    "text": "time that whole time that's really cool so let's flip over to version 2 we've",
    "start": "1709190",
    "end": "1715909"
  },
  {
    "text": "got everything ready to go and oh I see I applied the wrong Emel let's go back",
    "start": "1715909",
    "end": "1722419"
  },
  {
    "text": "and apply that 80/20 rule so that 8020 rule now I'll see 20 % of the time I've got",
    "start": "1722419",
    "end": "1731029"
  },
  {
    "text": "those black stars so that looks good I've got version 2 ready to go let's set",
    "start": "1731029",
    "end": "1737090"
  },
  {
    "text": "version 2 completely in place now I'll always get version 2 I'll always get",
    "start": "1737090",
    "end": "1743720"
  },
  {
    "text": "those black stars well in time let's start looking at version 3 I want to do",
    "start": "1743720",
    "end": "1750110"
  },
  {
    "text": "I don't know 50/50 traffic between 2 and 3 so let's go grab that",
    "start": "1750110",
    "end": "1755889"
  },
  {
    "text": "EML file and set that in place and now I can see that about half the time I'll",
    "start": "1755889",
    "end": "1762379"
  },
  {
    "text": "get the red stars and about half the time I'll get the black stars when I'm",
    "start": "1762379",
    "end": "1767539"
  },
  {
    "text": "comfortable I can flip over completely to version 3 and now I'll only see the",
    "start": "1767539",
    "end": "1774620"
  },
  {
    "text": "red stars in a similar way to upgrading between the various things we could also",
    "start": "1774620",
    "end": "1781639"
  },
  {
    "text": "upgrade across",
    "start": "1781639",
    "end": "1785110"
  },
  {
    "text": "upgrade based on other conditions like in this case the end-user has to be",
    "start": "1786870",
    "end": "1791980"
  },
  {
    "text": "Jason and if Jason is logged in then he'll get the version two system otherwise everyone will get the version",
    "start": "1791980",
    "end": "1798370"
  },
  {
    "text": "three system so we can do those advanced routing rules because we're proxying all the traffic between all the things we",
    "start": "1798370",
    "end": "1804639"
  },
  {
    "text": "can do really interesting things to say for example some of the traffic goes here and some of the traffic goes there",
    "start": "1804639",
    "end": "1810370"
  },
  {
    "text": "I would love to be able to dig in to all kinds of interesting features with SEO",
    "start": "1810370",
    "end": "1816009"
  },
  {
    "text": "and linker D but sadly that's as far as we can go on those demos that was really",
    "start": "1816009",
    "end": "1822340"
  },
  {
    "text": "really cool awesome Rob I love that demo",
    "start": "1822340",
    "end": "1827620"
  },
  {
    "text": "and every time I've seen it I've learned more and more stuff from you and one",
    "start": "1827620",
    "end": "1833529"
  },
  {
    "text": "thing for sure Thank You demo gods you did not get upset with us so yeah thank",
    "start": "1833529",
    "end": "1844149"
  },
  {
    "text": "you for that demo and let's see I want",
    "start": "1844149",
    "end": "1849490"
  },
  {
    "start": "1847000",
    "end": "1847000"
  },
  {
    "text": "to do a quick recap of everything that Rob sort of talked about and so service",
    "start": "1849490",
    "end": "1854710"
  },
  {
    "text": "mesh proxies all the traffic through the cluster we now know that at its very",
    "start": "1854710",
    "end": "1861129"
  },
  {
    "text": "most basic level because it stands between all the traffic it can monitor",
    "start": "1861129",
    "end": "1866639"
  },
  {
    "text": "monitor traffic learn from it and in first service health and log failures as",
    "start": "1866639",
    "end": "1871899"
  },
  {
    "text": "you saw now if that's just the crawl now let's take a look at the next layer",
    "start": "1871899",
    "end": "1878679"
  },
  {
    "text": "which is the walk as we saw in the demo the walk scenario advanced routing",
    "start": "1878679",
    "end": "1884799"
  },
  {
    "text": "scenario because it proxies all the traffic we can had additional services service abstraction such as routing",
    "start": "1884799",
    "end": "1891970"
  },
  {
    "text": "traffic between two versions or this off the service or stopping traffic with a circuit breaker",
    "start": "1891970",
    "end": "1898360"
  },
  {
    "text": "on to the next layer which is run because the service mesh proxies through",
    "start": "1898360",
    "end": "1905379"
  },
  {
    "text": "all the traffic we can get actual service topology who calls what basically and as Rob just demoed this",
    "start": "1905379",
    "end": "1913389"
  },
  {
    "text": "isn't just this isn't the developers hope of what will happen this is the actual traffic through the",
    "start": "1913389",
    "end": "1919510"
  },
  {
    "text": "sir a service mesh is able to do all the things because it observes controls and",
    "start": "1919510",
    "end": "1927270"
  },
  {
    "text": "secures all the traffic but north-south and east-west traffic so there we have",
    "start": "1927270",
    "end": "1935590"
  },
  {
    "text": "it a traffic proxy plus a control plane that's literally what is service mesh in",
    "start": "1935590",
    "end": "1943680"
  },
  {
    "text": "fact in the wise words of our good friend Zack butcher who is the author of",
    "start": "1943680",
    "end": "1951100"
  },
  {
    "text": "steel up and running using service mesh if it doesn't have a control plane",
    "start": "1951100",
    "end": "1956470"
  },
  {
    "text": "it ain't a service mesh without said service mesh is not the preferred",
    "start": "1956470",
    "end": "1961900"
  },
  {
    "text": "solution for all scenarios and for that I'm gonna hand this back over to rob who",
    "start": "1961900",
    "end": "1967780"
  },
  {
    "text": "will help us dive into some of those complexities most definitely thanks you",
    "start": "1967780",
    "end": "1973510"
  },
  {
    "text": "thanks Kavya I agree service mesh is a great thing that allows us to observe control and secure the traffic and with",
    "start": "1973510",
    "end": "1981040"
  },
  {
    "start": "1975000",
    "end": "1975000"
  },
  {
    "text": "that there are some downsides there's some costs associated with that on the",
    "start": "1981040",
    "end": "1986440"
  },
  {
    "text": "Left we have our kubernetes cluster we have the control plane with the API server the controller manager the",
    "start": "1986440",
    "end": "1993040"
  },
  {
    "text": "scheduler we have the nodes that have the cubelet the C advisor the to proxy and then we have the work that we need",
    "start": "1993040",
    "end": "1999340"
  },
  {
    "text": "to do the pods that contain our containers on the right we have all of the details of our service our service",
    "start": "1999340",
    "end": "2006750"
  },
  {
    "text": "mesh each of those services have another proxy and we have the entire control",
    "start": "2006750",
    "end": "2014370"
  },
  {
    "text": "plane for the service mesh what we see is that we pretty much have doubled the",
    "start": "2014370",
    "end": "2020580"
  },
  {
    "text": "container count in our cluster we have the control plane for Cooper Nettie's and we have the control plane for our",
    "start": "2020580",
    "end": "2026670"
  },
  {
    "text": "service mesh we have all of our services doing the work and we have all of the",
    "start": "2026670",
    "end": "2032190"
  },
  {
    "text": "proxies that allow traffic between things if we're gonna run a service mesh",
    "start": "2032190",
    "end": "2038340"
  },
  {
    "text": "we need to be comfortable that we're probably going to double the number of clossen the number of containers in our",
    "start": "2038340",
    "end": "2045030"
  },
  {
    "text": "cluster and we'll probably significantly increase the computation in our cluster",
    "start": "2045030",
    "end": "2050429"
  },
  {
    "text": "as well we'll probably not hit double but we're doing because the",
    "start": "2050429",
    "end": "2055480"
  },
  {
    "text": "proxies are a lot lighter weight than the Java Tomcat services that we have",
    "start": "2055480",
    "end": "2060849"
  },
  {
    "text": "running in our cluster but we're also doing TLS that we weren't doing before mutual TLS between each service so it's",
    "start": "2060849",
    "end": "2068980"
  },
  {
    "text": "not unexpected for us to think of maybe doubling our container count and maybe",
    "start": "2068980",
    "end": "2075040"
  },
  {
    "text": "doubling or maybe 1.6 times the amount of compute in our cluster this is a",
    "start": "2075040",
    "end": "2081010"
  },
  {
    "text": "non-trivial cost this in this creates additional spend in building out our",
    "start": "2081010",
    "end": "2086378"
  },
  {
    "text": "cluster we need a cluster that is roughly twice as big to be able to",
    "start": "2086379",
    "end": "2091780"
  },
  {
    "text": "handle a Cooper Nettie's cluster and a service mesh that's not unexpected if",
    "start": "2091780",
    "end": "2097690"
  },
  {
    "text": "we're after the benefits of securing controlling and observing our traffic this is perfect but if we're just",
    "start": "2097690",
    "end": "2105339"
  },
  {
    "text": "reaching for a service mesh because we have a Cooper netted cluster and we just want to throw a service mission just to see what what happens we may be",
    "start": "2105339",
    "end": "2112300"
  },
  {
    "text": "disappointed service mesh isn't the perfect solution for everything if we're comfortable with that additional compute",
    "start": "2112300",
    "end": "2118089"
  },
  {
    "text": "cost and we really need those features then service mesh can be our perfect solution and with that I want to talk",
    "start": "2118089",
    "end": "2126880"
  },
  {
    "start": "2125000",
    "end": "2125000"
  },
  {
    "text": "about some of the benefits of service mesh one of the key benefits that we are able to observe all the traffic move",
    "start": "2126880",
    "end": "2135670"
  },
  {
    "text": "through the cluster creating transparency naturally we get to get",
    "start": "2135670",
    "end": "2141400"
  },
  {
    "text": "more get to a more comfortable place where we can troubleshoot when all the requests response is happening",
    "start": "2141400",
    "end": "2147339"
  },
  {
    "text": "transparently because then it's easy to track down calls which are failing and",
    "start": "2147339",
    "end": "2152440"
  },
  {
    "text": "fixing replacing the service within a new instance on top of that using",
    "start": "2152440",
    "end": "2157540"
  },
  {
    "text": "service mesh debugging hundreds of micro services becomes easy and fast service",
    "start": "2157540",
    "end": "2164109"
  },
  {
    "text": "mesh helps us gain control on the network through features like circuit",
    "start": "2164109",
    "end": "2170050"
  },
  {
    "text": "breakers splitting traffic through a BTS this essentially enables resiliency and",
    "start": "2170050",
    "end": "2176160"
  },
  {
    "text": "enhances network robin robustness when it comes to the secure part we can get",
    "start": "2176160",
    "end": "2184180"
  },
  {
    "text": "mutual TLS between containers without having a breaks of certificates into our containers or tell the",
    "start": "2184180",
    "end": "2190680"
  },
  {
    "text": "containers to flip to HTTPS or validate trust chains etc basically any of the",
    "start": "2190680",
    "end": "2197850"
  },
  {
    "text": "heavy lifting associated with certificates we can now do all of that inside the service mesh meshes",
    "start": "2197850",
    "end": "2207290"
  },
  {
    "start": "2207000",
    "end": "2207000"
  },
  {
    "text": "there can be downside to reaching out to service mesh too quickly Robyn I actually wrote her CN CF blog",
    "start": "2207660",
    "end": "2214680"
  },
  {
    "text": "post about this whole topic and robbed as Rob just explained I just want to",
    "start": "2214680",
    "end": "2220410"
  },
  {
    "text": "reiterate this in our conclusion that we both came to we must remain cognizant of",
    "start": "2220410",
    "end": "2227730"
  },
  {
    "text": "the cost of additional resource requirements for a service mesh you need a service mesh if you have any of these",
    "start": "2227730",
    "end": "2234540"
  },
  {
    "text": "business needs if you're running highly sensitive services like PKI PCI etc if you're running untrusted",
    "start": "2234540",
    "end": "2243000"
  },
  {
    "text": "workloads if you need security in-depth if you need a be routing or be a better",
    "start": "2243000",
    "end": "2250080"
  },
  {
    "text": "channel if you're running multi tenant workloads reach for a service mesh for",
    "start": "2250080",
    "end": "2257390"
  },
  {
    "text": "observing controlling or securing traffic in a kubernetes cluster because",
    "start": "2257390",
    "end": "2265050"
  },
  {
    "text": "the service mesh intercepts traffic into and out of each container it's a great",
    "start": "2265050",
    "end": "2271470"
  },
  {
    "text": "way to monitor and control traffic whether you're looking to secure this traffic mutual TLS or authorize into",
    "start": "2271470",
    "end": "2278790"
  },
  {
    "text": "service communication or monitor traffic between services a service mesh can be a",
    "start": "2278790",
    "end": "2284850"
  },
  {
    "text": "great choice to clean up the mess and with that I do want to hand over our",
    "start": "2284850",
    "end": "2292710"
  },
  {
    "start": "2290000",
    "end": "2290000"
  },
  {
    "text": "contact details you guys I am copier Pearlman on Twitter you can find me on",
    "start": "2292710",
    "end": "2299940"
  },
  {
    "text": "LinkedIn you can also google me you can you can also reach out reach out to me",
    "start": "2299940",
    "end": "2305640"
  },
  {
    "text": "via val arm comm using requests at wall arm comm and then there is my good",
    "start": "2305640",
    "end": "2312840"
  },
  {
    "text": "friend Rob rich who is available via Twitter at Rob - rich and has this",
    "start": "2312840",
    "end": "2319410"
  },
  {
    "text": "wonderful website where he puts out all of the slides that he uses and many many",
    "start": "2319410",
    "end": "2324750"
  },
  {
    "text": "other informational stuff Rob rich org and so now we would love to take some",
    "start": "2324750",
    "end": "2331980"
  },
  {
    "text": "questions that I'm looking at are coming in Rob you're ready for some questions I",
    "start": "2331980",
    "end": "2338430"
  },
  {
    "text": "am this is so much fun digging in with you make it four I love it it's it's been it's been so",
    "start": "2338430",
    "end": "2344770"
  },
  {
    "text": "wonderful and we actually have a stack of questions so let's begin oh very nice let's dig in",
    "start": "2344770",
    "end": "2350020"
  },
  {
    "text": "yep so the first question and there was a question it was funny when you were",
    "start": "2350020",
    "end": "2356440"
  },
  {
    "text": "talking about API gateways somebody actually had a question about API gateways and you literally like",
    "start": "2356440",
    "end": "2362140"
  },
  {
    "text": "literally at the same time we're answering that so we are all kind of",
    "start": "2362140",
    "end": "2369850"
  },
  {
    "text": "thinking alike so the first question is does service mesh have a built in queues",
    "start": "2369850",
    "end": "2375760"
  },
  {
    "text": "for queuing requests when a given service fails so that the requests can be retried when the served when the",
    "start": "2375760",
    "end": "2382840"
  },
  {
    "text": "failed service heals most definitely you can enable retries within your services",
    "start": "2382840",
    "end": "2389590"
  },
  {
    "text": "inside the service mesh there is some benefits and drawbacks to that because I could automatically retry but is the",
    "start": "2389590",
    "end": "2397060"
  },
  {
    "text": "calling service gonna timeout waiting for me to finish retiring and so it's definitely possible but it's one of",
    "start": "2397060",
    "end": "2403090"
  },
  {
    "text": "those features that you want to consider carefully maybe I can retry once or twice but retrying for five minutes or a",
    "start": "2403090",
    "end": "2410650"
  },
  {
    "text": "logarithmic back off that may last a really long time may not be a great use",
    "start": "2410650",
    "end": "2416260"
  },
  {
    "text": "case yeah the service mesh definitely can do it but you may want to steer away",
    "start": "2416260",
    "end": "2421690"
  },
  {
    "text": "from that yeah I remember you talked about it as we were discussing our webinar is like you know it may actually",
    "start": "2421690",
    "end": "2427720"
  },
  {
    "text": "compound the problem if you retry too soon right all right on to the next",
    "start": "2427720",
    "end": "2433720"
  },
  {
    "text": "question how service mesh helps us in a situation where we make a lot of calls or to external api's which we don't",
    "start": "2433720",
    "end": "2442000"
  },
  {
    "text": "control we can control traffic to those api's - question mark like having a",
    "start": "2442000",
    "end": "2447010"
  },
  {
    "text": "circuit breaker for external api's and i think you talked about it yeah",
    "start": "2447010",
    "end": "2452860"
  },
  {
    "text": "in the same way that you have a proxy between services will have an egress",
    "start": "2452860",
    "end": "2460060"
  },
  {
    "text": "proxy and an ingress proxy and so as you're calling that external API you'll",
    "start": "2460060",
    "end": "2465580"
  },
  {
    "text": "go through the proxy and the proxy can do things like automatic retries circuit breakers and all of the features that we",
    "start": "2465580",
    "end": "2471880"
  },
  {
    "text": "expect from a service mesh but now we're using that to contact external services maybe they're on",
    "start": "2471880",
    "end": "2478690"
  },
  {
    "text": "virtual machines maybe they're even outside your cluster yeah and then is",
    "start": "2478690",
    "end": "2484030"
  },
  {
    "text": "there a way to control traffic across multiple k8 clusters yes there is",
    "start": "2484030",
    "end": "2491319"
  },
  {
    "text": "definitely a way to control this and that's where service mesh comes in handy is there Rob yeah definitely",
    "start": "2491319",
    "end": "2498460"
  },
  {
    "text": "controlling across clusters gets a little bit weird because it's like well which cluster gets to own this but by",
    "start": "2498460",
    "end": "2503829"
  },
  {
    "text": "all means surface mesh can definitely help you there and we have the next",
    "start": "2503829",
    "end": "2509319"
  },
  {
    "text": "question hi is there any change required on the application pods in order to",
    "start": "2509319",
    "end": "2516369"
  },
  {
    "text": "support canary upgrades that is a good",
    "start": "2516369",
    "end": "2521829"
  },
  {
    "text": "question I like that is there any change involved in the pods themselves to support canary upgrades let's think",
    "start": "2521829",
    "end": "2529359"
  },
  {
    "text": "through that a little bit because that will really help drive home some of the principles of service mesh yeah we",
    "start": "2529359",
    "end": "2535150"
  },
  {
    "text": "create for example these routing rules that tell us there's some traffic going",
    "start": "2535150",
    "end": "2541210"
  },
  {
    "text": "to one service and going to another service and here's the rule that says what makes the traffic go between them",
    "start": "2541210",
    "end": "2549509"
  },
  {
    "text": "do we see any changes in our code to make this happen",
    "start": "2549509",
    "end": "2554149"
  },
  {
    "text": "what's really cool is all of this lives completely in the service mash it doesn't need to be in our code at all we",
    "start": "2557990",
    "end": "2565260"
  },
  {
    "text": "just happen to run version 2 and version 3 of our service we run those two sets of containers and the service mesh takes",
    "start": "2565260",
    "end": "2572370"
  },
  {
    "text": "care of everything else hmm wonderful and I am gonna breeze",
    "start": "2572370",
    "end": "2580250"
  },
  {
    "text": "through just a couple of questions too let's say I do encourage people and",
    "start": "2580250",
    "end": "2587359"
  },
  {
    "text": "everybody to reach out to us directly to answer these you know to get some of the",
    "start": "2587359",
    "end": "2592609"
  },
  {
    "text": "answers we're very active on Twitter so please feel free to anytime tag at us",
    "start": "2592609",
    "end": "2600109"
  },
  {
    "text": "and ask these types of questions but I do want to take another question which is how does a service mesh relate to an",
    "start": "2600109",
    "end": "2608630"
  },
  {
    "text": "ingress controller like nginx can they coexist or do you have to use only one",
    "start": "2608630",
    "end": "2615190"
  },
  {
    "text": "exclusively that is a great question let's go back to this sto diagram and",
    "start": "2615190",
    "end": "2620660"
  },
  {
    "text": "I'm going to use sto as an example but the same occurs for others here in this",
    "start": "2620660",
    "end": "2627230"
  },
  {
    "text": "book star app we have this ingress proxy and so this could be an engine X ingress",
    "start": "2627230",
    "end": "2633950"
  },
  {
    "text": "proxy in this case it's a non-void proxy and so our content comes into that proxy and at that point it's now controlled",
    "start": "2633950",
    "end": "2641990"
  },
  {
    "text": "into our service mesh was there an engine X proxy engine X ingress controller ahead of that mmm maybe",
    "start": "2641990",
    "end": "2649540"
  },
  {
    "text": "probably not probably it hits that ingress envoy proxy straightaway it's",
    "start": "2649540",
    "end": "2655070"
  },
  {
    "text": "possible to do both you know if you really really want SSL termination in your engine X ingress proxy or you want",
    "start": "2655070",
    "end": "2661190"
  },
  {
    "text": "really interesting rules there you may choose to put the nginx",
    "start": "2661190",
    "end": "2667130"
  },
  {
    "text": "ingress proxy behind the service mesh ingress proxy but I've generally found",
    "start": "2667130",
    "end": "2675470"
  },
  {
    "text": "that the service masked proxy the service mesh ingress is sufficient for the majority of my needs cool and then",
    "start": "2675470",
    "end": "2684050"
  },
  {
    "text": "there is another question here is our link Rd and sto commercial or self-help a commercial off-the-shelf or",
    "start": "2684050",
    "end": "2691460"
  },
  {
    "text": "open-source and it is my understanding it is open-source but there are",
    "start": "2691460",
    "end": "2696470"
  },
  {
    "text": "commercial commercially related tools available one of the ones that and it",
    "start": "2696470",
    "end": "2705500"
  },
  {
    "text": "protection or for other secure control other security services there are tools available one of the ones that I was",
    "start": "2705500",
    "end": "2711260"
  },
  {
    "text": "part of which was the wall arm launched earlier talked about you know following many many requests from the customer",
    "start": "2711260",
    "end": "2717380"
  },
  {
    "text": "wall arm extended its apps and API security to work with some of the distributed application using envoy",
    "start": "2717380",
    "end": "2724400"
  },
  {
    "text": "proxy so it could not just protect north-south API in the applications that",
    "start": "2724400",
    "end": "2729410"
  },
  {
    "text": "use envoy is an alternative ingress controllers at the front end of the kubernetes cluster so it can also now",
    "start": "2729410",
    "end": "2736640"
  },
  {
    "text": "protect the edge traffic east-west envoy API for service mesh in this deal so",
    "start": "2736640",
    "end": "2741680"
  },
  {
    "text": "definitely right Rob it's open source it's you and linker D but there are other you know commercially available",
    "start": "2741680",
    "end": "2748280"
  },
  {
    "text": "stuff as well right exactly both sto and linker D are free and open",
    "start": "2748280",
    "end": "2753620"
  },
  {
    "text": "source and there are other service meshes that you could consider or other security products that you could choose",
    "start": "2753620",
    "end": "2760040"
  },
  {
    "text": "to layer on top of if you wanted to and I think with that I just want to take one last question which already we went",
    "start": "2760040",
    "end": "2766340"
  },
  {
    "text": "over but it would be a nice recap and and session today what are the strengths",
    "start": "2766340",
    "end": "2773660"
  },
  {
    "text": "and weaknesses of linker D and steel and this is so funny because we've always talked about it we're gonna dig even",
    "start": "2773660",
    "end": "2780350"
  },
  {
    "text": "deeper into those two linker D and sto people come up came up to me during coop",
    "start": "2780350",
    "end": "2786260"
  },
  {
    "text": "con as well asking like hey which one is which and you know we're still like on this journey Rob and I are on this",
    "start": "2786260",
    "end": "2791930"
  },
  {
    "text": "journey to really find out like in the very micro granular detail what is",
    "start": "2791930",
    "end": "2797660"
  },
  {
    "text": "really going on but that's why Rob what do you think we have established in in what context which one should be used I",
    "start": "2797660",
    "end": "2803980"
  },
  {
    "text": "think it's one of those questions like iPhone and Android where there isn't a",
    "start": "2803980",
    "end": "2809660"
  },
  {
    "text": "right answer but there's a right answer for you and so as we looked at it we",
    "start": "2809660",
    "end": "2814850"
  },
  {
    "text": "kind of looked at the methodology is do everything is in the box and so if you don't want to have to pick features you",
    "start": "2814850",
    "end": "2821900"
  },
  {
    "text": "just want to turn them on and off sto can be a great choice it also includes the best of open source",
    "start": "2821900",
    "end": "2827690"
  },
  {
    "text": "packages for monitoring and traffic routing and all of the pieces that we want to add are in the box by extension",
    "start": "2827690",
    "end": "2835520"
  },
  {
    "text": "link or D focuses on very simple implement very simple installation and so you can",
    "start": "2835520",
    "end": "2842220"
  },
  {
    "text": "get up and running with linker D really fast but you may hit a wall where it's like but I want this advanced feature",
    "start": "2842220",
    "end": "2847800"
  },
  {
    "text": "and at that point then you have to go pull in a third party package so for example in ISTE oh we saw the routing",
    "start": "2847800",
    "end": "2855119"
  },
  {
    "text": "between a B traffic and that's just in the box I can create a virtual service and I can route traffic across two",
    "start": "2855119",
    "end": "2861599"
  },
  {
    "text": "things with linker D I need to pull in a third party package that will monitor those are the Prometheus things and be",
    "start": "2861599",
    "end": "2869640"
  },
  {
    "text": "able to make intelligent decisions they're controlling the network service",
    "start": "2869640",
    "end": "2875280"
  },
  {
    "text": "I needed to pull in that third party package so ultimately would you rather the erector set or would you rather the",
    "start": "2875280",
    "end": "2882599"
  },
  {
    "text": "shiny box ultimately you and your organization are going to make the choice that is exactly perfect for you",
    "start": "2882599",
    "end": "2888930"
  },
  {
    "text": "there and I completely agree that is the proper service mesh for you and I think",
    "start": "2888930",
    "end": "2895290"
  },
  {
    "text": "this also kind of answers a little bit of the next question which I wasn't planning to take but it seems like this",
    "start": "2895290",
    "end": "2900990"
  },
  {
    "text": "person really needs the guidance they're trying to do the transition from ec2 to kubernetes and interested in features",
    "start": "2900990",
    "end": "2907470"
  },
  {
    "text": "like service racing maybe testing both service missions look interesting but you do complexity which one would you",
    "start": "2907470",
    "end": "2913230"
  },
  {
    "text": "recommend to start and also if we need to you know what kind of consideration if we decide to change from one another",
    "start": "2913230",
    "end": "2918960"
  },
  {
    "text": "and you know these are the types of scenarios where you really want to sit with an expert I know we have tons of",
    "start": "2918960",
    "end": "2926579"
  },
  {
    "text": "the experts at wall arm and you can reach out to them request that wall arm comm but I would encourage you to",
    "start": "2926579",
    "end": "2932280"
  },
  {
    "text": "separately reach out to us directly or somebody in the linker D and the you",
    "start": "2932280",
    "end": "2937470"
  },
  {
    "text": "know ACO community and just really truly engage even if it's like you know potentially under NDA with the",
    "start": "2937470",
    "end": "2943980"
  },
  {
    "text": "commercial entity to sit down and truly understand what exactly is your use case",
    "start": "2943980",
    "end": "2949460"
  },
  {
    "text": "because we really you know after this it gets down to those meaty gritties of what exactly you know are you a fin tech",
    "start": "2949460",
    "end": "2956579"
  },
  {
    "text": "are you SS like what are you trying to achieve how much heavy lifting do we need and",
    "start": "2956579",
    "end": "2962040"
  },
  {
    "text": "you know how flexible do you want to be all of those things have to be considered before these type of decisions made so with that is your",
    "start": "2962040",
    "end": "2969960"
  },
  {
    "text": "scenario just a smidge yep know that you're really trying to optimize to avoid complexity you may not",
    "start": "2969960",
    "end": "2976920"
  },
  {
    "text": "actually need a service mesh yet you may just be at the spot where the services",
    "start": "2976920",
    "end": "2982290"
  },
  {
    "text": "operating in your cluster are sufficient and the additional computational cost isn't worth it yeah that that's very",
    "start": "2982290",
    "end": "2990000"
  },
  {
    "text": "possible and that's why I consult an expert like my good friend Kavya and figure out the things that you need to",
    "start": "2990000",
    "end": "2996030"
  },
  {
    "text": "do they're totally they're always here to help out the community and please",
    "start": "2996030",
    "end": "3001520"
  },
  {
    "text": "feel free to reach out to us any time and thank you rob this was awesome as",
    "start": "3001520",
    "end": "3007690"
  },
  {
    "text": "anticipated and loved it and thank you everyone for attending the session we",
    "start": "3007690",
    "end": "3013550"
  },
  {
    "text": "look forward to continuing our journey together we are CNC f most definitely",
    "start": "3013550",
    "end": "3018740"
  },
  {
    "text": "Thank You Vera you",
    "start": "3018740",
    "end": "3024650"
  },
  {
    "text": "you you",
    "start": "3024660",
    "end": "3030830"
  },
  {
    "text": "you",
    "start": "3033140",
    "end": "3035200"
  }
]