[
  {
    "text": "hello everyone and welcome to our session uh a tale of meshi kafka",
    "start": "80",
    "end": "7520"
  },
  {
    "text": "um my name is ariel shuper uh by the time of the recording i'm in port shift",
    "start": "7520",
    "end": "13519"
  },
  {
    "text": "uh but i'm by the time of the when we hear this session i'm gonna be part of cisco",
    "start": "13519",
    "end": "19359"
  },
  {
    "text": "hello from every other as well i'm very happy to be part of this event today",
    "start": "21039",
    "end": "28080"
  },
  {
    "text": "thank you nicolas um what we're going to talk to you about today we'll tell you who we are",
    "start": "28400",
    "end": "35760"
  },
  {
    "text": "a little bit more details i will talk about kafka usage in general and in kubernetes",
    "start": "35760",
    "end": "42840"
  },
  {
    "text": "specifically we'll talk about the security architecture or how do we secure kafka clusters",
    "start": "42840",
    "end": "49440"
  },
  {
    "text": "um we'll talk about kafka in istio or any type of service mesh",
    "start": "49440",
    "end": "56559"
  },
  {
    "text": "and then nicolas will talk about uh marlon architecture and how do they secure the deployment uh",
    "start": "56559",
    "end": "63760"
  },
  {
    "text": "and will share with us uh a great demo a little bit about myself who am i so my",
    "start": "63760",
    "end": "71280"
  },
  {
    "text": "name is ariel schuper i'm a principal product manager at cisco",
    "start": "71280",
    "end": "76400"
  },
  {
    "text": "uh used to be a vp product management in port shift port shifted the cloud native security vendor",
    "start": "76400",
    "end": "82640"
  },
  {
    "text": "uh before working in port shift i was the head of serverless solution at aqua security um and before that i led",
    "start": "82640",
    "end": "89759"
  },
  {
    "text": "the cloud security solutions in checkpoints of technologies uh part of uh open source",
    "start": "89759",
    "end": "96320"
  },
  {
    "text": "uh with the the qb project that we in port shift created and also a member of the easter",
    "start": "96320",
    "end": "103280"
  },
  {
    "text": "security working group um a little bit about port shift we are",
    "start": "103280",
    "end": "110799"
  },
  {
    "text": "were founded by 2018 uh then uh acquired by cisco",
    "start": "110799",
    "end": "118320"
  },
  {
    "text": "uh beginning of november beginning of this uh beginning of this month uh focusing",
    "start": "118320",
    "end": "124880"
  },
  {
    "text": "on cloud native security platform and more specifically on integrating it",
    "start": "124880",
    "end": "130160"
  },
  {
    "text": "with service mesh any type of service mesh and that's it about it",
    "start": "130160",
    "end": "137840"
  },
  {
    "text": "i'm nicolas museros i worked in telecommunication currency exchange commercial companies",
    "start": "139120",
    "end": "145760"
  },
  {
    "text": "and now i'm glad to be part of two organizations as a devops engineer",
    "start": "145760",
    "end": "151120"
  },
  {
    "text": "the first to the first one is marlo navigation and now i'm trying to start my own",
    "start": "151120",
    "end": "156160"
  },
  {
    "text": "startup business rtx direct which is providing cloud native services",
    "start": "156160",
    "end": "164239"
  },
  {
    "text": "mobile and commercial ship management company offices in over 10 countries over a",
    "start": "165200",
    "end": "172480"
  },
  {
    "text": "thousand sure based employees and over 13 000 employees on board at any given time",
    "start": "172480",
    "end": "179760"
  },
  {
    "text": "so let's go ahead with ariel thank you nicholas and let's talk about",
    "start": "179760",
    "end": "186080"
  },
  {
    "text": "get into the details and let's talk about a little bit about microservices communication",
    "start": "186080",
    "end": "191440"
  },
  {
    "text": "so we are moving to microservices okay microservices um",
    "start": "191440",
    "end": "198159"
  },
  {
    "text": "usually look like that we when we're working in distributed applications we start breaking down monolithic into",
    "start": "198159",
    "end": "203760"
  },
  {
    "text": "small components we want each of them to communicate with with each other so we are creating",
    "start": "203760",
    "end": "211519"
  },
  {
    "text": "you know a nice communication uh schema but then eventually when the cluster",
    "start": "211519",
    "end": "216640"
  },
  {
    "text": "grows and there are more uh more elements we can quickly turn into this famous",
    "start": "216640",
    "end": "222959"
  },
  {
    "text": "uh diagram that shows the lift micro services communication before they started",
    "start": "222959",
    "end": "228080"
  },
  {
    "text": "the project with envoy before they moved to service mesh um and the idea that you know when we",
    "start": "228080",
    "end": "234159"
  },
  {
    "text": "have lots of micro services a lot of communication i'm not going to talk about whether or not uh service mesh is the",
    "start": "234159",
    "end": "240640"
  },
  {
    "text": "right way to choose it but we can talk about lots of microchips communicating with each other we can use",
    "start": "240640",
    "end": "247200"
  },
  {
    "text": "it like the mesh in synchronous mechanism that everyone can communicate with everyone synchronically but you can also use",
    "start": "247200",
    "end": "254720"
  },
  {
    "text": "uh asynchronous communication or security message passing",
    "start": "254720",
    "end": "259840"
  },
  {
    "text": "with there are multiple options uh kafka pachi kafka just a popular one but there",
    "start": "259840",
    "end": "265840"
  },
  {
    "text": "are many other options of how we can use event streaming between services",
    "start": "265840",
    "end": "273120"
  },
  {
    "text": "which are not synchronous now we would like to talk about apache kafka",
    "start": "273120",
    "end": "279360"
  },
  {
    "text": "you know as a popular uh event streaming mechanism uh apache kafka was you know becoming a pop",
    "start": "279360",
    "end": "286960"
  },
  {
    "text": "very popular tool was donated by linkedin to the open source community in 2011 as a message queue quickly turned in to",
    "start": "286960",
    "end": "293840"
  },
  {
    "text": "be like an event streaming so we're not just making like some simple computation uh",
    "start": "293840",
    "end": "299759"
  },
  {
    "text": "actions on messages we can run multiple actions on multiple messages simultaneously",
    "start": "299759",
    "end": "306479"
  },
  {
    "text": "we can also maintain uh persistency with keeping up the message there are many benefits",
    "start": "306479",
    "end": "312000"
  },
  {
    "text": "to to apache kafka and to the way uh it is used today for",
    "start": "312000",
    "end": "317600"
  },
  {
    "text": "asynchronous communication now our focus today and nikolas will uprise it a",
    "start": "317600",
    "end": "322800"
  },
  {
    "text": "little bit more when you talk about architecture is on an open source distribution",
    "start": "322800",
    "end": "328560"
  },
  {
    "text": "of kubernetes called strimzy and strimsy goal is to simplify the",
    "start": "328560",
    "end": "334240"
  },
  {
    "text": "process of running kafka in kubernetes uh it provides you know the relevant",
    "start": "334240",
    "end": "340000"
  },
  {
    "text": "container images uh streams you also created uh",
    "start": "340000",
    "end": "345039"
  },
  {
    "text": "dedicated operators uh that can run the you know the kafka cluster and can",
    "start": "345039",
    "end": "350639"
  },
  {
    "text": "add a lot of uh support or a lot of uh simple to simplify",
    "start": "350639",
    "end": "356000"
  },
  {
    "text": "uh those these operations and to make it you know more cloud native way by automating a lot of",
    "start": "356000",
    "end": "362080"
  },
  {
    "text": "those uh things um and the cafe component is run as a cluster so it can be like you know",
    "start": "362080",
    "end": "367680"
  },
  {
    "text": "for availability purposes um and as i said again uh nicolas will",
    "start": "367680",
    "end": "373120"
  },
  {
    "text": "explain more about the benefits of using it now when we talk about kafka and we want to",
    "start": "373120",
    "end": "380720"
  },
  {
    "text": "talk about you know the different security changes so how do we secure this environment um it's important to know that kafka",
    "start": "380720",
    "end": "387680"
  },
  {
    "text": "does require some level of security by by nature the default setting is that you know um",
    "start": "387680",
    "end": "393520"
  },
  {
    "text": "the different configuration allow any user uh to read or write or publish or",
    "start": "393520",
    "end": "399600"
  },
  {
    "text": "subscribe of you know any or all the data so you can you know publish your type to any topic",
    "start": "399600",
    "end": "405600"
  },
  {
    "text": "so you get a full exposure um the communication is in plain text",
    "start": "405600",
    "end": "412080"
  },
  {
    "text": "if you don't do anything specifically and you know and you go and configure the tls uh between your",
    "start": "412080",
    "end": "418720"
  },
  {
    "text": "users and their brokers the communication is in plain text so if someone can intercept it in the cluster i can",
    "start": "418720",
    "end": "425840"
  },
  {
    "text": "get exposed to all the communication there's no need to you know decrypt it",
    "start": "425840",
    "end": "431039"
  },
  {
    "text": "users can delete the data and in some distributions uh the secrets or",
    "start": "431039",
    "end": "438000"
  },
  {
    "text": "credentials are stored in plain text so you want to restrict the access of",
    "start": "438000",
    "end": "443120"
  },
  {
    "text": "people who can access those you know uh the zookeeper uh location",
    "start": "443120",
    "end": "448240"
  },
  {
    "text": "so by default uh there are many uh i would say security challenges but",
    "start": "448240",
    "end": "454479"
  },
  {
    "text": "you know uh given the maturity of the product a lot of them you know were taken care of were handled",
    "start": "454479",
    "end": "460560"
  },
  {
    "text": "uh more specifically uh talking about streamsi kafka looking the main",
    "start": "460560",
    "end": "465680"
  },
  {
    "text": "security building block so the authentication um use user authentication",
    "start": "465680",
    "end": "472560"
  },
  {
    "text": "can can be managed kafka listeners use authentication so they can ensure secure client",
    "start": "472560",
    "end": "478240"
  },
  {
    "text": "connection um it does support different authentication different authentication options",
    "start": "478240",
    "end": "484240"
  },
  {
    "text": "uh there's a dedicated user operator that can simplify some of them but as you can see that you know in",
    "start": "484240",
    "end": "490879"
  },
  {
    "text": "practice not all of them are always in use but at least the foundation or the infrastructure to",
    "start": "490879",
    "end": "497520"
  },
  {
    "text": "use them is available uh authorization the native authorization in kafka is using the",
    "start": "497520",
    "end": "504400"
  },
  {
    "text": "simple acl authorizers uh it's based on authentication of users and then you",
    "start": "504400",
    "end": "510319"
  },
  {
    "text": "allow if you have users authenticate and identified you can define access control list and you can define",
    "start": "510319",
    "end": "517839"
  },
  {
    "text": "what user can access what resource encryption in streams is with tls",
    "start": "517839",
    "end": "526000"
  },
  {
    "text": "so the communication is always encrypted in the main control elements like between the",
    "start": "526000",
    "end": "531440"
  },
  {
    "text": "brokers the zookeeper nodes the operator and the exporter um you",
    "start": "531440",
    "end": "537120"
  },
  {
    "text": "can you know encrypting the user traffic the user communication uh with the brokers is something that",
    "start": "537120",
    "end": "543760"
  },
  {
    "text": "that is required users intervention and and making it um",
    "start": "543760",
    "end": "549839"
  },
  {
    "text": "with the tls option so and i was talking about security in kubernetes committees offer",
    "start": "549839",
    "end": "556880"
  },
  {
    "text": "a rich set of security mechanism there's a lot of investment a lot of work and also coming from the maturity",
    "start": "556880",
    "end": "564000"
  },
  {
    "text": "of the of kubernetes in its deployment there are multiple options for security both for deployments for services for",
    "start": "564000",
    "end": "570720"
  },
  {
    "text": "policies but also for authentication authorization and you know powerful role-based access control",
    "start": "570720",
    "end": "577360"
  },
  {
    "text": "now when service mesh is used i provide flexible option to offload out of it a",
    "start": "577360",
    "end": "582720"
  },
  {
    "text": "lot of you know the authentication and authorization decisions uh the encryption is a completely",
    "start": "582720",
    "end": "588320"
  },
  {
    "text": "different experience when using service mesh so all in all the security posture",
    "start": "588320",
    "end": "594160"
  },
  {
    "text": "of cluster is much higher now this lead us to think that when we deploy kafka in kubernetes and",
    "start": "594160",
    "end": "601120"
  },
  {
    "text": "with istio um will be in a much better stage because the kubernetes the kafka",
    "start": "601120",
    "end": "606399"
  },
  {
    "text": "security and the course although there are you know they don't match but if we're using it with kubernetes um then we can get the",
    "start": "606399",
    "end": "614800"
  },
  {
    "text": "benefit of all the existing tools uh especially you know easter can used",
    "start": "614800",
    "end": "620800"
  },
  {
    "text": "uh like it does today can contribute you know seamlessly to the security level because it's doing it you know using offloading the traffic",
    "start": "620800",
    "end": "628000"
  },
  {
    "text": "not touching more defining or changing anything in the workload so this would come make a thing that uh",
    "start": "628000",
    "end": "634320"
  },
  {
    "text": "the security security situat the security status uh can be much better now what we",
    "start": "634320",
    "end": "641200"
  },
  {
    "text": "discovered and also together uh with marloy is that",
    "start": "641200",
    "end": "647279"
  },
  {
    "text": "easter and kafka are not you know the best match or i would say uh they're not a",
    "start": "647279",
    "end": "653839"
  },
  {
    "text": "match made in heaven and it's time for multiple reasons you know but",
    "start": "653839",
    "end": "659040"
  },
  {
    "text": "when you come to think about it that you know kafka and zookeeper were both designed to have all the required resources available at",
    "start": "659040",
    "end": "666240"
  },
  {
    "text": "startup time uh in current kubernetes versions sidecars like the envoy proxy",
    "start": "666240",
    "end": "672880"
  },
  {
    "text": "uh availability can today still be after the pod is already running",
    "start": "672880",
    "end": "678320"
  },
  {
    "text": "um and as a result we can see that for example in zookeeper it can lead to instability operation that",
    "start": "678320",
    "end": "684160"
  },
  {
    "text": "members can't create a for a quorum uh with the brokers uh if a broker tried",
    "start": "684160",
    "end": "690640"
  },
  {
    "text": "to communicate with the zookeeper and envoy is not ready or not available uh the broker will crash uh we also saw",
    "start": "690640",
    "end": "697120"
  },
  {
    "text": "that in zookeeper installation um it binds it to the pod ip",
    "start": "697120",
    "end": "703200"
  },
  {
    "text": "but nvo uses localhost for forwarding traffic and the result can be connection refused",
    "start": "703200",
    "end": "709600"
  },
  {
    "text": "errors and some other uh challenges that uh we we happen to found and unfortunately",
    "start": "709600",
    "end": "717120"
  },
  {
    "text": "this leave us you know with situation the still from one side we do deploy the kafka we can benefit from all those",
    "start": "717120",
    "end": "724959"
  },
  {
    "text": "great tools but the reality is that those are cannot be used now",
    "start": "724959",
    "end": "730480"
  },
  {
    "text": "what you know the way to move forward and really secure and benefit from",
    "start": "730480",
    "end": "735760"
  },
  {
    "text": "what uh kubernetes and what service mesh can offer kafka is you know if you can really make some",
    "start": "735760",
    "end": "743279"
  },
  {
    "text": "uh small changes or do something which some have already in the work but some uh can be done so what are the",
    "start": "743279",
    "end": "749680"
  },
  {
    "text": "requirement what do we need in order to make kafka and east you a perfect match right so in order to create what we call a",
    "start": "749680",
    "end": "756959"
  },
  {
    "text": "kafka friendly easter kafka friendly service mesh um",
    "start": "756959",
    "end": "762160"
  },
  {
    "text": "something that will let us you know to benefit from all the security controls in an automated and",
    "start": "762160",
    "end": "767360"
  },
  {
    "text": "smooth you know for existing users but also more importantly for future users which",
    "start": "767360",
    "end": "772720"
  },
  {
    "text": "are deploying you want to connect you know with the kafka cluster there are two critical elements that you know",
    "start": "772720",
    "end": "779279"
  },
  {
    "text": "need to be fixed in order to get this uh kafka friendly level uh expectation",
    "start": "779279",
    "end": "784959"
  },
  {
    "text": "one of it which is already in the work was supposed to be part of 1.18 1.19 but i believe it will uh be",
    "start": "784959",
    "end": "792399"
  },
  {
    "text": "in the next in the next version definitely going to be included is making a sidecar first-class citizen",
    "start": "792399",
    "end": "800160"
  },
  {
    "text": "uh part of kubernetes now what do i mean first-class citizen making sure that when a sidecar",
    "start": "800160",
    "end": "808320"
  },
  {
    "text": "container like envoy is deployed with every pod uh you know make sure that the this",
    "start": "808320",
    "end": "815519"
  },
  {
    "text": "sidecar is up before the regular containers are up and making sure it's shut down only",
    "start": "815519",
    "end": "821440"
  },
  {
    "text": "after all the other containers are terminated and this will make will ensure that all the challenges we discussed in the",
    "start": "821440",
    "end": "827680"
  },
  {
    "text": "previous slide will not happen because envoy will always be there so we can both zookeepers and the brokers uh can",
    "start": "827680",
    "end": "835199"
  },
  {
    "text": "establish their communication without worrying about it but that's not it there's some a little bit more tweaking",
    "start": "835199",
    "end": "841920"
  },
  {
    "text": "that is required and you know thanks to the flexibility of envoy and istio this is",
    "start": "841920",
    "end": "847600"
  },
  {
    "text": "something which was already available since 1.5 and this is adding a special detection to kafka traffic",
    "start": "847600",
    "end": "854639"
  },
  {
    "text": "either by enhancing the current kafka filter because today envoy supports a filter for detecting",
    "start": "854639",
    "end": "861920"
  },
  {
    "text": "kafka traffic but there's slightly more that needs to be done or creating a new",
    "start": "861920",
    "end": "867120"
  },
  {
    "text": "filter or a new proxy for envoy which again also you know post 1.5",
    "start": "867120",
    "end": "874160"
  },
  {
    "text": "uh is much simpler to do now as i said before so one there are",
    "start": "874160",
    "end": "880880"
  },
  {
    "text": "infrastructure issues which are being mean done or managing kubernetes already",
    "start": "880880",
    "end": "886160"
  },
  {
    "text": "part of the release plan and it's going to be you know included uh probably in the next version but",
    "start": "886160",
    "end": "891920"
  },
  {
    "text": "there are some you know modifications to envoy uh which are required in order to make",
    "start": "891920",
    "end": "897519"
  },
  {
    "text": "it you know kafka friendly um so",
    "start": "897519",
    "end": "902639"
  },
  {
    "text": "if we will achieve that we can run envoy proxy in all kafka elements",
    "start": "902639",
    "end": "908880"
  },
  {
    "text": "whether it's broker brokers zookeepers subscribers and producers",
    "start": "908880",
    "end": "914240"
  },
  {
    "text": "um if we can use similar mechanisms like could today with http kind of a proxy that allow us to parse",
    "start": "914240",
    "end": "922320"
  },
  {
    "text": "the kafka stream and you know send it for authentication",
    "start": "922320",
    "end": "927839"
  },
  {
    "text": "uh and authorization so we can authorize any request now this can be done",
    "start": "927839",
    "end": "933120"
  },
  {
    "text": "either by enhancement to the current filter or by using the new webassembly uh toolkit uh which allowed to customize",
    "start": "933120",
    "end": "940800"
  },
  {
    "text": "and create uh customize filters for envoy like an on demand um and then you know we can",
    "start": "940800",
    "end": "947360"
  },
  {
    "text": "use envoy to invoke authorization for every message based on installation properties we can",
    "start": "947360",
    "end": "953279"
  },
  {
    "text": "of course uh authorize it uh we can create policies those processes will authorize we can of",
    "start": "953279",
    "end": "958720"
  },
  {
    "text": "course cache the results so it's not gonna be like every request only for a new connection or new service which is",
    "start": "958720",
    "end": "966160"
  },
  {
    "text": "something that will allow us you know to benefit from a fully authorized uh mechanism that allow users to define",
    "start": "966160",
    "end": "972480"
  },
  {
    "text": "the rules uh envoy can enforce it can create it just like we do today with our http communication",
    "start": "972480",
    "end": "980240"
  },
  {
    "text": "now anybody can also pass authentication information to kafka authorizers",
    "start": "980240",
    "end": "986160"
  },
  {
    "text": "uh an envoy can seamlessly encrypt uh encrypt and manage all the certificates",
    "start": "986160",
    "end": "992800"
  },
  {
    "text": "uh you know of the cluster of the brokers of the users there's no need to work on the tls certificates for the",
    "start": "992800",
    "end": "1000000"
  },
  {
    "text": "users we can also take it a step forward and do all the ingress in the egress communication we can manage",
    "start": "1000000",
    "end": "1006079"
  },
  {
    "text": "them and using the service mesh policies so with",
    "start": "1006079",
    "end": "1011839"
  },
  {
    "text": "having the right filters uh and some little to help we can really reach level of very kafka",
    "start": "1011839",
    "end": "1018399"
  },
  {
    "text": "friendly istio that will allow us to benefit uh from all you know the inherent security which are included so",
    "start": "1018399",
    "end": "1025280"
  },
  {
    "text": "how's the structure is going to look like um so this is going to be like we're going to",
    "start": "1025280",
    "end": "1030720"
  },
  {
    "text": "inject the istio or the endovoy proxy to consumer pods producer pods",
    "start": "1030720",
    "end": "1037839"
  },
  {
    "text": "and the kafka broker the easter control plane uh will uh make sure that everything is",
    "start": "1037839",
    "end": "1044079"
  },
  {
    "text": "encrypted and you know the the envoy will encrypt the traffic",
    "start": "1044079",
    "end": "1049280"
  },
  {
    "text": "uh you know get the and and of course uh rotate when it's rotated but can",
    "start": "1049280",
    "end": "1055440"
  },
  {
    "text": "encrypt the traffic as soon as leave the the uh consumer um",
    "start": "1055440",
    "end": "1062000"
  },
  {
    "text": "or the producer containers uh when it reaches the broker the broker uh will will forward the traffic for",
    "start": "1062000",
    "end": "1068640"
  },
  {
    "text": "authorization so i can verify the three results every new authorization request will be",
    "start": "1068640",
    "end": "1074400"
  },
  {
    "text": "verified it will be cached and this can be maintained and the traffic will uh talking not not going to impact the",
    "start": "1074400",
    "end": "1081520"
  },
  {
    "text": "the perform the performance so what's going to look like so instead",
    "start": "1081520",
    "end": "1086640"
  },
  {
    "text": "of using the regular authentication we can of course use the easter based authentication the android proxy will",
    "start": "1086640",
    "end": "1092080"
  },
  {
    "text": "extract the application or the or the micro service identity uh and forward it and afford it for the",
    "start": "1092080",
    "end": "1099200"
  },
  {
    "text": "authorizer uh just like you know it's using it today uh just decision will be made locally",
    "start": "1099200",
    "end": "1106080"
  },
  {
    "text": "and will be well maintained locally",
    "start": "1106080",
    "end": "1110080"
  },
  {
    "text": "just a second okay authorization",
    "start": "1111200",
    "end": "1118559"
  },
  {
    "text": "will be will be the same so we can you know authorize user business specific attributes um and then use the android",
    "start": "1118559",
    "end": "1126880"
  },
  {
    "text": "proxy for that uh as well we can get much flexible more granular options",
    "start": "1126880",
    "end": "1132160"
  },
  {
    "text": "setting the rules uh and caching those uh results",
    "start": "1132160",
    "end": "1138559"
  },
  {
    "text": "encryption can can spread around the entire cluster so instead of keeping it",
    "start": "1139919",
    "end": "1145120"
  },
  {
    "text": "uh only specific to the control we can run it you know all the clustering trip all the traffic between the micro",
    "start": "1145120",
    "end": "1151360"
  },
  {
    "text": "services uh and the brokers or even the internal everything can be managed you know",
    "start": "1151360",
    "end": "1156640"
  },
  {
    "text": "rotating certificates uh it's gonna be a much easier and simpler uh task to do so all in all",
    "start": "1156640",
    "end": "1165760"
  },
  {
    "text": "uh with having uh with you know making those changes",
    "start": "1165760",
    "end": "1172160"
  },
  {
    "text": "you know we can uh make istio a much friendlier to",
    "start": "1172160",
    "end": "1179360"
  },
  {
    "text": "kafka we can then once we deploy together we can use all those mechanisms which today are",
    "start": "1179360",
    "end": "1186480"
  },
  {
    "text": "not very advanced in kafka we can use the easter mechanism and then we can bring the kafka to the same level of",
    "start": "1186480",
    "end": "1192799"
  },
  {
    "text": "security like any other regular workload that's running in in kubernetes so we can really benefit",
    "start": "1192799",
    "end": "1198799"
  },
  {
    "text": "uh from both worlds together but that brings us to the question what",
    "start": "1198799",
    "end": "1204960"
  },
  {
    "text": "do we do until that uh and until we have uh is your friendly",
    "start": "1204960",
    "end": "1210240"
  },
  {
    "text": "what can be an intermediate solution and here we won't talk about what we are using today",
    "start": "1210240",
    "end": "1218240"
  },
  {
    "text": "and today we're using the open policy agent so the open policy agent uh to do all the micro services",
    "start": "1218240",
    "end": "1225200"
  },
  {
    "text": "authorization uh just on a nutshell the open policy agent",
    "start": "1225200",
    "end": "1230240"
  },
  {
    "text": "um it's a popular tool uh it decouple policy decision making from enforcement",
    "start": "1230240",
    "end": "1236400"
  },
  {
    "text": "decision okay so when we use open policy agent with kafka uh we can we need to",
    "start": "1236400",
    "end": "1243760"
  },
  {
    "text": "use a uh an opa plugin uh inside you know the streamsi kafka",
    "start": "1243760",
    "end": "1250159"
  },
  {
    "text": "and this plugin can redirect or make authorization requests to the oppa server so when opa is using with kafka",
    "start": "1250159",
    "end": "1258080"
  },
  {
    "text": "the kafka authorizer call to the plugin the opa server uh to evaluate the policy based on the input",
    "start": "1258080",
    "end": "1265120"
  },
  {
    "text": "from the authorizers uh input is the same set of information just nothing change",
    "start": "1265120",
    "end": "1270720"
  },
  {
    "text": "and then in opa server people can define their policies and the oppa can evaluate",
    "start": "1270720",
    "end": "1276960"
  },
  {
    "text": "any request uh based on the policy and respond to the authorizer uh with a decision whether the whether",
    "start": "1276960",
    "end": "1283679"
  },
  {
    "text": "the request is allowed or not and decision are cashed by the authorizer to make sure performance",
    "start": "1283679",
    "end": "1289679"
  },
  {
    "text": "is not is not affected so this is open policy agent uh in port",
    "start": "1289679",
    "end": "1297360"
  },
  {
    "text": "shift we use the same architecture and use the same plugin",
    "start": "1297360",
    "end": "1302640"
  },
  {
    "text": "also to allow people to communicate and define uh their authorization rules",
    "start": "1302640",
    "end": "1309760"
  },
  {
    "text": "and then the opa plugin will forward it to port shift port shift uh will based on based act like just the",
    "start": "1309760",
    "end": "1316880"
  },
  {
    "text": "opa server and based on the predefined rules we'll verify what users can access",
    "start": "1316880",
    "end": "1323440"
  },
  {
    "text": "uh what uh you know what um topic uh what broker uh can be accessed",
    "start": "1323440",
    "end": "1331039"
  },
  {
    "text": "we are focusing on on topics um all the new communication going to be authorized the micro services are going",
    "start": "1331039",
    "end": "1336960"
  },
  {
    "text": "to be authenticated based on the runtime properties you know in the namespace they are deployed their",
    "start": "1336960",
    "end": "1342080"
  },
  {
    "text": "source of region uh we can use those customized identities and verify that our users are",
    "start": "1342080",
    "end": "1350159"
  },
  {
    "text": "author authenticated and then the traffic encrypted is used to be done independently",
    "start": "1350159",
    "end": "1357600"
  },
  {
    "text": "so that's going to be how our clusters not look like um you know the main issue is the op-up",
    "start": "1358240",
    "end": "1364480"
  },
  {
    "text": "plugin or getting information from the authorizers calling port shift and getting information uh istio is not",
    "start": "1364480",
    "end": "1371840"
  },
  {
    "text": "really in place not in the kafka brokers not in the kafka pods but it does being in but used in the",
    "start": "1371840",
    "end": "1378000"
  },
  {
    "text": "kafka pods but again it's a the current version which is still",
    "start": "1378000",
    "end": "1383039"
  },
  {
    "text": "need some modification to get it like you know in full fledge to get from all the benefits uh enjoyed",
    "start": "1383039",
    "end": "1389440"
  },
  {
    "text": "so this is all from my side i'll hand over to nicolas nicolas please",
    "start": "1389440",
    "end": "1395520"
  },
  {
    "text": "take us through what you do in tomorrow",
    "start": "1395520",
    "end": "1403840"
  },
  {
    "text": "i'm sorry i was stubborn slide 20 on so i will talk about",
    "start": "1408080",
    "end": "1415039"
  },
  {
    "text": "the marlow story and what happened in the practical side of stuff what",
    "start": "1415039",
    "end": "1421279"
  },
  {
    "text": "marlow is currently using we are using a legacy system that was built for 25",
    "start": "1421279",
    "end": "1428400"
  },
  {
    "text": "years it kept growing and became complex and if i can recall correctly it reached",
    "start": "1428400",
    "end": "1434559"
  },
  {
    "text": "its end of life support in 2003 not only that",
    "start": "1434559",
    "end": "1440480"
  },
  {
    "text": "but the server side application does everything it receives requests executes domain logic retrieves and",
    "start": "1440480",
    "end": "1447760"
  },
  {
    "text": "updates data from database and responds back to the client modularity within the application is",
    "start": "1447760",
    "end": "1453840"
  },
  {
    "text": "typically based on features of the programming language even a small change of to the",
    "start": "1453840",
    "end": "1459279"
  },
  {
    "text": "application requires that the entire monolithic system is rebuilt and redeployed it gets",
    "start": "1459279",
    "end": "1466400"
  },
  {
    "text": "difficult for change not to affect the whole system as much as it grows over the years it gets",
    "start": "1466400",
    "end": "1472880"
  },
  {
    "text": "difficult and complex to maintain and in order to scale the application we would simply create",
    "start": "1472880",
    "end": "1479039"
  },
  {
    "text": "more instances of that process and usually it is not possible to scale the components in primary",
    "start": "1479039",
    "end": "1487840"
  },
  {
    "text": "so moving to cloud native micro services and google networks micro services",
    "start": "1489919",
    "end": "1495200"
  },
  {
    "text": "with the google nethers natives deployments we can get view on different metrics such as cpu usage and ram usage",
    "start": "1495200",
    "end": "1502480"
  },
  {
    "text": "the horizontal product scalers give us the ability to scale the number of instances",
    "start": "1502480",
    "end": "1507840"
  },
  {
    "text": "in a replication controller or replica set based on those metrics",
    "start": "1507840",
    "end": "1512960"
  },
  {
    "text": "we can also use the same metrics alongside with shell checks to vertically scale",
    "start": "1512960",
    "end": "1518000"
  },
  {
    "text": "our infrastructure when needed even that we prefer scaling horizontally our infrastructure as well and",
    "start": "1518000",
    "end": "1526000"
  },
  {
    "text": "with the introduction of githubs deployment configs sharing charts we save a lot of time we have better",
    "start": "1526000",
    "end": "1532799"
  },
  {
    "text": "versioning and obviously much easier rolling updates",
    "start": "1532799",
    "end": "1538880"
  },
  {
    "text": "so a bit about our this is a small representation of how",
    "start": "1538880",
    "end": "1544240"
  },
  {
    "text": "our system works we still need to get data from our legacy system since we are still in development so",
    "start": "1544240",
    "end": "1552080"
  },
  {
    "text": "we have stateless apps in blue color that issue commands and events but we still need to keep the",
    "start": "1552080",
    "end": "1558159"
  },
  {
    "text": "state somewhere so we decided to use kafka and other storage services elasticsearch to do",
    "start": "1558159",
    "end": "1563919"
  },
  {
    "text": "that given all that",
    "start": "1563919",
    "end": "1570559"
  },
  {
    "text": "we need and given that we needed to move forward to a hybrid environment at some point which",
    "start": "1570559",
    "end": "1576159"
  },
  {
    "text": "is a lengthy subject that i don't want to get into today we decided to move from managed kafka",
    "start": "1576159",
    "end": "1581520"
  },
  {
    "text": "services to streams streams gave us freedom in so many ways",
    "start": "1581520",
    "end": "1586559"
  },
  {
    "text": "for example leveraging all the kubernetes concepts that i already talked about we are able to use githubs to to easily",
    "start": "1586559",
    "end": "1594480"
  },
  {
    "text": "deploy a ton of kafka with a few clicks we parameterize a lot of the configuration",
    "start": "1594480",
    "end": "1601279"
  },
  {
    "text": "it's pretty much secure in comparison with other services and has a great community that is always",
    "start": "1601279",
    "end": "1607039"
  },
  {
    "text": "willing to help the problem with such environments and",
    "start": "1607039",
    "end": "1613520"
  },
  {
    "text": "traditional firewalls is that they need skills to get configured well especially on cloud-native environments",
    "start": "1613520",
    "end": "1620400"
  },
  {
    "text": "and complex networks imagine having to secure a whole kaka cluster using regular expressions",
    "start": "1620400",
    "end": "1626960"
  },
  {
    "text": "and having almost zero visibility on the request made furthermore firewalls need a lot of fuel",
    "start": "1626960",
    "end": "1634720"
  },
  {
    "text": "to get configured which it uses the agility and the acceleration of all the development which is bad for",
    "start": "1634720",
    "end": "1641520"
  },
  {
    "text": "everyone we also sometimes need to give or block access on different layers",
    "start": "1641520",
    "end": "1647919"
  },
  {
    "text": "such as on the micro service level and more importantly on the topic level",
    "start": "1647919",
    "end": "1653279"
  },
  {
    "text": "also given that a lot of times now with the corona virus days we need to work on home they need to",
    "start": "1653279",
    "end": "1660159"
  },
  {
    "text": "secure the environment for specifically peace came up and as much as we move forward",
    "start": "1660159",
    "end": "1666880"
  },
  {
    "text": "configuring and securing streamsy we realize that we need something more sophisticated from",
    "start": "1666880",
    "end": "1672880"
  },
  {
    "text": "managed cloud services and that's where courtship jumped into the game to save our lives",
    "start": "1672880",
    "end": "1681919"
  },
  {
    "text": "so the port shift solution gave us visibility on what requests are made with tables and nice graphs",
    "start": "1681919",
    "end": "1689039"
  },
  {
    "text": "we were able to set up rules on a very user-friendly environment we are able to add rules for specific",
    "start": "1689039",
    "end": "1696320"
  },
  {
    "text": "microservices and specific topics and moving forward i will show a small",
    "start": "1696320",
    "end": "1702320"
  },
  {
    "text": "demo of how easily those stuff can be done",
    "start": "1702320",
    "end": "1707200"
  },
  {
    "text": "so on that demo i will be using arco cd which is a great tool for githubs",
    "start": "1707360",
    "end": "1713760"
  },
  {
    "text": "another great tool is lenses that is great for visualization of data in kafka",
    "start": "1713760",
    "end": "1720000"
  },
  {
    "text": "among other stuff but that's what i will show today obviously i will use openshift we use",
    "start": "1720000",
    "end": "1726320"
  },
  {
    "text": "our kubernetes cluster streamsy and our security solution which is spot shift",
    "start": "1726320",
    "end": "1732399"
  },
  {
    "text": "so let me share my screen",
    "start": "1732399",
    "end": "1739840"
  },
  {
    "text": "with argo i will create a new app i will give an application name afghan",
    "start": "1740640",
    "end": "1746960"
  },
  {
    "text": "demo i will select the default project i will select auto create namespace",
    "start": "1746960",
    "end": "1754559"
  },
  {
    "text": "i will choose my git reaper and choose the root path",
    "start": "1754559",
    "end": "1760159"
  },
  {
    "text": "i'll choose my cluster and the namespace name i want",
    "start": "1760159",
    "end": "1767200"
  },
  {
    "text": "and after creating and sensing that after some time we will have a full",
    "start": "1767200",
    "end": "1773440"
  },
  {
    "text": "workable kafka cluster on openshift so let's see what happened",
    "start": "1773440",
    "end": "1781840"
  },
  {
    "text": "we have embroidered zookeeper lenses and the operator and the kafka connect let's head to",
    "start": "1782159",
    "end": "1790000"
  },
  {
    "text": "lenses to see what's happening here we have some three topics with mock data created",
    "start": "1790000",
    "end": "1797440"
  },
  {
    "text": "let's see what's inside so some sensitive info of our customers",
    "start": "1797440",
    "end": "1805760"
  },
  {
    "text": "some customer information and some iphone numbers all of those are mock data don't worry",
    "start": "1805760",
    "end": "1813919"
  },
  {
    "text": "and let's head to post shift to see what we can do",
    "start": "1814799",
    "end": "1822159"
  },
  {
    "text": "we can click on policies and then connection rules",
    "start": "1822159",
    "end": "1828240"
  },
  {
    "text": "let's start adding rules",
    "start": "1828240",
    "end": "1831520"
  },
  {
    "text": "i will select by and put the nssa port name",
    "start": "1833679",
    "end": "1839200"
  },
  {
    "text": "then next i will select by kafka here i can see my brokers and the",
    "start": "1839200",
    "end": "1846159"
  },
  {
    "text": "cluster i will select the network that we just created next we will select kafka now we can see",
    "start": "1846159",
    "end": "1854320"
  },
  {
    "text": "all the topics that are used in this broker",
    "start": "1854320",
    "end": "1859519"
  },
  {
    "text": "i will just select the iban numbers and the sensitive information",
    "start": "1859519",
    "end": "1865840"
  },
  {
    "text": "and i want to block access for reading and writing on those topics",
    "start": "1868640",
    "end": "1874720"
  },
  {
    "text": "next we just put a name",
    "start": "1874799",
    "end": "1879840"
  },
  {
    "text": "and then block the axis when i press finish and apply the policy",
    "start": "1889039",
    "end": "1895440"
  },
  {
    "text": "i will head back to lenses and after some time i will lose access to it",
    "start": "1897039",
    "end": "1904159"
  },
  {
    "text": "so i cannot have access to those topics but i still have access to the custom information that i want access to",
    "start": "1904640",
    "end": "1912640"
  },
  {
    "text": "so back to put shift",
    "start": "1912960",
    "end": "1916240"
  },
  {
    "text": "i will add another rule i want to block access to eyepiece for everyone in the world so i'll put",
    "start": "1918960",
    "end": "1926399"
  },
  {
    "text": "zero zero zero zero easy as that",
    "start": "1926399",
    "end": "1932399"
  },
  {
    "text": "sorry about that zero next",
    "start": "1933039",
    "end": "1937919"
  },
  {
    "text": "[Music] i'll choose a name len says in that case",
    "start": "1942090",
    "end": "1948480"
  },
  {
    "text": "next and incredible and then block",
    "start": "1948480",
    "end": "1963840"
  },
  {
    "text": "right click finish and then apply the policy i can't get back to learning this",
    "start": "1965279",
    "end": "1970720"
  },
  {
    "text": "we need to wait a bit for it to work let's see what happens",
    "start": "1970720",
    "end": "1977840"
  },
  {
    "text": "doesn't where it's going to sell on the first refresh but let's see the second one",
    "start": "1980480",
    "end": "1987120"
  },
  {
    "text": "now it's blocked let's try again to be sure",
    "start": "1988640",
    "end": "1994399"
  },
  {
    "text": "[Music] blocked but now i want to be able to",
    "start": "1995040",
    "end": "2001919"
  },
  {
    "text": "work from home so i will add my ap to be allowed so let's select by ap",
    "start": "2001919",
    "end": "2009039"
  },
  {
    "text": "i will play it out for now so you can't see my p",
    "start": "2009279",
    "end": "2014720"
  },
  {
    "text": "i'm adding my ip and 32 for just one ip",
    "start": "2015279",
    "end": "2020399"
  },
  {
    "text": "click next again with the same name",
    "start": "2026960",
    "end": "2033840"
  },
  {
    "text": "clicking next any layer 7 protocol that now allow i will add a name",
    "start": "2034720",
    "end": "2047840"
  },
  {
    "text": "finish and now because i want this rule to have higher priority i can easily move it up",
    "start": "2050800",
    "end": "2057919"
  },
  {
    "text": "so let's apply the policy",
    "start": "2057919",
    "end": "2061838"
  },
  {
    "text": "go back to lenses refresh",
    "start": "2064079",
    "end": "2074320"
  },
  {
    "text": "now we have access to lenses but we still don't have access to the topics",
    "start": "2074320",
    "end": "2079520"
  },
  {
    "text": "we blocked so that's good so let's head back to podchick to see the rest of the goodies",
    "start": "2079520",
    "end": "2085440"
  },
  {
    "text": "it give us has a nice dashboard with some risky workloads events connection",
    "start": "2085440",
    "end": "2092720"
  },
  {
    "text": "how much portal running permissions fascinates navigator that's kind of a",
    "start": "2092720",
    "end": "2099839"
  },
  {
    "text": "nice diagram of what's happening now we can expand this",
    "start": "2099839",
    "end": "2106000"
  },
  {
    "text": "and we can see all the external connections and all the internal connections so one",
    "start": "2106079",
    "end": "2111119"
  },
  {
    "text": "data connect connecting to the brokers and lenses connecting to workers and",
    "start": "2111119",
    "end": "2117119"
  },
  {
    "text": "some ips from the outside connecting to lenses let's go to ci we can see all our images",
    "start": "2117119",
    "end": "2124160"
  },
  {
    "text": "here we can see some vulnerabilities and how many there are in every image",
    "start": "2124160",
    "end": "2130400"
  },
  {
    "text": "we can click on the critical we have a lot of information here such",
    "start": "2130400",
    "end": "2136320"
  },
  {
    "text": "as the description and we can click the exact cv to go to the cv page and see what's",
    "start": "2136320",
    "end": "2141599"
  },
  {
    "text": "happening with that so that's nice as well and then we can",
    "start": "2141599",
    "end": "2147200"
  },
  {
    "text": "go to the runtime where we can see all the workloads running on our cluster",
    "start": "2147200",
    "end": "2153680"
  },
  {
    "text": "and some more information the result if it's allowed and then we can see all the connections",
    "start": "2153680",
    "end": "2159760"
  },
  {
    "text": "happening right now as you can see on the right side we can't even see which topics are accessed by which",
    "start": "2159760",
    "end": "2166640"
  },
  {
    "text": "workload and finally the risk assessment of our",
    "start": "2166640",
    "end": "2171920"
  },
  {
    "text": "system we can select the scan time or schedule it we can select the severity to report",
    "start": "2171920",
    "end": "2179920"
  },
  {
    "text": "and if we want we can select the namespace we don't want to right now",
    "start": "2179920",
    "end": "2186079"
  },
  {
    "text": "after we click save the scan is starting and after some time that i cut out",
    "start": "2186079",
    "end": "2193520"
  },
  {
    "text": "it's finishing and showing the vulnerabilities so that's me that's it for my side",
    "start": "2193520",
    "end": "2201200"
  },
  {
    "text": "heading back to ariel to summarize the presentation",
    "start": "2201200",
    "end": "2206640"
  },
  {
    "text": "cuny colas thank you for this uh great demo uh and thank you for showing everything",
    "start": "2206640",
    "end": "2214800"
  },
  {
    "text": "i know just to summarize everything um you know kafka",
    "start": "2214800",
    "end": "2221520"
  },
  {
    "text": "even when deploying kubernetes does require dedicated security tools it",
    "start": "2221520",
    "end": "2228000"
  },
  {
    "text": "does not benefit or inherent security mechanisms which are deployed",
    "start": "2228000",
    "end": "2233680"
  },
  {
    "text": "east 2 cannot be ideal candidate for man to do it or to achieve this level",
    "start": "2233680",
    "end": "2239760"
  },
  {
    "text": "some of the work in order to make it it's not natively out of the box some require will be enhanced in the",
    "start": "2239760",
    "end": "2245839"
  },
  {
    "text": "future when scica containers will get the better treatment and some require a little bit more tweaking by adding",
    "start": "2245839",
    "end": "2252480"
  },
  {
    "text": "a dedicated filter and envoy that can detect and manipulate the traffic but with",
    "start": "2252480",
    "end": "2258320"
  },
  {
    "text": "small fixes i'm sure in the near future i will be able to use istio and really",
    "start": "2258320",
    "end": "2264079"
  },
  {
    "text": "get benefit from all the security mechanisms and to bring the",
    "start": "2264079",
    "end": "2269119"
  },
  {
    "text": "kafka cluster to the same level of security which allow everyone to use it freely and securely",
    "start": "2269119",
    "end": "2274960"
  },
  {
    "text": "in kubernetes or in openshift in the meantime opensort the open policy agent can be",
    "start": "2274960",
    "end": "2280800"
  },
  {
    "text": "used in order to customize a lot of the work but having but nevertheless i'm sure in the near future",
    "start": "2280800",
    "end": "2287920"
  },
  {
    "text": "we'll be able to benefit from uh the meshi kafka and make a serving flesh",
    "start": "2287920",
    "end": "2294240"
  },
  {
    "text": "friendly kafka um so that's it thank you very much for joining thank you nicolas for a great",
    "start": "2294240",
    "end": "2300720"
  },
  {
    "text": "demo and thank you for doing this for joining and will be available for in the next few minutes for a few questions from the",
    "start": "2300720",
    "end": "2306240"
  },
  {
    "text": "audience thank you",
    "start": "2306240",
    "end": "2310720"
  }
]