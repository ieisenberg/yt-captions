[
  {
    "text": "hi everyone thanks for coming so my name is Greg this is Tim so we both work on",
    "start": "30",
    "end": "5069"
  },
  {
    "text": "gke security Tim's actually a chair of the signal with kubernetes one of the community",
    "start": "5069",
    "end": "12389"
  },
  {
    "text": "security stags so when we were thinking about the talk we wanted to present here",
    "start": "12389",
    "end": "18090"
  },
  {
    "text": "we wanted to talk about node isolation inside of clusters and when we were thinking about it we were kind of",
    "start": "18090",
    "end": "24240"
  },
  {
    "text": "thinking about how an attacker moves through clusters looking for kind of unexpected ways to move through clusters",
    "start": "24240",
    "end": "29670"
  },
  {
    "text": "that the people who design the kind of walls and separation inside of those clusters didn't really expect them to do",
    "start": "29670",
    "end": "36390"
  },
  {
    "text": "things in that order and it sort of felt a little bit like parkour this this sport of freerunning where you know",
    "start": "36390",
    "end": "42030"
  },
  {
    "text": "these athletes are looking at the urban built environment and looking at buildings and HVAC systems and railings",
    "start": "42030",
    "end": "48570"
  },
  {
    "text": "and staircases in ways that the architects and builders kind of never intended them to be looked at and used",
    "start": "48570",
    "end": "53850"
  },
  {
    "text": "in so we're gonna kind of keep this theme throughout talk and we're going to talk about node isolation and how we can",
    "start": "53850",
    "end": "60690"
  },
  {
    "text": "attack it and maybe how we can do better than note isolation so we're gonna start out by talking about basically two",
    "start": "60690",
    "end": "67830"
  },
  {
    "text": "containers so this the fundamental problem is you have a trusted thing and an untrusted thing and you want to",
    "start": "67830",
    "end": "73200"
  },
  {
    "text": "separate them somehow so one way to do that is to use what we're calling node isolation where you put one set of",
    "start": "73200",
    "end": "80220"
  },
  {
    "text": "things on one node and then be able to set of things on the other node and that seems pretty separate except in",
    "start": "80220",
    "end": "86430"
  },
  {
    "text": "kubernetes it isn't really that separate actually so we're going to kind of",
    "start": "86430",
    "end": "91439"
  },
  {
    "text": "demonstrate a pretty cool I think it was a lot of fun to write attack - kind of",
    "start": "91439",
    "end": "97110"
  },
  {
    "text": "like jump through all the hoops to break that isolation and then we're going to talk about kind of better ways that we",
    "start": "97110",
    "end": "104280"
  },
  {
    "text": "can think about isolating things inside the cluster and leave you with some recommendations so we have two",
    "start": "104280",
    "end": "111570"
  },
  {
    "text": "containers and for the purposes of this talk we also have a fake company that",
    "start": "111570",
    "end": "116909"
  },
  {
    "text": "does like a really specific web hosting thing so they just host parkour gym",
    "start": "116909",
    "end": "123210"
  },
  {
    "text": "websites so it's may not be the best business model ever a total addressable market probably fairly small but that's",
    "start": "123210",
    "end": "130289"
  },
  {
    "text": "what they do so they have things that are in to the company and one of those things",
    "start": "130289",
    "end": "135750"
  },
  {
    "text": "is a payments pod that does payments things and then they have the customer workloads which you know for the",
    "start": "135750",
    "end": "142260"
  },
  {
    "text": "purposes of this talk we tried to come up with the best possible pum name we could with the intersection of parkour",
    "start": "142260",
    "end": "148320"
  },
  {
    "text": "and kubernetes and I present you maximum uptime I hope you like it and so the the",
    "start": "148320",
    "end": "156420"
  },
  {
    "text": "red container here or pinkish container here is a customer website that is basically an untrusted workload that",
    "start": "156420",
    "end": "162660"
  },
  {
    "text": "this hosting company is running so if we don't do anything they get scheduled",
    "start": "162660",
    "end": "167670"
  },
  {
    "text": "right next to each other or they could be and the threat model is basically we",
    "start": "167670",
    "end": "173010"
  },
  {
    "text": "expect that thing to get owned like the these kind of people are running these",
    "start": "173010",
    "end": "178470"
  },
  {
    "text": "websites may not you know patch regularly I don't know maybe competitors are actually going to try and attack each other at one point or another",
    "start": "178470",
    "end": "185280"
  },
  {
    "text": "that's probably going to be malicious code in this untrusted container at some point and if that happens and it breaks",
    "start": "185280",
    "end": "190860"
  },
  {
    "text": "out and it can access other stuff on the node so like container breakouts is that",
    "start": "190860",
    "end": "196710"
  },
  {
    "text": "a thing that we need to worry about and yeah I think it is in this in this scenario where you have a trusted thing",
    "start": "196710",
    "end": "202920"
  },
  {
    "text": "and an untrusted thing running together if you look at kind of just this year there was a vulnerability and run C that",
    "start": "202920",
    "end": "208520"
  },
  {
    "text": "broke this boundary and so if you were running in this situation where you had the two things like right beside each",
    "start": "208520",
    "end": "214860"
  },
  {
    "text": "other with just a container boundary in between you would have probably had a bad day in your production system so we",
    "start": "214860",
    "end": "221010"
  },
  {
    "text": "basically think bugs are inevitable here and we'd like to have more than this",
    "start": "221010",
    "end": "226230"
  },
  {
    "text": "container boundary and we don't think it's really enough just kind of on its own two separate trusted and untrusted",
    "start": "226230",
    "end": "232460"
  },
  {
    "text": "so you can do better definitely with with containers so you can use seccomp",
    "start": "232460",
    "end": "238890"
  },
  {
    "text": "obama su linux these have a pretty steep learning curve and they are like",
    "start": "238890",
    "end": "244800"
  },
  {
    "text": "reasonably difficult to maintain this kind of tightening of the screws of kind",
    "start": "244800",
    "end": "250410"
  },
  {
    "text": "of constraining an application and one of the real challenges is that you actually have to really fully exercise",
    "start": "250410",
    "end": "256109"
  },
  {
    "text": "in tests so like if you want to make sure that that seccomp sandbox really represents almost",
    "start": "256109",
    "end": "261750"
  },
  {
    "text": "ischool's that this application is going to make you'd want to be pretty sure that you got them all",
    "start": "261750",
    "end": "267160"
  },
  {
    "text": "test so that you don't block it when it's blocker Cisco when it's running in production and you know for like this",
    "start": "267160",
    "end": "273910"
  },
  {
    "text": "particular company like lots of different websites maybe doing different things maybe need different sand boxes",
    "start": "273910",
    "end": "279550"
  },
  {
    "text": "so that's a lot of work for a kind of small hosting company and even if you do",
    "start": "279550",
    "end": "284680"
  },
  {
    "text": "all that work then maybe there's just one durability to blow it away anyway because effectively you've got a shared",
    "start": "284680",
    "end": "289690"
  },
  {
    "text": "kernel here with some extra stuff and so if this stuff is whitelisted that you know the Cisco that the website actually",
    "start": "289690",
    "end": "296830"
  },
  {
    "text": "needs has the vulnerability and it you know kind of passes through the other wireless thing and the other security",
    "start": "296830",
    "end": "303520"
  },
  {
    "text": "mechanisms here then that's sort of it so this leads people to especially",
    "start": "303520",
    "end": "310930"
  },
  {
    "text": "security people who used to separating things with VMs to think okay well let's",
    "start": "310930",
    "end": "316630"
  },
  {
    "text": "just stick them on separate nodes in and put VM boundaries in between been doing this for a long time so payments stuff",
    "start": "316630",
    "end": "324190"
  },
  {
    "text": "on payments node customers stuff on customer node whoo and there's like non security benefits",
    "start": "324190",
    "end": "330730"
  },
  {
    "text": "here so you get separate failure domains you get some resource isolation that you don't get with C groups so that's not",
    "start": "330730",
    "end": "338230"
  },
  {
    "text": "bad from that perspective but is it actually good enough for security like it trusted and untrusted like this and",
    "start": "338230",
    "end": "344410"
  },
  {
    "text": "this is where we're gonna focus for the rest of the talk so we're gonna kind of",
    "start": "344410",
    "end": "350020"
  },
  {
    "text": "walk through how you set this up and then we're going to attack it so how do you set it up there's a few different",
    "start": "350020",
    "end": "355420"
  },
  {
    "text": "pieces and labels and taints are key and then you also kind of need to deep",
    "start": "355420",
    "end": "360700"
  },
  {
    "text": "privilege the cubelet quite a bit to make this like any sort of reasonable boundary at all so in terms of labels",
    "start": "360700",
    "end": "368200"
  },
  {
    "text": "you would say all right I'm gonna add a label to my nodes so that the payments",
    "start": "368200",
    "end": "373240"
  },
  {
    "text": "pods can target target the payments nodes that's how the payments fall to make sure they end up on the payments",
    "start": "373240",
    "end": "378730"
  },
  {
    "text": "nodes and then I also need to add a taint and this is kind of like a little counterintuitive that I have to do both",
    "start": "378730",
    "end": "384490"
  },
  {
    "text": "of these things but basically the first one saying please land here and then the",
    "start": "384490",
    "end": "390100"
  },
  {
    "text": "second one which is the taint is saying anything that isn't a payments node should never be scheduled on this node",
    "start": "390100",
    "end": "395800"
  },
  {
    "text": "so that's what the no schedule says like don't put anything don't put not non pain",
    "start": "395800",
    "end": "400870"
  },
  {
    "text": "things on this note and so once you've done that then in your PUD spec you can",
    "start": "400870",
    "end": "405940"
  },
  {
    "text": "target those things so you would say in your PUD SPECT please put me on payments nodes using the label and then you would",
    "start": "405940",
    "end": "412900"
  },
  {
    "text": "also say I can tolerate the the tainted node that is allowed for payments and",
    "start": "412900",
    "end": "418390"
  },
  {
    "text": "that's basically enough to say all right payments things land on a payments node",
    "start": "418390",
    "end": "423750"
  },
  {
    "text": "so then switching into the kind of like the API sort of the protections here and",
    "start": "423750",
    "end": "429670"
  },
  {
    "text": "the and the Qod privileges so the node authorizer is pretty key so no two authorizer which you know is not sort of",
    "start": "429670",
    "end": "437440"
  },
  {
    "text": "on by default with kubernetes but is on by default in lots of places such as gke sits between the cubelet and the api",
    "start": "437440",
    "end": "444580"
  },
  {
    "text": "server so there's also an admission controller which I'll get to in a sec and so Cupid request from the cubelet",
    "start": "444580",
    "end": "450880"
  },
  {
    "text": "goat-like through this through this sort of request path and the idea of the Noda authorizer is to limit cubelet to lease",
    "start": "450880",
    "end": "457270"
  },
  {
    "text": "privilege so it's really saying hey cubelet you're only allowed to do the things that are necessary to do you a job and that's things like right so the",
    "start": "457270",
    "end": "465250"
  },
  {
    "text": "node Eliza is constraining what the the cubelet is allowed to do including like which things that can write to and",
    "start": "465250",
    "end": "471550"
  },
  {
    "text": "especially relevant is which secrets that can read we'll talk more about that in a minute and then admission is more",
    "start": "471550",
    "end": "478810"
  },
  {
    "text": "fine-grained controls over that so it's okay the couplet can modify the node object which parts of the node object",
    "start": "478810",
    "end": "484690"
  },
  {
    "text": "should the people that really be allowed to modify and so you need both of those things and then you like kind of deep",
    "start": "484690",
    "end": "490840"
  },
  {
    "text": "privilege the cubelet a reasonable extent so this is the full picture of labels and taints to do the things and",
    "start": "490840",
    "end": "497440"
  },
  {
    "text": "remove some Qibla privileges so that what kind of now sit up for this to work",
    "start": "497440",
    "end": "504370"
  },
  {
    "text": "so let's talk about how we can attack it so I'll hand it over to Tim all right thanks so yeah so we've got this set up",
    "start": "504370",
    "end": "513099"
  },
  {
    "text": "our payment spot or our payment spot is on a separate node from our maximum uptime node which is what got",
    "start": "513100",
    "end": "521020"
  },
  {
    "text": "compromised so the attacker has access to the newett on the right and the goal of this attack is going to be to get",
    "start": "521020",
    "end": "527290"
  },
  {
    "text": "access to the payment secret the payments pod or the payments node can",
    "start": "527290",
    "end": "533710"
  },
  {
    "text": "act that payments secret it has to be able to because it's referenced by the payments pod but the compromise note",
    "start": "533710",
    "end": "541410"
  },
  {
    "text": "can't get access to it because the note authorizer blocks it and so the goal of",
    "start": "541410",
    "end": "547380"
  },
  {
    "text": "this attack is actually going to be what if we can get that payment squad to reschedule on to the attacker node then",
    "start": "547380",
    "end": "554760"
  },
  {
    "text": "the note authorizer would say okay you have an access to the payment secret so I'll let you access the payment secret",
    "start": "554760",
    "end": "562190"
  },
  {
    "text": "so that's gonna be the first step of the attack we have to modify the node so that the payments pod can be scheduled",
    "start": "562190",
    "end": "569250"
  },
  {
    "text": "onto that node from there we'll kill off the real payments pod and then let it be",
    "start": "569250",
    "end": "574590"
  },
  {
    "text": "rescheduled to the node so let's take a look at that first step in order for the payments pod to get scheduled on to that",
    "start": "574590",
    "end": "581540"
  },
  {
    "text": "customer node we have to first remove the customer tape and then we need to add the class equals payments label that",
    "start": "581540",
    "end": "589110"
  },
  {
    "text": "we're going to be using so I'll switch over to the demo now",
    "start": "589110",
    "end": "594290"
  },
  {
    "text": "couldn't maximize that so we are running",
    "start": "599450",
    "end": "611670"
  },
  {
    "text": "as root on the node and that means that we have access to everything that's on that node and cute including the",
    "start": "611670",
    "end": "617880"
  },
  {
    "text": "cubelets credentials so the first thing we'll do is we'll just set up cube cuddle to use the cubelet config and",
    "start": "617880",
    "end": "624600"
  },
  {
    "text": "credentials and then we'll be using that through the rest of the demo let's take a look at the current set up in the",
    "start": "624600",
    "end": "631950"
  },
  {
    "text": "payments namespace we have our payments processor pod running and we can see",
    "start": "631950",
    "end": "638850"
  },
  {
    "text": "that that's running on the the payments node in the customer namespace we have",
    "start": "638850",
    "end": "648660"
  },
  {
    "text": "our customer pod running on the customer node which is our compromised node in",
    "start": "648660",
    "end": "655410"
  },
  {
    "text": "this case so what happens if we just try and get that secret using the cubelets",
    "start": "655410",
    "end": "661440"
  },
  {
    "text": "credentials it's blocked as expected by",
    "start": "661440",
    "end": "667440"
  },
  {
    "text": "the node authorizer so we get a permission denied forbidden so now let's try and modify the node",
    "start": "667440",
    "end": "674460"
  },
  {
    "text": "first thing we have to do is grab the current node object and then I'm going",
    "start": "674460",
    "end": "680220"
  },
  {
    "text": "to do this jQuery command you could do this in an editor it was easy to script easier to script up with jQuery we're just adding",
    "start": "680220",
    "end": "687510"
  },
  {
    "text": "a class equals payments label that's the first line we are deleting all of the",
    "start": "687510",
    "end": "692820"
  },
  {
    "text": "taints on the spec and then we have this little bookkeeping thing we have to remove the resource version so the",
    "start": "692820",
    "end": "698940"
  },
  {
    "text": "update can actually work and let's go ahead and apply that so this replace",
    "start": "698940",
    "end": "706530"
  },
  {
    "text": "command on cube cuddle is doing an update request and it's rejected in this",
    "start": "706530",
    "end": "713370"
  },
  {
    "text": "case by the node restriction plug-in which prevents us from removing taints as of 111 but the restriction plug-in",
    "start": "713370",
    "end": "721260"
  },
  {
    "text": "and the node authorizer don't prevent us from deleting the node so let's just delete the node",
    "start": "721260",
    "end": "728839"
  },
  {
    "text": "that worked and we can see that our customer node is no longer running just",
    "start": "729410",
    "end": "735800"
  },
  {
    "text": "the payments won and now we can go and recreate the node using this new modified taint list node that succeeded",
    "start": "735800",
    "end": "746650"
  },
  {
    "text": "and if we take a closer look at that we can see we have in fact added the",
    "start": "746650",
    "end": "753410"
  },
  {
    "text": "payments label and if you look under the spec there are no taints there so let's",
    "start": "753410",
    "end": "761510"
  },
  {
    "text": "jump back to slides here so at this",
    "start": "761510",
    "end": "766910"
  },
  {
    "text": "point we've sort of succeeded we have removed the the taint added the label at",
    "start": "766910",
    "end": "772370"
  },
  {
    "text": "this point the payments pod could schedule on to this node and if we wait long enough it might eventually have a",
    "start": "772370",
    "end": "778730"
  },
  {
    "text": "scaling event or do an upgrade or just crash and maybe it will get rescheduled on our node but we can do better than",
    "start": "778730",
    "end": "785120"
  },
  {
    "text": "that and I'll hand it off to Greg to tell you how ok so the next steps we",
    "start": "785120",
    "end": "791330"
  },
  {
    "text": "want to actually kill off that real payments pod and the way we're gonna do",
    "start": "791330",
    "end": "797990"
  },
  {
    "text": "that is we're gonna create a fake pod make it older put it in a replica set have rific a set kill the newest so",
    "start": "797990",
    "end": "804530"
  },
  {
    "text": "let's just step through those so the first thing we're gonna do is create this fake payments pod so kid was just",
    "start": "804530",
    "end": "810740"
  },
  {
    "text": "not allowed to create regular pods but it can create static pods so we're gonna create a static pod which is basically",
    "start": "810740",
    "end": "816830"
  },
  {
    "text": "just like cubelet managing its own pod running on the node and then these are mirrored in the in the API so you may",
    "start": "816830",
    "end": "823460"
  },
  {
    "text": "have heard this like concept of a mirror pod and basically cublas creating a pod on its own and then there's a a mirror",
    "start": "823460",
    "end": "830270"
  },
  {
    "text": "object that's being created in the API so the API server knows what's going on so if you queue control get pods and you",
    "start": "830270",
    "end": "836120"
  },
  {
    "text": "can still see these static pods so once we have this kind of like fake payments",
    "start": "836120",
    "end": "841940"
  },
  {
    "text": "we're gonna start abusing replicas set to do our bidding so replica said job in this in this kind",
    "start": "841940",
    "end": "848510"
  },
  {
    "text": "of scenario is to keep one copy of the payments pod running and what we're gonna try and do is make a kill the",
    "start": "848510",
    "end": "854810"
  },
  {
    "text": "legitimate one and have our one be the only one that's there so replicas",
    "start": "854810",
    "end": "860430"
  },
  {
    "text": "say hey I've got two of these I need to kill one off hopefully it kills the other one but there's a wrinkle here so",
    "start": "860430",
    "end": "868260"
  },
  {
    "text": "replicas it actually kills the newest part and the logic there is well you know this other part has been ready for",
    "start": "868260",
    "end": "874230"
  },
  {
    "text": "a long time it's been running it's fine I I don't need this new pod that just started I'll just kill that one off so",
    "start": "874230",
    "end": "880230"
  },
  {
    "text": "we actually need to make our pod older so our pod needs to be like the og",
    "start": "880230",
    "end": "885420"
  },
  {
    "text": "payments like it it needs to be like the payments that's been around for the longest time and so we definitely don't",
    "start": "885420",
    "end": "891540"
  },
  {
    "text": "want that one killed off and please kill off the a the much newer one so we need to actually modify the ready time on",
    "start": "891540",
    "end": "897720"
  },
  {
    "text": "that fake payments pod and then kind of like the final piece of this is like once we've got all that set up then",
    "start": "897720",
    "end": "903870"
  },
  {
    "text": "we're going to delete ours and then have replica set recreate it and hopefully it recreates on us so let's step through it",
    "start": "903870",
    "end": "911339"
  },
  {
    "text": "and demo",
    "start": "911339",
    "end": "914630"
  },
  {
    "text": "my windows right in here so the first",
    "start": "926150",
    "end": "931850"
  },
  {
    "text": "thing I'm gonna do is look at the fake payments pod that we're creating so that's this mirror pod it's like super",
    "start": "931850",
    "end": "937730"
  },
  {
    "text": "boring pod it doesn't do anything this just calls pause which just sleeps and this is just a shell so that we can use",
    "start": "937730",
    "end": "944779"
  },
  {
    "text": "that replica set so we're just going to try creating that and as we expect people it's not allowed to do that",
    "start": "944779",
    "end": "950839"
  },
  {
    "text": "so we get this very helpful error message that says hey you can only create mirror pods great let's create a",
    "start": "950839",
    "end": "958100"
  },
  {
    "text": "mirror pod so the way we create a mirror pod is by copying just that yamo into",
    "start": "958100",
    "end": "965029"
  },
  {
    "text": "this special directory and you Coupole is gonna notice that new file there create a static publicly create the",
    "start": "965029",
    "end": "970760"
  },
  {
    "text": "mirror pod representation in the API so",
    "start": "970760",
    "end": "979910"
  },
  {
    "text": "if that worked we should just see it with get pods and yeah so we can see we've got the regular payments pod and",
    "start": "979910",
    "end": "986450"
  },
  {
    "text": "our new mirror fake payments pod and they're both in the running state so",
    "start": "986450",
    "end": "995240"
  },
  {
    "text": "next we're going to get set up to mess with a replica set so a big giant long pod name here and we're gonna grab the",
    "start": "995240",
    "end": "1003370"
  },
  {
    "text": "JSON representation of the the mirror pod out of the API server so again mess with it and the first thing we're going",
    "start": "1003370",
    "end": "1010750"
  },
  {
    "text": "to do is make our pod the the og payments pod so this one's been running",
    "start": "1010750",
    "end": "1017560"
  },
  {
    "text": "since 2018 API server please believe us so we set that up and here we're",
    "start": "1017560",
    "end": "1028870"
  },
  {
    "text": "actually just going to interact with the API directly what we're doing can't actually be easily done with Q control",
    "start": "1028870",
    "end": "1034660"
  },
  {
    "text": "so we're setting curl up to use the cubelets client suit and just grabbing",
    "start": "1034660",
    "end": "1040178"
  },
  {
    "text": "the api server's IP address and then we're just going to patch that mirror",
    "start": "1040179",
    "end": "1045339"
  },
  {
    "text": "pod object with that new ready status time so this tells the API server I've been ready since 2018 I've been doing",
    "start": "1045339",
    "end": "1052540"
  },
  {
    "text": "this a long time and we're going in through the status sub resource of the pod",
    "start": "1052540",
    "end": "1058890"
  },
  {
    "text": "so the next step that worked the next step is we need to be in the replica set",
    "start": "1060250",
    "end": "1066170"
  },
  {
    "text": "so the way we tell a replica said to adopt this part is just add this label so hey replica set payments processor",
    "start": "1066170",
    "end": "1072740"
  },
  {
    "text": "that's your name we'd like this pod to be part of your responsibility and so as soon as we do",
    "start": "1072740",
    "end": "1079220"
  },
  {
    "text": "that it's gonna be looking at two pods and making a decision about which one to",
    "start": "1079220",
    "end": "1084500"
  },
  {
    "text": "kill so if that worked",
    "start": "1084500",
    "end": "1092420"
  },
  {
    "text": "which should just be our mirror pod running and the real payments pod should be gone so yeah you can see we only got",
    "start": "1092420",
    "end": "1098960"
  },
  {
    "text": "one it's just us there's a mirror pod so now we've effectively dust the the",
    "start": "1098960",
    "end": "1105980"
  },
  {
    "text": "legitimate payments pod and just pause this for a second and so it's not",
    "start": "1105980",
    "end": "1111260"
  },
  {
    "text": "running anymore it's a it's down and the the mirror pod is the only thing running",
    "start": "1111260",
    "end": "1116570"
  },
  {
    "text": "so the final step steps in the attack here - now that we're the only payments",
    "start": "1116570",
    "end": "1122030"
  },
  {
    "text": "part if we delete ourselves there's gonna be zero payment spots left and so the replica sets gonna say well I need one and this is a you know erase then",
    "start": "1122030",
    "end": "1130220"
  },
  {
    "text": "about like which payments node is gonna get scheduled on is it it could get scheduled on the legitimate payments",
    "start": "1130220",
    "end": "1135770"
  },
  {
    "text": "node or it could get scheduled on us so if we delete it and then we check kind",
    "start": "1135770",
    "end": "1143780"
  },
  {
    "text": "of like where it gets scheduled like as we were kind of running this demo and getting it ready I'd say probably like",
    "start": "1143780",
    "end": "1149090"
  },
  {
    "text": "better than half the time it landed on us some of other times it landed on the",
    "start": "1149090",
    "end": "1154280"
  },
  {
    "text": "actual payments node and you can see here that it's actually landed on our our demo node but if that hadn't",
    "start": "1154280",
    "end": "1161810"
  },
  {
    "text": "happened we could just do it again and we could just scripted until it did",
    "start": "1161810",
    "end": "1166810"
  },
  {
    "text": "so everything works then we should be able to get access to the secret",
    "start": "1167260",
    "end": "1174730"
  },
  {
    "text": "okay so quick recap we modified the node to make it friendly to payments the one the",
    "start": "1181820",
    "end": "1188100"
  },
  {
    "text": "one that we controlled we mess with replicas said to make it kill the real payments got it scheduled on us and then",
    "start": "1188100",
    "end": "1193590"
  },
  {
    "text": "we could beat the node authorize a check to give that secret so like sound scary",
    "start": "1193590",
    "end": "1201590"
  },
  {
    "text": "so we've actually been working on in sigilyph kind of protecting against",
    "start": "1201590",
    "end": "1207150"
  },
  {
    "text": "these type of attacks so as in Tim section of the demo I mentioned that you",
    "start": "1207150",
    "end": "1212730"
  },
  {
    "text": "can't just modify the he couldn't make a",
    "start": "1212730",
    "end": "1218190"
  },
  {
    "text": "modification directly he had to delete the node and then recreate it and that protection was brought in and 111 and this attack that we just demonstrated",
    "start": "1218190",
    "end": "1225360"
  },
  {
    "text": "actually only works on 112 because we fix the delete the node and recreate things so like if you thought well",
    "start": "1225360",
    "end": "1230640"
  },
  {
    "text": "that's dumb yeah we know we fixed it so the nodal authorities that doesn't allow",
    "start": "1230640",
    "end": "1236400"
  },
  {
    "text": "you to do that anymore but the point of this talk is not hey upgrade to 113 everything's fine it's",
    "start": "1236400",
    "end": "1242310"
  },
  {
    "text": "actually that this is just one of over a number of paths if you're trying to rely",
    "start": "1242310",
    "end": "1247650"
  },
  {
    "text": "on the node isolation to kind of have this separation you're kind of gonna have a bad time and so it's like I'm",
    "start": "1247650",
    "end": "1254040"
  },
  {
    "text": "gonna head it over to Tim to talk more about sort of how we can think about not",
    "start": "1254040",
    "end": "1259410"
  },
  {
    "text": "pod versus node separation and what the alternatives are thanks yeah so let's",
    "start": "1259410",
    "end": "1269929"
  },
  {
    "text": "let's generalize a bit so yeah we just saw this attack using the cubelets",
    "start": "1272180",
    "end": "1278640"
  },
  {
    "text": "credentials to talk to the API server and we saw how the new authorizer can",
    "start": "1278640",
    "end": "1284940"
  },
  {
    "text": "prevent this type of an attack but there's a lot more going on on the node than just running the cubelet you've",
    "start": "1284940",
    "end": "1292710"
  },
  {
    "text": "probably got some other demon sets running on the node like the node problem detector and those demon sets don't actually go through the nude",
    "start": "1292710",
    "end": "1298740"
  },
  {
    "text": "authorizer you've got some external networking coming in through the node",
    "start": "1298740",
    "end": "1304380"
  },
  {
    "text": "and we actually had to cut a second demo for time that showed how to man in the",
    "start": "1304380",
    "end": "1309450"
  },
  {
    "text": "middle and intercept some traffic bound for another node you've got other",
    "start": "1309450",
    "end": "1315179"
  },
  {
    "text": "nodes in the cluster doing all sorts of things you can't rely on network policy necessarily to protect those API",
    "start": "1315179",
    "end": "1321659"
  },
  {
    "text": "endpoints because we're outside of a pod we're outside the limits of network policy you've got some external services",
    "start": "1321659",
    "end": "1329210"
  },
  {
    "text": "like a credential provider providing bootstrap credentials to the node what can an attacker do with that you've got",
    "start": "1329210",
    "end": "1336090"
  },
  {
    "text": "some sort of metrics pipeline what happens if your attacker reports incorrect metrics what can they do",
    "start": "1336090",
    "end": "1341730"
  },
  {
    "text": "logging pipeline you can no longer trust your audit logs from the node and",
    "start": "1341730",
    "end": "1346860"
  },
  {
    "text": "finally there's probably some remote storage and what can an attacker do with access to that remote storage so the",
    "start": "1346860",
    "end": "1354000"
  },
  {
    "text": "point of this big complicated picture isn't to actually understand everything that's going on here the point is that",
    "start": "1354000",
    "end": "1359789"
  },
  {
    "text": "it's complicated and also the attacker on the node now has access to the union",
    "start": "1359789",
    "end": "1366659"
  },
  {
    "text": "of all of these different things going on so even if we're running our node in a leased privileges model like those are",
    "start": "1366659",
    "end": "1373710"
  },
  {
    "text": "still a lot of privileges ending comp if we compare that to a pod we see this",
    "start": "1373710",
    "end": "1380010"
  },
  {
    "text": "theme kind of again and again we're in authorization we have all of the permissions on the node on the node side",
    "start": "1380010",
    "end": "1386010"
  },
  {
    "text": "whereas in the pod case we can scoop that down a lot more to just the containers running in that pod similarly",
    "start": "1386010",
    "end": "1393419"
  },
  {
    "text": "with network access can you similarly with network access we have",
    "start": "1393419",
    "end": "1401190"
  },
  {
    "text": "the union of everything on the node we can make that a lot more specialized on the pod we didn't touch on this too much",
    "start": "1401190",
    "end": "1407549"
  },
  {
    "text": "but in the monitoring case your monitoring is probably running on the node you're monitoring is probably",
    "start": "1407549",
    "end": "1416429"
  },
  {
    "text": "running on the node and so if your nude is compromised you can't trust your monitoring in the pod case your",
    "start": "1416429",
    "end": "1421710"
  },
  {
    "text": "monitoring is still running on the node but now your attacker is contained in the pod and we can rely on those metrics",
    "start": "1421710",
    "end": "1427470"
  },
  {
    "text": "a little more one point for node isolation is that you have stronger",
    "start": "1427470",
    "end": "1432750"
  },
  {
    "text": "resource isolation we have some isolation through C groups on the pod but we don't hit everything and so",
    "start": "1432750",
    "end": "1438750"
  },
  {
    "text": "you're still going to be subject to noisy neighbors in the pod case but we are still left with this problem",
    "start": "1438750",
    "end": "1445530"
  },
  {
    "text": "a container escape and as Greg kind of mentioned earlier a lot of container",
    "start": "1445530",
    "end": "1451590"
  },
  {
    "text": "escapes happen through the fact that there's a shared kernel for every container on the nude and if you have a",
    "start": "1451590",
    "end": "1457740"
  },
  {
    "text": "vulnerability in that kernel that can lead to container escape so the idea of",
    "start": "1457740",
    "end": "1463500"
  },
  {
    "text": "sandbox is is let's run a separate kernel in every pod and then if you have",
    "start": "1463500",
    "end": "1468870"
  },
  {
    "text": "a vulnerability in that separate kernel the attacker can escape out of that container but they're still stuck in",
    "start": "1468870",
    "end": "1474600"
  },
  {
    "text": "this pod sandbox and they need to chain it together with a second vulnerability to actually get out of there",
    "start": "1474600",
    "end": "1480870"
  },
  {
    "text": "so in practice the two main implementations used in kubernetes today our G visor which runs a sort of user",
    "start": "1480870",
    "end": "1488730"
  },
  {
    "text": "space emulated kernel and kata containers which is a lightweight per",
    "start": "1488730",
    "end": "1493860"
  },
  {
    "text": "pod VM and we abstract this away with runtime class that represents the",
    "start": "1493860",
    "end": "1499680"
  },
  {
    "text": "underlying runtime and then you can just reference the runtime class from your",
    "start": "1499680",
    "end": "1505140"
  },
  {
    "text": "pod to use that and there's a lot of links in here if you want to learn more about that",
    "start": "1505140",
    "end": "1512149"
  },
  {
    "text": "so node isolation seems like kind of scary but okay all right node isolation",
    "start": "1512610",
    "end": "1523050"
  },
  {
    "text": "might seem kind of scary at this point but remember those like starting",
    "start": "1523050",
    "end": "1528150"
  },
  {
    "text": "assumptions that we sort of glossed over at the very beginning before the attacker can get to escaping your node",
    "start": "1528150",
    "end": "1534840"
  },
  {
    "text": "they first need to compromise your application get remote code execution",
    "start": "1534840",
    "end": "1540020"
  },
  {
    "text": "then escape the container escalate to root and then they can actually attack",
    "start": "1540020",
    "end": "1545100"
  },
  {
    "text": "the cluster from the node so can we make those first two steps harder for the",
    "start": "1545100",
    "end": "1551100"
  },
  {
    "text": "attacker on the application side this is really going to depend on the specific application but some general pieces of",
    "start": "1551100",
    "end": "1559080"
  },
  {
    "text": "advice are to stay on top of patches if you choose a minimal base image then staying on top of patches is a little",
    "start": "1559080",
    "end": "1565320"
  },
  {
    "text": "easier and then apply application specific hardening like using a secure",
    "start": "1565320",
    "end": "1571140"
  },
  {
    "text": "web framework on the container side running as non-root should really be the",
    "start": "1571140",
    "end": "1576330"
  },
  {
    "text": "first thing that you try and do in addition to that resource limits can",
    "start": "1576330",
    "end": "1581510"
  },
  {
    "text": "help prevent some local denial of service attacks lease privilege authorization is always a good good",
    "start": "1581510",
    "end": "1588320"
  },
  {
    "text": "choice and restrict the network with something like Network policy or sto and",
    "start": "1588320",
    "end": "1593980"
  },
  {
    "text": "if you still want more hardening beyond that we recommend sandboxes especially",
    "start": "1593980",
    "end": "1600140"
  },
  {
    "text": "if you don't trust your application if you don't have that first boundary of the application well this can add a",
    "start": "1600140",
    "end": "1606860"
  },
  {
    "text": "second layer at the pod itself so in summary nodes are really complicated",
    "start": "1606860",
    "end": "1613610"
  },
  {
    "text": "they do a lot of things and we know about attacks in them and so the nodes",
    "start": "1613610",
    "end": "1619490"
  },
  {
    "text": "shouldn't be your only line of defense we recommend pod isolation before that",
    "start": "1619490",
    "end": "1627580"
  },
  {
    "text": "that's what we have thank you so we have",
    "start": "1627820",
    "end": "1643340"
  },
  {
    "text": "just a few minutes left for Q&A so if you have a question if you have a",
    "start": "1643340",
    "end": "1649760"
  },
  {
    "text": "question you raise your hand and I will bring you the mic",
    "start": "1649760",
    "end": "1654070"
  },
  {
    "text": "how about making containers immutable are just read-only file system that can",
    "start": "1658550",
    "end": "1664730"
  },
  {
    "text": "be alleviated any of these risk by that yeah so there's definitely a lot more",
    "start": "1664730",
    "end": "1671350"
  },
  {
    "text": "container hardening that you can do and there's a lot of guides out there for that we we wanted to just keep it simple",
    "start": "1671350",
    "end": "1679340"
  },
  {
    "text": "here because partly for time and also because we think that running as",
    "start": "1679340",
    "end": "1684980"
  },
  {
    "text": "non-root is kind of the the strongest recommendation there and sometimes if you suggest too many really hard to",
    "start": "1684980",
    "end": "1691970"
  },
  {
    "text": "implement controls then the most important ones can get lost in that but but yeah read-only and set comp and",
    "start": "1691970",
    "end": "1700640"
  },
  {
    "text": "there's lots of other things we can advise on to you yeah I think I just sort of that's gonna help you so it's",
    "start": "1700640",
    "end": "1707750"
  },
  {
    "text": "gonna make the attackers job harder when I land in the container when they get that execution but it doesn't really",
    "start": "1707750",
    "end": "1713630"
  },
  {
    "text": "help you when they're sort of looking to propagate from there so if they have like beaten that in some way like that's",
    "start": "1713630",
    "end": "1719270"
  },
  {
    "text": "a good thing to do but it it's also sort of not enough for the isolation piece of thing can you talk a little bit about",
    "start": "1719270",
    "end": "1727000"
  },
  {
    "text": "when you advise for sand boxes are appropriate for use versus whether or",
    "start": "1727000",
    "end": "1732290"
  },
  {
    "text": "not you know ubiquitous deployment of those or for certain use cases or",
    "start": "1732290",
    "end": "1737929"
  },
  {
    "text": "security profiles yeah so it's it's really gonna depend on your threat model",
    "start": "1737929",
    "end": "1745330"
  },
  {
    "text": "probably an unsatisfying answer but it it's kind of a cost trade-off sandbox is",
    "start": "1745330",
    "end": "1754640"
  },
  {
    "text": "do add a little bit of overhead some memory overhead in a performance penalty there's some kind of specialized cases",
    "start": "1754640",
    "end": "1762760"
  },
  {
    "text": "where sand boxes will be not really viable like if you need specialized",
    "start": "1762760",
    "end": "1770120"
  },
  {
    "text": "direct device access for instance but in the other cases it's sort of weighing",
    "start": "1770120",
    "end": "1775540"
  },
  {
    "text": "the the security benefits versus the cost of that overhead and one thing I'll",
    "start": "1775540",
    "end": "1784700"
  },
  {
    "text": "add to that is as I mentioned earlier if you don't trust the application if you don't have that",
    "start": "1784700",
    "end": "1791050"
  },
  {
    "text": "- boundaries one up the application one at the container if it's just the container then we really strongly",
    "start": "1791050",
    "end": "1796420"
  },
  {
    "text": "recommend sandboxing what do you hear",
    "start": "1796420",
    "end": "1808390"
  },
  {
    "text": "about the discussion around namespace remapping I know it's something we can do in containers but it's not something",
    "start": "1808390",
    "end": "1813730"
  },
  {
    "text": "that's really supported through kubernetes at least as far as I've seen it I think sandbox is kind of the way",
    "start": "1813730",
    "end": "1819370"
  },
  {
    "text": "people go but do you mean user namespace yeah user namespace remapping yeah so",
    "start": "1819370",
    "end": "1824470"
  },
  {
    "text": "that's another great way of hardening the container in particular it makes",
    "start": "1824470",
    "end": "1829630"
  },
  {
    "text": "that step of running as non-root a lot easier if you're already running as non-root it doesn't help a whole lot we",
    "start": "1829630",
    "end": "1837640"
  },
  {
    "text": "are there's a proposal out for remapping at the node level so all containers will",
    "start": "1837640",
    "end": "1845620"
  },
  {
    "text": "be running with the same remapping and in particular again it just like makes you run as non-root it's hard because",
    "start": "1845620",
    "end": "1853030"
  },
  {
    "text": "kubernetes has persistent volumes and so now you need to like maintain that remapping across volumes across nodes so",
    "start": "1853030",
    "end": "1860710"
  },
  {
    "text": "that's why we haven't done it yet yeah",
    "start": "1860710",
    "end": "1866470"
  },
  {
    "text": "how did you get the replicas label was that like allowed to get for the payment",
    "start": "1866470",
    "end": "1873600"
  },
  {
    "text": "or did you just guess it so the cubelet has permission to list all pods in the",
    "start": "1873600",
    "end": "1881140"
  },
  {
    "text": "cluster so you could list so you could look at everything that's running and",
    "start": "1881140",
    "end": "1886450"
  },
  {
    "text": "you say payments that sounds interesting what labels does it have on that and then you could use all of the labels",
    "start": "1886450",
    "end": "1893440"
  },
  {
    "text": "that are there and probably yes you can",
    "start": "1893440",
    "end": "1899800"
  },
  {
    "text": "list pods that are not running on the same node we've talked about preventing that if it was prevented you could also",
    "start": "1899800",
    "end": "1906010"
  },
  {
    "text": "use the read-only port you could look at metrics yeah any other questions we have",
    "start": "1906010",
    "end": "1914980"
  },
  {
    "text": "time",
    "start": "1914980",
    "end": "1917250"
  },
  {
    "text": "do you expect poet security policies directed by debate it sorry anyone",
    "start": "1920630",
    "end": "1926880"
  },
  {
    "text": "security policy to come out of beta come to see goth on Thursday yeah well we'll",
    "start": "1926880",
    "end": "1934500"
  },
  {
    "text": "discuss that in a lot more detail there's problems with it that we're trying to figure out how to address",
    "start": "1934500",
    "end": "1941060"
  },
  {
    "text": "there are some companies that are now offering to run containers and security enclaves that are provided by SGX",
    "start": "1947230",
    "end": "1953600"
  },
  {
    "text": "extensions obviously very intense or",
    "start": "1953600",
    "end": "1963140"
  },
  {
    "text": "they'll run in protected memory on a trusted platform I think the short",
    "start": "1963140",
    "end": "1970370"
  },
  {
    "text": "answer is no I think we've heard some discussions about it I haven't heard of anyone doing that for real maybe they",
    "start": "1970370",
    "end": "1977120"
  },
  {
    "text": "exist okay one thing to add is I think that",
    "start": "1977120",
    "end": "1982250"
  },
  {
    "text": "security enclaves kind of solves a slightly different addresses a slightly",
    "start": "1982250",
    "end": "1988610"
  },
  {
    "text": "different threat model than what container isolation does and that is our",
    "start": "1988610",
    "end": "1994730"
  },
  {
    "text": "time so if you have any other questions that you didn't get answered please talk to our lovely speakers out in the",
    "start": "1994730",
    "end": "2000550"
  },
  {
    "text": "hallway and thank you very much for coming make sure to fill out your feedback form [Applause]",
    "start": "2000550",
    "end": "2008859"
  }
]