[
  {
    "text": "so okay anika um okay i hope the network permits because",
    "start": "1680",
    "end": "7120"
  },
  {
    "text": "i've been struggling with since i think it's working now",
    "start": "7120",
    "end": "13360"
  },
  {
    "text": "yes so far thank god for that yes um our next section is going to be",
    "start": "13360",
    "end": "19359"
  },
  {
    "text": "focused on web assembly web assembly based ai as a service",
    "start": "19359",
    "end": "25760"
  },
  {
    "text": "um with kubernetes and this will be taken by shiva lamba and rashid dagli",
    "start": "25760",
    "end": "34399"
  },
  {
    "text": "so um rasheed dagli is a high school student from mumbai india and loves working on",
    "start": "34399",
    "end": "42000"
  },
  {
    "text": "machine learning especially computer vision and kubernetes and you can always",
    "start": "42000",
    "end": "47520"
  },
  {
    "text": "catch um richards working with android he is an active contributor of multiple",
    "start": "47520",
    "end": "54320"
  },
  {
    "text": "open source projects like tensorflow cube flow and kubernetes",
    "start": "54320",
    "end": "60399"
  },
  {
    "text": "um while shiva lamba is a software developer specializing in devops machine",
    "start": "60399",
    "end": "66880"
  },
  {
    "text": "learning and full stack development also an open source entities that has been a",
    "start": "66880",
    "end": "72159"
  },
  {
    "text": "part of various programs such as google code and um google summer of code as a",
    "start": "72159",
    "end": "78240"
  },
  {
    "text": "mentor and it's currently um in the mlh",
    "start": "78240",
    "end": "84400"
  },
  {
    "text": "fellowship and um over to you both",
    "start": "84400",
    "end": "89680"
  },
  {
    "text": "welcome to our talk with my friend and the topic for our talk is web",
    "start": "91439",
    "end": "96799"
  },
  {
    "text": "assembly based ai as a service with communities a very quick introduction about myself i am shivaya a developer",
    "start": "96799",
    "end": "102000"
  },
  {
    "text": "advocate at milisaux and i'm also a contributor at least 5 which is part of the cloud native computing foundation",
    "start": "102000",
    "end": "109119"
  },
  {
    "text": "hi i'm rishit i'm a high school student and i'm an incoming student at the university of toronto i contribute to",
    "start": "109680",
    "end": "116079"
  },
  {
    "text": "maintain and create multiple open source projects mainly in the machine learning ecosystem",
    "start": "116079",
    "end": "121920"
  },
  {
    "text": "well talking about machine learning the first thing i'd like to touch upon is why to choose rust over python in",
    "start": "121920",
    "end": "128560"
  },
  {
    "text": "machine learning now of course we know that worldwide python is by far the most popular language when it comes to",
    "start": "128560",
    "end": "134160"
  },
  {
    "text": "creating uh doing machine learning inference uh but there are a few reasons why you should actually choose rust over",
    "start": "134160",
    "end": "140480"
  },
  {
    "text": "python one of the biggest ones is in terms of performance now rust uh can be actually directly compiled",
    "start": "140480",
    "end": "146560"
  },
  {
    "text": "into machine code and there's no need for let's say a virtual machine or an interpreter uh that is actually usually",
    "start": "146560",
    "end": "152239"
  },
  {
    "text": "the case with uh python and one of the other really big advantages is in terms of the thread and memory",
    "start": "152239",
    "end": "157760"
  },
  {
    "text": "management now uh you must be very aware of the uh python global integrator lock",
    "start": "157760",
    "end": "163040"
  },
  {
    "text": "issue that is uh that still sort of uh plagues uh python and while russ doesn't",
    "start": "163040",
    "end": "168480"
  },
  {
    "text": "have let's say the necessary garbage collection like in python but the compiler and rust still enforces some",
    "start": "168480",
    "end": "174080"
  },
  {
    "text": "invalid memory reference leaks as well but these uh advantages are much better in comparison to python and as a matter",
    "start": "174080",
    "end": "181200"
  },
  {
    "text": "of fact according to study by ibm which highlights that how rust and web assembly can actually gain 12 to 15",
    "start": "181200",
    "end": "188000"
  },
  {
    "text": "times performance in comparison to nodejs and more than 25",
    "start": "188000",
    "end": "193360"
  },
  {
    "text": "times increase in performance as compared to python so that just goes on to show why you can",
    "start": "193360",
    "end": "198879"
  },
  {
    "text": "actually choose uh rust over python uh especially machine learning use cases and that sort of",
    "start": "198879",
    "end": "204640"
  },
  {
    "text": "brings us to web assembly how website actually comes into picture well represents a compiled target that essentially allows you to uh run these",
    "start": "204640",
    "end": "212080"
  },
  {
    "text": "executables at native speed and also in very small containers and these are",
    "start": "212080",
    "end": "217680"
  },
  {
    "text": "portable that means that they can actually be run anywhere so you just have to use let's say some some of your",
    "start": "217680",
    "end": "225120"
  },
  {
    "text": "highly competitional languages such as c plus plus or rust and uh have websimply as a compilation target and these are",
    "start": "225120",
    "end": "231519"
  },
  {
    "text": "portable in nature that means you just have to generate them once and these can be executed anywhere uh without having",
    "start": "231519",
    "end": "237599"
  },
  {
    "text": "to re-deploy them again and again and also you can use some scripting languages like c",
    "start": "237599",
    "end": "243120"
  },
  {
    "text": "like javascript or python also to compile them into uh and web simply executed and the biggest factor also",
    "start": "243120",
    "end": "249280"
  },
  {
    "text": "being that since uh website is a binary instruction format that allows you for uh near native decoding that means it is",
    "start": "249280",
    "end": "256320"
  },
  {
    "text": "much more faster as compared to other comparative runtimes and this also like you know then",
    "start": "256320",
    "end": "262000"
  },
  {
    "text": "specifically means that when it comes to machine learning uh web assembly is a really great way to do machine learning",
    "start": "262000",
    "end": "267919"
  },
  {
    "text": "inference as well and uh coming to how you can actually use web assembly within the ecosystem for cloud native so",
    "start": "267919",
    "end": "275600"
  },
  {
    "text": "when web assembly is expanding within uh cloud native as well especially because cncf has a lot of different uh sandbox",
    "start": "275600",
    "end": "282479"
  },
  {
    "text": "projects today intubated such as the bozomed awesome cloud uh speaking specifically about awesome edge uh it is",
    "start": "282479",
    "end": "288240"
  },
  {
    "text": "a light runtime uh website runtime uh mainly used for cloud native and also",
    "start": "288240",
    "end": "293360"
  },
  {
    "text": "edge-based applications and vasomets truly helps you bring webassembly to the edge because wasmed allows you to enable",
    "start": "293360",
    "end": "300880"
  },
  {
    "text": "serverless functions which we'll be talking about in a bit that allow you to run web assembly uh use cases on edge",
    "start": "300880",
    "end": "306639"
  },
  {
    "text": "devices and according to mortgage captain from the university of tillprough uh tillbock uh actually",
    "start": "306639",
    "end": "312160"
  },
  {
    "text": "published an article where he compares the comparison of running web assembly um",
    "start": "312160",
    "end": "318160"
  },
  {
    "text": "and actually doing machine learning inference as compared to docker and uh by actually comparing the inference time",
    "start": "318160",
    "end": "324320"
  },
  {
    "text": "that i actually took between both website and docker there was uh an improvement of more than five to ten times uh for the machining influence in",
    "start": "324320",
    "end": "331360"
  },
  {
    "text": "terms of performance while also the machine learning containers being smaller as compared to docker",
    "start": "331360",
    "end": "336840"
  },
  {
    "text": "containers now one of the reasons why we should actually use web assembly also",
    "start": "336840",
    "end": "342240"
  },
  {
    "text": "for serverless so first of all you must be aware that today's service computing is uh like you know gaining a lot of",
    "start": "342240",
    "end": "348080"
  },
  {
    "text": "popularity especially with a lot of different tools such as edge functions being provided by all major cloud",
    "start": "348080",
    "end": "353600"
  },
  {
    "text": "providers like uh aws lambda or even like you know uh netflix or versailles providing versus uh virtual reversal uh",
    "start": "353600",
    "end": "360400"
  },
  {
    "text": "functions and these functions allow uh a completely new dimension to uh serverless computing and there's some",
    "start": "360400",
    "end": "367440"
  },
  {
    "text": "very great reasons why you should actually use webassembly uh as well for",
    "start": "367440",
    "end": "372560"
  },
  {
    "text": "uh these serverless functions so first of all uh you can actually uh write highly performance functions in",
    "start": "372560",
    "end": "378960"
  },
  {
    "text": "languages such as cia and rust and these can be directly compiled into webassembly and these web assembly",
    "start": "378960",
    "end": "384639"
  },
  {
    "text": "functions are actually much more quicker as compared to javascript or python which are commonly used as serverless",
    "start": "384639",
    "end": "390160"
  },
  {
    "text": "functions for example in aws lambda there are some other benefits as well when using webassembly one of the",
    "start": "390160",
    "end": "396000"
  },
  {
    "text": "biggest ones being that uh as we mentioned that the bytecode for websimply is actually portable so that",
    "start": "396000",
    "end": "401280"
  },
  {
    "text": "means that if you are actually using webassembly based uh function or like let's function as service uh you just",
    "start": "401280",
    "end": "407039"
  },
  {
    "text": "have to uh deploy it once and you can actually then go ahead and use these serverless functions anywhere and then",
    "start": "407039",
    "end": "413599"
  },
  {
    "text": "actually run them anywhere in any kind of a cloud environment without having to redeploy them again and again also at",
    "start": "413599",
    "end": "419919"
  },
  {
    "text": "the same time the deployment as we mentioned uh deployment of web assembly applications is very simple uh there are",
    "start": "419919",
    "end": "426960"
  },
  {
    "text": "a lot less platform dependencies that are required to actually uh be used alongside these web assembly",
    "start": "426960",
    "end": "432319"
  },
  {
    "text": "applications as compared to let's say uh javascript or python based service functions so that makes it very easy to",
    "start": "432319",
    "end": "438319"
  },
  {
    "text": "actually just work with these web assembly based applications and with wasmedge uh we also expand the",
    "start": "438319",
    "end": "445039"
  },
  {
    "text": "webassembly security model so you must all be aware that webassembly uh security is very well known as compared",
    "start": "445039",
    "end": "451840"
  },
  {
    "text": "to other containers because web assembly itself cannot really do anything uh within the sandbox environment in case",
    "start": "451840",
    "end": "457919"
  },
  {
    "text": "you want it to interact with let's say the file system you need to use aussie and this makes it a very safe environment so",
    "start": "457919",
    "end": "464800"
  },
  {
    "text": "you can basically use that security model uh as well um uh alongside the",
    "start": "464800",
    "end": "470319"
  },
  {
    "text": "service functions so for example if you were to do a inference uh functionality service that",
    "start": "470319",
    "end": "476240"
  },
  {
    "text": "can be first of all very secure and also run at full native speed because of the fact that we are getting that uh native",
    "start": "476240",
    "end": "483039"
  },
  {
    "text": "performance with the help of a web assembly executed so those are some of the reasons why website is preferred uh especially for",
    "start": "483039",
    "end": "489360"
  },
  {
    "text": "functionality service and uh this particular site sort of showcases the benchmark that we ran uh",
    "start": "489360",
    "end": "495680"
  },
  {
    "text": "for one of the most popular machine learning models which is the mobile net we do we basically run a benchmark for",
    "start": "495680",
    "end": "501599"
  },
  {
    "text": "doing performance comparison between uh the various runtimes uh including boss",
    "start": "501599",
    "end": "506879"
  },
  {
    "text": "match uh tensorflow lite uh was met with ahead of time compilation uh running this model when python and intensive",
    "start": "506879",
    "end": "513440"
  },
  {
    "text": "case and as you can see that uh the least amount of time that it took for instance was with wasm x with the ahead",
    "start": "513440",
    "end": "519360"
  },
  {
    "text": "of time compilation as compared to some of the other ones as well uh all these uh records were uh in infants were done in",
    "start": "519360",
    "end": "526560"
  },
  {
    "text": "milliseconds so you can see that the fastest one is was matched and uh the text site that we're going to be using",
    "start": "526560",
    "end": "531839"
  },
  {
    "text": "for our demo includes uh rust web assembly was met what's up since we've been showing how you can actually deploy",
    "start": "531839",
    "end": "537360"
  },
  {
    "text": "a service function onto versailles and then also with communities so now over to the demo uh we'll meet you after them",
    "start": "537360",
    "end": "546279"
  },
  {
    "text": "let's just see how to run this locally uh in versamage and uh so very simply as many of you might know started out as a",
    "start": "560240",
    "end": "566320"
  },
  {
    "text": "javascript alternative for browsers and run high high performance uh applications and high performance computations like machine learning",
    "start": "566320",
    "end": "571839"
  },
  {
    "text": "influence that we'll be seeing today uh in languages like c cluster safely in the browser so we have assembly then",
    "start": "571839",
    "end": "577279"
  },
  {
    "text": "side by side with javascript and uh we'll actually need uh so to run javascript we'll actually need an interpreter so uh so a suggested",
    "start": "577279",
    "end": "584160"
  },
  {
    "text": "interpreter and uh something i've tried quite often is the quiz that allows you to uh the widgets",
    "start": "584160",
    "end": "590640"
  },
  {
    "text": "integrator that allows you to easily use uh javascript applications and is and also has really brilliant support for tensorflow and tensorflow like modules",
    "start": "590640",
    "end": "597440"
  },
  {
    "text": "so uh so before we like uh taking a look at this quick js uh interpreter uh you might think that uh it could be slower",
    "start": "597440",
    "end": "604160"
  },
  {
    "text": "than v8 and uh i mean it is lower than v8 uh because of quickjs not having uh just in time compilation uh but uh if",
    "start": "604160",
    "end": "610880"
  },
  {
    "text": "you if you think about it uh if you think about it uh quick gsm is not only a lot smaller than v8 it's literally uh",
    "start": "610880",
    "end": "618079"
  },
  {
    "text": "140 at the size uh if that's right yeah it's 148 the size uh then and the second part is uh you only want to uh you only",
    "start": "618079",
    "end": "625279"
  },
  {
    "text": "want to run a lot of your uh you want to run you only want to run some of your code in javascript and probably called the",
    "start": "625279",
    "end": "631680"
  },
  {
    "text": "computationally intensive tasks like the machine learning influence for one uh or image processing stuff uh that you are",
    "start": "631680",
    "end": "637920"
  },
  {
    "text": "doing uh we'll be calling the ross function for that uh so so you can essentially have js programs",
    "start": "637920",
    "end": "643760"
  },
  {
    "text": "with extension apis and rust cec plus plus and uh wrestling with embedded javascript so that is very much possible",
    "start": "643760",
    "end": "649120"
  },
  {
    "text": "uh which makes mix.js a really nice choice for us uh so uh so first let's take a look at building widgets uh which",
    "start": "649120",
    "end": "655200"
  },
  {
    "text": "is uh which you can do quite easily let's go to version hqs and now we will try to uh",
    "start": "655200",
    "end": "661519"
  },
  {
    "text": "basically js interpreter so what i want to do is cargo build minus minus target",
    "start": "661519",
    "end": "667279"
  },
  {
    "text": "wasn't 32 minus 1z so you'll also have to uh add this target earlier i've actually installed the version 52 minus",
    "start": "667279",
    "end": "673519"
  },
  {
    "text": "1 0 d1 uh but if you don't uh you will need to install this target over an actual uh release and here i'll just add",
    "start": "673519",
    "end": "681120"
  },
  {
    "text": "that i also want tensorflow specific features because uh we'll be uh the tensorflow extensions because we'll be",
    "start": "681120",
    "end": "686560"
  },
  {
    "text": "turning a tensorflow",
    "start": "686560",
    "end": "689279"
  },
  {
    "text": "so i have actually built this so it didn't take uh quite a lot of time but what i do want to show you is uh let's",
    "start": "692000",
    "end": "697839"
  },
  {
    "text": "just go to target version 32 minus oz and let's so what you can see is he was image",
    "start": "697839",
    "end": "703120"
  },
  {
    "text": "underscore which is not version so this is the javascript interpreter that we have and uh so let's now go to",
    "start": "703120",
    "end": "709519"
  },
  {
    "text": "uh let's now go to uh our javascript example of our mobile network so we'll go to js",
    "start": "709519",
    "end": "716639"
  },
  {
    "text": "underscore mobile networks and uh so first off we'll uh start so so now we can start",
    "start": "716639",
    "end": "723760"
  },
  {
    "text": "using the uh wasn't hq js that was an interpreter which we just built and we'll use the voicemage minus tensorflow",
    "start": "723760",
    "end": "730240"
  },
  {
    "text": "minus light utility that is built with tensorflow and tensorflow lite extensions uh and it makes uh it really",
    "start": "730240",
    "end": "736000"
  },
  {
    "text": "easy to work with sensitive like models so uh let's do that so what we'll say is",
    "start": "736000",
    "end": "742160"
  },
  {
    "text": "tensorflow minus light and now we want to mount the current directory so",
    "start": "742160",
    "end": "748000"
  },
  {
    "text": "let's just want the current directory first then we want to so now we want to tell you which interpreter do we want to use so that is actually the one which we",
    "start": "748000",
    "end": "754160"
  },
  {
    "text": "just built and uh now we'll give it the uh and now we'll give it the javascript tool so let's go on to the javascript",
    "start": "754160",
    "end": "760720"
  },
  {
    "text": "which we have and uh so if you see uh this looks quite simple and uh it is because of the tensorflow",
    "start": "760720",
    "end": "767680"
  },
  {
    "text": "lite apis as well so i start out with loading my image and then doing any kind of pre-processing on",
    "start": "767680",
    "end": "773120"
  },
  {
    "text": "it so as of now right now it is resizing the image but you could have some more pre-processing steps as well i then load",
    "start": "773120",
    "end": "778880"
  },
  {
    "text": "my tensorflow lite model and i want to get the i want to make the predictions from a specific node in the model graph",
    "start": "778880",
    "end": "784880"
  },
  {
    "text": "which is what i'm doing over here and so the output which i get will essentially be a list of probabilities and uh",
    "start": "784880",
    "end": "791120"
  },
  {
    "text": "and finally and finally the index i get with the most probability so let's say i have 0",
    "start": "791120",
    "end": "798240"
  },
  {
    "text": "or 1 as the number with most probability so each of them corresponds to a particular species of wood",
    "start": "798240",
    "end": "803600"
  },
  {
    "text": "remember they remember what our tasks was so each of the corresponds to particular species of good uh and uh",
    "start": "803600",
    "end": "808880"
  },
  {
    "text": "which is why i also have a label map down here so what this label map tells it is uh",
    "start": "808880",
    "end": "814160"
  },
  {
    "text": "is uh what index corresponds to what species are called uh so as of right now let's just print",
    "start": "814160",
    "end": "819760"
  },
  {
    "text": "out our label uh and we'll print out so this is the javascript code which if you see was pretty simple and uh",
    "start": "819760",
    "end": "828360"
  },
  {
    "text": "uh sorry for the background guys and uh so now we i just saw the javascript code so let's give it the js file and uh it",
    "start": "829760",
    "end": "836079"
  },
  {
    "text": "should tell us so i also had a sample image over here that was actually himalayas cassini that is a species of word so it actually",
    "start": "836079",
    "end": "842399"
  },
  {
    "text": "did uh so that is predicted correctly so that was the javascript example and there is another little thing which i",
    "start": "842399",
    "end": "848079"
  },
  {
    "text": "wanted to talk about but i will cover that up with the last example so uh so let's see the same model and now we want",
    "start": "848079",
    "end": "853120"
  },
  {
    "text": "to see a rest example so let's go down to the rest directly so this is called rust",
    "start": "853120",
    "end": "859120"
  },
  {
    "text": "mobile knight v2 and i'll just show you this demo as well so so first of all",
    "start": "859120",
    "end": "864639"
  },
  {
    "text": "so first off we'll start off with building this and we'll do this in a similar way we did it earlier",
    "start": "864639",
    "end": "871040"
  },
  {
    "text": "so where did the command go uh yeah so uh so so let's build our uh",
    "start": "871040",
    "end": "878079"
  },
  {
    "text": "so let's first build this and i actually built it beforehand so we don't spend a lot of time on these processes easily",
    "start": "878079",
    "end": "883760"
  },
  {
    "text": "you know but if you see uh similar to uh what you might have seen earlier if you remember from the",
    "start": "883760",
    "end": "889360"
  },
  {
    "text": "javascript example we go to the version 32 minus once you target release and uh let's do analysis so what i have is the",
    "start": "889360",
    "end": "894639"
  },
  {
    "text": "classified dot version and this is uh and this is the awesome file that i can use what i can also do is i can aot",
    "start": "894639",
    "end": "899680"
  },
  {
    "text": "compile it down ahead of time compile this down to machine native code uh compile it down to a dot so file the linux shared library format and uh i can",
    "start": "899680",
    "end": "906240"
  },
  {
    "text": "run that as well so uh i also remember the benchmarks from earlier and uh so this is actually the model on which",
    "start": "906240",
    "end": "912639"
  },
  {
    "text": "those benchmarks were made and uh so at the moment uh we'll also run this with the washington h minus sensor minus",
    "start": "912639",
    "end": "918240"
  },
  {
    "text": "light utility but uh uh so but uh with wasage uh it gives you a cool utility",
    "start": "918240",
    "end": "923600"
  },
  {
    "text": "vessel xc which allows you to aod compile your code down very easily and get a dot so file which you can use uh",
    "start": "923600",
    "end": "928959"
  },
  {
    "text": "this also gives you so because the dot iso file is machine specific this also gives rise to this also gives rise to the uh universal",
    "start": "928959",
    "end": "936320"
  },
  {
    "text": "volume format that is that dot wasn't five plus a dot so at the moment let's run the",
    "start": "936320",
    "end": "941360"
  },
  {
    "text": "uh rush code so so so i'm using the same model to",
    "start": "941360",
    "end": "946639"
  },
  {
    "text": "do the inference with in rust and if you see the main.rs uh it is the code here is pretty self-explanatory as well i'm",
    "start": "946639",
    "end": "953279"
  },
  {
    "text": "using the same model uh the words model uh and uh performing the inference on it",
    "start": "953279",
    "end": "958959"
  },
  {
    "text": "in the exact same way as earlier what i also wanted to do was uh uh show you how much time it takes uh to do to do an",
    "start": "958959",
    "end": "965360"
  },
  {
    "text": "instance so uh so let's uh so first let's let's run this so using the voltage minus sensor flow minus light",
    "start": "965360",
    "end": "970639"
  },
  {
    "text": "utility like we discussed so what's image minus since the flow minus light uh now we have uh so now we give it the",
    "start": "970639",
    "end": "976079"
  },
  {
    "text": "part to uh that wasn't file that was in file so that is classified.",
    "start": "976079",
    "end": "982480"
  },
  {
    "text": "this is the same image from earlier uh the demo is essentially supposed to be the same model shown in javascript contrast which is what we do so this",
    "start": "982800",
    "end": "988880"
  },
  {
    "text": "gives us output in 187 milliseconds uh which is uh which is a bit more for a tensorflow",
    "start": "988880",
    "end": "993920"
  },
  {
    "text": "lite model particularly for a small model but a lot of the speed of weapons also comes from ahead of time",
    "start": "993920",
    "end": "1000160"
  },
  {
    "text": "compilation and if you remember the benchmarks we showed you earlier ahead of time compilation can uh cut this down by eight times to ten times uh which is",
    "start": "1000160",
    "end": "1006560"
  },
  {
    "text": "a very big increase in speed so that is something you definitely want to try out with watsonvit and you can run it in the",
    "start": "1006560",
    "end": "1012000"
  },
  {
    "text": "exact same way uh so that marks are in for demo one and uh let's now go on to our second demo uh",
    "start": "1012000",
    "end": "1018399"
  },
  {
    "text": "which is uh deploying this as a function as a service so now what we want to do is uh we have",
    "start": "1018399",
    "end": "1023920"
  },
  {
    "text": "already already seen uh we have already seen how we can uh run uh how we can run our website up",
    "start": "1023920",
    "end": "1029839"
  },
  {
    "text": "with was image so let's now try and deploy it as a function as a service so uh we'll actually be using the",
    "start": "1029839",
    "end": "1037038"
  },
  {
    "text": "similar code we'll not be using the same model you can also like put in the same model if you wanted to i will be using",
    "start": "1037039",
    "end": "1042400"
  },
  {
    "text": "the same category of overlay which is actually built in the exact same way you have the label map",
    "start": "1042400",
    "end": "1048640"
  },
  {
    "text": "you have you have the model from which you want to get the outputs from so let's go to the functions",
    "start": "1048640",
    "end": "1055840"
  },
  {
    "text": "uh here we have the raspberry so if you see this is essentially the same dress code uh just with the new model out",
    "start": "1055840",
    "end": "1061760"
  },
  {
    "text": "there and of course just like pre-processing ships in our earlier",
    "start": "1061760",
    "end": "1067120"
  },
  {
    "text": "for the earlier model we were resizing it to 224 by 224 but of course any of the pre-processing or post-processing",
    "start": "1068720",
    "end": "1073760"
  },
  {
    "text": "ships might of course differ according to uh what model you have so uh so we also have the hello.js and the p dot sh",
    "start": "1073760",
    "end": "1081600"
  },
  {
    "text": "uh the three dot is file uh and what that does for us is uh so",
    "start": "1081600",
    "end": "1086640"
  },
  {
    "text": "let's just go to the dot sh file and what that does for us is uh uh again gets all the dots of files through the",
    "start": "1086640",
    "end": "1092080"
  },
  {
    "text": "dot so files uh the linux shared library format it's ahead of time compiles it so we can run it so we can run it a lot",
    "start": "1092080",
    "end": "1098799"
  },
  {
    "text": "more easily so uh so we'll see so we'll take the mobilenet model and uh as you might expect uh we first",
    "start": "1098799",
    "end": "1105919"
  },
  {
    "text": "go to our function which we have uh which is image classification and let's",
    "start": "1105919",
    "end": "1111200"
  },
  {
    "text": "actually bring this out so we first go to image classification and now we'll build this similar to how we did earlier",
    "start": "1111200",
    "end": "1116960"
  },
  {
    "text": "so [Music] okay",
    "start": "1116960",
    "end": "1121279"
  },
  {
    "text": "which is why it just optimizes it very quickly uh so now we'll just repair this",
    "start": "1135200",
    "end": "1140720"
  },
  {
    "text": "uh because we have now have a classified. like we did earlier in the release directory so now we'll just uh",
    "start": "1140720",
    "end": "1146320"
  },
  {
    "text": "so now we'll just put it to the uh into the",
    "start": "1146320",
    "end": "1150720"
  },
  {
    "text": "and uh what you can now what you can now do is uh uh what you can now do is apply this to version uh which is the example",
    "start": "1163280",
    "end": "1169679"
  },
  {
    "text": "we will be taking a look at uh you can deploy this to visual uh server-less functions so let's just do version",
    "start": "1169679",
    "end": "1175120"
  },
  {
    "text": "deploy so you already need to uh so you already need to have uh the versions here line",
    "start": "1175120",
    "end": "1181039"
  },
  {
    "text": "sorry so i'm in the wrong directory at the moment uh what i will do is i go down to uh",
    "start": "1181039",
    "end": "1186799"
  },
  {
    "text": "the fast directory which is where now are classified that was a file list uh so",
    "start": "1186799",
    "end": "1192400"
  },
  {
    "text": "let's now do a virtual deploy this is uh actually building and then",
    "start": "1192400",
    "end": "1198960"
  },
  {
    "text": "deploying it to virtual functions and we'll have our function ready for",
    "start": "1198960",
    "end": "1204799"
  },
  {
    "text": "deployment",
    "start": "1204799",
    "end": "1207799"
  },
  {
    "text": "so it is taking quite some time let's go to my virtual workspace for this demo oh",
    "start": "1211200",
    "end": "1216559"
  },
  {
    "text": "yeah if you view build up that is what i wanted to see for the deployment and",
    "start": "1216559",
    "end": "1221760"
  },
  {
    "text": "it was actually able to build it up and if you also see that uh so when it ran the plea dot sh uh site",
    "start": "1221760",
    "end": "1228480"
  },
  {
    "text": "it actually converted it let's see if you see uh it used wasn't it ahead of time compiled",
    "start": "1228480",
    "end": "1235120"
  },
  {
    "text": "a lot more uh quickly uh but uh you should remember that v.s.o file is the machine code uh which is why uh offices",
    "start": "1237600",
    "end": "1245200"
  },
  {
    "text": "why it is only useful to on a particular machine and uh you can also use the universal version",
    "start": "1245200",
    "end": "1250720"
  },
  {
    "text": "of format uh to copy the file that can be done on any awesome sandbox and uh so file that is",
    "start": "1250720",
    "end": "1256559"
  },
  {
    "text": "machine specific so let's actually take a look at this deployment which we just deployed and uh so this deployment is up as well",
    "start": "1256559",
    "end": "1265840"
  },
  {
    "text": "so let's now take a look at uh what's up i just showed you uh i just showed you about uh why it needed to be",
    "start": "1267039",
    "end": "1273520"
  },
  {
    "text": "white needed to be converted to all the data so files",
    "start": "1273520",
    "end": "1278880"
  },
  {
    "text": "and now let's open our deployment okay there we go",
    "start": "1278880",
    "end": "1286559"
  },
  {
    "text": "so this is the deployment which we just made our troublesome functions and let's tie down an image so this is the",
    "start": "1286559",
    "end": "1291840"
  },
  {
    "text": "imagenet model but the same words model uh so let's try on this image which is a pretty famous image and it actually",
    "start": "1291840",
    "end": "1298720"
  },
  {
    "text": "tells me that it's a comic book so the imagery model has another set of labels uh which is used for uh detecting",
    "start": "1298720",
    "end": "1305200"
  },
  {
    "text": "all kinds of images uh it has uh so the image network one k has one thousand uh labels and dvds like 21k has 21 000",
    "start": "1305200",
    "end": "1311520"
  },
  {
    "text": "different uh labels for images and that is the model which we deployed to serverless functions if you might see it",
    "start": "1311520",
    "end": "1316799"
  },
  {
    "text": "also the influence was also quite quick because we ahead of time compiled down our code and",
    "start": "1316799",
    "end": "1323039"
  },
  {
    "text": "it also rightly classifies this image as a comic book",
    "start": "1323039",
    "end": "1326960"
  },
  {
    "text": "so now we come to the third and final demo which is uh managing with us in the apps with kubernetes so um so it is uh",
    "start": "1331600",
    "end": "1338000"
  },
  {
    "text": "so it is really nice and one of the great advantages of the of linux containers of the linux containers system is that you have a lot",
    "start": "1338000",
    "end": "1343840"
  },
  {
    "text": "of tools you have a lot of support uh you have kubernetes to manage it you have high level container runtimes nancy a low level container on time",
    "start": "1343840",
    "end": "1351679"
  },
  {
    "text": "which allows you to work with linux based containers very easily and",
    "start": "1351679",
    "end": "1357440"
  },
  {
    "text": "so you can also do the same with web assembly-based containers uh which is quite interesting because webassembly-based containers are pretty",
    "start": "1357440",
    "end": "1364159"
  },
  {
    "text": "uh are faster at startup and you have already seen the speed uh especially coupled with ahead of time compilation",
    "start": "1364159",
    "end": "1369520"
  },
  {
    "text": "uh about how uh about how google assembly could be faster and it would be really nice if",
    "start": "1369520",
    "end": "1374559"
  },
  {
    "text": "you could have your web assembly container images side by side and represent the options side by side in the same system with linux containers uh",
    "start": "1374559",
    "end": "1380480"
  },
  {
    "text": "which is uh which is what we'll be seeing today so first off uh we'll so first of all we'll take one of these",
    "start": "1380480",
    "end": "1385600"
  },
  {
    "text": "examples and create a container for our uh clear container out of our uh autofocus",
    "start": "1385600",
    "end": "1391120"
  },
  {
    "text": "image uh or out of our application so first let's go to an example let's take the russian example and uh",
    "start": "1391120",
    "end": "1398320"
  },
  {
    "text": "so we already have the 132 minus once the target installed so first we'll build this uh we have already done this",
    "start": "1398320",
    "end": "1404080"
  },
  {
    "text": "in the previous demos but i'll just build this up again for the 32 minus quasi target",
    "start": "1404080",
    "end": "1411440"
  },
  {
    "text": "and uh yeah so because we have already built it earlier uh this was a lot faster so",
    "start": "1411440",
    "end": "1417360"
  },
  {
    "text": "uh now what we'll do is we'll also uh so now we want to create a docker file uh which will run dot washer file uh if you",
    "start": "1417360",
    "end": "1424240"
  },
  {
    "text": "remember where the dot wasn't filed is it's in the version 32 minus one target so first let's apply the executable",
    "start": "1424240",
    "end": "1430400"
  },
  {
    "text": "permission to it because that is what we will be running uh in our uh what we'll be writing in our docker file and what our container",
    "start": "1430400",
    "end": "1436240"
  },
  {
    "text": "will be running so uh let's 1032 minus one z release and this is",
    "start": "1436240",
    "end": "1442480"
  },
  {
    "text": "called classified.position so there you go and now what we'll do is uh uh we'll create a how we'll create a",
    "start": "1442480",
    "end": "1449279"
  },
  {
    "text": "dockerfile uh",
    "start": "1449279",
    "end": "1453840"
  },
  {
    "text": "so let's create a docker file here",
    "start": "1455120",
    "end": "1459840"
  },
  {
    "text": "so i've already written this down for you but uh what you can simply do is uh add",
    "start": "1464559",
    "end": "1470799"
  },
  {
    "text": "ideal.org",
    "start": "1470799",
    "end": "1473799"
  },
  {
    "text": "run time can already start the this websdb's container image but it requires another annotation on the container image uh to",
    "start": "1484960",
    "end": "1491760"
  },
  {
    "text": "indicate that it is a web assembly application which does not have a guest os so to do this uh we'll actually use buildup and add an annotation",
    "start": "1491760",
    "end": "1499840"
  },
  {
    "text": "that this is our website the application and we don't have a case storage for this so uh so let's actually do that",
    "start": "1499840",
    "end": "1507919"
  },
  {
    "text": "and we'll and we'll add our annotation",
    "start": "1508720",
    "end": "1514520"
  },
  {
    "text": "[Music] and this",
    "start": "1521710",
    "end": "1526840"
  },
  {
    "text": "is uh this is just know that we don't have a uh gestures for this uh website",
    "start": "1526840",
    "end": "1532960"
  },
  {
    "text": "application so classified so this uh so this adds the so this adds",
    "start": "1532960",
    "end": "1538080"
  },
  {
    "text": "the annotation of this container image and then you can also uh and then you can also do builder push to push this to",
    "start": "1538080",
    "end": "1545440"
  },
  {
    "text": "docker hub or gccr literally wherever you want them so uh so that is the part about building uh",
    "start": "1545440",
    "end": "1550960"
  },
  {
    "text": "or building a container from our web assembly or building a container image from our website application and uh what",
    "start": "1550960",
    "end": "1556000"
  },
  {
    "text": "we'll do at the moment i haven't pushed the container uh if i haven't put the image i created uh to docker hub and",
    "start": "1556000",
    "end": "1562000"
  },
  {
    "text": "what we'll do is we just take this uh we'll just take this a simple piece of code so what this does is uh this is",
    "start": "1562000",
    "end": "1568000"
  },
  {
    "text": "actually uh by the way uh team uh and uh just to test out aussie extension uh so",
    "start": "1568000",
    "end": "1573840"
  },
  {
    "text": "this is uh uh it's a couple of random numbers okay it's a file feature file so just to test",
    "start": "1573840",
    "end": "1579120"
  },
  {
    "text": "out and they already have a container up for this so we can directly test this out",
    "start": "1579120",
    "end": "1584640"
  },
  {
    "text": "so you can actually uh try running a web assembly container uh or you can actually try making assembly container",
    "start": "1584640",
    "end": "1589840"
  },
  {
    "text": "and running it uh uh running it with uh uh with cubex k3s uh mini queue kind whatever",
    "start": "1589840",
    "end": "1597120"
  },
  {
    "text": "you want uh at the moment i already have a kind class setup and i'll just uh and i'll just uh",
    "start": "1597120",
    "end": "1603279"
  },
  {
    "text": "i'll just run an example i'll just learn this example uh which we just saw there or they also have a publisher image",
    "start": "1603279",
    "end": "1608559"
  },
  {
    "text": "which was a reason to try out this example and show this example because it's quickly doable and uh i haven't",
    "start": "1608559",
    "end": "1614159"
  },
  {
    "text": "pushed the image of it so uh so this is uh an example of uh running a website uh planning on msnb",
    "start": "1614159",
    "end": "1622320"
  },
  {
    "text": "uh running web assembly and managing it with kubernetes uh we have actually taken uh taken this web assembly up uh",
    "start": "1622320",
    "end": "1628799"
  },
  {
    "text": "which is a very simple website i made it into a container i wrote the annotation and uh and also i run it uh run it on",
    "start": "1628799",
    "end": "1636159"
  },
  {
    "text": "our kind of kubernetes cluster uh so that was it for mlp",
    "start": "1636159",
    "end": "1641840"
  },
  {
    "text": "so i hope that you liked the demonstration in case you are interested you can check out the code on github by",
    "start": "1642080",
    "end": "1647200"
  },
  {
    "text": "this particular link that we'll also be sharing in the chat for all of you now we also want to cover slightly about",
    "start": "1647200",
    "end": "1653600"
  },
  {
    "text": "why choose this balance between communities and was image now developers can actually use various",
    "start": "1653600",
    "end": "1660480"
  },
  {
    "text": "container tools such as communities to actually run lightweight web assembly applications and",
    "start": "1660480",
    "end": "1666159"
  },
  {
    "text": "you may ask that why to actually choose webassembly based applications on communities so especially when it comes",
    "start": "1666159",
    "end": "1672000"
  },
  {
    "text": "to uh being able to run uh applications on the edge which are usually uh those",
    "start": "1672000",
    "end": "1677679"
  },
  {
    "text": "kind of hardware which are very resource constant if you try to run uh linux containers on its devices it can be sort",
    "start": "1677679",
    "end": "1684320"
  },
  {
    "text": "of an issue because linux contains are usually larger in size and they also take a lot of time to actually uh get",
    "start": "1684320",
    "end": "1690480"
  },
  {
    "text": "started now in comparison to those when we use web assembly containers they are much faster to not only in book but also",
    "start": "1690480",
    "end": "1698000"
  },
  {
    "text": "they are much smaller in size up to hundreds of times uh in a lot of different situations and at the same",
    "start": "1698000",
    "end": "1704159"
  },
  {
    "text": "time uh a good method to actually run uh these web assembly containers on communities is by actually pairing them",
    "start": "1704159",
    "end": "1710880"
  },
  {
    "text": "up with some of the existing linux containers especially like docker containers that might be running within that particular web assembly uh within",
    "start": "1710880",
    "end": "1717279"
  },
  {
    "text": "that community's ecosystem uh because as we know that uh with web assembly uh it is not having the best tooling out there",
    "start": "1717279",
    "end": "1724720"
  },
  {
    "text": "a lot of the toolings are not supported so essentially what you can do is that you can run your website containers",
    "start": "1724720",
    "end": "1729919"
  },
  {
    "text": "alongside docker containers and use the rich ecosystem that is provided by the docker docker uh",
    "start": "1729919",
    "end": "1736000"
  },
  {
    "text": "containers with the tool chains that can be used also by the web assembly containers as well with the help of",
    "start": "1736000",
    "end": "1741279"
  },
  {
    "text": "bossy and uh that actually makes webassembly as a really good choice for communities based ecosystem",
    "start": "1741279",
    "end": "1748480"
  },
  {
    "text": "with that uh we'll conclude our talk thank you so much uh of course you can reach out to us while our twitter",
    "start": "1748480",
    "end": "1753919"
  },
  {
    "text": "handles uh me shibai adrit haardullah and rishith",
    "start": "1753919",
    "end": "1759600"
  },
  {
    "text": "so thank you so much for attending the talk and of course now we are open for questions thank you very much",
    "start": "1760559",
    "end": "1766960"
  },
  {
    "text": "thank you awesome that was an interesting session",
    "start": "1766960",
    "end": "1772559"
  },
  {
    "text": "we will now bring uh shivi and rishit online",
    "start": "1772559",
    "end": "1777600"
  },
  {
    "text": "to answer your questions",
    "start": "1777600",
    "end": "1781720"
  },
  {
    "text": "hi welcome shivaya rashid can you hear me yeah yeah uh booker we can hear you",
    "start": "1784080",
    "end": "1789760"
  },
  {
    "text": "first of all thank you so much for inviting us for kiswi and we have been watching some of the other talks as well so yeah thank you so much for inviting",
    "start": "1789760",
    "end": "1796240"
  },
  {
    "text": "us yeah awesome we are very grateful for you taking the",
    "start": "1796240",
    "end": "1801600"
  },
  {
    "text": "time to join and prepare the video but we don't have any questions here at the",
    "start": "1801600",
    "end": "1806840"
  },
  {
    "text": "moment uh [Music] i think since we'll probably also be uploading",
    "start": "1806840",
    "end": "1813440"
  },
  {
    "text": "the questions later to be on youtube we'll share the videos with you so that you can",
    "start": "1813440",
    "end": "1820320"
  },
  {
    "text": "probably check the feedbacks that were given and so on and uh also viewers can",
    "start": "1820320",
    "end": "1826559"
  },
  {
    "text": "also throw questions at you on twitter i think rashid handle is rashid unless called",
    "start": "1826559",
    "end": "1832720"
  },
  {
    "text": "ugly on twitter and that of shiva i can't remember yours maybe we can how how developed but yeah",
    "start": "1832720",
    "end": "1840480"
  },
  {
    "text": "just to sort of cover uh inertial what we like you know wanted to represent from our talk is uh that a lot of times",
    "start": "1840480",
    "end": "1848080"
  },
  {
    "text": "you might want to run machine learning applications and also in general any computationally heavy applications on",
    "start": "1848080",
    "end": "1854640"
  },
  {
    "text": "edge devices and that's where web assembly rally comes to the picture because generally web assembly is conceived to be this",
    "start": "1854640",
    "end": "1861120"
  },
  {
    "text": "front end and a browse specific technology but today it has been brought over and it's actually being used quite",
    "start": "1861120",
    "end": "1867279"
  },
  {
    "text": "a lot in the back end and especially in the cloud native space as well so that was uh i wanted to convey that message",
    "start": "1867279",
    "end": "1874559"
  },
  {
    "text": "of course by taking an example of machine learning in our talk yeah awesome awesome",
    "start": "1874559",
    "end": "1881600"
  },
  {
    "text": " you want to add anything else um at the moment uh no but",
    "start": "1881600",
    "end": "1889760"
  },
  {
    "text": "i'm not on the highlight part but another another thing which i found particularly interesting with the web",
    "start": "1889760",
    "end": "1896080"
  },
  {
    "text": "assembly is that you can shift the paradigm because of the speed and the size of it the size of",
    "start": "1896080",
    "end": "1902240"
  },
  {
    "text": "it compared to linux containers and we also showed the benchmarks for the mobile network so that was actually the",
    "start": "1902240",
    "end": "1908799"
  },
  {
    "text": "same model we were running in the demo we did all kinds of benchmarks on it so uh that in a sense feels to me",
    "start": "1908799",
    "end": "1917760"
  },
  {
    "text": "managing your web assembly containers with linux could change the paradigm for a lot of",
    "start": "1917760",
    "end": "1924640"
  },
  {
    "text": "for a lot of tasks and you should definitely give it a try all of the timbers are already open",
    "start": "1924640",
    "end": "1930240"
  },
  {
    "text": "sourced some of them are the example demos uh from the uh maintained by the awesome",
    "start": "1930240",
    "end": "1936960"
  },
  {
    "text": "edge team uh but a lot of the demos like the mobile network which we saw today uh were new",
    "start": "1936960",
    "end": "1943600"
  },
  {
    "text": "models so you can definitely try them out we also have a github ebook where all the demos are you can take a",
    "start": "1943600",
    "end": "1950399"
  },
  {
    "text": "look at them anytime",
    "start": "1950399",
    "end": "1953960"
  },
  {
    "text": "thank you so much and the entire uh kcd africa team and thank you so much for uh having us",
    "start": "1962240",
    "end": "1968880"
  },
  {
    "text": "uh thank you thank you so much um apple i think your",
    "start": "1968880",
    "end": "1974840"
  },
  {
    "text": "music oh and i was busy talking",
    "start": "1974840",
    "end": "1980240"
  },
  {
    "text": "remind me i was just thanking you all for joining and uh we look forward to hosting you in our subsequent talks",
    "start": "1980240",
    "end": "1987440"
  },
  {
    "text": "and uh engaging with you online thank you very much thank you thank you thank you",
    "start": "1987440",
    "end": "1995080"
  }
]