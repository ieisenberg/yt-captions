[
  {
    "text": "okay gotten him from watching from highway today like to talk about and",
    "start": "2659",
    "end": "10429"
  },
  {
    "text": "recursive readout logs and where to find them this topic is I've been informative and",
    "start": "10429",
    "end": "19580"
  },
  {
    "text": "Tans limited so first go through their background and some of the information I",
    "start": "19580",
    "end": "26880"
  },
  {
    "text": "would like to assume that you are all aware of it and if you have questions then you're welcome to approach me",
    "start": "26880",
    "end": "33540"
  },
  {
    "text": "privately after this session and then today I would like to talk about several",
    "start": "33540",
    "end": "40410"
  },
  {
    "text": "topics the logged app and where to find",
    "start": "40410",
    "end": "47940"
  },
  {
    "text": "that log and how to assess it and what I do",
    "start": "47940",
    "end": "53239"
  },
  {
    "text": "based on locked up and how can we detect lock death how can we detect that lock",
    "start": "53239",
    "end": "60510"
  },
  {
    "text": "first pretty simple dialogue let's give this part since basically if it's",
    "start": "60510",
    "end": "66210"
  },
  {
    "text": "involved in the it's it's relevant with deadlock and self deadlock and abpa",
    "start": "66210",
    "end": "73710"
  },
  {
    "text": "deadlock to the lower right corner",
    "start": "73710",
    "end": "79020"
  },
  {
    "text": "what we see here I'm gonna assume that you understand it personally a and B are",
    "start": "79020",
    "end": "89880"
  },
  {
    "text": "in the locker status unable to proceed",
    "start": "89880",
    "end": "95250"
  },
  {
    "text": "NBPA can be expanded into three that",
    "start": "95250",
    "end": "100979"
  },
  {
    "text": "lock sequence and also there are some",
    "start": "100979",
    "end": "108000"
  },
  {
    "text": "dead logs relevant with interrupts so basically we can assume that's an",
    "start": "108000",
    "end": "117119"
  },
  {
    "text": "expansion or scaling off Appa and stop",
    "start": "117119",
    "end": "122430"
  },
  {
    "text": "that lock and for trying to solve it that log",
    "start": "122430",
    "end": "127640"
  },
  {
    "text": "no matter the code if there is that lock then we will find",
    "start": "128599",
    "end": "142420"
  },
  {
    "text": "a specific combination of codes and",
    "start": "142420",
    "end": "148980"
  },
  {
    "text": "interrupt we increase the possibility of deadlock code occurrence well if you",
    "start": "148980",
    "end": "162180"
  },
  {
    "text": "have I hope you enabled context and you",
    "start": "162180",
    "end": "169510"
  },
  {
    "text": "drop the ABP a deadlock then there is a deadlock p0 r AQ is enabled and there's",
    "start": "169510",
    "end": "180430"
  },
  {
    "text": "a spin lock a and there's a lock handler",
    "start": "180430",
    "end": "187299"
  },
  {
    "text": "then they will handle lock B but lock B is locked and in turn that will spin",
    "start": "187299",
    "end": "193390"
  },
  {
    "text": "lock a and then there is a deadlock and it will be expanded to a 3 that lock",
    "start": "193390",
    "end": "200349"
  },
  {
    "text": "chain lock that what is it locked up is",
    "start": "200349",
    "end": "205569"
  },
  {
    "text": "a that lock assessing tools and it's a",
    "start": "205569",
    "end": "211410"
  },
  {
    "text": "self equipped tools in the kernel and still up around 2000 and it tried to",
    "start": "211410",
    "end": "220630"
  },
  {
    "text": "minimize the occurrence of code in deadlock and they will check clarify they were classified different",
    "start": "220630",
    "end": "228430"
  },
  {
    "text": "categories of that logs and there is a concept a lock dependency to the right you can see p0 if there is a spin lock a",
    "start": "228430",
    "end": "236859"
  },
  {
    "text": "and spin lock B then we'll assume that a TP there is a lot of dependence based on",
    "start": "236859",
    "end": "244750"
  },
  {
    "text": "the dependence then we will have a dependency graph it's pretty simple it's",
    "start": "244750",
    "end": "251590"
  },
  {
    "text": "pretty straightforward we see the rock dependency graph",
    "start": "251590",
    "end": "257620"
  },
  {
    "text": "it's there any ring lay out if there is",
    "start": "257620",
    "end": "264610"
  },
  {
    "text": "a ring in the lock dependency graph and that will be a BPA that lock then this",
    "start": "264610",
    "end": "273880"
  },
  {
    "text": "is the code but it's likely to appear the lock dependency graph it's gonna",
    "start": "273880",
    "end": "281919"
  },
  {
    "text": "have this code so this case is a typical",
    "start": "281919",
    "end": "287830"
  },
  {
    "text": "debt law case and here I won't go into",
    "start": "287830",
    "end": "297160"
  },
  {
    "text": "great details if you're interested then you're more than welcome to do more",
    "start": "297160",
    "end": "302889"
  },
  {
    "text": "research the condition of that lock",
    "start": "302889",
    "end": "308820"
  },
  {
    "text": "obviously in other cases it's all spin",
    "start": "309270",
    "end": "314950"
  },
  {
    "text": "lock and in curl there there are some other cases the lock that are dealing with it like the following well first",
    "start": "314950",
    "end": "324010"
  },
  {
    "text": "let's focus in locked up so to River lock what is recursive we're a lock",
    "start": "324010",
    "end": "333060"
  },
  {
    "text": "unfavorable right lock and the yellow the yellow arrow is the where the time",
    "start": "333060",
    "end": "345039"
  },
  {
    "text": "progresses w1 writer one in red that",
    "start": "345039",
    "end": "352330"
  },
  {
    "text": "means they won't get the lock next we",
    "start": "352330",
    "end": "359770"
  },
  {
    "text": "have our two reader too and they get the lock and if it's like this then it's a",
    "start": "359770",
    "end": "367210"
  },
  {
    "text": "non common rare lock we have writers keep coming that the other one would not",
    "start": "367210",
    "end": "373720"
  },
  {
    "text": "get the lock it sounds fair and the writer will be very hungry and it's not",
    "start": "373720",
    "end": "381700"
  },
  {
    "text": "very good and so all the real log is fair we rewrite lock so these are two",
    "start": "381700",
    "end": "389099"
  },
  {
    "text": "cases so the yellow arrow is that where the time progress",
    "start": "389099",
    "end": "395740"
  },
  {
    "text": "forward and or two won't get the lock",
    "start": "395740",
    "end": "405990"
  },
  {
    "text": "and w1 will have high priority on getting the lock if it's like what's to",
    "start": "406379",
    "end": "413979"
  },
  {
    "text": "the right if we didn't have the writer then our two can get the lock so it's a",
    "start": "413979",
    "end": "421029"
  },
  {
    "text": "river lock different from the previous deadlock the reader catalog and if there",
    "start": "421029",
    "end": "427270"
  },
  {
    "text": "is any writer there's no other writer than the rest of the reader can also get the lock so there's the difference so we",
    "start": "427270",
    "end": "434830"
  },
  {
    "text": "can summarized in this graph saying that the recursive a lock or that lock they",
    "start": "434830",
    "end": "444490"
  },
  {
    "text": "will have multiple readers and they were allowed recursive reader to have a",
    "start": "444490",
    "end": "456509"
  },
  {
    "text": "critical zone one reader will not block the other readers and for a non",
    "start": "456509",
    "end": "461860"
  },
  {
    "text": "recursive his Rivera lock and also they were allowed multiple readers but they",
    "start": "461860",
    "end": "467229"
  },
  {
    "text": "were not allowed recursive CS it's code",
    "start": "467229",
    "end": "472539"
  },
  {
    "text": "non recursive obviously and the non recursive reader will blocks other",
    "start": "472539",
    "end": "480129"
  },
  {
    "text": "reader and they will have a signal this",
    "start": "480129",
    "end": "486969"
  },
  {
    "text": "one here you can see the r-1 sometimes not",
    "start": "486969",
    "end": "492800"
  },
  {
    "text": "an out locking r2 but sometimes our one when they get the lock will block r2",
    "start": "492800",
    "end": "501110"
  },
  {
    "text": "with our one now getting lock or two will not get the lock as well so r1 will",
    "start": "501110",
    "end": "507259"
  },
  {
    "text": "flock r2 with non-relevant writers so that's what we caught one writer can",
    "start": "507259",
    "end": "513169"
  },
  {
    "text": "plug other writers one reader can plot our readers so this is the condition of",
    "start": "513169",
    "end": "521360"
  },
  {
    "text": "blocking a differentiating different cases different scenarios so spin lock",
    "start": "521360",
    "end": "529339"
  },
  {
    "text": "can be consider as the scenarios the only writers exist so if we view this",
    "start": "529339",
    "end": "537140"
  },
  {
    "text": "graphic horizontally the recursive reader they will now block any other",
    "start": "537140",
    "end": "543260"
  },
  {
    "text": "readers whether it's recursive or not and",
    "start": "543260",
    "end": "549850"
  },
  {
    "text": "a recursive reader we now block other readers guess it's recursive and it will",
    "start": "556360",
    "end": "565449"
  },
  {
    "text": "block writers and the non recursive not number no matters reader or writer oh",
    "start": "565449",
    "end": "572910"
  },
  {
    "text": "well first from recursive aspects they",
    "start": "572910",
    "end": "578589"
  },
  {
    "text": "were not allowed CSI and the writer is non recursive lock the non recursive",
    "start": "578589",
    "end": "585220"
  },
  {
    "text": "novelist reader writer they would block other reader and also other writer this",
    "start": "585220",
    "end": "594759"
  },
  {
    "text": "is the block condition and starting from",
    "start": "594759",
    "end": "604839"
  },
  {
    "text": "here this is what we call it if we say",
    "start": "604839",
    "end": "617129"
  },
  {
    "text": "this river lock is a non recursive ray log then if we're not focusing on p2 but",
    "start": "617129",
    "end": "627639"
  },
  {
    "text": "also p0 p1 then it's like the previous",
    "start": "627639",
    "end": "633160"
  },
  {
    "text": "example but if we want to trigger this that lock then we need p2 if there's no p2 p1 wouldn't they get the B then they",
    "start": "633160",
    "end": "640629"
  },
  {
    "text": "can proceed to a if you're assessing detecting any that lock it would have to",
    "start": "640629",
    "end": "646779"
  },
  {
    "text": "go through all you have to rule out all the possibilities of that lock if we got",
    "start": "646779",
    "end": "654970"
  },
  {
    "text": "if the codes have p0 and p1 then there's still the possibility of not being a",
    "start": "654970",
    "end": "662199"
  },
  {
    "text": "deadlock and relock it's a recursive",
    "start": "662199",
    "end": "667299"
  },
  {
    "text": "lock then obviously this is not a deadlock a recursive lock will not be",
    "start": "667299",
    "end": "677769"
  },
  {
    "text": "blocked by another reader and",
    "start": "677769",
    "end": "681269"
  },
  {
    "text": "if they have a p2 then p1 will still have to be I spin this can still get the",
    "start": "682850",
    "end": "690990"
  },
  {
    "text": "lock this is none deadlock and the lock gap graph can be changed to this and a tip",
    "start": "690990",
    "end": "702300"
  },
  {
    "text": "Ian BJ there's a ring and it's not that",
    "start": "702300",
    "end": "708510"
  },
  {
    "text": "lock and this one this is that lock",
    "start": "708510",
    "end": "716070"
  },
  {
    "text": "itself and the writer will be blocked by",
    "start": "716070",
    "end": "721740"
  },
  {
    "text": "reader the read lock will be blocked by",
    "start": "721740",
    "end": "727110"
  },
  {
    "text": "p0 and because it's a ring layout then",
    "start": "727110",
    "end": "734220"
  },
  {
    "text": "we can see that here B to a is the ww this is not the initial lock visa right",
    "start": "734220",
    "end": "746010"
  },
  {
    "text": "lock and a is also a write log and p1 that's the case so they have the same",
    "start": "746010",
    "end": "754410"
  },
  {
    "text": "struct but categories is different one",
    "start": "754410",
    "end": "760680"
  },
  {
    "text": "is that lock if the other is not so the",
    "start": "760680",
    "end": "770670"
  },
  {
    "text": "same struct they might have different categories of lock sometimes it is",
    "start": "770670",
    "end": "777650"
  },
  {
    "text": "determined as the dialogue sometimes it it is that and",
    "start": "777650",
    "end": "783019"
  },
  {
    "text": "well if it's a non-recursive",
    "start": "787930",
    "end": "794300"
  },
  {
    "text": "root lock then if it's in the RQ context",
    "start": "794300",
    "end": "799910"
  },
  {
    "text": "it's a recursive deadlock they guarantee that had to guarantee that the handler can get luck and exceed",
    "start": "799910",
    "end": "807820"
  },
  {
    "text": "ASAP and it's a famous that mark example it's pretty special and this is that log",
    "start": "807820",
    "end": "816260"
  },
  {
    "text": "example this is read lock this is a bit different to the upper-right corner it's",
    "start": "816260",
    "end": "825050"
  },
  {
    "text": "a recursive that lock the green pit and the other way lock is non recursive this",
    "start": "825050",
    "end": "833240"
  },
  {
    "text": "is a that log and that lock a if p0 get",
    "start": "833240",
    "end": "839810"
  },
  {
    "text": "to be and p1 will not get the B because",
    "start": "839810",
    "end": "847370"
  },
  {
    "text": "if we have a not relevant readers then the blocking condition is that the p1 is",
    "start": "847370",
    "end": "854690"
  },
  {
    "text": "when the it's getting the P it's a functional reader lock if they have",
    "start": "854690",
    "end": "862450"
  },
  {
    "text": "writers there then the writers will first get the lock and then the readers will get the lock so the p1 read log",
    "start": "862450",
    "end": "869779"
  },
  {
    "text": "will they won't be able to get the lock and it's a ring struct so later we're",
    "start": "869779",
    "end": "878660"
  },
  {
    "text": "gonna touch upon that next this is a not that lock this we just reverse the",
    "start": "878660",
    "end": "885320"
  },
  {
    "text": "sequence so we can see p0 cadei p1 get b",
    "start": "885320",
    "end": "892990"
  },
  {
    "text": "p0 now once get the B it is possible it",
    "start": "892990",
    "end": "898310"
  },
  {
    "text": "is accessible the lock is a recursive",
    "start": "898310",
    "end": "903490"
  },
  {
    "text": "reluctant they have a p2 right service",
    "start": "904899",
    "end": "911300"
  },
  {
    "text": "to de can get the lock so this is not that lock itself so lock that if you're",
    "start": "911300",
    "end": "926959"
  },
  {
    "text": "just assessing the ring that will be missing some of the conditions of the deadlock we need to make several changes",
    "start": "926959",
    "end": "935300"
  },
  {
    "text": "first we have to make sure the existing that lock is working lock tab is working",
    "start": "935300",
    "end": "941870"
  },
  {
    "text": "and also we had to handle the queue add a block and we have to consider the",
    "start": "941870",
    "end": "949550"
  },
  {
    "text": "false positive situation and if we have",
    "start": "949550",
    "end": "954680"
  },
  {
    "text": "a false positive detection - then people are not trusting the tool you can miss",
    "start": "954680",
    "end": "962240"
  },
  {
    "text": "some of the dialogue is ok but if you report a false positive result you might",
    "start": "962240",
    "end": "972380"
  },
  {
    "text": "lose the trust from the clients you have to guarantee that 2 is trustworthy the",
    "start": "972380",
    "end": "979640"
  },
  {
    "text": "lock that we must rule out the possibility of false positive so this is",
    "start": "979640",
    "end": "986240"
  },
  {
    "text": "very simply about how can we detect",
    "start": "986240",
    "end": "991390"
  },
  {
    "text": "recursively rate lock and we classify as follows first we consider that we have",
    "start": "991390",
    "end": "1001089"
  },
  {
    "text": "three categories of lock first our reader recursive reader",
    "start": "1001089",
    "end": "1008410"
  },
  {
    "text": "and non-recursive reader and writer in one dependency we're gonna have nine",
    "start": "1008410",
    "end": "1015900"
  },
  {
    "text": "combinations three times three so this is a direct sorting up according to the",
    "start": "1015900",
    "end": "1024490"
  },
  {
    "text": "locked up conditions for a categories one shared locks read their locks",
    "start": "1024490",
    "end": "1032470"
  },
  {
    "text": "recursive or not and exclusive locks writer lock or playing Spurlock's and",
    "start": "1032470",
    "end": "1040079"
  },
  {
    "text": "recursive readers and non recursive readers and writers",
    "start": "1040079",
    "end": "1046920"
  },
  {
    "text": "it's from presented by letters as e and",
    "start": "1047850",
    "end": "1053170"
  },
  {
    "text": "s erm and recursive reader will be blocked by writers and non recursive the",
    "start": "1053170",
    "end": "1060430"
  },
  {
    "text": "managed research or writer blocks will be possibly blocked by other readers and",
    "start": "1060430",
    "end": "1066400"
  },
  {
    "text": "other writers so if we summarized it got the following graphics our would be",
    "start": "1066400",
    "end": "1074410"
  },
  {
    "text": "blocked by s and the others on the other occasion that will be blocked aspect as",
    "start": "1074410",
    "end": "1081460"
  },
  {
    "text": "means sheer e means exclusive R means",
    "start": "1081460",
    "end": "1087030"
  },
  {
    "text": "recursive and non recursive and means non recursive so rugelach the dependency",
    "start": "1087030",
    "end": "1099100"
  },
  {
    "text": "where for categories in this regard so",
    "start": "1099100",
    "end": "1104160"
  },
  {
    "text": "why first as our an en er based on previous",
    "start": "1104160",
    "end": "1116980"
  },
  {
    "text": "conditions and definitions we can easily understand that and I am saying that for",
    "start": "1116980",
    "end": "1126789"
  },
  {
    "text": "the headed dependency we only need to",
    "start": "1126789",
    "end": "1132010"
  },
  {
    "text": "determine whether it's sure all exclusive for the tail we have to determine whether it's Rita recursive",
    "start": "1132010",
    "end": "1138250"
  },
  {
    "text": "and not recursive so we'll determine the",
    "start": "1138250",
    "end": "1143559"
  },
  {
    "text": "block on this we consider LOC dependency we are actually focusing on first if",
    "start": "1143559",
    "end": "1152260"
  },
  {
    "text": "we're considering the dependency from A to B then a will be a lock what are the",
    "start": "1152260",
    "end": "1162130"
  },
  {
    "text": "conditions it will block and water or other conditions they will be blocked B",
    "start": "1162130",
    "end": "1170140"
  },
  {
    "text": "if we say B can be blocked by the B in",
    "start": "1170140",
    "end": "1177100"
  },
  {
    "text": "PC and then we can scale up for the",
    "start": "1177100",
    "end": "1190059"
  },
  {
    "text": "codes in the lower right corner we can come over this graphic from p0 we have a",
    "start": "1190059",
    "end": "1197470"
  },
  {
    "text": "lock dependency SW sorry my mistake it should be as an ITP dependency and B to",
    "start": "1197470",
    "end": "1211779"
  },
  {
    "text": "a en dependency",
    "start": "1211779",
    "end": "1218070"
  },
  {
    "text": "we have to define dependency it is",
    "start": "1219929",
    "end": "1239849"
  },
  {
    "text": "discover the ring it's in the following",
    "start": "1256469",
    "end": "1269709"
  },
  {
    "text": "conditions that means if this kind of",
    "start": "1269709",
    "end": "1318879"
  },
  {
    "text": "situation happens the ping is a recursive reader yes from A to B the",
    "start": "1318879",
    "end": "1325419"
  },
  {
    "text": "peak occurs in return from this is a generator and let's look back on the",
    "start": "1325419",
    "end": "1334029"
  },
  {
    "text": "request cannot be blocked by the non recursive reader so there's not a strong",
    "start": "1334029",
    "end": "1340089"
  },
  {
    "text": "dependency here if you can translate it into codes it means that",
    "start": "1340089",
    "end": "1348029"
  },
  {
    "text": "she won't press choices a and participate but he can still choose to",
    "start": "1349000",
    "end": "1357380"
  },
  {
    "text": "be from A to B you can think about it",
    "start": "1357380",
    "end": "1366730"
  },
  {
    "text": "because other situations there were these occurrence of blocking so this is",
    "start": "1367150",
    "end": "1373460"
  },
  {
    "text": "the strong dependency we have we think it is can transfer the relationship of",
    "start": "1373460",
    "end": "1383210"
  },
  {
    "text": "the locks so the lock condition it means",
    "start": "1383210",
    "end": "1389480"
  },
  {
    "text": "that the strong dependency chain forms a circle and the metal example it shows",
    "start": "1389480",
    "end": "1398030"
  },
  {
    "text": "the coda for the right one yeah it has the deadlock because it doesn't have",
    "start": "1398030",
    "end": "1403910"
  },
  {
    "text": "container are at all and the we can",
    "start": "1403910",
    "end": "1409190"
  },
  {
    "text": "prove that it is also a deadlock yep you",
    "start": "1409190",
    "end": "1415520"
  },
  {
    "text": "won't get a and P one get the enemy to get C and the system cannot continue so",
    "start": "1415520",
    "end": "1425390"
  },
  {
    "text": "suppose this that lobbies are now recursive the reader is a non recursive one I have also proved it as I want to",
    "start": "1425390",
    "end": "1440330"
  },
  {
    "text": "prove that there's a kind of a circle a loop not a piece on this definition we",
    "start": "1440330",
    "end": "1446500"
  },
  {
    "text": "establish a dependency graph if there's a kind of a loop occur happening so it",
    "start": "1446500",
    "end": "1453210"
  },
  {
    "text": "you acquiesce to the possibility but it doesn't mean that the deadlock is",
    "start": "1453210",
    "end": "1458970"
  },
  {
    "text": "definitely going to happen because we only need a very special condition to make it happen to make the dialogue get",
    "start": "1458970",
    "end": "1466410"
  },
  {
    "text": "triggered better faster we don't allow this possibility of dialogue or have occur because if it",
    "start": "1466410",
    "end": "1472470"
  },
  {
    "text": "happens then the system will get start any time yes we don't want the deadlock",
    "start": "1472470",
    "end": "1483090"
  },
  {
    "text": "possible maybe that equated to the deadlock possibility so suppose we have",
    "start": "1483090",
    "end": "1490260"
  },
  {
    "text": "a strong dependency within the construct construct example in which the death",
    "start": "1490260",
    "end": "1498390"
  },
  {
    "text": "occurs and for the reverse we can see",
    "start": "1498390",
    "end": "1507600"
  },
  {
    "text": "that the technical possibility means that we will have this a condition from",
    "start": "1507600",
    "end": "1513810"
  },
  {
    "text": "Circular wait for the circular wait we can build a little gradually so there's",
    "start": "1513810",
    "end": "1523320"
  },
  {
    "text": "must be a strong dependency circle this",
    "start": "1523320",
    "end": "1531210"
  },
  {
    "text": "is for the algorithm and this is for implementation we change the look that codes and also PMS it's their codes so",
    "start": "1531210",
    "end": "1541020"
  },
  {
    "text": "as to make it to implement the strong dependency and we have done some tests",
    "start": "1541020",
    "end": "1546990"
  },
  {
    "text": "on it the code is shown in the below yeah you can check it there is a one",
    "start": "1546990",
    "end": "1554070"
  },
  {
    "text": "good point is that when the locked-up just appears it has its own deadlock",
    "start": "1554070",
    "end": "1559740"
  },
  {
    "text": "test it's called a QR reader precursor one yeah after I have it added an",
    "start": "1559740",
    "end": "1568950"
  },
  {
    "text": "algorithm it is drawn very well it proves that yes my implementation",
    "start": "1568950",
    "end": "1576470"
  },
  {
    "text": "algorithm is consistent with the previous sauce yes today my father is a very complex",
    "start": "1576470",
    "end": "1584380"
  },
  {
    "text": "and abstract but the hope that there's a two points I want to make first how can",
    "start": "1584380",
    "end": "1595120"
  },
  {
    "text": "we expand that the log dependence a relationship we use the block condition",
    "start": "1595120",
    "end": "1601210"
  },
  {
    "text": "the wait condition so suppose I have a to lock dependencies yeah it's easy to",
    "start": "1601210",
    "end": "1608529"
  },
  {
    "text": "find them if you can have this in the code then you can find it how can we expand it look it's a issue and another",
    "start": "1608529",
    "end": "1619120"
  },
  {
    "text": "thing is that the dependency wall",
    "start": "1619120",
    "end": "1625570"
  },
  {
    "text": "condition yes one reader can be blocked",
    "start": "1625570",
    "end": "1631179"
  },
  {
    "text": "by another reader yes other things they are very enough not complicated",
    "start": "1631179",
    "end": "1637510"
  },
  {
    "text": "I mean the algorithm you can just go go",
    "start": "1637510",
    "end": "1643929"
  },
  {
    "text": "tipped off yourself so that's my presentation today thank you",
    "start": "1643929",
    "end": "1648510"
  },
  {
    "text": "any questions",
    "start": "1656000",
    "end": "1659480"
  },
  {
    "text": "I have a question because they haven't",
    "start": "1662470",
    "end": "1672070"
  },
  {
    "text": "used it you don't look is it a static or dynamic it's a good",
    "start": "1672070",
    "end": "1679629"
  },
  {
    "text": "question is that dynamic otras yes it was the Builder dynamically so that it",
    "start": "1679629",
    "end": "1690370"
  },
  {
    "text": "won't affect the operation mystery tour but its algorithm analysis is static so",
    "start": "1690370",
    "end": "1697029"
  },
  {
    "text": "you think it's locked so we still need a",
    "start": "1697029",
    "end": "1702460"
  },
  {
    "text": "story to while we are writing it so you go to the previous one about the",
    "start": "1702460",
    "end": "1709299"
  },
  {
    "text": "calculation of waste dependency I don't remember which page of three or four if",
    "start": "1709299",
    "end": "1724779"
  },
  {
    "text": "you want to calculate a lot of dependency by the decipher machine",
    "start": "1724779",
    "end": "1735628"
  },
  {
    "text": "detection can be performed to find a machine but wise realized in the next",
    "start": "1739350",
    "end": "1747009"
  },
  {
    "text": "kernel is a dynamic we used to record or",
    "start": "1747009",
    "end": "1754629"
  },
  {
    "text": "the catalog it gets and this kind of method is not at time is dating go back",
    "start": "1754629",
    "end": "1764500"
  },
  {
    "text": "to the dependency graph so is it a dynamically generated yes look it is",
    "start": "1764500",
    "end": "1771519"
  },
  {
    "text": "dynamically generated yes",
    "start": "1771519",
    "end": "1778179"
  },
  {
    "text": "locked out where classify days locks it won't focus on the instances of this",
    "start": "1778179",
    "end": "1784149"
  },
  {
    "text": "locks is dead it focus on the doctors locks its were",
    "start": "1784149",
    "end": "1793030"
  },
  {
    "text": "categorized into it until one type but there's another s if you use log it's",
    "start": "1793030",
    "end": "1799059"
  },
  {
    "text": "another time yeah it has classified it you got a boss and",
    "start": "1799059",
    "end": "1804280"
  },
  {
    "text": "we have this kind of a classification so",
    "start": "1804280",
    "end": "1809830"
  },
  {
    "text": "after they have a written the code that they have already found out about application and you just need to wrong it yes so yeah that's basically the",
    "start": "1809830",
    "end": "1818710"
  },
  {
    "text": "point so I want to mention that the look Deb is the more to do with the",
    "start": "1818710",
    "end": "1825490"
  },
  {
    "text": "integration yes different systems use the different box the way you want integrated and then there is a locker",
    "start": "1825490",
    "end": "1833190"
  },
  {
    "text": "unpredictable happening so when you",
    "start": "1833190",
    "end": "1838990"
  },
  {
    "text": "locked up with the information you actually avoided that lock actually the tap lock happens more during the",
    "start": "1838990",
    "end": "1845170"
  },
  {
    "text": "integration process so it's more like a form of the distributor right because as",
    "start": "1845170",
    "end": "1853450"
  },
  {
    "text": "the distributor dispatcher at the scheduler can just allocated resources",
    "start": "1853450",
    "end": "1861179"
  },
  {
    "text": "and yes we can avoid this you should happening through the code thank you",
    "start": "1861570",
    "end": "1868350"
  },
  {
    "text": "I like to avoid impossible there's a",
    "start": "1873000",
    "end": "1885250"
  },
  {
    "text": "lock deadlock about that you can't detect it yes for me",
    "start": "1885250",
    "end": "1891910"
  },
  {
    "text": "yes we have this we have this dialog we cannot not detect the block and we you",
    "start": "1891910",
    "end": "1904510"
  },
  {
    "text": "to our think that it doesn't have a deadlock yes you have a realized on the",
    "start": "1904510",
    "end": "1910780"
  },
  {
    "text": "branch are you sure about it yes we want",
    "start": "1910780",
    "end": "1921040"
  },
  {
    "text": "to avoid the fog too because they were",
    "start": "1921040",
    "end": "1926230"
  },
  {
    "text": "classified as locsin and depending on the ways to classify this if you get",
    "start": "1926230",
    "end": "1932860"
  },
  {
    "text": "into the very few categories then for",
    "start": "1932860",
    "end": "1939190"
  },
  {
    "text": "example there's a deadlock the filesystem regard the firing process and",
    "start": "1939190",
    "end": "1948820"
  },
  {
    "text": "as a disc and in this way if the file system would they were just the one to",
    "start": "1948820",
    "end": "1957880"
  },
  {
    "text": "get a lock all the time because you think is a deadlock so we that's why we",
    "start": "1957880",
    "end": "1963580"
  },
  {
    "text": "want to classify it to avoid being recorded i sat there longer but the",
    "start": "1963580",
    "end": "1970750"
  },
  {
    "text": "sound because it's there something long and we want to skip it but I can't think",
    "start": "1970750",
    "end": "1975850"
  },
  {
    "text": "of a variety tell the case a specific case",
    "start": "1975850",
    "end": "1981390"
  },
  {
    "text": "so yes I have a question so we have to",
    "start": "1983660",
    "end": "1990930"
  },
  {
    "text": "doubt it I just write back",
    "start": "1990930",
    "end": "1994700"
  },
  {
    "text": "well we are just there just want to get the back of it you know our says wait",
    "start": "1996020",
    "end": "2001310"
  },
  {
    "text": "it's bound other words wait but their lock condition we can't capture it you",
    "start": "2001310",
    "end": "2010490"
  },
  {
    "text": "mean the completion would is the structure bridge they were right fake it",
    "start": "2010490",
    "end": "2017660"
  },
  {
    "text": "were which way to be right back and to make it to turn still off you",
    "start": "2017660",
    "end": "2025340"
  },
  {
    "text": "mean the we're taking Linux users be knock and you'll have to wait a fighter",
    "start": "2025340",
    "end": "2032860"
  },
  {
    "text": "for the weight to be clear to zero I'm not sure what you are mentioned yes",
    "start": "2032860",
    "end": "2041180"
  },
  {
    "text": "we have this kind of this progress last year there's some stuff can't detect",
    "start": "2041180",
    "end": "2051730"
  },
  {
    "text": "there's a dialog with the condition of wait nothing is where you wait actually",
    "start": "2052240",
    "end": "2060560"
  },
  {
    "text": "waiter waiter luck but time it doesn't",
    "start": "2060560",
    "end": "2065600"
  },
  {
    "text": "take into consideration of this case Sophie attack actually wait with a lock so this weight has a dependency and has",
    "start": "2065600",
    "end": "2076639"
  },
  {
    "text": "done of detection manager great but the text number trying to detect it if you",
    "start": "2076640",
    "end": "2084320"
  },
  {
    "text": "actually doubt there's kind of problem you have just to print a patch again yes",
    "start": "2084320",
    "end": "2093440"
  },
  {
    "text": "then you can find the issue they remember the name of the same song",
    "start": "2093440",
    "end": "2100880"
  },
  {
    "text": "Thackeray new student I don't mr. name is Parker PRK you can search",
    "start": "2101599",
    "end": "2111660"
  },
  {
    "text": "for locked up you can find him he's very active in this area as I'm running out",
    "start": "2111660",
    "end": "2119760"
  },
  {
    "text": "of time so thank you very much [Applause]",
    "start": "2119760",
    "end": "2127249"
  }
]