[
  {
    "start": "0",
    "end": "176000"
  },
  {
    "text": "thanks everyone for coming I'm gonna let you know that I'm getting over a super-pac cold so if my voice does weird",
    "start": "329",
    "end": "6629"
  },
  {
    "text": "things or if I start hacking uncontrollably that's why so what we'll be talking about today is actually how",
    "start": "6629",
    "end": "13080"
  },
  {
    "text": "we built and deployed envoy at at lyft and this is gonna be a talk where I'm",
    "start": "13080",
    "end": "18750"
  },
  {
    "text": "not trying to sell you something we're actually going to talk about the practicalities of building something and",
    "start": "18750",
    "end": "24210"
  },
  {
    "text": "deploying something very complicated into a very large existing infrastructure and I think it's a useful",
    "start": "24210",
    "end": "30119"
  },
  {
    "text": "case study because you know we come to conferences like these and we learn about all the really amazing technology",
    "start": "30119",
    "end": "36450"
  },
  {
    "text": "that people are building but very often we don't talk about it in a construct",
    "start": "36450",
    "end": "41489"
  },
  {
    "text": "that lets people understand you know you're coming from some existing technology and you want to adopt this",
    "start": "41489",
    "end": "46620"
  },
  {
    "text": "new technology that's a very hard problem it's not as easy as saying we're going to run envoy or run sto or run or",
    "start": "46620",
    "end": "52920"
  },
  {
    "text": "run kubernetes that's just not not the way that it works so first let's just do a brief refresher on envoy as well as",
    "start": "52920",
    "end": "60239"
  },
  {
    "text": "service mesh there's I think 15 talks at this conference on on service mesh so",
    "start": "60239",
    "end": "65430"
  },
  {
    "text": "I'm going to do this super briefly I think everyone here probably has a good idea of of what that is a day behind",
    "start": "65430",
    "end": "71549"
  },
  {
    "text": "envoy is that the network should be transparent to applications and when network and application problems do",
    "start": "71549",
    "end": "76830"
  },
  {
    "text": "occur they should be easy to determine what the source of the problem is and what we find these days when people try",
    "start": "76830",
    "end": "83520"
  },
  {
    "text": "to deploy micro service architectures is that the the network is not transparent it's in fact a huge thorn in people",
    "start": "83520",
    "end": "90810"
  },
  {
    "text": "sides and it is very very difficult to understand where problems are occurring",
    "start": "90810",
    "end": "96840"
  },
  {
    "text": "is that problem in your application is it in the virtual infrastructure that you're using is it in some container",
    "start": "96840",
    "end": "103110"
  },
  {
    "text": "runtime right it's like almost impossible to know and what I think a",
    "start": "103110",
    "end": "108210"
  },
  {
    "text": "lot of companies actually find when they try to move from a monolith to a micro service architecture is they they want",
    "start": "108210",
    "end": "115380"
  },
  {
    "text": "the agility gains of actually moving towards that architecture but then when they go to actually accomplish that",
    "start": "115380",
    "end": "121290"
  },
  {
    "text": "architecture when they go to actually accomplish that architecture you know it",
    "start": "121290",
    "end": "127290"
  },
  {
    "text": "becomes very problematic because people don't trust those services and in fact",
    "start": "127290",
    "end": "133520"
  },
  {
    "text": "lift what we saw is that we had our monolith and actually all you know what it's fine and what we saw is at lift you",
    "start": "133520",
    "end": "141950"
  },
  {
    "text": "know when we started to roll out our Microsoft's architecture we found that",
    "start": "141950",
    "end": "147020"
  },
  {
    "text": "developers they they didn't trust the network like they were seeing long tail problems and they didn't understand how",
    "start": "147020",
    "end": "153530"
  },
  {
    "text": "to debug them they saw long p99 latency and they would say you know we can't do",
    "start": "153530",
    "end": "158900"
  },
  {
    "text": "this this networking we can't do this RPC so we're just gonna go ahead we're gonna write those features back back in",
    "start": "158900",
    "end": "163970"
  },
  {
    "text": "that monolith so we we see that problem where we want to move towards this",
    "start": "163970",
    "end": "169100"
  },
  {
    "text": "architecture but we don't have the tools to allow people to write business logic and not focus on all the faults that are",
    "start": "169100",
    "end": "175280"
  },
  {
    "text": "actually happening so from a service mesh perspective this is a very simple diagram of what the service mesh does",
    "start": "175280",
    "end": "181940"
  },
  {
    "start": "176000",
    "end": "251000"
  },
  {
    "text": "and the idea here is that we have a couple of different services we have a sidecar proxy that is co-located next to",
    "start": "181940",
    "end": "188540"
  },
  {
    "text": "every service the service sends all of its requests or traffic to its local",
    "start": "188540",
    "end": "193700"
  },
  {
    "text": "proxy that proxy does all of the things that we all know and love around service discovery low balancing rate limiting",
    "start": "193700",
    "end": "200980"
  },
  {
    "text": "observability and you know it's gonna pick a target it's going to send that request to the other side the other side",
    "start": "200980",
    "end": "207709"
  },
  {
    "text": "will deliver it to the service and then it'll all come back and the idea here is that each individual service only knows",
    "start": "207709",
    "end": "214280"
  },
  {
    "text": "about its local proxy it doesn't have to actually understand anything about the underlying network topology and it also",
    "start": "214280",
    "end": "221840"
  },
  {
    "text": "allows it to be the case that your service can be written in any language it doesn't matter what language it is",
    "start": "221840",
    "end": "227420"
  },
  {
    "text": "high school goes C++ Java doesn't matter that service can talk to its proxy on",
    "start": "227420",
    "end": "233090"
  },
  {
    "text": "localhost it can you know have something some magic happen timeouts whatever and then the response comes back and it and",
    "start": "233090",
    "end": "240230"
  },
  {
    "text": "it comes back and it really does make that network transparent in a way where",
    "start": "240230",
    "end": "245840"
  },
  {
    "text": "people can focus on business logic and they don't have to worry about what the network topology actually looks like so",
    "start": "245840",
    "end": "252110"
  },
  {
    "start": "251000",
    "end": "434000"
  },
  {
    "text": "from an envoy perspective and I'm gonna go through this superfast Envoy is a",
    "start": "252110",
    "end": "257510"
  },
  {
    "text": "proxy it's a self-contained proxy it is not a library so it's an out of process architecture",
    "start": "257510",
    "end": "263180"
  },
  {
    "text": "so when I showed you that last side let last slide on voice it's under the service and it basically",
    "start": "263180",
    "end": "268879"
  },
  {
    "text": "receives all of those calls and those calls go out and they actually come back envoy is written in C++ 11 so it's very",
    "start": "268879",
    "end": "274789"
  },
  {
    "text": "fast as well as very productive fundamentally envoy is an l3 l4 filter",
    "start": "274789",
    "end": "280129"
  },
  {
    "text": "architecture so what that means is that bytes come in and bytes go out so we can support multiple multiple protocols we",
    "start": "280129",
    "end": "286849"
  },
  {
    "text": "can do rest we can do Redis we can do MongoDB we can do my sequel this is",
    "start": "286849",
    "end": "292159"
  },
  {
    "text": "going to be problematic and because obviously we do lots and lots of h1 and",
    "start": "292159",
    "end": "297800"
  },
  {
    "text": "h2 and rest and all of these things we do a lot of filtering up at l7 so we can operate on message boundaries so headers",
    "start": "297800",
    "end": "304580"
  },
  {
    "text": "body as well as trailers envoy is an h2 proxy first so we can proxy from H 1 to",
    "start": "304580",
    "end": "309650"
  },
  {
    "text": "H 2 and H 2 back to H 1 we spend a lot of time doing service discovery as well as active and passive health checking so",
    "start": "309650",
    "end": "316610"
  },
  {
    "text": "active health checking is the idea that I'm going to periodically send a ping or a health check request to some other",
    "start": "316610",
    "end": "322430"
  },
  {
    "text": "service passive health checking is outlier detection so that's the idea that I can monitor traffic that's",
    "start": "322430",
    "end": "328310"
  },
  {
    "text": "happening within my data plane and and I can go back sorry folks",
    "start": "328310",
    "end": "333680"
  },
  {
    "text": "and and I I can go back and I can see if there's consecutive 500s or if a",
    "start": "333680",
    "end": "340610"
  },
  {
    "text": "particular hose has some type of success rate that's out of out of some variants from an advanced load balancing",
    "start": "340610",
    "end": "346909"
  },
  {
    "text": "perspective we can do things like timeouts and retries and circuit breaking and shadowing and all types of",
    "start": "346909",
    "end": "352759"
  },
  {
    "text": "fun stuff and we'll talk about it a lot but when I give talks about service mesh and envoy the most important thing is",
    "start": "352759",
    "end": "359360"
  },
  {
    "text": "really observability it's all about observability it's about understanding what's going on in your system and if",
    "start": "359360",
    "end": "365900"
  },
  {
    "text": "there are problems in your system being able to pinpoint where that problem actually happened and it comes down to",
    "start": "365900",
    "end": "371569"
  },
  {
    "text": "stats logging as well as tracing the other thing that I would mention is that what you'll hear is that people talk a",
    "start": "371569",
    "end": "378080"
  },
  {
    "text": "lot at conferences like these about service mesh but all services all Internet services typically have some",
    "start": "378080",
    "end": "384560"
  },
  {
    "text": "type of edge proxy right and what you see today mostly is that people deploy different proxies for their internal",
    "start": "384560",
    "end": "390949"
  },
  {
    "text": "proxies as well as for their edge so people might use nginx for their edge and they might use HT a proxy or",
    "start": "390949",
    "end": "397250"
  },
  {
    "text": "something else for their internal proxies and for an operational perspective 99% or more",
    "start": "397250",
    "end": "404190"
  },
  {
    "text": "of what these proxies do are the same right they all do service discovery they all do time outs they all do rate",
    "start": "404190",
    "end": "410370"
  },
  {
    "text": "laminating they have they all do circuit breaking and from from ops perspective running the same software on the edge",
    "start": "410370",
    "end": "417270"
  },
  {
    "text": "and doing TLS termination and running the same proxy on your internal service to service network has huge operational",
    "start": "417270",
    "end": "424590"
  },
  {
    "text": "gains it's just it's kind of like a core tenet of systems engineering let's software you can run less less",
    "start": "424590",
    "end": "431010"
  },
  {
    "text": "software you have to understand it's it's vastly simpler so this is lift",
    "start": "431010",
    "end": "436620"
  },
  {
    "start": "434000",
    "end": "528000"
  },
  {
    "text": "about five five years ago and and this is you know almost a standard lamp stack right like this is the way that every",
    "start": "436620",
    "end": "443490"
  },
  {
    "text": "every startup starts we have clients we we go to the internet you know we have",
    "start": "443490",
    "end": "449100"
  },
  {
    "text": "the AWS TLB obviously now AWS has their advanced load balancer but you know most",
    "start": "449100",
    "end": "455070"
  },
  {
    "text": "cloud providers still have a fairly basic load balancing system lift was originally built on a PHP Apache",
    "start": "455070",
    "end": "461250"
  },
  {
    "text": "monolith and our single data store was MongoDB and you know this is supposedly",
    "start": "461250",
    "end": "466890"
  },
  {
    "text": "simple there's no there's no services but what I'd like to point out really briefly here is that even even in this",
    "start": "466890",
    "end": "474240"
  },
  {
    "text": "basic architecture that we have here there there still is networking right like you still have the load balancer",
    "start": "474240",
    "end": "480120"
  },
  {
    "text": "you still have the database you you still have your you know monolithic service and even with this basic",
    "start": "480120",
    "end": "486510"
  },
  {
    "text": "architecture trying to understand what's actually going on here from did the",
    "start": "486510",
    "end": "492030"
  },
  {
    "text": "client have a problem on the Internet was the Amazon load balancer crapping out did PHP have a buged at MongoDB do",
    "start": "492030",
    "end": "499680"
  },
  {
    "text": "something bad it's actually really hard to know so even in this very simple state at lyft we were already having a",
    "start": "499680",
    "end": "505680"
  },
  {
    "text": "lot of operational problems trying to understand how how is this thing working how like how is it actually happening",
    "start": "505680",
    "end": "511890"
  },
  {
    "text": "and we're gonna go into why we built on boy and how we deployed it but I actually want to show this because it's",
    "start": "511890",
    "end": "518520"
  },
  {
    "text": "instructive again to see that you'd actually don't need you know hundreds of services to make something like Envoy",
    "start": "518520",
    "end": "525030"
  },
  {
    "text": "useful it can be useful with only very few services so fast forward to today",
    "start": "525030",
    "end": "530580"
  },
  {
    "start": "528000",
    "end": "606000"
  },
  {
    "text": "this is lifts architecture today roughly we still have clients still have internet we have a set of TCP",
    "start": "530580",
    "end": "538049"
  },
  {
    "text": "load balancers so very basic edge load balancers and in there we come to our",
    "start": "538049",
    "end": "543149"
  },
  {
    "text": "front edge on voice so we run a fleet of edge ingress proxies which do l7 parsing",
    "start": "543149",
    "end": "549420"
  },
  {
    "text": "and TLS termination and things like that we still have our monolith I have five years later and probably for many more",
    "start": "549420",
    "end": "556259"
  },
  {
    "text": "years we are decomposing that monolith and we have lots and lots of services written",
    "start": "556259",
    "end": "561660"
  },
  {
    "text": "and go and written in Python and we run envoy we have a hundred percent coverage at lyft so envoy runs co-located next to",
    "start": "561660",
    "end": "570089"
  },
  {
    "text": "every service at lip and has hundreds of services and then to our back ends we have MongoDB still we have dynamo DB",
    "start": "570089",
    "end": "577769"
  },
  {
    "text": "we're actually starting to use spanner from Google and we obviously do a whole lot of stats and tracing and and you",
    "start": "577769",
    "end": "584279"
  },
  {
    "text": "know a whole whole bunch of other stuff and again the important takeaway here is that we run envoy on each and every node",
    "start": "584279",
    "end": "593730"
  },
  {
    "text": "so every hop that we have from ingress to egress we can have a point-to-point",
    "start": "593730",
    "end": "599429"
  },
  {
    "text": "link from stats and tracing and logging that we can look at to actually understand what is going on okay so that",
    "start": "599429",
    "end": "609059"
  },
  {
    "text": "gives you kind of the overview of what happened so like I was saying in the",
    "start": "609059",
    "end": "614129"
  },
  {
    "text": "intro you don't go from what we had before to what we actually have now you",
    "start": "614129",
    "end": "619470"
  },
  {
    "text": "don't do that overnight you can't just automatically roll out envoy on hundreds of services it doesn't work that way so",
    "start": "619470",
    "end": "625649"
  },
  {
    "text": "what we're gonna do is I'm actually gonna talk you through kind of how and why we develop envoy and we're gonna",
    "start": "625649",
    "end": "631649"
  },
  {
    "text": "talk about the incremental steps that we took to actually roll it out and talk about you know the things that are",
    "start": "631649",
    "end": "637439"
  },
  {
    "text": "developers that live found most useful because as you're starting to think about rolling out some of these proxies",
    "start": "637439",
    "end": "642779"
  },
  {
    "text": "a lot of it is actually selling it to your internal teams and a lot of times they want to know what what are we going",
    "start": "642779",
    "end": "649739"
  },
  {
    "text": "to get out of this right like is this actually useful and I know that the teaser here is that it wasn't easy it",
    "start": "649739",
    "end": "656189"
  },
  {
    "text": "was a lot of work okay so what we did is we we started with the edge proxy and",
    "start": "656189",
    "end": "663209"
  },
  {
    "text": "actually talked about this briefly and almost every internet application has some avenge proxy you have clients on phones",
    "start": "663209",
    "end": "670500"
  },
  {
    "text": "you have to get back to your back-end services and from a fundamental perspective if your app is not healthy",
    "start": "670500",
    "end": "677130"
  },
  {
    "text": "at the edge it doesn't really matter what you do internally so having having that observability at the edge location",
    "start": "677130",
    "end": "684450"
  },
  {
    "text": "is super important and we could have a whole long conversation about how it's important to extend that observability",
    "start": "684450",
    "end": "689790"
  },
  {
    "text": "all the way out to the client but that's not not this talk but from the envoy perspective it's critical that we get",
    "start": "689790",
    "end": "696150"
  },
  {
    "text": "good stats out to the edge and even to this day if you look at the",
    "start": "696150",
    "end": "701490"
  },
  {
    "text": "state-of-the-art cloud solutions state-of-the-art being Google's load balancers and Amazon's elastic load",
    "start": "701490",
    "end": "706710"
  },
  {
    "text": "balancer that the alb product they're terrible I mean like they're still really terrible they're black boxes",
    "start": "706710",
    "end": "713910"
  },
  {
    "text": "where you don't actually understand what's going on the observability coming out of them is still fairly bad",
    "start": "713910",
    "end": "720180"
  },
  {
    "text": "I think Amazon in there a OB product only got percentile latency metrics in",
    "start": "720180",
    "end": "725340"
  },
  {
    "text": "like the last six or nine months or something like that it's it's quite bad and you know of course you're at the",
    "start": "725340",
    "end": "730980"
  },
  {
    "text": "whim of what they're doing from a modern TLS perspective they just tend to move a lot more slowly so from the perspective",
    "start": "730980",
    "end": "739710"
  },
  {
    "text": "of dashboards and tracing and logging it was very important for us at lyft to",
    "start": "739710",
    "end": "745470"
  },
  {
    "text": "prove out this new proxy and actually put it on the edge and replace the ELP and show that we can get very good stats",
    "start": "745470",
    "end": "752370"
  },
  {
    "text": "and what we found almost immediately here's an example of one of the",
    "start": "752370",
    "end": "757500"
  },
  {
    "start": "753000",
    "end": "812000"
  },
  {
    "text": "dashboards that would actually provide people at at lyft and what you're seeing here is you're seeing on a per host",
    "start": "757500",
    "end": "762750"
  },
  {
    "text": "basis here our our our front edge nodes and you're seeing stats like the number of connections per second the number of",
    "start": "762750",
    "end": "768900"
  },
  {
    "text": "requests per second but then on the bottom row you're seeing latency on a per back-end service basis or you're",
    "start": "768900",
    "end": "775080"
  },
  {
    "text": "seeing the 500s on a per back-end service basis and this is a tiny portion of the metrics that we actually show",
    "start": "775080",
    "end": "781230"
  },
  {
    "text": "people but the idea here is that you go from a situation in which you're trying",
    "start": "781230",
    "end": "788040"
  },
  {
    "text": "to go into s3 and pull down logs and then you know and kind of understand what's going on and the dashboards and",
    "start": "788040",
    "end": "793580"
  },
  {
    "text": "you know cloud watch are super bad to a situation where we have like excellent",
    "start": "793580",
    "end": "799890"
  },
  {
    "text": "visibility and we can much quicker pinpoint what are problematic services or what are causing",
    "start": "799890",
    "end": "805679"
  },
  {
    "text": "problems for our customers so again it's all about observability observability observability so now now we're on our",
    "start": "805679",
    "end": "814800"
  },
  {
    "start": "812000",
    "end": "968000"
  },
  {
    "text": "web scale slide and if this was a 45-minute talk we would stop here we would watch watch the MongoDB use web",
    "start": "814800",
    "end": "821249"
  },
  {
    "text": "scale video but it's not 45 minutes so I would encourage all of you if you have not seen the video and the little",
    "start": "821249",
    "end": "827399"
  },
  {
    "text": "asterisk thing down there to go watch it right now because it is the funniest video that you have ever seen",
    "start": "827399",
    "end": "833369"
  },
  {
    "text": "so lift probably at this point is one of the biggest MongoDB installations in the",
    "start": "833369",
    "end": "838949"
  },
  {
    "text": "world I'm guessing like we have a lot of MongoDB and MongoDB has been a thorn in",
    "start": "838949",
    "end": "846329"
  },
  {
    "text": "our side for a a long time and one of the things that you'll find with MongoDB even in the most recent releases is",
    "start": "846329",
    "end": "854389"
  },
  {
    "text": "MongoDB has a very poor connection handling model and by that it uses a",
    "start": "854389",
    "end": "859499"
  },
  {
    "text": "thread per connection and high-performance networking that is a big no-no and what that means is that",
    "start": "859499",
    "end": "864990"
  },
  {
    "text": "MongoDB will das itself very easily if MongoDB does something bad it'll start",
    "start": "864990",
    "end": "870209"
  },
  {
    "text": "you know kind of refusing connections then clients will reconnect and then you'll have like a thousand threads and",
    "start": "870209",
    "end": "876179"
  },
  {
    "text": "then the thing will just shut down your and your you know basically in this death spiral so what one of the things",
    "start": "876179",
    "end": "881850"
  },
  {
    "text": "that we realize that we could do pretty quickly with this proxy so we're already running it on the edge now we have our",
    "start": "881850",
    "end": "887879"
  },
  {
    "text": "PHP monolith we realized that we could use envoy actually on the PHP monolith",
    "start": "887879",
    "end": "894059"
  },
  {
    "text": "to collapse connections from PHP to  so basically monitor and rate",
    "start": "894059",
    "end": "900540"
  },
  {
    "text": "limit all of the connections that are coming into MongoDB from the client side of things and hey while we're here we",
    "start": "900540",
    "end": "906869"
  },
  {
    "text": "can actually parse the B song and we can suck out amazing stats about latency and tables and query patterns and multi gets",
    "start": "906869",
    "end": "913799"
  },
  {
    "text": "and scatter gets and and and those types of things and you know we can we can do",
    "start": "913799",
    "end": "919230"
  },
  {
    "text": "this for all services so now we're also doing at this point we're doing on Python so instead of rewriting all of",
    "start": "919230",
    "end": "925709"
  },
  {
    "text": "this rate-limiting and all of this great functionality that we built in every  driver we write it once a non-void",
    "start": "925709",
    "end": "931889"
  },
  {
    "text": "we point all of the applications at envoy envoy talks to and lo and behold",
    "start": "931889",
    "end": "937199"
  },
  {
    "text": "we have no more outages due to  death spirals so our current stack",
    "start": "937199",
    "end": "942360"
  },
  {
    "text": "still looks exactly like this so we now talk to from PHP Python Ango all",
    "start": "942360",
    "end": "947730"
  },
  {
    "text": "of that traffic runs through envoy and via the Envoy filter chain that I talked",
    "start": "947730",
    "end": "954179"
  },
  {
    "text": "about before we can change different functionality we can build in stats we can build in rate-limiting we can build",
    "start": "954179",
    "end": "960209"
  },
  {
    "text": "in all of this cool functionality and we get that for free the applications don't have to do anything we just roll it out",
    "start": "960209",
    "end": "965790"
  },
  {
    "text": "and it and it just works so once we did that so this is you know we're now going",
    "start": "965790",
    "end": "972569"
  },
  {
    "start": "968000",
    "end": "1072000"
  },
  {
    "text": "about a couple years and we have envoy running at the edge we have envoy running on our on our monolith we're",
    "start": "972569",
    "end": "978990"
  },
  {
    "text": "still using internal load balancers from Amazon to actually do service discovery so obviously when the edge has to talk",
    "start": "978990",
    "end": "985980"
  },
  {
    "text": "to the backend service we have to find those back-end services so services boots they come up they they basically",
    "start": "985980",
    "end": "993420"
  },
  {
    "text": "register into the end of the load balancer and then you know the load balancers is is going to come and",
    "start": "993420",
    "end": "999540"
  },
  {
    "text": "actually pick that back and what you find is that again like these load balancers these cloud products they're",
    "start": "999540",
    "end": "1006319"
  },
  {
    "text": "you know they're getting better but there's still there are black boxes and that extra hop from an observer from it",
    "start": "1006319",
    "end": "1013129"
  },
  {
    "text": "from a kind of an Operations perspective when you have failure now you have this giant thing in there that you don't know",
    "start": "1013129",
    "end": "1019610"
  },
  {
    "text": "what the problem is and you have to figure out well it could have been a bad you'll be instance it could have been",
    "start": "1019610",
    "end": "1025938"
  },
  {
    "text": "the ec2 Network it could have been my application I have no idea so you're you're putting this big thing that's in",
    "start": "1025939",
    "end": "1032449"
  },
  {
    "text": "the traffic path a single point of failure between any two endpoints and that just makes understanding what's",
    "start": "1032449",
    "end": "1038959"
  },
  {
    "text": "happening in that network topology so much more complicated so so what we found here is but even with this even",
    "start": "1038959",
    "end": "1047240"
  },
  {
    "text": "with the with the ELB in the middle because we're running envoy on one side and we're running envoy on on the other",
    "start": "1047240",
    "end": "1053390"
  },
  {
    "text": "side we still get really amazing stats we still get although the egress stats from the edge nodes we still get all of",
    "start": "1053390",
    "end": "1059809"
  },
  {
    "text": "the ingress stats on the PHP nodes we can do things like buffer so that you know we can deal batter it with PHP",
    "start": "1059809",
    "end": "1065980"
  },
  {
    "text": "Apache traffic handling you know so we're still getting lots of",
    "start": "1065980",
    "end": "1071090"
  },
  {
    "text": "benefits but the the next stage here is that because of what I was saying before",
    "start": "1071090",
    "end": "1077230"
  },
  {
    "start": "1072000",
    "end": "1233000"
  },
  {
    "text": "we would like to get rid of those internal though balancers those internal load balancers they make debugging",
    "start": "1077230",
    "end": "1083390"
  },
  {
    "text": "harder there are a single point of failure you just do not want them they don't serve any any good purpose so we",
    "start": "1083390",
    "end": "1092210"
  },
  {
    "text": "would like to do Direct Connect and at this point obviously if we're going to do Direct Connect we need service",
    "start": "1092210",
    "end": "1098240"
  },
  {
    "text": "discovery and I'll take a little detour here is if you look around the industry the way that most people at most kind of",
    "start": "1098240",
    "end": "1105110"
  },
  {
    "text": "internet companies have done service discovery historically is they've done them using systems like zookeeper or",
    "start": "1105110",
    "end": "1111890"
  },
  {
    "text": "console or something along those lines and these are great systems they're fine but what you'll find is that these are",
    "start": "1111890",
    "end": "1119630"
  },
  {
    "text": "all fully consistent systems they all use leader election they all require care and maintenance and they all go",
    "start": "1119630",
    "end": "1125750"
  },
  {
    "text": "down a lot and you'll find that most big companies have teams that are dedicated to keeping zookeeper and similar systems",
    "start": "1125750",
    "end": "1132860"
  },
  {
    "text": "running especially at at scale so when we started with envoy we made the kind",
    "start": "1132860",
    "end": "1138800"
  },
  {
    "text": "of explicit decision that you know service discovery for networking it's",
    "start": "1138800",
    "end": "1144410"
  },
  {
    "text": "not a consistent problem it's an eventually consistent problem systems scale up and scale down and things",
    "start": "1144410",
    "end": "1150170"
  },
  {
    "text": "but--and die right it doesn't have to be consistent it just has to converge so we",
    "start": "1150170",
    "end": "1155300"
  },
  {
    "text": "made the very explicit decision that we would go through and we would build an",
    "start": "1155300",
    "end": "1160430"
  },
  {
    "text": "eventually consistent system and that system which we still use today is about",
    "start": "1160430",
    "end": "1166430"
  },
  {
    "text": "200 lines of Python and a cron job and the cron job runs on boot basically it",
    "start": "1166430",
    "end": "1174140"
  },
  {
    "text": "runs every minute we have a service that writes into into dynamodb and then we",
    "start": "1174140",
    "end": "1179690"
  },
  {
    "text": "basically have a sweeper on that table or if a service doesn't check in in X minutes say 10 minutes we just delete it",
    "start": "1179690",
    "end": "1186550"
  },
  {
    "text": "the system is dead simple we literally have not edited the code in over a year and we have had zero outages",
    "start": "1186550",
    "end": "1192920"
  },
  {
    "text": "and because of all the caching it's eventually consistent but because we cache in the service because",
    "start": "1192920",
    "end": "1200610"
  },
  {
    "text": "cash-in envoy and because of this eventually consistent process that the cron jobs right into this system we have",
    "start": "1200610",
    "end": "1207780"
  },
  {
    "text": "run tests where we have deleted the entire Dynamo table from under the service everything keeps going we",
    "start": "1207780",
    "end": "1213480"
  },
  {
    "text": "obviously can't scale up but everything is fine we make the Dynamo table again",
    "start": "1213480",
    "end": "1219000"
  },
  {
    "text": "everything starts checking in again and we're totally fine so I would encourage everyone to think very very very",
    "start": "1219000",
    "end": "1225840"
  },
  {
    "text": "carefully about whether you really need a fully consistent system when eventual consistency would probably be fine so",
    "start": "1225840",
    "end": "1234900"
  },
  {
    "start": "1233000",
    "end": "1371000"
  },
  {
    "text": "let's talk a little bit about how developers at lyft actually actually use",
    "start": "1234900",
    "end": "1239940"
  },
  {
    "text": "envoy so at this point you know we've we're basically building the mesh we're",
    "start": "1239940",
    "end": "1245429"
  },
  {
    "text": "not fully rolled out but you know we're building this mesh we're actually getting a lot of value from it and I",
    "start": "1245429",
    "end": "1252150"
  },
  {
    "text": "actually mentioned this this morning during a panel but you'll you'll hear a lot of servers mesh talks and people",
    "start": "1252150",
    "end": "1259169"
  },
  {
    "text": "like me will get up here and say that the service mesh is magic it's like totally amazing and it is really awesome",
    "start": "1259169",
    "end": "1265610"
  },
  {
    "text": "but there there's a little there's a little thing that we don't tell you and that thing is that in order to get full",
    "start": "1265610",
    "end": "1272160"
  },
  {
    "text": "value especially around tracing you have to propagate context and that is required there's no way around that you",
    "start": "1272160",
    "end": "1279059"
  },
  {
    "text": "must have application code that actually runs because you have some header or",
    "start": "1279059",
    "end": "1284160"
  },
  {
    "text": "some piece of data that has to get propagated from your ingress point to your egress point so that you can join",
    "start": "1284160",
    "end": "1289980"
  },
  {
    "text": "those traces up so what we did at lyft is we wrote a very thin client in Python",
    "start": "1289980",
    "end": "1296010"
  },
  {
    "text": "we also have one now in Ingo this is you know we call a Envoy client it's very",
    "start": "1296010",
    "end": "1302340"
  },
  {
    "text": "simple what you're seeing here is an example of someone calling a service called switchboard the idea here is that",
    "start": "1302340",
    "end": "1308400"
  },
  {
    "text": "they don't need to understand how envoy works they want to make a request to a service they use a client they say what",
    "start": "1308400",
    "end": "1315630"
  },
  {
    "text": "the service name is they may set some options that you don't see here around timeouts or retries or various other",
    "start": "1315630",
    "end": "1321750"
  },
  {
    "text": "things and then this client is about a hundred lines of code and it calls down it knows what port envoy is actually",
    "start": "1321750",
    "end": "1329010"
  },
  {
    "text": "running on it actually goes through and it makes the call and a base of",
    "start": "1329010",
    "end": "1334470"
  },
  {
    "text": "get the response and unpacks it and most importantly it propagates IDs so if we",
    "start": "1334470",
    "end": "1340289"
  },
  {
    "text": "know for example in Python that we have you know an X request ID or an X ot span",
    "start": "1340289",
    "end": "1346020"
  },
  {
    "text": "context header that's come in and it's on the greenlit local thing or whatever it is in Python you know we'll take that",
    "start": "1346020",
    "end": "1353159"
  },
  {
    "text": "state and will propagate it to the other side and that makes it really easy for developers and go we do the same thing",
    "start": "1353159",
    "end": "1358679"
  },
  {
    "text": "with go context but the idea here again is that from a dev perspective doing a",
    "start": "1358679",
    "end": "1363840"
  },
  {
    "text": "network call is as easy as import library who do I want to call make a call get get answer okay so at this",
    "start": "1363840",
    "end": "1374070"
  },
  {
    "start": "1371000",
    "end": "1449000"
  },
  {
    "text": "point we have now rolled out on boy you know we we actually took the approach of",
    "start": "1374070",
    "end": "1379250"
  },
  {
    "text": "go go Bay and don't do the tail and I find that from a rollout perspective is",
    "start": "1379250",
    "end": "1385230"
  },
  {
    "text": "actually better because if you can run this thing and show value on your biggest services there may be a 90% long",
    "start": "1385230",
    "end": "1391470"
  },
  {
    "text": "tail of small services but if the big service people are happy it's a lot easier to get these small service people",
    "start": "1391470",
    "end": "1397260"
  },
  {
    "text": "happy and what we found is that people were quite happy like we are suddenly",
    "start": "1397260",
    "end": "1403590"
  },
  {
    "text": "saying Oh like we're not having all these problems because we do more intelligent load balancing or hate when",
    "start": "1403590",
    "end": "1409169"
  },
  {
    "text": "a problem does happen we can actually debug it isn't that awesome so now what we did is we entered the slog period and",
    "start": "1409169",
    "end": "1416220"
  },
  {
    "text": "during this period we actually had a spreadsheet and the spreadsheet was",
    "start": "1416220",
    "end": "1421890"
  },
  {
    "text": "updated on a daily basis we had a program that would scrape out all the services and figure out are they using",
    "start": "1421890",
    "end": "1428100"
  },
  {
    "text": "envoy are they not using envoy we would build a Google spreadsheet every day and we would go through and we would burn",
    "start": "1428100",
    "end": "1434460"
  },
  {
    "text": "that spreadsheet down and that was a combination of just you know carrot and saying like could you please do this",
    "start": "1434460",
    "end": "1440940"
  },
  {
    "text": "it'll work better right like wouldn't this be great we went in and did some of the work ourselves to be perfectly",
    "start": "1440940",
    "end": "1447390"
  },
  {
    "text": "honest with you I was expecting to have this take much more of a stick approach",
    "start": "1447390",
    "end": "1453210"
  },
  {
    "start": "1449000",
    "end": "1515000"
  },
  {
    "text": "like I thought we were gonna have to go get in there and kind of get management to go make this happen to be honest it",
    "start": "1453210",
    "end": "1459480"
  },
  {
    "text": "was it was a lot of carrot like people loved what they were getting like they love the features they love the",
    "start": "1459480",
    "end": "1465419"
  },
  {
    "text": "observability they loved the fact that they just no longer had to worried about how certain portions of the system actually worked so in",
    "start": "1465419",
    "end": "1471870"
  },
  {
    "text": "hindsight it was a long slog but I think what you'll find is that most developers",
    "start": "1471870",
    "end": "1477540"
  },
  {
    "text": "most people that write business logic that actually run on a service mesh they",
    "start": "1477540",
    "end": "1484070"
  },
  {
    "text": "don't want to go back and in fact it's been really interesting because lyft when I joined was about 80 developers it",
    "start": "1484070",
    "end": "1491040"
  },
  {
    "text": "was quite small we're over 500 now and you know when I joined there was people that knew the old way and there was",
    "start": "1491040",
    "end": "1497970"
  },
  {
    "text": "people that knew the new way but you know it was it like now people come in",
    "start": "1497970",
    "end": "1505710"
  },
  {
    "text": "and they only know the new way and I think for them it's kind of interesting to see because they just expect it to",
    "start": "1505710",
    "end": "1511290"
  },
  {
    "text": "just work right they don't have to worry about all the problems that we actually used to have so let's briefly talk about",
    "start": "1511290",
    "end": "1517590"
  },
  {
    "start": "1515000",
    "end": "1556000"
  },
  {
    "text": "kind of how we did config management and this again I just wanted to explain you",
    "start": "1517590",
    "end": "1522750"
  },
  {
    "text": "know that we come to the conferences and again people talk about all this awesome stuff that we have things happen in a",
    "start": "1522750",
    "end": "1529020"
  },
  {
    "text": "much less awesome way like not so awesome so when we did Envoy you know what we did originally is we literally",
    "start": "1529020",
    "end": "1535410"
  },
  {
    "text": "would hand write all the configs and we would check them in and we would bundle them with the binary and we would deploy",
    "start": "1535410",
    "end": "1541470"
  },
  {
    "text": "it out and that was how we did it and that able that and that and that allowed us to move very fast because we could",
    "start": "1541470",
    "end": "1547830"
  },
  {
    "text": "make breaking config changes but it's very tedious because we were literally handwriting configs for each and every",
    "start": "1547830",
    "end": "1553380"
  },
  {
    "text": "service so that was obviously not not going to scale so we did then is what",
    "start": "1553380",
    "end": "1558660"
  },
  {
    "start": "1556000",
    "end": "1625000"
  },
  {
    "text": "everyone does they bring in some templating code and we brought in Jinja so and and what we actually developed is",
    "start": "1558660",
    "end": "1565680"
  },
  {
    "text": "a system which we called config gen which we still use to this day certain parts of and what that is is you",
    "start": "1565680",
    "end": "1572520"
  },
  {
    "text": "basically realize that a lot of the Envoy configurations they become the",
    "start": "1572520",
    "end": "1577770"
  },
  {
    "text": "same like there's a lot of commonalities and how they're doing it's mostly the same with a few variables that end up",
    "start": "1577770",
    "end": "1583770"
  },
  {
    "text": "being different so we ended up building a whole system that would effectively take a set of templates a set of",
    "start": "1583770",
    "end": "1589830"
  },
  {
    "text": "services and a set of variables and use Jinja iterate over them and build an",
    "start": "1589830",
    "end": "1594960"
  },
  {
    "text": "entire set of configurations and it's at this point that we really realize with Envoy that",
    "start": "1594960",
    "end": "1601950"
  },
  {
    "text": "any complex envoy deployment the the configuration is going to be handwritten",
    "start": "1601950",
    "end": "1607380"
  },
  {
    "text": "our sorry it's going to be machine generated somehow there's just no way around that you can do it using template",
    "start": "1607380",
    "end": "1613350"
  },
  {
    "text": "you can use it you know with something like SDO pilots but something is going to do it like no one is going to sit",
    "start": "1613350",
    "end": "1619950"
  },
  {
    "text": "around and hand make configurations for hundreds of different services it's just not realistic so at that point what we",
    "start": "1619950",
    "end": "1627659"
  },
  {
    "start": "1625000",
    "end": "1694000"
  },
  {
    "text": "did is we moved to a hybrid system and the way that the hybrid system actually",
    "start": "1627659",
    "end": "1633269"
  },
  {
    "text": "works is we did a combination of build time template generation and then what",
    "start": "1633269",
    "end": "1639149"
  },
  {
    "text": "we would do is we'd actually ship the templates to each box and the Jinja",
    "start": "1639149",
    "end": "1645059"
  },
  {
    "text": "files and we would actually run the tempo generation code on the hosts so",
    "start": "1645059",
    "end": "1650519"
  },
  {
    "text": "what we do at lyft is every service that lyft has a manifest and the manifest says things like these are the tests",
    "start": "1650519",
    "end": "1656850"
  },
  {
    "text": "that run you know and for networking these are the services we talk to these are the circuit braking settings blah",
    "start": "1656850",
    "end": "1663090"
  },
  {
    "text": "blah blah blah blah so what we did is we would take in this manifest data on the",
    "start": "1663090",
    "end": "1669480"
  },
  {
    "text": "node take it in with the ginger templates and generate the final envoy configuration on the node so now we have",
    "start": "1669480",
    "end": "1676830"
  },
  {
    "text": "a mix of central template generation with deploy but then the the manifest",
    "start": "1676830",
    "end": "1682049"
  },
  {
    "text": "information gets joined on the host during salt run because as you can see from here we're not yet a kubernetes",
    "start": "1682049",
    "end": "1688289"
  },
  {
    "text": "native shop we're still using VMs and salts and all types of legacy infrastructure so one of the goals of",
    "start": "1688289",
    "end": "1697500"
  },
  {
    "start": "1694000",
    "end": "1781000"
  },
  {
    "text": "ongoing has always been to be kind of what I call a universal data plane the",
    "start": "1697500",
    "end": "1702659"
  },
  {
    "text": "idea is that we have a set of api's we can build a control plane and the",
    "start": "1702659",
    "end": "1708000"
  },
  {
    "text": "control plane can speak those api's and then envoy will enact those",
    "start": "1708000",
    "end": "1713010"
  },
  {
    "text": "configurations and I'll do it dynamically and what that will allow you to do theoretically is have a single",
    "start": "1713010",
    "end": "1718529"
  },
  {
    "text": "bootstrap configuration and a management server which provides the on voice all",
    "start": "1718529",
    "end": "1723630"
  },
  {
    "text": "of the configuration so you're kind of now seeing this transition period we've gone from hand configurations to",
    "start": "1723630",
    "end": "1730830"
  },
  {
    "text": "machine generated Jinja but now we're moving towards very complex and servers and you see that with sto",
    "start": "1730830",
    "end": "1736690"
  },
  {
    "text": "Pilate and there's actually people that are that are writing all types of different solutions and in the v1 API we",
    "start": "1736690",
    "end": "1743680"
  },
  {
    "text": "have a couple of different api's we have service discovery service cluster discovery service route discovery",
    "start": "1743680",
    "end": "1749050"
  },
  {
    "text": "service listener discovery service the idea here is that ultimately we allow every aspect of on valais that would be",
    "start": "1749050",
    "end": "1755920"
  },
  {
    "text": "reasonably reconfigured to be configured by a remote management server you're not required to use these so a goal of envoy",
    "start": "1755920",
    "end": "1763060"
  },
  {
    "text": "is that you take the complexity that you need if you want handwritten configs use",
    "start": "1763060",
    "end": "1768250"
  },
  {
    "text": "handwritten can fix if you want STS only use STS only if you want the whole",
    "start": "1768250",
    "end": "1773410"
  },
  {
    "text": "enchilada use it and it lifts currently we use SDS RTS and CTS will be using LDS soon and",
    "start": "1773410",
    "end": "1782230"
  },
  {
    "start": "1781000",
    "end": "1863000"
  },
  {
    "text": "this is roughly what it looks like today and what you're going to see in all of",
    "start": "1782230",
    "end": "1787390"
  },
  {
    "text": "the other talks that you'll have times here is that this looks a lot like SDO pilot which is not very surprising",
    "start": "1787390",
    "end": "1792610"
  },
  {
    "text": "because these things have evolved in in parallel and the way that this works is",
    "start": "1792610",
    "end": "1798100"
  },
  {
    "text": "that in envoy today at lift we have our legacy hundred line Python service",
    "start": "1798100",
    "end": "1803170"
  },
  {
    "text": "discovery thing we have a new service called envoy manager which is which is which is like pilot and we are now",
    "start": "1803170",
    "end": "1812470"
  },
  {
    "text": "taking in you know all this information from our legacy infrastructure from our",
    "start": "1812470",
    "end": "1817570"
  },
  {
    "text": "cron jobs from our manifests we're merging them together and studying that configuration to on voice so over time",
    "start": "1817570",
    "end": "1823600"
  },
  {
    "text": "the config that we ship to every host is getting smaller and smaller until it",
    "start": "1823600",
    "end": "1828610"
  },
  {
    "text": "becomes a unified bootstrap config that runs on every host never changes and",
    "start": "1828610",
    "end": "1834160"
  },
  {
    "text": "everything else comes from those management servers so that's that progression but the idea is to",
    "start": "1834160",
    "end": "1839320"
  },
  {
    "text": "understand that you can take still any of this complexity from end to end and",
    "start": "1839320",
    "end": "1845350"
  },
  {
    "text": "and you can build very very cool systems on that and we're actually now beginning",
    "start": "1845350",
    "end": "1850630"
  },
  {
    "text": "our kubernetes migration so you know this this will get a lot more complicated as we have our legacy",
    "start": "1850630",
    "end": "1856420"
  },
  {
    "text": "infrastructure and then bringing kubernetes and juggle and drug all of it so that will be very exciting",
    "start": "1856420",
    "end": "1862630"
  },
  {
    "text": "so thank you very much I thank you for thank you for dealing with my voice it's very shaky",
    "start": "1862630",
    "end": "1868730"
  },
  {
    "start": "1863000",
    "end": "2111000"
  },
  {
    "text": "you can talk to me on Twitter I think I'm almost out of time might have time for one question or so or two questions",
    "start": "1868730",
    "end": "1875650"
  },
  {
    "text": "my plug lift is hiring we have lots of good jobs so if you want to talk to me please talk to me",
    "start": "1875650",
    "end": "1882200"
  },
  {
    "text": "and we we love building the overall on bike community so please join us on our",
    "start": "1882200",
    "end": "1887240"
  },
  {
    "text": "viperox cio so thank you and I'm happy to take questions",
    "start": "1887240",
    "end": "1892410"
  },
  {
    "text": "[Applause]",
    "start": "1892410",
    "end": "1900539"
  },
  {
    "text": "speak up look yeah yeah so the question is do we do functions or or lambda",
    "start": "1904860",
    "end": "1915030"
  },
  {
    "text": "currently no I I think that lambda is or just generally functions and envoy is",
    "start": "1915030",
    "end": "1921040"
  },
  {
    "text": "going to be a very interesting thing over the next you know probably two three years mainly because functions at",
    "start": "1921040",
    "end": "1928990"
  },
  {
    "text": "lambda they require networking yeah and it's actually networking is way more complicated in that environment because",
    "start": "1928990",
    "end": "1934360"
  },
  {
    "text": "things come up and come down very quickly so the answer is no not right now but I think that's going to be a big",
    "start": "1934360",
    "end": "1940300"
  },
  {
    "text": "area of investment yep so the question",
    "start": "1940300",
    "end": "1953950"
  },
  {
    "text": "is at lyft what does our obstacle Ike there's actually if you look at the monitor Amma talks there's a couple of",
    "start": "1953950",
    "end": "1960970"
  },
  {
    "text": "talks to talks from from from lift that go into that entire thing but briefly say that we use a company called",
    "start": "1960970",
    "end": "1967270"
  },
  {
    "text": "wavefront for stats we use a company called light step for tracing we run our",
    "start": "1967270",
    "end": "1973270"
  },
  {
    "text": "own logging system which is elastic search and cabana one more question",
    "start": "1973270",
    "end": "1982410"
  },
  {
    "text": "yep so so the question is unvoyage a system called run time which is like a",
    "start": "1987650",
    "end": "1992760"
  },
  {
    "text": "decider or a feature flag system it's pretty common that many companies have these things we just have a git repo",
    "start": "1992760",
    "end": "1999450"
  },
  {
    "text": "that basically every time it gets checked into it gets sprayed out to to",
    "start": "1999450",
    "end": "2004970"
  },
  {
    "text": "all hosts on boy does a file system watch what one more question yeah sorry",
    "start": "2004970",
    "end": "2023840"
  },
  {
    "text": "it's so run so we we we do run my envoy at the service layer we don't run it",
    "start": "2023840",
    "end": "2029750"
  },
  {
    "text": "next to we run it on the server side yes so yes yep yep yep exactly",
    "start": "2029750",
    "end": "2039470"
  },
  {
    "text": "yeah all right last one yep yeah I mean",
    "start": "2039470",
    "end": "2052550"
  },
  {
    "text": "so we we are sorry so the question is will lift move more towards sto I answer",
    "start": "2052550",
    "end": "2059030"
  },
  {
    "text": "is absolutely yes I mean like we obviously have had envoy for longer than there's this do and that's kind of what",
    "start": "2059030",
    "end": "2065570"
  },
  {
    "text": "I was talking about before is that it's one thing if you're like doing this from",
    "start": "2065570",
    "end": "2070850"
  },
  {
    "text": "scratch but we have a giant system to migrate like hundreds of services millions of requests per second like",
    "start": "2070850",
    "end": "2076908"
  },
  {
    "text": "it's not something that we can just you know basically move so the goal for us is going to be to move closer to pilot I",
    "start": "2076909",
    "end": "2084530"
  },
  {
    "text": "I don't know at what time we would use mixer that that's a separate conversation but the cool thing about",
    "start": "2084530",
    "end": "2090020"
  },
  {
    "text": "SDO is that the components are actually separate so you know one can use pilot but not mix or one can use kubernetes",
    "start": "2090020",
    "end": "2096230"
  },
  {
    "text": "ingress but not something else so yes the goal is to move towards",
    "start": "2096230",
    "end": "2101410"
  },
  {
    "text": "absolutely sorry I have to go but I will stand outside so thank you yeah",
    "start": "2102789",
    "end": "2109740"
  },
  {
    "text": "[Applause]",
    "start": "2109740",
    "end": "2113450"
  }
]