[
  {
    "text": "all right so uh this is going to be the uh crossplane introduction and deep dive",
    "start": "320",
    "end": "5440"
  },
  {
    "text": "but I got a bit of a combination of material here to hopefully uh satisfy all different folks with their exposure",
    "start": "5440",
    "end": "11799"
  },
  {
    "text": "to crossplane so far so my name is Jared and then we also have uh Nick Bob and",
    "start": "11799",
    "end": "17320"
  },
  {
    "text": "Matias here uh we all contribute to the crossplane project in one way or another all right so let's start with",
    "start": "17320",
    "end": "23880"
  },
  {
    "text": "the intro stuff here first so you know when you think about what crossplane is the best way to think about it is that",
    "start": "23880",
    "end": "29480"
  },
  {
    "text": "it's a frame workor and you can use this framework to build a cloud native control plane uh the intent is that you",
    "start": "29480",
    "end": "36040"
  },
  {
    "text": "can do that in a declarative way that you don't have to write any code you can write code if you need to uh you know to",
    "start": "36040",
    "end": "42000"
  },
  {
    "text": "do more custom scenarios but hopefully you can do this All in a declarative way and end up with a cloud native control",
    "start": "42000",
    "end": "47360"
  },
  {
    "text": "plane So speaking of control planes you know the cloud providers uh they've obviously been using these uh they've",
    "start": "47360",
    "end": "52960"
  },
  {
    "text": "been building control planes and using them to manage their infrastructure for years you know control plane isn't a Brand New Concept but now with",
    "start": "52960",
    "end": "59079"
  },
  {
    "text": "crossplane though we're hoping to enable you to be able to build your own control plane and put your own opinions into it",
    "start": "59079",
    "end": "66119"
  },
  {
    "text": "so if you think about the core crossplane functionality uh and the Machinery you know there's two major",
    "start": "66119",
    "end": "71960"
  },
  {
    "text": "extensibility areas to it so on the back end uh crossplains extensible to be able",
    "start": "71960",
    "end": "77360"
  },
  {
    "text": "to basically anything that has an API uh you know all sorts of cloud infrastructure let's say um you can",
    "start": "77360",
    "end": "83759"
  },
  {
    "text": "teach crossplane to manage that infrastructure in any environment so that's the extensible backend and then",
    "start": "83759",
    "end": "89960"
  },
  {
    "text": "then on the front end you have a extensibility story for being able to compose together infrastructure and then",
    "start": "89960",
    "end": "96680"
  },
  {
    "text": "surface that to your application developers with your own abstraction uh you know expose the configuration uh",
    "start": "96680",
    "end": "102680"
  },
  {
    "text": "Fields knobs that you want to and basically help your developers have self-service abilities to provision",
    "start": "102680",
    "end": "108320"
  },
  {
    "text": "their own infrastructure all right so you know this is a cncf project right this is the",
    "start": "108320",
    "end": "114479"
  },
  {
    "text": "maintainer track this is um you know it is a community project uh and so we",
    "start": "114479",
    "end": "119920"
  },
  {
    "text": "think of it as a neutral place for people to come together and enable and move forward control planes so this",
    "start": "119920",
    "end": "126600"
  },
  {
    "text": "Project's been around for a little bit we first uh open sourced it back in uh late 2018 we are the same folks that",
    "start": "126600",
    "end": "133040"
  },
  {
    "text": "created The Rook project as well storage orchestration for kubernetes so some of you may be familiar with that as well",
    "start": "133040",
    "end": "139519"
  },
  {
    "text": "and then a little bit of History uh We've we donated it to the cncf at the sandbox level like middle of 2020 uh and",
    "start": "139519",
    "end": "146360"
  },
  {
    "text": "then we got to the by the end of 2020 where at our stable uh first V1 stable Milestone declared it ready for",
    "start": "146360",
    "end": "152120"
  },
  {
    "text": "production usage uh and then by the late 2021 we are at the incubation level just",
    "start": "152120",
    "end": "157640"
  },
  {
    "text": "last week we released our latest release which is the v1.10 release so the crossplane Project's still moving and",
    "start": "157640",
    "end": "163640"
  },
  {
    "text": "and making progress and then our next thing that we've got our sites on is uh sometime in early 2023 we want to be",
    "start": "163640",
    "end": "169360"
  },
  {
    "text": "moving to the full graduation uh with the cncf we will need your help on that uh the whole community and ecosystem and",
    "start": "169360",
    "end": "175800"
  },
  {
    "text": "we'll talk about that a little bit later uh so you know stats numbers um",
    "start": "175800",
    "end": "181000"
  },
  {
    "text": "the biggest thing for this here for me is the number of contributions for people right we've got lots of people in this room that have been contributing to",
    "start": "181000",
    "end": "186799"
  },
  {
    "text": "the project writing code opening issues giving feedback and this project is nothing without the community behind",
    "start": "186799",
    "end": "193599"
  },
  {
    "text": "it all right so let's start with some the basic functionality of managed",
    "start": "193599",
    "end": "198799"
  },
  {
    "text": "resources in crossplane so we talked about you know crossplane can manage any infrastructure uh in any environment an",
    "start": "198799",
    "end": "205000"
  },
  {
    "text": "example of this here is let's talk about AWS so AWS has something like I don't know 700 800 um services that they offer",
    "start": "205000",
    "end": "213360"
  },
  {
    "text": "U they've got a whole lot of stuff a lot of great Engineers building a lot of cool stuff so basically you know using",
    "start": "213360",
    "end": "218720"
  },
  {
    "text": "crossplane you can represent and bring all of those Cloud infrastructure and services anything with an API you can",
    "start": "218720",
    "end": "225080"
  },
  {
    "text": "bring that into the kubernetes control plane and manage it provision and create all that infrastructure from kubernetes",
    "start": "225080",
    "end": "231040"
  },
  {
    "text": "so you know networking databases certificates qes caches buckets whatever all that sort of stuff you can from the",
    "start": "231040",
    "end": "237599"
  },
  {
    "text": "kubernetes control plane provision it and manage it and so how do we do that",
    "start": "237599",
    "end": "242680"
  },
  {
    "text": "uh well probably like you expect we represent all of these cloud provider resources and you know infrastructure",
    "start": "242680",
    "end": "248720"
  },
  {
    "text": "Etc as objects in the kubernetes API so what we're looking at here on the screen",
    "start": "248720",
    "end": "254040"
  },
  {
    "text": "is uh a kubernetes API object uh with crossplane that represents an S3 bucket",
    "start": "254040",
    "end": "259560"
  },
  {
    "text": "so you know just like any other kubernetes object such as a you know deployment pod config map whatever uh",
    "start": "259560",
    "end": "266520"
  },
  {
    "text": "it's got a spec where you know that takes in the desired state all the configuration how do you want to create",
    "start": "266520",
    "end": "271600"
  },
  {
    "text": "this bucket you know you can specify all that that desired state in the spec of this bucket object and crossplane will",
    "start": "271600",
    "end": "277440"
  },
  {
    "text": "make that happen for you similarly uh you know with um oh yeah so similarly",
    "start": "277440",
    "end": "284360"
  },
  {
    "text": "with uh you know the common shape of KU is API objects they've got a spec for",
    "start": "284360",
    "end": "289440"
  },
  {
    "text": "desired State they've got a status for some of that actual State The observed State too right so everything is going",
    "start": "289440",
    "end": "294479"
  },
  {
    "text": "to be um represented with both spec and Status so we observe things and the",
    "start": "294479",
    "end": "299759"
  },
  {
    "text": "cloud provider apis or whatever infrastructure cross plan's watching and then surfaces that back up as status",
    "start": "299759",
    "end": "304880"
  },
  {
    "text": "fields and then just like uh many good API objects in kubernetes they'll generate events as well that tells the",
    "start": "304880",
    "end": "311360"
  },
  {
    "text": "story of that infrastructure how did it get provisioned okay did it run into an issue is it operating healthy etc those",
    "start": "311360",
    "end": "317880"
  },
  {
    "text": "events will tell you the story okay and then just quick implementation detail here uh so this",
    "start": "317880",
    "end": "325199"
  },
  {
    "text": "probably works exactly how you would expect it to work as well so you've on the left of the screen let's go left to right you've got uh an API object a",
    "start": "325199",
    "end": "332680"
  },
  {
    "text": "manifest you know y whatever that represents an Amazon RDS database and so You' got the spec there you're",
    "start": "332680",
    "end": "338759"
  },
  {
    "text": "specifying some of your desired configuration desired State you apply that to the kubernetes API server um you",
    "start": "338759",
    "end": "345080"
  },
  {
    "text": "can do that with Cube control apply or you can do that with um you know a get Ops methodology but flux Argo whatever",
    "start": "345080",
    "end": "352319"
  },
  {
    "text": "it gets applied to the API server there's a specific controller that's uh you know for Amazon RDS that's watching",
    "start": "352319",
    "end": "358919"
  },
  {
    "text": "the API server gets an event sees that somebody is requesting the creation of an RDS database and then it uses the",
    "start": "358919",
    "end": "364720"
  },
  {
    "text": "Amazon the AWS API to talk to AWS and actually make that uh desired state of",
    "start": "364720",
    "end": "371520"
  },
  {
    "text": "an RDS database you know actual makes it happen in the real world so that's a bit of the architecture and then one more",
    "start": "371520",
    "end": "377120"
  },
  {
    "text": "detail on that is this uh Tech stack here so from the bottom you know we're we're building this is building on you",
    "start": "377120",
    "end": "383479"
  },
  {
    "text": "know the kubernetes runtime kubernetes API Machinery right and then you know on top of that the controller runtime is",
    "start": "383479",
    "end": "389759"
  },
  {
    "text": "what we use to more quickly accelerate the uh how we build controllers in crossplane and we got a lot of nice",
    "start": "389759",
    "end": "396160"
  },
  {
    "text": "functionality there that helps us Implement reconciliation of cloud provider resources on top of that we've",
    "start": "396160",
    "end": "401479"
  },
  {
    "text": "built a opinionated specific crossplane runtime uh that helps further accelerate",
    "start": "401479",
    "end": "407280"
  },
  {
    "text": "the implementation of uh controllers and Reconciliation of managed resources Cloud prid resources infrastructure",
    "start": "407280",
    "end": "413840"
  },
  {
    "text": "stuff uh you know within crossplane and then the top layer are the all the controllers for you know RDS Dynamo DB",
    "start": "413840",
    "end": "420520"
  },
  {
    "text": "GK you know gke whatever all those resources they each have a controller that's built on this stack so I'll go",
    "start": "420520",
    "end": "426039"
  },
  {
    "text": "ahead and pass it off to my colleague Matias now to talk about the next uh bit of functionality in",
    "start": "426039",
    "end": "432720"
  },
  {
    "text": "crossplane all right so so far what Jared has been",
    "start": "434000",
    "end": "439560"
  },
  {
    "text": "talking about is getting uh uh the API of something like an S3 bucket RS",
    "start": "439560",
    "end": "445800"
  },
  {
    "text": "instance what you name it uh also other Cloud providers into your system system then the next level is that we want to",
    "start": "445800",
    "end": "453319"
  },
  {
    "text": "compose them uh together so um we want to enable building your own platform um",
    "start": "453319",
    "end": "460960"
  },
  {
    "text": "uh platform API right so that is using the existing granular resources and",
    "start": "460960",
    "end": "467240"
  },
  {
    "text": "composing them to you know something bigger something that uh you as uh you",
    "start": "467240",
    "end": "472800"
  },
  {
    "text": "want to offer to your developers Um this can be from multiple clouds right that is like a a typical example and it's",
    "start": "472800",
    "end": "480159"
  },
  {
    "text": "higher level um apis and these can be any anything right that's on your",
    "start": "480159",
    "end": "486280"
  },
  {
    "text": "decision we have a couple of examples um but I guess you know uh it's it's also up to the community to come up with good",
    "start": "486280",
    "end": "493039"
  },
  {
    "text": "examples um and I know that some folks uh talked to yesterday is like oh I have",
    "start": "493039",
    "end": "498479"
  },
  {
    "text": "this very opiniated version of it like is anyone interested and it's like yes we are interested in these right because",
    "start": "498479",
    "end": "505400"
  },
  {
    "text": "we need to as a community learn on how we're building these so there's um you",
    "start": "505400",
    "end": "510560"
  },
  {
    "text": "compose these into um you know higher level apis and offer them as a single",
    "start": "510560",
    "end": "516039"
  },
  {
    "text": "API to the developer which we're going to see um in a in a second this is all",
    "start": "516039",
    "end": "521200"
  },
  {
    "text": "uh deorative and um so there is uh lots of yaml fun so um conceptually you can",
    "start": "521200",
    "end": "530279"
  },
  {
    "text": "think about this like you know high levely like this right we have like these manag resources that Jared has",
    "start": "530279",
    "end": "535440"
  },
  {
    "text": "just talked about and they all are bundled into a provider right right so they have you have this AWS provider gke",
    "start": "535440",
    "end": "542120"
  },
  {
    "text": "Pro uh gcp provider and and Etc and then you compose them together but you offer",
    "start": "542120",
    "end": "548680"
  },
  {
    "text": "this you offer the API with an xrd um and the developer uh claims it uh with a",
    "start": "548680",
    "end": "555640"
  },
  {
    "text": "specific uh typed claim that you that you have defined so just as one example right so",
    "start": "555640",
    "end": "562959"
  },
  {
    "text": "a developer would say I would I would like to have a small postgress uh instance and uh this you you know is",
    "start": "562959",
    "end": "569839"
  },
  {
    "text": "defined how this looks like in the xrd and here we have like specific AWS",
    "start": "569839",
    "end": "575160"
  },
  {
    "text": "composition that you know takes you know configures it how you as a platform developer uh would put it",
    "start": "575160",
    "end": "583279"
  },
  {
    "text": "together no yep all right so the first thing that you need to do is create a",
    "start": "585040",
    "end": "591760"
  },
  {
    "text": "composite resource um this is like a composite resource definition or xrd crd",
    "start": "591760",
    "end": "597040"
  },
  {
    "text": "was taken so we went for the X um and we put them all all together um",
    "start": "597040",
    "end": "602440"
  },
  {
    "text": "so you have your for example you have your custom API Group that you can Define um you know with the uh usual uh",
    "start": "602440",
    "end": "609600"
  },
  {
    "text": "uh ways of doing it um and you have a standard open API V3 schema where you",
    "start": "609600",
    "end": "615640"
  },
  {
    "text": "define and how this how your API looks like on the composition slide is then is",
    "start": "615640",
    "end": "622279"
  },
  {
    "text": "like okay how does it actually work right so I said like as an example this would be the AWS example so you take the",
    "start": "622279",
    "end": "629440"
  },
  {
    "text": "uh list you you take all the managed resources uh that you want to compose into a higher level uh API you reference",
    "start": "629440",
    "end": "636480"
  },
  {
    "text": "the xrd that your uh that this composition works for um and yeah you",
    "start": "636480",
    "end": "642240"
  },
  {
    "text": "you you get all the compositions uh all the manage resources together um and you need to propagate uh information um and",
    "start": "642240",
    "end": "649760"
  },
  {
    "text": "we do this by this patching mechanism um and there you have you know uh ways of",
    "start": "649760",
    "end": "654800"
  },
  {
    "text": "propagating the information um and transforming the information this is the current way of doing it and Nick is",
    "start": "654800",
    "end": "661320"
  },
  {
    "text": "going to show in a minute um uh a new way um of also doing this like uh yeah",
    "start": "661320",
    "end": "667800"
  },
  {
    "text": "in different ways so this is about compositions right and these are the two things that you",
    "start": "667800",
    "end": "673399"
  },
  {
    "text": "need to do but obviously you don't want to do all this by hand you want to use uh existing uh packages existing",
    "start": "673399",
    "end": "681160"
  },
  {
    "text": "extensions uh so um you know if we if we think about extending crossplane there's currently two ways two major building",
    "start": "681160",
    "end": "688120"
  },
  {
    "text": "blocks that that that are relevant crossplane as Jared has said is",
    "start": "688120",
    "end": "693600"
  },
  {
    "text": "an extensible framework so we have two building blocks uh that you that that you can reason about the first one is is",
    "start": "693600",
    "end": "700760"
  },
  {
    "text": "a provider um uh there basically you know provider for for everything uh the",
    "start": "700760",
    "end": "707480"
  },
  {
    "text": "the easiest way is again the the clouds that you can reason about but also specific Services uh specific uh other",
    "start": "707480",
    "end": "715279"
  },
  {
    "text": "smaller clouds all all very different ways of of uh uh very different",
    "start": "715279",
    "end": "721560"
  },
  {
    "text": "providers for all sorts of things we also have uh code generation for these",
    "start": "721560",
    "end": "727680"
  },
  {
    "text": "providers uh so you don't uh you know you you can take existing ways of talking to an API and generate uh uh",
    "start": "727680",
    "end": "735880"
  },
  {
    "text": "providers out of it the second part is configurations and that's where we are uh using existing",
    "start": "735880",
    "end": "743639"
  },
  {
    "text": "providers so you have some kind of dependency uh way of saying okay I need one uh multiple providers and then you",
    "start": "743639",
    "end": "750839"
  },
  {
    "text": "bundle all the compositions uh that we've seen before into its own package",
    "start": "750839",
    "end": "756160"
  },
  {
    "text": "and that way you have like a single Deployable unit that you can um hand over that you can reason about uh that",
    "start": "756160",
    "end": "762760"
  },
  {
    "text": "you can collaborate on um of how you would use a specific uh a specific API",
    "start": "762760",
    "end": "769279"
  },
  {
    "text": "and how uh you know share that share that with others um yeah both um both",
    "start": "769279",
    "end": "775800"
  },
  {
    "text": "packages are uh uh just oci images so there's a spec behind it but it's",
    "start": "775800",
    "end": "780920"
  },
  {
    "text": "basically just uh yaml layers in an oci image um and yeah there's there's a nice",
    "start": "780920",
    "end": "786639"
  },
  {
    "text": "spec around it if you're interested in that uh we've got a pretty good uh provider",
    "start": "786639",
    "end": "792680"
  },
  {
    "text": "ecosystem um we have many providers from the community there's you know daily",
    "start": "792680",
    "end": "798240"
  },
  {
    "text": "there's something new coming um and we have uh just launched a Marketplace and",
    "start": "798240",
    "end": "804720"
  },
  {
    "text": "that is uh open for everyone so uh from upbound we have spefic specific providers that we offer but we are not",
    "start": "804720",
    "end": "811519"
  },
  {
    "text": "gating this in any way right so this is open for the community uh so if you have a provider and or if you think about a",
    "start": "811519",
    "end": "818680"
  },
  {
    "text": "provider please come to me talk to me we're happy to help um and you know listing them in the marketplace just you",
    "start": "818680",
    "end": "824800"
  },
  {
    "text": "know uh gives the community you know a great great way uh to reason about these find these um and collaborate on",
    "start": "824800",
    "end": "832920"
  },
  {
    "text": "these um with that said I'll hand it over to Nick",
    "start": "832920",
    "end": "839399"
  },
  {
    "text": "all right hey folks I'm Nick uh senior principal engineer at upbound and longtime crossplane maintainer so today",
    "start": "842959",
    "end": "850320"
  },
  {
    "text": "I'm going to talk to you a little bit about a new feature that we're hoping to land in uh crossplane 0.11 which I guess",
    "start": "850320",
    "end": "856240"
  },
  {
    "text": "is due in about a quarter from now we just released 0.10 sorry 1.11 we just released",
    "start": "856240",
    "end": "861839"
  },
  {
    "text": "1.10 so this functionality is uh intended to extend and give some more",
    "start": "861839",
    "end": "868759"
  },
  {
    "text": "power and flexibility to how people do composition in",
    "start": "868759",
    "end": "874000"
  },
  {
    "text": "crossplane so as mattius mentioned earlier uh you know I I'll go over this uh context pretty quickly because",
    "start": "875040",
    "end": "880560"
  },
  {
    "text": "Mattias touched on it but in crossplaying you can Define your own API types so this is an example of one of",
    "start": "880560",
    "end": "885920"
  },
  {
    "text": "those this is an XR mattius talked about this a moment ago this is defined by an xrd a composite resource definition and",
    "start": "885920",
    "end": "892480"
  },
  {
    "text": "the idea here is that you for your or let's say you're a platform team at acmo and maybe you want to let your",
    "start": "892480",
    "end": "898399"
  },
  {
    "text": "developers provision databases but you want to take away a lot of the knobs and you want to just say all the developers",
    "start": "898399",
    "end": "904639"
  },
  {
    "text": "really care about are what's the storage size for this contrived simple example",
    "start": "904639",
    "end": "909680"
  },
  {
    "text": "this is how they could do that you define the SC of this resource and then you teach crossplane what to do when a",
    "start": "909680",
    "end": "915880"
  },
  {
    "text": "crossplane sees one of these resources now as matus mentioned you",
    "start": "915880",
    "end": "921680"
  },
  {
    "text": "teach a crossplane what to do using a composition historically as mat already touched on a composition has an array of",
    "start": "921680",
    "end": "929920"
  },
  {
    "text": "resources effectively resource templates and then it can patch and",
    "start": "929920",
    "end": "935519"
  },
  {
    "text": "transform values now what this means it can copy values effectively from the instance of a composite resource into",
    "start": "935519",
    "end": "942319"
  },
  {
    "text": "the composed resources so in this case we're saying crossplay when you see an AC code",
    "start": "942319",
    "end": "948040"
  },
  {
    "text": "database what we really want you to do is make a cloud SQL instance in gcp now it doesn't have to just be one resource",
    "start": "948040",
    "end": "954160"
  },
  {
    "text": "it could be a cloud SQL instance and a firewall rule or something like that in this case we're keeping it simple",
    "start": "954160",
    "end": "960000"
  },
  {
    "text": "and then you can say all right crossplay and you can see the patches uh towards the bottom there take that storage gig",
    "start": "960000",
    "end": "966160"
  },
  {
    "text": "value and copy that into this other path basically the settings. data dis size",
    "start": "966160",
    "end": "972240"
  },
  {
    "text": "Meg and then you can also transform that you can basically say all right in this case you know multiply it to turn it",
    "start": "972240",
    "end": "977680"
  },
  {
    "text": "from uh from gig to Meg now when we designed this API type we",
    "start": "977680",
    "end": "986199"
  },
  {
    "text": "very intentionally kept it as limited as possible we did not want to grow a DSL in yaml",
    "start": "986199",
    "end": "994839"
  },
  {
    "text": "something that tries to compete with a general purpose programming language and speaking of someone who's been a platform engineer in SRE for my entire",
    "start": "994839",
    "end": "1001319"
  },
  {
    "text": "career I kind of know that it's really easy to fall into the temptation of oh I just need this feature from this language I just need feature X or",
    "start": "1001319",
    "end": "1007360"
  },
  {
    "text": "feature y I'll add it on I'll bolt it on and then you have this really sort of incoherent weird configuration file so",
    "start": "1007360",
    "end": "1013839"
  },
  {
    "text": "we decided to try and be as conservative as possible we designed this for relatively simple use cases so things",
    "start": "1013839",
    "end": "1020759"
  },
  {
    "text": "that you can't do today in composition in crossplane for example includes conditionals you can't say if this input",
    "start": "1020759",
    "end": "1026600"
  },
  {
    "text": "then make this resource otherwise don't or do this patch otherwise don't you can't do iteration in composition today",
    "start": "1026600",
    "end": "1033678"
  },
  {
    "text": "so you can't say uh if there are five resource sorry if if the spec is five",
    "start": "1033679",
    "end": "1040678"
  },
  {
    "text": "then make five subnets or something like that that's not possible in crossplane today so our idea was that we always",
    "start": "1040679",
    "end": "1046360"
  },
  {
    "text": "wanted to give people the ability to use their uh existing tooling that they're comfortable with or a general purpose",
    "start": "1046360",
    "end": "1053280"
  },
  {
    "text": "programming language that they're comfortable with in order to do more advanced composition use cases so this",
    "start": "1053280",
    "end": "1059880"
  },
  {
    "text": "kind of balances no code with low code basically if you have a simple use case it's no code you write one of these but",
    "start": "1059880",
    "end": "1066440"
  },
  {
    "text": "if you start to get a little bit more complex then we really do think the best thing to do is either you know I guess",
    "start": "1066440",
    "end": "1072640"
  },
  {
    "text": "it doesn't have to be code you could use a programming language but you could also use something like hel inside of crossplayer for example and I'll touch",
    "start": "1072640",
    "end": "1078039"
  },
  {
    "text": "on that now so this is this is what we call composition functions you can see that",
    "start": "1078039",
    "end": "1084080"
  },
  {
    "text": "in this example instead of the array of resources an array of resource templates there's an array of functions in this",
    "start": "1084080",
    "end": "1090720"
  },
  {
    "text": "case the function is an oci container now this can be mixed and matched with the resource template which",
    "start": "1090720",
    "end": "1096960"
  },
  {
    "text": "is pretty nice so you could actually do both you could have the example from the previous slide you could say I'd like you to just make a simple Cloud SQL",
    "start": "1096960",
    "end": "1103360"
  },
  {
    "text": "instance but then maybe I have to go and talk to an ipam an IP address allocation",
    "start": "1103360",
    "end": "1110039"
  },
  {
    "text": "service to figure out what subnet I should put it in or something like that and that's something that you can't do with a simple yaml file in composition",
    "start": "1110039",
    "end": "1116159"
  },
  {
    "text": "today but you could do with a function so the idea is this allows you to decorate your existing compositions",
    "start": "1116159",
    "end": "1122679"
  },
  {
    "text": "with additional functionality or just replace them with a digital functionality so it touches on",
    "start": "1122679",
    "end": "1128320"
  },
  {
    "text": "a couple of use cases it touches on you know maybe you just don't like yaml very much which I know is a you know a pretty",
    "start": "1128320",
    "end": "1133679"
  },
  {
    "text": "common thing and maybe you'd prefer to use a real programming language or maybe you have a tool that you're familiar with already maybe you really like Helm",
    "start": "1133679",
    "end": "1139880"
  },
  {
    "text": "or you really like jonet or you really like Q Lang or something like that you would like to use those to do your uh",
    "start": "1139880",
    "end": "1145679"
  },
  {
    "text": "your composition for you but you'd like to do that server side that's that's one of the neat things about crossplaying right you don't have to get everyone to",
    "start": "1145679",
    "end": "1151440"
  },
  {
    "text": "go and run Helm on their laptop for example crossplaying can go and do it for you server side it's behind an API",
    "start": "1151440",
    "end": "1156960"
  },
  {
    "text": "so people are still your developers that you're supporting still make an API call they don't they don't know how this is",
    "start": "1156960",
    "end": "1162400"
  },
  {
    "text": "implemented on the backet they don't need to know they just say I need an Acy code database and then you specify what",
    "start": "1162400",
    "end": "1167799"
  },
  {
    "text": "crossplane should do",
    "start": "1167799",
    "end": "1170720"
  },
  {
    "text": "so this is a bit of a sneak preview in how we think that uh these functions will be implemented uh uh shout out to",
    "start": "1173200",
    "end": "1179159"
  },
  {
    "text": "the folks uh who worked on uh krm functions in customize and kpt that was a definitely big influence here so we're",
    "start": "1179159",
    "end": "1186240"
  },
  {
    "text": "following a similar pattern where we think that there might be different kinds of functions in future for instance you could imagine a web hook",
    "start": "1186240",
    "end": "1191960"
  },
  {
    "text": "function right that uh just you know basically calls out to webook and says what should I do to compose these",
    "start": "1191960",
    "end": "1197240"
  },
  {
    "text": "resources uh but to start with we're thinking we'll use oci containers the idea is you",
    "start": "1197240",
    "end": "1202520"
  },
  {
    "text": "containerize a process the process takes uh a standard input on its standard",
    "start": "1202520",
    "end": "1207840"
  },
  {
    "text": "input actually as a standard this yaml document on its uh standard input and then uh can optionally mutate this yl",
    "start": "1207840",
    "end": "1215000"
  },
  {
    "text": "document and is expected to return it to standard out and this allows a pipeline of functions it allows you to stack them",
    "start": "1215000",
    "end": "1220559"
  },
  {
    "text": "effectively with each one mutating the the state of the world you can see in this uh in this document you've got a",
    "start": "1220559",
    "end": "1226600"
  },
  {
    "text": "config for the function which is basically just an arbitrary uh xrm or",
    "start": "1226600",
    "end": "1231760"
  },
  {
    "text": "krm document that you can use optionally to uh to configure your function and then it will show you in this case this",
    "start": "1231760",
    "end": "1238120"
  },
  {
    "text": "is kind of the input to the first function so it will show you the observed state of the world it says hey there's this composite resource in this",
    "start": "1238120",
    "end": "1243559"
  },
  {
    "text": "case it's called an X post instance and it's got 20 gig of storage what should I do function and then the function it's",
    "start": "1243559",
    "end": "1250280"
  },
  {
    "text": "not pictured here but can set the desired state of the world which looks very similar to this it might say set",
    "start": "1250280",
    "end": "1256039"
  },
  {
    "text": "the status conditions ready true which is already there we'll set the status conditions maybe ready false and go",
    "start": "1256039",
    "end": "1261840"
  },
  {
    "text": "compose a cloud SQL instance by outputting that returns this solid standard out then crossplane sees that",
    "start": "1261840",
    "end": "1267679"
  },
  {
    "text": "and says oh all right I need to go make a cloud SQL instance or whatever",
    "start": "1267679",
    "end": "1274200"
  },
  {
    "text": "so we expect this to be Alpha in v.11 it's probably going to be off by",
    "start": "1274200",
    "end": "1280440"
  },
  {
    "text": "default uh as all of our Alpha features are you know I expect that there's going to be a limited scaffolding for building",
    "start": "1280440",
    "end": "1286400"
  },
  {
    "text": "these functions at first but this is definitely something that we want to have we're imagining having you know CLI tooling sdks all that kind of thing to",
    "start": "1286400",
    "end": "1292000"
  },
  {
    "text": "make these uh make building these functions easier and we really hope that this is going to open crossplane up to some more",
    "start": "1292000",
    "end": "1300480"
  },
  {
    "text": "advanced composition functionality that will help more people as they migrate away from other tools to",
    "start": "1300480",
    "end": "1305679"
  },
  {
    "text": "crossplane uh be able to do what they need to do and we also hope it's going to be a bit of a Proving Ground we're",
    "start": "1305679",
    "end": "1310760"
  },
  {
    "text": "not we're definitely not saying that we won't extend sort of patch and transform style composition as well but the nice",
    "start": "1310760",
    "end": "1315919"
  },
  {
    "text": "thing is with this in place there's always an escape patch we can take our time and we can grow the composition",
    "start": "1315919",
    "end": "1321880"
  },
  {
    "text": "language as it exists today slowly and carefully and intentionally and meanwhile people can still do what they",
    "start": "1321880",
    "end": "1327720"
  },
  {
    "text": "need to do using these functions so we really hope that they're going to coexist together",
    "start": "1327720",
    "end": "1333039"
  },
  {
    "text": "well uh the first version of the container Runner this is a quick illustration of it we actually think",
    "start": "1334200",
    "end": "1339919"
  },
  {
    "text": "there's going to be multiple different container Runners uh if anyone's worked with or on Argo workflows you've probably seen that it's surprisingly",
    "start": "1339919",
    "end": "1346440"
  },
  {
    "text": "hard to get kubernetes to run a pipeline of containers in order passing input to",
    "start": "1346440",
    "end": "1352400"
  },
  {
    "text": "uh to passing output to input in a sort of fast and performant way so we're",
    "start": "1352400",
    "end": "1358640"
  },
  {
    "text": "thinking that crossplains going to ship with a sidecar container that will actually use rootless containers to run",
    "start": "1358640",
    "end": "1364400"
  },
  {
    "text": "these inside it run little Snippets of these uh these sort of function containers inside it but we do imagine",
    "start": "1364400",
    "end": "1370200"
  },
  {
    "text": "that this is going to be a plugable situation so if you wanted to go and build maybe a more scalable function router that's you know secure built on",
    "start": "1370200",
    "end": "1376880"
  },
  {
    "text": "firecracker or gvisor or something like that absolutely possible as well this is going to be kind of just like the the default one that ships with cross plan",
    "start": "1376880",
    "end": "1383159"
  },
  {
    "text": "so that you can have something that works out of the box without having to spit up a ton of",
    "start": "1383159",
    "end": "1388960"
  },
  {
    "text": "infrastructure all right and now I'll pass you on to Bob to talk about garbage collection in",
    "start": "1390520",
    "end": "1396080"
  },
  {
    "text": "crossling thank you I'm Bob hlon I work for Nokia and U",
    "start": "1396080",
    "end": "1403240"
  },
  {
    "text": "Been contributing to crossplaying for about six months or so um I was going to talk a little bit about the garbage",
    "start": "1403240",
    "end": "1408520"
  },
  {
    "text": "colle deletion processing and garbage collection issues that we've run into um and some of the work that's been going",
    "start": "1408520",
    "end": "1414480"
  },
  {
    "text": "on to to try to improve this area um one thing we found is that manage resources",
    "start": "1414480",
    "end": "1420559"
  },
  {
    "text": "um Can fail to delete and you you as the user the claim the person that put the",
    "start": "1420559",
    "end": "1426159"
  },
  {
    "text": "claim in and presumably deleted the claim you may not know that that deletion failed um one thing I realized",
    "start": "1426159",
    "end": "1433880"
  },
  {
    "text": "we didn't talk about much was the processing of you know how you create things well kuber endes is going to create create everything that you tell",
    "start": "1433880",
    "end": "1439720"
  },
  {
    "text": "it to using eventual consistency um it's going to follow a path um of resource",
    "start": "1439720",
    "end": "1446480"
  },
  {
    "text": "creation that is undefined and undefinable pretty much um and it's also",
    "start": "1446480",
    "end": "1451880"
  },
  {
    "text": "not stored anywhere so we don't know the order that things got created in and as things stand today there is no defined",
    "start": "1451880",
    "end": "1458440"
  },
  {
    "text": "order for deleting resources um so um we",
    "start": "1458440",
    "end": "1464200"
  },
  {
    "text": "found that because the resources just kind of delete as they go um your manage",
    "start": "1464200",
    "end": "1470760"
  },
  {
    "text": "resources might get stuck in some situations um we also found that foreground deletion on uh composits does",
    "start": "1470760",
    "end": "1477080"
  },
  {
    "text": "didn't work for a couple of reasons U mainly the block owner deletion field in in the controller owner reference wasn't",
    "start": "1477080",
    "end": "1483480"
  },
  {
    "text": "set to True um and then the other issue is that the claim itself is",
    "start": "1483480",
    "end": "1489559"
  },
  {
    "text": "namespaced um but the composite that is associated with that claim is cluster scoped and what that means in kubernetes",
    "start": "1489559",
    "end": "1496440"
  },
  {
    "text": "world is that you cannot have an owner refence refence field from the composite pointing back at the claim so now",
    "start": "1496440",
    "end": "1503000"
  },
  {
    "text": "kubernetes has no way of associating the deletion of the claim with the deletion of all the other resources underneath",
    "start": "1503000",
    "end": "1508679"
  },
  {
    "text": "the claim crossplane has to handle that itself so the resource relationship real",
    "start": "1508679",
    "end": "1517320"
  },
  {
    "text": "quick um as I said the claim is namespaced it has a reference to the",
    "start": "1517320",
    "end": "1522679"
  },
  {
    "text": "composite object that is that is associated with it so when you create the claim crossplane will see that claim",
    "start": "1522679",
    "end": "1528600"
  },
  {
    "text": "and it will create an Associated composite that composite has a claim reference pointing back at the",
    "start": "1528600",
    "end": "1534080"
  },
  {
    "text": "claim um as I said the um there's no owner reference",
    "start": "1534080",
    "end": "1540200"
  },
  {
    "text": "there the composite then creates other composits or other manag resources as you tell it to um and all of those are",
    "start": "1540200",
    "end": "1548080"
  },
  {
    "text": "cluster scoped so all of those have owner references that point back up eventually you'll get back up to that root",
    "start": "1548080",
    "end": "1554559"
  },
  {
    "text": "composite each one of the types the claim composite and managed resources",
    "start": "1554559",
    "end": "1559919"
  },
  {
    "text": "have reconcilers associated with them those reconcilers have finalizers that they've placed on the resources to",
    "start": "1559919",
    "end": "1565960"
  },
  {
    "text": "prevent them from being deleted crossplane is going to manage the deletion of those resources when",
    "start": "1565960",
    "end": "1571399"
  },
  {
    "text": "kubernetes tells it to so just as an example of a default",
    "start": "1571399",
    "end": "1577600"
  },
  {
    "text": "claim processing uh Delete processing and this is this is what happens today",
    "start": "1577600",
    "end": "1583039"
  },
  {
    "text": "um and will continue uh for this type of example when you do Cube control deete on the claim kubernetes will put a",
    "start": "1583039",
    "end": "1589520"
  },
  {
    "text": "deletion Tim stamp on the metadata for that claim um it does some other things too but for our purposes that's enough",
    "start": "1589520",
    "end": "1597080"
  },
  {
    "text": "the claim reconciler will detect that deletion timestamp and it will call the API",
    "start": "1597080",
    "end": "1604279"
  },
  {
    "text": "delete function for the composite because again kubernetes has no way of doing that directly the composite then",
    "start": "1604279",
    "end": "1610120"
  },
  {
    "text": "gets a delete timestamp the claim reconciler meanwhile goes on and finishes its work right so the claim is",
    "start": "1610120",
    "end": "1616200"
  },
  {
    "text": "now gone Cube Cube control delete is done so as a user you have no idea what else",
    "start": "1616200",
    "end": "1621760"
  },
  {
    "text": "is going on at this point you think everything is is deleted the deletion time stamp that shows up on the",
    "start": "1621760",
    "end": "1628320"
  },
  {
    "text": "composite kind of in parallel with everything else triggers kubernetes to",
    "start": "1628320",
    "end": "1633440"
  },
  {
    "text": "go follow those owner references generate a graph follow those owner references and Mark basically call Api",
    "start": "1633440",
    "end": "1639279"
  },
  {
    "text": "delete all of those sub resources",
    "start": "1639279",
    "end": "1644679"
  },
  {
    "text": "the reconcilers will then detect those deletions and do their appropriate processing so",
    "start": "1644679",
    "end": "1651240"
  },
  {
    "text": "the composite reconciler will detect the deletion of the composite it will remove the connection details resource that's",
    "start": "1651240",
    "end": "1657200"
  },
  {
    "text": "associated with the composite and then it will remove its finalizer which will allow the object to be deleted the manag",
    "start": "1657200",
    "end": "1664240"
  },
  {
    "text": "resources the manage reconciler will call whatever delete function is associated with that manage resource whether it's a delete VPC or a delete",
    "start": "1664240",
    "end": "1671120"
  },
  {
    "text": "ec2 instance or whatever it is once that's done it will remove its finalizer",
    "start": "1671120",
    "end": "1676240"
  },
  {
    "text": "and those objects can get deleted and that all happens basically at random you",
    "start": "1676240",
    "end": "1682200"
  },
  {
    "text": "know you have no control over it all those things just kind of happen and everything goes away which is great",
    "start": "1682200",
    "end": "1688320"
  },
  {
    "text": "until you have one or five or 10 managed resources that for whatever reason the",
    "start": "1688320",
    "end": "1695039"
  },
  {
    "text": "the far end of your API can't delete maybe somebody spun up an ec2 instance on your subnet and didn't tell you about",
    "start": "1695039",
    "end": "1701159"
  },
  {
    "text": "it which wasn't very nice but it happens and now your subnet can't be deleted",
    "start": "1701159",
    "end": "1706399"
  },
  {
    "text": "because somebody else has an ec2 instance sitting out there on it right that's what gets you into this situation",
    "start": "1706399",
    "end": "1712200"
  },
  {
    "text": "at that point you have two choices basically you can either go find the ec2 instance and delete it and let",
    "start": "1712200",
    "end": "1719799"
  },
  {
    "text": "reconciliation do its thing um you can also remove the finalizer but I would not recommend that because now your",
    "start": "1719799",
    "end": "1725360"
  },
  {
    "text": "subnet is left out there hanging in in whatever cloud provider you've got so that's kind of the an illustration of",
    "start": "1725360",
    "end": "1732080"
  },
  {
    "text": "the problem that we were looking at in 1.10 we added support for foreground cascading to",
    "start": "1732080",
    "end": "1739320"
  },
  {
    "text": "um and I want to qualify that a little bit it's simulated on the claim side it's implemented for the composite side",
    "start": "1739320",
    "end": "1746720"
  },
  {
    "text": "um the claim reconcile we have a composite delete policy that we added to the claim so you can tell the claim when",
    "start": "1746720",
    "end": "1753880"
  },
  {
    "text": "you delete that composite use foreground cascading deletion and I'll show you that example in a minute the default is",
    "start": "1753880",
    "end": "1760039"
  },
  {
    "text": "still background it's still going to operate exactly the same way it does today um the other thing we did was we",
    "start": "1760039",
    "end": "1766480"
  },
  {
    "text": "set block owner deletion on all the controller owner references so that foreground cascading deletion will work the way we expect it to um you can",
    "start": "1766480",
    "end": "1773519"
  },
  {
    "text": "delete a standalone composite um we haven't talked about it really but you there's no requirement to use a claim",
    "start": "1773519",
    "end": "1778840"
  },
  {
    "text": "you can Implement you can instantiate the composits directly uh that's",
    "start": "1778840",
    "end": "1784279"
  },
  {
    "text": "entirely a user decision um this change will allow foreground cascading deletion",
    "start": "1784279",
    "end": "1790120"
  },
  {
    "text": "to work on composits um the uh the other piece here",
    "start": "1790120",
    "end": "1795799"
  },
  {
    "text": "is that if you specify the cascading forr cascading deletion policy on a claim deletion it's still ignored like",
    "start": "1795799",
    "end": "1802240"
  },
  {
    "text": "it is today and that's caus that's the owner reference issue so the same example that we just ran this time we're",
    "start": "1802240",
    "end": "1807960"
  },
  {
    "text": "setting the foreground composite deletion policy same thing is going to happen set",
    "start": "1807960",
    "end": "1814080"
  },
  {
    "text": "the deletion Tim stamp the claim reconciler is going to do its thing",
    "start": "1814080",
    "end": "1819120"
  },
  {
    "text": "you'll notice the claim stays at this point at this point you've got an",
    "start": "1819120",
    "end": "1825880"
  },
  {
    "text": "additional finalizer on all the composite resource anything that has an owner reference pointed to it um has an",
    "start": "1825880",
    "end": "1832200"
  },
  {
    "text": "uh a final additional finalizer on it the managed resources are going to go ahead and delete the way they do today",
    "start": "1832200",
    "end": "1839360"
  },
  {
    "text": "the composite that now has no owner references pointing to it will also get deleted but your stuck mobile uh managed",
    "start": "1839360",
    "end": "1846080"
  },
  {
    "text": "resource is now going to block the deletion of everything up the tree behind it so now your Cube control",
    "start": "1846080",
    "end": "1852720"
  },
  {
    "text": "command doesn't return nothing gets deleted until you go in and you fix this and you now say oh I have a St resource",
    "start": "1852720",
    "end": "1859320"
  },
  {
    "text": "now I delete my ec2 instance it's blocking my Subnet and now everything Cascades",
    "start": "1859320",
    "end": "1866600"
  },
  {
    "text": "out um the next step on top of this is kind of going on now in terms of determining the um deletion order and",
    "start": "1867519",
    "end": "1875039"
  },
  {
    "text": "we've got a couple of poc's going on using kerno to try to simulate that so um Jared finish",
    "start": "1875039",
    "end": "1883360"
  },
  {
    "text": "up all right sweet so let's go ahead and start closing this thing out now uh so the final thing I wanted to say",
    "start": "1883639",
    "end": "1889960"
  },
  {
    "text": "once again you know kind of uh reinforce this is that you know this project is nothing without its Community right and",
    "start": "1889960",
    "end": "1896279"
  },
  {
    "text": "so uh you know I I definitely wanted to make sure that we give some opportunities here for everyone to start getting involved uh there's a whole",
    "start": "1896279",
    "end": "1902279"
  },
  {
    "text": "bunch of useful links here uh you know the main website is crossplane doio you can go there read the docs uh get the",
    "start": "1902279",
    "end": "1908639"
  },
  {
    "text": "quick start uh you know start trying it out on your own and we are always around on slack slack as well so our crossplane",
    "start": "1908639",
    "end": "1915279"
  },
  {
    "text": "slack slack we're hanging out there we're ready to answer question and talk and hang out uh and so the last thing I",
    "start": "1915279",
    "end": "1920639"
  },
  {
    "text": "wanted to mention is that uh you know as we are trying to progress to the",
    "start": "1920639",
    "end": "1925880"
  },
  {
    "text": "graduated state with the cloud native Computing foundation and so one thing that we need your help with for that is",
    "start": "1925880",
    "end": "1932000"
  },
  {
    "text": "uh essentially hearing about your adoption your success your challenges Etc so I've got a little survey uh here",
    "start": "1932000",
    "end": "1938960"
  },
  {
    "text": "that uh you know me as a as the maintainer in the steering committee uh would love to collect this information",
    "start": "1938960",
    "end": "1944200"
  },
  {
    "text": "hear it from you all connect with you and then be able to kind of put that into to our graduation Proposal with the",
    "start": "1944200",
    "end": "1949519"
  },
  {
    "text": "cncf as well and kind of share the story of the success and growth of our community together uh so I'm going to",
    "start": "1949519",
    "end": "1955519"
  },
  {
    "text": "leave this here on the screen so you can use a little QR code thing there to go to that uh survey if you want to and uh",
    "start": "1955519",
    "end": "1961320"
  },
  {
    "text": "and help us out all get to graduation and so that with that questions anybody I saw that hand go first for",
    "start": "1961320",
    "end": "1967559"
  },
  {
    "text": "sure that was fast my question is",
    "start": "1967559",
    "end": "1973398"
  },
  {
    "text": "uh there's definitely no plans at the moment to remove it it uh so technically anything that goes into crossplay as",
    "start": "1987960",
    "end": "1994240"
  },
  {
    "text": "Alpha could be removed that's kind of part of that contract but there's no intention I think the only reason we",
    "start": "1994240",
    "end": "2000200"
  },
  {
    "text": "would remove it is if we added it it turned out to be a terrible idea and everyone hated it or it didn't work or",
    "start": "2000200",
    "end": "2005399"
  },
  {
    "text": "something like that so I hope it stays there but uh no contract around that",
    "start": "2005399",
    "end": "2011399"
  },
  {
    "text": "until it hits V1",
    "start": "2011399",
    "end": "2014600"
  },
  {
    "text": "basically so crossplane manages the cloud provider crossplane providers",
    "start": "2020799",
    "end": "2026320"
  },
  {
    "text": "right and I was wondering what crossplane does to stay up to date with you know all the updates of all the crow",
    "start": "2026320",
    "end": "2032039"
  },
  {
    "text": "cloud provider apis um and why not use like Azure service operator Google conf",
    "start": "2032039",
    "end": "2038600"
  },
  {
    "text": "connector um and let them manage it kind of thank",
    "start": "2038600",
    "end": "2043960"
  },
  {
    "text": "you yeah that's a great question and obviously a challenge uh so first of all I think uh",
    "start": "2043960",
    "end": "2050560"
  },
  {
    "text": "the community done has done a great job and keeps doing a great job of creating these providers uh the community",
    "start": "2050560",
    "end": "2056240"
  },
  {
    "text": "providers and we see this left and right and I encourage everyone to to contribute there uh we also have code",
    "start": "2056240",
    "end": "2063320"
  },
  {
    "text": "generation as I said um and that's this code generation works on top of Tera form providers so it takes an existing",
    "start": "2063320",
    "end": "2070118"
  },
  {
    "text": "terraform provider and creates creates a a crossplane provider um and we've we've",
    "start": "2070119",
    "end": "2076398"
  },
  {
    "text": "done this from the upbound side for the major uh uh providers but um everyone",
    "start": "2076399",
    "end": "2081560"
  },
  {
    "text": "can do them and we we're seeing this that others are also using this and the way that I try to think about it uh the",
    "start": "2081560",
    "end": "2087800"
  },
  {
    "text": "vision would be that the Cross Pin provider at the end of the day is just a build artifact out of the terap provider",
    "start": "2087800",
    "end": "2094560"
  },
  {
    "text": "now this doesn't need to be the end right we're also looking into other generation mechanisms um of of other",
    "start": "2094560",
    "end": "2100119"
  },
  {
    "text": "things but that but that's the current state and that's why we are confident that we every resource is there or is is",
    "start": "2100119",
    "end": "2107119"
  },
  {
    "text": "can be generated in a very fast way just to just to add onto that real",
    "start": "2107119",
    "end": "2114200"
  },
  {
    "text": "quick as well the specific goout like why not use Azure service operator KCC AK etc etc it's it's a couple of things",
    "start": "2114200",
    "end": "2120920"
  },
  {
    "text": "one is API consistency uh yes all of those things are bounded by the krm but",
    "start": "2120920",
    "end": "2126480"
  },
  {
    "text": "uh you know we work pretty close uh collaborate with the folks who work on those teams because we're all doing similar work and it's great to swap",
    "start": "2126480",
    "end": "2131960"
  },
  {
    "text": "notes uh and you know KCC just has different annotations and different settings from from AK right so if you're",
    "start": "2131960",
    "end": "2138520"
  },
  {
    "text": "using multiple providers it's just nicer to have them be consistent I think the other thing as well is that that only",
    "start": "2138520",
    "end": "2144480"
  },
  {
    "text": "covers the big three clouds you know we have providers for GitHub gitlab SQL terraform to run terraform um tons of",
    "start": "2144480",
    "end": "2151680"
  },
  {
    "text": "other things right so if we just said you could maybe make the case oh we'll just use operators any operator sort of",
    "start": "2151680",
    "end": "2157400"
  },
  {
    "text": "thing but this just becomes really inconsistent and it's just a lot for crossplaying sort of Administrators to have to understand so it's nice to have",
    "start": "2157400",
    "end": "2164160"
  },
  {
    "text": "the consistency of having our own sort of uh standards there",
    "start": "2164160",
    "end": "2168760"
  },
  {
    "text": "basically all right that's all the time we had there but thanks again for showing up and uh looking to see in the community thanks guys",
    "start": "2169800",
    "end": "2177880"
  }
]