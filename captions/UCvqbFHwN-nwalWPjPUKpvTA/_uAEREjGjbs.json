[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "hi everyone welcome to the last session",
    "start": "320",
    "end": "2480"
  },
  {
    "text": "of today i promise i'm going to make it",
    "start": "2480",
    "end": "4720"
  },
  {
    "text": "quick so we can all head to the party",
    "start": "4720",
    "end": "7120"
  },
  {
    "text": "afterwards",
    "start": "7120",
    "end": "8320"
  },
  {
    "text": "so i'm bernard colobara i'm the",
    "start": "8320",
    "end": "10480"
  },
  {
    "text": "co-founder and ceo of lunatic at lunatic",
    "start": "10480",
    "end": "13679"
  },
  {
    "text": "we're building a",
    "start": "13679",
    "end": "15280"
  },
  {
    "text": "web assembly platform inspired by erlang",
    "start": "15280",
    "end": "17600"
  },
  {
    "text": "principles this means massive",
    "start": "17600",
    "end": "19279"
  },
  {
    "text": "concurrency",
    "start": "19279",
    "end": "20720"
  },
  {
    "text": "soft real time and fault tolerance to",
    "start": "20720",
    "end": "23760"
  },
  {
    "text": "wrap up today i would like to share with",
    "start": "23760",
    "end": "25599"
  },
  {
    "text": "you a bit of our story why we chose web",
    "start": "25599",
    "end": "27840"
  },
  {
    "text": "assembly for our stack and especially",
    "start": "27840",
    "end": "30800"
  },
  {
    "text": "how it helps us around the fault",
    "start": "30800",
    "end": "33200"
  },
  {
    "text": "tolerance part of our platform",
    "start": "33200",
    "end": "36880"
  },
  {
    "start": "36000",
    "end": "85000"
  },
  {
    "text": "i started my career in it support and a",
    "start": "37520",
    "end": "39920"
  },
  {
    "text": "big part of my day-to-day job was just",
    "start": "39920",
    "end": "42239"
  },
  {
    "text": "to go around and turn things off and on",
    "start": "42239",
    "end": "44399"
  },
  {
    "text": "again",
    "start": "44399",
    "end": "45280"
  },
  {
    "text": "it became somewhat of a joke in the i.t",
    "start": "45280",
    "end": "47600"
  },
  {
    "text": "world but believe me it's like a really",
    "start": "47600",
    "end": "49920"
  },
  {
    "text": "effective method in fixing issues",
    "start": "49920",
    "end": "52800"
  },
  {
    "text": "it comes from the fact that long-running",
    "start": "52800",
    "end": "55039"
  },
  {
    "text": "applications tend to get stuck in an",
    "start": "55039",
    "end": "57199"
  },
  {
    "text": "unpredicted state so the best way to",
    "start": "57199",
    "end": "60320"
  },
  {
    "text": "recover from this error is just to",
    "start": "60320",
    "end": "62399"
  },
  {
    "text": "revert to a well-known fresh state",
    "start": "62399",
    "end": "65040"
  },
  {
    "text": "and also it's the state that got the",
    "start": "65040",
    "end": "67680"
  },
  {
    "text": "most testing out because developers when",
    "start": "67680",
    "end": "70320"
  },
  {
    "text": "they write some application they write",
    "start": "70320",
    "end": "72799"
  },
  {
    "text": "some code then",
    "start": "72799",
    "end": "74640"
  },
  {
    "text": "test it and then write more code test it",
    "start": "74640",
    "end": "76720"
  },
  {
    "text": "again so like this fresh start after the",
    "start": "76720",
    "end": "78880"
  },
  {
    "text": "application just starts it's usually",
    "start": "78880",
    "end": "81280"
  },
  {
    "text": "really well tested",
    "start": "81280",
    "end": "82799"
  },
  {
    "text": "and erlang the programming language",
    "start": "82799",
    "end": "84880"
  },
  {
    "text": "takes this principles and applies it to",
    "start": "84880",
    "end": "87040"
  },
  {
    "start": "85000",
    "end": "127000"
  },
  {
    "text": "software development and this approach",
    "start": "87040",
    "end": "89439"
  },
  {
    "text": "has proven to create some of the most",
    "start": "89439",
    "end": "91439"
  },
  {
    "text": "resilient applications out there",
    "start": "91439",
    "end": "94640"
  },
  {
    "text": "it works in erlang because the whole",
    "start": "94640",
    "end": "96880"
  },
  {
    "text": "programming language was designed around",
    "start": "96880",
    "end": "98880"
  },
  {
    "text": "this concept of small processes that",
    "start": "98880",
    "end": "101360"
  },
  {
    "text": "don't share any state with each other",
    "start": "101360",
    "end": "103280"
  },
  {
    "text": "this means if one of them fails we can",
    "start": "103280",
    "end": "106240"
  },
  {
    "text": "safely restart it while the rest of the",
    "start": "106240",
    "end": "108479"
  },
  {
    "text": "system keeps running this is also known",
    "start": "108479",
    "end": "111520"
  },
  {
    "text": "as the let it crash philosophy in the",
    "start": "111520",
    "end": "114399"
  },
  {
    "text": "erlang world",
    "start": "114399",
    "end": "115840"
  },
  {
    "text": "and with lunatic we are trying to bring",
    "start": "115840",
    "end": "118240"
  },
  {
    "text": "this approach to all programming",
    "start": "118240",
    "end": "120320"
  },
  {
    "text": "languages using webassembly",
    "start": "120320",
    "end": "123360"
  },
  {
    "text": "to show you how we do it let's for",
    "start": "123360",
    "end": "125439"
  },
  {
    "text": "example take rust",
    "start": "125439",
    "end": "128000"
  },
  {
    "start": "127000",
    "end": "213000"
  },
  {
    "text": "rust application usually share",
    "start": "128000",
    "end": "130479"
  },
  {
    "text": "a whole memory space so there's only one",
    "start": "130479",
    "end": "132959"
  },
  {
    "text": "memory space in the rust applications",
    "start": "132959",
    "end": "134800"
  },
  {
    "text": "and in this example all threads access",
    "start": "134800",
    "end": "137680"
  },
  {
    "text": "one shared state this means if one of",
    "start": "137680",
    "end": "140239"
  },
  {
    "text": "them misbehaves corrupts the state it's",
    "start": "140239",
    "end": "142400"
  },
  {
    "text": "kind of corrupted for everybody else so",
    "start": "142400",
    "end": "144800"
  },
  {
    "text": "if we just",
    "start": "144800",
    "end": "146000"
  },
  {
    "text": "shut off one thread restart it this",
    "start": "146000",
    "end": "148239"
  },
  {
    "text": "would actually not really help us",
    "start": "148239",
    "end": "149680"
  },
  {
    "text": "because the thread would be respawned",
    "start": "149680",
    "end": "151599"
  },
  {
    "text": "inside of the same memory space",
    "start": "151599",
    "end": "153760"
  },
  {
    "text": "this means",
    "start": "153760",
    "end": "155120"
  },
  {
    "text": "that we need to take a different",
    "start": "155120",
    "end": "156640"
  },
  {
    "text": "approach",
    "start": "156640",
    "end": "157680"
  },
  {
    "text": "this is also true for",
    "start": "157680",
    "end": "159760"
  },
  {
    "text": "asking tasks in essence rust",
    "start": "159760",
    "end": "162400"
  },
  {
    "text": "all the tasks run in one memory space",
    "start": "162400",
    "end": "164720"
  },
  {
    "text": "and can reference the same memory",
    "start": "164720",
    "end": "166480"
  },
  {
    "text": "locations so we never really have the",
    "start": "166480",
    "end": "168560"
  },
  {
    "text": "guarantee if we restart it that it will",
    "start": "168560",
    "end": "170720"
  },
  {
    "text": "start from a fresh completely new state",
    "start": "170720",
    "end": "173440"
  },
  {
    "text": "so what we do with lunatic is",
    "start": "173440",
    "end": "176160"
  },
  {
    "text": "we introduce a new concurrency model to",
    "start": "176160",
    "end": "178720"
  },
  {
    "text": "rust",
    "start": "178720",
    "end": "179599"
  },
  {
    "text": "turn each task into a web assembly",
    "start": "179599",
    "end": "181920"
  },
  {
    "text": "instance so each of the tasks gets a",
    "start": "181920",
    "end": "184720"
  },
  {
    "text": "linear memory on its own",
    "start": "184720",
    "end": "186800"
  },
  {
    "text": "this means that it's safe to restart",
    "start": "186800",
    "end": "189440"
  },
  {
    "text": "each individual task and we can",
    "start": "189440",
    "end": "191200"
  },
  {
    "text": "guarantee that the memory is going to be",
    "start": "191200",
    "end": "193280"
  },
  {
    "text": "completely fresh and the state is going",
    "start": "193280",
    "end": "194879"
  },
  {
    "text": "to be new",
    "start": "194879",
    "end": "196720"
  },
  {
    "text": "and to be able to do this it feels a bit",
    "start": "196720",
    "end": "199200"
  },
  {
    "text": "like a superpower right because the rust",
    "start": "199200",
    "end": "201680"
  },
  {
    "text": "language was not even designed to be",
    "start": "201680",
    "end": "203680"
  },
  {
    "text": "able to support this just by applying",
    "start": "203680",
    "end": "206080"
  },
  {
    "text": "web assembly to it we get like all this",
    "start": "206080",
    "end": "208560"
  },
  {
    "text": "awesome property",
    "start": "208560",
    "end": "210319"
  },
  {
    "text": "and i feel like this is a common theme",
    "start": "210319",
    "end": "212400"
  },
  {
    "text": "with webassembly as you saw today we",
    "start": "212400",
    "end": "215040"
  },
  {
    "text": "take it apply it to a specific domain",
    "start": "215040",
    "end": "217280"
  },
  {
    "text": "and we gain all these new super powers",
    "start": "217280",
    "end": "219680"
  },
  {
    "text": "it allows us to run high performance c c",
    "start": "219680",
    "end": "222959"
  },
  {
    "text": "plus plus application inside of the",
    "start": "222959",
    "end": "225040"
  },
  {
    "text": "browser we can now this run photoshop",
    "start": "225040",
    "end": "227280"
  },
  {
    "text": "figma google earth all at a high frame",
    "start": "227280",
    "end": "229760"
  },
  {
    "text": "rate inside of the browser",
    "start": "229760",
    "end": "231840"
  },
  {
    "text": "and it's also bringing compute closer to",
    "start": "231840",
    "end": "234400"
  },
  {
    "text": "our data in the database and",
    "start": "234400",
    "end": "237519"
  },
  {
    "text": "also compute closer to the users on the",
    "start": "237519",
    "end": "239680"
  },
  {
    "text": "edge",
    "start": "239680",
    "end": "240480"
  },
  {
    "text": "and it's powering a lot of new",
    "start": "240480",
    "end": "242560"
  },
  {
    "text": "innovation in the cloud native space and",
    "start": "242560",
    "end": "245040"
  },
  {
    "text": "bailey showed also today in the keynote",
    "start": "245040",
    "end": "246799"
  },
  {
    "text": "many more use cases for web assembly",
    "start": "246799",
    "end": "249760"
  },
  {
    "text": "every time i talk to somebody new that",
    "start": "249760",
    "end": "251439"
  },
  {
    "text": "uses webassembly they kind of show like",
    "start": "251439",
    "end": "253760"
  },
  {
    "text": "a slightly different variation how they",
    "start": "253760",
    "end": "255599"
  },
  {
    "text": "are using webassembly to solve their",
    "start": "255599",
    "end": "257680"
  },
  {
    "text": "problems and that's why i'm really",
    "start": "257680",
    "end": "259680"
  },
  {
    "text": "grateful that we have events such as",
    "start": "259680",
    "end": "261840"
  },
  {
    "text": "today where we can all meet share our",
    "start": "261840",
    "end": "264160"
  },
  {
    "text": "experiences how we use web assembly and",
    "start": "264160",
    "end": "267199"
  },
  {
    "text": "learn from each other and i would like",
    "start": "267199",
    "end": "270320"
  },
  {
    "text": "to",
    "start": "270320",
    "end": "271360"
  },
  {
    "text": "finish today by thanking everybody who",
    "start": "271360",
    "end": "273440"
  },
  {
    "text": "made this event possible i would like",
    "start": "273440",
    "end": "275759"
  },
  {
    "start": "275000",
    "end": "311000"
  },
  {
    "text": "first of all to thank all the organizers",
    "start": "275759",
    "end": "278800"
  },
  {
    "text": "and program committee matt butcher",
    "start": "278800",
    "end": "281280"
  },
  {
    "text": "taylor dolezal divia mohan liam randall",
    "start": "281280",
    "end": "284960"
  },
  {
    "text": "ralph squillacci lindsay jean-draw and",
    "start": "284960",
    "end": "288080"
  },
  {
    "text": "sheriff wembley i would also like to",
    "start": "288080",
    "end": "290560"
  },
  {
    "text": "thank the",
    "start": "290560",
    "end": "291840"
  },
  {
    "text": "sponsors microsoft azure suborbital and",
    "start": "291840",
    "end": "295280"
  },
  {
    "text": "prophen",
    "start": "295280",
    "end": "296479"
  },
  {
    "text": "and of course i would like to thank all",
    "start": "296479",
    "end": "298400"
  },
  {
    "text": "the speakers we had so many amazing",
    "start": "298400",
    "end": "300639"
  },
  {
    "text": "talks today",
    "start": "300639",
    "end": "302000"
  },
  {
    "text": "and everybody attending the conference",
    "start": "302000",
    "end": "304720"
  },
  {
    "text": "in person or watching the event online",
    "start": "304720",
    "end": "307440"
  },
  {
    "text": "thank you so much",
    "start": "307440",
    "end": "310919"
  }
]