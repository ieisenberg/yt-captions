[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "okay let's get started hello everyone thank you very much for joining us for today's cncf webinar",
    "start": "8880",
    "end": "16160"
  },
  {
    "text": "admission controllers one part of your kubernetes security and governance toolkit i'm jerry fallon and i will be",
    "start": "16160",
    "end": "22320"
  },
  {
    "text": "moderating today's webinar and we would like to welcome our presenters today john patel cloud architect at palo alto",
    "start": "22320",
    "end": "30080"
  },
  {
    "text": "networks and robert haynes cloud security evangelist at powell alton networks",
    "start": "30080",
    "end": "35520"
  },
  {
    "text": "there's a few housekeeping items before we get started during the webinar you are not able to talk as an attendee",
    "start": "35520",
    "end": "41520"
  },
  {
    "text": "there is a q a box at the bottom of your screen so please feel free to drop your questions in there and we'll get to as",
    "start": "41520",
    "end": "46800"
  },
  {
    "text": "many as we can at the end this is an official webinar of the cncf and as such is subject to the cncf code",
    "start": "46800",
    "end": "52960"
  },
  {
    "text": "of conduct so please do not add anything to the chatter questions that would be in violation of the code of conduct",
    "start": "52960",
    "end": "58719"
  },
  {
    "text": "please be respectful of your fellow participants and presenters and please also note that the recording",
    "start": "58719",
    "end": "63920"
  },
  {
    "text": "slides will be posted later today to the cncf webinar page at cncf dot io slash webinars with that",
    "start": "63920",
    "end": "70400"
  },
  {
    "text": "i'll hand it over to robert and gujan for today's presentation",
    "start": "70400",
    "end": "75520"
  },
  {
    "text": "thanks very much joe good morning everybody and uh thanks for joining us today um so just quickly a quick intro i'll do",
    "start": "76400",
    "end": "82720"
  },
  {
    "text": "myself and then i'll let gunjan say say a couple of words robert haynes i work as a cloud security evangelist at palo alto networks",
    "start": "82720",
    "end": "89439"
  },
  {
    "text": "my role is to get out there and talk about all things to do with security especially cloud and cloud native",
    "start": "89439",
    "end": "94640"
  },
  {
    "text": "technology security good john tell them about yourself hey everyone my name is kanjin",
    "start": "94640",
    "end": "101040"
  },
  {
    "text": "i'm a senior cloud architect here at palo alto networks um and um i have been working",
    "start": "101040",
    "end": "108000"
  },
  {
    "text": "on kubernetes and containers for the last five years as a developer and architect um",
    "start": "108000",
    "end": "115200"
  },
  {
    "text": "at many open source projects um including kubernetes and cni yes so just",
    "start": "115200",
    "end": "121600"
  },
  {
    "text": "defining anyone's in any doubt he is the smart one of the of the pairing this morning um so as we said let's just",
    "start": "121600",
    "end": "129920"
  },
  {
    "text": "uh this is what we're going to talk about today we're going to try and take about 45 for 50 minutes maybe slightly less to go",
    "start": "129920",
    "end": "136640"
  },
  {
    "text": "through this um we'll have a bit of time for q a at the end depending on how many tangents i get off onto during our um during onto",
    "start": "136640",
    "end": "144160"
  },
  {
    "text": "our presentation this morning i'm i'm going to give a real quick short security overview of my my view of kubernetes security from like",
    "start": "144160",
    "end": "151440"
  },
  {
    "text": "ten thousand feet um jan's going to go into the um the uh details of",
    "start": "151440",
    "end": "157120"
  },
  {
    "text": "of oper and uh the rigo language um then we're going to take a look at some practical emission control",
    "start": "157120",
    "end": "163599"
  },
  {
    "text": "policies you know things you should you should think about doing and that you can use admission control for and then we've got some examples and a",
    "start": "163599",
    "end": "170239"
  },
  {
    "text": "demo to go through at the end so um",
    "start": "170239",
    "end": "176800"
  },
  {
    "text": "i'm i'm a fairly you know like high level i take a fairly high level view of things about",
    "start": "176800",
    "end": "181920"
  },
  {
    "start": "180000",
    "end": "180000"
  },
  {
    "text": "what the attack vectors are going to be in in any kind of environment and when you look at kubernetes there's really kind of like um",
    "start": "181920",
    "end": "190080"
  },
  {
    "text": "four or five main ways that someone's going to try and compromise or misuse a kubernetes cluster based on the architecture of kubernetes",
    "start": "190080",
    "end": "196879"
  },
  {
    "text": "itself at the very beginning you've got to think about the container we're not going to go into a ton about",
    "start": "196879",
    "end": "202239"
  },
  {
    "text": "container security today that's a whole other whole other webinar about what goes in there but if you think about what's inside a container",
    "start": "202239",
    "end": "208480"
  },
  {
    "text": "you know it's got code it's got libraries that you've included so software supply chain attacks you need",
    "start": "208480",
    "end": "213920"
  },
  {
    "text": "to think about then you need to think about how the how the containers are running you know is it running as a privileged container",
    "start": "213920",
    "end": "220319"
  },
  {
    "text": "is it mounting the coast file system is it sharing network space what can it connect to is it storing",
    "start": "220319",
    "end": "225840"
  },
  {
    "text": "secrets in there you know all these things are important container security because that runs on the node and",
    "start": "225840",
    "end": "231440"
  },
  {
    "text": "on the node also runs things like console so there's a great um great story that um someone posted",
    "start": "231440",
    "end": "238080"
  },
  {
    "text": "some medium article actually and it's like how did how did crypto miners end up on our production",
    "start": "238080",
    "end": "243200"
  },
  {
    "text": "kubernetes uh clusters and essentially they had a workload monitoring console this wasn't",
    "start": "243200",
    "end": "249360"
  },
  {
    "text": "the main kubernetes clusters third-party console been left open to the outside world didn't have any authentication and",
    "start": "249360",
    "end": "256720"
  },
  {
    "text": "could run um arbitrary commands on running containers because of how it was set up",
    "start": "256720",
    "end": "262560"
  },
  {
    "text": "so that was a great vector for someone to come in and relatively easy compromise um a container and also because the",
    "start": "262560",
    "end": "269199"
  },
  {
    "text": "container was running with privileges and with file system mounts they were able to then compromise the node as well",
    "start": "269199",
    "end": "276320"
  },
  {
    "text": "um you know everything that happens inside of kubernetes every configuration change goes via",
    "start": "276320",
    "end": "282000"
  },
  {
    "text": "the api server so protecting your api server is important against misuse and against",
    "start": "282000",
    "end": "288639"
  },
  {
    "text": "denial of service and obviously scd is again a kind of key",
    "start": "288639",
    "end": "294840"
  },
  {
    "text": "component and you can compromise so firewalling it um you can take it down so protecting it",
    "start": "294840",
    "end": "300479"
  },
  {
    "text": "from ddos is important and that kind of covers the the real big chunks of kubernetes vulnerability so we",
    "start": "300479",
    "end": "306320"
  },
  {
    "text": "obviously need to work at how we're going to how we're going to mitigate those um and there's all this technology which we",
    "start": "306320",
    "end": "312479"
  },
  {
    "start": "307000",
    "end": "307000"
  },
  {
    "text": "don't have time to talk about in one webinar but they're all relatively important things that you should be thinking about",
    "start": "312479",
    "end": "317520"
  },
  {
    "text": "you know cloud native firewalls scanning your container images there's tons of tools out there",
    "start": "317520",
    "end": "322560"
  },
  {
    "text": "for for looking at what's inside a container image and comparing it to cves runtime defense you know container",
    "start": "322560",
    "end": "329280"
  },
  {
    "text": "cloud native firewalls application air firewalls how do we how do we manage consoles",
    "start": "329280",
    "end": "335280"
  },
  {
    "text": "again cloud style firewalls access control into there following your node having a",
    "start": "335280",
    "end": "341520"
  },
  {
    "text": "runtime defense on your node your node is still a linux vm",
    "start": "341520",
    "end": "346880"
  },
  {
    "text": "or a linux physical box depending on where you're running it so you need to think about how you protect that actual",
    "start": "346880",
    "end": "352400"
  },
  {
    "text": "node running it in itself as if it was just a standard server you weren't running kubernetes on you need to think about",
    "start": "352400",
    "end": "358319"
  },
  {
    "text": "that i mean to think about admission control in that space api misuse um this are backing kubernetes um",
    "start": "358319",
    "end": "366560"
  },
  {
    "text": "our back everywhere is always a and you know infrastruc iam in general is kind of always a",
    "start": "366560",
    "end": "372560"
  },
  {
    "text": "complicated attack you know ncd firewall encrypt limit access today we're going",
    "start": "372560",
    "end": "379600"
  },
  {
    "text": "to talk a lot about emission controllers those are the kind of key things that we want to",
    "start": "379600",
    "end": "385520"
  },
  {
    "text": "discuss today because they have a really powerful role to play in essentially limiting the effects of",
    "start": "385520",
    "end": "391440"
  },
  {
    "text": "any kind of compromise um i i i think take again a fairly",
    "start": "391440",
    "end": "396560"
  },
  {
    "text": "simplistic view of these things um there i always think of them as like a firewall or an application lfi will",
    "start": "396560",
    "end": "402160"
  },
  {
    "text": "work for your control plane in kubernetes so the admission control process",
    "start": "402160",
    "end": "408560"
  },
  {
    "text": "unless you control what events or not of what events hit your api but what your api",
    "start": "408560",
    "end": "413919"
  },
  {
    "text": "does with those events when they come in so you know we'll go into that in way more detail in a few minutes so this is where the",
    "start": "413919",
    "end": "421840"
  },
  {
    "text": "delicate uh ballet act of me handing over the screen to jan happens because he knows all about",
    "start": "421840",
    "end": "429120"
  },
  {
    "text": "oprah our open policy agent in far more detail than i do so he's the right person to talk through it so if you're ready",
    "start": "429120",
    "end": "435680"
  },
  {
    "text": "i'm going to stop sharing and you can start sharing all right thanks robert no worries i",
    "start": "435680",
    "end": "442720"
  },
  {
    "text": "will also turn on my camera so he just said people",
    "start": "442720",
    "end": "448840"
  },
  {
    "text": "um all right so um so thanks robert for that",
    "start": "448840",
    "end": "456160"
  },
  {
    "text": "introduction um about different security um attack vectors um and what are some of",
    "start": "456160",
    "end": "463120"
  },
  {
    "text": "the mitigation strategies now as the webinar title says uh we're",
    "start": "463120",
    "end": "468400"
  },
  {
    "text": "going to look at admission controller and uh as one part of that",
    "start": "468400",
    "end": "474240"
  },
  {
    "text": "security toolkit uh in specific we'll look at open policy agent um which is a cncf open source project",
    "start": "474240",
    "end": "483520"
  },
  {
    "text": "so what happens typically is you have your client uh which which is you typically",
    "start": "483520",
    "end": "490960"
  },
  {
    "text": "either keep cuddle or helm or terraform what are used to create kubernetes objects that request goes to",
    "start": "490960",
    "end": "498080"
  },
  {
    "text": "the api server and then api server will make it happen you know there's like",
    "start": "498080",
    "end": "503680"
  },
  {
    "text": "an action associated with it with an admission controller or oppa",
    "start": "503680",
    "end": "510800"
  },
  {
    "text": "in this case there's we're adding an additional step when the request gets to the api server",
    "start": "510800",
    "end": "518959"
  },
  {
    "text": "there's a query sent to oppa and it will check against all the policies",
    "start": "518959",
    "end": "524399"
  },
  {
    "text": "that you've created to see if this action is allowed if this",
    "start": "524399",
    "end": "530240"
  },
  {
    "text": "action on this resource is allowed by this user at this time whatever you want and it will give",
    "start": "530240",
    "end": "539360"
  },
  {
    "text": "back a decision and then based on that there's a yes or no on the action so let's try to zoom into",
    "start": "539360",
    "end": "547040"
  },
  {
    "text": "this a little bit um so how does an object creation work",
    "start": "547040",
    "end": "552160"
  },
  {
    "text": "in kubernetes um so here we'll try to look at it through an animation",
    "start": "552160",
    "end": "557360"
  },
  {
    "text": "so here's um you sitting with a smiley face um",
    "start": "557360",
    "end": "562880"
  },
  {
    "text": "uh that's and you're using cube cuddle with your keep config file to create a kubernetes pod",
    "start": "562880",
    "end": "570000"
  },
  {
    "text": "so uh you you type keep color create and then you you're creating a part",
    "start": "570000",
    "end": "576240"
  },
  {
    "text": "right that request goes to kubernetes api server um and these are all the",
    "start": "576240",
    "end": "584160"
  },
  {
    "text": "all everything you see here in blue is uh the control plane components in kubernetes",
    "start": "584160",
    "end": "591519"
  },
  {
    "text": "that is stored that object you're you're trying to create it's stored in at city database and then you get a success pack",
    "start": "591519",
    "end": "600880"
  },
  {
    "text": "if there was an issue with your schema or if you didn't have the proper authentication you'd get an error right",
    "start": "600880",
    "end": "607040"
  },
  {
    "text": "here the scheduler and controller manager are",
    "start": "607040",
    "end": "613120"
  },
  {
    "text": "controllers that are always watching for new objects they'll get they'll watch and notice",
    "start": "613120",
    "end": "620000"
  },
  {
    "text": "this change scheduler will quickly assign a node uh to this pod and say this node seems to have",
    "start": "620000",
    "end": "628160"
  },
  {
    "text": "some extra space so schedule it here so look at that node what happens on",
    "start": "628160",
    "end": "633519"
  },
  {
    "text": "that node you have all these data plane components that are present on every node right",
    "start": "633519",
    "end": "639440"
  },
  {
    "text": "you have your uh cubelet you have your cni uh docker daemon or cri daemon",
    "start": "639440",
    "end": "646240"
  },
  {
    "text": "and q proxy so what happens here is cubelet notices",
    "start": "646240",
    "end": "652399"
  },
  {
    "text": "that it has a pod that is suppose it's supposed to schedule so a cubelet will coordinate the part",
    "start": "652399",
    "end": "658880"
  },
  {
    "text": "creation uh first it will create a pod network namespace",
    "start": "658880",
    "end": "664240"
  },
  {
    "text": "and notify dr damon or cri daemon to create containers inside it one or",
    "start": "664240",
    "end": "669920"
  },
  {
    "text": "more containers then it will send out an ad command to cni",
    "start": "669920",
    "end": "675839"
  },
  {
    "text": "uh cni's contain a networking interface that goes depending on which cni you're using",
    "start": "675839",
    "end": "682959"
  },
  {
    "text": "um it will create a network interface for the pod assign an ip address uh to make sure",
    "start": "682959",
    "end": "689360"
  },
  {
    "text": "this part can talk to all the other parts in the cluster and then kubler will say",
    "start": "689360",
    "end": "695600"
  },
  {
    "text": "it success that part has been scheduled keep proxy notice it notices that change",
    "start": "695600",
    "end": "702000"
  },
  {
    "text": "and it will add that part as an endpoint if there is a",
    "start": "702000",
    "end": "707519"
  },
  {
    "text": "service using ipvs or ip tables so this is a very high level overview of",
    "start": "707519",
    "end": "714079"
  },
  {
    "text": "how an object is created now in this process let's try to zoom",
    "start": "714079",
    "end": "719839"
  },
  {
    "text": "into step one two and three from when you create a kubernetes object",
    "start": "719839",
    "end": "726079"
  },
  {
    "text": "um and then you get a success back which is number three inside the api server",
    "start": "726079",
    "end": "732880"
  },
  {
    "text": "there's a whole bunch of things that go that are going on first thing is the http api handler",
    "start": "732880",
    "end": "739279"
  },
  {
    "text": "when you do a cube cuddle create it's handling your api request",
    "start": "739279",
    "end": "744800"
  },
  {
    "text": "the next thing it goes through is authentication and authorization it will make sure that you are who you",
    "start": "744800",
    "end": "751360"
  },
  {
    "text": "say you are that's you know that you're providing through keep config here",
    "start": "751360",
    "end": "756560"
  },
  {
    "text": "and authorization to show that you have the right credentials",
    "start": "756560",
    "end": "763600"
  },
  {
    "text": "to do sorry uh you're authorized to make this change uh to work on this operation that's",
    "start": "763600",
    "end": "770720"
  },
  {
    "text": "that's something you define in kubernetes are back for example after you pass that there's mutating",
    "start": "770720",
    "end": "777440"
  },
  {
    "text": "admission web hooks where you can have something where you want to insert something or mutate",
    "start": "777440",
    "end": "784480"
  },
  {
    "text": "the object before it gets stored in onto lcd after that there's schema validation to",
    "start": "784480",
    "end": "790720"
  },
  {
    "text": "make sure that uh the schema you've specified is sorry the object you're creating is uh",
    "start": "790720",
    "end": "798000"
  },
  {
    "text": "the correct schema for the api version you are using uh this is where all your typos and",
    "start": "798000",
    "end": "805120"
  },
  {
    "text": "wrong yaml syntax will be caught and rejected",
    "start": "805120",
    "end": "810639"
  },
  {
    "text": "yeah um robert is very famous for mistyping things",
    "start": "812240",
    "end": "818720"
  },
  {
    "text": "um after that there's admission validating admission webhooks uh step 1.6 and 1.7 this is where",
    "start": "819199",
    "end": "827199"
  },
  {
    "text": "oppa comes in after your object schema is validated",
    "start": "827199",
    "end": "834160"
  },
  {
    "text": "it's sent to oppa or some external admission admission controller it will",
    "start": "834160",
    "end": "841440"
  },
  {
    "text": "review it and then return the response back and if if it says okay",
    "start": "841440",
    "end": "846880"
  },
  {
    "text": "then it's stored onto etcd and then you get a success back uh in cubecode",
    "start": "846880",
    "end": "854000"
  },
  {
    "text": "so let's take a look at let's zoom into that um here step 1.6",
    "start": "854839",
    "end": "862240"
  },
  {
    "text": "and 1.7 what happens uh from your object to the admission controller",
    "start": "862240",
    "end": "868480"
  },
  {
    "text": "especially in case of oppa so you have your kubernetes",
    "start": "868480",
    "end": "873920"
  },
  {
    "text": "object yaml file and then through keep curl you're specifying uh what you're trying to do let's say",
    "start": "873920",
    "end": "881760"
  },
  {
    "text": "create or update list some operation on the object",
    "start": "881760",
    "end": "888800"
  },
  {
    "text": "within the api server there is a request form called admission review request where the",
    "start": "889440",
    "end": "895920"
  },
  {
    "text": "kubernetes object is embedded into that request and operation that you're trying to",
    "start": "895920",
    "end": "902240"
  },
  {
    "text": "perform using using cube color or whatever tool you're using",
    "start": "902240",
    "end": "908639"
  },
  {
    "text": "that's also embedded in that admission review request uh that goes to your",
    "start": "908639",
    "end": "916320"
  },
  {
    "text": "uh that goes to oppa in this case as a query in json format oppa is",
    "start": "916320",
    "end": "922880"
  },
  {
    "text": "checking against all the policies you have created in advance",
    "start": "922880",
    "end": "928399"
  },
  {
    "text": "that's using rego policy language that we'll cover in a bit",
    "start": "928399",
    "end": "934800"
  },
  {
    "text": "and then it will see it will check all the policies to see if this",
    "start": "935600",
    "end": "942240"
  },
  {
    "text": "exact admission review request this object um and this operation is allowed to be",
    "start": "942240",
    "end": "948160"
  },
  {
    "text": "performed um and then we'll send back a decision",
    "start": "948160",
    "end": "954240"
  },
  {
    "text": "as admission review response object back to the api server and",
    "start": "954240",
    "end": "960880"
  },
  {
    "text": "based on the response you get either stored onto etc or user gets an error saying",
    "start": "960880",
    "end": "966000"
  },
  {
    "text": "you're not allowed to do this right now so kind of a stupid analogy that i like",
    "start": "966000",
    "end": "973120"
  },
  {
    "text": "to use for this process is um uh you know when you go to nightclubs um",
    "start": "973120",
    "end": "980720"
  },
  {
    "text": "i know we're not supposed to go there right now because of all this pandemic um but there's usually a bouncer who has",
    "start": "980720",
    "end": "988160"
  },
  {
    "text": "a list of all the guests and there's a line every time a new person comes in",
    "start": "988160",
    "end": "995040"
  },
  {
    "text": "the bouncer will check their name against uh that list they have so you can think",
    "start": "995040",
    "end": "1000800"
  },
  {
    "text": "of oppa as that bouncer and all the regal policies as that list",
    "start": "1000800",
    "end": "1006560"
  },
  {
    "text": "and all the objects and everything you create update delete in kubernetes all those",
    "start": "1006560",
    "end": "1014000"
  },
  {
    "text": "objects and operations are the people standing in line to be",
    "start": "1014000",
    "end": "1020240"
  },
  {
    "text": "admitted to the nightclub so anyway that's um that's my stupid",
    "start": "1020240",
    "end": "1026640"
  },
  {
    "text": "analogy so let's quickly take a look at the",
    "start": "1026640",
    "end": "1033120"
  },
  {
    "text": "rego language that we're using to create these policies so",
    "start": "1033120",
    "end": "1039839"
  },
  {
    "start": "1038000",
    "end": "1038000"
  },
  {
    "text": "some language basics there are variables you can assign some",
    "start": "1039839",
    "end": "1046558"
  },
  {
    "text": "value to the variables using this syntax and these are not",
    "start": "1046559",
    "end": "1052960"
  },
  {
    "text": "like you know you don't have to predefine x is an integer type you can just say",
    "start": "1052960",
    "end": "1059360"
  },
  {
    "text": "x equals 42 and it will create and assign that value if it already doesn't exist to x",
    "start": "1059360",
    "end": "1067760"
  },
  {
    "text": "it can be a string or boolean or you know a composite data type",
    "start": "1067760",
    "end": "1075280"
  },
  {
    "text": "equality you can equate x equals equals 42 that returns a boolean if it's true",
    "start": "1075280",
    "end": "1082799"
  },
  {
    "text": "not equals you can compare two strings compare variable with a number greater",
    "start": "1082799",
    "end": "1088880"
  },
  {
    "text": "than equal to or greater than less than um",
    "start": "1088880",
    "end": "1094559"
  },
  {
    "text": "there's also a race um in rego where you have",
    "start": "1094559",
    "end": "1100960"
  },
  {
    "text": "multiple objects um and they can be of any type in an array and looking up",
    "start": "1100960",
    "end": "1109919"
  },
  {
    "text": "things is similar you can have in an array you can look it up by a specific index",
    "start": "1109919",
    "end": "1117280"
  },
  {
    "text": "or you can look it up by a specific key in a key value pair in this case object foo that's looking",
    "start": "1117280",
    "end": "1123679"
  },
  {
    "text": "up the fu index whatever the value is there",
    "start": "1123679",
    "end": "1128880"
  },
  {
    "text": "then if you have a nested object which will most likely be the case if you're using rego for admission",
    "start": "1129840",
    "end": "1136880"
  },
  {
    "text": "controller you can use the dot notation to go down the hierarchy",
    "start": "1136880",
    "end": "1142160"
  },
  {
    "text": "we'll see that one in a bit more detail",
    "start": "1142160",
    "end": "1146480"
  },
  {
    "text": "it also comes with a bunch of built-in functions like starts with to check if",
    "start": "1147280",
    "end": "1155120"
  },
  {
    "text": "a particular string starts with this substring ends with contains trim split and count",
    "start": "1155120",
    "end": "1164480"
  },
  {
    "text": "this is so you don't have to perform a lot of string operations manually",
    "start": "1164480",
    "end": "1172480"
  },
  {
    "text": "iteration is slightly different from other programming languages if you're used to them",
    "start": "1173440",
    "end": "1179600"
  },
  {
    "text": "let's say you have x equals an array of a couple of elements right you can have",
    "start": "1179600",
    "end": "1186960"
  },
  {
    "text": "you can say x of index which is 0 1 2. or if you want to iterate through them",
    "start": "1186960",
    "end": "1193679"
  },
  {
    "text": "and assign all those values you can say y equals sorry y column",
    "start": "1193679",
    "end": "1199919"
  },
  {
    "text": "equals x in square bracket underscore that means it will assign all those",
    "start": "1199919",
    "end": "1205679"
  },
  {
    "text": "values a b and c to y you can also do a traditional for loop",
    "start": "1205679",
    "end": "1214000"
  },
  {
    "text": "using the keyword sum sum of i and x of i it will go through a b and c",
    "start": "1214000",
    "end": "1221520"
  },
  {
    "text": "0 1 and 2 indexes and double for loop sum of i and j",
    "start": "1221520",
    "end": "1229039"
  },
  {
    "text": "now let's take a look at how a kubernetes object will look like um um",
    "start": "1232400",
    "end": "1239200"
  },
  {
    "text": "in a as an admission review object right you have a very simple kubernetes object",
    "start": "1239200",
    "end": "1244240"
  },
  {
    "text": "yaml file now this is a pod name is my app and container image is",
    "start": "1244240",
    "end": "1251600"
  },
  {
    "text": "nginx and the name is ngx frontend so when it gets to oppa",
    "start": "1251600",
    "end": "1258400"
  },
  {
    "text": "it will look like this admission review json object you have a larger field called",
    "start": "1258400",
    "end": "1265440"
  },
  {
    "text": "input and then you have admission review object then there's a request kind for pod",
    "start": "1265440",
    "end": "1272720"
  },
  {
    "text": "type person and then in the in the object field you have",
    "start": "1272720",
    "end": "1279600"
  },
  {
    "text": "metadata which has name spec image and notice this is a square bracket here",
    "start": "1279600",
    "end": "1287200"
  },
  {
    "text": "and here that means it's an array um and you can go there's a sample regal",
    "start": "1287200",
    "end": "1294720"
  },
  {
    "text": "playground link um by the way if you're not familiar with it uh the rego playground is pretty cool you can",
    "start": "1294720",
    "end": "1302000"
  },
  {
    "text": "have uh you can evaluate the policies you write against different objects um before you",
    "start": "1302000",
    "end": "1309840"
  },
  {
    "text": "create and apply those to your admission controller i was just about to jump in and say the same the",
    "start": "1309840",
    "end": "1314960"
  },
  {
    "text": "the uh the open policy the rego playground is is super useful if you're trying to develop",
    "start": "1314960",
    "end": "1320559"
  },
  {
    "text": "policies um depending on what what environments you have to play with i i learned a ton just by talking most messing",
    "start": "1320559",
    "end": "1327120"
  },
  {
    "text": "around with that totally worth it yeah and um since we might have a little bit of",
    "start": "1327120",
    "end": "1335120"
  },
  {
    "text": "time let's click through it um just want to quickly show you how it works right there are three",
    "start": "1335120",
    "end": "1342880"
  },
  {
    "text": "main sections here input you have your rego policy here and output",
    "start": "1342880",
    "end": "1350480"
  },
  {
    "text": "so in this predefined page i have a sample object",
    "start": "1350480",
    "end": "1356799"
  },
  {
    "text": "that's already there right it's a part admission review um and then there is a pod and it has a",
    "start": "1356799",
    "end": "1364880"
  },
  {
    "text": "label environment equals not dev-42 what this policy is saying here is",
    "start": "1364880",
    "end": "1373280"
  },
  {
    "text": "uh check if check to make sure if make sure that the object that's being",
    "start": "1373280",
    "end": "1381440"
  },
  {
    "text": "created has a label environment that starts with the dev",
    "start": "1381440",
    "end": "1388640"
  },
  {
    "text": "if we evaluate this it says it's supposed to start with dev dash and not this whatever you have",
    "start": "1388640",
    "end": "1396640"
  },
  {
    "text": "so what it's doing here is input here which is this whole thing dot",
    "start": "1396640",
    "end": "1403039"
  },
  {
    "text": "request uh this is the request object",
    "start": "1403039",
    "end": "1409200"
  },
  {
    "text": "which is here metadata labels and environment line 11 here",
    "start": "1409200",
    "end": "1416960"
  },
  {
    "text": "so it's assigning its value to the the variable value",
    "start": "1416960",
    "end": "1424480"
  },
  {
    "text": "and if it if the value doesn't start not start with dev dash",
    "start": "1424480",
    "end": "1431440"
  },
  {
    "text": "then it's it's false right it's going to return false for this predefined deny statement",
    "start": "1431440",
    "end": "1439600"
  },
  {
    "text": "so i deny a function all right let's get back to this one",
    "start": "1439600",
    "end": "1448480"
  },
  {
    "text": "so here's another sample rego uh policy where you have a function",
    "start": "1450080",
    "end": "1457039"
  },
  {
    "text": "called match and it's you can return a message",
    "start": "1457039",
    "end": "1462720"
  },
  {
    "text": "with with your allow or deny whatever you want here",
    "start": "1462720",
    "end": "1468720"
  },
  {
    "text": "input.request.operation now operation is also included i didn't show it in the previous slide",
    "start": "1469159",
    "end": "1476159"
  },
  {
    "text": "but you can also be very specific to which operation you want to apply this policy to create update uh",
    "start": "1476159",
    "end": "1484720"
  },
  {
    "text": "put delete etc if you don't specify that it applies to",
    "start": "1484720",
    "end": "1490240"
  },
  {
    "text": "all of them uh the time you have to make sure this uh this is there is if you're applying",
    "start": "1490240",
    "end": "1497600"
  },
  {
    "text": "policies and you already have a bunch of resources created you may not",
    "start": "1497600",
    "end": "1502799"
  },
  {
    "text": "be able to delete them afterwards if you don't have a specified",
    "start": "1502799",
    "end": "1507919"
  },
  {
    "text": "operation kind dot kind is part uh resource is pods",
    "start": "1507919",
    "end": "1516400"
  },
  {
    "text": "and this one is checking against privileged containers so input dot request object spec",
    "start": "1516400",
    "end": "1524159"
  },
  {
    "text": "containers now you will see there's an underscore that means it will if you have more than one containers it",
    "start": "1524159",
    "end": "1530240"
  },
  {
    "text": "will go through them and assign them evaluate them each of them one at a time and",
    "start": "1530240",
    "end": "1538080"
  },
  {
    "text": "security contacts and privilege if that is true then it will return true formats",
    "start": "1538080",
    "end": "1545440"
  },
  {
    "text": "with a message saying privileged parts are denied now one gotcha here is edit containers",
    "start": "1545440",
    "end": "1553360"
  },
  {
    "text": "in kubernetes part you can have in it containers that are that don't",
    "start": "1553360",
    "end": "1559279"
  },
  {
    "text": "follow the same structure uh and then those ones they can escape",
    "start": "1559279",
    "end": "1564960"
  },
  {
    "text": "this policy a lot of people make that mistake uh so make sure that is covered",
    "start": "1564960",
    "end": "1571840"
  },
  {
    "text": "all right so how does a rigo policy look like",
    "start": "1573279",
    "end": "1580320"
  },
  {
    "text": "you have this higher level policy and allow is a function right it's a",
    "start": "1580400",
    "end": "1587760"
  },
  {
    "text": "rule in this policy within that within that",
    "start": "1587760",
    "end": "1596480"
  },
  {
    "text": "rule you have statements individual statements that you're evaluating",
    "start": "1596480",
    "end": "1601840"
  },
  {
    "text": "um and if you have multiple of those that return different boolean values",
    "start": "1601840",
    "end": "1608000"
  },
  {
    "text": "they get there's an end operation for them so input.val",
    "start": "1608000",
    "end": "1613279"
  },
  {
    "text": "equals uh equals equals 42. uh less zero equals equals care",
    "start": "1613279",
    "end": "1618880"
  },
  {
    "text": "if both of them are true then allow returns a true",
    "start": "1618880",
    "end": "1624880"
  },
  {
    "text": "same thing with the other allow right and between those rules they get ored",
    "start": "1625039",
    "end": "1632960"
  },
  {
    "text": "so only one of them have to return true for the domain allowed to be true",
    "start": "1632960",
    "end": "1642159"
  },
  {
    "text": "right and you you can specify a default value for allow",
    "start": "1642159",
    "end": "1647360"
  },
  {
    "text": "up here which is false you should always specify this as a best",
    "start": "1647360",
    "end": "1653840"
  },
  {
    "text": "practice to fall to false or whatever negative value you want to assign",
    "start": "1653840",
    "end": "1661919"
  },
  {
    "text": "now let's take a look at some security best practices for kubernetes right the way",
    "start": "1664640",
    "end": "1673600"
  },
  {
    "start": "1669000",
    "end": "1669000"
  },
  {
    "text": "i look at it is there's four main areas integration touch points for",
    "start": "1673600",
    "end": "1679600"
  },
  {
    "text": "security one is in the development phase then you have your ci cd",
    "start": "1679600",
    "end": "1684799"
  },
  {
    "text": "phase then pre-deployment phase and run time so",
    "start": "1684799",
    "end": "1692640"
  },
  {
    "text": "the things you can do here is uh dev and devops checks is you can have some",
    "start": "1692640",
    "end": "1699440"
  },
  {
    "text": "checks built into the uh built into ide uh get pre-commit checks uh to follow security some of the",
    "start": "1699440",
    "end": "1707360"
  },
  {
    "text": "security best practices in the cicd pipeline you can have a whole bunch of i.t",
    "start": "1707360",
    "end": "1713200"
  },
  {
    "text": "governance policies you can also use uh oppa here in your cicd pipeline to",
    "start": "1713200",
    "end": "1720080"
  },
  {
    "text": "validate the kubernetes manifest you are checking in",
    "start": "1720080",
    "end": "1725279"
  },
  {
    "text": "against some compliance issues or whatnot admission",
    "start": "1725279",
    "end": "1732159"
  },
  {
    "text": "checks uh this is where the admission controller comes into picture right you can bypass ci cd you can ignore ide",
    "start": "1732159",
    "end": "1740320"
  },
  {
    "text": "error messages you can merge the code however you want right there is",
    "start": "1740320",
    "end": "1745919"
  },
  {
    "text": "no enforcement point there with admission controller it makes sure whoever is creating this",
    "start": "1745919",
    "end": "1753039"
  },
  {
    "text": "resource is following these policies there is no you cannot bypass it right even if it's a kubernetes higher",
    "start": "1753039",
    "end": "1760240"
  },
  {
    "text": "level object creating another part it has to go through the same admission review process this is where",
    "start": "1760240",
    "end": "1768080"
  },
  {
    "text": "you can check for things like signed images i.t approved based images you're following security best practices",
    "start": "1768080",
    "end": "1775440"
  },
  {
    "text": "or you're making changes at allowed business hours",
    "start": "1775440",
    "end": "1781679"
  },
  {
    "text": "sorry not during not during business hours",
    "start": "1781679",
    "end": "1786720"
  },
  {
    "text": "and runtime checks similar policies you just look for violations in those",
    "start": "1787520",
    "end": "1795760"
  },
  {
    "text": "so let's take a look at a couple of security best practices",
    "start": "1795760",
    "end": "1802159"
  },
  {
    "start": "1796000",
    "end": "1796000"
  },
  {
    "text": "where you can use an admission controller for and then robert will walk through each",
    "start": "1802159",
    "end": "1808480"
  },
  {
    "text": "of them individually so first one is",
    "start": "1808480",
    "end": "1814159"
  },
  {
    "text": "only running your container from a trusted source you don't want to run containers from you know docker hub where anyone can",
    "start": "1814159",
    "end": "1822640"
  },
  {
    "text": "push things you want you want to trust register your company's registry",
    "start": "1822640",
    "end": "1830080"
  },
  {
    "text": "not allowing dash dev latest master image tags right a lot of times",
    "start": "1831279",
    "end": "1838880"
  },
  {
    "text": "you have your ci cd pipeline set up where every time a developer checks in new code",
    "start": "1838880",
    "end": "1845039"
  },
  {
    "text": "in let's say dev brands or master brands which is called main brands now uh",
    "start": "1845039",
    "end": "1852399"
  },
  {
    "text": "docker uh a docker image is built in the ci cd and it's pushed against those tags um in the repository",
    "start": "1852640",
    "end": "1860880"
  },
  {
    "text": "so not even by mistake you want to use those same thing with latest all these tags",
    "start": "1860880",
    "end": "1867919"
  },
  {
    "text": "don't tell you which version you're using right so",
    "start": "1867919",
    "end": "1873120"
  },
  {
    "text": "preventing those that's good hygiene uh not allowing privileged",
    "start": "1873120",
    "end": "1879440"
  },
  {
    "text": "containers this is kind of uh very uh this very dangerous if you're if",
    "start": "1879440",
    "end": "1886399"
  },
  {
    "text": "you're running a privileged container it has access to the host and all the other containers file system",
    "start": "1886399",
    "end": "1893760"
  },
  {
    "text": "which process it's running uh all the network calls everything so make sure you're there should be",
    "start": "1893760",
    "end": "1901840"
  },
  {
    "text": "very few exceptions to this",
    "start": "1901840",
    "end": "1907279"
  },
  {
    "text": "not mounting uh the host file system um like mounting etc bar",
    "start": "1907279",
    "end": "1914320"
  },
  {
    "text": "of the host to the to the pod that means it can modify",
    "start": "1914320",
    "end": "1920880"
  },
  {
    "text": "etc bar like root of the host and it's also not a best practice",
    "start": "1920880",
    "end": "1927760"
  },
  {
    "text": "if your part dies gets recreated somewhere else it doesn't have the same local file",
    "start": "1927760",
    "end": "1934000"
  },
  {
    "text": "system anymore um this one is important making sure your",
    "start": "1934000",
    "end": "1939760"
  },
  {
    "text": "container file system is read only this check alone will get you a very",
    "start": "1939760",
    "end": "1945200"
  },
  {
    "text": "high score in metasploit uh check because your container file system is read only",
    "start": "1945200",
    "end": "1952720"
  },
  {
    "text": "that means you cannot if there's anything there's any malware",
    "start": "1952720",
    "end": "1958960"
  },
  {
    "text": "it cannot download anything it cannot execute anything it's a read-only file system",
    "start": "1958960",
    "end": "1964559"
  },
  {
    "text": "all you can do is read and this is another good hygiene thing",
    "start": "1964559",
    "end": "1973200"
  },
  {
    "text": "blocking services of type port you might have developers who just create a lot of",
    "start": "1973200",
    "end": "1980320"
  },
  {
    "text": "they might bypass and create public-facing services using node port service so those are",
    "start": "1980320",
    "end": "1988640"
  },
  {
    "text": "some of them um uh i have a github repo here",
    "start": "1988640",
    "end": "1993840"
  },
  {
    "text": "uh github.com cloud native security where i list",
    "start": "1993840",
    "end": "2000159"
  },
  {
    "text": "a whole bunch of these with risk or assigned to them uh not all of them are applicable for",
    "start": "2000159",
    "end": "2005919"
  },
  {
    "text": "admission controller but you can go through them and see which ones you can apply and what tools you can use",
    "start": "2005919",
    "end": "2012720"
  },
  {
    "text": "so now i'll hand it over to robert to go through uh these use cases in more",
    "start": "2012720",
    "end": "2019679"
  },
  {
    "text": "detail and show us the rego files okay thanks very much so",
    "start": "2019679",
    "end": "2028159"
  },
  {
    "text": "full disclosure i am using the opa open implementation and emission",
    "start": "2028159",
    "end": "2033919"
  },
  {
    "text": "control on palo alto's prismacloud but it doesn't actually affect how you would run any of this it's just the",
    "start": "2033919",
    "end": "2039360"
  },
  {
    "text": "easiest way for me to do the demo um so let's just uh let's just start um so let's have a look",
    "start": "2039360",
    "end": "2045679"
  },
  {
    "text": "let's just cat just type in the right thing",
    "start": "2045679",
    "end": "2051919"
  },
  {
    "text": "okay here's my real simple piece of kubernetes yaml okay um it's just going to start what it does",
    "start": "2052560",
    "end": "2058000"
  },
  {
    "text": "is start a pod running running nginx it's pretty pretty simple so if i'm",
    "start": "2058000",
    "end": "2063358"
  },
  {
    "text": "lucky and i can type as we were discussing earlier",
    "start": "2063359",
    "end": "2069039"
  },
  {
    "text": "see i cannot type and i cannot type even more in front of an audience so let's run this",
    "start": "2073200",
    "end": "2080158"
  },
  {
    "text": "i think this is waking up all right okay so my image",
    "start": "2080159",
    "end": "2087040"
  },
  {
    "text": "nginx lotus fails to come from a trusted repository registry so let's just take a look at uh",
    "start": "2087040",
    "end": "2092240"
  },
  {
    "start": "2091000",
    "end": "2091000"
  },
  {
    "text": "like gunjan's rules of uh of a container hygiene so this is the rule that we're actually using um it's not actually using",
    "start": "2092240",
    "end": "2098720"
  },
  {
    "text": "hooli.com as the as the image start but this is basically enforcing",
    "start": "2098720",
    "end": "2103920"
  },
  {
    "text": "that my image comes from a trusted repository so um i think if i can't",
    "start": "2103920",
    "end": "2111520"
  },
  {
    "text": "i think now i should clear between each ones now i'm pulling my image from my uh this is my personal uh my personal",
    "start": "2111839",
    "end": "2119440"
  },
  {
    "text": "google uh container image repository this could obviously be anywhere anywhere you like so maybe this will work for me so",
    "start": "2119440",
    "end": "2131839"
  },
  {
    "text": "actually yeah ah okay so my image is tagged dev pro",
    "start": "2133119",
    "end": "2139920"
  },
  {
    "text": "latest which are not allowed so let's go back to here okay so this is the rule that's kicking in",
    "start": "2139920",
    "end": "2145040"
  },
  {
    "start": "2143000",
    "end": "2143000"
  },
  {
    "text": "here um again it's just picking up the the image um",
    "start": "2145040",
    "end": "2151520"
  },
  {
    "text": "is the image uh got latest master or dev as a tag",
    "start": "2151520",
    "end": "2156560"
  },
  {
    "text": "and if it is then i i'm i'm blocked the way that we we do the blocking in um in in prisma is anytime that this",
    "start": "2156560",
    "end": "2164079"
  },
  {
    "text": "match is it's an automatic negative but you could change this to deny it's not it's not like a language specific thing",
    "start": "2164079",
    "end": "2171119"
  },
  {
    "text": "okay so i think if i took",
    "start": "2171119",
    "end": "2176880"
  },
  {
    "text": "it three okay so i've now used the deploy",
    "start": "2176880",
    "end": "2182240"
  },
  {
    "text": "tag which is very imaginative of me so hopefully now i'm using a",
    "start": "2182240",
    "end": "2187680"
  },
  {
    "text": "a trusted registry and i'm using a deploy tag so let's just take a look now",
    "start": "2187680",
    "end": "2193760"
  },
  {
    "text": "privilege escalation pod not allowed okay so let's just click here okay um so",
    "start": "2198960",
    "end": "2206640"
  },
  {
    "start": "2203000",
    "end": "2203000"
  },
  {
    "text": "here i'm looking at this thing here for allow privilege escalation",
    "start": "2206640",
    "end": "2212320"
  },
  {
    "text": "now obviously there's other ones we can do like runner's route and a few other things you could throw in here but to keep them simple i just picked on",
    "start": "2212320",
    "end": "2217440"
  },
  {
    "text": "allow privilege escalation so let's have a look so maybe if i",
    "start": "2217440",
    "end": "2223838"
  },
  {
    "text": "take a look at",
    "start": "2225280",
    "end": "2229839"
  },
  {
    "text": "okay so now if you noticed before i had privilege it was equal to true and privileged escalation was",
    "start": "2231280",
    "end": "2236800"
  },
  {
    "text": "true and i had it running as roots you could pick on any one of those things and you should probably you should probably pick on all three of",
    "start": "2236800",
    "end": "2242560"
  },
  {
    "text": "these things so now let's see we've got trusted registry deploy tag uh",
    "start": "2242560",
    "end": "2247839"
  },
  {
    "text": "no privilege escalation running as a high number jesus so",
    "start": "2247839",
    "end": "2252800"
  },
  {
    "text": "hopefully see if this gets me there",
    "start": "2254839",
    "end": "2261680"
  },
  {
    "text": "okay so this is i see we're trying to mount the var var directory now there's a good",
    "start": "2261920",
    "end": "2267359"
  },
  {
    "text": "argument that um you shouldn't mount file systems of the host at all but here i'm just demonstrating that we",
    "start": "2267359",
    "end": "2273359"
  },
  {
    "text": "can we can mount um we can mount sort of uh we can control which mounts",
    "start": "2273359",
    "end": "2278960"
  },
  {
    "start": "2276000",
    "end": "2276000"
  },
  {
    "text": "might be allowed okay so i'm you know if it starts with the etc let's see if",
    "start": "2278960",
    "end": "2285520"
  },
  {
    "text": "it starts with var if it's just just mount everything then i'm going to stop that um i there are probably great arguments",
    "start": "2285520",
    "end": "2293440"
  },
  {
    "text": "you could have about whether there's ever a good thing to mount a hot host file system or not um but here's",
    "start": "2293440",
    "end": "2298960"
  },
  {
    "text": "just a demonstration of how we can do and you could actually you could actually stop it if it was any kind of host path mentioned there at all",
    "start": "2298960",
    "end": "2305440"
  },
  {
    "text": "so um let's take a look at um let's look at number five okay so now",
    "start": "2305440",
    "end": "2313359"
  },
  {
    "text": "i'm just mounting the home directory into slash m t slash home",
    "start": "2313359",
    "end": "2318960"
  },
  {
    "text": "no we could we could say is that good or bad but i decided to allow it in my in my environment so now i'm using",
    "start": "2318960",
    "end": "2324400"
  },
  {
    "text": "privileged container a trusted registry rather deploy tag no no privilege escalation and a and a",
    "start": "2324400",
    "end": "2332560"
  },
  {
    "text": "host path amount i'm hopefully happy with so let's um let's try that",
    "start": "2332560",
    "end": "2339440"
  },
  {
    "text": "let's click the screen to make it slightly easier to see what's going on so nobody number five will be the charm",
    "start": "2339440",
    "end": "2348400"
  },
  {
    "text": "okay we could have a read only root first file system because in jan's rules of container hygiene file",
    "start": "2350560",
    "end": "2356720"
  },
  {
    "text": "system route uh read only um",
    "start": "2356720",
    "end": "2362720"
  },
  {
    "text": "so let's have a look down here this is basically looking for",
    "start": "2362720",
    "end": "2368800"
  },
  {
    "text": "i get the consideration up a bit not read only root file system in there",
    "start": "2368800",
    "end": "2375119"
  },
  {
    "start": "2372000",
    "end": "2372000"
  },
  {
    "text": "okay you've got to have um not only is it going to be there it's got to be set to false",
    "start": "2375119",
    "end": "2380240"
  },
  {
    "text": "so there we go um so if i take a look at",
    "start": "2380240",
    "end": "2386880"
  },
  {
    "text": "okay so now i have a trusted registry deploy tag",
    "start": "2389680",
    "end": "2397440"
  },
  {
    "text": "file system mounts i'm comfortable with no escalation and read our new file system set to true",
    "start": "2397440",
    "end": "2405920"
  },
  {
    "text": "so and i've been successful so basically this this whole chain of stuff has",
    "start": "2408839",
    "end": "2414560"
  },
  {
    "text": "forced me to apply a sort of good hygiene to my my pod creation",
    "start": "2414560",
    "end": "2420160"
  },
  {
    "text": "um but there was one other rule prevent node port services um",
    "start": "2420160",
    "end": "2426880"
  },
  {
    "start": "2423000",
    "end": "2423000"
  },
  {
    "text": "essentially i really want all of my traffic to be going through proper ingress control low balancer type",
    "start": "2426880",
    "end": "2432880"
  },
  {
    "text": "objects i don't really want to create a node port because that potentially exposes my container",
    "start": "2432880",
    "end": "2438800"
  },
  {
    "text": "to um to the outside world without any of the controls in my environment so just flick back to here",
    "start": "2438800",
    "end": "2446240"
  },
  {
    "text": "and let's just take a look at uh i've imaginatively not named this",
    "start": "2447520",
    "end": "2454640"
  },
  {
    "text": "this is just a real simple you know service node port selects for the app my",
    "start": "2454640",
    "end": "2461040"
  },
  {
    "text": "app um listens on port 80 no port 3 3007 so",
    "start": "2461040",
    "end": "2468960"
  },
  {
    "text": "and again because the rules kicked in and this is spotted that it's node port um i've been",
    "start": "2474480",
    "end": "2481680"
  },
  {
    "text": "unable to do it now these are simple um simple rule sets um you know you can",
    "start": "2481680",
    "end": "2489599"
  },
  {
    "text": "build multiple multiple uh kind of detections in each one you can uh you can make your message as",
    "start": "2489599",
    "end": "2497440"
  },
  {
    "text": "long and as unpleasant as you like um there's it's easier in some ways depending on your implementation i think",
    "start": "2497440",
    "end": "2504000"
  },
  {
    "text": "to keep rules separately rather than trying to combine them into into one one mega rule because",
    "start": "2504000",
    "end": "2510319"
  },
  {
    "text": "it allows you to create um you know different different rules for different places it's slightly more portable",
    "start": "2510319",
    "end": "2517760"
  },
  {
    "text": "i find dealing with large chunks of rule text",
    "start": "2517760",
    "end": "2522800"
  },
  {
    "text": "that have multiple matching statements in it slightly more complicated um so",
    "start": "2522800",
    "end": "2531280"
  },
  {
    "text": "there we go with that um i i personally like to do it this way though there are",
    "start": "2531280",
    "end": "2536319"
  },
  {
    "text": "other definitely other ways you can put these rule sets together so um i think we'll take",
    "start": "2536319",
    "end": "2544560"
  },
  {
    "text": "actually let's take some questions because there seems to be a bunch of questions that have come through in this last this last environment um probably",
    "start": "2544640",
    "end": "2554160"
  },
  {
    "text": "i won't be to ask of that that might answer that many of them which is why i brought my cleverer friend with me",
    "start": "2554160",
    "end": "2561119"
  },
  {
    "text": "hey robert do you want to switch over to the resources slide so yeah sure so we can do that example",
    "start": "2562240",
    "end": "2568480"
  },
  {
    "start": "2568000",
    "end": "2568000"
  },
  {
    "text": "if they want to take a note this will um and these slides are obviously be available later on anyway so you can you can get to these",
    "start": "2568480",
    "end": "2575200"
  },
  {
    "text": "um the policies that we used today were in this github repository the first thing",
    "start": "2575200",
    "end": "2581760"
  },
  {
    "text": "there is a subdirectory of the operigo policies called i think cncf webinar you can look in there",
    "start": "2581760",
    "end": "2590079"
  },
  {
    "text": "there we have a blog on container security best practices which is uh what we've been referencing today the last two are specifically",
    "start": "2590079",
    "end": "2596960"
  },
  {
    "text": "around how where prismacloud have implemented opa support and um how we've done uh ingress control",
    "start": "2596960",
    "end": "2604319"
  },
  {
    "text": "how we've done admission control in in there so that is quite specific to uh to prismacloud technologies",
    "start": "2604319",
    "end": "2610720"
  },
  {
    "text": "um with that what we've got sort of ten minutes or so left to go to answer some questions um",
    "start": "2610720",
    "end": "2618000"
  },
  {
    "text": "i don't know if how we want to uh to deal with those but we can take them one at a time or we can take a quick look",
    "start": "2619119",
    "end": "2624800"
  },
  {
    "text": "through and see which is the most relevant to go um i can help facilitate the questions",
    "start": "2624800",
    "end": "2630079"
  },
  {
    "text": "no problems um thank you both first of all for a wonderful presentation um as robert said we have about 10",
    "start": "2630079",
    "end": "2636400"
  },
  {
    "text": "minutes or so before we wrap up um so if you have any questions uh please",
    "start": "2636400",
    "end": "2641760"
  },
  {
    "text": "get uh feel free to drop them in um we have several here the first one",
    "start": "2641760",
    "end": "2647280"
  },
  {
    "text": "here um if possible can we go a bit deeper on how common policy repository",
    "start": "2647280",
    "end": "2654800"
  },
  {
    "text": "um time state analysis and emission control are working together along with",
    "start": "2654800",
    "end": "2660480"
  },
  {
    "text": "the cicd pipeline that results in production deployment",
    "start": "2660480",
    "end": "2666960"
  },
  {
    "text": "i'm not so i can give it my answer will be um uh will be won't be",
    "start": "2669839",
    "end": "2676400"
  },
  {
    "text": "vendor neutral um i just want to put that there because i my familiarity is with the prismacloud",
    "start": "2676400",
    "end": "2682560"
  },
  {
    "text": "platform which has agents and components that can integrate into everything from ide through",
    "start": "2682560",
    "end": "2691440"
  },
  {
    "text": "source code repositories through build servers through container registries so uh",
    "start": "2691440",
    "end": "2697760"
  },
  {
    "text": "and then into actual runtime in in production in with admission control so yes",
    "start": "2697760",
    "end": "2704960"
  },
  {
    "text": "we we can do that um i think i think it makes however you choose to do it whether you use a combination of open",
    "start": "2704960",
    "end": "2711200"
  },
  {
    "text": "source tools and other stuff it does make a lot of sense to do that i think that you know good container",
    "start": "2711200",
    "end": "2717680"
  },
  {
    "text": "hygiene policy is good container hygiene policy and if you can try and enforce the same set of policies",
    "start": "2717680",
    "end": "2724240"
  },
  {
    "text": "at every sensible step in your in your build pipeline that to me makes complete sense um i",
    "start": "2724240",
    "end": "2730720"
  },
  {
    "text": "think that the the advantage that um and you should do it you should make it so that you know as a developer",
    "start": "2730720",
    "end": "2737359"
  },
  {
    "text": "and i'm using you know an ide of choice like intellij or whatever i should be able to submit my um my yaml",
    "start": "2737359",
    "end": "2744720"
  },
  {
    "text": "for um for evaluation at that point before i even commit it because i personally don't like to break builds",
    "start": "2744720",
    "end": "2750560"
  },
  {
    "text": "and make mistakes so anytime i can get a piece of technology to help me and show me where i'm going wrong i'm usually fairly grateful",
    "start": "2750560",
    "end": "2757440"
  },
  {
    "text": "a little frustrated sometimes but fairly fairly grateful so i think having those checks and having those",
    "start": "2757440",
    "end": "2762640"
  },
  {
    "text": "sanity checks at every possible stage that you can put in that's that's not doesn't cause too much friction and trouble is a good idea",
    "start": "2762640",
    "end": "2770480"
  },
  {
    "text": "the the advantage of um [Music] of of doing things with a mission",
    "start": "2770480",
    "end": "2776720"
  },
  {
    "text": "control is that you kind of it's uh it's a it's very hard to get around",
    "start": "2776720",
    "end": "2782640"
  },
  {
    "text": "it's very hard to avoid it's impossible impossible's the wrong word it's very difficult to avoid the emission control",
    "start": "2782640",
    "end": "2788079"
  },
  {
    "text": "process you can try and write your way around the rules but you you know essentially once you've installed mission control",
    "start": "2788079",
    "end": "2793920"
  },
  {
    "text": "and then open agent into kubernetes then every api call goes through it so you can't you know fudge the build or",
    "start": "2793920",
    "end": "2800400"
  },
  {
    "text": "anything like that okay this next question here is it",
    "start": "2800400",
    "end": "2805520"
  },
  {
    "text": "possible to get all the violations at once instead of one at a time",
    "start": "2805520",
    "end": "2811359"
  },
  {
    "text": "you could certainly write a big rule that",
    "start": "2813760",
    "end": "2820319"
  },
  {
    "text": "looked for every single exception and built",
    "start": "2820319",
    "end": "2826380"
  },
  {
    "text": "[Music] built a bigger message um yeah",
    "start": "2826380",
    "end": "2831520"
  },
  {
    "text": "but and which i can see is is better in lots of ways",
    "start": "2831520",
    "end": "2838000"
  },
  {
    "text": "but like i i i have questions about maintainability and how easy it is it depends who's doing them um like",
    "start": "2838000",
    "end": "2845839"
  },
  {
    "text": "like you have on this in on this webinar today um myself who actually has a background in",
    "start": "2845839",
    "end": "2851119"
  },
  {
    "text": "sys admin and security and my esteemed colleague who's a developer and our brains",
    "start": "2851119",
    "end": "2857359"
  },
  {
    "text": "clearly don't work the same half the time as we've discovered whilst putting this presentation",
    "start": "2857359",
    "end": "2862960"
  },
  {
    "text": "together and so so for me for me i would probably put up",
    "start": "2862960",
    "end": "2868079"
  },
  {
    "text": "with extra pain and maybe slight lack of optimization in the responses",
    "start": "2868079",
    "end": "2874319"
  },
  {
    "text": "for ease of maintenance and ease of comprehension um because i not great when",
    "start": "2874319",
    "end": "2881920"
  },
  {
    "text": "shown pages and pages of code but other people may have you know it kind of depends who's maintaining it and",
    "start": "2881920",
    "end": "2888960"
  },
  {
    "text": "who's managing it i would say yeah i would say you can jam in multiple",
    "start": "2888960",
    "end": "2896240"
  },
  {
    "text": "uh exceptions uh sorry um multiple rule violations into the",
    "start": "2896240",
    "end": "2902240"
  },
  {
    "text": "message um uh but it's",
    "start": "2902240",
    "end": "2907599"
  },
  {
    "text": "as as robert said like i wouldn't jam all of them into the single uh into one message because",
    "start": "2907760",
    "end": "2914559"
  },
  {
    "text": "admission review response object only has one string you can definitely append uh",
    "start": "2914559",
    "end": "2922800"
  },
  {
    "text": "to that message so you can have all the evaluations in separate",
    "start": "2922800",
    "end": "2928880"
  },
  {
    "text": "rules but you have one global variable message where you keep appending bullet",
    "start": "2928880",
    "end": "2935839"
  },
  {
    "text": "points style saying violation one two three four",
    "start": "2935839",
    "end": "2941040"
  },
  {
    "text": "and that's returned at the end but maintainability point of view",
    "start": "2941040",
    "end": "2947599"
  },
  {
    "text": "you don't want to have a ginormous rule that has all those checks in one",
    "start": "2947599",
    "end": "2954640"
  },
  {
    "text": "you still want them separate you can just",
    "start": "2954640",
    "end": "2958960"
  },
  {
    "text": "sorry prepend to the message in each of those rules",
    "start": "2959920",
    "end": "2966000"
  },
  {
    "text": "okay so our next question here how do we manage exceptions uh there are no exception",
    "start": "2968960",
    "end": "2976720"
  },
  {
    "text": "handling in drago there are some cases where you can have",
    "start": "2976720",
    "end": "2982559"
  },
  {
    "text": "error message errors but those will be compile time errors",
    "start": "2982559",
    "end": "2988720"
  },
  {
    "text": "hopefully whatever you're using for oppa implementation",
    "start": "2988880",
    "end": "2995920"
  },
  {
    "text": "or the opa server itself would it would reject the policy uh if you have if you",
    "start": "2995920",
    "end": "3003200"
  },
  {
    "text": "let's say you already have created a variable and try to assign another value to it um it will throw an",
    "start": "3003200",
    "end": "3010720"
  },
  {
    "text": "error message but there are no exceptions can i apply a rule only to a specific",
    "start": "3010720",
    "end": "3018480"
  },
  {
    "text": "name space you can check for it in the",
    "start": "3018480",
    "end": "3025520"
  },
  {
    "text": "regal uh policy you can say uh object whatever dot namespace",
    "start": "3025520",
    "end": "3032960"
  },
  {
    "text": "equals equals this namespace and then because if you remember that",
    "start": "3032960",
    "end": "3039119"
  },
  {
    "text": "slide all those uh statements they get end at logical end so it will",
    "start": "3039119",
    "end": "3046880"
  },
  {
    "text": "rest of it will only apply if the namespace equals equals uh the specific namespace",
    "start": "3046880",
    "end": "3055280"
  },
  {
    "text": "can you do math with rego rules for example to force on a container um",
    "start": "3055280",
    "end": "3062559"
  },
  {
    "text": "that memory limit",
    "start": "3062559",
    "end": "3069839"
  },
  {
    "text": "yeah um yeah if i understand it correctly uh yes you can do that memory dot",
    "start": "3074079",
    "end": "3082559"
  },
  {
    "text": "you can get values from memory dot limit and memory dot request",
    "start": "3082559",
    "end": "3089119"
  },
  {
    "text": "uh and then you know those are um those are variables so you can",
    "start": "3089119",
    "end": "3096000"
  },
  {
    "text": "get those values do the math on it and then make a decision based on that",
    "start": "3096000",
    "end": "3102400"
  },
  {
    "text": "how do you recommend to protect the control plane from attacks xd api server etc",
    "start": "3102960",
    "end": "3112318"
  },
  {
    "text": "robert you want to take this um yes so i think there's this uh careful i say i have a slight a vendor",
    "start": "3115359",
    "end": "3123680"
  },
  {
    "text": "vendor take on this but you can there's a bunch of really good uh security out there in",
    "start": "3123680",
    "end": "3130480"
  },
  {
    "text": "terms of like when you can look up best practices that don't involve any any third party tools but essentially",
    "start": "3130480",
    "end": "3136960"
  },
  {
    "text": "limiting i think there's some it's important to limit which which nodes can access um scd so there's some firewall is uh",
    "start": "3136960",
    "end": "3144720"
  },
  {
    "text": "emission control there's uh firewalls you can put in third-party files if you if you need to",
    "start": "3144720",
    "end": "3149839"
  },
  {
    "text": "keep things away [Music] there is um mutual tls",
    "start": "3149839",
    "end": "3156319"
  },
  {
    "text": "between between uh you know your etcd and communications in your api",
    "start": "3156319",
    "end": "3161960"
  },
  {
    "text": "communications should be uh potentially be encrypted um",
    "start": "3161960",
    "end": "3167359"
  },
  {
    "text": "we could go on there are there i did i did turned around and i found a number of really raw well-written blogs on on this um so i",
    "start": "3167359",
    "end": "3175200"
  },
  {
    "text": "encourage you to go and check those out rather than listen to me babylon",
    "start": "3175200",
    "end": "3180800"
  },
  {
    "text": "if opa is outside how is the context of the environment passed into the input to opa",
    "start": "3180800",
    "end": "3188960"
  },
  {
    "text": "ah so even if it's inside the cluster um",
    "start": "3188960",
    "end": "3195920"
  },
  {
    "text": "well sorry let's use that uh example if it's outside the cluster",
    "start": "3195920",
    "end": "3201599"
  },
  {
    "text": "um in the admission review request number one uh it comes from",
    "start": "3201599",
    "end": "3209040"
  },
  {
    "text": "a specific api server right but oppa doesn't have anything built in",
    "start": "3209040",
    "end": "3214640"
  },
  {
    "text": "to distinguish where it's coming from or evaluate that as part of the policy",
    "start": "3214640",
    "end": "3221839"
  },
  {
    "text": "one sort of hack i could think of um is if you remember that slide where we",
    "start": "3221839",
    "end": "3229119"
  },
  {
    "text": "zoomed into what happens inside the api server one of the step is mutating admission",
    "start": "3229119",
    "end": "3234559"
  },
  {
    "text": "webhook where you can mutate you can have a simple mutating admission",
    "start": "3234559",
    "end": "3240000"
  },
  {
    "text": "web hook that just adds labels saying cluster equals cluster name",
    "start": "3240000",
    "end": "3245599"
  },
  {
    "text": "and add that context to all the objects and before it gets to",
    "start": "3245599",
    "end": "3252640"
  },
  {
    "text": "schema validation and ultimately to admission controller so when the request gets to the",
    "start": "3252640",
    "end": "3259200"
  },
  {
    "text": "admission controller it has a label environment equals this or cluster name equals this that's",
    "start": "3259200",
    "end": "3267119"
  },
  {
    "text": "one hack i could think of off the top of my head do you recommend using istio service",
    "start": "3267119",
    "end": "3276839"
  },
  {
    "text": "mesh yeah it it depends um but if you're talking about in context of",
    "start": "3276839",
    "end": "3283760"
  },
  {
    "text": "uh oppa um yes um it depends on your use case right",
    "start": "3283760",
    "end": "3292079"
  },
  {
    "text": "istio service mesh is a whole another topic",
    "start": "3292079",
    "end": "3298720"
  },
  {
    "text": "for another talk but there's an oppa plugin for istio to extend",
    "start": "3298720",
    "end": "3305760"
  },
  {
    "text": "your validation or admission control in uh for sd objects and authentication",
    "start": "3305760",
    "end": "3314480"
  },
  {
    "text": "authenticate the request request okay",
    "start": "3314480",
    "end": "3321119"
  },
  {
    "text": "that just about wraps up all the time that we have for today i want to thank you john and robert for",
    "start": "3321119",
    "end": "3326240"
  },
  {
    "text": "a wonderful presentation and i also want to thank everyone for taking time out of their day for joining",
    "start": "3326240",
    "end": "3331280"
  },
  {
    "text": "us today um as i said before today's recording in slides will be posted on the cncf",
    "start": "3331280",
    "end": "3336400"
  },
  {
    "text": "webinar page at cncf.io everyone thank you again for your time today please take care stay safe and we",
    "start": "3336400",
    "end": "3343200"
  },
  {
    "text": "will see you all next time thank you thanks a lot",
    "start": "3343200",
    "end": "3349839"
  }
]