[
  {
    "text": "everyone ready to get started I'm going to probably use all 35 minutes of time because I packed this with way too much",
    "start": "0",
    "end": "6299"
  },
  {
    "text": "stuff because when you start to dig into the problem there's a lot of container build tools and this is probably not going to be an exhaustive list of",
    "start": "6299",
    "end": "12900"
  },
  {
    "text": "container build tools and it will be a survey and the other thing I want to",
    "start": "12900",
    "end": "18539"
  },
  {
    "text": "make sure it's clear what's different from the abstract is I won't be doing any demos one demos are too risky and",
    "start": "18539",
    "end": "25800"
  },
  {
    "text": "there's just not going to be enough time and you'll see why there's not going to be enough time so I'm Michael Ducey I do",
    "start": "25800",
    "end": "32398"
  },
  {
    "text": "community and evangelism at Cystic to give you a little bit of an agenda we're",
    "start": "32399",
    "end": "37829"
  },
  {
    "text": "going to talk about how containers should be used we're going to talk briefly about the problems with the",
    "start": "37829",
    "end": "43829"
  },
  {
    "text": "dockerfile paradigm we'll go into specific tools and well this is the part where we'll do the survey and then I'll",
    "start": "43829",
    "end": "50700"
  },
  {
    "text": "summarize each one of the tools and give you some opinion about what I think of",
    "start": "50700",
    "end": "55800"
  },
  {
    "text": "the tools and then we can if we have time we'll take questions if we don't",
    "start": "55800",
    "end": "61530"
  },
  {
    "text": "have time to take questions in the room we can always have questions in the hallway you can also stop by the Cystic booth and I'll be there as well so a",
    "start": "61530",
    "end": "68939"
  },
  {
    "text": "little bit about me for the five of you that don't know who I am I spent the",
    "start": "68939",
    "end": "74640"
  },
  {
    "text": "last four and a half years at chef so automation is something I've been doing for a while and before that I was working at automation companies as well",
    "start": "74640",
    "end": "81920"
  },
  {
    "text": "focusing on cloud automation performance and capacity planning and if you would identify myself as a dev or an ops I'm",
    "start": "81920",
    "end": "88890"
  },
  {
    "text": "more focused on the ops thing ask me about goats or just go to the website",
    "start": "88890",
    "end": "94439"
  },
  {
    "text": "goat can do and I'm a trident I'm Arun and a Buckeye does anyone even know what",
    "start": "94439",
    "end": "100530"
  },
  {
    "text": "those are I oh there we go we know I have note one person knows what that is",
    "start": "100530",
    "end": "106610"
  },
  {
    "text": "bonus points if you can figure out what that one is so let's start with the",
    "start": "106610",
    "end": "113250"
  },
  {
    "text": "review of like what is a container right because I think it's important to talk about what a container actually is so",
    "start": "113250",
    "end": "119880"
  },
  {
    "text": "its understands well we should actually be putting inside of our container images so this is an excellent talk that",
    "start": "119880",
    "end": "127950"
  },
  {
    "text": "just frazzled did at DevOps Days Minneapolis",
    "start": "127950",
    "end": "133380"
  },
  {
    "text": "and you can get to the slides there these are already posted on SlideShare so if you search for me on SlideShare",
    "start": "133380",
    "end": "139830"
  },
  {
    "text": "you can already find these slides if you need these links so what is a container",
    "start": "139830",
    "end": "144960"
  },
  {
    "text": "a container is a collection of Linux concepts that are used to create",
    "start": "144960",
    "end": "150240"
  },
  {
    "text": "basically an isolated process running on a Linux operating system right it's not",
    "start": "150240",
    "end": "157350"
  },
  {
    "text": "a mini VM even though everyone tends to treat them like many VMs there are a",
    "start": "157350",
    "end": "163470"
  },
  {
    "text": "combination of namespaces cgroups in some cases set comp and then also Linux",
    "start": "163470",
    "end": "169920"
  },
  {
    "text": "security modules as well and if you think about the difference between",
    "start": "169920",
    "end": "174960"
  },
  {
    "text": "container zones jails and VMs once again thanks to Jeff's for letting me borrow",
    "start": "174960",
    "end": "180450"
  },
  {
    "text": "the slide she wrote a very good blog post a route about this and in the blog",
    "start": "180450",
    "end": "185610"
  },
  {
    "text": "post she talks about this idea of the differences between containers jails VMs",
    "start": "185610",
    "end": "190880"
  },
  {
    "text": "and zones and the thing is is that containers aren't real like that's the",
    "start": "190880",
    "end": "197550"
  },
  {
    "text": "number one thing that you have to understand is that containers are not a real object it's not a first-class concept it's a collection of different",
    "start": "197550",
    "end": "205320"
  },
  {
    "text": "things that are available in the Linux kernel that allow you to run processes a certain way right so it's not a high",
    "start": "205320",
    "end": "211620"
  },
  {
    "text": "level object that you can just go and create a container what you're actually doing when you create a container is that the runtime actually goes and",
    "start": "211620",
    "end": "218130"
  },
  {
    "text": "abstract away all of these things from you around cgroups namespaces suck comp and so forth and they make the runtimes",
    "start": "218130",
    "end": "225600"
  },
  {
    "text": "make containers much more accessible and gives you this concept of this idea of containers and from a user perspective",
    "start": "225600",
    "end": "231480"
  },
  {
    "text": "it feels like a first level concept but it's not a first level concept so that's really important to understand as we",
    "start": "231480",
    "end": "237600"
  },
  {
    "text": "dive into this so a little bit further into what is a container I think this is",
    "start": "237600",
    "end": "245040"
  },
  {
    "text": "the most excellent diagram that you can use to explain to somebody what is a container and what should be in a",
    "start": "245040",
    "end": "251460"
  },
  {
    "text": "container and this is from the kubernetes documentation if you need want to find it if you search for what",
    "start": "251460",
    "end": "257040"
  },
  {
    "text": "is k8s and like why I remember all these Google searches I have no idea but I do",
    "start": "257040",
    "end": "262500"
  },
  {
    "text": "sometimes and so basically the concept of a container is you have your application and libraries",
    "start": "262500",
    "end": "268919"
  },
  {
    "text": "in a self-contained object and that self-contained object all it needs to run is access to the kernel right",
    "start": "268919",
    "end": "275759"
  },
  {
    "text": "so it's essentially boiling it down I would say the only thing that is wrong",
    "start": "275759",
    "end": "280919"
  },
  {
    "text": "on this slide is that it shouldn't say se is used uses OS level virtualization",
    "start": "280919",
    "end": "287419"
  },
  {
    "text": "so let's go now into problems with the docker file paradigm now that we know what a container is and how we should be",
    "start": "288050",
    "end": "294180"
  },
  {
    "text": "thinking about containers let's talk about the de facto standard for building containers docker files so the problem",
    "start": "294180",
    "end": "301710"
  },
  {
    "text": "with docker files is that builds aren't deterministic or reproducible right you can take a docker file and you can run",
    "start": "301710",
    "end": "308460"
  },
  {
    "text": "it several times and while you feel like you're getting the same result you may not necessarily get the same result",
    "start": "308460",
    "end": "314310"
  },
  {
    "text": "every single time you run it can someone think of why that they're not reproducible and they're not",
    "start": "314310",
    "end": "320009"
  },
  {
    "text": "deterministic well time stamps is one thing upstream",
    "start": "320009",
    "end": "325259"
  },
  {
    "text": "packages might change right so like you build a package one time there's been security updates and of course you want",
    "start": "325259",
    "end": "331469"
  },
  {
    "text": "to pull those security updates in but you still don't have that same object at the end of the build when those upstream",
    "start": "331469",
    "end": "338430"
  },
  {
    "text": "packages change the other thing is that docker file is an article I read about",
    "start": "338430",
    "end": "343979"
  },
  {
    "text": "ansible container which I'm going to touch on kind of touches on this is that you use bash to program things right",
    "start": "343979",
    "end": "350310"
  },
  {
    "text": "which is good and which is bad but the thing that frustrated me the most back in 2014 when docker was getting really",
    "start": "350310",
    "end": "356250"
  },
  {
    "text": "popular is like damn it were back on bash and we're automating everything with bash like",
    "start": "356250",
    "end": "362130"
  },
  {
    "text": "really like we've had this great history of config management and deterministic",
    "start": "362130",
    "end": "367199"
  },
  {
    "text": "languages around config management and things like puppet and CF engine and chef and even ansible and we've fallen",
    "start": "367199",
    "end": "373289"
  },
  {
    "text": "back into the way that we're going to automate is using bash I might still be",
    "start": "373289",
    "end": "379080"
  },
  {
    "text": "a little bit bitter about that I'm bitter about a lot of things you'll find",
    "start": "379080",
    "end": "385319"
  },
  {
    "text": "that out about me and what this does is it's easy very easy to turn a container",
    "start": "385319",
    "end": "392039"
  },
  {
    "text": "image into a VM and what is like if you look at a docker file you'll see this",
    "start": "392039",
    "end": "398250"
  },
  {
    "text": "immediately in the very first line you have an a docker file and the majority of docker files out there",
    "start": "398250",
    "end": "404550"
  },
  {
    "text": "what's that very first line in a docker file from and what are you going from",
    "start": "404550",
    "end": "410720"
  },
  {
    "text": "Ubuntu operating system images right so like you're pulling in this concept of",
    "start": "410720",
    "end": "416160"
  },
  {
    "text": "operating system images in immediately and how you build an operating system or an object that's built upon an operating",
    "start": "416160",
    "end": "423630"
  },
  {
    "text": "system right and so the problem with the the docker file paradigm basically lets",
    "start": "423630",
    "end": "429660"
  },
  {
    "text": "you do the wrong thing from the start right uh you have lack of visibility",
    "start": "429660",
    "end": "436530"
  },
  {
    "text": "into what's really in the final image and you see this with things like you got to have container scanners to",
    "start": "436530",
    "end": "442440"
  },
  {
    "text": "actually know what libraries you pulled in when you decided to install the software by doing an app get install or",
    "start": "442440",
    "end": "448320"
  },
  {
    "text": "a DNF install right because you don't know what that whole dependency tree is of that package that you're going to put",
    "start": "448320",
    "end": "453840"
  },
  {
    "text": "into that container everything that's going to get pulled down from that dependency tree and I've talked about this before if you've seen talks that",
    "start": "453840",
    "end": "461910"
  },
  {
    "text": "I've done when I worked at chef but it's a bottom-up approach versus an application down approach what you",
    "start": "461910",
    "end": "467880"
  },
  {
    "text": "really want is you want to be able to look at an application artifact and you want to determine from that application",
    "start": "467880",
    "end": "472950"
  },
  {
    "text": "artifact what everything that application artifact needs to run so a jar of our jaw nodejs source code",
    "start": "472950",
    "end": "480660"
  },
  {
    "text": "whatever that artifact might be and then build that dependency tree from the application on down not from layering",
    "start": "480660",
    "end": "488370"
  },
  {
    "text": "operating system layers on top of each other right and we see this if you",
    "start": "488370",
    "end": "494430"
  },
  {
    "text": "actually look at like some of the real world numbers about container usage out there this is one in a couple of",
    "start": "494430",
    "end": "502140"
  },
  {
    "text": "different surveys you see different numbers but it's somewhere around let's just say where would that be eight and a",
    "start": "502140",
    "end": "508020"
  },
  {
    "text": "half to average it out so you get container to host ratios of about seven to ten to one host right and why is that",
    "start": "508020",
    "end": "515880"
  },
  {
    "text": "well one because we're treating containers as VMs and we're not able to",
    "start": "515880",
    "end": "520979"
  },
  {
    "text": "take advantage of all the resources that we actually have on a system the other thing is that we're running containers on VMs which may not necessarily be the",
    "start": "520979",
    "end": "527910"
  },
  {
    "text": "best paradigm to get the best usage out of the system but that's another topic for another rant of mine",
    "start": "527910",
    "end": "534940"
  },
  {
    "text": "but the other way that you look at it is this so this is hiring the Heisei them",
    "start": "534940",
    "end": "542120"
  },
  {
    "text": "an Corps encore so encore is a company that did they",
    "start": "542120",
    "end": "547370"
  },
  {
    "text": "have a booth you can go by and talk to him I took this from a blog post that they did so look at the base OS image",
    "start": "547370",
    "end": "554180"
  },
  {
    "text": "size of and this is relatively new this is September 2017 they wrote this blog",
    "start": "554180",
    "end": "561110"
  },
  {
    "text": "post and so you look at fedora and to just get started with fedora and if you",
    "start": "561110",
    "end": "568250"
  },
  {
    "text": "want to run your application using from fedora latest you've just bought off two",
    "start": "568250",
    "end": "573650"
  },
  {
    "text": "hundred and twenty megabytes that you have to carry forward right and you see",
    "start": "573650",
    "end": "578750"
  },
  {
    "text": "this in interpret how many people would consider themselves working for an enterprise alright so you're probably",
    "start": "578750",
    "end": "586160"
  },
  {
    "text": "using rel right and those images are probably even bigger No well I see one",
    "start": "586160",
    "end": "591170"
  },
  {
    "text": "guy shaking his head I've been in some banks where they basically take their VM image and they convert it into a",
    "start": "591170",
    "end": "598490"
  },
  {
    "text": "container image and then that's the from going forward right so then you get like a 4.7 gigabyte image that you get to",
    "start": "598490",
    "end": "607190"
  },
  {
    "text": "carry forward for your you laugh but it's true right and you have the same",
    "start": "607190",
    "end": "612410"
  },
  {
    "text": "problem here right with a lot of these distributions if we look at official",
    "start": "612410",
    "end": "617930"
  },
  {
    "text": "images and this is grouped upon based upon the official images and the operating system that they lose use you",
    "start": "617930",
    "end": "624860"
  },
  {
    "text": "can see that official in images that use Debian tend to hover around four hundred",
    "start": "624860",
    "end": "630080"
  },
  {
    "text": "and I would probably say that's probably four hundred and seventy five Meg's right so you're going to pull down an",
    "start": "630080",
    "end": "635870"
  },
  {
    "text": "official image and you're now committed to using four hundred and seventy Meg's of course layering helps with some of",
    "start": "635870",
    "end": "641959"
  },
  {
    "text": "those things of course and then this is public image size so these last two are",
    "start": "641959",
    "end": "649910"
  },
  {
    "text": "more focused on you know what docker is providing to you to build from and then",
    "start": "649910",
    "end": "655910"
  },
  {
    "text": "these are just public images that other people have built and push to docker hub and are publicly available on the",
    "start": "655910",
    "end": "661850"
  },
  {
    "text": "Internet and you can see that once again you laugh but",
    "start": "661850",
    "end": "668160"
  },
  {
    "text": "you average you're looking at and this is average you're looking at about 870",
    "start": "668160",
    "end": "674250"
  },
  {
    "text": "megabytes for a container image so going back to that diagram that we saw or I",
    "start": "674250",
    "end": "681329"
  },
  {
    "text": "may just move forward through the slides because I bring that diagram back up I hate I hate when you forget your slides",
    "start": "681329",
    "end": "686819"
  },
  {
    "text": "right so what can we infer from this any ideas use Alpine yes use busybox as well",
    "start": "686819",
    "end": "695699"
  },
  {
    "text": "or optimally you scratch if you can write and build off of that and you know",
    "start": "695699",
    "end": "701759"
  },
  {
    "text": "if you just rewrote your entire application stack and go and just statically compiled everything you'd be",
    "start": "701759",
    "end": "706889"
  },
  {
    "text": "fine what's funny so if we think about",
    "start": "706889",
    "end": "713490"
  },
  {
    "text": "this and like what we really need is just the app and the libraries right we",
    "start": "713490",
    "end": "718500"
  },
  {
    "text": "don't need all that other stuff that we have to carry forward with that parrot or bring forward from that last",
    "start": "718500",
    "end": "724079"
  },
  {
    "text": "generation of how you run systems and operating systems right and what you can",
    "start": "724079",
    "end": "730949"
  },
  {
    "text": "infer is nobody knows how to package their application in a container right",
    "start": "730949",
    "end": "736399"
  },
  {
    "text": "so let's talk about some of these build tools so there's a lot of build tools",
    "start": "736399",
    "end": "741600"
  },
  {
    "text": "out there I actually deleted a few off of here so we're going to talk about what I kind",
    "start": "741600",
    "end": "747720"
  },
  {
    "text": "of consider traditional build tools build a Nix OS container ansible",
    "start": "747720",
    "end": "755100"
  },
  {
    "text": "container Smith distro list which I don't really consider traditional which",
    "start": "755100",
    "end": "760470"
  },
  {
    "text": "is why I couldn't really categorize it but it's kind of an interesting tool out of docker or I'm sorry art out of Google",
    "start": "760470",
    "end": "767389"
  },
  {
    "text": "and then what I call source to container tools and source to container tools in",
    "start": "767389",
    "end": "773189"
  },
  {
    "text": "my opinion is what we really want to try and get to are these types of tools where I can give the tool a source code",
    "start": "773189",
    "end": "781079"
  },
  {
    "text": "repository I can give it instructions of how the software should get built and it",
    "start": "781079",
    "end": "786449"
  },
  {
    "text": "will magically spit out a container with all the the application and all of the applications dependencies in it right so",
    "start": "786449",
    "end": "795120"
  },
  {
    "text": "let's first talk about build uh",
    "start": "795120",
    "end": "799550"
  },
  {
    "text": "it's an interesting name every time I say it everyone's like what okay so bilder is a project from project",
    "start": "800589",
    "end": "808660"
  },
  {
    "text": "atomic you can get the source there it's interesting in that it will create OCI",
    "start": "808660",
    "end": "814600"
  },
  {
    "text": "and docker image formats for you and one thing important when you're looking at container build tools and I'll try and",
    "start": "814600",
    "end": "821319"
  },
  {
    "text": "highlight this as I go through them for ones that I know this on is that it doesn't require a container run time to",
    "start": "821319",
    "end": "827889"
  },
  {
    "text": "build containers and this is important because if you don't want to have to have a docker daemon running on all of",
    "start": "827889",
    "end": "833139"
  },
  {
    "text": "your build nodes they're actually building the containers you can and even locally on your workstation or if you",
    "start": "833139",
    "end": "838749"
  },
  {
    "text": "want to build a container image for another operating system like say maybe",
    "start": "838749",
    "end": "844480"
  },
  {
    "text": "Windows not having that tight coupling to the container runtime is important it",
    "start": "844480",
    "end": "852069"
  },
  {
    "text": "allows for some interesting uses which are I actually stole this from a text I",
    "start": "852069",
    "end": "857170"
  },
  {
    "text": "got from Brigid last night the low-low what so with bilder some of the",
    "start": "857170",
    "end": "864370"
  },
  {
    "text": "paradigms that they talked about using are still very very tightly coupled to",
    "start": "864370",
    "end": "870910"
  },
  {
    "text": "the operating system the examples that they give you are basically where you go and you say once again build from the",
    "start": "870910",
    "end": "878949"
  },
  {
    "text": "image that you want to base your your new image off of and then the next thing",
    "start": "878949",
    "end": "883990"
  },
  {
    "text": "you do is you mount the root filesystem and then you go into the root filesystem",
    "start": "883990",
    "end": "889000"
  },
  {
    "text": "and you do the work that you need like maybe DNF install or maybe changing",
    "start": "889000",
    "end": "895899"
  },
  {
    "text": "files and other things like that and then you commit that and that becomes a",
    "start": "895899",
    "end": "901240"
  },
  {
    "text": "new layer right does that sound horrible to anyone the",
    "start": "901240",
    "end": "907449"
  },
  {
    "text": "other example that they give is that if you're building from scratch what you do is you create an empty",
    "start": "907449",
    "end": "913480"
  },
  {
    "text": "container and of course you try and run it and it's not going to do anything because you have nothing in it but then",
    "start": "913480",
    "end": "919629"
  },
  {
    "text": "if you want to go and get bash in it what you do is you mount up the root filesystem you then run a DNF install",
    "start": "919629",
    "end": "928660"
  },
  {
    "text": "and you change your sewer your install route to be your container root",
    "start": "928660",
    "end": "934270"
  },
  {
    "text": "and then it will go and install the libraries or the whatever you told it to go and install which also sounds pretty",
    "start": "934270",
    "end": "940330"
  },
  {
    "text": "bad and it sounds pretty bad because it's this idea of not deterministic right like how do you go and recreate",
    "start": "940330",
    "end": "945910"
  },
  {
    "text": "that build process well some people would say well I would go and recreate that with a make file which could be fine but once again you're running",
    "start": "945910",
    "end": "952510"
  },
  {
    "text": "commands you don't necessarily know what you're putting into that container so",
    "start": "952510",
    "end": "960010"
  },
  {
    "text": "Nix OS container is interesting who use anyone uses Nix OS 1 2 3 few of you it's",
    "start": "960010",
    "end": "969970"
  },
  {
    "text": "a little bit of a niche operating system Nix container is interesting it builds",
    "start": "969970",
    "end": "975310"
  },
  {
    "text": "containers based upon Nix OS and one of the interesting things about Nix OS is that you can have multiple versions of a",
    "start": "975310",
    "end": "981040"
  },
  {
    "text": "package installed I don't remember the whole tree what's the tree look like",
    "start": "981040",
    "end": "986320"
  },
  {
    "text": "it's like slash Nix packages and the name of the package the version of the package and then it's like a build",
    "start": "986320",
    "end": "992470"
  },
  {
    "text": "timestamp right and so if you wanted to have multiple versions of Postgres installed if you",
    "start": "992470",
    "end": "998290"
  },
  {
    "text": "want to have multiple versions of Apache installed if you needed multiple versions of a library installed it's very easy to do that whereas with",
    "start": "998290",
    "end": "1005450"
  },
  {
    "text": "traditionally with rpm and Debbie and it's been hard to do that of course with newer versions of RPM you can do that",
    "start": "1005450",
    "end": "1013670"
  },
  {
    "text": "but it has imperative and declarative approaches and what this means is that",
    "start": "1013670",
    "end": "1020630"
  },
  {
    "text": "imperative is essentially that example that we just saw with bilder where you",
    "start": "1020630",
    "end": "1027990"
  },
  {
    "text": "don't necessarily know what the result is that you're going to get and declarative is is you've declared that",
    "start": "1027990",
    "end": "1033000"
  },
  {
    "text": "final state and you know exactly what you're going to have inside of the container now with the declarative approach what",
    "start": "1033000",
    "end": "1039209"
  },
  {
    "text": "happens is the container can be auto rebuilt when the host OS updates so if you do an update to the host believe",
    "start": "1039209",
    "end": "1045270"
  },
  {
    "text": "it's called nix os rebuild it will actually you have a config file that lists out all the containers that you",
    "start": "1045270",
    "end": "1051030"
  },
  {
    "text": "want and it will go and automatically rebuild those containers with the latest versions of the software that you need",
    "start": "1051030",
    "end": "1056400"
  },
  {
    "text": "inside of them which sounds interesting but also you don't want to have a tight",
    "start": "1056400",
    "end": "1061860"
  },
  {
    "text": "coupling to your host operating system right you want to be a little bit more independent from your host operate",
    "start": "1061860",
    "end": "1068190"
  },
  {
    "text": "system and as I talked about Nyx's packaging approach this is interesting",
    "start": "1068190",
    "end": "1073260"
  },
  {
    "text": "because you could have multiple containers running on the same node and build them in the same way and have different versions of software in each",
    "start": "1073260",
    "end": "1078510"
  },
  {
    "text": "one but they still pull from the same source repository but there's this nice",
    "start": "1078510",
    "end": "1085530"
  },
  {
    "text": "little thing in the NICS documentation and I'll just give everyone a second to read that how familiar you were with",
    "start": "1085530",
    "end": "1104940"
  },
  {
    "text": "necks porous nuts I'm sorry I'm he",
    "start": "1104940",
    "end": "1110130"
  },
  {
    "text": "raised his hand earlier and said that he used it he's not very familiar what I believe they are doing and this is a",
    "start": "1110130",
    "end": "1117270"
  },
  {
    "text": "little bit of speculation is they're recreating their own container runtime environment and they haven't isolated",
    "start": "1117270",
    "end": "1124680"
  },
  {
    "text": "things properly either with C groups or namespaces or comp and so forth and so",
    "start": "1124680",
    "end": "1132080"
  },
  {
    "text": "it's basically a two route jail and if you run if any hopefully any system man",
    "start": "1132080",
    "end": "1140100"
  },
  {
    "text": "who's done it for more than a year knows that if you run a two route jail as route it's very very easy to break out",
    "start": "1140100",
    "end": "1145650"
  },
  {
    "text": "of that chroot jail and so that's my reaction to that and here here's ansible",
    "start": "1145650",
    "end": "1156630"
  },
  {
    "text": "container so i financeable container interesting because it's caught on and",
    "start": "1156630",
    "end": "1163370"
  },
  {
    "text": "not not because it caught it it's caught on but the paradigm has caught on so low",
    "start": "1164300",
    "end": "1170010"
  },
  {
    "text": "backstory we created something at chef in 2014 called chef container and what",
    "start": "1170010",
    "end": "1175740"
  },
  {
    "text": "you could do is you could actually use chef to build containers and if you had cookbooks and recipes you could actually",
    "start": "1175740",
    "end": "1181290"
  },
  {
    "text": "use those same cookbooks and recipes to build a container the mistake that we made is that we kept chef client running",
    "start": "1181290",
    "end": "1187740"
  },
  {
    "text": "inside of the container and we were treating them like VMs and if you had",
    "start": "1187740",
    "end": "1193050"
  },
  {
    "text": "you know the recipe updated or needed a rerun chef could always go and rerun and change what's supposed to be an",
    "start": "1193050",
    "end": "1199650"
  },
  {
    "text": "immutable object right but the using cookbooks and recipes which is a",
    "start": "1199650",
    "end": "1205440"
  },
  {
    "text": "declarative language has caught on in other ways puppet has something similar",
    "start": "1205440",
    "end": "1211380"
  },
  {
    "text": "it's called the imaged module I believe that allows you to go and create container images based upon puppet code",
    "start": "1211380",
    "end": "1219950"
  },
  {
    "text": "so it's mostly a declarative approach and when I say mostly a declarative",
    "start": "1219950",
    "end": "1226140"
  },
  {
    "text": "approach because one thing that config management systems allow you to do is run arbitrary bash right or arbitrary",
    "start": "1226140",
    "end": "1233580"
  },
  {
    "text": "commands right and as soon as you run an arbitrary command you don't necessarily know how the operator how the underlying",
    "start": "1233580",
    "end": "1239640"
  },
  {
    "text": "system has been modified and you don't necessarily know what you're going to get and therefore it's not 100%",
    "start": "1239640",
    "end": "1245820"
  },
  {
    "text": "declarative well as long as your your playbooks are declarative then this will",
    "start": "1245820",
    "end": "1251610"
  },
  {
    "text": "be declarative as well it's interesting that they've recreated essentially docker compose so you create a container",
    "start": "1251610",
    "end": "1258450"
  },
  {
    "text": "yeah Mille you can have multiple definitions of the containers that you want built you can also link them",
    "start": "1258450",
    "end": "1264060"
  },
  {
    "text": "together much like you can and docker compose you can pass variables between one another the variables will be automatically",
    "start": "1264060",
    "end": "1270450"
  },
  {
    "text": "populated when you go to build the containers as well and it allows you to take advantage of ansible expertise and",
    "start": "1270450",
    "end": "1277110"
  },
  {
    "text": "playbooks you already have in your environment so how many people use ansible in here a fair number of you so",
    "start": "1277110",
    "end": "1282990"
  },
  {
    "text": "if you have a commitment you've already made you have expertise that you've already invested in and you don't want",
    "start": "1282990",
    "end": "1288840"
  },
  {
    "text": "to throw that out the window then you can take advantage of that",
    "start": "1288840",
    "end": "1293910"
  },
  {
    "text": "the other interesting thing is which I'll talk about on the end does everyone know what open service broker is so it's",
    "start": "1293910",
    "end": "1301350"
  },
  {
    "text": "something in the cloud native world that basically gives you a well-defined API to request services not only from cloud",
    "start": "1301350",
    "end": "1308250"
  },
  {
    "text": "providers but you can go and write your own definitions for the OSB API and ansible has come out with",
    "start": "1308250",
    "end": "1314850"
  },
  {
    "text": "something recently called ansible service broker that allows you to easily basically have ansible container build",
    "start": "1314850",
    "end": "1321840"
  },
  {
    "text": "containers behind the open service broker and it'll integrate very easily with things like kubernetes and cloud",
    "start": "1321840",
    "end": "1327960"
  },
  {
    "text": "foundry so if you want to have make it very easy for your developers to spin up a Postgres database then you use the OSB",
    "start": "1327960",
    "end": "1335040"
  },
  {
    "text": "to spit that that that database in ansible container basically does all the orchestration behind the scenes for you",
    "start": "1335040",
    "end": "1343340"
  },
  {
    "text": "Smith Smith is one that I actually think has a very interesting approach and it",
    "start": "1343340",
    "end": "1348900"
  },
  {
    "text": "has potential I'll talk about that on the end Smith came out of Oracle and it",
    "start": "1348900",
    "end": "1354870"
  },
  {
    "text": "focuses on this idea of building micro containers and you read those three principles so a micro container only",
    "start": "1354870",
    "end": "1361470"
  },
  {
    "text": "contains the process to be run and it's direct dependencies it has files with no user ownership or special permissions",
    "start": "1361470",
    "end": "1367890"
  },
  {
    "text": "beyond the executable bit the root filesystem should be read only and anything that you actually need to write",
    "start": "1367890",
    "end": "1375180"
  },
  {
    "text": "should be in a directory called write and anything any unique config should be",
    "start": "1375180",
    "end": "1381120"
  },
  {
    "text": "in read ephemeral files such as pit files should be written to run right now this sounds very close to what we",
    "start": "1381120",
    "end": "1388620"
  },
  {
    "text": "actually want right when we go back and look at that diagram to what we want in a container build tool so it's mostly",
    "start": "1388620",
    "end": "1397530"
  },
  {
    "text": "declarative and I say mostly declarative because if you look at what they're",
    "start": "1397530",
    "end": "1405810"
  },
  {
    "text": "doing around it gets pretty nasty about how you actually go and build the",
    "start": "1405810",
    "end": "1411360"
  },
  {
    "text": "containers it's an interesting concept and an interesting idea but what you can do is you can use yum packages or docker",
    "start": "1411360",
    "end": "1418170"
  },
  {
    "text": "base images for your source of binaries so with Smith you can download a base image you can open it up and then you",
    "start": "1418170",
    "end": "1425250"
  },
  {
    "text": "can go in and you can pull out the binaries that you need right and then",
    "start": "1425250",
    "end": "1431640"
  },
  {
    "text": "you put that into a yam old definition and then you use that to actually go and build the container and this is a great",
    "start": "1431640",
    "end": "1437220"
  },
  {
    "text": "how-to on how to build a tiny httpd container and in this he actually talks",
    "start": "1437220",
    "end": "1442650"
  },
  {
    "text": "about this right here and that the container that you get out of this is 3%",
    "start": "1442650",
    "end": "1448650"
  },
  {
    "text": "of the docker hub image right so like you can eliminate a lot of what you",
    "start": "1448650",
    "end": "1454140"
  },
  {
    "text": "actually need so another reason why micro containers in this idea of like",
    "start": "1454140",
    "end": "1459150"
  },
  {
    "text": "small area of concern for containers is important is that it cuts down on the number of vulnerabilities that you have",
    "start": "1459150",
    "end": "1464940"
  },
  {
    "text": "to manage right so if you have only your application and the application direct dependencies well and also",
    "start": "1464940",
    "end": "1471059"
  },
  {
    "text": "transient dependencies then you cut down on a lot of the software that you have to manage inside of every container",
    "start": "1471059",
    "end": "1477240"
  },
  {
    "text": "right and if you have many container images that you have to manage it starts to become untenable when you have things",
    "start": "1477240",
    "end": "1483720"
  },
  {
    "text": "that you don't even need inside of the container like maybe bash right you're",
    "start": "1483720",
    "end": "1488970"
  },
  {
    "text": "like well how do i troubleshoot my container if I don't have fashion it was like well use Cystic but there's very",
    "start": "1488970",
    "end": "1498630"
  },
  {
    "text": "very like they've taken a very good approach you can also use yum packages and that's why I say it's declarative",
    "start": "1498630",
    "end": "1504899"
  },
  {
    "text": "because once again you're using yum packages and you don't necessarily know when you'd go and it downloads that one",
    "start": "1504899",
    "end": "1510269"
  },
  {
    "text": "package all of the transient dependencies that it's going to go and download as well so what do you want in",
    "start": "1510269",
    "end": "1517320"
  },
  {
    "text": "a container which one in a container I've been using this diagram for a long time it's stolen from my time at chef",
    "start": "1517320",
    "end": "1524159"
  },
  {
    "text": "thank you mark he's not paying attention he's angrily tweeting me right now what",
    "start": "1524159",
    "end": "1531029"
  },
  {
    "text": "you want to try and eliminate as much as possible is the percent of what's considered the operating system right",
    "start": "1531029",
    "end": "1536340"
  },
  {
    "text": "and what you want to have is the weight of the container so think of this as size or this is overall size of the",
    "start": "1536340",
    "end": "1543059"
  },
  {
    "text": "container and you want really what like a hundred percent of your container should just be the application in the",
    "start": "1543059",
    "end": "1548700"
  },
  {
    "text": "libraries that you need and you want to try and eliminate this as much as possible and this is where distro list",
    "start": "1548700",
    "end": "1555929"
  },
  {
    "text": "comes in so disrelish is essentially declarative builds leveraging a open",
    "start": "1555929",
    "end": "1561269"
  },
  {
    "text": "source tool from Google called Basel Basel is an interesting build tool that",
    "start": "1561269",
    "end": "1566309"
  },
  {
    "text": "will build any piece of software for you there's lots of build rules and there's a gentleman right here we can talk all",
    "start": "1566309",
    "end": "1572309"
  },
  {
    "text": "about Basel for you so distro list images and this is directly from the",
    "start": "1572309",
    "end": "1578549"
  },
  {
    "text": "github page so disrelish images contain only your application and its runtime dependencies they do not contain package",
    "start": "1578549",
    "end": "1584399"
  },
  {
    "text": "manager shells or any other programs you would expect to find in a standard Linux distribution they provide stripped down",
    "start": "1584399",
    "end": "1591330"
  },
  {
    "text": "base images for popular languages so Java Python go see node and dotnet so",
    "start": "1591330",
    "end": "1597720"
  },
  {
    "text": "basically all you need to do is point to your source code artifact that might have been built by as well and then that will get included",
    "start": "1597720",
    "end": "1605960"
  },
  {
    "text": "in the resulting container image that you end up creating and so you have your jar and your JDK the JDK is libraries",
    "start": "1605960",
    "end": "1613190"
  },
  {
    "text": "and you're good to go right the challenge is is hopefully it's the",
    "start": "1613190",
    "end": "1618770"
  },
  {
    "text": "version of Java that you need right or the Java or the version of Python that",
    "start": "1618770",
    "end": "1623780"
  },
  {
    "text": "you need and so forth right there's another tool by Red Hat and this is more",
    "start": "1623780",
    "end": "1630680"
  },
  {
    "text": "out of the OpenShift team it's called source to image so it's a toolkit and workflow for building",
    "start": "1630680",
    "end": "1636860"
  },
  {
    "text": "reproducible docker images from source code so one image is used for build and",
    "start": "1636860",
    "end": "1642710"
  },
  {
    "text": "then it can also be used for run if you really want to so that in case of like an interpreted language like Python or",
    "start": "1642710",
    "end": "1648710"
  },
  {
    "text": "PHP or node where you have to do or ruby where you do a bundle and you pull down",
    "start": "1648710",
    "end": "1654320"
  },
  {
    "text": "all your dependencies or NPM install that container that ends up getting",
    "start": "1654320",
    "end": "1659570"
  },
  {
    "text": "created is usually sufficient to be allowed to go and actually ship that to production to actually be used to",
    "start": "1659570",
    "end": "1664790"
  },
  {
    "text": "actually run your code in the case of something like C or a compiled language you don't necessarily want all of the",
    "start": "1664790",
    "end": "1670730"
  },
  {
    "text": "build tools so what district or what source - image allows you to do is have one build image and then you can have",
    "start": "1670730",
    "end": "1676670"
  },
  {
    "text": "another image that you can use to actually go and run it and this is actually what's behind and any Red Hat",
    "start": "1676670",
    "end": "1681800"
  },
  {
    "text": "people in the room but this is what I can infer please correct me but this is what I've inferred is that source -",
    "start": "1681800",
    "end": "1687020"
  },
  {
    "text": "image allows you is essentially what's behind the scenes in openshift right and some interesting things about this",
    "start": "1687020",
    "end": "1693980"
  },
  {
    "text": "what this allows you to do is build environments can be tightly versions so that build container can have everything",
    "start": "1693980",
    "end": "1699650"
  },
  {
    "text": "that you need in it that you need to build that piece of software and it's immutable and you know exactly what",
    "start": "1699650",
    "end": "1705170"
  },
  {
    "text": "versions of the build tools that you have in it and if your application changes and needs a different build tool",
    "start": "1705170",
    "end": "1710780"
  },
  {
    "text": "then you build a new image but then if you have to go back and build an old version you have that versioned build environment for you already and then",
    "start": "1710780",
    "end": "1719090"
  },
  {
    "text": "also interesting is that because you're running the build inside of a container you have the isolation benefits that",
    "start": "1719090",
    "end": "1725450"
  },
  {
    "text": "containers give you as far as from a security perspective as well so you can isolate the build environment for you",
    "start": "1725450",
    "end": "1731870"
  },
  {
    "text": "for your builds as well this is essentially what it looks like you know the developer pushes code to",
    "start": "1731870",
    "end": "1740380"
  },
  {
    "text": "github it kicks off a build inside of the build image or it pulls the build image to do the build now it can do one",
    "start": "1740380",
    "end": "1747280"
  },
  {
    "text": "of two things here it can either commit the code or commit the image and then you use that as the application image or",
    "start": "1747280",
    "end": "1753880"
  },
  {
    "text": "you can have a separate image that would be used to actually go and run the application and that separate image",
    "start": "1753880",
    "end": "1759250"
  },
  {
    "text": "would just expect the source code to be pushed into it somehow right so maybe you specify a jar that gets copied in or",
    "start": "1759250",
    "end": "1765910"
  },
  {
    "text": "something like that now this is this is",
    "start": "1765910",
    "end": "1772210"
  },
  {
    "text": "really new build kit is something by docker that they started talking about",
    "start": "1772210",
    "end": "1779230"
  },
  {
    "text": "it back in May or it's actually from the mobi project and they showed off some",
    "start": "1779230",
    "end": "1784960"
  },
  {
    "text": "early concepts at docker Connie you the mobi contributor summit and Bill kit is",
    "start": "1784960",
    "end": "1790270"
  },
  {
    "text": "basically a generic tool for converting source code to build artifacts in an efficient expressive and repeatable",
    "start": "1790270",
    "end": "1795940"
  },
  {
    "text": "manner so there's a concept of front-ends and a horrible name because what like front-end means something to",
    "start": "1795940",
    "end": "1802720"
  },
  {
    "text": "everyone in this room right probably not a definition of how your software gets",
    "start": "1802720",
    "end": "1807820"
  },
  {
    "text": "built right but it is it's sorry it's the definition of how your software gets",
    "start": "1807820",
    "end": "1813850"
  },
  {
    "text": "built seeds being snarky I lose where my hand is on the clicker so Bill kit takes",
    "start": "1813850",
    "end": "1819400"
  },
  {
    "text": "this human readable definition and translates it into a low-level build definition and that lobe level build",
    "start": "1819400",
    "end": "1825430"
  },
  {
    "text": "definition does things like dependency graphs and so forth it does build caching a whole bunch of other things",
    "start": "1825430",
    "end": "1830620"
  },
  {
    "text": "you can directly write these low-level definitions and go if you want to and",
    "start": "1830620",
    "end": "1836020"
  },
  {
    "text": "then you have exporters that allow you to export these build artifacts in a variety of formats beyond just container",
    "start": "1836020",
    "end": "1843040"
  },
  {
    "text": "formats so if you wanted to export an ami you could build an exporter to create an ami for you right or a",
    "start": "1843040",
    "end": "1848500"
  },
  {
    "text": "traditional operating system image and it focuses more on this idea of like how can we create generic primitive",
    "start": "1848500",
    "end": "1855010"
  },
  {
    "text": "primitives for a build system because remember like containers aren't anything special containers are just another",
    "start": "1855010",
    "end": "1860770"
  },
  {
    "text": "artifact that we're pushing through a build system right so an artifact as an artifact as an artifact as an artifact",
    "start": "1860770",
    "end": "1866560"
  },
  {
    "text": "always remember that a VM image is an artifice right and there's a very good blog post",
    "start": "1866560",
    "end": "1874300"
  },
  {
    "text": "that kind of talks about it and this is kind of what it looks like right now",
    "start": "1874300",
    "end": "1879880"
  },
  {
    "text": "there's only dockerfile of how to generate a docker file and then",
    "start": "1879880",
    "end": "1886360"
  },
  {
    "text": "you have a lot of things that the LLB provides for you also caching you can cache dependencies",
    "start": "1886360",
    "end": "1894070"
  },
  {
    "text": "that you pull down and that hold the pendency tree and you can cab that caches an image so you don't have to pull it down every single time they do",
    "start": "1894070",
    "end": "1900820"
  },
  {
    "text": "some other things that are interesting around how you actually update those dependencies if one of those dependency",
    "start": "1900820",
    "end": "1906130"
  },
  {
    "text": "changes as well and then the idea is that you have a whole variety of exporters for yourself and then we talk",
    "start": "1906130",
    "end": "1914410"
  },
  {
    "text": "about habitat habitat is a open source project by chef it's been around for",
    "start": "1914410",
    "end": "1919480"
  },
  {
    "text": "about 18 months I'm slightly biased because I was a platform advocate for",
    "start": "1919480",
    "end": "1924640"
  },
  {
    "text": "habitat for about a year or about fourteen months before I left chef so this is probably the tool that I know",
    "start": "1924640",
    "end": "1930730"
  },
  {
    "text": "the most about and this was actually the tool that I put in the talk to this is why I did this talk to try and sneak",
    "start": "1930730",
    "end": "1936220"
  },
  {
    "text": "habitat in and put it in front of you all so the mission accomplished I guess even though I don't work there anymore",
    "start": "1936220",
    "end": "1942480"
  },
  {
    "text": "so habitats focused on how do I build my software how do I deploy that software",
    "start": "1942480",
    "end": "1948940"
  },
  {
    "text": "in a variety of different platforms and then how do I actually run that software through what's called the habitat",
    "start": "1948940",
    "end": "1954790"
  },
  {
    "text": "supervisor so what's interesting is that it's a consistent process for packaging",
    "start": "1954790",
    "end": "1961420"
  },
  {
    "text": "all your apps across your architecture so it's a consistent process if you're running on Linux and also if you're",
    "start": "1961420",
    "end": "1967960"
  },
  {
    "text": "running on Windows as well and what's interesting is they provide scaffolding for key languages right so there's a",
    "start": "1967960",
    "end": "1974710"
  },
  {
    "text": "common way to build node.js applications there's a common way to build Ruby applications there's a common way to",
    "start": "1974710",
    "end": "1980170"
  },
  {
    "text": "build go and Java and if you're using Gradle or maven or something like that there's a common paradigm that's",
    "start": "1980170",
    "end": "1986170"
  },
  {
    "text": "repeated over and over again so why should you go and recreate that wheel use one of the scaffoldings that they",
    "start": "1986170",
    "end": "1991810"
  },
  {
    "text": "provide so what you end up getting is you get this build artifact and then you can take that build artifact and you can",
    "start": "1991810",
    "end": "1998440"
  },
  {
    "text": "say have export and you can choose one of these export targets and so this sounds a lot like build kit",
    "start": "1998440",
    "end": "2005070"
  },
  {
    "text": "you can create this take this artifact and basically what habitat will do is",
    "start": "2005070",
    "end": "2010110"
  },
  {
    "text": "walk the dependency tree and figure out everything that you need inside of that package and package it up and spit it",
    "start": "2010110",
    "end": "2016020"
  },
  {
    "text": "out whatever in whatever format that you get that's you specified and then the other thing is is that there's a",
    "start": "2016020",
    "end": "2022590"
  },
  {
    "text": "built-in supervisor inside of that container image let's say it's a container image that does things like",
    "start": "2022590",
    "end": "2028440"
  },
  {
    "text": "service discovery it'll generate templated configurations for you it'll help you with clustering topologies so",
    "start": "2028440",
    "end": "2034830"
  },
  {
    "text": "if you bring up multiple containers and maybe you're running a database and one needs to be the master and one needs to be the replicas it'll automatically",
    "start": "2034830",
    "end": "2040830"
  },
  {
    "text": "figure out through a gossip protocol of figure out who should be the leader and who should be the follower health check",
    "start": "2040830",
    "end": "2046740"
  },
  {
    "text": "API isn't a whole lot more and there's also a build service as well so",
    "start": "2046740",
    "end": "2051929"
  },
  {
    "text": "basically you go from you write a plan you put that plan with your source code you commit to github and it will go and",
    "start": "2051929",
    "end": "2058830"
  },
  {
    "text": "create what will happen is the build service will see that there's a change in github automatically build that",
    "start": "2058830",
    "end": "2064500"
  },
  {
    "text": "package for you and if optionally you can also have a container image built using the exporter and you can export it",
    "start": "2064500",
    "end": "2070830"
  },
  {
    "text": "either into Amazon container registry or docker hub so then summary as I'm coming",
    "start": "2070830",
    "end": "2079800"
  },
  {
    "text": "up on my time believe it or not these sessions are way too short that should be feedback that you give is that these",
    "start": "2079800",
    "end": "2085260"
  },
  {
    "text": "sessions are way too short and also lunch like really so build up so the",
    "start": "2085260",
    "end": "2093000"
  },
  {
    "text": "problem with builder is you're still coupling yourself to a lot of operating system paradigms right which when",
    "start": "2093000",
    "end": "2099420"
  },
  {
    "text": "building containers you should not be thinking that you're building an operating system and when you're using operating system tools to build",
    "start": "2099420",
    "end": "2105330"
  },
  {
    "text": "containers you're using that old paradigm that may no longer be applicable Nix OS container well it's a",
    "start": "2105330",
    "end": "2112440"
  },
  {
    "text": "niche OS and we saw that nice in secure container model you also have to eat",
    "start": "2112440",
    "end": "2117840"
  },
  {
    "text": "NIC's right for your host OS as well and you may not necessarily want to do that ansible container is actually pretty",
    "start": "2117840",
    "end": "2124350"
  },
  {
    "text": "great if you're committed to ansible and I think ansible service bus and what they're doing around that for stateful",
    "start": "2124350",
    "end": "2130109"
  },
  {
    "text": "services for things like Cloud Foundry and even kubernetes and OpenShift is actually a really interesting concept",
    "start": "2130109",
    "end": "2136190"
  },
  {
    "text": "Smith I think is on the right path around this idea of micro containers where Smith needs help",
    "start": "2136190",
    "end": "2143670"
  },
  {
    "text": "and like this is a you know open source community so what I would recommend it like if this interests you I would find",
    "start": "2143670",
    "end": "2151200"
  },
  {
    "text": "a better way to pull apart these container images and get the pieces out that you need to actually package them",
    "start": "2151200",
    "end": "2156420"
  },
  {
    "text": "up in this micro container type format distro list is the right approach it",
    "start": "2156420",
    "end": "2162090"
  },
  {
    "text": "completely removes the operating system but it's very very very language specific at least right now and basel is",
    "start": "2162090",
    "end": "2168420"
  },
  {
    "text": "not the in in my perspective this basel is not the most approachable tool and the real-world examples are minimal like",
    "start": "2168420",
    "end": "2174930"
  },
  {
    "text": "if you look at some of the basel like build definitions you'll see what i mean",
    "start": "2174930",
    "end": "2180590"
  },
  {
    "text": "let's just leave it at that the old kit is very interesting it's very very new",
    "start": "2180590",
    "end": "2186120"
  },
  {
    "text": "though and it's very very early stage but the goal of Bill kit is to solve software builds in general right you can",
    "start": "2186120",
    "end": "2193950"
  },
  {
    "text": "also do version build environments as well with Bill kit but it's still too early examples are really spar sparse",
    "start": "2193950",
    "end": "2200430"
  },
  {
    "text": "and front ends for languages and things that you actually want to build are really still non-existent so you know",
    "start": "2200430",
    "end": "2206510"
  },
  {
    "text": "I'm not being negative here I'm showing you opportunity as open source contributors of where you can go add",
    "start": "2206510",
    "end": "2211560"
  },
  {
    "text": "value to these projects to get them to where we need to be that's how I spin it at least so source to image is",
    "start": "2211560",
    "end": "2219150"
  },
  {
    "text": "interesting it's version secure build environments it has actually a library of build and run images available but",
    "start": "2219150",
    "end": "2226380"
  },
  {
    "text": "they're all built upon that operating system paradigm of course because they're coming from Red Hat and then habitat is very interesting it easily",
    "start": "2226380",
    "end": "2234150"
  },
  {
    "text": "describes software builds and bash you have export formats for multiple platforms which i think is really really",
    "start": "2234150",
    "end": "2240000"
  },
  {
    "text": "powerful it does the right thing to determine what a build artifact or I'm",
    "start": "2240000",
    "end": "2245010"
  },
  {
    "text": "sorry what a deployment artifact needs I'm sorry a build artifact needs to run to create that deployable artifact of",
    "start": "2245010",
    "end": "2250230"
  },
  {
    "text": "how that container create is created the challenge is is that if you're not wanting to eat the supervisor you you",
    "start": "2250230",
    "end": "2258060"
  },
  {
    "text": "get the supervisor whether if you want the supervisor or not right and it doesn't always fit with the cubanelle",
    "start": "2258060",
    "end": "2263250"
  },
  {
    "text": "kubernetes paradigms and what the habitats team did to fix that is they created a kubernetes operator where you",
    "start": "2263250",
    "end": "2269040"
  },
  {
    "text": "can load that in and the kubernetes operator will actually talk to the supervisor to allow you to",
    "start": "2269040",
    "end": "2274230"
  },
  {
    "text": "have the benefits of the supervisor but still operate more in a kubernetes native type fashion and the software",
    "start": "2274230",
    "end": "2281099"
  },
  {
    "text": "libraries this is another place where you can actually add value to this project is the software libraries",
    "start": "2281099",
    "end": "2286530"
  },
  {
    "text": "provided out-of-the-box are not always well maintained so a good example is MongoDB is about eight releases behind",
    "start": "2286530",
    "end": "2292410"
  },
  {
    "text": "in the the minor version and it's several releases behind in the major version so summary container builds",
    "start": "2292410",
    "end": "2300810"
  },
  {
    "text": "tools tools stools just let that soak in",
    "start": "2300810",
    "end": "2306619"
  },
  {
    "text": "container build tools still have a long way to go each tool has pluses and minuses and those minuses are",
    "start": "2306619",
    "end": "2312630"
  },
  {
    "text": "opportunities where we as an open-source community can contribute in some tools sacrifice best practice for",
    "start": "2312630",
    "end": "2318270"
  },
  {
    "text": "approachability in the case of maybe some a tool like builder and some tools make things overly complex so what do we",
    "start": "2318270",
    "end": "2326670"
  },
  {
    "text": "need like what is the vision I think of a container packaging tool a build pack type model for source code building so",
    "start": "2326670",
    "end": "2333480"
  },
  {
    "text": "that idea of scaffolding that habitat has declarative container build manifest",
    "start": "2333480",
    "end": "2339270"
  },
  {
    "text": "generated from that build of the software and then an exporter to create an image with only the choice of apps",
    "start": "2339270",
    "end": "2345359"
  },
  {
    "text": "and the dependencies that you need so that is four minutes over but I like to",
    "start": "2345359",
    "end": "2352230"
  },
  {
    "text": "thank you here are the slides I'll also tweet the slides as well so if you were to follow me on Twitter and also of",
    "start": "2352230",
    "end": "2358440"
  },
  {
    "text": "course I was told I had to put this in here at the end Cystic is hiring and since we're over time I'll take",
    "start": "2358440",
    "end": "2364140"
  },
  {
    "text": "questions in the hallway thank you [Applause]",
    "start": "2364140",
    "end": "2372260"
  }
]