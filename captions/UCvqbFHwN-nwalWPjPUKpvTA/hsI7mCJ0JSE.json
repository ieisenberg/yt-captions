[
  {
    "text": "so hello everyone if you will if you would like to follow us with the on the tutorial and do the coding with us",
    "start": "1439",
    "end": "8960"
  },
  {
    "text": "please you can start um um getting ready uh if you go to my",
    "start": "8960",
    "end": "16440"
  },
  {
    "text": "GitHub account there is the cubec con EU 2023 open tetri kues tutorial or you can",
    "start": "16440",
    "end": "22880"
  },
  {
    "text": "just scan this QR code uh there is read me",
    "start": "22880",
    "end": "28960"
  },
  {
    "text": "with with the setup and so I would advise you",
    "start": "28960",
    "end": "35559"
  },
  {
    "text": "to to start looking at this and maybe create a kubernetes cluster and deploy",
    "start": "35559",
    "end": "41840"
  },
  {
    "text": "the observability backend that we'll be",
    "start": "41840",
    "end": "46120"
  },
  {
    "text": "using the QR code is as well on the slides that are uploaded to",
    "start": "51719",
    "end": "58680"
  },
  {
    "text": "shut",
    "start": "58920",
    "end": "61920"
  },
  {
    "text": "okay so hello everyone and welcome to the tutorial for exploring uh open",
    "start": "107439",
    "end": "114159"
  },
  {
    "text": "Telemetry metrics on kubernetes and this is essentially continuation from the",
    "start": "114159",
    "end": "119960"
  },
  {
    "text": "last cubec Con in Amsterdam where we did a tutorial for kind of exploring all the",
    "start": "119960",
    "end": "125520"
  },
  {
    "text": "open Telemetry signals on U how to collect them on kubernetes and today",
    "start": "125520",
    "end": "130560"
  },
  {
    "text": "we're going to just focus on the metrics um so my name is uh Pell I'm",
    "start": "130560",
    "end": "137840"
  },
  {
    "text": "principal engineer at redhead I uh maintain open Telemetry operator and as",
    "start": "137840",
    "end": "143680"
  },
  {
    "text": "well contribute the to the open open Telemetry project um as well maintainer of the Jager project and um grafana",
    "start": "143680",
    "end": "151239"
  },
  {
    "text": "Tempo operator uh and with me today is amazing group of people uh would you",
    "start": "151239",
    "end": "156959"
  },
  {
    "text": "like to start the introductions I can do yeah hi my name is bin I work uh I contribute to the",
    "start": "156959",
    "end": "164400"
  },
  {
    "text": "open tary project and I also work at rard together with Pavo and hi I'm",
    "start": "164400",
    "end": "170720"
  },
  {
    "text": "Anthony Mirella uh I'm a senior engineer at AWS and I work on open slet tree um",
    "start": "170720",
    "end": "176560"
  },
  {
    "text": "mostly The Collector and the go uh client Library Aries uh hey hi I'm Anusha I'm a",
    "start": "176560",
    "end": "183239"
  },
  {
    "text": "software engineer at Apple I'm I'm also an open source uh contributor I work on open elimary metrics and",
    "start": "183239",
    "end": "190879"
  },
  {
    "text": "traces hello everyone my name is matate I work as a software engineer at cor",
    "start": "190879",
    "end": "196239"
  },
  {
    "text": "Logics and I'm also open source contributor uh I'm coming mostly from the promes ecosystem recently I've been",
    "start": "196239",
    "end": "202879"
  },
  {
    "text": "working more with open Telemetry with the collector and operator so that's my",
    "start": "202879",
    "end": "208680"
  },
  {
    "text": "area of focus okay thank you very much so as you can",
    "start": "208680",
    "end": "213879"
  },
  {
    "text": "see we are all kind of you know contributing to the ecosystem uh",
    "start": "213879",
    "end": "219439"
  },
  {
    "text": "and it's it's a tutorial and all the content is hosted on GitHub uh so if you",
    "start": "219439",
    "end": "225519"
  },
  {
    "text": "would like to follow what we do live on stage please scan this QR code or go to",
    "start": "225519",
    "end": "232280"
  },
  {
    "text": "uh this URL or to my GitHub account and the repository is pinned um on the on",
    "start": "232280",
    "end": "238319"
  },
  {
    "text": "the index page if you will have any issues during the tutorial you can just raise your hand",
    "start": "238319",
    "end": "244360"
  },
  {
    "text": "and we will come and help you to to resolve issues if you will know",
    "start": "244360",
    "end": "250799"
  },
  {
    "text": "obviously uh and with that I will jump to the to",
    "start": "250799",
    "end": "258079"
  },
  {
    "text": "GitHub",
    "start": "261840",
    "end": "264840"
  },
  {
    "text": "and so what we prepared today is is essentially you know couple of sections",
    "start": "266880",
    "end": "273360"
  },
  {
    "text": "we want to cover uh related to metrics uh we'll start with introduction",
    "start": "273360",
    "end": "280080"
  },
  {
    "text": "to um to how open Telemetry metrics are designed and Tomy will we'll talk about",
    "start": "280080",
    "end": "287000"
  },
  {
    "text": "that then we will uh have a live demo we will instrument an application with the",
    "start": "287000",
    "end": "293919"
  },
  {
    "text": "open Telemetry API and SDK for metrics uh kind of manually we will you know",
    "start": "293919",
    "end": "299160"
  },
  {
    "text": "initialize the API and SDK and then we will compare it to the automatic",
    "start": "299160",
    "end": "304400"
  },
  {
    "text": "instrumentation and we will see how that makes the whole instrumentation easier after that we will deploy it on",
    "start": "304400",
    "end": "311919"
  },
  {
    "text": "kubernetes with the open Telemetry uh operator we'll deploy then the collector",
    "start": "311919",
    "end": "318680"
  },
  {
    "text": "and use the instrumentation CR uh and after that we will focus on um",
    "start": "318680",
    "end": "326440"
  },
  {
    "text": "kind of different topics uh we will EXP explore how we can use open Telemetry with Prometheus um you know how we can",
    "start": "326440",
    "end": "333520"
  },
  {
    "text": "replace parts of the Prometheus with open Telemetry collector to collect Prometheus",
    "start": "333520",
    "end": "339039"
  },
  {
    "text": "metrics and after that we will look at how we can use open Telemetry to collect",
    "start": "339039",
    "end": "344639"
  },
  {
    "text": "kubernetes infrastructure metrics uh and the last topic is correlation where we",
    "start": "344639",
    "end": "350240"
  },
  {
    "text": "will explore how we can correlate metrics with traces um and",
    "start": "350240",
    "end": "356800"
  },
  {
    "text": "logs so the first thing what we need to do for the tutorial is to do the",
    "start": "356800",
    "end": "362080"
  },
  {
    "text": "setup um and we will need kubernetes cluster so if you have one you can just",
    "start": "362080",
    "end": "368960"
  },
  {
    "text": "use that one or um otherwise there are instructions to use the kind cluster or",
    "start": "368960",
    "end": "375240"
  },
  {
    "text": "you can use mini Cube as well that will work just fine um so you should end up with you",
    "start": "375240",
    "end": "381880"
  },
  {
    "text": "know running kubernetes cluster and Cube CTL installed on your",
    "start": "381880",
    "end": "386919"
  },
  {
    "text": "machine and after that we will deploy thir manager that is required by the",
    "start": "386919",
    "end": "393680"
  },
  {
    "text": "open Telemetry operator when you run this command to",
    "start": "393680",
    "end": "399520"
  },
  {
    "text": "deploy Ser manager please wait couple seconds maybe or even half a minute",
    "start": "399520",
    "end": "404680"
  },
  {
    "text": "because it takes for the thir manager to to start and initialize",
    "start": "404680",
    "end": "410800"
  },
  {
    "text": "properly and after that you can deploy the open Telemetry",
    "start": "411080",
    "end": "416160"
  },
  {
    "text": "operator which will essentially you know install the latest",
    "start": "416800",
    "end": "421960"
  },
  {
    "text": "release and after that we will deploy our back end for observability data that",
    "start": "430599",
    "end": "438080"
  },
  {
    "text": "is using Prometheus with enabled OTL ingestion and",
    "start": "438080",
    "end": "443639"
  },
  {
    "text": "exemplars and for tracing uh we will use Jagger and the back end as as well",
    "start": "443639",
    "end": "449599"
  },
  {
    "text": "contains grafana deployment um which as a last step we will P for it to our",
    "start": "449599",
    "end": "457960"
  },
  {
    "text": "host just to get an idea who is going to do the demo with us please raise your",
    "start": "457960",
    "end": "465879"
  },
  {
    "text": "hand okay cool that's good and just to we already have this setup on our",
    "start": "466639",
    "end": "472879"
  },
  {
    "text": "machine so we will not be doing this first part setting up the cluster so",
    "start": "472879",
    "end": "478199"
  },
  {
    "text": "this already there and and I would suggest you can port forward to grafana and keep this running in the background",
    "start": "478199",
    "end": "484800"
  },
  {
    "text": "or just keep it open because we have some links for the the dashboards that we'll expect grafana to be on the local",
    "start": "484800",
    "end": "491240"
  },
  {
    "text": "house 3,000 so if you want all of this to work um yeah leave it open or leave",
    "start": "491240",
    "end": "496400"
  },
  {
    "text": "it leave it Port",
    "start": "496400",
    "end": "499599"
  },
  {
    "text": "forwarded",
    "start": "508240",
    "end": "511240"
  },
  {
    "text": "I still see people typing maybe you can give us some indication if you are done with the setup maybe you can raise your",
    "start": "518680",
    "end": "524600"
  },
  {
    "text": "hand so we we know that some people are done one I think we can cuz the next section",
    "start": "524600",
    "end": "533399"
  },
  {
    "text": "Anthony will introduce the data model so we will still have some time to install and go through through the steps",
    "start": "533399",
    "end": "540240"
  },
  {
    "text": "so no",
    "start": "540240",
    "end": "543480"
  },
  {
    "text": "stress sweet next ble",
    "start": "547440",
    "end": "553640"
  },
  {
    "text": "um the fun of learning to use somebody else's computer how they have it set up differently from you I think I need",
    "start": "555680",
    "end": "563120"
  },
  {
    "text": "to click that there we go um so I've got a brief presentation",
    "start": "563120",
    "end": "568600"
  },
  {
    "text": "I'm going to do to talk about what our metrics um what the open cemetry metric",
    "start": "568600",
    "end": "574839"
  },
  {
    "text": "model looks like and how you can uh utilize the open Telemetry API and SDK",
    "start": "574839",
    "end": "580160"
  },
  {
    "text": "to produce metrics um so first off what are metrics",
    "start": "580160",
    "end": "585680"
  },
  {
    "text": "um metrics are at some level a pre-aggregated Time series",
    "start": "585680",
    "end": "591240"
  },
  {
    "text": "data got some feedback pre-aggregated time series data",
    "start": "591240",
    "end": "596720"
  },
  {
    "text": "that represent observations of numeric Quant quantities and Associated attributes now that's that's a big",
    "start": "596720",
    "end": "603200"
  },
  {
    "text": "mouthful it's a lot of words there so I'll try to break that down a little bit um and just talk about each of those",
    "start": "603200",
    "end": "609000"
  },
  {
    "text": "constituent Parts uh first observations what what are those um there are two",
    "start": "609000",
    "end": "616000"
  },
  {
    "text": "types of observations that we can make synchronous and asynchronous um synchronous observations are when an",
    "start": "616000",
    "end": "621839"
  },
  {
    "text": "event of Interest happens uh and we can observe a value related to that event directly so this may be something like",
    "start": "621839",
    "end": "628600"
  },
  {
    "text": "how long did your HTTP requests take or um how many bytes were in that request",
    "start": "628600",
    "end": "634079"
  },
  {
    "text": "body um maybe you made a query to a data store and you've got a counter of how many queries you've made to that data",
    "start": "634079",
    "end": "639720"
  },
  {
    "text": "store um so these are things that happen you You observe that directly when it happens um conversely asynchronous",
    "start": "639720",
    "end": "648040"
  },
  {
    "text": "observations are things that happen not necessarily when the value changes um",
    "start": "648040",
    "end": "653560"
  },
  {
    "text": "but when you want to know what the current state of that value is um so this is more useful for something like",
    "start": "653560",
    "end": "660399"
  },
  {
    "text": "how many items are in a q for processing maybe you don't track every item coming and going but on a periodic basis you",
    "start": "660399",
    "end": "666279"
  },
  {
    "text": "ask how big is the que um or how much memory is allocated to a process you're",
    "start": "666279",
    "end": "671360"
  },
  {
    "text": "not tracking every allocation but you know you know I've Got 5 megabytes now I've got 10 megabytes and and you can",
    "start": "671360",
    "end": "676880"
  },
  {
    "text": "kind of see that changing over time um what's the temperature in the room like",
    "start": "676880",
    "end": "682000"
  },
  {
    "text": "all of you people in the room are probably raising the temperature here and we could periodically check what that is but we don't know every time",
    "start": "682000",
    "end": "688040"
  },
  {
    "text": "that changes because it's say continuous value um the next part of that is",
    "start": "688040",
    "end": "694160"
  },
  {
    "text": "numeric quantities um metrics deal with numbers um they can be integers they can",
    "start": "694160",
    "end": "699279"
  },
  {
    "text": "be floating points but numbers are really the thing that are of interest to us here it doesn't really make sense to",
    "start": "699279",
    "end": "705639"
  },
  {
    "text": "observe red right um but we can observe that we've got 99 Red Balloons um and so",
    "start": "705639",
    "end": "712480"
  },
  {
    "text": "that's your metric there is the the name is balloons you've got the value 99 and some attributes like its color is red",
    "start": "712480",
    "end": "720639"
  },
  {
    "text": "um and then that that takes us to the last part of that which is attributes um so attributes can help provide context",
    "start": "720639",
    "end": "727839"
  },
  {
    "text": "for understanding that observation that you've made if you were counting HTP requests maybe you want to know what was",
    "start": "727839",
    "end": "733800"
  },
  {
    "text": "the URL or what was the status code was it successful or was it an error you might want to have different values for",
    "start": "733800",
    "end": "739560"
  },
  {
    "text": "those which data story did you query or you what color was your balloon mine are red maybe yours are a different",
    "start": "739560",
    "end": "746639"
  },
  {
    "text": "color um then aggregation is the the final important part of metrics um",
    "start": "746639",
    "end": "754199"
  },
  {
    "text": "especially when we're doing synchronous observations there can be a lot of observations you don't necessarily want to report every single one of them to a",
    "start": "754199",
    "end": "760680"
  },
  {
    "text": "data store so every HTTP request you're not necessarily going to want to report that to Prometheus or to some other data",
    "start": "760680",
    "end": "767880"
  },
  {
    "text": "store and say hey I had another request you will you know say on a minutely basis ask how many requests were there",
    "start": "767880",
    "end": "774880"
  },
  {
    "text": "in the last minute or how many requests have there been uh in total um and there are various different types of",
    "start": "774880",
    "end": "780920"
  },
  {
    "text": "aggregations uh that you can use um a sum is just adding up all of the the values that you've observed um you could",
    "start": "780920",
    "end": "788000"
  },
  {
    "text": "take a last value which is you know what was the last thing you saw maybe a value",
    "start": "788000",
    "end": "793040"
  },
  {
    "text": "that's constantly changing U but you only want to know what it currently is um and then there are histograms which",
    "start": "793040",
    "end": "798560"
  },
  {
    "text": "are uh representations of distributions of data so you can have some more information about what types of values",
    "start": "798560",
    "end": "805639"
  },
  {
    "text": "you have observed without necessarily needing to keep every value",
    "start": "805639",
    "end": "810760"
  },
  {
    "text": "in open Telemetry there are three data models um that are um not necessarily",
    "start": "811320",
    "end": "817440"
  },
  {
    "text": "always represented in the API um or the the interfaces you use but these are kind of conceptual models and um states",
    "start": "817440",
    "end": "824920"
  },
  {
    "text": "that the data will flow through as it goes from your application to your data store um so what I just described with",
    "start": "824920",
    "end": "831240"
  },
  {
    "text": "observations is kind of the event model where each observation is an event that happens and you record the attributes",
    "start": "831240",
    "end": "837959"
  },
  {
    "text": "and and what what thing you're observing that then can get translated into a",
    "start": "837959",
    "end": "843720"
  },
  {
    "text": "streaming model um in in OTP which is a representation of a set of aggregated",
    "start": "843720",
    "end": "849360"
  },
  {
    "text": "events um that is easy to send over a network um and then finally your your",
    "start": "849360",
    "end": "855360"
  },
  {
    "text": "back end uh whether that's Prometheus or some other data store will turn that into its time series model that it will",
    "start": "855360",
    "end": "862079"
  },
  {
    "text": "store for later equ and and Analysis uh okay the open Telemetry",
    "start": "862079",
    "end": "869519"
  },
  {
    "text": "metrics API and SDK is um these are the ways that you interact with open",
    "start": "869519",
    "end": "874600"
  },
  {
    "text": "Telemetry and record these observations and get them down that pipeline of of those data models to your uh your",
    "start": "874600",
    "end": "882160"
  },
  {
    "text": "eventual data store um it starts at the top with a meter provider um this is the",
    "start": "882160",
    "end": "888600"
  },
  {
    "text": "entry point to the API uh your application will probably have one of these um you may have more for for some",
    "start": "888600",
    "end": "895000"
  },
  {
    "text": "reasons but typically you'll have one um and in the API um the the meter provider",
    "start": "895000",
    "end": "901839"
  },
  {
    "text": "just gives you the ability to create a meter which is the the next level of interactions uh but in the SDK this is",
    "start": "901839",
    "end": "908160"
  },
  {
    "text": "where your application will configure things like what resources are attached to your uh to all of the metrics that",
    "start": "908160",
    "end": "915320"
  },
  {
    "text": "are produced by this meter provider or how do you want it processed which aggregations do you want to use for",
    "start": "915320",
    "end": "920880"
  },
  {
    "text": "specific metrics uh and where do you want that data to go which exporters will it",
    "start": "920880",
    "end": "926880"
  },
  {
    "text": "use the meter itself is is responsible for creating instruments um and",
    "start": "926880",
    "end": "932959"
  },
  {
    "text": "instruments are the things that actually record observations um so a meter you will",
    "start": "932959",
    "end": "939000"
  },
  {
    "text": "typically have one per Library um so if you've got an HTTP Library it will have its own meter which might associate some",
    "start": "939000",
    "end": "946040"
  },
  {
    "text": "information relevant to that library to all of the instruments that it creates and you might have a separate one for",
    "start": "946040",
    "end": "951480"
  },
  {
    "text": "your database library that associate some different attributes to all of the the observations for your",
    "start": "951480",
    "end": "957600"
  },
  {
    "text": "database um so I'll talk a little bit about the various types of instruments that we have um I mentioned earlier that there",
    "start": "957600",
    "end": "964680"
  },
  {
    "text": "are synchronous and asynchronous observations and that carries forward into instruments as well um so",
    "start": "964680",
    "end": "971720"
  },
  {
    "text": "synchronous uh as I said allow for direct observations of a value related to work that's happening um and asness",
    "start": "971720",
    "end": "980560"
  },
  {
    "text": "allows you to observe something that might be changing outside of the context of the work but will influence that um",
    "start": "980560",
    "end": "987399"
  },
  {
    "text": "or is related to the whole thing that you're observing um they are very similar to",
    "start": "987399",
    "end": "992920"
  },
  {
    "text": "synchronous instruments except they add a call back parameter so you can provide a function that the SDK will invoke when",
    "start": "992920",
    "end": "999839"
  },
  {
    "text": "it wants to know the current value of that instrument or the thing that that instrument is",
    "start": "999839",
    "end": "1005079"
  },
  {
    "text": "measuring um and so this this call back is invoked when it wants to record so for instance if you've got a Prometheus",
    "start": "1005079",
    "end": "1011279"
  },
  {
    "text": "exporter when Prometheus comes and hits the SL metric endpoint to scrape that",
    "start": "1011279",
    "end": "1016440"
  },
  {
    "text": "data um it will then invoke this call call back and say what is what is the value of the um you know the the current",
    "start": "1016440",
    "end": "1022759"
  },
  {
    "text": "memory state or something like that um so the the types of instruments that we have um we have a counter um",
    "start": "1022759",
    "end": "1030720"
  },
  {
    "text": "which is probably the the simplest kind of instrument um these track monotonically increasing values uh that",
    "start": "1030720",
    "end": "1036918"
  },
  {
    "text": "means the the value only ever stays the same or goes up it can never go down um",
    "start": "1036919",
    "end": "1043400"
  },
  {
    "text": "this is important for some Metric systems that expect that property of counters that they're looking out so",
    "start": "1043400",
    "end": "1048840"
  },
  {
    "text": "that they can effectively make assumptions about uh those those data um it defaults to a",
    "start": "1048840",
    "end": "1057200"
  },
  {
    "text": "sum aggregation so if You observe a bunch of different values it will add them all up uh and Report the the sum of",
    "start": "1057200",
    "end": "1064080"
  },
  {
    "text": "those values um so if we observe here 1 4 2 and three we'll get the aggregated",
    "start": "1064080",
    "end": "1069520"
  },
  {
    "text": "value 10 out at the other end um and this also has an asynchronous variant um",
    "start": "1069520",
    "end": "1074960"
  },
  {
    "text": "if there's a situation where you need that property um if you don't or can't use a monotonic",
    "start": "1074960",
    "end": "1083280"
  },
  {
    "text": "counter um there's an up down counter uh which as the name implies can go up and it can go down um and this works just",
    "start": "1083280",
    "end": "1090880"
  },
  {
    "text": "the same um but here we can see if we observe a -2 instead of a two um we'll end up getting the value six",
    "start": "1090880",
    "end": "1098120"
  },
  {
    "text": "out um this also has an asynchronous variant then we've got a gauge um this",
    "start": "1098120",
    "end": "1105280"
  },
  {
    "text": "is asynchronous only um and these are useful for tracking things that you know",
    "start": "1105280",
    "end": "1110400"
  },
  {
    "text": "as with most asynchronous instruments don't really change in the context of some specific identify identifiable",
    "start": "1110400",
    "end": "1116760"
  },
  {
    "text": "activity um but maybe um changes continually and you just want to know what's the current value or what was the",
    "start": "1116760",
    "end": "1122320"
  },
  {
    "text": "last value that was seen um so this is useful for something like memory usage",
    "start": "1122320",
    "end": "1128440"
  },
  {
    "text": "or items in a que and here if we observe those same values 142 and three the",
    "start": "1128440",
    "end": "1133679"
  },
  {
    "text": "result is three because that was the last value we saw um there's some",
    "start": "1133679",
    "end": "1139200"
  },
  {
    "text": "experimental work happening for a synchronous gauge um but that's not yet",
    "start": "1139200",
    "end": "1144919"
  },
  {
    "text": "uh available for General use and then finally we've got the histograms um",
    "start": "1144919",
    "end": "1150360"
  },
  {
    "text": "there are two types of those um explicit bucket histograms where you say here are the boundaries of the buckets that I",
    "start": "1150360",
    "end": "1156120"
  },
  {
    "text": "want you to put all of the data in the distribution into uh and then an exponential histogram which will try to",
    "start": "1156120",
    "end": "1162520"
  },
  {
    "text": "automatically fit the bucket boundaries to the data that you're providing it um",
    "start": "1162520",
    "end": "1169600"
  },
  {
    "text": "these can include a lot of additional statistical summary type information um so you might get the the minimum maximum",
    "start": "1169600",
    "end": "1175919"
  },
  {
    "text": "sum and count of all of the observations that you have uh so we can see here that if we observe those same four values 1 4",
    "start": "1175919",
    "end": "1183000"
  },
  {
    "text": "2 and three um then we get a much larger set of data where it tells us the the minimum value we saw was one the maximum",
    "start": "1183000",
    "end": "1189440"
  },
  {
    "text": "was four the sum was 10 uh and the count was four so we can get a lot of the same",
    "start": "1189440",
    "end": "1194520"
  },
  {
    "text": "information that we would get from a counter um but also a lot more information if we need to know um you",
    "start": "1194520",
    "end": "1200960"
  },
  {
    "text": "know was was the the average really high or was it really low um whereas a",
    "start": "1200960",
    "end": "1206080"
  },
  {
    "text": "counter just tells you what was the total you know maybe you've got a bunch of outliers that are bringing up your total and you won't necessarily know",
    "start": "1206080",
    "end": "1211840"
  },
  {
    "text": "that from a counter uh okay and I think that takes us through all of the instruments and P",
    "start": "1211840",
    "end": "1219760"
  },
  {
    "text": "am I handing off to you",
    "start": "1219760",
    "end": "1223120"
  },
  {
    "text": "again yeah thank you Anthony and we will continue with the uh third part of the",
    "start": "1227159",
    "end": "1234000"
  },
  {
    "text": "tutorial are you ready with this setup um it seems like yeah so actually in",
    "start": "1234000",
    "end": "1241799"
  },
  {
    "text": "this set in this step we will not use the kubernetes U so if you're not ready yet it's it's okay so what we're going",
    "start": "1241799",
    "end": "1249440"
  },
  {
    "text": "to do right now is to instrument our application that we are hosting in the",
    "start": "1249440",
    "end": "1255559"
  },
  {
    "text": "repository um so let me explain what application is actually doing before we jump into the instrumentation part um",
    "start": "1255559",
    "end": "1263520"
  },
  {
    "text": "it's a simple microservice polyglot uh application that contains fre microservices front end backend one",
    "start": "1263520",
    "end": "1270960"
  },
  {
    "text": "backend two front end written in no JS backend one in Python and backend two in",
    "start": "1270960",
    "end": "1278799"
  },
  {
    "text": "Java um essentially the logic is to play a game",
    "start": "1278799",
    "end": "1285440"
  },
  {
    "text": "roll a dice the the front end will ask backend one to roll dice for for one",
    "start": "1285440",
    "end": "1291880"
  },
  {
    "text": "player and backend two for the second player and then each back end replies",
    "start": "1291880",
    "end": "1298039"
  },
  {
    "text": "with a number in this case three and six and front end decides which one is higher and prints the result to the to",
    "start": "1298039",
    "end": "1305039"
  },
  {
    "text": "the console so we need to instrument this",
    "start": "1305039",
    "end": "1311919"
  },
  {
    "text": "application to get metrics right and there are two approaches to",
    "start": "1311919",
    "end": "1317039"
  },
  {
    "text": "instrumentation the simplest one is",
    "start": "1317039",
    "end": "1321759"
  },
  {
    "text": "toy the simplest one is to use the API and SDK uh manually which means you know",
    "start": "1322159",
    "end": "1328760"
  },
  {
    "text": "you will pull those libraries into your application and and you use the apis and",
    "start": "1328760",
    "end": "1334159"
  },
  {
    "text": "the second approach is to use the automatic instrumentation um each of this has",
    "start": "1334159",
    "end": "1340640"
  },
  {
    "text": "benefits uh and um and some problems the manual",
    "start": "1340640",
    "end": "1346360"
  },
  {
    "text": "instrumentation is great when and you need to have good control over what what",
    "start": "1346360",
    "end": "1351400"
  },
  {
    "text": "you do on the other hand you might forget to instrument important parts of",
    "start": "1351400",
    "end": "1357240"
  },
  {
    "text": "the application and the automatic instrumentation is something you know",
    "start": "1357240",
    "end": "1362320"
  },
  {
    "text": "that you can set up very easily but on the other hand might consume more",
    "start": "1362320",
    "end": "1368600"
  },
  {
    "text": "resources um and you you just don't control it right so you will just get what is what is prepared for you so",
    "start": "1368600",
    "end": "1376039"
  },
  {
    "text": "we'll start with the manual instrumentation uh on the front end application so I'll",
    "start": "1376039",
    "end": "1382880"
  },
  {
    "text": "change directory to front",
    "start": "1382880",
    "end": "1386760"
  },
  {
    "text": "end I'm",
    "start": "1392679",
    "end": "1395799"
  },
  {
    "text": "sorry it's too",
    "start": "1400039",
    "end": "1403440"
  },
  {
    "text": "small yeah could we ask the room technicians",
    "start": "1406880",
    "end": "1416000"
  },
  {
    "text": "to dim the lights",
    "start": "1416000",
    "end": "1419799"
  },
  {
    "text": "please cool thank you is it better",
    "start": "1424640",
    "end": "1432960"
  },
  {
    "text": "now make it could you please make it bigger as",
    "start": "1436559",
    "end": "1441240"
  },
  {
    "text": "well anusa can you please make okay cool we are Linux users and this is Meg",
    "start": "1447559",
    "end": "1453559"
  },
  {
    "text": "machine so we are confused um but anyways uh so I'll",
    "start": "1453559",
    "end": "1459120"
  },
  {
    "text": "change directory to front end and I will run npm install to install the packages",
    "start": "1459120",
    "end": "1464720"
  },
  {
    "text": "if you don't have npn on your or no j environment you can as well use the",
    "start": "1464720",
    "end": "1470039"
  },
  {
    "text": "docker container uh which you know the steps are just",
    "start": "1470039",
    "end": "1475440"
  },
  {
    "text": "below and then I will use npx to to run the",
    "start": "1484640",
    "end": "1490480"
  },
  {
    "text": "index which um the npx the node demon",
    "start": "1490480",
    "end": "1495559"
  },
  {
    "text": "will watch for changes on the file so I don't have to you know restart the application",
    "start": "1495559",
    "end": "1502240"
  },
  {
    "text": "manually and so the app is running so now I can access the",
    "start": "1504679",
    "end": "1512840"
  },
  {
    "text": "port 4040 it should be let me see no it's actually",
    "start": "1513559",
    "end": "1521559"
  },
  {
    "text": "4,000 and I'm getting internal server error which is correct because the front",
    "start": "1522279",
    "end": "1527360"
  },
  {
    "text": "end needs two backends which are not deployed um so that's",
    "start": "1527360",
    "end": "1533640"
  },
  {
    "text": "fine so what we're going to do right now is to is to instrument it and you can find",
    "start": "1534320",
    "end": "1543200"
  },
  {
    "text": "good guidelines on the official open Telemetry documentation the link is on",
    "start": "1543200",
    "end": "1548399"
  },
  {
    "text": "the read me uh and you can simply paste the code from there into the indexed",
    "start": "1548399",
    "end": "1554919"
  },
  {
    "text": "file uh and initialize the the a the open Telemetry API and",
    "start": "1554919",
    "end": "1561520"
  },
  {
    "text": "SDK and our goal is to use the console exporter that will print the metric in",
    "start": "1563240",
    "end": "1570360"
  },
  {
    "text": "the application console so I'll switch to to the",
    "start": "1570360",
    "end": "1577720"
  },
  {
    "text": "app and so this is the index and as you can see it's",
    "start": "1579120",
    "end": "1584840"
  },
  {
    "text": "initializing you know HTTP framework and then um you know configuring the",
    "start": "1584840",
    "end": "1590960"
  },
  {
    "text": "index endpoint and there is the business logic then so what we need to do now is to",
    "start": "1590960",
    "end": "1598240"
  },
  {
    "text": "open",
    "start": "1598240",
    "end": "1600799"
  },
  {
    "text": "the the open tetri documentation which takes some",
    "start": "1608520",
    "end": "1614039"
  },
  {
    "text": "time",
    "start": "1616600",
    "end": "1619600"
  },
  {
    "text": "are you able to load the page okay it's it's there um and here you can you know",
    "start": "1623520",
    "end": "1630120"
  },
  {
    "text": "choose between typescript and",
    "start": "1630120",
    "end": "1633360"
  },
  {
    "text": "JavaScript and there you have the instructions how to load the the packages for the",
    "start": "1636440",
    "end": "1642320"
  },
  {
    "text": "instrumentation in this case we need to load the open elemetry API SDK and the",
    "start": "1642320",
    "end": "1647640"
  },
  {
    "text": "instrumentation for node.js right so if you just use the API and SDK um it",
    "start": "1647640",
    "end": "1656158"
  },
  {
    "text": "will it will not instrument the the nodejs meaning that we would need to",
    "start": "1656320",
    "end": "1661559"
  },
  {
    "text": "write more codes to get metrics for uh and traces as well for",
    "start": "1661559",
    "end": "1667880"
  },
  {
    "text": "the um for any invocations of the node.js",
    "start": "1667880",
    "end": "1675039"
  },
  {
    "text": "and here we we see the code we can just simply you know um copy",
    "start": "1676159",
    "end": "1683320"
  },
  {
    "text": "it and paste it to to our index um what I prepared as well is a",
    "start": "1683320",
    "end": "1688559"
  },
  {
    "text": "second file called instrument which essentially contains the content from the um from the web",
    "start": "1688559",
    "end": "1696320"
  },
  {
    "text": "page and you can load it by uncommenting this this",
    "start": "1696320",
    "end": "1703080"
  },
  {
    "text": "line and yeah it just you know configures the API and",
    "start": "1706440",
    "end": "1712120"
  },
  {
    "text": "SDK and configures the console",
    "start": "1712120",
    "end": "1717158"
  },
  {
    "text": "exporter so I'm going to save it and then create",
    "start": "1719000",
    "end": "1727120"
  },
  {
    "text": "requests and as you can see the index is already using using the open Telemetry",
    "start": "1732640",
    "end": "1738559"
  },
  {
    "text": "API right um but if we don't initialize the SDK we will not get any Telemetry",
    "start": "1738559",
    "end": "1743720"
  },
  {
    "text": "data right because the API will just be uh no operation and what I have done here is I",
    "start": "1743720",
    "end": "1750960"
  },
  {
    "text": "used the meter as anony was talking about as the main uh kind of entry point to the metrix API",
    "start": "1750960",
    "end": "1758039"
  },
  {
    "text": "and from the meter I created couple of counters first one is the request",
    "start": "1758039",
    "end": "1763279"
  },
  {
    "text": "counter which counts the requests on the um on the root",
    "start": "1763279",
    "end": "1769640"
  },
  {
    "text": "API and if I go back to console I should see the metric uh printed uh in the",
    "start": "1769720",
    "end": "1777039"
  },
  {
    "text": "application console it takes some time before because the SDK is is batching",
    "start": "1777039",
    "end": "1783399"
  },
  {
    "text": "those metrics and it's um reporting them you know periodically after some",
    "start": "1783399",
    "end": "1789440"
  },
  {
    "text": "time yeah I think I did that I can try",
    "start": "1796320",
    "end": "1803399"
  },
  {
    "text": "again it was",
    "start": "1805000",
    "end": "1808440"
  },
  {
    "text": "reloaded no index was not saved you're right control",
    "start": "1820399",
    "end": "1825880"
  },
  {
    "text": "s cool uh I need to create more requests thank",
    "start": "1825880",
    "end": "1832120"
  },
  {
    "text": "you very much yeah it takes a couple seconds to",
    "start": "1832120",
    "end": "1839519"
  },
  {
    "text": "metrics um get",
    "start": "1839519",
    "end": "1844039"
  },
  {
    "text": "reported",
    "start": "1856240",
    "end": "1859240"
  },
  {
    "text": "and we should see something like this in the console that is on the read",
    "start": "1862159",
    "end": "1867960"
  },
  {
    "text": "me and okay so this is the um the output so",
    "start": "1881320",
    "end": "1890320"
  },
  {
    "text": "this is the kind of the simplest way to debug your instrumentation is working",
    "start": "1890320",
    "end": "1895399"
  },
  {
    "text": "because it kind of doesn't require any uh any other service to be running on",
    "start": "1895399",
    "end": "1901840"
  },
  {
    "text": "the host and Next Step we're going to run promethus in",
    "start": "1901840",
    "end": "1908679"
  },
  {
    "text": "Docker that has enabled uh OTP right receiver so uh it's",
    "start": "1908679",
    "end": "1916240"
  },
  {
    "text": "kind of a new feature that was added to the Prometheus I'm going to run the",
    "start": "1916240",
    "end": "1922880"
  },
  {
    "text": "Prometheus in a separate",
    "start": "1922880",
    "end": "1926200"
  },
  {
    "text": "console and I need to now change the code in the instrument",
    "start": "1934000",
    "end": "1940840"
  },
  {
    "text": "JS to use the OTP HTTP",
    "start": "1940840",
    "end": "1946080"
  },
  {
    "text": "exporter",
    "start": "1946080",
    "end": "1949080"
  },
  {
    "text": "and I need to specify the URL and Prometheus exposes OTL under API we1 OT",
    "start": "1961279",
    "end": "1968639"
  },
  {
    "text": "LP prefix you know the API we1 is the you know the prefix for all pritus apis",
    "start": "1968639",
    "end": "1976000"
  },
  {
    "text": "and then they just edit the OT LP suffix for the OTP HTTP",
    "start": "1976000",
    "end": "1983398"
  },
  {
    "text": "API so I'm going to save the",
    "start": "1984159",
    "end": "1988279"
  },
  {
    "text": "file and again refresh the application to",
    "start": "1991960",
    "end": "1998159"
  },
  {
    "text": "again create some requests they that will create metrics and then I should see metrics in my",
    "start": "1998159",
    "end": "2006039"
  },
  {
    "text": "Prometheus",
    "start": "2006039",
    "end": "2008960"
  },
  {
    "text": "so the Prometheus is on the port",
    "start": "2011760",
    "end": "2015720"
  },
  {
    "text": "1990",
    "start": "2019240",
    "end": "2022240"
  },
  {
    "text": "yeah are you able to run Prometheus it seems like the network is",
    "start": "2028399",
    "end": "2034279"
  },
  {
    "text": "very slow for us",
    "start": "2034279",
    "end": "2038960"
  },
  {
    "text": "you don't have questions no it's",
    "start": "2043000",
    "end": "2048279"
  },
  {
    "text": "not",
    "start": "2065879",
    "end": "2068878"
  },
  {
    "text": "I'll try to switch to mobile data Internet which may be",
    "start": "2074000",
    "end": "2079079"
  },
  {
    "text": "faster",
    "start": "2095879",
    "end": "2098879"
  },
  {
    "text": "or",
    "start": "2102720",
    "end": "2104920"
  },
  {
    "text": "anua",
    "start": "2125800",
    "end": "2128800"
  },
  {
    "text": "yeah sorry about that maybe in the meantime we can check so who is still with us we still",
    "start": "2241720",
    "end": "2247119"
  },
  {
    "text": "following do you guys have uh your clusters",
    "start": "2247119",
    "end": "2252440"
  },
  {
    "text": "installed show of hands who is still following and have their cluster ready with the",
    "start": "2254960",
    "end": "2260640"
  },
  {
    "text": "operator those ability backand okay couple hands I said it's",
    "start": "2260640",
    "end": "2266800"
  },
  {
    "text": "not not the best format there's a lot of people here but if you have issue and you want to discuss with us feel free to",
    "start": "2266800",
    "end": "2272480"
  },
  {
    "text": "raise your hand we can someone can come and take a look in the meantime so yeah this this part we're working",
    "start": "2272480",
    "end": "2278920"
  },
  {
    "text": "with Docker on our local machine but soon we will move on to the actual part where we will use the",
    "start": "2278920",
    "end": "2286400"
  },
  {
    "text": "cluster so you still have a bit of time to to prepare for the for the main",
    "start": "2286520",
    "end": "2292240"
  },
  {
    "text": "portion of the",
    "start": "2292240",
    "end": "2295040"
  },
  {
    "text": "tutorial",
    "start": "2305520",
    "end": "2308520"
  },
  {
    "text": "so it seems like the promethus for some reason couldn't be pulled but the next",
    "start": "2446000",
    "end": "2451640"
  },
  {
    "text": "step um all optionally we can use the open Telemetry collector",
    "start": "2451640",
    "end": "2457319"
  },
  {
    "text": "that has the debug exporter and will print the the metrics to the standard",
    "start": "2457319",
    "end": "2462760"
  },
  {
    "text": "output uh so we're going to use that we need to make the changes in the code in",
    "start": "2462760",
    "end": "2468560"
  },
  {
    "text": "the instrument we need to change the exporter from HTTP to",
    "start": "2468560",
    "end": "2476000"
  },
  {
    "text": "grpc we could as well use the http1 uh but we know for the tutorial we decided",
    "start": "2476400",
    "end": "2482720"
  },
  {
    "text": "to use the G gpc1 for The Collector and HT before the",
    "start": "2482720",
    "end": "2488359"
  },
  {
    "text": "pritus so I'm going to save the changes",
    "start": "2488359",
    "end": "2494280"
  },
  {
    "text": "and refresh the application to create uh",
    "start": "2496319",
    "end": "2501760"
  },
  {
    "text": "metrics and again we need to wait because the SDK is U is reporting metric",
    "start": "2503040",
    "end": "2510200"
  },
  {
    "text": "periodically uh but we should see them coming to The Collector",
    "start": "2510200",
    "end": "2515240"
  },
  {
    "text": "soon",
    "start": "2515240",
    "end": "2518240"
  },
  {
    "text": "so the debug exporter that we are using on The Collector is another useful feature in The Collector",
    "start": "2531560",
    "end": "2538760"
  },
  {
    "text": "that um we can use to see if the Telemetry data is coming from our process uh so when we started with",
    "start": "2538760",
    "end": "2545680"
  },
  {
    "text": "instrumentation I would recommend you to use the console exporter in the SDK and then deploy collector and see if the",
    "start": "2545680",
    "end": "2553720"
  },
  {
    "text": "data is coming to your collector so in this case we see the output uh it's different than we saw in the application",
    "start": "2553720",
    "end": "2562680"
  },
  {
    "text": "in this case we see as well the resource attributes uh that you know describe the process reporting the data and then the",
    "start": "2562680",
    "end": "2569760"
  },
  {
    "text": "individual measurements which is the requist counter in our",
    "start": "2569760",
    "end": "2575119"
  },
  {
    "text": "case okay so this was the manual instrumentation as as you can see uh you",
    "start": "2575160",
    "end": "2581319"
  },
  {
    "text": "need to pull in API and SDK packages to your to your application you need to",
    "start": "2581319",
    "end": "2587599"
  },
  {
    "text": "make code changes and then recompile and redeploy to uh get Telemetry working and",
    "start": "2587599",
    "end": "2594359"
  },
  {
    "text": "now we're going to take a look at the auto instrumentation uh Ben could you please",
    "start": "2594359",
    "end": "2600359"
  },
  {
    "text": "come here so Benner will continue with the",
    "start": "2600359",
    "end": "2605920"
  },
  {
    "text": "next part may we do a quick microphone change",
    "start": "2605920",
    "end": "2613520"
  },
  {
    "text": "or you hold okay perfect um quickly out where ah so yeah what we",
    "start": "2613520",
    "end": "2621200"
  },
  {
    "text": "have seen what pav showed us was more or less how to instrument our application manually so therefore we need to know",
    "start": "2621200",
    "end": "2627040"
  },
  {
    "text": "what we not want to know about our application um there are other ways in the JS contract repository or for other",
    "start": "2627040",
    "end": "2633680"
  },
  {
    "text": "languages as well you will find um predefined uh uh some yeah uh packages",
    "start": "2633680",
    "end": "2642200"
  },
  {
    "text": "where you can then instrument things automatically like an entire framework for example gorilla go muks which",
    "start": "2642200",
    "end": "2648720"
  },
  {
    "text": "automatically gives you traces a trace support or a metric support for go and",
    "start": "2648720",
    "end": "2655000"
  },
  {
    "text": "there is another option which is the auto instrumentation we will have a look here with the backend service this Auto instrumentation is available for",
    "start": "2655000",
    "end": "2661520"
  },
  {
    "text": "multiple languages so for example for Java python. net it's always",
    "start": "2661520",
    "end": "2666800"
  },
  {
    "text": "a bit different what they support and what they do not support and since Java is well supported we go with this",
    "start": "2666800",
    "end": "2673000"
  },
  {
    "text": "here so what we do now is or what we have seen previously uh we needed to",
    "start": "2673000",
    "end": "2678240"
  },
  {
    "text": "configure the SDK we needed to instrument stuff we can go with Java and download this Java um agent itself so",
    "start": "2678240",
    "end": "2686119"
  },
  {
    "text": "that we can quickly copy this oh let me try to",
    "start": "2686119",
    "end": "2691680"
  },
  {
    "text": "copy so with the support that Ben mentioned um some of the agents like most of them all",
    "start": "2691680",
    "end": "2700480"
  },
  {
    "text": "of them support tracing but not all of them report metric as",
    "start": "2700480",
    "end": "2706359"
  },
  {
    "text": "well fortunately the Java agent supports metrics um it reports some metrics for",
    "start": "2708040",
    "end": "2714599"
  },
  {
    "text": "um some Frameworks not all of them but for some okay",
    "start": "2714599",
    "end": "2721558"
  },
  {
    "text": "this um where is it",
    "start": "2721920",
    "end": "2727880"
  },
  {
    "text": "yeah just try to",
    "start": "2731000",
    "end": "2734960"
  },
  {
    "text": "type is it right so what Benner will show you you",
    "start": "2736359",
    "end": "2742000"
  },
  {
    "text": "know how to use the agent uh locally uh but um in production you would usually",
    "start": "2742000",
    "end": "2749359"
  },
  {
    "text": "um embed the Java agent directly to your Docker container or inject it um",
    "start": "2749359",
    "end": "2756520"
  },
  {
    "text": "uh to your environment dynamically as we will see on",
    "start": "2756520",
    "end": "2761440"
  },
  {
    "text": "kubernetes so I'm running here uh a container which is has Java installed because the machine doesn't um so it may",
    "start": "2762559",
    "end": "2770000"
  },
  {
    "text": "be an option for you and what we see next is more or less like we quickly go here of over this configure point you",
    "start": "2770000",
    "end": "2775960"
  },
  {
    "text": "will find all the configuration details on the open salry page we just load this Java agent and then we spe specify some",
    "start": "2775960",
    "end": "2782920"
  },
  {
    "text": "environment variables so in the first one we go with the loging OTL uh",
    "start": "2782920",
    "end": "2788000"
  },
  {
    "text": "exporter so that we see our metric reported to the console we just um",
    "start": "2788000",
    "end": "2793520"
  },
  {
    "text": "disable locks and we don't also don't care about traces in this step and then we finally execute the jar which is the",
    "start": "2793520",
    "end": "2800880"
  },
  {
    "text": "back end I pre-compiled this so it's part of the repository So in theory we should be able to just execute it as",
    "start": "2800880",
    "end": "2808559"
  },
  {
    "text": "soon as it's",
    "start": "2808559",
    "end": "2811280"
  },
  {
    "text": "downloaded yeah I hope this goes a bit better or",
    "start": "2814800",
    "end": "2821119"
  },
  {
    "text": "quicker on your",
    "start": "2821119",
    "end": "2823640"
  },
  {
    "text": "machine there is actually a smarter option we already have a prepared",
    "start": "2829760",
    "end": "2834880"
  },
  {
    "text": "container that we use afterwards in kind um which would contain the B uh the jar",
    "start": "2834880",
    "end": "2842000"
  },
  {
    "text": "so that we just need to set the environment variables but I don't want to change",
    "start": "2842000",
    "end": "2848000"
  },
  {
    "text": "this",
    "start": "2848000",
    "end": "2851000"
  },
  {
    "text": "Now sucks well the the console output is",
    "start": "2861359",
    "end": "2868520"
  },
  {
    "text": "kind of small if you could make it",
    "start": "2868520",
    "end": "2871920"
  },
  {
    "text": "bigger",
    "start": "2874720",
    "end": "2877720"
  },
  {
    "text": "ah we stopped the uh prome container this should run in the",
    "start": "2889960",
    "end": "2895920"
  },
  {
    "text": "oh Comm",
    "start": "2895920",
    "end": "2899720"
  },
  {
    "text": "yes that's the wrong quickly go back [Music]",
    "start": "2903760",
    "end": "2911589"
  },
  {
    "text": "to this",
    "start": "2912359",
    "end": "2915519"
  },
  {
    "text": "one why is it downloading it",
    "start": "2919520",
    "end": "2923599"
  },
  {
    "text": "again but why second time download first",
    "start": "2929200",
    "end": "2934599"
  },
  {
    "text": "time",
    "start": "2934599",
    "end": "2937599"
  },
  {
    "text": "okay so this should be up and running and then we try this here",
    "start": "2948960",
    "end": "2953359"
  },
  {
    "text": "again",
    "start": "2955839",
    "end": "2958839"
  },
  {
    "text": "perfect control C command",
    "start": "2964520",
    "end": "2970559"
  },
  {
    "text": "V un able to access oh maybe we need to",
    "start": "2972040",
    "end": "2978319"
  },
  {
    "text": "change to application back and",
    "start": "2978319",
    "end": "2983119"
  },
  {
    "text": "to seems the repository is not up to",
    "start": "2989200",
    "end": "2993799"
  },
  {
    "text": "date",
    "start": "2994520",
    "end": "2997520"
  },
  {
    "text": "then we download a bit more stuff so there is also the option to build it",
    "start": "3000799",
    "end": "3006119"
  },
  {
    "text": "directly",
    "start": "3024440",
    "end": "3027440"
  },
  {
    "text": "so so Ben how do you tell the Java run time to to load the",
    "start": "3047920",
    "end": "3053319"
  },
  {
    "text": "agent uh yeah so basically um we set the Java tool options and then the Java runtime will do the rest for us",
    "start": "3053319",
    "end": "3059839"
  },
  {
    "text": "it will load this first and it's",
    "start": "3059839",
    "end": "3066640"
  },
  {
    "text": "still ah I I see what it's the",
    "start": "3066640",
    "end": "3071440"
  },
  {
    "text": "problem we downloaded oh where",
    "start": "3072119",
    "end": "3077880"
  },
  {
    "text": "is the open telary Agent jar and see we did the typo we did",
    "start": "3079079",
    "end": "3088559"
  },
  {
    "text": "not so now we can call the back end a few times to roll the",
    "start": "3089200",
    "end": "3095558"
  },
  {
    "text": "dice in case I'm able to",
    "start": "3100079",
    "end": "3104240"
  },
  {
    "text": "copy so was a [Music] one I think I think there should be more numbers but",
    "start": "3111280",
    "end": "3119079"
  },
  {
    "text": "yeah so in here we see that we rolled the dice a few times and after a while",
    "start": "3122319",
    "end": "3127400"
  },
  {
    "text": "so after the um the application will flush it and we should see it on the",
    "start": "3127400",
    "end": "3132520"
  },
  {
    "text": "console",
    "start": "3132520",
    "end": "3134920"
  },
  {
    "text": "itself and this will then also include um some Java runtime metrics so for example about a garbage collector and so",
    "start": "3139960",
    "end": "3146760"
  },
  {
    "text": "on um I think we need to skip the peror part because of time issues we spend a",
    "start": "3146760",
    "end": "3153720"
  },
  {
    "text": "lot of on downloading maybe we can quickly if JQ is installed is JQ",
    "start": "3153720",
    "end": "3163318"
  },
  {
    "text": "install",
    "start": "3166240",
    "end": "3169240"
  },
  {
    "text": "copy um",
    "start": "3174040",
    "end": "3177240"
  },
  {
    "text": "so here now we see it a bit more a bit better we see that we get here for example CPU utilization and so on and",
    "start": "3194680",
    "end": "3202359"
  },
  {
    "text": "yeah you can browse through it and it's contains quite a lot and can also configure what you want to see and what you don't want to see um so in theory we",
    "start": "3202359",
    "end": "3210240"
  },
  {
    "text": "can also just uh switch the environment variables a bit so this time we remove the logging OTL exporter so then it will",
    "start": "3210240",
    "end": "3216400"
  },
  {
    "text": "by default use the OTL exporter we specify an open TM Tre Matrix endpoint",
    "start": "3216400",
    "end": "3222240"
  },
  {
    "text": "this is the perimeters instance where we enabled OT LP and um then we need to specify the protocol type so in our case",
    "start": "3222240",
    "end": "3229400"
  },
  {
    "text": "we want to transmit this using HTTP and uh here's the export explicitly",
    "start": "3229400",
    "end": "3236119"
  },
  {
    "text": "installed and we just disable the other ones and then it's the same process so this Pro uh",
    "start": "3236119",
    "end": "3243119"
  },
  {
    "text": "this oh wait yeah this links into the perameters instance and then yeah we should see it there so you see it here",
    "start": "3243119",
    "end": "3249160"
  },
  {
    "text": "on the screenshot um technically this also works for nodejs so you can also play around with this so I added here",
    "start": "3249160",
    "end": "3254400"
  },
  {
    "text": "this optionally okay yeah can take",
    "start": "3254400",
    "end": "3261559"
  },
  {
    "text": "it so in the next section we would like uh to give a a short overview about the",
    "start": "3261559",
    "end": "3266760"
  },
  {
    "text": "um open Telemetry operator what it's used for and how it makes life easier on",
    "start": "3266760",
    "end": "3272240"
  },
  {
    "text": "kubernetes um the open Telemetry operator is basically a component which delivers currently two uh crds one is",
    "start": "3272240",
    "end": "3279599"
  },
  {
    "text": "the instrumentation crd and the open time collector CD the instrumentation CD is used to configure the sdks and also",
    "start": "3279599",
    "end": "3287280"
  },
  {
    "text": "inject the SDK so previously we did download this jav file and this is something the operator can do for",
    "start": "3287280",
    "end": "3293319"
  },
  {
    "text": "us and uh so now now we want to do exactly the same on kubernetes therefore we deploy the entire",
    "start": "3293319",
    "end": "3301079"
  },
  {
    "text": "application I maybe on yeah if you",
    "start": "3301079",
    "end": "3307720"
  },
  {
    "text": "hold can here and",
    "start": "3309440",
    "end": "3317760"
  },
  {
    "text": "then so now we should see yeah so this is the part where you",
    "start": "3318960",
    "end": "3324160"
  },
  {
    "text": "can already follow follow us and basically just copy and paste the",
    "start": "3324160",
    "end": "3329760"
  },
  {
    "text": "commands and it should apply the correct manifests on your on your cluster so in this case",
    "start": "3329760",
    "end": "3335760"
  },
  {
    "text": "we're deploying the the same application we've seen previously in Docker we're now doing the same in kuber",
    "start": "3335760",
    "end": "3343520"
  },
  {
    "text": "nities yes and next we go with the um Auto instrumentation crd we have first",
    "start": "3343520",
    "end": "3349839"
  },
  {
    "text": "maybe quick a look how this looks like let me open this a bit bigger so it's",
    "start": "3349839",
    "end": "3355559"
  },
  {
    "text": "basically the uh instrumentation crd which has uh the open Telemetry API here and we configur the exporter this will",
    "start": "3355559",
    "end": "3362960"
  },
  {
    "text": "be or this is the default path where the op open Telemetry mattics or all the signals get exported in our case we",
    "start": "3362960",
    "end": "3369760"
  },
  {
    "text": "exort traces to the Jagger collector and uh next we configure the same environment variables that we did",
    "start": "3369760",
    "end": "3376559"
  },
  {
    "text": "before and we use a different endpoint in our case the perome instance which is running on kubernetes to ship the metrix",
    "start": "3376559",
    "end": "3384280"
  },
  {
    "text": "there so let's quickly deploy this and then nothing should",
    "start": "3384280",
    "end": "3390680"
  },
  {
    "text": "happen because if we want to make use of it we need to modify the podt spec so um",
    "start": "3392319",
    "end": "3398599"
  },
  {
    "text": "let's have first a look on back end two so what we see here is the container",
    "start": "3398599",
    "end": "3407039"
  },
  {
    "text": "somewhere in this back we have the container we have the image specified almost no environment variables I don't",
    "start": "3407039",
    "end": "3413920"
  },
  {
    "text": "see one not a single one and also with the annotations we have here the perimeter",
    "start": "3413920",
    "end": "3418960"
  },
  {
    "text": "scrape Matrix but this is different um so what we need to set up is now or what",
    "start": "3418960",
    "end": "3425760"
  },
  {
    "text": "we need to do is more or less just add an annotation and tell the open",
    "start": "3425760",
    "end": "3430799"
  },
  {
    "text": "Telemetry um operator that it should inject the Java SDK and it should also configure",
    "start": "3430799",
    "end": "3437079"
  },
  {
    "text": "the variables that we configured on top so this is what we do",
    "start": "3437079",
    "end": "3442280"
  },
  {
    "text": "next since the deployment is patched po should restart we just verify",
    "start": "3442280",
    "end": "3449000"
  },
  {
    "text": "this oh maybe it just get the details",
    "start": "3449000",
    "end": "3455680"
  },
  {
    "text": "again so restarted ah there it's 20",
    "start": "3467480",
    "end": "3473799"
  },
  {
    "text": "seconds",
    "start": "3473799",
    "end": "3476799"
  },
  {
    "text": "Al so yeah now we see the difference so now there is an inet container which is using this image here with the Java Auto",
    "start": "3479559",
    "end": "3486359"
  },
  {
    "text": "translation in this specific version and what it basically does it uses the CP command to copy the Java agent",
    "start": "3486359",
    "end": "3494470"
  },
  {
    "text": "[Music] into can we see this here somewhere I",
    "start": "3494470",
    "end": "3500519"
  },
  {
    "text": "thought terminated is it",
    "start": "3501119",
    "end": "3506720"
  },
  {
    "text": "I don't know how to search the terminal here on the MacBook that's difficult ah here we see the command from the innit",
    "start": "3508599",
    "end": "3513960"
  },
  {
    "text": "container we see it's copying the Java agent on the specific path which is the default path where the Java agent then",
    "start": "3513960",
    "end": "3520079"
  },
  {
    "text": "gets picked up but it's also specified here in the environment variables when we see here we set the Java tool options",
    "start": "3520079",
    "end": "3526880"
  },
  {
    "text": "which is then using this path we also set the other um parameters that we want to transmit metrics using HTTP and we",
    "start": "3526880",
    "end": "3533720"
  },
  {
    "text": "also Target the Yer collector to uh transmit the traces it will",
    "start": "3533720",
    "end": "3538839"
  },
  {
    "text": "automatically also set some resource attributes so that we know where it's coming from um in case we have things",
    "start": "3538839",
    "end": "3544280"
  },
  {
    "text": "manually instrumented um which you can try there's a step in the tutorial from",
    "start": "3544280",
    "end": "3550160"
  },
  {
    "text": "previously um we only need to inject the SDK configuration in this case there will be no init container and nothing",
    "start": "3550160",
    "end": "3556440"
  },
  {
    "text": "gets injected because then the application is expected to deliver all of this so what we can do now is forward",
    "start": "3556440",
    "end": "3563960"
  },
  {
    "text": "promeo here directly because it's the easiest way to collect or see the",
    "start": "3563960",
    "end": "3569720"
  },
  {
    "text": "metrix and go to the pr",
    "start": "3577680",
    "end": "3583078"
  },
  {
    "text": "dashboard so usually also here it takes a second",
    "start": "3584880",
    "end": "3589799"
  },
  {
    "text": "until uh this one some data arrives",
    "start": "3590200",
    "end": "3596640"
  },
  {
    "text": "may we can in the meantime check the locks if everything works as",
    "start": "3611280",
    "end": "3618119"
  },
  {
    "text": "expected",
    "start": "3623559",
    "end": "3626559"
  },
  {
    "text": "here and then we should see on the top no",
    "start": "3635559",
    "end": "3642799"
  },
  {
    "text": "errors see",
    "start": "3647799",
    "end": "3651119"
  },
  {
    "text": "again okay and we are running a bit out of time so I'm trust me it worked on my",
    "start": "3653520",
    "end": "3660480"
  },
  {
    "text": "machine um does it work for someone else or are",
    "start": "3660480",
    "end": "3667039"
  },
  {
    "text": "someone else trouble to see the metrics",
    "start": "3667039",
    "end": "3670880"
  },
  {
    "text": "there so I expect it works for everyone expect",
    "start": "3672680",
    "end": "3677838"
  },
  {
    "text": "me yeah so basically we should then see the metrics that we have seen on the concept previously um transmitted there",
    "start": "3681160",
    "end": "3688119"
  },
  {
    "text": "and also we can forward the Jager or maybe we can check this",
    "start": "3688119",
    "end": "3693880"
  },
  {
    "text": "quickly so here we have okay tracers are arriving Str that's is super strange and",
    "start": "3706480",
    "end": "3713680"
  },
  {
    "text": "here we can see how things worked",
    "start": "3713680",
    "end": "3718920"
  },
  {
    "text": "out one last try still",
    "start": "3726039",
    "end": "3733119"
  },
  {
    "text": "nothing okay so as we can see we see traces and in theory we also should see",
    "start": "3738480",
    "end": "3744200"
  },
  {
    "text": "the metric um so what we do next is we will",
    "start": "3744200",
    "end": "3750240"
  },
  {
    "text": "have a short look on the open t collector this is more or less a short recap so that we all on the same page",
    "start": "3750240",
    "end": "3756000"
  },
  {
    "text": "because the open time collector comes now or will be become a bit more important uh you will see how we yeah",
    "start": "3756000",
    "end": "3762559"
  },
  {
    "text": "collect basically metrics then also with the from the prito ecosystem um so what",
    "start": "3762559",
    "end": "3768000"
  },
  {
    "text": "is the collector The Collector can be divided into let's say three main parts um there a bit more but um it consists",
    "start": "3768000",
    "end": "3775960"
  },
  {
    "text": "or two it consists out of a receiver a processor and exporter and there are also connectors the um receivers can be for",
    "start": "3775960",
    "end": "3783720"
  },
  {
    "text": "example a prome receiver which scrapes metric from um our applications or the OTL receiver which is just listening on",
    "start": "3783720",
    "end": "3790599"
  },
  {
    "text": "a port and waits for new data that arrives the uh processing can take place",
    "start": "3790599",
    "end": "3796000"
  },
  {
    "text": "to enrich our data filter our data or just batch the data to save some overhead and then finally we can export",
    "start": "3796000",
    "end": "3802119"
  },
  {
    "text": "it to different data Stores um so there are options for different protocols again on the wire like uh remote ride or",
    "start": "3802119",
    "end": "3809119"
  },
  {
    "text": "otop",
    "start": "3809119",
    "end": "3811720"
  },
  {
    "text": "directly so to quickly show you how such a configuration looks like um the open temp collector is configured with a",
    "start": "3814319",
    "end": "3821039"
  },
  {
    "text": "simple yaml file um we see the parts that we discussed previously the receiving part in our case now we",
    "start": "3821039",
    "end": "3826680"
  },
  {
    "text": "specify an open Telemetry receiver that accepts GPC on a specific Port um we also",
    "start": "3826680",
    "end": "3833039"
  },
  {
    "text": "specified the batch process an as an exporter we use the debug exporter which directly prints things to console then",
    "start": "3833039",
    "end": "3840480"
  },
  {
    "text": "we have the service section and there we can um compile our service pipelines so",
    "start": "3840480",
    "end": "3845760"
  },
  {
    "text": "we can have currently we have one for metrix but we can also have multiply for example for multiple targets uh or",
    "start": "3845760",
    "end": "3852799"
  },
  {
    "text": "different processing for different metrics and uh we also can there specify",
    "start": "3852799",
    "end": "3857920"
  },
  {
    "text": "pipelines for traces and locks um yeah I think that's almost it",
    "start": "3857920",
    "end": "3863079"
  },
  {
    "text": "and my will show you how to use this on kubernetes you assist me",
    "start": "3863079",
    "end": "3869798"
  },
  {
    "text": "yeah so let's do it let's finally deploy the",
    "start": "3876359",
    "end": "3881480"
  },
  {
    "text": "collector on the cluster what we all been waiting for so as youve seen Bena introduced uh",
    "start": "3881480",
    "end": "3889920"
  },
  {
    "text": "the custom resource called instrumentation which we use on the applications side to instrument it on",
    "start": "3889920",
    "end": "3895559"
  },
  {
    "text": "the other side we have the open telemetric collector custom resource that represents uh how The Collector",
    "start": "3895559",
    "end": "3902359"
  },
  {
    "text": "should be configured and deployed and uh how so how the operator",
    "start": "3902359",
    "end": "3908440"
  },
  {
    "text": "will behave uh or how the operator will manage The Collector instance it's a",
    "start": "3908440",
    "end": "3915480"
  },
  {
    "text": "quite um quite simple or quite many of",
    "start": "3915480",
    "end": "3920960"
  },
  {
    "text": "the parameters in the spec are quite self-explanatory so you can see some of the typical fields that you will see in",
    "start": "3920960",
    "end": "3927240"
  },
  {
    "text": "other CR such as image number of replicas we have autoscaling there uh",
    "start": "3927240",
    "end": "3932279"
  },
  {
    "text": "you can Define ports environment variables Etc these are these are quite common I think so this is how our CR",
    "start": "3932279",
    "end": "3940760"
  },
  {
    "text": "looks like it's quite simple we just pin the image to the I think the latest",
    "start": "3940760",
    "end": "3946000"
  },
  {
    "text": "collector image 88 is now not showing um and here we have the",
    "start": "3946000",
    "end": "3955000"
  },
  {
    "text": "configuration which we took over from what Ben was showing so it's a very simple configuration where we have a",
    "start": "3955000",
    "end": "3962119"
  },
  {
    "text": "receiver with the LLP protocol um we will batch the data coming in and then",
    "start": "3962119",
    "end": "3968240"
  },
  {
    "text": "export it with the So-Cal debug exporter which is just a simple exporter to dump",
    "start": "3968240",
    "end": "3974359"
  },
  {
    "text": "the metrics or the DAT the Telemetry data to your standard output and here we",
    "start": "3974359",
    "end": "3980279"
  },
  {
    "text": "put it all into a pipeline for metrics so what we should see once the data coming through the OTP receiver we",
    "start": "3980279",
    "end": "3987359"
  },
  {
    "text": "should see them on our standard output there are a couple more uh",
    "start": "3987359",
    "end": "3995200"
  },
  {
    "text": "interesting parameters that you can configure in that in that custom resource that you should get familiar",
    "start": "3995200",
    "end": "4000799"
  },
  {
    "text": "yourself with uh one that's specific to the open Telemetry collector it's the",
    "start": "4000799",
    "end": "4006520"
  },
  {
    "text": "mode so this defines the deployment mode of collector what we mean by this is how",
    "start": "4006520",
    "end": "4012440"
  },
  {
    "text": "the collector should be deployed should this be deployment demon St stateful Set Side Car all of these are valid options",
    "start": "4012440",
    "end": "4019599"
  },
  {
    "text": "so for example if you're using the collector as an agent you want to run it on every note you would set this to a",
    "start": "4019599",
    "end": "4025240"
  },
  {
    "text": "demon set if you want to use it as a kind of Gateway you would deploy it as a deployment uh and so on we will see some",
    "start": "4025240",
    "end": "4032920"
  },
  {
    "text": "examples of of use of this parameter later upgrade strategy so the operator",
    "start": "4032920",
    "end": "4038319"
  },
  {
    "text": "can also upgrade the collector for you automatically this is done by default",
    "start": "4038319",
    "end": "4043400"
  },
  {
    "text": "Target Ator is another specialty that you might want to get familiar yourself with if you're using uh The Collector to",
    "start": "4043400",
    "end": "4051119"
  },
  {
    "text": "scrape promius targets so this is a optional component that uh makes it",
    "start": "4051119",
    "end": "4056359"
  },
  {
    "text": "easier for you to integrate with uh Prometheus and to to scale but we'll",
    "start": "4056359",
    "end": "4062319"
  },
  {
    "text": "also see more of this hopefully in the section five lastly service account which you can also specify this is also",
    "start": "4062319",
    "end": "4068760"
  },
  {
    "text": "important when we're talking about uh kubernetes infrastructure metrics as we",
    "start": "4068760",
    "end": "4074279"
  },
  {
    "text": "will see The Collector needs appropriate permissions to to be able to collect",
    "start": "4074279",
    "end": "4079960"
  },
  {
    "text": "certain certain data so uh it's important to have this set up correctly as",
    "start": "4079960",
    "end": "4085279"
  },
  {
    "text": "well so finally let's apply our CR",
    "start": "4085279",
    "end": "4092680"
  },
  {
    "text": "here and check that it was first let's check that the CR was created so as you",
    "start": "4092680",
    "end": "4099000"
  },
  {
    "text": "can see we have some information here as we wanted deployment mode version 88",
    "start": "4099000",
    "end": "4104480"
  },
  {
    "text": "Etc image and also let's check that the collector is",
    "start": "4104480",
    "end": "4111199"
  },
  {
    "text": "actually running yes it's there so we have the expected output and",
    "start": "4111199",
    "end": "4119600"
  },
  {
    "text": "now let's look at some metrics in The Collector but there are no metrics um so",
    "start": "4119600",
    "end": "4127199"
  },
  {
    "text": "we're still missing still missing one more step as we've seen previously in the",
    "start": "4127199",
    "end": "4132798"
  },
  {
    "text": "instrumentation that was introduced uh by Ben we were sending the metrix or we",
    "start": "4132799",
    "end": "4138758"
  },
  {
    "text": "wanted to send the metrix to the Prometheus instance uh in this case we will finally send them to the actual to",
    "start": "4138759",
    "end": "4146159"
  },
  {
    "text": "The Collector uh that will put output them on the deback so this is similar to what you've seen what pav demonstrated",
    "start": "4146159",
    "end": "4152520"
  },
  {
    "text": "on Docker now we're doing the same in uh in finally in in",
    "start": "4152520",
    "end": "4158560"
  },
  {
    "text": "kubernetes so let's apply we have we have um um maybe let's",
    "start": "4158560",
    "end": "4164520"
  },
  {
    "text": "show it quickly we have adjusted the instrumentation so now instead of",
    "start": "4164520",
    "end": "4170880"
  },
  {
    "text": "sending it to Docker we just send it to the collector itself and we also here",
    "start": "4170880",
    "end": "4176920"
  },
  {
    "text": "specify that we do not wish to export traces and locks so we should see only metrics in this",
    "start": "4176920",
    "end": "4183120"
  },
  {
    "text": "case if we go back and try to apply this",
    "start": "4183120",
    "end": "4189238"
  },
  {
    "text": "instrumentation there's one caveat where we should [Music]",
    "start": "4189239",
    "end": "4196640"
  },
  {
    "text": "uh we need to restart the applications in order to uh for the instrumentation to",
    "start": "4196640",
    "end": "4203600"
  },
  {
    "text": "take effect so I will simply",
    "start": "4203600",
    "end": "4209120"
  },
  {
    "text": "delete the pots in the tutorial application namespace and they should be",
    "start": "4209120",
    "end": "4216960"
  },
  {
    "text": "restarted with the",
    "start": "4216960",
    "end": "4222640"
  },
  {
    "text": "desired let's watch them for a",
    "start": "4222640",
    "end": "4227880"
  },
  {
    "text": "bit they should restart with the desired um",
    "start": "4227880",
    "end": "4233360"
  },
  {
    "text": "instrumentation maybe let's check what the backend two is doing if it's might",
    "start": "4233360",
    "end": "4240320"
  },
  {
    "text": "take a minute to might take a minute for it to show us",
    "start": "4240320",
    "end": "4247520"
  },
  {
    "text": "some",
    "start": "4247520",
    "end": "4249840"
  },
  {
    "text": "metrics",
    "start": "4252640",
    "end": "4255640"
  },
  {
    "text": "let's see yeah but no metric so",
    "start": "4258159",
    "end": "4264320"
  },
  {
    "text": "far but there should be also console exporter",
    "start": "4264320",
    "end": "4270239"
  },
  {
    "text": "right it looks like the application is working",
    "start": "4272840",
    "end": "4277880"
  },
  {
    "text": "let's see if the demo gots will be in our favor now so we",
    "start": "4277880",
    "end": "4285280"
  },
  {
    "text": "want observability back end and we want to look",
    "start": "4285280",
    "end": "4290760"
  },
  {
    "text": "at the autel basic collector yes it worked so finally we",
    "start": "4290760",
    "end": "4297280"
  },
  {
    "text": "see some metrics uh as you can see previously we've been",
    "start": "4297280",
    "end": "4304000"
  },
  {
    "text": "we come up to this line so we had some initi initialization messages now we're seeing finally symmetries coming in they",
    "start": "4304000",
    "end": "4310520"
  },
  {
    "text": "are being printed to the standard output as I suggested and we can see resource attributes so we",
    "start": "4310520",
    "end": "4316520"
  },
  {
    "text": "seen the name of the container uh and so on and finally some some metrics like server request",
    "start": "4316520",
    "end": "4324000"
  },
  {
    "text": "duration and so on so this is a very very basic uh example we should now have",
    "start": "4324000",
    "end": "4329800"
  },
  {
    "text": "understanding of how instrumentation and open Telemetry customer resources work and now we'll move on to a more uh",
    "start": "4329800",
    "end": "4336239"
  },
  {
    "text": "realistic and more complex example of how we can use this for collecting",
    "start": "4336239",
    "end": "4341480"
  },
  {
    "text": "promes metrics which uh Anusha will show",
    "start": "4341480",
    "end": "4346600"
  },
  {
    "text": "us they also want yeah okay I don't have",
    "start": "4347120",
    "end": "4352520"
  },
  {
    "text": "okay all right uh so uh now let's talk about the uh collecting Prometheus",
    "start": "4352520",
    "end": "4357960"
  },
  {
    "text": "metric section we only have uh 20 minutes left so and three more sections so I'm going to skip and uh only cover",
    "start": "4357960",
    "end": "4365679"
  },
  {
    "text": "the important parts uh so on a high level uh this section uh we'll be",
    "start": "4365679",
    "end": "4371199"
  },
  {
    "text": "talking through migrating uh talking through to the steps of migrating from Prometheus to open Telemetry for",
    "start": "4371199",
    "end": "4376320"
  },
  {
    "text": "collecting metrics um and after that we'll dive deep into how do we scale The Collector instances with a component",
    "start": "4376320",
    "end": "4382760"
  },
  {
    "text": "called Target allocator and after that we will see uh we'll talk about the interoperability between Prometheus and",
    "start": "4382760",
    "end": "4389520"
  },
  {
    "text": "OTL formats where we'll be explaining how do we uh ingest Prometheus and output it in OTP finally we'll also see",
    "start": "4389520",
    "end": "4397159"
  },
  {
    "text": "U some of the uh format compatibility uh challenges and limitations that we need",
    "start": "4397159",
    "end": "4402639"
  },
  {
    "text": "to be Ware of uh during the migration uh so PR Rex um in the previous step we",
    "start": "4402639",
    "end": "4408280"
  },
  {
    "text": "also have the back into to application uh which was manually instrumented to generate Prometheus metrics and those",
    "start": "4408280",
    "end": "4415320"
  },
  {
    "text": "metrics are being uh Exposed on HTTP endpoint which we'll be scraping in this section and our promethus back end has",
    "start": "4415320",
    "end": "4421639"
  },
  {
    "text": "been set up uh is is up and running on the cuet uh kind cluster and we have the remote right enabled um I'll be skipping",
    "start": "4421639",
    "end": "4429719"
  },
  {
    "text": "through the overview um uh so the the first thing that we need to uh analyze",
    "start": "4429719",
    "end": "4437040"
  },
  {
    "text": "is like we need to actually look at your look into our existing Prometheus configuration and identify uh the",
    "start": "4437040",
    "end": "4442760"
  },
  {
    "text": "scraping mechanism that has been set up so there are two ways uh Target Discovery can be done in Prometheus uh",
    "start": "4442760",
    "end": "4449840"
  },
  {
    "text": "one is uh the first one is uh a more traditional way using scrape configs um",
    "start": "4449840",
    "end": "4456800"
  },
  {
    "text": "so when when using scrape confix we'll have all the targets and the Target and points specified in the Prometheus uh",
    "start": "4456800",
    "end": "4463840"
  },
  {
    "text": "configuration file itself here is the sample promethus configuration file um",
    "start": "4463840",
    "end": "4469960"
  },
  {
    "text": "uh where we can see we have the alerting recording rules scrape configs and remote right uh specified here uh so the",
    "start": "4469960",
    "end": "4476760"
  },
  {
    "text": "next thing that we need to do is uh when before we Port this configuration over to Hotel collector is just pick up the",
    "start": "4476760",
    "end": "4483320"
  },
  {
    "text": "scrape configs from this section the other Advanced features like alerting recording rules are not supported by the",
    "start": "4483320",
    "end": "4489880"
  },
  {
    "text": "collector they can still be set up on your Prometheus back end uh so we pick up the scrape config from uh the promia",
    "start": "4489880",
    "end": "4496840"
  },
  {
    "text": "section and the next thing that we need to do is U escape the dollar characters",
    "start": "4496840",
    "end": "4502199"
  },
  {
    "text": "uh in the scrape config sections the reason uh collector today supports environment variable substitution uh",
    "start": "4502199",
    "end": "4509480"
  },
  {
    "text": "which uh means it interprets the dollar characters in your scrape config as the",
    "start": "4509480",
    "end": "4514880"
  },
  {
    "text": "starting of your environment substitution so in order for us to for the uh values to be replaced by the",
    "start": "4514880",
    "end": "4522520"
  },
  {
    "text": "environment VAR we need to be escaping our escaping the dollar signs uh in the",
    "start": "4522520",
    "end": "4527679"
  },
  {
    "text": "configuration so if you have metric relabel configs or relabel configs in your scrape config make sure to uh",
    "start": "4527679",
    "end": "4534000"
  },
  {
    "text": "escape the dollar characters so here is how our U uh configuration looks like after the exclusions and escaping so if",
    "start": "4534000",
    "end": "4541080"
  },
  {
    "text": "you see here we have the dollar characters escaped the second uh method",
    "start": "4541080",
    "end": "4547000"
  },
  {
    "text": "uh um the second uh method is using the service monitor which is more of a",
    "start": "4547000",
    "end": "4552320"
  },
  {
    "text": "dynamic way for discovering Targets in Prometheus um so when creating the",
    "start": "4552320",
    "end": "4557480"
  },
  {
    "text": "service monitors uh typically in a kubernetes cluster uh we specify the desired configuration a desired scraping",
    "start": "4557480",
    "end": "4564600"
  },
  {
    "text": "Behavior using service labels service monitor uses these service labels to kind of uh uh dynamically discover the",
    "start": "4564600",
    "end": "4571239"
  },
  {
    "text": "services and the targets to scrape um this is more you know flexible and scalable way to uh to do Target",
    "start": "4571239",
    "end": "4579159"
  },
  {
    "text": "Discovery in in in a kubernetes setting um so in in order for us to uh create",
    "start": "4579159",
    "end": "4584840"
  },
  {
    "text": "the service monitors uh we need the Prometheus operator CDs installed so",
    "start": "4584840",
    "end": "4590120"
  },
  {
    "text": "we'll go ahead and install those",
    "start": "4590120",
    "end": "4593280"
  },
  {
    "text": "CDs okay so there you go so the CDs are installed",
    "start": "4596080",
    "end": "4603719"
  },
  {
    "text": "um so the next step is setting up the open Telemetry collector itself just a",
    "start": "4603719",
    "end": "4608880"
  },
  {
    "text": "quick recap so what we looked at so far is we looked at two uh approaches to uh",
    "start": "4608880",
    "end": "4616000"
  },
  {
    "text": "scraping or or discovering the uh Targets in Prometheus and now we'll see how do we set up our open Telemetry",
    "start": "4616000",
    "end": "4622760"
  },
  {
    "text": "collector for these two Discovery mechanisms and we also have seen uh we also have the uh Prometheus",
    "start": "4622760",
    "end": "4629159"
  },
  {
    "text": "configuration scrape configuration ready to be ported um so",
    "start": "4629159",
    "end": "4635480"
  },
  {
    "text": "uh uh so we uh the way we set up the collector is uh open Telemetry offers a",
    "start": "4635480",
    "end": "4641639"
  },
  {
    "text": "Prometheus receiver and a couple of exporters for us to Port over to uh to",
    "start": "4641639",
    "end": "4646719"
  },
  {
    "text": "the open Telemetry collector uh so let's start with looking at the Prometheus",
    "start": "4646719",
    "end": "4652080"
  },
  {
    "text": "receiver uh a Prometheus receiver uh essentially is a minimal drop in replacement for the Prometheus server to",
    "start": "4652080",
    "end": "4657800"
  },
  {
    "text": "scrape metric so under the hood it is just a wrapper over the same Prometheus SCP scrape configuration code um so it",
    "start": "4657800",
    "end": "4666000"
  },
  {
    "text": "supports the full set of Prometheus scraping service Discovery and relabeling configurations and we have a",
    "start": "4666000",
    "end": "4672159"
  },
  {
    "text": "couple of exporters one is a pull-based exporter and the other is a push based exporter uh the pull based exporter",
    "start": "4672159",
    "end": "4678600"
  },
  {
    "text": "essentially you know it exposes all the metrics on your metrics end point for your observable back into scrape and",
    "start": "4678600",
    "end": "4684600"
  },
  {
    "text": "push Bas scrip exporter will write all your metrics to your uh remote right compatible backend uh now let's start",
    "start": "4684600",
    "end": "4692000"
  },
  {
    "text": "with configuring the uh open tary collector for the uh using the scrape",
    "start": "4692000",
    "end": "4697320"
  },
  {
    "text": "configs which is a native service Discovery in Prometheus um so here is",
    "start": "4697320",
    "end": "4703679"
  },
  {
    "text": "how our open Telemetry uh CR or custom reses looks like here is a spec so what",
    "start": "4703679",
    "end": "4709760"
  },
  {
    "text": "we have here is we'll be deploying uh a collector in a state full set mode um uh",
    "start": "4709760",
    "end": "4715480"
  },
  {
    "text": "and uh just one replica for now uh and then under the uh config here we have",
    "start": "4715480",
    "end": "4722440"
  },
  {
    "text": "the receivers as Prometheus um so whatever uh scrape configuration that we",
    "start": "4722440",
    "end": "4728080"
  },
  {
    "text": "prepared earlier in the earlier section we just put it over to this section um",
    "start": "4728080",
    "end": "4733280"
  },
  {
    "text": "so for Simplicity uh I just uh the job that we are using here is an open",
    "start": "4733280",
    "end": "4738360"
  },
  {
    "text": "Telemetry collector monitoring the open telary collector job itself so it'll just monitor the health health of the",
    "start": "4738360",
    "end": "4745120"
  },
  {
    "text": "collector instance and under the exporter sections we have uh logging exporter all the metrics will be logged",
    "start": "4745120",
    "end": "4751120"
  },
  {
    "text": "in the console and we also have the Prometheus and Prometheus remote right exporter but for the purpose of this",
    "start": "4751120",
    "end": "4756480"
  },
  {
    "text": "demo uh we'll be using the Prometheus receiver and the Prometheus remote right exporter if you guys want to experiment",
    "start": "4756480",
    "end": "4762320"
  },
  {
    "text": "with the uh pull-based exporter um all you have to do is just uh replace the Prometheus remote right under the metric",
    "start": "4762320",
    "end": "4769520"
  },
  {
    "text": "exporter section to Prometheus here now let's go ahead and apply this chart um",
    "start": "4769520",
    "end": "4774560"
  },
  {
    "text": "so this will essentially start a new collector instance as a stateful set uh",
    "start": "4774560",
    "end": "4779719"
  },
  {
    "text": "with uh the native Prometheus Discovery I mean the native Prometheus scrape",
    "start": "4779719",
    "end": "4784920"
  },
  {
    "text": "configs so let me just copy paste this all right let's now see if the the",
    "start": "4784920",
    "end": "4793639"
  },
  {
    "text": "pods are up and",
    "start": "4793639",
    "end": "4796840"
  },
  {
    "text": "running uh so we see The Collector instance up and running here so we can",
    "start": "4802920",
    "end": "4809040"
  },
  {
    "text": "we should also be seeing the logs because we have the logging exporter configured we should be seeing all the",
    "start": "4809040",
    "end": "4814600"
  },
  {
    "text": "metrics in the uh collector logs so yeah uh so as you can see The",
    "start": "4814600",
    "end": "4821280"
  },
  {
    "text": "Collector logs now have the open Telemetry um metrics so we should uh we",
    "start": "4821280",
    "end": "4827719"
  },
  {
    "text": "have a collector dashboard uh set up on grafana so we should be seeing all those metrics on the grafana",
    "start": "4827719",
    "end": "4835880"
  },
  {
    "text": "dashboard this is just this right all right so here is the uh collector",
    "start": "4839480",
    "end": "4845520"
  },
  {
    "text": "dashboard so we can see uh the scrape job here oal collector scrape job uh um",
    "start": "4845520",
    "end": "4853480"
  },
  {
    "text": "that we just configured in the scrape config um and most of the other metrics are empty we we'll see more metrics",
    "start": "4853480",
    "end": "4860679"
  },
  {
    "text": "coming in uh as we go through the uh rest of our uh",
    "start": "4860679",
    "end": "4866320"
  },
  {
    "text": "sections all right just going back um",
    "start": "4867239",
    "end": "4873320"
  },
  {
    "text": "so so what we saw so far is we set up the collector for the uh Native",
    "start": "4873320",
    "end": "4880000"
  },
  {
    "text": "Prometheus service Discovery right so the next step is um the next section is",
    "start": "4880000",
    "end": "4885639"
  },
  {
    "text": "we'll uh uh look into how do we scale the metric pipeline using a component called Target allocator uh so in the",
    "start": "4885639",
    "end": "4893120"
  },
  {
    "text": "previous section we only we deployed The Collector as a stateful set and we only have one instance of The Collector",
    "start": "4893120",
    "end": "4898199"
  },
  {
    "text": "running so now if we have to scale the uh collector instances um U we cannot",
    "start": "4898199",
    "end": "4904760"
  },
  {
    "text": "have the same scrape config in all the collector so it'll end up double scraping uh your uh uh metrics so one",
    "start": "4904760",
    "end": "4912040"
  },
  {
    "text": "option is you manually Shard the targets and you you configure the replicas with",
    "start": "4912040",
    "end": "4918320"
  },
  {
    "text": "distinct scrape configs obviously that is a very tedious process so to to simplify the process uh open Telemetry",
    "start": "4918320",
    "end": "4925239"
  },
  {
    "text": "uh operator introduces an optional component called Target allocator uh so",
    "start": "4925239",
    "end": "4930520"
  },
  {
    "text": "T the two essential functions of the target allocator is even distribution of targets Across The Collector instances",
    "start": "4930520",
    "end": "4936480"
  },
  {
    "text": "and the second is it also facilitates the discovery of Pria CRS that we saw earlier which are the service and C",
    "start": "4936480",
    "end": "4942840"
  },
  {
    "text": "monitors so here is a high level overview of uh what the target allocator does uh the first job of the target",
    "start": "4942840",
    "end": "4949400"
  },
  {
    "text": "allocator is to discover the metric targets uh and then it will also discover all the available uh collectors",
    "start": "4949400",
    "end": "4957040"
  },
  {
    "text": "and then it will use a consistent hashing algorithm to distribute all those Shard all those targets across the",
    "start": "4957040",
    "end": "4963719"
  },
  {
    "text": "collectors and then um the open Telemetry collector in turn it queries the Target allocator to get the metric",
    "start": "4963719",
    "end": "4971320"
  },
  {
    "text": "targets uh to screen scpe and finally the open Telemetry receiver uh scrapes those uh metrics and points um so the",
    "start": "4971320",
    "end": "4979400"
  },
  {
    "text": "second job that like I mentioned it also facilitates the discovery of service and pod monitors and uh then adds the job to",
    "start": "4979400",
    "end": "4985800"
  },
  {
    "text": "the TS scrape configuration which in turn adds the job to The Collector uh scrape configuration so here is the CR",
    "start": "4985800",
    "end": "4993560"
  },
  {
    "text": "um and we'll go through the notable changes that we made to the CR uh uh",
    "start": "4993560",
    "end": "4998679"
  },
  {
    "text": "from our previous deployment uh so here now you see the replicas are three so we",
    "start": "4998679",
    "end": "5005159"
  },
  {
    "text": "scale The Collector instances we also have a Target allocator block added here we enable the Target allocator and the",
    "start": "5005159",
    "end": "5012159"
  },
  {
    "text": "sharding strategy that is being used as consistent hashing we have two replicas",
    "start": "5012159",
    "end": "5017560"
  },
  {
    "text": "for the uh for the target allocator for ha and resiliency of the target allocator deployment if if one goes down",
    "start": "5017560",
    "end": "5024320"
  },
  {
    "text": "you always have the other one to um to take the requests uh and we have the image and this uh here prome CR enabled",
    "start": "5024320",
    "end": "5032120"
  },
  {
    "text": "true will essentially enable U will facilitate the service Discovery for the",
    "start": "5032120",
    "end": "5037719"
  },
  {
    "text": "Target allocator so it it uses the if this is enabled uh the target allocator will be able to uh discover the targets",
    "start": "5037719",
    "end": "5045199"
  },
  {
    "text": "using service monitors and the other changes under the promethus section here we have the target allocator uh section",
    "start": "5045199",
    "end": "5052560"
  },
  {
    "text": "and here we actually configure the target allocator endp Point uh that the",
    "start": "5052560",
    "end": "5057760"
  },
  {
    "text": "collector uses to go fetch the scrape configs from now let's go ahead and apply the",
    "start": "5057760",
    "end": "5063800"
  },
  {
    "text": "um the collector um stateful said with",
    "start": "5063800",
    "end": "5070280"
  },
  {
    "text": "Target allocator enabled it will also create a cluster role that grants access",
    "start": "5070280",
    "end": "5075520"
  },
  {
    "text": "to the Target allocator to um it it grants access to go fetch all these",
    "start": "5075520",
    "end": "5083280"
  },
  {
    "text": "metrics um now we applied the uh chart now we should also apply",
    "start": "5083280",
    "end": "5091119"
  },
  {
    "text": "the service monitors",
    "start": "5091119",
    "end": "5094360"
  },
  {
    "text": "and then let's see if the take",
    "start": "5099159",
    "end": "5104719"
  },
  {
    "text": "a let's see if the collector pods are up and",
    "start": "5111280",
    "end": "5116280"
  },
  {
    "text": "running oh yeah so here are uh the uh new collector uh pods here the stateful",
    "start": "5118360",
    "end": "5125360"
  },
  {
    "text": "set three stateful sets and we also have two uh instances of the target allocator running we had two replicas configured",
    "start": "5125360",
    "end": "5132199"
  },
  {
    "text": "in our uh um manifest um so now uh we",
    "start": "5132199",
    "end": "5138719"
  },
  {
    "text": "should uh start we should be we should now see all the Prometheus metrics for our backend one service in our apps",
    "start": "5138719",
    "end": "5147360"
  },
  {
    "text": "dashboard so under the apps dashboard we have a",
    "start": "5151280",
    "end": "5156760"
  },
  {
    "text": "Prometheus section",
    "start": "5156760",
    "end": "5159760"
  },
  {
    "text": "here let's see uh maybe it takes a while for it to yeah there you go um we see",
    "start": "5161880",
    "end": "5170360"
  },
  {
    "text": "all the uh metrics flowing now we see the dice numbers and we also see the dice number count and other metrics um",
    "start": "5170360",
    "end": "5177480"
  },
  {
    "text": "now let's go back",
    "start": "5177480",
    "end": "5183199"
  },
  {
    "text": "uh so where we are is like we we we have seen the apps dashboard we all we also",
    "start": "5183199",
    "end": "5190400"
  },
  {
    "text": "have a dashboard for see for seeing the collector uh Target allocator",
    "start": "5190400",
    "end": "5195719"
  },
  {
    "text": "metrics how do you open this",
    "start": "5195719",
    "end": "5199719"
  },
  {
    "text": "here yeah um and then Anthony will take over and talk about the other two",
    "start": "5203920",
    "end": "5211199"
  },
  {
    "text": "sections so unfortunately we have only five",
    "start": "5211199",
    "end": "5216560"
  },
  {
    "text": "minutes um maybe we should just do an overview or just skim through those",
    "start": "5216560",
    "end": "5222920"
  },
  {
    "text": "parts is that fine so just people know what to find it but it's it's all documented here it's described so you",
    "start": "5222920",
    "end": "5228760"
  },
  {
    "text": "can apply it yourself and see but maybe just give a short overview we can dobern",
    "start": "5228760",
    "end": "5234080"
  },
  {
    "text": "section because we can app question yeah so I I think we've got",
    "start": "5234080",
    "end": "5240840"
  },
  {
    "text": "about four and a half minutes left um will open up to any questions uh if anybody has any questions about what",
    "start": "5240840",
    "end": "5247080"
  },
  {
    "text": "we've covered or um anything else uh raise your hand we'll get a microphone out to you",
    "start": "5247080",
    "end": "5254638"
  },
  {
    "text": "um yes mik",
    "start": "5259119",
    "end": "5265199"
  },
  {
    "text": "yep how how this open tet is different than aure um app Insight providing sdks",
    "start": "5266920",
    "end": "5275920"
  },
  {
    "text": "right Azure app Insight it's providing SDK right it is also collecting the logs",
    "start": "5275920",
    "end": "5281760"
  },
  {
    "text": "and metrics everything so how it is different than that",
    "start": "5281760",
    "end": "5286920"
  },
  {
    "text": "SDK SDK I'm not sure I don't know the the um the SDK the as SDK but uh it's",
    "start": "5286920",
    "end": "5295639"
  },
  {
    "text": "probably similar right it provides you way to create and send metrics and open Telemetry why I would use one or the",
    "start": "5295639",
    "end": "5302920"
  },
  {
    "text": "other uh I would choose open Telemetry because it allows me to switch the back ends right I'm not tied to Azure I can",
    "start": "5302920",
    "end": "5310480"
  },
  {
    "text": "send metrics to Azure as well but as well to promethus or other systems it's",
    "start": "5310480",
    "end": "5316360"
  },
  {
    "text": "it's not vendor locking me to any specific uh you know observability provider that SDK actually there we can",
    "start": "5316360",
    "end": "5323719"
  },
  {
    "text": "use that instrumentation key and put it in your code it's like collecting all",
    "start": "5323719",
    "end": "5328920"
  },
  {
    "text": "custom logs and events everything and then send to app inside that SDK will",
    "start": "5328920",
    "end": "5334600"
  },
  {
    "text": "work like that so this is also almost working like that right but thats Cloud",
    "start": "5334600",
    "end": "5340440"
  },
  {
    "text": "specific SDK right and if you want to switch the cloud and move to G gcp you would have to again reinstrumentation",
    "start": "5340440",
    "end": "5345920"
  },
  {
    "text": "with a different SDK but with this you can avoid all that yeah Azure is the",
    "start": "5345920",
    "end": "5351719"
  },
  {
    "text": "biggest contributor for this open Telemetry I don't know why they are spending on again they have the same SDK",
    "start": "5351719",
    "end": "5359400"
  },
  {
    "text": "is there any difference with open t and that is DK I'm not sure I don't think we",
    "start": "5359400",
    "end": "5365880"
  },
  {
    "text": "know maybe even the Azure SDK is using open Telemetry behind the scenes um it's something they are extending that yeah",
    "start": "5365880",
    "end": "5372520"
  },
  {
    "text": "but SDK is primary SDK is there with them to support in what the net and",
    "start": "5372520",
    "end": "5379239"
  },
  {
    "text": "python nodejs they are not supporting in other languages maybe because of that",
    "start": "5379239",
    "end": "5384960"
  },
  {
    "text": "they are introducing This One op telet I don't understand the question sorry so they are supporting only few",
    "start": "5384960",
    "end": "5391480"
  },
  {
    "text": "languages okay like Python nodejs and net they're not supporting other",
    "start": "5391480",
    "end": "5398280"
  },
  {
    "text": "languages like recent languages go line or different different one and it's not",
    "start": "5398280",
    "end": "5403400"
  },
  {
    "text": "on kubernetes I think maybe that's why they are biggest contributor to this tet",
    "start": "5403400",
    "end": "5409440"
  },
  {
    "text": "openet is that the reason they are doing well none of us work for Microsoft I",
    "start": "5409440",
    "end": "5415159"
  },
  {
    "text": "don't know that we can really speak to them as an AWS employee I know we",
    "start": "5415159",
    "end": "5421080"
  },
  {
    "text": "provide the WS distribution of open Telemetry um which packages uh the the subset of components that we offer",
    "start": "5421080",
    "end": "5427719"
  },
  {
    "text": "enterprise support for I believe Microsoft is doing something similar in Google is as",
    "start": "5427719",
    "end": "5434119"
  },
  {
    "text": "well thank you okay I I think that's all the time we have right should we there's",
    "start": "5434119",
    "end": "5442320"
  },
  {
    "text": "one more question if it's quick",
    "start": "5442320",
    "end": "5446400"
  },
  {
    "text": "maybe",
    "start": "5450840",
    "end": "5453840"
  },
  {
    "text": "uh this is regarding the Prometheus receiver that is uh explained a little",
    "start": "5456560",
    "end": "5462360"
  },
  {
    "text": "bit earlier so uh it is used to scrape",
    "start": "5462360",
    "end": "5467560"
  },
  {
    "text": "the metrix and send it to otel as a backend collector uh my other question",
    "start": "5467560",
    "end": "5473280"
  },
  {
    "text": "is can we leverage this Prometheus receiver as an independent component",
    "start": "5473280",
    "end": "5478719"
  },
  {
    "text": "even with Prometheus ecosystem like we can can we use it Prometheus",
    "start": "5478719",
    "end": "5484679"
  },
  {
    "text": "receiver as a scrape and remote right Target and Prometheus server as a",
    "start": "5484679",
    "end": "5490638"
  },
  {
    "text": "store so the collector doesn't have any storage or quering capabilities but you",
    "start": "5491040",
    "end": "5497040"
  },
  {
    "text": "can use it as a Prometheus scraper and then use the Prometheus remote right exporter to direct the the metrics that",
    "start": "5497040",
    "end": "5503440"
  },
  {
    "text": "have been scraped to a Prometheus compatible Target okay cool the other",
    "start": "5503440",
    "end": "5508560"
  },
  {
    "text": "question I have is in terms of otel collector once it receives data from",
    "start": "5508560",
    "end": "5513719"
  },
  {
    "text": "Prometheus receiver does it do do any replication or these are independent",
    "start": "5513719",
    "end": "5519280"
  },
  {
    "text": "stateful sets that uh don't coordinate with each other uh yes so when you use",
    "start": "5519280",
    "end": "5525159"
  },
  {
    "text": "the target allocator component of the open Petry operator what that will do is it effectively separates the service",
    "start": "5525159",
    "end": "5531840"
  },
  {
    "text": "Discovery mechanism from The Collection so the target allocator discovers all of the targets and knows all of the",
    "start": "5531840",
    "end": "5537320"
  },
  {
    "text": "collectors that are running and so it can allocate the targets between those collectors so that each Target is only",
    "start": "5537320",
    "end": "5542679"
  },
  {
    "text": "given to one collector um that way you won't be double scraping any of your targets or triple scraping depending on",
    "start": "5542679",
    "end": "5548600"
  },
  {
    "text": "how many replicas you have uh I understand that part that is more around collecting uh and sending data into the",
    "start": "5548600",
    "end": "5555000"
  },
  {
    "text": "target collector what I'm asking about is Hotel collector can there be a",
    "start": "5555000",
    "end": "5560159"
  },
  {
    "text": "replication uh that can be set so that uh if one of the hotel collector instances go down we don't lose the data",
    "start": "5560159",
    "end": "5567360"
  },
  {
    "text": "or something like that oh so if you wanted to SC scrape",
    "start": "5567360",
    "end": "5572400"
  },
  {
    "text": "twice each Target and and have multiple collectors scraping each Target no no so let's say Prometheus receiver or otel",
    "start": "5572400",
    "end": "5579920"
  },
  {
    "text": "receiver collects the data and sends it to the back end uh The oel Collector that collects this data uh does it have",
    "start": "5579920",
    "end": "5588199"
  },
  {
    "text": "any replication enabled or these are independent state forets like a a right ahead log yeah so the the pr from right",
    "start": "5588199",
    "end": "5595280"
  },
  {
    "text": "exporter has a right ahead log and I believe there's a a storage component uh that some other exporters use for",
    "start": "5595280",
    "end": "5601639"
  },
  {
    "text": "storing Data before it's been sent out okay so Hotel collector is primarily based on the same uh wall and uh other",
    "start": "5601639",
    "end": "5609639"
  },
  {
    "text": "sorts of you know mechanisms how Prometheus works right but that that's only for persistence just before it gets",
    "start": "5609639",
    "end": "5615800"
  },
  {
    "text": "exported it doesn't do storage and query okay so there are some uh uh tool",
    "start": "5615800",
    "end": "5622719"
  },
  {
    "text": "tools or some uh receivers like uh Thanos receiver that does replication among multiple",
    "start": "5622719",
    "end": "5629159"
  },
  {
    "text": "nodes uh does oel collector have a road map to be on that state or I don't think",
    "start": "5629159",
    "end": "5636679"
  },
  {
    "text": "so the collector tries to be as stateful as possible so that you can scale it horizontally okay thank",
    "start": "5636679",
    "end": "5644119"
  },
  {
    "text": "you yeah I think we're already over time so thank you everyone if you want to",
    "start": "5644119",
    "end": "5649679"
  },
  {
    "text": "look at those more advanced topics the fifth and sixth section I invite you to",
    "start": "5649679",
    "end": "5655800"
  },
  {
    "text": "look at them ourself if you're interested in joining contributing having more questions you can also find",
    "start": "5655800",
    "end": "5662119"
  },
  {
    "text": "us on the cncf select there is a dedicated channel for the operator so feel free to ask there and yeah thank",
    "start": "5662119",
    "end": "5668960"
  },
  {
    "text": "you for your attention",
    "start": "5668960",
    "end": "5673840"
  }
]