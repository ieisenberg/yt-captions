[
  {
    "text": "today we're going to be talking about how to implement a multi-tenant relationship based authorization model",
    "start": "40",
    "end": "5799"
  },
  {
    "text": "with open fga Evan so can you I'm Evan Anderson um",
    "start": "5799",
    "end": "13240"
  },
  {
    "text": "I'm working at stack loock and one of our two products is a um supply chain",
    "start": "13240",
    "end": "19840"
  },
  {
    "text": "security platform that we intend to host for everybody to secure their open source projects it's free for open",
    "start": "19840",
    "end": "25720"
  },
  {
    "text": "source projects and then at some point we'll have licensing for commercial stuff but we're series A start up so we're starting with product Market fit",
    "start": "25720",
    "end": "32279"
  },
  {
    "text": "before we figure out all the fun billing stuff that I'll get to learn about next quarter um previously I've worked on K",
    "start": "32279",
    "end": "39480"
  },
  {
    "text": "native and a bunch of the Google Cloud infrastructure so um that's my background and uh when we're looking at",
    "start": "39480",
    "end": "47079"
  },
  {
    "text": "authorization I sort of said I don't really want to build all this stuff myself and so that's where the find",
    "start": "47079",
    "end": "53359"
  },
  {
    "text": "Folks at open FJ came in yeah so I'm Maria um currently work at OCTA and I've",
    "start": "53359",
    "end": "59160"
  },
  {
    "text": "been working on G for almost 3 years",
    "start": "59160",
    "end": "63480"
  },
  {
    "text": "now you have to give the spoiler alert oh okay um yeah so you know we we got",
    "start": "64760",
    "end": "72240"
  },
  {
    "text": "started with a little bit of handrolled authorization code and it got kind of gnarly and we were talking about adding",
    "start": "72240",
    "end": "78240"
  },
  {
    "text": "more and I was like no let's go use open FDA and at the end you know it's not",
    "start": "78240",
    "end": "84600"
  },
  {
    "text": "100% smooth I'll I'm going to tell you some of the Ws but",
    "start": "84600",
    "end": "90479"
  },
  {
    "text": "I'm also going to throw my mic everywhere uh I have done this before but apparently that's the first time for",
    "start": "90479",
    "end": "98280"
  },
  {
    "text": "this sorry everyone on the recording um hello okay good um would we do it",
    "start": "98960",
    "end": "107840"
  },
  {
    "text": "again yes it was definitely the right choice to do even though um it doesn't do absolutely everything for",
    "start": "107840",
    "end": "115200"
  },
  {
    "text": "you all right so I'm going to be talking about what is fga",
    "start": "115200",
    "end": "121840"
  },
  {
    "text": "so fga stands for fine grained authorization as opposed to course grained authorization and um throughout",
    "start": "122439",
    "end": "129640"
  },
  {
    "text": "my part of the talk I'm going to be using the analogy of Google Drive so um let's say that you're Google Drive and",
    "start": "129640",
    "end": "135800"
  },
  {
    "text": "you have to you know you have users you have uh documents you have folders the",
    "start": "135800",
    "end": "140879"
  },
  {
    "text": "documents live within folders and uh you can share um can you can give",
    "start": "140879",
    "end": "146200"
  },
  {
    "text": "permissions to someone to a document or to a folder or both",
    "start": "146200",
    "end": "151760"
  },
  {
    "text": "so what FTA does is it answers the questions can this user do this thing",
    "start": "151760",
    "end": "156879"
  },
  {
    "text": "this action on this resource or this object and so an example for Google Drive could be can user add is edit the",
    "start": "156879",
    "end": "163920"
  },
  {
    "text": "documents with a customers so how fga Works uh at a very high level is first you have to Define",
    "start": "163920",
    "end": "171599"
  },
  {
    "text": "what we call a model of your permission system so what are the actors and what things you can do with them and then you",
    "start": "171599",
    "end": "177800"
  },
  {
    "text": "have to write what are the relationships ship between those uh objects or between those users and what FJ does is it",
    "start": "177800",
    "end": "185879"
  },
  {
    "text": "builds a graph of that information and it tries to see if there is a a way of going from the user to the object and if",
    "start": "185879",
    "end": "193480"
  },
  {
    "text": "there is it returns you know permission allowed so how does thega fit",
    "start": "193480",
    "end": "200680"
  },
  {
    "text": "architecturally there's been a lot of talks in this conference about service meshes and uh a service mesh is",
    "start": "200680",
    "end": "207519"
  },
  {
    "text": "something that can control how two Services talk to one another so say service a talks to service B uh but it",
    "start": "207519",
    "end": "214640"
  },
  {
    "text": "doesn't say anything about whether a user can access a resource within service a or service B so they really",
    "start": "214640",
    "end": "222080"
  },
  {
    "text": "they solve different problems which you probably heard a lot about service meshes here so uh we",
    "start": "222080",
    "end": "227799"
  },
  {
    "text": "wanted to make make it clear open fga is not this service mesh problem this is a different problem when you've got you",
    "start": "227799",
    "end": "235040"
  },
  {
    "text": "know in our case several thousand projects and then users who want to access one particular set of repos and",
    "start": "235040",
    "end": "242799"
  },
  {
    "text": "have permissions on that but they don't get permissions on all the other GitHub repos we manage that belong to other",
    "start": "242799",
    "end": "249560"
  },
  {
    "text": "people okay so let's talk about how does open fga work so fga needs two pieces of data the",
    "start": "251480",
    "end": "259959"
  },
  {
    "text": "first one is what we call the model and uh it's this is a file that very rarely",
    "start": "259959",
    "end": "265240"
  },
  {
    "text": "changes it's something that maybe you would change when you add a new product or an a new service in your application",
    "start": "265240",
    "end": "272280"
  },
  {
    "text": "and uh it's immutable so you can only create new models you cannot delete them so on the right hand side of the screen",
    "start": "272280",
    "end": "278759"
  },
  {
    "text": "we have a list of questions that you the model author should think about when you write your model so things like where",
    "start": "278759",
    "end": "284600"
  },
  {
    "text": "are the objects or the users in your system what actions can you do with each object and how do those things relate to",
    "start": "284600",
    "end": "290960"
  },
  {
    "text": "one another and if there are hierarchies so nesting of of things on the right hand side we have",
    "start": "290960",
    "end": "298240"
  },
  {
    "text": "what could be a model for Google drive so we have several types we have a user we have a group uh documents and a",
    "start": "298240",
    "end": "305919"
  },
  {
    "text": "folder and then each of these types has what we call relations so for example",
    "start": "305919",
    "end": "310960"
  },
  {
    "text": "the type group has a relation called member and it's assignable to a user so what this means is I can write a fact or",
    "start": "310960",
    "end": "318759"
  },
  {
    "text": "a relationship that says user Evan is uh a member of group stack log for",
    "start": "318759",
    "end": "325479"
  },
  {
    "text": "example and then for the type document we have another relation called can view and it's defined as viewer or owner or",
    "start": "325479",
    "end": "332440"
  },
  {
    "text": "viewer from parent so what this means is if you have the viewer relation for example to the document you",
    "start": "332440",
    "end": "338840"
  },
  {
    "text": "automatically get the can view relation and then we have the type folder which has another relation called",
    "start": "338840",
    "end": "345759"
  },
  {
    "text": "parents so what this means is I can write a fact saying folder a is a parent",
    "start": "345759",
    "end": "351199"
  },
  {
    "text": "of folder B for example the second piece of information",
    "start": "351199",
    "end": "356680"
  },
  {
    "text": "that fga needs is what we call tles or the Rel relationships so for example T could be user Maria is an owner of the",
    "start": "356680",
    "end": "363600"
  },
  {
    "text": "document budget and these are these facts change all the time so every time",
    "start": "363600",
    "end": "369319"
  },
  {
    "text": "you create a document you share a document with someone or you delete something you write or delete a",
    "start": "369319",
    "end": "375160"
  },
  {
    "text": "tble and uh there's an extra API that you can use if you want called the read changes API this gives you a historical",
    "start": "375160",
    "end": "382199"
  },
  {
    "text": "timeline of what changes have been made to the to the",
    "start": "382199",
    "end": "387240"
  },
  {
    "text": "system so this is the final step the the check API so this is the most important",
    "start": "387240",
    "end": "393240"
  },
  {
    "text": "API in fga uh what it does is um it performs a graph traval like I said",
    "start": "393240",
    "end": "398880"
  },
  {
    "text": "before from the user to the object and it returns allow true or false so this",
    "start": "398880",
    "end": "404000"
  },
  {
    "text": "is the example for Google Drives get document um endpoints I'm calling check with the user ID relation viewer and uh",
    "start": "404000",
    "end": "412240"
  },
  {
    "text": "the document ID and notice how there's no role checking there's no uh checking",
    "start": "412240",
    "end": "418199"
  },
  {
    "text": "for attributes of the user it's just a simple query or in our case prior to fga",
    "start": "418199",
    "end": "423960"
  },
  {
    "text": "there would be you know a SQL query and then maybe some more SQL queries to build up some extra stuff and figure out",
    "start": "423960",
    "end": "429919"
  },
  {
    "text": "all these different things and we hadn't even gotten that far into our off system so being able to replace that with check",
    "start": "429919",
    "end": "435240"
  },
  {
    "text": "is real nice it basically pulls it out into something separate that the rest of",
    "start": "435240",
    "end": "441199"
  },
  {
    "text": "the code doesn't get tangled up with Okay so this um I'm going to talk",
    "start": "441199",
    "end": "448039"
  },
  {
    "text": "about how um fga Works behind the scenes for the check API that mentioned so",
    "start": "448039",
    "end": "453440"
  },
  {
    "text": "imagine that the query was is user Alice related to document customers as a",
    "start": "453440",
    "end": "458680"
  },
  {
    "text": "viewer so here the target objects is document customers so what fga does is",
    "start": "458680",
    "end": "464159"
  },
  {
    "text": "it goes back to the model it looks up the relation can view for the document",
    "start": "464159",
    "end": "469720"
  },
  {
    "text": "and the definition is something something or viewer from parent so if you are a viewer of the parent object",
    "start": "469720",
    "end": "476599"
  },
  {
    "text": "which is a folder then you can can you can view this document okay so it goes",
    "start": "476599",
    "end": "482319"
  },
  {
    "text": "toles and it finds the parent objects of the document which in this case is folder sales and then again it goes back",
    "start": "482319",
    "end": "490120"
  },
  {
    "text": "to the model what are the what is the definition for a viewer of folder it's",
    "start": "490120",
    "end": "495479"
  },
  {
    "text": "user user star whatever whatever or viewer from parents again so if you have viewer access on the folder sorry on the",
    "start": "495479",
    "end": "502560"
  },
  {
    "text": "parent folder then you get view access on this folder so it goes to the Tes and",
    "start": "502560",
    "end": "508199"
  },
  {
    "text": "it sees okay folder prospects is a parent of folder sales okay so final",
    "start": "508199",
    "end": "513560"
  },
  {
    "text": "step back to the model who is a viewer of a of a folder um and the the first uh operant",
    "start": "513560",
    "end": "521518"
  },
  {
    "text": "is a user so it says Define viewer as a user so this means is I can write a tuple saying the user is a viewer of the",
    "start": "521519",
    "end": "528600"
  },
  {
    "text": "folder so in this case it looks at the tles and it sees uh oh user Alice is a",
    "start": "528600",
    "end": "534240"
  },
  {
    "text": "viewer of folder prospects and so we' solved the query and we found that there is a path from the user to the object",
    "start": "534240",
    "end": "541160"
  },
  {
    "text": "and so iow is true you can do this with nested SQL",
    "start": "541160",
    "end": "547560"
  },
  {
    "text": "queries yourself but it's not pretty would not recommend yeah how does open",
    "start": "547560",
    "end": "553320"
  },
  {
    "text": "FDA learn about the resources do you you need to you need to tell them that's this previous step of writing the tupal",
    "start": "553320",
    "end": "559480"
  },
  {
    "text": "if you'll go back yeah this so you need to push from the application I cre these relationships yeah uh we have a batch",
    "start": "559480",
    "end": "567519"
  },
  {
    "text": "process when we were doing our migration that went pushed all that in the first time and then we keep it up to date after",
    "start": "567519",
    "end": "573680"
  },
  {
    "text": "that yeah he's going to talk about it later um okay so a bit about the",
    "start": "573680",
    "end": "579680"
  },
  {
    "text": "benefits of open fga the first big one is you avoid OS",
    "start": "579680",
    "end": "586000"
  },
  {
    "text": "mistakes so we have the list there of the top 10 OS risks and well open fga",
    "start": "586000",
    "end": "591800"
  },
  {
    "text": "solves three of them so risk number one and number five are basically the same",
    "start": "591800",
    "end": "597079"
  },
  {
    "text": "thing they're uh the issue where a user has access to something that they shouldn't so let's say I try to access I",
    "start": "597079",
    "end": "604120"
  },
  {
    "text": "don't know documents super secret and there's no there's no check for permissions in the get document end",
    "start": "604120",
    "end": "609839"
  },
  {
    "text": "point then now my application is at risk because I have access to something that it shouldn't so the solution to this is",
    "start": "609839",
    "end": "618040"
  },
  {
    "text": "every single endpoint should have a call to the check API and you can do this in a middleware very easily you can put",
    "start": "618040",
    "end": "624440"
  },
  {
    "text": "this uh this check here this could leave in a mware",
    "start": "624440",
    "end": "630079"
  },
  {
    "text": "we actually implemented grpc middleware because we're using grpc and we use annotations on our rpcs to say when",
    "start": "630160",
    "end": "636720"
  },
  {
    "text": "you're making this call you need this permission here's you know here's a standard pattern for where to find the",
    "start": "636720",
    "end": "642240"
  },
  {
    "text": "objects that you do the authorization on so um all of that is basically declarative and you can go look at the",
    "start": "642240",
    "end": "647720"
  },
  {
    "text": "file and see oh to do this I need this permission over here um okay obviously you can write",
    "start": "647720",
    "end": "654360"
  },
  {
    "text": "your own middleware however you want um the the second risk that open",
    "start": "654360",
    "end": "660200"
  },
  {
    "text": "fga solves is um let's say that your documents have a field called deleted ad",
    "start": "660200",
    "end": "666639"
  },
  {
    "text": "and I somehow have permission or I can somehow edit the deleted a field so what",
    "start": "666639",
    "end": "673560"
  },
  {
    "text": "just happened I could delete a document that I shouldn't have been allowed to so this is very common with graphql queries",
    "start": "673560",
    "end": "681160"
  },
  {
    "text": "and again the solution is maybe modify the patch document endpoint so that if",
    "start": "681160",
    "end": "686760"
  },
  {
    "text": "you try to modify a field in an object then you again call the check API to verify that you can actually change that",
    "start": "686760",
    "end": "695720"
  },
  {
    "text": "field okay some more benefits auditability um is a big one",
    "start": "696720",
    "end": "702200"
  },
  {
    "text": "for especially for security Engineers previously uh yeah preop ofj world you",
    "start": "702200",
    "end": "708120"
  },
  {
    "text": "would have to look at all the code to well all the all the bits of authorization that lived within the code",
    "start": "708120",
    "end": "714240"
  },
  {
    "text": "to see how that actually happens but now there's only one thing that you have to",
    "start": "714240",
    "end": "719519"
  },
  {
    "text": "audit which is the model this this file right here um so that makes things",
    "start": "719519",
    "end": "725519"
  },
  {
    "text": "easier I think and um or at least if you can make sure that there's a check call in the path then you just need to audit",
    "start": "725519",
    "end": "731519"
  },
  {
    "text": "the mod the model so if you use middleware or something like that MH",
    "start": "731519",
    "end": "736959"
  },
  {
    "text": "yeah yeah and the second part that is very easy to audit is the the historical view of um who requested access to what",
    "start": "740120",
    "end": "747959"
  },
  {
    "text": "because those are logged in the check API codes uh decoupling is uh if we go back",
    "start": "747959",
    "end": "756120"
  },
  {
    "text": "to the check API code uh if you see here doesn't matter what the model is or what the Tes are",
    "start": "756120",
    "end": "763959"
  },
  {
    "text": "this check C stays the same maybe if you update the model and then uh the relation is not viewer anymore it's",
    "start": "763959",
    "end": "770360"
  },
  {
    "text": "viewer uh it's can view okay you have to change the the name of the relation but",
    "start": "770360",
    "end": "775880"
  },
  {
    "text": "this code pretty much stays the same all the time",
    "start": "775880",
    "end": "780720"
  },
  {
    "text": "uh the third one consistent API for developers again check API is pretty simple it's standard API and everyone in",
    "start": "784680",
    "end": "791800"
  },
  {
    "text": "the company uses that so it's easier on any um on",
    "start": "791800",
    "end": "796959"
  },
  {
    "text": "everyone um enforcement of authorization across service or product boundaries this is about the model so it is pretty",
    "start": "798040",
    "end": "805199"
  },
  {
    "text": "easy to extend this model um to include other features so you can imagine uh",
    "start": "805199",
    "end": "810880"
  },
  {
    "text": "that for example this is just for the Google Drive now but there's no reason why they could not add more types and",
    "start": "810880",
    "end": "817320"
  },
  {
    "text": "relations for Google Sheets or Google Docs and with one fga service you can",
    "start": "817320",
    "end": "822800"
  },
  {
    "text": "have people who are a member of group and have that group apply evenly and seamlessly across you know your drive",
    "start": "822800",
    "end": "829240"
  },
  {
    "text": "sheets your drive service and your sheet service and so forth um so you can kind",
    "start": "829240",
    "end": "834399"
  },
  {
    "text": "of have one fga under layer across many different microservices that",
    "start": "834399",
    "end": "839800"
  },
  {
    "text": "running uh there's a second part to this and that's that you can actually uh split this model into separate files and",
    "start": "839800",
    "end": "846720"
  },
  {
    "text": "then they get all combined this is a feature called modular models and what this allows is that every unit in the",
    "start": "846720",
    "end": "853040"
  },
  {
    "text": "company can write their own sub model and then uh it's it's all one big file",
    "start": "853040",
    "end": "858639"
  },
  {
    "text": "in the end one big",
    "start": "858639",
    "end": "862720"
  },
  {
    "text": "model um and then uh FDA supports attribute base or condition authorization what this means is I can",
    "start": "864880",
    "end": "872160"
  },
  {
    "text": "change the model so that I can write a table for example saying user Evan is an",
    "start": "872160",
    "end": "877759"
  },
  {
    "text": "a viewer of document budget only when the IP address is this or when the time stamp is this and then fga takes that uh",
    "start": "877759",
    "end": "887320"
  },
  {
    "text": "that information and then in the check request I send the current IP address or",
    "start": "887320",
    "end": "892519"
  },
  {
    "text": "the current time stamp and it merges the the two and it arrives at that decision",
    "start": "892519",
    "end": "899120"
  },
  {
    "text": "some more benefits um availability so you can deploy fga and scale it",
    "start": "902399",
    "end": "907440"
  },
  {
    "text": "independently of other apps um correctness we have battle tested this so that check API always",
    "start": "907440",
    "end": "914000"
  },
  {
    "text": "responds to with the right um response and uh low latency so this is",
    "start": "914000",
    "end": "921440"
  },
  {
    "text": "not login right this is authorization so it's not going to happen once it's going to happen many times during the course",
    "start": "921440",
    "end": "927279"
  },
  {
    "text": "of a of a second Maybe so we we work really hard to keep the latency of J API",
    "start": "927279",
    "end": "933040"
  },
  {
    "text": "low and one of the ways that you can control that is you can turn on a flag",
    "start": "933040",
    "end": "938360"
  },
  {
    "text": "on the server uh to enable in memory caching and this of course comes with a cost of staleness so you can get a",
    "start": "938360",
    "end": "945000"
  },
  {
    "text": "staler response if you enable",
    "start": "945000",
    "end": "948759"
  },
  {
    "text": "it em all yeah so um the line counts may not seem like a lot but this is going",
    "start": "950160",
    "end": "957399"
  },
  {
    "text": "from a model that basic Al just had owners to a model that had um five total",
    "start": "957399",
    "end": "966959"
  },
  {
    "text": "roles and hierarchical permissions so that we could actually have enclosing projects that that contain other",
    "start": "966959",
    "end": "973560"
  },
  {
    "text": "projects and ALT together we ended up with half the code and substantially less entangling so um that's the history",
    "start": "973560",
    "end": "982480"
  },
  {
    "text": "you know Myers's an open source project so you if you're curious later you can go and look at these PRS um and and you",
    "start": "982480",
    "end": "989759"
  },
  {
    "text": "can see that you know in many cases uh you know there was less code but more",
    "start": "989759",
    "end": "996199"
  },
  {
    "text": "capability so yeah that's the that's the ad part of",
    "start": "996199",
    "end": "1003720"
  },
  {
    "text": "this and um one of the other things that I really liked is um you've got this model",
    "start": "1003720",
    "end": "1011240"
  },
  {
    "text": "file where you describe these relations you can also write tests to test that you've actually built those models to",
    "start": "1011240",
    "end": "1018880"
  },
  {
    "text": "produce the results that you want for authorization and then you can run those tests continuously and so if someone um",
    "start": "1018880",
    "end": "1027038"
  },
  {
    "text": "you know goes and adds a new role you say okay who under which circumstances should this happen which circumstances",
    "start": "1027039",
    "end": "1033400"
  },
  {
    "text": "should this not and unlike if you've got your code tied in your authorization",
    "start": "1033400",
    "end": "1040038"
  },
  {
    "text": "code in the middle of all your other stuff you don't have to stand up you know a mock database and a bunch of",
    "start": "1040039",
    "end": "1045319"
  },
  {
    "text": "other things to see that hey you know this user admin one has permissions to",
    "start": "1045319",
    "end": "1052720"
  },
  {
    "text": "create a provider for example um you know testing that in the you know",
    "start": "1052720",
    "end": "1058640"
  },
  {
    "text": "exhaustively in your normal case uh might be you know 200 lines of test code",
    "start": "1058640",
    "end": "1065120"
  },
  {
    "text": "and instead it's a little declarative file that lets us validate that we're actually making the authoriz",
    "start": "1065120",
    "end": "1071160"
  },
  {
    "text": "authorization decisions that we want um another thing that I really",
    "start": "1071160",
    "end": "1077159"
  },
  {
    "text": "liked is that we can actually explain the access so you say you know hey why",
    "start": "1077159",
    "end": "1083039"
  },
  {
    "text": "does Maria have access to this project well it's because this and this and this",
    "start": "1083039",
    "end": "1088200"
  },
  {
    "text": "and you can actually ask open fga and it will explain hey this is you know everyone who has access to this object",
    "start": "1088200",
    "end": "1094159"
  },
  {
    "text": "or this is everything Maria has access to or this is why Maria has this specific access and so um as you're",
    "start": "1094159",
    "end": "1100919"
  },
  {
    "text": "looking at these fga things this is a really key um capability if you're moving your",
    "start": "1100919",
    "end": "1110080"
  },
  {
    "text": "your auth your authorization decisions out you want to be able to explain to Auditors and potentially even open up as",
    "start": "1110080",
    "end": "1116360"
  },
  {
    "text": "an API call hey why do I have this access so that your customers can do that for",
    "start": "1116360",
    "end": "1121840"
  },
  {
    "text": "themselves um another thing that is nice",
    "start": "1121840",
    "end": "1127400"
  },
  {
    "text": "is that since you're putting these tupal out in open FDA and it's about these relationships you can actually add new",
    "start": "1127400",
    "end": "1134799"
  },
  {
    "text": "roles later for example and you need to update the model fga but um you don't",
    "start": "1134799",
    "end": "1142360"
  },
  {
    "text": "necessarily need to go in and do a bunch of other adjustments and so you can see here we added a policy writer and um it",
    "start": "1142360",
    "end": "1151559"
  },
  {
    "text": "was probably 100 lines or so is my guess in that and we you know we updated this",
    "start": "1151559",
    "end": "1157480"
  },
  {
    "text": "we updated the um tests and then we updated the allowed set of strings to include policy writer and that was you",
    "start": "1157480",
    "end": "1164600"
  },
  {
    "text": "know for the the roles that we accept and all of a sudden we had a policy writer Ro who could write policies but",
    "start": "1164600",
    "end": "1170080"
  },
  {
    "text": "couldn't necessarily view other stuff um that was a lot less work than it would have been if we were hand rolling all",
    "start": "1170080",
    "end": "1176559"
  },
  {
    "text": "our all of our authorization code so now we're all excited",
    "start": "1176559",
    "end": "1183280"
  },
  {
    "text": "but um as a software engineer I also believe that everything comes with trade-offs and I'm going to be honest",
    "start": "1183280",
    "end": "1189080"
  },
  {
    "text": "with you and there are trade-offs here so let's talk about some of the parts that can be a little bit more of a pain",
    "start": "1189080",
    "end": "1196240"
  },
  {
    "text": "so um this cool thing you know we talked about step two you",
    "start": "1196240",
    "end": "1202440"
  },
  {
    "text": "push these tupes into open fga you've basically made some piece of your database into a separate service um and",
    "start": "1202440",
    "end": "1210600"
  },
  {
    "text": "then when you go to you know ask questions like you know what are our top",
    "start": "1210600",
    "end": "1216559"
  },
  {
    "text": "you know who who are the users of our top projects well we're using open fga and we're using keycloak so to answer",
    "start": "1216559",
    "end": "1222280"
  },
  {
    "text": "that I can go and look at our usage tables I can find our top projects and then after that I can at each of our top",
    "start": "1222280",
    "end": "1229440"
  },
  {
    "text": "projects and I have to ask open fga hey who has permissions on these I can't look at that in our main database",
    "start": "1229440",
    "end": "1234960"
  },
  {
    "text": "because that's not where that's not where that's stored it's stored in open fga and so I get back from that a list",
    "start": "1234960",
    "end": "1240760"
  },
  {
    "text": "of user tupal well our user tupal are users in keycloak we don't store their email",
    "start": "1240760",
    "end": "1246640"
  },
  {
    "text": "address because they might change or update that so then I need to go to keycloak and I need to go and resolve",
    "start": "1246640",
    "end": "1252320"
  },
  {
    "text": "all of those to email addresses so that um our PMs can go and contact our top users and tell them either you you know",
    "start": "1252320",
    "end": "1258760"
  },
  {
    "text": "here's a new feature or you know thanks for you know thanks for using the service or anything like that so um it",
    "start": "1258760",
    "end": "1267640"
  },
  {
    "text": "becomes a little extra work to do some of these analytical queries and so forth um that was I think one of the one of",
    "start": "1267640",
    "end": "1274799"
  },
  {
    "text": "the first cases where we encountered something where it was like oh and you know we we just had to change this",
    "start": "1274799",
    "end": "1280840"
  },
  {
    "text": "process a little bit um also we've had one or two cases",
    "start": "1280840",
    "end": "1286360"
  },
  {
    "text": "where we didn't think very carefully about which place we delete data from",
    "start": "1286360",
    "end": "1291679"
  },
  {
    "text": "first or which place we create data from first and uh we ended up in some cases",
    "start": "1291679",
    "end": "1298279"
  },
  {
    "text": "with clearing out someone's permission to see for example a project before we",
    "start": "1298279",
    "end": "1305120"
  },
  {
    "text": "deleted that project itself and in that case um we ended up with an orphaned",
    "start": "1305120",
    "end": "1311120"
  },
  {
    "text": "project that nobody could delete because um we just cleared out everyone's permission to do anything with it um and",
    "start": "1311120",
    "end": "1318000"
  },
  {
    "text": "so we had to go into a manual database clean up by hand and in the meantime um I think it blocked DA's project there",
    "start": "1318000",
    "end": "1324240"
  },
  {
    "text": "from being recreated um so you have to think a little bit about the order because you don't get a two-phase you",
    "start": "1324240",
    "end": "1330720"
  },
  {
    "text": "know you don't get a two-phase commit or any kind of transactional thing between open fga and your other database if you",
    "start": "1330720",
    "end": "1336039"
  },
  {
    "text": "figure out your order get things right um I would say uh well this says for",
    "start": "1336039",
    "end": "1343159"
  },
  {
    "text": "creating I would do things to fga first and then to the database and use something like like a uu ID or something",
    "start": "1343159",
    "end": "1350720"
  },
  {
    "text": "that's going to be unique when you're tearing things down do it in the opposite order um but just figure out",
    "start": "1350720",
    "end": "1356960"
  },
  {
    "text": "what your strategy is there and have a system to sync the two if",
    "start": "1356960",
    "end": "1362320"
  },
  {
    "text": "needed um and you're running another service um I know everybody here is",
    "start": "1362320",
    "end": "1367679"
  },
  {
    "text": "cloud native and so they love running as many services you can get your hands on got to catch them all um but uh you know",
    "start": "1367679",
    "end": "1374679"
  },
  {
    "text": "you got another database you need to do backups you need to do monitoring check if it's up check and see if you've hit",
    "start": "1374679",
    "end": "1381320"
  },
  {
    "text": "dockerhub image pull rate limits um you know all that good",
    "start": "1381320",
    "end": "1387159"
  },
  {
    "text": "stuff so um there is a Helm chart it's helpful um but uh yeah you're running it",
    "start": "1387159",
    "end": "1394720"
  },
  {
    "text": "you own it um and yeah there's",
    "start": "1394720",
    "end": "1401840"
  },
  {
    "text": "a it it sounds great just add the check call but there's there's more than just the check call involved and so expect to",
    "start": "1401840",
    "end": "1409480"
  },
  {
    "text": "invest a little bit in tooling that makes this fit into your ecosystem um in",
    "start": "1409480",
    "end": "1414960"
  },
  {
    "text": "our case we ended up writing our own middleware for grpc maybe there's something out there that does that feel free to steal ours",
    "start": "1414960",
    "end": "1421760"
  },
  {
    "text": "if you want I actually think it's kind of nice um but uh you know that was something else we had to write um we",
    "start": "1421760",
    "end": "1429039"
  },
  {
    "text": "actually we're in go so we store the user you know we validate the user's jot and then we sore that identity in the",
    "start": "1429039",
    "end": "1434320"
  },
  {
    "text": "context our next middleware is open fga and it pulls the user jot out of of the context and then you know ties it in um",
    "start": "1434320",
    "end": "1442320"
  },
  {
    "text": "sends it you know does that check and all that stuff you also all those tupal you need some user",
    "start": "1442320",
    "end": "1449480"
  },
  {
    "text": "facing way for users to write them um that's that's your API open fga is not",
    "start": "1449480",
    "end": "1455720"
  },
  {
    "text": "going to tell you exactly how that needs to look so you are going to have to write an API that is you know Grant user",
    "start": "1455720",
    "end": "1462240"
  },
  {
    "text": "permission on this thing or um you know here's you know how to manage a",
    "start": "1462240",
    "end": "1469080"
  },
  {
    "text": "group or whatever that API looks like or you know web page if you're just a web page person um and we tied our fga tests",
    "start": "1469080",
    "end": "1477880"
  },
  {
    "text": "into go test um which is kind of a little fun bit of hackery where we wrote",
    "start": "1477880",
    "end": "1483640"
  },
  {
    "text": "a test that shells out to the fga tester and then exits with the right code so that if you break your model your go",
    "start": "1483640",
    "end": "1490760"
  },
  {
    "text": "test fails even though it's running a different",
    "start": "1490760",
    "end": "1495440"
  },
  {
    "text": "binary um so yeah",
    "start": "1495880",
    "end": "1500960"
  },
  {
    "text": "um I don't know I think apds this makes your life easier because you get this",
    "start": "1500960",
    "end": "1507960"
  },
  {
    "text": "declarative model and then you're like uh and that's fda's problem to fix and and make fast and everything else um I",
    "start": "1507960",
    "end": "1515120"
  },
  {
    "text": "think it probably makes the security engineer's life easier if you're a security engineer and you think I'm full of it then you know talk to me I'd love",
    "start": "1515120",
    "end": "1521399"
  },
  {
    "text": "to hear your take but you know you get to say hey here's a standard piece you know this works just like the other",
    "start": "1521399",
    "end": "1527320"
  },
  {
    "text": "stuff um um and I think it helps end users because you get these richer",
    "start": "1527320",
    "end": "1533799"
  },
  {
    "text": "models where you can have you know folders and inheritance and groups and things like that um more consistently",
    "start": "1533799",
    "end": "1541320"
  },
  {
    "text": "through all the different products you manage as opposed to um I also have to deal with Amazon IM and that's kind of",
    "start": "1541320",
    "end": "1546760"
  },
  {
    "text": "the opposite of this where you know every little thing like this RPC you know has a special form and you need to",
    "start": "1546760",
    "end": "1553159"
  },
  {
    "text": "know like oh you know irn Arns are shaped like this over here and there's",
    "start": "1553159",
    "end": "1558520"
  },
  {
    "text": "there's no transitive access that you get you have to spell every single thing out and while that's great from a",
    "start": "1558520",
    "end": "1564919"
  },
  {
    "text": "detailed access point of view um it also means the first three times I grant permissions I don't get it right and I",
    "start": "1564919",
    "end": "1570799"
  },
  {
    "text": "have to go back and add something else um and hopefully fga will make it so that most users can just do one Grant",
    "start": "1570799",
    "end": "1578080"
  },
  {
    "text": "and they get access to the right stuff and um as an aser who's interested in",
    "start": "1578080",
    "end": "1584120"
  },
  {
    "text": "security usability is the first piece of security if people can't use it then and all hope is",
    "start": "1584120",
    "end": "1592440"
  },
  {
    "text": "lost yeah so our stack you know we wrote some ooth code",
    "start": "1596000",
    "end": "1603080"
  },
  {
    "text": "to begin with we replaced it with keycloak we were happy with that um we wrote an access access control system",
    "start": "1603080",
    "end": "1609559"
  },
  {
    "text": "ourselves we replaced that with open FDA we're happy with that um there's this",
    "start": "1609559",
    "end": "1615760"
  },
  {
    "text": "dream that someday maybe we could just replace everything with these you know services that do stuff well but I don't",
    "start": "1615760",
    "end": "1622440"
  },
  {
    "text": "know I suspect that we'll probably have a core of stuff that is unique to us",
    "start": "1622440",
    "end": "1628440"
  },
  {
    "text": "um and yeah saves you some work doesn't save everything moves moves the problem",
    "start": "1628440",
    "end": "1634320"
  },
  {
    "text": "around on the plate still have to eat your PE",
    "start": "1634320",
    "end": "1638720"
  },
  {
    "text": "sometime thanks happy to take questions or you",
    "start": "1639399",
    "end": "1645480"
  },
  {
    "text": "know complaints what the heck you talking about",
    "start": "1645480",
    "end": "1653360"
  },
  {
    "text": "yeah okay I'm gonna I'm ask one question I'm going to repeat it for the recording and then I'll answer it and then ask the",
    "start": "1656880",
    "end": "1662399"
  },
  {
    "text": "next next one okay",
    "start": "1662399",
    "end": "1666200"
  },
  {
    "text": "so the question if I understand correctly um the context is Uber and in most cases they are checking whether or",
    "start": "1682159",
    "end": "1689200"
  },
  {
    "text": "not a user is a member of a group in order to do authorization rather than checking individual users um let me",
    "start": "1689200",
    "end": "1695240"
  },
  {
    "text": "rewind our slides a lot",
    "start": "1695240",
    "end": "1700278"
  },
  {
    "text": "uh so so the rest of the question is you need to load your users into the open FDA model so if you look at this",
    "start": "1708320",
    "end": "1715679"
  },
  {
    "text": "authorization model here you do need to load the user memberships of",
    "start": "1715679",
    "end": "1721120"
  },
  {
    "text": "groups like this user is a member of you know let's say you've",
    "start": "1721120",
    "end": "1726519"
  },
  {
    "text": "got uh a group that's drivers and a group that's writers just to pick on you",
    "start": "1726519",
    "end": "1731760"
  },
  {
    "text": "know a super simple I I example idea you would need to Mark each user as being a",
    "start": "1731760",
    "end": "1737640"
  },
  {
    "text": "member of drivers or a member of writers or something like that um but once that happens there are a bunch of other",
    "start": "1737640",
    "end": "1744240"
  },
  {
    "text": "resources that you could potentially get access to based on the group membership",
    "start": "1744240",
    "end": "1749279"
  },
  {
    "text": "so if you look at how viewer down there uh in folder is defined as it's either a",
    "start": "1749279",
    "end": "1755320"
  },
  {
    "text": "user the user colon star means all users or is a member of a group so from that",
    "start": "1755320",
    "end": "1762279"
  },
  {
    "text": "you can build out hey you know here's the stack lock people um and that's a",
    "start": "1762279",
    "end": "1767799"
  },
  {
    "text": "group and uh so this group doesn't this definition of group only has member is a",
    "start": "1767799",
    "end": "1774159"
  },
  {
    "text": "user but you could also have member is a user or a group member so you could have",
    "start": "1774159",
    "end": "1780480"
  },
  {
    "text": "groups that are members of other groups so",
    "start": "1780480",
    "end": "1785440"
  },
  {
    "text": "this all now we got all the",
    "start": "1792360",
    "end": "1799000"
  },
  {
    "text": "so to to continue this and repeating your your bit back for everyone else in the recording um it sounds like you have",
    "start": "1803559",
    "end": "1810320"
  },
  {
    "text": "an existing service that when you go and fetch information about a user you get",
    "start": "1810320",
    "end": "1815679"
  },
  {
    "text": "back a list of all the groups that the user is in um and then how do you",
    "start": "1815679",
    "end": "1821399"
  },
  {
    "text": "present that information to open fga is is the question I'm hearing um this sounds very much like an off system that",
    "start": "1821399",
    "end": "1829480"
  },
  {
    "text": "I worked with many years ago that uh had a similar process of returning",
    "start": "1829480",
    "end": "1836240"
  },
  {
    "text": "your group memberships and actually hard had a hardcoded limit of you could only be in 5,000 groups um which sounds like",
    "start": "1836240",
    "end": "1843480"
  },
  {
    "text": "a lot and uh when it got exceeded the results were hilarious and someone had",
    "start": "1843480",
    "end": "1848720"
  },
  {
    "text": "to manually go in and figure out how to cut things down so that you were under 5,000 groups",
    "start": "1848720",
    "end": "1854760"
  },
  {
    "text": "um the the replacement of that system ended up moving much of the group membership out of the user identity",
    "start": "1854760",
    "end": "1861480"
  },
  {
    "text": "system and into an fga like system so instead of when you query the user",
    "start": "1861480",
    "end": "1868480"
  },
  {
    "text": "system finding out what groups and transitive groups a user is a member of that's where you got to the 5,000 it",
    "start": "1868480",
    "end": "1874039"
  },
  {
    "text": "well people weren't directly members of 5,000 groups but you were a member of you know Seattle stack loock production",
    "start": "1874039",
    "end": "1882120"
  },
  {
    "text": "on call and that was a member of production on call and production on call was a member of you know plat form",
    "start": "1882120",
    "end": "1888200"
  },
  {
    "text": "team and so forth and when you start expanding all of those things out people could hit 5,000 different groups that",
    "start": "1888200",
    "end": "1893960"
  },
  {
    "text": "they were a part of and um moving that into fga meant that you",
    "start": "1893960",
    "end": "1899120"
  },
  {
    "text": "didn't end up trying to pass all that group information through each application in order to figure out the",
    "start": "1899120",
    "end": "1904720"
  },
  {
    "text": "access so that would be how I would approach things would be to try to move your group membership out of",
    "start": "1904720",
    "end": "1911799"
  },
  {
    "text": "your authentication system and into your auy system um but obviously that's easy for",
    "start": "1911799",
    "end": "1919240"
  },
  {
    "text": "me to say up here on stage and um may be harder for you to do in practice I know",
    "start": "1919240",
    "end": "1924919"
  },
  {
    "text": "that at that previous employer it was a multi-year project so this is like a role base and this is a",
    "start": "1924919",
    "end": "1930639"
  },
  {
    "text": "relationship yes because ask",
    "start": "1930639",
    "end": "1939080"
  },
  {
    "text": "us",
    "start": "1939080",
    "end": "1942080"
  },
  {
    "text": "USP us manag a sep",
    "start": "1944399",
    "end": "1949840"
  },
  {
    "text": "so uh the the rejoinder is um",
    "start": "1955559",
    "end": "1962440"
  },
  {
    "text": "that they have a user management system and they'd like to have a good user experience for the user management",
    "start": "1962440",
    "end": "1967919"
  },
  {
    "text": "system and fga may not provide that so um let's see I think I have a slide that",
    "start": "1967919",
    "end": "1975000"
  },
  {
    "text": "helps a little bit here so so the fun and exciting thing here",
    "start": "1975000",
    "end": "1981600"
  },
  {
    "text": "that's a little bit hidden away is um open fga is never a front door that",
    "start": "1981600",
    "end": "1988919"
  },
  {
    "text": "users directly interact with it's something that developers interact with and if you have that user management",
    "start": "1988919",
    "end": "1994720"
  },
  {
    "text": "system it might be the thing that writes tupal of you this user is a member of",
    "start": "1994720",
    "end": "2000200"
  },
  {
    "text": "this group into open fga um I wouldn't expect end users to ever see open fga",
    "start": "2000200",
    "end": "2007559"
  },
  {
    "text": "like when we made the transition in minder from our handrolled code to open",
    "start": "2007559",
    "end": "2012880"
  },
  {
    "text": "fga um there was no user visible change except that we added a bunch of new",
    "start": "2012880",
    "end": "2018480"
  },
  {
    "text": "roles but that was that was our choice and that was not a requirement of switching over to open fga that was just",
    "start": "2018480",
    "end": "2025279"
  },
  {
    "text": "hey look we can add a new feature at the same time and we weren't real disciplined about one transition and then the other um",
    "start": "2025279",
    "end": "2034360"
  },
  {
    "text": "yeah I'm not on what is the difference compared to open",
    "start": "2034360",
    "end": "2039480"
  },
  {
    "text": "fga and spiceb uh the question is the difference between open fga and spice DB and uh",
    "start": "2039480",
    "end": "2046200"
  },
  {
    "text": "you're probably a better expert than I yeah I think it's it comes down to features and how so open fga and spicy V",
    "start": "2046200",
    "end": "2052599"
  },
  {
    "text": "are both based on one paper from Google called sansar and uh there's some choices that we made and they made uh",
    "start": "2052599",
    "end": "2059158"
  },
  {
    "text": "and that makes um the products difference so they're they're both related and yeah the zanar paper is",
    "start": "2059159",
    "end": "2066158"
  },
  {
    "text": "really where it all started and yeah they're both implementations different implementations of one",
    "start": "2066159",
    "end": "2073480"
  },
  {
    "text": "problem good um so I'm this sounds really interesting and I'm kind of",
    "start": "2074919",
    "end": "2080440"
  },
  {
    "text": "thinking about like as I'm thinking about it I'm like oh what if we took in the kubernetes project what if we tried",
    "start": "2080440",
    "end": "2086280"
  },
  {
    "text": "to reimplement our back on top open one of the things that there's a go ahead is",
    "start": "2086280",
    "end": "2092000"
  },
  {
    "text": "that I don't know it's already happen but uh um seems like part of that would be writing like you have pluggable storage",
    "start": "2092000",
    "end": "2099200"
  },
  {
    "text": "backends part of that writing a different storage backend is that something M morals can do or um we don't",
    "start": "2099200",
    "end": "2106040"
  },
  {
    "text": "have a pluggable system yet but you can write your own storage adapter yeah so",
    "start": "2106040",
    "end": "2111160"
  },
  {
    "text": "to repeat the question just for the people in the audience um uh thinking about this in the context of kubernetes",
    "start": "2111160",
    "end": "2117800"
  },
  {
    "text": "um would it be possible or feasible to use a relationship mod based model like",
    "start": "2117800",
    "end": "2125000"
  },
  {
    "text": "this uh to Define kubernetes authorization rather than the current arbac model and",
    "start": "2125000",
    "end": "2132119"
  },
  {
    "text": "um if so how difficult is it to plug in a new storage back end because open fga",
    "start": "2132119",
    "end": "2138880"
  },
  {
    "text": "currently supports postgress in my SQL and neither of those are what kubernetes",
    "start": "2138880",
    "end": "2144160"
  },
  {
    "text": "would probably want as their backing storage um so there was actually a talk at cucon EU where someone did build this",
    "start": "2144160",
    "end": "2152000"
  },
  {
    "text": "but they used either the MySQL or postgress I don't know which um back end but they did plug get in and get a",
    "start": "2152000",
    "end": "2159280"
  },
  {
    "text": "system that could interpret um you know permissions and apply them to a kuet",
    "start": "2159280",
    "end": "2165800"
  },
  {
    "text": "cluster to get you know stuff like qar back but also be able to say like hey",
    "start": "2165800",
    "end": "2171079"
  },
  {
    "text": "you have permissions on this deployment so you have permissions to delete the pods in this deployment but maybe not",
    "start": "2171079",
    "end": "2176760"
  },
  {
    "text": "delete pods in some other deployment or something like that because you've got these relationships that you can",
    "start": "2176760",
    "end": "2182560"
  },
  {
    "text": "understand um yeah it's",
    "start": "2182560",
    "end": "2188480"
  },
  {
    "text": "so to repeat that um you said it was feder Federated am with open fga is the",
    "start": "2195640",
    "end": "2201119"
  },
  {
    "text": "video Federated for kubernetes with Federated I am for kubernetes with open",
    "start": "2201119",
    "end": "2206960"
  },
  {
    "text": "fga it's on YouTube and there's an Associated source code repo it's pretty",
    "start": "2206960",
    "end": "2213960"
  },
  {
    "text": "neat so I'm coming at this from the security engineer side I'm not engineer",
    "start": "2214280",
    "end": "2220440"
  },
  {
    "text": "but I'm just I'm thinking about some of the problems I see people dealing with in some of the places where authorization logic get coupled into",
    "start": "2220440",
    "end": "2227040"
  },
  {
    "text": "business logic so you know I can I can really easily like translate this into my mind like I'm a user and requesting",
    "start": "2227040",
    "end": "2232720"
  },
  {
    "text": "one resource but when I start to look at you know okay I'm a user and the app is",
    "start": "2232720",
    "end": "2239079"
  },
  {
    "text": "pulling all of the resources that I have access to so it's more of a list operation than ail operation and then",
    "start": "2239079",
    "end": "2246319"
  },
  {
    "text": "within the I can I've seen some the source code so like I know they're they're pulling all the things the user has authorization to within the database",
    "start": "2246319",
    "end": "2253160"
  },
  {
    "text": "query and then that's joined with multiple tables p in those details does that authorization logic just still stay",
    "start": "2253160",
    "end": "2259440"
  },
  {
    "text": "in the database in the simple case or do you take that out and then back it with like check on individual items like the",
    "start": "2259440",
    "end": "2266800"
  },
  {
    "text": "so so the question is you know when this comes to the real world and some existing applications that for example",
    "start": "2266800",
    "end": "2273480"
  },
  {
    "text": "have you know things like list a bunch of my stuff",
    "start": "2273480",
    "end": "2278760"
  },
  {
    "text": "um and the way that's implemented today is calls into the database that include",
    "start": "2278760",
    "end": "2283880"
  },
  {
    "text": "links to other resources and so forth and sort of a set of joins to figure out what you have access to and so on um if",
    "start": "2283880",
    "end": "2290400"
  },
  {
    "text": "you're moving to an fga type world uh how does that translate and what would the code look like",
    "start": "2290400",
    "end": "2297520"
  },
  {
    "text": "and um my take at least would be that you actually want to take that out of the database and out of those SQL",
    "start": "2297520",
    "end": "2303920"
  },
  {
    "text": "queries what we're doing um for like get what projects do I have access to for",
    "start": "2303920",
    "end": "2309200"
  },
  {
    "text": "example is we're going to open fga first and we're saying hey list all of the objects that I have access to I believe",
    "start": "2309200",
    "end": "2315960"
  },
  {
    "text": "there's also a bulk check API yes so you can get a whole bunch of the resources",
    "start": "2315960",
    "end": "2321440"
  },
  {
    "text": "from the database that you think Mak sense and then pass them all to open fga in one call and get back a yes yes no no",
    "start": "2321440",
    "end": "2327560"
  },
  {
    "text": "no yes no um list which you can use to filter out yeah depending on which way makes more sense or you can or go the",
    "start": "2327560",
    "end": "2334680"
  },
  {
    "text": "other way and grab from the open or you can go from open fga and say hey what are all the documents I have access to",
    "start": "2334680",
    "end": "2341000"
  },
  {
    "text": "and then get back a paginated list and figure out how to deal with it you know if it was Doc if it was you know",
    "start": "2341000",
    "end": "2346440"
  },
  {
    "text": "organizations it would make probably more sense than if it were like specific individual documents in a Google Drive",
    "start": "2346440",
    "end": "2351800"
  },
  {
    "text": "case but yeah you can go you can go either way but I would I would aim to get all",
    "start": "2351800",
    "end": "2358720"
  },
  {
    "text": "of those joins and stuff out of the SQL database and the kind of squishy application code and get them behind the",
    "start": "2358720",
    "end": "2365040"
  },
  {
    "text": "check API there's two apis that we also offer aside from check one is called list",
    "start": "2365040",
    "end": "2370680"
  },
  {
    "text": "objects so give me the list of things that I have access to the other one is list users so what users have access to",
    "start": "2370680",
    "end": "2376760"
  },
  {
    "text": "this thing so you can use that for sure",
    "start": "2376760",
    "end": "2381880"
  }
]