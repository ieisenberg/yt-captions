[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "hi i'm francis i work on distributed",
    "start": "80",
    "end": "2240"
  },
  {
    "text": "tracing at shopify and i'm also",
    "start": "2240",
    "end": "4160"
  },
  {
    "text": "a maintainer of open telemetry ruby",
    "start": "4160",
    "end": "7359"
  },
  {
    "text": "in 2016 shopify built its own",
    "start": "7359",
    "end": "9440"
  },
  {
    "text": "distributed tracing pipeline",
    "start": "9440",
    "end": "11120"
  },
  {
    "text": "last year we started migrating our",
    "start": "11120",
    "end": "12799"
  },
  {
    "text": "entire tracing pipeline to open",
    "start": "12799",
    "end": "14920"
  },
  {
    "text": "telemetry this talk provides a",
    "start": "14920",
    "end": "16960"
  },
  {
    "text": "historical background for that move",
    "start": "16960",
    "end": "18560"
  },
  {
    "text": "why we chose to build upon open",
    "start": "18560",
    "end": "20080"
  },
  {
    "text": "telemetry our migration strategy",
    "start": "20080",
    "end": "21920"
  },
  {
    "text": "and what's gone right and wrong so far",
    "start": "21920",
    "end": "26000"
  },
  {
    "start": "26000",
    "end": "39000"
  },
  {
    "text": "let's start by taking a look at what we",
    "start": "27119",
    "end": "28720"
  },
  {
    "text": "built back in the dark ages before open",
    "start": "28720",
    "end": "30640"
  },
  {
    "text": "telemetry",
    "start": "30640",
    "end": "32000"
  },
  {
    "text": "i'm going to assume familiarity with",
    "start": "32000",
    "end": "33600"
  },
  {
    "text": "basic concepts of distributed tracing",
    "start": "33600",
    "end": "35440"
  },
  {
    "text": "like traces spans and tags",
    "start": "35440",
    "end": "39039"
  },
  {
    "start": "39000",
    "end": "89000"
  },
  {
    "text": "there's four major things we need to",
    "start": "40000",
    "end": "41440"
  },
  {
    "text": "implement distributed tracing",
    "start": "41440",
    "end": "44320"
  },
  {
    "text": "firstly we need to instrument our own",
    "start": "44320",
    "end": "46320"
  },
  {
    "text": "services",
    "start": "46320",
    "end": "47600"
  },
  {
    "text": "at shopify most of our services are",
    "start": "47600",
    "end": "49200"
  },
  {
    "text": "rails applications so we needed",
    "start": "49200",
    "end": "50800"
  },
  {
    "text": "instrumentation in ruby",
    "start": "50800",
    "end": "52960"
  },
  {
    "text": "secondly all the services need to agree",
    "start": "52960",
    "end": "54800"
  },
  {
    "text": "on how to propagate trace context",
    "start": "54800",
    "end": "56399"
  },
  {
    "text": "between themselves",
    "start": "56399",
    "end": "58079"
  },
  {
    "text": "if service a makes a request to service",
    "start": "58079",
    "end": "59840"
  },
  {
    "text": "b and we want to trace that request",
    "start": "59840",
    "end": "62000"
  },
  {
    "text": "a needs to pass along information about",
    "start": "62000",
    "end": "63760"
  },
  {
    "text": "the trace and the client span",
    "start": "63760",
    "end": "65600"
  },
  {
    "text": "so that b can create a child span that's",
    "start": "65600",
    "end": "67600"
  },
  {
    "text": "part of the same trace",
    "start": "67600",
    "end": "68799"
  },
  {
    "text": "and has the correct parent thirdly we",
    "start": "68799",
    "end": "72000"
  },
  {
    "text": "need a way to collect the spans that",
    "start": "72000",
    "end": "74080"
  },
  {
    "text": "services have recorded",
    "start": "74080",
    "end": "75439"
  },
  {
    "text": "and send them to a trace storage back",
    "start": "75439",
    "end": "77040"
  },
  {
    "text": "end",
    "start": "77040",
    "end": "78960"
  },
  {
    "text": "in some cases this is subsumed by the",
    "start": "78960",
    "end": "80880"
  },
  {
    "text": "back end itself",
    "start": "80880",
    "end": "82960"
  },
  {
    "text": "and finally we need that back end and",
    "start": "82960",
    "end": "84640"
  },
  {
    "text": "some mechanism to search and view traces",
    "start": "84640",
    "end": "88640"
  },
  {
    "start": "89000",
    "end": "128000"
  },
  {
    "text": "when we started there wasn't much",
    "start": "91200",
    "end": "92560"
  },
  {
    "text": "publicly available for ruby the zipking",
    "start": "92560",
    "end": "94640"
  },
  {
    "text": "gem had been abandoned and development",
    "start": "94640",
    "end": "96400"
  },
  {
    "text": "had shifted to open zipkin but it was",
    "start": "96400",
    "end": "98079"
  },
  {
    "text": "pretty early days",
    "start": "98079",
    "end": "99759"
  },
  {
    "text": "jaeger hadn't been open sourced yet and",
    "start": "99759",
    "end": "101680"
  },
  {
    "text": "it lacked instrumentation for ruby",
    "start": "101680",
    "end": "103200"
  },
  {
    "text": "anyway",
    "start": "103200",
    "end": "104560"
  },
  {
    "text": "open tracing didn't exist for ruby and",
    "start": "104560",
    "end": "106240"
  },
  {
    "text": "when it showed up later the api didn't",
    "start": "106240",
    "end": "108159"
  },
  {
    "text": "feel especially idiomatic to us",
    "start": "108159",
    "end": "110880"
  },
  {
    "text": "more generally instrumentation tended to",
    "start": "110880",
    "end": "112880"
  },
  {
    "text": "be tightly coupled with the storage back",
    "start": "112880",
    "end": "114640"
  },
  {
    "text": "end",
    "start": "114640",
    "end": "115680"
  },
  {
    "text": "while some commercial tracing back-ends",
    "start": "115680",
    "end": "117360"
  },
  {
    "text": "existed there wasn't a clear winner and",
    "start": "117360",
    "end": "119360"
  },
  {
    "text": "they all provided their own",
    "start": "119360",
    "end": "120560"
  },
  {
    "text": "instrumentation libraries",
    "start": "120560",
    "end": "122560"
  },
  {
    "text": "given this landscape we did the obvious",
    "start": "122560",
    "end": "124159"
  },
  {
    "text": "thing and wrote our own instrumentation",
    "start": "124159",
    "end": "126840"
  },
  {
    "text": "library",
    "start": "126840",
    "end": "129119"
  },
  {
    "start": "128000",
    "end": "143000"
  },
  {
    "text": "the story for context propagation was",
    "start": "129119",
    "end": "130720"
  },
  {
    "text": "similar the headers tended to be",
    "start": "130720",
    "end": "132480"
  },
  {
    "text": "specific to the instrumentation",
    "start": "132480",
    "end": "134640"
  },
  {
    "text": "b3 multi-header from zipkin and x cloud",
    "start": "134640",
    "end": "137520"
  },
  {
    "text": "trace context from stackdriver",
    "start": "137520",
    "end": "139040"
  },
  {
    "text": "were the two obvious choices",
    "start": "139040",
    "end": "143840"
  },
  {
    "start": "143000",
    "end": "166000"
  },
  {
    "text": "we didn't want to pay for a back end",
    "start": "143840",
    "end": "145120"
  },
  {
    "text": "while we were building out this",
    "start": "145120",
    "end": "146160"
  },
  {
    "text": "functionality",
    "start": "146160",
    "end": "147200"
  },
  {
    "text": "stackdriver trace and datadog trays were",
    "start": "147200",
    "end": "149040"
  },
  {
    "text": "free at the time with some limitations",
    "start": "149040",
    "end": "151120"
  },
  {
    "text": "zipkin was also a possibility but we",
    "start": "151120",
    "end": "153040"
  },
  {
    "text": "didn't want to get bogged down managing",
    "start": "153040",
    "end": "154480"
  },
  {
    "text": "infrastructure while we were building",
    "start": "154480",
    "end": "157040"
  },
  {
    "text": "stackdriver trace didn't require a",
    "start": "157040",
    "end": "158640"
  },
  {
    "text": "collector datadogtrace had an agent",
    "start": "158640",
    "end": "160959"
  },
  {
    "text": "which was not too painful to deploy as a",
    "start": "160959",
    "end": "162640"
  },
  {
    "text": "daemon set at the time",
    "start": "162640",
    "end": "165599"
  },
  {
    "start": "166000",
    "end": "206000"
  },
  {
    "text": "we ended up building the custom",
    "start": "167440",
    "end": "168720"
  },
  {
    "text": "instrumentation library inspired by open",
    "start": "168720",
    "end": "170879"
  },
  {
    "text": "tracing",
    "start": "170879",
    "end": "172959"
  },
  {
    "text": "it had auto instrumentation for all the",
    "start": "172959",
    "end": "174800"
  },
  {
    "text": "things we commonly use at shopify",
    "start": "174800",
    "end": "176560"
  },
  {
    "text": "elasticsearch redis memcache rails mysql",
    "start": "176560",
    "end": "179360"
  },
  {
    "text": "and so forth",
    "start": "179360",
    "end": "180800"
  },
  {
    "text": "we had just moved into gcp and it seemed",
    "start": "180800",
    "end": "182720"
  },
  {
    "text": "like a good idea to leverage",
    "start": "182720",
    "end": "184080"
  },
  {
    "text": "gclb's tracing support so we used x",
    "start": "184080",
    "end": "186879"
  },
  {
    "text": "cloudtrace context for propagation",
    "start": "186879",
    "end": "189440"
  },
  {
    "text": "we never really got much out of that and",
    "start": "189440",
    "end": "190959"
  },
  {
    "text": "we migrated our load balancers to nginx",
    "start": "190959",
    "end": "193200"
  },
  {
    "text": "but by then we were stuck with that",
    "start": "193200",
    "end": "194480"
  },
  {
    "text": "propagation format and we had no good",
    "start": "194480",
    "end": "196159"
  },
  {
    "text": "reason to change it",
    "start": "196159",
    "end": "198720"
  },
  {
    "text": "finally we hedged our bets for a while",
    "start": "198720",
    "end": "200239"
  },
  {
    "text": "with back-ends and had dual exporters to",
    "start": "200239",
    "end": "202159"
  },
  {
    "text": "datadog and stackdriver",
    "start": "202159",
    "end": "205440"
  },
  {
    "start": "206000",
    "end": "256000"
  },
  {
    "text": "this was a good mvp for tracing we spent",
    "start": "207280",
    "end": "209519"
  },
  {
    "text": "some time promoting it inside shopify",
    "start": "209519",
    "end": "211360"
  },
  {
    "text": "and smoothing out",
    "start": "211360",
    "end": "212159"
  },
  {
    "text": "the on-ramp for services to add tracing",
    "start": "212159",
    "end": "215200"
  },
  {
    "text": "in most cases it was as simple as seeing",
    "start": "215200",
    "end": "217280"
  },
  {
    "text": "a warning in the service catalog",
    "start": "217280",
    "end": "218799"
  },
  {
    "text": "clicking a button to autofix which",
    "start": "218799",
    "end": "220239"
  },
  {
    "text": "opened a pr to add the dependency and an",
    "start": "220239",
    "end": "222799"
  },
  {
    "text": "initializer with a whole lot of friendly",
    "start": "222799",
    "end": "225040"
  },
  {
    "text": "advice and information",
    "start": "225040",
    "end": "226720"
  },
  {
    "text": "then merging that pr and deploying",
    "start": "226720",
    "end": "230400"
  },
  {
    "text": "we soon stopped riding two horses and",
    "start": "230400",
    "end": "232319"
  },
  {
    "text": "committed to stackdriver",
    "start": "232319",
    "end": "233920"
  },
  {
    "text": "at that point the architectural pressure",
    "start": "233920",
    "end": "235599"
  },
  {
    "text": "came from a mismatch between backend api",
    "start": "235599",
    "end": "237760"
  },
  {
    "text": "rate limits and the massive horizontal",
    "start": "237760",
    "end": "239519"
  },
  {
    "text": "scale of our applications",
    "start": "239519",
    "end": "242000"
  },
  {
    "text": "google bumped the limits for us well",
    "start": "242000",
    "end": "243360"
  },
  {
    "text": "past what they publicly advertised but",
    "start": "243360",
    "end": "245200"
  },
  {
    "text": "it wasn't enough to keep up with our",
    "start": "245200",
    "end": "246560"
  },
  {
    "text": "growth",
    "start": "246560",
    "end": "247519"
  },
  {
    "text": "we had to bite the bullet and build a",
    "start": "247519",
    "end": "249040"
  },
  {
    "text": "collection pipeline to buffer spans",
    "start": "249040",
    "end": "250879"
  },
  {
    "text": "batch them",
    "start": "250879",
    "end": "251599"
  },
  {
    "text": "and send them at a cadence that",
    "start": "251599",
    "end": "252879"
  },
  {
    "text": "respected the backend rate limits",
    "start": "252879",
    "end": "256480"
  },
  {
    "start": "256000",
    "end": "283000"
  },
  {
    "text": "our solution was a trace proxy running",
    "start": "256799",
    "end": "259040"
  },
  {
    "text": "as a daemon set that simply dumped all",
    "start": "259040",
    "end": "261199"
  },
  {
    "text": "incoming spans into pub sub we then had",
    "start": "261199",
    "end": "264320"
  },
  {
    "text": "horizontally scalable forwarders that",
    "start": "264320",
    "end": "266080"
  },
  {
    "text": "translated the spans into stackdriver's",
    "start": "266080",
    "end": "268000"
  },
  {
    "text": "format",
    "start": "268000",
    "end": "269440"
  },
  {
    "text": "we took advantage of this architectural",
    "start": "269440",
    "end": "271120"
  },
  {
    "text": "change to define our own format",
    "start": "271120",
    "end": "272880"
  },
  {
    "text": "which was essentially our in-memory",
    "start": "272880",
    "end": "274639"
  },
  {
    "text": "format described as protobuf",
    "start": "274639",
    "end": "276479"
  },
  {
    "text": "nothing particularly innovative but it",
    "start": "276479",
    "end": "278240"
  },
  {
    "text": "gave us independence from the back end",
    "start": "278240",
    "end": "279840"
  },
  {
    "text": "fairly early on",
    "start": "279840",
    "end": "283680"
  },
  {
    "start": "283000",
    "end": "331000"
  },
  {
    "text": "this architecture had a couple of",
    "start": "283680",
    "end": "285360"
  },
  {
    "text": "unexpected benefits",
    "start": "285360",
    "end": "287199"
  },
  {
    "text": "firstly we had a bottleneck that allowed",
    "start": "287199",
    "end": "289680"
  },
  {
    "text": "us to massage spans in different ways",
    "start": "289680",
    "end": "291520"
  },
  {
    "text": "like redacting pii",
    "start": "291520",
    "end": "292880"
  },
  {
    "text": "cleaning up span names and remapping tag",
    "start": "292880",
    "end": "295360"
  },
  {
    "text": "keys to things that the backend",
    "start": "295360",
    "end": "296639"
  },
  {
    "text": "understood and treated specially",
    "start": "296639",
    "end": "298880"
  },
  {
    "text": "it also let us easily migrate between",
    "start": "298880",
    "end": "300880"
  },
  {
    "text": "versions of the backend api without",
    "start": "300880",
    "end": "302720"
  },
  {
    "text": "interfering with the services that were",
    "start": "302720",
    "end": "304080"
  },
  {
    "text": "using our instrumentation",
    "start": "304080",
    "end": "307199"
  },
  {
    "text": "secondly we could experiment with",
    "start": "307199",
    "end": "309039"
  },
  {
    "text": "different back ends an experiment we did",
    "start": "309039",
    "end": "311840"
  },
  {
    "text": "by building additional translators and",
    "start": "311840",
    "end": "313759"
  },
  {
    "text": "adding members different subscribers we",
    "start": "313759",
    "end": "315440"
  },
  {
    "text": "could easily bake off different back",
    "start": "315440",
    "end": "316800"
  },
  {
    "text": "ends with the same data",
    "start": "316800",
    "end": "318560"
  },
  {
    "text": "i think we had five back ends running",
    "start": "318560",
    "end": "320080"
  },
  {
    "text": "simultaneously at one point",
    "start": "320080",
    "end": "321680"
  },
  {
    "text": "we tried zipkin jaeger new relics",
    "start": "321680",
    "end": "324080"
  },
  {
    "text": "tracing service signalfx",
    "start": "324080",
    "end": "325919"
  },
  {
    "text": "lightstep and omniscion alongside",
    "start": "325919",
    "end": "327680"
  },
  {
    "text": "stackdriver",
    "start": "327680",
    "end": "330479"
  },
  {
    "text": "so this was all pretty cool it gave us a",
    "start": "332639",
    "end": "334400"
  },
  {
    "text": "ton of flexibility and if you squint it",
    "start": "334400",
    "end": "336000"
  },
  {
    "text": "doesn't look a whole lot different from",
    "start": "336000",
    "end": "337280"
  },
  {
    "text": "open telemetry's architecture or",
    "start": "337280",
    "end": "338800"
  },
  {
    "text": "jaeger's architecture",
    "start": "338800",
    "end": "340800"
  },
  {
    "text": "the one thing that should jump out at",
    "start": "340800",
    "end": "342560"
  },
  {
    "text": "you right away is that",
    "start": "342560",
    "end": "344240"
  },
  {
    "text": "it is all custom we had to maintain our",
    "start": "344240",
    "end": "346960"
  },
  {
    "text": "own instrumentation",
    "start": "346960",
    "end": "348000"
  },
  {
    "text": "our own agent our own translators and we",
    "start": "348000",
    "end": "350560"
  },
  {
    "text": "had to manage and scale this thing as",
    "start": "350560",
    "end": "352080"
  },
  {
    "text": "our platform",
    "start": "352080",
    "end": "352880"
  },
  {
    "text": "and company grew",
    "start": "352880",
    "end": "355680"
  },
  {
    "start": "356000",
    "end": "408000"
  },
  {
    "text": "and because this was all custom as",
    "start": "356479",
    "end": "358479"
  },
  {
    "text": "third-party software like core dns and",
    "start": "358479",
    "end": "360319"
  },
  {
    "text": "nginx added tracing",
    "start": "360319",
    "end": "362080"
  },
  {
    "text": "we couldn't turn on tracing and just",
    "start": "362080",
    "end": "363600"
  },
  {
    "text": "have it work and because this was all",
    "start": "363600",
    "end": "365919"
  },
  {
    "text": "custom we couldn't support services",
    "start": "365919",
    "end": "367600"
  },
  {
    "text": "written in different languages",
    "start": "367600",
    "end": "369280"
  },
  {
    "text": "although we're known as a ruby shop we",
    "start": "369280",
    "end": "371600"
  },
  {
    "text": "have quite a bit of go some rust some",
    "start": "371600",
    "end": "373520"
  },
  {
    "text": "nodes some python some java",
    "start": "373520",
    "end": "375600"
  },
  {
    "text": "we built a go tracing package early on",
    "start": "375600",
    "end": "377360"
  },
  {
    "text": "that was compatible with open tracing",
    "start": "377360",
    "end": "379360"
  },
  {
    "text": "but that was it for cross language",
    "start": "379360",
    "end": "380720"
  },
  {
    "text": "support and every time we wanted to try",
    "start": "380720",
    "end": "383600"
  },
  {
    "text": "out a new backend we had to write custom",
    "start": "383600",
    "end": "385440"
  },
  {
    "text": "translators",
    "start": "385440",
    "end": "386319"
  },
  {
    "text": "and learn about new and interesting",
    "start": "386319",
    "end": "387759"
  },
  {
    "text": "limitations as we often directed a fire",
    "start": "387759",
    "end": "389840"
  },
  {
    "text": "hose of spans at a pool of proprietary",
    "start": "389840",
    "end": "391680"
  },
  {
    "text": "collectors or satellites",
    "start": "391680",
    "end": "393440"
  },
  {
    "text": "there was a lot of unnecessary",
    "start": "393440",
    "end": "394880"
  },
  {
    "text": "redundancy and a lot of impedance",
    "start": "394880",
    "end": "396560"
  },
  {
    "text": "mismatch",
    "start": "396560",
    "end": "397840"
  },
  {
    "text": "and really when you think about it all",
    "start": "397840",
    "end": "399360"
  },
  {
    "text": "this custom instrumentation and",
    "start": "399360",
    "end": "400639"
  },
  {
    "text": "translation that we built",
    "start": "400639",
    "end": "402160"
  },
  {
    "text": "and all these vendors also built are",
    "start": "402160",
    "end": "404400"
  },
  {
    "text": "really just commodities",
    "start": "404400",
    "end": "409120"
  },
  {
    "start": "408000",
    "end": "448000"
  },
  {
    "text": "we weren't the only ones to realize this",
    "start": "409120",
    "end": "411440"
  },
  {
    "text": "where open tracing spectrum api and",
    "start": "411440",
    "end": "413360"
  },
  {
    "text": "semantic conventions",
    "start": "413360",
    "end": "414639"
  },
  {
    "text": "google built a set of batteries included",
    "start": "414639",
    "end": "416720"
  },
  {
    "text": "instrumentation libraries for a bunch of",
    "start": "416720",
    "end": "418240"
  },
  {
    "text": "languages with plugable exporters",
    "start": "418240",
    "end": "420240"
  },
  {
    "text": "called census they open-sourced this as",
    "start": "420240",
    "end": "422960"
  },
  {
    "text": "open census and some other folks got on",
    "start": "422960",
    "end": "424800"
  },
  {
    "text": "board including omniscient who built a",
    "start": "424800",
    "end": "426560"
  },
  {
    "text": "collector for the project",
    "start": "426560",
    "end": "428400"
  },
  {
    "text": "this was just what we needed ruby isn't",
    "start": "428400",
    "end": "430880"
  },
  {
    "text": "exactly google's thing so that library",
    "start": "430880",
    "end": "432560"
  },
  {
    "text": "was in rough shape",
    "start": "432560",
    "end": "433680"
  },
  {
    "text": "but the javascript instrumentation",
    "start": "433680",
    "end": "435280"
  },
  {
    "text": "filled a gap for us and the go",
    "start": "435280",
    "end": "436560"
  },
  {
    "text": "instrumentation was much better than",
    "start": "436560",
    "end": "438000"
  },
  {
    "text": "what we'd built",
    "start": "438000",
    "end": "439759"
  },
  {
    "text": "we started with go and built a simple",
    "start": "439759",
    "end": "441840"
  },
  {
    "text": "exporter and context propagation to make",
    "start": "441840",
    "end": "443680"
  },
  {
    "text": "it work in our environment",
    "start": "443680",
    "end": "445120"
  },
  {
    "text": "we then turned our attention to the",
    "start": "445120",
    "end": "448479"
  },
  {
    "start": "448000",
    "end": "461000"
  },
  {
    "text": "collector",
    "start": "448840",
    "end": "450800"
  },
  {
    "text": "in all honesty we first experimented",
    "start": "450800",
    "end": "452639"
  },
  {
    "text": "with the collector in the context of",
    "start": "452639",
    "end": "454000"
  },
  {
    "text": "trying out omniscient as a back end",
    "start": "454000",
    "end": "456000"
  },
  {
    "text": "so we slotted it in as just another",
    "start": "456000",
    "end": "457840"
  },
  {
    "text": "forwarder at the end of our pipeline",
    "start": "457840",
    "end": "461440"
  },
  {
    "text": "as we gained confidence however it",
    "start": "462960",
    "end": "464560"
  },
  {
    "text": "became clear that the collector belonged",
    "start": "464560",
    "end": "466160"
  },
  {
    "text": "at the heart of our pipeline",
    "start": "466160",
    "end": "468160"
  },
  {
    "text": "its ability to receive trace data in",
    "start": "468160",
    "end": "470000"
  },
  {
    "text": "different formats over different",
    "start": "470000",
    "end": "471199"
  },
  {
    "text": "protocols solved our first problem",
    "start": "471199",
    "end": "473199"
  },
  {
    "text": "receiving traces from third-party",
    "start": "473199",
    "end": "474800"
  },
  {
    "text": "applications",
    "start": "474800",
    "end": "476319"
  },
  {
    "text": "we still had to figure out context",
    "start": "476319",
    "end": "477680"
  },
  {
    "text": "propagation but it was a big step",
    "start": "477680",
    "end": "479120"
  },
  {
    "text": "forward",
    "start": "479120",
    "end": "480560"
  },
  {
    "text": "first though we have to migrate our",
    "start": "480560",
    "end": "481919"
  },
  {
    "text": "pipeline we did this in a couple of",
    "start": "481919",
    "end": "484240"
  },
  {
    "text": "steps",
    "start": "484240",
    "end": "484720"
  },
  {
    "text": "we started by building a receiver for",
    "start": "484720",
    "end": "486319"
  },
  {
    "text": "our custom trace format",
    "start": "486319",
    "end": "488080"
  },
  {
    "text": "we already had most of the code for this",
    "start": "488080",
    "end": "489680"
  },
  {
    "text": "in our trace proxy conveniently written",
    "start": "489680",
    "end": "491520"
  },
  {
    "text": "in go",
    "start": "491520",
    "end": "492240"
  },
  {
    "text": "so we just had to port that add some",
    "start": "492240",
    "end": "493840"
  },
  {
    "text": "configuration and translate to the",
    "start": "493840",
    "end": "495759"
  },
  {
    "text": "collectors in memory format",
    "start": "495759",
    "end": "497759"
  },
  {
    "text": "we deployed the collectors in each",
    "start": "497759",
    "end": "499360"
  },
  {
    "text": "cluster",
    "start": "499360",
    "end": "501840"
  },
  {
    "text": "we then needed to shift traffic to the",
    "start": "502240",
    "end": "503919"
  },
  {
    "text": "new pipeline",
    "start": "503919",
    "end": "505759"
  },
  {
    "text": "we set up two export pipelines in the",
    "start": "505759",
    "end": "507680"
  },
  {
    "text": "collectors one to stackdriver and one to",
    "start": "507680",
    "end": "509680"
  },
  {
    "text": "omniscient",
    "start": "509680",
    "end": "510800"
  },
  {
    "text": "we added a reverse proxy to the trace",
    "start": "510800",
    "end": "512880"
  },
  {
    "text": "proxy that simply forwarded requests to",
    "start": "512880",
    "end": "515039"
  },
  {
    "text": "the upstream collectors",
    "start": "515039",
    "end": "516640"
  },
  {
    "text": "and we added a mechanism in the trace",
    "start": "516640",
    "end": "518159"
  },
  {
    "text": "proxy that let us dynamically control",
    "start": "518159",
    "end": "519919"
  },
  {
    "text": "the traffic slid",
    "start": "519919",
    "end": "520959"
  },
  {
    "text": "by adjusting the config map that was",
    "start": "520959",
    "end": "522560"
  },
  {
    "text": "mounted as a file",
    "start": "522560",
    "end": "524000"
  },
  {
    "text": "config trace proxy proxy percentage",
    "start": "524000",
    "end": "528160"
  },
  {
    "text": "after shifting the traffic we ran in",
    "start": "528959",
    "end": "531120"
  },
  {
    "text": "this shape for a long",
    "start": "531120",
    "end": "533760"
  },
  {
    "text": "with the proxy percent set to 100 and",
    "start": "533760",
    "end": "535920"
  },
  {
    "text": "slowly removed our safety nets deleting",
    "start": "535920",
    "end": "538000"
  },
  {
    "text": "all the custom forwarders removing the",
    "start": "538000",
    "end": "539600"
  },
  {
    "text": "old pub sub topic and subscribers",
    "start": "539600",
    "end": "543279"
  },
  {
    "text": "at this point we solved our second",
    "start": "543440",
    "end": "544800"
  },
  {
    "text": "problem instrumentation in different",
    "start": "544800",
    "end": "546399"
  },
  {
    "text": "languages",
    "start": "546399",
    "end": "547519"
  },
  {
    "text": "our elasticsearch team built a tracing",
    "start": "547519",
    "end": "549519"
  },
  {
    "text": "plugin using the opencensus java",
    "start": "549519",
    "end": "551200"
  },
  {
    "text": "instrumentation and a graphql proxy team",
    "start": "551200",
    "end": "553600"
  },
  {
    "text": "added tracing using the opencensus",
    "start": "553600",
    "end": "555839"
  },
  {
    "text": "javascript",
    "start": "555839",
    "end": "556640"
  },
  {
    "text": "instrumentation in both cases we only",
    "start": "556640",
    "end": "559760"
  },
  {
    "text": "needed to implement context propagation",
    "start": "559760",
    "end": "562800"
  },
  {
    "text": "and the collector solved our third",
    "start": "562800",
    "end": "564160"
  },
  {
    "text": "problem maintaining custom translators",
    "start": "564160",
    "end": "566240"
  },
  {
    "text": "for every backend",
    "start": "566240",
    "end": "567839"
  },
  {
    "text": "we only needed to implement a single",
    "start": "567839",
    "end": "569600"
  },
  {
    "text": "translator from our custom format to the",
    "start": "569600",
    "end": "571519"
  },
  {
    "text": "collectors in memory format ultimately",
    "start": "571519",
    "end": "576399"
  },
  {
    "start": "574000",
    "end": "591000"
  },
  {
    "text": "we wanted to replace that custom format",
    "start": "576399",
    "end": "578240"
  },
  {
    "text": "as well",
    "start": "578240",
    "end": "578800"
  },
  {
    "text": "and our custom instrumentation in ruby",
    "start": "578800",
    "end": "580959"
  },
  {
    "text": "so we decided to take on the challenge",
    "start": "580959",
    "end": "582640"
  },
  {
    "text": "of maintaining open sensors ruby",
    "start": "582640",
    "end": "585120"
  },
  {
    "text": "a plan was to polish the existing code",
    "start": "585120",
    "end": "587040"
  },
  {
    "text": "and then port all our auto",
    "start": "587040",
    "end": "588839"
  },
  {
    "text": "instrumentation",
    "start": "588839",
    "end": "591839"
  },
  {
    "text": "right around the time we decided to take",
    "start": "592720",
    "end": "594320"
  },
  {
    "text": "over maintenance of the open census ruby",
    "start": "594320",
    "end": "596160"
  },
  {
    "text": "project",
    "start": "596160",
    "end": "597600"
  },
  {
    "text": "the open sensors and open tracing folks",
    "start": "597600",
    "end": "599440"
  },
  {
    "text": "got together and realized",
    "start": "599440",
    "end": "600959"
  },
  {
    "text": "that there was a lot of overlap between",
    "start": "600959",
    "end": "602800"
  },
  {
    "text": "the projects and they decided to join",
    "start": "602800",
    "end": "604560"
  },
  {
    "text": "forces to build a third standard",
    "start": "604560",
    "end": "606320"
  },
  {
    "text": "called open telemetry so we got on board",
    "start": "606320",
    "end": "609760"
  },
  {
    "start": "608000",
    "end": "619000"
  },
  {
    "text": "and started the open telemetry ruby",
    "start": "609760",
    "end": "611600"
  },
  {
    "text": "project",
    "start": "611600",
    "end": "612880"
  },
  {
    "text": "spoiler alert after a year of",
    "start": "612880",
    "end": "614399"
  },
  {
    "text": "development we're almost ready to use it",
    "start": "614399",
    "end": "616480"
  },
  {
    "text": "in production",
    "start": "616480",
    "end": "619839"
  },
  {
    "start": "619000",
    "end": "655000"
  },
  {
    "text": "now we're into the meat of our journey",
    "start": "621839",
    "end": "623200"
  },
  {
    "text": "to open telemetry halfway into our",
    "start": "623200",
    "end": "625600"
  },
  {
    "text": "migration to open census we had to make",
    "start": "625600",
    "end": "627279"
  },
  {
    "text": "this shift",
    "start": "627279",
    "end": "628079"
  },
  {
    "text": "it was awkward to continue with the",
    "start": "628079",
    "end": "629440"
  },
  {
    "text": "opencensus collector because it had been",
    "start": "629440",
    "end": "631519"
  },
  {
    "text": "placed into maintenance mode as code was",
    "start": "631519",
    "end": "633360"
  },
  {
    "text": "copied over to the open telemetry",
    "start": "633360",
    "end": "635040"
  },
  {
    "text": "project",
    "start": "635040",
    "end": "635760"
  },
  {
    "text": "and all development effort quickly",
    "start": "635760",
    "end": "637279"
  },
  {
    "text": "shifted there",
    "start": "637279",
    "end": "638800"
  },
  {
    "text": "also by this time we had our own fork of",
    "start": "638800",
    "end": "641279"
  },
  {
    "text": "omniscience fork of the upstream repo",
    "start": "641279",
    "end": "643200"
  },
  {
    "text": "and maintaining all this was a huge",
    "start": "643200",
    "end": "644839"
  },
  {
    "text": "effort so while",
    "start": "644839",
    "end": "646480"
  },
  {
    "text": "half our team started building open open",
    "start": "646480",
    "end": "648720"
  },
  {
    "text": "telemetry ruby",
    "start": "648720",
    "end": "649760"
  },
  {
    "text": "the other half started porting our",
    "start": "649760",
    "end": "651360"
  },
  {
    "text": "components over to the open telemetry",
    "start": "651360",
    "end": "653200"
  },
  {
    "text": "collector",
    "start": "653200",
    "end": "655680"
  },
  {
    "start": "655000",
    "end": "696000"
  },
  {
    "text": "we deployed the collector into the same",
    "start": "656640",
    "end": "658399"
  },
  {
    "text": "name space and then pointed the",
    "start": "658399",
    "end": "660000"
  },
  {
    "text": "kubernetes service of the open telemetry",
    "start": "660000",
    "end": "661839"
  },
  {
    "text": "collector instead of the open census",
    "start": "661839",
    "end": "663360"
  },
  {
    "text": "collector",
    "start": "663360",
    "end": "664480"
  },
  {
    "text": "obviously we did this starting with less",
    "start": "664480",
    "end": "666160"
  },
  {
    "text": "important clusters gave it some soak",
    "start": "666160",
    "end": "667760"
  },
  {
    "text": "time and then gradually migrated more",
    "start": "667760",
    "end": "669600"
  },
  {
    "text": "to more and more important clusters",
    "start": "669600",
    "end": "672720"
  },
  {
    "text": "i'm glossing over the stress and anxiety",
    "start": "672720",
    "end": "674800"
  },
  {
    "text": "implicit in this process but it worked",
    "start": "674800",
    "end": "676399"
  },
  {
    "text": "well",
    "start": "676399",
    "end": "677680"
  },
  {
    "text": "the downside is that we have an endpoint",
    "start": "677680",
    "end": "679680"
  },
  {
    "text": "called oc collector or open census",
    "start": "679680",
    "end": "681680"
  },
  {
    "text": "collector production that's actually",
    "start": "681680",
    "end": "683120"
  },
  {
    "text": "backed by the open telemetry collector",
    "start": "683120",
    "end": "685040"
  },
  {
    "text": "but it felt like an acceptable trade-off",
    "start": "685040",
    "end": "689839"
  },
  {
    "text": "the next challenge was to replace our",
    "start": "689920",
    "end": "691680"
  },
  {
    "text": "trace proxy daemon set with the open",
    "start": "691680",
    "end": "693360"
  },
  {
    "text": "telemetry agent",
    "start": "693360",
    "end": "696320"
  },
  {
    "start": "696000",
    "end": "726000"
  },
  {
    "text": "the agent is really just a collector",
    "start": "697519",
    "end": "699120"
  },
  {
    "text": "with a smaller footprint and a slim down",
    "start": "699120",
    "end": "700720"
  },
  {
    "text": "pipeline",
    "start": "700720",
    "end": "701519"
  },
  {
    "text": "if you appear closely you'll see an",
    "start": "701519",
    "end": "702880"
  },
  {
    "text": "additional processor we built here",
    "start": "702880",
    "end": "704320"
  },
  {
    "text": "called resource labeler",
    "start": "704320",
    "end": "705920"
  },
  {
    "text": "this grabs metadata about the node and",
    "start": "705920",
    "end": "707920"
  },
  {
    "text": "its environment from a couple of",
    "start": "707920",
    "end": "709120"
  },
  {
    "text": "different places",
    "start": "709120",
    "end": "710079"
  },
  {
    "text": "and augments spans with that information",
    "start": "710079",
    "end": "713360"
  },
  {
    "text": "things like the node name the cluster",
    "start": "713360",
    "end": "715040"
  },
  {
    "text": "name gke version",
    "start": "715040",
    "end": "716480"
  },
  {
    "text": "availability zone something like this",
    "start": "716480",
    "end": "719040"
  },
  {
    "text": "now exists in the upstream project and",
    "start": "719040",
    "end": "720800"
  },
  {
    "text": "we should probably move to that at some",
    "start": "720800",
    "end": "722160"
  },
  {
    "text": "point",
    "start": "722160",
    "end": "722560"
  },
  {
    "text": "and delete another piece of custom code",
    "start": "722560",
    "end": "726320"
  },
  {
    "start": "726000",
    "end": "758000"
  },
  {
    "text": "in the meantime a team that owned the",
    "start": "727519",
    "end": "729760"
  },
  {
    "text": "shopify scripps",
    "start": "729760",
    "end": "731040"
  },
  {
    "text": "runtime engine wanted to add tracing the",
    "start": "731040",
    "end": "733600"
  },
  {
    "text": "runtime engine was written in rust and",
    "start": "733600",
    "end": "735360"
  },
  {
    "text": "coincidentally the open telemetry russ",
    "start": "735360",
    "end": "737440"
  },
  {
    "text": "sig had just released an alpha of the",
    "start": "737440",
    "end": "739040"
  },
  {
    "text": "sdk in rust",
    "start": "739040",
    "end": "740639"
  },
  {
    "text": "so with minimal handholding for us and",
    "start": "740639",
    "end": "742560"
  },
  {
    "text": "an awesome can-do attitude",
    "start": "742560",
    "end": "744000"
  },
  {
    "text": "from them we shopify a hardcore rail",
    "start": "744000",
    "end": "747360"
  },
  {
    "text": "shop",
    "start": "747360",
    "end": "747839"
  },
  {
    "text": "shipped open telemetry to production for",
    "start": "747839",
    "end": "749600"
  },
  {
    "text": "the first time",
    "start": "749600",
    "end": "751040"
  },
  {
    "text": "in rust this was actually awesome and a",
    "start": "751040",
    "end": "754480"
  },
  {
    "text": "great validation of open telemetry's",
    "start": "754480",
    "end": "756839"
  },
  {
    "text": "value",
    "start": "756839",
    "end": "759600"
  },
  {
    "start": "758000",
    "end": "781000"
  },
  {
    "text": "the most recent thing we've built is an",
    "start": "759600",
    "end": "762079"
  },
  {
    "text": "otlp",
    "start": "762079",
    "end": "762880"
  },
  {
    "text": "exporter from our customer",
    "start": "762880",
    "end": "763920"
  },
  {
    "text": "instrumentation library otlp is open",
    "start": "763920",
    "end": "766639"
  },
  {
    "text": "telemetry's native protocol for",
    "start": "766639",
    "end": "768320"
  },
  {
    "text": "telemetry data",
    "start": "768320",
    "end": "769839"
  },
  {
    "text": "in large part it's a refinement of the",
    "start": "769839",
    "end": "771600"
  },
  {
    "text": "open census protocol",
    "start": "771600",
    "end": "772959"
  },
  {
    "text": "but it's a huge step forward in",
    "start": "772959",
    "end": "774560"
  },
  {
    "text": "computational efficiency",
    "start": "774560",
    "end": "776160"
  },
  {
    "text": "and it is also a lot friendlier to load",
    "start": "776160",
    "end": "778000"
  },
  {
    "text": "balances",
    "start": "778000",
    "end": "780560"
  },
  {
    "start": "781000",
    "end": "911000"
  },
  {
    "text": "our journey hasn't been all sunshine and",
    "start": "782720",
    "end": "784959"
  },
  {
    "text": "roses",
    "start": "784959",
    "end": "786480"
  },
  {
    "text": "previously i glossed over the stress and",
    "start": "786480",
    "end": "788560"
  },
  {
    "text": "anxiety of switching from the open",
    "start": "788560",
    "end": "790079"
  },
  {
    "text": "senses collector to the open telemetry",
    "start": "790079",
    "end": "791839"
  },
  {
    "text": "collector",
    "start": "791839",
    "end": "792959"
  },
  {
    "text": "much of that was unwarranted and the",
    "start": "792959",
    "end": "794480"
  },
  {
    "text": "transition was actually pretty smooth",
    "start": "794480",
    "end": "796320"
  },
  {
    "text": "the agent has given us far more grief",
    "start": "796320",
    "end": "798000"
  },
  {
    "text": "though we wanted the agent to listen on",
    "start": "798000",
    "end": "800399"
  },
  {
    "text": "the same port as a trace proxy for our",
    "start": "800399",
    "end": "801920"
  },
  {
    "text": "custom protocol so the initial",
    "start": "801920",
    "end": "803519"
  },
  {
    "text": "deployment was nerve-racking",
    "start": "803519",
    "end": "805519"
  },
  {
    "text": "we relied on custom we relied on client",
    "start": "805519",
    "end": "808240"
  },
  {
    "text": "applications buffering spans and",
    "start": "808240",
    "end": "809760"
  },
  {
    "text": "reconnecting",
    "start": "809760",
    "end": "810880"
  },
  {
    "text": "to cope with brief outages on each node",
    "start": "810880",
    "end": "813360"
  },
  {
    "text": "as we deployed the agent and removed the",
    "start": "813360",
    "end": "815519"
  },
  {
    "text": "trace proxy",
    "start": "815519",
    "end": "817360"
  },
  {
    "text": "demon set deploys in our environment",
    "start": "817360",
    "end": "819040"
  },
  {
    "text": "terrible for everyone and rolling out a",
    "start": "819040",
    "end": "820959"
  },
  {
    "text": "change across all clusters often takes a",
    "start": "820959",
    "end": "822720"
  },
  {
    "text": "day and a lot of hair loss",
    "start": "822720",
    "end": "824560"
  },
  {
    "text": "covert hair helps me hide some of that",
    "start": "824560",
    "end": "828639"
  },
  {
    "text": "while the trace proxy used well under",
    "start": "828639",
    "end": "830480"
  },
  {
    "text": "128 mega ram",
    "start": "830480",
    "end": "831920"
  },
  {
    "text": "we needed 2 gig for the agent given how",
    "start": "831920",
    "end": "834720"
  },
  {
    "text": "tightly we pack our nodes",
    "start": "834720",
    "end": "836399"
  },
  {
    "text": "we couldn't afford to give it more cpu",
    "start": "836399",
    "end": "838000"
  },
  {
    "text": "than the trace proxy had but by golly it",
    "start": "838000",
    "end": "840160"
  },
  {
    "text": "needs more",
    "start": "840160",
    "end": "841440"
  },
  {
    "text": "cpu throttling in the agent has been a",
    "start": "841440",
    "end": "843279"
  },
  {
    "text": "major pain point the crux of the problem",
    "start": "843279",
    "end": "845440"
  },
  {
    "text": "is that it needs to deserialize from the",
    "start": "845440",
    "end": "847279"
  },
  {
    "text": "receiver's format",
    "start": "847279",
    "end": "848480"
  },
  {
    "text": "copy and translate to the in-memory",
    "start": "848480",
    "end": "850079"
  },
  {
    "text": "format and then copy and translate to",
    "start": "850079",
    "end": "851920"
  },
  {
    "text": "the exporters format before",
    "start": "851920",
    "end": "853199"
  },
  {
    "text": "re-serializing",
    "start": "853199",
    "end": "854959"
  },
  {
    "text": "this is improved but only if all parts",
    "start": "854959",
    "end": "857279"
  },
  {
    "text": "of the pipeline are otlp",
    "start": "857279",
    "end": "860160"
  },
  {
    "text": "those improvements come at the cost of",
    "start": "860160",
    "end": "861760"
  },
  {
    "text": "breaking changes in the collector",
    "start": "861760",
    "end": "863680"
  },
  {
    "text": "it has been a struggle to keep pace with",
    "start": "863680",
    "end": "866079"
  },
  {
    "text": "internal api changes in our custom",
    "start": "866079",
    "end": "867839"
  },
  {
    "text": "receiver",
    "start": "867839",
    "end": "869120"
  },
  {
    "text": "until recently there was also some churn",
    "start": "869120",
    "end": "870959"
  },
  {
    "text": "in metrics which increased stress and",
    "start": "870959",
    "end": "873199"
  },
  {
    "text": "anxiety when rolling out upgrades",
    "start": "873199",
    "end": "876480"
  },
  {
    "text": "an otlp while amazing has experienced",
    "start": "876480",
    "end": "878880"
  },
  {
    "text": "churn of its own",
    "start": "878880",
    "end": "880399"
  },
  {
    "text": "we successfully advocated for declaring",
    "start": "880399",
    "end": "882399"
  },
  {
    "text": "the trace portion of the protocol is",
    "start": "882399",
    "end": "884000"
  },
  {
    "text": "stable",
    "start": "884000",
    "end": "884639"
  },
  {
    "text": "but in the meantime we had to deal with",
    "start": "884639",
    "end": "886240"
  },
  {
    "text": "chune in the spec and mismatches between",
    "start": "886240",
    "end": "888880"
  },
  {
    "text": "the upstream proto definitions and the",
    "start": "888880",
    "end": "890639"
  },
  {
    "text": "version vended by the collector",
    "start": "890639",
    "end": "892880"
  },
  {
    "text": "that vendoring has brought problems of",
    "start": "892880",
    "end": "894399"
  },
  {
    "text": "its own since the vended version",
    "start": "894399",
    "end": "896000"
  },
  {
    "text": "is the in-memory format in the collector",
    "start": "896000",
    "end": "898160"
  },
  {
    "text": "but it can't be used from externally",
    "start": "898160",
    "end": "899760"
  },
  {
    "text": "developed components",
    "start": "899760",
    "end": "901920"
  },
  {
    "text": "there's some general misunderstanding of",
    "start": "901920",
    "end": "903440"
  },
  {
    "text": "the otlp spec in sdk",
    "start": "903440",
    "end": "905440"
  },
  {
    "text": "exporters for different languages but",
    "start": "905440",
    "end": "907040"
  },
  {
    "text": "those should be ironed out soon with",
    "start": "907040",
    "end": "908399"
  },
  {
    "text": "some spec clarifications",
    "start": "908399",
    "end": "913279"
  },
  {
    "start": "911000",
    "end": "970000"
  },
  {
    "text": "now that otlp has settled down a bit",
    "start": "913279",
    "end": "915519"
  },
  {
    "text": "we're working to use it in production",
    "start": "915519",
    "end": "917839"
  },
  {
    "text": "we're hoping for large efficiency gains",
    "start": "917839",
    "end": "919680"
  },
  {
    "text": "from a pure otlp",
    "start": "919680",
    "end": "921040"
  },
  {
    "text": "pipeline if we get them that might save",
    "start": "921040",
    "end": "923760"
  },
  {
    "text": "the agent",
    "start": "923760",
    "end": "924720"
  },
  {
    "text": "but the operational overhead of",
    "start": "924720",
    "end": "926240"
  },
  {
    "text": "maintaining the agent demon sets means",
    "start": "926240",
    "end": "928000"
  },
  {
    "text": "we'll probably remove them",
    "start": "928000",
    "end": "929920"
  },
  {
    "text": "our strategy there is to use envoy for",
    "start": "929920",
    "end": "931839"
  },
  {
    "text": "link aggregation in the client clusters",
    "start": "931839",
    "end": "933759"
  },
  {
    "text": "and for client instrumentation to",
    "start": "933759",
    "end": "935279"
  },
  {
    "text": "collect metadata and populate the",
    "start": "935279",
    "end": "936720"
  },
  {
    "text": "resource",
    "start": "936720",
    "end": "937279"
  },
  {
    "text": "tags themselves",
    "start": "937279",
    "end": "940399"
  },
  {
    "text": "once we migrate all our services to",
    "start": "940399",
    "end": "942160"
  },
  {
    "text": "export in otlp we can start deleting",
    "start": "942160",
    "end": "944320"
  },
  {
    "text": "more custom code",
    "start": "944320",
    "end": "945360"
  },
  {
    "text": "and eventually consider building",
    "start": "945360",
    "end": "946639"
  },
  {
    "text": "directly from the upstream repo",
    "start": "946639",
    "end": "949120"
  },
  {
    "text": "open telemetry ruby is used by some",
    "start": "949120",
    "end": "951040"
  },
  {
    "text": "companies in production",
    "start": "951040",
    "end": "952399"
  },
  {
    "text": "we need to curate it a little for our",
    "start": "952399",
    "end": "954160"
  },
  {
    "text": "environment but we're close to trialing",
    "start": "954160",
    "end": "955759"
  },
  {
    "text": "it in a few services",
    "start": "955759",
    "end": "958800"
  },
  {
    "text": "our previous success with opencensus",
    "start": "960079",
    "end": "962160"
  },
  {
    "text": "means that we have a few services",
    "start": "962160",
    "end": "963680"
  },
  {
    "text": "instrumented",
    "start": "963680",
    "end": "965199"
  },
  {
    "text": "with open sensors that we need to",
    "start": "965199",
    "end": "966560"
  },
  {
    "text": "migrate to open telemetry",
    "start": "966560",
    "end": "969839"
  },
  {
    "start": "970000",
    "end": "1043000"
  },
  {
    "text": "the last big hurdle we have to fully",
    "start": "971680",
    "end": "973519"
  },
  {
    "text": "migrate to open telemetry is replacing",
    "start": "973519",
    "end": "975440"
  },
  {
    "text": "our context propagation with the w3c",
    "start": "975440",
    "end": "977680"
  },
  {
    "text": "trace parent format",
    "start": "977680",
    "end": "979360"
  },
  {
    "text": "this is a default for open telemetry and",
    "start": "979360",
    "end": "981120"
  },
  {
    "text": "should see increasing adoption across",
    "start": "981120",
    "end": "982639"
  },
  {
    "text": "many third-party applications",
    "start": "982639",
    "end": "985440"
  },
  {
    "text": "more specific to our environment we have",
    "start": "985440",
    "end": "987199"
  },
  {
    "text": "a lot of clusters across fewer regions",
    "start": "987199",
    "end": "989199"
  },
  {
    "text": "and rolling our code or configuration",
    "start": "989199",
    "end": "990800"
  },
  {
    "text": "changes for collectors",
    "start": "990800",
    "end": "992000"
  },
  {
    "text": "across all of them is a maintenance",
    "start": "992000",
    "end": "993839"
  },
  {
    "text": "headache even without the agent",
    "start": "993839",
    "end": "996240"
  },
  {
    "text": "in particular some clusters are pretty",
    "start": "996240",
    "end": "997920"
  },
  {
    "text": "small and don't auto scale",
    "start": "997920",
    "end": "999600"
  },
  {
    "text": "for reasons so we invariably have to",
    "start": "999600",
    "end": "1002800"
  },
  {
    "text": "babysit deploys in clusters that our",
    "start": "1002800",
    "end": "1004560"
  },
  {
    "text": "team doesn't own",
    "start": "1004560",
    "end": "1006240"
  },
  {
    "text": "there's also a lot of variability in",
    "start": "1006240",
    "end": "1007920"
  },
  {
    "text": "traffic across these clusters so one",
    "start": "1007920",
    "end": "1009680"
  },
  {
    "text": "size really doesn't fit all",
    "start": "1009680",
    "end": "1012160"
  },
  {
    "text": "instead we're building out regional",
    "start": "1012160",
    "end": "1013600"
  },
  {
    "text": "pools of collectors to replace the",
    "start": "1013600",
    "end": "1015199"
  },
  {
    "text": "cluster local pools",
    "start": "1015199",
    "end": "1016959"
  },
  {
    "text": "these will be in clusters that our team",
    "start": "1016959",
    "end": "1018560"
  },
  {
    "text": "owns giving us a lot more control",
    "start": "1018560",
    "end": "1022160"
  },
  {
    "text": "finally all this work with open",
    "start": "1022240",
    "end": "1023759"
  },
  {
    "text": "telemetry has allowed us to explore",
    "start": "1023759",
    "end": "1025438"
  },
  {
    "text": "custom analysis using bigquery as our",
    "start": "1025439",
    "end": "1027360"
  },
  {
    "text": "storage backend",
    "start": "1027360",
    "end": "1028720"
  },
  {
    "text": "we've written a jaeger plugin for",
    "start": "1028720",
    "end": "1030319"
  },
  {
    "text": "bigquery so we can use it for search and",
    "start": "1030319",
    "end": "1032400"
  },
  {
    "text": "visualization",
    "start": "1032400",
    "end": "1033520"
  },
  {
    "text": "and we have a few expert users who use",
    "start": "1033520",
    "end": "1035678"
  },
  {
    "text": "the bigquery console for some pretty",
    "start": "1035679",
    "end": "1037438"
  },
  {
    "text": "interesting analysis",
    "start": "1037439",
    "end": "1038480"
  },
  {
    "text": "that simply isn't possible with",
    "start": "1038480",
    "end": "1039918"
  },
  {
    "text": "commercial services",
    "start": "1039919",
    "end": "1042959"
  },
  {
    "start": "1043000",
    "end": "1120000"
  },
  {
    "text": "we learned a lot from this process",
    "start": "1045919",
    "end": "1047760"
  },
  {
    "text": "hopefully you can take advantage of some",
    "start": "1047760",
    "end": "1049360"
  },
  {
    "text": "of these hard-won lessons",
    "start": "1049360",
    "end": "1051440"
  },
  {
    "text": "the first lesson is that a migration",
    "start": "1051440",
    "end": "1053120"
  },
  {
    "text": "like this takes a long time",
    "start": "1053120",
    "end": "1055200"
  },
  {
    "text": "particularly in our case we had a very",
    "start": "1055200",
    "end": "1056960"
  },
  {
    "text": "small team and open telemetry was new",
    "start": "1056960",
    "end": "1058960"
  },
  {
    "text": "and changing rapidly",
    "start": "1058960",
    "end": "1060640"
  },
  {
    "text": "some of that is likely easier now but",
    "start": "1060640",
    "end": "1062640"
  },
  {
    "text": "not all of it",
    "start": "1062640",
    "end": "1064559"
  },
  {
    "text": "the second lesson is that working",
    "start": "1064559",
    "end": "1066000"
  },
  {
    "text": "backwards from the end of the pipeline",
    "start": "1066000",
    "end": "1067520"
  },
  {
    "text": "worked really well",
    "start": "1067520",
    "end": "1068960"
  },
  {
    "text": "we could simply extend our pipeline to",
    "start": "1068960",
    "end": "1070640"
  },
  {
    "text": "use a collector then once we were",
    "start": "1070640",
    "end": "1072240"
  },
  {
    "text": "confident we introduced it into",
    "start": "1072240",
    "end": "1073600"
  },
  {
    "text": "production clusters then gradually",
    "start": "1073600",
    "end": "1075120"
  },
  {
    "text": "switched the pipeline over to use it",
    "start": "1075120",
    "end": "1076720"
  },
  {
    "text": "then removed the old pipeline",
    "start": "1076720",
    "end": "1078799"
  },
  {
    "text": "none of this impacted any other services",
    "start": "1078799",
    "end": "1080880"
  },
  {
    "text": "or resulted in any significant data loss",
    "start": "1080880",
    "end": "1083840"
  },
  {
    "text": "at that point we already gained",
    "start": "1083840",
    "end": "1085200"
  },
  {
    "text": "significant value and could replace",
    "start": "1085200",
    "end": "1086799"
  },
  {
    "text": "other parts somewhat at our leisure",
    "start": "1086799",
    "end": "1089360"
  },
  {
    "text": "third lesson is that fine grain traffic",
    "start": "1089360",
    "end": "1091440"
  },
  {
    "text": "migration",
    "start": "1091440",
    "end": "1092480"
  },
  {
    "text": "this process let us work a cluster at a",
    "start": "1092480",
    "end": "1094480"
  },
  {
    "text": "time and in comfortable increments",
    "start": "1094480",
    "end": "1096320"
  },
  {
    "text": "which reduce both stress and the",
    "start": "1096320",
    "end": "1097919"
  },
  {
    "text": "magnitude of any potential outage",
    "start": "1097919",
    "end": "1101679"
  },
  {
    "text": "finally trace instrumentation and",
    "start": "1102240",
    "end": "1104240"
  },
  {
    "text": "collection is commoditized",
    "start": "1104240",
    "end": "1105840"
  },
  {
    "text": "there's no value in building or",
    "start": "1105840",
    "end": "1107200"
  },
  {
    "text": "maintaining this yourself",
    "start": "1107200",
    "end": "1108880"
  },
  {
    "text": "the real value is at the end of the",
    "start": "1108880",
    "end": "1110320"
  },
  {
    "text": "pipeline and analysis and monitoring and",
    "start": "1110320",
    "end": "1112400"
  },
  {
    "text": "alerting",
    "start": "1112400",
    "end": "1113440"
  },
  {
    "text": "there's a lot of innovation and churn",
    "start": "1113440",
    "end": "1115039"
  },
  {
    "text": "and consolidation in this space it's",
    "start": "1115039",
    "end": "1116720"
  },
  {
    "text": "good to head your bets",
    "start": "1116720",
    "end": "1118160"
  },
  {
    "text": "open telemetry helps you do that thanks",
    "start": "1118160",
    "end": "1121120"
  },
  {
    "start": "1120000",
    "end": "1144000"
  },
  {
    "text": "for listening to this talk",
    "start": "1121120",
    "end": "1122400"
  },
  {
    "text": "i hope it inspired you to look more",
    "start": "1122400",
    "end": "1123840"
  },
  {
    "text": "closely at urban telemetry",
    "start": "1123840",
    "end": "1125600"
  },
  {
    "text": "if you've already adopted tracing i hope",
    "start": "1125600",
    "end": "1127360"
  },
  {
    "text": "you'll consider migrating to open",
    "start": "1127360",
    "end": "1128720"
  },
  {
    "text": "telemetry",
    "start": "1128720",
    "end": "1129520"
  },
  {
    "text": "and that this talk helps you plan and",
    "start": "1129520",
    "end": "1131120"
  },
  {
    "text": "execute that migration",
    "start": "1131120",
    "end": "1132799"
  },
  {
    "text": "if you're not already tracing in",
    "start": "1132799",
    "end": "1134000"
  },
  {
    "text": "production please consider doing so with",
    "start": "1134000",
    "end": "1135760"
  },
  {
    "text": "open telemetry",
    "start": "1135760",
    "end": "1137039"
  },
  {
    "text": "and finally we're the second most active",
    "start": "1137039",
    "end": "1138960"
  },
  {
    "text": "cncf project by contributions",
    "start": "1138960",
    "end": "1141120"
  },
  {
    "text": "we'd love your help to make us number",
    "start": "1141120",
    "end": "1142960"
  },
  {
    "text": "one",
    "start": "1142960",
    "end": "1145919"
  }
]