[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hello and welcome to my session cluster api as code my name is david mckay",
    "start": "640",
    "end": "7839"
  },
  {
    "text": "and i am a cncf ambassador and senior developer advocate for equinix metal",
    "start": "7839",
    "end": "17680"
  },
  {
    "text": "and i am from glasgow in sunny sunny scotland i have a menagerie of animals in my",
    "start": "17680",
    "end": "23199"
  },
  {
    "text": "office i have chancellors vegas a fair underdog",
    "start": "23199",
    "end": "28880"
  },
  {
    "text": "i'm also a prolific live streamer streaming multiple times per week trying to cover all of the cloud native",
    "start": "29119",
    "end": "35040"
  },
  {
    "text": "landscape technologies hopefully providing learning materials so we can all learn together",
    "start": "35040",
    "end": "41200"
  },
  {
    "text": "and of course i'm also supporting my wonderful covet here you're welcome",
    "start": "41200",
    "end": "47810"
  },
  {
    "text": "[Music] and i am definitely a member of the pineapple pizza club",
    "start": "47810",
    "end": "59520"
  },
  {
    "text": "so let's get started so what is cluster api project well",
    "start": "59520",
    "end": "67200"
  },
  {
    "start": "60000",
    "end": "225000"
  },
  {
    "text": "it is a sub-project of kubernetes that aims to commoditize the creation and provisioning of new",
    "start": "67200",
    "end": "73600"
  },
  {
    "text": "kubernetes clusters provided you have a kubernetes cluster",
    "start": "73600",
    "end": "80080"
  },
  {
    "text": "the cluster api provides a declarative api just like we're used to with kubernetes",
    "start": "81520",
    "end": "87759"
  },
  {
    "text": "for managing our kubernetes clusters its responsibilities are to create and provision kubernetes clusters",
    "start": "87759",
    "end": "94159"
  },
  {
    "text": "it will handle upgrades and day-to-day operations including remediation when required",
    "start": "94159",
    "end": "101840"
  },
  {
    "text": "it is currently in an alpha state which means it's volatile and changing quickly but it doesn't mean you can't use it in",
    "start": "102479",
    "end": "108720"
  },
  {
    "text": "production today and it's an extremely collaborative projects",
    "start": "108720",
    "end": "114320"
  },
  {
    "text": "with members from aws digitalocean google cloud equinix metal and more almost every",
    "start": "114320",
    "end": "120479"
  },
  {
    "text": "cloud provider has a cluster api provider for spinning up that next kubernetes cluster",
    "start": "120479",
    "end": "128720"
  },
  {
    "text": "okay so let's cover some basic capability that you need to get started with the cluster api",
    "start": "128720",
    "end": "134080"
  },
  {
    "text": "firstly the documentation will make mention of a management cluster this can be an existing kubernetes",
    "start": "134080",
    "end": "141120"
  },
  {
    "text": "cluster that you have available within your organization or something as simple as docker for mac",
    "start": "141120",
    "end": "147280"
  },
  {
    "text": "minikip or kind this cluster will run the controllers",
    "start": "147280",
    "end": "154879"
  },
  {
    "text": "for creating subsequent or target workload clusters",
    "start": "154879",
    "end": "160160"
  },
  {
    "text": "the documentation will also mention infrastructure providers the cluster api aims to work across all",
    "start": "160160",
    "end": "166319"
  },
  {
    "text": "major cloud providers the provider could be google amazon",
    "start": "166319",
    "end": "172080"
  },
  {
    "text": "or echo next metal [Music]",
    "start": "172080",
    "end": "177760"
  },
  {
    "text": "perfect and then there's the workload cluster the workload cluster is the cluster we're going to have the cluster api",
    "start": "177760",
    "end": "183599"
  },
  {
    "text": "create and provision for us now we have machines these could be",
    "start": "183599",
    "end": "189040"
  },
  {
    "text": "virtual machines or vms on aws gcp or bare metal instances on",
    "start": "189040",
    "end": "194560"
  },
  {
    "text": "equinox metal we can have the concept of a machine deployment this is a high",
    "start": "194560",
    "end": "199680"
  },
  {
    "text": "level request for the cluster api to create one or more machines the",
    "start": "199680",
    "end": "205920"
  },
  {
    "text": "machine deployment is responsible for maintaining and creating machine sets as we make changes during machine",
    "start": "205920",
    "end": "211360"
  },
  {
    "text": "deployments new machine sets are created the machine sets are then responsible for creating",
    "start": "211360",
    "end": "217040"
  },
  {
    "text": "the machines we also have machine health checks to make sure that the clusters and the nodes that we provide",
    "start": "217040",
    "end": "223200"
  },
  {
    "text": "are always healthy this should feel extremely familiar this is very similar",
    "start": "223200",
    "end": "229920"
  },
  {
    "start": "225000",
    "end": "470000"
  },
  {
    "text": "to the resources that we work with dan and da on kubernetes deployments replica sets pods",
    "start": "229920",
    "end": "236400"
  },
  {
    "text": "and probes okay now that that stuff's out the way let's",
    "start": "236400",
    "end": "241439"
  },
  {
    "text": "take a very brief look at how you get started with the cluster api today",
    "start": "241439",
    "end": "247360"
  },
  {
    "text": "i'm going to quickly run through the getting started guide from the cluster api book if you haven't checked out the book i",
    "start": "248400",
    "end": "254480"
  },
  {
    "text": "recommend doing so as soon as possible it has everything you need to know about getting started with the cluster api",
    "start": "254480",
    "end": "262160"
  },
  {
    "text": "so what we have here is a very simple just file just feels like a make fail but better",
    "start": "264880",
    "end": "271120"
  },
  {
    "text": "it has two different targets the first in it this will prepare our management cluster for creating",
    "start": "271120",
    "end": "277120"
  },
  {
    "text": "new kubernetes clusters next there's a create cluster target this one's a",
    "start": "277120",
    "end": "282400"
  },
  {
    "text": "little bit more robust but this will generate the gamma required for us to apply to our management cluster in order to allow the",
    "start": "282400",
    "end": "289199"
  },
  {
    "text": "controllers to create our new workload cluster we specify the kubernetes version that we want",
    "start": "289199",
    "end": "294960"
  },
  {
    "text": "how many control plane nodes we want and how many worker nodes we want you don't have to worry",
    "start": "294960",
    "end": "301600"
  },
  {
    "text": "about having a single control plane node or a highly available control plane node cluster api will take",
    "start": "301600",
    "end": "307680"
  },
  {
    "text": "care of that for you and in order for these justifiable targets to work we just need a little",
    "start": "307680",
    "end": "313840"
  },
  {
    "text": "bit of environment information to configure it along the way of course we need to provide an api key for the",
    "start": "313840",
    "end": "320400"
  },
  {
    "text": "cloud provider of choice because i'm using equinix metal i also have to provide which project to create",
    "start": "320400",
    "end": "326080"
  },
  {
    "text": "the devices in and i also have to tell it which operating system to use",
    "start": "326080",
    "end": "331520"
  },
  {
    "text": "for each of the nodes as well as the facility to launch them in",
    "start": "331520",
    "end": "336639"
  },
  {
    "text": "we can configure the pod sider and server slider for our cluster and we can tell it which instant types",
    "start": "336639",
    "end": "343199"
  },
  {
    "text": "to use individually for the control plane node and for any worker node pools that we have",
    "start": "343199",
    "end": "350319"
  },
  {
    "text": "to get started i can run just edit [Music] this will speak to my management cluster",
    "start": "350479",
    "end": "357759"
  },
  {
    "text": "which is docker for mac it will install all of the custom resources to that cluster",
    "start": "357759",
    "end": "362880"
  },
  {
    "text": "get the controllers running and pass in the packet api keys i need for deploying",
    "start": "362880",
    "end": "369440"
  },
  {
    "text": "new clusters on equinix metal it's called packet just because packet renamed to",
    "start": "369440",
    "end": "374880"
  },
  {
    "text": "equidistant last year and the provider is a little bit behind",
    "start": "374880",
    "end": "381840"
  },
  {
    "text": "it's not the quickest but it is pulling a number of images to the management cluster however that is now available for me to",
    "start": "383039",
    "end": "390080"
  },
  {
    "text": "generate my target cluster",
    "start": "390080",
    "end": "395840"
  },
  {
    "text": "[Music] cluster control uses templates that are baked into each provider's repository",
    "start": "396980",
    "end": "403360"
  },
  {
    "text": "to try and guess what you need for your target cluster and in fact we can pop this open in vs",
    "start": "403360",
    "end": "409759"
  },
  {
    "text": "code and take a look now inside of our cluster vehicle you",
    "start": "409759",
    "end": "416080"
  },
  {
    "text": "will see a cube adm control plane this is a custom resource",
    "start": "416080",
    "end": "421199"
  },
  {
    "text": "tells cluster api how to get a control plane node on your provider of choice",
    "start": "421199",
    "end": "426720"
  },
  {
    "text": "here we see a whole bunch of shell commands that are required to configure the host and install all of the kubernetes",
    "start": "426720",
    "end": "432880"
  },
  {
    "text": "components we then have a machine template that tells us what",
    "start": "432880",
    "end": "438000"
  },
  {
    "text": "our control plane nodes look like we then have a cluster crd that contains",
    "start": "438000",
    "end": "444479"
  },
  {
    "text": "each of the podsider server sider and other infrastructure parts that we need followed by a provider-specific cluster",
    "start": "444479",
    "end": "451919"
  },
  {
    "text": "that just tells it the facility and project ivs we then have machine deployments",
    "start": "451919",
    "end": "458240"
  },
  {
    "text": "more machine templates more qedm configs and there we are 206 lines",
    "start": "458240",
    "end": "465520"
  },
  {
    "text": "of wonderful beautiful yaml",
    "start": "465520",
    "end": "469440"
  },
  {
    "start": "470000",
    "end": "703000"
  },
  {
    "text": "okay let's get started what's the problem seems simple enough right",
    "start": "470639",
    "end": "478639"
  },
  {
    "text": "unfortunately yaml is not the best programming language for complex logic",
    "start": "478639",
    "end": "487199"
  },
  {
    "text": "and we seem to have got ourselves into a bit of a pickle in the cloud native ecosystem when it",
    "start": "487520",
    "end": "494080"
  },
  {
    "text": "comes to yaml in fact there are memes all over the internet but how you know to be a devops engineer",
    "start": "494080",
    "end": "500639"
  },
  {
    "text": "to be a platform engineer to be a kubernetes developer is to be a yamo developer and well",
    "start": "500639",
    "end": "507680"
  },
  {
    "text": "they're funny sometimes incorrect and a whole bunch of other things let's identify a real problem that we",
    "start": "507680",
    "end": "515200"
  },
  {
    "text": "have that we've gotten ourselves into we've got helm we've got carville we've got capitan",
    "start": "515200",
    "end": "520560"
  },
  {
    "text": "we have customize to help us try and wrangle this yaml into something",
    "start": "520560",
    "end": "525839"
  },
  {
    "text": "that is much more fluent to work with that allows us to handle complex logic and loops",
    "start": "525839",
    "end": "532560"
  },
  {
    "text": "and templating and i think it's safe to say you know if",
    "start": "532560",
    "end": "539519"
  },
  {
    "text": "you maintain any helm charts i i certainly do it can be overwhelming because",
    "start": "539519",
    "end": "547360"
  },
  {
    "text": "those helm charts which are trying to set out a predefined way or a best practice way for deploying a piece of",
    "start": "547360",
    "end": "552880"
  },
  {
    "text": "software doesn't fit everyone's use case people",
    "start": "552880",
    "end": "558080"
  },
  {
    "text": "want to do their own thing and we there and layer on more loops more conditionals more loops and more",
    "start": "558080",
    "end": "564480"
  },
  {
    "text": "conditionals trying to provide enough flexibility for the end user",
    "start": "564480",
    "end": "569600"
  },
  {
    "text": "while saving them time but at the expense of everyone's time and there has to be a",
    "start": "569600",
    "end": "576240"
  },
  {
    "text": "better way so i reached out to my colleague jason",
    "start": "576240",
    "end": "582800"
  },
  {
    "text": "severus this just happens to be a contributor and maintainer of various",
    "start": "582800",
    "end": "589279"
  },
  {
    "text": "cluster api projects and i wouldn't read his words verbatim",
    "start": "589279",
    "end": "596560"
  },
  {
    "text": "feel free to hit pause and do that of your own record but i think the message from jason is",
    "start": "596560",
    "end": "603279"
  },
  {
    "text": "clear the cluster api's responsibility",
    "start": "603279",
    "end": "608959"
  },
  {
    "text": "is the reconciliation creation provision and operability of the target clusters",
    "start": "608959",
    "end": "616480"
  },
  {
    "text": "the cluster api's responsibility is not to provide you know air economic tooling",
    "start": "616480",
    "end": "623440"
  },
  {
    "text": "to generate the ammo to describe those clusters and as we've seen through the quickstart",
    "start": "623440",
    "end": "629360"
  },
  {
    "text": "whale it does offer some simple mechanics to generate that getting started",
    "start": "629360",
    "end": "634480"
  },
  {
    "text": "uh yaml the minute you need to be able to make your own tweaks things get a little bit",
    "start": "634480",
    "end": "640240"
  },
  {
    "text": "complicated you have to start copying and pasting your own yaml to get the kind of cluster topology that",
    "start": "640240",
    "end": "645519"
  },
  {
    "text": "you would want or expect yeah fine it gives you a control plane cluster highly available",
    "start": "645519",
    "end": "652959"
  },
  {
    "text": "but it only generates one single worker pool and for most production clusters you're",
    "start": "652959",
    "end": "659040"
  },
  {
    "text": "probably going to want more potentially within different availability zones within a single",
    "start": "659040",
    "end": "664480"
  },
  {
    "text": "region with a variety of instance types some descartes some memory heavy some cpu",
    "start": "664480",
    "end": "670480"
  },
  {
    "text": "heavy that really are tailored to your workload we're seeing that the same",
    "start": "670480",
    "end": "675680"
  },
  {
    "text": "confusion and complexity that we see across the broader kubernetes ecosystem for",
    "start": "675680",
    "end": "681040"
  },
  {
    "text": "deployments and templating now starting to come to the cluster api is that not all clusters are the same",
    "start": "681040",
    "end": "687760"
  },
  {
    "text": "and as an end user i want to describe a cluster that works for me and for that we need to look beyond the",
    "start": "687760",
    "end": "695200"
  },
  {
    "text": "cluster api to other tools okay let's talk about solutions",
    "start": "695200",
    "end": "703839"
  },
  {
    "start": "703000",
    "end": "996000"
  },
  {
    "text": "if we have to look beyond the cluster api for tooling to allow us to define the clusters that we need",
    "start": "703920",
    "end": "709120"
  },
  {
    "text": "and we want for our day-to-day life to be better then we have to look at other toolings",
    "start": "709120",
    "end": "716079"
  },
  {
    "text": "then we have to pick the right tool and i am a firm believer in infrastructure as code",
    "start": "716079",
    "end": "723519"
  },
  {
    "text": "not as general as could we're using real high level languages",
    "start": "723519",
    "end": "729440"
  },
  {
    "text": "that allow us to provide the abstractions that we need to make our jobs almost enjoyable",
    "start": "729440",
    "end": "737199"
  },
  {
    "text": "and that means that i want something that is flexible i want to be able to",
    "start": "738720",
    "end": "744639"
  },
  {
    "text": "define a cluster that is the size i want that uses the node pills i want to use the instant",
    "start": "744639",
    "end": "751120"
  },
  {
    "text": "type that i want as the operating system that i want to use because maybe there's other things on there that",
    "start": "751120",
    "end": "757200"
  },
  {
    "text": "i want to take advantage of i think more importantly it also has to",
    "start": "757200",
    "end": "762240"
  },
  {
    "text": "be composable i think that we're in a stage of kubernetes awareness and adoption where",
    "start": "762240",
    "end": "768079"
  },
  {
    "text": "we know that having one giant monolithic kubernetes cluster is not the answer we actually want lots",
    "start": "768079",
    "end": "774880"
  },
  {
    "text": "of smaller kubernetes clusters and our tooling has to evolve to help us provide that and",
    "start": "774880",
    "end": "780560"
  },
  {
    "text": "describe that so when i say composable like i want to be able to define what a node code looks",
    "start": "780560",
    "end": "786560"
  },
  {
    "text": "like for machine learning workloads and reuse that over and over again i want to be able to find what a node",
    "start": "786560",
    "end": "792160"
  },
  {
    "text": "bill looks like for databases for stateful workloads where disk iops are critical and",
    "start": "792160",
    "end": "800320"
  },
  {
    "text": "security across the board it has to be ergonomic i have to",
    "start": "800320",
    "end": "807760"
  },
  {
    "text": "enjoy using it coding doesn't have to be a chore we",
    "start": "807760",
    "end": "813519"
  },
  {
    "text": "provide abstractions and libraries to make our lives easier i want to make future me life easier",
    "start": "813519",
    "end": "820959"
  },
  {
    "text": "and there is a way so the solution i'm going to show today",
    "start": "820959",
    "end": "827279"
  },
  {
    "text": "is based on a project called polluvi which hopefully you're aware of it is an infrastructure as code tool so",
    "start": "827279",
    "end": "833279"
  },
  {
    "text": "allows you the developer to make your own choices you want to write your infrastructure as good in python",
    "start": "833279",
    "end": "840839"
  },
  {
    "text": "go javascript typescript dotnet these are all choices you get to",
    "start": "840839",
    "end": "848480"
  },
  {
    "text": "make lumi allows you and provides an sdk",
    "start": "848480",
    "end": "854880"
  },
  {
    "text": "to work with the language you're more comfortable with and what we have here is an example of",
    "start": "854880",
    "end": "860399"
  },
  {
    "text": "using the typescript sdk for azure to spin up an app service which has a",
    "start": "860399",
    "end": "867360"
  },
  {
    "text": "handler an anonymous function my business logic can go there and then just four lines of code",
    "start": "867360",
    "end": "872639"
  },
  {
    "text": "to describe how to deploy that to the azure ecosystem these are the ergonomics that we're",
    "start": "872639",
    "end": "879120"
  },
  {
    "text": "talking about less than 10 lines of code easier to read",
    "start": "879120",
    "end": "884800"
  },
  {
    "text": "easy to reason easy to change it's very explicit and does only what i",
    "start": "884800",
    "end": "890720"
  },
  {
    "text": "need",
    "start": "890720",
    "end": "892959"
  },
  {
    "text": "there's another project from the polymer corporation that allows us to generate",
    "start": "896800",
    "end": "903680"
  },
  {
    "text": "these types from the custom resource definitions that are widely available in the",
    "start": "903680",
    "end": "908800"
  },
  {
    "text": "kubernetes ecosystem so i'm not confined to v1",
    "start": "908800",
    "end": "914480"
  },
  {
    "text": "or apps v1 they're already broadly known and understood but to any custom resource that is",
    "start": "914480",
    "end": "920720"
  },
  {
    "text": "online that has an open api specification as part of its resource illumi can generate the types and allow",
    "start": "920720",
    "end": "927680"
  },
  {
    "text": "us to consume them using the same ergonomics that we're becoming accustomed to",
    "start": "927680",
    "end": "934000"
  },
  {
    "text": "as i said polymer supports the languages you're already familiar with i'm a big fan of using typescript i",
    "start": "935519",
    "end": "941360"
  },
  {
    "text": "think it works really well for infrastructure is good with a strongly tight but dynamic nature",
    "start": "941360",
    "end": "946480"
  },
  {
    "text": "however this is cloud native go is an option as long as you don't mind checking for errors every 13 seconds",
    "start": "946480",
    "end": "953680"
  },
  {
    "text": "python.net are also available and more languages i've heard are coming soon and there's one",
    "start": "953680",
    "end": "961120"
  },
  {
    "text": "secret thing that launched very recently from the bulimic operation and is that that they have enabled cross",
    "start": "961120",
    "end": "968639"
  },
  {
    "text": "language sdk runtime capability meaning",
    "start": "968639",
    "end": "974240"
  },
  {
    "text": "i like typescript i publish libraries in typescript you let go you want to write your",
    "start": "974240",
    "end": "980639"
  },
  {
    "text": "infrastructure's code and go you can now consume typescript libraries on go as i can consume the",
    "start": "980639",
    "end": "987120"
  },
  {
    "text": "type lego library from typescript",
    "start": "987120",
    "end": "991759"
  },
  {
    "text": "wow so for the rest of this talk we're going to be moving into the live demo where i",
    "start": "994839",
    "end": "1000959"
  },
  {
    "start": "996000",
    "end": "1563000"
  },
  {
    "text": "will show you the library that i've built and how it allows you to define kubernetes clusters with greater ergonomics",
    "start": "1000959",
    "end": "1006560"
  },
  {
    "text": "composability and extremely flexible okay let's take a look so what i have",
    "start": "1006560",
    "end": "1013519"
  },
  {
    "text": "here is a brand new lumi project inside of my kubecon directory it's configured for kubernetes",
    "start": "1013519",
    "end": "1021440"
  },
  {
    "text": "and typescript which means that it comes with the lumia sdk kubernetes sdk and some kubernetes",
    "start": "1021440",
    "end": "1026959"
  },
  {
    "text": "helpers in my own namespace i have access to all of the cluster api resources that have",
    "start": "1026959",
    "end": "1033600"
  },
  {
    "text": "already generated and published the first thing i'm going to do is just pull in the cluster api generic",
    "start": "1033600",
    "end": "1039199"
  },
  {
    "text": "package from here we can open our index.typescript",
    "start": "1039199",
    "end": "1044720"
  },
  {
    "text": "and we want to import star as cappy from",
    "start": "1044720",
    "end": "1052000"
  },
  {
    "text": "our new library [Music] now one of the more difficult things to",
    "start": "1052000",
    "end": "1057600"
  },
  {
    "text": "automate with the cluster api is that initial infrastructure provision",
    "start": "1057600",
    "end": "1062640"
  },
  {
    "text": "because the only way to do it is through a cluster control init dash dash infrastructure packet it then requires a",
    "start": "1062640",
    "end": "1071200"
  },
  {
    "text": "secret to exist in the environment that tells the controllers how to speak to the cloud",
    "start": "1071200",
    "end": "1076559"
  },
  {
    "text": "provider cluster control does not provide a way to generate the ammo and store that for",
    "start": "1076559",
    "end": "1083440"
  },
  {
    "text": "a get ops fashion however the library i provided does ship with helpers",
    "start": "1083440",
    "end": "1089360"
  },
  {
    "text": "to initialize your provider in your management cluster so the first",
    "start": "1089360",
    "end": "1095120"
  },
  {
    "text": "thing we want to do is initialize the cluster api",
    "start": "1095120",
    "end": "1099600"
  },
  {
    "text": "and we can do we can do that through a call to edit now",
    "start": "1101360",
    "end": "1108240"
  },
  {
    "text": "one of the really nice things about working with typescript is that you don't need to know the sdks",
    "start": "1108240",
    "end": "1114080"
  },
  {
    "text": "up front because the language server protocols are all really really good and in fact i can just type cappy",
    "start": "1114080",
    "end": "1121360"
  },
  {
    "text": "dot and already i can see the api space that is available for me to use",
    "start": "1121360",
    "end": "1126720"
  },
  {
    "text": "now i'm not quite ready to create a cluster i'm just going to do edit and i don't know what parameters",
    "start": "1126720",
    "end": "1133840"
  },
  {
    "text": "this function takes but i open my parameters and i can see oh",
    "start": "1133840",
    "end": "1139360"
  },
  {
    "text": "the inner function takes a cluster api config",
    "start": "1139360",
    "end": "1144880"
  },
  {
    "text": "do we know what a cluster api config is well not yet but we can expand that",
    "start": "1145679",
    "end": "1152320"
  },
  {
    "text": "and use our autocomplete and we can see oh it wants to know whether we should install cert manager",
    "start": "1152320",
    "end": "1158640"
  },
  {
    "text": "and if so which version it also wants to know whether we want to",
    "start": "1158640",
    "end": "1163760"
  },
  {
    "text": "enable any of the feature gates and finally it needs a kubernetes",
    "start": "1163760",
    "end": "1169440"
  },
  {
    "text": "provider so let's just quickly run through this one by one",
    "start": "1169440",
    "end": "1175280"
  },
  {
    "text": "when we did the cluster control in it earlier we did see that it installed start manager in fact",
    "start": "1175280",
    "end": "1180400"
  },
  {
    "text": "it's required so i'm just going to say true yeah why not install",
    "start": "1180400",
    "end": "1186720"
  },
  {
    "text": "start manager what version well i already know that 110 is available so i'm just going to",
    "start": "1186720",
    "end": "1192960"
  },
  {
    "text": "drop that straight in but you could find that from the cluster there from the server manager github repository next",
    "start": "1192960",
    "end": "1200720"
  },
  {
    "text": "oh feature games well we can hover over and we know that it expects a",
    "start": "1200720",
    "end": "1206799"
  },
  {
    "text": "list of something called a feature gate so let's just pop open our list and",
    "start": "1206799",
    "end": "1211919"
  },
  {
    "text": "click on feature gate and we can see there's two features available for us to enable",
    "start": "1211919",
    "end": "1217520"
  },
  {
    "text": "we don't need to know what our machine pill is yet but i am going to enable cluster resources cluster resource sets are a way for you",
    "start": "1217520",
    "end": "1224400"
  },
  {
    "text": "to define manifest to deploy to your new target clusters or workload clusters when they",
    "start": "1224400",
    "end": "1230240"
  },
  {
    "text": "become available can i get",
    "start": "1230240",
    "end": "1235760"
  },
  {
    "text": "and finally we need a kubernetes provider i'm going to leave this blank for just a",
    "start": "1235760",
    "end": "1242000"
  },
  {
    "text": "moment and that's it that will enable the cluster api controllers",
    "start": "1242000",
    "end": "1247600"
  },
  {
    "text": "on my management cluster however i've not provided the dash dash",
    "start": "1247600",
    "end": "1252799"
  },
  {
    "text": "infrastructure provider yet let's do that next so we're going to",
    "start": "1252799",
    "end": "1257840"
  },
  {
    "text": "pull in one more import",
    "start": "1257840",
    "end": "1263840"
  },
  {
    "text": "[Music] we have to go to our package.json and add one more package",
    "start": "1264280",
    "end": "1272590"
  },
  {
    "text": "[Music] this time i'm going to add the packet",
    "start": "1272590",
    "end": "1277679"
  },
  {
    "text": "provider we can run a yarn install and that'll just take a moment",
    "start": "1277679",
    "end": "1285039"
  },
  {
    "text": "okay now we can come back and complete this",
    "start": "1288400",
    "end": "1293279"
  },
  {
    "text": "we're going to pull in the packet provider again we don't know the api up front",
    "start": "1293600",
    "end": "1299679"
  },
  {
    "text": "we can say packet cappy equals capped up again we have the ability to create a control",
    "start": "1299679",
    "end": "1306320"
  },
  {
    "text": "plane or initialize the management cluster just like before it needs a config",
    "start": "1306320",
    "end": "1313919"
  },
  {
    "text": "okay so let's take care of that api key first one of the really great things about using pollumi for infrastructure",
    "start": "1313919",
    "end": "1319760"
  },
  {
    "text": "is code is inbuilt secret management that means i can just say blank strength for now jump up to the",
    "start": "1319760",
    "end": "1326559"
  },
  {
    "text": "top of my file and import the pollumi library from here",
    "start": "1326559",
    "end": "1334320"
  },
  {
    "text": "i can create a new config object i'm going to call this the config metal which is a new pallumi config",
    "start": "1334320",
    "end": "1341360"
  },
  {
    "text": "with a prefix of equinix metal [Music] i can then say here config metal",
    "start": "1341360",
    "end": "1348960"
  },
  {
    "text": "dot require secret [Music] off token",
    "start": "1348960",
    "end": "1355450"
  },
  {
    "text": "[Music] and that's it what's actually happening here is that our pollumi stack is configured",
    "start": "1355450",
    "end": "1362480"
  },
  {
    "text": "with a secret provider that can be a cloud kms from aws gcp or anywhere else",
    "start": "1362480",
    "end": "1368960"
  },
  {
    "text": "or it can be a password protected local provider i can open the limit production",
    "start": "1368960",
    "end": "1375760"
  },
  {
    "text": "environment and we see our prefix of equinix metal and we see a key of off token and here",
    "start": "1375760",
    "end": "1381760"
  },
  {
    "text": "we have an encrypted version of our api token which is all that has been consumed here",
    "start": "1381760",
    "end": "1389830"
  },
  {
    "text": "[Music] next we need a cluster api what is that",
    "start": "1389830",
    "end": "1395760"
  },
  {
    "text": "well we can hover over and see that it's just looking for some",
    "start": "1395760",
    "end": "1401039"
  },
  {
    "text": "providers that come from our cappy init our copy init actually returns a set of manifest",
    "start": "1401039",
    "end": "1407600"
  },
  {
    "text": "so from here we can see cluster api dot cluster api and finally",
    "start": "1407600",
    "end": "1414640"
  },
  {
    "text": "there is a cougar nanny's pervader we ignored that above but we're going to take care of it now so all we need to do is create",
    "start": "1414640",
    "end": "1422720"
  },
  {
    "text": "a new cooper nettie's pervader for that we import the kubernetes",
    "start": "1422720",
    "end": "1428840"
  },
  {
    "text": "package",
    "start": "1428840",
    "end": "1431840"
  },
  {
    "text": "and we can create a new kit dot provider",
    "start": "1434159",
    "end": "1440180"
  },
  {
    "text": "[Music] we can see here that it needs a name",
    "start": "1440180",
    "end": "1447440"
  },
  {
    "text": "we'll just call this local now we can add our kubernetes provider",
    "start": "1447760",
    "end": "1454320"
  },
  {
    "text": "to both of our edits and that is it",
    "start": "1454320",
    "end": "1460080"
  },
  {
    "text": "now we can run this preliminary program to provision cluster api controllers to",
    "start": "1460080",
    "end": "1466480"
  },
  {
    "text": "a kubernetes cluster so of course i would make youtube my",
    "start": "1466480",
    "end": "1473120"
  },
  {
    "text": "word for it let's actually run this we'll pop over here",
    "start": "1473120",
    "end": "1478559"
  },
  {
    "text": "jump to the terminal we're gonna run lumi up it's going to work out from those",
    "start": "1478559",
    "end": "1486400"
  },
  {
    "text": "functions that we provided which resource have to be created within the management cluster you can see there's a fair few",
    "start": "1486400",
    "end": "1493520"
  },
  {
    "text": "we can hit yes and give it in just a few moments and it will begin applying these to the",
    "start": "1493520",
    "end": "1500240"
  },
  {
    "text": "cluster now one of the things the polymer does",
    "start": "1500240",
    "end": "1505840"
  },
  {
    "text": "is try to ensure that what we apply will actually become healthy",
    "start": "1505840",
    "end": "1510960"
  },
  {
    "text": "that means that it's probably going to step there for quite a while while it waits to make sure that the deployments and the images are",
    "start": "1510960",
    "end": "1517600"
  },
  {
    "text": "pulled the pods are passing all the probes the services have endpoints all of those",
    "start": "1517600",
    "end": "1522799"
  },
  {
    "text": "little bits and pieces that normally we just allow the kubernetes reconciliation loop to take care of",
    "start": "1522799",
    "end": "1528240"
  },
  {
    "text": "so i'm just going to click ctrl c a couple of times and i'm going to run",
    "start": "1528240",
    "end": "1536000"
  },
  {
    "text": "get pods all maybe there we go and we'll see we have",
    "start": "1536000",
    "end": "1543520"
  },
  {
    "text": "cert manager and we have our capi controllers and we even have the packet controller manager not quite",
    "start": "1543520",
    "end": "1551279"
  },
  {
    "text": "ready yet but getting there and i control c that",
    "start": "1551279",
    "end": "1556320"
  },
  {
    "text": "because i'm not fussed about a lot of finishing i want to show you an alternative approach that may better fit your workflow",
    "start": "1556320",
    "end": "1564400"
  },
  {
    "start": "1563000",
    "end": "1738000"
  },
  {
    "text": "okay so let's jump back into our code and where we created our kubernetes provider we're going to make a few small",
    "start": "1564400",
    "end": "1571440"
  },
  {
    "text": "tweaks we're going to open up the arguments and we're going to see that we have a bunch",
    "start": "1571440",
    "end": "1577600"
  },
  {
    "text": "of things that we can tweak with the kubernetes provider for one it doesn't have to use whichever",
    "start": "1577600",
    "end": "1584080"
  },
  {
    "text": "context is available to me in the environment i can provide my own cubeconfig",
    "start": "1584080",
    "end": "1589520"
  },
  {
    "text": "i can specify a namespace that i want to deploy to or i can render yaml",
    "start": "1589520",
    "end": "1599520"
  },
  {
    "text": "we can see rendered yaml now we can come to the command lane",
    "start": "1599520",
    "end": "1607440"
  },
  {
    "text": "and run pollute me up and instead of reaching out to that cluster checking which resources exist",
    "start": "1608320",
    "end": "1614400"
  },
  {
    "text": "waiting for health checks and services and other endpoints and liveness probes to pass",
    "start": "1614400",
    "end": "1619760"
  },
  {
    "text": "we can just click yes and allow me to write a bunch of yaml to a directory that we can apply",
    "start": "1619760",
    "end": "1626559"
  },
  {
    "text": "whenever we want just that simple",
    "start": "1626559",
    "end": "1631679"
  },
  {
    "text": "and that's it we can pop up in vs code we'll see this brand new render jammel",
    "start": "1635039",
    "end": "1640880"
  },
  {
    "text": "directory we can see the crds that need to be applied to the cluster as well as all of the manifests with all",
    "start": "1640880",
    "end": "1647440"
  },
  {
    "text": "of the resources that have to exist and that's not all",
    "start": "1647440",
    "end": "1652559"
  },
  {
    "text": "it's just the beginning as well as installing cluster api and the providers",
    "start": "1652559",
    "end": "1658720"
  },
  {
    "text": "to our cluster we can add and layer on more abstractions to make our list easier",
    "start": "1658720",
    "end": "1664799"
  },
  {
    "text": "you can see that there's already the ability to create a control plane on an equinox metal",
    "start": "1664799",
    "end": "1671440"
  },
  {
    "text": "cluster that has the configuration options that an equinox metal customer",
    "start": "1671440",
    "end": "1676720"
  },
  {
    "text": "would come to expect the project id the number of replicas the machine types the",
    "start": "1676720",
    "end": "1682000"
  },
  {
    "text": "facility and the image and of course it's not equinix metal specific and in fact",
    "start": "1682000",
    "end": "1688000"
  },
  {
    "text": "we can take a look at cap d which is the digital illusion provider again using just a simple init command",
    "start": "1688000",
    "end": "1694960"
  },
  {
    "text": "and a config we can provide the access token the cluster api manifest and the kubernetes provider just like we did",
    "start": "1694960",
    "end": "1701919"
  },
  {
    "text": "earlier to make digital ocean kubernetes clusters available to us on our management cluster",
    "start": "1701919",
    "end": "1708480"
  },
  {
    "text": "there's no reason we can't support aws gcp and all the other major cloud providers",
    "start": "1708480",
    "end": "1713760"
  },
  {
    "text": "it just requires a little bit of effort to put together these abstractions okay let's head back to the slides",
    "start": "1713760",
    "end": "1725840"
  },
  {
    "text": "[Music]",
    "start": "1727100",
    "end": "1730330"
  },
  {
    "text": "okay so what's coming next well the cd kits is a really really cool",
    "start": "1736840",
    "end": "1744080"
  },
  {
    "text": "project it's very similar to pilgrimage and that it exposes a multi-language or runtime",
    "start": "1744080",
    "end": "1751840"
  },
  {
    "text": "for defining and creating kubernetes resources generating the types is actually a lot",
    "start": "1751840",
    "end": "1758159"
  },
  {
    "text": "easier with cdks than it is in polymer it doesn't require an external command but there are some trade-offs from both",
    "start": "1758159",
    "end": "1765279"
  },
  {
    "text": "approaches as we've seen with pollumi we can use pollumi's run time to speak to the",
    "start": "1765279",
    "end": "1770880"
  },
  {
    "text": "kubernetes cluster and do they apply this allows us to take advantage of polumi's",
    "start": "1770880",
    "end": "1776559"
  },
  {
    "text": "in-built secrets management this protects our access tokens and api keys from",
    "start": "1776559",
    "end": "1783440"
  },
  {
    "text": "being rendered to yaml and available even ephemerally in some location",
    "start": "1783440",
    "end": "1788799"
  },
  {
    "text": "and cdks doesn't have that just as plummy doesn't have it when we render to yaml2 so it could be a good idea to install",
    "start": "1788799",
    "end": "1795679"
  },
  {
    "text": "and edit the cluster api and the providers via pollumi",
    "start": "1795679",
    "end": "1801360"
  },
  {
    "text": "but then use cd kits and polymer's abstractions to generate the gamma to define each unique",
    "start": "1801360",
    "end": "1806880"
  },
  {
    "text": "cluster that's up to you",
    "start": "1806880",
    "end": "1811200"
  },
  {
    "text": "and i'd like to see more use of open policy agent for testing the clusters that we are creating",
    "start": "1814000",
    "end": "1822399"
  },
  {
    "text": "the plumbing sdk that i've provided applies some basic tests to ensure that all of",
    "start": "1822399",
    "end": "1828480"
  },
  {
    "text": "the feature gates are interpolated before they hit your management cluster but there's a lot more that we can do",
    "start": "1828480",
    "end": "1833679"
  },
  {
    "text": "there too and i'd like to see more providers i'd like types generated for aws",
    "start": "1833679",
    "end": "1840240"
  },
  {
    "text": "and for gcp and maybe even oracle cloud who knows",
    "start": "1840240",
    "end": "1845919"
  },
  {
    "text": "and i think what we really need is more abstractions more helper",
    "start": "1847360",
    "end": "1854000"
  },
  {
    "text": "functions to create unique cluster configurations for machine learning for computer",
    "start": "1854000",
    "end": "1860799"
  },
  {
    "text": "intensive workloads for stateful workloads more abstractions and higher level functions that can make all of our lives",
    "start": "1860799",
    "end": "1867279"
  },
  {
    "text": "easier one of the really good things about cluster api is cluster resources",
    "start": "1867279",
    "end": "1874480"
  },
  {
    "text": "the ability in the management cluster to say when we have a new healthy cluster created",
    "start": "1874480",
    "end": "1880080"
  },
  {
    "text": "we should go and apply a set of resources these are a little finicky to work with",
    "start": "1880080",
    "end": "1885760"
  },
  {
    "text": "because you have to actually encapsulate the deployments the services the conflict maps the secrets for those",
    "start": "1885760",
    "end": "1892320"
  },
  {
    "text": "individual workloads and to a conflict map itself and this is exactly where abstractions",
    "start": "1892320",
    "end": "1899279"
  },
  {
    "text": "like this can make our lives easier so that's my talk i hope i've given you",
    "start": "1899279",
    "end": "1906799"
  },
  {
    "text": "some food for thought not only does the tooling that i've shown today for cluster api",
    "start": "1906799",
    "end": "1913840"
  },
  {
    "text": "exists and can better our lives but it's not confined to cluster api either there's no reason",
    "start": "1913840",
    "end": "1920080"
  },
  {
    "text": "we can't use cdks and pollumi across our entire deployment surface for kubernetes",
    "start": "1920080",
    "end": "1926000"
  },
  {
    "text": "so there's still a lot to be done a lot of challenges to solve and a lot",
    "start": "1926000",
    "end": "1931840"
  },
  {
    "text": "of things we can make simpler i can't wait to see what you do with it",
    "start": "1931840",
    "end": "1938240"
  },
  {
    "text": "best of luck have a great day",
    "start": "1938240",
    "end": "1945760"
  }
]