[
  {
    "text": "welcome to so you want to run vault on kubernetes or in kubernetes depending on",
    "start": "79",
    "end": "5730"
  },
  {
    "text": "your preposition choice I know some people are still filtering in if you have empty seats next to you please help",
    "start": "5730",
    "end": "11160"
  },
  {
    "text": "people find a seat thank you all so much for coming I realize that this is an odd",
    "start": "11160",
    "end": "16529"
  },
  {
    "text": "time for some of you you're very hungry and for some of you you're very tired because you just ate so it's the ideal",
    "start": "16529",
    "end": "22500"
  },
  {
    "text": "conference talk spot it's not my name is Seth I'm a developer advocate at Google",
    "start": "22500",
    "end": "28340"
  },
  {
    "text": "prior to Google I worked at companies like hoshi corbin chef you might recognize me from the devops forces a",
    "start": "28340",
    "end": "34980"
  },
  {
    "text": "story series that's pretty popular I swear I own more than one shirt but this",
    "start": "34980",
    "end": "40079"
  },
  {
    "text": "is also the shirt that I wear in that series you can find me on Twitter my DMS are open I'm pretty good at responding",
    "start": "40079",
    "end": "46469"
  },
  {
    "text": "to people although I've been drowning in messages at cube con thank you all so much for reaching out my twitter handle",
    "start": "46469",
    "end": "53430"
  },
  {
    "text": "will be on all of the slides if you have a question or if you want to DM me because you don't feel comfortable asking it publicly feel free to do so so",
    "start": "53430",
    "end": "62039"
  },
  {
    "text": "we have a decent amount of content to cover today and I promise live demos so we'll get there",
    "start": "62039",
    "end": "67640"
  },
  {
    "text": "first we're gonna talk about vault I imagine that because most of you were in this room you have a good",
    "start": "67640",
    "end": "73049"
  },
  {
    "text": "understanding of what vol day's for those of you that don't I'm gonna give you kind of a very quick crash course but the majority of this talk is going",
    "start": "73049",
    "end": "78930"
  },
  {
    "text": "to focus on vault in kubernetes I just want to set a really strong base ground then we'll start with really part one",
    "start": "78930",
    "end": "84330"
  },
  {
    "text": "which is how do you run vault on kubernetes maybe you're a security team or security architect and you want to provide vault to your team as a service",
    "start": "84330",
    "end": "91320"
  },
  {
    "text": "how do you run this thing on kubernetes then we're going to switch gears and we're gonna put our developer or",
    "start": "91320",
    "end": "96689"
  },
  {
    "text": "operator hat on and we're gonna say okay I'm a person who needs to get secrets from vault and I'm running my",
    "start": "96689",
    "end": "102060"
  },
  {
    "text": "applications and services on kubernetes how do I authenticate how do I get access to the secrets I need so two",
    "start": "102060",
    "end": "107820"
  },
  {
    "text": "different trains of thoughts there'll be a very clear logical switch where we take off our security architect hat and",
    "start": "107820",
    "end": "112920"
  },
  {
    "text": "put on our developer hat and how do we configure vault best to run in that architecture and how do we connect to it",
    "start": "112920",
    "end": "119399"
  },
  {
    "text": "in kind of the the best secure way or the most secure way so with that let's",
    "start": "119399",
    "end": "124439"
  },
  {
    "text": "go ahead and get started part one we're gonna talk about volt and again I'm gonna do this very quickly so I apologize if you're already familiar",
    "start": "124439",
    "end": "130200"
  },
  {
    "text": "with vault you can fall asleep for two minutes if you're not familiar with the ball gonna go very quickly just to get everyone on the same baseline so what is",
    "start": "130200",
    "end": "138870"
  },
  {
    "text": "a secret we have kubernetes secrets that's not really what I'm talking about here what what is a secret and there's",
    "start": "138870",
    "end": "144960"
  },
  {
    "text": "kind of two ways that we can think about secrets the first is that anything that can be used to authenticate or authorize most obvious example username and",
    "start": "144960",
    "end": "151680"
  },
  {
    "text": "password an API key TLS certificate but then there's this kind of third or",
    "start": "151680",
    "end": "157290"
  },
  {
    "text": "second classification of secret things like a credit card number a social security number a passport number and then there's a third classification of",
    "start": "157290",
    "end": "163530"
  },
  {
    "text": "secret that are context dependent things like a phone number an email address a home address and all of these are really",
    "start": "163530",
    "end": "171000"
  },
  {
    "text": "dependent on your business so your definition of a secret if you work for the federal government might be",
    "start": "171000",
    "end": "176610"
  },
  {
    "text": "different than a startups definition of a secret if you run the world's largest online cat meme website email addresses",
    "start": "176610",
    "end": "185130"
  },
  {
    "text": "are probably not something that you protect and encrypt right that's just a byproduct of the service you're offering but if you're a company like MailChimp",
    "start": "185130",
    "end": "191520"
  },
  {
    "text": "or a mailing list server that's critical to your business do you likely treat those email addresses with a little bit",
    "start": "191520",
    "end": "196830"
  },
  {
    "text": "more scrutiny and a little bit more security so when we accept the fact that",
    "start": "196830",
    "end": "201870"
  },
  {
    "text": "every organizations definition of a secret is slightly different we need a tool that's kind of flexible so there",
    "start": "201870",
    "end": "208170"
  },
  {
    "text": "are a lot of questions that come up when we're choosing those tools like how does an application get access to a secret",
    "start": "208170",
    "end": "213480"
  },
  {
    "text": "and he's an API key to talk to some third-party service or it needs a database username and password but at",
    "start": "213480",
    "end": "220290"
  },
  {
    "text": "the same time humans also need access to those things right a local developer might be trying something out on their console or doing local development they",
    "start": "220290",
    "end": "227310"
  },
  {
    "text": "need access to the staging or the testing database to make sure that their query is going to operate successfully so how do we have both applications",
    "start": "227310",
    "end": "233160"
  },
  {
    "text": "services computers and humans access those same secrets and then secrets are",
    "start": "233160",
    "end": "241410"
  },
  {
    "text": "not static I know this might be a shock to some of you but they're dynamic I like to say that secrets are like IP",
    "start": "241410",
    "end": "246510"
  },
  {
    "text": "addresses they come and go with the tides so how do we update them over time maybe we're updating daily weekly you",
    "start": "246510",
    "end": "253410"
  },
  {
    "text": "know by annually but how do we update them and how do we ensure that that update is propagated across all of our systems when it's leaked how do we",
    "start": "253410",
    "end": "260970"
  },
  {
    "text": "revoke it someone accidentally pushed something to a source control repository that's publicly accessible how do we",
    "start": "260970",
    "end": "266460"
  },
  {
    "text": "were credential and then given all of that how do we know who's accessing your crunching credential where they're",
    "start": "266460",
    "end": "272530"
  },
  {
    "text": "accessing it from how they're accessing it is it still in use and what do we do in a compromise what is our break glass",
    "start": "272530",
    "end": "278259"
  },
  {
    "text": "situation we have an Ashley Madison style breach we know that we are hemorrhaging data it's better to incur",
    "start": "278259",
    "end": "285759"
  },
  {
    "text": "downtime than it is to continue giving away our data to attackers how on earth do we do that",
    "start": "285759",
    "end": "291370"
  },
  {
    "text": "do we SSH into a thousand systems do we just unplug the cord like what is our break last scenario so volt aims to be a",
    "start": "291370",
    "end": "298930"
  },
  {
    "text": "single source of secrets that provides both machine and human based access so machines can authenticate via things",
    "start": "298930",
    "end": "304419"
  },
  {
    "text": "like the API and humans can interact via things like the CLI or the API if they",
    "start": "304419",
    "end": "310030"
  },
  {
    "text": "prefer and most importantly it's designed to be cloud friendly so there are a lot of Secrets management",
    "start": "310030",
    "end": "315039"
  },
  {
    "text": "solutions out there vault happens to be open-source and built for the cloud era meaning it doesn't require like a",
    "start": "315039",
    "end": "320529"
  },
  {
    "text": "hardware source of entropy like an HSM so you can run this in any major cloud provider or on-premise if you'd like",
    "start": "320529",
    "end": "327629"
  },
  {
    "text": "data is encrypted in transit with TLS 1 2 or later and it's encrypted at rest",
    "start": "327629",
    "end": "332830"
  },
  {
    "text": "with the latest cipher suites and it operates on a hierarchical key value store so if you're familiar with like",
    "start": "332830",
    "end": "339159"
  },
  {
    "text": "GCS or s3 where you know you have folders but they're not really folders",
    "start": "339159",
    "end": "344199"
  },
  {
    "text": "that's kind of how volt is structured as well so here's a quick example of interacting with vault on the CLI this",
    "start": "344199",
    "end": "351190"
  },
  {
    "text": "is an example of putting some data into vault and retrieving that data back out this is using volts key value store it's",
    "start": "351190",
    "end": "357250"
  },
  {
    "text": "just think of it like encrypted Redis or encrypted memcached I put plaintext data in vault encrypts it and trans it with",
    "start": "357250",
    "end": "363550"
  },
  {
    "text": "TLS and at rest and then when I want that data back out I authenticate and authorize to retrieve the plaintext data",
    "start": "363550",
    "end": "370919"
  },
  {
    "text": "everything that you do with the vault CL is also available via the API that's going to be really important when we start talking about how pods and",
    "start": "370919",
    "end": "376960"
  },
  {
    "text": "services are going to get access to these credentials so here's that same thing but done via the API using curl so",
    "start": "376960",
    "end": "383440"
  },
  {
    "text": "here you can see that same exact thing slightly less of a nice human experience",
    "start": "383440",
    "end": "388629"
  },
  {
    "text": "because this is designed for machines and computers so we don't have as nice of a UX here but all of the things that",
    "start": "388629",
    "end": "394839"
  },
  {
    "text": "we can do be the CLI we can also do via the API and the reason for that is that the CLI just a very thin wrapper around the API",
    "start": "394839",
    "end": "400690"
  },
  {
    "text": "itself so what happens in these break",
    "start": "400690",
    "end": "406210"
  },
  {
    "text": "glass scenarios these are real situations that people have encountered you know an operator accidentally copies",
    "start": "406210",
    "end": "411880"
  },
  {
    "text": "passwords text from the remote server onto their local machine during debugging an application logs its",
    "start": "411880",
    "end": "417400"
  },
  {
    "text": "database credentials to disk as part of a routine debug or a stack trace you have a rogue package like I don't know",
    "start": "417400",
    "end": "424750"
  },
  {
    "text": "maybe in the NPM ecosystem that dumps your entire applications environments to some HTTP web server to do Bitcoin",
    "start": "424750",
    "end": "429820"
  },
  {
    "text": "mining or a server includes an API token in a diagnostic output right because a",
    "start": "429820",
    "end": "435190"
  },
  {
    "text": "lot of these things are kind of insecure by default we want to do our best to prevent this from happening but we also",
    "start": "435190",
    "end": "441010"
  },
  {
    "text": "have to accept the reality that it's going to happen the unfortunate reality is that these are very real things that happen every single day so we also need",
    "start": "441010",
    "end": "448450"
  },
  {
    "text": "a plan for recovering for when these bad things happen and we like to call this like a break glass procedure another way",
    "start": "448450",
    "end": "456940"
  },
  {
    "text": "of all gets around this is that in addition to having a kind of scat a static key value store again think encrypted reticent cryptid memcached it",
    "start": "456940",
    "end": "463360"
  },
  {
    "text": "also has this concept of dynamic secrets and this is where I like to challenge people to think of secrets like IP addresses just like when your laptop or",
    "start": "463360",
    "end": "470620"
  },
  {
    "text": "your mobile phone connects to this conference Wi-Fi you get an IP address from a DHCP server that's unique to you",
    "start": "470620",
    "end": "476010"
  },
  {
    "text": "when applications or humans connect to volt and asked for a credential they get a credential that's unique to them and",
    "start": "476010",
    "end": "481420"
  },
  {
    "text": "just like no two of you were sharing the same IP address no two instances of your applications are staring sharing the same database credential so it's a",
    "start": "481420",
    "end": "488110"
  },
  {
    "text": "broker in a sense for secrets this means that we have unique credentials which give us a very very tight audit trail",
    "start": "488110",
    "end": "493900"
  },
  {
    "text": "between all of our services we know exactly which instance of an application is using a particular credential and we can quickly revoke just that credential",
    "start": "493900",
    "end": "500770"
  },
  {
    "text": "without taking down our entire system just like IP addresses have a least those secrets also have a lease they",
    "start": "500770",
    "end": "507370"
  },
  {
    "text": "don't live forever in addition to getting the credential you also get time to use that credential often called a",
    "start": "507370",
    "end": "512440"
  },
  {
    "text": "TTL and after that TTL expires you have to go back and get another credential or you have to renew the existing",
    "start": "512440",
    "end": "518440"
  },
  {
    "text": "credential and ask Walt to continue using it and access can be revoked early",
    "start": "518440",
    "end": "524050"
  },
  {
    "text": "earlier than that TTL in the event of a breach and again because we're issuing very specific like principle of least",
    "start": "524050",
    "end": "530890"
  },
  {
    "text": "privilege style tokens and policies when we were voc we're less likely to like take down all of",
    "start": "530890",
    "end": "536410"
  },
  {
    "text": "production because we're not sharing one database password across all of our services instead we're sharing nothing",
    "start": "536410",
    "end": "541569"
  },
  {
    "text": "essentially so with this dynamic secrets what happens is a human or a machine",
    "start": "541569",
    "end": "548370"
  },
  {
    "text": "authenticates to vault and request some credentials vault then acts as a broker it audits that request and then connects",
    "start": "548370",
    "end": "555490"
  },
  {
    "text": "to that third-party service that could be something like a Postgres or my sequel database it could be an Oracle database it could also be something like",
    "start": "555490",
    "end": "562529"
  },
  {
    "text": "Google Cloud we can generate iam credentials or Amazon we can generate access key pairs dynamically on the fly",
    "start": "562529",
    "end": "568420"
  },
  {
    "text": "it connects to that third party system whatever it might be generates the credentials and returns",
    "start": "568420",
    "end": "573670"
  },
  {
    "text": "them to the requester assuming they've been authorized and it audits that request each time the requester requests",
    "start": "573670",
    "end": "580660"
  },
  {
    "text": "new credentials they get a different set of credentials so if you imagine your application boots the first thing that",
    "start": "580660",
    "end": "586149"
  },
  {
    "text": "does is authenticates to vault vault then goes out to whatever services you need Postgres my sequel creates the user",
    "start": "586149",
    "end": "593350"
  },
  {
    "text": "for you returns a unique username and password your app then uses that for its lifetime so here are some of the",
    "start": "593350",
    "end": "600490"
  },
  {
    "text": "examples of what we call the secrets engines or the dynamic secrets engines that allow us to generate these dynamic",
    "start": "600490",
    "end": "606279"
  },
  {
    "text": "credentials so there are major cloud providers google AWS asher pretty much",
    "start": "606279",
    "end": "612040"
  },
  {
    "text": "every sequel standard database as well as things like Oracle and MongoDB and then I have this category of other",
    "start": "612040",
    "end": "617709"
  },
  {
    "text": "because I don't know where to put them right things like rabbitmq TLS what can actually act as your TLS root or",
    "start": "617709",
    "end": "623529"
  },
  {
    "text": "intermediary it can also manage SSH access for you so instead of copying around authorized keys files and stuff",
    "start": "623529",
    "end": "629529"
  },
  {
    "text": "like that you can use and delegate that to vault things like Active Directory etc so I understand this was very quick",
    "start": "629529",
    "end": "636850"
  },
  {
    "text": "so if you're new to vault this is really the slide that matters is that vault",
    "start": "636850",
    "end": "641949"
  },
  {
    "text": "provides authentication authorization and auditing and it is a broker for secrets management so vault clients",
    "start": "641949",
    "end": "648670"
  },
  {
    "text": "those gonna be humans or machines provide some sort of identity that identity is mapped to policy that policy",
    "start": "648670",
    "end": "655000"
  },
  {
    "text": "then authorizes them to access as euro or more secrets and from there every secret that they access in every",
    "start": "655000",
    "end": "660430"
  },
  {
    "text": "operation they perform is audited and that audit log is a rich audit log that's by default under JSON format",
    "start": "660430",
    "end": "666670"
  },
  {
    "text": "so you can parse that and feed that into any logging or anomaly detection software that you have so that's a very",
    "start": "666670",
    "end": "672760"
  },
  {
    "text": "quick overview of vault so how do you run this thing on kubernetes right so",
    "start": "672760",
    "end": "679180"
  },
  {
    "text": "I'm sold on this idea of dynamic secrets I'm sold on a bunch of vault features we didn't talk about like Shamir secret",
    "start": "679180",
    "end": "684790"
  },
  {
    "text": "sharing or my boss just told me that I have to figure this out and I came to this talk so how do I run followed on",
    "start": "684790",
    "end": "690880"
  },
  {
    "text": "kubernetes well vole operates in a client-server architecture so clients are the the local machines and the",
    "start": "690880",
    "end": "696130"
  },
  {
    "text": "humans that are accessing the server and then volt itself runs as a stateful service in high availability mode or not",
    "start": "696130",
    "end": "703480"
  },
  {
    "text": "high availability mode but you should run in high availability mode so this architecture diagram shows how we would",
    "start": "703480",
    "end": "709030"
  },
  {
    "text": "do it on Google particularly google kubernetes engine but you could replace these and we'll talk about the",
    "start": "709030",
    "end": "714190"
  },
  {
    "text": "individual components in later slides here so you run vault in high availability mode you put it behind a",
    "start": "714190",
    "end": "719980"
  },
  {
    "text": "load balancer it's your choice of whether that load balancer is public facing or private facing and then from there you use a",
    "start": "719980",
    "end": "726370"
  },
  {
    "text": "highly available storage back-end and you use a vault auto unsealing for extra availability and all of that runs on top",
    "start": "726370",
    "end": "732160"
  },
  {
    "text": "of kubernetes which gets us really cool things like Auto restarting in the event of failure it can help us spread our",
    "start": "732160",
    "end": "737260"
  },
  {
    "text": "vault nodes our vault services across multiple nodes so if one of those physical VMs dies we still have",
    "start": "737260",
    "end": "743170"
  },
  {
    "text": "availability and it can help us Auto scale if needed so what are some",
    "start": "743170",
    "end": "749530"
  },
  {
    "text": "highlights from this architecture so the first and this is where I get contention is a dedicated kubernetes cluster so",
    "start": "749530",
    "end": "757180"
  },
  {
    "text": "vault should always run in a dedicated kubernetes cluster which access is tightly controlled ideally by your",
    "start": "757180",
    "end": "763630"
  },
  {
    "text": "security architects or your security team no other apps or services run in this cluster",
    "start": "763630",
    "end": "769360"
  },
  {
    "text": "now I know some ones are like what about namespaces I'm very adamant and this is my opinion that you should run into",
    "start": "769360",
    "end": "776400"
  },
  {
    "text": "difficulties am space --is but it's up to you it's my recommendation that you",
    "start": "776400",
    "end": "782230"
  },
  {
    "text": "run in as a dedicated cluster and I'll talk about that a little bit more in a bit you want to use a highly available",
    "start": "782230",
    "end": "787510"
  },
  {
    "text": "storage back-end for volts so vault has a number of different places that it can store data they're all pluggable so you",
    "start": "787510",
    "end": "794050"
  },
  {
    "text": "have things like Google Cloud spanner Google Cloud Storage Amazon s3 Amazon DynamoDB the file system in mem",
    "start": "794050",
    "end": "800470"
  },
  {
    "text": "and each of those storage backends has different functionality that they expose some are faster than others some have",
    "start": "800470",
    "end": "806770"
  },
  {
    "text": "this ability to support transactional interfaces some have support for high availability the one that you're looking",
    "start": "806770",
    "end": "812950"
  },
  {
    "text": "for particularly is support for high availability you want to be able to run vault in highly available modes even",
    "start": "812950",
    "end": "818230"
  },
  {
    "text": "though you're running under kubernetes you want to have multiple nodes running simultaneously additionally you're going",
    "start": "818230",
    "end": "824890"
  },
  {
    "text": "to want to use a canvas based auto one sealer or if you're running on prem kubernetes you can use an HSM based auto",
    "start": "824890",
    "end": "831400"
  },
  {
    "text": "on sealer as well this is used to be an enterprise feature this used to be a paid feature it's now open source and",
    "start": "831400",
    "end": "837250"
  },
  {
    "text": "vault 1.0 you can use the open source version of vault to do auto on ceilings",
    "start": "837250",
    "end": "842830"
  },
  {
    "text": "via KMS so what this means is when a new server comes online it can join the cluster by using stores that using keys",
    "start": "842830",
    "end": "850210"
  },
  {
    "text": "that have been encrypted with a kms provider like Google Cloud kms or Amazon kms the next thing you're gonna want to",
    "start": "850210",
    "end": "860350"
  },
  {
    "text": "do is you're gonna want to use a custom certificate authority for TLS absolutely under no situation should you ever",
    "start": "860350",
    "end": "866470"
  },
  {
    "text": "communicate the vault over anything other than TLS 1.2 or higher",
    "start": "866470",
    "end": "871900"
  },
  {
    "text": "I generally use a custom CA because it's flexible it gives you an additional level of trust because you can say never",
    "start": "871900",
    "end": "878200"
  },
  {
    "text": "trust the system certs only trust this certificate so you get kind of client and server-side validation you could",
    "start": "878200",
    "end": "883540"
  },
  {
    "text": "replace this with your own trusted PKI infrastructure or you could delegate to something like let's encrypt but you",
    "start": "883540",
    "end": "889960"
  },
  {
    "text": "definitely want to use TLS you're gonna want to use l4 for load balancing instead of l7 for load balancing the",
    "start": "889960",
    "end": "897010"
  },
  {
    "text": "primary reason for this is that it delegates the TLS termination to volt and one of the ways in which machines",
    "start": "897010",
    "end": "903070"
  },
  {
    "text": "can authenticate default is with TLS so they can present what's called a client certificate and we can do mutual TLS",
    "start": "903070",
    "end": "908560"
  },
  {
    "text": "authentication if you're doing TLS termination at an l7 load balancer it's going to terminate that connection and",
    "start": "908560",
    "end": "914440"
  },
  {
    "text": "then that client certificate is not going to be passed along to vault or if it is it's going to require a lot of additional configuration in that load",
    "start": "914440",
    "end": "920230"
  },
  {
    "text": "balancer so the l4 load balancer is going to be a little bit faster for us because we're the TCP layer instead of",
    "start": "920230",
    "end": "925330"
  },
  {
    "text": "the HTTP layer and it gives vault a lot more control over that connection and",
    "start": "925330",
    "end": "930720"
  },
  {
    "text": "then going back to why I think you should run vault is a dedicated is volt is available via like that load",
    "start": "930720",
    "end": "937760"
  },
  {
    "text": "balancer IP or DNS address you don't actually want to expose vault or it's my recommendation that you don't expose",
    "start": "937760",
    "end": "943910"
  },
  {
    "text": "vault through the standard kubernetes service discovery interfaces or any of the ecosystem tools that help discover",
    "start": "943910",
    "end": "949850"
  },
  {
    "text": "services and route to services in kubernetes the reason for this is twofold",
    "start": "949850",
    "end": "954920"
  },
  {
    "text": "it makes signing those certificates very difficult because again you're not delegating to the load balancer you're delegating TLS to volt so now you need",
    "start": "954920",
    "end": "960920"
  },
  {
    "text": "to know every possible DNS address and IP that the cert needs to respond to to put it in the San list but at the same",
    "start": "960920",
    "end": "967970"
  },
  {
    "text": "time this practice really keeps vault flexible in the future your company",
    "start": "967970",
    "end": "973820"
  },
  {
    "text": "might want to migrate vault to a different service they might move from you know kubernetes to some crazy new",
    "start": "973820",
    "end": "980570"
  },
  {
    "text": "cluster scheduler that exists in ten years and if you're relying on the kubernetes specific features that migration path is more difficult so",
    "start": "980570",
    "end": "987170"
  },
  {
    "text": "instead I like to tell people hey think of kubrick Inc think of vault as like this thing that exists in an IP address",
    "start": "987170",
    "end": "992650"
  },
  {
    "text": "when you're providing it to a service for your internal users and then on top",
    "start": "992650",
    "end": "1000040"
  },
  {
    "text": "of all of that and this is the last reason why I say you should run into a dedicated cluster is that you want to",
    "start": "1000040",
    "end": "1005380"
  },
  {
    "text": "harden that cluster it these particular cluster hardening techniques might be too rigorous for",
    "start": "1005380",
    "end": "1011920"
  },
  {
    "text": "your application clusters but by running vault in a dedicated cluster you can really lock it down to just the minimum",
    "start": "1011920",
    "end": "1017650"
  },
  {
    "text": "viable set of things so things like TLS for everything disabling HDD basic off",
    "start": "1017650",
    "end": "1022780"
  },
  {
    "text": "and HTTP client off disabling the kubernetes dashboard making sure a back is off only using our back enabling pod",
    "start": "1022780",
    "end": "1028750"
  },
  {
    "text": "security policies if you're running on a recent version of kubernetes network policies etc if you're running vault in",
    "start": "1028750",
    "end": "1035140"
  },
  {
    "text": "a shared cluster you may not be able to enable these things because you might have applications that depend on these insecure functionalities so that's",
    "start": "1035140",
    "end": "1041829"
  },
  {
    "text": "another reason why it's beneficial to run it in a dedicated cluster so when",
    "start": "1041829",
    "end": "1047589"
  },
  {
    "text": "you run vault you're gonna want to run all want to run it as a deployment or a stateful set previous previously I was",
    "start": "1047589",
    "end": "1055540"
  },
  {
    "text": "kind of advocating for a stateful set we've been able to make it work very well with a deployment so just a little",
    "start": "1055540",
    "end": "1060670"
  },
  {
    "text": "bit faster to do it via a deployment but you can use a stateful set as well",
    "start": "1060670",
    "end": "1066930"
  },
  {
    "text": "we're definitely gonna want to use anti affinity by default kubernetes is gonna the scheduler is gonna bin pack all of",
    "start": "1067140",
    "end": "1072929"
  },
  {
    "text": "our nodes so if we say hey run five vault nodes it's gonna put all five of them on the first VM and that's really not what we want right because if that",
    "start": "1072929",
    "end": "1078870"
  },
  {
    "text": "VM dies we've taken our entire cluster offline so we can leverage pot anti affinity and this example I've used",
    "start": "1078870",
    "end": "1084660"
  },
  {
    "text": "preferred but you could also have required where we want to spread those pods across as many VMs as possible so",
    "start": "1084660",
    "end": "1090780"
  },
  {
    "text": "if I have a node pool of say 10 VMs I want one volt running on each of them",
    "start": "1090780",
    "end": "1095940"
  },
  {
    "text": "not you know 10 volts running on the first one that just gives me some added availability in case one node were to",
    "start": "1095940",
    "end": "1101520"
  },
  {
    "text": "die we want to make sure that we're giving the container IPC lock capabilities if you give vault the",
    "start": "1101520",
    "end": "1107910"
  },
  {
    "text": "ability if you give the the container the ability to do memory locking vault will take advantage of that this is",
    "start": "1107910",
    "end": "1113160"
  },
  {
    "text": "again just an added layer of security vault will do memory locking when doing certain write operations in case someone",
    "start": "1113160",
    "end": "1119370"
  },
  {
    "text": "else is on that process and it's trying to page the memory we're gonna make sure",
    "start": "1119370",
    "end": "1126510"
  },
  {
    "text": "that standbys return an okay status by default when you ask for the health of a",
    "start": "1126510",
    "end": "1131520"
  },
  {
    "text": "volt standby it'll say it will return a non 200 status code and we're also going to allow uninitialized nodes to join our",
    "start": "1131520",
    "end": "1138210"
  },
  {
    "text": "cluster and that's solely so that we can route to them for the initial bootstrapping which I'll show in a",
    "start": "1138210",
    "end": "1143280"
  },
  {
    "text": "minute and then we want to load balancer and I'm not very opinionated on this this is",
    "start": "1143280",
    "end": "1150480"
  },
  {
    "text": "really up to you and your security team in this example I'm using a public facing load balancer with the load balancer service you could be using an",
    "start": "1150480",
    "end": "1156720"
  },
  {
    "text": "internal load balancer or you could be using annotations to get this you should be using a load balancer though at no",
    "start": "1156720",
    "end": "1163200"
  },
  {
    "text": "point should you ever talk directly to a vault pod you should always be going directly through a load balancer whether",
    "start": "1163200",
    "end": "1168720"
  },
  {
    "text": "that's private or public that's entirely up to the security policies of your organization so what does this vault",
    "start": "1168720",
    "end": "1176130"
  },
  {
    "text": "configuration look like so this is where people get confused there's two adder",
    "start": "1176130",
    "end": "1181799"
  },
  {
    "text": "configurations involved there's this thing called the API adder and this thing called the cluster adder the API",
    "start": "1181799",
    "end": "1187140"
  },
  {
    "text": "adder is set to the load balancers address the API adder is what volt advertises that things should connect to",
    "start": "1187140",
    "end": "1192750"
  },
  {
    "text": "it as so this is the load balancer because you should always go through the load balancer the cluster adder is where",
    "start": "1192750",
    "end": "1198750"
  },
  {
    "text": "volt advertises to it piers where it lives and this is the pods IP address so this is a key thing",
    "start": "1198750",
    "end": "1205240"
  },
  {
    "text": "if you're gonna take a picture of any slide you want to take a picture of this slide and the way you get the pods IP address is using fuel graphs so you can",
    "start": "1205240",
    "end": "1212230"
  },
  {
    "text": "actually get that directly from a gamble spec and I'll show an example of this in a second",
    "start": "1212230",
    "end": "1218460"
  },
  {
    "text": "you're gonna want to bind to the pods IP address when you listen as well and then",
    "start": "1218460",
    "end": "1224290"
  },
  {
    "text": "optionally you might want to listen on local host without TLS this is useful if you're kind of getting started learning",
    "start": "1224290",
    "end": "1230200"
  },
  {
    "text": "about vault because you can exec it into the pod and run volt commands directly without having to set a bunch of environment variables or specify flags",
    "start": "1230200",
    "end": "1236830"
  },
  {
    "text": "or disable TLS verification as I said before you're going to use a chase",
    "start": "1236830",
    "end": "1242530"
  },
  {
    "text": "storage so here's two examples there are many storage backends that support high availability and you'll want to leverage",
    "start": "1242530",
    "end": "1249460"
  },
  {
    "text": "vault one datos Auto one stealing if you're running a version of vault that's pretty well known oh I had that",
    "start": "1249460",
    "end": "1254980"
  },
  {
    "text": "recommend you upgrade there's a lot of new features but this is one of the best ones so what this will do is it'll store",
    "start": "1254980",
    "end": "1260080"
  },
  {
    "text": "our auto or unseal keys in vault encrypted by kms and when a new node joins the cluster assuming it has access",
    "start": "1260080",
    "end": "1266290"
  },
  {
    "text": "to that KMS key it will automatically join so now we'll do a demo who's",
    "start": "1266290",
    "end": "1273190"
  },
  {
    "text": "excited there's one person that's excited that's cool all right so let's",
    "start": "1273190",
    "end": "1284680"
  },
  {
    "text": "take a look at some Hamel so this is the",
    "start": "1284680",
    "end": "1289840"
  },
  {
    "text": "full expanded kind of PMO's what I just showed you there's our load balancer obviously the",
    "start": "1289840",
    "end": "1295330"
  },
  {
    "text": "IP is different one of the things I don't talk about in the slide is that I'm binding kind of mapping port 443",
    "start": "1295330",
    "end": "1301180"
  },
  {
    "text": "which is a standard ssl port to port 8200 I'm up in the air of whether I want",
    "start": "1301180",
    "end": "1306430"
  },
  {
    "text": "to call this a best practice the reason I do this is that most hotel and conference Wi-Fi doesn't allow access on",
    "start": "1306430",
    "end": "1312070"
  },
  {
    "text": "random ports so 443 is a safe one the second is that I work with a lot of enterprises and it's actually really",
    "start": "1312070",
    "end": "1317800"
  },
  {
    "text": "hard for them to open up ports and four four three is also always open so especially if you're doing a hybrid called multi Club thing 443 is like less",
    "start": "1317800",
    "end": "1324970"
  },
  {
    "text": "likely to run into just weird security issues that you might pop up or weird firewall rules so here I'm using a",
    "start": "1324970",
    "end": "1331990"
  },
  {
    "text": "deployment I'm deploying three vault nodes again there's our anti",
    "start": "1331990",
    "end": "1337060"
  },
  {
    "text": "affinity rules here I'm running vault 1.0 directly from docker hub with the server there's that IPC lock capability",
    "start": "1337060",
    "end": "1344110"
  },
  {
    "text": "the container itself is still running on 80 280 201 for the cluster ports some",
    "start": "1344110",
    "end": "1349510"
  },
  {
    "text": "memory requests we give it our TLS certificates here's that field graph I talked about before and then here's how you reference",
    "start": "1349510",
    "end": "1357040"
  },
  {
    "text": "that field raft by deploying applying the configuration directly in the pods back so kubernetes will actually",
    "start": "1357040",
    "end": "1362920"
  },
  {
    "text": "interpolate that for us and we don't need you to use helm or another like template provider for this GCS tcp",
    "start": "1362920",
    "end": "1371080"
  },
  {
    "text": "listeners and again i'm also listening on localhost just for debug ability and then at the very bottom here we have our readiness probe and we mount our TLS",
    "start": "1371080",
    "end": "1377260"
  },
  {
    "text": "cluster this is all open source it's on github I'll tweet out the link in a bit because I know I'm going kind of fast so",
    "start": "1377260",
    "end": "1385260"
  },
  {
    "text": "config get context alright so I'm going to apply that mmm and here's hoping for",
    "start": "1385260",
    "end": "1397270"
  },
  {
    "text": "conference Wi-Fi you can do it so while",
    "start": "1397270",
    "end": "1404680"
  },
  {
    "text": "this is going what's actually happening is it's attempting to post this pod spec",
    "start": "1404680",
    "end": "1412030"
  },
  {
    "text": "to the Internet it's happening it's happening or it's not happening",
    "start": "1412030",
    "end": "1422460"
  },
  {
    "text": "it's fine",
    "start": "1426610",
    "end": "1429390"
  },
  {
    "text": "this is like the awkward silence of live demos okay well we'll move on so",
    "start": "1433600",
    "end": "1443740"
  },
  {
    "text": "hopefully that will be done when we get back but the next section is all about connecting develop from kubernetes so",
    "start": "1443740",
    "end": "1450960"
  },
  {
    "text": "hopefully when I come back that we'll be running and let's imagine now like let's",
    "start": "1450960",
    "end": "1456340"
  },
  {
    "text": "completely forget that volt is running under kubernetes like it could be running on Heroku or on premise like",
    "start": "1456340",
    "end": "1462700"
  },
  {
    "text": "it's just a thing in an IP address again this is why the load balancer and dedicated cluster is so important so",
    "start": "1462700",
    "end": "1468340"
  },
  {
    "text": "forget everything again imagine that it's like a SAS that's provided to you and the kubernetes is just an",
    "start": "1468340",
    "end": "1473950"
  },
  {
    "text": "implementation detail and I really think that this is the best way that organizations should think about running vaults don't expose it through",
    "start": "1473950",
    "end": "1480159"
  },
  {
    "text": "kubernetes don't use kubernetes specific things leverage kubernetes functionality to make vault more available and more",
    "start": "1480159",
    "end": "1485620"
  },
  {
    "text": "resilient but it's just a thing in an IP address so let's talk about this",
    "start": "1485620",
    "end": "1491230"
  },
  {
    "text": "authentication thing so in order for humans or applications and/or to communicate with vault they need this",
    "start": "1491230",
    "end": "1497559"
  },
  {
    "text": "thing called a vault token you can think of it like a session ID or a cookie for a website so just like on a website you",
    "start": "1497559",
    "end": "1502960"
  },
  {
    "text": "give a username and a password and that gives you a cookie a session ID which is stored in a cookie in your browser we need to do the same thing to vault so",
    "start": "1502960",
    "end": "1509169"
  },
  {
    "text": "I'm gonna provide vault some information might be a user name and password vaults gonna verify that with a third party",
    "start": "1509169",
    "end": "1514330"
  },
  {
    "text": "system might be Active Directory assuming that's successful we're gonna do kind of a lookup and the database to",
    "start": "1514330",
    "end": "1520480"
  },
  {
    "text": "see what permissions I have am i have an admin and my general user and then I'm",
    "start": "1520480",
    "end": "1525640"
  },
  {
    "text": "gonna get back a token that has all of those policies map to me in the case of",
    "start": "1525640",
    "end": "1530710"
  },
  {
    "text": "kubernetes we actually use the pod service account specifically the jot token the JWT token for that service",
    "start": "1530710",
    "end": "1536890"
  },
  {
    "text": "account and the token reviewer API so we configure vault to have permissions to",
    "start": "1536890",
    "end": "1542710"
  },
  {
    "text": "talk to the token reviewer API a pod launches grabs its service account from",
    "start": "1542710",
    "end": "1549190"
  },
  {
    "text": "the filesystem usually post that service account Jah token to vault vault verifies the identity of that pod as",
    "start": "1549190",
    "end": "1556360"
  },
  {
    "text": "well as its namespace in the service account with the token a reviewer API assuming that's successful that is then",
    "start": "1556360",
    "end": "1561820"
  },
  {
    "text": "mapped to policy a vault token is then returned to the service account to the pod that requested",
    "start": "1561820",
    "end": "1567160"
  },
  {
    "text": "it and they the pod uses that token for further requests the same way that you would use like a session idea or a",
    "start": "1567160",
    "end": "1572530"
  },
  {
    "text": "cookie to make further requests through the browser okay demo one didn't even finish in my",
    "start": "1572530",
    "end": "1577660"
  },
  {
    "text": "slides tell me I have to do demo two unable to find server can you all do me",
    "start": "1577660",
    "end": "1583870"
  },
  {
    "text": "a favor and make sure you're not on the Wi-Fi pulling like a Steve Jobs here I",
    "start": "1583870",
    "end": "1589620"
  },
  {
    "text": "need everyone off the Wi-Fi",
    "start": "1589620",
    "end": "1593880"
  },
  {
    "text": "let's try the 2.4 gigahertz no one uses 2.4 gigahertz",
    "start": "1599000",
    "end": "1603730"
  },
  {
    "text": "aha don't thank me thank thank 2.4",
    "start": "1608220",
    "end": "1620760"
  },
  {
    "text": "gigahertz all right so we're just waiting for these to boot usually takes about 10 to 15 seconds hopefully",
    "start": "1620760",
    "end": "1629419"
  },
  {
    "text": "hopefully that wasn't just a sporadic success might have been a sporadic",
    "start": "1629419",
    "end": "1637020"
  },
  {
    "text": "success say I normally have a back-up plan for this which is that I tether my",
    "start": "1637020",
    "end": "1642510"
  },
  {
    "text": "phone but I have no service in this room either so it's really exciting let's try",
    "start": "1642510",
    "end": "1648960"
  },
  {
    "text": "it",
    "start": "1648960",
    "end": "1651020"
  },
  {
    "text": "Pam this just ruins everything I promise live demos and I don't have any now",
    "start": "1658220",
    "end": "1664389"
  },
  {
    "text": "okay okay it's still creating this container",
    "start": "1668700",
    "end": "1675679"
  },
  {
    "text": "really",
    "start": "1692030",
    "end": "1694750"
  },
  {
    "text": "I think it got sad okay",
    "start": "1706080",
    "end": "1713179"
  },
  {
    "text": "let's try this again it's going to work",
    "start": "1716150",
    "end": "1723910"
  },
  {
    "text": "because if it doesn't work it's kind of awkward",
    "start": "1725110",
    "end": "1729760"
  },
  {
    "text": "what's that yeah",
    "start": "1751250",
    "end": "1758800"
  },
  {
    "text": "I haven't created a secret yet see y'all are smarter than me",
    "start": "1772650",
    "end": "1778910"
  },
  {
    "text": "what are these named",
    "start": "1791960",
    "end": "1795559"
  },
  {
    "text": "did you do oh that's Niko's geo thank",
    "start": "1809980",
    "end": "1815120"
  },
  {
    "text": "you",
    "start": "1815120",
    "end": "1817330"
  },
  {
    "text": "okay",
    "start": "1833910",
    "end": "1836910"
  },
  {
    "text": "see a dancer wall talkie well that's okay try this again",
    "start": "1840469",
    "end": "1847158"
  },
  {
    "text": "don't thank me it was his idea okay and",
    "start": "1886920",
    "end": "1893140"
  },
  {
    "text": "they're ready now so now what I need to do is in three minutes do the rest of my demo all right so we're gonna initialize",
    "start": "1893140",
    "end": "1900400"
  },
  {
    "text": "this thing so make sure that we can talk to it will run volt status and it'll",
    "start": "1900400",
    "end": "1909460"
  },
  {
    "text": "come back and say hey it's not initialized and it's currently unsealed so what we'll do is we'll run vault operator in it and this will give me my",
    "start": "1909460",
    "end": "1916390"
  },
  {
    "text": "initial root token and five on the steal keys I'm not gonna dive into exactly what those mean but I'm happy to talk about them offline okay cool so I get",
    "start": "1916390",
    "end": "1926380"
  },
  {
    "text": "this initial root token thing and I'm gonna open up my vault m and export that",
    "start": "1926380",
    "end": "1936670"
  },
  {
    "text": "as my volt token and source that again and now when I run vault status we",
    "start": "1936670",
    "end": "1941920"
  },
  {
    "text": "should see that it's initialized and unsealed so initialized is true and sealed is false thanks for double negatives so what I'm gonna do now is",
    "start": "1941920",
    "end": "1948370"
  },
  {
    "text": "I'm going to put a secret in I'm just going to call the secret cube Khan and the message is hello and we can get that",
    "start": "1948370",
    "end": "1958270"
  },
  {
    "text": "secret back out and yeah how many people",
    "start": "1958270",
    "end": "1964300"
  },
  {
    "text": "feel more secure I don't cool so let me switch to again",
    "start": "1964300",
    "end": "1969850"
  },
  {
    "text": "dedicated cluster I'm gonna switch to my other cluster so I have this cluster",
    "start": "1969850",
    "end": "1976990"
  },
  {
    "text": "here called my apps cluster and use context Beck and there's nothing in here",
    "start": "1976990",
    "end": "1986610"
  },
  {
    "text": "hopefully there's nothing in here and be weird alright so there's nothing in this cluster and what I'm going to do is I'm",
    "start": "1986610",
    "end": "1993490"
  },
  {
    "text": "gonna use this fancy script that I wrote because I suck at typing and I'm just gonna walk you through it very quickly",
    "start": "1993490",
    "end": "1999750"
  },
  {
    "text": "so the first thing I'm gonna do is I'm creating a service account and then I'm creating an AR back binding for that",
    "start": "1999750",
    "end": "2006090"
  },
  {
    "text": "service account to be able to talk to the token reviewer API here's where things get a little bit hacky mostly",
    "start": "2006090",
    "end": "2012360"
  },
  {
    "text": "because of a bug in JSON path but I'm getting the token the John token for",
    "start": "2012360",
    "end": "2018090"
  },
  {
    "text": "that secret that we just created for that service account and I'm getting the cluster name from my kubernetes config",
    "start": "2018090",
    "end": "2024030"
  },
  {
    "text": "and the actual host as well as the CA search because those are all things that we give to volt glossing over details",
    "start": "2024030",
    "end": "2029550"
  },
  {
    "text": "here here's the important part we give vault the kubernetes host the IP address to our apps cluster the CA cert",
    "start": "2029550",
    "end": "2036360"
  },
  {
    "text": "to communicate with that cluster and the jot token for the service account which can actually communicate with it took",
    "start": "2036360",
    "end": "2041670"
  },
  {
    "text": "under viewer API vault we'll use those three pieces of information to validate any pod service account that it's given",
    "start": "2041670",
    "end": "2047309"
  },
  {
    "text": "against the token reviewer API next we're just creating a simple policy in volt that lets the secret read-only",
    "start": "2047309",
    "end": "2053878"
  },
  {
    "text": "policy the ability to read from secret and then we create a role in vault where",
    "start": "2053879",
    "end": "2058950"
  },
  {
    "text": "we were in this example I'm just binding to the default servers account in the default namespace but you can create multiple roles and create multiple",
    "start": "2058950",
    "end": "2064530"
  },
  {
    "text": "mappings here and then anything that matches this policy this role will get the policy secret read-only and I'm also",
    "start": "2064530",
    "end": "2073830"
  },
  {
    "text": "up letting our TLS secret for real this time and then I'm I have to give the vault address to these pods because they don't",
    "start": "2073830",
    "end": "2080340"
  },
  {
    "text": "actually know revolt lives because it's just a thing in an IP address so I'm gonna run this and hope that the",
    "start": "2080340",
    "end": "2086120"
  },
  {
    "text": "bandwidth holds out",
    "start": "2086120",
    "end": "2089600"
  },
  {
    "text": "okay so now I'm gonna do demo show",
    "start": "2099010",
    "end": "2104280"
  },
  {
    "text": "the sign no I'm not faking it",
    "start": "2121270",
    "end": "2124830"
  },
  {
    "text": "okay so I'm like pretending to be a pod right now I'm just in a debian container and bash and I'm gonna show you what a",
    "start": "2131250",
    "end": "2138210"
  },
  {
    "text": "pod would have to do to authenticate the vault so the first thing I'm gonna do is around app - get update see this is fast",
    "start": "2138210",
    "end": "2145890"
  },
  {
    "text": "because it's not actually on this network I'm gonna install Kerlin JQ look",
    "start": "2145890",
    "end": "2158430"
  },
  {
    "text": "how fast this is look how fast I type it's like the matrix all right so our",
    "start": "2158430",
    "end": "2164280"
  },
  {
    "text": "jot token who knows where that lives it's okay I know where it is bar runs",
    "start": "2164280",
    "end": "2169950"
  },
  {
    "text": "secrets kubernetes io service account",
    "start": "2169950",
    "end": "2176450"
  },
  {
    "text": "token all right so now when we echo our token we get a joking I need to take",
    "start": "2176660",
    "end": "2187260"
  },
  {
    "text": "that joke in and give it the vault with the role that I've requested and vault will give me back a volt token so I can",
    "start": "2187260",
    "end": "2193020"
  },
  {
    "text": "curl vault adder v100 kubernetes login",
    "start": "2193020",
    "end": "2203710"
  },
  {
    "text": "[Music] and my role what do we call a role demo",
    "start": "2203710",
    "end": "2216089"
  },
  {
    "text": "and my job token is that thing that is in my environment",
    "start": "2216089",
    "end": "2223430"
  },
  {
    "text": "really",
    "start": "2225830",
    "end": "2228830"
  },
  {
    "text": "did have braces didn't",
    "start": "2232520",
    "end": "2236390"
  },
  {
    "text": "okay cool and I get back this payload from vault which includes a bunch of",
    "start": "2241620",
    "end": "2246730"
  },
  {
    "text": "information but the only thing I care about is this client token which is like my session ID and from here I can run",
    "start": "2246730",
    "end": "2253030"
  },
  {
    "text": "curl with that as my header for my vault",
    "start": "2253030",
    "end": "2258730"
  },
  {
    "text": "token and I can ask hopefully for the",
    "start": "2258730",
    "end": "2264520"
  },
  {
    "text": "secret named cube con and I get back the message from hello",
    "start": "2264520",
    "end": "2271410"
  },
  {
    "text": "so I know that we're out of time but that was also really hard in fact I have",
    "start": "2277010",
    "end": "2282750"
  },
  {
    "text": "a slide with three question marks on it because that was like a lot of work you're welcome I put all of that",
    "start": "2282750",
    "end": "2288810"
  },
  {
    "text": "functionality into a pod that you can put in an init container that automatically pulls that service account",
    "start": "2288810",
    "end": "2294060"
  },
  {
    "text": "and drops it in an in-memory volume and then all you have is that volt tokens you don't actually have to do all of the",
    "start": "2294060",
    "end": "2299520"
  },
  {
    "text": "stuff I just did I vomited it for you but I wanted to show you the hard way the easy way is to just use this",
    "start": "2299520",
    "end": "2304980"
  },
  {
    "text": "container it's open source so you can audit it you can build it yourself if you don't trust me I wouldn't another",
    "start": "2304980",
    "end": "2312150"
  },
  {
    "text": "tool that I want to mention is this tool called console template console template will actually help you extract multiple",
    "start": "2312150",
    "end": "2318720"
  },
  {
    "text": "secrets from vult maybe you have a TLS key and a couple database passwords and you have some legacy java application",
    "start": "2318720",
    "end": "2324690"
  },
  {
    "text": "that just really wants to consume a pom.xml file or a properties file you can use console template to render out",
    "start": "2324690",
    "end": "2330360"
  },
  {
    "text": "that properties file meaning your app doesn't have to be vault aware and then console template can actually",
    "start": "2330360",
    "end": "2335820"
  },
  {
    "text": "communicate with your application when those secrets change so it's just writing out a file in a shared volume that your app is consuming which always",
    "start": "2335820",
    "end": "2343290"
  },
  {
    "text": "brings up a big question which is like how do I know if my credentials change how will my app know to reread its config there's a Kol beta feature called",
    "start": "2343290",
    "end": "2350040"
  },
  {
    "text": "shared process namespaces in kubernetes 110 if you enable this this will allow",
    "start": "2350040",
    "end": "2355800"
  },
  {
    "text": "multiple pods to communicate with one another so they're not all running as pin 1 they're actually sharing a process",
    "start": "2355800",
    "end": "2360900"
  },
  {
    "text": "namespace you give P trace which allows you to call pitov and then basically",
    "start": "2360900",
    "end": "2367650"
  },
  {
    "text": "console template is sharing a process namespace so it has the ability to signal your application when it has",
    "start": "2367650",
    "end": "2373560"
  },
  {
    "text": "updated that configuration file and then your app can be restarted respond to a signal whole-heartedly blow up whatever",
    "start": "2373560",
    "end": "2380250"
  },
  {
    "text": "your choice is whenever that config file changes here's more information thank you all so much sorry I went overtime",
    "start": "2380250",
    "end": "2386340"
  },
  {
    "text": "I'll be around for questions [Applause]",
    "start": "2386340",
    "end": "2393249"
  }
]