[
  {
    "start": "0",
    "end": "277000"
  },
  {
    "text": "hi welcome all today we would like to",
    "start": "399",
    "end": "2399"
  },
  {
    "text": "share even processing at",
    "start": "2399",
    "end": "3919"
  },
  {
    "text": "optum the cloud events way",
    "start": "3919",
    "end": "7600"
  },
  {
    "text": "i'm janani pathangi distinguished",
    "start": "7919",
    "end": "9760"
  },
  {
    "text": "engineer 20 years in usa",
    "start": "9760",
    "end": "12000"
  },
  {
    "text": "and currently i lead the optum functions",
    "start": "12000",
    "end": "14320"
  },
  {
    "text": "platform",
    "start": "14320",
    "end": "15599"
  },
  {
    "text": "and i also have murugapan sevakan shetty",
    "start": "15599",
    "end": "17680"
  },
  {
    "text": "here with me he is a principal engineer",
    "start": "17680",
    "end": "20160"
  },
  {
    "text": "and tech lead and a k native open source",
    "start": "20160",
    "end": "23199"
  },
  {
    "text": "contributor",
    "start": "23199",
    "end": "25840"
  },
  {
    "text": "we would like to have a quick",
    "start": "27359",
    "end": "28560"
  },
  {
    "text": "introduction about our organization",
    "start": "28560",
    "end": "30400"
  },
  {
    "text": "united health group united health group",
    "start": "30400",
    "end": "32640"
  },
  {
    "text": "is a highly diversified health and",
    "start": "32640",
    "end": "34719"
  },
  {
    "text": "well-being company",
    "start": "34719",
    "end": "35920"
  },
  {
    "text": "it's headquartered in the united states",
    "start": "35920",
    "end": "38640"
  },
  {
    "text": "and ranked seventh of",
    "start": "38640",
    "end": "40160"
  },
  {
    "text": "the fortune 500. we have two business",
    "start": "40160",
    "end": "42640"
  },
  {
    "text": "platform",
    "start": "42640",
    "end": "43520"
  },
  {
    "text": "united healthcare which will focus on",
    "start": "43520",
    "end": "45520"
  },
  {
    "text": "health benefits",
    "start": "45520",
    "end": "46800"
  },
  {
    "text": "and optum is a health services",
    "start": "46800",
    "end": "48879"
  },
  {
    "text": "innovation company",
    "start": "48879",
    "end": "51920"
  },
  {
    "text": "across optum we are able to serve many",
    "start": "54160",
    "end": "56960"
  },
  {
    "text": "constituents of health system",
    "start": "56960",
    "end": "58800"
  },
  {
    "text": "and we are grateful to serve and partner",
    "start": "58800",
    "end": "60960"
  },
  {
    "text": "with 9 out of the 10",
    "start": "60960",
    "end": "63120"
  },
  {
    "text": "1400 companies 9 out of the 10 u.s",
    "start": "63120",
    "end": "66479"
  },
  {
    "text": "hospital",
    "start": "66479",
    "end": "67439"
  },
  {
    "text": "and serve 125 million consumers",
    "start": "67439",
    "end": "73200"
  },
  {
    "text": "from infrastructure and technology",
    "start": "73200",
    "end": "74960"
  },
  {
    "text": "perspective we have an annual spend of",
    "start": "74960",
    "end": "77119"
  },
  {
    "text": "about 3.5 billion dollars on technology",
    "start": "77119",
    "end": "79680"
  },
  {
    "text": "and",
    "start": "79680",
    "end": "79920"
  },
  {
    "text": "innovation 99 percentage of our",
    "start": "79920",
    "end": "82320"
  },
  {
    "text": "workloads run in our own data center",
    "start": "82320",
    "end": "84720"
  },
  {
    "text": "with over 1 trillion transactions",
    "start": "84720",
    "end": "86799"
  },
  {
    "text": "annually and these workloads will vary",
    "start": "86799",
    "end": "89200"
  },
  {
    "text": "all the way from",
    "start": "89200",
    "end": "90479"
  },
  {
    "text": "mainframe big data accelerators",
    "start": "90479",
    "end": "92799"
  },
  {
    "text": "distributed sql",
    "start": "92799",
    "end": "94079"
  },
  {
    "text": "containers and now with serverless",
    "start": "94079",
    "end": "97759"
  },
  {
    "text": "ecosystem",
    "start": "98840",
    "end": "100079"
  },
  {
    "text": "this is the agenda we plan to cover",
    "start": "100079",
    "end": "101920"
  },
  {
    "text": "today we want to give a quick",
    "start": "101920",
    "end": "103520"
  },
  {
    "text": "introduction about serverless at optum",
    "start": "103520",
    "end": "106159"
  },
  {
    "text": "challenges with even processing why we",
    "start": "106159",
    "end": "108880"
  },
  {
    "text": "started to explore cloud events",
    "start": "108880",
    "end": "110799"
  },
  {
    "text": "and some of the autumn use cases with",
    "start": "110799",
    "end": "113119"
  },
  {
    "text": "cloud events",
    "start": "113119",
    "end": "114159"
  },
  {
    "text": "supplemented with demo and we would like",
    "start": "114159",
    "end": "116079"
  },
  {
    "text": "to conclude with summary",
    "start": "116079",
    "end": "119280"
  },
  {
    "text": "so now let's look into the optum",
    "start": "119920",
    "end": "122079"
  },
  {
    "text": "functions it's an",
    "start": "122079",
    "end": "123200"
  },
  {
    "text": "on-prem fully managed multi-tenant",
    "start": "123200",
    "end": "126719"
  },
  {
    "text": "serverless platform which supports",
    "start": "126719",
    "end": "128720"
  },
  {
    "text": "stateless event driven request based",
    "start": "128720",
    "end": "131440"
  },
  {
    "text": "compute workloads",
    "start": "131440",
    "end": "133200"
  },
  {
    "text": "currently it's offered cross dc active",
    "start": "133200",
    "end": "135840"
  },
  {
    "text": "active",
    "start": "135840",
    "end": "136319"
  },
  {
    "text": "without a ha capability from adoption",
    "start": "136319",
    "end": "139680"
  },
  {
    "text": "standpoint",
    "start": "139680",
    "end": "140480"
  },
  {
    "text": "we are increasing and thousand more than",
    "start": "140480",
    "end": "142879"
  },
  {
    "text": "thousand functions deployed today",
    "start": "142879",
    "end": "145120"
  },
  {
    "text": "with more than 500 developers using this",
    "start": "145120",
    "end": "147599"
  },
  {
    "text": "across the organization to solve some of",
    "start": "147599",
    "end": "149680"
  },
  {
    "text": "our enterprise use cases",
    "start": "149680",
    "end": "151440"
  },
  {
    "text": "for example edl jobs today run as",
    "start": "151440",
    "end": "154080"
  },
  {
    "text": "functions",
    "start": "154080",
    "end": "155040"
  },
  {
    "text": "we are able to serve mission loading",
    "start": "155040",
    "end": "156959"
  },
  {
    "text": "machine learning models",
    "start": "156959",
    "end": "158560"
  },
  {
    "text": "and also have some of our infrastructure",
    "start": "158560",
    "end": "160720"
  },
  {
    "text": "housekeeping jobs",
    "start": "160720",
    "end": "161920"
  },
  {
    "text": "running on this platform",
    "start": "161920",
    "end": "165120"
  },
  {
    "text": "so how do we make the open source stack",
    "start": "166400",
    "end": "169360"
  },
  {
    "text": "to an",
    "start": "169360",
    "end": "169760"
  },
  {
    "text": "enterprise service we started with the",
    "start": "169760",
    "end": "172080"
  },
  {
    "text": "open source stack here",
    "start": "172080",
    "end": "173680"
  },
  {
    "text": "kubernetes istio k native",
    "start": "173680",
    "end": "176720"
  },
  {
    "text": "and we added more enterprise capability",
    "start": "176720",
    "end": "179120"
  },
  {
    "text": "on top of them",
    "start": "179120",
    "end": "180640"
  },
  {
    "text": "and as you can see here to the left hand",
    "start": "180640",
    "end": "183120"
  },
  {
    "text": "side we started with",
    "start": "183120",
    "end": "184480"
  },
  {
    "text": "enterprise integration with vault for",
    "start": "184480",
    "end": "187120"
  },
  {
    "text": "authentication and authorization",
    "start": "187120",
    "end": "189360"
  },
  {
    "text": "when fi for auto tls search rotation",
    "start": "189360",
    "end": "192720"
  },
  {
    "text": "and with our enterprise job scheduler",
    "start": "192720",
    "end": "195519"
  },
  {
    "text": "for",
    "start": "195519",
    "end": "195920"
  },
  {
    "text": "all the etl jobs that is running as",
    "start": "195920",
    "end": "197840"
  },
  {
    "text": "functions today",
    "start": "197840",
    "end": "199360"
  },
  {
    "text": "and we strengthen our sre with the",
    "start": "199360",
    "end": "201680"
  },
  {
    "text": "well-defined slo",
    "start": "201680",
    "end": "203200"
  },
  {
    "text": "sli and dashboards we have very good",
    "start": "203200",
    "end": "206560"
  },
  {
    "text": "observability",
    "start": "206560",
    "end": "207840"
  },
  {
    "text": "and we added a lot of self-healing and",
    "start": "207840",
    "end": "209680"
  },
  {
    "text": "automation scripts",
    "start": "209680",
    "end": "211200"
  },
  {
    "text": "and we also conduct quarterly chaos game",
    "start": "211200",
    "end": "214080"
  },
  {
    "text": "days",
    "start": "214080",
    "end": "215280"
  },
  {
    "text": "and to the top we added self-service",
    "start": "215280",
    "end": "219040"
  },
  {
    "text": "ui to abstract the infrastructure apis",
    "start": "219040",
    "end": "222640"
  },
  {
    "text": "and provide simple code to url",
    "start": "222640",
    "end": "225280"
  },
  {
    "text": "experience",
    "start": "225280",
    "end": "226239"
  },
  {
    "text": "to our end users and we also added",
    "start": "226239",
    "end": "229280"
  },
  {
    "text": "lot of training and template projects",
    "start": "229280",
    "end": "233840"
  },
  {
    "text": "this is the reason why we wanted to have",
    "start": "233840",
    "end": "236239"
  },
  {
    "text": "to make sure that the use cases",
    "start": "236239",
    "end": "238319"
  },
  {
    "text": "are moved in a lift transform and shift",
    "start": "238319",
    "end": "240799"
  },
  {
    "text": "from monolith to functions",
    "start": "240799",
    "end": "242879"
  },
  {
    "text": "this is all helping them the end users",
    "start": "242879",
    "end": "245680"
  },
  {
    "text": "or the developers with it",
    "start": "245680",
    "end": "247280"
  },
  {
    "text": "and we also introduce ground vm",
    "start": "247280",
    "end": "249760"
  },
  {
    "text": "framework",
    "start": "249760",
    "end": "250560"
  },
  {
    "text": "garal vm frameworks to improve the java",
    "start": "250560",
    "end": "253840"
  },
  {
    "text": "cold starts",
    "start": "253840",
    "end": "256560"
  },
  {
    "text": "now looking at the platform architecture",
    "start": "258160",
    "end": "260959"
  },
  {
    "text": "this",
    "start": "260959",
    "end": "261280"
  },
  {
    "text": "architecture is running two different",
    "start": "261280",
    "end": "264800"
  },
  {
    "text": "kubernetes clusters across the data",
    "start": "264800",
    "end": "267440"
  },
  {
    "text": "center",
    "start": "267440",
    "end": "268240"
  },
  {
    "text": "and we provide auto ha capability with",
    "start": "268240",
    "end": "271440"
  },
  {
    "text": "bgp",
    "start": "271440",
    "end": "272240"
  },
  {
    "text": "anycast and dynamic dns",
    "start": "272240",
    "end": "276160"
  },
  {
    "start": "277000",
    "end": "443000"
  },
  {
    "text": "so now that you saw overview of our",
    "start": "277520",
    "end": "279840"
  },
  {
    "text": "platform i want to quickly show",
    "start": "279840",
    "end": "282160"
  },
  {
    "text": "uh example of our functional deployment",
    "start": "282160",
    "end": "284800"
  },
  {
    "text": "and how cloud events uh",
    "start": "284800",
    "end": "286400"
  },
  {
    "text": "come into action",
    "start": "286400",
    "end": "289360"
  },
  {
    "text": "so as uh generally explained our",
    "start": "289440",
    "end": "292080"
  },
  {
    "text": "platform is based on k nato",
    "start": "292080",
    "end": "294160"
  },
  {
    "text": "and k native uh the artifact that keynet",
    "start": "294160",
    "end": "297759"
  },
  {
    "text": "expects is a container image and all the",
    "start": "297759",
    "end": "300800"
  },
  {
    "text": "functions run as",
    "start": "300800",
    "end": "301759"
  },
  {
    "text": "pod okay and other thing that k native",
    "start": "301759",
    "end": "304400"
  },
  {
    "text": "experts is the container image should",
    "start": "304400",
    "end": "306240"
  },
  {
    "text": "expose a port so that it could check",
    "start": "306240",
    "end": "307759"
  },
  {
    "text": "whether the application is up or not",
    "start": "307759",
    "end": "310479"
  },
  {
    "text": "so the application that i am going to",
    "start": "310479",
    "end": "312479"
  },
  {
    "text": "show here is just a web application",
    "start": "312479",
    "end": "314880"
  },
  {
    "text": "which is going to display some events",
    "start": "314880",
    "end": "317039"
  },
  {
    "text": "when it gets it",
    "start": "317039",
    "end": "318000"
  },
  {
    "text": "okay and it as i told earlier",
    "start": "318000",
    "end": "322000"
  },
  {
    "text": "uh k native expects a doc a container",
    "start": "322000",
    "end": "324880"
  },
  {
    "text": "image okay",
    "start": "324880",
    "end": "325759"
  },
  {
    "text": "so for building a container image uh you",
    "start": "325759",
    "end": "328639"
  },
  {
    "text": "need to define a docker file",
    "start": "328639",
    "end": "330320"
  },
  {
    "text": "and then you need to use that to do the",
    "start": "330320",
    "end": "332720"
  },
  {
    "text": "docker build and run it",
    "start": "332720",
    "end": "334000"
  },
  {
    "text": "instead of that i have a go based",
    "start": "334000",
    "end": "337039"
  },
  {
    "text": "application okay this is a go based",
    "start": "337039",
    "end": "338720"
  },
  {
    "text": "application",
    "start": "338720",
    "end": "340000"
  },
  {
    "text": "to run this um i am",
    "start": "340000",
    "end": "343120"
  },
  {
    "text": "going to use a tool called as co okay",
    "start": "343120",
    "end": "346400"
  },
  {
    "text": "so core is a tool which makes the darker",
    "start": "346400",
    "end": "348639"
  },
  {
    "text": "build and push layer invisible to you",
    "start": "348639",
    "end": "350960"
  },
  {
    "text": "totally",
    "start": "350960",
    "end": "351680"
  },
  {
    "text": "so using co i'll be able to take the",
    "start": "351680",
    "end": "353919"
  },
  {
    "text": "source score and then",
    "start": "353919",
    "end": "355120"
  },
  {
    "text": "build and push it to the uh repository",
    "start": "355120",
    "end": "357440"
  },
  {
    "text": "without even defining any uh docker file",
    "start": "357440",
    "end": "359919"
  },
  {
    "text": "okay for deployment this is just",
    "start": "359919",
    "end": "363199"
  },
  {
    "text": "a kubernetes application right so i've",
    "start": "363199",
    "end": "364720"
  },
  {
    "text": "been using the amplifier i can use the",
    "start": "364720",
    "end": "366240"
  },
  {
    "text": "coconut cmi",
    "start": "366240",
    "end": "367440"
  },
  {
    "text": "instead i'm going to use a k n cla which",
    "start": "367440",
    "end": "369280"
  },
  {
    "text": "is efficient k native cli",
    "start": "369280",
    "end": "371039"
  },
  {
    "text": "which gives a better experience to be",
    "start": "371039",
    "end": "373120"
  },
  {
    "text": "deploying it on any k native based",
    "start": "373120",
    "end": "375120"
  },
  {
    "text": "platform and inside our company we have",
    "start": "375120",
    "end": "378160"
  },
  {
    "text": "a separate ui which abstracts k",
    "start": "378160",
    "end": "380880"
  },
  {
    "text": "native uh istio and kubernetes which",
    "start": "380880",
    "end": "382720"
  },
  {
    "text": "gives a better experience but for a",
    "start": "382720",
    "end": "384160"
  },
  {
    "text": "wider",
    "start": "384160",
    "end": "384720"
  },
  {
    "text": "audience i thought cane would be more",
    "start": "384720",
    "end": "386240"
  },
  {
    "text": "helpful okay",
    "start": "386240",
    "end": "387919"
  },
  {
    "text": "so now when i run it",
    "start": "387919",
    "end": "391680"
  },
  {
    "text": "so what i'm expecting is a k native",
    "start": "391680",
    "end": "393759"
  },
  {
    "text": "controller plane to deploy this in the",
    "start": "393759",
    "end": "395120"
  },
  {
    "text": "kubernetes cluster",
    "start": "395120",
    "end": "396240"
  },
  {
    "text": "and give me a url okay uh so that's what",
    "start": "396240",
    "end": "399360"
  },
  {
    "text": "is happening here",
    "start": "399360",
    "end": "400240"
  },
  {
    "text": "so if i have the integrations in the",
    "start": "400240",
    "end": "401680"
  },
  {
    "text": "right place with k native and search",
    "start": "401680",
    "end": "403680"
  },
  {
    "text": "manager",
    "start": "403680",
    "end": "404319"
  },
  {
    "text": "i am i have i i can even get an https",
    "start": "404319",
    "end": "407120"
  },
  {
    "text": "url",
    "start": "407120",
    "end": "408000"
  },
  {
    "text": "so now you see what you see is a http",
    "start": "408000",
    "end": "410880"
  },
  {
    "text": "url",
    "start": "410880",
    "end": "411680"
  },
  {
    "text": "and then slowly it should turn to https",
    "start": "411680",
    "end": "413759"
  },
  {
    "text": "there you go okay",
    "start": "413759",
    "end": "415199"
  },
  {
    "text": "so within like 30 seconds we were able",
    "start": "415199",
    "end": "417199"
  },
  {
    "text": "to take the source code",
    "start": "417199",
    "end": "418400"
  },
  {
    "text": "and then build push and then deploy as",
    "start": "418400",
    "end": "420400"
  },
  {
    "text": "well get the fully",
    "start": "420400",
    "end": "422800"
  },
  {
    "text": "secure url okay so when i open this url",
    "start": "422800",
    "end": "427199"
  },
  {
    "text": "in the browser i should see a web",
    "start": "427199",
    "end": "430400"
  },
  {
    "text": "application",
    "start": "430400",
    "end": "432319"
  },
  {
    "text": "there you go so this is the web",
    "start": "432319",
    "end": "433360"
  },
  {
    "text": "application that i deployed so when we",
    "start": "433360",
    "end": "435199"
  },
  {
    "text": "send some events to this web application",
    "start": "435199",
    "end": "436960"
  },
  {
    "text": "it should display this",
    "start": "436960",
    "end": "438479"
  },
  {
    "text": "uh events here",
    "start": "438479",
    "end": "442000"
  },
  {
    "text": "so so when we deploy something to the k",
    "start": "443840",
    "end": "446000"
  },
  {
    "text": "native platform it gives you a url",
    "start": "446000",
    "end": "448479"
  },
  {
    "text": "and to trigger that it's very simple you",
    "start": "448479",
    "end": "451520"
  },
  {
    "text": "can use a",
    "start": "451520",
    "end": "452400"
  },
  {
    "text": "you can call it from any other",
    "start": "452400",
    "end": "453599"
  },
  {
    "text": "application you can do a post put",
    "start": "453599",
    "end": "455680"
  },
  {
    "text": "get you can call it from postman but in",
    "start": "455680",
    "end": "458639"
  },
  {
    "text": "the real world",
    "start": "458639",
    "end": "459759"
  },
  {
    "text": "uh functions are like synonymous true",
    "start": "459759",
    "end": "462560"
  },
  {
    "text": "even processing",
    "start": "462560",
    "end": "463599"
  },
  {
    "text": "so it really comes down to how you are",
    "start": "463599",
    "end": "465919"
  },
  {
    "text": "going to deliver events",
    "start": "465919",
    "end": "467199"
  },
  {
    "text": "from a say even source like kafka okay",
    "start": "467199",
    "end": "470639"
  },
  {
    "text": "so that is where k native has a pla has",
    "start": "470639",
    "end": "473039"
  },
  {
    "text": "a separate ecosystem called k n a t",
    "start": "473039",
    "end": "474879"
  },
  {
    "text": "venti",
    "start": "474879",
    "end": "475680"
  },
  {
    "text": "it is even like independent of the k",
    "start": "475680",
    "end": "477759"
  },
  {
    "text": "native serving platform okay",
    "start": "477759",
    "end": "479280"
  },
  {
    "text": "so you can just if you want you can just",
    "start": "479280",
    "end": "480960"
  },
  {
    "text": "have the knitting even thing alone",
    "start": "480960",
    "end": "482879"
  },
  {
    "text": "installed in your kubernetes cluster and",
    "start": "482879",
    "end": "485919"
  },
  {
    "text": "in it in the canadian eventing uh",
    "start": "485919",
    "end": "488800"
  },
  {
    "text": "world there are like two main components",
    "start": "488800",
    "end": "491120"
  },
  {
    "text": "okay which we'll be talking throughout",
    "start": "491120",
    "end": "492800"
  },
  {
    "text": "this session one is an even source and",
    "start": "492800",
    "end": "494720"
  },
  {
    "text": "second one is the broker",
    "start": "494720",
    "end": "496319"
  },
  {
    "text": "the job of the even source is to reach",
    "start": "496319",
    "end": "498400"
  },
  {
    "text": "out to the actual source which is like",
    "start": "498400",
    "end": "500080"
  },
  {
    "text": "kafka rabbit and queue",
    "start": "500080",
    "end": "501520"
  },
  {
    "text": "or another application take the data",
    "start": "501520",
    "end": "503919"
  },
  {
    "text": "from it and then send it to",
    "start": "503919",
    "end": "505360"
  },
  {
    "text": "the processing function and in k91 the",
    "start": "505360",
    "end": "508479"
  },
  {
    "text": "processing",
    "start": "508479",
    "end": "509120"
  },
  {
    "text": "function and where whichever is the",
    "start": "509120",
    "end": "510800"
  },
  {
    "text": "receiver it's called as a sync",
    "start": "510800",
    "end": "512640"
  },
  {
    "text": "okay the sync can be any addressable",
    "start": "512640",
    "end": "515680"
  },
  {
    "text": "service that means",
    "start": "515680",
    "end": "516560"
  },
  {
    "text": "anything that gives a url like a k",
    "start": "516560",
    "end": "518959"
  },
  {
    "text": "native service you saw",
    "start": "518959",
    "end": "520000"
  },
  {
    "text": "it give a url you know kubernetes",
    "start": "520000",
    "end": "522080"
  },
  {
    "text": "service also there's new url",
    "start": "522080",
    "end": "523680"
  },
  {
    "text": "okay and then you can create endpoints",
    "start": "523680",
    "end": "525839"
  },
  {
    "text": "to link outside services also in",
    "start": "525839",
    "end": "527600"
  },
  {
    "text": "kubernetes",
    "start": "527600",
    "end": "528399"
  },
  {
    "text": "okay anything like this can be a sync",
    "start": "528399",
    "end": "530800"
  },
  {
    "text": "okay",
    "start": "530800",
    "end": "532320"
  },
  {
    "text": "and then uh in the first there are two",
    "start": "532320",
    "end": "534720"
  },
  {
    "text": "types of delivery happen here one is",
    "start": "534720",
    "end": "536240"
  },
  {
    "text": "like one two one delivery that's what",
    "start": "536240",
    "end": "538080"
  },
  {
    "text": "we take the data from the source use the",
    "start": "538080",
    "end": "540000"
  },
  {
    "text": "k nato even source to deliver it",
    "start": "540000",
    "end": "541279"
  },
  {
    "text": "directly to the",
    "start": "541279",
    "end": "542240"
  },
  {
    "text": "uh canadian service or kubernetes",
    "start": "542240",
    "end": "544399"
  },
  {
    "text": "service",
    "start": "544399",
    "end": "545279"
  },
  {
    "text": "in this case it's like tightly coupled",
    "start": "545279",
    "end": "546959"
  },
  {
    "text": "between source on the processor",
    "start": "546959",
    "end": "548880"
  },
  {
    "text": "and instead if you have a buffer in",
    "start": "548880",
    "end": "551760"
  },
  {
    "text": "between it will be better for processing",
    "start": "551760",
    "end": "553600"
  },
  {
    "text": "also you're decoupling the source and",
    "start": "553600",
    "end": "555120"
  },
  {
    "text": "the processing function",
    "start": "555120",
    "end": "556560"
  },
  {
    "text": "so you can do a lot more uh with it okay",
    "start": "556560",
    "end": "559839"
  },
  {
    "text": "for this to for that that's where the",
    "start": "559839",
    "end": "561839"
  },
  {
    "text": "broker comes in okay",
    "start": "561839",
    "end": "563519"
  },
  {
    "text": "so you have the source which takes the",
    "start": "563519",
    "end": "565920"
  },
  {
    "text": "event and then puts it into the broker",
    "start": "565920",
    "end": "567600"
  },
  {
    "text": "which is like",
    "start": "567600",
    "end": "568320"
  },
  {
    "text": "even ingress or a buffer or whatever you",
    "start": "568320",
    "end": "570560"
  },
  {
    "text": "want to call or a state store for all",
    "start": "570560",
    "end": "572560"
  },
  {
    "text": "the",
    "start": "572560",
    "end": "572800"
  },
  {
    "text": "events that comes in it will take the",
    "start": "572800",
    "end": "574800"
  },
  {
    "text": "kitchen sink of the",
    "start": "574800",
    "end": "576080"
  },
  {
    "text": "events coming in okay and we can have a",
    "start": "576080",
    "end": "580399"
  },
  {
    "text": "a trigger that's another k native uh",
    "start": "580399",
    "end": "582720"
  },
  {
    "text": "resource",
    "start": "582720",
    "end": "583600"
  },
  {
    "text": "which in which we can specify which",
    "start": "583600",
    "end": "585760"
  },
  {
    "text": "types of events needs to be routed to",
    "start": "585760",
    "end": "588800"
  },
  {
    "text": "uh which sync okay suppose i have a",
    "start": "588800",
    "end": "591200"
  },
  {
    "text": "k-native service which checks",
    "start": "591200",
    "end": "592640"
  },
  {
    "text": "just looks for a kafka service i'll",
    "start": "592640",
    "end": "594560"
  },
  {
    "text": "create a trigger",
    "start": "594560",
    "end": "595760"
  },
  {
    "text": "and then say that okay i want kafka",
    "start": "595760",
    "end": "597519"
  },
  {
    "text": "events alone then",
    "start": "597519",
    "end": "598959"
  },
  {
    "text": "the broker will deliver the kafka events",
    "start": "598959",
    "end": "600800"
  },
  {
    "text": "alone to this",
    "start": "600800",
    "end": "602160"
  },
  {
    "text": "uh k native serves for all these things",
    "start": "602160",
    "end": "605440"
  },
  {
    "text": "to happen they need to be a glue or what",
    "start": "605440",
    "end": "608079"
  },
  {
    "text": "they need to a particular even type",
    "start": "608079",
    "end": "609600"
  },
  {
    "text": "that's the",
    "start": "609600",
    "end": "611200"
  },
  {
    "text": "okay that is where cloud events comes",
    "start": "611200",
    "end": "613200"
  },
  {
    "text": "into play",
    "start": "613200",
    "end": "614320"
  },
  {
    "text": "and and this whole eventing ecosystem of",
    "start": "614320",
    "end": "617120"
  },
  {
    "text": "k native is built",
    "start": "617120",
    "end": "618000"
  },
  {
    "text": "around this uh cloud events only",
    "start": "618000",
    "end": "621120"
  },
  {
    "text": "so what is clouding cloud events is an",
    "start": "621120",
    "end": "624160"
  },
  {
    "text": "uh even specification given by uh cncf",
    "start": "624160",
    "end": "627519"
  },
  {
    "text": "it is not a data specification the data",
    "start": "627519",
    "end": "629360"
  },
  {
    "text": "inside cloud events can be anything okay",
    "start": "629360",
    "end": "631200"
  },
  {
    "text": "so it can be",
    "start": "631200",
    "end": "632320"
  },
  {
    "text": "text it can be binary they don't have",
    "start": "632320",
    "end": "634880"
  },
  {
    "text": "any say over that okay",
    "start": "634880",
    "end": "636640"
  },
  {
    "text": "so as you can see in the right that is",
    "start": "636640",
    "end": "638560"
  },
  {
    "text": "the data and on the top it",
    "start": "638560",
    "end": "640560"
  },
  {
    "text": "just asks these four headers to be added",
    "start": "640560",
    "end": "643120"
  },
  {
    "text": "okay",
    "start": "643120",
    "end": "643920"
  },
  {
    "text": "so with these four headers you can do a",
    "start": "643920",
    "end": "645920"
  },
  {
    "text": "lot of things that's all we'll be seeing",
    "start": "645920",
    "end": "647440"
  },
  {
    "text": "in this",
    "start": "647440",
    "end": "647920"
  },
  {
    "text": "uh our use cases and the cloud events",
    "start": "647920",
    "end": "652079"
  },
  {
    "text": "community supports and then gives a lot",
    "start": "652079",
    "end": "655600"
  },
  {
    "text": "of sdks like",
    "start": "655600",
    "end": "656800"
  },
  {
    "text": "for all the languages that we commonly",
    "start": "656800",
    "end": "658399"
  },
  {
    "text": "use go java rust you name it",
    "start": "658399",
    "end": "660640"
  },
  {
    "text": "there is an sdk support for it and this",
    "start": "660640",
    "end": "663839"
  },
  {
    "text": "uh even delivery is not only through",
    "start": "663839",
    "end": "665839"
  },
  {
    "text": "http it is also through kafka avro they",
    "start": "665839",
    "end": "668399"
  },
  {
    "text": "support different formats for more",
    "start": "668399",
    "end": "669920"
  },
  {
    "text": "details about it you can look at the",
    "start": "669920",
    "end": "672560"
  },
  {
    "text": "cloud events are your website it is k",
    "start": "672560",
    "end": "676079"
  },
  {
    "text": "native that introduced us to cloud",
    "start": "676079",
    "end": "678160"
  },
  {
    "text": "events but",
    "start": "678160",
    "end": "679360"
  },
  {
    "text": "it happened to solve more use cases for",
    "start": "679360",
    "end": "681519"
  },
  {
    "text": "us outside of knativ also",
    "start": "681519",
    "end": "683920"
  },
  {
    "text": "okay so the problems that we used to",
    "start": "683920",
    "end": "686160"
  },
  {
    "text": "have was like",
    "start": "686160",
    "end": "687120"
  },
  {
    "text": "we used to have and we are having right",
    "start": "687120",
    "end": "688880"
  },
  {
    "text": "now also is",
    "start": "688880",
    "end": "690399"
  },
  {
    "text": "our com our organization is really big",
    "start": "690399",
    "end": "692720"
  },
  {
    "text": "and then there's predominant presence in",
    "start": "692720",
    "end": "694399"
  },
  {
    "text": "the uh data center",
    "start": "694399",
    "end": "695839"
  },
  {
    "text": "uh our on-premises data center and there",
    "start": "695839",
    "end": "698560"
  },
  {
    "text": "are like various even sources",
    "start": "698560",
    "end": "700640"
  },
  {
    "text": "and we see a lot of redundancy in",
    "start": "700640",
    "end": "702880"
  },
  {
    "text": "processing so there's no sharing across",
    "start": "702880",
    "end": "705360"
  },
  {
    "text": "teams and it's rightly so because uh",
    "start": "705360",
    "end": "709360"
  },
  {
    "text": "there is no common esp system and it is",
    "start": "709360",
    "end": "712000"
  },
  {
    "text": "not possible to have a common esp system",
    "start": "712000",
    "end": "713839"
  },
  {
    "text": "also so because the asb",
    "start": "713839",
    "end": "715040"
  },
  {
    "text": "system comes with their own domain",
    "start": "715040",
    "end": "716399"
  },
  {
    "text": "specific language so everyone have they",
    "start": "716399",
    "end": "718880"
  },
  {
    "text": "write their own",
    "start": "718880",
    "end": "719760"
  },
  {
    "text": "processes and then own sources and those",
    "start": "719760",
    "end": "722480"
  },
  {
    "text": "source and process are tightly coupled",
    "start": "722480",
    "end": "725279"
  },
  {
    "text": "so with cloud events what we get is like",
    "start": "725279",
    "end": "727760"
  },
  {
    "text": "for each event type",
    "start": "727760",
    "end": "728880"
  },
  {
    "text": "that you saw in the header you could",
    "start": "728880",
    "end": "730240"
  },
  {
    "text": "build a particular processor",
    "start": "730240",
    "end": "732079"
  },
  {
    "text": "so if the then you can publish this",
    "start": "732079",
    "end": "734399"
  },
  {
    "text": "processor throughout this company",
    "start": "734399",
    "end": "736160"
  },
  {
    "text": "and anybody who wants to process this",
    "start": "736160",
    "end": "738639"
  },
  {
    "text": "kind of event type",
    "start": "738639",
    "end": "739839"
  },
  {
    "text": "then they can use uh that particular",
    "start": "739839",
    "end": "742880"
  },
  {
    "text": "processor and the",
    "start": "742880",
    "end": "745920"
  },
  {
    "text": "and you can use the k native broker that",
    "start": "745920",
    "end": "747680"
  },
  {
    "text": "i just showed you so you can use you can",
    "start": "747680",
    "end": "750079"
  },
  {
    "text": "dump in all the events from a different",
    "start": "750079",
    "end": "752000"
  },
  {
    "text": "sources even if they are not within the",
    "start": "752000",
    "end": "753680"
  },
  {
    "text": "k native system even if they are outside",
    "start": "753680",
    "end": "755519"
  },
  {
    "text": "they can send it to the broker",
    "start": "755519",
    "end": "757200"
  },
  {
    "text": "and we can use the uh k native",
    "start": "757200",
    "end": "759440"
  },
  {
    "text": "triggering mechanism to route it",
    "start": "759440",
    "end": "760959"
  },
  {
    "text": "accordingly without even seeing the data",
    "start": "760959",
    "end": "762880"
  },
  {
    "text": "just by looking at the header that is",
    "start": "762880",
    "end": "764399"
  },
  {
    "text": "what we call this no",
    "start": "764399",
    "end": "765680"
  },
  {
    "text": "no look routine we can route it okay and",
    "start": "765680",
    "end": "769680"
  },
  {
    "text": "uh the icing on cake is like",
    "start": "769680",
    "end": "772720"
  },
  {
    "text": "there is polyglot sdk and multiple",
    "start": "772720",
    "end": "776079"
  },
  {
    "text": "protocol supports which is not only http",
    "start": "776079",
    "end": "778720"
  },
  {
    "text": "since this is like the simplicity of",
    "start": "778720",
    "end": "780240"
  },
  {
    "text": "cloud events is enabling rapid adoption",
    "start": "780240",
    "end": "782480"
  },
  {
    "text": "within our",
    "start": "782480",
    "end": "784839"
  },
  {
    "text": "organization",
    "start": "784839",
    "end": "786959"
  },
  {
    "text": "so as i uh told earlier the sources and",
    "start": "786959",
    "end": "789920"
  },
  {
    "text": "brokers are the main parts of event",
    "start": "789920",
    "end": "792000"
  },
  {
    "text": "so we need the source to take the data",
    "start": "792000",
    "end": "794480"
  },
  {
    "text": "from the actual source and send it into",
    "start": "794480",
    "end": "796000"
  },
  {
    "text": "the",
    "start": "796000",
    "end": "796480"
  },
  {
    "text": "k native system which which is actually",
    "start": "796480",
    "end": "798560"
  },
  {
    "text": "like the job of the source is to like",
    "start": "798560",
    "end": "800880"
  },
  {
    "text": "take the data convert that into cloud",
    "start": "800880",
    "end": "802399"
  },
  {
    "text": "even format and send it to the",
    "start": "802399",
    "end": "804160"
  },
  {
    "text": "uh processor or broker right so k nato",
    "start": "804160",
    "end": "807120"
  },
  {
    "text": "community gives a lot of commonly used",
    "start": "807120",
    "end": "809200"
  },
  {
    "text": "infrastructure sources like",
    "start": "809200",
    "end": "810800"
  },
  {
    "text": "github kafka",
    "start": "810800",
    "end": "815120"
  },
  {
    "text": "but uh we in within our organization we",
    "start": "815120",
    "end": "817600"
  },
  {
    "text": "have like sources like graphql",
    "start": "817600",
    "end": "819839"
  },
  {
    "text": "um uh source and then there's a lot of",
    "start": "819839",
    "end": "822880"
  },
  {
    "text": "file processing that's happening so we",
    "start": "822880",
    "end": "824320"
  },
  {
    "text": "have like sources for s3",
    "start": "824320",
    "end": "826000"
  },
  {
    "text": "we have sources for ftp and below i have",
    "start": "826000",
    "end": "828880"
  },
  {
    "text": "given an example of like how to write a",
    "start": "828880",
    "end": "830560"
  },
  {
    "text": "source",
    "start": "830560",
    "end": "831199"
  },
  {
    "text": "uh uh in my medium article you can take",
    "start": "831199",
    "end": "833920"
  },
  {
    "text": "it so the sources can be either",
    "start": "833920",
    "end": "835440"
  },
  {
    "text": "dedicated",
    "start": "835440",
    "end": "836560"
  },
  {
    "text": "or it can be a dynamic source as well",
    "start": "836560",
    "end": "839519"
  },
  {
    "text": "okay so when we show the exam",
    "start": "839519",
    "end": "841519"
  },
  {
    "text": "demo and the use cases you show like how",
    "start": "841519",
    "end": "843440"
  },
  {
    "text": "to build a sources",
    "start": "843440",
    "end": "846560"
  },
  {
    "start": "846000",
    "end": "1025000"
  },
  {
    "text": "so now i just want to quickly show an uh",
    "start": "846560",
    "end": "849440"
  },
  {
    "text": "um",
    "start": "849440",
    "end": "849839"
  },
  {
    "text": "example or like a quick demo on like how",
    "start": "849839",
    "end": "852959"
  },
  {
    "text": "cloud events is sent and how the",
    "start": "852959",
    "end": "855040"
  },
  {
    "text": "receiver function can process this",
    "start": "855040",
    "end": "856880"
  },
  {
    "text": "cloudy ones and display it on screen",
    "start": "856880",
    "end": "860320"
  },
  {
    "text": "so uh if you remember",
    "start": "869680",
    "end": "874639"
  },
  {
    "text": "this is the cloud events application",
    "start": "874639",
    "end": "878079"
  },
  {
    "text": "that we built",
    "start": "878079",
    "end": "879040"
  },
  {
    "text": "and then it receives only cloud even if",
    "start": "879040",
    "end": "882160"
  },
  {
    "text": "you",
    "start": "882160",
    "end": "882560"
  },
  {
    "text": "send a normal data it will not be able",
    "start": "882560",
    "end": "884480"
  },
  {
    "text": "to display it here",
    "start": "884480",
    "end": "885760"
  },
  {
    "text": "okay let us try to send a normal data so",
    "start": "885760",
    "end": "887839"
  },
  {
    "text": "this is the data that i once sent",
    "start": "887839",
    "end": "891199"
  },
  {
    "text": "and this is the kubecon viewer so when i",
    "start": "891279",
    "end": "894079"
  },
  {
    "text": "send it it will say that unsupported",
    "start": "894079",
    "end": "895680"
  },
  {
    "text": "media type",
    "start": "895680",
    "end": "896880"
  },
  {
    "text": "so as i told so what it means to send a",
    "start": "896880",
    "end": "899120"
  },
  {
    "text": "cloud event is just by adding these",
    "start": "899120",
    "end": "900560"
  },
  {
    "text": "headers",
    "start": "900560",
    "end": "901760"
  },
  {
    "text": "so i'll just add these headers and say",
    "start": "901760",
    "end": "905120"
  },
  {
    "text": "send",
    "start": "905120",
    "end": "906639"
  },
  {
    "text": "and as you go here you and you get the",
    "start": "906639",
    "end": "909120"
  },
  {
    "text": "data",
    "start": "909120",
    "end": "909760"
  },
  {
    "text": "okay so this is the one-to-one delivery",
    "start": "909760",
    "end": "912000"
  },
  {
    "text": "directly you have the source",
    "start": "912000",
    "end": "913120"
  },
  {
    "text": "and then you deliver it to the seek or",
    "start": "913120",
    "end": "915279"
  },
  {
    "text": "the processing function",
    "start": "915279",
    "end": "917519"
  },
  {
    "text": "but instead the more sought after thing",
    "start": "917519",
    "end": "919839"
  },
  {
    "text": "is like sending it to a broker",
    "start": "919839",
    "end": "921440"
  },
  {
    "text": "and then have the triggers and filters",
    "start": "921440",
    "end": "923120"
  },
  {
    "text": "do the filtering and then",
    "start": "923120",
    "end": "924560"
  },
  {
    "text": "forward the data accordingly so let me",
    "start": "924560",
    "end": "926959"
  },
  {
    "text": "show you how the broker",
    "start": "926959",
    "end": "928320"
  },
  {
    "text": "and the sync look like so this is an",
    "start": "928320",
    "end": "930720"
  },
  {
    "text": "example of how you create a broker",
    "start": "930720",
    "end": "932959"
  },
  {
    "text": "this how simple it is and broker is an",
    "start": "932959",
    "end": "936480"
  },
  {
    "text": "abstraction on top of",
    "start": "936480",
    "end": "938320"
  },
  {
    "text": "a store like a kafka",
    "start": "938320",
    "end": "942079"
  },
  {
    "text": "or a rabbit enqueue okay so that is what",
    "start": "942079",
    "end": "944880"
  },
  {
    "text": "is like storing your data eventually",
    "start": "944880",
    "end": "947120"
  },
  {
    "text": "and trigger here you can see i have",
    "start": "947120",
    "end": "950320"
  },
  {
    "text": "two functions kubecon wear and knew",
    "start": "950320",
    "end": "954240"
  },
  {
    "text": "and the k n viewer is expecting a",
    "start": "954240",
    "end": "956399"
  },
  {
    "text": "message type k n type",
    "start": "956399",
    "end": "958240"
  },
  {
    "text": "and the kubecon viewer is expecting",
    "start": "958240",
    "end": "959839"
  },
  {
    "text": "message dot cube contact",
    "start": "959839",
    "end": "961519"
  },
  {
    "text": "okay so and then this is the this is the",
    "start": "961519",
    "end": "964880"
  },
  {
    "text": "subscriber it wants",
    "start": "964880",
    "end": "966160"
  },
  {
    "text": "instead if you want to change change",
    "start": "966160",
    "end": "968639"
  },
  {
    "text": "change it to a kubernetes service you",
    "start": "968639",
    "end": "970079"
  },
  {
    "text": "can also do that open it i can just do",
    "start": "970079",
    "end": "972399"
  },
  {
    "text": "uh v1 and then this will be a kubernetes",
    "start": "972399",
    "end": "974560"
  },
  {
    "text": "service okay",
    "start": "974560",
    "end": "977279"
  },
  {
    "text": "so this is already created i just want",
    "start": "977279",
    "end": "978959"
  },
  {
    "text": "to show you how it looks like now okay",
    "start": "978959",
    "end": "982160"
  },
  {
    "text": "so now instead of sending the kubecon",
    "start": "982160",
    "end": "984160"
  },
  {
    "text": "viewer we are going to send it to the",
    "start": "984160",
    "end": "985920"
  },
  {
    "text": "through the broker okay so and it is",
    "start": "985920",
    "end": "988880"
  },
  {
    "text": "sending message.kn.take",
    "start": "988880",
    "end": "990800"
  },
  {
    "text": "so here is the k n viewer if i send this",
    "start": "990800",
    "end": "993279"
  },
  {
    "text": "message we should show the message here",
    "start": "993279",
    "end": "997120"
  },
  {
    "text": "and you see the message here okay and",
    "start": "997120",
    "end": "999680"
  },
  {
    "text": "just by changing the",
    "start": "999680",
    "end": "1000959"
  },
  {
    "text": "message type to kubecon",
    "start": "1000959",
    "end": "1002830"
  },
  {
    "text": "[Music]",
    "start": "1002830",
    "end": "1005839"
  },
  {
    "text": "you see it here okay so this is how this",
    "start": "1005839",
    "end": "1008480"
  },
  {
    "text": "powerful is just having this headers",
    "start": "1008480",
    "end": "1010800"
  },
  {
    "text": "and sending it to broker and how this is",
    "start": "1010800",
    "end": "1013519"
  },
  {
    "text": "how the triggers and filters are able to",
    "start": "1013519",
    "end": "1015040"
  },
  {
    "text": "filter the data and send it",
    "start": "1015040",
    "end": "1017440"
  },
  {
    "text": "okay so now we'll go back to the uh deck",
    "start": "1017440",
    "end": "1020720"
  },
  {
    "text": "and then see some optum use cases",
    "start": "1020720",
    "end": "1025839"
  },
  {
    "start": "1025000",
    "end": "1238000"
  },
  {
    "text": "now that you saw a lot of demo for",
    "start": "1026799",
    "end": "1029600"
  },
  {
    "text": "cloudy events let's start to look into",
    "start": "1029600",
    "end": "1031678"
  },
  {
    "text": "the optimum use cases which is using",
    "start": "1031679",
    "end": "1033760"
  },
  {
    "text": "cloud events",
    "start": "1033760",
    "end": "1036480"
  },
  {
    "text": "the first one we wanted to start with is",
    "start": "1036959",
    "end": "1039038"
  },
  {
    "text": "the infrastructure 360.",
    "start": "1039039",
    "end": "1042639"
  },
  {
    "text": "as i already explained a lot of our",
    "start": "1042720",
    "end": "1045038"
  },
  {
    "text": "workloads is running in our own data",
    "start": "1045039",
    "end": "1046720"
  },
  {
    "text": "center",
    "start": "1046720",
    "end": "1047438"
  },
  {
    "text": "and infrastructure 360 provides a 360",
    "start": "1047439",
    "end": "1050240"
  },
  {
    "text": "view",
    "start": "1050240",
    "end": "1050720"
  },
  {
    "text": "of the application infrastructure",
    "start": "1050720",
    "end": "1052480"
  },
  {
    "text": "components for a given app",
    "start": "1052480",
    "end": "1054480"
  },
  {
    "text": "or a service like for example",
    "start": "1054480",
    "end": "1057919"
  },
  {
    "text": "if an application is using a vm a",
    "start": "1057919",
    "end": "1060400"
  },
  {
    "text": "database host",
    "start": "1060400",
    "end": "1061440"
  },
  {
    "text": "container namespaces storage chargeback",
    "start": "1061440",
    "end": "1063840"
  },
  {
    "text": "etc",
    "start": "1063840",
    "end": "1065280"
  },
  {
    "text": "we ran into some of the challenges with",
    "start": "1065280",
    "end": "1067280"
  },
  {
    "text": "the growing even sources with more than",
    "start": "1067280",
    "end": "1069440"
  },
  {
    "text": "40",
    "start": "1069440",
    "end": "1070400"
  },
  {
    "text": "sources that we ingest today and we also",
    "start": "1070400",
    "end": "1072960"
  },
  {
    "text": "have to support multiple data formats",
    "start": "1072960",
    "end": "1075440"
  },
  {
    "text": "and sometimes some of the overlooked",
    "start": "1075440",
    "end": "1077120"
  },
  {
    "text": "overlapping formats",
    "start": "1077120",
    "end": "1078640"
  },
  {
    "text": "and there is no control over the source",
    "start": "1078640",
    "end": "1080799"
  },
  {
    "text": "so these are some of the challenges",
    "start": "1080799",
    "end": "1082720"
  },
  {
    "text": "and let's see how we re-architected that",
    "start": "1082720",
    "end": "1085039"
  },
  {
    "text": "with cloud events",
    "start": "1085039",
    "end": "1087039"
  },
  {
    "text": "now the first thing that we did was to",
    "start": "1087039",
    "end": "1090240"
  },
  {
    "text": "identify the different formats",
    "start": "1090240",
    "end": "1092400"
  },
  {
    "text": "and for each format we defined the cloud",
    "start": "1092400",
    "end": "1095200"
  },
  {
    "text": "event type",
    "start": "1095200",
    "end": "1096400"
  },
  {
    "text": "and the build parser and processor",
    "start": "1096400",
    "end": "1099600"
  },
  {
    "text": "functions for it and the second thing",
    "start": "1099600",
    "end": "1102080"
  },
  {
    "text": "was to build the k native event source",
    "start": "1102080",
    "end": "1104400"
  },
  {
    "text": "to ingest the data into the broker now",
    "start": "1104400",
    "end": "1107600"
  },
  {
    "text": "with this re-architecture the entire",
    "start": "1107600",
    "end": "1109520"
  },
  {
    "text": "process is resilient",
    "start": "1109520",
    "end": "1110960"
  },
  {
    "text": "to any upstream or downstream process",
    "start": "1110960",
    "end": "1113280"
  },
  {
    "text": "failures",
    "start": "1113280",
    "end": "1115760"
  },
  {
    "text": "let's talk about another common use case",
    "start": "1115919",
    "end": "1118320"
  },
  {
    "text": "the etl use case",
    "start": "1118320",
    "end": "1120240"
  },
  {
    "text": "this is a very common healthcare use",
    "start": "1120240",
    "end": "1122080"
  },
  {
    "text": "case the example we have",
    "start": "1122080",
    "end": "1124000"
  },
  {
    "text": "is with eligibility even data coming",
    "start": "1124000",
    "end": "1126400"
  },
  {
    "text": "from various sources",
    "start": "1126400",
    "end": "1127600"
  },
  {
    "text": "as listed here as the eligibility data",
    "start": "1127600",
    "end": "1131120"
  },
  {
    "text": "flows through the system there is a lot",
    "start": "1131120",
    "end": "1133120"
  },
  {
    "text": "of hops and business logic",
    "start": "1133120",
    "end": "1135360"
  },
  {
    "text": "that it has to go through before",
    "start": "1135360",
    "end": "1136880"
  },
  {
    "text": "consumption but with this rv",
    "start": "1136880",
    "end": "1139360"
  },
  {
    "text": "architecture with cloud events",
    "start": "1139360",
    "end": "1141200"
  },
  {
    "text": "it has helped us to move from",
    "start": "1141200",
    "end": "1142799"
  },
  {
    "text": "traditional esb",
    "start": "1142799",
    "end": "1144400"
  },
  {
    "text": "and etl processing that happens with the",
    "start": "1144400",
    "end": "1146799"
  },
  {
    "text": "database",
    "start": "1146799",
    "end": "1147600"
  },
  {
    "text": "to even driven functions we now have",
    "start": "1147600",
    "end": "1150640"
  },
  {
    "text": "reusable business logic functions",
    "start": "1150640",
    "end": "1152799"
  },
  {
    "text": "that is shared across the team and we",
    "start": "1152799",
    "end": "1155120"
  },
  {
    "text": "are also able to connect",
    "start": "1155120",
    "end": "1156480"
  },
  {
    "text": "sources and processes across the",
    "start": "1156480",
    "end": "1158960"
  },
  {
    "text": "organization",
    "start": "1158960",
    "end": "1161760"
  },
  {
    "text": "now let's look at another use case with",
    "start": "1162559",
    "end": "1165440"
  },
  {
    "text": "iot",
    "start": "1165440",
    "end": "1166480"
  },
  {
    "text": "iot we have a lot of healthcare devices",
    "start": "1166480",
    "end": "1170240"
  },
  {
    "text": "and many apps in this industry at optum",
    "start": "1170240",
    "end": "1173520"
  },
  {
    "text": "we support inserted programs based on",
    "start": "1173520",
    "end": "1175840"
  },
  {
    "text": "devices data",
    "start": "1175840",
    "end": "1177280"
  },
  {
    "text": "this is a very good use case for cloud",
    "start": "1177280",
    "end": "1179280"
  },
  {
    "text": "events to support",
    "start": "1179280",
    "end": "1180559"
  },
  {
    "text": "various formats and the types",
    "start": "1180559",
    "end": "1184720"
  },
  {
    "text": "okay so with this iot use case i just",
    "start": "1185679",
    "end": "1188480"
  },
  {
    "text": "want to show",
    "start": "1188480",
    "end": "1189200"
  },
  {
    "text": "a demo of like how we could take from",
    "start": "1189200",
    "end": "1191679"
  },
  {
    "text": "different data sources",
    "start": "1191679",
    "end": "1193360"
  },
  {
    "text": "pass it and show it in the db and then",
    "start": "1193360",
    "end": "1195600"
  },
  {
    "text": "maybe show it in the graphene dashboard",
    "start": "1195600",
    "end": "1198000"
  },
  {
    "text": "so before that uh there are like",
    "start": "1198000",
    "end": "1200960"
  },
  {
    "text": "multiple health devices",
    "start": "1200960",
    "end": "1202640"
  },
  {
    "text": "apps like that like more than 40 or 40",
    "start": "1202640",
    "end": "1205039"
  },
  {
    "text": "commonly used devices and health",
    "start": "1205039",
    "end": "1206880"
  },
  {
    "text": "apps and then a lot of healthcare",
    "start": "1206880",
    "end": "1208960"
  },
  {
    "text": "companies do give benefits to the users",
    "start": "1208960",
    "end": "1211360"
  },
  {
    "text": "for sending their data over and",
    "start": "1211360",
    "end": "1214480"
  },
  {
    "text": "within optum also so we have like",
    "start": "1214480",
    "end": "1216159"
  },
  {
    "text": "various implementations and programs to",
    "start": "1216159",
    "end": "1218240"
  },
  {
    "text": "give benefits to our users",
    "start": "1218240",
    "end": "1220000"
  },
  {
    "text": "so the one that we are going to show",
    "start": "1220000",
    "end": "1221679"
  },
  {
    "text": "here is mirroring",
    "start": "1221679",
    "end": "1223520"
  },
  {
    "text": "an actual implementation but not the",
    "start": "1223520",
    "end": "1225280"
  },
  {
    "text": "actual implementation itself",
    "start": "1225280",
    "end": "1226960"
  },
  {
    "text": "and the data that we are using is a",
    "start": "1226960",
    "end": "1229200"
  },
  {
    "text": "simulated",
    "start": "1229200",
    "end": "1230159"
  },
  {
    "text": "data so for just for this use case we",
    "start": "1230159",
    "end": "1232320"
  },
  {
    "text": "are showing these three even sources",
    "start": "1232320",
    "end": "1234000"
  },
  {
    "text": "alone",
    "start": "1234000",
    "end": "1234640"
  },
  {
    "text": "and as i told there like multiple even",
    "start": "1234640",
    "end": "1236240"
  },
  {
    "text": "sources okay",
    "start": "1236240",
    "end": "1238720"
  },
  {
    "start": "1238000",
    "end": "1490000"
  },
  {
    "text": "so first i want to show how these uh",
    "start": "1238720",
    "end": "1241600"
  },
  {
    "text": "different",
    "start": "1241600",
    "end": "1242159"
  },
  {
    "text": "data formats look like so this is an",
    "start": "1242159",
    "end": "1244080"
  },
  {
    "text": "example of like how the strava format",
    "start": "1244080",
    "end": "1246080"
  },
  {
    "text": "looks like it's a json format though",
    "start": "1246080",
    "end": "1248159"
  },
  {
    "text": "but you can see the data and how they",
    "start": "1248159",
    "end": "1250400"
  },
  {
    "text": "give the activities are totally",
    "start": "1250400",
    "end": "1251840"
  },
  {
    "text": "different",
    "start": "1251840",
    "end": "1252880"
  },
  {
    "text": "and fitbit is also a json format but the",
    "start": "1252880",
    "end": "1255919"
  },
  {
    "text": "data names here and there don't even",
    "start": "1255919",
    "end": "1257919"
  },
  {
    "text": "match and the duration here will be like",
    "start": "1257919",
    "end": "1259520"
  },
  {
    "text": "in milliseconds there it is in seconds",
    "start": "1259520",
    "end": "1262000"
  },
  {
    "text": "so this is some some of the examples and",
    "start": "1262000",
    "end": "1263840"
  },
  {
    "text": "then run keeper",
    "start": "1263840",
    "end": "1265039"
  },
  {
    "text": "the data comes in csp format it's not",
    "start": "1265039",
    "end": "1267200"
  },
  {
    "text": "even json",
    "start": "1267200",
    "end": "1268640"
  },
  {
    "text": "so that is the different challenges and",
    "start": "1268640",
    "end": "1270159"
  },
  {
    "text": "then for other apps there may be xml",
    "start": "1270159",
    "end": "1274240"
  },
  {
    "text": "and some devices we need to have a",
    "start": "1274240",
    "end": "1276480"
  },
  {
    "text": "particular sdk",
    "start": "1276480",
    "end": "1277760"
  },
  {
    "text": "so like each uh apps and devices have",
    "start": "1277760",
    "end": "1281360"
  },
  {
    "text": "their",
    "start": "1281360",
    "end": "1281679"
  },
  {
    "text": "uh own challenges okay so going back to",
    "start": "1281679",
    "end": "1285120"
  },
  {
    "text": "this",
    "start": "1285120",
    "end": "1285520"
  },
  {
    "text": "uh use case",
    "start": "1285520",
    "end": "1290559"
  },
  {
    "text": "we have various uh services deployed",
    "start": "1290559",
    "end": "1294080"
  },
  {
    "text": "and uh before that i just want to show",
    "start": "1294080",
    "end": "1298080"
  },
  {
    "text": "uh i just want to talk about this",
    "start": "1298080",
    "end": "1300480"
  },
  {
    "text": "application",
    "start": "1300480",
    "end": "1301200"
  },
  {
    "text": "that is showing a graphical view of the",
    "start": "1301200",
    "end": "1303280"
  },
  {
    "text": "functions depart okay",
    "start": "1303280",
    "end": "1305120"
  },
  {
    "text": "it's called graph and then it is",
    "start": "1305120",
    "end": "1307280"
  },
  {
    "text": "developed by one of the uh kennedy",
    "start": "1307280",
    "end": "1309360"
  },
  {
    "text": "community members",
    "start": "1309360",
    "end": "1310799"
  },
  {
    "text": "important contributor called um scott",
    "start": "1310799",
    "end": "1314159"
  },
  {
    "text": "nichols",
    "start": "1314159",
    "end": "1314880"
  },
  {
    "text": "and if you want more details about this",
    "start": "1314880",
    "end": "1317679"
  },
  {
    "text": "graph",
    "start": "1317679",
    "end": "1318159"
  },
  {
    "text": "you can go to this his github report",
    "start": "1318159",
    "end": "1321200"
  },
  {
    "text": "okay and then any use case that we are",
    "start": "1321200",
    "end": "1323760"
  },
  {
    "text": "showing here",
    "start": "1323760",
    "end": "1324480"
  },
  {
    "text": "all these use cases are available under",
    "start": "1324480",
    "end": "1326799"
  },
  {
    "text": "my",
    "start": "1326799",
    "end": "1327520"
  },
  {
    "text": "github repo github.com",
    "start": "1327520",
    "end": "1331280"
  },
  {
    "text": "okay so you can take a look at the",
    "start": "1331280",
    "end": "1332960"
  },
  {
    "text": "source code okay now coming back as use",
    "start": "1332960",
    "end": "1335280"
  },
  {
    "text": "case",
    "start": "1335280",
    "end": "1335919"
  },
  {
    "text": "uh we have like various uh even",
    "start": "1335919",
    "end": "1337760"
  },
  {
    "text": "processors uh",
    "start": "1337760",
    "end": "1338960"
  },
  {
    "text": "lined up okay on the right side you can",
    "start": "1338960",
    "end": "1340480"
  },
  {
    "text": "see for elliptical data",
    "start": "1340480",
    "end": "1342320"
  },
  {
    "text": "we have one uh function for fitbit data",
    "start": "1342320",
    "end": "1345440"
  },
  {
    "text": "we have one function so write data we",
    "start": "1345440",
    "end": "1347120"
  },
  {
    "text": "have one function",
    "start": "1347120",
    "end": "1347840"
  },
  {
    "text": "okay uh this is all processing function",
    "start": "1347840",
    "end": "1350240"
  },
  {
    "text": "so what about",
    "start": "1350240",
    "end": "1351120"
  },
  {
    "text": "data injection function for data",
    "start": "1351120",
    "end": "1353039"
  },
  {
    "text": "injection on the left side you can see",
    "start": "1353039",
    "end": "1355039"
  },
  {
    "text": "there are various",
    "start": "1355039",
    "end": "1356320"
  },
  {
    "text": "uh data injection functions the first",
    "start": "1356320",
    "end": "1358000"
  },
  {
    "text": "one is like uh the",
    "start": "1358000",
    "end": "1360320"
  },
  {
    "text": "uh the fitbit data it takes the data and",
    "start": "1360320",
    "end": "1363039"
  },
  {
    "text": "then converts it into four different",
    "start": "1363039",
    "end": "1364880"
  },
  {
    "text": "uh even types and then puts it back into",
    "start": "1364880",
    "end": "1366880"
  },
  {
    "text": "the broker",
    "start": "1366880",
    "end": "1367919"
  },
  {
    "text": "for which uh there's a separate uh data",
    "start": "1367919",
    "end": "1370559"
  },
  {
    "text": "addition",
    "start": "1370559",
    "end": "1371039"
  },
  {
    "text": "so for binding binding the",
    "start": "1371039",
    "end": "1374080"
  },
  {
    "text": "function back to the broker there is a",
    "start": "1374080",
    "end": "1376880"
  },
  {
    "text": "resource that k native provides it's",
    "start": "1376880",
    "end": "1378559"
  },
  {
    "text": "called the sync binding",
    "start": "1378559",
    "end": "1379840"
  },
  {
    "text": "the job of the sync binding is just to",
    "start": "1379840",
    "end": "1381679"
  },
  {
    "text": "inject the ingest the",
    "start": "1381679",
    "end": "1384080"
  },
  {
    "text": "inject the broker url or any",
    "start": "1384080",
    "end": "1387440"
  },
  {
    "text": "sync url into the function okay so they",
    "start": "1387440",
    "end": "1390159"
  },
  {
    "text": "can send the data over there",
    "start": "1390159",
    "end": "1392080"
  },
  {
    "text": "so on the left side it is the data",
    "start": "1392080",
    "end": "1393600"
  },
  {
    "text": "injection on the right side is the",
    "start": "1393600",
    "end": "1395679"
  },
  {
    "text": "processing function in the middle is the",
    "start": "1395679",
    "end": "1397200"
  },
  {
    "text": "broker and the broker you can see what",
    "start": "1397200",
    "end": "1399039"
  },
  {
    "text": "all the triggers that we created",
    "start": "1399039",
    "end": "1400720"
  },
  {
    "text": "so as i explained earlier if the",
    "start": "1400720",
    "end": "1404240"
  },
  {
    "text": "trigger type is held at elliptical type",
    "start": "1404240",
    "end": "1406400"
  },
  {
    "text": "it's going to go into the elliptical",
    "start": "1406400",
    "end": "1407679"
  },
  {
    "text": "data",
    "start": "1407679",
    "end": "1408400"
  },
  {
    "text": "if it is a if it is a fitbit type it's",
    "start": "1408400",
    "end": "1411360"
  },
  {
    "text": "going to go to the fitbit",
    "start": "1411360",
    "end": "1412720"
  },
  {
    "text": "okay uh and all the data that goes into",
    "start": "1412720",
    "end": "1416880"
  },
  {
    "text": "the mysql you're going to",
    "start": "1416880",
    "end": "1418640"
  },
  {
    "text": "see it in the graphana dashboard okay",
    "start": "1418640",
    "end": "1420720"
  },
  {
    "text": "now it's time to",
    "start": "1420720",
    "end": "1422480"
  },
  {
    "text": "run this uh",
    "start": "1422480",
    "end": "1425360"
  },
  {
    "text": "so you in the you're going to see all",
    "start": "1426799",
    "end": "1428559"
  },
  {
    "text": "the applications that are going to get",
    "start": "1428559",
    "end": "1431120"
  },
  {
    "text": "created",
    "start": "1431120",
    "end": "1432159"
  },
  {
    "text": "and the functions that are going to",
    "start": "1432159",
    "end": "1433360"
  },
  {
    "text": "create it here okay so",
    "start": "1433360",
    "end": "1435440"
  },
  {
    "text": "on the bottom we have just triggered the",
    "start": "1435440",
    "end": "1437600"
  },
  {
    "text": "shell script to start the data",
    "start": "1437600",
    "end": "1439120"
  },
  {
    "text": "irrigation process",
    "start": "1439120",
    "end": "1440240"
  },
  {
    "text": "so once the data is ingested you're",
    "start": "1440240",
    "end": "1441760"
  },
  {
    "text": "going to see the functions getting",
    "start": "1441760",
    "end": "1443919"
  },
  {
    "text": "triggered for like various processes",
    "start": "1443919",
    "end": "1446240"
  },
  {
    "text": "but everything is going to come up here",
    "start": "1446240",
    "end": "1448000"
  },
  {
    "text": "okay and then",
    "start": "1448000",
    "end": "1449840"
  },
  {
    "text": "once this is completed so you're going",
    "start": "1449840",
    "end": "1451840"
  },
  {
    "text": "to see the data here",
    "start": "1451840",
    "end": "1454880"
  },
  {
    "text": "and there you go so you have data for",
    "start": "1455679",
    "end": "1458720"
  },
  {
    "text": "straw your data for feedback you have",
    "start": "1458720",
    "end": "1460799"
  },
  {
    "text": "data for run keeper",
    "start": "1460799",
    "end": "1464080"
  },
  {
    "text": "so fitbit as you know is like the most",
    "start": "1464799",
    "end": "1467360"
  },
  {
    "text": "complete",
    "start": "1467360",
    "end": "1468400"
  },
  {
    "text": "thing but this data for most different",
    "start": "1468400",
    "end": "1470960"
  },
  {
    "text": "activities okay",
    "start": "1470960",
    "end": "1472320"
  },
  {
    "text": "so that's about it that's about this uh",
    "start": "1472320",
    "end": "1474720"
  },
  {
    "text": "example the use case demo that i wanted",
    "start": "1474720",
    "end": "1476960"
  },
  {
    "text": "to show so we are taking various",
    "start": "1476960",
    "end": "1478240"
  },
  {
    "text": "different data formats and consolidating",
    "start": "1478240",
    "end": "1480480"
  },
  {
    "text": "and then putting loading into it into a",
    "start": "1480480",
    "end": "1482400"
  },
  {
    "text": "database in common format",
    "start": "1482400",
    "end": "1484240"
  },
  {
    "text": "for this kind of view or give some",
    "start": "1484240",
    "end": "1485840"
  },
  {
    "text": "incentive uh programs",
    "start": "1485840",
    "end": "1489200"
  },
  {
    "start": "1490000",
    "end": "1591000"
  },
  {
    "text": "okay so uh and finally i just want to",
    "start": "1490320",
    "end": "1492960"
  },
  {
    "text": "explain how the event uh flows",
    "start": "1492960",
    "end": "1494880"
  },
  {
    "text": "through okay how the event starts and",
    "start": "1494880",
    "end": "1496720"
  },
  {
    "text": "ends up in a database",
    "start": "1496720",
    "end": "1498559"
  },
  {
    "text": "uh in this example uh first step in the",
    "start": "1498559",
    "end": "1500960"
  },
  {
    "text": "data ingestion process we went to the",
    "start": "1500960",
    "end": "1502640"
  },
  {
    "text": "fitbit",
    "start": "1502640",
    "end": "1503200"
  },
  {
    "text": "uh apa took the data convert that into",
    "start": "1503200",
    "end": "1506640"
  },
  {
    "text": "the fitbit type and then stored in the",
    "start": "1506640",
    "end": "1508720"
  },
  {
    "text": "broker and we had a trigger",
    "start": "1508720",
    "end": "1511120"
  },
  {
    "text": "uh to take the health.fitbit.type cloud",
    "start": "1511120",
    "end": "1514080"
  },
  {
    "text": "event",
    "start": "1514080",
    "end": "1514640"
  },
  {
    "text": "and then the that will be processed by",
    "start": "1514640",
    "end": "1517919"
  },
  {
    "text": "a particular function and it will create",
    "start": "1517919",
    "end": "1519840"
  },
  {
    "text": "four events in in turn",
    "start": "1519840",
    "end": "1521919"
  },
  {
    "text": "like one for steps one for running one",
    "start": "1521919",
    "end": "1524000"
  },
  {
    "text": "for walking one for elliptical",
    "start": "1524000",
    "end": "1526000"
  },
  {
    "text": "and the step type alone is processed by",
    "start": "1526000",
    "end": "1528240"
  },
  {
    "text": "one function and then finally it is",
    "start": "1528240",
    "end": "1529520"
  },
  {
    "text": "positioned into the database",
    "start": "1529520",
    "end": "1531200"
  },
  {
    "text": "for us to view in the garage dashboard",
    "start": "1531200",
    "end": "1535039"
  },
  {
    "text": "so now that you saw um",
    "start": "1540960",
    "end": "1544159"
  },
  {
    "text": "the cloud events in action with various",
    "start": "1544159",
    "end": "1546320"
  },
  {
    "text": "optum use cases",
    "start": "1546320",
    "end": "1547520"
  },
  {
    "text": "we would like to summarize by saying why",
    "start": "1547520",
    "end": "1549679"
  },
  {
    "text": "we like cloud events the first thing",
    "start": "1549679",
    "end": "1551679"
  },
  {
    "text": "the first thing that comes to my mind is",
    "start": "1551679",
    "end": "1553120"
  },
  {
    "text": "you don't have to boil the ocean",
    "start": "1553120",
    "end": "1555200"
  },
  {
    "text": "because it's an industry spec and binds",
    "start": "1555200",
    "end": "1557440"
  },
  {
    "text": "to existing protocols",
    "start": "1557440",
    "end": "1558960"
  },
  {
    "text": "and integrates with current optimum",
    "start": "1558960",
    "end": "1560720"
  },
  {
    "text": "assets be it messaging or eventing stack",
    "start": "1560720",
    "end": "1563840"
  },
  {
    "text": "basically it's just a wrapper around an",
    "start": "1563840",
    "end": "1566000"
  },
  {
    "text": "existing event",
    "start": "1566000",
    "end": "1567440"
  },
  {
    "text": "and we are currently actively exploring",
    "start": "1567440",
    "end": "1570640"
  },
  {
    "text": "serverless workflow",
    "start": "1570640",
    "end": "1572000"
  },
  {
    "text": "for orchestration of the even driven",
    "start": "1572000",
    "end": "1574480"
  },
  {
    "text": "functions",
    "start": "1574480",
    "end": "1575200"
  },
  {
    "text": "which is again based on cloud event spec",
    "start": "1575200",
    "end": "1578880"
  },
  {
    "text": "open api grpc this is by using this we",
    "start": "1578880",
    "end": "1582400"
  },
  {
    "text": "want to reduce our esb",
    "start": "1582400",
    "end": "1583919"
  },
  {
    "text": "footprint and most above all we would",
    "start": "1583919",
    "end": "1586559"
  },
  {
    "text": "like to thank the growing community",
    "start": "1586559",
    "end": "1588159"
  },
  {
    "text": "support",
    "start": "1588159",
    "end": "1589760"
  },
  {
    "text": "thank you all okay thank you",
    "start": "1589760",
    "end": "1593760"
  }
]