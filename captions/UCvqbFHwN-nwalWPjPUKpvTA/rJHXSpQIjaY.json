[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "hello everyone i am charles software",
    "start": "0",
    "end": "3280"
  },
  {
    "text": "engineer at alibaba cloud",
    "start": "3280",
    "end": "5680"
  },
  {
    "text": "today we are going to present our work",
    "start": "5680",
    "end": "8240"
  },
  {
    "text": "take the edge to the cloud",
    "start": "8240",
    "end": "9920"
  },
  {
    "text": "with open yard and the ajax foundry this",
    "start": "9920",
    "end": "13280"
  },
  {
    "text": "is a cooperation project between alibaba",
    "start": "13280",
    "end": "16000"
  },
  {
    "text": "cloud",
    "start": "16000",
    "end": "16560"
  },
  {
    "text": "and the vmware this talk will be divided",
    "start": "16560",
    "end": "21039"
  },
  {
    "start": "19000",
    "end": "47000"
  },
  {
    "text": "into four sections",
    "start": "21039",
    "end": "22960"
  },
  {
    "text": "first i will introduce the four main",
    "start": "22960",
    "end": "25439"
  },
  {
    "text": "challenges",
    "start": "25439",
    "end": "26240"
  },
  {
    "text": "of applying kubernetes to edge computing",
    "start": "26240",
    "end": "28720"
  },
  {
    "text": "environment",
    "start": "28720",
    "end": "29760"
  },
  {
    "text": "and how open yard address these four",
    "start": "29760",
    "end": "32078"
  },
  {
    "text": "challenges",
    "start": "32079",
    "end": "34000"
  },
  {
    "text": "then eachine will provide the necessary",
    "start": "34000",
    "end": "36239"
  },
  {
    "text": "backgrounds of ajax foundry",
    "start": "36239",
    "end": "38399"
  },
  {
    "text": "and how we combine open yard with ajax",
    "start": "38399",
    "end": "41120"
  },
  {
    "text": "foundry",
    "start": "41120",
    "end": "42640"
  },
  {
    "text": "and finally we will wrap up the talk",
    "start": "42640",
    "end": "44960"
  },
  {
    "text": "with a demo",
    "start": "44960",
    "end": "47680"
  },
  {
    "start": "47000",
    "end": "176000"
  },
  {
    "text": "so why we need to use open yard and why",
    "start": "48559",
    "end": "51280"
  },
  {
    "text": "we cannot use kubernetes in edge",
    "start": "51280",
    "end": "53440"
  },
  {
    "text": "computing environment directly",
    "start": "53440",
    "end": "56000"
  },
  {
    "text": "to answer this question we have to",
    "start": "56000",
    "end": "57920"
  },
  {
    "text": "understand that",
    "start": "57920",
    "end": "59359"
  },
  {
    "text": "applying kubernetes to the edge",
    "start": "59359",
    "end": "61039"
  },
  {
    "text": "computing environment",
    "start": "61039",
    "end": "62480"
  },
  {
    "text": "requiring us to overcome four challenges",
    "start": "62480",
    "end": "66000"
  },
  {
    "text": "first how can we prevent the parts from",
    "start": "66000",
    "end": "69040"
  },
  {
    "text": "being evicted",
    "start": "69040",
    "end": "70320"
  },
  {
    "text": "if edge nodes are temporarily",
    "start": "70320",
    "end": "72159"
  },
  {
    "text": "disconnected from the api server",
    "start": "72159",
    "end": "75680"
  },
  {
    "text": "second how can api servers send requests",
    "start": "75680",
    "end": "78960"
  },
  {
    "text": "to an edge node if they are located in",
    "start": "78960",
    "end": "81680"
  },
  {
    "text": "two",
    "start": "81680",
    "end": "82000"
  },
  {
    "text": "isolated networks",
    "start": "82000",
    "end": "85200"
  },
  {
    "text": "third how can we deploy workload by",
    "start": "85200",
    "end": "87840"
  },
  {
    "text": "region",
    "start": "87840",
    "end": "88400"
  },
  {
    "text": "as system settings or device models in",
    "start": "88400",
    "end": "90960"
  },
  {
    "text": "different regions may vary",
    "start": "90960",
    "end": "93680"
  },
  {
    "text": "four how can we manage edge device",
    "start": "93680",
    "end": "96720"
  },
  {
    "text": "with different protocols in a kubernetes",
    "start": "96720",
    "end": "99200"
  },
  {
    "text": "native way",
    "start": "99200",
    "end": "101520"
  },
  {
    "text": "we develop open yard to address these",
    "start": "101520",
    "end": "103680"
  },
  {
    "text": "four challenges",
    "start": "103680",
    "end": "105439"
  },
  {
    "text": "the design principle of open yard is",
    "start": "105439",
    "end": "108399"
  },
  {
    "text": "extend the native kubernetes to the edge",
    "start": "108399",
    "end": "111439"
  },
  {
    "text": "therefore we won't change the system",
    "start": "111439",
    "end": "113840"
  },
  {
    "text": "architecture",
    "start": "113840",
    "end": "114720"
  },
  {
    "text": "or any core components of the kubernetes",
    "start": "114720",
    "end": "118640"
  },
  {
    "text": "in the other words we will tackle all",
    "start": "118640",
    "end": "121200"
  },
  {
    "text": "the four challenges",
    "start": "121200",
    "end": "123280"
  },
  {
    "text": "only using the native kubernetes",
    "start": "123280",
    "end": "125439"
  },
  {
    "text": "workloads",
    "start": "125439",
    "end": "127119"
  },
  {
    "text": "in addition we always keep the goal in",
    "start": "127119",
    "end": "129679"
  },
  {
    "text": "mind that",
    "start": "129679",
    "end": "130560"
  },
  {
    "text": "we have to support all upstream",
    "start": "130560",
    "end": "132480"
  },
  {
    "text": "kubernetes features",
    "start": "132480",
    "end": "134959"
  },
  {
    "text": "here is the system architecture of open",
    "start": "134959",
    "end": "137280"
  },
  {
    "text": "yard",
    "start": "137280",
    "end": "138400"
  },
  {
    "text": "as we can see to have an open yard",
    "start": "138400",
    "end": "141040"
  },
  {
    "text": "cluster up and",
    "start": "141040",
    "end": "142000"
  },
  {
    "text": "running we only need to deploy several",
    "start": "142000",
    "end": "144400"
  },
  {
    "text": "controllers on cloud nodes",
    "start": "144400",
    "end": "146319"
  },
  {
    "text": "and on each edge node we only need to",
    "start": "146319",
    "end": "148640"
  },
  {
    "text": "deploy yard harp",
    "start": "148640",
    "end": "149840"
  },
  {
    "text": "and the yard tunnel agent in addition",
    "start": "149840",
    "end": "153200"
  },
  {
    "text": "we provide a command line tool yard ctl",
    "start": "153200",
    "end": "156480"
  },
  {
    "text": "to help us to manage an open yard",
    "start": "156480",
    "end": "158400"
  },
  {
    "text": "cluster",
    "start": "158400",
    "end": "159519"
  },
  {
    "text": "by simply running iota convert all the",
    "start": "159519",
    "end": "162879"
  },
  {
    "text": "above components",
    "start": "162879",
    "end": "164000"
  },
  {
    "text": "will be automatically deployed next",
    "start": "164000",
    "end": "167599"
  },
  {
    "text": "i will introduce each of these",
    "start": "167599",
    "end": "169519"
  },
  {
    "text": "components and how they help us",
    "start": "169519",
    "end": "171760"
  },
  {
    "text": "to tackle the four challenges",
    "start": "171760",
    "end": "175439"
  },
  {
    "start": "176000",
    "end": "311000"
  },
  {
    "text": "the first problem we try to solve is how",
    "start": "176879",
    "end": "179519"
  },
  {
    "text": "can we prevent parts",
    "start": "179519",
    "end": "181040"
  },
  {
    "text": "from being evicted when a network",
    "start": "181040",
    "end": "183120"
  },
  {
    "text": "connection between an edge node",
    "start": "183120",
    "end": "184879"
  },
  {
    "text": "and an api server has been cut off",
    "start": "184879",
    "end": "188000"
  },
  {
    "text": "in an edge computing environment the",
    "start": "188000",
    "end": "190080"
  },
  {
    "text": "network connection between edge nodes",
    "start": "190080",
    "end": "192239"
  },
  {
    "text": "and api server can be unstable however",
    "start": "192239",
    "end": "195680"
  },
  {
    "text": "kubernetes require the api server to be",
    "start": "195680",
    "end": "198159"
  },
  {
    "text": "tidally connected to worker nodes",
    "start": "198159",
    "end": "200720"
  },
  {
    "text": "if a worker node is disconnected from",
    "start": "200720",
    "end": "203120"
  },
  {
    "text": "the api server",
    "start": "203120",
    "end": "204560"
  },
  {
    "text": "or the api server misses several",
    "start": "204560",
    "end": "206799"
  },
  {
    "text": "heartbeats from the worker node",
    "start": "206799",
    "end": "208560"
  },
  {
    "text": "due to poor network connection the node",
    "start": "208560",
    "end": "211440"
  },
  {
    "text": "will be marked as",
    "start": "211440",
    "end": "212560"
  },
  {
    "text": "unready and the parts running on the",
    "start": "212560",
    "end": "215040"
  },
  {
    "text": "node will be erased from",
    "start": "215040",
    "end": "216959"
  },
  {
    "text": "atcd later when a worker node reconnects",
    "start": "216959",
    "end": "220640"
  },
  {
    "text": "to the api server",
    "start": "220640",
    "end": "222080"
  },
  {
    "text": "the kubelet will notice that parts",
    "start": "222080",
    "end": "224560"
  },
  {
    "text": "running on it",
    "start": "224560",
    "end": "225680"
  },
  {
    "text": "are not in the etcd then it will",
    "start": "225680",
    "end": "228640"
  },
  {
    "text": "physically evict the parts",
    "start": "228640",
    "end": "230879"
  },
  {
    "text": "this is something we don't want it to",
    "start": "230879",
    "end": "232400"
  },
  {
    "text": "happen",
    "start": "232400",
    "end": "234159"
  },
  {
    "text": "to avoid this from happening we develop",
    "start": "234159",
    "end": "237120"
  },
  {
    "text": "yacht hub",
    "start": "237120",
    "end": "238400"
  },
  {
    "text": "yacht hub functions as a reverse proxy",
    "start": "238400",
    "end": "240959"
  },
  {
    "text": "and local cache",
    "start": "240959",
    "end": "242400"
  },
  {
    "text": "that is deployed on each edge node",
    "start": "242400",
    "end": "245439"
  },
  {
    "text": "after it is up and running we will",
    "start": "245439",
    "end": "248159"
  },
  {
    "text": "connect",
    "start": "248159",
    "end": "248720"
  },
  {
    "text": "the kubelets to the yacht hub instead of",
    "start": "248720",
    "end": "251120"
  },
  {
    "text": "connecting to the api server on the",
    "start": "251120",
    "end": "253120"
  },
  {
    "text": "cloud",
    "start": "253120",
    "end": "254319"
  },
  {
    "text": "during the runtime the yacht hub will",
    "start": "254319",
    "end": "256799"
  },
  {
    "text": "keep checking",
    "start": "256799",
    "end": "257600"
  },
  {
    "text": "the healthiness of the network",
    "start": "257600",
    "end": "259359"
  },
  {
    "text": "connection between the edge node",
    "start": "259359",
    "end": "261359"
  },
  {
    "text": "and an api server if the network between",
    "start": "261359",
    "end": "264560"
  },
  {
    "text": "the edge node",
    "start": "264560",
    "end": "265360"
  },
  {
    "text": "and api server is stable kubelet will",
    "start": "265360",
    "end": "268800"
  },
  {
    "text": "talk to the api server directly",
    "start": "268800",
    "end": "271199"
  },
  {
    "text": "and synchronize the pass state as it",
    "start": "271199",
    "end": "273680"
  },
  {
    "text": "does in the native kubernetes",
    "start": "273680",
    "end": "276320"
  },
  {
    "text": "in the meanwhile the yacht hub will",
    "start": "276320",
    "end": "278560"
  },
  {
    "text": "cache post states in the local cache",
    "start": "278560",
    "end": "280840"
  },
  {
    "text": "storage",
    "start": "280840",
    "end": "282560"
  },
  {
    "text": "if the network between the edge node and",
    "start": "282560",
    "end": "285040"
  },
  {
    "text": "api server is cut off",
    "start": "285040",
    "end": "287120"
  },
  {
    "text": "the kubelet will use pass states in a",
    "start": "287120",
    "end": "289440"
  },
  {
    "text": "local storage instead",
    "start": "289440",
    "end": "291680"
  },
  {
    "text": "in addition we have a garbage collector",
    "start": "291680",
    "end": "294160"
  },
  {
    "text": "running in github",
    "start": "294160",
    "end": "295600"
  },
  {
    "text": "which periodically removes useless pod",
    "start": "295600",
    "end": "298080"
  },
  {
    "text": "stage from the local cache",
    "start": "298080",
    "end": "300400"
  },
  {
    "text": "at the same time we have the yacht",
    "start": "300400",
    "end": "302320"
  },
  {
    "text": "controller manager",
    "start": "302320",
    "end": "303680"
  },
  {
    "text": "running on the cloud to prohibit api",
    "start": "303680",
    "end": "306080"
  },
  {
    "text": "server from",
    "start": "306080",
    "end": "306800"
  },
  {
    "text": "expelling parts from unready edge nodes",
    "start": "306800",
    "end": "311840"
  },
  {
    "start": "311000",
    "end": "464000"
  },
  {
    "text": "the second problem we wanted to resolve",
    "start": "312000",
    "end": "314320"
  },
  {
    "text": "is how can we redirect the request from",
    "start": "314320",
    "end": "316639"
  },
  {
    "text": "api server to edge nodes",
    "start": "316639",
    "end": "319039"
  },
  {
    "text": "it is very common that users may want to",
    "start": "319039",
    "end": "321840"
  },
  {
    "text": "fetch logs of pods",
    "start": "321840",
    "end": "323440"
  },
  {
    "text": "or execute commands in parts",
    "start": "323440",
    "end": "326720"
  },
  {
    "text": "this operation are normally conducted by",
    "start": "326720",
    "end": "329199"
  },
  {
    "text": "using the kubictl command line tool",
    "start": "329199",
    "end": "332080"
  },
  {
    "text": "which will send http request to the api",
    "start": "332080",
    "end": "335039"
  },
  {
    "text": "server first",
    "start": "335039",
    "end": "336320"
  },
  {
    "text": "and then api server will redirect the",
    "start": "336320",
    "end": "338800"
  },
  {
    "text": "request to corresponding nodes",
    "start": "338800",
    "end": "341520"
  },
  {
    "text": "however in a production environment api",
    "start": "341520",
    "end": "344639"
  },
  {
    "text": "server is usually located on the cloud",
    "start": "344639",
    "end": "347520"
  },
  {
    "text": "while edge nodes are located in user's",
    "start": "347520",
    "end": "349919"
  },
  {
    "text": "private local networks",
    "start": "349919",
    "end": "352160"
  },
  {
    "text": "therefore api server cannot talk to edge",
    "start": "352160",
    "end": "354960"
  },
  {
    "text": "node directly",
    "start": "354960",
    "end": "356639"
  },
  {
    "text": "we developed the yacht tunnel to tackle",
    "start": "356639",
    "end": "358800"
  },
  {
    "text": "this problem",
    "start": "358800",
    "end": "360240"
  },
  {
    "text": "yacht tunnel using a client server",
    "start": "360240",
    "end": "362400"
  },
  {
    "text": "architecture",
    "start": "362400",
    "end": "363600"
  },
  {
    "text": "on each cloud node we deploy a yacht",
    "start": "363600",
    "end": "365759"
  },
  {
    "text": "tunnel server",
    "start": "365759",
    "end": "367120"
  },
  {
    "text": "while on each edge node a yacht tunnel",
    "start": "367120",
    "end": "369600"
  },
  {
    "text": "agent will be deployed",
    "start": "369600",
    "end": "372880"
  },
  {
    "text": "even though the incoming traffic may be",
    "start": "372880",
    "end": "375120"
  },
  {
    "text": "blocked outside of the private local",
    "start": "375120",
    "end": "377280"
  },
  {
    "text": "network",
    "start": "377280",
    "end": "378400"
  },
  {
    "text": "edge nodes can still send requests out",
    "start": "378400",
    "end": "380800"
  },
  {
    "text": "of the local network",
    "start": "380800",
    "end": "382639"
  },
  {
    "text": "therefore after yacht tunnel agent is",
    "start": "382639",
    "end": "385039"
  },
  {
    "text": "set up",
    "start": "385039",
    "end": "386400"
  },
  {
    "text": "it will initiate a reverse connection",
    "start": "386400",
    "end": "388960"
  },
  {
    "text": "and register itself on the yacht tunnel",
    "start": "388960",
    "end": "391280"
  },
  {
    "text": "server",
    "start": "391280",
    "end": "392800"
  },
  {
    "text": "to redirect the request to natano server",
    "start": "392800",
    "end": "395759"
  },
  {
    "text": "we inject the rules",
    "start": "395759",
    "end": "397199"
  },
  {
    "text": "to the host ip table which will redirect",
    "start": "397199",
    "end": "400400"
  },
  {
    "text": "all",
    "start": "400400",
    "end": "400720"
  },
  {
    "text": "outgoing http requests with destination",
    "start": "400720",
    "end": "403680"
  },
  {
    "text": "part",
    "start": "403680",
    "end": "405000"
  },
  {
    "text": "10250 and 10255",
    "start": "405000",
    "end": "408479"
  },
  {
    "text": "to the tunnel server yeah tunnel used",
    "start": "408479",
    "end": "411520"
  },
  {
    "text": "the api server network",
    "start": "411520",
    "end": "413120"
  },
  {
    "text": "proxy internally i will refer to api",
    "start": "413120",
    "end": "416240"
  },
  {
    "text": "server network proxy as an",
    "start": "416240",
    "end": "418080"
  },
  {
    "text": "amp in the rest of this talk amp does",
    "start": "418080",
    "end": "421599"
  },
  {
    "text": "not work with old version of kubernetes",
    "start": "421599",
    "end": "424880"
  },
  {
    "text": "that does not support the egress",
    "start": "424880",
    "end": "426880"
  },
  {
    "text": "selector",
    "start": "426880",
    "end": "428400"
  },
  {
    "text": "therefore we add an interceptor inside a",
    "start": "428400",
    "end": "430960"
  },
  {
    "text": "tunnel server",
    "start": "430960",
    "end": "432240"
  },
  {
    "text": "which will encapsulate http request in a",
    "start": "432240",
    "end": "435599"
  },
  {
    "text": "format that is compatible with amp",
    "start": "435599",
    "end": "439120"
  },
  {
    "text": "also since the amp used grpc",
    "start": "439120",
    "end": "442240"
  },
  {
    "text": "protocol to transfer data between tunnel",
    "start": "442240",
    "end": "444880"
  },
  {
    "text": "server and a tunnel agent",
    "start": "444880",
    "end": "446960"
  },
  {
    "text": "we are able to further reduce the",
    "start": "446960",
    "end": "448720"
  },
  {
    "text": "bandwidth between the cloud",
    "start": "448720",
    "end": "450000"
  },
  {
    "text": "nodes and edge nodes after a http",
    "start": "450000",
    "end": "453840"
  },
  {
    "text": "request",
    "start": "453840",
    "end": "454400"
  },
  {
    "text": "is encapsulated the amp server",
    "start": "454400",
    "end": "457599"
  },
  {
    "text": "will pick the corresponding amp agent",
    "start": "457599",
    "end": "460400"
  },
  {
    "text": "and",
    "start": "460400",
    "end": "460720"
  },
  {
    "text": "send a request to it",
    "start": "460720",
    "end": "464960"
  },
  {
    "text": "the third challenge that prevents using",
    "start": "464960",
    "end": "467120"
  },
  {
    "text": "kubernetes in",
    "start": "467120",
    "end": "468080"
  },
  {
    "text": "edge computing environment is that",
    "start": "468080",
    "end": "470080"
  },
  {
    "text": "kubernetes does not support deployed",
    "start": "470080",
    "end": "472160"
  },
  {
    "text": "workloads by regions",
    "start": "472160",
    "end": "474400"
  },
  {
    "text": "since an edge cluster can be located",
    "start": "474400",
    "end": "476639"
  },
  {
    "text": "across multiple network",
    "start": "476639",
    "end": "478160"
  },
  {
    "text": "or geographic regions an assistant or",
    "start": "478160",
    "end": "481039"
  },
  {
    "text": "device setting in different regions may",
    "start": "481039",
    "end": "482960"
  },
  {
    "text": "vary",
    "start": "482960",
    "end": "483919"
  },
  {
    "text": "so users may want to deploy workloads by",
    "start": "483919",
    "end": "486240"
  },
  {
    "text": "region",
    "start": "486240",
    "end": "487440"
  },
  {
    "text": "for example the system architecture of",
    "start": "487440",
    "end": "490000"
  },
  {
    "text": "edge nodes in a region 1",
    "start": "490000",
    "end": "491599"
  },
  {
    "text": "maybe amd64 while in region 2 maybe",
    "start": "491599",
    "end": "495160"
  },
  {
    "text": "arm64",
    "start": "495160",
    "end": "496800"
  },
  {
    "text": "if users want to run same workload in",
    "start": "496800",
    "end": "499280"
  },
  {
    "text": "both regions",
    "start": "499280",
    "end": "500560"
  },
  {
    "text": "then they have to create two workloads",
    "start": "500560",
    "end": "502720"
  },
  {
    "text": "with exactly the same configurations but",
    "start": "502720",
    "end": "505520"
  },
  {
    "text": "only difference in container image name",
    "start": "505520",
    "end": "508639"
  },
  {
    "text": "this can cause exponential increase in",
    "start": "508639",
    "end": "510960"
  },
  {
    "text": "the maintenance efforts with the",
    "start": "510960",
    "end": "512560"
  },
  {
    "text": "increasing number of workloads",
    "start": "512560",
    "end": "515599"
  },
  {
    "text": "we developed the yacht app manager to",
    "start": "515599",
    "end": "518000"
  },
  {
    "text": "add the maintenance burden on users",
    "start": "518000",
    "end": "521200"
  },
  {
    "text": "specifically the yacht app manager",
    "start": "521200",
    "end": "523680"
  },
  {
    "text": "contains",
    "start": "523680",
    "end": "524240"
  },
  {
    "text": "two controllers the no pool controller",
    "start": "524240",
    "end": "527600"
  },
  {
    "text": "and the united deployment controller",
    "start": "527600",
    "end": "531279"
  },
  {
    "text": "the no pool controller can group nodes",
    "start": "531279",
    "end": "533680"
  },
  {
    "text": "into pools",
    "start": "533680",
    "end": "535120"
  },
  {
    "text": "can be nodes with same system",
    "start": "535120",
    "end": "536800"
  },
  {
    "text": "architecture or nodes from the same",
    "start": "536800",
    "end": "538959"
  },
  {
    "text": "network region",
    "start": "538959",
    "end": "540480"
  },
  {
    "text": "and then we can manage nodes in a sample",
    "start": "540480",
    "end": "543680"
  },
  {
    "text": "uniformly for example we can add labels",
    "start": "543680",
    "end": "547200"
  },
  {
    "text": "annotations or tense to all nodes in a",
    "start": "547200",
    "end": "550080"
  },
  {
    "text": "sample",
    "start": "550080",
    "end": "551440"
  },
  {
    "text": "after we grouping nodes into pool united",
    "start": "551440",
    "end": "554640"
  },
  {
    "text": "deployment",
    "start": "554640",
    "end": "555360"
  },
  {
    "text": "controller can deploy the workloads",
    "start": "555360",
    "end": "557680"
  },
  {
    "text": "based on a send template",
    "start": "557680",
    "end": "559440"
  },
  {
    "text": "but different configurations across",
    "start": "559440",
    "end": "561440"
  },
  {
    "text": "pools",
    "start": "561440",
    "end": "562640"
  },
  {
    "text": "in addition we leverage the service",
    "start": "562640",
    "end": "564959"
  },
  {
    "text": "topology feature to bound",
    "start": "564959",
    "end": "566640"
  },
  {
    "text": "east western network traffic within a",
    "start": "566640",
    "end": "569360"
  },
  {
    "text": "pool",
    "start": "569360",
    "end": "571680"
  },
  {
    "text": "the last challenge is how can we support",
    "start": "572959",
    "end": "575440"
  },
  {
    "text": "various",
    "start": "575440",
    "end": "576000"
  },
  {
    "text": "kinds of edge device made by different",
    "start": "576000",
    "end": "578240"
  },
  {
    "text": "manufacturers",
    "start": "578240",
    "end": "579600"
  },
  {
    "text": "using different communication protocols",
    "start": "579600",
    "end": "582720"
  },
  {
    "text": "existing solutions either need to change",
    "start": "582720",
    "end": "584959"
  },
  {
    "text": "some key components of the kubernetes",
    "start": "584959",
    "end": "587279"
  },
  {
    "text": "significantly",
    "start": "587279",
    "end": "588640"
  },
  {
    "text": "or require users to implement the device",
    "start": "588640",
    "end": "591200"
  },
  {
    "text": "adapter or driver from scratch",
    "start": "591200",
    "end": "594080"
  },
  {
    "text": "which result in large development effort",
    "start": "594080",
    "end": "596880"
  },
  {
    "text": "and the laws of some upstream features",
    "start": "596880",
    "end": "600160"
  },
  {
    "text": "inspired by the unix philosophy do one",
    "start": "600160",
    "end": "603360"
  },
  {
    "text": "thing and do it well",
    "start": "603360",
    "end": "604880"
  },
  {
    "text": "we believe that kubernetes should focus",
    "start": "604880",
    "end": "607600"
  },
  {
    "text": "on managing computing nodes",
    "start": "607600",
    "end": "609519"
  },
  {
    "text": "while the device management should be",
    "start": "609519",
    "end": "611760"
  },
  {
    "text": "down by a mature edge computing platform",
    "start": "611760",
    "end": "615040"
  },
  {
    "text": "therefore we come up with the idea of",
    "start": "615040",
    "end": "617360"
  },
  {
    "text": "integrating edge x foundry into open",
    "start": "617360",
    "end": "619839"
  },
  {
    "text": "yard",
    "start": "619839",
    "end": "621519"
  },
  {
    "text": "next eaching will give us some necessary",
    "start": "621519",
    "end": "624160"
  },
  {
    "text": "backgrounds of",
    "start": "624160",
    "end": "625040"
  },
  {
    "text": "ajax foundry and introduce how we",
    "start": "625040",
    "end": "627839"
  },
  {
    "text": "combine",
    "start": "627839",
    "end": "628480"
  },
  {
    "text": "rgx foundry with openyard",
    "start": "628480",
    "end": "632959"
  },
  {
    "start": "632000",
    "end": "662000"
  },
  {
    "text": "okay thanks charles for the introduction",
    "start": "632959",
    "end": "635040"
  },
  {
    "text": "hello everyone",
    "start": "635040",
    "end": "636000"
  },
  {
    "text": "i'm ishin from vmware city office",
    "start": "636000",
    "end": "639279"
  },
  {
    "text": "and also the maintainer of the open",
    "start": "639279",
    "end": "642079"
  },
  {
    "text": "europe project",
    "start": "642079",
    "end": "644000"
  },
  {
    "text": "so for those who are not familiar with",
    "start": "644000",
    "end": "647120"
  },
  {
    "text": "edge foundry i'd",
    "start": "647120",
    "end": "648480"
  },
  {
    "text": "i'd like to give a general introduction",
    "start": "648480",
    "end": "650880"
  },
  {
    "text": "first",
    "start": "650880",
    "end": "652000"
  },
  {
    "text": "then i will cover the open europe and",
    "start": "652000",
    "end": "654720"
  },
  {
    "text": "ajax integration overview",
    "start": "654720",
    "end": "656959"
  },
  {
    "text": "at last there will be a demo to",
    "start": "656959",
    "end": "659040"
  },
  {
    "text": "illustrate how it",
    "start": "659040",
    "end": "660000"
  },
  {
    "text": "works so what is adjacent foundry",
    "start": "660000",
    "end": "663680"
  },
  {
    "start": "662000",
    "end": "682000"
  },
  {
    "text": "it is an open source when the neutron",
    "start": "663680",
    "end": "666160"
  },
  {
    "text": "project and the linux foundation",
    "start": "666160",
    "end": "668720"
  },
  {
    "text": "with apigee 2 license it is also",
    "start": "668720",
    "end": "671200"
  },
  {
    "text": "microservice loosely coupled software",
    "start": "671200",
    "end": "674240"
  },
  {
    "text": "framework for iot edge computing",
    "start": "674240",
    "end": "677600"
  },
  {
    "text": "and at the same time it is hardware and",
    "start": "677600",
    "end": "680079"
  },
  {
    "text": "os agnostic",
    "start": "680079",
    "end": "682320"
  },
  {
    "start": "682000",
    "end": "727000"
  },
  {
    "text": "if we need to use one sentence to",
    "start": "682320",
    "end": "684560"
  },
  {
    "text": "describe it",
    "start": "684560",
    "end": "687040"
  },
  {
    "text": "uh ajax is a middleware that",
    "start": "687040",
    "end": "690240"
  },
  {
    "text": "connects things with your i.t",
    "start": "690240",
    "end": "692079"
  },
  {
    "text": "environment",
    "start": "692079",
    "end": "693600"
  },
  {
    "text": "so clearly speaking",
    "start": "693600",
    "end": "696800"
  },
  {
    "text": "the surface of edx constitute a",
    "start": "698480",
    "end": "701600"
  },
  {
    "text": "dual transformation engine first is",
    "start": "701600",
    "end": "704399"
  },
  {
    "text": "translating",
    "start": "704399",
    "end": "705360"
  },
  {
    "text": "information coming from sensors and the",
    "start": "705360",
    "end": "707440"
  },
  {
    "text": "devices",
    "start": "707440",
    "end": "708959"
  },
  {
    "text": "vary hundreds of protocols and a",
    "start": "708959",
    "end": "710959"
  },
  {
    "text": "thousand of",
    "start": "710959",
    "end": "712079"
  },
  {
    "text": "from mice into hx and second",
    "start": "712079",
    "end": "715200"
  },
  {
    "text": "it can deliver data to applications",
    "start": "715200",
    "end": "717519"
  },
  {
    "text": "enterprise and",
    "start": "717519",
    "end": "718399"
  },
  {
    "text": "cloud system over tcp based protocol",
    "start": "718399",
    "end": "722240"
  },
  {
    "text": "information and the structure of",
    "start": "722240",
    "end": "724079"
  },
  {
    "text": "customer choice",
    "start": "724079",
    "end": "726959"
  },
  {
    "start": "727000",
    "end": "817000"
  },
  {
    "text": "now let's take a look at the edx",
    "start": "727040",
    "end": "729120"
  },
  {
    "text": "architecture from south side",
    "start": "729120",
    "end": "731040"
  },
  {
    "text": "to the north side it have it has four",
    "start": "731040",
    "end": "734240"
  },
  {
    "text": "layers",
    "start": "734240",
    "end": "734800"
  },
  {
    "text": "the device surface layer which is",
    "start": "734800",
    "end": "736240"
  },
  {
    "text": "responsible to connect",
    "start": "736240",
    "end": "738160"
  },
  {
    "text": "all kinds of sensor devices or",
    "start": "738160",
    "end": "741120"
  },
  {
    "text": "activators",
    "start": "741120",
    "end": "742160"
  },
  {
    "text": "over hundreds of ot protocol the",
    "start": "742160",
    "end": "744320"
  },
  {
    "text": "co-service layer the supporting service",
    "start": "744320",
    "end": "746639"
  },
  {
    "text": "layer and",
    "start": "746639",
    "end": "747839"
  },
  {
    "text": "the application service layer let's take",
    "start": "747839",
    "end": "750880"
  },
  {
    "text": "the data flow in edx system for example",
    "start": "750880",
    "end": "754000"
  },
  {
    "text": "to illustrate how it works",
    "start": "754000",
    "end": "757680"
  },
  {
    "text": "first sensor data is clacked by the",
    "start": "757760",
    "end": "760480"
  },
  {
    "text": "device service from a scene",
    "start": "760480",
    "end": "762720"
  },
  {
    "text": "and the data is passed to the code",
    "start": "762720",
    "end": "764800"
  },
  {
    "text": "service for local persistence",
    "start": "764800",
    "end": "767360"
  },
  {
    "text": "data is then passed to application",
    "start": "767360",
    "end": "769360"
  },
  {
    "text": "service for",
    "start": "769360",
    "end": "770880"
  },
  {
    "text": "transformation from my team featuring",
    "start": "770880",
    "end": "773440"
  },
  {
    "text": "and they can",
    "start": "773440",
    "end": "774240"
  },
  {
    "text": "zoom back into mouse to enterprise and",
    "start": "774240",
    "end": "776639"
  },
  {
    "text": "cloud system",
    "start": "776639",
    "end": "778000"
  },
  {
    "text": "when needed data is then available for",
    "start": "778000",
    "end": "782079"
  },
  {
    "text": "ad",
    "start": "782079",
    "end": "782480"
  },
  {
    "text": "analysis and can trigger device",
    "start": "782480",
    "end": "785440"
  },
  {
    "text": "activation",
    "start": "785440",
    "end": "786320"
  },
  {
    "text": "through command service basically there",
    "start": "786320",
    "end": "789200"
  },
  {
    "text": "are two",
    "start": "789200",
    "end": "789760"
  },
  {
    "text": "parts to control the added device one is",
    "start": "789760",
    "end": "792160"
  },
  {
    "text": "through the cloud",
    "start": "792160",
    "end": "793440"
  },
  {
    "text": "the other is some automation control and",
    "start": "793440",
    "end": "796240"
  },
  {
    "text": "add",
    "start": "796240",
    "end": "796639"
  },
  {
    "text": "through some predefined logic through",
    "start": "796639",
    "end": "798959"
  },
  {
    "text": "the user defined application service or",
    "start": "798959",
    "end": "802160"
  },
  {
    "text": "through engine or both since you can",
    "start": "802160",
    "end": "804639"
  },
  {
    "text": "always",
    "start": "804639",
    "end": "805440"
  },
  {
    "text": "combine them together like you can",
    "start": "805440",
    "end": "808000"
  },
  {
    "text": "training models on the cloud and the",
    "start": "808000",
    "end": "809920"
  },
  {
    "text": "creator",
    "start": "809920",
    "end": "810480"
  },
  {
    "text": "and application service on the edge for",
    "start": "810480",
    "end": "813920"
  },
  {
    "text": "influence",
    "start": "813920",
    "end": "816560"
  },
  {
    "start": "817000",
    "end": "896000"
  },
  {
    "text": "now let's take a look at the edx",
    "start": "817040",
    "end": "819680"
  },
  {
    "text": "deployment scenario",
    "start": "819680",
    "end": "821600"
  },
  {
    "text": "in today's iot landscape it is",
    "start": "821600",
    "end": "824000"
  },
  {
    "text": "imperative",
    "start": "824000",
    "end": "824720"
  },
  {
    "text": "to leverage computer storage and network",
    "start": "824720",
    "end": "827920"
  },
  {
    "text": "resource",
    "start": "827920",
    "end": "828560"
  },
  {
    "text": "wherever they live so in the first",
    "start": "828560",
    "end": "831680"
  },
  {
    "text": "scenario you can deploy the device",
    "start": "831680",
    "end": "834399"
  },
  {
    "text": "service",
    "start": "834399",
    "end": "834959"
  },
  {
    "text": "on the edge side and everything else in",
    "start": "834959",
    "end": "837680"
  },
  {
    "text": "the cloud",
    "start": "837680",
    "end": "838880"
  },
  {
    "text": "this is for latency in sensitive",
    "start": "838880",
    "end": "841680"
  },
  {
    "text": "applications",
    "start": "841680",
    "end": "843360"
  },
  {
    "text": "and the second scenario if the gateway",
    "start": "843360",
    "end": "847680"
  },
  {
    "text": "has enough compute and storage resource",
    "start": "847920",
    "end": "852399"
  },
  {
    "text": "you can deploy the full idx foundry",
    "start": "852399",
    "end": "854959"
  },
  {
    "text": "service on the gateway and",
    "start": "854959",
    "end": "856399"
  },
  {
    "text": "gain good response time in scenario 3",
    "start": "856399",
    "end": "860000"
  },
  {
    "text": "if the gateway is not set good you can",
    "start": "860000",
    "end": "862480"
  },
  {
    "text": "just deploy the device service",
    "start": "862480",
    "end": "864320"
  },
  {
    "text": "and the core service there and move the",
    "start": "864320",
    "end": "866959"
  },
  {
    "text": "application and the",
    "start": "866959",
    "end": "868720"
  },
  {
    "text": "analytics to the server part the fourth",
    "start": "868720",
    "end": "872000"
  },
  {
    "text": "scenario",
    "start": "872000",
    "end": "873279"
  },
  {
    "text": "is quite similar with the first one",
    "start": "873279",
    "end": "876160"
  },
  {
    "text": "except that it",
    "start": "876160",
    "end": "877040"
  },
  {
    "text": "deploy ajax on the phone server",
    "start": "877040",
    "end": "880079"
  },
  {
    "text": "to gain better latency response",
    "start": "880079",
    "end": "883519"
  },
  {
    "text": "so we can see that the quantity and the",
    "start": "883519",
    "end": "886560"
  },
  {
    "text": "function of",
    "start": "886560",
    "end": "887279"
  },
  {
    "text": "macroservice deployed on given node",
    "start": "887279",
    "end": "890560"
  },
  {
    "text": "depends on the use cases and the",
    "start": "890560",
    "end": "892720"
  },
  {
    "text": "capability of the hardware",
    "start": "892720",
    "end": "896240"
  },
  {
    "text": "now let's take a look at the open unit",
    "start": "897279",
    "end": "899600"
  },
  {
    "text": "and the adjacent foundry integration",
    "start": "899600",
    "end": "902240"
  },
  {
    "text": "on the cloud",
    "start": "902240",
    "end": "905360"
  },
  {
    "text": "side we run the use control manager",
    "start": "905360",
    "end": "908000"
  },
  {
    "text": "you're the",
    "start": "908000",
    "end": "908560"
  },
  {
    "text": "app manager and the tunnel server",
    "start": "908560",
    "end": "910399"
  },
  {
    "text": "manager you can join it on any public",
    "start": "910399",
    "end": "913519"
  },
  {
    "text": "private or hyper cloud or on parameter",
    "start": "913519",
    "end": "916800"
  },
  {
    "text": "center",
    "start": "916800",
    "end": "918079"
  },
  {
    "text": "which according to your requirements and",
    "start": "918079",
    "end": "920880"
  },
  {
    "text": "on the other side",
    "start": "920880",
    "end": "922639"
  },
  {
    "text": "besides the default you have an internal",
    "start": "922639",
    "end": "925040"
  },
  {
    "text": "agent",
    "start": "925040",
    "end": "926079"
  },
  {
    "text": "we will deploy a new device controller",
    "start": "926079",
    "end": "928800"
  },
  {
    "text": "which is responsible for sync data",
    "start": "928800",
    "end": "930959"
  },
  {
    "text": "between the hx and the kubernetes",
    "start": "930959",
    "end": "934880"
  },
  {
    "text": "so the xcode service will also be",
    "start": "934880",
    "end": "937279"
  },
  {
    "text": "deployed on the edge side",
    "start": "937279",
    "end": "939680"
  },
  {
    "text": "in some case that sensor's direct",
    "start": "939680",
    "end": "943279"
  },
  {
    "text": "connect githui doesn't have enough",
    "start": "943279",
    "end": "946560"
  },
  {
    "text": "resource we can just",
    "start": "946560",
    "end": "947839"
  },
  {
    "text": "deploy the edx device service there the",
    "start": "947839",
    "end": "950880"
  },
  {
    "text": "add node can",
    "start": "950880",
    "end": "952160"
  },
  {
    "text": "be either unbased or x86 based",
    "start": "952160",
    "end": "958399"
  },
  {
    "start": "959000",
    "end": "1201000"
  },
  {
    "text": "now i'll use a demo to illustrate how it",
    "start": "959120",
    "end": "961680"
  },
  {
    "text": "works",
    "start": "961680",
    "end": "963759"
  },
  {
    "text": "let's take a look at the demo",
    "start": "963759",
    "end": "965600"
  },
  {
    "text": "environment topology",
    "start": "965600",
    "end": "967759"
  },
  {
    "text": "we have a mass node running on the cloud",
    "start": "967759",
    "end": "970800"
  },
  {
    "text": "and we'll have two work nodes running in",
    "start": "970800",
    "end": "972800"
  },
  {
    "text": "the private network",
    "start": "972800",
    "end": "975199"
  },
  {
    "text": "the python is in my home office",
    "start": "975199",
    "end": "978720"
  },
  {
    "text": "and the e-box is running in another",
    "start": "978720",
    "end": "981360"
  },
  {
    "text": "location",
    "start": "981360",
    "end": "982720"
  },
  {
    "text": "they together compose a unified",
    "start": "982720",
    "end": "985600"
  },
  {
    "text": "coordinate cluster",
    "start": "985600",
    "end": "986959"
  },
  {
    "text": "cross cloud and edge with different",
    "start": "986959",
    "end": "990399"
  },
  {
    "text": "hardware architecture",
    "start": "990399",
    "end": "992880"
  },
  {
    "text": "we use kubcontrol to get a node to check",
    "start": "992880",
    "end": "995920"
  },
  {
    "text": "the node",
    "start": "995920",
    "end": "996480"
  },
  {
    "text": "status in the cluster this is the pi",
    "start": "996480",
    "end": "1000079"
  },
  {
    "text": "volt node",
    "start": "1000079",
    "end": "1001120"
  },
  {
    "text": "we connect the temperature and the hemi",
    "start": "1001120",
    "end": "1003279"
  },
  {
    "text": "sensors through gpl pin",
    "start": "1003279",
    "end": "1006800"
  },
  {
    "text": "17.",
    "start": "1008839",
    "end": "1011839"
  },
  {
    "text": "this is an rgb led light connected to",
    "start": "1011839",
    "end": "1015360"
  },
  {
    "text": "the pi",
    "start": "1015360",
    "end": "1016240"
  },
  {
    "text": "through cpl pin 18 19 and 20.",
    "start": "1016240",
    "end": "1025839"
  },
  {
    "text": "this is the second node which is x86",
    "start": "1026880",
    "end": "1030558"
  },
  {
    "text": "based",
    "start": "1030559",
    "end": "1032880"
  },
  {
    "text": "we next will deploy the ajax code",
    "start": "1035039",
    "end": "1037678"
  },
  {
    "text": "service to the pi forward node",
    "start": "1037679",
    "end": "1041438"
  },
  {
    "text": "we use kubercontrol getport to check the",
    "start": "1044400",
    "end": "1047038"
  },
  {
    "text": "deployment creating status",
    "start": "1047039",
    "end": "1053280"
  },
  {
    "text": "after few minutes we run the command",
    "start": "1053280",
    "end": "1056080"
  },
  {
    "text": "again",
    "start": "1056080",
    "end": "1058399"
  },
  {
    "text": "we can see that the idx service are up",
    "start": "1062400",
    "end": "1065120"
  },
  {
    "text": "and running on the pi forward node",
    "start": "1065120",
    "end": "1067679"
  },
  {
    "text": "the device controller will sink the",
    "start": "1067679",
    "end": "1069360"
  },
  {
    "text": "device information to create",
    "start": "1069360",
    "end": "1072320"
  },
  {
    "text": "we can use control get the device to",
    "start": "1072320",
    "end": "1074799"
  },
  {
    "text": "list all the devices in the azx",
    "start": "1074799",
    "end": "1080400"
  },
  {
    "text": "we can use group control get device",
    "start": "1080400",
    "end": "1082400"
  },
  {
    "text": "profile to list all the device profile",
    "start": "1082400",
    "end": "1084880"
  },
  {
    "text": "information",
    "start": "1084880",
    "end": "1087200"
  },
  {
    "text": "also we can use google control device",
    "start": "1087200",
    "end": "1089840"
  },
  {
    "text": "service",
    "start": "1089840",
    "end": "1090559"
  },
  {
    "text": "to list the device service information",
    "start": "1090559",
    "end": "1094880"
  },
  {
    "text": "like what we can do to the traditional",
    "start": "1094880",
    "end": "1097120"
  },
  {
    "text": "kubernetes",
    "start": "1097120",
    "end": "1098000"
  },
  {
    "text": "object we can change the device status",
    "start": "1098000",
    "end": "1100480"
  },
  {
    "text": "by group control edit",
    "start": "1100480",
    "end": "1103840"
  },
  {
    "text": "first we will run command group control",
    "start": "1104400",
    "end": "1106880"
  },
  {
    "text": "i id",
    "start": "1106880",
    "end": "1108000"
  },
  {
    "text": "device name",
    "start": "1108000",
    "end": "1110720"
  },
  {
    "text": "we then set the device property light to",
    "start": "1119840",
    "end": "1122720"
  },
  {
    "text": "color right",
    "start": "1122720",
    "end": "1123600"
  },
  {
    "text": "as the desired value",
    "start": "1123600",
    "end": "1127280"
  },
  {
    "text": "we save and exit",
    "start": "1127280",
    "end": "1136160"
  },
  {
    "text": "you can see as x will turn the led light",
    "start": "1136160",
    "end": "1139520"
  },
  {
    "text": "to right",
    "start": "1139520",
    "end": "1142080"
  },
  {
    "text": "and the next we run control i t device",
    "start": "1146160",
    "end": "1148559"
  },
  {
    "text": "name again",
    "start": "1148559",
    "end": "1151840"
  },
  {
    "text": "this time we'll set the desired color to",
    "start": "1152240",
    "end": "1155360"
  },
  {
    "text": "blue",
    "start": "1155360",
    "end": "1157760"
  },
  {
    "text": "we save and exit we can see",
    "start": "1159919",
    "end": "1163039"
  },
  {
    "text": "ajax turns the light to blue",
    "start": "1163039",
    "end": "1167840"
  },
  {
    "text": "last we run group control id's device",
    "start": "1168080",
    "end": "1170320"
  },
  {
    "text": "name again and",
    "start": "1170320",
    "end": "1171360"
  },
  {
    "text": "cite the desired color to green",
    "start": "1171360",
    "end": "1178720"
  },
  {
    "text": "then we save and exit we can see ajax",
    "start": "1178720",
    "end": "1182240"
  },
  {
    "text": "will return the led light to green so",
    "start": "1182240",
    "end": "1185280"
  },
  {
    "text": "with hx and open urls",
    "start": "1185280",
    "end": "1187360"
  },
  {
    "text": "you can manage your id devices in your",
    "start": "1187360",
    "end": "1190080"
  },
  {
    "text": "kubernetes native manner",
    "start": "1190080",
    "end": "1193840"
  },
  {
    "text": "thanks for listening our session now",
    "start": "1193919",
    "end": "1196240"
  },
  {
    "text": "it's clear and a time",
    "start": "1196240",
    "end": "1203600"
  }
]