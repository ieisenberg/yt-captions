[
  {
    "text": "uh just a quick overview of the agenda",
    "start": "240",
    "end": "2159"
  },
  {
    "text": "We're going to talk about autoscaling Uh",
    "start": "2159",
    "end": "3600"
  },
  {
    "text": "we're going to talk about something we",
    "start": "3600",
    "end": "4720"
  },
  {
    "text": "call make before break internally Uh and",
    "start": "4720",
    "end": "7040"
  },
  {
    "text": "then we're going to talk about what is",
    "start": "7040",
    "end": "8320"
  },
  {
    "text": "the context behind this migration and",
    "start": "8320",
    "end": "9920"
  },
  {
    "text": "how we actually ended up executing",
    "start": "9920",
    "end": "12920"
  },
  {
    "text": "this So for those who don't know what",
    "start": "12920",
    "end": "15599"
  },
  {
    "text": "click house is uh it's an open source",
    "start": "15599",
    "end": "18160"
  },
  {
    "text": "column oriented distributed database",
    "start": "18160",
    "end": "19920"
  },
  {
    "text": "It's an OLAP database Uh so if you want",
    "start": "19920",
    "end": "22400"
  },
  {
    "text": "to store like pabytes of data and uh",
    "start": "22400",
    "end": "24640"
  },
  {
    "text": "kind of do like really fast aggregations",
    "start": "24640",
    "end": "26320"
  },
  {
    "text": "and analytical queries on top of them",
    "start": "26320",
    "end": "28400"
  },
  {
    "text": "you can use click house it's open source",
    "start": "28400",
    "end": "31679"
  },
  {
    "text": "uh we also have a cloud version uh which",
    "start": "31679",
    "end": "34320"
  },
  {
    "text": "uh our team is also part of managing",
    "start": "34320",
    "end": "36719"
  },
  {
    "text": "that cloud and it's got all the fully",
    "start": "36719",
    "end": "39040"
  },
  {
    "text": "managed features serverless idling",
    "start": "39040",
    "end": "40879"
  },
  {
    "text": "separation of compute and storage uh so",
    "start": "40879",
    "end": "43360"
  },
  {
    "text": "what happens here is like uh we have",
    "start": "43360",
    "end": "44719"
  },
  {
    "text": "pods running inside these click house",
    "start": "44719",
    "end": "46320"
  },
  {
    "text": "instances uh and these pods are attached",
    "start": "46320",
    "end": "48480"
  },
  {
    "text": "to PVCs that have metadata in them the",
    "start": "48480",
    "end": "50879"
  },
  {
    "text": "actual data is stored on object storage",
    "start": "50879",
    "end": "53680"
  },
  {
    "text": "as is the trend these days with uh you",
    "start": "53680",
    "end": "55440"
  },
  {
    "text": "know fully managed serverless databases",
    "start": "55440",
    "end": "57840"
  },
  {
    "text": "Uh and then we have like a bring your",
    "start": "57840",
    "end": "59359"
  },
  {
    "text": "own cloud offering if you don't want",
    "start": "59359",
    "end": "60559"
  },
  {
    "text": "data to ever leave your uh",
    "start": "60559",
    "end": "62920"
  },
  {
    "text": "network",
    "start": "62920",
    "end": "64878"
  },
  {
    "text": "So uh like uh most uh uh people who want",
    "start": "64879",
    "end": "68080"
  },
  {
    "text": "to manage like uh something on",
    "start": "68080",
    "end": "69520"
  },
  {
    "text": "Kubernetes a service or even a database",
    "start": "69520",
    "end": "71360"
  },
  {
    "text": "we started with like a stateful set uh",
    "start": "71360",
    "end": "73360"
  },
  {
    "text": "uh started with our operator which in",
    "start": "73360",
    "end": "74960"
  },
  {
    "text": "turn is managing a stateful set which in",
    "start": "74960",
    "end": "77040"
  },
  {
    "text": "turn is of course managing the pods and",
    "start": "77040",
    "end": "79040"
  },
  {
    "text": "uh they have the PVC attached to",
    "start": "79040",
    "end": "82720"
  },
  {
    "text": "them Uh I'm going to do some like a lot",
    "start": "83320",
    "end": "86159"
  },
  {
    "text": "of context sharing I'm going to rapidly",
    "start": "86159",
    "end": "88000"
  },
  {
    "text": "dump a lot of information here because",
    "start": "88000",
    "end": "89840"
  },
  {
    "text": "uh the the background context for the",
    "start": "89840",
    "end": "92400"
  },
  {
    "text": "migration is actually a talk I did last",
    "start": "92400",
    "end": "94560"
  },
  {
    "text": "year at CubeCon Paris that's called",
    "start": "94560",
    "end": "96240"
  },
  {
    "text": "fantastic ordinals So uh it's going to",
    "start": "96240",
    "end": "98320"
  },
  {
    "text": "go really quickly So if you uh kind of",
    "start": "98320",
    "end": "100400"
  },
  {
    "text": "if you have trouble following please",
    "start": "100400",
    "end": "101759"
  },
  {
    "text": "check out that talk because in that one",
    "start": "101759",
    "end": "103280"
  },
  {
    "text": "I go really in depth about the problem",
    "start": "103280",
    "end": "105759"
  },
  {
    "text": "with stateful sets and then how we came",
    "start": "105759",
    "end": "107759"
  },
  {
    "text": "about solving those problems Right So",
    "start": "107759",
    "end": "109439"
  },
  {
    "text": "this is just a quick plug for the",
    "start": "109439",
    "end": "110799"
  },
  {
    "text": "background context Uh okay so uh really",
    "start": "110799",
    "end": "114399"
  },
  {
    "text": "quickly autoscaling So autoscaling in",
    "start": "114399",
    "end": "117280"
  },
  {
    "text": "general in Kubernetes today requires pod",
    "start": "117280",
    "end": "119040"
  },
  {
    "text": "evictions That's because uh every time",
    "start": "119040",
    "end": "121040"
  },
  {
    "text": "you want to resize a pod you want to",
    "start": "121040",
    "end": "122479"
  },
  {
    "text": "change a request or the limits you need",
    "start": "122479",
    "end": "123920"
  },
  {
    "text": "to kind of uh you know restart the pod",
    "start": "123920",
    "end": "125600"
  },
  {
    "text": "itself And that is done inside our cloud",
    "start": "125600",
    "end": "127759"
  },
  {
    "text": "using the autoscaler right Which is",
    "start": "127759",
    "end": "129280"
  },
  {
    "text": "responsible for evicting the pod and",
    "start": "129280",
    "end": "131039"
  },
  {
    "text": "then a controller is going to go over",
    "start": "131039",
    "end": "132560"
  },
  {
    "text": "and then resubmit that pod In this case",
    "start": "132560",
    "end": "134400"
  },
  {
    "text": "this controller could be a stateful set",
    "start": "134400",
    "end": "135760"
  },
  {
    "text": "controller could be a deployment",
    "start": "135760",
    "end": "136800"
  },
  {
    "text": "controller whatever right Or could if",
    "start": "136800",
    "end": "138480"
  },
  {
    "text": "you're managing bare pods yourself could",
    "start": "138480",
    "end": "140160"
  },
  {
    "text": "also just be your own",
    "start": "140160",
    "end": "141720"
  },
  {
    "text": "code And this is a general high level",
    "start": "141720",
    "end": "144080"
  },
  {
    "text": "architecture of when we do autoscaling",
    "start": "144080",
    "end": "145599"
  },
  {
    "text": "So we have recommendations we have",
    "start": "145599",
    "end": "146959"
  },
  {
    "text": "userdefined resource limits For example",
    "start": "146959",
    "end": "148959"
  },
  {
    "text": "you want to have a minimum size or a",
    "start": "148959",
    "end": "150160"
  },
  {
    "text": "maximum size And all that information is",
    "start": "150160",
    "end": "152480"
  },
  {
    "text": "going to uh come in uh the autoscaler is",
    "start": "152480",
    "end": "154560"
  },
  {
    "text": "going to react to that information going",
    "start": "154560",
    "end": "156720"
  },
  {
    "text": "to start doing pod evictions And then",
    "start": "156720",
    "end": "158160"
  },
  {
    "text": "what's happening here is that you can",
    "start": "158160",
    "end": "159440"
  },
  {
    "text": "see there's a mutating web hook when the",
    "start": "159440",
    "end": "161360"
  },
  {
    "text": "controller actually resubmits that pod",
    "start": "161360",
    "end": "163440"
  },
  {
    "text": "Uh the web hook is going to intercept",
    "start": "163440",
    "end": "165200"
  },
  {
    "text": "that pod spec and it's going to mutate",
    "start": "165200",
    "end": "166720"
  },
  {
    "text": "it And then for example let's say uh the",
    "start": "166720",
    "end": "169360"
  },
  {
    "text": "customer decides that hey I want to have",
    "start": "169360",
    "end": "170959"
  },
  {
    "text": "like an 16 GB pod instead of the 8 one",
    "start": "170959",
    "end": "173440"
  },
  {
    "text": "the web hook is going to be responsible",
    "start": "173440",
    "end": "174879"
  },
  {
    "text": "for mutating that pod spec and then when",
    "start": "174879",
    "end": "176879"
  },
  {
    "text": "the pod gets submitted it's going to",
    "start": "176879",
    "end": "178400"
  },
  {
    "text": "come up with the new size and that's how",
    "start": "178400",
    "end": "179680"
  },
  {
    "text": "you do vertical scaling inside uh you",
    "start": "179680",
    "end": "182239"
  },
  {
    "text": "know that that's how basically the",
    "start": "182239",
    "end": "183360"
  },
  {
    "text": "standard VPA also",
    "start": "183360",
    "end": "185159"
  },
  {
    "text": "works vertical scaling so the problem is",
    "start": "185159",
    "end": "188400"
  },
  {
    "text": "uh thus right so what we want in",
    "start": "188400",
    "end": "190319"
  },
  {
    "text": "vertical scaling is we want to have like",
    "start": "190319",
    "end": "192159"
  },
  {
    "text": "uh let's say three replicas of one size",
    "start": "192159",
    "end": "193920"
  },
  {
    "text": "and then you want to go uh to a",
    "start": "193920",
    "end": "195760"
  },
  {
    "text": "different size for all of these",
    "start": "195760",
    "end": "197640"
  },
  {
    "text": "replicas and when I say replicas I'm",
    "start": "197640",
    "end": "200080"
  },
  {
    "text": "talking about the database replicas and",
    "start": "200080",
    "end": "201680"
  },
  {
    "text": "all and if you If you're familiar with",
    "start": "201680",
    "end": "203920"
  },
  {
    "text": "Postgress or other kind of databases",
    "start": "203920",
    "end": "205680"
  },
  {
    "text": "this is not that kind of a scenario",
    "start": "205680",
    "end": "207040"
  },
  {
    "text": "where you have like a primary with",
    "start": "207040",
    "end": "208800"
  },
  {
    "text": "replicas following All of these uh nodes",
    "start": "208800",
    "end": "211040"
  },
  {
    "text": "are equally capable of ingesting data",
    "start": "211040",
    "end": "212799"
  },
  {
    "text": "and reading data Uh that's because it's",
    "start": "212799",
    "end": "215040"
  },
  {
    "text": "a multim masteraster kind of a setup if",
    "start": "215040",
    "end": "216799"
  },
  {
    "text": "you want to think about it in that in",
    "start": "216799",
    "end": "217840"
  },
  {
    "text": "that direction Uh so break first",
    "start": "217840",
    "end": "220400"
  },
  {
    "text": "vertical scaling this is what's standard",
    "start": "220400",
    "end": "221840"
  },
  {
    "text": "today in Kubernetes Uh that's uh slow",
    "start": "221840",
    "end": "224879"
  },
  {
    "text": "and it's disruptive And why do we what",
    "start": "224879",
    "end": "226799"
  },
  {
    "text": "do we mean by big break first That's",
    "start": "226799",
    "end": "228560"
  },
  {
    "text": "because if you maintain a pot disruption",
    "start": "228560",
    "end": "230640"
  },
  {
    "text": "budget uh in our case for example we",
    "start": "230640",
    "end": "232720"
  },
  {
    "text": "have a max unavailable equals one you're",
    "start": "232720",
    "end": "234640"
  },
  {
    "text": "always going to have to do a rolling",
    "start": "234640",
    "end": "235920"
  },
  {
    "text": "restart right so uh the image I showed",
    "start": "235920",
    "end": "238080"
  },
  {
    "text": "ear earlier here like when the pot",
    "start": "238080",
    "end": "239760"
  },
  {
    "text": "eviction is happening you're not going",
    "start": "239760",
    "end": "240879"
  },
  {
    "text": "to evict all of your pots at the same",
    "start": "240879",
    "end": "242319"
  },
  {
    "text": "time to do vertical scaling right",
    "start": "242319",
    "end": "243599"
  },
  {
    "text": "because otherwise you'll have downtime",
    "start": "243599",
    "end": "245360"
  },
  {
    "text": "so you're going to do it like as safely",
    "start": "245360",
    "end": "247040"
  },
  {
    "text": "as possible you're going to start with",
    "start": "247040",
    "end": "248400"
  },
  {
    "text": "one replica you're going to wait for it",
    "start": "248400",
    "end": "249840"
  },
  {
    "text": "to safely terminate all the longrunning",
    "start": "249840",
    "end": "251840"
  },
  {
    "text": "queries if you have a backup running on",
    "start": "251840",
    "end": "253360"
  },
  {
    "text": "that part you're going to get rid of",
    "start": "253360",
    "end": "254480"
  },
  {
    "text": "that and then uh gradually you're going",
    "start": "254480",
    "end": "256639"
  },
  {
    "text": "to restart all of that and that process",
    "start": "256639",
    "end": "258000"
  },
  {
    "text": "is extremely slow and painful It's going",
    "start": "258000",
    "end": "259759"
  },
  {
    "text": "to put more pressure on the existing",
    "start": "259759",
    "end": "261040"
  },
  {
    "text": "replicas which are suddenly taking a lot",
    "start": "261040",
    "end": "262720"
  },
  {
    "text": "more traffic So if you think about it",
    "start": "262720",
    "end": "264639"
  },
  {
    "text": "the exact moment when you want more",
    "start": "264639",
    "end": "267120"
  },
  {
    "text": "capacity is the exact moment where",
    "start": "267120",
    "end": "268720"
  },
  {
    "text": "you're taking away capacity because you",
    "start": "268720",
    "end": "270560"
  },
  {
    "text": "want to resize and that's terrible and",
    "start": "270560",
    "end": "273120"
  },
  {
    "text": "naturally we maintain some extra",
    "start": "273120",
    "end": "274400"
  },
  {
    "text": "overhead on our pods to combat that uh",
    "start": "274400",
    "end": "276960"
  },
  {
    "text": "uh that extra pressure in terms of CPU",
    "start": "276960",
    "end": "278880"
  },
  {
    "text": "and",
    "start": "278880",
    "end": "279639"
  },
  {
    "text": "memory So uh and by the way just quickly",
    "start": "279639",
    "end": "282960"
  },
  {
    "text": "why is this possible Uh why is this the",
    "start": "282960",
    "end": "284960"
  },
  {
    "text": "only way to scale today That's because",
    "start": "284960",
    "end": "286479"
  },
  {
    "text": "of some limitations with stateful sets",
    "start": "286479",
    "end": "288800"
  },
  {
    "text": "And I'm going to refer to the talk I did",
    "start": "288800",
    "end": "290240"
  },
  {
    "text": "last year that go really deep into the",
    "start": "290240",
    "end": "292160"
  },
  {
    "text": "limitation of stateful sets So the the",
    "start": "292160",
    "end": "295120"
  },
  {
    "text": "way to solve this is to do something",
    "start": "295120",
    "end": "296400"
  },
  {
    "text": "called make before break which is very",
    "start": "296400",
    "end": "298320"
  },
  {
    "text": "simple right You add capacity uh in",
    "start": "298320",
    "end": "300639"
  },
  {
    "text": "terms of like uh like these extra three",
    "start": "300639",
    "end": "302639"
  },
  {
    "text": "new parts and then you take away the",
    "start": "302639",
    "end": "304080"
  },
  {
    "text": "existing capacity the old replicas you",
    "start": "304080",
    "end": "305919"
  },
  {
    "text": "just take them away and that's really",
    "start": "305919",
    "end": "307120"
  },
  {
    "text": "fast right Because the minute customer",
    "start": "307120",
    "end": "309199"
  },
  {
    "text": "wants to have like extra capacity",
    "start": "309199",
    "end": "310800"
  },
  {
    "text": "because maybe their utilization is",
    "start": "310800",
    "end": "312000"
  },
  {
    "text": "climbing you can just really quickly add",
    "start": "312000",
    "end": "313840"
  },
  {
    "text": "nodes uh without disrupting anything",
    "start": "313840",
    "end": "315919"
  },
  {
    "text": "before So there's no process of rolling",
    "start": "315919",
    "end": "317759"
  },
  {
    "text": "restart that's happening here It's not",
    "start": "317759",
    "end": "319199"
  },
  {
    "text": "going to put any extra pressure If",
    "start": "319199",
    "end": "320800"
  },
  {
    "text": "anything it's going to give you",
    "start": "320800",
    "end": "322000"
  },
  {
    "text": "temporarily even more capacity than you",
    "start": "322000",
    "end": "323520"
  },
  {
    "text": "needed and then you're just going to",
    "start": "323520",
    "end": "324880"
  },
  {
    "text": "take away the old old replica ones",
    "start": "324880",
    "end": "328080"
  },
  {
    "text": "So this is what we wanted to do and the",
    "start": "328080",
    "end": "330000"
  },
  {
    "text": "way we did it was we just implemented",
    "start": "330000",
    "end": "331600"
  },
  {
    "text": "multi-stateful set because the vanilla",
    "start": "331600",
    "end": "333600"
  },
  {
    "text": "stateful set as I said has some certain",
    "start": "333600",
    "end": "335840"
  },
  {
    "text": "limitations because of the way ordinals",
    "start": "335840",
    "end": "337280"
  },
  {
    "text": "work It cannot do this sort of so this",
    "start": "337280",
    "end": "339919"
  },
  {
    "text": "idea this very simple idea is not",
    "start": "339919",
    "end": "341840"
  },
  {
    "text": "possible today using a single stateful",
    "start": "341840",
    "end": "344080"
  },
  {
    "text": "set So we had to kind of refactor our",
    "start": "344080",
    "end": "346240"
  },
  {
    "text": "clickos operator to do multiple stateful",
    "start": "346240",
    "end": "348400"
  },
  {
    "text": "sets and this is how it looks like So",
    "start": "348400",
    "end": "350160"
  },
  {
    "text": "the idea is to have one stateful set for",
    "start": "350160",
    "end": "351919"
  },
  {
    "text": "every pod Uh so before you you we had a",
    "start": "351919",
    "end": "355759"
  },
  {
    "text": "single stateful set and the transition",
    "start": "355759",
    "end": "358160"
  },
  {
    "text": "was actually this right So each single",
    "start": "358160",
    "end": "359759"
  },
  {
    "text": "stateful set is responsible for managing",
    "start": "359759",
    "end": "361680"
  },
  {
    "text": "a pod it by itself and this gives us a",
    "start": "361680",
    "end": "363919"
  },
  {
    "text": "lot of control and flexibility and this",
    "start": "363919",
    "end": "365759"
  },
  {
    "text": "and now we have the cap capability to do",
    "start": "365759",
    "end": "368160"
  },
  {
    "text": "make before break So this is how it work",
    "start": "368160",
    "end": "370319"
  },
  {
    "text": "So we have three stateful sets managing",
    "start": "370319",
    "end": "371840"
  },
  {
    "text": "three pods You kind of do a make",
    "start": "371840",
    "end": "374000"
  },
  {
    "text": "operation which adds a new pod As you",
    "start": "374000",
    "end": "376240"
  },
  {
    "text": "can see it's a bigger size You break the",
    "start": "376240",
    "end": "379039"
  },
  {
    "text": "existing pod that one goes away Right",
    "start": "379039",
    "end": "381680"
  },
  {
    "text": "very simple idea but it's not like I",
    "start": "381680",
    "end": "384080"
  },
  {
    "text": "said not possible with stateful sets So",
    "start": "384080",
    "end": "386880"
  },
  {
    "text": "with all this context we're going to",
    "start": "386880",
    "end": "388319"
  },
  {
    "text": "talk about the migration Now what what",
    "start": "388319",
    "end": "390160"
  },
  {
    "text": "do I mean when I say migration The",
    "start": "390160",
    "end": "391840"
  },
  {
    "text": "problem is we had we now have two",
    "start": "391840",
    "end": "394000"
  },
  {
    "text": "different uh code paths inside our",
    "start": "394000",
    "end": "395759"
  },
  {
    "text": "operator and we have thousands and",
    "start": "395759",
    "end": "397120"
  },
  {
    "text": "thousands of production clusters which",
    "start": "397120",
    "end": "398960"
  },
  {
    "text": "are still using this old uh approach",
    "start": "398960",
    "end": "401360"
  },
  {
    "text": "Right So we want to move all of our uh",
    "start": "401360",
    "end": "403360"
  },
  {
    "text": "customers uh from this approach to this",
    "start": "403360",
    "end": "406160"
  },
  {
    "text": "one And this is the migration that we're",
    "start": "406160",
    "end": "408160"
  },
  {
    "text": "talking about",
    "start": "408160",
    "end": "411400"
  },
  {
    "text": "Yeah And there are some of the",
    "start": "412400",
    "end": "413919"
  },
  {
    "text": "requirements of this migration which is",
    "start": "413919",
    "end": "415360"
  },
  {
    "text": "you cannot have downtime Uh uh you still",
    "start": "415360",
    "end": "417680"
  },
  {
    "text": "want to continue to serve it's an",
    "start": "417680",
    "end": "419039"
  },
  {
    "text": "orchestration change right you're not uh",
    "start": "419039",
    "end": "421039"
  },
  {
    "text": "of course you're uh in future you you",
    "start": "421039",
    "end": "422800"
  },
  {
    "text": "want to do make before break So that's",
    "start": "422800",
    "end": "424240"
  },
  {
    "text": "an extra capability that you want to",
    "start": "424240",
    "end": "425520"
  },
  {
    "text": "give the customers but at the same time",
    "start": "425520",
    "end": "427759"
  },
  {
    "text": "uh downtime was basically unacceptable",
    "start": "427759",
    "end": "430479"
  },
  {
    "text": "for us we need to do some orchestration",
    "start": "430479",
    "end": "432720"
  },
  {
    "text": "some organization you know a lot of",
    "start": "432720",
    "end": "434400"
  },
  {
    "text": "Excel sheets there Uh a lot of",
    "start": "434400",
    "end": "436080"
  },
  {
    "text": "visibility for our customers Uh and of",
    "start": "436080",
    "end": "438720"
  },
  {
    "text": "course the database itself is not like",
    "start": "438720",
    "end": "441280"
  },
  {
    "text": "I'm talking about pods as if they're",
    "start": "441280",
    "end": "442880"
  },
  {
    "text": "like you seamlessly going in and out But",
    "start": "442880",
    "end": "445120"
  },
  {
    "text": "uh the database itself was not prepared",
    "start": "445120",
    "end": "447440"
  },
  {
    "text": "to be this elastic So there were a lot",
    "start": "447440",
    "end": "449440"
  },
  {
    "text": "of challenges uh that we uh encountered",
    "start": "449440",
    "end": "451759"
  },
  {
    "text": "along the way And of course uh being",
    "start": "451759",
    "end": "453919"
  },
  {
    "text": "able to roll back or even mitigate",
    "start": "453919",
    "end": "455599"
  },
  {
    "text": "issues as they come into while migration",
    "start": "455599",
    "end": "457440"
  },
  {
    "text": "is happening for critical customers that",
    "start": "457440",
    "end": "459120"
  },
  {
    "text": "was also like an important requirement",
    "start": "459120",
    "end": "460319"
  },
  {
    "text": "for us So again the migration itself was",
    "start": "460319",
    "end": "464240"
  },
  {
    "text": "also like an MBB style migration which",
    "start": "464240",
    "end": "466560"
  },
  {
    "text": "is you have a single stateful set which",
    "start": "466560",
    "end": "468560"
  },
  {
    "text": "is managing let's say three replicas and",
    "start": "468560",
    "end": "471039"
  },
  {
    "text": "then you immediately add three new",
    "start": "471039",
    "end": "472400"
  },
  {
    "text": "replicas as three three new stateful",
    "start": "472400",
    "end": "474560"
  },
  {
    "text": "sets",
    "start": "474560",
    "end": "475720"
  },
  {
    "text": "right and then you synchronize all this",
    "start": "475720",
    "end": "478000"
  },
  {
    "text": "replicas So uh the sync step which is",
    "start": "478000",
    "end": "480160"
  },
  {
    "text": "basically copying over of the catalog",
    "start": "480160",
    "end": "481919"
  },
  {
    "text": "and some database internal operations",
    "start": "481919",
    "end": "483599"
  },
  {
    "text": "that are happening and after the",
    "start": "483599",
    "end": "485120"
  },
  {
    "text": "synchronization is complete you can just",
    "start": "485120",
    "end": "487199"
  },
  {
    "text": "break the single stateful set that goes",
    "start": "487199",
    "end": "489440"
  },
  {
    "text": "away and now you are kind of left with",
    "start": "489440",
    "end": "491199"
  },
  {
    "text": "three single stateful So you go from the",
    "start": "491199",
    "end": "493039"
  },
  {
    "text": "old way of orchestrating to the new one",
    "start": "493039",
    "end": "495280"
  },
  {
    "text": "while at at no point in time did you",
    "start": "495280",
    "end": "497280"
  },
  {
    "text": "have a downtime you always had at least",
    "start": "497280",
    "end": "498720"
  },
  {
    "text": "three replicas available in the cluster",
    "start": "498720",
    "end": "500960"
  },
  {
    "text": "and you were always serving",
    "start": "500960",
    "end": "503080"
  },
  {
    "text": "queries So that's kind of the general",
    "start": "503080",
    "end": "505360"
  },
  {
    "text": "idea of how we uh designed uh this",
    "start": "505360",
    "end": "508160"
  },
  {
    "text": "migration flow and there were multiple",
    "start": "508160",
    "end": "510879"
  },
  {
    "text": "pieces of this puzzle right So we uh",
    "start": "510879",
    "end": "513039"
  },
  {
    "text": "like it's not enough like this code",
    "start": "513039",
    "end": "514959"
  },
  {
    "text": "cannot live inside our uh Kubernetes",
    "start": "514959",
    "end": "517440"
  },
  {
    "text": "operator uh because it's a one-time",
    "start": "517440",
    "end": "519360"
  },
  {
    "text": "operation per cluster and then it it'll",
    "start": "519360",
    "end": "521440"
  },
  {
    "text": "just be throwaway code So we needed to",
    "start": "521440",
    "end": "523279"
  },
  {
    "text": "come up with a way to design is to have",
    "start": "523279",
    "end": "525120"
  },
  {
    "text": "like sufficient decoupling and then",
    "start": "525120",
    "end": "527040"
  },
  {
    "text": "sufficient orchestration as well So we",
    "start": "527040",
    "end": "528720"
  },
  {
    "text": "have an like an API which is kind of",
    "start": "528720",
    "end": "530240"
  },
  {
    "text": "responsible for doing things like uh",
    "start": "530240",
    "end": "532160"
  },
  {
    "text": "setting up your autoscaling",
    "start": "532160",
    "end": "533760"
  },
  {
    "text": "configuration setting up your idling",
    "start": "533760",
    "end": "535120"
  },
  {
    "text": "configuration Uh we use temporal I don't",
    "start": "535120",
    "end": "537279"
  },
  {
    "text": "know how many people are familiar with",
    "start": "537279",
    "end": "538399"
  },
  {
    "text": "temporal Hopefully many of you are Uh",
    "start": "538399",
    "end": "540640"
  },
  {
    "text": "it's an orchestration system that we",
    "start": "540640",
    "end": "542399"
  },
  {
    "text": "used uh to kind of uh you know handle",
    "start": "542399",
    "end": "544720"
  },
  {
    "text": "these migrations as they happen in",
    "start": "544720",
    "end": "546320"
  },
  {
    "text": "batches And we wrote a custom migration",
    "start": "546320",
    "end": "548480"
  },
  {
    "text": "controller which was responsible for",
    "start": "548480",
    "end": "550160"
  },
  {
    "text": "doing all the things we couldn't do",
    "start": "550160",
    "end": "552240"
  },
  {
    "text": "inside our own operator",
    "start": "552240",
    "end": "554959"
  },
  {
    "text": "So quickly uh maintenance this was a",
    "start": "554959",
    "end": "557360"
  },
  {
    "text": "very simple idea that you put a cluster",
    "start": "557360",
    "end": "559040"
  },
  {
    "text": "inside maintenance mode where you",
    "start": "559040",
    "end": "560880"
  },
  {
    "text": "disable certain operations So if you",
    "start": "560880",
    "end": "562320"
  },
  {
    "text": "think about it while this migration is",
    "start": "562320",
    "end": "564240"
  },
  {
    "text": "happening while you're adding and",
    "start": "564240",
    "end": "565440"
  },
  {
    "text": "removing replicas for this critical",
    "start": "565440",
    "end": "566880"
  },
  {
    "text": "operation you don't want the exist the",
    "start": "566880",
    "end": "569600"
  },
  {
    "text": "customer to kind of suddenly uh you know",
    "start": "569600",
    "end": "571839"
  },
  {
    "text": "decide oh I want to scale my cluster",
    "start": "571839",
    "end": "573519"
  },
  {
    "text": "because all the all those operations are",
    "start": "573519",
    "end": "575120"
  },
  {
    "text": "going to be influencing what's happening",
    "start": "575120",
    "end": "576800"
  },
  {
    "text": "inside the pods anyway So you want to",
    "start": "576800",
    "end": "578240"
  },
  {
    "text": "disable those operations but you don't",
    "start": "578240",
    "end": "580160"
  },
  {
    "text": "want to disable inserts and selects So",
    "start": "580160",
    "end": "582080"
  },
  {
    "text": "we implemented something we call partial",
    "start": "582080",
    "end": "583839"
  },
  {
    "text": "migration uh which basically removed our",
    "start": "583839",
    "end": "586480"
  },
  {
    "text": "sto virtual service and then uh uh",
    "start": "586480",
    "end": "588560"
  },
  {
    "text": "actually it didn't that was the only",
    "start": "588560",
    "end": "590160"
  },
  {
    "text": "thing it didn't do right uh but it",
    "start": "590160",
    "end": "592080"
  },
  {
    "text": "disabled uh from the autoscaling and the",
    "start": "592080",
    "end": "594160"
  },
  {
    "text": "idling backups perspective all of those",
    "start": "594160",
    "end": "596080"
  },
  {
    "text": "operations were disabled but the inserts",
    "start": "596080",
    "end": "597680"
  },
  {
    "text": "and selects were still",
    "start": "597680",
    "end": "599800"
  },
  {
    "text": "running and like I said we used temporal",
    "start": "599800",
    "end": "602720"
  },
  {
    "text": "uh this is a really powerful tool uh",
    "start": "602720",
    "end": "605040"
  },
  {
    "text": "that came in really handy because it",
    "start": "605040",
    "end": "606480"
  },
  {
    "text": "gives it gave us durable execution we",
    "start": "606480",
    "end": "608480"
  },
  {
    "text": "had to write a lot of business logic to",
    "start": "608480",
    "end": "610080"
  },
  {
    "text": "kind of you know uh save the initial",
    "start": "610080",
    "end": "612000"
  },
  {
    "text": "state of the cluster perform the",
    "start": "612000",
    "end": "613680"
  },
  {
    "text": "migration which changes the state itself",
    "start": "613680",
    "end": "616000"
  },
  {
    "text": "and then reset the state after the",
    "start": "616000",
    "end": "617680"
  },
  {
    "text": "migration is complete uh to whatever",
    "start": "617680",
    "end": "619440"
  },
  {
    "text": "configuration uh was uh before the",
    "start": "619440",
    "end": "622160"
  },
  {
    "text": "migration even started We had to do",
    "start": "622160",
    "end": "624079"
  },
  {
    "text": "things like you know catch configuration",
    "start": "624079",
    "end": "625680"
  },
  {
    "text": "drift if there's a human intervention",
    "start": "625680",
    "end": "627200"
  },
  {
    "text": "that's required send a notification to",
    "start": "627200",
    "end": "629120"
  },
  {
    "text": "slack uh you know uh pause the migration",
    "start": "629120",
    "end": "631519"
  },
  {
    "text": "while some someone on call goes and",
    "start": "631519",
    "end": "633279"
  },
  {
    "text": "checks that those things So a lot of",
    "start": "633279",
    "end": "634959"
  },
  {
    "text": "those things were made really easy and",
    "start": "634959",
    "end": "636399"
  },
  {
    "text": "possible with temporal because of its",
    "start": "636399",
    "end": "638560"
  },
  {
    "text": "like seamless way to kind of do durable",
    "start": "638560",
    "end": "640480"
  },
  {
    "text": "execution So all the inputs and outputs",
    "start": "640480",
    "end": "642399"
  },
  {
    "text": "are preserved failure detection retries",
    "start": "642399",
    "end": "644720"
  },
  {
    "text": "you get all of these things basically",
    "start": "644720",
    "end": "646079"
  },
  {
    "text": "out of the",
    "start": "646079",
    "end": "647480"
  },
  {
    "text": "box and this is how it looked like So we",
    "start": "647480",
    "end": "649760"
  },
  {
    "text": "had like a parent uh workflow which is",
    "start": "649760",
    "end": "652399"
  },
  {
    "text": "basically like a glorified cron job if",
    "start": "652399",
    "end": "654240"
  },
  {
    "text": "you want to think about it in a simple",
    "start": "654240",
    "end": "655360"
  },
  {
    "text": "fashion It's like goes and checks uh",
    "start": "655360",
    "end": "657600"
  },
  {
    "text": "what's happening uh what clusters are in",
    "start": "657600",
    "end": "660240"
  },
  {
    "text": "maintenance mode and what clusters are",
    "start": "660240",
    "end": "662640"
  },
  {
    "text": "uh eligible for a migration today So",
    "start": "662640",
    "end": "664640"
  },
  {
    "text": "let's say there are 20 of them today",
    "start": "664640",
    "end": "666000"
  },
  {
    "text": "because you have you you want to do it",
    "start": "666000",
    "end": "667440"
  },
  {
    "text": "like in small batches You don't want to",
    "start": "667440",
    "end": "668959"
  },
  {
    "text": "do it uh you know immediately You don't",
    "start": "668959",
    "end": "670880"
  },
  {
    "text": "want to migrate thousand cluster That's",
    "start": "670880",
    "end": "672240"
  },
  {
    "text": "going to cause capacity issues in all of",
    "start": "672240",
    "end": "673600"
  },
  {
    "text": "your regions Uh so every day you like",
    "start": "673600",
    "end": "676079"
  },
  {
    "text": "have a select a certain small batch of",
    "start": "676079",
    "end": "678000"
  },
  {
    "text": "clusters go over them and kick off like",
    "start": "678000",
    "end": "680079"
  },
  {
    "text": "a child workflow uh for those clusters",
    "start": "680079",
    "end": "682560"
  },
  {
    "text": "And this this workflow is going to",
    "start": "682560",
    "end": "684000"
  },
  {
    "text": "basically uh uh look at our uh click",
    "start": "684000",
    "end": "687200"
  },
  {
    "text": "house cluster custom resource It's going",
    "start": "687200",
    "end": "688800"
  },
  {
    "text": "to start reconciling and kick off some",
    "start": "688800",
    "end": "690240"
  },
  {
    "text": "migration controller jobs Uh we're going",
    "start": "690240",
    "end": "692160"
  },
  {
    "text": "to go into what migration controller is",
    "start": "692160",
    "end": "693600"
  },
  {
    "text": "all about because that's really the",
    "start": "693600",
    "end": "694720"
  },
  {
    "text": "heart of what is doing these migrations",
    "start": "694720",
    "end": "696959"
  },
  {
    "text": "But this is the orchestration a very",
    "start": "696959",
    "end": "698480"
  },
  {
    "text": "high level orchestration view of how we",
    "start": "698480",
    "end": "700959"
  },
  {
    "text": "actually manage these",
    "start": "700959",
    "end": "702680"
  },
  {
    "text": "migrations I'm going to hand it over to",
    "start": "702680",
    "end": "704880"
  },
  {
    "text": "Jamie to talk about the controller",
    "start": "704880",
    "end": "708000"
  },
  {
    "text": "Thank you Thank you Manish I just",
    "start": "708000",
    "end": "709920"
  },
  {
    "text": "curious how many people know click house",
    "start": "709920",
    "end": "712000"
  },
  {
    "text": "If you could put your hands up because",
    "start": "712000",
    "end": "713200"
  },
  {
    "text": "I'm going to be talking about some very",
    "start": "713200",
    "end": "714640"
  },
  {
    "text": "click house specific things during this",
    "start": "714640",
    "end": "716399"
  },
  {
    "text": "Okay A fair number of people Uh so yeah",
    "start": "716399",
    "end": "719839"
  },
  {
    "text": "first we'll start with the migration",
    "start": "719839",
    "end": "721279"
  },
  {
    "text": "controller and discuss a bit the actual",
    "start": "721279",
    "end": "723600"
  },
  {
    "text": "implementation of that and how we did",
    "start": "723600",
    "end": "725279"
  },
  {
    "text": "that",
    "start": "725279",
    "end": "726560"
  },
  {
    "text": "So I just want to first highlight that",
    "start": "726560",
    "end": "728800"
  },
  {
    "text": "this was a test for click house in terms",
    "start": "728800",
    "end": "731360"
  },
  {
    "text": "of being elastic in its scaling in terms",
    "start": "731360",
    "end": "734000"
  },
  {
    "text": "of being cloudnative adding and removing",
    "start": "734000",
    "end": "735760"
  },
  {
    "text": "replicas as you saw from these examples",
    "start": "735760",
    "end": "737920"
  },
  {
    "text": "of make before break and in specifically",
    "start": "737920",
    "end": "740959"
  },
  {
    "text": "two things in click house One is what we",
    "start": "740959",
    "end": "742800"
  },
  {
    "text": "call syncing the catalog which you can",
    "start": "742800",
    "end": "744800"
  },
  {
    "text": "think of as all your databases and your",
    "start": "744800",
    "end": "746639"
  },
  {
    "text": "tables and the other thing is the actual",
    "start": "746639",
    "end": "749519"
  },
  {
    "text": "data Now as Manish mentioned in the",
    "start": "749519",
    "end": "751440"
  },
  {
    "text": "beginning on our cloud product that data",
    "start": "751440",
    "end": "752959"
  },
  {
    "text": "is in S3 but there is metadata uh at the",
    "start": "752959",
    "end": "755920"
  },
  {
    "text": "time of these migrations at least in",
    "start": "755920",
    "end": "757200"
  },
  {
    "text": "replicated merge tree that is on a local",
    "start": "757200",
    "end": "759279"
  },
  {
    "text": "EBS volume and if that data is not",
    "start": "759279",
    "end": "761839"
  },
  {
    "text": "synced to other replicas before you drop",
    "start": "761839",
    "end": "763519"
  },
  {
    "text": "a replica you could have data loss In",
    "start": "763519",
    "end": "765680"
  },
  {
    "text": "theory the data is still on S3 but",
    "start": "765680",
    "end": "767279"
  },
  {
    "text": "trying to piece together you know which",
    "start": "767279",
    "end": "769440"
  },
  {
    "text": "blobs on S3 are for which customer would",
    "start": "769440",
    "end": "771440"
  },
  {
    "text": "be very difficult And the other thing is",
    "start": "771440",
    "end": "773600"
  },
  {
    "text": "it was a test for our implementation of",
    "start": "773600",
    "end": "775839"
  },
  {
    "text": "this make before break in our Kubernetes",
    "start": "775839",
    "end": "777680"
  },
  {
    "text": "operator",
    "start": "777680",
    "end": "779760"
  },
  {
    "text": "So starting with the requirements we",
    "start": "779760",
    "end": "782079"
  },
  {
    "text": "wanted something simple where we could",
    "start": "782079",
    "end": "783680"
  },
  {
    "text": "for example add a label to a CR using",
    "start": "783680",
    "end": "786480"
  },
  {
    "text": "that temporal workflow and this",
    "start": "786480",
    "end": "788079"
  },
  {
    "text": "migration could start If needed we could",
    "start": "788079",
    "end": "790880"
  },
  {
    "text": "reverse this process and we could have",
    "start": "790880",
    "end": "793760"
  },
  {
    "text": "two states at the same time So we have",
    "start": "793760",
    "end": "795680"
  },
  {
    "text": "our single STS code path and our",
    "start": "795680",
    "end": "797360"
  },
  {
    "text": "operator We have the multi-sts code path",
    "start": "797360",
    "end": "799600"
  },
  {
    "text": "We wanted to live in both of these",
    "start": "799600",
    "end": "800959"
  },
  {
    "text": "states and ideally not implement",
    "start": "800959",
    "end": "802800"
  },
  {
    "text": "backwards compatibility in our operator",
    "start": "802800",
    "end": "804639"
  },
  {
    "text": "to be able to reverse this to handle",
    "start": "804639",
    "end": "806480"
  },
  {
    "text": "these two states And so we came up with",
    "start": "806480",
    "end": "808320"
  },
  {
    "text": "the idea to have a second controller a",
    "start": "808320",
    "end": "810240"
  },
  {
    "text": "migration controller that takes over",
    "start": "810240",
    "end": "812079"
  },
  {
    "text": "some of this work So at a high level we",
    "start": "812079",
    "end": "815519"
  },
  {
    "text": "have a CR that's reconciled by two",
    "start": "815519",
    "end": "817600"
  },
  {
    "text": "controllers now which is an unusual",
    "start": "817600",
    "end": "819279"
  },
  {
    "text": "pattern in Kubernetes So we had a mutex",
    "start": "819279",
    "end": "821440"
  },
  {
    "text": "to ensure if there was a reconcile still",
    "start": "821440",
    "end": "823200"
  },
  {
    "text": "happening from our regular Kubernetes",
    "start": "823200",
    "end": "824720"
  },
  {
    "text": "operator that finished and there was",
    "start": "824720",
    "end": "826560"
  },
  {
    "text": "only one reconcile happening at a time",
    "start": "826560",
    "end": "828880"
  },
  {
    "text": "And so we have our single stateful set",
    "start": "828880",
    "end": "830639"
  },
  {
    "text": "replicas and our multistateful set",
    "start": "830639",
    "end": "832160"
  },
  {
    "text": "replicas managed in some sense",
    "start": "832160",
    "end": "834320"
  },
  {
    "text": "separately",
    "start": "834320",
    "end": "836160"
  },
  {
    "text": "Now that's not quite true So I'll give a",
    "start": "836160",
    "end": "838959"
  },
  {
    "text": "more honest picture on this one The way",
    "start": "838959",
    "end": "841040"
  },
  {
    "text": "that we actually implemented our",
    "start": "841040",
    "end": "842320"
  },
  {
    "text": "migration controller is we embedded the",
    "start": "842320",
    "end": "844079"
  },
  {
    "text": "reconciler of our main Kubernetes",
    "start": "844079",
    "end": "845839"
  },
  {
    "text": "operator into the migration controller",
    "start": "845839",
    "end": "847839"
  },
  {
    "text": "because a lot of the logic to for",
    "start": "847839",
    "end": "849360"
  },
  {
    "text": "example add replicas sync that state the",
    "start": "849360",
    "end": "852560"
  },
  {
    "text": "state of click house remove replicas",
    "start": "852560",
    "end": "854560"
  },
  {
    "text": "that's going to be the same in the",
    "start": "854560",
    "end": "855519"
  },
  {
    "text": "migration controller So we actually",
    "start": "855519",
    "end": "857360"
  },
  {
    "text": "called those functions from the",
    "start": "857360",
    "end": "858560"
  },
  {
    "text": "migration controller and called the",
    "start": "858560",
    "end": "860480"
  },
  {
    "text": "operator when needed But any specific",
    "start": "860480",
    "end": "863120"
  },
  {
    "text": "migration logic we didn't have to",
    "start": "863120",
    "end": "864800"
  },
  {
    "text": "pollute our codebase in the operator and",
    "start": "864800",
    "end": "866639"
  },
  {
    "text": "make it backwards compatible We could",
    "start": "866639",
    "end": "868079"
  },
  {
    "text": "just put all that orchestration and",
    "start": "868079",
    "end": "870320"
  },
  {
    "text": "logic into the migration",
    "start": "870320",
    "end": "872440"
  },
  {
    "text": "controller Now just to summarize that we",
    "start": "872440",
    "end": "876240"
  },
  {
    "text": "can think of the migration controller as",
    "start": "876240",
    "end": "877600"
  },
  {
    "text": "a sort of wrapper controller over our",
    "start": "877600",
    "end": "879760"
  },
  {
    "text": "Kubernetes operator with additional",
    "start": "879760",
    "end": "881360"
  },
  {
    "text": "logic to orchestrate things and we can",
    "start": "881360",
    "end": "883920"
  },
  {
    "text": "handle all those specific things So we",
    "start": "883920",
    "end": "886079"
  },
  {
    "text": "make we sync and we break and that",
    "start": "886079",
    "end": "888959"
  },
  {
    "text": "process with two different single",
    "start": "888959",
    "end": "890880"
  },
  {
    "text": "stateful set and multistateful set",
    "start": "890880",
    "end": "892480"
  },
  {
    "text": "replicas and being able to reverse this",
    "start": "892480",
    "end": "894399"
  },
  {
    "text": "process is completely handled by the",
    "start": "894399",
    "end": "896079"
  },
  {
    "text": "migration",
    "start": "896079",
    "end": "897160"
  },
  {
    "text": "controller Now I want to go into some",
    "start": "897160",
    "end": "899360"
  },
  {
    "text": "challenges when we actually started to",
    "start": "899360",
    "end": "900880"
  },
  {
    "text": "roll this out We wrote a lot of tests",
    "start": "900880",
    "end": "903199"
  },
  {
    "text": "and we wrote integration tests unit",
    "start": "903199",
    "end": "905360"
  },
  {
    "text": "tests m tests We have something internal",
    "start": "905360",
    "end": "907440"
  },
  {
    "text": "called stress house We migrated a lot of",
    "start": "907440",
    "end": "909519"
  },
  {
    "text": "internal instances But when we started",
    "start": "909519",
    "end": "911440"
  },
  {
    "text": "to migrate customers we encountered some",
    "start": "911440",
    "end": "913680"
  },
  {
    "text": "interesting issues So the first one I'll",
    "start": "913680",
    "end": "916160"
  },
  {
    "text": "go into is an implementation problem",
    "start": "916160",
    "end": "918240"
  },
  {
    "text": "that we had in multi-STS and the way we",
    "start": "918240",
    "end": "921199"
  },
  {
    "text": "were implementing this in our Kubernetes",
    "start": "921199",
    "end": "922639"
  },
  {
    "text": "operator So I'm showing you here a two",
    "start": "922639",
    "end": "925440"
  },
  {
    "text": "replica cluster on the left and we do a",
    "start": "925440",
    "end": "928000"
  },
  {
    "text": "make we add another two replicas on the",
    "start": "928000",
    "end": "930000"
  },
  {
    "text": "right and you see here that the first",
    "start": "930000",
    "end": "932240"
  },
  {
    "text": "two replicas are in zones A and B and",
    "start": "932240",
    "end": "935199"
  },
  {
    "text": "the new replicas have been put in zones",
    "start": "935199",
    "end": "937199"
  },
  {
    "text": "C and C Now as many cloud service",
    "start": "937199",
    "end": "940079"
  },
  {
    "text": "providers do we try and maintain uh a",
    "start": "940079",
    "end": "942800"
  },
  {
    "text": "zone balance We have three availability",
    "start": "942800",
    "end": "944639"
  },
  {
    "text": "zones and we want no more than a max",
    "start": "944639",
    "end": "946880"
  },
  {
    "text": "skew of one Now currently this is",
    "start": "946880",
    "end": "949360"
  },
  {
    "text": "actually uh completely valid You have a",
    "start": "949360",
    "end": "952079"
  },
  {
    "text": "b c uh you have two replicas in c but",
    "start": "952079",
    "end": "955120"
  },
  {
    "text": "that's not max of more than one So",
    "start": "955120",
    "end": "956639"
  },
  {
    "text": "everything's great But now as we've",
    "start": "956639",
    "end": "958639"
  },
  {
    "text": "described this process of breaking the",
    "start": "958639",
    "end": "960320"
  },
  {
    "text": "old replicas we have to break the",
    "start": "960320",
    "end": "963040"
  },
  {
    "text": "replicas that are in zones A and B And",
    "start": "963040",
    "end": "965279"
  },
  {
    "text": "now you're left with two replicas in",
    "start": "965279",
    "end": "967199"
  },
  {
    "text": "zone C and C And now this is what we",
    "start": "967199",
    "end": "969600"
  },
  {
    "text": "don't want So we now if zone C goes down",
    "start": "969600",
    "end": "971839"
  },
  {
    "text": "we lose",
    "start": "971839",
    "end": "973000"
  },
  {
    "text": "availability Uh a similar problem",
    "start": "973000",
    "end": "975199"
  },
  {
    "text": "happened to us with idling with in terms",
    "start": "975199",
    "end": "977360"
  },
  {
    "text": "of our zone balance So as Manish",
    "start": "977360",
    "end": "980079"
  },
  {
    "text": "mentioned we idle clusters that don't",
    "start": "980079",
    "end": "982240"
  },
  {
    "text": "have usage and so they scale down to",
    "start": "982240",
    "end": "984240"
  },
  {
    "text": "zero Now when you unidle those instances",
    "start": "984240",
    "end": "988720"
  },
  {
    "text": "and at the same time for example start a",
    "start": "988720",
    "end": "990880"
  },
  {
    "text": "migration or do a horizontal scale out",
    "start": "990880",
    "end": "993680"
  },
  {
    "text": "you can have replicas schedule in a zone",
    "start": "993680",
    "end": "996240"
  },
  {
    "text": "that at that time is valid but the",
    "start": "996240",
    "end": "998720"
  },
  {
    "text": "replicas that existed prior that have a",
    "start": "998720",
    "end": "1000800"
  },
  {
    "text": "PVC and are not scheduled once they are",
    "start": "1000800",
    "end": "1003199"
  },
  {
    "text": "trying to schedule they won't be able to",
    "start": "1003199",
    "end": "1005040"
  },
  {
    "text": "because now the the zone is",
    "start": "1005040",
    "end": "1007160"
  },
  {
    "text": "imbalanced So how did we fix this We we",
    "start": "1007160",
    "end": "1009920"
  },
  {
    "text": "fixed it in our operator by zone pinning",
    "start": "1009920",
    "end": "1012000"
  },
  {
    "text": "and tracking the zones It's also",
    "start": "1012000",
    "end": "1013839"
  },
  {
    "text": "possible to solve it in other ways more",
    "start": "1013839",
    "end": "1015440"
  },
  {
    "text": "Kubernetes ways you could say with um",
    "start": "1015440",
    "end": "1017759"
  },
  {
    "text": "match label selectors for example but uh",
    "start": "1017759",
    "end": "1020000"
  },
  {
    "text": "with the way our operator is written",
    "start": "1020000",
    "end": "1021279"
  },
  {
    "text": "this was a convenient way for us to do",
    "start": "1021279",
    "end": "1023559"
  },
  {
    "text": "it Now I'm going to go into some of the",
    "start": "1023559",
    "end": "1025839"
  },
  {
    "text": "click house specific issues Uh so click",
    "start": "1025839",
    "end": "1028720"
  },
  {
    "text": "house has a nice feature where you can",
    "start": "1028720",
    "end": "1030319"
  },
  {
    "text": "have some external system like postgress",
    "start": "1030319",
    "end": "1032880"
  },
  {
    "text": "or rabbit mq ornats and you can have a",
    "start": "1032880",
    "end": "1035199"
  },
  {
    "text": "table engine in click house itself and",
    "start": "1035199",
    "end": "1038319"
  },
  {
    "text": "at time of creation it makes a lot of",
    "start": "1038319",
    "end": "1040160"
  },
  {
    "text": "sense for click house to check that this",
    "start": "1040160",
    "end": "1041918"
  },
  {
    "text": "external system is available when you're",
    "start": "1041919",
    "end": "1044160"
  },
  {
    "text": "trying to create that table So you try",
    "start": "1044160",
    "end": "1045600"
  },
  {
    "text": "to create a postgress table engine click",
    "start": "1045600",
    "end": "1048160"
  },
  {
    "text": "house checks is that even can I even",
    "start": "1048160",
    "end": "1050000"
  },
  {
    "text": "reach this uh postgress instance that",
    "start": "1050000",
    "end": "1051919"
  },
  {
    "text": "you're trying to create the table from",
    "start": "1051919",
    "end": "1054160"
  },
  {
    "text": "Now when you add a replica to Click",
    "start": "1054160",
    "end": "1055760"
  },
  {
    "text": "House and you sync the catalog it tries",
    "start": "1055760",
    "end": "1058080"
  },
  {
    "text": "to create those tables And of course it",
    "start": "1058080",
    "end": "1059919"
  },
  {
    "text": "was unable to because in some cases the",
    "start": "1059919",
    "end": "1062000"
  },
  {
    "text": "customer no longer has that external",
    "start": "1062000",
    "end": "1063600"
  },
  {
    "text": "service or perhaps they've just shut it",
    "start": "1063600",
    "end": "1065039"
  },
  {
    "text": "down temporarily But now it makes a lot",
    "start": "1065039",
    "end": "1067200"
  },
  {
    "text": "less sense to not be able to create that",
    "start": "1067200",
    "end": "1069120"
  },
  {
    "text": "table because you're not really creating",
    "start": "1069120",
    "end": "1070480"
  },
  {
    "text": "it So this was a problem we encountered",
    "start": "1070480",
    "end": "1072799"
  },
  {
    "text": "with the migrations and something that",
    "start": "1072799",
    "end": "1074400"
  },
  {
    "text": "has made ClickHouse more cloudnative and",
    "start": "1074400",
    "end": "1076799"
  },
  {
    "text": "elastic So these are now secondary",
    "start": "1076799",
    "end": "1078640"
  },
  {
    "text": "create queries that don't throw the same",
    "start": "1078640",
    "end": "1080880"
  },
  {
    "text": "errors and do the same validation",
    "start": "1080880",
    "end": "1082320"
  },
  {
    "text": "because they're not creating the table",
    "start": "1082320",
    "end": "1084000"
  },
  {
    "text": "for the first time but they're just",
    "start": "1084000",
    "end": "1085600"
  },
  {
    "text": "syncing it to a new",
    "start": "1085600",
    "end": "1087400"
  },
  {
    "text": "replica Similar but completely internal",
    "start": "1087400",
    "end": "1089919"
  },
  {
    "text": "to click house Materialized views is a",
    "start": "1089919",
    "end": "1092080"
  },
  {
    "text": "popular feature where you have some",
    "start": "1092080",
    "end": "1093360"
  },
  {
    "text": "source table and some destination table",
    "start": "1093360",
    "end": "1095600"
  },
  {
    "text": "and you have some trigger uh that will",
    "start": "1095600",
    "end": "1099039"
  },
  {
    "text": "mutate that data into your destination",
    "start": "1099039",
    "end": "1100960"
  },
  {
    "text": "table and at the time of creation again",
    "start": "1100960",
    "end": "1103840"
  },
  {
    "text": "you want to check that that source table",
    "start": "1103840",
    "end": "1105600"
  },
  {
    "text": "exists But at some point someone might",
    "start": "1105600",
    "end": "1108080"
  },
  {
    "text": "delete that source table but still want",
    "start": "1108080",
    "end": "1109679"
  },
  {
    "text": "the materialized view which is",
    "start": "1109679",
    "end": "1111200"
  },
  {
    "text": "completely fine But again click house",
    "start": "1111200",
    "end": "1114160"
  },
  {
    "text": "tried to do validation Does the source",
    "start": "1114160",
    "end": "1115919"
  },
  {
    "text": "table exist when syncing it to a new",
    "start": "1115919",
    "end": "1117520"
  },
  {
    "text": "replica and that failed So that kind of",
    "start": "1117520",
    "end": "1121200"
  },
  {
    "text": "made click house again more cloudnative",
    "start": "1121200",
    "end": "1123360"
  },
  {
    "text": "Now this this one's quite interesting So",
    "start": "1123360",
    "end": "1125840"
  },
  {
    "text": "again we've got a make before break",
    "start": "1125840",
    "end": "1127520"
  },
  {
    "text": "happening On the left we have our old",
    "start": "1127520",
    "end": "1129760"
  },
  {
    "text": "replicas On the right we have our new",
    "start": "1129760",
    "end": "1131360"
  },
  {
    "text": "replicas Uh so we've got our single",
    "start": "1131360",
    "end": "1133760"
  },
  {
    "text": "stateful sets numbered S1 to S3 and",
    "start": "1133760",
    "end": "1136240"
  },
  {
    "text": "we've got our multistateful sets M1 to",
    "start": "1136240",
    "end": "1138400"
  },
  {
    "text": "M3 And currently they're they're both",
    "start": "1138400",
    "end": "1140880"
  },
  {
    "text": "active receiving customer inserts",
    "start": "1140880",
    "end": "1143120"
  },
  {
    "text": "Everything's great We now we're doing",
    "start": "1143120",
    "end": "1146080"
  },
  {
    "text": "the sync step So we're trying to we're",
    "start": "1146080",
    "end": "1147760"
  },
  {
    "text": "running a command system sync replica",
    "start": "1147760",
    "end": "1149440"
  },
  {
    "text": "lightweight which syncs all the part",
    "start": "1149440",
    "end": "1151080"
  },
  {
    "text": "metadata from the break-in replicas to",
    "start": "1151080",
    "end": "1154400"
  },
  {
    "text": "one of the new replicas So we see we're",
    "start": "1154400",
    "end": "1156160"
  },
  {
    "text": "running it on M2 in this case but we're",
    "start": "1156160",
    "end": "1158640"
  },
  {
    "text": "getting all the data synced from S1 to",
    "start": "1158640",
    "end": "1160400"
  },
  {
    "text": "S3 but we're also getting the data",
    "start": "1160400",
    "end": "1162320"
  },
  {
    "text": "synced from M1 and M3 in this case Now",
    "start": "1162320",
    "end": "1165120"
  },
  {
    "text": "what's the problem with that Well a",
    "start": "1165120",
    "end": "1167039"
  },
  {
    "text": "customer could have continuous inserts",
    "start": "1167039",
    "end": "1169039"
  },
  {
    "text": "and they could be inserting into M1 and",
    "start": "1169039",
    "end": "1171039"
  },
  {
    "text": "M3 when you run this command And",
    "start": "1171039",
    "end": "1174160"
  },
  {
    "text": "practically this command would probably",
    "start": "1174160",
    "end": "1175600"
  },
  {
    "text": "time out and you'd have to rerun it a",
    "start": "1175600",
    "end": "1177280"
  },
  {
    "text": "bunch of times In theory if you had",
    "start": "1177280",
    "end": "1179280"
  },
  {
    "text": "continuous inserts forever this would be",
    "start": "1179280",
    "end": "1181520"
  },
  {
    "text": "an unbreakable replica You would never",
    "start": "1181520",
    "end": "1183280"
  },
  {
    "text": "be able to succeed this query And so you",
    "start": "1183280",
    "end": "1185200"
  },
  {
    "text": "could never finish the sync step So what",
    "start": "1185200",
    "end": "1188400"
  },
  {
    "text": "did we do We added a from modifier into",
    "start": "1188400",
    "end": "1191120"
  },
  {
    "text": "click house So you can do system sync",
    "start": "1191120",
    "end": "1193039"
  },
  {
    "text": "graphical lightweight from in this case",
    "start": "1193039",
    "end": "1194880"
  },
  {
    "text": "S1 to S3 which is our single stateful",
    "start": "1194880",
    "end": "1196880"
  },
  {
    "text": "set pods And now we don't need to wait",
    "start": "1196880",
    "end": "1199280"
  },
  {
    "text": "for those inserts that are going to M1",
    "start": "1199280",
    "end": "1201120"
  },
  {
    "text": "to M3 because those replicas they're not",
    "start": "1201120",
    "end": "1203360"
  },
  {
    "text": "going to be dropped now They're they're",
    "start": "1203360",
    "end": "1205039"
  },
  {
    "text": "sticking around Everything's",
    "start": "1205039",
    "end": "1207080"
  },
  {
    "text": "fine DNS issues Yes we had DNS issues in",
    "start": "1207080",
    "end": "1210559"
  },
  {
    "text": "this migration So click house has a",
    "start": "1210559",
    "end": "1212880"
  },
  {
    "text": "distributed DDL queue Uh oncluster",
    "start": "1212880",
    "end": "1215679"
  },
  {
    "text": "queries go into this So for example",
    "start": "1215679",
    "end": "1217600"
  },
  {
    "text": "create table oncluster create database",
    "start": "1217600",
    "end": "1219840"
  },
  {
    "text": "on cluster these kinds of queries And at",
    "start": "1219840",
    "end": "1222799"
  },
  {
    "text": "the time these queries are written the",
    "start": "1222799",
    "end": "1224559"
  },
  {
    "text": "host names of the replicas available in",
    "start": "1224559",
    "end": "1226640"
  },
  {
    "text": "the cluster are recorded in this queue",
    "start": "1226640",
    "end": "1229200"
  },
  {
    "text": "So for example we've got S1 to S3 are",
    "start": "1229200",
    "end": "1231679"
  },
  {
    "text": "recorded in this case Now let's say it",
    "start": "1231679",
    "end": "1233840"
  },
  {
    "text": "was unfinished on S1 and we then dropped",
    "start": "1233840",
    "end": "1236480"
  },
  {
    "text": "that replica which is fine because it",
    "start": "1236480",
    "end": "1238480"
  },
  {
    "text": "succeeded on the other two replicas we",
    "start": "1238480",
    "end": "1240400"
  },
  {
    "text": "don't need it to succeed on all three of",
    "start": "1240400",
    "end": "1241919"
  },
  {
    "text": "them Uh but now click house when it",
    "start": "1241919",
    "end": "1244240"
  },
  {
    "text": "tries to read that query from the queue",
    "start": "1244240",
    "end": "1246159"
  },
  {
    "text": "and execute it it's unable to resolve S1",
    "start": "1246159",
    "end": "1250159"
  },
  {
    "text": "that replica doesn't exist anymore",
    "start": "1250159",
    "end": "1251440"
  },
  {
    "text": "because we dropped it And so this was an",
    "start": "1251440",
    "end": "1253200"
  },
  {
    "text": "issue that uh we encountered trying to",
    "start": "1253200",
    "end": "1257640"
  },
  {
    "text": "uh you know deal with DNS issues So",
    "start": "1257640",
    "end": "1261919"
  },
  {
    "text": "system table copy this is something that",
    "start": "1261919",
    "end": "1264559"
  },
  {
    "text": "we actually found late in the game of",
    "start": "1264559",
    "end": "1266240"
  },
  {
    "text": "our migrations So system tables are a",
    "start": "1266240",
    "end": "1269600"
  },
  {
    "text": "replica local table There's many of them",
    "start": "1269600",
    "end": "1272799"
  },
  {
    "text": "You have log tables and non-log tables",
    "start": "1272799",
    "end": "1275200"
  },
  {
    "text": "And these are used for introspection So",
    "start": "1275200",
    "end": "1276799"
  },
  {
    "text": "you might want to look at the query log",
    "start": "1276799",
    "end": "1278320"
  },
  {
    "text": "to see your history of queries You might",
    "start": "1278320",
    "end": "1280320"
  },
  {
    "text": "want to look at the metric log You can",
    "start": "1280320",
    "end": "1281840"
  },
  {
    "text": "see CPU and memory statistics and other",
    "start": "1281840",
    "end": "1284400"
  },
  {
    "text": "things to see what's going on in your",
    "start": "1284400",
    "end": "1286159"
  },
  {
    "text": "database Now these are completely local",
    "start": "1286159",
    "end": "1288480"
  },
  {
    "text": "to the replica as I said And the problem",
    "start": "1288480",
    "end": "1290640"
  },
  {
    "text": "is with this make before break pattern",
    "start": "1290640",
    "end": "1292960"
  },
  {
    "text": "you're actually going to lose those",
    "start": "1292960",
    "end": "1294480"
  },
  {
    "text": "system tables You'll lose all that",
    "start": "1294480",
    "end": "1295919"
  },
  {
    "text": "history And many customers use this for",
    "start": "1295919",
    "end": "1297720"
  },
  {
    "text": "observability and general introspection",
    "start": "1297720",
    "end": "1299919"
  },
  {
    "text": "into their",
    "start": "1299919",
    "end": "1301400"
  },
  {
    "text": "cluster Now how did we solve this So for",
    "start": "1301400",
    "end": "1304320"
  },
  {
    "text": "the migrations themselves we had a stop",
    "start": "1304320",
    "end": "1306320"
  },
  {
    "text": "gap solution where we literally select",
    "start": "1306320",
    "end": "1308799"
  },
  {
    "text": "inserted from the break-in replicas to",
    "start": "1308799",
    "end": "1310880"
  },
  {
    "text": "the new replicas and just copied this",
    "start": "1310880",
    "end": "1312600"
  },
  {
    "text": "data Obviously you can imagine this",
    "start": "1312600",
    "end": "1315360"
  },
  {
    "text": "doesn't scale very well and we couldn't",
    "start": "1315360",
    "end": "1316799"
  },
  {
    "text": "do this when we do this for general",
    "start": "1316799",
    "end": "1319120"
  },
  {
    "text": "autoscaling purposes in customers",
    "start": "1319120",
    "end": "1321200"
  },
  {
    "text": "instances And so the fix for this that",
    "start": "1321200",
    "end": "1323840"
  },
  {
    "text": "we implemented was a new disk type",
    "start": "1323840",
    "end": "1326080"
  },
  {
    "text": "called S3 plain new writable that moves",
    "start": "1326080",
    "end": "1328480"
  },
  {
    "text": "all this uh data and metadata onto S3",
    "start": "1328480",
    "end": "1331600"
  },
  {
    "text": "and allows you to attach these discs So",
    "start": "1331600",
    "end": "1333919"
  },
  {
    "text": "you effectively do a zero copy attach So",
    "start": "1333919",
    "end": "1336640"
  },
  {
    "text": "you just attach the discs from the old",
    "start": "1336640",
    "end": "1338240"
  },
  {
    "text": "replicas to the new ones instead of",
    "start": "1338240",
    "end": "1340000"
  },
  {
    "text": "copying this data",
    "start": "1340000",
    "end": "1342720"
  },
  {
    "text": "So I I'm going to end on this idea that",
    "start": "1342720",
    "end": "1345120"
  },
  {
    "text": "migrations are kind of a boring thing I",
    "start": "1345120",
    "end": "1347440"
  },
  {
    "text": "think generally and they're quite hard",
    "start": "1347440",
    "end": "1349760"
  },
  {
    "text": "and it's something that many many of us",
    "start": "1349760",
    "end": "1351520"
  },
  {
    "text": "as software engineers have to deal with",
    "start": "1351520",
    "end": "1353120"
  },
  {
    "text": "a lot of projects of software is you",
    "start": "1353120",
    "end": "1355200"
  },
  {
    "text": "build something new and then you need to",
    "start": "1355200",
    "end": "1356480"
  },
  {
    "text": "migrate the old thing to this new thing",
    "start": "1356480",
    "end": "1358480"
  },
  {
    "text": "and I think it's quite challenging",
    "start": "1358480",
    "end": "1360000"
  },
  {
    "text": "especially if you have thousands of",
    "start": "1360000",
    "end": "1361919"
  },
  {
    "text": "customers each with their own",
    "start": "1361919",
    "end": "1363280"
  },
  {
    "text": "requirements and you need to make sure",
    "start": "1363280",
    "end": "1364960"
  },
  {
    "text": "that for example if they don't want to",
    "start": "1364960",
    "end": "1366480"
  },
  {
    "text": "migrate on a particular date even if",
    "start": "1366480",
    "end": "1368559"
  },
  {
    "text": "it's a live migration like we had",
    "start": "1368559",
    "end": "1370320"
  },
  {
    "text": "there's still concerns there's your",
    "start": "1370320",
    "end": "1371760"
  },
  {
    "text": "product reputation what if something",
    "start": "1371760",
    "end": "1373360"
  },
  {
    "text": "goes wrong so just leaving on that",
    "start": "1373360",
    "end": "1375880"
  },
  {
    "text": "thought so thank you uh if you want to",
    "start": "1375880",
    "end": "1379280"
  },
  {
    "text": "chat to us we've got a booth you can",
    "start": "1379280",
    "end": "1380880"
  },
  {
    "text": "come over um if If you're interested in",
    "start": "1380880",
    "end": "1383440"
  },
  {
    "text": "learning more we also have a blog post",
    "start": "1383440",
    "end": "1385039"
  },
  {
    "text": "and and we're hiring",
    "start": "1385039",
    "end": "1388799"
  }
]