[
  {
    "text": "hello everybody uh my name is Ryan Drew",
    "start": "80",
    "end": "3919"
  },
  {
    "text": "and if you're here then be prepared to",
    "start": "3919",
    "end": "5920"
  },
  {
    "text": "talk about IPC for a long time uh",
    "start": "5920",
    "end": "8599"
  },
  {
    "text": "because we're going to get in the weeds",
    "start": "8599",
    "end": "9639"
  },
  {
    "text": "here um so thanks for being here I hope",
    "start": "9639",
    "end": "12639"
  },
  {
    "text": "everyone's enjoying their day today so",
    "start": "12639",
    "end": "14839"
  },
  {
    "text": "far um let's jump into",
    "start": "14839",
    "end": "17640"
  },
  {
    "text": "it um well actually okay before we jump",
    "start": "17640",
    "end": "20000"
  },
  {
    "text": "into it I do want to give a huge shout",
    "start": "20000",
    "end": "21359"
  },
  {
    "text": "out to all these people on this slide",
    "start": "21359",
    "end": "23080"
  },
  {
    "text": "here um I'm really excited to be here",
    "start": "23080",
    "end": "25840"
  },
  {
    "text": "because this has been a passion project",
    "start": "25840",
    "end": "27240"
  },
  {
    "text": "for about two years now um and at some",
    "start": "27240",
    "end": "30439"
  },
  {
    "text": "point whether they were remember it or",
    "start": "30439",
    "end": "31599"
  },
  {
    "text": "not each one of these people has",
    "start": "31599",
    "end": "32758"
  },
  {
    "text": "provided some sort of advice or",
    "start": "32759",
    "end": "34440"
  },
  {
    "text": "mentorship um along the lines of this",
    "start": "34440",
    "end": "36840"
  },
  {
    "text": "project so wouldn't be able to do",
    "start": "36840",
    "end": "38399"
  },
  {
    "text": "without them so a huge shout out to them",
    "start": "38399",
    "end": "40200"
  },
  {
    "text": "um and also thank you to my amazing wife",
    "start": "40200",
    "end": "43200"
  },
  {
    "text": "uh who has listened to me talk about IPC",
    "start": "43200",
    "end": "44879"
  },
  {
    "text": "non-stop um and it's not great dinner",
    "start": "44879",
    "end": "47360"
  },
  {
    "text": "talk so thank",
    "start": "47360",
    "end": "50360"
  },
  {
    "text": "you um okay so just a quick Icebreaker",
    "start": "50440",
    "end": "53840"
  },
  {
    "text": "uh a little bit about me I've been at I",
    "start": "53840",
    "end": "55239"
  },
  {
    "text": "surveillant doing performance and",
    "start": "55239",
    "end": "56359"
  },
  {
    "text": "scalability for about two and a half",
    "start": "56359",
    "end": "58160"
  },
  {
    "text": "years now um I'm out in Boulder Colorado",
    "start": "58160",
    "end": "61359"
  },
  {
    "text": "so pretty close to here and I love to",
    "start": "61359",
    "end": "63039"
  },
  {
    "text": "rock climb and and cook in my free time",
    "start": "63039",
    "end": "65640"
  },
  {
    "text": "um and these are my cats this is Kenzie",
    "start": "65640",
    "end": "67400"
  },
  {
    "text": "and Dove um at one point during an",
    "start": "67400",
    "end": "69880"
  },
  {
    "text": "offsite I actually gave a presentation",
    "start": "69880",
    "end": "71400"
  },
  {
    "text": "about them uh which was a ton of fun if",
    "start": "71400",
    "end": "73520"
  },
  {
    "text": "you ever get the opportunity would",
    "start": "73520",
    "end": "74680"
  },
  {
    "text": "highly recommend it um we got some other",
    "start": "74680",
    "end": "77159"
  },
  {
    "text": "folks to show their pets off too it was",
    "start": "77159",
    "end": "78680"
  },
  {
    "text": "a good",
    "start": "78680",
    "end": "79640"
  },
  {
    "text": "time um all right so what are we doing",
    "start": "79640",
    "end": "82000"
  },
  {
    "text": "here today so we're going to talk about",
    "start": "82000",
    "end": "84000"
  },
  {
    "text": "one of ipc's major bottlenecks um and",
    "start": "84000",
    "end": "86960"
  },
  {
    "text": "then go into a potential approach for",
    "start": "86960",
    "end": "89000"
  },
  {
    "text": "how we can fix it",
    "start": "89000",
    "end": "90560"
  },
  {
    "text": "um this is mainly like a starting point",
    "start": "90560",
    "end": "92079"
  },
  {
    "text": "for the approach just laying the groundw",
    "start": "92079",
    "end": "94200"
  },
  {
    "text": "um we'll talk about some benchmarks to",
    "start": "94200",
    "end": "95799"
  },
  {
    "text": "kind of go into how it performs some",
    "start": "95799",
    "end": "98159"
  },
  {
    "text": "takeaways for the future and then kind",
    "start": "98159",
    "end": "100079"
  },
  {
    "text": "of the next steps uh after",
    "start": "100079",
    "end": "102640"
  },
  {
    "text": "today so let's get into the bottleneck",
    "start": "102640",
    "end": "105240"
  },
  {
    "text": "um this binck centers around receive s",
    "start": "105240",
    "end": "107840"
  },
  {
    "text": "side scaling so let's talk about some",
    "start": "107840",
    "end": "110000"
  },
  {
    "text": "background context before we get into",
    "start": "110000",
    "end": "111439"
  },
  {
    "text": "ipx specifically receive side scaling or",
    "start": "111439",
    "end": "114159"
  },
  {
    "text": "RSS it's commonly referred to is",
    "start": "114159",
    "end": "116560"
  },
  {
    "text": "responsible for steering packets to CPUs",
    "start": "116560",
    "end": "120079"
  },
  {
    "text": "on the receiving end um so its job is",
    "start": "120079",
    "end": "123240"
  },
  {
    "text": "anytime you get a client pod that sends",
    "start": "123240",
    "end": "124880"
  },
  {
    "text": "out traffic from a node um receipt side",
    "start": "124880",
    "end": "127479"
  },
  {
    "text": "steering in the Nick is what paraly",
    "start": "127479",
    "end": "130879"
  },
  {
    "text": "paralyzes um the processing of those",
    "start": "130879",
    "end": "132879"
  },
  {
    "text": "packets on your server node um so this",
    "start": "132879",
    "end": "135720"
  },
  {
    "text": "is the example I'm going to use",
    "start": "135720",
    "end": "136640"
  },
  {
    "text": "throughout the presentation just um",
    "start": "136640",
    "end": "138920"
  },
  {
    "text": "couple of client pods on node a",
    "start": "138920",
    "end": "140280"
  },
  {
    "text": "connecting to an nin's pod on node",
    "start": "140280",
    "end": "143080"
  },
  {
    "text": "B um and so the method that RSS uses to",
    "start": "143080",
    "end": "146239"
  },
  {
    "text": "do this um has a couple of steps so",
    "start": "146239",
    "end": "149280"
  },
  {
    "text": "first what it's going to do is it's",
    "start": "149280",
    "end": "150760"
  },
  {
    "text": "going to look at the packet metadata",
    "start": "150760",
    "end": "152280"
  },
  {
    "text": "that it's receiving this is anything in",
    "start": "152280",
    "end": "154519"
  },
  {
    "text": "the IP header even the MAC address UDP",
    "start": "154519",
    "end": "157400"
  },
  {
    "text": "header TCP header um anything that Nick",
    "start": "157400",
    "end": "160200"
  },
  {
    "text": "supports and different vendors support",
    "start": "160200",
    "end": "161560"
  },
  {
    "text": "different things it's going to take that",
    "start": "161560",
    "end": "163360"
  },
  {
    "text": "metadata and hash it um don't you",
    "start": "163360",
    "end": "166200"
  },
  {
    "text": "remember this the common hash that is",
    "start": "166200",
    "end": "167360"
  },
  {
    "text": "used as the topet hash so if you're",
    "start": "167360",
    "end": "168720"
  },
  {
    "text": "curious that's a good keyword to Google",
    "start": "168720",
    "end": "171040"
  },
  {
    "text": "um and then as soon as that hash is",
    "start": "171040",
    "end": "173040"
  },
  {
    "text": "determined uh it's going to be looked up",
    "start": "173040",
    "end": "174959"
  },
  {
    "text": "in an indirection table and this Maps",
    "start": "174959",
    "end": "177440"
  },
  {
    "text": "hash values to different cues in the",
    "start": "177440",
    "end": "179319"
  },
  {
    "text": "nick",
    "start": "179319",
    "end": "180440"
  },
  {
    "text": "um and so then we get our receive Q",
    "start": "180440",
    "end": "182480"
  },
  {
    "text": "index and then the CPU for that que",
    "start": "182480",
    "end": "185840"
  },
  {
    "text": "pulls it pulls the packet in and then",
    "start": "185840",
    "end": "188120"
  },
  {
    "text": "sends it up to user space to the Pod um",
    "start": "188120",
    "end": "191599"
  },
  {
    "text": "so this is really complicated just to",
    "start": "191599",
    "end": "192920"
  },
  {
    "text": "steer packets why couldn't we just round",
    "start": "192920",
    "end": "194959"
  },
  {
    "text": "robin packets um there are a couple of",
    "start": "194959",
    "end": "197879"
  },
  {
    "text": "reasons for this um the way that I like",
    "start": "197879",
    "end": "200599"
  },
  {
    "text": "to think about it though is with this",
    "start": "200599",
    "end": "202080"
  },
  {
    "text": "example um so let's say that we have our",
    "start": "202080",
    "end": "205239"
  },
  {
    "text": "client pod that sends out four packets",
    "start": "205239",
    "end": "207040"
  },
  {
    "text": "in quick sucession and we round robin so",
    "start": "207040",
    "end": "209319"
  },
  {
    "text": "they alter between cpu1 and",
    "start": "209319",
    "end": "212000"
  },
  {
    "text": "cpu2 um and let's say also in this",
    "start": "212000",
    "end": "214239"
  },
  {
    "text": "example that cpu2 has some stuff",
    "start": "214239",
    "end": "216680"
  },
  {
    "text": "scheduled on it so it's a little bit",
    "start": "216680",
    "end": "218360"
  },
  {
    "text": "slower to do some packet",
    "start": "218360",
    "end": "220120"
  },
  {
    "text": "processing um in this case packets 2 and",
    "start": "220120",
    "end": "223480"
  },
  {
    "text": "four are going to be finished and ready",
    "start": "223480",
    "end": "225480"
  },
  {
    "text": "to go to user space um after packets one",
    "start": "225480",
    "end": "228400"
  },
  {
    "text": "and three so packets will be ready for",
    "start": "228400",
    "end": "230720"
  },
  {
    "text": "user space out of order um which means",
    "start": "230720",
    "end": "233599"
  },
  {
    "text": "that the colel has to do extra work to",
    "start": "233599",
    "end": "235280"
  },
  {
    "text": "make sure that the packets are delivered",
    "start": "235280",
    "end": "236799"
  },
  {
    "text": "to user space in order um by doing",
    "start": "236799",
    "end": "239000"
  },
  {
    "text": "reordering so the K will actually hold",
    "start": "239000",
    "end": "240799"
  },
  {
    "text": "on to packet number four until two and",
    "start": "240799",
    "end": "242680"
  },
  {
    "text": "three come in and then send four on its",
    "start": "242680",
    "end": "244560"
  },
  {
    "text": "way and this is just bad for any sort of",
    "start": "244560",
    "end": "246519"
  },
  {
    "text": "session type protocol performance um so",
    "start": "246519",
    "end": "249840"
  },
  {
    "text": "Nicks prefer to use RSS instead of round",
    "start": "249840",
    "end": "251720"
  },
  {
    "text": "robin just because TCP is so popular um",
    "start": "251720",
    "end": "255879"
  },
  {
    "text": "but for UDP work closes it is important",
    "start": "255879",
    "end": "258560"
  },
  {
    "text": "but that's why um we use hashing for",
    "start": "258560",
    "end": "261440"
  },
  {
    "text": "RSS um so now let's pivot and let's go",
    "start": "261440",
    "end": "264759"
  },
  {
    "text": "into ipx stuff and we'll kind of connect",
    "start": "264759",
    "end": "266520"
  },
  {
    "text": "the two um so first in background cam",
    "start": "266520",
    "end": "269840"
  },
  {
    "text": "has an encryption mode where you can",
    "start": "269840",
    "end": "272120"
  },
  {
    "text": "enable transparent encryption through",
    "start": "272120",
    "end": "274400"
  },
  {
    "text": "IPC um ceing will set up IPC tunnels",
    "start": "274400",
    "end": "277440"
  },
  {
    "text": "between nodes and then any pod traffic",
    "start": "277440",
    "end": "279520"
  },
  {
    "text": "that leaves a node will go through the",
    "start": "279520",
    "end": "281160"
  },
  {
    "text": "tunnel to the node that it needs to go",
    "start": "281160",
    "end": "283039"
  },
  {
    "text": "to and then celum will take that packet",
    "start": "283039",
    "end": "285320"
  },
  {
    "text": "on the receiving end unencrypt it and",
    "start": "285320",
    "end": "287199"
  },
  {
    "text": "send it off to your pod um and it does",
    "start": "287199",
    "end": "289800"
  },
  {
    "text": "all this you know for you which is",
    "start": "289800",
    "end": "291360"
  },
  {
    "text": "really nice um but the key here is that",
    "start": "291360",
    "end": "294800"
  },
  {
    "text": "actually let me go back the key here is",
    "start": "294800",
    "end": "296400"
  },
  {
    "text": "that these tunnels are established node",
    "start": "296400",
    "end": "297960"
  },
  {
    "text": "to node and they're not established pod",
    "start": "297960",
    "end": "299919"
  },
  {
    "text": "to pod um and so what happens is that",
    "start": "299919",
    "end": "302400"
  },
  {
    "text": "any pod traffic you know here in yellow",
    "start": "302400",
    "end": "305320"
  },
  {
    "text": "up here um is going to get encrypted and",
    "start": "305320",
    "end": "308400"
  },
  {
    "text": "then put inside of an ESP packet which",
    "start": "308400",
    "end": "310360"
  },
  {
    "text": "is the underlying protocol that IPC uses",
    "start": "310360",
    "end": "313479"
  },
  {
    "text": "um and all of that metadata is going to",
    "start": "313479",
    "end": "315360"
  },
  {
    "text": "become invisible it's going to be",
    "start": "315360",
    "end": "317000"
  },
  {
    "text": "encrypted so RSS can't use it so the",
    "start": "317000",
    "end": "319479"
  },
  {
    "text": "only metadata that we get is the",
    "start": "319479",
    "end": "322000"
  },
  {
    "text": "protocol and the source and IP anything",
    "start": "322000",
    "end": "324160"
  },
  {
    "text": "in the IP header um and since these",
    "start": "324160",
    "end": "326759"
  },
  {
    "text": "tunnels are established node to node",
    "start": "326759",
    "end": "328600"
  },
  {
    "text": "we're always going to get the same hash",
    "start": "328600",
    "end": "330639"
  },
  {
    "text": "for RSS regardless of what uh traffic is",
    "start": "330639",
    "end": "333680"
  },
  {
    "text": "flowing through the tunnel so all of",
    "start": "333680",
    "end": "335840"
  },
  {
    "text": "your IPC traffic all that traffic on the",
    "start": "335840",
    "end": "337800"
  },
  {
    "text": "tunnel is going to go right to one CPU",
    "start": "337800",
    "end": "340400"
  },
  {
    "text": "um because it can't differentiate",
    "start": "340400",
    "end": "341680"
  },
  {
    "text": "between flows traveling inside the",
    "start": "341680",
    "end": "343400"
  },
  {
    "text": "tunnel um and so this can cause huge",
    "start": "343400",
    "end": "345800"
  },
  {
    "text": "performance degradations up to you know",
    "start": "345800",
    "end": "347720"
  },
  {
    "text": "an order of magnitude of uh like 5x um",
    "start": "347720",
    "end": "350880"
  },
  {
    "text": "which isn't great um so what can we do",
    "start": "350880",
    "end": "354960"
  },
  {
    "text": "about it so I was pretty new to ebpf",
    "start": "354960",
    "end": "358280"
  },
  {
    "text": "when I learned about this so I just",
    "start": "358280",
    "end": "359360"
  },
  {
    "text": "Googled",
    "start": "359360",
    "end": "360240"
  },
  {
    "text": "ebpf RSS tutorial um which worked out",
    "start": "360240",
    "end": "363720"
  },
  {
    "text": "great it landed me on this kernel",
    "start": "363720",
    "end": "365280"
  },
  {
    "text": "documentation page for What's called the",
    "start": "365280",
    "end": "367520"
  },
  {
    "text": "xtp CPU map and this map was built",
    "start": "367520",
    "end": "371199"
  },
  {
    "text": "specifically for software based RSS",
    "start": "371199",
    "end": "373759"
  },
  {
    "text": "which is also known as receive packet",
    "start": "373759",
    "end": "375240"
  },
  {
    "text": "steering um it is RSS that's performed",
    "start": "375240",
    "end": "379039"
  },
  {
    "text": "uh well by software um so inside of an",
    "start": "379039",
    "end": "381479"
  },
  {
    "text": "xtp program and we can use this helper",
    "start": "381479",
    "end": "383759"
  },
  {
    "text": "called BPF redirect map um to",
    "start": "383759",
    "end": "386319"
  },
  {
    "text": "essentially steer a packet to any CPU",
    "start": "386319",
    "end": "388080"
  },
  {
    "text": "that we want when it's received",
    "start": "388080",
    "end": "390280"
  },
  {
    "text": "um so I was like okay this is great",
    "start": "390280",
    "end": "391720"
  },
  {
    "text": "let's just do that um why not but there",
    "start": "391720",
    "end": "394919"
  },
  {
    "text": "were three problems that we had to solve",
    "start": "394919",
    "end": "397080"
  },
  {
    "text": "uh before we could move ahead and move",
    "start": "397080",
    "end": "398960"
  },
  {
    "text": "forward with this um we needed to figure",
    "start": "398960",
    "end": "401199"
  },
  {
    "text": "out how we could actually differentiate",
    "start": "401199",
    "end": "402800"
  },
  {
    "text": "between flows within a tunnel like what",
    "start": "402800",
    "end": "405080"
  },
  {
    "text": "that metadata that we want to use is um",
    "start": "405080",
    "end": "407759"
  },
  {
    "text": "we need to figure out how to transfer",
    "start": "407759",
    "end": "409080"
  },
  {
    "text": "that metadata from the sender to the",
    "start": "409080",
    "end": "411000"
  },
  {
    "text": "receiver so that way the receiver can",
    "start": "411000",
    "end": "412639"
  },
  {
    "text": "use it to do RSS and then um when we",
    "start": "412639",
    "end": "416000"
  },
  {
    "text": "have that metadata on the receiver we",
    "start": "416000",
    "end": "417919"
  },
  {
    "text": "need to figure out how we can actually",
    "start": "417919",
    "end": "419199"
  },
  {
    "text": "do that steering and what that's going",
    "start": "419199",
    "end": "420840"
  },
  {
    "text": "to look like so let's start with problem",
    "start": "420840",
    "end": "423560"
  },
  {
    "text": "one um so this is just like a helpful",
    "start": "423560",
    "end": "426039"
  },
  {
    "text": "graphic that um to visualize it we're",
    "start": "426039",
    "end": "428919"
  },
  {
    "text": "trying to solve for this context here",
    "start": "428919",
    "end": "431000"
  },
  {
    "text": "down here um because the inner packet is",
    "start": "431000",
    "end": "434440"
  },
  {
    "text": "from the Pod is going to go to the xfrm",
    "start": "434440",
    "end": "436400"
  },
  {
    "text": "stack in the kernel to be encrypted and",
    "start": "436400",
    "end": "438199"
  },
  {
    "text": "turned into an ESP packet and then we",
    "start": "438199",
    "end": "440120"
  },
  {
    "text": "need some context that we can combine in",
    "start": "440120",
    "end": "442400"
  },
  {
    "text": "that packet to make an enriched ESP",
    "start": "442400",
    "end": "444039"
  },
  {
    "text": "packet we can send off um so kind of",
    "start": "444039",
    "end": "447840"
  },
  {
    "text": "digging down this is a flame graph",
    "start": "447840",
    "end": "450160"
  },
  {
    "text": "um that was taken on a node with a",
    "start": "450160",
    "end": "452560"
  },
  {
    "text": "client that was sending traffic to",
    "start": "452560",
    "end": "454319"
  },
  {
    "text": "another node in a cluster with celium",
    "start": "454319",
    "end": "456560"
  },
  {
    "text": "IPC encryption enabled um and this is",
    "start": "456560",
    "end": "459400"
  },
  {
    "text": "really hard to read so let's kind of",
    "start": "459400",
    "end": "461440"
  },
  {
    "text": "highlight the important bits um there",
    "start": "461440",
    "end": "463680"
  },
  {
    "text": "are two functions that are important",
    "start": "463680",
    "end": "465520"
  },
  {
    "text": "here IP output and exit foram output um",
    "start": "465520",
    "end": "470159"
  },
  {
    "text": "the the Linux networking stack is super",
    "start": "470159",
    "end": "472240"
  },
  {
    "text": "complex so these functions do a lot of",
    "start": "472240",
    "end": "473759"
  },
  {
    "text": "different things the highle idea is that",
    "start": "473759",
    "end": "476720"
  },
  {
    "text": "IP output is called whenever we finish",
    "start": "476720",
    "end": "478919"
  },
  {
    "text": "creating an IP header for a packet and",
    "start": "478919",
    "end": "481080"
  },
  {
    "text": "we're sending it up the stack on its way",
    "start": "481080",
    "end": "482560"
  },
  {
    "text": "to do whatever needs to happen next um",
    "start": "482560",
    "end": "485400"
  },
  {
    "text": "and in this context xfrm output is",
    "start": "485400",
    "end": "488280"
  },
  {
    "text": "called whenever we're doing the same",
    "start": "488280",
    "end": "489720"
  },
  {
    "text": "thing but for an ESP packet um actually",
    "start": "489720",
    "end": "493159"
  },
  {
    "text": "excuse me let me back up not the same",
    "start": "493159",
    "end": "494800"
  },
  {
    "text": "thing for an ESP packet exfm output is",
    "start": "494800",
    "end": "497159"
  },
  {
    "text": "used when we are ready to create an ESP",
    "start": "497159",
    "end": "499599"
  },
  {
    "text": "packet um so we'll get the IP packet",
    "start": "499599",
    "end": "502599"
  },
  {
    "text": "from IP output we'll send it to xfrm",
    "start": "502599",
    "end": "504879"
  },
  {
    "text": "Output which create our ESP packet and",
    "start": "504879",
    "end": "507080"
  },
  {
    "text": "then we'll send it back to IP output to",
    "start": "507080",
    "end": "508840"
  },
  {
    "text": "add the IP in front of the es packet so",
    "start": "508840",
    "end": "511120"
  },
  {
    "text": "we can send it",
    "start": "511120",
    "end": "512279"
  },
  {
    "text": "out um and so using a little bit of BPF",
    "start": "512279",
    "end": "515479"
  },
  {
    "text": "Trace we can actually inspect the packet",
    "start": "515479",
    "end": "517800"
  },
  {
    "text": "at these different intervals um in this",
    "start": "517800",
    "end": "520120"
  },
  {
    "text": "in the kernel so this BPF Trace script",
    "start": "520120",
    "end": "522240"
  },
  {
    "text": "essentially says okay before you execute",
    "start": "522240",
    "end": "524480"
  },
  {
    "text": "IP output and next firm output show me",
    "start": "524480",
    "end": "527120"
  },
  {
    "text": "some packet metadata like the source and",
    "start": "527120",
    "end": "528880"
  },
  {
    "text": "the destination IP the protocol of the",
    "start": "528880",
    "end": "531399"
  },
  {
    "text": "packet um and show me whatever hash you",
    "start": "531399",
    "end": "533959"
  },
  {
    "text": "currently have for that packet that's",
    "start": "533959",
    "end": "535320"
  },
  {
    "text": "stored in the SKB um and just for",
    "start": "535320",
    "end": "538200"
  },
  {
    "text": "context the SKB is is the Colonel's",
    "start": "538200",
    "end": "540160"
  },
  {
    "text": "internal representation of a packet and",
    "start": "540160",
    "end": "542160"
  },
  {
    "text": "is passed along different functions as",
    "start": "542160",
    "end": "543800"
  },
  {
    "text": "that is constructed um and the hash",
    "start": "543800",
    "end": "546200"
  },
  {
    "text": "attribute is calculated for various",
    "start": "546200",
    "end": "548120"
  },
  {
    "text": "different um subsystems in there um so",
    "start": "548120",
    "end": "552279"
  },
  {
    "text": "taking a look uh this is some output",
    "start": "552279",
    "end": "554440"
  },
  {
    "text": "that we get on a transmit side um this",
    "start": "554440",
    "end": "558000"
  },
  {
    "text": "is red top to bottom um so zooming in to",
    "start": "558000",
    "end": "560720"
  },
  {
    "text": "make this a little easier um we see",
    "start": "560720",
    "end": "562680"
  },
  {
    "text": "something really cool so we see it",
    "start": "562680",
    "end": "564519"
  },
  {
    "text": "called IP output with a UDP packet um so",
    "start": "564519",
    "end": "567519"
  },
  {
    "text": "we're saying okay we have a UDP packet",
    "start": "567519",
    "end": "569079"
  },
  {
    "text": "that's being sent out and we need the IP",
    "start": "569079",
    "end": "571040"
  },
  {
    "text": "header um let's keep going and then we",
    "start": "571040",
    "end": "574160"
  },
  {
    "text": "see a called XM output with that UDP",
    "start": "574160",
    "end": "576560"
  },
  {
    "text": "packet so the colonel is going to take",
    "start": "576560",
    "end": "578279"
  },
  {
    "text": "that packet put an ESP header on it and",
    "start": "578279",
    "end": "580240"
  },
  {
    "text": "then send it on its way and then we see",
    "start": "580240",
    "end": "582200"
  },
  {
    "text": "that last call to IP output where we add",
    "start": "582200",
    "end": "584120"
  },
  {
    "text": "the IP header onto the ESB packet and",
    "start": "584120",
    "end": "586440"
  },
  {
    "text": "the key thing here is that the hashes",
    "start": "586440",
    "end": "588279"
  },
  {
    "text": "that stored in the SKB is the same for",
    "start": "588279",
    "end": "590399"
  },
  {
    "text": "all of these so even though on the last",
    "start": "590399",
    "end": "593440"
  },
  {
    "text": "called IP output we're dealing with an",
    "start": "593440",
    "end": "595399"
  },
  {
    "text": "entirely different packet that's an ESP",
    "start": "595399",
    "end": "597680"
  },
  {
    "text": "packet with the node source destination",
    "start": "597680",
    "end": "599920"
  },
  {
    "text": "IP addresses we still have that inner",
    "start": "599920",
    "end": "601839"
  },
  {
    "text": "packet hash that we can reference um so",
    "start": "601839",
    "end": "605120"
  },
  {
    "text": "this is great we can use that as our",
    "start": "605120",
    "end": "606959"
  },
  {
    "text": "context piece so let's take that hash",
    "start": "606959",
    "end": "609600"
  },
  {
    "text": "and put it into the ESP packet and send",
    "start": "609600",
    "end": "611720"
  },
  {
    "text": "it on its way so we can do",
    "start": "611720",
    "end": "613519"
  },
  {
    "text": "RSS um so now we come to problem two",
    "start": "613519",
    "end": "616800"
  },
  {
    "text": "about where we put it um conveniently",
    "start": "616800",
    "end": "619399"
  },
  {
    "text": "inside the ESP header there's a field",
    "start": "619399",
    "end": "621320"
  },
  {
    "text": "called the security parameters index and",
    "start": "621320",
    "end": "623519"
  },
  {
    "text": "this is a critical field for ESP that",
    "start": "623519",
    "end": "625600"
  },
  {
    "text": "essentially um identifies an IPC tunnel",
    "start": "625600",
    "end": "628959"
  },
  {
    "text": "um and Associates a packet with a tunnel",
    "start": "628959",
    "end": "631279"
  },
  {
    "text": "but RFC 4301 describes it as arbitrary",
    "start": "631279",
    "end": "634920"
  },
  {
    "text": "um and 32 bits is huge the highest SPI",
    "start": "634920",
    "end": "637800"
  },
  {
    "text": "I've seen for celium is 10 and we can",
    "start": "637800",
    "end": "640440"
  },
  {
    "text": "support 4 billion with a 32-bit number",
    "start": "640440",
    "end": "643639"
  },
  {
    "text": "um so why don't we just borrow some bits",
    "start": "643639",
    "end": "645639"
  },
  {
    "text": "there so we'll reserve one bite for the",
    "start": "645639",
    "end": "647839"
  },
  {
    "text": "SBI and then we'll use three bytes for",
    "start": "647839",
    "end": "649959"
  },
  {
    "text": "the hash and we'll just kind of combine",
    "start": "649959",
    "end": "651399"
  },
  {
    "text": "it together um and we can use masking to",
    "start": "651399",
    "end": "653639"
  },
  {
    "text": "accomplish this uh and there we go so on",
    "start": "653639",
    "end": "657120"
  },
  {
    "text": "the sending side with the data pad",
    "start": "657120",
    "end": "659399"
  },
  {
    "text": "kind of visualized here our client pod",
    "start": "659399",
    "end": "661680"
  },
  {
    "text": "will enter into the ceum data path to",
    "start": "661680",
    "end": "664000"
  },
  {
    "text": "forward the packet to the xrm stack in",
    "start": "664000",
    "end": "665760"
  },
  {
    "text": "the kernel we'll hit BPF host. C in the",
    "start": "665760",
    "end": "668680"
  },
  {
    "text": "s data path where we can add that hash",
    "start": "668680",
    "end": "670480"
  },
  {
    "text": "in because at this point we have our ESP",
    "start": "670480",
    "end": "672680"
  },
  {
    "text": "packet and we have the inner packet hash",
    "start": "672680",
    "end": "675040"
  },
  {
    "text": "and then we'll send it on its way out to",
    "start": "675040",
    "end": "676600"
  },
  {
    "text": "the",
    "start": "676600",
    "end": "677480"
  },
  {
    "text": "server and this is what that looks like",
    "start": "677480",
    "end": "679560"
  },
  {
    "text": "in ebpf um it's just a you know couple",
    "start": "679560",
    "end": "683320"
  },
  {
    "text": "10 lines of code um you see the bottom",
    "start": "683320",
    "end": "685600"
  },
  {
    "text": "here is where we construct the SPI um so",
    "start": "685600",
    "end": "689360"
  },
  {
    "text": "so now on to problem three what do we do",
    "start": "689360",
    "end": "691399"
  },
  {
    "text": "on the receiving end um so the existing",
    "start": "691399",
    "end": "694120"
  },
  {
    "text": "data path Forum essentially looks like",
    "start": "694120",
    "end": "695880"
  },
  {
    "text": "this right where we take in the Nick and",
    "start": "695880",
    "end": "698880"
  },
  {
    "text": "the Nick is going to steer into a CPU on",
    "start": "698880",
    "end": "701360"
  },
  {
    "text": "the Node which is going to hit uh Cam's",
    "start": "701360",
    "end": "703839"
  },
  {
    "text": "data path go to the xfrm deack for",
    "start": "703839",
    "end": "706279"
  },
  {
    "text": "decryption and then it'll make its way",
    "start": "706279",
    "end": "708000"
  },
  {
    "text": "to the Pod um but let's add xtp in the",
    "start": "708000",
    "end": "711600"
  },
  {
    "text": "mix right because we're utilizing the",
    "start": "711600",
    "end": "713079"
  },
  {
    "text": "xtp helper and celium already has a BPF",
    "start": "713079",
    "end": "715959"
  },
  {
    "text": "xtp program that we can just enable and",
    "start": "715959",
    "end": "718320"
  },
  {
    "text": "load for us",
    "start": "718320",
    "end": "719839"
  },
  {
    "text": "um and so we'll do this so we'll have",
    "start": "719839",
    "end": "721880"
  },
  {
    "text": "the Nick perform RSS and get us into a",
    "start": "721880",
    "end": "724000"
  },
  {
    "text": "CPU on the Note initially and then we'll",
    "start": "724000",
    "end": "726279"
  },
  {
    "text": "trigger our HTP program and then inside",
    "start": "726279",
    "end": "729000"
  },
  {
    "text": "there we'll remove the hash from the SBI",
    "start": "729000",
    "end": "731320"
  },
  {
    "text": "restoring it to its correct value we'll",
    "start": "731320",
    "end": "733600"
  },
  {
    "text": "pick a CPU and perform the redirect",
    "start": "733600",
    "end": "735760"
  },
  {
    "text": "using it and then we'll send it on to",
    "start": "735760",
    "end": "738079"
  },
  {
    "text": "the um celium data path the rest of it",
    "start": "738079",
    "end": "741160"
  },
  {
    "text": "you know we'll hit BPF Network we'll go",
    "start": "741160",
    "end": "742720"
  },
  {
    "text": "into the stack you know Etc um and this",
    "start": "742720",
    "end": "746160"
  },
  {
    "text": "is what that looks like this is the",
    "start": "746160",
    "end": "747399"
  },
  {
    "text": "function that does that um again just a",
    "start": "747399",
    "end": "750000"
  },
  {
    "text": "couple 10 lines of code um this is",
    "start": "750000",
    "end": "752920"
  },
  {
    "text": "probably hard to read from the audience",
    "start": "752920",
    "end": "755000"
  },
  {
    "text": "but there's a the third block from the",
    "start": "755000",
    "end": "758040"
  },
  {
    "text": "top is where we actually perform the",
    "start": "758040",
    "end": "759560"
  },
  {
    "text": "critical part of resetting the SBI and",
    "start": "759560",
    "end": "761800"
  },
  {
    "text": "picking the CPU um and there there's a",
    "start": "761800",
    "end": "764320"
  },
  {
    "text": "link to this PR at the end as well um in",
    "start": "764320",
    "end": "767079"
  },
  {
    "text": "case you're",
    "start": "767079",
    "end": "768040"
  },
  {
    "text": "interested so with it done let's",
    "start": "768040",
    "end": "770480"
  },
  {
    "text": "Benchmark it and see what happens so I",
    "start": "770480",
    "end": "772279"
  },
  {
    "text": "set up a a three node equinex metal",
    "start": "772279",
    "end": "774320"
  },
  {
    "text": "cluster uh we had one control plane node",
    "start": "774320",
    "end": "776399"
  },
  {
    "text": "and two worker nodes the nodes had eight",
    "start": "776399",
    "end": "778560"
  },
  {
    "text": "cores and a 25 gbit per second Nick um",
    "start": "778560",
    "end": "781399"
  },
  {
    "text": "and then I did some net perf pod tood",
    "start": "781399",
    "end": "782880"
  },
  {
    "text": "tests so a stream test a request",
    "start": "782880",
    "end": "785120"
  },
  {
    "text": "response test and a connect request",
    "start": "785120",
    "end": "787120"
  },
  {
    "text": "response test um and just if you don't",
    "start": "787120",
    "end": "789480"
  },
  {
    "text": "know uh a stream test tries to send as",
    "start": "789480",
    "end": "791279"
  },
  {
    "text": "much data through a connection as",
    "start": "791279",
    "end": "792600"
  },
  {
    "text": "possible a request response test tries",
    "start": "792600",
    "end": "794800"
  },
  {
    "text": "to do a back and forth um request and",
    "start": "794800",
    "end": "797120"
  },
  {
    "text": "then response and a connect request",
    "start": "797120",
    "end": "799440"
  },
  {
    "text": "response is the same thing but we set up",
    "start": "799440",
    "end": "801480"
  },
  {
    "text": "a new connection between the client",
    "start": "801480",
    "end": "803399"
  },
  {
    "text": "server every",
    "start": "803399",
    "end": "804639"
  },
  {
    "text": "time um and then I I executed this with",
    "start": "804639",
    "end": "808160"
  },
  {
    "text": "uh 1 through 16 CLI clients to see how",
    "start": "808160",
    "end": "810199"
  },
  {
    "text": "it would scale and here's what we get um",
    "start": "810199",
    "end": "813360"
  },
  {
    "text": "so for the stream test we can see that",
    "start": "813360",
    "end": "815680"
  },
  {
    "text": "our Baseline up top is celium configured",
    "start": "815680",
    "end": "818440"
  },
  {
    "text": "without any encryption down on the",
    "start": "818440",
    "end": "820399"
  },
  {
    "text": "bottom we have IPC wire guard configured",
    "start": "820399",
    "end": "823199"
  },
  {
    "text": "by celium and then that line up the",
    "start": "823199",
    "end": "825360"
  },
  {
    "text": "middle is with receipt side scaling the",
    "start": "825360",
    "end": "827519"
  },
  {
    "text": "one that we just implemented so as the",
    "start": "827519",
    "end": "829600"
  },
  {
    "text": "number of of clients increases our",
    "start": "829600",
    "end": "831759"
  },
  {
    "text": "throughput increases as well um because",
    "start": "831759",
    "end": "834240"
  },
  {
    "text": "we're able to utilize more CPUs to",
    "start": "834240",
    "end": "836639"
  },
  {
    "text": "process uh more flows",
    "start": "836639",
    "end": "839600"
  },
  {
    "text": "um and this is where the 400% comes from",
    "start": "839600",
    "end": "841880"
  },
  {
    "text": "the talk title at 16 cores we're getting",
    "start": "841880",
    "end": "844839"
  },
  {
    "text": "a throughput incre increase of",
    "start": "844839",
    "end": "847240"
  },
  {
    "text": "43% um which isn't bad compared to IPC",
    "start": "847240",
    "end": "850600"
  },
  {
    "text": "um I'm extremely happy with that uh with",
    "start": "850600",
    "end": "853160"
  },
  {
    "text": "wire guard it's a little bit less it's",
    "start": "853160",
    "end": "854480"
  },
  {
    "text": "like",
    "start": "854480",
    "end": "855440"
  },
  {
    "text": "289 um but that's just because wire",
    "start": "855440",
    "end": "857639"
  },
  {
    "text": "guard is more efficient at processing",
    "start": "857639",
    "end": "859360"
  },
  {
    "text": "packets anyway so its Baseline",
    "start": "859360",
    "end": "860720"
  },
  {
    "text": "throughput is a bit higher um but we",
    "start": "860720",
    "end": "862720"
  },
  {
    "text": "still get a scaling",
    "start": "862720",
    "end": "864680"
  },
  {
    "text": "effect this is the request response test",
    "start": "864680",
    "end": "867600"
  },
  {
    "text": "which is measuring latency",
    "start": "867600",
    "end": "869639"
  },
  {
    "text": "um and the cool part about this is that",
    "start": "869639",
    "end": "872120"
  },
  {
    "text": "um again IPC with RSS is performing",
    "start": "872120",
    "end": "875440"
  },
  {
    "text": "better than IPC without it and better",
    "start": "875440",
    "end": "877360"
  },
  {
    "text": "than wire guard which is really exciting",
    "start": "877360",
    "end": "879639"
  },
  {
    "text": "um I don't know what's going on at 16",
    "start": "879639",
    "end": "881320"
  },
  {
    "text": "clients with IPC here um that's",
    "start": "881320",
    "end": "883839"
  },
  {
    "text": "something that I want to investigate",
    "start": "883839",
    "end": "885040"
  },
  {
    "text": "it's kind of interesting it just kind of",
    "start": "885040",
    "end": "886519"
  },
  {
    "text": "drops down um but the big takeaway from",
    "start": "886519",
    "end": "890480"
  },
  {
    "text": "here is that uh the RSS IPS is",
    "start": "890480",
    "end": "892759"
  },
  {
    "text": "performing really well um for connect",
    "start": "892759",
    "end": "895480"
  },
  {
    "text": "request response we see a little bit of",
    "start": "895480",
    "end": "896680"
  },
  {
    "text": "a different story so this is the kind of",
    "start": "896680",
    "end": "898720"
  },
  {
    "text": "bench Mark that is going to be the",
    "start": "898720",
    "end": "899920"
  },
  {
    "text": "hardest on this implementation because",
    "start": "899920",
    "end": "902279"
  },
  {
    "text": "the steering doesn't do anything right",
    "start": "902279",
    "end": "904560"
  },
  {
    "text": "we're steering we open a connection we",
    "start": "904560",
    "end": "906680"
  },
  {
    "text": "steer the packet to a processor we you",
    "start": "906680",
    "end": "909079"
  },
  {
    "text": "know send the response back close the",
    "start": "909079",
    "end": "910600"
  },
  {
    "text": "connection and we do the same thing so",
    "start": "910600",
    "end": "911959"
  },
  {
    "text": "the steering is essentially just adding",
    "start": "911959",
    "end": "913519"
  },
  {
    "text": "overhead to the H to the whole thing um",
    "start": "913519",
    "end": "917000"
  },
  {
    "text": "but the cool part is that it doesn't",
    "start": "917000",
    "end": "918440"
  },
  {
    "text": "perform too much worse than IPC in",
    "start": "918440",
    "end": "920639"
  },
  {
    "text": "general there's this little Spike with",
    "start": "920639",
    "end": "922160"
  },
  {
    "text": "two clients that I want to look at um",
    "start": "922160",
    "end": "924920"
  },
  {
    "text": "but overall it's not as bad so it's not",
    "start": "924920",
    "end": "926800"
  },
  {
    "text": "like a huge latency increase after",
    "start": "926800",
    "end": "930240"
  },
  {
    "text": "it um and I use node exporter to connect",
    "start": "930240",
    "end": "933839"
  },
  {
    "text": "uh to collect some metrics during this",
    "start": "933839",
    "end": "935800"
  },
  {
    "text": "test and we can actually see this the",
    "start": "935800",
    "end": "937720"
  },
  {
    "text": "scaling effect in action so here's a CPU",
    "start": "937720",
    "end": "940560"
  },
  {
    "text": "usage for wire guard and IPC each one of",
    "start": "940560",
    "end": "942720"
  },
  {
    "text": "those little bumps in the graph is a",
    "start": "942720",
    "end": "944880"
  },
  {
    "text": "test um we started with two clients on",
    "start": "944880",
    "end": "947800"
  },
  {
    "text": "the left and we' had 16 on the",
    "start": "947800",
    "end": "950160"
  },
  {
    "text": "right with IPC we see that CP usage",
    "start": "950160",
    "end": "953319"
  },
  {
    "text": "increase over time so we're trading off",
    "start": "953319",
    "end": "955600"
  },
  {
    "text": "increased throughput for increased CPU",
    "start": "955600",
    "end": "957399"
  },
  {
    "text": "usage um it's really exciting that we",
    "start": "957399",
    "end": "959720"
  },
  {
    "text": "can see more CPUs getting involved as we",
    "start": "959720",
    "end": "961360"
  },
  {
    "text": "increase the number of clients and using",
    "start": "961360",
    "end": "963560"
  },
  {
    "text": "softnet we can even show what processors",
    "start": "963560",
    "end": "967079"
  },
  {
    "text": "what processors um are processing which",
    "start": "967079",
    "end": "970000"
  },
  {
    "text": "packets so with wire guard and IPC we",
    "start": "970000",
    "end": "972519"
  },
  {
    "text": "see one CPU that's",
    "start": "972519",
    "end": "974279"
  },
  {
    "text": "involved but with uh receive side",
    "start": "974279",
    "end": "977160"
  },
  {
    "text": "scaling we get kind of a pretty rainbow",
    "start": "977160",
    "end": "978839"
  },
  {
    "text": "here um so we can see that more",
    "start": "978839",
    "end": "981040"
  },
  {
    "text": "processes are getting involved if we",
    "start": "981040",
    "end": "983360"
  },
  {
    "text": "zoom in though this is something I",
    "start": "983360",
    "end": "984839"
  },
  {
    "text": "really want to point out um on the left",
    "start": "984839",
    "end": "987560"
  },
  {
    "text": "here is a test with two clients L and on",
    "start": "987560",
    "end": "989519"
  },
  {
    "text": "the right is a test with four on the",
    "start": "989519",
    "end": "991959"
  },
  {
    "text": "left the CPU usage per core is pretty",
    "start": "991959",
    "end": "994440"
  },
  {
    "text": "even but on the right there's one that",
    "start": "994440",
    "end": "996560"
  },
  {
    "text": "has extra utilization and this is",
    "start": "996560",
    "end": "999160"
  },
  {
    "text": "because the steering the way that we're",
    "start": "999160",
    "end": "1001560"
  },
  {
    "text": "doing it is we're taking the hash and",
    "start": "1001560",
    "end": "1003759"
  },
  {
    "text": "then we're modulus in it by the number",
    "start": "1003759",
    "end": "1006199"
  },
  {
    "text": "of CPUs on the Node and that works but",
    "start": "1006199",
    "end": "1008920"
  },
  {
    "text": "it's not perfect so some cores may get",
    "start": "1008920",
    "end": "1011720"
  },
  {
    "text": "extra clients um and as a result get",
    "start": "1011720",
    "end": "1014959"
  },
  {
    "text": "extra uh usage um so that's something",
    "start": "1014959",
    "end": "1017360"
  },
  {
    "text": "that I want to look into in the future",
    "start": "1017360",
    "end": "1019040"
  },
  {
    "text": "as an",
    "start": "1019040",
    "end": "1019959"
  },
  {
    "text": "improvement so a couple takeaways from",
    "start": "1019959",
    "end": "1022040"
  },
  {
    "text": "this experience um pros of this",
    "start": "1022040",
    "end": "1024880"
  },
  {
    "text": "implementation is that it's really fast",
    "start": "1024880",
    "end": "1027038"
  },
  {
    "text": "uh it's really simple and it works on",
    "start": "1027039",
    "end": "1028839"
  },
  {
    "text": "any kernel that has the xtp redirect",
    "start": "1028839",
    "end": "1030640"
  },
  {
    "text": "Handler so anything greater than 4 I15",
    "start": "1030640",
    "end": "1033400"
  },
  {
    "text": "um and the cool thing is that it can be",
    "start": "1033400",
    "end": "1034959"
  },
  {
    "text": "done outside of celium if you want uh",
    "start": "1034959",
    "end": "1036918"
  },
  {
    "text": "which I'll show here in a second um",
    "start": "1036919",
    "end": "1039438"
  },
  {
    "text": "drawbacks this approach so your Nick",
    "start": "1039439",
    "end": "1041720"
  },
  {
    "text": "driver has to support xtp in Native mode",
    "start": "1041720",
    "end": "1044360"
  },
  {
    "text": "because otherwise you're not going to",
    "start": "1044360",
    "end": "1045360"
  },
  {
    "text": "get that performance Improvement you're",
    "start": "1045360",
    "end": "1046520"
  },
  {
    "text": "just going to get extra overhead so this",
    "start": "1046520",
    "end": "1048360"
  },
  {
    "text": "means that if if you're running in gke",
    "start": "1048360",
    "end": "1050080"
  },
  {
    "text": "this can't be used um as an example um",
    "start": "1050080",
    "end": "1053559"
  },
  {
    "text": "and there's no guarantee on an even",
    "start": "1053559",
    "end": "1055640"
  },
  {
    "text": "distribution uh to CPUs so the benefits",
    "start": "1055640",
    "end": "1059120"
  },
  {
    "text": "of this may be workload dependent um and",
    "start": "1059120",
    "end": "1062280"
  },
  {
    "text": "then a couple of security concerns so",
    "start": "1062280",
    "end": "1064440"
  },
  {
    "text": "we're taking the inner packet hash in",
    "start": "1064440",
    "end": "1066520"
  },
  {
    "text": "our ESP packet and we're putting it into",
    "start": "1066520",
    "end": "1068720"
  },
  {
    "text": "the ESP packet itself so ESP packets are",
    "start": "1068720",
    "end": "1071919"
  },
  {
    "text": "no longer transparent to what flow",
    "start": "1071919",
    "end": "1073760"
  },
  {
    "text": "they're carrying and as a result this",
    "start": "1073760",
    "end": "1075559"
  },
  {
    "text": "could create a risk of a side Channel",
    "start": "1075559",
    "end": "1077159"
  },
  {
    "text": "attack um which which is something that",
    "start": "1077159",
    "end": "1079799"
  },
  {
    "text": "that may or not May or not may or may",
    "start": "1079799",
    "end": "1081600"
  },
  {
    "text": "not be an acceptable risk um",
    "start": "1081600",
    "end": "1084039"
  },
  {
    "text": "additionally there's a field in the ESP",
    "start": "1084039",
    "end": "1086120"
  },
  {
    "text": "packet called the Integrity check value",
    "start": "1086120",
    "end": "1087720"
  },
  {
    "text": "or the icv this is calculated using the",
    "start": "1087720",
    "end": "1090440"
  },
  {
    "text": "SBI and since we're changing the SBI",
    "start": "1090440",
    "end": "1093039"
  },
  {
    "text": "after the icv is calculated it becomes",
    "start": "1093039",
    "end": "1095559"
  },
  {
    "text": "incorrect on The Wire um so if you're",
    "start": "1095559",
    "end": "1098440"
  },
  {
    "text": "monitoring icv correctness then uh",
    "start": "1098440",
    "end": "1101039"
  },
  {
    "text": "you'll see some some mistakes um but",
    "start": "1101039",
    "end": "1104679"
  },
  {
    "text": "it's normal and then additionally um",
    "start": "1104679",
    "end": "1107679"
  },
  {
    "text": "this implementation still only uses one",
    "start": "1107679",
    "end": "1109919"
  },
  {
    "text": "rxq on the Nick because the Nick is",
    "start": "1109919",
    "end": "1113039"
  },
  {
    "text": "performing RSS to get us into xtp and",
    "start": "1113039",
    "end": "1116200"
  },
  {
    "text": "then xtp performs RPS to get us onto the",
    "start": "1116200",
    "end": "1118840"
  },
  {
    "text": "onto the core that actually does the ESP",
    "start": "1118840",
    "end": "1121039"
  },
  {
    "text": "packet decryption um and so there are",
    "start": "1121039",
    "end": "1123600"
  },
  {
    "text": "alternatives implementation that uh that",
    "start": "1123600",
    "end": "1126000"
  },
  {
    "text": "can be done in order to utilize all of",
    "start": "1126000",
    "end": "1127840"
  },
  {
    "text": "the cues on a Nick they were just more",
    "start": "1127840",
    "end": "1129600"
  },
  {
    "text": "complicated so we started with the easy",
    "start": "1129600",
    "end": "1132000"
  },
  {
    "text": "one um so if you want to do this outside",
    "start": "1132000",
    "end": "1134360"
  },
  {
    "text": "of celium it's the same architecture",
    "start": "1134360",
    "end": "1136080"
  },
  {
    "text": "right you have one program run on egress",
    "start": "1136080",
    "end": "1138360"
  },
  {
    "text": "that adds the hash in the SPI and then a",
    "start": "1138360",
    "end": "1140640"
  },
  {
    "text": "program on Ingress that removes it um",
    "start": "1140640",
    "end": "1143760"
  },
  {
    "text": "here's the entire ESS program it fits on",
    "start": "1143760",
    "end": "1145799"
  },
  {
    "text": "off slide um the red part is the the fun",
    "start": "1145799",
    "end": "1149159"
  },
  {
    "text": "part the rest of it is just boilerplate",
    "start": "1149159",
    "end": "1151120"
  },
  {
    "text": "to make the ebpf verifier happy um for",
    "start": "1151120",
    "end": "1154440"
  },
  {
    "text": "the ingrish side with xtp same thing it",
    "start": "1154440",
    "end": "1156480"
  },
  {
    "text": "fits on a slide it is two columns but",
    "start": "1156480",
    "end": "1158760"
  },
  {
    "text": "I'm counting it um in red again is the",
    "start": "1158760",
    "end": "1161679"
  },
  {
    "text": "fun part all the rest is just boiler",
    "start": "1161679",
    "end": "1163960"
  },
  {
    "text": "plate um and this is the implementation",
    "start": "1163960",
    "end": "1166120"
  },
  {
    "text": "that I use to test this out as a proofer",
    "start": "1166120",
    "end": "1167840"
  },
  {
    "text": "concept and seeing similar um throughput",
    "start": "1167840",
    "end": "1171480"
  },
  {
    "text": "improvements as well if not better so",
    "start": "1171480",
    "end": "1174440"
  },
  {
    "text": "moving forward um I'd like to get this",
    "start": "1174440",
    "end": "1176280"
  },
  {
    "text": "merged in celium uh there's currently a",
    "start": "1176280",
    "end": "1178600"
  },
  {
    "text": "PR up with the fall implementation",
    "start": "1178600",
    "end": "1180799"
  },
  {
    "text": "including all the user space side stuff",
    "start": "1180799",
    "end": "1182720"
  },
  {
    "text": "if you're curious um there are",
    "start": "1182720",
    "end": "1185080"
  },
  {
    "text": "additional some other maturity related",
    "start": "1185080",
    "end": "1187159"
  },
  {
    "text": "things that I like to do so for instance",
    "start": "1187159",
    "end": "1189159"
  },
  {
    "text": "this only supports native mode routing",
    "start": "1189159",
    "end": "1190880"
  },
  {
    "text": "it does not support tunnel mode um which",
    "start": "1190880",
    "end": "1193039"
  },
  {
    "text": "is kind of a bummer so that'd be a cool",
    "start": "1193039",
    "end": "1194440"
  },
  {
    "text": "thing to follow up on I to do some",
    "start": "1194440",
    "end": "1196240"
  },
  {
    "text": "metrics for observability purposes like",
    "start": "1196240",
    "end": "1198240"
  },
  {
    "text": "number of packets process per core um",
    "start": "1198240",
    "end": "1200559"
  },
  {
    "text": "rather than having to rely on node",
    "start": "1200559",
    "end": "1202200"
  },
  {
    "text": "exporter um and then addressing the cons",
    "start": "1202200",
    "end": "1205360"
  },
  {
    "text": "that we talked about earlier right so",
    "start": "1205360",
    "end": "1206679"
  },
  {
    "text": "for security is putting the hash in the",
    "start": "1206679",
    "end": "1208720"
  },
  {
    "text": "SBI acceptable or not and if it's not",
    "start": "1208720",
    "end": "1211240"
  },
  {
    "text": "then how can we address that for",
    "start": "1211240",
    "end": "1213000"
  },
  {
    "text": "performance maybe we could encapsulate",
    "start": "1213000",
    "end": "1215720"
  },
  {
    "text": "the ESP packet in a UDP packet and then",
    "start": "1215720",
    "end": "1218360"
  },
  {
    "text": "use the source Port as our",
    "start": "1218360",
    "end": "1220120"
  },
  {
    "text": "differentiator for flows um and that way",
    "start": "1220120",
    "end": "1223200"
  },
  {
    "text": "we could do RSS on the Nick and we may",
    "start": "1223200",
    "end": "1224960"
  },
  {
    "text": "not even need the xtp program um but",
    "start": "1224960",
    "end": "1227480"
  },
  {
    "text": "there are some trade-offs so it's it's",
    "start": "1227480",
    "end": "1228799"
  },
  {
    "text": "something that we'd have to test um and",
    "start": "1228799",
    "end": "1231120"
  },
  {
    "text": "additionally some like smartness making",
    "start": "1231120",
    "end": "1232760"
  },
  {
    "text": "it smarter so if we could steer packets",
    "start": "1232760",
    "end": "1234960"
  },
  {
    "text": "based off of CPU usage rather than just",
    "start": "1234960",
    "end": "1237200"
  },
  {
    "text": "randomly that would be really cool",
    "start": "1237200",
    "end": "1238919"
  },
  {
    "text": "because then we can be more efficient",
    "start": "1238919",
    "end": "1240039"
  },
  {
    "text": "with how we utilize",
    "start": "1240039",
    "end": "1241960"
  },
  {
    "text": "CPUs but that's all I have for you thank",
    "start": "1241960",
    "end": "1244280"
  },
  {
    "text": "you very much",
    "start": "1244280",
    "end": "1247159"
  }
]