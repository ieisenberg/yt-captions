[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "hi everyone my name is william morgan and i am one of the members of the linker d",
    "start": "80",
    "end": "6319"
  },
  {
    "text": "project uh and i am joined today uh by lynn sun",
    "start": "6319",
    "end": "12639"
  },
  {
    "text": "lin do you want to introduce yourself yeah hi everyone uh i'm lindsay i'm a",
    "start": "12639",
    "end": "18720"
  },
  {
    "text": "senior technical staff member with ibm i'm also a contributor on the istio project",
    "start": "18720",
    "end": "25680"
  },
  {
    "text": "great so this is going to be a historical talk because we're going to be splitting this talk down the middle",
    "start": "25680",
    "end": "31760"
  },
  {
    "text": "and we're going to talk about uh problems that are kind of independent of uh linkedin or",
    "start": "31760",
    "end": "38000"
  },
  {
    "text": "istio but apply to service the service mesh as a whole so the title of the talk is service mesh is still",
    "start": "38000",
    "end": "44399"
  },
  {
    "text": "hard all the things we did wrong uh and tales of woes so hopefully that entices you",
    "start": "44399",
    "end": "50000"
  },
  {
    "start": "49000",
    "end": "49000"
  },
  {
    "text": "um here i am here here lin is and uh i'm gonna split this talk uh i'm",
    "start": "50000",
    "end": "56559"
  },
  {
    "text": "gonna kind of take the first half and then i'll hand it over to lynn for the second half okay so the agenda is we're going to",
    "start": "56559",
    "end": "63039"
  },
  {
    "text": "talk about kind of the general concept of the trade-off that's involved",
    "start": "63039",
    "end": "68159"
  },
  {
    "text": "in in taking a service mesh and introducing it to your stack i'm going to talk about some terrible",
    "start": "68159",
    "end": "74400"
  },
  {
    "text": "things we did with linker d uh lynn is going to talk about some maybe terrible things",
    "start": "74400",
    "end": "80479"
  },
  {
    "text": "that happened in istio land we're going to try and describe lessons learned from those uh and and",
    "start": "80479",
    "end": "86560"
  },
  {
    "text": "then uh lynn will send things off with a rousing conclusion",
    "start": "86560",
    "end": "91680"
  },
  {
    "text": "so hopefully uh we can make this interesting and entertaining for you",
    "start": "91680",
    "end": "97200"
  },
  {
    "start": "96000",
    "end": "96000"
  },
  {
    "text": "so here we go uh you know the the service mesh at its core is an",
    "start": "97200",
    "end": "102720"
  },
  {
    "text": "abstraction hopefully that's not a surprise to any of you uh and like any abstraction uh there is",
    "start": "102720",
    "end": "108880"
  },
  {
    "text": "a trade-off that you have to make right uh so there's um you know pros right",
    "start": "108880",
    "end": "116079"
  },
  {
    "text": "you get uh all these cool features you get to solve problems hopefully that's why you're doing this um",
    "start": "116079",
    "end": "123280"
  },
  {
    "text": "and uh you maybe get to impress your friends with how cool you are the latest cloud native technology but",
    "start": "123280",
    "end": "128879"
  },
  {
    "text": "of course you're going to pay for this abstraction right and the way we think about it there's kind of three basic",
    "start": "128879",
    "end": "134239"
  },
  {
    "text": "costs when you um take a service message to your stack there's a cost around resource",
    "start": "134239",
    "end": "140480"
  },
  {
    "text": "consumption right so the mesh itself is going to consume memory and cpu both on the control plane and on the data plane side uh and then",
    "start": "140480",
    "end": "148160"
  },
  {
    "text": "there's a kind of a distinct cost around latency so the mesh is going to introduce",
    "start": "148160",
    "end": "153360"
  },
  {
    "text": "latency especially in the data plane um between your application components and that latency might actually be user",
    "start": "153360",
    "end": "158800"
  },
  {
    "text": "facing right so that's that's something you want to minimize as much as possible and then there's a third cost around",
    "start": "158800",
    "end": "165120"
  },
  {
    "text": "complexity which is that you know there are human beings who have to wrangle this thing at least until",
    "start": "165120",
    "end": "170640"
  },
  {
    "text": "gpt 3 can do it for us we're going to be involved in managing this mesh and this is a talk fundamentally",
    "start": "170640",
    "end": "178080"
  },
  {
    "start": "175000",
    "end": "175000"
  },
  {
    "text": "about that third bullet point right so talk about the complexity that's involved in mention",
    "start": "178080",
    "end": "183519"
  },
  {
    "text": "not complexity in the computer science sense of you know like big o analysis or",
    "start": "183519",
    "end": "189200"
  },
  {
    "text": "whatever but complexity in the sense of you know human beings having to spend their time and energy in operating the service",
    "start": "189200",
    "end": "195360"
  },
  {
    "text": "image and the reason why this is an interesting topic i think is because you can measure resource costs and latency costs uh you know in a",
    "start": "195360",
    "end": "202959"
  },
  {
    "text": "way that's much more direct you can do that with benchmarking and benchmarking of course is like a",
    "start": "202959",
    "end": "208000"
  },
  {
    "text": "tricky thing to do it's subtle it's nuanced um you know the performance and uh of a",
    "start": "208000",
    "end": "213840"
  },
  {
    "text": "service mission the resource consumption the service mesh is uh a very uh",
    "start": "213840",
    "end": "219760"
  },
  {
    "text": "multi-variable kind of dimension um but it is doable right there's organizations like kim kinvoke and mesuri that have",
    "start": "219760",
    "end": "226159"
  },
  {
    "text": "done these benchmarks the projects themselves run benchmarks um and so it's a possible it's a",
    "start": "226159",
    "end": "232400"
  },
  {
    "text": "possible thing to accomplish and an important one but there's not really in contrast to",
    "start": "232400",
    "end": "237519"
  },
  {
    "text": "benchmarking it's not really a direct easy direct measure of this kind of complexity you can imagine like a social science experiment maybe",
    "start": "237519",
    "end": "243280"
  },
  {
    "text": "we measure how many hours like engineers spend under a variety of conditions um but you",
    "start": "243280",
    "end": "249680"
  },
  {
    "text": "know in the absence of something like that there's not a great way of measuring this directly it's also unfortunately like kind of an important",
    "start": "249680",
    "end": "256160"
  },
  {
    "text": "measure because ultimately i don't think we really care at least i don't care how hard the computers have to work i",
    "start": "256160",
    "end": "261600"
  },
  {
    "text": "like their computers but i do care very much about how hard i have to work and i care about how hard",
    "start": "261600",
    "end": "269120"
  },
  {
    "text": "anyone who adopts a service mesh has to work so it's important to measure this uh it's really hard to measure we can at",
    "start": "269120",
    "end": "275680"
  },
  {
    "text": "least try and uh take a stab at it and talk about some examples",
    "start": "275680",
    "end": "280880"
  },
  {
    "text": "of how the service mesh has been complex and and things that we've",
    "start": "280880",
    "end": "286320"
  },
  {
    "text": "done to try and um uh address that so i'm going to give a couple examples from the linker d",
    "start": "286320",
    "end": "291520"
  },
  {
    "text": "side and um before i do that like we should talk a little bit about",
    "start": "291520",
    "end": "297120"
  },
  {
    "start": "292000",
    "end": "292000"
  },
  {
    "text": "who is going to actually pay the cost right i'm talking about humans it's actually three groups of",
    "start": "297120",
    "end": "303759"
  },
  {
    "text": "of humans at least at a course approximation um who pay the cost there's a what we call the platform owners right this is the",
    "start": "303759",
    "end": "310240"
  },
  {
    "text": "team that owns the service mesh maybe they also own kubernetes maybe they're they don't but there's someone who's operating this",
    "start": "310240",
    "end": "316240"
  },
  {
    "text": "thing who's bringing it into their environment and who is responsible for it they pay this cost the most direct way",
    "start": "316240",
    "end": "322479"
  },
  {
    "text": "there's also uh kind of consumers of the service mesh there's a developer community uh you know who you benefit presumably",
    "start": "322479",
    "end": "329039"
  },
  {
    "text": "from the um uh kind of the the features of the service mesh but maybe are not",
    "start": "329039",
    "end": "334320"
  },
  {
    "text": "interacting with it directly or not configuring it directly and then of course there's the business",
    "start": "334320",
    "end": "340240"
  },
  {
    "text": "so the developers pay that the service much cost indirectly the business presumably is literally paying for both platform owners and",
    "start": "340240",
    "end": "346320"
  },
  {
    "text": "service owners unless you're doing this for free in which case uh cop speed",
    "start": "346320",
    "end": "351520"
  },
  {
    "text": "um but the business is paying for you know for all this to happen and the more efficient we can make the",
    "start": "351520",
    "end": "356960"
  },
  {
    "text": "service mesh and the less complex we can make it and the lower the business costs as well so three",
    "start": "356960",
    "end": "362160"
  },
  {
    "text": "basic classes of humans okay let me run through um uh a couple of quick examples um from",
    "start": "362160",
    "end": "368880"
  },
  {
    "text": "linker d and then i'll turn things over to lynn after that um uh so on the linkedin side of course",
    "start": "368880",
    "end": "374000"
  },
  {
    "start": "373000",
    "end": "373000"
  },
  {
    "text": "there's lots and lots of examples of this which maybe is a bad sign i don't know um but liquidity went through",
    "start": "374000",
    "end": "379759"
  },
  {
    "text": "this very big transition from linker d1.x to 2.0 in one.x we had this implementation based on the jvm uh based",
    "start": "379759",
    "end": "387199"
  },
  {
    "text": "on a library called finagle and in 2dax we we're not entirely off of that we've got a new implementation",
    "start": "387199",
    "end": "393600"
  },
  {
    "text": "go and control plane rest in the data plane and so on and we also change our entire approach to config so our",
    "start": "393600",
    "end": "399440"
  },
  {
    "text": "approach in the one dot x branch of lincoln d was hey finagle's this powerful library here's some yaml that controlled every",
    "start": "399440",
    "end": "405039"
  },
  {
    "text": "option go figure it out and with 2.x we said okay what we're going to do is we're going to see how far we can get you with",
    "start": "405039",
    "end": "410800"
  },
  {
    "text": "zero config alright so so one example is of course meshing a",
    "start": "410800",
    "end": "415919"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "pod kind of the very first thing you have to do as a service mesh user so in linker d1.x use this node name",
    "start": "415919",
    "end": "423120"
  },
  {
    "text": "environment or variable from kubernetes we pass it through to the http proxy environment variable",
    "start": "423120",
    "end": "428319"
  },
  {
    "text": "we would then kind of expect your application to respect that environment variable and to wire",
    "start": "428319",
    "end": "433360"
  },
  {
    "text": "all of its http calls through linker d and that worked maybe 80 of the time and the rest of time use",
    "start": "433360",
    "end": "439360"
  },
  {
    "text": "a developer would have to go in and change things so it's very complex uh kind of operation we expected of you just to use",
    "start": "439360",
    "end": "445520"
  },
  {
    "text": "the service mesh in 2.x we instead allow you to annotate things at the name space level the",
    "start": "445520",
    "end": "451599"
  },
  {
    "text": "deployment level with a simple annotation and the proxy injector and the init container or the cni plugin kind of do",
    "start": "451599",
    "end": "457280"
  },
  {
    "text": "all their magic to make this all happen for you so a much simpler surface area i think we actually stole",
    "start": "457280",
    "end": "463440"
  },
  {
    "text": "slash copied all that from istio right like it's a lot easier that way so thank you",
    "start": "463440",
    "end": "468639"
  },
  {
    "text": "lynn for that um another good example is routing traffic right slinky 1.x we had",
    "start": "468639",
    "end": "474319"
  },
  {
    "start": "470000",
    "end": "470000"
  },
  {
    "text": "this very sophisticated language for doing kind of arbitrary traffic routing",
    "start": "474319",
    "end": "480080"
  },
  {
    "text": "and uh you'd have to provide us alexis 300 line yaml file just for the act of",
    "start": "480080",
    "end": "485520"
  },
  {
    "text": "like sending http requests or grpc requests or whatever uh in linker d2.x",
    "start": "485520",
    "end": "490960"
  },
  {
    "text": "of course we have protocol detection we understand a lot more about the kubernetes environment and you don't have to do any",
    "start": "490960",
    "end": "496400"
  },
  {
    "text": "in fact you do nothing and it just starts working uh a third example mutual tls right",
    "start": "496400",
    "end": "503919"
  },
  {
    "start": "499000",
    "end": "499000"
  },
  {
    "text": "one.x again we gave you this big configuration file we said hey if you put your certs in this particular location then like",
    "start": "503919",
    "end": "510960"
  },
  {
    "text": "we'll read them and we'll use them but it's kind of up to you how to do this right like you put them there and you manage them and so on like",
    "start": "510960",
    "end": "517279"
  },
  {
    "text": "pki infrastructure how hard can it be it's up to you just figure it out in 2.x of course we ship with a",
    "start": "517279",
    "end": "523518"
  },
  {
    "text": "certificate authority which distributes a proxies to this distributes the search to the proxies",
    "start": "523519",
    "end": "528880"
  },
  {
    "text": "automatically and rotates in 24 hours in fact it's on by default the moment you add link rd to your system you've",
    "start": "528880",
    "end": "534480"
  },
  {
    "text": "already got mutual tls it's actually kind of hard to turn off so big difference",
    "start": "534480",
    "end": "539519"
  },
  {
    "text": "and kind of the level of complexity uh for getting this feature and the final one i want to go",
    "start": "539519",
    "end": "545680"
  },
  {
    "start": "543000",
    "end": "543000"
  },
  {
    "text": "over and this is kind of an interesting one i think from from my perspective is how do you in",
    "start": "545680",
    "end": "550800"
  },
  {
    "text": "inspect the state of the mesh how do you understand what the mesh itself is doing and one.x again we kind of left you up",
    "start": "550800",
    "end": "557279"
  },
  {
    "text": "to your own devices we said hey each proxy is exporting metrics do whatever you want with them right and uh in 2.x we kind of took the",
    "start": "557279",
    "end": "565440"
  },
  {
    "text": "opposite tax which is it actually is a big deal for people to understand the state of their mission we kind of have to own that",
    "start": "565440",
    "end": "572720"
  },
  {
    "text": "that problem so we ship with a little prometheus instance a built-in dashboard grafana uh we have",
    "start": "572720",
    "end": "579440"
  },
  {
    "text": "um a linkery check command i'll show you output in kind of the next um in the next slide and uh",
    "start": "579440",
    "end": "586720"
  },
  {
    "text": "importantly the control plane runs on the data plane itself so all the tools that we're giving you to understand",
    "start": "586720",
    "end": "591760"
  },
  {
    "text": "the behavior of your application uh are the same things you can use to understand the state",
    "start": "591760",
    "end": "597120"
  },
  {
    "text": "of link d and the control plane components in the proxy so here's some examples you know on the left we have the output of linkery check",
    "start": "597120",
    "end": "604000"
  },
  {
    "text": "which you can run like before you install linkedin after you install linkedin anytime you want it's just going to do the sanity check",
    "start": "604000",
    "end": "610000"
  },
  {
    "text": "of you know it's likely working does it have the kubernetes kind of features and permissions and needs and so on",
    "start": "610000",
    "end": "616240"
  },
  {
    "text": "in the middle we have the dashboard where we're looking at a view not only of like the control plane you know green light red light",
    "start": "616240",
    "end": "621920"
  },
  {
    "text": "things are good things are not um but also just the generic view of what's a namespace doing it's been meshed",
    "start": "621920",
    "end": "628000"
  },
  {
    "text": "which you can apply to the control plane namespace just as well as you can apply it to your own application name space and then of",
    "start": "628000",
    "end": "634640"
  },
  {
    "text": "course on the right we've got all the grafana graphs it's the same thing that you're looking at when you're looking at your",
    "start": "634640",
    "end": "640160"
  },
  {
    "text": "application you're going to see these things through through the lens of link do you see the same things so for us that was really important to",
    "start": "640160",
    "end": "645519"
  },
  {
    "text": "get to the point where you the operator could actually understand what's happening okay so hopefully",
    "start": "645519",
    "end": "651040"
  },
  {
    "text": "that's like a whirlwind tour of some lessons that we've learned in lingerie and how we try to address and minimize complexity for the user at",
    "start": "651040",
    "end": "657600"
  },
  {
    "text": "this point i'm going to turn things over to lynn so then",
    "start": "657600",
    "end": "663360"
  },
  {
    "start": "662000",
    "end": "662000"
  },
  {
    "text": "so i'm going to talk about some of the issue examples uh i tend to think external network",
    "start": "664160",
    "end": "670480"
  },
  {
    "text": "resources are like puzzles you not only need to understand what they are but also the interaction",
    "start": "670480",
    "end": "678079"
  },
  {
    "text": "among them for instance on this example the service producer",
    "start": "678079",
    "end": "683920"
  },
  {
    "text": "b here is importing an external services which may be running",
    "start": "683920",
    "end": "689279"
  },
  {
    "text": "also on vm it needs to define",
    "start": "689279",
    "end": "694480"
  },
  {
    "text": "what are the route rule and destination rule to reach out to that services along with the",
    "start": "694480",
    "end": "700880"
  },
  {
    "text": "configuration and the scope of the configuration as the producer",
    "start": "700880",
    "end": "707120"
  },
  {
    "text": "on the consumer side the consumer service happened to be weld with istio ingress gateway so it",
    "start": "707120",
    "end": "713519"
  },
  {
    "text": "would also need a bunch of configurations as well",
    "start": "713519",
    "end": "718880"
  },
  {
    "start": "717000",
    "end": "717000"
  },
  {
    "text": "the boundaries are actually getting clear now between the platform owner and",
    "start": "719360",
    "end": "724880"
  },
  {
    "text": "the service owner starting in 1.6 as the platform owner",
    "start": "724880",
    "end": "730320"
  },
  {
    "text": "can declare host port and tls and some of the other things like selector",
    "start": "730320",
    "end": "736880"
  },
  {
    "text": "of the gateway and protocol for each of the team abcd",
    "start": "736880",
    "end": "742160"
  },
  {
    "text": "here as an example the service owner will be able to responsible for the",
    "start": "742160",
    "end": "748959"
  },
  {
    "text": "virtual services and destination rule along with the configuration scope for that services so it remains",
    "start": "748959",
    "end": "757519"
  },
  {
    "text": "a clean separation among the platform owner and the service owner i want to tell a",
    "start": "757519",
    "end": "764880"
  },
  {
    "start": "762000",
    "end": "762000"
  },
  {
    "text": "story of i actually using the network resources myself",
    "start": "764880",
    "end": "770079"
  },
  {
    "text": "with istio recently so what i did was i declare a simple",
    "start": "770079",
    "end": "776800"
  },
  {
    "text": "tcp based routes so that when the user hits seo d2",
    "start": "776800",
    "end": "784480"
  },
  {
    "text": "it would redirect the traffic to istio d2 htod running on namespace istio 2.",
    "start": "784480",
    "end": "793200"
  },
  {
    "text": "apparently we've done a lot of configuration detection arrow through istiocado",
    "start": "793200",
    "end": "800079"
  },
  {
    "text": "analyzer but it didn't detect what's wrong with my configuration in this example and it took me a while",
    "start": "800079",
    "end": "807040"
  },
  {
    "text": "you may laugh at me you know why would you actually associate host with tcp but i did",
    "start": "807040",
    "end": "813480"
  },
  {
    "text": "unfortunately so it took me a long time to figure out you know hoster not supported with tcp",
    "start": "813480",
    "end": "820399"
  },
  {
    "start": "820000",
    "end": "820000"
  },
  {
    "text": "by talking to my fellow maintainers on the project so this is when i upgrade my",
    "start": "820399",
    "end": "826160"
  },
  {
    "text": "configuration to use tls in this example and i learned that the",
    "start": "826160",
    "end": "831600"
  },
  {
    "text": "hosts on the gateway and virtual service are not really helping with the routing",
    "start": "831600",
    "end": "837120"
  },
  {
    "text": "i really need as soon as smi hosts to do the routing and then i discover a istio bug because",
    "start": "837120",
    "end": "844800"
  },
  {
    "text": "these configurations are perfect but i have to enable the cycle proxy",
    "start": "844800",
    "end": "850800"
  },
  {
    "text": "on my service i have to enable the logs for that i have to enable the",
    "start": "850800",
    "end": "856880"
  },
  {
    "text": "logs for the isro ingress gateway and i still couldn't figure out what's wrong with my configuration",
    "start": "856880",
    "end": "862959"
  },
  {
    "text": "i finally reached out to other maintainers on the project it turned out it's still an envoy had a",
    "start": "862959",
    "end": "869440"
  },
  {
    "text": "bug and not setting the host properly for the yes and my host and i filed a bug so this is going to",
    "start": "869440",
    "end": "877440"
  },
  {
    "text": "fix in 1.7 of istio that's upcoming this month that you can do smi",
    "start": "877440",
    "end": "884720"
  },
  {
    "text": "host routing for trs protocol",
    "start": "884720",
    "end": "889680"
  },
  {
    "text": "some of you know that i wrote a book last year called istio explained it's really only have",
    "start": "889760",
    "end": "895760"
  },
  {
    "text": "three simple services and as part of the book i added cycle",
    "start": "895760",
    "end": "901040"
  },
  {
    "text": "proxy to each of my services and i also enabled mutual trs",
    "start": "901040",
    "end": "907360"
  },
  {
    "text": "for each of my services the first thing i find out is",
    "start": "907360",
    "end": "912480"
  },
  {
    "start": "910000",
    "end": "910000"
  },
  {
    "text": "my service have health check and none of my services are working after i enable mutual tls",
    "start": "912480",
    "end": "919920"
  },
  {
    "text": "the reason is the cubenet does health check and it doesn't work very well with mutual pls is enabled",
    "start": "919920",
    "end": "927519"
  },
  {
    "text": "through prior to istio 1.6 user would have to put such annotation into their pod",
    "start": "927519",
    "end": "935920"
  },
  {
    "text": "to enable istio to do mutual tls when the service have health check",
    "start": "935920",
    "end": "943120"
  },
  {
    "text": "enabled so the health check can be performed on the mutual tls enabled mode",
    "start": "943120",
    "end": "949920"
  },
  {
    "text": "which happens to be when the time my book was written but since israel 1.6 the annotation",
    "start": "949920",
    "end": "956800"
  },
  {
    "text": "is actually enabled by default so as a user as you enable mutual ts for your",
    "start": "956800",
    "end": "964160"
  },
  {
    "text": "services you no longer need to declare such annotation which is nice",
    "start": "964160",
    "end": "970399"
  },
  {
    "start": "967000",
    "end": "967000"
  },
  {
    "text": "the second thing that stumped onto me was i find out the header-based route",
    "start": "970959",
    "end": "977759"
  },
  {
    "text": "doesn't work for me it turns out the services were communicating",
    "start": "977759",
    "end": "983440"
  },
  {
    "text": "using uh secure communication before i even add the cycle proxy so for instance the",
    "start": "983440",
    "end": "990480"
  },
  {
    "text": "trade service would be talking to https to um to the cycle proxy",
    "start": "990480",
    "end": "998160"
  },
  {
    "text": "and it doesn't enable me to do header-based routing with encrypted",
    "start": "998160",
    "end": "1003279"
  },
  {
    "text": "traffic so i end up downloading uh each of the service",
    "start": "1003279",
    "end": "1008320"
  },
  {
    "text": "to downgrade to http so the traffic will be plain traffic",
    "start": "1008320",
    "end": "1013759"
  },
  {
    "text": "http between the app container to the sidecar",
    "start": "1013759",
    "end": "1018800"
  },
  {
    "text": "container i also realized enabled for me to do header-based routing i actually have to",
    "start": "1018800",
    "end": "1024480"
  },
  {
    "text": "make code change to make sure that header is propagated through some of my services",
    "start": "1024480",
    "end": "1030480"
  },
  {
    "text": "that i want to enable for routing so this is an interesting example that",
    "start": "1030480",
    "end": "1036558"
  },
  {
    "text": "not only um the platform provides different functions but i",
    "start": "1036559",
    "end": "1042640"
  },
  {
    "text": "really have to go into the application code to fully enable the the mesh uh the fully reached",
    "start": "1042640",
    "end": "1050000"
  },
  {
    "text": "function of the service mesh so that goes back to the fundamental",
    "start": "1050000",
    "end": "1056240"
  },
  {
    "text": "question how do we make service mesh boring so we don't have anything to talk about",
    "start": "1056240",
    "end": "1063600"
  },
  {
    "start": "1062000",
    "end": "1062000"
  },
  {
    "text": "do you really need service mesh one of the key scenarios we went through",
    "start": "1063840",
    "end": "1069840"
  },
  {
    "text": "as the istio project is the control plane is no longer using microservices we actually",
    "start": "1069840",
    "end": "1076799"
  },
  {
    "text": "consolidate our control plane components back to monolithic",
    "start": "1076799",
    "end": "1082080"
  },
  {
    "text": "i find out buoyant has an interesting checklist for users do you really need service",
    "start": "1082080",
    "end": "1088320"
  },
  {
    "text": "mesh and how many people are in your engineering organization",
    "start": "1088320",
    "end": "1093600"
  },
  {
    "text": "and how many microservices do you have what if we can actually provide user",
    "start": "1093600",
    "end": "1101520"
  },
  {
    "start": "1097000",
    "end": "1097000"
  },
  {
    "text": "analyze function to help user analyze based on the state of the service mesh",
    "start": "1101520",
    "end": "1108240"
  },
  {
    "text": "whether they really need service mesh for instance i could run that command towards the",
    "start": "1108240",
    "end": "1114400"
  },
  {
    "text": "three of my services in the trade name space and find out all the services i used in java maybe i",
    "start": "1114400",
    "end": "1121200"
  },
  {
    "text": "shouldn't need service mesh and go through all the lanes and maybe we can write on a different",
    "start": "1121200",
    "end": "1128160"
  },
  {
    "text": "namespace and then you can find out it has more services it has using different languages and the",
    "start": "1128160",
    "end": "1134160"
  },
  {
    "text": "mesh could be recommended geoconfiguration uh william talk about",
    "start": "1134160",
    "end": "1140559"
  },
  {
    "start": "1136000",
    "end": "1136000"
  },
  {
    "text": "zero configuration is possible and same with istio with protocol detection",
    "start": "1140559",
    "end": "1146000"
  },
  {
    "text": "but really it comes with a cost it's really great to do zero configuration for onboarding",
    "start": "1146000",
    "end": "1153039"
  },
  {
    "text": "but we do recommend the user to actually declare their protocol uh in production so we don't have to",
    "start": "1153039",
    "end": "1159600"
  },
  {
    "text": "kind of having that code to automatically detect a protocol for you zero code change",
    "start": "1159600",
    "end": "1166960"
  },
  {
    "start": "1164000",
    "end": "1164000"
  },
  {
    "text": "i learned the hard way is actually not possible there are different levels of your",
    "start": "1166960",
    "end": "1173440"
  },
  {
    "text": "service mesh readiness for your code and your service first can you run your service",
    "start": "1173440",
    "end": "1180320"
  },
  {
    "text": "with the sidecar are the headers for telemetry propagating do you doing are you doing any retry or",
    "start": "1180320",
    "end": "1187840"
  },
  {
    "text": "timeout or maybe some secure communication in your code are these disabled so that you",
    "start": "1187840",
    "end": "1194000"
  },
  {
    "text": "actually trust the service mesh platform to do it for you what if you are using images from other",
    "start": "1194000",
    "end": "1201520"
  },
  {
    "text": "people last thanksgiving i was put into a user issue that the user injected the",
    "start": "1201520",
    "end": "1209760"
  },
  {
    "text": "cycle proxy for zookeeper and they find out the keeper stops",
    "start": "1209760",
    "end": "1215280"
  },
  {
    "text": "working completely and this is even before they enable mutual trs so this is a clear example of",
    "start": "1215280",
    "end": "1223919"
  },
  {
    "text": "the service doesn't even support running in the mesh with a sidecar",
    "start": "1223919",
    "end": "1230960"
  },
  {
    "start": "1231000",
    "end": "1231000"
  },
  {
    "text": "how is your application doing uh willing talk about some cool dashboard right if you know what",
    "start": "1232799",
    "end": "1239520"
  },
  {
    "text": "application to look it's easy you can drill into there and find out",
    "start": "1239520",
    "end": "1244640"
  },
  {
    "text": "exactly what's going on this is an example of kayali from red hat",
    "start": "1244640",
    "end": "1250880"
  },
  {
    "start": "1250000",
    "end": "1250000"
  },
  {
    "text": "but what if you want to know how your overall statistic of the mesh",
    "start": "1250880",
    "end": "1257919"
  },
  {
    "text": "and be able to know which application to look into for instance do you have mutual tis",
    "start": "1257919",
    "end": "1264880"
  },
  {
    "text": "for all your traffic that you can actually tighten up the whole mesh for mutual trs what if",
    "start": "1264880",
    "end": "1271440"
  },
  {
    "text": "some of your services maybe in a particular region have issues so we do think it's super",
    "start": "1271440",
    "end": "1277840"
  },
  {
    "text": "valuable to have overall dashboard so that you can actually drill into whichever has the problems",
    "start": "1277840",
    "end": "1287039"
  },
  {
    "start": "1286000",
    "end": "1286000"
  },
  {
    "text": "in conclusion through these examples we really hope and we will continue to work to make",
    "start": "1287679",
    "end": "1293919"
  },
  {
    "text": "service match easier for you",
    "start": "1293919",
    "end": "1305840"
  },
  {
    "text": "all right we did it hey everyone thanks for uh watching our",
    "start": "1306159",
    "end": "1313280"
  },
  {
    "text": "talk here we are we're live ready to answer your questions",
    "start": "1313280",
    "end": "1319840"
  },
  {
    "text": "okay william i saw a question",
    "start": "1324720",
    "end": "1333840"
  },
  {
    "text": "okay i can't hear lynn sorry lynn just as he started speaking",
    "start": "1341200",
    "end": "1349200"
  },
  {
    "text": "well maybe i'll uh try and add love a bit while lynn tackles her audio so we had a",
    "start": "1357280",
    "end": "1363840"
  },
  {
    "text": "question um from dennis which is and what kind of applications do you think that's worth the effort of using a",
    "start": "1363840",
    "end": "1371600"
  },
  {
    "text": "service mesh i think that's a great question lynn kind of touched on that uh in her portion of the talk",
    "start": "1371600",
    "end": "1377039"
  },
  {
    "text": "um so hopefully that made sense for you but in my mind it kind of comes down to a couple factors one is on the technical side if you're",
    "start": "1377039",
    "end": "1384640"
  },
  {
    "text": "running a monolith it's you know it's not going to do a whole lot for you unfortunately if your application is split into lots",
    "start": "1384640",
    "end": "1391039"
  },
  {
    "text": "of micro services okay then great it starts making sense if your application is polyglot micro",
    "start": "1391039",
    "end": "1396960"
  },
  {
    "text": "services so different languages and it definitely starts making sense and then if your team you know the organization around it",
    "start": "1396960",
    "end": "1404799"
  },
  {
    "text": "uh is large and there's lots of people and you kind of have this natural split into",
    "start": "1404799",
    "end": "1410000"
  },
  {
    "text": "people who own the platform and people who own the uh the application itself then it really",
    "start": "1410000",
    "end": "1415360"
  },
  {
    "text": "starts making sense so those are the basic factors i would consider um i'll plug my",
    "start": "1415360",
    "end": "1422400"
  },
  {
    "text": "i wrote a service mesh manifesto with some point where i kind of talked about some of this it's on service mesh dot io so i'll plug",
    "start": "1422400",
    "end": "1430799"
  },
  {
    "text": "my my manifesto because i have a lot more opinions uh lynn are you back did that did the",
    "start": "1430799",
    "end": "1436880"
  },
  {
    "text": "answer make sense to you uh yes i am back great",
    "start": "1436880",
    "end": "1445760"
  },
  {
    "text": "yeah the answer definitely makes sense yeah i i do think it's worse to evaluate",
    "start": "1445760",
    "end": "1453840"
  },
  {
    "text": "whether you actually need the service mesh to go through the learning",
    "start": "1453840",
    "end": "1460000"
  },
  {
    "text": "because the need is not a small amount of learning",
    "start": "1460000",
    "end": "1465120"
  },
  {
    "text": "yeah yeah agreed um okay wow we got a lot of questions",
    "start": "1469120",
    "end": "1474799"
  },
  {
    "text": "coming in that's great so there's a related one which lynn maybe i'll ask to you",
    "start": "1474799",
    "end": "1480000"
  },
  {
    "text": "and you try and answer it so anwar asks with all the complexity with service",
    "start": "1480000",
    "end": "1485840"
  },
  {
    "text": "messages at what point would it be helpful for developers or organizations to adopt the mesh so i think it's a similar",
    "start": "1485840",
    "end": "1491679"
  },
  {
    "text": "question but is there a point at which maybe the application you know grows or the organization grows",
    "start": "1491679",
    "end": "1499039"
  },
  {
    "text": "and suddenly you switch into oh we do need a service match",
    "start": "1499039",
    "end": "1504480"
  },
  {
    "text": "yeah so i think there are a couple of frauds so first you have to look at the size",
    "start": "1504559",
    "end": "1511440"
  },
  {
    "text": "of your team and also the number of your services secondly you have to look at what",
    "start": "1511440",
    "end": "1518400"
  },
  {
    "text": "programming languages are you using right if it's the single programming language like java it may not be as attractive",
    "start": "1518400",
    "end": "1526559"
  },
  {
    "text": "as a diverse set of languages interestingly the easter project gone",
    "start": "1526559",
    "end": "1532320"
  },
  {
    "text": "through this uh for the past year or myself and we had",
    "start": "1532320",
    "end": "1537440"
  },
  {
    "text": "like control planes distributed into like four or five components but it was written in the same language",
    "start": "1537440",
    "end": "1546240"
  },
  {
    "text": "so the value wasn't obvious to us i think the other thing you want to look",
    "start": "1546240",
    "end": "1552000"
  },
  {
    "text": "at is the delivery timeline for each of your services if all of your services are delivered in",
    "start": "1552000",
    "end": "1559200"
  },
  {
    "text": "the same timeline maybe the value is less but if they are on two different",
    "start": "1559200",
    "end": "1565200"
  },
  {
    "text": "schedules you want to deliver them separately it's controlled by separate team",
    "start": "1565200",
    "end": "1570640"
  },
  {
    "text": "so the people and organization perspective are super important as well",
    "start": "1570640",
    "end": "1585120"
  },
  {
    "text": "yeah i think that makes a lot of sense um okay i see a question that i kind of",
    "start": "1585120",
    "end": "1592080"
  },
  {
    "text": "want to answer from girish which is what's the need for smi when you're using the service mesh i think that's an",
    "start": "1592080",
    "end": "1597919"
  },
  {
    "text": "interesting one so smi is the service mesh interface it's a",
    "start": "1597919",
    "end": "1603039"
  },
  {
    "text": "api um and as i understand it the goal of smi is to is to provide an api that's",
    "start": "1603039",
    "end": "1611039"
  },
  {
    "text": "kind of independent of the service mesh implementation under the hood so there's a set of",
    "start": "1611039",
    "end": "1616880"
  },
  {
    "text": "uh kind of there's a api a set of apis around metrics there's a set that",
    "start": "1616880",
    "end": "1624400"
  },
  {
    "text": "are that's around kind of traffic routing and so on uh and the question is like what's the",
    "start": "1624400",
    "end": "1629919"
  },
  {
    "text": "need for smi when you're using the service mesh i think if uh you know if if your goal is i want",
    "start": "1629919",
    "end": "1635840"
  },
  {
    "text": "to run the service mesh i don't think you have a direct need for smi but i i think",
    "start": "1635840",
    "end": "1641919"
  },
  {
    "text": "as i understand the the goal is if you are building tooling that sits on",
    "start": "1641919",
    "end": "1648000"
  },
  {
    "text": "top of the service mesh then having a an api that you know is uniform across mesh implementations it's",
    "start": "1648000",
    "end": "1654799"
  },
  {
    "text": "actually really helpful because then you can build your tool you know against that api rather than building it against an individual mesh",
    "start": "1654799",
    "end": "1661039"
  },
  {
    "text": "uh the kind of classic example this point is the flagger project which does this progressive rollout so it'll do",
    "start": "1661039",
    "end": "1666320"
  },
  {
    "text": "like a canary deploy and shift traffic and monitor success rates and so on and it can unshift traffic if success rate is",
    "start": "1666320",
    "end": "1673039"
  },
  {
    "text": "going down um something like that is built on top of the smi traffic split api and that makes perfect",
    "start": "1673039",
    "end": "1679120"
  },
  {
    "text": "sense because now flagger can run on you know you can use flagger if you're using istio you can use it if you're using linkedin you can use it if",
    "start": "1679120",
    "end": "1685360"
  },
  {
    "text": "you're using something else um so uh i think hopefully that answers",
    "start": "1685360",
    "end": "1690399"
  },
  {
    "text": "your question gary again i think it's less about you as the consumer of the service mesh",
    "start": "1690399",
    "end": "1696399"
  },
  {
    "text": "directly using smi i think it's more about the tooling that it enables",
    "start": "1696399",
    "end": "1701840"
  },
  {
    "text": "yeah i i think william you are right on this question i actually share a similar viewpoint as",
    "start": "1702559",
    "end": "1708480"
  },
  {
    "text": "you i would say you know maybe when service match is really boring when there's really",
    "start": "1708480",
    "end": "1715520"
  },
  {
    "text": "not much variation between service smash provider like linkedin istio",
    "start": "1715520",
    "end": "1722720"
  },
  {
    "text": "maybe as us smi could be interesting because it would be more transparent for",
    "start": "1722720",
    "end": "1727919"
  },
  {
    "text": "the user but for today because there are so many things to talk about and there are so",
    "start": "1727919",
    "end": "1734080"
  },
  {
    "text": "many differences between different service mesh provider",
    "start": "1734080",
    "end": "1739919"
  },
  {
    "text": "the fact that smi can only implement the common function among all the",
    "start": "1739919",
    "end": "1745120"
  },
  {
    "text": "service meshes make it harder to actually adopt some of the new things and exciting",
    "start": "1745120",
    "end": "1751760"
  },
  {
    "text": "things from service mesh today",
    "start": "1751760",
    "end": "1755360"
  },
  {
    "text": "all right we've got time for one quick answer then uh and lynn i think this is a question",
    "start": "1757120",
    "end": "1762640"
  },
  {
    "text": "for you it's from christopher he says is the idea for a mesh recommender something that you are actively",
    "start": "1762640",
    "end": "1767919"
  },
  {
    "text": "working on uh it's actually something we discuss",
    "start": "1767919",
    "end": "1774240"
  },
  {
    "text": "um willie and i kind of come up this you know as we're working on this chats",
    "start": "1774240",
    "end": "1780960"
  },
  {
    "text": "um so not something we're actively working on but something definitely on our thought process",
    "start": "1780960",
    "end": "1788159"
  },
  {
    "text": "and we would certainly very value your feedback on whether it if this is",
    "start": "1788159",
    "end": "1794320"
  },
  {
    "text": "something tremendous yeah great okay so that's the end of uh",
    "start": "1794320",
    "end": "1800559"
  },
  {
    "text": "the time we have for live q a but both lynn and i will be on the service mesh con it's number three",
    "start": "1800559",
    "end": "1806159"
  },
  {
    "text": "dash service mesh con slack channel and we'll see you there",
    "start": "1806159",
    "end": "1813919"
  }
]