[
  {
    "text": "okay let's start we are talking about orchestrating AI models in",
    "start": "320",
    "end": "6040"
  },
  {
    "text": "Kubernetes specifically deploying Olama as a native container",
    "start": "6040",
    "end": "12800"
  },
  {
    "text": "runtime so my name is Samuel Beloso i work as a software engineer at cast AI i",
    "start": "13799",
    "end": "20960"
  },
  {
    "text": "am in the security team where we are building a product to find and fix",
    "start": "20960",
    "end": "26960"
  },
  {
    "text": "vulnerabilities and anomalies in Kubernetes environments",
    "start": "26960",
    "end": "32000"
  },
  {
    "text": "yeah and I'm Lucas i work at Red Hat in the Roy Red Hat AI platform and I'm also",
    "start": "32000",
    "end": "38239"
  },
  {
    "text": "a QFlow contributor member yeah so I work in security but today I'm going to",
    "start": "38239",
    "end": "44079"
  },
  {
    "text": "talk about AI or more about Kubernetes okay and how Kubernetes works internally",
    "start": "44079",
    "end": "50320"
  },
  {
    "text": "so let's start so if you have never used Olama if it's the first time you hear uh",
    "start": "50320",
    "end": "56559"
  },
  {
    "text": "this tool Olama is a CLI tool to run",
    "start": "56559",
    "end": "62239"
  },
  {
    "text": "models AI models locally in a very simple way okay this is the GitHub",
    "start": "62239",
    "end": "67439"
  },
  {
    "text": "repository of Olama and you can run the most famous model like deepse lama and",
    "start": "67439",
    "end": "73520"
  },
  {
    "text": "any other AI models and it's uh very popular i don't know if you are aware",
    "start": "73520",
    "end": "79040"
  },
  {
    "text": "but the number of stars in the GitHub repository in the Olama GitHub",
    "start": "79040",
    "end": "84720"
  },
  {
    "text": "repository is 134K it's even more than Kubernetes so it's yeah it's crazy and",
    "start": "84720",
    "end": "92560"
  },
  {
    "text": "only in the last year or year and a half and why is that I mean the AI hype is",
    "start": "92560",
    "end": "99439"
  },
  {
    "text": "real and also I think it's because of the simplicity because if uh if you want to",
    "start": "99439",
    "end": "107280"
  },
  {
    "text": "run a model locally with Ola what you have to do is first you need to download",
    "start": "107280",
    "end": "112399"
  },
  {
    "text": "and install the Olama binary from the Olama website you need to start the",
    "start": "112399",
    "end": "117840"
  },
  {
    "text": "Olama server in the background and then you download your model with Olama pool",
    "start": "117840",
    "end": "123040"
  },
  {
    "text": "for example in this case it's uh the Lama 3 8 billion parameters model and to",
    "start": "123040",
    "end": "128720"
  },
  {
    "text": "use the model you only need just to execute run and the name of the model you recently pulled and that's it then",
    "start": "128720",
    "end": "136080"
  },
  {
    "text": "you can start talking with your LLM as you are doing with satp but locally you",
    "start": "136080",
    "end": "141280"
  },
  {
    "text": "can also consume the APIs for example and integrate copilot or any other tool with the with with the model locally so",
    "start": "141280",
    "end": "149040"
  },
  {
    "text": "you don't need to send your data to an external or to a third party server so",
    "start": "149040",
    "end": "156800"
  },
  {
    "text": "and if you this could sounds familiar to you because the pool and run is very",
    "start": "156800",
    "end": "164239"
  },
  {
    "text": "similar to docker so the ui ux is pretty much uh the same so is to models what",
    "start": "164239",
    "end": "171519"
  },
  {
    "text": "docker is to containers it's a a tool that simplifies the yeah the deployment of models so when h we were",
    "start": "171519",
    "end": "179519"
  },
  {
    "text": "experimenting with Olama the one question that came to our mind was okay this is for local but what happens with",
    "start": "179519",
    "end": "186800"
  },
  {
    "text": "kubernetes how can we run in kubernetes so the first option is there is a a helm",
    "start": "186800",
    "end": "194720"
  },
  {
    "text": "chart that you can use it's it works pretty well and it's really well",
    "start": "194720",
    "end": "200080"
  },
  {
    "text": "maintained so it's a a very valid options but we were thinking about can we do it in a more kubernetes native way",
    "start": "200080",
    "end": "207680"
  },
  {
    "text": "can we use a deployment what happens if we put the model that we are pulling",
    "start": "207680",
    "end": "214080"
  },
  {
    "text": "locally but in the deployment image as we are doing with any other Kubernetes",
    "start": "214080",
    "end": "220120"
  },
  {
    "text": "application okay and it's possible we need to set in our deployment uh this",
    "start": "220120",
    "end": "227920"
  },
  {
    "text": "runtime class name okay that we have in there and by default we don't need to",
    "start": "227920",
    "end": "233760"
  },
  {
    "text": "put this runtime class name because uh by default we only create containers but",
    "start": "233760",
    "end": "239599"
  },
  {
    "text": "If we want to create other things or we want to delegate the creation of our deployment or containers to the",
    "start": "239599",
    "end": "247040"
  },
  {
    "text": "container runtime or we want to use a custom uh container runtime we can use",
    "start": "247040",
    "end": "252720"
  },
  {
    "text": "the runtime class names okay this idea is not new uh it was introduced in",
    "start": "252720",
    "end": "258320"
  },
  {
    "text": "Kubernetes 120 so while back ago and actually it's the way that for example",
    "start": "258320",
    "end": "263680"
  },
  {
    "text": "containerd one of the most famous uh container runtimes it's the way it implements the runc so when containerd",
    "start": "263680",
    "end": "271600"
  },
  {
    "text": "needs to create a container it to it talks to run cy by using the containerd",
    "start": "271600",
    "end": "276720"
  },
  {
    "text": "sim run cb2 uh other projects for example kata container and devisor do",
    "start": "276720",
    "end": "282880"
  },
  {
    "text": "the same in a or are also using the runtime class to do a similar thing but",
    "start": "282880",
    "end": "289280"
  },
  {
    "text": "in this case they do not create containers they create isolated sandboxes or virtual machines so uh when",
    "start": "289280",
    "end": "296360"
  },
  {
    "text": "the kata container or gis or runtimes wants to create uh or receives the",
    "start": "296360",
    "end": "302880"
  },
  {
    "text": "request to create uh a virtual machine or a task it will be a virtual machine it's not going to be a container and the",
    "start": "302880",
    "end": "309360"
  },
  {
    "text": "the same for example for the web assembly sims uh for web assembly workloads so we are going to explore how",
    "start": "309360",
    "end": "317520"
  },
  {
    "text": "can we do this with Olama okay and how can we with this custom runtime class to",
    "start": "317520",
    "end": "323120"
  },
  {
    "text": "implement a custom sim to deploy and expose uh models in in kubernetes so the",
    "start": "323120",
    "end": "330560"
  },
  {
    "text": "first question to do this is how does kubernetes work okay it's a hard question a very wide topic so we are",
    "start": "330560",
    "end": "338320"
  },
  {
    "text": "going to be a bit simplistic in here but basically we are interested in what",
    "start": "338320",
    "end": "343919"
  },
  {
    "text": "happens when we create a deployment or how the containers of that deployment are created on on every node so in our",
    "start": "343919",
    "end": "351199"
  },
  {
    "text": "case we have this deployment with a custom runtime class name so what happens in Kubernetes when we do this",
    "start": "351199",
    "end": "357600"
  },
  {
    "text": "when we do this the when we apply the cubectl when we run the cubectl cubectl",
    "start": "357600",
    "end": "362639"
  },
  {
    "text": "apply f so the control plane if you are kubernetes experts you know that it's",
    "start": "362639",
    "end": "368000"
  },
  {
    "text": "more than this in the control plane we have also have the scheduleuler the controller manager will have more more parts but at the at the end of the day",
    "start": "368000",
    "end": "374240"
  },
  {
    "text": "the the API server will receive the request and will store in etc the pot",
    "start": "374240",
    "end": "380400"
  },
  {
    "text": "okay that it needs to be created cublet on the other side It's installed on",
    "start": "380400",
    "end": "385520"
  },
  {
    "text": "every node and it's continuously watching pot changes in the inc it's",
    "start": "385520",
    "end": "391680"
  },
  {
    "text": "watching the API server and when there is a new pot it's going to call this sync pot function you have the entire",
    "start": "391680",
    "end": "398639"
  },
  {
    "text": "definition in this uh URL that we you can check later we have the slides in in",
    "start": "398639",
    "end": "405120"
  },
  {
    "text": "the sket so this sync pot what it's going to do is cublet is going to request the CRI runtime uh to create the",
    "start": "405120",
    "end": "413039"
  },
  {
    "text": "containers for us so let's see the sync pot implementation is something like",
    "start": "413039",
    "end": "418160"
  },
  {
    "text": "this it does as you can see many things it will we are going to review now what are these different steps so don't worry",
    "start": "418160",
    "end": "425120"
  },
  {
    "text": "about the comments basically what we need to pay attention to is uh the body of the function okay so we have the sync",
    "start": "425120",
    "end": "432160"
  },
  {
    "text": "port singapot is calling the CRI API because uh we have two main container",
    "start": "432160",
    "end": "440039"
  },
  {
    "text": "runtime container runtimes we have cryo or we have containerd for GKE EKS uh all",
    "start": "440039",
    "end": "446720"
  },
  {
    "text": "the cloud the Kubernetes cloud uh flavors also kind for development and in",
    "start": "446720",
    "end": "452560"
  },
  {
    "text": "open sie environments we have cryo so we have an abstraction so cubelet uh work",
    "start": "452560",
    "end": "458560"
  },
  {
    "text": "in the same way with any uh container runtime and this is like this because we",
    "start": "458560",
    "end": "464720"
  },
  {
    "text": "have the container runtime interface uh these are some of the endpoints that are defined you have the full specification",
    "start": "464720",
    "end": "471440"
  },
  {
    "text": "in here you can go and check out and we have two main services we have the runtime service and we have the image",
    "start": "471440",
    "end": "477919"
  },
  {
    "text": "service runtime service uh is used to create pot sandboxes and containers and",
    "start": "477919",
    "end": "484319"
  },
  {
    "text": "the image service the same to interact with the different to manage the the",
    "start": "484319",
    "end": "489520"
  },
  {
    "text": "images in a node so uh let's review the runpot sandbox API first because it's",
    "start": "489520",
    "end": "496000"
  },
  {
    "text": "the first API to be called when we need to create a container this API will",
    "start": "496000",
    "end": "501360"
  },
  {
    "text": "bootstrap the croup name spaces and network for all containers in the same pot and that sandbox will be initialized",
    "start": "501360",
    "end": "509199"
  },
  {
    "text": "with the post container it just a dummy container a for loop running and it will",
    "start": "509199",
    "end": "515279"
  },
  {
    "text": "be the first container of our sandbox the way it works is okay cublet is",
    "start": "515279",
    "end": "520880"
  },
  {
    "text": "watching the pot from the API and then there is a new pot and it's going to create that pot so it will call the run",
    "start": "520880",
    "end": "527760"
  },
  {
    "text": "pot sandbox request it will send this request to the CRI runtime the CRI",
    "start": "527760",
    "end": "533120"
  },
  {
    "text": "runtime first will get the sandbox runtime okay this is what we specify in the runtime class name so we are going",
    "start": "533120",
    "end": "540640"
  },
  {
    "text": "to get the runtime sim that will handle the creation of this uh request so uh by",
    "start": "540640",
    "end": "547839"
  },
  {
    "text": "default it's run C in containerd in our case it's going to be amama sim that it's a a component that we are building",
    "start": "547839",
    "end": "554080"
  },
  {
    "text": "for this the next step is setting up the pot the it's going to call the CNI it's",
    "start": "554080",
    "end": "559200"
  },
  {
    "text": "a different interface is the container network interface it will set up the network for us it depends on the network",
    "start": "559200",
    "end": "565279"
  },
  {
    "text": "provider you are using selium the cloud CNI or whatever and finally it's going",
    "start": "565279",
    "end": "570959"
  },
  {
    "text": "to start the sandbox the sandbox the pot sandbox it's going to create one",
    "start": "570959",
    "end": "576160"
  },
  {
    "text": "container the post container with this create task request so the runtime sim will create this container uh for us or",
    "start": "576160",
    "end": "584080"
  },
  {
    "text": "for the sandbox it will return the process ID the pit and finally it will return also the sandbox ID to the",
    "start": "584080",
    "end": "591080"
  },
  {
    "text": "cubelet so next step okay we have the sandbox it is ready and now we need to attach or add containers to this sandbox",
    "start": "591080",
    "end": "598240"
  },
  {
    "text": "the actual container or in our case the model that we want to to expose and this",
    "start": "598240",
    "end": "604399"
  },
  {
    "text": "is the this is what the create container API is is for so it uh it will attach uh",
    "start": "604399",
    "end": "610160"
  },
  {
    "text": "the container or multiple containers to the port sandbox so now we have the post container and also our containers and it",
    "start": "610160",
    "end": "617839"
  },
  {
    "text": "works in a very similar way in this case uh the cubelet first calls the pull",
    "start": "617839",
    "end": "623519"
  },
  {
    "text": "image uh uh request to the CRI runtime so the CR runtime for example containerd",
    "start": "623519",
    "end": "631040"
  },
  {
    "text": "is going to pull the image uh that we specify it will return the image reference and then it will with the",
    "start": "631040",
    "end": "638480"
  },
  {
    "text": "create container and start container request it will finally talk with the runtime simama sim in our case to uh with these",
    "start": "638480",
    "end": "647360"
  },
  {
    "text": "two different uh calls with create task request and start request to create the",
    "start": "647360",
    "end": "652720"
  },
  {
    "text": "container that will be in in the sandbox finally it will return if everything",
    "start": "652720",
    "end": "658399"
  },
  {
    "text": "goes fine it will return an an act and so the requirements that we have to",
    "start": "658399",
    "end": "665279"
  },
  {
    "text": "build our container or custom runtime container runtime or our SIM is okay uh",
    "start": "665279",
    "end": "672720"
  },
  {
    "text": "we need to pull the models with an OCI format and then we need to build a SIM compatible with with containerd the",
    "start": "672720",
    "end": "679760"
  },
  {
    "text": "first thing is okay because we are putting a model in the deployment image and that erh image needs to be OCI",
    "start": "679760",
    "end": "686519"
  },
  {
    "text": "compatible so we cannot put the image directly from the Olama registry because",
    "start": "686519",
    "end": "691839"
  },
  {
    "text": "it's not compatible with the OCI format so the question is how do we convert",
    "start": "691839",
    "end": "697120"
  },
  {
    "text": "models from the AMA registry to OCI format we can use this tool okay the",
    "start": "697120",
    "end": "703440"
  },
  {
    "text": "it's a tool from the G GPU stack it's called GGUF packer go and it converts uh",
    "start": "703440",
    "end": "709360"
  },
  {
    "text": "GGUF models to OCI images if you are not familiar with the GGUF format it was",
    "start": "709360",
    "end": "715200"
  },
  {
    "text": "developed by Georgie Jaranov he's the develop the developer of the main contributor of Llama CPP and it's a",
    "start": "715200",
    "end": "722560"
  },
  {
    "text": "binary format that h simplifies or it's an optimized way to store and share AI",
    "start": "722560",
    "end": "730560"
  },
  {
    "text": "models in hagging phase we have more than 90k models with this GGUF format so",
    "start": "730560",
    "end": "737440"
  },
  {
    "text": "most of the models are available in this format and how does this tool work this",
    "start": "737440",
    "end": "742560"
  },
  {
    "text": "GG UF packer go tool it works like a docker build okay we have but we have a",
    "start": "742560",
    "end": "749200"
  },
  {
    "text": "custom builder so we need to put uh our GGUF model inside in this case it is in",
    "start": "749200",
    "end": "755360"
  },
  {
    "text": "the add instruction we are pulling the model from hugging phase in this case it's the Q12 model and it will then we",
    "start": "755360",
    "end": "764959"
  },
  {
    "text": "need to call this uh docker build just with uh with the name of the image that",
    "start": "764959",
    "end": "771040"
  },
  {
    "text": "we want to push to our uh Docker registry as we do with our application",
    "start": "771040",
    "end": "776079"
  },
  {
    "text": "with our Kubernetes services and that's it we the image will be available in our",
    "start": "776079",
    "end": "781519"
  },
  {
    "text": "registry and it can be put into the into the deployment in the image deployment",
    "start": "781519",
    "end": "787360"
  },
  {
    "text": "uh with this when the CRI runtime when containerd receives the pull image uh",
    "start": "787360",
    "end": "792399"
  },
  {
    "text": "action it will uh pull the image into the node and it will be available for",
    "start": "792399",
    "end": "797440"
  },
  {
    "text": "the containers to mount this image or to use this image as we are going to see",
    "start": "797440",
    "end": "803200"
  },
  {
    "text": "now so okay we have solved the problem uh of building uh the models in a format",
    "start": "803200",
    "end": "810440"
  },
  {
    "text": "compatible with with containerd or with OCI now we are going to see how to build",
    "start": "810440",
    "end": "817600"
  },
  {
    "text": "this sim what we need to create a custom sim in this case forama but it can uh",
    "start": "817600",
    "end": "823920"
  },
  {
    "text": "the idea is the same for any other okay what we need to do is this is for containerd okay for cryo it's the same",
    "start": "823920",
    "end": "831920"
  },
  {
    "text": "idea but a bit different so in the talk we are only going to work with containerd we need to set the the custom",
    "start": "831920",
    "end": "839839"
  },
  {
    "text": "runtime as a plug-in okay uh containerd allows to define as many runtimes as we",
    "start": "839839",
    "end": "845519"
  },
  {
    "text": "want and we need to use this runtime type and register our uh container the",
    "start": "845519",
    "end": "851519"
  },
  {
    "text": "sim we need to copy the sim binary to the kubernetes node uh I'm going to explain in the next slide how we build",
    "start": "851519",
    "end": "858160"
  },
  {
    "text": "and what uh how to write this binary okay but for now we need to copy the sim",
    "start": "858160",
    "end": "863760"
  },
  {
    "text": "binary into the kubernetes node because containerd will execute this binary",
    "start": "863760",
    "end": "869920"
  },
  {
    "text": "every time we need we create a a pot sandbox and the uh the last the last",
    "start": "869920",
    "end": "875199"
  },
  {
    "text": "step is we need to create this runtime class object in Kubernetes to map the",
    "start": "875199",
    "end": "880639"
  },
  {
    "text": "binary and the runtime class name that we will specify in the in the",
    "start": "880639",
    "end": "887240"
  },
  {
    "text": "deployments so the binary okay this is the important part the how we code this",
    "start": "887240",
    "end": "893199"
  },
  {
    "text": "this sim we can use if we are using go we can use the container containerd",
    "start": "893199",
    "end": "898560"
  },
  {
    "text": "library because containerd is written in go so uh we can we need to call this new",
    "start": "898560",
    "end": "904000"
  },
  {
    "text": "sim manager and we register our our sim with the n the same name as we have in",
    "start": "904000",
    "end": "910320"
  },
  {
    "text": "the runtime type uh in the containerd configuration so it has to be the same and then we need these three files only",
    "start": "910320",
    "end": "917360"
  },
  {
    "text": "three files Okay we have this the manager and then we need need to define the plug-in go and the service.go the",
    "start": "917360",
    "end": "923199"
  },
  {
    "text": "service.go is the important part because it needs to implement this huge interface the TTRPC task interface",
    "start": "923199",
    "end": "930480"
  },
  {
    "text": "defined by by containerd and yeah it's quite complex we are I'm not going to",
    "start": "930480",
    "end": "936240"
  },
  {
    "text": "get into the details of all the different methods that needs to be implemented we used the containerd sim",
    "start": "936240",
    "end": "942399"
  },
  {
    "text": "run cb2 uh as a reference because uh it is available that's what containerd is",
    "start": "942399",
    "end": "948959"
  },
  {
    "text": "doing to create the containers in our case our model is also going to be a",
    "start": "948959",
    "end": "954279"
  },
  {
    "text": "container so we can it's easy and it's the and the simple way to write a a",
    "start": "954279",
    "end": "962480"
  },
  {
    "text": "custom sim a container sim so we and actually the most important method that",
    "start": "962480",
    "end": "968800"
  },
  {
    "text": "we need to implement is this create method as you can see we have the create",
    "start": "968800",
    "end": "974079"
  },
  {
    "text": "task request it's the information that h the sim receives when h a task is going",
    "start": "974079",
    "end": "981680"
  },
  {
    "text": "to be created a task is usually a container in the runc context or in a",
    "start": "981680",
    "end": "986800"
  },
  {
    "text": "context is the container model okay and we have in this uh request we have more",
    "start": "986800",
    "end": "993360"
  },
  {
    "text": "parameters but these are the three most important parameters it's the ID the bundle and the root fs the bundle is an",
    "start": "993360",
    "end": "1001279"
  },
  {
    "text": "string uh to a path in our host that stores the information of the container",
    "start": "1001279",
    "end": "1008000"
  },
  {
    "text": "that needs to be created by the sim we have several files the most important",
    "start": "1008000",
    "end": "1013120"
  },
  {
    "text": "one is the config.json file that we see in there okay this config.json is just",
    "start": "1013120",
    "end": "1020800"
  },
  {
    "text": "the declarative definition of the container so what we put inside the pot spec is translated by containerd and is",
    "start": "1020800",
    "end": "1028720"
  },
  {
    "text": "stored in this container.json file with all the information about our uh process",
    "start": "1028720",
    "end": "1035280"
  },
  {
    "text": "container for example the user that is running uh the container or for example the mounts okay the mounts is relevant",
    "start": "1035280",
    "end": "1041760"
  },
  {
    "text": "you will see in the next slide why but we have all the mounts that uh that the",
    "start": "1041760",
    "end": "1046798"
  },
  {
    "text": "container will be available so what because what we are going to do is with",
    "start": "1046799",
    "end": "1052000"
  },
  {
    "text": "our sim uh is we are going to mutate this config.json information that we have in",
    "start": "1052000",
    "end": "1058080"
  },
  {
    "text": "here for example we are going to add one more mount to the to the list of mounts",
    "start": "1058080",
    "end": "1063760"
  },
  {
    "text": "we are going to mount from the host into the container this is the first part and",
    "start": "1063760",
    "end": "1070559"
  },
  {
    "text": "now will be available in the in the container the first part is we need to load our model but with Olama doesn't",
    "start": "1070559",
    "end": "1077520"
  },
  {
    "text": "support to directly read the GGUF model so what we need to do is we need to put",
    "start": "1077520",
    "end": "1083919"
  },
  {
    "text": "this from the name of the model inside this model file name so this is what we",
    "start": "1083919",
    "end": "1090160"
  },
  {
    "text": "are doing with this uh piece of code we are just creating a temporary file the",
    "start": "1090160",
    "end": "1095200"
  },
  {
    "text": "model file name uh with the name of the model the GGUF model that we want to run",
    "start": "1095200",
    "end": "1101600"
  },
  {
    "text": "and we are mounting this model file also into the container and finally we need",
    "start": "1101600",
    "end": "1107600"
  },
  {
    "text": "to initialize the container to expose and to serve the model and we do this by",
    "start": "1107600",
    "end": "1114640"
  },
  {
    "text": "just running and now creating the model from this model file that we we have",
    "start": "1114640",
    "end": "1120480"
  },
  {
    "text": "mounted in the in the previous step so that's it with that we can just uh",
    "start": "1120480",
    "end": "1126160"
  },
  {
    "text": "create our our deployment or our model with the custom runtime class setting in",
    "start": "1126160",
    "end": "1132640"
  },
  {
    "text": "this case it will be our runtime class name and then the containers will be our",
    "start": "1132640",
    "end": "1137679"
  },
  {
    "text": "model we want to create this Q12 model it will be exposed in the port 8080 the",
    "start": "1137679",
    "end": "1144320"
  },
  {
    "text": "model name will be Q12 and the model path uh we need to specify where this uh",
    "start": "1144320",
    "end": "1149440"
  },
  {
    "text": "model is because we can have for example several models in the same image so we need to specify what model we want to",
    "start": "1149440",
    "end": "1156240"
  },
  {
    "text": "load and that's it you will see then in the demo how all this works and for now",
    "start": "1156240",
    "end": "1162320"
  },
  {
    "text": "Lucas will talk about how to integrate this with code flow yeah thank you Samuel has everyone okay for the next 10",
    "start": "1162320",
    "end": "1170400"
  },
  {
    "text": "minutes we are going to talk about like hey now we we've just had so much fun",
    "start": "1170400",
    "end": "1176720"
  },
  {
    "text": "just trying to get in in in Kubernetes why did we use rather than I don't know",
    "start": "1176720",
    "end": "1184559"
  },
  {
    "text": "ger form or something like that because it was just so much fun trying to do that so we are just we're going to try",
    "start": "1184559",
    "end": "1192000"
  },
  {
    "text": "to do the same for the UI after we uh finished our development",
    "start": "1192000",
    "end": "1198640"
  },
  {
    "text": "We thought okay uh how can we translate that into something that the community can use so we look at Qflow which I",
    "start": "1198640",
    "end": "1207520"
  },
  {
    "text": "don't know if you guys are aware it's just part of the CNCF foundation is the MLB platform that right now it's used uh",
    "start": "1207520",
    "end": "1214320"
  },
  {
    "text": "for several components AI related Qflow",
    "start": "1214320",
    "end": "1219679"
  },
  {
    "text": "makes just like ML workflows easier for for users and you can install that in in",
    "start": "1219679",
    "end": "1225280"
  },
  {
    "text": "any cubernetes cluster and Qflow is based on several components installed",
    "start": "1225280",
    "end": "1232000"
  },
  {
    "text": "inside a a central dashboard you are covering most of the MLOps world so with",
    "start": "1232000",
    "end": "1237760"
  },
  {
    "text": "Qflow you install different components such as notebooks pipelines well a",
    "start": "1237760",
    "end": "1244400"
  },
  {
    "text": "central dashboard to get all everything all together KT for parametric hyperparameter tuning KSER which is",
    "start": "1244400",
    "end": "1251760"
  },
  {
    "text": "basically a a service for inference and you can see much of the the workflow the",
    "start": "1251760",
    "end": "1258080"
  },
  {
    "text": "envelopes that we have right there right now we even have model registry which is generally available since yesterday with",
    "start": "1258080",
    "end": "1264960"
  },
  {
    "text": "in in which we released the 1.10 uh version and we thought okay h this is",
    "start": "1264960",
    "end": "1270960"
  },
  {
    "text": "nice and there's so many features right now but can we make lama uh part of that",
    "start": "1270960",
    "end": "1278880"
  },
  {
    "text": "as a model catalog yesterday they announced that they have a backlog for the 1.11 release",
    "start": "1278880",
    "end": "1285679"
  },
  {
    "text": "to get a model catalog inside or like in in the next following release inside this platform so will it it be nice just",
    "start": "1285679",
    "end": "1293520"
  },
  {
    "text": "to try to do a P and and get this same service working in a in a GES cluster",
    "start": "1293520",
    "end": "1301039"
  },
  {
    "text": "and we thought about that two weeks ago and we were like hey do we have time to",
    "start": "1301039",
    "end": "1306480"
  },
  {
    "text": "just display something like that and we were like okay let's really let's just",
    "start": "1306480",
    "end": "1311520"
  },
  {
    "text": "try to b code through through everything and and get something working and that's",
    "start": "1311520",
    "end": "1316960"
  },
  {
    "text": "where we uh started to use the model architecture that it's currently",
    "start": "1316960",
    "end": "1323039"
  },
  {
    "text": "available in model registry model architecture is just one new way of developing um cubeflow components it's",
    "start": "1323039",
    "end": "1331280"
  },
  {
    "text": "just basically there's no rocket science here it's just like a front end and a back end front end in React back end in Golang uh but it's just based on",
    "start": "1331280",
    "end": "1338760"
  },
  {
    "text": "microservices so there's a cool uh set of features that makes the the",
    "start": "1338760",
    "end": "1344480"
  },
  {
    "text": "development experience really really nice so we are we are going to just try to get those things to make um",
    "start": "1344480",
    "end": "1352480"
  },
  {
    "text": "application available in Qflow in no time so the most important of this",
    "start": "1352480",
    "end": "1357760"
  },
  {
    "text": "architecture is that enables contribute contributions from other projects to",
    "start": "1357760",
    "end": "1363799"
  },
  {
    "text": "QFlow so we just thought okay let's just try to do that um so that's what we did",
    "start": "1363799",
    "end": "1371600"
  },
  {
    "text": "like we we got uh a nice UI in in no time to to to have it displayed here so",
    "start": "1371600",
    "end": "1379280"
  },
  {
    "text": "how could we uh do this in no time it's because model architecture serves like",
    "start": "1379280",
    "end": "1385120"
  },
  {
    "text": "different environments to make the the development workflow really easy you",
    "start": "1385120",
    "end": "1390159"
  },
  {
    "text": "have a standalone mocked mode then we get the standalone mode and then integrated uh which are the parts of the",
    "start": "1390159",
    "end": "1396880"
  },
  {
    "text": "demo let's just switch to the to the project itself this is a BS coing",
    "start": "1396880",
    "end": "1402159"
  },
  {
    "text": "instance with the container in Moama here's everything that Samu has explained everything about that so let's",
    "start": "1402159",
    "end": "1408880"
  },
  {
    "text": "just trigger the the first development environment h this is what we call um",
    "start": "1408880",
    "end": "1414559"
  },
  {
    "text": "like the standalone mode for with mock components this means that we are",
    "start": "1414559",
    "end": "1421039"
  },
  {
    "text": "getting the feature as a standalone like outside Qflow but that makes everyone",
    "start": "1421039",
    "end": "1427120"
  },
  {
    "text": "that that everyone can contribute in no time i've just uh like get this this",
    "start": "1427120",
    "end": "1432400"
  },
  {
    "text": "make file command and now hopefully I got here the application enabled uh",
    "start": "1432400",
    "end": "1437840"
  },
  {
    "text": "let's just do something uh because I think I I got it in let's just rerun it",
    "start": "1437840",
    "end": "1445360"
  },
  {
    "text": "again and with that uh let's just reload",
    "start": "1445360",
    "end": "1450480"
  },
  {
    "text": "with with that we have the the UI itself uh as you can see right now there's a model catalog with different models",
    "start": "1450480",
    "end": "1456400"
  },
  {
    "text": "right here uh we got like which is the one that we we've been talking about and some others um and here we can see the",
    "start": "1456400",
    "end": "1465120"
  },
  {
    "text": "model catalog with the description and everything else version i'm not sure if it's like let me just zoom in a little",
    "start": "1465120",
    "end": "1471360"
  },
  {
    "text": "bit more and here there's a nice chat display in which you can uh talk with the model problem is that this is just",
    "start": "1471360",
    "end": "1478000"
  },
  {
    "text": "like if I do a hello world or something like that you see this is a mock response why because this is just for",
    "start": "1478000",
    "end": "1485000"
  },
  {
    "text": "development so here's when where we craft all the the UI that makes us like for example we want to we are frontend",
    "start": "1485000",
    "end": "1491440"
  },
  {
    "text": "contributor and we just want to change this the available models into all our models you can get to the uh actual page",
    "start": "1491440",
    "end": "1499640"
  },
  {
    "text": "and and put something like this and in no time it will be changed into the UI",
    "start": "1499640",
    "end": "1506240"
  },
  {
    "text": "so you don't need to know about Kubernetes or anything else everything is through a swagger specification",
    "start": "1506240",
    "end": "1511440"
  },
  {
    "text": "between the back end and the and the front end so people that knows coland can contribute in the part of back end and people that only knows front end can",
    "start": "1511440",
    "end": "1518320"
  },
  {
    "text": "contribute into that that's already there in the model registry and and we're expanding that into other places",
    "start": "1518320",
    "end": "1523679"
  },
  {
    "text": "uh this is nice but like this is not going anywhere and we are not doing",
    "start": "1523679",
    "end": "1528720"
  },
  {
    "text": "anything with the PC so let's just change to the next environment which is the uh a standalone version but with",
    "start": "1528720",
    "end": "1536240"
  },
  {
    "text": "with a cluster itself so right here we have a a cluster working this cluster is",
    "start": "1536240",
    "end": "1542640"
  },
  {
    "text": "just the the one that Samu has been explaining right here here we have the",
    "start": "1542640",
    "end": "1547679"
  },
  {
    "text": "the cluster conf with the configuration around like all the cmd changes that",
    "start": "1547679",
    "end": "1553760"
  },
  {
    "text": "that we've been doing and the quen model deployed as you can see here we have the",
    "start": "1553760",
    "end": "1559360"
  },
  {
    "text": "deployment with a with the image itself the image that that we we've created",
    "start": "1559360",
    "end": "1565200"
  },
  {
    "text": "with with that and and a service that it's been exposed somewhere um we have",
    "start": "1565200",
    "end": "1572400"
  },
  {
    "text": "this script which is the one that we are using for developing in in cluster this",
    "start": "1572400",
    "end": "1577440"
  },
  {
    "text": "will create you a kind cluster the the way that it's displayed in the in the repository and then it will create a",
    "start": "1577440",
    "end": "1583760"
  },
  {
    "text": "name space is like a default one called Qflow and it will deploy that model right there and then uh it's just like",
    "start": "1583760",
    "end": "1590720"
  },
  {
    "text": "deploying every other um file that it's needed to to do the deployment of UI um",
    "start": "1590720",
    "end": "1597200"
  },
  {
    "text": "everything is done right there let me check if we are in the in the right Yeah we are in the right uh cluster which is",
    "start": "1597200",
    "end": "1603120"
  },
  {
    "text": "the kind of lamaim so I'll just need to expose this uh service and we'll see",
    "start": "1603120",
    "end": "1610880"
  },
  {
    "text": "this uh cool little uh demo right here uh with pretty much everything this is",
    "start": "1610880",
    "end": "1617440"
  },
  {
    "text": "standalone version um we'll see what's the difference between the standalone and and the the other one as we can see",
    "start": "1617440",
    "end": "1624799"
  },
  {
    "text": "the UI has changed right now so let me go back to the development one sec um",
    "start": "1624799",
    "end": "1631840"
  },
  {
    "text": "here I just have it with a with the a component library standalone version",
    "start": "1631840",
    "end": "1637200"
  },
  {
    "text": "which is like this it's patternly and we have a wrapper to get like the look and feel of cubeflow so everyone can",
    "start": "1637200",
    "end": "1642720"
  },
  {
    "text": "contribute and and it will match a library we have right now in in Qflow and it's basically doing that that same",
    "start": "1642720",
    "end": "1649279"
  },
  {
    "text": "thing here this is a kubernetes cluster and as we can see in the cubeflow name space we have the application deployed",
    "start": "1649279",
    "end": "1656960"
  },
  {
    "text": "and then the model itself let's just check the model here are the logs so",
    "start": "1656960",
    "end": "1662400"
  },
  {
    "text": "let's see how can we can interact with with that right now the set of features",
    "start": "1662400",
    "end": "1667760"
  },
  {
    "text": "that has the here is just like we are reading all the uh catalog model from a",
    "start": "1667760",
    "end": "1673679"
  },
  {
    "text": "config map that will change in the future in which we can uh pull those models through an an API but so far we",
    "start": "1673679",
    "end": "1681279"
  },
  {
    "text": "have in the metadata the the service in which the um model is exposed so for",
    "start": "1681279",
    "end": "1686799"
  },
  {
    "text": "that we have enabled the chat interface right here if we go to another model that it's not deployed in the in the",
    "start": "1686799",
    "end": "1692640"
  },
  {
    "text": "cluster you have this which is not implemented yet so if anyone wants to contribute to that feel free and here in",
    "start": "1692640",
    "end": "1699440"
  },
  {
    "text": "the chat model if I just say for example why is cubecon um it will just send the request as you",
    "start": "1699440",
    "end": "1706480"
  },
  {
    "text": "can see in the chat it's just doing all these uh like the inference is just enabling the model like getting the the",
    "start": "1706480",
    "end": "1714240"
  },
  {
    "text": "arc the the name the parameters and everything through the like the the runtime is just uh starting up the the",
    "start": "1714240",
    "end": "1721279"
  },
  {
    "text": "model and doing the inference right here so basically the what is doing behind the scenes it's a golan service is just",
    "start": "1721279",
    "end": "1728159"
  },
  {
    "text": "like talking through the service getting into into getting there and posting asma",
    "start": "1728159",
    "end": "1734240"
  },
  {
    "text": "has the uh open service exposing which you have the",
    "start": "1734240",
    "end": "1740480"
  },
  {
    "text": "generate endpoint to to talk to to your models as it's the same we can implement several different if if your your model",
    "start": "1740480",
    "end": "1747440"
  },
  {
    "text": "is multimodel you can get the other endpoints to just interact with with that model and craft a UI uh with with",
    "start": "1747440",
    "end": "1753919"
  },
  {
    "text": "that so that's that's great now we have the everything working and we've just",
    "start": "1753919",
    "end": "1759600"
  },
  {
    "text": "like touched the um cluster in that second phase next phase is Qflow",
    "start": "1759600",
    "end": "1765600"
  },
  {
    "text": "integration problem with Qflow introduction integration is that Qfl is a really great project but right now",
    "start": "1765600",
    "end": "1772399"
  },
  {
    "text": "it's very cumbersome to install to require 16 gigabytes RAM of GPU CPU",
    "start": "1772399",
    "end": "1777840"
  },
  {
    "text": "cores and that makes like some contributors uh like it's just not great to get a be",
    "start": "1777840",
    "end": "1784799"
  },
  {
    "text": "a newcomer and and just make sure you you had a contributor so that that next step is just like this modular",
    "start": "1784799",
    "end": "1791840"
  },
  {
    "text": "architecture has everything needed to deploy everything into Qflow with that we have a pretty much",
    "start": "1791840",
    "end": "1799279"
  },
  {
    "text": "everything in in this manifest to make it compatible with with the platform as",
    "start": "1799279",
    "end": "1805679"
  },
  {
    "text": "you can see here we have the authorization policy destination rules uh network policies and everything that",
    "start": "1805679",
    "end": "1811200"
  },
  {
    "text": "it's related that that is needed for QFlow let's just change the um runtime",
    "start": "1811200",
    "end": "1817520"
  },
  {
    "text": "like the the context of of of QFlow right here and let's just see that in",
    "start": "1817520",
    "end": "1823120"
  },
  {
    "text": "action so I have a cluster running right now i think I'm connected yeah um with",
    "start": "1823120",
    "end": "1829679"
  },
  {
    "text": "Qflow um enabled right here let's just get there i'll just get here oh this is",
    "start": "1829679",
    "end": "1836720"
  },
  {
    "text": "a spoiler one sec this is a classic running with QFlow itself this a Qflow",
    "start": "1836720",
    "end": "1843039"
  },
  {
    "text": "interface this one is just a mock like the other one that I saw you it's just like to make it the most appealing and",
    "start": "1843039",
    "end": "1849039"
  },
  {
    "text": "the most similar to to that like here are the all the components with Qflow h we are deploying everything that it's",
    "start": "1849039",
    "end": "1856080"
  },
  {
    "text": "available to the in the interface to make it work right here as you can see well here are the name spaces let's just",
    "start": "1856080",
    "end": "1863360"
  },
  {
    "text": "go to the Qflow one here are all the uh pots that we have in in Qflow which are",
    "start": "1863360",
    "end": "1868480"
  },
  {
    "text": "all the components that are running and as you can see we have the yellow lama UI right up and running right running",
    "start": "1868480",
    "end": "1873919"
  },
  {
    "text": "right here so as well as a model registry component that is a new one we made in less than a week a new Qflow",
    "start": "1873919",
    "end": "1882240"
  },
  {
    "text": "component based on onama so here as you as you can see we have the model and we can do the same thing and everything is",
    "start": "1882240",
    "end": "1888640"
  },
  {
    "text": "is right away and and available this is only a P but this is like just to show",
    "start": "1888640",
    "end": "1894960"
  },
  {
    "text": "you guys how we had fun to just implement some idea and and make it available for for something as as a CSCF",
    "start": "1894960",
    "end": "1901760"
  },
  {
    "text": "project in in no time so that's all thank you very much and yeah I hope you",
    "start": "1901760",
    "end": "1907279"
  },
  {
    "text": "all have a a great evening thanks",
    "start": "1907279",
    "end": "1911840"
  }
]