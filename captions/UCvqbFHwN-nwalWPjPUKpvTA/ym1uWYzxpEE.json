[
  {
    "start": "0",
    "end": "186000"
  },
  {
    "text": "thank you all very much for coming I always have to check when I see a crowd this large you're all aware this is a",
    "start": "1970",
    "end": "7500"
  },
  {
    "text": "talk about DNS right right okay so I've",
    "start": "7500",
    "end": "13500"
  },
  {
    "text": "got to be quick since this entire slot is like 35 minutes long but I'm gonna give you like a two slide history of",
    "start": "13500",
    "end": "20400"
  },
  {
    "text": "core DNS the project was started by a guy named Mike eben who you may know",
    "start": "20400",
    "end": "25650"
  },
  {
    "text": "because he actually wrote to earlier DNS servers that were used in containerized",
    "start": "25650",
    "end": "31500"
  },
  {
    "text": "environments sky DNS and sky DNS - and what happened was that he saw caddy and",
    "start": "31500",
    "end": "38430"
  },
  {
    "text": "kind of admired Caddy's architecture and the fact that was plug-in based and he",
    "start": "38430",
    "end": "43559"
  },
  {
    "text": "had written what is really the most popular go language DNS library and sort",
    "start": "43559",
    "end": "50489"
  },
  {
    "text": "of like in the old 1980s Reese's Peanut Butter Cup commercials he thought well okay I've got a go library for DNS",
    "start": "50489",
    "end": "56879"
  },
  {
    "text": "functions and I've got a server architecture and caddy and if I put the two together then I could come up with something like a DNS server written",
    "start": "56879",
    "end": "64650"
  },
  {
    "text": "entirely and go that uses plugins I don't know if you remember this commercial it's the two twenty year olds",
    "start": "64650",
    "end": "70680"
  },
  {
    "text": "who walk into each other around the corner and one of them gets peanut butter and the other ones chocolate the",
    "start": "70680",
    "end": "75810"
  },
  {
    "text": "other one gets chocolate the other ones peanut butter and apparently this is how Reese's peanut butter cups came to be it",
    "start": "75810",
    "end": "81540"
  },
  {
    "text": "made me wonder looking back on it why anyone would walk around with a jar of peanut butter apparently that's",
    "start": "81540",
    "end": "87630"
  },
  {
    "text": "something we did in the eighties but accordion s actually has had a pretty",
    "start": "87630",
    "end": "93540"
  },
  {
    "text": "rapid evolution of we brought it to the CN CF back in 2017 and by December of",
    "start": "93540",
    "end": "100290"
  },
  {
    "text": "last year so only you know 11 months ago it became the default DNS server that",
    "start": "100290",
    "end": "106140"
  },
  {
    "text": "shipped with kubernetes and then just a month later in January of this year it reached graduated status within the",
    "start": "106140",
    "end": "112860"
  },
  {
    "text": "CNC F so we're very pleased with its with its success now some of you may be",
    "start": "112860",
    "end": "119610"
  },
  {
    "text": "thinking to yourselves why do I need a new DNS server why why cordilla Nass versus the old cubed DNS or any of the",
    "start": "119610",
    "end": "126390"
  },
  {
    "text": "alternatives out there one reason is the core DNS is written entirely and go so",
    "start": "126390",
    "end": "131700"
  },
  {
    "text": "it is memory safe there it has built-in very straightforward kubernetes integration",
    "start": "131700",
    "end": "138060"
  },
  {
    "text": "so very easy to use with kubernetes and somewhere out here is sandeep who had a",
    "start": "138060",
    "end": "144450"
  },
  {
    "text": "lot to do with actually writing that kubernetes integration and as did john and it has this plugin architecture and",
    "start": "144450",
    "end": "151350"
  },
  {
    "text": "there's this very rich ecosystem of plugins that do all kinds of interesting things some of them not entirely obvious",
    "start": "151350",
    "end": "158760"
  },
  {
    "text": "to you and and that's really what this session is about more of them are being written all the time I think we just",
    "start": "158760",
    "end": "163980"
  },
  {
    "text": "checked one in the policy the policy plug yeah which is a major enhancement",
    "start": "163980",
    "end": "169380"
  },
  {
    "text": "allows you to call out to OPA for example to make policy decisions within your DNS server based on things that",
    "start": "169380",
    "end": "176519"
  },
  {
    "text": "dopa may tell you and it's easy for some value of easy to write your own plugins which is to say that I couldn't do it",
    "start": "176519",
    "end": "183630"
  },
  {
    "text": "but John could do it so I'm gonna spend a little bit of time talking about DNS",
    "start": "183630",
    "end": "189630"
  },
  {
    "start": "186000",
    "end": "620000"
  },
  {
    "text": "SEC support in accordion s a lot of this stuff it was added because I think meek is really a proponent of DNS SEC for",
    "start": "189630",
    "end": "197340"
  },
  {
    "text": "those of you who have been paying attention to DNS for the last 20 years or so we've been working on DNS SEC",
    "start": "197340",
    "end": "203040"
  },
  {
    "text": "right the DNS security extensions these are cryptographic extensions to DNS that allow you basically to digitally sign",
    "start": "203040",
    "end": "209880"
  },
  {
    "text": "zone data and they also allow suitably configured recursive DNS servers to",
    "start": "209880",
    "end": "216060"
  },
  {
    "text": "cryptographically validate that signed data and that's important because that cryptographic validation shows you two",
    "start": "216060",
    "end": "221910"
  },
  {
    "text": "things one that it really came from the zone you thought it did for example that the ipv4 address for WWE google.com is",
    "start": "221910",
    "end": "230220"
  },
  {
    "text": "the one that Google signed initially and also it proves that it hasn't been modified since it was signed and that's",
    "start": "230220",
    "end": "237209"
  },
  {
    "text": "important because you might be getting it out of the cache of a DNS server and the intermediate DNS server but you",
    "start": "237209",
    "end": "243060"
  },
  {
    "text": "don't necessarily have any trust relationship with and this should be important to those of you who are",
    "start": "243060",
    "end": "249060"
  },
  {
    "text": "advertising DNS data to access services that you might have running within your",
    "start": "249060",
    "end": "255090"
  },
  {
    "text": "kubernetes cluster because you don't want that stuff modified right you want people to be able to trust the fact that they're really getting to the endpoints",
    "start": "255090",
    "end": "262349"
  },
  {
    "text": "that you think they should be getting to we call signing the process of actually adding the digital",
    "start": "262349",
    "end": "270300"
  },
  {
    "text": "signatures to a DNS zone their particular resource records called are",
    "start": "270300",
    "end": "275639"
  },
  {
    "text": "our sig records and there are different ways to do signing we'll talk about a couple of them that Cordina supports at",
    "start": "275639",
    "end": "281880"
  },
  {
    "text": "this point most of the top-level zones out on the internet event sign so the root zone has been signed ComNet most of",
    "start": "281880",
    "end": "288690"
  },
  {
    "text": "the country code top-level domains have been signed so you have a continuous chain of trust as we call it from the",
    "start": "288690",
    "end": "295260"
  },
  {
    "text": "top of the Internet's namespace - you know almost any place in the hierarchy",
    "start": "295260",
    "end": "300500"
  },
  {
    "text": "and most operators of big cloud-based recursive DNS services like Google",
    "start": "300500",
    "end": "306720"
  },
  {
    "text": "Public DNS CloudFlare which runs one dot one dot one dot one quad nine these guys",
    "start": "306720",
    "end": "312990"
  },
  {
    "text": "all support cryptographic validation using DNS X so these are all good good reasons to deploy it in a sec",
    "start": "312990",
    "end": "319470"
  },
  {
    "text": "unfortunately DNS Act for a long time was a pain in the ass to implement core",
    "start": "319470",
    "end": "326190"
  },
  {
    "text": "DNS really tries to make it very easy to do DNS ACK there are two different types of DNS SEC that are supported one of",
    "start": "326190",
    "end": "333000"
  },
  {
    "text": "them signing on the fly which you can use with just about anything anything that will for example dynamically",
    "start": "333000",
    "end": "339120"
  },
  {
    "text": "generate or synthesize resource records within core DNS can also then sign those",
    "start": "339120",
    "end": "344820"
  },
  {
    "text": "records and then there's the more traditional method of signing DNS data",
    "start": "344820",
    "end": "350010"
  },
  {
    "text": "supported by DNS SEC or a bike or DNS which is actually adding those are our",
    "start": "350010",
    "end": "355139"
  },
  {
    "text": "sig records those cryptographic signatures to zone Dadaism and we'll talk about both of those so this is the",
    "start": "355139",
    "end": "362820"
  },
  {
    "text": "way that you would sign on the fly with the DNS sack plugin the first thing you",
    "start": "362820",
    "end": "368340"
  },
  {
    "text": "do is you create either a common signing key which is a single asymmetric key",
    "start": "368340",
    "end": "374070"
  },
  {
    "text": "pair that you're going to use with a zone for signing or you can use a split",
    "start": "374070",
    "end": "379590"
  },
  {
    "text": "key arrangement called a key signing key and a zone signing key that's done for for practical reasons basically the",
    "start": "379590",
    "end": "386340"
  },
  {
    "text": "reason you do that is because if you use the same key over and over and over again to generate these signatures then",
    "start": "386340",
    "end": "392250"
  },
  {
    "text": "you send you tend to sort of use up the key those of you who know cryptic cryptography better than I do understand",
    "start": "392250",
    "end": "397560"
  },
  {
    "text": "this and then you have to rotate keep periodically if you do that you only have a single key then you also",
    "start": "397560",
    "end": "402769"
  },
  {
    "text": "need to communicate the fact that you rolled it rolled the key over to your parent and that's a real pain if you",
    "start": "402769",
    "end": "407839"
  },
  {
    "text": "split those functions into a key signing key in a zone signing key then you can keep signing and then only when you when",
    "start": "407839",
    "end": "416209"
  },
  {
    "text": "you roll over the zone signing key then you just resigned with your key signing key it's only when the key signing key",
    "start": "416209",
    "end": "422029"
  },
  {
    "text": "changes that you have to communicate that to your parent so here's a command that you'd use with a program called DNS",
    "start": "422029",
    "end": "429199"
  },
  {
    "text": "SEC - key gen this generates a key pair for you in particular here we're using ECDSA which is going to looked at curve",
    "start": "429199",
    "end": "436629"
  },
  {
    "text": "asymmetric algorithm is what all the cool kids use now because it produces nice small signatures or relatively",
    "start": "436629",
    "end": "442939"
  },
  {
    "text": "small signatures so you should probably do that too and this will generate two files it'll print in the output what's",
    "start": "442939",
    "end": "450439"
  },
  {
    "text": "called the base name the two files are the base name plus key which contains the public key and the base name dot",
    "start": "450439",
    "end": "457039"
  },
  {
    "text": "private which is the private key which of course you should keep it private and then you add the DNS I plug into your",
    "start": "457039",
    "end": "463579"
  },
  {
    "text": "server block so here's an example of a zone called food example and food out example already has its own data file",
    "start": "463579",
    "end": "470059"
  },
  {
    "text": "called DB food out example we have the new DNS SEC plug-in below that and we just refer to the base name so we just",
    "start": "470059",
    "end": "476509"
  },
  {
    "text": "say key file and then whatever the base name is so the name of the key file or",
    "start": "476509",
    "end": "481579"
  },
  {
    "text": "the dot private file without the suffix and that's really it right now when you",
    "start": "481579",
    "end": "488419"
  },
  {
    "text": "send queries to your accordion as instance and you indicate the plus DNS SEC flag you can see that you get a",
    "start": "488419",
    "end": "494719"
  },
  {
    "text": "whole bunch of additional data you can see for example in the answer section when we looked up the SOA record for",
    "start": "494719",
    "end": "500959"
  },
  {
    "text": "food out example we also get an R our cig record for food out example which is the digital signature that covers that",
    "start": "500959",
    "end": "506719"
  },
  {
    "text": "SOA record it allows someone to validate that SOA record similarly in the authority section we have the two NS",
    "start": "506719",
    "end": "512328"
  },
  {
    "text": "records for the zone we also have a corresponding are our cig record which will allow you to cryptograph",
    "start": "512329",
    "end": "517578"
  },
  {
    "text": "cryptographically validate those NS records cool right super easy",
    "start": "517579",
    "end": "523080"
  },
  {
    "text": "and it's important to note again this works even if you're not dealing with a file even if you're dealing with",
    "start": "523080",
    "end": "529260"
  },
  {
    "text": "something like the kubernetes plugin where you're actually synthesizing data that you're pulling out of Kerber Nettie's via an API you can still",
    "start": "529260",
    "end": "535410"
  },
  {
    "text": "cryptographically sign that data the sign plug-in is a more traditional way",
    "start": "535410",
    "end": "541140"
  },
  {
    "text": "of doing DNS SEC right this is manually adding those are our sick records to a zone data file but it",
    "start": "541140",
    "end": "548370"
  },
  {
    "text": "does it I said manually but it does it all by itself the one limitation here is that you have",
    "start": "548370",
    "end": "555959"
  },
  {
    "text": "to use a common signing key it doesn't support the zone signing key key signing key split so again here's how you do",
    "start": "555959",
    "end": "563130"
  },
  {
    "text": "that you generate your common signing key I didn't do this but it's easy enough to do just like you did before with DNS SEC - key gen you add the sign",
    "start": "563130",
    "end": "570510"
  },
  {
    "text": "plug in to the server block that handles queries for a particular zone here you",
    "start": "570510",
    "end": "575579"
  },
  {
    "text": "see Bart out example and reloading it from a file that we're gonna call DB bar.example.com out example that's",
    "start": "575579",
    "end": "587790"
  },
  {
    "text": "what's gonna generate the file DB bar.example.com",
    "start": "587790",
    "end": "593240"
  },
  {
    "text": "forward and again after we reload our core DNS instance we get nice signatures",
    "start": "600529",
    "end": "608130"
  },
  {
    "text": "within our zone data file now this might be the preferable way to do it if for",
    "start": "608130",
    "end": "613470"
  },
  {
    "text": "example you were then transferring this zone to other non core DNS name servers",
    "start": "613470",
    "end": "620690"
  },
  {
    "start": "620000",
    "end": "798000"
  },
  {
    "text": "and then the other thing I wanted to talk about just briefly is DNS over TLS",
    "start": "620720",
    "end": "626310"
  },
  {
    "text": "how many of you have heard of DNS over TLS or dot great ok so that's been",
    "start": "626310",
    "end": "631589"
  },
  {
    "text": "supported by core DNS for some time it can handle queries that are received",
    "start": "631589",
    "end": "637649"
  },
  {
    "text": "over TLS it's very easy to do all you have to do is within your server block rather than just having a domain name",
    "start": "637649",
    "end": "643380"
  },
  {
    "text": "you use something that looks like a URI TLS colon slash slash and then whatever the scope is so if it's every query that",
    "start": "643380",
    "end": "650970"
  },
  {
    "text": "you want to handle over TLS it would look like TLS colon slash last dot and then in this top",
    "start": "650970",
    "end": "656819"
  },
  {
    "text": "example we're just gonna forward all queries over to Google Public DNS at 888",
    "start": "656819",
    "end": "662009"
  },
  {
    "text": "888 4.4 and we're gonna cache responses if you just wanted to limit the scope",
    "start": "662009",
    "end": "668129"
  },
  {
    "text": "and say hey I just want to handle TLS queries within food out example it looked like the example down at the",
    "start": "668129",
    "end": "673319"
  },
  {
    "text": "bottom and there's also some tuning and tweaking that you can do of course in order to handle those queries that are",
    "start": "673319",
    "end": "679429"
  },
  {
    "text": "received over DNS over TLS you have to have some sort of a certificate this is",
    "start": "679429",
    "end": "684449"
  },
  {
    "text": "just what you guys will recognize as an open SSL command to generate a TLS sir",
    "start": "684449",
    "end": "691319"
  },
  {
    "text": "that you can then install and then below that there's a TLS TLS plug-in there",
    "start": "691319",
    "end": "698669"
  },
  {
    "text": "where it actually names both the cert in the key file and in fact if you want to",
    "start": "698669",
    "end": "705179"
  },
  {
    "text": "help sorry this is this is just verifying that you are in fact talking",
    "start": "705179",
    "end": "710339"
  },
  {
    "text": "over TLS so I used open SSL to actually connect to the running core dns instance",
    "start": "710339",
    "end": "717359"
  },
  {
    "text": "and make sure that it was talking over Tiana's is it HTTPS this is not HTTPS",
    "start": "717359",
    "end": "725489"
  },
  {
    "text": "this is actually DNS directly over TLS ODOT for short dns over https we called",
    "start": "725489",
    "end": "731369"
  },
  {
    "text": "au for short and that's dns over HTTP over TLS which is from a protocol",
    "start": "731369",
    "end": "738899"
  },
  {
    "text": "standpoint kind of an abomination but we're not going to go there today all",
    "start": "738899",
    "end": "746759"
  },
  {
    "text": "right you can also do some configuration on the client side so for example if you wanted core dns to use TLS to",
    "start": "746759",
    "end": "753539"
  },
  {
    "text": "communicate with something else you can do that so for example here we're forwarding all of our queries up to",
    "start": "753539",
    "end": "761970"
  },
  {
    "text": "Google Public DNS which supports DNS over TLS and we're pointed forward those over dot rather than just over DNS over",
    "start": "761970",
    "end": "768689"
  },
  {
    "text": "port 53 so we just add that TLS colon slash slash 8.8.8.8 right and in fact",
    "start": "768689",
    "end": "775229"
  },
  {
    "text": "you can specify client authentication if you want to the CA that you're going to",
    "start": "775229",
    "end": "781889"
  },
  {
    "text": "assert the TLS server name and stuff like that using the format that you see down at the bottom with services like",
    "start": "781889",
    "end": "788069"
  },
  {
    "text": "for example Google public it's not generally necessary to do that Google doesn't care about your client",
    "start": "788069",
    "end": "793899"
  },
  {
    "text": "auth stuff right they're not gonna demand that and then the last thing that",
    "start": "793899",
    "end": "800890"
  },
  {
    "start": "798000",
    "end": "902000"
  },
  {
    "text": "I wanted to talk about was just managing his own data with give this is something that we cover in in learning DNS as well",
    "start": "800890",
    "end": "806760"
  },
  {
    "text": "most of you guys probably use get on a day to day basis right and maybe you think it would be fun to manage your",
    "start": "806760",
    "end": "813459"
  },
  {
    "text": "zone data with git as well because it gives you the ability to have distributed management of zone data you can roll back",
    "start": "813459",
    "end": "819010"
  },
  {
    "text": "you've got version control you've got all kinds of cool stuff and so this is an example of using git and a special",
    "start": "819010",
    "end": "825670"
  },
  {
    "text": "plug-in called the auto plug-in in order to do that so the auto plug-in basically",
    "start": "825670",
    "end": "831269"
  },
  {
    "text": "allows Cortinas to scan an entire directory to say I'm gonna scan this",
    "start": "831269",
    "end": "836290"
  },
  {
    "text": "entire directory and I'm gonna look for files that match a certain pattern if they match that pattern I'm going to assume that they are zone data files and",
    "start": "836290",
    "end": "843339"
  },
  {
    "text": "I'm also going to extract the domain name of the zone from the fun here's how",
    "start": "843339",
    "end": "849190"
  },
  {
    "text": "we do that this auto direct our auto plug-in says look at the directory at C",
    "start": "849190",
    "end": "854500"
  },
  {
    "text": "core DNS and look for any files that start with DB dot something or other and that dot something-or-other everything",
    "start": "854500",
    "end": "861430"
  },
  {
    "text": "after that first dot that's the domain name of the zone and reload every 1",
    "start": "861430",
    "end": "867220"
  },
  {
    "text": "minute so scan this directory every 1 minute anything that I put in here boom load it assume that that's a zone data",
    "start": "867220",
    "end": "873490"
  },
  {
    "text": "file and you ought to be authoritative for that zone so the other half of this is that we obviously have to have some",
    "start": "873490",
    "end": "878980"
  },
  {
    "text": "sort of a program in order to pull information out of git and then plunk it",
    "start": "878980",
    "end": "884260"
  },
  {
    "text": "in that directory so here's an example of a little program called get sync which you can get from the kubernetes",
    "start": "884260",
    "end": "890890"
  },
  {
    "text": "distribution and you can use it to periodically synchronize this zone data using for example a command line like",
    "start": "890890",
    "end": "897880"
  },
  {
    "text": "this and so that I think is the end of what I have I think I get to turn this",
    "start": "897880",
    "end": "903910"
  },
  {
    "start": "902000",
    "end": "975000"
  },
  {
    "text": "over to you sure absolutely so John Boehner all right thank you all right",
    "start": "903910",
    "end": "910170"
  },
  {
    "text": "all right now we'll talk about I'll talk about a couple of little fancy tricks you can do things that you may not",
    "start": "913880",
    "end": "920730"
  },
  {
    "text": "expect to be able to do with your DNS server so core DNS because of this",
    "start": "920730",
    "end": "927600"
  },
  {
    "text": "plug-in type of architecture each of those plugins has an opportunity to make a decision about what to do with the",
    "start": "927600",
    "end": "933840"
  },
  {
    "text": "requests or the response going back and so built in there are several plugins",
    "start": "933840",
    "end": "939510"
  },
  {
    "text": "that will do things things like that some of them are very simple we have one called this load balance plug-in where",
    "start": "939510",
    "end": "944700"
  },
  {
    "text": "if you query for say a records with a given name and you get back three or",
    "start": "944700",
    "end": "950280"
  },
  {
    "text": "four records it'll just shuffle the order and that way you can use it kind of as a dns-based load balancer a lot of",
    "start": "950280",
    "end": "956730"
  },
  {
    "text": "clients will just take the first one and this way even if if the client is not too bright and just takes the first one",
    "start": "956730",
    "end": "961980"
  },
  {
    "text": "then you know it'll still work but then there's other fancier things I list a",
    "start": "961980",
    "end": "969000"
  },
  {
    "text": "few here I'm gonna show you what the configurations would look like they're for those the the first one was template",
    "start": "969000",
    "end": "976890"
  },
  {
    "start": "975000",
    "end": "1244000"
  },
  {
    "text": "so template lets you you synthesize data so like cricket was saying you know",
    "start": "976890",
    "end": "982440"
  },
  {
    "text": "sometimes we read data from a file but we also can pull data or just generate data or pull data from another source so",
    "start": "982440",
    "end": "989700"
  },
  {
    "text": "the kubernetes plugin pulls data from the communities API the file from a file there's actually ones for pulling things",
    "start": "989700",
    "end": "996420"
  },
  {
    "text": "from from format CD or from post press but the template one actually will just",
    "start": "996420",
    "end": "1003140"
  },
  {
    "text": "manufacture them out of whole cloth so this this little core file here describes how to create a template that",
    "start": "1003140",
    "end": "1012460"
  },
  {
    "text": "that that will essentially create generic generic entries for a certain",
    "start": "1012460",
    "end": "1019310"
  },
  {
    "text": "pattern of domain name so in this case IP - a dashed quad dot example comm will",
    "start": "1019310",
    "end": "1027530"
  },
  {
    "text": "return that that dot that as a dotted quad for a record requests it will",
    "start": "1027530",
    "end": "1032660"
  },
  {
    "text": "return nothing for any other record requests because according to spec you",
    "start": "1032660",
    "end": "1038750"
  },
  {
    "text": "shouldn't return on an X domain if there's some value for some record at that name even if it's not the one people are",
    "start": "1038750",
    "end": "1044619"
  },
  {
    "text": "asking for and then if you ask for anything that doesn't match that pattern it will it will it will respond with an",
    "start": "1044619",
    "end": "1050559"
  },
  {
    "text": "X domain no such no such domain so a couple of interesting things to note here so the the template the way it",
    "start": "1050559",
    "end": "1060249"
  },
  {
    "text": "works is you can list it multiple times and the as a request is processed each",
    "start": "1060249",
    "end": "1067059"
  },
  {
    "text": "template stands on each time each instance of the stanza here the template plugin will check if the query matches",
    "start": "1067059",
    "end": "1075090"
  },
  {
    "text": "this in this case hideous regular expression and and if it does then it",
    "start": "1075090",
    "end": "1083049"
  },
  {
    "text": "will answer and the answer here is is basically you can use go templating but",
    "start": "1083049",
    "end": "1088600"
  },
  {
    "text": "it's essentially a look should look like just what you put in its own file so it's just an RFC compliant statement of",
    "start": "1088600",
    "end": "1096070"
  },
  {
    "text": "a record here in this case we're gonna do the name there's in the documentation",
    "start": "1096070",
    "end": "1101739"
  },
  {
    "text": "you'd find the specific values that you can use in this template name and we're",
    "start": "1101739",
    "end": "1106929"
  },
  {
    "text": "gonna capture from these groups group a b c and d which is what these this",
    "start": "1106929",
    "end": "1112090"
  },
  {
    "text": "regular expression up here shows you the it creates these named named groups in",
    "start": "1112090",
    "end": "1119230"
  },
  {
    "text": "the regular expression capture the next thing you see here highlighted in red is false lips is fall through so typically",
    "start": "1119230",
    "end": "1128379"
  },
  {
    "text": "within the way that accordion has plug-in works is the expectation is that",
    "start": "1128379",
    "end": "1133809"
  },
  {
    "text": "the plug-in would be authoritative for the zone in which its Manette's handling",
    "start": "1133809",
    "end": "1140350"
  },
  {
    "text": "and so normally a if a plug-in receives",
    "start": "1140350",
    "end": "1147190"
  },
  {
    "text": "a query and processes it and say it doesn't find a result it will just",
    "start": "1147190",
    "end": "1153340"
  },
  {
    "text": "return an X domain but some of the plugins we want to allow to take a look",
    "start": "1153340",
    "end": "1160749"
  },
  {
    "text": "at the request decide whether or not they know anything about it but if they",
    "start": "1160749",
    "end": "1165820"
  },
  {
    "text": "don't know anything about it pass it on to the to the next next plugin in the",
    "start": "1165820",
    "end": "1171159"
  },
  {
    "text": "chain so that's what fall 3 does essentially if you get back or the the if the request if this",
    "start": "1171159",
    "end": "1178010"
  },
  {
    "text": "plugins analysis of the request determines that it's an NX domain rather",
    "start": "1178010",
    "end": "1184460"
  },
  {
    "text": "than returning NX domain and falls through the next plug-in and just passes it on so in this case when you get a",
    "start": "1184460",
    "end": "1192260"
  },
  {
    "text": "match for something that's not an a record and it's any other type of record",
    "start": "1192260",
    "end": "1198410"
  },
  {
    "text": "but it still matches the regular expression that we showed up here then",
    "start": "1198410",
    "end": "1204640"
  },
  {
    "text": "we're going to return the no error our code basically it's it's saying",
    "start": "1204640",
    "end": "1210230"
  },
  {
    "text": "everything was good all successful but we're not actually returning any answer we're just returning in our code just",
    "start": "1210230",
    "end": "1215570"
  },
  {
    "text": "data so the template will allow you to specify an answer or an additional section it's a number of different",
    "start": "1215570",
    "end": "1221740"
  },
  {
    "text": "pieces of the response that you can template eyes finally that falls through",
    "start": "1221740",
    "end": "1226910"
  },
  {
    "text": "to if if the match does not match here so this is how we handle this third case",
    "start": "1226910",
    "end": "1232100"
  },
  {
    "text": "a foo.example.com is in that case we're saying well we don't want to play just",
    "start": "1232100",
    "end": "1237500"
  },
  {
    "text": "want to reply there's no such to me because it doesn't match any of our our template patterns now we can take that",
    "start": "1237500",
    "end": "1246100"
  },
  {
    "start": "1244000",
    "end": "1417000"
  },
  {
    "text": "another step and once we've written all those complicated templates maybe we",
    "start": "1246100",
    "end": "1251120"
  },
  {
    "text": "don't want to have to do the same thing for dot-org and as we did for calm in",
    "start": "1251120",
    "end": "1258560"
  },
  {
    "text": "fact there's there's some other ways to do this but but well you'll notice in here right calm is in here so in order",
    "start": "1258560",
    "end": "1265490"
  },
  {
    "text": "to still match the regular expression but have the exact same behavior for our org we can use something called the",
    "start": "1265490",
    "end": "1270890"
  },
  {
    "text": "rewrite plugin rewrite work sort of like an HTTP right HTTP rewrite in an Apache",
    "start": "1270890",
    "end": "1277430"
  },
  {
    "text": "or caddy where we can look at the input and then we can we can tweak the result",
    "start": "1277430",
    "end": "1283370"
  },
  {
    "text": "and then pass it on to the next plug-in so this is another way to manipulate things in this particular case I'm going",
    "start": "1283370",
    "end": "1289310"
  },
  {
    "text": "to manipulate the name I'm gonna take any request that comes in from org and",
    "start": "1289310",
    "end": "1296540"
  },
  {
    "text": "I'm going to map that org to comm and then I'm gonna pass it back down the chain whatever those plugins down the",
    "start": "1296540",
    "end": "1303560"
  },
  {
    "text": "chain do with it they'll send back a response I'll take that response and this second",
    "start": "1303560",
    "end": "1310820"
  },
  {
    "text": "part of it here says modify the answer to flip it back the other way now the",
    "start": "1310820",
    "end": "1316940"
  },
  {
    "text": "reason we do this if if a DNS server returns a query and the answer in the in",
    "start": "1316940",
    "end": "1325640"
  },
  {
    "text": "the response doesn't match the answer that the client said initially properly",
    "start": "1325640",
    "end": "1331640"
  },
  {
    "text": "behaving clients or careful clients will reject that I mean it's just an anti spoofing or say it's a security measure",
    "start": "1331640",
    "end": "1337820"
  },
  {
    "text": "to avoid manipulation in the transport so we of course have to subvert that",
    "start": "1337820",
    "end": "1345260"
  },
  {
    "text": "security measure and go ahead and trick it in order to tell it that it's that",
    "start": "1345260",
    "end": "1351980"
  },
  {
    "text": "it's that's calm so this is actually also useful here I'm using it for sort",
    "start": "1351980",
    "end": "1357380"
  },
  {
    "text": "of very simple purpose but this can also be useful in situations for example in",
    "start": "1357380",
    "end": "1364220"
  },
  {
    "text": "kubernetes where you'd like to use the same certificate for a service for",
    "start": "1364220",
    "end": "1370100"
  },
  {
    "text": "external traffic and internal traffic so say you've got a certificate for foo.example.com and internally when things are referring",
    "start": "1370100",
    "end": "1377510"
  },
  {
    "text": "to that service they're going to refer to it as food that namespace that SVC not cluster dot local well that's not",
    "start": "1377510",
    "end": "1383450"
  },
  {
    "text": "going to match the certificate and things are going to fail you could actually program the DNS server such that internal clients can also use food",
    "start": "1383450",
    "end": "1391910"
  },
  {
    "text": "at example.com and then or DNS would translate that into the service name the",
    "start": "1391910",
    "end": "1398960"
  },
  {
    "text": "the kubernetes style service name pass it on to the kubernetes plugin which returns the correct IP address then and",
    "start": "1398960",
    "end": "1405650"
  },
  {
    "text": "map it back so from the point of view of the clients TLS it all looks good in the",
    "start": "1405650",
    "end": "1412730"
  },
  {
    "text": "handshake succeeds another one I wanted",
    "start": "1412730",
    "end": "1418730"
  },
  {
    "start": "1417000",
    "end": "1730000"
  },
  {
    "text": "to talk about are several different different plugins and I'm going to demo this one in a minute is the metadata",
    "start": "1418730",
    "end": "1425390"
  },
  {
    "text": "plug-in and in the firewall plug-in so built into Cordy and a standard default",
    "start": "1425390",
    "end": "1431950"
  },
  {
    "text": "image that you get there's a there's an apple plug-in and that aqua plug-in",
    "start": "1431950",
    "end": "1438110"
  },
  {
    "text": "allows you to control required to block requests that based on",
    "start": "1438110",
    "end": "1444770"
  },
  {
    "text": "the IP address of the the client but we also have as an externally buildable",
    "start": "1444770",
    "end": "1451730"
  },
  {
    "text": "plug in the firewall plug-in that allows you to do arbitrary expressions based on",
    "start": "1451730",
    "end": "1459320"
  },
  {
    "text": "the data that's in the request and also based on this thing we call metadata in the request and in fact it even allows",
    "start": "1459320",
    "end": "1466070"
  },
  {
    "text": "you it does arbitrary expressions simply in the in in the core file directly but",
    "start": "1466070",
    "end": "1471470"
  },
  {
    "text": "in fact you can also use it to call out to either opa or which was the thing we",
    "start": "1471470",
    "end": "1478730"
  },
  {
    "text": "mentioned earlier that's just recently merged like yesterday that you can call out to oppa but you can also call out to",
    "start": "1478730",
    "end": "1484070"
  },
  {
    "text": "info boxes internal or open source policy engine that they use in some of their projects which is where this was",
    "start": "1484070",
    "end": "1490070"
  },
  {
    "text": "originally developed but in any case what I'll show you is an example where",
    "start": "1490070",
    "end": "1497080"
  },
  {
    "text": "we can actually allow we essentially password protect our DNS server such",
    "start": "1497080",
    "end": "1502640"
  },
  {
    "text": "that only clients that pass this proper a DNS option can can make use of the",
    "start": "1502640",
    "end": "1508910"
  },
  {
    "text": "server a little background there eating as extensions for DNS is a way to attach",
    "start": "1508910",
    "end": "1516350"
  },
  {
    "text": "additional data additional options with",
    "start": "1516350",
    "end": "1522440"
  },
  {
    "text": "a data value typically to any given request and that can be interpreted by",
    "start": "1522440",
    "end": "1527630"
  },
  {
    "text": "the server however you want so this is used often like probably your home router actually uses this it attaches",
    "start": "1527630",
    "end": "1534440"
  },
  {
    "text": "the the client subnet and that helps the service provider decide what response to",
    "start": "1534440",
    "end": "1541010"
  },
  {
    "text": "give you based on your how near some",
    "start": "1541010",
    "end": "1547520"
  },
  {
    "text": "given server is to your client subnet or something like that so it's a pretty widespread thing it your your individual",
    "start": "1547520",
    "end": "1552950"
  },
  {
    "text": "clients don't use it but typically but it is something in the infrastructure so",
    "start": "1552950",
    "end": "1559570"
  },
  {
    "text": "important as plugins metadata is something that that that it's a way for",
    "start": "1559570",
    "end": "1567950"
  },
  {
    "text": "any plug-in to sort of publish information that can be used by other plugins so",
    "start": "1567950",
    "end": "1573780"
  },
  {
    "text": "for example the kubernetes if you enable metadata the kubernetes plugin will publish it'll break down the request and",
    "start": "1573780",
    "end": "1582060"
  },
  {
    "text": "publish like the the namespace as as as a namespace you know under this tag",
    "start": "1582060",
    "end": "1587790"
  },
  {
    "text": "namespace or the you know the service name and then you can use those later in",
    "start": "1587790",
    "end": "1594060"
  },
  {
    "text": "your logs so if you wanted to log log things specifically in a specific safe",
    "start": "1594060",
    "end": "1601800"
  },
  {
    "text": "structured log you could do that using the metadata one and in fact with kubernetes we have the ability to enable",
    "start": "1601800",
    "end": "1609750"
  },
  {
    "text": "it called pods verified mode which which will listen on pods and when it does",
    "start": "1609750",
    "end": "1614970"
  },
  {
    "text": "that and actually will map back in the metadata it'll take the source IP and map that back to the original pod so you could",
    "start": "1614970",
    "end": "1621330"
  },
  {
    "text": "actually log in your dns logs the both",
    "start": "1621330",
    "end": "1627000"
  },
  {
    "text": "the source IP the source pod name and source namespace of the client as well",
    "start": "1627000",
    "end": "1633810"
  },
  {
    "text": "as of the server so that could be useful and and with firewall actually operate on that so i'll mention a few things you",
    "start": "1633810",
    "end": "1640860"
  },
  {
    "text": "can do with that later but any case our situation here what it does is metadata",
    "start": "1640860",
    "end": "1646350"
  },
  {
    "text": "simply enables the metadata plugin since it when the request comes in the",
    "start": "1646350",
    "end": "1651810"
  },
  {
    "text": "metadata plugin picks it up and actually call all the other plugins before they even see the request and sort of give",
    "start": "1651810",
    "end": "1658320"
  },
  {
    "text": "them a sneak peek of it so they can parse it and do whatever they want and look up data somewhere if they need to and then it'll pass it down the chain",
    "start": "1658320",
    "end": "1664080"
  },
  {
    "text": "the metadata Idina zero is used to parse metadata take take those EDS options",
    "start": "1664080",
    "end": "1671190"
  },
  {
    "text": "that were attached to the request parse them out and publish them within this metadata for other plugins to use so in",
    "start": "1671190",
    "end": "1678660"
  },
  {
    "text": "this case what it's going to do it's going to create a metadata tag named",
    "start": "1678660",
    "end": "1684630"
  },
  {
    "text": "secret and it's going to do that by parsing option 65,000 200 out as bytes",
    "start": "1684630",
    "end": "1691350"
  },
  {
    "text": "and just sticking that in as the data value the firewall plug-in is smart",
    "start": "1691350",
    "end": "1697080"
  },
  {
    "text": "enough to take advantage of that and allow you to create this expression so",
    "start": "1697080",
    "end": "1702300"
  },
  {
    "text": "here this refers to that metadata metadata D&C are secret and it's saying only allow this to",
    "start": "1702300",
    "end": "1708860"
  },
  {
    "text": "proceed if the option attached contains this value so this is essentially our",
    "start": "1708860",
    "end": "1716090"
  },
  {
    "text": "password and for for this DNS server otherwise we're going to we're going to",
    "start": "1716090",
    "end": "1722930"
  },
  {
    "text": "refuse all other queries that's what refuse true means so let's give it a try",
    "start": "1722930",
    "end": "1729140"
  },
  {
    "text": "and so what I have here I have my I have",
    "start": "1729140",
    "end": "1739520"
  },
  {
    "text": "this core file which is just what we just saw and I will run accordion s here",
    "start": "1739520",
    "end": "1754100"
  },
  {
    "text": "and then we can try I'm gonna run a client as well just alright and let's",
    "start": "1754100",
    "end": "1764480"
  },
  {
    "text": "try to query remember we have those templates in there let's try and query this alright so we say the query come in",
    "start": "1764480",
    "end": "1772730"
  },
  {
    "text": "and it gets refused that's because in our query we do not have any IDI in this",
    "start": "1772730",
    "end": "1781160"
  },
  {
    "text": "option this is just a plain vanilla DNS request to this IP address if we look at",
    "start": "1781160",
    "end": "1788620"
  },
  {
    "text": "where did my if we look at this Digg",
    "start": "1788620",
    "end": "1793670"
  },
  {
    "text": "command it says attach a DNS opt 50 to",
    "start": "1793670",
    "end": "1799880"
  },
  {
    "text": "250 65 200 and this is the hacks for for that password I guess I'm gonna have to",
    "start": "1799880",
    "end": "1806000"
  },
  {
    "text": "change my banking password now and we see now it comes in we get the no error",
    "start": "1806000",
    "end": "1813710"
  },
  {
    "text": "and in fact we get back 1 2 3 4 because our template matches that format and",
    "start": "1813710",
    "end": "1818750"
  },
  {
    "text": "returns the 1 2 3 4 let's try another",
    "start": "1818750",
    "end": "1823820"
  },
  {
    "text": "one just so we can see how our template will will give us an NX domain for something that doesn't match and we see",
    "start": "1823820",
    "end": "1832940"
  },
  {
    "text": "in the query log that yes it came through but oh yeah we got the domaine and of course we see the same",
    "start": "1832940",
    "end": "1839240"
  },
  {
    "text": "thing in a client so that's some of the fun tricks you can do with the template and the rewrite and the firewall and if",
    "start": "1839240",
    "end": "1845660"
  },
  {
    "text": "you extend that with kubernetes you can actually build and maybe I'll do this",
    "start": "1845660",
    "end": "1850970"
  },
  {
    "text": "for Amsterdam you could actually build a multi-tenant service discovery using these things",
    "start": "1850970",
    "end": "1856460"
  },
  {
    "text": "these are sort of the primitives you need to do that within a kubernetes environment all right so how much time",
    "start": "1856460",
    "end": "1864710"
  },
  {
    "text": "do we have four minutes four minutes only ok crap I'm out of time almost I also do have multi service and",
    "start": "1864710",
    "end": "1871010"
  },
  {
    "text": "multicolor service discovery I won't demo it but actually that that link up",
    "start": "1871010",
    "end": "1876650"
  },
  {
    "text": "there some scripts that will do it in a gke environment but basically there's a plugin called Cooper net ID it allows",
    "start": "1876650",
    "end": "1883310"
  },
  {
    "text": "accordion has to talk to multiple clusters API servers at once and then publish that data it has some",
    "start": "1883310",
    "end": "1890000"
  },
  {
    "text": "limitations like cluster I Peter meaningless right across clusters so it's really for headless services in a",
    "start": "1890000",
    "end": "1895640"
  },
  {
    "text": "GK environment pot IPAs are routable so it's useful and meaningful but given we only have four minutes",
    "start": "1895640",
    "end": "1901190"
  },
  {
    "text": "I won't demo that now you can check it out on the github there and we'll leave the last couple minutes for questions",
    "start": "1901190",
    "end": "1909400"
  },
  {
    "text": "and I have to say for those of you ask good questions we have some signed books",
    "start": "1919690",
    "end": "1925400"
  },
  {
    "text": "to give away so start thinking harder",
    "start": "1925400",
    "end": "1930880"
  },
  {
    "text": "can we light that mic over there the the firewall functionality should I wasn't",
    "start": "1938380",
    "end": "1943460"
  },
  {
    "text": "sure if it was a plugin or not is that dynamic or does that have to be in the core file before you start courting us",
    "start": "1943460",
    "end": "1951400"
  },
  {
    "text": "so all core DNS plugins have to be it's",
    "start": "1951400",
    "end": "1956900"
  },
  {
    "text": "an external plug-in so it doesn't come by default in your accordion as image you're just gonna pull off of docker or GCR for that matter you would have to",
    "start": "1956900",
    "end": "1964730"
  },
  {
    "text": "build your own custom one I have one built there if you want to play with it it's on my public GCR but it's easy and",
    "start": "1964730",
    "end": "1974030"
  },
  {
    "text": "you can go back and watch the video the d5 yesterday I show you how to rebuild with it with a plug-in but the core file",
    "start": "1974030",
    "end": "1981050"
  },
  {
    "text": "there's a reload plug-in that allows your file to reload at any time so that would be one way to do it without having",
    "start": "1981050",
    "end": "1986600"
  },
  {
    "text": "to do it right at startup but the other thing is since you can actually call out to OPA or you can call out to this",
    "start": "1986600",
    "end": "1994250"
  },
  {
    "text": "Themis policy engine the policies that live there then and all of that you can just populate those policies on the fly",
    "start": "1994250",
    "end": "2001080"
  },
  {
    "text": "which is actually what Infoblox does in their in their one of their product offerings is they have these big famous",
    "start": "2001080",
    "end": "2007840"
  },
  {
    "text": "engines full of policies and then Cordilleras calls out to with each request question you can get a book",
    "start": "2007840",
    "end": "2017010"
  },
  {
    "text": "right here yeah so so general question about the product itself like do you",
    "start": "2017790",
    "end": "2022870"
  },
  {
    "text": "guys have any plans to do weight based load balancing at the server level and",
    "start": "2022870",
    "end": "2027910"
  },
  {
    "text": "the reason why I asked is like you know can we actually start looking at code ian has to do something like a GSLV right you know undone configured to",
    "start": "2027910",
    "end": "2034210"
  },
  {
    "text": "yourself is using coordinates because you know there are number of comprendo products that we actually use right now",
    "start": "2034210",
    "end": "2039430"
  },
  {
    "text": "and we've blocked kind of like C code ian has actually support something like that well I don't know that we have any plans",
    "start": "2039430",
    "end": "2047190"
  },
  {
    "text": "to do that but I mean it's certain you can do that within a plugin actually if you yes absolutely ambitious you could",
    "start": "2047190",
    "end": "2054358"
  },
  {
    "text": "do that in a plugin or I have to say right policies are arbitrary so it's theoretically possible you could",
    "start": "2054359",
    "end": "2062520"
  },
  {
    "text": "actually do that within one of these policies but they would have to hold the data to and do health checks and do a lot of things so it's not definitely not",
    "start": "2062520",
    "end": "2069148"
  },
  {
    "text": "in our plans per se but it is certainly possible okay everyone that's all we",
    "start": "2069149",
    "end": "2075388"
  },
  {
    "text": "have time for questions wise I'd ask for a massive round of applause because I",
    "start": "2075389",
    "end": "2082190"
  },
  {
    "text": "know there are a few more questions if you find cricket and John towards the",
    "start": "2085940",
    "end": "2091169"
  },
  {
    "text": "back and ask those questions I'm sure they'd be more than happy to answer them thank you for joining us",
    "start": "2091169",
    "end": "2096829"
  }
]