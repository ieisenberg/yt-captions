[
  {
    "text": "hi and welcome to this webinar the topic for today is going to be focused around kubernetes build shock how to decrypt",
    "start": "599",
    "end": "6839"
  },
  {
    "text": "and optimize every part of your kubernetes costs my name is Nick and I'm heading the devil team at spectral Cloud I spend",
    "start": "6839",
    "end": "13920"
  },
  {
    "text": "around the last six years working on kubernetes in various areas of the product and you can often find me giving",
    "start": "13920",
    "end": "19920"
  },
  {
    "text": "talks on various community events such as kcd or other devops meeting or",
    "start": "19920",
    "end": "26580"
  },
  {
    "text": "meetups in various cities so let's take a look at the agenda for today we're going to start by taking a",
    "start": "26580",
    "end": "33239"
  },
  {
    "text": "look at what are the billion factors um then we're going to be talking about",
    "start": "33239",
    "end": "38700"
  },
  {
    "text": "kubernetes architectures and the patterns that can be applied to optimize",
    "start": "38700",
    "end": "45120"
  },
  {
    "text": "your costs then we also talk about various software that can help with your",
    "start": "45120",
    "end": "50219"
  },
  {
    "text": "build optimization and we'll follow up with a quick summary so let's get started there are multiple",
    "start": "50219",
    "end": "57239"
  },
  {
    "text": "Dimensions to consider when tackling kubernetes costs they are essentially three first the infrastructure then your",
    "start": "57239",
    "end": "66119"
  },
  {
    "text": "cluster design or your kubernetes cluster architecture and then the human",
    "start": "66119",
    "end": "71340"
  },
  {
    "text": "aspects or more specifically the skill sets for the infrastructure you have to make a fundamental decision on whether",
    "start": "71340",
    "end": "79380"
  },
  {
    "text": "you want to implement your communities cluster in the cloud or on premises of",
    "start": "79380",
    "end": "84900"
  },
  {
    "text": "course it's going to have a huge impact on your compute cost if you run a on-prem design then you're",
    "start": "84900",
    "end": "93240"
  },
  {
    "text": "going to have to pay for your servers and all your compute resources up front I mean unless you find a subscription",
    "start": "93240",
    "end": "100860"
  },
  {
    "text": "deal with your with your Hardware provider and if you're running in the cloud the",
    "start": "100860",
    "end": "106200"
  },
  {
    "text": "build will be spread across multiple months multiple years and you can also",
    "start": "106200",
    "end": "111479"
  },
  {
    "text": "benefit from special discounts if you commit for a certain amount of time",
    "start": "111479",
    "end": "116640"
  },
  {
    "text": "then there's also the storage and networking costs again they will vary and we take we're going to take a look",
    "start": "116640",
    "end": "123000"
  },
  {
    "text": "at it they will vary depending on whether you're running on premises or in",
    "start": "123000",
    "end": "128399"
  },
  {
    "text": "the cloud and then finally for the info still for the infrastructure you have to factor in",
    "start": "128399",
    "end": "134340"
  },
  {
    "text": "the extra software and licenses you would need especially if you're running on premises",
    "start": "134340",
    "end": "140580"
  },
  {
    "text": "things like virtualization management software for the hardware all this may",
    "start": "140580",
    "end": "146400"
  },
  {
    "text": "come you know in addition to to your bill then for the cluster design you have to",
    "start": "146400",
    "end": "153480"
  },
  {
    "text": "carefully take a look at that things like multi-region or availability zones",
    "start": "153480",
    "end": "159680"
  },
  {
    "text": "may have a an impact on your costs and we're going to see this in a minute",
    "start": "159680",
    "end": "165180"
  },
  {
    "text": "then you may want also to have a multi-tenancy environment for your",
    "start": "165180",
    "end": "170760"
  },
  {
    "text": "cluster to sort of a subscribe your cluster and reduce the total amount of",
    "start": "170760",
    "end": "175800"
  },
  {
    "text": "cash flow you want to deploy and then finally we're going to also take a look at why it's important",
    "start": "175800",
    "end": "182239"
  },
  {
    "text": "to profile your application properly know the type of workloads you're going",
    "start": "182239",
    "end": "188040"
  },
  {
    "text": "to run how much memory they're going to consume how much CPU if this is bursty",
    "start": "188040",
    "end": "193080"
  },
  {
    "text": "workloads if this is you know steady sort of workloads it's going to have",
    "start": "193080",
    "end": "198659"
  },
  {
    "text": "impacts on your scaling capabilities and then you have the human aspects or how",
    "start": "198659",
    "end": "204659"
  },
  {
    "text": "to grow the skill sets within the different teams so for the devops devops teams they will have to learn how to",
    "start": "204659",
    "end": "211700"
  },
  {
    "text": "factor in kubernetes in the different pipelines they are building developers they will need to understand",
    "start": "211700",
    "end": "218940"
  },
  {
    "text": "some of the basic which is construct facilitate their application integration into the platform things like",
    "start": "218940",
    "end": "225900"
  },
  {
    "text": "environment variable not necessarily all they don't have to know all the equities concept but just enough for them to",
    "start": "225900",
    "end": "234360"
  },
  {
    "text": "start to code efficiently Within kubernetes and then of course the SRE or platform",
    "start": "234360",
    "end": "240540"
  },
  {
    "text": "engineering team this is where you want to build this the core skills because",
    "start": "240540",
    "end": "246480"
  },
  {
    "text": "they will be responsible for deploying maintaining um and perform you know day two",
    "start": "246480",
    "end": "251819"
  },
  {
    "text": "operations on those clusters other aspects to consider on premises",
    "start": "251819",
    "end": "257639"
  },
  {
    "text": "are if you want to go burmetal versus virtual environment to run your",
    "start": "257639",
    "end": "263639"
  },
  {
    "text": "kubernetes nodes they have both drawbacks and benefits",
    "start": "263639",
    "end": "268880"
  },
  {
    "text": "and if you go bermatol they are a couple of vendors now on the market that can",
    "start": "268880",
    "end": "274080"
  },
  {
    "text": "provide bespoke stack complete stack from the hardware to the provisioning of",
    "start": "274080",
    "end": "280740"
  },
  {
    "text": "your environment to the kubernetes cluster you know providing you with a cloud-in-the-box solution that is fully",
    "start": "280740",
    "end": "287580"
  },
  {
    "text": "API driven with kubernetes in mind and can also customize the type of",
    "start": "287580",
    "end": "293699"
  },
  {
    "text": "processors you want to use and to save extra money on energy or maybe a better",
    "start": "293699",
    "end": "299699"
  },
  {
    "text": "option than Intel I mean it's it's really up to you and depending on your application type and what they support",
    "start": "299699",
    "end": "306020"
  },
  {
    "text": "but this is a good option nowadays and Cloud providers also provide this",
    "start": "306020",
    "end": "313440"
  },
  {
    "text": "sort of solutions where they you have an extension of their environment on your",
    "start": "313440",
    "end": "319259"
  },
  {
    "text": "premises things like AWS Outpost where you can leverage a local stack but still",
    "start": "319259",
    "end": "326419"
  },
  {
    "text": "having the benefits of the cloud provider you know billing model although",
    "start": "326419",
    "end": "332940"
  },
  {
    "text": "this may be more pricey than going you know up front with a full bespoke stack",
    "start": "332940",
    "end": "340080"
  },
  {
    "text": "then you have to do the math yourself and plan for you know a certain number of years until you will have to renew",
    "start": "340080",
    "end": "346560"
  },
  {
    "text": "everything typically this would be like a five years period time so you can do your math and compare both type of",
    "start": "346560",
    "end": "353759"
  },
  {
    "text": "environment and you know take the the cheapest of them now whether you run to you want to run",
    "start": "353759",
    "end": "360600"
  },
  {
    "text": "kubernetes cluster as virtual machines again they are definitely benefits such as high availability for your virtual",
    "start": "360600",
    "end": "367620"
  },
  {
    "text": "machines distributed scheduling for your VMS within your hypervisor environment",
    "start": "367620",
    "end": "373340"
  },
  {
    "text": "they are you know well-known platforms such as VMware and other you know",
    "start": "373340",
    "end": "379320"
  },
  {
    "text": "Microsoft hyper-v maybe or other hypervisor maybe uh you know red ads",
    "start": "379320",
    "end": "385319"
  },
  {
    "text": "those are valid option because they provide um in you know built-in automation",
    "start": "385319",
    "end": "390560"
  },
  {
    "text": "backup and Disaster Recovery Solution so those important Concepts",
    "start": "390560",
    "end": "396780"
  },
  {
    "text": "um are essentially part integrated in the solution if you use a permitol",
    "start": "396780",
    "end": "401880"
  },
  {
    "text": "solution then you may have to use agent or you have to backup a different at a",
    "start": "401880",
    "end": "408120"
  },
  {
    "text": "different layer and do you know storage replication at a different layer so this may",
    "start": "408120",
    "end": "413639"
  },
  {
    "text": "um get things a bit more complicated so once again it's a architectural choice",
    "start": "413639",
    "end": "419580"
  },
  {
    "text": "you have to make but please consider all those aspects because it will have definitely an impact on your on your",
    "start": "419580",
    "end": "426060"
  },
  {
    "text": "final bill if you choose to run your kubernetes cluster in a public Cloud environment",
    "start": "426060",
    "end": "432419"
  },
  {
    "text": "then the compute instance type is probably going to be the component that",
    "start": "432419",
    "end": "438360"
  },
  {
    "text": "is going to affect your bill the most so you may want to treat this carefully and",
    "start": "438360",
    "end": "444120"
  },
  {
    "text": "have multiple work on node pools depending on your workout workload type",
    "start": "444120",
    "end": "449759"
  },
  {
    "text": "um things like you know heavy workload or greedy workloads you may want to run them on dedicated pools day-to-day",
    "start": "449759",
    "end": "458840"
  },
  {
    "text": "lower resources profile workload you want to run them on another type of work",
    "start": "458840",
    "end": "465720"
  },
  {
    "text": "on node pool Etc another aspect to take into account is the CPU type of course with different",
    "start": "465720",
    "end": "471960"
  },
  {
    "text": "node pool or even different clusters then you may take advantage of",
    "start": "471960",
    "end": "477780"
  },
  {
    "text": "discounted nodes things like gcp spot VMS AWS spot instances where you your",
    "start": "477780",
    "end": "485160"
  },
  {
    "text": "node can actually be be killed right or can be shut down now this may have some",
    "start": "485160",
    "end": "490860"
  },
  {
    "text": "impacts of course on on your application depending on the type of application so",
    "start": "490860",
    "end": "496319"
  },
  {
    "text": "here what I'm thinking about is if you are running stateful applications",
    "start": "496319",
    "end": "502220"
  },
  {
    "text": "this is where you you're going to be depending on your storage availability so that means that if a nodes get shut",
    "start": "502220",
    "end": "509400"
  },
  {
    "text": "down you want to get the the storage still available for that purpose what",
    "start": "509400",
    "end": "514860"
  },
  {
    "text": "you can do is choose a CSI so a storage",
    "start": "514860",
    "end": "520380"
  },
  {
    "text": "driver within kubernetes that will be able to replicate volume synchronously",
    "start": "520380",
    "end": "526560"
  },
  {
    "text": "and present those volume remotely to nodes so that when the node is shut down",
    "start": "526560",
    "end": "532800"
  },
  {
    "text": "the part can be restarted on another node but still have remotely is its",
    "start": "532800",
    "end": "538980"
  },
  {
    "text": "storage available right so with no impact on your stateful application because if the net the node get killed",
    "start": "538980",
    "end": "546300"
  },
  {
    "text": "then first you will have to restart the pod on another node and then you will",
    "start": "546300",
    "end": "553560"
  },
  {
    "text": "have to rebuild the storage base on the software replication layer for example if it's a",
    "start": "553560",
    "end": "560820"
  },
  {
    "text": "database cluster then it will be up to the database cluster to rebuild the data",
    "start": "560820",
    "end": "567120"
  },
  {
    "text": "as opposed to relying on the storage layer to get the data immediately",
    "start": "567120",
    "end": "572279"
  },
  {
    "text": "available for the the Pod that will be scheduled on on another node so take a",
    "start": "572279",
    "end": "578279"
  },
  {
    "text": "look into those csis things like Port Works enable those features within your",
    "start": "578279",
    "end": "583980"
  },
  {
    "text": "cluster then if you're running infaster service this as opposed to manage",
    "start": "583980",
    "end": "590519"
  },
  {
    "text": "kubernetes like eks this means that you are responsible for your own control play nodes running as you know cloud",
    "start": "590519",
    "end": "598019"
  },
  {
    "text": "cloud virtual machines then those control play nodes need less resources",
    "start": "598019",
    "end": "603720"
  },
  {
    "text": "typically this is because you don't want to run any workload on the control plane",
    "start": "603720",
    "end": "608940"
  },
  {
    "text": "nodes other than you know Daemon sets or some control plane and other software components that are required by",
    "start": "608940",
    "end": "616080"
  },
  {
    "text": "kubernetes as a system another couple of gutshas you want to",
    "start": "616080",
    "end": "621180"
  },
  {
    "text": "pay attention to are regarding the network Ingress especially considerations for multi-region and",
    "start": "621180",
    "end": "628500"
  },
  {
    "text": "availability Zone cluster where data transfer will ensure an extra charge",
    "start": "628500",
    "end": "633720"
  },
  {
    "text": "things like backup replication from one easy to another easy so coming at the",
    "start": "633720",
    "end": "639839"
  },
  {
    "text": "Ingress of a of the second AC will incure extra charges so there are a",
    "start": "639839",
    "end": "646019"
  },
  {
    "text": "couple of things you want to do to alleviate that so first of all you want to do VPC peering between all your VPC",
    "start": "646019",
    "end": "652680"
  },
  {
    "text": "to reduce that cost and then constrained data intensive workload within the same",
    "start": "652680",
    "end": "659160"
  },
  {
    "text": "AZ in general to avoid leaking from one easy to another and then also do DNS",
    "start": "659160",
    "end": "665940"
  },
  {
    "text": "caching to avoid those extra you know this extra DNS requests from one easy",
    "start": "665940",
    "end": "671760"
  },
  {
    "text": "two to another and then you have the internet to your environment path so",
    "start": "671760",
    "end": "678120"
  },
  {
    "text": "internet to your workload traffic and there you want to Cache as much thing as possible so all your static content you",
    "start": "678120",
    "end": "686339"
  },
  {
    "text": "want to put that into CDN you want to have share with answer with anycast IP",
    "start": "686339",
    "end": "692640"
  },
  {
    "text": "to have multiple of them and then as well as centralized Ingress controllers",
    "start": "692640",
    "end": "698339"
  },
  {
    "text": "that can then redistribute traffic internally where appropriate finally you",
    "start": "698339",
    "end": "704399"
  },
  {
    "text": "also want to pay attention to some of the storage considerations so data",
    "start": "704399",
    "end": "709620"
  },
  {
    "text": "locality within your AC this is something we we already mentioned enabled compression where possible use",
    "start": "709620",
    "end": "717540"
  },
  {
    "text": "CSI snapshot and replication as I mentioned earlier do log rotation and",
    "start": "717540",
    "end": "723899"
  },
  {
    "text": "monitor your storage for your logs because I mean I've learned it myself when you enable",
    "start": "723899",
    "end": "731240"
  },
  {
    "text": "your communities logging service for example stackdriver on Google or other",
    "start": "731240",
    "end": "736500"
  },
  {
    "text": "solution on other Cloud providers if you have very chatty system components or",
    "start": "736500",
    "end": "743760"
  },
  {
    "text": "application they can fill the log quite quickly and because you know your",
    "start": "743760",
    "end": "749339"
  },
  {
    "text": "storage rescale on demand at the end of the month you may have like an extra terabyte of storage that will appear on",
    "start": "749339",
    "end": "757140"
  },
  {
    "text": "your bill and that maybe even you know more than that and that may be a very",
    "start": "757140",
    "end": "762720"
  },
  {
    "text": "you know bad surprise on your bill so you have to monitor all this very very",
    "start": "762720",
    "end": "767940"
  },
  {
    "text": "closely next let's take a look at kubernetes architecture patterns for cost optimization starting with the",
    "start": "767940",
    "end": "775019"
  },
  {
    "text": "fundamentals and answering the question why should you care about those patterns",
    "start": "775019",
    "end": "780380"
  },
  {
    "text": "the easiest answer is because those patterns definitely have an impact on",
    "start": "780380",
    "end": "786180"
  },
  {
    "text": "your communities bill at the end of the month things like resource efficiency will give you the ability to adjust cluster",
    "start": "786180",
    "end": "793920"
  },
  {
    "text": "size and resources based on real usage that gives you scalability capabilities",
    "start": "793920",
    "end": "800760"
  },
  {
    "text": "both for scaling out which means that you're going to be able to increase the",
    "start": "800760",
    "end": "805800"
  },
  {
    "text": "size of a cluster during you know bursty periods or you can also scale in and",
    "start": "805800",
    "end": "812100"
  },
  {
    "text": "reduce the size of the cluster of your workloads of the number of pods for a",
    "start": "812100",
    "end": "817380"
  },
  {
    "text": "particular application using recommendations from the system",
    "start": "817380",
    "end": "822600"
  },
  {
    "text": "but for this there are some prerequisites you need to enable resource settings at the Pod level for",
    "start": "822600",
    "end": "829740"
  },
  {
    "text": "everybody which means that you have to Define resources requests and limits for",
    "start": "829740",
    "end": "835320"
  },
  {
    "text": "every pod and you have to do this properly to avoid any catastrophe if not",
    "start": "835320",
    "end": "841440"
  },
  {
    "text": "done properly you will have a system that is less available and less performance everyone will complain and",
    "start": "841440",
    "end": "848880"
  },
  {
    "text": "eventually your system will just collapse and just you know you will",
    "start": "848880",
    "end": "854700"
  },
  {
    "text": "experience a lot of downtime so let's take a look at how to do this",
    "start": "854700",
    "end": "859980"
  },
  {
    "text": "properly now kubernetes defines three types of quality of service classes for your",
    "start": "859980",
    "end": "867060"
  },
  {
    "text": "workloads Boost for CPU and memories so this is where you set limits and",
    "start": "867060",
    "end": "873660"
  },
  {
    "text": "requests for both so those three classes are best effort where the pods will be evicted first in",
    "start": "873660",
    "end": "881160"
  },
  {
    "text": "case of resource pressure burstable those part are evictable under resource",
    "start": "881160",
    "end": "888120"
  },
  {
    "text": "pressure but only after all best effort pods are evicted and then we have",
    "start": "888120",
    "end": "894139"
  },
  {
    "text": "guaranteed which mean that those parts are less likely to be killed",
    "start": "894139",
    "end": "899899"
  },
  {
    "text": "if they exceed their limits so far best effort",
    "start": "899899",
    "end": "905899"
  },
  {
    "text": "requests and limits are not set at all which mean that this is the default in kubernetes",
    "start": "905899",
    "end": "912240"
  },
  {
    "text": "all pods are best effort so they are all considered the same from a quality or",
    "start": "912240",
    "end": "917820"
  },
  {
    "text": "service class perspective then burstable means that the request or limit sets on is is set on at least one",
    "start": "917820",
    "end": "926820"
  },
  {
    "text": "container in the Pod and if both requests and limits are set for those",
    "start": "926820",
    "end": "932459"
  },
  {
    "text": "parts they should not be equal right meaning that the limit is greater than",
    "start": "932459",
    "end": "939959"
  },
  {
    "text": "the request because when you have requests equal limits then this is the last class which is the",
    "start": "939959",
    "end": "947880"
  },
  {
    "text": "guaranteed class kubernetes also introduces the notion of",
    "start": "947880",
    "end": "955019"
  },
  {
    "text": "priority class which completely exists independently of the quality of service",
    "start": "955019",
    "end": "961019"
  },
  {
    "text": "classes and determines the Pod eviction order",
    "start": "961019",
    "end": "966120"
  },
  {
    "text": "it really comes into play when a new pod can't be scheduled due to Resource",
    "start": "966120",
    "end": "971160"
  },
  {
    "text": "constraints so while quality of service class classes primarily deal with pod",
    "start": "971160",
    "end": "976620"
  },
  {
    "text": "Behavior under resource pressure on a node the Pod priority classes are more",
    "start": "976620",
    "end": "982260"
  },
  {
    "text": "concerned with the older in which pods are evicted to make room for new higher",
    "start": "982260",
    "end": "987660"
  },
  {
    "text": "priority parts both mechanisms can work together to provide a nuanced way to manage",
    "start": "987660",
    "end": "993540"
  },
  {
    "text": "resources allocation and scheduling on a kubernetes cluster there are different factors for the",
    "start": "993540",
    "end": "999480"
  },
  {
    "text": "eviction order so first if the resource requests are exceeded then there is consideration",
    "start": "999480",
    "end": "1007639"
  },
  {
    "text": "about the Pod priority levels that is calculated by the system and then",
    "start": "1007639",
    "end": "1013459"
  },
  {
    "text": "relative resource usage compared to request so those classes are set manually and",
    "start": "1013459",
    "end": "1021380"
  },
  {
    "text": "arbitrary by the user so it's again it's set declaratively within the Pod",
    "start": "1021380",
    "end": "1026839"
  },
  {
    "text": "configuration another component that is taken into account is the Pod disruption budget",
    "start": "1026839",
    "end": "1032540"
  },
  {
    "text": "that defines the minimum number of parts that must be run in the system for a",
    "start": "1032540",
    "end": "1038540"
  },
  {
    "text": "particular deployment or higher level controller so now the question is how to properly",
    "start": "1038540",
    "end": "1044780"
  },
  {
    "text": "determine pod resource requirement well there are a couple of options if we're talking about in-house application then",
    "start": "1044780",
    "end": "1051260"
  },
  {
    "text": "you can perform resource profiling to measure CPU and memory usage and then set resources requests and limit to the",
    "start": "1051260",
    "end": "1059299"
  },
  {
    "text": "values that you have obtained and you can also perform load simulation so test your application under a",
    "start": "1059299",
    "end": "1065600"
  },
  {
    "text": "simulated production load in a development environment another interesting option is to enable",
    "start": "1065600",
    "end": "1071780"
  },
  {
    "text": "DPA or vertical pod autisticator in a dry run mode so that you can obtain",
    "start": "1071780",
    "end": "1077900"
  },
  {
    "text": "resource recommendation from vpa but actually without implementing them and",
    "start": "1077900",
    "end": "1083660"
  },
  {
    "text": "changing the Pod runtime status and the final option would be to use",
    "start": "1083660",
    "end": "1089600"
  },
  {
    "text": "open source tools such as robusto krr which stands for kubernetes resource",
    "start": "1089600",
    "end": "1095419"
  },
  {
    "text": "recommendation that integrates with formation use for more detailed resource metrics",
    "start": "1095419",
    "end": "1101780"
  },
  {
    "text": "so now that you know the proper resources request and limits to set you can start playing with auto scaling in",
    "start": "1101780",
    "end": "1109520"
  },
  {
    "text": "this section we're going to be talking about cluster autoscaler vpa HPA and Keda",
    "start": "1109520",
    "end": "1115580"
  },
  {
    "text": "let's start with cluster Auto scalar cluster autoscaler has the ability to",
    "start": "1115580",
    "end": "1121400"
  },
  {
    "text": "resize the kubernetes cluster based on workload requirements it is run as a",
    "start": "1121400",
    "end": "1126980"
  },
  {
    "text": "kubernetes deployment within the kubernetes control plane it is either integrated with your Cloud",
    "start": "1126980",
    "end": "1133820"
  },
  {
    "text": "providers directly or through cluster API in the management cluster",
    "start": "1133820",
    "end": "1139520"
  },
  {
    "text": "so if Custom Auto scalar detects any pods in pending state it will select a",
    "start": "1139520",
    "end": "1145880"
  },
  {
    "text": "node group to Scale based on pod constraint using a priority score algorithm conversely if the cluster is",
    "start": "1145880",
    "end": "1155780"
  },
  {
    "text": "utilizing less resources and can be scaled down then cluster auto scanner",
    "start": "1155780",
    "end": "1161960"
  },
  {
    "text": "with select nodes with the least amount of resource usage",
    "start": "1161960",
    "end": "1167840"
  },
  {
    "text": "let's take a look at a typical example with cluster API in this configuration Argo CD is used to deploy the workload",
    "start": "1167840",
    "end": "1175760"
  },
  {
    "text": "cluster with a declarative configuration then we have cluster API add-on provider",
    "start": "1175760",
    "end": "1182059"
  },
  {
    "text": "Helm which is responsible for installing extra software within the workload",
    "start": "1182059",
    "end": "1187100"
  },
  {
    "text": "cluster this include the cni to make the cluster work at the beginning and then",
    "start": "1187100",
    "end": "1192200"
  },
  {
    "text": "additional and any additional software such as nginx or Prometheus for example",
    "start": "1192200",
    "end": "1198320"
  },
  {
    "text": "and then finally cluster also scalar is responsible for scaling all the workload",
    "start": "1198320",
    "end": "1204440"
  },
  {
    "text": "cluster depending on resource usage the corresponding cluster or test scalar",
    "start": "1204440",
    "end": "1209720"
  },
  {
    "text": "configuration contains a couple of interesting arguments so first off the cloud provider in our case is specified",
    "start": "1209720",
    "end": "1217039"
  },
  {
    "text": "as cluster API as well as the node Group auto discovery which specify the cluster",
    "start": "1217039",
    "end": "1222440"
  },
  {
    "text": "name this is copied Dev so that means that you have to run that configuration",
    "start": "1222440",
    "end": "1227480"
  },
  {
    "text": "for every Target cluster so capidev is one destiny workload cluster if you want",
    "start": "1227480",
    "end": "1233900"
  },
  {
    "text": "to deploy copy prod cluster you will have to deploy another kubernetes",
    "start": "1233900",
    "end": "1239000"
  },
  {
    "text": "deployment with that particular template specifying cluster name equal copy prod",
    "start": "1239000",
    "end": "1245660"
  },
  {
    "text": "you only need to specify those two lines of settings and finally you annotate the",
    "start": "1245660",
    "end": "1253340"
  },
  {
    "text": "cluster API machine deployment object corresponding to the Target cluster with",
    "start": "1253340",
    "end": "1259160"
  },
  {
    "text": "the maximum size as well as the minimum size you want to set for the cluster and",
    "start": "1259160",
    "end": "1265039"
  },
  {
    "text": "you are done another scaling tool I want to mention is the vertical part of the scalar or",
    "start": "1265039",
    "end": "1271220"
  },
  {
    "text": "vpa it can adjust part CPU and memory request and limits based on real world",
    "start": "1271220",
    "end": "1277220"
  },
  {
    "text": "usage it gets its data from the metric server which means that you have to",
    "start": "1277220",
    "end": "1282260"
  },
  {
    "text": "install the metric server as part of your kubernetes installation for vpa to",
    "start": "1282260",
    "end": "1287900"
  },
  {
    "text": "work vpa also introduces a new custom resource definition or crd as vertical",
    "start": "1287900",
    "end": "1295159"
  },
  {
    "text": "product scalar is composed of multiple Parts first we",
    "start": "1295159",
    "end": "1302419"
  },
  {
    "text": "have the recommender whose responsibility is to monitor the resources of the Pod and compute",
    "start": "1302419",
    "end": "1308780"
  },
  {
    "text": "recommendations then the updater is in charge of checking pod resource allocation and if",
    "start": "1308780",
    "end": "1315919"
  },
  {
    "text": "an update is required it may evict the Pod for rescheduling with the new",
    "start": "1315919",
    "end": "1321020"
  },
  {
    "text": "settings finally we have the admission controller and its role is to update the Pod",
    "start": "1321020",
    "end": "1326780"
  },
  {
    "text": "resources requested limits before the part rescheduling happens so let's take a quick look at an example",
    "start": "1326780",
    "end": "1333740"
  },
  {
    "text": "of a vertical political scalar configuration the interesting section is",
    "start": "1333740",
    "end": "1338960"
  },
  {
    "text": "the target reference in our case the kind is a deployment which means that vpa is in charge of scaling all the pods",
    "start": "1338960",
    "end": "1347419"
  },
  {
    "text": "within that deployment and the update mode within the update policy here at",
    "start": "1347419",
    "end": "1352760"
  },
  {
    "text": "the bottom is Odo Otto means that the updater will evict",
    "start": "1352760",
    "end": "1358280"
  },
  {
    "text": "the pods in case of new recommendation so that the admission controller can set",
    "start": "1358280",
    "end": "1364340"
  },
  {
    "text": "the new settings like I mentioned before if you set the update mode to off",
    "start": "1364340",
    "end": "1369799"
  },
  {
    "text": "the Pod is not going to be rescheduled but the new recommendation will be embedded into the Pod status which means",
    "start": "1369799",
    "end": "1377900"
  },
  {
    "text": "that when you will execute kubectl describe of that pod you will be able to see the new recommendation and",
    "start": "1377900",
    "end": "1384980"
  },
  {
    "text": "eventually apply this recommendation during the next maintenance window for",
    "start": "1384980",
    "end": "1390559"
  },
  {
    "text": "that particular application as opposed to vpa which influences",
    "start": "1390559",
    "end": "1396260"
  },
  {
    "text": "requests and limits for particular pods HPA scale a workload resource so a",
    "start": "1396260",
    "end": "1401720"
  },
  {
    "text": "deployment or stateful set horizontally meaning that it will increase the number of PODS or evict pods to reduce that",
    "start": "1401720",
    "end": "1410360"
  },
  {
    "text": "number it is natively part of kubernetes as horizontal scalar object always seen",
    "start": "1410360",
    "end": "1416419"
  },
  {
    "text": "by a controller part of the general controller manager it supports both",
    "start": "1416419",
    "end": "1421880"
  },
  {
    "text": "Resource as well as custom metrics which means that it can both look at resource",
    "start": "1421880",
    "end": "1428000"
  },
  {
    "text": "utilization such as CPU and memory as well as use Prometheus more particular",
    "start": "1428000",
    "end": "1433460"
  },
  {
    "text": "metrics made available at the custom metrics API endpoint",
    "start": "1433460",
    "end": "1438500"
  },
  {
    "text": "here you can see an example of an HPA manifest which as you can see is quite similar to the vpa Manifest",
    "start": "1438500",
    "end": "1444679"
  },
  {
    "text": "configuration and we can see the scale Target reference field in this case we are",
    "start": "1444679",
    "end": "1450500"
  },
  {
    "text": "managing a deployment whose name is PHP Apache the minimum of replicas is set to",
    "start": "1450500",
    "end": "1456080"
  },
  {
    "text": "1 and the maximum to 10. you can also notice the target CPU utilization percentage which is 50 in that case so",
    "start": "1456080",
    "end": "1464600"
  },
  {
    "text": "in this configuration if the average CPU utilization goes above the 50 threshold",
    "start": "1464600",
    "end": "1470360"
  },
  {
    "text": "across all part in average then the HPA will calculate the number of additional",
    "start": "1470360",
    "end": "1475820"
  },
  {
    "text": "replicas needed to bring the CPU utilization back down to around 50 percent it will then adjust the number",
    "start": "1475820",
    "end": "1482840"
  },
  {
    "text": "of Parts replica accordingly but HPA won't instantly scale out as soon as the 50 threshold is crossed it",
    "start": "1482840",
    "end": "1490460"
  },
  {
    "text": "generally waits for a certain payment to ensure that the condition persists before taking action depending on the",
    "start": "1490460",
    "end": "1496880"
  },
  {
    "text": "configuration and stabilization windows a couple of consideration around HPA and",
    "start": "1496880",
    "end": "1503299"
  },
  {
    "text": "vpa with vpa the cluster resources are not taken into consideration which may",
    "start": "1503299",
    "end": "1508700"
  },
  {
    "text": "be an issue if the total amount of requests or limits is exceeding the",
    "start": "1508700",
    "end": "1514700"
  },
  {
    "text": "available resources in the cluster also only CPU and memory are taken into account although there is some project",
    "start": "1514700",
    "end": "1521960"
  },
  {
    "text": "to include custom metrics which are already available in Google Cloud",
    "start": "1521960",
    "end": "1529340"
  },
  {
    "text": "HPA there's no scale to zero for this we're going to see another example with Keda in a minute it use aggregate",
    "start": "1529340",
    "end": "1537200"
  },
  {
    "text": "metrics only And Delay may be introduced when scaling also vpa and HPA can be used together",
    "start": "1537200",
    "end": "1544340"
  },
  {
    "text": "but monitoring different metrics there is also the multi-dimension auto",
    "start": "1544340",
    "end": "1550580"
  },
  {
    "text": "scaling project that is available in gke that makes use of both vpa and HPA",
    "start": "1550580",
    "end": "1556279"
  },
  {
    "text": "capabilities and I've kept the best for the n",
    "start": "1556279",
    "end": "1562039"
  },
  {
    "text": "now it's killer kubernetes haven't driven Auto scaling it's an open source",
    "start": "1562039",
    "end": "1567140"
  },
  {
    "text": "project that extends kubernetes to provide event-driven Auto scaling capabilities it does create HPA object based on",
    "start": "1567140",
    "end": "1574760"
  },
  {
    "text": "arbitrary metrics or event sources HTTP rabbitmq AWS Cloud watch hcd other",
    "start": "1574760",
    "end": "1582500"
  },
  {
    "text": "message queuing system and databases are supported as scalers",
    "start": "1582500",
    "end": "1588080"
  },
  {
    "text": "kellas reports any kubernetes resources or custom resource with a scale sub",
    "start": "1588080",
    "end": "1593480"
  },
  {
    "text": "resource defined it provides a decorative configuration within a scale object crd Kida can scale",
    "start": "1593480",
    "end": "1601520"
  },
  {
    "text": "the deployment from 0 to n and back to zero making it very cost effective for",
    "start": "1601520",
    "end": "1607340"
  },
  {
    "text": "workloads that are not continuously running it acts as an adapter that translates",
    "start": "1607340",
    "end": "1612559"
  },
  {
    "text": "external metrics into kubernetes metrics which HPA can understand extending HPA",
    "start": "1612559",
    "end": "1619640"
  },
  {
    "text": "to support event-driven scale which also means that by automatically scaling in",
    "start": "1619640",
    "end": "1624679"
  },
  {
    "text": "response to real-world evidence Kerala reduces the need for manually defining complex scaling roles plus it is",
    "start": "1624679",
    "end": "1632900"
  },
  {
    "text": "available across all cloud or on-premises as it is infrastructure agnostic",
    "start": "1632900",
    "end": "1639860"
  },
  {
    "text": "let's take a look at an example with a Kafka scaler so here we have our scale object which",
    "start": "1639860",
    "end": "1646100"
  },
  {
    "text": "makes reference to a deployment the name is scale consumer there's a couple of parameters the cooldown period the max",
    "start": "1646100",
    "end": "1653779"
  },
  {
    "text": "replica counts as usual minimum replica count the polling interval and the trigger so",
    "start": "1653779",
    "end": "1661039"
  },
  {
    "text": "in our case it's Kafka and then we specify also a couple of more information such as the Kafka server",
    "start": "1661039",
    "end": "1668539"
  },
  {
    "text": "address the topic we are monitoring as well as the consumer group and finally",
    "start": "1668539",
    "end": "1675140"
  },
  {
    "text": "we have the like threshold which defines how many messages in a Kafka partition",
    "start": "1675140",
    "end": "1680179"
  },
  {
    "text": "are yet to be consumed by a consumer or the consumer group in that case if the",
    "start": "1680179",
    "end": "1686059"
  },
  {
    "text": "lag exceeds that threshold it usually indicates that the consumer is not keeping up with the producer rate of",
    "start": "1686059",
    "end": "1691760"
  },
  {
    "text": "message creation which could lead to various types of issues like increased latency resource exhaustion or even data",
    "start": "1691760",
    "end": "1698840"
  },
  {
    "text": "loss if the message have a time to leave so in this case when the luck threshold exceeds 10 then Keda will increase the",
    "start": "1698840",
    "end": "1706580"
  },
  {
    "text": "number of consumer which means that the number of PODS is going to be increased",
    "start": "1706580",
    "end": "1711799"
  },
  {
    "text": "so a couple of limitations and best practices with Scala first don't use multiple triggers for the same scale",
    "start": "1711799",
    "end": "1718159"
  },
  {
    "text": "Target don't use HPA together with cataflow same Target resource and as for HPA",
    "start": "1718159",
    "end": "1725299"
  },
  {
    "text": "delay may be introduced when scaling and you can use an advanced Behavior setting to mitigate that",
    "start": "1725299",
    "end": "1731659"
  },
  {
    "text": "another way to save cost on your communities bill is by enabling multi-tenancy and limit the number of",
    "start": "1731659",
    "end": "1738200"
  },
  {
    "text": "running kubernetes clusters one of the solution is to use namespace",
    "start": "1738200",
    "end": "1743360"
  },
  {
    "text": "as a nazolation mechanism although it's considered as a soft boundary meaning",
    "start": "1743360",
    "end": "1748460"
  },
  {
    "text": "that you are still going to share some of the cluster resources such as custom",
    "start": "1748460",
    "end": "1753500"
  },
  {
    "text": "resource definition that are not isolated on a per namespace basis",
    "start": "1753500",
    "end": "1759080"
  },
  {
    "text": "another solution is to use the cluster by Loft it allows you to over subscribe",
    "start": "1759080",
    "end": "1765260"
  },
  {
    "text": "to your host cluster by creating virtual cluster within your physical cluster",
    "start": "1765260",
    "end": "1771080"
  },
  {
    "text": "such as nested cluster it's like giving each developer or team their own sandbox",
    "start": "1771080",
    "end": "1776720"
  },
  {
    "text": "to play in without the hassle of managing separate Hardware or Cloud resources it is perfect for Dev test",
    "start": "1776720",
    "end": "1783559"
  },
  {
    "text": "scenarios and super handy for cicd pipelines too it also provides very handy capabilities",
    "start": "1783559",
    "end": "1789620"
  },
  {
    "text": "such as pause in case you don't need the resources anymore or quota and limit on",
    "start": "1789620",
    "end": "1794960"
  },
  {
    "text": "a perfect cluster basis once you have implemented all those infrastructure changes you can use",
    "start": "1794960",
    "end": "1801260"
  },
  {
    "text": "additional tools to Monitor and optimize your bill poop cost is a software that you install",
    "start": "1801260",
    "end": "1807320"
  },
  {
    "text": "via Helm or a kubernetes manifest within your communities cluster it has",
    "start": "1807320",
    "end": "1812539"
  },
  {
    "text": "Prometheus as a prerequisite and provides Cloud bidding and complete view of your expenses across your Cloud",
    "start": "1812539",
    "end": "1818899"
  },
  {
    "text": "providers the tool not only displays cost data but also correlates it with resource usage",
    "start": "1818899",
    "end": "1824720"
  },
  {
    "text": "for precise cost management it features a cluster controller that automates tasks like cluster right",
    "start": "1824720",
    "end": "1830419"
  },
  {
    "text": "sizing and turndown allowing for optimized resource allocation and the ability to scale down when needed it",
    "start": "1830419",
    "end": "1836899"
  },
  {
    "text": "makes use of crds to extend kubernetes native functionality enabling fine grain control over cost allocation and",
    "start": "1836899",
    "end": "1843559"
  },
  {
    "text": "Reporting parameters cool green takes another approach with the goal of minimizing CO2 emissions it",
    "start": "1843559",
    "end": "1850399"
  },
  {
    "text": "is provided as a kubernetes operator and add by suspending idle pods it behaves",
    "start": "1850399",
    "end": "1855919"
  },
  {
    "text": "as a watchdog intercepting lifecycle even through a web hook the users Define a slip info manifest where they can",
    "start": "1855919",
    "end": "1862880"
  },
  {
    "text": "specify working hour for pods then could green will suspend the pods outside of",
    "start": "1862880",
    "end": "1868100"
  },
  {
    "text": "those working hours opencast is a cncf Sandbox project that collects data from kubernetes clusters",
    "start": "1868100",
    "end": "1874520"
  },
  {
    "text": "and Cloud providers such as pod resource utilization Associated Cloud cost pod",
    "start": "1874520",
    "end": "1880399"
  },
  {
    "text": "runtime duration it uses then this data to calculate expenses for kubernetes workloads it is",
    "start": "1880399",
    "end": "1886760"
  },
  {
    "text": "worth noting that the cost allocation engine in open cost is powered by Coupe cost",
    "start": "1886760",
    "end": "1891919"
  },
  {
    "text": "on top of this in cluster software and tools you can find cloud-based SAS cost management platforms for example replex",
    "start": "1891919",
    "end": "1899740"
  },
  {
    "text": "cast.ai or Cloud zero they all provide real-time monitoring and Analytics",
    "start": "1899740",
    "end": "1905600"
  },
  {
    "text": "they also provide unique feature for example replex uses an AI engine to provide insight into spending patterns",
    "start": "1905600",
    "end": "1912320"
  },
  {
    "text": "and Cloud 0 automatically suspend resources when they are not being used you should definitely give them a try to",
    "start": "1912320",
    "end": "1918679"
  },
  {
    "text": "see if these unique capabilities can help reduce your bill in summary there are a couple of actions",
    "start": "1918679",
    "end": "1924320"
  },
  {
    "text": "you can take today to take control over your kubernetes bills first carefully design your cluster to work around cloud",
    "start": "1924320",
    "end": "1931159"
  },
  {
    "text": "provider compute networking and storage costs if on-premises carefully choose your",
    "start": "1931159",
    "end": "1937640"
  },
  {
    "text": "hardware and bear in mind virtualization costs also don't neglect human aspect and time",
    "start": "1937640",
    "end": "1944000"
  },
  {
    "text": "costs start small and build incrementally depending on your requirements the next",
    "start": "1944000",
    "end": "1949700"
  },
  {
    "text": "one is very important before using cluster and pod scaling understand your application profile you have to set",
    "start": "1949700",
    "end": "1956480"
  },
  {
    "text": "resources requesting limits adapt node pools to workload types and finally use",
    "start": "1956480",
    "end": "1962240"
  },
  {
    "text": "cada for scale to zero capability once you have done all those tweaking within your environment you can start",
    "start": "1962240",
    "end": "1968419"
  },
  {
    "text": "optimizing your bill with additional software but there's another tool I wanted to",
    "start": "1968419",
    "end": "1973520"
  },
  {
    "text": "mention today palette virtual cluster by Spectral cloud based on the v-cluster technology it allows you to group",
    "start": "1973520",
    "end": "1979940"
  },
  {
    "text": "cluster provision by palette our cluster API based engine into cluster group that",
    "start": "1979940",
    "end": "1985700"
  },
  {
    "text": "you can further cover up into virtual clusters the mission to do so are distributed to",
    "start": "1985700",
    "end": "1990919"
  },
  {
    "text": "developers via all back once they have the sandbox ready they can start modeling their application using pallet",
    "start": "1990919",
    "end": "1997340"
  },
  {
    "text": "Dev engine which gives them a flexible way to deploy their code using containers Helm charts kubernetes",
    "start": "1997340",
    "end": "2003460"
  },
  {
    "text": "manifests and catalog-based components such as message queuing system or databases",
    "start": "2003460",
    "end": "2009279"
  },
  {
    "text": "you can give it a try by visiting spectralcloud.com I hope that you have enjoyed this",
    "start": "2009279",
    "end": "2014320"
  },
  {
    "text": "presentation and learned one thing or two today I see you in the next one",
    "start": "2014320",
    "end": "2020700"
  }
]