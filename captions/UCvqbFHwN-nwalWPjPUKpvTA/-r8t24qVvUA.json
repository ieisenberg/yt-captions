[
  {
    "start": "0",
    "end": "11000"
  },
  {
    "text": "hello everyone today michelle and i will give an introduction and update to kubernetes",
    "start": "2240",
    "end": "8000"
  },
  {
    "text": "seek storage my name is xin yang i work at a vmware",
    "start": "8000",
    "end": "13920"
  },
  {
    "start": "11000",
    "end": "11000"
  },
  {
    "text": "in the cloud 30 team i'm also a co-chair in six storage along with sadali from",
    "start": "13920",
    "end": "20320"
  },
  {
    "text": "google hi i'm michelle",
    "start": "20320",
    "end": "25359"
  },
  {
    "text": "i'm a tech lead for six storage and then um",
    "start": "25359",
    "end": "30560"
  },
  {
    "text": "also uh yawn from red hat is another tech lead in six storage",
    "start": "30560",
    "end": "36880"
  },
  {
    "text": "so our session today will include two parts in the first half we will give an",
    "start": "37120",
    "end": "42239"
  },
  {
    "text": "introduction in the second half we will give an update and deep dive",
    "start": "42239",
    "end": "49280"
  },
  {
    "start": "50000",
    "end": "50000"
  },
  {
    "text": "in the introduction i'm going to talk about some basic concepts in kubernetes storage and how to get",
    "start": "51840",
    "end": "59039"
  },
  {
    "text": "involved first i'll talk about persistent storage",
    "start": "59039",
    "end": "65760"
  },
  {
    "start": "61000",
    "end": "61000"
  },
  {
    "text": "kubernetes storage provides a way for containers in the pods to consume block",
    "start": "65760",
    "end": "71280"
  },
  {
    "text": "or file storage persistent storage is one type of storage that leaves beyond",
    "start": "71280",
    "end": "77439"
  },
  {
    "text": "a pod's life cycle the terminologies we heard most in six",
    "start": "77439",
    "end": "83040"
  },
  {
    "text": "storage are probably pvc pv and storage class",
    "start": "83040",
    "end": "88400"
  },
  {
    "text": "pvc persistent volume claim is a user space object it is a request by a user for storage",
    "start": "88400",
    "end": "96400"
  },
  {
    "text": "a pv persistent volume is the cluster scope object it represents a physical volume on the",
    "start": "96400",
    "end": "103600"
  },
  {
    "text": "storage system a pvc and a pv have a one-on-one mapping",
    "start": "103600",
    "end": "110399"
  },
  {
    "text": "storage class is in the cluster scope it is a way for admin to describe the",
    "start": "110399",
    "end": "115600"
  },
  {
    "text": "classes of storage different classes might map to different quality of service levels",
    "start": "115600",
    "end": "122320"
  },
  {
    "text": "or other admin defined policies in dynamic provisioning study class is",
    "start": "122320",
    "end": "128160"
  },
  {
    "text": "used to find out which provisional should be used and what parameters should be passed to",
    "start": "128160",
    "end": "134640"
  },
  {
    "text": "the provisioner when creating the volume a pod is a group of one or more containers",
    "start": "134640",
    "end": "142080"
  },
  {
    "text": "with shared storage and network resources and a specification for how to run the containers",
    "start": "142080",
    "end": "149440"
  },
  {
    "text": "a pod is a user space object a pvc is used by a pod",
    "start": "149440",
    "end": "156319"
  },
  {
    "text": "in static provisioning a cluster admin creates a number of pvs",
    "start": "156319",
    "end": "161680"
  },
  {
    "text": "which carry the details of the real storage the control plane can bind the pvcs to",
    "start": "161680",
    "end": "168080"
  },
  {
    "text": "pvs in cluster however if you want a pvc to bind to a specific specific pv",
    "start": "168080",
    "end": "175040"
  },
  {
    "text": "you need to pre-bind them when none of the static pvs the admin",
    "start": "175040",
    "end": "180959"
  },
  {
    "text": "created match a user's pvc the cluster may try to dynamically provision a",
    "start": "180959",
    "end": "186800"
  },
  {
    "text": "volume especially for the pvc this provisioning is based on study",
    "start": "186800",
    "end": "192080"
  },
  {
    "text": "classes the pvc must request a story class and the admin must have created and",
    "start": "192080",
    "end": "199120"
  },
  {
    "text": "configured that class for dynamic provisioning to occur",
    "start": "199120",
    "end": "204720"
  },
  {
    "start": "205000",
    "end": "205000"
  },
  {
    "text": "here is an example of a pod pvc and the story class the pod is using the pvc",
    "start": "206319",
    "end": "214319"
  },
  {
    "text": "pvc has capacity access modes it is a rewrite once here",
    "start": "214319",
    "end": "220640"
  },
  {
    "text": "and storage class name specified here in the studio class there is a",
    "start": "220640",
    "end": "226080"
  },
  {
    "text": "provisioner that determines what volume plugin is used for provisioning pvs",
    "start": "226080",
    "end": "233200"
  },
  {
    "text": "the reclaim policy is retained this means the pv will remain along with the",
    "start": "233200",
    "end": "238959"
  },
  {
    "text": "physical volume on the study system when the user deletes the pvc",
    "start": "238959",
    "end": "244239"
  },
  {
    "text": "if the reclaimed policy is deleted the pv along with the physical volume will be deleted when the user deletes",
    "start": "244239",
    "end": "251360"
  },
  {
    "text": "the pvc a low volume expansion is true so water",
    "start": "251360",
    "end": "257040"
  },
  {
    "text": "expansion can be requested by the user here and volume bending mode is",
    "start": "257040",
    "end": "263360"
  },
  {
    "text": "immediate in the sturdy class immediate means volume binding and dynamic provisioning",
    "start": "263360",
    "end": "270000"
  },
  {
    "text": "occurs once the pvc is created however this may result in",
    "start": "270000",
    "end": "275040"
  },
  {
    "text": "unscheduleable parts a cluster admin can address this issue",
    "start": "275040",
    "end": "280560"
  },
  {
    "text": "by specifying the wait for first consumer mode which will delay the binding and",
    "start": "280560",
    "end": "286400"
  },
  {
    "text": "provisioning of a pv until a part using this pvc is created",
    "start": "286400",
    "end": "292560"
  },
  {
    "text": "3d class also has parameters that are storage provider specific and",
    "start": "292560",
    "end": "299199"
  },
  {
    "text": "opaque to kubernetes",
    "start": "299199",
    "end": "302800"
  },
  {
    "text": "next i'm going to talk about ephemeral storage i have more storage becomes available",
    "start": "304479",
    "end": "311440"
  },
  {
    "text": "when the pot is started and goes away when the pod goes down",
    "start": "311440",
    "end": "316560"
  },
  {
    "text": "we have local ethmo storage such as empty dirt secrets",
    "start": "316560",
    "end": "322560"
  },
  {
    "text": "config maps and downward apis and we have a csi admiral volumes and",
    "start": "322560",
    "end": "328800"
  },
  {
    "text": "generic ethmo volumes",
    "start": "328800",
    "end": "332159"
  },
  {
    "text": "an emptied volume is first created when a part is assigned to a node and it exists as long as that",
    "start": "334800",
    "end": "342880"
  },
  {
    "text": "part is running on that part that that part is running on that node as the name suggests the empty volume is",
    "start": "342880",
    "end": "351680"
  },
  {
    "text": "initially empty all containers in a pod can read and write the same files",
    "start": "351680",
    "end": "357520"
  },
  {
    "text": "in the empty dirt volume though that volume can be mounted at the same or different paths",
    "start": "357520",
    "end": "363280"
  },
  {
    "text": "in each container when a part is removed for a node the data in empty door is deleted",
    "start": "363280",
    "end": "370240"
  },
  {
    "text": "permanently and empty dirt is usually used as scratch space",
    "start": "370240",
    "end": "378680"
  },
  {
    "start": "379000",
    "end": "379000"
  },
  {
    "text": "a secret volume is used to pass sensitive information such as passwords",
    "start": "380560",
    "end": "386160"
  },
  {
    "text": "to parts you can store secrets in the secrets kubernetes api",
    "start": "386160",
    "end": "392400"
  },
  {
    "text": "and mount them as the files for use by parts secret volumes are backed by",
    "start": "392400",
    "end": "398160"
  },
  {
    "text": "10 purpose so they are never returned to you non-volatile storage",
    "start": "398160",
    "end": "404319"
  },
  {
    "start": "405000",
    "end": "405000"
  },
  {
    "text": "the next one is a config map a config map provides a wave to inject",
    "start": "407039",
    "end": "412479"
  },
  {
    "text": "non-confidential configuration data into parts when referencing a config map you",
    "start": "412479",
    "end": "419120"
  },
  {
    "text": "provide the name of the config map in a volume in this example here the config map is",
    "start": "419120",
    "end": "426000"
  },
  {
    "text": "mounted as a volume and all contents are mounted into the pod at the path derived from the",
    "start": "426000",
    "end": "434160"
  },
  {
    "text": "month pass and the key in the configmap",
    "start": "434160",
    "end": "438800"
  },
  {
    "start": "442000",
    "end": "442000"
  },
  {
    "text": "here's an example of the downward api volume it makes downward api data available to",
    "start": "443680",
    "end": "450319"
  },
  {
    "text": "the applications it amounts to directory and writes the requested data in plain",
    "start": "450319",
    "end": "455919"
  },
  {
    "text": "text files in the support yaml file you can see that the pod has a downward api volume and",
    "start": "455919",
    "end": "463440"
  },
  {
    "text": "the container amongst the volume at a specified location each element and items is a downward api",
    "start": "463440",
    "end": "470639"
  },
  {
    "text": "volume file the first element specifies that the value of the pods metadata labels field",
    "start": "470639",
    "end": "477280"
  },
  {
    "text": "should be stored in a file named labels",
    "start": "477280",
    "end": "482000"
  },
  {
    "start": "483000",
    "end": "483000"
  },
  {
    "text": "now i'm going to talk about csi inline ethmo volume in this example here we set volume type",
    "start": "484879",
    "end": "492160"
  },
  {
    "text": "to csi in part inline definition and specify the driver name and volume",
    "start": "492160",
    "end": "498160"
  },
  {
    "text": "attributes for a csr driver to support csi admiral volumes it must be modified or",
    "start": "498160",
    "end": "506000"
  },
  {
    "text": "implemented specifically for this purpose a csi driver is suitable for csi ethmoid",
    "start": "506000",
    "end": "512560"
  },
  {
    "text": "inline volume if it serves a special purpose and needs custom per volume parameters",
    "start": "512560",
    "end": "519279"
  },
  {
    "text": "like drivers that provide secrets to your pod the secret store system driver is a good",
    "start": "519279",
    "end": "525680"
  },
  {
    "text": "example a csr driver is not suitable for csi ethmoidal inline volumes",
    "start": "525680",
    "end": "532080"
  },
  {
    "text": "when provisioning is not local to the node or when ephemeral volume creation",
    "start": "532080",
    "end": "538720"
  },
  {
    "text": "requires foreign attributes that should be restricted to an admin for example",
    "start": "538720",
    "end": "544399"
  },
  {
    "text": "parameters in a sorted class",
    "start": "544399",
    "end": "548839"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "next i'm going to talk about generic ethmoid volume the generic ethmoidal volume feature",
    "start": "551360",
    "end": "557920"
  },
  {
    "text": "allows any existing study driver that supports dynamic provisioning to be used",
    "start": "557920",
    "end": "564399"
  },
  {
    "text": "as an ethernet volume with the volume's lifecycle bond to the pod",
    "start": "564399",
    "end": "569680"
  },
  {
    "text": "it can be used to provide scratch storage that is different from the root disk for example um",
    "start": "569680",
    "end": "577279"
  },
  {
    "text": "persistent memory or a separate local disk on that node",
    "start": "577279",
    "end": "582399"
  },
  {
    "text": "also the class parameters for warning provisioning are supported",
    "start": "582399",
    "end": "587440"
  },
  {
    "text": "all features supported with cs with pvcs are supported such as storage capacity tracking",
    "start": "587440",
    "end": "594320"
  },
  {
    "text": "snapshotting cloning and volume resizing this features beta since 1.21 release",
    "start": "594320",
    "end": "600240"
  },
  {
    "text": "and it is targeting ga in 1.23",
    "start": "600240",
    "end": "605480"
  },
  {
    "start": "606000",
    "end": "606000"
  },
  {
    "text": "next i'm going to talk about volume plugins kubernetes volume plugins include entry",
    "start": "607440",
    "end": "613360"
  },
  {
    "text": "plugins auto 3 flex volume and csi drivers some entry plugins such as those fmar",
    "start": "613360",
    "end": "620880"
  },
  {
    "text": "ones i mentioned earlier will stay in tree but most other inch plugins are either",
    "start": "620880",
    "end": "626560"
  },
  {
    "text": "deprecated or are migrating to csi drivers michelle will talk more about it later",
    "start": "626560",
    "end": "633760"
  },
  {
    "text": "flux volume is deprecated csi driver is the recommended way to write plugins",
    "start": "633760",
    "end": "639760"
  },
  {
    "text": "the kubernetes implementation of the container storage interface csi has been",
    "start": "639760",
    "end": "645680"
  },
  {
    "text": "ga since the wonder 13 release csi is designed to be vendor neutral",
    "start": "645680",
    "end": "652000"
  },
  {
    "text": "interoperable and has a focus on specification it defines a set of storage interfaces",
    "start": "652000",
    "end": "658800"
  },
  {
    "text": "so that a 3d vendor can write one plugin and have it work across a range of container orchestration systems",
    "start": "658800",
    "end": "667600"
  },
  {
    "start": "668000",
    "end": "668000"
  },
  {
    "text": "in a css pack we have rpcs for volume lifecycle management this includes",
    "start": "669600",
    "end": "675040"
  },
  {
    "text": "provisioning support such as create and delete volume and rpcs that make sure volumes are",
    "start": "675040",
    "end": "680399"
  },
  {
    "text": "available for a part to use such as attach detach volume and mount and amount volume",
    "start": "680399",
    "end": "687600"
  },
  {
    "text": "it also has other functions such as expand volume snapshotting cloning or",
    "start": "687600",
    "end": "692720"
  },
  {
    "text": "health and so on",
    "start": "692720",
    "end": "696160"
  },
  {
    "start": "697000",
    "end": "697000"
  },
  {
    "text": "here is an example of a csi deployment it shows various kubernetes components",
    "start": "698640",
    "end": "705360"
  },
  {
    "text": "the css driver and the 3d system that is used to persist the data",
    "start": "705360",
    "end": "711440"
  },
  {
    "text": "here we have cube controller manager on master cc driver controller plugin is deployed",
    "start": "711440",
    "end": "718160"
  },
  {
    "text": "together with kubernetes csi external provisioner external attacher external resizer and",
    "start": "718160",
    "end": "725040"
  },
  {
    "text": "external snapshot or sidecars note that css driver controller pod does",
    "start": "725040",
    "end": "730320"
  },
  {
    "text": "not have to run on the same node as the kubernetes master but is recommended to run on dedicated",
    "start": "730320",
    "end": "737040"
  },
  {
    "text": "control plane nodes the kubernetes csi side cars are watching kubernetes api objects such as",
    "start": "737040",
    "end": "745920"
  },
  {
    "text": "pvcs pbs volume attachments volume snapshots to detect create volume",
    "start": "745920",
    "end": "752639"
  },
  {
    "text": "attached volume word expansion and volume snapshot requests",
    "start": "752639",
    "end": "758160"
  },
  {
    "text": "said course called the csr driver and the cset driver communicates with",
    "start": "758160",
    "end": "763680"
  },
  {
    "text": "the solid system to complete those volume operations on kubernetes worker nodes we have",
    "start": "763680",
    "end": "770639"
  },
  {
    "text": "cubelet and the csi driver node plugin deployed together with the node driver",
    "start": "770639",
    "end": "776880"
  },
  {
    "text": "registrar sidecar container node the driver registrar fetches driver",
    "start": "776880",
    "end": "783120"
  },
  {
    "text": "information using nodegate info from csi endpoint and the registers the css",
    "start": "783120",
    "end": "789200"
  },
  {
    "text": "driver with the cubelet on that node cubelet directly issues csi note get",
    "start": "789200",
    "end": "795120"
  },
  {
    "text": "info note stage volume and node publish volume calls against csr drivers to get info and",
    "start": "795120",
    "end": "803120"
  },
  {
    "text": "amount volumes that's all for the basic kubernetes storage concepts",
    "start": "803120",
    "end": "809279"
  },
  {
    "text": "next i will talk about how to get involved",
    "start": "809279",
    "end": "814519"
  },
  {
    "start": "813000",
    "end": "813000"
  },
  {
    "text": "here i included the sig storage community page it has a lot of information to get you started",
    "start": "814959",
    "end": "821920"
  },
  {
    "text": "we have bi-weekly meetings on thursdays where we go through features or tracking for each kubernetes release and discuss",
    "start": "821920",
    "end": "829440"
  },
  {
    "text": "any design issues or other issues added to the agenda doc this is a good place for a new",
    "start": "829440",
    "end": "835760"
  },
  {
    "text": "contributor to get started join the meeting and see how the sig",
    "start": "835760",
    "end": "841120"
  },
  {
    "text": "works what you are interested in and get assigned to work on some tasks",
    "start": "841120",
    "end": "848160"
  },
  {
    "text": "the communication within the sig is through the mailing list or slack channel",
    "start": "848160",
    "end": "854320"
  },
  {
    "start": "854000",
    "end": "854000"
  },
  {
    "text": "here i included some resources for your reference here are docs that explain what the",
    "start": "854639",
    "end": "861199"
  },
  {
    "text": "kubernetes storage concepts and what is csi the last reference is an example to",
    "start": "861199",
    "end": "868000"
  },
  {
    "text": "deploy the sample csr hostpass driver for a new contributor who wants to contribute code",
    "start": "868000",
    "end": "874720"
  },
  {
    "text": "it's good to follow this example and learn how csi works",
    "start": "874720",
    "end": "880160"
  },
  {
    "text": "that's all for the introduction handing over to michelle for the six storage update",
    "start": "880160",
    "end": "887839"
  },
  {
    "start": "889000",
    "end": "889000"
  },
  {
    "text": "thank you shing um so for the six storage update i'm going to",
    "start": "889120",
    "end": "894480"
  },
  {
    "text": "um deep dive into a couple of um major efforts that have been going on in",
    "start": "894480",
    "end": "900959"
  },
  {
    "text": "the sig for the last couple of releases and then i'll give a summary of",
    "start": "900959",
    "end": "908880"
  },
  {
    "text": "of projects that we have promoted in the 122 time frame",
    "start": "908880",
    "end": "914800"
  },
  {
    "text": "and talk about things some things that we're working on in 1.23 and also",
    "start": "914800",
    "end": "920639"
  },
  {
    "text": "things that are currently in design prototyping phases and then",
    "start": "920639",
    "end": "926480"
  },
  {
    "text": "other projects that we are working with other sigs on",
    "start": "926480",
    "end": "932320"
  },
  {
    "text": "so first in the deep dive i'll talk about csi migration",
    "start": "933360",
    "end": "939880"
  },
  {
    "start": "940000",
    "end": "940000"
  },
  {
    "text": "um to give some background on why we are doing csi migration um the kubernetes",
    "start": "941279",
    "end": "949600"
  },
  {
    "text": "project has deprecated all of the built-in cloud providers",
    "start": "949600",
    "end": "954959"
  },
  {
    "text": "and the project is targeting to remove these cloud providers starting in",
    "start": "954959",
    "end": "961040"
  },
  {
    "text": "1.24 so work has been going on for a lot of releases now to",
    "start": "961040",
    "end": "969279"
  },
  {
    "text": "decouple the cloud-specific controllers and kubernetes from the core kubernetes",
    "start": "969279",
    "end": "976160"
  },
  {
    "text": "engines and now that effort is finally approaching",
    "start": "976160",
    "end": "981360"
  },
  {
    "text": "a point where we can confidently switch over to the external cloud provider model",
    "start": "981360",
    "end": "988480"
  },
  {
    "text": "however persistent volumes have an especially interesting problem",
    "start": "988480",
    "end": "994560"
  },
  {
    "text": "because the cloud specific volume types are built directly into the core",
    "start": "994560",
    "end": "1001120"
  },
  {
    "text": "kubernetes volume apis and the kubernetes apis have very strict",
    "start": "1001120",
    "end": "1007440"
  },
  {
    "text": "backwards compatibility policies that make it difficult to modify or remove support for",
    "start": "1007440",
    "end": "1014320"
  },
  {
    "text": "the api so what we've come up with is the csi",
    "start": "1014320",
    "end": "1020480"
  },
  {
    "text": "migration project basically it allows you to continue",
    "start": "1020480",
    "end": "1026000"
  },
  {
    "text": "using any existing pvs and storage class objects that you have today that are",
    "start": "1026000",
    "end": "1032000"
  },
  {
    "text": "referencing the legacy volume ap ais even when the cloud provider controllers",
    "start": "1032000",
    "end": "1039280"
  },
  {
    "text": "are removed from the core of kubernetes how this works is underneath the covers",
    "start": "1039280",
    "end": "1045520"
  },
  {
    "text": "kubernetes will actually translate the legacy api into the new csi api",
    "start": "1045520",
    "end": "1053520"
  },
  {
    "text": "and it will redirect any volume operations that would have normally gone",
    "start": "1053520",
    "end": "1058960"
  },
  {
    "text": "to the entry controllers to the equivalent csi",
    "start": "1058960",
    "end": "1064000"
  },
  {
    "text": "driver so i'm sorry if you go back a page",
    "start": "1064000",
    "end": "1069200"
  },
  {
    "text": "currently the following entry volume types have a beta",
    "start": "1070640",
    "end": "1076480"
  },
  {
    "text": "implementation of csi migration that you can enable today in your clusters",
    "start": "1076480",
    "end": "1082480"
  },
  {
    "text": "and the plan is for these specific plugins csi migration features to be g8 in 1.24",
    "start": "1082480",
    "end": "1090720"
  },
  {
    "text": "so we have aws ebs azure disk azure file",
    "start": "1090720",
    "end": "1096480"
  },
  {
    "text": "openstack cinder gcepd and vsphere volumes",
    "start": "1096480",
    "end": "1103520"
  },
  {
    "text": "all right so moving on what do you need to do to actually turn",
    "start": "1103520",
    "end": "1109360"
  },
  {
    "text": "on csi migration so the answer depends",
    "start": "1109360",
    "end": "1114720"
  },
  {
    "text": "on whether or not you're using a managed kubernetes distribution or if you are managing your own or",
    "start": "1114720",
    "end": "1123840"
  },
  {
    "text": "creating and managing your own cluster so if you're using a managed kubernetes",
    "start": "1123840",
    "end": "1129440"
  },
  {
    "text": "distribution you will need to double check the documentation for your distro to see",
    "start": "1129440",
    "end": "1136240"
  },
  {
    "text": "how they're handling the csi migration and if there's any steps they might require you to do",
    "start": "1136240",
    "end": "1142320"
  },
  {
    "text": "but in most cases actually the distro should be taking care of everything to",
    "start": "1142320",
    "end": "1147919"
  },
  {
    "text": "enable the feature including installing the csi driver so",
    "start": "1147919",
    "end": "1152960"
  },
  {
    "text": "um you for those for it so if you're using a managed distribution you very likely",
    "start": "1152960",
    "end": "1159039"
  },
  {
    "text": "won't have to do anything to enable the feature but it's good to",
    "start": "1159039",
    "end": "1164160"
  },
  {
    "text": "double check just to be sure now if you are",
    "start": "1164160",
    "end": "1170400"
  },
  {
    "text": "managing your own kubernetes flavor then there are a couple of steps that you",
    "start": "1170400",
    "end": "1176640"
  },
  {
    "text": "need to do to turn on the feature first of all you will need to install the",
    "start": "1176640",
    "end": "1184160"
  },
  {
    "text": "replacement csi driver into your cluster",
    "start": "1184160",
    "end": "1189280"
  },
  {
    "text": "and once you do that then you'll have to enable the kubernetes feature gates",
    "start": "1189280",
    "end": "1195280"
  },
  {
    "text": "um in a pretty specific order which is documented in in the link below",
    "start": "1195280",
    "end": "1202480"
  },
  {
    "text": "and so please take a look if you're in this boat to look at",
    "start": "1202480",
    "end": "1208000"
  },
  {
    "text": "exactly the uh ordering sequence of enabling these feature gates",
    "start": "1208000",
    "end": "1214720"
  },
  {
    "text": "so there are some caveats with this feature even though",
    "start": "1215760",
    "end": "1221919"
  },
  {
    "text": "it is using csi under the covers you will not be able to use a csi only",
    "start": "1221919",
    "end": "1228960"
  },
  {
    "text": "functionality with the legacy api objects such as snapshots or cloning",
    "start": "1228960",
    "end": "1236640"
  },
  {
    "text": "the main purpose of csi migration is to make sure you have feature parity",
    "start": "1236640",
    "end": "1242880"
  },
  {
    "text": "with the legacy apis and it's not the purpose is not to",
    "start": "1242880",
    "end": "1248480"
  },
  {
    "text": "provide sort of for forward looking feature compatibility um so if you do need to use the newer",
    "start": "1248480",
    "end": "1257120"
  },
  {
    "text": "csi features then um i think instead of using csi migration",
    "start": "1257120",
    "end": "1264240"
  },
  {
    "text": "you will have to manually re-import the pve object as an equivalent csi volume",
    "start": "1264240",
    "end": "1270720"
  },
  {
    "text": "type so that you can use csi directly in your cluster",
    "start": "1270720",
    "end": "1277200"
  },
  {
    "text": "another caveat is that some drivers have some",
    "start": "1277200",
    "end": "1282400"
  },
  {
    "text": "sort of corner case and uncommon functionality that is not",
    "start": "1282400",
    "end": "1288159"
  },
  {
    "text": "going to work with csi migration we have identified most of these behaviors",
    "start": "1288159",
    "end": "1295679"
  },
  {
    "text": "and have already deprecated these behaviors in kubernetes",
    "start": "1295679",
    "end": "1301039"
  },
  {
    "text": "so please take a look at the kubernetes release notes",
    "start": "1301039",
    "end": "1306080"
  },
  {
    "text": "with the specific drivers you're using in mind to see if you are depending on",
    "start": "1306080",
    "end": "1312080"
  },
  {
    "text": "any of these behaviors we especially encourage everyone",
    "start": "1312080",
    "end": "1317760"
  },
  {
    "text": "to try out the feature in their own dev environments uh first",
    "start": "1317760",
    "end": "1323840"
  },
  {
    "text": "to help us make sure that you know there's no major issues and that we catch um",
    "start": "1323840",
    "end": "1329919"
  },
  {
    "text": "you know we catch and any surprises before uh we end up gaining the feature in",
    "start": "1329919",
    "end": "1335840"
  },
  {
    "text": "kubernetes and removing the cloud providers",
    "start": "1335840",
    "end": "1340320"
  },
  {
    "text": "right so that's um most that's mainly uh csi migration",
    "start": "1341200",
    "end": "1346400"
  },
  {
    "text": "in a nutshell i think yeah basically this is coming soon um",
    "start": "1346400",
    "end": "1352480"
  },
  {
    "text": "over the next release or two so please take a look if you're",
    "start": "1352480",
    "end": "1359679"
  },
  {
    "text": "in a working in a cloud environment and using a cloud volume plug-in and please reach out to us if you have any",
    "start": "1359679",
    "end": "1367120"
  },
  {
    "text": "questions or concerns about the feature all right",
    "start": "1367120",
    "end": "1373520"
  },
  {
    "text": "um so the next feature i'm going to talk about is csi windows",
    "start": "1373520",
    "end": "1380720"
  },
  {
    "start": "1375000",
    "end": "1375000"
  },
  {
    "text": "this feature g8 in 122 and",
    "start": "1380720",
    "end": "1386799"
  },
  {
    "text": "so to deal with the uh lack of windows privilege container",
    "start": "1386799",
    "end": "1392720"
  },
  {
    "text": "support um the the team has created this binary called",
    "start": "1392720",
    "end": "1398480"
  },
  {
    "text": "csi proxy it runs as a service on every host",
    "start": "1398480",
    "end": "1404799"
  },
  {
    "text": "and csi drivers will communicate with it through grpc to perform any privilege",
    "start": "1404799",
    "end": "1410159"
  },
  {
    "text": "operations that it needs to do such as formatting disks and mounting disks",
    "start": "1410159",
    "end": "1417840"
  },
  {
    "text": "the currently it supports operations uh for",
    "start": "1418080",
    "end": "1423679"
  },
  {
    "text": "ntfs based uh file systems uh samba",
    "start": "1423679",
    "end": "1429120"
  },
  {
    "text": "and then iscsi support is available in alpha as well and there's a couple of",
    "start": "1429120",
    "end": "1434880"
  },
  {
    "text": "drivers uh known drivers that have already implemented support for the",
    "start": "1434880",
    "end": "1441200"
  },
  {
    "text": "csi proxy api um i put a",
    "start": "1441200",
    "end": "1447760"
  },
  {
    "text": "so i did put a little asterisks next to um the mention about",
    "start": "1447760",
    "end": "1452799"
  },
  {
    "text": "no uh privileged containers support in windows um that's because in 122 there's",
    "start": "1452799",
    "end": "1460320"
  },
  {
    "text": "actually a new alpha feature that will allow privileged containers in windows",
    "start": "1460320",
    "end": "1465919"
  },
  {
    "text": "so what does that mean for the future of csi proxy",
    "start": "1465919",
    "end": "1471440"
  },
  {
    "text": "i think if the if this new alpha feature for privileged containers goes well",
    "start": "1471440",
    "end": "1476960"
  },
  {
    "text": "uh and you know it matures to beta and ga statuses then you know we can look",
    "start": "1476960",
    "end": "1483279"
  },
  {
    "text": "you know we can then remove the need for csi proxy and",
    "start": "1483279",
    "end": "1489039"
  },
  {
    "text": "instead of the csi proxy client doing grpc calls",
    "start": "1489039",
    "end": "1496720"
  },
  {
    "text": "the csi proxy client could instead just turn into a library call",
    "start": "1496720",
    "end": "1501760"
  },
  {
    "text": "to make various uh direct calls to the windows",
    "start": "1501760",
    "end": "1507200"
  },
  {
    "text": "system and so i think with that plan it also",
    "start": "1507200",
    "end": "1512559"
  },
  {
    "text": "makes the migration between this csi proxy model to a library model",
    "start": "1512559",
    "end": "1520400"
  },
  {
    "text": "more seamless for drivers because the apis will still remain",
    "start": "1520400",
    "end": "1525679"
  },
  {
    "text": "the same or at least significantly the same",
    "start": "1525679",
    "end": "1530559"
  },
  {
    "text": "so if if you are writing a csi driver and you want to support windows",
    "start": "1531039",
    "end": "1537440"
  },
  {
    "text": "i'm sorry if you're riding a csi driver and you want to support windows",
    "start": "1537440",
    "end": "1543120"
  },
  {
    "text": "please take a look at csi proxy and also um go",
    "start": "1543120",
    "end": "1548640"
  },
  {
    "text": "go ahead and if you have questions there's a csi windows slack channel where you can you know ask",
    "start": "1548640",
    "end": "1555520"
  },
  {
    "text": "questions or you know if you want to help out with the project that's also great too",
    "start": "1555520",
    "end": "1560880"
  },
  {
    "text": "all right so i think that's it for um the deep dives on uh some of the major features",
    "start": "1564000",
    "end": "1570320"
  },
  {
    "text": "that we have been working on over the last uh couple releases",
    "start": "1570320",
    "end": "1576559"
  },
  {
    "text": "i'm just gonna show a list of all of the features that we graduated in",
    "start": "1576559",
    "end": "1583000"
  },
  {
    "start": "1577000",
    "end": "1577000"
  },
  {
    "text": "122 and i'm going to highlight a couple of them so",
    "start": "1583000",
    "end": "1588400"
  },
  {
    "text": "graduating to ga uh i think like we mentioned we have csi windows",
    "start": "1588400",
    "end": "1594400"
  },
  {
    "text": "and then we have this other feature called passing the pod service account to a csi driver",
    "start": "1594400",
    "end": "1601919"
  },
  {
    "text": "this is a very important feature for any csi driver authors out there",
    "start": "1601919",
    "end": "1607360"
  },
  {
    "text": "as this allows csi drivers to authenticate on behalf of the pod",
    "start": "1607360",
    "end": "1613760"
  },
  {
    "text": "so this feature allows you to be able to support per pod apples",
    "start": "1613760",
    "end": "1620720"
  },
  {
    "text": "on your volumes or whatever data that your csi driver is accessing",
    "start": "1620720",
    "end": "1628000"
  },
  {
    "text": "and it's already being used in some ephemeral csi drivers like the secret store csi driver that we mentioned",
    "start": "1628000",
    "end": "1634640"
  },
  {
    "text": "earlier another interesting uh feature that",
    "start": "1634640",
    "end": "1641600"
  },
  {
    "text": "we've done in 122 is uh the read write once pod access mode um so this feature",
    "start": "1641600",
    "end": "1648880"
  },
  {
    "text": "went alpha in 122 and uh this basically",
    "start": "1648880",
    "end": "1654399"
  },
  {
    "text": "uh fixes a common misconception about access modes and kubernetes um so the",
    "start": "1654399",
    "end": "1661360"
  },
  {
    "text": "current read write wants access mode that's available today um",
    "start": "1661360",
    "end": "1668240"
  },
  {
    "text": "indicates that a volume can be attached to one node at a",
    "start": "1668240",
    "end": "1674559"
  },
  {
    "text": "time but it doesn't actually indicate how many pods on that node",
    "start": "1674559",
    "end": "1682399"
  },
  {
    "text": "can mount that volume so with read write once",
    "start": "1682399",
    "end": "1687600"
  },
  {
    "text": "pd's today you can actually have multiple pd's or sorry you can have multiple pods scheduled on the same node",
    "start": "1687600",
    "end": "1695679"
  },
  {
    "text": "and all be able to mount that volume and that is um sort of an unexpected",
    "start": "1695679",
    "end": "1702720"
  },
  {
    "text": "surprise to a lot of applications there and so now we have added this new read write once",
    "start": "1702720",
    "end": "1710640"
  },
  {
    "text": "pod access mode where we are actually able to enforce",
    "start": "1710640",
    "end": "1716559"
  },
  {
    "text": "um not only the single node for attach but also that a single pod can mount",
    "start": "1716559",
    "end": "1722720"
  },
  {
    "text": "only a single pod can mount that volume so um yeah that's a very interesting one",
    "start": "1722720",
    "end": "1728080"
  },
  {
    "text": "to look for uh look forward to in 122. um so i'm gonna go on to 123 now",
    "start": "1728080",
    "end": "1736960"
  },
  {
    "text": "and talk about some of the things that we're doing there um we are doing again we're doing a lot of things",
    "start": "1736960",
    "end": "1744240"
  },
  {
    "start": "1737000",
    "end": "1737000"
  },
  {
    "text": "in 123 in the sig um so i'm only going to highlight a couple of them here",
    "start": "1744240",
    "end": "1751120"
  },
  {
    "text": "um first uh we are planning to graduate",
    "start": "1751120",
    "end": "1756159"
  },
  {
    "text": "two features related to fs group to ga",
    "start": "1756159",
    "end": "1761200"
  },
  {
    "text": "so this first fs group feature is uh called skip volume ownership",
    "start": "1761200",
    "end": "1767520"
  },
  {
    "text": "this feature improves the time that it takes to mount volumes that have a lot of files in them",
    "start": "1767520",
    "end": "1775679"
  },
  {
    "text": "by only updating the ownership of the files",
    "start": "1775679",
    "end": "1780880"
  },
  {
    "text": "when the top level directory owner doesn't match what the fs group says",
    "start": "1780880",
    "end": "1787039"
  },
  {
    "text": "so for volumes that have thousands of files in them we've seen in in some cases that this",
    "start": "1787039",
    "end": "1793840"
  },
  {
    "text": "feature is able to bring them out time down from something that originally took more than",
    "start": "1793840",
    "end": "1801039"
  },
  {
    "text": "30 minutes and it brings it down to seconds so this is",
    "start": "1801039",
    "end": "1806399"
  },
  {
    "text": "a very important feature to enable in your pods if you're using fs group and you have and your volumes have a lot of",
    "start": "1806399",
    "end": "1813360"
  },
  {
    "text": "data inside of them the next fs group related feature is",
    "start": "1813360",
    "end": "1818799"
  },
  {
    "text": "called csifs group policy this feature allows a csi driver to",
    "start": "1818799",
    "end": "1825279"
  },
  {
    "text": "explicitly opt into supporting fs group previously without this kubernetes",
    "start": "1825279",
    "end": "1832880"
  },
  {
    "text": "uses a heuristic to determine which drivers",
    "start": "1832880",
    "end": "1838399"
  },
  {
    "text": "will have fs group applied with them and the heuristic is a bit flawed in certain",
    "start": "1838399",
    "end": "1844960"
  },
  {
    "text": "scenarios so this feature allows csi driver to opt-in explicitly",
    "start": "1844960",
    "end": "1851840"
  },
  {
    "text": "and lastly for our ga graduation features we are targeting generic ephemeral volumes",
    "start": "1852399",
    "end": "1859279"
  },
  {
    "text": "which shane introduced earlier during this presentation",
    "start": "1859279",
    "end": "1864480"
  },
  {
    "text": "so i won't i won't um rehash that here",
    "start": "1864480",
    "end": "1869039"
  },
  {
    "text": "i think moving on beyond 1.23",
    "start": "1869600",
    "end": "1875080"
  },
  {
    "start": "1875000",
    "end": "1875000"
  },
  {
    "text": "we have a number of features that are currently in prototyping and design",
    "start": "1875519",
    "end": "1881760"
  },
  {
    "text": "phases so if you know any of these things sound",
    "start": "1881760",
    "end": "1887360"
  },
  {
    "text": "useful to you please reach out to us",
    "start": "1887360",
    "end": "1892720"
  },
  {
    "text": "and reach out to us uh via our mailing list or slack channels we'd be happy to um",
    "start": "1892720",
    "end": "1899120"
  },
  {
    "text": "discuss further on any of these and if you want to be involved in this in the you know design",
    "start": "1899120",
    "end": "1904320"
  },
  {
    "text": "design discussions too in addition to these features",
    "start": "1904320",
    "end": "1909440"
  },
  {
    "text": "we are also working with other sigs in kubernetes to co-develop some other",
    "start": "1909440",
    "end": "1916320"
  },
  {
    "start": "1913000",
    "end": "1913000"
  },
  {
    "text": "things so we have in the data protection work group um we're working on",
    "start": "1916320",
    "end": "1923760"
  },
  {
    "text": "design for change block tracking and this is pretty uh important for enabling",
    "start": "1923760",
    "end": "1930640"
  },
  {
    "text": "the ability to do efficient backups of volumes",
    "start": "1930640",
    "end": "1935679"
  },
  {
    "text": "and then in sig apps we are collaborating with them to",
    "start": "1935679",
    "end": "1941919"
  },
  {
    "text": "make some improvements to the stateful set pvc lifecycle",
    "start": "1941919",
    "end": "1947600"
  },
  {
    "text": "and then sig node uh we're working on this uh initiative called container notifier",
    "start": "1947600",
    "end": "1953760"
  },
  {
    "text": "which is important for the snapshotting feature to be able to quiesce",
    "start": "1953760",
    "end": "1959679"
  },
  {
    "text": "applications before taking a snapshot and lastly with sig api machinery um",
    "start": "1959679",
    "end": "1967200"
  },
  {
    "text": "we're proposing this new uh protection mechanism called",
    "start": "1967200",
    "end": "1973360"
  },
  {
    "text": "lien to prevent objects from being deleted while they",
    "start": "1973360",
    "end": "1980559"
  },
  {
    "text": "are still being used um or taken by another object",
    "start": "1980559",
    "end": "1986880"
  },
  {
    "text": "so um yeah as you can see we have a lot of projects going on in",
    "start": "1986880",
    "end": "1993600"
  },
  {
    "text": "various phases of design and implementation if you're interested in learning more",
    "start": "1993600",
    "end": "1999840"
  },
  {
    "text": "about any of these projects or you want to help out please join us in our six storage",
    "start": "1999840",
    "end": "2005519"
  },
  {
    "text": "meetings and reach out to us on in our slack channel and we will be happy to discuss",
    "start": "2005519",
    "end": "2012240"
  },
  {
    "text": "you know any of these in more detail right so thank you everyone",
    "start": "2012240",
    "end": "2018640"
  },
  {
    "text": "this concludes our session and will be available for a q a after this thank you",
    "start": "2018640",
    "end": "2026919"
  }
]