[
  {
    "text": "all right we're about four after got quite a few attendees on today's call",
    "start": "30",
    "end": "7309"
  },
  {
    "text": "it's obvious why we're talking about service mesh today thank you all for",
    "start": "7309",
    "end": "13049"
  },
  {
    "text": "coming welcome to today's webinar simplifying",
    "start": "13049",
    "end": "18840"
  },
  {
    "text": "micro services security with the service mesh I'm Willie Calvo ciencia ambassador and",
    "start": "18840",
    "end": "25439"
  },
  {
    "text": "head of Technology Strategy at SolarWinds I'll be moderating today's webinar we would like to welcome our",
    "start": "25439",
    "end": "33540"
  },
  {
    "text": "presenter today our star ani Rajesh Lavar is the engineering lead Aston mesh",
    "start": "33540",
    "end": "39989"
  },
  {
    "text": "I do have a few housecleaning items for us to walk through just an advance but",
    "start": "39989",
    "end": "47550"
  },
  {
    "text": "me Raj taking it away note that you're",
    "start": "47550",
    "end": "54420"
  },
  {
    "text": "all here on a webinar that you're all muted at the moment we do highly",
    "start": "54420",
    "end": "60809"
  },
  {
    "text": "encourage your questions please pop those into the Q&A and any time that you",
    "start": "60809",
    "end": "66409"
  },
  {
    "text": "have a question will likely take a break or two during new Rajas presentation to",
    "start": "66409",
    "end": "73590"
  },
  {
    "text": "answer your questions so do you find the Q&A box at the bottom of your screen",
    "start": "73590",
    "end": "78680"
  },
  {
    "text": "we'll get to as many of those as we can yes before you ask this session is being",
    "start": "78680",
    "end": "85799"
  },
  {
    "text": "recorded and the recording will be sent out along with a link to the",
    "start": "85799",
    "end": "91079"
  },
  {
    "text": "presentation shortly after our call with",
    "start": "91079",
    "end": "96119"
  },
  {
    "text": "that let's give a warm welcome to nadar thanks Lee hello everyone I am",
    "start": "96119",
    "end": "103380"
  },
  {
    "text": "neeraj I'm the engineering lead at Aspen mesh thank you for joining in on this webinar about simplifying micro services",
    "start": "103380",
    "end": "110640"
  },
  {
    "text": "security with a service mesh before I begin I would like to give a quick overview of how my presentation is",
    "start": "110640",
    "end": "117270"
  },
  {
    "text": "structured so it's easy to follow along first I'm going to talk about why security is difficult in micro services",
    "start": "117270",
    "end": "124469"
  },
  {
    "text": "as compared to monoliths and then move on to some of the key concepts of micro services security authentication and",
    "start": "124469",
    "end": "131069"
  },
  {
    "text": "authorization then talk about how servus mesh can help you simplify it especially taking Steve as an example",
    "start": "131069",
    "end": "139590"
  },
  {
    "text": "talk about excuse architecture then zoom back in into the key concepts around",
    "start": "139590",
    "end": "145070"
  },
  {
    "text": "authentication and authorization take various architectural choices you have both without the service mesh and with",
    "start": "145070",
    "end": "151440"
  },
  {
    "text": "the service mesh and then like I likely said in the end we'll have some time for Q&A so with that let's get started",
    "start": "151440",
    "end": "159860"
  },
  {
    "text": "so security health in general has always been difficult it's even more difficult",
    "start": "161650",
    "end": "167150"
  },
  {
    "text": "in microservices as this illustration represents we are no longer in the mono",
    "start": "167150",
    "end": "174829"
  },
  {
    "text": "line or the monolith world as compared to micro-services when I think about micro services there are three key",
    "start": "174829",
    "end": "181370"
  },
  {
    "text": "things which are different that make the security even harder to implement first",
    "start": "181370",
    "end": "187629"
  },
  {
    "text": "there is no single point of control so in the monolith world you had a single",
    "start": "187629",
    "end": "193219"
  },
  {
    "text": "point of control where you could easily protect your parameter if you were protecting your ingress using a big IP",
    "start": "193219",
    "end": "200090"
  },
  {
    "text": "or a firewall or nginx you were secured the when the request came to your",
    "start": "200090",
    "end": "207889"
  },
  {
    "text": "monolith now it was contained within that monolith and more or less you were using process level interface 2 or",
    "start": "207889",
    "end": "214700"
  },
  {
    "text": "libraries to communicate with each other now you have broken apart your monolith and now you have multiple micro services",
    "start": "214700",
    "end": "221540"
  },
  {
    "text": "and these micro services are talking to each other over network they are using",
    "start": "221540",
    "end": "227180"
  },
  {
    "text": "mirrors of protocols and like HTTP gr peace the Redis so you have just",
    "start": "227180",
    "end": "234440"
  },
  {
    "text": "increased that complexity and you have lost your strategic point of control as",
    "start": "234440",
    "end": "240199"
  },
  {
    "text": "a security person you can see how this can be very difficult to manage moving",
    "start": "240199",
    "end": "245629"
  },
  {
    "text": "on most of the micro services are built using polyglot polyglot languages what I",
    "start": "245629",
    "end": "252379"
  },
  {
    "text": "mean by that is micro services encourage developers to write applications using",
    "start": "252379",
    "end": "257810"
  },
  {
    "text": "languages that make it more efficient and that make it more easy to maintain naturally that means you will have",
    "start": "257810",
    "end": "264310"
  },
  {
    "text": "applications running Java go no js' Python now if you're trying to implement",
    "start": "264310",
    "end": "271370"
  },
  {
    "text": "security using libraries or using these frameworks you can imagine the",
    "start": "271370",
    "end": "276710"
  },
  {
    "text": "complexity as these languages keep on growing because you are embedding your",
    "start": "276710",
    "end": "281750"
  },
  {
    "text": "security in the applications first how are you going to ensure uniformity across these languages it's no longer a",
    "start": "281750",
    "end": "288500"
  },
  {
    "text": "single languages it's no longer a single language that you can just implement a library and share a cross additionally",
    "start": "288500",
    "end": "294889"
  },
  {
    "text": "if you have a Quixote patch no you have to wait for that patch to be applied on all these frameworks traditionally developers and",
    "start": "294889",
    "end": "303280"
  },
  {
    "text": "operators all and the security operators always have a strenuous relationship it's luck it's kind of a love and hate",
    "start": "303280",
    "end": "309580"
  },
  {
    "text": "where they both need each other but at the same point they hate each other because they might slow it that they",
    "start": "309580",
    "end": "315370"
  },
  {
    "text": "might slow their progress having polyglot applications and micro sources just makes the relationship worse the",
    "start": "315370",
    "end": "322000"
  },
  {
    "text": "security people are more coupled to the developers if the application developer",
    "start": "322000",
    "end": "327520"
  },
  {
    "text": "is responsible for enforcing security moving on the third point is the",
    "start": "327520",
    "end": "333220"
  },
  {
    "text": "increased surface area which in a way is a combination of the first two points but I like to mention it separately",
    "start": "333220",
    "end": "339610"
  },
  {
    "text": "because it's beyond those two points when you break apart a monolith into microservices yes you are increasing",
    "start": "339610",
    "end": "346540"
  },
  {
    "text": "your surface area by the network calls they are making for the different languages they are using at the same",
    "start": "346540",
    "end": "351550"
  },
  {
    "text": "time now you are using different containers those containers come from different base images which are all not",
    "start": "351550",
    "end": "357490"
  },
  {
    "text": "in your control additionally you might be deploying your containers and applications and environments where you",
    "start": "357490",
    "end": "364210"
  },
  {
    "text": "might not be even controlling the nodes on which they are running so all in all this makes enforcing security in micro",
    "start": "364210",
    "end": "370960"
  },
  {
    "text": "services a lot more challenging than what it used to be in monoliths and that's why it's really important to",
    "start": "370960",
    "end": "378310"
  },
  {
    "text": "understand how can you simplify your security landscape if you have our micro service architecture",
    "start": "378310",
    "end": "384420"
  },
  {
    "text": "so when we talk about key aspects of Microsoft security I wanna focus on two",
    "start": "384420",
    "end": "389880"
  },
  {
    "text": "key things here which are authentication and authorization authentication is the",
    "start": "389880",
    "end": "395340"
  },
  {
    "text": "act of verifying or validating your end-user or the client who is currently",
    "start": "395340",
    "end": "400770"
  },
  {
    "text": "making a request in micro-services sometimes it's actually the combination",
    "start": "400770",
    "end": "405900"
  },
  {
    "text": "of both because the client which is connecting to you might be a micro service in your network but it might be",
    "start": "405900",
    "end": "413220"
  },
  {
    "text": "making a request on behalf of an end-user request that kml so it's it's",
    "start": "413220",
    "end": "418740"
  },
  {
    "text": "crucial to understand the complication that arises in the micro service world just for authentication normally you",
    "start": "418740",
    "end": "425220"
  },
  {
    "text": "will authenticate by creating a login and a password most of the modern",
    "start": "425220",
    "end": "430410"
  },
  {
    "text": "applications delegate that to identity management solution like kognito where",
    "start": "430410",
    "end": "436170"
  },
  {
    "text": "the login password goes to kognito the AWS company no framework for example and",
    "start": "436170",
    "end": "441300"
  },
  {
    "text": "the cognitive framework gives back a chart token or a JSON web token where",
    "start": "441300",
    "end": "446790"
  },
  {
    "text": "the applications are eventually presented that token from the end user and that token acts as the identity as",
    "start": "446790",
    "end": "454260"
  },
  {
    "text": "the request moves along in the cluster the token is the identity which verifies",
    "start": "454260",
    "end": "459960"
  },
  {
    "text": "the user so for the rest of this presentation when we are focusing on",
    "start": "459960",
    "end": "465000"
  },
  {
    "text": "authentication I'm going to assume that this is the architecture that various applications are using where a JSON web",
    "start": "465000",
    "end": "471780"
  },
  {
    "text": "token or similar token like architecture is what you have entered under authorization on the other hand is the",
    "start": "471780",
    "end": "478020"
  },
  {
    "text": "act of verifying or validating if the end-user or the client is allowed to",
    "start": "478020",
    "end": "483420"
  },
  {
    "text": "make the request or has the right permissions to access the resource that they're trying to do in a multi-tenant",
    "start": "483420",
    "end": "489560"
  },
  {
    "text": "environment if your application has multiple users or quality of services normally you need some sort of",
    "start": "489560",
    "end": "496080"
  },
  {
    "text": "authorization and the both go hand in hand but authorization is always the",
    "start": "496080",
    "end": "501210"
  },
  {
    "text": "step which follows closely once you have authenticated the user it's similar to saying if you have different roles for",
    "start": "501210",
    "end": "507390"
  },
  {
    "text": "example you have admins readers and writers then you want to know what actions they can or cannot do so with",
    "start": "507390",
    "end": "515909"
  },
  {
    "text": "that background our make a statement here saying service mesh can simplify your security at this",
    "start": "515910",
    "end": "522479"
  },
  {
    "text": "point this is just the statement hopefully by the end of the presentation I have convinced you that this is the truth in lack of service mesh what you",
    "start": "522479",
    "end": "531450"
  },
  {
    "text": "end up doing is to just to enforce authentication and authorization you will write the logic in your",
    "start": "531450",
    "end": "537000"
  },
  {
    "text": "applications making them too complicated and coupling your operations and your developers team to too close and too",
    "start": "537000",
    "end": "544170"
  },
  {
    "text": "tightly service measures can simplify security and by simplifying what I mean",
    "start": "544170",
    "end": "551010"
  },
  {
    "text": "is it gives developers an opportunity to offload some of the functionality into the mesh so let me give a quick",
    "start": "551010",
    "end": "557220"
  },
  {
    "text": "background of what service meshes are so service mesh is an infrastructure layer that handles communication between your",
    "start": "557220",
    "end": "563370"
  },
  {
    "text": "micro services as part of handling the communication between the micro services it can offload the advanced traffic",
    "start": "563370",
    "end": "570779"
  },
  {
    "text": "functionality and the security functionalities like authentication and authorization so most of the service",
    "start": "570779",
    "end": "577470"
  },
  {
    "text": "meshes work by adding a proxy which will intercept traffic going in and out of",
    "start": "577470",
    "end": "582750"
  },
  {
    "text": "your application as part of intercepting the traffic these proxies which are not",
    "start": "582750",
    "end": "589680"
  },
  {
    "text": "just parsing at layer 4 but they are passing the application level protocols they can implement the complex",
    "start": "589680",
    "end": "595890"
  },
  {
    "text": "functionality of authentication or authorization as they understand this protocols much better depending on where",
    "start": "595890",
    "end": "603120"
  },
  {
    "text": "and how you place your proxy there are various architecture options that are available to you and each of these",
    "start": "603120",
    "end": "609089"
  },
  {
    "text": "options have both have benefits and disadvantages one of the architectural",
    "start": "609089",
    "end": "615120"
  },
  {
    "text": "options is a sidecar proxy deployment and this is what the service mesh which",
    "start": "615120",
    "end": "620279"
  },
  {
    "text": "I am going to use STO uses by a sidecar deployment model I what I mean is the",
    "start": "620279",
    "end": "627870"
  },
  {
    "text": "Envoy proxy the proxy which is used in sto is placed in the same pod as your",
    "start": "627870",
    "end": "635040"
  },
  {
    "text": "application container is running so in kubernetes if you if you're using",
    "start": "635040",
    "end": "640500"
  },
  {
    "text": "kubernetes you have the concept of pods where you can have multiple containers in sto the sidecut proxy will be placed",
    "start": "640500",
    "end": "648060"
  },
  {
    "text": "inside the same pod which means from outside they look like the same Network entity",
    "start": "648060",
    "end": "653540"
  },
  {
    "text": "they share the same networking namespace and the IP inside they're still two separate containers so they have",
    "start": "653540",
    "end": "660590"
  },
  {
    "text": "separate file system and process level isolation so this gives them the right kind of isolation that you want and",
    "start": "660590",
    "end": "669040"
  },
  {
    "text": "uniformity for the network where you can have the application container built and",
    "start": "669040",
    "end": "675050"
  },
  {
    "text": "deployed separately and thus proxy have its own build lifecycle so normally in",
    "start": "675050",
    "end": "682400"
  },
  {
    "text": "history of what that means is when the application makes a request out it will be intercepted by the sidecars here",
    "start": "682400",
    "end": "689000"
  },
  {
    "text": "shown in pink then the sidecar is eventually going to make a request out to the other container in which the",
    "start": "689000",
    "end": "696290"
  },
  {
    "text": "request will again be intercepted by the sidecar container and then eventually forward forwarded on to the application",
    "start": "696290",
    "end": "702430"
  },
  {
    "text": "the same path is going to be followed for the reverse side when the response is made all the side cars together or",
    "start": "702430",
    "end": "710750"
  },
  {
    "text": "what we call the data plane of the of the steo architecture history has a nice",
    "start": "710750",
    "end": "717860"
  },
  {
    "text": "separation between the control plane and the data plane the control plane here is shown in blue at the top the control",
    "start": "717860",
    "end": "725510"
  },
  {
    "text": "plane is responsible for configuring configuring the Envoy and the data plane proxies at the same time it is",
    "start": "725510",
    "end": "731720"
  },
  {
    "text": "responsible for providing an abstraction layer from the data plane the control",
    "start": "731720",
    "end": "737270"
  },
  {
    "text": "plane itself in Sto is distributed so the control plane has various components",
    "start": "737270",
    "end": "743420"
  },
  {
    "text": "which can independently scale and you can upgrade them depending on the requirement similarly having a",
    "start": "743420",
    "end": "749480"
  },
  {
    "text": "decoupling between the control plane and the data plane gives you the ability to independently scale and upgrade them so",
    "start": "749480",
    "end": "756740"
  },
  {
    "text": "I'm going to quickly go over some of the key control plane elements here so that we can use them later in representation",
    "start": "756740",
    "end": "762890"
  },
  {
    "text": "so first is pilot pilots job is to provide an abstraction layer for the configuration so it looks at your",
    "start": "762890",
    "end": "769960"
  },
  {
    "text": "platform specific configuration so if you're using kubernetes it will look at services endpoints pods and then lower",
    "start": "769960",
    "end": "778220"
  },
  {
    "text": "it to the configuration that envoy understands similarly pilot also consumes all the ICU level configuration",
    "start": "778220",
    "end": "785210"
  },
  {
    "text": "and lowers it to envoy this provides the benefit to the operators where they can",
    "start": "785210",
    "end": "790460"
  },
  {
    "text": "use their platform specific configuration and api's and don't have to worry about on why api's second is",
    "start": "790460",
    "end": "797660"
  },
  {
    "text": "mixer mixer provides two key functionalities one is mixer provides one form of policy enforcement we will",
    "start": "797660",
    "end": "806030"
  },
  {
    "text": "talk in detail later how that works the second is it provides a layer for telemetry abstraction where your side",
    "start": "806030",
    "end": "813650"
  },
  {
    "text": "cards or the data plane can export statistics and tracing for example in some format but mixer can transpose this",
    "start": "813650",
    "end": "821630"
  },
  {
    "text": "and add as a adapter layer where you can you can actually anyway you can eventually send that data to a back-end",
    "start": "821630",
    "end": "828620"
  },
  {
    "text": "system like Prometheus or a Google stripe driver so in this way again there is an abstraction between what the data",
    "start": "828620",
    "end": "835370"
  },
  {
    "text": "plane can do and what the control in supports Citadel is the control plane",
    "start": "835370",
    "end": "841250"
  },
  {
    "text": "element responsible for creating certificates and rotating certificates on a regular cadence so in Sto if you",
    "start": "841250",
    "end": "847820"
  },
  {
    "text": "are using functionality like which will TLS which I am going to cover in details  l is the component you create",
    "start": "847820",
    "end": "854240"
  },
  {
    "text": "these certificates and present them to the Envoy sidecar traditionally Citadel always use the platform specific",
    "start": "854240",
    "end": "861740"
  },
  {
    "text": "mechanism so it will use things like kubernetes secrets and those secrets",
    "start": "861740",
    "end": "867230"
  },
  {
    "text": "will be mounted on the filesystem but going with but from sto 1.1 release",
    "start": "867230",
    "end": "872660"
  },
  {
    "text": "going forward Citadel provides a implementation for the secret discovery service or the SDS",
    "start": "872660",
    "end": "880490"
  },
  {
    "text": "API which now on voice can consume directly to get those secrets and this",
    "start": "880490",
    "end": "885650"
  },
  {
    "text": "makes it more secure so that the secrets or your certificates and keys are never",
    "start": "885650",
    "end": "890770"
  },
  {
    "text": "exposed in the file system we reducing yet rather vector of attack the sidecar",
    "start": "890770",
    "end": "896480"
  },
  {
    "text": "injectors are a kubernetes specific control plane element which are responsible for injecting the sidecars",
    "start": "896480",
    "end": "903790"
  },
  {
    "text": "automatically when the file when the pods are coming up this makes sure that you don't have security escapes if you",
    "start": "903790",
    "end": "910970"
  },
  {
    "text": "are relying on sto for enforcing them where some ports may or may not have sidecars",
    "start": "910970",
    "end": "916340"
  },
  {
    "text": "the last two components are the ingress gateway and the egress gateway the ingress gateways responsible for",
    "start": "916340",
    "end": "923660"
  },
  {
    "text": "letting traffic into your mesh and the egress gateway can be used for controlling traffic out of your mesh so",
    "start": "923660",
    "end": "931370"
  },
  {
    "text": "with that background I would like to now so zoom in into one of the key concepts",
    "start": "931370",
    "end": "936920"
  },
  {
    "text": "for security which is authentication and then see how what options you have for",
    "start": "936920",
    "end": "946300"
  },
  {
    "text": "verifying them I think this might be a good point for some Q&A if there are some questions those burning questions",
    "start": "946300",
    "end": "967150"
  },
  {
    "text": "see your Q&A panel below ask your questions also we may have a poll for",
    "start": "967150",
    "end": "975770"
  },
  {
    "text": "you so if you see a full pop up be on the lookout for that we're curious as",
    "start": "975770",
    "end": "982100"
  },
  {
    "text": "where people are on their journeys with with service master so with that they go",
    "start": "982100",
    "end": "988190"
  },
  {
    "text": "back to you Niraj more on authentication all right Thank You leo i just see a",
    "start": "988190",
    "end": "994340"
  },
  {
    "text": "question popping OH",
    "start": "994340",
    "end": "997510"
  },
  {
    "text": "coming through all right Leon yeah",
    "start": "999730",
    "end": "1008460"
  },
  {
    "text": "questions from one of the questions here if I get it correctly and that's you",
    "start": "1008460",
    "end": "1014170"
  },
  {
    "text": "know it sounds like probably in contrast to kubernetes and I mean I'm",
    "start": "1014170",
    "end": "1020080"
  },
  {
    "text": "interpreting the question you're so in contrast to kubernetes how does East iou's are back and kind of mission",
    "start": "1020080",
    "end": "1027189"
  },
  {
    "text": "controller some of these overlapping concepts differ oh that's a great",
    "start": "1027190",
    "end": "1034089"
  },
  {
    "text": "question and I have a separate section in my presentation just for authorization and sto are back so let me",
    "start": "1034089",
    "end": "1040990"
  },
  {
    "text": "revisit this and if by the end of that section this question is still unanswered I'll be more than happy to",
    "start": "1040990",
    "end": "1046390"
  },
  {
    "text": "elaborate okay other questions just little three can",
    "start": "1046390",
    "end": "1052240"
  },
  {
    "text": "you explain again the security part",
    "start": "1052240",
    "end": "1056820"
  },
  {
    "text": "certificate II absolutely so Citadel is responsible for creating",
    "start": "1057330",
    "end": "1064260"
  },
  {
    "text": "certificates for the data plane or the Envoy proxy when you have mutual TLS",
    "start": "1064260",
    "end": "1070060"
  },
  {
    "text": "enabled so normally when you have M TLS enabled you have to manage certificates",
    "start": "1070060",
    "end": "1076660"
  },
  {
    "text": "for both the client and the server side normally this is quite painful to do on",
    "start": "1076660",
    "end": "1081760"
  },
  {
    "text": "your own you have to keep rotating them so Citadel will create those certificates with the identity is that I",
    "start": "1081760",
    "end": "1087190"
  },
  {
    "text": "am going to talk about later additionally Citadel is now exposing a secret discovery service API which is a",
    "start": "1087190",
    "end": "1095230"
  },
  {
    "text": "new API that Anwar added which allows you to fetch those certificates and",
    "start": "1095230",
    "end": "1100240"
  },
  {
    "text": "secrets directly so you don't have to mount those certificates on the file",
    "start": "1100240",
    "end": "1105940"
  },
  {
    "text": "system and because you are no longer mounting them in your file system you are reducing your vector for tax",
    "start": "1105940",
    "end": "1113520"
  },
  {
    "text": "yeah Thank You Eurasia those are those are all the questions that we have right now all right thanks",
    "start": "1114490",
    "end": "1120440"
  },
  {
    "text": "Lee let me continue on to authentication and we will elaborate we're going to talk more about Citadel as we go as",
    "start": "1120440",
    "end": "1126200"
  },
  {
    "text": "we'll go along all right so as I was saying I am going to assume that you are using some sort",
    "start": "1126200",
    "end": "1132769"
  },
  {
    "text": "of token in this case I'm going to assume you're using JWT tokens in your applications to validate the end user so",
    "start": "1132769",
    "end": "1139370"
  },
  {
    "text": "this is the first option you can do you can have in your applications where the application itself is validating the",
    "start": "1139370",
    "end": "1146629"
  },
  {
    "text": "chart token so here we have two applications or two micro services I should say you have user service written",
    "start": "1146629",
    "end": "1153230"
  },
  {
    "text": "in go and you have your payment service written in Python so the end user is",
    "start": "1153230",
    "end": "1159679"
  },
  {
    "text": "making a request which comes to your ingress and that request is encrypted and it has a JSON web token in it as the",
    "start": "1159679",
    "end": "1169549"
  },
  {
    "text": "authorization header the ingress will do the termination for those requests so that means normally this is the format I",
    "start": "1169549",
    "end": "1176840"
  },
  {
    "text": "have seen which many users and many organizations have ingress is the TLS",
    "start": "1176840",
    "end": "1182419"
  },
  {
    "text": "termination point so going forward what that means is ingress is then going to",
    "start": "1182419",
    "end": "1187820"
  },
  {
    "text": "forward those requests to the services based on paths for example so here if it is a slash user it goes to a user",
    "start": "1187820",
    "end": "1194539"
  },
  {
    "text": "service if it is slash payments goes to the payment service so what that means is the request which contains the jar",
    "start": "1194539",
    "end": "1201710"
  },
  {
    "text": "token in authorization header is passed in plain text from ingress to the backend and then the backend uses some",
    "start": "1201710",
    "end": "1209029"
  },
  {
    "text": "sort of library to validate the jar token and then if the request is valid",
    "start": "1209029",
    "end": "1215179"
  },
  {
    "text": "it actually processes it if it is invalid that it sends authentication",
    "start": "1215179",
    "end": "1221240"
  },
  {
    "text": "rejected response to the client so there are two problems that happens if you implement this architecture first is as",
    "start": "1221240",
    "end": "1227840"
  },
  {
    "text": "you can see the link between the ingress and the back end is unencrypted that means you are opening yourself to replay",
    "start": "1227840",
    "end": "1235249"
  },
  {
    "text": "attacks as anyone who is eavesdropping on the network can capture the jar token",
    "start": "1235249",
    "end": "1241309"
  },
  {
    "text": "and assume the identity of the end user second you are using",
    "start": "1241309",
    "end": "1246330"
  },
  {
    "text": "location code to implement this validation that means you will have to periodically fetch or at a startup fetch",
    "start": "1246330",
    "end": "1253290"
  },
  {
    "text": "the jargon fetch the public key from your identity management solution at the",
    "start": "1253290",
    "end": "1258840"
  },
  {
    "text": "same time if you have to swap out the identity management solution you have to change all the libraries which act like",
    "start": "1258840",
    "end": "1265470"
  },
  {
    "text": "I was saying makes the coupling between the security team and the developers really close together so that's the",
    "start": "1265470",
    "end": "1273240"
  },
  {
    "text": "first option less-than-ideal let's move on the second option which is also I have seen many companies implement which",
    "start": "1273240",
    "end": "1279600"
  },
  {
    "text": "is I am going to move my logic of validating chart of my application to the ingress layer so in this case what",
    "start": "1279600",
    "end": "1286500"
  },
  {
    "text": "happens is the ingress is responsible for communicating with the aisle to management solution and then only",
    "start": "1286500",
    "end": "1293430"
  },
  {
    "text": "passing a law the authenticated request of the backend so you have done one",
    "start": "1293430",
    "end": "1299040"
  },
  {
    "text": "thing you have offloaded some of the functionality to your infrastructure that's good but at the same time you",
    "start": "1299040",
    "end": "1305700"
  },
  {
    "text": "still have two outstanding issues first is the request that comes from the ingress to the backend still coming in",
    "start": "1305700",
    "end": "1311940"
  },
  {
    "text": "plain text so that means you're still open to replay attacks second in most of",
    "start": "1311940",
    "end": "1316950"
  },
  {
    "text": "the micro service architectures that I have seen you will have a nested flow of",
    "start": "1316950",
    "end": "1322230"
  },
  {
    "text": "calls so the payment service is going to call another service like banking and most of the time you will be doing a",
    "start": "1322230",
    "end": "1329190"
  },
  {
    "text": "propagation of the identity so you will propagate the chart from payments to banking but again you don't have any",
    "start": "1329190",
    "end": "1335610"
  },
  {
    "text": "encryption between services in your cluster so you've exposed or increase",
    "start": "1335610",
    "end": "1340770"
  },
  {
    "text": "the surface area for replay attacks every hop where you are propagating your chart you are potentially opening",
    "start": "1340770",
    "end": "1347370"
  },
  {
    "text": "yourself to some security vulnerabilities so two options less-than-ideal so let's see what sto",
    "start": "1347370",
    "end": "1354180"
  },
  {
    "text": "can do and how is tio can simplify this for you so these are the next two options that I'm presenting first is in",
    "start": "1354180",
    "end": "1361950"
  },
  {
    "text": "sto you can have you have the capability of configuring your side car or your",
    "start": "1361950",
    "end": "1370770"
  },
  {
    "text": "ingress to do jar validation so by configuration you can say which side car",
    "start": "1370770",
    "end": "1377550"
  },
  {
    "text": "are service for which the sidecar is attached you can do chart validation at",
    "start": "1377550",
    "end": "1383780"
  },
  {
    "text": "that point additionally in history you can configure the functionality you want your English to do so in this",
    "start": "1383780",
    "end": "1389990"
  },
  {
    "text": "architecture we will say we'll configure our ingress to do TLS pass-through so in",
    "start": "1389990",
    "end": "1395630"
  },
  {
    "text": "this case the traffic comes encrypted to the ingress ingress we'll do sni or",
    "start": "1395630",
    "end": "1401480"
  },
  {
    "text": "server name indication based routing so if you look at the host which is presented in TLS during the TLS",
    "start": "1401480",
    "end": "1408620"
  },
  {
    "text": "negotiation and use that host to do the routing so instead of using if you see",
    "start": "1408620",
    "end": "1414230"
  },
  {
    "text": "slash users and slash payments now you have to do domain based routing then those requests are eventually given to",
    "start": "1414230",
    "end": "1421550"
  },
  {
    "text": "the side cars the side cars are configured to do chart validation so",
    "start": "1421550",
    "end": "1427160"
  },
  {
    "text": "what that means is in this case pilot gets your configuration from the",
    "start": "1427160",
    "end": "1434180"
  },
  {
    "text": "operators so that configuration has things like charge URL and various other job attributes it fetches the public key",
    "start": "1434180",
    "end": "1441530"
  },
  {
    "text": "from the identity management system and it configures the side curves with that public key when the side car receives",
    "start": "1441530",
    "end": "1448940"
  },
  {
    "text": "the request it uses that public key to validate the chart token if the token is",
    "start": "1448940",
    "end": "1455240"
  },
  {
    "text": "valid if the signature is valid it will forward forward the entire token to the backend if it if the token is not valid",
    "start": "1455240",
    "end": "1463550"
  },
  {
    "text": "the request is rejected so this has two benefits first is the back-end only",
    "start": "1463550",
    "end": "1470030"
  },
  {
    "text": "receives the token when the chart is actually valid or it only receives the",
    "start": "1470030",
    "end": "1475880"
  },
  {
    "text": "request I should say when the token is valid secondly you have encryption from",
    "start": "1475880",
    "end": "1482810"
  },
  {
    "text": "ingress to your back-end but it also has some downsides particularly because you",
    "start": "1482810",
    "end": "1489230"
  },
  {
    "text": "are using domain based routing you use you lose some of the advanced capability peers around path based routing so you",
    "start": "1489230",
    "end": "1496430"
  },
  {
    "text": "have restricted what the ingress can do secondly because still you are not attaching identities to each micro",
    "start": "1496430",
    "end": "1502880"
  },
  {
    "text": "service when the sidecar when the application is trying to propagate the",
    "start": "1502880",
    "end": "1508220"
  },
  {
    "text": "chart headers so in this case when payments is trying to talk to the bank service still you don't have encryption",
    "start": "1508220",
    "end": "1516170"
  },
  {
    "text": "in that link and you are still exposing yourself to replay attacks note that one",
    "start": "1516170",
    "end": "1522020"
  },
  {
    "text": "thing is important here where the sto sidecars by default will only propagate",
    "start": "1522020",
    "end": "1528950"
  },
  {
    "text": "job headers one hop that means if the request is made from ingress to the payment service the sidecars will decode",
    "start": "1528950",
    "end": "1536750"
  },
  {
    "text": "the chart or verify the job send the jar token to the payments back in service",
    "start": "1536750",
    "end": "1542000"
  },
  {
    "text": "and when the payment service is making a request out to the banking service it",
    "start": "1542000",
    "end": "1549110"
  },
  {
    "text": "has to reissue or it has to include the chart header again so if you so you can",
    "start": "1549110",
    "end": "1556370"
  },
  {
    "text": "see there are some benefits of this architecture but also you are losing out a lot so this is where I wanna",
    "start": "1556370",
    "end": "1563040"
  },
  {
    "text": "I wanna stress on the fourth option",
    "start": "1563040",
    "end": "1568290"
  },
  {
    "text": "which I think is the most secure option which is using stom TLS plus jar",
    "start": "1568290",
    "end": "1576420"
  },
  {
    "text": "validation so Stu has the capability of issuing identities to every service in",
    "start": "1576420",
    "end": "1585000"
  },
  {
    "text": "your cluster and those identities will be unique to each service using these",
    "start": "1585000",
    "end": "1590040"
  },
  {
    "text": "cryptographic identities you can secure traffic at each hop so in this example",
    "start": "1590040",
    "end": "1597300"
  },
  {
    "text": "what that will mean is the users traffic is presented to the ingress encrypted",
    "start": "1597300",
    "end": "1602900"
  },
  {
    "text": "the ingress or the sto ingress will terminate that traffic then the ingress",
    "start": "1602900",
    "end": "1610129"
  },
  {
    "text": "will re-encrypt the traffic with mutual TLS with its own identity and the",
    "start": "1610129",
    "end": "1616399"
  },
  {
    "text": "identity of the sidecar for the user service or the identity of the sidecar for the payment service so you have",
    "start": "1616399",
    "end": "1622909"
  },
  {
    "text": "encrypted traffic on these links then you can configure the sidecars to do",
    "start": "1622909",
    "end": "1628369"
  },
  {
    "text": "chart validation so in this case you will say user service and the payment",
    "start": "1628369",
    "end": "1634999"
  },
  {
    "text": "service will do chart validation and then if the payment service wants to",
    "start": "1634999",
    "end": "1641570"
  },
  {
    "text": "communicate to the banking service it can propagate the chart but because you have MPLS between those links",
    "start": "1641570",
    "end": "1647960"
  },
  {
    "text": "you're never leaking your jar token in open this is a drastic improvement as",
    "start": "1647960",
    "end": "1654499"
  },
  {
    "text": "compared to any other solution that we have told them before because every other solution had holes where somewhere",
    "start": "1654499",
    "end": "1662210"
  },
  {
    "text": "or the other you were leaking your jar additionally in this case citadel like I",
    "start": "1662210",
    "end": "1668690"
  },
  {
    "text": "was explaining before is responsible for creating those certificates which will be used for MPLS and automatically",
    "start": "1668690",
    "end": "1675080"
  },
  {
    "text": "rotating them so not only are you delegating your chart validation but",
    "start": "1675080",
    "end": "1680119"
  },
  {
    "text": "you're also getting empty LS without the overhead of managing certificates for",
    "start": "1680119",
    "end": "1686059"
  },
  {
    "text": "you so this for me is the most secure implementation for doing authentication",
    "start": "1686059",
    "end": "1693499"
  },
  {
    "text": "for services at the same time without taking on the burden of doing it",
    "start": "1693499",
    "end": "1698509"
  },
  {
    "text": "yourself in the application so next I have a simple example of how you can",
    "start": "1698509",
    "end": "1704330"
  },
  {
    "text": "actually do this in Sto so if you want to configure stom TLS plus chart here",
    "start": "1704330",
    "end": "1712009"
  },
  {
    "text": "are the things that you need to configure first you will need to configure mesh policy so here as it says",
    "start": "1712009",
    "end": "1718669"
  },
  {
    "text": "this is a default mesh policy which is turning on M TLS for the entire cluster so note note that when you create mesh",
    "start": "1718669",
    "end": "1726859"
  },
  {
    "text": "policy or authentication policies you are only configuring the server side for",
    "start": "1726859",
    "end": "1732469"
  },
  {
    "text": "controlling M TLS you need to configure both the server and the client sides the client side configuration is done by",
    "start": "1732469",
    "end": "1739070"
  },
  {
    "text": "configuring what we call destination so this is a default destination rule which says for any host ending in star",
    "start": "1739070",
    "end": "1747670"
  },
  {
    "text": "dot local so that means for any host or services that you are communicating to within your cluster within your",
    "start": "1747670",
    "end": "1754090"
  },
  {
    "text": "kubernetes cluster you always use Istria mutual so this is one area where I've often found the first-time users in sto",
    "start": "1754090",
    "end": "1761770"
  },
  {
    "text": "tripping tripping over because they're confuse as I have enabled empty LS",
    "start": "1761770",
    "end": "1767049"
  },
  {
    "text": "policy by mesh policy but doesn't work so you need both the sides secondly when",
    "start": "1767049",
    "end": "1772120"
  },
  {
    "text": "you want to add chart for specific services so for this example if I wanted",
    "start": "1772120",
    "end": "1777669"
  },
  {
    "text": "to add chart for HTTP bin service this is how I would do it I will create the authentication policy which will target",
    "start": "1777669",
    "end": "1785080"
  },
  {
    "text": "a name that's to be built this is the name of the kubernetes service and it is",
    "start": "1785080",
    "end": "1790780"
  },
  {
    "text": "important that you can only use short names over here Steve will automatically",
    "start": "1790780",
    "end": "1795850"
  },
  {
    "text": "create fully qualified domain names based on the namespace you are creating this racecourse so there are two",
    "start": "1795850",
    "end": "1801429"
  },
  {
    "text": "important things to note first you are creating a chart section here which will say what's the issuer you can also say",
    "start": "1801429",
    "end": "1808419"
  },
  {
    "text": "what is the URI from where you want to fetch your public keys secondly it is",
    "start": "1808419",
    "end": "1815650"
  },
  {
    "text": "very important to always specify MPLS here so any policy that you write will",
    "start": "1815650",
    "end": "1822669"
  },
  {
    "text": "always override the default policy so in this case if you skip specifying MPLS",
    "start": "1822669",
    "end": "1829720"
  },
  {
    "text": "what will happen is the server side will be configured to just use chart but in",
    "start": "1829720",
    "end": "1837730"
  },
  {
    "text": "the client side will be using MPLS so this is another one of the reasons",
    "start": "1837730",
    "end": "1843429"
  },
  {
    "text": "people have difficulty using sto when they first start out as they create the default mesh policy but when they create",
    "start": "1843429",
    "end": "1850299"
  },
  {
    "text": "override policies they forget to add MPLS so hopefully this example helps you",
    "start": "1850299",
    "end": "1857470"
  },
  {
    "text": "in understanding what are the pieces you need if you have both MPLS and jack enabled and offloaded to a steel so next",
    "start": "1857470",
    "end": "1864760"
  },
  {
    "text": "I want to show how the policies or the configurations are actually lowered from",
    "start": "1864760",
    "end": "1870580"
  },
  {
    "text": "hto specific configuration to envoy so for most of the cases you don't care for this if everything is working",
    "start": "1870580",
    "end": "1876880"
  },
  {
    "text": "correctly but for debugging this is really helpful to understand how is the config eventually given to envoy and",
    "start": "1876880",
    "end": "1883930"
  },
  {
    "text": "what actions does envoy take so if you have configured jart as you can see",
    "start": "1883930",
    "end": "1889510"
  },
  {
    "text": "pilot will automatically go and fetch the public key and set the charge filter",
    "start": "1889510",
    "end": "1895690"
  },
  {
    "text": "for envoy saying either the keys you should--you for in line validation and then forward the request to the",
    "start": "1895690",
    "end": "1903000"
  },
  {
    "text": "application container it is also configured to use MPLS on the server side as you can see and then there are a",
    "start": "1903000",
    "end": "1910150"
  },
  {
    "text": "few things like what's the principle binding those are used mostly for some sort of attribute matching and",
    "start": "1910150",
    "end": "1915640"
  },
  {
    "text": "generation next is when you create MPLS",
    "start": "1915640",
    "end": "1921330"
  },
  {
    "text": "configuration by default or for some services in your cluster like I was saying sto will attach identities for",
    "start": "1921330",
    "end": "1928240"
  },
  {
    "text": "every service these identities are based on specific or spiffy a specification so",
    "start": "1928240",
    "end": "1934840"
  },
  {
    "text": "this is what we call s wid or a spiffy verifiable identification document so",
    "start": "1934840",
    "end": "1942240"
  },
  {
    "text": "Citadel automatically creates these certificates which have a subject alternate name with this spiffy spec and",
    "start": "1942240",
    "end": "1950130"
  },
  {
    "text": "the sidecars are configured by pilot to verify that the sand presented from the",
    "start": "1950130",
    "end": "1955450"
  },
  {
    "text": "other side honors or meets this criteria so for this example whenever one who is",
    "start": "1955450",
    "end": "1961630"
  },
  {
    "text": "trying to reach out to this cluster HD bib in dot foo it will use this it will",
    "start": "1961630",
    "end": "1968140"
  },
  {
    "text": "verify that the subject name matches this criteria and this spiffy specification is built around the domain",
    "start": "1968140",
    "end": "1974740"
  },
  {
    "text": "which is curses out local then the namespace and then the service account that is attached to the workload so",
    "start": "1974740",
    "end": "1982120"
  },
  {
    "text": "these are some of the examples of how you can use Sto to offload authentication and then look at your own",
    "start": "1982120",
    "end": "1989230"
  },
  {
    "text": "work configuration if you want to verify that actually you are doing what your support you have configured so with that",
    "start": "1989230",
    "end": "1997140"
  },
  {
    "text": "I'm gonna ask Li if there are a few more questions and this is a good time to",
    "start": "1997140",
    "end": "2002430"
  },
  {
    "text": "answer them",
    "start": "2002430",
    "end": "2004850"
  },
  {
    "text": "one of those is with respect to authorization which we're about to dig",
    "start": "2008110",
    "end": "2014059"
  },
  {
    "text": "into it's maybe you'll enjoy this going forward but the question is you in this",
    "start": "2014059",
    "end": "2020509"
  },
  {
    "text": "case authorization or rather I guess not",
    "start": "2020509",
    "end": "2025519"
  },
  {
    "text": "really in this case authorization is done by what happens if offers is done",
    "start": "2025519",
    "end": "2031549"
  },
  {
    "text": "by the actual service and not by the sidecar so great that's a great question",
    "start": "2031549",
    "end": "2037549"
  },
  {
    "text": "so the first thing that I found is authentication so if you just want a tenth occasion to be done by the",
    "start": "2037549",
    "end": "2045049"
  },
  {
    "text": "sidecars you can do so in which case when if the request is correctly",
    "start": "2045049",
    "end": "2051128"
  },
  {
    "text": "authenticated the service will get the request and the service can do the authorization by itself the next section",
    "start": "2051129",
    "end": "2059118"
  },
  {
    "text": "that I'm gonna cover explains how you can offload the authorization functionality also to the match but sto",
    "start": "2059119",
    "end": "2065960"
  },
  {
    "text": "by default is always additive and incremental so if you have built some of the logic in your application you don't",
    "start": "2065960",
    "end": "2072589"
  },
  {
    "text": "have to remove it you can add this to you and gain some functionality and then eventually move things out of your",
    "start": "2072589",
    "end": "2077780"
  },
  {
    "text": "application if you want second question",
    "start": "2077780",
    "end": "2082790"
  },
  {
    "text": "was summarized is a recognition between",
    "start": "2082790",
    "end": "2088669"
  },
  {
    "text": "pilot given that that's out of this",
    "start": "2088669",
    "end": "2098839"
  },
  {
    "text": "year's control what's to prevent eavesdropping from happening there that is the question so I mean I'm assuming",
    "start": "2098839",
    "end": "2106010"
  },
  {
    "text": "whatever link you are using for getting the public keys are encrypted so if it",
    "start": "2106010",
    "end": "2112520"
  },
  {
    "text": "is encrypted you should not have an eavesdropping third question it seems",
    "start": "2112520",
    "end": "2121010"
  },
  {
    "text": "MPLS is only supported in service to service traffic is it possible to enable",
    "start": "2121010",
    "end": "2127640"
  },
  {
    "text": "in TLS for pottekkatt communication so",
    "start": "2127640",
    "end": "2133430"
  },
  {
    "text": "maybe this is a clarification in terminologies so whenever we're talking",
    "start": "2133430",
    "end": "2140329"
  },
  {
    "text": "about service service itself is an abstract concept in kubernetes eventually it's the pod which",
    "start": "2140329",
    "end": "2146530"
  },
  {
    "text": "are communicating to each other so traffic between pods will become will be",
    "start": "2146530",
    "end": "2153490"
  },
  {
    "text": "by default encrypted when I say service to service encryption now the traffic between the application container and",
    "start": "2153490",
    "end": "2159340"
  },
  {
    "text": "the sidecar container is mostly in plain text but that's a different story",
    "start": "2159340",
    "end": "2165780"
  },
  {
    "text": "very good okay and then actually they will you will wait to the end to talk",
    "start": "2166250",
    "end": "2172950"
  },
  {
    "text": "about our poll results sounds good ly all right so let's move",
    "start": "2172950",
    "end": "2180180"
  },
  {
    "text": "on to authorization so like I was saying authorization is verifying whether the",
    "start": "2180180",
    "end": "2185369"
  },
  {
    "text": "user or the client who is connected to you is allowed to do certain actions so normally you do this by either having a",
    "start": "2185369",
    "end": "2191670"
  },
  {
    "text": "roll Association where rolls are type 2 actions and then a user comes in and",
    "start": "2191670",
    "end": "2196740"
  },
  {
    "text": "they can assume a role or they're part of a group like admin reader or writer this which is called are bad there's a",
    "start": "2196740",
    "end": "2203670"
  },
  {
    "text": "second form of access control which is attribute based access control I think",
    "start": "2203670",
    "end": "2209040"
  },
  {
    "text": "of this as a little more complex but more flexible access control mechanism",
    "start": "2209040",
    "end": "2214619"
  },
  {
    "text": "where you have policy framework in a policy language set up and you have set",
    "start": "2214619",
    "end": "2221820"
  },
  {
    "text": "of attributes those attributes can be tied to resources the users are anything else and then you are doing complex",
    "start": "2221820",
    "end": "2228050"
  },
  {
    "text": "boolean or thematic kind of a thing to determine if a particular user request is allowed to go through or not for most",
    "start": "2228050",
    "end": "2235650"
  },
  {
    "text": "of the cases are back works well and it is good enough but in certain cases you might need a back so if so just like the",
    "start": "2235650",
    "end": "2243510"
  },
  {
    "text": "authentication mechanism you can do all the authorization in your application",
    "start": "2243510",
    "end": "2249660"
  },
  {
    "text": "this to you out of the box provides both our back and a back so this is how is to",
    "start": "2249660",
    "end": "2256530"
  },
  {
    "text": "our back works so the the or the operator will configure is to your policies pilot watches for them from the",
    "start": "2256530",
    "end": "2263430"
  },
  {
    "text": "kubernetes api server and distributes the appropriate our back and our back",
    "start": "2263430",
    "end": "2269700"
  },
  {
    "text": "artistics or the our back rules to side part which enforces them sto by default we'll do",
    "start": "2269700",
    "end": "2275760"
  },
  {
    "text": "two kinds of authorization one is service to service and the second one is",
    "start": "2275760",
    "end": "2280770"
  },
  {
    "text": "end-user to service just like authentication it's important in micro services to do both",
    "start": "2280770",
    "end": "2286650"
  },
  {
    "text": "you can have one service talking to another service then you want to know what it can or cannot do additionally",
    "start": "2286650",
    "end": "2292800"
  },
  {
    "text": "you have the end user who is making requests and then you want to know what is the end user allowed to make",
    "start": "2292800",
    "end": "2299460"
  },
  {
    "text": "questo is it allowed to delete collection is it allowed to read is it allowed to write so this is a simplified",
    "start": "2299460",
    "end": "2308550"
  },
  {
    "text": "example of how you can enable sto are back service to service so remember",
    "start": "2308550",
    "end": "2314250"
  },
  {
    "text": "whenever you are doing are back you have to have empty LS enable like I was",
    "start": "2314250",
    "end": "2319470"
  },
  {
    "text": "saying before authorization only comes in after authentication and for",
    "start": "2319470",
    "end": "2325170"
  },
  {
    "text": "authorization to make sense in sto the services themselves need to have identities which is what MPLS gives you",
    "start": "2325170",
    "end": "2332490"
  },
  {
    "text": "if you don't have an identity you won't be able to authorize them so for",
    "start": "2332490",
    "end": "2338370"
  },
  {
    "text": "configuring are back first you can do for the first you need to do is enable a",
    "start": "2338370",
    "end": "2344070"
  },
  {
    "text": "cluster are back config which tells you which namespace or all namespaces you",
    "start": "2344070",
    "end": "2349800"
  },
  {
    "text": "want to include or exclude so this is a way of incrementally adding authorization in your cluster so that",
    "start": "2349800",
    "end": "2356610"
  },
  {
    "text": "you don't turn it on and then everything starts working which is also some of the things that users have difficulty with",
    "start": "2356610",
    "end": "2362760"
  },
  {
    "text": "when they arrest you soil always recommend add authorization",
    "start": "2362760",
    "end": "2368490"
  },
  {
    "text": "incrementally so when you add authorization the next step is to define",
    "start": "2368490",
    "end": "2373590"
  },
  {
    "text": "your role and role bindings so a service role is akin to any kind of role which",
    "start": "2373590",
    "end": "2379050"
  },
  {
    "text": "you can define in kubernetes or you can define elsewhere so a role tells you",
    "start": "2379050",
    "end": "2385470"
  },
  {
    "text": "what are the actions you are allowed to make so in this case this service role",
    "start": "2385470",
    "end": "2391440"
  },
  {
    "text": "is telling that your it is allowed to do a get request for any service provided",
    "start": "2391440",
    "end": "2399180"
  },
  {
    "text": "the constraints are the destination application-level label",
    "start": "2399180",
    "end": "2405810"
  },
  {
    "text": "has to be one of the product page details reviews or ratings so Steve has",
    "start": "2405810",
    "end": "2411420"
  },
  {
    "text": "a very flexible way of defining the constraints where",
    "start": "2411420",
    "end": "2417079"
  },
  {
    "text": "where you can give it access to in this example even though the access is given",
    "start": "2418900",
    "end": "2425750"
  },
  {
    "text": "to all the services by star you are constraining them by some other properties next is the service role",
    "start": "2425750",
    "end": "2433069"
  },
  {
    "text": "binding which is similar to how a kubernetes role binding works binding",
    "start": "2433069",
    "end": "2439220"
  },
  {
    "text": "binds a particular role in this case a service role to a set of identities the",
    "start": "2439220",
    "end": "2446119"
  },
  {
    "text": "identities are the principles or the subjects who are allowed to take these actions so in this case we are creating",
    "start": "2446119",
    "end": "2453530"
  },
  {
    "text": "a viewer service role binding which binds the service role to the subject",
    "start": "2453530",
    "end": "2459710"
  },
  {
    "text": "and the subjects in this case are if it's a service which is presenting with the source namespace of SEO system or",
    "start": "2459710",
    "end": "2467000"
  },
  {
    "text": "the source namespace of default it is allowed to make get requests to these",
    "start": "2467000",
    "end": "2472369"
  },
  {
    "text": "pods so basically at the end of this setup you have created a system where",
    "start": "2472369",
    "end": "2479890"
  },
  {
    "text": "you you are restricting who can talk to",
    "start": "2479890",
    "end": "2485210"
  },
  {
    "text": "what and all of this is done in the mesh where thus the application container itself will only get the request once",
    "start": "2485210",
    "end": "2493040"
  },
  {
    "text": "the sidecar allows - allows you to go through you",
    "start": "2493040",
    "end": "2499580"
  },
  {
    "text": "so this is an example of if you have that configuration what your envoy configuration will look like remember",
    "start": "2499580",
    "end": "2506270"
  },
  {
    "text": "pilot will take all the resources that you define here lower it down and send",
    "start": "2506270",
    "end": "2511730"
  },
  {
    "text": "it to envoy in this case it invokes an envoy rback filter which you see in the",
    "start": "2511730",
    "end": "2517550"
  },
  {
    "text": "top and this might look like a lot of policies and crazy JSON but it actually",
    "start": "2517550",
    "end": "2525140"
  },
  {
    "text": "works very well and more more than that you are not configuring this that's the beauty of ASPs - you are actually",
    "start": "2525140",
    "end": "2531760"
  },
  {
    "text": "configuring this so what this is telling you is there are set of principles that",
    "start": "2531760",
    "end": "2538160"
  },
  {
    "text": "are allowed to make the request and the principles have to have these reg X's",
    "start": "2538160",
    "end": "2543740"
  },
  {
    "text": "and this is matching what you did in the earlier slide so next let's move on to",
    "start": "2543740",
    "end": "2550640"
  },
  {
    "text": "when you want to do authorization from end user to services so this is if the",
    "start": "2550640",
    "end": "2557089"
  },
  {
    "text": "end user has a jar token normally you have some claims stored in the jar and",
    "start": "2557089",
    "end": "2562550"
  },
  {
    "text": "you want the services to enforce our back based on those charts again you can",
    "start": "2562550",
    "end": "2569869"
  },
  {
    "text": "do this in your application but you can also use sto configuration to handle this for you",
    "start": "2569869",
    "end": "2575570"
  },
  {
    "text": "so for enabling a car back from end user to service it's a little more complex",
    "start": "2575570",
    "end": "2581780"
  },
  {
    "text": "but this is what you need first you will need our authentication policy so in",
    "start": "2581780",
    "end": "2587270"
  },
  {
    "text": "this case there is an authentication policy just like before which has two things needs to have MPLS and it needs",
    "start": "2587270",
    "end": "2594410"
  },
  {
    "text": "to have a section for jar then you have your cluster our bot config which is",
    "start": "2594410",
    "end": "2600550"
  },
  {
    "text": "included for some namespace you have your service rule like before the next",
    "start": "2600550",
    "end": "2605839"
  },
  {
    "text": "thing is you treat a binding and in this case the binding is different than your",
    "start": "2605839",
    "end": "2610849"
  },
  {
    "text": "earlier service role binding so this binding instead of using the subject",
    "start": "2610849",
    "end": "2617030"
  },
  {
    "text": "prod source namespace you are going to use claims directly from the jar so in",
    "start": "2617030",
    "end": "2624410"
  },
  {
    "text": "this case it is saying if the jar that is presented",
    "start": "2624410",
    "end": "2630820"
  },
  {
    "text": "is showing that it is part of the group Group one that it is allowed to assume",
    "start": "2630820",
    "end": "2638140"
  },
  {
    "text": "the role of SDB bin viewer so on the right side you are seeing a jar payload",
    "start": "2638140",
    "end": "2643690"
  },
  {
    "text": "which will actually work for this configuration so if your jar payload has groups Group one and group two this",
    "start": "2643690",
    "end": "2650590"
  },
  {
    "text": "request will make it to the application so this is a very simple way of making",
    "start": "2650590",
    "end": "2656020"
  },
  {
    "text": "sure that your applications never get requests which are neither authenticated",
    "start": "2656020",
    "end": "2662590"
  },
  {
    "text": "not an authorized and you can assume that all the requests that are coming to",
    "start": "2662590",
    "end": "2668950"
  },
  {
    "text": "your application container are ready to go or good to go so if you do this kind",
    "start": "2668950",
    "end": "2675730"
  },
  {
    "text": "of an operation this is what your on where configure it eventually look like so in this if you see your principles",
    "start": "2675730",
    "end": "2683140"
  },
  {
    "text": "and now saying it should match one of Group one and the path is from the",
    "start": "2683140",
    "end": "2689530"
  },
  {
    "text": "request Earth claims so even though I've given you an example of group if your chart has some different fields for",
    "start": "2689530",
    "end": "2696490"
  },
  {
    "text": "example scope you can use any arbitrary fields from the jar token and use it for",
    "start": "2696490",
    "end": "2702730"
  },
  {
    "text": "authorization the next thing which I am going to cover is the sto activate based",
    "start": "2702730",
    "end": "2709750"
  },
  {
    "text": "access control so the first the former concept was sto are bad s2 also provides",
    "start": "2709750",
    "end": "2718030"
  },
  {
    "text": "a more expressive yet more complicated attribute based access control so the",
    "start": "2718030",
    "end": "2723580"
  },
  {
    "text": "way that works is whenever a request reaches a sidecar before the sidecar",
    "start": "2723580",
    "end": "2729760"
  },
  {
    "text": "forwards the request to the application container it makes a check call to the mixer during this check called the",
    "start": "2729760",
    "end": "2737230"
  },
  {
    "text": "sidecar for words various attributes of the request so it will forward where the client is server is what are the request",
    "start": "2737230",
    "end": "2745710"
  },
  {
    "text": "parameters like the method URL sighs and then mixer takes in various steel",
    "start": "2745710",
    "end": "2753850"
  },
  {
    "text": "configuration and has an adapter API way it can invoke any third-party adapters",
    "start": "2753850",
    "end": "2759130"
  },
  {
    "text": "for enforcing those check calls and running policies on that",
    "start": "2759130",
    "end": "2764770"
  },
  {
    "text": "so in this case you can add an open policy agent adapter which is a flexible policy framework which still provides if",
    "start": "2764770",
    "end": "2772660"
  },
  {
    "text": "you want to use some of the organization's are already using OPA for enforcing policy in other parts of the",
    "start": "2772660",
    "end": "2778300"
  },
  {
    "text": "system so this gives you the flexibility of using a uniform policy language so",
    "start": "2778300",
    "end": "2785220"
  },
  {
    "text": "the OPA engine for in this example we'll run the policy against the attitudes",
    "start": "2785220",
    "end": "2790570"
  },
  {
    "text": "that you've given and make the racial just or no send the region back to the sidecar and then the side cover enforce",
    "start": "2790570",
    "end": "2796570"
  },
  {
    "text": "it so if the reiation is yes it will forward the request to the user service or the payment service the Dacian is",
    "start": "2796570",
    "end": "2803590"
  },
  {
    "text": "knowing you rejected as you can see there are some problems that might happen if you use this mechanism one is",
    "start": "2803590",
    "end": "2810100"
  },
  {
    "text": "because the sidecar is making out of process calls to the mixer you can have additional latency obviously if you make",
    "start": "2810100",
    "end": "2818290"
  },
  {
    "text": "that call for every request this system is not tenable history provides a caching mechanism where the sidecar",
    "start": "2818290",
    "end": "2825070"
  },
  {
    "text": "stores the results of the policy checks and if this based on attributes so if your request arrives with the same",
    "start": "2825070",
    "end": "2832090"
  },
  {
    "text": "attributes your caches hit and you don't have to make that call again for from",
    "start": "2832090",
    "end": "2838300"
  },
  {
    "text": "where I stand and what I have seen most of the users only need the cor back they",
    "start": "2838300",
    "end": "2843910"
  },
  {
    "text": "are good with doing that and but if you need some more advanced functionality there's always a CoA back this is just",
    "start": "2843910",
    "end": "2850630"
  },
  {
    "text": "in my opinion the tip of the iceberg a lot of complicated things you can do with sto by combining or authentication",
    "start": "2850630",
    "end": "2859030"
  },
  {
    "text": "and authorization so some applications I know have systems where they have charge",
    "start": "2859030",
    "end": "2866350"
  },
  {
    "text": "based authentication but then they also have a separate database where they are doing authorization so in that case you",
    "start": "2866350",
    "end": "2873490"
  },
  {
    "text": "can have a middle layer where that layer can get the authorization tokens or",
    "start": "2873490",
    "end": "2879550"
  },
  {
    "text": "authorization claims from the authorization DB re-encoded in a jar and",
    "start": "2879550",
    "end": "2885310"
  },
  {
    "text": "then use the jar going forward and start enforcing so so basically you can have a",
    "start": "2885310",
    "end": "2890890"
  },
  {
    "text": "user level jar that is presented by the user but once it reaches in your cluster you can convert again to a different job",
    "start": "2890890",
    "end": "2897400"
  },
  {
    "text": "for example so the last thing that I wanna talk about is a zero trust network and",
    "start": "2897400",
    "end": "2904349"
  },
  {
    "text": "basically what I want to say is this is a concept in terminology that is often thrown around in the microservices world",
    "start": "2904349",
    "end": "2910349"
  },
  {
    "text": "it is based on the principle of trust nothing but verify everything so",
    "start": "2910349",
    "end": "2917190"
  },
  {
    "text": "basically what you want to do is even if the request originates from within your",
    "start": "2917190",
    "end": "2922259"
  },
  {
    "text": "network or within the parameter of your organization you don't assume that you can trust it but you want to verify it",
    "start": "2922259",
    "end": "2928549"
  },
  {
    "text": "based on what the credentials are it's easier said than done especially if you are doing this in your own applications",
    "start": "2928549",
    "end": "2935390"
  },
  {
    "text": "this is where I think the real benefit of is to you in a service mesh is you can use sto to a TN the principles of",
    "start": "2935390",
    "end": "2943740"
  },
  {
    "text": "zero trust easily by doing things like MPLS which is making sure that now you have identities and encryption for all",
    "start": "2943740",
    "end": "2951200"
  },
  {
    "text": "network traffic you can you can enable",
    "start": "2951200",
    "end": "2956359"
  },
  {
    "text": "certificate rotation which makes it more secure which otherwise are gained difficult to do you can add auditing and",
    "start": "2956359",
    "end": "2964230"
  },
  {
    "text": "logging by just toting all your requests in the form of traces which are there one of the requirements of a zero trust",
    "start": "2964230",
    "end": "2970079"
  },
  {
    "text": "network additionally you can implement the features and the capabilities of a",
    "start": "2970079",
    "end": "2975119"
  },
  {
    "text": "zero trust or our capabilities of least principle of least privilege is by",
    "start": "2975119",
    "end": "2982109"
  },
  {
    "text": "adding our back policies again all in sto or a service mesh without doing it",
    "start": "2982109",
    "end": "2987210"
  },
  {
    "text": "in your applications so for me this is where the real benefit comes in if you",
    "start": "2987210",
    "end": "2993859"
  },
  {
    "text": "are looking to move to a more secure environment in micro services you can",
    "start": "2993859",
    "end": "2998940"
  },
  {
    "text": "you you can use a service mesh like sto to go there without making all of that application",
    "start": "2998940",
    "end": "3005200"
  },
  {
    "text": "making all of the complicated logic in your applications so with that let's",
    "start": "3005200",
    "end": "3011960"
  },
  {
    "text": "move on to questions all right well that",
    "start": "3011960",
    "end": "3019670"
  },
  {
    "text": "presentation Arash thank you outstanding",
    "start": "3019670",
    "end": "3025309"
  },
  {
    "text": "question I encourage others to come in there's a question",
    "start": "3025309",
    "end": "3030570"
  },
  {
    "text": "with respect to MPLS and it's about iteration of destination rules within a",
    "start": "3030570",
    "end": "3038340"
  },
  {
    "text": "destination rule there's a configuration item the host attribute normally within",
    "start": "3038340",
    "end": "3045750"
  },
  {
    "text": "there you'llyou'll that host attribute accepts a service name so the question is how do you configure the client the",
    "start": "3045750",
    "end": "3055170"
  },
  {
    "text": "client being the citecar proxy client to",
    "start": "3055170",
    "end": "3060330"
  },
  {
    "text": "enable in TLS to a specific destination pod answer if that makes sense I think I",
    "start": "3060330",
    "end": "3070230"
  },
  {
    "text": "get the gist and thank you for this question and this is one of the real",
    "start": "3070230",
    "end": "3076320"
  },
  {
    "text": "difficult issues of this tier when it related to the api's so when you are",
    "start": "3076320",
    "end": "3081660"
  },
  {
    "text": "configuring destination rules you're configuring the client side the way you",
    "start": "3081660",
    "end": "3087510"
  },
  {
    "text": "are confirming the client side you are saying whenever you are talking to this service via host name you want to use",
    "start": "3087510",
    "end": "3094290"
  },
  {
    "text": "these configuration parameters so that will be enforced at the client side",
    "start": "3094290",
    "end": "3099480"
  },
  {
    "text": "proxy when you are configuring all authentication policy or MTA or mesh",
    "start": "3099480",
    "end": "3104880"
  },
  {
    "text": "policy those things will be in force at the server side so even though you are not using a client workload by name",
    "start": "3104880",
    "end": "3114360"
  },
  {
    "text": "because of using the host name whenever any request is invoked with that host",
    "start": "3114360",
    "end": "3121200"
  },
  {
    "text": "name automatically that configuration will take effect on the client side",
    "start": "3121200",
    "end": "3126380"
  },
  {
    "text": "okay another question here what is the",
    "start": "3127500",
    "end": "3132579"
  },
  {
    "text": "area of work or focus for Aston - oh",
    "start": "3132579",
    "end": "3138359"
  },
  {
    "text": "thank you so so we are supported enterprise-grade service mesh built on",
    "start": "3138359",
    "end": "3145510"
  },
  {
    "text": "Sto so we help companies which are navigating through the microservices",
    "start": "3145510",
    "end": "3151780"
  },
  {
    "text": "journey help them simplify the architecture by easily adopting a service mesh so we provide support for",
    "start": "3151780",
    "end": "3159339"
  },
  {
    "text": "them we have a hosted SAS platform which lets you easily configure and visualize",
    "start": "3159339",
    "end": "3165490"
  },
  {
    "text": "the things that are happening in your cluster at the same time we provide some advanced analytics based on the metrics",
    "start": "3165490",
    "end": "3171790"
  },
  {
    "text": "and configuration that we gather from your cluster which can alert you and tell you about things are going wrong so",
    "start": "3171790",
    "end": "3178060"
  },
  {
    "text": "it's a combination of things which gives you benefits around security observability and support which is a",
    "start": "3178060",
    "end": "3185770"
  },
  {
    "text": "built on capability on the open-source Sto",
    "start": "3185770",
    "end": "3190869"
  },
  {
    "text": "I'm very good is that is it a Spanish daya yes it is it has to be those are",
    "start": "3190869",
    "end": "3204049"
  },
  {
    "text": "all the questions that our attendees have asked so far I suspect you a couple of others out",
    "start": "3204049",
    "end": "3212150"
  },
  {
    "text": "there we did we did push out a poll that all the attendees have answered so thank",
    "start": "3212150",
    "end": "3218869"
  },
  {
    "text": "you for that maybe we can review the answers to the poll so the poll question was are you",
    "start": "3218869",
    "end": "3226579"
  },
  {
    "text": "using a service measure today the and what we what we've found",
    "start": "3226579",
    "end": "3232789"
  },
  {
    "text": "here is that 61% of our attendees are not yet using a Salesman 25% are",
    "start": "3232789",
    "end": "3241009"
  },
  {
    "text": "experimenting and 14% are running a service mashing production oh wow that's",
    "start": "3241009",
    "end": "3248869"
  },
  {
    "text": "insane oh that's very helpful especially I mean it's such a new technology that I",
    "start": "3248869",
    "end": "3254599"
  },
  {
    "text": "think there's a eventual curve to adoption so I'm really excited as more",
    "start": "3254599",
    "end": "3262130"
  },
  {
    "text": "and more companies and people are trying it out and please give your feedback not just to a Spanish but to the open-source",
    "start": "3262130",
    "end": "3269420"
  },
  {
    "text": "community so we can help them to slides",
    "start": "3269420",
    "end": "3285319"
  },
  {
    "text": "they will be sent out in email very shortly one of the other questions here is can",
    "start": "3285319",
    "end": "3292309"
  },
  {
    "text": "you use as the mesh to secure communications with services running in",
    "start": "3292309",
    "end": "3297890"
  },
  {
    "text": "non containerized workloads outside of communities absolutely I think that is",
    "start": "3297890",
    "end": "3304759"
  },
  {
    "text": "one of the things that as an enterprise supported service mesh we are trying to simplify the open source service mesh",
    "start": "3304759",
    "end": "3311779"
  },
  {
    "text": "itself allows you to bring VMs or use things like configure I think that now",
    "start": "3311779",
    "end": "3320509"
  },
  {
    "text": "not running in your continuous environment but as members can make that journey simply simpler for you so what for so",
    "start": "3320509",
    "end": "3326600"
  },
  {
    "text": "just to give a background on Aspen mash we are an incubation out of f5 networks",
    "start": "3326600",
    "end": "3331970"
  },
  {
    "text": "so we have the pedigree of working with enterprises with the legacy applications",
    "start": "3331970",
    "end": "3337790"
  },
  {
    "text": "so we know how that works and we can make it easier for you do a dog very",
    "start": "3337790",
    "end": "3344030"
  },
  {
    "text": "good okay we got a request to squeeze in one more question here and that was just",
    "start": "3344030",
    "end": "3349310"
  },
  {
    "text": "going back to the question about kubernetes our back versus its new our",
    "start": "3349310",
    "end": "3354740"
  },
  {
    "text": "back and admission controllers I see so",
    "start": "3354740",
    "end": "3362090"
  },
  {
    "text": "in kubernetes when you are defining our back you are defining what users can do",
    "start": "3362090",
    "end": "3368090"
  },
  {
    "text": "or cannot do with rady to the kubernetes api server and the kubernetes resources in kubernetes you're not defining our",
    "start": "3368090",
    "end": "3375050"
  },
  {
    "text": "back for service to service communication in ISTE or that's what you are defining so even though the",
    "start": "3375050",
    "end": "3381650"
  },
  {
    "text": "terminologies overlap the aim and the intent is quite different what was the second part you asked Li and it was with",
    "start": "3381650",
    "end": "3389180"
  },
  {
    "text": "respect to a mission controllers I say so admission controllers are again a way of",
    "start": "3389180",
    "end": "3394310"
  },
  {
    "text": "making sure so there are numerous types of admission controllers in SEO itself",
    "start": "3394310",
    "end": "3400160"
  },
  {
    "text": "you have the sidecar injector which is a validating and a mutating admission admission webhook so admission web hooks",
    "start": "3400160",
    "end": "3407930"
  },
  {
    "text": "or controllers met up makes sure that your configuration that you are applying",
    "start": "3407930",
    "end": "3413630"
  },
  {
    "text": "is correct as part of that mission controllers also you can have authorization but again",
    "start": "3413630",
    "end": "3420380"
  },
  {
    "text": "that is orthogonal to how traffic flows so askew who comes in after you have",
    "start": "3420380",
    "end": "3426590"
  },
  {
    "text": "configured your things in kubernetes it's to you is when traffic is flowing through your system",
    "start": "3426590",
    "end": "3433630"
  },
  {
    "text": "okay I suspect we could take questions for quite some more certainly a hot topic",
    "start": "3434530",
    "end": "3442780"
  },
  {
    "text": "certainly a hot company as well as the matters with that just a reminder cannon",
    "start": "3442780",
    "end": "3449119"
  },
  {
    "text": "did post the link to where the recording will be and the slides will be we're a little bit over the hour so",
    "start": "3449119",
    "end": "3454970"
  },
  {
    "text": "unfortunately do you need to wrap up do you want to thank neurons very much for",
    "start": "3454970",
    "end": "3460880"
  },
  {
    "text": "today's presentation very informative I thank you all for joining we'll see you on the next webinar",
    "start": "3460880",
    "end": "3468250"
  }
]