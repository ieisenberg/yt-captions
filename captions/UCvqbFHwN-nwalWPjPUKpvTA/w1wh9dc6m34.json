[
  {
    "text": "all right hello everybody welcome to a practical guide to Kubernetes policy as",
    "start": "719",
    "end": "7160"
  },
  {
    "text": "code i'm gonna skip the agenda you'll see it it's coming i'm Andy Sudterman i'm the CTO of Fairwinds i'm also a uh",
    "start": "7160",
    "end": "15040"
  },
  {
    "text": "co-chair of the policy working group i'm joined here by Joe Betts a staff engineer at Google who is the SIG API",
    "start": "15040",
    "end": "21359"
  },
  {
    "text": "machinery lead rita Zang principal engineer at Microsoft who is the chair of SIG O and the founder and CEO of",
    "start": "21359",
    "end": "27760"
  },
  {
    "text": "Nurmada Jim Buguia who is a co-chair of the policy working group with me and a",
    "start": "27760",
    "end": "32800"
  },
  {
    "text": "maintainer of Caverno we're here to talk about policy and policy is code so first of all why",
    "start": "32800",
    "end": "40879"
  },
  {
    "text": "should we care about policy this is a very simple graph from one of the white papers that the policy working group has",
    "start": "40879",
    "end": "46320"
  },
  {
    "text": "put out but basically what we're trying to say here is that policy underpins just about everything that you might",
    "start": "46320",
    "end": "52719"
  },
  {
    "text": "care about in your Kubernetes cluster we're going to talk a little bit more about that and then dive into some specific examples of different",
    "start": "52719",
    "end": "60120"
  },
  {
    "text": "policies um recently uh Jimmy Ray another member of the policy working group wrote a book called policy is code",
    "start": "60120",
    "end": "67119"
  },
  {
    "text": "we say he wrote the book these days um and he said it is the use of code artifacts to manage and apply rules and",
    "start": "67119",
    "end": "73040"
  },
  {
    "text": "conditions it's a pretty simple definition i think we can all wrap our heads around that but if you look across the Kubernetes codebase you'll see that",
    "start": "73040",
    "end": "79680"
  },
  {
    "text": "there's policy in many many different parts of the codebase arbback is policy",
    "start": "79680",
    "end": "85040"
  },
  {
    "text": "we have validating and uh admission policies we have ON and OZ which are",
    "start": "85040",
    "end": "90240"
  },
  {
    "text": "types of policies we have network policy we have cublet configurations we have quotas limit ranges resource quotas we",
    "start": "90240",
    "end": "96079"
  },
  {
    "text": "have all these different things that are policy um we don't have time in 30 minutes to cover all of those today so",
    "start": "96079",
    "end": "103360"
  },
  {
    "text": "we're just going to cover a small portion of those uh in the next few minutes but why should we do policy as",
    "start": "103360",
    "end": "110720"
  },
  {
    "text": "code why shouldn't we run individual programs to enforce policy um and really",
    "start": "110720",
    "end": "116960"
  },
  {
    "text": "it's just all the reasons that we care about doing things as code it's very similar to infrastructure as code it's",
    "start": "116960",
    "end": "122960"
  },
  {
    "text": "more maintainable it's more efficient we can uh all inspect it together we can do",
    "start": "122960",
    "end": "128000"
  },
  {
    "text": "code review on it we can see how uh policy uh is working within our system",
    "start": "128000",
    "end": "133760"
  },
  {
    "text": "uh and Kubernetes provides a lot of different patterns for this uh we have",
    "start": "133760",
    "end": "138800"
  },
  {
    "text": "policy enforcement points already built into the code everywhere so uh with that",
    "start": "138800",
    "end": "144560"
  },
  {
    "text": "I am going to oh apologies one more uh quick disclaimer again we're not going",
    "start": "144560",
    "end": "150560"
  },
  {
    "text": "to cover all the different projects available there's lots of entry options there's gatekeeper there's caberno therein there's polaris there JS policy",
    "start": "150560",
    "end": "157440"
  },
  {
    "text": "there's cloud custodian I probably missed six different projects again we don't have time to cover all of those today so instead I'm going to hand it",
    "start": "157440",
    "end": "164080"
  },
  {
    "text": "off to Joe who's going to talk about I'm going to talk about policy within",
    "start": "164080",
    "end": "170080"
  },
  {
    "text": "Kubernetes thank you Andy Um so within Kubernetes um policy has been",
    "start": "170080",
    "end": "177440"
  },
  {
    "text": "kind of available since about the8 release when we introduced um admission",
    "start": "177440",
    "end": "183360"
  },
  {
    "text": "web hooks and this was kind of the foundational extension point that you could use um the way it works is that",
    "start": "183360",
    "end": "190080"
  },
  {
    "text": "you can intercept all write requests coming into the control plane and that gives you the ability to um control um",
    "start": "190080",
    "end": "197599"
  },
  {
    "text": "what is happening in your cluster um but you do that in a very general way right like you build this new binary which",
    "start": "197599",
    "end": "203120"
  },
  {
    "text": "becomes part of a control plane and it's a really a critical component of that control plane because it's part of the",
    "start": "203120",
    "end": "210159"
  },
  {
    "text": "request serving flow so if it becomes unavailable your control plane becomes unavailable and so you as a extension",
    "start": "210159",
    "end": "218720"
  },
  {
    "text": "author you have to take that really seriously you have to think about well how am I going to develop this thing how am I going to maintain it what's the",
    "start": "218720",
    "end": "224319"
  },
  {
    "text": "upgrade plan is it going to scale to the needs of all the clusters it's installed in um all the things monitoring",
    "start": "224319",
    "end": "231120"
  },
  {
    "text": "everything that comes along with with having a critical component and what we saw in the",
    "start": "231120",
    "end": "236640"
  },
  {
    "text": "ecosystem since 18 which is a long time ago is um there's been a lot of problems",
    "start": "236640",
    "end": "241760"
  },
  {
    "text": "with admission web hooks in clusters I've seen that in GKE we've seen it in the ecosystem at large and when we were",
    "start": "241760",
    "end": "248560"
  },
  {
    "text": "started to look at this problem and ask like how can we help the ecosystem do better here how can we make the web hook",
    "start": "248560",
    "end": "255040"
  },
  {
    "text": "problem less of a problem for the community one of the things that we observed VED was that the vast majority",
    "start": "255040",
    "end": "260639"
  },
  {
    "text": "of web hooks were doing really simple stuff now it was kind of this 8020 split where often times you would have",
    "start": "260639",
    "end": "267040"
  },
  {
    "text": "somebody that wanted to build a CRD and a controller and they didn't really want to build a web hook but they end up haveing to make one because they needed",
    "start": "267040",
    "end": "273520"
  },
  {
    "text": "to enforce a bunch of validation rules at the front door and so from that came this",
    "start": "273520",
    "end": "280639"
  },
  {
    "text": "observation of like well is web hooks really the right solution to that kind of problem i mean logically what they're",
    "start": "280639",
    "end": "286479"
  },
  {
    "text": "doing is they're putting this little bit of custom logic in that does some check and if the check's false they don't want",
    "start": "286479",
    "end": "291680"
  },
  {
    "text": "to let the request into the API server but if it's really simple logic why not just put it straight into the Kubernetes",
    "start": "291680",
    "end": "297759"
  },
  {
    "text": "API server in the first place and so we looked into how to do this we looked at Wom we looked at a",
    "start": "297759",
    "end": "304240"
  },
  {
    "text": "bunch of different embeddible programming languages and the one that we found that we really liked was called um the common expression language um and",
    "start": "304240",
    "end": "312479"
  },
  {
    "text": "there's kind of three properties we liked from um language the first was that it was designed to be embedded into things like",
    "start": "312479",
    "end": "320080"
  },
  {
    "text": "YAML um it's designed to be these kind of single line expressions the second thing we really liked about it is it was",
    "start": "320080",
    "end": "326080"
  },
  {
    "text": "a relatively unsurprising C style syntax so if you've worked in modern programming languages you're probably",
    "start": "326080",
    "end": "332639"
  },
  {
    "text": "going to be able to figure out what this code does and you're probably going to be able to write it without having to like be taught how to do it",
    "start": "332639",
    "end": "340960"
  },
  {
    "text": "um and then the last property which is really important is that Cell has a relatively low overhead for execution um",
    "start": "340960",
    "end": "348160"
  },
  {
    "text": "so you're talking like 5 to 10x of native code um but we still get runtime",
    "start": "348160",
    "end": "353360"
  },
  {
    "text": "safety so we still get to um bound the running time and the memory utilization",
    "start": "353360",
    "end": "359120"
  },
  {
    "text": "of the cell programs that are run um so here is a example of cell being used in",
    "start": "359120",
    "end": "364919"
  },
  {
    "text": "Kubernetes this was the first feature we added cell for what's called CRD validation rules and the way that this",
    "start": "364919",
    "end": "370960"
  },
  {
    "text": "one works is that you're allowed to add cell expressions into your CRD schema to",
    "start": "370960",
    "end": "376639"
  },
  {
    "text": "perform more complex validation um this is a cross field validation where you're checking two",
    "start": "376639",
    "end": "382560"
  },
  {
    "text": "fields you can also do update validations like immutability checks um this has been really successful so large",
    "start": "382560",
    "end": "388639"
  },
  {
    "text": "projects like API gateway have been able to use this um to completely migrate",
    "start": "388639",
    "end": "394319"
  },
  {
    "text": "away from a web hook and use only um only code in their CRD to enforce all",
    "start": "394319",
    "end": "399520"
  },
  {
    "text": "their validation rules all right so that's kind of interesting but I haven't really talked about policy specifically and so that",
    "start": "399520",
    "end": "406960"
  },
  {
    "text": "gets us to our more recent features um the first one is called validating admission policy and this is a direct",
    "start": "406960",
    "end": "414120"
  },
  {
    "text": "substitute for a admission web hook so like you can have a validating web hook",
    "start": "414120",
    "end": "420080"
  },
  {
    "text": "configuration you can have a validating admission policy so somewhere in here there's got to be some cell right um so",
    "start": "420080",
    "end": "425599"
  },
  {
    "text": "if you look to the left um the the main resource under the spec validations",
    "start": "425599",
    "end": "430720"
  },
  {
    "text": "expression that's where you'll see the cell expression this is an entirely self-contained policy you don't need to",
    "start": "430720",
    "end": "437199"
  },
  {
    "text": "write any separate binary to load this into your cluster so once you've loaded the policy which is usually authored by",
    "start": "437199",
    "end": "443680"
  },
  {
    "text": "some kind of policy or extension author then your cluster administrator which is a separate role typically will bind that",
    "start": "443680",
    "end": "449840"
  },
  {
    "text": "into their cluster which is the middle resource and then optionally you can also can configure the policy with a",
    "start": "449840",
    "end": "455759"
  },
  {
    "text": "separate resource if you need to um so in this case you're setting the max replica limit to three um and you're",
    "start": "455759",
    "end": "462800"
  },
  {
    "text": "binding that to particular resources in the cluster now like we have",
    "start": "462800",
    "end": "469400"
  },
  {
    "text": "um usually what you're doing is you're looking at the fields in the resource but you can additionally perform",
    "start": "469400",
    "end": "475280"
  },
  {
    "text": "authorization checks within these expressions so this is showing that um",
    "start": "475280",
    "end": "480960"
  },
  {
    "text": "some of the things that you can use in cell so a great example is imagine that you have a label that you only want certain",
    "start": "480960",
    "end": "488879"
  },
  {
    "text": "privilege users in your organization to set or change um so you could set up a policy that does that first you would",
    "start": "488879",
    "end": "494479"
  },
  {
    "text": "check to see if the label's being changed and if it is then you would check if that user is allowed to make",
    "start": "494479",
    "end": "500720"
  },
  {
    "text": "that change according to some custom verb you can define and then in your arbback system you just give people",
    "start": "500720",
    "end": "506160"
  },
  {
    "text": "permission to that verb if you want them to make that change um in addition to validating you",
    "start": "506160",
    "end": "512240"
  },
  {
    "text": "can do mutation mutating policy this is currently in alpha um the way it works",
    "start": "512240",
    "end": "517279"
  },
  {
    "text": "is the same as validating admission policy except instead of returning a is",
    "start": "517279",
    "end": "522399"
  },
  {
    "text": "this request allowed response you're returning a patch which mutates the object so this example shows um a",
    "start": "522399",
    "end": "529680"
  },
  {
    "text": "sidecar container being injected um you could do this this way or you could do it with a JSON",
    "start": "529680",
    "end": "536120"
  },
  {
    "text": "patch um okay with that I will hand it over to Rita",
    "start": "536120",
    "end": "541279"
  },
  {
    "text": "all right uh and another option uh uh that has been pretty popular in the Kubernetes world is the OPA gatekeeper",
    "start": "541279",
    "end": "548800"
  },
  {
    "text": "project um so the project's actually I will start with OPA uh open policy agent",
    "start": "548800",
    "end": "554640"
  },
  {
    "text": "it's it was actually a really popular rule engine that was donated to CNCF uh",
    "start": "554640",
    "end": "560160"
  },
  {
    "text": "in I think 10 years ago if you were in the keynote you probably saw one of the logos for CNCF project so it actually",
    "start": "560160",
    "end": "566640"
  },
  {
    "text": "hit the 10-year mark uh and back in 2018 bunch of us actually worked together with the open maintainers to bring all",
    "start": "566640",
    "end": "574160"
  },
  {
    "text": "that uh enterprise rule engine goodness into Kubernetes ecosystem uh and",
    "start": "574160",
    "end": "580800"
  },
  {
    "text": "gatekeeper uh you might ask what is it right um it's a dynamic flexible",
    "start": "580800",
    "end": "586080"
  },
  {
    "text": "emission and mutation web hook also it has a CLI and it's a controller that you",
    "start": "586080",
    "end": "591760"
  },
  {
    "text": "can run in your cluster to help enforce policies and the idea behind gatekeeper is you write the policy once as code and",
    "start": "591760",
    "end": "599839"
  },
  {
    "text": "configurations and you can run it anywhere um the key differentiation for gatekeeper is you can write it in m",
    "start": "599839",
    "end": "607279"
  },
  {
    "text": "multiple languages it started as rego because that was the default language in OPA um and then recently we added cell",
    "start": "607279",
    "end": "614320"
  },
  {
    "text": "support because again we want to make sure uh you can write the language of your choice uh and today might be reggo",
    "start": "614320",
    "end": "622320"
  },
  {
    "text": "who knows what it will be tomorrow um and also with that it also works with",
    "start": "622320",
    "end": "627360"
  },
  {
    "text": "multiple engines uh again OPA obviously and then Kubernetes VAP as Joe mentioned",
    "start": "627360",
    "end": "633360"
  },
  {
    "text": "um and last but not least is multi-target and the idea is the same code that you use for Kubernetes",
    "start": "633360",
    "end": "640160"
  },
  {
    "text": "emission you can use it for Terraform you can use it for other type of um",
    "start": "640160",
    "end": "645279"
  },
  {
    "text": "target so Gatekeeper is a target for Kubernetes emission",
    "start": "645279",
    "end": "650560"
  },
  {
    "text": "um and another uh big difference for gatekeeper is separation of concerns uh",
    "start": "650560",
    "end": "656560"
  },
  {
    "text": "when we worked with organizations a lot of times the people who write the policies are often different from the",
    "start": "656560",
    "end": "661680"
  },
  {
    "text": "people who are actually deploying the policies um and therefore we created this um solution that basically allows",
    "start": "661680",
    "end": "668720"
  },
  {
    "text": "user different persona to manage different type of resources for example",
    "start": "668720",
    "end": "674079"
  },
  {
    "text": "if you're rolling out the policies you might care about the specific parameters that you put to actually do the",
    "start": "674079",
    "end": "679839"
  },
  {
    "text": "enforcement and so that resource is called a constraint and it's decoupled from the logic where the the people who",
    "start": "679839",
    "end": "686720"
  },
  {
    "text": "write the policies will actually write the rules and again this ensures that the policies can be configured and not",
    "start": "686720",
    "end": "694800"
  },
  {
    "text": "instead of actually focusing on writing the code uh and then also uh gatekeeper",
    "start": "694800",
    "end": "700480"
  },
  {
    "text": "because it started a long time ago we have a really a good um community that actually contributes a lot of the",
    "start": "700480",
    "end": "706800"
  },
  {
    "text": "policies that you would actually you can use right away um and it's a gatekeeper",
    "start": "706800",
    "end": "712079"
  },
  {
    "text": "policy library uh in fact when um we were deprecating PSP in the early days",
    "start": "712079",
    "end": "718640"
  },
  {
    "text": "um gatekeeper library was used to uh help users migrate um it was uh OPA was graduated",
    "start": "718640",
    "end": "726800"
  },
  {
    "text": "in 2021 and there's a lot of contributors from many companies like Microsoft Google Righ Dyra VMware and",
    "start": "726800",
    "end": "733519"
  },
  {
    "text": "many many more and I'm sorry if I forgot to mention you um so yeah so you might",
    "start": "733519",
    "end": "738959"
  },
  {
    "text": "ask like well um VAP is great and map is great because it's more reliable um so",
    "start": "738959",
    "end": "745760"
  },
  {
    "text": "what are the differentiation when should I use gatekeeper right or any other web hook for that matter um so I'm not going",
    "start": "745760",
    "end": "752560"
  },
  {
    "text": "to mention the the ones that they do the same things um so for example for audit let's say you want to audit existing",
    "start": "752560",
    "end": "759440"
  },
  {
    "text": "resources and you want to um stream that data somewhere else in your uh",
    "start": "759440",
    "end": "764800"
  },
  {
    "text": "enterprise like uh management system say for tracing or um complian reasons this",
    "start": "764800",
    "end": "771120"
  },
  {
    "text": "is where gatekeeper can do that um and it basically provides a history of um",
    "start": "771120",
    "end": "777760"
  },
  {
    "text": "the violating resources that are currently in the cluster and also shift left right we know that developers would",
    "start": "777760",
    "end": "784399"
  },
  {
    "text": "much rather um enforce these policies in their code and this is where we have a",
    "start": "784399",
    "end": "790000"
  },
  {
    "text": "CLI called gator you can actually run it in your CI/CD pipeline and it will",
    "start": "790000",
    "end": "795040"
  },
  {
    "text": "actually can be used to test your policies as well as the resources that you plan to uh deploy to your to your uh",
    "start": "795040",
    "end": "802240"
  },
  {
    "text": "production cluster um and then there's also metrics right it's already comes with um Prometheus",
    "start": "802240",
    "end": "809600"
  },
  {
    "text": "metrics and then there's another concept of context awareness for things that are",
    "start": "809600",
    "end": "815279"
  },
  {
    "text": "already in the cluster so think of the scenario where you want to detect uniqueness of your ingress resources",
    "start": "815279",
    "end": "822000"
  },
  {
    "text": "this is where you can again create a gatekeeper policy that allows you to do",
    "start": "822000",
    "end": "827120"
  },
  {
    "text": "that um and then external data sources let's say you want to talk to an external data source in your policy you",
    "start": "827120",
    "end": "834000"
  },
  {
    "text": "can also do that um and then last but not least pub um let's say you want to",
    "start": "834000",
    "end": "839519"
  },
  {
    "text": "uh subscribe to violations and you want to uh stream that somewhere else that's",
    "start": "839519",
    "end": "845120"
  },
  {
    "text": "that's another uh feature that gatekeeper does well um so in terms of um how does it work",
    "start": "845120",
    "end": "852639"
  },
  {
    "text": "with VAP um uh as Joe mentioned um the the concept behind Gatekeeper is we do",
    "start": "852639",
    "end": "859360"
  },
  {
    "text": "not want to compete with VAP we love VAP okay um and in fact we want to be the",
    "start": "859360",
    "end": "864720"
  },
  {
    "text": "front end to unify the experience for the for the user meaning we want you to",
    "start": "864720",
    "end": "870720"
  },
  {
    "text": "write your solid expressions in one place and Gatekeeper will actually manage both um VAP for the common use",
    "start": "870720",
    "end": "878480"
  },
  {
    "text": "cases and nonVAP for the more advanced scenarios where you you have to use a web hook and because um the there we",
    "start": "878480",
    "end": "887120"
  },
  {
    "text": "have uh multiple language support you can write in the language of your choice",
    "start": "887120",
    "end": "892240"
  },
  {
    "text": "uh and and it will basically generate the VAP resources for you so that the",
    "start": "892240",
    "end": "898079"
  },
  {
    "text": "inry kubernetes um uh emission controller will actually do the enforcement meanwhile for nonvap",
    "start": "898079",
    "end": "905600"
  },
  {
    "text": "um advanced scenarios that would actually be handled by the gatekeeper web hook um and again this is to uh",
    "start": "905600",
    "end": "914160"
  },
  {
    "text": "especially for big teams um you can use this solution to share your policy definitions across both VAP and uh more",
    "start": "914160",
    "end": "922399"
  },
  {
    "text": "advanced features like audit and referential checks and external providers",
    "start": "922399",
    "end": "928160"
  },
  {
    "text": "so here's an example of what um a gatekeeper uh constraint template looks",
    "start": "928160",
    "end": "934240"
  },
  {
    "text": "like and as you can see you can actually provide multiple engines uh one for",
    "start": "934240",
    "end": "939680"
  },
  {
    "text": "Kubernetes validating policy and that's the cell expressions that you see and then another one is Rego again you can",
    "start": "939680",
    "end": "947600"
  },
  {
    "text": "write it in the language of your choice um and then for mutation again because",
    "start": "947600",
    "end": "954399"
  },
  {
    "text": "it's a web hook there's a a bit more overhead and and therefore for uh basic",
    "start": "954399",
    "end": "962040"
  },
  {
    "text": "mutation features we highly recommend that you use the entry map feature in",
    "start": "962040",
    "end": "967480"
  },
  {
    "text": "Kubernetes but for the more advanced scenarios like calling out to an external data provider this is where",
    "start": "967480",
    "end": "973600"
  },
  {
    "text": "Gatekeeper shines why is that because gatekeeper from day one was designed for",
    "start": "973600",
    "end": "978959"
  },
  {
    "text": "global item potency meaning when you have multiple mutation happening at the",
    "start": "978959",
    "end": "985600"
  },
  {
    "text": "same time or happening in different orders different reinvocation path the",
    "start": "985600",
    "end": "992000"
  },
  {
    "text": "the results are always the same so it's more predictable um and it allows external data provider",
    "start": "992000",
    "end": "999480"
  },
  {
    "text": "um uh calls to be made in parallel that is really really important because",
    "start": "999480",
    "end": "1005519"
  },
  {
    "text": "anytime you add any uh request out to anywhere during an admission time you're",
    "start": "1005519",
    "end": "1011199"
  },
  {
    "text": "adding time into your web into your Kubernetes emission request time so this",
    "start": "1011199",
    "end": "1016959"
  },
  {
    "text": "basically reduces the number of calls that you have to make to an external service and therefore making it more",
    "start": "1016959",
    "end": "1023680"
  },
  {
    "text": "stable and scalable and you would create the resources with the gatekeeper",
    "start": "1023680",
    "end": "1029880"
  },
  {
    "text": "CRDs and with that I'll pass it Thank you",
    "start": "1029880",
    "end": "1035720"
  },
  {
    "text": "Rita so Kiburno started about five years ago so you know prior to cell and",
    "start": "1035720",
    "end": "1042319"
  },
  {
    "text": "validating admission and mutating admission policies but after OPA and gatekeeper so when we looked at the",
    "start": "1042319",
    "end": "1048880"
  },
  {
    "text": "landscape we took a different approach to policy so we believe policy as code",
    "start": "1048880",
    "end": "1054080"
  },
  {
    "text": "is not just about validation or enforcing security but it's more than that it's about automation as well it's",
    "start": "1054080",
    "end": "1061200"
  },
  {
    "text": "about reducing the overload of you know additional controllers so Kivero from the very beginning has taken an approach",
    "start": "1061200",
    "end": "1067760"
  },
  {
    "text": "that mutation generation cleanup you know and also image validation should",
    "start": "1067760",
    "end": "1073280"
  },
  {
    "text": "all be part of your policy toolbox and this really is important if you're building platforms on top of Kubernetes",
    "start": "1073280",
    "end": "1079520"
  },
  {
    "text": "want to provide self-service to developers you're going to need all of these features either through custom controllers or you can standardize on a",
    "start": "1079520",
    "end": "1086640"
  },
  {
    "text": "policy code solution like kerno so that full life cycle management again is is",
    "start": "1086640",
    "end": "1092880"
  },
  {
    "text": "very important across all of the configurations and when we started the focus was just for Kubernetes so the",
    "start": "1092880",
    "end": "1100080"
  },
  {
    "text": "initial question was how do we make it simple as well as manageable for Kubernetes admins to manage policy types",
    "start": "1100080",
    "end": "1108080"
  },
  {
    "text": "and extensions without having to learn additional languages or additional complexity so that was the starting",
    "start": "1108080",
    "end": "1114240"
  },
  {
    "text": "point of Kivero but overall after as we progressed and as the use cases grew",
    "start": "1114240",
    "end": "1119760"
  },
  {
    "text": "kivero is also now able to apply policies on any JSON any YAML you know",
    "start": "1119760",
    "end": "1125360"
  },
  {
    "text": "payload whether it's in your pipelines or in your API tier or pretty much anywhere in your",
    "start": "1125360",
    "end": "1131480"
  },
  {
    "text": "stack so why change and what should we you know do in terms of the evolution of",
    "start": "1131480",
    "end": "1137200"
  },
  {
    "text": "Kerno as Kubernetes also continues to evolve so first off as these new types",
    "start": "1137200",
    "end": "1142480"
  },
  {
    "text": "like Rita mentioned as validating admission policy mutating admission policy have been added to Kubernetes it",
    "start": "1142480",
    "end": "1149120"
  },
  {
    "text": "completely makes sense to delegate whatever you can to the API server right so Civero also is able to you know take",
    "start": "1149120",
    "end": "1156080"
  },
  {
    "text": "policies written in cell expressions it automatically generates validating admission policies and mutating",
    "start": "1156080",
    "end": "1162400"
  },
  {
    "text": "admission policies so they can be run in line wherever possible and for extensions for other features which are",
    "start": "1162400",
    "end": "1168880"
  },
  {
    "text": "kerno only those will continue to run in the web hook you also get full reporting",
    "start": "1168880",
    "end": "1173919"
  },
  {
    "text": "full other life cycle management features that kivero already supports um",
    "start": "1173919",
    "end": "1179039"
  },
  {
    "text": "so in addition to that of course it's like standard when kivero started again we were using James path as one of the",
    "start": "1179039",
    "end": "1186000"
  },
  {
    "text": "languages that was supported uh but we now also have full support for cell as",
    "start": "1186000",
    "end": "1191280"
  },
  {
    "text": "in order to support some of these features so with 1.14 which is the",
    "start": "1191280",
    "end": "1196400"
  },
  {
    "text": "latest release of Kivero we're introducing five new policy types to continue this evolution and you know",
    "start": "1196400",
    "end": "1203440"
  },
  {
    "text": "keep that you know be as close to Kubernetes as possible but with the right features and other extensions that",
    "start": "1203440",
    "end": "1210240"
  },
  {
    "text": "are required for full policy as code so today I'm going to just focus on a couple of these the validating policy",
    "start": "1210240",
    "end": "1216320"
  },
  {
    "text": "and image validating policy but there are other talks and sessions and happy to cover more at Kimo booth or at other",
    "start": "1216320",
    "end": "1223679"
  },
  {
    "text": "you know discussions um so just diving into validating policy right and",
    "start": "1223679",
    "end": "1229200"
  },
  {
    "text": "validating policy is Kerno's flavor of or the extension on validating admission policy so the way we have cleanly",
    "start": "1229200",
    "end": "1236000"
  },
  {
    "text": "abstracted and extended validating admission policy is by adding a few new",
    "start": "1236000",
    "end": "1241360"
  },
  {
    "text": "you know tags within the declaration itself so there's things like you know the evaluation mode whether you want to",
    "start": "1241360",
    "end": "1248000"
  },
  {
    "text": "evaluate a Kubernetes resource or JSON you would declare that there's things like web hook configuration which only",
    "start": "1248000",
    "end": "1254320"
  },
  {
    "text": "makes sense of course if you're running in a web hook so those type of things like timeouts etc you can declare there",
    "start": "1254320",
    "end": "1260720"
  },
  {
    "text": "and then autogeneration so caberno from the beginning has supported autogeneration of policies for pod",
    "start": "1260720",
    "end": "1266400"
  },
  {
    "text": "controllers now we also do validating and mutating admission policies so that's controlled by the autogeneration",
    "start": "1266400",
    "end": "1273039"
  },
  {
    "text": "so if you look at this declaration it looks very familiar to any Kubernetes admin who has already spent time",
    "start": "1273039",
    "end": "1279840"
  },
  {
    "text": "learning validating admission policies it's just a few extensions on top of",
    "start": "1279840",
    "end": "1284880"
  },
  {
    "text": "validating admission policy but also comes with a different you know cell environment so if you do want to use",
    "start": "1284880",
    "end": "1291520"
  },
  {
    "text": "advanced features uh in Kivero such that it uh like currently for example if",
    "start": "1291520",
    "end": "1297120"
  },
  {
    "text": "you're fetching data from image registries so many cases like there's use cases you might want to call out to",
    "start": "1297120",
    "end": "1302799"
  },
  {
    "text": "an OCI registry you might want to check for the manifest configuration and then based on that make some policy decisions",
    "start": "1302799",
    "end": "1310320"
  },
  {
    "text": "things like that you can do with the Kivero cell environment and some of this we're working with the Kubernetes you",
    "start": "1310320",
    "end": "1315919"
  },
  {
    "text": "know upstream maintainers like the image parsing you know cell uh functions we have written in Kivero to promote them",
    "start": "1315919",
    "end": "1322960"
  },
  {
    "text": "to upstream over time so just comparing and this is only a",
    "start": "1322960",
    "end": "1328080"
  },
  {
    "text": "comparison of validating admission policy to validating policy it's not you know we're not going to be able to cover",
    "start": "1328080",
    "end": "1334000"
  },
  {
    "text": "generating mutating and the other types but just with this the key points here are you know if you need things like um",
    "start": "1334000",
    "end": "1341440"
  },
  {
    "text": "uh like if you're doing background scans because policies are not just applied to resources when they are created but you",
    "start": "1341440",
    "end": "1348320"
  },
  {
    "text": "might have existing resources you might change policy types so background scanning becomes really important uh for",
    "start": "1348320",
    "end": "1354640"
  },
  {
    "text": "you know for uh managing your policies if you need fine grain exceptions like kivero has a feature to manage",
    "start": "1354640",
    "end": "1361200"
  },
  {
    "text": "exceptions per image in a container so at a very granular basis you can control",
    "start": "1361200",
    "end": "1367039"
  },
  {
    "text": "what's excluded from a certain policy and manage that separately from the policy declaration itself and if you",
    "start": "1367039",
    "end": "1374400"
  },
  {
    "text": "need you know reporting which u kivero supports um the policy working group",
    "start": "1374400",
    "end": "1379679"
  },
  {
    "text": "report format which is a standard um which is also adopted by other projects so if you need reporting within",
    "start": "1379679",
    "end": "1386080"
  },
  {
    "text": "environments uh within your namespaces or within your clusters those sort of things you would use Kivero for but it",
    "start": "1386080",
    "end": "1392960"
  },
  {
    "text": "can also support and by the way it supports all these features also for the built-in validating admission policy as",
    "start": "1392960",
    "end": "1399919"
  },
  {
    "text": "well as mutating admission policy another quick example is the image validating policy so this is where",
    "start": "1399919",
    "end": "1407039"
  },
  {
    "text": "Kivero works with both notary as well as cosign and it can check for image",
    "start": "1407039",
    "end": "1412159"
  },
  {
    "text": "signatures as well as attestations so here again just keeping that same same",
    "start": "1412159",
    "end": "1418240"
  },
  {
    "text": "style starting with a validating policy so a lot of this looks very familiar you have your validations which are just",
    "start": "1418240",
    "end": "1424559"
  },
  {
    "text": "cell expressions but you can check things like whether an OCI image has been scanned by your you know your",
    "start": "1424559",
    "end": "1431280"
  },
  {
    "text": "scanner of your choice for vulnerabilities whether there's an SBOM created what vulnerabilities exist",
    "start": "1431280",
    "end": "1437600"
  },
  {
    "text": "things like that you can check and also make sure that that image was signed by the right authorities so all of this is",
    "start": "1437600",
    "end": "1443919"
  },
  {
    "text": "supported in the validating admission policy and the feature I really like about this is if you want to now take",
    "start": "1443919",
    "end": "1449919"
  },
  {
    "text": "this and apply this to any other container container image whether it's you know like let's say some other",
    "start": "1449919",
    "end": "1455279"
  },
  {
    "text": "managed Kubernetes service or even a serverless container image it's a simple",
    "start": "1455279",
    "end": "1460320"
  },
  {
    "text": "twoline change to go from a Kubernetes resource to a JSON payload and to be able to apply that policy so in summary",
    "start": "1460320",
    "end": "1468799"
  },
  {
    "text": "kivero is you know what we have our mission is to simplify policy management",
    "start": "1468799",
    "end": "1473919"
  },
  {
    "text": "for kubernetes but also make that available to non- kubernetes environments which platform engineers",
    "start": "1473919",
    "end": "1479600"
  },
  {
    "text": "will need and we want to you to make sure that policies are built in a way so developers operators as well as security",
    "start": "1479600",
    "end": "1486799"
  },
  {
    "text": "teams can all collaborate on the same shared resources and use standard",
    "start": "1486799",
    "end": "1491840"
  },
  {
    "text": "Kubernetes tooling standard life cycle management wherever possible to keep the learning curve as easy um or as low as",
    "start": "1491840",
    "end": "1499520"
  },
  {
    "text": "possible and be able to kind of then universally use these policies whether",
    "start": "1499520",
    "end": "1504640"
  },
  {
    "text": "it's in pipelines admission controllers in your clusters or even in APIs against",
    "start": "1504640",
    "end": "1510480"
  },
  {
    "text": "cloud services with that Andy is going to summarize and wrap",
    "start": "1510480",
    "end": "1516640"
  },
  {
    "text": "up all right so that was a lot a lot of great info thanks y'all that was fantastic um so just to wrap it all up",
    "start": "1521000",
    "end": "1528960"
  },
  {
    "text": "and give a few pieces of guidance going forward um Kubernetes core is going to",
    "start": "1528960",
    "end": "1534559"
  },
  {
    "text": "continue to support more policies code it's going to be there uh what is there is currently very stable and we're going",
    "start": "1534559",
    "end": "1541440"
  },
  {
    "text": "to see more of it um wherever possible",
    "start": "1541440",
    "end": "1546520"
  },
  {
    "text": "intry what we just talked about what Joe just talked about is going to be faster",
    "start": "1546520",
    "end": "1551679"
  },
  {
    "text": "more reliable and a great baseline but you're probably going to need something to expand beyond that um you should",
    "start": "1551679",
    "end": "1558880"
  },
  {
    "text": "definitely learn cell uh if you haven't started and you're looking to do policy cell isn't going anywhere uh I think all",
    "start": "1558880",
    "end": "1566000"
  },
  {
    "text": "three of these folks just talked about implementing cell in different ways so it's not going anywhere definitely learn",
    "start": "1566000",
    "end": "1571039"
  },
  {
    "text": "it um you know and just to outline kind of the different places where we have intry options and then we can expand to",
    "start": "1571039",
    "end": "1577679"
  },
  {
    "text": "outofree options uh we have ON um structured ON is in beta right now that",
    "start": "1577679",
    "end": "1583919"
  },
  {
    "text": "uses cell as well uh for Oz we have structured Oz which is currently GA",
    "start": "1583919",
    "end": "1590240"
  },
  {
    "text": "which also uses cell uh arbback++ is in design in sig oth uh see sig oth for",
    "start": "1590240",
    "end": "1596799"
  },
  {
    "text": "more information about that uh I believe that will also be using cell uh and then we can extend that with these other",
    "start": "1596799",
    "end": "1603440"
  },
  {
    "text": "projects uh with other web hooks for advanced scenarios uh for validation a lot of what we talked about today we",
    "start": "1603440",
    "end": "1609679"
  },
  {
    "text": "have vap we have map uh and then we can extend that with additional options",
    "start": "1609679",
    "end": "1614880"
  },
  {
    "text": "outside of the cluster uh and then for mutation map is in alpha currently um",
    "start": "1614880",
    "end": "1620400"
  },
  {
    "text": "and then we again have extensions like we talked about today um all of that is",
    "start": "1620400",
    "end": "1625840"
  },
  {
    "text": "current as of 1.33 that may you know these will all start to graduate through",
    "start": "1625840",
    "end": "1630880"
  },
  {
    "text": "the different stages but as of 1.33 this is this is accurate uh and then the last piece of advice everybody wants to use",
    "start": "1630880",
    "end": "1637520"
  },
  {
    "text": "mutation for everything try to keep it to a minimum it's expensive and it can be risky so uh",
    "start": "1637520",
    "end": "1644799"
  },
  {
    "text": "focus on those controllers where you can and I think we might have a couple",
    "start": "1644799",
    "end": "1651440"
  },
  {
    "text": "minutes for questions four minutes four minutes great job all",
    "start": "1651440",
    "end": "1656559"
  },
  {
    "text": "right does anybody have any questions",
    "start": "1656559",
    "end": "1663640"
  },
  {
    "text": "hello you all uh I have a question my name is Andre Bendorp i work with H&M uh I would like uh guidance since I have",
    "start": "1672720",
    "end": "1678880"
  },
  {
    "text": "the opportunity to ask the the masters here um how can I just in in a platform",
    "start": "1678880",
    "end": "1686559"
  },
  {
    "text": "engineer scenario where we have a well controlled CINC CD how can I justify the",
    "start": "1686559",
    "end": "1692320"
  },
  {
    "text": "overhead of admissions web hooks and validation web hooks um in a performance",
    "start": "1692320",
    "end": "1697559"
  },
  {
    "text": "scenario for cost like instead of using CIND where",
    "start": "1697559",
    "end": "1703440"
  },
  {
    "text": "the developers don't have the actual access to the infrastructure configuration",
    "start": "1703440",
    "end": "1708920"
  },
  {
    "text": "[Music] um then everything is blackbox for them uh why use uh mutate web hooks vate web",
    "start": "1708920",
    "end": "1717840"
  },
  {
    "text": "hooks instead of configure on the CI um so if if you can do something simply and",
    "start": "1717840",
    "end": "1724640"
  },
  {
    "text": "quickly you probably should in a performance scenario if if you need to punch out to a web hook because you",
    "start": "1724640",
    "end": "1730880"
  },
  {
    "text": "can't express what you need to express um through the built-ins then I would encourage you to um look web hooks now",
    "start": "1730880",
    "end": "1738000"
  },
  {
    "text": "include something called a match condition um it which is self-written in cell um and you can very tightly",
    "start": "1738000",
    "end": "1744480"
  },
  {
    "text": "constrain when your web hook is called so if you do think you're going to need a web hook but only in very specific",
    "start": "1744480",
    "end": "1751240"
  },
  {
    "text": "situations use that to very tightly constrain the calls so that you only call the web hook when you actually need",
    "start": "1751240",
    "end": "1757840"
  },
  {
    "text": "it that's probably about the best you can do",
    "start": "1757840",
    "end": "1762440"
  },
  {
    "text": "doc I was wondering um with admission with mutating web hooks how do those",
    "start": "1766960",
    "end": "1772159"
  },
  {
    "text": "tend to interact with say deployment platforms that are looking for diffs and trying to actively eliminate them with a",
    "start": "1772159",
    "end": "1778159"
  },
  {
    "text": "new deployment do you just get stuck in a loop yes a good question um and there's a CNCF blog post on this topic",
    "start": "1778159",
    "end": "1785600"
  },
  {
    "text": "so both Argo CD Flux which are you know githops projects um they also now",
    "start": "1785600",
    "end": "1790960"
  },
  {
    "text": "support serverside apply which allows them to coexist with mutating web hooks",
    "start": "1790960",
    "end": "1796559"
  },
  {
    "text": "so it really comes down to and like Andy was saying it's not one or the other there are use cases for both so you have",
    "start": "1796559",
    "end": "1802880"
  },
  {
    "text": "to pick you know when you apply which tool for the right use case",
    "start": "1802880",
    "end": "1808760"
  },
  {
    "text": "all right I think we're right on time so thank you everybody and we'll be around for the rest of the week if you have any",
    "start": "1811120",
    "end": "1816399"
  },
  {
    "text": "other questions take care",
    "start": "1816399",
    "end": "1820159"
  }
]