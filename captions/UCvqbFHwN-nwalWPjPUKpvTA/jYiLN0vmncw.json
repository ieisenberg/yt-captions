[
  {
    "text": "thank you for coming to listen to my presentation so",
    "start": "0",
    "end": "6160"
  },
  {
    "text": "let's start so in this talk i'd like to",
    "start": "7040",
    "end": "13759"
  },
  {
    "text": "you know give a brief introduction how we encounter these issues",
    "start": "13759",
    "end": "18960"
  },
  {
    "text": "uh so upon is one of the main maintainers of",
    "start": "18960",
    "end": "25039"
  },
  {
    "text": "the crossplane project and i will talk about a little bit about cross plane and you know",
    "start": "25039",
    "end": "31599"
  },
  {
    "text": "uh how we hit these issues and then i'd like to briefly mention you",
    "start": "31599",
    "end": "37200"
  },
  {
    "text": "know the client side see the scaling issues that we have hit and also i'd like to talk about the",
    "start": "37200",
    "end": "43840"
  },
  {
    "text": "server side issues that we have identified and you know how we identified them",
    "start": "43840",
    "end": "50559"
  },
  {
    "text": "specifically you know the high resource utilization we have observed with the api server",
    "start": "51600",
    "end": "58879"
  },
  {
    "text": "and how we profile the api server what windings we have and also",
    "start": "58879",
    "end": "65198"
  },
  {
    "text": "i'd like to briefly mention you know how you can profile the api server so",
    "start": "65199",
    "end": "70880"
  },
  {
    "text": "it's really straightforward so i'd like to you know talk a little bit about it it's helped us a lot",
    "start": "70880",
    "end": "77119"
  },
  {
    "text": "in this respect and also you know i'd like to talk about you know the",
    "start": "77119",
    "end": "82159"
  },
  {
    "text": "kubernetes scalability dimensions and you know about crd scaling in that",
    "start": "82159",
    "end": "88400"
  },
  {
    "text": "respect and you know this will conclude to talk so",
    "start": "88400",
    "end": "94400"
  },
  {
    "text": "uh apan is one of the you know core maintainers of",
    "start": "94400",
    "end": "99600"
  },
  {
    "text": "the cross plane project in the cross plane project we are",
    "start": "99600",
    "end": "104640"
  },
  {
    "text": "working on you know generating sometimes you know custom resource definitions",
    "start": "104640",
    "end": "110560"
  },
  {
    "text": "which correspond to actual cloud provider resources and as you would imagine",
    "start": "110560",
    "end": "117119"
  },
  {
    "text": "why this custom resource says you know you can manage the infrastructure",
    "start": "117119",
    "end": "123360"
  },
  {
    "text": "so and as you know there are",
    "start": "123360",
    "end": "128879"
  },
  {
    "text": "you know hundreds of uh different resource types in its cloud provider",
    "start": "128879",
    "end": "134959"
  },
  {
    "text": "and uh crossplane is a multi-vendor multi-platform project so that you know",
    "start": "134959",
    "end": "142640"
  },
  {
    "text": "either your resources are in",
    "start": "142640",
    "end": "148239"
  },
  {
    "text": "aws azure or gcp you can have a cross-plain provider and",
    "start": "148239",
    "end": "155360"
  },
  {
    "text": "many stores providers this also you know means that in a single",
    "start": "155360",
    "end": "161680"
  },
  {
    "text": "kubernetes cluster you may want to install multiple you know cross plane providers",
    "start": "161680",
    "end": "168000"
  },
  {
    "text": "so recently we have introduced a terajet",
    "start": "168000",
    "end": "173440"
  },
  {
    "text": "a cogeneration framework where you can generate you know crossplane providers",
    "start": "173440",
    "end": "180480"
  },
  {
    "text": "on top of terraform providers this also means that",
    "start": "180480",
    "end": "187440"
  },
  {
    "text": "in a single provider like we have generated provider jet aws jet ager and",
    "start": "187440",
    "end": "192720"
  },
  {
    "text": "gcp pro we have these providers and uh on top of these you know you can have",
    "start": "192720",
    "end": "200480"
  },
  {
    "text": "hundreds of custom resources and this is where we first observed our issues because you",
    "start": "200480",
    "end": "207519"
  },
  {
    "text": "know in a single for example provider jet aws cross plane provider",
    "start": "207519",
    "end": "213840"
  },
  {
    "text": "we have over 700 custom resource definitions",
    "start": "213840",
    "end": "219120"
  },
  {
    "text": "and in the other azure and gcp providers we have again hundreds of custom resource definitions",
    "start": "219120",
    "end": "225360"
  },
  {
    "text": "and if you would like to install one of them or you know multiple of them in a single",
    "start": "225360",
    "end": "232480"
  },
  {
    "text": "you know kubernetes cluster this means that you will have thousands of crds",
    "start": "232480",
    "end": "239760"
  },
  {
    "text": "installed in a single kubernetes cluster and you know this is how we you know",
    "start": "239760",
    "end": "244959"
  },
  {
    "text": "entered this domain uh this is where we started experiencing issues",
    "start": "244959",
    "end": "251920"
  },
  {
    "text": "so when you sum up you know we have about 2 000 custom resource",
    "start": "253360",
    "end": "258560"
  },
  {
    "text": "definitions so",
    "start": "258560",
    "end": "264079"
  },
  {
    "text": "we can categorize the issues in two broad groups",
    "start": "264240",
    "end": "269919"
  },
  {
    "text": "first we have the client side issues that we will talk about and",
    "start": "269919",
    "end": "274960"
  },
  {
    "text": "you know we also have the server side issues the first issue that we had",
    "start": "274960",
    "end": "280479"
  },
  {
    "text": "observed was you know very high cpu utilization uh that also led us to profiling the api",
    "start": "280479",
    "end": "287759"
  },
  {
    "text": "server trying to understand what's going on on there",
    "start": "287759",
    "end": "292320"
  },
  {
    "text": "the upstream cross-plane community was already aware of you know high memory",
    "start": "293440",
    "end": "298639"
  },
  {
    "text": "utilization and i will talk about them later in in",
    "start": "298639",
    "end": "304080"
  },
  {
    "text": "the slides so i will also briefly mention you know our experience with the managed kubernetes",
    "start": "304080",
    "end": "310800"
  },
  {
    "text": "services and let's start with the",
    "start": "310800",
    "end": "316560"
  },
  {
    "text": "client side throttling issues that we have run so i think most of you",
    "start": "316560",
    "end": "323360"
  },
  {
    "text": "if you try to install you know hundreds of custom resource definitions might have seen these error messages",
    "start": "323360",
    "end": "330240"
  },
  {
    "text": "so when you run a ctl command you know on a cold cache so",
    "start": "330240",
    "end": "335840"
  },
  {
    "text": "i will explain what i mean with a cold cache later so please bear with me",
    "start": "335840",
    "end": "343199"
  },
  {
    "text": "sometimes you can observe you know some warning messages which says basically",
    "start": "343199",
    "end": "348479"
  },
  {
    "text": "which says that you know the request was throttled right so",
    "start": "348479",
    "end": "354400"
  },
  {
    "text": "you will see that the throttling was caused by client side uh you know it's not related to",
    "start": "354400",
    "end": "361039"
  },
  {
    "text": "api servers prior to and fairness you know floor control mechanisms but",
    "start": "361039",
    "end": "368000"
  },
  {
    "text": "it's on the client side so",
    "start": "368000",
    "end": "372160"
  },
  {
    "text": "if you run the same command you know in the same peri in a you know a small period of time",
    "start": "374720",
    "end": "381360"
  },
  {
    "text": "uh then you will not be observing this most probably it depends on the cube ctrl command that you run",
    "start": "381360",
    "end": "387759"
  },
  {
    "text": "uh but for example the cube city i'll get notes comment uh run this shaft shortly after the initial",
    "start": "387759",
    "end": "395199"
  },
  {
    "text": "comment uh we'll just return the notes so",
    "start": "395199",
    "end": "401599"
  },
  {
    "text": "to explain this we will need to you know talk a little bit about the discovery",
    "start": "402560",
    "end": "407759"
  },
  {
    "text": "client so the discovery client is responsible for as you would imagine the available",
    "start": "407759",
    "end": "414000"
  },
  {
    "text": "apis in the api server right so it discovers the api group list first",
    "start": "414000",
    "end": "420639"
  },
  {
    "text": "so which group versions are available at the api server",
    "start": "420639",
    "end": "427199"
  },
  {
    "text": "this also includes the of course as you would imagine the resources that are part of the api",
    "start": "427199",
    "end": "434560"
  },
  {
    "text": "server itself that are shipped with the core cross plane distribution but also the custom resource definitions",
    "start": "434560",
    "end": "442000"
  },
  {
    "text": "and for each discovered group version uh you know the discovery client has to discover the resources the actual kinds",
    "start": "442000",
    "end": "450560"
  },
  {
    "text": "under that group version so we have this discovery client",
    "start": "450560",
    "end": "457360"
  },
  {
    "text": "running for example as part of cuba ctl or any other api server client it could",
    "start": "457360",
    "end": "462560"
  },
  {
    "text": "be and we have on the right the api server so",
    "start": "462560",
    "end": "468800"
  },
  {
    "text": "the first request is you know down to the slash api endpoint",
    "start": "468800",
    "end": "475199"
  },
  {
    "text": "and you know we get a we won that api group list response from",
    "start": "475199",
    "end": "481759"
  },
  {
    "text": "that you know listing the group versions available at that point",
    "start": "481759",
    "end": "487120"
  },
  {
    "text": "and also uh this was the legacy endpoint so we",
    "start": "487120",
    "end": "492319"
  },
  {
    "text": "also need to hit the slash api's endpoint and similarly we will get an api group",
    "start": "492319",
    "end": "498639"
  },
  {
    "text": "list from that point giving us the available group versions there",
    "start": "498639",
    "end": "504080"
  },
  {
    "text": "and then discovery client needs to discover uh the kinds",
    "start": "504080",
    "end": "509360"
  },
  {
    "text": "available at these group versions right so this is done in parallel",
    "start": "509360",
    "end": "516640"
  },
  {
    "text": "and from the discovery client you see you know some parallel requests",
    "start": "517599",
    "end": "523839"
  },
  {
    "text": "uh for each group version that needs to be discovered so here as you see",
    "start": "523839",
    "end": "532320"
  },
  {
    "text": "you know these represent multiple parallel requests and the first one for example discovers",
    "start": "532720",
    "end": "538959"
  },
  {
    "text": "the you know batch v1 beta one and the second one xb1 for example the improved",
    "start": "538959",
    "end": "544000"
  },
  {
    "text": "version and the api service is of course expected to return the api's resources",
    "start": "544000",
    "end": "551600"
  },
  {
    "text": "documents available at those end points",
    "start": "551600",
    "end": "557279"
  },
  {
    "text": "so what has been implemented is um",
    "start": "557440",
    "end": "563760"
  },
  {
    "text": "you know the clients discovery client itself is",
    "start": "563760",
    "end": "569040"
  },
  {
    "text": "throttled without any feedback from the api server itself",
    "start": "569040",
    "end": "574880"
  },
  {
    "text": "so this is done uh why are a discovery client you know why i am talking about rate limiter",
    "start": "574880",
    "end": "582080"
  },
  {
    "text": "implementation currently and i'd like to briefly mention you know how this is implemented",
    "start": "582080",
    "end": "588160"
  },
  {
    "text": "to give some technical details so let's assume that we have a number of",
    "start": "588160",
    "end": "594160"
  },
  {
    "text": "requests to do to the api server but we have the token bucket rate limiter you",
    "start": "594160",
    "end": "600320"
  },
  {
    "text": "know as a throttler so you can imagine this you know",
    "start": "600320",
    "end": "605839"
  },
  {
    "text": "as a kind of bucket uh initially filled with uh you know",
    "start": "605839",
    "end": "611600"
  },
  {
    "text": "some capacity and this unit of capacity is represented by the tokens here",
    "start": "611600",
    "end": "618480"
  },
  {
    "text": "and initially our tiny bucket here has you know an initial",
    "start": "618480",
    "end": "624160"
  },
  {
    "text": "capacity of three requests or tokens let's say",
    "start": "624160",
    "end": "630640"
  },
  {
    "text": "and you know there's another parameter uh which we call as the field rate",
    "start": "630640",
    "end": "636240"
  },
  {
    "text": "uh so as requests are admitted each request will",
    "start": "636240",
    "end": "641760"
  },
  {
    "text": "take a token from this bucket as we will see and this you know bucket has to be",
    "start": "641760",
    "end": "648079"
  },
  {
    "text": "filled refueled right so the r parameter the rate parameter denotes you know the rate",
    "start": "648079",
    "end": "654880"
  },
  {
    "text": "at which this bucket is filled so let's assume that we have these",
    "start": "654880",
    "end": "661519"
  },
  {
    "text": "requests is represented with a cube but the time dimension is the y",
    "start": "661519",
    "end": "667279"
  },
  {
    "text": "dimension unconventional meaning that you know these requests are in parallel",
    "start": "667279",
    "end": "673120"
  },
  {
    "text": "and initially we have three tokens in the bucket this means that",
    "start": "673120",
    "end": "679440"
  },
  {
    "text": "we will the three of these requests will be admitted",
    "start": "679440",
    "end": "685040"
  },
  {
    "text": "meaning that will be sent to the api server but",
    "start": "685040",
    "end": "690160"
  },
  {
    "text": "the remaining one request because there is no token left in the bucket",
    "start": "690560",
    "end": "696800"
  },
  {
    "text": "will not be admitted and you know",
    "start": "696800",
    "end": "702720"
  },
  {
    "text": "it will be exponentially backed off to be retried again so as time passes",
    "start": "702720",
    "end": "709440"
  },
  {
    "text": "uh you know with the field rate the bucket is filled",
    "start": "709440",
    "end": "714880"
  },
  {
    "text": "we now we now have a token available in the bucket",
    "start": "714880",
    "end": "720560"
  },
  {
    "text": "and when the timer for the you know blocked request arrives",
    "start": "720560",
    "end": "727279"
  },
  {
    "text": "it will be admitted this time and you know",
    "start": "727279",
    "end": "733360"
  },
  {
    "text": "the error message that you see or the warning message i should say that you see you know",
    "start": "733360",
    "end": "740320"
  },
  {
    "text": "denotes how long the request was delayed because of this rate limiting",
    "start": "740320",
    "end": "748160"
  },
  {
    "text": "so the client core discovery client uses",
    "start": "750480",
    "end": "756560"
  },
  {
    "text": "a token bucket rate limiter uh with the initial burst parameter of 300",
    "start": "756560",
    "end": "764560"
  },
  {
    "text": "queries or 300 tokens and the rate limit is you know",
    "start": "764560",
    "end": "769760"
  },
  {
    "text": "50.0 queries per second",
    "start": "769760",
    "end": "774800"
  },
  {
    "text": "so these are the current parameters in kubernetes 1.24",
    "start": "776160",
    "end": "781440"
  },
  {
    "text": "when we were tackling with these issues we realized that you know",
    "start": "781440",
    "end": "787200"
  },
  {
    "text": "in kubernetes 1.23 the parameters the burst rate was 100",
    "start": "787200",
    "end": "795600"
  },
  {
    "text": "excuse me the burst parameter was 100 queries and the rate was just uh you",
    "start": "796160",
    "end": "802399"
  },
  {
    "text": "know 5.0 uh queries per second so this was basically due to a bug you know",
    "start": "802399",
    "end": "810079"
  },
  {
    "text": "these were not the intended parameters the internet parameters were actually",
    "start": "810079",
    "end": "815440"
  },
  {
    "text": "4b 300 and for our 50.0 qps",
    "start": "815440",
    "end": "820959"
  },
  {
    "text": "however you know due to a configuration back the actual parameters were hundreds and",
    "start": "820959",
    "end": "827600"
  },
  {
    "text": "you know 5.0 which were uh you know quite low when compared to the",
    "start": "827600",
    "end": "833120"
  },
  {
    "text": "you know number of crds that we were trying to install and uh you know we saw lots of throttling",
    "start": "833120",
    "end": "840000"
  },
  {
    "text": "because of this so",
    "start": "840000",
    "end": "845199"
  },
  {
    "text": "i'd like to also briefly mention about you know the cash discovery client uh if you remember when i was showing a",
    "start": "846000",
    "end": "853760"
  },
  {
    "text": "you know an example of the client-side throttling warning messages",
    "start": "853760",
    "end": "859310"
  },
  {
    "text": "[Music] i mentioned about you know if you run this on a cold cache and we will see",
    "start": "859310",
    "end": "865760"
  },
  {
    "text": "what that cache means here so cubicity uses a",
    "start": "865760",
    "end": "871639"
  },
  {
    "text": "disk.cache discovery client which actually as you would imagine you",
    "start": "871639",
    "end": "877839"
  },
  {
    "text": "know maintains a cache of the api resource list and",
    "start": "877839",
    "end": "883920"
  },
  {
    "text": "you know the responses from the api server the discovery client gets from the api server so this cache is",
    "start": "883920",
    "end": "891440"
  },
  {
    "text": "maintained under user's home directory by default and it's specific to the api service",
    "start": "891440",
    "end": "899279"
  },
  {
    "text": "hosting port it's specific to the api server and as you can see if you are running an",
    "start": "899279",
    "end": "906560"
  },
  {
    "text": "api server on the local host you can see the ip address as the host",
    "start": "906560",
    "end": "912639"
  },
  {
    "text": "name or you know if the if your config",
    "start": "912639",
    "end": "920079"
  },
  {
    "text": "declares an api server with a hostname then it will be under",
    "start": "920079",
    "end": "925600"
  },
  {
    "text": "that hostname underscore the port number and you can see",
    "start": "925600",
    "end": "931199"
  },
  {
    "text": "a directory structure of this cache so at the root level",
    "start": "931199",
    "end": "937440"
  },
  {
    "text": "under this cache directory there will be the server groups that json file",
    "start": "937440",
    "end": "942560"
  },
  {
    "text": "which basically you know holds the group versions available at the api server",
    "start": "942560",
    "end": "947839"
  },
  {
    "text": "and you know for each api group you will see specific",
    "start": "947839",
    "end": "954480"
  },
  {
    "text": "versions available under that api group and under each",
    "start": "954480",
    "end": "960079"
  },
  {
    "text": "group version folder you will see the server resources.json file which",
    "start": "960079",
    "end": "965519"
  },
  {
    "text": "actually contain the available resources under that group version",
    "start": "965519",
    "end": "971360"
  },
  {
    "text": "so running the ctl examples that i that i've shown on a",
    "start": "971360",
    "end": "977279"
  },
  {
    "text": "cold cache means you know running those commands on an empty cache like in that",
    "start": "977279",
    "end": "983279"
  },
  {
    "text": "example i had just you know run an rm command to you know clean the cache",
    "start": "983279",
    "end": "989680"
  },
  {
    "text": "uh so that the discovery client the cache discovery client excuse me would not return you know",
    "start": "989680",
    "end": "996399"
  },
  {
    "text": "responses from its cache but this cache also as you'll imagine",
    "start": "996399",
    "end": "1001839"
  },
  {
    "text": "has a time to leave parameter uh up to kubernetes 1.23",
    "start": "1001839",
    "end": "1008399"
  },
  {
    "text": "it was uh just 10 minutes uh meaning that you know every 10 minutes uh",
    "start": "1008399",
    "end": "1015040"
  },
  {
    "text": "even if you know the cash has already been populated the discovery client",
    "start": "1015040",
    "end": "1020800"
  },
  {
    "text": "would need to you know talk with the api server to",
    "start": "1020800",
    "end": "1026160"
  },
  {
    "text": "fetch the latest versions of these documents however with kubernetes 1.24 it has been",
    "start": "1026160",
    "end": "1032880"
  },
  {
    "text": "increased to six hours so the time to leave parameter for the you know the default time to leave",
    "start": "1032880",
    "end": "1039520"
  },
  {
    "text": "parameter for cash discovery client has been increased to six hours",
    "start": "1039520",
    "end": "1045038"
  },
  {
    "text": "um so if you summarize you know",
    "start": "1045039",
    "end": "1050880"
  },
  {
    "text": "the throttling issues the discovery client needs to make at",
    "start": "1050880",
    "end": "1056799"
  },
  {
    "text": "least you know two plus the group version count number of requests to discover the available apis right",
    "start": "1056799",
    "end": "1065360"
  },
  {
    "text": "so the initial tool comes from the slash api and slash api's endpoints",
    "start": "1065360",
    "end": "1071440"
  },
  {
    "text": "and then for each group version we will be requesting the available resources under",
    "start": "1071440",
    "end": "1076880"
  },
  {
    "text": "that group version so those sum up to two plus uh the group version count",
    "start": "1076880",
    "end": "1082640"
  },
  {
    "text": "and also please remember that uh you will also for example if you are running a cube",
    "start": "1082640",
    "end": "1088640"
  },
  {
    "text": "ctrl get notes comment it will also be a separate request that comes after the",
    "start": "1088640",
    "end": "1094480"
  },
  {
    "text": "discovery phase so if we install for example all three",
    "start": "1094480",
    "end": "1102000"
  },
  {
    "text": "cross-planed jet-based cross-plane providers it means that we will have 300",
    "start": "1102640",
    "end": "1109400"
  },
  {
    "text": "370 group versions hitting the api server right",
    "start": "1109400",
    "end": "1114960"
  },
  {
    "text": "so what are the consequences if we have as you see here the important parameter",
    "start": "1114960",
    "end": "1121440"
  },
  {
    "text": "is not the you know crd count but rather the you know group version count right",
    "start": "1121440",
    "end": "1129280"
  },
  {
    "text": "and um this table shows for example",
    "start": "1129280",
    "end": "1134840"
  },
  {
    "text": "uh some dif some you know pyramid running you know discovery client with",
    "start": "1134840",
    "end": "1141039"
  },
  {
    "text": "some different parameters uh with cube ctl you cannot do this",
    "start": "1141039",
    "end": "1146640"
  },
  {
    "text": "but you know we have custom version of cube ctl",
    "start": "1146640",
    "end": "1152799"
  },
  {
    "text": "through which you can explore these parameters and as you would expect since",
    "start": "1152799",
    "end": "1158240"
  },
  {
    "text": "we are talking about 370 group versions and since the burst rate",
    "start": "1158240",
    "end": "1165360"
  },
  {
    "text": "is by default excuse me since the burst parameter is by default you know 300",
    "start": "1165360",
    "end": "1172640"
  },
  {
    "text": "tokens just 300 queries cube ctrl will be throttled if it's",
    "start": "1173360",
    "end": "1179280"
  },
  {
    "text": "running on a cold cache right but if you increase uh up to",
    "start": "1179280",
    "end": "1185679"
  },
  {
    "text": "the initial burst parameter up to 400",
    "start": "1185679",
    "end": "1190480"
  },
  {
    "text": "then it's not it's no longer throttled so uh with this tool if you pass the rate",
    "start": "1190840",
    "end": "1197120"
  },
  {
    "text": "parameter as -1 the client-side rate through tooler",
    "start": "1197120",
    "end": "1203120"
  },
  {
    "text": "is completely disabled but we can see no improvement you know",
    "start": "1203120",
    "end": "1208159"
  },
  {
    "text": "after 400 because it's already larger than [Music] you know 370.",
    "start": "1208159",
    "end": "1216279"
  },
  {
    "text": "so maybe we should also discuss you know the api server",
    "start": "1219120",
    "end": "1225360"
  },
  {
    "text": "cpu and memory high api server recipient memory utilization issues that we have encountered",
    "start": "1225360",
    "end": "1232480"
  },
  {
    "text": "so uh initially we were installing you know 600 and you",
    "start": "1232840",
    "end": "1238480"
  },
  {
    "text": "know about 700 custom resource definitions uh on a single cluster",
    "start": "1238480",
    "end": "1244159"
  },
  {
    "text": "and i think it's not readable but",
    "start": "1244159",
    "end": "1249280"
  },
  {
    "text": "as you see here the api server was",
    "start": "1249280",
    "end": "1255520"
  },
  {
    "text": "immediately started you know spending two cores these are you know collected from",
    "start": "1255520",
    "end": "1262640"
  },
  {
    "text": "prometheus metrics as you as you would imagine and you know we investigated the",
    "start": "1262640",
    "end": "1269280"
  },
  {
    "text": "also maybe i should talk about you know uh we also saw high memory utilization",
    "start": "1269280",
    "end": "1276080"
  },
  {
    "text": "although we did not we did not you know profile do a memory heap profiling ourselves",
    "start": "1276080",
    "end": "1283520"
  },
  {
    "text": "we initially concentrated on the cpu utilization",
    "start": "1283520",
    "end": "1289360"
  },
  {
    "text": "and you know i will first represent the results uh from our you know cpu heap profiling",
    "start": "1289760",
    "end": "1298080"
  },
  {
    "text": "so the observation the immediate observation uh from cpu profiling was",
    "start": "1298080",
    "end": "1304000"
  },
  {
    "text": "that you know uh over 40 percent of our cpu time",
    "start": "1304000",
    "end": "1310640"
  },
  {
    "text": "was spent uh you know during open api v2 spec",
    "start": "1310640",
    "end": "1317360"
  },
  {
    "text": "aggregated open api view to spec serialization so i will briefly mention what this means",
    "start": "1317360",
    "end": "1323760"
  },
  {
    "text": "and you know when you examine the available profiling data",
    "start": "1323760",
    "end": "1330559"
  },
  {
    "text": "we spent api servers spends lots of time in json on marshalling and marshalling operations",
    "start": "1330559",
    "end": "1336480"
  },
  {
    "text": "uh and also you know proto uh binary civilization uh and also another interesting point",
    "start": "1336480",
    "end": "1342720"
  },
  {
    "text": "was you know because you know during this",
    "start": "1342720",
    "end": "1348799"
  },
  {
    "text": "aggregation operation uh lots of objects are being created and destroyed",
    "start": "1348799",
    "end": "1354480"
  },
  {
    "text": "so we had a very high hip churn so the garbage collector also",
    "start": "1354480",
    "end": "1361840"
  },
  {
    "text": "accounted for a large percentage of the sampled",
    "start": "1361840",
    "end": "1367360"
  },
  {
    "text": "cpu time so let me talk about you know what this",
    "start": "1367360",
    "end": "1373120"
  },
  {
    "text": "open api v2 spec margin means uh",
    "start": "1373120",
    "end": "1378880"
  },
  {
    "text": "with the v1 version of api extensions each crd must specify you know a",
    "start": "1379280",
    "end": "1386240"
  },
  {
    "text": "validation schema you know expressed as an open api v3 structural schema",
    "start": "1386240",
    "end": "1394240"
  },
  {
    "text": "and using this schema you know the a custom resource belonging",
    "start": "1394240",
    "end": "1399360"
  },
  {
    "text": "to the custom resource definition is validated as you would imagine during you know creation and updates",
    "start": "1399360",
    "end": "1406880"
  },
  {
    "text": "and unknown fields can be pruned by the api server",
    "start": "1406880",
    "end": "1413440"
  },
  {
    "text": "that are not you know available in this schema and also this schema is used for",
    "start": "1413760",
    "end": "1420480"
  },
  {
    "text": "client-side validation so when you run a cube ctl command without specifying for example the validate equals false",
    "start": "1420480",
    "end": "1429919"
  },
  {
    "text": "validates the ccr manifest and you know if it doesn't conform to the manifest",
    "start": "1429919",
    "end": "1436400"
  },
  {
    "text": "you know it will reject to work right",
    "start": "1436400",
    "end": "1443279"
  },
  {
    "text": "so api service api server serves an aggregated open api",
    "start": "1443279",
    "end": "1450880"
  },
  {
    "text": "v2 spec at the slash open api slash v2 endpoint",
    "start": "1450880",
    "end": "1455919"
  },
  {
    "text": "and this spec contains uh or documents you know the complete",
    "start": "1455919",
    "end": "1463039"
  },
  {
    "text": "api available at the api server so uh by default this is served as a you",
    "start": "1463039",
    "end": "1469760"
  },
  {
    "text": "know serialized as json so when you hit this end point without you know",
    "start": "1469760",
    "end": "1474799"
  },
  {
    "text": "specifying uh with an accept header a different serialization format like protobuf you",
    "start": "1474799",
    "end": "1480799"
  },
  {
    "text": "will the api server will return a json uh but you know uh especially for intra",
    "start": "1480799",
    "end": "1487840"
  },
  {
    "text": "cluster communication you know a protobuf civilization has also been",
    "start": "1487840",
    "end": "1493120"
  },
  {
    "text": "implemented in the api server so",
    "start": "1493120",
    "end": "1498640"
  },
  {
    "text": "here you see an example",
    "start": "1499200",
    "end": "1502720"
  },
  {
    "text": "aggregated spec example and you know under pets you will see for",
    "start": "1505120",
    "end": "1510799"
  },
  {
    "text": "example the you know open api schema",
    "start": "1510799",
    "end": "1517760"
  },
  {
    "text": "of a custom resource definition so this also means that",
    "start": "1517760",
    "end": "1524640"
  },
  {
    "text": "when you register a you know custom resource definition",
    "start": "1525440",
    "end": "1530559"
  },
  {
    "text": "the api server has to recompute the aggregated spec right",
    "start": "1530559",
    "end": "1535919"
  },
  {
    "text": "so that custom resource definition itself becomes part of",
    "start": "1535919",
    "end": "1540960"
  },
  {
    "text": "what's available as an api in the api server and the",
    "start": "1540960",
    "end": "1546400"
  },
  {
    "text": "you know aggregated open api v2 specs served at the slash open api slash v2",
    "start": "1546400",
    "end": "1551919"
  },
  {
    "text": "endpoint has to be updated with the new crd",
    "start": "1551919",
    "end": "1558080"
  },
  {
    "text": "and if you are registering you know a bunch of crds this also means that the api server will in the background",
    "start": "1558080",
    "end": "1567200"
  },
  {
    "text": "you know update the aggregated open api v2 specs so the profiling data",
    "start": "1567200",
    "end": "1574159"
  },
  {
    "text": "had shown that you know this is where time was spent so",
    "start": "1574159",
    "end": "1580000"
  },
  {
    "text": "this was the root cause of the high cpu utilization that we had observed",
    "start": "1580000",
    "end": "1587360"
  },
  {
    "text": "and you know we got in touch with the",
    "start": "1587360",
    "end": "1592400"
  },
  {
    "text": "upstream crossplay upstream kubernetes community and luckily learned that they were",
    "start": "1592400",
    "end": "1599200"
  },
  {
    "text": "already available aware of you know uh high memory utilization issues",
    "start": "1599200",
    "end": "1605679"
  },
  {
    "text": "uh also related to open api v2 spec uh you know processing",
    "start": "1605679",
    "end": "1612480"
  },
  {
    "text": "and you know a fix was on its way so we have also evaluated uh",
    "start": "1612480",
    "end": "1619520"
  },
  {
    "text": "so i will also briefly mention what the fix was so the fix was",
    "start": "1619520",
    "end": "1625600"
  },
  {
    "text": "in fact you know instead of calculating the aggregated",
    "start": "1625600",
    "end": "1631440"
  },
  {
    "text": "open api v2 spec each time a crd was generated",
    "start": "1631440",
    "end": "1636640"
  },
  {
    "text": "the idea was to you know defer calculation of the aggregated spec till",
    "start": "1636640",
    "end": "1643760"
  },
  {
    "text": "a request to the open api slash v2 endpoint hits right so",
    "start": "1643760",
    "end": "1649039"
  },
  {
    "text": "it basically you know defers the calculation of the aggregated spec",
    "start": "1649039",
    "end": "1655760"
  },
  {
    "text": "and you know if you register a bunch of crds the open api v2 spec is not immediately calculated",
    "start": "1655760",
    "end": "1663440"
  },
  {
    "text": "and you know whenever a request comes to the slash open api slash v2 endpoint the",
    "start": "1663440",
    "end": "1669279"
  },
  {
    "text": "api server will for once calculate the aggregated spec",
    "start": "1669279",
    "end": "1676720"
  },
  {
    "text": "so this saves lots of you know cpu cycles",
    "start": "1676720",
    "end": "1682880"
  },
  {
    "text": "and you know we wanted to see how this affected our profiling data or",
    "start": "1682880",
    "end": "1689600"
  },
  {
    "text": "whether we could quantify the improvements here and you know i think it's not that much",
    "start": "1689600",
    "end": "1696880"
  },
  {
    "text": "readable but sorry for that uh here you you'll see you know",
    "start": "1696880",
    "end": "1703840"
  },
  {
    "text": "the cpu utilization running with this fix",
    "start": "1703919",
    "end": "1709440"
  },
  {
    "text": "so if you compare it the previous one for you know about 30 minutes",
    "start": "1709440",
    "end": "1716559"
  },
  {
    "text": "it depends on the number of custom resource definitions you have installed",
    "start": "1716559",
    "end": "1722000"
  },
  {
    "text": "with the provider but the aps server was spending about two course",
    "start": "1722000",
    "end": "1728080"
  },
  {
    "text": "for a prolonged period of time and you know with the laser margining of",
    "start": "1728080",
    "end": "1733760"
  },
  {
    "text": "the open api we do spec uh things are in a",
    "start": "1733760",
    "end": "1739840"
  },
  {
    "text": "much better situation for a shorter period of time and with a you know smaller peak",
    "start": "1739840",
    "end": "1746080"
  },
  {
    "text": "the api server can handle uh the calculation of the aggregates to open api to spec",
    "start": "1746080",
    "end": "1753600"
  },
  {
    "text": "so even with this fix which is already available in 1.23",
    "start": "1753600",
    "end": "1762320"
  },
  {
    "text": "so we were not we were hoping that these would resolve our issues",
    "start": "1762320",
    "end": "1768399"
  },
  {
    "text": "but we could not validate this in the manage kubernetes offerings",
    "start": "1768399",
    "end": "1774799"
  },
  {
    "text": "this was because you know we could not run a modified version of cuba api server",
    "start": "1774799",
    "end": "1781039"
  },
  {
    "text": "in these manage offerings but after the fix was available we also",
    "start": "1781039",
    "end": "1787440"
  },
  {
    "text": "revisited you know the situation in eks aks and gk regional clusters",
    "start": "1787440",
    "end": "1795360"
  },
  {
    "text": "and you know this table shows our current situation so",
    "start": "1795360",
    "end": "1800799"
  },
  {
    "text": "any eks by the way this version does not contain this fix",
    "start": "1800799",
    "end": "1806399"
  },
  {
    "text": "the laser marshaling fix but uh you know we can also install all three providers",
    "start": "1806399",
    "end": "1812000"
  },
  {
    "text": "successfully uh but you will see the client-side throttling warning messages issues and",
    "start": "1812000",
    "end": "1819679"
  },
  {
    "text": "maybe even failures uh you know because requests may timeout due to client-side",
    "start": "1819679",
    "end": "1825919"
  },
  {
    "text": "throttling but whatever the reason from a cross-plane perspective",
    "start": "1825919",
    "end": "1830960"
  },
  {
    "text": "we could install all three providers and in aks clusters we were good with",
    "start": "1830960",
    "end": "1837279"
  },
  {
    "text": "provider jet aws and provider jet asia but you know it was not possible to",
    "start": "1837279",
    "end": "1843679"
  },
  {
    "text": "install a church provider and in gk regional clusters",
    "start": "1843679",
    "end": "1851600"
  },
  {
    "text": "we had some problems you know in installing a single provider also",
    "start": "1851600",
    "end": "1857440"
  },
  {
    "text": "so this also means that you know these issues are not resolved",
    "start": "1857440",
    "end": "1864640"
  },
  {
    "text": "and you know one of the purposes of this talk is as the cross playing community we would",
    "start": "1864640",
    "end": "1871360"
  },
  {
    "text": "like to share our findings and you know",
    "start": "1871360",
    "end": "1876799"
  },
  {
    "text": "drive the upstream community and other uh you know pro providers uh solution",
    "start": "1876799",
    "end": "1882720"
  },
  {
    "text": "providers who depend on large number of customer resource definitions uh",
    "start": "1882720",
    "end": "1888559"
  },
  {
    "text": "you know to work with the upstream community to resolve these issues so",
    "start": "1888559",
    "end": "1894720"
  },
  {
    "text": "this is how we profile the api server so we were using custom pro custom",
    "start": "1894720",
    "end": "1900480"
  },
  {
    "text": "builds of cube api server as you see including the fix and not including to",
    "start": "1900480",
    "end": "1905600"
  },
  {
    "text": "fix and also to test some other ideas so uh",
    "start": "1905600",
    "end": "1911360"
  },
  {
    "text": "you know this profiling data was collected on kind clusters we first used kind build node image",
    "start": "1911360",
    "end": "1920000"
  },
  {
    "text": "you know running it on the specific",
    "start": "1920000",
    "end": "1925760"
  },
  {
    "text": "kubernetes source repository that contains",
    "start": "1925760",
    "end": "1931039"
  },
  {
    "text": "the cube api server to be built and then using this node image you can create a kind cluster",
    "start": "1931039",
    "end": "1939039"
  },
  {
    "text": "and then after running cube ctl proxy you can hit the",
    "start": "1939039",
    "end": "1944880"
  },
  {
    "text": "slash debug slash p prof profile endpoint to collect profile data",
    "start": "1944880",
    "end": "1950480"
  },
  {
    "text": "for example in this example we are collecting profiling data cpu profiling",
    "start": "1950480",
    "end": "1955519"
  },
  {
    "text": "data for uh 3 300 seconds and then",
    "start": "1955519",
    "end": "1961279"
  },
  {
    "text": "using the you know excellent p prof tool",
    "start": "1961279",
    "end": "1968880"
  },
  {
    "text": "you can you know examine the profiling data",
    "start": "1968880",
    "end": "1974840"
  },
  {
    "text": "so it requires some experience to interpret the profiling data but in our",
    "start": "1974840",
    "end": "1981279"
  },
  {
    "text": "case uh we were able to accurately pinpoint the open api v2 spec",
    "start": "1981279",
    "end": "1989039"
  },
  {
    "text": "marshalling uh you know as the root cause of icp utilization",
    "start": "1989039",
    "end": "1996480"
  },
  {
    "text": "so um kubernetes is already you know a",
    "start": "1996480",
    "end": "2001919"
  },
  {
    "text": "scalable threshold document it's maintained by i believe this scalability",
    "start": "2001919",
    "end": "2008399"
  },
  {
    "text": "community but it does not consider the number of crds per cluster",
    "start": "2008399",
    "end": "2014720"
  },
  {
    "text": "as a scalable to dimension and you know the only thing that we could find about",
    "start": "2014720",
    "end": "2020960"
  },
  {
    "text": "you know the number of customer resource definitions uh the limits for limiting you know the",
    "start": "2020960",
    "end": "2026480"
  },
  {
    "text": "num uh the number of customer resource definitions per cluster was in the ga availability document",
    "start": "2026480",
    "end": "2032799"
  },
  {
    "text": "uh i've put the references to those documents here and it's suggested 500 as",
    "start": "2032799",
    "end": "2039039"
  },
  {
    "text": "a maximum limit for the scalable target but as i mentioned this is not",
    "start": "2039039",
    "end": "2044480"
  },
  {
    "text": "you know part of the official scalable traditions document so",
    "start": "2044480",
    "end": "2050500"
  },
  {
    "text": "[Music] we also had some chats with the upstream",
    "start": "2050500",
    "end": "2055599"
  },
  {
    "text": "maintainers and also they also believe that this has to be part",
    "start": "2055599",
    "end": "2061839"
  },
  {
    "text": "of the scalable t documents but you know it needs some time",
    "start": "2061839",
    "end": "2067760"
  },
  {
    "text": "and you know they need to be aware of the use cases and you know use cases similar to ours",
    "start": "2067760",
    "end": "2075679"
  },
  {
    "text": "so i'm concluding my talk thank you very much for listening",
    "start": "2075679",
    "end": "2081118"
  },
  {
    "text": "uh here you can find some further pointers especially the top two",
    "start": "2081119",
    "end": "2087440"
  },
  {
    "text": "ones from the cross playing project there are really detailed discussions",
    "start": "2087440",
    "end": "2093760"
  },
  {
    "text": "and you know detailed uh you know technical analysis etc that you might be interested in if",
    "start": "2093760",
    "end": "2100000"
  },
  {
    "text": "you want to dive deeper into this topic and also",
    "start": "2100000",
    "end": "2106800"
  },
  {
    "text": "the one pager has some you know good tools",
    "start": "2106800",
    "end": "2112079"
  },
  {
    "text": "that you can use to generate custom resource definitions etc for your tests and you know for testing",
    "start": "2112079",
    "end": "2119839"
  },
  {
    "text": "possible solutions thank you very much for listening",
    "start": "2119839",
    "end": "2126800"
  },
  {
    "text": "if anybody got a question any questions let's take a look any questions",
    "start": "2127280",
    "end": "2134000"
  },
  {
    "text": "hands not all at once it's been a pretty long day hasn't it",
    "start": "2134000",
    "end": "2139760"
  },
  {
    "text": "lots and lots of action uh i guess is there anything else you'd like to add",
    "start": "2139760",
    "end": "2145119"
  },
  {
    "text": "regarding crds your experience with them your experience before them what we might expect from them in the future",
    "start": "2145119",
    "end": "2151359"
  },
  {
    "text": "yeah so i mean is the cross playing community we really",
    "start": "2151359",
    "end": "2157280"
  },
  {
    "text": "you know depend on them so we would like to drive some effort here",
    "start": "2157280",
    "end": "2164480"
  },
  {
    "text": "with the upstream kubernetes community to make the kubernetes control plane",
    "start": "2164480",
    "end": "2170720"
  },
  {
    "text": "more scalable so",
    "start": "2170720",
    "end": "2175839"
  },
  {
    "text": "but you know this has to be a community effort and you know people from other",
    "start": "2176320",
    "end": "2182079"
  },
  {
    "text": "maybe open source communities or other vendors joining these efforts would be really appreciated",
    "start": "2182079",
    "end": "2188400"
  },
  {
    "text": "will you be here for the rest of the week uh yeah if those folks want to get in touch pretty easy to find let's give",
    "start": "2188400",
    "end": "2194480"
  },
  {
    "text": "another round of applause for outfit excellent talk yeah thank you very much",
    "start": "2194480",
    "end": "2200599"
  }
]