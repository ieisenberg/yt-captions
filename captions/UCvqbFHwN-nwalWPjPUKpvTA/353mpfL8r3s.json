[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "okay we'll start off with the most important business of the day um there will be stickers coming around everyone will get one so uh no need to fight",
    "start": "240",
    "end": "7279"
  },
  {
    "text": "there does not need to be rampage over the stickers plenty to go around my name is nathaniel mccollum cto of",
    "start": "7279",
    "end": "12880"
  },
  {
    "text": "prophen and we're going to be talking about wazzy networking and in particular what drove us to propose the addition of",
    "start": "12880",
    "end": "20240"
  },
  {
    "text": "sock accept to aussie networking what the most recent developments are in this space and the unique ways in which the",
    "start": "20240",
    "end": "28000"
  },
  {
    "text": "anarchs project is using them so i think a lot of people know the answer",
    "start": "28000",
    "end": "34000"
  },
  {
    "start": "31000",
    "end": "151000"
  },
  {
    "text": "to this question but just in case uh there's somebody in the room who doesn't and has seen this acronym all over the",
    "start": "34000",
    "end": "39680"
  },
  {
    "text": "place on all the talks today and is still abundantly confused wazi is actually a pretty simple concept",
    "start": "39680",
    "end": "46480"
  },
  {
    "text": "we have our webassembly code that's running and we have some native code underneath it and we just need an",
    "start": "46480",
    "end": "52079"
  },
  {
    "text": "interface between the two so they can talk to each other and we can always do this with with custom apis but custom",
    "start": "52079",
    "end": "58079"
  },
  {
    "text": "apis aren't great for building communities and they aren't great for scaling code and so we want something that's standardized that can give an",
    "start": "58079",
    "end": "64478"
  },
  {
    "text": "excellent experience on every language platform out of the box and so uh wazi",
    "start": "64479",
    "end": "71680"
  },
  {
    "text": "as we'll go to the next slide and get a little bit of history here",
    "start": "71680",
    "end": "76880"
  },
  {
    "text": "so uh wazi actually started uh as under a different name uh called cloud api",
    "start": "76880",
    "end": "82479"
  },
  {
    "text": "and uh along with a few other inspirations in",
    "start": "82479",
    "end": "88320"
  },
  {
    "text": "cloud api started in 2016 and after basically we released the",
    "start": "88320",
    "end": "93840"
  },
  {
    "text": "webassembly mvp in 2017 people started to think more systematically about this",
    "start": "93840",
    "end": "99200"
  },
  {
    "text": "and so cloud api is sort of developed into what we today call wazzy which is a subgroup in the w3c and is actually",
    "start": "99200",
    "end": "106240"
  },
  {
    "text": "working on this standard so at that point cloud api was deprecated and so everybody is basically",
    "start": "106240",
    "end": "113200"
  },
  {
    "text": "trying to use wazzy today with some degree of success and some most some of the more recent",
    "start": "113200",
    "end": "119360"
  },
  {
    "text": "developments are the ones i mentioned um basically we're trying to drive this effort on modularization which is really",
    "start": "119360",
    "end": "125680"
  },
  {
    "text": "important because there's a lot of environments that could use webassembly but they may not be able to expose all",
    "start": "125680",
    "end": "131360"
  },
  {
    "text": "of the interfaces that could be available under wazi so we want to divide up the wazi specification",
    "start": "131360",
    "end": "137040"
  },
  {
    "text": "into multiple multiple different modules so that platforms can support only the",
    "start": "137040",
    "end": "142560"
  },
  {
    "text": "apis that they are able to support and then specifically we added the accept call",
    "start": "142560",
    "end": "148239"
  },
  {
    "text": "this last year to snapshot one we're going to talk a little bit more about that in a moment",
    "start": "148239",
    "end": "153519"
  },
  {
    "start": "151000",
    "end": "224000"
  },
  {
    "text": "so um the uh the wazzy snapshot uh is really insufficient right this is",
    "start": "153519",
    "end": "159680"
  },
  {
    "text": "what we're all basically trying to run on today and it has a lot of niceties to it um so it does contain a bunch of",
    "start": "159680",
    "end": "165519"
  },
  {
    "text": "interfaces things like clocks file systems networking arguments etc",
    "start": "165519",
    "end": "170800"
  },
  {
    "text": "um however it's really not modular as i was talking about before you sort of have to buy into the whole thing and uh",
    "start": "170800",
    "end": "176560"
  },
  {
    "text": "one one counter example for example of where this doesn't work is actually in the anarchs project so although we are",
    "start": "176560",
    "end": "182319"
  },
  {
    "text": "working on file system support today as of today in our latest release there is no file system support at all so if",
    "start": "182319",
    "end": "188560"
  },
  {
    "text": "you attempt to call any of the file system apis you'll simply get an error that will magically disappear in a",
    "start": "188560",
    "end": "194400"
  },
  {
    "text": "future release and we will have a transparently encrypted file systems so uh so look for things to get better",
    "start": "194400",
    "end": "201040"
  },
  {
    "text": "in that regard but we still need to divide up wazzy into multiple different modules so that we can advertise support",
    "start": "201040",
    "end": "207599"
  },
  {
    "text": "for different feature sets and for a long time modularization has been blocked on interface types and more",
    "start": "207599",
    "end": "213519"
  },
  {
    "text": "lately on on streams which is currently under active development thanks to many of the people in this room",
    "start": "213519",
    "end": "219680"
  },
  {
    "text": "and we're looking for this glorious future which will arrive any day now",
    "start": "219680",
    "end": "225120"
  },
  {
    "text": "so under wazi snapshot zero uh if we're just looking at the networking calls snapshot zero had a variety of of",
    "start": "225120",
    "end": "231519"
  },
  {
    "text": "interfaces but if we just look at the networking calls we really only had three directly having to do with sockets",
    "start": "231519",
    "end": "237760"
  },
  {
    "text": "and that was being able to receive packets being able to send packets and being able to close a stream",
    "start": "237760",
    "end": "244799"
  },
  {
    "text": "and it's a remarkably simple api right and the question is sort of what can we do with this now there's actually",
    "start": "244799",
    "end": "251840"
  },
  {
    "text": "two other sort of interfaces that sneak in under the guise of networking which",
    "start": "251840",
    "end": "257600"
  },
  {
    "text": "is pull one off pull one off allows you to basically receive a notification when there is io",
    "start": "257600",
    "end": "263040"
  },
  {
    "text": "ready to be performed on a given file descriptor and of course uh there's the non-block",
    "start": "263040",
    "end": "268320"
  },
  {
    "text": "flag as well which allows you to set a file descriptor in a non-blocking mode which is what allows you to get to this",
    "start": "268320",
    "end": "274479"
  },
  {
    "text": "poll event and then it won't block if there's not enough data to read and so forth so this core",
    "start": "274479",
    "end": "280160"
  },
  {
    "text": "basically summarizes what snapshot zero was in terms of networking and um",
    "start": "280160",
    "end": "286320"
  },
  {
    "text": "you should immediately notice a problem that there is no way to create a new socket here so basically uh the runtime",
    "start": "286320",
    "end": "292800"
  },
  {
    "text": "could create a set of sockets could hand it over to the webassembly application and you could operate on the sockets you",
    "start": "292800",
    "end": "299040"
  },
  {
    "text": "can read them right in those streams you could close them you could wait for i o but that's really all you could do",
    "start": "299040",
    "end": "304560"
  },
  {
    "text": "and so we really need the ability to create new sockets but the problem is on what capability do we do we do this",
    "start": "304560",
    "end": "311600"
  },
  {
    "text": "and for those of you who are not familiar with capabilities um we need to give a brief introduction to capability",
    "start": "311600",
    "end": "317280"
  },
  {
    "start": "313000",
    "end": "521000"
  },
  {
    "text": "based security so each wazi call has a capability context and you can think look at two",
    "start": "317280",
    "end": "323840"
  },
  {
    "text": "calls there we have an open call and an open ad now uh lazy has no open call",
    "start": "323840",
    "end": "328960"
  },
  {
    "text": "because open is global it operates on a global context where open act operates",
    "start": "328960",
    "end": "334160"
  },
  {
    "text": "on a directory context so you can say within this directory open a path and this actually goes all the way back",
    "start": "334160",
    "end": "340639"
  },
  {
    "text": "to the 1960s when we first started to getting memory controllers in our hardware",
    "start": "340639",
    "end": "346160"
  },
  {
    "text": "and so we invented this concept of processes where a process can have a separate",
    "start": "346160",
    "end": "351840"
  },
  {
    "text": "address space so every time you call fork you basically get a different address space for the process and the end result of",
    "start": "351840",
    "end": "359039"
  },
  {
    "text": "having a different process base means that one application can't muck with another application's memory and that's",
    "start": "359039",
    "end": "364639"
  },
  {
    "text": "a really great feature the problem is nobody ever thought to extend uh this notion of privacy or uh multiple views",
    "start": "364639",
    "end": "372639"
  },
  {
    "text": "today we would call them namespaces in the linux linux kernel uh to all of the other resources that are available on",
    "start": "372639",
    "end": "378000"
  },
  {
    "text": "the system so for example while you've got a private view of memory you got a global view of the file system so",
    "start": "378000",
    "end": "383280"
  },
  {
    "text": "everybody saw all the same files on the desk and the only the only access control you had was whether you",
    "start": "383280",
    "end": "388880"
  },
  {
    "text": "had permissions to access that file uh it was the same thing with networking",
    "start": "388880",
    "end": "393919"
  },
  {
    "text": "you typically would have a set of networking interfaces on a linux system and if you had access to one of them you",
    "start": "393919",
    "end": "399440"
  },
  {
    "text": "had access to all of them or plus or minus and so basically capabilities provide us a",
    "start": "399440",
    "end": "406319"
  },
  {
    "text": "low-cost alternative to os name spacing and so there's been a significant amount of effort of course basically all of",
    "start": "406319",
    "end": "412240"
  },
  {
    "text": "containers are built on top of operating system name spacing where you can actually create different namespaces for",
    "start": "412240",
    "end": "417360"
  },
  {
    "text": "network interfaces and file systems and give people separate views of those but capability-based security basically",
    "start": "417360",
    "end": "423280"
  },
  {
    "text": "says we're not going to have any apis that don't have a context to them and so what this means is that we can always",
    "start": "423280",
    "end": "430240"
  },
  {
    "text": "create private views of the resources on the system because every api receives a context and so what we want basically is",
    "start": "430240",
    "end": "437680"
  },
  {
    "text": "we want a system where there are no global resources and the run runtime can always uh indicate",
    "start": "437680",
    "end": "444240"
  },
  {
    "text": "which resources a particular webassembly executable has",
    "start": "444240",
    "end": "449680"
  },
  {
    "text": "so this poses particular challenges for the global apis that we all know and love",
    "start": "449680",
    "end": "455280"
  },
  {
    "text": "particularly in the networking world where you're typically used to having a global view of network addresses and so",
    "start": "455280",
    "end": "462160"
  },
  {
    "text": "forth and you operate in this global context well when we're trying to do capability-based security in wazzy",
    "start": "462160",
    "end": "468800"
  },
  {
    "text": "that's not exactly a great fit and there's there's a tension there but it's not just the berkeley sockets",
    "start": "468800",
    "end": "473840"
  },
  {
    "text": "it's also file systems so we've solved this pretty efficiently with using open app for example",
    "start": "473840",
    "end": "480720"
  },
  {
    "text": "but even today for file systems for example if you look at the rust standard api",
    "start": "480720",
    "end": "486639"
  },
  {
    "text": "and compare it with openat openat takes a directory file descriptor well rust",
    "start": "486639",
    "end": "491759"
  },
  {
    "text": "doesn't expose at all in their standard library a primitive for operating on open directories and so even though the",
    "start": "491759",
    "end": "499360"
  },
  {
    "text": "underlying operating system does provide open at the rust standard library provides no way to actually access that",
    "start": "499360",
    "end": "506400"
  },
  {
    "text": "so uh the fundamental situation we found ourselves in with with snapshot zero was that there was no way to create new",
    "start": "506400",
    "end": "511440"
  },
  {
    "text": "sockets the runtime could create sockets ahead of time you could hand them to the runtime you could read and write on them",
    "start": "511440",
    "end": "516640"
  },
  {
    "text": "you could close them but that was it if you wanted to do more you were out of luck so fortunately",
    "start": "516640",
    "end": "523440"
  },
  {
    "start": "521000",
    "end": "596000"
  },
  {
    "text": "we were able to rev this to snapshot one and in snapshot one we got most this most of the same",
    "start": "523440",
    "end": "529360"
  },
  {
    "text": "stuff but we at prophen felt pretty constrained by not being able to create any incoming",
    "start": "529360",
    "end": "534880"
  },
  {
    "text": "connections and so we essentially proposed the addition of sock accept as an api and um",
    "start": "534880",
    "end": "543120"
  },
  {
    "text": "i think it's great everyone was pretty enthused about this we were able to move really quickly profian sponsored",
    "start": "543120",
    "end": "549279"
  },
  {
    "text": "addition of the entire networking stack into the russ standard library and we also",
    "start": "549279",
    "end": "555680"
  },
  {
    "text": "provided patches to azilibc there are a number of people here who like microsoft for example has done this",
    "start": "555680",
    "end": "561680"
  },
  {
    "text": "in net so it's great to see a lot of people taking this up",
    "start": "561680",
    "end": "566720"
  },
  {
    "text": "and basically what it means is we do have now have the ability to accept incoming",
    "start": "566720",
    "end": "571760"
  },
  {
    "text": "uh sockets and the reason we can do this is because when you pre-create a listening socket in the berkeley sockets",
    "start": "571760",
    "end": "578480"
  },
  {
    "text": "api that listening socket already provides a context so we're not violating capability based security here",
    "start": "578480",
    "end": "586320"
  },
  {
    "text": "we are just simply using the incoming listening socket as as that context and so it was pretty",
    "start": "586320",
    "end": "593519"
  },
  {
    "text": "easy to add this and so as i mentioned there's this has",
    "start": "593519",
    "end": "599680"
  },
  {
    "start": "596000",
    "end": "668000"
  },
  {
    "text": "been implemented in a variety of places this has been a lot of work profian has",
    "start": "599680",
    "end": "605200"
  },
  {
    "text": "done some of this work but others have done it as well so thanks to everyone who's contributed and basically what we",
    "start": "605200",
    "end": "611040"
  },
  {
    "text": "see is in maine right now in wesley libsy there's sock accept support so this",
    "start": "611040",
    "end": "616800"
  },
  {
    "text": "means anybody who is consuming wazey web c as their interface to washi uh",
    "start": "616800",
    "end": "622079"
  },
  {
    "text": "automatically gets uh sock accept as part of this this would include a bunch of the dynamic languages like python and",
    "start": "622079",
    "end": "627519"
  },
  {
    "text": "ruby and so forth in the rust world we added",
    "start": "627519",
    "end": "632720"
  },
  {
    "text": "support for networking to the standard library this is available on nightly we also added support to mio to be able to",
    "start": "632720",
    "end": "639040"
  },
  {
    "text": "support pull one off which it couldn't currently support and so now mio actually supports the ability",
    "start": "639040",
    "end": "644480"
  },
  {
    "text": "to do non-blocking i o based in wazi we currently have somebody",
    "start": "644480",
    "end": "649680"
  },
  {
    "text": "working on getting tokyo up and running so we would really like to see the entirety of the tokyo framework and",
    "start": "649680",
    "end": "655519"
  },
  {
    "text": "we're also evaluating async tid if you are and if anyone in this room is interested in collaborating with these",
    "start": "655519",
    "end": "661040"
  },
  {
    "text": "we would love to have your collaboration this is work that really benefits everybody so we'd love to make a good",
    "start": "661040",
    "end": "667040"
  },
  {
    "text": "showing of it",
    "start": "667040",
    "end": "669600"
  },
  {
    "text": "so as we look beyond razzie snapshot one however we we still have uh a variety of",
    "start": "672079",
    "end": "678160"
  },
  {
    "text": "things that have to happen in order for us to make forward progress uh fortunately we have pretty mature",
    "start": "678160",
    "end": "683920"
  },
  {
    "text": "interface types at this point uh the tooling is rapidly maturing in this in this area um",
    "start": "683920",
    "end": "689920"
  },
  {
    "text": "we are also starting to get the streams definition to be somewhat mature i'm hoping that this will accelerate in the",
    "start": "689920",
    "end": "695839"
  },
  {
    "text": "coming days as people show more and more interest in it i think it's pretty clear um and there was at least four talks i",
    "start": "695839",
    "end": "702480"
  },
  {
    "text": "think that mentioned that their biggest pain point in webassembly today was networking so it seems to me that",
    "start": "702480",
    "end": "708079"
  },
  {
    "text": "there's a pretty broad consensus uh that this is something we need to pay attention to",
    "start": "708079",
    "end": "713200"
  },
  {
    "text": "um we really need to target three different scenarios and right now there's a lot of work being done in the",
    "start": "713200",
    "end": "718880"
  },
  {
    "text": "last one but i want to talk about what these three are and i want to talk about the subtle differences between them and",
    "start": "718880",
    "end": "724720"
  },
  {
    "text": "why i think we need to actually adopt all of them so the subtle difference between them is",
    "start": "724720",
    "end": "729920"
  },
  {
    "text": "uh the first one is blocking and blocking is the old berkeley sockets that we know and love you know since",
    "start": "729920",
    "end": "735600"
  },
  {
    "text": "time immemorial if you create a socket um and do a connect you're gonna wait",
    "start": "735600",
    "end": "741120"
  },
  {
    "text": "until you know that connection completes before the function returns the same thing with reading or writing and so",
    "start": "741120",
    "end": "746639"
  },
  {
    "text": "forth non-blocking was a mode that was added to this where you could set the non-blocking flag on the socket and then",
    "start": "746639",
    "end": "752560"
  },
  {
    "text": "if there was no i o available to be performed and you did a read for example the function would return immediately",
    "start": "752560",
    "end": "758240"
  },
  {
    "text": "and would with an error e again saying that you need to be called you need to call this function again when there's",
    "start": "758240",
    "end": "764000"
  },
  {
    "text": "actually i o available and so this is combined with then with a",
    "start": "764000",
    "end": "769120"
  },
  {
    "text": "polling function of some kind in ozzy this is pull one off and with pole one off what it allows you to",
    "start": "769120",
    "end": "775360"
  },
  {
    "text": "do is you can call pull one off and pull one off will block regardless what the state of the non-blocking flag is and so",
    "start": "775360",
    "end": "782480"
  },
  {
    "text": "when pull one off returns it gives you an indication that there is i o ready uh",
    "start": "782480",
    "end": "787600"
  },
  {
    "text": "to be performed and then you can call the non-blocking read and instead of receiving that e again error you will",
    "start": "787600",
    "end": "793279"
  },
  {
    "text": "instead receive uh some of the data that was available on that connection and so we might call this uh i got this",
    "start": "793279",
    "end": "799200"
  },
  {
    "text": "term from dan gunman this is notification a notification mode async is different",
    "start": "799200",
    "end": "805360"
  },
  {
    "text": "but it's very subtly different async is where we indicate to uh the",
    "start": "805360",
    "end": "810480"
  },
  {
    "text": "kernel or the runtime that we want to perform some some io and that function immediately returns",
    "start": "810480",
    "end": "816560"
  },
  {
    "text": "and then we can call another function later to block and it returns only when the i o is complete so the distinction",
    "start": "816560",
    "end": "823279"
  },
  {
    "text": "between non-blocking and async is that non-blocking provides you a notification",
    "start": "823279",
    "end": "828720"
  },
  {
    "text": "that i o is available and then you perform a non-blocking read where async",
    "start": "828720",
    "end": "833760"
  },
  {
    "text": "you give an indication that you want to do a read and then you call a function that blocks until all of the data is available so notification versus",
    "start": "833760",
    "end": "840720"
  },
  {
    "text": "completeness thank you dan gunman for uh for that great phrase um and so uh we still also need to port",
    "start": "840720",
    "end": "847760"
  },
  {
    "text": "existing tooling to it bind gen and i know dan is working on that furiously um we also have a new networking proposal",
    "start": "847760",
    "end": "854800"
  },
  {
    "text": "that's been proposed and the the proposal that's that has been proposed is fairly reminiscent of what we know of",
    "start": "854800",
    "end": "862000"
  },
  {
    "text": "from traditional berkeley sockets but that may actually pose some problems and you'll see why when we get to the",
    "start": "862000",
    "end": "868000"
  },
  {
    "text": "nrx demo in a moment because one of the things it does is it exposes all of the lower level protocols",
    "start": "868000",
    "end": "874800"
  },
  {
    "text": "and then one of the questions is do we actually want to expose all of those lower level protocols or do we really",
    "start": "874800",
    "end": "880000"
  },
  {
    "text": "just want to say i have this named thing maybe it's an outgoing connection maybe it's an incoming connection and i want",
    "start": "880000",
    "end": "886800"
  },
  {
    "text": "to perform operations on it but all of the details of what that thing actually is may be hidden by the runtime you'll",
    "start": "886800",
    "end": "893360"
  },
  {
    "text": "see why this is important for a moment we do spoiler alert we do transparent tls in nrx so when you create sockets",
    "start": "893360",
    "end": "900639"
  },
  {
    "text": "you're automatically getting a tls socket it's not tcp we don't allow the use of tcp at all",
    "start": "900639",
    "end": "907279"
  },
  {
    "text": "so this does provide some challenges for example for tls it also provides challenges if we're",
    "start": "907279",
    "end": "913440"
  },
  {
    "text": "just going to wrap the uh the bare berkeley sockets api and",
    "start": "913440",
    "end": "918639"
  },
  {
    "text": "expose all the underlying protocols it also means that we are going to have difficulties with multi-layer policy for",
    "start": "918639",
    "end": "924560"
  },
  {
    "text": "example if let's say in a world where you're not you're not doing transparent tls like anarchs is",
    "start": "924560",
    "end": "930000"
  },
  {
    "text": "and you want to do tcp operations but you also want to do tls operations well",
    "start": "930000",
    "end": "935279"
  },
  {
    "text": "how do you control the policy over which is allowed to which hosts it becomes a fairly complex problem to",
    "start": "935279",
    "end": "941759"
  },
  {
    "text": "figure out what the actual interactions are in between those things and the reason for that is because tls is a",
    "start": "941759",
    "end": "947759"
  },
  {
    "text": "species of tcp so now you have to on every packet you have to analyze okay if tls isn't",
    "start": "947759",
    "end": "954000"
  },
  {
    "text": "allowed is this packet that i'm receiving on tcp actually it's a tls packet and if it is then i have to",
    "start": "954000",
    "end": "960560"
  },
  {
    "text": "evaluate on my policy so now we're sort of forcing everyone into into deep packet inspection which is probably not",
    "start": "960560",
    "end": "965839"
  },
  {
    "text": "a place where we want to be so we really need some good thinking about this and really this is just an invitation to participate i know there's",
    "start": "965839",
    "end": "972639"
  },
  {
    "text": "a lot of people in this room that really care about wazzy care about networking so this is a really good opportunity to",
    "start": "972639",
    "end": "978320"
  },
  {
    "text": "contribute to this discussion and help us create a design that looks really good by the way all my credit goes to",
    "start": "978320",
    "end": "984160"
  },
  {
    "text": "the the author of the proposal it's a very thorough proposal um so i'm not knocking him at all and uh it's really",
    "start": "984160",
    "end": "990000"
  },
  {
    "text": "just a matter of what can we come up with is that that's the best and fits the needs of the community the best",
    "start": "990000",
    "end": "995680"
  },
  {
    "start": "995000",
    "end": "1091000"
  },
  {
    "text": "so we actually have a demo today and i want to be able to demo essentially what you can create in a uh in a sock except",
    "start": "995680",
    "end": "1003519"
  },
  {
    "text": "enabled world so everything you're going to see today is running today on the most recent release of anarchs which was",
    "start": "1003519",
    "end": "1009120"
  },
  {
    "text": "last last week 0.5 and we're going to show an application",
    "start": "1009120",
    "end": "1014800"
  },
  {
    "text": "called crypto and kryptol is a clone of everyone's favorite game world",
    "start": "1014800",
    "end": "1020480"
  },
  {
    "text": "except it is done in an encrypted environment and first we're going to show it running in anarch just so you can get a feel of",
    "start": "1020480",
    "end": "1026160"
  },
  {
    "text": "what the application does then we're going to attack crypto on wasm time and i'm not singling out as",
    "start": "1026160",
    "end": "1031520"
  },
  {
    "text": "i'm time here as the bad guy okay wasm time is fantastic we use wasm time internally okay what i am trying to show",
    "start": "1031520",
    "end": "1037839"
  },
  {
    "text": "by using wasm time here is that we're going to take the same exact webassembly binary that we ran in wasm time and",
    "start": "1037839",
    "end": "1044000"
  },
  {
    "text": "we're going to deploy that binary using anarchs and we're going to get a bunch of other protections for free",
    "start": "1044000",
    "end": "1049760"
  },
  {
    "text": "and so uh so we're going gonna we're gonna show an attack uh on crypto using wasm time we're gonna do an attack",
    "start": "1049760",
    "end": "1055679"
  },
  {
    "text": "retrospective we're gonna analyze why the attack uh worked and what we could do to stop it and then we're gonna try",
    "start": "1055679",
    "end": "1060799"
  },
  {
    "text": "the same attack on on anarchs i need to pause here for a moment because a huge thank you needs to go out to harold",
    "start": "1060799",
    "end": "1066880"
  },
  {
    "text": "hoyer richard zach roman who's here wave roman and uh nick vidal who's also here wave",
    "start": "1066880",
    "end": "1073280"
  },
  {
    "text": "nick wherever you are um you guys put in a tremendous amount of work on this demo and i'm just really",
    "start": "1073280",
    "end": "1079039"
  },
  {
    "text": "pleased to work with you all so um thank you very much by the way harold was supposed to be",
    "start": "1079039",
    "end": "1084320"
  },
  {
    "text": "giving this talk today but his wife is expecting so if you know harold send him a congratulations",
    "start": "1084320",
    "end": "1091840"
  },
  {
    "start": "1091000",
    "end": "1223000"
  },
  {
    "text": "all right hopefully this video is going to come here come up here go go gadget internet",
    "start": "1093360",
    "end": "1100400"
  },
  {
    "text": "this is when you record the video so you don't have problems and then of course you have problems with the video",
    "start": "1102160",
    "end": "1107280"
  },
  {
    "text": "oh there we go okay so we have this game crypto and crypto is basically a multiplayer wordle demo",
    "start": "1107280",
    "end": "1114720"
  },
  {
    "text": "and uh you can guess some words on the left and one of the things that's different about crypto compared to the",
    "start": "1114720",
    "end": "1120080"
  },
  {
    "text": "normal world game is that in the normal world game the word that is actually guessed the word list is is all actually",
    "start": "1120080",
    "end": "1126080"
  },
  {
    "text": "in the client it's not on the server so anyone who is good at inspecting uh in",
    "start": "1126080",
    "end": "1131120"
  },
  {
    "text": "the browser console they can figure out what the word is but we wanted to do something that's that's more secure we",
    "start": "1131120",
    "end": "1136559"
  },
  {
    "text": "want the word to actually be chosen on the server side and then more than that we wanted to",
    "start": "1136559",
    "end": "1141600"
  },
  {
    "text": "allow multiple players to guess and we wanted them to see when they actually guess other players words so this is not",
    "start": "1141600",
    "end": "1148480"
  },
  {
    "text": "a this is not a super competitive game it's just a game for a little bit of fun",
    "start": "1148480",
    "end": "1153520"
  },
  {
    "text": "and so we have three players here and uh they're all basically playing uh the crypto game",
    "start": "1153520",
    "end": "1159120"
  },
  {
    "text": "and you can see uh oh we got words we got three letters there and now we're going to guess world and",
    "start": "1159120",
    "end": "1164720"
  },
  {
    "text": "see we we actually guessed one of the other players words and so it showed up in a special color",
    "start": "1164720",
    "end": "1171039"
  },
  {
    "text": "and finally we're going to play on the on the third player here and we're going to be doing the same",
    "start": "1171039",
    "end": "1176640"
  },
  {
    "text": "thing just guessing letters while this is playing i'm going to make a brief pr announcement we did release",
    "start": "1176640",
    "end": "1183120"
  },
  {
    "text": "last week 0.5 we now have support for running anarchs in the unencrypted mode on both mac os",
    "start": "1183120",
    "end": "1190000"
  },
  {
    "text": "and your favorite raspberry pi uh this is uh in preparation by the way for uh arm realms which has been publicly",
    "start": "1190000",
    "end": "1196240"
  },
  {
    "text": "announced so um stay tuned for news in that regard",
    "start": "1196240",
    "end": "1201520"
  },
  {
    "text": "so basically we've we've seen our application here and we we've guessed another word",
    "start": "1201520",
    "end": "1207760"
  },
  {
    "text": "here and that's more or less we can see who the winners were based on this",
    "start": "1207760",
    "end": "1213200"
  },
  {
    "text": "so now what we want to do is we actually want to this was actually shown by the way this is running in anarchs",
    "start": "1213200",
    "end": "1218480"
  },
  {
    "text": "on the latest release and we're going to we're going to skip ahead",
    "start": "1218480",
    "end": "1223360"
  },
  {
    "start": "1223000",
    "end": "1316000"
  },
  {
    "text": "and we're going to do this we're going to show the application running on about some time so",
    "start": "1224960",
    "end": "1231200"
  },
  {
    "text": "the text is probably a little small hopefully you can see it we're going to do a cargo build of this",
    "start": "1232000",
    "end": "1237120"
  },
  {
    "text": "rust crate and the rust cadence crate is just the cryptal crate you can actually see this uh there'll be a url for the",
    "start": "1237120",
    "end": "1242960"
  },
  {
    "text": "for the demo later if you'd like to see it um and so we we have run it in wasm time",
    "start": "1242960",
    "end": "1248960"
  },
  {
    "text": "it's now listening on a socket but what we want to do is we are an attacker who has managed to gain root access on the",
    "start": "1248960",
    "end": "1254880"
  },
  {
    "text": "server and we're trying desperately to get this most prized wordle word",
    "start": "1254880",
    "end": "1259919"
  },
  {
    "text": "and so what we want to do is we want to scan the memory of the application for any of the words that are in the",
    "start": "1259919",
    "end": "1265520"
  },
  {
    "text": "dictionary because we want to find out what the word is basically bypassing the guesses the guessing rule here here by",
    "start": "1265520",
    "end": "1271360"
  },
  {
    "text": "the way you should understand that the guessing rules in wordle are really just the access controls of your application",
    "start": "1271360",
    "end": "1276880"
  },
  {
    "text": "and we want to by accessing this host you're going to see here in red we've found words that are in the word list",
    "start": "1276880",
    "end": "1283520"
  },
  {
    "text": "and so as we scan this memory for the application we pick up i think there's there's three",
    "start": "1283520",
    "end": "1289760"
  },
  {
    "text": "words uh in this particular instance yeah there's youth and there's one more",
    "start": "1289760",
    "end": "1296720"
  },
  {
    "text": "and so although wasm time has performed spectacularly we are performing an attack that is out",
    "start": "1296720",
    "end": "1303520"
  },
  {
    "text": "of scope for this for the security model of wasm time um so again but sometimes not to blame",
    "start": "1303520",
    "end": "1309520"
  },
  {
    "text": "and if we were running this in anarchs in debug mode you'd see exactly the same thing you'd be able to access the memory",
    "start": "1309520",
    "end": "1316000"
  },
  {
    "start": "1316000",
    "end": "1413000"
  },
  {
    "text": "and bypass it so the question is why did this attack succeed and the fundamental problem is that uh",
    "start": "1316000",
    "end": "1322559"
  },
  {
    "text": "we have three different uh forms of workload isolation type one is protecting one workload from",
    "start": "1322559",
    "end": "1328320"
  },
  {
    "text": "another type two is protecting uh a the host from a malicious workload",
    "start": "1328320",
    "end": "1334559"
  },
  {
    "text": "and both of those we actually can do pretty well today right there's lots of companies doing this at scale so this is not a problem uh the problem is we don't",
    "start": "1334559",
    "end": "1341919"
  },
  {
    "text": "have really any protection until confidential computing for the third type of isolation which is protecting a",
    "start": "1341919",
    "end": "1347200"
  },
  {
    "text": "particular workload from the host because currently the host has access to read all the memory of the application",
    "start": "1347200",
    "end": "1353120"
  },
  {
    "text": "and can tamper with that application while it's running and so forth and this is fine right",
    "start": "1353120",
    "end": "1359600"
  },
  {
    "text": "basically as long as you trust your csp and all of their sysadmins and all of the hardware software and",
    "start": "1359600",
    "end": "1365840"
  },
  {
    "text": "firmware stack so fortunately it's not millions of lines of code or oh wait yeah it is and then uh from either",
    "start": "1365840",
    "end": "1373120"
  },
  {
    "text": "compromise because they may not be doing it directly they may just have not been able to secure something or for a supply",
    "start": "1373120",
    "end": "1379120"
  },
  {
    "text": "chain of attack on the on the um actual operating system uh both now and in the future",
    "start": "1379120",
    "end": "1386000"
  },
  {
    "text": "right uh so and that's of course if you agree with also your cfo and your board",
    "start": "1386000",
    "end": "1392000"
  },
  {
    "text": "and your auditor and your regulator so all of these are this is a pretty high list of criteria",
    "start": "1392000",
    "end": "1398000"
  },
  {
    "text": "in order to be able to trust it and this is something we just sort of accept in the industry today and we accept it",
    "start": "1398000",
    "end": "1403200"
  },
  {
    "text": "because we aren't aware that there's another way to operate and that's because the hardware simply hasn't been available",
    "start": "1403200",
    "end": "1408960"
  },
  {
    "text": "but uh not all not all clouds are good so the question is what makes anarchs",
    "start": "1408960",
    "end": "1415440"
  },
  {
    "start": "1413000",
    "end": "1475000"
  },
  {
    "text": "different and how anarchs is different is that we use confidential computing confidential computing is a new set of hardware",
    "start": "1415440",
    "end": "1421679"
  },
  {
    "text": "technologies that have come out from all of our favorite cpu manufacturers for example intel amd",
    "start": "1421679",
    "end": "1428480"
  },
  {
    "text": "and arm has also announced arm9 realms and basically this allows you to create",
    "start": "1428480",
    "end": "1434720"
  },
  {
    "text": "an application or a virtual machine within which the memory pages are actually encrypted and so",
    "start": "1434720",
    "end": "1441360"
  },
  {
    "text": "while the actual application is running even if the host can scan memory of a normal application if you've set up this",
    "start": "1441360",
    "end": "1448320"
  },
  {
    "text": "normal or this special confidential application correctly then you won't you won't be able to uh to tamper with it so",
    "start": "1448320",
    "end": "1454640"
  },
  {
    "text": "we use trusted computing environments which is based on cpu hardware we encrypt the workloads and we provide two",
    "start": "1454640",
    "end": "1459760"
  },
  {
    "text": "things that are really important and and the anarchs project will not uh implement on a tee platform if it",
    "start": "1459760",
    "end": "1466799"
  },
  {
    "text": "does not provide these two properties we want integrity and we want confidentiality in other words no",
    "start": "1466799",
    "end": "1472720"
  },
  {
    "text": "peeking no sneaking so uh our peeking and tweaking that's",
    "start": "1472720",
    "end": "1478240"
  },
  {
    "start": "1475000",
    "end": "1628000"
  },
  {
    "text": "the that's the phrase peaking and tweaking so um basically what you want to do is you want to have start off with your workload here and you want to put",
    "start": "1478240",
    "end": "1484799"
  },
  {
    "text": "the workload in the host somehow but the problem is how do you actually know that the workload that you are attempting to",
    "start": "1484799",
    "end": "1490240"
  },
  {
    "text": "deploy to that to that host is in fact the workload that gets deployed and we should be",
    "start": "1490240",
    "end": "1496159"
  },
  {
    "text": "thinking of this as a certain kind of supply chain attack we tend to think of supply chain attacks as everything north",
    "start": "1496159",
    "end": "1502720"
  },
  {
    "text": "of me i grew up in upstate new york and if you ask anyone where is upstate new york any new yorker will reply to you",
    "start": "1502720",
    "end": "1509360"
  },
  {
    "text": "well it's what's north of me right so if you live in new york city upstate new york if there's anything north of new",
    "start": "1509360",
    "end": "1514400"
  },
  {
    "text": "york city if you live in albany well then upstate new york is anything north of albany uh well the same the same",
    "start": "1514400",
    "end": "1521039"
  },
  {
    "text": "thing applies here downstream from you is also a supply",
    "start": "1521039",
    "end": "1526240"
  },
  {
    "text": "chain attack and so what we want to do is we want to create this tee and we want to create a measurement of",
    "start": "1526240",
    "end": "1531760"
  },
  {
    "text": "the application or in this case the anarchs run time and then we want to offload that measurement signed by the",
    "start": "1531760",
    "end": "1538159"
  },
  {
    "text": "hardware to an attestation service and the iss davis association service must not be in your cloud because your cloud",
    "start": "1538159",
    "end": "1544799"
  },
  {
    "text": "provider can't prove to you that they set up you the environment correctly you need an independent source of trust",
    "start": "1544799",
    "end": "1551679"
  },
  {
    "text": "so we offload the measurements to an attestation service and the attestation service proves to you cryptographically",
    "start": "1551679",
    "end": "1558240"
  },
  {
    "text": "that the environment that was set up is uh has those two properties confidentiality and integrity",
    "start": "1558240",
    "end": "1564480"
  },
  {
    "text": "but what we actually want to do is something more than that because we actually want to create an empty keep",
    "start": "1564480",
    "end": "1570000"
  },
  {
    "text": "there's several systems out there today that try to do something like this but they deploy the application immediately into",
    "start": "1570000",
    "end": "1576240"
  },
  {
    "text": "an untrusted system and what if the algorithms of that application right what if it's a risk model and you're an",
    "start": "1576240",
    "end": "1581760"
  },
  {
    "text": "insurer or what if it's an ai model or what if it's any of these types of uh code that need to be protected uh of",
    "start": "1581760",
    "end": "1588720"
  },
  {
    "text": "which there's quite a few today and so what we want to do is we want to bring up an empty keep that we call this",
    "start": "1588720",
    "end": "1594240"
  },
  {
    "text": "an undifferentiated keep it contains only the anarchs run runtime and that's what we measure and then",
    "start": "1594240",
    "end": "1599919"
  },
  {
    "text": "the attestation service validates this for us and provides a certificate identifying",
    "start": "1599919",
    "end": "1605360"
  },
  {
    "text": "the workload that gets deployed in that keep the once it once the keep has the certificate it can then fetch an",
    "start": "1605360",
    "end": "1612240"
  },
  {
    "text": "application from drawbridge you can think of drawbridge as something like an attestation aware docker hub",
    "start": "1612240",
    "end": "1617919"
  },
  {
    "text": "where it contains the software all the software that you're going to be deploying and it will only release that",
    "start": "1617919",
    "end": "1623120"
  },
  {
    "text": "software if you perform a successful attestation to the steward",
    "start": "1623120",
    "end": "1628960"
  },
  {
    "start": "1628000",
    "end": "1671000"
  },
  {
    "text": "and so we can show this same exact demo uh on anarchs now one of the things that's not immediately obvious here is",
    "start": "1629919",
    "end": "1636720"
  },
  {
    "text": "that when we ran on wasm time our sockets were unencrypted well what's going to happen when we run this time on",
    "start": "1636720",
    "end": "1642320"
  },
  {
    "text": "anarchs we're going to do the exactly the same thing deploy exactly the same binary but we're going to do the attestation we're going to get a",
    "start": "1642320",
    "end": "1647919"
  },
  {
    "text": "certificate that identifies the workload and then we can do transparent tls on everything that's involved coming soon",
    "start": "1647919",
    "end": "1653919"
  },
  {
    "text": "will be transparent encrypted file system as well so anything that you persist to the disk is always encrypted",
    "start": "1653919",
    "end": "1659200"
  },
  {
    "text": "the point is once data or code enters the system it never leaves unencrypted",
    "start": "1659200",
    "end": "1664399"
  },
  {
    "text": "unless you do something seriously seriously wrong we can't make it impossible to do the right thing but we can make it hard",
    "start": "1664399",
    "end": "1672480"
  },
  {
    "start": "1671000",
    "end": "1801000"
  },
  {
    "text": "so this is an example of this is the wasm time we're going to kill that",
    "start": "1672480",
    "end": "1678399"
  },
  {
    "text": "that was previously running and we're just going to do the same thing we're going to start it using anarchs instead of wasm time and we have",
    "start": "1678399",
    "end": "1685760"
  },
  {
    "text": "this configuration file that identifies the environment and which steward to contact for the certificate",
    "start": "1685760",
    "end": "1692000"
  },
  {
    "text": "this this file is going to come from the drawbridge uh in the future but what",
    "start": "1692000",
    "end": "1697120"
  },
  {
    "text": "we're going to do right now is we're going to do an upload to drawbridge of the files we're going to upload the wasm file and we're going to upload the",
    "start": "1697120",
    "end": "1703120"
  },
  {
    "text": "anarch.tamel and once those are both in the drawbridge they are now ready to be",
    "start": "1703120",
    "end": "1708240"
  },
  {
    "text": "deployed so the upload is completed and now we're just going to do an anarch deploy giving",
    "start": "1708240",
    "end": "1714080"
  },
  {
    "text": "the url of the particular application normally we have a shorter slug here",
    "start": "1714080",
    "end": "1719679"
  },
  {
    "text": "that's that's more similar to the docker style but we're specifying a full url here because the drawbridge is",
    "start": "1719679",
    "end": "1725520"
  },
  {
    "text": "running locally and unencrypted uh the support for unencrypted drawbridge will",
    "start": "1725520",
    "end": "1731679"
  },
  {
    "text": "go away it's just currently there to support this latest release",
    "start": "1731679",
    "end": "1737960"
  },
  {
    "text": "so it's taking a moment here to actually start it's a little bit longer to bring up because we have to bring up the hardware environment we have to do a",
    "start": "1738640",
    "end": "1744000"
  },
  {
    "text": "bunch of cryptography we have to contact the steward and do our attestation receive our certificate set up all of",
    "start": "1744000",
    "end": "1749360"
  },
  {
    "text": "our sockets but once that's done there we go now we're now we've switched to the scanning page",
    "start": "1749360",
    "end": "1755039"
  },
  {
    "text": "the application is running we are going to do the same scanning attack that we saw before",
    "start": "1755039",
    "end": "1760399"
  },
  {
    "text": "this time we're going to scan for anarchs instead of wasm time",
    "start": "1760399",
    "end": "1765880"
  },
  {
    "text": "and we're going to do the same the same mem dump we had just with the different pid this time it's the pid for anarchs",
    "start": "1768159",
    "end": "1775120"
  },
  {
    "text": "and you notice that we've not found any words and the reason for this is because all of the memory is encrypted",
    "start": "1776960",
    "end": "1782960"
  },
  {
    "text": "on different hardware platforms uh that this was on intel sgx we can also do this on amd sev s p which",
    "start": "1782960",
    "end": "1789840"
  },
  {
    "text": "is the latest milan generation and if you do this on snp you'll actually get a denial because the",
    "start": "1789840",
    "end": "1795679"
  },
  {
    "text": "hardware actually denies access to the memory that's inside of the encrypted vm",
    "start": "1795679",
    "end": "1801520"
  },
  {
    "start": "1801000",
    "end": "1826000"
  },
  {
    "text": "so if you'd like to find more about the anarchs project as i said we just released our",
    "start": "1801600",
    "end": "1806840"
  },
  {
    "text": "0.5 last week we have releases coming every four weeks now and uh it's a train",
    "start": "1806840",
    "end": "1813120"
  },
  {
    "text": "so if you want to contribute please come hop on the train with us uh you can go to the website anarchs.dev we have a",
    "start": "1813120",
    "end": "1818720"
  },
  {
    "text": "blog we have github we have chat as well um we're a friendly bunch of people so come along and help us build a better",
    "start": "1818720",
    "end": "1825039"
  },
  {
    "text": "future oh by the way profine's hiring so if you're like a crockpot you know ninja",
    "start": "1825039",
    "end": "1831919"
  },
  {
    "start": "1826000",
    "end": "1846000"
  },
  {
    "text": "wizard at doing all sorts of like op stuff and you like performance and low-level hardware stuff or cryptography",
    "start": "1831919",
    "end": "1839679"
  },
  {
    "text": "if any of that intersection interests you we're doing really really cool work and we have a great team of people so",
    "start": "1839679",
    "end": "1845200"
  },
  {
    "text": "come check us out oh yeah there is there is one more thing today we're announcing the crypto hack",
    "start": "1845200",
    "end": "1851760"
  },
  {
    "start": "1846000",
    "end": "1908000"
  },
  {
    "text": "challenge and basically we want to see what your elite skills are we want to know if you",
    "start": "1851760",
    "end": "1858000"
  },
  {
    "text": "can actually hack the anarch's runtime now i do have to give a little bit of caveat here is that although anarchs is",
    "start": "1858000",
    "end": "1863440"
  },
  {
    "text": "very close to production we're nearing production capability this is still a pre-production release but but we want",
    "start": "1863440",
    "end": "1869760"
  },
  {
    "text": "you to help us find the issues uh before real attackers do so we want to see if you can prove it uh there's gonna be a",
    "start": "1869760",
    "end": "1876480"
  },
  {
    "text": "cake and by cake we we mean prizes this will include some hardware and we'll include some cash and we are going to",
    "start": "1876480",
    "end": "1883440"
  },
  {
    "text": "basically if you have an attack you submit the attack to us we will run the attack on the server and we're going to",
    "start": "1883440",
    "end": "1889679"
  },
  {
    "text": "livestream the whole thing so we'll see if your attack succeeds or fails and if if it succeeds you win a prize and uh",
    "start": "1889679",
    "end": "1896399"
  },
  {
    "text": "all of the winners will be announced at black hat we're going to be doing this in two phases so the first phase will be",
    "start": "1896399",
    "end": "1901679"
  },
  {
    "text": "announced at black hat so come along and uh and show us your show us your stuff",
    "start": "1901679",
    "end": "1908398"
  },
  {
    "text": "questions yes",
    "start": "1908559",
    "end": "1914440"
  },
  {
    "text": "that is correct so please open your phones go to github star the project and",
    "start": "1920480",
    "end": "1925760"
  },
  {
    "text": "win a free t-shirt yep anarchs slash anarchs any other questions",
    "start": "1925760",
    "end": "1933720"
  },
  {
    "text": "thank you very much oh you have a question um they have not been put up on youtube",
    "start": "1938799",
    "end": "1945039"
  },
  {
    "text": "but we can put them on youtube",
    "start": "1945039",
    "end": "1948840"
  },
  {
    "text": "yes repeat your question for the streaming okay uh will the demo be available on youtube",
    "start": "1950080",
    "end": "1957760"
  },
  {
    "text": "yes we can we can put the demo on youtube okay nick can you take a note to make sure",
    "start": "1957760",
    "end": "1962799"
  },
  {
    "text": "it's on youtube nick's going to take care of it",
    "start": "1962799",
    "end": "1966240"
  },
  {
    "text": "thank you very much everybody",
    "start": "1970000",
    "end": "1973640"
  },
  {
    "text": "you",
    "start": "1977120",
    "end": "1979200"
  }
]