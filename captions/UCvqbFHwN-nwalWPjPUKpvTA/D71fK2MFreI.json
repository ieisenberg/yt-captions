[
  {
    "text": "so hello we're excited to be giving this",
    "start": "799",
    "end": "3040"
  },
  {
    "text": "talk thanks for coming um this is how",
    "start": "3040",
    "end": "5879"
  },
  {
    "text": "and why you should adopt and expose open",
    "start": "5879",
    "end": "7640"
  },
  {
    "text": "source",
    "start": "7640",
    "end": "8480"
  },
  {
    "text": "interfaces and the slides uh should be",
    "start": "8480",
    "end": "11200"
  },
  {
    "text": "available on the site if you want to",
    "start": "11200",
    "end": "12360"
  },
  {
    "text": "follow along so today in half an hour we",
    "start": "12360",
    "end": "15639"
  },
  {
    "text": "will go over our journey adopting otel",
    "start": "15639",
    "end": "18439"
  },
  {
    "text": "and Prometheus um how we did it and what",
    "start": "18439",
    "end": "21240"
  },
  {
    "text": "we learned from it so our hope is if",
    "start": "21240",
    "end": "23359"
  },
  {
    "text": "you're someone with a system that you're",
    "start": "23359",
    "end": "24720"
  },
  {
    "text": "looking to make Prometheus compatible",
    "start": "24720",
    "end": "26439"
  },
  {
    "text": "maybe this will give you some ideas",
    "start": "26439",
    "end": "28119"
  },
  {
    "text": "about what you can do",
    "start": "28119",
    "end": "30759"
  },
  {
    "text": "so first we'll introduce ourselves we're",
    "start": "30759",
    "end": "32758"
  },
  {
    "text": "both from Google Cloud monitoring in New",
    "start": "32759",
    "end": "34399"
  },
  {
    "text": "York um I'm shishi I've been a software",
    "start": "34399",
    "end": "37040"
  },
  {
    "text": "engineer at Google for about 10 years",
    "start": "37040",
    "end": "39239"
  },
  {
    "text": "and I really enjoy distributed systems",
    "start": "39239",
    "end": "42039"
  },
  {
    "text": "and weird query behaviors and this is",
    "start": "42039",
    "end": "44960"
  },
  {
    "text": "Daniel hello everyone my name is Daniel",
    "start": "44960",
    "end": "47559"
  },
  {
    "text": "I've been at Google for almost two years",
    "start": "47559",
    "end": "49920"
  },
  {
    "text": "a little fun fact about me I've been",
    "start": "49920",
    "end": "51320"
  },
  {
    "text": "coding for over half my life it's",
    "start": "51320",
    "end": "52879"
  },
  {
    "text": "something I'm very passionate about um I",
    "start": "52879",
    "end": "55640"
  },
  {
    "text": "love solving hard problems and I'm",
    "start": "55640",
    "end": "57440"
  },
  {
    "text": "excited to show you how we solve this",
    "start": "57440",
    "end": "58960"
  },
  {
    "text": "one",
    "start": "58960",
    "end": "61719"
  },
  {
    "text": "of course there are many others who are",
    "start": "61719",
    "end": "63239"
  },
  {
    "text": "part of this project and we just wanted",
    "start": "63239",
    "end": "65040"
  },
  {
    "text": "to mention a few of",
    "start": "65040",
    "end": "67280"
  },
  {
    "text": "them I mean we all know who did the real",
    "start": "67280",
    "end": "72240"
  },
  {
    "text": "work so we'll start by sharing a little",
    "start": "72560",
    "end": "74840"
  },
  {
    "text": "story Daniel do you remember what life",
    "start": "74840",
    "end": "77360"
  },
  {
    "text": "was like back in",
    "start": "77360",
    "end": "79640"
  },
  {
    "text": "2020 o yeah uh Google Cloud monitoring",
    "start": "79640",
    "end": "83000"
  },
  {
    "text": "was not very fun uh not to say it was",
    "start": "83000",
    "end": "85920"
  },
  {
    "text": "primitive but it was very limiting uh",
    "start": "85920",
    "end": "88200"
  },
  {
    "text": "and let me show you exactly what I mean",
    "start": "88200",
    "end": "89479"
  },
  {
    "text": "by that",
    "start": "89479",
    "end": "91079"
  },
  {
    "text": "so let's start with the ingestion side",
    "start": "91079",
    "end": "93000"
  },
  {
    "text": "and this is the side that exports your",
    "start": "93000",
    "end": "95200"
  },
  {
    "text": "metrics and sends them to Google plan",
    "start": "95200",
    "end": "97399"
  },
  {
    "text": "monitoring um on the ingestion side we",
    "start": "97399",
    "end": "100040"
  },
  {
    "text": "have uh custom push based API this means",
    "start": "100040",
    "end": "103680"
  },
  {
    "text": "if you want to um send metrics to Google",
    "start": "103680",
    "end": "106759"
  },
  {
    "text": "Cloud monitoring um you have to import",
    "start": "106759",
    "end": "110040"
  },
  {
    "text": "our our uh client SDK um and this is a",
    "start": "110040",
    "end": "114520"
  },
  {
    "text": "lot of work you have to do this all",
    "start": "114520",
    "end": "116039"
  },
  {
    "text": "programmatically um so it's a very high",
    "start": "116039",
    "end": "119200"
  },
  {
    "text": "barrier to",
    "start": "119200",
    "end": "121479"
  },
  {
    "text": "uh on the underlying storage side um we",
    "start": "121479",
    "end": "126000"
  },
  {
    "text": "use Monarch which is Google's Planet",
    "start": "126000",
    "end": "128280"
  },
  {
    "text": "scale time series if you're unfamiliar",
    "start": "128280",
    "end": "130239"
  },
  {
    "text": "with Monarch there is a paper available",
    "start": "130239",
    "end": "133040"
  },
  {
    "text": "um and the reason I bring this up is",
    "start": "133040",
    "end": "134720"
  },
  {
    "text": "because this has implications uh on the",
    "start": "134720",
    "end": "138080"
  },
  {
    "text": "API layer so for example um Monarch is",
    "start": "138080",
    "end": "141400"
  },
  {
    "text": "schema full and this means that you have",
    "start": "141400",
    "end": "143599"
  },
  {
    "text": "to describe what your what Your metrics",
    "start": "143599",
    "end": "145760"
  },
  {
    "text": "look like before you can send them to um",
    "start": "145760",
    "end": "148280"
  },
  {
    "text": "Google Cloud monitoring um and we we",
    "start": "148280",
    "end": "151360"
  },
  {
    "text": "will talk more about these pain points",
    "start": "151360",
    "end": "153080"
  },
  {
    "text": "later because they do become relevant",
    "start": "153080",
    "end": "154720"
  },
  {
    "text": "later on um but for now let me talk",
    "start": "154720",
    "end": "157959"
  },
  {
    "text": "about uh the query side uh and as you",
    "start": "157959",
    "end": "161920"
  },
  {
    "text": "can see um you have to learn mql or you",
    "start": "161920",
    "end": "164560"
  },
  {
    "text": "have to use the UI for this so again",
    "start": "164560",
    "end": "166440"
  },
  {
    "text": "this is another uh investment that users",
    "start": "166440",
    "end": "169120"
  },
  {
    "text": "have to make um and it just makes the",
    "start": "169120",
    "end": "172040"
  },
  {
    "text": "barrier to entry a lot higher um as far",
    "start": "172040",
    "end": "175000"
  },
  {
    "text": "as Vis visualization goes if you want to",
    "start": "175000",
    "end": "177319"
  },
  {
    "text": "actually see your data uh you have to",
    "start": "177319",
    "end": "179800"
  },
  {
    "text": "build the dashboard yourself um and",
    "start": "179800",
    "end": "183239"
  },
  {
    "text": "so a lot of people are duplicating the",
    "start": "183239",
    "end": "186200"
  },
  {
    "text": "same work like there's uh like a lot of",
    "start": "186200",
    "end": "188519"
  },
  {
    "text": "people use the same common tools and now",
    "start": "188519",
    "end": "191239"
  },
  {
    "text": "uh if you want to see a dashboard for",
    "start": "191239",
    "end": "192720"
  },
  {
    "text": "this um everyone has to build the same",
    "start": "192720",
    "end": "195879"
  },
  {
    "text": "dashboard for the for the same tool so",
    "start": "195879",
    "end": "198239"
  },
  {
    "text": "this was not very uh user friendly at",
    "start": "198239",
    "end": "200799"
  },
  {
    "text": "all so let's stop and think about how",
    "start": "200799",
    "end": "203959"
  },
  {
    "text": "this happened right um so reminder this",
    "start": "203959",
    "end": "207200"
  },
  {
    "text": "was 2020 um at the time standardization",
    "start": "207200",
    "end": "210480"
  },
  {
    "text": "was still happening um when we started",
    "start": "210480",
    "end": "213120"
  },
  {
    "text": "uh Google Cloud monitoring uh there was",
    "start": "213120",
    "end": "215560"
  },
  {
    "text": "no standardization at all so what we did",
    "start": "215560",
    "end": "219040"
  },
  {
    "text": "is not unique other Cloud providers did",
    "start": "219040",
    "end": "221040"
  },
  {
    "text": "the same thing they provided their own",
    "start": "221040",
    "end": "222680"
  },
  {
    "text": "um apis and uh integration was",
    "start": "222680",
    "end": "226400"
  },
  {
    "text": "difficult um ultimately um users do not",
    "start": "226400",
    "end": "230120"
  },
  {
    "text": "want to be siloed so we thought about uh",
    "start": "230120",
    "end": "233959"
  },
  {
    "text": "what was the industry doing at the time",
    "start": "233959",
    "end": "236280"
  },
  {
    "text": "um and the industry was um heading",
    "start": "236280",
    "end": "238959"
  },
  {
    "text": "towards two two tools uh the first tool",
    "start": "238959",
    "end": "241920"
  },
  {
    "text": "is Prometheus and the second tool is",
    "start": "241920",
    "end": "243439"
  },
  {
    "text": "open Telemetry so let me briefly mention",
    "start": "243439",
    "end": "246760"
  },
  {
    "text": "what Prometheus is for those of you who",
    "start": "246760",
    "end": "248319"
  },
  {
    "text": "don't know um Prometheus is a Time",
    "start": "248319",
    "end": "250680"
  },
  {
    "text": "series database um it is capable of",
    "start": "250680",
    "end": "254400"
  },
  {
    "text": "scraping your applications and it also",
    "start": "254400",
    "end": "256280"
  },
  {
    "text": "has some alerting facilities um ever",
    "start": "256280",
    "end": "258880"
  },
  {
    "text": "since Prometheus joined the cncf in 2016",
    "start": "258880",
    "end": "261440"
  },
  {
    "text": "it's been growing exponentially as you",
    "start": "261440",
    "end": "263440"
  },
  {
    "text": "can",
    "start": "263440",
    "end": "264759"
  },
  {
    "text": "see there are hundreds of exporters so",
    "start": "264759",
    "end": "267800"
  },
  {
    "text": "if you want to uh use Prometheus with",
    "start": "267800",
    "end": "270400"
  },
  {
    "text": "your application if you're using a",
    "start": "270400",
    "end": "271880"
  },
  {
    "text": "common tool all you need to do is uh use",
    "start": "271880",
    "end": "274919"
  },
  {
    "text": "one of these exporters so an exporter is",
    "start": "274919",
    "end": "277840"
  },
  {
    "text": "probably available for all the tools you",
    "start": "277840",
    "end": "279320"
  },
  {
    "text": "use so a lot of people already had",
    "start": "279320",
    "end": "281240"
  },
  {
    "text": "access to",
    "start": "281240",
    "end": "282680"
  },
  {
    "text": "Prometheus um and there are just so many",
    "start": "282680",
    "end": "285880"
  },
  {
    "text": "resources available for Prometheus um so",
    "start": "285880",
    "end": "289880"
  },
  {
    "text": "it became the de facto solution um",
    "start": "289880",
    "end": "292360"
  },
  {
    "text": "became very popular if you're changing",
    "start": "292360",
    "end": "293960"
  },
  {
    "text": "your jobs no problem take all your",
    "start": "293960",
    "end": "295960"
  },
  {
    "text": "knowledge with you there's absolutely no",
    "start": "295960",
    "end": "298039"
  },
  {
    "text": "vendor lock",
    "start": "298039",
    "end": "300840"
  },
  {
    "text": "and just briefly um about how uh",
    "start": "300840",
    "end": "303600"
  },
  {
    "text": "Prometheus differs compared to our",
    "start": "303600",
    "end": "305520"
  },
  {
    "text": "push-based model um in Google Cloud",
    "start": "305520",
    "end": "308000"
  },
  {
    "text": "monitoring uh Prometheus offers a",
    "start": "308000",
    "end": "310160"
  },
  {
    "text": "pool-based model and what this means is",
    "start": "310160",
    "end": "312680"
  },
  {
    "text": "that the Prometheus uh server actually",
    "start": "312680",
    "end": "316320"
  },
  {
    "text": "scrapes your application right you you",
    "start": "316320",
    "end": "318639"
  },
  {
    "text": "don't send data to the server the server",
    "start": "318639",
    "end": "320560"
  },
  {
    "text": "goes to you um and so essentially this",
    "start": "320560",
    "end": "323880"
  },
  {
    "text": "means all of your configurations are",
    "start": "323880",
    "end": "325800"
  },
  {
    "text": "centralized within",
    "start": "325800",
    "end": "327560"
  },
  {
    "text": "Prometheus um and it also means the Cent",
    "start": "327560",
    "end": "330039"
  },
  {
    "text": "sdks are radically simpler than they",
    "start": "330039",
    "end": "331840"
  },
  {
    "text": "used to",
    "start": "331840",
    "end": "333759"
  },
  {
    "text": "be and then on the query side um you if",
    "start": "333759",
    "end": "337240"
  },
  {
    "text": "you want to use Prometheus you do have",
    "start": "337240",
    "end": "338560"
  },
  {
    "text": "to learn promql so there is some sort of",
    "start": "338560",
    "end": "340479"
  },
  {
    "text": "investment here however if you're using",
    "start": "340479",
    "end": "343160"
  },
  {
    "text": "something like a custom exporter there's",
    "start": "343160",
    "end": "344800"
  },
  {
    "text": "also probably pre-built dashboards for",
    "start": "344800",
    "end": "347319"
  },
  {
    "text": "you um so you you may not have to learn",
    "start": "347319",
    "end": "351560"
  },
  {
    "text": "Prime Q you could just use these",
    "start": "351560",
    "end": "352720"
  },
  {
    "text": "prebuilt dashboards um there's many",
    "start": "352720",
    "end": "355120"
  },
  {
    "text": "different dashboarding solutions that",
    "start": "355120",
    "end": "356720"
  },
  {
    "text": "support Prime ql um so the bar barrier",
    "start": "356720",
    "end": "361080"
  },
  {
    "text": "to entry is very low here uh next shishi",
    "start": "361080",
    "end": "364680"
  },
  {
    "text": "can you introduce us to open",
    "start": "364680",
    "end": "367520"
  },
  {
    "text": "Telemetry sure um so open Telemetry is a",
    "start": "367520",
    "end": "371520"
  },
  {
    "text": "framework for Telemetry collection and",
    "start": "371520",
    "end": "373840"
  },
  {
    "text": "it had started in 2019 as a merger of",
    "start": "373840",
    "end": "375720"
  },
  {
    "text": "two prior projects open census which was",
    "start": "375720",
    "end": "378400"
  },
  {
    "text": "instrumentation for metrics and logs and",
    "start": "378400",
    "end": "380120"
  },
  {
    "text": "then open tracing which is for traces so",
    "start": "380120",
    "end": "382759"
  },
  {
    "text": "in 2020 otel was starting to gain",
    "start": "382759",
    "end": "385720"
  },
  {
    "text": "traction um compared to Prometheus otel",
    "start": "385720",
    "end": "388960"
  },
  {
    "text": "is really used F if you want a few",
    "start": "388960",
    "end": "390400"
  },
  {
    "text": "things for one thing it lets you send",
    "start": "390400",
    "end": "392880"
  },
  {
    "text": "all types of signals so not just metrics",
    "start": "392880",
    "end": "394919"
  },
  {
    "text": "but also logs and traces and then it",
    "start": "394919",
    "end": "398120"
  },
  {
    "text": "also provides an option for a push-based",
    "start": "398120",
    "end": "399560"
  },
  {
    "text": "solution versus Prometheus which",
    "start": "399560",
    "end": "401599"
  },
  {
    "text": "provides a pull-based solution among",
    "start": "401599",
    "end": "404120"
  },
  {
    "text": "other",
    "start": "404120",
    "end": "406039"
  },
  {
    "text": "things so here we are thinking to",
    "start": "406039",
    "end": "408440"
  },
  {
    "text": "ourselves we want to adopt open source",
    "start": "408440",
    "end": "410319"
  },
  {
    "text": "standards and specifically we want to",
    "start": "410319",
    "end": "412000"
  },
  {
    "text": "expose the Prometheus and otel",
    "start": "412000",
    "end": "414160"
  },
  {
    "text": "interfaces how do we go about that so in",
    "start": "414160",
    "end": "417360"
  },
  {
    "text": "the next section of the talk we're going",
    "start": "417360",
    "end": "418599"
  },
  {
    "text": "to go through a case study of how we",
    "start": "418599",
    "end": "420639"
  },
  {
    "text": "adopted Prometheus and we did also adopt",
    "start": "420639",
    "end": "423520"
  },
  {
    "text": "otel but we aren't going to talk about",
    "start": "423520",
    "end": "425199"
  },
  {
    "text": "that much here so Daniel will start us",
    "start": "425199",
    "end": "428960"
  },
  {
    "text": "off okay so let's so if we were to",
    "start": "428960",
    "end": "432479"
  },
  {
    "text": "review everything we've learned so far",
    "start": "432479",
    "end": "433840"
  },
  {
    "text": "about Prometheus and open Telemetry it",
    "start": "433840",
    "end": "435599"
  },
  {
    "text": "is way different than what we have at",
    "start": "435599",
    "end": "437599"
  },
  {
    "text": "Google clone monitoring right um so we",
    "start": "437599",
    "end": "440560"
  },
  {
    "text": "don't want to adopt Everything at Once",
    "start": "440560",
    "end": "443080"
  },
  {
    "text": "how can so the question was how can we",
    "start": "443080",
    "end": "445319"
  },
  {
    "text": "adopt these tools",
    "start": "445319",
    "end": "447240"
  },
  {
    "text": "incrementally and this is where we",
    "start": "447240",
    "end": "449400"
  },
  {
    "text": "arrived so we have this feature",
    "start": "449400",
    "end": "451720"
  },
  {
    "text": "Matrix um and we we've subdivided it",
    "start": "451720",
    "end": "455039"
  },
  {
    "text": "into small components um as you can see",
    "start": "455039",
    "end": "457199"
  },
  {
    "text": "this is actually just the observability",
    "start": "457199",
    "end": "458879"
  },
  {
    "text": "life cycle so um ingestion is the first",
    "start": "458879",
    "end": "462599"
  },
  {
    "text": "one so let's step into",
    "start": "462599",
    "end": "464840"
  },
  {
    "text": "that so again most users already um are",
    "start": "464840",
    "end": "468840"
  },
  {
    "text": "using Prometheus uh for example if",
    "start": "468840",
    "end": "471759"
  },
  {
    "text": "they're coming from on Prem Solutions um",
    "start": "471759",
    "end": "474479"
  },
  {
    "text": "or if they're using common tools and",
    "start": "474479",
    "end": "475840"
  },
  {
    "text": "have access to exporters um so how can",
    "start": "475840",
    "end": "479120"
  },
  {
    "text": "we we allow customers to use those um",
    "start": "479120",
    "end": "483360"
  },
  {
    "text": "but instead of storing it in Prometheus",
    "start": "483360",
    "end": "485360"
  },
  {
    "text": "how do we get it into Google clown",
    "start": "485360",
    "end": "488039"
  },
  {
    "text": "monitoring and we have three options",
    "start": "488039",
    "end": "490159"
  },
  {
    "text": "here we can either number one we can",
    "start": "490159",
    "end": "493560"
  },
  {
    "text": "write a tool that does exactly the same",
    "start": "493560",
    "end": "495520"
  },
  {
    "text": "thing that Prometheus does we can go and",
    "start": "495520",
    "end": "498039"
  },
  {
    "text": "scrape uh the Prometheus metrics end",
    "start": "498039",
    "end": "500800"
  },
  {
    "text": "point from all these applications but",
    "start": "500800",
    "end": "503199"
  },
  {
    "text": "that would be a lot of work right we'd",
    "start": "503199",
    "end": "504960"
  },
  {
    "text": "have to essentially replicate a lot of",
    "start": "504960",
    "end": "507159"
  },
  {
    "text": "this logic that Prometheus has uh and uh",
    "start": "507159",
    "end": "511400"
  },
  {
    "text": "if Prometheus ever changes we're going",
    "start": "511400",
    "end": "513440"
  },
  {
    "text": "to have to change as well the second",
    "start": "513440",
    "end": "516120"
  },
  {
    "text": "option is to just use Prometheus",
    "start": "516120",
    "end": "518560"
  },
  {
    "text": "directly and unfortunately that's not",
    "start": "518560",
    "end": "520360"
  },
  {
    "text": "really an option Prometheus can already",
    "start": "520360",
    "end": "521959"
  },
  {
    "text": "do this so we've arrived at uh option",
    "start": "521959",
    "end": "526519"
  },
  {
    "text": "number three which is why don't we just",
    "start": "526519",
    "end": "528279"
  },
  {
    "text": "Fork Prometheus and add this feature in",
    "start": "528279",
    "end": "531160"
  },
  {
    "text": "there and this is what happened so we",
    "start": "531160",
    "end": "534440"
  },
  {
    "text": "created a very small patch on top of",
    "start": "534440",
    "end": "537160"
  },
  {
    "text": "Prometheus that all it does is just",
    "start": "537160",
    "end": "539480"
  },
  {
    "text": "export metrics to Google Cloud",
    "start": "539480",
    "end": "542839"
  },
  {
    "text": "monitoring so if customers now want to",
    "start": "542839",
    "end": "545680"
  },
  {
    "text": "use this all they have to do is replace",
    "start": "545680",
    "end": "548200"
  },
  {
    "text": "their image it is very easy uh it is",
    "start": "548200",
    "end": "551279"
  },
  {
    "text": "very easy for a customer to on board to",
    "start": "551279",
    "end": "553160"
  },
  {
    "text": "us because all their configurations just",
    "start": "553160",
    "end": "555480"
  },
  {
    "text": "work out of the box they do not have to",
    "start": "555480",
    "end": "557560"
  },
  {
    "text": "change anything so that's really great",
    "start": "557560",
    "end": "560360"
  },
  {
    "text": "that improves user",
    "start": "560360",
    "end": "561920"
  },
  {
    "text": "satisfaction um we've also accidentally",
    "start": "561920",
    "end": "565399"
  },
  {
    "text": "become um scalable here because we're",
    "start": "565399",
    "end": "569360"
  },
  {
    "text": "data to a remote location uh we're not",
    "start": "569360",
    "end": "571720"
  },
  {
    "text": "storing anything locally so you can spin",
    "start": "571720",
    "end": "573680"
  },
  {
    "text": "up as many of these Prometheus instances",
    "start": "573680",
    "end": "575760"
  },
  {
    "text": "as you want you don't have to worry",
    "start": "575760",
    "end": "577120"
  },
  {
    "text": "about charting or anything just spin",
    "start": "577120",
    "end": "579000"
  },
  {
    "text": "them up you can have these um scrape",
    "start": "579000",
    "end": "581279"
  },
  {
    "text": "different applications and it's all",
    "start": "581279",
    "end": "584200"
  },
  {
    "text": "scalable um so overall everyone wins",
    "start": "584200",
    "end": "587160"
  },
  {
    "text": "here the developers who use Google Cloud",
    "start": "587160",
    "end": "589360"
  },
  {
    "text": "monitoring now benefit from this and the",
    "start": "589360",
    "end": "592079"
  },
  {
    "text": "engineers us we benefit as well because",
    "start": "592079",
    "end": "595040"
  },
  {
    "text": "this is a very tiny patch it's actually",
    "start": "595040",
    "end": "596839"
  },
  {
    "text": "very easy to",
    "start": "596839",
    "end": "597959"
  },
  {
    "text": "maintain um and finally a note just",
    "start": "597959",
    "end": "601120"
  },
  {
    "text": "because we're foring doesn't mean it has",
    "start": "601120",
    "end": "602600"
  },
  {
    "text": "to be forever and um we are trying to",
    "start": "602600",
    "end": "606440"
  },
  {
    "text": "get um we are working um we're involved",
    "start": "606440",
    "end": "610279"
  },
  {
    "text": "in a Prometheus remote right spec which",
    "start": "610279",
    "end": "612720"
  },
  {
    "text": "would allow Prometheus to just um send",
    "start": "612720",
    "end": "616680"
  },
  {
    "text": "data to Google Cloud metrics",
    "start": "616680",
    "end": "618800"
  },
  {
    "text": "directly um so also the community wins",
    "start": "618800",
    "end": "622760"
  },
  {
    "text": "right because we're actively",
    "start": "622760",
    "end": "624959"
  },
  {
    "text": "contributing back as",
    "start": "624959",
    "end": "627040"
  },
  {
    "text": "well uh we actually even took this a",
    "start": "627040",
    "end": "629279"
  },
  {
    "text": "step further uh what if we have new",
    "start": "629279",
    "end": "630959"
  },
  {
    "text": "customers who are on kubernetes and they",
    "start": "630959",
    "end": "632880"
  },
  {
    "text": "want to use Prometheus for the first",
    "start": "632880",
    "end": "634480"
  },
  {
    "text": "time can we make this a little easier",
    "start": "634480",
    "end": "636279"
  },
  {
    "text": "for them uh and the answer is yes we",
    "start": "636279",
    "end": "639000"
  },
  {
    "text": "wrote a small um operator um that",
    "start": "639000",
    "end": "641760"
  },
  {
    "text": "essentially spins up a Prometheus",
    "start": "641760",
    "end": "643839"
  },
  {
    "text": "instance in every",
    "start": "643839",
    "end": "645160"
  },
  {
    "text": "node um and",
    "start": "645160",
    "end": "648600"
  },
  {
    "text": "um and we've turned it on by default in",
    "start": "648600",
    "end": "652720"
  },
  {
    "text": "uh Google kubernetes engine so that uh",
    "start": "652720",
    "end": "655959"
  },
  {
    "text": "new customers can immediately benefit um",
    "start": "655959",
    "end": "658680"
  },
  {
    "text": "and use use whatever they're familiar",
    "start": "658680",
    "end": "661760"
  },
  {
    "text": "with so after we did that this is what",
    "start": "661760",
    "end": "664680"
  },
  {
    "text": "our feature Matrix looks like now um",
    "start": "664680",
    "end": "667200"
  },
  {
    "text": "customers can either SC scrape using the",
    "start": "667200",
    "end": "669920"
  },
  {
    "text": "SD they're familiar with or they can use",
    "start": "669920",
    "end": "671920"
  },
  {
    "text": "Prometheus and it all goes to a",
    "start": "671920",
    "end": "673720"
  },
  {
    "text": "centralized source which is",
    "start": "673720",
    "end": "675600"
  },
  {
    "text": "Monarch uh so that's great but some",
    "start": "675600",
    "end": "679079"
  },
  {
    "text": "customers may want to use promql they",
    "start": "679079",
    "end": "681120"
  },
  {
    "text": "may want to use their dashboards or",
    "start": "681120",
    "end": "682760"
  },
  {
    "text": "learning",
    "start": "682760",
    "end": "684639"
  },
  {
    "text": "configurations um so what what can we do",
    "start": "684639",
    "end": "687200"
  },
  {
    "text": "about that shishi can you help that",
    "start": "687200",
    "end": "689079"
  },
  {
    "text": "answer this",
    "start": "689079",
    "end": "692040"
  },
  {
    "text": "sure as Daniel said people already have",
    "start": "692040",
    "end": "695160"
  },
  {
    "text": "lots of existing queries and dashboards",
    "start": "695160",
    "end": "697240"
  },
  {
    "text": "that are defined with promql and they",
    "start": "697240",
    "end": "698519"
  },
  {
    "text": "already know how to use promql",
    "start": "698519",
    "end": "699760"
  },
  {
    "text": "relatively well um so question is how",
    "start": "699760",
    "end": "702639"
  },
  {
    "text": "can we lower the barrier of entry and by",
    "start": "702639",
    "end": "705920"
  },
  {
    "text": "the way this is what AI thinks promql",
    "start": "705920",
    "end": "708160"
  },
  {
    "text": "looks",
    "start": "708160",
    "end": "710160"
  },
  {
    "text": "like so we want to solve this problem by",
    "start": "710160",
    "end": "713000"
  },
  {
    "text": "having our system expose the Prometheus",
    "start": "713000",
    "end": "715120"
  },
  {
    "text": "HTTP API and that API is queries",
    "start": "715120",
    "end": "718639"
  },
  {
    "text": "themselves and also supporting",
    "start": "718639",
    "end": "720000"
  },
  {
    "text": "functionality like autocomplete metadata",
    "start": "720000",
    "end": "722399"
  },
  {
    "text": "exemplars and so on um so we considered",
    "start": "722399",
    "end": "725880"
  },
  {
    "text": "several options about how to implement",
    "start": "725880",
    "end": "728480"
  },
  {
    "text": "that the first one is just we could have",
    "start": "728480",
    "end": "731560"
  },
  {
    "text": "run many separate vanilla Prometheus",
    "start": "731560",
    "end": "734560"
  },
  {
    "text": "instances and the issue with vanilla",
    "start": "734560",
    "end": "737079"
  },
  {
    "text": "Prometheus is that there's no long-term",
    "start": "737079",
    "end": "739279"
  },
  {
    "text": "storage and also it can be really",
    "start": "739279",
    "end": "741639"
  },
  {
    "text": "difficult to Shard",
    "start": "741639",
    "end": "743360"
  },
  {
    "text": "horizontally we also considered running",
    "start": "743360",
    "end": "745560"
  },
  {
    "text": "another open source system like Thanos",
    "start": "745560",
    "end": "747399"
  },
  {
    "text": "or cortex um and with all of these for",
    "start": "747399",
    "end": "750760"
  },
  {
    "text": "us one issue is that we would basically",
    "start": "750760",
    "end": "753079"
  },
  {
    "text": "need to run per customer deployments and",
    "start": "753079",
    "end": "755680"
  },
  {
    "text": "that would be something that would be",
    "start": "755680",
    "end": "756959"
  },
  {
    "text": "pretty difficult to operate and also it",
    "start": "756959",
    "end": "758959"
  },
  {
    "text": "would require a lot of",
    "start": "758959",
    "end": "760240"
  },
  {
    "text": "resources so finally we thought we could",
    "start": "760240",
    "end": "763320"
  },
  {
    "text": "also use Monarch and the issue with",
    "start": "763320",
    "end": "766199"
  },
  {
    "text": "monarch of course is that it doesn't",
    "start": "766199",
    "end": "767680"
  },
  {
    "text": "actually expose the Prometheus",
    "start": "767680",
    "end": "770399"
  },
  {
    "text": "API so and aside on monark if you're not",
    "start": "770399",
    "end": "773600"
  },
  {
    "text": "familiar um it's Google's centralized",
    "start": "773600",
    "end": "775639"
  },
  {
    "text": "monitoring system so it's a distributed",
    "start": "775639",
    "end": "778079"
  },
  {
    "text": "and multi-tenant storage system and it's",
    "start": "778079",
    "end": "780440"
  },
  {
    "text": "already used by lots of in teams",
    "start": "780440",
    "end": "782079"
  },
  {
    "text": "internally so it already stores lots of",
    "start": "782079",
    "end": "785560"
  },
  {
    "text": "data and then finally it's something",
    "start": "785560",
    "end": "788040"
  },
  {
    "text": "that Google series have lots of",
    "start": "788040",
    "end": "789360"
  },
  {
    "text": "experience operating so that's",
    "start": "789360",
    "end": "792519"
  },
  {
    "text": "useful so we wanted to take advantage of",
    "start": "792519",
    "end": "794639"
  },
  {
    "text": "all that and we ended up choosing",
    "start": "794639",
    "end": "796800"
  },
  {
    "text": "Monarch as the data store so then the",
    "start": "796800",
    "end": "799480"
  },
  {
    "text": "issue we had to solve was how do we",
    "start": "799480",
    "end": "801160"
  },
  {
    "text": "implement the Prometheus query API over",
    "start": "801160",
    "end": "804120"
  },
  {
    "text": "Monarch and you would think that should",
    "start": "804120",
    "end": "806040"
  },
  {
    "text": "be straightforward what could go wrong",
    "start": "806040",
    "end": "810759"
  },
  {
    "text": "Well turns out there's a few challenges",
    "start": "811040",
    "end": "814199"
  },
  {
    "text": "um one of the main things we had to deal",
    "start": "814199",
    "end": "815560"
  },
  {
    "text": "with is that Prometheus and Monarch have",
    "start": "815560",
    "end": "817800"
  },
  {
    "text": "somewhat different data models and we",
    "start": "817800",
    "end": "819920"
  },
  {
    "text": "had to figure out how to map",
    "start": "819920",
    "end": "820920"
  },
  {
    "text": "prometheus's data model over",
    "start": "820920",
    "end": "822800"
  },
  {
    "text": "Monarch so I'll give a couple examples",
    "start": "822800",
    "end": "826320"
  },
  {
    "text": "and the first one is that Prometheus is",
    "start": "826320",
    "end": "828079"
  },
  {
    "text": "schemes while Monarch is schema and what",
    "start": "828079",
    "end": "831240"
  },
  {
    "text": "I mean by that is that in Prometheus",
    "start": "831240",
    "end": "833399"
  },
  {
    "text": "basically you never have to worry about",
    "start": "833399",
    "end": "834680"
  },
  {
    "text": "your labels like a Time series just has",
    "start": "834680",
    "end": "837160"
  },
  {
    "text": "a bag of labels attached to it and and",
    "start": "837160",
    "end": "839360"
  },
  {
    "text": "you can adjust points with whatever",
    "start": "839360",
    "end": "840759"
  },
  {
    "text": "labels seem useful at the time then you",
    "start": "840759",
    "end": "842480"
  },
  {
    "text": "can write your queries Without Really",
    "start": "842480",
    "end": "844000"
  },
  {
    "text": "knowing what labels are present on the",
    "start": "844000",
    "end": "846000"
  },
  {
    "text": "on the underlying time",
    "start": "846000",
    "end": "847519"
  },
  {
    "text": "series The on the other hand Monarch has",
    "start": "847519",
    "end": "850920"
  },
  {
    "text": "a strict approach it has both resource",
    "start": "850920",
    "end": "853120"
  },
  {
    "text": "and metric schemas and there's specific",
    "start": "853120",
    "end": "855279"
  },
  {
    "text": "labels associated with every schema so",
    "start": "855279",
    "end": "857720"
  },
  {
    "text": "when you injust a point it has to have a",
    "start": "857720",
    "end": "859199"
  },
  {
    "text": "subset of those labels and when you",
    "start": "859199",
    "end": "860560"
  },
  {
    "text": "query it it has to only reference labels",
    "start": "860560",
    "end": "863000"
  },
  {
    "text": "that are actually present and there are",
    "start": "863000",
    "end": "865440"
  },
  {
    "text": "different kinds of advantages um schema",
    "start": "865440",
    "end": "867680"
  },
  {
    "text": "list models are like really easy to use",
    "start": "867680",
    "end": "869480"
  },
  {
    "text": "the user doesn't have to worry about",
    "start": "869480",
    "end": "870639"
  },
  {
    "text": "labels and schema full models aren't",
    "start": "870639",
    "end": "872880"
  },
  {
    "text": "really that helpful to users but they",
    "start": "872880",
    "end": "875279"
  },
  {
    "text": "are they do help us scale more in the",
    "start": "875279",
    "end": "877639"
  },
  {
    "text": "back end so it is nice for us as",
    "start": "877639",
    "end": "879800"
  },
  {
    "text": "implementers of the",
    "start": "879800",
    "end": "882519"
  },
  {
    "text": "system um so this is mostly handled",
    "start": "882519",
    "end": "885839"
  },
  {
    "text": "through translations so for example on",
    "start": "885839",
    "end": "888560"
  },
  {
    "text": "the injust side we want to make it look",
    "start": "888560",
    "end": "890639"
  },
  {
    "text": "like there's just a back of labels so we",
    "start": "890639",
    "end": "892720"
  },
  {
    "text": "have a translation layer that's",
    "start": "892720",
    "end": "893880"
  },
  {
    "text": "comparing the points that are getting",
    "start": "893880",
    "end": "895160"
  },
  {
    "text": "sent um and adjusted and comparing that",
    "start": "895160",
    "end": "898160"
  },
  {
    "text": "to what schemas are in the system and",
    "start": "898160",
    "end": "900600"
  },
  {
    "text": "then it's automatically creating and",
    "start": "900600",
    "end": "901880"
  },
  {
    "text": "updating the schemas in the background",
    "start": "901880",
    "end": "904199"
  },
  {
    "text": "so then for the storage system nothing",
    "start": "904199",
    "end": "906440"
  },
  {
    "text": "actually",
    "start": "906440",
    "end": "908839"
  },
  {
    "text": "changes similarly on the query side our",
    "start": "909240",
    "end": "911800"
  },
  {
    "text": "translation layer takes the promql query",
    "start": "911800",
    "end": "913720"
  },
  {
    "text": "that's sent by the user Compares it to",
    "start": "913720",
    "end": "915680"
  },
  {
    "text": "the schemas um it generates a query in",
    "start": "915680",
    "end": "918720"
  },
  {
    "text": "our case We're translating promql to mql",
    "start": "918720",
    "end": "920720"
  },
  {
    "text": "which is Monarch's query language um",
    "start": "920720",
    "end": "923600"
  },
  {
    "text": "that query only references valid labels",
    "start": "923600",
    "end": "925800"
  },
  {
    "text": "according to the schemas so again",
    "start": "925800",
    "end": "927399"
  },
  {
    "text": "Monarch is seeing the same thing",
    "start": "927399",
    "end": "929120"
  },
  {
    "text": "as it always has and then the",
    "start": "929120",
    "end": "931480"
  },
  {
    "text": "translation layer itself is handling the",
    "start": "931480",
    "end": "933880"
  },
  {
    "text": "other labels according to prom",
    "start": "933880",
    "end": "937399"
  },
  {
    "text": "semantics so that's one example um",
    "start": "937399",
    "end": "941199"
  },
  {
    "text": "another example of different data models",
    "start": "941199",
    "end": "943000"
  },
  {
    "text": "is kind of how different kinds of data",
    "start": "943000",
    "end": "945880"
  },
  {
    "text": "are represented in Prometheus and",
    "start": "945880",
    "end": "947240"
  },
  {
    "text": "Monarch so Monarch has a lot more",
    "start": "947240",
    "end": "950079"
  },
  {
    "text": "different data types for one thing it",
    "start": "950079",
    "end": "952040"
  },
  {
    "text": "has like strings",
    "start": "952040",
    "end": "953560"
  },
  {
    "text": "distributions and up till recently",
    "start": "953560",
    "end": "955480"
  },
  {
    "text": "Prometheus data was all doubles but now",
    "start": "955480",
    "end": "958319"
  },
  {
    "text": "they're also native histograms as well",
    "start": "958319",
    "end": "960920"
  },
  {
    "text": "and so then the example I have on the",
    "start": "960920",
    "end": "963480"
  },
  {
    "text": "slide is that there's a difference in",
    "start": "963480",
    "end": "966000"
  },
  {
    "text": "the way that counter data is represented",
    "start": "966000",
    "end": "968519"
  },
  {
    "text": "um Prometheus counter points just have",
    "start": "968519",
    "end": "970800"
  },
  {
    "text": "one single time stamp and where the",
    "start": "970800",
    "end": "973880"
  },
  {
    "text": "counter resets is inferred based on when",
    "start": "973880",
    "end": "976720"
  },
  {
    "text": "the point value drops that's um when it",
    "start": "976720",
    "end": "979839"
  },
  {
    "text": "assumes that a reset",
    "start": "979839",
    "end": "982160"
  },
  {
    "text": "happened well in Monarch every Point has",
    "start": "982160",
    "end": "986120"
  },
  {
    "text": "both an explicit start time stamp and an",
    "start": "986120",
    "end": "988079"
  },
  {
    "text": "end time stamp so the start time stamp",
    "start": "988079",
    "end": "990199"
  },
  {
    "text": "tells you exactly when the count counter",
    "start": "990199",
    "end": "992279"
  },
  {
    "text": "reset happened and then the point value",
    "start": "992279",
    "end": "995199"
  },
  {
    "text": "is basically a change over an",
    "start": "995199",
    "end": "998199"
  },
  {
    "text": "interval um so this is actually helpful",
    "start": "998199",
    "end": "1001040"
  },
  {
    "text": "to Monarch because it allows it to",
    "start": "1001040",
    "end": "1002959"
  },
  {
    "text": "calculate rates more accurately in",
    "start": "1002959",
    "end": "1004560"
  },
  {
    "text": "certain cases so there are like edge",
    "start": "1004560",
    "end": "1006560"
  },
  {
    "text": "cases where in Prometheus you could have",
    "start": "1006560",
    "end": "1008680"
  },
  {
    "text": "an uninitialized counter or you could",
    "start": "1008680",
    "end": "1010959"
  },
  {
    "text": "have a reset that um happens very",
    "start": "1010959",
    "end": "1014680"
  },
  {
    "text": "quickly and the point value doesn't",
    "start": "1014680",
    "end": "1016000"
  },
  {
    "text": "actually drop and then Prometheus",
    "start": "1016000",
    "end": "1017199"
  },
  {
    "text": "doesn't know about it so so those kind",
    "start": "1017199",
    "end": "1019639"
  },
  {
    "text": "of issues are um addressed with",
    "start": "1019639",
    "end": "1023480"
  },
  {
    "text": "this so we wanted Prometheus to also",
    "start": "1023480",
    "end": "1026160"
  },
  {
    "text": "benefit from sort of this improved",
    "start": "1026160",
    "end": "1029000"
  },
  {
    "text": "accuracy so a good solution here was to",
    "start": "1029000",
    "end": "1032120"
  },
  {
    "text": "contribute back to Prometheus and the",
    "start": "1032120",
    "end": "1034280"
  },
  {
    "text": "result is what's called a created",
    "start": "1034280",
    "end": "1035839"
  },
  {
    "text": "timestamp and that was work that was",
    "start": "1035839",
    "end": "1037798"
  },
  {
    "text": "done by Daniel and some others and there",
    "start": "1037799",
    "end": "1042438"
  },
  {
    "text": "was a talk given at promcon earlier this",
    "start": "1042439",
    "end": "1044120"
  },
  {
    "text": "year if you're interested in more",
    "start": "1044120",
    "end": "1045280"
  },
  {
    "text": "details there's a",
    "start": "1045280",
    "end": "1047400"
  },
  {
    "text": "link",
    "start": "1047400",
    "end": "1049880"
  },
  {
    "text": "all right so now we come to a different",
    "start": "1049880",
    "end": "1052840"
  },
  {
    "text": "kind of challenge um another challenge",
    "start": "1052840",
    "end": "1055000"
  },
  {
    "text": "we have is to keep our implementation in",
    "start": "1055000",
    "end": "1057120"
  },
  {
    "text": "API in sync with the open source prom",
    "start": "1057120",
    "end": "1059799"
  },
  {
    "text": "API if we were to tr try to translate",
    "start": "1059799",
    "end": "1062840"
  },
  {
    "text": "every query from prom to mql um there",
    "start": "1062840",
    "end": "1065720"
  },
  {
    "text": "would always be some kind of lag if prom",
    "start": "1065720",
    "end": "1068080"
  },
  {
    "text": "kill gets updated like it it has new",
    "start": "1068080",
    "end": "1070280"
  },
  {
    "text": "functions added and then we have to",
    "start": "1070280",
    "end": "1072440"
  },
  {
    "text": "spend time implementing the",
    "start": "1072440",
    "end": "1074080"
  },
  {
    "text": "translations then they're they wouldn't",
    "start": "1074080",
    "end": "1076400"
  },
  {
    "text": "be available right away so our solution",
    "start": "1076400",
    "end": "1079320"
  },
  {
    "text": "here is to run um kind of a hybrid imp",
    "start": "1079320",
    "end": "1083440"
  },
  {
    "text": "implementation so we are running the",
    "start": "1083440",
    "end": "1085000"
  },
  {
    "text": "open source prom kill query engine",
    "start": "1085000",
    "end": "1087080"
  },
  {
    "text": "alongside Monarch when our translation",
    "start": "1087080",
    "end": "1089559"
  },
  {
    "text": "layer gets a query it decides which part",
    "start": "1089559",
    "end": "1091760"
  },
  {
    "text": "should be executed by Monarch and which",
    "start": "1091760",
    "end": "1093400"
  },
  {
    "text": "part should be executed by prq so if",
    "start": "1093400",
    "end": "1096240"
  },
  {
    "text": "it's like a really computationally",
    "start": "1096240",
    "end": "1098799"
  },
  {
    "text": "intensive operation and we think it",
    "start": "1098799",
    "end": "1101320"
  },
  {
    "text": "would benefit from distributed",
    "start": "1101320",
    "end": "1102520"
  },
  {
    "text": "evaluation we translate that to mql and",
    "start": "1102520",
    "end": "1105080"
  },
  {
    "text": "send it to Monarch and then we have",
    "start": "1105080",
    "end": "1107559"
  },
  {
    "text": "promql compl compl any other operations",
    "start": "1107559",
    "end": "1109840"
  },
  {
    "text": "that didn't get",
    "start": "1109840",
    "end": "1111280"
  },
  {
    "text": "translated so here's an example query of",
    "start": "1111280",
    "end": "1115760"
  },
  {
    "text": "um say we got this input promql",
    "start": "1115760",
    "end": "1118880"
  },
  {
    "text": "query the query plan would split it into",
    "start": "1118880",
    "end": "1121679"
  },
  {
    "text": "this part that Monarch will evaluate and",
    "start": "1121679",
    "end": "1123600"
  },
  {
    "text": "that's in blue and then a part that",
    "start": "1123600",
    "end": "1125799"
  },
  {
    "text": "promql will evaluate in pink and it",
    "start": "1125799",
    "end": "1128799"
  },
  {
    "text": "translates the monar part of the query",
    "start": "1128799",
    "end": "1130039"
  },
  {
    "text": "to",
    "start": "1130039",
    "end": "1131840"
  },
  {
    "text": "mql um so",
    "start": "1131840",
    "end": "1133960"
  },
  {
    "text": "then the monor query engine starts off",
    "start": "1133960",
    "end": "1136720"
  },
  {
    "text": "the evaluation and gets the data in",
    "start": "1136720",
    "end": "1138000"
  },
  {
    "text": "monor um and evaluates the mql it",
    "start": "1138000",
    "end": "1141320"
  },
  {
    "text": "produces a partial result that gets",
    "start": "1141320",
    "end": "1142760"
  },
  {
    "text": "passed to the Prometheus engine which",
    "start": "1142760",
    "end": "1144720"
  },
  {
    "text": "completes the evaluation and produces",
    "start": "1144720",
    "end": "1146720"
  },
  {
    "text": "the final",
    "start": "1146720",
    "end": "1148880"
  },
  {
    "text": "result and so when we want to keep stuff",
    "start": "1148880",
    "end": "1151080"
  },
  {
    "text": "up to date all we have to do is import",
    "start": "1151080",
    "end": "1152640"
  },
  {
    "text": "the latest version of the promql",
    "start": "1152640",
    "end": "1155919"
  },
  {
    "text": "engine so what was the outcome of all of",
    "start": "1158000",
    "end": "1160840"
  },
  {
    "text": "this um as mentioned there's lots of",
    "start": "1160840",
    "end": "1163440"
  },
  {
    "text": "benefits to users for having a drop in",
    "start": "1163440",
    "end": "1166720"
  },
  {
    "text": "Prometheus API um",
    "start": "1166720",
    "end": "1168960"
  },
  {
    "text": "and then because we're sharing the",
    "start": "1168960",
    "end": "1169919"
  },
  {
    "text": "backend we have a single entry point to",
    "start": "1169919",
    "end": "1173120"
  },
  {
    "text": "all kinds of metric data in that back",
    "start": "1173120",
    "end": "1175120"
  },
  {
    "text": "end so in Monarch we also have non",
    "start": "1175120",
    "end": "1177320"
  },
  {
    "text": "Prometheus metrics like gka system",
    "start": "1177320",
    "end": "1178960"
  },
  {
    "text": "metrics and other um Google cloud system",
    "start": "1178960",
    "end": "1182200"
  },
  {
    "text": "metrics and we can use promk to create",
    "start": "1182200",
    "end": "1184440"
  },
  {
    "text": "everything and then scalability we've",
    "start": "1184440",
    "end": "1186480"
  },
  {
    "text": "already talked about and so this turns",
    "start": "1186480",
    "end": "1189400"
  },
  {
    "text": "out to be good for both our users and",
    "start": "1189400",
    "end": "1191760"
  },
  {
    "text": "for us as system providers as",
    "start": "1191760",
    "end": "1195080"
  },
  {
    "text": "well so back to our integration plan",
    "start": "1195080",
    "end": "1197799"
  },
  {
    "text": "we've adopted the Prometheus interfaces",
    "start": "1197799",
    "end": "1199360"
  },
  {
    "text": "for in in querying and we have chosen",
    "start": "1199360",
    "end": "1202000"
  },
  {
    "text": "not to adopt it for storage So Daniel",
    "start": "1202000",
    "end": "1204400"
  },
  {
    "text": "what about alerting and",
    "start": "1204400",
    "end": "1206840"
  },
  {
    "text": "dashboards so it's great you ask and",
    "start": "1206840",
    "end": "1209559"
  },
  {
    "text": "that's actually a trick",
    "start": "1209559",
    "end": "1211120"
  },
  {
    "text": "question um we already support it",
    "start": "1211120",
    "end": "1214000"
  },
  {
    "text": "because we've implemented uh the promql",
    "start": "1214000",
    "end": "1216600"
  },
  {
    "text": "I mean the Prometheus API directly on",
    "start": "1216600",
    "end": "1218960"
  },
  {
    "text": "top of Monarch right so for example",
    "start": "1218960",
    "end": "1221200"
  },
  {
    "text": "here's a little Cod snip it R and go and",
    "start": "1221200",
    "end": "1223120"
  },
  {
    "text": "you want to use a Prometheus API um all",
    "start": "1223120",
    "end": "1225840"
  },
  {
    "text": "you have to do is replace the address",
    "start": "1225840",
    "end": "1228320"
  },
  {
    "text": "with uh Google Cloud monitorings URL and",
    "start": "1228320",
    "end": "1231240"
  },
  {
    "text": "everything works as you'd",
    "start": "1231240",
    "end": "1233120"
  },
  {
    "text": "expect uh and we also see these benefits",
    "start": "1233120",
    "end": "1235840"
  },
  {
    "text": "for any dashboard tools you want all you",
    "start": "1235840",
    "end": "1237960"
  },
  {
    "text": "have to do is replace the URL and we've",
    "start": "1237960",
    "end": "1241039"
  },
  {
    "text": "we've uh implemented a lot of the apis",
    "start": "1241039",
    "end": "1243880"
  },
  {
    "text": "so uh auto complete and everything like",
    "start": "1243880",
    "end": "1246559"
  },
  {
    "text": "that should still",
    "start": "1246559",
    "end": "1249159"
  },
  {
    "text": "work and we've ALS we have we've also",
    "start": "1249159",
    "end": "1252159"
  },
  {
    "text": "added these benefits to Google Cloud",
    "start": "1252159",
    "end": "1253919"
  },
  {
    "text": "monitoring as well so now in the Google",
    "start": "1253919",
    "end": "1257320"
  },
  {
    "text": "Cloud monitoring metric Explorer you can",
    "start": "1257320",
    "end": "1259799"
  },
  {
    "text": "either use the AI or if you write a",
    "start": "1259799",
    "end": "1262200"
  },
  {
    "text": "query you can decide whether you want to",
    "start": "1262200",
    "end": "1264039"
  },
  {
    "text": "use mql or prime ql and there's a small",
    "start": "1264039",
    "end": "1267159"
  },
  {
    "text": "box you could check to uh choose which",
    "start": "1267159",
    "end": "1269120"
  },
  {
    "text": "one you want and there's also limited",
    "start": "1269120",
    "end": "1271159"
  },
  {
    "text": "conversions between these as",
    "start": "1271159",
    "end": "1273279"
  },
  {
    "text": "well so finally our feature Matrix now",
    "start": "1273279",
    "end": "1276760"
  },
  {
    "text": "looks like this uh it's really great",
    "start": "1276760",
    "end": "1280000"
  },
  {
    "text": "because now you can use uh you can",
    "start": "1280000",
    "end": "1281799"
  },
  {
    "text": "adjust data any way you want and also",
    "start": "1281799",
    "end": "1283960"
  },
  {
    "text": "you can visualize or uh do whatever you",
    "start": "1283960",
    "end": "1286760"
  },
  {
    "text": "want with the data any way you want to",
    "start": "1286760",
    "end": "1288120"
  },
  {
    "text": "as",
    "start": "1288120",
    "end": "1289159"
  },
  {
    "text": "well last but not least we haven't",
    "start": "1289159",
    "end": "1291400"
  },
  {
    "text": "forgotten about open",
    "start": "1291400",
    "end": "1293279"
  },
  {
    "text": "Telemetry um we hypothetically already",
    "start": "1293279",
    "end": "1296080"
  },
  {
    "text": "support open Telemetry because there's",
    "start": "1296080",
    "end": "1297799"
  },
  {
    "text": "all these Prometheus",
    "start": "1297799",
    "end": "1299520"
  },
  {
    "text": "Bridges um and we we do have a an open",
    "start": "1299520",
    "end": "1305000"
  },
  {
    "text": "Telemetry team at Google who's also sort",
    "start": "1305000",
    "end": "1307600"
  },
  {
    "text": "of improving the space uh we are not",
    "start": "1307600",
    "end": "1309720"
  },
  {
    "text": "part of that team so we we don't know",
    "start": "1309720",
    "end": "1311520"
  },
  {
    "text": "the exact details uh but stay",
    "start": "1311520",
    "end": "1315960"
  },
  {
    "text": "tuned so if you find finally if you add",
    "start": "1316000",
    "end": "1319520"
  },
  {
    "text": "uh open Telemetry to the list we have",
    "start": "1319520",
    "end": "1321679"
  },
  {
    "text": "this so whatever the users want they",
    "start": "1321679",
    "end": "1324279"
  },
  {
    "text": "have",
    "start": "1324279",
    "end": "1325440"
  },
  {
    "text": "it so let's recap some of the things",
    "start": "1325440",
    "end": "1327799"
  },
  {
    "text": "we've learned",
    "start": "1327799",
    "end": "1329600"
  },
  {
    "text": "today let's start with the motivating",
    "start": "1329600",
    "end": "1331880"
  },
  {
    "text": "statement first is that users do not",
    "start": "1331880",
    "end": "1334440"
  },
  {
    "text": "like to be vendor locked they don't want",
    "start": "1334440",
    "end": "1336559"
  },
  {
    "text": "to be",
    "start": "1336559",
    "end": "1337559"
  },
  {
    "text": "siloed um so uh especially when there's",
    "start": "1337559",
    "end": "1341320"
  },
  {
    "text": "High barriers to",
    "start": "1341320",
    "end": "1344200"
  },
  {
    "text": "entry the the next thing we've learned",
    "start": "1344840",
    "end": "1347360"
  },
  {
    "text": "is that um open source uh is enormous",
    "start": "1347360",
    "end": "1350200"
  },
  {
    "text": "there's a lot available so so why not",
    "start": "1350200",
    "end": "1352320"
  },
  {
    "text": "reuse it right we've saved a lot of work",
    "start": "1352320",
    "end": "1354919"
  },
  {
    "text": "by reusing what the community have done",
    "start": "1354919",
    "end": "1357640"
  },
  {
    "text": "uh by forking Prometheus as well as",
    "start": "1357640",
    "end": "1359679"
  },
  {
    "text": "using some of the uh promql",
    "start": "1359679",
    "end": "1363559"
  },
  {
    "text": "Library The Next Step we've learned is",
    "start": "1364039",
    "end": "1366440"
  },
  {
    "text": "you don't need to um you don't need to",
    "start": "1366440",
    "end": "1369159"
  },
  {
    "text": "adopt everything all at once if you can",
    "start": "1369159",
    "end": "1371000"
  },
  {
    "text": "adopt incrementally that's really great",
    "start": "1371000",
    "end": "1373799"
  },
  {
    "text": "um we've we've done this and we've got",
    "start": "1373799",
    "end": "1375679"
  },
  {
    "text": "really quick wins early on just by uh",
    "start": "1375679",
    "end": "1378480"
  },
  {
    "text": "exporting the data to Monarch and just",
    "start": "1378480",
    "end": "1380520"
  },
  {
    "text": "having it all in a centralized",
    "start": "1380520",
    "end": "1383880"
  },
  {
    "text": "place next thing we've learned is you do",
    "start": "1383880",
    "end": "1386720"
  },
  {
    "text": "not you are not limited to what uh open",
    "start": "1386720",
    "end": "1390039"
  },
  {
    "text": "source provides so for example we've",
    "start": "1390039",
    "end": "1392320"
  },
  {
    "text": "went ahead and we forked Prometheus we",
    "start": "1392320",
    "end": "1394400"
  },
  {
    "text": "weren't uh we we didn't have to wait to",
    "start": "1394400",
    "end": "1396720"
  },
  {
    "text": "contribute back we just forked and we",
    "start": "1396720",
    "end": "1399000"
  },
  {
    "text": "went ahead with our fork and at some",
    "start": "1399000",
    "end": "1401159"
  },
  {
    "text": "point we'll give back but uh we're not",
    "start": "1401159",
    "end": "1403360"
  },
  {
    "text": "there yet and that's",
    "start": "1403360",
    "end": "1405720"
  },
  {
    "text": "okay and finally the last thing we've",
    "start": "1405720",
    "end": "1408440"
  },
  {
    "text": "learned is that um we can benefit the",
    "start": "1408440",
    "end": "1412000"
  },
  {
    "text": "community and we should um it just",
    "start": "1412000",
    "end": "1414520"
  },
  {
    "text": "evolves the space a lot quicker if we're",
    "start": "1414520",
    "end": "1416520"
  },
  {
    "text": "involved so that's our main motivation",
    "start": "1416520",
    "end": "1419120"
  },
  {
    "text": "for contributing so again we've uh we're",
    "start": "1419120",
    "end": "1422039"
  },
  {
    "text": "involved with the Prometheus remote",
    "start": "1422039",
    "end": "1423400"
  },
  {
    "text": "right spec uh as well as the uh created",
    "start": "1423400",
    "end": "1426960"
  },
  {
    "text": "time stamp in",
    "start": "1426960",
    "end": "1428159"
  },
  {
    "text": "Prometheus uh so it's a win-win for",
    "start": "1428159",
    "end": "1431960"
  },
  {
    "text": "everyone and that is all thank you very",
    "start": "1431960",
    "end": "1434200"
  },
  {
    "text": "much if you have any questions please",
    "start": "1434200",
    "end": "1436320"
  },
  {
    "text": "stand on either aisle uh and ask",
    "start": "1436320",
    "end": "1440060"
  },
  {
    "text": "[Music]",
    "start": "1440060",
    "end": "1443170"
  },
  {
    "text": "us hi uh great talk thank you um I'm",
    "start": "1445320",
    "end": "1449039"
  },
  {
    "text": "wondering how you got around the",
    "start": "1449039",
    "end": "1450960"
  },
  {
    "text": "Prometheus remote rights lack of types",
    "start": "1450960",
    "end": "1454600"
  },
  {
    "text": "when they're sending data to your back",
    "start": "1454600",
    "end": "1455919"
  },
  {
    "text": "end do you just infer it from the metric",
    "start": "1455919",
    "end": "1458960"
  },
  {
    "text": "name yeah so yeah there uh we actually",
    "start": "1458960",
    "end": "1462760"
  },
  {
    "text": "kind of double write um some of the",
    "start": "1462760",
    "end": "1464720"
  },
  {
    "text": "metrics in in a case where where we",
    "start": "1464720",
    "end": "1466960"
  },
  {
    "text": "don't know what the type is um but we",
    "start": "1466960",
    "end": "1469000"
  },
  {
    "text": "don't really use remote right right now",
    "start": "1469000",
    "end": "1470520"
  },
  {
    "text": "we just use a fork um although that that",
    "start": "1470520",
    "end": "1473399"
  },
  {
    "text": "is something that um we're thinking",
    "start": "1473399",
    "end": "1475080"
  },
  {
    "text": "about in the future if we do um support",
    "start": "1475080",
    "end": "1477279"
  },
  {
    "text": "remote right we can continue double",
    "start": "1477279",
    "end": "1479000"
  },
  {
    "text": "writing um unfortunately this means the",
    "start": "1479000",
    "end": "1481080"
  },
  {
    "text": "user does have to pay you know double",
    "start": "1481080",
    "end": "1483880"
  },
  {
    "text": "for that but um it it's a small work",
    "start": "1483880",
    "end": "1486480"
  },
  {
    "text": "around we have gotcha and for your fork",
    "start": "1486480",
    "end": "1489480"
  },
  {
    "text": "are you doing it off of their like",
    "start": "1489480",
    "end": "1491679"
  },
  {
    "text": "writing interface or is it like a whole",
    "start": "1491679",
    "end": "1494240"
  },
  {
    "text": "different interface that you're using",
    "start": "1494240",
    "end": "1496320"
  },
  {
    "text": "yeah I mean so there there are some some",
    "start": "1496320",
    "end": "1499080"
  },
  {
    "text": "types like we know what type of metric",
    "start": "1499080",
    "end": "1501039"
  },
  {
    "text": "it is right we know if it's a counter or",
    "start": "1501039",
    "end": "1502760"
  },
  {
    "text": "a gauge or a histogram um and then uh as",
    "start": "1502760",
    "end": "1506720"
  },
  {
    "text": "far as the actual um value it's always a",
    "start": "1506720",
    "end": "1509600"
  },
  {
    "text": "double in Prometheus so that that's how",
    "start": "1509600",
    "end": "1511760"
  },
  {
    "text": "we can do that there gotcha thank",
    "start": "1511760",
    "end": "1514080"
  },
  {
    "text": "you you're",
    "start": "1514080",
    "end": "1517320"
  },
  {
    "text": "welcome hi uh thanks for the great talk",
    "start": "1517880",
    "end": "1521080"
  },
  {
    "text": "uh how did you translate the native",
    "start": "1521080",
    "end": "1523600"
  },
  {
    "text": "histograms uh into your Monarch because",
    "start": "1523600",
    "end": "1527520"
  },
  {
    "text": "uh uh one of the things that we ran into",
    "start": "1527520",
    "end": "1530480"
  },
  {
    "text": "is also something similar we use uh a",
    "start": "1530480",
    "end": "1533640"
  },
  {
    "text": "licensed um backend monitoring tool that",
    "start": "1533640",
    "end": "1536480"
  },
  {
    "text": "we send the data out to from",
    "start": "1536480",
    "end": "1539320"
  },
  {
    "text": "Prometheus uh but uh we had to translate",
    "start": "1539320",
    "end": "1543320"
  },
  {
    "text": "the native histogram metrics back to the",
    "start": "1543320",
    "end": "1546440"
  },
  {
    "text": "backend compatible thing then the whole",
    "start": "1546440",
    "end": "1549360"
  },
  {
    "text": "purpose of uh encoding the data in the",
    "start": "1549360",
    "end": "1553279"
  },
  {
    "text": "native histogram format is lost how did",
    "start": "1553279",
    "end": "1556159"
  },
  {
    "text": "you solve it for yourself",
    "start": "1556159",
    "end": "1559679"
  },
  {
    "text": "yeah shishi do you want to take this one",
    "start": "1559760",
    "end": "1562720"
  },
  {
    "text": "um so I think the native to histogram is",
    "start": "1562720",
    "end": "1566159"
  },
  {
    "text": "actually pretty close to the um what is",
    "start": "1566159",
    "end": "1569000"
  },
  {
    "text": "a distribution in Monarch um so I Think",
    "start": "1569000",
    "end": "1572360"
  },
  {
    "text": "We're",
    "start": "1572360",
    "end": "1573440"
  },
  {
    "text": "translating",
    "start": "1573440",
    "end": "1575279"
  },
  {
    "text": "there yeah yeah I I think uh so as as",
    "start": "1575279",
    "end": "1579039"
  },
  {
    "text": "long as we scrape a metric endpoint um",
    "start": "1579039",
    "end": "1581480"
  },
  {
    "text": "you you can kind of um infer all the all",
    "start": "1581480",
    "end": "1584520"
  },
  {
    "text": "the uh",
    "start": "1584520",
    "end": "1586039"
  },
  {
    "text": "histogram um value use and sort of",
    "start": "1586039",
    "end": "1588760"
  },
  {
    "text": "translate it directly to Monarch um we",
    "start": "1588760",
    "end": "1590799"
  },
  {
    "text": "do have a problem with uh remote right",
    "start": "1590799",
    "end": "1592960"
  },
  {
    "text": "though because um it's possible remote",
    "start": "1592960",
    "end": "1595919"
  },
  {
    "text": "right doesn't send all of the um all of",
    "start": "1595919",
    "end": "1599080"
  },
  {
    "text": "the histogram metrics at once so that's",
    "start": "1599080",
    "end": "1601440"
  },
  {
    "text": "something we're still trying to figure",
    "start": "1601440",
    "end": "1602520"
  },
  {
    "text": "out how to do when remote Right comes",
    "start": "1602520",
    "end": "1605240"
  },
  {
    "text": "out thank you uh one other question uh",
    "start": "1605240",
    "end": "1608799"
  },
  {
    "text": "is that uh when you split the queries uh",
    "start": "1608799",
    "end": "1612240"
  },
  {
    "text": "with mql and uh uh promql stuff like",
    "start": "1612240",
    "end": "1616440"
  },
  {
    "text": "that uh did you notice additional",
    "start": "1616440",
    "end": "1619120"
  },
  {
    "text": "latencies uh induced because of it and",
    "start": "1619120",
    "end": "1622559"
  },
  {
    "text": "how did you solve for",
    "start": "1622559",
    "end": "1624200"
  },
  {
    "text": "it um yeah so translating the um query",
    "start": "1624200",
    "end": "1630880"
  },
  {
    "text": "to mql did improve our latency actually",
    "start": "1630880",
    "end": "1633200"
  },
  {
    "text": "by quite a lot um just because Monarch",
    "start": "1633200",
    "end": "1636440"
  },
  {
    "text": "is distributed and and it's basically",
    "start": "1636440",
    "end": "1638520"
  },
  {
    "text": "more efficient that way whereas we had",
    "start": "1638520",
    "end": "1640600"
  },
  {
    "text": "the Prometheus node evaluating the whole",
    "start": "1640600",
    "end": "1642159"
  },
  {
    "text": "query um that was pretty expensive for",
    "start": "1642159",
    "end": "1643960"
  },
  {
    "text": "us",
    "start": "1643960",
    "end": "1646279"
  },
  {
    "text": "so okay cool if anyone has no more",
    "start": "1646279",
    "end": "1649080"
  },
  {
    "text": "questions then we can end here",
    "start": "1649080",
    "end": "1652679"
  },
  {
    "text": "thanks",
    "start": "1652679",
    "end": "1655679"
  }
]