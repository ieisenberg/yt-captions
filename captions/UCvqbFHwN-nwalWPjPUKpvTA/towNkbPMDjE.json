[
  {
    "text": "Hello friends Welcome to our illustrious panel discussion it's exploring ebpf use",
    "start": "80",
    "end": "8880"
  },
  {
    "text": "cases in Cloud native security so let's start with in",
    "start": "8880",
    "end": "15000"
  },
  {
    "text": "introductions everyone introduce yourself please and make sure to brag a lot because we're establishing trust why",
    "start": "15000",
    "end": "21760"
  },
  {
    "text": "do we care what you have to say Maya do you want to start sure that sounds good hi everyone my name is Maya sing I am am",
    "start": "21760",
    "end": "30199"
  },
  {
    "text": "a product manager at Microsoft and at Microsoft I work on the Inspector Gadget",
    "start": "30199",
    "end": "36480"
  },
  {
    "text": "project which if you were here earlier Ben and door uh gave a shout out to so that was awesome um Inspector Gadget for",
    "start": "36480",
    "end": "44440"
  },
  {
    "text": "those of you who don't know is a tool and framework for data collection and systems inspection on kubernetes and",
    "start": "44440",
    "end": "52280"
  },
  {
    "text": "Linux and uses evf great um hi everybody my name is",
    "start": "52280",
    "end": "58000"
  },
  {
    "text": "Courtney Nickerson uh I am a senior developer Advocate at cubop I work on the test Cube project test cube is an",
    "start": "58000",
    "end": "65680"
  },
  {
    "text": "open- source orchestration and execution framework for your testing",
    "start": "65680",
    "end": "71479"
  },
  {
    "text": "environments hello everyone my name is Anna kinska I work at ISO valent I'm a",
    "start": "71479",
    "end": "77119"
  },
  {
    "text": "software engineer working on mainly on tetragon which is um project using evf",
    "start": "77119",
    "end": "84920"
  },
  {
    "text": "for security observability and enforcement",
    "start": "84920",
    "end": "90360"
  },
  {
    "text": "hi um I'd like to say good morning but you're probably thinking about lunch um my name is uh oater um I am uh the",
    "start": "91280",
    "end": "98280"
  },
  {
    "text": "developer Advocate at armo developer advocate for armo and Cube Escape um we",
    "start": "98280",
    "end": "104040"
  },
  {
    "text": "use ebpf both in armo and in Cub Escape for um runtime security or uh cloud and",
    "start": "104040",
    "end": "111960"
  },
  {
    "text": "application detect and response um both in cubes escape and in runtime amazing",
    "start": "111960",
    "end": "119240"
  },
  {
    "text": "and I'm with NE I'm moderating today I'm a cncf Ambassador a cubon keynote",
    "start": "119240",
    "end": "124320"
  },
  {
    "text": "speaker platform day keynote speaker I host some shows a podcast whatever I'm",
    "start": "124320",
    "end": "130599"
  },
  {
    "text": "me um so I'm so excited to explore these ebpf use cases in security and it's kind",
    "start": "130599",
    "end": "137680"
  },
  {
    "text": "of a big topic so we had a little bit of discussion about where to start but we're going to dig in first with network",
    "start": "137680",
    "end": "144760"
  },
  {
    "text": "security how can ebpf be used to enhance Network secur Security in uh in",
    "start": "144760",
    "end": "151640"
  },
  {
    "text": "kubernetes Maya will you start please sure thanks Whitney so when we're",
    "start": "151640",
    "end": "157120"
  },
  {
    "text": "thinking about ebpf and Cloud native network security what comes to mind",
    "start": "157120",
    "end": "162920"
  },
  {
    "text": "often times is using ebpf for filtering and managing Network traffic and that",
    "start": "162920",
    "end": "169319"
  },
  {
    "text": "can take uh the form of firewalls for example so how this works is ebpf",
    "start": "169319",
    "end": "176239"
  },
  {
    "text": "programs are event driven so they are execut uted when they run past Hooks and",
    "start": "176239",
    "end": "182319"
  },
  {
    "text": "we can use Network hooks that will uh trigger the ebpf program and we can",
    "start": "182319",
    "end": "189879"
  },
  {
    "text": "filter Network packets based on certain criteria like IP address sources and",
    "start": "189879",
    "end": "197319"
  },
  {
    "text": "destinations and this allows us to build some rules build some firewall uh",
    "start": "197319",
    "end": "203599"
  },
  {
    "text": "capabilities using ebpf and if you're new to ebpf and interested in getting",
    "start": "203599",
    "end": "209360"
  },
  {
    "text": "into building your own firewall XDP which is Express data path is a good",
    "start": "209360",
    "end": "216120"
  },
  {
    "text": "tool that you can use to get started with using ebpf for firewalls in",
    "start": "216120",
    "end": "222080"
  },
  {
    "text": "particular um what's cool about XDP is it actually um hooks in at the uh",
    "start": "222080",
    "end": "227959"
  },
  {
    "text": "network interface control uh Driver part of the uh stack so that is actually the",
    "start": "227959",
    "end": "234400"
  },
  {
    "text": "earliest point where we can filter uh packets and that results in a very",
    "start": "234400",
    "end": "239959"
  },
  {
    "text": "efficient and performant way to build these firewalls and uh execute the ebpf",
    "start": "239959",
    "end": "246360"
  },
  {
    "text": "programs so um yeah all that said uh ebpf is a very uh good tool when it",
    "start": "246360",
    "end": "252640"
  },
  {
    "text": "comes to networking security um definitely evf for firewalls awesome OA",
    "start": "252640",
    "end": "260759"
  },
  {
    "text": "do you have something to end yeah um this is a little bit about um I guess the crossover between runtime security",
    "start": "260759",
    "end": "267680"
  },
  {
    "text": "and uh posture management so basically if you you can use ebpf to understand",
    "start": "267680",
    "end": "274680"
  },
  {
    "text": "your application uh again if you were here before then uh you know that uh",
    "start": "274680",
    "end": "280080"
  },
  {
    "text": "devs don't really um get setcom profiles they don't really pay attention to what",
    "start": "280080",
    "end": "285440"
  },
  {
    "text": "their application needs in terms of networking either uh however uh what we can do is use EPF to understand what",
    "start": "285440",
    "end": "292639"
  },
  {
    "text": "these applications need and leave only that open well whereas uh creating um",
    "start": "292639",
    "end": "299720"
  },
  {
    "text": "creating an automation of how to create um network security profiles or um and",
    "start": "299720",
    "end": "306360"
  },
  {
    "text": "and then close down what's not necessary and just leave only the Necessary Things open so we use runtime to inform",
    "start": "306360",
    "end": "314199"
  },
  {
    "text": "posture so the the people security people often don't understand what an",
    "start": "314199",
    "end": "319759"
  },
  {
    "text": "application's actually doing an ebpf can help give security folks that visibility",
    "start": "319759",
    "end": "326080"
  },
  {
    "text": "and therefore they can do better security that's awesome so that's",
    "start": "326080",
    "end": "331240"
  },
  {
    "text": "Network how I can help out the network layer how can ebpf help with runtime security and we start with this one uh",
    "start": "331240",
    "end": "339400"
  },
  {
    "text": "sure so oh there's so much really we can do with for for runtime security with",
    "start": "339400",
    "end": "345080"
  },
  {
    "text": "BPF um tetragon project uh uses cbpf for two main aspects of uh runtime security",
    "start": "345080",
    "end": "352880"
  },
  {
    "text": "observability and enforcement and using BPF means that we can hook into any",
    "start": "352880",
    "end": "359759"
  },
  {
    "text": "point in Linux kernel what is incredibly powerful and very flexible in case we",
    "start": "359759",
    "end": "366800"
  },
  {
    "text": "want for example uh detect uh cve uh exploits so we over the past few years",
    "start": "366800",
    "end": "373319"
  },
  {
    "text": "we went through this exercise several times Whenever there is a high severity announced and it's like on the front",
    "start": "373319",
    "end": "380000"
  },
  {
    "text": "page of all the newspapers we very quickly find an appropriate hook point",
    "start": "380000",
    "end": "385080"
  },
  {
    "text": "in the Linux Kel and we attach to it we publish and document a policy we can have it like within an hour and then",
    "start": "385080",
    "end": "392280"
  },
  {
    "text": "security Engineers can just take it policy apply to their um systems without",
    "start": "392280",
    "end": "398919"
  },
  {
    "text": "reinstalling anything without restarting anything with minimal overhead because everything runs in K so the overhead is",
    "start": "398919",
    "end": "405360"
  },
  {
    "text": "minimal so security Engineers can just take this policy and apply it uh not worrying really about an side effects",
    "start": "405360",
    "end": "413440"
  },
  {
    "text": "and uh cing back to network security uh we can hook into",
    "start": "413440",
    "end": "419879"
  },
  {
    "text": "networking stock um so can I can I restate what you just said to make sure",
    "start": "419879",
    "end": "425440"
  },
  {
    "text": "I understood correctly so what you're saying is when there's a new vulnerability we can now mitigate that",
    "start": "425440",
    "end": "431960"
  },
  {
    "text": "vulnerability instead of needing to find it everywhere in all the applications and all the dependencies we can fix it",
    "start": "431960",
    "end": "437879"
  },
  {
    "text": "at the kernel level is that what you just said yes wow this is this is this is what we can do with the enforcement",
    "start": "437879",
    "end": "444560"
  },
  {
    "text": "base um so for a network uh secureity",
    "start": "444560",
    "end": "450120"
  },
  {
    "text": "use cases we can hook into Linux Network in stack we can do things like um",
    "start": "450120",
    "end": "455599"
  },
  {
    "text": "capture bites sent between applications into external destinations so uh detect",
    "start": "455599",
    "end": "460960"
  },
  {
    "text": "things like data extion detect suspicious connections to external",
    "start": "460960",
    "end": "467120"
  },
  {
    "text": "destinations um to unknown URLs for example and uh process um visibility is",
    "start": "467120",
    "end": "476759"
  },
  {
    "text": "uh another big one so this is kind of the basic use case for for tetragon that many tetragon users start with",
    "start": "476759",
    "end": "484879"
  },
  {
    "text": "monitoring suspicious processes things like uh privilege processes privilege",
    "start": "484879",
    "end": "490159"
  },
  {
    "text": "escalations many different ways of escalating privileges um late process",
    "start": "490159",
    "end": "496319"
  },
  {
    "text": "execution so in kubernetes world we usually expect um process start together",
    "start": "496319",
    "end": "501800"
  },
  {
    "text": "with a pot if another process associated with this port starts a long time after",
    "start": "501800",
    "end": "507919"
  },
  {
    "text": "after the port has started this might be suspicious this might be an attacker so we can detect things like this um we can",
    "start": "507919",
    "end": "514279"
  },
  {
    "text": "monitor file operations uh such like um edits to sensitive files and then",
    "start": "514279",
    "end": "522719"
  },
  {
    "text": "there's an enforcement piece uh so doing enforcement in vpf is to put it very",
    "start": "522719",
    "end": "530519"
  },
  {
    "text": "simply more secure uh than doing a similar thing in user space because we",
    "start": "530519",
    "end": "536240"
  },
  {
    "text": "can actually block the low level operation before kernel completes it if",
    "start": "536240",
    "end": "542360"
  },
  {
    "text": "we try to do something similar in user space then we would have to either assume something how application",
    "start": "542360",
    "end": "549279"
  },
  {
    "text": "executed this operation um or we would have to revert a operation that is",
    "start": "549279",
    "end": "554560"
  },
  {
    "text": "already completed by the kernel uh so for example if we want to enforce uh",
    "start": "554560",
    "end": "560480"
  },
  {
    "text": "protect sensitive files so enforce that only allowed uh applications can edit a",
    "start": "560480",
    "end": "568000"
  },
  {
    "text": "file for example a password then when we we hook into kernel",
    "start": "568000",
    "end": "573880"
  },
  {
    "text": "function that is executed on every file modification and we don't allow it to",
    "start": "573880",
    "end": "579560"
  },
  {
    "text": "complete the operation so we for example overwrite the return value of the function and we send a uhill signal to",
    "start": "579560",
    "end": "587320"
  },
  {
    "text": "kill the process that is trying to modify so unlike how it used to be where",
    "start": "587320",
    "end": "592399"
  },
  {
    "text": "something bad would happen and then you'd get an alert and then you'd stop it now that bad thing can't even happen",
    "start": "592399",
    "end": "599440"
  },
  {
    "text": "happen it's it's prevented from happening at all yes exactly and we we",
    "start": "599440",
    "end": "604800"
  },
  {
    "text": "do it directly in the Kel so an attacker can't really find know a way around it",
    "start": "604800",
    "end": "610920"
  },
  {
    "text": "because you know there are many different ways to edit a file like you might be surprised how in how many",
    "start": "610920",
    "end": "615959"
  },
  {
    "text": "different ways applications can do it so yeah doing it directly in the ker we we are just making it more secure when you",
    "start": "615959",
    "end": "621839"
  },
  {
    "text": "say monitor uh suspicious activity are you saying so like uh escalation like",
    "start": "621839",
    "end": "629800"
  },
  {
    "text": "privilege escalation you're not saying no people can't do it you can do something that says if this is happening",
    "start": "629800",
    "end": "635399"
  },
  {
    "text": "we're going to start capturing more data what yeah so we can uh we can do two",
    "start": "635399",
    "end": "641560"
  },
  {
    "text": "things essentially we can first audit uh who is doing the who is what processes",
    "start": "641560",
    "end": "647880"
  },
  {
    "text": "run with high privileges um and then we can also uh just list allow list only",
    "start": "647880",
    "end": "658079"
  },
  {
    "text": "processes that we know are allowed to run with high privileges because usually",
    "start": "658079",
    "end": "663320"
  },
  {
    "text": "we need right we need some processes to read sensitive files to run with high privileges but usually this is small",
    "start": "663320",
    "end": "668920"
  },
  {
    "text": "number of applications that we know and we can just block anything else amazing",
    "start": "668920",
    "end": "674920"
  },
  {
    "text": "Courtney would you like to add about runtime security I mean what Anna just",
    "start": "674920",
    "end": "680040"
  },
  {
    "text": "said is absolutely robust and spectacular and and she talked about almost everything you can do in runtime",
    "start": "680040",
    "end": "686480"
  },
  {
    "text": "security uh with ebpf I think the biggest thing to highlight here and and what Anna was really saying is the",
    "start": "686480",
    "end": "692560"
  },
  {
    "text": "paradigm shift that's happened because ebpf is running from the kernel it's such a lightweight way of doing runtime",
    "start": "692560",
    "end": "699320"
  },
  {
    "text": "security it's so much more efficient that you're actually seeing a huge number of applications that using",
    "start": "699320",
    "end": "705360"
  },
  {
    "text": "traditional ways of of running your runtime security just aren't possible so a lot of people are still using a",
    "start": "705360",
    "end": "711959"
  },
  {
    "text": "traditional method of having a combination of tools where you've got something that's running some scans in",
    "start": "711959",
    "end": "717079"
  },
  {
    "text": "combination with some agents that are deployed you have all of those things that you have to maintain it introduces",
    "start": "717079",
    "end": "722240"
  },
  {
    "text": "a huge amount of latency into your system it can also introduce possible vulnerabilities and other issues that",
    "start": "722240",
    "end": "729000"
  },
  {
    "text": "you're going to have to deal with um as well as consuming huge amounts of resources which is something that none",
    "start": "729000",
    "end": "734279"
  },
  {
    "text": "of us want to be consuming huge amounts of in the cloud space uh but in using EF",
    "start": "734279",
    "end": "740440"
  },
  {
    "text": "as such a lightweight way of of doing your runtime security you're really um going to reap all of the benefits that",
    "start": "740440",
    "end": "747120"
  },
  {
    "text": "Anna has already talked about um as well as as lower a lot of your overhead and",
    "start": "747120",
    "end": "753240"
  },
  {
    "text": "and complications that that traditional methods um are still still causing",
    "start": "753240",
    "end": "758519"
  },
  {
    "text": "people amazing OSHA what would you like to add um I'd like to add that you know",
    "start": "758519",
    "end": "763959"
  },
  {
    "text": "some of the things that we do when we're uh when we Define runtime security rules is we make assumptions um I used to be",
    "start": "763959",
    "end": "770560"
  },
  {
    "text": "told about when you make you assume you make a out of you and me but whatever um",
    "start": "770560",
    "end": "776040"
  },
  {
    "text": "but my point is is is that um we make assumptions we might get caught",
    "start": "776040",
    "end": "781800"
  },
  {
    "text": "up in tunnel vision we might get caught up in other problems we might not be",
    "start": "781800",
    "end": "786880"
  },
  {
    "text": "thinking outside the box especially specifically now uh the thing is is that",
    "start": "786880",
    "end": "792240"
  },
  {
    "text": "the hackers or the potential hackers or malicious actors they do think outside the box because I think that's just the",
    "start": "792240",
    "end": "798920"
  },
  {
    "text": "way they do their job or so to speak um so my point is is um when uh you use",
    "start": "798920",
    "end": "807120"
  },
  {
    "text": "ebpf in order to Benchmark Mark normal application activity and you know what",
    "start": "807120",
    "end": "813079"
  },
  {
    "text": "is ordinary what is allowed what is okay Anna mentioned that you know file",
    "start": "813079",
    "end": "818360"
  },
  {
    "text": "systems are opened uh in many many ways um um and sometimes an application needs",
    "start": "818360",
    "end": "826000"
  },
  {
    "text": "privileged access and sometimes it doesn't and all of this stuff when you have to think about it manually or you",
    "start": "826000",
    "end": "832800"
  },
  {
    "text": "know you don't think manually but you get my point we have to think about all of these situations and Implement them",
    "start": "832800",
    "end": "838480"
  },
  {
    "text": "it's it's a lot of work um another thing that you can do is use eepf in order to",
    "start": "838480",
    "end": "843560"
  },
  {
    "text": "Benchmark this normal activity and then when during runtime you are still using",
    "start": "843560",
    "end": "849920"
  },
  {
    "text": "ebpf in order to monitor what's actually going on and when ebpf kind of sees",
    "start": "849920",
    "end": "856000"
  },
  {
    "text": "something that's out of the out of the ordinary then it can alert or it can",
    "start": "856000",
    "end": "861199"
  },
  {
    "text": "respond by you either you know quarantining a process uh killing a process allowing for graceful shutdown",
    "start": "861199",
    "end": "867839"
  },
  {
    "text": "there are many many options but um but again this allows you that flexibility of not having to think of",
    "start": "867839",
    "end": "874160"
  },
  {
    "text": "every single thing that could wrong go wrong because that makes for sad",
    "start": "874160",
    "end": "879800"
  },
  {
    "text": "people so it's a a more zero trust approach where you maybe don't do anything unless you understand what what",
    "start": "879800",
    "end": "886920"
  },
  {
    "text": "is expected and then Define everything based on what's expected and say no to everything else um I think that's a good",
    "start": "886920",
    "end": "893959"
  },
  {
    "text": "M like mental modeled real life that's how I do my to-do list just pick one important thing don't worry about all",
    "start": "893959",
    "end": "899440"
  },
  {
    "text": "the possible things um so one thing that you all kind of touched on that I was",
    "start": "899440",
    "end": "905040"
  },
  {
    "text": "curious about is so you've convinced me ebpf is extremely powerful and I always",
    "start": "905040",
    "end": "912920"
  },
  {
    "text": "think like with great power comes great responsibility right like how if this",
    "start": "912920",
    "end": "918079"
  },
  {
    "text": "incredibly powerful technology fell into the hands of the wrong person it could have of disastrous results so what",
    "start": "918079",
    "end": "926320"
  },
  {
    "text": "measures are being taken to make sure that these tools ebpf access colel access doesn't fall",
    "start": "926320",
    "end": "932560"
  },
  {
    "text": "into the wrong hands uh Anna do you want to start this one um sure so the first thing that we",
    "start": "932560",
    "end": "941120"
  },
  {
    "text": "can or maybe we should do is restrict who is able to vote BPF programs into",
    "start": "941120",
    "end": "948279"
  },
  {
    "text": "the K right um so and when you say who do you mean people or programs or both",
    "start": "948279",
    "end": "953480"
  },
  {
    "text": "programs in general programs and then you know access to this programs configuration",
    "start": "953480",
    "end": "959600"
  },
  {
    "text": "is another thing like who people who people can configure them um so one",
    "start": "959600",
    "end": "966160"
  },
  {
    "text": "thing we could do is to hook um surprise surprise we can do this with evf too uh",
    "start": "966160",
    "end": "973839"
  },
  {
    "text": "we can hook into BPF Cisco that is responsible for loading BPF programs but",
    "start": "973839",
    "end": "981800"
  },
  {
    "text": "actually Cisco are sometimes problematic in security context uh so what we prefer",
    "start": "981800",
    "end": "986959"
  },
  {
    "text": "doing using tetragon is to to hook into ebpf verifier so ebpf verifier is a",
    "start": "986959",
    "end": "992240"
  },
  {
    "text": "component that um run interal component that verifies the BPF programs are safe",
    "start": "992240",
    "end": "997440"
  },
  {
    "text": "to run an EPF verifier is specific to tetragon or it's a it's it's EF it's BPF",
    "start": "997440",
    "end": "1004560"
  },
  {
    "text": "it's component in the Linux kernel um that is run every time that BPF programs",
    "start": "1004560",
    "end": "1010959"
  },
  {
    "text": "is loaded and we can hook into it uh like to any other hook point in in the",
    "start": "1010959",
    "end": "1016519"
  },
  {
    "text": "kernel and we can check if the program that is loading BPF programs from apps",
    "start": "1016519",
    "end": "1023120"
  },
  {
    "text": "is in in allow listed in the policy um so yeah then we can also audit what",
    "start": "1023120",
    "end": "1030400"
  },
  {
    "text": "exactly what programs and Maps it loads exactly and so you do how often do you",
    "start": "1030400",
    "end": "1039160"
  },
  {
    "text": "manipulate ebpf directly and how much are you using ebpf tools to manipulate",
    "start": "1039160",
    "end": "1045120"
  },
  {
    "text": "the Linux kernel um so typically you um you",
    "start": "1045120",
    "end": "1051240"
  },
  {
    "text": "typically you have a user space agent that loads all these BPF programs right",
    "start": "1051240",
    "end": "1056600"
  },
  {
    "text": "so this this is done only on the startup of BPF agents um but then you can load",
    "start": "1056600",
    "end": "1063960"
  },
  {
    "text": "some um extra policies so policies are typically loaded dynamically so you know",
    "start": "1063960",
    "end": "1071080"
  },
  {
    "text": "it it depends how often security Engineers are changing their policies okay and then also this there is like um",
    "start": "1071080",
    "end": "1079200"
  },
  {
    "text": "so the power of BPF is that we can share some data between application and kernel",
    "start": "1079200",
    "end": "1086080"
  },
  {
    "text": "so we can for example pass kubernetes metadata or um some other application",
    "start": "1086080",
    "end": "1091120"
  },
  {
    "text": "Level things to BPF Maps so this is another point of like interaction cool",
    "start": "1091120",
    "end": "1096280"
  },
  {
    "text": "Maya would you like to add about how we can keep it safe yeah definitely I think",
    "start": "1096280",
    "end": "1101400"
  },
  {
    "text": "um your earlier question was a good one around like many times folks aren't writing their own ebpf programs we're",
    "start": "1101400",
    "end": "1107799"
  },
  {
    "text": "using ebpf programs written by others and naturally when you're thinking about",
    "start": "1107799",
    "end": "1113240"
  },
  {
    "text": "oh uh I want to make sure my program is coming from a trusted Source we're thinking about signing the programs and",
    "start": "1113240",
    "end": "1120960"
  },
  {
    "text": "the uh checking the signatures of the programs but with ebpf programs in particular it's a little tricky because",
    "start": "1120960",
    "end": "1127840"
  },
  {
    "text": "the programs undergo some changes before being loaded into the kernel so I am",
    "start": "1127840",
    "end": "1133880"
  },
  {
    "text": "really excited about what the Inspector Gadget project is doing we have our BPF",
    "start": "1133880",
    "end": "1139400"
  },
  {
    "text": "programs housed in oci images these are the gadgets that correspond to Inspector",
    "start": "1139400",
    "end": "1145080"
  },
  {
    "text": "Gadget and we use coign to sign these uh oci images so that when you are running",
    "start": "1145080",
    "end": "1151960"
  },
  {
    "text": "the gadgets at runtime we're checking to make sure the signature is there and",
    "start": "1151960",
    "end": "1157159"
  },
  {
    "text": "valid so that you can trust that the ebpf program that you're running is",
    "start": "1157159",
    "end": "1162840"
  },
  {
    "text": "verified and legitimate so that as you're thinking about making sure your system is safe um you want to make sure",
    "start": "1162840",
    "end": "1170240"
  },
  {
    "text": "that the ebpf program is coming from a legitimate source so checking that um",
    "start": "1170240",
    "end": "1175720"
  },
  {
    "text": "key is a great way I think that's like a good uh mechanism that's in place to",
    "start": "1175720",
    "end": "1181400"
  },
  {
    "text": "make security a little bit easier for these uh ebpf programs that makes so",
    "start": "1181400",
    "end": "1186520"
  },
  {
    "text": "much sense is that common practice with other tools too or are you pioneering that I am not sure if other tools house",
    "start": "1186520",
    "end": "1194280"
  },
  {
    "text": "the ebpf programs in oci images and have the same Gadget framework but the good",
    "start": "1194280",
    "end": "1200120"
  },
  {
    "text": "thing about Inspector Gadget is you can build your own Gadget so please uh put your evf programs inside gadgets and use",
    "start": "1200120",
    "end": "1207120"
  },
  {
    "text": "that assigning functionality and because it's a it's an advantage outside of the even you know the enrichment with",
    "start": "1207120",
    "end": "1212960"
  },
  {
    "text": "Inspector Gadget and all all kubernetes containers all that good stuff also the security of the images and the ebpf",
    "start": "1212960",
    "end": "1220280"
  },
  {
    "text": "programs is a huge plus as well it provides a framework for writing your own EF program so that you don't have to",
    "start": "1220280",
    "end": "1226440"
  },
  {
    "text": "worry about it from the ground up yeah exactly that makes so much sense so another thing ebpf makes me",
    "start": "1226440",
    "end": "1233039"
  },
  {
    "text": "think about is is we're talking about between Network and runtime security we're talking about monitoring all of",
    "start": "1233039",
    "end": "1240440"
  },
  {
    "text": "the everything that comes through the kernel which sounds like a tremendous amount of information and it sounds um",
    "start": "1240440",
    "end": "1246919"
  },
  {
    "text": "it sounds bad for performance it sounds expensive so how could let's talk about",
    "start": "1246919",
    "end": "1252640"
  },
  {
    "text": "cost like what should an organization do to maximize security and minimize costs",
    "start": "1252640",
    "end": "1259159"
  },
  {
    "text": "let's start with Courtney on this one yeah um I actually talked with Duffy",
    "start": "1259159",
    "end": "1264240"
  },
  {
    "text": "kie about this in preparation for this event uh to get more context around this",
    "start": "1264240",
    "end": "1269799"
  },
  {
    "text": "and what he explained to me was that a lot of times people do think that getting started with ebpf is going to be",
    "start": "1269799",
    "end": "1275120"
  },
  {
    "text": "far more expensive mostly because of the monitoring aspect and that you can monitor everything um but that it's",
    "start": "1275120",
    "end": "1281200"
  },
  {
    "text": "actually far from the reality the expense can actually reduce drastically",
    "start": "1281200",
    "end": "1286320"
  },
  {
    "text": "implementing ebpf because it is running from the very first thing starting starting off",
    "start": "1286320",
    "end": "1291440"
  },
  {
    "text": "from the beginning is that you're not using anywhere near as much CPU or memory your resources are are",
    "start": "1291440",
    "end": "1296559"
  },
  {
    "text": "drastically reduced in terms of um running abpf because it's running at the kernel level it's not running on other",
    "start": "1296559",
    "end": "1303960"
  },
  {
    "text": "on other kubernetes resources uh in doing that it also reduces the amount of",
    "start": "1303960",
    "end": "1309400"
  },
  {
    "text": "resources you need for loads of other things and so turns out um while you can",
    "start": "1309400",
    "end": "1314880"
  },
  {
    "text": "monitor everything a and maybe you want to do so or maybe you don't the concept",
    "start": "1314880",
    "end": "1320400"
  },
  {
    "text": "of having that many things to monitor um you can actually reduce the the amount",
    "start": "1320400",
    "end": "1325559"
  },
  {
    "text": "of expense that you have in doing so by by implementing ebpf instead of other tools so I think that's something",
    "start": "1325559",
    "end": "1332200"
  },
  {
    "text": "especially for people who might be intimidated with the technology aspect of getting started um there's so many",
    "start": "1332200",
    "end": "1338919"
  },
  {
    "text": "resources out there to get started but also the the long-term implementation",
    "start": "1338919",
    "end": "1344000"
  },
  {
    "text": "because it's also a way to be far more proactive in in your runtime security for example exle you can then actively",
    "start": "1344000",
    "end": "1350320"
  },
  {
    "text": "be monitoring things and stop certain events from happening uh proactively",
    "start": "1350320",
    "end": "1355520"
  },
  {
    "text": "which are then going to cause fixes to happen much earlier on that's going to save you a lot more time and money so",
    "start": "1355520",
    "end": "1361520"
  },
  {
    "text": "there are a lot of different aspects of once you actually get started with ebpf that that are going to save you huge",
    "start": "1361520",
    "end": "1366679"
  },
  {
    "text": "amounts of of money um and resources on the back side cool OT do you have any",
    "start": "1366679",
    "end": "1372919"
  },
  {
    "text": "comments about cost I I I I wrote a note I'm sorry I I was sure I was I I",
    "start": "1372919",
    "end": "1379760"
  },
  {
    "text": "would fudge the numbers and I wanted to be keep it real here awesome statistics I love it so so so basically um I'm",
    "start": "1379760",
    "end": "1386080"
  },
  {
    "text": "talking here from the point of view of Cub Escape at the moment uh because cubes Escape is a tool that uses ebpf",
    "start": "1386080",
    "end": "1392000"
  },
  {
    "text": "via Inspector Gadget by the way um so we uh we were very um um cognizant or tried",
    "start": "1392000",
    "end": "1400279"
  },
  {
    "text": "to be really really aware of keeping um of keep resource consumption very very low because we know that um that that",
    "start": "1400279",
    "end": "1406960"
  },
  {
    "text": "can be a very painful point when it comes to Cloud um so um we tested on a",
    "start": "1406960",
    "end": "1413679"
  },
  {
    "text": "spec you know not all nodes were created equal okay so uh this changes between environments but um but we tested this",
    "start": "1413679",
    "end": "1420720"
  },
  {
    "text": "out and we found an average of um 1% to 2 and a half% of CPU um uh usage and uh",
    "start": "1420720",
    "end": "1427760"
  },
  {
    "text": "about 1% of ram per node um so again these are really small numbers maybe",
    "start": "1427760",
    "end": "1434120"
  },
  {
    "text": "even negligent um and and that's the idea keeping it really really um small lightweight uh actually using that idea",
    "start": "1434120",
    "end": "1442480"
  },
  {
    "text": "of EPF of it being both uh safe and lightweight in order to not pass the",
    "start": "1442480",
    "end": "1447799"
  },
  {
    "text": "buck on to uh users um that will consider this the cost of doing business",
    "start": "1447799",
    "end": "1453960"
  },
  {
    "text": "it doesn't have to be if can you have more than one program",
    "start": "1453960",
    "end": "1460039"
  },
  {
    "text": "like if you're collecting all of the if you're monitoring all the processes on a node can more than one program use that",
    "start": "1460039",
    "end": "1467279"
  },
  {
    "text": "monitoring information or is that monitoring happening in a double way does that make sense if tetragon is",
    "start": "1467279",
    "end": "1473840"
  },
  {
    "text": "monitoring every single process on a node and inspector gadgets monitoring every process on a node is every process",
    "start": "1473840",
    "end": "1479799"
  },
  {
    "text": "being monitored twice um essentially if you have two",
    "start": "1479799",
    "end": "1485799"
  },
  {
    "text": "different ebpf based tools that like you know want to monitor every process then",
    "start": "1485799",
    "end": "1491320"
  },
  {
    "text": "uh yeah essentially if they like don't share BPF programs or BPF Maps then",
    "start": "1491320",
    "end": "1497440"
  },
  {
    "text": "every process would be mon twice um this is something you know to work on in BF",
    "start": "1497440",
    "end": "1503880"
  },
  {
    "text": "Community I'm totally going off scpt to many many know I was going to ask this question many people are concerned about",
    "start": "1503880",
    "end": "1511240"
  },
  {
    "text": "you know running thousands of agents that are doing some EPF stuff and that are monitoring same things uh so this is",
    "start": "1511240",
    "end": "1519440"
  },
  {
    "text": "definitely something that we should work on us as Community to to kind of work",
    "start": "1519440",
    "end": "1525640"
  },
  {
    "text": "work together and avoid like having Med TOS doing the same thing excellent is",
    "start": "1525640",
    "end": "1530960"
  },
  {
    "text": "there anything else you'd like to say on the on the cost piece in the performance piece um yeah so",
    "start": "1530960",
    "end": "1538200"
  },
  {
    "text": "um if uh once when we are um monitoring hooking to different points in the",
    "start": "1538200",
    "end": "1544720"
  },
  {
    "text": "kernel um one thing that uh we definitely want to avoid like you know",
    "start": "1544720",
    "end": "1551240"
  },
  {
    "text": "emitting events on every single thing that that happens in a kernel and even",
    "start": "1551240",
    "end": "1557279"
  },
  {
    "text": "if we do this even if like emit events on every single thing then what do you do with these events right like a human",
    "start": "1557279",
    "end": "1563880"
  },
  {
    "text": "can't just you know process constant stream of everything that's happening we need to somehow filter these events",
    "start": "1563880",
    "end": "1570559"
  },
  {
    "text": "aggregate them somehow process them to actually find interesting things there and this is typically done by some user",
    "start": "1570559",
    "end": "1576840"
  },
  {
    "text": "space data processing a lot of things that we actually do with BPF is simply moving what we typically do like data",
    "start": "1576840",
    "end": "1584960"
  },
  {
    "text": "processing that we typically do in user space to the kernel so we filter in the kernel we don't for example monitor",
    "start": "1584960",
    "end": "1591600"
  },
  {
    "text": "every single fire operation we emit events only on uh operations that seem",
    "start": "1591600",
    "end": "1597240"
  },
  {
    "text": "suspicious um we aggregate in kernel so this is particularly important for",
    "start": "1597240",
    "end": "1602440"
  },
  {
    "text": "Network events when we you know we don't want to emit every single um how many",
    "start": "1602440",
    "end": "1608120"
  },
  {
    "text": "bytes were sent on every single message but rather aggregate uh this bite counters in the kernel um things like",
    "start": "1608120",
    "end": "1615279"
  },
  {
    "text": "that passsing layer 7even protocols is another thing that is typically done in user space but we actually can uh we",
    "start": "1615279",
    "end": "1621840"
  },
  {
    "text": "wrote DNS parser in BPF so um parsing uh",
    "start": "1621840",
    "end": "1627039"
  },
  {
    "text": "DNS names and you know external URLs can be done in Kel too so in this way we are",
    "start": "1627039",
    "end": "1633200"
  },
  {
    "text": "actually uh reducing the overhead so because we instead of doing expensive",
    "start": "1633200",
    "end": "1638679"
  },
  {
    "text": "data processing um in user space after producing all of these events we can",
    "start": "1638679",
    "end": "1644200"
  },
  {
    "text": "actually filter aggregate process directly in the kernel so we alert users",
    "start": "1644200",
    "end": "1649399"
  },
  {
    "text": "only on uh suspicious interesting or otherwise important statistics so if you",
    "start": "1649399",
    "end": "1655559"
  },
  {
    "text": "were trying to do that without BPF ebpf then you're going to save a lot of performance time and money yeah if if",
    "start": "1655559",
    "end": "1663000"
  },
  {
    "text": "you can you can do a lot of these things like without ebpf uh just collecting",
    "start": "1663000",
    "end": "1668279"
  },
  {
    "text": "events in uh and processing them in user space but uh doing this directly in BPF",
    "start": "1668279",
    "end": "1673960"
  },
  {
    "text": "actually you know reduces the overhead a lot that makes a lot of sense",
    "start": "1673960",
    "end": "1679159"
  },
  {
    "text": "uh so don't look at how much it takes but look at how much it can save right I'm looking at it from the wrong side so",
    "start": "1679159",
    "end": "1686480"
  },
  {
    "text": "uh what what personas should be interested in ebpf O okay so now we're",
    "start": "1686480",
    "end": "1693080"
  },
  {
    "text": "going back to the age-old conversation of um devops uh developers operators",
    "start": "1693080",
    "end": "1700679"
  },
  {
    "text": "security devc Ops uh shifting left and all of that um the Crux of the thing is",
    "start": "1700679",
    "end": "1707640"
  },
  {
    "text": "is De developers build programs they build applications that do whatever it is that they need to do they do this",
    "start": "1707640",
    "end": "1714519"
  },
  {
    "text": "without or with minimal security awareness even um even post the shift",
    "start": "1714519",
    "end": "1720919"
  },
  {
    "text": "left Revolution uh I mean we've all shifted left and that's great and we're doing a great job uh and still there are",
    "start": "1720919",
    "end": "1728080"
  },
  {
    "text": "holes and still security can be tightened on the other hand we've got um",
    "start": "1728080",
    "end": "1733200"
  },
  {
    "text": "the security Engineers we've got the seops people um they have a goal and that goal is to secure things and then",
    "start": "1733200",
    "end": "1740120"
  },
  {
    "text": "there's the business the business wants things to work securely because they don't want to they don't want a security",
    "start": "1740120",
    "end": "1745880"
  },
  {
    "text": "event because that costs a lot of money but they don't want the applications to break either because that too costs a",
    "start": "1745880",
    "end": "1752080"
  },
  {
    "text": "lot of money so what we have here is um two sets of um uh professionals that",
    "start": "1752080",
    "end": "1759679"
  },
  {
    "text": "don't speak the same language um what using uh tools that uh",
    "start": "1759679",
    "end": "1766320"
  },
  {
    "text": "that Implement EPF uh what using ebpf can do is to highlight and the the gaps",
    "start": "1766320",
    "end": "1774880"
  },
  {
    "text": "and then make it very very clear what needs to be fixed and if we take that",
    "start": "1774880",
    "end": "1780559"
  },
  {
    "text": "even one step further we can talk about um even automating things that can help",
    "start": "1780559",
    "end": "1790640"
  },
  {
    "text": "uh tighten Security based on runtime information and this goes back to the first question where we were talking",
    "start": "1790640",
    "end": "1796960"
  },
  {
    "text": "about Network policies we can use ebpf that has learned what the application needs without talking to the",
    "start": "1796960",
    "end": "1804399"
  },
  {
    "text": "developer and can suggest automatically",
    "start": "1804399",
    "end": "1809640"
  },
  {
    "text": "uh which um um Network policies should be implemented um so that the security",
    "start": "1809640",
    "end": "1816760"
  },
  {
    "text": "Engineers can do that without breaking the application and then we have met all",
    "start": "1816760",
    "end": "1822200"
  },
  {
    "text": "the goals of everybody nice Courtney",
    "start": "1822200",
    "end": "1829279"
  },
  {
    "text": "if ebpf is so awesome why is security still so hard oh",
    "start": "1830240",
    "end": "1838080"
  },
  {
    "text": "God okay uh thanks for giving me the hard one um I think there are a lot of",
    "start": "1838080",
    "end": "1845480"
  },
  {
    "text": "reasons I think that security is still so hard and I think I'll P piggyback a little bit off of what oat was saying in",
    "start": "1845480",
    "end": "1851240"
  },
  {
    "text": "terms of who should be uh thinking about ebpf and interested in it and she very",
    "start": "1851240",
    "end": "1857159"
  },
  {
    "text": "much is speaking to to these personas that speak different languages and not only are they speaking different languages they have different context",
    "start": "1857159",
    "end": "1863519"
  },
  {
    "text": "around security what it means to them what it means to their day-to-day H jobs",
    "start": "1863519",
    "end": "1868960"
  },
  {
    "text": "what it means to the company all of these cultural aspects play just as big of a role as the technical aspects do",
    "start": "1868960",
    "end": "1875679"
  },
  {
    "text": "right um I'll let my colleagues who are here and my co-panelists speak to to the",
    "start": "1875679",
    "end": "1880799"
  },
  {
    "text": "technical aspects but I think a lot of times we Overlook how complicated the cultural aspects are and so when you're",
    "start": "1880799",
    "end": "1886840"
  },
  {
    "text": "dealing with silo teams that have different ideas about how things should work or what should be going on or you",
    "start": "1886840",
    "end": "1893360"
  },
  {
    "text": "get a lot of push back because a lot of people think that putting more security is actually going to take away from the",
    "start": "1893360",
    "end": "1900039"
  },
  {
    "text": "opportunity for Innovation and slow things down um all of a sudden you're you're already up against a a mountain",
    "start": "1900039",
    "end": "1908600"
  },
  {
    "text": "trying to get something new implemented and I think ebpf is one of these things that can actually bridge the gap between",
    "start": "1908600",
    "end": "1915399"
  },
  {
    "text": "devs who might not be security security-minded or oriented and the security team or the Ops Team because it",
    "start": "1915399",
    "end": "1923559"
  },
  {
    "text": "provides a lot of monitoring and visibility and transparency around the different aspects of what's going on not",
    "start": "1923559",
    "end": "1929760"
  },
  {
    "text": "just at the kernel level but at the application Level at the infrastructure level and all of a sudden that a",
    "start": "1929760",
    "end": "1935519"
  },
  {
    "text": "visibility actually makes it a lot easier for people to have more context and understand uh why security should be",
    "start": "1935519",
    "end": "1941960"
  },
  {
    "text": "implemented and and be more willing to get on board with it awesome thank you Anna what's the hard part of using ebpf",
    "start": "1941960",
    "end": "1949600"
  },
  {
    "text": "for security oh I 100% agree with what courney just said that yeah the the",
    "start": "1949600",
    "end": "1955799"
  },
  {
    "text": "cultural organizational part is and split between different themes um it's",
    "start": "1955799",
    "end": "1961639"
  },
  {
    "text": "hard part more often than not and ebpf um can actually help with this the fact",
    "start": "1961639",
    "end": "1967519"
  },
  {
    "text": "that we can pass uh like high level application Level data for example",
    "start": "1967519",
    "end": "1972679"
  },
  {
    "text": "kubernetes metadata so something that application developers can understand into the kernel and we can like um",
    "start": "1972679",
    "end": "1980559"
  },
  {
    "text": "monitor things inside the kernel but filter aggregate by this application metadata this is great um from the",
    "start": "1980559",
    "end": "1988480"
  },
  {
    "text": "technical perspective what uh in my experience is hard uh when using for",
    "start": "1988480",
    "end": "1993639"
  },
  {
    "text": "security is finding right hook points is really hard because we need to find",
    "start": "1993639",
    "end": "1999559"
  },
  {
    "text": "Right Hook point that is executed um like every every time something happens",
    "start": "1999559",
    "end": "2005120"
  },
  {
    "text": "so that attacker can't find some work just a different way of doing a thing if we want to enforce uh we need to find a",
    "start": "2005120",
    "end": "2013000"
  },
  {
    "text": "reliable way to actually block this operation and uh this requires just",
    "start": "2013000",
    "end": "2019240"
  },
  {
    "text": "reading kernel code understanding exactly what kernel does um on particular operation and finding uh also",
    "start": "2019240",
    "end": "2028080"
  },
  {
    "text": "a hook point that is you know that works across different kernel versions and K distributions so yeah this there's no",
    "start": "2028080",
    "end": "2034840"
  },
  {
    "text": "magic in there this is just this requires just reading the code but it's",
    "start": "2034840",
    "end": "2040200"
  },
  {
    "text": "a lot of code and um it requires this time search and expertise so this is",
    "start": "2040200",
    "end": "2046159"
  },
  {
    "text": "just difficult um something that uh tetragon project has is policy Library",
    "start": "2046159",
    "end": "2051760"
  },
  {
    "text": "where we have like you know policies um written by people who sit in this code",
    "start": "2051760",
    "end": "2057839"
  },
  {
    "text": "many years um that are uh created to be secure and reliable and also like many",
    "start": "2057839",
    "end": "2064599"
  },
  {
    "text": "many examples provided by the community because difficult things are difficult and they are there to be solved um but",
    "start": "2064599",
    "end": "2072960"
  },
  {
    "text": "to to do that reliably we really need to go come together as community and kind of collaborate on our learnings um for",
    "start": "2072960",
    "end": "2080960"
  },
  {
    "text": "example as in the form of like sharing policies amazing Maya would you like to",
    "start": "2080960",
    "end": "2086240"
  },
  {
    "text": "close us out by talking about why ebpf security is hard yeah definitely I feel",
    "start": "2086240",
    "end": "2092760"
  },
  {
    "text": "like it can manifest in so many different ways security vulnerability",
    "start": "2092760",
    "end": "2098040"
  },
  {
    "text": "can just be really really tricky to identify but on the bright side ebpf",
    "start": "2098040",
    "end": "2104480"
  },
  {
    "text": "does give us visibility into things we have never had visibility into before in terms of that super granular kernel",
    "start": "2104480",
    "end": "2111480"
  },
  {
    "text": "level data so when I think about Inspector Gadget I think about our Trace open gadget which lets you know when a",
    "start": "2111480",
    "end": "2116880"
  },
  {
    "text": "file is open so you can easily set alerts if you know you don't want your file that has all your passwords in it",
    "start": "2116880",
    "end": "2122359"
  },
  {
    "text": "anytime it's open you can get visibility into that or Trace exec lets you see when processes are uted so you can look",
    "start": "2122359",
    "end": "2128680"
  },
  {
    "text": "for any unfamiliar processes so we've come a long way it's amazing to see that we now have such like great visibility",
    "start": "2128680",
    "end": "2135680"
  },
  {
    "text": "into the kernel um it's still going to be hard definitely but it's really exciting to see what we can do now with",
    "start": "2135680",
    "end": "2141560"
  },
  {
    "text": "ebpf the first step to solving a problem is understanding the problem right so",
    "start": "2141560",
    "end": "2148359"
  },
  {
    "text": "excellent well that's time thank you so much everyone for sharing your time and expertise with us and thanks for sharing",
    "start": "2148359",
    "end": "2153960"
  },
  {
    "text": "your valuable attention we'll see you at lunch we're all very kind and nice please come come ask us questions",
    "start": "2153960",
    "end": "2161240"
  }
]