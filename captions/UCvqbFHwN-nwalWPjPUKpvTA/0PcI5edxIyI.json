[
  {
    "text": "hi uh Welcome to our talk so uh today uh we're going to talk about uh tours",
    "start": "440",
    "end": "7080"
  },
  {
    "text": "transation Management in microservices so uh I'll be we'll be presenting we'll be talking about you know the uh the",
    "start": "7080",
    "end": "14599"
  },
  {
    "text": "approaches for managing or handling transactions in microservices and then we're going to propose a way to uh you",
    "start": "14599",
    "end": "21400"
  },
  {
    "text": "know a kind of practical and effortless way for doing that uh based on our",
    "start": "21400",
    "end": "27480"
  },
  {
    "text": "experiences so um I'm H kada I'm the CD and co-ceo of a company called scater",
    "start": "27480",
    "end": "35480"
  },
  {
    "text": "which is a kind of small startup based in Tokyo and San Francisco we're kind of databased middleware company uh guys and",
    "start": "35480",
    "end": "43640"
  },
  {
    "text": "I'm passionate about the uh database systems and distributed systems and I'm got a PhD from those areas and Toshi",
    "start": "43640",
    "end": "51719"
  },
  {
    "text": "yeah yeah my name is toi Suzuki um and I'm an architect at SK SC Scala and I'm",
    "start": "51719",
    "end": "59039"
  },
  {
    "text": "also an apach HB commer yeah thank you so uh before uh going into the",
    "start": "59039",
    "end": "65680"
  },
  {
    "text": "details uh let's look at the you know we're talking about the microservices so let's review microservice microservice",
    "start": "65680",
    "end": "71880"
  },
  {
    "text": "architecture so I took this from Wikipedia uh let me just read this uh so",
    "start": "71880",
    "end": "77240"
  },
  {
    "text": "microservice architecture is an architectural pattern that rg's uh",
    "start": "77240",
    "end": "82920"
  },
  {
    "text": "application as a collection of loly coupled or frying R Services communting through communicating through",
    "start": "82920",
    "end": "89119"
  },
  {
    "text": "lightweight protocol goals and one of its goals is to enable teams to develop and deploy their service Services",
    "start": "89119",
    "end": "96360"
  },
  {
    "text": "independently so it's kind of the uh you know uh divide conquer divide and conquer strategy for uh you know",
    "start": "96360",
    "end": "102720"
  },
  {
    "text": "application architecture and then typically like a mic service application tends to apply employ uh database per",
    "start": "102720",
    "end": "110640"
  },
  {
    "text": "service pattern where you know uh in each microservice uh there's a small",
    "start": "110640",
    "end": "115920"
  },
  {
    "text": "application and then uh in also a small data I mean not necessarily small but the database in each microservice and",
    "start": "115920",
    "end": "123759"
  },
  {
    "text": "then if you want to go yeah if you want to go to database 2 uh from application",
    "start": "123759",
    "end": "128959"
  },
  {
    "text": "one uh basically you need to go to first go to the application two to get the",
    "start": "128959",
    "end": "134120"
  },
  {
    "text": "data from db2 so you cannot really go to direct db2 directly from application one",
    "start": "134120",
    "end": "139440"
  },
  {
    "text": "to achieve like G coupling and to isolate services so uh let's look at the",
    "start": "139440",
    "end": "147640"
  },
  {
    "text": "uh the benefits of micros services so I took this from uh paper so there are so",
    "start": "147640",
    "end": "154720"
  },
  {
    "text": "many opinions out there but I took it from paper uh and then it's a database",
    "start": "154720",
    "end": "161159"
  },
  {
    "text": "paper uh called a uh from the BLB conference which is a uh one of the top",
    "start": "161159",
    "end": "166800"
  },
  {
    "text": "the conferences in database database or data management systems and then so it's kind of from a little data management",
    "start": "166800",
    "end": "174120"
  },
  {
    "text": "perspective and then it's kind of ranked uh based on survey and then",
    "start": "174120",
    "end": "180599"
  },
  {
    "text": "so the first one the scalability through uh functional decomposition and it's a kind of",
    "start": "180599",
    "end": "186480"
  },
  {
    "text": "capability uh that you know uh scaling a system uh by decomposing a system by",
    "start": "186480",
    "end": "193159"
  },
  {
    "text": "decomposing a microservice decomposing a multic service into microservices by",
    "start": "193159",
    "end": "198280"
  },
  {
    "text": "functions and then the fault isolation the second one fault isolation is the kind of property that uh you know uh one",
    "start": "198280",
    "end": "206959"
  },
  {
    "text": "service from microservices kind of isolated from the other services so",
    "start": "206959",
    "end": "212159"
  },
  {
    "text": "let's assume there is a two microservices a customer service order service and like customer Serv is kind",
    "start": "212159",
    "end": "218319"
  },
  {
    "text": "of uh isolated from order so even if customer is failed uh order is not",
    "start": "218319",
    "end": "223640"
  },
  {
    "text": "affected by the customer and then the third one uh agility on data change it's",
    "start": "223640",
    "end": "229480"
  },
  {
    "text": "kind of a property that um you know uh so the schema of one database of one",
    "start": "229480",
    "end": "235720"
  },
  {
    "text": "microservices not affected by the other uh microservices so you can change the",
    "start": "235720",
    "end": "240799"
  },
  {
    "text": "schema of a database uh as long as you keep the API of the microservice the",
    "start": "240799",
    "end": "246239"
  },
  {
    "text": "same and then the F the fourth one that to enable event driven data management",
    "start": "246239",
    "end": "251439"
  },
  {
    "text": "that's I think that's a little exceptional because the um you know it's kind of more like a",
    "start": "251439",
    "end": "257880"
  },
  {
    "text": "how right event driven data management is not really you know uh the benefit of",
    "start": "257880",
    "end": "264320"
  },
  {
    "text": "microservices it's more like you know it's related to it but it's not really the benefit or M iation for",
    "start": "264320",
    "end": "270320"
  },
  {
    "text": "microservices so let me skip this for now and then poly grth persistence uh",
    "start": "270320",
    "end": "276320"
  },
  {
    "text": "it's a property that um you know uh microsof application can use multiple",
    "start": "276320",
    "end": "284000"
  },
  {
    "text": "potentially different kinds of databases so yeah these are the uh the",
    "start": "284000",
    "end": "289680"
  },
  {
    "text": "benefits or motivations of microservices it's just a reviewing it and uh so let's look at the downsizes",
    "start": "289680",
    "end": "297759"
  },
  {
    "text": "the C of microservices and it's also kind of a from a you know data management perspective and then the",
    "start": "297759",
    "end": "304880"
  },
  {
    "text": "first one is the uh it's hard to guarantee transactional consistency of",
    "start": "304880",
    "end": "310160"
  },
  {
    "text": "databases so like I explained that you know basically we employ uh dat database",
    "start": "310160",
    "end": "316199"
  },
  {
    "text": "for service so uh we tend to have multiple databases and then even if we",
    "start": "316199",
    "end": "321319"
  },
  {
    "text": "have the same database kind the database instances are different so the you know the databases don't really support they",
    "start": "321319",
    "end": "328520"
  },
  {
    "text": "don't really guarantee the multi- instance consistency so it's it's hard",
    "start": "328520",
    "end": "334360"
  },
  {
    "text": "to guarantee consistency of databases and then uh similarly it's hard to",
    "start": "334360",
    "end": "339759"
  },
  {
    "text": "operate diverse uh databases uh especially like in taking correct backups of multiple databases because",
    "start": "339759",
    "end": "346280"
  },
  {
    "text": "you know uh let's say we have two Oracle databases but it's hard to uh take backups correctly from two Oracle",
    "start": "346280",
    "end": "352880"
  },
  {
    "text": "database instances because there is no way a guaranteed way and then the third",
    "start": "352880",
    "end": "358360"
  },
  {
    "text": "one is more code to uh create applications so basically uh microservice will be uh created based on",
    "start": "358360",
    "end": "365199"
  },
  {
    "text": "from a multic application so it's kind of decoupled and then basically uh you",
    "start": "365199",
    "end": "370720"
  },
  {
    "text": "know application has to kind of virtually glue the microservices so we need to kind of have a glue",
    "start": "370720",
    "end": "378080"
  },
  {
    "text": "code and then uh you know the first issue I think is the biggest issue um",
    "start": "378080",
    "end": "384840"
  },
  {
    "text": "and then you know um if you don't have consistency of databases U you're going",
    "start": "384840",
    "end": "391680"
  },
  {
    "text": "to um have so much troubles more specifically um so why it's so critical",
    "start": "391680",
    "end": "399639"
  },
  {
    "text": "like why you need the consistency of databases so let me also review this and then without transational consistency um",
    "start": "399639",
    "end": "407720"
  },
  {
    "text": "you know some data can be seen as l or wrong and such incidents are uh called",
    "start": "407720",
    "end": "414000"
  },
  {
    "text": "anomalies in databases and then so let's let's assume like you know uh you're going to have a",
    "start": "414000",
    "end": "419879"
  },
  {
    "text": "transfer operation uh you're going to do you know for some banking application or something and then in transferring",
    "start": "419879",
    "end": "426599"
  },
  {
    "text": "operation um it's which is composed of you know decrease operation decreasing",
    "start": "426599",
    "end": "432120"
  },
  {
    "text": "amount from one count and then increasing in account increasing amount to another account and then you know",
    "start": "432120",
    "end": "439520"
  },
  {
    "text": "what if you know increas the increasing operation failed during processing uh you know for some castric failure or",
    "start": "439520",
    "end": "446319"
  },
  {
    "text": "something then if it's not properly handled uh you're going to lose the money the money is gone",
    "start": "446319",
    "end": "453599"
  },
  {
    "text": "right and so uh another case uh so you're going to reserve uh you're going",
    "start": "453599",
    "end": "460240"
  },
  {
    "text": "to plan you're going to plan to go to a trip and you're going to reserve a hotel and you're going to uh reserve a flight",
    "start": "460240",
    "end": "465960"
  },
  {
    "text": "ticket maybe in the same application or at the same time maybe by Expedia or",
    "start": "465960",
    "end": "472240"
  },
  {
    "text": "marck and travel anyway like if you fail to reserve a flight ticket you thought",
    "start": "472240",
    "end": "478960"
  },
  {
    "text": "maybe you successfully reserved but in in the back end uh you know if some it failed for some reason then it's going",
    "start": "478960",
    "end": "485800"
  },
  {
    "text": "to be a trouble right so uh you know um you know such database anomalies",
    "start": "485800",
    "end": "493879"
  },
  {
    "text": "uh you know are happening actually uh in all the time basically and then these",
    "start": "493879",
    "end": "499479"
  },
  {
    "text": "kind of database anomalies could harm your business tremendously and especially uh inprise",
    "start": "499479",
    "end": "505800"
  },
  {
    "text": "applications so um how can we you know guarantee or how can we U make this not",
    "start": "505800",
    "end": "511919"
  },
  {
    "text": "happen right how can we guarantee consistency of databases and essentially like you know we need to uh coordinate",
    "start": "511919",
    "end": "519039"
  },
  {
    "text": "operations so um you know they're like a separate operations here but uh these",
    "start": "519039",
    "end": "524240"
  },
  {
    "text": "have have to be coordinated properly uh kind of with some form of",
    "start": "524240",
    "end": "530519"
  },
  {
    "text": "transaction so yeah so that we can guarantee the consistent uh States and",
    "start": "530519",
    "end": "536320"
  },
  {
    "text": "then there are several existing approaches uh like a s maybe you have heard of it and then",
    "start": "536320",
    "end": "542160"
  },
  {
    "text": "two-phase comit 2pc and then TCC try confirm cancel so let's look at the",
    "start": "542160",
    "end": "547519"
  },
  {
    "text": "these approaches one by one so Saga maybe you have heard of it",
    "start": "547519",
    "end": "552959"
  },
  {
    "text": "maybe it's getting popular in microservices uh in a community and then uh it's a mechanism to maintain",
    "start": "552959",
    "end": "559360"
  },
  {
    "text": "transational consistency in microservices so uh this is the example",
    "start": "559360",
    "end": "564959"
  },
  {
    "text": "here um you know uh kind of application uh having order service and then",
    "start": "564959",
    "end": "570839"
  },
  {
    "text": "customer service and then user can or customer can create an order if the user",
    "start": "570839",
    "end": "577360"
  },
  {
    "text": "has enough available credit so um you know user will create an uh create an",
    "start": "577360",
    "end": "584000"
  },
  {
    "text": "order and Order service will um maybe first create an order with a pending",
    "start": "584000",
    "end": "589640"
  },
  {
    "text": "State then uh maybe it will check the credit credit limit of user or customer",
    "start": "589640",
    "end": "596399"
  },
  {
    "text": "uh through the message broker and then customer service will first check the uh credit credit limit",
    "start": "596399",
    "end": "602959"
  },
  {
    "text": "and then then uh update the credit limit and then once it's all done then the",
    "start": "602959",
    "end": "608880"
  },
  {
    "text": "order service will create uh update the order with uh approved status and it",
    "start": "608880",
    "end": "614399"
  },
  {
    "text": "returns back so uh you know uh in Saga it uses a s of local transactions uh",
    "start": "614399",
    "end": "622200"
  },
  {
    "text": "that are coordinated using uh ASR messaging through a message blocker",
    "start": "622200",
    "end": "627680"
  },
  {
    "text": "typically and then uh one thing to note is that uh you know it rolls back",
    "start": "627680",
    "end": "632959"
  },
  {
    "text": "transactions by using application defined uh compensating transactions which means like you know basically you",
    "start": "632959",
    "end": "639360"
  },
  {
    "text": "need to write uh recover logic by yourself so in case of",
    "start": "639360",
    "end": "645800"
  },
  {
    "text": "theaters so uh you know there are pros and cons of this approach so the first Pros is the no locking or res",
    "start": "647480",
    "end": "655000"
  },
  {
    "text": "reservation required so there is no Global cord ation there is no res",
    "start": "655000",
    "end": "661240"
  },
  {
    "text": "looking and then which is good and then you know it can be applied to uh various",
    "start": "661240",
    "end": "667560"
  },
  {
    "text": "databases because um basically it does you know local transactions in each each",
    "start": "667560",
    "end": "673959"
  },
  {
    "text": "microservice so there is no notion of uh you know Global coordination so um could",
    "start": "673959",
    "end": "679839"
  },
  {
    "text": "be applied to the various databases and then due to the no locking or no Global",
    "start": "679839",
    "end": "685360"
  },
  {
    "text": "coordination uh you know it can be faster than the other approaches and as a cons uh you know uh users must",
    "start": "685360",
    "end": "692959"
  },
  {
    "text": "Define or application developers must Define application defined compass in transactions so basically you need to",
    "start": "692959",
    "end": "698839"
  },
  {
    "text": "write how to recover from a failure so for example like you know you create an",
    "start": "698839",
    "end": "704519"
  },
  {
    "text": "order appdate the credit usage and updating the order then in case of uh",
    "start": "704519",
    "end": "709800"
  },
  {
    "text": "failure here basically you need to uh undo all the operations you've done and",
    "start": "709800",
    "end": "716480"
  },
  {
    "text": "then uh in reverse order to get to the council state basically you have to",
    "start": "716480",
    "end": "721839"
  },
  {
    "text": "write all the undo operations by yourself and then uh it doesn't guarantee isolation ory so um you know",
    "start": "721839",
    "end": "730880"
  },
  {
    "text": "uh intermediate states of one transactions can be seen can be visible by the other",
    "start": "730880",
    "end": "736120"
  },
  {
    "text": "transactions and then it requires either important participants so basically you",
    "start": "736120",
    "end": "743320"
  },
  {
    "text": "you know correct guarante is based on the retries so uh you know the",
    "start": "743320",
    "end": "748519"
  },
  {
    "text": "participants are operations must be high important and then it's difficult to",
    "start": "748519",
    "end": "753600"
  },
  {
    "text": "implement in debug so you know there is no Global coordination so it's it's hard to track where where it is so it's hard",
    "start": "753600",
    "end": "760199"
  },
  {
    "text": "to uh Implement and debug so let's move on to the two phase",
    "start": "760199",
    "end": "766160"
  },
  {
    "text": "commit 2pc and the 2pc is an atomic uh commitment protocol that coordinates",
    "start": "766160",
    "end": "771680"
  },
  {
    "text": "Global transactions so uh giving giving you a same example and uh so so like uh after",
    "start": "771680",
    "end": "780240"
  },
  {
    "text": "beginning a transaction and then application will uh checking and updating the creative limit and then",
    "start": "780240",
    "end": "786399"
  },
  {
    "text": "creating an order and then like a application is ready to commit the transaction and it will ask the",
    "start": "786399",
    "end": "793000"
  },
  {
    "text": "coordinator to uh commit the transaction and then the coordinator will prepare",
    "start": "793000",
    "end": "798040"
  },
  {
    "text": "the uh do the prepare phase which make all the uh participants ready to commit",
    "start": "798040",
    "end": "804279"
  },
  {
    "text": "and after that it will commit the log like it kind of for proc assistance and and then if finally commit the",
    "start": "804279",
    "end": "811399"
  },
  {
    "text": "participants you know committing all the uh you know records that are prepared",
    "start": "811399",
    "end": "817399"
  },
  {
    "text": "and after that it will F okay and then the protocol guarantees uh you know recovery from intermediate States so",
    "start": "817399",
    "end": "824240"
  },
  {
    "text": "basically application developers don't need to care about you know how to recover from transction failure and",
    "start": "824240",
    "end": "831160"
  },
  {
    "text": "stuff okay so also this also approaches this approach also has a pro and cons and in the pr uh you know it's extremely",
    "start": "831160",
    "end": "838680"
  },
  {
    "text": "simple effortless for application developers to implement transactions and it provides strong",
    "start": "838680",
    "end": "845680"
  },
  {
    "text": "correctness uh specifically ASD and as a cons uh you know it could be slower than",
    "start": "845680",
    "end": "852360"
  },
  {
    "text": "the the other approaches because it does some global global coordination and does",
    "start": "852360",
    "end": "857959"
  },
  {
    "text": "some resource loocking and then uh you know it's it's kind of blocking protocol so if a",
    "start": "857959",
    "end": "864720"
  },
  {
    "text": "coordinator crash if coordinator is crashed uh you know that will cause or block the transaction from",
    "start": "864720",
    "end": "872120"
  },
  {
    "text": "proceeding and then um there is not many well-known protocols but the well-known",
    "start": "872120",
    "end": "877240"
  },
  {
    "text": "protocol uh for example X XA is is pretty",
    "start": "877240",
    "end": "884000"
  },
  {
    "text": "Legacy so let's move on to TCC so TCC try confirm ccel uh is a mechanism to",
    "start": "884199",
    "end": "890399"
  },
  {
    "text": "maintain transational consistency in microservices uh like the others and",
    "start": "890399",
    "end": "895480"
  },
  {
    "text": "it's kind of the middle ground Middle Ground approach between the uh you know TPC and Saga so in kind of does some TPC",
    "start": "895480",
    "end": "903519"
  },
  {
    "text": "but it implements 2pc at the business layer rather than the resource rayer so",
    "start": "903519",
    "end": "909720"
  },
  {
    "text": "application can Define decide you know which resource to take so it allows",
    "start": "909720",
    "end": "915279"
  },
  {
    "text": "businesses to flexibly select resource loing granity so I'm going to skip this uh",
    "start": "915279",
    "end": "921600"
  },
  {
    "text": "sorry I'm going to skip the explanation here but uh it rolls back transactions by using application defined compassing",
    "start": "921600",
    "end": "928600"
  },
  {
    "text": "transaction like Saga so uh you know it's there's a pro",
    "start": "928600",
    "end": "934319"
  },
  {
    "text": "Conant with this approach too and uh the pro it provides correctness I wouldn't",
    "start": "934319",
    "end": "939399"
  },
  {
    "text": "say a it because uh you know still the correctness is you know uh based uh",
    "start": "939399",
    "end": "945399"
  },
  {
    "text": "based on the application defined uh recy logic and then uh it might be useful for",
    "start": "945399",
    "end": "952079"
  },
  {
    "text": "longterm actions uh so it can utilize the application context because the application can decide resource loing",
    "start": "952079",
    "end": "959079"
  },
  {
    "text": "grity so it might be useful for long transactions and as a cons uh users must",
    "start": "959079",
    "end": "965360"
  },
  {
    "text": "Define application Define compensating transactions like Saga and also requires",
    "start": "965360",
    "end": "971160"
  },
  {
    "text": "uh important participants like Saga so uh let's compare the approaches",
    "start": "971160",
    "end": "978480"
  },
  {
    "text": "in terms of uh effortlessness correctness and",
    "start": "978480",
    "end": "983680"
  },
  {
    "text": "availability which means here uh liveness and applicability and performance",
    "start": "983680",
    "end": "990560"
  },
  {
    "text": "so uh let's look at this so for effortlessness andc correctness so TP is",
    "start": "990560",
    "end": "997279"
  },
  {
    "text": "the best approach for this uh because uh basically you don't need to write uh recal logic by yourself and then",
    "start": "997279",
    "end": "1004079"
  },
  {
    "text": "correctness is guaranteed by the protocol on the other hand The Saga um",
    "start": "1004079",
    "end": "1009319"
  },
  {
    "text": "is not as effortless as the the other approaches because you basically need to",
    "start": "1009319",
    "end": "1015399"
  },
  {
    "text": "make sure the correctness of transactions by itself so it's a lot of Burden for users so",
    "start": "1015399",
    "end": "1022839"
  },
  {
    "text": "it's here TCC is the middle ground of these two approaches so I just put here",
    "start": "1022839",
    "end": "1029000"
  },
  {
    "text": "and for the uh eff faultlessness and applicability uh 2pc is regarded as not",
    "start": "1029000",
    "end": "1037720"
  },
  {
    "text": "a very available uh maybe because of uh you know lacking of the not lacking like",
    "start": "1037720",
    "end": "1044959"
  },
  {
    "text": "blocking issue or uh you know the global coordination and Saga on the other hand uh is",
    "start": "1044959",
    "end": "1051360"
  },
  {
    "text": "regarded as uh highly available uh because it doesn't do any Global coordination or resource",
    "start": "1051360",
    "end": "1058480"
  },
  {
    "text": "locking uh but you know I'm not sure if it could it's it's highly available because it could also return uh wrong or",
    "start": "1058480",
    "end": "1066240"
  },
  {
    "text": "uh you know inconsistent States even if it's available anyway uh so for the",
    "start": "1066240",
    "end": "1072600"
  },
  {
    "text": "performance correctness um you know TPC is not as as",
    "start": "1072600",
    "end": "1078960"
  },
  {
    "text": "performant as the other approaches because it does do some Global coordination and does some resource",
    "start": "1078960",
    "end": "1084400"
  },
  {
    "text": "rocking and on the other hand Saga is a faster faster than the other approaches",
    "start": "1084400",
    "end": "1090559"
  },
  {
    "text": "because um you know doesn't do those",
    "start": "1090559",
    "end": "1095600"
  },
  {
    "text": "so I I wouldn't say like you know uh there is like there is no best solution here",
    "start": "1095600",
    "end": "1103200"
  },
  {
    "text": "right like there are pro and cons of the the in these approaches I would didn't say one is the best so uh basically like",
    "start": "1103200",
    "end": "1110880"
  },
  {
    "text": "let's think about making them better so how can we make them better",
    "start": "1110880",
    "end": "1116919"
  },
  {
    "text": "right um so basically what we want to achieve is in all the graphs we want to",
    "start": "1116919",
    "end": "1123039"
  },
  {
    "text": "achieve the right top area the blue area so how can we achieve that so there are",
    "start": "1123039",
    "end": "1129679"
  },
  {
    "text": "several ways so one potential way is like you know making Saga more correct",
    "start": "1129679",
    "end": "1137679"
  },
  {
    "text": "so yeah that's one way and another way making TCC making sagon TCC more",
    "start": "1137679",
    "end": "1146840"
  },
  {
    "text": "effortlessness or more effortless that's one way and then also",
    "start": "1146840",
    "end": "1152559"
  },
  {
    "text": "uh making 2pc uh more",
    "start": "1152559",
    "end": "1158520"
  },
  {
    "text": "available and making TBC more performant so uh you know can we really",
    "start": "1158520",
    "end": "1165960"
  },
  {
    "text": "do that right so uh can we make Saga more",
    "start": "1165960",
    "end": "1173520"
  },
  {
    "text": "correct I believe that's pretty difficult due to the mechanism that you know doesn't have Global",
    "start": "1173520",
    "end": "1180000"
  },
  {
    "text": "coordination and then how about can we make Saga or TCC more",
    "start": "1180000",
    "end": "1185520"
  },
  {
    "text": "effortless I think that's also very difficult due to the mechanism that requires application defined recover",
    "start": "1185520",
    "end": "1191679"
  },
  {
    "text": "logic so uh can we make TPC more available and faster without sacrificing",
    "start": "1191679",
    "end": "1197720"
  },
  {
    "text": "its effortlessness I think that's possible so let's break down the questions so can we make TPC",
    "start": "1197720",
    "end": "1204799"
  },
  {
    "text": "more a provide High availability which means better livess and high scalability",
    "start": "1204799",
    "end": "1211400"
  },
  {
    "text": "which means scalable throughput without compromising safety can we make the latency of TPC",
    "start": "1211400",
    "end": "1217919"
  },
  {
    "text": "better a lower or can we make TPC support diverse data",
    "start": "1217919",
    "end": "1222919"
  },
  {
    "text": "stores so uh yeah Tosi will answer the questions and then how we're going to do that but before doing that let me also",
    "start": "1223039",
    "end": "1229919"
  },
  {
    "text": "say one thing so maybe you might have heard you know TPC is not an option in",
    "start": "1229919",
    "end": "1235200"
  },
  {
    "text": "microservice transactions uh it's a kind of slide deck slide from a famous microservice",
    "start": "1235200",
    "end": "1242600"
  },
  {
    "text": "Advocate but I I disagree with this opinion uh since it's pretty misleading",
    "start": "1242600",
    "end": "1248080"
  },
  {
    "text": "and because like you know downsides described here are all addressed in the recent",
    "start": "1248080",
    "end": "1253559"
  },
  {
    "text": "Technologies so let me replace this right",
    "start": "1253559",
    "end": "1259000"
  },
  {
    "text": "so like uh 30y old TPC approaches are not an option but the recent TPC",
    "start": "1259000",
    "end": "1265799"
  },
  {
    "text": "approaches are different an option so next speaker Toshi will talk about you know how we can do that how we can",
    "start": "1265799",
    "end": "1271200"
  },
  {
    "text": "answer the",
    "start": "1271200",
    "end": "1273600"
  },
  {
    "text": "questions yeah so from now on I'll take over this presentation uh I would like to discuss",
    "start": "1276360",
    "end": "1283000"
  },
  {
    "text": "the new 2pc approaches mentioned in the previous slide first I will discuss can",
    "start": "1283000",
    "end": "1289480"
  },
  {
    "text": "we uh how can we make 2pc provide High availability and scalability as we mentioned earlier one",
    "start": "1289480",
    "end": "1297080"
  },
  {
    "text": "common issue with 2pc is that the coordinator can become a single of point of failure uh leading to concerning",
    "start": "1297080",
    "end": "1304600"
  },
  {
    "text": "about availability and scalability to address this issue uh we can introduce consensus protocols uh",
    "start": "1304600",
    "end": "1311919"
  },
  {
    "text": "such as paros commit to replicate the coordinate logs yet to enhance uh",
    "start": "1311919",
    "end": "1317520"
  },
  {
    "text": "availability additionally uh by using data ptioning",
    "start": "1317520",
    "end": "1322679"
  },
  {
    "text": "for the coordinator logs and we can improve the scity of the",
    "start": "1322679",
    "end": "1328039"
  },
  {
    "text": "coordinator yeah many recent distributed database products that used 2bc have",
    "start": "1328039",
    "end": "1333840"
  },
  {
    "text": "adapted this approach and the idea that the 2pc coordinator is a single point of",
    "start": "1333840",
    "end": "1340039"
  },
  {
    "text": "failure is be becoming a myth so next uh I will address how can",
    "start": "1340039",
    "end": "1348120"
  },
  {
    "text": "we make the latency of 2pc lower yeah to reduce the latency of 2pc",
    "start": "1348120",
    "end": "1354799"
  },
  {
    "text": "uh one possible approach is to paraliz the prepare process for each record and",
    "start": "1354799",
    "end": "1362240"
  },
  {
    "text": "make the comit process asynchronous yeah as shown in the DI",
    "start": "1362240",
    "end": "1368200"
  },
  {
    "text": "diagram below in 2bc after transaction read and write operations are complete",
    "start": "1368200",
    "end": "1375720"
  },
  {
    "text": "the prepare process for each record is performed followed by uh coordinator",
    "start": "1375720",
    "end": "1381559"
  },
  {
    "text": "loging and after it's successful um the comit process for each",
    "start": "1381559",
    "end": "1387360"
  },
  {
    "text": "record is carried out so by paring the prepare process uh",
    "start": "1387360",
    "end": "1393600"
  },
  {
    "text": "we can reduce the latency to the time it takes to prepare prepare a single",
    "start": "1393600",
    "end": "1399640"
  },
  {
    "text": "record and furthermore by making the commit process",
    "start": "1399640",
    "end": "1404880"
  },
  {
    "text": "asynchronous uh we can return the response uh to the to the client immediately after the coordinator loging",
    "start": "1404880",
    "end": "1412559"
  },
  {
    "text": "is complete yeah after returning the response to the client the commit",
    "start": "1412559",
    "end": "1418120"
  },
  {
    "text": "process for each record is performed asynchronously allowing the client to avoid waiting for the commit process to",
    "start": "1418120",
    "end": "1427000"
  },
  {
    "text": "finish and yeah another optimization is the one phase commit",
    "start": "1427080",
    "end": "1433679"
  },
  {
    "text": "optimization where the comit can be performed in a single phase under certain condition",
    "start": "1433679",
    "end": "1439520"
  },
  {
    "text": "yeah for more details please refer to the paper link here yeah this is",
    "start": "1439520",
    "end": "1445360"
  },
  {
    "text": "published on the cube website yeah so let's move on to how can",
    "start": "1445360",
    "end": "1452039"
  },
  {
    "text": "we make two PC support device uh data stores yeah the approaches for achieving",
    "start": "1452039",
    "end": "1459600"
  },
  {
    "text": "Global transactions can be categorized in two ways uh multi- level transaction",
    "start": "1459600",
    "end": "1465840"
  },
  {
    "text": "management and single level transaction management m i sh as shown in the figures",
    "start": "1465840",
    "end": "1472159"
  },
  {
    "text": "below in both approaches uh there is a coordinate coordination process that",
    "start": "1472159",
    "end": "1477360"
  },
  {
    "text": "manages Global transactions using the 2pc protocol and there are databases",
    "start": "1477360",
    "end": "1483440"
  },
  {
    "text": "that participate in the global transaction yeah the multi- level",
    "start": "1483440",
    "end": "1489360"
  },
  {
    "text": "transaction management approach achieves Global transactions by coordinating transactions at the coordinator in",
    "start": "1489360",
    "end": "1496679"
  },
  {
    "text": "cooporation with the transaction managers of the underlying databases therefore uh there are",
    "start": "1496679",
    "end": "1503840"
  },
  {
    "text": "abstractions in both the coordinator and underlying databases for coroporation",
    "start": "1503840",
    "end": "1509760"
  },
  {
    "text": "yeah examples of products that for this approach include Oracle micro TX and",
    "start": "1509760",
    "end": "1515600"
  },
  {
    "text": "atomicos which are based on Nexa and yeah this approach May Force um",
    "start": "1515600",
    "end": "1522159"
  },
  {
    "text": "the underlying databases to meet strict requirements yeah for example EXA",
    "start": "1522159",
    "end": "1528360"
  },
  {
    "text": "requires underlying databases to be ACD compliant with specific implementation",
    "start": "1528360",
    "end": "1535360"
  },
  {
    "text": "for concurrency control yeah this uh consent makes it",
    "start": "1535360",
    "end": "1540640"
  },
  {
    "text": "difficult to support various databases such as uh no signal databases that do",
    "start": "1540640",
    "end": "1546600"
  },
  {
    "text": "not guarantee AET yeah on the other hand the single",
    "start": "1546600",
    "end": "1551720"
  },
  {
    "text": "level transaction management approach achieves Global transactions by managing",
    "start": "1551720",
    "end": "1556919"
  },
  {
    "text": "the uh managing the coordinating managing and coordinating transactions",
    "start": "1556919",
    "end": "1562279"
  },
  {
    "text": "only at the coordinator level without re relying on the congressive control",
    "start": "1562279",
    "end": "1567360"
  },
  {
    "text": "mechanism of the uh underlying databases yeah this approach typically",
    "start": "1567360",
    "end": "1573600"
  },
  {
    "text": "abstracts the uh underlying databases at the coordinator layer to facilitate",
    "start": "1573600",
    "end": "1579080"
  },
  {
    "text": "Global transactions an example of a product that follows this approach is scale",
    "start": "1579080",
    "end": "1585440"
  },
  {
    "text": "DB yeah this approach uh require the underlying databases to meet weaker",
    "start": "1585440",
    "end": "1592000"
  },
  {
    "text": "requirements than those for the multi- level transaction management approach so",
    "start": "1592000",
    "end": "1597720"
  },
  {
    "text": "as a result uh it can support a wider variety of databases including no SLE",
    "start": "1597720",
    "end": "1605158"
  },
  {
    "text": "databases yeah uh this table compares the recent enhanced 2pc products that I",
    "start": "1605840",
    "end": "1611840"
  },
  {
    "text": "that I mentioned in the previous slide Oracle micro TX is based on next",
    "start": "1611840",
    "end": "1618360"
  },
  {
    "text": "say and adapts multi- level transaction management so as a result it can cannot",
    "start": "1618360",
    "end": "1624919"
  },
  {
    "text": "be used with databases that do not support XA yeah such as most Nole",
    "start": "1624919",
    "end": "1631120"
  },
  {
    "text": "databases yeah similarly Atomic cost is based on uh XA and adapts multi-level",
    "start": "1631120",
    "end": "1638080"
  },
  {
    "text": "transaction management yeah meaning it can only be used with databases that support X as",
    "start": "1638080",
    "end": "1644559"
  },
  {
    "text": "well finally scale DB adaps single level uh transaction management which allows",
    "start": "1644559",
    "end": "1651559"
  },
  {
    "text": "to which allows it to support a wide variety of databases including no SLE",
    "start": "1651559",
    "end": "1659440"
  },
  {
    "text": "databases and uh all of all of these uh enhanced 2pc products support redundancy",
    "start": "1659440",
    "end": "1667320"
  },
  {
    "text": "and scaling for coordinators enabling High availability and high scalability",
    "start": "1667320",
    "end": "1673360"
  },
  {
    "text": "also they Implement many optimizations for better performance",
    "start": "1673360",
    "end": "1679240"
  },
  {
    "text": "so now uh let's discuss uh whether the enhanced 2pc approaches sacrifice the",
    "start": "1679240",
    "end": "1684840"
  },
  {
    "text": "pros of micro services to quickly review the the",
    "start": "1684840",
    "end": "1691120"
  },
  {
    "text": "motivations of M motivations for micros service microservices in data management",
    "start": "1691120",
    "end": "1697159"
  },
  {
    "text": "include uh scalability through functional decomposition a f isolation",
    "start": "1697159",
    "end": "1703159"
  },
  {
    "text": "agility on data change and to enable event driven data management and poly",
    "start": "1703159",
    "end": "1709120"
  },
  {
    "text": "grth persistence and yeah our answer to the",
    "start": "1709120",
    "end": "1714720"
  },
  {
    "text": "question is not really yeah we don't think the enhanced 2pc approaches sacrific the pro of",
    "start": "1714720",
    "end": "1721480"
  },
  {
    "text": "microservices yeah first regarding scalability through functional",
    "start": "1721480",
    "end": "1726519"
  },
  {
    "text": "decomposition yeah as I mentioned earlier uh enhance 2pc allows us to",
    "start": "1726519",
    "end": "1731600"
  },
  {
    "text": "improve scalability by ping the Ping the coordinator yeah this mean that two p",
    "start": "1731600",
    "end": "1738240"
  },
  {
    "text": "can scale along with the microservice scalability uh through functional",
    "start": "1738240",
    "end": "1745000"
  },
  {
    "text": "decomposition yeah next concerning fult isolation yeah even when using 2pc fults",
    "start": "1745000",
    "end": "1752360"
  },
  {
    "text": "in microservices are isolated yeah however uh it is challenging to completely is isolate",
    "start": "1752360",
    "end": "1759519"
  },
  {
    "text": "Force related to the coordinating component that required for transaction",
    "start": "1759519",
    "end": "1765240"
  },
  {
    "text": "management yeah this is not unique to to the same applies to Saga and TCC yes",
    "start": "1765240",
    "end": "1772679"
  },
  {
    "text": "yeah for example uh in Saga a failure in the message blocker can stop transactions from proceeding and",
    "start": "1772679",
    "end": "1780480"
  },
  {
    "text": "similarly in 2pc and TCC a coordinator failure can stop transaction from",
    "start": "1780480",
    "end": "1786880"
  },
  {
    "text": "progressing yeah generally uh these issues can be addressed by making the",
    "start": "1786880",
    "end": "1792480"
  },
  {
    "text": "coordinate coordinating components uh redundant so next yeah moving on to",
    "start": "1792480",
    "end": "1799440"
  },
  {
    "text": "agility on data change yeah even when using 2pc yeah schemas can still be",
    "start": "1799440",
    "end": "1805640"
  },
  {
    "text": "independently update updated within each microservices",
    "start": "1805640",
    "end": "1811320"
  },
  {
    "text": "microservice and regarding to enable event driven data management yeah as we explain explained earlier yeah event",
    "start": "1811320",
    "end": "1819360"
  },
  {
    "text": "driven data management is yeah kind of outside the trans outside the scope of",
    "start": "1819360",
    "end": "1824679"
  },
  {
    "text": "transaction management so yeah using TPC does not pose any problems here yeah",
    "start": "1824679",
    "end": "1831320"
  },
  {
    "text": "finally on poly grth persistance yeah as as I mentioned",
    "start": "1831320",
    "end": "1836360"
  },
  {
    "text": "earlier yeah 2pc can support multiple databases yeah especially if you use a",
    "start": "1836360",
    "end": "1842720"
  },
  {
    "text": "product with scale DB uh a product like scale DB which adapts single level",
    "start": "1842720",
    "end": "1849120"
  },
  {
    "text": "transaction management yeah you can support a much wider variety of",
    "start": "1849120",
    "end": "1855480"
  },
  {
    "text": "databases so yeah now let's also consider the cons of microservices yeah first regarding uh",
    "start": "1855919",
    "end": "1863880"
  },
  {
    "text": "how to guarantee consistency of multiple databases yeah using uh 2pc allows us to",
    "start": "1863880",
    "end": "1870480"
  },
  {
    "text": "guarantee consistency across multiple databases next concerning more code to",
    "start": "1870480",
    "end": "1878559"
  },
  {
    "text": "create applications yeah this is uh mitigated",
    "start": "1878559",
    "end": "1883880"
  },
  {
    "text": "by the Frameworks provided by each 2pc product",
    "start": "1883880",
    "end": "1889559"
  },
  {
    "text": "so finally for how to operate diverse",
    "start": "1889559",
    "end": "1895919"
  },
  {
    "text": "databases yeah actually it is uh challenging to manage operations uh when",
    "start": "1897000",
    "end": "1902880"
  },
  {
    "text": "different databases are used in each micros service to strictly for the data",
    "start": "1902880",
    "end": "1908159"
  },
  {
    "text": "database service pattern so one possible solution we propose is to use 2pc with a scalable",
    "start": "1908159",
    "end": "1916360"
  },
  {
    "text": "distributed database where each micros service use uses",
    "start": "1916360",
    "end": "1921840"
  },
  {
    "text": "logically separated tables or databases yeah as shown in the diagram",
    "start": "1921840",
    "end": "1929279"
  },
  {
    "text": "below yeah you can create multiple logically separated database instances",
    "start": "1929279",
    "end": "1934799"
  },
  {
    "text": "on a single distributed database yeah then uh each micros service can use its own database",
    "start": "1934799",
    "end": "1942320"
  },
  {
    "text": "instance yeah this way you technically only need to manage one database simply",
    "start": "1942320",
    "end": "1948080"
  },
  {
    "text": "Ying database operations yeah while this approach might violate uh poly growth persistence",
    "start": "1948080",
    "end": "1955919"
  },
  {
    "text": "well we think it's a tradeoff between Simplicity in database operations and maintaining polyot",
    "start": "1955919",
    "end": "1964039"
  },
  {
    "text": "persistence yeah finally let me conclude this presentation yeah in this session we",
    "start": "1964039",
    "end": "1970080"
  },
  {
    "text": "first explain the challenges of transaction Management in microservices",
    "start": "1970080",
    "end": "1975159"
  },
  {
    "text": "and introduced the approaches of sag 2pc and TCC as",
    "start": "1975159",
    "end": "1980399"
  },
  {
    "text": "Solutions we then discussed uh the enhanced 2pc as a promising way for",
    "start": "1980399",
    "end": "1985919"
  },
  {
    "text": "effortless transaction management yeah we believe that the state of 2pc based",
    "start": "1985919",
    "end": "1991720"
  },
  {
    "text": "products are highly scalable available and fast and then do not sacrifice the",
    "start": "1991720",
    "end": "1997600"
  },
  {
    "text": "benefit of microservices yeah in particular scale",
    "start": "1997600",
    "end": "2002639"
  },
  {
    "text": "DB is the only solution that can perform transactions across non XA Comp client",
    "start": "2002639",
    "end": "2008120"
  },
  {
    "text": "data stores yeah finally we propose that using enhanced 2pc with a scalable",
    "start": "2008120",
    "end": "2014799"
  },
  {
    "text": "distributed database achieves further effortless transaction management and",
    "start": "2014799",
    "end": "2020000"
  },
  {
    "text": "operations in microservices yeah that concludes our presentation thank you for your",
    "start": "2020000",
    "end": "2025200"
  },
  {
    "text": "attention [Applause]",
    "start": "2025200",
    "end": "2031380"
  }
]