[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "hello i'm kevin and this talk is going",
    "start": "0",
    "end": "2159"
  },
  {
    "text": "to be about building kubernetes",
    "start": "2159",
    "end": "3520"
  },
  {
    "text": "operators in rust",
    "start": "3520",
    "end": "4880"
  },
  {
    "text": "and in particular it's going to be about",
    "start": "4880",
    "end": "6480"
  },
  {
    "text": "a crate that i've been working on",
    "start": "6480",
    "end": "8080"
  },
  {
    "text": "which allows you to define the object",
    "start": "8080",
    "end": "9840"
  },
  {
    "text": "life cycles using state machines",
    "start": "9840",
    "end": "13280"
  },
  {
    "start": "13000",
    "end": "41000"
  },
  {
    "text": "first a little bit about myself i've",
    "start": "13280",
    "end": "15440"
  },
  {
    "text": "been a rest developer for four years",
    "start": "15440",
    "end": "17279"
  },
  {
    "text": "i've been working with kubernetes for",
    "start": "17279",
    "end": "18800"
  },
  {
    "text": "one year i'm a maintainer on the",
    "start": "18800",
    "end": "20880"
  },
  {
    "text": "crestlip project",
    "start": "20880",
    "end": "22000"
  },
  {
    "text": "which we'll talk about a little bit",
    "start": "22000",
    "end": "23199"
  },
  {
    "text": "later and i'm the lead developer on the",
    "start": "23199",
    "end": "25199"
  },
  {
    "text": "crater crate which is the focus of this",
    "start": "25199",
    "end": "27439"
  },
  {
    "text": "talk",
    "start": "27439",
    "end": "28560"
  },
  {
    "text": "in this talk we're going to discuss",
    "start": "28560",
    "end": "30000"
  },
  {
    "text": "crater's unique api for developing",
    "start": "30000",
    "end": "31840"
  },
  {
    "text": "operators",
    "start": "31840",
    "end": "32800"
  },
  {
    "text": "i'm going to demo an operator that was",
    "start": "32800",
    "end": "35440"
  },
  {
    "text": "built using crater",
    "start": "35440",
    "end": "36800"
  },
  {
    "text": "and then i'm going to discuss the",
    "start": "36800",
    "end": "38160"
  },
  {
    "text": "upcoming features on craters roadmap",
    "start": "38160",
    "end": "41760"
  },
  {
    "start": "41000",
    "end": "129000"
  },
  {
    "text": "first a little bit of background on",
    "start": "41760",
    "end": "43120"
  },
  {
    "text": "crestlet crestlet stands for kubernetes",
    "start": "43120",
    "end": "45440"
  },
  {
    "text": "rust cubelet",
    "start": "45440",
    "end": "46719"
  },
  {
    "text": "and the goal of the project is to",
    "start": "46719",
    "end": "48239"
  },
  {
    "text": "re-implement cubelet using rust",
    "start": "48239",
    "end": "50640"
  },
  {
    "text": "and the focus of the project is to allow",
    "start": "50640",
    "end": "53280"
  },
  {
    "text": "for the development of cubelets which",
    "start": "53280",
    "end": "54719"
  },
  {
    "text": "support",
    "start": "54719",
    "end": "55440"
  },
  {
    "text": "alternative and experimental types of",
    "start": "55440",
    "end": "57199"
  },
  {
    "text": "workloads so the project",
    "start": "57199",
    "end": "59039"
  },
  {
    "text": "includes two cubelets one using the",
    "start": "59039",
    "end": "61920"
  },
  {
    "text": "wazey runtime",
    "start": "61920",
    "end": "62879"
  },
  {
    "text": "and one using the wask runtime and this",
    "start": "62879",
    "end": "66320"
  },
  {
    "text": "allows you to deploy",
    "start": "66320",
    "end": "68000"
  },
  {
    "text": "wasm applications using a kubernetes",
    "start": "68000",
    "end": "71680"
  },
  {
    "text": "cubelet",
    "start": "71680",
    "end": "73439"
  },
  {
    "text": "so how did i get involved with",
    "start": "73439",
    "end": "75360"
  },
  {
    "text": "developing operators",
    "start": "75360",
    "end": "77040"
  },
  {
    "text": "well last fall we wanted to improve",
    "start": "77040",
    "end": "80479"
  },
  {
    "text": "the api that was used to define the",
    "start": "80479",
    "end": "83040"
  },
  {
    "text": "lifecycle of pods within the",
    "start": "83040",
    "end": "85280"
  },
  {
    "text": "crestlet based cubelets and a cubelet is",
    "start": "85280",
    "end": "88640"
  },
  {
    "text": "essentially a",
    "start": "88640",
    "end": "89600"
  },
  {
    "text": "controller for managing pods",
    "start": "89600",
    "end": "93119"
  },
  {
    "text": "and so we developed this state machine",
    "start": "93119",
    "end": "95920"
  },
  {
    "text": "api",
    "start": "95920",
    "end": "97200"
  },
  {
    "text": "and i presented it both in a blog post",
    "start": "97200",
    "end": "101040"
  },
  {
    "text": "and at kubecon north america last fall",
    "start": "101040",
    "end": "103759"
  },
  {
    "text": "and we got excellent feedback from the",
    "start": "103759",
    "end": "105680"
  },
  {
    "text": "community and there was a huge desire",
    "start": "105680",
    "end": "107920"
  },
  {
    "text": "to split out the state machine api to",
    "start": "107920",
    "end": "110079"
  },
  {
    "text": "support arbitrary controllers and",
    "start": "110079",
    "end": "112240"
  },
  {
    "text": "operators",
    "start": "112240",
    "end": "113680"
  },
  {
    "text": "so that's how crater was started i split",
    "start": "113680",
    "end": "116719"
  },
  {
    "text": "that out",
    "start": "116719",
    "end": "118000"
  },
  {
    "text": "in december and january and then crater",
    "start": "118000",
    "end": "121040"
  },
  {
    "text": "was officially launched",
    "start": "121040",
    "end": "122479"
  },
  {
    "text": "in a blog post on february 1st and",
    "start": "122479",
    "end": "125200"
  },
  {
    "text": "crater stands for kubernetes rust",
    "start": "125200",
    "end": "127360"
  },
  {
    "text": "state machine operator next a little bit",
    "start": "127360",
    "end": "130319"
  },
  {
    "start": "129000",
    "end": "314000"
  },
  {
    "text": "of prior art",
    "start": "130319",
    "end": "131520"
  },
  {
    "text": "there's lots of frameworks out there for",
    "start": "131520",
    "end": "133200"
  },
  {
    "text": "developing operators",
    "start": "133200",
    "end": "134959"
  },
  {
    "text": "the biggest one is the operator sdk",
    "start": "134959",
    "end": "136879"
  },
  {
    "text": "which is a cncf project",
    "start": "136879",
    "end": "138800"
  },
  {
    "text": "it allows developing operators in go",
    "start": "138800",
    "end": "140720"
  },
  {
    "text": "ansible and helm",
    "start": "140720",
    "end": "142319"
  },
  {
    "text": "the go variant of this operator sdk",
    "start": "142319",
    "end": "145920"
  },
  {
    "text": "uses goes controller runtime as well as",
    "start": "145920",
    "end": "148800"
  },
  {
    "text": "cube builder",
    "start": "148800",
    "end": "149760"
  },
  {
    "text": "and it pulls in the kubernetes types",
    "start": "149760",
    "end": "151680"
  },
  {
    "text": "from the main kubernetes source code",
    "start": "151680",
    "end": "153760"
  },
  {
    "text": "and it offers a lot of plumbing and",
    "start": "153760",
    "end": "155440"
  },
  {
    "text": "templating around deploying operators",
    "start": "155440",
    "end": "158879"
  },
  {
    "text": "the the helm variant has a",
    "start": "158879",
    "end": "162080"
  },
  {
    "text": "limited subset of functionality but it",
    "start": "162080",
    "end": "164400"
  },
  {
    "text": "allows you to get deploying",
    "start": "164400",
    "end": "165920"
  },
  {
    "text": "oper your operator very quickly by",
    "start": "165920",
    "end": "168560"
  },
  {
    "text": "simply supplying a helm chart",
    "start": "168560",
    "end": "170400"
  },
  {
    "text": "and then the custom resource definition",
    "start": "170400",
    "end": "173040"
  },
  {
    "text": "spec",
    "start": "173040",
    "end": "173840"
  },
  {
    "text": "contains helm chart values which are",
    "start": "173840",
    "end": "175840"
  },
  {
    "text": "populated and then applied",
    "start": "175840",
    "end": "177519"
  },
  {
    "text": "and then the operator ensures that the",
    "start": "177519",
    "end": "179200"
  },
  {
    "text": "helm chart stays consistent with cluster",
    "start": "179200",
    "end": "181680"
  },
  {
    "text": "state",
    "start": "181680",
    "end": "183840"
  },
  {
    "text": "other languages such as python and and",
    "start": "183840",
    "end": "187360"
  },
  {
    "text": "ruby etc uh all have uh",
    "start": "187360",
    "end": "190720"
  },
  {
    "text": "controller frameworks which tend to sit",
    "start": "190720",
    "end": "193040"
  },
  {
    "text": "on top of the",
    "start": "193040",
    "end": "194239"
  },
  {
    "text": "main kubernetes client library for that",
    "start": "194239",
    "end": "196239"
  },
  {
    "text": "language",
    "start": "196239",
    "end": "197519"
  },
  {
    "text": "these offer limited functionality for",
    "start": "197519",
    "end": "199440"
  },
  {
    "text": "controllers",
    "start": "199440",
    "end": "201040"
  },
  {
    "text": "and rust includes this as well the cube",
    "start": "201040",
    "end": "204159"
  },
  {
    "text": "and cube runtime crates are both very",
    "start": "204159",
    "end": "206080"
  },
  {
    "text": "excellent",
    "start": "206080",
    "end": "207280"
  },
  {
    "text": "both crater and crestlet rely on them",
    "start": "207280",
    "end": "210080"
  },
  {
    "text": "under the hood",
    "start": "210080",
    "end": "211360"
  },
  {
    "text": "but cube runtime provides a controller",
    "start": "211360",
    "end": "213840"
  },
  {
    "text": "api",
    "start": "213840",
    "end": "214720"
  },
  {
    "text": "for rust some background on the basic",
    "start": "214720",
    "end": "218640"
  },
  {
    "text": "frameworks that i mentioned above",
    "start": "218640",
    "end": "221040"
  },
  {
    "text": "they typically just watch for for",
    "start": "221040",
    "end": "223200"
  },
  {
    "text": "resources of a specific type",
    "start": "223200",
    "end": "225680"
  },
  {
    "text": "you you have to sort of explicitly",
    "start": "225680",
    "end": "228720"
  },
  {
    "text": "define that watching logic",
    "start": "228720",
    "end": "230640"
  },
  {
    "text": "and then you have methods that you",
    "start": "230640",
    "end": "233360"
  },
  {
    "text": "populate for create",
    "start": "233360",
    "end": "234640"
  },
  {
    "text": "update and delete events for for your",
    "start": "234640",
    "end": "236959"
  },
  {
    "text": "managed resource",
    "start": "236959",
    "end": "238720"
  },
  {
    "text": "and these methods can be end up being",
    "start": "238720",
    "end": "241360"
  },
  {
    "text": "quite large and monolithic",
    "start": "241360",
    "end": "243519"
  },
  {
    "text": "and it doesn't provide a great structure",
    "start": "243519",
    "end": "246720"
  },
  {
    "text": "for you to define your operator's logic",
    "start": "246720",
    "end": "248720"
  },
  {
    "text": "in so more sophisticated frameworks like",
    "start": "248720",
    "end": "253040"
  },
  {
    "text": "the go operator sdk",
    "start": "253040",
    "end": "255599"
  },
  {
    "text": "do a lot of code generation for you they",
    "start": "255599",
    "end": "258239"
  },
  {
    "text": "wrap",
    "start": "258239",
    "end": "259040"
  },
  {
    "text": "the logic of your controller with a lot",
    "start": "259040",
    "end": "260880"
  },
  {
    "text": "of boilerplate that is required to",
    "start": "260880",
    "end": "263759"
  },
  {
    "text": "build good and reliable controllers",
    "start": "263759",
    "end": "266880"
  },
  {
    "text": "and they offer a very sophisticated api",
    "start": "266880",
    "end": "268960"
  },
  {
    "text": "for that and they have extended features",
    "start": "268960",
    "end": "271280"
  },
  {
    "text": "such as the ability to easily add",
    "start": "271280",
    "end": "273360"
  },
  {
    "text": "validating or mutating admissions web",
    "start": "273360",
    "end": "275360"
  },
  {
    "text": "hooks",
    "start": "275360",
    "end": "277199"
  },
  {
    "text": "and other extended features which we'll",
    "start": "277199",
    "end": "279840"
  },
  {
    "text": "discuss later",
    "start": "279840",
    "end": "281600"
  },
  {
    "text": "so some common features in all of these",
    "start": "281600",
    "end": "283600"
  },
  {
    "text": "frameworks is that there tends to be",
    "start": "283600",
    "end": "285600"
  },
  {
    "text": "kind of a single method that you're",
    "start": "285600",
    "end": "287680"
  },
  {
    "text": "intended to implement",
    "start": "287680",
    "end": "289199"
  },
  {
    "text": "in which you determine the difference",
    "start": "289199",
    "end": "292000"
  },
  {
    "text": "between the desired state of the",
    "start": "292000",
    "end": "293840"
  },
  {
    "text": "application that's defined in the crd",
    "start": "293840",
    "end": "296240"
  },
  {
    "text": "and the existing state of the cluster or",
    "start": "296240",
    "end": "299120"
  },
  {
    "text": "or whatever resources your operator is",
    "start": "299120",
    "end": "301120"
  },
  {
    "text": "managing",
    "start": "301120",
    "end": "302400"
  },
  {
    "text": "and these functions tend to be very",
    "start": "302400",
    "end": "304000"
  },
  {
    "text": "complex and",
    "start": "304000",
    "end": "306080"
  },
  {
    "text": "you're kind of left your own devices to",
    "start": "306080",
    "end": "308479"
  },
  {
    "text": "split up that logic into a reasonable",
    "start": "308479",
    "end": "311280"
  },
  {
    "text": "and maintainable piece of code",
    "start": "311280",
    "end": "314320"
  },
  {
    "start": "314000",
    "end": "452000"
  },
  {
    "text": "so the state machine api was an attempt",
    "start": "314320",
    "end": "316639"
  },
  {
    "text": "to",
    "start": "316639",
    "end": "317440"
  },
  {
    "text": "increase the reliability of of",
    "start": "317440",
    "end": "320000"
  },
  {
    "text": "implementing",
    "start": "320000",
    "end": "320720"
  },
  {
    "text": "this kind of application logic and break",
    "start": "320720",
    "end": "323759"
  },
  {
    "text": "up",
    "start": "323759",
    "end": "324720"
  },
  {
    "text": "these monolithic functions so the",
    "start": "324720",
    "end": "327840"
  },
  {
    "text": "general approach",
    "start": "327840",
    "end": "328880"
  },
  {
    "text": "is that for each sort of area of concern",
    "start": "328880",
    "end": "332400"
  },
  {
    "text": "that you might have in your",
    "start": "332400",
    "end": "333520"
  },
  {
    "text": "application's logic so an example would",
    "start": "333520",
    "end": "335440"
  },
  {
    "text": "be",
    "start": "335440",
    "end": "336080"
  },
  {
    "text": "pulling images for pods or mounting",
    "start": "336080",
    "end": "338880"
  },
  {
    "text": "volumes these would be separate areas of",
    "start": "338880",
    "end": "340560"
  },
  {
    "text": "concern",
    "start": "340560",
    "end": "341280"
  },
  {
    "text": "you would define a node in your state",
    "start": "341280",
    "end": "344160"
  },
  {
    "text": "machine graph",
    "start": "344160",
    "end": "345759"
  },
  {
    "text": "and you can define an arbitrary state",
    "start": "345759",
    "end": "347680"
  },
  {
    "text": "machine graph",
    "start": "347680",
    "end": "348800"
  },
  {
    "text": "for your application these nodes are",
    "start": "348800",
    "end": "352080"
  },
  {
    "text": "intended to be",
    "start": "352080",
    "end": "353600"
  },
  {
    "text": "infallible and if they do encounter an",
    "start": "353600",
    "end": "356400"
  },
  {
    "text": "error they should transition to an",
    "start": "356400",
    "end": "357919"
  },
  {
    "text": "explicit error node in the state machine",
    "start": "357919",
    "end": "360000"
  },
  {
    "text": "graph",
    "start": "360000",
    "end": "361039"
  },
  {
    "text": "which allows better error handling and",
    "start": "361039",
    "end": "364000"
  },
  {
    "text": "and retrying and things like that",
    "start": "364000",
    "end": "366720"
  },
  {
    "text": "um and then uh the state handlers i use",
    "start": "366720",
    "end": "370720"
  },
  {
    "text": "uh the term i use as handlers and that's",
    "start": "370720",
    "end": "373039"
  },
  {
    "text": "the actual body of code that's executed",
    "start": "373039",
    "end": "375199"
  },
  {
    "text": "within",
    "start": "375199",
    "end": "376000"
  },
  {
    "text": "each node in the state machine graph",
    "start": "376000",
    "end": "379280"
  },
  {
    "text": "so this offers some some really great",
    "start": "379280",
    "end": "382080"
  },
  {
    "text": "benefits",
    "start": "382080",
    "end": "383120"
  },
  {
    "text": "um the first is that the",
    "start": "383120",
    "end": "386240"
  },
  {
    "text": "rust compiler can enforce a lot of uh",
    "start": "386240",
    "end": "389280"
  },
  {
    "text": "nice safety guarantees on the",
    "start": "389280",
    "end": "392400"
  },
  {
    "text": "behavior of your operator so you can",
    "start": "392400",
    "end": "395360"
  },
  {
    "text": "ensure that",
    "start": "395360",
    "end": "397840"
  },
  {
    "text": "the state of your object only ever",
    "start": "397840",
    "end": "401199"
  },
  {
    "text": "transitions between states that you've",
    "start": "401199",
    "end": "403759"
  },
  {
    "text": "considered and it only transitions to",
    "start": "403759",
    "end": "407680"
  },
  {
    "text": "well-defined states and by using",
    "start": "407680",
    "end": "411039"
  },
  {
    "text": "infallible",
    "start": "411039",
    "end": "411840"
  },
  {
    "text": "state handlers we're able to sort of",
    "start": "411840",
    "end": "415199"
  },
  {
    "text": "avoid just completely dropping",
    "start": "415199",
    "end": "418319"
  },
  {
    "text": "the management of objects and",
    "start": "418319",
    "end": "421840"
  },
  {
    "text": "better encode the retry logic that you",
    "start": "421840",
    "end": "424639"
  },
  {
    "text": "may want to use with your",
    "start": "424639",
    "end": "425840"
  },
  {
    "text": "your application and then some other",
    "start": "425840",
    "end": "428639"
  },
  {
    "text": "things that you get out of the box",
    "start": "428639",
    "end": "430400"
  },
  {
    "text": "uh crater is able to automatically",
    "start": "430400",
    "end": "432400"
  },
  {
    "text": "update the kubernetes api to reflect the",
    "start": "432400",
    "end": "435039"
  },
  {
    "text": "state that you're currently",
    "start": "435039",
    "end": "436000"
  },
  {
    "text": "in it provides the latest version of the",
    "start": "436000",
    "end": "439440"
  },
  {
    "text": "object at all times to your state",
    "start": "439440",
    "end": "441199"
  },
  {
    "text": "handler",
    "start": "441199",
    "end": "442960"
  },
  {
    "text": "and finally in crestlet we're able to",
    "start": "442960",
    "end": "444800"
  },
  {
    "text": "supply a number of",
    "start": "444800",
    "end": "446479"
  },
  {
    "text": "common states that you may wish to",
    "start": "446479",
    "end": "448240"
  },
  {
    "text": "implement if you're implementing a",
    "start": "448240",
    "end": "449520"
  },
  {
    "text": "cubelet",
    "start": "449520",
    "end": "450000"
  },
  {
    "text": "specifically so digging a little bit",
    "start": "450000",
    "end": "453440"
  },
  {
    "start": "452000",
    "end": "552000"
  },
  {
    "text": "deeper into the crater api",
    "start": "453440",
    "end": "455360"
  },
  {
    "text": "there's really four major traits that",
    "start": "455360",
    "end": "457280"
  },
  {
    "text": "you need to be aware of",
    "start": "457280",
    "end": "458639"
  },
  {
    "text": "the operator trait you're intended to",
    "start": "458639",
    "end": "461039"
  },
  {
    "text": "implement a",
    "start": "461039",
    "end": "462240"
  },
  {
    "text": "type which implements operator and this",
    "start": "462240",
    "end": "464639"
  },
  {
    "text": "is uh",
    "start": "464639",
    "end": "465520"
  },
  {
    "text": "created as a singleton and this has some",
    "start": "465520",
    "end": "468720"
  },
  {
    "text": "associated types on it",
    "start": "468720",
    "end": "470560"
  },
  {
    "text": "namely manifest initial state and",
    "start": "470560",
    "end": "473039"
  },
  {
    "text": "deleted state",
    "start": "473039",
    "end": "474560"
  },
  {
    "text": "and we'll we'll discuss the roles of",
    "start": "474560",
    "end": "476639"
  },
  {
    "text": "these types a little bit later",
    "start": "476639",
    "end": "478080"
  },
  {
    "text": "in the demo next is the state trait",
    "start": "478080",
    "end": "481520"
  },
  {
    "text": "this is to be implemented for each state",
    "start": "481520",
    "end": "483599"
  },
  {
    "text": "in your state machine graph so you'll",
    "start": "483599",
    "end": "485199"
  },
  {
    "text": "implement this a number of times",
    "start": "485199",
    "end": "487520"
  },
  {
    "text": "and this has methods for defining the",
    "start": "487520",
    "end": "490240"
  },
  {
    "text": "status that should be reported to the",
    "start": "490240",
    "end": "491759"
  },
  {
    "text": "kubernetes api",
    "start": "491759",
    "end": "493199"
  },
  {
    "text": "when entering this state and then of",
    "start": "493199",
    "end": "495039"
  },
  {
    "text": "course the state handler is the the next",
    "start": "495039",
    "end": "497199"
  },
  {
    "text": "function",
    "start": "497199",
    "end": "498080"
  },
  {
    "text": "which returns a indication of which",
    "start": "498080",
    "end": "500800"
  },
  {
    "text": "state should be transitioned to or",
    "start": "500800",
    "end": "502319"
  },
  {
    "text": "whether the state machine should exit",
    "start": "502319",
    "end": "505039"
  },
  {
    "text": "the remaining two traits are used to",
    "start": "505039",
    "end": "506720"
  },
  {
    "text": "define types that will be",
    "start": "506720",
    "end": "509440"
  },
  {
    "text": "provided to your your state machine uh",
    "start": "509440",
    "end": "512320"
  },
  {
    "text": "your state handler",
    "start": "512320",
    "end": "513760"
  },
  {
    "text": "so there's object status that defines",
    "start": "513760",
    "end": "516719"
  },
  {
    "text": "the schema of the status that's reported",
    "start": "516719",
    "end": "518719"
  },
  {
    "text": "to the kubernetes api",
    "start": "518719",
    "end": "520560"
  },
  {
    "text": "and then there's object state which",
    "start": "520560",
    "end": "522880"
  },
  {
    "text": "defines the state that is",
    "start": "522880",
    "end": "525519"
  },
  {
    "text": "kept the data that's kept associated",
    "start": "525519",
    "end": "528160"
  },
  {
    "text": "with a single",
    "start": "528160",
    "end": "529200"
  },
  {
    "text": "state machine or a single object and",
    "start": "529200",
    "end": "532080"
  },
  {
    "text": "then there's",
    "start": "532080",
    "end": "532720"
  },
  {
    "text": "an associated type shared state which",
    "start": "532720",
    "end": "534640"
  },
  {
    "text": "represents the data that is shared",
    "start": "534640",
    "end": "536000"
  },
  {
    "text": "across",
    "start": "536000",
    "end": "536480"
  },
  {
    "text": "all state machines or all objects that",
    "start": "536480",
    "end": "538880"
  },
  {
    "text": "your operator is managing",
    "start": "538880",
    "end": "540880"
  },
  {
    "text": "and next i'd like to walk through a sort",
    "start": "540880",
    "end": "543200"
  },
  {
    "text": "of canonical demo",
    "start": "543200",
    "end": "544640"
  },
  {
    "text": "uh that i developed for the original",
    "start": "544640",
    "end": "546320"
  },
  {
    "text": "crater blog post",
    "start": "546320",
    "end": "547680"
  },
  {
    "text": "and utilizes a lot of the features of",
    "start": "547680",
    "end": "550399"
  },
  {
    "text": "craters api",
    "start": "550399",
    "end": "552399"
  },
  {
    "start": "552000",
    "end": "1060000"
  },
  {
    "text": "so if you'd like to try this demo at",
    "start": "552399",
    "end": "553920"
  },
  {
    "text": "home it is all of the code is",
    "start": "553920",
    "end": "556640"
  },
  {
    "text": "located in the examples directory within",
    "start": "556640",
    "end": "559279"
  },
  {
    "text": "the crater",
    "start": "559279",
    "end": "560240"
  },
  {
    "text": "sub crate within the main crustlet",
    "start": "560240",
    "end": "563680"
  },
  {
    "text": "repository",
    "start": "563680",
    "end": "565120"
  },
  {
    "text": "so if i go into this examples directory",
    "start": "565120",
    "end": "568080"
  },
  {
    "text": "you can see moose.rs that's the",
    "start": "568080",
    "end": "570000"
  },
  {
    "text": "implementation of the operator",
    "start": "570000",
    "end": "571600"
  },
  {
    "text": "and then assets has a number of useful",
    "start": "571600",
    "end": "573760"
  },
  {
    "text": "scripts and",
    "start": "573760",
    "end": "574640"
  },
  {
    "text": "manifests for playing around with the",
    "start": "574640",
    "end": "576480"
  },
  {
    "text": "operator so just quickly going through",
    "start": "576480",
    "end": "579519"
  },
  {
    "text": "the code for moose.rs i use",
    "start": "579519",
    "end": "583200"
  },
  {
    "text": "cube the cubecrates custom resource",
    "start": "583200",
    "end": "586080"
  },
  {
    "text": "derived macro to specify",
    "start": "586080",
    "end": "588560"
  },
  {
    "text": "the type for my custom resource",
    "start": "588560",
    "end": "592160"
  },
  {
    "text": "and this is great because i just have to",
    "start": "592160",
    "end": "593600"
  },
  {
    "text": "specify the contents of the spec field",
    "start": "593600",
    "end": "596560"
  },
  {
    "text": "and it derives the rest of the type",
    "start": "596560",
    "end": "599680"
  },
  {
    "text": "but one thing that i'd like to call out",
    "start": "599680",
    "end": "601360"
  },
  {
    "text": "is that crater requires that the status",
    "start": "601360",
    "end": "603200"
  },
  {
    "text": "field is used",
    "start": "603200",
    "end": "604240"
  },
  {
    "text": "that's optional on custom resources but",
    "start": "604240",
    "end": "606320"
  },
  {
    "text": "it's required by crater",
    "start": "606320",
    "end": "607920"
  },
  {
    "text": "so i name a status type that i've",
    "start": "607920",
    "end": "611279"
  },
  {
    "text": "defined below",
    "start": "611279",
    "end": "614079"
  },
  {
    "text": "this status type gets the first trait",
    "start": "614320",
    "end": "616399"
  },
  {
    "text": "implementation",
    "start": "616399",
    "end": "617680"
  },
  {
    "text": "from crater there's a method for",
    "start": "617680",
    "end": "620560"
  },
  {
    "text": "creating a failed status in the event",
    "start": "620560",
    "end": "622240"
  },
  {
    "text": "that crater",
    "start": "622240",
    "end": "622880"
  },
  {
    "text": "has an issue within its own run time and",
    "start": "622880",
    "end": "625279"
  },
  {
    "text": "needs to report that the object failed",
    "start": "625279",
    "end": "627680"
  },
  {
    "text": "to kubernetes and then there's also a",
    "start": "627680",
    "end": "630079"
  },
  {
    "text": "method where you should",
    "start": "630079",
    "end": "631680"
  },
  {
    "text": "take any information that's captured in",
    "start": "631680",
    "end": "633600"
  },
  {
    "text": "your status and produce a json patch",
    "start": "633600",
    "end": "635839"
  },
  {
    "text": "that will be sent to the kubernetes api",
    "start": "635839",
    "end": "639440"
  },
  {
    "text": "next there's moose state now this is the",
    "start": "639440",
    "end": "642560"
  },
  {
    "text": "data that is shared",
    "start": "642560",
    "end": "644720"
  },
  {
    "text": "amongst state handlers for a specific",
    "start": "644720",
    "end": "647120"
  },
  {
    "text": "object state machine so it is not shared",
    "start": "647120",
    "end": "649279"
  },
  {
    "text": "between",
    "start": "649279",
    "end": "649839"
  },
  {
    "text": "objects of a given resource type there's",
    "start": "649839",
    "end": "653040"
  },
  {
    "text": "a trait implementation for this object",
    "start": "653040",
    "end": "655680"
  },
  {
    "text": "which specifies the custom resource type",
    "start": "655680",
    "end": "658320"
  },
  {
    "text": "that we defined above",
    "start": "658320",
    "end": "659680"
  },
  {
    "text": "the status type for that resource and",
    "start": "659680",
    "end": "661760"
  },
  {
    "text": "then there is a type for sharing state",
    "start": "661760",
    "end": "663440"
  },
  {
    "text": "between",
    "start": "663440",
    "end": "664160"
  },
  {
    "text": "objects which is defined below and then",
    "start": "664160",
    "end": "667200"
  },
  {
    "text": "finally there's an async drop handler if",
    "start": "667200",
    "end": "669360"
  },
  {
    "text": "you run need to run asynchronous code",
    "start": "669360",
    "end": "671600"
  },
  {
    "text": "when the object is deregistered looking",
    "start": "671600",
    "end": "674800"
  },
  {
    "text": "at the first state",
    "start": "674800",
    "end": "675839"
  },
  {
    "text": "implementation this is the registration",
    "start": "675839",
    "end": "678160"
  },
  {
    "text": "state",
    "start": "678160",
    "end": "678880"
  },
  {
    "text": "where where a moose is first created",
    "start": "678880",
    "end": "682480"
  },
  {
    "text": "you have to implement the state trait",
    "start": "682480",
    "end": "684160"
  },
  {
    "text": "for each of your states and",
    "start": "684160",
    "end": "686399"
  },
  {
    "text": "here there's a method called status",
    "start": "686399",
    "end": "688160"
  },
  {
    "text": "which simply produces the status type",
    "start": "688160",
    "end": "689920"
  },
  {
    "text": "that we defined above for that given",
    "start": "689920",
    "end": "691519"
  },
  {
    "text": "state",
    "start": "691519",
    "end": "692560"
  },
  {
    "text": "this is called when the state is entered",
    "start": "692560",
    "end": "694640"
  },
  {
    "text": "and should report the status",
    "start": "694640",
    "end": "696560"
  },
  {
    "text": "to the api kubernetes api for this state",
    "start": "696560",
    "end": "701680"
  },
  {
    "text": "the other method here is the next method",
    "start": "701680",
    "end": "704640"
  },
  {
    "text": "i also refer to this as the state",
    "start": "704640",
    "end": "706320"
  },
  {
    "text": "handler and this is the body of code",
    "start": "706320",
    "end": "707839"
  },
  {
    "text": "that's executed for a given state",
    "start": "707839",
    "end": "710639"
  },
  {
    "text": "it has access to an arc rw lock to any",
    "start": "710639",
    "end": "713839"
  },
  {
    "text": "shared state",
    "start": "713839",
    "end": "715279"
  },
  {
    "text": "it has access to the state for this",
    "start": "715279",
    "end": "717360"
  },
  {
    "text": "specific object which it has",
    "start": "717360",
    "end": "718959"
  },
  {
    "text": "a mutable reference to because that is",
    "start": "718959",
    "end": "720720"
  },
  {
    "text": "owned by this object",
    "start": "720720",
    "end": "722320"
  },
  {
    "text": "and then it has access to this manifest",
    "start": "722320",
    "end": "724480"
  },
  {
    "text": "type and this manifest type",
    "start": "724480",
    "end": "726320"
  },
  {
    "text": "implements streams so you can watch for",
    "start": "726320",
    "end": "728079"
  },
  {
    "text": "changes to",
    "start": "728079",
    "end": "729360"
  },
  {
    "text": "the the object and it also has a method",
    "start": "729360",
    "end": "732079"
  },
  {
    "text": "called latest which supplies",
    "start": "732079",
    "end": "733680"
  },
  {
    "text": "the latest copy of the object",
    "start": "733680",
    "end": "735680"
  },
  {
    "text": "immediately",
    "start": "735680",
    "end": "737360"
  },
  {
    "text": "so you can see here i run some code to",
    "start": "737360",
    "end": "739680"
  },
  {
    "text": "to",
    "start": "739680",
    "end": "740560"
  },
  {
    "text": "create register this object in the",
    "start": "740560",
    "end": "743120"
  },
  {
    "text": "shared state",
    "start": "743120",
    "end": "744560"
  },
  {
    "text": "and then i call transition next and tell",
    "start": "744560",
    "end": "747440"
  },
  {
    "text": "crater which",
    "start": "747440",
    "end": "748320"
  },
  {
    "text": "state i'd like to transition to",
    "start": "748320",
    "end": "751360"
  },
  {
    "text": "now in order to transition to a state i",
    "start": "751360",
    "end": "753360"
  },
  {
    "text": "have to implement transition to and",
    "start": "753360",
    "end": "755200"
  },
  {
    "text": "explicitly",
    "start": "755200",
    "end": "756320"
  },
  {
    "text": "tag that transition as as valid with the",
    "start": "756320",
    "end": "758880"
  },
  {
    "text": "compiler",
    "start": "758880",
    "end": "760160"
  },
  {
    "text": "and this is to improve the",
    "start": "760160",
    "end": "763200"
  },
  {
    "text": "the rigor of the state machine",
    "start": "763200",
    "end": "764560"
  },
  {
    "text": "implementation and ensure that",
    "start": "764560",
    "end": "766639"
  },
  {
    "text": "invalid state transitions are not taken",
    "start": "766639",
    "end": "770079"
  },
  {
    "text": "i'm not going to go into too much detail",
    "start": "770079",
    "end": "771760"
  },
  {
    "text": "on all of these states but i just like",
    "start": "771760",
    "end": "773600"
  },
  {
    "text": "to call out that there's a derived macro",
    "start": "773600",
    "end": "775440"
  },
  {
    "text": "for",
    "start": "775440",
    "end": "775839"
  },
  {
    "text": "for defining valid transitions um",
    "start": "775839",
    "end": "779839"
  },
  {
    "text": "and then i'll just uh comment on the",
    "start": "779839",
    "end": "781680"
  },
  {
    "text": "behavior of the state machine so",
    "start": "781680",
    "end": "783920"
  },
  {
    "text": "the next state is roaming around the",
    "start": "783920",
    "end": "786320"
  },
  {
    "text": "moose will do that until it gets hungry",
    "start": "786320",
    "end": "788880"
  },
  {
    "text": "and with some probability it'll make a",
    "start": "788880",
    "end": "790639"
  },
  {
    "text": "friend and update that shared state",
    "start": "790639",
    "end": "792639"
  },
  {
    "text": "map when it gets hungry it transitions",
    "start": "792639",
    "end": "796079"
  },
  {
    "text": "to the eating state",
    "start": "796079",
    "end": "797760"
  },
  {
    "text": "this simply waits for some duration and",
    "start": "797760",
    "end": "800079"
  },
  {
    "text": "then replenishes the moose's food",
    "start": "800079",
    "end": "802079"
  },
  {
    "text": "and then transitions to the sleeping",
    "start": "802079",
    "end": "803680"
  },
  {
    "text": "state uh from the sleeping state",
    "start": "803680",
    "end": "806560"
  },
  {
    "text": "we simply wait 20 seconds and then",
    "start": "806560",
    "end": "808560"
  },
  {
    "text": "transition back to roaming",
    "start": "808560",
    "end": "810399"
  },
  {
    "text": "and then the final state is a deleted or",
    "start": "810399",
    "end": "813200"
  },
  {
    "text": "or deregistration state",
    "start": "813200",
    "end": "815279"
  },
  {
    "text": "this is a state that on",
    "start": "815279",
    "end": "818399"
  },
  {
    "text": "an operator like a cubelet uh you may",
    "start": "818399",
    "end": "821199"
  },
  {
    "text": "transition to",
    "start": "821199",
    "end": "822160"
  },
  {
    "text": "within the handlers of other",
    "start": "822160",
    "end": "825360"
  },
  {
    "text": "other states in your state machine graph",
    "start": "825360",
    "end": "827120"
  },
  {
    "text": "so a pod may be running and then",
    "start": "827120",
    "end": "829040"
  },
  {
    "text": "it exits and it's successful and you",
    "start": "829040",
    "end": "830800"
  },
  {
    "text": "transition to the completed state",
    "start": "830800",
    "end": "832639"
  },
  {
    "text": "and that exits the state machine or",
    "start": "832639",
    "end": "836079"
  },
  {
    "text": "in the case of this operator i never",
    "start": "836079",
    "end": "838399"
  },
  {
    "text": "explicitly transition to it and the",
    "start": "838399",
    "end": "840160"
  },
  {
    "text": "state machine simply runs forever",
    "start": "840160",
    "end": "842720"
  },
  {
    "text": "however when an object is deleted with",
    "start": "842720",
    "end": "845040"
  },
  {
    "text": "the kubernetes api",
    "start": "845040",
    "end": "846320"
  },
  {
    "text": "crater needs to transition to a state",
    "start": "846320",
    "end": "848399"
  },
  {
    "text": "that allows the",
    "start": "848399",
    "end": "849360"
  },
  {
    "text": "object to clean up and then exit and so",
    "start": "849360",
    "end": "853040"
  },
  {
    "text": "this state needs to exist for crater to",
    "start": "853040",
    "end": "855680"
  },
  {
    "text": "transition to it will interrupt the",
    "start": "855680",
    "end": "857680"
  },
  {
    "text": "execution of the state machine",
    "start": "857680",
    "end": "859680"
  },
  {
    "text": "transition to this state and then",
    "start": "859680",
    "end": "862000"
  },
  {
    "text": "execute from this state",
    "start": "862000",
    "end": "863600"
  },
  {
    "text": "until the state machine exits and you",
    "start": "863600",
    "end": "865839"
  },
  {
    "text": "can see that this state calls transition",
    "start": "865839",
    "end": "867760"
  },
  {
    "text": "complete which",
    "start": "867760",
    "end": "869839"
  },
  {
    "text": "completes and and terminates the the",
    "start": "869839",
    "end": "872480"
  },
  {
    "text": "execution of the state machine",
    "start": "872480",
    "end": "874079"
  },
  {
    "text": "and then it returns a result which",
    "start": "874079",
    "end": "875920"
  },
  {
    "text": "indicates whether the state machine",
    "start": "875920",
    "end": "877760"
  },
  {
    "text": "exited gracefully or not for our shared",
    "start": "877760",
    "end": "880720"
  },
  {
    "text": "state i have a simple",
    "start": "880720",
    "end": "881920"
  },
  {
    "text": "hash map of relationships between mooses",
    "start": "881920",
    "end": "884959"
  },
  {
    "text": "and then i implement moose tracker this",
    "start": "884959",
    "end": "888160"
  },
  {
    "text": "is the type that will implement",
    "start": "888160",
    "end": "892320"
  },
  {
    "text": "our operator trait and these are created",
    "start": "892320",
    "end": "895040"
  },
  {
    "text": "essentially as singletons",
    "start": "895040",
    "end": "897440"
  },
  {
    "text": "so scrolling down this is the",
    "start": "897440",
    "end": "899920"
  },
  {
    "text": "implementation of the operator trait",
    "start": "899920",
    "end": "902000"
  },
  {
    "text": "i again reference the status and",
    "start": "902000",
    "end": "904880"
  },
  {
    "text": "resource",
    "start": "904880",
    "end": "905839"
  },
  {
    "text": "type definitions from above i indicate",
    "start": "905839",
    "end": "908480"
  },
  {
    "text": "that the tag state is the first state",
    "start": "908480",
    "end": "910480"
  },
  {
    "text": "that should be entered when an object",
    "start": "910480",
    "end": "912000"
  },
  {
    "text": "state machine is created i indicate that",
    "start": "912000",
    "end": "914480"
  },
  {
    "text": "the release state is that that state",
    "start": "914480",
    "end": "916240"
  },
  {
    "text": "that should be transitioned to when an",
    "start": "916240",
    "end": "917839"
  },
  {
    "text": "object is deleted",
    "start": "917839",
    "end": "919279"
  },
  {
    "text": "and finally i reference the state type",
    "start": "919279",
    "end": "922399"
  },
  {
    "text": "that is",
    "start": "922399",
    "end": "922880"
  },
  {
    "text": "is specific to each object",
    "start": "922880",
    "end": "926160"
  },
  {
    "text": "there's a couple of methods that need to",
    "start": "926160",
    "end": "927600"
  },
  {
    "text": "be implemented so the first is to",
    "start": "927600",
    "end": "929839"
  },
  {
    "text": "create that initial state type for a",
    "start": "929839",
    "end": "932880"
  },
  {
    "text": "given object",
    "start": "932880",
    "end": "934240"
  },
  {
    "text": "when the state machine is starting and",
    "start": "934240",
    "end": "936639"
  },
  {
    "text": "this can reference",
    "start": "936639",
    "end": "937920"
  },
  {
    "text": "the manifest of that object or any",
    "start": "937920",
    "end": "940720"
  },
  {
    "text": "shared state on the operator",
    "start": "940720",
    "end": "942720"
  },
  {
    "text": "next is a crater needs to be able to",
    "start": "942720",
    "end": "945120"
  },
  {
    "text": "fetch",
    "start": "945120",
    "end": "945759"
  },
  {
    "text": "a arc rw lock reference to the shared",
    "start": "945759",
    "end": "949040"
  },
  {
    "text": "state so that it can supply it to the",
    "start": "949040",
    "end": "950800"
  },
  {
    "text": "state handlers",
    "start": "950800",
    "end": "952000"
  },
  {
    "text": "and so there's a method that you need to",
    "start": "952000",
    "end": "953920"
  },
  {
    "text": "implement here to simply uh",
    "start": "953920",
    "end": "956160"
  },
  {
    "text": "you know create an uh a clone of that",
    "start": "956160",
    "end": "958240"
  },
  {
    "text": "that arc and",
    "start": "958240",
    "end": "959440"
  },
  {
    "text": "return it to crater and then finally",
    "start": "959440",
    "end": "962079"
  },
  {
    "text": "i've been working on some extended",
    "start": "962079",
    "end": "963519"
  },
  {
    "text": "functionality to support",
    "start": "963519",
    "end": "964800"
  },
  {
    "text": "uh admissions uh validating and mutating",
    "start": "964800",
    "end": "967519"
  },
  {
    "text": "web hooks",
    "start": "967519",
    "end": "968560"
  },
  {
    "text": "and here it's hidden behind a compiler",
    "start": "968560",
    "end": "972000"
  },
  {
    "text": "feature flag",
    "start": "972000",
    "end": "973120"
  },
  {
    "text": "but essentially you get a copy of the",
    "start": "973120",
    "end": "976079"
  },
  {
    "text": "object that's that's trying to be",
    "start": "976079",
    "end": "978399"
  },
  {
    "text": "changed or deleted or created and of",
    "start": "978399",
    "end": "981600"
  },
  {
    "text": "course you can reference any shared",
    "start": "981600",
    "end": "983199"
  },
  {
    "text": "state on the operator",
    "start": "983199",
    "end": "984480"
  },
  {
    "text": "uh if you need to validate within sort",
    "start": "984480",
    "end": "986560"
  },
  {
    "text": "of the context of all of the objects",
    "start": "986560",
    "end": "988160"
  },
  {
    "text": "that the operator is managing",
    "start": "988160",
    "end": "990399"
  },
  {
    "text": "and then here i'm simply validating that",
    "start": "990399",
    "end": "992959"
  },
  {
    "text": "the moose's name starts with the letter",
    "start": "992959",
    "end": "994720"
  },
  {
    "text": "m and then i can allow",
    "start": "994720",
    "end": "997759"
  },
  {
    "text": "the object or the the change to to occur",
    "start": "997759",
    "end": "1001199"
  },
  {
    "text": "and then i can optionally mutate the",
    "start": "1001199",
    "end": "1003040"
  },
  {
    "text": "object here i'm i'm leaving it unmutated",
    "start": "1003040",
    "end": "1006399"
  },
  {
    "text": "or i can deny the object and",
    "start": "1006399",
    "end": "1009440"
  },
  {
    "text": "return kind of a standard kubernetes",
    "start": "1009440",
    "end": "1011440"
  },
  {
    "text": "status which indicates why this has been",
    "start": "1011440",
    "end": "1013279"
  },
  {
    "text": "denied and that will be returned",
    "start": "1013279",
    "end": "1015360"
  },
  {
    "text": "by the kubernetes kubernetes api",
    "start": "1015360",
    "end": "1018399"
  },
  {
    "text": "to the client so scrolling down a little",
    "start": "1018399",
    "end": "1022160"
  },
  {
    "text": "bit",
    "start": "1022160",
    "end": "1022959"
  },
  {
    "text": "this final piece of code is our main",
    "start": "1022959",
    "end": "1025918"
  },
  {
    "text": "function and it's all you need to do to",
    "start": "1025919",
    "end": "1027520"
  },
  {
    "text": "actually start an operator with crater",
    "start": "1027520",
    "end": "1029760"
  },
  {
    "text": "so i create a cube config which i simply",
    "start": "1029760",
    "end": "1032640"
  },
  {
    "text": "infer",
    "start": "1032640",
    "end": "1033839"
  },
  {
    "text": "i create my operator singleton and then",
    "start": "1033839",
    "end": "1036400"
  },
  {
    "text": "i call",
    "start": "1036400",
    "end": "1036880"
  },
  {
    "text": "operator runtime new and uh pass it that",
    "start": "1036880",
    "end": "1040000"
  },
  {
    "text": "cubeconfig",
    "start": "1040000",
    "end": "1040798"
  },
  {
    "text": "and that operator singleton and then i",
    "start": "1040799",
    "end": "1043918"
  },
  {
    "text": "can optionally supply list parameters to",
    "start": "1043919",
    "end": "1045839"
  },
  {
    "text": "filter uh the objects that i'm managing",
    "start": "1045839",
    "end": "1048558"
  },
  {
    "text": "and then finally i call",
    "start": "1048559",
    "end": "1050679"
  },
  {
    "text": "runtimestart.weight and that'll block",
    "start": "1050679",
    "end": "1052480"
  },
  {
    "text": "forever",
    "start": "1052480",
    "end": "1053840"
  },
  {
    "text": "and it will spawn asynchronous tasks",
    "start": "1053840",
    "end": "1056960"
  },
  {
    "text": "for the execution of the state machines",
    "start": "1056960",
    "end": "1058799"
  },
  {
    "text": "for each object that's created",
    "start": "1058799",
    "end": "1061200"
  },
  {
    "text": "so if i exit out of this",
    "start": "1061200",
    "end": "1064799"
  },
  {
    "text": "and uh i come up and",
    "start": "1064840",
    "end": "1068799"
  },
  {
    "text": "re-run my operator",
    "start": "1068799",
    "end": "1072080"
  },
  {
    "text": "you can see that i am setting uh the",
    "start": "1072080",
    "end": "1075200"
  },
  {
    "text": "moose",
    "start": "1075200",
    "end": "1075840"
  },
  {
    "text": "module as well as all of crater to debug",
    "start": "1075840",
    "end": "1078799"
  },
  {
    "text": "for the purposes of this demo and i'm",
    "start": "1078799",
    "end": "1080559"
  },
  {
    "text": "i'm also activating the admissions web",
    "start": "1080559",
    "end": "1082720"
  },
  {
    "text": "hook",
    "start": "1082720",
    "end": "1083440"
  },
  {
    "text": "so that i can show you that so if i run",
    "start": "1083440",
    "end": "1086160"
  },
  {
    "text": "this",
    "start": "1086160",
    "end": "1086640"
  },
  {
    "text": "it'll i'm in the wrong directory",
    "start": "1086640",
    "end": "1090880"
  },
  {
    "text": "there we go it'll print out the crd",
    "start": "1090880",
    "end": "1095600"
  },
  {
    "text": "here um but it doesn't actually apply it",
    "start": "1095600",
    "end": "1098160"
  },
  {
    "text": "um",
    "start": "1098160",
    "end": "1098960"
  },
  {
    "text": "the crd is located in the assets",
    "start": "1098960",
    "end": "1100960"
  },
  {
    "text": "directory uh within the examples folder",
    "start": "1100960",
    "end": "1103520"
  },
  {
    "text": "so you can apply this yourself if you",
    "start": "1103520",
    "end": "1105760"
  },
  {
    "text": "want to play around",
    "start": "1105760",
    "end": "1108559"
  },
  {
    "text": "but you can see here that there was",
    "start": "1108559",
    "end": "1110160"
  },
  {
    "text": "already a moose registered with the api",
    "start": "1110160",
    "end": "1112160"
  },
  {
    "text": "so we got a resync event",
    "start": "1112160",
    "end": "1113919"
  },
  {
    "text": "uh when we started watching for mooses",
    "start": "1113919",
    "end": "1116640"
  },
  {
    "text": "we",
    "start": "1116640",
    "end": "1116960"
  },
  {
    "text": "created an event handler here that's",
    "start": "1116960",
    "end": "1119280"
  },
  {
    "text": "creating a state machine for this",
    "start": "1119280",
    "end": "1121039"
  },
  {
    "text": "this moose let me scroll up",
    "start": "1121039",
    "end": "1125120"
  },
  {
    "text": "and there's a number of",
    "start": "1125120",
    "end": "1129760"
  },
  {
    "text": "pieces of logging here and i'll talk",
    "start": "1130240",
    "end": "1132080"
  },
  {
    "text": "about that a little bit later",
    "start": "1132080",
    "end": "1135200"
  },
  {
    "text": "but initially the moose enters the tag",
    "start": "1135200",
    "end": "1137600"
  },
  {
    "text": "state",
    "start": "1137600",
    "end": "1138400"
  },
  {
    "text": "uh and there is a status update that's",
    "start": "1138400",
    "end": "1140960"
  },
  {
    "text": "patched",
    "start": "1140960",
    "end": "1142000"
  },
  {
    "text": "uh excuse me there's a status update",
    "start": "1142000",
    "end": "1144400"
  },
  {
    "text": "that's patched to kubernetes when it",
    "start": "1144400",
    "end": "1146000"
  },
  {
    "text": "enters this state",
    "start": "1146000",
    "end": "1147520"
  },
  {
    "text": "uh and then next it transitions to the",
    "start": "1147520",
    "end": "1150480"
  },
  {
    "text": "roaming state and there's a status",
    "start": "1150480",
    "end": "1152080"
  },
  {
    "text": "update for that",
    "start": "1152080",
    "end": "1153120"
  },
  {
    "text": "and then the moose will continue to move",
    "start": "1153120",
    "end": "1155600"
  },
  {
    "text": "through its states",
    "start": "1155600",
    "end": "1157600"
  },
  {
    "text": "as the operator progresses so here in",
    "start": "1157600",
    "end": "1160640"
  },
  {
    "start": "1158000",
    "end": "1253000"
  },
  {
    "text": "canines",
    "start": "1160640",
    "end": "1162000"
  },
  {
    "text": "you can see i can list mooses",
    "start": "1162000",
    "end": "1165919"
  },
  {
    "text": "and i have set certain fields on the",
    "start": "1165919",
    "end": "1168880"
  },
  {
    "text": "status to be printed out",
    "start": "1168880",
    "end": "1170480"
  },
  {
    "text": "when you use cube cuddle and so we can",
    "start": "1170480",
    "end": "1174080"
  },
  {
    "text": "see the moose transitioning through the",
    "start": "1174080",
    "end": "1175600"
  },
  {
    "text": "states",
    "start": "1175600",
    "end": "1177120"
  },
  {
    "text": "for the purposes of this demo i can",
    "start": "1177120",
    "end": "1180240"
  },
  {
    "text": "generate a large number",
    "start": "1180240",
    "end": "1183280"
  },
  {
    "text": "of mooses so here i generate 25",
    "start": "1183280",
    "end": "1188080"
  },
  {
    "text": "new mooses and the amount of time that",
    "start": "1188080",
    "end": "1191520"
  },
  {
    "text": "the moose",
    "start": "1191520",
    "end": "1192160"
  },
  {
    "text": "spends in the roaming state is",
    "start": "1192160",
    "end": "1194080"
  },
  {
    "text": "determined by its body weight that that",
    "start": "1194080",
    "end": "1195840"
  },
  {
    "text": "determines how long it takes to get",
    "start": "1195840",
    "end": "1197280"
  },
  {
    "text": "hungry and",
    "start": "1197280",
    "end": "1197919"
  },
  {
    "text": "and the body weight is sampled from a",
    "start": "1197919",
    "end": "1199280"
  },
  {
    "text": "normal distribution so",
    "start": "1199280",
    "end": "1201039"
  },
  {
    "text": "uh the mooses should go through the",
    "start": "1201039",
    "end": "1203600"
  },
  {
    "text": "state machine at different rates which",
    "start": "1203600",
    "end": "1205200"
  },
  {
    "text": "which makes it a little bit more",
    "start": "1205200",
    "end": "1206480"
  },
  {
    "text": "interesting",
    "start": "1206480",
    "end": "1208960"
  },
  {
    "text": "and then finally i can demonstrate the",
    "start": "1209039",
    "end": "1210960"
  },
  {
    "text": "uh the web hook capability so",
    "start": "1210960",
    "end": "1213440"
  },
  {
    "text": "i have a moose here named george which",
    "start": "1213440",
    "end": "1216400"
  },
  {
    "text": "is an invalid name",
    "start": "1216400",
    "end": "1218240"
  },
  {
    "text": "according to my rule and so i can",
    "start": "1218240",
    "end": "1221520"
  },
  {
    "text": "apply this manifest",
    "start": "1221520",
    "end": "1224960"
  },
  {
    "text": "and you can see uh in the log that the",
    "start": "1224960",
    "end": "1228080"
  },
  {
    "text": "request was denied",
    "start": "1228080",
    "end": "1229520"
  },
  {
    "text": "that went by quickly but you can also",
    "start": "1229520",
    "end": "1232000"
  },
  {
    "text": "see that the",
    "start": "1232000",
    "end": "1232799"
  },
  {
    "text": "response returned to the client is",
    "start": "1232799",
    "end": "1236400"
  },
  {
    "text": "that this is a invalid moose name",
    "start": "1236400",
    "end": "1240000"
  },
  {
    "text": "so hopefully this has been a",
    "start": "1240000",
    "end": "1243360"
  },
  {
    "text": "a nice overview of the api and",
    "start": "1243360",
    "end": "1246480"
  },
  {
    "text": "the functionality that you can implement",
    "start": "1246480",
    "end": "1248799"
  },
  {
    "text": "fairly concisely",
    "start": "1248799",
    "end": "1250080"
  },
  {
    "text": "using the crater api",
    "start": "1250080",
    "end": "1253279"
  },
  {
    "start": "1253000",
    "end": "1334000"
  },
  {
    "text": "next i'd like to talk a little bit about",
    "start": "1254159",
    "end": "1255760"
  },
  {
    "text": "some new functionality i've been working",
    "start": "1255760",
    "end": "1257280"
  },
  {
    "text": "on with crestlit and crater",
    "start": "1257280",
    "end": "1259280"
  },
  {
    "text": "the first is that both crates have",
    "start": "1259280",
    "end": "1260880"
  },
  {
    "text": "transitioned to using tracing",
    "start": "1260880",
    "end": "1262480"
  },
  {
    "text": "for all logging events that we emit and",
    "start": "1262480",
    "end": "1265200"
  },
  {
    "text": "this offers full compatibility with the",
    "start": "1265200",
    "end": "1267280"
  },
  {
    "text": "original log crate that we were using so",
    "start": "1267280",
    "end": "1269280"
  },
  {
    "text": "it shouldn't require any changes",
    "start": "1269280",
    "end": "1271360"
  },
  {
    "text": "for consumers of our crate",
    "start": "1271360",
    "end": "1274480"
  },
  {
    "text": "additionally i've been working on some",
    "start": "1274480",
    "end": "1275919"
  },
  {
    "text": "extended functionality for crater",
    "start": "1275919",
    "end": "1277919"
  },
  {
    "text": "so wherever log",
    "start": "1277919",
    "end": "1280960"
  },
  {
    "text": "events were emitted where we were",
    "start": "1280960",
    "end": "1282400"
  },
  {
    "text": "populating strings with the value of",
    "start": "1282400",
    "end": "1285360"
  },
  {
    "text": "variables those have been pulled out",
    "start": "1285360",
    "end": "1287679"
  },
  {
    "text": "into structured fields",
    "start": "1287679",
    "end": "1289679"
  },
  {
    "text": "which should allow you to dissect the",
    "start": "1289679",
    "end": "1292880"
  },
  {
    "text": "log output of crater using a",
    "start": "1292880",
    "end": "1295039"
  },
  {
    "text": "tool like jq for json parsing",
    "start": "1295039",
    "end": "1298640"
  },
  {
    "text": "and then i've added several key spans to",
    "start": "1298640",
    "end": "1302080"
  },
  {
    "text": "the tracing instrumentation in crater",
    "start": "1302080",
    "end": "1304640"
  },
  {
    "text": "namely",
    "start": "1304640",
    "end": "1305360"
  },
  {
    "text": "whenever an admission web hook request",
    "start": "1305360",
    "end": "1307280"
  },
  {
    "text": "is processed",
    "start": "1307280",
    "end": "1308400"
  },
  {
    "text": "whenever a single state node is executed",
    "start": "1308400",
    "end": "1311760"
  },
  {
    "text": "for an object",
    "start": "1311760",
    "end": "1312799"
  },
  {
    "text": "and then whenever an update is received",
    "start": "1312799",
    "end": "1314559"
  },
  {
    "text": "from the kubernetes api",
    "start": "1314559",
    "end": "1316559"
  },
  {
    "text": "and is processed and if you'd like to",
    "start": "1316559",
    "end": "1319120"
  },
  {
    "text": "read a little bit more about",
    "start": "1319120",
    "end": "1321200"
  },
  {
    "text": "tracing luca palmieri has an excellent",
    "start": "1321200",
    "end": "1324400"
  },
  {
    "text": "blog post slash book on deploying rust",
    "start": "1324400",
    "end": "1328480"
  },
  {
    "text": "in cloud native environments and and has",
    "start": "1328480",
    "end": "1330720"
  },
  {
    "text": "an entire section on tracing that's",
    "start": "1330720",
    "end": "1332480"
  },
  {
    "text": "that's really excellent",
    "start": "1332480",
    "end": "1334559"
  },
  {
    "start": "1334000",
    "end": "1401000"
  },
  {
    "text": "uh finally i'd like to talk about uh",
    "start": "1334559",
    "end": "1336559"
  },
  {
    "text": "craters road map a little bit",
    "start": "1336559",
    "end": "1338559"
  },
  {
    "text": "so uh on in the near term i'd like to",
    "start": "1338559",
    "end": "1341600"
  },
  {
    "text": "expand the ability to easily subscribe",
    "start": "1341600",
    "end": "1344559"
  },
  {
    "text": "to",
    "start": "1344559",
    "end": "1345440"
  },
  {
    "text": "watching different types of kubernetes",
    "start": "1345440",
    "end": "1347360"
  },
  {
    "text": "resources and i have an rfc out on",
    "start": "1347360",
    "end": "1349360"
  },
  {
    "text": "github for the api",
    "start": "1349360",
    "end": "1350880"
  },
  {
    "text": "proposal there in addition to that i'd",
    "start": "1350880",
    "end": "1353520"
  },
  {
    "text": "like to think a little bit about",
    "start": "1353520",
    "end": "1355280"
  },
  {
    "text": "how the state machine api can be",
    "start": "1355280",
    "end": "1357840"
  },
  {
    "text": "improved to",
    "start": "1357840",
    "end": "1359360"
  },
  {
    "text": "sort of identify where cluster state may",
    "start": "1359360",
    "end": "1362240"
  },
  {
    "text": "be deviating from",
    "start": "1362240",
    "end": "1363520"
  },
  {
    "text": "desired state and how to trigger",
    "start": "1363520",
    "end": "1366159"
  },
  {
    "text": "reconciliation within the context of a",
    "start": "1366159",
    "end": "1368320"
  },
  {
    "text": "state machine",
    "start": "1368320",
    "end": "1370320"
  },
  {
    "text": "finally i'd like to expand the",
    "start": "1370320",
    "end": "1372400"
  },
  {
    "text": "templating and",
    "start": "1372400",
    "end": "1374400"
  },
  {
    "text": "sort of boilerplate generation",
    "start": "1374400",
    "end": "1376640"
  },
  {
    "text": "surrounding",
    "start": "1376640",
    "end": "1377840"
  },
  {
    "text": "creating and deploying operators this is",
    "start": "1377840",
    "end": "1380000"
  },
  {
    "text": "something that's offered by the go sdk",
    "start": "1380000",
    "end": "1382400"
  },
  {
    "text": "and i think there's a lot of room for",
    "start": "1382400",
    "end": "1384400"
  },
  {
    "text": "improvement here with crater",
    "start": "1384400",
    "end": "1386880"
  },
  {
    "text": "and then i'd like to look at the",
    "start": "1386880",
    "end": "1388400"
  },
  {
    "text": "operator sdk's capabilities roadmap",
    "start": "1388400",
    "end": "1391200"
  },
  {
    "text": "for ways that i can offer very",
    "start": "1391200",
    "end": "1394559"
  },
  {
    "text": "simple apis to implement some of the",
    "start": "1394559",
    "end": "1396480"
  },
  {
    "text": "more advanced features such as",
    "start": "1396480",
    "end": "1398720"
  },
  {
    "text": "auto scaling and abnormal state",
    "start": "1398720",
    "end": "1400640"
  },
  {
    "text": "detection so",
    "start": "1400640",
    "end": "1402000"
  },
  {
    "start": "1401000",
    "end": "1427000"
  },
  {
    "text": "thank you for coming to my talk i hope",
    "start": "1402000",
    "end": "1403840"
  },
  {
    "text": "this has been very interesting and i",
    "start": "1403840",
    "end": "1405280"
  },
  {
    "text": "hope you'll check out crater",
    "start": "1405280",
    "end": "1407039"
  },
  {
    "text": "if you'd like to get in contact with me",
    "start": "1407039",
    "end": "1408799"
  },
  {
    "text": "or the crustlet project you can find",
    "start": "1408799",
    "end": "1411039"
  },
  {
    "text": "us on twitter github we both have",
    "start": "1411039",
    "end": "1414480"
  },
  {
    "text": "websites",
    "start": "1414480",
    "end": "1415440"
  },
  {
    "text": "and then finally for the crestlet",
    "start": "1415440",
    "end": "1416880"
  },
  {
    "text": "project there's a hashtag crestlet slack",
    "start": "1416880",
    "end": "1419360"
  },
  {
    "text": "channel in the kubernetes",
    "start": "1419360",
    "end": "1421279"
  },
  {
    "text": "slack so that's probably the easiest way",
    "start": "1421279",
    "end": "1424400"
  },
  {
    "text": "to reach out to us",
    "start": "1424400",
    "end": "1425679"
  },
  {
    "text": "thank you",
    "start": "1425679",
    "end": "1428799"
  }
]