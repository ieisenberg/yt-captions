[
  {
    "text": "thank you for coming to this fing session of the security uh track of uh",
    "start": "80",
    "end": "6640"
  },
  {
    "text": "cucon Chicago 2023 this is uh first introduction and",
    "start": "6640",
    "end": "12080"
  },
  {
    "text": "OSS first demo uh my name is Adam kachinski this is David we are from ad Logics and we do",
    "start": "12080",
    "end": "20720"
  },
  {
    "text": "a lot of fing in general and a lot of fing on of cntf projects um and this is",
    "start": "20720",
    "end": "27880"
  },
  {
    "text": "more of a practical approach to f um and should have a lot of we we have a",
    "start": "27880",
    "end": "35719"
  },
  {
    "text": "lot of examples and uh uh practical how tos to get started and to to get started",
    "start": "35719",
    "end": "42160"
  },
  {
    "text": "with fussing and triing your findings Etc the agenda we'll talk about the the",
    "start": "42160",
    "end": "49559"
  },
  {
    "text": "cncf fing ecosystem there are a lot of uh there's a lot of stuff going on for the cstf projects specifically um but",
    "start": "49559",
    "end": "57559"
  },
  {
    "text": "there are a lot of resources and materials available for for uh the open source uh Community as a whole um so if",
    "start": "57559",
    "end": "65478"
  },
  {
    "text": "you're not a cncf project this is also for you uh then uh we'll do do a little",
    "start": "65479",
    "end": "71720"
  },
  {
    "text": "intro on how to force a software software project um uh yeah I'll I'll",
    "start": "71720",
    "end": "78960"
  },
  {
    "text": "leave um I'll I'll get we'll get to that in a second uh and then the fing live cycle so what what happens when you have",
    "start": "78960",
    "end": "85479"
  },
  {
    "text": "written a fer what do you do what and how do you do it efficiently",
    "start": "85479",
    "end": "91040"
  },
  {
    "text": "uh and OSS for finally um which is a big part of the the fing life",
    "start": "91040",
    "end": "98479"
  },
  {
    "text": "cycle um so yeah uh fussing as a concept",
    "start": "100799",
    "end": "105880"
  },
  {
    "text": "is a way to in essence stress test applications and by and large the goal",
    "start": "105880",
    "end": "111360"
  },
  {
    "text": "is to find uh bugs both security and reliability issues and the goal is to",
    "start": "111360",
    "end": "118000"
  },
  {
    "text": "because it's stress testing we are working with Dynamic analysis here mean we actually execute the code on the",
    "start": "118000",
    "end": "123680"
  },
  {
    "text": "analysis so what you are doing when you're are fussing is you are developing",
    "start": "123680",
    "end": "128959"
  },
  {
    "text": "a fusser and this fer will call your application essentially infinitely",
    "start": "128959",
    "end": "134239"
  },
  {
    "text": "meaning it will just run forever either until it stops or until it finds a bug or so and when I say it stops I mean",
    "start": "134239",
    "end": "142160"
  },
  {
    "text": "when someone stops it uh so it's just a process of stress testing your",
    "start": "142160",
    "end": "148000"
  },
  {
    "text": "application over and over again and in general the fussing uh approach that that that we use which is coverage",
    "start": "148000",
    "end": "154160"
  },
  {
    "text": "guided fussing becomes better over time when analyzing a spe specific Target and",
    "start": "154160",
    "end": "159959"
  },
  {
    "text": "this is because it relies on what we call like genetic mutational algorithms that builds up a set of test cases where",
    "start": "159959",
    "end": "167080"
  },
  {
    "text": "each test case represents kind of represents a an input that will execute",
    "start": "167080",
    "end": "173319"
  },
  {
    "text": "a unique code path in the Target project relative to the other test cases that",
    "start": "173319",
    "end": "178360"
  },
  {
    "text": "the first has generated so that's kind of like the the short story I don't want to go into too many of the of the",
    "start": "178360",
    "end": "183799"
  },
  {
    "text": "conceptual details of fussing but the goal is to find bucks find",
    "start": "183799",
    "end": "189599"
  },
  {
    "text": "vulnerabilities so perhaps importantly to say here it's not only vulnerabilities it finds and the way you",
    "start": "189599",
    "end": "195440"
  },
  {
    "text": "do that is to execute your application your software over and over again with sort of random input um many projects",
    "start": "195440",
    "end": "202920"
  },
  {
    "text": "here are in in CSF are being first including all the ones shown here um and",
    "start": "202920",
    "end": "209200"
  },
  {
    "text": "primarily perhaps it's worth mentioning Envoy and fluent bit because these were",
    "start": "209200",
    "end": "214360"
  },
  {
    "text": "some of the early adopter of fing primarily because they are written in memory ons safe languages so they're",
    "start": "214360",
    "end": "219840"
  },
  {
    "text": "written in CN C++ and this is usually where you this is where fing kind of originates from because memory",
    "start": "219840",
    "end": "226400"
  },
  {
    "text": "corruption issues can have much more severe consequences than say um kind like uncal exceptions in",
    "start": "226400",
    "end": "234159"
  },
  {
    "text": "python or so um so the cncf fussing ecosystem has",
    "start": "234159",
    "end": "239760"
  },
  {
    "text": "kind of like is is a relatively small ecosystem in the sense that we have one repository",
    "start": "239760",
    "end": "246560"
  },
  {
    "text": "G up.com cncf cncf fing and you'll find a lot of resources that we we have for",
    "start": "246560",
    "end": "252840"
  },
  {
    "text": "fing cncf projects there you'll find audit reports so the usual approach that we take as a cncf fing team is we engage",
    "start": "252840",
    "end": "259840"
  },
  {
    "text": "with the with the given cncf project the maintainers in this case we analyze a bit of their threat model the attack",
    "start": "259840",
    "end": "266040"
  },
  {
    "text": "surface what are the consequences of if something goes wrong when this API are called and so on and we then collaborate",
    "start": "266040",
    "end": "273840"
  },
  {
    "text": "with the maintainers to build up a a fussing Suite which will call the application in many different ways and a",
    "start": "273840",
    "end": "280199"
  },
  {
    "text": "fing Suite here is essentially just kind of like fing harnesses which are unit",
    "start": "280199",
    "end": "285800"
  },
  {
    "text": "tests on steroids in a sense and once we have done this collaboration with the",
    "start": "285800",
    "end": "291400"
  },
  {
    "text": "cncf projects we write up an audit report that has details of each of the Bucks found the various findings whether",
    "start": "291400",
    "end": "298639"
  },
  {
    "text": "Buck are vulnerability or reliability issues and you can find all these reports in the uh the repository shown",
    "start": "298639",
    "end": "305759"
  },
  {
    "text": "here CCF foring and um another key key component",
    "start": "305759",
    "end": "311080"
  },
  {
    "text": "in cncf fussing is uh the project OSS which is a service run by Google uh",
    "start": "311080",
    "end": "316440"
  },
  {
    "text": "which is essentially just a get up repository but the point is that you place some files in this repository that",
    "start": "316440",
    "end": "323919"
  },
  {
    "text": "builds the foress of your given project so e will have a project folder on USS for envo will have a project F onus and",
    "start": "323919",
    "end": "331720"
  },
  {
    "text": "osus will Google will then build your software and run it in the cloud and",
    "start": "331720",
    "end": "337160"
  },
  {
    "text": "report to you if there are any any issues found the importance is here that they will do it on a daily basis so you",
    "start": "337160",
    "end": "342960"
  },
  {
    "text": "develop a Fuster you put it up on this repository and then they'll run it for the next 10 years or as long as they",
    "start": "342960",
    "end": "348319"
  },
  {
    "text": "keep it going and this is really Central to the way we fuss in cncf because we help",
    "start": "348319",
    "end": "355319"
  },
  {
    "text": "write the harnesses and then we let the maintainers take take over as much as possible we'll give you uh so ESS is is",
    "start": "355319",
    "end": "363600"
  },
  {
    "text": "a really key here in the ecosystem and we'll give you some examples of of what it can do uh",
    "start": "363600",
    "end": "368880"
  },
  {
    "text": "later so we I just want to give a small shout out because we just released a fussing handbook that goes into what is",
    "start": "368880",
    "end": "376199"
  },
  {
    "text": "fossing how to F in various languages so in this case CN C++ Python and go and",
    "start": "376199",
    "end": "382280"
  },
  {
    "text": "then it also has a sort of thorough guide to assess for an end to-end walk through uh showing various details that",
    "start": "382280",
    "end": "388639"
  },
  {
    "text": "you don't really find in the documentation of ossus and gives a very pragmatic approach to how you can",
    "start": "388639",
    "end": "394720"
  },
  {
    "text": "um integrate into ossus um and if you are a maintainer out there at cncf",
    "start": "394720",
    "end": "399800"
  },
  {
    "text": "project maintainer out there it's worth mentioning that once you integrate into asss you are can also claim a bounty and",
    "start": "399800",
    "end": "405840"
  },
  {
    "text": "get a reward for actually submitting a project and and and enrolling in your",
    "start": "405840",
    "end": "411039"
  },
  {
    "text": "ssus so uh a small shout out there you can check the there's a link to the",
    "start": "411039",
    "end": "416120"
  },
  {
    "text": "handbook um with that I'll pass it over to Adam yeah so this this is a small walkth",
    "start": "416120",
    "end": "422680"
  },
  {
    "text": "through of um of fuzzing of writing a fuzer and running it um starting with",
    "start": "422680",
    "end": "429639"
  },
  {
    "text": "how how we write a fer um and David mentioned that we we do what what we do",
    "start": "429639",
    "end": "435080"
  },
  {
    "text": "with cere foring is we we we David and I write a bunch of fers for the cncer projects and hand it over to um to the",
    "start": "435080",
    "end": "443199"
  },
  {
    "text": "CN to the respective cncf projects and that moment it's a great thing",
    "start": "443199",
    "end": "449919"
  },
  {
    "text": "if the project takes the fing further adopts it maintains it um and uh perhaps",
    "start": "449919",
    "end": "456520"
  },
  {
    "text": "like write write their own um f harnesses in the future so this this is a smaller intro to uh how that process",
    "start": "456520",
    "end": "464039"
  },
  {
    "text": "looks like you need four things to uh fuss essentially at a high level uh you",
    "start": "464039",
    "end": "470520"
  },
  {
    "text": "have a piece of code that you want to test for box and vulnerabilities um you have a fing engine that generates the test cases",
    "start": "470520",
    "end": "478720"
  },
  {
    "text": "that uh that David mentioned in the intro um and your F harness that's the",
    "start": "478720",
    "end": "484639"
  },
  {
    "text": "test that you write as the developer um and finally you need time to run the",
    "start": "484639",
    "end": "491319"
  },
  {
    "text": "fuzer it needs to run uh independently Again David mentioned this in the in the",
    "start": "491319",
    "end": "496919"
  },
  {
    "text": "intro here we have an example of a harness uh this is a harness for the K",
    "start": "496919",
    "end": "502039"
  },
  {
    "text": "native project uh testing um uh this uh",
    "start": "502039",
    "end": "508199"
  },
  {
    "text": "admit method um and of the config validation controller uh what we do here",
    "start": "508199",
    "end": "514640"
  },
  {
    "text": "this is a little more of an advanced example um but what we do here is that",
    "start": "514640",
    "end": "520120"
  },
  {
    "text": "we create an admission request uh and randomize it and pass it to this admit",
    "start": "520120",
    "end": "527240"
  },
  {
    "text": "method to see if the admit method somehow uh crashes in when when",
    "start": "527240",
    "end": "534120"
  },
  {
    "text": "executing or being passed is being passed some sort of weird uh ad Mission",
    "start": "534120",
    "end": "541519"
  },
  {
    "text": "request and you can see here in the bottom this fer lives in the cncf fing",
    "start": "543120",
    "end": "549240"
  },
  {
    "text": "repository let's try to uh to look at how fing explores code as you recall",
    "start": "549240",
    "end": "556079"
  },
  {
    "text": "David in the intro mentioned that uh part of an important component of fing",
    "start": "556079",
    "end": "562440"
  },
  {
    "text": "is that fing explores the code that it tests which is why we need time to run",
    "start": "562440",
    "end": "568360"
  },
  {
    "text": "the fer to to a fer that we have written to give it time to explore the the target",
    "start": "568360",
    "end": "573680"
  },
  {
    "text": "application um so let's look at how fing uh does that so let's say here we we on",
    "start": "573680",
    "end": "579560"
  },
  {
    "text": "the right side we have a piece of code that we want to test for bux and vulnerabilities fairly simple um piece",
    "start": "579560",
    "end": "586519"
  },
  {
    "text": "of code that uh do does a series of checks against a string and uh returns",
    "start": "586519",
    "end": "593880"
  },
  {
    "text": "true if the string finally is equal to um a BC d in lower",
    "start": "593880",
    "end": "600800"
  },
  {
    "text": "case so we have our foring engine and typically as a developer we don't really",
    "start": "600800",
    "end": "606279"
  },
  {
    "text": "do much with the fing engine at a high level except for except of choosing it",
    "start": "606279",
    "end": "612160"
  },
  {
    "text": "um but what the fing engine does is that when when we ride our harness it gives",
    "start": "612160",
    "end": "618600"
  },
  {
    "text": "us uh the it and when we run that harness the the fing engine is in charge",
    "start": "618600",
    "end": "624079"
  },
  {
    "text": "of generating the test cases that we receive in our test harness",
    "start": "624079",
    "end": "629800"
  },
  {
    "text": "so I'll just quickly go back here to to this uh K native example um in the in",
    "start": "629800",
    "end": "636279"
  },
  {
    "text": "the top here we see that this is the test case that the fing engine generates",
    "start": "636279",
    "end": "642360"
  },
  {
    "text": "for us and we it's passed to our F harness as a parameter uh data here B",
    "start": "642360",
    "end": "649880"
  },
  {
    "text": "slice um and it's our job in the F harness to pass that test case onto the",
    "start": "649880",
    "end": "656839"
  },
  {
    "text": "code that we are testing so as you see here the engine gives the passes a test",
    "start": "656839",
    "end": "662720"
  },
  {
    "text": "case input test case to the F harness and the F harness's job is to pass that onto the um code that we are",
    "start": "662720",
    "end": "670839"
  },
  {
    "text": "testing so let's say that we we have written our harness and we run",
    "start": "670839",
    "end": "676399"
  },
  {
    "text": "it um now the engine will generate uh test cases at a very high speed so so",
    "start": "676399",
    "end": "683560"
  },
  {
    "text": "but let's let's take one let's take take an example and zoom in on a few of those",
    "start": "683560",
    "end": "688760"
  },
  {
    "text": "uh test cases that the fing engine will generate so let's say that the fing engine generates a test case that is z00",
    "start": "688760",
    "end": "695680"
  },
  {
    "text": "z um on the right side we see that the the",
    "start": "695680",
    "end": "700760"
  },
  {
    "text": "code that we're testing um well this this test case will explore the first",
    "start": "700760",
    "end": "706160"
  },
  {
    "text": "branch of the code that we are testing uh as shown because the it's not uh for",
    "start": "706160",
    "end": "712880"
  },
  {
    "text": "uh it doesn't have a length of four so it returns in the first Branch here next",
    "start": "712880",
    "end": "719160"
  },
  {
    "text": "the the fuzing engine um is able to after maybe a few thousand executions is",
    "start": "719160",
    "end": "724560"
  },
  {
    "text": "able to generate a test case of four zeros um and is is able to pass or get",
    "start": "724560",
    "end": "731040"
  },
  {
    "text": "past the first uh length check there so it it goes into the second Branch there",
    "start": "731040",
    "end": "736839"
  },
  {
    "text": "um and returns because the first uh character of the bite or the first bite is not an a lower case",
    "start": "736839",
    "end": "743720"
  },
  {
    "text": "a or sorry the first um first character of the string is not a Lowe a so the F",
    "start": "743720",
    "end": "750839"
  },
  {
    "text": "the fing engine uh is able to at at a later point in the when running is able",
    "start": "750839",
    "end": "756760"
  },
  {
    "text": "to generate a three three zeros and is able to get past the first um branch and",
    "start": "756760",
    "end": "764720"
  },
  {
    "text": "return in the sorry get past the second branch and return in the third and so forth and in that way the fing engine is",
    "start": "764720",
    "end": "773199"
  },
  {
    "text": "able to get the feedback that it uh receives from the um from exploring the",
    "start": "773199",
    "end": "780079"
  },
  {
    "text": "code and generate meaningful test",
    "start": "780079",
    "end": "783880"
  },
  {
    "text": "cases so essential component this in this example is devices rely on generating random data but as you see in",
    "start": "786000",
    "end": "793040"
  },
  {
    "text": "this in this function there are four bytes the fer has to guess that's 32",
    "start": "793040",
    "end": "798279"
  },
  {
    "text": "bits if you are to generate a test case that gets down to the return true statement you have to guess one out of 2",
    "start": "798279",
    "end": "806040"
  },
  {
    "text": "to 32 the fer BAS on the coverage feedback reduces this significantly by each time",
    "start": "806040",
    "end": "813800"
  },
  {
    "text": "it passes that condition it saves that test case and puts it in what we call its corpus now the point is then in the",
    "start": "813800",
    "end": "822040"
  },
  {
    "text": "next time the fer runs it picks one of the test cases from the Corpus mutates it and then tries that so instead of",
    "start": "822040",
    "end": "829760"
  },
  {
    "text": "having to guess one in 2 to 32 it has to guess four times one in two two one out",
    "start": "829760",
    "end": "836680"
  },
  {
    "text": "of 256 because a bite is only eight bits so that's the central component here",
    "start": "836680",
    "end": "842240"
  },
  {
    "text": "each time we get past one condition we get past a we save that test case we",
    "start": "842240",
    "end": "848120"
  },
  {
    "text": "have it took one out of 256 guesses to find that to find the test case that",
    "start": "848120",
    "end": "853399"
  },
  {
    "text": "would pass the first condition we then save that corbits and we only have to guess one out of 256 again one out of",
    "start": "853399",
    "end": "859600"
  },
  {
    "text": "256 again so that's the central component here we it reduces the complexity the coverage feedback",
    "start": "859600",
    "end": "865480"
  },
  {
    "text": "mechanism because it knows which code was executed that's component here it's it's random but",
    "start": "865480",
    "end": "872600"
  },
  {
    "text": "because of the coverage feedback you don't have to have these huge complexities as you might might would",
    "start": "872600",
    "end": "879680"
  },
  {
    "text": "assume yeah make a note of the corus because we will get back to that later when we find uh when we go into how we",
    "start": "880279",
    "end": "888639"
  },
  {
    "text": "um reproduce a crash that the fers find so uh let's say that we have written our fuzer and we wait let's say that we have",
    "start": "888639",
    "end": "897399"
  },
  {
    "text": "written our fuzer and we want to test them so we write our fers and we submit them uh to a project",
    "start": "897399",
    "end": "905160"
  },
  {
    "text": "uh in this case we actually contribute them to an open source project for example a CNC project um and and make a",
    "start": "905160",
    "end": "913480"
  },
  {
    "text": "p p request get them merged Upstream when this project wants to run",
    "start": "913480",
    "end": "918959"
  },
  {
    "text": "these FES it can do so in three ways it could do it in the CI you can do it",
    "start": "918959",
    "end": "924240"
  },
  {
    "text": "continuously or the developers can run them locally and all of these uh",
    "start": "924240",
    "end": "930160"
  },
  {
    "text": "typically uh happen um when when you f a project so let's talk about the CI uh",
    "start": "930160",
    "end": "937240"
  },
  {
    "text": "let's talk about why and how of each of these uh three ways of running the FES when you f in the CI the the typical",
    "start": "937240",
    "end": "945880"
  },
  {
    "text": "reason you would do that is to uh have a bunch of fers that test the",
    "start": "945880",
    "end": "951360"
  },
  {
    "text": "code uh for buck in that bucks that the PRS introduce so you want to catch box",
    "start": "951360",
    "end": "959240"
  },
  {
    "text": "in PRS before the code is merged another good reason is also that",
    "start": "959240",
    "end": "965360"
  },
  {
    "text": "you want to ensure that you don't break your fer build or your fers in general so you if you have 70 fers you don't",
    "start": "965360",
    "end": "971680"
  },
  {
    "text": "want to merge a single fer that uh break all the other forces from and prevent them from",
    "start": "971680",
    "end": "977720"
  },
  {
    "text": "running how uh a good a good way to run in the CI is either yeah as I mentioned",
    "start": "977720",
    "end": "984040"
  },
  {
    "text": "in in PRS before they merged uh part part of the the stand the the workflows",
    "start": "984040",
    "end": "990240"
  },
  {
    "text": "or you can do it continuously in the CI with a project like cluster Force light",
    "start": "990240",
    "end": "995279"
  },
  {
    "text": "which um we will get into well it CL for slide is kind of a forcing framework",
    "start": "995279",
    "end": "1001759"
  },
  {
    "text": "that auto automates a lot of stuff uh and that that is uh that runs continuously uh in your CI um or you can",
    "start": "1001759",
    "end": "1009720"
  },
  {
    "text": "if you if you have a project that's integrated into essos you can use CIF fuss uh which is also a tool for which",
    "start": "1009720",
    "end": "1016959"
  },
  {
    "text": "is basically a get of action um that you just add to your G workflows",
    "start": "1016959",
    "end": "1023279"
  },
  {
    "text": "folder uh continuously uh we we touch upon it fing continuously in the CI but",
    "start": "1023600",
    "end": "1028918"
  },
  {
    "text": "let's talk about fing continuously in the background um and and why uh yeah again why and how",
    "start": "1028919",
    "end": "1038199"
  },
  {
    "text": "um you want to first of all you want to ensure that your f is actually run it happens a lot that a project will ride a",
    "start": "1038199",
    "end": "1046160"
  },
  {
    "text": "bunch of fers really excellent fers as well and forget about them and they",
    "start": "1046160",
    "end": "1051480"
  },
  {
    "text": "won't run um and I have personally seen cases where uh simply running get",
    "start": "1051480",
    "end": "1058799"
  },
  {
    "text": "getting these fers to run have found security issues uh another reason is that forers",
    "start": "1058799",
    "end": "1065679"
  },
  {
    "text": "some might some forers might need a lot of time to explore code um",
    "start": "1065679",
    "end": "1071360"
  },
  {
    "text": "and uh and get past in the example we saw that the fer in fer needed to get",
    "start": "1071360",
    "end": "1077200"
  },
  {
    "text": "past a bunch of branches these branches May sometimes be very complicated and uh difficult to not difficult they might",
    "start": "1077200",
    "end": "1083880"
  },
  {
    "text": "might require time to get ped um so fing continuously means that the fers will",
    "start": "1083880",
    "end": "1089520"
  },
  {
    "text": "have enough or plenty of time to to do so um and yeah three um U that's what I",
    "start": "1089520",
    "end": "1097799"
  },
  {
    "text": "just said uh how um OS for clust the for slide OS",
    "start": "1097799",
    "end": "1106520"
  },
  {
    "text": "for is an open source project David roduced I think no need to go into that but here's the link if you want to read",
    "start": "1106520",
    "end": "1112240"
  },
  {
    "text": "more about that strongly suggest um uh looking up on it we will go uh we",
    "start": "1112240",
    "end": "1118280"
  },
  {
    "text": "will do some demos on it uh in a in a bit testing locally um is the with testing local is",
    "start": "1118280",
    "end": "1127720"
  },
  {
    "text": "mainly when you want to uh when you're developing forces and you you um yeah",
    "start": "1127720",
    "end": "1134120"
  },
  {
    "text": "you want to make sure they run you want to perhaps uh like when you're makeing making contributions to a to a project",
    "start": "1134120",
    "end": "1140240"
  },
  {
    "text": "you want to ensure that you're not introducing box",
    "start": "1140240",
    "end": "1144400"
  },
  {
    "text": "yourself fing locally is always an intermediary step for fing continuously",
    "start": "1145640",
    "end": "1150960"
  },
  {
    "text": "it it's not a replacement for fing continuously the goal is to get the fers",
    "start": "1150960",
    "end": "1156039"
  },
  {
    "text": "to run um continuously and um locally",
    "start": "1156039",
    "end": "1161480"
  },
  {
    "text": "when you f locally you you kind of ensure that the that they can the fers",
    "start": "1161480",
    "end": "1167679"
  },
  {
    "text": "can also run continuously uh how uh yeah use",
    "start": "1167679",
    "end": "1175400"
  },
  {
    "text": "a you can you either compile your the fers um into binaries and run invoke",
    "start": "1175400",
    "end": "1180480"
  },
  {
    "text": "them on your command line or you you use some kind of CLI which is what the goang",
    "start": "1180480",
    "end": "1185720"
  },
  {
    "text": "U which which is what goang enables through their um through their test U CI",
    "start": "1185720",
    "end": "1193320"
  },
  {
    "text": "uh tool so uh I want to go back to F and continuous a bit more having gone",
    "start": "1193320",
    "end": "1199919"
  },
  {
    "text": "through all of these three ways of running let's go look a bit deeper into fing continuously because it's very",
    "start": "1199919",
    "end": "1205600"
  },
  {
    "text": "important um it's a very important component and part of fuzing fuzing continuously has uh a few",
    "start": "1205600",
    "end": "1213600"
  },
  {
    "text": "problems and difficulties um if you you might you typically you",
    "start": "1213600",
    "end": "1219880"
  },
  {
    "text": "will have a bunch of fers that require different um different amounts of time",
    "start": "1219880",
    "end": "1225640"
  },
  {
    "text": "to run you might have a fer that tests thousand lines of code and you might have a fer that tests 20,000 lines of",
    "start": "1225640",
    "end": "1231320"
  },
  {
    "text": "code naturally you should give more time to the fer that tests uh 20,000 lines of",
    "start": "1231320",
    "end": "1237120"
  },
  {
    "text": "code not naturally but most likely you should um the more fces you ride uh the more",
    "start": "1237120",
    "end": "1244679"
  },
  {
    "text": "complex it becomes to run these fers uh continuously uh it requires more effort",
    "start": "1244679",
    "end": "1251880"
  },
  {
    "text": "to manage uh 100 fers then couple two fers um and doing that in an automated",
    "start": "1251880",
    "end": "1259000"
  },
  {
    "text": "way it can be complex you want to reuse the Corpus um jumping back to the to the",
    "start": "1259000",
    "end": "1267120"
  },
  {
    "text": "points made by David and myself about the code exploration let's say David",
    "start": "1267120",
    "end": "1272360"
  },
  {
    "text": "mentioned the Corpus um let's say that your fer has found a way uh to or has",
    "start": "1272360",
    "end": "1278480"
  },
  {
    "text": "generated a seed that gets all the way to the uh to or or that gets deep into",
    "start": "1278480",
    "end": "1283960"
  },
  {
    "text": "the code you want to take that seed and use it to start your next F run so such",
    "start": "1283960",
    "end": "1290279"
  },
  {
    "text": "that you start the fer not from scratch again and it has to spend a bunch of time to find the same seat you want to",
    "start": "1290279",
    "end": "1296960"
  },
  {
    "text": "take that seat and uh start it uh start the next next first run with that",
    "start": "1296960",
    "end": "1302799"
  },
  {
    "text": "seat then the the fers might find crashes and uh you might fix those CR",
    "start": "1302799",
    "end": "1309240"
  },
  {
    "text": "crashes hopefully um and that also that also requires uh some some uh uh some",
    "start": "1309240",
    "end": "1317480"
  },
  {
    "text": "effort to to to get to get the details from the first runs and not forget like not lose them in in your logs for",
    "start": "1317480",
    "end": "1324080"
  },
  {
    "text": "example and because of that amongst other things Google or the",
    "start": "1324080",
    "end": "1329440"
  },
  {
    "text": "Google ESS Force project is a um is a great uh open source project for for",
    "start": "1329440",
    "end": "1335000"
  },
  {
    "text": "fuzzing it's is a critical component of component of Open Source fuzing",
    "start": "1335000",
    "end": "1340840"
  },
  {
    "text": "okay um going through that the workflow um this is a diagram of the of",
    "start": "1340840",
    "end": "1348279"
  },
  {
    "text": "for let's let's look more into ESS uh this is the workflow uh from the Dapper",
    "start": "1348279",
    "end": "1354600"
  },
  {
    "text": "uh fing audit uh this is also public in the Dapper fing audit report uh but here",
    "start": "1354600",
    "end": "1360440"
  },
  {
    "text": "we see the fing the how s works on left side we have the fers sitting in cncf",
    "start": "1360440",
    "end": "1366679"
  },
  {
    "text": "fussing that gets pulled into s at build time then we have the target source files in the top that also get pulled in",
    "start": "1366679",
    "end": "1375120"
  },
  {
    "text": "thens for builds those and over here over",
    "start": "1375120",
    "end": "1380320"
  },
  {
    "text": "here and run the forers for a couple of executions and check if if any of the uh",
    "start": "1380320",
    "end": "1386240"
  },
  {
    "text": "previous uh box are found if they are uh sorry if not not if if any of the",
    "start": "1386240",
    "end": "1391440"
  },
  {
    "text": "previous found box are fixed if they are uh they will update a central Buck",
    "start": "1391440",
    "end": "1398320"
  },
  {
    "text": "tracker and if they are not um maintain us will check next",
    "start": "1398320",
    "end": "1405240"
  },
  {
    "text": "time um you see a lot of going on here and Os automates that um for for the",
    "start": "1405240",
    "end": "1412960"
  },
  {
    "text": "project integrated there are three key components of os a doer file uh build sh",
    "start": "1412960",
    "end": "1420880"
  },
  {
    "text": "file a project. yam file the doger file is okay skip this is the East Studio",
    "start": "1420880",
    "end": "1428840"
  },
  {
    "text": "project davil will get more into that just highlighting them here uh there are",
    "start": "1428840",
    "end": "1433880"
  },
  {
    "text": "three key commands of OSS force uh build image build fers run",
    "start": "1433880",
    "end": "1440000"
  },
  {
    "text": "fer um the build image says the builds the the the environment for for building",
    "start": "1440000",
    "end": "1447559"
  },
  {
    "text": "the fers build fers build the binaries um so we can run them later and run fer",
    "start": "1447559",
    "end": "1454559"
  },
  {
    "text": "will run a fer force and if you are contributing fers to a project that's integrated into a zus these commands are",
    "start": "1454559",
    "end": "1461600"
  },
  {
    "text": "great to know so let's do a small demo uh almost live demo I made it this",
    "start": "1461600",
    "end": "1467440"
  },
  {
    "text": "morning but we do p pull in a lot of packages so",
    "start": "1467440",
    "end": "1472919"
  },
  {
    "text": "uh uh I wanted to to do a live demo but uh we internet the Wi-Fi is not super",
    "start": "1472919",
    "end": "1479240"
  },
  {
    "text": "strong so what we do here is all the way from scratch we clone the OS",
    "start": "1479240",
    "end": "1486440"
  },
  {
    "text": "repository highlighting uh basically A to Z of uh building the fers and running",
    "start": "1487399",
    "end": "1493200"
  },
  {
    "text": "them uh we we CD into the OSS uh directory that we we just cloned and we",
    "start": "1493200",
    "end": "1499919"
  },
  {
    "text": "build the image of the EO",
    "start": "1499919",
    "end": "1504600"
  },
  {
    "text": "fuzes now we have built the image and it's time to build a Fus EO has close to",
    "start": "1516159",
    "end": "1522679"
  },
  {
    "text": "70 fuzzers so this takes a while I have increased the speed here uh by quite a",
    "start": "1522679",
    "end": "1528559"
  },
  {
    "text": "lot I think 20 times um so uh just speeding through",
    "start": "1528559",
    "end": "1535398"
  },
  {
    "text": "that or maybe I haven't um but just skipping through here for time",
    "start": "1536559",
    "end": "1544279"
  },
  {
    "text": "purp this is all the process of building the fers here of EO and at some point at",
    "start": "1544279",
    "end": "1550640"
  },
  {
    "text": "some point uh it finishes",
    "start": "1550640",
    "end": "1555880"
  },
  {
    "text": "and here",
    "start": "1555880",
    "end": "1559679"
  },
  {
    "text": "we have we are finishing building the FAS we have still only run build image and build fers and we want to check the",
    "start": "1562880",
    "end": "1571080"
  },
  {
    "text": "uh which fers we have built these are all binaries these are all the F build fers of EO and now let's uh run a fuzer",
    "start": "1571080",
    "end": "1578200"
  },
  {
    "text": "so we invoke run fuzer EO and the fuzer name here we choose one of these here",
    "start": "1578200",
    "end": "1585880"
  },
  {
    "text": "the green ones here",
    "start": "1585880",
    "end": "1589600"
  },
  {
    "text": "and the f is running and the uh these three command",
    "start": "1592080",
    "end": "1597520"
  },
  {
    "text": "commands were all you needed uh to to get that done the demo just did that what about",
    "start": "1597520",
    "end": "1604440"
  },
  {
    "text": "when a fuzzer finds a crash uh it's part of is an important part of fuzzing why we do it um when noce finds a crash by",
    "start": "1604440",
    "end": "1613279"
  },
  {
    "text": "running one of our forers we get a an email with a link link to a report like",
    "start": "1613279",
    "end": "1618600"
  },
  {
    "text": "like so on the left side you see who which which people received or which emails received this bug report um these",
    "start": "1618600",
    "end": "1626240"
  },
  {
    "text": "are all defined in the project. yaml file of the of the Osos integration uh",
    "start": "1626240",
    "end": "1631720"
  },
  {
    "text": "that we we mentioned a few moment moments ago and here we have a link to the detailed report so let's go let's",
    "start": "1631720",
    "end": "1637559"
  },
  {
    "text": "click into that and we see",
    "start": "1637559",
    "end": "1642960"
  },
  {
    "text": "okay So Adam was just about to show you how uh the bug Reports look on first but I'm",
    "start": "1646520",
    "end": "1652600"
  },
  {
    "text": "going to give you a live example of that um just to show you how it looks while",
    "start": "1652600",
    "end": "1658279"
  },
  {
    "text": "clicking around the browser so say for example we have a repository here which contains a cncf project that we want to",
    "start": "1658279",
    "end": "1664960"
  },
  {
    "text": "fuss and we have uh two files here which is just a small library in C just a",
    "start": "1664960",
    "end": "1671600"
  },
  {
    "text": "example library and we have two FES so the library we have has a function",
    "start": "1671600",
    "end": "1678200"
  },
  {
    "text": "pass complex input pass complex format we want to write a fer for this entry",
    "start": "1678200",
    "end": "1684200"
  },
  {
    "text": "point into our cncf project the F that we will write in this",
    "start": "1684200",
    "end": "1689240"
  },
  {
    "text": "case simply looks as follows this is the entry point that the fuss engine will call so this is the core fun this is the",
    "start": "1689240",
    "end": "1696000"
  },
  {
    "text": "core fussing harness we have the fer will give us a raw buffer as well as the",
    "start": "1696000",
    "end": "1701120"
  },
  {
    "text": "size of this buffer a a RW buffer of bites and what we do is we wrap this raw buffer into a null-terminated string and",
    "start": "1701120",
    "end": "1708720"
  },
  {
    "text": "then we pass it to our uh function pass comp complex format what will happen now is that the F engine will continuously",
    "start": "1708720",
    "end": "1715320"
  },
  {
    "text": "give us a buffer that makes sense and we're trying to see if there are any memory corruption issues into in the",
    "start": "1715320",
    "end": "1721919"
  },
  {
    "text": "past complex format now if we are to so we want to integrate this into OSS for",
    "start": "1721919",
    "end": "1729480"
  },
  {
    "text": "and we have here a pull request so all of this by the way you can find in the handbook we have an example that that",
    "start": "1729480",
    "end": "1735399"
  },
  {
    "text": "goes through this but here we make the pull request into the OSS first repository you can see we are at the OSS",
    "start": "1735399",
    "end": "1741120"
  },
  {
    "text": "first repository and we make a OSS first example um initial integration and we",
    "start": "1741120",
    "end": "1747480"
  },
  {
    "text": "have here the dogger file Adam Adam spoke of the build as well as the project yaml and the dogger file the",
    "start": "1747480",
    "end": "1754000"
  },
  {
    "text": "only thing it does is it inherits from the uh Google provided base images which",
    "start": "1754000",
    "end": "1761039"
  },
  {
    "text": "has a lot of like fing um inin six tools and so on that you need the right",
    "start": "1761039",
    "end": "1766279"
  },
  {
    "text": "compilers and so on and then you just clone your repository so we have it inside the dogger file what we then do",
    "start": "1766279",
    "end": "1771799"
  },
  {
    "text": "is we built the code of our library in a certain way and in this case we have to use various environment variables which",
    "start": "1771799",
    "end": "1778240"
  },
  {
    "text": "com correspond to the the compiler we want to use as well as the flags to the compiler the key is here that these",
    "start": "1778240",
    "end": "1784880"
  },
  {
    "text": "flags they indicate various information we need to provide to the compiler that tells it instrument the code instrument",
    "start": "1784880",
    "end": "1792480"
  },
  {
    "text": "their code in a manner that is suitable for fussing and this includes instrumenting for code coverage feedback",
    "start": "1792480",
    "end": "1797960"
  },
  {
    "text": "as well as sanitizers such as address sanitizer and so on and then we build",
    "start": "1797960",
    "end": "1803480"
  },
  {
    "text": "our forers against this uh Library we have just uh compiled now this was",
    "start": "1803480",
    "end": "1809159"
  },
  {
    "text": "accepted so it was merged in we can see and now we actually have a a osus example inside the project folder of",
    "start": "1809159",
    "end": "1816120"
  },
  {
    "text": "osus what then happens is so this happened on the 7th of",
    "start": "1816120",
    "end": "1821159"
  },
  {
    "text": "August the we in the project yamu we had a field that said let's file",
    "start": "1821159",
    "end": "1827840"
  },
  {
    "text": "let's file GitHub issues meaning when ESS first finds an issue we get a bug",
    "start": "1827840",
    "end": "1833279"
  },
  {
    "text": "report on our GitHub tracker so now we are back in our ois example repository our assus project was M the",
    "start": "1833279",
    "end": "1840000"
  },
  {
    "text": "7th of August the 8th of August we got a notification that an issue has been found it tells us what US has found a bu",
    "start": "1840000",
    "end": "1847919"
  },
  {
    "text": "a bug in this project please see this link for details so we try and go into",
    "start": "1847919",
    "end": "1853039"
  },
  {
    "text": "this link and what we get is this Buck report so so what you see here is you",
    "start": "1853039",
    "end": "1858639"
  },
  {
    "text": "have the stack Trace first you see the sanitizer uh report there was a heap of",
    "start": "1858639",
    "end": "1864320"
  },
  {
    "text": "overflow we get the exact line where the error occurs so in this",
    "start": "1864320",
    "end": "1870399"
  },
  {
    "text": "case we can see that it's at this index and likely it's just because idx here is out of bound well it's because idx here",
    "start": "1870399",
    "end": "1876679"
  },
  {
    "text": "is out of bounds we can see what the specific input to the uh fer is which it",
    "start": "1876679",
    "end": "1881960"
  },
  {
    "text": "if it's asky we can see that there's a little key here saying fuss and then a bunch of stuff and we can use this test case to",
    "start": "1881960",
    "end": "1889000"
  },
  {
    "text": "also reproduce the issue so what we then did in our o first",
    "start": "1889000",
    "end": "1894080"
  },
  {
    "text": "example uh project was we tried to fix this issue and the way we did that was",
    "start": "1894080",
    "end": "1900600"
  },
  {
    "text": "we submitted a a patch fix bug and the bug was because there was some buffer",
    "start": "1900600",
    "end": "1906799"
  },
  {
    "text": "sizing going wrong instead of giving we we gave it X but we should actually give it xid two and this happened on the 10th",
    "start": "1906799",
    "end": "1914240"
  },
  {
    "text": "of August what then happened in our uh issue was osus came back the 11th of",
    "start": "1914240",
    "end": "1920799"
  },
  {
    "text": "August and said the 11th of August and said osus has closed this bug because",
    "start": "1920799",
    "end": "1925960"
  },
  {
    "text": "it's fixed so this is kind of like the the nature of OSS first you integrate",
    "start": "1925960",
    "end": "1932320"
  },
  {
    "text": "you make a pull request on osss with your three Docker file with your three files a Docker file a build and a",
    "start": "1932320",
    "end": "1938519"
  },
  {
    "text": "project yaml and then osss will simply start to run your build script and run",
    "start": "1938519",
    "end": "1943600"
  },
  {
    "text": "the various fers so F complex paraa that you have here and as well we also had",
    "start": "1943600",
    "end": "1949039"
  },
  {
    "text": "one other fuzer it will just continuously run these and report whenever any issues are found it does a",
    "start": "1949039",
    "end": "1955360"
  },
  {
    "text": "lot more than actually just find just report when issues are found there's a website here called introspector",
    "start": "1955360",
    "end": "1962240"
  },
  {
    "text": "..com which shows you data about all projects on osss so for example it shows",
    "start": "1962240",
    "end": "1968840"
  },
  {
    "text": "that it shows projects about 960 projects in OS for including uh and just",
    "start": "1968840",
    "end": "1975399"
  },
  {
    "text": "about one it shows that just about one 1.5 million uh functions are being analyzed and what it shows you is let's",
    "start": "1975399",
    "end": "1983279"
  },
  {
    "text": "look up our example project what it shows is uh first and foremost you have",
    "start": "1983279",
    "end": "1988760"
  },
  {
    "text": "a code coverage report so you can look at the exact lines of code that",
    "start": "1988760",
    "end": "1995559"
  },
  {
    "text": "are being fuss in your project in any project on say first this is something everybody can access so we can see here",
    "start": "1995559",
    "end": "2001639"
  },
  {
    "text": "that for example our past complex format uh this is past complex format second",
    "start": "2001639",
    "end": "2008279"
  },
  {
    "text": "but our past complex format is executed by 295 unique inputs we can see here and",
    "start": "2008279",
    "end": "2015919"
  },
  {
    "text": "we can also see what code is not being executed this is super important when you are s like iteratively working on",
    "start": "2015919",
    "end": "2022120"
  },
  {
    "text": "your project in order to get maximum code coverage so say for example there is uh",
    "start": "2022120",
    "end": "2028480"
  },
  {
    "text": "let's let's pick on on a Google project called lib webp which was uh there was",
    "start": "2028480",
    "end": "2033919"
  },
  {
    "text": "regally a critical issue in this project and we can see whether it is actually",
    "start": "2033919",
    "end": "2040080"
  },
  {
    "text": "being fored well and we can see that it has a Cod coverage of",
    "start": "2040080",
    "end": "2045639"
  },
  {
    "text": "84% which is not 100% and we can start to look around at where are there",
    "start": "2045639",
    "end": "2051040"
  },
  {
    "text": "potentially U limitations in their in their fing routines and we can see for example",
    "start": "2051040",
    "end": "2057079"
  },
  {
    "text": "there are some missing coverage of some interesting decoder functions so",
    "start": "2057079",
    "end": "2063040"
  },
  {
    "text": "this is something where we can start to uh contribute fers to lip and Ensure that various open source projects are",
    "start": "2063040",
    "end": "2069040"
  },
  {
    "text": "are first and we can do the exact same thing let's say we have Envoy and we can",
    "start": "2069040",
    "end": "2074440"
  },
  {
    "text": "see here that they have 63 different fussing harnesses which is huge and we can start to explore the code coverage",
    "start": "2074440",
    "end": "2080679"
  },
  {
    "text": "report and well there's a lot of code 1.6 million lines of code we can see and",
    "start": "2080679",
    "end": "2086480"
  },
  {
    "text": "we can just start to uh analyze what more should be first which in this case is is a lot um at least to get 100% And",
    "start": "2086480",
    "end": "2094960"
  },
  {
    "text": "we can also see like historical progressions um I think we are out of",
    "start": "2094960",
    "end": "2100160"
  },
  {
    "text": "time so uh I think with with that I'll I'll end and say integrate the projects",
    "start": "2100160",
    "end": "2105800"
  },
  {
    "text": "into OSS for and you will get these types of data uh reach out to cncf fing",
    "start": "2105800",
    "end": "2111400"
  },
  {
    "text": "and we will help uh develop fers for you if you're running a a cncf project and",
    "start": "2111400",
    "end": "2116920"
  },
  {
    "text": "we will well help you get a continuous fing into your cncf",
    "start": "2116920",
    "end": "2122079"
  },
  {
    "text": "project and check also the handbook please it's a it's a great reference if you want to kick start your fussing uh",
    "start": "2122079",
    "end": "2128240"
  },
  {
    "text": "uh Pursuit and drop by our booth in the project Pavilion and learn more about",
    "start": "2128240",
    "end": "2133880"
  },
  {
    "text": "fussing if you're interested thank",
    "start": "2133880",
    "end": "2138599"
  },
  {
    "text": "you I don't know if we have time for questions or if there are any questions",
    "start": "2140640",
    "end": "2146920"
  },
  {
    "text": "um I don't think there are any questions but in other case you can come to the project Pavilion uh if you're interested",
    "start": "2146920",
    "end": "2152920"
  },
  {
    "text": "we have a cncf fing booth",
    "start": "2152920",
    "end": "2156880"
  }
]