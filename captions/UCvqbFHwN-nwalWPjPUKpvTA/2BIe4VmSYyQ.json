[
  {
    "text": "hey thank you everyone it's it's very nice to see so many people just before lunch so thank you for coming um let's",
    "start": "120",
    "end": "8000"
  },
  {
    "text": "just jump in we will be talking about today the past present and future of",
    "start": "8000",
    "end": "13160"
  },
  {
    "text": "tetragon what was the first production use case uh what was the main security challenge what were the first and then",
    "start": "13160",
    "end": "21039"
  },
  {
    "text": "uh later stage customers what are the lessons we learned and where are we heading uh my name is natal Wu I'm a",
    "start": "21039",
    "end": "28960"
  },
  {
    "text": "product manager for time security at isand and here is with me John um tetragon lead celum maintainer and",
    "start": "28960",
    "end": "36320"
  },
  {
    "text": "principal engineer at isand so how many of you heard about tetragon raise up your",
    "start": "36320",
    "end": "43399"
  },
  {
    "text": "hands all right pretty cool that's quite a lot of people I will still do a quick",
    "start": "43399",
    "end": "48600"
  },
  {
    "text": "intro in a couple of slides so tetron basically an ebpf based runtime security",
    "start": "48600",
    "end": "55199"
  },
  {
    "text": "observability and enforcement agent so it can run on top of any luux operating",
    "start": "55199",
    "end": "60760"
  },
  {
    "text": "system in case of um kubernetes and Cloud native environments it's actually a demon set and then in case of bar met",
    "start": "60760",
    "end": "68320"
  },
  {
    "text": "VMS it's actually a systemd managed binary or a container so it uses ebpf to",
    "start": "68320",
    "end": "74520"
  },
  {
    "text": "provide security observability and then runtime enforcement and then what's really important it's transparent so no",
    "start": "74520",
    "end": "81840"
  },
  {
    "text": "changes required to your application so we use ebpf to provide",
    "start": "81840",
    "end": "87439"
  },
  {
    "text": "deep visibility and then as you can see on the picture we have visibility into process execution system call activity",
    "start": "87439",
    "end": "95680"
  },
  {
    "text": "s3f or connections data access file access Linux namespace and there",
    "start": "95680",
    "end": "101560"
  },
  {
    "text": "basically capability um changes as well but also important that all the",
    "start": "101560",
    "end": "108280"
  },
  {
    "text": "extensive inal filtering and aggregation so all the business logic is happen is",
    "start": "108280",
    "end": "115079"
  },
  {
    "text": "happening in kernel so basically this leads us to low overhead regarding in to",
    "start": "115079",
    "end": "120240"
  },
  {
    "text": "CPU and memory and then John will talk about it um later so all those",
    "start": "120240",
    "end": "126079"
  },
  {
    "text": "observability events are exported to to a file to a Json file and you can",
    "start": "126079",
    "end": "131640"
  },
  {
    "text": "integrate it with many cm systems um I listed some on the top like slun elastic",
    "start": "131640",
    "end": "138319"
  },
  {
    "text": "search sumic you could export it to S3 or like a blob storage and then",
    "start": "138319",
    "end": "144599"
  },
  {
    "text": "basically also you can also use graph analogy um as an integration",
    "start": "144599",
    "end": "150280"
  },
  {
    "text": "so why is it so powerful so it provides really synchronous BPF monitoring",
    "start": "150280",
    "end": "156560"
  },
  {
    "text": "filtering and enforcement completely with ebpf in kernel there is also the",
    "start": "156560",
    "end": "162319"
  },
  {
    "text": "overall efficiency of ebpf comparing to for example existing like user space",
    "start": "162319",
    "end": "167480"
  },
  {
    "text": "tool or kernel modules we also do like kubernetes identity awareness with BPF",
    "start": "167480",
    "end": "173599"
  },
  {
    "text": "so you could create kuties identity of runtime security policies we could",
    "start": "173599",
    "end": "178760"
  },
  {
    "text": "monitor every um that happen that happens in the Linux kernel and then basically we also do um",
    "start": "178760",
    "end": "186319"
  },
  {
    "text": "abps based inline enforcement in kernel rather than for example out of",
    "start": "186319",
    "end": "193480"
  },
  {
    "text": "B so that was a quick inro on tetragon so let's take a step back and think",
    "start": "193480",
    "end": "199599"
  },
  {
    "text": "about like the history of tetragon so I will start from 2016 that",
    "start": "199599",
    "end": "205599"
  },
  {
    "text": "was the year um when the project launched as a cni providing abpf based",
    "start": "205599",
    "end": "211480"
  },
  {
    "text": "conductivity observability um and security to the cloud native world at",
    "start": "211480",
    "end": "217599"
  },
  {
    "text": "2018 celum reached 1.0 making the project available um for uh generic",
    "start": "217599",
    "end": "224560"
  },
  {
    "text": "production users and then in 2020 the first line of",
    "start": "224560",
    "end": "230080"
  },
  {
    "text": "tetragon were written but actually not under the tetragon name so this was part",
    "start": "230080",
    "end": "235120"
  },
  {
    "text": "of initially part of the celium Enterprise code base and then we had like a code name for it it was called",
    "start": "235120",
    "end": "241200"
  },
  {
    "text": "Hubble fgs fgs stands for fine guidance sensors and then actually the first",
    "start": "241200",
    "end": "247879"
  },
  {
    "text": "feature set was requested from a customer it was a complex data analytics",
    "start": "247879",
    "end": "252959"
  },
  {
    "text": "company um I will talk about it later but basically um they wanted to have",
    "start": "252959",
    "end": "259160"
  },
  {
    "text": "observability into what's happening in their kubernetes environment they wanted to trace all the executables or the",
    "start": "259160",
    "end": "266120"
  },
  {
    "text": "egress connections that um leaving the cluster and then basically Trace every",
    "start": "266120",
    "end": "271919"
  },
  {
    "text": "um Network soet so after 20 after 202 2021 the",
    "start": "271919",
    "end": "279000"
  },
  {
    "text": "first Cube con talk happened um about tetragon which basically included all uh",
    "start": "279000",
    "end": "284840"
  },
  {
    "text": "also open source functionalities and then since then basically we are at every cucon EU and then any um and then",
    "start": "284840",
    "end": "293080"
  },
  {
    "text": "presenting what have been working on so we had talks about how can we create least privilege profiles oh ebpf",
    "start": "293080",
    "end": "300560"
  },
  {
    "text": "programs and Maps detect Lo for shell and the next CVS the next CVS and then",
    "start": "300560",
    "end": "307199"
  },
  {
    "text": "sensitive data patterns for example with ktls and then so we still started to um",
    "start": "307199",
    "end": "315000"
  },
  {
    "text": "develop tetragon still under cemental price we had the SRI for connectiv",
    "start": "315000",
    "end": "320160"
  },
  {
    "text": "connectivity visibility the S7 attributes HTTP DLS t uh TNS uh Linux",
    "start": "320160",
    "end": "327080"
  },
  {
    "text": "capability and namespace changes and then we got customers so these were like first set of customers the early",
    "start": "327080",
    "end": "333800"
  },
  {
    "text": "adopters I will also talk about it later and then in",
    "start": "333800",
    "end": "339440"
  },
  {
    "text": "2022 so we decided to actually open source the project so we renamed it to",
    "start": "339440",
    "end": "344800"
  },
  {
    "text": "tetragon and then make it open source so actually the GitHub stars that you see",
    "start": "344800",
    "end": "349960"
  },
  {
    "text": "on the on the left side that's actually what happened um under 2022 um EU in Valencia so people like it",
    "start": "349960",
    "end": "359479"
  },
  {
    "text": "gained a lot of traction and then that was the time when actually the first block post came out about tetragon and",
    "start": "359479",
    "end": "366280"
  },
  {
    "text": "that was the time when actually the first or um report came out on tetron so",
    "start": "366280",
    "end": "371639"
  },
  {
    "text": "if you want to get like an or report come to our boost we will be handing out um reports over",
    "start": "371639",
    "end": "378720"
  },
  {
    "text": "there and then so in 2022 like our contributors like open source",
    "start": "378720",
    "end": "385360"
  },
  {
    "text": "contributors users and actually our engineering team grow because the",
    "start": "385360",
    "end": "390400"
  },
  {
    "text": "initial set of set of code was written by a very very small people and then",
    "start": "390400",
    "end": "396639"
  },
  {
    "text": "basically we got this second set of customers who are kind of like midstage",
    "start": "396639",
    "end": "402440"
  },
  {
    "text": "adopters and then here we are 2023 so tetron just reached one two making the",
    "start": "402440",
    "end": "409000"
  },
  {
    "text": "project available for generic production users so you can go to the you can read",
    "start": "409000",
    "end": "414080"
  },
  {
    "text": "the blog post there is a blog post about it there is a press release about it and then B basically um on the website we",
    "start": "414080",
    "end": "421319"
  },
  {
    "text": "have four main use cases execution monitoring U file access monitoring network monitoring and policy",
    "start": "421319",
    "end": "428000"
  },
  {
    "text": "enforcement and we have a set of like observability policies um but you can just like plug into your system and then",
    "start": "428000",
    "end": "435800"
  },
  {
    "text": "um try it out so a few GitHub",
    "start": "435800",
    "end": "441160"
  },
  {
    "text": "statistics so um this is just pulled from the GitHub um on the one. I release",
    "start": "441160",
    "end": "446479"
  },
  {
    "text": "and I think a couple things really stand out um there before the one that I released we have 64 contributors uh and",
    "start": "446479",
    "end": "453319"
  },
  {
    "text": "what's really exciting is that um there's actually more nonis surveillant",
    "start": "453319",
    "end": "458400"
  },
  {
    "text": "contributors at this point than is surveillant contributors so we have 23 folks from is surveillant that are",
    "start": "458400",
    "end": "464120"
  },
  {
    "text": "working on this at various times apparently and you know the larger group of 38 here are not is surveillant",
    "start": "464120",
    "end": "470639"
  },
  {
    "text": "employees so that's great um from the product side or from the project side um",
    "start": "470639",
    "end": "475879"
  },
  {
    "text": "and then the other point here we just sort of like if you look at the patches per month in the PRS like it's very",
    "start": "475879",
    "end": "481400"
  },
  {
    "text": "active there's a lot of stuff going on we have 130 some mod patch patches that are active right now um we're merging",
    "start": "481400",
    "end": "487639"
  },
  {
    "text": "patches they're being open and closed so um definitely come to the GitHub page um",
    "start": "487639",
    "end": "493400"
  },
  {
    "text": "we like you know we have a bunch of first issues and stuff so you can uh take a look and",
    "start": "493400",
    "end": "499680"
  },
  {
    "text": "contribute cool so what was actually the very first production use case so this",
    "start": "499680",
    "end": "504879"
  },
  {
    "text": "was coming from a from a sophist sophisticated data analytics company and then basically they needed a cloud",
    "start": "504879",
    "end": "512320"
  },
  {
    "text": "native or like kuties identity of our solution to replace their traditional firers traditional firewalls and network",
    "start": "512320",
    "end": "520000"
  },
  {
    "text": "monitoring tools so the and also the EDR systems so the problem here was that",
    "start": "520000",
    "end": "525880"
  },
  {
    "text": "their Network rules were based on IPS and ports and post names and then these were not really useful in like",
    "start": "525880",
    "end": "532399"
  },
  {
    "text": "containerized environments where IPS are frequenty changing pods come and go and",
    "start": "532399",
    "end": "538000"
  },
  {
    "text": "ANP detection and response tool suffer the same so all of their alerts were based on IPS ports and host names and",
    "start": "538000",
    "end": "545800"
  },
  {
    "text": "then the other problem was that every time they created a new resource they it had to have this EDR agent sending this",
    "start": "545800",
    "end": "552839"
  },
  {
    "text": "Telemetry to this centralized system and then if you consider like a kues environment that's not really like",
    "start": "552839",
    "end": "559320"
  },
  {
    "text": "realistic either so they wanted to create like an an EDR or like a network",
    "start": "559320",
    "end": "565720"
  },
  {
    "text": "monitoring tool which was based on like kubernetes identities like labels um but",
    "start": "565720",
    "end": "571399"
  },
  {
    "text": "labels name spaces or um for example they wanted to trace API col identity",
    "start": "571399",
    "end": "579040"
  },
  {
    "text": "and then that's how that's how they implemented it so they use celium for",
    "start": "579040",
    "end": "584079"
  },
  {
    "text": "Network traffic control um they implemented Network policies L3 L4",
    "start": "584079",
    "end": "589560"
  },
  {
    "text": "and L7 in their communties infrastructure and they use tetragon as their observability and then logging",
    "start": "589560",
    "end": "596640"
  },
  {
    "text": "platform and then they they wanted to have have visibility into what's happening in their kubernetes",
    "start": "596640",
    "end": "601680"
  },
  {
    "text": "environment and then this was basically an alternative um to traditional",
    "start": "601680",
    "end": "606839"
  },
  {
    "text": "Enterprise edrs and then their alerting and detection Engineers created",
    "start": "606839",
    "end": "612320"
  },
  {
    "text": "signatures um and then alerts to detect certain attack scenarios or malicious behaviors they actually wrote a blog",
    "start": "612320",
    "end": "619519"
  },
  {
    "text": "post so I linked it if you check the slides later you can actually check it out how they implemented it and then",
    "start": "619519",
    "end": "626240"
  },
  {
    "text": "these were the very first initial tetron features Trace every executables Trace",
    "start": "626240",
    "end": "631279"
  },
  {
    "text": "every ESS network connection with destination name Trace every open socket and then Stoll all these data in an S3",
    "start": "631279",
    "end": "638079"
  },
  {
    "text": "bucket for audit reasons so what are they now um they were actually the very",
    "start": "638079",
    "end": "644000"
  },
  {
    "text": "first user of tetragon arm support and then they are looking into F integr",
    "start": "644000",
    "end": "649240"
  },
  {
    "text": "monitoring and DNS drops as we speak so they are still um a very active uh user",
    "start": "649240",
    "end": "655320"
  },
  {
    "text": "of this so who were kind of like the early customers that we have so they all had a",
    "start": "655320",
    "end": "662279"
  },
  {
    "text": "couple of things in common so they all had like a stable backend system that they could store all this data like",
    "start": "662279",
    "end": "668320"
  },
  {
    "text": "either um Splunk Al or S3 or they had their integrated pipeline into um into",
    "start": "668320",
    "end": "675839"
  },
  {
    "text": "their security analytics platform they were also comfortable creating and maintaining their own queries they were",
    "start": "675839",
    "end": "683120"
  },
  {
    "text": "actually comfortable with custom like customizing the filtering and aggregation and they had people they had",
    "start": "683120",
    "end": "690160"
  },
  {
    "text": "like an engineering team who were um who actually operated and then deployed",
    "start": "690160",
    "end": "695320"
  },
  {
    "text": "tetron I listed a couple of names here and logos and then all the use cases",
    "start": "695320",
    "end": "701160"
  },
  {
    "text": "were actually driven by them so these were driven by customers so for runtime security they wanted to monitor all the",
    "start": "701160",
    "end": "707839"
  },
  {
    "text": "executables for network security they wanted to monitor all the network connections DNS names all the open",
    "start": "707839",
    "end": "715360"
  },
  {
    "text": "network sockets they wanted uh DNS troubleshoo figure out like which process or workload was responsible for",
    "start": "715360",
    "end": "722480"
  },
  {
    "text": "DNS drops and then F Integrity monitoring like monitor access to sensitive files or",
    "start": "722480",
    "end": "730120"
  },
  {
    "text": "directories and then also for the for the enforcement and deployment use cases was also driven by them so for en",
    "start": "730120",
    "end": "737560"
  },
  {
    "text": "enforcement they wanted to have like kubernetes identity a security policies that allowed certain white listed system",
    "start": "737560",
    "end": "744720"
  },
  {
    "text": "calls from pods or Nam spaces could drop certain Linux capab ities or block",
    "start": "744720",
    "end": "750959"
  },
  {
    "text": "access to Kernel host name space name spaces and then for deployment um the",
    "start": "750959",
    "end": "756000"
  },
  {
    "text": "arm support and actually the Standalone the external VM installation was also driven by",
    "start": "756000",
    "end": "761600"
  },
  {
    "text": "them so a couple of signatures like these are in these are in splank but",
    "start": "761600",
    "end": "766639"
  },
  {
    "text": "this this can be in elastic search or like gra analy the syntax would be different but the idea is the same so",
    "start": "766639",
    "end": "773560"
  },
  {
    "text": "this is basically detecting workloads and processes with Pudo which started as root or malicious shell execution like",
    "start": "773560",
    "end": "781240"
  },
  {
    "text": "someone keep cut exact into the workload or we could detect like untrusted DNS names so if you see some",
    "start": "781240",
    "end": "789120"
  },
  {
    "text": "new DNS names that you haven't seen in the last week that can be also interesting or detect outbound",
    "start": "789120",
    "end": "795639"
  },
  {
    "text": "connections to non-standard Ports like something is connecting to Port 80 not Port 80 or not 443 that can be also",
    "start": "795639",
    "end": "803880"
  },
  {
    "text": "quite interesting so these were the the first set of customers and then we had the",
    "start": "803880",
    "end": "810399"
  },
  {
    "text": "second set of customers later on so they had they had a common um a common aspect",
    "start": "810399",
    "end": "819480"
  },
  {
    "text": "that they didn't have a stable backend system so they didn't have like spunk or a or even if they did like they didn't",
    "start": "819480",
    "end": "826560"
  },
  {
    "text": "have the resources to manage or store the data or these resources were actually limited they didn't have for",
    "start": "826560",
    "end": "832959"
  },
  {
    "text": "example a setup engineering team to actually operate tetragon and they were not really comfortable to to create and",
    "start": "832959",
    "end": "840079"
  },
  {
    "text": "actually maintain their own alerts or um signatures so they needed kind of like",
    "start": "840079",
    "end": "845600"
  },
  {
    "text": "um a security dashboard like an outof thee box dashboard um that we could",
    "start": "845600",
    "end": "850920"
  },
  {
    "text": "provide for them so I put a couple of names here um there will be more coming",
    "start": "850920",
    "end": "856440"
  },
  {
    "text": "so I will show a couple of dashboards that we we actually created for them so the first is like detecting Linux name",
    "start": "856440",
    "end": "863000"
  },
  {
    "text": "space and um previous changes so so for example show me all the communities for",
    "start": "863000",
    "end": "868759"
  },
  {
    "text": "workloads that started with higher privileges or root access or gained later in the life cycle or show me all",
    "start": "868759",
    "end": "875560"
  },
  {
    "text": "the communties workloads that started with kernel host namespace accessor came",
    "start": "875560",
    "end": "880639"
  },
  {
    "text": "it later in the life cycle and then this can be for example One dashboard on the top you can",
    "start": "880639",
    "end": "887759"
  },
  {
    "text": "actually see the pods which started with um higher capabilities and then basically in the",
    "start": "887759",
    "end": "894920"
  },
  {
    "text": "middle you can actually see the Json events in the table so you could see like the Source name space The Source",
    "start": "894920",
    "end": "900279"
  },
  {
    "text": "pod all the capabilities that it had and then on the bottom basically these are",
    "start": "900279",
    "end": "905880"
  },
  {
    "text": "the pods which had access to for example uh kernel host name spaces like Network or PID that it shouldn't have the second",
    "start": "905880",
    "end": "914399"
  },
  {
    "text": "is like file Integrity monitoring so this is basically a dashboard like um showing sensitive files and directory",
    "start": "914399",
    "end": "922199"
  },
  {
    "text": "access so which binary pair from the operation which application which Nam space did it have uh root",
    "start": "922199",
    "end": "929160"
  },
  {
    "text": "which team was responsible for it on another dashboard showing sensitive files binaries that perform the",
    "start": "929160",
    "end": "936040"
  },
  {
    "text": "operation all the Json events um in a dashboard and then basically the last",
    "start": "936040",
    "end": "942240"
  },
  {
    "text": "one is around Comm is data exfiltration so we could answer questions like which",
    "start": "942240",
    "end": "948199"
  },
  {
    "text": "worklow send out the most egress traffic in the cluster is it even suspicious if it's suspicious like which process",
    "start": "948199",
    "end": "954959"
  },
  {
    "text": "initiated it which team which workload what was even the destination so with this dashboard we",
    "start": "954959",
    "end": "962040"
  },
  {
    "text": "can actually track the top receive bites per pod and then the top outbound ters",
    "start": "962040",
    "end": "967720"
  },
  {
    "text": "and then if we could investigate later we could find out that for example Ubuntu and engine xod installed some",
    "start": "967720",
    "end": "974319"
  },
  {
    "text": "liaries with ap and then that's why it receives so many bytes or for example there was like a logging agent sending",
    "start": "974319",
    "end": "980880"
  },
  {
    "text": "out data to Splunk so these were like the second set of customers and then in sure yeah so",
    "start": "980880",
    "end": "988839"
  },
  {
    "text": "then um the next kind of piece we'll talk about some of the things we learned about writing ebpf uh security tools um",
    "start": "988839",
    "end": "996000"
  },
  {
    "text": "and some opinions or or principles as we call them here that we developed so so",
    "start": "996000",
    "end": "1001839"
  },
  {
    "text": "the first thing that we found out really early that was very powerful from a tetron side is to",
    "start": "1001839",
    "end": "1008319"
  },
  {
    "text": "have most of the state that your security tool needs in the kernel itself",
    "start": "1008319",
    "end": "1013480"
  },
  {
    "text": "and so what this allows you to do is do really interesting mappings in the kernel such as map all the files back to",
    "start": "1013480",
    "end": "1019360"
  },
  {
    "text": "their binaries and map all the binaries back to their um pod or their workload",
    "start": "1019360",
    "end": "1024438"
  },
  {
    "text": "ID which is kind of a generic version of a pod um this lets you do that all inside the kernel which means you don't",
    "start": "1024439",
    "end": "1030400"
  },
  {
    "text": "have to send data up to user space which allows kind of CPU performance reasons that's really great but also for",
    "start": "1030400",
    "end": "1035959"
  },
  {
    "text": "enforcement it means you can enforce start enforcing things in the kernel so by keeping the kind of a lot of the",
    "start": "1035959",
    "end": "1041400"
  },
  {
    "text": "state that you need of your program inside the kernel in the ebpf you get a kind of a big win and this ability to",
    "start": "1041400",
    "end": "1047640"
  },
  {
    "text": "kind of Link different different operations inside the kernel that would otherwise not be um you wouldn't be able",
    "start": "1047640",
    "end": "1052919"
  },
  {
    "text": "to make these connections for example sockets are a good one files are if you want to know what binary is attached to",
    "start": "1052919",
    "end": "1058880"
  },
  {
    "text": "what socket it's is attached to what packet you can make that entire chain what what uh pod or label it has in a",
    "start": "1058880",
    "end": "1066200"
  },
  {
    "text": "kubernetes context if you can do that all in the kernel you're you're often running with a really good U base platform to start doing interesting",
    "start": "1066200",
    "end": "1072600"
  },
  {
    "text": "things um the next thing that we did um that became apparent pretty quick is if",
    "start": "1072600",
    "end": "1078240"
  },
  {
    "text": "you you try to filter all of the events that a konel is generating in user space it's going to be very expensive you're",
    "start": "1078240",
    "end": "1084400"
  },
  {
    "text": "going to have to wake up user space every time you want it to tell it about a socket or every time you want to tell it about a file read you're going to end",
    "start": "1084400",
    "end": "1089919"
  },
  {
    "text": "up waking up user space every CIS call um you're going to have to wake up user space so kind of building on that first",
    "start": "1089919",
    "end": "1096840"
  },
  {
    "text": "first point where we have all the context inside the kernel nbpf in tetragon we also added filtering in the",
    "start": "1096840",
    "end": "1102640"
  },
  {
    "text": "kernel and so what this allows you to do is say actually I don't want to really care about every read or I don't care",
    "start": "1102640",
    "end": "1107919"
  },
  {
    "text": "about every socket I only care about sockets that are outside of my cluster for example maybe I trust this namespace",
    "start": "1107919",
    "end": "1113919"
  },
  {
    "text": "any connections inside my namespace are fine I just want to know about Connections outside of my namespace or",
    "start": "1113919",
    "end": "1119760"
  },
  {
    "text": "um most of the reads inside my home directory I don't need to monitor because the application can read its own",
    "start": "1119760",
    "end": "1125520"
  },
  {
    "text": "data but if it's going to try to write a file into the Etsy directory or maybe it's going to try to write a file into",
    "start": "1125520",
    "end": "1131039"
  },
  {
    "text": "user bin or SL those are things that I want to alert on and so what you've done",
    "start": "1131039",
    "end": "1136200"
  },
  {
    "text": "is taken the case where you have to monitor everything push the filters into the kernel and now you're now you're",
    "start": "1136200",
    "end": "1142280"
  },
  {
    "text": "looking for things that are that are that are important that are rare or somehow significant um and the value",
    "start": "1142280",
    "end": "1148520"
  },
  {
    "text": "here is really really quite significant because um now you've removed that need",
    "start": "1148520",
    "end": "1154880"
  },
  {
    "text": "to wake up user space all the time and start using lots of CPU so you can do this kind of inline inline in the kernel",
    "start": "1154880",
    "end": "1161320"
  },
  {
    "text": "um and then sort of as a technical corollary here is there's actually a buffer between the kernel and user space",
    "start": "1161320",
    "end": "1166840"
  },
  {
    "text": "and so now by pushing all of that data into the kernel you relieve this extra interface um that you now don't have to",
    "start": "1166840",
    "end": "1172919"
  },
  {
    "text": "worry about drops on or overhead from so kind of a secondary wind to putting all",
    "start": "1172919",
    "end": "1178400"
  },
  {
    "text": "that state into the kernel then you add filters um improves the system overall",
    "start": "1178400",
    "end": "1184159"
  },
  {
    "text": "um and then you can get kind of bench marks like this which are really um what we shoot for in tetragon um on the one",
    "start": "1184159",
    "end": "1190320"
  },
  {
    "text": "on the left your left yep um we have the kernel build so this is basically a",
    "start": "1190320",
    "end": "1197400"
  },
  {
    "text": "stress test and and building a kernel on six 16 cores 32 cores is actually a fairly good stress test because you're",
    "start": "1197400",
    "end": "1204240"
  },
  {
    "text": "executing the compiler over and over again for every file in the Linux kernel you're doing some uh operation on it",
    "start": "1204240",
    "end": "1210159"
  },
  {
    "text": "you're opening and closing files so there's a lot of actual work going on um and what you can see on the left is is",
    "start": "1210159",
    "end": "1215880"
  },
  {
    "text": "no tetragon running there with the 549 271 um at the Baseline and then you",
    "start": "1215880",
    "end": "1222000"
  },
  {
    "text": "can see with tetragon the overhead is really quite small less than 2% um so",
    "start": "1222000",
    "end": "1227760"
  },
  {
    "text": "that's great and then if you add some additional Json loging it goes up to 25%",
    "start": "1227760",
    "end": "1233240"
  },
  {
    "text": "so that that's if you want to export everything over Json so that's basically 1% of your CPU going to writing Json",
    "start": "1233240",
    "end": "1239039"
  },
  {
    "text": "files but um but that's a still a pretty good number very minimal overhead and",
    "start": "1239039",
    "end": "1245240"
  },
  {
    "text": "then on the right side what we're showing is if you want to report um on certain files so we found some files",
    "start": "1245240",
    "end": "1251159"
  },
  {
    "text": "that we we didn't think anyone should write to um on a consistent regular basis you can think of um again example",
    "start": "1251159",
    "end": "1258559"
  },
  {
    "text": "would be we don't expect our users to write into user sbin nobody should be writing new executables into my B into",
    "start": "1258559",
    "end": "1265559"
  },
  {
    "text": "my um pod um I don't expect people to execute on SL that's usually some",
    "start": "1265559",
    "end": "1270760"
  },
  {
    "text": "indication of something quite bizarre going on and and what we show is that if you on the left side if you do kind of",
    "start": "1270760",
    "end": "1279240"
  },
  {
    "text": "those first two principles we were talking about put the state in the kernel put the filtering in the kernel the overhead is very minimal um versus",
    "start": "1279240",
    "end": "1286000"
  },
  {
    "text": "if you try to go to user space for everything um you get a much larger bar on the right there so um these are the",
    "start": "1286000",
    "end": "1292480"
  },
  {
    "text": "kinds of things we're looking at with tetron um from uh observability and kind of security side um the next the next",
    "start": "1292480",
    "end": "1300200"
  },
  {
    "text": "point that we kind of came to the conclusion is that you can just monitor",
    "start": "1300200",
    "end": "1305440"
  },
  {
    "text": "CIS calls but there's actually a lot more interesting stuff in the kernel than just CIS calls um you know the CIS",
    "start": "1305440",
    "end": "1310559"
  },
  {
    "text": "calls are just the top layer that the user interfaces with if you want to know about the socket state if you want to know about the TCP State machine if you",
    "start": "1310559",
    "end": "1317600"
  },
  {
    "text": "want to know what's going on your networking and in the OS side you really need to dig into the kernel and so",
    "start": "1317600",
    "end": "1323720"
  },
  {
    "text": "tetragon has the ability to hook almost any function in the kernel um CIS calls included but not limited to CIS calls",
    "start": "1323720",
    "end": "1330440"
  },
  {
    "text": "and you also get a really nice benefit from that is um a technical security",
    "start": "1330440",
    "end": "1335640"
  },
  {
    "text": "reason we don't hook CIS calls a lot of the times is the CIS calls are using user data you have a pointer to user",
    "start": "1335640",
    "end": "1341120"
  },
  {
    "text": "data and as a security tool you just can't can't trust user data um in our",
    "start": "1341120",
    "end": "1346679"
  },
  {
    "text": "model so um oh that leads into this slide really",
    "start": "1346679",
    "end": "1353080"
  },
  {
    "text": "quickly so you'll be really tempted um when you're building your tool to do a lot of these things um I know we were U",
    "start": "1353080",
    "end": "1359480"
  },
  {
    "text": "probes are super awesome I I love U probes um but as a security mechanism they're just they're working over user",
    "start": "1359480",
    "end": "1365520"
  },
  {
    "text": "data so if your security model is to not trust your users you don't trust the Pod",
    "start": "1365520",
    "end": "1370679"
  },
  {
    "text": "for example you really need to be careful when you're using U probes um if you're not familiar U probes let you",
    "start": "1370679",
    "end": "1375880"
  },
  {
    "text": "hook user space basically instead of the kernel but remember that's that's user data the user owns the data they can",
    "start": "1375880",
    "end": "1382440"
  },
  {
    "text": "work around your U probe they can change the data after you read it um like I mentioned CIS calls there and then the",
    "start": "1382440",
    "end": "1388480"
  },
  {
    "text": "other one is the kernel has many way many ways to do the same thing so if you",
    "start": "1388480",
    "end": "1393600"
  },
  {
    "text": "think about CIS call hooking you can hook open open at every version of open that you can find in the CIS call spec",
    "start": "1393600",
    "end": "1400480"
  },
  {
    "text": "or you can hook FD install which is the Kernel's version of creating a file descriptor and it's used once",
    "start": "1400480",
    "end": "1406679"
  },
  {
    "text": "everywhere so so um this is just goes to the point that maybe hooking CIS calls",
    "start": "1406679",
    "end": "1412279"
  },
  {
    "text": "everywhere is not the best option usually if you go into the kernel you can find kind of the root um the root",
    "start": "1412279",
    "end": "1417360"
  },
  {
    "text": "operator inside the kernel um the next thing that I'll just mention that you get from this is by",
    "start": "1417360",
    "end": "1424240"
  },
  {
    "text": "pushing all the states into the kernel allowing you to hook outside of CIS calls is you get a really interesting",
    "start": "1424240",
    "end": "1430400"
  },
  {
    "text": "story around enforcement so rather than reacting where you would say I observed",
    "start": "1430400",
    "end": "1435520"
  },
  {
    "text": "an event sent the event up to user space my logic in user space decides this is unacceptable and then enforces by",
    "start": "1435520",
    "end": "1442240"
  },
  {
    "text": "stopping the Pod or stopping the that action may have already happened right it's kind of asynchronous to the system",
    "start": "1442240",
    "end": "1449360"
  },
  {
    "text": "um by pushing all of the state into the kernel getting below the CIS calls in many cases when you need extra data um",
    "start": "1449360",
    "end": "1455679"
  },
  {
    "text": "you can enforce synchronously in line with the kernel and this avoids array so you the kind of um most obvious case is",
    "start": "1455679",
    "end": "1463600"
  },
  {
    "text": "somebody writes to a file right you don't want to enforce that after the fact after the files been written to you",
    "start": "1463600",
    "end": "1469399"
  },
  {
    "text": "really want to when stop the right from happening same way with networking you don't want the network connect to happen and then some data to be exfiltrated and",
    "start": "1469399",
    "end": "1476159"
  },
  {
    "text": "then sometime in the future you stop that from happening you want to stop that before the data is even leaving the system okay so we support um a couple",
    "start": "1476159",
    "end": "1484159"
  },
  {
    "text": "models around we actually smart both models by the way um there's definitely use cases for reactive security as well",
    "start": "1484159",
    "end": "1490159"
  },
  {
    "text": "um but the enforcement is is really the strong suite here for for writing kind of kubernetes native security",
    "start": "1490159",
    "end": "1496360"
  },
  {
    "text": "policies um so if we think about where we're heading in the future um I",
    "start": "1496360",
    "end": "1501840"
  },
  {
    "text": "mentioned these policies we we put a few in for the 1.0 release and um they're on",
    "start": "1501840",
    "end": "1508039"
  },
  {
    "text": "the web page the folks are on the team here are working on putting a few more up there that's just kind of the beginning we have a lot of examples",
    "start": "1508039",
    "end": "1514799"
  },
  {
    "text": "actually in the code itself in the examples directory um but they're really um cryptic I would say you know they're",
    "start": "1514799",
    "end": "1521760"
  },
  {
    "text": "were written by Engineers this is an attempt to kind of level that up a little bit so that users kind of more of",
    "start": "1521760",
    "end": "1527320"
  },
  {
    "text": "a user interfacing policy Library um and what this would allow you to do is say if you want to do um you wanted to",
    "start": "1527320",
    "end": "1533200"
  },
  {
    "text": "monitor ebpf there's a there's a link to check how do I Monitor ebpf and here's a file that I apply um supposed to be very",
    "start": "1533200",
    "end": "1539880"
  },
  {
    "text": "simple quick to use get some basic policies in place um you see networking",
    "start": "1539880",
    "end": "1545360"
  },
  {
    "text": "on outbound connections is the bottom I think I alluded to that one earlier um some things that other folks",
    "start": "1545360",
    "end": "1552120"
  },
  {
    "text": "are doing um not necessarily myself um we've seen some folks use tetragon for S",
    "start": "1552120",
    "end": "1557240"
  },
  {
    "text": "bombs um the idea being uh instead of using srace you can use tetragon gives you a",
    "start": "1557240",
    "end": "1562840"
  },
  {
    "text": "lot more information than just CIS calls um for example network connections all",
    "start": "1562840",
    "end": "1568360"
  },
  {
    "text": "this kind of data you can roll that into an s bomb um we've seen a few folks use tetragon to protect the system that's",
    "start": "1568360",
    "end": "1575919"
  },
  {
    "text": "building spom building the sbom to make sure that the spomb Integrity is is intact a couple interesting use cases",
    "start": "1575919",
    "end": "1583320"
  },
  {
    "text": "from that side that I hadn't anticipated um whoops and we have a few dashboards so there'll be more",
    "start": "1583320",
    "end": "1589279"
  },
  {
    "text": "dashboards coming in the future and tell you showed some of them I don't think they're um I think they're on the web page but probably not highlighted in the",
    "start": "1589279",
    "end": "1596039"
  },
  {
    "text": "docs yet um so in the code but not in the docs um and with that um we kind of",
    "start": "1596039",
    "end": "1603120"
  },
  {
    "text": "covered all this today and here's how you can contribute you",
    "start": "1603120",
    "end": "1608919"
  },
  {
    "text": "can go to the GitHub page um Natalia mentioned some of like our some of the people that are using tetron in their",
    "start": "1608919",
    "end": "1614880"
  },
  {
    "text": "use cases a lot of those actually come from poll requests so if even if you aren't going to commit code but you have",
    "start": "1614880",
    "end": "1621120"
  },
  {
    "text": "a use case and you think it's interesting create a poll request we do read them um it also allows other people to you know see them and say oh that I",
    "start": "1621120",
    "end": "1627960"
  },
  {
    "text": "have that same use case too um so we we like that of course if you want to contribute docs and examples and code",
    "start": "1627960",
    "end": "1635240"
  },
  {
    "text": "you know we would we would love it um there's a bunch of first issue tags people can look at um we've done a lot",
    "start": "1635240",
    "end": "1642600"
  },
  {
    "text": "of work to get to 1.0 but there's just a ton more stuff to do that's super interesting so come find me if you want to check",
    "start": "1642600",
    "end": "1648320"
  },
  {
    "text": "um come to the booth file go to the GitHub page and file a PR whatnot and",
    "start": "1648320",
    "end": "1653679"
  },
  {
    "text": "with that thank [Applause]",
    "start": "1653679",
    "end": "1661720"
  },
  {
    "text": "you thank you very much and we have time for a few",
    "start": "1661720",
    "end": "1667559"
  },
  {
    "text": "questions I don't have a question but I want to say big props for the tool that you built uh I worked palent here and I",
    "start": "1670399",
    "end": "1677080"
  },
  {
    "text": "was one of one of the first people that rolled this out like hgs ins and",
    "start": "1677080",
    "end": "1682320"
  },
  {
    "text": "what not so nice thank",
    "start": "1682320",
    "end": "1686200"
  },
  {
    "text": "you uh pretty interesting uh pretty complex to it uh I have a few questions",
    "start": "1689120",
    "end": "1696279"
  },
  {
    "text": "uh in the future um uh would you consider having some sort of learning mode Where You observe the behavior of",
    "start": "1696279",
    "end": "1704320"
  },
  {
    "text": "applications and then that way you can construct automatically a policy for a",
    "start": "1704320",
    "end": "1710360"
  },
  {
    "text": "yeah yeah absolutely it's come up a handful of times it's you know it's not in the One release um it's definitely",
    "start": "1710360",
    "end": "1717120"
  },
  {
    "text": "something on that we've considered adding to the road map um if we got some other folks to help work on it we would",
    "start": "1717120",
    "end": "1723159"
  },
  {
    "text": "be you know very enthusiastic um but yeah no it makes a lot of sense because you you see the right now it's mostly",
    "start": "1723159",
    "end": "1729880"
  },
  {
    "text": "done manually um by the users right they get a pipeline of observability you have your security expert then read those and",
    "start": "1729880",
    "end": "1736159"
  },
  {
    "text": "then they create the policy um definitely that could mostly maybe 90% of that could be automated right or",
    "start": "1736159",
    "end": "1742519"
  },
  {
    "text": "you could make a pretty cohesive policy just automatically from the from the right what you have now is kind of more",
    "start": "1742519",
    "end": "1748000"
  },
  {
    "text": "like a cluster wide policy rather than a perhap okay um I the sbom was",
    "start": "1748000",
    "end": "1754080"
  },
  {
    "text": "interesting uh have you guys considered also container scanning as part of your offering or I know a lot of competitors",
    "start": "1754080",
    "end": "1761519"
  },
  {
    "text": "are out there so maybe it's not worth it so like add it to the container as",
    "start": "1761519",
    "end": "1767000"
  },
  {
    "text": "container once it comes in you scan it you know make sure that it's allowed to run right yeah so there's been some talk",
    "start": "1767000",
    "end": "1773240"
  },
  {
    "text": "about this where um you know kind of part of the Pod deployment would also pull in the tetragon policy and they",
    "start": "1773240",
    "end": "1780279"
  },
  {
    "text": "would come together so you do a cube Kettle apply you get the Pod you get the policy and the whole thing kind of goes",
    "start": "1780279",
    "end": "1785519"
  },
  {
    "text": "out um again I kind of lump that in the same category as the automation we got 1.0 out I think we have all the",
    "start": "1785519",
    "end": "1792200"
  },
  {
    "text": "fundamentals to do these kinds of things and you know it's a matter of getting the getting it on the road map and",
    "start": "1792200",
    "end": "1797760"
  },
  {
    "text": "making it happen at this point okay all right thank you yeah cool thank",
    "start": "1797760",
    "end": "1804080"
  },
  {
    "text": "you thinkk both of those insights are kind of right on track with like where people are thinking about in terms of",
    "start": "1804080",
    "end": "1809640"
  },
  {
    "text": "what to use tetron for okay it looks like we don't have the",
    "start": "1809640",
    "end": "1816440"
  },
  {
    "text": "questions people are people want to go to lunch one shine",
    "start": "1816440",
    "end": "1822840"
  }
]