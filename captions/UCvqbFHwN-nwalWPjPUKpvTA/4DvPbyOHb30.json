[
  {
    "start": "0",
    "end": "82000"
  },
  {
    "text": "all right welcome everyone welcome to cloud native live where we dive into the",
    "start": "3840",
    "end": "9280"
  },
  {
    "text": "code behind cloud native i'm taylor dolezal a senior developer advocate at hashicorp where i focus on",
    "start": "9280",
    "end": "17039"
  },
  {
    "text": "all things infrastructure application delivery and developer experience it's always a good time",
    "start": "17039",
    "end": "23359"
  },
  {
    "text": "every week we bring in a new set of presenters to showcase how we work with cloud native technologies they will",
    "start": "23359",
    "end": "29920"
  },
  {
    "text": "build things they will break things and they will answer your questions join us wednesdays at 11am eastern time",
    "start": "29920",
    "end": "37440"
  },
  {
    "text": "this week we have michael haberman here to talk with us about trace based testing with open telemetry uh also join",
    "start": "37440",
    "end": "45600"
  },
  {
    "text": "us for kubecon and cloudnativecon virtual north america october 11th to",
    "start": "45600",
    "end": "50640"
  },
  {
    "text": "the 15th to hear the latest from the cloud native community uh some housekeeping this is an official",
    "start": "50640",
    "end": "57520"
  },
  {
    "text": "live stream of the cncf and as such is subject to the cncf code of conduct",
    "start": "57520",
    "end": "62640"
  },
  {
    "text": "which simplifies down to please be excellent to one another please do not add anything to the chat",
    "start": "62640",
    "end": "68400"
  },
  {
    "text": "or questions that would be in violation of that code of conduct basically please be respectful of all your fellow",
    "start": "68400",
    "end": "74000"
  },
  {
    "text": "participants and presenters and with that uh howdy michael i'd love to hand it over to you to kick off today's",
    "start": "74000",
    "end": "80320"
  },
  {
    "text": "presentation okay thank you so hello everybody my",
    "start": "80320",
    "end": "85600"
  },
  {
    "start": "82000",
    "end": "230000"
  },
  {
    "text": "name is michael obermann i'm the co-founder and cto at specto and today i would like to speak with you",
    "start": "85600",
    "end": "92000"
  },
  {
    "text": "about an open source that we created um this open source is based on open",
    "start": "92000",
    "end": "98159"
  },
  {
    "text": "telemetry and how to use open telemetry in testing phases rather than in",
    "start": "98159",
    "end": "105680"
  },
  {
    "text": "production issues that you're having so most times that you use",
    "start": "105680",
    "end": "112000"
  },
  {
    "text": "open telemetry you do that to collect traces and metrics and logs and you use it uh basically when you have a",
    "start": "112000",
    "end": "118560"
  },
  {
    "text": "production issue uh when you're trying to debug to understand to troubleshoot what's happening with your system",
    "start": "118560",
    "end": "125280"
  },
  {
    "text": "and that is super important and super great and we do it ourselves",
    "start": "125280",
    "end": "131120"
  },
  {
    "text": "but this kind of raised the question for me um we are paying a lot of money to have",
    "start": "131120",
    "end": "138640"
  },
  {
    "text": "this data to collect it to store it to analyze it it's really expensive and",
    "start": "138640",
    "end": "144000"
  },
  {
    "text": "we're doing it only we're using it only we when we have issues when something broke",
    "start": "144000",
    "end": "151120"
  },
  {
    "text": "um so then i asked myself okay i'm paying a lot for that what else can",
    "start": "151120",
    "end": "156239"
  },
  {
    "text": "i do with it maybe i can use it in other places during the development life cycle and",
    "start": "156239",
    "end": "163120"
  },
  {
    "text": "one of those things um you know looking at open telemetry we are collecting data",
    "start": "163120",
    "end": "168319"
  },
  {
    "text": "at runtime so when do we have more runtime scenarios we have",
    "start": "168319",
    "end": "173599"
  },
  {
    "text": "more runtime scenarios when we are working in our local and we are running tests",
    "start": "173599",
    "end": "178959"
  },
  {
    "text": "so then it got me thinking okay so when i have a production issue",
    "start": "178959",
    "end": "186000"
  },
  {
    "text": "um i'm relying on open telemetry data to understand how my application performs",
    "start": "186000",
    "end": "192080"
  },
  {
    "text": "how it behaves does it do what it is supposed to do basically when i'm running tests i'm",
    "start": "192080",
    "end": "197920"
  },
  {
    "text": "trying to use runtime to validate is my application doing what it's supposed to do",
    "start": "197920",
    "end": "203760"
  },
  {
    "text": "and then i thought okay how can i integrate this open telemetry data into my test",
    "start": "203760",
    "end": "210319"
  },
  {
    "text": "and with that not only to use it when something doesn't work but also to use it in order to validate is something is",
    "start": "210319",
    "end": "217440"
  },
  {
    "text": "it working the way it it should do um so uh um let me share my screen and show",
    "start": "217440",
    "end": "225599"
  },
  {
    "text": "you a bit of a diagram to kind of make sure we are on the same page when",
    "start": "225599",
    "end": "233040"
  },
  {
    "text": "we are talking about uh tests and what type of test i'm referring to and you know the different",
    "start": "233040",
    "end": "240080"
  },
  {
    "text": "approaches you have to do uh testing in microservices what are the benefits and",
    "start": "240080",
    "end": "245680"
  },
  {
    "text": "what are uh the things that you should look out for so um",
    "start": "245680",
    "end": "250879"
  },
  {
    "text": "i have here uh some imaginary architecture um but quite common one for distributed application",
    "start": "250879",
    "end": "258239"
  },
  {
    "text": "so you have a test that you're about to deploy in your ci um and you want to run",
    "start": "258239",
    "end": "264880"
  },
  {
    "text": "some tests therefore it's this service under test and it's a process that you spin up it's",
    "start": "264880",
    "end": "271440"
  },
  {
    "text": "communicating with some third of about the api to do something it also has a downstream service that",
    "start": "271440",
    "end": "277759"
  },
  {
    "text": "it's relying on this service is getting http code from the service under test um take those",
    "start": "277759",
    "end": "284960"
  },
  {
    "text": "calls communicate with aws 3 or any other",
    "start": "284960",
    "end": "290880"
  },
  {
    "text": "you know some cloud service out there and this is your application and you",
    "start": "290880",
    "end": "297680"
  },
  {
    "text": "want to validate that application works um specifically i'm referring to",
    "start": "297680",
    "end": "303520"
  },
  {
    "start": "300000",
    "end": "344000"
  },
  {
    "text": "and to an integration test which for me means um",
    "start": "303520",
    "end": "308639"
  },
  {
    "text": "api testing ui testing and to end testing so you have a test runner that is going",
    "start": "308639",
    "end": "316080"
  },
  {
    "text": "to invoke some activities going to send some network uh",
    "start": "316080",
    "end": "322479"
  },
  {
    "text": "to that service in order to activate this service in some way it could be http could be ui could be",
    "start": "322479",
    "end": "328880"
  },
  {
    "text": "uh through a kafka messaging or or whatever so i'm basically referring to any type",
    "start": "328880",
    "end": "336000"
  },
  {
    "text": "of network testing at the end of the day so let's let's review what are my options when i'm",
    "start": "336000",
    "end": "342080"
  },
  {
    "text": "going to test this service the first and probably the most",
    "start": "342080",
    "end": "348000"
  },
  {
    "text": "common one would be to use mocks either to um",
    "start": "348000",
    "end": "354160"
  },
  {
    "text": "do mocks only on things that i don't control uh you know the the external",
    "start": "354160",
    "end": "360160"
  },
  {
    "text": "stuff or i can even do it that way and completely isolate my service and then i",
    "start": "360160",
    "end": "365600"
  },
  {
    "text": "have process number one that's would be the test runner sending api code to process number two that would be the",
    "start": "365600",
    "end": "372720"
  },
  {
    "text": "service standard test and this thing is completely um isolated from the word",
    "start": "372720",
    "end": "378479"
  },
  {
    "text": "so this thing is super useful it's so easy to",
    "start": "378479",
    "end": "384319"
  },
  {
    "text": "spin up you just run the service um mock whatever you whatever depends it has and",
    "start": "384319",
    "end": "390800"
  },
  {
    "text": "you're good to go you can test it from operation point of view that is the",
    "start": "390800",
    "end": "396720"
  },
  {
    "text": "simplest as it can be from application perspective so",
    "start": "396720",
    "end": "401840"
  },
  {
    "text": "when we decided to do a mock um we gained a",
    "start": "401840",
    "end": "407039"
  },
  {
    "text": "very significant amount of stability because my test always uh",
    "start": "407039",
    "end": "413039"
  },
  {
    "text": "would use it would get the same response the same data structure from um the",
    "start": "413039",
    "end": "418880"
  },
  {
    "text": "third party api from the mock however um i'm not actually testing",
    "start": "418880",
    "end": "426319"
  },
  {
    "text": "how the servers perform i'm testing how the service of service perform in a",
    "start": "426319",
    "end": "431759"
  },
  {
    "text": "specific scenario of how to thought about the api with response the same data structure the same most likely the",
    "start": "431759",
    "end": "438800"
  },
  {
    "text": "same values and also the amount of time that is going to get response from the",
    "start": "438800",
    "end": "444000"
  },
  {
    "text": "third-party api the same goes for the downstream service and the aws sdk so",
    "start": "444000",
    "end": "450479"
  },
  {
    "text": "that's like what's good and bad about it and from a certain perspective what test",
    "start": "450479",
    "end": "455520"
  },
  {
    "text": "can i run so the test runner is going to let's say send an api call and then get a response i",
    "start": "455520",
    "end": "462800"
  },
  {
    "text": "can only validate the response and i'm not trying to say there is anything",
    "start": "462800",
    "end": "469680"
  },
  {
    "text": "wrong with this approach but it has its benefits and it has its",
    "start": "469680",
    "end": "475039"
  },
  {
    "text": "drawback i would say if you would open uh um my ci in different services you will",
    "start": "475039",
    "end": "481759"
  },
  {
    "text": "find tests like that those are great but we can have",
    "start": "481759",
    "end": "486960"
  },
  {
    "start": "485000",
    "end": "667000"
  },
  {
    "text": "another approach and this approach is saying i want to test the whole thing i want my test",
    "start": "486960",
    "end": "493199"
  },
  {
    "text": "running to send an api call to the service under test and then real http calls are going to run between all of",
    "start": "493199",
    "end": "500479"
  },
  {
    "text": "those components um for operation point of view that's a nightmare you need to spin up",
    "start": "500479",
    "end": "507199"
  },
  {
    "text": "so many things um you need to make sure all the configuration works um when it",
    "start": "507199",
    "end": "512399"
  },
  {
    "text": "doesn't work there is always the argument is it application is it the devops um so you have a lot of things to",
    "start": "512399",
    "end": "519200"
  },
  {
    "text": "do however when the test run and when the test is stable you get a real use case that you",
    "start": "519200",
    "end": "527120"
  },
  {
    "text": "can see um the whole view of your application how it's performing and",
    "start": "527120",
    "end": "532320"
  },
  {
    "text": "hopefully how it's going to perform in production environment and",
    "start": "532320",
    "end": "537440"
  },
  {
    "text": "so then because what i did here is not mocked it's um",
    "start": "537440",
    "end": "543519"
  },
  {
    "text": "you know it's it's really real so if the downstream service is going to upload a",
    "start": "543519",
    "end": "549279"
  },
  {
    "text": "file to f3 or object to f3 then i can test not only the response from the service",
    "start": "549279",
    "end": "556240"
  },
  {
    "text": "under test i can also route dedicated code in my test runner",
    "start": "556240",
    "end": "561440"
  },
  {
    "text": "and to uh test the side effect i can go to awf 3 and ask hey does the file is it",
    "start": "561440",
    "end": "568480"
  },
  {
    "text": "there is it in the right format it does it has the right permission or whatever i want",
    "start": "568480",
    "end": "573600"
  },
  {
    "text": "to test and basically that's super important because it gives",
    "start": "573600",
    "end": "581440"
  },
  {
    "text": "me a whole view so just to give you uh you know an example if somebody is",
    "start": "581440",
    "end": "588160"
  },
  {
    "text": "purchasing uh something in my system and i want to send an email with an invoice",
    "start": "588160",
    "end": "594480"
  },
  {
    "text": "and um you want the invoice to be stored in f3 um you want to validate that it was used there right so now you can",
    "start": "594480",
    "end": "601040"
  },
  {
    "text": "really make sure it's really really there the drawback in this scenario uh would",
    "start": "601040",
    "end": "606079"
  },
  {
    "text": "be two things first of all i had to write some code",
    "start": "606079",
    "end": "611920"
  },
  {
    "text": "that is going to f3 and doing all this validation so if i had a bug in you know",
    "start": "611920",
    "end": "618079"
  },
  {
    "text": "putting the code in f3 i may i may as well have a plugin in checking if it's there it's a code like any other it's",
    "start": "618079",
    "end": "624560"
  },
  {
    "text": "good it has its own uh bugs uh we are relying that we can check it",
    "start": "624560",
    "end": "630560"
  },
  {
    "text": "in the in the uh um you know the third party that we're talking about um maybe",
    "start": "630560",
    "end": "636240"
  },
  {
    "text": "we can't check it either because we don't have an api for that or it's something that is not persistent",
    "start": "636240",
    "end": "642880"
  },
  {
    "text": "right because in f3 you can go and validate hey is the file is is it there but if you send an",
    "start": "642880",
    "end": "650000"
  },
  {
    "text": "api call to a third party um i can't go to the to the third party and",
    "start": "650000",
    "end": "655120"
  },
  {
    "text": "ask it hey did you got an api call from me in the last second or so so um",
    "start": "655120",
    "end": "661680"
  },
  {
    "text": "this is the the problem with the problems with this with this approach",
    "start": "661680",
    "end": "667120"
  },
  {
    "start": "667000",
    "end": "774000"
  },
  {
    "text": "so now i want to introduce you to what what we did so basically um and again we're talking",
    "start": "667120",
    "end": "675279"
  },
  {
    "text": "about the steel application having open telemetry in them so",
    "start": "675279",
    "end": "680959"
  },
  {
    "text": "we have the test running it's creating real http calls and those http calls",
    "start": "680959",
    "end": "686959"
  },
  {
    "text": "generate traces those traces represent the activities that happen in the service and between",
    "start": "686959",
    "end": "692880"
  },
  {
    "text": "the services and then if i'll give you access from the test runner to get the actual trace",
    "start": "692880",
    "end": "700640"
  },
  {
    "text": "to get the trace and to validate based on that trace then what i'll be able to do",
    "start": "700640",
    "end": "707040"
  },
  {
    "text": "is i'll be able to take the trace and make sure that it",
    "start": "707040",
    "end": "712079"
  },
  {
    "text": "works the same way that you would do if you had a production issue in this system",
    "start": "712079",
    "end": "717200"
  },
  {
    "text": "you would go and look at the traces and ask okay what's wrong here and rather do",
    "start": "717200",
    "end": "722399"
  },
  {
    "text": "it manually we can do it automatically in our testing",
    "start": "722399",
    "end": "729040"
  },
  {
    "text": "so this is the theory behind it and i think we talked enough and now we can jump to see uh some code",
    "start": "729040",
    "end": "735600"
  },
  {
    "text": "um so the code that i'm going to show you would be um",
    "start": "735600",
    "end": "740959"
  },
  {
    "text": "the example that you see here uh so we would see two services communicating with one",
    "start": "740959",
    "end": "746079"
  },
  {
    "text": "another you would also uh um see the test the test runner and if time permits",
    "start": "746079",
    "end": "752880"
  },
  {
    "text": "we will take a look at how the open source uh by the way i never said the",
    "start": "752880",
    "end": "758959"
  },
  {
    "text": "name of the open source which is malabi um so you can uh um",
    "start": "758959",
    "end": "765040"
  },
  {
    "text": "go to uh uh and would see how malabi uh uh is actually implemented which is kind of",
    "start": "765040",
    "end": "771279"
  },
  {
    "text": "simple to be honest okay so diving to our code",
    "start": "771279",
    "end": "777360"
  },
  {
    "start": "774000",
    "end": "1217000"
  },
  {
    "text": "so um if we take a look at our code we have uh three files here",
    "start": "777360",
    "end": "782560"
  },
  {
    "text": "the service under test the downloading service and our service under test spec",
    "start": "782560",
    "end": "787839"
  },
  {
    "text": "which is our testing so um the service under test is going to have a few api calls",
    "start": "787839",
    "end": "796240"
  },
  {
    "text": "this is a very demo application so look at it as a demo thing so we have a",
    "start": "796240",
    "end": "801600"
  },
  {
    "text": "slash to do uh um endpoint and the slash to do endpoint is sending an api call to",
    "start": "801600",
    "end": "807839"
  },
  {
    "text": "some uh third-party api and then returns the title",
    "start": "807839",
    "end": "812880"
  },
  {
    "text": "we also have an invoice uh endpoint the invoice endpoint is also sending an api",
    "start": "812880",
    "end": "819120"
  },
  {
    "text": "call to our low-cost slash data that would be the downstream the downstream uh on slash",
    "start": "819120",
    "end": "826560"
  },
  {
    "text": "data it's going to put an object and put it in f3 and then response status",
    "start": "826560",
    "end": "833279"
  },
  {
    "text": "good and then we have slash user to fetch all the",
    "start": "833279",
    "end": "839519"
  },
  {
    "text": "users we have this a bit more complicated scenario where we're trying to fetch a",
    "start": "839519",
    "end": "846480"
  },
  {
    "text": "specific users with a specific first name that we will review with more details a bit later and also creating a",
    "start": "846480",
    "end": "854320"
  },
  {
    "text": "new uh user so that is uh um the what the services are",
    "start": "854320",
    "end": "861120"
  },
  {
    "text": "doing and um in each service you you can see right",
    "start": "861120",
    "end": "866240"
  },
  {
    "text": "here um that we have uh malabi imported and we'll dive into what it's doing in a",
    "start": "866240",
    "end": "872880"
  },
  {
    "text": "second so let's take a test for example",
    "start": "872880",
    "end": "879440"
  },
  {
    "text": "so here you can see the test to slash to do and it's less to do is sending an api",
    "start": "879440",
    "end": "884880"
  },
  {
    "text": "call to some endpoint so i started by um calling slash to do",
    "start": "884880",
    "end": "891600"
  },
  {
    "text": "and i'm validating the response so far this is a typical api integration test",
    "start": "891600",
    "end": "899519"
  },
  {
    "text": "um you will probably go right here and start to validate i don't know the response data and make sure that it's in",
    "start": "899519",
    "end": "907040"
  },
  {
    "text": "the right structure the right values or whatever you're trying to validate um and then on top of that",
    "start": "907040",
    "end": "914160"
  },
  {
    "text": "you are going to get the ability to use malabi and this is",
    "start": "914160",
    "end": "919199"
  },
  {
    "text": "this is the open source so maybe one one of the most important thing for me",
    "start": "919199",
    "end": "925199"
  },
  {
    "text": "this project i'm not trying to tell you you should start writing your test in a different way or",
    "start": "925199",
    "end": "931279"
  },
  {
    "text": "throw away your test and move to a new test framework not at all i'm trying to tell you take what you have today and",
    "start": "931279",
    "end": "937440"
  },
  {
    "text": "extend it so it's not going to replace anything so the first thing that we are doing is",
    "start": "937440",
    "end": "943920"
  },
  {
    "text": "we are getting the telemetry repository this is where the magic happens this is",
    "start": "943920",
    "end": "949279"
  },
  {
    "text": "where the test uh process is going to communicate with the service under test collect the",
    "start": "949279",
    "end": "954959"
  },
  {
    "text": "telemetry data and serve it in your test so this is the test we have access to",
    "start": "954959",
    "end": "960639"
  },
  {
    "text": "our telemetry data and here we are running our first assertion um go to the telemetry",
    "start": "960639",
    "end": "967680"
  },
  {
    "text": "repository take the spans please take the outgoing http calls please take the",
    "start": "967680",
    "end": "974079"
  },
  {
    "text": "first one and we assume that um it's going to send an api call to this",
    "start": "974079",
    "end": "981519"
  },
  {
    "text": "specific route and the status code to be 200 again this is the internal code so",
    "start": "981519",
    "end": "987839"
  },
  {
    "text": "we have like two api calls the service under tests and it send the api call to the service and the service sent an",
    "start": "987839",
    "end": "994240"
  },
  {
    "text": "outgoing so we are testing right now the internals off of that service",
    "start": "994240",
    "end": "999440"
  },
  {
    "text": "and um this is like trying to be as convenient as possible",
    "start": "999440",
    "end": "1004480"
  },
  {
    "text": "so you have access to spends and spam is basically the event that",
    "start": "1004480",
    "end": "1009680"
  },
  {
    "text": "every interaction between services or between dependencies is an event and",
    "start": "1009680",
    "end": "1015360"
  },
  {
    "text": "here you can see a whole very long list of whatever things that you can get",
    "start": "1015360",
    "end": "1020800"
  },
  {
    "text": "whether it's aws database operations um",
    "start": "1020800",
    "end": "1026000"
  },
  {
    "text": "messaging systems like craft cars qs rabbit mqs so",
    "start": "1026000",
    "end": "1031360"
  },
  {
    "text": "basically you get like a big list of things that you can validate on so",
    "start": "1031360",
    "end": "1037280"
  },
  {
    "text": "once you chose which type of uh um",
    "start": "1037280",
    "end": "1042480"
  },
  {
    "text": "spends you want to get so any aws spend would be now accessible then i may",
    "start": "1042480",
    "end": "1048880"
  },
  {
    "text": "want to get specifically a three interaction then i want to get the first one and now i can validate for any kind",
    "start": "1048880",
    "end": "1057280"
  },
  {
    "text": "of attribute it might have so this is uh uh like having the",
    "start": "1057280",
    "end": "1062880"
  },
  {
    "text": "simplest uh um test and maybe before i'm jumping into",
    "start": "1062880",
    "end": "1068640"
  },
  {
    "text": "the rest of the test i'll review a bit what it means to to set it up um because",
    "start": "1068640",
    "end": "1074160"
  },
  {
    "text": "the setup uh should be fairly simple so first thing first we assume that there",
    "start": "1074160",
    "end": "1081520"
  },
  {
    "text": "is open telemetry installed um in the service under test or any other",
    "start": "1081520",
    "end": "1087679"
  },
  {
    "text": "service that is running to make your life easier we chose to do",
    "start": "1087679",
    "end": "1093039"
  },
  {
    "text": "uh to wrap open telemetry with uh using motherb uh but this is purely open",
    "start": "1093039",
    "end": "1100080"
  },
  {
    "text": "telemetry if you already have open telemetry you don't need to uh run malabar instrument you can tweak",
    "start": "1100080",
    "end": "1107520"
  },
  {
    "text": "a bit the open climate you already have and then it it would work so the way that it works is that",
    "start": "1107520",
    "end": "1115120"
  },
  {
    "text": "malabi is collecting the traces collecting the spans",
    "start": "1115120",
    "end": "1120240"
  },
  {
    "text": "and allow them to be collected via http code",
    "start": "1120240",
    "end": "1125919"
  },
  {
    "text": "so if we'll go to uh the test that we just looked",
    "start": "1125919",
    "end": "1131039"
  },
  {
    "text": "so we have here the get telemetry repository the get telemetry repository",
    "start": "1131039",
    "end": "1137360"
  },
  {
    "text": "is basically a function that is fetching the remote telemetry",
    "start": "1137360",
    "end": "1142640"
  },
  {
    "text": "so malabi gives you the access to fetch the remote telemetry",
    "start": "1142640",
    "end": "1147919"
  },
  {
    "text": "and with a specific port or a base url um so we are fetching the the uh uh all the",
    "start": "1147919",
    "end": "1155760"
  },
  {
    "text": "telemetry data and then before we start any new test we are",
    "start": "1155760",
    "end": "1161520"
  },
  {
    "text": "cleaning the telemetry repository so that traces won't",
    "start": "1161520",
    "end": "1167440"
  },
  {
    "text": "leak between different test runs we called it telemetry not spans because",
    "start": "1167440",
    "end": "1173360"
  },
  {
    "text": "open telemetry is not only about tracing expenses also about logging and metrics",
    "start": "1173360",
    "end": "1179600"
  },
  {
    "text": "so someday we may extend it to collect not only uh traces but also uh you know",
    "start": "1179600",
    "end": "1186240"
  },
  {
    "text": "metrics and and logs and stuff like that okay so just to uh",
    "start": "1186240",
    "end": "1194000"
  },
  {
    "text": "to go through the process we sent an api call that calls the service under test to collect the traces",
    "start": "1194000",
    "end": "1200160"
  },
  {
    "text": "keep them in memory then we are fetching it from the memory um assertion based on that and before",
    "start": "1200160",
    "end": "1207679"
  },
  {
    "text": "running a new test we are just cleaning it so we won't have a more",
    "start": "1207679",
    "end": "1214480"
  },
  {
    "text": "traces leaking between tests okay so let's go",
    "start": "1214559",
    "end": "1220400"
  },
  {
    "start": "1217000",
    "end": "1422000"
  },
  {
    "text": "through uh more types of tests that we may do um you would see that the pattern is almost",
    "start": "1220400",
    "end": "1226880"
  },
  {
    "text": "uh similar um so if we are looking at uh um",
    "start": "1226880",
    "end": "1232799"
  },
  {
    "text": "again uh at slash users we're sending an api call to this user",
    "start": "1232799",
    "end": "1238000"
  },
  {
    "text": "fetching the telemetry and this is where we are starting to have stuff that are",
    "start": "1238000",
    "end": "1243280"
  },
  {
    "text": "not http based so sqlize if you're not familiar with that that's an orm uh a",
    "start": "1243280",
    "end": "1250880"
  },
  {
    "text": "javascript typescript orm to communicate with your database um",
    "start": "1250880",
    "end": "1256880"
  },
  {
    "text": "so basically we are validating that um",
    "start": "1256880",
    "end": "1262400"
  },
  {
    "text": "we are grabbing a sequel activity we assert that there must be only one",
    "start": "1262400",
    "end": "1269600"
  },
  {
    "text": "so if you have a bag and it's going to be suddenly instead of one query it's going to be 10",
    "start": "1269600",
    "end": "1276320"
  },
  {
    "text": "queries your test is going to fail and then you're asserting that it's a select",
    "start": "1276320",
    "end": "1283120"
  },
  {
    "text": "and you're asserting that the response is an array imagine what you need to go through",
    "start": "1283120",
    "end": "1290480"
  },
  {
    "text": "without having uh the ability to look at your picture traces",
    "start": "1290480",
    "end": "1296080"
  },
  {
    "text": "um and here we are going to um even a more complex scenario a",
    "start": "1296080",
    "end": "1302240"
  },
  {
    "text": "scenario where we're calling slash invoice and when you're calling slash invoice you have two hops so the service",
    "start": "1302240",
    "end": "1310159"
  },
  {
    "text": "under test is the test framework is calling service on their test and service under test is calling our",
    "start": "1310159",
    "end": "1317760"
  },
  {
    "text": "downstream service and downstream service is going to call the uh",
    "start": "1317760",
    "end": "1323840"
  },
  {
    "text": "um the aws sdk so here what we are doing is first of",
    "start": "1323840",
    "end": "1329200"
  },
  {
    "text": "all we are validating that we are in fact calling the slash data and also validating wheeled only one and",
    "start": "1329200",
    "end": "1336880"
  },
  {
    "text": "it was successful we are able to make sure that we had one interaction",
    "start": "1336880",
    "end": "1342960"
  },
  {
    "text": "with the aws sdk and that's an f3 uh of type of uh of f3 activity",
    "start": "1342960",
    "end": "1350400"
  },
  {
    "text": "we can take the payload that we sent to f3 and validate that the key is the",
    "start": "1350400",
    "end": "1356480"
  },
  {
    "text": "right one so um that is uh um like being able to",
    "start": "1356480",
    "end": "1364000"
  },
  {
    "text": "go all the way through and um one of the use cases that you know i'm showing",
    "start": "1364000",
    "end": "1370640"
  },
  {
    "text": "right now specifically api calls and it may be very interesting to to to",
    "start": "1370640",
    "end": "1378640"
  },
  {
    "text": "to remind that this could also work with end-to-end tests so let's assume that you're doing some",
    "start": "1378640",
    "end": "1387200"
  },
  {
    "text": "ui testing and you want to validate with your that you did you kind of fill up",
    "start": "1387200",
    "end": "1392960"
  },
  {
    "text": "some form in your ui and now you want to make sure that uh um",
    "start": "1392960",
    "end": "1399520"
  },
  {
    "text": "i don't know an email was sent then you can do that and this is like",
    "start": "1399520",
    "end": "1404640"
  },
  {
    "text": "really really powerful yeah um",
    "start": "1404640",
    "end": "1409679"
  },
  {
    "text": "cool so i do want to show um one more interesting uh um",
    "start": "1409679",
    "end": "1418640"
  },
  {
    "text": "test before i'll uh um yeah so one more interesting test before",
    "start": "1418640",
    "end": "1425279"
  },
  {
    "start": "1422000",
    "end": "1697000"
  },
  {
    "text": "diving into how mala b is uh implemented and this is a use case that uh we",
    "start": "1425279",
    "end": "1433279"
  },
  {
    "text": "encountered several times with people having problems uh with it and that is",
    "start": "1433279",
    "end": "1438880"
  },
  {
    "text": "when you have a database and a cache read this um kind of protecting it and",
    "start": "1438880",
    "end": "1446400"
  },
  {
    "text": "you want to make sure that not all the requests are ending up in your uh in your",
    "start": "1446400",
    "end": "1451440"
  },
  {
    "text": "database but rather being hit by a cache so um what",
    "start": "1451440",
    "end": "1457120"
  },
  {
    "text": "we're doing here is we are sending an api call to slash user and basically creating a new user",
    "start": "1457120",
    "end": "1464960"
  },
  {
    "text": "and validating it cool then we're going to fetch the new user",
    "start": "1464960",
    "end": "1471520"
  },
  {
    "text": "that was just created so we're fetching it by",
    "start": "1471520",
    "end": "1476640"
  },
  {
    "text": "the first name and validating that that was successful now",
    "start": "1476640",
    "end": "1481679"
  },
  {
    "text": "those who are going to from the contract point of view assure you that",
    "start": "1481679",
    "end": "1487200"
  },
  {
    "text": "everything works but now we want to make sure that the internal works nobody guarantees you",
    "start": "1487200",
    "end": "1492799"
  },
  {
    "text": "till this in in this portion of the code that the data is going to be found in your",
    "start": "1492799",
    "end": "1500400"
  },
  {
    "text": "in your cash and if we i saw companies having downtime because",
    "start": "1500400",
    "end": "1509039"
  },
  {
    "text": "this thing that was supposed to be in the cash wasn't present in the cash and",
    "start": "1509039",
    "end": "1514400"
  },
  {
    "text": "it's hard to test it it really is so let's see how how we can do that",
    "start": "1514400",
    "end": "1519679"
  },
  {
    "text": "so um again we are uh calling get telemetry repository we now",
    "start": "1519679",
    "end": "1526000"
  },
  {
    "text": "have all all the activities available we are fetching um both the sqlize the database",
    "start": "1526000",
    "end": "1533760"
  },
  {
    "text": "one and the radius ones and first thing first i want to make sure that the first interaction so",
    "start": "1533760",
    "end": "1540000"
  },
  {
    "text": "sqlize the first interaction the dp operation was insert and that is because our first api",
    "start": "1540000",
    "end": "1547760"
  },
  {
    "text": "was um inserting to my to to the database",
    "start": "1547760",
    "end": "1552960"
  },
  {
    "text": "then the next thing that should happen is that we are going to read this and",
    "start": "1552960",
    "end": "1559279"
  },
  {
    "text": "we're going to try and fetch uh jerry from uh from our cache",
    "start": "1559279",
    "end": "1565520"
  },
  {
    "text": "and we uh we are validating that we are requesting",
    "start": "1565520",
    "end": "1570799"
  },
  {
    "text": "for jerry in the right format the right query and we are also expecting to get",
    "start": "1570799",
    "end": "1576640"
  },
  {
    "text": "that it's empty so we are expecting it to not be present in our cache",
    "start": "1576640",
    "end": "1583039"
  },
  {
    "text": "then what we are doing is um we are",
    "start": "1583039",
    "end": "1589440"
  },
  {
    "text": "again querying a database and running a select statement because we want to fetch",
    "start": "1589440",
    "end": "1594799"
  },
  {
    "text": "the the user from the database and then we expect to push it to the radius let me go and show",
    "start": "1594799",
    "end": "1602960"
  },
  {
    "text": "you like um for me this is a very good use case of of malabar because it really shows the power of of what you can do",
    "start": "1602960",
    "end": "1609840"
  },
  {
    "text": "with it and maybe just to show you again how the code looks so",
    "start": "1609840",
    "end": "1615760"
  },
  {
    "text": "this is how the code looks like so we called slash user with jerry uh it",
    "start": "1615760",
    "end": "1621679"
  },
  {
    "text": "was present so not uh that so we are proceeding to this portion of the code",
    "start": "1621679",
    "end": "1627840"
  },
  {
    "text": "we first checked if it was present in our cache if it was we were just uh",
    "start": "1627840",
    "end": "1633360"
  },
  {
    "text": "respond with it it's not present so we need to fetch it in our database",
    "start": "1633360",
    "end": "1638799"
  },
  {
    "text": "and uh once we fetch it from a database we can push it back to our uh uh to our",
    "start": "1638799",
    "end": "1645600"
  },
  {
    "text": "radius so this is ensuring that the whole process of checking if it is available",
    "start": "1645600",
    "end": "1651120"
  },
  {
    "text": "if not pull it from database and then push it back to reduce is working and",
    "start": "1651120",
    "end": "1656880"
  },
  {
    "text": "everybody is is happy and we're good to go",
    "start": "1656880",
    "end": "1662080"
  },
  {
    "text": "um i think that at this point i'll jump into um",
    "start": "1662080",
    "end": "1668720"
  },
  {
    "text": "maybe showing a bit how uh malabi itself is implemented again um it's",
    "start": "1668720",
    "end": "1675760"
  },
  {
    "text": "kind of easier than expected i would say um because there isn't like a lot of things",
    "start": "1675760",
    "end": "1682240"
  },
  {
    "text": "happening there so we have a few repositories here so um",
    "start": "1682240",
    "end": "1688080"
  },
  {
    "text": "the first one is uh um basically our ability to uh um start the",
    "start": "1688080",
    "end": "1695440"
  },
  {
    "text": "instrumentation so if you remember in our service the first thing that we did we were calling",
    "start": "1695440",
    "end": "1702720"
  },
  {
    "start": "1697000",
    "end": "1882000"
  },
  {
    "text": "instrument so the instrument function is basically spinning up open telemetry",
    "start": "1702720",
    "end": "1708320"
  },
  {
    "text": "with a very few uh changes so change number one",
    "start": "1708320",
    "end": "1714640"
  },
  {
    "text": "that we are doing is actually set up a sampler um because um",
    "start": "1714640",
    "end": "1721360"
  },
  {
    "text": "because malabi is communicating using http it's going to generate spend by",
    "start": "1721360",
    "end": "1726480"
  },
  {
    "text": "itself and you don't want to see uh malabi's pens in your testing so",
    "start": "1726480",
    "end": "1732080"
  },
  {
    "text": "basically what we are doing if um the trace the http",
    "start": "1732080",
    "end": "1738399"
  },
  {
    "text": "uh target starts with malabi we are not recording it so we won't uh put stuff",
    "start": "1738399",
    "end": "1743440"
  },
  {
    "text": "that you are not interested in in your test the second thing is we are using an",
    "start": "1743440",
    "end": "1748880"
  },
  {
    "text": "in-memory exporter um our in memory exporter collects the spend uh stored them and",
    "start": "1748880",
    "end": "1756880"
  },
  {
    "text": "waiting for them to be fetched and i'll show you how it looks like",
    "start": "1756880",
    "end": "1763120"
  },
  {
    "text": "so um our memory exporter is a very simple um open telemetry exporter plain",
    "start": "1763120",
    "end": "1770960"
  },
  {
    "text": "pure open empty exporter with two functions get spends and reset spans",
    "start": "1770960",
    "end": "1776159"
  },
  {
    "text": "which are calling the the in-memory exporter functions",
    "start": "1776159",
    "end": "1783120"
  },
  {
    "text": "and then we're doing uh getting all the auto instrumentation available for that so we would get",
    "start": "1783200",
    "end": "1789840"
  },
  {
    "text": "anything possible and we do uh using two important things the first one",
    "start": "1789840",
    "end": "1796399"
  },
  {
    "text": "is to collect all payloads so that is giving you the ability when you're sending an api call writing to a",
    "start": "1796399",
    "end": "1803440"
  },
  {
    "text": "database uploading a file to f3 that gives you the ability to um",
    "start": "1803440",
    "end": "1809120"
  },
  {
    "text": "look at the payload itself and assert them so it's not only giving you the ability to uh have uh um to validate the",
    "start": "1809120",
    "end": "1817200"
  },
  {
    "text": "interaction but the actual data that is being transferred so so this is why we use to collect uh pale true",
    "start": "1817200",
    "end": "1824000"
  },
  {
    "text": "and the second thing that we're doing is we are suppressing the internal instrumentation and this is kind of a",
    "start": "1824000",
    "end": "1831360"
  },
  {
    "text": "funny thing that maybe maybe some of you won't be aware but when you're doing like a aws",
    "start": "1831360",
    "end": "1840000"
  },
  {
    "text": "dot put to object that is going to create an http call and that is going to be caught",
    "start": "1840000",
    "end": "1847200"
  },
  {
    "text": "in your instrumentation by default and again you don't want that you don't want it you",
    "start": "1847200",
    "end": "1852960"
  },
  {
    "text": "don't you're not going to try and make sure that the aws sdk uh um",
    "start": "1852960",
    "end": "1859120"
  },
  {
    "text": "the structure of the api call is correct so we don't want to have stuff that we're not going to test so we're",
    "start": "1859120",
    "end": "1865039"
  },
  {
    "text": "suppressing the internal instrumentation so that is the part of",
    "start": "1865039",
    "end": "1872480"
  },
  {
    "text": "how we are collecting the data and then in order",
    "start": "1872480",
    "end": "1877760"
  },
  {
    "text": "to serve it we have an http server",
    "start": "1877760",
    "end": "1883039"
  },
  {
    "start": "1882000",
    "end": "1992000"
  },
  {
    "text": "and this http server whenever you call slash malabi",
    "start": "1883039",
    "end": "1888720"
  },
  {
    "text": "it's going to this router this router has two simple um",
    "start": "1888720",
    "end": "1895279"
  },
  {
    "text": "endpoints slash spends with get that would return dispense we collected",
    "start": "1895279",
    "end": "1901120"
  },
  {
    "text": "and um the delete slash bands would of course delete them",
    "start": "1901120",
    "end": "1907360"
  },
  {
    "text": "from the memory uh exporter and you can see here that we are using",
    "start": "1907360",
    "end": "1912960"
  },
  {
    "text": "um protobuf the reason that we're using protobuf to transfer",
    "start": "1912960",
    "end": "1919120"
  },
  {
    "text": "uh um the results the traces um from the formality uh from service to malabi um",
    "start": "1919120",
    "end": "1926320"
  },
  {
    "text": "is because we do want to support different programming languages so we don't want it to be",
    "start": "1926320",
    "end": "1932159"
  },
  {
    "text": "um it has to be node.js all the way so if you want uh to have node.js in your",
    "start": "1932159",
    "end": "1938480"
  },
  {
    "text": "test framework but you're testing python or java service that will be uh",
    "start": "1938480",
    "end": "1944080"
  },
  {
    "text": "doable and then protobuf is going to make sure that the data remains in the right structure",
    "start": "1944080",
    "end": "1949679"
  },
  {
    "text": "all the time and",
    "start": "1949679",
    "end": "1954960"
  },
  {
    "text": "yeah so so that's the http service and the function that we saw earlier of fetch",
    "start": "1954960",
    "end": "1961519"
  },
  {
    "text": "fetching the uh um the the remote telemetry is a very simple calling the",
    "start": "1961519",
    "end": "1968080"
  },
  {
    "text": "slash mala beast lesbians and doing this transformation and the same goes for the",
    "start": "1968080",
    "end": "1973120"
  },
  {
    "text": "clear remote so um basically that's how",
    "start": "1973120",
    "end": "1979039"
  },
  {
    "text": "malabi is uh collecting the data and transferring it from place to place the",
    "start": "1979039",
    "end": "1984799"
  },
  {
    "text": "other thing that we did is um kind of making your life easier",
    "start": "1984799",
    "end": "1990480"
  },
  {
    "text": "when it comes to finding what you're looking for so",
    "start": "1990480",
    "end": "1995840"
  },
  {
    "start": "1992000",
    "end": "2102000"
  },
  {
    "text": "to filter all the spans uh only for uh http",
    "start": "1995840",
    "end": "2001519"
  },
  {
    "text": "for instance um this is something that you need to know how to do uh you need",
    "start": "2001519",
    "end": "2006880"
  },
  {
    "text": "to know open telemetry and sometimes to know quite well how to find the right spin so we wanted to make your life a",
    "start": "2006880",
    "end": "2013760"
  },
  {
    "text": "bit easier so those would be the functions that we use in order to",
    "start": "2013760",
    "end": "2019279"
  },
  {
    "text": "find the right thing that you're looking for so if you're looking for a message received so your service is receiving",
    "start": "2019279",
    "end": "2025120"
  },
  {
    "text": "messages from through kafka so what you would do you would do",
    "start": "2025120",
    "end": "2031120"
  },
  {
    "text": "spends dot messaging receive and then we would filter only for the right uh um",
    "start": "2031120",
    "end": "2038960"
  },
  {
    "text": "the right spends and we also wrap the spans themselves in order to make sure",
    "start": "2038960",
    "end": "2044240"
  },
  {
    "text": "that it's also easier right here uh so for instance if you gather the",
    "start": "2044240",
    "end": "2049760"
  },
  {
    "text": "headers uh that's an annoying object to work with we wanted to simplify stuff and also if you're",
    "start": "2049760",
    "end": "2056560"
  },
  {
    "text": "trying to find a specific attribute within within the span",
    "start": "2056560",
    "end": "2062878"
  },
  {
    "text": "again just to make your life a bit a bit easier you do have access to the",
    "start": "2062879",
    "end": "2069280"
  },
  {
    "text": "whole data itself so um let me show you just a",
    "start": "2069280",
    "end": "2075118"
  },
  {
    "text": "second how it looks so if you go to up if you go to",
    "start": "2075119",
    "end": "2080800"
  },
  {
    "text": "radius activities and then you take the first one you can access the raw attributes and then",
    "start": "2080800",
    "end": "2089839"
  },
  {
    "text": "you can do whatever you're looking for if we missed some something that we had a bug or you have manual instrumentation",
    "start": "2089839",
    "end": "2096240"
  },
  {
    "text": "so you'll have access to it so that's the uh open source um",
    "start": "2096240",
    "end": "2104480"
  },
  {
    "start": "2102000",
    "end": "2262000"
  },
  {
    "text": "just like to give you a bit of a roadmap thing that what are the main thing that that we are going to work on",
    "start": "2104560",
    "end": "2112320"
  },
  {
    "text": "so currently uh the test runner is going is communicate",
    "start": "2112320",
    "end": "2117359"
  },
  {
    "text": "directly with every service which could be rather annoying um so we want to have a kind of a back",
    "start": "2117359",
    "end": "2125359"
  },
  {
    "text": "end so all the traces probably today are shipping the traces somewhere um so we want to spin up some",
    "start": "2125359",
    "end": "2133440"
  },
  {
    "text": "traces backhand such as jager zipkin and then malabi will communicate with jaeger",
    "start": "2133440",
    "end": "2140480"
  },
  {
    "text": "so the setup would be even easier you just point uh the test run it together you point your services to jager",
    "start": "2140480",
    "end": "2148400"
  },
  {
    "text": "and everybody is happy so uh that's one thing that we are going to add also",
    "start": "2148400",
    "end": "2154960"
  },
  {
    "text": "support for metrics and logs um and supporting more languages right then",
    "start": "2154960",
    "end": "2161119"
  },
  {
    "text": "we support only uh javascript as you saw and lastly we very",
    "start": "2161119",
    "end": "2166160"
  },
  {
    "text": "much want to add instrumentation to the text framework themselves so then you",
    "start": "2166160",
    "end": "2171599"
  },
  {
    "text": "will have the test name with the spend that is generated so we'll be able to look how what when you",
    "start": "2171599",
    "end": "2178079"
  },
  {
    "text": "look at the test what span is generated and you could have all of that all together",
    "start": "2178079",
    "end": "2183280"
  },
  {
    "text": "and i think i didn't show you the repository so the service name is",
    "start": "2183280",
    "end": "2191200"
  },
  {
    "text": "malabi the service there is the open source name is malabi",
    "start": "2191280",
    "end": "2196400"
  },
  {
    "text": "and you can go here and find whatever you're looking",
    "start": "2196400",
    "end": "2201920"
  },
  {
    "text": "for cool so that that was my speech about open",
    "start": "2201920",
    "end": "2209200"
  },
  {
    "text": "telemetry and testing thank you so much michael uh with that",
    "start": "2209200",
    "end": "2215119"
  },
  {
    "text": "uh i i do have a few questions but just as a if you're just tuning in or if you've been with us thank you for",
    "start": "2215119",
    "end": "2221280"
  },
  {
    "text": "viewing if you have any questions for michael if you want to talk about traces or anything like that uh please feel",
    "start": "2221280",
    "end": "2226960"
  },
  {
    "text": "free to throw that into the chat and we'll get those questions asked i think uh thank you for sharing that repository",
    "start": "2226960",
    "end": "2233520"
  },
  {
    "text": "as well uh michael i know that was one question that i saw was what was the name of the open source and that was malib and uh there is where you get it",
    "start": "2233520",
    "end": "2240720"
  },
  {
    "text": "is on github uh fantastic so if you do have any questions please feel free to throw those in chat uh otherwise i have",
    "start": "2240720",
    "end": "2247599"
  },
  {
    "text": "a few here myself so my first question is um how do we use",
    "start": "2247599",
    "end": "2252880"
  },
  {
    "text": "tracing data today and and what are some things that can be done with tracing",
    "start": "2252880",
    "end": "2258160"
  },
  {
    "text": "overall yeah i think um you know when you when",
    "start": "2258160",
    "end": "2263280"
  },
  {
    "start": "2262000",
    "end": "2377000"
  },
  {
    "text": "we're looking at uh um specifically uh things like uh open",
    "start": "2263280",
    "end": "2270240"
  },
  {
    "text": "telemetry you mostly would use it for you have a production issue",
    "start": "2270240",
    "end": "2275680"
  },
  {
    "text": "and you need to fix it and you need to fix it fast so if you would ask you know a manager um in an rd organization",
    "start": "2275680",
    "end": "2284000"
  },
  {
    "text": "how do you measure how open telemetry works you will probably say something like mttr mean time to",
    "start": "2284000",
    "end": "2290480"
  },
  {
    "text": "resolve recovery so that's how you're using it today and i think",
    "start": "2290480",
    "end": "2296160"
  },
  {
    "text": "every time that you're putting this investment to um collect data about your application",
    "start": "2296160",
    "end": "2302000"
  },
  {
    "text": "you should always look for more ways and i think the main thing that interests me",
    "start": "2302000",
    "end": "2307119"
  },
  {
    "text": "is what we can do in in pre-production um what we can do it in in test uh we",
    "start": "2307119",
    "end": "2313040"
  },
  {
    "text": "can do it what we can do with it in in our ci in a local environment",
    "start": "2313040",
    "end": "2318640"
  },
  {
    "text": "i really like that focus that you had too on testing and really showing examples of how you could get that",
    "start": "2320079",
    "end": "2325520"
  },
  {
    "text": "implemented uh i i did i do recall seeing one tweet uh if if i can find it",
    "start": "2325520",
    "end": "2330800"
  },
  {
    "text": "i'll share it a little bit later uh on on my on my handle but it kind of goes into that one uh library that was",
    "start": "2330800",
    "end": "2337680"
  },
  {
    "text": "released for go and in this case and talked about how now you can include this for you know your testing use cases",
    "start": "2337680",
    "end": "2344320"
  },
  {
    "text": "and things like that i really like that you pointed out that this is something that you can really uh factor in or",
    "start": "2344320",
    "end": "2350400"
  },
  {
    "text": "refactor in and get a sense of what's going on with your code and with your overall stack and you don't have to",
    "start": "2350400",
    "end": "2355839"
  },
  {
    "text": "necessarily push to production to get some of those insights now granted it's nice to have that instrumented in",
    "start": "2355839",
    "end": "2362240"
  },
  {
    "text": "production so you can see what's going on too of course but i think that's really fantastic um yeah",
    "start": "2362240",
    "end": "2368400"
  },
  {
    "text": "are have have you seen any specific issues um uh solved around implementing",
    "start": "2368400",
    "end": "2373920"
  },
  {
    "text": "tracing or some success stories on this front that you might be able to talk to um well with open telemetry yeah a lot",
    "start": "2373920",
    "end": "2381839"
  },
  {
    "start": "2377000",
    "end": "2477000"
  },
  {
    "text": "and and specifically with with testing i think",
    "start": "2381839",
    "end": "2387280"
  },
  {
    "text": "the people who use it are mostly using it in a ui testing",
    "start": "2387280",
    "end": "2393280"
  },
  {
    "text": "because when you're doing ui testing um being able to",
    "start": "2393280",
    "end": "2399280"
  },
  {
    "text": "understand what happened in the end of your system uh the other end of the ui system so use case that that i",
    "start": "2399280",
    "end": "2407040"
  },
  {
    "text": "know uh somebody filled the form using some uh um ui testing tool",
    "start": "2407040",
    "end": "2413280"
  },
  {
    "text": "and uh then do you the form send an api call to service then the service sent in kafka message",
    "start": "2413280",
    "end": "2421040"
  },
  {
    "text": "and other service would consume that message and send an email to the customer",
    "start": "2421040",
    "end": "2426319"
  },
  {
    "text": "they wanted to make sure that the email really gets there so they did all kind of thing they",
    "start": "2426319",
    "end": "2433599"
  },
  {
    "text": "they had those flaky solutions and then they just use tracing which they already had it was really simple",
    "start": "2433599",
    "end": "2440480"
  },
  {
    "text": "and straightforward interesting interesting",
    "start": "2440480",
    "end": "2445599"
  },
  {
    "text": "i think when it comes to have you also seen some like i know uh when it comes to kubernetes and some other things",
    "start": "2445599",
    "end": "2452640"
  },
  {
    "text": "you're able to take those metrics that data those traces and use that to you",
    "start": "2452640",
    "end": "2458000"
  },
  {
    "text": "know say uh scale your workload horizontally or vertically or or in some",
    "start": "2458000",
    "end": "2463040"
  },
  {
    "text": "fashion are there are there any um are there any use cases that you've seen",
    "start": "2463040",
    "end": "2468319"
  },
  {
    "text": "like that where people are using open telemetry to then do modifications either to their infrastructure or maybe",
    "start": "2468319",
    "end": "2474960"
  },
  {
    "text": "run their code a little bit differently too have we hit that point yet so i never saw something like that or or",
    "start": "2474960",
    "end": "2482400"
  },
  {
    "start": "2477000",
    "end": "2672000"
  },
  {
    "text": "hair but i i can definitely see that that happening i did",
    "start": "2482400",
    "end": "2488079"
  },
  {
    "text": "uh met a company who um doing gradual rollout and they use the",
    "start": "2488079",
    "end": "2495359"
  },
  {
    "text": "tracing to determine whether to proceed with the gradual uh the government phases",
    "start": "2495359",
    "end": "2502400"
  },
  {
    "text": "actually the i think the ecosystem is not quite there they had all the problems",
    "start": "2502400",
    "end": "2508960"
  },
  {
    "text": "getting it done but but i think it was a very interesting use case",
    "start": "2508960",
    "end": "2514160"
  },
  {
    "text": "it's that is interesting that's and that's cool that's cool to hear about yeah i'm excited to see more of of kind",
    "start": "2514319",
    "end": "2519599"
  },
  {
    "text": "of what evolves on that front and what we see come from the community and all these different use cases i feel like",
    "start": "2519599",
    "end": "2524880"
  },
  {
    "text": "there's there's no limit to what we can potentially see um awesome",
    "start": "2524880",
    "end": "2530720"
  },
  {
    "text": "uh one question i had was uh why is it possible or preferable to",
    "start": "2530720",
    "end": "2536319"
  },
  {
    "text": "solve these issues with tracing as opposed to other tools or architectures or methods",
    "start": "2536319",
    "end": "2543359"
  },
  {
    "text": "so i think it's the amount of work that you need to put in to solve those things so",
    "start": "2543359",
    "end": "2551760"
  },
  {
    "text": "you have an application this application you it's already telling you what it's doing",
    "start": "2551760",
    "end": "2558240"
  },
  {
    "text": "so when you grab this story of what it's telling you story using traces",
    "start": "2558240",
    "end": "2564800"
  },
  {
    "text": "um the ability to validate it's already there it's it's it's simple if you start if you need to start",
    "start": "2564800",
    "end": "2571440"
  },
  {
    "text": "developing dedicated code um to uh um to validate the test so the",
    "start": "2571440",
    "end": "2579839"
  },
  {
    "text": "example that i gave is a write dedicated code and fetch uh whatever was uploaded",
    "start": "2579839",
    "end": "2586319"
  },
  {
    "text": "to f3 so you need to fetch it and then validate it so you now have more code to maintain you",
    "start": "2586319",
    "end": "2593680"
  },
  {
    "text": "have um more uh uh the next developer we need we need to work harder to understand how it",
    "start": "2593680",
    "end": "2600480"
  },
  {
    "text": "works as opposed to traces where it's just it's already outputted by the",
    "start": "2600480",
    "end": "2605520"
  },
  {
    "text": "application so it's just making your life easier",
    "start": "2605520",
    "end": "2609760"
  },
  {
    "text": "i will say that if if you struck if you put enough work you can do everything without it it's not like it's doing",
    "start": "2610560",
    "end": "2617520"
  },
  {
    "text": "something that couldn't be done it's just already there so just use it",
    "start": "2617520",
    "end": "2623599"
  },
  {
    "text": "i like that i like that just it's already there just use it i i absolutely agree with that and i think that and and",
    "start": "2623599",
    "end": "2629520"
  },
  {
    "text": "i'd imagine it helps out team members as you know as people move into new projects or you know this",
    "start": "2629520",
    "end": "2635280"
  },
  {
    "text": "is just yet another tool you can use to kind of get that introspection into your code or your stack when you might not",
    "start": "2635280",
    "end": "2641760"
  },
  {
    "text": "have that familiarity with it like like you said you know if you are are mindful and you have that full understanding of",
    "start": "2641760",
    "end": "2647680"
  },
  {
    "text": "your stack and what those requests look like what you know what's going on and the why yeah and then you've got good",
    "start": "2647680",
    "end": "2653680"
  },
  {
    "text": "context but if you don't open tracing can really help out and hand the baton off to the next person that's working on",
    "start": "2653680",
    "end": "2659280"
  },
  {
    "text": "the project that's cool um uh what are uh one question i got was what are some",
    "start": "2659280",
    "end": "2665680"
  },
  {
    "text": "solutions that people use for storing data obtained with uh with open",
    "start": "2665680",
    "end": "2670960"
  },
  {
    "text": "telemetry and with with these types of tracing tools um",
    "start": "2670960",
    "end": "2676400"
  },
  {
    "start": "2672000",
    "end": "2772000"
  },
  {
    "text": "so you mean what database would people would use to store traces yeah either different solutions uh",
    "start": "2676400",
    "end": "2683680"
  },
  {
    "text": "basically just repositories are storing this so they could go back and look at you know historical builds or or compare",
    "start": "2683680",
    "end": "2689920"
  },
  {
    "text": "or what is what does that look like yeah so so eventually uh um well either",
    "start": "2689920",
    "end": "2695520"
  },
  {
    "text": "you use a vendor that stores the data for you uh or you are storing it",
    "start": "2695520",
    "end": "2700640"
  },
  {
    "text": "yourself and store it in some database",
    "start": "2700640",
    "end": "2705799"
  },
  {
    "text": "i know most people would use either most people will use elasticsearch for that",
    "start": "2705920",
    "end": "2711839"
  },
  {
    "text": "which is super inconvenient because you already have a grafana kibana on top of it and it allows you to",
    "start": "2711839",
    "end": "2718640"
  },
  {
    "text": "do dashboarding alerts whatever you want to do with it um so that's a great",
    "start": "2718640",
    "end": "2723680"
  },
  {
    "text": "approach that's what i chose to use i know some other people are using uh cassandra um but i think the recommended",
    "start": "2723680",
    "end": "2730480"
  },
  {
    "text": "thing is is elasticsearch gotcha gotcha that makes sense and makes",
    "start": "2730480",
    "end": "2736240"
  },
  {
    "text": "it easy to search after the fact too i'm sure yeah yeah",
    "start": "2736240",
    "end": "2741520"
  },
  {
    "text": "awesome i do have a few more questions here uh but definitely would like to encourage if anyone uh watching has some",
    "start": "2741520",
    "end": "2748640"
  },
  {
    "text": "questions uh please feel free to throw those into chat and i'll be more than happy to ask on that front",
    "start": "2748640",
    "end": "2755200"
  },
  {
    "text": "awesome uh my next question was as people start to get working with open",
    "start": "2755200",
    "end": "2761200"
  },
  {
    "text": "telemetry and with tracing uh what are some common pitfalls that you you'll see or some just you know either you know",
    "start": "2761200",
    "end": "2768160"
  },
  {
    "text": "whether that be like frequently asked questions or or common misconceptions that come up when people start to to",
    "start": "2768160",
    "end": "2774079"
  },
  {
    "start": "2772000",
    "end": "2947000"
  },
  {
    "text": "work with tracing um so i think there are three things",
    "start": "2774079",
    "end": "2780319"
  },
  {
    "text": "um the first one the first kind of why do i need it",
    "start": "2780319",
    "end": "2785359"
  },
  {
    "text": "question would be how is that different from logs um you can in some sense",
    "start": "2785359",
    "end": "2791599"
  },
  {
    "text": "get almost the same thing done using using logs um",
    "start": "2791599",
    "end": "2796720"
  },
  {
    "text": "but uh um so that that would be number one number two would be um how it's going to affect",
    "start": "2796720",
    "end": "2803280"
  },
  {
    "text": "my uh performance and number three would be um i implemented open telemetry but i don't",
    "start": "2803280",
    "end": "2810079"
  },
  {
    "text": "see all of my data the way i wanted to",
    "start": "2810079",
    "end": "2815359"
  },
  {
    "text": "to uh to look like so um looking at logs versus graces there is a",
    "start": "2815359",
    "end": "2822400"
  },
  {
    "text": "lot of uh stuff to read around that um but",
    "start": "2822400",
    "end": "2828000"
  },
  {
    "text": "i would say that logs are great to to tell you what the process is doing what",
    "start": "2828000",
    "end": "2833920"
  },
  {
    "text": "is the story the single process is going to to tell you about open telemetry is",
    "start": "2833920",
    "end": "2838960"
  },
  {
    "text": "about the context about the path that is happening between services it's going",
    "start": "2838960",
    "end": "2845119"
  },
  {
    "text": "to tell the story throughout services not within the service um",
    "start": "2845119",
    "end": "2850240"
  },
  {
    "text": "about performance yes it's going to affect your performance like any other",
    "start": "2850240",
    "end": "2856960"
  },
  {
    "text": "library that is going to instrument your uh um your uh your service so if you",
    "start": "2856960",
    "end": "2864079"
  },
  {
    "text": "put some apm it's affecting your your performance but i think the performance impact is definitely",
    "start": "2864079",
    "end": "2870559"
  },
  {
    "text": "uh worth it and you can control it by uh controlling the uh sampling rate so you",
    "start": "2870559",
    "end": "2876160"
  },
  {
    "text": "don't have to collect 100 of uh what's happening you can uh take a portion out",
    "start": "2876160",
    "end": "2881839"
  },
  {
    "text": "of it and um how the data looks at the end of the day",
    "start": "2881839",
    "end": "2887520"
  },
  {
    "text": "so uh um first of all open telemetry is uh quite",
    "start": "2887520",
    "end": "2893839"
  },
  {
    "text": "a new project uh it's not a very mature project so it has bugs issues",
    "start": "2893839",
    "end": "2900480"
  },
  {
    "text": "that you may need to put some work in order to fix it and in some specific cases",
    "start": "2900480",
    "end": "2907920"
  },
  {
    "text": "you need to set expectation what you're looking for to get from from open telemetry",
    "start": "2908079",
    "end": "2914720"
  },
  {
    "text": "awesome awesome no and i'm kind of excited to see what comes out of that too because i know uh you know looking",
    "start": "2914720",
    "end": "2921040"
  },
  {
    "text": "at open tracing and open census and kind of like how all i was really excited to see um these communities come together",
    "start": "2921040",
    "end": "2928000"
  },
  {
    "text": "and kind of converge on what's important what are things we can measure and how do we you know how do we help elevate",
    "start": "2928000",
    "end": "2933440"
  },
  {
    "text": "others uh within the same space so uh yeah uh kind of kind of in that vein um are",
    "start": "2933440",
    "end": "2939200"
  },
  {
    "text": "there what do you think are some of the good like next problems uh that the tracing",
    "start": "2939200",
    "end": "2944400"
  },
  {
    "text": "community should focus on that might help out the community as a whole",
    "start": "2944400",
    "end": "2949440"
  },
  {
    "start": "2947000",
    "end": "3037000"
  },
  {
    "text": "um so first of all everything uh should be uh um",
    "start": "2949440",
    "end": "2957838"
  },
  {
    "text": "like uh released as a stable so right now for instance uh tracing is stable um",
    "start": "2958319",
    "end": "2965680"
  },
  {
    "text": "metrics is in beta and i think uh logs in using alpha so open telemetry isn't",
    "start": "2965680",
    "end": "2972240"
  },
  {
    "text": "released fully yet so i think that's what we need to get organized first",
    "start": "2972240",
    "end": "2979599"
  },
  {
    "text": "then i would say that we need to make sure that the data we are collecting is",
    "start": "2981280",
    "end": "2986880"
  },
  {
    "text": "as you know as quality as as as we can get because if the data you're collecting",
    "start": "2986880",
    "end": "2992400"
  },
  {
    "text": "isn't quality enough uh the value that the open family offers is is capped by",
    "start": "2992400",
    "end": "2998000"
  },
  {
    "text": "that gotcha gotcha that that makes sense to",
    "start": "2998000",
    "end": "3003760"
  },
  {
    "text": "me and then um it's it's in it it can be a hard space to",
    "start": "3003760",
    "end": "3009599"
  },
  {
    "text": "solve these problems in as well um so i i can imagine too because again you know",
    "start": "3009599",
    "end": "3015119"
  },
  {
    "text": "context is always key when trying to troubleshoot or find out some of these things too so it's uh",
    "start": "3015119",
    "end": "3021440"
  },
  {
    "text": "it's it's interesting and and exciting with with that um what are what are some",
    "start": "3021440",
    "end": "3026559"
  },
  {
    "text": "good uh ways to get started uh you know as say if people want to contribute or",
    "start": "3026559",
    "end": "3031680"
  },
  {
    "text": "kind of get active within the community where some places they can meet up meetings uh repositories where some",
    "start": "3031680",
    "end": "3037280"
  },
  {
    "text": "places people can get more information on this so um",
    "start": "3037280",
    "end": "3042319"
  },
  {
    "text": "very funnily uh my next session in 10 minutes or so is uh",
    "start": "3042319",
    "end": "3050079"
  },
  {
    "text": "about getting started with open telemetry uh so we're doing like an open telemetry boot camp um i think that uh",
    "start": "3050079",
    "end": "3056480"
  },
  {
    "text": "um if you're starting um start by reading the docs um and just get",
    "start": "3056480",
    "end": "3064079"
  },
  {
    "text": "yeah get get get familiar with the dogs the terms follow like a getting started thing and",
    "start": "3064079",
    "end": "3072559"
  },
  {
    "text": "look for a good guide in youtube on getting started i",
    "start": "3072559",
    "end": "3077839"
  },
  {
    "text": "think that would give you everything you need awesome",
    "start": "3077839",
    "end": "3083359"
  },
  {
    "text": "awesome well uh thank you so much michael this was just incredibly fascinating it was",
    "start": "3083359",
    "end": "3088559"
  },
  {
    "text": "great to see you walk through the code thank you for taking the time to kind of show all of us and talk more about open telemetry",
    "start": "3088559",
    "end": "3095920"
  },
  {
    "text": "and tracing and really how to get started when it comes to your your stack uh really really appreciate it",
    "start": "3095920",
    "end": "3102640"
  },
  {
    "text": "thank you thank you very much thank you for having me awesome well thank you so much everyone for",
    "start": "3102640",
    "end": "3108640"
  },
  {
    "text": "joining the latest episode of cloud native live it was great to hear michael about uh from michael about trace-based",
    "start": "3108640",
    "end": "3115680"
  },
  {
    "text": "testing with open telemetry um thank you all for jumping in and attending we really liked the interaction and",
    "start": "3115680",
    "end": "3121920"
  },
  {
    "text": "questions from the audience and again we will bring we bring you the latest cloud native code and presentations every",
    "start": "3121920",
    "end": "3129520"
  },
  {
    "text": "wednesday at 11 a.m eastern time next week we will have scott fulton",
    "start": "3129520",
    "end": "3135280"
  },
  {
    "text": "presenting next generation observability with open source monitoring thank you so",
    "start": "3135280",
    "end": "3140880"
  },
  {
    "text": "much for joining us today we'll see you next week happy governor everybody",
    "start": "3140880",
    "end": "3146000"
  },
  {
    "text": "bye-bye thank you",
    "start": "3146000",
    "end": "3149559"
  }
]