[
  {
    "text": "hello everybody uh today we're going to be talking to you about uh service proxies service meshes and API gateways",
    "start": "240",
    "end": "7319"
  },
  {
    "text": "uh to the cloud native novice they all seem to do similar things but as always the devil is in the details if only your",
    "start": "7319",
    "end": "14040"
  },
  {
    "text": "to if if you're only tool as a hammer then every problem looks like an now and hopefully by the end of this session",
    "start": "14040",
    "end": "19920"
  },
  {
    "text": "you're going to come away with a better understanding of the different tools available to you the ecosystems around",
    "start": "19920",
    "end": "25400"
  },
  {
    "text": "them and what kind of problems they're optimized for solving will we bring giving you a higher level introduction into the rise",
    "start": "25400",
    "end": "31880"
  },
  {
    "text": "of microservices and the challenges that they bring then we're going to take you on a journey through the fundamental",
    "start": "31880",
    "end": "37960"
  },
  {
    "text": "concepts and approaches to service proxies service meshes and API gateways so um this uh this discussion is going",
    "start": "37960",
    "end": "45680"
  },
  {
    "text": "to get um quite deep but try and follow along and um obviously you can catch up",
    "start": "45680",
    "end": "50920"
  },
  {
    "text": "um with the recording afterwards my name is Amit suali I'm",
    "start": "50920",
    "end": "56480"
  },
  {
    "text": "from TY an open source API Gateway and management platform I've been here for six years now um I started out as a",
    "start": "56480",
    "end": "63440"
  },
  {
    "text": "Consulting engineer um for our prospects and customers and then uh worked in",
    "start": "63440",
    "end": "68600"
  },
  {
    "text": "product leadership and now um in R&D where my team and I uh dig into the various Technologies understand what",
    "start": "68600",
    "end": "75320"
  },
  {
    "text": "they mean for our users and the opportunities it provides for our customers and then um I pest to the",
    "start": "75320",
    "end": "80960"
  },
  {
    "text": "product teams to help shape their strategic road maps hello so I'm from the products team",
    "start": "80960",
    "end": "87560"
  },
  {
    "text": "my name is Carol I work as a product manager at Ty what I do is take arms",
    "start": "87560",
    "end": "93680"
  },
  {
    "text": "rambling user requirements and then feedbacks into our product Ro map to",
    "start": "93680",
    "end": "99159"
  },
  {
    "text": "deliver values to our API platform owners and API developer users work in",
    "start": "99159",
    "end": "104600"
  },
  {
    "text": "the platform and Ops area and I'm responsible for tax kubernetes operators",
    "start": "104600",
    "end": "110520"
  },
  {
    "text": "and H charts so let me Begin by going back in",
    "start": "110520",
    "end": "116840"
  },
  {
    "text": "time to understand why we need these Technologies in the past most of us had only a hand",
    "start": "116840",
    "end": "123000"
  },
  {
    "text": "food of applications and then with the evidence of microservice architecture the number of service started to",
    "start": "123000",
    "end": "129959"
  },
  {
    "text": "grow the Microsoft's architecture brings a lot of flexibility and efficiency to",
    "start": "129959",
    "end": "135200"
  },
  {
    "text": "the way Dev and Ops Works however it also service some of the difficulties",
    "start": "135200",
    "end": "140680"
  },
  {
    "text": "when we need to deal with increasingly complex network",
    "start": "140680",
    "end": "146319"
  },
  {
    "text": "communications the increase in the number of service Brands and increased number of service to service",
    "start": "146319",
    "end": "152360"
  },
  {
    "text": "Communications however network communications is always unreliable Tex",
    "start": "152360",
    "end": "157480"
  },
  {
    "text": "time and they're vulnerable to attack these days it is pretty normal to have",
    "start": "157480",
    "end": "162680"
  },
  {
    "text": "tens hundreds or thousands of apps we have replicas of these apps running on",
    "start": "162680",
    "end": "167760"
  },
  {
    "text": "different noes in one or more clusters those clusters can spread all over the",
    "start": "167760",
    "end": "173599"
  },
  {
    "text": "world covering multiple regions so basically what were previously pretty",
    "start": "173599",
    "end": "178680"
  },
  {
    "text": "simple internal application interactions is becoming a complex web of remote",
    "start": "178680",
    "end": "184200"
  },
  {
    "text": "procedural Calles that are transmitted over the network kubernetes solves a lot of",
    "start": "184200",
    "end": "190080"
  },
  {
    "text": "networking challenges for us for instance kubernetes service allows us to",
    "start": "190080",
    "end": "195239"
  },
  {
    "text": "reach the correct application wherever it may be using a static service name",
    "start": "195239",
    "end": "200920"
  },
  {
    "text": "Ingress allows us to Route external calls to the right applications based on the request header",
    "start": "200920",
    "end": "208159"
  },
  {
    "text": "or path but we need more we want to load balance",
    "start": "208159",
    "end": "213280"
  },
  {
    "text": "request across all the replicas of an application we want to do mutal TLS we",
    "start": "213280",
    "end": "219080"
  },
  {
    "text": "want to have distributed tracing we want to have rate limits the request and guard against web app security",
    "start": "219080",
    "end": "226680"
  },
  {
    "text": "vulnerabilities and over time service proxy API Gateway and service match were",
    "start": "226680",
    "end": "231879"
  },
  {
    "text": "developed to solve these cross cutting concerns and they all solved it without",
    "start": "231879",
    "end": "237079"
  },
  {
    "text": "requiring applications to be Rewritten let me start by talking about service",
    "start": "237079",
    "end": "243319"
  },
  {
    "text": "proxy so service proxy is a networking component that can intercept traffics to",
    "start": "243319",
    "end": "249879"
  },
  {
    "text": "and from an application it evaluates a client's request and apply changes to it",
    "start": "249879",
    "end": "256880"
  },
  {
    "text": "these changes are configured and executed within the surface proxy there's no need to modify the",
    "start": "256880",
    "end": "262840"
  },
  {
    "text": "application itself rather than connecting to the micros service application directly clients now have to",
    "start": "262840",
    "end": "269080"
  },
  {
    "text": "connect to to the proxy we commonly refer to the actual transmission and",
    "start": "269080",
    "end": "274479"
  },
  {
    "text": "processing of data packet within the network as the data plan so service proess the data plan",
    "start": "274479",
    "end": "281600"
  },
  {
    "text": "component service proes are general purpose meaning you can apply different kinds of checks or tra modify the",
    "start": "281600",
    "end": "288840"
  },
  {
    "text": "traffics however you like say terminating TRS executing authentication",
    "start": "288840",
    "end": "294360"
  },
  {
    "text": "and authorization checks rate limiting or dynamic routing based on system",
    "start": "294360",
    "end": "300840"
  },
  {
    "text": "metrix so on for is a cncf graduated service proxy they illustrate the number",
    "start": "300840",
    "end": "308240"
  },
  {
    "text": "of ways it can be deployed in this diagram the proxy is placed at the edge as an Ingress or egress reverse proxy",
    "start": "308240",
    "end": "316680"
  },
  {
    "text": "basically Ingress reverse proxy will pick up external calls send them to the Credit Service based on request header",
    "start": "316680",
    "end": "323280"
  },
  {
    "text": "and URL it can also make sure the client is authenticated it can enfor for assets",
    "start": "323280",
    "end": "330319"
  },
  {
    "text": "control policies by coming off patents like odol it can rate limit rate limit",
    "start": "330319",
    "end": "337319"
  },
  {
    "text": "the request here to avoid overloading the backend surfice the service proxy can also be",
    "start": "337319",
    "end": "344880"
  },
  {
    "text": "used as an internal load balancer so all service to service connections are",
    "start": "344880",
    "end": "350319"
  },
  {
    "text": "routed through this internal load balancer allowing us to manage routing rules authentication authorization",
    "start": "350319",
    "end": "358240"
  },
  {
    "text": "monitoring from a single location onvo can also be used as a sar",
    "start": "358240",
    "end": "365319"
  },
  {
    "text": "proxy so SAR in cuetes World refer to the additional containers in the same",
    "start": "365319",
    "end": "371960"
  },
  {
    "text": "port that extend and enhance the main container here all the request and",
    "start": "371960",
    "end": "378840"
  },
  {
    "text": "responds to and from the service are routed by the proxy the proxies form a mesh networks",
    "start": "378840",
    "end": "387000"
  },
  {
    "text": "here when service a wish to communicate with service C it will first go through",
    "start": "387000",
    "end": "392520"
  },
  {
    "text": "service a proxy to service C proxy and then reach service C you may ask what is",
    "start": "392520",
    "end": "400680"
  },
  {
    "text": "the benefit of having a sar proxy some of the reasons could be different",
    "start": "400680",
    "end": "406880"
  },
  {
    "text": "service require different proxy set up so it is impossible or impractical to",
    "start": "406880",
    "end": "412759"
  },
  {
    "text": "share a common one between them also this design can reduce the blast radius",
    "start": "412759",
    "end": "418800"
  },
  {
    "text": "if one of the the proxy goes down if we're sharing a common proxy between all the service then when the proxy go down",
    "start": "418800",
    "end": "425919"
  },
  {
    "text": "all service behind that proxy will be impact however if the proxies are now",
    "start": "425919",
    "end": "433039"
  },
  {
    "text": "distributed how could we con figure all of them effectively surface mesh has an",
    "start": "433039",
    "end": "439080"
  },
  {
    "text": "answer to that so surface mesh is a dedicated",
    "start": "439080",
    "end": "444520"
  },
  {
    "text": "infrastructure layer for managing service to service communication Within a microservice",
    "start": "444520",
    "end": "451520"
  },
  {
    "text": "architecture the service proxy is usually deployed as a side car proxy",
    "start": "451520",
    "end": "456680"
  },
  {
    "text": "next to the application to route and process all traffic to and from that",
    "start": "456680",
    "end": "462360"
  },
  {
    "text": "application so here who configures the Cy proxy rout a certain request to",
    "start": "462360",
    "end": "467720"
  },
  {
    "text": "service B how a load balancing circuit breaking and time out set how to set the",
    "start": "467720",
    "end": "474520"
  },
  {
    "text": "blue green or Canary deployments and also systemwide Authentication or",
    "start": "474520",
    "end": "480280"
  },
  {
    "text": "authorizations The Sur smash control plane handles all of the",
    "start": "480280",
    "end": "485639"
  },
  {
    "text": "above the control plane takes a set of these isolated stateless CYO proxies",
    "start": "485639",
    "end": "492639"
  },
  {
    "text": "into a distributed system is and linky are two cncf",
    "start": "492639",
    "end": "500159"
  },
  {
    "text": "graduated service mesh implementations they both have similar architecture as just described surface",
    "start": "500159",
    "end": "508000"
  },
  {
    "text": "proxies are inject to the application the C car automatically for all service in the network Isel used on for proxy as",
    "start": "508000",
    "end": "518560"
  },
  {
    "text": "the data plan proxy while link developed the link2 proxy and rust and also",
    "start": "518560",
    "end": "525240"
  },
  {
    "text": "different products would have different philosophies and offer different set of control PL",
    "start": "525240",
    "end": "533279"
  },
  {
    "text": "features the main features of the surface mesh would include first Dynamic service Discovery",
    "start": "534399",
    "end": "542079"
  },
  {
    "text": "in a dynamically dynamically changing container environment it needs to",
    "start": "542079",
    "end": "547320"
  },
  {
    "text": "register and deregister service end points AS application instance goes up",
    "start": "547320",
    "end": "552399"
  },
  {
    "text": "and down secondly security MTS is a very",
    "start": "552399",
    "end": "558920"
  },
  {
    "text": "powerful feature of service mesh a service mesh provides MTS by enting and",
    "start": "558920",
    "end": "564560"
  },
  {
    "text": "authenticating communication between this microservice using digital certificate",
    "start": "564560",
    "end": "570160"
  },
  {
    "text": "each microservice has unique certificate to ensure secured and authenticated",
    "start": "570160",
    "end": "577399"
  },
  {
    "text": "interactions also the Sur smash also provides traffic management like routing",
    "start": "578519",
    "end": "583839"
  },
  {
    "text": "sing load balancing and Progressive delivery these L4 to L7 networking",
    "start": "583839",
    "end": "591120"
  },
  {
    "text": "operations reply implemented in the application developers networking code",
    "start": "591120",
    "end": "597120"
  },
  {
    "text": "is so hard to write and maintain now of Smash has allows these concerns",
    "start": "597120",
    "end": "602800"
  },
  {
    "text": "to be completely separate from the business",
    "start": "602800",
    "end": "607480"
  },
  {
    "text": "logic sub smash also allows us to have visibility of all the traffic in the",
    "start": "608040",
    "end": "613680"
  },
  {
    "text": "network here is an example of the kiali dashboard showing how traffic flow",
    "start": "613680",
    "end": "619519"
  },
  {
    "text": "through is in real time without the need to code or configure your",
    "start": "619519",
    "end": "624640"
  },
  {
    "text": "application from this dashboard you can track number of request second that the",
    "start": "624640",
    "end": "629880"
  },
  {
    "text": "service has processed as well as success and failure weight this is Handy if you",
    "start": "629880",
    "end": "635680"
  },
  {
    "text": "need to make sure your application do m is SLO or",
    "start": "635680",
    "end": "640760"
  },
  {
    "text": "SLA now let's talk about the benefits of surface mesh surface mesh automates defs",
    "start": "640959",
    "end": "648320"
  },
  {
    "text": "Ops best practice for observability security and",
    "start": "648320",
    "end": "654279"
  },
  {
    "text": "reliability service mesh provides Central observability Over All network",
    "start": "654279",
    "end": "659440"
  },
  {
    "text": "service reducing troubleshooting time this may be the first reason users use",
    "start": "659440",
    "end": "665800"
  },
  {
    "text": "service MH surfice Mash automate log aggregation and Telemetry collection for",
    "start": "665800",
    "end": "670880"
  },
  {
    "text": "devops and Sr teams to monitor the service performance these aggregated",
    "start": "670880",
    "end": "676240"
  },
  {
    "text": "data help us to discover issues and Trends",
    "start": "676240",
    "end": "682480"
  },
  {
    "text": "Security Service mash automates mtls for All servico Surface Communications and",
    "start": "682480",
    "end": "687800"
  },
  {
    "text": "certificate rotation to prevent men in midal attacks and Achieve zero trust",
    "start": "687800",
    "end": "693120"
  },
  {
    "text": "security fine grained traffic governance is possible with different service level",
    "start": "693120",
    "end": "698720"
  },
  {
    "text": "authentication methods this lets you create role based assess control for each service and restrict their",
    "start": "698720",
    "end": "707440"
  },
  {
    "text": "communication and also resilience service mes automatically handle load",
    "start": "707600",
    "end": "713360"
  },
  {
    "text": "balancing retries timeouts and circuit breaking making the application more",
    "start": "713360",
    "end": "719079"
  },
  {
    "text": "resilient to service failures it will improve the overall user",
    "start": "719079",
    "end": "725720"
  },
  {
    "text": "experience there's something you should consider before implementing a service Mash though especially from the",
    "start": "727560",
    "end": "733880"
  },
  {
    "text": "operational perspective um before CES",
    "start": "733880",
    "end": "739199"
  },
  {
    "text": "1.28 when a port starts up the application container cannot guarantee",
    "start": "739199",
    "end": "744480"
  },
  {
    "text": "that the side car is ready it becomes problematic if you need that cyle to say",
    "start": "744480",
    "end": "750120"
  },
  {
    "text": "make network connections to the outside world in commes 1.28 it introduced a",
    "start": "750120",
    "end": "756519"
  },
  {
    "text": "cyle containers as the first class citizen in kuti to natively solve this",
    "start": "756519",
    "end": "762600"
  },
  {
    "text": "container race conditions and other problems cyle container support is now in",
    "start": "762600",
    "end": "769720"
  },
  {
    "text": "ALA second if even if the data plan process is really thin using the cycle",
    "start": "770399",
    "end": "777440"
  },
  {
    "text": "deployment model still means adding an extra hope to your request and needing more resources to run linky creates",
    "start": "777440",
    "end": "784920"
  },
  {
    "text": "their own lightwe proxy inv rest to reduce this performance impact thirdly how much memory or CPU",
    "start": "784920",
    "end": "793639"
  },
  {
    "text": "should you allocate to the side CS in practice platform owners May over",
    "start": "793639",
    "end": "798880"
  },
  {
    "text": "proficient since these calculations are difficult this can affect resources and",
    "start": "798880",
    "end": "805800"
  },
  {
    "text": "costs these issues are addressed differently by different providers you",
    "start": "805800",
    "end": "811000"
  },
  {
    "text": "could run a POC or talk to the maintainers here to learn more I would like to talk about one more new new",
    "start": "811000",
    "end": "819360"
  },
  {
    "text": "approach from is to here too um so solo and Google came up with a",
    "start": "819360",
    "end": "827440"
  },
  {
    "text": "new architecture re EO called the EO ambient mesh to address these issues",
    "start": "827440",
    "end": "834199"
  },
  {
    "text": "here there's no more pycho proxies in this new architecture it does this by",
    "start": "834199",
    "end": "839560"
  },
  {
    "text": "separating the data plan proy into two layers a secure overlay layer called Z",
    "start": "839560",
    "end": "846720"
  },
  {
    "text": "tunnel takes care of The L4 networking task shed as establishing mtls and TCB",
    "start": "846720",
    "end": "853480"
  },
  {
    "text": "Telemetry the Z tunnel is deployed as a demon set on every node a second layer",
    "start": "853480",
    "end": "859880"
  },
  {
    "text": "known as the Waypoint proxy is then deployed to handle more advanced L7 processing like routing request load",
    "start": "859880",
    "end": "867839"
  },
  {
    "text": "balancing for injection which tries time out the r Point proy can be configured",
    "start": "867839",
    "end": "873759"
  },
  {
    "text": "PR name space or precip account it can be scaled and deployed independently",
    "start": "873759",
    "end": "879399"
  },
  {
    "text": "with the application the Waypoint Pro is like a special Gateway cluster for an",
    "start": "879399",
    "end": "885920"
  },
  {
    "text": "application you can choose to use just the sea tunnel for core functions like sewer trust security or you can also",
    "start": "885920",
    "end": "893320"
  },
  {
    "text": "adapt the L7 processing the claim benefits of this proo is is a simpler",
    "start": "893320",
    "end": "899959"
  },
  {
    "text": "application life cycle because we don't have the cyar container running and also L7 processing can be",
    "start": "899959",
    "end": "907920"
  },
  {
    "text": "skipped when it is unnecessary SE tunnel alone need less CPU and memory to",
    "start": "907920",
    "end": "914480"
  },
  {
    "text": "run rayon Proxes are like regular PS that can be automatically scaled",
    "start": "914480",
    "end": "920720"
  },
  {
    "text": "depending based on the demand with the application so it also helps with saving",
    "start": "920720",
    "end": "926440"
  },
  {
    "text": "resources and using them more more efficiently so here is an example of how",
    "start": "926440",
    "end": "933199"
  },
  {
    "text": "the data flows when there is no L7 proxies",
    "start": "933199",
    "end": "938440"
  },
  {
    "text": "required service Communications go through sea tunnel on each host",
    "start": "938440",
    "end": "945079"
  },
  {
    "text": "machine when L7 Pro is needed e control pen configures the C tunnel in the",
    "start": "946319",
    "end": "952319"
  },
  {
    "text": "Custer to pass all the traffic also to the Waypoint proxy to ensure the",
    "start": "952319",
    "end": "957959"
  },
  {
    "text": "policies always enforced but wait look at this arm don't",
    "start": "957959",
    "end": "963000"
  },
  {
    "text": "you think the use of Waypoint proxy looks very familiar to how a lot of our customers is using API",
    "start": "963000",
    "end": "970680"
  },
  {
    "text": "Gateway hey Carol that way point proxy it does actually look quite similar um",
    "start": "970680",
    "end": "976120"
  },
  {
    "text": "an API Gateway is a tool that Aggregates application apis making them available",
    "start": "976120",
    "end": "982560"
  },
  {
    "text": "all in one place it allows organizations to move key functions or cross cutting",
    "start": "982560",
    "end": "987839"
  },
  {
    "text": "concerns such as authentication and authorization or limiting the number of requests between applications to a",
    "start": "987839",
    "end": "994959"
  },
  {
    "text": "centrally managed data plane an API Gateway functions as a common interface",
    "start": "994959",
    "end": "1000199"
  },
  {
    "text": "for often external API consumers um so in this section I'm going to be talking about the typical",
    "start": "1000199",
    "end": "1006480"
  },
  {
    "text": "key capabilities for API gateways and how um but I'll be focusing on the differentiators from uh say service mes",
    "start": "1006480",
    "end": "1013360"
  },
  {
    "text": "traffic we're then going to cover some typical deployment top topologies and then introduce the concept of API",
    "start": "1013360",
    "end": "1019480"
  },
  {
    "text": "management as not only a control plane for API gateways but perhaps more importantly as a business",
    "start": "1019480",
    "end": "1025839"
  },
  {
    "text": "enabler so um in terms of a Force Security the edge of a system is where",
    "start": "1025839",
    "end": "1031959"
  },
  {
    "text": "your users first interact with your applications um it's also typically the",
    "start": "1031959",
    "end": "1037199"
  },
  {
    "text": "point where hackers first encounter your systems and most Enterprises are going to have multiple layers of security at",
    "start": "1037199",
    "end": "1043640"
  },
  {
    "text": "the edge of their stack such as a CDN a Waf or a dedicated DMZ but for many",
    "start": "1043640",
    "end": "1048840"
  },
  {
    "text": "smaller organizations the API Gateway may be the first and perhaps the only",
    "start": "1048840",
    "end": "1054400"
  },
  {
    "text": "line of defense and this is why many API gateways include these lower level capabilities all the way down to layer",
    "start": "1054400",
    "end": "1060880"
  },
  {
    "text": "four so at this low level they include TLS termination IP allow or deny lists",
    "start": "1060880",
    "end": "1066400"
  },
  {
    "text": "TP TCP routing and even basic W capabilities that have been built in or Integrations um you could um of course",
    "start": "1066400",
    "end": "1073919"
  },
  {
    "text": "use a service proxy for this use case too but L7 is really where the API",
    "start": "1073919",
    "end": "1079799"
  },
  {
    "text": "Gateway shines at L7 a distinguishing security feature of the Gateway is the",
    "start": "1079799",
    "end": "1084880"
  },
  {
    "text": "ability to interoperate with external um authentication and authorization servers",
    "start": "1084880",
    "end": "1090000"
  },
  {
    "text": "using say standards based patterns like O2 and open ID connect so what does that",
    "start": "1090000",
    "end": "1096240"
  },
  {
    "text": "actually mean though the API Gateway can read an authorization header um introspect tokens validate jwt's um",
    "start": "1096240",
    "end": "1104320"
  },
  {
    "text": "extract claims such as Scopes and map those to um valid validate against um",
    "start": "1104320",
    "end": "1109520"
  },
  {
    "text": "internal security policies and then route the traffic whilst propagating identity to the appropriate",
    "start": "1109520",
    "end": "1115360"
  },
  {
    "text": "upstreams each API staff has their own security requirements and not all gateways will have native support for",
    "start": "1115360",
    "end": "1122200"
  },
  {
    "text": "your required API staff for rest this might include the ability to protect an API rout by Method",
    "start": "1122200",
    "end": "1129440"
  },
  {
    "text": "or path and um more advanced gateways will be able to validate requests and responses by an open API contract or",
    "start": "1129440",
    "end": "1137320"
  },
  {
    "text": "schema for graphql there'll be the ability to enable or disable different",
    "start": "1137320",
    "end": "1142840"
  },
  {
    "text": "queries mutations or subscriptions and even apply query depth limiting or granular field based",
    "start": "1142840",
    "end": "1149360"
  },
  {
    "text": "permissions and for grpc Based Services an API Gateway would need to be able to handle requests um authorization for for",
    "start": "1149360",
    "end": "1157919"
  },
  {
    "text": "services and service methods and then finally for say asynchronous apis one might need to",
    "start": "1157919",
    "end": "1164640"
  },
  {
    "text": "apply rate limits based upon the number of events or the amount of data and enable authorization for what topics can",
    "start": "1164640",
    "end": "1171200"
  },
  {
    "text": "be subscribed to a common requirement for API gateways",
    "start": "1171200",
    "end": "1178200"
  },
  {
    "text": "is the need to be able to optimize endpoints so um in terms of request and",
    "start": "1178200",
    "end": "1183400"
  },
  {
    "text": "response composition most transactions will involve calls to multiple microservices and sometimes they need to",
    "start": "1183400",
    "end": "1190320"
  },
  {
    "text": "happen in a predetermined sequence um or or concurrently API gateways can",
    "start": "1190320",
    "end": "1197320"
  },
  {
    "text": "simplify change or batch calls to expose a single endpoint and return a single aggregated response to that API client",
    "start": "1197320",
    "end": "1205080"
  },
  {
    "text": "so this results in improved performance um such as reduced latency and it makes it really simple for the um end",
    "start": "1205080",
    "end": "1212000"
  },
  {
    "text": "consumers or developers to consume your services um in terms of API",
    "start": "1212000",
    "end": "1217120"
  },
  {
    "text": "transformation the API Gateway can provide a public interface for a client which is completely different from the",
    "start": "1217120",
    "end": "1222840"
  },
  {
    "text": "disperate set of polyglot API upstreams this is known as protocol transformation or media ation it allows you to keep a",
    "start": "1222840",
    "end": "1229960"
  },
  {
    "text": "consistent public facing API but swap out the implementation of the underlying microservices with no ill effect for",
    "start": "1229960",
    "end": "1236720"
  },
  {
    "text": "your end consumers perhaps some of your apis are Legacy services that you don't have the desire or the resources to",
    "start": "1236720",
    "end": "1243400"
  },
  {
    "text": "modify in order to make them fit your current business requirements microservice applications",
    "start": "1243400",
    "end": "1250039"
  },
  {
    "text": "can expose all kinds of different formats over time and this may or may not be intentional if your API consumers",
    "start": "1250039",
    "end": "1256799"
  },
  {
    "text": "want to consume graph Q well but your underlying microservices use other formats such as Json protobuf Apache",
    "start": "1256799",
    "end": "1263360"
  },
  {
    "text": "Arro or mqp then the API Gateway is the tool to perform that protocol transformation for you all with no",
    "start": "1263360",
    "end": "1270279"
  },
  {
    "text": "code um then there's the use case for migrating from the monolith to microservices so when you're breaking up",
    "start": "1270279",
    "end": "1276360"
  },
  {
    "text": "the monolith you need to ensure continued access to clients through the API Gateway whilst you progressively",
    "start": "1276360",
    "end": "1282480"
  },
  {
    "text": "split out that monolith over time I'm now going to talk about some of",
    "start": "1282480",
    "end": "1288440"
  },
  {
    "text": "the typical API Gateway architectures or deployment topologies and because we're at cucon I'll be preparing uh presenting",
    "start": "1288440",
    "end": "1295799"
  },
  {
    "text": "these examples in a kubernetes context but before I do I just need to caveat that API gateways are not just for",
    "start": "1295799",
    "end": "1302760"
  },
  {
    "text": "kubernetes different vendors have different offerings and typically gateways can be made available as",
    "start": "1302760",
    "end": "1307840"
  },
  {
    "text": "Hardware Appliances um deployed to Virtual machines and even available as a pure SAS um if you're not um if you're",
    "start": "1307840",
    "end": "1314919"
  },
  {
    "text": "not looking to manage infrastructure um in the sh third Gateway model a single centralized",
    "start": "1314919",
    "end": "1320240"
  },
  {
    "text": "Gateway or cluster of gateways is deployed to a common name space such as Ingress and the gateways may be deployed",
    "start": "1320240",
    "end": "1326320"
  },
  {
    "text": "as a demon set one per node or as a deployment which can scale as required the API Gateway is then used to serve",
    "start": "1326320",
    "end": "1333320"
  },
  {
    "text": "many services potentially across many Nam spaces and it's up to the teams um",
    "start": "1333320",
    "end": "1338600"
  },
  {
    "text": "how to group their Nam spaces but we often find that a group by application domain or team this is the most common",
    "start": "1338600",
    "end": "1345360"
  },
  {
    "text": "deployment topology when the API Gateway is being used used for API productization or composition and it",
    "start": "1345360",
    "end": "1351360"
  },
  {
    "text": "provides a single point of entry that hides the implementation of the underlying microservices and it enables",
    "start": "1351360",
    "end": "1356880"
  },
  {
    "text": "you to create rate limits and quotas and even expose tailored API products for",
    "start": "1356880",
    "end": "1362000"
  },
  {
    "text": "different audiences um it even allows you to apply say the back end for front end pattern",
    "start": "1362000",
    "end": "1368039"
  },
  {
    "text": "BFF um by exposing different subsets of individual microservices to better",
    "start": "1368039",
    "end": "1373360"
  },
  {
    "text": "support different API consumers such as web browsers iot or mobile",
    "start": "1373360",
    "end": "1379960"
  },
  {
    "text": "devices now the Gateway per service this looks very it's quite similar to the ambient mesh Waypoint proxy that Carol",
    "start": "1380240",
    "end": "1386320"
  },
  {
    "text": "mentioned earlier one of the challenges with the shared Gateway approach is that the Ingress Gateway is often difficult",
    "start": "1386320",
    "end": "1392120"
  },
  {
    "text": "to tune for specific workloads and um inbound traffic to one service might overwhelm the Gateway and",
    "start": "1392120",
    "end": "1398600"
  },
  {
    "text": "negatively impact consumers of another service um another challenge is that different workloads might require",
    "start": "1398600",
    "end": "1405240"
  },
  {
    "text": "different levels of security and governance say PCR or hipper trffic might need to be isolated from uh",
    "start": "1405240",
    "end": "1412000"
  },
  {
    "text": "regular publicly available web traffic so to solve these problems it makes",
    "start": "1412000",
    "end": "1417039"
  },
  {
    "text": "sense to uh deploy customers of gateways dedicated to specific Services a further",
    "start": "1417039",
    "end": "1422440"
  },
  {
    "text": "benefit of this approach is that the gateways can also independently scale and fail and we find that our user",
    "start": "1422440",
    "end": "1428600"
  },
  {
    "text": "typically mix and match the shared Gateway approach with the Gateway per service",
    "start": "1428600",
    "end": "1433760"
  },
  {
    "text": "approach sharding allows different um different Gateway instances to selectively load different sets of apis",
    "start": "1433760",
    "end": "1441760"
  },
  {
    "text": "um so despite having a despite having a common control plane so let's assume for Simplicity sake that we've got two zones",
    "start": "1441760",
    "end": "1448440"
  },
  {
    "text": "in our Network the DMZ and an internal Zone we can deploy a Gateway cluster to the DMZ and another um to the internal",
    "start": "1448440",
    "end": "1456520"
  },
  {
    "text": "Zone and then Shard the gateways appropriately so it's possible to dynamically make routes to all services",
    "start": "1456520",
    "end": "1462799"
  },
  {
    "text": "available to the Gateway in the internal Nam space but perhaps restrict the apis and services made available within the",
    "start": "1462799",
    "end": "1471080"
  },
  {
    "text": "DMZ um as a kind of a side you might have heard about the kubernetes Gateway API",
    "start": "1471880",
    "end": "1478120"
  },
  {
    "text": "that has just been announced as GA and for those of you who' missed it it's definitely worth looking for the",
    "start": "1478120",
    "end": "1483320"
  },
  {
    "text": "recording on YouTube after the event but for the sake of completeness I just thought I'd just give it two minutes um",
    "start": "1483320",
    "end": "1489240"
  },
  {
    "text": "introduction the Gateway API is a collaborative project that's um concerned with the development of a",
    "start": "1489240",
    "end": "1495559"
  },
  {
    "text": "common API to model networking into side kubernetes now if you're familiar with",
    "start": "1495559",
    "end": "1500799"
  },
  {
    "text": "the older Ingress API you can think of the Gateway API as a kind of more expressive next gen version of that",
    "start": "1500799",
    "end": "1507799"
  },
  {
    "text": "rather than configuring Ingress using various annotations we've got a set of",
    "start": "1507799",
    "end": "1512880"
  },
  {
    "text": "strongly typed cuberes resources to help us and there there are three main kinds",
    "start": "1512880",
    "end": "1518559"
  },
  {
    "text": "that you need to be aware of the Gateway class Gateway and HTP rout and starting with Gateway class this is much like",
    "start": "1518559",
    "end": "1525120"
  },
  {
    "text": "objectoriented programming it describes the kind of control that's responsible for a given Gateway um and it could be",
    "start": "1525120",
    "end": "1531159"
  },
  {
    "text": "regarded as a template for Gateway deployments and the Gateway class describes an instance of an API Gateway",
    "start": "1531159",
    "end": "1537640"
  },
  {
    "text": "it binds listeners to a set of IP addresses and then finally the HTTP route as the name implies um provides a",
    "start": "1537640",
    "end": "1544480"
  },
  {
    "text": "way to root HTTP requests and this includes the ability to match requests by say host name path or header um and",
    "start": "1544480",
    "end": "1551840"
  },
  {
    "text": "even a query parameter you can also Define backends here to tell the Gateway which back end to rout traffic to",
    "start": "1551840",
    "end": "1558240"
  },
  {
    "text": "so the thing that's really powerful with this Gateway API is that it's been designed to be role oriented where the",
    "start": "1558240",
    "end": "1563799"
  },
  {
    "text": "API is separated by the responsibility of the different users of the system so",
    "start": "1563799",
    "end": "1569360"
  },
  {
    "text": "the infrastructure provider can be concerned with a Gateway class and then the cluster operators would interact",
    "start": "1569360",
    "end": "1574559"
  },
  {
    "text": "with Gateway objects and app developers would focus on the HTTP rout objects um",
    "start": "1574559",
    "end": "1579799"
  },
  {
    "text": "you'd also want to be aware of the gamma project and that extends the use case for the Gateway API Beyond just north",
    "start": "1579799",
    "end": "1585760"
  },
  {
    "text": "south Ingress traffic but um um and and and extends its use case for East West",
    "start": "1585760",
    "end": "1591919"
  },
  {
    "text": "service mesh use cases so be sure to check out um Flynn from buyant talk on gamma",
    "start": "1591919",
    "end": "1599080"
  },
  {
    "text": "tomorrow now I can keep listing and talking about the various features and functionalities of API gateways from say",
    "start": "1599679",
    "end": "1606960"
  },
  {
    "text": "cause to caching service Discovery mocking uh circuit breaking but we're",
    "start": "1606960",
    "end": "1612240"
  },
  {
    "text": "going to be here for the next several hours and you guys are all going to get bored um so I'm just going to zoom out a",
    "start": "1612240",
    "end": "1618120"
  },
  {
    "text": "little and kind of provide a snapshot into more of a kind of product thinking",
    "start": "1618120",
    "end": "1623159"
  },
  {
    "text": "business perspective an API Gateway alone won't solve these use cases I've got on the screen right now but coupled",
    "start": "1623159",
    "end": "1629919"
  },
  {
    "text": "with API management they can bring significant business value now in terms of development workflows it's been a",
    "start": "1629919",
    "end": "1636320"
  },
  {
    "text": "long long time since I was a developer but when I was I'd often have to integrate with different services and",
    "start": "1636320",
    "end": "1642240"
  },
  {
    "text": "those Services would be accessible via say rabbit mq um Exchange or a rest",
    "start": "1642240",
    "end": "1648440"
  },
  {
    "text": "service and the documentation would be provided via say a PDF or a Wiki now I'd",
    "start": "1648440",
    "end": "1654720"
  },
  {
    "text": "need documentation in various formats and um and then I'd need to translate that into an API client now do I test",
    "start": "1654720",
    "end": "1662159"
  },
  {
    "text": "against the real service do I mock that service um do I test against the",
    "start": "1662159",
    "end": "1667799"
  },
  {
    "text": "sandbox with modern API gateways I can deploy them locally on my laptop or within a Docker container and coupled",
    "start": "1667799",
    "end": "1674679"
  },
  {
    "text": "with something like an open API specification I can can load that into the gateway and have the Gateway",
    "start": "1674679",
    "end": "1680000"
  },
  {
    "text": "automatically mock the response provided within that specification so what's more",
    "start": "1680000",
    "end": "1685640"
  },
  {
    "text": "the Gateway can automatically validate payloads so that I can write tests that actually call the mocked service on the",
    "start": "1685640",
    "end": "1691799"
  },
  {
    "text": "Gateway now for more complex or dynamic mocks I can create virtual functions to",
    "start": "1691799",
    "end": "1696960"
  },
  {
    "text": "better simulate the real world shaving hours of development time and assisting me with automated testing I guess what",
    "start": "1696960",
    "end": "1703640"
  },
  {
    "text": "I'm trying to say here is that the API Gateway isn't just a thing that you go and deploy to a kubernetes cluster and",
    "start": "1703640",
    "end": "1709240"
  },
  {
    "text": "just leave it there it's something that you can have at development time and it's useful for developers as they're",
    "start": "1709240",
    "end": "1715080"
  },
  {
    "text": "developing their applications or Integrations now in terms of Discovery",
    "start": "1715080",
    "end": "1720640"
  },
  {
    "text": "sub subscriptions and documentation when I deploy my microservice the chances are that folks need to be able to discover",
    "start": "1720640",
    "end": "1726799"
  },
  {
    "text": "and consume it now for an API to be discoverable I need it to be published to some kind of developer portal",
    "start": "1726799",
    "end": "1732919"
  },
  {
    "text": "backstage anybody um I mean it's no good just making that API available to the",
    "start": "1732919",
    "end": "1739559"
  },
  {
    "text": "developer portal though the API needs to provide a golden path to Aid on boarding",
    "start": "1739559",
    "end": "1744760"
  },
  {
    "text": "the technical documentation needs to remain in sync with the actual service or the apis that are deployed as the",
    "start": "1744760",
    "end": "1750600"
  },
  {
    "text": "services kind of evolve over time and API consumers need to be able to selfs Serve by requesting access to that API",
    "start": "1750600",
    "end": "1758000"
  },
  {
    "text": "and somehow say obtain credentials conversion management is also extremely important for apis who",
    "start": "1758000",
    "end": "1765760"
  },
  {
    "text": "will be impacted when um if if we decide that we want to deprecate an endpoint or",
    "start": "1765760",
    "end": "1771000"
  },
  {
    "text": "an entire API how do we convince our consumers to upgrade their clients and what if they just say no so how many",
    "start": "1771000",
    "end": "1778679"
  },
  {
    "text": "different versions of an API do we need to maintain and keep available now developers integrate with",
    "start": "1778679",
    "end": "1785760"
  },
  {
    "text": "a specific um version of your API contract so um whilst it's very nice",
    "start": "1785760",
    "end": "1791679"
  },
  {
    "text": "it's also often a luxury to be able to just introduce breaking changes or enable Progressive delivery not all",
    "start": "1791679",
    "end": "1798799"
  },
  {
    "text": "services can be delivered in this way and sometimes a more um manual or managed approach is",
    "start": "1798799",
    "end": "1806519"
  },
  {
    "text": "required um and then in terms of API analytics developers they're typically focused on the performance of their",
    "start": "1806519",
    "end": "1812840"
  },
  {
    "text": "individual microservices but given that a single endpoint in an API Gateway might end up making multiple",
    "start": "1812840",
    "end": "1818880"
  },
  {
    "text": "microservice calls how do we get Vis visibility of the overall performance of our API products if a product team offer",
    "start": "1818880",
    "end": "1826679"
  },
  {
    "text": "an SLA to their customers how do we prove that we're meeting those slas and what are the financial penalties if we",
    "start": "1826679",
    "end": "1833200"
  },
  {
    "text": "miss them how do we better understand the adoption of the apis that we publish and how do we optimize the um from the",
    "start": "1833200",
    "end": "1840519"
  },
  {
    "text": "time that a consumer requests say an API key through to the time that they make the first API call perhaps that's a",
    "start": "1840519",
    "end": "1847679"
  },
  {
    "text": "success metric that we need to um that we need to Monitor and track so from the",
    "start": "1847679",
    "end": "1853080"
  },
  {
    "text": "API consumer perspective how do I understand how I'm consuming that API and how can I get requests or event logs",
    "start": "1853080",
    "end": "1860480"
  },
  {
    "text": "and how do I debug my Integrations without being forced to contact the developers um the development team",
    "start": "1860480",
    "end": "1867240"
  },
  {
    "text": "support service thank you very much",
    "start": "1867240",
    "end": "1873159"
  },
  {
    "text": "pet so in the final two minutes I want to summ it up um what we have discussed",
    "start": "1873159",
    "end": "1879039"
  },
  {
    "text": "I know we have thr a lot of information to you so AO service proxy service mesh",
    "start": "1879039",
    "end": "1885559"
  },
  {
    "text": "and API gateways are all components for aiding network communications in",
    "start": "1885559",
    "end": "1890600"
  },
  {
    "text": "microservice architecture they serve very different purpose and have different distinct features to help in",
    "start": "1890600",
    "end": "1897799"
  },
  {
    "text": "particular use case service proxy is a general purpose proxy while used alone",
    "start": "1897799",
    "end": "1904080"
  },
  {
    "text": "it is commonly used as a load balancer service mesh is particularly useful for",
    "start": "1904080",
    "end": "1909679"
  },
  {
    "text": "platform Engineers develops and sres when they want to apply policies for",
    "start": "1909679",
    "end": "1914799"
  },
  {
    "text": "security and governance purpose it's also enable them to get detailed insights into how the microservice is",
    "start": "1914799",
    "end": "1922639"
  },
  {
    "text": "performing API Gateway on the other hand speaks more to API developers and API",
    "start": "1922639",
    "end": "1928440"
  },
  {
    "text": "product owners API is a crucial business accet that enable Innovation and go far",
    "start": "1928440",
    "end": "1935279"
  },
  {
    "text": "beyond Ingress think about open banking stripe GitHub trailer and hopspot apis",
    "start": "1935279",
    "end": "1943639"
  },
  {
    "text": "for these business have been prioritized and used strategically to grow significant adoption and usage of the",
    "start": "1943639",
    "end": "1950720"
  },
  {
    "text": "platforms when you're trying to decide between service proxy service SMH and API Gateway is not a matter of choosing",
    "start": "1950720",
    "end": "1957840"
  },
  {
    "text": "one or the other let's think about what outcome are",
    "start": "1957840",
    "end": "1963279"
  },
  {
    "text": "you hoping to achieve do you think it's necessary to have zero trust Security in",
    "start": "1963279",
    "end": "1968360"
  },
  {
    "text": "your network s smash can totally automate that for you would you like to",
    "start": "1968360",
    "end": "1973679"
  },
  {
    "text": "consider adopting an API first approach in development then API Gateway is a",
    "start": "1973679",
    "end": "1978799"
  },
  {
    "text": "tool that's here to help you out do you want both yes why not making decisions",
    "start": "1978799",
    "end": "1986399"
  },
  {
    "text": "like this can be really tough I hope we have given you some good insights into",
    "start": "1986399",
    "end": "1992519"
  },
  {
    "text": "the key differences between them in this talk so thank you very much for your",
    "start": "1992519",
    "end": "1999639"
  },
  {
    "text": "attention today please do leave Feit back for our talk thank",
    "start": "1999639",
    "end": "2005960"
  },
  {
    "text": "you [Applause]",
    "start": "2005960",
    "end": "2010549"
  },
  {
    "text": "have we got time for questions is if anyone wants to ask questions at all",
    "start": "2011320",
    "end": "2017159"
  },
  {
    "text": "no if if anyone does want to ask questions come and grab us after we're here we're here for you thank you thank",
    "start": "2017159",
    "end": "2023919"
  },
  {
    "text": "you",
    "start": "2023919",
    "end": "2026919"
  }
]