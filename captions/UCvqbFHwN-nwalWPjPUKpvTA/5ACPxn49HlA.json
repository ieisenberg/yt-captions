[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "that was the best introduction I've ever had and I'm gonna do my best here to live up to that so I'm Dan eNOS this is Katrina and",
    "start": "30",
    "end": "7379"
  },
  {
    "text": "we're super excited to tell you about crane some of the deployed tooling we've built at Shopify so to give you a quick",
    "start": "7379",
    "end": "13679"
  },
  {
    "text": "overview of the talk there it goes okay",
    "start": "13679",
    "end": "22230"
  },
  {
    "text": "do you a quick overview the talk we're gonna talk a little bit about what crane is and how it came to be after that",
    "start": "22230",
    "end": "28560"
  },
  {
    "text": "we'll show you how it works we ready some live demos a little exercise it's real functionality from there we'll take",
    "start": "28560",
    "end": "34770"
  },
  {
    "text": "a look inside of the guts of it and actually look at the code and our goal here is to help you get a better mental model of what's going on",
    "start": "34770",
    "end": "40290"
  },
  {
    "text": "and since we're open-source if you ever want to contribute you'll have a leg up and getting started and then finally",
    "start": "40290",
    "end": "45989"
  },
  {
    "text": "we'll talk about some lessons learned this project is over three years old now we've had internal contributors at",
    "start": "45989",
    "end": "51000"
  },
  {
    "text": "Shopify we've had external contributors in the community and we integrate with kubernetes and we've had some things",
    "start": "51000",
    "end": "56399"
  },
  {
    "text": "really well and we've made some mistakes along the way and we're hoping to share those so that all of you can learn from",
    "start": "56399",
    "end": "62219"
  },
  {
    "text": "our experiences so to kick it off here's Katrina so what exactly is crane",
    "start": "62219",
    "end": "70820"
  },
  {
    "text": "fundamentally crane is an open-source deploy tool that we built specifically for kubernetes it's a tool that we use a",
    "start": "70820",
    "end": "78270"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "lot at Shopify our metrics show that on a normal business day we invoke crane",
    "start": "78270",
    "end": "83340"
  },
  {
    "text": "over 2000 times things haven't always been this way of course cranes story",
    "start": "83340",
    "end": "89400"
  },
  {
    "text": "starts back in early 2016 when Shopify started investigating the possibility of running our apps on kubernetes after extensive",
    "start": "89400",
    "end": "96180"
  },
  {
    "text": "experimentation we decided to move forward with an internal platform as a service that would run all of our applications from the smallest",
    "start": "96180",
    "end": "102360"
  },
  {
    "text": "experiments right through to our business critical rails monolith we wanted our new platform to be",
    "start": "102360",
    "end": "107700"
  },
  {
    "text": "self-service so one of the things that we had to work out was how to enable our developers to deploy to it themselves",
    "start": "107700",
    "end": "114680"
  },
  {
    "text": "maybe the most obvious thing to do is to give developers a tool that simply runs good control apply for them right in our",
    "start": "114680",
    "end": "121049"
  },
  {
    "text": "first iteration that's exactly what we did and of course it worked beautifully for initiating changes however keep",
    "start": "121049",
    "end": "128550"
  },
  {
    "text": "control appliers success is more the equivalent of okay I'll try then you equivalent to your changes worked so all lixo sects",
    "start": "128550",
    "end": "136500"
  },
  {
    "text": "success status really means is that the API server accepted your desired state not that your desired state has been or",
    "start": "136500",
    "end": "142590"
  },
  {
    "text": "will ever be reached we knew that once we started onboarding non-experts this",
    "start": "142590",
    "end": "147750"
  },
  {
    "text": "was not going to cut it what we wanted was a deploy tool that would empower our",
    "start": "147750",
    "end": "153840"
  },
  {
    "text": "developers to play confidently to kubernetes eventually convergence system this tool could not assume any",
    "start": "153840",
    "end": "159870"
  },
  {
    "text": "kubernetes expertise and it had to give our developers the information they would need to recognize and solve problems independently at the time we",
    "start": "159870",
    "end": "167700"
  },
  {
    "text": "didn't find any tools that were trying to do this notably queue control rollout itself didn't even exist",
    "start": "167700",
    "end": "173010"
  },
  {
    "text": "and although helm is already getting popular the feedback that it was giving at the time wasn't much more than you got from cute control apply so we",
    "start": "173010",
    "end": "179670"
  },
  {
    "text": "decided to build crane and make this our mission we wrote crane and ruby and at",
    "start": "179670",
    "end": "186000"
  },
  {
    "text": "first it was actually just a little script inside our higher-level deploy tool which is called shipit' incidentally ship it is also open source",
    "start": "186000",
    "end": "192390"
  },
  {
    "text": "so you can check that out if you're interested as our script grew we realized that it had independent value",
    "start": "192390",
    "end": "198090"
  },
  {
    "text": "and we extracted it to a ruby gem with its own CLI originally that gem was named after literally the file that has",
    "start": "198090",
    "end": "203940"
  },
  {
    "text": "had been called in our in other deploy tool so had the gun event uninventive name of criminales deploy this month we",
    "start": "203940",
    "end": "210360"
  },
  {
    "text": "were super excited to announce version 1.0 and we have our new name with version 1.0 that's crane this was all",
    "start": "210360",
    "end": "218430"
  },
  {
    "text": "thanks to the efforts of our 50 contributors not all of whom work for Shopify by the way and HFI we've been",
    "start": "218430",
    "end": "224610"
  },
  {
    "text": "using it in production since early 2017 we're hoping that someone here today",
    "start": "224610",
    "end": "229739"
  },
  {
    "text": "might feel inspired to join us next and become one of our contributors so this",
    "start": "229739",
    "end": "236489"
  },
  {
    "text": "here is what a the most basic invocation of crane looks like you have crane deploy the name of your namespace the",
    "start": "236489",
    "end": "242910"
  },
  {
    "text": "name of the context that namespace is in and then the list of files or directories that contain the set of resources that you want to have in that",
    "start": "242910",
    "end": "248850"
  },
  {
    "text": "namespace already this tells you something important about the model that we chose for crane fundamentally we're",
    "start": "248850",
    "end": "255330"
  },
  {
    "text": "managing a namespace for you this means we're going to add update and remove resources to make the live State match",
    "start": "255330",
    "end": "260850"
  },
  {
    "text": "the set of resources that you gave us if you're thinking that sounds a lot like you control apply with pruning enable",
    "start": "260850",
    "end": "266889"
  },
  {
    "text": "you would be exactly right we're doing exactly that under the hood but that's not all we're doing as I mentioned our",
    "start": "266889",
    "end": "275470"
  },
  {
    "start": "273000",
    "end": "273000"
  },
  {
    "text": "focus is on developer experience and we laid the foundations for that by translating what's happening in kubernetes into an accurate pass/fail",
    "start": "275470",
    "end": "282009"
  },
  {
    "text": "result this means that we do not declare success until the desired state has actually been achieved and conversely we",
    "start": "282009",
    "end": "288789"
  },
  {
    "text": "try to detect when convergence is doomed as quickly as possible to give developers the chance to act on it when",
    "start": "288789",
    "end": "295509"
  },
  {
    "text": "we give developers that result especially if it's a failure results we want to make sure that they can take action and fix things so for example if",
    "start": "295509",
    "end": "302979"
  },
  {
    "text": "the problem is with a pod we're going to show them a sample of its logs and events we also do a lot behind the",
    "start": "302979",
    "end": "309490"
  },
  {
    "text": "scenes to make deploys go more smoothly for example we do some deploy sequencing one example of that is that we validate",
    "start": "309490",
    "end": "316780"
  },
  {
    "text": "everything before we even attempt to deploy which is a good idea right and we also sequence some resources before",
    "start": "316780",
    "end": "322900"
  },
  {
    "text": "others for example it can be very important to deploy things like a quota before the things that the quota is",
    "start": "322900",
    "end": "328000"
  },
  {
    "text": "supposed to constrain another great feature that we offer is the ability to run tests like asset uploads or database",
    "start": "328000",
    "end": "334750"
  },
  {
    "text": "migrations at the beginning of your deploy the best way to appreciate these features is probably to see them in",
    "start": "334750",
    "end": "340900"
  },
  {
    "text": "action so with that I'm going to hand it over to Danny to give us some demos so I",
    "start": "340900",
    "end": "346630"
  },
  {
    "text": "know I promised you live demos but I'll be honest I'm not that brave these demos",
    "start": "346630",
    "end": "352389"
  },
  {
    "text": "were live when I recorded them but well that's stretching the word live isn't it",
    "start": "352389",
    "end": "357750"
  },
  {
    "text": "so the first demo is really straightforward we're going to play a basic web app something we do a lot of",
    "start": "357750",
    "end": "363310"
  },
  {
    "start": "359000",
    "end": "359000"
  },
  {
    "text": "Shopify demo sorry the deploy has four phases we begin by validation after that we're",
    "start": "363310",
    "end": "370750"
  },
  {
    "text": "actually to check the initial state of the cluster make sure we know where we came from I will actually do the deploy the thing we said we're going to do and",
    "start": "370750",
    "end": "376270"
  },
  {
    "text": "then we'll use some smart and rollout logic to monitor what's going on and to be able to assert confidently that this",
    "start": "376270",
    "end": "381310"
  },
  {
    "text": "was success or failure the devil is gonna go quick so don't worry about that if you don't catch it all the first",
    "start": "381310",
    "end": "386440"
  },
  {
    "text": "glimps I promise I'll break it apart after it runs so let's do it so you begin with the command we saw",
    "start": "386440",
    "end": "393460"
  },
  {
    "text": "earlier crane deploy test app test cluster and the resources from there we",
    "start": "393460",
    "end": "398860"
  },
  {
    "text": "validate it the cluster state we actually do the deploy and now we're waiting for it to verify big success it's exactly we",
    "start": "398860",
    "end": "406520"
  },
  {
    "text": "wanted to see ok so now as promised we're breaking it apart so in the beginning we promised validation so we",
    "start": "406520",
    "end": "412940"
  },
  {
    "text": "start by validating the command line flags you arguments you passed right does this cluster exist does the",
    "start": "412940",
    "end": "418520"
  },
  {
    "text": "namespace exist in the cluster how about those resources are they valid llamo are they valid kubernetes yeah well let's",
    "start": "418520",
    "end": "425060"
  },
  {
    "text": "make sure by the way when I said simple web app this is about as simple as I could come up with a deployment a service in an ingress so we check for",
    "start": "425060",
    "end": "432410"
  },
  {
    "text": "their existence now this is the first time we deployed it till you're not found this is not particularly helpful",
    "start": "432410",
    "end": "437540"
  },
  {
    "text": "you're all sitting here like yeah of course it's not there Danny for the first deployment but where this becomes really powerful as later on when things",
    "start": "437540",
    "end": "443420"
  },
  {
    "text": "go wrong you can say huh it's crashing was a crashing before or why isn't that resource there what's going on so this",
    "start": "443420",
    "end": "450350"
  },
  {
    "text": "is a nice historical step after that we actually do the deploy so by default",
    "start": "450350",
    "end": "455390"
  },
  {
    "text": "we'll deploy all resources with cube CTL apply but we can use other verbs per resource kind so if there's a bug or",
    "start": "455390",
    "end": "461780"
  },
  {
    "text": "some other issue we can create we can replace we can force replace if we need to and then finally the things we're",
    "start": "461780",
    "end": "467810"
  },
  {
    "text": "most proud of is the smart rollout logic so we first just you know check to make sure that cube see tail apply succeeded",
    "start": "467810",
    "end": "473870"
  },
  {
    "text": "but after that we need to make sure that other resources were successful so for a",
    "start": "473870",
    "end": "478880"
  },
  {
    "text": "deployment let's make sure the number of replicas you asked for the number that are updated and available for a service",
    "start": "478880",
    "end": "484190"
  },
  {
    "text": "if you're using pod selectors let's make sure those pod selectors actually select something right it's no good to say the",
    "start": "484190",
    "end": "489260"
  },
  {
    "text": "ingress is fine the deployments fine but oh yeah your service that's connected to nothing out there right like without the",
    "start": "489260",
    "end": "494900"
  },
  {
    "text": "whole pipeline to work but this is a super simple demo right and things get",
    "start": "494900",
    "end": "500180"
  },
  {
    "start": "500000",
    "end": "500000"
  },
  {
    "text": "more complicated your apps get bigger say I want some dynamic configuration with a config map so in this demo we'll",
    "start": "500180",
    "end": "506390"
  },
  {
    "text": "see the same things you saw before but there'll be a new step this is the priority resource deployment step where we actually get more deploy sequencing",
    "start": "506390",
    "end": "512570"
  },
  {
    "text": "so again this will run pretty quickly oh I should actually show you the config map basic config map nothing too crazy",
    "start": "512570",
    "end": "518210"
  },
  {
    "text": "here I said well kick this off it'll run pretty quick so do the validation and",
    "start": "518210",
    "end": "524020"
  },
  {
    "text": "the validation failed how did I fail a pre-recorded demo am I crazy",
    "start": "524020",
    "end": "529970"
  },
  {
    "text": "well okay so it failed there's a new resource result here right failure that's new I",
    "start": "529970",
    "end": "535610"
  },
  {
    "text": "guess I'll take this opportunity to tell you what we do on failures so first we give you some helpful error messages",
    "start": "535610",
    "end": "541160"
  },
  {
    "text": "from gypsy tale apply like dadoes isn't filled and config map oh there's a",
    "start": "541160",
    "end": "547340"
  },
  {
    "text": "typo in there I'll fix that in a second the other thing we do is actually give you the template now in this demo giving",
    "start": "547340",
    "end": "554300"
  },
  {
    "text": "the templates silly right there's one config map in one directory I know where to find it but if you use this as part of a larger pipeline where you render your resources",
    "start": "554300",
    "end": "560510"
  },
  {
    "text": "dynamically or dynamically determine oh you're gonna render or and generate well actually seeing the final thing here is",
    "start": "560510",
    "end": "566690"
  },
  {
    "text": "a lot better than having to sort of piece it together historically okay so fix the typo promise that won't happen again let's",
    "start": "566690",
    "end": "573680"
  },
  {
    "text": "kick off the deploy okay we got through validation this time got to the priority",
    "start": "573680",
    "end": "580670"
  },
  {
    "text": "resource so it went out and now we're just validating that everything else is happy cool success Oh be really",
    "start": "580670",
    "end": "586820"
  },
  {
    "text": "embarrassing to do that twice wouldn't it okay so breaking this apart here",
    "start": "586820",
    "end": "592100"
  },
  {
    "text": "we're gonna validate what's in the cluster and the config Maps not found right we failed validation we didn't try and get it there so historically it's",
    "start": "592100",
    "end": "598850"
  },
  {
    "text": "not there the other piece is the priority deploy phase so config Maps go out is one example other consumables or",
    "start": "598850",
    "end": "605720"
  },
  {
    "text": "things like service accounts or secrets and free config maps this is really important",
    "start": "605720",
    "end": "610780"
  },
  {
    "text": "you don't want to do is put a deployment out there and then have some of its pods start up and use the old config map then",
    "start": "610780",
    "end": "617390"
  },
  {
    "text": "put up a new config map and have the other half the pods use these new config map right the sequencing guarantees that all of your pods and deployment will",
    "start": "617390",
    "end": "623870"
  },
  {
    "text": "reference the correct config map for other things I'm gonna call state",
    "start": "623870",
    "end": "629450"
  },
  {
    "text": "modifiers are back network policies resource quotas right there's a sane result you expect if your resource quota",
    "start": "629450",
    "end": "634970"
  },
  {
    "text": "says ten pods and your planets as a thousand sensibly you want ten pods if you do these in the wrong order you're",
    "start": "634970",
    "end": "640460"
  },
  {
    "text": "not gonna get what you want and then finally a class of things will call tasks and we represent these as bear",
    "start": "640460",
    "end": "645950"
  },
  {
    "text": "pods and if you use a rails app or any sort of web app you often know that before you start serving web sites you",
    "start": "645950",
    "end": "652850"
  },
  {
    "text": "want to get your static assets uploaded to a CDN your JavaScript your CSS and images so we use a pod to do acid",
    "start": "652850",
    "end": "658640"
  },
  {
    "text": "uploading this gets phased before we actually start serving anything and it's perfect for us I you can also stick other tasks in here",
    "start": "658640",
    "end": "664820"
  },
  {
    "text": "whatever your heart desires okay but this config back was super contrived",
    "start": "664820",
    "end": "670620"
  },
  {
    "start": "669000",
    "end": "669000"
  },
  {
    "text": "right like it doesn't really buy us anything anything so let's kill it and we do that the party resource face is",
    "start": "670620",
    "end": "676080"
  },
  {
    "text": "gonna go away but we'll get to see something new pruning okay one more demo real quick so",
    "start": "676080",
    "end": "682410"
  },
  {
    "text": "type the command do the validation check the state do the deploy have it succeed",
    "start": "682410",
    "end": "689160"
  },
  {
    "text": "bang easy okay so what's new here is the pruning like we said as soon as we",
    "start": "689160",
    "end": "694770"
  },
  {
    "text": "deleted the config map and deployed it got pruned from the namespace and as promised we manage your namespace we",
    "start": "694770",
    "end": "699900"
  },
  {
    "text": "keep everything in sync but I keep talking about deploy commands but if you member the title slide of the talk it",
    "start": "699900",
    "end": "705630"
  },
  {
    "text": "was Krane not Krane deploy and the reason for that is we're not one command we're actually five so we've seen deploy",
    "start": "705630",
    "end": "711960"
  },
  {
    "start": "709000",
    "end": "709000"
  },
  {
    "text": "a lot we have a similar command called global deploy to help you manage the global namespace or not names based resources we have restart it's super",
    "start": "711960",
    "end": "720240"
  },
  {
    "text": "great when deployments do rolling updates right this smooth continuous availability but sometimes you don't have to deploy you just want to restart",
    "start": "720240",
    "end": "726270"
  },
  {
    "text": "things so we've added that functionality we have Krane run in the same way that there are a lot of tasks associated with",
    "start": "726270",
    "end": "732270"
  },
  {
    "text": "deploys you want to do sometimes you have tasks that are outside of deploys if you know rails these would be things like rake tasks I'm pretty sure PHP has",
    "start": "732270",
    "end": "739350"
  },
  {
    "text": "something equivalent and probably every framework and then finally a render of tasks so some historic information we",
    "start": "739350",
    "end": "747690"
  },
  {
    "text": "used to dynamically render ARB as part of the deploy and this meant that you didn't know you were deploying until you actually deployed it sometimes and that",
    "start": "747690",
    "end": "754440"
  },
  {
    "text": "also meant that you couldn't check your templates in CI because they weren't the ammo they were you know Ruby's ERP",
    "start": "754440",
    "end": "759840"
  },
  {
    "text": "language so by breaking the renderer out into its own command that let us have a continuous integration that could also",
    "start": "759840",
    "end": "765690"
  },
  {
    "text": "verify sensible things about your templates so let's see another command maybe restart this time it looks a",
    "start": "765690",
    "end": "772860"
  },
  {
    "start": "771000",
    "end": "771000"
  },
  {
    "text": "little different we don't actually up to say what we want to restart will dynamically find it will do the restart and then we'll continue to use our smart",
    "start": "772860",
    "end": "778950"
  },
  {
    "text": "logic to make sure it successfully goes out so this one also goes by pretty quick I promise we'll break it apart so",
    "start": "778950",
    "end": "785790"
  },
  {
    "text": "bang type the command how'd it find what you want have it do the restart smart logic goes and then we",
    "start": "785790",
    "end": "791880"
  },
  {
    "text": "get text read text gives me a bad feeling okay let's see where this goes",
    "start": "791880",
    "end": "799230"
  },
  {
    "text": "yep it didn't succeed so the first thing is we have a new result status timed out",
    "start": "799830",
    "end": "806220"
  },
  {
    "text": "so we saw a success we saw failure time down to something in the middle right kübra is eventually convergent so maybe",
    "start": "806220",
    "end": "813370"
  },
  {
    "text": "a timed out status will converge to success or maybe they'll never get to failure maybe I'll sit here forever but if you're familiar with a progress",
    "start": "813370",
    "end": "820300"
  },
  {
    "text": "deadline seconds four deployments use this idea that like at some point you got to make a decision and just decide it's not right so I cranked this way",
    "start": "820300",
    "end": "827200"
  },
  {
    "text": "down so we want to be sitting here forever like three seconds in reality right like I don't think anyone's ever set their PDS to three but again I don't",
    "start": "827200",
    "end": "834430"
  },
  {
    "text": "want to keep us here for three minutes so if you stare at a screen and so we failed so let's actually see what other",
    "start": "834430",
    "end": "840400"
  },
  {
    "text": "information we might feel to determine well yeah busybox bad tag I wonder why I",
    "start": "840400",
    "end": "845950"
  },
  {
    "text": "can't pull that image so that's one of things we do up all the relevant events",
    "start": "845950",
    "end": "851250"
  },
  {
    "text": "we also grab logs from your container so if you're not familiar with rails this",
    "start": "851250",
    "end": "856450"
  },
  {
    "text": "is basically the start of a stack trace and basically it means this pods crashing on startup now this demo is super contrived right I",
    "start": "856450",
    "end": "864310"
  },
  {
    "text": "think most of you figured out like how did he get to the state right was working the last employee and so in",
    "start": "864310",
    "end": "869320"
  },
  {
    "text": "between here I screwed some things up in the system and if you were a developer you would had a failed deploy but I",
    "start": "869320",
    "end": "874960"
  },
  {
    "text": "suspect as a developer you've never ever deployed something had it fails it may be a restart we'll fix it I'll try that right no one ever does that the other",
    "start": "874960",
    "end": "883150"
  },
  {
    "text": "thing to highlight here and why this is a little bit contrived is that we have fast failure detection we expect",
    "start": "883150",
    "end": "888610"
  },
  {
    "text": "developers to build images before they deploy them so if we ever actually discovered this event you know can't",
    "start": "888610",
    "end": "893800"
  },
  {
    "text": "find an image tag we just immediately fail their deploy now we don't immediately fail it we take more than",
    "start": "893800",
    "end": "899020"
  },
  {
    "text": "three seconds to do it but if I had set a reasonable PDS we'd see failure here but then I couldn't highlight timed out",
    "start": "899020",
    "end": "904210"
  },
  {
    "text": "conditions without having you waiting forever so oh yeah so on a happier note",
    "start": "904210",
    "end": "909310"
  },
  {
    "text": "though one other can talk about is the dynamic discovery and hopefully it's not off the top of the slide when you start",
    "start": "909310",
    "end": "915190"
  },
  {
    "text": "we could restart everything in your namespace right and then you remember that you might have a Redis in your namespace and you might have a my sequel",
    "start": "915190",
    "end": "921670"
  },
  {
    "text": "pod and your right name space and you think yeah I don't want to restart those so we actually use the annotations straw let you describe what you want to",
    "start": "921670",
    "end": "928449"
  },
  {
    "text": "be start when you were starting your app okay think it's more and more contrived I keep having to like walk back and back",
    "start": "928449",
    "end": "935529"
  },
  {
    "text": "dice at the beginning the other thing that's contrived about this is I did it from my laptop but this is part of our CD tooling right it turns out that you",
    "start": "935529",
    "end": "942459"
  },
  {
    "text": "can run crane from a laptop but we don't we give you access to the Ruby library so you can do that but if our mm deploys",
    "start": "942459",
    "end": "949059"
  },
  {
    "text": "a day I think they're all done through our CD pipeline so I want to show you what that looks like for a realistic holistic view of how crane is used so",
    "start": "949059",
    "end": "956829"
  },
  {
    "text": "this is ship it this is specifically the restart page for one of our real apps well it's a test app it's a real app the",
    "start": "956829",
    "end": "963429"
  },
  {
    "text": "page tells them the user or the developer what we're gonna do the command is gonna get run and gives them a really nice button people love buttons",
    "start": "963429",
    "end": "969490"
  },
  {
    "text": "right so they push the button they'll come to a page like this it",
    "start": "969490",
    "end": "974740"
  },
  {
    "text": "looks like interactive terminal but it's not we're just doing the same logging we've seen before on a black background this time but it allows the developer to",
    "start": "974740",
    "end": "980920"
  },
  {
    "text": "see what's happened and to send links to other people saying like hey I'm in the success case they don't just send a link but in the failure case they can send a",
    "start": "980920",
    "end": "987490"
  },
  {
    "text": "link to someone else to evaluate what's going on so to peek behind the scenes here's Katrina so now that you know what crane",
    "start": "987490",
    "end": "997629"
  },
  {
    "text": "can do as promised we would like to give you a bit more insight into how we're doing that and this will also help give",
    "start": "997629",
    "end": "1003120"
  },
  {
    "text": "anyone interested in contributing a foothold in our code what I'm gonna do first is go over some of the key classes",
    "start": "1003120",
    "end": "1009569"
  },
  {
    "text": "that are involved in and deploy the main point is called deploy tasks and its main method is called run and if you",
    "start": "1009569",
    "end": "1016350"
  },
  {
    "text": "were to use crane directly as a gem this is what you would be calling deploy task is responsible for that sequence of",
    "start": "1016350",
    "end": "1022379"
  },
  {
    "text": "phases that you saw in the demos and it does this by coordinating other more specialized objects such as resource",
    "start": "1022379",
    "end": "1028048"
  },
  {
    "text": "deployer resource deployer basically adds some smarts around cube control commands another important class is called",
    "start": "1028049",
    "end": "1034740"
  },
  {
    "text": "resource watcher and this one is responsible for determining when the deploy is actually done and finally at",
    "start": "1034740",
    "end": "1041459"
  },
  {
    "text": "the heart of crane we have kubernetes resource classes career 90s resource is actually a super class and we implement",
    "start": "1041459",
    "end": "1047188"
  },
  {
    "text": "subclasses of it for all the different resource kinds these classes are what implements the smart kind specific logic",
    "start": "1047189",
    "end": "1052860"
  },
  {
    "text": "that lets crane determine when each resource instance has reached a state that we consider terminal in other words succeeded failed wartime doe",
    "start": "1052860",
    "end": "1059790"
  },
  {
    "text": "these last two the watcher and the resource classes are particularly important to understanding cranes",
    "start": "1059790",
    "end": "1065160"
  },
  {
    "text": "approach so I'm gonna dive a bit deeper into those ones so first we have the watcher this is a slightly simplified",
    "start": "1065160",
    "end": "1072570"
  },
  {
    "start": "1069000",
    "end": "1069000"
  },
  {
    "text": "but still very realistic representation of its main method which is called run as you can see this is just a giant",
    "start": "1072570",
    "end": "1079320"
  },
  {
    "text": "while loop what we're doing here is pulling the most important part of the work happens in the middle method their",
    "start": "1079320",
    "end": "1085500"
  },
  {
    "text": "sink resources and that's where we're talking to the API server and I'm gonna get back to that in a minute after we talk to the API server we tell",
    "start": "1085500",
    "end": "1092850"
  },
  {
    "text": "the user about what we just saw so did any resources just complete did they just succeed fail or timeout and what",
    "start": "1092850",
    "end": "1098580"
  },
  {
    "text": "are we still waiting for we let them know about that as well finally we keep looping and then once there's nothing left to watch or when we hit the global",
    "start": "1098580",
    "end": "1105330"
  },
  {
    "text": "timeout which is something that you can configure we exit as I mentioned sync",
    "start": "1105330",
    "end": "1112170"
  },
  {
    "start": "1110000",
    "end": "1110000"
  },
  {
    "text": "resources is the most important thing here Andrey's are syncing is a really key concept for us to understand inside",
    "start": "1112170",
    "end": "1118380"
  },
  {
    "text": "the sync resource method we're going to give each resource instance so that's an instance of that kubernetes resource",
    "start": "1118380",
    "end": "1123390"
  },
  {
    "text": "class or subclasses but that set represents all the resources that you",
    "start": "1123390",
    "end": "1128790"
  },
  {
    "text": "want in your namespace or the subsets that we're still watching we're going to give each one a chance to gather information from the kubernetes api",
    "start": "1128790",
    "end": "1134310"
  },
  {
    "text": "server otherwise it doesn't have any access to that API server and there are",
    "start": "1134310",
    "end": "1139740"
  },
  {
    "text": "two reasons that we so strictly control when these API calls are made the first one is perhaps the most obvious we're",
    "start": "1139740",
    "end": "1145590"
  },
  {
    "text": "doing it for performance reasons if you're fetching hundreds of resources or even thousands from a large cluster this",
    "start": "1145590",
    "end": "1151890"
  },
  {
    "text": "can be very expensive so you really don't want to make any more calls than you have to the second reason is maybe",
    "start": "1151890",
    "end": "1158070"
  },
  {
    "text": "less obvious but it's also very important we're doing this because it makes our determinations consistent with",
    "start": "1158070",
    "end": "1164700"
  },
  {
    "text": "kerbin at ease as you know it it's impossible to make a determination that's going to be valid indefinitely because kubernetes behind the scenes is",
    "start": "1164700",
    "end": "1171120"
  },
  {
    "text": "trying to converge basically forever and there are many processes in play that can cause the state to change over time",
    "start": "1171120",
    "end": "1176310"
  },
  {
    "text": "so what we're actually trying to do here is create an accurate snapshot representing a specific point in time so",
    "start": "1176310",
    "end": "1183180"
  },
  {
    "text": "that's what we're really doing during the sync we're taking that snapshot",
    "start": "1183180",
    "end": "1188090"
  },
  {
    "start": "1188000",
    "end": "1188000"
  },
  {
    "text": "as I was suggesting the way that we are taking a snapshot is by delegating two instances of the kubernetes resource",
    "start": "1189300",
    "end": "1194490"
  },
  {
    "text": "class The Watcher is going to call the sync method on each one of those and it's going to pass in an object that has",
    "start": "1194490",
    "end": "1200070"
  },
  {
    "text": "read-only API access and handles caching the instance is then going to use that",
    "start": "1200070",
    "end": "1205200"
  },
  {
    "text": "object to get whatever information it needs from the API server without ever causing us to repeat an API call within",
    "start": "1205200",
    "end": "1210690"
  },
  {
    "text": "a sync cycle after the sync is complete the watcher is going to call these deploy failed deploy succeeded and",
    "start": "1210690",
    "end": "1217110"
  },
  {
    "text": "deploy timed out methods on the resource instances to see if the determination has been reached for that instance so",
    "start": "1217110",
    "end": "1224670"
  },
  {
    "text": "here's a real example of one of the kubernetes resource classes this is actually the entirety of the config map",
    "start": "1224670",
    "end": "1229860"
  },
  {
    "text": "class configuration objects are the simplest ones to implement because success for them just means that they",
    "start": "1229860",
    "end": "1235830"
  },
  {
    "text": "were accepted by the API server and they're available for consumption so you can see here that the deploy succeeded for a config map is just confirming that",
    "start": "1235830",
    "end": "1242310"
  },
  {
    "text": "last time we looked yes this actually existed and you can also notice that deploy failed we don't have any node and",
    "start": "1242310",
    "end": "1248790"
  },
  {
    "text": "deploy failure states for this kind this next example isn't a real class but it's",
    "start": "1248790",
    "end": "1255150"
  },
  {
    "text": "representative of how the more complex logic looks in in the more complex resource classes so essentially the sync",
    "start": "1255150",
    "end": "1262620"
  },
  {
    "text": "method is taking a snapshot of the live state of that resource and then when we later call deploy succeeded and deploy",
    "start": "1262620",
    "end": "1269010"
  },
  {
    "text": "failed we're using that cached data to inspect the state and determine whether it matches our predefined expectations",
    "start": "1269010",
    "end": "1274710"
  },
  {
    "text": "regarding success and failure so if",
    "start": "1274710",
    "end": "1279900"
  },
  {
    "text": "you're interested in contributing to crane these resort classes are a really great way to get started we've implemented many kinds over the years",
    "start": "1279900",
    "end": "1286380"
  },
  {
    "text": "but there are so many left to do in particular we only recently added support for non namespace resources via",
    "start": "1286380",
    "end": "1292140"
  },
  {
    "text": "our new global deploy task so we could definitely use help losing modeling more of those another way that you can help",
    "start": "1292140",
    "end": "1298980"
  },
  {
    "text": "is contributing your expertise on failure modes that you've seen in the wild to help improve our fast failure logic in other words that's augmenting",
    "start": "1298980",
    "end": "1305460"
  },
  {
    "text": "those deploy failed methods if you're less familiar with Ruby or kubernetes we can always use help with documentation",
    "start": "1305460",
    "end": "1310800"
  },
  {
    "text": "and of course we always appreciate receiving bug reports if you have another idea",
    "start": "1310800",
    "end": "1315960"
  },
  {
    "text": "please open an issue and let us know now that you know what crane is and how",
    "start": "1315960",
    "end": "1323889"
  },
  {
    "text": "it works as promised we want to share some lessons that we've learned as we built it so let's dive right into the",
    "start": "1323889",
    "end": "1334239"
  },
  {
    "start": "1331000",
    "end": "1331000"
  },
  {
    "text": "hard part for me these are some things that I would do differently if I started this project again some mistakes",
    "start": "1334239",
    "end": "1341489"
  },
  {
    "text": "the first lesson learned is about being opinionated about your mission as Danny",
    "start": "1341489",
    "end": "1347440"
  },
  {
    "text": "alerted alluded to this earlier but as you know our mission is poised not template management but when we started",
    "start": "1347440",
    "end": "1353649"
  },
  {
    "text": "our developers needed a way to inject the latest image tag into their deployments and we decided to solve that problem by integrating a renderer right",
    "start": "1353649",
    "end": "1360429"
  },
  {
    "text": "into our deploy command we defaulted to using a template language language that would be very familiar to our developers",
    "start": "1360429",
    "end": "1365739"
  },
  {
    "text": "prb ear B is essentially Ruby and that means there's hardly anything it can't",
    "start": "1365739",
    "end": "1371049"
  },
  {
    "text": "do naturally over time our developers took full advantage of this adding loops conditionals and dare I say API calls",
    "start": "1371049",
    "end": "1378099"
  },
  {
    "text": "right into their templates what we've experienced is that as templates become increasingly complex leaving rendering",
    "start": "1378099",
    "end": "1384849"
  },
  {
    "text": "to deploy time becomes increasingly dangerous my recommendation is that if you use ARB or any other complex",
    "start": "1384849",
    "end": "1390729"
  },
  {
    "text": "templating to do something non-trivial you commit the result ahead of time or at the very least render invalidate your",
    "start": "1390729",
    "end": "1395769"
  },
  {
    "text": "templates in CI there's nothing wrong with our renderer but in Crane 1.0 we separated it out to its own command to",
    "start": "1395769",
    "end": "1401739"
  },
  {
    "text": "encourage this best practice and help us focus on our mission the second mistake",
    "start": "1401739",
    "end": "1407320"
  },
  {
    "text": "I want to talk about is related to the importance of fulfilling the expectations that you set as you now",
    "start": "1407320",
    "end": "1412839"
  },
  {
    "text": "know crane claims to manage a namespace for you and it's always been that way however our pruning was originally based",
    "start": "1412839",
    "end": "1418779"
  },
  {
    "text": "on a whitelist which meant that we weren't actually pruning a bunch of the less common namespace resource types",
    "start": "1418779",
    "end": "1425369"
  },
  {
    "text": "this meant that whenever we adopted more kinds internally we would go through these really painful audits to make sure",
    "start": "1425369",
    "end": "1430929"
  },
  {
    "text": "it was safe to add a kind to our like whitelist that hadn't been there for years we would also have to then post",
    "start": "1430929",
    "end": "1436539"
  },
  {
    "text": "messages in our change log warning company other companies that they had to do the same and that frankly really",
    "start": "1436539",
    "end": "1441609"
  },
  {
    "text": "sucks when we decided to go with the whitelist approach at the beginning we thought we were being safe we thought we",
    "start": "1441609",
    "end": "1447099"
  },
  {
    "text": "were airing on the safe side by just deciding to delete less things that sound safe right",
    "start": "1447099",
    "end": "1452400"
  },
  {
    "text": "but in fact in a lot of ways it was more dangerous because it defied the developer expectations that we were",
    "start": "1452400",
    "end": "1457680"
  },
  {
    "text": "setting and it allowed resources to be leaked so there are mistakes and they're",
    "start": "1457680",
    "end": "1466380"
  },
  {
    "start": "1462000",
    "end": "1462000"
  },
  {
    "text": "just hard problems things that I'm sure you've all experienced so the first one to talk about is timeouts",
    "start": "1466380",
    "end": "1472110"
  },
  {
    "text": "so in our restart demo we saw a timeout and that one was obviously the users fault but there's a lot of situations",
    "start": "1472110",
    "end": "1477870"
  },
  {
    "text": "where it won't be if your container builder system builds large images and then you have a node that has to",
    "start": "1477870",
    "end": "1483510"
  },
  {
    "text": "download multiple large images at the same time you're gonna have right contention and that's gonna be slow maybe pause startup is gated by",
    "start": "1483510",
    "end": "1490440"
  },
  {
    "text": "connecting to a slow external resource may be a cluster issues who knows but inevitably developers will hit Riis",
    "start": "1490440",
    "end": "1496350"
  },
  {
    "text": "timeouts so the first time this happens developers like oh this is different let's investigate let's power up the",
    "start": "1496350",
    "end": "1501960"
  },
  {
    "text": "logging system the portal system let's get to the bottom of what's going on and by the time they figure it out could be",
    "start": "1501960",
    "end": "1507390"
  },
  {
    "text": "needs eventual convergence has converged they have a successful deployed like oh I was to knowing they had retried the",
    "start": "1507390",
    "end": "1512580"
  },
  {
    "text": "deployment it's idempotent it succeeds success somewhere around four or five times investigating they get upset they",
    "start": "1512580",
    "end": "1519780"
  },
  {
    "text": "stop trying to investigate and they just mash retry I've seen people hit that button like six times it's shocking but",
    "start": "1519780",
    "end": "1526590"
  },
  {
    "text": "this was our fault it wasn't theirs right like we didn't gave them no way to know like oh this timed out and it was",
    "start": "1526590",
    "end": "1531690"
  },
  {
    "text": "slow versus there's a failure so we added some nice icons to our CD system we always had the you know green",
    "start": "1531690",
    "end": "1538170"
  },
  {
    "text": "everything's good but never Li the red X meant timed out or failed and we said okay let's add one more and we did that",
    "start": "1538170",
    "end": "1544860"
  },
  {
    "text": "with this nice black clock so now red X means investigate now something's wrong the clock means okay we wouldn't like",
    "start": "1544860",
    "end": "1552450"
  },
  {
    "text": "you to investigate but if you mash retry we'll look the other way we did those",
    "start": "1552450",
    "end": "1557460"
  },
  {
    "text": "are the error codes by default success is zero one is failure and then we defined an error code for timeout and",
    "start": "1557460",
    "end": "1563090"
  },
  {
    "text": "there's no consensus on this like we looked at a bunch of tools and we picked 270 but I'm sure everybody has their own",
    "start": "1563090",
    "end": "1569429"
  },
  {
    "text": "opinion about what error code timeouts should have been the other tricky problem is actually with cube CTL apply",
    "start": "1569429",
    "end": "1575040"
  },
  {
    "text": "so if you haven't seen it before there's this last applied configuration notation and it only exists on the server right",
    "start": "1575040",
    "end": "1580740"
  },
  {
    "text": "it's not in your resources and so for developers out of sight out of mind so it looks like the",
    "start": "1580740",
    "end": "1586820"
  },
  {
    "text": "there it's a JSON blob is the value of this and it's essentially the last thing",
    "start": "1586820",
    "end": "1592100"
  },
  {
    "text": "you tried to apply but this doesn't like okay this is fine it's nice to know what that is but it gets used in some",
    "start": "1592100",
    "end": "1597350"
  },
  {
    "text": "interesting ways the first is pruning if that annotation is available on a resource it's considered eligible for",
    "start": "1597350",
    "end": "1603380"
  },
  {
    "start": "1599000",
    "end": "1599000"
  },
  {
    "text": "pruning so this is exactly what you want though right you're like you've deleted the thing from the file it used to be on the cluster you deploy to cut prove",
    "start": "1603380",
    "end": "1609590"
  },
  {
    "text": "success but during incidents well that's when everything goes out the window right humans start applying things and",
    "start": "1609590",
    "end": "1615950"
  },
  {
    "text": "forget to check them into repositories they start editing things go wrong and you don't notice that you next deploy",
    "start": "1615950",
    "end": "1620990"
  },
  {
    "text": "where you accidentally prune something you really wish you hadn't and then you're back in that first incident from the day ago the other fun one is the",
    "start": "1620990",
    "end": "1628580"
  },
  {
    "text": "three-way merge so I think my mental model when I start with kubernetes was there's live State on the cluster and",
    "start": "1628580",
    "end": "1633800"
  },
  {
    "text": "there's this thing here and keep CTL applied patches the live State and we're all happy but that's actually not the",
    "start": "1633800",
    "end": "1639440"
  },
  {
    "text": "real model there's the three-way merged I was mentioning so essentially kubernetes considers ownership of various fields",
    "start": "1639440",
    "end": "1645890"
  },
  {
    "text": "based on those values so where does this happen well we started all of our",
    "start": "1645890",
    "end": "1651470"
  },
  {
    "text": "applications with a static count of replicas right when you're first getting going adding auto scaling is just one more",
    "start": "1651470",
    "end": "1656510"
  },
  {
    "text": "complexity you don't need but eventually you get big and you need to control costs you need to make sure you scale up",
    "start": "1656510",
    "end": "1661670"
  },
  {
    "text": "in the middle the night or page an operator and you start adding HPA's and these things are fantastic I think we",
    "start": "1661670",
    "end": "1667220"
  },
  {
    "text": "all love them but you need to remove the static replica count from your deployment NFS so you deploy you don't",
    "start": "1667220",
    "end": "1674090"
  },
  {
    "text": "reset to some random number and then every PHP to kick back in and so if your mental model is well I just delete that",
    "start": "1674090",
    "end": "1679280"
  },
  {
    "text": "line and do a patch and because it's a patch everything's fine you totally miss the fact that the three-way merge says",
    "start": "1679280",
    "end": "1685700"
  },
  {
    "text": "oh no no no you used to own that field and now you don't so you want the default and the default one and yeah",
    "start": "1685700",
    "end": "1693320"
  },
  {
    "text": "then you get some temporary service outages until the HPA kicks you back up so the really exciting news is in 1/16",
    "start": "1693320",
    "end": "1700040"
  },
  {
    "text": "server-side apply went to beta and we're hoping that we stop stumbling into this space first in the near future so from",
    "start": "1700040",
    "end": "1707450"
  },
  {
    "text": "hard problems onto tips so these are some things that were that",
    "start": "1707450",
    "end": "1714080"
  },
  {
    "text": "we did that we're really happy with first of all we were very happy with our decision to use Ruby and we would use it",
    "start": "1714080",
    "end": "1719690"
  },
  {
    "text": "again if we started from scratch today building cooling for kubernetes doesn't mean you need to write and go another",
    "start": "1719690",
    "end": "1726200"
  },
  {
    "text": "thing that has been working well for us is the realization that there are a lot of transient errors in systems like these and most of the time they're not",
    "start": "1726200",
    "end": "1732710"
  },
  {
    "text": "worth bringing to the attention of developers there are a lot of places in our code where we're able to ignore errors we get back from the API server",
    "start": "1732710",
    "end": "1739010"
  },
  {
    "text": "and just try again later notably in the next polling cycle another pattern that we really like is",
    "start": "1739010",
    "end": "1745520"
  },
  {
    "text": "using annotations directly on resources as a mechanism for letting developers communicate resource specific settings",
    "start": "1745520",
    "end": "1751070"
  },
  {
    "text": "to us we actually saw one of these in the demos when Danny showed you the annotation that you can add to your deployments to tell our crane restart",
    "start": "1751070",
    "end": "1758420"
  },
  {
    "text": "command to target those ones by default another tip on the theme of",
    "start": "1758420",
    "end": "1763700"
  },
  {
    "text": "customization is about logging since our default output is very developer focused we want to keep it simple and clear this",
    "start": "1763700",
    "end": "1770630"
  },
  {
    "text": "means that when we want to use output to debug crane itself our default output pretty useless so to address this we use",
    "start": "1770630",
    "end": "1777020"
  },
  {
    "text": "an environment variable to enable debug debug level logging and that gives us all kinds of extra information including",
    "start": "1777020",
    "end": "1782660"
  },
  {
    "text": "about all the API calls we're making my final tip is that if you're running a open source kubernetes tool definitely",
    "start": "1782660",
    "end": "1789650"
  },
  {
    "text": "consider making an official supported versions list and setting up a CI cluster for each one of those versions our test suite does dozens and dozens of",
    "start": "1789650",
    "end": "1796940"
  },
  {
    "text": "deploys to each of our supported versions and I can't tell you how many bugs that has caught and how much reassurance that has provided us so to",
    "start": "1796940",
    "end": "1806060"
  },
  {
    "text": "wrap up crane is our developer centric deploy tooling it's highly scalable we",
    "start": "1806060",
    "end": "1811250"
  },
  {
    "text": "have namespaces with thousands of pods hundreds of services and hundreds of deployments if you're saying we need",
    "start": "1811250",
    "end": "1816560"
  },
  {
    "text": "something bigger than that let us know we want a new challenge it's open source if you found this exciting we'd love to",
    "start": "1816560",
    "end": "1822650"
  },
  {
    "text": "have you contribute that to have you use it it comes really exciting we're hiring you can contribute from the inside and",
    "start": "1822650",
    "end": "1828920"
  },
  {
    "text": "with that we're easy to find we're on github at Shopify slash crane where the kübra days slack channel as",
    "start": "1828920",
    "end": "1834590"
  },
  {
    "text": "Crane and we have a ton of developers and this is all I could fit on a slide so I want to thank them and all the rest",
    "start": "1834590",
    "end": "1840200"
  },
  {
    "text": "of you as well as been here for coming up with crane this our new name and with that I'd love to take",
    "start": "1840200",
    "end": "1845450"
  },
  {
    "text": "questions thank you thank you very much",
    "start": "1845450",
    "end": "1850450"
  }
]