[
  {
    "text": "hi welcome to cubecon 2021 in los angeles this session is about running",
    "start": "80",
    "end": "5279"
  },
  {
    "text": "workloads at edge in a new way using webassembly with kubernetes",
    "start": "5279",
    "end": "10719"
  },
  {
    "text": "you're about to get updates from uh i'm steve wong with vmware representing",
    "start": "10719",
    "end": "17199"
  },
  {
    "text": "the kubernetes iot edge working group i'm joined by dan bosinek of red hat and",
    "start": "17199",
    "end": "23119"
  },
  {
    "text": "kilton hopkins of edgeworks but they couldn't be here physically but they graciously prepared recordings",
    "start": "23119",
    "end": "31039"
  },
  {
    "text": "which will be patching in and they're going to be online for the q a section",
    "start": "31039",
    "end": "38079"
  },
  {
    "text": "the agenda we're going to do a brief intro to what web assembly is why and where it might be useful",
    "start": "39040",
    "end": "45600"
  },
  {
    "text": "then dion and kilton jumped hands on and tried out webassembly with kubernetes and they're",
    "start": "45600",
    "end": "52800"
  },
  {
    "text": "going to give a report on what the current experience and future potential is like",
    "start": "52800",
    "end": "58480"
  },
  {
    "text": "we'll wrap up with links on how you can join the working group of people trying to apply kubernetes at edge",
    "start": "58480",
    "end": "67119"
  },
  {
    "text": "what is web assembly well it's an open standard for portable programs that can",
    "start": "67119",
    "end": "72240"
  },
  {
    "text": "be written in almost any language they are extremely portable a web assembly can be run unchanged on arm x86 and",
    "start": "72240",
    "end": "80320"
  },
  {
    "text": "other cpus and they're also not locked into an os",
    "start": "80320",
    "end": "85360"
  },
  {
    "text": "web assembly was originally designed to run inside of a web browser in a safe way",
    "start": "85360",
    "end": "90799"
  },
  {
    "text": "but people discovered that it was also useful as a portable and efficient way",
    "start": "90799",
    "end": "96479"
  },
  {
    "text": "to run sandbox code in other places far beyond the browser contacts",
    "start": "96479",
    "end": "102000"
  },
  {
    "text": "these r the runtimes that uh support web assembly range down to support tiny os less",
    "start": "102000",
    "end": "110119"
  },
  {
    "text": "microcontrollers you know the kinds of things that might cost eight dollars and run for two years on a",
    "start": "110119",
    "end": "116560"
  },
  {
    "text": "on a coin cell battery um all these aspects make them attractive",
    "start": "116560",
    "end": "121759"
  },
  {
    "text": "for running on devices with constrained resources",
    "start": "121759",
    "end": "126799"
  },
  {
    "text": "uh so how does webassembly compare to docker well solomon hikes uh who's often",
    "start": "127520",
    "end": "133680"
  },
  {
    "text": "credited as being the inventor of docker has been quoted as saying that if web",
    "start": "133680",
    "end": "138720"
  },
  {
    "text": "assembly existed in 2008 docker wouldn't have been needed",
    "start": "138720",
    "end": "143920"
  },
  {
    "text": "now docker is much more mature and perhaps at this point",
    "start": "143920",
    "end": "149150"
  },
  {
    "text": "[Music] you know locked into some decisions and use cases but",
    "start": "149150",
    "end": "155519"
  },
  {
    "text": "people have found issues with attempting to run docker containers at edge",
    "start": "155519",
    "end": "161360"
  },
  {
    "text": "on low resource devices web assembly has a few attributes that",
    "start": "161360",
    "end": "167120"
  },
  {
    "text": "position it behind docker it's less mature it doesn't have the supporting",
    "start": "167120",
    "end": "172480"
  },
  {
    "text": "landscape but it's also got these attributes that you can read on the slide that",
    "start": "172480",
    "end": "178800"
  },
  {
    "text": "potentially position it ahead of docker for these edge use cases",
    "start": "178800",
    "end": "183920"
  },
  {
    "text": "i'll tell you that i got in here at kubecon on saturday for the rejects conference",
    "start": "183920",
    "end": "189599"
  },
  {
    "text": "and by my read the hallway track here has",
    "start": "189599",
    "end": "195360"
  },
  {
    "text": "pretty much a third of the cool kids talking about web assembly this this just has a feel",
    "start": "195360",
    "end": "201680"
  },
  {
    "text": "about it that something big could happen here um it feels to me a lot like what docker",
    "start": "201680",
    "end": "209040"
  },
  {
    "text": "was like circa 20 2013.",
    "start": "209040",
    "end": "214080"
  },
  {
    "text": "now one of docker's advantages is the maturity in the supporting landscape but",
    "start": "214080",
    "end": "219519"
  },
  {
    "text": "what if the existing tools things like kubernetes could be adapted to",
    "start": "219519",
    "end": "226080"
  },
  {
    "text": "do similar the same kinds of things they do with docker containers but for web assemblies",
    "start": "226080",
    "end": "232480"
  },
  {
    "text": "uh could that be made to work well you're about to see some demos where a couple people went out there and checked",
    "start": "232480",
    "end": "238560"
  },
  {
    "text": "it out and the quick answer is yes but is it perfect no",
    "start": "238560",
    "end": "244720"
  },
  {
    "text": "um you know so it's hard to predict what will happen exactly",
    "start": "244720",
    "end": "251519"
  },
  {
    "text": "this could be optimized and docker turns out to be the perfect orchestrator for web assemblies or we could have a replay",
    "start": "252080",
    "end": "259359"
  },
  {
    "text": "of the orchestrator wars that came about in the early days of containers i'm not going to pretend that i've got the",
    "start": "259359",
    "end": "265280"
  },
  {
    "text": "answers to that another observation is that you know",
    "start": "265280",
    "end": "271360"
  },
  {
    "text": "almost 20 years ago we had technology like mapreduce and hadoop",
    "start": "271360",
    "end": "277040"
  },
  {
    "text": "bringing bringing compute to the data in that case it was to avoid expensive",
    "start": "277040",
    "end": "283280"
  },
  {
    "text": "transport of the data and edge has something similar going on",
    "start": "283280",
    "end": "288880"
  },
  {
    "text": "it they'd like to avoid the big network transport cost but a lot of this is about latency",
    "start": "288880",
    "end": "295440"
  },
  {
    "text": "and resilience and web assembly looks like a good way to bring compute",
    "start": "295440",
    "end": "300800"
  },
  {
    "text": "close to sources that are dealing with data sensors and data generation and event",
    "start": "300800",
    "end": "307600"
  },
  {
    "text": "generation um so i don't know why am i wearing this crazy",
    "start": "307600",
    "end": "314560"
  },
  {
    "text": "suit i'm wondering that myself it's pretty uncomfortable it's a plastic halloween costume",
    "start": "314560",
    "end": "319840"
  },
  {
    "text": "but i think the potential here is really big you know the the original uh",
    "start": "319840",
    "end": "326800"
  },
  {
    "text": "kubernetes was designed for giant data centers where you would pool resource",
    "start": "326800",
    "end": "332400"
  },
  {
    "text": "and uh use that pooling to gain efficiency and operation at a large scale",
    "start": "332400",
    "end": "338560"
  },
  {
    "text": "in a way edge is similar but different you know it isn't really pooling",
    "start": "338560",
    "end": "343840"
  },
  {
    "text": "resources it's the opposite of it but you're managing containers as a",
    "start": "343840",
    "end": "349120"
  },
  {
    "text": "at a large scale if somebody can bring about this whole big picture of putting",
    "start": "349120",
    "end": "354160"
  },
  {
    "text": "code in webassembly and managing to manage and govern it at scale",
    "start": "354160",
    "end": "359840"
  },
  {
    "text": "this has the potential to not just be like the existing cloud this is as",
    "start": "359840",
    "end": "365919"
  },
  {
    "text": "disruptive as a new type of cloud and i think that that there's a chance that",
    "start": "365919",
    "end": "371600"
  },
  {
    "text": "could happen so in the demos you're about to see i'm",
    "start": "371600",
    "end": "376639"
  },
  {
    "text": "just gonna advance this if you can read fast fine but i put it in the deck so you can look at it later but we're going",
    "start": "376639",
    "end": "382080"
  },
  {
    "text": "to cover a lot of things so right now i'll bring on dion of red hat",
    "start": "382080",
    "end": "391039"
  },
  {
    "text": "okay it's demo time and today we actually have two demos",
    "start": "391039",
    "end": "396560"
  },
  {
    "text": "the first demo will show how we can use container technologies at the edge today and what",
    "start": "396560",
    "end": "403600"
  },
  {
    "text": "are the some some of the specifics of that use case we'll talk about different uh",
    "start": "403600",
    "end": "410319"
  },
  {
    "text": "cpu architectures and how we can allow our workloads to to",
    "start": "410319",
    "end": "417280"
  },
  {
    "text": "access the peripherals because our edge use cases",
    "start": "417280",
    "end": "422800"
  },
  {
    "text": "most likely would like to to access uh some sensors or or or some",
    "start": "422800",
    "end": "430319"
  },
  {
    "text": "peripherals that's the main use case so let's start with the with the with the actual example that we're going",
    "start": "430319",
    "end": "436720"
  },
  {
    "text": "to use this is a simple python script that uses the the dht sensor attached to the",
    "start": "436720",
    "end": "443840"
  },
  {
    "text": "gpio gpio",
    "start": "443840",
    "end": "449080"
  },
  {
    "text": "interface and that script basically reads the the temperature and humidity values from the",
    "start": "450000",
    "end": "457440"
  },
  {
    "text": "script and formats a json payload and send that",
    "start": "457440",
    "end": "462639"
  },
  {
    "text": "that payload to our uh cloud the draw cloud in this",
    "start": "462639",
    "end": "467840"
  },
  {
    "text": "particular instance as we will see we will see soon",
    "start": "467840",
    "end": "472960"
  },
  {
    "text": "so what do we need to do now in order to to build this and run this on raspberry pi",
    "start": "472960",
    "end": "479440"
  },
  {
    "text": "as you can see here i am currently running an os x system",
    "start": "479440",
    "end": "485120"
  },
  {
    "text": "uh which is an x88 platform in this in this instance",
    "start": "485120",
    "end": "490240"
  },
  {
    "text": "and i want to build an image that that will run on our on a raspberry pi there are multiple ways",
    "start": "490240",
    "end": "497440"
  },
  {
    "text": "that that we can we can do that like getting a proper",
    "start": "497440",
    "end": "504240"
  },
  {
    "text": "proper virtual uh uh machine that will that will do the build but but fortunately for example",
    "start": "504319",
    "end": "511599"
  },
  {
    "text": "doc docker buildex tool can help us here and as you can see in this example uh we can provide a",
    "start": "511599",
    "end": "518880"
  },
  {
    "text": "platform as a as a parameter to to the build and build the image of a appropriate",
    "start": "518880",
    "end": "526800"
  },
  {
    "text": "appropriate architecture that can can be run",
    "start": "526800",
    "end": "533440"
  },
  {
    "text": "on on an arm platform right so",
    "start": "533440",
    "end": "538800"
  },
  {
    "text": "so now that we have this we actually want to run this script and allow it to",
    "start": "542240",
    "end": "549360"
  },
  {
    "text": "access a gpio right and for that",
    "start": "549360",
    "end": "555040"
  },
  {
    "text": "we can do we need to do do things we need to run our container",
    "start": "555040",
    "end": "561120"
  },
  {
    "text": "in a privileged mode and we want to enable specifically",
    "start": "561120",
    "end": "567760"
  },
  {
    "text": "a device that will be that will be",
    "start": "567760",
    "end": "573600"
  },
  {
    "text": "accessible from our container and in this case this this is the the dev gpio0",
    "start": "574880",
    "end": "582600"
  },
  {
    "text": "so as you can see now uh in a raspberry pi console we have a container that's running",
    "start": "583600",
    "end": "591760"
  },
  {
    "text": "this this container and if you take a look at the the logs",
    "start": "591760",
    "end": "597040"
  },
  {
    "text": "you can see that that we are successfully reading the sensor from the container and sending the data to the",
    "start": "597040",
    "end": "602320"
  },
  {
    "text": "cloud we won't spend too much time on the cloud today because it's not the main topic but you can say that",
    "start": "602320",
    "end": "609279"
  },
  {
    "text": "there's a there's a kubernetes uh iot cloud platform called draw iot",
    "start": "609279",
    "end": "615519"
  },
  {
    "text": "that can accept a different kind of payloads and this in this example we used",
    "start": "615519",
    "end": "622240"
  },
  {
    "text": "uh we use this payload so you can see that that our our data",
    "start": "622240",
    "end": "628320"
  },
  {
    "text": "are being sent from the uh from our",
    "start": "628320",
    "end": "633680"
  },
  {
    "text": "device moreover uh there's uh there's an example of the",
    "start": "633680",
    "end": "639200"
  },
  {
    "text": "quarkus application that we can use to build our backend applications that",
    "start": "639200",
    "end": "644399"
  },
  {
    "text": "will connect to the cloud in this case the force application uses the mqtt",
    "start": "644399",
    "end": "649440"
  },
  {
    "text": "integration provided provided by the by the pro cloud so you can find more information about all this",
    "start": "649440",
    "end": "655680"
  },
  {
    "text": "uh in the links that will be provided uh in in the slides",
    "start": "655680",
    "end": "662959"
  },
  {
    "text": "so finally so now we can see that we have our container that that is running",
    "start": "662959",
    "end": "669440"
  },
  {
    "text": "uh it's accessing the peripherals it accessing the cloud so how we're going to schedule that",
    "start": "669440",
    "end": "675920"
  },
  {
    "text": "there are multiple ways and we we covered some of them in the slides",
    "start": "675920",
    "end": "682720"
  },
  {
    "text": "of this session the simplest way could be to provide a simple system control",
    "start": "682720",
    "end": "689440"
  },
  {
    "text": "uh system control settings that will allow us to to run this",
    "start": "689440",
    "end": "694880"
  },
  {
    "text": "uh to run this every time we",
    "start": "694880",
    "end": "700480"
  },
  {
    "text": "uh that a device reboots right so so we provide a simple",
    "start": "700480",
    "end": "706320"
  },
  {
    "text": "system control uh entry that will run our container every time",
    "start": "706320",
    "end": "712320"
  },
  {
    "text": "uh the docker service starts every time the the raspberry pi reboots",
    "start": "712320",
    "end": "718079"
  },
  {
    "text": "this is like a super minimal minimal uh possible",
    "start": "718079",
    "end": "723680"
  },
  {
    "text": "scheduling so to say of the system but something like io folk using a lightweight uh kubernetes like like",
    "start": "723680",
    "end": "731279"
  },
  {
    "text": "kts or or uh some other uh system like ansible is usually a",
    "start": "731279",
    "end": "737600"
  },
  {
    "text": "better solution and that's that's a topic for for some other day",
    "start": "737600",
    "end": "745279"
  },
  {
    "text": "that concludes our containers at the edge demo for today",
    "start": "745279",
    "end": "750320"
  },
  {
    "text": "and for a change of pace we will create a second demo now",
    "start": "750320",
    "end": "756240"
  },
  {
    "text": "in which we will uh compare the state of west sun this web assembly",
    "start": "756240",
    "end": "761519"
  },
  {
    "text": "today how they compare to containers how we can run them uh in the kubernetes environment and",
    "start": "761519",
    "end": "768880"
  },
  {
    "text": "if and how we can we can uh use them uh",
    "start": "768880",
    "end": "774959"
  },
  {
    "text": "at the edge edge today so in order to run uh",
    "start": "774959",
    "end": "780399"
  },
  {
    "text": "web assembly payloads in kubernetes uh we will use the classlet project uh",
    "start": "780399",
    "end": "787200"
  },
  {
    "text": "which is a are currently a cncf uh sandbox project",
    "start": "787200",
    "end": "792880"
  },
  {
    "text": "and the class basically allows us to to to add a node",
    "start": "792880",
    "end": "798160"
  },
  {
    "text": "to to the kubernetes cluster which will be able to run",
    "start": "798160",
    "end": "803200"
  },
  {
    "text": "webassembly payloads in a in a vasey environment as we explained earlier in",
    "start": "803200",
    "end": "809120"
  },
  {
    "text": "earlier in the slides right so in order to start the demo",
    "start": "809120",
    "end": "814959"
  },
  {
    "text": "i will use my uh kubernetes",
    "start": "814959",
    "end": "821120"
  },
  {
    "text": "on the desktop on the on the o6 desktop and as you can see here i have",
    "start": "821120",
    "end": "827279"
  },
  {
    "text": "one additional node here which is currently not",
    "start": "827279",
    "end": "833440"
  },
  {
    "text": "not active right so in order to to start this node i need",
    "start": "833440",
    "end": "838639"
  },
  {
    "text": "to start crossfit by executing trusted",
    "start": "838639",
    "end": "844000"
  },
  {
    "text": "command and providing some basic bootstrap",
    "start": "844000",
    "end": "849360"
  },
  {
    "text": "booster configuration once the classic vez is running we will see",
    "start": "849360",
    "end": "856639"
  },
  {
    "text": "that our node is now is ready and as you can see this is a special",
    "start": "856639",
    "end": "862800"
  },
  {
    "text": "container runtime uh which means that this",
    "start": "862800",
    "end": "868160"
  },
  {
    "text": "this node will be able to run to run a vasem",
    "start": "868160",
    "end": "874639"
  },
  {
    "text": "vessel payloads so with this",
    "start": "874639",
    "end": "880560"
  },
  {
    "text": "we have our basic infrastructure we have a kubernetes running with a with a board",
    "start": "880560",
    "end": "886000"
  },
  {
    "text": "control plane and and uh in the worker node that can run payloads",
    "start": "886000",
    "end": "891920"
  },
  {
    "text": "and now let's take a look at the concrete payload that we want to run so i prepared a small",
    "start": "891920",
    "end": "898720"
  },
  {
    "text": "cloud events as the example this is",
    "start": "898720",
    "end": "903839"
  },
  {
    "text": "this is the project that will emit cloud events",
    "start": "903839",
    "end": "909279"
  },
  {
    "text": "to to the cloud and and receive in parse responses as as as a cloud events as well",
    "start": "909680",
    "end": "916079"
  },
  {
    "text": "one of the reasons uh why we we are not being able to replicate the original",
    "start": "916079",
    "end": "922160"
  },
  {
    "text": "project is that as we said the versi at the moment is is not is not uh uh uh",
    "start": "922160",
    "end": "929759"
  },
  {
    "text": "able to to access uh sockets or or peripherals like like like a gpio",
    "start": "929759",
    "end": "937839"
  },
  {
    "text": "but i expect this to change in the future and we will definitely follow up uh with a similar example",
    "start": "937839",
    "end": "945360"
  },
  {
    "text": "that that will do this for now we will use uh the experimental http library",
    "start": "945360",
    "end": "952839"
  },
  {
    "text": "uh and uh connected to the to the cloud events sdk also written in in rust",
    "start": "952839",
    "end": "960959"
  },
  {
    "text": "and and provide a way to to basically serialize the serialized cloud events",
    "start": "960959",
    "end": "966560"
  },
  {
    "text": "from the from the http requests uh and and",
    "start": "966560",
    "end": "971839"
  },
  {
    "text": "responses as you can see here uh we have a uh our",
    "start": "971839",
    "end": "976959"
  },
  {
    "text": "event builder that that will create create a appropriate we want to send",
    "start": "976959",
    "end": "983600"
  },
  {
    "text": "and we can easily convert that into the http request that that can be used by the",
    "start": "983600",
    "end": "990560"
  },
  {
    "text": "experimental library we'll then uh post that to the",
    "start": "990560",
    "end": "997360"
  },
  {
    "text": "uh to the cloud and uh appropriately uh try to serialize uh and and uh",
    "start": "997360",
    "end": "1004959"
  },
  {
    "text": "parse the cloud event from the from the uh from the from the response right",
    "start": "1004959",
    "end": "1012240"
  },
  {
    "text": "so what we need to do now uh to actually",
    "start": "1012240",
    "end": "1017680"
  },
  {
    "text": "uh build this uh payload uh as a and run it",
    "start": "1017680",
    "end": "1023279"
  },
  {
    "text": "run it as a kubernetes board that's that's that's the real question right",
    "start": "1023279",
    "end": "1030160"
  },
  {
    "text": "so in order to do that uh we we",
    "start": "1030160",
    "end": "1036319"
  },
  {
    "text": "have to uh compile it uh with a with that with a special rust",
    "start": "1036319",
    "end": "1043038"
  },
  {
    "text": "target hope uh luckily uh rust comes with a good",
    "start": "1043039",
    "end": "1049200"
  },
  {
    "text": "support for for the multiple architectures and uh what you need to do here is",
    "start": "1049200",
    "end": "1055679"
  },
  {
    "text": "actually only install peasant 32 vesic target and use that target to to build",
    "start": "1055679",
    "end": "1063120"
  },
  {
    "text": "our to build our binary right so let's try this i mean uh",
    "start": "1063120",
    "end": "1069520"
  },
  {
    "text": "i have the target already installed at my machine as you can see here so",
    "start": "1069520",
    "end": "1074640"
  },
  {
    "text": "that's all good now we can go and try to build",
    "start": "1074640",
    "end": "1079760"
  },
  {
    "text": "build our program our our workload uh this will take a little bit but",
    "start": "1079760",
    "end": "1088000"
  },
  {
    "text": "as a result we will uh our our cargo builder will actually provide a a",
    "start": "1088000",
    "end": "1094480"
  },
  {
    "text": "buzzing binary that uh that can be run in a you know you know in a vasey",
    "start": "1094480",
    "end": "1099919"
  },
  {
    "text": "environment and one example of that environment is called vasam wasn't time",
    "start": "1099919",
    "end": "1106160"
  },
  {
    "text": "and that's actually used by the crossfit as well uh to to execute these binaries",
    "start": "1106160",
    "end": "1112240"
  },
  {
    "text": "if you take a look at the payload now uh one interesting thing to see here is is the size of this payload and it's only",
    "start": "1112240",
    "end": "1119760"
  },
  {
    "text": "three megabytes which will be important for our later",
    "start": "1119760",
    "end": "1127039"
  },
  {
    "text": "later discussion but at the moment we our job is not done yet because what",
    "start": "1127039",
    "end": "1134480"
  },
  {
    "text": "you need to do is actually to uh we need to convert this uh",
    "start": "1134480",
    "end": "1142559"
  },
  {
    "text": "vessel binary into a container into an oci container that actually can be",
    "start": "1142559",
    "end": "1148240"
  },
  {
    "text": "pulled pulled by the by the grassland luckily for that there's a resin osci",
    "start": "1148240",
    "end": "1154240"
  },
  {
    "text": "tool that can help us to to provide uh to convert this",
    "start": "1154240",
    "end": "1159440"
  },
  {
    "text": "to appropriate image as you can see here and and push that to to the container",
    "start": "1159440",
    "end": "1165440"
  },
  {
    "text": "registry uh it's important to say here that not all container registry registers they",
    "start": "1165440",
    "end": "1172080"
  },
  {
    "text": "support all this but the",
    "start": "1172080",
    "end": "1177200"
  },
  {
    "text": "github one that i i was using uh is supporting it another another",
    "start": "1177200",
    "end": "1182559"
  },
  {
    "text": "important thing is you can see here that the size of this container is basically the size of the of the vessel binary so",
    "start": "1182559",
    "end": "1188880"
  },
  {
    "text": "it's a three megabytes right and if you compare that to to any kind",
    "start": "1188880",
    "end": "1194559"
  },
  {
    "text": "of container even even though the simple one we we run previously it's a",
    "start": "1194559",
    "end": "1200720"
  },
  {
    "text": "it's it's a it's a quite a big difference there are tools that can help us to to",
    "start": "1200720",
    "end": "1207679"
  },
  {
    "text": "minimize the size of all the containers but but even with all that i i expect",
    "start": "1207679",
    "end": "1213520"
  },
  {
    "text": "the size difference to be to be at least an order of my",
    "start": "1213520",
    "end": "1219919"
  },
  {
    "text": "magnitude uh different and that could be one of the big advantages of of using uh using",
    "start": "1219919",
    "end": "1226880"
  },
  {
    "text": "basm in in agile environments because it it really takes a a very little very little uh",
    "start": "1226880",
    "end": "1235919"
  },
  {
    "text": "size of the container and it's easy easier to schedule over the over the",
    "start": "1235919",
    "end": "1241919"
  },
  {
    "text": "over the networks so now we have to schedule this",
    "start": "1241919",
    "end": "1246960"
  },
  {
    "text": "this container is a pod and i have an example of that here so you can see we will pull",
    "start": "1246960",
    "end": "1252480"
  },
  {
    "text": "our our image but the important part here is is this the tolerations",
    "start": "1252480",
    "end": "1257919"
  },
  {
    "text": "section and that basically tells us that this",
    "start": "1257919",
    "end": "1263760"
  },
  {
    "text": "payload uh is is a vessel to vasi architecture and that we need to",
    "start": "1263760",
    "end": "1268880"
  },
  {
    "text": "schedule that or on a proper node that supports that uh uh",
    "start": "1268880",
    "end": "1274240"
  },
  {
    "text": "that architecture and and what basically uh this means is that when we applied",
    "start": "1274240",
    "end": "1280080"
  },
  {
    "text": "this uh uh this pod and and uh add it to our kubernetes to execute it it will",
    "start": "1280080",
    "end": "1286159"
  },
  {
    "text": "actually schedule schedule the pod uh on our on our uh",
    "start": "1286159",
    "end": "1291840"
  },
  {
    "text": "crosslit uh uh crossfit node as as you can see",
    "start": "1291840",
    "end": "1297120"
  },
  {
    "text": "as you can see here that's that that's the the exact node that we that we started uh started earlier",
    "start": "1297120",
    "end": "1304400"
  },
  {
    "text": "now we can see that if the bot is actually running properly",
    "start": "1304400",
    "end": "1310399"
  },
  {
    "text": "and as we can see here uh it is right so we",
    "start": "1311120",
    "end": "1316840"
  },
  {
    "text": "create our every couple of seconds we create our cloud event",
    "start": "1316840",
    "end": "1323200"
  },
  {
    "text": "and then we serialize it to a proper a proper",
    "start": "1323200",
    "end": "1328960"
  },
  {
    "text": "http request by the cloud event specification pause that uh",
    "start": "1328960",
    "end": "1335280"
  },
  {
    "text": "to the appropriate the service and then parse the parse response back right and",
    "start": "1335280",
    "end": "1341520"
  },
  {
    "text": "that that works properly and that concludes our vessel demo",
    "start": "1341520",
    "end": "1348000"
  },
  {
    "text": "just to repeat uh we saw how to use uh the interested time so we have",
    "start": "1348000",
    "end": "1355280"
  },
  {
    "text": "time for q a and jump to kilton's but he was showing a slide with resources and i'll close the presentation with that so",
    "start": "1355280",
    "end": "1362720"
  },
  {
    "text": "next up kilton hopkins uh cto of edgeworks and he's also lead of the",
    "start": "1362720",
    "end": "1368159"
  },
  {
    "text": "ioflog project under the eclipse foundation and it's an industrial computer that is uh sitting inside your",
    "start": "1368159",
    "end": "1375679"
  },
  {
    "text": "smart factory in that yeah i think",
    "start": "1375679",
    "end": "1382240"
  },
  {
    "text": "this started playing mid streams let me see if i could it's an industrial",
    "start": "1382240",
    "end": "1387840"
  },
  {
    "text": "computer that is uh sitting inside your smart factory in that situation on top of the host",
    "start": "1387840",
    "end": "1394080"
  },
  {
    "text": "debian os choose a webassembly runtime and you're good that's not the only thing you need something has to",
    "start": "1394080",
    "end": "1400640"
  },
  {
    "text": "coordinate play the role similar to what cubelet plays so what is the agent that's going to start up shut down and",
    "start": "1400640",
    "end": "1407280"
  },
  {
    "text": "monitor the status of the webassembly modules that agent is going to do your workload management and your workload",
    "start": "1407280",
    "end": "1413679"
  },
  {
    "text": "administration at the edge so a lot of opportunities for that and i'm going to get into a couple more slides talking",
    "start": "1413679",
    "end": "1420240"
  },
  {
    "text": "about some specific uh open source projects that are going in that direction are going to add that capability",
    "start": "1420240",
    "end": "1426480"
  },
  {
    "text": "but you also need to have edge connectivity handling so here's a situation where a pure",
    "start": "1426480",
    "end": "1431760"
  },
  {
    "text": "kubernetes environment might not be suitable and this has to do with the edge not doesn't have to do particularly",
    "start": "1431760",
    "end": "1437679"
  },
  {
    "text": "with the web assembly but just something to note in a pure kubernetes environment you",
    "start": "1437679",
    "end": "1443440"
  },
  {
    "text": "have what i would call the standard issue cubelet and uh the communication",
    "start": "1443440",
    "end": "1448799"
  },
  {
    "text": "on back to the remainder of the system the master and so on is going to be rather",
    "start": "1448799",
    "end": "1455279"
  },
  {
    "text": "fast and frequent uh in an edge environment that's probably not suitable what you would",
    "start": "1455279",
    "end": "1460799"
  },
  {
    "text": "rather have is a lighter amount of traffic with a little bit more tolerance for breaks and connectivity or limited",
    "start": "1460799",
    "end": "1467840"
  },
  {
    "text": "bandwidth etc in some cases pure disconnection i'm offline for two days",
    "start": "1467840",
    "end": "1473200"
  },
  {
    "text": "but i'm still listed as an active node and nothing no pod is getting evicted from that node because",
    "start": "1473200",
    "end": "1479919"
  },
  {
    "text": "it's understood that it will be checking in uh maybe every couple of days it's a really good example of edge connectivity",
    "start": "1479919",
    "end": "1485919"
  },
  {
    "text": "environment problem so choose an edge native technology if you have an edge environment that is not",
    "start": "1485919",
    "end": "1492320"
  },
  {
    "text": "suitable in terms of bandwidth and always on connection for being able to deploy directly",
    "start": "1492320",
    "end": "1498400"
  },
  {
    "text": "your kubernetes environment out to that edge location of course if you run all of kubernetes on the edge um then",
    "start": "1498400",
    "end": "1504960"
  },
  {
    "text": "including something like microcades or k3s then it's different because now you talk about land traffic but that still",
    "start": "1504960",
    "end": "1511279"
  },
  {
    "text": "may not be suitable for devices that are on low power wireless etc etc just something to think about",
    "start": "1511279",
    "end": "1516480"
  },
  {
    "text": "and so then the last requirement is you're going to need a repository of the binary code the wasm files similar to",
    "start": "1516480",
    "end": "1523039"
  },
  {
    "text": "docker hub for docker containers right so where are you storing how are you serving how are you verifying the",
    "start": "1523039",
    "end": "1528640"
  },
  {
    "text": "integrity of uh when you're going to get out into production and that scale these are all pieces needed so since we have",
    "start": "1528640",
    "end": "1535279"
  },
  {
    "text": "the requirements now let's actually talk about the types of edge deployments where where and you might want to use webassembly",
    "start": "1535279",
    "end": "1542960"
  },
  {
    "text": "for the purposes of this presentation there are two types of edge deployment that you need to worry about",
    "start": "1542960",
    "end": "1549120"
  },
  {
    "text": "in the first type it's no edge device interfacing required it's all about",
    "start": "1549120",
    "end": "1555520"
  },
  {
    "text": "latency benefits bandwidth constraint benefits security privacy in other words i'm",
    "start": "1555520",
    "end": "1562799"
  },
  {
    "text": "going to take a workload and i want to take it package it as a webassembly module and i want to push it to an edge",
    "start": "1562799",
    "end": "1569039"
  },
  {
    "text": "node that is close to where people will consume it so on the lan",
    "start": "1569039",
    "end": "1574640"
  },
  {
    "text": "as a a web interface for people to do real-time voting interaction uh for some",
    "start": "1574640",
    "end": "1582400"
  },
  {
    "text": "entertainment purpose great it's just a box on the edge if it's on the network",
    "start": "1582400",
    "end": "1587520"
  },
  {
    "text": "it's fine it doesn't have any specific interfacing with an edge device it's just just a network layer",
    "start": "1587520",
    "end": "1593600"
  },
  {
    "text": "but that's not that many edge use cases that's just some",
    "start": "1593600",
    "end": "1599279"
  },
  {
    "text": "the vast majority of edge use cases are the second type here which i've listed as processing data from edge devices",
    "start": "1599279",
    "end": "1606400"
  },
  {
    "text": "here you're actually taking in some kind of sensor data you're talking to a",
    "start": "1606400",
    "end": "1611600"
  },
  {
    "text": "camera you're doing some actuation maybe you're using the the gpio pins of a board in",
    "start": "1611600",
    "end": "1617200"
  },
  {
    "text": "order to drive led indicators or take in data from microphone there's all kinds of possibilities",
    "start": "1617200",
    "end": "1623120"
  },
  {
    "text": "here is where you actually need an interface layer so wazi is going to be required or washi or similar some",
    "start": "1623120",
    "end": "1629440"
  },
  {
    "text": "similar concept and now the host environment becomes application specific what i mean by that",
    "start": "1629440",
    "end": "1634960"
  },
  {
    "text": "is you can't just pick any old edge node you have to pick the edge node that has the camera that you want and so um",
    "start": "1634960",
    "end": "1642000"
  },
  {
    "text": "that's something to keep in mind about edge deployments with webassembly or otherwise is that you have to have the",
    "start": "1642000",
    "end": "1648240"
  },
  {
    "text": "right stuff in place in the right places on the globe in order to get the data that you want and then you have to find",
    "start": "1648240",
    "end": "1653760"
  },
  {
    "text": "a way to interface this is reminiscent of like with android with uh the the hardware abstraction",
    "start": "1653760",
    "end": "1660640"
  },
  {
    "text": "interface uh there so the hidl the hardware abstraction layer interface definition language how am i defining",
    "start": "1660640",
    "end": "1668399"
  },
  {
    "text": "the way for um calls like open camera and git frame and so on to interface",
    "start": "1668399",
    "end": "1674159"
  },
  {
    "text": "with the actual hardware and so this is work to be done because this is not ready this is not out there",
    "start": "1674159",
    "end": "1679760"
  },
  {
    "text": "universal ready for you to use if your edge deployment is this type of edge deployment",
    "start": "1679760",
    "end": "1684960"
  },
  {
    "text": "think about how you're going to access the special edge resources that you want to actually process the data from with",
    "start": "1684960",
    "end": "1691039"
  },
  {
    "text": "your web assembly and then how are you going to accomplish that so what's the current state and the",
    "start": "1691039",
    "end": "1696559"
  },
  {
    "text": "future so what does wazi look like today uh super exciting that's for sure",
    "start": "1696559",
    "end": "1702399"
  },
  {
    "text": "there's a there's a link at the end of this presentation to look at a blog post about basically defining wazi here's why",
    "start": "1702399",
    "end": "1708640"
  },
  {
    "text": "as you come help it's a great blog post it'll get you up to speed just one read but currently it's about handling the",
    "start": "1708640",
    "end": "1716559"
  },
  {
    "text": "core system calls things like files and networks so like read write a file get access to the network and so on and",
    "start": "1716559",
    "end": "1724000"
  },
  {
    "text": "these things are going to take some time and the principles of portability and security are fantastic for building out",
    "start": "1724000",
    "end": "1730559"
  },
  {
    "text": "rozzy but it means that we're going to do it right and doing it right means you're not going to have a proliferation",
    "start": "1730559",
    "end": "1736960"
  },
  {
    "text": "of a whole bunch of flashy features which means access to like cameras and stuff you're not going to have that",
    "start": "1736960",
    "end": "1743039"
  },
  {
    "text": "immediately because it's going to be done right and so do you need access to that stuff today",
    "start": "1743039",
    "end": "1748880"
  },
  {
    "text": "if you do how can you find a way to interface maybe it's best to wrap it as a container and then your webassembly",
    "start": "1748880",
    "end": "1754640"
  },
  {
    "text": "running in container can have you know that stuff available there's ways to think about it and um",
    "start": "1754640",
    "end": "1760320"
  },
  {
    "text": "so let's talk for a moment about edge specific challenges so web assembly modules are the new",
    "start": "1760320",
    "end": "1765919"
  },
  {
    "text": "microservices what does that mean well microservice doesn't mean container but it arrived those two technologies so the",
    "start": "1765919",
    "end": "1772240"
  },
  {
    "text": "architecture of microservices arrived around the time of container technology well any modular code that can be mixed",
    "start": "1772240",
    "end": "1779919"
  },
  {
    "text": "and matched and paired together with microservices and in that architecture it's a multi-microservice world meaning",
    "start": "1779919",
    "end": "1785679"
  },
  {
    "text": "your application is likely to be built of multiple microservices so if you're multiple web assembly modules now in",
    "start": "1785679",
    "end": "1792159"
  },
  {
    "text": "your new architecture how do you do the interchange data between them that is a common problem in edge computing because",
    "start": "1792159",
    "end": "1798399"
  },
  {
    "text": "things are not always interconnected especially between edge nodes that might be in different buildings different cities different vehicles something to",
    "start": "1798399",
    "end": "1804880"
  },
  {
    "text": "think about and how do you go from edge to cloud and so on with the data not in terms of the administrative connectivity",
    "start": "1804880",
    "end": "1811039"
  },
  {
    "text": "right what's my workload but in terms of where do i send these bytes that i gathered from this camera",
    "start": "1811039",
    "end": "1816559"
  },
  {
    "text": "and then now another edge challenge is dynamic access i start a webassembly module on an edge",
    "start": "1816559",
    "end": "1822880"
  },
  {
    "text": "node that needs access to the microphone that's installed in the board well",
    "start": "1822880",
    "end": "1828480"
  },
  {
    "text": "i didn't know i needed access to that until i discovered i have a microphone and that's when i deployed the workload",
    "start": "1828480",
    "end": "1834640"
  },
  {
    "text": "and then the agent on that edge node told me hey these are the things we've got oh great microphone we want that we",
    "start": "1834640",
    "end": "1840399"
  },
  {
    "text": "want to process that data in real time now unless you've planned the entire host os to have all this stuff exposed",
    "start": "1840399",
    "end": "1846640"
  },
  {
    "text": "through a washi or wazi light layer chances are pretty good things will pop up and you'll need to allocate",
    "start": "1846640",
    "end": "1851840"
  },
  {
    "text": "permissions allocate permissions upon discovery this is a big challenge of edge computing in general and you couple",
    "start": "1851840",
    "end": "1858000"
  },
  {
    "text": "that with the challenge of the not yet build out interface layer for webassembly and you've got a lot to",
    "start": "1858000",
    "end": "1863279"
  },
  {
    "text": "think about and that means an opportunity to contribute to all of the build out of this in the world so jump",
    "start": "1863279",
    "end": "1869120"
  },
  {
    "text": "in and help so last but certainly not least what is it going to be like to integrate webassembly with existing edge",
    "start": "1869120",
    "end": "1875840"
  },
  {
    "text": "technologies the easiest path is to go where edge technologies already exist",
    "start": "1875840",
    "end": "1880960"
  },
  {
    "text": "why would you deploy new web assembly edge technologies when building the edge computing world is hard enough let's",
    "start": "1880960",
    "end": "1887360"
  },
  {
    "text": "let's put it on top of or integrate it with so it's really a choice of webassembly",
    "start": "1887360",
    "end": "1892720"
  },
  {
    "text": "runtime and that'll drive what features you have available because not all the runtimes are the same and they don't",
    "start": "1892720",
    "end": "1898159"
  },
  {
    "text": "also have a standard set of of features yet that eventually it will all be table stakes every webassembly runtime will",
    "start": "1898159",
    "end": "1904240"
  },
  {
    "text": "kind of have the basics but now you kind of pick a runtime based on what it's giving you and what's been built out",
    "start": "1904240",
    "end": "1910240"
  },
  {
    "text": "seems like we're going to be operating containers and web assembly modules side by side for quite some time maybe even",
    "start": "1910240",
    "end": "1915360"
  },
  {
    "text": "one wrapped in another something to get used to it's probably going to allow us to fix a lot of things before we move",
    "start": "1915360",
    "end": "1920720"
  },
  {
    "text": "completely to a web assembly world and the use cases of webassembly at the edge are going to drive these specific",
    "start": "1920720",
    "end": "1927919"
  },
  {
    "text": "advancements so in other words i want to access a camera on a battery powered smart camera device i would like to use",
    "start": "1927919",
    "end": "1934720"
  },
  {
    "text": "webassembly i will do the work to build out what's needed for the value of my use case will i also build out access to",
    "start": "1934720",
    "end": "1941760"
  },
  {
    "text": "the temperature sensor in the camera no i didn't need it i'm skipping it right so the use case determines where advancements are made and everything",
    "start": "1941760",
    "end": "1948240"
  },
  {
    "text": "else will probably just have to wait until it can get caught up that's about it uh so hopefully that was",
    "start": "1948240",
    "end": "1954240"
  },
  {
    "text": "uh helpful and uh let's pass it back to steve wong to wrap up this uh this session thanks hilton",
    "start": "1954240",
    "end": "1961360"
  },
  {
    "text": "so here are the resources that they use there's a github repository with the code that dion was showing",
    "start": "1961360",
    "end": "1969200"
  },
  {
    "text": "when they took this thing around the block for the test drive they found these various open source projects",
    "start": "1969200",
    "end": "1975519"
  },
  {
    "text": "highly recommended uh the blog post that kilton talked about is the one stop to if you're going",
    "start": "1975519",
    "end": "1981279"
  },
  {
    "text": "to read one thing pick up on everything get up to speed that's it um",
    "start": "1981279",
    "end": "1987440"
  },
  {
    "text": "a few other things to read that are recommended so this session was put on by the kubernetes iot edge working group",
    "start": "1987440",
    "end": "1995039"
  },
  {
    "text": "if you're interested in applying kubernetes in ways that",
    "start": "1995039",
    "end": "2001679"
  },
  {
    "text": "get jobs done at edge that's a good place to come and discuss it",
    "start": "2001760",
    "end": "2008000"
  },
  {
    "text": "some people are looking for a solution that would run whole kubernetes clusters at edge but some of the others are just",
    "start": "2008000",
    "end": "2014880"
  },
  {
    "text": "using things like web assembly that will feed data and event streams into a kubernetes",
    "start": "2014880",
    "end": "2020880"
  },
  {
    "text": "cluster up at a higher level you can download the deck and",
    "start": "2020880",
    "end": "2026240"
  },
  {
    "text": "get the links to join the group itself join the meetings that are held by zoom",
    "start": "2026240",
    "end": "2032960"
  },
  {
    "text": "converse on the slack channel this slack channel we're going to be using for the q a at the end of this",
    "start": "2032960",
    "end": "2039120"
  },
  {
    "text": "session so if you're watching this on the recording or we get shut down because we hit the time limit go on that",
    "start": "2039120",
    "end": "2045360"
  },
  {
    "text": "slack channel for this group and uh kilton and diana are on there right now",
    "start": "2045360",
    "end": "2050480"
  },
  {
    "text": "and they'll hang around a little while after this closes so you can ask questions there",
    "start": "2050480",
    "end": "2056560"
  },
  {
    "text": "we do have a youtube channel with the recordings of the meetings these are speaker contacts we're on",
    "start": "2056560",
    "end": "2063358"
  },
  {
    "text": "github i think we all share those same github ids on twitter and",
    "start": "2063359",
    "end": "2068800"
  },
  {
    "text": "actually the slack channel is probably the best way to get a hold of us after this event",
    "start": "2068800",
    "end": "2074638"
  },
  {
    "text": "um so that's it you can download the deck right here that's the scad site for",
    "start": "2074639",
    "end": "2081358"
  },
  {
    "text": "the conference and i have uploaded the deck i maybe made one or two edits so later this afternoon i might push an",
    "start": "2081359",
    "end": "2088079"
  },
  {
    "text": "updated version there if you download it a couple hours from now but this one is pretty close to what i just",
    "start": "2088079",
    "end": "2093520"
  },
  {
    "text": "presented so that's it if anybody's got any questions and dion and kilton if the",
    "start": "2093520",
    "end": "2099599"
  },
  {
    "text": "questions are about their demos they are online now i believe",
    "start": "2099599",
    "end": "2106280"
  },
  {
    "text": "uh so i um i got a few confusion about",
    "start": "2122480",
    "end": "2128320"
  },
  {
    "text": "the whole um context of running web assembly in a edge",
    "start": "2128320",
    "end": "2135280"
  },
  {
    "text": "and the kubernetes situation so it sounds like the kubernetes itself",
    "start": "2135280",
    "end": "2142880"
  },
  {
    "text": "becomes a bottleneck needs to be resolved by things like k3s first then",
    "start": "2142880",
    "end": "2148800"
  },
  {
    "text": "you can run some more efficient container in web assembly",
    "start": "2148800",
    "end": "2154000"
  },
  {
    "text": "that's no i i don't think that's uh that's what the situation is what it is is",
    "start": "2154000",
    "end": "2160000"
  },
  {
    "text": "kubernetes of course was designed to orchestrate docker containers and a lot of the assumptions that went into the",
    "start": "2160000",
    "end": "2167040"
  },
  {
    "text": "standard cubelet that gets loaded on a worker node in every kubernetes cluster",
    "start": "2167040",
    "end": "2172800"
  },
  {
    "text": "presumes that it's managing docker containers running on a docker runtime what changes with webassembly is",
    "start": "2172800",
    "end": "2179920"
  },
  {
    "text": "you have a different runtime some kind of runtime that would run the web assembly and",
    "start": "2179920",
    "end": "2185359"
  },
  {
    "text": "some of the presumptions that cubelet made are a little different so there is an open source project",
    "start": "2185359",
    "end": "2190960"
  },
  {
    "text": "called crustlet that sort of convinces the this is an oversimplification but let's just say it",
    "start": "2190960",
    "end": "2197839"
  },
  {
    "text": "convinces the kubernetes control plane that it's talking to a cubelet and it's",
    "start": "2197839",
    "end": "2202880"
  },
  {
    "text": "close enough that you can utilize it to uh you know",
    "start": "2202880",
    "end": "2208640"
  },
  {
    "text": "disclose what workloads you want running you know under what kind of context and",
    "start": "2208640",
    "end": "2215440"
  },
  {
    "text": "have these things scheduled to run on nodes running the crustlet instead of a cubelet",
    "start": "2215440",
    "end": "2221040"
  },
  {
    "text": "and then the crustlet uh knows how to deal with the webassembly runtime and gets that",
    "start": "2221040",
    "end": "2226640"
  },
  {
    "text": "workload running so um it should work with any standard",
    "start": "2226640",
    "end": "2232400"
  },
  {
    "text": "kubernetes i don't think you necessarily would need any particular one groomed for edge but the kubernetes distros that",
    "start": "2232400",
    "end": "2239839"
  },
  {
    "text": "are made for edge should certainly work for just fine is there like production use case of",
    "start": "2239839",
    "end": "2246640"
  },
  {
    "text": "this thing you just mentioned the cross link something well i don't know i think",
    "start": "2246640",
    "end": "2253680"
  },
  {
    "text": "personal opinion is that this stuff is so new that production use cases and a",
    "start": "2254000",
    "end": "2259520"
  },
  {
    "text": "lot of those edge use cases are pretty mission critical i wouldn't do it but a lot depends on",
    "start": "2259520",
    "end": "2264640"
  },
  {
    "text": "your tolerance for being a pioneer and exploring things that might still be a little buggy an improvement",
    "start": "2264640",
    "end": "2271838"
  },
  {
    "text": "okay we've reached our time limit i'll hang around on the hallway a little bit and like i say if your questions are",
    "start": "2273760",
    "end": "2280079"
  },
  {
    "text": "about those demos kilton and dion are online and i would just log in and go on",
    "start": "2280079",
    "end": "2285839"
  },
  {
    "text": "to that slack channel and talk to them through there thank you",
    "start": "2285839",
    "end": "2291050"
  },
  {
    "text": "[Applause]",
    "start": "2291050",
    "end": "2294589"
  }
]