[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "welcome everybody this is sick instrumentation deep dive oh sorry it's",
    "start": "0",
    "end": "5310"
  },
  {
    "text": "intra so I'm pure I'm from Google I'm leading sickness",
    "start": "5310",
    "end": "11670"
  },
  {
    "text": "meditation together with me Frederick from that Cod Cortes and Martinez from",
    "start": "11670",
    "end": "26430"
  },
  {
    "text": "Lutze so this will be a high-level over the",
    "start": "26430",
    "end": "31949"
  },
  {
    "text": "few outward of what sick instrumentation is doing what is this sick about what",
    "start": "31949",
    "end": "37890"
  },
  {
    "text": "are the problems that we are trying to solve later this week on Friday we have",
    "start": "37890",
    "end": "43829"
  },
  {
    "text": "a deep dive session but will let's say log into the components that we own and",
    "start": "43829",
    "end": "50969"
  },
  {
    "text": "see how does how do they work internally so this is on Friday okay so what is our",
    "start": "50969",
    "end": "61050"
  },
  {
    "start": "60000",
    "end": "213000"
  },
  {
    "text": "mission as a sick so it's this is a quote from that our proposal when we",
    "start": "61050",
    "end": "68640"
  },
  {
    "text": "created this seek it covers best practices for cluster observability flow",
    "start": "68640",
    "end": "74340"
  },
  {
    "text": "matrix logging and events across all copernicus components and development of relevant components we also coordinate",
    "start": "74340",
    "end": "81619"
  },
  {
    "text": "metric requirements of different six for other components for the finding common",
    "start": "81619",
    "end": "87030"
  },
  {
    "text": "IP eyes so basically this is metric matrix locks events and best practices",
    "start": "87030",
    "end": "94079"
  },
  {
    "text": "for the monitoring in general what is",
    "start": "94079",
    "end": "99270"
  },
  {
    "text": "our Charter so the first thing that we owned as a sick in open source caba√±as",
    "start": "99270",
    "end": "107340"
  },
  {
    "text": "community is core metrics pipeline so this is the pipeline that is included in",
    "start": "107340",
    "end": "113340"
  },
  {
    "text": "kubernetes out of the box which provides you the very basic research research",
    "start": "113340",
    "end": "118979"
  },
  {
    "text": "monitoring like CPU memory disk usage we also own car locks pipeline again this",
    "start": "118979",
    "end": "126540"
  },
  {
    "text": "is what is included in kubernetes out of the box and this is",
    "start": "126540",
    "end": "133319"
  },
  {
    "text": "cube city logs which displays logs like",
    "start": "133319",
    "end": "138840"
  },
  {
    "text": "the recent logs from your containers from its estate year and a CD out we are",
    "start": "138840",
    "end": "145170"
  },
  {
    "text": "also responsible for instrumenting all system components I mean exposing matrix from system",
    "start": "145170",
    "end": "156060"
  },
  {
    "text": "components and in a way that this is consumable by monitoring systems in",
    "start": "156060",
    "end": "166650"
  },
  {
    "text": "addition to this we have some monitoring extensions the doesn't let's say which",
    "start": "166650",
    "end": "174659"
  },
  {
    "text": "are not critical for the kubernetes for kubernetes use but they are very useful",
    "start": "174659",
    "end": "180030"
  },
  {
    "text": "this is for example cube state matrix or custom attics API adapters which allows",
    "start": "180030",
    "end": "188489"
  },
  {
    "text": "you to integrate kubernetes with third party monitoring solution and the last piece of what we are doing is",
    "start": "188489",
    "end": "196530"
  },
  {
    "text": "integration with third-party monitoring solutions like we done on this integration but what we do is we give",
    "start": "196530",
    "end": "205560"
  },
  {
    "text": "you best practices around this and the",
    "start": "205560",
    "end": "210590"
  },
  {
    "text": "making sure that it's happening basically so car matrix pipeline",
    "start": "210590",
    "end": "215699"
  },
  {
    "start": "213000",
    "end": "264000"
  },
  {
    "text": "consists of cube CTL table which is a comment in cube CTL tool master matrix",
    "start": "215699",
    "end": "222540"
  },
  {
    "text": "API which is official kubernetes api for",
    "start": "222540",
    "end": "227959"
  },
  {
    "text": "exposing resource usage matrix there is a symmetric server which implements this",
    "start": "227959",
    "end": "235079"
  },
  {
    "text": "api cubelet summary api is an API",
    "start": "235079",
    "end": "240889"
  },
  {
    "text": "exposed by cubelet that provides the data for the pipeline that collects the",
    "start": "240889",
    "end": "246870"
  },
  {
    "text": "data for the pipeline this is Sarah sponsibility we've sig node and in",
    "start": "246870",
    "end": "252269"
  },
  {
    "text": "addition to this there is C advisor underneath which collects those data and make them very variable for the cubelets",
    "start": "252269",
    "end": "260310"
  },
  {
    "text": "Ammar API and again this is shared with sig node so",
    "start": "260310",
    "end": "266350"
  },
  {
    "start": "264000",
    "end": "317000"
  },
  {
    "text": "logging pipeline again keep CTL locks command there is a way of exposing logs",
    "start": "266350",
    "end": "274480"
  },
  {
    "text": "from node we just throw some HTTP",
    "start": "274480",
    "end": "280600"
  },
  {
    "text": "handlers expose flow cubelet in addition to this there is log retention and",
    "start": "280600",
    "end": "288280"
  },
  {
    "text": "rotation policy so making sure that your",
    "start": "288280",
    "end": "293350"
  },
  {
    "text": "logs basically are deleted after some period of time so that you will not use",
    "start": "293350",
    "end": "299320"
  },
  {
    "text": "the whole capacity of the machine and there is the way how we handle logs in",
    "start": "299320",
    "end": "307200"
  },
  {
    "text": "CRI container runtime interface there is a lot of overlap with sig node so we are",
    "start": "307200",
    "end": "314950"
  },
  {
    "text": "working with them monitoring extensions as I mention this is cube state matrix a",
    "start": "314950",
    "end": "321730"
  },
  {
    "start": "317000",
    "end": "409000"
  },
  {
    "text": "really really useful tool that is not needed for kubernetes to operate but it",
    "start": "321730",
    "end": "328090"
  },
  {
    "text": "gives you a lot of information about what's going on with your cluster state",
    "start": "328090",
    "end": "335140"
  },
  {
    "text": "will dig into the details later custom metrics API this is a kubernetes",
    "start": "335140",
    "end": "342820"
  },
  {
    "text": "api well-defined api that allows you to plug in your third-party monitoring",
    "start": "342820",
    "end": "349210"
  },
  {
    "text": "solution with kubernetes so that kubernetes components can consume",
    "start": "349210",
    "end": "354880"
  },
  {
    "text": "metrics from outside world basically there is also custom metrics api",
    "start": "354880",
    "end": "360850"
  },
  {
    "text": "adapters which are an implementation implementations of this particular API",
    "start": "360850",
    "end": "367980"
  },
  {
    "text": "it's basically not fully owned by the sick it's rather that the model is that",
    "start": "367980",
    "end": "377010"
  },
  {
    "text": "third-party monitoring vendor provides such adapter and we as a siik are",
    "start": "377010",
    "end": "383470"
  },
  {
    "text": "helping them to basically integrate and",
    "start": "383470",
    "end": "389020"
  },
  {
    "text": "there is hipster component which is which is the central monitoring",
    "start": "389020",
    "end": "396220"
  },
  {
    "text": "component and central integration points for the other monitoring storages and it's about to be",
    "start": "396220",
    "end": "404890"
  },
  {
    "text": "duplicated and we'll talk about this during the deep dive and the last piece",
    "start": "404890",
    "end": "411850"
  },
  {
    "start": "409000",
    "end": "474000"
  },
  {
    "text": "of our responsibilities is this integration with third-party monitoring solution so we are giving best practices",
    "start": "411850",
    "end": "418150"
  },
  {
    "text": "and guidelines how to do this there are some reference integrations so for",
    "start": "418150",
    "end": "424450"
  },
  {
    "text": "example when we develop custom metrics API we also develop the implementation",
    "start": "424450",
    "end": "432430"
  },
  {
    "text": "of this API for Prometheus it was not",
    "start": "432430",
    "end": "437620"
  },
  {
    "text": "because the Mattias is the monitoring solution that we own but we also we",
    "start": "437620",
    "end": "442840"
  },
  {
    "text": "rather wanted to have a proof-of-concept that it basically works and - and we are",
    "start": "442840",
    "end": "448630"
  },
  {
    "text": "also responsible for the way how those third-party monitoring vendors can",
    "start": "448630",
    "end": "456910"
  },
  {
    "text": "consume metadata so that in addition to two metrics in order to make them useful",
    "start": "456910",
    "end": "463240"
  },
  {
    "text": "you need some metadata like deployment name pot name namespace and many other",
    "start": "463240",
    "end": "468550"
  },
  {
    "text": "the kubernetes specific metadata so this is this is something that we care about",
    "start": "468550",
    "end": "474300"
  },
  {
    "start": "474000",
    "end": "497000"
  },
  {
    "text": "okay so here are the leads of our seek",
    "start": "474300",
    "end": "479520"
  },
  {
    "text": "so there is Frederic myself and Fabian who was co-founder of this seek but in",
    "start": "479520",
    "end": "487690"
  },
  {
    "text": "the end of 2017 he decided to basically delegate this responsibility to",
    "start": "487690",
    "end": "494410"
  },
  {
    "text": "Frederick and he is now emeritus we have bi-weekly meetings every second Thursday",
    "start": "494410",
    "end": "501310"
  },
  {
    "start": "497000",
    "end": "517000"
  },
  {
    "text": "at 5:30 UTC so this is early in the",
    "start": "501310",
    "end": "508270"
  },
  {
    "text": "morning us time and in the afternoon of also time but it's hard to find",
    "start": "508270",
    "end": "514630"
  },
  {
    "text": "something better unfortunately so what we did what we did",
    "start": "514630",
    "end": "520750"
  },
  {
    "start": "517000",
    "end": "554000"
  },
  {
    "text": "in 2017 we introduced this core matrix pipeline this means that we defined this",
    "start": "520750",
    "end": "529840"
  },
  {
    "text": "core matrix API which is now in beta in addition to this we provided matrix",
    "start": "529840",
    "end": "534970"
  },
  {
    "text": "server which is the default implementation of Corbett explained",
    "start": "534970",
    "end": "540030"
  },
  {
    "text": "matrix server should be deployed to all",
    "start": "540030",
    "end": "545040"
  },
  {
    "text": "kubernetes cluster basically especially those who want to rely on cube CTL table",
    "start": "545040",
    "end": "550480"
  },
  {
    "text": "or horizontal potato scaler functionality in addition to this we",
    "start": "550480",
    "end": "556870"
  },
  {
    "start": "554000",
    "end": "654000"
  },
  {
    "text": "develop a few monitoring extensions in 2017 we define custom matrix API in beta",
    "start": "556870",
    "end": "565600"
  },
  {
    "text": "the primary consumer of this API is horizontal path autoscaler",
    "start": "565600",
    "end": "570750"
  },
  {
    "text": "which uses those metrics for scaling",
    "start": "570750",
    "end": "576360"
  },
  {
    "text": "your workloads based on basically any arbitrary metric like ups or length of",
    "start": "576360",
    "end": "583870"
  },
  {
    "text": "your pipe sub-q whatever there were also",
    "start": "583870",
    "end": "590710"
  },
  {
    "text": "two implementations of this API developed in 2017 one for primitives one",
    "start": "590710",
    "end": "597730"
  },
  {
    "text": "for stackdriver I'm looking for more I would like to have more what didn't it's",
    "start": "597730",
    "end": "606250"
  },
  {
    "text": "basically business of third-party monitoring vendors we also graduated cube state",
    "start": "606250",
    "end": "613390"
  },
  {
    "text": "matrix to gie which means that this is stable and production-ready components right now yeah we'll talk about this",
    "start": "613390",
    "end": "622510"
  },
  {
    "text": "later like what it actually does our plans for 2018 is around stabilization",
    "start": "622510",
    "end": "629920"
  },
  {
    "text": "so everything basically that we introduce we would like to go to GI with",
    "start": "629920",
    "end": "637540"
  },
  {
    "text": "this so those two api's metric server is now under incubator we want to graduate",
    "start": "637540",
    "end": "644470"
  },
  {
    "text": "metric server from incubator and deprecated hipster finally we have also",
    "start": "644470",
    "end": "656320"
  },
  {
    "start": "654000",
    "end": "787000"
  },
  {
    "text": "some plans on introducing new concepts to the monitoring area one is historical",
    "start": "656320",
    "end": "662770"
  },
  {
    "text": "matrix API which could be by vertical cut out Skylar and the other",
    "start": "662770",
    "end": "671640"
  },
  {
    "text": "kubernetes components that require access to historical data matrix server provides only access to the most recent",
    "start": "671640",
    "end": "680890"
  },
  {
    "text": "research data there is no good story on",
    "start": "680890",
    "end": "686410"
  },
  {
    "text": "how to consume metadata there is a few options one is to query a kubernetes api",
    "start": "686410",
    "end": "692020"
  },
  {
    "text": "server directly there is also this unofficial slash pods handler in cubelet",
    "start": "692020",
    "end": "699010"
  },
  {
    "text": "exposed by aviary cubelet and some of the monitoring vendors use this one the",
    "start": "699010",
    "end": "705220"
  },
  {
    "text": "results an option to rely on some environmental variables that are set",
    "start": "705220",
    "end": "713340"
  },
  {
    "text": "like this downward api logs are handled",
    "start": "713340",
    "end": "719080"
  },
  {
    "text": "in a way that the logging path contains basically metadata there at least some",
    "start": "719080",
    "end": "728410"
  },
  {
    "text": "subset of metadata that are crucial to understand to which port",
    "start": "728410",
    "end": "733570"
  },
  {
    "text": "those logs are actually belongs to and",
    "start": "733570",
    "end": "738930"
  },
  {
    "text": "we would like to standardize around this we would like to provide an official",
    "start": "738930",
    "end": "747370"
  },
  {
    "text": "guideline or how to integrate with kubernetes the third idea that is in our",
    "start": "747370",
    "end": "755650"
  },
  {
    "text": "mind is how to handle logs from files as far now as for now by default we handle",
    "start": "755650",
    "end": "763720"
  },
  {
    "text": "only logs coming from STD STD out this",
    "start": "763720",
    "end": "770530"
  },
  {
    "text": "is this is okay this works for many many",
    "start": "770530",
    "end": "776530"
  },
  {
    "text": "users at the same time this is not enough for all those legacy applications Java applications for example which by",
    "start": "776530",
    "end": "783790"
  },
  {
    "text": "design logs two different files okay and",
    "start": "783790",
    "end": "789340"
  },
  {
    "start": "787000",
    "end": "928000"
  },
  {
    "text": "I'm passing the mic to Fredrik so now",
    "start": "789340",
    "end": "795250"
  },
  {
    "text": "that Pietro explained basically how some of the components that we that we",
    "start": "795250",
    "end": "801970"
  },
  {
    "text": "own at least some of those I want to explain in a high-level overview of how",
    "start": "801970",
    "end": "808750"
  },
  {
    "text": "they actually work so in this particular example we're basically looking at how",
    "start": "808750",
    "end": "814740"
  },
  {
    "text": "oopsy poopsy TL top would utilize the",
    "start": "814740",
    "end": "820860"
  },
  {
    "text": "the resource matrix API so a cube CTL top would request the kubernetes api and",
    "start": "820860",
    "end": "829630"
  },
  {
    "text": "the resource metrics api is actually an aggregated api and what that means in",
    "start": "829630",
    "end": "837459"
  },
  {
    "text": "kubernetes is that you start that specific server so the metrics server for example but really any",
    "start": "837459",
    "end": "844329"
  },
  {
    "text": "implementation of that API and then you register it at the API server and then",
    "start": "844329",
    "end": "849670"
  },
  {
    "text": "the API server knows that for this particular API the core or resource",
    "start": "849670",
    "end": "856269"
  },
  {
    "text": "metrics API I will forward all of these requests to the metric server and then",
    "start": "856269",
    "end": "862079"
  },
  {
    "text": "that that particular instance will reply to that response and that's basically",
    "start": "862079",
    "end": "869769"
  },
  {
    "text": "the path of the request and the",
    "start": "869769",
    "end": "874649"
  },
  {
    "text": "implementation of the resource metrics API somehow needs to gather all of this information from the from the respective",
    "start": "875220",
    "end": "882399"
  },
  {
    "text": "kubernetes nodes and so the SPO I already mentioned their metric server is",
    "start": "882399",
    "end": "888640"
  },
  {
    "text": "the canonical default implementation for this and really what the metric server",
    "start": "888640",
    "end": "893649"
  },
  {
    "text": "does is it in a one minute interval just goes through all of the nodes in your crew bananas cluster gets all of the",
    "start": "893649",
    "end": "900820"
  },
  {
    "text": "metrics from all that from that node as well as all the pots running on that",
    "start": "900820",
    "end": "906610"
  },
  {
    "text": "node and just stores it in memory and whenever you do a request it returns that and we did some benchmarking in it",
    "start": "906610",
    "end": "914199"
  },
  {
    "text": "does fulfill all of the scalability requirements that criminales has so",
    "start": "914199",
    "end": "919829"
  },
  {
    "text": "5,000 nodes and an average of I think I think 30 or 50 pots per node and",
    "start": "919829",
    "end": "931019"
  },
  {
    "start": "928000",
    "end": "1018000"
  },
  {
    "text": "something that we have been working on over the past year and a half around a",
    "start": "931019",
    "end": "937270"
  },
  {
    "text": "year and a half ago we specified all of these api's so we actually had to then",
    "start": "937270",
    "end": "942400"
  },
  {
    "text": "start migrating all of the components within kubernetes that were previously using heap stir to actually use these",
    "start": "942400",
    "end": "949180"
  },
  {
    "text": "metrics API so that we can finally now deprecated heap sir a year and a half after after we started this effort",
    "start": "949180",
    "end": "956170"
  },
  {
    "text": "because that's basically what we were going for that heap sir had become a problem and we'll explain more in the",
    "start": "956170",
    "end": "963910"
  },
  {
    "text": "deep dive about this but finally with kubernetes 1.10 we've arrived at a point",
    "start": "963910",
    "end": "970210"
  },
  {
    "text": "where the last bit has been migrated which was coop CTL top to use the",
    "start": "970210",
    "end": "975580"
  },
  {
    "text": "resource metrics api it's not particularly spectacular but finally",
    "start": "975580",
    "end": "981970"
  },
  {
    "text": "this is the last piece that was necessary to be migrated and as Piatra",
    "start": "981970",
    "end": "987250"
  },
  {
    "text": "already mentioned it just gives you metrics about pods and containers and",
    "start": "987250",
    "end": "993040"
  },
  {
    "text": "nodes and just very basic metrics so CPU and memory and respective to their",
    "start": "993040",
    "end": "1001100"
  },
  {
    "text": "kubernetes api object so the pod is named spaced while the note is not so",
    "start": "1001100",
    "end": "1008300"
  },
  {
    "text": "that's important for our back for example so that you can control who",
    "start": "1008300",
    "end": "1013830"
  },
  {
    "text": "actually gets to view these kinds of metrics and very similar this kind of",
    "start": "1013830",
    "end": "1022800"
  },
  {
    "text": "thing works with logs except that that's not an aggregated API because the logs",
    "start": "1022800",
    "end": "1029520"
  },
  {
    "text": "are local to the to the nodes to the couplet so whenever you do a coop CTL",
    "start": "1029520",
    "end": "1034770"
  },
  {
    "text": "logs my pod and you want to view that particularly log then you do a request",
    "start": "1034770",
    "end": "1040800"
  },
  {
    "text": "to the kubernetes api and that's the sub resource logs or log of pods of the pod",
    "start": "1040800",
    "end": "1047310"
  },
  {
    "text": "resource and when you do that the kubernetes api server figures out on which node that particular pot is",
    "start": "1047310",
    "end": "1055130"
  },
  {
    "text": "scheduled onto and then does a request to that couplet which is then the node",
    "start": "1055130",
    "end": "1060660"
  },
  {
    "text": "logs api on the on the couplet API and the couplet really just then just",
    "start": "1060660",
    "end": "1066600"
  },
  {
    "text": "basically reads that log file and just sends it back and",
    "start": "1066600",
    "end": "1072350"
  },
  {
    "text": "if you tale then all of this is a WebSocket basically and all this information is then transferred to your",
    "start": "1072350",
    "end": "1078830"
  },
  {
    "text": "client and just just so everybody knows the default for log rotation here is ten",
    "start": "1078830",
    "end": "1085880"
  },
  {
    "text": "ten megabytes and when this actually kicks in and you list the logs this that",
    "start": "1085880",
    "end": "1092360"
  },
  {
    "text": "will be empty because oops ETL logs always only gives you the latest rotation of the logs basically and I'm",
    "start": "1092360",
    "end": "1100520"
  },
  {
    "text": "not exactly sure what the what the default retention is maybe five",
    "start": "1100520",
    "end": "1106669"
  },
  {
    "text": "rotations okay so events are also",
    "start": "1106669",
    "end": "1115909"
  },
  {
    "start": "1109000",
    "end": "1205000"
  },
  {
    "text": "something that falls under our responsibilities but events might be handled in a bit different way than then",
    "start": "1115909",
    "end": "1123320"
  },
  {
    "text": "you may be used to in other systems so this is not an event as an it could be",
    "start": "1123320",
    "end": "1129770"
  },
  {
    "text": "handled like that but by default in kubernetes it's not handled like a logline so sometimes when we log",
    "start": "1129770",
    "end": "1135440"
  },
  {
    "text": "something we say that's an event but it's not the equivalent and kubernetes and kubernetes events are actually",
    "start": "1135440",
    "end": "1141559"
  },
  {
    "text": "stored in at CD and at CD is not like not like elastic or something where you",
    "start": "1141559",
    "end": "1147919"
  },
  {
    "text": "want to store many many events over time",
    "start": "1147919",
    "end": "1153490"
  },
  {
    "text": "it's very limited and in that regard and that's why and we try to keep the amount",
    "start": "1153490",
    "end": "1161630"
  },
  {
    "text": "of events a particular component can expose low and it's actually updatable",
    "start": "1161630",
    "end": "1167360"
  },
  {
    "text": "so when you when you see when you list your events for for an object for example if you if a part can be",
    "start": "1167360",
    "end": "1173030"
  },
  {
    "text": "scheduled then it will always update that for the last time it's seen that",
    "start": "1173030",
    "end": "1178159"
  },
  {
    "text": "for example and and update the description of events",
    "start": "1178159",
    "end": "1183820"
  },
  {
    "text": "possibly now this can possibly create a lot of traffic on your at CD and so if",
    "start": "1183820",
    "end": "1191120"
  },
  {
    "text": "you're running really really high scale clusters this can really put a lot of",
    "start": "1191120",
    "end": "1197000"
  },
  {
    "text": "turn on your CD cluster so I recommend having a separate it's cluster that's that's the case for you",
    "start": "1197000",
    "end": "1205810"
  },
  {
    "start": "1205000",
    "end": "1303000"
  },
  {
    "text": "now moving on to prometheus support so all the kubernetes components themselves",
    "start": "1206170",
    "end": "1213140"
  },
  {
    "text": "actually expose Prometheus style metrics",
    "start": "1213140",
    "end": "1218770"
  },
  {
    "text": "and basically what the data model of Prometheus is is that you have a set of",
    "start": "1218770",
    "end": "1225680"
  },
  {
    "text": "labels where the name of the metric is",
    "start": "1225680",
    "end": "1231170"
  },
  {
    "text": "actually it's it's actually also labels it's just a meta label basically that internally gets converted but it's",
    "start": "1231170",
    "end": "1237680"
  },
  {
    "text": "basically it's the exact same thing as any other label internally and then you have the combination of all unique label",
    "start": "1237680",
    "end": "1245300"
  },
  {
    "text": "combinations or one unique combination identifies a time series and then you",
    "start": "1245300",
    "end": "1251780"
  },
  {
    "text": "have a value associated to to that time series and that's something you could query so for example what you could do",
    "start": "1251780",
    "end": "1258440"
  },
  {
    "text": "is you could just list all the all the time series that have the code 200 for",
    "start": "1258440",
    "end": "1266870"
  },
  {
    "text": "example or more likely is that you will want to see all the time series with the",
    "start": "1266870",
    "end": "1272300"
  },
  {
    "text": "HTTP requests total but you can slice and dice this and in any way that you want and then do aggregation of aware",
    "start": "1272300",
    "end": "1279530"
  },
  {
    "text": "that for example and the primitives of",
    "start": "1279530",
    "end": "1286480"
  },
  {
    "text": "metrics that are available in the Prometheus format our counters gauges histograms and summaries and yeah",
    "start": "1286480",
    "end": "1295910"
  },
  {
    "text": "basically depending on the the type of information that you want to expose these are the options that you have so",
    "start": "1295910",
    "end": "1305300"
  },
  {
    "start": "1303000",
    "end": "1329000"
  },
  {
    "text": "this is actually what whether what it looks like when your application exposes Prometheus style metrics so you have",
    "start": "1305300",
    "end": "1313100"
  },
  {
    "text": "your metric name as I mentioned and then in the curly brackets you basically",
    "start": "1313100",
    "end": "1320270"
  },
  {
    "text": "specify all the extra labels that you want to be associated with this particular time series and then the",
    "start": "1320270",
    "end": "1326600"
  },
  {
    "text": "value for that and",
    "start": "1326600",
    "end": "1332780"
  },
  {
    "start": "1329000",
    "end": "1383000"
  },
  {
    "text": "if you if you would want to instrument your own application with that then you",
    "start": "1332780",
    "end": "1340430"
  },
  {
    "text": "could do that and either one of the officially supported languages but there",
    "start": "1340430",
    "end": "1346430"
  },
  {
    "text": "are also a ton of community supported ones that are just as good and typically",
    "start": "1346430",
    "end": "1352790"
  },
  {
    "text": "the way that you instrument your application is that you create a",
    "start": "1352790",
    "end": "1357860"
  },
  {
    "text": "Prometheus registry this is a go example for just to demonstrate you have a",
    "start": "1357860",
    "end": "1363470"
  },
  {
    "text": "registry and you register metric for example the request counter here and then through the lifecycle of your",
    "start": "1363470",
    "end": "1370430"
  },
  {
    "text": "project of your program you for example could use request counter with labels",
    "start": "1370430",
    "end": "1376250"
  },
  {
    "text": "and you set the label values and increase it this is what would be an example for a counter count or metric",
    "start": "1376250",
    "end": "1382960"
  },
  {
    "text": "and that that's how all the kubernetes components are are instrumented so",
    "start": "1382960",
    "end": "1392440"
  },
  {
    "text": "whenever you go to any of those components they will have things like requests total request latencies and",
    "start": "1392440",
    "end": "1400160"
  },
  {
    "text": "this is really important because it means that we can treat kubernetes components as a whole as opposed to",
    "start": "1400160",
    "end": "1407360"
  },
  {
    "text": "individual components and that just makes monitoring this system much much",
    "start": "1407360",
    "end": "1412940"
  },
  {
    "text": "more easy and all of these components also use the Prometheus standard which",
    "start": "1412940",
    "end": "1418760"
  },
  {
    "text": "is just exposing the metrics on the slash metrics endpoint is just an HTTP",
    "start": "1418760",
    "end": "1423950"
  },
  {
    "text": "server that every kubernetes component has anyways and exposes that in the text",
    "start": "1423950",
    "end": "1429380"
  },
  {
    "text": "format I just showed so this is a more elaborate example of what this could",
    "start": "1429380",
    "end": "1434900"
  },
  {
    "start": "1430000",
    "end": "1492000"
  },
  {
    "text": "look like in this example we have gogo",
    "start": "1434900",
    "end": "1440030"
  },
  {
    "text": "metrics from the go-go runtime so you could see things like if you have a",
    "start": "1440030",
    "end": "1447550"
  },
  {
    "text": "memory leak or something like that or go routines that you haven't properly",
    "start": "1447550",
    "end": "1452930"
  },
  {
    "text": "properly stopped or that haven't ended or something like that so it's very useful to do this and there were",
    "start": "1452930",
    "end": "1459920"
  },
  {
    "text": "actually multiple things in kubernetes that we've discovered because of these",
    "start": "1459920",
    "end": "1465110"
  },
  {
    "text": "metrics so for example and kubernetes 1.8 we had a pretty big memory leak ironically because there was",
    "start": "1465110",
    "end": "1472309"
  },
  {
    "text": "a leak in how metrics were registered but we discovered it with through",
    "start": "1472309",
    "end": "1478909"
  },
  {
    "text": "metrics as well so I guess that cancels it out but it's really useful for these",
    "start": "1478909",
    "end": "1485720"
  },
  {
    "text": "kinds of things and that was not obviously not the only time we caught something with metrics but it's an ironic example that I like to tell and",
    "start": "1485720",
    "end": "1494080"
  },
  {
    "text": "here's just some to show that we actually use this in the kubernetes",
    "start": "1494080",
    "end": "1499309"
  },
  {
    "text": "project and the autoscaler for example so also the autoscaler which uses metrics to auto scale has metrics itself",
    "start": "1499309",
    "end": "1509350"
  },
  {
    "start": "1509000",
    "end": "1759000"
  },
  {
    "text": "alright so we are back to so first of",
    "start": "1521860",
    "end": "1529100"
  },
  {
    "text": "all I want to to show you the repository so this metric server incubator",
    "start": "1529100",
    "end": "1535309"
  },
  {
    "text": "previously mentioned - so in the Google container kubernetes engine it's already",
    "start": "1535309",
    "end": "1541880"
  },
  {
    "text": "deployed so you don't have to do anything if you want to deploy it just go to the deploy folder and pick the",
    "start": "1541880",
    "end": "1547340"
  },
  {
    "text": "version do aq control apply and then the metric servers up and running so what you can do with that is you can do like",
    "start": "1547340",
    "end": "1554960"
  },
  {
    "text": "a code control notes and it will tell you the utilization of your cluster or",
    "start": "1554960",
    "end": "1561860"
  },
  {
    "text": "like the individual notes you can also do a top and then I will just print all",
    "start": "1561860",
    "end": "1567769"
  },
  {
    "text": "namespaces for for this demo so we see the CPU utilization and the memory",
    "start": "1567769",
    "end": "1572960"
  },
  {
    "text": "utilization of each pot in the class yeah I mean you can use that for your",
    "start": "1572960",
    "end": "1578720"
  },
  {
    "text": "requests and so on in your definitions then we have something called cube",
    "start": "1578720",
    "end": "1586460"
  },
  {
    "text": "control locks as previously mentioned so you can do something like lock the",
    "start": "1586460",
    "end": "1593080"
  },
  {
    "text": "Prometheus operator right here all these locks something really nice about this",
    "start": "1593080",
    "end": "1599480"
  },
  {
    "text": "is if the pot crashes we can do a dash p for previous so I mean it didn't crash kudos",
    "start": "1599480",
    "end": "1609320"
  },
  {
    "text": "to you but then we would get the locks from the previous part even though it",
    "start": "1609320",
    "end": "1614570"
  },
  {
    "text": "isn't running anymore for the cube control get events we can simply show",
    "start": "1614570",
    "end": "1624710"
  },
  {
    "text": "the events that are happening in name space so this is by default the default name of space so we can see what's going on there and we can also watch that and",
    "start": "1624710",
    "end": "1632950"
  },
  {
    "text": "yeah we also have a severity so we can filter by severity like how important",
    "start": "1632950",
    "end": "1639080"
  },
  {
    "text": "these errors or events basically are in the cluster yeah",
    "start": "1639080",
    "end": "1645890"
  },
  {
    "text": "so onto the cube side metrics so you say metrics yeah and take it for a bit so",
    "start": "1645890",
    "end": "1652070"
  },
  {
    "text": "cube site metrics is something like a wrapper around all the kubernetes objects that aren't already exported by",
    "start": "1652070",
    "end": "1659360"
  },
  {
    "text": "the master components themselves so we have this project which exports like the",
    "start": "1659360",
    "end": "1666860"
  },
  {
    "text": "creation time of all the objects or different kinds of metadata and and so",
    "start": "1666860",
    "end": "1672650"
  },
  {
    "text": "on for these kubernetes objects so you can find a list of all the objects that are available with metrics in the",
    "start": "1672650",
    "end": "1680540"
  },
  {
    "text": "documentation so basically everything outside of a custom resource definitions and I just",
    "start": "1680540",
    "end": "1686510"
  },
  {
    "text": "quickly want to show you how it looks like when you query the metrics endpoint",
    "start": "1686510",
    "end": "1692660"
  },
  {
    "text": "for cube site metrics so I mean it's just a really long text file that you get back with the different kinds of",
    "start": "1692660",
    "end": "1699920"
  },
  {
    "text": "metrics for those objects you can do pretty yeah interesting or like",
    "start": "1699920",
    "end": "1706220"
  },
  {
    "text": "important things on that so in this case I can show you the clutter that is running we have in the default namespace",
    "start": "1706220",
    "end": "1715330"
  },
  {
    "text": "some pots that are in a crash loop back off so they are just like restarting every time and then we also have a pot",
    "start": "1715330",
    "end": "1722360"
  },
  {
    "text": "that isn't able to schedule because of a wrong configure port affinity and yeah",
    "start": "1722360",
    "end": "1728750"
  },
  {
    "text": "due to our these cubes and metrics that we expose",
    "start": "1728750",
    "end": "1733779"
  },
  {
    "text": "Prometheus can alert on that the Prometheus operator has a bunch of really good examples for lettering rules",
    "start": "1733779",
    "end": "1740129"
  },
  {
    "text": "so you can go in here and say see that those pots are actually crashing all the",
    "start": "1740129",
    "end": "1746080"
  },
  {
    "text": "time and also there is the crash looping",
    "start": "1746080",
    "end": "1752349"
  },
  {
    "text": "so it will it will show you that like one of your applications is going crazy",
    "start": "1752349",
    "end": "1757379"
  },
  {
    "text": "in the middle of the night additionally there are also deaf sports",
    "start": "1757379",
    "end": "1762759"
  },
  {
    "start": "1759000",
    "end": "2204000"
  },
  {
    "text": "for all these metrics and you can really dive deep into what is going on in your",
    "start": "1762759",
    "end": "1767820"
  },
  {
    "text": "cluster so you can see like which namespace is utilizing your class term",
    "start": "1767820",
    "end": "1772839"
  },
  {
    "text": "or and you can drill that down to per namespace a per port per node so you get",
    "start": "1772839",
    "end": "1778299"
  },
  {
    "text": "like the whole idea of what's going on in your cluster and that's all due to due to the work of the cube site metrics",
    "start": "1778299",
    "end": "1784749"
  },
  {
    "text": "and the second fermentation projects so I guess with that questions can we",
    "start": "1784749",
    "end": "1794619"
  },
  {
    "text": "switch the slides can I just ask where",
    "start": "1794619",
    "end": "1804279"
  },
  {
    "text": "can I find the dashboards and referral dashboards you just shoot so we",
    "start": "1804279",
    "end": "1809769"
  },
  {
    "text": "recovered this during deep dive on Friday the idea is that kubernetes is",
    "start": "1809769",
    "end": "1816489"
  },
  {
    "text": "not about monitoring a part of let's say what is coming out of the box is very",
    "start": "1816489",
    "end": "1822190"
  },
  {
    "text": "bare minimum that you need we just keep CTR top keeps ideologue skip CTL get",
    "start": "1822190",
    "end": "1828519"
  },
  {
    "text": "events resource matrix API which allows you to consume those metrics in",
    "start": "1828519",
    "end": "1834700"
  },
  {
    "text": "pragmatic way programmatic way so this is this is okay if you have very basic",
    "start": "1834700",
    "end": "1841089"
  },
  {
    "text": "use case but it's not enough for production-ready system in in addition",
    "start": "1841089",
    "end": "1847179"
  },
  {
    "text": "to what is included in vanilla kubernetes you need third-party",
    "start": "1847179",
    "end": "1852339"
  },
  {
    "text": "monitoring solution and will show an example of this is a plummet use will",
    "start": "1852339",
    "end": "1859359"
  },
  {
    "text": "show how can you integrate primitives with kubernetes easy on Friday",
    "start": "1859359",
    "end": "1868200"
  },
  {
    "text": "concretely the dashboards are in the kubernetes - monitoring / kubernetes",
    "start": "1868200",
    "end": "1873460"
  },
  {
    "text": "mix-ins repository there's a really",
    "start": "1873460",
    "end": "1878470"
  },
  {
    "text": "awesome talked to tomorrow or Friday by Tom Wilkie covering this topic in",
    "start": "1878470",
    "end": "1884500"
  },
  {
    "text": "like very deeply just about dashboard so I recommend going there thank you",
    "start": "1884500",
    "end": "1900370"
  },
  {
    "text": "so this is a sort of an open question and I don't expect a full answer because",
    "start": "1900370",
    "end": "1907210"
  },
  {
    "text": "again it's it's really really open-ended but my concern is that there's now",
    "start": "1907210",
    "end": "1912340"
  },
  {
    "text": "basically three different things exposing Prometheus metrics with some",
    "start": "1912340",
    "end": "1917710"
  },
  {
    "text": "overlap so in this case API server metrics server and keep state metrics and again they they all overlap in some",
    "start": "1917710",
    "end": "1925270"
  },
  {
    "text": "way in some sense and and also the metrics that they expose it changes like",
    "start": "1925270",
    "end": "1932710"
  },
  {
    "text": "the list of metrics and and I realize that's sort of not version so there's no versioning to it you just kind of expect",
    "start": "1932710",
    "end": "1937750"
  },
  {
    "text": "the metrics to be there but depending on what kubernetes version you use it might be there might not be there etc so my my",
    "start": "1937750",
    "end": "1943330"
  },
  {
    "text": "concern is that now you basically have three different points of of sources of truth for for metrics so so what's",
    "start": "1943330",
    "end": "1950080"
  },
  {
    "text": "what's the idea there what's the direction so maybe I will answer what is",
    "start": "1950080",
    "end": "1955810"
  },
  {
    "text": "the motivation behind having all those parts and maybe Frederic can address the",
    "start": "1955810",
    "end": "1963910"
  },
  {
    "text": "other part of the question about versioning so some API server you accept",
    "start": "1963910",
    "end": "1970960"
  },
  {
    "text": "expect to have exposed metrics about internal state of API server how many",
    "start": "1970960",
    "end": "1977970"
  },
  {
    "text": "requests are coming how many of them succeed what are the HTTP response codes",
    "start": "1977970",
    "end": "1984490"
  },
  {
    "text": "and so on no metrics about the kubernetes cluster side itself then for resource metrics",
    "start": "1984490",
    "end": "1992650"
  },
  {
    "text": "API this is an API kubernetes quality kubernetes standard API that expo",
    "start": "1992650",
    "end": "2001500"
  },
  {
    "text": "research usage metrics about the recent",
    "start": "2001500",
    "end": "2007520"
  },
  {
    "text": "that the latest research research metrics about containers running gear",
    "start": "2007520",
    "end": "2012600"
  },
  {
    "text": "cluster and a primary goal for having this API is to have those metrics",
    "start": "2012600",
    "end": "2017730"
  },
  {
    "text": "consumed by other kubernetes components like horizontal pod autoscaler cube CTL table scheduler in the future to make",
    "start": "2017730",
    "end": "2024690"
  },
  {
    "text": "better scheduling decisions and this is not that like by design this is a part",
    "start": "2024690",
    "end": "2032730"
  },
  {
    "text": "of kubernetes api so that they can be easily consumed from kubernetes and doesn't require to have integration with",
    "start": "2032730",
    "end": "2039720"
  },
  {
    "text": "third-party monitoring solution cube stain matrix is a tool designed to",
    "start": "2039720",
    "end": "2046280"
  },
  {
    "text": "basically expose matrix to other systems like parameters so that you can alert",
    "start": "2046280",
    "end": "2054090"
  },
  {
    "text": "based on the cluster state particularly for cube state metrics we take extra",
    "start": "2054090",
    "end": "2060270"
  },
  {
    "text": "care not to break any of those and we haven't since 1.0 at least before 1.0 we",
    "start": "2060270",
    "end": "2066690"
  },
  {
    "text": "did but for after one point no we haven't the problem is within the",
    "start": "2066690",
    "end": "2075628"
  },
  {
    "text": "canaries project as a whole we can oversee every single change so if there",
    "start": "2075629",
    "end": "2081030"
  },
  {
    "text": "is a breaking change then do make us aware of that so that we can try to not",
    "start": "2081030",
    "end": "2086720"
  },
  {
    "text": "like try to revert that in patch releases of that particular kubernetes",
    "start": "2086720",
    "end": "2092310"
  },
  {
    "text": "release of course if a component disappears there's no no reason to keep the metrics but we should should be",
    "start": "2092310",
    "end": "2099240"
  },
  {
    "text": "doing a better job of that particularly with the advisor will we will be we're",
    "start": "2099240",
    "end": "2105420"
  },
  {
    "text": "thinking of ways how to replace the advisor in that stack to have more",
    "start": "2105420",
    "end": "2111710"
  },
  {
    "text": "consistent and more stable metrics but",
    "start": "2111710",
    "end": "2117180"
  },
  {
    "text": "that's still very early discussion but that discussion is happening because the",
    "start": "2117180",
    "end": "2122550"
  },
  {
    "text": "advisor has broken pretty much in every point release of kubernetes so far so",
    "start": "2122550",
    "end": "2130410"
  },
  {
    "text": "that's not a situation that we want to that we want so that's what we're trying to improve",
    "start": "2130410",
    "end": "2136109"
  },
  {
    "text": "and there has also been the discussion I don't think there has is any",
    "start": "2136109",
    "end": "2141300"
  },
  {
    "text": "implementation but to basically have resource metrics API based on Prometheus",
    "start": "2141300",
    "end": "2148260"
  },
  {
    "text": "metrics because that the same like the metric server and Prometheus are still",
    "start": "2148260",
    "end": "2153300"
  },
  {
    "text": "basically scraping the same data where Prometheus scrapes the advisor and the",
    "start": "2153300",
    "end": "2158339"
  },
  {
    "text": "metrics server scrapes the couplet api's but essentially it's the same data so",
    "start": "2158339",
    "end": "2163910"
  },
  {
    "text": "there might be a Prometheus Bay based metric server at some point but for sure",
    "start": "2163910",
    "end": "2170849"
  },
  {
    "text": "the metric server itself will stay and will always be the canonical implementation because that's something",
    "start": "2170849",
    "end": "2178170"
  },
  {
    "text": "that you can deploy independently and don't need to rely on on a monitoring system like Prometheus so we want to",
    "start": "2178170",
    "end": "2184619"
  },
  {
    "text": "definitely want an opinionated way to offer that but for sure there should be a way to not duplicate those resources",
    "start": "2184619",
    "end": "2193160"
  },
  {
    "text": "sorry for talking so long we are out of the time so thank you very much if you have more questions that is one more",
    "start": "2193160",
    "end": "2199380"
  },
  {
    "text": "question come to us and we'll handle them offline thank you [Applause]",
    "start": "2199380",
    "end": "2206500"
  }
]