[
  {
    "text": "so welcome uh I'm Matt Turner I'm going to talk about dynamically testing individual microservice releases in",
    "start": "719",
    "end": "6180"
  },
  {
    "text": "production which is a bit of a mouthful but I wanted to get across what we're so actually going to be talking about",
    "start": "6180",
    "end": "12300"
  },
  {
    "text": "which is to test on an ongoing basis you know new releases of an individual Service as",
    "start": "12300",
    "end": "18359"
  },
  {
    "text": "part of a more complicated bigger set of micro services so let's let's dive into what that means",
    "start": "18359",
    "end": "25199"
  },
  {
    "text": "so yeah lots to talk about a lot of these uh a lot of these topics I'm only going to be touching on kind of briefly",
    "start": "25199",
    "end": "30660"
  },
  {
    "text": "it's a bit of background the meat of this really is in sort of the istio config what we what we can do with this",
    "start": "30660",
    "end": "36360"
  },
  {
    "text": "and the automation that I've started to build for it but I will just touch on a bit of background as well",
    "start": "36360",
    "end": "41760"
  },
  {
    "text": "um I can't see my own slice in here so I'll have to lean in occasionally remember what I promised I was going to say",
    "start": "41760",
    "end": "47700"
  },
  {
    "text": "um I won't have to leave that list out so a little bit about me um I am a software engineer at tetrate",
    "start": "47700",
    "end": "53520"
  },
  {
    "text": "tetrate was founded to solve the problem of using service meshes to scale our",
    "start": "53520",
    "end": "58980"
  },
  {
    "text": "management plane provides a layer on top of one or more hdmes's it'll install them for you upgrade them for you and it",
    "start": "58980",
    "end": "66000"
  },
  {
    "text": "uses the tetrated studio distribution for that which is a build of Upstream is Joe we haven't forked it but it is fully",
    "start": "66000",
    "end": "71700"
  },
  {
    "text": "fixed compliant and you can then use our UI or you can give simple high level config and we'll render that down to all",
    "start": "71700",
    "end": "78000"
  },
  {
    "text": "the complicated istio config you need for secure cross-cluster communication and if you plug into your identity",
    "start": "78000",
    "end": "83640"
  },
  {
    "text": "provider we'll also let you set up inheritable hierarchical permissions",
    "start": "83640",
    "end": "89220"
  },
  {
    "text": "across all of that so that people can do mesh Ops in in controlled ways",
    "start": "89220",
    "end": "94680"
  },
  {
    "text": "a little bit about you maybe uh who who's never used istio or another service mesh",
    "start": "94680",
    "end": "101939"
  },
  {
    "text": "okay that's probably half of you cool who is sort of a beginner can make it do something",
    "start": "101939",
    "end": "107460"
  },
  {
    "text": "that's probably the other half and anybody consider themselves sort of an expert like if I give you a problem you write the config to fix it okay a few",
    "start": "107460",
    "end": "113820"
  },
  {
    "text": "people that's cool I guess I've sort of I've sort of got this about right then so I'm actually going to talk about this",
    "start": "113820",
    "end": "119280"
  },
  {
    "text": "from the perspective of of the problem we're trying to solve and I would then introduce you know a service mesh uh SEO",
    "start": "119280",
    "end": "125880"
  },
  {
    "text": "in My Demo as being the like the way to solve that but this is not like an istio talk this isn't a deep dive so hopefully",
    "start": "125880",
    "end": "132180"
  },
  {
    "text": "this will take people uh through it who haven't seen it before so briefly microservices right what are",
    "start": "132180",
    "end": "139319"
  },
  {
    "text": "they what do they look like in production it might look like this um this is this is a small part of",
    "start": "139319",
    "end": "145500"
  },
  {
    "text": "Netflix's service topology apparently um they wouldn't give a higher res image so maybe they're a little embarrassed",
    "start": "145500",
    "end": "151200"
  },
  {
    "text": "for people to be able to read what's actually going on um of course you know you can redraw it to make it more simple make it easier to",
    "start": "151200",
    "end": "157560"
  },
  {
    "text": "read this is also Netflix apparently they've maybe got a little more connectivity than they should have",
    "start": "157560",
    "end": "165599"
  },
  {
    "text": "but you know when we do a when we do a talk when we do a demo we're probably looking at something like this right a",
    "start": "165599",
    "end": "171180"
  },
  {
    "text": "simplest system uh this might be you know part of your system in isolation this might be your",
    "start": "171180",
    "end": "176519"
  },
  {
    "text": "whole system if you're a new startup or this this might be um for the reason with the Doma paper from from Uber",
    "start": "176519",
    "end": "181860"
  },
  {
    "text": "that's a really good way of talking about breaking things up into little isolated uh sections I think there's",
    "start": "181860",
    "end": "187980"
  },
  {
    "text": "some animation on this slide that I forgotten about there we go um I'll probably come back to this point",
    "start": "187980",
    "end": "194340"
  },
  {
    "text": "actually I forgot this animated this wasn't meant to do that",
    "start": "194340",
    "end": "200340"
  },
  {
    "text": "um so there's a slightly thicker row there so when we've got to give an operation you know we've said we've got a user we've got some some web apis that",
    "start": "200340",
    "end": "207420"
  },
  {
    "text": "we're calling some external Services we've got a database for persistence and any given operation that a user performs",
    "start": "207420",
    "end": "212700"
  },
  {
    "text": "probably isn't going to hit all the services right uh you know users request the distributed transaction might even",
    "start": "212700",
    "end": "219300"
  },
  {
    "text": "end up going through a linear chain of services like this you know more than likely some of these services are going to call multiple others but for any",
    "start": "219300",
    "end": "226500"
  },
  {
    "text": "particular path you know we can look at it like this um and if it's if it's linear then it sort of forms a chain and we can reason",
    "start": "226500",
    "end": "232739"
  },
  {
    "text": "about things as a chain now this isn't what I'm you know this isn't necessary for what I'm going to talk",
    "start": "232739",
    "end": "238739"
  },
  {
    "text": "about and what I'm going to talk about applies to to the big messes that we've seen before but this is the mental model",
    "start": "238739",
    "end": "243959"
  },
  {
    "text": "I'll be using right this is the example because we can actually reason about it so imagine you know One path",
    "start": "243959",
    "end": "249239"
  },
  {
    "text": "uh a user makes a request service call service course service and to be honest it often I mean it",
    "start": "249239",
    "end": "254640"
  },
  {
    "text": "often is true like telcos are very big on this um yeah they might have a like a site by",
    "start": "254640",
    "end": "260459"
  },
  {
    "text": "a radio mask that's got a firewall and an app box and a media compressor and all kinds of other stuff and they will",
    "start": "260459",
    "end": "266460"
  },
  {
    "text": "Define chains out of them so depending on you know who you are your what service plan you've bought whether",
    "start": "266460",
    "end": "272160"
  },
  {
    "text": "you're roaming or native to their Network they're going to send you down different parts because they might firewalls on people they might give some",
    "start": "272160",
    "end": "277800"
  },
  {
    "text": "people more Media Services than others um so sort of linear change like this are more common than you think and as I",
    "start": "277800",
    "end": "283860"
  },
  {
    "text": "say it's a it's a mental model we can use um for more arbitrarily more complicated",
    "start": "283860",
    "end": "289919"
  },
  {
    "text": "systems this is why the animations here",
    "start": "289919",
    "end": "295860"
  },
  {
    "text": "um if you and if you think about your services a little bit then they probably fall into a few different categories",
    "start": "295860",
    "end": "301320"
  },
  {
    "text": "right so we probably have the blue things that sort of back ends they actually do the business Logic the heavy lifting but in order but these web apis",
    "start": "301320",
    "end": "308699"
  },
  {
    "text": "right maybe one returns XML because it's from the 90s maybe one is accessed over",
    "start": "308699",
    "end": "313800"
  },
  {
    "text": "an ipsec Tunnel right hands up if you work in finance we could hide those complexities and",
    "start": "313800",
    "end": "319139"
  },
  {
    "text": "those nastiness by making services that sort of shim them right so internally the blue Services can all talk to your",
    "start": "319139",
    "end": "324600"
  },
  {
    "text": "PC they can all use our internal auth mechanisms or rate limiting mechanisms and we and they could they will use",
    "start": "324600",
    "end": "330960"
  },
  {
    "text": "those way mechanisms to talk to the shim Services which will then not do any logic but take care of the sort of",
    "start": "330960",
    "end": "337020"
  },
  {
    "text": "transport um equally we can shim databases again so that whatever the database uses for",
    "start": "337020",
    "end": "342720"
  },
  {
    "text": "auth whatever the database is why a protocol is we can talk a sort of unified you know for example grpc",
    "start": "342720",
    "end": "348600"
  },
  {
    "text": "authenticated uh protocol to it and then maybe we've got a couple of front ends on front ends on that right",
    "start": "348600",
    "end": "355259"
  },
  {
    "text": "so this is your sort of back end for front-end pattern so when the user calls in they're going to get an HTML",
    "start": "355259",
    "end": "360660"
  },
  {
    "text": "rendering or they're going to get a rest API or a graphql API so again just something to bear in mind uh because",
    "start": "360660",
    "end": "366180"
  },
  {
    "text": "when we okay animation's getting annoying now when we trace a request through a system",
    "start": "366180",
    "end": "372060"
  },
  {
    "text": "like this the sort of a chain that we get has sort of front end and mid back end",
    "start": "372060",
    "end": "377759"
  },
  {
    "text": "whatever you want to call it middle end and then maybe a database shim uh so this is just something to bear in mind for a bit later",
    "start": "377759",
    "end": "384319"
  },
  {
    "text": "so continuous deployment continuous release which is the sort of problem we're actually trying to tackle I think",
    "start": "384419",
    "end": "389699"
  },
  {
    "text": "cicd has been a hot topic for you know maybe two decades now I'm going to look at the continuous deployment part of",
    "start": "389699",
    "end": "395940"
  },
  {
    "text": "that and what that actually means so say we've got our string of microservices right and there's a new",
    "start": "395940",
    "end": "402180"
  },
  {
    "text": "version there's a putative new version a candidate of one of them I'm going to call these things V1 and V2 you know",
    "start": "402180",
    "end": "408660"
  },
  {
    "text": "obviously they might be 1.035 and 1.036 or whatever",
    "start": "408660",
    "end": "414419"
  },
  {
    "text": "um you might have multiple candidate versions at a time so multiple people working on multiple branches that's all",
    "start": "414419",
    "end": "421259"
  },
  {
    "text": "that's all about it that works but V1 and V2 is simple so if I've got this candidate version it's in red right because it might not work yet",
    "start": "421259",
    "end": "428160"
  },
  {
    "text": "um but we want to start deploying it we want to we want to test it so how do we test it",
    "start": "428160",
    "end": "433380"
  },
  {
    "text": "or the agile you know agile testing pyramid says you should do something like this um this isn't a bad model it's not",
    "start": "433380",
    "end": "439319"
  },
  {
    "text": "perfect um but it's definitely not bad you know I have to I have to get that in there I",
    "start": "439319",
    "end": "444360"
  },
  {
    "text": "have to add I think before even the unit test you've got a type system and like a borrow Checker if you're using a good language",
    "start": "444360",
    "end": "450840"
  },
  {
    "text": "um but I mean the real point when I'm not just for rust is that the bottom part's like happening in",
    "start": "450840",
    "end": "456000"
  },
  {
    "text": "isolation right you're they'll happen in your cic system anywhere you can run a Unix process the top parts are sort of",
    "start": "456000",
    "end": "462720"
  },
  {
    "text": "testing in context if you like right they're testing with other services and they need to",
    "start": "462720",
    "end": "468060"
  },
  {
    "text": "have they actually have to happen in an environment so if we're going to spin up a chain of services and do an end-to-end test that's got to run in kubernetes",
    "start": "468060",
    "end": "474539"
  },
  {
    "text": "right that can't really be like a little test harness",
    "start": "474539",
    "end": "479360"
  },
  {
    "text": "so most people do the sort of integration tests and above the end-to-end tests like this you have you",
    "start": "479819",
    "end": "485340"
  },
  {
    "text": "know the build environment that's doing the unit tests the component tests and then you'll have a test environment",
    "start": "485340",
    "end": "490560"
  },
  {
    "text": "maybe that does the integration test and a staging environment where we do the system tests um to me I couldn't find a real",
    "start": "490560",
    "end": "498180"
  },
  {
    "text": "definition of this there's a lot of copies of this picture on the internet nobody seemed to want to actually put a",
    "start": "498180",
    "end": "503879"
  },
  {
    "text": "stake in the ground and give a definition for each of these levels um but to me system tests and manual",
    "start": "503879",
    "end": "509099"
  },
  {
    "text": "tests are both end-to-end tests you know system tests are automated I guess a manual tests are done by a human",
    "start": "509099",
    "end": "515219"
  },
  {
    "text": "and then we have prod where we actually release and where the service tasks get user traffic because we've tested it",
    "start": "515219",
    "end": "522320"
  },
  {
    "text": "so how do we run these integration tests well that's easy enough um you can do this in the wild west",
    "start": "523620",
    "end": "528660"
  },
  {
    "text": "sorry I mean I mean test right any way you can deploy software um but importantly not",
    "start": "528660",
    "end": "534959"
  },
  {
    "text": "CI this isn't a sort of unit test this in order to do an integration test a black box a service like this it needs",
    "start": "534959",
    "end": "541920"
  },
  {
    "text": "to be subject to you know real runtime resource constraints real runtime security constraints it needs",
    "start": "541920",
    "end": "547800"
  },
  {
    "text": "representative config files and environment variables but we can deploy it to an environment right and the little robots are like you know test",
    "start": "547800",
    "end": "552959"
  },
  {
    "text": "scripts that maybe call in call out tested like a black box but how do we do that into end testing",
    "start": "552959",
    "end": "558959"
  },
  {
    "text": "like how do we do this sort of manual testing or automated end-to-end testing we need to emphasize exercise this",
    "start": "558959",
    "end": "564240"
  },
  {
    "text": "service in in context in the context of this whole chained or more complicated graph",
    "start": "564240",
    "end": "569760"
  },
  {
    "text": "how do we do that well we can have a staging environment where all the new versions are deployed right but this",
    "start": "569760",
    "end": "576000"
  },
  {
    "text": "this isn't representative because these aren't versions if we're testing",
    "start": "576000",
    "end": "581339"
  },
  {
    "text": "you know this one we want to know how it behaves when it gets deployed it's not going to see the new version of this and",
    "start": "581339",
    "end": "586680"
  },
  {
    "text": "the candidate version of this it's going to be sitting in between the two production versions right you know assuming service",
    "start": "586680",
    "end": "592680"
  },
  {
    "text": "three is the one that gets through test and gets deployed first like this won't detect a breaking API",
    "start": "592680",
    "end": "597720"
  },
  {
    "text": "change right because if this this relies on a new eight this isn't backwards forwards compatible it relies on a new API from",
    "start": "597720",
    "end": "603899"
  },
  {
    "text": "here this kind of testing isn't going to detect that and this is obviously a big cause of breakages with microservices",
    "start": "603899",
    "end": "611779"
  },
  {
    "text": "so to get around that we could have the family environments we could spin up a new environment for each service you know even for each each PR right each",
    "start": "612360",
    "end": "619080"
  },
  {
    "text": "branch of each service but these are hard to build the the automation side to build they're",
    "start": "619080",
    "end": "624600"
  },
  {
    "text": "expensive to run and they're still not prod they're still not representative anybody has ever built one of these you",
    "start": "624600",
    "end": "629820"
  },
  {
    "text": "know they're always a look-alike of prod but they're never really quite the same",
    "start": "629820",
    "end": "635480"
  },
  {
    "text": "so testing in production why if we want it to be representative actually testing product why not testing prod",
    "start": "635820",
    "end": "642860"
  },
  {
    "text": "the issue with that is right is that our software is is so charity majors has this eye testing prod thing which",
    "start": "643440",
    "end": "649260"
  },
  {
    "text": "basically says you're never going to catch all there is in testing just release it and like and then deal with",
    "start": "649260",
    "end": "654540"
  },
  {
    "text": "it when the users find things you've never thought of that's I guess a little stage on from this um but when our software's under test",
    "start": "654540",
    "end": "661079"
  },
  {
    "text": "we're not ready to release it we don't want users to be exposed to its results",
    "start": "661079",
    "end": "666180"
  },
  {
    "text": "right we don't want it to get used to traffic because the flip side is we don't want new users to get results from it because they might be nonsense right",
    "start": "666180",
    "end": "672180"
  },
  {
    "text": "it might still be broken so we get to win if we can separate that",
    "start": "672180",
    "end": "678000"
  },
  {
    "text": "deployee stage from the release stage right so if we can deploy it if we can run the new version in production",
    "start": "678000",
    "end": "684420"
  },
  {
    "text": "subject to the all the all of the quirks of the production environment but we don't release it where release means you",
    "start": "684420",
    "end": "691079"
  },
  {
    "text": "know it doesn't get a user traffic so there's no risk to the business so where you can separate deploy and",
    "start": "691079",
    "end": "696899"
  },
  {
    "text": "release you know do we need separate tests and staging and prod environments you know I",
    "start": "696899",
    "end": "702060"
  },
  {
    "text": "would say not I can say they can all be one thing we can do all these things in the one environment",
    "start": "702060",
    "end": "707959"
  },
  {
    "text": "so how does that look like what does that look like well we now have the technology right what I really want to do is just",
    "start": "708540",
    "end": "714540"
  },
  {
    "text": "just test this V2 so the user traffic is you know going to be coming in and getting V1 V1 V1 because we know they're",
    "start": "714540",
    "end": "721140"
  },
  {
    "text": "all stable I want to be able to put it under test get some test traffic to go V1 V1 up to V2 and then down to V1 again",
    "start": "721140",
    "end": "729060"
  },
  {
    "text": "so this is all going to be in prod you know this is the prod database that I can read you know realistic data from",
    "start": "729060",
    "end": "735000"
  },
  {
    "text": "prod constraints but it's still under test so it's only getting traffic from the test bot but the test bot or you",
    "start": "735000",
    "end": "742440"
  },
  {
    "text": "know or the user the developer is at the front of that chain so they can't just sort of you can Cube CTL port forward to",
    "start": "742440",
    "end": "748500"
  },
  {
    "text": "right to here right and you can do integration tests but you can't you can't do an end-to-end System test like",
    "start": "748500",
    "end": "753720"
  },
  {
    "text": "that so the test agent needs to be opt-in able to opt in to test questions as V2 at an arbitrary depth down that chain",
    "start": "753720",
    "end": "762620"
  },
  {
    "text": "so how might We Do It um well if we add a cycle proxy to every service",
    "start": "763200",
    "end": "768959"
  },
  {
    "text": "and then we add a control plane to configure those well we've got a service mesh right and",
    "start": "768959",
    "end": "775860"
  },
  {
    "text": "with the service mesh we can take Advanced control sophisticated control of all of the traffic in the cluster we",
    "start": "775860",
    "end": "781320"
  },
  {
    "text": "can do Advanced routing so we can deploy all of the V2s like in a staging environment",
    "start": "781320",
    "end": "786600"
  },
  {
    "text": "sorry we can well but would be deploy them into prod but we don't let them get any user traffic because these sidecars",
    "start": "786600",
    "end": "792480"
  },
  {
    "text": "are doing Advanced routing for us and we can then change those routing",
    "start": "792480",
    "end": "798000"
  },
  {
    "text": "rules and we can put a little blip in the chain right and send things up to up to V2 and this is all done by the",
    "start": "798000",
    "end": "803760"
  },
  {
    "text": "service mesh this is all in kubernetes configured by yamls we're not fiddling around with IP tables or VMware Network",
    "start": "803760",
    "end": "811459"
  },
  {
    "text": "Shenanigans when we're not doing like layer 3 nonsense this is all nice and kubernetes Native",
    "start": "811459",
    "end": "818300"
  },
  {
    "text": "so has this been done before well yes actually it has",
    "start": "818700",
    "end": "823800"
  },
  {
    "text": "this slide did not load try reloading",
    "start": "823800",
    "end": "827720"
  },
  {
    "text": "oh it didn't load but I can show it anyway",
    "start": "829920",
    "end": "833480"
  },
  {
    "text": "I think oh that's true anyway um oh it's missing a QR code it's missing the QR code it's what it's missing okay I don't know why",
    "start": "836519",
    "end": "843060"
  },
  {
    "text": "um so I put a QR code to cite this I'm not getting a preview of it either",
    "start": "843060",
    "end": "848100"
  },
  {
    "text": "um so this was this was kind of inspired by a talk I saw called breaking up lifts deployment monolith given by a lift",
    "start": "848100",
    "end": "853620"
  },
  {
    "text": "engineer Jake Hoffman uh coupon London earlier this year essentially doing what I showed with the",
    "start": "853620",
    "end": "859440"
  },
  {
    "text": "proxies uh but Lyft has that so lift are the people that made Envoy right and",
    "start": "859440",
    "end": "864480"
  },
  {
    "text": "Envoy is the proxy that's used by istio and a bunch of other service meshes they but they don't use istio they don't",
    "start": "864480",
    "end": "871440"
  },
  {
    "text": "use one of their available service meshes because they were the first members with Envoy they've got their own custom thing their own custom control",
    "start": "871440",
    "end": "877200"
  },
  {
    "text": "plane um so they did this they managed to make this work but it can't be reproduced by",
    "start": "877200",
    "end": "883620"
  },
  {
    "text": "anybody else and there was a bunch of sort of custom seats they had to Fork Envoy and inject custom C plus plus code",
    "start": "883620",
    "end": "889079"
  },
  {
    "text": "into it so it I think it was a great idea when I saw that talk and they said hey this is the idea",
    "start": "889079",
    "end": "894360"
  },
  {
    "text": "um people should be doing this but it wasn't reproducible and I thought I'm pretty sure I can configure istio to",
    "start": "894360",
    "end": "900839"
  },
  {
    "text": "do that and then everybody can do it so what can we do with istio well yes we",
    "start": "900839",
    "end": "906600"
  },
  {
    "text": "can right because istio gives us those proxies as well istio gives us control plane it gives us native kubernetes-based configuration so we can",
    "start": "906600",
    "end": "913500"
  },
  {
    "text": "do it with istio and I'm gonna talk to you about how",
    "start": "913500",
    "end": "918740"
  },
  {
    "text": "so just a quick repack recap of the istio configuration types or the the two that we're going to need or maybe an",
    "start": "919320",
    "end": "925440"
  },
  {
    "text": "introduction for people who've not used this year before so these are cids writing kubernetes",
    "start": "925440",
    "end": "931459"
  },
  {
    "text": "we have the istio virtual service which is basically like given a request for",
    "start": "931459",
    "end": "937560"
  },
  {
    "text": "for a name service where do I send it so if somebody's trying to send a request a service Foo",
    "start": "937560",
    "end": "943260"
  },
  {
    "text": "you're in kubernetes right you're trying to send a request to Foo you end up at the service capital S Foo but with this",
    "start": "943260",
    "end": "948959"
  },
  {
    "text": "Joe like the virtual service kind of slots in before that it says okay you wanted food you use you know host Foo in your in your HTTP request but where's it",
    "start": "948959",
    "end": "956399"
  },
  {
    "text": "actually going so I can select different real Services if I want to I can select parts of therm I can sort of identify",
    "start": "956399",
    "end": "963779"
  },
  {
    "text": "subsets of them and say well yeah that one but we're only going to part of it um and I can I can make those routine",
    "start": "963779",
    "end": "970019"
  },
  {
    "text": "decisions based on headers or all kinds of other attributes of of the request so I can do basically this is what",
    "start": "970019",
    "end": "975959"
  },
  {
    "text": "introduces the layer 7 routing right the istio that sorry that kubernetes can't do",
    "start": "975959",
    "end": "981720"
  },
  {
    "text": "and then the destination rule type is so it's right when I've chosen where I've chosen where I'm going to root it to",
    "start": "981720",
    "end": "986820"
  },
  {
    "text": "when we're going to I'm going to go to say service two how do I talk to that thing so how do I load balance across",
    "start": "986820",
    "end": "992100"
  },
  {
    "text": "all the pods in service two do I use TLS when I talk to them and importantly should I only talk to a subset of them",
    "start": "992100",
    "end": "998220"
  },
  {
    "text": "should I pick out just a few of the pods in that deployment and only talk to them",
    "start": "998220",
    "end": "1003699"
  },
  {
    "text": "so we've expanded a blown up the sort of service chain here right this is this is the previous this is service two this is",
    "start": "1003860",
    "end": "1010820"
  },
  {
    "text": "service four and then for service three like the naive kubernetes way right as I make a deployment",
    "start": "1010820",
    "end": "1016519"
  },
  {
    "text": "and I put a service in front of it and it selects you know app equals through and I just select Foo and in this case",
    "start": "1016519",
    "end": "1022579"
  },
  {
    "text": "I've labeled the deployment version one if I deploy a fubita alongside food",
    "start": "1022579",
    "end": "1028040"
  },
  {
    "text": "stable then you know I label it V2 but kubernetes doesn't know any better it's just going to send the traffic to both",
    "start": "1028040",
    "end": "1033199"
  },
  {
    "text": "right the kubernetes 101. sorry to teach you for sucking eggs and it's going to do that relative to the you know",
    "start": "1033199",
    "end": "1039319"
  },
  {
    "text": "proportional to the number of pods in each one so I can come along with and these could",
    "start": "1039319",
    "end": "1046579"
  },
  {
    "text": "be replica sets rather than deployments right and that's how rolling update in kubernetes works",
    "start": "1046579",
    "end": "1051620"
  },
  {
    "text": "so I can come along with the existing OC IDs instead and I can slot that virtual service in front I can make these two",
    "start": "1051620",
    "end": "1056660"
  },
  {
    "text": "destination rules and I can say right there's a subset of this Foo thing that's V1",
    "start": "1056660",
    "end": "1063260"
  },
  {
    "text": "and that's that's this deployment and there's a subset of this food thing that's V2 and that's this deployment I can then slot the virtual service",
    "start": "1063260",
    "end": "1069559"
  },
  {
    "text": "fulfill in front and as we'll see it'll it'll say under some circumstances I want to go to this V1 part of it and",
    "start": "1069559",
    "end": "1075200"
  },
  {
    "text": "under some circumstances I want to get a V2 and my I can tell my virtual service right your default config your default",
    "start": "1075200",
    "end": "1081080"
  },
  {
    "text": "mode is to say in all the traffic so all of this is going through V1 right and so I can deploy V2 I can deploy it into",
    "start": "1081080",
    "end": "1087440"
  },
  {
    "text": "prod but I haven't released it because it won't get any user traffic it won't get any traffic at all at the moment because the virtual service says hey I'm",
    "start": "1087440",
    "end": "1093860"
  },
  {
    "text": "going to tell you how to tell V1 and V2 apart send everything to V1",
    "start": "1093860",
    "end": "1099279"
  },
  {
    "text": "but I can add some config to that virtual service to say oh well if the request comes in with with a header say",
    "start": "1100820",
    "end": "1105919"
  },
  {
    "text": "x override and it's right X override I want through V2 please then that can be",
    "start": "1105919",
    "end": "1111860"
  },
  {
    "text": "sent off to to V2 instead so any you know arbitrarily anywhere in the service graph arbitrarily anyway down that chain",
    "start": "1111860",
    "end": "1119660"
  },
  {
    "text": "if you've got a header that says hey I'd like to override food V2 we can send it through V2 and then back into the chain",
    "start": "1119660",
    "end": "1125179"
  },
  {
    "text": "as normal so this is this is how we do you know what I'm talking about this sort of testing in prod this this override",
    "start": "1125179",
    "end": "1131179"
  },
  {
    "text": "testing this is how we do what recreate what lifted and this is how we can figure it with istio",
    "start": "1131179",
    "end": "1138020"
  },
  {
    "text": "so what do those resources look like um if you've seen you know in our physio before to follow this we've got a",
    "start": "1138020",
    "end": "1143360"
  },
  {
    "text": "destination rule for food right so we say that this is talking about the host Foo and this is the identity",
    "start": "1143360",
    "end": "1150140"
  },
  {
    "text": "function right this is istio 101 we're saying well there's two subsets in this case um version one and you identify that by",
    "start": "1150140",
    "end": "1156860"
  },
  {
    "text": "a label on it that says version one and version two which is identified by label that says version two",
    "start": "1156860",
    "end": "1163280"
  },
  {
    "text": "we then get the virtual service which slots in front and does a little bit more routing so this is going to be I'm going to call this few overrides this",
    "start": "1163280",
    "end": "1169400"
  },
  {
    "text": "thing um it's looking again for any requests you can actually override more than one",
    "start": "1169400",
    "end": "1174919"
  },
  {
    "text": "service but it's saying any request to go to Foo and then it's got this HTTP block",
    "start": "1174919",
    "end": "1180500"
  },
  {
    "text": "and that's versus and again pretty simple stuff saying right match uh the header so Mash X override if it says",
    "start": "1180500",
    "end": "1186679"
  },
  {
    "text": "through V1 then it's going to go to Foo subset version one if it says 3v2 it's going to go to subset version two",
    "start": "1186679",
    "end": "1193880"
  },
  {
    "text": "and then our last stanza at the end so these these routing rules this is like nginx config right these things are matched and applied in order we then",
    "start": "1193880",
    "end": "1200539"
  },
  {
    "text": "have like a default route basically it doesn't have a match section in it which says anything that didn't match either the previous two so people who you know",
    "start": "1200539",
    "end": "1207080"
  },
  {
    "text": "people who aren't setting these override headers they're just going to go to V1 so normal traffic flow V1 but if you opt",
    "start": "1207080",
    "end": "1213919"
  },
  {
    "text": "in with the header you can go after V2 or of course you know that can be as long as you want any any other version",
    "start": "1213919",
    "end": "1220400"
  },
  {
    "text": "there's one little caveat with this this isn't quite what they look like you actually need to match like this you",
    "start": "1220400",
    "end": "1225980"
  },
  {
    "text": "actually need to use a regex to match uh the middle of you to match this x",
    "start": "1225980",
    "end": "1231440"
  },
  {
    "text": "override header so it gets a little bit messy um just to go through the Practical details",
    "start": "1231440",
    "end": "1236960"
  },
  {
    "text": "right in case anybody goes home and tries to re-implement this the reason for that um is we might we might have more than",
    "start": "1236960",
    "end": "1243980"
  },
  {
    "text": "one override right I might want to go to Food version two and then bar version three and something else version seven",
    "start": "1243980",
    "end": "1250039"
  },
  {
    "text": "so we might have multiple instances of this x override header you know because the value is service version",
    "start": "1250039",
    "end": "1256760"
  },
  {
    "text": "um if you if you use Curl to make this request you win multiple X override headers Cole puts them on the wire as",
    "start": "1256760",
    "end": "1263480"
  },
  {
    "text": "multiple keys right so you'll get two x override through V1 X over Y Bar V2",
    "start": "1263480",
    "end": "1268640"
  },
  {
    "text": "you'll get those separate headers um that used to not be allowed by the spec",
    "start": "1268640",
    "end": "1275059"
  },
  {
    "text": "the spec used to say you had to condense them like one key several values with a comma between them",
    "start": "1275059",
    "end": "1281179"
  },
  {
    "text": "the spec the the new spec I spent a long time reading rfcs the new spec now says you you're okay to send them uh",
    "start": "1281179",
    "end": "1289039"
  },
  {
    "text": "separately send separate keys with values so what we're doing is fine right and as",
    "start": "1289039",
    "end": "1294380"
  },
  {
    "text": "I say kill something like that uh golang forwards them like that because I'm doing the demo with a with a go language",
    "start": "1294380",
    "end": "1299480"
  },
  {
    "text": "with a simple golang thing what Envoy presents you when you're",
    "start": "1299480",
    "end": "1304640"
  },
  {
    "text": "trying to match these things is the single combined thing again not against the spec but a little bit of an old",
    "start": "1304640",
    "end": "1309860"
  },
  {
    "text": "version so you get you get presented X override precisely once no matter how many times you specified it and you get",
    "start": "1309860",
    "end": "1315440"
  },
  {
    "text": "the values collapse with with commas so we have to match a substring because",
    "start": "1315440",
    "end": "1321620"
  },
  {
    "text": "we we might have presented X override more than once Envoy if you're configuring Envoy",
    "start": "1321620",
    "end": "1328039"
  },
  {
    "text": "manually which you should never do uh gives you several ways of matching headers I can say I want to match an",
    "start": "1328039",
    "end": "1333080"
  },
  {
    "text": "exact string a prefix a suffix I've got a regex or I can use the contains thing",
    "start": "1333080",
    "end": "1338480"
  },
  {
    "text": "to match the substring istio only exposes part of envoy's API",
    "start": "1338480",
    "end": "1343820"
  },
  {
    "text": "and istio does not give you contains helpfully it still gives you exact prefix and regex it doesn't give you",
    "start": "1343820",
    "end": "1348980"
  },
  {
    "text": "contains it doesn't give you suffix so regex it is the registers in Envoy are Google's re2",
    "start": "1348980",
    "end": "1356780"
  },
  {
    "text": "syntax which took me a while um because it's a little different to other things and that you have to and",
    "start": "1356780",
    "end": "1362600"
  },
  {
    "text": "you have to match the whole string so we end up with I think this is the tightest you",
    "start": "1362600",
    "end": "1368419"
  },
  {
    "text": "can get I don't think we can be any tighter than that but basically saying well you might be the carrot you might",
    "start": "1368419",
    "end": "1374059"
  },
  {
    "text": "be the start of the string you might be the end you might be both because it might be the only value for this header but there might be something before it",
    "start": "1374059",
    "end": "1380299"
  },
  {
    "text": "and then a comma there might be something after it anyway just so you understand like why on Earth that horrible regex was for and this this was",
    "start": "1380299",
    "end": "1386780"
  },
  {
    "text": "the longest part I was like I can I left that conference thinking I can implement this in history oh this is fine this was honestly the longest part",
    "start": "1386780",
    "end": "1394779"
  },
  {
    "text": "um so the ammo's actually pretty simple right it's almost kind of basic istio usage but you're going to need one of",
    "start": "1395000",
    "end": "1401659"
  },
  {
    "text": "each of those resources one destination rule one virtual service for every you know every service every workload you've",
    "start": "1401659",
    "end": "1407419"
  },
  {
    "text": "got you're going to need a match for every version and it's going to need to be updated every time a new version is",
    "start": "1407419",
    "end": "1412820"
  },
  {
    "text": "deployed so that's a pretty big combinatorial explosion and it's ongoing work as well right if you're in a CS",
    "start": "1412820",
    "end": "1418340"
  },
  {
    "text": "automated CI CD environment where multiple versions are going out all the time you're going to need to be updating",
    "start": "1418340",
    "end": "1423860"
  },
  {
    "text": "those things quite a lot so it sounds like a great Target for Automation and that's exactly what I did",
    "start": "1423860",
    "end": "1430159"
  },
  {
    "text": "um and it was writing this you know I sort of went home and thought I can do this and I wrote this and then that's what made me think I should give this",
    "start": "1430159",
    "end": "1435740"
  },
  {
    "text": "talk uh to some tell folks about it so I've only got five minutes left I'm",
    "start": "1435740",
    "end": "1441679"
  },
  {
    "text": "gonna try to give you a quick demo um if anybody saw my tweet earlier",
    "start": "1441679",
    "end": "1448720"
  },
  {
    "text": "doesn't the latest version it doesn't work but I was able to roll back and the",
    "start": "1448940",
    "end": "1454220"
  },
  {
    "text": "previous version does um but anyways good enough hopefully everybody well that's got a bit smaller",
    "start": "1454220",
    "end": "1459860"
  },
  {
    "text": "than I thought what does that say no no",
    "start": "1459860",
    "end": "1465400"
  },
  {
    "text": "definitely not oh it's because I'm okay",
    "start": "1465400",
    "end": "1471400"
  },
  {
    "text": "I'm trying to there we go I'm trying my eye turn bigger",
    "start": "1471980",
    "end": "1476200"
  },
  {
    "text": "I can't see that screen so by the power of tmux I have the t-box same T-Max session attached here but anyway",
    "start": "1477260",
    "end": "1484820"
  },
  {
    "text": "um a few Scripts just to make this a little easier so",
    "start": "1484820",
    "end": "1489919"
  },
  {
    "text": "I've got I've got a cluster running I've got istio installed oh no I haven't oh no",
    "start": "1489919",
    "end": "1496220"
  },
  {
    "text": "how far did I get oh I didn't get very far at all I was resetting this thing okay bear with us while",
    "start": "1496220",
    "end": "1503799"
  },
  {
    "text": "oh that's how far I got okay I've uploaded the images uh so we",
    "start": "1504919",
    "end": "1511640"
  },
  {
    "text": "shouldn't be at the the mercy of conference Wi-Fi they should all learn quite quickly",
    "start": "1511640",
    "end": "1517899"
  },
  {
    "text": "sweet oh that's really you're not seeing what you're meant to see you're not seeing what I'm seeing",
    "start": "1520940",
    "end": "1528220"
  },
  {
    "text": "um istio promise",
    "start": "1530000",
    "end": "1535940"
  },
  {
    "text": "and then I can deploy a chain of services",
    "start": "1535940",
    "end": "1540158"
  },
  {
    "text": "okay",
    "start": "1549860",
    "end": "1552860"
  },
  {
    "text": "this is where you script demos this is why you screen record demos and",
    "start": "1556279",
    "end": "1561919"
  },
  {
    "text": "sit at the back with a beer while the demo plays but I didn't do that um so we're just going to deploy uh five",
    "start": "1561919",
    "end": "1568580"
  },
  {
    "text": "Services two copies of each right so service one to service five service One beta to service five beta",
    "start": "1568580",
    "end": "1575799"
  },
  {
    "text": "as I say the images are loaded and the the services are just a little golang thing I wrote right that it takes the",
    "start": "1579380",
    "end": "1584900"
  },
  {
    "text": "request forwards it including all the headers uh and they they log what they do",
    "start": "1584900",
    "end": "1591580"
  },
  {
    "text": "this hopefully shouldn't take too long",
    "start": "1593120",
    "end": "1596799"
  },
  {
    "text": "what else can I talk about while uh while this is happening um so yeah currently the service needs to",
    "start": "1605360",
    "end": "1611120"
  },
  {
    "text": "forward that header one of the future pieces though so the way",
    "start": "1611120",
    "end": "1616240"
  },
  {
    "text": "obviously there are security issues with that right you're definitely going to need to filter that out at Ingress so a user can't set it",
    "start": "1616240",
    "end": "1622640"
  },
  {
    "text": "um you I will have trust issues inside the mesh for that header because anything that's",
    "start": "1622640",
    "end": "1628159"
  },
  {
    "text": "compromised can start heading it setting it you know if it's a massive security risk to be redirected to a beta version",
    "start": "1628159",
    "end": "1633799"
  },
  {
    "text": "I don't know but um it's definitely something you don't want to make this into the wild west so you need to trust that header we could",
    "start": "1633799",
    "end": "1640760"
  },
  {
    "text": "think of maybe some way of signing it but actually what Lyft did was embed they didn't use a header they they put",
    "start": "1640760",
    "end": "1646700"
  },
  {
    "text": "this override information into the jot so they pass a jot round for service to service auth anyway and they were able",
    "start": "1646700",
    "end": "1651980"
  },
  {
    "text": "to stuff their header into the jot um that's something that I I just honestly didn't have enough time to add",
    "start": "1651980",
    "end": "1657320"
  },
  {
    "text": "to this operator yet that's definitely a way to do it um that also gives the possibility for",
    "start": "1657320",
    "end": "1663260"
  },
  {
    "text": "some more interesting stuff uh like we might want to do like a conditional override so one of the",
    "start": "1663260",
    "end": "1669320"
  },
  {
    "text": "things tetrate's working on in his product is like conditional auth so service a can talk to service B only if",
    "start": "1669320",
    "end": "1674840"
  },
  {
    "text": "like service Z was further down the chain right so you have to go Z to A and then you're allowed to go to B imagine",
    "start": "1674840",
    "end": "1681260"
  },
  {
    "text": "if we could I'm you know one solution to that is is um embedding nesting jots so imagine if",
    "start": "1681260",
    "end": "1687559"
  },
  {
    "text": "we could do that with this right I want the override version of the database shim only if I've been",
    "start": "1687559",
    "end": "1692779"
  },
  {
    "text": "through the override version of service one and the right version of service two so that's something I could start to to",
    "start": "1692779",
    "end": "1698480"
  },
  {
    "text": "work on I have no idea even if this was downloading it should be quicker than this I don't know what's going on I'm",
    "start": "1698480",
    "end": "1705440"
  },
  {
    "text": "probably not going to show you this sorry about that",
    "start": "1705440",
    "end": "1709480"
  },
  {
    "text": "oh somebody did say that Docker Hub is rate limiting kubecon because we're all on the same IP is that",
    "start": "1710900",
    "end": "1716539"
  },
  {
    "text": "what's going on",
    "start": "1716539",
    "end": "1719139"
  },
  {
    "text": "yeah maybe",
    "start": "1723260",
    "end": "1726159"
  },
  {
    "text": "well there you go honestly I've loaded the um I've been here before",
    "start": "1728659",
    "end": "1734419"
  },
  {
    "text": "and I've got a couple of scripts one that pulls all the images out of mini Cube and one that pushes them back in so they should that's why istio camera is",
    "start": "1734419",
    "end": "1740059"
  },
  {
    "text": "so quick they should be there oh well I'm not going to take your time with this uh honestly it works um",
    "start": "1740059",
    "end": "1745279"
  },
  {
    "text": "what we might have got enough if we've got the services that's actually enough to generate the metadata let me just",
    "start": "1745279",
    "end": "1752240"
  },
  {
    "text": "push push all these in where is uh",
    "start": "1752240",
    "end": "1757640"
  },
  {
    "text": "yeah not one of the top HTTP log that's my little thing like that's the thing that should be",
    "start": "1757640",
    "end": "1763640"
  },
  {
    "text": "should be happening we haven't got any of them but we've got okay we've got the services so I think",
    "start": "1763640",
    "end": "1771440"
  },
  {
    "text": "um yeah if we were to make a call down that chain we would get primary and beta versions at random standard kubernetes load balancing can't show you that",
    "start": "1771440",
    "end": "1777980"
  },
  {
    "text": "what I can show you",
    "start": "1777980",
    "end": "1781720"
  },
  {
    "text": "is the generation oh this is just going to apply them so this went in and it ran so my code",
    "start": "1783559",
    "end": "1789740"
  },
  {
    "text": "has got a CLI mode and an operator mode so it can run as an operator watch the services the pods the deployments and",
    "start": "1789740",
    "end": "1796220"
  },
  {
    "text": "continually emit the virtual services and the destination rules or there's a CLI mode right so you can",
    "start": "1796220",
    "end": "1802760"
  },
  {
    "text": "um try it out see what it's going to do integrate it into a git Ops pipeline do that kind of stuff because all of you",
    "start": "1802760",
    "end": "1808100"
  },
  {
    "text": "know what I'm doing is derivable from other permanent resources you've got so this was the code running and we just",
    "start": "1808100",
    "end": "1814100"
  },
  {
    "text": "piped it into Cube CTL apply so you can see it sort of found I found a service it found all the versions that back it",
    "start": "1814100",
    "end": "1820279"
  },
  {
    "text": "um if I run I'm not going to show you this so I will",
    "start": "1820279",
    "end": "1826299"
  },
  {
    "text": "so I just run it I'm running CLI mode locally it's going to connect to the cluster right and emit all of this stuff and this this looks as you would expect",
    "start": "1828620",
    "end": "1835039"
  },
  {
    "text": "it to look there's also an operator mode that uses exactly the same logic and just just does a watch I promise",
    "start": "1835039",
    "end": "1840440"
  },
  {
    "text": "so that's all the demo we're getting thanks Docker hub um",
    "start": "1840440",
    "end": "1846380"
  },
  {
    "text": "correct Emoji I guess um what else right so there's a few caveats",
    "start": "1846380",
    "end": "1852620"
  },
  {
    "text": "this that you know this was kind of a proof of concept and I thought I'll talk about it and it does work but I got a",
    "start": "1852620",
    "end": "1857960"
  },
  {
    "text": "bit busy so it does need a bit more work the moment the thing basically needs a namespace to itself right it's going to",
    "start": "1857960",
    "end": "1863120"
  },
  {
    "text": "look at the services and emit vs and DRS um if you've got any other virtual Services trying to do any more routing",
    "start": "1863120",
    "end": "1869179"
  },
  {
    "text": "they're just going to clash uh it does use the off-roader does use server side apply but obviously it doesn't own those",
    "start": "1869179",
    "end": "1875299"
  },
  {
    "text": "resources so it gets a little bit tricky I think there's a way around that with um you can delegate from one virtual",
    "start": "1875299",
    "end": "1880640"
  },
  {
    "text": "service to another so I think I might use an emission controller to patch anything I find to delegate and delegate",
    "start": "1880640",
    "end": "1886640"
  },
  {
    "text": "to myself and then do this thing I need to think about it but at the moment it kind of needs a namespace for itself it is Alpha um you know suggestions and",
    "start": "1886640",
    "end": "1893419"
  },
  {
    "text": "PR's welcome uh yes what other stuff you want me to do I talked about the header while we",
    "start": "1893419",
    "end": "1899240"
  },
  {
    "text": "were waiting um yeah get Ops so it's uh",
    "start": "1899240",
    "end": "1904640"
  },
  {
    "text": "it's kind of like transient state right these things that we emit but you can just you can run the CLI mode as part of",
    "start": "1904640",
    "end": "1910159"
  },
  {
    "text": "some kind of you know generation pipeline that that produces yaml so you'll get Ops repo",
    "start": "1910159",
    "end": "1916399"
  },
  {
    "text": "um yeah it's going to clash with anything that exists but I think I've got a couple of tricks I can use to fix that",
    "start": "1916399",
    "end": "1921980"
  },
  {
    "text": "um I probably don't have time to talk about that but it's I imagine if you could set up a route where I'm talking to remember I talked about the different",
    "start": "1921980",
    "end": "1927559"
  },
  {
    "text": "types of microservice if one of them is a database shim I might actually want to send gets to the stable one so I'm",
    "start": "1927559",
    "end": "1933440"
  },
  {
    "text": "reading from the prod database but posts database rights go to the the V2 shim",
    "start": "1933440",
    "end": "1938899"
  },
  {
    "text": "the test shim which is maybe just going to Black Hole them right because of a test order I don't actually want it to go in the database I don't want",
    "start": "1938899",
    "end": "1944120"
  },
  {
    "text": "Logistics to do anything so imagine if we could do something like that",
    "start": "1944120",
    "end": "1949159"
  },
  {
    "text": "um yeah so this thing's a database sharing right I might say hey I've been through a test V2 so I actually want to go to a",
    "start": "1949159",
    "end": "1956539"
  },
  {
    "text": "shim that's either going to send to a fake database or just you know drop",
    "start": "1956539",
    "end": "1961640"
  },
  {
    "text": "rights in memory or something so if we have this nice model of a logic list you",
    "start": "1961640",
    "end": "1967279"
  },
  {
    "text": "know a stateless database shim service then we can start doing these things and it becomes a lot safer",
    "start": "1967279",
    "end": "1974539"
  },
  {
    "text": "um yeah conditional routing is what I just talked about so yeah",
    "start": "1974539",
    "end": "1980539"
  },
  {
    "text": "um that's really what I wanted to show I wanted to talk about why we might want to do this so that",
    "start": "1980539",
    "end": "1985700"
  },
  {
    "text": "it's possible show that it's possible in istio and then talk to show you how to do it and then talk about the the sort",
    "start": "1985700",
    "end": "1991820"
  },
  {
    "text": "of automation I started using if anybody wants to go home and and do this themselves um the one last thing I wanted to show",
    "start": "1991820",
    "end": "1997940"
  },
  {
    "text": "is a sort of if we're coming through you know as as a service goes through like a cicd lifecycle right it gets built it",
    "start": "1997940",
    "end": "2005019"
  },
  {
    "text": "gets linted it gets unit tested you know",
    "start": "2005019",
    "end": "2010360"
  },
  {
    "text": "and then we get to right let's test it in prod so we're not sending user traffic to it the basic way of doing",
    "start": "2010360",
    "end": "2016000"
  },
  {
    "text": "that is by using a staging environment or an environmental environment I've hopefully persuaded you with the problems with those I think overrides",
    "start": "2016000",
    "end": "2022419"
  },
  {
    "text": "what I just showed is the sophisticated way of doing that are you then that's really as much testing as we can do in",
    "start": "2022419",
    "end": "2027760"
  },
  {
    "text": "isolation we then get on to you know releasing it separate from deploying it but we get on to releasing it it's only",
    "start": "2027760",
    "end": "2033399"
  },
  {
    "text": "unit user traffic and you almost certainly want to do a",
    "start": "2033399",
    "end": "2038500"
  },
  {
    "text": "roll out right you don't want to send it all the use of traffic at once um so the basic way of doing that kind of release is to let kubernetes do a",
    "start": "2038500",
    "end": "2045760"
  },
  {
    "text": "rolling update or to to fiddle with DNS records on the edge um the sophisticated way of doing that",
    "start": "2045760",
    "end": "2051580"
  },
  {
    "text": "is is Flagger so I think a combination of this thing you know you deploy your tester comes along sets the header gets",
    "start": "2051580",
    "end": "2058599"
  },
  {
    "text": "to isolate things and tests them and then you can let you know when you're happy with that and you press the button and Flagger starts to do a role that's a",
    "start": "2058599",
    "end": "2064240"
  },
  {
    "text": "real users that's what I was going to show you thank you [Applause]",
    "start": "2064240",
    "end": "2073859"
  },
  {
    "text": "I shouldn't have told you the code was broken because if we couldn't I could have just been our Docker Hub sorry I can't show you anything",
    "start": "2074139",
    "end": "2079658"
  },
  {
    "text": "um but I will say the the version 0.2 works and I will fix it um I think that's the end of the slot",
    "start": "2079659",
    "end": "2085300"
  },
  {
    "text": "I'll be around if anybody asks any questions but I won't I won't keep you here thanks a lot",
    "start": "2085300",
    "end": "2090419"
  }
]