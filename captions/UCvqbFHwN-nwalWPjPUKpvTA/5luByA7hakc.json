[
  {
    "text": "hello everyone Welcome to our talk and I'm just going to send myself my name is",
    "start": "60",
    "end": "6000"
  },
  {
    "text": "Diego Commerce I'm the head of security at sourcegraph I've been protecting Cloud native environments and",
    "start": "6000",
    "end": "12599"
  },
  {
    "text": "kubernetes environments in many companies I love all the security that can be enabled and the cloud native",
    "start": "12599",
    "end": "19080"
  },
  {
    "text": "projects so I would love to talk about all this here",
    "start": "19080",
    "end": "24859"
  },
  {
    "text": "stuff up hi everyone I'm Kristoff I work at data log mostly focusing on cloud security and open source topics",
    "start": "25199",
    "end": "32340"
  },
  {
    "text": "and yeah take it away you go thank you so today we would like to talk about",
    "start": "32340",
    "end": "37500"
  },
  {
    "text": "common pitfalls in managed kubernetes environments and some traps that you can find yourself to get into because it's",
    "start": "37500",
    "end": "46379"
  },
  {
    "text": "many things that can happen there just to start how many of you are working with Amazon eks",
    "start": "46379",
    "end": "55500"
  },
  {
    "text": "okay quite a few how many of you Google gke okay and Acer",
    "start": "55500",
    "end": "63719"
  },
  {
    "text": "oh quite a few how many of you multi-cloud well that's great thank you we'll have",
    "start": "63719",
    "end": "71040"
  },
  {
    "text": "for all of you thank you so and at the end we're going to show you that",
    "start": "71040",
    "end": "78000"
  },
  {
    "text": "we're releasing a tool that is going to help you to mitigate and handle some of the pitfalls and problems that we're",
    "start": "78000",
    "end": "83520"
  },
  {
    "text": "going to show you here so stay tuned because it's going to help you definitely",
    "start": "83520",
    "end": "90020"
  },
  {
    "text": "cool so we're going to be following the Journey of Kate today so Kate is a cloud native software engineer and she's going",
    "start": "90720",
    "end": "96960"
  },
  {
    "text": "to build a cat classifier app so it's a very simple app you give it a picture of",
    "start": "96960",
    "end": "102299"
  },
  {
    "text": "a cat and it gives you back what kind of cat it is so cage has an AWS account with an eks",
    "start": "102299",
    "end": "109740"
  },
  {
    "text": "cluster already deployed and she's going to deploy her application on the crystal so she authenticates to AWS she runs the",
    "start": "109740",
    "end": "117600"
  },
  {
    "text": "right command to get her cubeconfig and she's a bit cautious because she doesn't have any kind of access she has access",
    "start": "117600",
    "end": "123960"
  },
  {
    "text": "denied but she's a full admin to AWS account and that's the first thing that we generally run into the first trick is",
    "start": "123960",
    "end": "131099"
  },
  {
    "text": "that when you're on admin and AWS you don't necessarily have any kind of permissions on your Humanities cluster",
    "start": "131099",
    "end": "137520"
  },
  {
    "text": "and this is because permissions are managed inside of the cluster not through AWS I am so this also adds a",
    "start": "137520",
    "end": "145920"
  },
  {
    "text": "complexity that whoever creates the AWS eks cluster has invisible and immutable",
    "start": "145920",
    "end": "151800"
  },
  {
    "text": "rights to it so if it was maybe Kate's friend Jenny who created the cluster two",
    "start": "151800",
    "end": "156959"
  },
  {
    "text": "years ago she will still be a full admin of that but you don't see it anywhere and you cannot remove it",
    "start": "156959",
    "end": "163140"
  },
  {
    "text": "uh so this is the default config map that you have in the eks cluster it's a",
    "start": "163140",
    "end": "168300"
  },
  {
    "text": "config map that basically Maps AWS identities to kubernetes groups and in",
    "start": "168300",
    "end": "173940"
  },
  {
    "text": "this case this is the default one that tells you okay I want my nerds to have system nodes permissions but as we see",
    "start": "173940",
    "end": "179940"
  },
  {
    "text": "here Kate didn't create the cluster she's not in there so she doesn't have any kind of permissions this has some",
    "start": "179940",
    "end": "185700"
  },
  {
    "text": "interesting implications for incident response as well not only security but also you know when something starts to",
    "start": "185700",
    "end": "191519"
  },
  {
    "text": "break because you don't want to find out that you don't have access at 3am in the morning when you get paged",
    "start": "191519",
    "end": "198840"
  },
  {
    "text": "um and also it means that it's very hard actually to answer who is admining to my",
    "start": "198840",
    "end": "204180"
  },
  {
    "text": "eks cluster because you would have to go back in time find out who created your cluster and you know that we are still",
    "start": "204180",
    "end": "210120"
  },
  {
    "text": "administrators so that's that's an interesting challenge so now we want to give Kate's admin",
    "start": "210120",
    "end": "216959"
  },
  {
    "text": "access to our cluster so even though she's an admin to our AWS account we need to explicitly map her identity so",
    "start": "216959",
    "end": "223379"
  },
  {
    "text": "we say okay if you are an account admin in AWS you should also be a system Masters in kubernetes and now she has",
    "start": "223379",
    "end": "229860"
  },
  {
    "text": "the right access and she can start to work best for eks in overcloud so in Asia you",
    "start": "229860",
    "end": "235500"
  },
  {
    "text": "can do both so you can both manage access to the cluster through Azure airbag you have roles that are specific",
    "start": "235500",
    "end": "241860"
  },
  {
    "text": "to to the kubernetes API that are going to give you different levels access in there you can also give access from a",
    "start": "241860",
    "end": "249959"
  },
  {
    "text": "cluster or role binding so you just create a cluster value or role binding and you define you know this Azure ID",
    "start": "249959",
    "end": "257040"
  },
  {
    "text": "group should have this level of access in there in gcp you can do both as well so you",
    "start": "257040",
    "end": "264060"
  },
  {
    "text": "have gcp roles kubernetes engine cluster viewer cluster admin Etc but the main",
    "start": "264060",
    "end": "269400"
  },
  {
    "text": "issue with those is that you can only assign them at the project level so some people want to give access at specific",
    "start": "269400",
    "end": "275040"
  },
  {
    "text": "Crystal level and so for that you will have to use also a role binding or Crystal binding where your reference",
    "start": "275040",
    "end": "280680"
  },
  {
    "text": "Google Groups or Google users no she has a application running in eks",
    "start": "280680",
    "end": "286020"
  },
  {
    "text": "so Diego what's what's next yeah so now that K is able to interact",
    "start": "286020",
    "end": "292500"
  },
  {
    "text": "with the cluster and she wants to deploy an application that as we said before the cat classifier is going to receive",
    "start": "292500",
    "end": "299699"
  },
  {
    "text": "an input for the user to send the cat image and then",
    "start": "299699",
    "end": "306900"
  },
  {
    "text": "for example with this type of request the cloud classifier application will fetch more information externally to",
    "start": "306900",
    "end": "313919"
  },
  {
    "text": "validate the type of grid but this is the happy path sometimes when",
    "start": "313919",
    "end": "319259"
  },
  {
    "text": "there's a malicious attacker they can try to trick the application and try to",
    "start": "319259",
    "end": "324479"
  },
  {
    "text": "get information from what is not supposed to happen and have an external access and that's one way of defining",
    "start": "324479",
    "end": "331740"
  },
  {
    "text": "the server side of course forgery which is one of the elements in the latest version of the OAS top 10 and this is",
    "start": "331740",
    "end": "339419"
  },
  {
    "text": "very problematic because if there's not enough controls or parsing properly sanitizing",
    "start": "339419",
    "end": "346560"
  },
  {
    "text": "the application a malicious attacker can input the instance metadata and service",
    "start": "346560",
    "end": "353880"
  },
  {
    "text": "to fetch information that they shouldn't have access the attacker can try to",
    "start": "353880",
    "end": "358919"
  },
  {
    "text": "request this URL and then the cad classifier application will return the",
    "start": "358919",
    "end": "364800"
  },
  {
    "text": "information that it's available from within the pod in this case will be all the credentials of the note so now we'll",
    "start": "364800",
    "end": "373199"
  },
  {
    "text": "have this server size request watery and to the instant metadata service and you",
    "start": "373199",
    "end": "378600"
  },
  {
    "text": "need to remember that it's one of the most common causes of public Cloud Bridges misconfigurations and these",
    "start": "378600",
    "end": "385080"
  },
  {
    "text": "things that some applications are not handing properly so it's important that you are aware because it's very",
    "start": "385080",
    "end": "391259"
  },
  {
    "text": "appealing for attackers they can steal the worker now Cloud credentials they can authenticate this cluster as a",
    "start": "391259",
    "end": "398160"
  },
  {
    "text": "worker node but also impersonate any part that it's running within the node so this is a diagram of how the attacker",
    "start": "398160",
    "end": "406020"
  },
  {
    "text": "by the pot a is trying to request the credentials to be able to",
    "start": "406020",
    "end": "413039"
  },
  {
    "text": "use the node instance role so then once the information is retrieved the",
    "start": "413039",
    "end": "420000"
  },
  {
    "text": "attacker will be authenticated in the cluster the system notes and then it's going to be able to create a new token",
    "start": "420000",
    "end": "427380"
  },
  {
    "text": "for another part that it's running in the same node so then it will have in",
    "start": "427380",
    "end": "433080"
  },
  {
    "text": "their hands a service account token for pod B and then it will be able to authenticate a spot B and access",
    "start": "433080",
    "end": "439319"
  },
  {
    "text": "everything that part B has permissions access or anything so that's something",
    "start": "439319",
    "end": "444539"
  },
  {
    "text": "you need to be very aware of the limitations we're going to have a quick demo",
    "start": "444539",
    "end": "450060"
  },
  {
    "text": "so I really wanted this to be recorded the mobile someone told me that you have to do a live demo for your first coupon",
    "start": "450060",
    "end": "455300"
  },
  {
    "text": "so let's do that so we are here we are here with an application that's",
    "start": "455300",
    "end": "460919"
  },
  {
    "text": "running inside of eks which you can use to test any website so you give it google.com and it's going to tell you",
    "start": "460919",
    "end": "466740"
  },
  {
    "text": "okay this works I can fetch google.com if you pass it the URL of instance metadata service",
    "start": "466740",
    "end": "474020"
  },
  {
    "text": "we see that here we can access information again this is the metadata service of the node so it means that if",
    "start": "474180",
    "end": "480720"
  },
  {
    "text": "you do latest metadata you see here that we have information about the node including",
    "start": "480720",
    "end": "487380"
  },
  {
    "text": "security credentials which are the Canon shares of AWS attached to the instance",
    "start": "487380",
    "end": "492479"
  },
  {
    "text": "Rule and this is the rule attached to the workflow node that runs by pod so I can just do that and boom I get back AWS",
    "start": "492479",
    "end": "499680"
  },
  {
    "text": "credentials of the node so what can I do with that I open my shell I'm just going to put that into a Json file",
    "start": "499680",
    "end": "507419"
  },
  {
    "text": "then I'm going to export that into my shell so access key ID key",
    "start": "507419",
    "end": "514800"
  },
  {
    "text": "section token and what do I get here well I get to know that and the attack here on my omelette on my own laptop I'm",
    "start": "514800",
    "end": "521279"
  },
  {
    "text": "authenticated as we node against AWS which means that by Design",
    "start": "521279",
    "end": "526380"
  },
  {
    "text": "I'm also authenticated as a node against the cluster so what can I do with that first thing I",
    "start": "526380",
    "end": "532380"
  },
  {
    "text": "can get the purge I can see reports that are running in the default time space all in one application",
    "start": "532380",
    "end": "537839"
  },
  {
    "text": "can get all the rest of the pods oop zooming a little bit hard here but basically I have a few parts that I can",
    "start": "537839",
    "end": "544800"
  },
  {
    "text": "try to impersonate why because I'm the node and as the node I'm able by Design to create service account tokens for The",
    "start": "544800",
    "end": "551760"
  },
  {
    "text": "Purge version on me that's because the cubelette is responsible to uh to create",
    "start": "551760",
    "end": "557580"
  },
  {
    "text": "the service icon tokens and inject that into the pods so I can just say you know these are interesting micro Services I'm",
    "start": "557580",
    "end": "564720"
  },
  {
    "text": "going to try and impersonate the inventory service so if you Club CTL create a token for inventory service",
    "start": "564720",
    "end": "571080"
  },
  {
    "text": "which is just saying um I'm doing that for report which is the name of the Pod and this is the uid",
    "start": "571080",
    "end": "576779"
  },
  {
    "text": "of the Pod but you can just find from the code definition as well so we'll do that",
    "start": "576779",
    "end": "582660"
  },
  {
    "text": "we get back Json web token and if we decode it we see that a subject is",
    "start": "582660",
    "end": "587760"
  },
  {
    "text": "indeed the inventory service service account so what can we do with that if we do",
    "start": "587760",
    "end": "592980"
  },
  {
    "text": "TTL what can I do with this token right because that's the question we compromise the service account what can",
    "start": "592980",
    "end": "598019"
  },
  {
    "text": "we do with that well we can see here that we can see it but we can see that it's an admin service account which",
    "start": "598019",
    "end": "603600"
  },
  {
    "text": "means that with very simple vulnerability you are able to Pivot from being unauthenticated against a web",
    "start": "603600",
    "end": "609600"
  },
  {
    "text": "application to being a full cluster admin and you know privileged service accounts are pretty common generally you",
    "start": "609600",
    "end": "615899"
  },
  {
    "text": "have a bunch of demon cells that run as privilege for various reasons um not only that but you also have some",
    "start": "615899",
    "end": "621959"
  },
  {
    "text": "level of access against AWS so as we'll see it's somewhat limited but you can still do things like show me all the",
    "start": "621959",
    "end": "628740"
  },
  {
    "text": "easy two instances in the account including you know the network configuration what is exposed to the",
    "start": "628740",
    "end": "633839"
  },
  {
    "text": "internet the user data that they have which sometimes contains password if you ask pen testers you can also do various",
    "start": "633839",
    "end": "641100"
  },
  {
    "text": "things like um look at the network configuration so you know all sorts of interesting",
    "start": "641100",
    "end": "646380"
  },
  {
    "text": "things but you probably don't want another girl to do no back to this slide and I just take a",
    "start": "646380",
    "end": "653579"
  },
  {
    "text": "slide so what did we do because it was a bit fast",
    "start": "653579",
    "end": "658920"
  },
  {
    "text": "so first thing we compromise the nerd Canon shells from an application Level vulnerability right which means that we",
    "start": "658920",
    "end": "666120"
  },
  {
    "text": "are authenticated both against AWS and against kubernetes as with node by",
    "start": "666120",
    "end": "671399"
  },
  {
    "text": "Design which means that also by Design we were able to create a service account token for any service any product",
    "start": "671399",
    "end": "677760"
  },
  {
    "text": "running on Bernard and we found one with cluster admin rights so",
    "start": "677760",
    "end": "682860"
  },
  {
    "text": "a bit on the impact and how easy or not it is to exploit this in AWS the the",
    "start": "682860",
    "end": "688620"
  },
  {
    "text": "worker nodes we have Nim rules which is limited but still has some privileges three interesting things you can pull",
    "start": "688620",
    "end": "695339"
  },
  {
    "text": "all the container images in your account it's by Design you are node you are supposed to be able to pull stuff but",
    "start": "695339",
    "end": "700980"
  },
  {
    "text": "you know this is an old version in your in your account so probably don't want an attacker to do that either you can",
    "start": "700980",
    "end": "707160"
  },
  {
    "text": "describe and list a nuke all the network interfaces in the account as well it could be funny and again you can list",
    "start": "707160",
    "end": "713220"
  },
  {
    "text": "all the Clusters the ec2 instances the VPC so it's not terrible but it's not great either and by default unless you",
    "start": "713220",
    "end": "720300"
  },
  {
    "text": "have the version 2 of the instance metadata service and first this is going to work so by default it's going to be",
    "start": "720300",
    "end": "727140"
  },
  {
    "text": "exploitable in AWS in Asia by default your nerds don't have permissions so your workers knows they",
    "start": "727140",
    "end": "734339"
  },
  {
    "text": "have a managed identity assigned but by default they don't have anything attached to this role is going to be",
    "start": "734339",
    "end": "740220"
  },
  {
    "text": "iteratively added so when you enable for instance the integration with Azure container registry they add the",
    "start": "740220",
    "end": "746220"
  },
  {
    "text": "permission to say they should be able to pull from there so the impact is is less important and also sorry Diego uh also",
    "start": "746220",
    "end": "754860"
  },
  {
    "text": "when you try to talk to the instance metadata service of azure they require that you add a specific header metadata",
    "start": "754860",
    "end": "761339"
  },
  {
    "text": "through to show that you are intending to call it and not something else so here I have an application that's",
    "start": "761339",
    "end": "766440"
  },
  {
    "text": "vulnerable to sslf as well and if you try to call the Azure metadata service we see that we get a better request",
    "start": "766440",
    "end": "773519"
  },
  {
    "text": "response for gcp it's uh it's a bit different so when you create a VM and be supplies to",
    "start": "773519",
    "end": "781260"
  },
  {
    "text": "work anodes as well it uses the default service default compute service account with a limited scope but this scope does",
    "start": "781260",
    "end": "788459"
  },
  {
    "text": "include Dev storage.read only which means that you can read all the GCS buckets and the bigquery tables and when",
    "start": "788459",
    "end": "796320"
  },
  {
    "text": "you think about it that's where your data is right so it's not great and it also requires to add a specific header",
    "start": "796320",
    "end": "802440"
  },
  {
    "text": "to show that you are intending to call it now these are interesting counter",
    "start": "802440",
    "end": "808440"
  },
  {
    "text": "measures these headers that are interesting to counter exploitation of server-side requests for Joy right but",
    "start": "808440",
    "end": "814620"
  },
  {
    "text": "it doesn't solve the issue that you don't want someone from inside the Pod to be able to steal your Android Canon",
    "start": "814620",
    "end": "820320"
  },
  {
    "text": "shells so typically if you exploit a command injection SQL injection or",
    "start": "820320",
    "end": "825540"
  },
  {
    "text": "something like that you are still going to be able to call that by Design right here I have an application that's",
    "start": "825540",
    "end": "830820"
  },
  {
    "text": "vulnerable to Common injection and if I can run my own commands obviously I can",
    "start": "830820",
    "end": "836160"
  },
  {
    "text": "just add the editor that they want so the point being these headers that you have to add were very useful to prevent",
    "start": "836160",
    "end": "842279"
  },
  {
    "text": "exploitation of server-side request forgery where someone can request can make your application request any URL",
    "start": "842279",
    "end": "849180"
  },
  {
    "text": "they want but they don't solve the overall problem of a bird can steal all",
    "start": "849180",
    "end": "854399"
  },
  {
    "text": "the credentials of another",
    "start": "854399",
    "end": "857540"
  },
  {
    "text": "Cloud environments and so here you can see they are basically scanning for open cubelets and when we find one they run",
    "start": "865339",
    "end": "872160"
  },
  {
    "text": "viscoman which is essentially running a new pod which is basically just doing a double you get against the instance",
    "start": "872160",
    "end": "878459"
  },
  {
    "text": "metadata service to still not Helen Shield this is another report by Imagine where they show a threat actor that's",
    "start": "878459",
    "end": "884760"
  },
  {
    "text": "exploiting non-vulnerabilities in applications exposed to internet to just do the same",
    "start": "884760",
    "end": "890040"
  },
  {
    "text": "so it's it's very popular because it's very easy you get back AWS launchers that you can take on your laptop and",
    "start": "890040",
    "end": "895980"
  },
  {
    "text": "take it from there so how do we mitigate reports that are stealing their knowledge financials and",
    "start": "895980",
    "end": "902220"
  },
  {
    "text": "pivoting just like we did in the demo a few things in gcp it's very simple you just have to enable gke workload",
    "start": "902220",
    "end": "909180"
  },
  {
    "text": "identity it's by default for autopilot it's going to be by default soon for all",
    "start": "909180",
    "end": "914639"
  },
  {
    "text": "the gke clusters for all the new gke clusters and for Azure and AWS it's a bit more",
    "start": "914639",
    "end": "920160"
  },
  {
    "text": "complex we'll see why in a bit but basically you have to explicitly block the instant metadata service",
    "start": "920160",
    "end": "925980"
  },
  {
    "text": "you have to block Network the network access to it and we'll see why in a bit so Diego now we have our application in",
    "start": "925980",
    "end": "933060"
  },
  {
    "text": "the cloud how do we make it use actually like the cloud yeah thank you so yeah we",
    "start": "933060",
    "end": "940019"
  },
  {
    "text": "want our application to be scalable but also leverage the cloud services",
    "start": "940019",
    "end": "946560"
  },
  {
    "text": "um like all the scalability of S3 buckets or GCS or other services that we",
    "start": "946560",
    "end": "952860"
  },
  {
    "text": "want to leverage so our application needs to authenticate and it needs to interact with that so let's say how to",
    "start": "952860",
    "end": "960300"
  },
  {
    "text": "authenticate my application CAD classifier against the cloud provider API so I'm a little bit lazy but I want",
    "start": "960300",
    "end": "967920"
  },
  {
    "text": "a clever mind to tell me something to be more productive so I asked chat GPT and I tell you how do we get micronetis pod",
    "start": "967920",
    "end": "976199"
  },
  {
    "text": "access to upload things to S3 bucket so then chat Deputy say well just create an IM user and then you will be able to",
    "start": "976199",
    "end": "984000"
  },
  {
    "text": "have right access Okay so so the default process then someone",
    "start": "984000",
    "end": "990000"
  },
  {
    "text": "like it will create the kubernetes secrets with the specific data which will be the static credentials to access",
    "start": "990000",
    "end": "996920"
  },
  {
    "text": "S3 with the specific permissions of the am user but we know that",
    "start": "996920",
    "end": "1005440"
  },
  {
    "text": "static and lonely credentials usually end up being elected if they are not",
    "start": "1005440",
    "end": "1011060"
  },
  {
    "text": "taking care properly so you have seen many cases that some companies committing secrets in their GitHub repos",
    "start": "1011060",
    "end": "1017480"
  },
  {
    "text": "others in their cicd pipelines that are exposed lately so",
    "start": "1017480",
    "end": "1023300"
  },
  {
    "text": "this is not the ideal way today so they are easier and more secure ways to do it",
    "start": "1023300",
    "end": "1029600"
  },
  {
    "text": "interacting with the um calculated Secrets is much better we have an example like for example the npm",
    "start": "1029600",
    "end": "1037520"
  },
  {
    "text": "um security breach about they have an a static token someone was able to get it",
    "start": "1037520",
    "end": "1043400"
  },
  {
    "text": "and then be able to access to other repos and using the cloud credentials to",
    "start": "1043400",
    "end": "1048799"
  },
  {
    "text": "get more information from it so remember authenticating against the",
    "start": "1048799",
    "end": "1054740"
  },
  {
    "text": "cloud services it's parades a platform managed identity so your workload",
    "start": "1054740",
    "end": "1060860"
  },
  {
    "text": "identified natively with your cloud service instead of static credentials all the time",
    "start": "1060860",
    "end": "1066679"
  },
  {
    "text": "using AWS imros for service accounts you can also use workload identity and gke",
    "start": "1066679",
    "end": "1072820"
  },
  {
    "text": "and also this is deprecated but in Azure new preview is azure ad workload",
    "start": "1072820",
    "end": "1080299"
  },
  {
    "text": "identity so this is our recommendation to use the modern way easier and more",
    "start": "1080299",
    "end": "1085640"
  },
  {
    "text": "secure for your workloads to authenticate and here we can see that",
    "start": "1085640",
    "end": "1091640"
  },
  {
    "text": "how you can include this information for the workload in your",
    "start": "1091640",
    "end": "1097280"
  },
  {
    "text": "um service account of your pod that is going to be used we Define in an annotation that is going to specify the",
    "start": "1097280",
    "end": "1103220"
  },
  {
    "text": "role that you want your application to use in this case you can see the role of CAD classifier",
    "start": "1103220",
    "end": "1108260"
  },
  {
    "text": "and then that can be added as a in the Pod spec the service account name that you want",
    "start": "1108260",
    "end": "1115039"
  },
  {
    "text": "to use this is automatically injected into the file of the system of the Pod so you can",
    "start": "1115039",
    "end": "1121520"
  },
  {
    "text": "see that internally it's defined the right service account with the right CAD",
    "start": "1121520",
    "end": "1126980"
  },
  {
    "text": "classifier name of the role so then even if you try to validate X second into the",
    "start": "1126980",
    "end": "1134059"
  },
  {
    "text": "Pod you can see that when you interact with AWS and to authenticate you will",
    "start": "1134059",
    "end": "1140419"
  },
  {
    "text": "have the specific errand that it's the role for cat classifier for your application so as to say that when you do that as a",
    "start": "1140419",
    "end": "1147919"
  },
  {
    "text": "developer as someone who runs applications you don't need to care about how this works no let's still have a look at how it works so basically it's",
    "start": "1147919",
    "end": "1155000"
  },
  {
    "text": "just a matter of exchanging your kubernetes credentials to get some AWS functions right and the way it works is",
    "start": "1155000",
    "end": "1160760"
  },
  {
    "text": "with AWS STS assume role with web identity API which is basically a way to",
    "start": "1160760",
    "end": "1166580"
  },
  {
    "text": "say give me head on shares for this role and I'm giving you back a Json web token for that so here we say okay this is",
    "start": "1166580",
    "end": "1173900"
  },
  {
    "text": "reducing web token that I have it's signed by my kubernetes cluster and this is the role that I want and if the role",
    "start": "1173900",
    "end": "1179900"
  },
  {
    "text": "trust policy allows the right pod it's going to give me back AWS column charts so it's really a matter of exchanging",
    "start": "1179900",
    "end": "1186260"
  },
  {
    "text": "kubernetes head on child and getting back Cloud column shares",
    "start": "1186260",
    "end": "1191080"
  },
  {
    "text": "I think we can say yeah but it's an AI it doesn't know about IM rules for service accounts the funny thing is that",
    "start": "1191320",
    "end": "1197960"
  },
  {
    "text": "if you ask it okay how can I make this more secure it's going to tell you well just use IM rules for service accounts",
    "start": "1197960",
    "end": "1203720"
  },
  {
    "text": "which I think begs the question why didn't tell me from the start and when it tells you I don't make assumptions",
    "start": "1203720",
    "end": "1209600"
  },
  {
    "text": "about your security requirements which I think is a little bit easy and it begs the question of um we are using AI it's",
    "start": "1209600",
    "end": "1216620"
  },
  {
    "text": "great we need to understand also that you know it was trained on a massive data set that has insecure things and it",
    "start": "1216620",
    "end": "1222500"
  },
  {
    "text": "tends to reproduce the insection patterns that it sees so it's a great tool I use it every day but we just need to be aware of that and deal with it",
    "start": "1222500",
    "end": "1231280"
  },
  {
    "text": "it's very similar so you just annotate your service account with the identity you want and",
    "start": "1231460",
    "end": "1238520"
  },
  {
    "text": "you get back your Json web token in your pod that you can exchange similarly so very similar I won't extend on that in",
    "start": "1238520",
    "end": "1244880"
  },
  {
    "text": "Google Cloud it's very different so when you turn out when you turn on workload identity it creates a demon set in your",
    "start": "1244880",
    "end": "1251600"
  },
  {
    "text": "cluster which is going to create so you go free pods so one pod per node which",
    "start": "1251600",
    "end": "1257419"
  },
  {
    "text": "runs something called the gke metadata server which as far as I know is not open source it's not uh it's yeah it's",
    "start": "1257419",
    "end": "1264559"
  },
  {
    "text": "it's pretty much a black box and these are basically going to hijack all the requests from the Pod going to the",
    "start": "1264559",
    "end": "1270380"
  },
  {
    "text": "metadata Service as we can see here this is going to create magically some iptable rules on the Node but hijack the",
    "start": "1270380",
    "end": "1277760"
  },
  {
    "text": "metadata service and send it back to the Pod and Report the metadata server pod Branch to a link",
    "start": "1277760",
    "end": "1283940"
  },
  {
    "text": "look at IP here which means that when you are from inside the Pod and you call the metadata service you're going to hit",
    "start": "1283940",
    "end": "1290059"
  },
  {
    "text": "this pods instead now to sum up how do we prevent our pods",
    "start": "1290059",
    "end": "1297140"
  },
  {
    "text": "from stealing our nerds Canon shells and this builds up on our previous slide",
    "start": "1297140",
    "end": "1302419"
  },
  {
    "text": "in gke enabling worker identity is enough why because even if your Birds can't hit",
    "start": "1302419",
    "end": "1308179"
  },
  {
    "text": "the metadata service they are basically automatically going to get back credentials for what they need not the",
    "start": "1308179",
    "end": "1314120"
  },
  {
    "text": "node current shares in AWS and Asia is very different what",
    "start": "1314120",
    "end": "1319280"
  },
  {
    "text": "you get as we saw with an extra Json web token on your file system but you can still call the metadata service right so",
    "start": "1319280",
    "end": "1326120"
  },
  {
    "text": "you have to explicitly block it with a network policy or with IP table rules something like this",
    "start": "1326120",
    "end": "1332539"
  },
  {
    "text": "so again in gke workload iot is enough AWS and Azure ID you have to explicitly",
    "start": "1332539",
    "end": "1338059"
  },
  {
    "text": "block it one exception is that if you have pods that use host networking by Design they",
    "start": "1338059",
    "end": "1344720"
  },
  {
    "text": "are not they are not constrained by this so they will be able to call it which kind of makes sense",
    "start": "1344720",
    "end": "1350900"
  },
  {
    "text": "now Diego we want to call an extra service called cat GPT so how do we do that yeah thank you so we continue with",
    "start": "1350900",
    "end": "1358520"
  },
  {
    "text": "our application and then apart from leveraging the cloud services that we authenticate with workload Identity or",
    "start": "1358520",
    "end": "1364640"
  },
  {
    "text": "other Mains we also want to leverage third-party services to do more things",
    "start": "1364640",
    "end": "1371480"
  },
  {
    "text": "with our applications so the way that we're going to interact with that is popular options nowadays are using",
    "start": "1371480",
    "end": "1379280"
  },
  {
    "text": "things like external Secrets operator so kubernetes Secret store CSI driver to",
    "start": "1379280",
    "end": "1385100"
  },
  {
    "text": "Leverage The Google Secrets manager or the other cloud provider Secrets manager and that's very popular because it helps",
    "start": "1385100",
    "end": "1393020"
  },
  {
    "text": "you with all the operations and all the updates so the operator pattern creates",
    "start": "1393020",
    "end": "1398840"
  },
  {
    "text": "this type of either demon set or other pods that will help you automate a lot",
    "start": "1398840",
    "end": "1404539"
  },
  {
    "text": "of things but at the same time we need to be careful because it can be very risky depending how it's set up so a lot",
    "start": "1404539",
    "end": "1411200"
  },
  {
    "text": "of problems in the clouds you might know it's misconfiguration so if because it more convenient and it's faster for some",
    "start": "1411200",
    "end": "1418100"
  },
  {
    "text": "teams you just put star star in the permissions it can be very risky a misconfiguration of the policy of the",
    "start": "1418100",
    "end": "1423740"
  },
  {
    "text": "roles can be something like this you're going to allow that operator to list all",
    "start": "1423740",
    "end": "1429679"
  },
  {
    "text": "the secrets get all the secret value from any type of resource so if someone",
    "start": "1429679",
    "end": "1434840"
  },
  {
    "text": "compromises that part of that operator following the ways that we said before you are going to have access to the",
    "start": "1434840",
    "end": "1441679"
  },
  {
    "text": "whole secrets that are available Okay so if the malicious attackers",
    "start": "1441679",
    "end": "1447440"
  },
  {
    "text": "compromise a secret operator they're going to have access to the crunchyrolls in all the secrets that you have in that",
    "start": "1447440",
    "end": "1453320"
  },
  {
    "text": "account so we're going to go for an example let's push it",
    "start": "1453320",
    "end": "1460899"
  },
  {
    "text": "because I've ever things are going to get bad so we continue from the previous amount that",
    "start": "1461600",
    "end": "1466700"
  },
  {
    "text": "we have the growth of the note and we can validate that we are in the",
    "start": "1466700",
    "end": "1473179"
  },
  {
    "text": "system node and role within the cluster then now we can identify and say oh",
    "start": "1473179",
    "end": "1478940"
  },
  {
    "text": "let's see what are the parts that are available is there anything interesting within the cluster so maybe yeah these",
    "start": "1478940",
    "end": "1484520"
  },
  {
    "text": "external Secrets it's very appealing for an attacker let's see if we can get something from here so now we can as we",
    "start": "1484520",
    "end": "1492080"
  },
  {
    "text": "said before and try to create um let's get the service account to see if this information it's not available directly",
    "start": "1492080",
    "end": "1499400"
  },
  {
    "text": "but we can get it from the pods information we output in the yaml and then we can see the specific area and",
    "start": "1499400",
    "end": "1505580"
  },
  {
    "text": "role that it's assigned to that pod so now we let's say let's create a new service account",
    "start": "1505580",
    "end": "1511400"
  },
  {
    "text": "that it's going to have the same role that external secrets so we create a new",
    "start": "1511400",
    "end": "1516740"
  },
  {
    "text": "token and we store this information and we're going to leverage this information to create a we",
    "start": "1516740",
    "end": "1524840"
  },
  {
    "text": "confirm that here we have the specific service account for external secrets and",
    "start": "1524840",
    "end": "1530480"
  },
  {
    "text": "now we can thanks to that token authenticate against AWS with a specific",
    "start": "1530480",
    "end": "1536419"
  },
  {
    "text": "um role that we have from external secrets and get the credentials to be able to",
    "start": "1536419",
    "end": "1542480"
  },
  {
    "text": "use that so now we export the access",
    "start": "1542480",
    "end": "1547940"
  },
  {
    "text": "Keys secret sheets using token and we're going to be able to leverage that to do",
    "start": "1547940",
    "end": "1554360"
  },
  {
    "text": "anything that the external Seekers can access from AWS we're going to do it in the same way",
    "start": "1554360",
    "end": "1560480"
  },
  {
    "text": "now that we are authenticating against the AWS we have confirmation that our role is external",
    "start": "1560480",
    "end": "1568400"
  },
  {
    "text": "Secrets role so Happy Days let's get the secrets so let's see what we can have so",
    "start": "1568400",
    "end": "1574400"
  },
  {
    "text": "we see that from the circuits manager of AWS we're going to have a lot of GOC staff and there are common things like",
    "start": "1574400",
    "end": "1581539"
  },
  {
    "text": "GitHub API keys I think that that will be the next step an attacker will say Okay I want to get that GitHub secret",
    "start": "1581539",
    "end": "1588679"
  },
  {
    "text": "give me the specific value and here in secret string you can see the value and",
    "start": "1588679",
    "end": "1593960"
  },
  {
    "text": "now the attacker can go into other places and try to pull the repo contents and probably there will be other",
    "start": "1593960",
    "end": "1600679"
  },
  {
    "text": "credentials there as well so continue in the demo initially we",
    "start": "1600679",
    "end": "1606140"
  },
  {
    "text": "compromise the node through a vulnerability of the application and we got the credentials for the note by the",
    "start": "1606140",
    "end": "1612440"
  },
  {
    "text": "instant mandated service we enumerated the parts because within the node you can see what it's running and then we",
    "start": "1612440",
    "end": "1620000"
  },
  {
    "text": "created a new service account for that juicy pod that has a lot of permissions presumably so we changes those",
    "start": "1620000",
    "end": "1628880"
  },
  {
    "text": "permissions well that service account to get the permissions to interact with AWS and have the credentials and you get the",
    "start": "1628880",
    "end": "1636799"
  },
  {
    "text": "secret you get the secret and you get the secret so everyone is happy now but not the people that leaks in that is",
    "start": "1636799",
    "end": "1644480"
  },
  {
    "text": "Bridge anyway so operators are Bridging the Gap between",
    "start": "1644480",
    "end": "1649880"
  },
  {
    "text": "the cluster and the cloud some are very powerful they're very useful they are",
    "start": "1649880",
    "end": "1654919"
  },
  {
    "text": "very convenient but also you need to be aware that managed Cloud infrastructure",
    "start": "1654919",
    "end": "1659960"
  },
  {
    "text": "through the operator can be risky because you can see here",
    "start": "1659960",
    "end": "1665059"
  },
  {
    "text": "some of these operators you can define a policy that they are administrator",
    "start": "1665059",
    "end": "1671000"
  },
  {
    "text": "access and they can do a lot of things in your account so you need to be careful of the policies and the roles",
    "start": "1671000",
    "end": "1677900"
  },
  {
    "text": "and everything that you assign to The Operators it makes your life easier in some parts but it can be riskier in",
    "start": "1677900",
    "end": "1683419"
  },
  {
    "text": "others so what you can do to minimize the impact of compromise operators try to",
    "start": "1683419",
    "end": "1690080"
  },
  {
    "text": "assign minimal Cloud privileges to The Operators things like tag based access control that you can Define or where the",
    "start": "1690080",
    "end": "1697580"
  },
  {
    "text": "operators are running you can use something like I am live where it identifies the interactions of your",
    "start": "1697580",
    "end": "1705020"
  },
  {
    "text": "workloads with the cloud provider and then it helps you to define the policy the minimal one that it's needed for",
    "start": "1705020",
    "end": "1711320"
  },
  {
    "text": "that workload and you also need to know how that can be pivoted to other places",
    "start": "1711320",
    "end": "1717080"
  },
  {
    "text": "cool so wrapping up but we still have a few minutes so not too much if you have",
    "start": "1717080",
    "end": "1722179"
  },
  {
    "text": "to listen for one minute it's going to be now so key takeaways don't have code Cloud Canon shares in workloads in",
    "start": "1722179",
    "end": "1728480"
  },
  {
    "text": "kubernetes I think in 2023 there's no good reason to do that because there are a lot of mechanisms that work well uh so",
    "start": "1728480",
    "end": "1735320"
  },
  {
    "text": "you know use something that's simpler and more secure you don't have to think about oh I need one IM user for",
    "start": "1735320",
    "end": "1740360"
  },
  {
    "text": "production one for the I've went for you know it's going to be managed by the platform you only have temporary credentials but you don't need to worry",
    "start": "1740360",
    "end": "1746240"
  },
  {
    "text": "about leaking let's take the access that pods have to a metadata service",
    "start": "1746240",
    "end": "1751580"
  },
  {
    "text": "again for AWS and Azure you need to block it explicitly with a network policy for gcp just enable workload",
    "start": "1751580",
    "end": "1758240"
  },
  {
    "text": "identity and finally when you assign permissions to workloads in the cloud but you need to be mindful of what you",
    "start": "1758240",
    "end": "1764600"
  },
  {
    "text": "are doing because it creates some kind of pivot point now that's a rough picture of myself trying to figure out",
    "start": "1764600",
    "end": "1770659"
  },
  {
    "text": "okay I have a bunch of birds they have service accounts they are tagged like this and have a bunch of AWS roles and",
    "start": "1770659",
    "end": "1776539"
  },
  {
    "text": "we have a trust policy so which workload can take which role in AWS and so for these challenges we are",
    "start": "1776539",
    "end": "1783740"
  },
  {
    "text": "actually um so there's this one is also you know you end up in a cluster you're like do I",
    "start": "1783740",
    "end": "1789740"
  },
  {
    "text": "have any hard quality Secrets here where do you look uh how do you know like that you don't have first positives",
    "start": "1789740",
    "end": "1794840"
  },
  {
    "text": "and how do you test if you properly block access to the Pod from the board to the instance metadata service and so",
    "start": "1794840",
    "end": "1801740"
  },
  {
    "text": "just this morning we are releasing a new tool that's called the manage kubernetes auditing toolkit and the idea is that",
    "start": "1801740",
    "end": "1807380"
  },
  {
    "text": "there are a lot of tools that allow you to audit your your Cloud lots of them allow you to audit kubernetes but I",
    "start": "1807380",
    "end": "1813919"
  },
  {
    "text": "think there's a gap in the middle when you want to find Cloud specific issues in kubernetes clusters",
    "start": "1813919",
    "end": "1819520"
  },
  {
    "text": "and so that's what we are trying to do here three main features that we're going to see in a live demo because why",
    "start": "1819520",
    "end": "1826100"
  },
  {
    "text": "not let's push it so the name is MCAT which stands for manage kubernetes",
    "start": "1826100",
    "end": "1831260"
  },
  {
    "text": "auditing toolkit it's a single binary you can install it easily and so it has a few features and follow it only",
    "start": "1831260",
    "end": "1837559"
  },
  {
    "text": "supports eks first thing we can do is look at the role relationships and you'll see what this does so",
    "start": "1837559",
    "end": "1845659"
  },
  {
    "text": "we say show me the role relationship but I have in my cluster and this is just to export it as gravis format and render it",
    "start": "1845659",
    "end": "1852500"
  },
  {
    "text": "in a PNG and I do that is going to look at the roles in my account and the pods",
    "start": "1852500",
    "end": "1857600"
  },
  {
    "text": "and it's going to tell me okay so this is what you have you have a bunch of code here they are running in this name",
    "start": "1857600",
    "end": "1863240"
  },
  {
    "text": "space and they can assume these specific roles in AWS so it's not going to give you exactly what you need to do but at",
    "start": "1863240",
    "end": "1870020"
  },
  {
    "text": "least it allows you to get a visualization of what's going on and if you need to worry about something for",
    "start": "1870020",
    "end": "1875360"
  },
  {
    "text": "instance here I have a bunch of birds that can assume this specific role maybe I want to check if it's not too privileged things like that",
    "start": "1875360",
    "end": "1881779"
  },
  {
    "text": "so one thing is going to be able to do is find secrets and you know this looks",
    "start": "1881779",
    "end": "1886880"
  },
  {
    "text": "simple but actually it's pretty hard because you can have a lot of first positives so we try to minimize that by",
    "start": "1886880",
    "end": "1892580"
  },
  {
    "text": "saying we show the secrets that you have in config maps in secrets in input",
    "start": "1892580",
    "end": "1897860"
  },
  {
    "text": "definitions so we show only AWS access keys and we only make sure that like we make sure that you have an access key",
    "start": "1897860",
    "end": "1904039"
  },
  {
    "text": "and the secret key in the same resource so if you only have something that looks like a secret key you won't be alerted",
    "start": "1904039",
    "end": "1911299"
  },
  {
    "text": "and finally we can also test if you properly block the access to instance metadata service so it's going to run a",
    "start": "1911299",
    "end": "1918080"
  },
  {
    "text": "pod use Curl inside that and it's going to tell you hey be careful imgs is not",
    "start": "1918080",
    "end": "1923179"
  },
  {
    "text": "blocked and any port can get column cells for the role of the crystal which is this one",
    "start": "1923179",
    "end": "1928360"
  },
  {
    "text": "of this tool a few things I think it's really important that when we release",
    "start": "1928360",
    "end": "1933860"
  },
  {
    "text": "something we are able to show like how it compares to over over tools because we don't want to just be pushing around",
    "start": "1933860",
    "end": "1939980"
  },
  {
    "text": "you know some tools and then the community struggles to understand how we compare to other one so we try to do",
    "start": "1939980",
    "end": "1945740"
  },
  {
    "text": "this work for you it's invaried me of a tool by the way go ahead and try it out it's a single",
    "start": "1945740",
    "end": "1951559"
  },
  {
    "text": "binary so you can install it with Homebrew there are pre-compiled binaries for Linux Mac and windows as well and",
    "start": "1951559",
    "end": "1959000"
  },
  {
    "text": "there is the roadmap so first thing we're going to try and do is visualize pods that are externally exposed for",
    "start": "1959000",
    "end": "1965299"
  },
  {
    "text": "load balancer second one is ADD support for gke which by Design is going to be different and add detection for more",
    "start": "1965299",
    "end": "1972679"
  },
  {
    "text": "Cloud specific secrets so for instance we want to see if you have a gcp service account key in your iws secret sorry in",
    "start": "1972679",
    "end": "1979940"
  },
  {
    "text": "your AWS cluster I think it makes sense to flag that as well so thanks a lot",
    "start": "1979940",
    "end": "1985720"
  },
  {
    "text": "this is the link to the session where you can see the slide and please go ahead and leave some feedback I'm",
    "start": "1985720",
    "end": "1992720"
  },
  {
    "text": "interested to hear if you like to talk if it was too security focused too more Cloud focused if you would have liked",
    "start": "1992720",
    "end": "1999019"
  },
  {
    "text": "some more musical content more focused on AWS we're probably going to release some blog posts on that so this will be",
    "start": "1999019",
    "end": "2004299"
  },
  {
    "text": "super helpful thank you [Applause]",
    "start": "2004299",
    "end": "2011500"
  }
]