[
  {
    "text": "hi everyone thank you for being here today and uh let's just get the talk",
    "start": "480",
    "end": "7559"
  },
  {
    "text": "started first a little bit about myself uh my name is CC hang and I'm currently",
    "start": "7559",
    "end": "13120"
  },
  {
    "text": "working at Google as a software engineer and uh I have been contributing directly",
    "start": "13120",
    "end": "19279"
  },
  {
    "text": "to kuity Upstream for a couple years and cross multiple s for those who are not",
    "start": "19279",
    "end": "25080"
  },
  {
    "text": "familiar with kuity Upstream Community s is short for um special interest group",
    "start": "25080",
    "end": "31519"
  },
  {
    "text": "and I started at the City Club writer and W the contributor award there and then I I released kuity",
    "start": "31519",
    "end": "39600"
  },
  {
    "text": "127 as the uh release manager which is the previous release and I'm also a",
    "start": "39600",
    "end": "45520"
  },
  {
    "text": "contributor in Sig API Machinery with the focus on the extensible uh features",
    "start": "45520",
    "end": "51399"
  },
  {
    "text": "and recently uh I'm leading the S related work there and which we're going to talk about little bit in our next um",
    "start": "51399",
    "end": "59920"
  },
  {
    "text": "slides maybe so the topic is declarative everything and uh what's going to be",
    "start": "59920",
    "end": "66000"
  },
  {
    "text": "covered today so we are first begin with the declarative nature of communities",
    "start": "66000",
    "end": "71799"
  },
  {
    "text": "and uh uh then talk about the uh notable",
    "start": "71799",
    "end": "76840"
  },
  {
    "text": "me missing pieces inside declarative apis and talking about all the",
    "start": "76840",
    "end": "81880"
  },
  {
    "text": "improvements we did and plan to do and then the future plan at the end so let's",
    "start": "81880",
    "end": "88960"
  },
  {
    "text": "start with the declar nature of communities but first let's begin with the very basic concept of declarative",
    "start": "88960",
    "end": "95799"
  },
  {
    "text": "versus imperative I know most of you might already familiar with the concept but in",
    "start": "95799",
    "end": "100920"
  },
  {
    "text": "short words declarative is when you see what you want while on imperative is",
    "start": "100920",
    "end": "106479"
  },
  {
    "text": "when you see how to get what you want so let's take a look at example of a costal",
    "start": "106479",
    "end": "112200"
  },
  {
    "text": "sampling station I just assume everyone love the free food there so s would love",
    "start": "112200",
    "end": "117560"
  },
  {
    "text": "to make sure there are always six samples on the tree and for doing it uh",
    "start": "117560",
    "end": "123320"
  },
  {
    "text": "imperatively uh we maybe periodically check the number of the samples on the tree and if the number doesn't match",
    "start": "123320",
    "end": "130520"
  },
  {
    "text": "what we want we make adjustments for example if it's empty we just make six samples and put them on the tree if it's",
    "start": "130520",
    "end": "137760"
  },
  {
    "text": "more we just take off the extra while the declarative way would be to State",
    "start": "137760",
    "end": "142879"
  },
  {
    "text": "the desired state which is um seven having like six one samples on the tree",
    "start": "142879",
    "end": "148519"
  },
  {
    "text": "and uh you can rely on system to do the right things for you and you don't need to worry about how the system ensures",
    "start": "148519",
    "end": "155239"
  },
  {
    "text": "the desired state to maintain throughout a time so how it can achieve the Inc is",
    "start": "155239",
    "end": "162959"
  },
  {
    "text": "you just specify your desired state with a configuration file like this everyone familiar with yarm and after submitted",
    "start": "162959",
    "end": "169599"
  },
  {
    "text": "to communities Community would perform all the sample monitoring and adjustment for you in a control Loop which we also",
    "start": "169599",
    "end": "176360"
  },
  {
    "text": "call it a Reconciliation Loop so what's the the benefit of this um the biggest",
    "start": "176360",
    "end": "182040"
  },
  {
    "text": "thing is that Community declarative API enforced the separation of responsibilities so you don't need to",
    "start": "182040",
    "end": "187519"
  },
  {
    "text": "spend effort to develop and maintain the implementation and it's much more intuitive to understand what the end",
    "start": "187519",
    "end": "193959"
  },
  {
    "text": "goal is and it's much easier to change the in go if you really want and as everyone know all the",
    "start": "193959",
    "end": "201440"
  },
  {
    "text": "community magic is stand through declarative apis so from things like uh resource allocation to the basic stuff",
    "start": "201440",
    "end": "208799"
  },
  {
    "text": "like resource object creation and the authorization and we even have a",
    "start": "208799",
    "end": "215120"
  },
  {
    "text": "declarative API which is to Define new declarative apis the customer resource",
    "start": "215120",
    "end": "223239"
  },
  {
    "text": "definition before we going any further um I'd love to um set the stage so first",
    "start": "223239",
    "end": "229720"
  },
  {
    "text": "I will not um get into the backstory of why event declarative like the decision",
    "start": "229720",
    "end": "235400"
  },
  {
    "text": "like made um roughly 10 years ago there is a fantastic resource I linked here",
    "start": "235400",
    "end": "240640"
  },
  {
    "text": "from the ku's early stage and authored by um Brian Grant for those curious about the history and second we won't be",
    "start": "240640",
    "end": "248879"
  },
  {
    "text": "going deep into the inner workings of uh control Loop or um how we um all the",
    "start": "248879",
    "end": "255159"
  },
  {
    "text": "details about how we do the Declaration management and last I'm not here to argue about the way over the other so um",
    "start": "255159",
    "end": "263199"
  },
  {
    "text": "either imperative or declarative communities offers ability for BS in for different use cases and it always",
    "start": "263199",
    "end": "268960"
  },
  {
    "text": "continue to do so so what are we going to talk about today so over time uh",
    "start": "268960",
    "end": "275479"
  },
  {
    "text": "there has been a lot of effort to make declarative apis more powerful uh not to",
    "start": "275479",
    "end": "281240"
  },
  {
    "text": "mention that the ver the versioning the sub resources the St structure schemers the deting the server side apply the",
    "start": "281240",
    "end": "288479"
  },
  {
    "text": "open API vory and all those stuff but there are still a bunch of things which",
    "start": "288479",
    "end": "294919"
  },
  {
    "text": "we are not unable to do them well in declarative API just yet and today we're",
    "start": "294919",
    "end": "301160"
  },
  {
    "text": "going to talk about one of the notable missing pieces the data",
    "start": "301160",
    "end": "306720"
  },
  {
    "text": "validation so everyone know uh data validation is critical and",
    "start": "306720",
    "end": "312680"
  },
  {
    "text": "you just need data validation when there are constraints on your data and it almost constraints",
    "start": "312680",
    "end": "319199"
  },
  {
    "text": "everywhere so however today from the declarative apis you may easily get information like um say for example your",
    "start": "319199",
    "end": "327080"
  },
  {
    "text": "resource uh might have to have a name and the names is supposed to be a string",
    "start": "327080",
    "end": "332360"
  },
  {
    "text": "but that's it it's less obviously to find the constraints behind the fields so for example here uh even for the like",
    "start": "332360",
    "end": "341479"
  },
  {
    "text": "the the constraints on name itself kubernetes have so many different um",
    "start": "341479",
    "end": "347240"
  },
  {
    "text": "constraints uh applied for different names and if you are defining your own um customer resources there might be",
    "start": "347240",
    "end": "354199"
  },
  {
    "text": "further and also um type string was widely used um for all the other fields",
    "start": "354199",
    "end": "361479"
  },
  {
    "text": "and each of them may have like different constraints Associated and uh it will get even more",
    "start": "361479",
    "end": "368039"
  },
  {
    "text": "complicated when you define your own customer resource and we all know that validating",
    "start": "368039",
    "end": "373919"
  },
  {
    "text": "is critical if you if you if we don't do validating or don't do it properly",
    "start": "373919",
    "end": "379039"
  },
  {
    "text": "things will break in a hard to reason way and future um debarking would be um",
    "start": "379039",
    "end": "385120"
  },
  {
    "text": "much more difficult so",
    "start": "385120",
    "end": "391120"
  },
  {
    "text": "here is an example of the current um open API specification which gives you",
    "start": "391120",
    "end": "396280"
  },
  {
    "text": "exactly what I mentioned like the you're supposed to have a name and the name supposed to be a string and that's it",
    "start": "396280",
    "end": "402400"
  },
  {
    "text": "people may argue that okay I can write like a very detailed description there and the users is supposed to like read",
    "start": "402400",
    "end": "408400"
  },
  {
    "text": "Au through of them and follow them but everyone knows it's not the um what's",
    "start": "408400",
    "end": "413440"
  },
  {
    "text": "happening in the real world so",
    "start": "413440",
    "end": "421400"
  },
  {
    "text": "let's begin with uh let's talk about um how the the Improvement we do we did in",
    "start": "421479",
    "end": "427280"
  },
  {
    "text": "this area and uh um how this going to benefit for the all the users and let's",
    "start": "427280",
    "end": "433120"
  },
  {
    "text": "begin with the one people cares the most customer resource definition and there was quite some time",
    "start": "433120",
    "end": "442319"
  },
  {
    "text": "that we only have like a very limited support for specified constraints declaratively so for example we have ser",
    "start": "442319",
    "end": "449360"
  },
  {
    "text": "structure scamers we have um OPI V three uh validations um so on so forth as a",
    "start": "449360",
    "end": "456680"
  },
  {
    "text": "example here so we are declaring the um uh type",
    "start": "456680",
    "end": "462720"
  },
  {
    "text": "and value here for the IP addresses and we can use some of the um we can put",
    "start": "462720",
    "end": "468639"
  },
  {
    "text": "some of the constraints in a very declarative way but that's it so what if you have like more advanced constraints",
    "start": "468639",
    "end": "475440"
  },
  {
    "text": "like what if involves um check of another field what if you want only",
    "start": "475440",
    "end": "481240"
  },
  {
    "text": "apply certain constraints uh when the um say the type is set to a specific value",
    "start": "481240",
    "end": "489199"
  },
  {
    "text": "so for quite some time all the things which are not covered here we have to",
    "start": "489199",
    "end": "494840"
  },
  {
    "text": "use a thing called admission web hook anyone here uh have ever developed",
    "start": "494840",
    "end": "500759"
  },
  {
    "text": "their own web hook wow not many uh any of any of them",
    "start": "500759",
    "end": "507680"
  },
  {
    "text": "are familiar with the concept of the web hook cool so the web Hook is basically",
    "start": "507680",
    "end": "515080"
  },
  {
    "text": "another uh very powerful extension Point um kuity Upstream offering so it will um",
    "start": "515080",
    "end": "522518"
  },
  {
    "text": "happen like after um the data being authorized and um authenticated and before the data was um serve uh saved in",
    "start": "522519",
    "end": "530240"
  },
  {
    "text": "the pred um storage but it's a separate",
    "start": "530240",
    "end": "536000"
  },
  {
    "text": "like a binary and component added in into your system so introducing a",
    "start": "536000",
    "end": "541920"
  },
  {
    "text": "production grade web Hook is not only a um substantial development work but also",
    "start": "541920",
    "end": "548120"
  },
  {
    "text": "increase the operational complexity dramatically I'll explain why but I'll",
    "start": "548120",
    "end": "553360"
  },
  {
    "text": "explain it briefly today but you can get the idea as a separate component added into your system you just have to",
    "start": "553360",
    "end": "560600"
  },
  {
    "text": "whenever you trying to introduce a web hook you just have to think carefully on things like how to package it how to",
    "start": "560600",
    "end": "567279"
  },
  {
    "text": "release it how to inte create with your existing monitoring or alerting system",
    "start": "567279",
    "end": "572760"
  },
  {
    "text": "and how to upgrade it or row it back if needed what about the latency added how",
    "start": "572760",
    "end": "578920"
  },
  {
    "text": "to scale it and to make it even worse web Hook is very easy to be",
    "start": "578920",
    "end": "584680"
  },
  {
    "text": "misconfigured so um a example I always like to give is the failer policy you",
    "start": "584680",
    "end": "590440"
  },
  {
    "text": "have to set in your web hook so basically web hook allow you to set either F open or F close mode by setting",
    "start": "590440",
    "end": "599480"
  },
  {
    "text": "the policies inside your configuration so sorry if you go with f open so which",
    "start": "599480",
    "end": "607320"
  },
  {
    "text": "basically means if the VB hook fails either the binary stop serving or there",
    "start": "607320",
    "end": "613000"
  },
  {
    "text": "is an error happened and uh you just um going to let the um you're just going to",
    "start": "613000",
    "end": "619000"
  },
  {
    "text": "let the uh request throw anyway and if your web Hook is doing some kind of",
    "start": "619000",
    "end": "624040"
  },
  {
    "text": "security check that's clearly will be a problem but on the other hand if you",
    "start": "624040",
    "end": "629640"
  },
  {
    "text": "choose to fill close which means if the web hook has a problem all the request",
    "start": "629640",
    "end": "634880"
  },
  {
    "text": "that are routed to the web hook will be rejected so if your web hook matches to",
    "start": "634880",
    "end": "640360"
  },
  {
    "text": "all the ports or all the deployments so you basically lose your control plan availability for",
    "start": "640360",
    "end": "646120"
  },
  {
    "text": "that so that's why still now web Hook is still remain the leading cause of the",
    "start": "646120",
    "end": "652360"
  },
  {
    "text": "contol plan outage even people learned over time like to be more cautious to",
    "start": "652360",
    "end": "657560"
  },
  {
    "text": "configure it but it's still having a lot of issues and for a while web Hook is the",
    "start": "657560",
    "end": "663600"
  },
  {
    "text": "only solution to the functionalities we want and as everyone know like whenever you bring up your um crd especially like",
    "start": "663600",
    "end": "671720"
  },
  {
    "text": "the customer resource is the one you defined so you have to be the one who responsible um to validate it and web",
    "start": "671720",
    "end": "679800"
  },
  {
    "text": "Hook is widely used for that purpose but it's causing all the trouble we just",
    "start": "679800",
    "end": "686560"
  },
  {
    "text": "mentioned and uh we began to as a uh as a community maintainer we begin to think",
    "start": "686639",
    "end": "693040"
  },
  {
    "text": "about how we could do here to help things better so after research we found that",
    "start": "693040",
    "end": "700200"
  },
  {
    "text": "the vast majority of the use cases people want to do with validation are really simple so they want make sure the",
    "start": "700200",
    "end": "707000"
  },
  {
    "text": "field is immutable or they want do some basic Cross Field check or they want to apply a specific format to a field so",
    "start": "707000",
    "end": "715360"
  },
  {
    "text": "then the question becomes can we use something simpler and I'm really happy and excited to",
    "start": "715360",
    "end": "722279"
  },
  {
    "text": "announce that all of that happened through a very magic um extension field",
    "start": "722279",
    "end": "728440"
  },
  {
    "text": "which added into crd called A- communities D validations the feature called CD validation ruse and I linked",
    "start": "728440",
    "end": "735920"
  },
  {
    "text": "the documentation here and I'm I'm happy to announce that like we just graduated to stable in the current Community 129",
    "start": "735920",
    "end": "744279"
  },
  {
    "text": "release of course if nobody reverted before the formal release date uh rough",
    "start": "744279",
    "end": "749800"
  },
  {
    "text": "mons yeah so what they did is they'll leverage a power of a common expression",
    "start": "749800",
    "end": "756399"
  },
  {
    "text": "language which allowed you to write a very simp uh very powerful expressions",
    "start": "756399",
    "end": "762560"
  },
  {
    "text": "in your crd to do your data validation you don't need to know much about cell",
    "start": "762560",
    "end": "768040"
  },
  {
    "text": "it's just a to be used and after you see the examples following you can easily guess what they are doing and you might",
    "start": "768040",
    "end": "774920"
  },
  {
    "text": "not even need to look at the documentations like for all the um basic",
    "start": "774920",
    "end": "780399"
  },
  {
    "text": "validations you're trying to write but for sale all you need to know is it's an open source project and we work really",
    "start": "780399",
    "end": "787920"
  },
  {
    "text": "close with the maintenance there it's designed to be simple and efficient and it's a type language so we will do",
    "start": "787920",
    "end": "794040"
  },
  {
    "text": "purple type checking for you and uh we have already successfully um embedded um",
    "start": "794040",
    "end": "800160"
  },
  {
    "text": "cell into communities so that's great and sell got pretty solid adoption um in",
    "start": "800160",
    "end": "806160"
  },
  {
    "text": "the community ecosystem and other Cloud providers offerings so I will not spend much time",
    "start": "806160",
    "end": "812639"
  },
  {
    "text": "there but just the basic stuff uh all the magic was done through one single extension field because code x-",
    "start": "812639",
    "end": "819959"
  },
  {
    "text": "Community validations and it can put anywhere under open pv3 schema if you are familiar with CD um that gives you a",
    "start": "819959",
    "end": "827560"
  },
  {
    "text": "lot of flexibility and you can just start writing um Expressions there in this example we want to make sure that",
    "start": "827560",
    "end": "834560"
  },
  {
    "text": "the replica we said is always smaller than the max replica being said so you can use self uh which is a sell variable",
    "start": "834560",
    "end": "841600"
  },
  {
    "text": "to provide you access to the values scoped to current schema and as I mentioned earlier we",
    "start": "841600",
    "end": "848399"
  },
  {
    "text": "have a really nice type checking which CAU the error way ahead of time so if",
    "start": "848399",
    "end": "853560"
  },
  {
    "text": "you have like a uh mistyped field or anything like that and it will be caught",
    "start": "853560",
    "end": "859519"
  },
  {
    "text": "while you um creating or updating your crd and of course we have another cell",
    "start": "859519",
    "end": "866440"
  },
  {
    "text": "variable called old self which allows you to be which allowed it to be used",
    "start": "866440",
    "end": "871600"
  },
  {
    "text": "for we so we call the transition rule but it's mainly just for enforce the immutability so in this example we just",
    "start": "871600",
    "end": "878720"
  },
  {
    "text": "try to uh enforce that the field code four is immutable through a very simple",
    "start": "878720",
    "end": "883839"
  },
  {
    "text": "cell expression and uh my colleague Alexander zaleski wrote a very nice blog",
    "start": "883839",
    "end": "889600"
  },
  {
    "text": "on the use cases on the immutability immutability so please feel free to take a look if you're interested and here is",
    "start": "889600",
    "end": "896440"
  },
  {
    "text": "a real world example um I just uh um borrowed from um Gateway API so as it's",
    "start": "896440",
    "end": "903880"
  },
  {
    "text": "showing here previously we have all those um basic kind of uh validation done through Open PI schema for type and",
    "start": "903880",
    "end": "911519"
  },
  {
    "text": "values but as a example I just explained earlier what if we want to apply a specific format for a specific like a",
    "start": "911519",
    "end": "918759"
  },
  {
    "text": "value if it's been said now for those kind of advanced validation it's all possible with um the crd validation",
    "start": "918759",
    "end": "926839"
  },
  {
    "text": "rules I just mentioned earlier so in this case we want apply a specific",
    "start": "926839",
    "end": "932440"
  },
  {
    "text": "format when the type is set to host name and uh I will stop here but I do",
    "start": "932440",
    "end": "940519"
  },
  {
    "text": "have another talk earlier um this year in another Cube con to talk about all the details and awesome features offered",
    "start": "940519",
    "end": "948000"
  },
  {
    "text": "here so please feel free to take a look if you're interested and we have um",
    "start": "948000",
    "end": "953480"
  },
  {
    "text": "great documentation on that and ver to mention that thanks to uh my",
    "start": "953480",
    "end": "959319"
  },
  {
    "text": "who went ahead and build a uh called something called cell playground which",
    "start": "959319",
    "end": "964480"
  },
  {
    "text": "comes with a lot of examples and allow allow you to play withit cell um so it's",
    "start": "964480",
    "end": "970279"
  },
  {
    "text": "easy to just play with it make sure all the Expressions you you wrote is right and valid before you actually put it",
    "start": "970279",
    "end": "976959"
  },
  {
    "text": "into um production and another exciting thing uh news I wanted",
    "start": "976959",
    "end": "984199"
  },
  {
    "text": "to share is about the adoption so it's from the um gate API uh Gateway API team",
    "start": "984199",
    "end": "991240"
  },
  {
    "text": "which just released the G version and by using the feature we offered here they",
    "start": "991240",
    "end": "996440"
  },
  {
    "text": "successfully replaced more than 99% of the Val VB hook they were used before",
    "start": "996440",
    "end": "1001880"
  },
  {
    "text": "which like a great uh really um big relief for them and thanks to Nicky and",
    "start": "1001880",
    "end": "1008680"
  },
  {
    "text": "Rob SC who shared the slid with us and thanks for everyone who work on Gateway API to uh make the adoption",
    "start": "1008680",
    "end": "1016199"
  },
  {
    "text": "working so now wait a second if we take a step back and look at the CDs then",
    "start": "1016199",
    "end": "1023120"
  },
  {
    "text": "that means CD Now is even more declarative than native types because as many of you may already know that native",
    "start": "1023120",
    "end": "1029678"
  },
  {
    "text": "types doesn't offer th those many informations so what is uh validation",
    "start": "1029679",
    "end": "1036000"
  },
  {
    "text": "then in Native types it's mostly the hardcoded",
    "start": "1036000",
    "end": "1041480"
  },
  {
    "text": "validation logic you have no idea how many lines of validations just for API",
    "start": "1041480",
    "end": "1047640"
  },
  {
    "text": "sitting inside the community um Upstream report um it's like tens of thousands",
    "start": "1047640",
    "end": "1053480"
  },
  {
    "text": "lines of code only for um API field validation it's a lot of Maintenance effort and also it makes it very",
    "start": "1053480",
    "end": "1061480"
  },
  {
    "text": "expensive to add validation later because we're humans and we make mistakes but as a um maintainer who like",
    "start": "1061480",
    "end": "1069360"
  },
  {
    "text": "uh maintain the project like communities which is such a fundamental project has",
    "start": "1069360",
    "end": "1074520"
  },
  {
    "text": "a whole ecosystem like built on top of it it's with really don't want to break",
    "start": "1074520",
    "end": "1079679"
  },
  {
    "text": "anything like so um the the first principle would be like we hope that",
    "start": "1079679",
    "end": "1085720"
  },
  {
    "text": "things which previous work will keep working so which makes it very expensive",
    "start": "1085720",
    "end": "1091559"
  },
  {
    "text": "to add any me inv validations later and also uh it might cause inconsistent",
    "start": "1091559",
    "end": "1097799"
  },
  {
    "text": "Arrow message and in different ways because it's all human uh um writing code so it might have like different",
    "start": "1097799",
    "end": "1105600"
  },
  {
    "text": "error message and also because service use a go stru and the cube C using um open schema so there might be um",
    "start": "1105600",
    "end": "1113200"
  },
  {
    "text": "inconsistency there as well so what we are going to do",
    "start": "1113200",
    "end": "1119600"
  },
  {
    "text": "here there is a um enhancement re raed",
    "start": "1119600",
    "end": "1124799"
  },
  {
    "text": "recently called declare validation rules uh for uh declar declarative validation",
    "start": "1124799",
    "end": "1130480"
  },
  {
    "text": "for Native types thanks to my colleague Joe baz who initiated the effort and",
    "start": "1130480",
    "end": "1135520"
  },
  {
    "text": "thanks for Alexander neski who is leading this effort now so the main idea",
    "start": "1135520",
    "end": "1140760"
  },
  {
    "text": "behind this is catch the native type which are what we did what we uh I just",
    "start": "1140760",
    "end": "1145799"
  },
  {
    "text": "mentioned incd and so later like you will be able",
    "start": "1145799",
    "end": "1151120"
  },
  {
    "text": "to use ID tags to declare validation ruse for Native types so example would",
    "start": "1151120",
    "end": "1157000"
  },
  {
    "text": "be here there is some IDE IDE Texs people might already familiar with like",
    "start": "1157000",
    "end": "1162280"
  },
  {
    "text": "minimum maximum but um the field we just mentioned earlier for s will also be",
    "start": "1162280",
    "end": "1169240"
  },
  {
    "text": "adopted for Native types which allowed us to write more complicated rules validation constraints like uh um here",
    "start": "1169240",
    "end": "1177640"
  },
  {
    "text": "like the um Crossfield check or something and I have linked the cap um",
    "start": "1177640",
    "end": "1184120"
  },
  {
    "text": "link here so if you're interested please take a look this um enhancement is going",
    "start": "1184120",
    "end": "1189559"
  },
  {
    "text": "to alha in the current Community 129 release but there is no notable changes",
    "start": "1189559",
    "end": "1195120"
  },
  {
    "text": "for users yet so we're looking forward for the future work but the end goal is",
    "start": "1195120",
    "end": "1200880"
  },
  {
    "text": "we plan to support all those our TXS for Native types as well and all those",
    "start": "1200880",
    "end": "1206480"
  },
  {
    "text": "information will be published to open API together and you can say x- community-",
    "start": "1206480",
    "end": "1212600"
  },
  {
    "text": "validation we're using the exactly same open API validation field for all the complicated and advanced constraints so",
    "start": "1212600",
    "end": "1220039"
  },
  {
    "text": "what those will bring us it will benefit for both community maintainers and Community users um as an API reviewer",
    "start": "1220039",
    "end": "1227720"
  },
  {
    "text": "who res L um trying to help with API review you have no idea how complicated or how many like code sitting there only",
    "start": "1227720",
    "end": "1235360"
  },
  {
    "text": "for like the API validation and after this it will be easy to develop maintain",
    "start": "1235360",
    "end": "1241600"
  },
  {
    "text": "and review apis for sure and it will also will enable the improvements to the",
    "start": "1241600",
    "end": "1246960"
  },
  {
    "text": "API machinery for example if we have F future like enhancement for the",
    "start": "1246960",
    "end": "1252080"
  },
  {
    "text": "validation parts U instead of like writing code across like maybe 15K lines",
    "start": "1252080",
    "end": "1257559"
  },
  {
    "text": "of of handw writed validation logic you can just embed it implement it into the",
    "start": "1257559",
    "end": "1263720"
  },
  {
    "text": "um declarative validation subsystem and uh people may ask why I",
    "start": "1263720",
    "end": "1268799"
  },
  {
    "text": "should care if I don't contribute to community um Upstream here is the reason",
    "start": "1268799",
    "end": "1274520"
  },
  {
    "text": "it will allow the direct access to actual API validation rules instead of only checking for descriptions the end",
    "start": "1274520",
    "end": "1281240"
  },
  {
    "text": "user can now um very visibly to see that the all the um constraints behind the",
    "start": "1281240",
    "end": "1287760"
  },
  {
    "text": "API and also this effort will make open API more valuable for sure it will um it",
    "start": "1287760",
    "end": "1294400"
  },
  {
    "text": "will for sure tell us more about was expected and this effort is also going",
    "start": "1294400",
    "end": "1299600"
  },
  {
    "text": "to allow the shift left validation um SL com command line uh to validation to be",
    "start": "1299600",
    "end": "1305840"
  },
  {
    "text": "possible rely on the information provided by open API and uh in the link there is already",
    "start": "1305840",
    "end": "1312480"
  },
  {
    "text": "a initiative uh effort um done by um Alex who is right uh who is proposing to",
    "start": "1312480",
    "end": "1318840"
  },
  {
    "text": "have like a uh um command line like validation tools for that and also it",
    "start": "1318840",
    "end": "1325720"
  },
  {
    "text": "will great help the API deposition so for example there is a very common use case that people would",
    "start": "1325720",
    "end": "1332559"
  },
  {
    "text": "want to embed native types into your crd and earlier um you just have to um you",
    "start": "1332559",
    "end": "1338840"
  },
  {
    "text": "just have to like basically take responsibility for all the validations and in a separate pass but now after all",
    "start": "1338840",
    "end": "1345840"
  },
  {
    "text": "the constraints are banded together Within the um unpublished in op API it becomes way easier um to like have like",
    "start": "1345840",
    "end": "1354679"
  },
  {
    "text": "the embedded native types inside crd and it's also will gain the",
    "start": "1354679",
    "end": "1362039"
  },
  {
    "text": "validation of native types automatically so",
    "start": "1362039",
    "end": "1369120"
  },
  {
    "text": "now uh we have talked about specifying um constraints for crds in a declarative",
    "start": "1369120",
    "end": "1375000"
  },
  {
    "text": "way we have talked about uh specifying the constraints for Native types in a declarative way but you may Wonder like",
    "start": "1375000",
    "end": "1383360"
  },
  {
    "text": "if I declare the constraints within the type definition then the constraints will be forced like wherever I use that",
    "start": "1383360",
    "end": "1389559"
  },
  {
    "text": "type but what if it's not what I need so what if I have some kind of constraints",
    "start": "1389559",
    "end": "1395039"
  },
  {
    "text": "which is only is only specified for my own cluster and for example for like a",
    "start": "1395039",
    "end": "1402159"
  },
  {
    "text": "security reasons I only want to um say allow image being pulled from my",
    "start": "1402159",
    "end": "1408039"
  },
  {
    "text": "coroporation like uh registry or I only allow authorized user to perform a",
    "start": "1408039",
    "end": "1413520"
  },
  {
    "text": "certain um operation so in another word policy enforcement is people is more",
    "start": "1413520",
    "end": "1420080"
  },
  {
    "text": "familiar with it's used um generically on security compliance governance or",
    "start": "1420080",
    "end": "1426440"
  },
  {
    "text": "configuration management and previously um like to be able to do it we only have",
    "start": "1426440",
    "end": "1433799"
  },
  {
    "text": "very limited support uh together with the community cor Upstream and people have to use some third party",
    "start": "1433799",
    "end": "1440520"
  },
  {
    "text": "like policy engine for example Opa G keeper or cavana to to achieve their",
    "start": "1440520",
    "end": "1446039"
  },
  {
    "text": "goals or you just have to write your own web hook for that so what we did there is we offered",
    "start": "1446039",
    "end": "1454279"
  },
  {
    "text": "a feature called validating admission policy um I'm happy to share that we just graduated this feature to Beta in",
    "start": "1454279",
    "end": "1461480"
  },
  {
    "text": "kuity 128 which is the last release and uh we are working on promoting it to",
    "start": "1461480",
    "end": "1467320"
  },
  {
    "text": "stable in very soon so what they did",
    "start": "1467320",
    "end": "1473600"
  },
  {
    "text": "is I will not explain everything is maybe too much information but uh we",
    "start": "1473600",
    "end": "1479880"
  },
  {
    "text": "introduced some new kubernetes resources called valid admission policy and validation admission policy banding and",
    "start": "1479880",
    "end": "1486679"
  },
  {
    "text": "the main reason behind having two resources here is that we would love to um offer the possibility to properly",
    "start": "1486679",
    "end": "1493240"
  },
  {
    "text": "separate the responsibilities of writing policies and the um the policy",
    "start": "1493240",
    "end": "1499159"
  },
  {
    "text": "enforcement work here so in this case the policy would be very would be",
    "start": "1499159",
    "end": "1505399"
  },
  {
    "text": "reusable and uh sufficient configurable to be able to support more than just one",
    "start": "1505399",
    "end": "1510640"
  },
  {
    "text": "company or one clusters and also like clust mean who",
    "start": "1510640",
    "end": "1515760"
  },
  {
    "text": "probably will be the one who enforce all those policies um sorry so would have enough",
    "start": "1515760",
    "end": "1522679"
  },
  {
    "text": "flexibility to configure the policy based on the end goal of Their Own",
    "start": "1522679",
    "end": "1528640"
  },
  {
    "text": "organization so here is the new resource C validation animation policy and uh we",
    "start": "1528640",
    "end": "1534760"
  },
  {
    "text": "it's very uh if you are familiar with web hook um it might be easy to pick it up um we have like the match constraints",
    "start": "1534760",
    "end": "1542520"
  },
  {
    "text": "which Define which resources this policy applied to and the way it works is very",
    "start": "1542520",
    "end": "1548679"
  },
  {
    "text": "similar as the way current web hook works but we have some more fantastic um",
    "start": "1548679",
    "end": "1554520"
  },
  {
    "text": "features here as well and uh we have like a a field code validations which you can just start write cell rules to",
    "start": "1554520",
    "end": "1561720"
  },
  {
    "text": "explain what the policy does so in this example um we just uh do very simple",
    "start": "1561720",
    "end": "1567679"
  },
  {
    "text": "validations we want um the policy applied to all the creation and update deployment request and we want to make",
    "start": "1567679",
    "end": "1574799"
  },
  {
    "text": "sure that the replica number set is always um smaller than a number which",
    "start": "1574799",
    "end": "1581279"
  },
  {
    "text": "were referred to a um parameter um resource you can use basically anything",
    "start": "1581279",
    "end": "1586720"
  },
  {
    "text": "for your parameter resource which allow which gives uh flexibility to Cloud ad me to like configure the",
    "start": "1586720",
    "end": "1593840"
  },
  {
    "text": "policy you so um then um cloudster admin can go ahead and create something called",
    "start": "1593840",
    "end": "1600240"
  },
  {
    "text": "V transation policy bending which bend the policy to your own cluster and in",
    "start": "1600240",
    "end": "1605520"
  },
  {
    "text": "this case um the policy will start to be enforced and the parameterization will",
    "start": "1605520",
    "end": "1611440"
  },
  {
    "text": "allow the class armony to bend like a uh multiple policies in different ways so",
    "start": "1611440",
    "end": "1617200"
  },
  {
    "text": "for example example here we might want to enforce the replic the replica to be",
    "start": "1617200",
    "end": "1622600"
  },
  {
    "text": "smaller than three in a test um Nam space but for the for your production",
    "start": "1622600",
    "end": "1627919"
  },
  {
    "text": "name space that might be a different number and uh there are so many awesome",
    "start": "1627919",
    "end": "1635080"
  },
  {
    "text": "stuff going on in this feature but unfortunately I don't have enough time to talk about it um I talked it a little",
    "start": "1635080",
    "end": "1641360"
  },
  {
    "text": "bit together with the best practice in my earlier talk to and we hopefully the",
    "start": "1641360",
    "end": "1647000"
  },
  {
    "text": "documentation we provided will um like sufficient answer like the all the possible questions and yeah so Al also",
    "start": "1647000",
    "end": "1656919"
  },
  {
    "text": "another thing was to mention that if your if you only want to enforce something very simple which you don't",
    "start": "1656919",
    "end": "1662720"
  },
  {
    "text": "need parameterization at all you can just remove the parents resource and only those only use those two like new",
    "start": "1662720",
    "end": "1669039"
  },
  {
    "text": "resources to achieve your goal and another thing worse to mention is that the whole ecosystem has been aware of",
    "start": "1669039",
    "end": "1675840"
  },
  {
    "text": "the effort we did and the the the main um policy engine such as um opag keeper",
    "start": "1675840",
    "end": "1682880"
  },
  {
    "text": "Okana um already adopted the feature and uh yeah so uh that's it feel",
    "start": "1682880",
    "end": "1692519"
  },
  {
    "text": "free to talk about more details like afterwards I'm happy to share and then let's talk about the future plan and the",
    "start": "1692519",
    "end": "1699240"
  },
  {
    "text": "key takeaways so the the the way um I view",
    "start": "1699240",
    "end": "1704399"
  },
  {
    "text": "this is like we have like a bunch of use cases uh we pretty familiar with like",
    "start": "1704399",
    "end": "1709960"
  },
  {
    "text": "deployments jobs arbs and stuff which are supported by declarative apis and we",
    "start": "1709960",
    "end": "1715960"
  },
  {
    "text": "have some other like emerging use cases like we talk about today the data validation uh both for um Native types",
    "start": "1715960",
    "end": "1723880"
  },
  {
    "text": "for series for advanced policy purpose uh which are not supported by declarative apis",
    "start": "1723880",
    "end": "1730559"
  },
  {
    "text": "earlier and we have some further for example the mutating cases in policy enforcement area what about the crd",
    "start": "1730559",
    "end": "1737840"
  },
  {
    "text": "version conversion and some other use cases which are not covered by declarative apis and uh now cell will",
    "start": "1737840",
    "end": "1745880"
  },
  {
    "text": "give us a power to expand the um Power of declarative apis so that a lot of use",
    "start": "1745880",
    "end": "1752440"
  },
  {
    "text": "cases which were not covered before will be covered now and we are as we as I",
    "start": "1752440",
    "end": "1758559"
  },
  {
    "text": "mentioned earlier the mutating case and the uh crd conversion is also critical",
    "start": "1758559",
    "end": "1765320"
  },
  {
    "text": "um since crd remains of the most important extension point in kuity um",
    "start": "1765320",
    "end": "1770679"
  },
  {
    "text": "offerings so our next step will be expand the declarative API power to",
    "start": "1770679",
    "end": "1776480"
  },
  {
    "text": "include those cases as well and uh we are a work there is a cell um all those",
    "start": "1776480",
    "end": "1783080"
  },
  {
    "text": "work I mentioned has been done under the cgpi Machinery here is the um contact",
    "start": "1783080",
    "end": "1789120"
  },
  {
    "text": "information and we also have a specific working group called cell working group",
    "start": "1789120",
    "end": "1794679"
  },
  {
    "text": "and uh have like the separate SL check and me list so please feel free to talk",
    "start": "1794679",
    "end": "1799960"
  },
  {
    "text": "to us if you feel that's usable thank you so much and I'm open",
    "start": "1799960",
    "end": "1805120"
  },
  {
    "text": "for [Applause]",
    "start": "1805120",
    "end": "1814118"
  },
  {
    "text": "questions and I guess we have mac on each side so if whoever have questions",
    "start": "1814919",
    "end": "1820559"
  },
  {
    "text": "um feel free to speak",
    "start": "1820559",
    "end": "1824640"
  },
  {
    "text": "up thanks for nice nice work um after",
    "start": "1826240",
    "end": "1833760"
  },
  {
    "text": "validation to accomplish your declarative goal are you going to do",
    "start": "1833760",
    "end": "1839080"
  },
  {
    "text": "remediation I I saw your drawing board at the future work oh yeah so uh",
    "start": "1839080",
    "end": "1844880"
  },
  {
    "text": "mutating would be our next Target for sure because um there are a lot of use",
    "start": "1844880",
    "end": "1850039"
  },
  {
    "text": "cases especially among the policy um uh enforcement area where people just",
    "start": "1850039",
    "end": "1855120"
  },
  {
    "text": "wanted to make sure they apply or like say the labels um in the resources or",
    "start": "1855120",
    "end": "1860559"
  },
  {
    "text": "whatsoever so that will be our next step so can I see to make declarative API a",
    "start": "1860559",
    "end": "1869200"
  },
  {
    "text": "reality there are still gaps right mutation is one of them yeah okay yeah",
    "start": "1869200",
    "end": "1875519"
  },
  {
    "text": "can you elaborate any other gaps um for example like a controller so even though",
    "start": "1875519",
    "end": "1883039"
  },
  {
    "text": "you like we allowed the power to declare declare your like new declarative apis",
    "start": "1883039",
    "end": "1888399"
  },
  {
    "text": "through customer resource definition but you still have probity to write your own",
    "start": "1888399",
    "end": "1893440"
  },
  {
    "text": "I don't know imperative controllers which told them how to do so I will keep",
    "start": "1893440",
    "end": "1898600"
  },
  {
    "text": "the door open to Future possibilities to also say support use cases like that in",
    "start": "1898600",
    "end": "1903639"
  },
  {
    "text": "a more declarative way yeah thanks you're",
    "start": "1903639",
    "end": "1908679"
  },
  {
    "text": "welcome yeah uh I got a question on um sort of validating the the cell that",
    "start": "1908679",
    "end": "1914159"
  },
  {
    "text": "you've written um like in the replica's field you know you had that typo like um",
    "start": "1914159",
    "end": "1920440"
  },
  {
    "text": "what are sort of tools that you can use for catching errors like that I mean like um you said that it would have",
    "start": "1920440",
    "end": "1926559"
  },
  {
    "text": "gotten caught and it it seems like you know there are tools like that but how can we validate that actually we're",
    "start": "1926559",
    "end": "1932200"
  },
  {
    "text": "writing you know you're adding code essentially to the to the Amo files like uh you know how do you validate that",
    "start": "1932200",
    "end": "1937840"
  },
  {
    "text": "code oh that's a great question so as I mentioned cell is a type check typed language so we properly do the type",
    "start": "1937840",
    "end": "1945080"
  },
  {
    "text": "checking for you in all of the features I mentioned so for example in the crd um",
    "start": "1945080",
    "end": "1950799"
  },
  {
    "text": "if um the good thing about the type checking is that they do it in a really",
    "start": "1950799",
    "end": "1956240"
  },
  {
    "text": "early stage of the life cycle so whenever you have like a um C type checking error there so you missp a",
    "start": "1956240",
    "end": "1963080"
  },
  {
    "text": "field name for example it will be caught immediately when you try to apply your",
    "start": "1963080",
    "end": "1968120"
  },
  {
    "text": "um customer resource definition so and also you can use either like the sale",
    "start": "1968120",
    "end": "1973480"
  },
  {
    "text": "playground I shared to pre verify or you can make your own like sell lter um like",
    "start": "1973480",
    "end": "1979240"
  },
  {
    "text": "tools to prever verify before you really apply your crd and we do have some um",
    "start": "1979240",
    "end": "1985039"
  },
  {
    "text": "cell lter um tools available but currently it's lack of Maintenance so feel free to make your own all come to",
    "start": "1985039",
    "end": "1992480"
  },
  {
    "text": "contribute thanks yeah thank you yeah hi um the current uh validating",
    "start": "1992480",
    "end": "2001559"
  },
  {
    "text": "uh web admissions web hook ecosystem is pretty large basically every project has one multiple",
    "start": "2001559",
    "end": "2007639"
  },
  {
    "text": "tons um do you see this uh less like significantly lessening the amount of",
    "start": "2007639",
    "end": "2013200"
  },
  {
    "text": "charge that are shipping with uh full validating web hooks or is it more of a",
    "start": "2013200",
    "end": "2020240"
  },
  {
    "text": "different yeah set yeah we agree that's a huge area out there and uh um and as I",
    "start": "2020240",
    "end": "2028039"
  },
  {
    "text": "mentioned like we do see a lot of troubles like web Hook was bring to us",
    "start": "2028039",
    "end": "2033159"
  },
  {
    "text": "um like not only the the the things I mentioned but also like it's it's a lot more complicated configuration and it's",
    "start": "2033159",
    "end": "2039559"
  },
  {
    "text": "a separate component it's a separate binaries so it involves a lot of extra effort there so what we did here is we",
    "start": "2039559",
    "end": "2047840"
  },
  {
    "text": "were trying to really focus on the um kuity Upstream offerings try to think",
    "start": "2047840",
    "end": "2054440"
  },
  {
    "text": "what they should do to make this extension Point better so um after the",
    "start": "2054440",
    "end": "2060000"
  },
  {
    "text": "validation admission policy were wi used it can also be used by um among the men",
    "start": "2060000",
    "end": "2066040"
  },
  {
    "text": "like policy uh policy like engines like I mentioned earlier or like among other kind of third party um policy engine um",
    "start": "2066040",
    "end": "2073638"
  },
  {
    "text": "tools so that they could Leverage The Power of this um to kind of reduce the",
    "start": "2073639",
    "end": "2079560"
  },
  {
    "text": "trouble previously made by web hook yeah I hope that answered yeah that does I",
    "start": "2079560",
    "end": "2086118"
  },
  {
    "text": "have one more if no one else has one um and I'm might have missed this earlier uh there any plans to extend this to",
    "start": "2086119",
    "end": "2092878"
  },
  {
    "text": "mutating policies oh yes um our next plan would be like expand the power to",
    "start": "2092879",
    "end": "2098160"
  },
  {
    "text": "mutating use cases for sure and uh hopefully we could get something like wrapped up for the next release yeah",
    "start": "2098160",
    "end": "2104920"
  },
  {
    "text": "we're working on the design and because um mutating of obviously are more way more complicated than validating cases",
    "start": "2104920",
    "end": "2112440"
  },
  {
    "text": "and we discussed earlier um inside the C APM Machinery so um all the like key uh",
    "start": "2112440",
    "end": "2119520"
  },
  {
    "text": "maintainers there agree that we should like wait until we finalized the validation cases before we move um too",
    "start": "2119520",
    "end": "2127040"
  },
  {
    "text": "soon to the mutating cases yeah that seems like a pretty huge deal for versioning primarily um if you have",
    "start": "2127040",
    "end": "2134920"
  },
  {
    "text": "minor bumps within your versions you no longer need any web hook at all um so that's pretty cool yeah hopefully that's",
    "start": "2134920",
    "end": "2141280"
  },
  {
    "text": "our end goal thank you to save people from the web hook nightmare oh sorry the time in thank you so much for being",
    "start": "2141280",
    "end": "2150000"
  },
  {
    "text": "here",
    "start": "2150319",
    "end": "2153319"
  }
]