[
  {
    "text": "I'm not a D um it couldn't be here unfortunately so I will be moderating this panel but",
    "start": "4799",
    "end": "11519"
  },
  {
    "text": "um my name is Nina polchikova I'm a software engineer at solo on the glue platform team um and I've worked a little bit on the",
    "start": "11519",
    "end": "17460"
  },
  {
    "text": "ambient project in istio and I was actually a 127 Shadow for the enhancements uh for the 127 release but",
    "start": "17460",
    "end": "25140"
  },
  {
    "text": "um let's introduce our panelists so I'd like everyone to introduce themselves first and tell me what you work on and",
    "start": "25140",
    "end": "32880"
  },
  {
    "text": "say your favorite thing about Amsterdam so you've all do you want to start sure I'm uh I don't think it's on is it",
    "start": "32880",
    "end": "40860"
  },
  {
    "text": "can you hear me okay I'm the Chief Architect at solaio",
    "start": "40860",
    "end": "46640"
  },
  {
    "text": "currently I'm working on a data path optimizations for the zetal component",
    "start": "46640",
    "end": "52800"
  },
  {
    "text": "and things like Amsterdam definitely stroke Ruffles",
    "start": "52800",
    "end": "58699"
  },
  {
    "text": "very tasty hi I'm Erica Norman I'm a senior software engineer at IBM and I work in",
    "start": "58860",
    "end": "65580"
  },
  {
    "text": "the iske community I am a member of the technical oversight committee I'm also",
    "start": "65580",
    "end": "70680"
  },
  {
    "text": "the work group lead for the test and release work group and I also do a lot of Doc maintenance as well PR approvals",
    "start": "70680",
    "end": "78780"
  },
  {
    "text": "um I guess I always say when I go places I try the beer whether it's good or bad",
    "start": "78780",
    "end": "84780"
  },
  {
    "text": "and I actually found some some really good beer and I have to admit I found a really good limoncello so",
    "start": "84780",
    "end": "94020"
  },
  {
    "text": "hey I'm John Howard I'm a software engineer at Google I've been working at istio for about four years now on the",
    "start": "94020",
    "end": "100259"
  },
  {
    "text": "technical oversight committee and various other things in Amsterdam I've enjoyed just walking",
    "start": "100259",
    "end": "105540"
  },
  {
    "text": "around the city it's you know very nice walkable City",
    "start": "105540",
    "end": "110700"
  },
  {
    "text": "I'm Keith Maddox I'm an engineering lead at Microsoft working on service mesh in",
    "start": "110700",
    "end": "115740"
  },
  {
    "text": "istio my focus right now is on some SEO",
    "start": "115740",
    "end": "122280"
  },
  {
    "text": "ambient stuff as well as this new safe mode thing that maybe you'll hear about eventually",
    "start": "122280",
    "end": "128520"
  },
  {
    "text": "um my favorite thing about Amsterdam is probably the bikes love seeing all the biking around the city so yeah it's been",
    "start": "128520",
    "end": "135540"
  },
  {
    "text": "great for sure um and then one more Icebreaker so I want everyone to answer what is their",
    "start": "135540",
    "end": "141060"
  },
  {
    "text": "least favorite thing what's the one thing that they hate about service mesh who wants to start",
    "start": "141060",
    "end": "147080"
  },
  {
    "text": "a specific one I can't pronounce it I would say izio instead of it's it's",
    "start": "147080",
    "end": "152879"
  },
  {
    "text": "still whatever it is be true",
    "start": "152879",
    "end": "159300"
  },
  {
    "text": "I'll go ahead um my least favorite thing about service mesh is probably all the crds",
    "start": "159300",
    "end": "168800"
  },
  {
    "text": "uh my least favorite things probably that we you know we realized once you stick a proxy in between all traffic",
    "start": "168900",
    "end": "174120"
  },
  {
    "text": "there's a lot of things you can do and so there's a lot of things we try and do and there's a lot of things you need to",
    "start": "174120",
    "end": "179160"
  },
  {
    "text": "understand that we want to do and just everything can go wrong when you're capturing 100 of traffic and",
    "start": "179160",
    "end": "185160"
  },
  {
    "text": "trying to do things to it well I was going to say I have the same problem with",
    "start": "185160",
    "end": "191159"
  },
  {
    "text": "izio when I try to type it up for some reason it doesn't come off my fingertips the same way so that's one",
    "start": "191159",
    "end": "197819"
  },
  {
    "text": "um and I'll pick on the you know the pipeline stuff since I mean the tester release kind of guy it always seems that",
    "start": "197819",
    "end": "204480"
  },
  {
    "text": "there's something that wants to break um there's something in the pipeline we haven't used for a while and um we want",
    "start": "204480",
    "end": "211920"
  },
  {
    "text": "to go use it and then you know things just don't work like we want so not necessarily istio related but at least",
    "start": "211920",
    "end": "217140"
  },
  {
    "text": "istio build related yeah definitely um so the way this is gonna work is I have some pre-prepared questions that",
    "start": "217140",
    "end": "222659"
  },
  {
    "text": "I'm going to ask and then we're going to open it up for the audience so start thinking of questions you want to ask the panelists so um the way the",
    "start": "222659",
    "end": "229799"
  },
  {
    "text": "questions are going to work is we're going to start with pretty mild easy softballs and then move up in spice",
    "start": "229799",
    "end": "236519"
  },
  {
    "text": "um so the first question is just to make sure we're on the same page everyone understands the sidecar architecture for",
    "start": "236519",
    "end": "241739"
  },
  {
    "text": "service meshes um but what's this new sidecarless architecture I've been hearing a lot about",
    "start": "241739",
    "end": "247260"
  },
  {
    "text": "does anyone want to start yeah so um the main difference with",
    "start": "247260",
    "end": "254220"
  },
  {
    "text": "sidecar and sidecar is is essentially that the workloads don't need a sidecar",
    "start": "254220",
    "end": "259859"
  },
  {
    "text": "attached to them and that has the consequence you don't need injection you don't need any containers and we do this",
    "start": "259859",
    "end": "267120"
  },
  {
    "text": "by creating a node proxy that's responsible for all the layer 4 and",
    "start": "267120",
    "end": "272340"
  },
  {
    "text": "security and separating out the layer 7 to a separate component we call that the Waypoint that's kind of my",
    "start": "272340",
    "end": "279660"
  },
  {
    "text": "basic overview it has all sorts of advantages which I'm sure we'll we'll talk about we'll get it",
    "start": "279660",
    "end": "285720"
  },
  {
    "text": "yeah anyone else want to add to that uh the way I like to think about uh",
    "start": "285720",
    "end": "293100"
  },
  {
    "text": "sidecar list is less headache to operate um when you have a sidecar next to your",
    "start": "293100",
    "end": "298139"
  },
  {
    "text": "application it can be really challenging to coordinate restarts of all the",
    "start": "298139",
    "end": "303180"
  },
  {
    "text": "applications when you do upgrades uh it can be difficult to debug it's right in",
    "start": "303180",
    "end": "309000"
  },
  {
    "text": "the path of your application developers monitoring their own and owning their own Services uh sacralis as our",
    "start": "309000",
    "end": "314940"
  },
  {
    "text": "architecture allows that all of that complexity in theory to be pushed down",
    "start": "314940",
    "end": "320280"
  },
  {
    "text": "and managed by someone other than your other than you perhaps rather than application developer and just as",
    "start": "320280",
    "end": "328199"
  },
  {
    "text": "generally gonna you know and again in theory uh less headache for the people who are providing value for your",
    "start": "328199",
    "end": "334259"
  },
  {
    "text": "business the next one",
    "start": "334259",
    "end": "339600"
  },
  {
    "text": "um it's kind of related so why the hell does everyone anyone actually want a sidecar the service mesh",
    "start": "339600",
    "end": "346500"
  },
  {
    "text": "like what are the benefits like we kind of touched on it but yeah I mean it was kind of touched on but it's really about",
    "start": "346500",
    "end": "351600"
  },
  {
    "text": "taking the cost associated with the service mess that's been traditionally",
    "start": "351600",
    "end": "357360"
  },
  {
    "text": "associated with the service mesh but that's actually not inherent to a service mesh but rather the existing",
    "start": "357360",
    "end": "363900"
  },
  {
    "text": "implementations based on sidecars retaining all the value that we have of service mesh but removing that cost",
    "start": "363900",
    "end": "370440"
  },
  {
    "text": "um you know whether that's resource overhead complexity shoved onto the application uh you know pod owners and",
    "start": "370440",
    "end": "376860"
  },
  {
    "text": "whatnot or all these life cycle issues upgrades management Etc",
    "start": "376860",
    "end": "382979"
  },
  {
    "text": "yeah I was going to say basically the same thing the the resource usage is obviously a big thing",
    "start": "382979",
    "end": "388020"
  },
  {
    "text": "um the the um the ability to not have to restart your your pot your pod every time you uh",
    "start": "388020",
    "end": "394979"
  },
  {
    "text": "want to update a proxy is another big one um and I'm hoping performance will be another thing that we'll find out is is",
    "start": "394979",
    "end": "401460"
  },
  {
    "text": "much better as well yeah I was going to kind of touch them what you said we're essentially",
    "start": "401460",
    "end": "406800"
  },
  {
    "text": "decoupling truly decoupling the application and the platform so we",
    "start": "406800",
    "end": "412380"
  },
  {
    "text": "separate the life cycles so I think that's kind of the key yeah",
    "start": "412380",
    "end": "418440"
  },
  {
    "text": "anything else you want to add okay let's move on So ebpf Hot Topic",
    "start": "418440",
    "end": "426240"
  },
  {
    "text": "um so doesn't evpf solve a lot of service mesh problems it's actually also solve all your personal problems really",
    "start": "426240",
    "end": "433259"
  },
  {
    "text": "I didn't know that so well just to make sure everyone's on the same page what is evpf can we give",
    "start": "433259",
    "end": "439500"
  },
  {
    "text": "oh yeah ebpf is a technology that essentially allows you to extend the Linux kernel and ask it to do custom",
    "start": "439500",
    "end": "446880"
  },
  {
    "text": "Behavior it it is a bit over hype I would say what",
    "start": "446880",
    "end": "452460"
  },
  {
    "text": "it does it is lets you customize the kernel in a certain hook points so the kernel has to",
    "start": "452460",
    "end": "458160"
  },
  {
    "text": "be aware of it you can just insert abpf program that would change the logic arbitrarily so it has very well defined",
    "start": "458160",
    "end": "465840"
  },
  {
    "text": "semantics and it can definitely help but it doesn't solve all our problems specifically the harder one to solve Rd",
    "start": "465840",
    "end": "473160"
  },
  {
    "text": "L7 layers that are depending on the protocol hard to Impossible",
    "start": "473160",
    "end": "479539"
  },
  {
    "text": "to do interesting stuff with ebpf",
    "start": "479539",
    "end": "484280"
  },
  {
    "text": "yeah the way I view it is a bit like how I view cryptocurrency or wasm or AI you",
    "start": "485400",
    "end": "492120"
  },
  {
    "text": "know once it's new we have all these conferences where everyone's talking about it all the time applying it to everything",
    "start": "492120",
    "end": "497759"
  },
  {
    "text": "and it's fun to talk about it's great but once it matures a lot of those use cases go away and what remains is a few",
    "start": "497759",
    "end": "504960"
  },
  {
    "text": "cases where it's actually extremely valuable right AI is probably over hyped but it's very useful in some cases maybe",
    "start": "504960",
    "end": "511620"
  },
  {
    "text": "not blockchain but you know the rest uh will provide some use cases so there are areas where ebpf is is great",
    "start": "511620",
    "end": "518700"
  },
  {
    "text": "um you know we have actually started using it in some areas of istio in some limited manner",
    "start": "518700",
    "end": "524219"
  },
  {
    "text": "um but it is you know the those places are fewer than is presented in conferences like these when we're all uh",
    "start": "524219",
    "end": "530760"
  },
  {
    "text": "you know trying to talk about the next big thing another aspect of evpf that I think is",
    "start": "530760",
    "end": "536519"
  },
  {
    "text": "important to keep in mind is that a lot of the performance benefits and things that you see from UPF being used in",
    "start": "536519",
    "end": "543060"
  },
  {
    "text": "software uh comes from being able to do operations in the Linux kernel itself instead of Crossing into user space",
    "start": "543060",
    "end": "549120"
  },
  {
    "text": "that means though when you have to cross into user space for anything some of those performance benefits kind of go go",
    "start": "549120",
    "end": "556680"
  },
  {
    "text": "away right um and so it's important to to remember that the lens kernel is is fantastic",
    "start": "556680",
    "end": "562440"
  },
  {
    "text": "it's done so much and it's in its time and we see all of our industry but there",
    "start": "562440",
    "end": "568260"
  },
  {
    "text": "are some limits and those limits are also limited to vbpf and so when you have to cross in user space to do",
    "start": "568260",
    "end": "573899"
  },
  {
    "text": "something like you know something layer 7 or TLS something like that then you really start to",
    "start": "573899",
    "end": "580680"
  },
  {
    "text": "um hit the viability limits of where ebpf can actually be useful",
    "start": "580680",
    "end": "586399"
  },
  {
    "text": "yeah so are there any specific examples where it can be useful like that you've seen and yeah yeah",
    "start": "586800",
    "end": "592500"
  },
  {
    "text": "definitely um basically ebpf can like make clinics aware of your topology right so we can",
    "start": "592500",
    "end": "599160"
  },
  {
    "text": "definitely optimize stuff with ebpf save traversals through the network traffic",
    "start": "599160",
    "end": "605160"
  },
  {
    "text": "um you know save Network stack save you know um having you know data reach from one",
    "start": "605160",
    "end": "611399"
  },
  {
    "text": "pod to another pod because we know our intent we could use ebpf to express it",
    "start": "611399",
    "end": "618360"
  },
  {
    "text": "in a and optimize the current behavior but it's not a Panacea so we definitely",
    "start": "618360",
    "end": "624779"
  },
  {
    "text": "plan to use it to for optimizations internal Network traffic in observability",
    "start": "624779",
    "end": "631440"
  },
  {
    "text": "um Security even this is definitely a lot of valid use cases yeah so security is one that a lot of",
    "start": "631440",
    "end": "637560"
  },
  {
    "text": "people bring up um are like how specifically can ebpf be used for security in like a service mesh scenario",
    "start": "637560",
    "end": "645540"
  },
  {
    "text": "um anybody else or should I yeah I can take this I think there's a",
    "start": "645540",
    "end": "651959"
  },
  {
    "text": "lot of areas where it can be applied and you see you know a few products that are kind of inspecting uh you know all the",
    "start": "651959",
    "end": "659100"
  },
  {
    "text": "sys calls in the system and auditing that and analyzing it which is not really something that's associated with",
    "start": "659100",
    "end": "664980"
  },
  {
    "text": "service mesh typically um within service mesh the foundation of security is typically mtls right that's",
    "start": "664980",
    "end": "672120"
  },
  {
    "text": "what brings a lot of people to service mesh in the first place that's kind of the foundation of how all authorization",
    "start": "672120",
    "end": "678720"
  },
  {
    "text": "policies uh you know the security benefits uh istio and other service measures bring",
    "start": "678720",
    "end": "684600"
  },
  {
    "text": "uh which is something that's not actually implemented in the kernel barring some minor things uh practically",
    "start": "684600",
    "end": "692760"
  },
  {
    "text": "it's not something that can be done in ebpf right and so when we want to enforce the security aspects of a",
    "start": "692760",
    "end": "699899"
  },
  {
    "text": "service mesh typically we're not going to be able to do that purely in the kernel or in abpf",
    "start": "699899",
    "end": "706260"
  },
  {
    "text": "yeah that actually leads nicely to our fault or next question um what is mtls anyway and why is it",
    "start": "706260",
    "end": "712019"
  },
  {
    "text": "important in the source mesh context like why do people care so I want to first start uh by asking",
    "start": "712019",
    "end": "720899"
  },
  {
    "text": "all of you who's heard of mtls in this room lots of people great put your hands down",
    "start": "720899",
    "end": "726120"
  },
  {
    "text": "who here is required to have mtls by their organization or some regulation",
    "start": "726120",
    "end": "732180"
  },
  {
    "text": "also a good bit of people right and the reason for that is because mtls is what",
    "start": "732180",
    "end": "737760"
  },
  {
    "text": "is responsible is it's the the protocol for encrypting traffic on the wire between two things you've got two",
    "start": "737760",
    "end": "744660"
  },
  {
    "text": "computers of some sort maybe their VMS maybe their kubernetes pods and I need to talk across a network something needs",
    "start": "744660",
    "end": "751019"
  },
  {
    "text": "to encrypt that um and the m means that it's mutually uh encrypted so the uh not only does the",
    "start": "751019",
    "end": "757980"
  },
  {
    "text": "client this thing sending the request check the identity of the server the server also has the opportunity to",
    "start": "757980",
    "end": "763920"
  },
  {
    "text": "detect the Opera the identity of the client and say only certain people can can talk to me",
    "start": "763920",
    "end": "770339"
  },
  {
    "text": "and again it creates this encrypted this encrypted tunnel um the mtls built off of the the regular",
    "start": "770339",
    "end": "777660"
  },
  {
    "text": "TLS that many of you might be familiar with with uh your Ingress gateways or your Edge gateways you know with this",
    "start": "777660",
    "end": "785160"
  },
  {
    "text": "also called SSL um but uh the M parthen Mutual part",
    "start": "785160",
    "end": "790620"
  },
  {
    "text": "actually gives you a lot of power for more advanced use cases because identity is mutually authenticated",
    "start": "790620",
    "end": "797880"
  },
  {
    "text": "and I'll just add that it's authenticated in a cryptographic way that's impossible to purge and",
    "start": "797880",
    "end": "805920"
  },
  {
    "text": "um does not have any eventual consistency problems",
    "start": "805920",
    "end": "811339"
  },
  {
    "text": "so the talk covers sidecar said carlis and proxylist right so do all three of",
    "start": "812279",
    "end": "818279"
  },
  {
    "text": "those support mtls in like different service meshes do they support them the same like um does anyone want to speak",
    "start": "818279",
    "end": "823740"
  },
  {
    "text": "to that uh yeah so all all three of these are",
    "start": "823740",
    "end": "830040"
  },
  {
    "text": "based on the same uh secure mtls transport um like I think I mentioned earlier this",
    "start": "830040",
    "end": "835500"
  },
  {
    "text": "is really the foundation of East Geo security and you know we offer that security in all",
    "start": "835500",
    "end": "841200"
  },
  {
    "text": "our data plane modes um the details are slightly different although for the mtls part they're",
    "start": "841200",
    "end": "847980"
  },
  {
    "text": "they're very similar on the security models if you're interested uh we gave a",
    "start": "847980",
    "end": "853079"
  },
  {
    "text": "talk on Tuesday I talked a Whole 30 minutes specifically comparing these",
    "start": "853079",
    "end": "858260"
  },
  {
    "text": "security properties of sidecar versus ambient um so I guess check that out afterwards",
    "start": "858260",
    "end": "864839"
  },
  {
    "text": "if you're interested in learning more is there anything else anyone wants to add",
    "start": "864839",
    "end": "870959"
  },
  {
    "text": "okay well we're gonna open it for questions from the audience now um so if you have a question there's mics in the",
    "start": "870959",
    "end": "877380"
  },
  {
    "text": "middle um so feel free to come up and ask um otherwise I will have to resolve a",
    "start": "877380",
    "end": "882600"
  },
  {
    "text": "resort to our backup questions which aren't as spicy as things that you can ask so",
    "start": "882600",
    "end": "887639"
  },
  {
    "text": "well our first question hi uh the Waypoint proxies sound like a bit like just another layer of proxy is going to",
    "start": "887639",
    "end": "894060"
  },
  {
    "text": "fix all our problems and I'm wondering do you see that uh the the",
    "start": "894060",
    "end": "899100"
  },
  {
    "text": "Waypoint functionality the L7 stuff authorization policies and so on move",
    "start": "899100",
    "end": "904320"
  },
  {
    "text": "into middlewares eventually as a performance Improvement or is that a route that you think service meshes or",
    "start": "904320",
    "end": "909360"
  },
  {
    "text": "ndsteo is never going to take with the fallback too follow-up question",
    "start": "909360",
    "end": "914940"
  },
  {
    "text": "um when you say middleware what uh what are you describing like if you have like",
    "start": "914940",
    "end": "921180"
  },
  {
    "text": "a flask or Django or like some PHP whether like these authorization",
    "start": "921180",
    "end": "926880"
  },
  {
    "text": "policies and L7 functionalities on the receiving site on The Listener side would eventually uh get like XDS",
    "start": "926880",
    "end": "933000"
  },
  {
    "text": "compatibility in every uh language and whether that's something that that you think is worth working towards or",
    "start": "933000",
    "end": "938339"
  },
  {
    "text": "whether we should keep everything in a proxy or a set car uh yeah that's a good question",
    "start": "938339",
    "end": "945360"
  },
  {
    "text": "um so in istio we do actually support it's it's much less known than the sidecar or the new ambient mode but what",
    "start": "945360",
    "end": "951779"
  },
  {
    "text": "we call proxy list grpc which is essentially what you described we take the grpc client and server",
    "start": "951779",
    "end": "958440"
  },
  {
    "text": "um that some of you may be familiar with and we add XDS support so that it can be dynamically programmed by the istio",
    "start": "958440",
    "end": "964980"
  },
  {
    "text": "control plane and enforce istio policies routing rules Etc",
    "start": "964980",
    "end": "970500"
  },
  {
    "text": "um the typical use case for that as opposed to the other architectures is that you're willing to take a little bit of pain and do a little bit more work",
    "start": "970500",
    "end": "977060"
  },
  {
    "text": "for ultra high performance right basically no overhead um now does that replace the Waypoint",
    "start": "977060",
    "end": "983459"
  },
  {
    "text": "proxy by doing it on the server side to some extent it can",
    "start": "983459",
    "end": "988560"
  },
  {
    "text": "um the thing that's important to realize though is that the Waypoint proxy is doing both",
    "start": "988560",
    "end": "993899"
  },
  {
    "text": "um things that were traditionally done by clients in the sidecar architecture and things that were done by the server in the sidecar architecture so things",
    "start": "993899",
    "end": "1000800"
  },
  {
    "text": "like routing but also things like authorization policy so even if you put a lot of logic",
    "start": "1000800",
    "end": "1006680"
  },
  {
    "text": "in your service whether that's through grbc or you know you just write the code yourself",
    "start": "1006680",
    "end": "1012079"
  },
  {
    "text": "you can't really do load balancing on the server side application right you've already picked the server you're going",
    "start": "1012079",
    "end": "1017360"
  },
  {
    "text": "to go to you can't do routing Canary rollouts Etc uh whereas by the Waypoint being",
    "start": "1017360",
    "end": "1022880"
  },
  {
    "text": "abstracted away from the service application you are able to do those things so you could replace the Waypoint",
    "start": "1022880",
    "end": "1029000"
  },
  {
    "text": "architecture with smart clients and smart Services which is a bit like the proxy this year PC or even sidecar",
    "start": "1029000",
    "end": "1035540"
  },
  {
    "text": "option those are things that we still expect to support in addition to ambient right it's not in either or situation",
    "start": "1035540",
    "end": "1042160"
  },
  {
    "text": "it's more about what use cases are you know you need and what trade-offs you're willing to make now of course Ambience",
    "start": "1042160",
    "end": "1048679"
  },
  {
    "text": "kind of the new thing so we talk about it a lot but that doesn't mean that it's the only thing and that we're going to remove you know everything else",
    "start": "1048679",
    "end": "1056080"
  },
  {
    "text": "any other questions come up",
    "start": "1057380",
    "end": "1061360"
  },
  {
    "text": "hello um some of the folks of linker d as well they they were doing another talk and",
    "start": "1065240",
    "end": "1071660"
  },
  {
    "text": "they were talking about um the benefits and the weights of sidecarlis uh and it generally like they",
    "start": "1071660",
    "end": "1079940"
  },
  {
    "text": "one of the the pain points of like sidecar less uh is more like when it",
    "start": "1079940",
    "end": "1087200"
  },
  {
    "text": "comes to oh you still have to maintain an L7 proxy to do all seven stuff uh",
    "start": "1087200",
    "end": "1092419"
  },
  {
    "text": "generally you could do that like only one proxy per node well that's that's an",
    "start": "1092419",
    "end": "1097520"
  },
  {
    "text": "advantage to then not hold so much uh like to not spin up so many PODS of like",
    "start": "1097520",
    "end": "1103280"
  },
  {
    "text": "Envoy and hold so much memory but that's a single point of failure as well",
    "start": "1103280",
    "end": "1109640"
  },
  {
    "text": "right like if you if that proxy goes down you lose the whole node right uh do you",
    "start": "1109640",
    "end": "1116059"
  },
  {
    "text": "guys have opinions on that could you expand on it yeah my opinion you already have a",
    "start": "1116059",
    "end": "1123200"
  },
  {
    "text": "single point of failure on the Note that's the Linux kernel right but you trust it and it proved itself over the",
    "start": "1123200",
    "end": "1129440"
  },
  {
    "text": "years and that's what we're aiming for with zitano right we're it's written in Rust memory safe language",
    "start": "1129440",
    "end": "1135860"
  },
  {
    "text": "and it is becoming critical infrastructure my mental model for zetal that it's kind",
    "start": "1135860",
    "end": "1142340"
  },
  {
    "text": "of becoming part of the Linux Network stack and our goal is to make it so reliable so it wouldn't crash just like",
    "start": "1142340",
    "end": "1149600"
  },
  {
    "text": "Linux today didn't crash but 20 years ago it had plenty of crashes so",
    "start": "1149600",
    "end": "1155179"
  },
  {
    "text": "yeah to expand on that too is you know when you talk to other folks they're comparing sidecars to",
    "start": "1155179",
    "end": "1161720"
  },
  {
    "text": "there's more than one implementation of a non-side car based service mesh right and in istio we've been very very",
    "start": "1161720",
    "end": "1168140"
  },
  {
    "text": "cautious about where we put what functionality so it's not reasonable I think to say that",
    "start": "1168140",
    "end": "1174260"
  },
  {
    "text": "we're going to take some gigantic piece of software and stick it on the Node single point of failure and it's never",
    "start": "1174260",
    "end": "1180320"
  },
  {
    "text": "going to have bugs because we tried really hard right but what is reasonable is say we're going to do one very small",
    "start": "1180320",
    "end": "1186080"
  },
  {
    "text": "thing and we're going to do it very well and we're going to be highly focused not have feature creep we're going to move",
    "start": "1186080",
    "end": "1193220"
  },
  {
    "text": "that complexity somewhere else right which is what we did in Z tunnel so basically the only functionality of",
    "start": "1193220",
    "end": "1199640"
  },
  {
    "text": "zetunnel is just to enforce the mtls which we've talked about plenty before and that's about it so it's very small",
    "start": "1199640",
    "end": "1206720"
  },
  {
    "text": "and very focused and that's why we're confident that we can one keep the overhead in resource consumption Etc low",
    "start": "1206720",
    "end": "1212539"
  },
  {
    "text": "but also keep it stable and uh you know reduce the likelihood that we hit the",
    "start": "1212539",
    "end": "1219559"
  },
  {
    "text": "single point of value right thank you great",
    "start": "1219559",
    "end": "1224780"
  },
  {
    "text": "there's a question in the back hi hi uh do you consider",
    "start": "1224780",
    "end": "1231020"
  },
  {
    "text": "in terms of performance uh not pushing everything into kernel into current a",
    "start": "1231020",
    "end": "1236120"
  },
  {
    "text": "ring but using dpdk like iron and colleague or VPP",
    "start": "1236120",
    "end": "1241760"
  },
  {
    "text": "and putting the filtering and termination stuff into entire",
    "start": "1241760",
    "end": "1248480"
  },
  {
    "text": "network interface",
    "start": "1248480",
    "end": "1251919"
  },
  {
    "text": "I I think the question was like have we thought about offloading some of the work that yeah",
    "start": "1259600",
    "end": "1266440"
  },
  {
    "text": "dpdk",
    "start": "1266960",
    "end": "1269960"
  },
  {
    "text": "and so yeah is basically a way if correct me if I'm wrong here to pass",
    "start": "1272000",
    "end": "1277820"
  },
  {
    "text": "through traffic from the network card to user mode kind of skipping over the kernel currently we were focused on abpf",
    "start": "1277820",
    "end": "1285620"
  },
  {
    "text": "and in terms of you know optimization of the data path",
    "start": "1285620",
    "end": "1291020"
  },
  {
    "text": "um I wouldn't rule out the pdk but it's not something we're currently looking at",
    "start": "1291020",
    "end": "1297039"
  },
  {
    "text": "so uh mine is uh I would try to be a bit spicy so",
    "start": "1300320",
    "end": "1306340"
  },
  {
    "text": "EPF is overhyped and Ai and also",
    "start": "1306340",
    "end": "1312919"
  },
  {
    "text": "crypto you know I would like to know from you besides of",
    "start": "1312919",
    "end": "1319760"
  },
  {
    "text": "course proxy list what are the big thing that you think is the next thing for",
    "start": "1319760",
    "end": "1325580"
  },
  {
    "text": "service mesh or killer feature from you",
    "start": "1325580",
    "end": "1331059"
  },
  {
    "text": "uh I think the next step for service mesh is to learn how to be boring",
    "start": "1332780",
    "end": "1338960"
  },
  {
    "text": "um I know that's not quite as spicy as you might have been expecting but for a long time service mesh has been this",
    "start": "1338960",
    "end": "1345740"
  },
  {
    "text": "thing you've got conferences on conferences and talks about it um kind of what you've always saying before for something like as you tunnel",
    "start": "1345740",
    "end": "1352880"
  },
  {
    "text": "or uh istio as a whole to become critical infrastructure that you can depend on the Linux kernel it's going to",
    "start": "1352880",
    "end": "1358880"
  },
  {
    "text": "have to learn how to be boring and sometimes that means you know rejecting uh the new and shiny thing and new and",
    "start": "1358880",
    "end": "1365539"
  },
  {
    "text": "shiny features and focusing on being uh production ready on being Enterprise ready and istio has done you know has a",
    "start": "1365539",
    "end": "1372919"
  },
  {
    "text": "remarkable track record being used in some of the largest organizations out there let's take that a step further and",
    "start": "1372919",
    "end": "1379400"
  },
  {
    "text": "learn how to be boring yeah I was gonna sort of add to that you know besides being boring just something",
    "start": "1379400",
    "end": "1385039"
  },
  {
    "text": "that it's it's there and does its job and people just don't have to worry about it",
    "start": "1385039",
    "end": "1391900"
  },
  {
    "text": "I think in the back hello um so I wasn't familiar with z-tunnel so",
    "start": "1395000",
    "end": "1400220"
  },
  {
    "text": "I quickly looked it up and understood it would most likely be replacing Envoy um or maybe you can correct me I'm wrong",
    "start": "1400220",
    "end": "1407120"
  },
  {
    "text": "but um does that mean um like will we still be able to like extend z-chunnel with wasm or is there",
    "start": "1407120",
    "end": "1414260"
  },
  {
    "text": "like going to be a solution for that because I know currently the for extending istio like you can write wasm",
    "start": "1414260",
    "end": "1420679"
  },
  {
    "text": "modules uh yeah so in some ways it's it's not",
    "start": "1420679",
    "end": "1428179"
  },
  {
    "text": "really replacing Envoy if you're familiar with the architecture we also have a waypoint proxy that is optional",
    "start": "1428179",
    "end": "1433820"
  },
  {
    "text": "on a kind of perv service counter namespace basis that is still an Envoy and does all the functionality that used",
    "start": "1433820",
    "end": "1439700"
  },
  {
    "text": "Geo sidecars do today including wasm including extensibility Etc but the Z tunnel itself is not likely to have that",
    "start": "1439700",
    "end": "1447320"
  },
  {
    "text": "extensibility right like I mentioned before the z-tunnel is very very tightly focused its only job really is to do the",
    "start": "1447320",
    "end": "1454820"
  },
  {
    "text": "encryption uh and authentication and authorization on the Node level and we intentionally have kept it small",
    "start": "1454820",
    "end": "1461780"
  },
  {
    "text": "and avoided adding things like wazum which can cause kind of questionable um or not quite necessarily questionable",
    "start": "1461780",
    "end": "1467600"
  },
  {
    "text": "but unreliable and consistent uh performance attributes you know if we start doing a lot of complex",
    "start": "1467600",
    "end": "1474020"
  },
  {
    "text": "processing on the Node it becomes a higher attack surface it uses more resources which it's really hard to",
    "start": "1474020",
    "end": "1479480"
  },
  {
    "text": "scale a Damon set by the way um and so we move all that logic out into Waypoint proxy which is just a",
    "start": "1479480",
    "end": "1486260"
  },
  {
    "text": "standalone deployment or even just some opaque service and that's where we put all the rich functionality of the",
    "start": "1486260",
    "end": "1491539"
  },
  {
    "text": "service mesh so I can scale up it can scale down Etc independently thank you",
    "start": "1491539",
    "end": "1498940"
  },
  {
    "text": "yeah I guess the one thing I would have added to that was it also then only impacts the Waypoint proxy the only",
    "start": "1499460",
    "end": "1506480"
  },
  {
    "text": "impact that particular application it's not going to impact everybody",
    "start": "1506480",
    "end": "1512860"
  },
  {
    "text": "um so uh when assigning resources so CPU and memory to sidecars this was always a",
    "start": "1513980",
    "end": "1519559"
  },
  {
    "text": "huge headache and over provisioning was really easy with the Waypoint proxies this sense to",
    "start": "1519559",
    "end": "1526700"
  },
  {
    "text": "be a lot improved but will we reach someday a point where we",
    "start": "1526700",
    "end": "1533539"
  },
  {
    "text": "just say is still figure the right size out like multi-dimensional Auto scaling or",
    "start": "1533539",
    "end": "1539480"
  },
  {
    "text": "something like that so that's really the right amount always",
    "start": "1539480",
    "end": "1546519"
  },
  {
    "text": "so the waypoints you can think of them as a regular deployment and you could",
    "start": "1546799",
    "end": "1551900"
  },
  {
    "text": "apply to them things like the horizontal pod Auto scaler or you know any other scaling mechanism you want and that's",
    "start": "1551900",
    "end": "1559100"
  },
  {
    "text": "part of the why this architecture is so powerful but don't I get a lot of hops between",
    "start": "1559100",
    "end": "1566299"
  },
  {
    "text": "nodes then you'll get a hop between Z tunnel to Waypoint and Waypoint to Z tunnel",
    "start": "1566299",
    "end": "1573559"
  },
  {
    "text": "um but the main important thing to remember here is that you're only getting one L7 Hub and L7 where all the",
    "start": "1573559",
    "end": "1581240"
  },
  {
    "text": "features are that's where all the kind of most of the latency is spent so by decreasing instead of two or seven hops",
    "start": "1581240",
    "end": "1589100"
  },
  {
    "text": "of you know client-side current seven and server Sidecar to 107 hop you'll get",
    "start": "1589100",
    "end": "1595400"
  },
  {
    "text": "a similar performance characteristics even though you're going through more proxies",
    "start": "1595400",
    "end": "1600559"
  },
  {
    "text": "uh can I use horizontal autoscaler that with waypoints yes",
    "start": "1600559",
    "end": "1607059"
  },
  {
    "text": "hi thanks uh I have a basic maybe basic question I don't know uh one of the pain",
    "start": "1609279",
    "end": "1617779"
  },
  {
    "text": "on the sidecar is that uh if for any reason you need to change the ca route",
    "start": "1617779",
    "end": "1624919"
  },
  {
    "text": "of your proxy and the things it is a pain without a working cluster how does it",
    "start": "1624919",
    "end": "1634220"
  },
  {
    "text": "change in the new architecture with the said",
    "start": "1634220",
    "end": "1639919"
  },
  {
    "text": "yeah that's a that's a good question um so anytime you need to change your ca",
    "start": "1639919",
    "end": "1646039"
  },
  {
    "text": "route in just about any system it's there's going to be a level of pain um unfortunately",
    "start": "1646039",
    "end": "1651620"
  },
  {
    "text": "where I think uh Waypoint or the ambient architecture helps at least a little bit",
    "start": "1651620",
    "end": "1657260"
  },
  {
    "text": "uh is the fact that it's no longer in an N squared kind of scenario and here's",
    "start": "1657260",
    "end": "1662419"
  },
  {
    "text": "what I mean by that in a sidecar model you had a you know every side car has to",
    "start": "1662419",
    "end": "1667580"
  },
  {
    "text": "know generally about every sidecar and so when you're propagating changes out that can take a long time and make the",
    "start": "1667580",
    "end": "1673940"
  },
  {
    "text": "ca rotation process a bit longer and a bit more a bit more dangerous",
    "start": "1673940",
    "end": "1679900"
  },
  {
    "text": "even though yeah rotating RCA something you should always be careful with I think that with ambient because now you",
    "start": "1679900",
    "end": "1687980"
  },
  {
    "text": "just have kind of a you know you're always going to have less nodes than pods there's less things to distribute",
    "start": "1687980",
    "end": "1694460"
  },
  {
    "text": "that new route to um and you know potentially you're talking about a long a shorter period of time so there's even maybe some",
    "start": "1694460",
    "end": "1700580"
  },
  {
    "text": "optimizations in your process you can make to to you know propagate that new route train of trust",
    "start": "1700580",
    "end": "1707480"
  },
  {
    "text": "if I may know where the certificates are",
    "start": "1707480",
    "end": "1712580"
  },
  {
    "text": "located that change this behavior in the new",
    "start": "1712580",
    "end": "1717799"
  },
  {
    "text": "um so with and someone else can hop in here if they if they want but uh with with ambient the certificates are going",
    "start": "1717799",
    "end": "1723440"
  },
  {
    "text": "to be on the Z title um and with whereas with the sidecar option on the sidecar way they were on",
    "start": "1723440",
    "end": "1730700"
  },
  {
    "text": "every single sidecar so there are more places that the issue control plane had to send the certificates whereas now uh",
    "start": "1730700",
    "end": "1738260"
  },
  {
    "text": "it's there are fewer and I guess the other thing I might add at least I think this is the way it works um John could",
    "start": "1738260",
    "end": "1744860"
  },
  {
    "text": "probably correct me if I'm wrong but um the number of certificates you have to have becomes less because in the Z",
    "start": "1744860",
    "end": "1750860"
  },
  {
    "text": "tunnel case you're only worrying about the the certificates for those things on that node whereas with",
    "start": "1750860",
    "end": "1758299"
  },
  {
    "text": "um the sidecar you end up having to know about the certificates as you mentioned for you know pretty much the whole mesh unless you have it you know scoped down",
    "start": "1758299",
    "end": "1766539"
  },
  {
    "text": "all right and then I think a question in the back this will be our last question from the audience how will we how will",
    "start": "1767899",
    "end": "1773659"
  },
  {
    "text": "you make the Z tunnel highly available per note I mean you have a demon set that you can't update without downtime",
    "start": "1773659",
    "end": "1780260"
  },
  {
    "text": "and there is just one pot per note so how are you going to address that",
    "start": "1780260",
    "end": "1786620"
  },
  {
    "text": "yeah so uh this is where ebpf does solve all our problems and uh",
    "start": "1786620",
    "end": "1794059"
  },
  {
    "text": "we can actually uh we we're doing some research here about using ebpf to slowly",
    "start": "1794059",
    "end": "1801080"
  },
  {
    "text": "drain a single Z tunnel uh as you upgrade basically you have two demons",
    "start": "1801080",
    "end": "1806960"
  },
  {
    "text": "that deployed at the same time with ebpf Will Implement dragging mechanism where",
    "start": "1806960",
    "end": "1812000"
  },
  {
    "text": "all connections go to the old Z tunnel and new connections go to the music channel and after you know drain period",
    "start": "1812000",
    "end": "1818720"
  },
  {
    "text": "you can remove The Old Demon set",
    "start": "1818720",
    "end": "1822580"
  },
  {
    "text": "move on to one more question from the slides so we",
    "start": "1825080",
    "end": "1830419"
  },
  {
    "text": "talked about this briefly but what's the difference between cyclis and proxilis uh yeah I briefly mentioned this so I'll",
    "start": "1830419",
    "end": "1837620"
  },
  {
    "text": "expand on it a bit um we should probably stop calling things less and talk about more about what they",
    "start": "1837620",
    "end": "1843679"
  },
  {
    "text": "are and what it really is for proxy this is putting more Dynamic logic in",
    "start": "1843679",
    "end": "1850580"
  },
  {
    "text": "applications in in particular grpc um and what this means is that you know",
    "start": "1850580",
    "end": "1857299"
  },
  {
    "text": "if you use grpc today without this proxylist feature uh you would you know put some options in and say I want to",
    "start": "1857299",
    "end": "1864140"
  },
  {
    "text": "route my service here I want to use this connect this option this option this option but it's not Dynamic like we have",
    "start": "1864140",
    "end": "1869779"
  },
  {
    "text": "a service mesh right you can't apply a virtual service and suddenly have your grpc applications do it or authorization",
    "start": "1869779",
    "end": "1876500"
  },
  {
    "text": "policy Etc um so what proxy this is is enabling that right we use the same XDS which is",
    "start": "1876500",
    "end": "1883520"
  },
  {
    "text": "the protocol used between Envoy and istio to get configuration the same protocol is used by grbc as well now and",
    "start": "1883520",
    "end": "1890899"
  },
  {
    "text": "so we can dynamically configure it to do many things that online can do not quite everything but a lot of things",
    "start": "1890899",
    "end": "1897919"
  },
  {
    "text": "and the reason someone may want to do that is performance that's basically it right it's not as seamless as Envoy we",
    "start": "1897919",
    "end": "1903799"
  },
  {
    "text": "don't have Auto injection that automatically configures it and your application doesn't know about it right they actually go and change your",
    "start": "1903799",
    "end": "1909860"
  },
  {
    "text": "application code and say I want to use the XDS options in grpc but in return they get basically the highest",
    "start": "1909860",
    "end": "1915620"
  },
  {
    "text": "performance of any service mesh can offer right the overhead is effectively zero so",
    "start": "1915620",
    "end": "1921500"
  },
  {
    "text": "if you have a use case where that's all you care about is I must have no overhead it's really one of the only",
    "start": "1921500",
    "end": "1926720"
  },
  {
    "text": "options awesome anyone else want to add yep yeah",
    "start": "1926720",
    "end": "1931760"
  },
  {
    "text": "I was gonna basically sort of say the same thing um you're always giving up something for",
    "start": "1931760",
    "end": "1937100"
  },
  {
    "text": "something else and you know one of the things I always tell people about service mesh",
    "start": "1937100",
    "end": "1942260"
  },
  {
    "text": "um is it takes the application developer out of the picture I mean they typically you know at least in my mind they don't",
    "start": "1942260",
    "end": "1949760"
  },
  {
    "text": "really have to do anything it's up to the platform engineer to have to worry about it um and in this case they're taking away",
    "start": "1949760",
    "end": "1957679"
  },
  {
    "text": "that benefit at least what I consider a benefit and pushing a little bit back on them but the other you know the game",
    "start": "1957679",
    "end": "1964700"
  },
  {
    "text": "there is the performance you had to try to hopefully like add some more color to this",
    "start": "1964700",
    "end": "1970520"
  },
  {
    "text": "um who here has used Java spring boot here yeah who's used something like like",
    "start": "1970520",
    "end": "1975860"
  },
  {
    "text": "the.net framework right so these are all ecosystems and and libraries that you're using to build",
    "start": "1975860",
    "end": "1982640"
  },
  {
    "text": "your applications um but the issue is in a service mesh deployment uh you want to be able to use",
    "start": "1982640",
    "end": "1988340"
  },
  {
    "text": "different languages and there's no guarantee that something like springboot can talk to.net core can talk to Django",
    "start": "1988340",
    "end": "1993740"
  },
  {
    "text": "can talk to node and have all that implemented in different places so grpc is the protocol that all the different",
    "start": "1993740",
    "end": "2000460"
  },
  {
    "text": "libraries can standardize on and then when you fire up grpc clients they all know how to do this XDS dance and",
    "start": "2000460",
    "end": "2008440"
  },
  {
    "text": "through the mtls and all the dynamic stuff by talking to istio control plane so really what proxylist is is you know",
    "start": "2008440",
    "end": "2016659"
  },
  {
    "text": "putting stuff back in the hands of the application developer like Eric said whereas with sidecar lists you just",
    "start": "2016659",
    "end": "2023559"
  },
  {
    "text": "remove you're just removing the sidecar and putting the proxy somewhere else",
    "start": "2023559",
    "end": "2028620"
  },
  {
    "text": "crystal ball question and I want everyone to answer it so where do you see service mesh in 18 months",
    "start": "2031360",
    "end": "2038500"
  },
  {
    "text": "who wants to start John uh yeah I can take this I think it's largely going away and what I mean by",
    "start": "2038500",
    "end": "2045159"
  },
  {
    "text": "that is not that we're going to you know cancel istio or cancel service mesh but that we won't need to think about it we",
    "start": "2045159",
    "end": "2050919"
  },
  {
    "text": "won't need to talk about it it would just be there right which is really the origin of the",
    "start": "2050919",
    "end": "2056679"
  },
  {
    "text": "ambient word right like you shouldn't have to go say Okay I want all these cool functionalities of a",
    "start": "2056679",
    "end": "2062560"
  },
  {
    "text": "service mesh so I'm going to go deploy istio and onboard my applications and do all this stuff right you should just be able to start a kubernetes cluster and",
    "start": "2062560",
    "end": "2069280"
  },
  {
    "text": "you have TLS you have mtls even and if I want to do a routing rule I",
    "start": "2069280",
    "end": "2074560"
  },
  {
    "text": "just apply an HTTP router a virtual service and I get routing if I want to enforce authorization policies that are",
    "start": "2074560",
    "end": "2080858"
  },
  {
    "text": "beyond what never policy offers I just apply the authorization policy and it works right this is how a lot of things",
    "start": "2080859",
    "end": "2086858"
  },
  {
    "text": "in kubernetes work today like Network policy for example it's just an API you don't worry about how it's implemented",
    "start": "2086859",
    "end": "2092980"
  },
  {
    "text": "and I think that that's where hopefully service match is going",
    "start": "2092980",
    "end": "2098080"
  },
  {
    "text": "you are um yeah I was going to say something very similar I mean today when you saw a kubernetes cluster then first",
    "start": "2098080",
    "end": "2104320"
  },
  {
    "text": "thing you install is a cni and I think the the second thing you would install",
    "start": "2104320",
    "end": "2109480"
  },
  {
    "text": "would be a service mesh just because it'd be so prevalent and to add to",
    "start": "2109480",
    "end": "2114700"
  },
  {
    "text": "John's point after what I think will happen is that everybody will standardized on a service",
    "start": "2114700",
    "end": "2120520"
  },
  {
    "text": "mesh you could also leverage the identity it provides you as an",
    "start": "2120520",
    "end": "2126099"
  },
  {
    "text": "application developer because all of a sudden the service manager can provide you an identity that you can trust to",
    "start": "2126099",
    "end": "2132520"
  },
  {
    "text": "the application itself and you could use it to kind of Leverage those features and save you some time right in your",
    "start": "2132520",
    "end": "2138099"
  },
  {
    "text": "applications you have one less concern to worry about",
    "start": "2138099",
    "end": "2142740"
  },
  {
    "text": "um well I I as I sort of alluded to earlier I sort of agree with John's idea",
    "start": "2145780",
    "end": "2151060"
  },
  {
    "text": "um I don't know if we'll get there in 18 months um but I do hope we get there at some point",
    "start": "2151060",
    "end": "2157000"
  },
  {
    "text": "um you know 18 months from now um I think I think we'll",
    "start": "2157000",
    "end": "2162520"
  },
  {
    "text": "we'll have a better understanding at least on istio service mesh does this",
    "start": "2162520",
    "end": "2167680"
  },
  {
    "text": "sidecar list does this ambient mode um really play out um I'm really kind of you know waiting",
    "start": "2167680",
    "end": "2174280"
  },
  {
    "text": "to see what people can you know try it get it out you know and and let us know how it works",
    "start": "2174280",
    "end": "2180099"
  },
  {
    "text": "um and we'll see how how things change um but again I think there's a lot of",
    "start": "2180099",
    "end": "2185740"
  },
  {
    "text": "stuff as you mentioned we come to these conferences um and there's always the new shiny",
    "start": "2185740",
    "end": "2191020"
  },
  {
    "text": "thing um I'm I don't know what that shiny thing is going to be in 18 months but I do think there's probably going to be a",
    "start": "2191020",
    "end": "2196839"
  },
  {
    "text": "shiny thing um which is going to you know that's why I don't think we're gonna be there in 18 months because",
    "start": "2196839",
    "end": "2202599"
  },
  {
    "text": "um we do have a winding path um and I hope at least from an issue",
    "start": "2202599",
    "end": "2208420"
  },
  {
    "text": "standpoint it'll be ambient mode um and people will be able to use it and it'll make things simpler less complex",
    "start": "2208420",
    "end": "2214900"
  },
  {
    "text": "less costly um and hopefully they don't have to debug as many issues as sometimes they have to",
    "start": "2214900",
    "end": "2221440"
  },
  {
    "text": "debug whether I see service mesh in 18 months uh worth it is what I um is the best way",
    "start": "2221440",
    "end": "2229480"
  },
  {
    "text": "I can think I can summarize I agree with everything everybody has said um I was on another one of these panels",
    "start": "2229480",
    "end": "2235180"
  },
  {
    "text": "I think in in Detroit and someone had a question about the total cost of ownership of service mesh",
    "start": "2235180",
    "end": "2240820"
  },
  {
    "text": "um it's way too high uh in in current it's way too high for our users and in 18 months I want to see that if not it's",
    "start": "2240820",
    "end": "2248320"
  },
  {
    "text": "not never gonna be eliminated but I want that to see to see that severely cut down so that service mesh will be worth",
    "start": "2248320",
    "end": "2253599"
  },
  {
    "text": "it well that's uh the end of our panel thank you for sticking around and thank",
    "start": "2253599",
    "end": "2261240"
  }
]