[
  {
    "text": "hi all welcome back to the security room the best room at the conference don't tell that's the other rooms I'm Miami",
    "start": "30",
    "end": "5339"
  },
  {
    "text": "track host I was on the program committee to help select the security talks I'm here to introduce Rita and Mishra who are gonna give a great talk",
    "start": "5339",
    "end": "11490"
  },
  {
    "text": "on secrets store CSI driver um when you when the talk is over please rate the",
    "start": "11490",
    "end": "16590"
  },
  {
    "text": "talk in the shed and if you're just coming in now there's still a lot of seats over here so you can please come",
    "start": "16590",
    "end": "22289"
  },
  {
    "text": "sit down and listen to our wonderful presenters thank you thanks Maya hey",
    "start": "22289",
    "end": "27420"
  },
  {
    "text": "everyone last day of cube con really appreciate you guys being here so today",
    "start": "27420",
    "end": "33390"
  },
  {
    "text": "we're gonna talk about the secrets for CSI driver so that you can bring your own enterprise secret stores to",
    "start": "33390",
    "end": "40200"
  },
  {
    "text": "kubernetes clusters so this is Rita Rita",
    "start": "40200",
    "end": "47550"
  },
  {
    "text": "Zhang she's a software engineer for Microsoft she lives in San Francisco works on the",
    "start": "47550",
    "end": "53250"
  },
  {
    "text": "container upstream team for aks she's also the maintainer of secrets short CSI driver she's written like most",
    "start": "53250",
    "end": "59910"
  },
  {
    "text": "of the code I've got really probably like 10 15 percent you can all go to the contributors on github and then figure",
    "start": "59910",
    "end": "66000"
  },
  {
    "text": "that out and then she's altered in a keyboard driver for for implementation",
    "start": "66000",
    "end": "71220"
  },
  {
    "text": "on on flex volumes and also they're kind of one of the maintenance for the open",
    "start": "71220",
    "end": "77549"
  },
  {
    "text": "policy gatekeeper project yeah that's",
    "start": "77549",
    "end": "83670"
  },
  {
    "text": "why I try again and here we have Misha",
    "start": "83670",
    "end": "88710"
  },
  {
    "text": "he is a team lead and Darrell at Harsha Club and he is based in Vancouver and he",
    "start": "88710",
    "end": "96329"
  },
  {
    "text": "is a core provider maintainer for home virtual cubelet and as well as this",
    "start": "96329",
    "end": "101759"
  },
  {
    "text": "secret or CSI driver and when he's not coding he likes to DJ I believe you have",
    "start": "101759",
    "end": "110310"
  },
  {
    "text": "to say that I forgot what you she loves dogs by the way I had to say that I didn't say that",
    "start": "110310",
    "end": "116810"
  },
  {
    "text": "alright so let's get into it so the kubernetes database so before we get into any CSI interface our driver",
    "start": "117020",
    "end": "124380"
  },
  {
    "text": "implementations or the wall or the key wall we'll talk about kubernetes itself so kubernetes as you know when you",
    "start": "124380",
    "end": "132099"
  },
  {
    "text": "kubernetes using coop CTL you interact with the kubernetes api server the kubernetes api server is interacting and",
    "start": "132099",
    "end": "137859"
  },
  {
    "text": "storing and retrieving objects from hcd hcd is your persistent store is the stateful part of the whole system and if",
    "start": "137859",
    "end": "145900"
  },
  {
    "text": "you want to use secrets for your pods and your containers in the application and kubernetes you end up using kubernetes secrets so coo Brandis",
    "start": "145900",
    "end": "152769"
  },
  {
    "text": "secrets out of the box it does basic ste for encoding and store stuff in plain",
    "start": "152769",
    "end": "158049"
  },
  {
    "text": "text and EDD so the the problem with that is if someone gets access to the HDD API or gets access to the HDD CTL",
    "start": "158049",
    "end": "166719"
  },
  {
    "text": "they can just list and kind of see your you know plaintext passwords or they could be a database root password which",
    "start": "166719",
    "end": "172810"
  },
  {
    "text": "is unfortunate if they get access to that or if it's a cloud resource much cloud API token for example for as your",
    "start": "172810",
    "end": "179859"
  },
  {
    "text": "Microsoft for AWS or Google they can create more resources or delete key resources and things like that so to be",
    "start": "179859",
    "end": "186639"
  },
  {
    "text": "be honest it's a not a not a good situation to be in you yeah you you want to prevent it",
    "start": "186639",
    "end": "192219"
  },
  {
    "text": "against that so kind of talk about the lifecycle of a secret secret in Cuban",
    "start": "192219",
    "end": "197799"
  },
  {
    "text": "Annie so how you know how do you go about creating a secret so let's say I wanted to use a secret for my pod first",
    "start": "197799",
    "end": "203379"
  },
  {
    "text": "I'll create a secret using coop CTL or using the API to go coop CTL create secret generic and this I'm just",
    "start": "203379",
    "end": "209769"
  },
  {
    "text": "creating a generic secret and then you you submit that to the to the Coopers to",
    "start": "209769",
    "end": "214959"
  },
  {
    "text": "the kubernetes api server and the api server stores in a net CD and then let's say some part wants to use the secret",
    "start": "214959",
    "end": "221979"
  },
  {
    "text": "they'll just reference it in the pod spec they'll say I need the secret mounted at this place and the way this",
    "start": "221979",
    "end": "228189"
  },
  {
    "text": "works is when you submit the the parts back using coops ETL to the API server the couplet is responsible for creating",
    "start": "228189",
    "end": "234400"
  },
  {
    "text": "the part on the kubernetes node once the pod comes online coop couplet actually does the mounting",
    "start": "234400",
    "end": "240219"
  },
  {
    "text": "of the secret into the container file system and then the container process might be your application just reads it",
    "start": "240219",
    "end": "245949"
  },
  {
    "text": "off of disk or environment variables and off you go so that's kind of the workflow right so I know most of you",
    "start": "245949",
    "end": "253449"
  },
  {
    "text": "already have you know your own data stores you own keep secret stores that",
    "start": "253449",
    "end": "259750"
  },
  {
    "text": "you might be using maybe a cloud provider secrets or maybe something like Walt or so on so what if you",
    "start": "259750",
    "end": "265480"
  },
  {
    "text": "wanted to just use those those secret tools directly and you know didn't really want to interact with the",
    "start": "265480",
    "end": "270840"
  },
  {
    "text": "kubernetes secrets and how to bring in those secrets into kubernetes so why why should kubernetes be different that's",
    "start": "270840",
    "end": "277480"
  },
  {
    "text": "kind of the premise of it that is a great question so introducing the secret",
    "start": "277480",
    "end": "284200"
  },
  {
    "text": "store CSI driver much like how kubernetes attached kubernetes secrets",
    "start": "284200",
    "end": "290230"
  },
  {
    "text": "to pods the secret store CSI driver does exactly that so when you create a pot",
    "start": "290230",
    "end": "295960"
  },
  {
    "text": "the API server schedules the pot on a node then the couplet looks at the pod",
    "start": "295960",
    "end": "302080"
  },
  {
    "text": "definition and sees hey it looks like you want to attach a volume and the volume uses this secret or CSI driver",
    "start": "302080",
    "end": "309370"
  },
  {
    "text": "and then you looks for all the volume attributes to be used to authenticate",
    "start": "309370",
    "end": "315360"
  },
  {
    "text": "the CSI driver against your secret store API service then once you're",
    "start": "315360",
    "end": "322450"
  },
  {
    "text": "authenticated then the content is is attached to the container file system",
    "start": "322450",
    "end": "329170"
  },
  {
    "text": "and then the volume is attached as a temp FS volume so before we go further",
    "start": "329170",
    "end": "335080"
  },
  {
    "text": "you might wonder what is the CSI driver so CSI stands for container storage",
    "start": "335080",
    "end": "340600"
  },
  {
    "text": "interface so this was G aid back in 113 of kubernetes and it was originally",
    "start": "340600",
    "end": "347440"
  },
  {
    "text": "designed so that there's a standard way to expose all the different storage",
    "start": "347440",
    "end": "353020"
  },
  {
    "text": "systems to kubernetes to container workloads for all the different",
    "start": "353020",
    "end": "358240"
  },
  {
    "text": "container orchestrators like kubernetes so why do we like this well with this",
    "start": "358240",
    "end": "364270"
  },
  {
    "text": "standard in place and a storage provider can basically write the extension",
    "start": "364270",
    "end": "370500"
  },
  {
    "text": "without ever touching the core kubernetes codebase now this is really really nice because then you can release",
    "start": "370500",
    "end": "377350"
  },
  {
    "text": "you can manage your own release cycle and the code itself lives outside of kubernetes and all you have to do as a",
    "start": "377350",
    "end": "385000"
  },
  {
    "text": "user all you have to do is deploy the plug-in on your cluster and make sure that it's available on each node and the",
    "start": "385000",
    "end": "392920"
  },
  {
    "text": "user when they use it it will have the exact same experience across all the different",
    "start": "392920",
    "end": "398690"
  },
  {
    "text": "storage systems so you can create Peavey's PVCs storage class with the",
    "start": "398690",
    "end": "404390"
  },
  {
    "text": "exact same experience so with the secret or CSI driver it is no different so once",
    "start": "404390",
    "end": "409880"
  },
  {
    "text": "you deploy the plug-in then as I mentioned earlier then the driver can",
    "start": "409880",
    "end": "415730"
  },
  {
    "text": "then attach the secret to the two-year pod and in 115 and I want to highlight",
    "start": "415730",
    "end": "425420"
  },
  {
    "text": "this awesome PR the inline CSI inline",
    "start": "425420",
    "end": "430550"
  },
  {
    "text": "volume feature was introduced why is this really important well for this particular case we wanted",
    "start": "430550",
    "end": "436340"
  },
  {
    "text": "to make sure that the CSI volume secret store CSI volume plugin works exactly",
    "start": "436340",
    "end": "442070"
  },
  {
    "text": "the same way as when we used to have it for kewal flex volume so that when you",
    "start": "442070",
    "end": "448250"
  },
  {
    "text": "create a secret store volume you can essentially define that volume and",
    "start": "448250",
    "end": "454130"
  },
  {
    "text": "provide all the attributes right within the pot definition and as an example",
    "start": "454130",
    "end": "461000"
  },
  {
    "text": "here as you can see this is a pot definition and the user basically has to",
    "start": "461000",
    "end": "467840"
  },
  {
    "text": "specify for this volume I want to use a secret store CSI driver and here are the",
    "start": "467840",
    "end": "473930"
  },
  {
    "text": "volume attribute for the provider Azure and because this driver is built with a provider interface all you have to do is",
    "start": "473930",
    "end": "481370"
  },
  {
    "text": "specify what provider you want to use and currently we support Azure and Hasek",
    "start": "481370",
    "end": "488419"
  },
  {
    "text": "or volt and so by providing that and specifying the attributes needed for",
    "start": "488419",
    "end": "494030"
  },
  {
    "text": "each provider that information is used to authenticate against a dirty ball or",
    "start": "494030",
    "end": "499640"
  },
  {
    "text": "Hashi cobalt and then once that information is once you get the secret",
    "start": "499640",
    "end": "504919"
  },
  {
    "text": "content then all the secrets then is mounted into the container at this file",
    "start": "504919",
    "end": "510380"
  },
  {
    "text": "path so in order to use this plugin you",
    "start": "510380",
    "end": "517400"
  },
  {
    "text": "have two ways right so if you have a an older cluster let's say 1 13 which is",
    "start": "517400",
    "end": "523789"
  },
  {
    "text": "the minimum required kubernetes versions for to run this particular plugin you",
    "start": "523789",
    "end": "530150"
  },
  {
    "text": "can basically create Peevy and a PVC and then in your pot and you just reference a PVC now for some of",
    "start": "530150",
    "end": "537680"
  },
  {
    "text": "you that who are maybe more advanced who want to run 115 alpha 2 plus then you",
    "start": "537680",
    "end": "544880"
  },
  {
    "text": "can start enjoy the inline volume feature that I mentioned earlier and",
    "start": "544880",
    "end": "550370"
  },
  {
    "text": "once again this is really to give your end-users a better user experience the",
    "start": "550370",
    "end": "556250"
  },
  {
    "text": "Marvel of the story is upgrade your kubernetes cluster is not to the alpha one but hopefully when one 115 comes out",
    "start": "556250",
    "end": "561920"
  },
  {
    "text": "stable but this does work you know for 113 or 114 and once again to use this",
    "start": "561920",
    "end": "569840"
  },
  {
    "text": "feature make sure you have the inline volume feature Gaye specify a pendant in",
    "start": "569840",
    "end": "575600"
  },
  {
    "text": "your API server yamo as well as your cubic configurations alright so let's",
    "start": "575600",
    "end": "582830"
  },
  {
    "text": "take a look at a demo so here I'm going",
    "start": "582830",
    "end": "594140"
  },
  {
    "text": "to first show you what the what a typical cluster looks like and as you can see I have 115 alpha to running and",
    "start": "594140",
    "end": "601490"
  },
  {
    "text": "I have a 2 note agent cluster currently and I'm going to use home we have a",
    "start": "601490",
    "end": "608570"
  },
  {
    "text": "chart that makes it really easy for you to deploy all this stuff and once all",
    "start": "608570",
    "end": "614150"
  },
  {
    "text": "the resources deployed then the specific plug-in is installed on each one of",
    "start": "614150",
    "end": "621230"
  },
  {
    "text": "these agent notes so let's see what that actually deployed and you should always",
    "start": "621230",
    "end": "629210"
  },
  {
    "text": "deploy in a different name space from compared to the actual workload and as",
    "start": "629210",
    "end": "634700"
  },
  {
    "text": "you can see here the daemon set is actually the component that installs the plug-in driver and then once the plug-in",
    "start": "634700",
    "end": "641420"
  },
  {
    "text": "is in the node then the cubelet can talk to it directly next we're gonna take a",
    "start": "641420",
    "end": "647600"
  },
  {
    "text": "look at what a particular pot yeah mole looks like and now I kind of mentioned",
    "start": "647600",
    "end": "652970"
  },
  {
    "text": "that earlier in the in the presentation but here once again for this demo I'm",
    "start": "652970",
    "end": "658760"
  },
  {
    "text": "using the azure provider and for this demo I actually want to retrieve two",
    "start": "658760",
    "end": "664610"
  },
  {
    "text": "different so secret one is a key and one is a secret right because those are the",
    "start": "664610",
    "end": "671510"
  },
  {
    "text": "supported types in in a jerky ball so",
    "start": "671510",
    "end": "676740"
  },
  {
    "text": "next I'm going to apply and deploy this pod so once this happens and as I",
    "start": "676740",
    "end": "687120"
  },
  {
    "text": "mentioned earlier earlier earlier the cubelets sees die I want to use this DSi",
    "start": "687120",
    "end": "692310"
  },
  {
    "text": "driver and it then basically creates the pod and during the creation process if",
    "start": "692310",
    "end": "699300"
  },
  {
    "text": "the driver itself retrieves the continent from Adric evil then grabs it and then mount it to the container let's",
    "start": "699300",
    "end": "710400"
  },
  {
    "text": "see how many secrets I get back and as you can see one is a secret",
    "start": "710400",
    "end": "716100"
  },
  {
    "text": "another one is a key very creative with my naming conventions and let's just",
    "start": "716100",
    "end": "722700"
  },
  {
    "text": "take a look at what one of them looks like so this could be you know like a database password or whatnot and yeah",
    "start": "722700",
    "end": "731520"
  },
  {
    "text": "hola [Applause]",
    "start": "731520",
    "end": "742339"
  },
  {
    "text": "so that was a demonstration of the how you can deploy the secret store CSI",
    "start": "742569",
    "end": "748730"
  },
  {
    "text": "driver and how you can continue to store and manage your secrets in an external",
    "start": "748730",
    "end": "754370"
  },
  {
    "text": "secret store but still can be mounted into your pot so that your applications",
    "start": "754370",
    "end": "760310"
  },
  {
    "text": "can utilize those secrets and as we",
    "start": "760310",
    "end": "766009"
  },
  {
    "text": "mentioned earlier what's not also nice about this CSI driver is that we",
    "start": "766009",
    "end": "771079"
  },
  {
    "text": "actually implemented a provider interface that allows different secrets or providers to basically implement the",
    "start": "771079",
    "end": "780250"
  },
  {
    "text": "the api's that we currently have where by providing the backend plumbing to",
    "start": "780250",
    "end": "786589"
  },
  {
    "text": "access the secret store and a callback mechanism to mount the content into your",
    "start": "786589",
    "end": "792079"
  },
  {
    "text": "target path and here's an example of",
    "start": "792079",
    "end": "797690"
  },
  {
    "text": "what that that provider interface looks like is really really simple it",
    "start": "797690",
    "end": "804050"
  },
  {
    "text": "basically just lets us know how to authenticate against the provider and",
    "start": "804050",
    "end": "810230"
  },
  {
    "text": "then how to retrieve the list of the content that you want to retrieve and where to mount the path all right",
    "start": "810230",
    "end": "818779"
  },
  {
    "text": "another live demo don't you just love doing live demos right imagine how I feel right now all right so let's let's",
    "start": "818779",
    "end": "827990"
  },
  {
    "text": "try this if it works okay flip flip alright alright so I'm not gonna go into",
    "start": "827990",
    "end": "836180"
  },
  {
    "text": "kind of the details of like installing the CSI driver you saw that Rita kind of give a good kind step-by-step using a",
    "start": "836180",
    "end": "842329"
  },
  {
    "text": "help chart you can use urban area modes as well if you want so I'll also list all the things that are running here",
    "start": "842329",
    "end": "847910"
  },
  {
    "text": "coop CTO get paths so here I have a kubernetes cluster also I think one one",
    "start": "847910",
    "end": "853759"
  },
  {
    "text": "15 alpha that's running in this case I'm not following a Vitas convention of like",
    "start": "853759",
    "end": "859069"
  },
  {
    "text": "make sure the driver is in the different namespaces in the application I'm just putting it all on default like many of us do not do it I don't recognize don't",
    "start": "859069",
    "end": "869180"
  },
  {
    "text": "recommend that but you know what like it's just a demo so it's fine and I'm already running",
    "start": "869180",
    "end": "874250"
  },
  {
    "text": "so what wall server is running in dev mode so most of you who know you know who use vault before wall ships for the",
    "start": "874250",
    "end": "880880"
  },
  {
    "text": "inbuilt dev mode I'm just gonna use keep it to keep things simple do not do this in production as well there's proper",
    "start": "880880",
    "end": "886790"
  },
  {
    "text": "guys too you know making sure walls running in production properly in this case this is just is running as dev I'm",
    "start": "886790",
    "end": "892790"
  },
  {
    "text": "also port forwarding to that vault part that you see up there right there so that I can locally interact with okay",
    "start": "892790",
    "end": "899720"
  },
  {
    "text": "well I'm not port forwarding to that part I will put forward now let's see if it works okay now I'm port forwarding to",
    "start": "899720",
    "end": "905600"
  },
  {
    "text": "the part so I can interact with wall now so I can do wall status if I know how to type wall status okay you see we get",
    "start": "905600",
    "end": "912110"
  },
  {
    "text": "some output we're running water ocean one one one its unsealed it's the dev not highly available cluster for this",
    "start": "912110",
    "end": "919490"
  },
  {
    "text": "demo alright so let's start with kind of creating a secret involved so we interact with just the key value store",
    "start": "919490",
    "end": "927020"
  },
  {
    "text": "of wall and this provider in a provider that we've written is a very kind of early version it's in alpha so it",
    "start": "927020",
    "end": "933230"
  },
  {
    "text": "doesn't support like all the different things that wall does which is like generating certificates generating dynamic credentials for databases cloud",
    "start": "933230",
    "end": "939230"
  },
  {
    "text": "API is and stuff you're just going to use a key key value store for now just to keep things simple so here let's",
    "start": "939230",
    "end": "945200"
  },
  {
    "text": "create a secret so we'll do wall kv one second let me open my cheat sheet okay",
    "start": "945200",
    "end": "951170"
  },
  {
    "text": "there you go so we will do a what kV put and will store a secret let's call it Q",
    "start": "951170",
    "end": "959150"
  },
  {
    "text": "con tu and we'll say hello equals secret",
    "start": "959150",
    "end": "964240"
  },
  {
    "text": "alright so here we have created the secret let's actually read it back wall KB read I think it's get yep secret Q con you",
    "start": "964240",
    "end": "976640"
  },
  {
    "text": "and then I can just do this so we can list the secret here so it's just a key value pair hello secret nothing fancy",
    "start": "976640",
    "end": "983060"
  },
  {
    "text": "super simple okay so not next and and what we usually create policies to kind",
    "start": "983060",
    "end": "989630"
  },
  {
    "text": "of restrict access you have this idea for policy so in this case we're gonna create a really simple read-only policy",
    "start": "989630",
    "end": "995450"
  },
  {
    "text": "so I'll show you the policy here it's example read-only it's very simple you can see we're restricting you know only",
    "start": "995450",
    "end": "1002320"
  },
  {
    "text": "reads and less on the path that's specified above which is secret data you can use of the secret that we just wrote and",
    "start": "1002320",
    "end": "1008130"
  },
  {
    "text": "then what we lose will create this policy will say world policy right and",
    "start": "1008130",
    "end": "1015180"
  },
  {
    "text": "then this is gonna be example read-only I'll just name it the same name of the file and the file is just right there so",
    "start": "1015180",
    "end": "1021900"
  },
  {
    "text": "we've successfully uploaded the policy to Walt I will read the policy back just quickly just to show you I'm not you",
    "start": "1021900",
    "end": "1028230"
  },
  {
    "text": "know checking out like faking or anything it will be Walt I think it's read example policy I hope",
    "start": "1028230",
    "end": "1037459"
  },
  {
    "text": "read only yeah so we've read it back from wall and that policy is",
    "start": "1037459",
    "end": "1042600"
  },
  {
    "text": "successfully created so next thing what we'll do is we'll create a wall to roll so roll roll is like like any other role",
    "start": "1042600",
    "end": "1048840"
  },
  {
    "text": "in any kind of like our back system you know you would have a role for developers for production usage for",
    "start": "1048840",
    "end": "1054240"
  },
  {
    "text": "operators maybe developers can only reach from production and right to depth clusters and things like that so we",
    "start": "1054240",
    "end": "1060450"
  },
  {
    "text": "create a role for for our application to kind of start using it so here I've already pre created there also I think I can just do read oh no",
    "start": "1060450",
    "end": "1069840"
  },
  {
    "text": "one saw that vide let's see oh you know",
    "start": "1069840",
    "end": "1076410"
  },
  {
    "text": "what I'll type it I'm not gonna shortcut and go go and try to do socket if I can remember the path so it's gonna be I",
    "start": "1076410",
    "end": "1081870"
  },
  {
    "text": "think auth kubernetes role example if I do that if do this correctly you're",
    "start": "1081870",
    "end": "1087810"
  },
  {
    "text": "gonna clap because this is a long path that I don't know if it's correct okay yeah okay so it works I don't know why",
    "start": "1087810",
    "end": "1096930"
  },
  {
    "text": "you made you clap on either way but the the wall trolls already pre-created and",
    "start": "1096930",
    "end": "1102780"
  },
  {
    "text": "what you'll notice here is is bound to a service account in Cuban Aires and also bound to that policy that we just",
    "start": "1102780",
    "end": "1108540"
  },
  {
    "text": "created I've also attached default policy but you don't need to do that in this case we're just like attaching that",
    "start": "1108540",
    "end": "1113940"
  },
  {
    "text": "to the example read-only policy that we just created so we have a role then we have a policy underneath and we have a secret that we're kind of creating",
    "start": "1113940",
    "end": "1120060"
  },
  {
    "text": "access to so that's the kind of the setup involved it's a one-time thing and nothing we haven't even touched",
    "start": "1120060",
    "end": "1125520"
  },
  {
    "text": "kubernetes yet so now we'll kind of touch kubernetes in this case so I'll open a similar pods back that you saw an",
    "start": "1125520",
    "end": "1132210"
  },
  {
    "text": "in Vedas example exactly the same thing we are using the same engine container we also mounting the secret",
    "start": "1132210",
    "end": "1139230"
  },
  {
    "text": "and the I think the same path and then here in the volumes you see a very familiar CSI block here with the driver",
    "start": "1139230",
    "end": "1147029"
  },
  {
    "text": "which is a secret store driver but instead of keyboard you see vault which is the harsh repair world it's so",
    "start": "1147029",
    "end": "1152250"
  },
  {
    "text": "confusing so many walls and then the rolling is the example roll that we just that we just saw in the previous example",
    "start": "1152250",
    "end": "1158340"
  },
  {
    "text": "here I'm providing the address and I'm keeping things simple I'm providing an IP address directly to the kubernetes",
    "start": "1158340",
    "end": "1163380"
  },
  {
    "text": "service that's running and what I'll show you the communities after service after this and I'm also skipping TLS to",
    "start": "1163380",
    "end": "1169260"
  },
  {
    "text": "make things easier and I'm not so secure and then here in the object path I'm",
    "start": "1169260",
    "end": "1175529"
  },
  {
    "text": "gonna select instead of I'm just gonna enter cube continue because that's why we want to read from and we'll read the hello secret and that the the values to",
    "start": "1175529",
    "end": "1182700"
  },
  {
    "text": "secret that so what we start hopefully if everything works and you can also you have also have support for versions so",
    "start": "1182700",
    "end": "1188460"
  },
  {
    "text": "in in the new version of wall key value store you can every secret is version as well so you can kind of figure out which",
    "start": "1188460",
    "end": "1194789"
  },
  {
    "text": "version you want by default it's the latest version so we will just use the latest version so I'll quickly show you",
    "start": "1194789",
    "end": "1200880"
  },
  {
    "text": "the kubernetes service here coop CTL get service what and then that's the IP address that",
    "start": "1200880",
    "end": "1207090"
  },
  {
    "text": "I'm using for this demo all right so that's good so now it's the nerve-wracking part of the demo it just",
    "start": "1207090",
    "end": "1213000"
  },
  {
    "text": "does it work right like we will we will find out in two seconds so we'll do cube City I'll",
    "start": "1213000",
    "end": "1219419"
  },
  {
    "text": "apply and care gonna create the part now what will happen is the the Walt CSI driver will pick this part creation will",
    "start": "1219419",
    "end": "1225419"
  },
  {
    "text": "figure out oh it's using the using the using this in the secret secret store",
    "start": "1225419",
    "end": "1230970"
  },
  {
    "text": "CSI driver and using the Walt provider and then do some form of authentication",
    "start": "1230970",
    "end": "1236190"
  },
  {
    "text": "for us so let's see how that how does that look so we've kind of tail some logs here Kubb CTL get pods and then",
    "start": "1236190",
    "end": "1244320"
  },
  {
    "text": "I'll see the I will actually see the wide view for this if I can oh my god",
    "start": "1244320",
    "end": "1250500"
  },
  {
    "text": "okay which one is it so here it's running on node one I think is 0 0 1 so",
    "start": "1250500",
    "end": "1256230"
  },
  {
    "text": "let's actually see the locks for the the driver that's running on that node so cube CTL logs and let's tail the logs",
    "start": "1256230",
    "end": "1263429"
  },
  {
    "text": "for that yeah secret thank you computer okay so the container secrets are okay",
    "start": "1263429",
    "end": "1270500"
  },
  {
    "text": "so here you see a bunch of output it's too big actually I'm just going to make it a little smaller all right so you see",
    "start": "1270500",
    "end": "1277039"
  },
  {
    "text": "a bunch of output here this is in running in debug mode so it's outputting everything basically but that's the",
    "start": "1277039",
    "end": "1283160"
  },
  {
    "text": "object that you saw was basically provided by the bottom by the parts back and the driver has it now so here's the",
    "start": "1283160",
    "end": "1289250"
  },
  {
    "text": "interesting part so wherever you see vault is is where you want to kind of pay attention here so you know our",
    "start": "1289250",
    "end": "1294500"
  },
  {
    "text": "driver is detected that the role name we want to use an example row the wall address is provided and then it",
    "start": "1294500",
    "end": "1299659"
  },
  {
    "text": "basically performs a wall login using the jar token so what by you know what",
    "start": "1299659",
    "end": "1305179"
  },
  {
    "text": "today has support for kubernetes as form an authentication method so what we do is we use the pods service account token",
    "start": "1305179",
    "end": "1312350"
  },
  {
    "text": "which is jar token signed by kubernetes we submit that to vault along with the",
    "start": "1312350",
    "end": "1317480"
  },
  {
    "text": "rolling and then wall performs a verification process it uses kubernetes token to view API and make sure that the",
    "start": "1317480",
    "end": "1324530"
  },
  {
    "text": "jar token is valid if the jar token is valid it returns you back a wall token and then you can start interacting with walled so in this case the driver will",
    "start": "1324530",
    "end": "1331010"
  },
  {
    "text": "start retrieving the secrets that we've asked for so here you see a very nice-looking statement getting secrets",
    "start": "1331010",
    "end": "1336710"
  },
  {
    "text": "from wall but you know we'll see if it actually works and then and then you see the secret stores here's a driver",
    "start": "1336710",
    "end": "1341840"
  },
  {
    "text": "actually writing it to the to the container there so moment of truth will",
    "start": "1341840",
    "end": "1347570"
  },
  {
    "text": "exact into the container in in genetics secret store in line and cat cat cat the",
    "start": "1347570",
    "end": "1354169"
  },
  {
    "text": "mount secret store which was our mount path and the queue con EU which is should be hopefully our secret all right",
    "start": "1354169",
    "end": "1360409"
  },
  {
    "text": "let's see should I do it maybe we don't need to find out right maybe you don't have to do it but okay let's find out so",
    "start": "1360409",
    "end": "1367220"
  },
  {
    "text": "if I do that you see the secret there so which is great so it works so that's kind of the kind of the interactions on",
    "start": "1367220",
    "end": "1372830"
  },
  {
    "text": "the wall side and interaction on the on the Kuban any side of the kind of the experience that we provided with this provider again this provider is really",
    "start": "1372830",
    "end": "1379429"
  },
  {
    "text": "super it's very young it doesn't have support for all the things that wall does but hopefully we can add support to",
    "start": "1379429",
    "end": "1384620"
  },
  {
    "text": "it as we go on so I'll switch back to the slides okay",
    "start": "1384620",
    "end": "1391509"
  },
  {
    "text": "see ya so now what if you have to restrict access like basically I've",
    "start": "1393970",
    "end": "1400280"
  },
  {
    "text": "restrict pause to access only a specific secret store so how do you do that maybe you label the pods and then",
    "start": "1400280",
    "end": "1405350"
  },
  {
    "text": "restrict access so how does that work so next I have a demo that basically",
    "start": "1405350",
    "end": "1412010"
  },
  {
    "text": "answers that question so a jerky vault utilizes as your active directory for",
    "start": "1412010",
    "end": "1420230"
  },
  {
    "text": "access control and authorization so one of the things that we developed was to a",
    "start": "1420230",
    "end": "1427450"
  },
  {
    "text": "active directory pod identity solution which basically allows us to create a",
    "start": "1427450",
    "end": "1434930"
  },
  {
    "text": "resource in the cluster that represents an actual Azure Active Directory identity and then once it's created then",
    "start": "1434930",
    "end": "1442370"
  },
  {
    "text": "we bind that identity to some label selector and then in your pod then you",
    "start": "1442370",
    "end": "1447500"
  },
  {
    "text": "can then reference that label selector and have that identity assigned to that pod so once the identity is assigned to",
    "start": "1447500",
    "end": "1454400"
  },
  {
    "text": "that pod when the pot makes a request it then uses that identity for all the",
    "start": "1454400",
    "end": "1459730"
  },
  {
    "text": "requests that requires that identity",
    "start": "1459730",
    "end": "1464049"
  },
  {
    "text": "I'll get the mic for you",
    "start": "1466870",
    "end": "1470770"
  },
  {
    "text": "to do it live for that",
    "start": "1479179",
    "end": "1483309"
  },
  {
    "text": "okay so now I have the same exact cluster that I used earlier so what I'm",
    "start": "1501710",
    "end": "1507390"
  },
  {
    "text": "gonna do is go ahead and deploy all the resources that are required to run the",
    "start": "1507390",
    "end": "1513390"
  },
  {
    "text": "pod identity solution that I mentioned earlier so the PI identity solution basically creates bunch of CRTs sorry",
    "start": "1513390",
    "end": "1522000"
  },
  {
    "text": "basically create basically creates a j''r identity CR DS that actually maps",
    "start": "1522000",
    "end": "1528270"
  },
  {
    "text": "to an actual Active Directory identity so as you can see here as you can see",
    "start": "1528270",
    "end": "1535919"
  },
  {
    "text": "here basically what I'm doing is I am creating an aad identity which basically",
    "start": "1535919",
    "end": "1541590"
  },
  {
    "text": "maps to an azure identity and then the binding which tells me please find this",
    "start": "1541590",
    "end": "1547350"
  },
  {
    "text": "identity - any pot with these pasta lectures right label selectors so here",
    "start": "1547350",
    "end": "1552780"
  },
  {
    "text": "let's take a look at one example so as",
    "start": "1552780",
    "end": "1558870"
  },
  {
    "text": "you can see this looks exactly like what we had earlier right I'm still using the",
    "start": "1558870",
    "end": "1564900"
  },
  {
    "text": "secret or CSI driver and I'm basically using the provider name but the",
    "start": "1564900",
    "end": "1570480"
  },
  {
    "text": "difference here is the difference is as",
    "start": "1570480",
    "end": "1577890"
  },
  {
    "text": "you can see here the label selector says for a ad pot identity binding use a name",
    "start": "1577890",
    "end": "1583020"
  },
  {
    "text": "of the identity binding that I used earlier when I deploy the binding and then once the binding is selected here",
    "start": "1583020",
    "end": "1589799"
  },
  {
    "text": "then in the driver itself I am I'm telling the driver to use pot identity",
    "start": "1589799",
    "end": "1595679"
  },
  {
    "text": "and then I set it to true so from that point forward I'm using Active Directory identity to authenticate against the",
    "start": "1595679",
    "end": "1602970"
  },
  {
    "text": "Adger Keeble instance so I'm gonna go",
    "start": "1602970",
    "end": "1610710"
  },
  {
    "text": "ahead and create that particular resource as we just saw it now and then",
    "start": "1610710",
    "end": "1617789"
  },
  {
    "text": "once that's created then let's see if that assign identity CRD is actually",
    "start": "1617789",
    "end": "1624929"
  },
  {
    "text": "created okay was created so what happens is this identities assigned to the pod",
    "start": "1624929",
    "end": "1630179"
  },
  {
    "text": "so if we look at the pot that's created and as you can see in addition to the",
    "start": "1630179",
    "end": "1635980"
  },
  {
    "text": "one that we created earlier now I have a pot running with pot identity and so",
    "start": "1635980",
    "end": "1641860"
  },
  {
    "text": "similarly let's see if we can see her coming back from key ball and now once",
    "start": "1641860",
    "end": "1648790"
  },
  {
    "text": "again I'm using an Active Directory identity and Ola",
    "start": "1648790",
    "end": "1656910"
  },
  {
    "text": "[Applause]",
    "start": "1657660",
    "end": "1664660"
  },
  {
    "text": "so yeah so what so that demonstration was to show you that a particular secret",
    "start": "1664660",
    "end": "1671930"
  },
  {
    "text": "store provider can provide the mechanism to provide some type of identity right",
    "start": "1671930",
    "end": "1677030"
  },
  {
    "text": "so with that identity then the pod can use our identity to authenticate itself and this is a huge requirement for from",
    "start": "1677030",
    "end": "1684290"
  },
  {
    "text": "a lot of the enterprise customers that we we talk to so this actually provides that capability and we believe that a",
    "start": "1684290",
    "end": "1691340"
  },
  {
    "text": "lot of the storage secret store providers out there will eventually have this type of identity solution alright",
    "start": "1691340",
    "end": "1700670"
  },
  {
    "text": "so in terms of the project status you see a bunch of alphas there so there's you know you can download it today you",
    "start": "1700670",
    "end": "1705860"
  },
  {
    "text": "can experiment with it I would not recommend using in production yet both for both the providers for the Azure kewal and the hospital vault but in the",
    "start": "1705860",
    "end": "1713210"
  },
  {
    "text": "next next few will acts a little while hopefully we can get them to debate and stable state as we go through some of",
    "start": "1713210",
    "end": "1719120"
  },
  {
    "text": "the kind of the user stories and use cases so please provide your issues your feedback will give you some links after",
    "start": "1719120",
    "end": "1725150"
  },
  {
    "text": "the after a few slides here to kind of provide your feedback there so we can kind of figure out well where we should",
    "start": "1725150",
    "end": "1731120"
  },
  {
    "text": "add support in where we shouldn't and then also you know if you're a provider developer you have some secret store you",
    "start": "1731120",
    "end": "1736310"
  },
  {
    "text": "want to integrate please you feel free to do that in the future we are planning to add more providers and we are working",
    "start": "1736310",
    "end": "1742760"
  },
  {
    "text": "with a few other few other folks to kind of add a few different cloud cloud secret stores as well and that would be",
    "start": "1742760",
    "end": "1748460"
  },
  {
    "text": "super cool and then also what Rita mentioned the pod identity for more providers so more providers currently the the Walt provider doesn't you know",
    "start": "1748460",
    "end": "1756200"
  },
  {
    "text": "it doesn't use the pod identity thing that you just saw hopefully we can add that and then also maybe an option to",
    "start": "1756200",
    "end": "1761900"
  },
  {
    "text": "sync secrets into Cuban Ares in like one-way sync or something that might be a cool feature so in terms of resources",
    "start": "1761900",
    "end": "1767810"
  },
  {
    "text": "we will be tweeting out slides after this talk so no need to take pictures it's all good the links are right there",
    "start": "1767810",
    "end": "1774200"
  },
  {
    "text": "so the secrets stored as a suicide driver it's on github here it's open source and and both the both the",
    "start": "1774200",
    "end": "1780140"
  },
  {
    "text": "providers have documentation how to install it so this is the first like five minutes experience for you it's",
    "start": "1780140",
    "end": "1785420"
  },
  {
    "text": "it's tailor-made so you can actually try it out and see see what you see what you think so you can use help charts on",
    "start": "1785420",
    "end": "1791330"
  },
  {
    "text": "Yammer files if you like and then also the active the aeg part identity project is also",
    "start": "1791330",
    "end": "1796940"
  },
  {
    "text": "open sourced and then there's also a kubernetes key value key vault flex volume I think that Drita wrote which is",
    "start": "1796940",
    "end": "1803990"
  },
  {
    "text": "also open source these might this might be a useful project for folks that are running the older kubernetes clusters which is",
    "start": "1803990",
    "end": "1810680"
  },
  {
    "text": "probably a lot of us not upgrading clusters for some reason so so pre 113 basically oh yeah pretty one one three",
    "start": "1810680",
    "end": "1817100"
  },
  {
    "text": "yeah thanks for correcting me yeah so I think that that that project will work for the azure keyboard keyboard provider",
    "start": "1817100",
    "end": "1823070"
  },
  {
    "text": "in the same way that you saw you know the kind of the ham charts work and the inline support work in this case you'll",
    "start": "1823070",
    "end": "1828830"
  },
  {
    "text": "be creating PVS and PVCs instead basically alright so thank you to coming",
    "start": "1828830",
    "end": "1833960"
  },
  {
    "text": "to this talk we will be tweeting out the slides I'd really appreciate it you have some question someone's already ready",
    "start": "1833960",
    "end": "1839000"
  },
  {
    "text": "but the question oh my god like let me just conclude like and then you know",
    "start": "1839000",
    "end": "1844540"
  },
  {
    "text": "what about key rotation like these are not actually working if we do not have",
    "start": "1844990",
    "end": "1852020"
  },
  {
    "text": "key rotation how do you tell these forums that there is a key rotation",
    "start": "1852020",
    "end": "1858550"
  },
  {
    "text": "awkward so so I don't know if it was obvious earlier when we showed the",
    "start": "1860890",
    "end": "1868030"
  },
  {
    "text": "lifetime of the secret that is mounted is only the lifetime of the pod right so",
    "start": "1868030",
    "end": "1874250"
  },
  {
    "text": "one way that you can do key rotation is by restarting the pod and we believe",
    "start": "1874250",
    "end": "1880280"
  },
  {
    "text": "that is something the the application owner should actually do because we don't want to actually control how the",
    "start": "1880280",
    "end": "1887570"
  },
  {
    "text": "the key is actually refreshed or loaded so we believe that should be something that the operator or together working",
    "start": "1887570",
    "end": "1894290"
  },
  {
    "text": "together with the application developer to decide when do we rotate the secrets or certificates TTL",
    "start": "1894290",
    "end": "1904360"
  },
  {
    "text": "yes oh that's a probably question for me yeah so yeah the wall TTL thank you so as I said right now we only support",
    "start": "1904720",
    "end": "1911120"
  },
  {
    "text": "static secrets so in the future hopefully in the next little while we'll announce like how we're gonna do like",
    "start": "1911120",
    "end": "1916549"
  },
  {
    "text": "dynamic security rotation and things like that and that's gonna be a separate kind of problem and you'll see how like",
    "start": "1916549",
    "end": "1923030"
  },
  {
    "text": "it all integrates currently there's no support for like rotating for on a specific detail if the secret expires",
    "start": "1923030",
    "end": "1928760"
  },
  {
    "text": "then you would get you know errors tube going to the upstream database or something so you might need to rotate it",
    "start": "1928760",
    "end": "1935980"
  },
  {
    "text": "and also in terms of key rotations I think we're also looking for feedback from folks in the community because we",
    "start": "1936160",
    "end": "1943160"
  },
  {
    "text": "hear both sides of the table like some people want to completely manage themselves some people want to actually",
    "start": "1943160",
    "end": "1950270"
  },
  {
    "text": "let this thing take care of everything for them so I think we need to provide a mechanism to let people do whatever they",
    "start": "1950270",
    "end": "1956929"
  },
  {
    "text": "want so definitely welcome the feedback and open issues so that we know how many people want this thing and then you",
    "start": "1956929",
    "end": "1964280"
  },
  {
    "text": "don't give it a thumbs up or something or +1 questions so it looks like your",
    "start": "1964280",
    "end": "1971179"
  },
  {
    "text": "solution only works at the volume layer and it doesn't involve the kubernetes",
    "start": "1971179",
    "end": "1977660"
  },
  {
    "text": "secrets API at all so my question is if if I want to use the kubernetes api to",
    "start": "1977660",
    "end": "1985370"
  },
  {
    "text": "create a secret and I want that secret to go into a vault how can we do that is",
    "start": "1985370",
    "end": "1991669"
  },
  {
    "text": "that for me can you take it you're wearing the hajikko shirt in this case so yeah so currently you you cannot do",
    "start": "1991669",
    "end": "1999710"
  },
  {
    "text": "that so you can you have to create those secrets involved so as I said the wall kubernetes roadmap hopefully will be",
    "start": "1999710",
    "end": "2005679"
  },
  {
    "text": "announced in the next little while here and that'll have features that are out-of-band which this project does not is not in the scope of this project so",
    "start": "2005679",
    "end": "2012040"
  },
  {
    "text": "you'll see some features that would allow you some form some feature idea I don't know yet but once it's announced",
    "start": "2012040",
    "end": "2017440"
  },
  {
    "text": "you see it's will be publicly announced and you kind of get the story of like how we how we want to go about those type of situations a good question right",
    "start": "2017440",
    "end": "2025990"
  },
  {
    "text": "and and same goes for all the others secret stores right like and you as you can see options to sync to kubernetes",
    "start": "2025990",
    "end": "2032200"
  },
  {
    "text": "secrets it's a question mark meaning we definitely hear there are some people asking for but then we don't really know if",
    "start": "2032200",
    "end": "2038750"
  },
  {
    "text": "everyone needs this like how important is it right because if you're already in crude Bernese maybe kubernetes secrets",
    "start": "2038750",
    "end": "2045080"
  },
  {
    "text": "is good enough or maybe you want to say I don't ever want my secrets to ever be in a CD at all right so in that case",
    "start": "2045080",
    "end": "2052129"
  },
  {
    "text": "this solution does just that right so it depends so please let us know if you",
    "start": "2052130",
    "end": "2057350"
  },
  {
    "text": "this is a must-have feature for you for the providers when I issue a request to",
    "start": "2057350",
    "end": "2064580"
  },
  {
    "text": "the mounted volume low does that then translate to a back-end requests on each",
    "start": "2064580",
    "end": "2069980"
  },
  {
    "text": "read or is it cached in the pod",
    "start": "2069980",
    "end": "2074020"
  },
  {
    "text": "when I reach I'm in the pod and I read the mounted volume and I get secret",
    "start": "2075860",
    "end": "2081350"
  },
  {
    "text": "right does that translate to a request to vault each time or is it cached it",
    "start": "2081350",
    "end": "2092800"
  },
  {
    "text": "how the providers implement it so yeah so I know some providers have API limits",
    "start": "2099220",
    "end": "2107650"
  },
  {
    "text": "right so it really depends currently I think the way I'm implementing it is just I I read in the loop through the",
    "start": "2107650",
    "end": "2115780"
  },
  {
    "text": "array for the secrets and the types you want and then make a request to get all",
    "start": "2115780",
    "end": "2121510"
  },
  {
    "text": "of them so it it depends on how the providers implement it",
    "start": "2121510",
    "end": "2127290"
  },
  {
    "text": "can you sorry repeat but we're actually",
    "start": "2140680",
    "end": "2147640"
  },
  {
    "text": "at a time if you have other questions please come up and ask them directly Thanks and please rate the session",
    "start": "2147640",
    "end": "2155799"
  },
  {
    "text": "option [Applause]",
    "start": "2155799",
    "end": "2160250"
  }
]