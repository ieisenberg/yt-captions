[
  {
    "text": "so hello everybody uh",
    "start": "80",
    "end": "4319"
  },
  {
    "text": "i so i hope everybody's uh interested",
    "start": "4759",
    "end": "8160"
  },
  {
    "text": "for yet another web assembly component",
    "start": "8160",
    "end": "10160"
  },
  {
    "text": "model talk",
    "start": "10160",
    "end": "13280"
  },
  {
    "text": "ah okay",
    "start": "13280",
    "end": "15560"
  },
  {
    "text": "yeah that's the",
    "start": "15560",
    "end": "17480"
  },
  {
    "text": "enthusiasm i'm a bit surprised nice so",
    "start": "17480",
    "end": "21359"
  },
  {
    "text": "um",
    "start": "21359",
    "end": "22920"
  },
  {
    "text": "today what we wanted to do is uh we want",
    "start": "22920",
    "end": "26400"
  },
  {
    "text": "to show you our journey where we wanted",
    "start": "26400",
    "end": "28320"
  },
  {
    "text": "to apply the component model to the",
    "start": "28320",
    "end": "31599"
  },
  {
    "text": "kubernetes scheduler so my name is dan",
    "start": "31599",
    "end": "34000"
  },
  {
    "text": "pchev i'm an open source engineer with",
    "start": "34000",
    "end": "36320"
  },
  {
    "text": "the g research open source team so",
    "start": "36320",
    "end": "39600"
  },
  {
    "text": "together with my colleague we'll try to",
    "start": "39600",
    "end": "41520"
  },
  {
    "text": "walk you through our journey uh through",
    "start": "41520",
    "end": "43680"
  },
  {
    "text": "the road bumps we encountered so",
    "start": "43680",
    "end": "46160"
  },
  {
    "text": "jonathan if you may yeah so hi everyone",
    "start": "46160",
    "end": "49280"
  },
  {
    "text": "i'm jonathan i also work for g research",
    "start": "49280",
    "end": "52000"
  },
  {
    "text": "in the open source team and i work on",
    "start": "52000",
    "end": "54640"
  },
  {
    "text": "all kinds of things uh that are open",
    "start": "54640",
    "end": "57280"
  },
  {
    "text": "source in pretty much any programming",
    "start": "57280",
    "end": "59520"
  },
  {
    "text": "language and always with a focus on",
    "start": "59520",
    "end": "61760"
  },
  {
    "text": "performance and",
    "start": "61760",
    "end": "63559"
  },
  {
    "text": "maintainability and so first i want to",
    "start": "63559",
    "end": "67520"
  },
  {
    "text": "do a little previously in episode one of",
    "start": "67520",
    "end": "70720"
  },
  {
    "text": "diane and yonathan jonathan go to",
    "start": "70720",
    "end": "73320"
  },
  {
    "text": "cubecon so back then we discussed the",
    "start": "73320",
    "end": "76479"
  },
  {
    "text": "magic behind the kubernetes scheduleuler",
    "start": "76479",
    "end": "78880"
  },
  {
    "text": "uh and the various ways that you can",
    "start": "78880",
    "end": "80240"
  },
  {
    "text": "extend it if if you are interested in",
    "start": "80240",
    "end": "82080"
  },
  {
    "text": "this and you missed it the last time",
    "start": "82080",
    "end": "83920"
  },
  {
    "text": "when we were in salt lake city i would",
    "start": "83920",
    "end": "85920"
  },
  {
    "text": "highly recommend you go ahead and watch",
    "start": "85920",
    "end": "87840"
  },
  {
    "text": "our talk uh but not right now obviously",
    "start": "87840",
    "end": "90960"
  },
  {
    "text": "just half an hour uh because we're not",
    "start": "90960",
    "end": "93360"
  },
  {
    "text": "going to talk about it in more details",
    "start": "93360",
    "end": "94880"
  },
  {
    "text": "now i'm just going to try you to to try",
    "start": "94880",
    "end": "97200"
  },
  {
    "text": "to give you enough context to appreciate",
    "start": "97200",
    "end": "99520"
  },
  {
    "text": "the next 25 minutes hopefully um so last",
    "start": "99520",
    "end": "104560"
  },
  {
    "text": "time we looked at the wholeuling cycle",
    "start": "104560",
    "end": "108000"
  },
  {
    "text": "and all the places where you can hook",
    "start": "108000",
    "end": "109680"
  },
  {
    "text": "your own code into it and there's as you",
    "start": "109680",
    "end": "112399"
  },
  {
    "text": "can see on that picture there's quite a",
    "start": "112399",
    "end": "113759"
  },
  {
    "text": "few and then we explore the three ways",
    "start": "113759",
    "end": "116240"
  },
  {
    "text": "that you can uh hook your code into that",
    "start": "116240",
    "end": "119840"
  },
  {
    "text": "so one of them is the schedule extenders",
    "start": "119840",
    "end": "122240"
  },
  {
    "text": "which is basically web hooks you can",
    "start": "122240",
    "end": "124560"
  },
  {
    "text": "write this in any language and it's just",
    "start": "124560",
    "end": "127040"
  },
  {
    "text": "json over http obviously you'll have a",
    "start": "127040",
    "end": "130080"
  },
  {
    "text": "fairly high latency because it goes over",
    "start": "130080",
    "end": "131760"
  },
  {
    "text": "the network and there's only just four",
    "start": "131760",
    "end": "134000"
  },
  {
    "text": "places you can extend that this is",
    "start": "134000",
    "end": "135840"
  },
  {
    "text": "basically legacy stuff",
    "start": "135840",
    "end": "139080"
  },
  {
    "text": "um the other one is theuling framework",
    "start": "139080",
    "end": "142480"
  },
  {
    "text": "plugins that is like the big boy stuff",
    "start": "142480",
    "end": "145360"
  },
  {
    "text": "where your code ends up being part of",
    "start": "145360",
    "end": "147120"
  },
  {
    "text": "the scheduleuler itself um and you have",
    "start": "147120",
    "end": "150000"
  },
  {
    "text": "to deploy a custom binary uh of the",
    "start": "150000",
    "end": "152480"
  },
  {
    "text": "scheduleuler plus your code that is",
    "start": "152480",
    "end": "154239"
  },
  {
    "text": "super efficient because you're",
    "start": "154239",
    "end": "155879"
  },
  {
    "text": "completely uh entirely native go code",
    "start": "155879",
    "end": "159040"
  },
  {
    "text": "but that's not very flexible in terms of",
    "start": "159040",
    "end": "161239"
  },
  {
    "text": "deployments and also there's more than a",
    "start": "161239",
    "end": "164080"
  },
  {
    "text": "dozen extension points basically all the",
    "start": "164080",
    "end": "165760"
  },
  {
    "text": "ones you saw in the previous slide so",
    "start": "165760",
    "end": "167760"
  },
  {
    "text": "you can really go crazy in terms of",
    "start": "167760",
    "end": "169519"
  },
  {
    "text": "implementing your own custom logic and",
    "start": "169519",
    "end": "171840"
  },
  {
    "text": "then finally we showed the wam plugins",
    "start": "171840",
    "end": "174000"
  },
  {
    "text": "uh yeah so we're going to say wam a lot",
    "start": "174000",
    "end": "176160"
  },
  {
    "text": "today um was means web assembly um so",
    "start": "176160",
    "end": "181120"
  },
  {
    "text": "who's familiar with it in the audience",
    "start": "181120",
    "end": "184159"
  },
  {
    "text": "okay cool that that's quite a few people",
    "start": "184159",
    "end": "185760"
  },
  {
    "text": "just just for the other ones very",
    "start": "185760",
    "end": "187200"
  },
  {
    "text": "briefly uh web assembly it's portable",
    "start": "187200",
    "end": "190319"
  },
  {
    "text": "across architectures you know arm intel",
    "start": "190319",
    "end": "192720"
  },
  {
    "text": "etc it is sandbox during execution and",
    "start": "192720",
    "end": "195599"
  },
  {
    "text": "you can target it from many programming",
    "start": "195599",
    "end": "197879"
  },
  {
    "text": "languages uh it's a bit like the old",
    "start": "197879",
    "end": "200480"
  },
  {
    "text": "java write once run anywhere uh except",
    "start": "200480",
    "end": "204080"
  },
  {
    "text": "that there's way more languages that you",
    "start": "204080",
    "end": "206080"
  },
  {
    "text": "can use and it is sandboxed from the",
    "start": "206080",
    "end": "209000"
  },
  {
    "text": "start so wasn't plugins let's dive",
    "start": "209000",
    "end": "212000"
  },
  {
    "text": "slightly deeper you've got your",
    "start": "212000",
    "end": "213840"
  },
  {
    "text": "kubernetes scheduleuler and this time",
    "start": "213840",
    "end": "215920"
  },
  {
    "text": "you deploy the super cool cube",
    "start": "215920",
    "end": "217599"
  },
  {
    "text": "scheduleuler wasom extension which is a",
    "start": "217599",
    "end": "219760"
  },
  {
    "text": "mouthful uh as a framework plug-in so",
    "start": "219760",
    "end": "222959"
  },
  {
    "text": "that is the second kind that we talked",
    "start": "222959",
    "end": "225519"
  },
  {
    "text": "about before uh and this one it it's",
    "start": "225519",
    "end": "228720"
  },
  {
    "text": "implementing all the possible extension",
    "start": "228720",
    "end": "230720"
  },
  {
    "text": "points and it will forward the required",
    "start": "230720",
    "end": "232959"
  },
  {
    "text": "ones to your own plug-in written in web",
    "start": "232959",
    "end": "236360"
  },
  {
    "text": "assembly it's running via wazero which",
    "start": "236360",
    "end": "239280"
  },
  {
    "text": "is the zero dependency no see go",
    "start": "239280",
    "end": "242360"
  },
  {
    "text": "grass-fed organic wom runtime um that's",
    "start": "242360",
    "end": "246959"
  },
  {
    "text": "a favorite in the go universe um so the",
    "start": "246959",
    "end": "251040"
  },
  {
    "text": "code that it's calling onto the uh is",
    "start": "251040",
    "end": "254319"
  },
  {
    "text": "onto the guest side so this is within",
    "start": "254319",
    "end": "257359"
  },
  {
    "text": "the web assembly vm and that code is",
    "start": "257359",
    "end": "260320"
  },
  {
    "text": "going to look like this so this is a",
    "start": "260320",
    "end": "263120"
  },
  {
    "text": "very very simple plug-in which is going",
    "start": "263120",
    "end": "265440"
  },
  {
    "text": "to filter the nodes on which a pot can",
    "start": "265440",
    "end": "267759"
  },
  {
    "text": "run that that's really important please",
    "start": "267759",
    "end": "269360"
  },
  {
    "text": "all you pay attention to this because",
    "start": "269360",
    "end": "271440"
  },
  {
    "text": "we'll come back to this example over and",
    "start": "271440",
    "end": "273199"
  },
  {
    "text": "over again uh it's receiving three",
    "start": "273199",
    "end": "275639"
  },
  {
    "text": "parameters just forget about the first",
    "start": "275639",
    "end": "277840"
  },
  {
    "text": "one not relevant this time uh but you",
    "start": "277840",
    "end": "280400"
  },
  {
    "text": "can see the second one is a pod which is",
    "start": "280400",
    "end": "282880"
  },
  {
    "text": "like your entire pod definition so it",
    "start": "282880",
    "end": "284720"
  },
  {
    "text": "can be pretty big and the one after is",
    "start": "284720",
    "end": "286639"
  },
  {
    "text": "node info which you can think of as just",
    "start": "286639",
    "end": "289680"
  },
  {
    "text": "your node information plus a few other",
    "start": "289680",
    "end": "292800"
  },
  {
    "text": "things uh it's making a decision based",
    "start": "292800",
    "end": "295120"
  },
  {
    "text": "on that and it's returning a status the",
    "start": "295120",
    "end": "297040"
  },
  {
    "text": "status has a code and a reason uh the",
    "start": "297040",
    "end": "300320"
  },
  {
    "text": "code is going to uh let the scheduleuler",
    "start": "300320",
    "end": "302560"
  },
  {
    "text": "know what your decision was um and uh",
    "start": "302560",
    "end": "306639"
  },
  {
    "text": "reason is just a string that is useful",
    "start": "306639",
    "end": "308960"
  },
  {
    "text": "for operators that's what's going to end",
    "start": "308960",
    "end": "310960"
  },
  {
    "text": "up in your lovely kubernetes events oh",
    "start": "310960",
    "end": "314320"
  },
  {
    "text": "and one more thing you can only write a",
    "start": "314320",
    "end": "317280"
  },
  {
    "text": "plug-in code in",
    "start": "317280",
    "end": "319240"
  },
  {
    "text": "go and not even in big go but just in",
    "start": "319240",
    "end": "322320"
  },
  {
    "text": "tiny go which is a bit of a sad trombone",
    "start": "322320",
    "end": "325120"
  },
  {
    "text": "right uh so diane what do you think we",
    "start": "325120",
    "end": "328000"
  },
  {
    "text": "should do so i mean i really like the",
    "start": "328000",
    "end": "330320"
  },
  {
    "text": "idea of",
    "start": "330320",
    "end": "331800"
  },
  {
    "text": "theuler plug-in framework and it seems",
    "start": "331800",
    "end": "335520"
  },
  {
    "text": "like a perfect candidate for web",
    "start": "335520",
    "end": "337120"
  },
  {
    "text": "assembly to allow us to write our",
    "start": "337120",
    "end": "339199"
  },
  {
    "text": "plugins in uh any po popular programming",
    "start": "339199",
    "end": "342800"
  },
  {
    "text": "language i know golang gras java",
    "start": "342800",
    "end": "345759"
  },
  {
    "text": "whatever supports it so what's the issue",
    "start": "345759",
    "end": "349280"
  },
  {
    "text": "here uh why only go so do we need to",
    "start": "349280",
    "end": "353440"
  },
  {
    "text": "write this what do we need to do so okay",
    "start": "353440",
    "end": "356840"
  },
  {
    "text": "so let's start by looking at the current",
    "start": "356840",
    "end": "359759"
  },
  {
    "text": "guest sdk and seeing what it looks like",
    "start": "359759",
    "end": "362720"
  },
  {
    "text": "uh in the wasam shell extension so we",
    "start": "362720",
    "end": "364639"
  },
  {
    "text": "understand what what we should do to",
    "start": "364639",
    "end": "366160"
  },
  {
    "text": "have those other guest sdks actually",
    "start": "366160",
    "end": "368639"
  },
  {
    "text": "we're going to take even one more step",
    "start": "368639",
    "end": "370720"
  },
  {
    "text": "back and we're going to look at the",
    "start": "370720",
    "end": "372080"
  },
  {
    "text": "place where the",
    "start": "372080",
    "end": "373400"
  },
  {
    "text": "scheduleuler is handing over to the wasm",
    "start": "373400",
    "end": "377120"
  },
  {
    "text": "extension host via the scheduleuling",
    "start": "377120",
    "end": "378880"
  },
  {
    "text": "framework so this is the filter that",
    "start": "378880",
    "end": "382400"
  },
  {
    "text": "we've seen before as you can see it's",
    "start": "382400",
    "end": "384319"
  },
  {
    "text": "taking a pod and a node info and then",
    "start": "384319",
    "end": "387520"
  },
  {
    "text": "it's doing all kinds of ceremony there",
    "start": "387520",
    "end": "390319"
  },
  {
    "text": "that's happening uh we're pushing the",
    "start": "390319",
    "end": "392639"
  },
  {
    "text": "pod and the node name to a stack and",
    "start": "392639",
    "end": "395840"
  },
  {
    "text": "actually what you don't even see here is",
    "start": "395840",
    "end": "397759"
  },
  {
    "text": "that there's a pref filter before the",
    "start": "397759",
    "end": "399600"
  },
  {
    "text": "pod is going to be serialized into",
    "start": "399600",
    "end": "401199"
  },
  {
    "text": "protobuff and put into a buffer in",
    "start": "401199",
    "end": "403199"
  },
  {
    "text": "memory that can be called later um and",
    "start": "403199",
    "end": "406479"
  },
  {
    "text": "importantly it ends up here calling into",
    "start": "406479",
    "end": "411759"
  },
  {
    "text": "another filter function that is still",
    "start": "411759",
    "end": "413759"
  },
  {
    "text": "part of the host and that one does a bit",
    "start": "413759",
    "end": "417520"
  },
  {
    "text": "more ceremony and ends up doing this",
    "start": "417520",
    "end": "419759"
  },
  {
    "text": "thing there which is basically let's",
    "start": "419759",
    "end": "421840"
  },
  {
    "text": "tell w to jump into web assembly lands",
    "start": "421840",
    "end": "426000"
  },
  {
    "text": "so jump into web assembly land we land",
    "start": "426000",
    "end": "429120"
  },
  {
    "text": "into the guest sdk so this is code that",
    "start": "429120",
    "end": "431759"
  },
  {
    "text": "the user is not writing this code if you",
    "start": "431759",
    "end": "434720"
  },
  {
    "text": "look at the function signature it's",
    "start": "434720",
    "end": "437039"
  },
  {
    "text": "taking nothing and it's returning an",
    "start": "437039",
    "end": "439720"
  },
  {
    "text": "integer and the reason why is because",
    "start": "439720",
    "end": "442400"
  },
  {
    "text": "basically in web assembly you only",
    "start": "442400",
    "end": "445280"
  },
  {
    "text": "receive pointers and integers and you",
    "start": "445280",
    "end": "447280"
  },
  {
    "text": "return just one thing um the pointers",
    "start": "447280",
    "end": "450080"
  },
  {
    "text": "and integers i'm talking about they",
    "start": "450080",
    "end": "451599"
  },
  {
    "text": "actually put on the stack so you'll need",
    "start": "451599",
    "end": "453440"
  },
  {
    "text": "to retrieve them from the stack this is",
    "start": "453440",
    "end": "455840"
  },
  {
    "text": "actually happening a bit further you see",
    "start": "455840",
    "end": "458000"
  },
  {
    "text": "this important node name this is calling",
    "start": "458000",
    "end": "461440"
  },
  {
    "text": "into another piece of code of the guest",
    "start": "461440",
    "end": "463720"
  },
  {
    "text": "sdk and there you see this mem.get",
    "start": "463720",
    "end": "466680"
  },
  {
    "text": "string this is actually doing all kinds",
    "start": "466680",
    "end": "469520"
  },
  {
    "text": "of memory shenanigans so that it can",
    "start": "469520",
    "end": "472560"
  },
  {
    "text": "call into that skate scheduleuler",
    "start": "472560",
    "end": "474479"
  },
  {
    "text": "current node name which is an exported",
    "start": "474479",
    "end": "476879"
  },
  {
    "text": "function uh sorry an imported function",
    "start": "476879",
    "end": "479120"
  },
  {
    "text": "so that's a call back into the host um",
    "start": "479120",
    "end": "482639"
  },
  {
    "text": "and that one is going to be given a",
    "start": "482639",
    "end": "486639"
  },
  {
    "text": "pointer and a limit and it's asking",
    "start": "486639",
    "end": "490080"
  },
  {
    "text": "please mr host can you put a string with",
    "start": "490080",
    "end": "493440"
  },
  {
    "text": "the current node name into this buffer",
    "start": "493440",
    "end": "495759"
  },
  {
    "text": "which is in my memory so that i can then",
    "start": "495759",
    "end": "498400"
  },
  {
    "text": "return that and you can see that there's",
    "start": "498400",
    "end": "501680"
  },
  {
    "text": "quite a few other places where it's",
    "start": "501680",
    "end": "503840"
  },
  {
    "text": "calling back into the host and doing all",
    "start": "503840",
    "end": "505919"
  },
  {
    "text": "the memory shenanigans i'm not going to",
    "start": "505919",
    "end": "507599"
  },
  {
    "text": "show you each of them you can see that",
    "start": "507599",
    "end": "509199"
  },
  {
    "text": "status to code that's the one that's",
    "start": "509199",
    "end": "511199"
  },
  {
    "text": "going to be responsible for putting that",
    "start": "511199",
    "end": "512880"
  },
  {
    "text": "reason string um into a into a buffer",
    "start": "512880",
    "end": "516959"
  },
  {
    "text": "that can then be read by the",
    "start": "516959",
    "end": "518919"
  },
  {
    "text": "host eventually we reach this filter",
    "start": "518919",
    "end": "522120"
  },
  {
    "text": "thing and this is",
    "start": "522120",
    "end": "524760"
  },
  {
    "text": "finally the code that the user can write",
    "start": "524760",
    "end": "528160"
  },
  {
    "text": "cool so",
    "start": "528160",
    "end": "529880"
  },
  {
    "text": "uh this is fine right let's just write a",
    "start": "529880",
    "end": "534399"
  },
  {
    "text": "rest sdk and a python sdk do all the",
    "start": "534399",
    "end": "537360"
  },
  {
    "text": "glue and all of that and uh yeah no no",
    "start": "537360",
    "end": "542160"
  },
  {
    "text": "one does not simply write multiple guest",
    "start": "542160",
    "end": "544680"
  },
  {
    "text": "sdks that would be just super",
    "start": "544680",
    "end": "547040"
  },
  {
    "text": "unmaintainable we would need to keep",
    "start": "547040",
    "end": "548720"
  },
  {
    "text": "them in sync all of that like surely",
    "start": "548720",
    "end": "551040"
  },
  {
    "text": "they end there must be a better way so",
    "start": "551040",
    "end": "554800"
  },
  {
    "text": "yeah actually there is so for the past",
    "start": "554800",
    "end": "557600"
  },
  {
    "text": "two cubecons uh the component model was",
    "start": "557600",
    "end": "560560"
  },
  {
    "text": "very hyped we attended a lot of talks",
    "start": "560560",
    "end": "562480"
  },
  {
    "text": "and we really were impressed with it so",
    "start": "562480",
    "end": "565680"
  },
  {
    "text": "it sound really interesting we heard",
    "start": "565680",
    "end": "568000"
  },
  {
    "text": "some really promising things like the",
    "start": "568000",
    "end": "569360"
  },
  {
    "text": "canonical api complex types so we had an",
    "start": "569360",
    "end": "572720"
  },
  {
    "text": "exciting idea uh let's bring the",
    "start": "572720",
    "end": "575839"
  },
  {
    "text": "component model to the cubeuler wasm",
    "start": "575839",
    "end": "579240"
  },
  {
    "text": "extension what does that really mean so",
    "start": "579240",
    "end": "582720"
  },
  {
    "text": "with the component model we get a",
    "start": "582720",
    "end": "584880"
  },
  {
    "text": "standardized uh language neutral way to",
    "start": "584880",
    "end": "587200"
  },
  {
    "text": "define clear interfaces and structures",
    "start": "587200",
    "end": "589600"
  },
  {
    "text": "like the ones you can see on the slides",
    "start": "589600",
    "end": "592160"
  },
  {
    "text": "uh we can describe our structures the",
    "start": "592160",
    "end": "594959"
  },
  {
    "text": "complex kubernetes structures like uh",
    "start": "594959",
    "end": "597360"
  },
  {
    "text": "for a pod for a node uh we can also",
    "start": "597360",
    "end": "601040"
  },
  {
    "text": "define uh and export our plug-in methods",
    "start": "601040",
    "end": "604959"
  },
  {
    "text": "here we opt to just for a filter for",
    "start": "604959",
    "end": "607080"
  },
  {
    "text": "simplicity",
    "start": "607080",
    "end": "609000"
  },
  {
    "text": "but this allows us so what jonathan was",
    "start": "609000",
    "end": "612240"
  },
  {
    "text": "showing and all of the complicated",
    "start": "612240",
    "end": "614240"
  },
  {
    "text": "function calls whatnot and then doing",
    "start": "614240",
    "end": "616079"
  },
  {
    "text": "this in uh any other language this will",
    "start": "616079",
    "end": "618800"
  },
  {
    "text": "ultimately allow us to autogenerate all",
    "start": "618800",
    "end": "621839"
  },
  {
    "text": "of that stuff",
    "start": "621839",
    "end": "624720"
  },
  {
    "text": "so uh first thing which i was really",
    "start": "624720",
    "end": "629040"
  },
  {
    "text": "excited about was when different",
    "start": "629040",
    "end": "631360"
  },
  {
    "text": "languages need to communicate so and",
    "start": "631360",
    "end": "633839"
  },
  {
    "text": "especially when sharing complex",
    "start": "633839",
    "end": "635399"
  },
  {
    "text": "structures one major challenge arises so",
    "start": "635399",
    "end": "638079"
  },
  {
    "text": "how do we safely pass data across",
    "start": "638079",
    "end": "640399"
  },
  {
    "text": "language boundaries without losing",
    "start": "640399",
    "end": "642399"
  },
  {
    "text": "information without risking errors or",
    "start": "642399",
    "end": "645040"
  },
  {
    "text": "adding complexity uh that's precisely",
    "start": "645040",
    "end": "647839"
  },
  {
    "text": "where the canonical api steps in uh it's",
    "start": "647839",
    "end": "650720"
  },
  {
    "text": "a standardized low-level binary",
    "start": "650720",
    "end": "652560"
  },
  {
    "text": "interface designed explicitly for the",
    "start": "652560",
    "end": "654560"
  },
  {
    "text": "component model it specifies exactly how",
    "start": "654560",
    "end": "657279"
  },
  {
    "text": "complex data types should be represented",
    "start": "657279",
    "end": "659279"
  },
  {
    "text": "how they should be ma serialized and how",
    "start": "659279",
    "end": "662399"
  },
  {
    "text": "reference should be managed so here we",
    "start": "662399",
    "end": "665760"
  },
  {
    "text": "can see uh on the host side this is in",
    "start": "665760",
    "end": "670000"
  },
  {
    "text": "rust and rust has an amazing macro",
    "start": "670000",
    "end": "672079"
  },
  {
    "text": "called bind genen where you can point it",
    "start": "672079",
    "end": "673760"
  },
  {
    "text": "to a wid and it automatic automatically",
    "start": "673760",
    "end": "676640"
  },
  {
    "text": "adds uh structures and functions into",
    "start": "676640",
    "end": "679040"
  },
  {
    "text": "scope like you see here so what we can",
    "start": "679040",
    "end": "682079"
  },
  {
    "text": "define in a wid here we can reference it",
    "start": "682079",
    "end": "684560"
  },
  {
    "text": "we can instantiate a pod instantiate a",
    "start": "684560",
    "end": "686480"
  },
  {
    "text": "node we can call the filter uh we can",
    "start": "686480",
    "end": "689600"
  },
  {
    "text": "pass the complex structure so that's a",
    "start": "689600",
    "end": "692160"
  },
  {
    "text": "lot nicer than what we had before and",
    "start": "692160",
    "end": "695279"
  },
  {
    "text": "also what we can do for the guest sdk or",
    "start": "695279",
    "end": "699120"
  },
  {
    "text": "for the plug-in developers we can",
    "start": "699120",
    "end": "701040"
  },
  {
    "text": "automatically generate bindings uh",
    "start": "701040",
    "end": "703519"
  },
  {
    "text": "generate automatically all of the glue",
    "start": "703519",
    "end": "705680"
  },
  {
    "text": "and then a developer would just focus on",
    "start": "705680",
    "end": "708320"
  },
  {
    "text": "writing the actual logic",
    "start": "708320",
    "end": "711519"
  },
  {
    "text": "so why generated bindings are important",
    "start": "712440",
    "end": "715760"
  },
  {
    "text": "so if you ever tried manually creating",
    "start": "715760",
    "end": "717839"
  },
  {
    "text": "language bindings you i guess you know",
    "start": "717839",
    "end": "720240"
  },
  {
    "text": "the pain it's tedious it's errorprone",
    "start": "720240",
    "end": "723200"
  },
  {
    "text": "and uh most importantly it's not",
    "start": "723200",
    "end": "725720"
  },
  {
    "text": "maintainable because if we did write a",
    "start": "725720",
    "end": "728880"
  },
  {
    "text": "go sdk uh rust sdk python sdk who will",
    "start": "728880",
    "end": "733040"
  },
  {
    "text": "maintain that it will just battle with",
    "start": "733040",
    "end": "735440"
  },
  {
    "text": "incompatible versions uh some will be",
    "start": "735440",
    "end": "738160"
  },
  {
    "text": "better maintained some not the component",
    "start": "738160",
    "end": "740639"
  },
  {
    "text": "model uh makes this problem practically",
    "start": "740639",
    "end": "743639"
  },
  {
    "text": "disappear so thanks to the standardized",
    "start": "743639",
    "end": "746399"
  },
  {
    "text": "interfaces the canonical api we can",
    "start": "746399",
    "end": "748880"
  },
  {
    "text": "generate all of that so what jonathan",
    "start": "748880",
    "end": "751200"
  },
  {
    "text": "showed you pretty much we can just",
    "start": "751200",
    "end": "753600"
  },
  {
    "text": "generate",
    "start": "753600",
    "end": "755720"
  },
  {
    "text": "it so pretty much yeah like uh",
    "start": "755720",
    "end": "760160"
  },
  {
    "text": "like the meme shows you get a binding",
    "start": "760160",
    "end": "762720"
  },
  {
    "text": "you get everybody gets a binding that",
    "start": "762720",
    "end": "765279"
  },
  {
    "text": "that is just like that that just sounds",
    "start": "765279",
    "end": "767279"
  },
  {
    "text": "awesome so let's go refactor the project",
    "start": "767279",
    "end": "770320"
  },
  {
    "text": "and just like use the component model uh",
    "start": "770320",
    "end": "773279"
  },
  {
    "text": "yes that was the plan but well the re",
    "start": "773279",
    "end": "778320"
  },
  {
    "text": "reality hit us hard so we were hyped we",
    "start": "778320",
    "end": "781279"
  },
  {
    "text": "thought component model will uh save us",
    "start": "781279",
    "end": "783920"
  },
  {
    "text": "from all of the troubles we just go",
    "start": "783920",
    "end": "786639"
  },
  {
    "text": "refactor and everything is perfect",
    "start": "786639",
    "end": "789959"
  },
  {
    "text": "but first thing which we started was",
    "start": "789959",
    "end": "792959"
  },
  {
    "text": "okay we need to define our width and uh",
    "start": "792959",
    "end": "795519"
  },
  {
    "text": "we were like okay what now do i need to",
    "start": "795519",
    "end": "799200"
  },
  {
    "text": "rewrite uh in the width do you need to",
    "start": "799200",
    "end": "801600"
  },
  {
    "text": "rewrite the kubernetes structures so",
    "start": "801600",
    "end": "803519"
  },
  {
    "text": "here's an actual uh pod spec that's a",
    "start": "803519",
    "end": "807040"
  },
  {
    "text": "small one even do i need to rewrite this",
    "start": "807040",
    "end": "809600"
  },
  {
    "text": "in the width do you need to do the same",
    "start": "809600",
    "end": "811200"
  },
  {
    "text": "for the node so we're like nobody would",
    "start": "811200",
    "end": "815440"
  },
  {
    "text": "do this so that's not maintainable i",
    "start": "815440",
    "end": "818880"
  },
  {
    "text": "let's see is there any wid generator",
    "start": "818880",
    "end": "821279"
  },
  {
    "text": "something like can we generate wit from",
    "start": "821279",
    "end": "824839"
  },
  {
    "text": "proto sadly uh we cannot uh we're like",
    "start": "824839",
    "end": "829200"
  },
  {
    "text": "okay is there something for open api we",
    "start": "829200",
    "end": "832399"
  },
  {
    "text": "found some project but we didn't have",
    "start": "832399",
    "end": "834639"
  },
  {
    "text": "any luck with it so open api to bit was",
    "start": "834639",
    "end": "838160"
  },
  {
    "text": "a no-go we were hoping like let's ghost",
    "start": "838160",
    "end": "842320"
  },
  {
    "text": "tracks but sadly ghost tracks to bit was",
    "start": "842320",
    "end": "845199"
  },
  {
    "text": "also a no-go and uh yeah that was our",
    "start": "845199",
    "end": "849040"
  },
  {
    "text": "first road bump uh well we need to reuse",
    "start": "849040",
    "end": "852560"
  },
  {
    "text": "external types i mean for any",
    "start": "852560",
    "end": "854240"
  },
  {
    "text": "integration we cannot just uh write by",
    "start": "854240",
    "end": "857600"
  },
  {
    "text": "hand uh manually into it so nonetheless",
    "start": "857600",
    "end": "862079"
  },
  {
    "text": "we're like we want to try to make it",
    "start": "862079",
    "end": "864360"
  },
  {
    "text": "work what's the next thing so uh now we",
    "start": "864360",
    "end": "868000"
  },
  {
    "text": "needed to run our filter component in a",
    "start": "868000",
    "end": "870240"
  },
  {
    "text": "go host why a go host well the",
    "start": "870240",
    "end": "872240"
  },
  {
    "text": "kubernetes plug-in framework is written",
    "start": "872240",
    "end": "874240"
  },
  {
    "text": "in go theuler wasm extension we've been",
    "start": "874240",
    "end": "877120"
  },
  {
    "text": "working on also in go uh it uses zero as",
    "start": "877120",
    "end": "881440"
  },
  {
    "text": "a runtime so picking was zero was our",
    "start": "881440",
    "end": "884720"
  },
  {
    "text": "logical",
    "start": "884720",
    "end": "885959"
  },
  {
    "text": "choice soon we realized well we cannot",
    "start": "885959",
    "end": "889680"
  },
  {
    "text": "run components in zero we searched for",
    "start": "889680",
    "end": "893519"
  },
  {
    "text": "uh the github issues there was a one",
    "start": "893519",
    "end": "895760"
  },
  {
    "text": "about plans to support the component the",
    "start": "895760",
    "end": "898000"
  },
  {
    "text": "general sentiment was uh currently they",
    "start": "898000",
    "end": "902399"
  },
  {
    "text": "don't they aren't planning until some",
    "start": "902399",
    "end": "905279"
  },
  {
    "text": "prerequisites are met we're like okay",
    "start": "905279",
    "end": "908160"
  },
  {
    "text": "what are other options wasn't time go we",
    "start": "908160",
    "end": "912000"
  },
  {
    "text": "tried it you can see uh wasn't time go",
    "start": "912000",
    "end": "915680"
  },
  {
    "text": "still isn't ready it's missing a couple",
    "start": "915680",
    "end": "917920"
  },
  {
    "text": "of things they're being worked on but",
    "start": "917920",
    "end": "919920"
  },
  {
    "text": "that left us in a bit of a pickle so we",
    "start": "919920",
    "end": "923199"
  },
  {
    "text": "don't have a go",
    "start": "923199",
    "end": "926040"
  },
  {
    "text": "runtime we could hack it we could use",
    "start": "926040",
    "end": "928959"
  },
  {
    "text": "rust uh and theuler extender to make it",
    "start": "928959",
    "end": "931600"
  },
  {
    "text": "work but that's not really what we",
    "start": "931600",
    "end": "933839"
  },
  {
    "text": "wanted to do so uh jonathan on your part",
    "start": "933839",
    "end": "938320"
  },
  {
    "text": "was it a smooth sale or nah so the first",
    "start": "938320",
    "end": "942639"
  },
  {
    "text": "thing i did is try to look at",
    "start": "942639",
    "end": "944000"
  },
  {
    "text": "alternatives and actually there is a",
    "start": "944000",
    "end": "947040"
  },
  {
    "text": "really good alternative there's the top",
    "start": "947040",
    "end": "949040"
  },
  {
    "text": "contender of the alternative that's xism",
    "start": "949040",
    "end": "951920"
  },
  {
    "text": "which has a an interesting logo uh xm",
    "start": "951920",
    "end": "956560"
  },
  {
    "text": "supports many hosts and guest languages",
    "start": "956560",
    "end": "958959"
  },
  {
    "text": "one of the host languages in is go using",
    "start": "958959",
    "end": "961600"
  },
  {
    "text": "one zero so happy days that's good and",
    "start": "961600",
    "end": "964880"
  },
  {
    "text": "uh in terms of guest sdks as they call",
    "start": "964880",
    "end": "966959"
  },
  {
    "text": "their or as they call them the pdks for",
    "start": "966959",
    "end": "969519"
  },
  {
    "text": "plug-in development kits uh you can see",
    "start": "969519",
    "end": "972160"
  },
  {
    "text": "it supports rust and javascript and",
    "start": "972160",
    "end": "974880"
  },
  {
    "text": "python and c and go and many more",
    "start": "974880",
    "end": "978880"
  },
  {
    "text": "actually so so how do you use it so you",
    "start": "978880",
    "end": "983040"
  },
  {
    "text": "do a little bit of of ceremony again to",
    "start": "983040",
    "end": "985199"
  },
  {
    "text": "just load your was a module and then you",
    "start": "985199",
    "end": "987199"
  },
  {
    "text": "end up using this plug-in call function",
    "start": "987199",
    "end": "990160"
  },
  {
    "text": "uh just give it your function name um",
    "start": "990160",
    "end": "992720"
  },
  {
    "text": "and a single input in this case it's",
    "start": "992720",
    "end": "995240"
  },
  {
    "text": "bytes and it's giving you back an exit",
    "start": "995240",
    "end": "998079"
  },
  {
    "text": "code a single output which is again",
    "start": "998079",
    "end": "999759"
  },
  {
    "text": "bytes and a go error so let's look at",
    "start": "999759",
    "end": "1001920"
  },
  {
    "text": "the guest side in this case i chose rust",
    "start": "1001920",
    "end": "1004720"
  },
  {
    "text": "but as i said like it works with many",
    "start": "1004720",
    "end": "1006959"
  },
  {
    "text": "programming languages uh this is using",
    "start": "1006959",
    "end": "1008880"
  },
  {
    "text": "the pdk it's got that nice plug-in fn",
    "start": "1008880",
    "end": "1011440"
  },
  {
    "text": "macro and so you end up just having",
    "start": "1011440",
    "end": "1014079"
  },
  {
    "text": "getting inputs bytes in bytes out pretty",
    "start": "1014079",
    "end": "1018320"
  },
  {
    "text": "cool uh we can probably do something",
    "start": "1018320",
    "end": "1021120"
  },
  {
    "text": "better so you can use it with strings as",
    "start": "1021120",
    "end": "1024000"
  },
  {
    "text": "well in the case of the go host you need",
    "start": "1024000",
    "end": "1026880"
  },
  {
    "text": "to convert but on the guest side it's",
    "start": "1026880",
    "end": "1030880"
  },
  {
    "text": "again it's pretty neat see function",
    "start": "1030880",
    "end": "1032959"
  },
  {
    "text": "signature just getting string as an",
    "start": "1032959",
    "end": "1034880"
  },
  {
    "text": "input string as an output again happy",
    "start": "1034880",
    "end": "1037678"
  },
  {
    "text": "days um where it gets even more",
    "start": "1037679",
    "end": "1040160"
  },
  {
    "text": "interesting is that you can also use",
    "start": "1040160",
    "end": "1041760"
  },
  {
    "text": "json to pass things around so let's just",
    "start": "1041760",
    "end": "1044558"
  },
  {
    "text": "say that we define a json schema like",
    "start": "1044559",
    "end": "1046400"
  },
  {
    "text": "this one so we take the existing",
    "start": "1046400",
    "end": "1049679"
  },
  {
    "text": "kubernetes json schema and then we add",
    "start": "1049679",
    "end": "1052240"
  },
  {
    "text": "or filter inputs the reason why there's",
    "start": "1052240",
    "end": "1054640"
  },
  {
    "text": "a filter input object here is because",
    "start": "1054640",
    "end": "1056559"
  },
  {
    "text": "you can only have one input uh that's",
    "start": "1056559",
    "end": "1059200"
  },
  {
    "text": "one of the requirements of xism and uh",
    "start": "1059200",
    "end": "1061919"
  },
  {
    "text": "you see my filter input has a pod and a",
    "start": "1061919",
    "end": "1064480"
  },
  {
    "text": "node info that's again the same thing",
    "start": "1064480",
    "end": "1066240"
  },
  {
    "text": "for the filter that we've seen on the go",
    "start": "1066240",
    "end": "1068559"
  },
  {
    "text": "side it looks like this so you've got a",
    "start": "1068559",
    "end": "1071600"
  },
  {
    "text": "filter input at the top the strruct you",
    "start": "1071600",
    "end": "1073360"
  },
  {
    "text": "could have that autogenerated there's",
    "start": "1073360",
    "end": "1074799"
  },
  {
    "text": "many projects like quick type that can",
    "start": "1074799",
    "end": "1076480"
  },
  {
    "text": "take a json schema and just generate it",
    "start": "1076480",
    "end": "1078320"
  },
  {
    "text": "for you you can even generate a json",
    "start": "1078320",
    "end": "1080160"
  },
  {
    "text": "schema from gostruct so all that is fine",
    "start": "1080160",
    "end": "1083679"
  },
  {
    "text": "um you just initialize it you you have",
    "start": "1083679",
    "end": "1087360"
  },
  {
    "text": "this uh json marshalling and marshalling",
    "start": "1087360",
    "end": "1089760"
  },
  {
    "text": "of the input and the output that are",
    "start": "1089760",
    "end": "1091440"
  },
  {
    "text": "around the function call that's a bit",
    "start": "1091440",
    "end": "1093840"
  },
  {
    "text": "unwieldy uh that's a bit of ceremony but",
    "start": "1093840",
    "end": "1096480"
  },
  {
    "text": "it's fine that's the host path like",
    "start": "1096480",
    "end": "1098400"
  },
  {
    "text": "that's not what the users need to look",
    "start": "1098400",
    "end": "1099919"
  },
  {
    "text": "like and we only need to write that once",
    "start": "1099919",
    "end": "1101919"
  },
  {
    "text": "on the guest side it's actually super",
    "start": "1101919",
    "end": "1104000"
  },
  {
    "text": "neat because xism provides the plumbing",
    "start": "1104000",
    "end": "1107039"
  },
  {
    "text": "so that we can receive a nice native",
    "start": "1107039",
    "end": "1109520"
  },
  {
    "text": "complex type and return another one what",
    "start": "1109520",
    "end": "1111919"
  },
  {
    "text": "i didn't say right before so when i",
    "start": "1111919",
    "end": "1114080"
  },
  {
    "text": "showed the bytes example um is that it's",
    "start": "1114080",
    "end": "1117600"
  },
  {
    "text": "doing all the memory shenanigans that we",
    "start": "1117600",
    "end": "1119360"
  },
  {
    "text": "saw before like it's not magic it has",
    "start": "1119360",
    "end": "1121120"
  },
  {
    "text": "all that glue code it's just that they",
    "start": "1121120",
    "end": "1122720"
  },
  {
    "text": "wrote it for all the guest sdks for",
    "start": "1122720",
    "end": "1125320"
  },
  {
    "text": "us okay so uh what can we do if we care",
    "start": "1125320",
    "end": "1129840"
  },
  {
    "text": "about performance well we could use",
    "start": "1129840",
    "end": "1132360"
  },
  {
    "text": "proto so this is a proto where i'm",
    "start": "1132360",
    "end": "1136240"
  },
  {
    "text": "referencing the other uh uh official",
    "start": "1136240",
    "end": "1139600"
  },
  {
    "text": "kubernetes proto packages and i'm",
    "start": "1139600",
    "end": "1141840"
  },
  {
    "text": "defining my filter input again which is",
    "start": "1141840",
    "end": "1144080"
  },
  {
    "text": "a pod and a node info blah blah blah so",
    "start": "1144080",
    "end": "1147200"
  },
  {
    "text": "what does it look like on the host side",
    "start": "1147200",
    "end": "1149200"
  },
  {
    "text": "it's very similar to what we've just",
    "start": "1149200",
    "end": "1150480"
  },
  {
    "text": "seen with json because on the go host",
    "start": "1150480",
    "end": "1152240"
  },
  {
    "text": "side you need to do all of those things",
    "start": "1152240",
    "end": "1153679"
  },
  {
    "text": "yourself i'm using vt proto which is",
    "start": "1153679",
    "end": "1156320"
  },
  {
    "text": "much faster than regular proto marshall",
    "start": "1156320",
    "end": "1159280"
  },
  {
    "text": "and unmarshall round and then on the",
    "start": "1159280",
    "end": "1161840"
  },
  {
    "text": "guest side well that's a bit of a let",
    "start": "1161840",
    "end": "1163840"
  },
  {
    "text": "down uh we don't have all the fantastic",
    "start": "1163840",
    "end": "1166880"
  },
  {
    "text": "uh stuff being done for us yet so i'm",
    "start": "1166880",
    "end": "1169840"
  },
  {
    "text": "just taking bites if you see that filter",
    "start": "1169840",
    "end": "1172000"
  },
  {
    "text": "function at the top i'm doing a bit of",
    "start": "1172000",
    "end": "1174160"
  },
  {
    "text": "ceremony so that i end up uh",
    "start": "1174160",
    "end": "1177200"
  },
  {
    "text": "unmarshalling and marshalling and",
    "start": "1177200",
    "end": "1179120"
  },
  {
    "text": "calling the real filter implementation",
    "start": "1179120",
    "end": "1181520"
  },
  {
    "text": "which again looks pretty neat so that's",
    "start": "1181520",
    "end": "1183919"
  },
  {
    "text": "not too terrible but it's a compromise",
    "start": "1183919",
    "end": "1186160"
  },
  {
    "text": "between you want you want performance",
    "start": "1186160",
    "end": "1189200"
  },
  {
    "text": "you want ease of generation of guest",
    "start": "1189200",
    "end": "1191799"
  },
  {
    "text": "sdks um briefly some runner-ups in terms",
    "start": "1191799",
    "end": "1196000"
  },
  {
    "text": "of alternatives we tried there's xtp",
    "start": "1196000",
    "end": "1197919"
  },
  {
    "text": "binden which is from the same people",
    "start": "1197919",
    "end": "1199520"
  },
  {
    "text": "that made xism it's built on top of",
    "start": "1199520",
    "end": "1202280"
  },
  {
    "text": "xtism it's uh it's quite interesting",
    "start": "1202280",
    "end": "1205120"
  },
  {
    "text": "because it defines a schema that looks a",
    "start": "1205120",
    "end": "1207919"
  },
  {
    "text": "lot like open api so the cool thing is",
    "start": "1207919",
    "end": "1210400"
  },
  {
    "text": "that you see again in component schemas",
    "start": "1210400",
    "end": "1212720"
  },
  {
    "text": "i've got my filter input once again so",
    "start": "1212720",
    "end": "1215440"
  },
  {
    "text": "this is just this is yaml but basically",
    "start": "1215440",
    "end": "1218640"
  },
  {
    "text": "it's again a json schema definition and",
    "start": "1218640",
    "end": "1221200"
  },
  {
    "text": "what you see above is exports so there",
    "start": "1221200",
    "end": "1223360"
  },
  {
    "text": "you can you can actually define the",
    "start": "1223360",
    "end": "1226000"
  },
  {
    "text": "signature of your functions and then",
    "start": "1226000",
    "end": "1228159"
  },
  {
    "text": "it's going to take this and it's going",
    "start": "1228159",
    "end": "1229919"
  },
  {
    "text": "to generate even more of the glue code",
    "start": "1229919",
    "end": "1232000"
  },
  {
    "text": "for you so it's going to already",
    "start": "1232000",
    "end": "1233360"
  },
  {
    "text": "generate the function signatures and all",
    "start": "1233360",
    "end": "1235039"
  },
  {
    "text": "of that that sounds pretty cool i've",
    "start": "1235039",
    "end": "1237200"
  },
  {
    "text": "tried to just convert the kubernetes",
    "start": "1237200",
    "end": "1239760"
  },
  {
    "text": "open api schema to this and then i ran",
    "start": "1239760",
    "end": "1243440"
  },
  {
    "text": "the xtp command line thing which is",
    "start": "1243440",
    "end": "1246360"
  },
  {
    "text": "proprietary and calls into some open",
    "start": "1246360",
    "end": "1249120"
  },
  {
    "text": "source bits and it just didn't work it",
    "start": "1249120",
    "end": "1252919"
  },
  {
    "text": "crashed so yeah that's sad uh it",
    "start": "1252919",
    "end": "1257919"
  },
  {
    "text": "probably can be fixed uh another quick",
    "start": "1257919",
    "end": "1260880"
  },
  {
    "text": "mention uh this go plugin thing that's",
    "start": "1260880",
    "end": "1263520"
  },
  {
    "text": "not the hashikob go plugin it's another",
    "start": "1263520",
    "end": "1265200"
  },
  {
    "text": "one i cannot pronounce this uh it's",
    "start": "1265200",
    "end": "1268799"
  },
  {
    "text": "doing all the stuff with vd proto and",
    "start": "1268799",
    "end": "1271280"
  },
  {
    "text": "all of the memory pointer passing and",
    "start": "1271280",
    "end": "1273280"
  },
  {
    "text": "all of that it has a go sdk",
    "start": "1273280",
    "end": "1276559"
  },
  {
    "text": "um for the host",
    "start": "1276559",
    "end": "1278600"
  },
  {
    "text": "and only a guest sdk in go so we're",
    "start": "1278600",
    "end": "1283280"
  },
  {
    "text": "again back at square",
    "start": "1283280",
    "end": "1285000"
  },
  {
    "text": "one but there's a new hope there's a new",
    "start": "1285000",
    "end": "1289600"
  },
  {
    "text": "project that was released in january",
    "start": "1289600",
    "end": "1291280"
  },
  {
    "text": "called",
    "start": "1291280",
    "end": "1291960"
  },
  {
    "text": "gravity and gravity is very very early",
    "start": "1291960",
    "end": "1296480"
  },
  {
    "text": "at the moment but it's essentially a",
    "start": "1296480",
    "end": "1298159"
  },
  {
    "text": "transpiler so it is trying to build on",
    "start": "1298159",
    "end": "1300720"
  },
  {
    "text": "top of wazi to implement the component",
    "start": "1300720",
    "end": "1303760"
  },
  {
    "text": "model at the moment it is still super",
    "start": "1303760",
    "end": "1306880"
  },
  {
    "text": "super early these are the only types",
    "start": "1306880",
    "end": "1308960"
  },
  {
    "text": "that they support that basically does",
    "start": "1308960",
    "end": "1311280"
  },
  {
    "text": "not allow us to have all the complex",
    "start": "1311280",
    "end": "1313039"
  },
  {
    "text": "types that we wanted to have also we",
    "start": "1313039",
    "end": "1314880"
  },
  {
    "text": "still have the lack of protogeneration",
    "start": "1314880",
    "end": "1316760"
  },
  {
    "text": "but it's really going in the right",
    "start": "1316760",
    "end": "1319200"
  },
  {
    "text": "direction and i've basically tried a",
    "start": "1319200",
    "end": "1322559"
  },
  {
    "text": "couple of benchmarks i'm going to go i'm",
    "start": "1322559",
    "end": "1324480"
  },
  {
    "text": "going to go very briefly about this uh",
    "start": "1324480",
    "end": "1326799"
  },
  {
    "text": "so there's a lot of stuff start from the",
    "start": "1326799",
    "end": "1329080"
  },
  {
    "text": "left this is a go host using exism with",
    "start": "1329080",
    "end": "1332640"
  },
  {
    "text": "the json method and then running various",
    "start": "1332640",
    "end": "1335360"
  },
  {
    "text": "uh guest sdks uh you see they're all",
    "start": "1335360",
    "end": "1338320"
  },
  {
    "text": "about in the same ballpark then skip the",
    "start": "1338320",
    "end": "1341440"
  },
  {
    "text": "second one for now go to the third one",
    "start": "1341440",
    "end": "1343520"
  },
  {
    "text": "this is when using vt proto so obviously",
    "start": "1343520",
    "end": "1345919"
  },
  {
    "text": "this is faster than with json and just",
    "start": "1345919",
    "end": "1348159"
  },
  {
    "text": "as points of comparison i've tried to",
    "start": "1348159",
    "end": "1350400"
  },
  {
    "text": "use gravity with a gohost and with using",
    "start": "1350400",
    "end": "1353440"
  },
  {
    "text": "json so i'm just using their string",
    "start": "1353440",
    "end": "1355919"
  },
  {
    "text": "types so there isn't the advantage of",
    "start": "1355919",
    "end": "1358159"
  },
  {
    "text": "having the the entire um richness of the",
    "start": "1358159",
    "end": "1362159"
  },
  {
    "text": "component model but if you look at the",
    "start": "1362159",
    "end": "1364559"
  },
  {
    "text": "green bar over there on the f the first",
    "start": "1364559",
    "end": "1366559"
  },
  {
    "text": "green bar and that fourth green bar you",
    "start": "1366559",
    "end": "1369440"
  },
  {
    "text": "can see that it's just for sending a",
    "start": "1369440",
    "end": "1372320"
  },
  {
    "text": "string even just for that it's already a",
    "start": "1372320",
    "end": "1374400"
  },
  {
    "text": "little bit faster uh i'm not sure why",
    "start": "1374400",
    "end": "1377200"
  },
  {
    "text": "but it's going again in the right",
    "start": "1377200",
    "end": "1379039"
  },
  {
    "text": "direction and then we've also",
    "start": "1379039",
    "end": "1380799"
  },
  {
    "text": "implemented uh a host in rust that is",
    "start": "1380799",
    "end": "1385440"
  },
  {
    "text": "using wit with just a super small subset",
    "start": "1385440",
    "end": "1389120"
  },
  {
    "text": "so it's not exactly an applesto apples",
    "start": "1389120",
    "end": "1391120"
  },
  {
    "text": "comparison but if you look there at the",
    "start": "1391120",
    "end": "1393919"
  },
  {
    "text": "gray bar this is a tiny go guest that is",
    "start": "1393919",
    "end": "1398080"
  },
  {
    "text": "running or plugin or i should have said",
    "start": "1398080",
    "end": "1399840"
  },
  {
    "text": "that but it's basically doing a little",
    "start": "1399840",
    "end": "1401200"
  },
  {
    "text": "bit of reg x filtering it's a filter",
    "start": "1401200",
    "end": "1403200"
  },
  {
    "text": "plug-in that is reading an annotation",
    "start": "1403200",
    "end": "1405440"
  },
  {
    "text": "from the pod def from the from the pod",
    "start": "1405440",
    "end": "1408159"
  },
  {
    "text": "and if it finds a reg x it will compile",
    "start": "1408159",
    "end": "1410400"
  },
  {
    "text": "it it will apply to the node name and",
    "start": "1410400",
    "end": "1412320"
  },
  {
    "text": "based on that it will filter yes or no",
    "start": "1412320",
    "end": "1414720"
  },
  {
    "text": "uh so a tiny bit of logic the tiny go",
    "start": "1414720",
    "end": "1417440"
  },
  {
    "text": "the tiny go one uh the gray one that is",
    "start": "1417440",
    "end": "1420640"
  },
  {
    "text": "running with the component model that is",
    "start": "1420640",
    "end": "1423039"
  },
  {
    "text": "running with wasm time and you can",
    "start": "1423039",
    "end": "1425360"
  },
  {
    "text": "compare it to the second gray bar which",
    "start": "1425360",
    "end": "1428240"
  },
  {
    "text": "was the same piece of code but using",
    "start": "1428240",
    "end": "1431120"
  },
  {
    "text": "json in was time and you can see that",
    "start": "1431120",
    "end": "1433919"
  },
  {
    "text": "this gets gets us a lot faster and then",
    "start": "1433919",
    "end": "1437600"
  },
  {
    "text": "finally just for comparison because some",
    "start": "1437600",
    "end": "1439440"
  },
  {
    "text": "people are like why are you doing all of",
    "start": "1439440",
    "end": "1440880"
  },
  {
    "text": "this stuff like why are you using wom",
    "start": "1440880",
    "end": "1442640"
  },
  {
    "text": "just just call into a shared library or",
    "start": "1442640",
    "end": "1444320"
  },
  {
    "text": "do something like that uh it's not free",
    "start": "1444320",
    "end": "1446880"
  },
  {
    "text": "uh you will end up with the exact same",
    "start": "1446880",
    "end": "1449919"
  },
  {
    "text": "problems of having pointers and all of",
    "start": "1449919",
    "end": "1452159"
  },
  {
    "text": "those things so you will end up also",
    "start": "1452159",
    "end": "1454320"
  },
  {
    "text": "either having to share your memory which",
    "start": "1454320",
    "end": "1456159"
  },
  {
    "text": "is super dangerous like we're writing",
    "start": "1456159",
    "end": "1458000"
  },
  {
    "text": "stuff in go we want safe memory we don't",
    "start": "1458000",
    "end": "1460880"
  },
  {
    "text": "want to just hand it over to some c",
    "start": "1460880",
    "end": "1462640"
  },
  {
    "text": "library and then just crash um",
    "start": "1462640",
    "end": "1467559"
  },
  {
    "text": "and i forgot my train of thought",
    "start": "1467559",
    "end": "1471279"
  },
  {
    "text": "uh the point is this is json",
    "start": "1471279",
    "end": "1473840"
  },
  {
    "text": "serialization in a go host calling via",
    "start": "1473840",
    "end": "1476480"
  },
  {
    "text": "cgo a library a shared library written",
    "start": "1476480",
    "end": "1480000"
  },
  {
    "text": "in go as well and you can see the",
    "start": "1480000",
    "end": "1482080"
  },
  {
    "text": "performance there is in the same",
    "start": "1482080",
    "end": "1483760"
  },
  {
    "text": "ballpark as what we would get with wit",
    "start": "1483760",
    "end": "1487960"
  },
  {
    "text": "u and",
    "start": "1487960",
    "end": "1491640"
  },
  {
    "text": "now what what are we what are we asking",
    "start": "1491640",
    "end": "1494799"
  },
  {
    "text": "our audience so um as we heard in a",
    "start": "1494799",
    "end": "1499200"
  },
  {
    "text": "previous talk um issue with p1 is uh",
    "start": "1499200",
    "end": "1502400"
  },
  {
    "text": "everybody does its own thing um",
    "start": "1502400",
    "end": "1504720"
  },
  {
    "text": "component model is an amazing idea",
    "start": "1504720",
    "end": "1507120"
  },
  {
    "text": "component model standardizes a lot",
    "start": "1507120",
    "end": "1509360"
  },
  {
    "text": "component model can make things so much",
    "start": "1509360",
    "end": "1512000"
  },
  {
    "text": "better but it's still in its early",
    "start": "1512000",
    "end": "1513760"
  },
  {
    "text": "stages so we want to do a call out to",
    "start": "1513760",
    "end": "1517360"
  },
  {
    "text": "all contributors so we uh the tooling",
    "start": "1517360",
    "end": "1520240"
  },
  {
    "text": "lacks a couple of things so the wid",
    "start": "1520240",
    "end": "1522240"
  },
  {
    "text": "generators protot",
    "start": "1522240",
    "end": "1525880"
  },
  {
    "text": "um that's uh something uh for go uh",
    "start": "1527200",
    "end": "1531600"
  },
  {
    "text": "let's decide what we want to do with go",
    "start": "1531600",
    "end": "1533840"
  },
  {
    "text": "runtimes uh will was zero support it",
    "start": "1533840",
    "end": "1536640"
  },
  {
    "text": "will wasn't time go support it so uh i",
    "start": "1536640",
    "end": "1540480"
  },
  {
    "text": "think this should be a joint effort so",
    "start": "1540480",
    "end": "1543039"
  },
  {
    "text": "whoever is interested we urge everybody",
    "start": "1543039",
    "end": "1545919"
  },
  {
    "text": "to get uh involved to contribute to",
    "start": "1545919",
    "end": "1548799"
  },
  {
    "text": "discuss to join working groups",
    "start": "1548799",
    "end": "1551880"
  },
  {
    "text": "and also we'd like to do a shout out to",
    "start": "1551880",
    "end": "1555279"
  },
  {
    "text": "all of the maintainers to the was",
    "start": "1555279",
    "end": "1557600"
  },
  {
    "text": "runtime technical advisory group to",
    "start": "1557600",
    "end": "1559440"
  },
  {
    "text": "everybody who's involved in this project",
    "start": "1559440",
    "end": "1561760"
  },
  {
    "text": "the community uh the authors of the the",
    "start": "1561760",
    "end": "1565120"
  },
  {
    "text": "component model so you all did an",
    "start": "1565120",
    "end": "1567520"
  },
  {
    "text": "amazing job and uh it leaves us and one",
    "start": "1567520",
    "end": "1571760"
  },
  {
    "text": "more thing which is that the component",
    "start": "1571760",
    "end": "1574559"
  },
  {
    "text": "model really is the way we are quite",
    "start": "1574559",
    "end": "1576640"
  },
  {
    "text": "convinced about it and if we just like",
    "start": "1576640",
    "end": "1579039"
  },
  {
    "text": "all pull together and we make it happen",
    "start": "1579039",
    "end": "1581120"
  },
  {
    "text": "in go this use case that we've shown is",
    "start": "1581120",
    "end": "1584320"
  },
  {
    "text": "just one use case amongst many other use",
    "start": "1584320",
    "end": "1587039"
  },
  {
    "text": "cases in the whole cncf landscape we've",
    "start": "1587039",
    "end": "1588960"
  },
  {
    "text": "got we've got go everywhere what if we",
    "start": "1588960",
    "end": "1591200"
  },
  {
    "text": "could just extend it and not have to do",
    "start": "1591200",
    "end": "1594000"
  },
  {
    "text": "that glue over and over and over again",
    "start": "1594000",
    "end": "1596720"
  },
  {
    "text": "in each project we just do that once and",
    "start": "1596720",
    "end": "1600000"
  },
  {
    "text": "then we will all benefit from",
    "start": "1600000",
    "end": "1603320"
  },
  {
    "text": "it do you have any questions",
    "start": "1603320",
    "end": "1607960"
  },
  {
    "text": "so i believe if there's if anyone has a",
    "start": "1612400",
    "end": "1614400"
  },
  {
    "text": "question that they should walk to the",
    "start": "1614400",
    "end": "1616080"
  },
  {
    "text": "mic that's there in the middle",
    "start": "1616080",
    "end": "1620320"
  }
]