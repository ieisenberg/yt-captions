[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "hello i'm brian mason and welcome to the lecture mat sync for kubecon 2021",
    "start": "1280",
    "end": "7440"
  },
  {
    "text": "i want to acknowledge my two co-workers that have been instrumental in helping me create this presentation and of",
    "start": "7440",
    "end": "13120"
  },
  {
    "text": "course our major code contributors to the nazi project itself john and raghu",
    "start": "13120",
    "end": "18400"
  },
  {
    "text": "thank you both so here's a quick agenda what we'll talk about today obviously we're going to talk about",
    "start": "18400",
    "end": "24240"
  },
  {
    "start": "20000",
    "end": "40000"
  },
  {
    "text": "problem we're trying to solve the design we came up with to solve that problem",
    "start": "24240",
    "end": "29599"
  },
  {
    "text": "we're going to do a demo of it because everybody loves demos i'm going to talk about where we're going in the future with this project and how you can get",
    "start": "29599",
    "end": "36880"
  },
  {
    "text": "involved and help if you're so inclined the problem we're trying to solve is",
    "start": "36880",
    "end": "41920"
  },
  {
    "start": "40000",
    "end": "145000"
  },
  {
    "text": "basically we love the gnats we love the asynchronous messaging model",
    "start": "41920",
    "end": "47760"
  },
  {
    "text": "but we want to extend this paradigm out to being able to send a message from a public cloud or something running up",
    "start": "47760",
    "end": "55120"
  },
  {
    "text": "in a cloud environment down to a device or some software running on a private",
    "start": "55120",
    "end": "60879"
  },
  {
    "text": "cluster or in on-prem even in somebody's house",
    "start": "60879",
    "end": "66240"
  },
  {
    "text": "in the enterprise in a data center that's protected by firewall nats doesn't really solve that problem",
    "start": "66240",
    "end": "72080"
  },
  {
    "text": "and that's okay it doesn't need to i think it would be overkill for most situations if it did try to solve that problem",
    "start": "72080",
    "end": "78320"
  },
  {
    "text": "so what we're really in need of is basically a secure scalable",
    "start": "78320",
    "end": "84840"
  },
  {
    "text": "multi-tenant that's cluster exchange so we also want this to scale down for",
    "start": "84840",
    "end": "91439"
  },
  {
    "text": "simplified development so we can keep that simple view of just using that and have all the",
    "start": "91439",
    "end": "98240"
  },
  {
    "text": "complexities of that secure scalable multi-tenant environment",
    "start": "98240",
    "end": "103600"
  },
  {
    "text": "hidden from us or at least taken care of out of our view in short we want it all",
    "start": "103600",
    "end": "109680"
  },
  {
    "text": "we took a quick look around to see if there was a solution already out there and we actually of course found some",
    "start": "109680",
    "end": "114880"
  },
  {
    "text": "this is not treading on new territory but they didn't work with nats it's like a message a rabbit mq had a solution",
    "start": "114880",
    "end": "122799"
  },
  {
    "text": "but we wanted to say with nats because we really like maths so what we wanted to do is share",
    "start": "122799",
    "end": "129280"
  },
  {
    "text": "what we've built and i'll see if you want to join and help us with it",
    "start": "129280",
    "end": "134640"
  },
  {
    "text": "okay let's jump into the design the solution that we came up with so your basics environment",
    "start": "141599",
    "end": "147760"
  },
  {
    "start": "145000",
    "end": "166000"
  },
  {
    "text": "we like it where you have some random service wants to emit and receive gnats messages to that's cluster that are",
    "start": "147760",
    "end": "155120"
  },
  {
    "text": "received by another service out there it's a great model we just want to",
    "start": "155120",
    "end": "161360"
  },
  {
    "text": "extend it so this works across clusters and across private networks",
    "start": "161360",
    "end": "167200"
  },
  {
    "start": "166000",
    "end": "200000"
  },
  {
    "text": "so a distributed design it's fairly simple you've got a cloud side you know imagine a service running up in aws or",
    "start": "167200",
    "end": "174160"
  },
  {
    "text": "azure or google and you've got something in somebody's house or on a device behind a firewall or in a private",
    "start": "174160",
    "end": "180959"
  },
  {
    "text": "cluster on azure for example or running in a data center",
    "start": "180959",
    "end": "186000"
  },
  {
    "text": "you want to be able to admit a message here have it magically cross over to the cluster that's running in the private",
    "start": "186000",
    "end": "191120"
  },
  {
    "text": "area to be received by some other service and vice versa of course this goes across the internet",
    "start": "191120",
    "end": "197599"
  },
  {
    "text": "this is a nice model reality is when we add in the internet we're going",
    "start": "197599",
    "end": "203040"
  },
  {
    "start": "200000",
    "end": "284000"
  },
  {
    "text": "through firewalls we've got you know maybe not literally but",
    "start": "203040",
    "end": "208319"
  },
  {
    "text": "figurative fire breathing dragons out there ready to stop on your data steal it and do other things",
    "start": "208319",
    "end": "214400"
  },
  {
    "text": "that you would not like so to make this get through the firewalls",
    "start": "214400",
    "end": "220959"
  },
  {
    "text": "the client side really needs to be an outbound connection we can't go inbound onto the private cluster no one's going",
    "start": "220959",
    "end": "227680"
  },
  {
    "text": "to open up a port for us to do that so the ports have to be outbound and we use a hanging pole for that so",
    "start": "227680",
    "end": "235040"
  },
  {
    "text": "this mythical line goes away all the traffic travels through the sync client",
    "start": "235040",
    "end": "240400"
  },
  {
    "text": "up to the sync server and the sync client then request messages to come back down and replay on the local",
    "start": "240400",
    "end": "245439"
  },
  {
    "text": "cluster pretty simple except when we do this we also need to add an auth server because when we",
    "start": "245439",
    "end": "251040"
  },
  {
    "text": "register the sync client with the sync server we really need to have some sort of authorization we'll talk in more",
    "start": "251040",
    "end": "256320"
  },
  {
    "text": "detail about that in a minute of course all the data data is encrypted not only via the https mechanism that we",
    "start": "256320",
    "end": "264000"
  },
  {
    "text": "obviously use to connect from the sync client to the sync server the data is also encrypted separately we'll dive",
    "start": "264000",
    "end": "269440"
  },
  {
    "text": "into that deeper as well and of course this is all multi-tenant the server tracks multiple clients we get a",
    "start": "269440",
    "end": "276320"
  },
  {
    "text": "multiple clients registered data cannot cross between clients your basic multi-tenant security",
    "start": "276320",
    "end": "284320"
  },
  {
    "start": "284000",
    "end": "304000"
  },
  {
    "text": "however we want to keep this illusion for development where you're just a client talking to another",
    "start": "284320",
    "end": "291120"
  },
  {
    "text": "client with a single man's cluster this is the unicorn and rainbow's vision we like it",
    "start": "291120",
    "end": "296639"
  },
  {
    "text": "we want to keep that for development okay let's dive down a little bit into",
    "start": "296639",
    "end": "302080"
  },
  {
    "text": "some of the weeds so obviously to get the messages going to the right",
    "start": "302080",
    "end": "308720"
  },
  {
    "start": "304000",
    "end": "382000"
  },
  {
    "text": "private cluster we need to have some sort of addressing scheme and that's makes this really easy because of the",
    "start": "308720",
    "end": "315440"
  },
  {
    "text": "selectable subject that you have in nats we follow a simple naming pattern for",
    "start": "315440",
    "end": "321039"
  },
  {
    "text": "our subject lines that allows the clients to come in and get the messages they want and to send messages back up",
    "start": "321039",
    "end": "326160"
  },
  {
    "text": "to the server the pattern that we're using right now we want to change this in the future but right now the pattern is for the subject",
    "start": "326160",
    "end": "334479"
  },
  {
    "text": "the direction the message is going either northbound or southbound southbound meaning to the client northbound meaning back up to the server",
    "start": "334479",
    "end": "341520"
  },
  {
    "text": "the client id which for southbound would be the client id for each client for",
    "start": "341520",
    "end": "346880"
  },
  {
    "text": "northbound that is a known client id to go back up but we wanted to keep that client id in",
    "start": "346880",
    "end": "352320"
  },
  {
    "text": "the pattern and then any specific uh data for the for the service and this varies to",
    "start": "352320",
    "end": "358319"
  },
  {
    "text": "whatever you want it to be this would be what you would normally have for that's message when you're not trying to add in a",
    "start": "358319",
    "end": "364880"
  },
  {
    "text": "cross-cluster synchronization so",
    "start": "364880",
    "end": "370240"
  },
  {
    "text": "the pattern is that the client attaches up to the server says hey here's my message id or my client id do you have",
    "start": "370240",
    "end": "376639"
  },
  {
    "text": "any messages for me and by the way here's some messages for you",
    "start": "376639",
    "end": "381918"
  },
  {
    "start": "382000",
    "end": "478000"
  },
  {
    "text": "let's dig a little bit on this client id where does it come from so the client id",
    "start": "383120",
    "end": "389360"
  },
  {
    "text": "is a randomly uni you know uuid unique id it's generated by the server and given",
    "start": "389360",
    "end": "395600"
  },
  {
    "text": "to the client before the any client can have a conversation and exchange messages with",
    "start": "395600",
    "end": "401280"
  },
  {
    "text": "the server it needs to register with the server the way that does this is there's a",
    "start": "401280",
    "end": "406319"
  },
  {
    "text": "small api on the client that users can use when the client's installed on the private cluster where you say register",
    "start": "406319",
    "end": "412800"
  },
  {
    "text": "yourself with the server that i told you when i deployed you so when the client's deployed you deploy pair it up with a server it's",
    "start": "412800",
    "end": "420160"
  },
  {
    "text": "just a url i'll show it to you when we go to the demo and you go to the api for the client",
    "start": "420160",
    "end": "425919"
  },
  {
    "text": "saying register when that happens the client will generate a private public key pair it's",
    "start": "425919",
    "end": "431840"
  },
  {
    "text": "going to store the private it's going to take the public key whatever metadata that",
    "start": "431840",
    "end": "436880"
  },
  {
    "text": "you've told to associate with the client which is completely user defined",
    "start": "436880",
    "end": "442639"
  },
  {
    "text": "and whatever auth data you set it to authorize its access to the server that's all part of the api call and i'll",
    "start": "442639",
    "end": "448400"
  },
  {
    "text": "show you that on the demo and then that's set up to the server the server of course",
    "start": "448400",
    "end": "454080"
  },
  {
    "text": "double checks the auth data if it's good it will authorize the request we'll save",
    "start": "454080",
    "end": "460080"
  },
  {
    "text": "the public key and the metadata and the generated client id into the",
    "start": "460080",
    "end": "465280"
  },
  {
    "text": "storage service and we'll return the client id to the client that to uh be used for the rest of the",
    "start": "465280",
    "end": "472080"
  },
  {
    "text": "conversation between that client and server that's where the client id comes from",
    "start": "472080",
    "end": "479440"
  },
  {
    "start": "478000",
    "end": "546000"
  },
  {
    "text": "let's dig into that authentication we talked about the system has a plugable authentication model",
    "start": "479440",
    "end": "485440"
  },
  {
    "text": "this auth service actually is user defined we have a sample one",
    "start": "485440",
    "end": "491440"
  },
  {
    "text": "that uh we use for testing and demoing and it's uh just uses a static user to find",
    "start": "491440",
    "end": "498080"
  },
  {
    "text": "password and we might expand this out in the future that's one of the things we'd like to add on is is variations on this",
    "start": "498080",
    "end": "504879"
  },
  {
    "text": "auth service basically the server takes the auth data sent to it by the",
    "start": "504879",
    "end": "510000"
  },
  {
    "text": "client wraps it in that's message puts it out of the net cluster hopefully somebody's listening for that",
    "start": "510000",
    "end": "516320"
  },
  {
    "text": "auth request and in the demo you'll see we'll have our auth server running out there we'll answer",
    "start": "516320",
    "end": "521518"
  },
  {
    "text": "the auth request with either the yay or nay and if and that is sent back via an ask message",
    "start": "521519",
    "end": "529360"
  },
  {
    "text": "the server in the off server is completely decoupled like you would with any other messaging system with mats",
    "start": "529360",
    "end": "534959"
  },
  {
    "text": "allowing this auth service to be changed it can be",
    "start": "534959",
    "end": "540240"
  },
  {
    "text": "the users can make their own we have a sample like i said and hopefully we'll make some more in the future",
    "start": "540240",
    "end": "547160"
  },
  {
    "start": "546000",
    "end": "794000"
  },
  {
    "text": "so after we get registered then we can start exchanging messages a message is put in on that if it's got the right",
    "start": "548240",
    "end": "554080"
  },
  {
    "text": "pattern i it's got the the northbound southbound direction",
    "start": "554080",
    "end": "559680"
  },
  {
    "text": "and a client id we'll select those and we'll sync them across the network when we do that we actually encrypt the",
    "start": "559680",
    "end": "566560"
  },
  {
    "text": "data now i can hear most people say don't you just use https to exchange the data between the client",
    "start": "566560",
    "end": "572560"
  },
  {
    "text": "and server yeah sure we have an https connection but we didn't consider that good enough for one thing we wanted the",
    "start": "572560",
    "end": "578880"
  },
  {
    "text": "protocol to be pluggable and not depend on https itself we wanted the messages",
    "start": "578880",
    "end": "585200"
  },
  {
    "text": "individually encrypted and bidirectionally authenticated using cryptography so we wanted to handle the",
    "start": "585200",
    "end": "591360"
  },
  {
    "text": "encryption ourselves and again we really didn't invent any new encryption schemes we're using stuff",
    "start": "591360",
    "end": "597200"
  },
  {
    "text": "that if you've read uh any book by bruce shire you will understand this encryption pattern it's",
    "start": "597200",
    "end": "603440"
  },
  {
    "text": "nothing we've invented it's best practices we also wanted to make sure that the data was encrypted at rest",
    "start": "603440",
    "end": "610399"
  },
  {
    "text": "right now we actually don't have any specific spot where it's sitting stored in any persistent storage we had had",
    "start": "610399",
    "end": "616640"
  },
  {
    "text": "prototypes where that was the case we don't now but if we do put that in",
    "start": "616640",
    "end": "621760"
  },
  {
    "text": "if nat starts doing persistent stores which i think they're working on the data would still be uh",
    "start": "621760",
    "end": "628720"
  },
  {
    "text": "stored at rest there so we have a basic public key infrastructure the server generates a",
    "start": "628720",
    "end": "635040"
  },
  {
    "text": "public private key pair when it starts and one thing i forgot to mention during the registration process besides the",
    "start": "635040",
    "end": "640959"
  },
  {
    "text": "client id that's generated by the server the server's public key is also returned to the client at registration",
    "start": "640959",
    "end": "646720"
  },
  {
    "text": "if you recall i also said that the client's public key is passed up to the server so both the client on the server",
    "start": "646720",
    "end": "652720"
  },
  {
    "text": "have each other's public keys after registration so we take the message data that",
    "start": "652720",
    "end": "659680"
  },
  {
    "text": "the data that was put on to nas when it's taken off we uh",
    "start": "659680",
    "end": "664880"
  },
  {
    "text": "generate an aes key that's generated randomly for each message",
    "start": "664880",
    "end": "670880"
  },
  {
    "text": "and we encrypt the message with that data then we of course take the generated aes key and we encrypt it with",
    "start": "670880",
    "end": "677360"
  },
  {
    "text": "the client's public key we also take a hash of the plain data",
    "start": "677360",
    "end": "683839"
  },
  {
    "text": "and we encrypt that hash with the server key this pattern probably looks pretty familiar this is your basic",
    "start": "683839",
    "end": "689440"
  },
  {
    "text": "bidirectional authentication we plug all this into a packet that's a version header",
    "start": "689440",
    "end": "696240"
  },
  {
    "text": "the encrypted a aes key iv salt and some other details which i",
    "start": "696240",
    "end": "701440"
  },
  {
    "text": "won't dive into here the encrypted hash of the message and of course the",
    "start": "701440",
    "end": "707120"
  },
  {
    "text": "encrypted message itself all this is sent over the wire to the client now you can see is",
    "start": "707120",
    "end": "713920"
  },
  {
    "text": "once this message is encrypted not even the server can decrypt it at that point the the we don't keep the key around",
    "start": "713920",
    "end": "720800"
  },
  {
    "text": "it's it's thrown away the encrypted version of it stored with the message but we can't decrypt it because it was",
    "start": "720800",
    "end": "727360"
  },
  {
    "text": "encrypted with the client's public key so the server can't decrypt it the only",
    "start": "727360",
    "end": "732480"
  },
  {
    "text": "person who can decrypt this message is the client itself",
    "start": "732480",
    "end": "737760"
  },
  {
    "text": "so that's how we have security that only this message if somebody intercepts it we don't care can't be used by anybody",
    "start": "737760",
    "end": "744800"
  },
  {
    "text": "the client knows it's from the server because it's got the hash of the message",
    "start": "744800",
    "end": "750320"
  },
  {
    "text": "signed by the server's private key so you they can decrypt the hash see that it matches the",
    "start": "750320",
    "end": "756240"
  },
  {
    "text": "hash of the plain text data so we know that this data is from the server so we've got a",
    "start": "756240",
    "end": "762000"
  },
  {
    "text": "good bidirectional authentication going on here uh for people interested in the numbers we're using our rsa2048 we're using 256",
    "start": "762000",
    "end": "770639"
  },
  {
    "text": "aes keys um and again this of course can be changed out",
    "start": "770639",
    "end": "776000"
  },
  {
    "text": "and modernized over time because the version header so it can always be backwards compatible and we can add in updated",
    "start": "776000",
    "end": "782480"
  },
  {
    "text": "ones like um maybe elliptical public private key pairs instead of rsa",
    "start": "782480",
    "end": "788639"
  },
  {
    "text": "this can go forward in the future for more security [Music]",
    "start": "788639",
    "end": "795649"
  },
  {
    "start": "794000",
    "end": "873000"
  },
  {
    "text": "so one thing we had to consider is even with the https in place",
    "start": "795680",
    "end": "801040"
  },
  {
    "text": "once the client is registered we really don't pass the authentication test anymore",
    "start": "801040",
    "end": "807279"
  },
  {
    "text": "we didn't want to keep those tokens around we wanted to get rid of them but we still need a way to verify that the",
    "start": "807279",
    "end": "813760"
  },
  {
    "text": "requesting entity that's requesting messages for client idx is indeed that",
    "start": "813760",
    "end": "819279"
  },
  {
    "text": "client so how we do this is remember we've exchanged public private key",
    "start": "819279",
    "end": "824560"
  },
  {
    "text": "at this point we actually do a cryptographic challenge so every time the",
    "start": "824560",
    "end": "830160"
  },
  {
    "text": "client comes up and asks for messages there's a little piece of uh encrypted data that goes up with that",
    "start": "830160",
    "end": "836320"
  },
  {
    "text": "request that then the server can decrypt with the private key or sorry the public key for",
    "start": "836320",
    "end": "842399"
  },
  {
    "text": "the client and know that this indeed is the right client asking for this client id so i have a check sum there to make",
    "start": "842399",
    "end": "848560"
  },
  {
    "text": "sure that we don't have any uh experience clients coming in and asking for data that doesn't belong to",
    "start": "848560",
    "end": "854560"
  },
  {
    "text": "them or worst case trying to post a piece of uh",
    "start": "854560",
    "end": "859680"
  },
  {
    "text": "data that doesn't belong to them which would be a message that could be acted out on some system that would",
    "start": "859680",
    "end": "864959"
  },
  {
    "text": "be bad so we have this cryptographic challenge to make sure that that doesn't happen",
    "start": "864959",
    "end": "872320"
  },
  {
    "start": "873000",
    "end": "955000"
  },
  {
    "text": "so one thing we have to do is also we have to store data we actually aren't storing messages anywhere other than the nats",
    "start": "875920",
    "end": "883600"
  },
  {
    "text": "memory at this point but we of course have client registration with the client's public keys the client id the",
    "start": "883600",
    "end": "889680"
  },
  {
    "text": "metadata associated with that registration all this needs to be kept somewhere",
    "start": "889680",
    "end": "895040"
  },
  {
    "text": "so we have in the code an interface that is represents a data",
    "start": "895040",
    "end": "900240"
  },
  {
    "text": "store and we have two implementations that interface right now a file based store which is handy for debugging and",
    "start": "900240",
    "end": "906880"
  },
  {
    "text": "testing i wouldn't use it in production necessarily and we have a database store",
    "start": "906880",
    "end": "913199"
  },
  {
    "text": "that's probably more of what we'd use in production where you can have a h  setup",
    "start": "913199",
    "end": "918880"
  },
  {
    "text": "again the file is great though because like for the demo i'm just running a file system based",
    "start": "918880",
    "end": "924639"
  },
  {
    "text": "uh key store and it's storing stuff in the container so if i",
    "start": "924639",
    "end": "930000"
  },
  {
    "text": "want to tear the whole system down and bring it back up i don't have to worry about any persistent storage it's great for doing demos it's great for doing",
    "start": "930000",
    "end": "935759"
  },
  {
    "text": "testing for production again this is a pluggable model it's not a particularly difficult interface we",
    "start": "935759",
    "end": "941360"
  },
  {
    "text": "could add more we had redis at one time but we got tired of maintaining it we weren't using it so we dropped it",
    "start": "941360",
    "end": "948480"
  },
  {
    "text": "again we don't store messages anywhere other than that's right now",
    "start": "949199",
    "end": "955320"
  },
  {
    "start": "955000",
    "end": "1093000"
  },
  {
    "text": "so with the system we want to talk about how does it scale and i will be honest we haven't done a",
    "start": "955839",
    "end": "962639"
  },
  {
    "text": "ton of scale testing on the system we've done some it's performed well on our scale test",
    "start": "962639",
    "end": "969440"
  },
  {
    "text": "the test scenario that we did we had a three node aws cluster we were running a replica set where nats and the",
    "start": "969440",
    "end": "976880"
  },
  {
    "text": "server were running on all three nodes it scaled well",
    "start": "976880",
    "end": "982399"
  },
  {
    "text": "hopefully by the time we do the q a session i'll be able to find the numbers from the scale test or have better numbers to give you but as i have to",
    "start": "982399",
    "end": "988399"
  },
  {
    "text": "record this presentation almost over a month before kubecon i don't have those numbers handy and i apologize for not",
    "start": "988399",
    "end": "994560"
  },
  {
    "text": "having them in a recording hopefully for q and a i'll have them we've tested both on x64 and arm",
    "start": "994560",
    "end": "1000480"
  },
  {
    "text": "instances up at aws interesting when we did the arm we were playing around with the arm for cost",
    "start": "1000480",
    "end": "1006480"
  },
  {
    "text": "savings and indeed arm instances can be cheaper and they performed pretty well but we saw one",
    "start": "1006480",
    "end": "1012880"
  },
  {
    "text": "issue with the arm where it started to bog down is we do a lot of encryption as i mentioned earlier",
    "start": "1012880",
    "end": "1019120"
  },
  {
    "text": "the arm instances at the time we did this testing which was back in march of uh",
    "start": "1019120",
    "end": "1024480"
  },
  {
    "text": "2021 did have encryption coprocessors",
    "start": "1024480",
    "end": "1029600"
  },
  {
    "text": "so the x4 instances that did have the co-processors would perform quite a bit better",
    "start": "1029600",
    "end": "1035199"
  },
  {
    "text": "but the arms performed pretty well just not as good but in all honesty with",
    "start": "1035199",
    "end": "1041360"
  },
  {
    "text": "what's our simulated load of i think we're simulating about a hundred to and a thousand different clients a",
    "start": "1041360",
    "end": "1047760"
  },
  {
    "text": "hundred once in a thousand different we really didn't see a load showing up on the x64 uh instances where we had",
    "start": "1047760",
    "end": "1055360"
  },
  {
    "text": "a three three node replica set we i mean we would see the load bounce a little bit but nothing of significance popping up",
    "start": "1055360",
    "end": "1062480"
  },
  {
    "text": "so again we're going to get some more scale testing in on this but we think it's going to scale fairly decently for",
    "start": "1062480",
    "end": "1067520"
  },
  {
    "text": "us this was all fronted by your basic aws load balancer we are simulating multiple clients of course",
    "start": "1067520",
    "end": "1074160"
  },
  {
    "text": "like i mentioned we've tested on x64 and arm linux containers is how we ship it",
    "start": "1074160",
    "end": "1080000"
  },
  {
    "text": "that's really the only way we've tested it so far and if other than popping it on a raspberry pi",
    "start": "1080000",
    "end": "1086640"
  },
  {
    "text": "and making sure it works there because of course we have to make sure it works on a raspberry pi",
    "start": "1086640",
    "end": "1093559"
  },
  {
    "text": "so for samples and for our testing and for our own fun we of course have made some",
    "start": "1094640",
    "end": "1100320"
  },
  {
    "text": "apps the best way in my personal opinion",
    "start": "1100320",
    "end": "1105520"
  },
  {
    "text": "would be to have sort of core screen messaging apps where you'd send messages down from the server down the client",
    "start": "1105520",
    "end": "1111679"
  },
  {
    "text": "saying do this action for me and it would be carried out uh by the application that's running on the client side",
    "start": "1111679",
    "end": "1119279"
  },
  {
    "text": "but for testing we've done we've created two apps one is an echo app which we generally deploy with the client system",
    "start": "1119679",
    "end": "1127600"
  },
  {
    "text": "because this allows us to from the server via little command line app post an ask message",
    "start": "1127600",
    "end": "1133440"
  },
  {
    "text": "that we can check connectivity all the way down to a particular client so we could say echo",
    "start": "1133440",
    "end": "1139039"
  },
  {
    "text": "a message out to this client give it the client id and we could trace the activity down to that",
    "start": "1139039",
    "end": "1146000"
  },
  {
    "text": "client and we've actually for the echo message which is a known",
    "start": "1146000",
    "end": "1151280"
  },
  {
    "text": "message defined in the code we've actually added logic into both the sync server and the sync client",
    "start": "1151280",
    "end": "1158160"
  },
  {
    "text": "to send back a response letting the echo app know that it's reached the sync server then the sync client and then",
    "start": "1158160",
    "end": "1164160"
  },
  {
    "text": "ultimately to the to what we call the echo proxy proxy lan which is a service we run on the client",
    "start": "1164160",
    "end": "1172080"
  },
  {
    "text": "we call all the services run on the client a proxy lot so we have an echo proxy lab we'll talk in a minute",
    "start": "1172080",
    "end": "1179039"
  },
  {
    "text": "about the https proxy proxy let apologize for that name so",
    "start": "1179039",
    "end": "1184880"
  },
  {
    "text": "the echo message we can check didn't reach the server did it reach the client did it actually reach finally the",
    "start": "1184880",
    "end": "1191360"
  },
  {
    "text": "echo proxy link to make sure connection is going all the way through the entire that system the server nas the server",
    "start": "1191360",
    "end": "1198320"
  },
  {
    "text": "sync sync client and the nas system on the client side to a receiving application",
    "start": "1198320",
    "end": "1205200"
  },
  {
    "text": "and again we'll do a demo of that https proxy",
    "start": "1205200",
    "end": "1210720"
  },
  {
    "text": "is a fun little tool that we created that basically takes https traffic it's it",
    "start": "1210720",
    "end": "1216240"
  },
  {
    "text": "serves as an http https proxy it takes http",
    "start": "1216240",
    "end": "1222480"
  },
  {
    "text": "s requests bundles them as a nas messages to be replayed onto the client network",
    "start": "1222480",
    "end": "1229840"
  },
  {
    "text": "and in practice and again we'll show you in demo you can simply use this as a proxy and run curl commands or",
    "start": "1229840",
    "end": "1236480"
  },
  {
    "text": "cube cuddle commands targeting a system on a remote network",
    "start": "1236480",
    "end": "1242159"
  },
  {
    "text": "and they just pass on through and you can run this is like a security nightmare for your i.t security people",
    "start": "1242159",
    "end": "1247520"
  },
  {
    "text": "if you play with this system which i hope you do you may not want to demo this particular item in front of your ip",
    "start": "1247520",
    "end": "1252799"
  },
  {
    "text": "security people i did they didn't go well",
    "start": "1252799",
    "end": "1258960"
  },
  {
    "text": "so let's get into the demo of this",
    "start": "1258960",
    "end": "1264640"
  },
  {
    "start": "1260000",
    "end": "1345000"
  },
  {
    "text": "demo fun so what we're demoing is basically the two messaging systems that we did samples",
    "start": "1269679",
    "end": "1276720"
  },
  {
    "text": "the echo client talking to echo proxy lip and the proxy server talking again through the net",
    "start": "1276720",
    "end": "1282960"
  },
  {
    "text": "system to the hd proxy lit on the other side on the client network",
    "start": "1282960",
    "end": "1288559"
  },
  {
    "text": "again this is a simplified view this is what i call our unicorn and rainbow view of the world",
    "start": "1288559",
    "end": "1294640"
  },
  {
    "text": "where there's no nastinesses it's just client talking to a client it's simple",
    "start": "1294640",
    "end": "1300640"
  },
  {
    "text": "but of course this is the reality we're working with where as we send an echo message it's going to come to the nats",
    "start": "1300640",
    "end": "1307039"
  },
  {
    "text": "cluster be passed picked up by the sync server passed over to the sync client back to another cluster on the on-prem",
    "start": "1307039",
    "end": "1313760"
  },
  {
    "text": "side and finally to the echo proxy list and as you recall the sync server and",
    "start": "1313760",
    "end": "1320080"
  },
  {
    "text": "the sync client do recognize an echo message and we'll send back a response so you can see where it's gotten along",
    "start": "1320080",
    "end": "1325280"
  },
  {
    "text": "the line but finally gets over here we're happy we'll also demo",
    "start": "1325280",
    "end": "1330559"
  },
  {
    "text": "uh using the pro the http proxy server to do cube cuddle commands to a cluster",
    "start": "1330559",
    "end": "1338559"
  },
  {
    "text": "sitting behind a firewall uh hidden off on in this case my docker",
    "start": "1338559",
    "end": "1344840"
  },
  {
    "text": "desktop so here's kind of the layout we have a multi-node nat's cluster",
    "start": "1344840",
    "end": "1350799"
  },
  {
    "start": "1345000",
    "end": "1397000"
  },
  {
    "text": "and running both um our net the nat software and our sync server",
    "start": "1350799",
    "end": "1356159"
  },
  {
    "text": "i believe for the demo i've got the replica set to one so even though it's multi-node only one instance of that and",
    "start": "1356159",
    "end": "1362320"
  },
  {
    "text": "only one instance of the zig server is running i just didn't need to scale it up",
    "start": "1362320",
    "end": "1367520"
  },
  {
    "text": "it's fronted with a load balancer this is just your basic aws load balancer it'll take traffic to the sync server",
    "start": "1367520",
    "end": "1374640"
  },
  {
    "text": "and we have running on my desktop the sync client again a single node that's",
    "start": "1374640",
    "end": "1380159"
  },
  {
    "text": "and we're running both the hd proxy lit and of course the echo proxy lit as well",
    "start": "1380159",
    "end": "1386320"
  },
  {
    "text": "up here the echo client is a command line client that we post to dats and then that gets picked up by the sync",
    "start": "1386320",
    "end": "1391600"
  },
  {
    "text": "server and travels all the way down and we'll do that demo so",
    "start": "1391600",
    "end": "1397600"
  },
  {
    "start": "1397000",
    "end": "1883000"
  },
  {
    "text": "let's go to what i've got running here so i've got two command lines here",
    "start": "1397600",
    "end": "1404080"
  },
  {
    "text": "so let's first look at down here this is my server this is aws",
    "start": "1404080",
    "end": "1410080"
  },
  {
    "text": "running ubuntu and i've got my uh docker desktop up here so you can see i",
    "start": "1410080",
    "end": "1416400"
  },
  {
    "text": "did a quick logs here on the sync client it's just kind of sitting here hanging out it's running",
    "start": "1416400",
    "end": "1422400"
  },
  {
    "text": "but it doesn't have a client id because it's not registered so it's just sitting out waiting for one",
    "start": "1422400",
    "end": "1427840"
  },
  {
    "text": "down here we've got the server running and i'm going to show you some aliases that i've got so you can see what i've",
    "start": "1427840",
    "end": "1433520"
  },
  {
    "text": "when i type commands why they what what they are so i have s alias to cube",
    "start": "1433520",
    "end": "1438799"
  },
  {
    "text": "cuddle uh writing in the namespace for server i've got k alias to cube cuddle and up",
    "start": "1438799",
    "end": "1446080"
  },
  {
    "text": "here on the client i've got the same k alias to keep cuddle because",
    "start": "1446080",
    "end": "1452159"
  },
  {
    "text": "i can't type and i've got c alias two cube cut all dash n client so we can do",
    "start": "1452159",
    "end": "1457600"
  },
  {
    "text": "c get pods we've got the echo proxy lit the http",
    "start": "1457600",
    "end": "1463360"
  },
  {
    "text": "proxy nats and the sync client running here and i can do down here server get pods",
    "start": "1463360",
    "end": "1470400"
  },
  {
    "text": "we've got again that's running up on the server area we've got the http proxy server",
    "start": "1470400",
    "end": "1475679"
  },
  {
    "text": "the actual sync server and of course we have an auth server running out here this auth server is our simple auth",
    "start": "1475679",
    "end": "1481520"
  },
  {
    "text": "server which is run with a static password that can be said when you uh",
    "start": "1481520",
    "end": "1487039"
  },
  {
    "text": "fire it off it's just an environment variable again not a production item this is for testing and demos",
    "start": "1487039",
    "end": "1495440"
  },
  {
    "text": "so we're gonna go to localhost i've got the sync client exposed on a node port 3020",
    "start": "1495679",
    "end": "1503000"
  },
  {
    "text": "3281 so i could access it and mostly i want to access this registration",
    "start": "1503000",
    "end": "1508880"
  },
  {
    "text": "endpoint so we need to register the client with the server when i fired off the client i",
    "start": "1508880",
    "end": "1515440"
  },
  {
    "text": "gave it the server url to talk to the server it's in a config",
    "start": "1515440",
    "end": "1520880"
  },
  {
    "text": "map so let's kick this off let's give it some metadata let's give it a",
    "start": "1520880",
    "end": "1526840"
  },
  {
    "text": "user none of this is mandatory but it would make sense to describe your client",
    "start": "1526840",
    "end": "1532480"
  },
  {
    "text": "and let's give it a use and let's see we'll just call it use of",
    "start": "1532480",
    "end": "1539120"
  },
  {
    "text": "demo and we don't need any more here",
    "start": "1539120",
    "end": "1544640"
  },
  {
    "text": "get that out of there we've got a comma oop we got to put our auth token in there and the auth token for my specific demo",
    "start": "1544640",
    "end": "1551600"
  },
  {
    "text": "running up there is the answer to life the universe and everything so i typed",
    "start": "1551600",
    "end": "1556720"
  },
  {
    "text": "my json right uh let's see kick it off and indeed yep i must have",
    "start": "1556720",
    "end": "1562080"
  },
  {
    "text": "because it registered so at this point we've downloaded the server's public key we've uploaded the",
    "start": "1562080",
    "end": "1568000"
  },
  {
    "text": "client's public key we've authenticated this request and we have a client id or",
    "start": "1568000",
    "end": "1573039"
  },
  {
    "text": "location id uh the same thing we renamed it to location id and i still",
    "start": "1573039",
    "end": "1578159"
  },
  {
    "text": "call it a client id to do our communications with so i need that",
    "start": "1578159",
    "end": "1583440"
  },
  {
    "text": "because i need to use it on the echo client so let's first test connectivity from the server",
    "start": "1583440",
    "end": "1589679"
  },
  {
    "text": "down to the client so let's look at this little run echo shell basically runs the echo",
    "start": "1589679",
    "end": "1597039"
  },
  {
    "text": "client it's got the url to our dats again we only talk to nats all of the",
    "start": "1597039",
    "end": "1602960"
  },
  {
    "text": "software we write only knows about that's the fact that there's that sync in the middle is irrelevant to it in",
    "start": "1602960",
    "end": "1608640"
  },
  {
    "text": "fact we can test all this without the entire net sync infrastructure we can just do gnats to mats and that's or",
    "start": "1608640",
    "end": "1616000"
  },
  {
    "text": "write direct mass communication we don't need all this stuff to do all of our testing and development but for here on the server we've got",
    "start": "1616000",
    "end": "1623120"
  },
  {
    "text": "nats running exposed on a local on a local node port and uh we need the client id",
    "start": "1623120",
    "end": "1630240"
  },
  {
    "text": "so let's run this guy and we're going to send an echo message down to this client",
    "start": "1630240",
    "end": "1635840"
  },
  {
    "text": "and indeed it went off so you can see we can trace it back and hit the netsync server it hit the client it hit the echolit and",
    "start": "1635840",
    "end": "1642880"
  },
  {
    "text": "came back up all the way and uh returned some basic um spec",
    "start": "1642880",
    "end": "1648080"
  },
  {
    "text": "version for us total time 124 milliseconds that's not too bad",
    "start": "1648080",
    "end": "1653279"
  },
  {
    "text": "um for an echo if it was a ping echo that would be pretty hard but for uh passing",
    "start": "1653279",
    "end": "1658559"
  },
  {
    "text": "through an entire messaging system two nats the sync client the sync server and coming back around across the",
    "start": "1658559",
    "end": "1664240"
  },
  {
    "text": "internet to my desktop i can live with 124 milliseconds full disclaimer the aws that i'm using",
    "start": "1664240",
    "end": "1671120"
  },
  {
    "text": "is in u.s west 2 which is in the dalles organ and i am running in portland oregon so",
    "start": "1671120",
    "end": "1678559"
  },
  {
    "text": "the interaction is not too far and let's do it twice just to make sure it worked that's cool",
    "start": "1678559",
    "end": "1685200"
  },
  {
    "text": "so let's do a demo of running something more interesting which is let's run some cube",
    "start": "1685200",
    "end": "1690640"
  },
  {
    "text": "cuddle commands against my desktop from the aws instance up",
    "start": "1690640",
    "end": "1696799"
  },
  {
    "text": "up on the internet so this is the thing that will horrify your ip security folks",
    "start": "1696799",
    "end": "1701840"
  },
  {
    "text": "so i've got a",
    "start": "1701840",
    "end": "1705120"
  },
  {
    "text": "cube config here this is a cube config from my docker desktop if you've ever looked at a docker desktop cube config",
    "start": "1707039",
    "end": "1713600"
  },
  {
    "text": "it's they're all pretty standard please don't copy my certificate and steal it from me although i'll reinitialize this",
    "start": "1713600",
    "end": "1718880"
  },
  {
    "text": "after the demo so i've got to put in a proxy url the only change i'm making",
    "start": "1718880",
    "end": "1724320"
  },
  {
    "text": "to this cubeconfig this is one i just got from my desktop uploaded to the internet",
    "start": "1724320",
    "end": "1729520"
  },
  {
    "text": "and i'm putting a proxy url line in here this is standard kubernetes i'm not just nothing abnormal",
    "start": "1729520",
    "end": "1736080"
  },
  {
    "text": "that i've done here we're putting a proxy url which has",
    "start": "1736080",
    "end": "1741760"
  },
  {
    "text": "the client id for the user this is just how we chose to do our",
    "start": "1741760",
    "end": "1747360"
  },
  {
    "text": "sample proxy server where we had to have some way to identify the client id we didn't",
    "start": "1747360",
    "end": "1752559"
  },
  {
    "text": "want to make any extra special headers so we put it in as the user so it comes in the auth header so we can use it",
    "start": "1752559",
    "end": "1758960"
  },
  {
    "text": "and the uh proxy is running on the local host up in aws and i've got",
    "start": "1758960",
    "end": "1765760"
  },
  {
    "text": "it exposed to uh 381 for the node port there",
    "start": "1765760",
    "end": "1770799"
  },
  {
    "text": "so this will set the cube cuddle up so we should be able to just do cube command using",
    "start": "1770799",
    "end": "1778240"
  },
  {
    "text": "cue config pdm we'll do uh",
    "start": "1778799",
    "end": "1784000"
  },
  {
    "text": "get nodes that should easily identify it as the docker desktop if we hit the right spot",
    "start": "1784000",
    "end": "1789120"
  },
  {
    "text": "oh there we go i should probably put some logs up here so you can see the activity",
    "start": "1789120",
    "end": "1795480"
  },
  {
    "text": "so we'll do a log on the let's do a log on the xttg",
    "start": "1797440",
    "end": "1805840"
  },
  {
    "text": "proxy lit ah let's follow it",
    "start": "1806399",
    "end": "1810720"
  },
  {
    "text": "there we go space in there so we can see it and let's do that get meds again we can see",
    "start": "1811760",
    "end": "1818080"
  },
  {
    "text": "all the packets have come through and been replayed on the client network again this is what will horrify your",
    "start": "1818080",
    "end": "1823760"
  },
  {
    "text": "network security folk when they realize that you just plopped a piece of software that violates all their network policies and",
    "start": "1823760",
    "end": "1830559"
  },
  {
    "text": "lets you uh access all your local resources from some random aws instance",
    "start": "1830559",
    "end": "1837840"
  },
  {
    "text": "so let's uh do one more command just to have a little fun here let's do a namespace of client and then we'll do a",
    "start": "1838640",
    "end": "1845840"
  },
  {
    "text": "get pods and see all our client pods running on that network so there we go",
    "start": "1845840",
    "end": "1853520"
  },
  {
    "text": "and just for comparison same grip same list",
    "start": "1853760",
    "end": "1859519"
  },
  {
    "text": "so that is a demo of using the net system synchronizing data to another that",
    "start": "1859519",
    "end": "1864640"
  },
  {
    "text": "system on a private network behind a firewall",
    "start": "1864640",
    "end": "1870880"
  },
  {
    "text": "and being able to uh have control of that system which is",
    "start": "1870880",
    "end": "1876080"
  },
  {
    "text": "really handy for the internet of things world let's go back here",
    "start": "1876080",
    "end": "1882399"
  },
  {
    "start": "1883000",
    "end": "2112000"
  },
  {
    "text": "let's talk about the future and where we want to take this project so",
    "start": "1890240",
    "end": "1895679"
  },
  {
    "text": "i checked the item on for the lecture that we'd love to have this become called native incubator",
    "start": "1895679",
    "end": "1902799"
  },
  {
    "text": "short of that we've got some other work that we need to do remember how i talked about the messages",
    "start": "1902799",
    "end": "1908880"
  },
  {
    "text": "have either a northbound or southbound prefix on them that made a lot of sense when we started",
    "start": "1908880",
    "end": "1915200"
  },
  {
    "text": "working on this but as we've matured in our thinking we realized that's sort of silly let's just simply",
    "start": "1915200",
    "end": "1921039"
  },
  {
    "text": "add a netsync prefix that will allow the system to identify the message then we",
    "start": "1921039",
    "end": "1926159"
  },
  {
    "text": "can use the client id to decide if it needs to stay local or if it gets passed up to appear the peer being either a",
    "start": "1926159",
    "end": "1933039"
  },
  {
    "text": "client or a server i think that will enhance the system this will actually allow us to send",
    "start": "1933039",
    "end": "1938559"
  },
  {
    "text": "messages from a client to another client because we can pass the messages up to the sync server sync server will see hey",
    "start": "1938559",
    "end": "1945039"
  },
  {
    "text": "that's not really for me let's put that on to the net system then it will get picked up and set back down",
    "start": "1945039",
    "end": "1950720"
  },
  {
    "text": "to another client that will allow not only northbound southbound communication but",
    "start": "1950720",
    "end": "1956000"
  },
  {
    "text": "peer communication i think it'll be a nice add-on it's not what we needed for when we were doing the project but i",
    "start": "1956000",
    "end": "1962320"
  },
  {
    "text": "think it will make a nice add-on going forward we also",
    "start": "1962320",
    "end": "1967760"
  },
  {
    "text": "save a lot of metadata with the client id but we haven't really provided",
    "start": "1967760",
    "end": "1972880"
  },
  {
    "text": "particularly good apis for searching that metadata to find the client id and we need to add in that",
    "start": "1972880",
    "end": "1979840"
  },
  {
    "text": "api and figure a good way to do it multi-tenant",
    "start": "1979840",
    "end": "1986640"
  },
  {
    "text": "one of the things we talked about for the goalie encryption system was having the data be encrypted at rest that's one",
    "start": "1987679",
    "end": "1993760"
  },
  {
    "text": "of the big reasons why we did our own encryption system however right now we don't have any data",
    "start": "1993760",
    "end": "2000159"
  },
  {
    "text": "at rest and even if gnats would start storing data which i hope it does start doing",
    "start": "2000159",
    "end": "2007120"
  },
  {
    "text": "some persistent data the message is not encrypted till it hits the sync server or the sync client",
    "start": "2007120",
    "end": "2013840"
  },
  {
    "text": "so we'd like to push the encryption back a layer and have helper libraries that",
    "start": "2013840",
    "end": "2020240"
  },
  {
    "text": "allow the that's clients to um to post the message encrypted onto gnats",
    "start": "2020240",
    "end": "2027360"
  },
  {
    "text": "this wouldn't be hard to do we just need to make the libraries and we need to make the system be smart enough not to",
    "start": "2027360",
    "end": "2033519"
  },
  {
    "text": "re-encrypt the message wouldn't be the end of the world if they did re-encrypt it it's just a lot of wasted processing",
    "start": "2033519",
    "end": "2038559"
  },
  {
    "text": "power another item we'd like to do going forward is right now we're doing",
    "start": "2038559",
    "end": "2043600"
  },
  {
    "text": "straight https rest calls nothing wrong with them but they're not the most performant thing in the world so we'd",
    "start": "2043600",
    "end": "2048878"
  },
  {
    "text": "like to switch to grpc for the client server message exchange",
    "start": "2048879",
    "end": "2054079"
  },
  {
    "text": "we also want to add in some apis to help mobile clients we have a",
    "start": "2054079",
    "end": "2059520"
  },
  {
    "text": "couple in there now to help a mobile client post and get messages and exchange messages do",
    "start": "2059520",
    "end": "2065839"
  },
  {
    "text": "uh phone based control but those need to be enhanced those are all items that we have thought",
    "start": "2065839",
    "end": "2071440"
  },
  {
    "text": "of going forward hopefully other people come up with some more clever ideas and put some issues in",
    "start": "2071440",
    "end": "2076638"
  },
  {
    "text": "the issues locked for us another thing is we'd like to do in the",
    "start": "2076639",
    "end": "2082638"
  },
  {
    "text": "future is we've looked around there's some industry standards for iot we've mostly ignored them other than",
    "start": "2082639",
    "end": "2087679"
  },
  {
    "text": "acknowledging their existence it would be good if we start working with these standards",
    "start": "2087679",
    "end": "2093040"
  },
  {
    "text": "again our goal was to write some software for netapp which",
    "start": "2093040",
    "end": "2098320"
  },
  {
    "text": "netapp didn't allowed us to open source so the industry iot standards weren't",
    "start": "2098320",
    "end": "2103440"
  },
  {
    "text": "important for us at the time but i think as an open source project and making this mature and be have some sticking",
    "start": "2103440",
    "end": "2108720"
  },
  {
    "text": "power we need to start embracing the industry standards which brings us to the next topic of",
    "start": "2108720",
    "end": "2116480"
  },
  {
    "start": "2112000",
    "end": "2347000"
  },
  {
    "text": "getting involved so again everyone who's worked on this project so",
    "start": "2116480",
    "end": "2122240"
  },
  {
    "text": "far works for netapp netapp recognized that a messaging",
    "start": "2122240",
    "end": "2127680"
  },
  {
    "text": "system is not core to our business we don't want to be in the making the",
    "start": "2127680",
    "end": "2133119"
  },
  {
    "text": "messaging system world where we do data management so netapp has allowed us to open sources project",
    "start": "2133119",
    "end": "2139680"
  },
  {
    "text": "thank you netapp we licensed under apache when you open source a project at netapp",
    "start": "2139680",
    "end": "2145359"
  },
  {
    "text": "you basically have two choices you can say are you is this going to be an official netapp open source project such",
    "start": "2145359",
    "end": "2151280"
  },
  {
    "text": "as like netapp trident which is obviously key to kubernetes storage it's key to netapp",
    "start": "2151280",
    "end": "2157760"
  },
  {
    "text": "that is a netapp open source project we netapp supports that that spends a lot of money supporting",
    "start": "2157760",
    "end": "2164079"
  },
  {
    "text": "that this particular project we didn't open source as an official",
    "start": "2164079",
    "end": "2169280"
  },
  {
    "text": "netapp project written and supported by netapp engineers but netapp does not have its",
    "start": "2169280",
    "end": "2175440"
  },
  {
    "text": "name behind this this is just an open source project that we put out in the community it's a minor distinction but it's",
    "start": "2175440",
    "end": "2182079"
  },
  {
    "text": "important that i point that out that this is not a netapp supported project you cannot call that up",
    "start": "2182079",
    "end": "2187599"
  },
  {
    "text": "technical support and get support on this project like you can with trident for example",
    "start": "2187599",
    "end": "2192880"
  },
  {
    "text": "although again everyone who's worked on this so far has been a netapp employee and we're happy to answer questions and",
    "start": "2192880",
    "end": "2198560"
  },
  {
    "text": "give people support it's just not you can't call that up directly you have to email us the developers",
    "start": "2198560",
    "end": "2204560"
  },
  {
    "text": "which you can see on github this is hosted on github here's the url for it",
    "start": "2204560",
    "end": "2211680"
  },
  {
    "text": "and the images are hosted up on docker and again the urls for docker",
    "start": "2211760",
    "end": "2217520"
  },
  {
    "text": "as we add to this we'll get the readme's up better for this so you can find the code in the",
    "start": "2217520",
    "end": "2224640"
  },
  {
    "text": "where everything's hosted the proxy servers hosted under a different uh project up on github",
    "start": "2224640",
    "end": "2232400"
  },
  {
    "text": "it's just something that personally i threw together just for fun it's not part of the natsync specifically",
    "start": "2232400",
    "end": "2238240"
  },
  {
    "text": "although that is open sourced as well and anybody can grab it it's just not directly tied",
    "start": "2238240",
    "end": "2243520"
  },
  {
    "text": "to the netsync project but it's still under uh the one true way which the otub otw",
    "start": "2243520",
    "end": "2250560"
  },
  {
    "text": "is the one true way open source hosting area for us",
    "start": "2250560",
    "end": "2256400"
  },
  {
    "text": "not an end-up thing that's my personal space where i put my open source projects",
    "start": "2256400",
    "end": "2262078"
  },
  {
    "text": "so issues that we could use helping on we're testing we could really use some",
    "start": "2262240",
    "end": "2268960"
  },
  {
    "text": "help testing we could love people to try it out and propose new topics you can grab you can add issues on",
    "start": "2268960",
    "end": "2275839"
  },
  {
    "text": "github you can grab you can fork the project you can email us get added to the project we're pretty much open to",
    "start": "2275839",
    "end": "2281920"
  },
  {
    "text": "however people want to work there obviously nobody's going to have direct commit access to uh",
    "start": "2281920",
    "end": "2288720"
  },
  {
    "text": "the trunk or the main branch that will still be reviewed it's still going to go through",
    "start": "2288720",
    "end": "2295440"
  },
  {
    "text": "security scanning it's still going to go through a peer review before anything gets down into the trunk",
    "start": "2295440",
    "end": "2302880"
  },
  {
    "text": "but everybody's welcome to come help out",
    "start": "2302880",
    "end": "2307039"
  },
  {
    "text": "i appreciate you taking your time come listening if you we're going to have a q a session live here after the",
    "start": "2308560",
    "end": "2315359"
  },
  {
    "text": "talk i hope you find this interesting if you love it",
    "start": "2315359",
    "end": "2321040"
  },
  {
    "text": "check it out try using it let us know if you think this is an utter waste of time and we totally missed some other really",
    "start": "2321040",
    "end": "2326880"
  },
  {
    "text": "cool piece of software that we should have been using let us know about that too and if you use it and you find bugs",
    "start": "2326880",
    "end": "2332800"
  },
  {
    "text": "please add issues i'm pretty sure that issue tracking is open to the public if not shoot me an email",
    "start": "2332800",
    "end": "2339520"
  },
  {
    "text": "my emails up on github we'll make sure it gets open and again i appreciate your listing and let's go into the q a",
    "start": "2339520",
    "end": "2345760"
  },
  {
    "text": "session now",
    "start": "2345760",
    "end": "2349079"
  }
]