[
  {
    "text": "welcome to kubecon on the last friday i hope you guys had a good week i know i did",
    "start": "80",
    "end": "6240"
  },
  {
    "text": "it's nice to be in person once again for these talks um so times that i cherish the most",
    "start": "6240",
    "end": "13200"
  },
  {
    "text": "is being able to see all you folks and communicate with everybody here at the con so uh you're here for kube cuddle said",
    "start": "13200",
    "end": "20400"
  },
  {
    "text": "what because uh we need to interpret sometimes what cube cuddle is trying to",
    "start": "20400",
    "end": "25760"
  },
  {
    "text": "tell us about our applications my name's chris christopher uh i shorten everybody else's name so i",
    "start": "25760",
    "end": "32558"
  },
  {
    "text": "just go by chris uh i'm a senior cloud native engineer at rxm",
    "start": "32559",
    "end": "38000"
  },
  {
    "text": "i'm an instructor and i'm a consultant so when i'm not in a class with a bunch of students i'm",
    "start": "38000",
    "end": "44239"
  },
  {
    "text": "usually uh working on a project to help people adopt kubernetes and cloud native",
    "start": "44239",
    "end": "49920"
  },
  {
    "text": "applications and things like that and um i like the talk so",
    "start": "49920",
    "end": "54960"
  },
  {
    "text": "that's why i'm here and i've done it in the past so you can check out some of the other talks that i've had",
    "start": "54960",
    "end": "60800"
  },
  {
    "text": "the last couple years here at um kubecon although it was virtual",
    "start": "60800",
    "end": "66560"
  },
  {
    "text": "okay so before we get started on interpreting what kubecuttle is trying",
    "start": "66560",
    "end": "72880"
  },
  {
    "text": "to tell us we need to think about uh what",
    "start": "72880",
    "end": "78159"
  },
  {
    "text": "kubernetes is doing uh to deploy our application right and so",
    "start": "78159",
    "end": "84080"
  },
  {
    "text": "this is a resource creation flow that shows uh often we're the user here in the the",
    "start": "84080",
    "end": "91200"
  },
  {
    "text": "upper right hand corner uh or upper left and uh we're a little bit disconnected from the actual",
    "start": "91200",
    "end": "97439"
  },
  {
    "text": "deployed application that happens many steps down in this flow and so",
    "start": "97439",
    "end": "104000"
  },
  {
    "text": "there are some swim lanes that happen here and so we've delineated those to show that",
    "start": "104000",
    "end": "109439"
  },
  {
    "text": "you create the deployment as the user it's then or the controller let's say it's then",
    "start": "109439",
    "end": "115040"
  },
  {
    "text": "the controller's job to actually uh submit the api requests to create your applications or create your pods",
    "start": "115040",
    "end": "122240"
  },
  {
    "text": "and then the scheduler has to do its work to make sure that those things get home and then the kubelet has to kick in and",
    "start": "122240",
    "end": "129920"
  },
  {
    "text": "communicate with the container runtime and actually you know create containers and and have running processes and in",
    "start": "129920",
    "end": "136720"
  },
  {
    "text": "any one of these swim lanes something may go wrong that you may not anticipate",
    "start": "136720",
    "end": "141840"
  },
  {
    "text": "and you'll need to figure out you know what's going on so we're going to look at each one of",
    "start": "141840",
    "end": "147200"
  },
  {
    "text": "these swim lanes in turn here so kubernetes resources all of them have",
    "start": "147200",
    "end": "153599"
  },
  {
    "text": "things like conditions phases states that some of which are summaries",
    "start": "153599",
    "end": "159760"
  },
  {
    "text": "that will give you a little bit of information some clues about the status of your application other things are very detailed",
    "start": "159760",
    "end": "166560"
  },
  {
    "text": "and we'll give you exactly the message that you need to know about your application and what's",
    "start": "166560",
    "end": "172560"
  },
  {
    "text": "happening with it so they're all give you some sort of clue to help you with that when you're first learning kubernetes it can be a",
    "start": "172560",
    "end": "179360"
  },
  {
    "text": "little bit difficult to know where to look and what to pay attention to",
    "start": "179360",
    "end": "186080"
  },
  {
    "text": "you know i create a pod or i create a deployment and it says",
    "start": "186080",
    "end": "192879"
  },
  {
    "text": "resource created oh cool everything should be great right well no not really a lot of stuff has to",
    "start": "192879",
    "end": "198400"
  },
  {
    "text": "happen in the background before that actually becomes true and so if you don't know how to dig in",
    "start": "198400",
    "end": "203599"
  },
  {
    "text": "and actually find that information then you're sort of left stranded and wondering",
    "start": "203599",
    "end": "209360"
  },
  {
    "text": "how why why can't i connect to my application kubernetes said it was created",
    "start": "209360",
    "end": "216000"
  },
  {
    "text": "so we're going to go through those steps here so things like get with events",
    "start": "216000",
    "end": "221920"
  },
  {
    "text": "get the object itself give you some clues uh it's always a jumping off point right",
    "start": "221920",
    "end": "227599"
  },
  {
    "text": "we get the object get some sort of summary information and then go from there we can use modifiers like minus o",
    "start": "227599",
    "end": "234400"
  },
  {
    "text": "so outputting yaml outputting json and then getting specific status information uh using",
    "start": "234400",
    "end": "240720"
  },
  {
    "text": "something like status.conditions and extracting the actual message from the condition of of the object and",
    "start": "240720",
    "end": "247200"
  },
  {
    "text": "of course coup ctl describe is very uh helpful as well so we're going to look at some practical examples we're going",
    "start": "247200",
    "end": "252879"
  },
  {
    "text": "to start with the the first uh top two swim lanes here so we're going to focus on",
    "start": "252879",
    "end": "258880"
  },
  {
    "text": "uh as a user we create the deployment and then what happens or the controller rather and then",
    "start": "258880",
    "end": "265280"
  },
  {
    "text": "what happens when that controller fails to do what we expect it to do and so",
    "start": "265280",
    "end": "272639"
  },
  {
    "text": "in some cases we can get some details from a command like kubectl describe so",
    "start": "272639",
    "end": "278320"
  },
  {
    "text": "for deployment it has some transient states that it will express so for example available",
    "start": "278320",
    "end": "285840"
  },
  {
    "text": "this can be a little bit complicated because it requires understanding of",
    "start": "285840",
    "end": "290880"
  },
  {
    "text": "the setting which is max unavailable and the other setting which is the minimum",
    "start": "290880",
    "end": "297280"
  },
  {
    "text": "ready seconds so some number of pods has to be available",
    "start": "297280",
    "end": "303440"
  },
  {
    "text": "for a certain amount of time based on what was expressed in the deployments",
    "start": "303440",
    "end": "309280"
  },
  {
    "text": "essentially rolling update strategy which determines whether or not the the",
    "start": "309280",
    "end": "315600"
  },
  {
    "text": "minimum number of replicas are available to clients all right and so",
    "start": "315600",
    "end": "321120"
  },
  {
    "text": "this will tell us yes or no is the thing actually available to clients or are there not enough replicas to to make",
    "start": "321120",
    "end": "327919"
  },
  {
    "text": "that available progressing happens when we have new rss or so a new rs comes",
    "start": "327919",
    "end": "333199"
  },
  {
    "text": "around when we have a new deployment or a rolling update",
    "start": "333199",
    "end": "339600"
  },
  {
    "text": "and so in any of those cases we'll see the progressing",
    "start": "339600",
    "end": "345039"
  },
  {
    "text": "status condition show up or if we have a scale up or scale down right we're making changes to the existing",
    "start": "345039",
    "end": "350960"
  },
  {
    "text": "application and then that shares a condition um replica failure with the replica set",
    "start": "350960",
    "end": "357520"
  },
  {
    "text": "so both deployments and replica sets will express replica failure if they can't create a pod",
    "start": "357520",
    "end": "364479"
  },
  {
    "text": "for any sort of reason stateful sets and jobs don't have as much detail so staple sets have a",
    "start": "364479",
    "end": "370479"
  },
  {
    "text": "status.conditions [Music] part of their object but it's not easy",
    "start": "370479",
    "end": "377680"
  },
  {
    "text": "to find and it's not very detailed so it's just not as good as the deployment",
    "start": "377680",
    "end": "383039"
  },
  {
    "text": "when it comes to being clear about what's going on with pods under a staple set and then job has one",
    "start": "383039",
    "end": "388319"
  },
  {
    "text": "that's very transient that's whether or not something finished with a zero or non-zero but if",
    "start": "388319",
    "end": "396160"
  },
  {
    "text": "it's still running it doesn't it doesn't even present that to you with cube cuddle right so",
    "start": "396160",
    "end": "402960"
  },
  {
    "text": "it's not queryable at that point until it gets it does its work so we're going to look",
    "start": "402960",
    "end": "408800"
  },
  {
    "text": "at a practical example of uh these guys so i've got a couple of yamls i'm just going to apply them",
    "start": "408800",
    "end": "415520"
  },
  {
    "text": "and then we're going to see what happens all right so we created a bunch of controllers all",
    "start": "415520",
    "end": "421919"
  },
  {
    "text": "the ones we mentioned and so i'm just going to cube ctl get the deployment",
    "start": "421919",
    "end": "428639"
  },
  {
    "text": "the rs the staple set and i'm using the short terms because uh i'm lazy um and job",
    "start": "428639",
    "end": "437199"
  },
  {
    "text": "right and so this is kind of our jumping off point right",
    "start": "437199",
    "end": "442240"
  },
  {
    "text": "i have a couple deployments you can see that they're not whole i've got a staple set",
    "start": "442240",
    "end": "447280"
  },
  {
    "text": "it too is not whole it has a lot less information for me to understand why it's not whole and the",
    "start": "447280",
    "end": "452880"
  },
  {
    "text": "same thing with the job it's not done yet i don't know if it's in progress or if",
    "start": "452880",
    "end": "459440"
  },
  {
    "text": "it can't create a pod or what's going on with it right so um there's a limited amount of",
    "start": "459440",
    "end": "465680"
  },
  {
    "text": "information that gets displayed here but if we go through each one we can get a sense of um",
    "start": "465680",
    "end": "473120"
  },
  {
    "text": "what uh what these different columns mean and how they can help us so for example ready this is",
    "start": "473120",
    "end": "479440"
  },
  {
    "text": "an important concept in kubernetes readiness probes and so",
    "start": "479440",
    "end": "484960"
  },
  {
    "text": "at this point we don't know if um two of our pods have passed their",
    "start": "484960",
    "end": "490000"
  },
  {
    "text": "or have not passed their readiness probes or if they just don't exist um so",
    "start": "490000",
    "end": "496400"
  },
  {
    "text": "we can look at something like available and up to date to help us with that",
    "start": "496400",
    "end": "501440"
  },
  {
    "text": "right so if the pod doesn't exist it's not going to be up to date right and we don't have a new revision of this",
    "start": "501440",
    "end": "508879"
  },
  {
    "text": "uh deployment of course because it's brand new so we know that we were able to create two pods",
    "start": "508879",
    "end": "515760"
  },
  {
    "text": "uh but two are missing we still don't know why the rs's actually have a little bit better details because they've got the",
    "start": "515760",
    "end": "521440"
  },
  {
    "text": "desired versus current and ready and so now i've broken out you know a little bit more detail information we know it's",
    "start": "521440",
    "end": "527600"
  },
  {
    "text": "not just that the pods aren't ready but that they really just haven't been created because",
    "start": "527600",
    "end": "533440"
  },
  {
    "text": "the rs has four pods that it wants to create but only two exists for the one rs and then",
    "start": "533440",
    "end": "538800"
  },
  {
    "text": "this one has zero for whatever reason staple set",
    "start": "538800",
    "end": "544880"
  },
  {
    "text": "again we don't know they're just zero of three ready there could be a pod there but",
    "start": "544880",
    "end": "550480"
  },
  {
    "text": "uh the readiness um probe may not have passed or again",
    "start": "550480",
    "end": "556320"
  },
  {
    "text": "there's no pod that exists there so what we need to do is",
    "start": "556320",
    "end": "561440"
  },
  {
    "text": "dig deeper and ask these specific controllers about their statuses so i can do cube ctl",
    "start": "561440",
    "end": "568160"
  },
  {
    "text": "describe on one of these controllers so i'll do deploy",
    "start": "568160",
    "end": "574800"
  },
  {
    "text": "and we'll do the dep e x and so uh our only condition",
    "start": "574800",
    "end": "581519"
  },
  {
    "text": "that shows here uh available as false means that",
    "start": "581519",
    "end": "587440"
  },
  {
    "text": "again we don't have enough replicas so this ties into the max unavailable",
    "start": "587440",
    "end": "593360"
  },
  {
    "text": "this is just the default right so we only have two of four pods so of course we breach this threshold",
    "start": "593360",
    "end": "599360"
  },
  {
    "text": "and we're below the max unavailable and so we expect this to be false replica",
    "start": "599360",
    "end": "604560"
  },
  {
    "text": "failure is true here's our first indication that the controller is failing to create pods because",
    "start": "604560",
    "end": "611279"
  },
  {
    "text": "it has this set to true and it's still trying of course because it's under progressing",
    "start": "611279",
    "end": "617279"
  },
  {
    "text": "said as true but the only event we really get here is that the replica set",
    "start": "617279",
    "end": "623120"
  },
  {
    "text": "scaled up to four so uh what's going on here we don't have enough clues so i need to go to the",
    "start": "623120",
    "end": "629040"
  },
  {
    "text": "replica set to really get the",
    "start": "629040",
    "end": "634399"
  },
  {
    "text": "information and of course i get a huge amount of",
    "start": "634399",
    "end": "640079"
  },
  {
    "text": "events right so the replica set remember in the flow is the actual controller responsible for",
    "start": "640079",
    "end": "646240"
  },
  {
    "text": "creating the pods so the deployment did what was supposed to do it created the replica set but the replica set",
    "start": "646240",
    "end": "652880"
  },
  {
    "text": "is not being able to create the pods because i actually ran this in a namespace that",
    "start": "652880",
    "end": "658000"
  },
  {
    "text": "has a quota that would be deliberately violated so we would actually see something that was wrong right so",
    "start": "658000",
    "end": "665040"
  },
  {
    "text": "knowing where to look is key to this if i'm trying to",
    "start": "665040",
    "end": "672240"
  },
  {
    "text": "look at my deployment when what i'm looking for is missing pods well the deployment's not responsible",
    "start": "672240",
    "end": "678800"
  },
  {
    "text": "for that right it's the rs that's responsible for that and so if i go directly to the rs i can see events like",
    "start": "678800",
    "end": "683839"
  },
  {
    "text": "this now when i don't have that two-tiered um relationship between",
    "start": "683839",
    "end": "689680"
  },
  {
    "text": "controllers of course i can go directly to the controller like a staple set",
    "start": "689680",
    "end": "695440"
  },
  {
    "text": "and get the same message right there there's a quota in place",
    "start": "696000",
    "end": "701760"
  },
  {
    "text": "that is preventing that as well and the job's the same way so if i if i queried the job uh you'd see the quota now",
    "start": "701760",
    "end": "708320"
  },
  {
    "text": "there's one that we didn't see that",
    "start": "708320",
    "end": "714079"
  },
  {
    "text": "is not part of this quota uh scenario that i've set up so i'm just",
    "start": "714079",
    "end": "720720"
  },
  {
    "text": "going to list all again so there's one more deployment here called saex that is",
    "start": "720720",
    "end": "728160"
  },
  {
    "text": "failing to create one pod and it looks very similar to the other",
    "start": "728160",
    "end": "734240"
  },
  {
    "text": "problems that we're having is it a quota issue they look very similar right if we",
    "start": "734240",
    "end": "740399"
  },
  {
    "text": "actually look at that",
    "start": "740399",
    "end": "743880"
  },
  {
    "text": "again deployment's not going to tell me much right because it's not what's responsible for for",
    "start": "749040",
    "end": "755600"
  },
  {
    "text": "creating pods so just wanted to reiterate that so i need to do is go to the rs",
    "start": "755600",
    "end": "762639"
  },
  {
    "text": "so now in this case has nothing to do with the quota this is a failed service account so the pod spec",
    "start": "767839",
    "end": "774160"
  },
  {
    "text": "is relied relying upon a service account that doesn't exist again i made this scenario artificial just so we",
    "start": "774160",
    "end": "780720"
  },
  {
    "text": "could have something to um to look at in our troubleshooting scenario",
    "start": "780720",
    "end": "786399"
  },
  {
    "text": "but just looking at the git output",
    "start": "786399",
    "end": "793760"
  },
  {
    "text": "doesn't give give us these details right being able to go into the actual events",
    "start": "793760",
    "end": "800000"
  },
  {
    "text": "of the controller and the correct controller will give us the information that we need in this in that scenario",
    "start": "800000",
    "end": "806560"
  },
  {
    "text": "so going back here",
    "start": "806560",
    "end": "811680"
  },
  {
    "text": "when we look at the deployment staple set with something like coop ctl get a lot of the issues that we're going to",
    "start": "811920",
    "end": "818000"
  },
  {
    "text": "have are are going to look identical and we're going to see later on with some of these other scenarios that they're going to look identical to those scenarios too",
    "start": "818000",
    "end": "826320"
  },
  {
    "text": "replica sets give us the the best details about things like ready versus current uh not",
    "start": "826320",
    "end": "832240"
  },
  {
    "text": "not matching desired uh pods are going to be missing right so i can't",
    "start": "832240",
    "end": "837680"
  },
  {
    "text": "query pods that don't exist for their status information i have to",
    "start": "837680",
    "end": "843120"
  },
  {
    "text": "rely on what the controller tells me because i can't query something that hasn't been created yet",
    "start": "843120",
    "end": "848720"
  },
  {
    "text": "and you can actually see the message field that gets populated as a related condition so those events will populate into the",
    "start": "848720",
    "end": "855839"
  },
  {
    "text": "message field of the the controller so common causes here are",
    "start": "855839",
    "end": "861040"
  },
  {
    "text": "things like quotas missing service accounts as as we saw",
    "start": "861040",
    "end": "866240"
  },
  {
    "text": "now if your controller can actually create pods then we're moving down a swim lane",
    "start": "866240",
    "end": "871279"
  },
  {
    "text": "right if we see that pods are created then we need to go and",
    "start": "871279",
    "end": "876399"
  },
  {
    "text": "look at pod objects for their status their phases and so",
    "start": "876399",
    "end": "882000"
  },
  {
    "text": "some of the macro states that exist for pods include things like pending so this is",
    "start": "882000",
    "end": "888800"
  },
  {
    "text": "when the replica set has actually successfully",
    "start": "888800",
    "end": "894560"
  },
  {
    "text": "submitted the pod spec to the api",
    "start": "894560",
    "end": "900639"
  },
  {
    "text": "but the pod can actually be created remember that pods",
    "start": "900639",
    "end": "906399"
  },
  {
    "text": "are represented by the pod sandbox which is a container and so",
    "start": "906399",
    "end": "912720"
  },
  {
    "text": "the first bullet here that says that uh the containers have not been created",
    "start": "912720",
    "end": "918160"
  },
  {
    "text": "right includes that infrastructure container that that pod sandbox container running then is where we actually have",
    "start": "918160",
    "end": "925279"
  },
  {
    "text": "scheduled it to a node but the containers can be in any state",
    "start": "925279",
    "end": "932639"
  },
  {
    "text": "right so they can be restarting they can be running they could have gone into a crash in some",
    "start": "932639",
    "end": "938560"
  },
  {
    "text": "cases we'll get that actually as a as a message succeeded in failed very straightforward",
    "start": "938560",
    "end": "944639"
  },
  {
    "text": "zero non-zero exit codes and then unknown is not",
    "start": "944639",
    "end": "949839"
  },
  {
    "text": "a something you'll see very frequently but it's a lot of times deals with the",
    "start": "949839",
    "end": "956720"
  },
  {
    "text": "communication between the host where the cubelet is running where that pod is",
    "start": "956720",
    "end": "963120"
  },
  {
    "text": "and it's not updating the status if we go a little bit deeper so this",
    "start": "963120",
    "end": "968480"
  },
  {
    "text": "these come with cube ctl get pod that's a again good starting point where we jump off uh but if we get something like",
    "start": "968480",
    "end": "975519"
  },
  {
    "text": "coop ctl describe we can get uh boolean conditions that let us know if something's ready uh if",
    "start": "975519",
    "end": "982320"
  },
  {
    "text": "in knit containers have been launched or they have failed to finish via initialized whether or not all the",
    "start": "982320",
    "end": "989040"
  },
  {
    "text": "containers in our pod are are actually ready passing their probes or not and whether",
    "start": "989040",
    "end": "994240"
  },
  {
    "text": "or not it's been scheduled and this will give us some more details so if we look at the the next swim lane here",
    "start": "994240",
    "end": "1000399"
  },
  {
    "text": "there's [Music] the scheduler responsible for",
    "start": "1000399",
    "end": "1007279"
  },
  {
    "text": "finding pods that have not been bound to nodes once the controller has submitted them and then",
    "start": "1007759",
    "end": "1014480"
  },
  {
    "text": "binding them to nodes and so if we look at some examples i'll",
    "start": "1014480",
    "end": "1021360"
  },
  {
    "text": "clear my cluster",
    "start": "1022160",
    "end": "1025839"
  },
  {
    "text": "and i'm going to need to change namespaces so i get out of the quota so we don't deal with that",
    "start": "1027600",
    "end": "1033678"
  },
  {
    "text": "so we'll switch to a different namespace without a quota we'll apply a new set",
    "start": "1035280",
    "end": "1042159"
  },
  {
    "text": "of pods here and i'll just dump everything because",
    "start": "1043839",
    "end": "1050000"
  },
  {
    "text": "what we're going to need to do is look at the pods themselves so we'll use get all",
    "start": "1050000",
    "end": "1057840"
  },
  {
    "text": "now if we again go back to the controllers where we started the first time",
    "start": "1057840",
    "end": "1063520"
  },
  {
    "text": "these can conditions look fairly similar to what we saw when",
    "start": "1063520",
    "end": "1068559"
  },
  {
    "text": "there was a quota problem or a service account problem so they're not going to be very helpful",
    "start": "1068559",
    "end": "1074480"
  },
  {
    "text": "right we have pods but they're not passing readiness checks",
    "start": "1074480",
    "end": "1080480"
  },
  {
    "text": "and so that column of readiness includes everything up to the point where",
    "start": "1080480",
    "end": "1086080"
  },
  {
    "text": "that probe passes so a lot of conditions are trapped we already saw uh upstream that other conditions are",
    "start": "1086080",
    "end": "1092799"
  },
  {
    "text": "trapped by that so we can't really rely on the",
    "start": "1092799",
    "end": "1098720"
  },
  {
    "text": "controllers to give us that information we need to go directly to the pods in this case so",
    "start": "1098720",
    "end": "1105360"
  },
  {
    "text": "i can use get on a pod",
    "start": "1105600",
    "end": "1110640"
  },
  {
    "text": "we'll call use the res ex example and if i go to something like a yaml output",
    "start": "1110640",
    "end": "1117600"
  },
  {
    "text": "i can see that under the conditions for my pod i do have a false",
    "start": "1118559",
    "end": "1124720"
  },
  {
    "text": "for the pod scheduled condition and then i get the actual message",
    "start": "1124720",
    "end": "1130799"
  },
  {
    "text": "as the reason so this will take the event that traps the reason why the scheduler couldn't schedule it",
    "start": "1130799",
    "end": "1137440"
  },
  {
    "text": "and inject it so i can extract it directly so i can actually traverse this output",
    "start": "1137440",
    "end": "1143200"
  },
  {
    "text": "if i wanted to with the json path outputter go status conditions and extract this message um and find",
    "start": "1143200",
    "end": "1151520"
  },
  {
    "text": "that each one of my pods have some sort of uh scheduling issue",
    "start": "1151520",
    "end": "1157120"
  },
  {
    "text": "right and so uh if we go through each one i'll use describe on the other ones",
    "start": "1157120",
    "end": "1165840"
  },
  {
    "text": "we can see that nodes aren't available because of",
    "start": "1169679",
    "end": "1175039"
  },
  {
    "text": "things like resources or volumes and",
    "start": "1175039",
    "end": "1181279"
  },
  {
    "text": "because we're dealing with the scheduler and pods the messages are going to be related to",
    "start": "1182160",
    "end": "1188240"
  },
  {
    "text": "the pods i didn't even bother going to the controllers because they would just lead me on a wild goose chase right so",
    "start": "1188240",
    "end": "1194240"
  },
  {
    "text": "if i go up one level let's do describe",
    "start": "1194240",
    "end": "1201200"
  },
  {
    "text": "right it did what it was supposed to do and that's the event that we see it created the pods that it needed to create it's",
    "start": "1204159",
    "end": "1210880"
  },
  {
    "text": "just the fact that the scheduler can't uh reconcile the use of the resources so",
    "start": "1210880",
    "end": "1219520"
  },
  {
    "text": "uh going back to the pending symptoms right the controller outputs are going to look identical to what we saw before",
    "start": "1219520",
    "end": "1225520"
  },
  {
    "text": "when the controller was having an issue but uh the pods going to actually exist as opposed to before when pods just didn't",
    "start": "1225520",
    "end": "1232080"
  },
  {
    "text": "exist it's going to return pending of course in this scenario",
    "start": "1232080",
    "end": "1237360"
  },
  {
    "text": "and then you'll see pod scheduled as false as part of its status condition you can get that message field",
    "start": "1237360",
    "end": "1243280"
  },
  {
    "text": "but there's not going to be any containers so the difference between something that you need to troubleshoot at the",
    "start": "1243280",
    "end": "1248480"
  },
  {
    "text": "container level versus the pod level is that essentially container status will be no there are no containers right because",
    "start": "1248480",
    "end": "1254000"
  },
  {
    "text": "they you can't create containers unless the pod has actually been scheduled so",
    "start": "1254000",
    "end": "1259120"
  },
  {
    "text": "some common causes here things like insufficient resources right if you don't have enough cpu or memory",
    "start": "1259120",
    "end": "1265679"
  },
  {
    "text": "things like node selectors so if i use a node name a node selector an infinity that would prevent that and",
    "start": "1265679",
    "end": "1272559"
  },
  {
    "text": "then volumes these are kind of the primary three things that the scheduler used to schedule a pod the",
    "start": "1272559",
    "end": "1280000"
  },
  {
    "text": "last one here uh priority class preemption is kind of an advanced use case that i didn't go over here",
    "start": "1280000",
    "end": "1286080"
  },
  {
    "text": "but can look very similar to the first which is the insufficient resources",
    "start": "1286080",
    "end": "1291600"
  },
  {
    "text": "because you'll have a bunch of pods that are running that may be a lower priority class",
    "start": "1291600",
    "end": "1297840"
  },
  {
    "text": "and so they will then if a higher priority pod comes along",
    "start": "1297840",
    "end": "1304880"
  },
  {
    "text": "and resources are scarce those pods will get evicted in favor of",
    "start": "1304880",
    "end": "1311039"
  },
  {
    "text": "one that has a higher priority and needs those resources in which case the events you'll see will",
    "start": "1311039",
    "end": "1317200"
  },
  {
    "text": "look like insufficient cpu or insufficient memory because the new pending pods that got evicted",
    "start": "1317200",
    "end": "1324080"
  },
  {
    "text": "there are replacements for the old ones that were running at one point",
    "start": "1324080",
    "end": "1328960"
  },
  {
    "text": "but unless you see that actually happen right in sequence it's hard to tell that",
    "start": "1329200",
    "end": "1335679"
  },
  {
    "text": "uh it even happened at all because the new pods i have no relationship to the old pots that were",
    "start": "1335679",
    "end": "1341280"
  },
  {
    "text": "actually running so that can be a tough one to look through so uh running",
    "start": "1341280",
    "end": "1348240"
  },
  {
    "text": "so once we have pods that are actually scheduled and running right we're getting down to the uh",
    "start": "1348240",
    "end": "1354559"
  },
  {
    "text": "bottom swim lane here containers each have their status as",
    "start": "1354559",
    "end": "1359760"
  },
  {
    "text": "tracked so this includes in containers this includes init containers this also includes ephemeral containers if that's",
    "start": "1359760",
    "end": "1364960"
  },
  {
    "text": "enabled on your particular cluster and so you again you can use things like the container statuses",
    "start": "1364960",
    "end": "1373200"
  },
  {
    "text": "to group this information and look through it there are three different types waiting this is",
    "start": "1373600",
    "end": "1379360"
  },
  {
    "text": "kind of the default state of a container so anytime it's waiting to actually be",
    "start": "1379360",
    "end": "1384559"
  },
  {
    "text": "created if it's mounting volumes like configmaps or secrets or if there's",
    "start": "1384559",
    "end": "1390320"
  },
  {
    "text": "a crash loop or an error it will go into a waiting state running",
    "start": "1390320",
    "end": "1395679"
  },
  {
    "text": "is anything that's of course got to process and if there's any hooks that have been",
    "start": "1395679",
    "end": "1402080"
  },
  {
    "text": "specified then those have completed successfully so you can determine that okay my my hook was",
    "start": "1402080",
    "end": "1409120"
  },
  {
    "text": "ran successfully and same thing with terminated if you have a pre-stop hook you won't see terminated until that",
    "start": "1409120",
    "end": "1414840"
  },
  {
    "text": "completes uh and then you'll get your zero non-zero so that sounds pretty straightforward right everything's",
    "start": "1414840",
    "end": "1420799"
  },
  {
    "text": "fine right you've got a controller that has created a pod the scheduler has",
    "start": "1420799",
    "end": "1426880"
  },
  {
    "text": "uh scheduled to a node the kubelet has created the containers why are we even talking about this",
    "start": "1426880",
    "end": "1433039"
  },
  {
    "text": "right everything's just fine correct right well if that's the case then we actually wouldn't be here talking about",
    "start": "1433039",
    "end": "1439760"
  },
  {
    "text": "it so let's clear our cluster again",
    "start": "1439760",
    "end": "1444520"
  },
  {
    "text": "and we'll apply our new set of pods",
    "start": "1447360",
    "end": "1453960"
  },
  {
    "text": "and see what sort of things we get into so uh a little bit fast with the get all",
    "start": "1458000",
    "end": "1463440"
  },
  {
    "text": "we'll run that again right so again looking at the controllers right",
    "start": "1463440",
    "end": "1468480"
  },
  {
    "text": "if we go from the top down that we've done before they look very similar to other other",
    "start": "1468480",
    "end": "1473520"
  },
  {
    "text": "cases right it's a hard place to start to debug from but if we look at the pods directly",
    "start": "1473520",
    "end": "1479679"
  },
  {
    "text": "we get a little bit more details we know that they have one",
    "start": "1479679",
    "end": "1484880"
  },
  {
    "text": "in one case two containers but one of them is in peril so in this case we get an extra status",
    "start": "1484880",
    "end": "1492080"
  },
  {
    "text": "message this was not included in the official pod statuses this is actually to help us so",
    "start": "1492080",
    "end": "1500799"
  },
  {
    "text": "we know there's something causing an error here causing a container to",
    "start": "1500799",
    "end": "1507520"
  },
  {
    "text": "fail and get restarted and so just having a running in that case",
    "start": "1507520",
    "end": "1513120"
  },
  {
    "text": "would be a lot harder to troubleshoot so there are other cases that we'll look at at the very end of this",
    "start": "1513120",
    "end": "1519200"
  },
  {
    "text": "that help us debug by replacing the macro states of just like pending",
    "start": "1519200",
    "end": "1525520"
  },
  {
    "text": "running with these other detailed uh status messages so",
    "start": "1525520",
    "end": "1531520"
  },
  {
    "text": "although we haven't really looked at that yet there are ways that we can populate the status section and give us more",
    "start": "1531520",
    "end": "1538080"
  },
  {
    "text": "clues when we want to uh have an easier time debugging right so",
    "start": "1538080",
    "end": "1544000"
  },
  {
    "text": "in this case i can look at my containers in the container status array",
    "start": "1544000",
    "end": "1550400"
  },
  {
    "text": "and the easiest way to do that is getting the pod and we'll do the restart pod",
    "start": "1550400",
    "end": "1557840"
  },
  {
    "text": "and you can see that we've got two containers in here and we've got a restart count of four and a restart",
    "start": "1560159",
    "end": "1565520"
  },
  {
    "text": "count of zero right and so this one's not ready and this one's ready and so we",
    "start": "1565520",
    "end": "1571840"
  },
  {
    "text": "can very easily see that the database here is failing and then we have the message",
    "start": "1571840",
    "end": "1577760"
  },
  {
    "text": "for the waiting state so that's in the waiting stay because it's in the crash loop and",
    "start": "1577760",
    "end": "1583600"
  },
  {
    "text": "the related message right in front of us if i were to instead let's say describe",
    "start": "1583600",
    "end": "1589200"
  },
  {
    "text": "this pod",
    "start": "1589200",
    "end": "1591760"
  },
  {
    "text": "i get similar messages from things like the events but back off restarting failed container",
    "start": "1596480",
    "end": "1604400"
  },
  {
    "text": "which i don't know right because it's just a generic",
    "start": "1604400",
    "end": "1609679"
  },
  {
    "text": "message but by leveraging something like uh",
    "start": "1609679",
    "end": "1614880"
  },
  {
    "text": "minus o yaml with git i can relate the actual status message to the container",
    "start": "1614880",
    "end": "1621039"
  },
  {
    "text": "that has the problem right and so being able to",
    "start": "1621039",
    "end": "1628559"
  },
  {
    "text": "customize what i see coming back from cube ctl helps me",
    "start": "1628799",
    "end": "1634159"
  },
  {
    "text": "to debug faster so i know we're running out of time pretty quickly um",
    "start": "1634159",
    "end": "1641080"
  },
  {
    "text": "now there's one use case that i want to point out here this one seems to be healthy and running just fine uh this is",
    "start": "1643600",
    "end": "1650399"
  },
  {
    "text": "a an example of a liveness probe and so that's easily determined from",
    "start": "1650399",
    "end": "1657520"
  },
  {
    "text": "just describe you'll see that as an event and since we only have one container in there",
    "start": "1658480",
    "end": "1664640"
  },
  {
    "text": "anyway you can see that the readiness probe has failed for that one so easy enough to",
    "start": "1664640",
    "end": "1671760"
  },
  {
    "text": "get from events but going back here uh nothing seems to be wrong with this",
    "start": "1671760",
    "end": "1678240"
  },
  {
    "text": "container right it's running it's ready the controller is happy but",
    "start": "1678240",
    "end": "1684720"
  },
  {
    "text": "if i show you where it's running",
    "start": "1684720",
    "end": "1691039"
  },
  {
    "text": "so it's running on worker one and i go over here and i stop worker one",
    "start": "1691039",
    "end": "1697279"
  },
  {
    "text": "from functioning in my two node cluster if i continue to",
    "start": "1697279",
    "end": "1703520"
  },
  {
    "text": "get this pod i know that pods not running",
    "start": "1703520",
    "end": "1710320"
  },
  {
    "text": "but kubernetes is telling me that pod is still running because",
    "start": "1710320",
    "end": "1716399"
  },
  {
    "text": "remember the in the uh the swim lanes the agent responsible for reporting",
    "start": "1716399",
    "end": "1722799"
  },
  {
    "text": "these things upstream is the kubelet i just disabled the kubelet so",
    "start": "1722799",
    "end": "1729120"
  },
  {
    "text": "i have no indication that this pod is no longer available to clients",
    "start": "1730000",
    "end": "1735840"
  },
  {
    "text": "from this standpoint but if i again dig in",
    "start": "1735840",
    "end": "1742240"
  },
  {
    "text": "i can see that the readiness condition has set to false because the node controller",
    "start": "1746640",
    "end": "1755840"
  },
  {
    "text": "found that the heartbeat of the kubelet where this pod was running has decayed",
    "start": "1757279",
    "end": "1763440"
  },
  {
    "text": "long enough to declare it unready",
    "start": "1763440",
    "end": "1768480"
  },
  {
    "text": "we don't actually know what's wrong with this pod because the kubit is no longer communicating that",
    "start": "1768480",
    "end": "1773600"
  },
  {
    "text": "but to be safe we stop sending traffic to it so this will",
    "start": "1773600",
    "end": "1778799"
  },
  {
    "text": "affect things like endpoints controllers so this pod would no longer receive traffic from clients",
    "start": "1778799",
    "end": "1784799"
  },
  {
    "text": "but if i go back to my get still running",
    "start": "1784799",
    "end": "1790240"
  },
  {
    "text": "right so you have to know where to look sometimes now at a certain point this is going to",
    "start": "1790240",
    "end": "1796000"
  },
  {
    "text": "go to terminating because kubernetes will eventually give up on the pod or give up on the node",
    "start": "1796000",
    "end": "1802080"
  },
  {
    "text": "and terminate all the pods on that node because the node is not coming back however if we just",
    "start": "1802080",
    "end": "1809120"
  },
  {
    "text": "simply bring the node back kubelet will heartbeat again and then",
    "start": "1809120",
    "end": "1814399"
  },
  {
    "text": "the readiness that we saw on the describe will actually flip back to true",
    "start": "1814399",
    "end": "1819679"
  },
  {
    "text": "and it will continue to receive traffic so",
    "start": "1819679",
    "end": "1825279"
  },
  {
    "text": "sometimes running doesn't actually mean running right",
    "start": "1825279",
    "end": "1831840"
  },
  {
    "text": "okay so um turns out all uh all was not well",
    "start": "1831840",
    "end": "1838559"
  },
  {
    "text": "what's that so uh some of the symptoms and some of the differences between the symptoms uh",
    "start": "1838559",
    "end": "1844000"
  },
  {
    "text": "so again controllers not gonna be very helpful uh running is going to be",
    "start": "1844000",
    "end": "1851039"
  },
  {
    "text": "set on your git pod ready is not going to have uh equal values for your current desired",
    "start": "1851039",
    "end": "1856559"
  },
  {
    "text": "schedule will be true because we're past the scheduling swim lane things like ready and containers ready",
    "start": "1856559",
    "end": "1861840"
  },
  {
    "text": "are going to be false because those containers are going to be",
    "start": "1861840",
    "end": "1867039"
  },
  {
    "text": "unhealthy and so you can find messages like containers with unready status will give you container",
    "start": "1867120",
    "end": "1874240"
  },
  {
    "text": "names within things like different outputs and the different states of the containers",
    "start": "1874240",
    "end": "1880960"
  },
  {
    "text": "of course will base change based on cost the difference between something like a probe",
    "start": "1880960",
    "end": "1887200"
  },
  {
    "text": "failure and an actual error is that running will be true",
    "start": "1887200",
    "end": "1892880"
  },
  {
    "text": "for a probe failure ready of course will be false something that's crashing will be in a waiting state",
    "start": "1892880",
    "end": "1898880"
  },
  {
    "text": "whereas they'll both share the ready equals false state right now with the node failure again",
    "start": "1898880",
    "end": "1905840"
  },
  {
    "text": "controllers are going to look normal because we think the thing's still going once",
    "start": "1905840",
    "end": "1911440"
  },
  {
    "text": "that timestamp decays about 40 seconds you'll see a mismatch between ready and",
    "start": "1911440",
    "end": "1916559"
  },
  {
    "text": "available show up in your cube ctl output [Music]",
    "start": "1916559",
    "end": "1922320"
  },
  {
    "text": "right running and ready is going to be there and that's going to be completely",
    "start": "1922320",
    "end": "1927360"
  },
  {
    "text": "misleading so common cause as we saw with",
    "start": "1927360",
    "end": "1933840"
  },
  {
    "text": "but this is a node failure like kubelet is down can't report in so what happens when",
    "start": "1933840",
    "end": "1938960"
  },
  {
    "text": "we saw one example this right error versus crashly back off what happens when",
    "start": "1938960",
    "end": "1944000"
  },
  {
    "text": "we have other examples let me clear this cluster again",
    "start": "1944000",
    "end": "1950880"
  },
  {
    "text": "and we'll apply",
    "start": "1950880",
    "end": "1953919"
  },
  {
    "text": "the other this is kubernetes helping us",
    "start": "1956960",
    "end": "1963600"
  },
  {
    "text": "so that the status condition of these pods",
    "start": "1963600",
    "end": "1968720"
  },
  {
    "text": "is has to do with what errors right they're actually independent state so if i look for",
    "start": "1968720",
    "end": "1976799"
  },
  {
    "text": "this if i use this command json path where i get the items so all my pods and i look to look at the",
    "start": "1976799",
    "end": "1983919"
  },
  {
    "text": "phase of all my pods they're actually all an impending state but kubernetes is helping us by saying well",
    "start": "1983919",
    "end": "1991760"
  },
  {
    "text": "this one uh which is trying to mount a config map can't get that config map",
    "start": "1991760",
    "end": "1997200"
  },
  {
    "text": "this one has some sort of problem with an image right a mis type and an image or some",
    "start": "1997200",
    "end": "2002399"
  },
  {
    "text": "other issue this one is not so clear just container creating forever",
    "start": "2002399",
    "end": "2008799"
  },
  {
    "text": "so i actually have to dig in on that one",
    "start": "2008799",
    "end": "2012480"
  },
  {
    "text": "and now in this case it's a secret right we're trying to mount a secret for the pod it's not working so",
    "start": "2017519",
    "end": "2024960"
  },
  {
    "text": "something like where a container gets stuck creating forever it's got a dependency and that",
    "start": "2024960",
    "end": "2030480"
  },
  {
    "text": "dependency has not been fulfilled now in other cases like configmaps uh",
    "start": "2030480",
    "end": "2036320"
  },
  {
    "text": "better details right you can see it just with kubectl get but in this case we have to",
    "start": "2036320",
    "end": "2042240"
  },
  {
    "text": "dig in a little bit more okay so uh",
    "start": "2042240",
    "end": "2047600"
  },
  {
    "text": "right so even though the status up phase is always going to be one of the standard phases",
    "start": "2047600",
    "end": "2053760"
  },
  {
    "text": "getting the container status state.reason is going to give you more clues as to",
    "start": "2053760",
    "end": "2059200"
  },
  {
    "text": "what's actually happening and kubernetes helps us by surfacing these types of messages",
    "start": "2059200",
    "end": "2065280"
  },
  {
    "text": "for and we didn't cover this here because it was in the previous section so that you can help",
    "start": "2065280",
    "end": "2070720"
  },
  {
    "text": "help you debug a common commonly occurring issues that exists so",
    "start": "2070720",
    "end": "2076000"
  },
  {
    "text": "now you kind of know what coupe cuddle said so thank you guys",
    "start": "2076000",
    "end": "2083240"
  }
]