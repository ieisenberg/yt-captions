[
  {
    "text": "good afternoon everyone welcome to the talk I'm timing a software engineer of",
    "start": "320",
    "end": "6279"
  },
  {
    "text": "airb B I work in Cloud infra team I'm currently focusing on building a high",
    "start": "6279",
    "end": "12559"
  },
  {
    "text": "performance and reliable system for Airbnb internal DNS previously in AWS I",
    "start": "12559",
    "end": "19080"
  },
  {
    "text": "worked on their blog storage platform I love my current job as it motivates me",
    "start": "19080",
    "end": "25160"
  },
  {
    "text": "every day to learn think and explore something new I outside of work I enjoy",
    "start": "25160",
    "end": "31679"
  },
  {
    "text": "baking hiking skiing and growing tomatoes and sunflowers in my",
    "start": "31679",
    "end": "37200"
  },
  {
    "text": "yard today I'm going to talk about their DNS in kubernetes and share about the",
    "start": "37200",
    "end": "43079"
  },
  {
    "text": "Airbnb kubernetes DNS use cases and solutions here is our agenda today first",
    "start": "43079",
    "end": "50719"
  },
  {
    "text": "I will talk about their DNS functionality inside kubernetes then I'm",
    "start": "50719",
    "end": "56079"
  },
  {
    "text": "going to share how CS works as a cluster DS server some takeaways of integration",
    "start": "56079",
    "end": "63079"
  },
  {
    "text": "of cordings in airbnb's kubernetes infrastructure also share some major DS",
    "start": "63079",
    "end": "69040"
  },
  {
    "text": "use cases in Airbnb and our Solutions finally I'm going to talk",
    "start": "69040",
    "end": "74520"
  },
  {
    "text": "about some multic claster DS Explorations before I start let me ask a",
    "start": "74520",
    "end": "81759"
  },
  {
    "text": "question how many of you have had to deal with or troubleshoot DNS issues in",
    "start": "81759",
    "end": "87400"
  },
  {
    "text": "kubernetes and found it confusing wow I see so many hands thank you then",
    "start": "87400",
    "end": "94720"
  },
  {
    "text": "today we are going to break it down by the end of the talk we will have a better understanding of kubernetes",
    "start": "94720",
    "end": "103119"
  },
  {
    "text": "DNS so let's have a look together of how a DS request is generally resolved in",
    "start": "103119",
    "end": "109399"
  },
  {
    "text": "the kubernetes cluster the DS request is sent out by the application running",
    "start": "109399",
    "end": "115119"
  },
  {
    "text": "kubernetes pod the resolver is a first step of DS look up here the resolver",
    "start": "115119",
    "end": "122439"
  },
  {
    "text": "refers to the DS resolver library that runs in the system to provide core",
    "start": "122439",
    "end": "128039"
  },
  {
    "text": "functionalities for resolving domain names into IP addresses the actual resolver Library",
    "start": "128039",
    "end": "134680"
  },
  {
    "text": "usage can be various depending on the programming language and operating system example in go there are two type",
    "start": "134680",
    "end": "142519"
  },
  {
    "text": "of resolvers one is CTO resolver that calls standard C library GC and the",
    "start": "142519",
    "end": "149560"
  },
  {
    "text": "other is pure gold DS resolver the resolver consumes the DNS",
    "start": "149560",
    "end": "155920"
  },
  {
    "text": "configuration on the pod which is are specified in the resolve file the DNS",
    "start": "155920",
    "end": "162599"
  },
  {
    "text": "configuration file contains the name server IP that the resolver will send the query to if we are using a cluster d",
    "start": "162599",
    "end": "170599"
  },
  {
    "text": "as server this name server IP should be the cluster IP of the cluster DS service",
    "start": "170599",
    "end": "178400"
  },
  {
    "text": "example the service is is called kubs with class IP 10. 32.0 do10 that",
    "start": "178400",
    "end": "185720"
  },
  {
    "text": "resolver will send the traffic to this IP after the request reaches C Service",
    "start": "185720",
    "end": "193879"
  },
  {
    "text": "CP proxy will route the traffic to Cluster DS server pod if your coup proxy",
    "start": "193879",
    "end": "200440"
  },
  {
    "text": "runs in I table mode that traffic will be R via app table rules here the",
    "start": "200440",
    "end": "207080"
  },
  {
    "text": "cluster DS server is cor DS C DS is a flexible extensible DS server",
    "start": "207080",
    "end": "214000"
  },
  {
    "text": "that is currently used as a default kubernetes cluster DNS when C DS runs as",
    "start": "214000",
    "end": "220560"
  },
  {
    "text": "a cluster DS server it interacts with a CO API server as asynchronously to",
    "start": "220560",
    "end": "227200"
  },
  {
    "text": "resolve their kubernetes defined service and P DNS for the other domain record that are",
    "start": "227200",
    "end": "234560"
  },
  {
    "text": "not defined in kubernetes cluster can be forward to Upstream the server example",
    "start": "234560",
    "end": "241120"
  },
  {
    "text": "Route 53 Route 53 as a recursive DS server can resolve public domain",
    "start": "241120",
    "end": "249720"
  },
  {
    "text": "names we just mentioned that the resolve confile holds the P DS",
    "start": "249720",
    "end": "256400"
  },
  {
    "text": "configuration now let's have a closer look at how this configuration affects",
    "start": "256400",
    "end": "261759"
  },
  {
    "text": "DS quaries you're able to read the P DS",
    "start": "261759",
    "end": "267120"
  },
  {
    "text": "configuration from SL Etc SL resolve. com pass on your pod here is an example",
    "start": "267120",
    "end": "274320"
  },
  {
    "text": "of the resolve com file we can see it contains name server search paths and",
    "start": "274320",
    "end": "280360"
  },
  {
    "text": "options the name server spe specified the DS name server's IP address their",
    "start": "280360",
    "end": "286360"
  },
  {
    "text": "search fied defines a list of search domains and the option section allows",
    "start": "286360",
    "end": "291840"
  },
  {
    "text": "modification to certain internal resolver settings the commonly use option like OSS time out attempts",
    "start": "291840",
    "end": "300400"
  },
  {
    "text": "and do Define the threshold for the number of dot which must appear in your",
    "start": "300400",
    "end": "305600"
  },
  {
    "text": "name before an initial absolute query will be made time out sets amount of",
    "start": "305600",
    "end": "311960"
  },
  {
    "text": "time the resolver will wait for a response from a remote name server before retrying the query via a",
    "start": "311960",
    "end": "319240"
  },
  {
    "text": "different name server at times set their number of times the resolver will send a",
    "start": "319240",
    "end": "324840"
  },
  {
    "text": "query to its name servers before giving up and returning an error to the in",
    "start": "324840",
    "end": "330960"
  },
  {
    "text": "application this configuration might still seems confusing let's work through",
    "start": "330960",
    "end": "336680"
  },
  {
    "text": "some examples here is a configuration and let's configure ww.",
    "start": "336680",
    "end": "344160"
  },
  {
    "text": "airbnb.com there are two dots in this record which meets the UND do Strat cold",
    "start": "344160",
    "end": "350919"
  },
  {
    "text": "that the query will be directly sent to the name server and the DS server used",
    "start": "350919",
    "end": "356520"
  },
  {
    "text": "here is Route 53 which can response with a result",
    "start": "356520",
    "end": "361600"
  },
  {
    "text": "great let's see another example of pqd resolution what is our pqdn PQ represent",
    "start": "361600",
    "end": "369680"
  },
  {
    "text": "partially qualified domain names which means only a portion of the full domain name in contract fqdn stands for fully",
    "start": "369680",
    "end": "378639"
  },
  {
    "text": "qualified domain names which represent the complete domain names of an address",
    "start": "378639",
    "end": "384160"
  },
  {
    "text": "with the property as configuration settings both pqdn and fqdn can be",
    "start": "384160",
    "end": "389639"
  },
  {
    "text": "resolve to the IPS successfully kubernetes defined DS record of service in format of service",
    "start": "389639",
    "end": "397560"
  },
  {
    "text": "name. namespace SVC do cluster domain which can be resolved to their service",
    "start": "397560",
    "end": "403800"
  },
  {
    "text": "cluster IP which is a virtual IP within the range of a cluster service IP range",
    "start": "403800",
    "end": "410160"
  },
  {
    "text": "example service name is full Nam space is bar and the cluster domain is a",
    "start": "410160",
    "end": "415639"
  },
  {
    "text": "cluster. loal the service pqdn is a full.box and the fqdn is full. bar. SVC do",
    "start": "415639",
    "end": "423919"
  },
  {
    "text": "cluster. loal the fqdn here is a record that can be resolved by the cluster DNS",
    "start": "423919",
    "end": "431520"
  },
  {
    "text": "with the proper DNS configurations the pqdn can also be resolved how does it work let's see this",
    "start": "431520",
    "end": "439319"
  },
  {
    "text": "in as configuration in this example n do is one full do bar record has one dot meets",
    "start": "439319",
    "end": "448440"
  },
  {
    "text": "their n do stretch good full record is directly sent to DS server but cluster",
    "start": "448440",
    "end": "455599"
  },
  {
    "text": "DS server can't resolve it so return NX domain represent the domain name does",
    "start": "455599",
    "end": "462560"
  },
  {
    "text": "not exist this result is not returned to the client yet as a configuration contains a",
    "start": "462560",
    "end": "470280"
  },
  {
    "text": "search domain list the resolver will append each search domain and send the",
    "start": "470280",
    "end": "476280"
  },
  {
    "text": "request to the name server in sequence full. bar append the first search domain",
    "start": "476280",
    "end": "483000"
  },
  {
    "text": "here construct the record as full. bar. bar. SVC do cluster. local and sent a",
    "start": "483000",
    "end": "491199"
  },
  {
    "text": "request to the name server unfortunately this is still not the correct record and",
    "start": "491199",
    "end": "497280"
  },
  {
    "text": "got another NX Dom here don't give up keep trying okay append next searchman",
    "start": "497280",
    "end": "505080"
  },
  {
    "text": "and the record is constructed as full. bar. SV c.c. local nice this is a record",
    "start": "505080",
    "end": "514279"
  },
  {
    "text": "we can get the correct response and this result will be returned to the",
    "start": "514279",
    "end": "521080"
  },
  {
    "text": "client interesting story is that n.5 is our kubernetes cluster First DS policy",
    "start": "521080",
    "end": "528760"
  },
  {
    "text": "default DS option settings which makes their domain name to append all the search domains in the search pass before",
    "start": "528760",
    "end": "536360"
  },
  {
    "text": "finally sending out the query as it is client is still able to get the correct",
    "start": "536360",
    "end": "542000"
  },
  {
    "text": "response but client side DNS request latency is not",
    "start": "542000",
    "end": "547880"
  },
  {
    "text": "optimized not good then you may ask can I customize",
    "start": "547880",
    "end": "554040"
  },
  {
    "text": "these configurations yes there are ways to customize P DS",
    "start": "554040",
    "end": "559800"
  },
  {
    "text": "configurations the P DS configuration can be customized with different",
    "start": "559800",
    "end": "564959"
  },
  {
    "text": "settings first is kuate configuration kuate contains logic to construct pod DS",
    "start": "564959",
    "end": "571760"
  },
  {
    "text": "configuration when creating a pod kuate configuration can be used to customize",
    "start": "571760",
    "end": "577200"
  },
  {
    "text": "the Pod DS configuration specific fils to use as a",
    "start": "577200",
    "end": "582880"
  },
  {
    "text": "first cluster DS is a list of IP addresses for cluster DS server if set",
    "start": "582880",
    "end": "589320"
  },
  {
    "text": "Cate will configure all container in the cluster to use these addresses as name",
    "start": "589320",
    "end": "594600"
  },
  {
    "text": "server for a pod using clust First DS policy",
    "start": "594600",
    "end": "599720"
  },
  {
    "text": "example in Airbnb we configure it to the coordinat service cluster IP cluster domain is our DS domain for",
    "start": "599720",
    "end": "608640"
  },
  {
    "text": "this cluster if set Cate will configure all containers in the cluster to search",
    "start": "608640",
    "end": "615120"
  },
  {
    "text": "this domain in addition to the basis container DS configuration search domains of pod using cluster First DS",
    "start": "615120",
    "end": "623079"
  },
  {
    "text": "policy resolve C is a resolver configuration file used as a basis for",
    "start": "623079",
    "end": "628560"
  },
  {
    "text": "the positing resolution configuration this is a configuration used by pod",
    "start": "628560",
    "end": "633800"
  },
  {
    "text": "using default DS policy you can set it to a pass that is amount on the Node",
    "start": "633800",
    "end": "640480"
  },
  {
    "text": "during node bootstrapping that contains the desired DNS configuration you want",
    "start": "640480",
    "end": "645920"
  },
  {
    "text": "to customize to which is also the way we use in Airbnb P DS policy is also a way to",
    "start": "645920",
    "end": "654639"
  },
  {
    "text": "define p DS configurations kuate contains logic to create P config DNS",
    "start": "654639",
    "end": "661040"
  },
  {
    "text": "configuration based on DS policy kubernetes defines four DNS policies",
    "start": "661040",
    "end": "667800"
  },
  {
    "text": "theault is targeted to inherit configuration from the host or basis container DS resolution configuration in",
    "start": "667800",
    "end": "674920"
  },
  {
    "text": "Cate clust first is a target to use cluster DS server to resolve cluster",
    "start": "674920",
    "end": "681560"
  },
  {
    "text": "domain DS record note that default is not the default DS policy if a DS policy",
    "start": "681560",
    "end": "689639"
  },
  {
    "text": "is not specifically specified then cluster first is used cluster first with host net is for",
    "start": "689639",
    "end": "698079"
  },
  {
    "text": "p running with host Network should explicitly set the policy to use Custer",
    "start": "698079",
    "end": "703320"
  },
  {
    "text": "DS server now means ordinance settings are supposed to be provided using their",
    "start": "703320",
    "end": "710160"
  },
  {
    "text": "DS config fil in their P Spike and yep",
    "start": "710160",
    "end": "715639"
  },
  {
    "text": "the DS config file in the PO is the are there another way to customize PA DS",
    "start": "715639",
    "end": "721880"
  },
  {
    "text": "configuration it allows you to Define all the P DS",
    "start": "721880",
    "end": "727040"
  },
  {
    "text": "configurations if we choose to customize PA DS configuration then it should accommodate",
    "start": "727040",
    "end": "734279"
  },
  {
    "text": "the applications DS use cases let's see an example here in airb we have the use",
    "start": "734279",
    "end": "741560"
  },
  {
    "text": "case that the application run in service mesh and need to reach AWS Services",
    "start": "741560",
    "end": "747560"
  },
  {
    "text": "service mesh is a dedicated infrastructure layer for facilitating service to service communication using a",
    "start": "747560",
    "end": "754959"
  },
  {
    "text": "proxy application running service MH can reach other applications using pqdm",
    "start": "754959",
    "end": "760560"
  },
  {
    "text": "format defined of service name. namespace and the full DNS record is",
    "start": "760560",
    "end": "766720"
  },
  {
    "text": "service name. namespace mesh domain and this mesh DNS is stored in Route 53 so",
    "start": "766720",
    "end": "775240"
  },
  {
    "text": "we can Define that the search list contains a search domain and their end do set head two name server is Route",
    "start": "775240",
    "end": "784240"
  },
  {
    "text": "53 their MH pqdn only contains one dot that will always be appended appended to",
    "start": "784240",
    "end": "791760"
  },
  {
    "text": "the match domain first then sent out a query to the name server which is what",
    "start": "791760",
    "end": "796800"
  },
  {
    "text": "we want and AWS Services endpoint contains at least two dots and it meet the stret",
    "start": "796800",
    "end": "804120"
  },
  {
    "text": "cold here will be directly sent out to the name server so with this this DS",
    "start": "804120",
    "end": "809839"
  },
  {
    "text": "configuration both kind of DS requires are optimized for achieving the",
    "start": "809839",
    "end": "815120"
  },
  {
    "text": "functionality through a single DNS request one notice is to pay attention",
    "start": "815120",
    "end": "823440"
  },
  {
    "text": "to the DNS configuration limit gipc standard Library DS resolver removes the",
    "start": "823440",
    "end": "831079"
  },
  {
    "text": "limit of the number of search domains and characters of search pass since",
    "start": "831079",
    "end": "836240"
  },
  {
    "text": "since v2.26 kubernetes also extended its search",
    "start": "836240",
    "end": "842399"
  },
  {
    "text": "domains and the search pass limit since v1.28 B utils contains their dig host",
    "start": "842399",
    "end": "850600"
  },
  {
    "text": "and xlo up utilities for quing DS still has a limit so if you're using",
    "start": "850600",
    "end": "857560"
  },
  {
    "text": "kubernetes version higher than v128 and uses more than its search domains in",
    "start": "857560",
    "end": "863120"
  },
  {
    "text": "their search pass but use dig or host or NX loab command which is using b ut",
    "start": "863120",
    "end": "869600"
  },
  {
    "text": "tails that have eight search domain limit that the search domain larger than",
    "start": "869600",
    "end": "874720"
  },
  {
    "text": "eight won't be used now everyone should have a decent",
    "start": "874720",
    "end": "881920"
  },
  {
    "text": "understanding of PA DS configurations in the DS request life",
    "start": "881920",
    "end": "887079"
  },
  {
    "text": "ccle cycle we talked about C DS can be used as a cluster DS server to resolve",
    "start": "887079",
    "end": "894480"
  },
  {
    "text": "kuber netics defined service and P DS let's have a deep per look at this",
    "start": "894480",
    "end": "901560"
  },
  {
    "text": "part how is cording s used as a kubernetes cluster DS server cords is a",
    "start": "901560",
    "end": "908720"
  },
  {
    "text": "DS server also forwarder WR in go that change plugins each plugin performs a",
    "start": "908720",
    "end": "915759"
  },
  {
    "text": "specific DS function C DS provide a bunch of plug-in which Powers its",
    "start": "915759",
    "end": "922279"
  },
  {
    "text": "functionalities and flexibilities to make cords perform as a",
    "start": "922279",
    "end": "927880"
  },
  {
    "text": "Custer server you need to enable and configure the kubernetes plug-in",
    "start": "927880",
    "end": "933959"
  },
  {
    "text": "kubernetes plugin implements the kubernetes D as based the service",
    "start": "933959",
    "end": "939000"
  },
  {
    "text": "Discovery it uses kubernetes client API watch function to track their service",
    "start": "939000",
    "end": "944959"
  },
  {
    "text": "and endpoint objects from CP API server and construct their DNS record based on",
    "start": "944959",
    "end": "951319"
  },
  {
    "text": "their kubernetes defined service and P DS format it maintains a local cache of",
    "start": "951319",
    "end": "957800"
  },
  {
    "text": "the watched object you can also enable other commonly used",
    "start": "957800",
    "end": "963360"
  },
  {
    "text": "plugins as shown in the graph like ready plug-in serves a ready Endo required for",
    "start": "963360",
    "end": "970600"
  },
  {
    "text": "Readiness probe Health plug-in serves a health end point required for laes probe",
    "start": "970600",
    "end": "977639"
  },
  {
    "text": "promises plugin serves a matrix and point required for export Matrix log",
    "start": "977639",
    "end": "983600"
  },
  {
    "text": "plugin enables query login cach plugin enables a server side front and cache",
    "start": "983600",
    "end": "989880"
  },
  {
    "text": "and forward plugin is for facilitating proxy DS requests to Upstream",
    "start": "989880",
    "end": "997440"
  },
  {
    "text": "resolvers cordings also support customized plug-in when you can write a",
    "start": "998000",
    "end": "1003440"
  },
  {
    "text": "plugin for che in your specific DS functionality note that the plugins",
    "start": "1003440",
    "end": "1009839"
  },
  {
    "text": "order is very important the order is defined in the according as code plugin.",
    "start": "1009839",
    "end": "1015759"
  },
  {
    "text": "CFG file if you develop a custom plugin you also need to properly insert it into",
    "start": "1015759",
    "end": "1022000"
  },
  {
    "text": "the right position of the plugins chain each plugin can be configured to",
    "start": "1022000",
    "end": "1029280"
  },
  {
    "text": "handle different domain or Zone request cords uses or cor file stored in config",
    "start": "1029280",
    "end": "1036038"
  },
  {
    "text": "map for configurations in the cor file you can configure cluster. loal domains request",
    "start": "1036039",
    "end": "1042880"
  },
  {
    "text": "be handled by kubernetes plug-in and all the other domains request be handled by",
    "start": "1042880",
    "end": "1047918"
  },
  {
    "text": "forward plugin which forwards the DS request to an upstream DS",
    "start": "1047919",
    "end": "1054440"
  },
  {
    "text": "server here is an example callil in the callil you can also apply other useful",
    "start": "1054440",
    "end": "1061640"
  },
  {
    "text": "configurations like enable query login for eror response queries set a frontend",
    "start": "1061640",
    "end": "1067280"
  },
  {
    "text": "cach TL enable automatic reload when cording core file change",
    "start": "1067280",
    "end": "1074360"
  },
  {
    "text": "Etc C DS as a cluster DS a server can resolve kuber netics defined DS for",
    "start": "1074400",
    "end": "1080679"
  },
  {
    "text": "services and PS record as shown in the graph This Record are used for",
    "start": "1080679",
    "end": "1088000"
  },
  {
    "text": "kubernetes service discovery which is widely adopted in various kubernetes",
    "start": "1088000",
    "end": "1093440"
  },
  {
    "text": "services and projects by March 2024 Airbnb have been",
    "start": "1093440",
    "end": "1101679"
  },
  {
    "text": "fully integrated with cordings in our kubernetes platform it's a successful",
    "start": "1101679",
    "end": "1107919"
  },
  {
    "text": "integration and noticeable for its operational excellence and",
    "start": "1107919",
    "end": "1113440"
  },
  {
    "text": "soreness here are some takeways I'd like to share that probably can help folks",
    "start": "1113440",
    "end": "1119080"
  },
  {
    "text": "who are going to murate to use coding s first is to evaluate the function and",
    "start": "1119080",
    "end": "1124799"
  },
  {
    "text": "performance before adoption in our evaluation we found that we can get",
    "start": "1124799",
    "end": "1130760"
  },
  {
    "text": "around 70% performance Improvement of average DS request latency which",
    "start": "1130760",
    "end": "1136640"
  },
  {
    "text": "elevates our confidence of ating CS into our",
    "start": "1136640",
    "end": "1142519"
  },
  {
    "text": "platform you the second is using the same DS service during",
    "start": "1143000",
    "end": "1148640"
  },
  {
    "text": "migration when cumul cluster is bootstrapped we can easily Reserve an IP",
    "start": "1148640",
    "end": "1154200"
  },
  {
    "text": "for cluster DS service but creating a new service in the cluster with another",
    "start": "1154200",
    "end": "1159559"
  },
  {
    "text": "IP and changing the P DS configuration to use the new name server IP are tons",
    "start": "1159559",
    "end": "1165600"
  },
  {
    "text": "of work a KU service can select a pod it is supposed to abstract through a label",
    "start": "1165600",
    "end": "1174520"
  },
  {
    "text": "selector so we can use the same DS service during migration example the previous service",
    "start": "1174520",
    "end": "1182000"
  },
  {
    "text": "is created as coup DS we can create a new deployment with a p spec selector of",
    "start": "1182000",
    "end": "1188679"
  },
  {
    "text": "the same CS service in this way we don't need to",
    "start": "1188679",
    "end": "1193919"
  },
  {
    "text": "create a new kubernetes service or change part DS configuration",
    "start": "1193919",
    "end": "1199320"
  },
  {
    "text": "it saves us lot of e migration effort and can also gradually shift the DNS",
    "start": "1199320",
    "end": "1204720"
  },
  {
    "text": "traffic in the cluster which we want to control the blast",
    "start": "1204720",
    "end": "1210400"
  },
  {
    "text": "radius the other takeaway is are making sure to set appropriate memory and CPU",
    "start": "1210760",
    "end": "1217480"
  },
  {
    "text": "request for the cords container when cins serve as a clust in",
    "start": "1217480",
    "end": "1223120"
  },
  {
    "text": "as server its memory usage scales with a number of services and end points due to",
    "start": "1223120",
    "end": "1229000"
  },
  {
    "text": "the local cache from the kubernetes plugin all PS have the same local cach",
    "start": "1229000",
    "end": "1234880"
  },
  {
    "text": "size which doesn't automatically scale with HPA AKA horizontal p",
    "start": "1234880",
    "end": "1242360"
  },
  {
    "text": "autoscaler in our evaluation we found cording as performance is a CPU driven",
    "start": "1242360",
    "end": "1248600"
  },
  {
    "text": "enabling HBA based on CPU usage is",
    "start": "1248600",
    "end": "1253480"
  },
  {
    "text": "beneficial now we have a comprehensive understanding of DS request within the",
    "start": "1254559",
    "end": "1261360"
  },
  {
    "text": "kubernetes cluster next I would like to share some multicluster DNS use cases we have in",
    "start": "1261360",
    "end": "1269679"
  },
  {
    "text": "Airbnb and how we set up the DNS architecture to fulfill the use cases we",
    "start": "1269679",
    "end": "1277840"
  },
  {
    "text": "have one use case I want to share is a service to service Communication in",
    "start": "1278080",
    "end": "1283679"
  },
  {
    "text": "service mesh in previous slides we mentioned a bit about service mesh",
    "start": "1283679",
    "end": "1289480"
  },
  {
    "text": "record here service mesh is a dedicated infrastructure layer for facilitating",
    "start": "1289480",
    "end": "1295360"
  },
  {
    "text": "service to service communication between services or microservices using a proxy",
    "start": "1295360",
    "end": "1302440"
  },
  {
    "text": "e is an open- Source service MH that helps organizations run distributed",
    "start": "1302440",
    "end": "1308840"
  },
  {
    "text": "microservices based applications anywhere in Airbnb we are using e",
    "start": "1308840",
    "end": "1316360"
  },
  {
    "text": "service mesh our service MH architecture is using a dedicated MH management",
    "start": "1316360",
    "end": "1323159"
  },
  {
    "text": "cluster for E steel control plan and applications running other multiple",
    "start": "1323159",
    "end": "1328360"
  },
  {
    "text": "workload clusters e proxy setar is injected for",
    "start": "1328360",
    "end": "1334039"
  },
  {
    "text": "all applications run in service MH as a e data plan e control plan will watch all the",
    "start": "1334039",
    "end": "1343120"
  },
  {
    "text": "Clusters end points and merge end points in the same name space together this end",
    "start": "1343120",
    "end": "1348880"
  },
  {
    "text": "points information will be pushed to the E proxy set cars for traffic routing",
    "start": "1348880",
    "end": "1355000"
  },
  {
    "text": "applications running in workload clusters can communicate with each other through pqd",
    "start": "1355000",
    "end": "1361559"
  },
  {
    "text": "format to achieve it we create a service object in MH management cluster using",
    "start": "1361559",
    "end": "1368760"
  },
  {
    "text": "their same names space of applications pod this guarantees each application run",
    "start": "1368760",
    "end": "1376039"
  },
  {
    "text": "mesh have a unique IP this service DS record is synced to",
    "start": "1376039",
    "end": "1382279"
  },
  {
    "text": "Route 53 through external DS service external DS service is targeted",
    "start": "1382279",
    "end": "1389240"
  },
  {
    "text": "for synchronizing exposed kubernetes service with DNS providers applications",
    "start": "1389240",
    "end": "1395840"
  },
  {
    "text": "running workload clusters can resolve DNS through Route",
    "start": "1395840",
    "end": "1401400"
  },
  {
    "text": "53 I think you all know how to configure DS configuration to allow resolver",
    "start": "1401400",
    "end": "1407360"
  },
  {
    "text": "resolve DS with pqd in format after getting this Ser service IP",
    "start": "1407360",
    "end": "1414279"
  },
  {
    "text": "the rest of the traffic route to the Target endpoint will be handled by E",
    "start": "1414279",
    "end": "1421279"
  },
  {
    "text": "proxy another use case I want to show here is a multicluster direct P",
    "start": "1423159",
    "end": "1429840"
  },
  {
    "text": "addressing in distributed database running on the kubernetes cluster saful",
    "start": "1429840",
    "end": "1435840"
  },
  {
    "text": "set is important for data par ation and synchronization seful set pod has a",
    "start": "1435840",
    "end": "1443400"
  },
  {
    "text": "predictable DS name each pod in a state for set derives its host name from the",
    "start": "1443400",
    "end": "1450320"
  },
  {
    "text": "name of State for set and the ordinal of the Pod direct P addressing ensures that",
    "start": "1450320",
    "end": "1457320"
  },
  {
    "text": "database queries can reach their target data partition and cross-cluster replicas can sync the data with each",
    "start": "1457320",
    "end": "1466520"
  },
  {
    "text": "other to achieve multicluster state for set direct P addressing we can also",
    "start": "1466520",
    "end": "1473000"
  },
  {
    "text": "leverage external DNS with Route 53 in each cluster the P IPS are synced",
    "start": "1473000",
    "end": "1480919"
  },
  {
    "text": "to Route 53 with their different domain name and the application can reach the",
    "start": "1480919",
    "end": "1486880"
  },
  {
    "text": "target P by querying the Ping s with Target domain from Route",
    "start": "1486880",
    "end": "1494720"
  },
  {
    "text": "53 pretty easy right but there are also challenges you may",
    "start": "1494720",
    "end": "1502279"
  },
  {
    "text": "notice that we are heavily using Cloud DS services like Route 53 there are some",
    "start": "1502279",
    "end": "1509440"
  },
  {
    "text": "limitations we might like Route 53 throttling route 503 API have five",
    "start": "1509440",
    "end": "1516440"
  },
  {
    "text": "requests per second per AWS account limit which is a hard limit that impacts",
    "start": "1516440",
    "end": "1521720"
  },
  {
    "text": "Route 53 managed DS record update and adabs has 1,000",
    "start": "1521720",
    "end": "1528840"
  },
  {
    "text": "24 package per second per elastic network interface limit which is also a",
    "start": "1528840",
    "end": "1534520"
  },
  {
    "text": "hard limit that can impact the DS queries there are some other approaches",
    "start": "1534520",
    "end": "1540919"
  },
  {
    "text": "we are exploring around kubernetes provides multicluster",
    "start": "1540919",
    "end": "1546520"
  },
  {
    "text": "service API and coordinat have a multicluster plugin that supports",
    "start": "1546520",
    "end": "1551880"
  },
  {
    "text": "kubernetes multicluster DNS resolution it introduces cluster set terminology",
    "start": "1551880",
    "end": "1558360"
  },
  {
    "text": "ology a placeholder name for group of clusters with a high degree of mutual",
    "start": "1558360",
    "end": "1563600"
  },
  {
    "text": "trust and shared ownership that shared services amongst themselves and is using",
    "start": "1563600",
    "end": "1569600"
  },
  {
    "text": "a multicluster service controller that syncs service across clusters and Mak",
    "start": "1569600",
    "end": "1575000"
  },
  {
    "text": "them available for multicluster service Discovery and",
    "start": "1575000",
    "end": "1580600"
  },
  {
    "text": "connectivity as we're using e service mesh inside Airbnb e d aear also support",
    "start": "1581600",
    "end": "1589559"
  },
  {
    "text": "multicluster DS request resolution within the mesh when proxy DS or as request from an",
    "start": "1589559",
    "end": "1597960"
  },
  {
    "text": "application will be redirect to the sidecar which stores a local mapping of",
    "start": "1597960",
    "end": "1603080"
  },
  {
    "text": "domain names to IP addresses but the limitation is it's only apply to the",
    "start": "1603080",
    "end": "1609679"
  },
  {
    "text": "applications run with e proxy side car and welcome to discuss if you're",
    "start": "1609679",
    "end": "1616840"
  },
  {
    "text": "using multicluster DS resolution in your system and we'd like to get more ideas",
    "start": "1616840",
    "end": "1622200"
  },
  {
    "text": "and takeaways from the community this concludes today's talk",
    "start": "1622200",
    "end": "1628640"
  },
  {
    "text": "welcome to scan the QR code to give me feedback and we have several minutes for",
    "start": "1628640",
    "end": "1633960"
  },
  {
    "text": "the Q&A are there any",
    "start": "1633960",
    "end": "1638360"
  },
  {
    "text": "questions thank you",
    "start": "1640720",
    "end": "1644960"
  },
  {
    "text": "for cords how does it support cash inv validation as as records",
    "start": "1650720",
    "end": "1656760"
  },
  {
    "text": "change you're asking uh how cording as cash validation change yeah or for cash",
    "start": "1656760",
    "end": "1663760"
  },
  {
    "text": "invalidation so as a record changes where does that invalidation come in",
    "start": "1663760",
    "end": "1669200"
  },
  {
    "text": "yeah it's are for if you're using the front end cash of cording s there you",
    "start": "1669200",
    "end": "1674679"
  },
  {
    "text": "need to set the TTL of the record that is a the time you said if that expired",
    "start": "1674679",
    "end": "1681080"
  },
  {
    "text": "the TTL then it is invalid okay thank you are there any other questions yeah",
    "start": "1681080",
    "end": "1689440"
  },
  {
    "text": "is it possible to use NS update to dynamically update DNS zones with C",
    "start": "1689440",
    "end": "1695960"
  },
  {
    "text": "DNS uh Dynamic update cords using NS",
    "start": "1695960",
    "end": "1702000"
  },
  {
    "text": "update sorry could you say again NS update NS update",
    "start": "1702000",
    "end": "1708640"
  },
  {
    "text": "this is are like if this uh I I heard you're asking about the NX update which",
    "start": "1711679",
    "end": "1718960"
  },
  {
    "text": "is our yeah it's RFC I forget which one it is it's what bind n uses for dynamic",
    "start": "1718960",
    "end": "1725559"
  },
  {
    "text": "updates it would be use we have a use case where it could potentially be useful for internal zones for testing",
    "start": "1725559",
    "end": "1734399"
  },
  {
    "text": "purposes so that is our if for you find it uh for cording as that plugin if",
    "start": "1734399",
    "end": "1740440"
  },
  {
    "text": "support that functionality that will be uh able to support cuz there are a bunch",
    "start": "1740440",
    "end": "1745600"
  },
  {
    "text": "of airb uh C uh coordinat plugins that you can explore around the of it so you",
    "start": "1745600",
    "end": "1753120"
  },
  {
    "text": "may refer to their uh specific plug-in manual that can find their uh answer",
    "start": "1753120",
    "end": "1758640"
  },
  {
    "text": "there thank you I have a question here",
    "start": "1758640",
    "end": "1766600"
  },
  {
    "text": "um sorry in terms of uh no local cach DNS uh have you explored that options",
    "start": "1766600",
    "end": "1773000"
  },
  {
    "text": "what are what are the challenges you face with local cash DNS versus the code DNS itself not cach DNS right not local",
    "start": "1773000",
    "end": "1781559"
  },
  {
    "text": "cach DNS yeah not the local cash DNS the is the other DNS cach layer you can",
    "start": "1781559",
    "end": "1788240"
  },
  {
    "text": "apply it on the uh on on the Node that is a rent as a demon set which is also",
    "start": "1788240",
    "end": "1794519"
  },
  {
    "text": "rent a kubernetes uh sorry a cord as service as a demon set in their node",
    "start": "1794519",
    "end": "1800519"
  },
  {
    "text": "that is depends on that is depends on your like their service requires like",
    "start": "1800519",
    "end": "1807960"
  },
  {
    "text": "how performance latency you want to have it's definitely can improve their DS",
    "start": "1807960",
    "end": "1814679"
  },
  {
    "text": "request uh performance but you may evaluate if your system is really need",
    "start": "1814679",
    "end": "1820240"
  },
  {
    "text": "there or this is doesn't really uh need it because that introduce additional",
    "start": "1820240",
    "end": "1825679"
  },
  {
    "text": "part on each node and introduce add cost so if you use not local um cach that is",
    "start": "1825679",
    "end": "1833159"
  },
  {
    "text": "request first come to their node local cach then you can configure this not local cache DS request to reach",
    "start": "1833159",
    "end": "1840480"
  },
  {
    "text": "cordings so in Airbnb have you tried it and you found any challenging with that",
    "start": "1840480",
    "end": "1845679"
  },
  {
    "text": "and you didn't like it that pattern uh we are still evaluate about that part",
    "start": "1845679",
    "end": "1851279"
  },
  {
    "text": "this is are like in",
    "start": "1851279",
    "end": "1854200"
  },
  {
    "text": "progressing uh okay last question okay uh the question is more about uh how did",
    "start": "1856440",
    "end": "1861960"
  },
  {
    "text": "you do the puff testing about the core DNS versus the DNS core U did you use",
    "start": "1861960",
    "end": "1867120"
  },
  {
    "text": "like a cash invalidate when you're doing the testing or how are you as assuring",
    "start": "1867120",
    "end": "1872919"
  },
  {
    "text": "that the performance is improved sorry could you speak louder yeah uh can can you explain a little bit more about how",
    "start": "1872919",
    "end": "1879720"
  },
  {
    "text": "do how does your puff test was running and uh how do you evaluated that cordan is a problem and how how much efficiency",
    "start": "1879720",
    "end": "1887039"
  },
  {
    "text": "you improved on all of that because in general you your client will be caching your I resoled IP right so did you have",
    "start": "1887039",
    "end": "1895480"
  },
  {
    "text": "any client that will invalidate the or is it going to establish new resolution",
    "start": "1895480",
    "end": "1900880"
  },
  {
    "text": "whenever you make a new call and how did you do that yeah when you want to evaluate that is uh related with how",
    "start": "1900880",
    "end": "1909279"
  },
  {
    "text": "you're going your uh applications use case and how you want to evaluate based",
    "start": "1909279",
    "end": "1915399"
  },
  {
    "text": "on um their specific use case you want to evaluate example if you don't want to",
    "start": "1915399",
    "end": "1921159"
  },
  {
    "text": "evaluate the cash you can just disable it so that is a fully just the evaluate",
    "start": "1921159",
    "end": "1927039"
  },
  {
    "text": "which is without cash but if your you see the cash size is enough to um to",
    "start": "1927039",
    "end": "1934960"
  },
  {
    "text": "hold your like DS record in the cluster which means most of the DS record will",
    "start": "1934960",
    "end": "1940159"
  },
  {
    "text": "be cached in that case you can also enable the cash evaluate with the cash enabled so that is a based on like your",
    "start": "1940159",
    "end": "1947919"
  },
  {
    "text": "use case and your DS patterns okay okay thank you yeah thanks everyone if",
    "start": "1947919",
    "end": "1954799"
  },
  {
    "text": "there thanks everyone so in the end we invite you to explore career",
    "start": "1954799",
    "end": "1961279"
  },
  {
    "text": "opportunities with airb B visit careers. arb.com and we look forward to welcom",
    "start": "1961279",
    "end": "1968159"
  },
  {
    "text": "you to our team thanks everyone",
    "start": "1968159",
    "end": "1972880"
  }
]