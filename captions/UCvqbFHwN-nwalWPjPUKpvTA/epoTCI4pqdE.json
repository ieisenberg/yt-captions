[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "hello everyone thanks for having me i'm",
    "start": "160",
    "end": "2560"
  },
  {
    "text": "excited to talk about info-like apps",
    "start": "2560",
    "end": "4960"
  },
  {
    "text": "github suffice cloud-natively managed",
    "start": "4960",
    "end": "6799"
  },
  {
    "text": "infrastructure with crossplane and argo",
    "start": "6799",
    "end": "9120"
  },
  {
    "text": "cd",
    "start": "9120",
    "end": "10320"
  },
  {
    "text": "this is alozein a devops engineer",
    "start": "10320",
    "end": "12320"
  },
  {
    "text": "working for tetrapak",
    "start": "12320",
    "end": "14320"
  },
  {
    "text": "prior to joining tetrapak i completed",
    "start": "14320",
    "end": "16720"
  },
  {
    "text": "three master's degrees all at once",
    "start": "16720",
    "end": "19439"
  },
  {
    "text": "interface of computing and",
    "start": "19439",
    "end": "20800"
  },
  {
    "text": "communications for sustainable",
    "start": "20800",
    "end": "22480"
  },
  {
    "text": "development",
    "start": "22480",
    "end": "24640"
  },
  {
    "start": "24000",
    "end": "24000"
  },
  {
    "text": "lately there have been lots of talk",
    "start": "24640",
    "end": "26720"
  },
  {
    "text": "about deploying applications following",
    "start": "26720",
    "end": "28880"
  },
  {
    "text": "the keytops operating model however",
    "start": "28880",
    "end": "31679"
  },
  {
    "text": "there are often gaps in doing so when it",
    "start": "31679",
    "end": "33680"
  },
  {
    "text": "comes to infrastructure",
    "start": "33680",
    "end": "35680"
  },
  {
    "text": "where those applications run on top of",
    "start": "35680",
    "end": "38079"
  },
  {
    "text": "until recently infrastructure",
    "start": "38079",
    "end": "40160"
  },
  {
    "text": "provisioning and its lifecycle",
    "start": "40160",
    "end": "42000"
  },
  {
    "text": "management were handled in a different",
    "start": "42000",
    "end": "44160"
  },
  {
    "text": "way than application deployment and",
    "start": "44160",
    "end": "46719"
  },
  {
    "text": "likely",
    "start": "46719",
    "end": "47840"
  },
  {
    "text": "not following all four principles of git",
    "start": "47840",
    "end": "50640"
  },
  {
    "text": "ups",
    "start": "50640",
    "end": "52239"
  },
  {
    "text": "but first what is good ops well it's a",
    "start": "52239",
    "end": "55360"
  },
  {
    "text": "set of principles practices and tools to",
    "start": "55360",
    "end": "58480"
  },
  {
    "text": "manage infrastructure and application",
    "start": "58480",
    "end": "60480"
  },
  {
    "text": "deployment using a developer friendly",
    "start": "60480",
    "end": "62800"
  },
  {
    "text": "tool git",
    "start": "62800",
    "end": "65119"
  },
  {
    "text": "basically githubs in the context of",
    "start": "65119",
    "end": "67600"
  },
  {
    "text": "kubernetes aims to address the challenge",
    "start": "67600",
    "end": "70159"
  },
  {
    "text": "of how do we ensure that our kubernetes",
    "start": "70159",
    "end": "73119"
  },
  {
    "text": "cluster reflects the declarative",
    "start": "73119",
    "end": "75680"
  },
  {
    "text": "configuration we have in it also known",
    "start": "75680",
    "end": "77920"
  },
  {
    "text": "as",
    "start": "77920",
    "end": "78640"
  },
  {
    "text": "the desired state",
    "start": "78640",
    "end": "81840"
  },
  {
    "text": "this can be achieved with the help of",
    "start": "81840",
    "end": "83840"
  },
  {
    "text": "github's controllers such as",
    "start": "83840",
    "end": "86400"
  },
  {
    "text": "argo cd flux and rancher fleet",
    "start": "86400",
    "end": "90799"
  },
  {
    "text": "the notion of github's controller",
    "start": "90799",
    "end": "93040"
  },
  {
    "text": "is to have a continuously running loop",
    "start": "93040",
    "end": "96400"
  },
  {
    "text": "that performs the following",
    "start": "96400",
    "end": "98960"
  },
  {
    "text": "get clone ripple",
    "start": "98960",
    "end": "100560"
  },
  {
    "text": "discover manifest in the",
    "start": "100560",
    "end": "102799"
  },
  {
    "text": "clone repo and run",
    "start": "102799",
    "end": "105119"
  },
  {
    "text": "keep control div and keep control apply",
    "start": "105119",
    "end": "107520"
  },
  {
    "text": "against those manifest to handle",
    "start": "107520",
    "end": "109360"
  },
  {
    "text": "configure drifts",
    "start": "109360",
    "end": "112320"
  },
  {
    "text": "there's more that githubs can offer",
    "start": "112960",
    "end": "115360"
  },
  {
    "text": "beyond application deployments",
    "start": "115360",
    "end": "117840"
  },
  {
    "text": "a github's approach can provide a better",
    "start": "117840",
    "end": "120079"
  },
  {
    "text": "experience for",
    "start": "120079",
    "end": "121600"
  },
  {
    "text": "creating consistent and repeatable",
    "start": "121600",
    "end": "124000"
  },
  {
    "text": "environments for replication teams",
    "start": "124000",
    "end": "126799"
  },
  {
    "text": "it's also about having the informal way",
    "start": "126799",
    "end": "130000"
  },
  {
    "text": "for managing both apps and",
    "start": "130000",
    "end": "131760"
  },
  {
    "text": "infrastructure alike",
    "start": "131760",
    "end": "135280"
  },
  {
    "text": "as organizations are becoming more cloud",
    "start": "135920",
    "end": "138640"
  },
  {
    "start": "136000",
    "end": "136000"
  },
  {
    "text": "native a new paradigm is being ushered",
    "start": "138640",
    "end": "141760"
  },
  {
    "text": "into place",
    "start": "141760",
    "end": "143520"
  },
  {
    "text": "and the new technologies are needed",
    "start": "143520",
    "end": "146319"
  },
  {
    "text": "the existing infrastructures code tools",
    "start": "146319",
    "end": "149440"
  },
  {
    "text": "like the continuous reconciliation",
    "start": "149440",
    "end": "152080"
  },
  {
    "text": "the automatic drift detection that",
    "start": "152080",
    "end": "154720"
  },
  {
    "text": "ensures the system's actual state",
    "start": "154720",
    "end": "157440"
  },
  {
    "text": "matches the declarative",
    "start": "157440",
    "end": "159280"
  },
  {
    "text": "desired state defined in it",
    "start": "159280",
    "end": "162879"
  },
  {
    "text": "let's go to the chase and talk about",
    "start": "162879",
    "end": "164800"
  },
  {
    "text": "crossplane crossplane a cloud native",
    "start": "164800",
    "end": "167440"
  },
  {
    "text": "infrastructures code tool is a cncf",
    "start": "167440",
    "end": "170160"
  },
  {
    "text": "incubating project",
    "start": "170160",
    "end": "172160"
  },
  {
    "text": "that is redefining how to manage",
    "start": "172160",
    "end": "174000"
  },
  {
    "text": "infrastructure using the kubernetes api",
    "start": "174000",
    "end": "177680"
  },
  {
    "text": "via the custom resource definitions",
    "start": "177680",
    "end": "179360"
  },
  {
    "text": "abbreviated as crds and controllers",
    "start": "179360",
    "end": "184159"
  },
  {
    "text": "with a cross plane",
    "start": "184159",
    "end": "185680"
  },
  {
    "text": "if at any point the actual state diverts",
    "start": "185680",
    "end": "189680"
  },
  {
    "text": "from the desired state it gets corrected",
    "start": "189680",
    "end": "193200"
  },
  {
    "text": "based on a control plane reconciliation",
    "start": "193200",
    "end": "196720"
  },
  {
    "text": "the reasons why crossplane fits in the",
    "start": "196720",
    "end": "199519"
  },
  {
    "text": "githubs realm boiled down to the",
    "start": "199519",
    "end": "201840"
  },
  {
    "text": "philosophy of crossplane",
    "start": "201840",
    "end": "204159"
  },
  {
    "text": "that is to manage infrastructure the",
    "start": "204159",
    "end": "205920"
  },
  {
    "text": "same way we manage our kubernetes",
    "start": "205920",
    "end": "208239"
  },
  {
    "text": "workloads by leveraging a ubiquitous",
    "start": "208239",
    "end": "210799"
  },
  {
    "text": "language kubernetes objects manifest",
    "start": "210799",
    "end": "213200"
  },
  {
    "text": "that is becoming lingua franca for",
    "start": "213200",
    "end": "215519"
  },
  {
    "text": "devops together with the ability to use",
    "start": "215519",
    "end": "217920"
  },
  {
    "text": "the same api the kubernetes api for",
    "start": "217920",
    "end": "221519"
  },
  {
    "text": "everything",
    "start": "221519",
    "end": "223360"
  },
  {
    "text": "besides the fact that infrastructure",
    "start": "223360",
    "end": "226000"
  },
  {
    "text": "state is the same as gates where the",
    "start": "226000",
    "end": "228319"
  },
  {
    "text": "kubernetes objects manifest are stored",
    "start": "228319",
    "end": "230480"
  },
  {
    "text": "and not to mention the automatic drift",
    "start": "230480",
    "end": "233040"
  },
  {
    "text": "detection and sync",
    "start": "233040",
    "end": "236239"
  },
  {
    "start": "236000",
    "end": "236000"
  },
  {
    "text": "crossplane introduces a few core crds",
    "start": "238400",
    "end": "241120"
  },
  {
    "text": "into our management cluster",
    "start": "241120",
    "end": "243760"
  },
  {
    "text": "which corresponds to the following a",
    "start": "243760",
    "end": "245599"
  },
  {
    "text": "provider that is in charge of",
    "start": "245599",
    "end": "248400"
  },
  {
    "text": "interacting with",
    "start": "248400",
    "end": "250080"
  },
  {
    "text": "cloud services and to do so a provider",
    "start": "250080",
    "end": "252720"
  },
  {
    "text": "config is required",
    "start": "252720",
    "end": "254480"
  },
  {
    "text": "by an account such as service principal",
    "start": "254480",
    "end": "256880"
  },
  {
    "text": "in azure",
    "start": "256880",
    "end": "258639"
  },
  {
    "text": "also a managed resource that is cross",
    "start": "258639",
    "end": "261040"
  },
  {
    "text": "planes",
    "start": "261040",
    "end": "262000"
  },
  {
    "text": "representation of a resource instance in",
    "start": "262000",
    "end": "264479"
  },
  {
    "text": "a provider",
    "start": "264479",
    "end": "266240"
  },
  {
    "text": "with these three components together",
    "start": "266240",
    "end": "268160"
  },
  {
    "text": "with the core controller we can create",
    "start": "268160",
    "end": "270400"
  },
  {
    "text": "resources however that's not all what",
    "start": "270400",
    "end": "273759"
  },
  {
    "text": "crossplay can do",
    "start": "273759",
    "end": "276400"
  },
  {
    "text": "as i stated in the cloud native",
    "start": "276400",
    "end": "278000"
  },
  {
    "text": "infrastructure book by justin garrison",
    "start": "278000",
    "end": "280080"
  },
  {
    "text": "and chris nova",
    "start": "280080",
    "end": "282240"
  },
  {
    "text": "cloud native infrastructure",
    "start": "282240",
    "end": "284960"
  },
  {
    "text": "is infrastructure that is hidden behind",
    "start": "284960",
    "end": "287840"
  },
  {
    "text": "useful obstructions",
    "start": "287840",
    "end": "289680"
  },
  {
    "text": "controlled by apis managed by software",
    "start": "289680",
    "end": "294000"
  },
  {
    "text": "crossplane enables",
    "start": "294000",
    "end": "296400"
  },
  {
    "text": "sampling infrastructure from multiple",
    "start": "296400",
    "end": "298639"
  },
  {
    "text": "vendors and exposes it as",
    "start": "298639",
    "end": "300880"
  },
  {
    "text": "a higher level abstraction using",
    "start": "300880",
    "end": "302720"
  },
  {
    "text": "composites",
    "start": "302720",
    "end": "304000"
  },
  {
    "text": "a composite resource is a custom",
    "start": "304000",
    "end": "306000"
  },
  {
    "text": "resource that is composed of managed",
    "start": "306000",
    "end": "308240"
  },
  {
    "text": "resources allowing us to abstract away",
    "start": "308240",
    "end": "310720"
  },
  {
    "text": "low level infrastructure details",
    "start": "310720",
    "end": "314720"
  },
  {
    "text": "they are defined by composite resource",
    "start": "314720",
    "end": "317440"
  },
  {
    "text": "definitions and compositions",
    "start": "317440",
    "end": "321039"
  },
  {
    "text": "a claim",
    "start": "321039",
    "end": "322320"
  },
  {
    "text": "is an instance of a composite resource",
    "start": "322320",
    "end": "326240"
  },
  {
    "text": "crossplane also has the concept",
    "start": "326240",
    "end": "328639"
  },
  {
    "text": "of packages",
    "start": "328639",
    "end": "330080"
  },
  {
    "text": "like the previously mentioned providers",
    "start": "330080",
    "end": "332000"
  },
  {
    "text": "packages and also configuration packages",
    "start": "332000",
    "end": "335360"
  },
  {
    "text": "packages themselves can also be",
    "start": "335360",
    "end": "337360"
  },
  {
    "text": "packaged",
    "start": "337360",
    "end": "339840"
  },
  {
    "start": "340000",
    "end": "340000"
  },
  {
    "text": "now let's talk a bit about argo cd",
    "start": "345039",
    "end": "348160"
  },
  {
    "text": "which is one of the fastest growing open",
    "start": "348160",
    "end": "350000"
  },
  {
    "text": "source github stores out there",
    "start": "350000",
    "end": "352800"
  },
  {
    "text": "the project is part of the argo family a",
    "start": "352800",
    "end": "355520"
  },
  {
    "text": "set of cloud native tools for running",
    "start": "355520",
    "end": "357680"
  },
  {
    "text": "and managing jobs and applications on",
    "start": "357680",
    "end": "360319"
  },
  {
    "text": "kubernetes",
    "start": "360319",
    "end": "362319"
  },
  {
    "text": "to start working with argo cd we need to",
    "start": "362319",
    "end": "364880"
  },
  {
    "text": "install argo cd in a kubernetes cluster",
    "start": "364880",
    "end": "368080"
  },
  {
    "text": "store kubernetes manifest in a git",
    "start": "368080",
    "end": "370160"
  },
  {
    "text": "repository and create an argo cd",
    "start": "370160",
    "end": "372319"
  },
  {
    "text": "application by defining which repository",
    "start": "372319",
    "end": "374240"
  },
  {
    "text": "to monitor and to which cluster this",
    "start": "374240",
    "end": "377039"
  },
  {
    "text": "application should be deployed",
    "start": "377039",
    "end": "380160"
  },
  {
    "text": "the argo cd application",
    "start": "380160",
    "end": "382160"
  },
  {
    "text": "can be foreign application",
    "start": "382160",
    "end": "384240"
  },
  {
    "text": "infrastructure resources or even other",
    "start": "384240",
    "end": "386720"
  },
  {
    "text": "argo cd applications which is what's",
    "start": "386720",
    "end": "388960"
  },
  {
    "text": "known as",
    "start": "388960",
    "end": "390080"
  },
  {
    "text": "the up of apps button",
    "start": "390080",
    "end": "394758"
  },
  {
    "start": "395000",
    "end": "395000"
  },
  {
    "text": "this is how both",
    "start": "397039",
    "end": "398560"
  },
  {
    "text": "crossplane and argo cd come together",
    "start": "398560",
    "end": "401840"
  },
  {
    "text": "from the left hand side",
    "start": "401840",
    "end": "403600"
  },
  {
    "text": "we have helm repositories for",
    "start": "403600",
    "end": "407120"
  },
  {
    "text": "argo cd controller so that it measures",
    "start": "407120",
    "end": "409520"
  },
  {
    "text": "itself",
    "start": "409520",
    "end": "410639"
  },
  {
    "text": "and also vietnamese sealed secrets to",
    "start": "410639",
    "end": "413360"
  },
  {
    "text": "encrypt and decrypt the secrets mainly",
    "start": "413360",
    "end": "416160"
  },
  {
    "text": "for crossplane providers config",
    "start": "416160",
    "end": "419680"
  },
  {
    "text": "regarding the git repository we have",
    "start": "419680",
    "end": "423120"
  },
  {
    "text": "argo cd applications and cross plane",
    "start": "423120",
    "end": "425440"
  },
  {
    "text": "related manifests",
    "start": "425440",
    "end": "428000"
  },
  {
    "text": "in the middle",
    "start": "428000",
    "end": "429280"
  },
  {
    "text": "there is the management cluster where",
    "start": "429280",
    "end": "431520"
  },
  {
    "text": "argo cd and cross plane are installed",
    "start": "431520",
    "end": "435280"
  },
  {
    "text": "and on the right",
    "start": "435280",
    "end": "436880"
  },
  {
    "text": "we have the different providers where",
    "start": "436880",
    "end": "439199"
  },
  {
    "text": "the resources are to be created",
    "start": "439199",
    "end": "443120"
  },
  {
    "start": "444000",
    "end": "444000"
  },
  {
    "text": "these dev resources",
    "start": "445599",
    "end": "447520"
  },
  {
    "text": "are composed of services provided by",
    "start": "447520",
    "end": "449759"
  },
  {
    "text": "four cloud providers",
    "start": "449759",
    "end": "452160"
  },
  {
    "text": "namely aws azure gcp and digitalocean",
    "start": "452160",
    "end": "457680"
  },
  {
    "text": "all in one view",
    "start": "457680",
    "end": "461120"
  },
  {
    "start": "462000",
    "end": "462000"
  },
  {
    "text": "organizations are evolving from",
    "start": "463199",
    "end": "465360"
  },
  {
    "text": "centralized management of infrastructure",
    "start": "465360",
    "end": "468160"
  },
  {
    "text": "to a self-service model",
    "start": "468160",
    "end": "470160"
  },
  {
    "text": "in which platform team defines",
    "start": "470160",
    "end": "472639"
  },
  {
    "text": "opinionated infrastructure abstractions",
    "start": "472639",
    "end": "475759"
  },
  {
    "text": "that",
    "start": "475759",
    "end": "476720"
  },
  {
    "text": "application teams can consume on demand",
    "start": "476720",
    "end": "479919"
  },
  {
    "text": "without compromising security",
    "start": "479919",
    "end": "482080"
  },
  {
    "text": "with just simple kubernetes manifest for",
    "start": "482080",
    "end": "484879"
  },
  {
    "text": "provisioning cloud resources that",
    "start": "484879",
    "end": "487120"
  },
  {
    "text": "require few parameters",
    "start": "487120",
    "end": "489360"
  },
  {
    "text": "and the name space is code",
    "start": "489360",
    "end": "492160"
  },
  {
    "text": "need a new test or sandbox environment",
    "start": "492160",
    "end": "494800"
  },
  {
    "text": "developers can spin that quickly",
    "start": "494800",
    "end": "498080"
  },
  {
    "text": "for themselves with no lead time which",
    "start": "498080",
    "end": "499919"
  },
  {
    "text": "increases their productivity and",
    "start": "499919",
    "end": "501520"
  },
  {
    "text": "autonomy",
    "start": "501520",
    "end": "504520"
  },
  {
    "text": "it's a wrap",
    "start": "506080",
    "end": "507360"
  },
  {
    "text": "applying ginoff's principles to",
    "start": "507360",
    "end": "509120"
  },
  {
    "text": "infrastructure life cycle management",
    "start": "509120",
    "end": "511280"
  },
  {
    "text": "makes it feasible to know exactly what",
    "start": "511280",
    "end": "513440"
  },
  {
    "text": "is the infrastructure state is",
    "start": "513440",
    "end": "516320"
  },
  {
    "text": "along with the other advantages it",
    "start": "516320",
    "end": "518320"
  },
  {
    "text": "provides such as reviewing the changes",
    "start": "518320",
    "end": "520479"
  },
  {
    "text": "and detecting",
    "start": "520479",
    "end": "521839"
  },
  {
    "text": "configuration drifts",
    "start": "521839",
    "end": "523440"
  },
  {
    "text": "adrift detection and automatic",
    "start": "523440",
    "end": "525519"
  },
  {
    "text": "reconciliation are key to reliably",
    "start": "525519",
    "end": "528800"
  },
  {
    "text": "manage multiple resources across cloud",
    "start": "528800",
    "end": "531120"
  },
  {
    "text": "providers",
    "start": "531120",
    "end": "533200"
  },
  {
    "text": "with crossplane",
    "start": "533200",
    "end": "534720"
  },
  {
    "text": "coupled with argo cd",
    "start": "534720",
    "end": "536480"
  },
  {
    "text": "it becomes possible to manage",
    "start": "536480",
    "end": "538480"
  },
  {
    "text": "infrastructure the same way cloud native",
    "start": "538480",
    "end": "541120"
  },
  {
    "text": "applications are managed",
    "start": "541120",
    "end": "543519"
  },
  {
    "text": "simply put",
    "start": "543519",
    "end": "544880"
  },
  {
    "text": "treating infrastructure like apps means",
    "start": "544880",
    "end": "547279"
  },
  {
    "text": "managing its life cycle following the",
    "start": "547279",
    "end": "549839"
  },
  {
    "text": "same git ops principles",
    "start": "549839",
    "end": "551839"
  },
  {
    "text": "to prevent manual failing that does not",
    "start": "551839",
    "end": "554320"
  },
  {
    "text": "confirm to get workflows",
    "start": "554320",
    "end": "558720"
  },
  {
    "text": "and that's about it folks thank you",
    "start": "559680",
    "end": "564959"
  }
]