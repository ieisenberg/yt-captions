[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "my name is jarred hickey I'm principal systems engineer at smartsheet we're up",
    "start": "900",
    "end": "7200"
  },
  {
    "text": "in Seattle we do a lot of interesting crazy things and have lots of fun doing it today I want to talk to you about",
    "start": "7200",
    "end": "13769"
  },
  {
    "text": "kubernetes networking talk to you about some of the pitfalls I've encountered and hopefully get you so you don't see",
    "start": "13769",
    "end": "21750"
  },
  {
    "text": "them yourself first I would think lots and lots of people there's many people i'd like to",
    "start": "21750",
    "end": "27869"
  },
  {
    "start": "24000",
    "end": "24000"
  },
  {
    "text": "thank-- there's probably way too many they can think the one person I do want to thank though is Eric's it him from ty",
    "start": "27869",
    "end": "34140"
  },
  {
    "text": "Guerra he's the one person it really helped me through got my first network stack up and running under kubernetes he",
    "start": "34140",
    "end": "41899"
  },
  {
    "text": "was patient enough to sort of guide me through and show me the errors that I was having",
    "start": "41899",
    "end": "47960"
  },
  {
    "text": "definitely definitely good good good resource out there I also would like to",
    "start": "47960",
    "end": "54059"
  },
  {
    "text": "say during the presentation if you have questions I'd like you to hold on to them to the end there's a lot of",
    "start": "54059",
    "end": "59520"
  },
  {
    "text": "information here especially with a 30-minute time line it's gonna be awfully hard to fit it all in and",
    "start": "59520",
    "end": "65630"
  },
  {
    "text": "hopefully we'll fit in and this time at the end for questions we'll do that if not I'll be happy to sit out in the",
    "start": "65630",
    "end": "72600"
  },
  {
    "text": "hallway and talk to people and answer questions there so that let's go ahead",
    "start": "72600",
    "end": "77729"
  },
  {
    "text": "and get started so this is a fairly typical kubernetes setup cuckoo-bananas",
    "start": "77729",
    "end": "83520"
  },
  {
    "start": "79000",
    "end": "79000"
  },
  {
    "text": "network setup principally there are three networks involved there's your physical network the one that",
    "start": "83520",
    "end": "89640"
  },
  {
    "text": "everybody's aware of it's a switch and computers are plugged into but there's two virtual networks that occur ones the",
    "start": "89640",
    "end": "96869"
  },
  {
    "text": "pod network and the other is the service network the on the pod network each pod",
    "start": "96869",
    "end": "104579"
  },
  {
    "text": "receives a virtual interface on the host a virtual Ethernet interface as a result",
    "start": "104579",
    "end": "111030"
  },
  {
    "text": "it sits out on the pod network addressed separately we'll see more of that here",
    "start": "111030",
    "end": "116700"
  },
  {
    "text": "in a moment I've tried to annotate a few other things that go on in here such as you have the qubit doing health checks",
    "start": "116700",
    "end": "123630"
  },
  {
    "text": "to each pod the Cuba that actually sits in the OS and talks to the pod through",
    "start": "123630",
    "end": "128759"
  },
  {
    "text": "the virtual interface or virtual Ethernet interface we have the server which is the abstraction that's sit",
    "start": "128759",
    "end": "136549"
  },
  {
    "text": "there on the service net but then have virtual end points to the actual pods we'll see a little bit more of that here",
    "start": "136549",
    "end": "143180"
  },
  {
    "text": "in a bit too well that's your typical stereo right there real quick I wanted",
    "start": "143180",
    "end": "152030"
  },
  {
    "start": "150000",
    "end": "150000"
  },
  {
    "text": "to touch on what network rages could you can use I actually personally like to",
    "start": "152030",
    "end": "157340"
  },
  {
    "text": "use the private address as the RFC 1918 addresses on the pod and the service",
    "start": "157340",
    "end": "163159"
  },
  {
    "text": "networks it's it solves a lot of problems a lot of networks a lot of corporate networks tend to use the 10",
    "start": "163159",
    "end": "169609"
  },
  {
    "text": "network for their backbone the standard kubernetes install tends to use those",
    "start": "169609",
    "end": "176000"
  },
  {
    "text": "address spaces too that's great if you're not conflicting but long cases it can either conflict or cause other",
    "start": "176000",
    "end": "182120"
  },
  {
    "text": "problems so that's why a lot of times I move them that does cause issues when",
    "start": "182120",
    "end": "187400"
  },
  {
    "text": "you do your install we'll talk about that here in a bit too the one thing I would say is no matter which way you go",
    "start": "187400",
    "end": "194060"
  },
  {
    "text": "keep your networking simple don't don't try to be creative don't try to take your say like 192 168 break it up make",
    "start": "194060",
    "end": "201919"
  },
  {
    "text": "part service and part pod you'll drive yourself crazy and you just caused all",
    "start": "201919",
    "end": "207560"
  },
  {
    "text": "sorts of problems down the road so just keep us keep those address ranges separated you'll be much much better so",
    "start": "207560",
    "end": "216609"
  },
  {
    "start": "216000",
    "end": "216000"
  },
  {
    "text": "I have a couple key understandings that I've tried to incorporate through this",
    "start": "216609",
    "end": "222049"
  },
  {
    "text": "and I hope everybody will start to understand the big one is that every pod can communicate to every other pod on",
    "start": "222049",
    "end": "228319"
  },
  {
    "text": "the pod network so we don't have any funny things we have to do it's just straight open up a socket and talk so",
    "start": "228319",
    "end": "234590"
  },
  {
    "text": "it's just like having a computer and talking to another computer through a typical TCP socket so there's no port",
    "start": "234590",
    "end": "242989"
  },
  {
    "text": "mapping schemes like with you're dealing with docker on two separate hosts you have to go do",
    "start": "242989",
    "end": "249199"
  },
  {
    "text": "your port mapping to be able to get one container on one host talk to another container that's not so in kubernetes",
    "start": "249199",
    "end": "254900"
  },
  {
    "text": "and that's actually a benefit make some things a lot easier",
    "start": "254900",
    "end": "260769"
  },
  {
    "start": "259000",
    "end": "259000"
  },
  {
    "text": "so if we",
    "start": "260769",
    "end": "263950"
  },
  {
    "text": "again the are connected through a virtual Ethernet it actually connects into a bridge that",
    "start": "289759",
    "end": "296150"
  },
  {
    "text": "then eventually gets out through the network stack onto the Ethernet we also have a cube proxy that runs will talk",
    "start": "296150",
    "end": "302960"
  },
  {
    "text": "more about that here in a bit when we get towards services the cube proxy ends up controlling a lot of the IP tables",
    "start": "302960",
    "end": "309130"
  },
  {
    "text": "for moving traffic around sometimes",
    "start": "309130",
    "end": "313690"
  },
  {
    "start": "314000",
    "end": "314000"
  },
  {
    "text": "looking a little bit closer at some of the network substrate the the network",
    "start": "315070",
    "end": "322910"
  },
  {
    "text": "substrate itself the the stack itself is responsible for maintaining all IP",
    "start": "322910",
    "end": "328460"
  },
  {
    "text": "information that's maintained the subnet information for all the nodes on the Cabernets cluster along with what IPS",
    "start": "328460",
    "end": "336500"
  },
  {
    "text": "are in use so whether you're using flannel calico or anything else like",
    "start": "336500",
    "end": "342140"
  },
  {
    "text": "that that's the responsibility of that stack to Maine to maintain those IPs",
    "start": "342140",
    "end": "348610"
  },
  {
    "text": "since we're given out eyepiece to every pod heavy pod gets a unique IP that's",
    "start": "349900",
    "end": "355430"
  },
  {
    "text": "that's where we're just like on a regular Network even though it's a virtual network it's just like on a virtual note of real network where each",
    "start": "355430",
    "end": "362810"
  },
  {
    "text": "pod is now able to communicate directly by just a straight IP address now here's",
    "start": "362810",
    "end": "370340"
  },
  {
    "text": "one of the critical things this is probably what my biggest failure is when I installed koobideh is the first time I",
    "start": "370340",
    "end": "375850"
  },
  {
    "text": "was I actually and I actually had many installs and I actually was doing a lot by hand but eventually by talked with",
    "start": "375850",
    "end": "384590"
  },
  {
    "text": "Joe beta at hep do he convinced me to use cube ATM and I will tell you a cube",
    "start": "384590",
    "end": "389810"
  },
  {
    "text": "ATMs like magic I love it to death now the one failure is that I had not not",
    "start": "389810",
    "end": "396260"
  },
  {
    "text": "really understanding is when I ran cube ATM I did not know I had to tell cube",
    "start": "396260",
    "end": "401540"
  },
  {
    "text": "ATM my networks for the pod and service ranges so I would just run cube ATM then",
    "start": "401540",
    "end": "408080"
  },
  {
    "text": "I decided to store my stacks and nothing would work so that's probably my biggest",
    "start": "408080",
    "end": "413800"
  },
  {
    "text": "finding here is if when you run your cubes your cubed a set up whatever you",
    "start": "413800",
    "end": "420890"
  },
  {
    "text": "use when you use cops or cue ATM or any other software out there almost all of them will require you to",
    "start": "420890",
    "end": "426860"
  },
  {
    "text": "tell tell what network ranges you're going to use and they're just command line switches or if you usually config",
    "start": "426860",
    "end": "432770"
  },
  {
    "text": "file you'll listen to the config file and that will allow you to move forward so once you specify that things get a",
    "start": "432770",
    "end": "440090"
  },
  {
    "text": "whole lot easier another thing to keep",
    "start": "440090",
    "end": "446479"
  },
  {
    "start": "444000",
    "end": "444000"
  },
  {
    "text": "in mind is that your your pod traffic all the all the communication between your pods is not going to appear on your",
    "start": "446479",
    "end": "452750"
  },
  {
    "text": "physical network not the way you think it's going to appear of course it does have to traverse that network that physical network it's actually",
    "start": "452750",
    "end": "459380"
  },
  {
    "text": "encapsulated so you won't won't be able to do a TCP dump on your physical interface and see the traffic like you",
    "start": "459380",
    "end": "465889"
  },
  {
    "text": "normally would it does depend on which network stack you install as to how you",
    "start": "465889",
    "end": "472160"
  },
  {
    "text": "look at that traffic but most of you just have a separate interface we'll see that here in a minute or two and you can",
    "start": "472160",
    "end": "477830"
  },
  {
    "text": "actually do a TCP dump on that interface",
    "start": "477830",
    "end": "482590"
  },
  {
    "text": "so again understand where your network traffic's going to be will help you in troubleshooting but also keep you from",
    "start": "484180",
    "end": "491060"
  },
  {
    "text": "being frustrated because you will get frustrated once in a while I sort of",
    "start": "491060",
    "end": "496070"
  },
  {
    "start": "493000",
    "end": "493000"
  },
  {
    "text": "added this in I originally had this in and I pulled it out for awhile and with all my many rewrites I've added it back",
    "start": "496070",
    "end": "502400"
  },
  {
    "text": "in because it caused me some grief earlier this week in preparing some of the demos here for you so I wanted to give you a little heads up CNI the",
    "start": "502400",
    "end": "510139"
  },
  {
    "text": "container I think its container yeah container network interface the container network interface is a",
    "start": "510139",
    "end": "515659"
  },
  {
    "text": "wonderful standard make it tends to unify and make things a lot easier for breaking up your stacks so you don't",
    "start": "515659",
    "end": "521810"
  },
  {
    "text": "have to configure each stack separately used to be a pain in the rear end for",
    "start": "521810",
    "end": "526930"
  },
  {
    "text": "getting stack up and running and if anybody has ever done OpenStack stuff you'll know what I'm talking about that",
    "start": "526930",
    "end": "532130"
  },
  {
    "text": "was very much a each stack was unique and how you brought it up so see and I",
    "start": "532130",
    "end": "537800"
  },
  {
    "text": "certainly solves a lot of those things the interesting thing is see and I will also accept multiple backends so you",
    "start": "537800",
    "end": "544610"
  },
  {
    "text": "could have two or three different types of way of talking over the network through your CNI but that's pretty rare",
    "start": "544610",
    "end": "552079"
  },
  {
    "text": "usually you're only going to have a single one and that was my failure earlier this week as I actually had",
    "start": "552079",
    "end": "557180"
  },
  {
    "start": "557000",
    "end": "557000"
  },
  {
    "text": "multiple configuration for in there because I was installing a couple different stacks and some of the",
    "start": "557180",
    "end": "562560"
  },
  {
    "text": "stacks were left behind and so my kubernetes setup was confused as to how to talk over the network so that's",
    "start": "562560",
    "end": "568950"
  },
  {
    "text": "something to be aware of if you're playing around and actually I also found out that cube ATM from some of the",
    "start": "568950",
    "end": "575040"
  },
  {
    "text": "latest versions of cube ATM is also installing some of the cni stuff for you",
    "start": "575040",
    "end": "580380"
  },
  {
    "text": "so that was also conflicting with me so really keep an eye on that you may",
    "start": "580380",
    "end": "586950"
  },
  {
    "text": "end up having to go clear out all your CNI configuration files as you bring your stack up to just keep it clean",
    "start": "586950",
    "end": "593130"
  },
  {
    "text": "they're located under /f c /c NE c ni many times they're put in a net d",
    "start": "593130",
    "end": "600300"
  },
  {
    "text": "directory so you'll go down in there clear them out reads up your stack and",
    "start": "600300",
    "end": "605540"
  },
  {
    "text": "should be hopefully much better this is a typical some well it's actually an older ones for an old old old sack the",
    "start": "605540",
    "end": "613980"
  },
  {
    "text": "the host local stuff which you would have to maintain the subnet and everything so I mean every machine would have a separate CNI configuration but",
    "start": "613980",
    "end": "621240"
  },
  {
    "text": "most network stacks today your CNI configuration will be the same on all",
    "start": "621240",
    "end": "626760"
  },
  {
    "text": "machines which does help a lot and lend itself to configuration management and",
    "start": "626760",
    "end": "632490"
  },
  {
    "text": "things like that so get a little demo here let's see how I get this started",
    "start": "632490",
    "end": "640590"
  },
  {
    "text": "here there we go so we start out with a brick",
    "start": "640590",
    "end": "646430"
  },
  {
    "text": "here but no moment here I'll bring up a busy box and we'll look at the Ethernet",
    "start": "788450",
    "end": "795320"
  },
  {
    "text": "interface inside the container it's still going right it looked like it",
    "start": "795320",
    "end": "803390"
  },
  {
    "text": "pause I kept I continued it there we go hit pause on maybe that's why it's paused it's so so there we go we get",
    "start": "803390",
    "end": "818720"
  },
  {
    "text": "into a busy box now we can do a interface look at the interface on it",
    "start": "818720",
    "end": "824690"
  },
  {
    "text": "then we see just a single each zero so these are the sort of things you see and this is one of the things that always",
    "start": "824690",
    "end": "830390"
  },
  {
    "text": "drove me crazy trying to bring stuff up is everybody says run these commands and everything's magical and you never know",
    "start": "830390",
    "end": "836000"
  },
  {
    "text": "what just what to expect so I'm hoping this will give people an idea of what to expect",
    "start": "836000",
    "end": "842560"
  },
  {
    "text": "backspace is my friend most the time it's the one key that gets worn out on my keyboard all right so again we see",
    "start": "870809",
    "end": "878649"
  },
  {
    "text": "the similar looking and interfaces and our routing table looks about the same",
    "start": "878649",
    "end": "884589"
  },
  {
    "text": "the only difference is the on one machine we see it round for one night",
    "start": "884589",
    "end": "891029"
  },
  {
    "text": "doubt since we just exit out it didn't terminate the part yet",
    "start": "916950",
    "end": "922620"
  },
  {
    "text": "we'll continue pinging but we'll be able to go start looking at tracer and seeing traffic flowing or not flowing in some",
    "start": "922620",
    "end": "929340"
  },
  {
    "text": "cases so first I have to go over to the machine that the pod is running on which",
    "start": "929340",
    "end": "935970"
  },
  {
    "text": "is cubes 0-1 and then I'll run",
    "start": "935970",
    "end": "941910"
  },
  {
    "text": "oh I'd looked at the interface first so here you can see each",
    "start": "941910",
    "end": "948770"
  },
  {
    "text": "okay there we go all right so hopefully",
    "start": "1035010",
    "end": "1041860"
  },
  {
    "text": "by now you're starting to get a feel of what networking looks like in a pod and how it traverses back and forth and so",
    "start": "1041860",
    "end": "1048880"
  },
  {
    "text": "forth let's let's move on and talk about services so key number key understand",
    "start": "1048880",
    "end": "1055960"
  },
  {
    "start": "1053000",
    "end": "1053000"
  },
  {
    "text": "number three the services are crucial for not only service discovery but also moving traffic between skimming",
    "start": "1055960",
    "end": "1064779"
  },
  {
    "text": "distributing the traffic into your pod so if you have a service that you run and say like five pods against the wall",
    "start": "1064779",
    "end": "1071140"
  },
  {
    "text": "five services are running it's sort of a simple load balancer so as being a load",
    "start": "1071140",
    "end": "1078130"
  },
  {
    "start": "1075000",
    "end": "1075000"
  },
  {
    "text": "balancer it does suit traffic the one thing it doesn't do like typical load balancer it doesn't allow you access",
    "start": "1078130",
    "end": "1083380"
  },
  {
    "text": "control it doesn't say that I'll accept traffic from pod this part but not that pod or this address range not this",
    "start": "1083380",
    "end": "1091179"
  },
  {
    "text": "address range there are no real traffic controls anything that the service receives it will rebroadcast to your",
    "start": "1091179",
    "end": "1098080"
  },
  {
    "text": "pods or one of the pods so the one of",
    "start": "1098080",
    "end": "1105460"
  },
  {
    "text": "the secrets here is that the service VIP know the virtual IP is actually a magic of IP tables so you'll never see the the",
    "start": "1105460",
    "end": "1114279"
  },
  {
    "text": "IP on an interface so you'll never see an interface with that IP on it on a machine or in a pod or anything else and",
    "start": "1114279",
    "end": "1120640"
  },
  {
    "text": "you will never see a route to the services network anywhere so it's all IP",
    "start": "1120640",
    "end": "1127539"
  },
  {
    "text": "tray tables magic the magic of the service discovery piece is cubes DNS so",
    "start": "1127539",
    "end": "1135130"
  },
  {
    "text": "cubes DNS will create an a record for every one of your services I'll give you",
    "start": "1135130",
    "end": "1140980"
  },
  {
    "text": "an example here about midway down on the fourth third bullet nginx default SVC",
    "start": "1140980",
    "end": "1148690"
  },
  {
    "text": "dot cluster dot local so nginx is the service name the default",
    "start": "1148690",
    "end": "1153909"
  },
  {
    "text": "is your namespace so if you put something in another namespace expect that to be different SVC is always going",
    "start": "1153909",
    "end": "1160750"
  },
  {
    "text": "to be there and then cluster dot local is the domain that you've given your cluster like I say by default cluster",
    "start": "1160750",
    "end": "1167860"
  },
  {
    "text": "dot local is your what kubernetes normally has what it expects that can be changed if you wanted to add it into a",
    "start": "1167860",
    "end": "1174250"
  },
  {
    "text": "full DNS architecture if you want to so",
    "start": "1174250",
    "end": "1180630"
  },
  {
    "text": "and that's about it there I talked a little bit about cube proxy I just want",
    "start": "1180630",
    "end": "1186100"
  },
  {
    "text": "to touch on that for a moment of - it's a couple little things to know about cubes proxy the IP tables should be the",
    "start": "1186100",
    "end": "1194380"
  },
  {
    "text": "default for cube proxy now on any installation I don't know when that changed in Cuba Nettie's world I know at",
    "start": "1194380",
    "end": "1202630"
  },
  {
    "text": "least 1.6 it was IP tables someone may know it's been earlier than that but no",
    "start": "1202630",
    "end": "1209679"
  },
  {
    "text": "one should ever use it user space unless you need to do some real debugging so",
    "start": "1209679",
    "end": "1215429"
  },
  {
    "text": "now the thing about cube proxy is all it does is it it's principally they have to",
    "start": "1216690",
    "end": "1223029"
  },
  {
    "text": "set up node port and we'll talk about node port in a second here I believe actually I think I might fight you",
    "start": "1223029",
    "end": "1228760"
  },
  {
    "text": "talked about on last slide node port allows you to distribute the traffic to",
    "start": "1228760",
    "end": "1235059"
  },
  {
    "text": "your pods from the outside interface so it's a way of ingesting traffic into your cluster so when you set up a",
    "start": "1235059",
    "end": "1241779"
  },
  {
    "text": "service with node port it will randomly choose one of the ports from 30,000",
    "start": "1241779",
    "end": "1247830"
  },
  {
    "text": "32,768 I think those are the default values and so that port will get set up",
    "start": "1247830",
    "end": "1253630"
  },
  {
    "text": "on every single one of your cluster nodes and any any traffic received on that port will be directed to your",
    "start": "1253630",
    "end": "1259090"
  },
  {
    "text": "service it does this in a not even in the round robin fashion it does this",
    "start": "1259090",
    "end": "1264700"
  },
  {
    "text": "randomly so I got a little diagram here I actually have them better diagram one",
    "start": "1264700",
    "end": "1270850"
  },
  {
    "start": "1268000",
    "end": "1268000"
  },
  {
    "text": "point but unfortunately I lost that image the the way it does that with the IP tables the new connection comes in",
    "start": "1270850",
    "end": "1277690"
  },
  {
    "text": "hits the first IP tables and there's a basically one out of three chance of",
    "start": "1277690",
    "end": "1283899"
  },
  {
    "text": "hitting that node if it its hits that node we're done if it doesn't if it",
    "start": "1283899",
    "end": "1289870"
  },
  {
    "text": "decides not to hit the node it moves a second rule which then has a 50% chance",
    "start": "1289870",
    "end": "1296490"
  },
  {
    "text": "so if you haven't figured out one over three went over to so ever how many",
    "start": "1296490",
    "end": "1302080"
  },
  {
    "text": "knows you've got its 1 over whatever node number it is percentage-wise its if that rule is going to activate or not if",
    "start": "1302080",
    "end": "1309460"
  },
  {
    "text": "it doesn't decide to hit node to the catch-all rule which is the last rule we'll send all the traffic through that",
    "start": "1309460",
    "end": "1317679"
  },
  {
    "text": "sounds great it's a simple approach but the simple approach is not always the best there is a fallacy here that the",
    "start": "1317679",
    "end": "1327150"
  },
  {
    "text": "distributing traffic randomly you can get Hut spots so if you've got high traffic loads lots and lots of traffic",
    "start": "1327150",
    "end": "1333160"
  },
  {
    "text": "coming in you'll start to see errors appear and then just disappear and it",
    "start": "1333160",
    "end": "1339010"
  },
  {
    "text": "just be instantaneous like that you won't even easily be able to track it so just be aware if you're using the node",
    "start": "1339010",
    "end": "1345100"
  },
  {
    "text": "port for adjusting traffic if you've got lots of lost traffic coming in this could be an issue so with that I'd like to do next",
    "start": "1345100",
    "end": "1355450"
  },
  {
    "start": "1354000",
    "end": "1354000"
  },
  {
    "text": "demonstration of looking at services so we started out by bringing up three",
    "start": "1355450",
    "end": "1361840"
  },
  {
    "text": "front end pot",
    "start": "1361840",
    "end": "1366059"
  },
  {
    "text": "you",
    "start": "1400280",
    "end": "1402340"
  },
  {
    "text": "so it's a little little thing that I found again which is fairly common a lot",
    "start": "1449659",
    "end": "1458100"
  },
  {
    "text": "of people don't really think about this initially it's actually a DNS problem if we look at our resolve cough inside the",
    "start": "1458100",
    "end": "1463889"
  },
  {
    "text": "pod we see that our IP range is out of spec it's not what our service range is",
    "start": "1463889",
    "end": "1469370"
  },
  {
    "text": "so I'm going to go ahead and correct it here for a second just continue the demo and I'll show you",
    "start": "1469370",
    "end": "1475909"
  },
  {
    "text": "I can't even spell sight that's a typical response if you hit something it's not there you'll get a was a 307",
    "start": "1504429",
    "end": "1512350"
  },
  {
    "text": "yeah 307 and then I hit it correctly on the correct port and I get a response",
    "start": "1512350",
    "end": "1517480"
  },
  {
    "text": "from the nginx that's running there so I",
    "start": "1517480",
    "end": "1523179"
  },
  {
    "text": "exit back out and I'm if you go look at how your cubelet gets configured in this",
    "start": "1523179",
    "end": "1529389"
  },
  {
    "text": "case mostly cubelets probably run under system D so they'll be under the Etsy system D directory there's actually a",
    "start": "1529389",
    "end": "1536590"
  },
  {
    "text": "parameter that sets your DNS server so if you if you change your address range",
    "start": "1536590",
    "end": "1542649"
  },
  {
    "text": "for the service network make sure that you up you set your cubelets up",
    "start": "1542649",
    "end": "1548200"
  },
  {
    "text": "correctly to and so finally I'm just",
    "start": "1548200",
    "end": "1556509"
  },
  {
    "text": "going in here and I'm gonna",
    "start": "1556509",
    "end": "1560190"
  },
  {
    "text": "so up your load balances manually and things like that to try to get him back on regular ports alright moving on so",
    "start": "1587950",
    "end": "1603520"
  },
  {
    "start": "1601000",
    "end": "1601000"
  },
  {
    "text": "the way we normally would get traffic in is it through ingress ingress resource",
    "start": "1603520",
    "end": "1610360"
  },
  {
    "text": "allows you to basically take your service and expose it to the world expose it on port 80 on 443 or whichever",
    "start": "1610360",
    "end": "1618780"
  },
  {
    "text": "port you want to service it on so while node port was great initially",
    "start": "1618780",
    "end": "1625090"
  },
  {
    "text": "just get started ingress is really what what you should be targeting to do any work and so the the network or the",
    "start": "1625090",
    "end": "1634780"
  },
  {
    "start": "1631000",
    "end": "1631000"
  },
  {
    "text": "steuben ATS ingress itself mostly everything out there today is layer 7 so",
    "start": "1634780",
    "end": "1640210"
  },
  {
    "text": "your HTTP HTTP most ingress --is will terminate your SSL that's about all it",
    "start": "1640210",
    "end": "1648580"
  },
  {
    "text": "really is route there there is a little bit there's a bit of a hack to do layer 4 with nginx there's also if you're I",
    "start": "1648580",
    "end": "1656140"
  },
  {
    "text": "didn't put it on here but the like the f5 container connector also allows you to do layer 4 through some special magic",
    "start": "1656140",
    "end": "1663760"
  },
  {
    "text": "they do it's not a standard ingress resource but the ingress itself will sit",
    "start": "1663760",
    "end": "1671350"
  },
  {
    "text": "out on your physical network Howie why you see yz0 at the top of the diagram here the ingress will then talk to the",
    "start": "1671350",
    "end": "1678910"
  },
  {
    "text": "end points directly so a lot of people start to question why doesn't the ingress talk to the service and then let",
    "start": "1678910",
    "end": "1686320"
  },
  {
    "text": "the service distribute it well the reason being is that it can take a moment or two for the service to update",
    "start": "1686320",
    "end": "1692950"
  },
  {
    "text": "and so the ingress is actually listening on the to the API server to get updates",
    "start": "1692950",
    "end": "1699730"
  },
  {
    "text": "on the endpoints to come up and down so it just talks to it directly slotty",
    "start": "1699730",
    "end": "1705190"
  },
  {
    "text": "Lahti using a little bit more robust that way one thing that should be noted",
    "start": "1705190",
    "end": "1711610"
  },
  {
    "text": "two of the three types of services are out there the cluster IP the load",
    "start": "1711610",
    "end": "1718570"
  },
  {
    "text": "balancer and the node port cluster IP is the type that cannot be sent to an ingress cluster IP is really",
    "start": "1718570",
    "end": "1725970"
  },
  {
    "text": "geared just for talking within the cluster so if you have two micro-services one that depends on the",
    "start": "1725970",
    "end": "1731310"
  },
  {
    "text": "other and one that talks as another micro service that's where you would use something like cluster IP to route the",
    "start": "1731310",
    "end": "1737160"
  },
  {
    "text": "traffic from one micro service to another yeah and now I just have to note",
    "start": "1737160",
    "end": "1747000"
  },
  {
    "text": "about sort of if you're going to use a layer 4 protocol if you don't do it",
    "start": "1747000",
    "end": "1752580"
  },
  {
    "text": "through the nginx in ingress the other way you can sort of do it is export that",
    "start": "1752580",
    "end": "1758040"
  },
  {
    "text": "service as a node port and then on an external load balancer manually configure it to forward traffic to that",
    "start": "1758040",
    "end": "1765330"
  },
  {
    "text": "node port so alright sorry to sum up",
    "start": "1765330",
    "end": "1775200"
  },
  {
    "start": "1771000",
    "end": "1771000"
  },
  {
    "text": "here a little bit but some of the network stack choices you have did this by all mean by no means exhaustive this",
    "start": "1775200",
    "end": "1781590"
  },
  {
    "text": "is just for the most common ones or popular ones there's a whole lot more out there flannel which is what I've",
    "start": "1781590",
    "end": "1788580"
  },
  {
    "text": "been using here for the demonstrations is a very simple stack to bring up it manages itself it's it's turned it on it",
    "start": "1788580",
    "end": "1796620"
  },
  {
    "text": "just pretty much goes weave the weave",
    "start": "1796620",
    "end": "1801810"
  },
  {
    "text": "net stuff I've actually never used that but from what I understand it's pretty straightforward to set up it doesn't",
    "start": "1801810",
    "end": "1808370"
  },
  {
    "text": "scale better than flannel it's a it's easier to manage than flannel when you",
    "start": "1808370",
    "end": "1814380"
  },
  {
    "text": "go to scale it Project calico this is actually my favorite just because of",
    "start": "1814380",
    "end": "1819420"
  },
  {
    "text": "some of the other features it has but it's very similar to weave and scaling there's indications specifically when",
    "start": "1819420",
    "end": "1827340"
  },
  {
    "text": "you go to BGP mode they will scale much larger than weave but I don't have anything to fully document that and",
    "start": "1827340",
    "end": "1833900"
  },
  {
    "text": "anything but what it does do one of the advantages it does have it's one of the few and I've only found like two or",
    "start": "1833900",
    "end": "1840750"
  },
  {
    "text": "three Network stacks to do this allow you to specify the egress rules so all",
    "start": "1840750",
    "end": "1847800"
  },
  {
    "text": "the sacks all the stacks do adhere to the network policy API so you can have",
    "start": "1847800",
    "end": "1854160"
  },
  {
    "text": "the ingre rulz but the egress rules on what you can to make yourself more secure the",
    "start": "1854160",
    "end": "1861919"
  },
  {
    "text": "egress rules of what you want to use and then Ramona which is something I was",
    "start": "1861919",
    "end": "1867169"
  },
  {
    "text": "looking at for a while because of the security aspect but I had to rule it out but it does look have some interesting",
    "start": "1867169",
    "end": "1873169"
  },
  {
    "text": "aspects it's much like the others but one of the interesting things is it will actually allow you to take a service and",
    "start": "1873169",
    "end": "1879440"
  },
  {
    "text": "expose it as a real real world dip so the in that case instead of doing",
    "start": "1879440",
    "end": "1887479"
  },
  {
    "text": "straight node port and getting a random port you can actually expose your service and bring it out as port 80 or",
    "start": "1887479",
    "end": "1893090"
  },
  {
    "text": "port any other port on a specific IP that's a real-world IP so your services",
    "start": "1893090",
    "end": "1899179"
  },
  {
    "text": "or external services can talk to it so",
    "start": "1899179",
    "end": "1905149"
  },
  {
    "start": "1904000",
    "end": "1904000"
  },
  {
    "text": "there's all all the key understandings summarized on one side for you and I'm",
    "start": "1905149",
    "end": "1911960"
  },
  {
    "text": "pretty much done I actually feel slightly fascinated to my run throughs this morning so I can take a couple",
    "start": "1911960",
    "end": "1918289"
  },
  {
    "text": "questions if there's questions",
    "start": "1918289",
    "end": "1921549"
  }
]