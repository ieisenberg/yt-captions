[
  {
    "start": "0",
    "end": "295000"
  },
  {
    "text": "hello everybody thanks for joining we're going to get started in a minute while we're waiting",
    "start": "15040",
    "end": "20240"
  },
  {
    "text": "don from hewlett packard enterprise has shared a bunch of links uh in the chat bar so feel free to check",
    "start": "20240",
    "end": "26640"
  },
  {
    "text": "them out",
    "start": "26640",
    "end": "31840"
  },
  {
    "text": "and make sure that they're still there are they still there because i had a little blip here with zoom",
    "start": "34399",
    "end": "45520"
  },
  {
    "text": "and don i still see them so i believe they're still up in the chat window excellent",
    "start": "45520",
    "end": "51600"
  },
  {
    "text": "and you can see my screen i hope",
    "start": "52399",
    "end": "59839"
  },
  {
    "text": "hey everybody thanks for joining we're going to give a minute or two to start the presentation uh in the",
    "start": "66960",
    "end": "73680"
  },
  {
    "text": "interim there are a bunch of links in the chat for you to check out oh it",
    "start": "73680",
    "end": "78799"
  },
  {
    "text": "looks like um maybe they're not in there to the new attendees so i'll go ahead and post",
    "start": "78799",
    "end": "84159"
  },
  {
    "text": "those right now thank you",
    "start": "84159",
    "end": "101840"
  },
  {
    "text": "okay the links are up uh in the chat so let me know if you still don't see them",
    "start": "113119",
    "end": "119040"
  },
  {
    "text": "looks like it works",
    "start": "119040",
    "end": "122000"
  },
  {
    "text": "great",
    "start": "126840",
    "end": "129840"
  },
  {
    "text": "and we'll get started in a minute",
    "start": "140720",
    "end": "157840"
  },
  {
    "text": "so okay let's go ahead and get started i",
    "start": "182840",
    "end": "188080"
  },
  {
    "text": "want to thank everybody for joining us today to the webinar building dynamic machine learning pipelines with",
    "start": "188080",
    "end": "195280"
  },
  {
    "text": "cube director presented by hewlett-packard enterprise our presenters today are tom phelan",
    "start": "195280",
    "end": "202959"
  },
  {
    "text": "a fellow at software organization and kartik mather master technologist",
    "start": "202959",
    "end": "210239"
  },
  {
    "text": "and don wake technical marketing engineer a few housekeeping items before we get",
    "start": "210239",
    "end": "217280"
  },
  {
    "text": "started um as an attendee you're not able to talk during the presentation um but you",
    "start": "217280",
    "end": "224319"
  },
  {
    "text": "are able to ask questions down at the bottom of your screen in the q a tab",
    "start": "224319",
    "end": "229599"
  },
  {
    "text": "we'll be asked answering those questions at the end of the presentation",
    "start": "229599",
    "end": "236400"
  },
  {
    "text": "also this webinar is subject to the cncf code of conduct so please be mindful of",
    "start": "236400",
    "end": "243200"
  },
  {
    "text": "what you say in the chat or the questions and please be respectful of your fellow",
    "start": "243200",
    "end": "248560"
  },
  {
    "text": "attendees as well as the presenters the webinar and recording will be up later today on",
    "start": "248560",
    "end": "256079"
  },
  {
    "text": "the cncf webinar page and with that i will pass it over to",
    "start": "256079",
    "end": "264000"
  },
  {
    "text": "don kartik and tom great thanks a lot julius uh i'm don wake and i guess i'll",
    "start": "264000",
    "end": "269759"
  },
  {
    "text": "have each guy uh wave so you know who they are tom go ahead and say hi hello everyone",
    "start": "269759",
    "end": "275040"
  },
  {
    "text": "and there's kartik right there hey everyone i love your shirt cardiff got in the mail he is",
    "start": "275040",
    "end": "280479"
  },
  {
    "text": "i thought at first it said got milk i'm like dude why are you wearing a got milk shirt no it's got ml uh yeah you gotta pay",
    "start": "280479",
    "end": "287520"
  },
  {
    "text": "attention to details here okay so let's move along so we're gonna talk about building uh",
    "start": "287520",
    "end": "292960"
  },
  {
    "text": "dynamic machine learning pipeline so machine learning you know what what is",
    "start": "292960",
    "end": "298080"
  },
  {
    "start": "295000",
    "end": "385000"
  },
  {
    "text": "uh what is it all about when you're deploying an enterprise artificial intelligence application and",
    "start": "298080",
    "end": "303440"
  },
  {
    "text": "how do you do that at scale and you know what kind of tools do you have available to do all these things",
    "start": "303440",
    "end": "308960"
  },
  {
    "text": "number one it's a very complex thing to set up execute and operationalize as is quoted",
    "start": "308960",
    "end": "314960"
  },
  {
    "text": "here on the right uh by gartner over 60 percent of the models may be developed with the intention of",
    "start": "314960",
    "end": "320880"
  },
  {
    "text": "you know getting answers from them but they quickly grow to a level of complexity that's hard to manage",
    "start": "320880",
    "end": "326639"
  },
  {
    "text": "data sets change frequently so it becomes hard to keep your machine learning pipeline you know",
    "start": "326639",
    "end": "332320"
  },
  {
    "text": "dynamic and up to up to speed um and then kubernetes obviously is the tool of choice that",
    "start": "332320",
    "end": "338639"
  },
  {
    "text": "everybody's using to orchestrate manage their containers but it also",
    "start": "338639",
    "end": "344320"
  },
  {
    "text": "is fairly complex so what can we do to help you know improve",
    "start": "344320",
    "end": "351199"
  },
  {
    "text": "the usability of your machine learning pipelines so that's we're going to talk about today we've got our overview",
    "start": "351199",
    "end": "356880"
  },
  {
    "text": "stateless and staple applications will be discussed briefly what coupe director is really",
    "start": "356880",
    "end": "362240"
  },
  {
    "text": "the subject of this webinar and how it is used to help you build these dynamic machine learning pipelines uh what what",
    "start": "362240",
    "end": "369919"
  },
  {
    "text": "you do when you're creating these clusters of coupe director apps called kd clusters and then once you have your",
    "start": "369919",
    "end": "375120"
  },
  {
    "text": "clusters how you use them to train your ml model register the model create an inference deployment and",
    "start": "375120",
    "end": "381360"
  },
  {
    "text": "serve queries to get answers so let's jump right in go ahead tom thanks don so",
    "start": "381360",
    "end": "388639"
  },
  {
    "start": "385000",
    "end": "575000"
  },
  {
    "text": "as don pointed out we're talking today about ml pipelines and the use of kubernetes to",
    "start": "388639",
    "end": "394960"
  },
  {
    "text": "deploy and control those pipelines but before we can begin we have to actually look at",
    "start": "394960",
    "end": "400639"
  },
  {
    "text": "the application types that are involved in that pipeline of applications",
    "start": "400639",
    "end": "406479"
  },
  {
    "text": "now as we all know kubernetes is best used or is most designed for",
    "start": "406479",
    "end": "412880"
  },
  {
    "text": "stateless applications and when we say stateless applications what do we mean",
    "start": "412880",
    "end": "418800"
  },
  {
    "text": "we mean a application that is designed for the from the ground up as a micro services",
    "start": "418800",
    "end": "426000"
  },
  {
    "text": "architected application that means the storage the state of the application is separate",
    "start": "426000",
    "end": "432880"
  },
  {
    "text": "from the compute instance that is running so when we use containers we can horizontally scale the compute",
    "start": "432880",
    "end": "439840"
  },
  {
    "text": "so we bring on more and more containers running in parallel in order to run our application",
    "start": "439840",
    "end": "446639"
  },
  {
    "text": "more quickly so we get to an answer more quickly in the ml parliaments these are typically referred to as",
    "start": "446639",
    "end": "452560"
  },
  {
    "text": "cattle because any of these containers can be killed can be exited can move around",
    "start": "452560",
    "end": "458080"
  },
  {
    "text": "and they don't lose the state of the overall application this is key when we think",
    "start": "458080",
    "end": "464400"
  },
  {
    "text": "about the applications that we're using to build our pipeline so don let's go",
    "start": "464400",
    "end": "470080"
  },
  {
    "text": "next now we'll contrast stateless applications with stateful",
    "start": "470080",
    "end": "475440"
  },
  {
    "text": "applications stateful applications typically are legacy applications they",
    "start": "475440",
    "end": "480639"
  },
  {
    "text": "may come from the 80s the 90s the early 2000s before the industry embraced",
    "start": "480639",
    "end": "486800"
  },
  {
    "text": "cloud native architecture microservices solutions and that sort of thing so what these applications have is they",
    "start": "486800",
    "end": "494560"
  },
  {
    "text": "tend to commingle state with compute now with kubernetes",
    "start": "494560",
    "end": "499840"
  },
  {
    "text": "we spoke about with stateless applications there's a separation of compute and storage",
    "start": "499840",
    "end": "505360"
  },
  {
    "text": "but with stateful applications there's some metadata there might be a little bit of",
    "start": "505360",
    "end": "510400"
  },
  {
    "text": "configuration information that's unique for each container that's running a",
    "start": "510400",
    "end": "515680"
  },
  {
    "text": "portion of the compute for that application if that container exits there can be a",
    "start": "515680",
    "end": "522240"
  },
  {
    "text": "loss of state so a loss of continuity it has to be kind of rebuilt when we spin up a new instance to",
    "start": "522240",
    "end": "529279"
  },
  {
    "text": "replace that missing instance of the container these are referred to as pets so even there they're horizontally",
    "start": "529279",
    "end": "536560"
  },
  {
    "text": "scalable there's kind of a separation of compute and storage but if you lose a running instance of a",
    "start": "536560",
    "end": "543279"
  },
  {
    "text": "container you have to be careful on how you bring it back to life that's because each pet is unique so even though there's a",
    "start": "543279",
    "end": "549600"
  },
  {
    "text": "hundred or a thousand cats that look much like your own pet your pet's unique because it has a different",
    "start": "549600",
    "end": "555519"
  },
  {
    "text": "personality so when we talk about these applications in karthik we'll get into more detail",
    "start": "555519",
    "end": "562240"
  },
  {
    "text": "about the specific applications that are used here these applications tend to be a little",
    "start": "562240",
    "end": "568000"
  },
  {
    "text": "bit stateful but not entirely stateless so we have to be careful as we assemble our pipeline",
    "start": "568000",
    "end": "575120"
  },
  {
    "text": "so don can you move forward please and kubernetes the open source community like i said earlier",
    "start": "575120",
    "end": "580959"
  },
  {
    "text": "kubernetes was originally designed for stateless applications but there's been a lot of",
    "start": "580959",
    "end": "586640"
  },
  {
    "text": "progress over the years various items and resources like objects",
    "start": "586640",
    "end": "592000"
  },
  {
    "text": "and pools stateful sets i already mentioned persistent volumes persistent volume",
    "start": "592000",
    "end": "597040"
  },
  {
    "text": "claims concept of an operator or a custom resource definition is a specific piece of go",
    "start": "597040",
    "end": "604480"
  },
  {
    "text": "code that helps manage stateful applications a little more easily but they can be",
    "start": "604480",
    "end": "610480"
  },
  {
    "text": "cumbersome so don let's go forward that's why we're introducing cube",
    "start": "610480",
    "end": "616320"
  },
  {
    "text": "director and let me let me just back up a moment uh in full disclosure to the audience",
    "start": "616320",
    "end": "621920"
  },
  {
    "text": "myself and kartik we come originally from a startup company known as",
    "start": "621920",
    "end": "626959"
  },
  {
    "text": "blue data blue data was acquired by hp enterprise a few years ago",
    "start": "626959",
    "end": "634320"
  },
  {
    "text": "when we were at blue data we specialized in running artificial",
    "start": "634320",
    "end": "641040"
  },
  {
    "text": "intelligence machine learning deep learning applications in containers on kubernetes what we",
    "start": "641040",
    "end": "648320"
  },
  {
    "text": "found is that the existing tool set for setting up pipelines of stateful",
    "start": "648320",
    "end": "654480"
  },
  {
    "text": "applications didn't really meet our needs and so we instituted this or kicked off",
    "start": "654480",
    "end": "660160"
  },
  {
    "text": "this cube director open source project under the auspices of the cncf and so",
    "start": "660160",
    "end": "666640"
  },
  {
    "text": "that's what we're going to be talking about today there's a link here on the slides if you want to go to our github site",
    "start": "666640",
    "end": "672800"
  },
  {
    "text": "publicly available go ahead and uh you know begin to play around with with the cube director",
    "start": "672800",
    "end": "679200"
  },
  {
    "text": "so don let's just one more one more time forward please we'll do in just real quick this link i",
    "start": "679200",
    "end": "684880"
  },
  {
    "text": "pasted it into the chat window so you can go to that it's called it's labeled coup director code if you'd like to",
    "start": "684880",
    "end": "690880"
  },
  {
    "text": "see the source thank you very much um so karthik i'll turn it over to you to talk about how we support legacy",
    "start": "690880",
    "end": "696959"
  },
  {
    "text": "applications with cube director thanks a lot tom so tom talked about",
    "start": "696959",
    "end": "702160"
  },
  {
    "start": "698000",
    "end": "826000"
  },
  {
    "text": "uh stateful and stateless application uh and he talked about you know if you want to configure legacy application",
    "start": "702160",
    "end": "708800"
  },
  {
    "text": "how the state is very important uh and we don't even have to go that far even if you take an example of something",
    "start": "708800",
    "end": "715440"
  },
  {
    "text": "like hadoop it's a classical example uh you know of a stateful application where a lot of services are dependent on",
    "start": "715440",
    "end": "722639"
  },
  {
    "text": "uh you know on on one service like uh in in the hadoop world lot of services depend on zookeeper",
    "start": "722639",
    "end": "729360"
  },
  {
    "text": "so they need to know the state of zookeeper until the zookeeper how many nodes are there where are they",
    "start": "729360",
    "end": "734639"
  },
  {
    "text": "running what are the addresses until the zookeeper is not up they cannot start configuration so",
    "start": "734639",
    "end": "741120"
  },
  {
    "text": "that's a very good use case for something like cube director you know so how do we achieve it uh we",
    "start": "741120",
    "end": "748160"
  },
  {
    "text": "maintain uh in cluster uh data structure which gives you a cluster level view",
    "start": "748160",
    "end": "754160"
  },
  {
    "text": "which tells you what services are running how many pods are there for every role",
    "start": "754160",
    "end": "760000"
  },
  {
    "text": "so that you know a service a uh which needs to talk to service b",
    "start": "760000",
    "end": "765200"
  },
  {
    "text": "can look at this data structure and do the orchestration accordingly so that data structure we call as a",
    "start": "765200",
    "end": "771200"
  },
  {
    "text": "config metadata and that is managed by queue director and is constantly updated as the state of the",
    "start": "771200",
    "end": "777360"
  },
  {
    "text": "cluster changes uh we also have some life cycle events",
    "start": "777360",
    "end": "782480"
  },
  {
    "text": "what we called as guest config hooks you know basically they tell any service what's",
    "start": "782480",
    "end": "788399"
  },
  {
    "text": "happening in the cluster is the cluster being being expanded is it being shrunk",
    "start": "788399",
    "end": "793440"
  },
  {
    "text": "right nodes are being added or deleted and then the config metadata data structure is updated and then the",
    "start": "793440",
    "end": "799600"
  },
  {
    "text": "service can react accordingly and all that orchestration layer is what we call as",
    "start": "799600",
    "end": "807120"
  },
  {
    "text": "app config which relies heavily on config metadata and guest config hooks",
    "start": "807120",
    "end": "812560"
  },
  {
    "text": "and for for any service to query this data structure there is a nice little tool which uh cube director injects uh when",
    "start": "812560",
    "end": "820399"
  },
  {
    "text": "whenever a part comes up and that tool is config cli uh let's keep going i think tom you were",
    "start": "820399",
    "end": "827600"
  },
  {
    "start": "826000",
    "end": "955000"
  },
  {
    "text": "going to talk to us about this sort of how you deploy it good uh so i mean we may have been remiss",
    "start": "827600",
    "end": "833360"
  },
  {
    "text": "just to be clear cube director is a kubernetes custom resource definition itself it's",
    "start": "833360",
    "end": "841120"
  },
  {
    "text": "an operator it's a piece of go code that is deployed installed within a kubernetes cluster",
    "start": "841120",
    "end": "848959"
  },
  {
    "text": "and then what you can do with it is you submit a json file or a yaml file to that operator and then it will manage",
    "start": "848959",
    "end": "856800"
  },
  {
    "text": "the instantiation and the life cycle of that stateful application",
    "start": "856800",
    "end": "862160"
  },
  {
    "text": "on kubernetes so with here we have with our our cube cuddle standard command we are deploying a deployment",
    "start": "862160",
    "end": "869839"
  },
  {
    "text": "of cube director in our kubernetes cluster what we're showing here with the little",
    "start": "869839",
    "end": "875040"
  },
  {
    "text": "graphic is that you have the cube director operator it has a when you're specifying",
    "start": "875040",
    "end": "880560"
  },
  {
    "text": "a application to be deployed and managed by a coup director",
    "start": "880560",
    "end": "885760"
  },
  {
    "text": "you provide a definition of that has something we'll go through examples in the following slides it will define",
    "start": "885760",
    "end": "892959"
  },
  {
    "text": "an image it will locate an image from the image repository it will specify connection information",
    "start": "892959",
    "end": "898560"
  },
  {
    "text": "it will specify configuration information uh scalable roles information about that application",
    "start": "898560",
    "end": "905680"
  },
  {
    "text": "you apply it to the cube director cube director will deploy it if you wish to update it you use cube",
    "start": "905680",
    "end": "912079"
  },
  {
    "text": "call again you probably pass in a new configuration file and cube director will do the reconciliation so it will bring the",
    "start": "912079",
    "end": "919440"
  },
  {
    "text": "running instance of the cluster of the application into alignment with the new configuration specification",
    "start": "919440",
    "end": "926240"
  },
  {
    "text": "from the yaml file the standard standard operator behavior or",
    "start": "926240",
    "end": "931279"
  },
  {
    "text": "kubernetes cluster but what we're providing is we're providing a solution to allow you to run any",
    "start": "931279",
    "end": "938079"
  },
  {
    "text": "stateless application without having to write your own operator all you have to do is specify",
    "start": "938079",
    "end": "944480"
  },
  {
    "text": "some json or yaml provide it to the cube director the cube director will do that",
    "start": "944480",
    "end": "949519"
  },
  {
    "text": "for you so i'll pass it back to karthik to go through some more detail in this regard",
    "start": "949519",
    "end": "955279"
  },
  {
    "start": "955000",
    "end": "992000"
  },
  {
    "text": "yeah and uh just to give you an overview before kartik talks about the um the uh the applications katie apps um",
    "start": "955279",
    "end": "962560"
  },
  {
    "text": "you know just a level set i think everybody on this call knows what we're talking about with a basic machine learning pipeline",
    "start": "962560",
    "end": "968240"
  },
  {
    "text": "this is what we're going to be uh working towards building out with coop director we have the training where",
    "start": "968240",
    "end": "973360"
  },
  {
    "text": "you have input data sets registration of your model once it's created all of that circling around some",
    "start": "973360",
    "end": "979600"
  },
  {
    "text": "central uh persistent storage repository where you have your data prepped and stored and accessible by the clusters and then",
    "start": "979600",
    "end": "986880"
  },
  {
    "text": "where the models themselves are made available for inferencing so uh take it away",
    "start": "986880",
    "end": "993920"
  },
  {
    "start": "992000",
    "end": "1067000"
  },
  {
    "text": "sure thanks don thank you tom so let's talk about cube director application uh",
    "start": "994160",
    "end": "1000160"
  },
  {
    "text": "so we already know now by now that cube director is is a cuban it is operator",
    "start": "1000160",
    "end": "1005440"
  },
  {
    "text": "in kubernetes operator world you have a custom resource definition crds and then instantiation",
    "start": "1005440",
    "end": "1011839"
  },
  {
    "text": "of those are custom resource so cube director application is a generic uh you know crd uh it's it's where all",
    "start": "1011839",
    "end": "1019759"
  },
  {
    "text": "the expressiveness for any giving of application comes where without writing any go code uh an",
    "start": "1019759",
    "end": "1027038"
  },
  {
    "text": "application developer can define what is the application uh gonna look like uh we will be going deeper into that",
    "start": "1027039",
    "end": "1034000"
  },
  {
    "text": "like we will be they can define things like roles what services are inner roles",
    "start": "1034000",
    "end": "1039280"
  },
  {
    "text": "cardinality and lot of other things so that custom resource is the cube director",
    "start": "1039280",
    "end": "1045038"
  },
  {
    "text": "application and we will be looking at some examples for those for this presentation specifically we",
    "start": "1045039",
    "end": "1050880"
  },
  {
    "text": "will be focusing on three cube director application uh one is your",
    "start": "1050880",
    "end": "1055919"
  },
  {
    "text": "training application uh your jupiter application and then finally a deployment application and then how we stitch them together",
    "start": "1055919",
    "end": "1063280"
  },
  {
    "text": "using some cube director features like connections",
    "start": "1063280",
    "end": "1068320"
  },
  {
    "start": "1067000",
    "end": "1270000"
  },
  {
    "text": "awesome and again we also pasted a link that you see on this slide in the chat um so look uh for the label",
    "start": "1068320",
    "end": "1075520"
  },
  {
    "text": "github example applications you'll see exactly the code that we are going to be walking through which is right here",
    "start": "1075520",
    "end": "1082880"
  },
  {
    "text": "so back to you carter yes uh okay so this is a concrete example of a cube director",
    "start": "1083679",
    "end": "1089120"
  },
  {
    "text": "application uh we will be focusing on the green blocks uh that's the areas of more interest",
    "start": "1089120",
    "end": "1095280"
  },
  {
    "text": "so now uh cube director knows about this custom resource called cube director",
    "start": "1095280",
    "end": "1100799"
  },
  {
    "text": "application what it is entirely depends on the application developer they can define what roles",
    "start": "1100799",
    "end": "1107039"
  },
  {
    "text": "uh you know for every role behind the scene cube director creates stateful sets for every role uh",
    "start": "1107039",
    "end": "1114160"
  },
  {
    "text": "to you know convert into the kubernetes native resource for every role uh you",
    "start": "1114160",
    "end": "1120799"
  },
  {
    "text": "can define a bunch of services and for every service you can attach metadata all that",
    "start": "1120799",
    "end": "1126960"
  },
  {
    "text": "definition happens in the cube director application json this can be a yaml as well in kts world",
    "start": "1126960",
    "end": "1134400"
  },
  {
    "text": "they are used interchangeably so if if we focus on the first green block",
    "start": "1134400",
    "end": "1139919"
  },
  {
    "text": "uh we are defining uh our role what is the cardinality means you know",
    "start": "1139919",
    "end": "1145039"
  },
  {
    "text": "just one part for that particular role and and the heart of that is package url",
    "start": "1145039",
    "end": "1150400"
  },
  {
    "text": "uh where you give your orchestration code so cube director invokes these scripts",
    "start": "1150400",
    "end": "1157200"
  },
  {
    "text": "once the pod is launched for that role and all the business logic how to configure",
    "start": "1157200",
    "end": "1163039"
  },
  {
    "text": "whatever service you need to configure in that particular part is happening here and this is actively",
    "start": "1163039",
    "end": "1168880"
  },
  {
    "text": "using the config metadata using config cli utility to happening what's uh to know what's",
    "start": "1168880",
    "end": "1174400"
  },
  {
    "text": "happening in rest of the cluster and then it also takes an image",
    "start": "1174400",
    "end": "1180000"
  },
  {
    "text": "that's a docker image so second green block is pretty similar",
    "start": "1180000",
    "end": "1185039"
  },
  {
    "text": "just talking about another role which is a different image in this particular example we have three roles",
    "start": "1185039",
    "end": "1191600"
  },
  {
    "text": "using three different images uh every role has its own kind of an orchestration layer",
    "start": "1191600",
    "end": "1196960"
  },
  {
    "text": "uh which you supply using package url um and finally uh you have these bunch of",
    "start": "1196960",
    "end": "1202720"
  },
  {
    "text": "endpoints under services defined and you can you know tell cube director something",
    "start": "1202720",
    "end": "1208400"
  },
  {
    "text": "more about those services that i want the service to be secured using a property called has auth token",
    "start": "1208400",
    "end": "1214799"
  },
  {
    "text": "once you do that q director generates a unique uh token or authentication token or identifier uh so",
    "start": "1214799",
    "end": "1222320"
  },
  {
    "text": "that anybody who's trying to hit that end point will have to supply that uh authentication token in the http header",
    "start": "1222320",
    "end": "1229679"
  },
  {
    "text": "and then inside the pod you can write the logic to verify if the token is correct um",
    "start": "1229679",
    "end": "1236480"
  },
  {
    "text": "so so a lot of those features uh cube director out of the box supplies which uh which people don't have to write",
    "start": "1236480",
    "end": "1243760"
  },
  {
    "text": "again and again from different operators which would which is kind of",
    "start": "1243760",
    "end": "1249280"
  },
  {
    "text": "how it happens outside of cube director like if you're writing kafka if you're writing cassandra or",
    "start": "1249280",
    "end": "1255919"
  },
  {
    "text": "some machine learning application you have to keep rewriting a lot of data code right uh all that is taken care",
    "start": "1255919",
    "end": "1262960"
  },
  {
    "text": "behind the scene by q director awesome thanks kartik so it really shows how you're starting to wrangle",
    "start": "1262960",
    "end": "1269360"
  },
  {
    "text": "um the difficulties that you run into building these complex machine learning pipelines so here's an example of a",
    "start": "1269360",
    "end": "1275200"
  },
  {
    "start": "1270000",
    "end": "1305000"
  },
  {
    "text": "pipeline that we're going to use and again even the data sets for this is available on online",
    "start": "1275200",
    "end": "1280799"
  },
  {
    "text": "at our github i believe is we linked that as well so the problem description and an",
    "start": "1280799",
    "end": "1286400"
  },
  {
    "text": "artificial intelligence application that has to predict the travel time for a proposed taxi ride so we're going to take this huge data set from years and",
    "start": "1286400",
    "end": "1293120"
  },
  {
    "text": "years of compiled data uh in new york and then we're going to allow the user to query",
    "start": "1293120",
    "end": "1298480"
  },
  {
    "text": "specific points a to b to c and figure out what the average travel time would be",
    "start": "1298480",
    "end": "1305280"
  },
  {
    "text": "so back to you uh carter sorry is this tom tom let's go quickly i'll just go ahead",
    "start": "1305280",
    "end": "1310640"
  },
  {
    "text": "through this saddam thanks for setting up the the demonstration we're gonna show today so kartik has already talked a little",
    "start": "1310640",
    "end": "1317039"
  },
  {
    "text": "bit about three components when we saw those in the yaml file so let me just kind of piece this",
    "start": "1317039",
    "end": "1323440"
  },
  {
    "text": "together so steven points out what we're going to do is going to build a model we're going to build a neural net model",
    "start": "1323440",
    "end": "1329679"
  },
  {
    "text": "that will allow us to predict travel time by taxi from point a to point b so what we need to do is need to train a",
    "start": "1329679",
    "end": "1336159"
  },
  {
    "text": "model so we will deploy a training cluster that training cluster typically will be",
    "start": "1336159",
    "end": "1342240"
  },
  {
    "text": "deployed using on on resources using gpus because gpus are more efficient",
    "start": "1342240",
    "end": "1347360"
  },
  {
    "text": "when training a model now we also need to deploy an inference model inference typically runs",
    "start": "1347360",
    "end": "1354159"
  },
  {
    "text": "better on regular cpus doesn't need the special power of the gpu so we'll have two different",
    "start": "1354159",
    "end": "1359520"
  },
  {
    "text": "specifications we'll have a specification for our training engine while the specification for our",
    "start": "1359520",
    "end": "1364559"
  },
  {
    "text": "deployment model our deployment engine and then we'll also have a jupiter notebook as kartik",
    "start": "1364559",
    "end": "1369840"
  },
  {
    "text": "points out and why do we have a jupiter notebook because it's easy for the data scientist they're familiar",
    "start": "1369840",
    "end": "1375919"
  },
  {
    "text": "with the jupiter notebook in order to interact with the training cluster and train it appropriately given the",
    "start": "1375919",
    "end": "1382960"
  },
  {
    "text": "data sets that we will be using so what we're showing here in this little box is the three",
    "start": "1382960",
    "end": "1388000"
  },
  {
    "text": "cube cuddle commands that deploy the specification for each of these",
    "start": "1388000",
    "end": "1393039"
  },
  {
    "text": "components that we'll be using in our pipeline our app training engine",
    "start": "1393039",
    "end": "1398320"
  },
  {
    "text": "our jupiter notebook and our deployment engine so what's going to be shown in the next few slides here is how we assemble these",
    "start": "1398320",
    "end": "1405200"
  },
  {
    "text": "how we share data between the training engine and the deployment engine and that's the",
    "start": "1405200",
    "end": "1411120"
  },
  {
    "text": "real power of cube director so i'll spin it back to karthik",
    "start": "1411120",
    "end": "1417840"
  },
  {
    "start": "1417000",
    "end": "1507000"
  },
  {
    "text": "thanks tom so now we are looking at the second uh you know important custom resource",
    "start": "1418480",
    "end": "1424720"
  },
  {
    "text": "that cube director manages which is a cube director cluster so cube director",
    "start": "1424720",
    "end": "1430080"
  },
  {
    "text": "application is kind of a template is a very static thing where you define bunch of you know",
    "start": "1430080",
    "end": "1435840"
  },
  {
    "text": "mappings about between roles and services and service to end points",
    "start": "1435840",
    "end": "1441360"
  },
  {
    "text": "this is this is the more interesting part which cube director manages is the instantiation of that particular cube",
    "start": "1441360",
    "end": "1447760"
  },
  {
    "text": "director application uh you can create a one or many cube director cluster",
    "start": "1447760",
    "end": "1453200"
  },
  {
    "text": "and cube director is uh constantly watching this custom resource called cube director cluster uh and anything that's happening",
    "start": "1453200",
    "end": "1460880"
  },
  {
    "text": "in the cluster it's reacting to the change so a cube director cluster uh relative",
    "start": "1460880",
    "end": "1466720"
  },
  {
    "text": "to cube letter application uh looks relatively simple in terms of you know just if you look at the yaml",
    "start": "1466720",
    "end": "1473679"
  },
  {
    "text": "here you just already predefined your application which in this case in inside spec is training engine inside",
    "start": "1473679",
    "end": "1481039"
  },
  {
    "text": "that you've already defined your roles while defining the app so now all you're doing is for every",
    "start": "1481039",
    "end": "1486799"
  },
  {
    "text": "role you're asking for how many members and what's the resource for every role uh for this this",
    "start": "1486799",
    "end": "1493120"
  },
  {
    "text": "presentation uh we're we don't have gpu yaml but it can you can provide",
    "start": "1493120",
    "end": "1499279"
  },
  {
    "text": "gpu while requesting for resource",
    "start": "1499279",
    "end": "1503440"
  },
  {
    "text": "so yes okay onto connections i guess what work how you use that between the",
    "start": "1504960",
    "end": "1511440"
  },
  {
    "start": "1507000",
    "end": "1646000"
  },
  {
    "text": "clusters yes exactly so now uh this goes back to our the title for this",
    "start": "1511440",
    "end": "1517520"
  },
  {
    "text": "presentation is building dynamic pipeline right like there are two two keywords there pipeline and dynamic",
    "start": "1517520",
    "end": "1523840"
  },
  {
    "text": "uh and that's that's the connection is at the heart of that pipeline means you are stitching",
    "start": "1523840",
    "end": "1529200"
  },
  {
    "text": "together a bunch of things in this particular case you're stitching together a bunch of cube director clusters",
    "start": "1529200",
    "end": "1535679"
  },
  {
    "text": "those are unrelated cluster and how do they cluster knows about each other is through this cube director feature",
    "start": "1535679",
    "end": "1541600"
  },
  {
    "text": "called connection uh we talked about the data structure called config meta",
    "start": "1541600",
    "end": "1547279"
  },
  {
    "text": "if you want to extend configmeta to have information of other running cluster that's what connection lets you do",
    "start": "1547279",
    "end": "1553679"
  },
  {
    "text": "if you focus on this yaml here in the spec there is connection and then you take two config maps",
    "start": "1553679",
    "end": "1560159"
  },
  {
    "text": "when you do that a cube director reads those config map get the data and sticks it inside your",
    "start": "1560159",
    "end": "1566559"
  },
  {
    "text": "running clusters config metadata so now this cluster also knows about",
    "start": "1566559",
    "end": "1572320"
  },
  {
    "text": "those config map and as those config maps are changing this metadata is changing and services",
    "start": "1572320",
    "end": "1578640"
  },
  {
    "text": "can react accordingly using connection we have currently",
    "start": "1578640",
    "end": "1584159"
  },
  {
    "text": "implemented uh three resources like a secret can be a connection config map",
    "start": "1584159",
    "end": "1589760"
  },
  {
    "text": "uh or or another kd cluster but the idea is more broad or generic",
    "start": "1589760",
    "end": "1595200"
  },
  {
    "text": "you can have more resources in future in cube director you can extend cube director to have",
    "start": "1595200",
    "end": "1601360"
  },
  {
    "text": "another custom resource which is uh which is an operator in itself or another cr to be a",
    "start": "1601360",
    "end": "1607440"
  },
  {
    "text": "connection uh once you do that then this cluster will know a lot more about what's happening there",
    "start": "1607440",
    "end": "1613360"
  },
  {
    "text": "and and as those things are changing this cluster is constantly evolving and reacting to the change",
    "start": "1613360",
    "end": "1619520"
  },
  {
    "text": "and that's that's how we get the dynamic part of it so in this this is a very simplistic",
    "start": "1619520",
    "end": "1625279"
  },
  {
    "text": "pipeline uh if you have observed like in actual machine learning you have",
    "start": "1625279",
    "end": "1630320"
  },
  {
    "text": "you can drill down on every step like training itself will do a lot of data munching data pre-processing",
    "start": "1630320",
    "end": "1635760"
  },
  {
    "text": "all of them can be separate running cluster in themselves and using connections you can tie them",
    "start": "1635760",
    "end": "1641600"
  },
  {
    "text": "all together into a nice pipeline awesome all right um so this is what",
    "start": "1641600",
    "end": "1646799"
  },
  {
    "text": "we're going to build um we i think we've laid out the foundation for you know what the problem statement is at the end of the day",
    "start": "1646799",
    "end": "1653360"
  },
  {
    "text": "as cardiac just mentioned we're going to have three clusters individual clusters doing individual",
    "start": "1653360",
    "end": "1658480"
  },
  {
    "text": "jobs that are all part of the pipeline so we'll build this out step by step",
    "start": "1658480",
    "end": "1664399"
  },
  {
    "text": "you can see at the top there is a persistent storage layer that's where our taxi ride data set will be that the training",
    "start": "1664399",
    "end": "1671360"
  },
  {
    "text": "cluster will read that we'll train from eventually get our model stored in that same place which",
    "start": "1671360",
    "end": "1677200"
  },
  {
    "text": "can be accessed by the jupiter notebook and by the inferencing deployment engine using also storage uh scoring scripts in",
    "start": "1677200",
    "end": "1684640"
  },
  {
    "text": "the persistent storage so let's jump right in and get this sucker built",
    "start": "1684640",
    "end": "1690240"
  },
  {
    "start": "1689000",
    "end": "1725000"
  },
  {
    "text": "so now we're looking at the cube director training app and we've been talking about different cubed cube director app and cluster",
    "start": "1690960",
    "end": "1697760"
  },
  {
    "text": "so it's a simple cube cutting create for people familiar with uh k8s or kubernetes",
    "start": "1697760",
    "end": "1703440"
  },
  {
    "text": "uh you just do a queue quarterly create or apply of a given yaml and the kubernetes will take care of",
    "start": "1703440",
    "end": "1708799"
  },
  {
    "text": "creating and managing that resource once we have registered that resource so this will",
    "start": "1708799",
    "end": "1714240"
  },
  {
    "text": "create your first block in the pipeline which is which is the actual training engine",
    "start": "1714240",
    "end": "1719440"
  },
  {
    "text": "where the training computation will happen okay let's keep going so we built the ml",
    "start": "1719440",
    "end": "1726880"
  },
  {
    "start": "1725000",
    "end": "1735000"
  },
  {
    "text": "training as promised we're going to kind of slowly build this picture out so there's our taxi right data set there's our coupe director cluster",
    "start": "1726880",
    "end": "1734960"
  },
  {
    "start": "1735000",
    "end": "1839000"
  },
  {
    "text": "right and and now comes uh the most interesting part for data scientists which is the jupiter notebook",
    "start": "1736480",
    "end": "1743360"
  },
  {
    "text": "uh which is a accumulator application in itself uh so jupyter",
    "start": "1743360",
    "end": "1750240"
  },
  {
    "text": "notebook is the most popular kind of an interface for for people doing machine learning uh or",
    "start": "1750240",
    "end": "1755600"
  },
  {
    "text": "any data sciencey uh problem solving uh in in the same spirit like you like jupiter",
    "start": "1755600",
    "end": "1762320"
  },
  {
    "text": "notebook they can come up with any any notebook it could be zeppelin or some something else which which they",
    "start": "1762320",
    "end": "1768960"
  },
  {
    "text": "are more familiar with for this example we have taken jupyter notebook now",
    "start": "1768960",
    "end": "1774320"
  },
  {
    "text": "you have this lightweight notebook and you have this beefy training cluster using connections",
    "start": "1774320",
    "end": "1780720"
  },
  {
    "text": "multiple people or data scientists can just spawn this lightweight notebooks",
    "start": "1780720",
    "end": "1786640"
  },
  {
    "text": "and connect it to the training cluster and we have extended the notebook",
    "start": "1786640",
    "end": "1791840"
  },
  {
    "text": "as part of the cube director examples to utilize this connection so that you",
    "start": "1791840",
    "end": "1798000"
  },
  {
    "text": "can remotely submit your code whatever you are doing in jupyter notebook will not be executed locally",
    "start": "1798000",
    "end": "1804559"
  },
  {
    "text": "and can be then posted on a training cluster so that you get access to the beefier resources more gpus",
    "start": "1804559",
    "end": "1813440"
  },
  {
    "text": "so we've got a kind of beefy cluster over here that's got physical resources potentially with gpus we can do a lot of",
    "start": "1813440",
    "end": "1819279"
  },
  {
    "text": "that hardcore you know machine learning and then as you mentioned you've got the just with this a couple co uh create",
    "start": "1819279",
    "end": "1826240"
  },
  {
    "text": "commands and and definition files you've got a connection between the the lighter weight jupiter notebook the data scientist is",
    "start": "1826240",
    "end": "1832880"
  },
  {
    "text": "using and accessing uh kicking off you know managing this this cluster",
    "start": "1832880",
    "end": "1839360"
  },
  {
    "start": "1839000",
    "end": "1915000"
  },
  {
    "text": "so this i guess uh talks about talk about how the jupiter notebook itself you know utilizes that connection right",
    "start": "1839600",
    "end": "1846000"
  },
  {
    "text": "so here now uh as i mentioned in last slide we have done some uh some we have added",
    "start": "1846000",
    "end": "1852960"
  },
  {
    "text": "some intelligence to jupiter notebook uh about the feature that we've been we have been talking about called connections",
    "start": "1852960",
    "end": "1859679"
  },
  {
    "text": "uh there is a functionality in jupyter notebook where it gives you some hooks to extend the interface",
    "start": "1859679",
    "end": "1865519"
  },
  {
    "text": "uh those hooks are called magics we have defined our own magic in so like you see percentage",
    "start": "1865519",
    "end": "1872240"
  },
  {
    "text": "attachments that's that's a line magic that runs some code behind the scenes",
    "start": "1872240",
    "end": "1877440"
  },
  {
    "text": "to get all the metadata for a given connection in this case it tells you what what is",
    "start": "1877440",
    "end": "1883120"
  },
  {
    "text": "your training cluster again you can continue to add more training cluster using connection",
    "start": "1883120",
    "end": "1890000"
  },
  {
    "text": "snippet to your notebook and when when you rerun this uh magic you will see more than one year",
    "start": "1890000",
    "end": "1896720"
  },
  {
    "text": "if you have added more or you can remove so all that is a very real time",
    "start": "1896720",
    "end": "1902080"
  },
  {
    "text": "and then as you are bringing and removing cluster you can then try your training example on different",
    "start": "1902080",
    "end": "1908159"
  },
  {
    "text": "cluster just by sitting in one notebook session great",
    "start": "1908159",
    "end": "1915360"
  },
  {
    "start": "1915000",
    "end": "1940000"
  },
  {
    "text": "so we actually had a question there that came in from rock about you know what is the jupiter notebook and hopefully that",
    "start": "1915600",
    "end": "1920720"
  },
  {
    "text": "what we just showed um gives you an idea of how the jupiter notebook is sort of i mean how would you call it tom cardig",
    "start": "1920720",
    "end": "1927120"
  },
  {
    "text": "it's it's really what runs the show it's it's your direct interface to your abstract model you know we're doing all the hard plumbing in the background but",
    "start": "1927120",
    "end": "1933679"
  },
  {
    "text": "here your jupiter notebooks you know really building them all we're allowing you to to make things happen right",
    "start": "1933679",
    "end": "1939600"
  },
  {
    "text": "right it's just it traditionally used to be called ipython notebooks uh now it's called jupyter notebook they",
    "start": "1939600",
    "end": "1946559"
  },
  {
    "start": "1940000",
    "end": "1984000"
  },
  {
    "text": "continue to add more and more features it can give you uh authentication with external adl dev",
    "start": "1946559",
    "end": "1953440"
  },
  {
    "text": "servers there is concept of jupyter lab so this is this is a very nice",
    "start": "1953440",
    "end": "1958799"
  },
  {
    "text": "tool industry standard which is constantly evolving for data scientists and that's why it's",
    "start": "1958799",
    "end": "1964559"
  },
  {
    "text": "very popular predominantly used for writing python code but",
    "start": "1964559",
    "end": "1969679"
  },
  {
    "text": "with the example of we have shown even when you are in a python kernel for a notebook",
    "start": "1969679",
    "end": "1975200"
  },
  {
    "text": "using magics you can put your r code and we will just take that code and post it on our kernel or or in some other language",
    "start": "1975200",
    "end": "1982960"
  },
  {
    "text": "yeah awesome thanks okay so you know we're building out our pipeline here showing",
    "start": "1982960",
    "end": "1988080"
  },
  {
    "start": "1984000",
    "end": "1996000"
  },
  {
    "text": "the training engine now with the connections actually now we actually see a model also being stored in that central",
    "start": "1988080",
    "end": "1994480"
  },
  {
    "text": "persistent storage library so now the config map so a model can be you know",
    "start": "1994480",
    "end": "2002240"
  },
  {
    "start": "1996000",
    "end": "2030000"
  },
  {
    "text": "it's it's very subjective concept it depends on library what you're using once you have a model to be able to",
    "start": "2002240",
    "end": "2009039"
  },
  {
    "text": "deploy that uh in a proper production live pipeline you need to serialize the model",
    "start": "2009039",
    "end": "2014480"
  },
  {
    "text": "and then you need some runtime which can deserialize the model and then can basically give an end point",
    "start": "2014480",
    "end": "2021519"
  },
  {
    "text": "which people can hit and make inferences for us uh we have uh cons we have",
    "start": "2021519",
    "end": "2027440"
  },
  {
    "text": "represented model in in a kts resource type which is very popular config map which is nothing but",
    "start": "2027440",
    "end": "2034080"
  },
  {
    "start": "2030000",
    "end": "2092000"
  },
  {
    "text": "a key value structure here you can provide the path of your serialized model",
    "start": "2034080",
    "end": "2040960"
  },
  {
    "text": "where did you store your model on persistent storage using the training cluster uh you as",
    "start": "2040960",
    "end": "2046880"
  },
  {
    "text": "part of the training job and then the intelligence about that model how what what libraries was that",
    "start": "2046880",
    "end": "2052560"
  },
  {
    "text": "model serialized with how to re-serialize that model how to plug in new input to that model",
    "start": "2052560",
    "end": "2059520"
  },
  {
    "text": "that goes in in a script called scoring which which people who are interested in",
    "start": "2059520",
    "end": "2064878"
  },
  {
    "text": "deploying this model will have to write and we maintain that where the scoring script is and where the model is in this",
    "start": "2064879",
    "end": "2071760"
  },
  {
    "text": "config map again we will be using connection feature uh while creating deployment cluster uh to make",
    "start": "2071760",
    "end": "2078878"
  },
  {
    "text": "deployment engine aware of what models you have to deploy and what to do do with them",
    "start": "2078879",
    "end": "2086320"
  },
  {
    "text": "great so we've uh now gotten to this point in the almost have the full thing built we got our config mac built and",
    "start": "2086480",
    "end": "2092960"
  },
  {
    "start": "2092000",
    "end": "2140000"
  },
  {
    "text": "now we're going to create uh an inference server deployment right",
    "start": "2092960",
    "end": "2098079"
  },
  {
    "text": "so now uh deployment engine is is is in that first block in the",
    "start": "2098079",
    "end": "2104400"
  },
  {
    "text": "pipeline is number third block where you have your training you have your notebook",
    "start": "2104400",
    "end": "2110240"
  },
  {
    "text": "you have your config map which which represents your model now finally",
    "start": "2110240",
    "end": "2116480"
  },
  {
    "text": "you want to deploy it so again bring up a deployment agent engine",
    "start": "2116480",
    "end": "2121520"
  },
  {
    "text": "which has the compute libraries to run the scoring script and then just connect it with the with",
    "start": "2121520",
    "end": "2128000"
  },
  {
    "text": "the config map and that's what we're doing here we defined a model in config map",
    "start": "2128000",
    "end": "2133680"
  },
  {
    "text": "we use connections to let the deployment engine know about that model",
    "start": "2133680",
    "end": "2140960"
  },
  {
    "start": "2140000",
    "end": "2193000"
  },
  {
    "text": "and i see here it says coupe director can inject the contents of configmap into the json file within",
    "start": "2141040",
    "end": "2147040"
  },
  {
    "text": "the clusters exactly and that's that's what the connection feature",
    "start": "2147040",
    "end": "2152240"
  },
  {
    "text": "is essentially whatever is connected cube directory will be constantly",
    "start": "2152240",
    "end": "2158000"
  },
  {
    "text": "watching that for you as things are changing there it will be reading that and getting the contents",
    "start": "2158000",
    "end": "2163680"
  },
  {
    "text": "and sticking it inside your config metadata and you have config cli which you can constantly query on top of",
    "start": "2163680",
    "end": "2171200"
  },
  {
    "text": "that we also give the lifecycle event hooks which tells uh that you know things have changed",
    "start": "2171200",
    "end": "2178000"
  },
  {
    "text": "here do you want to reconfigure do you want to make use of this new model available so all that is happening and changing",
    "start": "2178000",
    "end": "2184720"
  },
  {
    "text": "real time and things are constantly evolving um that's that's how this uh dynamicity",
    "start": "2184720",
    "end": "2190079"
  },
  {
    "text": "of this pipeline fantastic so what would you say is happening here",
    "start": "2190079",
    "end": "2196560"
  },
  {
    "start": "2193000",
    "end": "2295000"
  },
  {
    "text": "this is finally you have your ml pipeline running uh you you have published an endpoint",
    "start": "2196560",
    "end": "2204000"
  },
  {
    "text": "whatever that model was in this particular example uh people are interested in predicting",
    "start": "2204000",
    "end": "2209839"
  },
  {
    "text": "um to go from point a to point b how much time i'm gonna take in uh based on the training data set",
    "start": "2209839",
    "end": "2216160"
  },
  {
    "text": "which was for new york city so while training the model uh these were the interesting features",
    "start": "2216160",
    "end": "2222160"
  },
  {
    "text": "to the data scientist uh you know let long you know day of the week",
    "start": "2222160",
    "end": "2228079"
  },
  {
    "text": "so we ask you for this you give us new input for a deployed model uh using the pipeline it will",
    "start": "2228079",
    "end": "2236000"
  },
  {
    "text": "uh go to deployment engine you plug it in and then it will give make some",
    "start": "2236000",
    "end": "2241200"
  },
  {
    "text": "prediction for you so at the end of the day",
    "start": "2241200",
    "end": "2246000"
  },
  {
    "text": "1679 seconds is the answer yeah it's",
    "start": "2246440",
    "end": "2252240"
  },
  {
    "text": "not the most optimized model no it's it's actually fantastic because",
    "start": "2252240",
    "end": "2258320"
  },
  {
    "text": "this is really demonstrating everything this is coming from the perspective of the user from some url anywhere into",
    "start": "2258320",
    "end": "2264320"
  },
  {
    "text": "this model and after a few simple inputs you get the outputs of course this is a as you mentioned before simplified model",
    "start": "2264320",
    "end": "2271040"
  },
  {
    "text": "for demonstration purpose exactly and this is just making a rest rest api call to the deployed model",
    "start": "2271040",
    "end": "2278400"
  },
  {
    "text": "uh on the published url it could be an rpc call instead of python you can write a rest",
    "start": "2278400",
    "end": "2285280"
  },
  {
    "text": "client in you can use some postman or you can use any res client to consume the model up to the end user",
    "start": "2285280",
    "end": "2293119"
  },
  {
    "text": "okay so that brings it all full circle um and it looks like we've got lots more things to kind of tell people about that this",
    "start": "2293119",
    "end": "2299440"
  },
  {
    "start": "2295000",
    "end": "2460000"
  },
  {
    "text": "is a very live open source project with more to come right so this project",
    "start": "2299440",
    "end": "2304800"
  },
  {
    "text": "uh for this example we are showcasing how you can build dynamic machine learning pipelines",
    "start": "2304800",
    "end": "2311119"
  },
  {
    "text": "but but this project is much more than that it is uh trying to solve uh the problem of",
    "start": "2311119",
    "end": "2316720"
  },
  {
    "text": "rewriting operators every day for for every application and whatever",
    "start": "2316720",
    "end": "2321920"
  },
  {
    "text": "the common data operation is we are trying to take care of that and make it inside cube director so we",
    "start": "2321920",
    "end": "2328400"
  },
  {
    "text": "can we will continue to enhance this uh based on you know uh what are what use cases we are seeing",
    "start": "2328400",
    "end": "2334880"
  },
  {
    "text": "so like like we mentioned the concept of model is very simplistic right now it's just a config",
    "start": "2334880",
    "end": "2340560"
  },
  {
    "text": "map but it can be a cr in itself and it can have much more intelligence and we can constantly uh monitor that uh better once we define",
    "start": "2340560",
    "end": "2348480"
  },
  {
    "text": "that as a cr so we are brainstorming about that we will be uh enriching our uh",
    "start": "2348480",
    "end": "2356000"
  },
  {
    "text": "example catalog uh which already has quite a few applications but we will be",
    "start": "2356000",
    "end": "2361280"
  },
  {
    "text": "adding more something like distributed as a flow to utilize gpus uh we can add more cr which are uh",
    "start": "2361280",
    "end": "2369440"
  },
  {
    "text": "basically makes this pipeline more richer by adding things like model registry data set management and feature",
    "start": "2369440",
    "end": "2375520"
  },
  {
    "text": "engineering sort of application in the mix the secret is already better than config map",
    "start": "2375520",
    "end": "2382560"
  },
  {
    "text": "because it's base64 encoded but still we want to be further solidify that and",
    "start": "2382560",
    "end": "2388000"
  },
  {
    "text": "encrypt those uh so that inside the pod uh people cannot just decode it who has",
    "start": "2388000",
    "end": "2393200"
  },
  {
    "text": "who can whoever can do cuddle exec inside the pod so we're working on that there are",
    "start": "2393200",
    "end": "2399680"
  },
  {
    "text": "policies for role scaling uh placement constraints there there are a whole bunch of things that we are all already working on so",
    "start": "2399680",
    "end": "2407200"
  },
  {
    "text": "all those issues are listed in the url on uh people can just go there",
    "start": "2407200",
    "end": "2412400"
  },
  {
    "text": "um take a look start contributing ask questions yeah i was just going to say",
    "start": "2412400",
    "end": "2418319"
  },
  {
    "text": "contributions that's the beauty of this it's an open source project these are the things that we have seen kind of as the experts and founders but i guess tom",
    "start": "2418319",
    "end": "2425040"
  },
  {
    "text": "is there more you would say there as well it's this is open source right well absolutely completely uh you know",
    "start": "2425040",
    "end": "2431920"
  },
  {
    "text": "we are trying to get it into incubation stage so hp is in the process of you know uh going through the",
    "start": "2431920",
    "end": "2437200"
  },
  {
    "text": "process with cncf to get that done and of course we'll move through the pathway to a fully fully supported and released",
    "start": "2437200",
    "end": "2443280"
  },
  {
    "text": "open source project within cncf but please don't don't let that slow you down we'd love to build out the",
    "start": "2443280",
    "end": "2449359"
  },
  {
    "text": "community of developers the more people we have working on this the better more quickly we can enhance it to add",
    "start": "2449359",
    "end": "2456240"
  },
  {
    "text": "additional functionality awesome and kartik what is this",
    "start": "2456240",
    "end": "2461920"
  },
  {
    "text": "we have basically all the examples we showed you and a whole lot more available there also pasted in the chat right right so",
    "start": "2461920",
    "end": "2468560"
  },
  {
    "text": "we are constantly uh updating the open source project with more and more applications",
    "start": "2468560",
    "end": "2473839"
  },
  {
    "text": "uh internal teams are building uh and outside folks are also continuing to build and",
    "start": "2473839",
    "end": "2479440"
  },
  {
    "text": "add more and more so we have already built quite a few to start with a legacy",
    "start": "2479440",
    "end": "2486079"
  },
  {
    "text": "kind of you know if you call hadoop legacy today uh using cloudera distribution that is",
    "start": "2486079",
    "end": "2492319"
  },
  {
    "text": "there using map r uh you know kafka it's it's it could be a huge pain to write",
    "start": "2492319",
    "end": "2497839"
  },
  {
    "text": "an operator for something like kafka right we have tried to solve that by having a",
    "start": "2497839",
    "end": "2503920"
  },
  {
    "text": "cube director application uh which takes care of kafka we have quite a few machine learning kind of",
    "start": "2503920",
    "end": "2509839"
  },
  {
    "text": "application like tensorflow spark is another very popular one which can be used in the machine",
    "start": "2509839",
    "end": "2515599"
  },
  {
    "text": "learning areas as well as for compute and many more and this will",
    "start": "2515599",
    "end": "2520720"
  },
  {
    "text": "continue to add more and more here yeah i just wanted to point out um similar to how um",
    "start": "2520720",
    "end": "2526800"
  },
  {
    "text": "you know blue data was uh acquired by hpe we've also acquired what is very popular in the",
    "start": "2526800",
    "end": "2532400"
  },
  {
    "text": "machine learning from the data's perspective map r which is yc map r610 that is",
    "start": "2532400",
    "end": "2537920"
  },
  {
    "text": "rebranded as the esmeralda fabric and it's integrated into the hp container platform as well",
    "start": "2537920",
    "end": "2545760"
  },
  {
    "start": "2545000",
    "end": "2580000"
  },
  {
    "text": "so that completes our presentation of all of our data we've got our twitter handles here so",
    "start": "2545760",
    "end": "2552240"
  },
  {
    "text": "you guys can bother us please bother us as much as you like we'd love to you know we love this stuff we're the nerds we",
    "start": "2552240",
    "end": "2558560"
  },
  {
    "text": "have a slack channel you can reach us on email the blog post is also posted there in the chat and",
    "start": "2558560",
    "end": "2566240"
  },
  {
    "text": "there was a question also about you know when can you get this actual presentation and i think julius could even",
    "start": "2566240",
    "end": "2571920"
  },
  {
    "text": "answer that when that'll be available um but you know tom take us back to the beginning here wrap it up sure",
    "start": "2571920",
    "end": "2579119"
  },
  {
    "text": "thanks don so what we remember what we spoke about in the very beginning is the difference between stateful and stateless applications",
    "start": "2579119",
    "end": "2587200"
  },
  {
    "start": "2580000",
    "end": "2658000"
  },
  {
    "text": "uh use of kubernetes and the creation of a pipeline so what we've demonstrated today is with tensorflow",
    "start": "2587200",
    "end": "2592960"
  },
  {
    "text": "and the jupyter notebooks you can use cube director without having to write your own",
    "start": "2592960",
    "end": "2599119"
  },
  {
    "text": "operator for tensorflow or jupyter cube directory by itself you know passing the ml files",
    "start": "2599119",
    "end": "2605440"
  },
  {
    "text": "as we provided here is able to deploy and manage those applications",
    "start": "2605440",
    "end": "2612480"
  },
  {
    "text": "it doesn't have to be tensorflow it could be spark could be something else as mccarthy pointed out we're adding",
    "start": "2612480",
    "end": "2618319"
  },
  {
    "text": "some additional examples of the ammo files but we'd love to have other people jump in and provide those animals",
    "start": "2618319",
    "end": "2624000"
  },
  {
    "text": "showing how you can run other stateful applications with cooper with cube",
    "start": "2624000",
    "end": "2630000"
  },
  {
    "text": "director on kubernetes that'll help us to demonstrate more usefulness of this",
    "start": "2630000",
    "end": "2637680"
  },
  {
    "text": "open source project not only for pipeline deployment for machine learning but for all types of applications",
    "start": "2637680",
    "end": "2645760"
  },
  {
    "text": "awesome and uh we've been trying to keep up with some of the questions please uh go ahead and type them in right now to",
    "start": "2646079",
    "end": "2651119"
  },
  {
    "text": "the chat or the q a i'm not seeing the q and a pop up julius you could take over on q a or",
    "start": "2651119",
    "end": "2658160"
  },
  {
    "start": "2658000",
    "end": "2687000"
  },
  {
    "text": "yeah so everybody uh feel free to ask your questions down at the bottom",
    "start": "2658160",
    "end": "2664079"
  },
  {
    "text": "right of your screen in the q and a tab or bottom three quarters right of the",
    "start": "2664079",
    "end": "2670800"
  },
  {
    "text": "screen so we've already got one from steven how does this relate to uh interact with",
    "start": "2670800",
    "end": "2678400"
  },
  {
    "text": "uh cube flow in the concept of ml ops as this will be also available",
    "start": "2678400",
    "end": "2684000"
  },
  {
    "text": "in esmerel cp okay tom do you want to answer that",
    "start": "2684000",
    "end": "2690720"
  },
  {
    "start": "2687000",
    "end": "2793000"
  },
  {
    "text": "yeah carjack why don't you handle that one you're expert on cube flow please yes uh so yeah since you mentioned uh",
    "start": "2690720",
    "end": "2696560"
  },
  {
    "text": "asmr cp uh uh i can briefly answer that but uh cube director is more of a you know",
    "start": "2696560",
    "end": "2702640"
  },
  {
    "text": "open source project in itself so it's it's pretty extendable in terms of who do you want it to use it along",
    "start": "2702640",
    "end": "2709520"
  },
  {
    "text": "with uh but specifically in ecp uh we have plans incoming releases to tie",
    "start": "2709520",
    "end": "2715680"
  },
  {
    "text": "it nicely with kubeflow where you tube director application can be for you know your starting point",
    "start": "2715680",
    "end": "2724160"
  },
  {
    "text": "uh where where you are building your application coming up with a pipeline uh then you want to take it to next",
    "start": "2724160",
    "end": "2730079"
  },
  {
    "text": "level where q flow already has a richer components in terms of hyperparameter tuning using cutie",
    "start": "2730079",
    "end": "2736160"
  },
  {
    "text": "more kind of workflows using argo you can utilize that and how to",
    "start": "2736160",
    "end": "2742560"
  },
  {
    "text": "bridge them together is first you need a common storage uh so we are trying to solve that problem",
    "start": "2742560",
    "end": "2748000"
  },
  {
    "text": "because cube flow uh solves the problem of storage slightly differently where every",
    "start": "2748000",
    "end": "2753440"
  },
  {
    "text": "user has its own kind of persistent volume which is not the case in cube director",
    "start": "2753440",
    "end": "2758640"
  },
  {
    "text": "so in ecp specifically we will try to solve in terms of you know how cube director user depending on what",
    "start": "2758640",
    "end": "2765280"
  },
  {
    "text": "tenant they belong to can get the tenant storage once they have access to the common storage uh",
    "start": "2765280",
    "end": "2771520"
  },
  {
    "text": "and they get serialized model then you can start probably if you train the model in cube director you can",
    "start": "2771520",
    "end": "2777520"
  },
  {
    "text": "deploy it using selden or kf serving on cube flow side and that's kind of a nice",
    "start": "2777520",
    "end": "2783200"
  },
  {
    "text": "nice bridging so those kind of things we are already working on you should see some of them released in",
    "start": "2783200",
    "end": "2789680"
  },
  {
    "text": "uh future releases let me just stay thank you carl let me just a couple of things here so just for",
    "start": "2789680",
    "end": "2795760"
  },
  {
    "start": "2793000",
    "end": "2879000"
  },
  {
    "text": "for the audience sake uh when we say ecp that stands for esmerel",
    "start": "2795760",
    "end": "2801040"
  },
  {
    "text": "container platform so and it's for full disclosure again asmrl container platform is an hpe",
    "start": "2801040",
    "end": "2808480"
  },
  {
    "text": "provided product it deploys and manages your applications on kubernetes",
    "start": "2808480",
    "end": "2815680"
  },
  {
    "text": "what we presented today is an open source solution called cube director that does",
    "start": "2815680",
    "end": "2823200"
  },
  {
    "text": "work on the esmerel container platform from hewlett packard enterprise however you",
    "start": "2823200",
    "end": "2828480"
  },
  {
    "text": "can also deploy cube director on any open source kubernetes system so what we're showing",
    "start": "2828480",
    "end": "2835280"
  },
  {
    "text": "is a general usage of that and then there's a great question so what's your plans how are you going to",
    "start": "2835280",
    "end": "2840400"
  },
  {
    "text": "integrate with with kubeflow are you planning to to um replace qplo the answer is no q",
    "start": "2840400",
    "end": "2846240"
  },
  {
    "text": "plo is a wonderful tool okay we are going to augment cube director so that together these two",
    "start": "2846240",
    "end": "2852480"
  },
  {
    "text": "tools provide the additional functionality as kartik pointed out",
    "start": "2852480",
    "end": "2859520"
  },
  {
    "text": "so and julius i don't know if you saw this other one that came through in the chat um yes okay go for it this part",
    "start": "2859520",
    "end": "2867119"
  },
  {
    "text": "oh uh in the chat yeah i can get i can take it it's a is there a difference between using a",
    "start": "2867119",
    "end": "2873599"
  },
  {
    "text": "cube director to manage spark and the spark operator yeah that's a good question",
    "start": "2873599",
    "end": "2879359"
  },
  {
    "start": "2879000",
    "end": "2960000"
  },
  {
    "text": "and uh just now tom mentioned ecp we also have spark operator",
    "start": "2879359",
    "end": "2884559"
  },
  {
    "text": "but fundamentally the difference is spark operator is kind of more native to cuban it is in the in the operator we",
    "start": "2884559",
    "end": "2891280"
  },
  {
    "text": "are not trying to say here that you know this is one size fits all like this can solve all kind of problem that all the",
    "start": "2891280",
    "end": "2898640"
  },
  {
    "text": "operators are solving individually no this is more like a generic you know for",
    "start": "2898640",
    "end": "2903680"
  },
  {
    "text": "if this does not serve your use case then you evaluate can you make use of this or",
    "start": "2903680",
    "end": "2910319"
  },
  {
    "text": "do you have to write your own operator so a spark consumer if they want",
    "start": "2910319",
    "end": "2915599"
  },
  {
    "text": "uh resource manager to be native kubernetes then they should use operator but the application that we have uh will",
    "start": "2915599",
    "end": "2923200"
  },
  {
    "text": "have some resource manager as part of the virtual cluster which could be yarn or which could be",
    "start": "2923200",
    "end": "2928559"
  },
  {
    "text": "spark stand alone right because cube director",
    "start": "2928559",
    "end": "2934079"
  },
  {
    "text": "is just launching uh giving for a given role parts but more intelligent resourcing",
    "start": "2934079",
    "end": "2940800"
  },
  {
    "text": "it leads to a resource manager and it relies on that so so that's where a specific operator",
    "start": "2940800",
    "end": "2946720"
  },
  {
    "text": "like spark operator uh is kind of will be ahead of a cube",
    "start": "2946720",
    "end": "2951839"
  },
  {
    "text": "director spark application does it answer the question yeah that",
    "start": "2951839",
    "end": "2959680"
  },
  {
    "text": "one came in from from rock so if he has a follow-up you still have a few minutes",
    "start": "2959680",
    "end": "2964960"
  },
  {
    "start": "2960000",
    "end": "2980000"
  },
  {
    "text": "anybody has any questions and um another question what is what are the advantages of cube director",
    "start": "2964960",
    "end": "2970640"
  },
  {
    "text": "with network service mesh in providing connectivity among clusters",
    "start": "2970640",
    "end": "2976960"
  },
  {
    "text": "um do you undertake that uh i'm not entirely sure i understand the question",
    "start": "2978240",
    "end": "2983520"
  },
  {
    "start": "2980000",
    "end": "3022000"
  },
  {
    "text": "um okay this the service mesh is a way for different applications to find out about",
    "start": "2983520",
    "end": "2988559"
  },
  {
    "text": "each other and to connect okay um",
    "start": "2988559",
    "end": "2993599"
  },
  {
    "text": "i i wouldn't say that cube director has an advantage over uh",
    "start": "2993599",
    "end": "2999839"
  },
  {
    "text": "network service mesh it would use that so when we deploy the inference cluster we deploy the",
    "start": "2999839",
    "end": "3006559"
  },
  {
    "text": "training cluster it would register itself with the service mesh and then uh the pipeline would be",
    "start": "3006559",
    "end": "3013440"
  },
  {
    "text": "assembled by querying the service mesh to get the endpoints for the components of the pipeline",
    "start": "3013440",
    "end": "3021119"
  },
  {
    "start": "3022000",
    "end": "3066000"
  },
  {
    "text": "right and just to clarify the connection that cube director feature is not doing anything on the network layer",
    "start": "3022640",
    "end": "3028800"
  },
  {
    "text": "it's just basically it's it's giving the config metadata of different",
    "start": "3028800",
    "end": "3034400"
  },
  {
    "text": "cluster to a given cluster when you're talking about more like a service mesh like istio",
    "start": "3034400",
    "end": "3040000"
  },
  {
    "text": "kind of thing so yeah it's definitely a very different concept from that what we can do is using uh cube director",
    "start": "3040000",
    "end": "3047599"
  },
  {
    "text": "application can utilize something like a service mesh like istio like qplo already does and we",
    "start": "3047599",
    "end": "3053040"
  },
  {
    "text": "have been talking about that so they will be complementary and not completing for sure",
    "start": "3053040",
    "end": "3060079"
  },
  {
    "start": "3066000",
    "end": "3086000"
  },
  {
    "text": "great well i hope that answered uh your question if not please feel free to ask a follow-up um and yeah",
    "start": "3066720",
    "end": "3073760"
  },
  {
    "text": "if there are any more questions please ask away down at the q a tab",
    "start": "3073760",
    "end": "3083838"
  },
  {
    "start": "3086000",
    "end": "3134000"
  },
  {
    "text": "i got one for kartik how do i get one of those shirts that is this yeah where'd you get that",
    "start": "3086240",
    "end": "3092400"
  },
  {
    "text": "it's too bad uh i think we just uh it used to be in the blue data office there",
    "start": "3092400",
    "end": "3097440"
  },
  {
    "text": "used to be tons of those uh i think for one of the event we came up with these and then [Music]",
    "start": "3097440",
    "end": "3103760"
  },
  {
    "text": "well we own that then so we should know i think we just got rid of that building",
    "start": "3103760",
    "end": "3111839"
  },
  {
    "text": "no i mean we don't we own god ml we gotta just get it more t-shirts let's say that that's",
    "start": "3111920",
    "end": "3117200"
  },
  {
    "text": "right i think it's a standard swag for fresno container platform please you know next time we have a face-to-face",
    "start": "3117200",
    "end": "3123520"
  },
  {
    "text": "conference and we're giving out t-shirts again you know come by we'll happy to discuss and give out t-shirts",
    "start": "3123520",
    "end": "3129599"
  },
  {
    "text": "absolutely okay well if there's no more questions",
    "start": "3129599",
    "end": "3136880"
  },
  {
    "text": "we can go ahead and wrap up but feel free to keep asking away so i want to thank tom kartik and don",
    "start": "3136880",
    "end": "3144480"
  },
  {
    "text": "for the great presentation and for the q a um and we at the cncf will have the",
    "start": "3144480",
    "end": "3151760"
  },
  {
    "text": "slides up later today on the webinar page cncf.com",
    "start": "3151760",
    "end": "3157680"
  },
  {
    "text": "webinars and it looks like we have a question that just came in yeah is config cli",
    "start": "3157680",
    "end": "3165359"
  },
  {
    "text": "similar oh no you answered my answer back oh there we go um could you please give a give a brief",
    "start": "3165359",
    "end": "3171040"
  },
  {
    "text": "explanation about cube director and q flow and their difference right",
    "start": "3171040",
    "end": "3176240"
  },
  {
    "text": "right so cube director is uh that's a great question actually uh since we are talking about machine",
    "start": "3176240",
    "end": "3182079"
  },
  {
    "text": "learning pipeline uh cube director is more of a generic operator and it's not very specific to uh you",
    "start": "3182079",
    "end": "3189359"
  },
  {
    "text": "know any particular stream like machine learning it basically lets you build any kind of",
    "start": "3189359",
    "end": "3194559"
  },
  {
    "text": "application for this presentation uh we have utilized cube director to build",
    "start": "3194559",
    "end": "3199680"
  },
  {
    "text": "an end-to-end machine learning pipeline q flow is an operator in itself which lets you build these pipelines",
    "start": "3199680",
    "end": "3206480"
  },
  {
    "text": "and gives you various components right so it's a specific technology and for any technology you can",
    "start": "3206480",
    "end": "3212400"
  },
  {
    "text": "build an operator in kubernetes world and that's what q flow is uh cube director might have some overlap",
    "start": "3212400",
    "end": "3219040"
  },
  {
    "text": "but essentially it's very different you can queue director lets you build your own application",
    "start": "3219040",
    "end": "3224480"
  },
  {
    "text": "without writing any go code cube flow is an operator in itself to extend it you have to write go code or to add more",
    "start": "3224480",
    "end": "3231680"
  },
  {
    "text": "components to queue flow operator you have to bring in new operators in itself",
    "start": "3231680",
    "end": "3239040"
  },
  {
    "text": "while cube director is is an operator where you don't have to write new operators but",
    "start": "3239040",
    "end": "3244640"
  },
  {
    "text": "new crs which is a cube director application for every new application",
    "start": "3244640",
    "end": "3251838"
  },
  {
    "text": "great well thank you guys for a great presentation the webinar will be",
    "start": "3255359",
    "end": "3261760"
  },
  {
    "text": "up later today on the cmcf webinar page and i'd like to thank everybody for",
    "start": "3261760",
    "end": "3268319"
  },
  {
    "text": "attending have a great day everybody thank you thank you",
    "start": "3268319",
    "end": "3278160"
  }
]