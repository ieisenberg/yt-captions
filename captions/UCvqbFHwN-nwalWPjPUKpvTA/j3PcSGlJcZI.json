[
  {
    "text": "so everyone thanks thanks for joining uh today we are going to talk about how we",
    "start": "0",
    "end": "5940"
  },
  {
    "text": "can use file code to monitor capabilities and all the work that we have done in order to expand FICO to",
    "start": "5940",
    "end": "12120"
  },
  {
    "text": "monitor probability uh so let's just introduce ourselves I'm Stefano and I'm a security researcher at",
    "start": "12120",
    "end": "19199"
  },
  {
    "text": "sysdig and with me today is presenting uh Lorenzo suzini which is a open source",
    "start": "19199",
    "end": "25619"
  },
  {
    "text": "engineer at sysdig we are both from from Italy and we are both a Falco",
    "start": "25619",
    "end": "31380"
  },
  {
    "text": "contributor so let's start for for for today and",
    "start": "31380",
    "end": "36719"
  },
  {
    "text": "let's start with uh talking about container isolation so we all know uh container is",
    "start": "36719",
    "end": "44340"
  },
  {
    "text": "is a a great way to uh to deploy our our",
    "start": "44340",
    "end": "49399"
  },
  {
    "text": "uh our application and transport our code however we also know that",
    "start": "49399",
    "end": "56100"
  },
  {
    "text": "um containers aren't security boundaries um so what makes container secure and",
    "start": "56100",
    "end": "64260"
  },
  {
    "text": "what make a container resolution are all the layers that are around containers",
    "start": "64260",
    "end": "69659"
  },
  {
    "text": "and in error reporters some of them but we have also uh web capabilities second",
    "start": "69659",
    "end": "75119"
  },
  {
    "text": "performer but we have also uh Linux Linux namespaces and C group for",
    "start": "75119",
    "end": "81180"
  },
  {
    "text": "instance so all these layers come together to bring a container container",
    "start": "81180",
    "end": "87479"
  },
  {
    "text": "resolution today for today the main topic will be capabilities but let's just introduce",
    "start": "87479",
    "end": "94979"
  },
  {
    "text": "also a farmer and second so cover bees are a way to",
    "start": "94979",
    "end": "100880"
  },
  {
    "text": "restrict uh the Privileges that are permitted in containers second instead",
    "start": "100880",
    "end": "108540"
  },
  {
    "text": "are is Linux feature that can be used to restrict ciscos and the argument that we",
    "start": "108540",
    "end": "114000"
  },
  {
    "text": "can pass to to them to Cisco's and also a farmer is a mandatory Access Control",
    "start": "114000",
    "end": "120780"
  },
  {
    "text": "framework that can be used to add the tax on programs and we can enforce the",
    "start": "120780",
    "end": "127140"
  },
  {
    "text": "specific programs can have specific access to objects so for instance we can",
    "start": "127140",
    "end": "133860"
  },
  {
    "text": "say a specific program can never access or read access to or to I don't know ATC",
    "start": "133860",
    "end": "140700"
  },
  {
    "text": "past 2D but not to ATC Shadow it's also worth mentioning that",
    "start": "140700",
    "end": "146520"
  },
  {
    "text": "um by default when when you use Docker and we and we deploy a container all these",
    "start": "146520",
    "end": "152160"
  },
  {
    "text": "security layers are enabled by default in order to provide the least privileged concept and and",
    "start": "152160",
    "end": "159780"
  },
  {
    "text": "that's enabled by default so we don't need to provide any uh particular Flags or we'll set particular Flags is all",
    "start": "159780",
    "end": "167400"
  },
  {
    "text": "enabled by default today we talk about how we can use fileco to since fileco is",
    "start": "167400",
    "end": "173640"
  },
  {
    "text": "able to to have a visibility over what is going on inside our container we can also we",
    "start": "173640",
    "end": "179760"
  },
  {
    "text": "extended also a fileco to see capabilities and which capabilities are",
    "start": "179760",
    "end": "185459"
  },
  {
    "text": "actually available so I'll let Lorenzo talk about capabilities and how they works yeah thanks a lot Stefano for",
    "start": "185459",
    "end": "191940"
  },
  {
    "text": "introducing me and let's now jump into the main topic and well as we all know",
    "start": "191940",
    "end": "197239"
  },
  {
    "text": "traditionally we used to distinguish Linux processes into two different categories which are Privileges and",
    "start": "197239",
    "end": "204360"
  },
  {
    "text": "processes and unprivileged ones so we can say that this model is binary and it",
    "start": "204360",
    "end": "210720"
  },
  {
    "text": "can be risky from a security perspective this is because basically privileged",
    "start": "210720",
    "end": "216060"
  },
  {
    "text": "processes are those running with effective user ID equal to zero and it can basically password kernel permission",
    "start": "216060",
    "end": "222840"
  },
  {
    "text": "checks as we all know and on the other hand privileged processes instead are",
    "start": "222840",
    "end": "228840"
  },
  {
    "text": "those subject to all current permission checks and most of the time this is done using their own effective user-ready or",
    "start": "228840",
    "end": "234780"
  },
  {
    "text": "group ID and from an attacker standpoint this model is exposable of course by",
    "start": "234780",
    "end": "241260"
  },
  {
    "text": "attacking directly root processes and once the root process",
    "start": "241260",
    "end": "246659"
  },
  {
    "text": "is compromised the whole system is at risk of being compromised for this reason to improve its security model",
    "start": "246659",
    "end": "254159"
  },
  {
    "text": "Linux has implemented the capabilities and capabilities May are a clear example",
    "start": "254159",
    "end": "259739"
  },
  {
    "text": "of applying and implementing the principle of list privilege and in fact as the model States the power of the",
    "start": "259739",
    "end": "267000"
  },
  {
    "text": "super user is splitted into distinct units that can be independently granted",
    "start": "267000",
    "end": "272520"
  },
  {
    "text": "or revoked and this allow us to run processes with the minimal set of",
    "start": "272520",
    "end": "279300"
  },
  {
    "text": "privileges that they need and hopefully an attacker getting in control about the beginning control on these processes",
    "start": "279300",
    "end": "286259"
  },
  {
    "text": "cannot compromise fully the system with the same needs as before and the classic",
    "start": "286259",
    "end": "292979"
  },
  {
    "text": "example about this is the one over of a web server for instance and before the",
    "start": "292979",
    "end": "299580"
  },
  {
    "text": "introduction of capabilities a web server needed to run as root only",
    "start": "299580",
    "end": "304740"
  },
  {
    "text": "because it had to open a privileged part that is a part below 1024.",
    "start": "304740",
    "end": "310740"
  },
  {
    "text": "with capabilities you can map this specific privilege to the capability which is in",
    "start": "310740",
    "end": "318660"
  },
  {
    "text": "this case cabinet Mine Service we can let it not bypass checks for",
    "start": "318660",
    "end": "326940"
  },
  {
    "text": "instance on the file system which is translating into a completely different",
    "start": "326940",
    "end": "331979"
  },
  {
    "text": "capabilities which is in this in this case Capital right so since you are here",
    "start": "331979",
    "end": "337139"
  },
  {
    "text": "to implement proper monitoring of capabilities with the purpose of detecting attacks our takeovers on this",
    "start": "337139",
    "end": "344340"
  },
  {
    "text": "is that not all capabilities are the same in terms of privileges they allow",
    "start": "344340",
    "end": "349380"
  },
  {
    "text": "in fact some of them can be defined as full root equivalent if gained by an",
    "start": "349380",
    "end": "355080"
  },
  {
    "text": "attacker and this is because if an attacker manages to gain one of them it",
    "start": "355080",
    "end": "361440"
  },
  {
    "text": "can possibly gain all of them with other successful attacks and as we will show",
    "start": "361440",
    "end": "369660"
  },
  {
    "text": "later so let's go on and to implement to",
    "start": "369660",
    "end": "375240"
  },
  {
    "text": "implement monitoring for capabilities we have to better understand how they work so basically capabilities are usually",
    "start": "375240",
    "end": "381600"
  },
  {
    "text": "divided into three main sets and which are defective the permitted and inheritable set and you can see that the",
    "start": "381600",
    "end": "389400"
  },
  {
    "text": "effective the effective set in a certain sense reflects a little bit the concept of the effective user ID and in fact",
    "start": "389400",
    "end": "397440"
  },
  {
    "text": "this is the set that the kernel uses to perform actual permission check and on the other hand we have the",
    "start": "397440",
    "end": "404660"
  },
  {
    "text": "permitted set which is basically the super set of all capabilities the",
    "start": "404660",
    "end": "410100"
  },
  {
    "text": "process may have been required and we can move capabilities from the effective set to the permitted set to let the",
    "start": "410100",
    "end": "416639"
  },
  {
    "text": "effective set have only the Privileges needed at a specific point in time",
    "start": "416639",
    "end": "421979"
  },
  {
    "text": "and last button on list the inheritable set instead is used to control which capabilities are inerted upon exactly a",
    "start": "421979",
    "end": "429539"
  },
  {
    "text": "system call which is a pretty relevant example so the narratable set is used to",
    "start": "429539",
    "end": "438900"
  },
  {
    "text": "perform specific operations by the kernel to compute the",
    "start": "438900",
    "end": "444000"
  },
  {
    "text": "new permitted set as you can see in the next slide and yeah so this is how capabilities",
    "start": "444000",
    "end": "451080"
  },
  {
    "text": "changes upon exact fear and what I want to stress here is that the Cardinal",
    "start": "451080",
    "end": "456539"
  },
  {
    "text": "um uh use uh specific set sort of rules to change capabilities of a process and",
    "start": "456539",
    "end": "462539"
  },
  {
    "text": "following the previous reasoning we have to say that the effective set should start to empty when exactly is performed",
    "start": "462539",
    "end": "470940"
  },
  {
    "text": "this is because we want processes to manually move with CIS called",
    "start": "470940",
    "end": "476300"
  },
  {
    "text": "capabilities from the permitted sets to the effective one however the the kernel",
    "start": "476300",
    "end": "481380"
  },
  {
    "text": "also offered backward compatibilities for those",
    "start": "481380",
    "end": "487440"
  },
  {
    "text": "binaries that can be defined as capability dumped meaning that they are not able to move capabilities in between",
    "start": "487440",
    "end": "493380"
  },
  {
    "text": "sets and for doing that the file effective sets and the file effective",
    "start": "493380",
    "end": "499500"
  },
  {
    "text": "flag sorry it can be used and this is basically used to move the new permitted",
    "start": "499500",
    "end": "505560"
  },
  {
    "text": "set to the effective set so that that the process uh doesn't have to move capabilities using others is called",
    "start": "505560",
    "end": "514260"
  },
  {
    "text": "so uh now let's go back to container security and see our capabilities applied to it and in fact when talking",
    "start": "514260",
    "end": "522899"
  },
  {
    "text": "about container security we basically have two different possibilities fill out our work with",
    "start": "522899",
    "end": "529320"
  },
  {
    "text": "drums actually so the first one is to avoid container running as root I think",
    "start": "529320",
    "end": "534959"
  },
  {
    "text": "everybody here knows about this because basically containers like Stefan was",
    "start": "534959",
    "end": "541320"
  },
  {
    "text": "saying before are not the security boundary like VMS and if you're not using username spaces root in the",
    "start": "541320",
    "end": "549360"
  },
  {
    "text": "container is also root on the host uh but sometimes we want our containers",
    "start": "549360",
    "end": "554940"
  },
  {
    "text": "to run privileges or privileged operations and we may be tempted to run",
    "start": "554940",
    "end": "559980"
  },
  {
    "text": "down this route so uh what can we do we can do we can use capabilities as we",
    "start": "559980",
    "end": "565740"
  },
  {
    "text": "said capabilities on the other hand have the possibility to selectively choose the",
    "start": "565740",
    "end": "571019"
  },
  {
    "text": "privilege that we want and anyway you think that since capabilities are a lot and sometimes",
    "start": "571019",
    "end": "577380"
  },
  {
    "text": "it's really difficult to understand which capabilities our workload needs we",
    "start": "577380",
    "end": "583440"
  },
  {
    "text": "may end up in certain cases running excessively privileged containers as",
    "start": "583440",
    "end": "589860"
  },
  {
    "text": "well and this is for sure not good from a security standpoint and Stefano will now",
    "start": "589860",
    "end": "595620"
  },
  {
    "text": "show you why and how capabilities can be used in real attacks so thanks",
    "start": "595620",
    "end": "602279"
  },
  {
    "text": "um let's now uh deep dive into attacks on uh container escaping I just reported",
    "start": "602279",
    "end": "609360"
  },
  {
    "text": "this slide just to say basically what we have said before right so containers aren't isolated by default and in this",
    "start": "609360",
    "end": "617760"
  },
  {
    "text": "case uh we all know if we deploy a container as privileged this is far to",
    "start": "617760",
    "end": "623279"
  },
  {
    "text": "be isolated right so of course we are we are still using container we are still using Docker but this is far to be an",
    "start": "623279",
    "end": "631320"
  },
  {
    "text": "isolated environment that's because if we use capabilities and we see",
    "start": "631320",
    "end": "637640"
  },
  {
    "text": "since we are talking about capabilities with privileged all the capabilities are available and all the capabilities can",
    "start": "637640",
    "end": "644880"
  },
  {
    "text": "be used and loaded by a possible attack so that's just to mention that when we",
    "start": "644880",
    "end": "651060"
  },
  {
    "text": "deploy a container as privilege we need to be careful that this is needed and we",
    "start": "651060",
    "end": "656339"
  },
  {
    "text": "we need to be super careful of what we do so let's start let's start now really",
    "start": "656339",
    "end": "661740"
  },
  {
    "text": "talk about container skipping attacks and in this case let's start with the with this",
    "start": "661740",
    "end": "667800"
  },
  {
    "text": "technique with the CIS model capability so this module is used to load and load",
    "start": "667800",
    "end": "674820"
  },
  {
    "text": "kernel module and for this technique we have the only requirement here that we",
    "start": "674820",
    "end": "680040"
  },
  {
    "text": "have is uh having the assist model capability and how it works is pretty",
    "start": "680040",
    "end": "685260"
  },
  {
    "text": "simple so let's say that an attacker is able to get any uh the initials the",
    "start": "685260",
    "end": "691140"
  },
  {
    "text": "initial foothold in a container and find out that the disease model capability is",
    "start": "691140",
    "end": "697440"
  },
  {
    "text": "is available and can be used so the attacker just need to drop the the",
    "start": "697440",
    "end": "703680"
  },
  {
    "text": "module inside the container and since the module is is loaded in the kernel",
    "start": "703680",
    "end": "710279"
  },
  {
    "text": "all the all the malicious code is going to be executed in the host so in this in",
    "start": "710279",
    "end": "715740"
  },
  {
    "text": "this example one once we load the malicious module The Bash reversal is",
    "start": "715740",
    "end": "722640"
  },
  {
    "text": "going to be executed and so the connection will will be open",
    "start": "722640",
    "end": "727740"
  },
  {
    "text": "from the container those back to the back to attacker machine and it's also",
    "start": "727740",
    "end": "732839"
  },
  {
    "text": "worth mentioning that uh the attacker might need to um to compile the model inside the",
    "start": "732839",
    "end": "739440"
  },
  {
    "text": "container because just to be sure that the model is gonna is gonna run and and",
    "start": "739440",
    "end": "745740"
  },
  {
    "text": "for this the attacker might need the the Linux heater installed in the in the host otherwise it's not possible to run",
    "start": "745740",
    "end": "752399"
  },
  {
    "text": "this attack um let's just move on with another technique and in this case we use this",
    "start": "752399",
    "end": "759480"
  },
  {
    "text": "the capability pit race in particular pit race is used to control other other",
    "start": "759480",
    "end": "767760"
  },
  {
    "text": "processes but also with pit race we can also modify the the process memory to inject",
    "start": "767760",
    "end": "776120"
  },
  {
    "text": "arbitrary code and you can also modify the the pointer extraction in order to",
    "start": "776120",
    "end": "783000"
  },
  {
    "text": "run this arbitrary code so in in other words with",
    "start": "783000",
    "end": "789839"
  },
  {
    "text": "pitrace we can inject malicious code and actually execute it so it's pretty",
    "start": "789839",
    "end": "795079"
  },
  {
    "text": "powerful capability so in this case for this technique we have three main",
    "start": "795079",
    "end": "802040"
  },
  {
    "text": "requirements so first one is of course having the CSP Trace available the",
    "start": "802040",
    "end": "808320"
  },
  {
    "text": "second one is apartment we need to have a farmer set as unconfined or or",
    "start": "808320",
    "end": "815579"
  },
  {
    "text": "allowing pit race and the third one is the container and those needs to share",
    "start": "815579",
    "end": "822779"
  },
  {
    "text": "the dpid address space uh so as said before let's say an",
    "start": "822779",
    "end": "829680"
  },
  {
    "text": "attacker has access uh to the to the container and was able to get initial",
    "start": "829680",
    "end": "835139"
  },
  {
    "text": "access into the container and find out that see the P Trace capability is is",
    "start": "835139",
    "end": "841380"
  },
  {
    "text": "available so in this case the attacker just need to drop its own injector with",
    "start": "841380",
    "end": "846660"
  },
  {
    "text": "the with the malicious Shell Code and find a process that you want to inject",
    "start": "846660",
    "end": "852180"
  },
  {
    "text": "and and just execute the the Shell Code in this case as we said before since the",
    "start": "852180",
    "end": "858420"
  },
  {
    "text": "the address space is shared between the container and those um the the malicious child code is going",
    "start": "858420",
    "end": "865860"
  },
  {
    "text": "to be executed in the host and that's why if we as as we said before if we",
    "start": "865860",
    "end": "871440"
  },
  {
    "text": "open the reversal there is the the reversal is going to start the",
    "start": "871440",
    "end": "877079"
  },
  {
    "text": "connection from the container source to back to the to the attacker machine and",
    "start": "877079",
    "end": "882480"
  },
  {
    "text": "that's another attack but using a different capability I'll just close with with",
    "start": "882480",
    "end": "889320"
  },
  {
    "text": "um the last the last example for today so this attack is a well-known attack",
    "start": "889320",
    "end": "894600"
  },
  {
    "text": "for container escaping uh in this case it was published on 2019 uh on Twitter",
    "start": "894600",
    "end": "901880"
  },
  {
    "text": "uh in this case the first example that is reported here on on the left required",
    "start": "901880",
    "end": "910279"
  },
  {
    "text": "a privileged run as privileged a container runs privileged",
    "start": "910279",
    "end": "915440"
  },
  {
    "text": "after after that a new a new exploit came out and in this case we just need",
    "start": "915440",
    "end": "921120"
  },
  {
    "text": "the C submin capability in order to to be successful for this specific attack we have three",
    "start": "921120",
    "end": "928260"
  },
  {
    "text": "requirements so since admin is one a farmer with the unconfined or just",
    "start": "928260",
    "end": "935040"
  },
  {
    "text": "allowing the mount operation and also we need to have a root user inside the",
    "start": "935040",
    "end": "940800"
  },
  {
    "text": "container so to understand how this work we just need to understand how notifying",
    "start": "940800",
    "end": "947459"
  },
  {
    "text": "or release works and and this is pretty easy so on if I uh notify your release",
    "start": "947459",
    "end": "952980"
  },
  {
    "text": "is a feature uh in the C group V1 versus version one and basically if it's",
    "start": "952980",
    "end": "960600"
  },
  {
    "text": "enabled so it's set to one uh once a container a process terminates",
    "start": "960600",
    "end": "968060"
  },
  {
    "text": "the kernel is going to execute the code inside the release agent file so",
    "start": "968060",
    "end": "973440"
  },
  {
    "text": "whatever code inside is inside the release agent is going to be executed by the kernel and and that's basically the",
    "start": "973440",
    "end": "980339"
  },
  {
    "text": "how the exploit works so just just going through the code the exploit just create",
    "start": "980339",
    "end": "985440"
  },
  {
    "text": "a directory a directory is mounting the the C group controller inside this this",
    "start": "985440",
    "end": "992639"
  },
  {
    "text": "director with the the option RDMA and also is creating the C group",
    "start": "992639",
    "end": "998959"
  },
  {
    "text": "directory inside it also as we as we can see the the Notifier release is set to",
    "start": "998959",
    "end": "1004579"
  },
  {
    "text": "one and as we said you just to enable the feature and then all the other commands is done to create the release",
    "start": "1004579",
    "end": "1012019"
  },
  {
    "text": "agent with the malicious command that we want to execute in this case it's just getting the path for from the overlays",
    "start": "1012019",
    "end": "1019040"
  },
  {
    "text": "and and the command that we want to execute so in this case being sh so we actually",
    "start": "1019040",
    "end": "1025280"
  },
  {
    "text": "we are opening a shell in the in the host and the last command is just used",
    "start": "1025280",
    "end": "1030438"
  },
  {
    "text": "to trigger the the exploit uh running an Eco command",
    "start": "1030439",
    "end": "1035959"
  },
  {
    "text": "um and that's it so once the Eco command is going to to terminate uh notify your",
    "start": "1035959",
    "end": "1041660"
  },
  {
    "text": "releases is is enabled it's going to trigger uh the workflow and and executing the malicious command that is",
    "start": "1041660",
    "end": "1048860"
  },
  {
    "text": "inside the um the release agent uh so just to recap what we have said",
    "start": "1048860",
    "end": "1055760"
  },
  {
    "text": "um so far so we have these three techniques all that the three techniques",
    "start": "1055760",
    "end": "1061400"
  },
  {
    "text": "that we have presented are using three different uh capabilities and so now we let's see",
    "start": "1061400",
    "end": "1069260"
  },
  {
    "text": "um what we did in in FICO uh in order to detect those uh this malicious behavior",
    "start": "1069260",
    "end": "1077179"
  },
  {
    "text": "and how we can and what we can do with FICO for monitoring abilities yeah thanks Stefano for doing that with",
    "start": "1077179",
    "end": "1084559"
  },
  {
    "text": "such examples and so now that we are aware about talk of abilities work and",
    "start": "1084559",
    "end": "1089840"
  },
  {
    "text": "how they can be used in real attacks we want to show you how to monitor them",
    "start": "1089840",
    "end": "1095360"
  },
  {
    "text": "using Falco so for those of you who doesn't know about Falco Falco is an open source project for runtime security",
    "start": "1095360",
    "end": "1102039"
  },
  {
    "text": "and it can it became the de facto standard for kubernetes strategic action",
    "start": "1102039",
    "end": "1107179"
  },
  {
    "text": "it was originally created by sisdig and then donated to the cncf and it's",
    "start": "1107179",
    "end": "1113179"
  },
  {
    "text": "currently at incubation level and we both work for it become better and",
    "start": "1113179",
    "end": "1120140"
  },
  {
    "text": "better and we always try to improve it its detection capabilities so another",
    "start": "1120140",
    "end": "1126320"
  },
  {
    "text": "thing that it's exciting about Falco is its Vibrant Community and I think that",
    "start": "1126320",
    "end": "1132140"
  },
  {
    "text": "it's really nice to work in such an environment because people are really active and contributing and hopefully",
    "start": "1132140",
    "end": "1139100"
  },
  {
    "text": "this all that shows an extension that we made to Falco we'll encourage you to do",
    "start": "1139100",
    "end": "1145760"
  },
  {
    "text": "the same and improve it and make it become better and better",
    "start": "1145760",
    "end": "1150799"
  },
  {
    "text": "so before we dig into the details on how we extended Falco to monitor capabilities let me give everybody a",
    "start": "1150799",
    "end": "1157760"
  },
  {
    "text": "little overview about it and we can say that Falco is powered by its kernel",
    "start": "1157760",
    "end": "1163340"
  },
  {
    "text": "module and it's even if you have probe to collect system calls data directly",
    "start": "1163340",
    "end": "1168500"
  },
  {
    "text": "from the kernel which is considered the sorts of truths for our purposes so most",
    "start": "1168500",
    "end": "1174799"
  },
  {
    "text": "of the event connection components user in buffer to push events that are",
    "start": "1174799",
    "end": "1181480"
  },
  {
    "text": "uninfoliated and used in user space uh in our libraries what I would like to",
    "start": "1181480",
    "end": "1189799"
  },
  {
    "text": "stress most about this is that there is a part in one of our libraries that is",
    "start": "1189799",
    "end": "1195559"
  },
  {
    "text": "responsible for maintaining the state of the system and this part is of course in",
    "start": "1195559",
    "end": "1200780"
  },
  {
    "text": "limp Sims as you can see and um what we you what what we do with this",
    "start": "1200780",
    "end": "1207799"
  },
  {
    "text": "part of a state is making it accessible",
    "start": "1207799",
    "end": "1212980"
  },
  {
    "text": "by conditions and rules and making it able to write",
    "start": "1212980",
    "end": "1219460"
  },
  {
    "text": "rules and condition able to spot new kind of attacks so with this in mind we",
    "start": "1219460",
    "end": "1225620"
  },
  {
    "text": "realize that Falco was only able to see in black and white meaning that",
    "start": "1225620",
    "end": "1231620"
  },
  {
    "text": "uh he was only able to discriminate and distinguish root and root processes and",
    "start": "1231620",
    "end": "1238520"
  },
  {
    "text": "we wanted to put some light in that gray area that capabilities have created",
    "start": "1238520",
    "end": "1244640"
  },
  {
    "text": "um in between so to summarize the part of the work that we have done we can do it in",
    "start": "1244640",
    "end": "1252340"
  },
  {
    "text": "explaining the two main steps so basically what we did is that when Falco",
    "start": "1252340",
    "end": "1258799"
  },
  {
    "text": "starts it needs to be to build the state of the world that is the state of the",
    "start": "1258799",
    "end": "1264200"
  },
  {
    "text": "the actual System state at a given point in time this is when Falco starts and",
    "start": "1264200",
    "end": "1270740"
  },
  {
    "text": "most of the information used to do this comes from the frock file system and fortunately there is a file in the frock",
    "start": "1270740",
    "end": "1277400"
  },
  {
    "text": "file system which let us retrieve information about all capabilities of",
    "start": "1277400",
    "end": "1284120"
  },
  {
    "text": "process and we use this to populate the initial state",
    "start": "1284120",
    "end": "1289760"
  },
  {
    "text": "so once this is built um Falco starts capturing system calls",
    "start": "1289760",
    "end": "1294799"
  },
  {
    "text": "and keep updating it using system called Data so what we did is enumerating all",
    "start": "1294799",
    "end": "1301280"
  },
  {
    "text": "the possible system codes that may interact with a process and modifying its own capabilities and we started with",
    "start": "1301280",
    "end": "1309500"
  },
  {
    "text": "the fork system call which was the easiest one because basically we only have to copy the capabilities from the",
    "start": "1309500",
    "end": "1317179"
  },
  {
    "text": "parent process to the chart to the child and almost the same goes for the Clone",
    "start": "1317179",
    "end": "1324080"
  },
  {
    "text": "system calls except for those clone decks creates new name spaces and",
    "start": "1324080",
    "end": "1331580"
  },
  {
    "text": "um moreover to push to use the space the new capabilities also in the exact fear",
    "start": "1331580",
    "end": "1338240"
  },
  {
    "text": "we modified the event of exactly to push information about capabilities also in",
    "start": "1338240",
    "end": "1344179"
  },
  {
    "text": "that case and last button on list we have also the",
    "start": "1344179",
    "end": "1349280"
  },
  {
    "text": "possibility to move capabilities in between sets as we already know and this",
    "start": "1349280",
    "end": "1354679"
  },
  {
    "text": "is usually done with the capset system codes and to do so we implemented the",
    "start": "1354679",
    "end": "1361120"
  },
  {
    "text": "monitoring for that for that system called from scratch so in this way we are able to let rules",
    "start": "1361120",
    "end": "1369020"
  },
  {
    "text": "extract capabilities from the state and we can write some interesting rules two",
    "start": "1369020",
    "end": "1374299"
  },
  {
    "text": "spots attacks based on capabilities and now Stefan will show you what kind of",
    "start": "1374299",
    "end": "1380299"
  },
  {
    "text": "rules we came up with and hopefully it is interesting to see it together",
    "start": "1380299",
    "end": "1388280"
  },
  {
    "text": "so thanks and thanks to the Lawrence work on on FICO we are now able to use",
    "start": "1388280",
    "end": "1394280"
  },
  {
    "text": "capabilities inside filecruz this is a rule that we created in order to",
    "start": "1394280",
    "end": "1401780"
  },
  {
    "text": "um to control and detect if someone deploy a new container with with",
    "start": "1401780",
    "end": "1409039"
  },
  {
    "text": "excessive capabilities uh so as you can see here just a two word on how how FICO rules work",
    "start": "1409039",
    "end": "1417020"
  },
  {
    "text": "um so the FICO rules are loaded inside the FICO engine and once a news is",
    "start": "1417020",
    "end": "1423500"
  },
  {
    "text": "called come in uh FICO engine is able to check and emerge all the uh all the",
    "start": "1423500",
    "end": "1431600"
  },
  {
    "text": "rules and checking if if I will match with the with the Cisco uh is able to",
    "start": "1431600",
    "end": "1437480"
  },
  {
    "text": "trigger a security alert and that's how it works so let's see the",
    "start": "1437480",
    "end": "1442760"
  },
  {
    "text": "condition here so the rule is going to trigger when we create a new container with excessive capabilities and in the",
    "start": "1442760",
    "end": "1449840"
  },
  {
    "text": "macro shows all the capabilities that we are monitoring in this case and as you",
    "start": "1449840",
    "end": "1455059"
  },
  {
    "text": "can see there are assist model and see speed race there are the two capabilities that we have talked before",
    "start": "1455059",
    "end": "1461980"
  },
  {
    "text": "uh and in the bottom we can see there the output from from Falcon and also we",
    "start": "1461980",
    "end": "1470600"
  },
  {
    "text": "have also uh the the other rule that we created this is specific for the use",
    "start": "1470600",
    "end": "1476179"
  },
  {
    "text": "case as we talked before about the release agent file so as we discussed before uh the the attackers need to",
    "start": "1476179",
    "end": "1483980"
  },
  {
    "text": "modify the release agent file in order to inject the code that you want to",
    "start": "1483980",
    "end": "1489220"
  },
  {
    "text": "execute and that's mainly where we create the detection so once the release",
    "start": "1489220",
    "end": "1495559"
  },
  {
    "text": "agent file is open is open to write a commands and also the the container as",
    "start": "1495559",
    "end": "1504440"
  },
  {
    "text": "the the sysadmin capability and the user is root we are going to write the",
    "start": "1504440",
    "end": "1510320"
  },
  {
    "text": "security alert and in the bottom we see uh the output mentioning all the",
    "start": "1510320",
    "end": "1515480"
  },
  {
    "text": "capabilities available so we can see the capsys has been is one of them and in",
    "start": "1515480",
    "end": "1521299"
  },
  {
    "text": "this way we are able to detect with a very low Force positive",
    "start": "1521299",
    "end": "1526880"
  },
  {
    "text": "um the the potential malicious behavior so having said that the sit from my side",
    "start": "1526880",
    "end": "1533600"
  },
  {
    "text": "I let Lorenzo close the session and start the the Q a yeah that was",
    "start": "1533600",
    "end": "1539480"
  },
  {
    "text": "basically it hope you have enjoyed the salt and if you have some questions feel free to reach out now or in the Falco",
    "start": "1539480",
    "end": "1547039"
  },
  {
    "text": "kubernetes slack and that's it I hope you have enjoyed the talk and you will",
    "start": "1547039",
    "end": "1553400"
  },
  {
    "text": "use capabilities or try to improve routes and hopefully contribute to the",
    "start": "1553400",
    "end": "1560240"
  },
  {
    "text": "gut to be able to improve Falco always",
    "start": "1560240",
    "end": "1566740"
  },
  {
    "text": "thanks a lot for being here thank you so if you have any someone",
    "start": "1566740",
    "end": "1574520"
  },
  {
    "text": "else any question",
    "start": "1574520",
    "end": "1577299"
  },
  {
    "text": "yeah if you want to use Falcon in your cluster there are M charts to do that and you can use they are officially",
    "start": "1593620",
    "end": "1600740"
  },
  {
    "text": "provided by the Falco security organization yeah it is when you wanted to use in",
    "start": "1600740",
    "end": "1608120"
  },
  {
    "text": "kubernetes it can be used as containers and you know the arm chart will",
    "start": "1608120",
    "end": "1616000"
  },
  {
    "text": "spawn pots on each node in the cluster as a diamond set",
    "start": "1616000",
    "end": "1621020"
  },
  {
    "text": "and that's that's it basically you can use this to the play Fark or",
    "start": "1621020",
    "end": "1626480"
  },
  {
    "text": "Falco is also Deployable on and on and you can use our packages to to do that",
    "start": "1626480",
    "end": "1634840"
  },
  {
    "text": "thank you uh maybe an obvious question for a Falco we see all the",
    "start": "1637760",
    "end": "1644919"
  },
  {
    "text": "rule configurations that go in the yaml",
    "start": "1644919",
    "end": "1650980"
  },
  {
    "text": "configuration for the cluster does Falco look also into those type of",
    "start": "1650980",
    "end": "1659360"
  },
  {
    "text": "of aspects do we consider that any configuration that occurs is treated as",
    "start": "1659360",
    "end": "1665960"
  },
  {
    "text": "an event and then Falco will see and analyze or these are two separate no no this is just a different thing because",
    "start": "1665960",
    "end": "1674179"
  },
  {
    "text": "Falco it's runtime security it only it doesn't look about configuration in the",
    "start": "1674179",
    "end": "1680740"
  },
  {
    "text": "in the yaml it only looks at runtime if a process is being executed with a",
    "start": "1680740",
    "end": "1687919"
  },
  {
    "text": "specific capability or not and I don't know if this answer your question well",
    "start": "1687919",
    "end": "1694279"
  },
  {
    "text": "these are configuration that can happen at runtime so it's still part of the runtime whether I change I do a change",
    "start": "1694279",
    "end": "1700880"
  },
  {
    "text": "in my environment this is going to be captured or not yeah if you spawn another pod with different capabilities",
    "start": "1700880",
    "end": "1707960"
  },
  {
    "text": "it will be captured at around Time by Falco thank you",
    "start": "1707960",
    "end": "1714519"
  },
  {
    "text": "yeah that's",
    "start": "1718960",
    "end": "1722500"
  },
  {
    "text": "what so if if I'm able now to capture at runtime also those type of configuration",
    "start": "1729140",
    "end": "1736340"
  },
  {
    "text": "uh do I have an overlap or do I always need",
    "start": "1736340",
    "end": "1741679"
  },
  {
    "text": "to have both of them because there are configuration types that cannot be",
    "start": "1741679",
    "end": "1747559"
  },
  {
    "text": "captured by by the uh event triggering and looking if I if I'm allowing Falco",
    "start": "1747559",
    "end": "1755299"
  },
  {
    "text": "to be able to detect all the configurations at runtime that happen through this you know enamel",
    "start": "1755299",
    "end": "1760700"
  },
  {
    "text": "configuration so I have a duplication now I have the rule engines that detect that I have also a file code that is",
    "start": "1760700",
    "end": "1767240"
  },
  {
    "text": "looking from a logging perspective to the same thing do I have a duplication can I focus only on one of them",
    "start": "1767240",
    "end": "1774340"
  },
  {
    "text": "foreign okay so there will be like treat it as different Falco will have okay or maybe",
    "start": "1775520",
    "end": "1782659"
  },
  {
    "text": "there is an overlap but not big enough to separate there is no overlap okay okay thank you",
    "start": "1782659",
    "end": "1790539"
  },
  {
    "text": "any other questions yeah sorry I was just looking at the rule I",
    "start": "1791419",
    "end": "1797659"
  },
  {
    "text": "see that you are actually ignoring Falco because you're running as a privilege is it correct the privilege rule yeah it",
    "start": "1797659",
    "end": "1804740"
  },
  {
    "text": "says not Falco privileged why is that this one right that one yes",
    "start": "1804740",
    "end": "1812179"
  },
  {
    "text": "a condition it says I'm not Falco privileged container yeah the other other markers are used to",
    "start": "1812179",
    "end": "1819620"
  },
  {
    "text": "uh to reduce false positive I haven't reported the the all the macros because",
    "start": "1819620",
    "end": "1824659"
  },
  {
    "text": "it's hard to fit all in in the slide but there are other macros that are reported",
    "start": "1824659",
    "end": "1830659"
  },
  {
    "text": "to reduce false positive in environments sometimes so usually macros are used to",
    "start": "1830659",
    "end": "1836539"
  },
  {
    "text": "simplify the overall condition to make it more readable uh and sometimes we use",
    "start": "1836539",
    "end": "1842620"
  },
  {
    "text": "macros to reduce false positive or or at least some use cases that we know is",
    "start": "1842620",
    "end": "1850039"
  },
  {
    "text": "going to trigger Force positive so and that's one of one of those uh cases but",
    "start": "1850039",
    "end": "1855200"
  },
  {
    "text": "in general we can use macros for for those reasons yeah good",
    "start": "1855200",
    "end": "1862480"
  },
  {
    "text": "you are saying if it is possible to deploy Falco without privilege yeah",
    "start": "1871600",
    "end": "1877580"
  },
  {
    "text": "um Falcon it's a specific and a unique workload because it has to inspect the",
    "start": "1877580",
    "end": "1885320"
  },
  {
    "text": "system so it has to have some privileges of course and we have in a down chart we",
    "start": "1885320",
    "end": "1893419"
  },
  {
    "text": "we try to run the our BPF probe with these Privileges and there's there is an",
    "start": "1893419",
    "end": "1899720"
  },
  {
    "text": "option to do that but in general it has to have some privileges",
    "start": "1899720",
    "end": "1906760"
  },
  {
    "text": "it's a false positive alert a raising for the foreign",
    "start": "1913279",
    "end": "1918220"
  },
  {
    "text": "it needs some privileges to run",
    "start": "1925220",
    "end": "1928898"
  },
  {
    "text": "who is securing uh Falco I guess",
    "start": "1930820",
    "end": "1936340"
  },
  {
    "text": "yeah yeah I mean we this is a security uh",
    "start": "1937760",
    "end": "1943940"
  },
  {
    "text": "tool right so it needs a visibility over uh over what is going on otherwise it's not it's not I mean it's not going to",
    "start": "1943940",
    "end": "1950360"
  },
  {
    "text": "work it's a security tool and we need to have visibility over uh um over what is",
    "start": "1950360",
    "end": "1955640"
  },
  {
    "text": "going on so that's that's the main point of all of this right so of course there are ways to uh as we said with the with",
    "start": "1955640",
    "end": "1964039"
  },
  {
    "text": "the ebpf to reduce this kind of um of visibility for FICO but this is",
    "start": "1964039",
    "end": "1972080"
  },
  {
    "text": "mandatory for the type of tool that we are using and to have visibility so I",
    "start": "1972080",
    "end": "1977299"
  },
  {
    "text": "guess I mean I think most of other tools are basically using the same way uh",
    "start": "1977299",
    "end": "1983299"
  },
  {
    "text": "since I mean it's not possible to do any anyway uh in other ways so of course we can reduce it but at the end it's",
    "start": "1983299",
    "end": "1989720"
  },
  {
    "text": "something that we need in order to have visibility and of course we want to have visibility uh in order to provide the",
    "start": "1989720",
    "end": "1995899"
  },
  {
    "text": "best detection possible so I think that's the point good thank you thank you",
    "start": "1995899",
    "end": "2001799"
  },
  {
    "text": "so thanks everyone and I wish a nice rest of your day thank you [Applause]",
    "start": "2003519",
    "end": "2012520"
  }
]