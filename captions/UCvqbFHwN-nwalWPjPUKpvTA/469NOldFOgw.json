[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "thank you all for coming today it's great to see all of your faces and thank you to CN CF for having us",
    "start": "30",
    "end": "5540"
  },
  {
    "text": "yeah it's awesome we're gonna get into our journey about billing Davis's service before we do have a few",
    "start": "5540",
    "end": "12300"
  },
  {
    "text": "questions how many of you have managed a database before nice cool alright so how",
    "start": "12300",
    "end": "19470"
  },
  {
    "text": "many of you have managed a database in the cloud before okay probably a month and how many of you have managed a",
    "start": "19470",
    "end": "26400"
  },
  {
    "text": "database in kubernetes pace all right less but reasonable reason all right who",
    "start": "26400",
    "end": "35820"
  },
  {
    "start": "34000",
    "end": "58000"
  },
  {
    "text": "are we I'm I'll be inviting out though I am a software engineer at planet-scale and when I'm not writing closed source",
    "start": "35820",
    "end": "41190"
  },
  {
    "text": "software for them I'm probably DJing my name is Lucy burns I'm a product manager",
    "start": "41190",
    "end": "46379"
  },
  {
    "text": "at Planet scale and when I'm not working I write poetry about the environment and up here you'll also see the whole planet",
    "start": "46379",
    "end": "52620"
  },
  {
    "text": "scale team who worked on this project with us cool so we're gonna have our",
    "start": "52620",
    "end": "60629"
  },
  {
    "start": "58000",
    "end": "96000"
  },
  {
    "text": "nice little minimalistic agenda for us today first we're going to find the problem as we said stateful workloads in",
    "start": "60629",
    "end": "66659"
  },
  {
    "text": "a stateless environment is very difficult offering the service is even more difficult so we're gonna kind of go",
    "start": "66659",
    "end": "72479"
  },
  {
    "text": "through the historical journey of how we got there and then go into how we attack",
    "start": "72479",
    "end": "78210"
  },
  {
    "text": "the problem yeah so we'll talk about choosing the technology for our database as a service we decided to go all-in on",
    "start": "78210",
    "end": "85080"
  },
  {
    "text": "open source and we'll explain that decision and talk about the projects we chose and the challenges we faced there",
    "start": "85080",
    "end": "90900"
  },
  {
    "text": "and then we'll describe the integration challenges and I explained how everything fit together so if you're",
    "start": "90900",
    "end": "99150"
  },
  {
    "start": "96000",
    "end": "215000"
  },
  {
    "text": "able to catch the awesome talk by slack's engineers Raphael and Guido",
    "start": "99150",
    "end": "104159"
  },
  {
    "text": "you're able to kind of get into this idea of a mutable infrastructure so before we had a mutable it structure we",
    "start": "104159",
    "end": "112590"
  },
  {
    "text": "had these wonderful like spicy deployments that you really didn't know or what were what was being deployed in",
    "start": "112590",
    "end": "118950"
  },
  {
    "text": "production and stuff was really what was not deterministic and needed to be",
    "start": "118950",
    "end": "123960"
  },
  {
    "text": "updated and modified in place now we know that it has a small scale manually",
    "start": "123960",
    "end": "130050"
  },
  {
    "text": "updating and modifying your infrastructure in place is not that hard but as it grows out it becomes very",
    "start": "130050",
    "end": "135920"
  },
  {
    "text": "difficult however we ran into one issue the issue is that redeploying infrastructure is",
    "start": "135920",
    "end": "141430"
  },
  {
    "text": "expensive so as cloud providers kind of figured out how to make redeploying",
    "start": "141430",
    "end": "147230"
  },
  {
    "text": "infrastructure they automated be quick and to figure out persistence with with",
    "start": "147230",
    "end": "152900"
  },
  {
    "text": "new and old infrastructure these problems started go away and containers",
    "start": "152900",
    "end": "157910"
  },
  {
    "text": "solved the issue of being of new deployments being deterministic and kubernetes solved the issue of immutable",
    "start": "157910",
    "end": "165770"
  },
  {
    "text": "infrastructure being able to scale so now we're in this place where we have our applications and kubernetes",
    "start": "165770",
    "end": "172000"
  },
  {
    "text": "receiving all the benefits that are be described and now we come to the question of what do I do with my",
    "start": "172000",
    "end": "177980"
  },
  {
    "text": "databases and at first this question might be feel little antithetical do I",
    "start": "177980",
    "end": "183830"
  },
  {
    "text": "really want to run stateful workloads in a stateless environment and in fact most experts recommend that you don't do that",
    "start": "183830",
    "end": "190610"
  },
  {
    "text": "and that's because you can't take the longevity of your pod in which your master is running for granted it might",
    "start": "190610",
    "end": "197600"
  },
  {
    "text": "go down and worst case you might lose data or else you might just experience",
    "start": "197600",
    "end": "202880"
  },
  {
    "text": "downtime so we have this problem and we saw this problem as an area for opportunity and we wanted to see if",
    "start": "202880",
    "end": "209300"
  },
  {
    "text": "there was a way we could tackle these challenges and provide the benefits of kubernetes for a database so as with any",
    "start": "209300",
    "end": "217550"
  },
  {
    "text": "hard problem comes a very strict form of a strict outline for what we want from",
    "start": "217550",
    "end": "224330"
  },
  {
    "text": "our product so we're going to define what it means to be a cloud native because we feel that a cloud native",
    "start": "224330",
    "end": "230750"
  },
  {
    "text": "database has all of these really important qualities and you're able to trust a cloud native database with your",
    "start": "230750",
    "end": "236780"
  },
  {
    "text": "with your data the first thing and arguably the most important thing is reliability fault tolerance is",
    "start": "236780",
    "end": "242060"
  },
  {
    "text": "incredibly important and whether you're losing a pod a node a replica a master a",
    "start": "242060",
    "end": "247160"
  },
  {
    "text": "data center your customers should not see it at all it should be absolutely transparent next Automation all all of",
    "start": "247160",
    "end": "254810"
  },
  {
    "text": "your resource provisioning and your convergence to your expected state should be completely hands-off you guys",
    "start": "254810",
    "end": "262790"
  },
  {
    "text": "have all managed databases it sounds like so you know it is certain point you'll hit the question of scale so whether you start small and",
    "start": "262790",
    "end": "270030"
  },
  {
    "text": "grow big and want to scale out or if your application sees traffic spikes from events like Black Friday or a",
    "start": "270030",
    "end": "276660"
  },
  {
    "text": "Padres game or some other event you want to be able to scale up and scale down as",
    "start": "276660",
    "end": "281760"
  },
  {
    "text": "you need additionally we want to be able to treat our database system as one",
    "start": "281760",
    "end": "287130"
  },
  {
    "text": "entity even though there may be moving parts behind it we want something that's logically singular in place of some",
    "start": "287130",
    "end": "293820"
  },
  {
    "text": "instance what we don't want is multiple levels of architecture kind of duct-taped together with custom code we",
    "start": "293820",
    "end": "300419"
  },
  {
    "text": "want one entity so then we get to aunty horticulture ISM so you guys are all",
    "start": "300419",
    "end": "306000"
  },
  {
    "text": "familiar with the pets versus cattle analogy the fact that you don't want to be managing and tending to pets and you",
    "start": "306000",
    "end": "312270"
  },
  {
    "text": "want to be able to treat your infrastructure as cattle it's 2019 so we have a plant-based analogy now we want",
    "start": "312270",
    "end": "317640"
  },
  {
    "text": "to use the analogy versus gardens and row crops so if you think about a garden you have your little tomato plant you",
    "start": "317640",
    "end": "324120"
  },
  {
    "text": "care about that tomato plant like you you tend to it you care for its life when you go over to row crops you care",
    "start": "324120",
    "end": "330930"
  },
  {
    "text": "about the overall performance of all of your crops everything can be deleted and brought up again at will and you",
    "start": "330930",
    "end": "337979"
  },
  {
    "text": "just essentially want like and yet you don't care about any individual plant so",
    "start": "337979",
    "end": "346169"
  },
  {
    "start": "345000",
    "end": "408000"
  },
  {
    "text": "of course the product manager in me was like great we've defined what we want how do we build the Minimum Viable",
    "start": "346169",
    "end": "351240"
  },
  {
    "text": "Product how do we scale this project down to the bare necessity and what we realized really quickly is a database is",
    "start": "351240",
    "end": "357960"
  },
  {
    "text": "such a fundamental part of your infrastructure that you can't really",
    "start": "357960",
    "end": "363060"
  },
  {
    "text": "scale it down not easily you do want to have monitoring and alerts and scaling and all of these other things there's",
    "start": "363060",
    "end": "369300"
  },
  {
    "text": "actually a really big surface area for just creating a standard database it's sort of like if you wanted to bring a",
    "start": "369300",
    "end": "374850"
  },
  {
    "text": "car to the market but you didn't want to have wheels for it that just wouldn't go so the way I like to describe it is if",
    "start": "374850",
    "end": "382229"
  },
  {
    "text": "we have our if we rate our database as a service product and from one being up like enterprise piping dev null and",
    "start": "382229",
    "end": "390439"
  },
  {
    "text": "is a fully functioning cloud native databases service we have to release at",
    "start": "390439",
    "end": "395809"
  },
  {
    "text": "a 10 and then develop quality of life features to a 15 so we decided that a no",
    "start": "395809",
    "end": "401599"
  },
  {
    "text": "compromise product was absolutely the way to go so how are we gonna get there",
    "start": "401599",
    "end": "411439"
  },
  {
    "start": "408000",
    "end": "489000"
  },
  {
    "text": "we have this huge task ahead of us a planet scale we decided to go all-in on open source technology for a few",
    "start": "411439",
    "end": "417889"
  },
  {
    "text": "different reasons first of all some of the technology we were looking at that was open source had been developed for",
    "start": "417889",
    "end": "423409"
  },
  {
    "text": "the container ecosystem which made it a perfect fit for what we were trying to create additionally we knew the software had",
    "start": "423409",
    "end": "430099"
  },
  {
    "text": "been created by motivated contributors contained bleeding edge technology and was of a very high quality and we wanted",
    "start": "430099",
    "end": "436459"
  },
  {
    "text": "to use that additionally it gave us the opportunity to participate in the open source community which is something we",
    "start": "436459",
    "end": "442249"
  },
  {
    "text": "find really valuable and again we didn't want to have to build everything ourselves we're already had a big project ahead of us so we recognize that",
    "start": "442249",
    "end": "449929"
  },
  {
    "text": "there are some drawbacks to open source and if you if you want a specific feature in your favorite open source",
    "start": "449929",
    "end": "455839"
  },
  {
    "text": "products to be to exist you have to spend your own developers time going and",
    "start": "455839",
    "end": "461779"
  },
  {
    "text": "writing that feature now the thing is as Lucy said we actually view this as an opportunity we love engaging with the",
    "start": "461779",
    "end": "468439"
  },
  {
    "text": "open source community and we feel that from contributing back and from helping",
    "start": "468439",
    "end": "473779"
  },
  {
    "text": "out the communities we can actually create more support and kind of pick out the two the two other issues that people",
    "start": "473779",
    "end": "481219"
  },
  {
    "text": "have the open source open source products which is usually a longevity and guaranteed support for their product",
    "start": "481219",
    "end": "489669"
  },
  {
    "start": "489000",
    "end": "550000"
  },
  {
    "text": "so we defined the problem statement as building a database as a service for kubernetes but one of the reasons we",
    "start": "489669",
    "end": "495829"
  },
  {
    "text": "really decided to go forward and pursue this problem is because of the flexibility of deployment that",
    "start": "495829",
    "end": "501529"
  },
  {
    "text": "kubernetes enables we wanted to take our database as a service and deploy it in AWS deploy and GCP deploy it in any",
    "start": "501529",
    "end": "508819"
  },
  {
    "text": "cloud provider or deploy it even in someone's own kubernetes infrastructure",
    "start": "508819",
    "end": "515500"
  },
  {
    "text": "additionally you're gonna be having lots of different types of resources and you don't",
    "start": "515500",
    "end": "521250"
  },
  {
    "text": "you shouldn't and care about what kind of resources you have you should kubernetes allows us to schedule across",
    "start": "521250",
    "end": "527279"
  },
  {
    "text": "all different kinds of kinds of compute which is really convenient for us in addition to that the kubernetes allows",
    "start": "527279",
    "end": "533579"
  },
  {
    "text": "you to create really flexible networking topologies when we when we expose our my",
    "start": "533579",
    "end": "539100"
  },
  {
    "text": "sequel endpoint kubernetes handles all of the load balancing and all of the routing for us instead of us having to",
    "start": "539100",
    "end": "544980"
  },
  {
    "text": "manage that service manually which is this is imperative for us especially as a service so the test lies at the heart",
    "start": "544980",
    "end": "553379"
  },
  {
    "start": "550000",
    "end": "683000"
  },
  {
    "text": "of our database as a service in fact planet-scale was created to provide a",
    "start": "553379",
    "end": "558389"
  },
  {
    "text": "larger audience for Vitesse for those of you who aren't familiar with the test it was created in 2010 at YouTube to help",
    "start": "558389",
    "end": "565860"
  },
  {
    "text": "YouTube through scale through its hyper growth period today it sees production traffic from companies like slack square",
    "start": "565860",
    "end": "573660"
  },
  {
    "text": "JD comm and many more Vitesse is a great",
    "start": "573660",
    "end": "578879"
  },
  {
    "text": "database management system because it offers observability monitoring permissions and you can scale",
    "start": "578879",
    "end": "584100"
  },
  {
    "text": "horizontally additionally it was created for Borg at Google which was the",
    "start": "584100",
    "end": "589110"
  },
  {
    "text": "blueprint for kubernetes so in a way you could say that the test was kubernetes ready before kubernetes existed and that",
    "start": "589110",
    "end": "595589"
  },
  {
    "text": "was perfect for us the test also lies above my sequel so",
    "start": "595589",
    "end": "601920"
  },
  {
    "text": "you don't have to do a trade off between scale and a relational database additionally you're not using a new",
    "start": "601920",
    "end": "607680"
  },
  {
    "text": "database so you don't have to worry about unknowns everyone knows sort of the the pain points the highs and lows of my sequel",
    "start": "607680",
    "end": "614930"
  },
  {
    "text": "so ok we like the tests but the tests can be a really big challenge to",
    "start": "614930",
    "end": "620759"
  },
  {
    "text": "configure and what we wanted to do was to take our in-house expertise and create an opinionated package that",
    "start": "620759",
    "end": "626670"
  },
  {
    "text": "people could use out of the box this naturally led us to a database as a service once we decided that ok we're",
    "start": "626670",
    "end": "633660"
  },
  {
    "text": "gonna have a database as a service for virtus we ran into our first challenge the test is designed to manage one large",
    "start": "633660",
    "end": "640410"
  },
  {
    "text": "distributed system with shared infrastructure now we wanted to run",
    "start": "640410",
    "end": "645629"
  },
  {
    "text": "hundreds of large distributed systems with shared infrastructure and we had to",
    "start": "645629",
    "end": "651179"
  },
  {
    "text": "make sure we could keep data from company one data from company two so how did we do",
    "start": "651179",
    "end": "657070"
  },
  {
    "text": "this we decided to rely on the isolation provided by containers to write a lot of",
    "start": "657070",
    "end": "663339"
  },
  {
    "text": "different network policies and to use our back and so a lot of the challenge here was writing out those network",
    "start": "663339",
    "end": "669190"
  },
  {
    "text": "policies and then making sure we felt confident that no one from company one would see data from company two and once",
    "start": "669190",
    "end": "676779"
  },
  {
    "text": "we achieved that we kind of moved on to the next challenge which challenge which is what is the best way to bring up the",
    "start": "676779",
    "end": "682570"
  },
  {
    "text": "test so operators operators are cool they allow you to specify something with",
    "start": "682570",
    "end": "689230"
  },
  {
    "start": "683000",
    "end": "753000"
  },
  {
    "text": "Hamill config and then spit out well exactly what you want this is really",
    "start": "689230",
    "end": "695770"
  },
  {
    "text": "cool because a lot of them exist in open source for all your favorite open source products but there isn't a there isn't a",
    "start": "695770",
    "end": "703930"
  },
  {
    "text": "really solid one for the test so we had to write one ourselves we spent a lot of time writing our first version over the",
    "start": "703930",
    "end": "710350"
  },
  {
    "text": "test operator which spun up all of our different database components but we did it on a really old version of the",
    "start": "710350",
    "end": "716440"
  },
  {
    "text": "operator SDK and while the operator SK is fantastic we it it had like",
    "start": "716440",
    "end": "722140"
  },
  {
    "text": "progressed a lot oh it progressed a lot since then and had breaking changes that we were kind of stuck to so we made the",
    "start": "722140",
    "end": "730029"
  },
  {
    "text": "choice to completely rewrite our operator and that was probably one of the best choices we ever made because the new operator the newer versions of",
    "start": "730029",
    "end": "736900"
  },
  {
    "text": "the operator SDK have the new controller runtime which basically improved our deployment speed by like 80 percent and",
    "start": "736900",
    "end": "742750"
  },
  {
    "text": "it has access to auto-generated documentation so definitely take advantage that if you're planning on",
    "start": "742750",
    "end": "748360"
  },
  {
    "text": "developing developing your own operator it is absolutely fantastic now that",
    "start": "748360",
    "end": "754120"
  },
  {
    "start": "753000",
    "end": "827000"
  },
  {
    "text": "being said we couldn't use operators for everything while the SCD operator is really good it",
    "start": "754120",
    "end": "760839"
  },
  {
    "text": "has a lot of really cool features such as a recovery and auto scaling we were",
    "start": "760839",
    "end": "766300"
  },
  {
    "text": "finding that it was not actually possible for us to recover from Chora from a loss of quorum unless we took",
    "start": "766300",
    "end": "772510"
  },
  {
    "text": "backups all the time now the thing is is that at CD with Vitesse serves one",
    "start": "772510",
    "end": "778540"
  },
  {
    "text": "purpose it has one contract and that's to essentially tell where everything",
    "start": "778540",
    "end": "783830"
  },
  {
    "text": "is restore our sharding scheme we store like how we like how you're starting",
    "start": "783830",
    "end": "789080"
  },
  {
    "text": "where your where your databases are and what you're serving graph looks like in",
    "start": "789080",
    "end": "795050"
  },
  {
    "text": "SA D we rely on consistency and not necessarily for with performance for",
    "start": "795050",
    "end": "800720"
  },
  {
    "text": "this so we actually don't necessarily need high availability on this we simply",
    "start": "800720",
    "end": "805790"
  },
  {
    "text": "just we simply just need it to work so what we did is instead of using that C D operator we used our of the test",
    "start": "805790",
    "end": "811940"
  },
  {
    "text": "operator to bring up at C D clusters as staple sets which with each database",
    "start": "811940",
    "end": "817220"
  },
  {
    "text": "that we provisioned and we backed all of those with the persistent volumes so we actually didn't have to worry about",
    "start": "817220",
    "end": "823190"
  },
  {
    "text": "taking backups for our XE d instances anymore",
    "start": "823190",
    "end": "828100"
  },
  {
    "start": "827000",
    "end": "947000"
  },
  {
    "text": "additionally ma during school you need it for any database product thankfully",
    "start": "828220",
    "end": "833390"
  },
  {
    "text": "we have the de facto cloud native monitoring available to us through open",
    "start": "833390",
    "end": "838610"
  },
  {
    "text": "source Prometheus's awesome is well accepted in many different up in many different pieces of software prometheus",
    "start": "838610",
    "end": "845900"
  },
  {
    "text": "is so through lots of different pieces of piece of software it is natively",
    "start": "845900",
    "end": "851540"
  },
  {
    "text": "integrated by the with the slash metrics and endpoint or a lot of companies are",
    "start": "851540",
    "end": "857000"
  },
  {
    "text": "or pieces of software run it as a sidecar process so because because it's",
    "start": "857000",
    "end": "863630"
  },
  {
    "text": "so well known it was kind of like a natural progression for us to use it",
    "start": "863630",
    "end": "869680"
  },
  {
    "text": "additionally Prometheus is really nice in terms of the UI it's very clear what",
    "start": "869680",
    "end": "875210"
  },
  {
    "text": "your configuration is as someone who wants to know exactly how like how my",
    "start": "875210",
    "end": "880610"
  },
  {
    "text": "infrastructure is is configured if you just go straight into the Prometheus you I click on config it tells you exactly",
    "start": "880610",
    "end": "886970"
  },
  {
    "text": "what services you're trying to discover how many targets you have and whether you're actually discovering them so it's",
    "start": "886970",
    "end": "893630"
  },
  {
    "text": "really it's really convenient it looks beautiful and finally the kind of one of the",
    "start": "893630",
    "end": "899690"
  },
  {
    "text": "interesting challenges that we had with with prometheus was actually configuration the Prometheus operator",
    "start": "899690",
    "end": "905960"
  },
  {
    "text": "works fantastic and that's actually how we deploy Prometheus when you when we",
    "start": "905960",
    "end": "911480"
  },
  {
    "text": "specify monitoring in our in our top-level CRD we talk to the Prometheus",
    "start": "911480",
    "end": "916820"
  },
  {
    "text": "operator brings up prometheus pods for us however there's a lot of there's a lot of configuration that needs to go with it",
    "start": "916820",
    "end": "922710"
  },
  {
    "text": "and we kind of just went around Google and Stack Overflow and kind of just put together this like configuration Frankenstein which looked really messy",
    "start": "922710",
    "end": "929670"
  },
  {
    "text": "but then we realized that if you go to if you go to the core OS github repository there's something called cube",
    "start": "929670",
    "end": "935400"
  },
  {
    "text": "- Prometheus which actually allows you to audit generate all of that configuration for you so don't don't do",
    "start": "935400",
    "end": "942000"
  },
  {
    "text": "what we did go and get that get that manifest with pin dependencies for you",
    "start": "942000",
    "end": "947510"
  },
  {
    "start": "947000",
    "end": "995000"
  },
  {
    "text": "so if you have prometheus you're gonna want grow fauna Griffon upholds metrics",
    "start": "947510",
    "end": "952800"
  },
  {
    "text": "from Prometheus and visualizes them in graphs and while you could argue that Griffon a-- isn't an MVP requirement",
    "start": "952800",
    "end": "959670"
  },
  {
    "text": "technically because it's not in the serving path if you're planning on running production traffic you're going to want to have graph wanna so that you",
    "start": "959670",
    "end": "966120"
  },
  {
    "text": "can see what's happening with your databases the good news is that graph fauna can be auto provisioned so we were",
    "start": "966120",
    "end": "972810"
  },
  {
    "text": "able to bake it into our Vitesse operator and that was actually pretty easy to do so as you're kind of figuring",
    "start": "972810",
    "end": "979350"
  },
  {
    "text": "out our the test operator is the lifeblood for for our product it spins",
    "start": "979350",
    "end": "984420"
  },
  {
    "text": "on everything including our graph on a pod which immediately pulls in the data source from Prometheus now when how do",
    "start": "984420",
    "end": "992700"
  },
  {
    "text": "we expose that graph on a dashboard to the user so we have a graph on a link in our database as a service this request",
    "start": "992700",
    "end": "999690"
  },
  {
    "start": "995000",
    "end": "1028000"
  },
  {
    "text": "when you click on that link is then sent to a level seven application load balancer then we send it to our thin",
    "start": "999690",
    "end": "1005240"
  },
  {
    "text": "occation proxy we use open recipe for our thin occasion proxy fantastic lightweight it uses Lua which is",
    "start": "1005240",
    "end": "1012230"
  },
  {
    "text": "scriptable lots of lots of libraries available for it and because it's so scriptable we were able to integrate it",
    "start": "1012230",
    "end": "1017780"
  },
  {
    "text": "with the kubernetes api really easily and it's just an overall fantastic product so what did we actually build",
    "start": "1017780",
    "end": "1025189"
  },
  {
    "text": "how do all of these projects to come together so here's our wonderful",
    "start": "1025190",
    "end": "1030890"
  },
  {
    "start": "1028000",
    "end": "1279000"
  },
  {
    "text": "architecture diagram as you can see the plan of scale operator is kind of the the core of it that spins out all the",
    "start": "1030890",
    "end": "1036860"
  },
  {
    "text": "all the stuff that we need when you get an API request it comes in the form of a planet skill cluster CRD like we said",
    "start": "1036860",
    "end": "1044180"
  },
  {
    "text": "when we're building out a cloud native database we want our things to be logically singular everything lives under this plan",
    "start": "1044180",
    "end": "1049790"
  },
  {
    "text": "scale cluster CRD play the plane is kala cluster CRD changed for the any whether",
    "start": "1049790",
    "end": "1055910"
  },
  {
    "text": "it's a create update delete is sent to kubernetes with which then passes it",
    "start": "1055910",
    "end": "1060920"
  },
  {
    "text": "over to the plant scale operator which is in charge of reconciling that planet scale cluster that planet skill cluster",
    "start": "1060920",
    "end": "1068240"
  },
  {
    "text": "then spins up all of the required components it'll spin up all of the all of the tests and its sub components",
    "start": "1068240",
    "end": "1074180"
  },
  {
    "text": "if you want to learn more about that we have lots of talks about the tests we we then spin up our Prometheus pod which",
    "start": "1074180",
    "end": "1081140"
  },
  {
    "text": "then is autumn and then we make sure to spin up fauna after that which then captures the Prometheus data source and",
    "start": "1081140",
    "end": "1087440"
  },
  {
    "text": "then we spin up our authentication proxy which which allows us to link to grow",
    "start": "1087440",
    "end": "1093140"
  },
  {
    "text": "fauna and to other to our stats pages that are that calm package with the",
    "start": "1093140",
    "end": "1099200"
  },
  {
    "text": "tests in addition we spin up like we said with our operator we also spin up",
    "start": "1099200",
    "end": "1104510"
  },
  {
    "text": "our @cd clusters for our topology metadata store and we have a backup",
    "start": "1104510",
    "end": "1109820"
  },
  {
    "text": "process that makes sure to capture backups in the case of data loss okay",
    "start": "1109820",
    "end": "1116000"
  },
  {
    "text": "but what does this look like in real life we're gonna show you what we built and and you can try this out yourself if",
    "start": "1116000",
    "end": "1131360"
  },
  {
    "text": "you would like the URL is console dot planet-scale comm so what I'm going to",
    "start": "1131360",
    "end": "1136640"
  },
  {
    "text": "go ahead and do is create a cluster when I do this I am spinning up all of the Vitesse architecture that we talked",
    "start": "1136640",
    "end": "1142400"
  },
  {
    "text": "about I can also choose the platform and the region that I would like to deploy",
    "start": "1142400",
    "end": "1147590"
  },
  {
    "text": "in I'll choose AWS u.s. u.s. East so",
    "start": "1147590",
    "end": "1155750"
  },
  {
    "text": "that spins up the cluster and the next thing I need to do or spin up the actual database the my sequel clusters with the",
    "start": "1155750",
    "end": "1162290"
  },
  {
    "text": "VT tablets on top I'll just call this database test1 we can see it's a single",
    "start": "1162290",
    "end": "1171410"
  },
  {
    "text": "region deployment here I can add additional resources whether it's CPU RAM or storage I can decide on the",
    "start": "1171410",
    "end": "1178820"
  },
  {
    "text": "number of instances for high availability I always like to have three and then here's the really fun part that",
    "start": "1178820",
    "end": "1185250"
  },
  {
    "text": "the Tash offers I can go ahead and deploy an uncharted database so it's just a my sequel instance or I can start",
    "start": "1185250",
    "end": "1191460"
  },
  {
    "text": "out sharded and create a sharding scheme that will route my queries to the correct shard and gain scale through",
    "start": "1191460",
    "end": "1197880"
  },
  {
    "text": "doing that it generally takes about two to four minutes to deploy our debate to",
    "start": "1197880",
    "end": "1205380"
  },
  {
    "text": "deploy our database depending on how many replicas you're using so what I've done is created another one that we can",
    "start": "1205380",
    "end": "1211440"
  },
  {
    "text": "take a look at so we don't have to waste our time on that so here you have a deploy database you can see how long",
    "start": "1211440",
    "end": "1217050"
  },
  {
    "text": "it's been running I created it right before this demo and the thing that I wanted to show you is the Garona",
    "start": "1217050",
    "end": "1223080"
  },
  {
    "text": "dashboard I've been writing to this database so we can see my queries per",
    "start": "1223080",
    "end": "1229020"
  },
  {
    "text": "second and then we can see some other insights about the tests so that's how",
    "start": "1229020",
    "end": "1235380"
  },
  {
    "text": "our database looks in real life let's go back to our presentation oh yeah one one",
    "start": "1235380",
    "end": "1245550"
  },
  {
    "text": "piece that I am for not just the way that you go ahead and connect to this database is right here we provide a my",
    "start": "1245550",
    "end": "1252420"
  },
  {
    "text": "sequel connection string that you can just copy and paste into your terminal and get started from there",
    "start": "1252420",
    "end": "1259070"
  },
  {
    "text": "quick quick review of everything we've done they'll be a test after all right",
    "start": "1269340",
    "end": "1280660"
  },
  {
    "start": "1279000",
    "end": "1367000"
  },
  {
    "text": "so was that hard yeah yeah it was it was it was pretty hard but the thing is that",
    "start": "1280660",
    "end": "1287200"
  },
  {
    "text": "not for the reasons that we thought it was we thought it would be hard to create a database as a service because",
    "start": "1287200",
    "end": "1292210"
  },
  {
    "text": "we'd have to create all the internals and create all the like kind of the lifeblood of the prod of the product but",
    "start": "1292210",
    "end": "1298210"
  },
  {
    "text": "the real answer was it was a lot of meta infrastructure that we had to build around there we had to basically provide",
    "start": "1298210",
    "end": "1304480"
  },
  {
    "text": "a reliable and trust fit and trustworthy database to solve a problem that a lot of people would consider has never been",
    "start": "1304480",
    "end": "1312310"
  },
  {
    "text": "solved before we have to be earn an environment where stuff is expected to",
    "start": "1312310",
    "end": "1317560"
  },
  {
    "text": "go down we have to persist or persist your data serve traffic in a very",
    "start": "1317560",
    "end": "1323530"
  },
  {
    "text": "dangerous environment and we understand that of network boundaries are hard our",
    "start": "1323530",
    "end": "1328600"
  },
  {
    "text": "back is hard reconciliation is hard consistency is hard and just overall",
    "start": "1328600",
    "end": "1333700"
  },
  {
    "text": "configuration is kind of a difficult thing but are basically the main",
    "start": "1333700",
    "end": "1339550"
  },
  {
    "text": "functionalities and all of the and all like the really cool things that that that we use to serve our product isn't",
    "start": "1339550",
    "end": "1347110"
  },
  {
    "text": "hard because a lot because we have so many really cool open-source offerings and it's honestly really cool that",
    "start": "1347110",
    "end": "1353380"
  },
  {
    "text": "there's it that it's honestly just really cool that like that were able to kind of just take a bunch of a bunch of",
    "start": "1353380",
    "end": "1358660"
  },
  {
    "text": "some from open-source especially the tests which is an incredibly high functioning product and kind of",
    "start": "1358660",
    "end": "1364360"
  },
  {
    "text": "integrated into a full offering so where are we going next what do we want to add",
    "start": "1364360",
    "end": "1370540"
  },
  {
    "start": "1367000",
    "end": "1451000"
  },
  {
    "text": "now that we have this base level cloud native database so like I said this is a",
    "start": "1370540",
    "end": "1376930"
  },
  {
    "text": "problem that a lot of people consider is not salt yet we want to show people with",
    "start": "1376930",
    "end": "1382540"
  },
  {
    "text": "I guess through our database as a service or just through the open source to test lack through the community show",
    "start": "1382540",
    "end": "1388840"
  },
  {
    "text": "people that you can do this and we want to talk to be able to help and kind of angela is the fact that like that it is",
    "start": "1388840",
    "end": "1395120"
  },
  {
    "text": "very possible the test was built to do this and that this problem is soon gonna become thing of the past",
    "start": "1395120",
    "end": "1401270"
  },
  {
    "text": "on the product side we want to offer something that we've been calling B yok or bring your own kubernetes so that you",
    "start": "1401270",
    "end": "1408980"
  },
  {
    "text": "can take our database-as-a-service software and hook directly into your kubernetes deployment and deploy your",
    "start": "1408980",
    "end": "1414620"
  },
  {
    "text": "databases there really excited about that additionally we want to build out the functionality for a true multi-cloud",
    "start": "1414620",
    "end": "1421310"
  },
  {
    "text": "cluster and what I mean by that is I want to be able to spin up a master in AWS and spin up replicas and GCC and",
    "start": "1421310",
    "end": "1428990"
  },
  {
    "text": "have the master and replicas communicate across cloud platforms currently the way",
    "start": "1428990",
    "end": "1435140"
  },
  {
    "text": "that horizontal skill works it it's kind of it is a manual process but it's something that we can absolutely automate the time will come where we can",
    "start": "1435140",
    "end": "1442700"
  },
  {
    "text": "where we will be able to use Vitesse performance characteristics to automatically shard your database for you and to keep up with your with your",
    "start": "1442700",
    "end": "1449510"
  },
  {
    "text": "ever growing company cool so we we kind of rushed over a lot of the",
    "start": "1449510",
    "end": "1454970"
  },
  {
    "start": "1451000",
    "end": "1486000"
  },
  {
    "text": "functionality that the test provides if you're interested in learning more there are a few more talks when today at 3:20",
    "start": "1454970",
    "end": "1461180"
  },
  {
    "text": "coming up soon and some on Wednesday and Thursday and I think we're ready for questions now",
    "start": "1461180",
    "end": "1468280"
  },
  {
    "text": "so I have two questions one question is are there any companies today who are",
    "start": "1476620",
    "end": "1483470"
  },
  {
    "text": "using Vitesse in kubernetes yeah that's a great question",
    "start": "1483470",
    "end": "1488480"
  },
  {
    "start": "1486000",
    "end": "1634000"
  },
  {
    "text": "JD comm is using the test in kubernetes and they have a very huge deployment",
    "start": "1488480",
    "end": "1495440"
  },
  {
    "text": "work going I think it was mentioned in the keynote and also HubSpot forgot",
    "start": "1495440",
    "end": "1503720"
  },
  {
    "text": "about HubSpot as well could you speak a little bit more about the operator how",
    "start": "1503720",
    "end": "1509930"
  },
  {
    "text": "does it how does that work in what happens when a new client creates a new",
    "start": "1509930",
    "end": "1515240"
  },
  {
    "text": "cluster is it like an entire be test full cluster for them or is there some different kind of segmentation at the",
    "start": "1515240",
    "end": "1521960"
  },
  {
    "text": "level of key spaces sales so the operator like when when when someone",
    "start": "1521960",
    "end": "1530060"
  },
  {
    "text": "goes into our database as a service and creates and creates a cluster we may just we create like I said we have that",
    "start": "1530060",
    "end": "1535340"
  },
  {
    "text": "top-level planet-scale cluster cluster object which then goes in which then and",
    "start": "1535340",
    "end": "1540770"
  },
  {
    "text": "goes and creates the actually sub level the sub level objects which are which",
    "start": "1540770",
    "end": "1547730"
  },
  {
    "text": "are it actually creates objects called the test cells and Vitesse clusters and the test key spaces and we actually so a",
    "start": "1547730",
    "end": "1556330"
  },
  {
    "text": "good question because we actually just spent a lot of time open sourcing the main main components of the operator and",
    "start": "1556330",
    "end": "1562660"
  },
  {
    "text": "very shortly everyone will be able to use our open source to test operator to",
    "start": "1562660",
    "end": "1568190"
  },
  {
    "text": "deploy to deploy the test clusters and kubernetes and so and everything in the",
    "start": "1568190",
    "end": "1573320"
  },
  {
    "text": "serving path will be completely open-source I think you briefly",
    "start": "1573320",
    "end": "1580790"
  },
  {
    "text": "mentioned multi-tenancy can you talk a bit more about how you guys had L duh",
    "start": "1580790",
    "end": "1588730"
  },
  {
    "text": "sorry can you repeat the question oh yeah you guys talk a bit more about how",
    "start": "1589630",
    "end": "1595130"
  },
  {
    "text": "you guys handle multi-tenancy in your use case multi-tenancy",
    "start": "1595130",
    "end": "1601830"
  },
  {
    "text": "yeah yeah so I mean we're I mean right now well right right now well",
    "start": "1601830",
    "end": "1608880"
  },
  {
    "text": "multi-tenancy is simply it is not something that we currently submit",
    "start": "1608880",
    "end": "1614039"
  },
  {
    "text": "currently sort of brace on our road mastering about just running so we use our kubernetes deployment to run",
    "start": "1614039",
    "end": "1620010"
  },
  {
    "text": "different companies databases right yeah",
    "start": "1620010",
    "end": "1627919"
  },
  {
    "text": "yeah we're gonna try on expert so",
    "start": "1629029",
    "end": "1634980"
  },
  {
    "start": "1634000",
    "end": "1750000"
  },
  {
    "text": "basically each company gets its own at city cluster so the metadata is stored",
    "start": "1634980",
    "end": "1640080"
  },
  {
    "text": "there each company gets its own so each",
    "start": "1640080",
    "end": "1648210"
  },
  {
    "text": "company can have multiple clusterings inside them but company is a high-level object that is allocated to every tenant",
    "start": "1648210",
    "end": "1658019"
  },
  {
    "text": "and I'm trying to remember whether we put each company in a different namespace or not but the intent is to",
    "start": "1658019",
    "end": "1665250"
  },
  {
    "text": "put each company in a different namespace and have a net city cluster associated with each company in which",
    "start": "1665250",
    "end": "1672510"
  },
  {
    "text": "multiple witness clusters that that company creates can live that's how we are handling multi-tenancy so it's the",
    "start": "1672510",
    "end": "1678929"
  },
  {
    "text": "same overall kubernetes clusters in all the data is living but it's different namespaces does that answer your",
    "start": "1678929",
    "end": "1687330"
  },
  {
    "text": "question",
    "start": "1687330",
    "end": "1689388"
  },
  {
    "text": "hey can you talk a little bit about like what type of underlying disk is used like for persistent storage and the i/o",
    "start": "1697360",
    "end": "1704890"
  },
  {
    "text": "ops and like readwrite throughput I",
    "start": "1704890",
    "end": "1708990"
  },
  {
    "text": "believe we use we use mu Z bs for our for a persistent storage yeah the IAP",
    "start": "1711990",
    "end": "1726010"
  },
  {
    "text": "slightly the whatever phi ops do you get from that disk and and that's some of",
    "start": "1726010",
    "end": "1731140"
  },
  {
    "text": "the challenges in stateful sectors legatees SSDs or like a regular disk",
    "start": "1731140",
    "end": "1736450"
  },
  {
    "text": "which is slow and just curious you know some of the customer deployments what",
    "start": "1736450",
    "end": "1741670"
  },
  {
    "text": "kind of read like throughput yeah",
    "start": "1741670",
    "end": "1745050"
  },
  {
    "text": "so in our database as a service we use persistent storage which different cloud",
    "start": "1750990",
    "end": "1757690"
  },
  {
    "text": "providers provide in their own implementation abstracted through the kubernetes persistent storage types of",
    "start": "1757690",
    "end": "1767350"
  },
  {
    "text": "PVCs and could claims and persistent volumes for durability and whatever the",
    "start": "1767350",
    "end": "1774280"
  },
  {
    "text": "typical characteristics in terms of a ops you get from them that's what you surface to you but",
    "start": "1774280",
    "end": "1781630"
  },
  {
    "text": "Britta's in general can be run in two different modes the one that I described",
    "start": "1781630",
    "end": "1787090"
  },
  {
    "text": "we call durability using disk but you can also run the tests in the mode that",
    "start": "1787090",
    "end": "1793690"
  },
  {
    "text": "slack runs it that we call as Network durability and in that mode there is one",
    "start": "1793690",
    "end": "1799540"
  },
  {
    "text": "master two replicas and we configure my sequel to run with a semi sync",
    "start": "1799540",
    "end": "1805360"
  },
  {
    "text": "replication turned on which means that the master does not acknowledge a particular commit as having succeeded",
    "start": "1805360",
    "end": "1812110"
  },
  {
    "text": "until at least one of the replicas all the data associated with that commit in",
    "start": "1812110",
    "end": "1818380"
  },
  {
    "text": "its relay logs right so that's how we and we use anti affinity to make sure",
    "start": "1818380",
    "end": "1824020"
  },
  {
    "text": "that your master pod and replica parts are not on the same host the",
    "start": "1824020",
    "end": "1830470"
  },
  {
    "text": "thus if the master part goes away we choose one of the replicas as the new master which has all the data for",
    "start": "1830470",
    "end": "1835570"
  },
  {
    "text": "committed transactions and that's how you get Network durability that has some",
    "start": "1835570",
    "end": "1840909"
  },
  {
    "text": "interesting characteristics because we don't need to flush to disk after every commit so you're right throughput",
    "start": "1840909",
    "end": "1846909"
  },
  {
    "text": "actually goes up if you are running in that fashion and if your master goes down we just spin up a new replica which",
    "start": "1846909",
    "end": "1853649"
  },
  {
    "text": "instantiates itself from a backup we say with GT ID with every backup and then it",
    "start": "1853649",
    "end": "1859000"
  },
  {
    "text": "starts replicating as of that GT from the master and once it catches up it joins the serving quorum so that's the",
    "start": "1859000",
    "end": "1866049"
  },
  {
    "text": "second type of durability and slack runs like that currently the database or service doesn't support that but that's",
    "start": "1866049",
    "end": "1872740"
  },
  {
    "text": "on the roadmap also any other questions",
    "start": "1872740",
    "end": "1878429"
  },
  {
    "text": "hey I saw the slide that you guys had about using open resti for the",
    "start": "1892960",
    "end": "1898390"
  },
  {
    "text": "networking traffic control and such I was wondering if you could go into a little more detail on how you guys do",
    "start": "1898390",
    "end": "1904490"
  },
  {
    "text": "the traffic control specifically network traffic coming in off of a load balancer and then segmenting that up to go to the",
    "start": "1904490",
    "end": "1912140"
  },
  {
    "text": "actual customer instances specifically are you guys able to do like layer for",
    "start": "1912140",
    "end": "1917810"
  },
  {
    "text": "traffic control and if so where do you guys do that what what is that topology",
    "start": "1917810",
    "end": "1923660"
  },
  {
    "text": "look like ultra I'll try to speak to that so we what we we do with open rusty is",
    "start": "1923660",
    "end": "1930860"
  },
  {
    "text": "we have for every customer in our database of service we assign them at JWT and so what what we do is we we use",
    "start": "1930860",
    "end": "1939680"
  },
  {
    "text": "the kubernetes api to go and to go and look at their at whether they have",
    "start": "1939680",
    "end": "1944830"
  },
  {
    "text": "whether they have the what they provision what and whether they have the correct permissions for it and what we",
    "start": "1944830",
    "end": "1951050"
  },
  {
    "text": "see if that matches up with the claims in their JWT so so that that's just",
    "start": "1951050",
    "end": "1957290"
  },
  {
    "text": "that's what that's mostly what's going on there and I don't know if that",
    "start": "1957290",
    "end": "1963200"
  },
  {
    "text": "answers your question or not or yes",
    "start": "1963200",
    "end": "1970040"
  },
  {
    "text": "partially um specifically for getting the data or the traffic to the customer instances as in the databases is that",
    "start": "1970040",
    "end": "1976910"
  },
  {
    "text": "what you guys are doing in that case as well I'm sorry can you repeat that please yeah the so when customers are wanting",
    "start": "1976910",
    "end": "1984320"
  },
  {
    "text": "to connect to their instance for example the connection string that you demoed how do you guys route that traffic oh",
    "start": "1984320",
    "end": "1991280"
  },
  {
    "text": "yes through the actual customers that's nuts oh so that's actually just good that's that's completely handled like",
    "start": "1991280",
    "end": "1998120"
  },
  {
    "text": "use that's using the application it's it oh yeah yeah",
    "start": "1998120",
    "end": "2007050"
  },
  {
    "start": "2017000",
    "end": "2075000"
  },
  {
    "text": "we start a set of V tickets per customer and we also do a load balancer in front",
    "start": "2017460",
    "end": "2023080"
  },
  {
    "text": "of those V T gates and four for each customer so each customer connects to that load",
    "start": "2023080",
    "end": "2028900"
  },
  {
    "text": "balancer and so in that path open rest is not there so we use open r st mostly for the web authentication yeah i think",
    "start": "2028900",
    "end": "2040450"
  },
  {
    "text": "we have time for one more question",
    "start": "2040450",
    "end": "2044070"
  },
  {
    "text": "so you guys used to open s-sorry operator SDK I was wondering if you had any thoughts or comparisons with queue",
    "start": "2049900",
    "end": "2056899"
  },
  {
    "text": "building comparisons to queue bill there",
    "start": "2056900",
    "end": "2063909"
  },
  {
    "text": "we haven't we haven't evaluated key buildings so I saw I'm sorry I wouldn't okay okay let's talk to them all right",
    "start": "2063910",
    "end": "2072020"
  },
  {
    "text": "thank you everyone [Applause]",
    "start": "2072020",
    "end": "2077550"
  }
]