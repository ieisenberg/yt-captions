[
  {
    "text": "so hello everyone um Welcome to our session about Cloud events discovery",
    "start": "11900",
    "end": "18720"
  },
  {
    "text": "Clements and I will give some introduction of what we've been up to regarding Cloud events Discovery over",
    "start": "18720",
    "end": "24779"
  },
  {
    "text": "the past years um but first maybe a short look back Cloud",
    "start": "24779",
    "end": "32520"
  },
  {
    "text": "events 1.0 was finalized in October 2019 and at that time as the horseback was",
    "start": "32520",
    "end": "41100"
  },
  {
    "text": "stable we met and discussed what to do after this course specification",
    "start": "41100",
    "end": "48000"
  },
  {
    "text": "of course in parallel to this the normal work was also ongoing like additions to",
    "start": "48000",
    "end": "55199"
  },
  {
    "text": "the specification and um",
    "start": "55199",
    "end": "61739"
  },
  {
    "text": "additional protocol bindings and of course the valuable work also on the sdks and so on but yes we decided in",
    "start": "61739",
    "end": "69180"
  },
  {
    "text": "2019 that Discovery and subscription handling would be the next thing to look for and so we now have a few draft specs",
    "start": "69180",
    "end": "77460"
  },
  {
    "text": "in our repository one for subscriptions and one",
    "start": "77460",
    "end": "82979"
  },
  {
    "text": "I hear called registry but in fact that is exactly about Discovery but why it's",
    "start": "82979",
    "end": "88200"
  },
  {
    "text": "called registry I will explain over this talk we have some specifications that",
    "start": "88200",
    "end": "94500"
  },
  {
    "text": "also emerged as you could say side effects of the other two like pagination where it's about handling larger result",
    "start": "94500",
    "end": "101040"
  },
  {
    "text": "sets from API calls and Page through them and the CE SQL that is a SQL",
    "start": "101040",
    "end": "107040"
  },
  {
    "text": "dialect on its own just to create Cloud event filters for event subscriptions",
    "start": "107040",
    "end": "114860"
  },
  {
    "text": "today it's about Discovery so what is Discovery I think in the beginning people had various expectations to this",
    "start": "115259",
    "end": "121799"
  },
  {
    "text": "and I would summarize it under those three questions",
    "start": "121799",
    "end": "126840"
  },
  {
    "text": "so what events are around in my context context of course for all our",
    "start": "126840",
    "end": "132540"
  },
  {
    "text": "participants means a lot of different things like could be a product a landscape just a specific service but",
    "start": "132540",
    "end": "140520"
  },
  {
    "text": "that's exactly open to the according use case and once you've found an event and",
    "start": "140520",
    "end": "146580"
  },
  {
    "text": "know essentially how it looks like what the source the type and those attributes are you might wonder what the payload",
    "start": "146580",
    "end": "153660"
  },
  {
    "text": "looks like so what the schema of the payload is and that is also something",
    "start": "153660",
    "end": "158760"
  },
  {
    "text": "that has applications Beyond Eventing and messaging because um",
    "start": "158760",
    "end": "163860"
  },
  {
    "text": "yeah schema definitions are widely used for code generation and also validation",
    "start": "163860",
    "end": "169200"
  },
  {
    "text": "purposes and once you have those two questions covered you might be",
    "start": "169200",
    "end": "174420"
  },
  {
    "text": "interested in a specific landscape and they'll look for endpoints that now are ready to consume or produce your events",
    "start": "174420",
    "end": "180900"
  },
  {
    "text": "and that's then the endpoint registry but that starts with the event",
    "start": "180900",
    "end": "186180"
  },
  {
    "text": "definitions so event definitions we just see them as something that can be summarized in a",
    "start": "186180",
    "end": "193319"
  },
  {
    "text": "group a definition group and as I said in the beginning this context this group can mean a lot of things and that's",
    "start": "193319",
    "end": "199140"
  },
  {
    "text": "really up to you what you wanted to be and the other thing you see in the",
    "start": "199140",
    "end": "206220"
  },
  {
    "text": "bottom the rough structure of such an uh definition",
    "start": "206220",
    "end": "211560"
  },
  {
    "text": "it has some of the expected attributes like ID and description and so on but also you see something like format so",
    "start": "211560",
    "end": "217800"
  },
  {
    "text": "here it says Cloud events but we realized that this can also be used for",
    "start": "217800",
    "end": "223260"
  },
  {
    "text": "the people who maybe don't use cloud events but just plain messaging and like",
    "start": "223260",
    "end": "228959"
  },
  {
    "text": "messaging protocols like mqp so this can be extended or there's already some",
    "start": "228959",
    "end": "234780"
  },
  {
    "text": "there are already some definitions for other plane messaging formats",
    "start": "234780",
    "end": "240599"
  },
  {
    "text": "and the other things we see here in this sample on the bottom is the attribute",
    "start": "240599",
    "end": "246239"
  },
  {
    "text": "section I will explain this a bit more in the following slide and a link to a schema so that's already touching the",
    "start": "246239",
    "end": "252780"
  },
  {
    "text": "schema part and yeah so what can you tell about in the cloud event contracts it's all about",
    "start": "252780",
    "end": "258780"
  },
  {
    "text": "attributes so that's also what we have here and in addition to what is",
    "start": "258780",
    "end": "264060"
  },
  {
    "text": "specified on the cloud events core specification you can go further like",
    "start": "264060",
    "end": "269639"
  },
  {
    "text": "Define what the event type of your event is supposed to be what we have here for example for this customer node edit",
    "start": "269639",
    "end": "275460"
  },
  {
    "text": "event actually the first part here is could also be left out as it's just repeating",
    "start": "275460",
    "end": "282360"
  },
  {
    "text": "the constraints we already have in the specification an ID is always supposed to be a string",
    "start": "282360",
    "end": "287699"
  },
  {
    "text": "and it's a required attribute anyways but for source and subject here we have URI templates",
    "start": "287699",
    "end": "294720"
  },
  {
    "text": "and here you see that for example for Source there's one field the the sources",
    "start": "294720",
    "end": "300440"
  },
  {
    "text": "always made of those segments in the path with CRM customers and the region",
    "start": "300440",
    "end": "306800"
  },
  {
    "text": "for subjects it's even a bit more interesting here because in this spec",
    "start": "306800",
    "end": "311880"
  },
  {
    "text": "it's an optional attribute but here for this event it's made required and also",
    "start": "311880",
    "end": "318020"
  },
  {
    "text": "originally it's just a string we don't constrain it further in the course back but here it's then a URI that contains a",
    "start": "318020",
    "end": "325259"
  },
  {
    "text": "uid for for schemas we also have this",
    "start": "325259",
    "end": "330840"
  },
  {
    "text": "grouping idea and you can store all kinds of schema documents so we are not",
    "start": "330840",
    "end": "336360"
  },
  {
    "text": "really fixed on a specific language we we Define already to use the usage of",
    "start": "336360",
    "end": "342060"
  },
  {
    "text": "Json schema XML schema Avro and protobuf I think and but it's really open to be",
    "start": "342060",
    "end": "349500"
  },
  {
    "text": "used with any schema definition language what is here in addition to the event definitions is that we also allow having",
    "start": "349500",
    "end": "356880"
  },
  {
    "text": "multiple versions of a schema in parallel endpoints are again just an extension of",
    "start": "356880",
    "end": "363780"
  },
  {
    "text": "the plane definition group in the sense that they add allowed to add",
    "start": "363780",
    "end": "369620"
  },
  {
    "text": "configuration data that is for technical things like like protocol settings and",
    "start": "369620",
    "end": "374880"
  },
  {
    "text": "so on they Define a usage and that's one of the things I explain in the following",
    "start": "374880",
    "end": "379979"
  },
  {
    "text": "slides they also allow to to link to definition groups so to reuse already",
    "start": "379979",
    "end": "385259"
  },
  {
    "text": "defined events sometimes in some environments you might have hundreds or thousands of endpoints that all refer to",
    "start": "385259",
    "end": "391440"
  },
  {
    "text": "some predefined events so repeating them all over again and again would not be very efficient",
    "start": "391440",
    "end": "399000"
  },
  {
    "text": "and um yeah so one more thing that will also be explained in the following slides is the channel",
    "start": "399000",
    "end": "405660"
  },
  {
    "text": "so let's let's first look at the usage types of endpoints um so we have consumer endpoints we have",
    "start": "405660",
    "end": "411900"
  },
  {
    "text": "producer endpoints and also subscriber endpoints let's start with the consumer",
    "start": "411900",
    "end": "416940"
  },
  {
    "text": "endpoint that's sometimes also referred to as the pull model so you have a consumer that",
    "start": "416940",
    "end": "422940"
  },
  {
    "text": "wants to consume events and therefore looks for that consumer endpoint and in the first step it initiates a connection",
    "start": "422940",
    "end": "429840"
  },
  {
    "text": "to this consumer endpoint and then once the connection is established the events can flow typical",
    "start": "429840",
    "end": "438419"
  },
  {
    "text": "things for this examples are Pub sub models when you subscribe to a topic for",
    "start": "438419",
    "end": "444060"
  },
  {
    "text": "example but it could also be realized with an HTTP get call the other direction the push model so to",
    "start": "444060",
    "end": "451080"
  },
  {
    "text": "speak where you use a producer endpoint so you go out and look for an endpoint where you could send specific events to",
    "start": "451080",
    "end": "457860"
  },
  {
    "text": "and here the producer also initiates the connection and then sends events over",
    "start": "457860",
    "end": "464340"
  },
  {
    "text": "that connection I guess the simplest example for this would be a webhog",
    "start": "464340",
    "end": "470280"
  },
  {
    "text": "and for subscriptions uh the subscriber endpoint um there you have a consumer or some",
    "start": "470280",
    "end": "477900"
  },
  {
    "text": "party actually that uses that subscriber endpoint to create an event subscription so a filter and the specification of a",
    "start": "477900",
    "end": "485060"
  },
  {
    "text": "producer endpoint to send the events to that can be for example used in combination with webhooks",
    "start": "485060",
    "end": "492979"
  },
  {
    "text": "and for channels I said that there's this channel attribute also in the endpoint definition and that can be used",
    "start": "493259",
    "end": "499680"
  },
  {
    "text": "to correlate which endpoints belong to the same channel so imagine you have something like a Kafka topic or any",
    "start": "499680",
    "end": "505379"
  },
  {
    "text": "other queuing system and then you would have an endpoint a producer endpoint on",
    "start": "505379",
    "end": "511560"
  },
  {
    "text": "the inbound side and the consumer endpoint on the outbound side and through this channel field you then",
    "start": "511560",
    "end": "516899"
  },
  {
    "text": "could discover that they are attached to the same channel and correlate them",
    "start": "516899",
    "end": "523219"
  },
  {
    "text": "so maybe you already saw that there is some commonality between those three Registries we have and it's it's always",
    "start": "523260",
    "end": "530399"
  },
  {
    "text": "this hierarchical setup there are some differences but there's also a common",
    "start": "530399",
    "end": "535500"
  },
  {
    "text": "core and that is to have groups of metadata that are stored in those",
    "start": "535500",
    "end": "541740"
  },
  {
    "text": "metadata resources and yes we can just Define them in in single files and",
    "start": "541740",
    "end": "547140"
  },
  {
    "text": "that's one part of the specification where you also Define then a standardized API to access those",
    "start": "547140",
    "end": "553980"
  },
  {
    "text": "and this is then the new Reaper on the Block you could say so as this is beyond",
    "start": "553980",
    "end": "559140"
  },
  {
    "text": "just Cloud events you can Define arbitrary message formats in there you can also store schemas and even extend",
    "start": "559140",
    "end": "567360"
  },
  {
    "text": "it to use other resources to store other resources that's why we call this the X registry the extensible registry and we",
    "start": "567360",
    "end": "574440"
  },
  {
    "text": "are currently in the process of moving the specification for this part into exactly this Repository",
    "start": "574440",
    "end": "582320"
  },
  {
    "text": "so some guiding principles we we had when discussing this over the time it",
    "start": "582420",
    "end": "589140"
  },
  {
    "text": "should be possible to start small with your hello world sample for example and there you would just put some event",
    "start": "589140",
    "end": "595740"
  },
  {
    "text": "definitions together maybe with some schema also in line and maybe even the endpoint description into a single file",
    "start": "595740",
    "end": "602040"
  },
  {
    "text": "we currently foresee the CCE rack extension for this and you could just manage this together",
    "start": "602040",
    "end": "607860"
  },
  {
    "text": "with the source code in a repository and one step further would then be that",
    "start": "607860",
    "end": "613440"
  },
  {
    "text": "you pull out the endpoint definition and make maybe your deployment scripts or your infrastructure create this endpoint",
    "start": "613440",
    "end": "619560"
  },
  {
    "text": "description on the fly when you deploy this and make this endpoint and link to the statically provided definitions you",
    "start": "619560",
    "end": "626160"
  },
  {
    "text": "have in your project but of course you could also do something more advanced maybe you're up",
    "start": "626160",
    "end": "632760"
  },
  {
    "text": "to some kind of Enterprise setup where you need a central registry and a lot more governance and organization people",
    "start": "632760",
    "end": "639360"
  },
  {
    "text": "want to have a central control over events and schemas that are defined uh also for more controlled life cycle and",
    "start": "639360",
    "end": "646500"
  },
  {
    "text": "versioning you usually need this for um if you need interoperability between",
    "start": "646500",
    "end": "653399"
  },
  {
    "text": "maybe Departments of the same company but sometimes even to the outside so to",
    "start": "653399",
    "end": "658500"
  },
  {
    "text": "to vendors or customers and with evolving event infrastructures",
    "start": "658500",
    "end": "664620"
  },
  {
    "text": "you might also have the need for a Federated event Discovery so maybe even Discovery services that again The",
    "start": "664620",
    "end": "670920"
  },
  {
    "text": "Exchange Discovery data so sorry",
    "start": "670920",
    "end": "677279"
  },
  {
    "text": "um where we are right now so just disclaimer first what I explained to you",
    "start": "677279",
    "end": "682860"
  },
  {
    "text": "was the current status of our discussion of what we have and that is still work",
    "start": "682860",
    "end": "688860"
  },
  {
    "text": "in progress so changes may happen but that is also your opportunity so if you like to join us if you have some ideas",
    "start": "688860",
    "end": "696540"
  },
  {
    "text": "or use cases to present don't hesitate you can call join our calls or just open",
    "start": "696540",
    "end": "702300"
  },
  {
    "text": "a GitHub issue whatever suits your best and and tell us and we have also some",
    "start": "702300",
    "end": "707820"
  },
  {
    "text": "more challenges we are currently discussing in the group like um defining Cloud events for X",
    "start": "707820",
    "end": "714600"
  },
  {
    "text": "registry so that we can have events if a schema changes or a new schema version",
    "start": "714600",
    "end": "720540"
  },
  {
    "text": "is there if an endpoint changes things like this and there are also cases when",
    "start": "720540",
    "end": "725820"
  },
  {
    "text": "event definitions need to be enriched by someone who points to them because they are",
    "start": "725820",
    "end": "732420"
  },
  {
    "text": "there are more specific attribute definitions or something like this maybe also custom attributes added to an",
    "start": "732420",
    "end": "739140"
  },
  {
    "text": "existing event definition and sometimes also endpoints add additional attributes",
    "start": "739140",
    "end": "744360"
  },
  {
    "text": "like in the example here a partition key if you if you think of a Gateway that",
    "start": "744360",
    "end": "749640"
  },
  {
    "text": "pushes events to a Kafka topic then that Gateway might add that partition key as an additional field and the producer",
    "start": "749640",
    "end": "755279"
  },
  {
    "text": "originally did not even know about this so that's also an interesting case but",
    "start": "755279",
    "end": "761360"
  },
  {
    "text": "all these very sophisticated examples",
    "start": "761360",
    "end": "766399"
  },
  {
    "text": "might be a bit hard to discuss right now so it's better to get some practical",
    "start": "766399",
    "end": "771899"
  },
  {
    "text": "experience right now and also learn from those proof of concept implementations and that's exactly what Clements did",
    "start": "771899",
    "end": "779339"
  },
  {
    "text": "extensively over the past months I would say and he wants to show something of this so handing over fantastic",
    "start": "779339",
    "end": "786300"
  },
  {
    "text": "fantastic thank you Klaus um so I'm going to go away from the slides and we're going to switch into vs",
    "start": "786300",
    "end": "792660"
  },
  {
    "text": "code for you right",
    "start": "792660",
    "end": "798180"
  },
  {
    "text": "because that's more fun um and I will show you a few samples and",
    "start": "798180",
    "end": "805139"
  },
  {
    "text": "Sample documents to illustrate basically what we have here in terms of",
    "start": "805139",
    "end": "811440"
  },
  {
    "text": "definitions um so there is a there is an API and there",
    "start": "811440",
    "end": "817200"
  },
  {
    "text": "is a a document format I'm not going to show much of the API here today because we can basically",
    "start": "817200",
    "end": "824279"
  },
  {
    "text": "infer from the document structure what that API looks like what we did is we created a asymmetry between the",
    "start": "824279",
    "end": "831480"
  },
  {
    "text": "documents and the API means if you go to the root of the registry and then you",
    "start": "831480",
    "end": "838860"
  },
  {
    "text": "start you start to slash definition groups you're going to get exactly the content that sits here underneath",
    "start": "838860",
    "end": "845220"
  },
  {
    "text": "definition groups if you go to definition groups slash contoso CRM",
    "start": "845220",
    "end": "850260"
  },
  {
    "text": "events you're going to get that object we so we have basically this resource graph you can Traverse it using the",
    "start": "850260",
    "end": "856920"
  },
  {
    "text": "uri's so we have a pure arrest service but and what's what's richer in the API",
    "start": "856920",
    "end": "862940"
  },
  {
    "text": "than in a document format is obviously you can store many many of these documents we have",
    "start": "862940",
    "end": "869459"
  },
  {
    "text": "filtering pagination Etc but basically the structure that you see here in Json is is the same structure you will get",
    "start": "869459",
    "end": "876300"
  },
  {
    "text": "out of the API and we find that super important why because we think",
    "start": "876300",
    "end": "881519"
  },
  {
    "text": "that this registry will in most projects start small um so the minimal I have a minimal file",
    "start": "881519",
    "end": "888180"
  },
  {
    "text": "here where we have effectively a a definition and you know the uh um a few",
    "start": "888180",
    "end": "897600"
  },
  {
    "text": "events I'll go into details on those things in a moment and then we have the schema groups all those in one file",
    "start": "897600",
    "end": "904160"
  },
  {
    "text": "another example I'll just pick this again you see that the file is fairly large",
    "start": "904160",
    "end": "911519"
  },
  {
    "text": "um so I have an HTTP endpoint that hdb endpoint points to the set of",
    "start": "911519",
    "end": "918120"
  },
  {
    "text": "definitions that we're defining here those definitions are Cloud events and",
    "start": "918120",
    "end": "923880"
  },
  {
    "text": "so this is the customer created Cloud events that has this type we",
    "start": "923880",
    "end": "930120"
  },
  {
    "text": "require a time we have a particular Source URI that needs to be defined and it's using a schema",
    "start": "930120",
    "end": "937440"
  },
  {
    "text": "in Json schema and it's kind of pointing to this definition inside of this",
    "start": "937440",
    "end": "943019"
  },
  {
    "text": "document which is relative a relative to URL and so if we go and scroll down to the bottom that's kind of where we",
    "start": "943019",
    "end": "949019"
  },
  {
    "text": "find those things so you'll see that within a single document we can store schemas",
    "start": "949019",
    "end": "956820"
  },
  {
    "text": "may that be Json schema may that be protobuf schema may that be you know whatever schema you like afro schema Etc",
    "start": "956820",
    "end": "965360"
  },
  {
    "text": "we can store event definitions meaning constraints on top of Cloud",
    "start": "965360",
    "end": "971699"
  },
  {
    "text": "events defining exactly what those events are and we can have endpoints",
    "start": "971699",
    "end": "976860"
  },
  {
    "text": "which then refer to those definitions so very practically speaking what you",
    "start": "976860",
    "end": "981899"
  },
  {
    "text": "can do is you can Define exactly for a a messaging tunnel if you will exactly",
    "start": "981899",
    "end": "987899"
  },
  {
    "text": "what's allowed or what can be expected out of that tunnel that's what that channel concept is that we have we don't",
    "start": "987899",
    "end": "994500"
  },
  {
    "text": "we don't have necessarily we don't we don't say it's a queue we don't say it's a topic we have no we don't take a",
    "start": "994500",
    "end": "1001759"
  },
  {
    "text": "stance on this we're simply saying there's a thing you can go and send events into and here's the contract for it and here's a thing you can go and get",
    "start": "1001759",
    "end": "1008720"
  },
  {
    "text": "events out of and that is what the contract is that's what we're doing kind of with these with these definitions the X",
    "start": "1008720",
    "end": "1015500"
  },
  {
    "text": "registry is kind of the sub the underlying uh base base structure that",
    "start": "1015500",
    "end": "1022820"
  },
  {
    "text": "you can then extend further things so our colleague our our project poly Doug",
    "start": "1022820",
    "end": "1027980"
  },
  {
    "text": "Davis um is uh has been doing the work to validate the abstractness of the spec to",
    "start": "1027980",
    "end": "1034699"
  },
  {
    "text": "build an API registry with it so there we're using the underlying the",
    "start": "1034699",
    "end": "1040220"
  },
  {
    "text": "underpinnings the schema registry and we can go and embed effectively open API documents and async API documents",
    "start": "1040220",
    "end": "1048500"
  },
  {
    "text": "into our format here and then they can go and refer with their schema",
    "start": "1048500",
    "end": "1055240"
  },
  {
    "text": "references into the schema registry so we have a very Universal model here",
    "start": "1055240",
    "end": "1060740"
  },
  {
    "text": "for modeling effectively metadata I'll show you a few more examples",
    "start": "1060740",
    "end": "1066200"
  },
  {
    "text": "um because we've been mostly talking about Cloud event so let's go back to this so just so that we have context so",
    "start": "1066200",
    "end": "1072740"
  },
  {
    "text": "this is an event that is defined in Cloud events here is",
    "start": "1072740",
    "end": "1078799"
  },
  {
    "text": "an aimqp example so we have an mqp endpoint",
    "start": "1078799",
    "end": "1084500"
  },
  {
    "text": "that's an mqpq and here instead of defining a cloud",
    "start": "1084500",
    "end": "1089660"
  },
  {
    "text": "event the format is mqp1 and what you'll find is that the metadata is",
    "start": "1089660",
    "end": "1095000"
  },
  {
    "text": "representing effectively the message attributes in an ampp message the message properties the time to live",
    "start": "1095000",
    "end": "1102200"
  },
  {
    "text": "that's on the in the header of the mqp message custom application properties",
    "start": "1102200",
    "end": "1107539"
  },
  {
    "text": "which means we can use this to create a contract for aimqp which is something",
    "start": "1107539",
    "end": "1114799"
  },
  {
    "text": "that doesn't exist so you can now go and take these documents or a link to the",
    "start": "1114799",
    "end": "1120020"
  },
  {
    "text": "API associate them with a queue and now you all of a sudden you can go",
    "start": "1120020",
    "end": "1125480"
  },
  {
    "text": "and inquiry that queue and say what are the messages that you're expecting or what are the messages that I can expect",
    "start": "1125480",
    "end": "1130760"
  },
  {
    "text": "when I go come to you which is pretty amazing I can do the same thing with",
    "start": "1130760",
    "end": "1138860"
  },
  {
    "text": "http so http so this is this is a cloud Advanced",
    "start": "1138860",
    "end": "1145220"
  },
  {
    "text": "version of HTTP wait sorry so mqtt mqtt also has a particular set of of",
    "start": "1145220",
    "end": "1152419"
  },
  {
    "text": "metadatas it has topic quas retain user properties Etc so we can also represent",
    "start": "1152419",
    "end": "1158419"
  },
  {
    "text": "that here so basically for all open messaging for all messaging formats which have particular",
    "start": "1158419",
    "end": "1165880"
  },
  {
    "text": "metadata models we can represent them all in a single registry here that is all very powerful",
    "start": "1165880",
    "end": "1173179"
  },
  {
    "text": "and there's a reason I'm doing this in code because I have a little tool",
    "start": "1173179",
    "end": "1180919"
  },
  {
    "text": "called C registry",
    "start": "1180919",
    "end": "1184120"
  },
  {
    "text": "what is wrong Okay so it was just it was just thinking for a",
    "start": "1186620",
    "end": "1193220"
  },
  {
    "text": "moment um so I call this tool",
    "start": "1193220",
    "end": "1199460"
  },
  {
    "text": "I'll make this a little bigger and it gives me back a number of",
    "start": "1199460",
    "end": "1206200"
  },
  {
    "text": "templates that it has and so what I can do is I can from here",
    "start": "1206200",
    "end": "1212360"
  },
  {
    "text": "say CE registry generate",
    "start": "1212360",
    "end": "1218080"
  },
  {
    "text": "and I can go and say I would like to have a producer",
    "start": "1218080",
    "end": "1224600"
  },
  {
    "text": "in for the language I'm going to pick C sharp language C sharp",
    "start": "1224600",
    "end": "1230799"
  },
  {
    "text": "and I want to have a um I want to put this into the outputs",
    "start": "1230799",
    "end": "1237860"
  },
  {
    "text": "TMP or one and the project name",
    "start": "1237860",
    "end": "1244160"
  },
  {
    "text": "shall be CRM and the definitions",
    "start": "1244160",
    "end": "1249620"
  },
  {
    "text": "shall be from samples",
    "start": "1249620",
    "end": "1254059"
  },
  {
    "text": "um message definitions contoso CRM so that's the kurtosis CRM",
    "start": "1256160",
    "end": "1263179"
  },
  {
    "text": "file the the example that I just showed you so it goes and thinks a little bit",
    "start": "1263179",
    "end": "1271240"
  },
  {
    "text": "outcomes here a project so what it just dropped is effectively a",
    "start": "1272360",
    "end": "1278780"
  },
  {
    "text": "event producer that is taking all these definitions it creates basically it knows that there's",
    "start": "1278780",
    "end": "1284660"
  },
  {
    "text": "an endpoint an HTTP endpoint in the file so it creates a factory method for that",
    "start": "1284660",
    "end": "1289700"
  },
  {
    "text": "and we also have that for C sharp we also have that for Java we also have the for typescript",
    "start": "1289700",
    "end": "1295280"
  },
  {
    "text": "and then there's effectively a type method for every event that's in there and",
    "start": "1295280",
    "end": "1300860"
  },
  {
    "text": "basically everything that's that's that's defined as fixed is being inserted here into that file and you",
    "start": "1300860",
    "end": "1307280"
  },
  {
    "text": "only Supply the extra data that is defined for the event so you're always",
    "start": "1307280",
    "end": "1312559"
  },
  {
    "text": "getting kind of this generator now has enough information to always create a correct interoperable Cloud event",
    "start": "1312559",
    "end": "1320539"
  },
  {
    "text": "um that data here stems also from this project so basically it goes and runs",
    "start": "1320539",
    "end": "1328039"
  },
  {
    "text": "through the adjacent schema and then generates the correct class that's something we have all built into this",
    "start": "1328039",
    "end": "1334280"
  },
  {
    "text": "tool this tool however finished and fabulous this looks is a prototype",
    "start": "1334280",
    "end": "1340880"
  },
  {
    "text": "we built this for is to just prove out that we can we can basically go and",
    "start": "1340880",
    "end": "1347720"
  },
  {
    "text": "generate we can generate these we can generate these things that they work so I'm going to go into the so I'll put two",
    "start": "1347720",
    "end": "1356179"
  },
  {
    "text": "we're going to do some Java",
    "start": "1356179",
    "end": "1359559"
  },
  {
    "text": "there drops the Java project main contoso now I have the event",
    "start": "1364340",
    "end": "1370280"
  },
  {
    "text": "producer create for HTTP so there's the factory method so this is exactly the same",
    "start": "1370280",
    "end": "1375559"
  },
  {
    "text": "pattern now in Java and we can we can do the same thing also for a set for",
    "start": "1375559",
    "end": "1380960"
  },
  {
    "text": "typescript what that proves is that this is a the",
    "start": "1380960",
    "end": "1386000"
  },
  {
    "text": "format is good is great is grade good enough for a generation now there are obviously uh tool chains",
    "start": "1386000",
    "end": "1393500"
  },
  {
    "text": "that you may already have that you may want to use so I can go and create a",
    "start": "1393500",
    "end": "1398659"
  },
  {
    "text": "producer no no no don't do that",
    "start": "1398659",
    "end": "1406000"
  },
  {
    "text": "I'm going to pick the language open API",
    "start": "1407539",
    "end": "1412000"
  },
  {
    "text": "there comes the project what it did now it basically took our definition and",
    "start": "1416659",
    "end": "1422120"
  },
  {
    "text": "transcribed that into an open API document that you can now go and create a client from",
    "start": "1422120",
    "end": "1429520"
  },
  {
    "text": "and so this basically goes and creates a a message schema for each of these",
    "start": "1429559",
    "end": "1435980"
  },
  {
    "text": "messages with the correct expressions basically the correct the correct",
    "start": "1435980",
    "end": "1442520"
  },
  {
    "text": "messages for HTTP so this is using effectively implementing the HTTP binding for cloud events and we now have",
    "start": "1442520",
    "end": "1448700"
  },
  {
    "text": "enough metadata to go and drive that code generator and then just for fun",
    "start": "1448700",
    "end": "1454480"
  },
  {
    "text": "you're going to do this in o4",
    "start": "1456500",
    "end": "1461559"
  },
  {
    "text": "we can also generate async API",
    "start": "1467780",
    "end": "1473919"
  },
  {
    "text": "because we are a level below so async API is also and",
    "start": "1474260",
    "end": "1479840"
  },
  {
    "text": "you know standard also in the Linux Foundation that is uh defining effective contracts for one-way transports",
    "start": "1479840",
    "end": "1487520"
  },
  {
    "text": "um but for usually for correlated request response kind of exchanges similar to open API and since our",
    "start": "1487520",
    "end": "1494000"
  },
  {
    "text": "definitions are effectively a level below where simpler but more more precise more",
    "start": "1494000",
    "end": "1500960"
  },
  {
    "text": "down to the protocol it's easy for us to kind of write an Asic an Asic API",
    "start": "1500960",
    "end": "1506780"
  },
  {
    "text": "implementation if you will of that contract out so you have we can generate",
    "start": "1506780",
    "end": "1512480"
  },
  {
    "text": "open API we can generate async API we can generate code um based on those definitions I said",
    "start": "1512480",
    "end": "1518780"
  },
  {
    "text": "this is all prototypical and this is actually not even yet checked into the",
    "start": "1518780",
    "end": "1524480"
  },
  {
    "text": "uh the repo just because we don't we don't have to register Repro yet so this is a repo that I use to kind of proof",
    "start": "1524480",
    "end": "1530960"
  },
  {
    "text": "these things out but we'll go and put that into that common Repository",
    "start": "1530960",
    "end": "1538460"
  },
  {
    "text": "just to give you a quick look um in how this works there's this",
    "start": "1538460",
    "end": "1545240"
  },
  {
    "text": "template directory in my project that kind of it's a python this is all written python",
    "start": "1545240",
    "end": "1552020"
  },
  {
    "text": "um so it's a template directory and then in this template directory you will find these projects here's my",
    "start": "1552020",
    "end": "1558140"
  },
  {
    "text": "producer 4C sharp and the way this is done is using Jinja Ginger 2 the",
    "start": "1558140",
    "end": "1564919"
  },
  {
    "text": "template the template engine and we've written a fair I have written a fairly extensive set of extensions for Jinja",
    "start": "1564919",
    "end": "1571880"
  },
  {
    "text": "that can be used in in here so this is effectively the project file and then you know picks up the package",
    "start": "1571880",
    "end": "1579740"
  },
  {
    "text": "references Etc and here's my producer file and so I've have we have a with",
    "start": "1579740",
    "end": "1587299"
  },
  {
    "text": "this effectively a code generator framework if you will that's super easy to use you don't have to write any code",
    "start": "1587299",
    "end": "1593419"
  },
  {
    "text": "you simply go and write a new template drop that into that directory and then you can go and write you know code for",
    "start": "1593419",
    "end": "1600200"
  },
  {
    "text": "whatever you want based on these definitions if you want to you can also steal that code and write your own code",
    "start": "1600200",
    "end": "1606440"
  },
  {
    "text": "generator for your own metadata format if you want to um so in these so we have templates for",
    "start": "1606440",
    "end": "1612559"
  },
  {
    "text": "as as I said async API there's one that generates",
    "start": "1612559",
    "end": "1617600"
  },
  {
    "text": "queries for um Azure stream analytics we have here",
    "start": "1617600",
    "end": "1623799"
  },
  {
    "text": "as I said open API we generate Python and typescript code and and basically",
    "start": "1623799",
    "end": "1628940"
  },
  {
    "text": "the the the the principle here is that the the code generator always generates",
    "start": "1628940",
    "end": "1634640"
  },
  {
    "text": "complete projects which means you can go and create a package compile it and then refer to it and then use that",
    "start": "1634640",
    "end": "1641120"
  },
  {
    "text": "effectively as your client to um you know your web service or",
    "start": "1641120",
    "end": "1646700"
  },
  {
    "text": "um to you know consume events from in that particular format you always get a fully typed experience out of this",
    "start": "1646700",
    "end": "1654860"
  },
  {
    "text": "and that is all for um effectively made possible because we now",
    "start": "1654860",
    "end": "1661580"
  },
  {
    "text": "have a formal language but with which we can go and Define these contracts for messaging for",
    "start": "1661580",
    "end": "1668539"
  },
  {
    "text": "Eventing with an eye clear eye on um on cloud events the last thing",
    "start": "1668539",
    "end": "1676059"
  },
  {
    "text": "and this is probably the most extreme example that we have um",
    "start": "1676340",
    "end": "1682539"
  },
  {
    "text": "if you have any contacts with the manufacturing industry there is an mqtt",
    "start": "1682539",
    "end": "1689059"
  },
  {
    "text": "based standard called spark plug B and spark plug B is being used to you know",
    "start": "1689059",
    "end": "1696440"
  },
  {
    "text": "from machine to machine interaction for collecting sensor information from farmer sensors",
    "start": "1696440",
    "end": "1702940"
  },
  {
    "text": "this specification here this document is a formal specific formal definition of",
    "start": "1702940",
    "end": "1708380"
  },
  {
    "text": "spark plug B in our format that is more formal than any of the spark plug B owns",
    "start": "1708380",
    "end": "1716779"
  },
  {
    "text": "spark plug B's own documents because there is no way today to formally Define",
    "start": "1716779",
    "end": "1721940"
  },
  {
    "text": "an mqtt message and there is no way today to formally Define an entity endpoint this is it so you have here a",
    "start": "1721940",
    "end": "1730580"
  },
  {
    "text": "edge node producer for spark plug that has a particular topic format",
    "start": "1730580",
    "end": "1737799"
  },
  {
    "text": "that has refers to a will message and to a will topic so these are all options",
    "start": "1737799",
    "end": "1743360"
  },
  {
    "text": "you can basically go and Define here you have a node consumer so you can see that these endpoints are effectively roles",
    "start": "1743360",
    "end": "1749840"
  },
  {
    "text": "that these parties take in uh in this mqtt protocol definition",
    "start": "1749840",
    "end": "1755799"
  },
  {
    "text": "so these are all these roles each of them have a particular assigned",
    "start": "1755799",
    "end": "1761179"
  },
  {
    "text": "Topic in this topic tree you'll see that these all refer to definition groups so",
    "start": "1761179",
    "end": "1767539"
  },
  {
    "text": "what they do here is this application producer that knows effectively three",
    "start": "1767539",
    "end": "1772899"
  },
  {
    "text": "knows consuming three kinds of messages they're then defined further in here so they're so-called and birth",
    "start": "1772899",
    "end": "1779779"
  },
  {
    "text": "and death and data I'm not going to explain the protocol to you D death D",
    "start": "1779779",
    "end": "1785659"
  },
  {
    "text": "birth Etc some of them are sticky messages some of them are just Telemetry messages and we can basically Define",
    "start": "1785659",
    "end": "1792620"
  },
  {
    "text": "that all in here and you'll see the schema URLs and the schema URLs point to the schema section",
    "start": "1792620",
    "end": "1798440"
  },
  {
    "text": "which in one case defines Json schemas",
    "start": "1798440",
    "end": "1804200"
  },
  {
    "text": "there is no formal Json schema for those things in the actual spark plug B specification so this is this is",
    "start": "1804200",
    "end": "1810080"
  },
  {
    "text": "something we did here and then in this in the other case refers to the official protobuf 2",
    "start": "1810080",
    "end": "1818080"
  },
  {
    "text": "document that is external so we're doing here not if we don't embed it we have in",
    "start": "1818080",
    "end": "1823940"
  },
  {
    "text": "a link to it so this is a formal way to Define fairly",
    "start": "1823940",
    "end": "1830240"
  },
  {
    "text": "complex protocol relationships on MTP with Cloud events with mqtt with Kafka",
    "start": "1830240",
    "end": "1836659"
  },
  {
    "text": "whatever whatever you want it's a formal language for um for messaging contracts",
    "start": "1836659",
    "end": "1844840"
  },
  {
    "text": "and that's what we had questions [Applause]",
    "start": "1844880",
    "end": "1857659"
  },
  {
    "text": "question questions the lady with microphone is up here yeah",
    "start": "1857659",
    "end": "1864080"
  },
  {
    "text": "okay go ahead hi and first of all I think it's a great idea uh and it fills the Gap but why did",
    "start": "1864080",
    "end": "1870860"
  },
  {
    "text": "you decide to go as a DOT c Rec file and not a regular Json Channel structure so",
    "start": "1870860",
    "end": "1876799"
  },
  {
    "text": "you could use Json references you know other stuff um but so why do we have an extension",
    "start": "1876799",
    "end": "1884000"
  },
  {
    "text": "yeah why it's why isn't it just a regular Json file ref to something uh we have that's not",
    "start": "1884000",
    "end": "1891799"
  },
  {
    "text": "set in stone yet um we have mostly used this extension to separate it out",
    "start": "1891799",
    "end": "1898279"
  },
  {
    "text": "um for um uh for integrating with tooling",
    "start": "1898279",
    "end": "1903320"
  },
  {
    "text": "so there is a kind of in this in in the repos that we have there is a nascent",
    "start": "1903320",
    "end": "1909880"
  },
  {
    "text": "extension for visual studio code and to trigger a extension to kind of make sure",
    "start": "1909880",
    "end": "1915919"
  },
  {
    "text": "that you have the right document that they can go in and start the wizard The Code generation wizard you need to be",
    "start": "1915919",
    "end": "1921440"
  },
  {
    "text": "able to tell what document it is so that's why it's like it is Jason and",
    "start": "1921440",
    "end": "1926899"
  },
  {
    "text": "it's being registered as Json and it is all Json files so this is not spec it's not it's not non-conformant but we have",
    "start": "1926899",
    "end": "1933620"
  },
  {
    "text": "a special extension that helps to uh tell the tooling that",
    "start": "1933620",
    "end": "1939620"
  },
  {
    "text": "um uh this is the the contract file you want not set in stone you can set it's",
    "start": "1939620",
    "end": "1945380"
  },
  {
    "text": "just normal Json so we're just storing that here in with the ca CE reg extension and since we're moving to X",
    "start": "1945380",
    "end": "1951919"
  },
  {
    "text": "registry um obviously that name's still going to change so whether that's more practical",
    "start": "1951919",
    "end": "1957919"
  },
  {
    "text": "to use Json or to use uh um C reg or",
    "start": "1957919",
    "end": "1963919"
  },
  {
    "text": "whatever the extension is is something that's yet to be seen obviously since yaml is a superset of Json you can",
    "start": "1963919",
    "end": "1972440"
  },
  {
    "text": "convert these documents into yaml and also the parser understands them too because we already got a basically HTTP",
    "start": "1972440",
    "end": "1979700"
  },
  {
    "text": "server in place that just has a lot of Json schemas for our objects that we could just reference these and migrate",
    "start": "1979700",
    "end": "1986360"
  },
  {
    "text": "to x-ray history there's the the spec doesn't I'm not sure when the specs any",
    "start": "1986360",
    "end": "1992659"
  },
  {
    "text": "says anything about the extension I don't I'm not sure it does yeah thank you you're welcome there was a",
    "start": "1992659",
    "end": "1999799"
  },
  {
    "text": "question up here up up in front",
    "start": "1999799",
    "end": "2003120"
  },
  {
    "text": "thank you this is great I agree one question is the schema your mission about the headers of the event or also",
    "start": "2008980",
    "end": "2016600"
  },
  {
    "text": "playing to put the scheme on the payload to the event itself so those are the two sections the the schema Registries for",
    "start": "2016600",
    "end": "2023320"
  },
  {
    "text": "the payload for the payload data the message definitions are for the metadata of the message so these are effectively",
    "start": "2023320",
    "end": "2029620"
  },
  {
    "text": "we have we have if if you will the the the the the message definitions are a a",
    "start": "2029620",
    "end": "2036580"
  },
  {
    "text": "further set of of schemas if you will which are specific to the respective um transport that you use and they allow",
    "start": "2036580",
    "end": "2044140"
  },
  {
    "text": "you to go and constrain down only the metadata and then the the payload is always whatever you want because",
    "start": "2044140",
    "end": "2050919"
  },
  {
    "text": "messaging so General principle in messaging across all products is a",
    "start": "2050919",
    "end": "2057040"
  },
  {
    "text": "message is a binary blob with some metadata on it and so the binary blob is being",
    "start": "2057040",
    "end": "2062200"
  },
  {
    "text": "formatted by the schemas may they be protobuf maybe Avro metabase Json May to be XML whatever and we can store all",
    "start": "2062200",
    "end": "2069220"
  },
  {
    "text": "those schemas in the schema registry portion and then the metadata of the message that's defined in the message",
    "start": "2069220",
    "end": "2074858"
  },
  {
    "text": "definition section thank you",
    "start": "2074859",
    "end": "2079260"
  },
  {
    "text": "it's a question regarding the formats and the attributes the better attributes",
    "start": "2081060",
    "end": "2089260"
  },
  {
    "text": "schema I mean there's an intimate relationship between the metadata",
    "start": "2089260",
    "end": "2094419"
  },
  {
    "text": "attributes and the format do you have a plan for a",
    "start": "2094419",
    "end": "2100000"
  },
  {
    "text": "a format schema in order to use it for meditation and that's one question and",
    "start": "2100000",
    "end": "2106300"
  },
  {
    "text": "another question is",
    "start": "2106300",
    "end": "2110020"
  },
  {
    "text": "yeah this sometimes also an intimate relationship",
    "start": "2111339",
    "end": "2116980"
  },
  {
    "text": "between the channels and the the messages in terms of authentication and",
    "start": "2116980",
    "end": "2124180"
  },
  {
    "text": "and likewise and maybe a",
    "start": "2124180",
    "end": "2129220"
  },
  {
    "text": "format messages could Bridge those two",
    "start": "2129220",
    "end": "2134859"
  },
  {
    "text": "so the The Meta schema for mqtt mqp",
    "start": "2134859",
    "end": "2139960"
  },
  {
    "text": "cloud events um Kafka",
    "start": "2139960",
    "end": "2145560"
  },
  {
    "text": "and Nats I think and HTTP so those meta schemas exist basically as a set of",
    "start": "2145599",
    "end": "2153900"
  },
  {
    "text": "extensions to the core registry model so the the the there's a notion of a",
    "start": "2153900",
    "end": "2160599"
  },
  {
    "text": "message and then there's these formats that you see that you see here so this format",
    "start": "2160599",
    "end": "2165760"
  },
  {
    "text": "definition here and that format definition is backed by adjacent schema which basically defines",
    "start": "2165760",
    "end": "2172660"
  },
  {
    "text": "what's valid within this metadata section and we have those those sub schemas basically for this section we",
    "start": "2172660",
    "end": "2179140"
  },
  {
    "text": "have those for all those protocols so there's a fairly Rich one for mqp because that has a lot of metadata",
    "start": "2179140",
    "end": "2184240"
  },
  {
    "text": "sections um the one for for HTTP covers uh you know also the headers and the and the",
    "start": "2184240",
    "end": "2190540"
  },
  {
    "text": "query section etc etc so we have that for all all of those so there's you can",
    "start": "2190540",
    "end": "2195820"
  },
  {
    "text": "go and formally validate a message based on these definitions and and it's meant for that purpose right so that you that",
    "start": "2195820",
    "end": "2202060"
  },
  {
    "text": "you're able to go and validate messages even as they come as they come along whether they're conformed with that spec",
    "start": "2202060",
    "end": "2207820"
  },
  {
    "text": "so it's not just meant for for for for Gen for code generation but also for",
    "start": "2207820",
    "end": "2213460"
  },
  {
    "text": "um these for metadata validation um the other point we have gone so far close to the",
    "start": "2213460",
    "end": "2220599"
  },
  {
    "text": "endpoint definitions as we think we can authentication is",
    "start": "2220599",
    "end": "2225940"
  },
  {
    "text": "um so varied that many many projects have already sunk the ship on trying to get security",
    "start": "2225940",
    "end": "2233320"
  },
  {
    "text": "kind of you know the same across many many projects and we want to avoid this",
    "start": "2233320",
    "end": "2239560"
  },
  {
    "text": "so there are several um several of us in the project who have suffered through WS Security in web",
    "start": "2239560",
    "end": "2245980"
  },
  {
    "text": "services days and we would like to not not repeat that mistake of Reinventing",
    "start": "2245980",
    "end": "2251140"
  },
  {
    "text": "yet another metadata language for security so we're usually staying that far away from it so these code",
    "start": "2251140",
    "end": "2258099"
  },
  {
    "text": "generators here um what what I choose as a strategy there is I basically have an interface",
    "start": "2258099",
    "end": "2263920"
  },
  {
    "text": "which is the credentials interface and you can go and Define whatever the credentials are and then you pass it",
    "start": "2263920",
    "end": "2270160"
  },
  {
    "text": "down into the the transport implementation but the the uh the definition doesn't",
    "start": "2270160",
    "end": "2277660"
  },
  {
    "text": "need to get into the business of you know defining what the authentication story is because that is certainly for",
    "start": "2277660",
    "end": "2283599"
  },
  {
    "text": "now when we're starting up right this thing too hard yeah you make it delegated Wise Choice",
    "start": "2283599",
    "end": "2289420"
  },
  {
    "text": "we make a deliberate bytespace because we all know that that's a rattle that will sink the",
    "start": "2289420",
    "end": "2296859"
  },
  {
    "text": "ship and so therefore we stay out of it we know that there's that there's practical ways to go and deal with it",
    "start": "2296859",
    "end": "2302800"
  },
  {
    "text": "um and then eventually we can probably get to a solution where we can go and",
    "start": "2302800",
    "end": "2308140"
  },
  {
    "text": "Define this but this is not the time yet",
    "start": "2308140",
    "end": "2312480"
  },
  {
    "text": "you know thanks for the talk um it seems that this schema is so extensive that I can",
    "start": "2318700",
    "end": "2327280"
  },
  {
    "text": "describe files and file formats with that and should I do that with this in",
    "start": "2327280",
    "end": "2334119"
  },
  {
    "text": "case for example I have some private file format and different languages that",
    "start": "2334119",
    "end": "2339820"
  },
  {
    "text": "use the same file yeah so um I agree with you",
    "start": "2339820",
    "end": "2345280"
  },
  {
    "text": "um let's see well pick this so here's my here's my here's protobuf schema",
    "start": "2345280",
    "end": "2350800"
  },
  {
    "text": "registry piece you can you can use this you can use the registry format for schemas for instance",
    "start": "2350800",
    "end": "2357940"
  },
  {
    "text": "to kind of create a overlaid metadata file or metadata API for data Lake",
    "start": "2357940",
    "end": "2366220"
  },
  {
    "text": "where you are effectively you're registering all the schemas for your data Lake in that registry and then you",
    "start": "2366220",
    "end": "2374380"
  },
  {
    "text": "find some organizational way in the data Lake to kind of refer to that to that schema registry because there's always",
    "start": "2374380",
    "end": "2380920"
  },
  {
    "text": "the problem if you have a data Lake and you store schematize data like protobuf written into files there's a question",
    "start": "2380920",
    "end": "2387640"
  },
  {
    "text": "like where do I put the schemas right how do I manage that how do I manage the versions of schemas where do I keep them",
    "start": "2387640",
    "end": "2394480"
  },
  {
    "text": "all so this is also meant for just organizing serialization schemas that",
    "start": "2394480",
    "end": "2400119"
  },
  {
    "text": "then point to you know files in the data Lake Etc so this is all just very intentional",
    "start": "2400119",
    "end": "2405700"
  },
  {
    "text": "and this is also the role of a schema registry when you think about data streams you",
    "start": "2405700",
    "end": "2412000"
  },
  {
    "text": "know they start somewhere where the producer creates an event let's say that's Telemetry it runs through a",
    "start": "2412000",
    "end": "2417579"
  },
  {
    "text": "real-time pipe and then lands in a data Lake somewhere where it's being stored right the consumer on the other side to reads",
    "start": "2417579",
    "end": "2424180"
  },
  {
    "text": "the data from the data lake has no longer has no messaging business they don't need the message definitions but",
    "start": "2424180",
    "end": "2429339"
  },
  {
    "text": "they still need the schema so our notion is that the schema registry is the piece",
    "start": "2429339",
    "end": "2434380"
  },
  {
    "text": "that will be shared across all of those different uh interested parties which",
    "start": "2434380",
    "end": "2439540"
  },
  {
    "text": "want to get at that serialized data and it's more and more that you have parquet and Avro and protobuf and all those",
    "start": "2439540",
    "end": "2446859"
  },
  {
    "text": "different formats that this data in data Lakes is being held in",
    "start": "2446859",
    "end": "2452260"
  },
  {
    "text": "yeah I more thinking about mqtt it's not brought above it's binary uh as an as an",
    "start": "2452260",
    "end": "2461680"
  },
  {
    "text": "example sorry so mqtt is just a transport yeah uh as another example",
    "start": "2461680",
    "end": "2469720"
  },
  {
    "text": "for example like MP3 or Japan can I use that to describe it uh",
    "start": "2469720",
    "end": "2477338"
  },
  {
    "text": "well you can you if you want to use this to refer to and organize your files you",
    "start": "2477820",
    "end": "2483220"
  },
  {
    "text": "can probably also do this right but we have a we have a we're making things",
    "start": "2483220",
    "end": "2488320"
  },
  {
    "text": "simple by having a set of groups and contained in that are our resources so",
    "start": "2488320",
    "end": "2494140"
  },
  {
    "text": "we don't allow you to have endless deep paths yeah and your thoughts on that should I",
    "start": "2494140",
    "end": "2499780"
  },
  {
    "text": "do it uh should you do it you have to you have to set it yourself",
    "start": "2499780",
    "end": "2505230"
  },
  {
    "text": "[Laughter] maybe one less question then the rest",
    "start": "2505230",
    "end": "2511359"
  },
  {
    "text": "can do come to you in person this is okay that is okay yes great",
    "start": "2511359",
    "end": "2516960"
  },
  {
    "text": "how do you see this in relation to async API and open API over time because this seems to be able to potentially replace",
    "start": "2519280",
    "end": "2526660"
  },
  {
    "text": "those more or less um we we intentionally leave a gap",
    "start": "2526660",
    "end": "2534040"
  },
  {
    "text": "um in in what we are aiming to do here between between open API does and async",
    "start": "2534040",
    "end": "2540700"
  },
  {
    "text": "API does and what we do what we do here is we basically give we format messaging paths if you will",
    "start": "2540700",
    "end": "2548560"
  },
  {
    "text": "um with the core with that core set of specs plus obviously we have this Universal registry model which is kind",
    "start": "2548560",
    "end": "2555400"
  },
  {
    "text": "of uh um you know even that added value completely independent of all the",
    "start": "2555400",
    "end": "2561280"
  },
  {
    "text": "messaging aspects um what async API and a open API do is they they create effectively a",
    "start": "2561280",
    "end": "2567640"
  },
  {
    "text": "correlation contract async API says I send a message over here and then I'm going to go get the response back here",
    "start": "2567640",
    "end": "2574359"
  },
  {
    "text": "so it's it's something that is literally it's taking API very literally right there's always kind of a relationship",
    "start": "2574359",
    "end": "2580060"
  },
  {
    "text": "that's being built um we have um we ventured into that for a little",
    "start": "2580060",
    "end": "2585579"
  },
  {
    "text": "while as we were talking about the the the contract and then we decided to stay out of it at least for the time being",
    "start": "2585579",
    "end": "2592540"
  },
  {
    "text": "because um we think that contracts are actually far more complicated than this simple",
    "start": "2592540",
    "end": "2598359"
  },
  {
    "text": "request response story um and so we believe that that justifies",
    "start": "2598359",
    "end": "2603839"
  },
  {
    "text": "deeper thought a little later so we'll start with this so for instance",
    "start": "2603839",
    "end": "2609940"
  },
  {
    "text": "um if you have a scatter gather pattern pattern which means you send one message in and then you have nine parties which",
    "start": "2609940",
    "end": "2615579"
  },
  {
    "text": "are which are responding to you that's a legit contract you have one message that you're sending to someone and they're",
    "start": "2615579",
    "end": "2621940"
  },
  {
    "text": "answering to you with a hundred messages or a thousand messages that's a legit contract in asynchronous messaging",
    "start": "2621940",
    "end": "2627520"
  },
  {
    "text": "there's so many more variations of contracts than a request responds that",
    "start": "2627520",
    "end": "2633220"
  },
  {
    "text": "we think we need to have a contract definition language that does messaging justice but we're going to start with",
    "start": "2633220",
    "end": "2640180"
  },
  {
    "text": "this thing which where we can basically just go and label Channels with metadata",
    "start": "2640180",
    "end": "2645640"
  },
  {
    "text": "and then for a while you have to go and figure out what those contracts are and then we can probably go and figure out",
    "start": "2645640",
    "end": "2652359"
  },
  {
    "text": "as an extension a next layer of of contract language and maybe async API is the project that wants to go and pick",
    "start": "2652359",
    "end": "2658900"
  },
  {
    "text": "that up thank you",
    "start": "2658900",
    "end": "2663000"
  },
  {
    "text": "all right thank you",
    "start": "2664839",
    "end": "2668280"
  }
]