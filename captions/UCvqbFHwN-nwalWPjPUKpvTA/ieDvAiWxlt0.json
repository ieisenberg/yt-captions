[
  {
    "text": "hi very happy to be here",
    "start": "6020",
    "end": "8880"
  },
  {
    "text": "I'm Marie I'm founding engineer at",
    "start": "8880",
    "end": "11280"
  },
  {
    "text": "ground cover",
    "start": "11280",
    "end": "12599"
  },
  {
    "text": "I've been implementing observability",
    "start": "12599",
    "end": "14639"
  },
  {
    "text": "solutions for quite some time for many",
    "start": "14639",
    "end": "17279"
  },
  {
    "text": "different use cases",
    "start": "17279",
    "end": "19260"
  },
  {
    "text": "and I",
    "start": "19260",
    "end": "21180"
  },
  {
    "text": "I fell in love",
    "start": "21180",
    "end": "23039"
  },
  {
    "text": "with the magic that is also known as",
    "start": "23039",
    "end": "25859"
  },
  {
    "text": "ebpf",
    "start": "25859",
    "end": "28560"
  },
  {
    "text": "I wish to share with you today the most",
    "start": "28560",
    "end": "30420"
  },
  {
    "text": "important Insight that I've found",
    "start": "30420",
    "end": "32160"
  },
  {
    "text": "throughout my experiments that with ebpf",
    "start": "32160",
    "end": "35760"
  },
  {
    "text": "we can reach what I call full",
    "start": "35760",
    "end": "39059"
  },
  {
    "text": "observability",
    "start": "39059",
    "end": "41780"
  },
  {
    "text": "when I say full observability I'm",
    "start": "44640",
    "end": "46800"
  },
  {
    "text": "talking about our ability as developers",
    "start": "46800",
    "end": "50039"
  },
  {
    "text": "and devops to see everything that's",
    "start": "50039",
    "end": "52920"
  },
  {
    "text": "going on in our cluster this includes",
    "start": "52920",
    "end": "55680"
  },
  {
    "text": "all the interactions between our",
    "start": "55680",
    "end": "57300"
  },
  {
    "text": "services all the metadata that",
    "start": "57300",
    "end": "59460"
  },
  {
    "text": "accompanies them",
    "start": "59460",
    "end": "60899"
  },
  {
    "text": "various events such as program",
    "start": "60899",
    "end": "62640"
  },
  {
    "text": "exceptions and protocol errors and",
    "start": "62640",
    "end": "65100"
  },
  {
    "text": "determining exactly when all of this",
    "start": "65100",
    "end": "67860"
  },
  {
    "text": "occurred and which processes it belongs",
    "start": "67860",
    "end": "71460"
  },
  {
    "text": "so let's see how ebpf will revolutionize",
    "start": "71460",
    "end": "76080"
  },
  {
    "text": "the world of modern observability",
    "start": "76080",
    "end": "80720"
  },
  {
    "text": "the best way to understand that is with",
    "start": "81000",
    "end": "83340"
  },
  {
    "text": "examples",
    "start": "83340",
    "end": "84360"
  },
  {
    "text": "and this is where grpc comes into the",
    "start": "84360",
    "end": "86820"
  },
  {
    "text": "picture",
    "start": "86820",
    "end": "87720"
  },
  {
    "text": "grpc is quickly becoming the preferred",
    "start": "87720",
    "end": "90540"
  },
  {
    "text": "tool to connect microservices replacing",
    "start": "90540",
    "end": "93420"
  },
  {
    "text": "a lot of the modern uses of http",
    "start": "93420",
    "end": "97619"
  },
  {
    "text": "and it is also quite hard to observe and",
    "start": "97619",
    "end": "101400"
  },
  {
    "text": "this is exactly why it makes the best",
    "start": "101400",
    "end": "103799"
  },
  {
    "text": "example for our evolution",
    "start": "103799",
    "end": "107180"
  },
  {
    "text": "so let's Implement observability for",
    "start": "107400",
    "end": "110939"
  },
  {
    "text": "grpc",
    "start": "110939",
    "end": "113780"
  },
  {
    "text": "when monitoring something let's first",
    "start": "116399",
    "end": "118500"
  },
  {
    "text": "ask ourselves what do we really wish to",
    "start": "118500",
    "end": "121439"
  },
  {
    "text": "observe",
    "start": "121439",
    "end": "122939"
  },
  {
    "text": "let's take a simple example of a client",
    "start": "122939",
    "end": "125460"
  },
  {
    "text": "and a server communicating over grpc",
    "start": "125460",
    "end": "127860"
  },
  {
    "text": "where the client periodically every 10",
    "start": "127860",
    "end": "130619"
  },
  {
    "text": "seconds requests resource only from the",
    "start": "130619",
    "end": "133680"
  },
  {
    "text": "server",
    "start": "133680",
    "end": "135000"
  },
  {
    "text": "it's quite a common use case where the",
    "start": "135000",
    "end": "137700"
  },
  {
    "text": "client needs to know when the resource",
    "start": "137700",
    "end": "139560"
  },
  {
    "text": "is updated",
    "start": "139560",
    "end": "141300"
  },
  {
    "text": "and in that simple example we need to",
    "start": "141300",
    "end": "144540"
  },
  {
    "text": "see two two things the first is the grpc",
    "start": "144540",
    "end": "147599"
  },
  {
    "text": "data which is the most basic part of the",
    "start": "147599",
    "end": "149520"
  },
  {
    "text": "protocol",
    "start": "149520",
    "end": "151260"
  },
  {
    "text": "in our case it's the resource being",
    "start": "151260",
    "end": "153239"
  },
  {
    "text": "downloaded",
    "start": "153239",
    "end": "154500"
  },
  {
    "text": "we also need to see the headers",
    "start": "154500",
    "end": "156120"
  },
  {
    "text": "especially the path header which is the",
    "start": "156120",
    "end": "158760"
  },
  {
    "text": "resource name only",
    "start": "158760",
    "end": "161900"
  },
  {
    "text": "ebpf either magic as I said that allows",
    "start": "162480",
    "end": "166739"
  },
  {
    "text": "us to stop program execution at the",
    "start": "166739",
    "end": "169560"
  },
  {
    "text": "beginning and at the end of every",
    "start": "169560",
    "end": "171959"
  },
  {
    "text": "function we'd like inside the kernel",
    "start": "171959",
    "end": "174239"
  },
  {
    "text": "space or in the user space and there we",
    "start": "174239",
    "end": "177180"
  },
  {
    "text": "have access to the arguments to these",
    "start": "177180",
    "end": "179640"
  },
  {
    "text": "functions",
    "start": "179640",
    "end": "182060"
  },
  {
    "text": "for example we may attach kernel probes",
    "start": "182580",
    "end": "185819"
  },
  {
    "text": "to the send and receive system calls and",
    "start": "185819",
    "end": "189360"
  },
  {
    "text": "there we can see the arguments to these",
    "start": "189360",
    "end": "191040"
  },
  {
    "text": "functions which in this case is just all",
    "start": "191040",
    "end": "193680"
  },
  {
    "text": "the data coming in or out of the",
    "start": "193680",
    "end": "196319"
  },
  {
    "text": "container",
    "start": "196319",
    "end": "197580"
  },
  {
    "text": "and that is really powerful and it looks",
    "start": "197580",
    "end": "200159"
  },
  {
    "text": "kind of promising right the headers and",
    "start": "200159",
    "end": "201900"
  },
  {
    "text": "the data we seek have to be there",
    "start": "201900",
    "end": "206000"
  },
  {
    "text": "well if we were trying to observe the",
    "start": "206760",
    "end": "209519"
  },
  {
    "text": "HTTP protocol this would have worked",
    "start": "209519",
    "end": "212040"
  },
  {
    "text": "phenomenally we would we would have seen",
    "start": "212040",
    "end": "214560"
  },
  {
    "text": "everything we would like to in just",
    "start": "214560",
    "end": "217620"
  },
  {
    "text": "using K probes but grpc makes things",
    "start": "217620",
    "end": "221280"
  },
  {
    "text": "harder",
    "start": "221280",
    "end": "222420"
  },
  {
    "text": "let's understand why",
    "start": "222420",
    "end": "225620"
  },
  {
    "text": "grpc headers like HTTP headers usually",
    "start": "227459",
    "end": "230819"
  },
  {
    "text": "repeat themselves in our example they",
    "start": "230819",
    "end": "233340"
  },
  {
    "text": "repeat themselves every 10 seconds",
    "start": "233340",
    "end": "236580"
  },
  {
    "text": "so to minimize the total amount of data",
    "start": "236580",
    "end": "239280"
  },
  {
    "text": "sent over the connection",
    "start": "239280",
    "end": "241019"
  },
  {
    "text": "grpc uses a header compression mechanism",
    "start": "241019",
    "end": "243540"
  },
  {
    "text": "called hpac",
    "start": "243540",
    "end": "246120"
  },
  {
    "text": "it's it works just as if the client in",
    "start": "246120",
    "end": "249840"
  },
  {
    "text": "the first request",
    "start": "249840",
    "end": "252060"
  },
  {
    "text": "says to the server fetch resource only",
    "start": "252060",
    "end": "254760"
  },
  {
    "text": "for me and from now on I will call",
    "start": "254760",
    "end": "257579"
  },
  {
    "text": "resource only resource 7 and from that",
    "start": "257579",
    "end": "260639"
  },
  {
    "text": "moment onwards the resource name is not",
    "start": "260639",
    "end": "263699"
  },
  {
    "text": "transmitted anymore only the ID that",
    "start": "263699",
    "end": "265979"
  },
  {
    "text": "represents it",
    "start": "265979",
    "end": "267780"
  },
  {
    "text": "and what's the problem with this for us",
    "start": "267780",
    "end": "270479"
  },
  {
    "text": "well grpc connections like the one we",
    "start": "270479",
    "end": "273479"
  },
  {
    "text": "are talking about can live for a very",
    "start": "273479",
    "end": "275580"
  },
  {
    "text": "long time these requests every 10",
    "start": "275580",
    "end": "278340"
  },
  {
    "text": "seconds",
    "start": "278340",
    "end": "279479"
  },
  {
    "text": "can go on forever",
    "start": "279479",
    "end": "281460"
  },
  {
    "text": "and this means that we are most likely",
    "start": "281460",
    "end": "283860"
  },
  {
    "text": "going to start observing the connection",
    "start": "283860",
    "end": "286620"
  },
  {
    "text": "when it's already alive",
    "start": "286620",
    "end": "289139"
  },
  {
    "text": "and in that point the resource name",
    "start": "289139",
    "end": "291180"
  },
  {
    "text": "alongside other headers is not",
    "start": "291180",
    "end": "293520"
  },
  {
    "text": "transmitted anymore",
    "start": "293520",
    "end": "296300"
  },
  {
    "text": "to fully observe we need to know the",
    "start": "296699",
    "end": "298740"
  },
  {
    "text": "resource name",
    "start": "298740",
    "end": "299880"
  },
  {
    "text": "and it would also be nice if we could",
    "start": "299880",
    "end": "302460"
  },
  {
    "text": "not harm the connection in any way we",
    "start": "302460",
    "end": "305040"
  },
  {
    "text": "would like to probe it with zero",
    "start": "305040",
    "end": "306960"
  },
  {
    "text": "downtime",
    "start": "306960",
    "end": "308759"
  },
  {
    "text": "so what can we do",
    "start": "308759",
    "end": "311699"
  },
  {
    "text": "oh abpf also introduces new probes user",
    "start": "311699",
    "end": "315780"
  },
  {
    "text": "mode probes which can be attached to",
    "start": "315780",
    "end": "317759"
  },
  {
    "text": "user mode functions including Library",
    "start": "317759",
    "end": "320280"
  },
  {
    "text": "functions",
    "start": "320280",
    "end": "322680"
  },
  {
    "text": "your probes can be used to get data",
    "start": "322680",
    "end": "325620"
  },
  {
    "text": "directly from the grpc libraries memory",
    "start": "325620",
    "end": "330180"
  },
  {
    "text": "the library",
    "start": "330180",
    "end": "332340"
  },
  {
    "text": "obviously knows that the resource ID 7",
    "start": "332340",
    "end": "336479"
  },
  {
    "text": "represents resource only otherwise it",
    "start": "336479",
    "end": "339780"
  },
  {
    "text": "just wouldn't have worked the server if",
    "start": "339780",
    "end": "342000"
  },
  {
    "text": "it didn't know what 7 was would not know",
    "start": "342000",
    "end": "344220"
  },
  {
    "text": "what to respond to a request for",
    "start": "344220",
    "end": "346139"
  },
  {
    "text": "Resource number seven",
    "start": "346139",
    "end": "347639"
  },
  {
    "text": "so using new probes we can get this data",
    "start": "347639",
    "end": "351600"
  },
  {
    "text": "from the memory of the library",
    "start": "351600",
    "end": "355340"
  },
  {
    "text": "if there was a grpc receive function",
    "start": "355800",
    "end": "358320"
  },
  {
    "text": "inside the library that receives both",
    "start": "358320",
    "end": "361740"
  },
  {
    "text": "the headers and the data as arguments we",
    "start": "361740",
    "end": "364740"
  },
  {
    "text": "would probe it and see all the incoming",
    "start": "364740",
    "end": "366660"
  },
  {
    "text": "information we would like we would only",
    "start": "366660",
    "end": "368520"
  },
  {
    "text": "need two probes one for this function",
    "start": "368520",
    "end": "370320"
  },
  {
    "text": "and one for the complementary grpc send",
    "start": "370320",
    "end": "372780"
  },
  {
    "text": "function",
    "start": "372780",
    "end": "373800"
  },
  {
    "text": "and we would be done",
    "start": "373800",
    "end": "376819"
  },
  {
    "text": "when you think about it the same concept",
    "start": "377160",
    "end": "379020"
  },
  {
    "text": "works for all types of stateful",
    "start": "379020",
    "end": "380699"
  },
  {
    "text": "connections including encrypted traffic",
    "start": "380699",
    "end": "383419"
  },
  {
    "text": "the encryption Library leave us a cell",
    "start": "383419",
    "end": "386580"
  },
  {
    "text": "for instance",
    "start": "386580",
    "end": "388139"
  },
  {
    "text": "obviously knows what the unencrypted",
    "start": "388139",
    "end": "390300"
  },
  {
    "text": "data is after all the library is used to",
    "start": "390300",
    "end": "393360"
  },
  {
    "text": "translate encrypted to unencrypted data",
    "start": "393360",
    "end": "395759"
  },
  {
    "text": "so you probing inside",
    "start": "395759",
    "end": "398759"
  },
  {
    "text": "the library the encryption Library will",
    "start": "398759",
    "end": "401759"
  },
  {
    "text": "provide full observability into",
    "start": "401759",
    "end": "404520"
  },
  {
    "text": "encrypted traffic",
    "start": "404520",
    "end": "407840"
  },
  {
    "text": "ebpf allows us to see information from",
    "start": "410160",
    "end": "413940"
  },
  {
    "text": "the library that the library developers",
    "start": "413940",
    "end": "416460"
  },
  {
    "text": "did not make visible to us",
    "start": "416460",
    "end": "419220"
  },
  {
    "text": "because ebpf is pure Magic",
    "start": "419220",
    "end": "422759"
  },
  {
    "text": "monitoring with you probes can sometimes",
    "start": "422759",
    "end": "426180"
  },
  {
    "text": "be a long and hard process",
    "start": "426180",
    "end": "428639"
  },
  {
    "text": "we don't have time to see all this",
    "start": "428639",
    "end": "431520"
  },
  {
    "text": "process right now",
    "start": "431520",
    "end": "433080"
  },
  {
    "text": "but the gist of it is shown in the image",
    "start": "433080",
    "end": "437460"
  },
  {
    "text": "you have to map the flows inside the",
    "start": "437460",
    "end": "440400"
  },
  {
    "text": "Library the data receiving and data",
    "start": "440400",
    "end": "442860"
  },
  {
    "text": "sending sequences inside the library and",
    "start": "442860",
    "end": "445680"
  },
  {
    "text": "find functions that receive the",
    "start": "445680",
    "end": "447780"
  },
  {
    "text": "information you seek as arguments and",
    "start": "447780",
    "end": "450960"
  },
  {
    "text": "then you you problem",
    "start": "450960",
    "end": "453979"
  },
  {
    "text": "in our case",
    "start": "463380",
    "end": "465180"
  },
  {
    "text": "five view probes are what we needed",
    "start": "465180",
    "end": "467580"
  },
  {
    "text": "one to see outgoing data three more to",
    "start": "467580",
    "end": "470759"
  },
  {
    "text": "see the incoming data and the last one",
    "start": "470759",
    "end": "472800"
  },
  {
    "text": "to know when a grpc connection has been",
    "start": "472800",
    "end": "475500"
  },
  {
    "text": "closed",
    "start": "475500",
    "end": "476819"
  },
  {
    "text": "and everything works and this is really",
    "start": "476819",
    "end": "479340"
  },
  {
    "text": "exciting seeing all that work put to",
    "start": "479340",
    "end": "481800"
  },
  {
    "text": "action so please join me and let's let's",
    "start": "481800",
    "end": "484199"
  },
  {
    "text": "watch now how you probes are used to",
    "start": "484199",
    "end": "487080"
  },
  {
    "text": "fully observe grpc connections",
    "start": "487080",
    "end": "491900"
  },
  {
    "text": "in this demonstration is in the bottom",
    "start": "492599",
    "end": "494699"
  },
  {
    "text": "right you can see the ebpf code",
    "start": "494699",
    "end": "497460"
  },
  {
    "text": "in the top right is the grpc server now",
    "start": "497460",
    "end": "500099"
  },
  {
    "text": "starting",
    "start": "500099",
    "end": "501539"
  },
  {
    "text": "and the first thing that's going to",
    "start": "501539",
    "end": "503220"
  },
  {
    "text": "happen is the ebpf code attaches five",
    "start": "503220",
    "end": "506220"
  },
  {
    "text": "probes to the server",
    "start": "506220",
    "end": "508979"
  },
  {
    "text": "the client at the left will then start",
    "start": "508979",
    "end": "511020"
  },
  {
    "text": "periodically requesting resources from",
    "start": "511020",
    "end": "513300"
  },
  {
    "text": "the server and printing all the",
    "start": "513300",
    "end": "515520"
  },
  {
    "text": "information",
    "start": "515520",
    "end": "517140"
  },
  {
    "text": "in the connection",
    "start": "517140",
    "end": "519779"
  },
  {
    "text": "as you can see with zero code changes to",
    "start": "519779",
    "end": "523020"
  },
  {
    "text": "the server or to the client the ebpf",
    "start": "523020",
    "end": "525540"
  },
  {
    "text": "code has complete access and full",
    "start": "525540",
    "end": "528300"
  },
  {
    "text": "observability into grpc connections",
    "start": "528300",
    "end": "534140"
  },
  {
    "text": "evpf allows us to monitor everything in",
    "start": "538820",
    "end": "543300"
  },
  {
    "text": "our cluster",
    "start": "543300",
    "end": "544440"
  },
  {
    "text": "and this is the real magic that will",
    "start": "544440",
    "end": "547920"
  },
  {
    "text": "stand behind this revolution",
    "start": "547920",
    "end": "552139"
  },
  {
    "text": "the work you heard of here depicts the",
    "start": "557760",
    "end": "560160"
  },
  {
    "text": "first steps of this revolution that will",
    "start": "560160",
    "end": "563399"
  },
  {
    "text": "result in full and effortless on demand",
    "start": "563399",
    "end": "567480"
  },
  {
    "text": "observability",
    "start": "567480",
    "end": "569399"
  },
  {
    "text": "I invite you to stay tuned in the coming",
    "start": "569399",
    "end": "572459"
  },
  {
    "text": "years and see how it all turns out",
    "start": "572459",
    "end": "575339"
  },
  {
    "text": "or even join me and be a part of these",
    "start": "575339",
    "end": "577800"
  },
  {
    "text": "two",
    "start": "577800",
    "end": "579839"
  },
  {
    "text": "if you want to hear more or even to",
    "start": "579839",
    "end": "582300"
  },
  {
    "text": "contribute in some way I invite you",
    "start": "582300",
    "end": "585120"
  },
  {
    "text": "please message me I would love to see",
    "start": "585120",
    "end": "587640"
  },
  {
    "text": "you here the rest of the week and to be",
    "start": "587640",
    "end": "589920"
  },
  {
    "text": "of assistance",
    "start": "589920",
    "end": "592579"
  },
  {
    "text": "so thank you very much for having me",
    "start": "592980",
    "end": "595560"
  },
  {
    "text": "today if you have any questions then",
    "start": "595560",
    "end": "598080"
  },
  {
    "text": "catch me now or later or message me",
    "start": "598080",
    "end": "601680"
  },
  {
    "text": "thank you",
    "start": "601680",
    "end": "603160"
  },
  {
    "text": "[Applause]",
    "start": "603160",
    "end": "609279"
  }
]