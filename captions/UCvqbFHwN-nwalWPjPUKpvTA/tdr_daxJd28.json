[
  {
    "text": "so thank you all for so much for coming uh today we're going to be talking about multi-tier Security in wasm cloud from",
    "start": "40",
    "end": "5839"
  },
  {
    "text": "developer constraints to P platform extensibility so my name is Brooks Townsen I'm a senior software engineer",
    "start": "5839",
    "end": "12160"
  },
  {
    "text": "at cosonic and I've been a maintainer of the wasm cloud project since it started",
    "start": "12160",
    "end": "17240"
  },
  {
    "text": "in late 2019 it's been in the cncf since 2021 uh and just recently we hit",
    "start": "17240",
    "end": "23680"
  },
  {
    "text": "incubating which was a huge milestone for for us as a project I'm a rust station I'm a demo enthusiast you can",
    "start": "23680",
    "end": "30199"
  },
  {
    "text": "see me up there probably wearing the same t-shirt that I'm wearing right now preparing to do more demos so very",
    "start": "30199",
    "end": "36239"
  },
  {
    "text": "excited about that and uh I'm a developer and the reason why I call that out explicitly is because when I started",
    "start": "36239",
    "end": "43680"
  },
  {
    "text": "my career I was working at Capital One and I was actually provisioning kubernetes clusters for like our",
    "start": "43680",
    "end": "49520"
  },
  {
    "text": "internal developer platform so I've gone everywhere from like running QB ADM on",
    "start": "49520",
    "end": "55239"
  },
  {
    "text": "an ec2 instance to writing the code that runs on that kubernetes instance and so",
    "start": "55239",
    "end": "60519"
  },
  {
    "text": "I hope that that kind of gives some context between what I'm talking about when I talk about platform engineers and",
    "start": "60519",
    "end": "66159"
  },
  {
    "text": "developers CU I've kind of been on both sides of that fence so what we're going to go through in the talk today we're",
    "start": "66159",
    "end": "72080"
  },
  {
    "text": "going to talk about open source security for platforms the problem that we have uh I'm going to go through a little",
    "start": "72080",
    "end": "77640"
  },
  {
    "text": "introduction on wasm cloud a show of hands how many of you have heard of the wasm cloud",
    "start": "77640",
    "end": "83960"
  },
  {
    "text": "project all right well that's like uh you know good bit of the room it's nice",
    "start": "83960",
    "end": "89000"
  },
  {
    "text": "uh how many of you have heard of web assembly before okay so even more great so we got",
    "start": "89000",
    "end": "95040"
  },
  {
    "text": "a great audience for this we're going to go through that introduction it's not going to take too long and then we're just going to jump into rapid fire demos",
    "start": "95040",
    "end": "101960"
  },
  {
    "text": "back and forth with uh talking about wasm Cloud's multi-tier security model",
    "start": "101960",
    "end": "107119"
  },
  {
    "text": "and then the Innovation that we had earlier this year in the wasm cloud secrets and the extensibility there so",
    "start": "107119",
    "end": "112640"
  },
  {
    "text": "you'll see everything happening uh it should be should be a lot of fun so let's start out with the fun quote 74%",
    "start": "112640",
    "end": "119119"
  },
  {
    "text": "of code-based uh this was a a study in 2024 contained highrisk open source vulnerabilities not",
    "start": "119119",
    "end": "126880"
  },
  {
    "text": "like a vulnerability like that would be bad high-risk open- Source",
    "start": "126880",
    "end": "132319"
  },
  {
    "text": "vulnerabilities and this really puts a high burden on the developers deploying",
    "start": "132319",
    "end": "137480"
  },
  {
    "text": "applications whether it's on their own or internal uh to a big Enterprise to keep their code up to date it the the",
    "start": "137480",
    "end": "145760"
  },
  {
    "text": "idea of coming from open- Source vulnerabilities means that these are libraries you're importing in order for",
    "start": "145760",
    "end": "150800"
  },
  {
    "text": "your application to work but it's not actually your code so these high-risk vulnerabilities are happening as a part",
    "start": "150800",
    "end": "157599"
  },
  {
    "text": "of uh or you're taking on the burden of maintaining these vulnerabilities as a part of your",
    "start": "157599",
    "end": "163480"
  },
  {
    "text": "application and this is largely because the platform engineering model today has a problem when developers build their",
    "start": "163480",
    "end": "170519"
  },
  {
    "text": "applications they tightly couple their application code their business logic their functional logic or their features",
    "start": "170519",
    "end": "177640"
  },
  {
    "text": "with open source libraries and vulnerable boilerplate usually actually prescribed by their Enterprise to",
    "start": "177640",
    "end": "184120"
  },
  {
    "text": "actually start their project or this like golden list of libraries that is like cool to use from open source",
    "start": "184120",
    "end": "190480"
  },
  {
    "text": "Enterprises then integrate their applications into their uh internal developer platform you know this is just",
    "start": "190480",
    "end": "196200"
  },
  {
    "text": "the way that they do it this is the way that we are deploying apps and then platform Engineers have to operate those",
    "start": "196200",
    "end": "201879"
  },
  {
    "text": "on a variety of control planes and this is exactly why we",
    "start": "201879",
    "end": "207440"
  },
  {
    "text": "started the wasm cloud project out of capital one 5 years ago what we saw is that across the organization we have a",
    "start": "207440",
    "end": "215000"
  },
  {
    "text": "huge developer experience Gap where every application team for each of their applications was not only writing their",
    "start": "215000",
    "end": "221680"
  },
  {
    "text": "functional code they were also bringing in their dependencies application capabilities and the operation or the",
    "start": "221680",
    "end": "228000"
  },
  {
    "text": "information about how their app needs to run at runtime building it that into a",
    "start": "228000",
    "end": "233120"
  },
  {
    "text": "container and then shipping the whole thing and this of course creates a huge problem when it comes to updating uh you",
    "start": "233120",
    "end": "239239"
  },
  {
    "text": "have to maintain that application and development teams are unhappy and spending a ton of their time on just",
    "start": "239239",
    "end": "244280"
  },
  {
    "text": "making their app like continue to function so the idea was when we were looking at building WM cloud is fixing",
    "start": "244280",
    "end": "251239"
  },
  {
    "text": "that problem by making sure that the application is just the app code sounds",
    "start": "251239",
    "end": "257680"
  },
  {
    "text": "crazy but it just might work we look to abstract the M dependencies the",
    "start": "257680",
    "end": "263800"
  },
  {
    "text": "capabilities that make an application actually work at runtime and the runtime information as a part of the plat",
    "start": "263800",
    "end": "269720"
  },
  {
    "text": "platform and what that allows uh companies and and developers to do is the platform Engineers can maintain the",
    "start": "269720",
    "end": "276240"
  },
  {
    "text": "platform and the developers can maintain their application code they can rebuild and redeploy it if they want to make a",
    "start": "276240",
    "end": "281720"
  },
  {
    "text": "change to their own feature or add something or maybe they wrote it wrong and they broke it but they don't have to do that for their",
    "start": "281720",
    "end": "288880"
  },
  {
    "text": "dependencies and over the last three years as a cncf project even over the",
    "start": "288880",
    "end": "294000"
  },
  {
    "text": "last 6 months wasm cloud has changed a ton so from that initial goal coming out of capital 1",
    "start": "294000",
    "end": "300400"
  },
  {
    "text": "uh we chose web assembly as our unit of compute for the application and that is",
    "start": "300400",
    "end": "305560"
  },
  {
    "text": "because its unique status uh as unique features as a deny by default platform",
    "start": "305560",
    "end": "310840"
  },
  {
    "text": "agnostic binary so we figured if we're already pulling the dependencies out might as well not worry about shipping",
    "start": "310840",
    "end": "316840"
  },
  {
    "text": "the entire container too and wasm cloud has unique benefits when it comes to",
    "start": "316840",
    "end": "322240"
  },
  {
    "text": "being a web assembly native platform uh developers write business logic in a source language like go rust or typ",
    "start": "322240",
    "end": "329759"
  },
  {
    "text": "script using a set of common apis like database connectors HTTP distributed logging this is all provisioned for the",
    "start": "329759",
    "end": "336280"
  },
  {
    "text": "developer as a part of the platform and what this enables is you shipping this little uh reusable building block of",
    "start": "336280",
    "end": "343280"
  },
  {
    "text": "code and that single binary is what you deploy to production once you have",
    "start": "343280",
    "end": "348400"
  },
  {
    "text": "finished building your application you can actually compose them together with other reusable building blocks uh that",
    "start": "348400",
    "end": "354479"
  },
  {
    "text": "we call capabilities and this interfac driven development model allows you to write your code into in terms of a",
    "start": "354479",
    "end": "360120"
  },
  {
    "text": "common abstraction like key value and then at runtime you can swap that implementation whether it's locally you",
    "start": "360120",
    "end": "366400"
  },
  {
    "text": "know just using inmemory you know deploying to reddis when you're in production and this capability driven",
    "start": "366400",
    "end": "372120"
  },
  {
    "text": "model not only uh provides those to your web assembly applications but it also is",
    "start": "372120",
    "end": "378080"
  },
  {
    "text": "a part of the web assembly sandbox so you can deny uh the access to those capabilities at run time now wasm Cloud",
    "start": "378080",
    "end": "386000"
  },
  {
    "text": "just like container uh platforms need container native tools like like kubernetes like an orchestrator or a",
    "start": "386000",
    "end": "391680"
  },
  {
    "text": "scheduler or a higher level cloud platform to actually run and scale efficiently web assembly is no different",
    "start": "391680",
    "end": "398199"
  },
  {
    "text": "so with wasm Cloud what we truly focus on is scaling web assembly components across a variety of infrastructure it's",
    "start": "398199",
    "end": "405080"
  },
  {
    "text": "just a binary so you can run it on any Cloud any Edge even like on Prem or on",
    "start": "405080",
    "end": "410360"
  },
  {
    "text": "your laptop and the key piece that we do there is the distributed RPC between",
    "start": "410360",
    "end": "416000"
  },
  {
    "text": "your applications and we use the cncf project gats to get that done so I don't know if you all have heard of nats but",
    "start": "416000",
    "end": "422000"
  },
  {
    "text": "it creates this nice flatten topology Network so your applications can talk to each other no matter where they're running now wasm cloud of course has a",
    "start": "422000",
    "end": "429280"
  },
  {
    "text": "variety of features but it speaks a little bit better for you to just look at what it looks like to build and",
    "start": "429280",
    "end": "435000"
  },
  {
    "text": "Target web assembly and because it it truly I know it sounds like there's a whole lot going on but really the",
    "start": "435000",
    "end": "441319"
  },
  {
    "text": "difference between containerizing an application and componentized an application is just the output uh unit",
    "start": "441319",
    "end": "448520"
  },
  {
    "text": "of compute you start with go code if you were containerizing a go application and",
    "start": "448520",
    "end": "453680"
  },
  {
    "text": "this the process is the same for each language you would you know run a Docker build uh that just runs a go build and",
    "start": "453680",
    "end": "460039"
  },
  {
    "text": "you have a go binary inside of your go container and then that's what you ship on you know in into production",
    "start": "460039",
    "end": "466120"
  },
  {
    "text": "componentized an application you actually use the same compiler tool chain in this case we actually use tinyo",
    "start": "466120",
    "end": "472560"
  },
  {
    "text": "and I'll talk a lot a little bit about that but you compile your go code to a go web assembly component so it's like",
    "start": "472560",
    "end": "479599"
  },
  {
    "text": "your gooses and your gorches you just change it to be the web assembly Target some of you get that so uh let me",
    "start": "479599",
    "end": "487919"
  },
  {
    "text": "go ahead and show you what this looks like we'll go over to my uh code window",
    "start": "487919",
    "end": "493360"
  },
  {
    "text": "and what I actually hey get out of here what I actually have is a little go Application it's it's just like kind of",
    "start": "493360",
    "end": "498960"
  },
  {
    "text": "a simple HTTP microservice so I've got a couple of uh couple of URLs a couple of",
    "start": "498960",
    "end": "505520"
  },
  {
    "text": "uis that I'm handling here if I go to slash I just get this HTML page you know if I take a look at some of the code",
    "start": "505520",
    "end": "511680"
  },
  {
    "text": "here we're using like the net HTTP library from the go standard library to just get some information about the user",
    "start": "511680",
    "end": "518279"
  },
  {
    "text": "agent and and then display like an HTML page pretty regular pretty dumb uh go",
    "start": "518279",
    "end": "523360"
  },
  {
    "text": "microservice so if I do make run what this actually does is runs a little",
    "start": "523360",
    "end": "528920"
  },
  {
    "text": "Docker build and then inside of that Docker container we're running a go build and then we start it listening and",
    "start": "528920",
    "end": "534920"
  },
  {
    "text": "exposing that Local Host 880 Port right everybody's kind of done this if you built a container",
    "start": "534920",
    "end": "540560"
  },
  {
    "text": "application so I'll go to local 880 here's my little go server great this is when I made the request",
    "start": "540560",
    "end": "548800"
  },
  {
    "text": "woohoo no no claps no claps for the thank you thank you thank you so much",
    "start": "549120",
    "end": "554360"
  },
  {
    "text": "all right very much appreciate that you know we can go to SL hello and we'll see this little tiny message in the top you",
    "start": "554360",
    "end": "559760"
  },
  {
    "text": "know hello from go who not that and uh this is my little server so right I built a containerized application and go",
    "start": "559760",
    "end": "566760"
  },
  {
    "text": "let's do it in web assembly so I'm going to actually do make run wasum and what this does is this builds the web",
    "start": "566760",
    "end": "573200"
  },
  {
    "text": "assembly component we target the wy2 compile Target and then I have some information about what my web assembly",
    "start": "573200",
    "end": "580440"
  },
  {
    "text": "component is going to do at runtime with the interfaces which we'll talk a little bit more about we just output that build",
    "start": "580440",
    "end": "586440"
  },
  {
    "text": "to the web assembly binary and then I serve on Local Host 880 you can think of",
    "start": "586440",
    "end": "591920"
  },
  {
    "text": "web assembly kind of like a tiny virtual machine so your component is the guest",
    "start": "591920",
    "end": "597519"
  },
  {
    "text": "and the runtime that we're using is actually a a standard runtime that comes uh out of the bike code Alliance but all",
    "start": "597519",
    "end": "604720"
  },
  {
    "text": "you really need to know you know I'll hit a a refresh here I can see my same go server I can go to SL hello see hello",
    "start": "604720",
    "end": "611399"
  },
  {
    "text": "from go that's it that's that's the difference when you're building to web assembly and of course there's a couple caveats there um but you're building to",
    "start": "611399",
    "end": "618640"
  },
  {
    "text": "a component and the caveats actually mean for a very strong security model so",
    "start": "618640",
    "end": "624720"
  },
  {
    "text": "the difference between this native go binary and the web assembly component first of all all gets realized in size",
    "start": "624720",
    "end": "630800"
  },
  {
    "text": "my little hgdp microservice here is like 2 megabytes okay 2.9 fine 3 megabytes",
    "start": "630800",
    "end": "636800"
  },
  {
    "text": "very small additionally we can inspect this web assembly",
    "start": "636800",
    "end": "643000"
  },
  {
    "text": "binary no you don't have to do that all right we can inspect this web assembly binary and what we actually see is",
    "start": "643000",
    "end": "650920"
  },
  {
    "text": "everything oh it's not actually okay okay okay we can inspect this binary and we can actually see everything that this",
    "start": "650920",
    "end": "656720"
  },
  {
    "text": "component is going to do at runtime and and this is all possible because of the",
    "start": "656720",
    "end": "661800"
  },
  {
    "text": "web assembly component model so when you look at this you can see A fine grain list of capabilities of everything that",
    "start": "661800",
    "end": "667680"
  },
  {
    "text": "this app might do uh when you run it so you can see that I may make use of input",
    "start": "667680",
    "end": "673000"
  },
  {
    "text": "like reading input from standard in outputting the standard error I may make outgoing HTTP requests I may handle",
    "start": "673000",
    "end": "679360"
  },
  {
    "text": "incoming HTTP requests and really what you need to pay attention here is that this Deni by",
    "start": "679360",
    "end": "686200"
  },
  {
    "text": "default sandbox is capability driven model this is incred L powerful you can't do this with a container or even a",
    "start": "686200",
    "end": "693399"
  },
  {
    "text": "binary you can't ask it for everything that it's going to do at runtime by just looking at the artifact and we'll keep",
    "start": "693399",
    "end": "699600"
  },
  {
    "text": "coming back to this through the presentation but as a uh as a as a general conclusion that is what you need",
    "start": "699600",
    "end": "705839"
  },
  {
    "text": "to keep in mind as we go through talking about the different layers of security with web assembly so I do want to talk a",
    "start": "705839",
    "end": "712200"
  },
  {
    "text": "little bit about uh one difference when we ran this component versus running the go uh Docker container when I send my",
    "start": "712200",
    "end": "719800"
  },
  {
    "text": "Local Host HTTP request that when I'm running in Docker just goes and hits the port directly my go microservice is",
    "start": "719800",
    "end": "726079"
  },
  {
    "text": "listening directly on that port with web assembly it actually doesn't have the",
    "start": "726079",
    "end": "731120"
  },
  {
    "text": "ability to open up a local address to listen for HTTP requests on when I run it using a web assembly runtime that is",
    "start": "731120",
    "end": "738360"
  },
  {
    "text": "the entity that spins up a local you know TCP address and then it will call",
    "start": "738360",
    "end": "743399"
  },
  {
    "text": "the function Handler for the HTTP uh on the HTTP component so big here is just",
    "start": "743399",
    "end": "750240"
  },
  {
    "text": "that the component itself is not setting up that resource uh so we can deny that if we",
    "start": "750240",
    "end": "755760"
  },
  {
    "text": "like so taking that away web assembly is just a compile Target web assembly can",
    "start": "755760",
    "end": "761880"
  },
  {
    "text": "be interpreted for runtime Behavior at build time which incredibly powerful for a security model and these capability",
    "start": "761880",
    "end": "768639"
  },
  {
    "text": "driven permissions are run in a deny by default sandbox uh execution",
    "start": "768639",
    "end": "774279"
  },
  {
    "text": "environment now this sandbox is something that we work to that we we have compl complete extensibility within",
    "start": "774279",
    "end": "780560"
  },
  {
    "text": "the wasm cloud platform for if we take a look at a list of what a component may",
    "start": "780560",
    "end": "785600"
  },
  {
    "text": "do at runtime we have an interface something like wasm Cloud postgress query and of course this is a an",
    "start": "785600",
    "end": "791480"
  },
  {
    "text": "interface that we Implement for wasm cloud but it's actually Satisfied by a plugin a host plugin that we run uh at",
    "start": "791480",
    "end": "798440"
  },
  {
    "text": "runtime so this custom capability model it do it isn't just like this fine grain list of system interfaces you can",
    "start": "798440",
    "end": "805160"
  },
  {
    "text": "provide your own implementation as well and most of these are actually Satisfied by the runtime itself uh you don't have",
    "start": "805160",
    "end": "811480"
  },
  {
    "text": "to worry about like setting up standard in standard out all those things okay so now that you understand",
    "start": "811480",
    "end": "817440"
  },
  {
    "text": "web assembly is a compile Target and that we can inspect it for what it's going to do at runtime let's see what we",
    "start": "817440",
    "end": "823639"
  },
  {
    "text": "can do with this capability driven model so I'll go back and instead of actually",
    "start": "823639",
    "end": "829639"
  },
  {
    "text": "running this in Docker or running this as a runtime I think I stopped everything I'm going to actually run our",
    "start": "829639",
    "end": "835000"
  },
  {
    "text": "wash Dev tool so wash is the wasm cloud shell uh we love our puns here what this",
    "start": "835000",
    "end": "840839"
  },
  {
    "text": "is actually going to do is build my component and then do that same inspect step to see what it's going to do at",
    "start": "840839",
    "end": "846240"
  },
  {
    "text": "runtime and we'll actually provision a local platform so that this application can can work and have its interfaces",
    "start": "846240",
    "end": "853279"
  },
  {
    "text": "satisfied so I'll go to Local Host 8000 this time uh and as soon as it's fully",
    "start": "853279",
    "end": "859880"
  },
  {
    "text": "provisioned we'll actually be able to see uh that application uh in in the",
    "start": "859880",
    "end": "865120"
  },
  {
    "text": "browser so we'll just give it a second but what I wanted to do is essentially go and uh update one of my methods so",
    "start": "865120",
    "end": "872680"
  },
  {
    "text": "this hello method that we've provisioned oh come on all right uh give me one",
    "start": "872680",
    "end": "878360"
  },
  {
    "text": "second we'll start this one over gotta love the the demo right at the end of the day what we're going to do is we're",
    "start": "878360",
    "end": "884519"
  },
  {
    "text": "going to update this hello Handler so instead of I bet I know what it",
    "start": "884519",
    "end": "890279"
  },
  {
    "text": "is nope okay instead of just saying hello from go at the end of the day what",
    "start": "890279",
    "end": "895839"
  },
  {
    "text": "we're actually going to do is change this to use a key value store and uh this is going to be the common",
    "start": "895839",
    "end": "902399"
  },
  {
    "text": "abstraction for key value that we can use with web assembly which is a a wasi interface so we're going to open a",
    "start": "902399",
    "end": "909279"
  },
  {
    "text": "bucket um and this is just any bucket we're not saying whether this is reddis or we're not saying if this is some",
    "start": "909279",
    "end": "914600"
  },
  {
    "text": "other key value store and then we're going to increment a value uh at the hello uh counter so I'm just giving my",
    "start": "914600",
    "end": "921920"
  },
  {
    "text": "my app a second to start up aha that is why here just give me",
    "start": "921920",
    "end": "927680"
  },
  {
    "text": "just a moment",
    "start": "927680",
    "end": "930959"
  },
  {
    "text": "this is the unique problem of doing your little dry runs before the before the actual demo stand this back up give it",
    "start": "934199",
    "end": "941600"
  },
  {
    "text": "one more chance so in doing this what we'll go",
    "start": "941600",
    "end": "948120"
  },
  {
    "text": "ahead and do is we'll uncomment this code there's two interfaces here one is store and one is atomics with the",
    "start": "948120",
    "end": "955480"
  },
  {
    "text": "refresh there's our end point so instead of going to hello and seeing hello from go we'll go ahead and hit save here",
    "start": "955480",
    "end": "962480"
  },
  {
    "text": "we're doing a local kind of hot reload development Loop so as soon as we see this we'll actually import this",
    "start": "962480",
    "end": "968319"
  },
  {
    "text": "interface and then uh if we actually inspect the binary the web assembly",
    "start": "968319",
    "end": "973560"
  },
  {
    "text": "binary what our was and Cloud shell will detect is hey now we have a dependency on a key value store so we'll hook that",
    "start": "973560",
    "end": "979839"
  },
  {
    "text": "up automatically to the Nat's key value store which is part of what we already have provisioned for the wassom cloud",
    "start": "979839",
    "end": "985639"
  },
  {
    "text": "infrastructure you can see that every time I request now now I'm upgrading or I'm incrementing a counter so now I've",
    "start": "985639",
    "end": "991560"
  },
  {
    "text": "added another capability to my platform uh which is great now let's say we",
    "start": "991560",
    "end": "996600"
  },
  {
    "text": "wanted to do something uh different so instead of using a key value store we just wanted to do it with a file and I",
    "start": "996600",
    "end": "1002639"
  },
  {
    "text": "actually have this already set up so we have a Hello file Handler and what it's going to do is read a file on disk from",
    "start": "1002639",
    "end": "1009759"
  },
  {
    "text": "counter. text this actually does a really nice job of error handling and what it's going to do is uh create that",
    "start": "1009759",
    "end": "1016600"
  },
  {
    "text": "file if it doesn't exist like we're not going to fail out on on that I will go to /hello",
    "start": "1016600",
    "end": "1023160"
  },
  {
    "text": "file you'll see that actually get a runtime error and that's kind of strange",
    "start": "1023160",
    "end": "1028520"
  },
  {
    "text": "like this feels like something we should be able to do without a problem like if I go over to another terminal window and",
    "start": "1028520",
    "end": "1035360"
  },
  {
    "text": "I do a Docker run I'm going to run the same binary or the same you know microservice and",
    "start": "1035360",
    "end": "1042600"
  },
  {
    "text": "go yeah uh this should work pretty fine like loading this from a file why would",
    "start": "1043120",
    "end": "1048400"
  },
  {
    "text": "it do that and that's actually because of the deny by default security model I didn't declare that I have a capability",
    "start": "1048400",
    "end": "1054880"
  },
  {
    "text": "on reading a file from the file system so that's actually denied at runtime picking something off of disk it's the",
    "start": "1054880",
    "end": "1061200"
  },
  {
    "text": "same model for networking capabilities same model for uh higher level capabilities like key value even",
    "start": "1061200",
    "end": "1068559"
  },
  {
    "text": "generating a random number can be denied at runtime with the web assembly sandbox so this was a further",
    "start": "1068559",
    "end": "1076559"
  },
  {
    "text": "demonstration of what we can do with w cloud and I think it's really important to note that uh you know as we as we",
    "start": "1076559",
    "end": "1083880"
  },
  {
    "text": "look at the demo takeaways this capability driven permissions can be extended but they are denied by default",
    "start": "1083880",
    "end": "1090039"
  },
  {
    "text": "you're going to fail if you try to use a capability that you're not allowed to at runtime and the implications for this",
    "start": "1090039",
    "end": "1095919"
  },
  {
    "text": "when you're running in a platform is you can't have a vulnerable open- Source Library come in and start making",
    "start": "1095919",
    "end": "1103039"
  },
  {
    "text": "outbound Network requests without you knowing you can deny that from starting entirely and you can have it fail it",
    "start": "1103039",
    "end": "1108520"
  },
  {
    "text": "runs time and then with wasm Cloud this model of the pluggable capabilities you can provide your own implementations",
    "start": "1108520",
    "end": "1114640"
  },
  {
    "text": "that's kind of what you should uh you should take away from from that and I know that we're talking about",
    "start": "1114640",
    "end": "1120760"
  },
  {
    "text": "many different layers of platform security and it's really just kind of like an onion right it smells really bad",
    "start": "1120760",
    "end": "1127600"
  },
  {
    "text": "and sometimes platform security makes you want to cry oh uh no no no uh there's a lot of layers to it so when",
    "start": "1127600",
    "end": "1133080"
  },
  {
    "text": "we're when we're building a platform it's not just this the single binary that we're running um and in order to",
    "start": "1133080",
    "end": "1140440"
  },
  {
    "text": "abstract these dependencies and capabilities we found ourselves in a situation with wasm Cloud where it's",
    "start": "1140440",
    "end": "1145640"
  },
  {
    "text": "like well I mean are we going to be the kubernetes for wasum maybe are we going",
    "start": "1145640",
    "end": "1151039"
  },
  {
    "text": "to write Primitives to provision compute and storage and do observability and run",
    "start": "1151039",
    "end": "1156360"
  },
  {
    "text": "offs that's probably a little bit too much to take on and so this extension model that we have with wasm Cloud the",
    "start": "1156360",
    "end": "1162440"
  },
  {
    "text": "different platform layers is really important for us in order to get uh our job done be the best uh web assembly",
    "start": "1162440",
    "end": "1169679"
  },
  {
    "text": "application platform but integrate with existing tools so we have a multi-tier pluggable security model you know the",
    "start": "1169679",
    "end": "1176679"
  },
  {
    "text": "web assembly component as the unit of compute and the runtime as the standard battle tested wasm time give us that",
    "start": "1176679",
    "end": "1184080"
  },
  {
    "text": "nice uh that nice Baseline then we have additional pluggable security with our capability providers and then our",
    "start": "1184080",
    "end": "1191480"
  },
  {
    "text": "pluggable policy service and our secrets implementation so just to give you an",
    "start": "1191480",
    "end": "1196919"
  },
  {
    "text": "idea of one of these simple request reply API using gats we have a policy",
    "start": "1196919",
    "end": "1203280"
  },
  {
    "text": "engine that actually allows you to write your own custom policies for evaluating actions at runtime so say I want to",
    "start": "1203280",
    "end": "1209720"
  },
  {
    "text": "start a component and it has a a capability that says hey uh I'm going to",
    "start": "1209720",
    "end": "1214760"
  },
  {
    "text": "make outbound Network requests you can actually write an OP up policy to say hey if this is present in the list of",
    "start": "1214760",
    "end": "1221320"
  },
  {
    "text": "capabilities and actually deny this from starting and we would never want to build this into our platform because",
    "start": "1221320",
    "end": "1227000"
  },
  {
    "text": "people like making HTTP requests we want them to be able to have that but when you're running as an organization if",
    "start": "1227000",
    "end": "1232679"
  },
  {
    "text": "you're deploying this as a platform uh for yourself you can actually deny that uh on your own and that's completely",
    "start": "1232679",
    "end": "1238159"
  },
  {
    "text": "pluggable very simple in that's API um so we have like examples for Opa or maybe just go binary all that fun stuff",
    "start": "1238159",
    "end": "1245360"
  },
  {
    "text": "now we saw this work really well and one of the most requested features for the wasm cloud platform after we launched",
    "start": "1245360",
    "end": "1251679"
  },
  {
    "text": "1.0 earlier this year was Secrets I need to have a first class primitive in our",
    "start": "1251679",
    "end": "1257159"
  },
  {
    "text": "application for managing secrets and wasm Cloud being highly distributed it's",
    "start": "1257159",
    "end": "1262559"
  },
  {
    "text": "very important that we can retrieve those secrets that's encrypted at rest in whatever Secrets backend you use and",
    "start": "1262559",
    "end": "1269000"
  },
  {
    "text": "then it's encrypted the entire uh the entire length of Transit as you go across our API so this is what it looks",
    "start": "1269000",
    "end": "1276240"
  },
  {
    "text": "like to set up a secret in our application manifest you set up a policy so you say hey I'm going to be pulling",
    "start": "1276240",
    "end": "1283039"
  },
  {
    "text": "uh secrets from Vault and then you specify for a component you know this component is going to be able to pull an",
    "start": "1283039",
    "end": "1288760"
  },
  {
    "text": "API key and when wasm Cloud sends a request to the back end here's how to locate that secret in the back end so",
    "start": "1288760",
    "end": "1295159"
  },
  {
    "text": "this is very extensible we have an implementation for Nats key value which is like a distributed key Value Store",
    "start": "1295159",
    "end": "1301279"
  },
  {
    "text": "hasc Vault and for slurping in kubernetes secrets and this also uses a",
    "start": "1301279",
    "end": "1306400"
  },
  {
    "text": "pluggable API so we have a uh a subject prefix for the Secret's backend and it",
    "start": "1306400",
    "end": "1313640"
  },
  {
    "text": "actually only needs to support two operations one to get the public key of the server so that we can encrypt a",
    "start": "1313640",
    "end": "1320320"
  },
  {
    "text": "payload with the target of the server that the backend can only decrypt and then the get endpoint which is where",
    "start": "1320320",
    "end": "1327080"
  },
  {
    "text": "we'll send our encrypted requests and expect an encrypted response and then it's going to get a",
    "start": "1327080",
    "end": "1333159"
  },
  {
    "text": "little like Charlie Day pointing over here but I really want to show you all how this actually works we start a a",
    "start": "1333159",
    "end": "1339720"
  },
  {
    "text": "provider a capability a component uh with a dependency on a secret so we say hey we need to pull this secret and",
    "start": "1339720",
    "end": "1345760"
  },
  {
    "text": "we're going to pull it from a Secret's back end and here's how to get it so the first thing that wasl does is we ask for",
    "start": "1345760",
    "end": "1351760"
  },
  {
    "text": "that public key so that we can send an encrypted request that requ that public key comes back we generate a request spe",
    "start": "1351760",
    "end": "1359600"
  },
  {
    "text": "specific public private key pair so that this is resilient against replay attacks",
    "start": "1359600",
    "end": "1364919"
  },
  {
    "text": "and then we send an encrypted request for the secret with all of the context and metadata about the application",
    "start": "1364919",
    "end": "1371400"
  },
  {
    "text": "that's actually requesting that so the secrets backend this is our plug-in model can actually make a decision if",
    "start": "1371400",
    "end": "1378240"
  },
  {
    "text": "this entity or this principal should be able to pull the secret and that may be",
    "start": "1378240",
    "end": "1383279"
  },
  {
    "text": "a predetermined or a predefined vault policy that you have it may be a loose mapping from Identity to a secret or it",
    "start": "1383279",
    "end": "1390240"
  },
  {
    "text": "may be a you know it may be like an I am policy if you're running in the cloud so",
    "start": "1390240",
    "end": "1395480"
  },
  {
    "text": "send that secret back and then we can actually pass that secret to the application over standard in nothing is",
    "start": "1395480",
    "end": "1402799"
  },
  {
    "text": "uh nothing is exposed over the wire nothing sent in transit without being encrypted and nothing is actually stored",
    "start": "1402799",
    "end": "1409559"
  },
  {
    "text": "uh without being encrypted as well you know security stuff but this is a very powerful model and I want to show you",
    "start": "1409559",
    "end": "1415440"
  },
  {
    "text": "what it looks like so we are going to get back into get back into the demo",
    "start": "1415440",
    "end": "1421080"
  },
  {
    "text": "I've actually set up something uh on this local platform that uh is going to",
    "start": "1421080",
    "end": "1426159"
  },
  {
    "text": "make a really cool use of secrets so let me show you what that is we have a",
    "start": "1426159",
    "end": "1431600"
  },
  {
    "text": "couple more endpoints here uh with an ooth implementation I'm not going to go",
    "start": "1431600",
    "end": "1436880"
  },
  {
    "text": "all the way into uh uh what what the the oath implementation does it's just using",
    "start": "1436880",
    "end": "1442880"
  },
  {
    "text": "the uh the oath library from Google but what is really interesting is the implementation here uh in the component",
    "start": "1442880",
    "end": "1450760"
  },
  {
    "text": "so if I uh uncomment some of this uh Library here the uh ooth configuration",
    "start": "1450760",
    "end": "1458039"
  },
  {
    "text": "this is the really special part about our secrets uh our secrets interface there's two parts one is the store so",
    "start": "1458039",
    "end": "1465559"
  },
  {
    "text": "getting a secret reference and then the other one is reveal so when you first",
    "start": "1465559",
    "end": "1470720"
  },
  {
    "text": "get the secret this is actually an opaque reference the secret is actually never loaded into the application's",
    "start": "1470720",
    "end": "1476120"
  },
  {
    "text": "memory so just to show you that I'm pretty confident that I'm just going to print the secret to standard error great",
    "start": "1476120",
    "end": "1482880"
  },
  {
    "text": "uh if I mess this up if we've messed up was and Cloud Secrets then you get to look at my uh ooth secret code which is",
    "start": "1482880",
    "end": "1489080"
  },
  {
    "text": "great then uh just in time in order to create the ooth configuration for this",
    "start": "1489080",
    "end": "1494399"
  },
  {
    "text": "secret uh what we do is we are going to uh reveal that and then create that",
    "start": "1494399",
    "end": "1499600"
  },
  {
    "text": "config and send off the requests and everything so I am actually going to uh skip a little step where we where we run",
    "start": "1499600",
    "end": "1506840"
  },
  {
    "text": "washd I'm going to run uh wash up and configure wasm Cloud whenever it has a",
    "start": "1506840",
    "end": "1512960"
  },
  {
    "text": "secret request to send a request to uh a backend with with wasm cloud. secrets so",
    "start": "1512960",
    "end": "1518799"
  },
  {
    "text": "in another terminal window I'm going to set up one more thing I'm going to subscribe on the entire Secrets protocol",
    "start": "1518799",
    "end": "1525760"
  },
  {
    "text": "so we're going to actually take a look at all the messages that get sent over over the wire and then finally I am",
    "start": "1525760",
    "end": "1531640"
  },
  {
    "text": "going to deploy my application kind of just like I did before so I have my manifest here this is the declarative",
    "start": "1531640",
    "end": "1538880"
  },
  {
    "text": "application that you saw before I have a policy to be fetching secrets from the",
    "start": "1538880",
    "end": "1544000"
  },
  {
    "text": "NAT KV Secrets backend and then I'm telling my uh I'm tell telling my",
    "start": "1544000",
    "end": "1549279"
  },
  {
    "text": "application that it's going to need a client ID and a client secret so we're going to do some o stuff uh real quick",
    "start": "1549279",
    "end": "1555159"
  },
  {
    "text": "what I'm going to do is just launch the secrets backend and then put those encrypted secrets in in Nats KV this is",
    "start": "1555159",
    "end": "1562159"
  },
  {
    "text": "the full setup but really what's important for you to know is that I'm just pulling those Secrets out of this environment uh these two like",
    "start": "1562159",
    "end": "1568240"
  },
  {
    "text": "environment files you guys want to you want to see them what's in no no no okay never mind so okay anyways jokes aside I",
    "start": "1568240",
    "end": "1575399"
  },
  {
    "text": "got to keep you all awake we're going to go to Local Host 8000 is it 8080 no no no I didn't deploy",
    "start": "1575399",
    "end": "1582279"
  },
  {
    "text": "my application you have to do that so we are going to to build the component",
    "start": "1582279",
    "end": "1587520"
  },
  {
    "text": "itself this is going to go through kind of the whole uh this is just going to do the tiny go build command under the hood",
    "start": "1587520",
    "end": "1594279"
  },
  {
    "text": "and then uh we are going to do a wash app deploy with our uh with our yaml",
    "start": "1594279",
    "end": "1601159"
  },
  {
    "text": "manifest so that application should start up in just a couple of seconds we",
    "start": "1601159",
    "end": "1606480"
  },
  {
    "text": "are going to get that okay thanks Wi-Fi we're going to go back here and now we",
    "start": "1606480",
    "end": "1612360"
  },
  {
    "text": "can actually visit my other secure endpoint so I'll go to SL login click on",
    "start": "1612360",
    "end": "1617640"
  },
  {
    "text": "that um go ahead and sign in here nobody look uh my two Factor off doesn't",
    "start": "1617640",
    "end": "1623120"
  },
  {
    "text": "actually work right now which is really cool and who has time to debug that before conference talk so we're signing",
    "start": "1623120",
    "end": "1630159"
  },
  {
    "text": "in and as soon as I go through that approval request we'll get redirected",
    "start": "1630159",
    "end": "1635240"
  },
  {
    "text": "back and then here's all that information about that ooth uh bit now great you've seen an ooth implementation",
    "start": "1635240",
    "end": "1642559"
  },
  {
    "text": "it's done in web assembly but just kind of using like the the standard like go ooth libraries in the GitHub uh bit",
    "start": "1642559",
    "end": "1649520"
  },
  {
    "text": "there what is really powerful about this if I inspect my web assembly",
    "start": "1649520",
    "end": "1657000"
  },
  {
    "text": "component like I said earlier we can actually see everything that this component's going to do at runtime",
    "start": "1657000",
    "end": "1662720"
  },
  {
    "text": "included in this list of deny by default capabilities is the WM Cloud Secrets",
    "start": "1662720",
    "end": "1667799"
  },
  {
    "text": "interface so the one for store which is this first bit uh right here a tiny",
    "start": "1667799",
    "end": "1674240"
  },
  {
    "text": "window this first bit right here where we're fetching the client ID in secret to get that opaque reference the second",
    "start": "1674240",
    "end": "1680600"
  },
  {
    "text": "one is actually something that we can deny at runtime to components so the",
    "start": "1680600",
    "end": "1686880"
  },
  {
    "text": "really cool bit about this is you can write an API where people are actually able to access Secrets manipulate data",
    "start": "1686880",
    "end": "1694320"
  },
  {
    "text": "that may have a secret in it but it can never reveal that secret in memory that in combination with the",
    "start": "1694320",
    "end": "1701360"
  },
  {
    "text": "pluggable model of our secrets backend which lets you extend it lets you write a a different Paradigm of application",
    "start": "1701360",
    "end": "1708320"
  },
  {
    "text": "with web assembly you just truly cannot do with different applic with with Docker with with Go I mean you could",
    "start": "1708320",
    "end": "1715120"
  },
  {
    "text": "probably do something with go but with containerized applications today so this is really awesome I have a couple things",
    "start": "1715120",
    "end": "1721399"
  },
  {
    "text": "just to show you just to prove the secrets uh bit is truly working and fine you can see that I'm just printing out",
    "start": "1721399",
    "end": "1727279"
  },
  {
    "text": "this opaque it's just kind of like a number like a pointer reference so i' printed out the secret no problem if we",
    "start": "1727279",
    "end": "1733039"
  },
  {
    "text": "go take a look at my secret as it went over the wire it's this big gobbledygook uh block of encrypted bytes which is",
    "start": "1733039",
    "end": "1740159"
  },
  {
    "text": "great and so you know that's the name of it but it's not the real value so this",
    "start": "1740159",
    "end": "1745279"
  },
  {
    "text": "Secrets implementation is one of the things that I I am personally most proud of that we did in web assem or in wasen",
    "start": "1745279",
    "end": "1751960"
  },
  {
    "text": "Cloud over the last year because of how robust the implementation is and and what you can do with applications with",
    "start": "1751960",
    "end": "1758159"
  },
  {
    "text": "it so I'm taking that away across the whole talk wasm cloud has a very",
    "start": "1758159",
    "end": "1764360"
  },
  {
    "text": "powerful multi-tiered security model for its platform in this pluggable security you don't have to compromise on the",
    "start": "1764360",
    "end": "1771720"
  },
  {
    "text": "flexibility or how robust the implementation can be um if you are running a platform this is a a wonderful",
    "start": "1771720",
    "end": "1778159"
  },
  {
    "text": "way to kind of extend your core capabilities without uh changing the runtime",
    "start": "1778159",
    "end": "1783600"
  },
  {
    "text": "itself so uh looking forward looks like uh I'm I'm a little bit early looking forward I think there's a couple of",
    "start": "1783600",
    "end": "1790080"
  },
  {
    "text": "things that I'd love to do to improve this implementation the signing the way that we prove that a component should be",
    "start": "1790080",
    "end": "1796320"
  },
  {
    "text": "able to access a secret is done using Nats ed25519 in Keys this is great it's",
    "start": "1796320",
    "end": "1802799"
  },
  {
    "text": "verifiable offline it's something that um is very secure but I actually think it would be great to implement this",
    "start": "1802799",
    "end": "1808919"
  },
  {
    "text": "workload identity using this Mo the spiffy model the spiffy standard this is something that we could really do to",
    "start": "1808919",
    "end": "1814840"
  },
  {
    "text": "level up our platform I think that something that we should look forward to as well is you",
    "start": "1814840",
    "end": "1820919"
  },
  {
    "text": "notice that I was using the Tino tool chain to compile to Wy P2 I think that it would be great and and I'm really",
    "start": "1820919",
    "end": "1827399"
  },
  {
    "text": "looking forward to the continued support in big go as you as you could say the goang tool changes to compile right",
    "start": "1827399",
    "end": "1833840"
  },
  {
    "text": "there and it doesn't mean that we wouldn't use tinyo or that we would use one or the other but just having the flexibility is great and then I didn't",
    "start": "1833840",
    "end": "1841600"
  },
  {
    "text": "actually take a look at the policy engine you know I led with that but uh",
    "start": "1841600",
    "end": "1846640"
  },
  {
    "text": "using the pl pluggable policy as web assembly components would actually be a really cool way to kind of dog food this",
    "start": "1846640",
    "end": "1852480"
  },
  {
    "text": "wasm thing instead of just using a pluggable API",
    "start": "1852480",
    "end": "1858080"
  },
  {
    "text": "so uh I think with that uh whole lot of demos whole lot of different layers of",
    "start": "1858080",
    "end": "1863480"
  },
  {
    "text": "this security model um I would love for you all to get involved with the uh with",
    "start": "1863480",
    "end": "1868720"
  },
  {
    "text": "the was and Cloud project we've been uh we've had so much growth over the last six months with our contributors so",
    "start": "1868720",
    "end": "1875120"
  },
  {
    "text": "please come uh get started try the quick take a look at the security model um",
    "start": "1875120",
    "end": "1880159"
  },
  {
    "text": "check out our GitHub and you know all the court code obviously is in the open source and uh come join us on slack we",
    "start": "1880159",
    "end": "1886440"
  },
  {
    "text": "we have our own wassom cloud Slack actually bunch of different channels new one is Pets so if you want to C see cute",
    "start": "1886440",
    "end": "1892399"
  },
  {
    "text": "dogs and cats and everything it's your latest Source on the internet for dog and cap pictures uh but we're also in",
    "start": "1892399",
    "end": "1898440"
  },
  {
    "text": "the cncf slack if you don't want to you know add another one in there so uh thank you all very much I I actually",
    "start": "1898440",
    "end": "1904240"
  },
  {
    "text": "have a you know we got a couple minutes so uh you know after the Applause and everything U happy to answer some",
    "start": "1904240",
    "end": "1912399"
  },
  {
    "text": "questions yeah I think there's a microphone too it might be hooked",
    "start": "1916559",
    "end": "1922360"
  },
  {
    "text": "up for the people at home uh you were talking about you know security uh benefits that we get with",
    "start": "1922639",
    "end": "1929080"
  },
  {
    "text": "bom so um just just out of curiosity I was wondering if there's anything that's sort of easy to integrate with CI for",
    "start": "1929080",
    "end": "1935880"
  },
  {
    "text": "validating security uh like vulnerabilities in the code bases or uh like traditionally with kubernetes we're",
    "start": "1935880",
    "end": "1943039"
  },
  {
    "text": "scanning Docker images and stuff uh and that you know has to scan uh packages",
    "start": "1943039",
    "end": "1948080"
  },
  {
    "text": "the in the image for the whole OS is this really just as easy as like a dependabot something I mean is more yeah",
    "start": "1948080",
    "end": "1955519"
  },
  {
    "text": "yeah it it's a great question um and and the nice thing is that this integrates really well into existing tooling for",
    "start": "1955519",
    "end": "1961559"
  },
  {
    "text": "scanning like source code so like taking a look at the Go mod you know that you can do all the same things that you're",
    "start": "1961559",
    "end": "1966960"
  },
  {
    "text": "doing with scanning source code for for vulnerabilities but the real key piece",
    "start": "1966960",
    "end": "1972279"
  },
  {
    "text": "about web assembly is that there's this whole category of things you don't need to scan any anymore because the actual",
    "start": "1972279",
    "end": "1979880"
  },
  {
    "text": "implementations of like the HTTP server the secrets back end the connector to redis are not a part of my application",
    "start": "1979880",
    "end": "1988000"
  },
  {
    "text": "binary so it would be it's very important to scan the like those pluggable those host plugins which are",
    "start": "1988000",
    "end": "1994880"
  },
  {
    "text": "actually run as run as native binaries you'd scan those just as you do normally uh but the actual application itself you",
    "start": "1994880",
    "end": "2001840"
  },
  {
    "text": "have this whole like Suite of things you don't have to scan for I know that that's hard to explain to a security",
    "start": "2001840",
    "end": "2007480"
  },
  {
    "text": "team uh with with like you know na but does that make sense answer your question",
    "start": "2007480",
    "end": "2013039"
  },
  {
    "text": "yeah for sure thanks yeah thank you yeah how would the policy kind of look like",
    "start": "2013039",
    "end": "2018159"
  },
  {
    "text": "when you referenced that it would be like its own component is it right now as you mentioned like Opa or how do it",
    "start": "2018159",
    "end": "2025080"
  },
  {
    "text": "done today yeah right now what the the policy engine looks like is where is it",
    "start": "2025080",
    "end": "2031840"
  },
  {
    "text": "what the policy engine looks like is basically just sending some Json information about the the uh the action",
    "start": "2031840",
    "end": "2038120"
  },
  {
    "text": "that's happening to something that's listening over NS so this can just be a normal go binary um what uh what we have",
    "start": "2038120",
    "end": "2046720"
  },
  {
    "text": "in our documentation is an Opa example that just kind of inspects the the component um the component capabilities",
    "start": "2046720",
    "end": "2054240"
  },
  {
    "text": "and then all you send back is like a permitted true or or false um how would",
    "start": "2054240",
    "end": "2059878"
  },
  {
    "text": "that look like for something like file system access so um basically I actually",
    "start": "2059879",
    "end": "2066240"
  },
  {
    "text": "don't have an example on hand but uh what that would look like is you would basically just get a Json blob with this",
    "start": "2066240",
    "end": "2073398"
  },
  {
    "text": "payload here so this this it's called the world but it's all the interfaces that a component would use at runtime",
    "start": "2073399",
    "end": "2079599"
  },
  {
    "text": "what you would do uh what I would recommend is to actually have an allow list of capabilities that you allow so",
    "start": "2079599",
    "end": "2086158"
  },
  {
    "text": "if you had like simple HTTP microservices that you know aren't going to access the file um you could either",
    "start": "2086159",
    "end": "2093158"
  },
  {
    "text": "deny any file system access or you could have an allow list to say you know coming HTTP is fine you know generating",
    "start": "2093159",
    "end": "2100200"
  },
  {
    "text": "a random number is fine and like when I say this it would just be like looking in a Json array to make sure like what",
    "start": "2100200",
    "end": "2107440"
  },
  {
    "text": "that capability is yeah finally just kind of for file system because there's a lot of Legacy code that assumes",
    "start": "2107440",
    "end": "2113359"
  },
  {
    "text": "there's a file system can you are those like fine grade enough to do specific",
    "start": "2113359",
    "end": "2118680"
  },
  {
    "text": "folders or can you like have like a virtual file system with just like three files because a dependency assumes and",
    "start": "2118680",
    "end": "2125880"
  },
  {
    "text": "needs a file even though you rather not have it yeah yeah it's a great question and this is what's actually really",
    "start": "2125880",
    "end": "2131680"
  },
  {
    "text": "powerful about the component have to having to ask the runtime for everything that it's going to do by default for",
    "start": "2131680",
    "end": "2137839"
  },
  {
    "text": "wasen cloud we actually do virtualize that file system we give a blank readon file system so there's nothing in there",
    "start": "2137839",
    "end": "2144599"
  },
  {
    "text": "if you had something that expected for like a file to exist at a certain place what you would do is is like at at",
    "start": "2144599",
    "end": "2150599"
  },
  {
    "text": "runtime when you execute the component you would Mount that virtualized file system which could be like a local",
    "start": "2150599",
    "end": "2156520"
  },
  {
    "text": "folder for example like you know slash temp SL whatever but you do have complete support to to virtualize that",
    "start": "2156520",
    "end": "2164599"
  },
  {
    "text": "thanks yeah thanks there's also I I I should I",
    "start": "2164599",
    "end": "2171040"
  },
  {
    "text": "should do one more shout out there is a tool in the by Cod alliance called Wy vert which it's a it's a tool for",
    "start": "2171040",
    "end": "2177960"
  },
  {
    "text": "virtualizing um uh I think it can basically do any of these dependencies",
    "start": "2177960",
    "end": "2183200"
  },
  {
    "text": "in the component so instead of specifying it at at runtime you can actually virtualize this file system",
    "start": "2183200",
    "end": "2190560"
  },
  {
    "text": "import and provide that file system as a part of like the application binary so",
    "start": "2190560",
    "end": "2195880"
  },
  {
    "text": "very very powerful tool there um it looks like a lot of these",
    "start": "2195880",
    "end": "2202359"
  },
  {
    "text": "component calls basically have an implicit trust between them is there anything around signing or validation of",
    "start": "2202359",
    "end": "2210839"
  },
  {
    "text": "the various different components that you could reach out to uh like um uh",
    "start": "2210839",
    "end": "2217200"
  },
  {
    "text": "could you maybe just just like uh there you've got the wasum cloud Secrets uh there that you're bringing in how do I",
    "start": "2217200",
    "end": "2224040"
  },
  {
    "text": "know that I'm talking to the wasm cloud Secrets component that I think I am",
    "start": "2224040",
    "end": "2229280"
  },
  {
    "text": "versus someone else injecting into the ecosystem something else yeah yeah it's",
    "start": "2229280",
    "end": "2235240"
  },
  {
    "text": "a it's a great question um this is something that you would control more at the platform level the the platform",
    "start": "2235240",
    "end": "2241280"
  },
  {
    "text": "engineer actually has this control to do this fine grained access uh the way that",
    "start": "2241280",
    "end": "2246440"
  },
  {
    "text": "we do this uh in wasena we actually do have an identity system if you inspect",
    "start": "2246440",
    "end": "2251920"
  },
  {
    "text": "the component uh not you looking at the interface types we have uh this signed",
    "start": "2251920",
    "end": "2257280"
  },
  {
    "text": "identity for a specific component we have it for all of our capabilities as well so this is actually a part of like",
    "start": "2257280",
    "end": "2263960"
  },
  {
    "text": "you uh we call it linking but you link these two things together at runtime and",
    "start": "2263960",
    "end": "2269040"
  },
  {
    "text": "um that's that's a method that we know where something is coming from but I think this is again something that",
    "start": "2269040",
    "end": "2275200"
  },
  {
    "text": "spiffy or Spire would would would do a wonderful job at like actually doing the",
    "start": "2275200",
    "end": "2280599"
  },
  {
    "text": "heavy lifting there thank you yeah thank you so much all right I got the um the",
    "start": "2280599",
    "end": "2286319"
  },
  {
    "text": "warning warning your way overtime sign in the back but uh I'll hang out here for for a couple minutes of course please come ask questions and and thank",
    "start": "2286319",
    "end": "2292960"
  },
  {
    "text": "you all so much for coming again",
    "start": "2292960",
    "end": "2297000"
  }
]