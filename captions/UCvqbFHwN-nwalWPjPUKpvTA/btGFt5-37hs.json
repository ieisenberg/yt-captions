[
  {
    "text": "all right well folks welcome to our presentation on power",
    "start": "719",
    "end": "6160"
  },
  {
    "text": "leveling over 9000 improving application performance with some chaos engineering",
    "start": "6160",
    "end": "12800"
  },
  {
    "text": "hello everyone uh uh i am sayyam pathak director of technical evangelism at ceo building the next-gen simplified",
    "start": "14559",
    "end": "20720"
  },
  {
    "text": "kubernetes service on sibo i'm a cncf ambassador and influx ace",
    "start": "20720",
    "end": "25760"
  },
  {
    "text": "i'm author of learn cks scenarios which is published on road based on practicing kubernetes cks certification",
    "start": "25760",
    "end": "33360"
  },
  {
    "text": "yes i am cka ckad and cks certified and i organize few of the meetups at",
    "start": "33360",
    "end": "38960"
  },
  {
    "text": "bangalore i run a youtube channel where i talk about all things cloud native and uh you can reach me on twitter",
    "start": "38960",
    "end": "44800"
  },
  {
    "text": "anytime address i am product",
    "start": "44800",
    "end": "48559"
  },
  {
    "text": "and i'm karthik wadd i'm the head of cloud native engineering uh over here at verica",
    "start": "50239",
    "end": "55360"
  },
  {
    "text": "and lately in the last uh probably eight months or so i've been doing a lot of work in the",
    "start": "55360",
    "end": "60559"
  },
  {
    "text": "chaos engineering space building chaos engineering verifications um i've written the learning",
    "start": "60559",
    "end": "65840"
  },
  {
    "text": "kubernetes and other cloud native courses on linkedin learning i used to manage the oracle kubernetes",
    "start": "65840",
    "end": "71520"
  },
  {
    "text": "engine over at oracle cloud and also do a bunch of things uh in the",
    "start": "71520",
    "end": "76560"
  },
  {
    "text": "devops and cloud space here in austin texas you can find me on twitter at aerationone so let's talk about the",
    "start": "76560",
    "end": "85040"
  },
  {
    "text": "storyline today so we'll do a quick overview of the state of the cloud native universe",
    "start": "85040",
    "end": "90079"
  },
  {
    "text": "figure out where chaos engineering fits in and then kind of talk about what we mean by kiosk engineering its",
    "start": "90079",
    "end": "96400"
  },
  {
    "text": "intersection with cloud native and then the most important part the demos of course",
    "start": "96400",
    "end": "102079"
  },
  {
    "text": "and finally we'll go into some speaker recommendations at the end so state of the universe um so i'm a big",
    "start": "102079",
    "end": "109520"
  },
  {
    "text": "fan uh and i'm kind of a nerd when it comes to looking at reports and things like that",
    "start": "109520",
    "end": "114640"
  },
  {
    "text": "so um this the state of our world is we're kind of going to a multi-cloud",
    "start": "114640",
    "end": "119920"
  },
  {
    "text": "world we've known this for a while but you know in the research report from 451 research",
    "start": "119920",
    "end": "125759"
  },
  {
    "text": "uh this is kind it's a little bit older uh came out in 2018 2019 that time frame but it said 67",
    "start": "125759",
    "end": "131599"
  },
  {
    "text": "percent of enterprises will have multi-cloud or hybrid it environments by 2019",
    "start": "131599",
    "end": "136879"
  },
  {
    "text": "um but you know with greater choice brings more complexity uh we saw this again in the cncf report",
    "start": "136879",
    "end": "142560"
  },
  {
    "text": "that came out last year where 26 of uh usage uh is actually multi-cloud",
    "start": "142560",
    "end": "148160"
  },
  {
    "text": "so that's grown a lot from years past which uh if you notice in the graph you know there was nothing in 20 uh 2019",
    "start": "148160",
    "end": "155200"
  },
  {
    "text": "but 2020 that's uh that's a brand new thing there's also increased container usage",
    "start": "155200",
    "end": "160800"
  },
  {
    "text": "so this is no surprise for to anybody the use of containers and production is that has become the norm today for the server",
    "start": "160800",
    "end": "167280"
  },
  {
    "text": "survey and so you know there's steady increase in use of containers in production today",
    "start": "167280",
    "end": "172640"
  },
  {
    "text": "as well as you know everybody um and their parents and sisters and brothers and co-workers are",
    "start": "172640",
    "end": "180480"
  },
  {
    "text": "using kubernetes um it's kind of become a ubiquitous thing so uh you know that's kind of where we",
    "start": "180480",
    "end": "186640"
  },
  {
    "text": "stand from a cloud native standpoint but um also in the 2020",
    "start": "186640",
    "end": "192720"
  },
  {
    "text": "cncf survey they talked about cultural challenges where cultural challenges and complexity",
    "start": "192720",
    "end": "198560"
  },
  {
    "text": "were the biggest challenges uh with respect to using containers actually",
    "start": "198560",
    "end": "203599"
  },
  {
    "text": "let's talk about complexity for just one second so on the complex uh complexity scale you have the simple",
    "start": "203599",
    "end": "209760"
  },
  {
    "text": "systems and then you have the complex systems so simple systems are defined you know where where the process flow is very",
    "start": "209760",
    "end": "215680"
  },
  {
    "text": "linear you have predictable output and everything is comprehensible versus more complex systems are you know",
    "start": "215680",
    "end": "221920"
  },
  {
    "text": "everything doesn't really happen in a linear fashion so things are non-linear you have a lot",
    "start": "221920",
    "end": "227040"
  },
  {
    "text": "of unpredictable behavior so you don't really know what might happen and it's also impossible to build",
    "start": "227040",
    "end": "233360"
  },
  {
    "text": "like one complete mental model uh one of the really interesting things that i found from this was you know in",
    "start": "233360",
    "end": "238720"
  },
  {
    "text": "the past you know 10 15 years ago you'd have one architect that was able to understand the whole system",
    "start": "238720",
    "end": "244640"
  },
  {
    "text": "so when something went wrong you know you could go to that one person and ask him him him or her hey what's going on with",
    "start": "244640",
    "end": "250640"
  },
  {
    "text": "the system and you know you might get a response of like oh there's maybe the messaging service or something like that might be offline",
    "start": "250640",
    "end": "257040"
  },
  {
    "text": "but in current world today when everything's a little bit more distributed it's hard for one single person to have",
    "start": "257040",
    "end": "262720"
  },
  {
    "text": "like a complete mental model of the entire system so it's become a lot more complex",
    "start": "262720",
    "end": "269840"
  },
  {
    "text": "you know and and testing is hard so this wouldn't be a conference i'm guessing this slide is going to be in every",
    "start": "269840",
    "end": "275600"
  },
  {
    "text": "presentation but you know you have your productionized distributed application on the right",
    "start": "275600",
    "end": "280639"
  },
  {
    "text": "large container ship and then you're trying to test this and you know we're all kind of like using probably using jmeter to like load test",
    "start": "280639",
    "end": "287280"
  },
  {
    "text": "our applications so you have the little like forklift on the on the left hand side of this image",
    "start": "287280",
    "end": "292880"
  },
  {
    "text": "so you know testing is just a hard problem in a distributed world today",
    "start": "292880",
    "end": "298479"
  },
  {
    "text": "so enter chaos engineering how does this help us",
    "start": "298479",
    "end": "303840"
  },
  {
    "text": "so chaos engineering it's defined as the discipline of experimenting on a system in order to build confidence in the",
    "start": "303840",
    "end": "310639"
  },
  {
    "text": "system's capability to withstand turbulent conditions in production this definition comes from the",
    "start": "310639",
    "end": "316240"
  },
  {
    "text": "principles of kiosk.org so go check out that site so let's talk about testing versus",
    "start": "316240",
    "end": "322720"
  },
  {
    "text": "experimentation real quick testing is the idea of making an assertion on a property of a system",
    "start": "322720",
    "end": "328720"
  },
  {
    "text": "based on existing knowledge and then validating that specific property experimentation on the other hand is",
    "start": "328720",
    "end": "335280"
  },
  {
    "text": "proposing a hypothesis which can either be proven or disproven so as long as the hypothesis is not",
    "start": "335280",
    "end": "341919"
  },
  {
    "text": "disproven then the confidence grows in the actual hypothesis if it is disproven then we know",
    "start": "341919",
    "end": "347360"
  },
  {
    "text": "something's wrong and we can figure out why that hypothesis was wrong in the first place",
    "start": "347360",
    "end": "353840"
  },
  {
    "text": "okay so you were trying to practice chaos engineering in the real world so what how do we actually make this",
    "start": "354880",
    "end": "360880"
  },
  {
    "text": "happen so for the principles of chaos uh you're first trying to define a steady state so you know what normal",
    "start": "360880",
    "end": "367680"
  },
  {
    "text": "behavior might look like in normal conditions and then you take your hypothesis",
    "start": "367680",
    "end": "372960"
  },
  {
    "text": "and you hypothesize on the steady state which will continue for both your control group and your experimental group now that you",
    "start": "372960",
    "end": "380240"
  },
  {
    "text": "have two groups you start introducing variables to reflect real-world events in the system what is this what does this mean so you",
    "start": "380240",
    "end": "386880"
  },
  {
    "text": "know you might like in the kubernetes space you might start to delete pods or you know take a note away",
    "start": "386880",
    "end": "392240"
  },
  {
    "text": "etc on the on the uh control and your um experimental group and you start to",
    "start": "392240",
    "end": "397759"
  },
  {
    "text": "inject real world chaos to it and then you try and disprove the hypothesis by either looking at the",
    "start": "397759",
    "end": "402960"
  },
  {
    "text": "difference in the steady state between the control and the experimental group so thinking about this from an advanced",
    "start": "402960",
    "end": "409680"
  },
  {
    "text": "principal perspective you really want to build your hypothesis around steady-state behavior",
    "start": "409680",
    "end": "415199"
  },
  {
    "text": "so you want to think of this from an outside-in approach so you want to look at your measurable outputs",
    "start": "415199",
    "end": "420240"
  },
  {
    "text": "versus internal attributes what does this mean so you want to look at if you have an application running you want to look at",
    "start": "420240",
    "end": "426800"
  },
  {
    "text": "things from the outside like traffic coming in you know response rates and things like that versus you know looking at something",
    "start": "426800",
    "end": "433120"
  },
  {
    "text": "inside of your application maybe like cpu or memory for example you really want to vary real",
    "start": "433120",
    "end": "438960"
  },
  {
    "text": "world events so you want to you know turn things off slow things down send invalid responses",
    "start": "438960",
    "end": "444639"
  },
  {
    "text": "things like that so once again from an outside in perspective but you want to change things that might happen in the real world",
    "start": "444639",
    "end": "451520"
  },
  {
    "text": "you want to run these experiments in production because this really guarantees authenticity of whether your experiments are or your",
    "start": "451520",
    "end": "459599"
  },
  {
    "text": "hypothesis are going to be valid or invalid also blast radius so i just said",
    "start": "459599",
    "end": "466800"
  },
  {
    "text": "that you are running experiments in production so you want to remember that you're doing these things in production so you want to minimize your blast",
    "start": "466800",
    "end": "472960"
  },
  {
    "text": "radius so in order to not take everything down and last but not least continues we'll",
    "start": "472960",
    "end": "479919"
  },
  {
    "text": "talk about this as we go along but really what i mean by this is you want to keep doing this from a continuous kind of perspective so",
    "start": "479919",
    "end": "487440"
  },
  {
    "text": "you not you don't run your experiments maybe once a release but you're really doing this on a day-to-day basis",
    "start": "487440",
    "end": "493199"
  },
  {
    "text": "hour to hour minute to minute even potentially",
    "start": "493199",
    "end": "497599"
  },
  {
    "text": "so what's the intersection with this the theory i explained with chaos engineering and cloud native the",
    "start": "498479",
    "end": "505440"
  },
  {
    "text": "coolest thing about cloud native is that we are in a rich ecosystem and there's a lot of great open source tools in the",
    "start": "505440",
    "end": "511120"
  },
  {
    "text": "landscape some of them are you know kraken litmus and chaos mesh",
    "start": "511120",
    "end": "516240"
  },
  {
    "text": "and there's a whole bunch of others as well including enterprise tooling so for the purposes of this presentation",
    "start": "516240",
    "end": "521680"
  },
  {
    "text": "we'll focus on the first three because realistically we only have 25 minutes probably",
    "start": "521680",
    "end": "527440"
  },
  {
    "text": "you know 22 by the time i'm like done talking about this stuff so we'll we'll cover the first three but",
    "start": "527440",
    "end": "532800"
  },
  {
    "text": "definitely take a look at all the others as well so first up kraken so what is kraken",
    "start": "532800",
    "end": "540320"
  },
  {
    "text": "kraken helps us inject failure into either openshift or kubernetes it's kind of built from two components",
    "start": "540320",
    "end": "547120"
  },
  {
    "text": "one of them is powerful seal that injects failures onto kubernetes clusters so powerful",
    "start": "547120",
    "end": "552240"
  },
  {
    "text": "powerful seal is the actual thing that uh you know injects failures or does something to your",
    "start": "552240",
    "end": "558160"
  },
  {
    "text": "actual cluster and then there's cerebrus that watches and reports uh on cluster components so cerebrus is",
    "start": "558160",
    "end": "565839"
  },
  {
    "text": "actually the watcher component so when powerful seal goes and maybe kills a pod or you know slows down a road for example",
    "start": "565839",
    "end": "572399"
  },
  {
    "text": "cerebrus actually sits there and watches for changes in your in your infrastructure um so it'll tell you what's actually",
    "start": "572399",
    "end": "579040"
  },
  {
    "text": "going on so kraken is actually used for a bunch of scenarios you can use it for",
    "start": "579040",
    "end": "584560"
  },
  {
    "text": "part chaos so for example your scd pods you can try and kill ncd pods on your cluster",
    "start": "584560",
    "end": "590720"
  },
  {
    "text": "same thing with api server pods um adding some node chaos where you know you might simulate a crash node and see",
    "start": "590720",
    "end": "597040"
  },
  {
    "text": "how your application or your cluster recovers from that um and then time kiosk for",
    "start": "597040",
    "end": "602240"
  },
  {
    "text": "example where you screw you where you're skewing your clock time to see how your",
    "start": "602240",
    "end": "607839"
  },
  {
    "text": "uh cluster or your applications might respond to that",
    "start": "607839",
    "end": "612560"
  },
  {
    "text": "here's a quick architecture diagram so kraken you have we have it on the left hand side here um this",
    "start": "613200",
    "end": "619440"
  },
  {
    "text": "injects failures and openshift these are the different components that it can kind of work with",
    "start": "619440",
    "end": "624480"
  },
  {
    "text": "um it also works with you know different cloud apis so if you want to use the aws azure for example you can you know call",
    "start": "624480",
    "end": "631040"
  },
  {
    "text": "out to those as well um on the left hand side we have cerebrus uh that actually watches all of",
    "start": "631040",
    "end": "636320"
  },
  {
    "text": "these different components as well um but kraken itself you know behind the scenes it uses",
    "start": "636320",
    "end": "641519"
  },
  {
    "text": "a powerful seal that you know actually goes and does the actual experiment parts with",
    "start": "641519",
    "end": "647839"
  },
  {
    "text": "your workers or your masters for example thank you karthik for the awesome introduction to chaos engineering and",
    "start": "647839",
    "end": "654399"
  },
  {
    "text": "why it is needed next up on the tooling is chaos mich so chaos mesh is a powerful chaos",
    "start": "654399",
    "end": "660880"
  },
  {
    "text": "engineering platform for kubernetes it is extremely simple to use can be installed on any humanities cluster and",
    "start": "660880",
    "end": "667360"
  },
  {
    "text": "it is designed for communities it has a interactive dashboards which you can use for creating",
    "start": "667360",
    "end": "672800"
  },
  {
    "text": "the chaos experiments and also can be used for analytics as well like which all points your chaos actually ran",
    "start": "672800",
    "end": "679920"
  },
  {
    "text": "some of the disruptions that chaos mesh causes are killing the pod latency network",
    "start": "679920",
    "end": "686240"
  },
  {
    "text": "system io chaos so and there are others as well so all these chaos can be introduced in",
    "start": "686240",
    "end": "691360"
  },
  {
    "text": "your within your communities cluster chaos mesh architecture so these are the",
    "start": "691360",
    "end": "697680"
  },
  {
    "text": "set of experiments that are there with which you can create as a cr and submit it to the kubernetes",
    "start": "697680",
    "end": "703120"
  },
  {
    "text": "cluster so you will be writing a yaml file which is a custom resource and then you will be submitting",
    "start": "703120",
    "end": "708560"
  },
  {
    "text": "to uh the kubernetes cluster so after the control manager takes up the cr it will then hand it over to the daemon",
    "start": "708560",
    "end": "714959"
  },
  {
    "text": "and the demon is actually the chaos demon is actually running on all the nodes which will internally run",
    "start": "714959",
    "end": "720240"
  },
  {
    "text": "your chaos experiments and these experiments then are based on certain",
    "start": "720240",
    "end": "725440"
  },
  {
    "text": "selectors that selects the particular workload to which this particular chaos experiment has to be",
    "start": "725440",
    "end": "730800"
  },
  {
    "text": "run so that's how in a short summary chaos mesh works",
    "start": "730800",
    "end": "736720"
  },
  {
    "text": "next up on the tooling is litmus chaos so litmus is again an open source tool it's also a cncf project and it is",
    "start": "738320",
    "end": "746000"
  },
  {
    "text": "basically chaos workflows for communities so litmus features are team collaboration",
    "start": "746000",
    "end": "752079"
  },
  {
    "text": "so you can integrate it with your github and you can add your team members you can add",
    "start": "752079",
    "end": "757680"
  },
  {
    "text": "public private chaos hubs which will contain the chaos experiments so you can enable chaos detox as well",
    "start": "757680",
    "end": "764399"
  },
  {
    "text": "which can act as a single source of truth so whatever workflow you create in the litmus will be stored in your github",
    "start": "764399",
    "end": "770480"
  },
  {
    "text": "repository whichever is connected and then you can have the chaos observability as well you can view",
    "start": "770480",
    "end": "776160"
  },
  {
    "text": "the duration of the experiment when it ran on in the grafana dashboard and you can also",
    "start": "776160",
    "end": "781200"
  },
  {
    "text": "have the provitues as well chaos apis that can be used and chaos workflows for",
    "start": "781200",
    "end": "787680"
  },
  {
    "text": "creating the complete workflow of the chaos experiment that has to be run on the cluster",
    "start": "787680",
    "end": "794480"
  },
  {
    "text": "litmus architecture uh so this is litmus 2.0 architecture it has a portal and portal comes with a",
    "start": "794480",
    "end": "800480"
  },
  {
    "text": "web ui so web ui is very uh very great component of litmus 2.0 with which you can create the chaos",
    "start": "800480",
    "end": "808560"
  },
  {
    "text": "workflows from the ui itself and you don't have to write any of the yaml files and then you have the litmus server uh",
    "start": "808560",
    "end": "815279"
  },
  {
    "text": "and you also have a litmus db which stores internally all the workflows and if you have enabled githubs then also",
    "start": "815279",
    "end": "821040"
  },
  {
    "text": "uh your workflows are stored in your git repository so you have chaos agents on your doors",
    "start": "821040",
    "end": "826959"
  },
  {
    "text": "and chaos agents are set of the operator and the crds the chaos probes the exporters exporting the metrics and",
    "start": "826959",
    "end": "833440"
  },
  {
    "text": "the subscribers to which the applications can subscribe and here you have the chaos experiments",
    "start": "833440",
    "end": "839120"
  },
  {
    "text": "and the cross workflow.yaml so you can also edit the yaml when you are creating them and you can enable disable some of",
    "start": "839120",
    "end": "845040"
  },
  {
    "text": "the fields so this is a complete runtime workflow for litmus",
    "start": "845040",
    "end": "850240"
  },
  {
    "text": "so you can see here the crds so there are three crds the chaos engine so we write the chaos",
    "start": "850240",
    "end": "856160"
  },
  {
    "text": "engine file the chaos experiments the chaos experiments are installed onto the cluster and then the chaos results okay also",
    "start": "856160",
    "end": "861760"
  },
  {
    "text": "result will tell the the success failures and what are the metrics for that so you have the kiosk operator installed",
    "start": "861760",
    "end": "867839"
  },
  {
    "text": "onto the cluster you write the engine dot yaml kiosk engine.yaml file and so",
    "start": "867839",
    "end": "873360"
  },
  {
    "text": "user creates a chaos engine cr and maps it to an application to which the chaos experiment has to be run",
    "start": "873360",
    "end": "879199"
  },
  {
    "text": "so then the chaos operator would read that file and create a chaos runner pod which is actually reading all the",
    "start": "879199",
    "end": "885440"
  },
  {
    "text": "configuration mapping it all to the workload which it has to run the chaos",
    "start": "885440",
    "end": "890560"
  },
  {
    "text": "experiment on and after that it triggers a chaos job now job is actual experiment",
    "start": "890560",
    "end": "895760"
  },
  {
    "text": "that runs and performs the chaos checks and do the experiment and then hands over the result chaos hub",
    "start": "895760",
    "end": "902639"
  },
  {
    "text": "is the place where you have all your experiments stored so you can use the public kiosk or you can create your own",
    "start": "902639",
    "end": "908480"
  },
  {
    "text": "chaos hub privately and link that to the litmus portal you can also uh attach",
    "start": "908480",
    "end": "914160"
  },
  {
    "text": "multiple target clusters to litmus so you it's not only limited to single cluster you can have multiple clusters and select",
    "start": "914160",
    "end": "920240"
  },
  {
    "text": "targets for different workflows so this is how all in all uh litmus works",
    "start": "920240",
    "end": "927839"
  },
  {
    "text": "demo time so this is what uh we are going to do in today's demo so i'll be launching a seo kubernetes",
    "start": "928160",
    "end": "934959"
  },
  {
    "text": "cluster which is uh k3 is based we'll install litmus 2.0 and",
    "start": "934959",
    "end": "940240"
  },
  {
    "text": "we'll create a pod network loss experiment and we'll also enable gitops with the",
    "start": "940240",
    "end": "946000"
  },
  {
    "text": "repository and we'll install flux and again it will be watching the path a specific path in the",
    "start": "946000",
    "end": "952720"
  },
  {
    "text": "github and we have the github actions which will be used to build and push the",
    "start": "952720",
    "end": "957839"
  },
  {
    "text": "docker image and also commit the deployment file to the same git repository to which the flux will read",
    "start": "957839",
    "end": "963440"
  },
  {
    "text": "it and deploy it onto the cluster and after that the application would have been subscribed",
    "start": "963440",
    "end": "969600"
  },
  {
    "text": "to a particular pod network loss workflow and in the black and using the black box",
    "start": "969600",
    "end": "975440"
  },
  {
    "text": "exporter and from ethios will be able to visualize everything in so for this demo we'll be using sibo",
    "start": "975440",
    "end": "981759"
  },
  {
    "text": "kubernetes and we launch a cluster let's name it a cube con we'll",
    "start": "981759",
    "end": "988399"
  },
  {
    "text": "select a large size and we'll just create the cluster",
    "start": "988399",
    "end": "992720"
  },
  {
    "text": "so the cluster is ready under two minutes and i have already downloaded the cube config file and exported it",
    "start": "994800",
    "end": "1000000"
  },
  {
    "text": "as a cube config variable let's check cube cdl to get nodes",
    "start": "1000000",
    "end": "1008079"
  },
  {
    "text": "and our cluster is up and running so i have already cloned the repository",
    "start": "1008079",
    "end": "1014639"
  },
  {
    "text": "and let's now deploy the components required for this demo so the first one is the deployment of",
    "start": "1014639",
    "end": "1020639"
  },
  {
    "text": "litmus so we'll create cube cdl create namespace litmas",
    "start": "1020639",
    "end": "1027679"
  },
  {
    "text": "and we'll deploy litmus 2.0 beta",
    "start": "1028400",
    "end": "1033360"
  },
  {
    "text": "so it has created all the components so let's check what is happening in the literature's name space so cube serial",
    "start": "1035120",
    "end": "1041678"
  },
  {
    "text": "get ports hyphen and litmus so we have our database front end server all the parts running for litmus",
    "start": "1041679",
    "end": "1048799"
  },
  {
    "text": "now we deploy the application so keep ctl try",
    "start": "1048880",
    "end": "1054720"
  },
  {
    "text": "hello world application it will create the deployment and service and we'll deploy some monitoring components so cube cdl apply i can have",
    "start": "1057200",
    "end": "1065120"
  },
  {
    "text": "monitoring prometheus so it is creating all the prometheus components",
    "start": "1065120",
    "end": "1072240"
  },
  {
    "text": "and we also need black box exporter",
    "start": "1072240",
    "end": "1076240"
  },
  {
    "text": "for probing the http endpoint and we also need graphana",
    "start": "1077679",
    "end": "1084160"
  },
  {
    "text": "so it creates a deployment and service it has also a json dashboard that will import later",
    "start": "1086640",
    "end": "1092320"
  },
  {
    "text": "which will not be applied to the cluster obviously let's check the application is running",
    "start": "1092320",
    "end": "1097840"
  },
  {
    "text": "or not our application is up and running and",
    "start": "1097840",
    "end": "1102960"
  },
  {
    "text": "let's access the application",
    "start": "1102960",
    "end": "1109120"
  },
  {
    "text": "so our application is up and running",
    "start": "1109120",
    "end": "1112559"
  },
  {
    "text": "and here it is so now let's access the litmus dashboard so this is running on the node port",
    "start": "1115440",
    "end": "1120840"
  },
  {
    "text": "30406 so this is the litmus dashboard",
    "start": "1120840",
    "end": "1125760"
  },
  {
    "text": "and the default username and password is admin and ditmas",
    "start": "1125919",
    "end": "1131279"
  },
  {
    "text": "we'll change it we have to do a project name con",
    "start": "1133039",
    "end": "1141840"
  },
  {
    "text": "so this is the litmus portal when we log in so it has workflows it has the hubs",
    "start": "1143200",
    "end": "1148320"
  },
  {
    "text": "and the target clusters so first let's enable githubs for our repository",
    "start": "1148320",
    "end": "1153919"
  },
  {
    "text": "so we'll give the git url we'll give the branch as main and we have to give the access token",
    "start": "1153919",
    "end": "1160639"
  },
  {
    "text": "and we have successfully connected to github so all our workflows will now be stored in git repository",
    "start": "1160880",
    "end": "1167760"
  },
  {
    "text": "so let's create a workflow so we schedule a workflow we select",
    "start": "1167919",
    "end": "1173280"
  },
  {
    "text": "target cluster which is self cluster and we create our own workflow",
    "start": "1173280",
    "end": "1179760"
  },
  {
    "text": "we give it a name network loss and we select the experiment from qrsurb",
    "start": "1179760",
    "end": "1188880"
  },
  {
    "text": "or network loss we go next so we'll select the application based on",
    "start": "1188880",
    "end": "1195039"
  },
  {
    "text": "the app label which in this case is hello service we'll run this experiment for 120",
    "start": "1195039",
    "end": "1200640"
  },
  {
    "text": "seconds and since we are running ceo kubernetes which is container debased so container b this is all",
    "start": "1200640",
    "end": "1208400"
  },
  {
    "text": "the socket path will be slash run k3s container d container dot sock",
    "start": "1208400",
    "end": "1214960"
  },
  {
    "text": "so let's add this experiment finishing heading and construct the workflow now this is",
    "start": "1214960",
    "end": "1221280"
  },
  {
    "text": "the yaml file that you can edit as well so we edit the monitoring section so we want to enable the monitoring so that it",
    "start": "1221280",
    "end": "1227760"
  },
  {
    "text": "can flow and tell us what the exact chaos duration was when the experiment ran",
    "start": "1227760",
    "end": "1235840"
  },
  {
    "text": "and let's schedule the workflow so the new workflow network loss has",
    "start": "1236320",
    "end": "1243360"
  },
  {
    "text": "been successfully created on our kubernetes cluster so let's go back to a kubernetes cluster to see what is happening",
    "start": "1243360",
    "end": "1251279"
  },
  {
    "text": "let's check the request namespace",
    "start": "1253360",
    "end": "1256720"
  },
  {
    "text": "we can see the network loss pod is initializing after that it will create the runner pod",
    "start": "1258960",
    "end": "1265679"
  },
  {
    "text": "and actually run the network kiosk",
    "start": "1265679",
    "end": "1270799"
  },
  {
    "text": "so our workflow has run successfully and all the network loss pods have done their jobs",
    "start": "1272640",
    "end": "1280080"
  },
  {
    "text": "and we can see the workflow succeeded now how to visualize this now let's go to our grafana dashboard so",
    "start": "1280080",
    "end": "1285520"
  },
  {
    "text": "i have already imported grafana and connected into prometheus and loaded the json so",
    "start": "1285520",
    "end": "1290559"
  },
  {
    "text": "this is how it is showing the probe duration seconds and you can see uh the graph which is having the network",
    "start": "1290559",
    "end": "1297520"
  },
  {
    "text": "loss so the red area that we are seeing is coming because we said the monitoring true in the yaml file",
    "start": "1297520",
    "end": "1303440"
  },
  {
    "text": "so monitoring true in the yaml file will give the matrix the chaos proper chaos duration where actually the",
    "start": "1303440",
    "end": "1308720"
  },
  {
    "text": "chaos ran for the particular workload so this is that particular duration for which the chaos ran",
    "start": "1308720",
    "end": "1313760"
  },
  {
    "text": "and it helps to visualize when you have a lot of chaos running and your cluster so that's how",
    "start": "1313760",
    "end": "1320799"
  },
  {
    "text": "you can run chaos workflow and visualize it now let's do a ci cd for that now in the repository i already have a",
    "start": "1320799",
    "end": "1328080"
  },
  {
    "text": "workflow section which is the build and push image so it is the github action which on the push commit to the",
    "start": "1328080",
    "end": "1334320"
  },
  {
    "text": "repository will build the image you push the image with the tag using a ginger template",
    "start": "1334320",
    "end": "1340080"
  },
  {
    "text": "it will edit this particular yaml file as well so there is a template which is in the tmpl",
    "start": "1340080",
    "end": "1346480"
  },
  {
    "text": "section so this template it will update with the deploy tag and",
    "start": "1346480",
    "end": "1352240"
  },
  {
    "text": "again commit back to the same location now for the cd part we'll be deploying",
    "start": "1352240",
    "end": "1358840"
  },
  {
    "text": "flux so flux is another open source tool which is a very good for continuous",
    "start": "1358840",
    "end": "1364080"
  },
  {
    "text": "delivery so let's deploy flux to let's bootstrap flux and with this particular repository it",
    "start": "1364080",
    "end": "1370480"
  },
  {
    "text": "will create the flux system namespace and deploy all the components",
    "start": "1370480",
    "end": "1389840"
  },
  {
    "text": "so we can see in the kubecon uh repository we have the litmus folder created so",
    "start": "1391600",
    "end": "1396640"
  },
  {
    "text": "when we did uh the workflow and we did the github solid much so it gave the workflow it created the",
    "start": "1396640",
    "end": "1401760"
  },
  {
    "text": "workflow inside the repository it pushed it and we have the workflow id and the customer id so we need to",
    "start": "1401760",
    "end": "1408240"
  },
  {
    "text": "have these two uh so that we can subscribe the deployment for this particular workflow so we'll",
    "start": "1408240",
    "end": "1414320"
  },
  {
    "text": "copy the workflow id and we'll",
    "start": "1414320",
    "end": "1421760"
  },
  {
    "text": "edit our template",
    "start": "1424960",
    "end": "1431840"
  },
  {
    "text": "and we add the workflow id over here",
    "start": "1433039",
    "end": "1436720"
  },
  {
    "text": "so now when there will be a git push from the github actions it will actually be keeping the workflow id same",
    "start": "1442000",
    "end": "1448240"
  },
  {
    "text": "so that it runs the workflow the same workflow whenever the new version of the image gets deployed by",
    "start": "1448240",
    "end": "1453600"
  },
  {
    "text": "flux so the bootstrapping of flux is finished and we can see everything is there",
    "start": "1453600",
    "end": "1459360"
  },
  {
    "text": "so the flux has been bootstrapped cube cdl get parts hyphen and flux system and we can see all the pods are",
    "start": "1459360",
    "end": "1467760"
  },
  {
    "text": "running so what we have done is we have bootstrap flux with some of the components on the repository cube con",
    "start": "1467760",
    "end": "1473919"
  },
  {
    "text": "branch main and the path deploy so the path deploy will be taken and anything that gets deployed or",
    "start": "1473919",
    "end": "1479600"
  },
  {
    "text": "edited for the deploy folder it will apply the the new version of the application on the cluster",
    "start": "1479600",
    "end": "1485200"
  },
  {
    "text": "and in our application we have added few annotations so in the annotations we have bitops as",
    "start": "1485200",
    "end": "1490799"
  },
  {
    "text": "true and the workflow id we just post to github so if i do a get pull it will",
    "start": "1490799",
    "end": "1495840"
  },
  {
    "text": "give me all the latest details so for the deployment we have added some",
    "start": "1495840",
    "end": "1502559"
  },
  {
    "text": "annotations uh which is the git ops enabled and subscribe to this particular workflow so anytime the",
    "start": "1502559",
    "end": "1508640"
  },
  {
    "text": "new version of this application deploys it will trigger this workflow which is our network loss",
    "start": "1508640",
    "end": "1514559"
  },
  {
    "text": "workflow",
    "start": "1514559",
    "end": "1517120"
  },
  {
    "text": "so we can see that the previous pod has been removed and a new pod based on the commits that we have done",
    "start": "1523200",
    "end": "1528960"
  },
  {
    "text": "is already deployed onto the cluster and if you if we go back to our workflow",
    "start": "1528960",
    "end": "1534080"
  },
  {
    "text": "we can see a new workflow has just started trigger and if we again go back to the grafana dashboard we can see",
    "start": "1534080",
    "end": "1540640"
  },
  {
    "text": "it live so we can see this red bar has already appeared and the chaos workflow is starting again so",
    "start": "1540640",
    "end": "1548240"
  },
  {
    "text": "that's how you can use uh litmus chaos using your github actions and continuous",
    "start": "1548240",
    "end": "1554640"
  },
  {
    "text": "deployment continuous integration so all these things will be helpful when you are running for a production",
    "start": "1554640",
    "end": "1559760"
  },
  {
    "text": "environment so you will be having on every commit or on a specific commit on specific action you can run various different workflows",
    "start": "1559760",
    "end": "1566159"
  },
  {
    "text": "and your github repository acts as a single source of truth which has all the workflows that you created so even if",
    "start": "1566159",
    "end": "1571679"
  },
  {
    "text": "your database component goes down you still have the workflows and if you edit anything from this workflows the",
    "start": "1571679",
    "end": "1577200"
  },
  {
    "text": "other workflow will automatically be updated so that's it for this demo hope you like",
    "start": "1577200",
    "end": "1582559"
  },
  {
    "text": "it please try it and uh let us know how uh how you work with this particular demo siam that was awesome",
    "start": "1582559",
    "end": "1589360"
  },
  {
    "text": "um it did look like we went through a lot of things in that demo so let me see if i can",
    "start": "1589360",
    "end": "1594640"
  },
  {
    "text": "uh you know break it down and see if i can get this right so we had an application that we",
    "start": "1594640",
    "end": "1600000"
  },
  {
    "text": "deployed um and then we we ran litmus 2.0 uh on the cluster and",
    "start": "1600000",
    "end": "1605039"
  },
  {
    "text": "we decided to run the pod network network gloss experiment so we ran that",
    "start": "1605039",
    "end": "1610559"
  },
  {
    "text": "a couple of times just to make sure it was running uh we saw the output of that in grafana",
    "start": "1610559",
    "end": "1615600"
  },
  {
    "text": "uh that was using prometheus behind the scenes to go and pull um the you know the the the metrics uh",
    "start": "1615600",
    "end": "1622480"
  },
  {
    "text": "from the cluster uh and then uh when if you wonder what when we wanted to run that continuously",
    "start": "1622480",
    "end": "1628880"
  },
  {
    "text": "uh basically meaning uh whenever we did a push to the application uh that was using a",
    "start": "1628880",
    "end": "1634559"
  },
  {
    "text": "github action uh we pushed the image to docker hub et cetera uh and then flux is basically configured",
    "start": "1634559",
    "end": "1641440"
  },
  {
    "text": "to go and you know pull the uh the commit hooks from the deployment from the file",
    "start": "1641440",
    "end": "1646960"
  },
  {
    "text": "file and get um and then flux would rerun the actual litmus experiment again so",
    "start": "1646960",
    "end": "1652320"
  },
  {
    "text": "anytime you pushed your application once it got pushed into into docker hub flux would rerun the",
    "start": "1652320",
    "end": "1658880"
  },
  {
    "text": "um experiment again correct yes we have used the annotations uh",
    "start": "1658880",
    "end": "1666159"
  },
  {
    "text": "so that the subscribed workflow runs so hang on that's awesome",
    "start": "1666159",
    "end": "1673919"
  },
  {
    "text": "yeah and i like it a lot because um you know it allows us to basically tie the",
    "start": "1673919",
    "end": "1680640"
  },
  {
    "text": "the continuous aspect of running a kiosk experiment or chaos verification over and over again",
    "start": "1680640",
    "end": "1686240"
  },
  {
    "text": "so litmus is the actual runner that does the you know chaos in your cluster or chaos for your application",
    "start": "1686240",
    "end": "1692080"
  },
  {
    "text": "but then we're also using flux as well to you know do that in a continuous kind of format that's great all right well",
    "start": "1692080",
    "end": "1700159"
  },
  {
    "text": "uh let's let's wrap up uh you know we we talked through a bunch of things in this specific talk so let's give our",
    "start": "1700159",
    "end": "1705840"
  },
  {
    "text": "recommendations for um just chaos engineering in general",
    "start": "1705840",
    "end": "1710960"
  },
  {
    "text": "so i'll start by saying that the whole idea of chaos engineering is pretty nascent uh it's still",
    "start": "1710960",
    "end": "1716480"
  },
  {
    "text": "you know pretty new um it's kind of like where devops was maybe in like 2009 2010 that time frame",
    "start": "1716480",
    "end": "1723120"
  },
  {
    "text": "where we're still trying to learn and come up with ideas for how a lot of this is going to be",
    "start": "1723120",
    "end": "1728799"
  },
  {
    "text": "implemented it's really important uh to get the basics and fundamentals right of chaos",
    "start": "1728799",
    "end": "1734399"
  },
  {
    "text": "engineering so learn the theory behind it versus you know running to implement uh something specific up front this is",
    "start": "1734399",
    "end": "1742320"
  },
  {
    "text": "like the best time to talk to the maintainers and the practitioners in the in the space that are",
    "start": "1742320",
    "end": "1747840"
  },
  {
    "text": "you know have the ideas um and you know are actually doing a lot of these things in the in the space so come come talk to",
    "start": "1747840",
    "end": "1754399"
  },
  {
    "text": "us uh talk to the folks the litmus folks are all here at kucon um you know it would be great to kind of understand",
    "start": "1754399",
    "end": "1761279"
  },
  {
    "text": "you know their thinking behind the scenes uh probably the my most important",
    "start": "1761279",
    "end": "1767039"
  },
  {
    "text": "recommendation right now uh would be to communicate uh your your experiments because a lot of this is",
    "start": "1767039",
    "end": "1774159"
  },
  {
    "text": "um you know it's recommended to run these tests in production uh but it's also important from an",
    "start": "1774159",
    "end": "1780480"
  },
  {
    "text": "organizational perspective from a team perspective to be able to communicate that hey we are running you",
    "start": "1780480",
    "end": "1785600"
  },
  {
    "text": "know chaos engineering tests um in your cluster on on production for example so you don't get into",
    "start": "1785600",
    "end": "1791200"
  },
  {
    "text": "a weird corporate or uh weird organizational kind of trouble or whatever um so that's that's my big",
    "start": "1791200",
    "end": "1797200"
  },
  {
    "text": "recommendation uh there's a bunch of like uh community stuff uh and community uh groups and meetups that you can join uh",
    "start": "1797200",
    "end": "1804240"
  },
  {
    "text": "put a couple of links in here um and also i talked about theory uh if you want to get the kiosk engineering",
    "start": "1804240",
    "end": "1809600"
  },
  {
    "text": "group book from casey rosenthal uh you can get that at verica dot io slash books",
    "start": "1809600",
    "end": "1814960"
  },
  {
    "text": "or slash book so just to add on to uh kartik's recommendation uh i have some of the things like chaos",
    "start": "1814960",
    "end": "1821520"
  },
  {
    "text": "engineering is expected to grow even more uh so it is new uh but it is growing",
    "start": "1821520",
    "end": "1826720"
  },
  {
    "text": "rapidly with the number of tools with everything that is growing in the cloud native ecosystem and we should work towards continuous",
    "start": "1826720",
    "end": "1833360"
  },
  {
    "text": "chaos as in the demo we have shown uh how with the power of continuous integration continuous delivery",
    "start": "1833360",
    "end": "1838480"
  },
  {
    "text": "and chaos engineering implemented in that so obviously work towards that so that you can have a complete life cycle",
    "start": "1838480",
    "end": "1844559"
  },
  {
    "text": "uh integrated with kiosk engineering so keep an eye on the new tools uh and get involved in the community there",
    "start": "1844559",
    "end": "1850240"
  },
  {
    "text": "are a lot of new tools uh coming up for chaos engineering and the current tools are maturing enough uh to match the needs of the production",
    "start": "1850240",
    "end": "1857120"
  },
  {
    "text": "grade clusters check out for the integrations that will help you in your developer workflows and ci cd workflows like captain is a very",
    "start": "1857120",
    "end": "1863919"
  },
  {
    "text": "good project and captain plus litmus works very well uh octato plus litmus works very well so you can try these out",
    "start": "1863919",
    "end": "1870640"
  },
  {
    "text": "they have a lot of blogs a lot of meetups talks that they have done and others as well awesome and with that",
    "start": "1870640",
    "end": "1877279"
  },
  {
    "text": "that is the end of our talk um you can reach me on twitter at iterationone",
    "start": "1877279",
    "end": "1882880"
  },
  {
    "text": "and then you can reach time on twitter at cyanpotech as well um any last words sam yeah definitely",
    "start": "1882880",
    "end": "1890320"
  },
  {
    "text": "the try out the repository it's public and you can try out the demo and you can try out on any kubernetes",
    "start": "1890320",
    "end": "1895840"
  },
  {
    "text": "cluster as well uh so try it out let us know what you feel about chaos engineering any questions we",
    "start": "1895840",
    "end": "1901279"
  },
  {
    "text": "are happy to help and we are there in the slack channels kubernetes and cf you can reach us out",
    "start": "1901279",
    "end": "1906320"
  },
  {
    "text": "anytime all right thank you folks thank you all",
    "start": "1906320",
    "end": "1912360"
  },
  {
    "text": "bye",
    "start": "1912360",
    "end": "1915360"
  }
]