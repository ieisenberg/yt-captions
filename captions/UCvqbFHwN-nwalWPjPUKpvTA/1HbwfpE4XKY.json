[
  {
    "text": "okay hello and welcome to that there's still space incidentally",
    "start": "160",
    "end": "6000"
  },
  {
    "text": "there's probably another 20 seats if you want to let a few more people in okay we'll see how we go hello and",
    "start": "6000",
    "end": "12400"
  },
  {
    "text": "welcome thank you very much for coming to this talk this is one of the most packed rooms i've ever delivered to",
    "start": "12400",
    "end": "18480"
  },
  {
    "text": "really appreciate you attending when there's so many other high quality talks going on in this slot",
    "start": "18480",
    "end": "24080"
  },
  {
    "text": "thank you i will do my best to complete everything in 35 minutes so i am andy",
    "start": "24080",
    "end": "29119"
  },
  {
    "text": "i'm ceo at control plane we do cloud native security engineering we're very",
    "start": "29119",
    "end": "34160"
  },
  {
    "text": "heavily invested in training the community work in tag security and",
    "start": "34160",
    "end": "39360"
  },
  {
    "text": "everything to do with cncf open sf open source very proud advocates",
    "start": "39360",
    "end": "46320"
  },
  {
    "text": "i have done various things i've written a book which you will hear a little bit about today uh there is a sans course",
    "start": "46320",
    "end": "52079"
  },
  {
    "text": "involved my excellent colleagues also participate in a lot of training and we'll see links to those things too",
    "start": "52079",
    "end": "60320"
  },
  {
    "text": "and this is my pre-eminent co-author mr michael hassenblast solutions architect at aws",
    "start": "60320",
    "end": "66320"
  },
  {
    "text": "and together we wrote to the book hacking kubernetes it is available as a free download the first half as a pdf on",
    "start": "66320",
    "end": "73040"
  },
  {
    "text": "the control plane website and i will give you a whistle stop tour of what we have inside it",
    "start": "73040",
    "end": "80240"
  },
  {
    "text": "so what will we talk about today well it's just a lot of demos and i will do",
    "start": "80240",
    "end": "86320"
  },
  {
    "text": "my best to ensure they all work i'm wired in the demo gods at least don't have the ethereal",
    "start": "86320",
    "end": "92880"
  },
  {
    "text": "wi-fi to contend with so we'll start off looking at how the supply chain gets us into a cluster we",
    "start": "92880",
    "end": "99680"
  },
  {
    "text": "will look at what to do once we're inside a cluster we'll demo a container breakouts by kernel exploitation in the",
    "start": "99680",
    "end": "105439"
  },
  {
    "text": "dirty pipe and we will look at how to take over a cloud account",
    "start": "105439",
    "end": "110960"
  },
  {
    "text": "there is so much prior art in this space thank you to everybody who has participated open sourced spoken written",
    "start": "110960",
    "end": "118000"
  },
  {
    "text": "about these things we stand on the shoulders of giants and these are just a few of the luminaries who have inspired",
    "start": "118000",
    "end": "123439"
  },
  {
    "text": "me and my colleagues to go on this journey so what happens when kubernetes gets",
    "start": "123439",
    "end": "129200"
  },
  {
    "text": "deployed the security team normally panic and that's because somebody like captain",
    "start": "129200",
    "end": "134560"
  },
  {
    "text": "hash jack is all up in their clusters captain hashtag is our eight bit",
    "start": "134560",
    "end": "139680"
  },
  {
    "text": "adversary we're going to threat model and attack on these clusters this is the person who",
    "start": "139680",
    "end": "146000"
  },
  {
    "text": "we're terrified of in this instance but this this talk is called a treasure map why is there a treasure map involved",
    "start": "146000",
    "end": "152959"
  },
  {
    "text": "well this is because from the inside of a pod this is what you might want to look at to try and break out this is",
    "start": "152959",
    "end": "160000"
  },
  {
    "text": "a guide to how we manually pen test pods it's the microcosm of linux inside a",
    "start": "160000",
    "end": "165599"
  },
  {
    "text": "container there's nothing here that is not publicly documented or well known but helping to enumerate the ideas as we",
    "start": "165599",
    "end": "172239"
  },
  {
    "text": "think about exactly where we go from point to point in order to break out of",
    "start": "172239",
    "end": "177680"
  },
  {
    "text": "a container looking for misconfiguration looking for vulnerabilities looking for",
    "start": "177680",
    "end": "183040"
  },
  {
    "text": "anything that can allow us lateral movement or pivoting or a way to further our attack",
    "start": "183040",
    "end": "190879"
  },
  {
    "text": "okay so before we begin for any sensible system",
    "start": "191360",
    "end": "196879"
  },
  {
    "text": "we look to implement controls to defend against our attackers who are our attackers is the important",
    "start": "196879",
    "end": "203040"
  },
  {
    "text": "question in this case we will model with uh with captain hashtag",
    "start": "203040",
    "end": "208799"
  },
  {
    "text": "why is this well first of all we want to understand what are their capabilities what potentially could they do to us",
    "start": "208799",
    "end": "216000"
  },
  {
    "text": "and by extension what are their intentions why would they want to do these things",
    "start": "216000",
    "end": "221680"
  },
  {
    "text": "this is a process of threat modelling it is a personal passion and crusade of mine to ensure that threat modeling becomes",
    "start": "221680",
    "end": "228640"
  },
  {
    "text": "part of the infrastructure deployments process we've seen this in application security where it's a more established",
    "start": "228640",
    "end": "234239"
  },
  {
    "text": "process if this is of interest to you tag security are doing a lot of work in this space when we tag security uh",
    "start": "234239",
    "end": "242560"
  },
  {
    "text": "when a project goes to graduation in the cncf it undergoes an audit from tag security and we look at the security",
    "start": "242560",
    "end": "248959"
  },
  {
    "text": "processes what's it supposed to do what happens in the case of compromise which makes it easier to deploy controls",
    "start": "248959",
    "end": "255200"
  },
  {
    "text": "and i'll give you a whistle stop tour of what that looks like if you're interested there is plenty of work going on and we're a very open and welcoming",
    "start": "255200",
    "end": "261840"
  },
  {
    "text": "community plenty more on the website so the adversarial matrix if somebody's",
    "start": "261840",
    "end": "268080"
  },
  {
    "text": "going to attack us who are they what do they want and how will they do it",
    "start": "268080",
    "end": "273440"
  },
  {
    "text": "so we start off with a casual vandal script kitty me as a younger version of myself perhaps",
    "start": "275120",
    "end": "281280"
  },
  {
    "text": "just interested to know what happens when you port scan restricted ranges and find open insecure",
    "start": "281280",
    "end": "287919"
  },
  {
    "text": "things and may not be a malicious intent but there may be malicious side effects from misunderstanding or general",
    "start": "287919",
    "end": "293919"
  },
  {
    "text": "tinkering generally we should not get pwned by somebody of this description because if",
    "start": "293919",
    "end": "299360"
  },
  {
    "text": "there is a public cve available for it or metasploits or another security tool",
    "start": "299360",
    "end": "304479"
  },
  {
    "text": "is able to run an automated scan and exploit it well we should be doing that ourselves",
    "start": "304479",
    "end": "309840"
  },
  {
    "text": "to ensure that no drive by attacker has easy access to our systems",
    "start": "309840",
    "end": "315199"
  },
  {
    "text": "we have motivated individuals but as we progress we're more concerned with insiders",
    "start": "315199",
    "end": "321520"
  },
  {
    "text": "a finger in the air guess is about every 40 000 employees for a major organization has at least one insider",
    "start": "321520",
    "end": "327440"
  },
  {
    "text": "working for another organization another nation state potentially",
    "start": "327440",
    "end": "333120"
  },
  {
    "text": "things get worse when we look at cloud services insiders of course because we have to trust something we trust our",
    "start": "333120",
    "end": "339520"
  },
  {
    "text": "operating systems we trust the providers of the public certificates that we look at for our uh",
    "start": "339520",
    "end": "345840"
  },
  {
    "text": "for our roots difficult authorities for internet encryption our tls etc we trust",
    "start": "345840",
    "end": "351759"
  },
  {
    "text": "our hardware providers we have to trust our cloud services providers to some extent and we've seen",
    "start": "351759",
    "end": "356880"
  },
  {
    "text": "in cases like the capital one breach that inside information can lead to a more uh devastating impact for customers",
    "start": "356880",
    "end": "364560"
  },
  {
    "text": "but what we're actually caring about here in captain hashtag's case is the organized crime syndicate potentially",
    "start": "364560",
    "end": "369759"
  },
  {
    "text": "state affiliated sponsored but not directly linked these individuals or groups have very",
    "start": "369759",
    "end": "376880"
  },
  {
    "text": "wide ranging capabilities we've seen a lot of ransomware kick off in the last few years cyber insurance has become",
    "start": "376880",
    "end": "382000"
  },
  {
    "text": "very expensive because these groups are talented they're targeted but they will use drive",
    "start": "382000",
    "end": "388080"
  },
  {
    "text": "by attacks so we do have the ability to raise the bar and ensure that we test our configuration and do not get pwned right",
    "start": "388080",
    "end": "396160"
  },
  {
    "text": "so into demos very soon attackers think in graphs defenders thinking lists what",
    "start": "396160",
    "end": "401680"
  },
  {
    "text": "does this mean well a defender has to tick every single line on their checklist to make sure",
    "start": "401680",
    "end": "407759"
  },
  {
    "text": "that there is no in the armor no vulnerability no open door in the castle whereas an attacker just has to pivot",
    "start": "407759",
    "end": "415120"
  },
  {
    "text": "through various things they'd land somewhere they observe the visible horizon and they go for the next thing",
    "start": "415120",
    "end": "420160"
  },
  {
    "text": "it doesn't work the next thing maybe the third thing works it's another foot forward into the system so we have to be mindful that there is a",
    "start": "420160",
    "end": "426479"
  },
  {
    "text": "different mindset from an attacking and defending perspective this is where we get to attack trees these give us a view",
    "start": "426479",
    "end": "433199"
  },
  {
    "text": "of how we might pivot through a system and then by extension they give us an opportunity to cut the branches of the",
    "start": "433199",
    "end": "439280"
  },
  {
    "text": "tree with specific controls that give us a visual representation of the security of our system or the",
    "start": "439280",
    "end": "445599"
  },
  {
    "text": "supposed security of our system this is one from the financial services user group again",
    "start": "445599",
    "end": "451680"
  },
  {
    "text": "we do this for o'reilly there's a lot of open source material around this my excellent colleague lewis stellenperry",
    "start": "451680",
    "end": "458400"
  },
  {
    "text": "did a fabulous talk on this yesterday strongly recommended to go back and watch it was one of the most funny and",
    "start": "458400",
    "end": "463759"
  },
  {
    "text": "insightful talks on threat modeling it's possible to give and it's a very strong recommend",
    "start": "463759",
    "end": "469039"
  },
  {
    "text": "so how do we do cloud native security threat models are great but it's time to get our hands dirty",
    "start": "469039",
    "end": "476879"
  },
  {
    "text": "let's rock and roll okay so code to cloud attack patterns this is from the kubernetes documentation we",
    "start": "477280",
    "end": "484240"
  },
  {
    "text": "begin with the code this is where our business value is delivered this is what developers change frequently this is",
    "start": "484240",
    "end": "490000"
  },
  {
    "text": "where remote code execution might occur if we have a web facing sockets if we have a web server with either serving",
    "start": "490000",
    "end": "496639"
  },
  {
    "text": "some static code or serving some dynamic application there is the opportunity for",
    "start": "496639",
    "end": "502319"
  },
  {
    "text": "untrusted code to execute in the context of our process we're running a process in a container if we receive data from",
    "start": "502319",
    "end": "508639"
  },
  {
    "text": "externally that's not handled correctly we get a remote code execution we've seen this in various different flavors",
    "start": "508639",
    "end": "514240"
  },
  {
    "text": "log 4j the log for shell attack classic remote code execution passing a string",
    "start": "514240",
    "end": "519360"
  },
  {
    "text": "executed in a context that was unexpected by the server security side effect so the first thing",
    "start": "519360",
    "end": "524720"
  },
  {
    "text": "we need to do is get a remote code execution now there is another way to do this and that is the supply chain we've heard",
    "start": "524720",
    "end": "530880"
  },
  {
    "text": "so much about why the supply chain is dangerous but let's exploit it quickly so everything is software supply chain",
    "start": "530880",
    "end": "537200"
  },
  {
    "text": "explained like five when we produce software someone else consumes it and we have a chain of producers and",
    "start": "537200",
    "end": "543440"
  },
  {
    "text": "consumers this means that an open source software developer is implicitly part of the",
    "start": "543440",
    "end": "548800"
  },
  {
    "text": "supply chain of all of our software but anything that they consume is also",
    "start": "548800",
    "end": "554080"
  },
  {
    "text": "part of the consumer producer transitive difficult to reasonable dependency graph",
    "start": "554080",
    "end": "559279"
  },
  {
    "text": "so what we're looking at here is bob alice bob charlie",
    "start": "559279",
    "end": "564560"
  },
  {
    "text": "production if we can insert malicious code into the dependency graph of a supply chain we",
    "start": "564560",
    "end": "570480"
  },
  {
    "text": "can run our own code on someone else's hardware on someone else's kubernetes cluster very specifically",
    "start": "570480",
    "end": "578959"
  },
  {
    "text": "how do we attack well we can do it in lots of different ways we can get a source code we can affect a supplier",
    "start": "578959",
    "end": "584000"
  },
  {
    "text": "which is a very popular way of doing things recently especially when we see things like octa another supply chain attack where in that case a help desk",
    "start": "584000",
    "end": "591360"
  },
  {
    "text": "provider was the one compromised or we get into the runtime environment",
    "start": "591360",
    "end": "597600"
  },
  {
    "text": "oh wonderful that's uh let's try that again",
    "start": "597600",
    "end": "603120"
  },
  {
    "text": "mmm i seem to have lost control of",
    "start": "603519",
    "end": "609120"
  },
  {
    "text": "ah rat bags oh wonderful everything's frozen so this will be an interesting reboot",
    "start": "609120",
    "end": "616720"
  },
  {
    "text": "i will continue from my phone while i restart the machine",
    "start": "616720",
    "end": "621279"
  },
  {
    "text": "okay so just in time for the supply chain so what we're going to see in this next demo is",
    "start": "624000",
    "end": "629760"
  },
  {
    "text": "mpm the javascript registry what we have there is many small decomposed packages java pushes this",
    "start": "629760",
    "end": "636720"
  },
  {
    "text": "idea because sorry javascript pushes this idea because the decomposition of packages is",
    "start": "636720",
    "end": "642800"
  },
  {
    "text": "supposed to be an easy way to build and reuse code he says just going to reset this again",
    "start": "642800",
    "end": "650000"
  },
  {
    "text": "what this means is that we have maybe you could get the slides off and we can try that way",
    "start": "650000",
    "end": "655839"
  },
  {
    "text": "what this means with npm is that we have a huge proliferation of open source packages now specifically with the npm",
    "start": "655839",
    "end": "663040"
  },
  {
    "text": "installed json the package json we have the ability to do a pre-commit hook",
    "start": "663040",
    "end": "671720"
  },
  {
    "text": "that pre-commit hook allows us to execute code in this case what that code will do",
    "start": "677200",
    "end": "685120"
  },
  {
    "text": "is what that code will do is enumerate the contents of our local file system when",
    "start": "685279",
    "end": "691519"
  },
  {
    "text": "we're installing a package we are installing with the permissions of the user that is doing the execution so in this case this",
    "start": "691519",
    "end": "698000"
  },
  {
    "text": "will be me and what that means is that the contents",
    "start": "698000",
    "end": "703519"
  },
  {
    "text": "of my local file system are available wonderful",
    "start": "703519",
    "end": "709120"
  },
  {
    "text": "112. so the contents of the local file system",
    "start": "712399",
    "end": "717519"
  },
  {
    "text": "are available for enumeration for anything that can execute in that environment this is awfully good fun uh so",
    "start": "717519",
    "end": "726800"
  },
  {
    "text": "oops oh that's not the right password for this machine",
    "start": "729279",
    "end": "736720"
  },
  {
    "text": "so what do i have in my local environment that would be of interest to an attacker this would also be interesting okay that's got the right",
    "start": "738480",
    "end": "745279"
  },
  {
    "text": "configuration up uh those things include my ssh keys my gpg keys any aws or g cloud tokens i",
    "start": "745279",
    "end": "753600"
  },
  {
    "text": "have if i'm using oauth or an odc i get a session token that is also stored on",
    "start": "753600",
    "end": "759040"
  },
  {
    "text": "my local file system",
    "start": "759040",
    "end": "762160"
  },
  {
    "text": "and that is what the demo will look like ever so shortly",
    "start": "767200",
    "end": "772439"
  },
  {
    "text": "and if we go into",
    "start": "775360",
    "end": "778720"
  },
  {
    "text": "that is in here",
    "start": "785360",
    "end": "790560"
  },
  {
    "text": "okay this looks like we might almost be there",
    "start": "794959",
    "end": "800120"
  },
  {
    "text": "okay so what we are about to see is",
    "start": "806160",
    "end": "811560"
  },
  {
    "text": "and npm supply chain attack uh that's not it",
    "start": "814480",
    "end": "821279"
  },
  {
    "text": "wowzers okay we are there so",
    "start": "825600",
    "end": "830079"
  },
  {
    "text": "all right i think maybe possibly this will work the demo gods man i feel they crucified",
    "start": "832320",
    "end": "839279"
  },
  {
    "text": "me this time all right so what are we going to do let's have a look at the package.json package.json",
    "start": "839279",
    "end": "845600"
  },
  {
    "text": "okay here we see our scripts pre-install exfil the danger here of course is potentially exfiltration let's do an npm",
    "start": "845600",
    "end": "852800"
  },
  {
    "text": "install of this package i'm not hosting this on the public registry of course because it would be taken down",
    "start": "852800",
    "end": "858240"
  },
  {
    "text": "what happens uh what exactly happens there",
    "start": "858240",
    "end": "865519"
  },
  {
    "text": "something is not on the registry what have i done",
    "start": "865680",
    "end": "870360"
  },
  {
    "text": "oh sorry install here not i okay finally so this is now executing my",
    "start": "873839",
    "end": "881199"
  },
  {
    "text": "pre-commit hook if i pull this down without reading the source code we're essentially piping to bash and at this",
    "start": "881199",
    "end": "887440"
  },
  {
    "text": "point i've enumerated the contents of my local file system these are ssh keys i",
    "start": "887440",
    "end": "892560"
  },
  {
    "text": "could install miners okay and with this timing i'm going to",
    "start": "892560",
    "end": "897600"
  },
  {
    "text": "move on a little bit quickly so what just happens i hear you ask",
    "start": "897600",
    "end": "902880"
  },
  {
    "text": "uh i want to go to we pulled something from a public",
    "start": "902880",
    "end": "908880"
  },
  {
    "text": "registry we didn't read the source code before installing it and it was able to execute its own untrusted code in the",
    "start": "908880",
    "end": "915519"
  },
  {
    "text": "context of our application",
    "start": "915519",
    "end": "920959"
  },
  {
    "text": "it must have been this slide okay so that was what i was explaining",
    "start": "923519",
    "end": "929759"
  },
  {
    "text": "right so we ran this backdoor open source package pre-installed hooked abuser's privilege profit",
    "start": "929759",
    "end": "935519"
  },
  {
    "text": "so what could this actually look like with uh with an end to end like running this",
    "start": "935519",
    "end": "941920"
  },
  {
    "text": "remote code execution down at the bottom here we have the malicious code into a target library so we're talking about",
    "start": "941920",
    "end": "947600"
  },
  {
    "text": "npm here but we can do this for any operating sorry any application package",
    "start": "947600",
    "end": "953440"
  },
  {
    "text": "once that gets built into developer code and is running in our kubernetes clusters we can fire a reverse shell a",
    "start": "953440",
    "end": "959680"
  },
  {
    "text": "reverse shell busts outwards through a firewall so instead of me sshinging onto a server the server ssh is onto an open",
    "start": "959680",
    "end": "967199"
  },
  {
    "text": "port that i have on a public ip somewhere",
    "start": "967199",
    "end": "972480"
  },
  {
    "text": "and this is when captain hash jack in his nefarious sailboat there is able to get access to our systems",
    "start": "972480",
    "end": "979920"
  },
  {
    "text": "so how do we fix this well we probably want to have 2fa on every type of token that we use",
    "start": "979920",
    "end": "985120"
  },
  {
    "text": "plain text credentials of course are easily reusable we see these attacks more against crypto",
    "start": "985120",
    "end": "990560"
  },
  {
    "text": "wallets because of course that's easily fungible i guess or transferable value",
    "start": "990560",
    "end": "996480"
  },
  {
    "text": "and signing provides some value there okay so now we'll move on to the supply chain reverse shell",
    "start": "996480",
    "end": "1002639"
  },
  {
    "text": "this is the concrete example of the previous version so captain jack wants to put his code into our dependencies",
    "start": "1002639",
    "end": "1008639"
  },
  {
    "text": "and we get those running in production this is the reverse shell idea so we start with",
    "start": "1008639",
    "end": "1014720"
  },
  {
    "text": "uh attacking the victim's machine we're running code in their context that they do not expect",
    "start": "1014720",
    "end": "1021759"
  },
  {
    "text": "we get a reverse tcp connection so this busts outwards from a firewall this is also the log4j problem unless our",
    "start": "1021759",
    "end": "1027839"
  },
  {
    "text": "firewalls are monitoring or are restricted which is not always the case or difficult to do then we can get to a",
    "start": "1027839",
    "end": "1035678"
  },
  {
    "text": "potentially unknown external location this is a tcp version of the attack there's a dns version as well of course",
    "start": "1035679",
    "end": "1041839"
  },
  {
    "text": "there are other slightly more nefarious ways to do it but it's very difficult to block so",
    "start": "1041839",
    "end": "1047438"
  },
  {
    "text": "similar to previous we will use this malicious backdoor image in a public container registry",
    "start": "1047439",
    "end": "1054240"
  },
  {
    "text": "that will be run inside our cluster and this will then fire the",
    "start": "1054240",
    "end": "1059440"
  },
  {
    "text": "reverse shell where we connect courtesy of duffy one of the sig honk luminers we will also exploit a misconfiguration in",
    "start": "1059440",
    "end": "1066080"
  },
  {
    "text": "there to if we run this bust out and route the node that the container is running on because as you can see we're",
    "start": "1066080",
    "end": "1072240"
  },
  {
    "text": "using host pid and privileged and this is why it is bad okay",
    "start": "1072240",
    "end": "1079080"
  },
  {
    "text": "so now we go",
    "start": "1082160",
    "end": "1085600"
  },
  {
    "text": "and two",
    "start": "1087440",
    "end": "1091000"
  },
  {
    "text": "right so in uh in classic uh british blue peter style here is one i prepared earlier",
    "start": "1096960",
    "end": "1105840"
  },
  {
    "text": "you may not believe me by judging by the previous talents all right so what are we going to do first of all",
    "start": "1105840",
    "end": "1111840"
  },
  {
    "text": "we're going to bounce through a public endpoint called ngrok so what we're doing here is we're getting a free ip",
    "start": "1111840",
    "end": "1118880"
  },
  {
    "text": "on the public internet with the ports at the bottom here we see it's probably a little large at the bottom here we see a",
    "start": "1118880",
    "end": "1125120"
  },
  {
    "text": "log of what's going on and at the top here we are going to run",
    "start": "1125120",
    "end": "1130160"
  },
  {
    "text": "which version will be on i guess definitely more recent um we're going to run",
    "start": "1130160",
    "end": "1135679"
  },
  {
    "text": "this so we'll run a reverse shell this is the location of the ip and the port that we're going to fly back to",
    "start": "1135679",
    "end": "1142400"
  },
  {
    "text": "the deal with reverse shells is that bash contains a virtual dev tcp endpoint which is really easy to hook a shell to",
    "start": "1142400",
    "end": "1149120"
  },
  {
    "text": "and get this reverse shell action it's probably one of the worst decisions in the history of",
    "start": "1149120",
    "end": "1154400"
  },
  {
    "text": "of computing and at this point we're just going to deploy something malicious so this will look",
    "start": "1154400",
    "end": "1159840"
  },
  {
    "text": "a little bit like cool maybe it is the other one then",
    "start": "1159840",
    "end": "1165840"
  },
  {
    "text": "or possibly i've got it that is actually",
    "start": "1166400",
    "end": "1173760"
  },
  {
    "text": "nice",
    "start": "1175039",
    "end": "1178039"
  },
  {
    "text": "mm-hmm okay let's try the other version of this lines right there",
    "start": "1183919",
    "end": "1192279"
  },
  {
    "text": "sweet so that worked what we're seeing here is the reverse shell catcher boom that's",
    "start": "1199760",
    "end": "1205679"
  },
  {
    "text": "a great relief cheers [Applause]",
    "start": "1205679",
    "end": "1215039"
  },
  {
    "text": "okay so what we've seen there is we've deployed this malicious image with a poorly configured security",
    "start": "1215039",
    "end": "1221200"
  },
  {
    "text": "context and this is bounced through that public ip back to me standing waiting for it",
    "start": "1221200",
    "end": "1228320"
  },
  {
    "text": "and i've now got a connection into this shell sorry into that pod so at this point uh running his route obviously",
    "start": "1228320",
    "end": "1234559"
  },
  {
    "text": "that's a horrendous idea are we privileged well what's the contents of dev we can see everything",
    "start": "1234559",
    "end": "1240080"
  },
  {
    "text": "so uh at this point we can escalate mount the host file system uh use an nscenter attack",
    "start": "1240080",
    "end": "1246880"
  },
  {
    "text": "uh let's just have a look at that quickly so ella center is the namespace enter everything in uh in linux terms is the",
    "start": "1246880",
    "end": "1254960"
  },
  {
    "text": "namespace and we're gonna jump in and at this point we can now see",
    "start": "1254960",
    "end": "1260799"
  },
  {
    "text": "uh the contents of roots on the host because we've mounted in he says",
    "start": "1260799",
    "end": "1267200"
  },
  {
    "text": "yes there we go so that's the host file system and we can also see the host process table wonderful those are all things we",
    "start": "1269760",
    "end": "1276799"
  },
  {
    "text": "should never be able to see from inside a container but of course because we've entered those host name spaces we've broken the abstraction",
    "start": "1276799",
    "end": "1282880"
  },
  {
    "text": "all right let's keep on moving so what did we just see",
    "start": "1282880",
    "end": "1290679"
  },
  {
    "text": "we saw that malicious image that was pushed into a public location was then used",
    "start": "1290880",
    "end": "1296000"
  },
  {
    "text": "to run in production when it ran it fired that remote reverse shell back to a place that i controlled",
    "start": "1296000",
    "end": "1302000"
  },
  {
    "text": "and that gave me access to the pod from externally at that point again it's",
    "start": "1302000",
    "end": "1307200"
  },
  {
    "text": "observing the visible horizon escalating continuing to see are there data stores is there private information",
    "start": "1307200",
    "end": "1312640"
  },
  {
    "text": "are there keys are there quant algorithms that i can steal it's a bad day when someone has that initial foothold the remote code",
    "start": "1312640",
    "end": "1319440"
  },
  {
    "text": "execution inside your systems because then more nefarious things can",
    "start": "1319440",
    "end": "1324720"
  },
  {
    "text": "happen okay so if that wasn't stressful enough we will now try a kernel exploit it's",
    "start": "1324720",
    "end": "1332320"
  },
  {
    "text": "not a container escape it's a process that wants to be free",
    "start": "1332320",
    "end": "1337200"
  },
  {
    "text": "courtesy of another sick honk luminary okay so what is a container escape",
    "start": "1339039",
    "end": "1344640"
  },
  {
    "text": "on a container we're sharing a kernel a virtual machine bootstraps the bios it emulates the full end-to-end bootstrap",
    "start": "1344640",
    "end": "1351679"
  },
  {
    "text": "of a system which is why it's slower it's also a different security model because it's using",
    "start": "1351679",
    "end": "1357919"
  },
  {
    "text": "things like hardware extensions and it traps instructions that go down to the cpu and handles them slightly",
    "start": "1357919",
    "end": "1363200"
  },
  {
    "text": "differently depending on context it can be more secure there have been escapes from everything and nothing is",
    "start": "1363200",
    "end": "1368240"
  },
  {
    "text": "entirely secure the compromise we make with a container is that in order to run very quickly and",
    "start": "1368240",
    "end": "1375679"
  },
  {
    "text": "to bin pack many containers onto one host we start a process on a running kernel so we're sharing a single kernel",
    "start": "1375679",
    "end": "1382080"
  },
  {
    "text": "amongst all the processes on a host this allows us to start very quickly but it changes our security model and as we see",
    "start": "1382080",
    "end": "1388880"
  },
  {
    "text": "in this case those host resources should be protected they shouldn't be available the point of",
    "start": "1388880",
    "end": "1395039"
  },
  {
    "text": "containerization or virtualization is to abstract those away and not make them available now",
    "start": "1395039",
    "end": "1401440"
  },
  {
    "text": "many people have said containers are not a security boundary well many things are not a security boundary but in real",
    "start": "1401440",
    "end": "1407360"
  },
  {
    "text": "world practical use that is unfortunately what we find ourselves with so while they're not a security",
    "start": "1407360",
    "end": "1412480"
  },
  {
    "text": "boundary safe for maybe the very highest level of data classification they can certainly be more secure than",
    "start": "1412480",
    "end": "1418080"
  },
  {
    "text": "vms because we run a single process per container and then we have the opportunity to run granular fine-grained",
    "start": "1418080",
    "end": "1424240"
  },
  {
    "text": "process restriction controls setcomp app armor sd linux our standard suite of capabilities that come with linux and",
    "start": "1424240",
    "end": "1430960"
  },
  {
    "text": "the extended controls that come with linux instead of running everything in one monolithic virtual machine",
    "start": "1430960",
    "end": "1436159"
  },
  {
    "text": "everything is down to use case and configuration micro vms provide an intermediate version of this where we",
    "start": "1436159",
    "end": "1441679"
  },
  {
    "text": "get some level of hardware abstraction with a very fast boot up and still oci compliance",
    "start": "1441679",
    "end": "1448320"
  },
  {
    "text": "this is a list of recent container vulnerability escapes it's been a busy year courtesy of chris nova again this",
    "start": "1448400",
    "end": "1455200"
  },
  {
    "text": "is where the contention lies the kernel is not a security boundary but then really the cpu is not a security",
    "start": "1455200",
    "end": "1460720"
  },
  {
    "text": "boundary as we've seen are we going to just decompose everything onto uh onto computers under people's desks like",
    "start": "1460720",
    "end": "1467760"
  },
  {
    "text": "we used to do no we still have to move with the time so there is some difference here",
    "start": "1467760",
    "end": "1473039"
  },
  {
    "text": "this is the view of namespaces i won't go into this too much more but suffice to say we are sharing a local network",
    "start": "1473039",
    "end": "1479919"
  },
  {
    "text": "between our container workloads and a pod the c groups mount and process name spaces should be individual but then we",
    "start": "1479919",
    "end": "1485919"
  },
  {
    "text": "get to share storage network and a couple of other things plenty more on this in the book c groups",
    "start": "1485919",
    "end": "1492000"
  },
  {
    "text": "v2 come with some better security features they work in a different way to see groups v1 they're really hyper",
    "start": "1492000",
    "end": "1497600"
  },
  {
    "text": "complex but provide a lot of utility see v1 very escapable so on to dirty pipe this is the cv",
    "start": "1497600",
    "end": "1506080"
  },
  {
    "text": "that was dropped with about a week's notice which is not much time for people to patch systems",
    "start": "1506080",
    "end": "1511520"
  },
  {
    "text": "it is a dirty page vulnerability so that means it permits the injection",
    "start": "1511520",
    "end": "1517120"
  },
  {
    "text": "of code into processed memory that is owned by roots so an untrusted user can scribble some instructions",
    "start": "1517120",
    "end": "1524400"
  },
  {
    "text": "stick them into a piece of code the root is going to run executable memory and root will run those things if the code",
    "start": "1524400",
    "end": "1530559"
  },
  {
    "text": "that we stick in there is another reverse shell back to where we're sitting on the same box",
    "start": "1530559",
    "end": "1536080"
  },
  {
    "text": "we have root access to the box by virtue of this escape",
    "start": "1536080",
    "end": "1541960"
  },
  {
    "text": "it's got a specific nuance of foible which is you can't write the first few bites so what this exploit does courtesy",
    "start": "1542320",
    "end": "1549520"
  },
  {
    "text": "of my friend and colleague james cleverley promise is exploit the proc self exe attack",
    "start": "1549520",
    "end": "1556640"
  },
  {
    "text": "writes a small piece of assembler to build assembly to build something",
    "start": "1556640",
    "end": "1562400"
  },
  {
    "text": "smaller than 4k which fires this reverse shell back okay let's break out of a container",
    "start": "1562400",
    "end": "1571320"
  },
  {
    "text": "so this is all virtual machine based",
    "start": "1571840",
    "end": "1577440"
  },
  {
    "text": "let's just oh sorry one second",
    "start": "1577440",
    "end": "1584120"
  },
  {
    "text": "let's get out of there",
    "start": "1584159",
    "end": "1587200"
  },
  {
    "text": "okay so as you see we will hmm",
    "start": "1589200",
    "end": "1594400"
  },
  {
    "text": "okay this is actually provisioning a vagrant box so that might take one second because uh",
    "start": "1594400",
    "end": "1600720"
  },
  {
    "text": "this reverse shell concept is kind of fundamental to a lot of a lot of attacks because it's really very useful what",
    "start": "1600720",
    "end": "1605840"
  },
  {
    "text": "we're doing is we start the container we open our socket waiting as the",
    "start": "1605840",
    "end": "1610880"
  },
  {
    "text": "unprivileged user for root to connect back to our reverse shell but instead of going across the internet we're just",
    "start": "1610880",
    "end": "1616000"
  },
  {
    "text": "using the primary network adapter of the host and this is because in this case we're",
    "start": "1616000",
    "end": "1622720"
  },
  {
    "text": "not firewalling the or we're not using okay",
    "start": "1622720",
    "end": "1629039"
  },
  {
    "text": "we're not preventing network traffic between the container network across the container bridge onto the primary adapter of the host",
    "start": "1629039",
    "end": "1635919"
  },
  {
    "text": "so sweet right",
    "start": "1635919",
    "end": "1642080"
  },
  {
    "text": "so what have we got here uh first of all let's check the kernel",
    "start": "1642080",
    "end": "1647520"
  },
  {
    "text": "version we're on a vulnerable kernel excellent let's go and have a look at what we've",
    "start": "1647520",
    "end": "1653919"
  },
  {
    "text": "actually got in terms of code we have",
    "start": "1653919",
    "end": "1659919"
  },
  {
    "text": "uh the run c small dot madam so",
    "start": "1659919",
    "end": "1665600"
  },
  {
    "text": "ultimately here we are using the elf header and we'll ignore most of this but what",
    "start": "1665600",
    "end": "1672080"
  },
  {
    "text": "we care about here is this is our good old reverse shell we're going to insert this base64 code",
    "start": "1672080",
    "end": "1678240"
  },
  {
    "text": "into the run c binary on base64 and it looks like that",
    "start": "1678240",
    "end": "1684000"
  },
  {
    "text": "uh two to five dev tcp and we've got that same reverse shell again",
    "start": "1684000",
    "end": "1689679"
  },
  {
    "text": "and uh and with any luck off we go okay so",
    "start": "1689840",
    "end": "1695039"
  },
  {
    "text": "we have built the thing and now check who we are we are vagrant an",
    "start": "1695039",
    "end": "1700320"
  },
  {
    "text": "unprivileged user and let's run this okay so we're now listening",
    "start": "1700320",
    "end": "1707279"
  },
  {
    "text": "we have executed and i will just check that it runs into me oh there we go wonderful so we're now roots so what's",
    "start": "1707279",
    "end": "1713600"
  },
  {
    "text": "happened there is by running this exploit and injecting",
    "start": "1713600",
    "end": "1719200"
  },
  {
    "text": "this code we've fired that reverse shell back and",
    "start": "1719200",
    "end": "1724960"
  },
  {
    "text": "interestingly it's dumped us into the file system location that the mount namespace was mounted from so of course",
    "start": "1724960",
    "end": "1732880"
  },
  {
    "text": "on a container and the processes inside it have to exist on the host we're running on a shared kernel but we paint",
    "start": "1732880",
    "end": "1739679"
  },
  {
    "text": "this picture for the container that says you can only see what the colonel wants you to see in this case you're the only",
    "start": "1739679",
    "end": "1745360"
  },
  {
    "text": "special process running on the host here now that we've broken out we can see that the abstraction has been shattered",
    "start": "1745360",
    "end": "1750960"
  },
  {
    "text": "and we dropped into the container the runtime location where",
    "start": "1750960",
    "end": "1756320"
  },
  {
    "text": "this image is and we can see the contents of the",
    "start": "1756320",
    "end": "1761919"
  },
  {
    "text": "uh of the image itself what is the where perhaps",
    "start": "1761919",
    "end": "1769600"
  },
  {
    "text": "what is the upshot of this well at this point we have got access to for example the cubelets and we can",
    "start": "1769600",
    "end": "1777520"
  },
  {
    "text": "we can root the whole system so the idea here really is to use the container cloud native paradigm of constantly",
    "start": "1777520",
    "end": "1783360"
  },
  {
    "text": "rebuilding having fast deployment pipelines and using our ci cd to ensure that we're always on the latest image",
    "start": "1783360",
    "end": "1789440"
  },
  {
    "text": "but this is a kernel vulnerability so it's in the host system is the same thing our ami bakery or our vm golden",
    "start": "1789440",
    "end": "1796240"
  },
  {
    "text": "image should have a well oiled pipeline so that we can ship patches as soon as they arrive in this case as quickly as",
    "start": "1796240",
    "end": "1803679"
  },
  {
    "text": "is necessary okay so we are now out on the host we've broken out of a container",
    "start": "1803679",
    "end": "1808720"
  },
  {
    "text": "and we sat on the host file system what do we want to do next attack the cubelets here is a high-level",
    "start": "1808720",
    "end": "1814559"
  },
  {
    "text": "view we can see that various things from the node root are exposed into the the node",
    "start": "1814559",
    "end": "1820840"
  },
  {
    "text": "user and by that we're talking about the workload that's running there so what do we see",
    "start": "1820840",
    "end": "1826960"
  },
  {
    "text": "well we've got completed runtime the storage the orchestrator injected environment variables and the sequencing",
    "start": "1826960",
    "end": "1832559"
  },
  {
    "text": "config maps now again everything that's mounted into the container must exist on the host and one of those things is",
    "start": "1832559",
    "end": "1839760"
  },
  {
    "text": "secrets when secrets are pulled from the cube from the kubernetes api by the cubelet",
    "start": "1839760",
    "end": "1845840"
  },
  {
    "text": "the api will verify that the node is running the workload that is authorized to pull those secrets you can't just",
    "start": "1845840",
    "end": "1852080"
  },
  {
    "text": "enumerate everything as long as the node authorized plug-in is correctly configured",
    "start": "1852080",
    "end": "1857200"
  },
  {
    "text": "so in this case we are going to",
    "start": "1857200",
    "end": "1863600"
  },
  {
    "text": "from the cubelet host so we've routed the cubelet we'll enumerate the file system find out where the service accounts are",
    "start": "1863600",
    "end": "1869840"
  },
  {
    "text": "and exploit the stolen service accounts",
    "start": "1869840",
    "end": "1874398"
  },
  {
    "text": "he says let's get out of there",
    "start": "1875760",
    "end": "1880320"
  },
  {
    "text": "this is supposed to be set up beforehand i apologize there we go all right so",
    "start": "1880799",
    "end": "1886080"
  },
  {
    "text": "let's make sure that everything is clean that is how the sausage is made",
    "start": "1888399",
    "end": "1895440"
  },
  {
    "text": "maybe i'll just finish it here so in this case",
    "start": "1895440",
    "end": "1900640"
  },
  {
    "text": "we've already achieved an exploit of the host system so instead of reusing the same container",
    "start": "1900640",
    "end": "1906960"
  },
  {
    "text": "i'm just going to move into into the next system here and",
    "start": "1906960",
    "end": "1914080"
  },
  {
    "text": "networking may be problematic we're getting there sweet okay we're there so",
    "start": "1916880",
    "end": "1925120"
  },
  {
    "text": "when i pen test systems i drop in my own",
    "start": "1926640",
    "end": "1932000"
  },
  {
    "text": "special set of uh tooling and that's where it is so i've now got",
    "start": "1932000",
    "end": "1938159"
  },
  {
    "text": "my my local um my local shell configuration is now up in",
    "start": "1938159",
    "end": "1944559"
  },
  {
    "text": "uh on this host so i'm on a gke node i've routed the node because we saw in",
    "start": "1944559",
    "end": "1950559"
  },
  {
    "text": "the last attack that we can get out that way so let's just so all right i'm root on",
    "start": "1950559",
    "end": "1956480"
  },
  {
    "text": "the node we've had our reverse shell supply chain attack we've attacked the kernel and",
    "start": "1956480",
    "end": "1962320"
  },
  {
    "text": "broken out onto the host so we're now on the kubler or the cubelet node what can we do from",
    "start": "1962320",
    "end": "1967360"
  },
  {
    "text": "here well let's have a look at this alias so what will this do okay k secrets file",
    "start": "1967360",
    "end": "1974399"
  },
  {
    "text": "system dump it looked invalid cubelet pods everything for kubernetes either volumes or projected volumes because",
    "start": "1974399",
    "end": "1981279"
  },
  {
    "text": "bound service account tokens which are the new actually iterable way of attaching a claim to a service account",
    "start": "1981279",
    "end": "1987760"
  },
  {
    "text": "token strongly recommended to use exist in these locations and then we'll have a look for things like namespace token or",
    "start": "1987760",
    "end": "1995200"
  },
  {
    "text": "certs let's just have a look at what is in that directory that we're enumerating don't forget we are the root user the",
    "start": "1995200",
    "end": "2001600"
  },
  {
    "text": "root user is omnipotent omniscient they can do everything on the host because they must be able to debug turn things",
    "start": "2001600",
    "end": "2007440"
  },
  {
    "text": "on and off as necessary so we're exploiting something that is by design but we're going under the covers",
    "start": "2007440",
    "end": "2014559"
  },
  {
    "text": "let's see what's there there are plenty of things and it's not really that visible so let's try once more",
    "start": "2014559",
    "end": "2021840"
  },
  {
    "text": "okay so we can see that we've got lots of certificates and keys and all this kind",
    "start": "2022480",
    "end": "2028000"
  },
  {
    "text": "of thing but what are we actually looking for well if we look for secrets that are mounted",
    "start": "2028000",
    "end": "2033679"
  },
  {
    "text": "in that are not our back secrets they are not service account tokens whoops",
    "start": "2033679",
    "end": "2038880"
  },
  {
    "text": "we have got potentially an undeployed thing",
    "start": "2038880",
    "end": "2046640"
  },
  {
    "text": "let's just have a double check as to why that's not working",
    "start": "2046640",
    "end": "2051040"
  },
  {
    "text": "okay because the network went down at that point okay let's try that again okay so",
    "start": "2055359",
    "end": "2060480"
  },
  {
    "text": "we've got some aws keys that have magically appeared wonderful thank you configuration okay",
    "start": "2060480",
    "end": "2065599"
  },
  {
    "text": "so what does this mean this means that an operator an automated operator or some process inside the",
    "start": "2065599",
    "end": "2071839"
  },
  {
    "text": "cluster needs these keys to do a thing maybe it's a special version of auto scaling",
    "start": "2071839",
    "end": "2077118"
  },
  {
    "text": "maybe it's to run terraform maybe it's to deploy us three buckets in an ad hoc fashion or some other uh crazy version",
    "start": "2077119",
    "end": "2084000"
  },
  {
    "text": "of that so what can we do with these well potentially we can escalate to",
    "start": "2084000",
    "end": "2089440"
  },
  {
    "text": "the cloud accounts so we're using those stolen service accounts but in this case their service accounts for aws itself",
    "start": "2089440",
    "end": "2099040"
  },
  {
    "text": "okay so uh don't multi multi-data classifications this is my uh favorite view of cubelets",
    "start": "2099440",
    "end": "2107520"
  },
  {
    "text": "if we put data classification if you put sensitive and unsensitive data on the same cluster the unsensitive data will",
    "start": "2107520",
    "end": "2114400"
  },
  {
    "text": "be less well secured in our threat model and if we can break out onto the host we can potentially get access to the more",
    "start": "2114400",
    "end": "2120720"
  },
  {
    "text": "sensitive data so cloud account takeover uh this is ultimately what happens",
    "start": "2120720",
    "end": "2126320"
  },
  {
    "text": "no uh operators were hurt in the making of this gif what are we going to do we're going to exploit those stolen credentials",
    "start": "2126320",
    "end": "2133839"
  },
  {
    "text": "that's not the one we want let's use this one okay so we've got those",
    "start": "2133839",
    "end": "2139200"
  },
  {
    "text": "credentials what can we do with them let's get off those hosts because we've",
    "start": "2139200",
    "end": "2144400"
  },
  {
    "text": "now stolen them right we are going to phone",
    "start": "2144400",
    "end": "2150320"
  },
  {
    "text": "the aws account that those keys belong to because why not we've got access to them",
    "start": "2150320",
    "end": "2158838"
  },
  {
    "text": "uh-oh this is a canary token that means",
    "start": "2159359",
    "end": "2164880"
  },
  {
    "text": "that the owner of this token has been notified that this token that was left like a honeypot in the cluster has been used it",
    "start": "2164880",
    "end": "2172240"
  },
  {
    "text": "should never be used because it's not a real token but it's left there in order to tempt an attacker like captain hash",
    "start": "2172240",
    "end": "2178960"
  },
  {
    "text": "jack to enumerate and explore what it is all i've done there is try and identify my caller identity it's a simple call to",
    "start": "2178960",
    "end": "2185760"
  },
  {
    "text": "understand what's the name of this thing could it give me further permissions instead of just brute forcing every",
    "start": "2185760",
    "end": "2191839"
  },
  {
    "text": "permission set i want to do a targeted check to see maybe it's s3 related maybe it's got ion permissions",
    "start": "2191839",
    "end": "2198240"
  },
  {
    "text": "but a canary token will go off like a christmas tree like an alarm bell these are scattered across everything",
    "start": "2198240",
    "end": "2204720"
  },
  {
    "text": "that i've ever touched my infrastructure my local machine it's a way of making sure that in the",
    "start": "2204720",
    "end": "2209920"
  },
  {
    "text": "event of our preventative controls failing or the things that we rely on and trust like the kernel like our cloud",
    "start": "2209920",
    "end": "2215599"
  },
  {
    "text": "provider if these things fail underneath us we still have a detective element that allows us to understand",
    "start": "2215599",
    "end": "2222240"
  },
  {
    "text": "that we've been breached okay where am i",
    "start": "2222240",
    "end": "2228960"
  },
  {
    "text": "okay so what's next there are lots and lots of different ways to be breached in a kubernetes",
    "start": "2228960",
    "end": "2234320"
  },
  {
    "text": "system from the application workloads all the way through the class configuration and deployment",
    "start": "2234320",
    "end": "2240400"
  },
  {
    "text": "once again this is where our pod attack map comes in handy by thinking about how we logically",
    "start": "2240400",
    "end": "2246079"
  },
  {
    "text": "enumerate these things we don't need to just run tooling that's very loud and noisy we can instead be more selective",
    "start": "2246079",
    "end": "2252640"
  },
  {
    "text": "container security tooling will alarm or alert when unusual or",
    "start": "2252640",
    "end": "2257680"
  },
  {
    "text": "um uh non-standard behavior that's what i'm looking for uh it fires off",
    "start": "2257680",
    "end": "2263920"
  },
  {
    "text": "so doing this in a more structured approach is a more stealthy and silent way of doing it this is what control plane do",
    "start": "2263920",
    "end": "2270240"
  },
  {
    "text": "for a living if you're interested by these things do please come and talk to us and with that thank you very much for your attention",
    "start": "2270240",
    "end": "2276370"
  },
  {
    "text": "[Applause]",
    "start": "2276370",
    "end": "2283350"
  }
]