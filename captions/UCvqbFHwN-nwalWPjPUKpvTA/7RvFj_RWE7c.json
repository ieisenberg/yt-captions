[
  {
    "text": "hello everyone this is famous I come",
    "start": "3000",
    "end": "6299"
  },
  {
    "text": "from Beijing China",
    "start": "6299",
    "end": "8160"
  },
  {
    "text": "I'm working at Microsoft",
    "start": "8160",
    "end": "10920"
  },
  {
    "text": "and also a cncf ambassador",
    "start": "10920",
    "end": "13620"
  },
  {
    "text": "and Microsoft product manager",
    "start": "13620",
    "end": "17340"
  },
  {
    "text": "you can find my Twitter and GitHub",
    "start": "17340",
    "end": "19260"
  },
  {
    "text": "profile at Fame and Joe",
    "start": "19260",
    "end": "21779"
  },
  {
    "text": "so in today's webinar I would like to",
    "start": "21779",
    "end": "24300"
  },
  {
    "text": "discuss our daily security concerns and",
    "start": "24300",
    "end": "28800"
  },
  {
    "text": "problems and then I will share how to",
    "start": "28800",
    "end": "31380"
  },
  {
    "text": "secure container supply chain with Note",
    "start": "31380",
    "end": "33600"
  },
  {
    "text": "3 oras and ratify",
    "start": "33600",
    "end": "36780"
  },
  {
    "text": "foreign",
    "start": "36780",
    "end": "39320"
  },
  {
    "text": "specifically I will first introduce what",
    "start": "39860",
    "end": "43320"
  },
  {
    "text": "is software supply chain security and",
    "start": "43320",
    "end": "46559"
  },
  {
    "text": "next",
    "start": "46559",
    "end": "47940"
  },
  {
    "text": "I will talk about the challenges and",
    "start": "47940",
    "end": "50460"
  },
  {
    "text": "concerns from the industries and our end",
    "start": "50460",
    "end": "53100"
  },
  {
    "text": "users",
    "start": "53100",
    "end": "54899"
  },
  {
    "text": "next I will walk you through the sense",
    "start": "54899",
    "end": "59399"
  },
  {
    "text": "of Open Source projects in this area",
    "start": "59399",
    "end": "62160"
  },
  {
    "text": "such as Note 3 V2 auras and ratify for",
    "start": "62160",
    "end": "66720"
  },
  {
    "text": "example we can leverage Note 3 V2 to",
    "start": "66720",
    "end": "69720"
  },
  {
    "text": "sign and verify artifacts and we can use",
    "start": "69720",
    "end": "72900"
  },
  {
    "text": "auras to promote artifacts across",
    "start": "72900",
    "end": "75479"
  },
  {
    "text": "registries",
    "start": "75479",
    "end": "77040"
  },
  {
    "text": "and if you are running applications on",
    "start": "77040",
    "end": "79320"
  },
  {
    "text": "kubernetes gratify enables kubernetes",
    "start": "79320",
    "end": "82020"
  },
  {
    "text": "clusters to verify artifacts security",
    "start": "82020",
    "end": "84479"
  },
  {
    "text": "prior to deployment",
    "start": "84479",
    "end": "87920"
  },
  {
    "text": "so if you want to automate and build a",
    "start": "88320",
    "end": "91860"
  },
  {
    "text": "secure supply chain in CSD Pipeline with",
    "start": "91860",
    "end": "95520"
  },
  {
    "text": "GitHub actions",
    "start": "95520",
    "end": "97140"
  },
  {
    "text": "we will also provide provide our",
    "start": "97140",
    "end": "99180"
  },
  {
    "text": "practice with these projects",
    "start": "99180",
    "end": "102600"
  },
  {
    "text": "let's start from the real concerns we",
    "start": "102600",
    "end": "105540"
  },
  {
    "text": "hear from our end users and I guess you",
    "start": "105540",
    "end": "108540"
  },
  {
    "text": "might also struggling with these",
    "start": "108540",
    "end": "110939"
  },
  {
    "text": "problems in your software delivery",
    "start": "110939",
    "end": "113220"
  },
  {
    "text": "process not only security engineers",
    "start": "113220",
    "end": "116939"
  },
  {
    "text": "most developers are also concerned about",
    "start": "116939",
    "end": "119460"
  },
  {
    "text": "their security in their delivery process",
    "start": "119460",
    "end": "122520"
  },
  {
    "text": "for example how to sign and verify your",
    "start": "122520",
    "end": "125820"
  },
  {
    "text": "container image before you deploy it",
    "start": "125820",
    "end": "129000"
  },
  {
    "text": "how to promote supply chain artifacts",
    "start": "129000",
    "end": "131280"
  },
  {
    "text": "from development to production",
    "start": "131280",
    "end": "133739"
  },
  {
    "text": "how to attach spawn file and signatures",
    "start": "133739",
    "end": "136739"
  },
  {
    "text": "to contain the image to ensure",
    "start": "136739",
    "end": "138300"
  },
  {
    "text": "consistency and integrity",
    "start": "138300",
    "end": "142099"
  },
  {
    "text": "we also hear people want to make sure",
    "start": "142379",
    "end": "144660"
  },
  {
    "text": "their deployment is secure and view",
    "start": "144660",
    "end": "148440"
  },
  {
    "text": "their artifact references in Secure",
    "start": "148440",
    "end": "151020"
  },
  {
    "text": "supply chain",
    "start": "151020",
    "end": "153560"
  },
  {
    "text": "the most popular problem we hear is that",
    "start": "154379",
    "end": "157260"
  },
  {
    "text": "how can we set up a secure supply chain",
    "start": "157260",
    "end": "159900"
  },
  {
    "text": "in CSD workflow",
    "start": "159900",
    "end": "163319"
  },
  {
    "text": "so in today's webinar I hope",
    "start": "163319",
    "end": "166200"
  },
  {
    "text": "I can resolve all of those questions and",
    "start": "166200",
    "end": "169800"
  },
  {
    "text": "concerns",
    "start": "169800",
    "end": "171480"
  },
  {
    "text": "first of all I'd like to briefly",
    "start": "171480",
    "end": "173640"
  },
  {
    "text": "introduce the software supply chain",
    "start": "173640",
    "end": "177900"
  },
  {
    "text": "actually it starts from creation of",
    "start": "177900",
    "end": "180180"
  },
  {
    "text": "content such as the building of content",
    "start": "180180",
    "end": "182640"
  },
  {
    "text": "like binaries packages and images",
    "start": "182640",
    "end": "187220"
  },
  {
    "text": "after after you created that",
    "start": "187319",
    "end": "190739"
  },
  {
    "text": "you might need to this distribute all of",
    "start": "190739",
    "end": "193379"
  },
  {
    "text": "those contents to different environments",
    "start": "193379",
    "end": "196200"
  },
  {
    "text": "such as you need to Distributing the",
    "start": "196200",
    "end": "198300"
  },
  {
    "text": "content to your end users and customers",
    "start": "198300",
    "end": "201360"
  },
  {
    "text": "you might also need to distribute and",
    "start": "201360",
    "end": "204239"
  },
  {
    "text": "promote across different environments",
    "start": "204239",
    "end": "206459"
  },
  {
    "text": "and Registries and finally",
    "start": "206459",
    "end": "209519"
  },
  {
    "text": "the consumption of those content so you",
    "start": "209519",
    "end": "212580"
  },
  {
    "text": "might need to deploy all of those",
    "start": "212580",
    "end": "214620"
  },
  {
    "text": "artifacts and apps to the environment",
    "start": "214620",
    "end": "219360"
  },
  {
    "text": "foreign",
    "start": "219360",
    "end": "221959"
  },
  {
    "text": "that you will find securing software",
    "start": "221959",
    "end": "225239"
  },
  {
    "text": "supply chain is similar to secure the",
    "start": "225239",
    "end": "228000"
  },
  {
    "text": "traditional manufacturing supply chain",
    "start": "228000",
    "end": "230760"
  },
  {
    "text": "like the left diagram",
    "start": "230760",
    "end": "233340"
  },
  {
    "text": "it includes several rounds of quality",
    "start": "233340",
    "end": "235980"
  },
  {
    "text": "check and testing from producing",
    "start": "235980",
    "end": "238560"
  },
  {
    "text": "materials to deliver foods to the",
    "start": "238560",
    "end": "241140"
  },
  {
    "text": "customers ensuring the food is safe",
    "start": "241140",
    "end": "243599"
  },
  {
    "text": "enough to the market",
    "start": "243599",
    "end": "246739"
  },
  {
    "text": "okay",
    "start": "247200",
    "end": "248519"
  },
  {
    "text": "When comparing the software supply chain",
    "start": "248519",
    "end": "251040"
  },
  {
    "text": "with the traditional manufacturing",
    "start": "251040",
    "end": "252599"
  },
  {
    "text": "supply chain you'll find it commonly",
    "start": "252599",
    "end": "255000"
  },
  {
    "text": "includes",
    "start": "255000",
    "end": "256320"
  },
  {
    "text": "the process of producing software based",
    "start": "256320",
    "end": "260519"
  },
  {
    "text": "on multiple dependencies",
    "start": "260519",
    "end": "262560"
  },
  {
    "text": "built under disputes the artifacts and",
    "start": "262560",
    "end": "265259"
  },
  {
    "text": "then deploy and publish the apps for",
    "start": "265259",
    "end": "267479"
  },
  {
    "text": "customers to access",
    "start": "267479",
    "end": "270380"
  },
  {
    "text": "looking at the sensitive landscape you",
    "start": "272040",
    "end": "274680"
  },
  {
    "text": "will find there are a lot of Open Source",
    "start": "274680",
    "end": "276900"
  },
  {
    "text": "Solutions and projects in the security",
    "start": "276900",
    "end": "279540"
  },
  {
    "text": "and compliance section",
    "start": "279540",
    "end": "282600"
  },
  {
    "text": "the cnsf graduated projects like open",
    "start": "282600",
    "end": "285479"
  },
  {
    "text": "policy agent",
    "start": "285479",
    "end": "288080"
  },
  {
    "text": "TUF incubating projects like Falcon Note",
    "start": "288080",
    "end": "291960"
  },
  {
    "text": "3 so the manager and kiverno",
    "start": "291960",
    "end": "296720"
  },
  {
    "text": "so security ecosystem is very glorious",
    "start": "296759",
    "end": "301139"
  },
  {
    "text": "you don't worry about",
    "start": "301139",
    "end": "303360"
  },
  {
    "text": "there's no Alternatives in the security",
    "start": "303360",
    "end": "307500"
  },
  {
    "text": "projects",
    "start": "307500",
    "end": "309419"
  },
  {
    "text": "when we talk about the secure supply",
    "start": "309419",
    "end": "311220"
  },
  {
    "text": "chain software build materials AKA spawn",
    "start": "311220",
    "end": "316440"
  },
  {
    "text": "is also a required concept",
    "start": "316440",
    "end": "319020"
  },
  {
    "text": "U.S government has executive order to",
    "start": "319020",
    "end": "321900"
  },
  {
    "text": "require software vendors to generate and",
    "start": "321900",
    "end": "324539"
  },
  {
    "text": "provide spawn fire for customers",
    "start": "324539",
    "end": "327180"
  },
  {
    "text": "we can take a look at these spdx type of",
    "start": "327180",
    "end": "330600"
  },
  {
    "text": "Spawn file at the right diagram",
    "start": "330600",
    "end": "334020"
  },
  {
    "text": "generally it includes packaging file and",
    "start": "334020",
    "end": "337919"
  },
  {
    "text": "licensing information",
    "start": "337919",
    "end": "339479"
  },
  {
    "text": "and other information saw",
    "start": "339479",
    "end": "342860"
  },
  {
    "text": "take this diagram as an example",
    "start": "342900",
    "end": "345180"
  },
  {
    "text": "we can introduce Nursery to sign your",
    "start": "345180",
    "end": "347940"
  },
  {
    "text": "image engine resignation",
    "start": "347940",
    "end": "350400"
  },
  {
    "text": "then we can use auras to promote",
    "start": "350400",
    "end": "353120"
  },
  {
    "text": "designed image with signature to a sun",
    "start": "353120",
    "end": "356160"
  },
  {
    "text": "to a stage environment for deployment",
    "start": "356160",
    "end": "360740"
  },
  {
    "text": "before you deploy it",
    "start": "362280",
    "end": "365720"
  },
  {
    "text": "you can leverage gratify and opa can",
    "start": "366000",
    "end": "369060"
  },
  {
    "text": "keeper to validate if the image is",
    "start": "369060",
    "end": "371699"
  },
  {
    "text": "signed or not so we will only allow the",
    "start": "371699",
    "end": "374520"
  },
  {
    "text": "signed images can be deployed to the",
    "start": "374520",
    "end": "376919"
  },
  {
    "text": "kubernetes Clusters and production",
    "start": "376919",
    "end": "378960"
  },
  {
    "text": "environment",
    "start": "378960",
    "end": "380940"
  },
  {
    "text": "okay let's jump to the first project we",
    "start": "380940",
    "end": "384479"
  },
  {
    "text": "wanted to cover in this webinar",
    "start": "384479",
    "end": "387780"
  },
  {
    "text": "notice for v2",
    "start": "387780",
    "end": "389819"
  },
  {
    "text": "which is used to sign and verify",
    "start": "389819",
    "end": "391919"
  },
  {
    "text": "artifacts in an easy way",
    "start": "391919",
    "end": "395160"
  },
  {
    "text": "in general not only V2 includes three",
    "start": "395160",
    "end": "397919"
  },
  {
    "text": "components",
    "start": "397919",
    "end": "400139"
  },
  {
    "text": "not three",
    "start": "400139",
    "end": "401600"
  },
  {
    "text": "CLI tool we can call it notation",
    "start": "401600",
    "end": "404880"
  },
  {
    "text": "it is used to sign and verify artifacts",
    "start": "404880",
    "end": "407460"
  },
  {
    "text": "and manage certificates and policies",
    "start": "407460",
    "end": "410900"
  },
  {
    "text": "okay look back to the history of the",
    "start": "410900",
    "end": "414720"
  },
  {
    "text": "nursery project",
    "start": "414720",
    "end": "416819"
  },
  {
    "text": "you'll find it has very wide",
    "start": "416819",
    "end": "418919"
  },
  {
    "text": "collaboration on the community",
    "start": "418919",
    "end": "423080"
  },
  {
    "text": "another project was only originally",
    "start": "423600",
    "end": "426300"
  },
  {
    "text": "started at Docker back in 2015 which is",
    "start": "426300",
    "end": "430860"
  },
  {
    "text": "used to provide a general signing",
    "start": "430860",
    "end": "433139"
  },
  {
    "text": "infrastructure for containers based on",
    "start": "433139",
    "end": "435900"
  },
  {
    "text": "the TUF framework",
    "start": "435900",
    "end": "439580"
  },
  {
    "text": "so we can start it from notation CLI",
    "start": "440400",
    "end": "445020"
  },
  {
    "text": "you will find the notation CLI has",
    "start": "445020",
    "end": "448139"
  },
  {
    "text": "provided some capabilities like PSI",
    "start": "448139",
    "end": "452780"
  },
  {
    "text": "artifacts verify remote artifacts",
    "start": "452780",
    "end": "457139"
  },
  {
    "text": "list all signatures of science artifacts",
    "start": "457139",
    "end": "460940"
  },
  {
    "text": "and the certificate management like add",
    "start": "460940",
    "end": "465660"
  },
  {
    "text": "list or delete certificates",
    "start": "465660",
    "end": "469099"
  },
  {
    "text": "so I will give you a live demo to",
    "start": "469099",
    "end": "472139"
  },
  {
    "text": "Showcase how to sign and verify an",
    "start": "472139",
    "end": "474360"
  },
  {
    "text": "artifacts with notation CLI",
    "start": "474360",
    "end": "478219"
  },
  {
    "text": "okay let's get started",
    "start": "479099",
    "end": "481620"
  },
  {
    "text": "before you try out this demo you need to",
    "start": "481620",
    "end": "484560"
  },
  {
    "text": "install notation and have a container",
    "start": "484560",
    "end": "486780"
  },
  {
    "text": "image in your registry",
    "start": "486780",
    "end": "488759"
  },
  {
    "text": "so you will find we are using notation",
    "start": "488759",
    "end": "491960"
  },
  {
    "text": "Alpha 4. and we have pushed and contain",
    "start": "491960",
    "end": "496319"
  },
  {
    "text": "the image to our registry",
    "start": "496319",
    "end": "498720"
  },
  {
    "text": "so only we can use notation list to find",
    "start": "498720",
    "end": "502740"
  },
  {
    "text": "the attached image attached signature",
    "start": "502740",
    "end": "506099"
  },
  {
    "text": "from this image",
    "start": "506099",
    "end": "507960"
  },
  {
    "text": "okay nothing to return that means",
    "start": "507960",
    "end": "511139"
  },
  {
    "text": "there's no signature attached to this",
    "start": "511139",
    "end": "513779"
  },
  {
    "text": "image",
    "start": "513779",
    "end": "516140"
  },
  {
    "text": "okay next we can create a self-signed",
    "start": "516779",
    "end": "520320"
  },
  {
    "text": "test certificate for these signings",
    "start": "520320",
    "end": "524279"
  },
  {
    "text": "scenario",
    "start": "524279",
    "end": "525660"
  },
  {
    "text": "so we can use notation search generous",
    "start": "525660",
    "end": "528060"
  },
  {
    "text": "test",
    "start": "528060",
    "end": "530240"
  },
  {
    "text": "we can specify a",
    "start": "530399",
    "end": "533399"
  },
  {
    "text": "certificate name",
    "start": "533399",
    "end": "535440"
  },
  {
    "text": "yeah",
    "start": "535440",
    "end": "537860"
  },
  {
    "text": "it reminds us uh is already exists so it",
    "start": "539060",
    "end": "545040"
  },
  {
    "text": "doesn't matter",
    "start": "545040",
    "end": "546240"
  },
  {
    "text": "that means I have already created it",
    "start": "546240",
    "end": "548339"
  },
  {
    "text": "before so we can use notation K least to",
    "start": "548339",
    "end": "551940"
  },
  {
    "text": "list the existing keys",
    "start": "551940",
    "end": "554940"
  },
  {
    "text": "and we can use notation search list to",
    "start": "554940",
    "end": "558060"
  },
  {
    "text": "list the certificates that created by",
    "start": "558060",
    "end": "560580"
  },
  {
    "text": "the patient",
    "start": "560580",
    "end": "562860"
  },
  {
    "text": "next we can sign the container image",
    "start": "562860",
    "end": "565200"
  },
  {
    "text": "with cozy envelope",
    "start": "565200",
    "end": "567240"
  },
  {
    "text": "we can tap notation PSI with envelope",
    "start": "567240",
    "end": "570060"
  },
  {
    "text": "type cozy",
    "start": "570060",
    "end": "573019"
  },
  {
    "text": "so far it has generated a new signature",
    "start": "573779",
    "end": "576660"
  },
  {
    "text": "and attached it to The Container image",
    "start": "576660",
    "end": "582079"
  },
  {
    "text": "the shot 256",
    "start": "582300",
    "end": "585660"
  },
  {
    "text": "that means this is the digest of this",
    "start": "585660",
    "end": "588899"
  },
  {
    "text": "signature",
    "start": "588899",
    "end": "590519"
  },
  {
    "text": "and we can use notation list to list the",
    "start": "590519",
    "end": "594060"
  },
  {
    "text": "attached signature from this image",
    "start": "594060",
    "end": "598760"
  },
  {
    "text": "next we can add a public key to these",
    "start": "598760",
    "end": "603720"
  },
  {
    "text": "signature",
    "start": "603720",
    "end": "606720"
  },
  {
    "text": "oh sorry we can add a public key to the",
    "start": "609839",
    "end": "612720"
  },
  {
    "text": "trust store and then we can use notation",
    "start": "612720",
    "end": "616080"
  },
  {
    "text": "set at to specify this public key",
    "start": "616080",
    "end": "621500"
  },
  {
    "text": "next we can use notation setlist to",
    "start": "622860",
    "end": "627360"
  },
  {
    "text": "find if the if this key has been added",
    "start": "627360",
    "end": "632600"
  },
  {
    "text": "next we can use notation verify to",
    "start": "633480",
    "end": "636300"
  },
  {
    "text": "verify the signature and make sure it",
    "start": "636300",
    "end": "638700"
  },
  {
    "text": "has not been tempered by others",
    "start": "638700",
    "end": "643220"
  },
  {
    "text": "okay we can type notation verify",
    "start": "644279",
    "end": "647700"
  },
  {
    "text": "with this image name",
    "start": "647700",
    "end": "650519"
  },
  {
    "text": "if it Returns the",
    "start": "650519",
    "end": "652820"
  },
  {
    "text": "digest that means",
    "start": "652820",
    "end": "655760"
  },
  {
    "text": "congratulations",
    "start": "655760",
    "end": "657720"
  },
  {
    "text": "you have successfully signed and",
    "start": "657720",
    "end": "660000"
  },
  {
    "text": "verified this sample image",
    "start": "660000",
    "end": "664320"
  },
  {
    "text": "foreign",
    "start": "664320",
    "end": "667320"
  },
  {
    "text": "we just finished the introduction to",
    "start": "669320",
    "end": "672000"
  },
  {
    "text": "notation and bring a demo to you guys so",
    "start": "672000",
    "end": "676140"
  },
  {
    "text": "next we will briefly introduce auras oci",
    "start": "676140",
    "end": "680700"
  },
  {
    "text": "registry as storage",
    "start": "680700",
    "end": "683899"
  },
  {
    "text": "as we mentioned earlier we can use auras",
    "start": "684600",
    "end": "687180"
  },
  {
    "text": "to promote supply chain artifacts",
    "start": "687180",
    "end": "689760"
  },
  {
    "text": "across different registries",
    "start": "689760",
    "end": "692519"
  },
  {
    "text": "so auras is used to working with",
    "start": "692519",
    "end": "695760"
  },
  {
    "text": "OCR Registries but for secure supply",
    "start": "695760",
    "end": "698820"
  },
  {
    "text": "chain scenario",
    "start": "698820",
    "end": "701160"
  },
  {
    "text": "so you can use oras to distribute",
    "start": "701160",
    "end": "703500"
  },
  {
    "text": "artifacts across clouds and on-premise",
    "start": "703500",
    "end": "706519"
  },
  {
    "text": "environments you can also extend the",
    "start": "706519",
    "end": "709440"
  },
  {
    "text": "Registries no chance for storing",
    "start": "709440",
    "end": "712200"
  },
  {
    "text": "container images",
    "start": "712200",
    "end": "713940"
  },
  {
    "text": "with also with auras artifacts back",
    "start": "713940",
    "end": "716339"
  },
  {
    "text": "support",
    "start": "716339",
    "end": "718380"
  },
  {
    "text": "it also provides wholesale registry",
    "start": "718380",
    "end": "720720"
  },
  {
    "text": "clients to easily manage OC artifacts in",
    "start": "720720",
    "end": "723779"
  },
  {
    "text": "Registries and provides Gola and python",
    "start": "723779",
    "end": "727260"
  },
  {
    "text": "SDK and API for Developers",
    "start": "727260",
    "end": "731720"
  },
  {
    "text": "meanwhile oras also has Fine grade",
    "start": "732000",
    "end": "735140"
  },
  {
    "text": "capabilities to alter the content of oci",
    "start": "735140",
    "end": "738300"
  },
  {
    "text": "supply chain artifacts",
    "start": "738300",
    "end": "740880"
  },
  {
    "text": "and recently it has fully supported OCR",
    "start": "740880",
    "end": "744180"
  },
  {
    "text": "references reference types that means",
    "start": "744180",
    "end": "746700"
  },
  {
    "text": "you can use oci you can use auras with",
    "start": "746700",
    "end": "751440"
  },
  {
    "text": "any OCA compliant registries",
    "start": "751440",
    "end": "755519"
  },
  {
    "text": "currently auras is a census sandbox",
    "start": "755519",
    "end": "758519"
  },
  {
    "text": "project it has 76 contributors",
    "start": "758519",
    "end": "763200"
  },
  {
    "text": "and has been adopted by Alibaba Cloud",
    "start": "763200",
    "end": "766320"
  },
  {
    "text": "Amazon ECR GitHub Microsoft",
    "start": "766320",
    "end": "770839"
  },
  {
    "text": "enzu red hat and Singularity project",
    "start": "770839",
    "end": "775920"
  },
  {
    "text": "help you to handle these use cases",
    "start": "775920",
    "end": "780480"
  },
  {
    "text": "that means",
    "start": "780480",
    "end": "782160"
  },
  {
    "text": "you can use oras to pull and push",
    "start": "782160",
    "end": "784200"
  },
  {
    "text": "artifacts from or to oci registries you",
    "start": "784200",
    "end": "788100"
  },
  {
    "text": "can also attach spawn and attestation",
    "start": "788100",
    "end": "790200"
  },
  {
    "text": "files to an OCR artifacts",
    "start": "790200",
    "end": "794399"
  },
  {
    "text": "you can also use auras to migrate images",
    "start": "794399",
    "end": "797339"
  },
  {
    "text": "from registry a to registry B",
    "start": "797339",
    "end": "801720"
  },
  {
    "text": "you can also use auras to operate",
    "start": "801720",
    "end": "805040"
  },
  {
    "text": "repositories and tags in the registries",
    "start": "805040",
    "end": "810320"
  },
  {
    "text": "so as you can see from this diagram",
    "start": "811019",
    "end": "813200"
  },
  {
    "text": "you'll find oras has provided a bunch of",
    "start": "813200",
    "end": "816600"
  },
  {
    "text": "CI commands like OS attach which is used",
    "start": "816600",
    "end": "819779"
  },
  {
    "text": "to attach files to an existing artifact",
    "start": "819779",
    "end": "823560"
  },
  {
    "text": "or else copy allows you to copy",
    "start": "823560",
    "end": "826100"
  },
  {
    "text": "artifacts from one target to another",
    "start": "826100",
    "end": "828779"
  },
  {
    "text": "Target",
    "start": "828779",
    "end": "830940"
  },
  {
    "text": "before we get started let's take a quick",
    "start": "830940",
    "end": "833579"
  },
  {
    "text": "look at this workflow powered by auras",
    "start": "833579",
    "end": "838639"
  },
  {
    "text": "so let's start from the development",
    "start": "838920",
    "end": "841740"
  },
  {
    "text": "process developers always",
    "start": "841740",
    "end": "844620"
  },
  {
    "text": "build and push their container images to",
    "start": "844620",
    "end": "848160"
  },
  {
    "text": "a registry let's take dot Hub as an",
    "start": "848160",
    "end": "851339"
  },
  {
    "text": "example after that",
    "start": "851339",
    "end": "854100"
  },
  {
    "text": "if you want to attach and respond to the",
    "start": "854100",
    "end": "857940"
  },
  {
    "text": "container image you can use",
    "start": "857940",
    "end": "860540"
  },
  {
    "text": "oroscopy and or else attached to do this",
    "start": "860540",
    "end": "864720"
  },
  {
    "text": "kind of process",
    "start": "864720",
    "end": "866100"
  },
  {
    "text": "so auscopy can help you to copy this",
    "start": "866100",
    "end": "868860"
  },
  {
    "text": "containing image from Docker Hub to your",
    "start": "868860",
    "end": "871260"
  },
  {
    "text": "local registry and then you can use oras",
    "start": "871260",
    "end": "875399"
  },
  {
    "text": "attached to attach a generated spawn",
    "start": "875399",
    "end": "878100"
  },
  {
    "text": "file to this container image",
    "start": "878100",
    "end": "881940"
  },
  {
    "text": "finally you can use auras discover to",
    "start": "881940",
    "end": "884519"
  },
  {
    "text": "view the tree diagrams of this artifact",
    "start": "884519",
    "end": "887940"
  },
  {
    "text": "graph",
    "start": "887940",
    "end": "890480"
  },
  {
    "text": "so let's get started with this demo",
    "start": "891720",
    "end": "895380"
  },
  {
    "text": "assuming you have installed auras and",
    "start": "895380",
    "end": "897779"
  },
  {
    "text": "prepared a container registry",
    "start": "897779",
    "end": "900600"
  },
  {
    "text": "we are using cncf distribution registry",
    "start": "900600",
    "end": "903660"
  },
  {
    "text": "as an example",
    "start": "903660",
    "end": "905100"
  },
  {
    "text": "so let's type orascopy with Source image",
    "start": "905100",
    "end": "909180"
  },
  {
    "text": "registry and Target registry",
    "start": "909180",
    "end": "912240"
  },
  {
    "text": "you can copy a containing image from",
    "start": "912240",
    "end": "914639"
  },
  {
    "text": "source to the Target place",
    "start": "914639",
    "end": "917279"
  },
  {
    "text": "next we need to install a spawn tool",
    "start": "917279",
    "end": "920220"
  },
  {
    "text": "which is open source by Microsoft which",
    "start": "920220",
    "end": "923519"
  },
  {
    "text": "is used to generate and create a spawn",
    "start": "923519",
    "end": "925980"
  },
  {
    "text": "file",
    "start": "925980",
    "end": "928399"
  },
  {
    "text": "just make it executable and then we can",
    "start": "929160",
    "end": "931860"
  },
  {
    "text": "use it to generate a spdx type of Spawn",
    "start": "931860",
    "end": "935220"
  },
  {
    "text": "file",
    "start": "935220",
    "end": "937199"
  },
  {
    "text": "okay it has generated and exported to a",
    "start": "937199",
    "end": "941699"
  },
  {
    "text": "specific folder",
    "start": "941699",
    "end": "944160"
  },
  {
    "text": "next we can attach the spawn file to a",
    "start": "944160",
    "end": "947339"
  },
  {
    "text": "sample image",
    "start": "947339",
    "end": "949800"
  },
  {
    "text": "let's type auras attach with this",
    "start": "949800",
    "end": "954180"
  },
  {
    "text": "sample image and the spawn file folder",
    "start": "954180",
    "end": "960380"
  },
  {
    "text": "okay we have attached it to the sample",
    "start": "961680",
    "end": "964740"
  },
  {
    "text": "image next we can discover the reverse",
    "start": "964740",
    "end": "967620"
  },
  {
    "text": "of this manifest in the remote registry",
    "start": "967620",
    "end": "972720"
  },
  {
    "text": "so we can type oras discover with the",
    "start": "972720",
    "end": "976680"
  },
  {
    "text": "image",
    "start": "976680",
    "end": "979399"
  },
  {
    "text": "okay we can specify the latest tag",
    "start": "983339",
    "end": "987000"
  },
  {
    "text": "and uh",
    "start": "987000",
    "end": "988800"
  },
  {
    "text": "show it in your tree View",
    "start": "988800",
    "end": "992420"
  },
  {
    "text": "okay currently we can see that there is",
    "start": "992459",
    "end": "995339"
  },
  {
    "text": "a spawn file attached to this image in",
    "start": "995339",
    "end": "999480"
  },
  {
    "text": "our local registry okay let's delete",
    "start": "999480",
    "end": "1001820"
  },
  {
    "text": "this folder that store the",
    "start": "1001820",
    "end": "1004959"
  },
  {
    "text": "spdx spawn next we can use our spool to",
    "start": "1004959",
    "end": "1009380"
  },
  {
    "text": "pull that",
    "start": "1009380",
    "end": "1011079"
  },
  {
    "text": "artifact from our registry",
    "start": "1011079",
    "end": "1014839"
  },
  {
    "text": "which is used to improve which is used",
    "start": "1014839",
    "end": "1017060"
  },
  {
    "text": "to prove if auras can pull the artifact",
    "start": "1017060",
    "end": "1020600"
  },
  {
    "text": "with the spawn file to our local folder",
    "start": "1020600",
    "end": "1025880"
  },
  {
    "text": "okay copy it and uh tap it here",
    "start": "1025880",
    "end": "1029600"
  },
  {
    "text": "so here we need to specify the digest of",
    "start": "1029600",
    "end": "1032540"
  },
  {
    "text": "this",
    "start": "1032540",
    "end": "1033579"
  },
  {
    "text": "spdx spawn",
    "start": "1033579",
    "end": "1037000"
  },
  {
    "text": "okay if we can download the spawn file",
    "start": "1039579",
    "end": "1043160"
  },
  {
    "text": "by our spool that means we can use auras",
    "start": "1043160",
    "end": "1046280"
  },
  {
    "text": "to pull and push any OCR artifacts from",
    "start": "1046280",
    "end": "1051080"
  },
  {
    "text": "the registry okay in our previous two",
    "start": "1051080",
    "end": "1054679"
  },
  {
    "text": "demos",
    "start": "1054679",
    "end": "1055760"
  },
  {
    "text": "we have generated signatures for our",
    "start": "1055760",
    "end": "1058340"
  },
  {
    "text": "sample image and attached a spawn file",
    "start": "1058340",
    "end": "1061640"
  },
  {
    "text": "to that image so last but not least",
    "start": "1061640",
    "end": "1065000"
  },
  {
    "text": "how to verify artifacts security",
    "start": "1065000",
    "end": "1067100"
  },
  {
    "text": "priority deploy it to kubernetes Cluster",
    "start": "1067100",
    "end": "1071240"
  },
  {
    "text": "I think ratify the answer",
    "start": "1071240",
    "end": "1074360"
  },
  {
    "text": "as we introduced at the beginning of",
    "start": "1074360",
    "end": "1076760"
  },
  {
    "text": "this webinar",
    "start": "1076760",
    "end": "1078440"
  },
  {
    "text": "we can use ratify to enable kubernetes",
    "start": "1078440",
    "end": "1081140"
  },
  {
    "text": "clusters to verify artifacts prior to",
    "start": "1081140",
    "end": "1084020"
  },
  {
    "text": "our deployment",
    "start": "1084020",
    "end": "1085640"
  },
  {
    "text": "so as you can see from this part",
    "start": "1085640",
    "end": "1089299"
  },
  {
    "text": "ify can work with Opa GateKeeper",
    "start": "1089299",
    "end": "1093260"
  },
  {
    "text": "to enable the policy to check and",
    "start": "1093260",
    "end": "1097419"
  },
  {
    "text": "validate if the contained image meets",
    "start": "1097419",
    "end": "1101120"
  },
  {
    "text": "our verification policy or not",
    "start": "1101120",
    "end": "1104120"
  },
  {
    "text": "is this container image has been signed",
    "start": "1104120",
    "end": "1106760"
  },
  {
    "text": "and",
    "start": "1106760",
    "end": "1107620"
  },
  {
    "text": "validated by ratify that means it can be",
    "start": "1107620",
    "end": "1111919"
  },
  {
    "text": "deployed to the kubernetes cluster if",
    "start": "1111919",
    "end": "1114500"
  },
  {
    "text": "not",
    "start": "1114500",
    "end": "1115520"
  },
  {
    "text": "it will pass failed and it will not",
    "start": "1115520",
    "end": "1119360"
  },
  {
    "text": "deploy to the kubernetes",
    "start": "1119360",
    "end": "1122960"
  },
  {
    "text": "so let's showcase a live demo to",
    "start": "1122960",
    "end": "1125419"
  },
  {
    "text": "demonstrate how can we",
    "start": "1125419",
    "end": "1128140"
  },
  {
    "text": "validate the image and the deployment",
    "start": "1128140",
    "end": "1133840"
  },
  {
    "text": "so this is the ratify project repo on",
    "start": "1135140",
    "end": "1138320"
  },
  {
    "text": "GitHub and it has recently released",
    "start": "1138320",
    "end": "1141020"
  },
  {
    "text": "beta1",
    "start": "1141020",
    "end": "1143059"
  },
  {
    "text": "I have already installed ratify beta1 in",
    "start": "1143059",
    "end": "1146240"
  },
  {
    "text": "my virtual machine so if you want to try",
    "start": "1146240",
    "end": "1148820"
  },
  {
    "text": "ratify you can go to the GitHub",
    "start": "1148820",
    "end": "1151700"
  },
  {
    "text": "repository and download the latest",
    "start": "1151700",
    "end": "1154039"
  },
  {
    "text": "version of ratify",
    "start": "1154039",
    "end": "1157600"
  },
  {
    "text": "well let's go back to my terminal and uh",
    "start": "1157880",
    "end": "1163100"
  },
  {
    "text": "yeah I have installed ratify beta1 and",
    "start": "1163100",
    "end": "1168080"
  },
  {
    "text": "next we can use ratify to validate if a",
    "start": "1168080",
    "end": "1173840"
  },
  {
    "text": "signed image can be deployed to the",
    "start": "1173840",
    "end": "1176539"
  },
  {
    "text": "kubernetes cluster or not",
    "start": "1176539",
    "end": "1179179"
  },
  {
    "text": "okay we can use kokato run",
    "start": "1179179",
    "end": "1184280"
  },
  {
    "text": "signed",
    "start": "1184280",
    "end": "1186380"
  },
  {
    "text": "apps",
    "start": "1186380",
    "end": "1188120"
  },
  {
    "text": "which is sample image so for the first",
    "start": "1188120",
    "end": "1191900"
  },
  {
    "text": "time we use a side image that has been",
    "start": "1191900",
    "end": "1195280"
  },
  {
    "text": "signed by notation so we can specify a",
    "start": "1195280",
    "end": "1199760"
  },
  {
    "text": "sample image here",
    "start": "1199760",
    "end": "1203260"
  },
  {
    "text": "okay run it",
    "start": "1204200",
    "end": "1207020"
  },
  {
    "text": "great we have created this part with",
    "start": "1207020",
    "end": "1210080"
  },
  {
    "text": "name signed app",
    "start": "1210080",
    "end": "1213440"
  },
  {
    "text": "so if we want to validate a image that",
    "start": "1213440",
    "end": "1217340"
  },
  {
    "text": "cannot be deployed to the kubernetes",
    "start": "1217340",
    "end": "1218840"
  },
  {
    "text": "cluster we can use a image that is",
    "start": "1218840",
    "end": "1222140"
  },
  {
    "text": "unsigned",
    "start": "1222140",
    "end": "1224120"
  },
  {
    "text": "so we can run",
    "start": "1224120",
    "end": "1227740"
  },
  {
    "text": "unsigned tab",
    "start": "1227740",
    "end": "1230059"
  },
  {
    "text": "there is a specified",
    "start": "1230059",
    "end": "1232520"
  },
  {
    "text": "image",
    "start": "1232520",
    "end": "1235240"
  },
  {
    "text": "so actually we have prepared two types",
    "start": "1235520",
    "end": "1238100"
  },
  {
    "text": "of image in advance first one inside and",
    "start": "1238100",
    "end": "1240799"
  },
  {
    "text": "the second one is unsigned so we can use",
    "start": "1240799",
    "end": "1243559"
  },
  {
    "text": "it directly",
    "start": "1243559",
    "end": "1246159"
  },
  {
    "text": "okay that's it we got an arrow from the",
    "start": "1246679",
    "end": "1249980"
  },
  {
    "text": "server that is uh",
    "start": "1249980",
    "end": "1253160"
  },
  {
    "text": "returns from the admission web hook",
    "start": "1253160",
    "end": "1254960"
  },
  {
    "text": "actually this is the OPA I can keep a",
    "start": "1254960",
    "end": "1257720"
  },
  {
    "text": "policy we defined before so it has",
    "start": "1257720",
    "end": "1259700"
  },
  {
    "text": "denied the request to deploy these",
    "start": "1259700",
    "end": "1262160"
  },
  {
    "text": "unsigned image to our next cluster",
    "start": "1262160",
    "end": "1265640"
  },
  {
    "text": "so we can use Google cancel to",
    "start": "1265640",
    "end": "1268160"
  },
  {
    "text": "get the plot",
    "start": "1268160",
    "end": "1271340"
  },
  {
    "text": "so as you can find the site app",
    "start": "1271340",
    "end": "1274580"
  },
  {
    "text": "container image has been deployed to the",
    "start": "1274580",
    "end": "1276799"
  },
  {
    "text": "default namespace",
    "start": "1276799",
    "end": "1278539"
  },
  {
    "text": "so congratulations we have finished the",
    "start": "1278539",
    "end": "1280700"
  },
  {
    "text": "last demo",
    "start": "1280700",
    "end": "1283340"
  },
  {
    "text": "all right I think we did three demos",
    "start": "1283340",
    "end": "1286520"
  },
  {
    "text": "that demonstrated uh the workflow in",
    "start": "1286520",
    "end": "1289880"
  },
  {
    "text": "this secure supply chain so if we want",
    "start": "1289880",
    "end": "1293480"
  },
  {
    "text": "to automate all of those steps in your",
    "start": "1293480",
    "end": "1296419"
  },
  {
    "text": "script how can we handle that how can we",
    "start": "1296419",
    "end": "1299360"
  },
  {
    "text": "automate this secure supply chain in CSD",
    "start": "1299360",
    "end": "1304159"
  },
  {
    "text": "I think uh the simplest way is write a",
    "start": "1304159",
    "end": "1307520"
  },
  {
    "text": "workflow script that in a GitHub actions",
    "start": "1307520",
    "end": "1313580"
  },
  {
    "text": "so actually we have our own practice in",
    "start": "1313580",
    "end": "1317960"
  },
  {
    "text": "GitHub",
    "start": "1317960",
    "end": "1319039"
  },
  {
    "text": "that can be used to create a CSA",
    "start": "1319039",
    "end": "1322400"
  },
  {
    "text": "Pipeline with GitHub actions so you can",
    "start": "1322400",
    "end": "1325220"
  },
  {
    "text": "find this sample actions",
    "start": "1325220",
    "end": "1328340"
  },
  {
    "text": "in this repo will be Networks",
    "start": "1328340",
    "end": "1333020"
  },
  {
    "text": "last but not least let's quickly recap",
    "start": "1333020",
    "end": "1335419"
  },
  {
    "text": "what we have finished in this webinar",
    "start": "1335419",
    "end": "1338900"
  },
  {
    "text": "so at first we introduced the basic",
    "start": "1338900",
    "end": "1342140"
  },
  {
    "text": "concepts of secure supply chain",
    "start": "1342140",
    "end": "1344960"
  },
  {
    "text": "and second we walk you through the demos",
    "start": "1344960",
    "end": "1349820"
  },
  {
    "text": "and the the project concepts of natural",
    "start": "1349820",
    "end": "1352820"
  },
  {
    "text": "V2 auras and gratify",
    "start": "1352820",
    "end": "1356059"
  },
  {
    "text": "we have showcased three demos for each",
    "start": "1356059",
    "end": "1359900"
  },
  {
    "text": "project",
    "start": "1359900",
    "end": "1361039"
  },
  {
    "text": "and last but not least",
    "start": "1361039",
    "end": "1363860"
  },
  {
    "text": "we presented how you can leverage our",
    "start": "1363860",
    "end": "1366740"
  },
  {
    "text": "practice to build your own cicd Pipeline",
    "start": "1366740",
    "end": "1369140"
  },
  {
    "text": "with GitHub actions so you can go to",
    "start": "1369140",
    "end": "1372200"
  },
  {
    "text": "that repo and find the workflow yaml and",
    "start": "1372200",
    "end": "1375860"
  },
  {
    "text": "write it in your own cicd pipeline",
    "start": "1375860",
    "end": "1379340"
  },
  {
    "text": "foreign",
    "start": "1379340",
    "end": "1381340"
  },
  {
    "text": "my sharing thank you everyone for",
    "start": "1381340",
    "end": "1384620"
  },
  {
    "text": "attending today's webinar so you can",
    "start": "1384620",
    "end": "1387200"
  },
  {
    "text": "find some resources",
    "start": "1387200",
    "end": "1390080"
  },
  {
    "text": "and uh",
    "start": "1390080",
    "end": "1392720"
  },
  {
    "text": "the project information from the website",
    "start": "1392720",
    "end": "1397900"
  },
  {
    "text": "okay see you guys bye bye",
    "start": "1399320",
    "end": "1404200"
  }
]