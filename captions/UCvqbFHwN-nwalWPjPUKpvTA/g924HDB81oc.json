[
  {
    "start": "0",
    "end": "157000"
  },
  {
    "text": "good afternoon everybody I'm Patrick Galbraith and I appreciate you coming to",
    "start": "60",
    "end": "5520"
  },
  {
    "text": "this talk this is probably one of the biggest audiences I've had certainly bigger than last year but we'll go ahead",
    "start": "5520",
    "end": "13650"
  },
  {
    "text": "and get started I'm Patrick Galbraith I work for Oracle I'm on the minus QL as a service team",
    "start": "13650",
    "end": "19880"
  },
  {
    "text": "just some things about me I've been in this industry for quite a while I've started out in tech well 1986 on",
    "start": "19880",
    "end": "27960"
  },
  {
    "text": "electronics but I got into you know working in software and systems",
    "start": "27960",
    "end": "33960"
  },
  {
    "text": "administration around 1993 94 found about this new OS called some guy called",
    "start": "33960",
    "end": "41550"
  },
  {
    "text": "it Linux at the time and it was I spent a weekend downloading Slackware onto 26",
    "start": "41550",
    "end": "47969"
  },
  {
    "text": "floppies on my Packard Bell and I never could get extra on but it's been a wild ride and it's kind of interesting being",
    "start": "47969",
    "end": "54030"
  },
  {
    "text": "back in Seattle because I really started my tech career here though I live in New Hampshire now there used to be these",
    "start": "54030",
    "end": "60270"
  },
  {
    "text": "meetings in Ballard at talki Pizza run by Phil Hughes he started the Linux",
    "start": "60270",
    "end": "65280"
  },
  {
    "text": "Journal so those were the sweet days and now we come full circle and you know",
    "start": "65280",
    "end": "71369"
  },
  {
    "text": "I've been at all any number of companies I am now at Oracle I was at",
    "start": "71369",
    "end": "76590"
  },
  {
    "text": "hewlett-packard prior Packard Enterprise blue gecko which was a database company",
    "start": "76590",
    "end": "82530"
  },
  {
    "text": "here in Seattle minus QL I was there for three years classmates Slashdot in the",
    "start": "82530",
    "end": "91259"
  },
  {
    "text": "u.s. Navy interestingly we were talking about MySQL and kubernetes in 1999 I",
    "start": "91259",
    "end": "97650"
  },
  {
    "text": "worked at Andover dotnet they had a company that owned Slashdot and there were these two guys one from Finland one",
    "start": "97650",
    "end": "103740"
  },
  {
    "text": "from Sweden David axe mark Monti fit in dias and they came to talk to us about this thing",
    "start": "103740",
    "end": "110430"
  },
  {
    "text": "called replication that we need really direly needed for Slashdot and that's how it all began with MySQL for me some",
    "start": "110430",
    "end": "121079"
  },
  {
    "text": "things about me I won't get into it too much because there's a lot of material I have to cover and I want to touch on",
    "start": "121079",
    "end": "126299"
  },
  {
    "text": "Vitesse too I've got so many slides my big problem is I just always worry do I",
    "start": "126299",
    "end": "132569"
  },
  {
    "text": "have material to cover in a talk well that's not a problem so about my team I Brisa I",
    "start": "132569",
    "end": "137890"
  },
  {
    "text": "was at Oracle dying for the last year and I've recently moved to minus QL as a",
    "start": "137890",
    "end": "142960"
  },
  {
    "text": "service we're building a MySQL service on Oracle's cloud I'm very excited to be starting on that",
    "start": "142960",
    "end": "149830"
  },
  {
    "text": "work on MySQL again and working with many former colleagues from MySQL days",
    "start": "149830",
    "end": "156000"
  },
  {
    "text": "the what is this presentation about well how many of you are kubernetes users",
    "start": "156540",
    "end": "164830"
  },
  {
    "start": "157000",
    "end": "233000"
  },
  {
    "text": "kubernetes administrators okay how about MySQL DDA's ok so kind of a mixed group",
    "start": "164830",
    "end": "173880"
  },
  {
    "text": "sometimes I give this talk and I have to kind of explain what containers are so I won't get into that as much but there is",
    "start": "173880",
    "end": "180700"
  },
  {
    "text": "this kind of this misconception with MySQL on containers people databases on",
    "start": "180700",
    "end": "186880"
  },
  {
    "text": "containers oh that's really scary so it's about my running MySQL in",
    "start": "186880",
    "end": "191950"
  },
  {
    "text": "containers and in particular MySQL and kubernetes is about stateful applications and in particular stateful",
    "start": "191950",
    "end": "199000"
  },
  {
    "text": "sets operators MySQL operator which there were there are two of them that I",
    "start": "199000",
    "end": "204880"
  },
  {
    "text": "will show you and I'm really going to try to get to my the test slides though there have been many great talks on the",
    "start": "204880",
    "end": "210460"
  },
  {
    "text": "tests here so I I can't touch the quality that sugu can do on talking",
    "start": "210460",
    "end": "216430"
  },
  {
    "text": "about it it's such a great system it's hard to cover it all but anyway so I get",
    "start": "216430",
    "end": "222190"
  },
  {
    "text": "a lot of material and time permitting if we have questions I have a number of",
    "start": "222190",
    "end": "228850"
  },
  {
    "text": "demos I could play but there are two primary ones that I want to show you so",
    "start": "228850",
    "end": "233950"
  },
  {
    "text": "we'll see how it goes so I won't get into this we know what containers are I often explain you know",
    "start": "233950",
    "end": "240340"
  },
  {
    "text": "the thing I see have seen in numerous places is you see people who start using",
    "start": "240340",
    "end": "246490"
  },
  {
    "text": "containers and to them it's this it's another type of VM you'll see them rum",
    "start": "246490",
    "end": "251830"
  },
  {
    "text": "things like supervisor D and they're all kinds of processes running on the container and they're they might even be",
    "start": "251830",
    "end": "258489"
  },
  {
    "text": "running chef I I won't say where I've seen that but they might be running a bunch of chef cookbooks inside the",
    "start": "258489",
    "end": "264190"
  },
  {
    "text": "container anti-pattern but you know it's a learning process I did the same thing so it's often an",
    "start": "264190",
    "end": "272830"
  },
  {
    "start": "272000",
    "end": "301000"
  },
  {
    "text": "education thing and dm's versus containers this is a slide I always show people to kind of hammer home what the",
    "start": "272830",
    "end": "279430"
  },
  {
    "text": "difference is and when you look at this you can kind of see okay we're actually running on the host OS",
    "start": "279430",
    "end": "285520"
  },
  {
    "text": "there's no hypervisor layer there's a little you know there's some layers that you have to go through but it's much",
    "start": "285520",
    "end": "291700"
  },
  {
    "text": "more you know it's part of the OS it's not so much virtualization as much as it is isolation I mean that is a type of",
    "start": "291700",
    "end": "297940"
  },
  {
    "text": "virtualization but it's different than a virtual machine and I won't go into VMs",
    "start": "297940",
    "end": "304060"
  },
  {
    "start": "301000",
    "end": "335000"
  },
  {
    "text": "versus containers so this is a slide I I enjoy I I liked this graph that it kind",
    "start": "304060",
    "end": "309820"
  },
  {
    "text": "of explained because you just you can see the whites in people's eyes when they start debate sort of container oh",
    "start": "309820",
    "end": "315310"
  },
  {
    "text": "no it's more of a misconception than reality and I firmly believe that",
    "start": "315310",
    "end": "322570"
  },
  {
    "text": "containers and in particular kubernetes makes it easier to run databases on it",
    "start": "322570",
    "end": "328660"
  },
  {
    "text": "makes it easier to run any application on I believe testing is made easier no",
    "start": "328660",
    "end": "333970"
  },
  {
    "text": "emulation layer databases it's always kind of this question of pets versus",
    "start": "333970",
    "end": "340510"
  },
  {
    "start": "335000",
    "end": "453000"
  },
  {
    "text": "cattle the in databases you think of them more as pets a part of multiple",
    "start": "340510",
    "end": "346030"
  },
  {
    "text": "databases database instances or one this was something that I discovered when I",
    "start": "346030",
    "end": "352270"
  },
  {
    "text": "first started using Cabrini's I thought okay pods are one or more containers on a machine I thought I really don't want",
    "start": "352270",
    "end": "359020"
  },
  {
    "text": "to run a bunch of MySQL containers so what does this mean because I always try to understand a new technology by how",
    "start": "359020",
    "end": "365680"
  },
  {
    "text": "can a database run on it and in the documentation kubernetes pods are",
    "start": "365680",
    "end": "371350"
  },
  {
    "text": "immortal that strikes fear into the heart of a DDA in a database is a very",
    "start": "371350",
    "end": "377800"
  },
  {
    "text": "complex stateful application you with a database you want stable access you want",
    "start": "377800",
    "end": "384130"
  },
  {
    "text": "a plication x' to always get the same database handle you don't want any surprises and safety you don't want to",
    "start": "384130",
    "end": "390490"
  },
  {
    "text": "scale if it's unhealthy that's the persistent storage obviously persistent",
    "start": "390490",
    "end": "396669"
  },
  {
    "text": "sticky storage so really it boils down to this for me",
    "start": "396669",
    "end": "403090"
  },
  {
    "text": "it's the way I can have explained it database containers are the containers are the cattle the data is the pet and",
    "start": "403090",
    "end": "409900"
  },
  {
    "text": "here's a graphic that this all I'll explain this so first of all you have",
    "start": "409900",
    "end": "414910"
  },
  {
    "text": "your data that's the pet then you might have a config map or secrets then you have your container and the container",
    "start": "414910",
    "end": "421780"
  },
  {
    "text": "runs and it sets things up it runs if it crashes well we have a femoral we have",
    "start": "421780",
    "end": "427509"
  },
  {
    "text": "persistent storage we're using block storage or even on the host system that",
    "start": "427509",
    "end": "433720"
  },
  {
    "text": "container might go away but we run another container it's the same thing as",
    "start": "433720",
    "end": "438940"
  },
  {
    "text": "before and if you're using a stateful set as I'll show you it is the same",
    "start": "438940",
    "end": "444160"
  },
  {
    "text": "thing it's just it's like restarting mysqld it's just it it's within a container so this is something to help",
    "start": "444160",
    "end": "451150"
  },
  {
    "text": "people understand and not be afraid of it so with kubernetes and MySQL I think of",
    "start": "451150",
    "end": "457240"
  },
  {
    "start": "453000",
    "end": "594000"
  },
  {
    "text": "it as a tale of two open source projects MySQL its world's most popular open source database 2bic widgets in around",
    "start": "457240",
    "end": "465490"
  },
  {
    "text": "20 plus years and then of course there's kubernetes the new person on the block it's the fastest growing open source",
    "start": "465490",
    "end": "472990"
  },
  {
    "text": "project it's application we know all the things we I don't have to preach to the choir here and the board papers there",
    "start": "472990",
    "end": "480520"
  },
  {
    "text": "for your convenience when you download the slides later which I put the most current version up last night I won't",
    "start": "480520",
    "end": "486190"
  },
  {
    "text": "say how not ready they were so kubernetes ingredients for stateful",
    "start": "486190",
    "end": "491349"
  },
  {
    "text": "acylation applications these are some things that I always think about that really make it much more feasible to run",
    "start": "491349",
    "end": "498090"
  },
  {
    "text": "databases and other stateful applications on kubernetes we have labels I mean that's kind of a basic",
    "start": "498090",
    "end": "503139"
  },
  {
    "text": "thing with kubernetes it's what allows discovery it allows things to associate know where the stable thing is that you",
    "start": "503139",
    "end": "510130"
  },
  {
    "text": "need whether it's stores your network there's services obviously it's the abstraction that lets you connect to an",
    "start": "510130",
    "end": "516610"
  },
  {
    "text": "underlying pod there's cube dns which is you know I worked at Dyne I still work it there's",
    "start": "516610",
    "end": "523060"
  },
  {
    "text": "we're part of the same company and DNS is something people take for granted until it doesn't work and you want it to",
    "start": "523060",
    "end": "530680"
  },
  {
    "text": "work right and this is something that's built within kubernetes with cube that makes it possible to do some really",
    "start": "530680",
    "end": "535960"
  },
  {
    "text": "cool things helm charts of course you've tracked it out a little farther and you can think of think of it more as and",
    "start": "535960",
    "end": "544450"
  },
  {
    "text": "like an apt package on kubernetes and of course persistent volumes persistent",
    "start": "544450",
    "end": "551200"
  },
  {
    "text": "volume claims and storage classes staple sets some interesting things you can do",
    "start": "551200",
    "end": "557080"
  },
  {
    "text": "in stateful sets init containers volume claim templates I really should kind of have sidecar",
    "start": "557080",
    "end": "563410"
  },
  {
    "text": "containers under there because what I'm going to show you later utilizes this pattern then of course we have operators",
    "start": "563410",
    "end": "568990"
  },
  {
    "text": "which takes domain knowledge and encodes it into a controller an application that does something for you that you no",
    "start": "568990",
    "end": "575860"
  },
  {
    "text": "longer have to repeatedly do the painful way and then they're there there's all want also one thing you have node",
    "start": "575860",
    "end": "582160"
  },
  {
    "text": "selector and affinity this is something I heard discussed by the fellow from Red",
    "start": "582160",
    "end": "587320"
  },
  {
    "text": "Hat this morning of being able to schedule certain things such as a database on a certain type of node so",
    "start": "587320",
    "end": "596260"
  },
  {
    "start": "594000",
    "end": "642000"
  },
  {
    "text": "originally my one of my first contributions to to kubernetes was I",
    "start": "596260",
    "end": "603640"
  },
  {
    "text": "created a I submitted an example of how to run Galera and what it was is it was",
    "start": "603640",
    "end": "609220"
  },
  {
    "text": "three pods and each one of those pods had a you know there was also a service and it was hard-coded you know this",
    "start": "609220",
    "end": "616150"
  },
  {
    "text": "right here was the pod this here was the the service for the given node and then",
    "start": "616150",
    "end": "621850"
  },
  {
    "text": "this was an overall service for all of the nodes it was very unflexible and this was you",
    "start": "621850",
    "end": "629500"
  },
  {
    "text": "know a basic way of understanding this is a way of seeing how far kubernetes",
    "start": "629500",
    "end": "636100"
  },
  {
    "text": "has come and how much easier it is now to run things like this and much more dynamic it's not this thing where you",
    "start": "636100",
    "end": "642220"
  },
  {
    "start": "642000",
    "end": "687000"
  },
  {
    "text": "have to think about it then of course we have another simple way of running MySQL",
    "start": "642220",
    "end": "647590"
  },
  {
    "text": "is to run through helm and there are a number of different flavors of MySQL and",
    "start": "647590",
    "end": "653830"
  },
  {
    "text": "forks of MySQL you can run and these are three of them right here that's the simplest but there's so many more",
    "start": "653830",
    "end": "660880"
  },
  {
    "text": "advanced ways of running MySQL and easier ways of running node selector as",
    "start": "660880",
    "end": "666370"
  },
  {
    "text": "I'm and this allows you to specify some affinity and what sort of node you want",
    "start": "666370",
    "end": "671480"
  },
  {
    "text": "to run it on you can have ha hard and soft affinity I haven't used this myself",
    "start": "671480",
    "end": "677450"
  },
  {
    "text": "but it's something that's I find really intriguing and it's an incredibly useful",
    "start": "677450",
    "end": "682870"
  },
  {
    "text": "part of kubernetes now we all get onto",
    "start": "682870",
    "end": "688760"
  },
  {
    "start": "687000",
    "end": "791000"
  },
  {
    "text": "stateful sets so what our stateful sets you know we've heard a lot of discussion as to what they are and if you don't",
    "start": "688760",
    "end": "694790"
  },
  {
    "text": "know they provide guarantees about ordering and uniqueness of pod resources anything that's related to that pod has",
    "start": "694790",
    "end": "702320"
  },
  {
    "text": "a stable name a sticky name throughout restarts and it allows you to also",
    "start": "702320",
    "end": "708890"
  },
  {
    "text": "connect directly to the pod you don't necessarily need a service to connect to the pod if like for instance if you have",
    "start": "708890",
    "end": "715880"
  },
  {
    "text": "three minus QL servers running a master two slaves you can connect directly to the master for reads and writes and to",
    "start": "715880",
    "end": "722570"
  },
  {
    "text": "the slaves you can connect read-only and you can specify those it also ensures",
    "start": "722570",
    "end": "728330"
  },
  {
    "text": "ordinality when you start it up it's not like a deployment where it's random",
    "start": "728330",
    "end": "733360"
  },
  {
    "text": "there's also one pod per index and they're not interchangeable and they",
    "start": "733360",
    "end": "739010"
  },
  {
    "text": "won't it attempt to run with the same name they have a stable network identity this is important with databases in",
    "start": "739010",
    "end": "745190"
  },
  {
    "text": "particular well with anything really and it's always named if you create a",
    "start": "745190",
    "end": "750350"
  },
  {
    "text": "headless service say for instance you have a headless service called MySQL the each node that comes up will be node",
    "start": "750350",
    "end": "756740"
  },
  {
    "text": "MySQL they have the service basically is creating a thing of it as creating as",
    "start": "756740",
    "end": "762350"
  },
  {
    "text": "own a domain name for your internally for your service and they're stable",
    "start": "762350",
    "end": "768800"
  },
  {
    "text": "across restarts also stable storage and stateful resources you know across",
    "start": "768800",
    "end": "774590"
  },
  {
    "text": "restarts you know if your container underlying container dies it comes back up and reattaches to the the storage",
    "start": "774590",
    "end": "782210"
  },
  {
    "text": "that was associated with that member of the stateful set and safety it won't",
    "start": "782210",
    "end": "788630"
  },
  {
    "text": "scale if it's unhealthy that's very good that's something we want so here's a good here's some animations to explain",
    "start": "788630",
    "end": "796100"
  },
  {
    "start": "791000",
    "end": "860000"
  },
  {
    "text": "to you kind of camera hone the difference here's a deployment so deployment you have of a replica set creates one pod creates",
    "start": "796100",
    "end": "805880"
  },
  {
    "text": "another pod you notice these aren't in any order and they're not names with a",
    "start": "805880",
    "end": "812240"
  },
  {
    "text": "you know each one doesn't have an ordinal name third one could come up and",
    "start": "812240",
    "end": "817400"
  },
  {
    "text": "in this order and then of course you could have a crash well there's nothing to prevent another one from popping up",
    "start": "817400",
    "end": "823790"
  },
  {
    "text": "so but then we have a staple set so we this one's called mysql' first node",
    "start": "823790",
    "end": "831290"
  },
  {
    "text": "comes up second node comes up third node comes up okay you might have something",
    "start": "831290",
    "end": "837170"
  },
  {
    "text": "crash no problem it won't scale it'll",
    "start": "837170",
    "end": "842630"
  },
  {
    "text": "replace it so these two animations I",
    "start": "842630",
    "end": "848270"
  },
  {
    "text": "like to use them is away they were they were actually something that Anthony yay put together and I added the animations",
    "start": "848270",
    "end": "853580"
  },
  {
    "text": "too and they're really good for explaining it kind of helped me to understand when I was first utilizing stateful sets so of course I mentioned",
    "start": "853580",
    "end": "862370"
  },
  {
    "start": "860000",
    "end": "886000"
  },
  {
    "text": "headless service and this would I mentioned is like creating a domain name for what you're running and you",
    "start": "862370",
    "end": "869330"
  },
  {
    "text": "basically specify them without having a cluster IP and whoops I didn't want to",
    "start": "869330",
    "end": "875330"
  },
  {
    "text": "go there yet and for read-only if you want to do read-only you create another",
    "start": "875330",
    "end": "880790"
  },
  {
    "text": "service if you like or you can correct connect directly to the pod since they're consistently named and then we",
    "start": "880790",
    "end": "888230"
  },
  {
    "start": "886000",
    "end": "913000"
  },
  {
    "text": "have storage class in volume clang Timbits in this example we define a storage class name OCI and it's using",
    "start": "888230",
    "end": "893810"
  },
  {
    "text": "oracle clouds block storage and then within our state 'full set we have a",
    "start": "893810",
    "end": "899090"
  },
  {
    "text": "volume claim template where we have an annotation kind of referring to that and",
    "start": "899090",
    "end": "904220"
  },
  {
    "text": "then the storage class name OCI and so that when the the pod comes up it'll use",
    "start": "904220",
    "end": "911420"
  },
  {
    "text": "that block storage at the simple here's",
    "start": "911420",
    "end": "917510"
  },
  {
    "start": "913000",
    "end": "995000"
  },
  {
    "text": "a simple example of a stateful set this was an example that anthony a had put",
    "start": "917510",
    "end": "922820"
  },
  {
    "text": "together i keep it around it's it's not something you'd necessarily use for production but it's a very it's a",
    "start": "922820",
    "end": "928670"
  },
  {
    "text": "pattern you often see and one of the one of the operators i show you'll see this pattern you know it's three nodes you have a",
    "start": "928670",
    "end": "935240"
  },
  {
    "text": "master and then two slaves and there's a read service that it connects to and then for rights you can connect directly",
    "start": "935240",
    "end": "941630"
  },
  {
    "text": "to the master the way it's built is there's there are two init containers",
    "start": "941630",
    "end": "947570"
  },
  {
    "text": "one init container sets up a config map and in Detroit sets up a ma'idah",
    "start": "947570",
    "end": "952750"
  },
  {
    "text": "MySQL CNF file a comp file for MySQL if it's ordinal 0 it sets it up as the",
    "start": "952750",
    "end": "958190"
  },
  {
    "text": "master if it's anything above 0 it sets it up as the slave and then there are two app containers one's a sidecar",
    "start": "958190",
    "end": "964400"
  },
  {
    "text": "container that runs backups and again if the or if it's ordinal zero what it'll do is it'll create a clone of that first",
    "start": "964400",
    "end": "971120"
  },
  {
    "text": "node and it'll create a netcat so that it's available for the subsequent nodes",
    "start": "971120",
    "end": "976610"
  },
  {
    "text": "anything greater than ordinal 0 backup will do the restore and so on and so",
    "start": "976610",
    "end": "981950"
  },
  {
    "text": "forth a very good that example if you look at that slide and look at it you",
    "start": "981950",
    "end": "988700"
  },
  {
    "text": "can explain to you how a lot of MySQL operators are done and how the approach",
    "start": "988700",
    "end": "993770"
  },
  {
    "text": "that they're taking operators now this as I mentioned takes domain knowledge",
    "start": "993770",
    "end": "1000190"
  },
  {
    "start": "995000",
    "end": "1153000"
  },
  {
    "text": "that the things you do as a DBA or as a DevOps engineer it takes those patterns",
    "start": "1000190",
    "end": "1006310"
  },
  {
    "text": "that you do repetitively even within kubernetes prior to their being operators and allows you to it builds it",
    "start": "1006310",
    "end": "1014050"
  },
  {
    "text": "into the app if it's you know as I as I show you here there will be setting up",
    "start": "1014050",
    "end": "1020080"
  },
  {
    "text": "there were two things that I'm gonna show you one is setting up I know DB",
    "start": "1020080",
    "end": "1025410"
  },
  {
    "text": "cluster with group replication the the steps that you manually do that it's a",
    "start": "1025410",
    "end": "1030520"
  },
  {
    "text": "little bit of work but it does that for you you don't have to think about it it's encoded into the application and another operator which uses Orchestrator",
    "start": "1030520",
    "end": "1037480"
  },
  {
    "text": "which press labs built that does the same thing it sets up work a strainer for you does all of the tasks you",
    "start": "1037480",
    "end": "1043510"
  },
  {
    "text": "normally do by hand and it's built into the app and so you can use it more as an",
    "start": "1043510",
    "end": "1049450"
  },
  {
    "text": "abstraction from what you would normally do if you had to do it manually",
    "start": "1049450",
    "end": "1054600"
  },
  {
    "text": "operators extend the crew brunetti api they create custom resource definitions",
    "start": "1055980",
    "end": "1061390"
  },
  {
    "text": "such as you know here's some examples here at CD cluster Prometheus my minus",
    "start": "1061390",
    "end": "1066550"
  },
  {
    "text": "QL it's not supposed to be a space there backup/restore oracle weblogic so on and so forth I'm kind of doing this out of",
    "start": "1066550",
    "end": "1073960"
  },
  {
    "text": "order it leverages kubernetes primitives like replica sets and stateful sets and services they as I mentioned they",
    "start": "1073960",
    "end": "1081670"
  },
  {
    "text": "execute common application tasks and they're usually installed as add appointment here's a good example of",
    "start": "1081670",
    "end": "1090550"
  },
  {
    "text": "what operators do they observe analyze and act so the observed stage is to look",
    "start": "1090550",
    "end": "1097360"
  },
  {
    "text": "at what there currently is in this example there's two running pods there's",
    "start": "1097360",
    "end": "1104080"
  },
  {
    "text": "one is three one one one is three to 10 and then it analyzes it says what are",
    "start": "1104080",
    "end": "1109270"
  },
  {
    "text": "the it does a diff on it basically it says what are the differences from desired config to running config well we",
    "start": "1109270",
    "end": "1115540"
  },
  {
    "text": "should be three to ten and there should be three members and then there's act so act is going to get the desired config",
    "start": "1115540",
    "end": "1122290"
  },
  {
    "text": "it's going to recover one member and that it's going to recover any of those that need to be updated to three to ten",
    "start": "1122290",
    "end": "1128470"
  },
  {
    "text": "to that version I won't play this demo it's a it's a pretty cool demo I took",
    "start": "1128470",
    "end": "1135420"
  },
  {
    "text": "doing a CD cluster and bringing it up and it's it's probably about a minute I",
    "start": "1135420",
    "end": "1141310"
  },
  {
    "text": "sped it up quite a bit but it kind of it's a good example of how the operator pattern works and you can abstract you",
    "start": "1141310",
    "end": "1148390"
  },
  {
    "text": "can extrapolate that farther for other types of things more advanced stateful",
    "start": "1148390",
    "end": "1154420"
  },
  {
    "start": "1153000",
    "end": "1167000"
  },
  {
    "text": "applications here's a list of my SQL operators and two of these I'm going to",
    "start": "1154420",
    "end": "1160150"
  },
  {
    "text": "demonstrate there's the Oracle MySQL operator and then there's the press labs MySQL operator the Oracle Oracle MySQL",
    "start": "1160150",
    "end": "1169000"
  },
  {
    "start": "1167000",
    "end": "1217000"
  },
  {
    "text": "operator is your able to deploy highly available MySQL instance on a kubernetes",
    "start": "1169000",
    "end": "1175210"
  },
  {
    "text": "with a single command it watches the API server for custom resource definitions related to MySQL cluster and acts on",
    "start": "1175210",
    "end": "1183100"
  },
  {
    "text": "those resources there's backup and restore and there's also backup schedule that utilizes MySQL",
    "start": "1183100",
    "end": "1190240"
  },
  {
    "text": "8.0 group like replication and I know DB cluster has automated backup and restore",
    "start": "1190240",
    "end": "1196690"
  },
  {
    "text": "to and from object storage s3 compatible in the demonstration I'll show you it'll",
    "start": "1196690",
    "end": "1202650"
  },
  {
    "text": "be Oracles block storage object storage here's a kind of an overview of what the",
    "start": "1202650",
    "end": "1210570"
  },
  {
    "text": "operator does you have the kubernetes api in the operator and it interacts with a stateful set running the mysql",
    "start": "1210570",
    "end": "1216779"
  },
  {
    "text": "cluster and then within each each one of the pods it's basically set up like this you have the kubernetes api the operator",
    "start": "1216779",
    "end": "1223500"
  },
  {
    "start": "1217000",
    "end": "1270000"
  },
  {
    "text": "creates CR d's mysql cluster and so on and so forth and then it ends up running",
    "start": "1223500",
    "end": "1229830"
  },
  {
    "text": "a stateful set and within each one of those stateful sets there's the pod has an agent and a MySQL database the",
    "start": "1229830",
    "end": "1238049"
  },
  {
    "text": "operator is acting on what needs to happen and updating the kubernetes api",
    "start": "1238049",
    "end": "1244500"
  },
  {
    "text": "and then the agent also is talking to the kubernetes eye api observing what it",
    "start": "1244500",
    "end": "1249690"
  },
  {
    "text": "needs to do and whatever it needs to do it it does those tasks such as cloning doing a backup doing a restore setting",
    "start": "1249690",
    "end": "1257700"
  },
  {
    "text": "up the cluster and then the agent also as I mentioned does the the restore and",
    "start": "1257700",
    "end": "1264450"
  },
  {
    "text": "the backup and it does that through streaming to object storage there are",
    "start": "1264450",
    "end": "1271500"
  },
  {
    "start": "1270000",
    "end": "1290000"
  },
  {
    "text": "some simple examples I since I'm gonna do the demo I won't go into this",
    "start": "1271500",
    "end": "1277520"
  },
  {
    "text": "scheduled backup that's the one thing I do when I show it it's pretty cool you such a schedule and a cron like entry",
    "start": "1277520",
    "end": "1284640"
  },
  {
    "text": "for it when you went around the backup and set up which storage provider you want to use connecting to the Oracle",
    "start": "1284640",
    "end": "1293820"
  },
  {
    "start": "1290000",
    "end": "1342000"
  },
  {
    "text": "MySQL operator there's a couple patterns you can utilize you can write directly to a single pod because it is a stateful",
    "start": "1293820",
    "end": "1298890"
  },
  {
    "text": "set you can do a read/write only service if you like and then of course there's",
    "start": "1298890",
    "end": "1304230"
  },
  {
    "text": "the MySQL router pattern which you'll see in the demonstration MySQL router is",
    "start": "1304230",
    "end": "1309840"
  },
  {
    "text": "a new feature a new piece of software and what it does is it's intelligent",
    "start": "1309840",
    "end": "1315029"
  },
  {
    "text": "about you can tell it which is going to be the primary and the secondary and if",
    "start": "1315029",
    "end": "1320700"
  },
  {
    "text": "you want to pick a node in the cluster to write to and then specify which ones you want to read from it'll do that for",
    "start": "1320700",
    "end": "1326730"
  },
  {
    "text": "you and proxy your minus QL traffic for you and often what you do is you your",
    "start": "1326730",
    "end": "1332429"
  },
  {
    "text": "application pod you have that as a as one of the pods within your application pod and your connect to",
    "start": "1332429",
    "end": "1337830"
  },
  {
    "text": "localhost within the pod and that connects you to the database the demo so",
    "start": "1337830",
    "end": "1344070"
  },
  {
    "start": "1342000",
    "end": "1400000"
  },
  {
    "text": "this demo is what it's going to do is create a three node cluster created by the Oracle MySQL operator it's going to",
    "start": "1344070",
    "end": "1349559"
  },
  {
    "text": "show components such as - cooperate or container in each pod node with the MySQL and each pods - ql agent sidecar",
    "start": "1349559",
    "end": "1357990"
  },
  {
    "text": "container and then there's going to be a wordpress deployment that consists of a wordpress application container and then",
    "start": "1357990",
    "end": "1366000"
  },
  {
    "text": "the mysql router container and the wordpress container is going to connect",
    "start": "1366000",
    "end": "1371250"
  },
  {
    "text": "to localhost and inevitably through the database through that and what i'm going",
    "start": "1371250",
    "end": "1377940"
  },
  {
    "text": "to do is i'm going to show bringing up the wordpress website and doing a back up doing something really stupid and",
    "start": "1377940",
    "end": "1384929"
  },
  {
    "text": "doing a restore i'm also going to show you running external DNS - oracle clouds",
    "start": "1384929",
    "end": "1390779"
  },
  {
    "text": "dns service i have a domain kubernetes - cluster comm and the website will be set",
    "start": "1390779",
    "end": "1397500"
  },
  {
    "text": "up as that automatically so i'll go ahead and oh good it's full screen I'm",
    "start": "1397500",
    "end": "1405539"
  },
  {
    "start": "1400000",
    "end": "1970000"
  },
  {
    "text": "in presenter view so it doesn't look the same as over there alright so the",
    "start": "1405539",
    "end": "1412139"
  },
  {
    "text": "initial state we have nothing running just checking out helm so what we're",
    "start": "1412139",
    "end": "1417360"
  },
  {
    "text": "going to do we're going to create the operator with helm I've created a",
    "start": "1417360",
    "end": "1424559"
  },
  {
    "text": "namespace called MySQL operator and that's where it's going to run so we",
    "start": "1424559",
    "end": "1430799"
  },
  {
    "text": "have the logs for the operator I can't see this whole thing uh-oh this is not",
    "start": "1430799",
    "end": "1437309"
  },
  {
    "text": "cool actually you know what I'm gonna do I'm sorry I'm going to run this from an",
    "start": "1437309",
    "end": "1444059"
  },
  {
    "text": "actual program that runs graphics sorry",
    "start": "1444059",
    "end": "1449850"
  },
  {
    "text": "about that okay let me",
    "start": "1449850",
    "end": "1455720"
  },
  {
    "text": "excuse me sorry okay I'm just go ahead",
    "start": "1481340",
    "end": "1490110"
  },
  {
    "text": "and start this okay so we have initial",
    "start": "1490110",
    "end": "1495390"
  },
  {
    "text": "state as I mentioned before let's skip ahead a little bit now I'm just gonna leave it alone last year somebody said",
    "start": "1495390",
    "end": "1503880"
  },
  {
    "text": "you need to resize this and edit and I said I almost started I said no no no you get totally off track so we've",
    "start": "1503880",
    "end": "1511170"
  },
  {
    "text": "created the operator we're looking at the logs so now we're going to look at",
    "start": "1511170",
    "end": "1516780"
  },
  {
    "text": "the cluster we have a convict map we're gonna use the default authentication plug-in we have our password in a secret",
    "start": "1516780",
    "end": "1522840"
  },
  {
    "text": "now here's our cluster with three members and we're the storage and now we",
    "start": "1522840",
    "end": "1528990"
  },
  {
    "text": "have also we have to create a service account for this the maniacae well agent",
    "start": "1528990",
    "end": "1534210"
  },
  {
    "text": "sidecar container so we're gonna create we're gonna create a namespace called WordPress WordPress we're gonna use that",
    "start": "1534210",
    "end": "1540720"
  },
  {
    "text": "namespace for all subsequent operations so we're gonna create that service",
    "start": "1540720",
    "end": "1546000"
  },
  {
    "text": "account now we're going to create the cluster so you can see the operator",
    "start": "1546000",
    "end": "1552000"
  },
  {
    "text": "churning into action there it wasn't quite this fast when I originally",
    "start": "1552000",
    "end": "1558960"
  },
  {
    "text": "recorded it but it is pretty fast so",
    "start": "1558960",
    "end": "1565730"
  },
  {
    "text": "we're looking at the agent logs for the first node I have that running and the other the window to the left that's",
    "start": "1565730",
    "end": "1572190"
  },
  {
    "text": "showing the the PVCs being bound on Oracle blocks to Oracle cloud block",
    "start": "1572190",
    "end": "1578130"
  },
  {
    "text": "storage so I'm just going to log in to",
    "start": "1578130",
    "end": "1584060"
  },
  {
    "text": "kubernetes dashboard and take a look around here well things are coming up",
    "start": "1584060",
    "end": "1589710"
  },
  {
    "text": "you can see the deployments occurring",
    "start": "1589710",
    "end": "1595460"
  },
  {
    "text": "see the containers are starting it looks looks good thus far so now we can see",
    "start": "1595460",
    "end": "1602940"
  },
  {
    "text": "that the third node coming up and now the cluster should be there so",
    "start": "1602940",
    "end": "1609600"
  },
  {
    "text": "what i'm gonna do is i'm going to the operator logs in that top left corner and then all the rest of the",
    "start": "1609600",
    "end": "1615270"
  },
  {
    "text": "windows will be the the agents four zero through two just so you can see things",
    "start": "1615270",
    "end": "1621059"
  },
  {
    "text": "happen like when we do backups like where is the backup going to be scheduled so the way backups work is",
    "start": "1621059",
    "end": "1627630"
  },
  {
    "text": "that the operator determined picks out one of the secondary notes to perform",
    "start": "1627630",
    "end": "1632820"
  },
  {
    "text": "the backup from the backup is MySQL dump currently only we are working on",
    "start": "1632820",
    "end": "1638850"
  },
  {
    "text": "enterprise backup and we do have an architecture that allows you to have",
    "start": "1638850",
    "end": "1645090"
  },
  {
    "text": "different types of backup providers so here's the the - the WordPress container",
    "start": "1645090",
    "end": "1651260"
  },
  {
    "text": "pot I mean deployment and we're going to",
    "start": "1651260",
    "end": "1658020"
  },
  {
    "text": "specify the DD host it's localhost 6-4 4-6 we also are going to create an",
    "start": "1658020",
    "end": "1663659"
  },
  {
    "text": "external DNS deployment this is going to",
    "start": "1663659",
    "end": "1669210"
  },
  {
    "text": "connect to the Oracle cloud DNS service and I'm also going to load a secret from",
    "start": "1669210",
    "end": "1677070"
  },
  {
    "text": "a file here I'm not showing you that file so we're gonna create that now and",
    "start": "1677070",
    "end": "1685649"
  },
  {
    "text": "I'm going to watch the logs this will be interesting because you can see when we as as the the deployment for WordPress",
    "start": "1685649",
    "end": "1692159"
  },
  {
    "text": "comes up you'll see it's connected to Oracle cloud service now now we're going",
    "start": "1692159",
    "end": "1698610"
  },
  {
    "text": "to create the WordPress deployment as I mentioned this is going to run MySQL router and WordPress and it also sets a",
    "start": "1698610",
    "end": "1706370"
  },
  {
    "text": "domain host name for the WordPress service we're running wwq Bernese",
    "start": "1706370",
    "end": "1713360"
  },
  {
    "text": "cluster com",
    "start": "1713360",
    "end": "1716720"
  },
  {
    "text": "so you can see the load balancer now as an external service and a record has been added to DNS so at this point I'm",
    "start": "1720760",
    "end": "1735520"
  },
  {
    "text": "gonna look at just kind of confirm that it's there there it is there's a text record in any record that was created",
    "start": "1735520",
    "end": "1740559"
  },
  {
    "text": "that was kind of fast sorry about that but I was trying to squish things down so that we would have time so we're",
    "start": "1740559",
    "end": "1748690"
  },
  {
    "text": "going to create our WordPress site and I promise this is gonna go really fast that was really typing fast when I did",
    "start": "1748690",
    "end": "1754360"
  },
  {
    "text": "this so we have a blank slate right now",
    "start": "1754360",
    "end": "1761919"
  },
  {
    "text": "for a blog what's the best thing we should do at this point make a backup let's run a backup so we're gonna do",
    "start": "1761919",
    "end": "1767650"
  },
  {
    "text": "that so now we're gonna create a backup",
    "start": "1767650",
    "end": "1772960"
  },
  {
    "text": "this is going to be the site before we customized it so it's going to be called interestingly - ql - backup - one here",
    "start": "1772960",
    "end": "1781150"
  },
  {
    "text": "are the oracle cloud object storage credentials we're creating a secret for",
    "start": "1781150",
    "end": "1787330"
  },
  {
    "text": "it to be able to connect to it we're",
    "start": "1787330",
    "end": "1794410"
  },
  {
    "text": "creating the backup now we're gonna go back to the other screen watch this so",
    "start": "1794410",
    "end": "1799900"
  },
  {
    "text": "if you see in the lower right window you can see that's where the backup happened that's on node that that's on the the",
    "start": "1799900",
    "end": "1806320"
  },
  {
    "text": "third node in the cluster it could have been any one of the secondaries so yeah",
    "start": "1806320",
    "end": "1813460"
  },
  {
    "text": "this is where I got really fast I drank a lot of coffee yerba mate day and I just went to town WordPress you know I",
    "start": "1813460",
    "end": "1824470"
  },
  {
    "text": "just cut and pasted the the readme from the operator source in there I could",
    "start": "1824470",
    "end": "1832870"
  },
  {
    "text": "have done the whole tip some lorem but I didn't do that so now we're gonna make a second backup because well we have a",
    "start": "1832870",
    "end": "1838030"
  },
  {
    "text": "we've done all this work customizing our blog",
    "start": "1838030",
    "end": "1842220"
  },
  {
    "text": "same place ah look at that so this is a command-line tool for Oracle clouds DNS",
    "start": "1847620",
    "end": "1855000"
  },
  {
    "text": "well Oracle cloud in general so look at our backups we have two of them I'm",
    "start": "1855000",
    "end": "1860700"
  },
  {
    "text": "going to describe the second one some information about that that's interesting so let's connect to the cluster",
    "start": "1860700",
    "end": "1869390"
  },
  {
    "text": "I was really dumb dope that was a Gomer pile move anybody know",
    "start": "1875630",
    "end": "1881120"
  },
  {
    "text": "who Gomer pile is I'm getting old yeah yeah you do okay go always sergeant",
    "start": "1881120",
    "end": "1892720"
  },
  {
    "text": "I've never truncated a table or dropped a table good thing there are backups we",
    "start": "1893080",
    "end": "1899030"
  },
  {
    "text": "did a backup so we're in pretty good shape here all the time doing what so",
    "start": "1899030",
    "end": "1913700"
  },
  {
    "text": "we've done a restore restore happened on zero this time ah that's the one from",
    "start": "1913700",
    "end": "1924170"
  },
  {
    "text": "we've got to do number two so let's do number two create a backup for two Bing",
    "start": "1924170",
    "end": "1930020"
  },
  {
    "text": "bong bang ping run it where's it gonna",
    "start": "1930020",
    "end": "1935450"
  },
  {
    "text": "happen it happened on number zero that's",
    "start": "1935450",
    "end": "1944120"
  },
  {
    "text": "cool I mean it it's so much easier than the olden days back when we were at slash dot somebody's calling up sweating",
    "start": "1944120",
    "end": "1950420"
  },
  {
    "text": "bullets because things are broken that's the beauty of kubernetes so to keep it",
    "start": "1950420",
    "end": "1957260"
  },
  {
    "text": "going I'm gonna bring this back up here and go into presenter view this better",
    "start": "1957260",
    "end": "1964730"
  },
  {
    "text": "not go back to the first slide good",
    "start": "1964730",
    "end": "1971030"
  },
  {
    "start": "1970000",
    "end": "1980000"
  },
  {
    "text": "sometimes it does that it's really annoying so is as I was going to show",
    "start": "1971030",
    "end": "1976310"
  },
  {
    "text": "you this this is the operator dimmer that's what it's basically doing but for this time sake we're gonna move on to",
    "start": "1976310",
    "end": "1982730"
  },
  {
    "start": "1980000",
    "end": "2032000"
  },
  {
    "text": "the press labs my SQL operator so this press Labs is a company based out of Romania they build WordPress websites",
    "start": "1982730",
    "end": "1989270"
  },
  {
    "text": "and they have a ton of data I just really started looking into this in the last few weeks and it's pretty interesting it uses MySQL or github x'",
    "start": "1989270",
    "end": "1997820"
  },
  {
    "text": "MySQL Orchestrator it's something that a friend of Mines lomi Nowak wrote along with several other developers and it's",
    "start": "1997820",
    "end": "2004630"
  },
  {
    "text": "basically for managing replications topology it uses asynchronous replication it",
    "start": "2004630",
    "end": "2010920"
  },
  {
    "text": "makes it makes use of the percona utility user which allows it to manage the the cluster it uses paconne extra DB",
    "start": "2010920",
    "end": "2019700"
  },
  {
    "text": "5.7 there's a backup actually there's no restore that's a slide cut and paste",
    "start": "2019700",
    "end": "2026520"
  },
  {
    "text": "thing but it does backup they're working on restore and it uses the custom resources for that there are a number of",
    "start": "2026520",
    "end": "2034590"
  },
  {
    "start": "2032000",
    "end": "2100000"
  },
  {
    "text": "containers with this the operator itself has two containers there's the operator container itself and there's also the",
    "start": "2034590",
    "end": "2041640"
  },
  {
    "text": "orchestrator container and that connects to every note every MySQL instance",
    "start": "2041640",
    "end": "2047850"
  },
  {
    "text": "within the state full set so that I can manage it there's two init containers",
    "start": "2047850",
    "end": "2053220"
  },
  {
    "text": "there's init minus QL which sets up the configuration files kind of like that pattern I showed you with the real basic",
    "start": "2053220",
    "end": "2058500"
  },
  {
    "text": "master-slave replication and then there's also clone MySQL that of course it's pretty obvious what that does it",
    "start": "2058500",
    "end": "2065220"
  },
  {
    "text": "clones based off of the first node and does the restores then there's of course the application container is a pre Kona",
    "start": "2065220",
    "end": "2072179"
  },
  {
    "text": "container Picone a database and then there's some sidecar containers there's there's a sidecar container which does a",
    "start": "2072179",
    "end": "2078090"
  },
  {
    "text": "lot of the work just like the the MySQL agent did in the previous example I showed you it it takes care of",
    "start": "2078090",
    "end": "2084659"
  },
  {
    "text": "maintaining running the clustered running various actions within the state",
    "start": "2084660",
    "end": "2090960"
  },
  {
    "text": "will set there's also PT heartbeat which just provides information back to Orchestrator and there's also a metrics",
    "start": "2090960",
    "end": "2098070"
  },
  {
    "text": "Explorer container to Prometheus here's kind of a diagram I put together to",
    "start": "2098070",
    "end": "2104520"
  },
  {
    "start": "2100000",
    "end": "2133000"
  },
  {
    "text": "explain how this works you can see that the two init containers taking care of",
    "start": "2104520",
    "end": "2110360"
  },
  {
    "text": "talking to object storage to do the clone the sidecar container interacting",
    "start": "2110360",
    "end": "2115650"
  },
  {
    "text": "with Orchestrator actually it's not sidecar it connects to MySQL that arrow",
    "start": "2115650",
    "end": "2122040"
  },
  {
    "text": "is wrong something I did right before the talk and of course we have the operator and then PT heartbeat and the",
    "start": "2122040",
    "end": "2129030"
  },
  {
    "text": "Prometheus exporter",
    "start": "2129030",
    "end": "2132200"
  },
  {
    "start": "2133000",
    "end": "2490000"
  },
  {
    "text": "the do a demo of the press labs operator right now and what this is going to do is show you a three node cluster created",
    "start": "2134480",
    "end": "2141260"
  },
  {
    "text": "by the MySQL operator it's going to show you each of the components the MySQL Orchestrator the MySQL operator",
    "start": "2141260",
    "end": "2147650"
  },
  {
    "text": "container and in each pod with in with the MySQL and sidecar containers I'll",
    "start": "2147650",
    "end": "2154790"
  },
  {
    "text": "show you the promotion of one of the slaves to master and then shutdown of the master kind of a dumb thing to do",
    "start": "2154790",
    "end": "2161240"
  },
  {
    "text": "but it's pretty resilient the the youtube videos for these are also online",
    "start": "2161240",
    "end": "2166730"
  },
  {
    "text": "so I'm going to do what I did before which is play it with an external",
    "start": "2166730",
    "end": "2173140"
  },
  {
    "text": "so as as before we have a clean slate",
    "start": "2185690",
    "end": "2190630"
  },
  {
    "text": "and we're going to add the repo for it then we're going to install the operator at this point the operator will be",
    "start": "2193000",
    "end": "2199940"
  },
  {
    "text": "coming up don't go all right so this is",
    "start": "2199940",
    "end": "2208280"
  },
  {
    "text": "the name of the cluster it has three Brad Lopes and of course it uses secrets because the sidecar container also needs",
    "start": "2208280",
    "end": "2214069"
  },
  {
    "text": "to be able to talk also Orchestrator needs to be able to talk to the nodes we're going to create a namespace to run",
    "start": "2214069",
    "end": "2221150"
  },
  {
    "text": "the syn so we're gonna look at the logs for the operator looks like things are",
    "start": "2221150",
    "end": "2227599"
  },
  {
    "text": "working well the next thing we're going to do is look at the orchestrator logging you can see that it's also",
    "start": "2227599",
    "end": "2233450"
  },
  {
    "text": "connected to every instance that comes up subsequently we also going to do a",
    "start": "2233450",
    "end": "2238970"
  },
  {
    "text": "port forward this is really nice about orchestrators it has a really nice UI for managing your topology there's",
    "start": "2238970",
    "end": "2246380"
  },
  {
    "text": "nothing at first as things come up you will see more nodes come up also watching the the persistent volumes as",
    "start": "2246380",
    "end": "2253400"
  },
  {
    "text": "they get bound just kind of knowing what what's going on and when it's going to be ready to start operating on",
    "start": "2253400",
    "end": "2260109"
  },
  {
    "text": "we look also looking at MySQL things look like things are working well there the first first note is up the master",
    "start": "2270920",
    "end": "2277980"
  },
  {
    "text": "there are no slaves attached to talking to it yet but that'll change quickly you",
    "start": "2277980",
    "end": "2288750"
  },
  {
    "text": "can see now the second note is coming up second pod is coming up and then the",
    "start": "2288750",
    "end": "2295530"
  },
  {
    "text": "third part is starting to come up do a reload we'll see that there is a slave connected third pot is coming up and",
    "start": "2295530",
    "end": "2310100"
  },
  {
    "text": "then pretty soon and everything will be we'll have two slaves and a master ah",
    "start": "2310100",
    "end": "2322020"
  },
  {
    "text": "now we're ready so now we can do some interesting things with this we're going",
    "start": "2322020",
    "end": "2331680"
  },
  {
    "text": "to look at the sidecar container for the first for the master now that looks good",
    "start": "2331680",
    "end": "2339770"
  },
  {
    "text": "we're gonna look at the side cart and logs for the second the first slave",
    "start": "2339770",
    "end": "2346160"
  },
  {
    "text": "now the second slave we're in business",
    "start": "2346160",
    "end": "2350869"
  },
  {
    "text": "now we're gonna go into the master I'm going to look at the I'm gonna confirm that it is indeed a master and it is",
    "start": "2355220",
    "end": "2361869"
  },
  {
    "text": "it's just kind of neat to see this work for me that this like ultimate all the",
    "start": "2361869",
    "end": "2367190"
  },
  {
    "text": "the times I had to manage masters and slaves and write scripts and chef",
    "start": "2367190",
    "end": "2374869"
  },
  {
    "text": "cookbooks chef cookbooks it's all automatically done for you so you can see that we have",
    "start": "2374869",
    "end": "2381230"
  },
  {
    "text": "a master and a slave what does the slave connected to it should be connected to node 0 sure enough it is so now we're",
    "start": "2381230",
    "end": "2393500"
  },
  {
    "text": "going to promote that danger zone I should have queued some Kenny Loggins",
    "start": "2393500",
    "end": "2399530"
  },
  {
    "text": "on this it would have been really cool like I can't top Diana Ross though so",
    "start": "2399530",
    "end": "2408560"
  },
  {
    "text": "show slave status look at that the node",
    "start": "2408560",
    "end": "2414589"
  },
  {
    "text": "zero is now a slave that would look how fast that was to didn't have to go in",
    "start": "2414589",
    "end": "2419930"
  },
  {
    "text": "there and figure out which log position we were at then have my previous boss",
    "start": "2419930",
    "end": "2424970"
  },
  {
    "text": "calling me up freaking out it just works so now we're gonna shut it down that's",
    "start": "2424970",
    "end": "2437180"
  },
  {
    "text": "just wrong oh no it's black that means it's broken and also the slaves are",
    "start": "2437180",
    "end": "2443990"
  },
  {
    "text": "unhappy not to fear orchestrators doing",
    "start": "2443990",
    "end": "2450079"
  },
  {
    "text": "its work it's bringing a backup also kubernetes is doing its work in bringing the pod back up and it's happening so",
    "start": "2450079",
    "end": "2456140"
  },
  {
    "text": "quickly that it it's still maintaining being master in some cases it might take",
    "start": "2456140",
    "end": "2461180"
  },
  {
    "text": "a little bit longer and what will happen is Orchestrator will promote one of the other ones that's kind of neat if you do it right you can go like through this",
    "start": "2461180",
    "end": "2467450"
  },
  {
    "text": "whole cycle and see each one kind of cycling through alright so get back to",
    "start": "2467450",
    "end": "2474440"
  },
  {
    "text": "the slides Wow look at that we're at the bit/s slide I made it",
    "start": "2474440",
    "end": "2482050"
  },
  {
    "text": "so I got the editing view presenter view",
    "start": "2482050",
    "end": "2489130"
  },
  {
    "text": "okay so I've updated the graphics the test is now accompanied by the way the",
    "start": "2489130",
    "end": "2497480"
  },
  {
    "start": "2490000",
    "end": "2584000"
  },
  {
    "text": "test is a wonderful thing it's what I consider sharding on a silver platter how many of you have written your own",
    "start": "2497480",
    "end": "2502970"
  },
  {
    "text": "sharding systems it's a lot of fun isn't it yeah yeah nice that's great",
    "start": "2502970",
    "end": "2512750"
  },
  {
    "text": "we didn't even have that well we had something like that at Slashdot so the",
    "start": "2512750",
    "end": "2518780"
  },
  {
    "text": "test is a solution for your database solution for deploying scaling and managing large clusters of minus QL",
    "start": "2518780",
    "end": "2524660"
  },
  {
    "text": "instances it's been the YouTube database store since 2011 it's cloud ready the",
    "start": "2524660",
    "end": "2531440"
  },
  {
    "text": "cloud is coming somebody here sitting here told me that once it helps you scale with transparent dynamic sharding",
    "start": "2531440",
    "end": "2537860"
  },
  {
    "text": "and the ability to continue charting in or out cluster management there's tools",
    "start": "2537860",
    "end": "2542930"
  },
  {
    "text": "for backups shard schema management it",
    "start": "2542930",
    "end": "2548240"
  },
  {
    "text": "uses the MySQL client protocol and G RPC there's a connection pooling it has its",
    "start": "2548240",
    "end": "2553430"
  },
  {
    "text": "own lightweight threads that it takes advantage of for go it also protects",
    "start": "2553430",
    "end": "2558440"
  },
  {
    "text": "MySQL with query deduping rewriting sanitize a sanitization there are a",
    "start": "2558440",
    "end": "2564290"
  },
  {
    "text": "number of monitoring tools built in to all by the test binaries",
    "start": "2564290",
    "end": "2569480"
  },
  {
    "text": "if you want to mutton migrate your MySQL application to the cloud and you're looking for something that has a really",
    "start": "2569480",
    "end": "2576350"
  },
  {
    "text": "bulletproof charting architecture or you want to move to sharding that's quite",
    "start": "2576350",
    "end": "2581690"
  },
  {
    "text": "ideal for this you know I don't have a slide for this but the kubernetes says",
    "start": "2581690",
    "end": "2588620"
  },
  {
    "start": "2584000",
    "end": "2648000"
  },
  {
    "text": "one thing I wanted to stress on this is kubernetes has really made it possible to do things that we couldn't do before",
    "start": "2588620",
    "end": "2595690"
  },
  {
    "text": "how much time oh no is there anybody",
    "start": "2595690",
    "end": "2603830"
  },
  {
    "text": "coming after this oh I'm sorry I'm really sorry are you sure you don't want",
    "start": "2603830",
    "end": "2608990"
  },
  {
    "text": "to see the dump anyway I wish I could cover everything",
    "start": "2608990",
    "end": "2617560"
  },
  {
    "text": "it's it's very difficult there you know my my takeaway in this is that",
    "start": "2617560",
    "end": "2623220"
  },
  {
    "text": "kubernetes makes it possible do a lot of really cool things with databases and",
    "start": "2623220",
    "end": "2629790"
  },
  {
    "text": "running the databases is made easier with kubernetes people would think oh no I don't have that complexity but it",
    "start": "2630030",
    "end": "2636130"
  },
  {
    "text": "makes it easier to run it you don't have to do all of these manual steps and go through the pain that you used to go",
    "start": "2636130",
    "end": "2641320"
  },
  {
    "text": "through in previous times back in the dark ages thank you for coming I'm very sorry I went over",
    "start": "2641320",
    "end": "2647080"
  },
  {
    "text": "[Music] [Applause]",
    "start": "2647080",
    "end": "2650389"
  }
]