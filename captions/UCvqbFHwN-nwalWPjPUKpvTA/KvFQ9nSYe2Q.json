[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "hi everybody uh thanks for joining our",
    "start": "1439",
    "end": "3600"
  },
  {
    "text": "talk today",
    "start": "3600",
    "end": "4560"
  },
  {
    "text": "uh this year it's of course it's virtual",
    "start": "4560",
    "end": "6879"
  },
  {
    "text": "so we don't get to see",
    "start": "6879",
    "end": "8400"
  },
  {
    "text": "all of you in person but we're hoping uh",
    "start": "8400",
    "end": "10880"
  },
  {
    "text": "this time next year there will be",
    "start": "10880",
    "end": "12480"
  },
  {
    "text": "an eu cube con uh when it's safe to",
    "start": "12480",
    "end": "14799"
  },
  {
    "text": "travel and",
    "start": "14799",
    "end": "15759"
  },
  {
    "text": "look forward to seeing everyone then",
    "start": "15759",
    "end": "18000"
  },
  {
    "text": "today we're going to",
    "start": "18000",
    "end": "19279"
  },
  {
    "text": "be talking about service identity uh and",
    "start": "19279",
    "end": "22560"
  },
  {
    "text": "how",
    "start": "22560",
    "end": "23439"
  },
  {
    "text": "pretty much it's it's fundamental to",
    "start": "23439",
    "end": "25599"
  },
  {
    "text": "achieving zero trust in a cloud",
    "start": "25599",
    "end": "27680"
  },
  {
    "text": "native uh environment i'm matt i'm from",
    "start": "27680",
    "end": "31920"
  },
  {
    "start": "31000",
    "end": "104000"
  },
  {
    "text": "uh jet stack just like josh uh he's",
    "start": "31920",
    "end": "34000"
  },
  {
    "text": "joining me today",
    "start": "34000",
    "end": "35120"
  },
  {
    "text": "um we're a company focused on cloud",
    "start": "35120",
    "end": "37680"
  },
  {
    "text": "native and we've been working",
    "start": "37680",
    "end": "39200"
  },
  {
    "text": "in the kubernetes ecosystem since the",
    "start": "39200",
    "end": "41680"
  },
  {
    "text": "very early days",
    "start": "41680",
    "end": "42960"
  },
  {
    "text": "back to about 2014 2015 uh when cube was",
    "start": "42960",
    "end": "46480"
  },
  {
    "text": "first open sourced not really that long",
    "start": "46480",
    "end": "49120"
  },
  {
    "text": "ago",
    "start": "49120",
    "end": "49600"
  },
  {
    "text": "it's amazing how far we've come in that",
    "start": "49600",
    "end": "52000"
  },
  {
    "text": "time we've worked with",
    "start": "52000",
    "end": "53840"
  },
  {
    "text": "many companies who have adopted cloud",
    "start": "53840",
    "end": "55920"
  },
  {
    "text": "native uh from you know some from",
    "start": "55920",
    "end": "58160"
  },
  {
    "text": "startups to",
    "start": "58160",
    "end": "59280"
  },
  {
    "text": "some of the largest enterprises and",
    "start": "59280",
    "end": "62239"
  },
  {
    "text": "along the way",
    "start": "62239",
    "end": "63359"
  },
  {
    "text": "we've contributed to open source",
    "start": "63359",
    "end": "65439"
  },
  {
    "text": "upstream",
    "start": "65439",
    "end": "66560"
  },
  {
    "text": "and we've uh also open-sourced a number",
    "start": "66560",
    "end": "69200"
  },
  {
    "text": "of projects and we're probably best",
    "start": "69200",
    "end": "70720"
  },
  {
    "text": "known",
    "start": "70720",
    "end": "71520"
  },
  {
    "text": "for the the cert manager project which",
    "start": "71520",
    "end": "73840"
  },
  {
    "text": "we originally created and",
    "start": "73840",
    "end": "75600"
  },
  {
    "text": "now work on with lots of contributors um",
    "start": "75600",
    "end": "78880"
  },
  {
    "text": "in the community it's and of course it's",
    "start": "78880",
    "end": "80560"
  },
  {
    "text": "now a cncf project",
    "start": "80560",
    "end": "82640"
  },
  {
    "text": "as well",
    "start": "82640",
    "end": "85040"
  },
  {
    "text": "josh i'm joined today by josh you want",
    "start": "85680",
    "end": "87840"
  },
  {
    "text": "to introduce yourself to",
    "start": "87840",
    "end": "89439"
  },
  {
    "text": "yeah hi everyone uh yeah i'm josh um i'm",
    "start": "89439",
    "end": "91680"
  },
  {
    "text": "a software engineer",
    "start": "91680",
    "end": "92880"
  },
  {
    "text": "um at jet stack um uh do a few things at",
    "start": "92880",
    "end": "96240"
  },
  {
    "text": "jet stack but yeah primarily",
    "start": "96240",
    "end": "97920"
  },
  {
    "text": "uh part of the set manager team",
    "start": "97920",
    "end": "101280"
  },
  {
    "text": "great thanks josh",
    "start": "101280",
    "end": "104560"
  },
  {
    "start": "104000",
    "end": "150000"
  },
  {
    "text": "so today uh we're going to be as i said",
    "start": "105200",
    "end": "107920"
  },
  {
    "text": "uh looking at",
    "start": "107920",
    "end": "109280"
  },
  {
    "text": "xero trust of course zero trust is it's",
    "start": "109280",
    "end": "112159"
  },
  {
    "text": "quite a buzzword",
    "start": "112159",
    "end": "113360"
  },
  {
    "text": "but we're going to look at it",
    "start": "113360",
    "end": "114799"
  },
  {
    "text": "specifically um in",
    "start": "114799",
    "end": "116640"
  },
  {
    "text": "the context of cloud native and what it",
    "start": "116640",
    "end": "119040"
  },
  {
    "text": "means for",
    "start": "119040",
    "end": "120399"
  },
  {
    "text": "kubernetes and also what it means in a",
    "start": "120399",
    "end": "123200"
  },
  {
    "text": "service mesh",
    "start": "123200",
    "end": "124000"
  },
  {
    "text": "how you can use how you can achieve xero",
    "start": "124000",
    "end": "126240"
  },
  {
    "text": "trust",
    "start": "126240",
    "end": "127280"
  },
  {
    "text": "using the identity management uh the",
    "start": "127280",
    "end": "130319"
  },
  {
    "text": "service mesh",
    "start": "130319",
    "end": "131200"
  },
  {
    "text": "provides um we're gonna be also looking",
    "start": "131200",
    "end": "133840"
  },
  {
    "text": "at how you can plug in set manager we're",
    "start": "133840",
    "end": "135760"
  },
  {
    "text": "behind the project and we've been",
    "start": "135760",
    "end": "137599"
  },
  {
    "text": "working uh she'll say wait yeah josh has",
    "start": "137599",
    "end": "139360"
  },
  {
    "text": "been working on some of the integrations",
    "start": "139360",
    "end": "141760"
  },
  {
    "text": "that tap into managing certificates and",
    "start": "141760",
    "end": "145440"
  },
  {
    "text": "providing those to",
    "start": "145440",
    "end": "146560"
  },
  {
    "text": "to the mesh and we've got a number of",
    "start": "146560",
    "end": "148239"
  },
  {
    "text": "demos as well so let's get going",
    "start": "148239",
    "end": "151360"
  },
  {
    "start": "150000",
    "end": "210000"
  },
  {
    "text": "so briefly to start we're going to",
    "start": "151360",
    "end": "154160"
  },
  {
    "text": "introduce the concepts of xero trust",
    "start": "154160",
    "end": "156959"
  },
  {
    "text": "in the context of cloud native so in",
    "start": "156959",
    "end": "160000"
  },
  {
    "text": "traditional network security",
    "start": "160000",
    "end": "162000"
  },
  {
    "text": "it's all very much about having you know",
    "start": "162000",
    "end": "164640"
  },
  {
    "text": "layers",
    "start": "164640",
    "end": "165760"
  },
  {
    "text": "of security um yeah a defense in depth",
    "start": "165760",
    "end": "168720"
  },
  {
    "text": "if you like",
    "start": "168720",
    "end": "169440"
  },
  {
    "text": "in order to protect really the most",
    "start": "169440",
    "end": "171680"
  },
  {
    "text": "sensitive",
    "start": "171680",
    "end": "173040"
  },
  {
    "text": "services and the model is really based",
    "start": "173040",
    "end": "176160"
  },
  {
    "text": "around",
    "start": "176160",
    "end": "176720"
  },
  {
    "text": "protecting protecting networks from",
    "start": "176720",
    "end": "179680"
  },
  {
    "text": "external",
    "start": "179680",
    "end": "180959"
  },
  {
    "text": "attackers and yeah often this gets",
    "start": "180959",
    "end": "183680"
  },
  {
    "text": "described as the castle remote",
    "start": "183680",
    "end": "185840"
  },
  {
    "text": "approach in which everything inside um",
    "start": "185840",
    "end": "189120"
  },
  {
    "text": "is trusted you know everything once you",
    "start": "189120",
    "end": "191840"
  },
  {
    "text": "once you're in",
    "start": "191840",
    "end": "192720"
  },
  {
    "text": "the castle effectively you're trusted um",
    "start": "192720",
    "end": "195360"
  },
  {
    "text": "but this really overlooks",
    "start": "195360",
    "end": "197599"
  },
  {
    "text": "really the threat of insider attack and",
    "start": "197599",
    "end": "199920"
  },
  {
    "text": "you know there have been a number of",
    "start": "199920",
    "end": "201920"
  },
  {
    "text": "high-profile cases where where breaches",
    "start": "201920",
    "end": "205200"
  },
  {
    "text": "have occurred",
    "start": "205200",
    "end": "207760"
  },
  {
    "start": "210000",
    "end": "421000"
  },
  {
    "text": "internally",
    "start": "210840",
    "end": "212959"
  },
  {
    "text": "so now let's move to the world of cloud",
    "start": "212959",
    "end": "216080"
  },
  {
    "text": "how do",
    "start": "216080",
    "end": "216879"
  },
  {
    "text": "how does this traditional network",
    "start": "216879",
    "end": "218319"
  },
  {
    "text": "security model uh does it does it work",
    "start": "218319",
    "end": "221280"
  },
  {
    "text": "um when in world of cloud multi and",
    "start": "221280",
    "end": "224799"
  },
  {
    "text": "hybrid cloud",
    "start": "224799",
    "end": "226400"
  },
  {
    "text": "it's actually it's really challenging um",
    "start": "226400",
    "end": "228560"
  },
  {
    "text": "no longer",
    "start": "228560",
    "end": "230000"
  },
  {
    "text": "it's no longer clear where the",
    "start": "230000",
    "end": "231200"
  },
  {
    "text": "perimeters lie um",
    "start": "231200",
    "end": "233040"
  },
  {
    "text": "and it really it's very difficult to",
    "start": "233040",
    "end": "235519"
  },
  {
    "text": "find a consistent means",
    "start": "235519",
    "end": "237439"
  },
  {
    "text": "of really drawing up those those",
    "start": "237439",
    "end": "239439"
  },
  {
    "text": "perimeters",
    "start": "239439",
    "end": "241200"
  },
  {
    "text": "it's let's say that the traditional",
    "start": "241200",
    "end": "243280"
  },
  {
    "text": "model of securing application networking",
    "start": "243280",
    "end": "245840"
  },
  {
    "text": "is really very much based on",
    "start": "245840",
    "end": "247200"
  },
  {
    "text": "infrastructure that",
    "start": "247200",
    "end": "249040"
  },
  {
    "text": "that changes very infrequently it's",
    "start": "249040",
    "end": "251599"
  },
  {
    "text": "static",
    "start": "251599",
    "end": "252959"
  },
  {
    "text": "we rely on fixed ip addresses um ports",
    "start": "252959",
    "end": "256000"
  },
  {
    "text": "uh access control lists firewalls and",
    "start": "256000",
    "end": "259919"
  },
  {
    "text": "in a world of cloud native uh this this",
    "start": "259919",
    "end": "262960"
  },
  {
    "text": "becomes highly challenging",
    "start": "262960",
    "end": "264639"
  },
  {
    "text": "and why because you know we've got",
    "start": "264639",
    "end": "266639"
  },
  {
    "text": "clusters in different clouds on",
    "start": "266639",
    "end": "268479"
  },
  {
    "text": "different networks and",
    "start": "268479",
    "end": "270479"
  },
  {
    "text": "virtual networks even and the workloads",
    "start": "270479",
    "end": "273759"
  },
  {
    "text": "um that run in those clouds and clusters",
    "start": "273759",
    "end": "276240"
  },
  {
    "text": "are really highlight",
    "start": "276240",
    "end": "277280"
  },
  {
    "text": "highly dynamic and ephemeral and some",
    "start": "277280",
    "end": "280479"
  },
  {
    "text": "are very short-lived some much more",
    "start": "280479",
    "end": "282880"
  },
  {
    "text": "longer-lived",
    "start": "282880",
    "end": "284080"
  },
  {
    "text": "and it's not just kubernetes right you",
    "start": "284080",
    "end": "285600"
  },
  {
    "text": "know we've got um functions here",
    "start": "285600",
    "end": "288320"
  },
  {
    "text": "serverless standard virtual machines",
    "start": "288320",
    "end": "292080"
  },
  {
    "text": "and of course infrastructure on-premise",
    "start": "292080",
    "end": "294400"
  },
  {
    "text": "that we",
    "start": "294400",
    "end": "295440"
  },
  {
    "text": "also need to integrate so it's clear",
    "start": "295440",
    "end": "297280"
  },
  {
    "text": "that the sort of perimeter-based",
    "start": "297280",
    "end": "299680"
  },
  {
    "text": "approach",
    "start": "299680",
    "end": "300479"
  },
  {
    "text": "um really just doesn't fit and it",
    "start": "300479",
    "end": "302479"
  },
  {
    "text": "doesn't scale",
    "start": "302479",
    "end": "303680"
  },
  {
    "text": "and it's incompatible with uh really how",
    "start": "303680",
    "end": "307440"
  },
  {
    "text": "we're building and and deploying",
    "start": "307440",
    "end": "310720"
  },
  {
    "text": "software uh today so instead",
    "start": "310720",
    "end": "314479"
  },
  {
    "text": "what we're going to move to where we",
    "start": "314479",
    "end": "316720"
  },
  {
    "text": "where where of course the industry is",
    "start": "316720",
    "end": "318080"
  },
  {
    "text": "moving to is a model",
    "start": "318080",
    "end": "319600"
  },
  {
    "text": "where effectively the network is",
    "start": "319600",
    "end": "321199"
  },
  {
    "text": "completely untrusted",
    "start": "321199",
    "end": "322800"
  },
  {
    "text": "and there is no implicit trust uh you",
    "start": "322800",
    "end": "325520"
  },
  {
    "text": "know you cannot trust",
    "start": "325520",
    "end": "327120"
  },
  {
    "text": "another service um yeah that doesn't",
    "start": "327120",
    "end": "330160"
  },
  {
    "text": "mean giving up on the defenses of course",
    "start": "330160",
    "end": "331759"
  },
  {
    "text": "at the perimeter",
    "start": "331759",
    "end": "332960"
  },
  {
    "text": "right but now we're assuming that the",
    "start": "332960",
    "end": "335600"
  },
  {
    "text": "attackers could well",
    "start": "335600",
    "end": "337440"
  },
  {
    "text": "be in our network they are in our",
    "start": "337440",
    "end": "338880"
  },
  {
    "text": "networks and that means making sure that",
    "start": "338880",
    "end": "341199"
  },
  {
    "text": "all communications",
    "start": "341199",
    "end": "342880"
  },
  {
    "text": "the service to service calls are secure",
    "start": "342880",
    "end": "345759"
  },
  {
    "text": "i mean",
    "start": "345759",
    "end": "347039"
  },
  {
    "text": "encrypted on the wire but also that the",
    "start": "347039",
    "end": "349759"
  },
  {
    "text": "services",
    "start": "349759",
    "end": "350560"
  },
  {
    "text": "are able to authenticate to each other",
    "start": "350560",
    "end": "354400"
  },
  {
    "text": "and that's each and every service each",
    "start": "354400",
    "end": "356880"
  },
  {
    "text": "and every time",
    "start": "356880",
    "end": "359360"
  },
  {
    "text": "so how do we do this well it means each",
    "start": "359360",
    "end": "362639"
  },
  {
    "text": "of this has to be able to identify",
    "start": "362639",
    "end": "364560"
  },
  {
    "text": "itself and we're talking here you know a",
    "start": "364560",
    "end": "367560"
  },
  {
    "text": "cryptographically",
    "start": "367560",
    "end": "369120"
  },
  {
    "text": "verifiable unique identity and that it",
    "start": "369120",
    "end": "372880"
  },
  {
    "text": "can attest",
    "start": "372880",
    "end": "374160"
  },
  {
    "text": "and with identity we can authenticate",
    "start": "374160",
    "end": "376800"
  },
  {
    "text": "between",
    "start": "376800",
    "end": "377280"
  },
  {
    "text": "services you know once we've got that we",
    "start": "377280",
    "end": "380080"
  },
  {
    "text": "can also begin to make",
    "start": "380080",
    "end": "381440"
  },
  {
    "text": "authorization requests you know we",
    "start": "381440",
    "end": "383360"
  },
  {
    "text": "understand",
    "start": "383360",
    "end": "384479"
  },
  {
    "text": "the service who it is um and we can make",
    "start": "384479",
    "end": "387600"
  },
  {
    "text": "a decision about",
    "start": "387600",
    "end": "388880"
  },
  {
    "text": "uh what uh that service um is requesting",
    "start": "388880",
    "end": "392400"
  },
  {
    "text": "you know",
    "start": "392400",
    "end": "392800"
  },
  {
    "text": "um for instance can this type of request",
    "start": "392800",
    "end": "396000"
  },
  {
    "text": "be made by this service um",
    "start": "396000",
    "end": "399120"
  },
  {
    "text": "yeah accessing a some particular",
    "start": "399120",
    "end": "400880"
  },
  {
    "text": "resource for instance and we've also",
    "start": "400880",
    "end": "402479"
  },
  {
    "text": "then got the ability to audit this",
    "start": "402479",
    "end": "405039"
  },
  {
    "text": "um providing things like flat detection",
    "start": "405039",
    "end": "407360"
  },
  {
    "text": "so on and",
    "start": "407360",
    "end": "408319"
  },
  {
    "text": "and so on and so forth but pretty much",
    "start": "408319",
    "end": "410560"
  },
  {
    "text": "though the foundation in all of this",
    "start": "410560",
    "end": "412639"
  },
  {
    "text": "is identity machine identity as it's",
    "start": "412639",
    "end": "416479"
  },
  {
    "text": "now being referred to by the analysts",
    "start": "416479",
    "end": "420560"
  },
  {
    "start": "421000",
    "end": "558000"
  },
  {
    "text": "so rather than relying on developers",
    "start": "421599",
    "end": "425280"
  },
  {
    "text": "uh actually obtaining uh identity",
    "start": "425280",
    "end": "428800"
  },
  {
    "text": "you know certificates um themselves and",
    "start": "428800",
    "end": "432560"
  },
  {
    "text": "applying um layers of uh",
    "start": "432560",
    "end": "436240"
  },
  {
    "text": "implementation for things like",
    "start": "436240",
    "end": "437840"
  },
  {
    "text": "observability",
    "start": "437840",
    "end": "439440"
  },
  {
    "text": "um that identity uh also",
    "start": "439440",
    "end": "442800"
  },
  {
    "text": "reliability features um service meshes",
    "start": "442800",
    "end": "445759"
  },
  {
    "text": "provide that",
    "start": "445759",
    "end": "446639"
  },
  {
    "text": "in really built into the platform and",
    "start": "446639",
    "end": "449919"
  },
  {
    "text": "this is a capability",
    "start": "449919",
    "end": "451759"
  },
  {
    "text": "that is programmable so it's dynamic",
    "start": "451759",
    "end": "455599"
  },
  {
    "text": "uh and is controlled with control plane",
    "start": "455599",
    "end": "458479"
  },
  {
    "text": "configuration",
    "start": "458479",
    "end": "459759"
  },
  {
    "text": "and the data plane itself um are proxies",
    "start": "459759",
    "end": "462720"
  },
  {
    "text": "so now rather than the",
    "start": "462720",
    "end": "464240"
  },
  {
    "text": "services i've got an example here a",
    "start": "464240",
    "end": "466240"
  },
  {
    "text": "service a service be communicating",
    "start": "466240",
    "end": "468080"
  },
  {
    "text": "directly",
    "start": "468080",
    "end": "469199"
  },
  {
    "text": "um the services communicate via",
    "start": "469199",
    "end": "472400"
  },
  {
    "text": "these proxies and these proxies are",
    "start": "472400",
    "end": "474240"
  },
  {
    "text": "securely connected",
    "start": "474240",
    "end": "476639"
  },
  {
    "text": "using mtls and",
    "start": "476639",
    "end": "479919"
  },
  {
    "text": "you know credentials which are obtained",
    "start": "479919",
    "end": "482560"
  },
  {
    "text": "and renewed",
    "start": "482560",
    "end": "484080"
  },
  {
    "text": "um and have that identity encoded in",
    "start": "484080",
    "end": "485680"
  },
  {
    "text": "them and we're going to talk a bit more",
    "start": "485680",
    "end": "486720"
  },
  {
    "text": "about how",
    "start": "486720",
    "end": "488000"
  },
  {
    "text": "the identities um are obtained and what",
    "start": "488000",
    "end": "491199"
  },
  {
    "text": "they are",
    "start": "491199",
    "end": "492479"
  },
  {
    "text": "but this is uh the service measures are",
    "start": "492479",
    "end": "494479"
  },
  {
    "text": "incredibly",
    "start": "494479",
    "end": "495840"
  },
  {
    "text": "uh incredibly convenient they they take",
    "start": "495840",
    "end": "498319"
  },
  {
    "text": "away a lot of what a developer would",
    "start": "498319",
    "end": "499840"
  },
  {
    "text": "typically do",
    "start": "499840",
    "end": "501039"
  },
  {
    "text": "and they do yeah and we know we're",
    "start": "501039",
    "end": "502800"
  },
  {
    "text": "developing developing things like this",
    "start": "502800",
    "end": "504639"
  },
  {
    "text": "it's quite easy and to get security",
    "start": "504639",
    "end": "506720"
  },
  {
    "text": "wrong",
    "start": "506720",
    "end": "507280"
  },
  {
    "text": "and so service mesh is really convenient",
    "start": "507280",
    "end": "509919"
  },
  {
    "text": "because they take away",
    "start": "509919",
    "end": "511599"
  },
  {
    "text": "a lot of this um difficult complex",
    "start": "511599",
    "end": "514479"
  },
  {
    "text": "implementation and put it into",
    "start": "514479",
    "end": "516560"
  },
  {
    "text": "if you like the network layer and enable",
    "start": "516560",
    "end": "519839"
  },
  {
    "text": "it to be",
    "start": "519839",
    "end": "520640"
  },
  {
    "text": "programmable and so we're going to look",
    "start": "520640",
    "end": "522159"
  },
  {
    "text": "today at how specifically",
    "start": "522159",
    "end": "524240"
  },
  {
    "text": "the service measures can help us uh",
    "start": "524240",
    "end": "526640"
  },
  {
    "text": "manage",
    "start": "526640",
    "end": "527760"
  },
  {
    "text": "that identity and then importantly use",
    "start": "527760",
    "end": "530320"
  },
  {
    "text": "that identity to do the likes of",
    "start": "530320",
    "end": "532720"
  },
  {
    "text": "authorization policy based authorized",
    "start": "532720",
    "end": "536080"
  },
  {
    "text": "asian",
    "start": "536080",
    "end": "538399"
  },
  {
    "text": "so i mentioned empty less or meat shorty",
    "start": "540560",
    "end": "544000"
  },
  {
    "text": "less and that",
    "start": "544000",
    "end": "545279"
  },
  {
    "text": "that is how the proxies communicate in a",
    "start": "545279",
    "end": "548080"
  },
  {
    "text": "mesh",
    "start": "548080",
    "end": "548800"
  },
  {
    "text": "uh between you know between the services",
    "start": "548800",
    "end": "551200"
  },
  {
    "text": "um that are in the mesh",
    "start": "551200",
    "end": "552720"
  },
  {
    "text": "uh josh you're gonna talk to us about",
    "start": "552720",
    "end": "554320"
  },
  {
    "text": "what mtls is and",
    "start": "554320",
    "end": "556160"
  },
  {
    "text": "how it works",
    "start": "556160",
    "end": "558800"
  },
  {
    "start": "558000",
    "end": "822000"
  },
  {
    "text": "great so i'm gonna talk about mutual tls",
    "start": "559440",
    "end": "562320"
  },
  {
    "text": "and",
    "start": "562320",
    "end": "562800"
  },
  {
    "text": "how service mesh uses mutual tls to",
    "start": "562800",
    "end": "565600"
  },
  {
    "text": "create a",
    "start": "565600",
    "end": "566160"
  },
  {
    "text": "network of xero trust so",
    "start": "566160",
    "end": "569600"
  },
  {
    "text": "as was mentioned earlier so all",
    "start": "569600",
    "end": "573120"
  },
  {
    "text": "workloads running in the mesh old",
    "start": "573120",
    "end": "575920"
  },
  {
    "text": "kubernetes",
    "start": "575920",
    "end": "576720"
  },
  {
    "text": "um have a side car container uh running",
    "start": "576720",
    "end": "579920"
  },
  {
    "text": "next to them",
    "start": "579920",
    "end": "580720"
  },
  {
    "text": "um and that's our sidecar container is a",
    "start": "580720",
    "end": "583040"
  },
  {
    "text": "proxy",
    "start": "583040",
    "end": "584000"
  },
  {
    "text": "um and the responsibility of the proxy",
    "start": "584000",
    "end": "585920"
  },
  {
    "text": "here is to intercept",
    "start": "585920",
    "end": "587040"
  },
  {
    "text": "all ingress and egress traffic from the",
    "start": "587040",
    "end": "589760"
  },
  {
    "text": "service which is",
    "start": "589760",
    "end": "590800"
  },
  {
    "text": "backing that proxy so what this means in",
    "start": "590800",
    "end": "593760"
  },
  {
    "text": "terms of connections is say",
    "start": "593760",
    "end": "595680"
  },
  {
    "text": "service a wants to talk to service b or",
    "start": "595680",
    "end": "597680"
  },
  {
    "text": "service a will open up that connection",
    "start": "597680",
    "end": "600080"
  },
  {
    "text": "that will get intercepted by the proxy",
    "start": "600080",
    "end": "602240"
  },
  {
    "text": "that proxy will then",
    "start": "602240",
    "end": "603279"
  },
  {
    "text": "uh connect to service b's proxy and uh",
    "start": "603279",
    "end": "605839"
  },
  {
    "text": "then assuming that connection",
    "start": "605839",
    "end": "607360"
  },
  {
    "text": "uh uh um is uh okay uh that traffic will",
    "start": "607360",
    "end": "611279"
  },
  {
    "text": "then",
    "start": "611279",
    "end": "611600"
  },
  {
    "text": "um get forwarded on to to service b",
    "start": "611600",
    "end": "615440"
  },
  {
    "text": "now it's worth noting here that um the",
    "start": "615440",
    "end": "617600"
  },
  {
    "text": "the way these",
    "start": "617600",
    "end": "618560"
  },
  {
    "text": "uh kind of proxies are uh injected like",
    "start": "618560",
    "end": "620800"
  },
  {
    "text": "this is means that there's no code",
    "start": "620800",
    "end": "622880"
  },
  {
    "text": "changes needed for",
    "start": "622880",
    "end": "624079"
  },
  {
    "text": "um any service um and as far as either",
    "start": "624079",
    "end": "626480"
  },
  {
    "text": "side of this is concerned",
    "start": "626480",
    "end": "627600"
  },
  {
    "text": "uh they're connecting to each other uh",
    "start": "627600",
    "end": "629760"
  },
  {
    "text": "normally over http",
    "start": "629760",
    "end": "631519"
  },
  {
    "text": "um etc",
    "start": "631519",
    "end": "634399"
  },
  {
    "text": "um so if you talk about uh or if we",
    "start": "635040",
    "end": "637040"
  },
  {
    "text": "think about um what",
    "start": "637040",
    "end": "638320"
  },
  {
    "text": "uh network flow uh would look like um so",
    "start": "638320",
    "end": "641519"
  },
  {
    "text": "when these",
    "start": "641519",
    "end": "642320"
  },
  {
    "text": "um services uh uh boot up they request",
    "start": "642320",
    "end": "645920"
  },
  {
    "text": "these crypto bundles from the control",
    "start": "645920",
    "end": "647920"
  },
  {
    "text": "plane",
    "start": "647920",
    "end": "648480"
  },
  {
    "text": "um of the of the mesh they're uh running",
    "start": "648480",
    "end": "650959"
  },
  {
    "text": "in so",
    "start": "650959",
    "end": "651600"
  },
  {
    "text": "inside these crypto bundles and can",
    "start": "651600",
    "end": "653600"
  },
  {
    "text": "contain the um",
    "start": "653600",
    "end": "654959"
  },
  {
    "text": "root of trust um of the mesh",
    "start": "654959",
    "end": "658320"
  },
  {
    "text": "along with a sign certificate uh which",
    "start": "658320",
    "end": "661120"
  },
  {
    "text": "will contain their machine identity",
    "start": "661120",
    "end": "663120"
  },
  {
    "text": "uh inside um so the the kind of service",
    "start": "663120",
    "end": "665440"
  },
  {
    "text": "identity",
    "start": "665440",
    "end": "666240"
  },
  {
    "text": "um as well as the private key which will",
    "start": "666240",
    "end": "668480"
  },
  {
    "text": "be used um",
    "start": "668480",
    "end": "669600"
  },
  {
    "text": "uh uh with which is the kind of",
    "start": "669600",
    "end": "672000"
  },
  {
    "text": "corresponding pair with the science",
    "start": "672000",
    "end": "673440"
  },
  {
    "text": "certificate",
    "start": "673440",
    "end": "674240"
  },
  {
    "text": "um and these these will be stored inside",
    "start": "674240",
    "end": "676399"
  },
  {
    "text": "the proxy",
    "start": "676399",
    "end": "677920"
  },
  {
    "text": "these will be used to kind of open",
    "start": "677920",
    "end": "679440"
  },
  {
    "text": "connections up to the other proxy",
    "start": "679440",
    "end": "682720"
  },
  {
    "text": "so um if we say that client a uh wants",
    "start": "683440",
    "end": "686320"
  },
  {
    "text": "to",
    "start": "686320",
    "end": "686800"
  },
  {
    "text": "cyber say wants to connect to service b",
    "start": "686800",
    "end": "688880"
  },
  {
    "text": "will happen is the proxy will connect to",
    "start": "688880",
    "end": "690480"
  },
  {
    "text": "uh the other proxy uh the server will uh",
    "start": "690480",
    "end": "693120"
  },
  {
    "text": "just like a normal tls",
    "start": "693120",
    "end": "694399"
  },
  {
    "text": "uh present uh its signed certificate",
    "start": "694399",
    "end": "697680"
  },
  {
    "text": "the client will then uh verify the",
    "start": "697680",
    "end": "699360"
  },
  {
    "text": "contents of that certificate so it's",
    "start": "699360",
    "end": "701200"
  },
  {
    "text": "going to verify",
    "start": "701200",
    "end": "702160"
  },
  {
    "text": "um that it's been signed by the root of",
    "start": "702160",
    "end": "704160"
  },
  {
    "text": "trust that it's expecting and also that",
    "start": "704160",
    "end": "706320"
  },
  {
    "text": "the identity",
    "start": "706320",
    "end": "707200"
  },
  {
    "text": "uh matches that which it which is um uh",
    "start": "707200",
    "end": "710240"
  },
  {
    "text": "expecting and also make networking",
    "start": "710240",
    "end": "711839"
  },
  {
    "text": "decisions here um and it can also make",
    "start": "711839",
    "end": "713839"
  },
  {
    "text": "you know authorization to decisions here",
    "start": "713839",
    "end": "715600"
  },
  {
    "text": "uh based on the identity it receives",
    "start": "715600",
    "end": "718880"
  },
  {
    "text": "so it's also going to challenge uh the",
    "start": "718880",
    "end": "720959"
  },
  {
    "text": "kind of contents of that certificate so",
    "start": "720959",
    "end": "722320"
  },
  {
    "text": "it's going to make sure that the",
    "start": "722320",
    "end": "723440"
  },
  {
    "text": "server speed proxy also owns that",
    "start": "723440",
    "end": "725600"
  },
  {
    "text": "certificate it's presenting so it also",
    "start": "725600",
    "end": "727519"
  },
  {
    "text": "holds the private key",
    "start": "727519",
    "end": "730240"
  },
  {
    "text": "and if it's happy it's also going to",
    "start": "730240",
    "end": "732480"
  },
  {
    "text": "send the server",
    "start": "732480",
    "end": "733680"
  },
  {
    "text": "the its own client certificate",
    "start": "733680",
    "end": "736880"
  },
  {
    "text": "and that process is is going to repeat",
    "start": "736880",
    "end": "739200"
  },
  {
    "text": "so",
    "start": "739200",
    "end": "739920"
  },
  {
    "text": "what you get here is uh you know in the",
    "start": "739920",
    "end": "741680"
  },
  {
    "text": "normal case of",
    "start": "741680",
    "end": "743279"
  },
  {
    "text": "the case of normal tls the client is",
    "start": "743279",
    "end": "744959"
  },
  {
    "text": "going to verify that the server",
    "start": "744959",
    "end": "746720"
  },
  {
    "text": "certificate matches what it's expecting",
    "start": "746720",
    "end": "748800"
  },
  {
    "text": "also this server is going to",
    "start": "748800",
    "end": "750880"
  },
  {
    "text": "verify that the client certificate is",
    "start": "750880",
    "end": "752480"
  },
  {
    "text": "also what it's",
    "start": "752480",
    "end": "753920"
  },
  {
    "text": "expecting so this is where the kind of",
    "start": "753920",
    "end": "756079"
  },
  {
    "text": "mutual",
    "start": "756079",
    "end": "757839"
  },
  {
    "text": "trust comes in",
    "start": "757839",
    "end": "760560"
  },
  {
    "text": "so if you take a bird's-eye view of how",
    "start": "761440",
    "end": "763920"
  },
  {
    "text": "this looks like",
    "start": "763920",
    "end": "765120"
  },
  {
    "text": "um you see that the control plane",
    "start": "765120",
    "end": "767760"
  },
  {
    "text": "component which i was mentioning earlier",
    "start": "767760",
    "end": "769120"
  },
  {
    "text": "is responsible for delivering",
    "start": "769120",
    "end": "770720"
  },
  {
    "text": "these bundles to the workloads on boot",
    "start": "770720",
    "end": "772639"
  },
  {
    "text": "and on renewal so",
    "start": "772639",
    "end": "774079"
  },
  {
    "text": "if we take istio's case which we have",
    "start": "774079",
    "end": "775760"
  },
  {
    "text": "here uh it's the cisterdale component",
    "start": "775760",
    "end": "777600"
  },
  {
    "text": "which is responsible",
    "start": "777600",
    "end": "778639"
  },
  {
    "text": "um facilitating um sending uh these",
    "start": "778639",
    "end": "781680"
  },
  {
    "text": "crypto bundles so it's the citadel it's",
    "start": "781680",
    "end": "783519"
  },
  {
    "text": "going to be signing these",
    "start": "783519",
    "end": "784639"
  },
  {
    "text": "uh these certificates which contain the",
    "start": "784639",
    "end": "787279"
  },
  {
    "text": "identity of each service",
    "start": "787279",
    "end": "788639"
  },
  {
    "text": "um the kind of identity of each service",
    "start": "788639",
    "end": "791440"
  },
  {
    "text": "you know in the kubernetes world",
    "start": "791440",
    "end": "792880"
  },
  {
    "text": "um is typically done by the service",
    "start": "792880",
    "end": "794800"
  },
  {
    "text": "account um so on boot",
    "start": "794800",
    "end": "796399"
  },
  {
    "text": "um the kind of service a for example",
    "start": "796399",
    "end": "798160"
  },
  {
    "text": "will send a request using the service a",
    "start": "798160",
    "end": "799760"
  },
  {
    "text": "service account at cisadell",
    "start": "799760",
    "end": "801200"
  },
  {
    "text": "it's going to you know verify that",
    "start": "801200",
    "end": "802399"
  },
  {
    "text": "service account is signed by the api",
    "start": "802399",
    "end": "803920"
  },
  {
    "text": "server",
    "start": "803920",
    "end": "804399"
  },
  {
    "text": "and then it's going to assign a a",
    "start": "804399",
    "end": "805920"
  },
  {
    "text": "certificate to send back",
    "start": "805920",
    "end": "807519"
  },
  {
    "text": "uh to the server state proxy the way the",
    "start": "807519",
    "end": "811120"
  },
  {
    "text": "identity is encoded in the x5 x509",
    "start": "811120",
    "end": "814160"
  },
  {
    "text": "certificate",
    "start": "814160",
    "end": "814959"
  },
  {
    "text": "um is either done you know by dns uh",
    "start": "814959",
    "end": "817600"
  },
  {
    "text": "let's say or",
    "start": "817600",
    "end": "818399"
  },
  {
    "text": "in the istio's case through spiffy",
    "start": "818399",
    "end": "820480"
  },
  {
    "text": "through through uri",
    "start": "820480",
    "end": "822639"
  },
  {
    "text": "especially um is a framework um for",
    "start": "822639",
    "end": "825760"
  },
  {
    "text": "uh uh for effectively encoding",
    "start": "825760",
    "end": "827760"
  },
  {
    "text": "identities um",
    "start": "827760",
    "end": "828800"
  },
  {
    "text": "into kind of identity documents um so in",
    "start": "828800",
    "end": "831360"
  },
  {
    "text": "the case of x509",
    "start": "831360",
    "end": "832880"
  },
  {
    "text": "um this is actually just a string in the",
    "start": "832880",
    "end": "835120"
  },
  {
    "text": "in the uri",
    "start": "835120",
    "end": "836240"
  },
  {
    "text": "um sans uh part of the certificate um",
    "start": "836240",
    "end": "839120"
  },
  {
    "text": "and it's encoded",
    "start": "839120",
    "end": "840160"
  },
  {
    "text": "um like you see here so you have the",
    "start": "840160",
    "end": "841760"
  },
  {
    "text": "trust domain so in this case it's",
    "start": "841760",
    "end": "843199"
  },
  {
    "text": "cluster local but that could be you know",
    "start": "843199",
    "end": "845040"
  },
  {
    "text": "europe west one europe west two mesh two",
    "start": "845040",
    "end": "847760"
  },
  {
    "text": "uh what have you um and then followed by",
    "start": "847760",
    "end": "850560"
  },
  {
    "text": "you know whatever makes sense uh in the",
    "start": "850560",
    "end": "852240"
  },
  {
    "text": "context um of the kind of trust domain",
    "start": "852240",
    "end": "854639"
  },
  {
    "text": "that is that it's operating in so",
    "start": "854639",
    "end": "856399"
  },
  {
    "text": "again in the kubernetes world this is",
    "start": "856399",
    "end": "857920"
  },
  {
    "text": "the service account so it'll be followed",
    "start": "857920",
    "end": "859680"
  },
  {
    "text": "by the you know the namespace that",
    "start": "859680",
    "end": "861040"
  },
  {
    "text": "service account belongs to and then the",
    "start": "861040",
    "end": "862560"
  },
  {
    "text": "name of the service account",
    "start": "862560",
    "end": "863600"
  },
  {
    "text": "itself",
    "start": "863600",
    "end": "865920"
  },
  {
    "start": "867000",
    "end": "1110000"
  },
  {
    "text": "we're now going to look at how",
    "start": "869279",
    "end": "872480"
  },
  {
    "text": "service identity works with a number of",
    "start": "872480",
    "end": "874480"
  },
  {
    "text": "different service",
    "start": "874480",
    "end": "875519"
  },
  {
    "text": "mesh implementations and we've got three",
    "start": "875519",
    "end": "878399"
  },
  {
    "text": "and we're going to",
    "start": "878399",
    "end": "879279"
  },
  {
    "text": "look at them briefly and we're going to",
    "start": "879279",
    "end": "880720"
  },
  {
    "text": "show you a bit of a demo so just",
    "start": "880720",
    "end": "883120"
  },
  {
    "text": "to to start with um we're going to look",
    "start": "883120",
    "end": "886240"
  },
  {
    "text": "at istio",
    "start": "886240",
    "end": "887199"
  },
  {
    "text": "so this is the architecture of istio um",
    "start": "887199",
    "end": "890240"
  },
  {
    "text": "specifically focusing in on sort of the",
    "start": "890240",
    "end": "892880"
  },
  {
    "text": "components that",
    "start": "892880",
    "end": "894320"
  },
  {
    "text": "are used um here for security controls",
    "start": "894320",
    "end": "898320"
  },
  {
    "text": "and to to point out here eco in its",
    "start": "898320",
    "end": "901120"
  },
  {
    "text": "control plane",
    "start": "901120",
    "end": "902000"
  },
  {
    "text": "has something uh called a component",
    "start": "902000",
    "end": "904079"
  },
  {
    "text": "called the citadel",
    "start": "904079",
    "end": "905120"
  },
  {
    "text": "uh it's now part of stod and that is",
    "start": "905120",
    "end": "907680"
  },
  {
    "text": "effectively responsible",
    "start": "907680",
    "end": "909360"
  },
  {
    "text": "uh for uh providing the uh",
    "start": "909360",
    "end": "912639"
  },
  {
    "text": "the x509 the tls certificates to the",
    "start": "912639",
    "end": "915120"
  },
  {
    "text": "proxies the",
    "start": "915120",
    "end": "916000"
  },
  {
    "text": "in this case the envoy based um proxies",
    "start": "916000",
    "end": "919279"
  },
  {
    "text": "and now out of the box it's self-signed",
    "start": "919279",
    "end": "922000"
  },
  {
    "text": "and so it has a self-signed ca",
    "start": "922000",
    "end": "924000"
  },
  {
    "text": "um and you know actually uh you know you",
    "start": "924000",
    "end": "926480"
  },
  {
    "text": "can really just",
    "start": "926480",
    "end": "927360"
  },
  {
    "text": "um sold it up and use it as is um but if",
    "start": "927360",
    "end": "930079"
  },
  {
    "text": "you're",
    "start": "930079",
    "end": "930560"
  },
  {
    "text": "wishing to integrate this into an",
    "start": "930560",
    "end": "932399"
  },
  {
    "text": "existing pki",
    "start": "932399",
    "end": "933759"
  },
  {
    "text": "and then there is a means to be able to",
    "start": "933759",
    "end": "935360"
  },
  {
    "text": "plug your own uh",
    "start": "935360",
    "end": "937040"
  },
  {
    "text": "ca um into istio and uh",
    "start": "937040",
    "end": "940560"
  },
  {
    "text": "josh is going to demonstrate with a demo",
    "start": "940560",
    "end": "943279"
  },
  {
    "text": "uh how to do this",
    "start": "943279",
    "end": "945839"
  },
  {
    "text": "overdue josh",
    "start": "945839",
    "end": "948560"
  },
  {
    "text": "thanks matt um so what i have here",
    "start": "950800",
    "end": "954000"
  },
  {
    "text": "um i have two certificates already",
    "start": "954000",
    "end": "955920"
  },
  {
    "text": "installed inside the cluster",
    "start": "955920",
    "end": "957279"
  },
  {
    "text": "um so i have a root ca",
    "start": "957279",
    "end": "960480"
  },
  {
    "text": "which is the root of my pki um this",
    "start": "960480",
    "end": "963120"
  },
  {
    "text": "typically would live",
    "start": "963120",
    "end": "964320"
  },
  {
    "text": "offline uh from the cluster but i have",
    "start": "964320",
    "end": "966320"
  },
  {
    "text": "it installed here",
    "start": "966320",
    "end": "967440"
  },
  {
    "text": "um and i've also minted an intermediate",
    "start": "967440",
    "end": "970240"
  },
  {
    "text": "difficult authority",
    "start": "970240",
    "end": "971519"
  },
  {
    "text": "which is going to be used as the root of",
    "start": "971519",
    "end": "972959"
  },
  {
    "text": "trust for my istio mesh that i'm about",
    "start": "972959",
    "end": "975279"
  },
  {
    "text": "to install",
    "start": "975279",
    "end": "976800"
  },
  {
    "text": "so the first step for using this",
    "start": "976800",
    "end": "978880"
  },
  {
    "text": "intermediate",
    "start": "978880",
    "end": "979839"
  },
  {
    "text": "kind of custom um with the with istio",
    "start": "979839",
    "end": "983199"
  },
  {
    "text": "that i need to extract uh you know the",
    "start": "983199",
    "end": "984720"
  },
  {
    "text": "private key ca",
    "start": "984720",
    "end": "986639"
  },
  {
    "text": "and uh certificate um into a",
    "start": "986639",
    "end": "989759"
  },
  {
    "text": "format which um it still accepts um so",
    "start": "989759",
    "end": "992160"
  },
  {
    "text": "what i'm all i'm doing here is",
    "start": "992160",
    "end": "993600"
  },
  {
    "text": "extracting that and putting into various",
    "start": "993600",
    "end": "995920"
  },
  {
    "text": "files",
    "start": "995920",
    "end": "996959"
  },
  {
    "text": "i'm then going to create a secret based",
    "start": "996959",
    "end": "1000240"
  },
  {
    "text": "uh from those files um and put them in",
    "start": "1000240",
    "end": "1003120"
  },
  {
    "text": "yeah put them into a secret",
    "start": "1003120",
    "end": "1004560"
  },
  {
    "text": "um so when i install istio here since",
    "start": "1004560",
    "end": "1006800"
  },
  {
    "text": "that secret is already",
    "start": "1006800",
    "end": "1007920"
  },
  {
    "text": "available sdod is going to read those",
    "start": "1007920",
    "end": "1011120"
  },
  {
    "text": "files",
    "start": "1011120",
    "end": "1011839"
  },
  {
    "text": "from disk because it's mounted from the",
    "start": "1011839",
    "end": "1013120"
  },
  {
    "text": "secret and then it's going to use",
    "start": "1013120",
    "end": "1015600"
  },
  {
    "text": "those um you know keys and certificate",
    "start": "1015600",
    "end": "1018240"
  },
  {
    "text": "and ca et cetera",
    "start": "1018240",
    "end": "1019839"
  },
  {
    "text": "as the kind of signing um",
    "start": "1019839",
    "end": "1022959"
  },
  {
    "text": "kind of ca um so what's going to happen",
    "start": "1022959",
    "end": "1025760"
  },
  {
    "text": "then",
    "start": "1025760",
    "end": "1026160"
  },
  {
    "text": "is all uh workloads uh in the mesh when",
    "start": "1026160",
    "end": "1029038"
  },
  {
    "text": "they request their crypto bundles from",
    "start": "1029039",
    "end": "1030640"
  },
  {
    "text": "the control plane",
    "start": "1030640",
    "end": "1031760"
  },
  {
    "text": "um they're going to be signed from that",
    "start": "1031760",
    "end": "1034240"
  },
  {
    "text": "uh intermediate",
    "start": "1034240",
    "end": "1036319"
  },
  {
    "text": "that we've minted here",
    "start": "1036319",
    "end": "1039839"
  },
  {
    "text": "so now we have the istio",
    "start": "1044319",
    "end": "1048000"
  },
  {
    "text": "service mesh installed with our custom",
    "start": "1048000",
    "end": "1050840"
  },
  {
    "text": "intermediate va",
    "start": "1050840",
    "end": "1052160"
  },
  {
    "text": "and i just want to verify that the",
    "start": "1052160",
    "end": "1054240"
  },
  {
    "text": "identities that are issued by the",
    "start": "1054240",
    "end": "1056400"
  },
  {
    "text": "um stereo control plane aren't designed",
    "start": "1056400",
    "end": "1058960"
  },
  {
    "text": "by that intermediate",
    "start": "1058960",
    "end": "1060080"
  },
  {
    "text": "um so all i'm doing here is i'm",
    "start": "1060080",
    "end": "1062880"
  },
  {
    "text": "deploying",
    "start": "1062880",
    "end": "1063520"
  },
  {
    "text": "a couple of dummy applications um",
    "start": "1063520",
    "end": "1067039"
  },
  {
    "text": "http bin and sleep and all i'm doing is",
    "start": "1067039",
    "end": "1070320"
  },
  {
    "text": "um opening up a ssl connection from the",
    "start": "1070320",
    "end": "1073360"
  },
  {
    "text": "you know sleep uh proxy um over to the",
    "start": "1073360",
    "end": "1076000"
  },
  {
    "text": "hdb bin",
    "start": "1076000",
    "end": "1076960"
  },
  {
    "text": "i'm extracting the certificate that the",
    "start": "1076960",
    "end": "1078400"
  },
  {
    "text": "http bin proxy",
    "start": "1078400",
    "end": "1080080"
  },
  {
    "text": "responded with and if we just look at",
    "start": "1080080",
    "end": "1082400"
  },
  {
    "text": "the contents there",
    "start": "1082400",
    "end": "1083280"
  },
  {
    "text": "you can see uh there at the bottom that",
    "start": "1083280",
    "end": "1085520"
  },
  {
    "text": "it was indeed issued by the istioca",
    "start": "1085520",
    "end": "1087679"
  },
  {
    "text": "intermediate uh certificate authority um",
    "start": "1087679",
    "end": "1090640"
  },
  {
    "text": "and indeed if we look at the",
    "start": "1090640",
    "end": "1092320"
  },
  {
    "text": "sand name uh the uri um is the spiffy",
    "start": "1092320",
    "end": "1095840"
  },
  {
    "text": "identity that we're expecting so",
    "start": "1095840",
    "end": "1097440"
  },
  {
    "text": "it's similar to um what we were looking",
    "start": "1097440",
    "end": "1099679"
  },
  {
    "text": "at earlier",
    "start": "1099679",
    "end": "1100559"
  },
  {
    "text": "um the trust domain is cluster.local and",
    "start": "1100559",
    "end": "1102320"
  },
  {
    "text": "the service account is in the default",
    "start": "1102320",
    "end": "1103919"
  },
  {
    "text": "namespace and the service kind of http",
    "start": "1103919",
    "end": "1106840"
  },
  {
    "text": "bin",
    "start": "1106840",
    "end": "1109840"
  },
  {
    "start": "1110000",
    "end": "1269000"
  },
  {
    "text": "thanks josh that was great to see we're",
    "start": "1110000",
    "end": "1112480"
  },
  {
    "text": "now going to",
    "start": "1112480",
    "end": "1113520"
  },
  {
    "text": "move on to linkedin linkedin of course",
    "start": "1113520",
    "end": "1115520"
  },
  {
    "text": "is a service mesh that's",
    "start": "1115520",
    "end": "1117440"
  },
  {
    "text": "in the cncf um very similar architecture",
    "start": "1117440",
    "end": "1121120"
  },
  {
    "text": "here or certainly uh",
    "start": "1121120",
    "end": "1122640"
  },
  {
    "text": "has a control plane has a data plane um",
    "start": "1122640",
    "end": "1125360"
  },
  {
    "text": "somewhat different of course",
    "start": "1125360",
    "end": "1126640"
  },
  {
    "text": "in the the proxy uh is not envoy um it's",
    "start": "1126640",
    "end": "1130320"
  },
  {
    "text": "a rust based",
    "start": "1130320",
    "end": "1131440"
  },
  {
    "text": "envoy the linkedin proxy uh but it also",
    "start": "1131440",
    "end": "1134160"
  },
  {
    "text": "has a component in its control plane",
    "start": "1134160",
    "end": "1135840"
  },
  {
    "text": "much like seo",
    "start": "1135840",
    "end": "1136799"
  },
  {
    "text": "that's responsible for identity and",
    "start": "1136799",
    "end": "1140080"
  },
  {
    "text": "providing the identity to all of those",
    "start": "1140080",
    "end": "1142080"
  },
  {
    "text": "proxies in the data plane",
    "start": "1142080",
    "end": "1143360"
  },
  {
    "text": "and so as just as before we're gonna",
    "start": "1143360",
    "end": "1145679"
  },
  {
    "text": "we're gonna see a demo",
    "start": "1145679",
    "end": "1146720"
  },
  {
    "text": "of how to plug in um like an",
    "start": "1146720",
    "end": "1150240"
  },
  {
    "text": "intermediate",
    "start": "1150240",
    "end": "1151600"
  },
  {
    "text": "uh into uh linkedin and see it set up",
    "start": "1151600",
    "end": "1155039"
  },
  {
    "text": "and",
    "start": "1155039",
    "end": "1155600"
  },
  {
    "text": "see a workload or a set of workloads",
    "start": "1155600",
    "end": "1157039"
  },
  {
    "text": "running",
    "start": "1157039",
    "end": "1159360"
  },
  {
    "text": "all right so next i'm gonna be",
    "start": "1159440",
    "end": "1160960"
  },
  {
    "text": "installing uh the link d mesh uh with a",
    "start": "1160960",
    "end": "1163520"
  },
  {
    "text": "custom",
    "start": "1163520",
    "end": "1164480"
  },
  {
    "text": "uh root uh ca so again i i have",
    "start": "1164480",
    "end": "1167919"
  },
  {
    "text": "uh the root of my pki um living inside",
    "start": "1167919",
    "end": "1170000"
  },
  {
    "text": "the cluster again this would normally",
    "start": "1170000",
    "end": "1171120"
  },
  {
    "text": "live",
    "start": "1171120",
    "end": "1171760"
  },
  {
    "text": "offline somewhere i've also minted an",
    "start": "1171760",
    "end": "1174080"
  },
  {
    "text": "intermediate ca",
    "start": "1174080",
    "end": "1175440"
  },
  {
    "text": "from that route which i'm going to be",
    "start": "1175440",
    "end": "1176880"
  },
  {
    "text": "using as the root of trust for my",
    "start": "1176880",
    "end": "1178080"
  },
  {
    "text": "linkedin mesh",
    "start": "1178080",
    "end": "1179840"
  },
  {
    "text": "so what i'm doing here is grabbing the",
    "start": "1179840",
    "end": "1182000"
  },
  {
    "text": "ca of that intermediate",
    "start": "1182000",
    "end": "1183840"
  },
  {
    "text": "and then uh installing linkid now",
    "start": "1183840",
    "end": "1187440"
  },
  {
    "text": "using that ca so it's noting here that",
    "start": "1187440",
    "end": "1191280"
  },
  {
    "text": "um i don't need to create a",
    "start": "1191280",
    "end": "1193280"
  },
  {
    "text": "custom secret um since the link d",
    "start": "1193280",
    "end": "1196559"
  },
  {
    "text": "um mesh um is expecting the same kind of",
    "start": "1196559",
    "end": "1199520"
  },
  {
    "text": "format",
    "start": "1199520",
    "end": "1200080"
  },
  {
    "text": "um as my cert manager certificate um",
    "start": "1200080",
    "end": "1202400"
  },
  {
    "text": "that contains the",
    "start": "1202400",
    "end": "1203600"
  },
  {
    "text": "intermediate ca",
    "start": "1203600",
    "end": "1207840"
  },
  {
    "text": "all right so once again um just what we",
    "start": "1213360",
    "end": "1215840"
  },
  {
    "text": "did with this j i want to verify that",
    "start": "1215840",
    "end": "1217360"
  },
  {
    "text": "the identities",
    "start": "1217360",
    "end": "1218559"
  },
  {
    "text": "that are provided to the services",
    "start": "1218559",
    "end": "1220080"
  },
  {
    "text": "running in my linkedin mesh um",
    "start": "1220080",
    "end": "1221760"
  },
  {
    "text": "those were expecting and and signed by",
    "start": "1221760",
    "end": "1224159"
  },
  {
    "text": "uh the uh ca",
    "start": "1224159",
    "end": "1225440"
  },
  {
    "text": "intermediate uh that we minted earlier",
    "start": "1225440",
    "end": "1227520"
  },
  {
    "text": "so again i'm deploying",
    "start": "1227520",
    "end": "1229280"
  },
  {
    "text": "uh the uh kind of uh dummy services",
    "start": "1229280",
    "end": "1232320"
  },
  {
    "text": "um and this time i'm going to do the",
    "start": "1232320",
    "end": "1234480"
  },
  {
    "text": "trick and the other way around so",
    "start": "1234480",
    "end": "1236320"
  },
  {
    "text": "from the htm uh proxy i'm going to open",
    "start": "1236320",
    "end": "1239120"
  },
  {
    "text": "the dls connection onto the sleep pod",
    "start": "1239120",
    "end": "1240960"
  },
  {
    "text": "and if we grab out this uh the",
    "start": "1240960",
    "end": "1242720"
  },
  {
    "text": "certificate which was returned",
    "start": "1242720",
    "end": "1244320"
  },
  {
    "text": "i can see here that the certificate was",
    "start": "1244320",
    "end": "1246400"
  },
  {
    "text": "indeed um signed by the",
    "start": "1246400",
    "end": "1248320"
  },
  {
    "text": "intermediate that we're expecting there",
    "start": "1248320",
    "end": "1249679"
  },
  {
    "text": "from the issuer and the",
    "start": "1249679",
    "end": "1251360"
  },
  {
    "text": "certificate itself can contain the dns",
    "start": "1251360",
    "end": "1254720"
  },
  {
    "text": "in the form um that we're expecting of",
    "start": "1254720",
    "end": "1256880"
  },
  {
    "text": "the kind of pod identity",
    "start": "1256880",
    "end": "1258480"
  },
  {
    "text": "that we're connected to so in this case",
    "start": "1258480",
    "end": "1260640"
  },
  {
    "text": "it's dns",
    "start": "1260640",
    "end": "1261600"
  },
  {
    "text": "and indeed it's the uh sleep service",
    "start": "1261600",
    "end": "1263600"
  },
  {
    "text": "account uh which was determined",
    "start": "1263600",
    "end": "1265360"
  },
  {
    "text": "um as the identity",
    "start": "1265360",
    "end": "1268960"
  },
  {
    "start": "1269000",
    "end": "1457000"
  },
  {
    "text": "thanks josh uh so finally we're now",
    "start": "1269360",
    "end": "1271919"
  },
  {
    "text": "gonna",
    "start": "1271919",
    "end": "1272880"
  },
  {
    "text": "look at um open service mesh this is",
    "start": "1272880",
    "end": "1275280"
  },
  {
    "text": "another",
    "start": "1275280",
    "end": "1276000"
  },
  {
    "text": "service mesh that is in the cncf it's in",
    "start": "1276000",
    "end": "1278159"
  },
  {
    "text": "the sandbox um just like cert manager",
    "start": "1278159",
    "end": "1280880"
  },
  {
    "text": "and uh this is a project from microsoft",
    "start": "1280880",
    "end": "1284400"
  },
  {
    "text": "also uses envoy as its as its",
    "start": "1284400",
    "end": "1287679"
  },
  {
    "text": "data plane in its data plane and",
    "start": "1287679",
    "end": "1290720"
  },
  {
    "text": "it actually has um a component built",
    "start": "1290720",
    "end": "1293520"
  },
  {
    "text": "into it",
    "start": "1293520",
    "end": "1294080"
  },
  {
    "text": "so from the get-go it had support for",
    "start": "1294080",
    "end": "1296400"
  },
  {
    "text": "certificate management",
    "start": "1296400",
    "end": "1297919"
  },
  {
    "text": "and that we were responsible for kind of",
    "start": "1297919",
    "end": "1300240"
  },
  {
    "text": "generating those dev kits and also",
    "start": "1300240",
    "end": "1301679"
  },
  {
    "text": "distributing",
    "start": "1301679",
    "end": "1302799"
  },
  {
    "text": "uh it across the across the mesh and",
    "start": "1302799",
    "end": "1306400"
  },
  {
    "text": "we actually worked quite early on with",
    "start": "1306400",
    "end": "1308720"
  },
  {
    "text": "the project",
    "start": "1308720",
    "end": "1309440"
  },
  {
    "text": "to integrate it directly with cert",
    "start": "1309440",
    "end": "1312159"
  },
  {
    "text": "manager so you can",
    "start": "1312159",
    "end": "1313679"
  },
  {
    "text": "you can use i believe actually called",
    "start": "1313679",
    "end": "1315679"
  },
  {
    "text": "volts it's got support for he's got his",
    "start": "1315679",
    "end": "1317440"
  },
  {
    "text": "own inbuilt",
    "start": "1317440",
    "end": "1318720"
  },
  {
    "text": "component as well uh i think key vault",
    "start": "1318720",
    "end": "1321360"
  },
  {
    "text": "has your key vault",
    "start": "1321360",
    "end": "1322240"
  },
  {
    "text": "and and cert manager and so josh you're",
    "start": "1322240",
    "end": "1324080"
  },
  {
    "text": "going to demonstrate",
    "start": "1324080",
    "end": "1326480"
  },
  {
    "text": "how it works with cert manager",
    "start": "1326480",
    "end": "1332159"
  },
  {
    "text": "all right so finally um we're going to",
    "start": "1332159",
    "end": "1334240"
  },
  {
    "text": "install open service mesh",
    "start": "1334240",
    "end": "1335679"
  },
  {
    "text": "so like the others i have a root ca",
    "start": "1335679",
    "end": "1339120"
  },
  {
    "text": "installed in the cluster and an",
    "start": "1339120",
    "end": "1340320"
  },
  {
    "text": "intermediate minted from that route",
    "start": "1340320",
    "end": "1343360"
  },
  {
    "text": "like the others i'm going to extract the",
    "start": "1343360",
    "end": "1345520"
  },
  {
    "text": "ca certificate which i'm going to supply",
    "start": "1345520",
    "end": "1347039"
  },
  {
    "text": "to open service mesh",
    "start": "1347039",
    "end": "1348480"
  },
  {
    "text": "via a certificate and what's the",
    "start": "1348480",
    "end": "1351039"
  },
  {
    "text": "interesting thing with",
    "start": "1351039",
    "end": "1352000"
  },
  {
    "text": "open service mesh is that integrates as",
    "start": "1352000",
    "end": "1354240"
  },
  {
    "text": "mentioned directly with cert manager",
    "start": "1354240",
    "end": "1356159"
  },
  {
    "text": "so i actually have an issuer installed",
    "start": "1356159",
    "end": "1358559"
  },
  {
    "text": "in the cluster",
    "start": "1358559",
    "end": "1359760"
  },
  {
    "text": "which is backed by that intermediate ca",
    "start": "1359760",
    "end": "1362000"
  },
  {
    "text": "and what this means",
    "start": "1362000",
    "end": "1362880"
  },
  {
    "text": "is that the control plane um well not",
    "start": "1362880",
    "end": "1365919"
  },
  {
    "text": "only the control plane of open service",
    "start": "1365919",
    "end": "1367520"
  },
  {
    "text": "mesh but also the workloads running in",
    "start": "1367520",
    "end": "1368880"
  },
  {
    "text": "the open service mesh",
    "start": "1368880",
    "end": "1369919"
  },
  {
    "text": "or request the certificates via stiffer",
    "start": "1369919",
    "end": "1372080"
  },
  {
    "text": "request resources",
    "start": "1372080",
    "end": "1373520"
  },
  {
    "text": "which are certain manager resources um",
    "start": "1373520",
    "end": "1375520"
  },
  {
    "text": "and so the issuer",
    "start": "1375520",
    "end": "1376880"
  },
  {
    "text": "that they reference will go ahead and",
    "start": "1376880",
    "end": "1378480"
  },
  {
    "text": "sign those resources and what's the nice",
    "start": "1378480",
    "end": "1380480"
  },
  {
    "text": "thing about this is that",
    "start": "1380480",
    "end": "1381600"
  },
  {
    "text": "um the cert manager issuer which is",
    "start": "1381600",
    "end": "1383840"
  },
  {
    "text": "which is referenced by open service mesh",
    "start": "1383840",
    "end": "1385919"
  },
  {
    "text": "it's private key doesn't need to live on",
    "start": "1385919",
    "end": "1387280"
  },
  {
    "text": "the in the cluster whatsoever",
    "start": "1387280",
    "end": "1389120"
  },
  {
    "text": "it can it can live somewhere else uh",
    "start": "1389120",
    "end": "1390799"
  },
  {
    "text": "just as long as it can sign",
    "start": "1390799",
    "end": "1392320"
  },
  {
    "text": "those certificate request resources",
    "start": "1392320",
    "end": "1395520"
  },
  {
    "text": "so lastly um once again i want to verify",
    "start": "1395520",
    "end": "1398720"
  },
  {
    "text": "uh that the services that i deployed to",
    "start": "1398720",
    "end": "1400320"
  },
  {
    "text": "my overso open service mesh cluster",
    "start": "1400320",
    "end": "1402640"
  },
  {
    "text": "um their identities are indeed signed by",
    "start": "1402640",
    "end": "1406000"
  },
  {
    "text": "the",
    "start": "1406000",
    "end": "1406480"
  },
  {
    "text": "intermediate ca that we minted earlier",
    "start": "1406480",
    "end": "1409120"
  },
  {
    "text": "and",
    "start": "1409120",
    "end": "1409840"
  },
  {
    "text": "as well the identities are matching uh",
    "start": "1409840",
    "end": "1411679"
  },
  {
    "text": "what we're expecting them to be",
    "start": "1411679",
    "end": "1413440"
  },
  {
    "text": "so again i've deployed these dummy",
    "start": "1413440",
    "end": "1415440"
  },
  {
    "text": "services",
    "start": "1415440",
    "end": "1416799"
  },
  {
    "text": "and i'm going to be using the open",
    "start": "1416799",
    "end": "1418720"
  },
  {
    "text": "service mesh",
    "start": "1418720",
    "end": "1419840"
  },
  {
    "text": "cli to dump out the proxy configuration",
    "start": "1419840",
    "end": "1422159"
  },
  {
    "text": "of our",
    "start": "1422159",
    "end": "1423200"
  },
  {
    "text": "sleep pod here and we check the",
    "start": "1423200",
    "end": "1426559"
  },
  {
    "text": "uh if we grab out the kind of",
    "start": "1426559",
    "end": "1427760"
  },
  {
    "text": "certificate which was dumped out we can",
    "start": "1427760",
    "end": "1429760"
  },
  {
    "text": "see",
    "start": "1429760",
    "end": "1430000"
  },
  {
    "text": "again that the certificate was um signed",
    "start": "1430000",
    "end": "1432880"
  },
  {
    "text": "uh",
    "start": "1432880",
    "end": "1433440"
  },
  {
    "text": "issued by the uh intermediate that we",
    "start": "1433440",
    "end": "1435760"
  },
  {
    "text": "mentioned earlier",
    "start": "1435760",
    "end": "1436720"
  },
  {
    "text": "and the identity which is contained",
    "start": "1436720",
    "end": "1438880"
  },
  {
    "text": "within that",
    "start": "1438880",
    "end": "1439760"
  },
  {
    "text": "uh sleep um certificate is the",
    "start": "1439760",
    "end": "1442960"
  },
  {
    "text": "uh identity of the sleep service account",
    "start": "1442960",
    "end": "1444960"
  },
  {
    "text": "so in the open service mesh case um is",
    "start": "1444960",
    "end": "1446960"
  },
  {
    "text": "represented in dns and you can see here",
    "start": "1446960",
    "end": "1448880"
  },
  {
    "text": "that it's",
    "start": "1448880",
    "end": "1449360"
  },
  {
    "text": "the sleep service account and the",
    "start": "1449360",
    "end": "1451039"
  },
  {
    "text": "default name space",
    "start": "1451039",
    "end": "1452400"
  },
  {
    "text": "in the cluster local trust domain",
    "start": "1452400",
    "end": "1458000"
  },
  {
    "start": "1457000",
    "end": "1649000"
  },
  {
    "text": "thanks josh that was great to see the",
    "start": "1458000",
    "end": "1460320"
  },
  {
    "text": "meshes um actually in action",
    "start": "1460320",
    "end": "1462400"
  },
  {
    "text": "and how it's possible to plug in",
    "start": "1462400",
    "end": "1465520"
  },
  {
    "text": "an intermediate ca for the trust domains",
    "start": "1465520",
    "end": "1468400"
  },
  {
    "text": "and have",
    "start": "1468400",
    "end": "1469279"
  },
  {
    "text": "the mesh issue and those signed",
    "start": "1469279",
    "end": "1471120"
  },
  {
    "text": "certificates distribute those to the",
    "start": "1471120",
    "end": "1472480"
  },
  {
    "text": "proxies",
    "start": "1472480",
    "end": "1473360"
  },
  {
    "text": "and to use uh for the purposes of you",
    "start": "1473360",
    "end": "1476240"
  },
  {
    "text": "know",
    "start": "1476240",
    "end": "1476559"
  },
  {
    "text": "the service identities are for the uh",
    "start": "1476559",
    "end": "1478880"
  },
  {
    "text": "you know for the applications",
    "start": "1478880",
    "end": "1480320"
  },
  {
    "text": "it's really really neat uh we should",
    "start": "1480320",
    "end": "1482480"
  },
  {
    "text": "probably uh are thinking about this we",
    "start": "1482480",
    "end": "1484240"
  },
  {
    "text": "should probably open source",
    "start": "1484240",
    "end": "1485679"
  },
  {
    "text": "uh those demos josh yeah let's try and",
    "start": "1485679",
    "end": "1488000"
  },
  {
    "text": "let's try and make that happen",
    "start": "1488000",
    "end": "1489120"
  },
  {
    "text": "in time for the event yeah of course",
    "start": "1489120",
    "end": "1492000"
  },
  {
    "text": "it's worth",
    "start": "1492000",
    "end": "1492640"
  },
  {
    "text": "pointing out that uh there are other",
    "start": "1492640",
    "end": "1494480"
  },
  {
    "text": "meshes so many many",
    "start": "1494480",
    "end": "1495760"
  },
  {
    "text": "uh meshes out there and we had limited",
    "start": "1495760",
    "end": "1497919"
  },
  {
    "text": "time today so what we've",
    "start": "1497919",
    "end": "1499600"
  },
  {
    "text": "shown of three uh and",
    "start": "1499600",
    "end": "1502960"
  },
  {
    "text": "um those you know for the most part they",
    "start": "1502960",
    "end": "1504799"
  },
  {
    "text": "you know of course support",
    "start": "1504799",
    "end": "1506320"
  },
  {
    "text": "uh spiffy identity and the spiffy",
    "start": "1506320",
    "end": "1508960"
  },
  {
    "text": "identity that josh uh spoke about",
    "start": "1508960",
    "end": "1511039"
  },
  {
    "text": "but there are there are others um and",
    "start": "1511039",
    "end": "1514320"
  },
  {
    "text": "you know there are a number of them here",
    "start": "1514320",
    "end": "1516480"
  },
  {
    "text": "that many of you will be",
    "start": "1516480",
    "end": "1517840"
  },
  {
    "text": "uh possibly familiar with already and uh",
    "start": "1517840",
    "end": "1520320"
  },
  {
    "text": "just worth pointing out there are also",
    "start": "1520320",
    "end": "1521600"
  },
  {
    "text": "some sort of mesh",
    "start": "1521600",
    "end": "1522559"
  },
  {
    "text": "like implementations out there and um",
    "start": "1522559",
    "end": "1525600"
  },
  {
    "text": "specifically here we've got one called",
    "start": "1525600",
    "end": "1527200"
  },
  {
    "text": "you know dapr",
    "start": "1527200",
    "end": "1528720"
  },
  {
    "text": "uh distributed application runtime uh",
    "start": "1528720",
    "end": "1531279"
  },
  {
    "text": "from microsoft",
    "start": "1531279",
    "end": "1532799"
  },
  {
    "text": "and you know that's interesting because",
    "start": "1532799",
    "end": "1534880"
  },
  {
    "text": "it's you know you won't even process",
    "start": "1534880",
    "end": "1536320"
  },
  {
    "text": "runtime",
    "start": "1536320",
    "end": "1537279"
  },
  {
    "text": "and it provides much of the",
    "start": "1537279",
    "end": "1539600"
  },
  {
    "text": "functionality of a mesh",
    "start": "1539600",
    "end": "1541440"
  },
  {
    "text": "and more it's um really interesting",
    "start": "1541440",
    "end": "1543520"
  },
  {
    "text": "worth worth checking",
    "start": "1543520",
    "end": "1545039"
  },
  {
    "text": "out so we're nearly",
    "start": "1545039",
    "end": "1548159"
  },
  {
    "text": "uh at the end of our time now uh in fact",
    "start": "1548159",
    "end": "1550559"
  },
  {
    "text": "with",
    "start": "1550559",
    "end": "1552000"
  },
  {
    "text": "possibly likely to go over but just to",
    "start": "1552000",
    "end": "1554000"
  },
  {
    "text": "summarize service identity really is",
    "start": "1554000",
    "end": "1557360"
  },
  {
    "text": "key to zero trust um with service mesh",
    "start": "1557360",
    "end": "1560559"
  },
  {
    "text": "and",
    "start": "1560559",
    "end": "1560880"
  },
  {
    "text": "you know it really all starts",
    "start": "1560880",
    "end": "1562159"
  },
  {
    "text": "effectively with identity and",
    "start": "1562159",
    "end": "1563919"
  },
  {
    "text": "getting that right and it provides the",
    "start": "1563919",
    "end": "1566240"
  },
  {
    "text": "foundations",
    "start": "1566240",
    "end": "1567520"
  },
  {
    "text": "for being able to do uh yeah everything",
    "start": "1567520",
    "end": "1569919"
  },
  {
    "text": "else really",
    "start": "1569919",
    "end": "1570960"
  },
  {
    "text": "with uh mesh you know",
    "start": "1570960",
    "end": "1574159"
  },
  {
    "text": "the mesh provides the means to be able",
    "start": "1574159",
    "end": "1575840"
  },
  {
    "text": "to automate those short-lived",
    "start": "1575840",
    "end": "1578159"
  },
  {
    "text": "uh certificates uh more often than not",
    "start": "1578159",
    "end": "1580720"
  },
  {
    "text": "with spiffy",
    "start": "1580720",
    "end": "1581840"
  },
  {
    "text": "and distribute those the proxies uh in",
    "start": "1581840",
    "end": "1584880"
  },
  {
    "text": "order for that mutual tls that josh",
    "start": "1584880",
    "end": "1586720"
  },
  {
    "text": "spoke about",
    "start": "1586720",
    "end": "1587360"
  },
  {
    "text": "to be established between services and",
    "start": "1587360",
    "end": "1590080"
  },
  {
    "text": "in most cases this is this is",
    "start": "1590080",
    "end": "1591600"
  },
  {
    "text": "transparent",
    "start": "1591600",
    "end": "1592400"
  },
  {
    "text": "to the application developer you know",
    "start": "1592400",
    "end": "1593840"
  },
  {
    "text": "it's completely built into the platform",
    "start": "1593840",
    "end": "1595360"
  },
  {
    "text": "it's not something they need to do",
    "start": "1595360",
    "end": "1596240"
  },
  {
    "text": "themselves",
    "start": "1596240",
    "end": "1597360"
  },
  {
    "text": "you know a number of the meshes provide",
    "start": "1597360",
    "end": "1599600"
  },
  {
    "text": "the ability to",
    "start": "1599600",
    "end": "1601200"
  },
  {
    "text": "uh to be extended so you can actually",
    "start": "1601200",
    "end": "1603600"
  },
  {
    "text": "start sort of plugging in",
    "start": "1603600",
    "end": "1605360"
  },
  {
    "text": "um intermediates as we demonstrated",
    "start": "1605360",
    "end": "1607760"
  },
  {
    "text": "meaning that you can actually integrate",
    "start": "1607760",
    "end": "1609279"
  },
  {
    "text": "this into an existing enterprise uh",
    "start": "1609279",
    "end": "1611919"
  },
  {
    "text": "chain of trust and there's certainly",
    "start": "1611919",
    "end": "1613840"
  },
  {
    "text": "more to do",
    "start": "1613840",
    "end": "1615279"
  },
  {
    "text": "in this space and you know we're",
    "start": "1615279",
    "end": "1617360"
  },
  {
    "text": "involved in some of that with",
    "start": "1617360",
    "end": "1619279"
  },
  {
    "text": "the various projects but it's certainly",
    "start": "1619279",
    "end": "1621120"
  },
  {
    "text": "great to see where",
    "start": "1621120",
    "end": "1622640"
  },
  {
    "text": "we are we already are and what's uh",
    "start": "1622640",
    "end": "1625360"
  },
  {
    "text": "possible",
    "start": "1625360",
    "end": "1627840"
  },
  {
    "text": "so we look forward to the live q a uh",
    "start": "1628240",
    "end": "1630240"
  },
  {
    "text": "thanks everyone",
    "start": "1630240",
    "end": "1631279"
  },
  {
    "text": "uh for joining us uh today stay safe",
    "start": "1631279",
    "end": "1634559"
  },
  {
    "text": "um hope to see you all sing",
    "start": "1634559",
    "end": "1637919"
  },
  {
    "text": "uh at in person eu cubecon and",
    "start": "1637919",
    "end": "1641440"
  },
  {
    "text": "um yeah i look forward to seeing you in",
    "start": "1641440",
    "end": "1643919"
  },
  {
    "text": "the not too",
    "start": "1643919",
    "end": "1644559"
  },
  {
    "text": "distant future thanks everyone all the",
    "start": "1644559",
    "end": "1647279"
  },
  {
    "text": "best bye",
    "start": "1647279",
    "end": "1651120"
  }
]