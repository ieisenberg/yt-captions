[
  {
    "start": "0",
    "end": "96000"
  },
  {
    "text": "trade",
    "start": "4860",
    "end": "7140"
  },
  {
    "text": "and today I'll be talking about",
    "start": "7140",
    "end": "8700"
  },
  {
    "text": "manipulating HTTP headers using full set",
    "start": "8700",
    "end": "11880"
  },
  {
    "text": "of substitution formatters",
    "start": "11880",
    "end": "13980"
  },
  {
    "text": "but before we start talking about start",
    "start": "13980",
    "end": "17160"
  },
  {
    "text": "talking about manipulating HCB headers",
    "start": "17160",
    "end": "19140"
  },
  {
    "text": "let's spend some time talking about",
    "start": "19140",
    "end": "20520"
  },
  {
    "text": "access logs",
    "start": "20520",
    "end": "22859"
  },
  {
    "text": "so when Android processes transactions I",
    "start": "22859",
    "end": "25740"
  },
  {
    "text": "mean it receives a requests from down",
    "start": "25740",
    "end": "28380"
  },
  {
    "text": "Sim client selects Upstream host",
    "start": "28380",
    "end": "30960"
  },
  {
    "text": "transmits the request and waits for the",
    "start": "30960",
    "end": "34260"
  },
  {
    "text": "response and eventually sends it back to",
    "start": "34260",
    "end": "36840"
  },
  {
    "text": "the client it produces a lot of data and",
    "start": "36840",
    "end": "40140"
  },
  {
    "text": "the data is extremely valuable when",
    "start": "40140",
    "end": "42840"
  },
  {
    "text": "things go wrong you would like to know",
    "start": "42840",
    "end": "46200"
  },
  {
    "text": "what happened",
    "start": "46200",
    "end": "47940"
  },
  {
    "text": "how many times envoir transmitted",
    "start": "47940",
    "end": "50180"
  },
  {
    "text": "requests Upstream how was the time it",
    "start": "50180",
    "end": "54120"
  },
  {
    "text": "was waiting for the response so the",
    "start": "54120",
    "end": "56520"
  },
  {
    "text": "easiest way to extend the data is the",
    "start": "56520",
    "end": "58739"
  },
  {
    "text": "Via access logs now access log is",
    "start": "58739",
    "end": "61559"
  },
  {
    "text": "basically a string representation of",
    "start": "61559",
    "end": "63300"
  },
  {
    "text": "some data which has been produced during",
    "start": "63300",
    "end": "65100"
  },
  {
    "text": "those transactions and it's defined by a",
    "start": "65100",
    "end": "68100"
  },
  {
    "text": "sequence of substitution formatters and",
    "start": "68100",
    "end": "70380"
  },
  {
    "text": "substitution formatter is a string which",
    "start": "70380",
    "end": "72960"
  },
  {
    "text": "starts and ends with percentage signs",
    "start": "72960",
    "end": "75000"
  },
  {
    "text": "and uniquely identifies the data you",
    "start": "75000",
    "end": "77280"
  },
  {
    "text": "would like to display so here I give an",
    "start": "77280",
    "end": "79320"
  },
  {
    "text": "example of couple of uh of substitution",
    "start": "79320",
    "end": "82799"
  },
  {
    "text": "formatters the start time and",
    "start": "82799",
    "end": "84479"
  },
  {
    "text": "transaction basically started the second",
    "start": "84479",
    "end": "87000"
  },
  {
    "text": "one is next I would like to display a",
    "start": "87000",
    "end": "89880"
  },
  {
    "text": "certain header from the request and the",
    "start": "89880",
    "end": "92100"
  },
  {
    "text": "Response Code which was received from",
    "start": "92100",
    "end": "94140"
  },
  {
    "text": "from an upstream",
    "start": "94140",
    "end": "97320"
  },
  {
    "start": "96000",
    "end": "159000"
  },
  {
    "text": "so now let's move to manipulating hdb",
    "start": "97320",
    "end": "100020"
  },
  {
    "text": "headers so there's a mechanism which has",
    "start": "100020",
    "end": "102060"
  },
  {
    "text": "been in Android for a while and",
    "start": "102060",
    "end": "103920"
  },
  {
    "text": "basically what it allows you to do is to",
    "start": "103920",
    "end": "106320"
  },
  {
    "text": "modify the headers as they pass invoice",
    "start": "106320",
    "end": "109439"
  },
  {
    "text": "on the Upstream Direction and downstream",
    "start": "109439",
    "end": "113340"
  },
  {
    "text": "Direction and so you can manipulate",
    "start": "113340",
    "end": "115920"
  },
  {
    "text": "request headers on the response headers",
    "start": "115920",
    "end": "118079"
  },
  {
    "text": "and the way to do it is via",
    "start": "118079",
    "end": "120060"
  },
  {
    "text": "configuration you have to specify two",
    "start": "120060",
    "end": "122159"
  },
  {
    "text": "things one is the name to give to the",
    "start": "122159",
    "end": "124320"
  },
  {
    "text": "header to be added and also you would",
    "start": "124320",
    "end": "126899"
  },
  {
    "text": "like to identify the value so for",
    "start": "126899",
    "end": "129179"
  },
  {
    "text": "identifying the value as you see here is",
    "start": "129179",
    "end": "132180"
  },
  {
    "text": "uh we use again the substitution",
    "start": "132180",
    "end": "133980"
  },
  {
    "text": "formatter as a string with stars and",
    "start": "133980",
    "end": "136920"
  },
  {
    "text": "ends with a percentage sign and",
    "start": "136920",
    "end": "139500"
  },
  {
    "text": "identifies the value which would like to",
    "start": "139500",
    "end": "142500"
  },
  {
    "text": "add as a header",
    "start": "142500",
    "end": "144660"
  },
  {
    "text": "to that header",
    "start": "144660",
    "end": "147000"
  },
  {
    "text": "um it looks exactly like access log",
    "start": "147000",
    "end": "149300"
  },
  {
    "text": "substitution formatter so the question",
    "start": "149300",
    "end": "152400"
  },
  {
    "text": "is natural question is is it the same",
    "start": "152400",
    "end": "155099"
  },
  {
    "text": "thing are we talking about exactly the",
    "start": "155099",
    "end": "158099"
  },
  {
    "text": "same thing",
    "start": "158099",
    "end": "160160"
  },
  {
    "start": "159000",
    "end": "252000"
  },
  {
    "text": "so until now the answer is no",
    "start": "160160",
    "end": "165440"
  },
  {
    "text": "even though the syntax is exactly the",
    "start": "166080",
    "end": "168599"
  },
  {
    "text": "same as the year for Access log and for",
    "start": "168599",
    "end": "171000"
  },
  {
    "text": "header manipulation I can use the",
    "start": "171000",
    "end": "173060"
  },
  {
    "text": "substitution formatting for hostname but",
    "start": "173060",
    "end": "176340"
  },
  {
    "text": "it has been it's process is passed and",
    "start": "176340",
    "end": "179879"
  },
  {
    "text": "it's actually converted to a string",
    "start": "179879",
    "end": "183060"
  },
  {
    "text": "using completely to different code",
    "start": "183060",
    "end": "185879"
  },
  {
    "text": "uh that obviously is not super optimal",
    "start": "185879",
    "end": "189120"
  },
  {
    "text": "we did there is a code duplication yeah",
    "start": "189120",
    "end": "193140"
  },
  {
    "text": "to",
    "start": "193140",
    "end": "194599"
  },
  {
    "text": "document it into different places",
    "start": "194599",
    "end": "197060"
  },
  {
    "text": "testing efforts doubles so that's from",
    "start": "197060",
    "end": "200519"
  },
  {
    "text": "developer point of view from user",
    "start": "200519",
    "end": "202739"
  },
  {
    "text": "perspective things are not",
    "start": "202739",
    "end": "205319"
  },
  {
    "text": "much clearer because uh when you look",
    "start": "205319",
    "end": "208440"
  },
  {
    "text": "for a specific keyword it will be",
    "start": "208440",
    "end": "210360"
  },
  {
    "text": "directed into different places one for",
    "start": "210360",
    "end": "212340"
  },
  {
    "text": "Access log formatters and one for header",
    "start": "212340",
    "end": "214739"
  },
  {
    "text": "manipulation and to make things even",
    "start": "214739",
    "end": "217080"
  },
  {
    "text": "more confusing for Access logs there is",
    "start": "217080",
    "end": "219959"
  },
  {
    "text": "a set of about 80 plus formatters and",
    "start": "219959",
    "end": "222180"
  },
  {
    "text": "for hidden manipulation is only about 30",
    "start": "222180",
    "end": "224459"
  },
  {
    "text": "which are available",
    "start": "224459",
    "end": "226319"
  },
  {
    "text": "and so there were questions like uh you",
    "start": "226319",
    "end": "229319"
  },
  {
    "text": "know why can't why I cannot use a",
    "start": "229319",
    "end": "231959"
  },
  {
    "text": "specific uh substitution formatter for",
    "start": "231959",
    "end": "235560"
  },
  {
    "text": "manipulating how the why the same",
    "start": "235560",
    "end": "237480"
  },
  {
    "text": "formatter is available for uh access",
    "start": "237480",
    "end": "240480"
  },
  {
    "text": "logs",
    "start": "240480",
    "end": "241680"
  },
  {
    "text": "so the answer is because the code was",
    "start": "241680",
    "end": "243720"
  },
  {
    "text": "different there was a different person",
    "start": "243720",
    "end": "245040"
  },
  {
    "text": "and there were different implementation",
    "start": "245040",
    "end": "246780"
  },
  {
    "text": "of the of the",
    "start": "246780",
    "end": "249319"
  },
  {
    "text": "formatter itself",
    "start": "249319",
    "end": "252540"
  },
  {
    "start": "252000",
    "end": "313000"
  },
  {
    "text": "so starting with release 124 Things",
    "start": "252540",
    "end": "254939"
  },
  {
    "text": "become much more Unified",
    "start": "254939",
    "end": "257100"
  },
  {
    "text": "so the same parser is used both for",
    "start": "257100",
    "end": "259799"
  },
  {
    "text": "Access long the same for either",
    "start": "259799",
    "end": "261419"
  },
  {
    "text": "manipulation and the same implementation",
    "start": "261419",
    "end": "263820"
  },
  {
    "text": "of the substitution formatter and the",
    "start": "263820",
    "end": "266460"
  },
  {
    "text": "substitution format that I mean by",
    "start": "266460",
    "end": "268199"
  },
  {
    "text": "substitution formatter I mean uh the",
    "start": "268199",
    "end": "271259"
  },
  {
    "text": "code which takes data and converts it to",
    "start": "271259",
    "end": "274259"
  },
  {
    "text": "the string there will be some little bit",
    "start": "274259",
    "end": "276540"
  },
  {
    "text": "differences as you see on the for Access",
    "start": "276540",
    "end": "278699"
  },
  {
    "text": "log and header manipulation for the code",
    "start": "278699",
    "end": "280680"
  },
  {
    "text": "and for a test but they mostly uh",
    "start": "280680",
    "end": "283680"
  },
  {
    "text": "limited towards processing the",
    "start": "283680",
    "end": "286580"
  },
  {
    "text": "configuration because access log is",
    "start": "286580",
    "end": "289320"
  },
  {
    "text": "defined in a different way than header",
    "start": "289320",
    "end": "291540"
  },
  {
    "text": "manipulation",
    "start": "291540",
    "end": "293400"
  },
  {
    "text": "that code it must be has to be different",
    "start": "293400",
    "end": "295560"
  },
  {
    "text": "and testing routines are also different",
    "start": "295560",
    "end": "297419"
  },
  {
    "text": "for the user Things become much more",
    "start": "297419",
    "end": "299639"
  },
  {
    "text": "easier too because uh it all those uh",
    "start": "299639",
    "end": "302759"
  },
  {
    "text": "substitution formatters are defined only",
    "start": "302759",
    "end": "304800"
  },
  {
    "text": "in my documented only in one place and",
    "start": "304800",
    "end": "307380"
  },
  {
    "text": "whenever you look for a specific keyword",
    "start": "307380",
    "end": "309180"
  },
  {
    "text": "they will be only one result",
    "start": "309180",
    "end": "312680"
  },
  {
    "text": "so you may say Hey That's great so",
    "start": "313620",
    "end": "316620"
  },
  {
    "text": "whenever I can use the access log",
    "start": "316620",
    "end": "320000"
  },
  {
    "text": "formatted I can also use it to",
    "start": "320000",
    "end": "322080"
  },
  {
    "text": "manipulate the headers but the answer is",
    "start": "322080",
    "end": "324900"
  },
  {
    "text": "no",
    "start": "324900",
    "end": "326639"
  },
  {
    "text": "and the difference between why one can",
    "start": "326639",
    "end": "329220"
  },
  {
    "text": "be used in Access log and one cannot be",
    "start": "329220",
    "end": "331620"
  },
  {
    "text": "used into the header manipulator is in",
    "start": "331620",
    "end": "334320"
  },
  {
    "text": "timing when data is created so for",
    "start": "334320",
    "end": "336900"
  },
  {
    "text": "Access logs",
    "start": "336900",
    "end": "338639"
  },
  {
    "text": "access logs are created when transaction",
    "start": "338639",
    "end": "341340"
  },
  {
    "text": "finishes so and we received the request",
    "start": "341340",
    "end": "344039"
  },
  {
    "text": "from the client selected Upstream send",
    "start": "344039",
    "end": "347400"
  },
  {
    "text": "the request waited for response and then",
    "start": "347400",
    "end": "350039"
  },
  {
    "text": "transmitted to the downstream and then",
    "start": "350039",
    "end": "352560"
  },
  {
    "text": "access log is created and as you see at",
    "start": "352560",
    "end": "355919"
  },
  {
    "text": "that moment other data or data related",
    "start": "355919",
    "end": "358680"
  },
  {
    "text": "to the transactions is already available",
    "start": "358680",
    "end": "360720"
  },
  {
    "text": "because the event which happened in the",
    "start": "360720",
    "end": "362639"
  },
  {
    "text": "past but that's not true for",
    "start": "362639",
    "end": "364860"
  },
  {
    "text": "manipulating the headers so for example",
    "start": "364860",
    "end": "367560"
  },
  {
    "text": "here I would like to manipulate the",
    "start": "367560",
    "end": "369120"
  },
  {
    "text": "request headers right but the only data",
    "start": "369120",
    "end": "371639"
  },
  {
    "text": "which is available to display at this",
    "start": "371639",
    "end": "373979"
  },
  {
    "text": "moment what to use is related to clients",
    "start": "373979",
    "end": "378539"
  },
  {
    "text": "connection Downstream client connection",
    "start": "378539",
    "end": "380580"
  },
  {
    "text": "to Envoy and actually sending the",
    "start": "380580",
    "end": "382860"
  },
  {
    "text": "request itself",
    "start": "382860",
    "end": "385638"
  },
  {
    "text": "all the other things like you know",
    "start": "386039",
    "end": "388259"
  },
  {
    "text": "selecting Upstream sending waiting for",
    "start": "388259",
    "end": "390539"
  },
  {
    "text": "responses those are future events they",
    "start": "390539",
    "end": "392220"
  },
  {
    "text": "has not happened yet so",
    "start": "392220",
    "end": "394380"
  },
  {
    "text": "using that uh using formatters which",
    "start": "394380",
    "end": "398520"
  },
  {
    "text": "relate to those events doesn't really",
    "start": "398520",
    "end": "400080"
  },
  {
    "text": "make sense and here is an example right",
    "start": "400080",
    "end": "402660"
  },
  {
    "text": "and we try to manipulate the request",
    "start": "402660",
    "end": "404580"
  },
  {
    "text": "headers but the formatter relates to",
    "start": "404580",
    "end": "406800"
  },
  {
    "text": "event in the future I would like to get",
    "start": "406800",
    "end": "408539"
  },
  {
    "text": "some data from response which obviously",
    "start": "408539",
    "end": "410580"
  },
  {
    "text": "doesn't happen yet so in those cases you",
    "start": "410580",
    "end": "412979"
  },
  {
    "text": "can still put them but the result will",
    "start": "412979",
    "end": "416460"
  },
  {
    "text": "the results produced by a formatter will",
    "start": "416460",
    "end": "419220"
  },
  {
    "text": "be empty string",
    "start": "419220",
    "end": "421440"
  },
  {
    "start": "421000",
    "end": "479000"
  },
  {
    "text": "so things are a little bit better you",
    "start": "421440",
    "end": "424139"
  },
  {
    "text": "know when modifying response headers",
    "start": "424139",
    "end": "425940"
  },
  {
    "text": "mostly because the more data is",
    "start": "425940",
    "end": "428039"
  },
  {
    "text": "available data related to Upstream",
    "start": "428039",
    "end": "430139"
  },
  {
    "text": "connection which host has been selected",
    "start": "430139",
    "end": "432000"
  },
  {
    "text": "uh whether the connection was TLS how",
    "start": "432000",
    "end": "434880"
  },
  {
    "text": "many times then we tried to reach",
    "start": "434880",
    "end": "437039"
  },
  {
    "text": "Upstream",
    "start": "437039",
    "end": "439139"
  },
  {
    "text": "um",
    "start": "439139",
    "end": "440419"
  },
  {
    "text": "the time waited for response all those",
    "start": "440419",
    "end": "443220"
  },
  {
    "text": "things are available right now so here I",
    "start": "443220",
    "end": "445560"
  },
  {
    "text": "give an example of Upstream request",
    "start": "445560",
    "end": "447539"
  },
  {
    "text": "attempt I would like to put into a",
    "start": "447539",
    "end": "449099"
  },
  {
    "text": "header how many times and if I tried to",
    "start": "449099",
    "end": "452039"
  },
  {
    "text": "reach Upstream uh but certain data is",
    "start": "452039",
    "end": "455819"
  },
  {
    "text": "still not available the data which is",
    "start": "455819",
    "end": "457800"
  },
  {
    "text": "related to a future event I mean",
    "start": "457800",
    "end": "459780"
  },
  {
    "text": "transmitting uh response to the client",
    "start": "459780",
    "end": "463620"
  },
  {
    "text": "so here is an example of the byte send",
    "start": "463620",
    "end": "465539"
  },
  {
    "text": "how many bytes are sent back and we send",
    "start": "465539",
    "end": "468120"
  },
  {
    "text": "back to",
    "start": "468120",
    "end": "470220"
  },
  {
    "text": "um to the client this is his future",
    "start": "470220",
    "end": "472259"
  },
  {
    "text": "event and it does not produce uh the",
    "start": "472259",
    "end": "475800"
  },
  {
    "text": "value which which we expect",
    "start": "475800",
    "end": "479039"
  },
  {
    "start": "479000",
    "end": "538000"
  },
  {
    "text": "so as a final thought I would like to",
    "start": "479039",
    "end": "480960"
  },
  {
    "text": "present the use case which was not",
    "start": "480960",
    "end": "482759"
  },
  {
    "text": "possible to do in uh prior to release",
    "start": "482759",
    "end": "485160"
  },
  {
    "text": "124 so there is a network of a mesh",
    "start": "485160",
    "end": "488639"
  },
  {
    "text": "network of of envoys and they select",
    "start": "488639",
    "end": "491880"
  },
  {
    "text": "text Hub based on the random algorithm",
    "start": "491880",
    "end": "495199"
  },
  {
    "text": "and",
    "start": "495199",
    "end": "496860"
  },
  {
    "text": "I would like this user to know which one",
    "start": "496860",
    "end": "499020"
  },
  {
    "text": "has been taken",
    "start": "499020",
    "end": "500660"
  },
  {
    "text": "so in order to do it each Enterprise has",
    "start": "500660",
    "end": "503340"
  },
  {
    "text": "to be configured",
    "start": "503340",
    "end": "504960"
  },
  {
    "text": "with manipulating response headers by",
    "start": "504960",
    "end": "508680"
  },
  {
    "text": "adding his own name on top of whatever",
    "start": "508680",
    "end": "511139"
  },
  {
    "text": "was received from Upstream and as a",
    "start": "511139",
    "end": "515399"
  },
  {
    "text": "response program you know progresses",
    "start": "515399",
    "end": "517560"
  },
  {
    "text": "from option to Downstream each Envoy",
    "start": "517560",
    "end": "520020"
  },
  {
    "text": "adds its own name",
    "start": "520020",
    "end": "521760"
  },
  {
    "text": "so here when the client eventually gets",
    "start": "521760",
    "end": "523979"
  },
  {
    "text": "it it's easily to identify the path",
    "start": "523979",
    "end": "526140"
  },
  {
    "text": "every time I send it might be a",
    "start": "526140",
    "end": "528480"
  },
  {
    "text": "different path super easy to debug",
    "start": "528480",
    "end": "531420"
  },
  {
    "text": "all right that's all thank you very much",
    "start": "531420",
    "end": "535459"
  }
]