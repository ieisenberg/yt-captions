[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "so hello welcome thank you all for coming along the topic of this session is cortex intro so anyone who's in the",
    "start": "89",
    "end": "9120"
  },
  {
    "text": "wrong room now's a good time to move no great ok",
    "start": "9120",
    "end": "14370"
  },
  {
    "text": "welcome I am Brian this is Tom hello everybody and the respective companies",
    "start": "14370",
    "end": "22380"
  },
  {
    "text": "that we work for are on the screen there so let's start with a show of hands",
    "start": "22380",
    "end": "31970"
  },
  {
    "start": "30000",
    "end": "105000"
  },
  {
    "text": "who's ranked prometheus well basically every one couple couple not ok sorry my",
    "start": "32149",
    "end": "44190"
  },
  {
    "text": "mistake um is anyone who's actually familiar with cortex yeah just a cop you should",
    "start": "44190",
    "end": "51719"
  },
  {
    "text": "really be putting your hands I should put my hand up yeah i i'm familiar with cortex ok ok so be people ok so that's",
    "start": "51719",
    "end": "61079"
  },
  {
    "text": "where you are so you so you're you're very much in the right room for the intro session I'm gonna walk through",
    "start": "61079",
    "end": "69350"
  },
  {
    "text": "what is cortex what's it all about what problem is it solving and then I'm",
    "start": "69350",
    "end": "76710"
  },
  {
    "text": "gonna hand over to tom is gonna do a demo try we have time for questions I",
    "start": "76710",
    "end": "84689"
  },
  {
    "text": "think that just to sort of gauge how much time we might need did anyone come",
    "start": "84689",
    "end": "90479"
  },
  {
    "text": "with a question apart from what is cortex or ok well maybe you'll get some",
    "start": "90479",
    "end": "96299"
  },
  {
    "text": "questions you quest maybe some will enter your head during the session and we can cover those at the end but that's",
    "start": "96299",
    "end": "103259"
  },
  {
    "text": "great you want to hear about scaling",
    "start": "103259",
    "end": "109649"
  },
  {
    "start": "105000",
    "end": "158000"
  },
  {
    "text": "Prometheus and oh you have questions about those ok cool wow that's pretty much the whole whole",
    "start": "109649",
    "end": "116700"
  },
  {
    "text": "point oh boy great and yeah it's a pretty small room so I you know we'll",
    "start": "116700",
    "end": "124560"
  },
  {
    "text": "we'll ask for questions at the end but if you if you really stumped about what you're hearing or bursting to say",
    "start": "124560",
    "end": "130020"
  },
  {
    "text": "something I think we could we could handle yeah do it yeah yeah we might want to get to you with a",
    "start": "130020",
    "end": "137180"
  },
  {
    "text": "with the mic but you know please make yourself visible if you want to make a",
    "start": "137180",
    "end": "144200"
  },
  {
    "text": "point in mid session okay let's get going",
    "start": "144200",
    "end": "149209"
  },
  {
    "text": "what else are we talking about so so this is this is cortex the the kind of",
    "start": "149209",
    "end": "157819"
  },
  {
    "text": "headline the technical definition it is",
    "start": "157819",
    "end": "163250"
  },
  {
    "start": "158000",
    "end": "238000"
  },
  {
    "text": "a time series system it's built on Prometheus we reuse a huge amount of",
    "start": "163250",
    "end": "172549"
  },
  {
    "text": "code from Prometheus and and that's that's extremely valuable to us that's a",
    "start": "172549",
    "end": "178760"
  },
  {
    "text": "key point it is horizontally scalable we'll talk about what all these things",
    "start": "178760",
    "end": "185150"
  },
  {
    "text": "mean in detail over the next few slides it is highly available it has long term",
    "start": "185150",
    "end": "192680"
  },
  {
    "text": "storage and it is multi-tenant you can store data belonging to different people",
    "start": "192680",
    "end": "197690"
  },
  {
    "text": "and keep them separate in the system it is a CNC F sandbox project that that",
    "start": "197690",
    "end": "207019"
  },
  {
    "text": "means you know it's it's kind of neutrally hosted the some of the",
    "start": "207019",
    "end": "212690"
  },
  {
    "text": "companies that contribute to to cortex are in the same market so that's that's",
    "start": "212690",
    "end": "218630"
  },
  {
    "text": "kind of really useful that that it's not owned by one of those companies trying",
    "start": "218630",
    "end": "223640"
  },
  {
    "text": "to try to dominate one another one we all work together on it we all collaborate and it is apache licensed so",
    "start": "223640",
    "end": "232970"
  },
  {
    "text": "you can pretty much do what you like with it okay what else we got people",
    "start": "232970",
    "end": "240019"
  },
  {
    "start": "238000",
    "end": "302000"
  },
  {
    "text": "using cortex some of the logos up there we've works and Gryphon our labs we are",
    "start": "240019",
    "end": "245859"
  },
  {
    "text": "representing some of the some of the well aspinmaster oh you're all wearing a",
    "start": "245859",
    "end": "251480"
  },
  {
    "text": "ribbon with our logo on the the user as part of their service and EA the the",
    "start": "251480",
    "end": "257750"
  },
  {
    "text": "games people they they use it internally for",
    "start": "257750",
    "end": "262930"
  },
  {
    "text": "packing a lot of their metrics and their game servers so a bunch of people",
    "start": "262930",
    "end": "268270"
  },
  {
    "text": "already using cortex some of the sass customers on the right-hand side just",
    "start": "268270",
    "end": "276370"
  },
  {
    "text": "you know there's a whole bunch of people that do use it but didn't want to give us permission to put their logo on the",
    "start": "276370",
    "end": "283479"
  },
  {
    "text": "screen but anyway enough enough people using it projects been around three",
    "start": "283479",
    "end": "289870"
  },
  {
    "text": "years just over now yeah just over three years and so you know it's got a got a",
    "start": "289870",
    "end": "296199"
  },
  {
    "text": "decent amount of battle testing in production there's a little thumbnail on",
    "start": "296199",
    "end": "305110"
  },
  {
    "text": "this screen but I can't read it because I'm old my eyes don't work well enough so I have to I have to turn round",
    "start": "305110",
    "end": "311710"
  },
  {
    "text": "and and look at this way so this this is kind of restating so the the previous",
    "start": "311710",
    "end": "318370"
  },
  {
    "text": "definition was the technical definition this is this is stating it from the what",
    "start": "318370",
    "end": "323740"
  },
  {
    "text": "problem is it trying to solve point of view and so it can give you a global",
    "start": "323740",
    "end": "332080"
  },
  {
    "text": "view of as many metrics as you need that",
    "start": "332080",
    "end": "337500"
  },
  {
    "text": "Prometheus runs in a single process so it will it will top out at some point on",
    "start": "337500",
    "end": "343840"
  },
  {
    "text": "you know however big have a bigger box you can find to run it on and you also",
    "start": "343840",
    "end": "351490"
  },
  {
    "text": "you may have more than one place that you want to get metrics from you may have more than one data center or or",
    "start": "351490",
    "end": "357070"
  },
  {
    "text": "more than one cloud region or you know you may have multiple places so bring",
    "start": "357070",
    "end": "363909"
  },
  {
    "text": "the data together into a global view no gaps in the charts you know if from a",
    "start": "363909",
    "end": "369970"
  },
  {
    "text": "theist is handling everything and if it goes down you know either for maintenance or crashes for some reason",
    "start": "369970",
    "end": "377740"
  },
  {
    "text": "or power failure anything like that you're going to get a gap in the chart the cortex solves that problem we'll",
    "start": "377740",
    "end": "385000"
  },
  {
    "text": "talk about why durable long-term storage we'll talk about that and again we'll",
    "start": "385000",
    "end": "390820"
  },
  {
    "text": "the multiple tenants so you can have multiple effectively multiple separate",
    "start": "390820",
    "end": "396280"
  },
  {
    "text": "systems running in one okay let's talk",
    "start": "396280",
    "end": "402580"
  },
  {
    "start": "400000",
    "end": "550000"
  },
  {
    "text": "about the global view maybe that's another interesting question who has",
    "start": "402580",
    "end": "408520"
  },
  {
    "text": "more than one Prometheus server okay nearly everyone we're talking to",
    "start": "408520",
    "end": "413560"
  },
  {
    "text": "nearly half yeah that's good yeah so so",
    "start": "413560",
    "end": "421150"
  },
  {
    "text": "in fact the way most people run cortex we actually run Prometheus as well as",
    "start": "421150",
    "end": "427360"
  },
  {
    "text": "cortex so the the the part of the operation where we're collecting metrics",
    "start": "427360",
    "end": "434290"
  },
  {
    "text": "that that's usually called the scraping operation that actually that actually is",
    "start": "434290",
    "end": "440320"
  },
  {
    "text": "handled by a Prometheus server we did not need to change that bit at all so",
    "start": "440320",
    "end": "448540"
  },
  {
    "text": "you can have as many of these as you like and they will send the data this is",
    "start": "448540",
    "end": "454090"
  },
  {
    "text": "cortex this is our amazing logo we're in",
    "start": "454090",
    "end": "459490"
  },
  {
    "text": "the middle of the screen they will send the data over an API called the remote",
    "start": "459490",
    "end": "464830"
  },
  {
    "text": "write API so this is a there's an API where Prometheus handles the the client",
    "start": "464830",
    "end": "471669"
  },
  {
    "text": "side and a number of different systems but certainly cortex handled the server",
    "start": "471669",
    "end": "478330"
  },
  {
    "text": "end so the metrics are pushed up this",
    "start": "478330",
    "end": "483789"
  },
  {
    "text": "API everyone knows that Prometheus is pulled only right aha we",
    "start": "483789",
    "end": "490150"
  },
  {
    "text": "fooled you we added push anyway the the and then",
    "start": "490150",
    "end": "497700"
  },
  {
    "text": "brought together in some kind of view so you can run queries and and these",
    "start": "497700",
    "end": "505840"
  },
  {
    "text": "queries can cover all the metrics so this is another thing where where a",
    "start": "505840",
    "end": "511060"
  },
  {
    "text": "single Prometheus server will top out at some point in in bringing all the data together in order to serve the query and",
    "start": "511060",
    "end": "519969"
  },
  {
    "text": "and cortex actually lets you run queries basically as big as you like because we",
    "start": "519969",
    "end": "525970"
  },
  {
    "text": "can we split up the the code into multiple processes that's that's kind of the key",
    "start": "525970",
    "end": "533710"
  },
  {
    "text": "difference at a technical level between Prometheus runs in one process and",
    "start": "533710",
    "end": "538960"
  },
  {
    "text": "cortex runs in many processes or you know it can run in one but as many as you like as everyone everyone understand",
    "start": "538960",
    "end": "546070"
  },
  {
    "text": "when we say horizontal scalability what we mean is that a term people are familiar with hands up if you know what",
    "start": "546070",
    "end": "551230"
  },
  {
    "start": "550000",
    "end": "737000"
  },
  {
    "text": "we mean okay well maybe so like it to me it means you know you've described it as",
    "start": "551230",
    "end": "557770"
  },
  {
    "text": "Prometheus being constrained by a single host you can go out to Amazon and buy a host with I imagine probably a terabyte",
    "start": "557770",
    "end": "563529"
  },
  {
    "text": "of RAM and run a very large Prometheus instance on that host but cortex could take 10 machines with a terabyte of RAM",
    "start": "563529",
    "end": "571330"
  },
  {
    "text": "and be ten times the size of that single Prometheus it can scale across multiple",
    "start": "571330",
    "end": "576550"
  },
  {
    "text": "machines so it can scale horizontally you refer to yeah shouting yeah so the",
    "start": "576550",
    "end": "581890"
  },
  {
    "text": "technique we use under the skin to do this is we use a distributed hash table to automatically shard between you don't",
    "start": "581890",
    "end": "587950"
  },
  {
    "text": "have to manually decide but yeah so the horizontal scaling generally means you can add more machines and the cortex",
    "start": "587950",
    "end": "595450"
  },
  {
    "text": "cluster could get bigger have higher throughput faster queries and so on and",
    "start": "595450",
    "end": "600900"
  },
  {
    "text": "another interesting point is that we can scale because everything is broken down to into microservices the the ingest",
    "start": "600900",
    "end": "608920"
  },
  {
    "text": "path is running one set of processes and the query path is running another set of",
    "start": "608920",
    "end": "614140"
  },
  {
    "text": "processes so we can scale those independently you know if you if you depending on your load if you are",
    "start": "614140",
    "end": "621100"
  },
  {
    "text": "ingesting much more than you query you can run more in jester's and if you are",
    "start": "621100",
    "end": "626860"
  },
  {
    "text": "querying much more than you ingest then you can run a lot of query servers and just you know pick your own adventure",
    "start": "626860",
    "end": "634560"
  },
  {
    "text": "okay but the final just before we move on thank you Tom one of the Oh one of the nice things one of the limits",
    "start": "634560",
    "end": "641620"
  },
  {
    "text": "we set in the Prometheus community is like what we think is reasonable to run in a single machine and so normally if",
    "start": "641620",
    "end": "649560"
  },
  {
    "text": "so I would lost the slides well I have to normally if if you are querying more than a few hundred thousand time series",
    "start": "649560",
    "end": "656050"
  },
  {
    "text": "in a single query we're going to say like you're your query is bad you need to think about pre aggregation with recording was",
    "start": "656050",
    "end": "662410"
  },
  {
    "text": "this kind of thing that's in Prometheus in cortex I need to unlock it with my",
    "start": "662410",
    "end": "667779"
  },
  {
    "text": "magic finger there we go in in cortex",
    "start": "667779",
    "end": "673870"
  },
  {
    "text": "that argument falls flat because you could have mean Gravano Labs I think",
    "start": "673870",
    "end": "679630"
  },
  {
    "text": "we've got fifteen or twenty clusters around the world cube Letty's clusters we've got at least fifteen is actually",
    "start": "679630",
    "end": "684910"
  },
  {
    "text": "more like 30 or 40 different Prometheus's sending to our internal cortex cluster and so any argument about",
    "start": "684910",
    "end": "691690"
  },
  {
    "text": "a hundred thousand being the limit for Prometheus you know gets x times thirty when you apply it to cortex for instance",
    "start": "691690",
    "end": "698290"
  },
  {
    "text": "so we've had to make the quiff had put a huge amount of effort into the query path to make it scalable so that you can",
    "start": "698290",
    "end": "705130"
  },
  {
    "text": "do the same query you would run against Prometheus you can run it against cortex just over thirty forty times the data",
    "start": "705130",
    "end": "710610"
  },
  {
    "text": "that was the final point I want to make and it's really fast it's mostly really",
    "start": "710610",
    "end": "715900"
  },
  {
    "text": "fast we've put a lot of effort in the last year or so in making query paths you know I think we should I should",
    "start": "715900",
    "end": "723010"
  },
  {
    "text": "advertise there's a deep dive session and one of the things we plan to talk about there is query optimizer it's",
    "start": "723010",
    "end": "729580"
  },
  {
    "text": "really interesting if you're into like query optimization we're gonna go into a lot more detail then anyway let's move",
    "start": "729580",
    "end": "735100"
  },
  {
    "text": "on to the the next kind of point I said",
    "start": "735100",
    "end": "740890"
  },
  {
    "start": "737000",
    "end": "823000"
  },
  {
    "text": "we achieve no gaps in the data even though machines can fail and we do this",
    "start": "740890",
    "end": "746770"
  },
  {
    "text": "by replicating the data so the the data comes in over that remote write API I",
    "start": "746770",
    "end": "753370"
  },
  {
    "text": "mentioned earlier and it gets replicated you can pick the factor but but I think",
    "start": "753370",
    "end": "758860"
  },
  {
    "text": "most of us run with three and so what that means is one of these machines can",
    "start": "758860",
    "end": "765880"
  },
  {
    "text": "lose power or something like that and restart and you know we've still got the",
    "start": "765880",
    "end": "772420"
  },
  {
    "text": "we still got the date over here in fact two of them can die and we've still got the data the the data does live in",
    "start": "772420",
    "end": "778270"
  },
  {
    "text": "memory for bit as we're compressing it that's one of the features of a good",
    "start": "778270",
    "end": "783279"
  },
  {
    "text": "time series databases is you got incredible compression in the data from the the raw samples come in",
    "start": "783279",
    "end": "790480"
  },
  {
    "text": "like a 8 bytes para value and plus the timestamp and that gets crushed down to",
    "start": "790480",
    "end": "796540"
  },
  {
    "text": "a little over a byte per sample so all that's that's why we hold the data in",
    "start": "796540",
    "end": "802630"
  },
  {
    "text": "memory for a while and if that machine crashes you will new you will lose the",
    "start": "802630",
    "end": "808030"
  },
  {
    "text": "most recent data and that's why we replicate it into some more machines and",
    "start": "808030",
    "end": "813460"
  },
  {
    "text": "all of that happens in memory so it's really fast the while the next part is the storage which I'll talk about that",
    "start": "813460",
    "end": "823140"
  },
  {
    "start": "823000",
    "end": "1047000"
  },
  {
    "text": "so we we did not want to write a storage",
    "start": "823680",
    "end": "829600"
  },
  {
    "text": "system the actually when we started writing cortex Tom started writing",
    "start": "829600",
    "end": "839350"
  },
  {
    "text": "cortex the the Prometheus storage engine was was quite a lot worse they made that",
    "start": "839350",
    "end": "846160"
  },
  {
    "text": "engine quite a lot better and in version 2 but either way it's the Prometheus storage engine is not built for sharding",
    "start": "846160",
    "end": "853060"
  },
  {
    "text": "it's not built for for massive scale and",
    "start": "853060",
    "end": "858190"
  },
  {
    "text": "we did not want to write one that is when there are already things you can",
    "start": "858190",
    "end": "865300"
  },
  {
    "text": "take off the shelf which run which are designed to run at enormous scale so the",
    "start": "865300",
    "end": "874050"
  },
  {
    "text": "most of the cortex systems I look after run against DynamoDB most of the ones",
    "start": "874050",
    "end": "879790"
  },
  {
    "text": "that Tom looks after run against BigTable it also talks to Cassandra if",
    "start": "879790",
    "end": "885850"
  },
  {
    "text": "you are skilled at administering Cassandra otherwise don't go there just",
    "start": "885850",
    "end": "892810"
  },
  {
    "text": "pay because so much easier and and the",
    "start": "892810",
    "end": "898000"
  },
  {
    "text": "the other one on here the bolt DB we use that too if we want to run a very small",
    "start": "898000",
    "end": "905320"
  },
  {
    "text": "instance like on your laptop just writing to files on disk so that's",
    "start": "905320",
    "end": "911380"
  },
  {
    "text": "that's that one's not built for enormous scale but cortex has multiple backends",
    "start": "911380",
    "end": "918430"
  },
  {
    "text": "coded into it and you you basically pick one when you could figure it and and that's",
    "start": "918430",
    "end": "926300"
  },
  {
    "text": "where your data goes all right I should maybe explain why is s3 and dynamo and",
    "start": "926300",
    "end": "932959"
  },
  {
    "text": "GCS and and BigTable so the the table type of storage is needed for the index",
    "start": "932959",
    "end": "941230"
  },
  {
    "text": "how we we look up the data in a kind of a tabular index and the the the data",
    "start": "941230",
    "end": "950029"
  },
  {
    "text": "samples themselves which are kind of saved in chunks of a few K you can put",
    "start": "950029",
    "end": "955610"
  },
  {
    "text": "them in in dynamo as well or BigTable as well or you can put them in the sort of blob store s3 type of storage so you can",
    "start": "955610",
    "end": "965750"
  },
  {
    "text": "either either use the table style only or you can use table plus blob there is",
    "start": "965750",
    "end": "971569"
  },
  {
    "text": "not an option to use blob only not yet not yet which is a little bit of a shame because it's it's a lot cheaper that's",
    "start": "971569",
    "end": "977870"
  },
  {
    "text": "what I'm working on actually I want to I want to use dynamodb to build the index locally and then flush that out to a",
    "start": "977870",
    "end": "983300"
  },
  {
    "text": "blob store yeah so final thing you mind if I just add one thing here sure just",
    "start": "983300",
    "end": "988579"
  },
  {
    "text": "one more thing just one more thing like a question I commonly get is if we use DynamoDB or BigTable which already these",
    "start": "988579",
    "end": "995569"
  },
  {
    "text": "needs really scalable key value stores is what purpose is cortex serving right",
    "start": "995569",
    "end": "1000670"
  },
  {
    "text": "a lot of people would just say well you just should have Prometheus right straight to BigTable for instance and",
    "start": "1000670",
    "end": "1006759"
  },
  {
    "text": "the problem is like a lot of these systems they're designed for huge scalability they're designed for millions of QPS but a million metrics a",
    "start": "1006759",
    "end": "1013930"
  },
  {
    "text": "second is not that many metrics like a you know on your you know the kind of",
    "start": "1013930",
    "end": "1018939"
  },
  {
    "text": "footprint we've discussed like 30 different Kisan 30 different kubernetes nodes distributed around the world of",
    "start": "1018939",
    "end": "1024720"
  },
  {
    "text": "relative size clusters disappeared around the world of relative relatively reasonable size can easily generate huge",
    "start": "1024720",
    "end": "1030699"
  },
  {
    "text": "orders of magnitude of metrics that would easily overwhelm you know or not overwhelm because they're very scalable",
    "start": "1030699",
    "end": "1035860"
  },
  {
    "text": "would easily cost you a lot of money to run a BigTable cluster big enough to consume that amount of writes so really",
    "start": "1035860",
    "end": "1042730"
  },
  {
    "text": "like brian alluded to earlier when he was talking about the compression that we add but really you can think of",
    "start": "1042730",
    "end": "1048308"
  },
  {
    "start": "1047000",
    "end": "1260000"
  },
  {
    "text": "cortex as taking lots of lots of samples in from Prometheus compressing them together into a single right",
    "start": "1048309",
    "end": "1055090"
  },
  {
    "text": "to your to your storage engine and basically acting as like a massive like",
    "start": "1055090",
    "end": "1060580"
  },
  {
    "text": "deduplication factor like it D amplifies rights from Prometheus into your store",
    "start": "1060580",
    "end": "1066190"
  },
  {
    "text": "and it also adds the mean the final point about is you know you can't execute prom QL queries against BigTable",
    "start": "1066190",
    "end": "1072549"
  },
  {
    "text": "you know BigTable doesn't have a prom QL API so you need certain things to be able to execute those crews you need to",
    "start": "1072549",
    "end": "1079120"
  },
  {
    "text": "be able to find the series that match your selectors that you've done in Prometheus so you need an index you know",
    "start": "1079120",
    "end": "1086200"
  },
  {
    "text": "BigTable is just a key value store similar word DynamoDB so you you know cortex adds that indexing and it adds",
    "start": "1086200",
    "end": "1093070"
  },
  {
    "text": "that D amplification of Rights thank you yeah the so you might have like 3,000",
    "start": "1093070",
    "end": "1101049"
  },
  {
    "text": "samples come in here for one right to the to the data store effectively if you",
    "start": "1101049",
    "end": "1112509"
  },
  {
    "text": "were to run this in completely off the cloud thank you",
    "start": "1112509",
    "end": "1122879"
  },
  {
    "text": "yes the only option to run at scale well",
    "start": "1122879",
    "end": "1129580"
  },
  {
    "text": "let's put the options up again you you need to you need to pick one table style",
    "start": "1129580",
    "end": "1136899"
  },
  {
    "text": "so basically DynamoDB or big table or Cassandra or you know start typing what",
    "start": "1136899",
    "end": "1145869"
  },
  {
    "text": "did you have a particular other alternative in or you just want it to be not on the cloud",
    "start": "1145869",
    "end": "1152190"
  },
  {
    "text": "so that as you're yeah cosmos DB has a Cassandra API which we don't necessarily",
    "start": "1156080",
    "end": "1163350"
  },
  {
    "text": "talk about a lot but it'll yeah we should probably start including cosmos in that list it'll work yeah it works we",
    "start": "1163350",
    "end": "1170399"
  },
  {
    "text": "run it we run rather the other rock you heard tom guaranteed it so it would it",
    "start": "1170399",
    "end": "1176549"
  },
  {
    "text": "would work with them personally wait you can run it against multi be locally as",
    "start": "1176549",
    "end": "1182250"
  },
  {
    "text": "well and that has no dependencies but I don't think anyone's doing that in production for scale yeah yeah like no",
    "start": "1182250",
    "end": "1188220"
  },
  {
    "text": "one's doing in production yet and it's not been battle tested so like the demo I give will be using Bowl TB but if you",
    "start": "1188220",
    "end": "1193799"
  },
  {
    "text": "want it to be the first person to run it scale like you know let us know how you how you get on second can you use mini",
    "start": "1193799",
    "end": "1204240"
  },
  {
    "text": "us oh well that's not that's a blob store right that's not a so the question was can you use mini us mini us and that's as far as I",
    "start": "1204240",
    "end": "1211049"
  },
  {
    "text": "understand a blob store not a not a key-value store not a like a distributed database yeah so yeah we need something",
    "start": "1211049",
    "end": "1219570"
  },
  {
    "text": "that's like cassandra has a tabular type of look up to it okay let's move on",
    "start": "1219570",
    "end": "1228210"
  },
  {
    "text": "great questions by the way another great question let's move on let's not move on have you considered clique house no not",
    "start": "1228210",
    "end": "1237510"
  },
  {
    "text": "for any reason we just haven't got around to it yet but as long as you've got this kind of row",
    "start": "1237510",
    "end": "1243779"
  },
  {
    "text": "and column access model like like big table like dynamodb like sandra they all have a very similar data model as long",
    "start": "1243779",
    "end": "1250110"
  },
  {
    "text": "as you can support that it should be really trivial to add support for it yes and as a pure yeah i don't know enough",
    "start": "1250110",
    "end": "1255360"
  },
  {
    "text": "about clique house to to really give a good answer there so let's talk about",
    "start": "1255360",
    "end": "1261929"
  },
  {
    "start": "1260000",
    "end": "1529000"
  },
  {
    "text": "multi-tenant this is my amazing artistic skill here what am I trying to show I'm",
    "start": "1261929",
    "end": "1271500"
  },
  {
    "text": "trying to show that that it you can have data starting from different domains",
    "start": "1271500",
    "end": "1277169"
  },
  {
    "text": "that you want to keep separate so I work for weave works we have a an online sass",
    "start": "1277169",
    "end": "1282840"
  },
  {
    "text": "product called weave cloud you can sign up for a free trial on the internet right now and start",
    "start": "1282840",
    "end": "1289549"
  },
  {
    "text": "sending your metrics you don't want your metrics to be visible to Tom or you know",
    "start": "1289549",
    "end": "1295159"
  },
  {
    "text": "the guy sign next to you or whatever you want ask to keep them all separate so that's that's multi-tenant right that's",
    "start": "1295159",
    "end": "1301249"
  },
  {
    "text": "and you might you might have that in another situation you might have different parts of your business where you want to keep those metrics separate",
    "start": "1301249",
    "end": "1307749"
  },
  {
    "text": "or you you might have IT metrics versus business metrics and people are",
    "start": "1307749",
    "end": "1313429"
  },
  {
    "text": "sensitive about who can see what if you don't have that problem they ignore this",
    "start": "1313429",
    "end": "1318799"
  },
  {
    "text": "slide you know have a little sleep to yourself for a minute but basically",
    "start": "1318799",
    "end": "1325119"
  },
  {
    "text": "basically all that we do is is we we let you assign each of these different",
    "start": "1325119",
    "end": "1331879"
  },
  {
    "text": "tenants or domains of metrics with an ID and I've just coloured them here and",
    "start": "1331879",
    "end": "1338690"
  },
  {
    "text": "then we we hold onto that ID all the way through the system into the database",
    "start": "1338690",
    "end": "1343719"
  },
  {
    "text": "through the queries and when you when you come in to make a query you identify yourself as the same tenant and you will",
    "start": "1343719",
    "end": "1352969"
  },
  {
    "text": "get only those metrics you will have no information whatsoever about any other tenant when you when you come in through",
    "start": "1352969",
    "end": "1359269"
  },
  {
    "text": "the query API so cortex does not implement authentication passwords",
    "start": "1359269",
    "end": "1367690"
  },
  {
    "text": "anything like that cortex assumes that you can find something else that does that and and that might be some kind of",
    "start": "1367690",
    "end": "1374629"
  },
  {
    "text": "reverse proxy like an engine X or it might be something more sophisticated we",
    "start": "1374629",
    "end": "1379940"
  },
  {
    "text": "don't care what we all we need is that when you come in you you you come in",
    "start": "1379940",
    "end": "1386899"
  },
  {
    "text": "with an ID which is unique for one of those tenants and the ID is a string of",
    "start": "1386899",
    "end": "1393919"
  },
  {
    "text": "any style that you want to pick I have a question here is that Donna said label",
    "start": "1393919",
    "end": "1402619"
  },
  {
    "text": "on Prometheus no this this is I think you know if you if you did it as a label",
    "start": "1402619",
    "end": "1408529"
  },
  {
    "text": "then that would require that all your queries queried on that label and what",
    "start": "1408529",
    "end": "1413960"
  },
  {
    "text": "we want to we don't want to make it up to the person writing the query as to whether they get the room they're entitled to see so we add this",
    "start": "1413960",
    "end": "1422680"
  },
  {
    "text": "ID in the API here and here and it's",
    "start": "1422680",
    "end": "1429910"
  },
  {
    "text": "invisible to the query that the like if you're using a tool like lycra fana for",
    "start": "1429910",
    "end": "1436450"
  },
  {
    "text": "instance it's a HTTP header yeah well",
    "start": "1436450",
    "end": "1443680"
  },
  {
    "text": "you can only send you you can only send the data with what with you know you",
    "start": "1443680",
    "end": "1450370"
  },
  {
    "text": "can't you can't tell Prometheus to sort of send half the data down down one channel and half the data down another",
    "start": "1450370",
    "end": "1455860"
  },
  {
    "text": "channel so one of the one of the tricks we use for our billing pipeline we use cortex for billing is we actually do",
    "start": "1455860",
    "end": "1462610"
  },
  {
    "text": "what you've just described and promote an external label to be the the tenant",
    "start": "1462610",
    "end": "1467860"
  },
  {
    "text": "ID and so we've written a little a little proxy that'll basically take a label and promote it to the header you",
    "start": "1467860",
    "end": "1474100"
  },
  {
    "text": "know that's like a hundred lines ago I think it might be open source you so you can't do that kind of thing if you want",
    "start": "1474100",
    "end": "1479530"
  },
  {
    "text": "but it's outside of the scope for cortex yeah so we cortex is in the business of",
    "start": "1479530",
    "end": "1486730"
  },
  {
    "text": "hanging on to these IDs and and you know tagging tagging every piece of data with this ID all the way through the system",
    "start": "1486730",
    "end": "1495240"
  },
  {
    "text": "how you assign the IDs they're there is by the way no process",
    "start": "1495240",
    "end": "1501850"
  },
  {
    "text": "to assign a new ID you just you just show up with data and cortex will just",
    "start": "1501850",
    "end": "1507970"
  },
  {
    "text": "accept that there's there's no kind of create a new user process you know you",
    "start": "1507970",
    "end": "1514240"
  },
  {
    "text": "might need that for instance if you're running a billing system you might need someone's credit card before you you",
    "start": "1514240",
    "end": "1519540"
  },
  {
    "text": "create a user but that's out of scope of cortex the cortex just sees a new ID and says okay great I'm storing data for a",
    "start": "1519540",
    "end": "1527050"
  },
  {
    "text": "new person so that is pretty much my",
    "start": "1527050",
    "end": "1532720"
  },
  {
    "start": "1529000",
    "end": "1639000"
  },
  {
    "text": "walk through those are the problems that cortex solves and a little bit about how it solves them and I'm gonna hand over",
    "start": "1532720",
    "end": "1538660"
  },
  {
    "text": "to Tom now who is going to show it in action when do we finish when do we finish twenty to ten minutes because I",
    "start": "1538660",
    "end": "1546820"
  },
  {
    "text": "just heard them clap so I assume we're under time pressure right then like quickly I'll type quickly so I'm gonna",
    "start": "1546820",
    "end": "1554380"
  },
  {
    "text": "mime a name how do you display preferences do I need to dance for a bit",
    "start": "1554380",
    "end": "1560890"
  },
  {
    "text": "longer yeah if you don't mind well I could take a quick question if there is one yes so your question is how does",
    "start": "1560890",
    "end": "1572470"
  },
  {
    "text": "this compare with Thanos Oh influx yeah",
    "start": "1572470",
    "end": "1578200"
  },
  {
    "text": "so influx is a whole different database so so yeah there's a bunch you can send",
    "start": "1578200",
    "end": "1583630"
  },
  {
    "text": "your you can send your metrics to stackdriver influx DB you can send your metrics to",
    "start": "1583630",
    "end": "1591790"
  },
  {
    "text": "people who have their own database the",
    "start": "1591790",
    "end": "1596860"
  },
  {
    "text": "those things are different varieties of open source cortex is fully open source",
    "start": "1596860",
    "end": "1604180"
  },
  {
    "text": "for instance influx DB you don't get the clustering the H a is not part of the",
    "start": "1604180",
    "end": "1609790"
  },
  {
    "text": "open source project stackdriver none of it is open source so you can you can",
    "start": "1609790",
    "end": "1616540"
  },
  {
    "text": "pick one of those they work great the the unique thing as far as we know about",
    "start": "1616540",
    "end": "1622000"
  },
  {
    "text": "cortex is that it's open source thanassis is solving the same problem",
    "start": "1622000",
    "end": "1627310"
  },
  {
    "text": "with very different engineering trade-offs and we probably don't have time we'll do that in the deep dive the",
    "start": "1627310",
    "end": "1632350"
  },
  {
    "text": "the interesting thing is I can't move my mouse to the right for some reason okay has anyone experienced this bug before",
    "start": "1632350",
    "end": "1637830"
  },
  {
    "text": "can't move it to the right yeah it just it just stops there okay what if you put",
    "start": "1637830",
    "end": "1643210"
  },
  {
    "text": "the screen and mirroring mode or cynicism unit in there I'm gonna if I unplug it and plug it back in will it will it work yeah okay I'm doing it well",
    "start": "1643210",
    "end": "1653560"
  },
  {
    "text": "we can learn about AV yeah this is turning into an intro to AV course oh",
    "start": "1653560",
    "end": "1658600"
  },
  {
    "text": "are we ready to go and mass works does the screen Oh was there another question yeah oh it's",
    "start": "1658600",
    "end": "1668620"
  },
  {
    "text": "back good can you send the data from cortex to two different databases",
    "start": "1668620",
    "end": "1676350"
  },
  {
    "text": "I don't think that's a native feature of",
    "start": "1678450",
    "end": "1683520"
  },
  {
    "text": "cortex it is actually a feature of cosmos db2 you send it once and cosmos",
    "start": "1683520",
    "end": "1688950"
  },
  {
    "text": "DB will replicate it to multiple data centers big table feature dining ok so",
    "start": "1688950",
    "end": "1697620"
  },
  {
    "text": "it's not a feature of cortex but it's a feature of a lot of the storage back-end that they will do that Multi multi",
    "start": "1697620",
    "end": "1703530"
  },
  {
    "text": "region replication for you so we if when we run a like a multi region cluster for",
    "start": "1703530",
    "end": "1710100"
  },
  {
    "text": "customers we that's how we set up we do the replication at the index we use a global bucket and we just run three",
    "start": "1710100",
    "end": "1715740"
  },
  {
    "text": "independent cortex clusters and master elect between them in the front end but a lot of that's kind of out scope of",
    "start": "1715740",
    "end": "1721409"
  },
  {
    "text": "cortex for now at least like I'd hoped we could open source a bunch of that yeah you can run mean graph on a",
    "start": "1721409",
    "end": "1728880"
  },
  {
    "text": "horizontal scales as well but sorry the question was like can you run in a horizontally scalable graph on or",
    "start": "1728880",
    "end": "1733980"
  },
  {
    "text": "effectively like failover graph on a PEZ and you can but it's kind of out of scope for this tool anyway right so my",
    "start": "1733980",
    "end": "1740250"
  },
  {
    "start": "1739000",
    "end": "2194000"
  },
  {
    "text": "main aim for the next kind of five minutes is to show you how easy it is to kind of experiment with cortex on your",
    "start": "1740250",
    "end": "1745799"
  },
  {
    "text": "laptop on your laptop I kind of call this airplane mode hopefully you'll see why so you can go",
    "start": "1745799",
    "end": "1751919"
  },
  {
    "text": "and grab cortex just go build it we published docker binaries at docker images but we don't actually publish",
    "start": "1751919",
    "end": "1758159"
  },
  {
    "text": "Dolan by you know precompiled binaries for anything else yeah because it's so easy to compile and when you run it",
    "start": "1758159",
    "end": "1763620"
  },
  {
    "text": "you'll see it kind of starts a whole bunch of different modules create some tables in it bolt DB instance and then it's ready to go",
    "start": "1763620",
    "end": "1770090"
  },
  {
    "text": "the reason it's broken down into this kind of modular fashion I'm running a single process single binary here but",
    "start": "1770090",
    "end": "1775830"
  },
  {
    "text": "you can take the same binary and just run it as an ingest adjust run it as a distributor just run it as a querier and get that kind of independent scaling",
    "start": "1775830",
    "end": "1782370"
  },
  {
    "text": "that Brian talked about anyway so that's running it's listening on port 9000 and 9 so I'm gonna start a Prometheus here",
    "start": "1782370",
    "end": "1789419"
  },
  {
    "text": "I'm gonna show you examples Prometheus yml in the Prometheus config",
    "start": "1789419",
    "end": "1797039"
  },
  {
    "text": "I've got this line here saying remote write to my local host and everyone see that I'm stunningly remote write to localhost",
    "start": "1797039",
    "end": "1803909"
  },
  {
    "text": "9001 it should be nine thousand and nine so so writing to 9009 now and I'm gonna",
    "start": "1803909",
    "end": "1813250"
  },
  {
    "text": "start prometheus and I'm also just deleting the old data so now this line here is telling us that",
    "start": "1813250",
    "end": "1821050"
  },
  {
    "text": "Prometheus is pushing to that end point so this Prometheus is just set up to",
    "start": "1821050",
    "end": "1826090"
  },
  {
    "text": "scrape itself so it's just gathering some metrics about his own functions and it's just pushing water cortex as we can",
    "start": "1826090",
    "end": "1832420"
  },
  {
    "text": "see cortex is still happy and I'm gonna run a graph on uh now dr. ranga fauna",
    "start": "1832420",
    "end": "1843850"
  },
  {
    "text": "port 3000 I'm running gravano in docker because it takes ages to build Ravana",
    "start": "1843850",
    "end": "1849940"
  },
  {
    "text": "and now I need to figure out how to get out of that window it doesn't work there",
    "start": "1849940",
    "end": "1857679"
  },
  {
    "text": "we go alright so that's kind of giving away the the punchline there but if we",
    "start": "1857679",
    "end": "1863470"
  },
  {
    "text": "go localhost 3000 we can get to our growth fauna and password for all the",
    "start": "1863470",
    "end": "1870610"
  },
  {
    "text": "founders is admin and admin and no one was changing it now",
    "start": "1870610",
    "end": "1875770"
  },
  {
    "text": "what I'll show is we're gonna add a data source to grow fauna and this time we're just going to add the Prometheus for now",
    "start": "1875770",
    "end": "1881040"
  },
  {
    "text": "I have a cheat sheet here this is in the readme for cortex how to do all of this",
    "start": "1881040",
    "end": "1886750"
  },
  {
    "text": "demo so I'm just going to copy this because the graph on is running in",
    "start": "1886750",
    "end": "1892300"
  },
  {
    "text": "docker and the Prometheus isn't so you have to use some funny tricks and we",
    "start": "1892300",
    "end": "1897640"
  },
  {
    "text": "save it and it works and then I'm gonna add whilst we're here I'm going to add a data source for cortex which is just",
    "start": "1897640",
    "end": "1903850"
  },
  {
    "text": "Prometheus so we're going to call this one cortex and it's gonna be pretty much",
    "start": "1903850",
    "end": "1911650"
  },
  {
    "text": "the same thing I said cortex was listening on port 9009 and there's a little preface on the or a lot of saving",
    "start": "1911650",
    "end": "1919240"
  },
  {
    "text": "test networks so in the Explorer mode we can see does anyone know a good Prometheus query how about we do",
    "start": "1919240",
    "end": "1926230"
  },
  {
    "text": "Prometheus TS dB",
    "start": "1926230",
    "end": "1931380"
  },
  {
    "text": "series nope samples there we go and we'll just see roughly what the rate",
    "start": "1932440",
    "end": "1939860"
  },
  {
    "text": "I have any money it for that long so we can see that the Prometheus is scraping or walking twenty five seconds samples a",
    "start": "1939860",
    "end": "1946279"
  },
  {
    "text": "second and I've disc refiner is talking directly to the Prometheus and sending that query and showing you the result now we can this is by the way this is a",
    "start": "1946279",
    "end": "1953779"
  },
  {
    "text": "new feature in grow fauna which David will be talking about like on the last day called Explorer it's pretty cool",
    "start": "1953779",
    "end": "1959659"
  },
  {
    "text": "switch to cortex you can see that you get exactly the same answer so this is",
    "start": "1959659",
    "end": "1966340"
  },
  {
    "text": "cortex 101 I've run a Prometheus I've had it send data to the cortex I've run a graph Anna",
    "start": "1966340",
    "end": "1971509"
  },
  {
    "text": "I've had it query the Prometheus and query the cortex and show you get the same result so that's the basic the next",
    "start": "1971509",
    "end": "1978320"
  },
  {
    "text": "step you've got two minutes next step I want to show you is I'm gonna run a",
    "start": "1978320",
    "end": "1985119"
  },
  {
    "text": "cluster kill them - I said that's just",
    "start": "1985119",
    "end": "1992269"
  },
  {
    "text": "running in the background now so now I'm gonna run a small cluster just to show you that the only thing running here is",
    "start": "1992269",
    "end": "1997639"
  },
  {
    "text": "a console node consoles are distribute key value store from Hashi Corp and we use that to store the state for the",
    "start": "1997639",
    "end": "2005019"
  },
  {
    "text": "cluster so which in jesters are members which tokens they own we're going to a lot more detail about it in the deep",
    "start": "2005019",
    "end": "2010210"
  },
  {
    "text": "dive and you can see there's agra fauna you should be able to see there was nothing else so now i'm gonna dock a run",
    "start": "2010210",
    "end": "2018509"
  },
  {
    "text": "and this is getting a bit hairy but the commands for this are in the readme i'm creating a container called console one",
    "start": "2018509",
    "end": "2024220"
  },
  {
    "text": "cortex one i'm attaching it to a special network so that it can find the grow fauna and the console i'm exposing it on",
    "start": "2024220",
    "end": "2031059"
  },
  {
    "text": "port 9001 please and then i'm mapping a",
    "start": "2031059",
    "end": "2037330"
  },
  {
    "text": "config file through so that it's got some config it can use and then I'm",
    "start": "2037330",
    "end": "2045190"
  },
  {
    "text": "running the cortex docker image I'm telling it to use a config file and I'm telling it to use console to storage",
    "start": "2045190",
    "end": "2050200"
  },
  {
    "text": "State and I'm giving it log level debug because the demo didn't work when I tried this morning but it does now so",
    "start": "2050200",
    "end": "2056618"
  },
  {
    "text": "that's one I'm going to run a second one I'm going to call this cortex - and I'm",
    "start": "2056619",
    "end": "2062770"
  },
  {
    "text": "going to map this through to port 9000 and to now if we go to those ports cortex",
    "start": "2062770",
    "end": "2069849"
  },
  {
    "text": "exposes a small really really basic HTTP HTML one admin interface that can help",
    "start": "2069849",
    "end": "2076539"
  },
  {
    "text": "you debug it and we use this this shows you basically the membership of the core-tex cluster you see those two",
    "start": "2076539",
    "end": "2081908"
  },
  {
    "text": "cortex nodes have automatically joined have automatically distributed the ring between themselves or one owns 49.8% in",
    "start": "2081909",
    "end": "2088569"
  },
  {
    "text": "the ring and the other one who owns 50.1% of the ring and I'm just gonna run",
    "start": "2088569",
    "end": "2093608"
  },
  {
    "text": "Prometheus again this time I'm gonna point Prometheus at port 9001 there run",
    "start": "2093609",
    "end": "2103779"
  },
  {
    "text": "that again and I'm going to change my cortex in datasource ingre fauna to two",
    "start": "2103779",
    "end": "2116529"
  },
  {
    "text": "point two nine thousand and two and it",
    "start": "2116529",
    "end": "2122019"
  },
  {
    "text": "should be sorry it should be cortex to nine thousand and nine yes",
    "start": "2122019",
    "end": "2129640"
  },
  {
    "text": "so now what I've done is you can run the query again you can see Prometheus is still working",
    "start": "2129640",
    "end": "2135329"
  },
  {
    "text": "prometheus is still working it's only just started there's very little data in there and I've set cortex a Prometheus",
    "start": "2135329",
    "end": "2141789"
  },
  {
    "text": "is writing to the first instance of cortex and the graph Anna is talking to the second instance of cortex now if",
    "start": "2141789",
    "end": "2147400"
  },
  {
    "text": "these two things haven't clustered my results will be returning empty from cortex to right because they're being",
    "start": "2147400",
    "end": "2152920"
  },
  {
    "text": "written to cortex one and I'm querying cortex two and really I'm just trying to show you here that clustering is real and it really works so if I run this",
    "start": "2152920",
    "end": "2160569"
  },
  {
    "text": "command do I get the same answer I do yeah okay now we were out of time I",
    "start": "2160569",
    "end": "2167230"
  },
  {
    "text": "really want the third demo I wanted to do was showing you that we can run three of them we can do replication and we can kill one and that writes in queries",
    "start": "2167230",
    "end": "2173380"
  },
  {
    "text": "still work but you'll have to come to the deep dive to see that demo thanks",
    "start": "2173380",
    "end": "2179529"
  },
  {
    "text": "all for coming I guess we could see you in the hallway or we have booths you can",
    "start": "2179529",
    "end": "2184930"
  },
  {
    "text": "come and try and find as their autism if there's also a Prometheus booth we'll all mostly be on that sometime during",
    "start": "2184930",
    "end": "2190180"
  },
  {
    "text": "the day so come finds a few on chat thank you very much thank you",
    "start": "2190180",
    "end": "2195480"
  }
]