[
  {
    "text": "hello everyone my name is Katie gamanji and currently I am a senior field engineer at Apple I",
    "start": "840",
    "end": "7859"
  },
  {
    "text": "have joined this role last year and in my role I'm trying to bring Cloud native and kubernetes expertise to different",
    "start": "7859",
    "end": "13559"
  },
  {
    "text": "teams and products within apple as well I am one of the TOC or technical oversight Committee Member for cncf or",
    "start": "13559",
    "end": "20760"
  },
  {
    "text": "Cloud native Computing foundation in this role I'm joining 10 other Champions within the industry and we try to",
    "start": "20760",
    "end": "26699"
  },
  {
    "text": "provide a perspective and a tier of how to navigate the landscape I have many other roles in the community",
    "start": "26699",
    "end": "32940"
  },
  {
    "text": "one of them being an Advisory Board member for Captain which currently is an incubating cncf project and I am the",
    "start": "32940",
    "end": "39239"
  },
  {
    "text": "creator of the cloud native fundamentals course which you can find on Udacity now this is a free course so completely",
    "start": "39239",
    "end": "45660"
  },
  {
    "text": "selfless here however if you know anyone would be interested in pursuing a cloud native career I would definitely",
    "start": "45660",
    "end": "51180"
  },
  {
    "text": "recommend to look at this course for them to navigate and understand the bus the fundamentals but to apply them in",
    "start": "51180",
    "end": "57360"
  },
  {
    "text": "production as well now today however I would like to talk about Cloud bare metal Chronicles and",
    "start": "57360",
    "end": "64799"
  },
  {
    "text": "more importantly the intertwine between cluster API Tinkerbell and githubs and to do so I would like to firstly",
    "start": "64799",
    "end": "71580"
  },
  {
    "text": "introduce cluster API and how it provides one set of Standards to deployer infrastructure to any cloud",
    "start": "71580",
    "end": "76920"
  },
  {
    "text": "provider next I'm going to focus on bare metal provisioning and here's what I'm going to introduce Tinkerbell but more",
    "start": "76920",
    "end": "83220"
  },
  {
    "text": "importantly I'm going to focus on the Coalition between Tinkerbell and cluster API which is going to result with kpt or",
    "start": "83220",
    "end": "88979"
  },
  {
    "text": "class JPI provider for Tinkerbell and lastly just to sprinkle it up a bit I'm going to introduce some githubs into",
    "start": "88979",
    "end": "96000"
  },
  {
    "text": "the architecture that I'm going to show so pretty much when we deal with cluster provisioning we're never going to have",
    "start": "96000",
    "end": "101460"
  },
  {
    "text": "one cluster we have to manage multiple clusters and we need to introduce automation to ensure a sustainable",
    "start": "101460",
    "end": "106799"
  },
  {
    "text": "deployment of our infrastructure now Bobby show hands how many of you are",
    "start": "106799",
    "end": "112140"
  },
  {
    "text": "familiar with cluster API just make sure that I introduce the fundamentals right cool action that's a very big show of",
    "start": "112140",
    "end": "117780"
  },
  {
    "text": "hands how many of you are familiar with Tinkerbell and not the character okay some of you good and how many of",
    "start": "117780",
    "end": "125520"
  },
  {
    "text": "you are using githubs or have heard about githubs at the moment okay that's good too and another",
    "start": "125520",
    "end": "130920"
  },
  {
    "text": "question which is going to be very relevant how many of you do have a need for bare metal provisioning or are deploying the infrastructure",
    "start": "130920",
    "end": "136680"
  },
  {
    "text": "infrastructure to Bare Metal okay that's actually a very short hands for everyone else I would hope that you'd be more",
    "start": "136680",
    "end": "142860"
  },
  {
    "text": "inspired to use Tinkerbell or to actually explore the cloud native pyramidal provisioning",
    "start": "142860",
    "end": "149340"
  },
  {
    "text": "and actually there is a reason why I'm giving this stock at this moment now if you look at the ecosystem we have",
    "start": "149340",
    "end": "155700"
  },
  {
    "text": "multiple tools that cross the chasm at the moment and with crossing the chasm we have more and more late adopters the",
    "start": "155700",
    "end": "162000"
  },
  {
    "text": "more important feature of these later doctors is that these are regulated Industries and they have a need to",
    "start": "162000",
    "end": "167760"
  },
  {
    "text": "deploy their infrastructure on bare metal hence they look into provisioning their infrastructure on kubernetes using",
    "start": "167760",
    "end": "174599"
  },
  {
    "text": "bare metal now the thing is at the beginning the",
    "start": "174599",
    "end": "179700"
  },
  {
    "text": "picture was very different if you look nine years ago we had a vast majority of container orchestrators such as Lucas",
    "start": "179700",
    "end": "186360"
  },
  {
    "text": "worm Apache mess or scorest Fleet kubernetes and all of them provided a viable solution to run containers at",
    "start": "186360",
    "end": "192120"
  },
  {
    "text": "scale however kubernetes took the lead in defining the principles of how to run",
    "start": "192120",
    "end": "197220"
  },
  {
    "text": "this containerized workloads nowadays kubernetes is known for its portability and adaptability but more importantly",
    "start": "197220",
    "end": "203099"
  },
  {
    "text": "for its approach towards declarative configuration and automation and we can see this in numbers as well",
    "start": "203099",
    "end": "208620"
  },
  {
    "text": "based on the VMware tanso state of kubernetes report which was released this year 99 of the organizations see a",
    "start": "208620",
    "end": "215159"
  },
  {
    "text": "clear benefit of using kubernetes the first reason being a better usage of the recipient memory and the second one",
    "start": "215159",
    "end": "221640"
  },
  {
    "text": "being an East application management especially throughout the upgrade process a metric I would like to highlight which",
    "start": "221640",
    "end": "227640"
  },
  {
    "text": "is very relevant for this talk is that 52 of the organizations still have a need for bare metal",
    "start": "227640",
    "end": "233220"
  },
  {
    "text": "now very important these numbers actually declining from last year last year it was 55 this year is 52 so we see",
    "start": "233220",
    "end": "239760"
  },
  {
    "text": "this very slow declining Trend overall however this does not dismiss is the fact that more than half of these",
    "start": "239760",
    "end": "245640"
  },
  {
    "text": "organizations still need to deploy their infrastructure on-prem an enough for metric I would like to",
    "start": "245640",
    "end": "250799"
  },
  {
    "text": "highlight is that more than 88 of the organizations manage more than six clusters and you can think about",
    "start": "250799",
    "end": "257040"
  },
  {
    "text": "QA staging and production that's going to be just three of them however this multiplies massively especially if you",
    "start": "257040",
    "end": "263100"
  },
  {
    "text": "have a multi-region or multi-cluster strategy and it's very important for us to introduce automation when it comes to",
    "start": "263100",
    "end": "269400"
  },
  {
    "text": "deployment of our infrastructure however the government Community around kubernetes has been extremely beneficial",
    "start": "269400",
    "end": "275460"
  },
  {
    "text": "for it because over time multiple tools were built around it to extend its functionalities and we're talking about",
    "start": "275460",
    "end": "281100"
  },
  {
    "text": "integrating different runtimes storage observability metrics to satisfy your software needs and this created what",
    "start": "281100",
    "end": "287940"
  },
  {
    "text": "today we know as the cloud native landscape which resides under the cncf umbrella and this is the landscape that",
    "start": "287940",
    "end": "293580"
  },
  {
    "text": "we as the TOC try to provide a technical perspective and vision form",
    "start": "293580",
    "end": "299000"
  },
  {
    "text": "now at this stage we know that kubernetes is a very plugable and extensive system",
    "start": "299580",
    "end": "305280"
  },
  {
    "text": "however at the same time with all of this still being deployed around it we had multiple bootstrap tools being",
    "start": "305280",
    "end": "310440"
  },
  {
    "text": "developed at the same time so we're talking about Cube ADM tectonic installer if you go back to the corewest",
    "start": "310440",
    "end": "315900"
  },
  {
    "text": "house Cube spray cops and many more however if you look at all of these tools it's very difficult to find a",
    "start": "315900",
    "end": "321780"
  },
  {
    "text": "common denominator what it actually means is that if I'm using one tool to deploy my infrastructure to Azure it's",
    "start": "321780",
    "end": "327539"
  },
  {
    "text": "going to be very difficult or pretty much difficult to use the same tool to deploy our infrastructure to gcp for",
    "start": "327539",
    "end": "332940"
  },
  {
    "text": "example usually we'll have to introduce a new tool and this is not sustainable especially if you pursue a multi-cloud",
    "start": "332940",
    "end": "339060"
  },
  {
    "text": "strategy this is why we had cluster API entering the space and solving this problem",
    "start": "339060",
    "end": "344720"
  },
  {
    "text": "cluster API pretty much is a set of declarative apis for cluster creation management and deletion across multiple",
    "start": "344720",
    "end": "351360"
  },
  {
    "text": "Cloud providers so it provides this one unique interface or one set of standards that you can use to deploy your",
    "start": "351360",
    "end": "357300"
  },
  {
    "text": "infrastructure anywhere now I want to refer to Cluster API refer",
    "start": "357300",
    "end": "362400"
  },
  {
    "text": "to C cluster lifecycle which had its first initial released in April 2019. since then it had multiple releases and",
    "start": "362400",
    "end": "368699"
  },
  {
    "text": "currently it's in a V1 beta1 endpoint which was a very big milestone for the team this year and I mentioned that it",
    "start": "368699",
    "end": "375539"
  },
  {
    "text": "integrates with multiple Cloud providers and currently There are 16 of them actively collaborating with cluster API",
    "start": "375539",
    "end": "381479"
  },
  {
    "text": "of course we're going to have support for major Cloud providers such as gcp AWS engineer however more importantly",
    "start": "381479",
    "end": "388080"
  },
  {
    "text": "we're going to have support for Chinese providers such as Alibaba cloud tencent and by the cloud and if you had to",
    "start": "388080",
    "end": "393900"
  },
  {
    "text": "deploy your infrastructure to China you would know that it's a very challenging task because usually you have to use the",
    "start": "393900",
    "end": "399240"
  },
  {
    "text": "set of tooling available in that region to ensure the availability of your clusters now when it comes to",
    "start": "399240",
    "end": "404280"
  },
  {
    "text": "provisioning with cluster API at least you have the same manner of bootstrapping your clusters across the",
    "start": "404280",
    "end": "409979"
  },
  {
    "text": "Great firewall and lately we have new initiatives to use cluster API to deploy on bare metal",
    "start": "409979",
    "end": "417000"
  },
  {
    "text": "and this is an initiative led by metal free packet and of course Tinkerbell as well",
    "start": "417000",
    "end": "423180"
  },
  {
    "text": "now I've seen that some of you are new to Cluster API so I'm just very quickly going to introduce the introduction to make sure that everyone is following the",
    "start": "423180",
    "end": "429479"
  },
  {
    "text": "story as well supposedly that you would like to deploy a couple of clusters in different regions different Cloud providers",
    "start": "429479",
    "end": "436139"
  },
  {
    "text": "the first thing we need is a kubernetes cluster we need a management cluster and this is something that I call a Cube's",
    "start": "436139",
    "end": "441360"
  },
  {
    "text": "option you need to bring this clustering to deploy more of them however for testing purposes you can use kind to",
    "start": "441360",
    "end": "448199"
  },
  {
    "text": "deploy management cluster and kind is just a dockerized version of your kubernetes if you want to use cluster",
    "start": "448199",
    "end": "453300"
  },
  {
    "text": "API in production it's recommended to use a fully fledged cluster and this is because it comes with a more sophisticated failover mechanism",
    "start": "453300",
    "end": "460259"
  },
  {
    "text": "now once you have your management cluster you'll require the dependencies installed on top of it and these are usually the controllers",
    "start": "460259",
    "end": "466380"
  },
  {
    "text": "and there are three sets of controllers we need to take care of cluster API crds or custom resource definitions",
    "start": "466380",
    "end": "472280"
  },
  {
    "text": "infrastructure provider and bootstrap provider now the first controller is going to be",
    "start": "472280",
    "end": "477660"
  },
  {
    "text": "the clustered by crds pretty much we need a controller to make sure that we can create reconcile new crds introduced",
    "start": "477660",
    "end": "483599"
  },
  {
    "text": "by cluster API and those have five new custom resource definitions that I'm going to introduce later on as well",
    "start": "483599",
    "end": "489000"
  },
  {
    "text": "the second set of controllers is going to be the bootstrap provider and this is the component that translates the yaml",
    "start": "489000",
    "end": "494220"
  },
  {
    "text": "configuration into Cloud init script and it will make sure to attach an instance from a cloud provider to the cluster as",
    "start": "494220",
    "end": "500280"
  },
  {
    "text": "a node now currently this capability is provisioned by qbadm Dallas and quite",
    "start": "500280",
    "end": "505560"
  },
  {
    "text": "recently AWS cks as well and the first component we need to take",
    "start": "505560",
    "end": "510720"
  },
  {
    "text": "care of is going to be the infrastructure provider and this is the particle that interacts with provider apis and actually creates",
    "start": "510720",
    "end": "517620"
  },
  {
    "text": "the resources such as instances vpcs subnets security groups and many more",
    "start": "517620",
    "end": "522779"
  },
  {
    "text": "now if you'd like to provision clusters in multiple Cloud providers you will need the controller for each of them so",
    "start": "522779",
    "end": "528540"
  },
  {
    "text": "if you want to deploy to gcp you want the controller for gcp infrastructure provider and if you want to use",
    "start": "528540",
    "end": "534120"
  },
  {
    "text": "Tinkerbell you need that provider as well so it's pretty much the relationship is one to many here",
    "start": "534120",
    "end": "540180"
  },
  {
    "text": "now once we have our dependencies or all of our controllers up and running we will be able to deploy our Target",
    "start": "540180",
    "end": "545580"
  },
  {
    "text": "clusters and the target clusters are the ones we deliver to our application teams to install their service on top of and",
    "start": "545580",
    "end": "553080"
  },
  {
    "text": "these are going to be the Clusters that your customers will interact with while consuming your services as well",
    "start": "553080",
    "end": "559399"
  },
  {
    "text": "now a very important concept that cluster repair brings into the picture is clustered as a resource you'll be",
    "start": "559560",
    "end": "566700"
  },
  {
    "text": "able to Define your infrastructure's code using Yahoo manifests and this is done using the five customer Source",
    "start": "566700",
    "end": "572820"
  },
  {
    "text": "definitions that I'm going to mention now the First Resource you need to take care of is going to be a cluster resource",
    "start": "572820",
    "end": "579060"
  },
  {
    "text": "and this pretty much takes care of major networking components for your cluster we can specify the subnets for your pods",
    "start": "579060",
    "end": "585480"
  },
  {
    "text": "and services or you can specify DNA suffix by default with every single cluster you",
    "start": "585480",
    "end": "592320"
  },
  {
    "text": "have a control plane resource associated with it and the control plane resource pretty much programmatically manages a",
    "start": "592320",
    "end": "598440"
  },
  {
    "text": "set of machines that have the control plane label or the control plane components installed on top of it",
    "start": "598440",
    "end": "604980"
  },
  {
    "text": "and machine here very similar to an instance pretty much you can specify the version of kubernetes instance type any",
    "start": "604980",
    "end": "611279"
  },
  {
    "text": "networking and security controls that you would like to attach to your control plane now this is a vanilla setup for cluster",
    "start": "611279",
    "end": "617399"
  },
  {
    "text": "API by default you just have a couple of machines that have the control plane label if you want to deploy any",
    "start": "617399",
    "end": "624720"
  },
  {
    "text": "workloads you'll require data plane and this in cluster API is translated or is managed through a machine deployment",
    "start": "624720",
    "end": "631920"
  },
  {
    "text": "so machine deployment with anyone familiar with kubernetes and I hope you are machine deployment is very similar",
    "start": "631920",
    "end": "637200"
  },
  {
    "text": "to deployment it will pretty much make sure to roll out different strategies between machine set resources",
    "start": "637200",
    "end": "642540"
  },
  {
    "text": "machine said very similar to replica set it will ensure that we have an amount of machine resources up and running at all",
    "start": "642540",
    "end": "648540"
  },
  {
    "text": "time and machine here again this is an instance we can specify the version of kubernetes instance type and so forth",
    "start": "648540",
    "end": "654660"
  },
  {
    "text": "however the label for this particular nodes are going to be working out",
    "start": "654660",
    "end": "659820"
  },
  {
    "text": "now I mentioned that cluster API introduces these cluster as a resource concept so we can use all of these",
    "start": "659820",
    "end": "666120"
  },
  {
    "text": "custom resource definitions here to say that we want a cluster with 10 nodes three of them being the control plane",
    "start": "666120",
    "end": "671519"
  },
  {
    "text": "seven of them being in the data plane here we say where we want to deploy this infrastructure infrastructure for",
    "start": "671519",
    "end": "677160"
  },
  {
    "text": "example to Azure here where we say all of the networking and security controls",
    "start": "677160",
    "end": "682380"
  },
  {
    "text": "that you would like to have for your cluster so this is going to be your infrastructure's code instead of using for example Turf phone and ansible is",
    "start": "682380",
    "end": "688980"
  },
  {
    "text": "going to be ammo you're in the kubernetes world is going to be ammo",
    "start": "688980",
    "end": "694079"
  },
  {
    "text": "now just to kind of make it a bit more digestible to see how you can use this infrastructure's code I have written",
    "start": "694079",
    "end": "701459"
  },
  {
    "text": "here or showcased here an example of a cluster resource for AWS so we have here a cluster resource with the name demo",
    "start": "701459",
    "end": "708540"
  },
  {
    "text": "cluster in the specs section which is a slash 16 subnet for our pods and towards the end you can see that we have a",
    "start": "708540",
    "end": "714540"
  },
  {
    "text": "control plane reference this is going to be by default however I would like to draw your attention to the infrastructure",
    "start": "714540",
    "end": "720360"
  },
  {
    "text": "reference here's where we say that we want this cluster to be deployed to AWS",
    "start": "720360",
    "end": "725880"
  },
  {
    "text": "and by default this is going to pick up all of the configurations that we've configured well all the parameters that",
    "start": "725880",
    "end": "731579"
  },
  {
    "text": "we have been have configured for AWS in this case we say that our cluster should be deployed in EU Central 1 and we want",
    "start": "731579",
    "end": "738540"
  },
  {
    "text": "to attach a default SSH key name with the name default however",
    "start": "738540",
    "end": "744420"
  },
  {
    "text": "very important here if we want to deploy the same cluster to gcp these are going to be the changes",
    "start": "744420",
    "end": "749640"
  },
  {
    "text": "required now the cluster resource pretty much stays similar however you just need to",
    "start": "749640",
    "end": "754680"
  },
  {
    "text": "change your infrastructure reference now it's going to be a gcp cluster and this is going to pull all the all of the configuration we defined for gcp the",
    "start": "754680",
    "end": "762180"
  },
  {
    "text": "region naming convention is a bit different so we deploy it to Europe West free we have the concept of a project",
    "start": "762180",
    "end": "768240"
  },
  {
    "text": "within gcp so we attach our cluster to a project called CPI and if you'd like to choose a network we can do so by",
    "start": "768240",
    "end": "774779"
  },
  {
    "text": "specifying its full name in this case default this API now if you want to deploy a cluster",
    "start": "774779",
    "end": "780360"
  },
  {
    "text": "using Tinkerbell these are going to be the changes required I think get a gist we can have this we already have this",
    "start": "780360",
    "end": "785820"
  },
  {
    "text": "set of standards and interfaces that we can use to deploy our infrastructure anywhere in a similar manner so here for",
    "start": "785820",
    "end": "792360"
  },
  {
    "text": "Tinkerbell for example I've chosen to parametrize the image repository which can be a public or a private registry to",
    "start": "792360",
    "end": "799980"
  },
  {
    "text": "pull our images to be installed on the operating system",
    "start": "799980",
    "end": "804980"
  },
  {
    "text": "now this was the Preamble for cluster API so far we can deploy our infrastructure anywhere or any cloud",
    "start": "805200",
    "end": "812100"
  },
  {
    "text": "provider but more importantly we can do so in a unified manner we have standards that we can reuse",
    "start": "812100",
    "end": "818160"
  },
  {
    "text": "pretty much across all of these vendors however what happens if as an",
    "start": "818160",
    "end": "823620"
  },
  {
    "text": "organization you do not want to deploy your infrastructure to a cloud provider what happens if you want to fully have a",
    "start": "823620",
    "end": "829440"
  },
  {
    "text": "bare metal provisioning for your infrastructure well in this case we have Tinkerbell that enters the picture now",
    "start": "829440",
    "end": "835860"
  },
  {
    "text": "Tinkerbell is an engine for provisioning your metal anywhere not just kubernetes",
    "start": "835860",
    "end": "841279"
  },
  {
    "text": "kubernetes is just a subset of that and we're going to see how it actually works Tinkerbell was developed by the equinix",
    "start": "841279",
    "end": "847980"
  },
  {
    "text": "metal team in 2019 and it was donated to cncf at the sandbox project in 2020.",
    "start": "847980",
    "end": "853740"
  },
  {
    "text": "now there is a thing that I would like to kind of highlight about some books projects this means it's still",
    "start": "853740",
    "end": "858899"
  },
  {
    "text": "Greenfield and it still requires a lot of diversification when it comes to maintainership and contributions as such",
    "start": "858899",
    "end": "865139"
  },
  {
    "text": "if you have any use for bare metal or you should like to improve the open source ecosystem when it comes to Bare",
    "start": "865139",
    "end": "871260"
  },
  {
    "text": "Metal I definitely recommend you to go to Tinkerbell and contribute adopt provide feedback contribute again",
    "start": "871260",
    "end": "876899"
  },
  {
    "text": "contribution is not just code feedback is very essential as well and the mission that actual Tinkerbell",
    "start": "876899",
    "end": "883500"
  },
  {
    "text": "has all the way through is the provision for metal across public cloud",
    "start": "883500",
    "end": "889079"
  },
  {
    "text": "VPS will actually improve excuse me data centers and age devices but more",
    "start": "889079",
    "end": "895199"
  },
  {
    "text": "importantly it tries to do it so automatically and to simplify the steps to do that",
    "start": "895199",
    "end": "900959"
  },
  {
    "text": "now let's look at how Tinkerbell works if you'd like to provision a bare metal using Tinkerbell there are three sets of",
    "start": "900959",
    "end": "906360"
  },
  {
    "text": "configuration then you need to take care of Hardware template and workflow",
    "start": "906360",
    "end": "912600"
  },
  {
    "text": "the hardware pretty much specifies your inventory you need to make think server aware of what think or service you have",
    "start": "912600",
    "end": "919380"
  },
  {
    "text": "available so for example you have 10 Raspberry Pi machines and you need to enumerate all of those and this can be",
    "start": "919380",
    "end": "924720"
  },
  {
    "text": "uniquely identified using the mac and IP address the next thing we're going to need is going to be a template and a template is",
    "start": "924720",
    "end": "931260"
  },
  {
    "text": "just a set of actions that you would like to perform on top of your machine think about installing an operating",
    "start": "931260",
    "end": "936540"
  },
  {
    "text": "system any dependencies middleware or an application so by the end you have a server in the state that you wanted",
    "start": "936540",
    "end": "944160"
  },
  {
    "text": "and workflow pretty much attaches a hard work to a template so this is where you",
    "start": "944160",
    "end": "949199"
  },
  {
    "text": "actually orchestrate things so if you have 10 Raspberry Pi machines you can say that on five of them I want to",
    "start": "949199",
    "end": "954839"
  },
  {
    "text": "install Windows for example in their respective dependencies and on the other five I want to install Mac OS and their",
    "start": "954839",
    "end": "960360"
  },
  {
    "text": "respective dependencies so here is for the actual orchestrate how you want to deploy and manage your bare metal",
    "start": "960360",
    "end": "966120"
  },
  {
    "text": "now once we have all of these three sets of configuration we'll be able to use the tingcli to send it to the think",
    "start": "966120",
    "end": "972000"
  },
  {
    "text": "server Ting server should be pretty much up and running somewhere within your environment or locally if you're doing a",
    "start": "972000",
    "end": "978000"
  },
  {
    "text": "demo but by the end of it you're going to take the hardware the available actions and one by one you're going to",
    "start": "978000",
    "end": "984300"
  },
  {
    "text": "perform all the actions specified so by the end you should have a server or a VM in the production state that you wanted",
    "start": "984300",
    "end": "992279"
  },
  {
    "text": "now as I mentioned with Tinkerbell you have bare metal provisioning anywhere not just kubernetes so the",
    "start": "992279",
    "end": "999060"
  },
  {
    "text": "question is the following what happens if I want to deploy a cluster on bare",
    "start": "999060",
    "end": "1004339"
  },
  {
    "text": "metal well here's where we bring the cluster API and Tinkerbell Association together and this is going to be crowned",
    "start": "1004339",
    "end": "1010339"
  },
  {
    "text": "by the kpt or cluster API provider for Tinkerbell so let's see how we can deploy our",
    "start": "1010339",
    "end": "1017120"
  },
  {
    "text": "infrastructure our kubernetes cluster using drinkable and cluster API so here I'm going to look at free sense of",
    "start": "1017120",
    "end": "1022519"
  },
  {
    "text": "configurations one from the Tinkerbell side one from the management cluster and the result is going to be our Target",
    "start": "1022519",
    "end": "1027740"
  },
  {
    "text": "cluster so from the Tinkerbell side what we need is a set of our Hardware we still need",
    "start": "1027740",
    "end": "1033798"
  },
  {
    "text": "our inventory for example we have those 10 Raspberry Pi machines the next thing we're going to need is",
    "start": "1033799",
    "end": "1039918"
  },
  {
    "text": "the Tinkerbell server as well we need this to be upper running and be aware of our hardware and be able to connect to",
    "start": "1039919",
    "end": "1045678"
  },
  {
    "text": "our service as well now going back to the management cluster this is going to be a recap of cluster",
    "start": "1045679",
    "end": "1051380"
  },
  {
    "text": "API on the management cluster we need those three dependencies free controller managers on top of it so we're going to",
    "start": "1051380",
    "end": "1057320"
  },
  {
    "text": "have the cluster API crd you're going to have a bootstrap provider but our infrastructure provider is going to be Tinkerbell so kpt cluster API provider",
    "start": "1057320",
    "end": "1065240"
  },
  {
    "text": "for Tinkerbell as well on the management cluster we need our infrastructures code we need the definition of our infrastructure so",
    "start": "1065240",
    "end": "1072440"
  },
  {
    "text": "for example we want a cluster with seven nodes supposedly three of them being in the control plane four of them being in",
    "start": "1072440",
    "end": "1078980"
  },
  {
    "text": "the data plane in addition to all of that however we have a hardware yaml as well because if",
    "start": "1078980",
    "end": "1084740"
  },
  {
    "text": "we have 10 Raspberry Pi machines supposedly that King service aware of you want to maybe use only seven of them",
    "start": "1084740",
    "end": "1090679"
  },
  {
    "text": "to be part of the kubernetes cluster so you need to specify from these machines what's available for class JPEG to use",
    "start": "1090679",
    "end": "1096799"
  },
  {
    "text": "to bootstrap your cluster on top of it now this is the preamble we need on the",
    "start": "1096799",
    "end": "1101840"
  },
  {
    "text": "management cluster the best thing about Tinkerbell or the kpt provider it comes",
    "start": "1101840",
    "end": "1107419"
  },
  {
    "text": "with a predefined set of templates and workflow so you don't need to define those actions to bootstrap kubernetes",
    "start": "1107419",
    "end": "1113780"
  },
  {
    "text": "these are already available so for example if you want a new machine we have already all of the actions",
    "start": "1113780",
    "end": "1119539"
  },
  {
    "text": "defined such as the install for example a Linux operating system you can install any networking cubelet SSH certificate",
    "start": "1119539",
    "end": "1127400"
  },
  {
    "text": "as well you install all the certificates on top of it so by the end of it the machine is going to be attached to the",
    "start": "1127400",
    "end": "1133100"
  },
  {
    "text": "cluster as a node and this can be done repetitively up to the point it satisfies the yaml or the",
    "start": "1133100",
    "end": "1139820"
  },
  {
    "text": "infrastructures code that you defined cool let's take a breaver here",
    "start": "1139820",
    "end": "1146660"
  },
  {
    "text": "so far we can see that we can deploy bare metal kubernetes anywhere however I would like to draw your",
    "start": "1146660",
    "end": "1152419"
  },
  {
    "text": "attention towards the beginning of the presentation where I mentioned that 88 of the companies are using more than six",
    "start": "1152419",
    "end": "1157760"
  },
  {
    "text": "clusters or managing more than six clusters it is very steep or a very steep learning curve to deploy to bring this",
    "start": "1157760",
    "end": "1164120"
  },
  {
    "text": "once but once you do it you can repeat that throughout multiple environments but more importantly you will not",
    "start": "1164120",
    "end": "1169340"
  },
  {
    "text": "ideally you'll not have separate configurations for your clusters you would introduce some templating and",
    "start": "1169340",
    "end": "1174860"
  },
  {
    "text": "Automation in all of this process and here's where we can actually use gate UPS as well since cluster API",
    "start": "1174860",
    "end": "1181700"
  },
  {
    "text": "introduces yaml manifest to Define your infrastructures code we can use githubs",
    "start": "1181700",
    "end": "1187880"
  },
  {
    "text": "now there was a very picture of hands around githubs I was still very quickly like to introduce it as a principle githubs is",
    "start": "1187880",
    "end": "1195380"
  },
  {
    "text": "pretty much referring to git repositories to define the desired state of your application and in our case our",
    "start": "1195380",
    "end": "1201320"
  },
  {
    "text": "infrastructure what it actually means is by default you're going to have a PR based rollout",
    "start": "1201320",
    "end": "1206720"
  },
  {
    "text": "that means that the Delta between a local environment and production is just one PR way",
    "start": "1206720",
    "end": "1212299"
  },
  {
    "text": "another important thing about githubs is that we have automatic reconciliation that means that we have this tool",
    "start": "1212299",
    "end": "1218179"
  },
  {
    "text": "watching our repository and if new commits are identified these are going to be extrapolated and applied to the",
    "start": "1218179",
    "end": "1223700"
  },
  {
    "text": "Clusters straight away but more importantly we're going to have a version state of our cluster pretty",
    "start": "1223700",
    "end": "1229220"
  },
  {
    "text": "much we have this different historical data points that we can refer to very easily so for example if you are in an",
    "start": "1229220",
    "end": "1234620"
  },
  {
    "text": "incident you can very easily revert to a green State and a known State just using a couple of git commands",
    "start": "1234620",
    "end": "1241100"
  },
  {
    "text": "now looking into the cloud native ecosystem the github's principle is very heavily",
    "start": "1241100",
    "end": "1246740"
  },
  {
    "text": "um covered by tools such as flux and argosity both of which are currently incubating cncf projects however both of",
    "start": "1246740",
    "end": "1253820"
  },
  {
    "text": "them applying for graduation as well so hopefully very soon we're going to see them with a new status showcasing their",
    "start": "1253820",
    "end": "1259700"
  },
  {
    "text": "maturity in audience adoption and feature development as well",
    "start": "1259700",
    "end": "1265899"
  },
  {
    "text": "however let's see where exactly we can introduce githubs in our infrastructure provisioning",
    "start": "1266419",
    "end": "1271460"
  },
  {
    "text": "for now I would like to make obstruction of Tinkerbell because cluster API standardized actually makes that very",
    "start": "1271460",
    "end": "1278299"
  },
  {
    "text": "standard for us to deploy so I'm just going to focus on how can you use cluster API and githubs and where",
    "start": "1278299",
    "end": "1284059"
  },
  {
    "text": "exactly automation can be introduced in all of this cycle so going back to our management cluster",
    "start": "1284059",
    "end": "1289220"
  },
  {
    "text": "what we need is our controllers so we have those three controllers that we need in addition to that we're going to",
    "start": "1289220",
    "end": "1295100"
  },
  {
    "text": "have our infrastructures code these are going to be yaml manifests that we can store in GitHub",
    "start": "1295100",
    "end": "1300919"
  },
  {
    "text": "now if you have GitHub by default we can use an arbor City or Arbor city or a github's tool so in this case I've",
    "start": "1300919",
    "end": "1307580"
  },
  {
    "text": "chosen to install Argo CD on the management cluster so now any changes that we introduced to",
    "start": "1307580",
    "end": "1313280"
  },
  {
    "text": "our git repository any new commits are going to be identified by Argo and applied to the Target cluster straight",
    "start": "1313280",
    "end": "1319940"
  },
  {
    "text": "away so all of the results are going to be happening in our Target cluster now very optional this is a very",
    "start": "1319940",
    "end": "1326240"
  },
  {
    "text": "optional component that you can introduce this is part of the solutions but again you're not going to manage just one cluster you're going to manage",
    "start": "1326240",
    "end": "1332600"
  },
  {
    "text": "multiple clusters so it's very important to introduce some templating within your manifest in this case I've chosen to use help as",
    "start": "1332600",
    "end": "1340400"
  },
  {
    "text": "an example so here I'm using help to parametrize three variables just for the demo purposes such as the version of",
    "start": "1340400",
    "end": "1346700"
  },
  {
    "text": "kubernetes which is going to be 124 the amount of control pin nodes and amount of replica worker nodes as well",
    "start": "1346700",
    "end": "1354320"
  },
  {
    "text": "now in this instance performance I'm introducing a Helm chart Argo City is going to watch the helm chart for any",
    "start": "1354320",
    "end": "1359720"
  },
  {
    "text": "changes once these are applied or committed to the GitHub repository argosity is going to pick them up apply",
    "start": "1359720",
    "end": "1365900"
  },
  {
    "text": "them to the management cluster with well the provider is going to pick up all of",
    "start": "1365900",
    "end": "1370940"
  },
  {
    "text": "the changes and apply changes to our Target clusters we are going to set up this in action",
    "start": "1370940",
    "end": "1376340"
  },
  {
    "text": "and I think this is the the time for a live demo now going back what I have in the setup",
    "start": "1376340",
    "end": "1383299"
  },
  {
    "text": "is a management cluster and the target cluster over the provisioned the thing is I am provisioning you this using AWS",
    "start": "1383299",
    "end": "1389480"
  },
  {
    "text": "just for the ease of it I would love to do this on a couple of bare metal servers however traveling with a bit of",
    "start": "1389480",
    "end": "1395480"
  },
  {
    "text": "Raspberry Pi is across the borders it's a bit more challenging so what I'm going to do I'm just going",
    "start": "1395480",
    "end": "1400820"
  },
  {
    "text": "to use a iws just to kind of simulate the compute but more importantly we'll be able to use the same process using",
    "start": "1400820",
    "end": "1408500"
  },
  {
    "text": "Tinkerbell as well so what I have here is a management classroom a local machine using kind I have argosity",
    "start": "1408500",
    "end": "1414380"
  },
  {
    "text": "installed I have class 3pi controllers already installed up and running as well I have a Target cluster already",
    "start": "1414380",
    "end": "1419539"
  },
  {
    "text": "provision this is AWS I've provisioned it beforehand mainly because it takes",
    "start": "1419539",
    "end": "1424580"
  },
  {
    "text": "around five minutes to provision the VPC so I haven't done this Fully live but we're gonna scale our cluster and this",
    "start": "1424580",
    "end": "1430700"
  },
  {
    "text": "is going to be a live demo now another disclaimer I would like to introduce here is that my computer had",
    "start": "1430700",
    "end": "1437659"
  },
  {
    "text": "hard reset just before the talk so I hope that everything is going to be",
    "start": "1437659",
    "end": "1443659"
  },
  {
    "text": "up and running but if it's not I have a recording of it but hopefully I'm not going to use it",
    "start": "1443659",
    "end": "1449120"
  },
  {
    "text": "so can everyone see what's going on I've made it a bit bigger however I'm gonna go for all of the lines again can",
    "start": "1449120",
    "end": "1455179"
  },
  {
    "text": "everyone see can I get some thumbs up okay amazing so what I have here is pretty much all of my pods within my",
    "start": "1455179",
    "end": "1462200"
  },
  {
    "text": "management cluster so this is where I'm install cluster API",
    "start": "1462200",
    "end": "1467299"
  },
  {
    "text": "now Kappa here is going to be standing for cluster API provider for AWS since I'm using AWS as an example it's going",
    "start": "1467299",
    "end": "1474200"
  },
  {
    "text": "to be the Kappa provider instead of kpt that we've mentioned before the bootstrapping provider is going to",
    "start": "1474200",
    "end": "1480440"
  },
  {
    "text": "be qidm and here is where it's installed and then we have the cluster API controller to manage all of our crds and",
    "start": "1480440",
    "end": "1487159"
  },
  {
    "text": "we have these are pretty much the free sets of controllers that we require as well I have argosity up and running",
    "start": "1487159",
    "end": "1494059"
  },
  {
    "text": "so that's going to be the management cluster and everything that I've done can everyone see this one I'm going to go through this as well awesome",
    "start": "1494059",
    "end": "1500900"
  },
  {
    "text": "so here what a provision is a cluster with four nodes three of them being in the control plane one of them being the",
    "start": "1500900",
    "end": "1506299"
  },
  {
    "text": "data plane now on the top side you can see the management cluster so you can see our machine resources so so this is a crd",
    "start": "1506299",
    "end": "1513559"
  },
  {
    "text": "introduced by cluster API on the bottom side you can see the target cluster so this is the this is the Target or the",
    "start": "1513559",
    "end": "1520100"
  },
  {
    "text": "cluster that we have provisioned using cluster API and as you can see here we have free control plane machines so",
    "start": "1520100",
    "end": "1527299"
  },
  {
    "text": "we're going to have the control plane in the name and empty here stat stands for machine deployment so machine deployment",
    "start": "1527299",
    "end": "1533240"
  },
  {
    "text": "is going to be our data plane and the thing is we can see the same amount of nodes with the same rows",
    "start": "1533240",
    "end": "1539480"
  },
  {
    "text": "within our Target cluster three of them let me highlight properly three of them being in the control plane and one of",
    "start": "1539480",
    "end": "1546320"
  },
  {
    "text": "them being in the data plane now all of these infrastructure is managed using a Helm",
    "start": "1546320",
    "end": "1553159"
  },
  {
    "text": "chart and argosidine so I would like to Showcase my Helm chart",
    "start": "1553159",
    "end": "1559039"
  },
  {
    "text": "this is pretty much the input files that we're going to use to parametrize our manifest so very similar to us on the",
    "start": "1559039",
    "end": "1565100"
  },
  {
    "text": "slides I've chosen to parametrize the version of kubernetes and the amount of replica notes of our control plane and",
    "start": "1565100",
    "end": "1570500"
  },
  {
    "text": "work plane and worker nodes now for anyone new to hell and how it",
    "start": "1570500",
    "end": "1576980"
  },
  {
    "text": "actually reconstructs the Manifest I would like to Showcase an example here's for example a machine deployment",
    "start": "1576980",
    "end": "1582559"
  },
  {
    "text": "resource that manages our data plane and this is where we actually pull the",
    "start": "1582559",
    "end": "1587960"
  },
  {
    "text": "values from the helm chart for the amount of replicas so this based on the input file that we had before of values",
    "start": "1587960",
    "end": "1593720"
  },
  {
    "text": "file that we had before is going to be one replica and the version of kubernetes here is going to be 124.0",
    "start": "1593720",
    "end": "1601460"
  },
  {
    "text": "and another thing that I'd like to Showcase just kind of Crown the moment and make sure that everything everything is consistent this",
    "start": "1601460",
    "end": "1609080"
  },
  {
    "text": "is the cluster resource that I've shown on the slides as well for AWS here is where I specified the slash 16 subnet",
    "start": "1609080",
    "end": "1616039"
  },
  {
    "text": "for our pods and this is our AWS infrastructure reference as well so all",
    "start": "1616039",
    "end": "1621080"
  },
  {
    "text": "of this is managed using the helm chart now I have article CD already installed and we can see this is going to be very",
    "start": "1621080",
    "end": "1627799"
  },
  {
    "text": "overwhelming but this is how all of these components all of these custom resource definitions are kind of",
    "start": "1627799",
    "end": "1633700"
  },
  {
    "text": "showcasing or providing A visual representation of our classroom",
    "start": "1633700",
    "end": "1639140"
  },
  {
    "text": "now an important thing I would like to do is to scale or to provide or introduce changes to our infrastructure",
    "start": "1639140",
    "end": "1644900"
  },
  {
    "text": "and for that I would actually like to increase the amount of Control Data plane nodes and to do so the only",
    "start": "1644900",
    "end": "1651080"
  },
  {
    "text": "changes I need to do is going to be the helm chart so I'm just going to go to the values that demo file",
    "start": "1651080",
    "end": "1656539"
  },
  {
    "text": "and instead of one replicas I would like to have for instead now since this is good I just need to",
    "start": "1656539",
    "end": "1663860"
  },
  {
    "text": "use a git command to commit our changes and push them to the main branch so I'm going to use a git",
    "start": "1663860",
    "end": "1670480"
  },
  {
    "text": "let's see oh oh okay",
    "start": "1670760",
    "end": "1676520"
  },
  {
    "text": "it's still let's see",
    "start": "1676520",
    "end": "1681760"
  },
  {
    "text": "here it is and I'm gonna put a meaningful demo",
    "start": "1684440",
    "end": "1689840"
  },
  {
    "text": "message for our commit hopefully my internet is good enough",
    "start": "1689840",
    "end": "1696320"
  },
  {
    "text": "to make this happen yes and then I'm going to use a git push I'm just going to push straight away to",
    "start": "1696320",
    "end": "1701960"
  },
  {
    "text": "the main branch did this happen awesome now if you'd not use for example Argo CD",
    "start": "1701960",
    "end": "1709520"
  },
  {
    "text": "you'd have to apply these changes manually so you'd have to use a cube apply or cubic or cube still cubesatel",
    "start": "1709520",
    "end": "1714740"
  },
  {
    "text": "apply or keeps the tail patch command however with Argo CD we don't need to do that it's actually going to take care of that what we need to do we go to the",
    "start": "1714740",
    "end": "1721880"
  },
  {
    "text": "Argo CD view let me make this a bit bigger so usually argosity is going to watch",
    "start": "1721880",
    "end": "1727700"
  },
  {
    "text": "the repository and refresh it every single couple of minutes because we don't have that we just hit the free fresh which means it's going to look at",
    "start": "1727700",
    "end": "1733700"
  },
  {
    "text": "the repository and see if there's any new commits we already can see that we are out of sync and we can even verify",
    "start": "1733700",
    "end": "1739520"
  },
  {
    "text": "that by clicking on the commit tag as well we can see our changes we modified",
    "start": "1739520",
    "end": "1744679"
  },
  {
    "text": "our infrastructure from one node to four nodes now with argosity we can have automatic",
    "start": "1744679",
    "end": "1750380"
  },
  {
    "text": "reconciliation so all of these changes can be automatically applied to our infrastructure once they identified however I've chosen a manual strategy",
    "start": "1750380",
    "end": "1757880"
  },
  {
    "text": "just to review these changes and have an impact for for the demo as well so all I need to do is to hit the sync button",
    "start": "1757880",
    "end": "1765260"
  },
  {
    "text": "and synchronize and you can see already that ideally we should have this is like a machine resource within Argo City which is a",
    "start": "1765260",
    "end": "1772460"
  },
  {
    "text": "very crumbled visual presentation but we can go back to our terminal and we can",
    "start": "1772460",
    "end": "1777679"
  },
  {
    "text": "see that on our management cluster we already have free machine resources that",
    "start": "1777679",
    "end": "1783140"
  },
  {
    "text": "are our spinned by the end of it ideally we should see three new machines that are part of our Target cluster as well",
    "start": "1783140",
    "end": "1790220"
  },
  {
    "text": "now another thing we can do here is actually go to our AWS",
    "start": "1790220",
    "end": "1795620"
  },
  {
    "text": "console and actually see that we have let me just make this bigger and get",
    "start": "1795620",
    "end": "1801799"
  },
  {
    "text": "this out of the way so we already see that we have three instances initializing usually this",
    "start": "1801799",
    "end": "1807260"
  },
  {
    "text": "process takes literally less than one minute so hopefully if we are a bit more patient we already",
    "start": "1807260",
    "end": "1813320"
  },
  {
    "text": "see that the instance is there here it is this is one note that we have",
    "start": "1813320",
    "end": "1820820"
  },
  {
    "text": "I already installed the cni installed psyllium in our Target cluster so we should see all of the nodes in a ready",
    "start": "1820820",
    "end": "1826279"
  },
  {
    "text": "State as well so if we wait for maybe two more seconds ideally we should see it",
    "start": "1826279",
    "end": "1833419"
  },
  {
    "text": "all up and running shall we wait for it or shall go back to",
    "start": "1833419",
    "end": "1838640"
  },
  {
    "text": "the slides it's happening it's yeah maybe",
    "start": "1838640",
    "end": "1846340"
  },
  {
    "text": "yes here it is yay",
    "start": "1846860",
    "end": "1850720"
  },
  {
    "text": "nice and the thing is all of this has been done we can do this completely hands off so once you the only thing you",
    "start": "1854960",
    "end": "1861380"
  },
  {
    "text": "need to do is to apply your git git command or to push your git command and this will pretty much affect your",
    "start": "1861380",
    "end": "1868100"
  },
  {
    "text": "infrastructure apply changes to your infrastructure now going back",
    "start": "1868100",
    "end": "1874600"
  },
  {
    "text": "this is the recorded demo just in case the same process can be applied or used",
    "start": "1875120",
    "end": "1880760"
  },
  {
    "text": "with Tinkerbell because cluster API deploys our infrastructure in a similar manner irrespective of the cloud",
    "start": "1880760",
    "end": "1886640"
  },
  {
    "text": "provider so we can use the same strategy with Tinkerbell so if you'd like to do that including the GitHub strategy in",
    "start": "1886640",
    "end": "1894260"
  },
  {
    "text": "all of this architecture we're still going to look at three sets of configuration one from the Tinkerbell side one from the management cluster and",
    "start": "1894260",
    "end": "1900559"
  },
  {
    "text": "the result is going to be applied to the Target cluster don't drink up this side again we need our Hardware we still need an",
    "start": "1900559",
    "end": "1906919"
  },
  {
    "text": "enumeration or an inventory of all of the hardware that we have available and we still need the ding server to be",
    "start": "1906919",
    "end": "1912860"
  },
  {
    "text": "up and running and be able to communicate with our Hardware on the management cluster we still need",
    "start": "1912860",
    "end": "1918440"
  },
  {
    "text": "all of our controllers infrastructure reference is going to be a Tinkerbell provider",
    "start": "1918440",
    "end": "1923840"
  },
  {
    "text": "and all of our yaml manifests or all of our infrastructures code in this case is going to be managed using a Helm chart",
    "start": "1923840",
    "end": "1929600"
  },
  {
    "text": "we don't have the you know to actually manage the full manifest ourselves we have helped try to parametrize that but",
    "start": "1929600",
    "end": "1935299"
  },
  {
    "text": "more importantly the helm chart is going to be watched by an Argo CD instance so what happens for example in the demo",
    "start": "1935299",
    "end": "1941840"
  },
  {
    "text": "that I've showcased if you want to provision a new machine what's going to happen you apply the changes to your",
    "start": "1941840",
    "end": "1947000"
  },
  {
    "text": "Helm chart and to actually commit to GitHub Argo CD is going to identify these commits and apply them to the",
    "start": "1947000",
    "end": "1953600"
  },
  {
    "text": "management cluster in the management cluster we have the Tinkerbell server or the Tinkerbell Tinkerbell controller",
    "start": "1953600",
    "end": "1959419"
  },
  {
    "text": "watching any change that we need to apply to our infrastructure if we need the new machine this is going to be",
    "start": "1959419",
    "end": "1964760"
  },
  {
    "text": "identified and we have already all of the templates and workflows provisioned by Tinkerbell so we're going to install",
    "start": "1964760",
    "end": "1970820"
  },
  {
    "text": "a Linux operating system we're going to pretty much install cubelet all of the search so by the end that machine is",
    "start": "1970820",
    "end": "1976580"
  },
  {
    "text": "going to be attached to the cluster as a node and we can do this in a repetitive manner to actually satisfy the desired",
    "start": "1976580",
    "end": "1982760"
  },
  {
    "text": "state that we wanted for infrastructure and just to provide a bird's eye view of",
    "start": "1982760",
    "end": "1988460"
  },
  {
    "text": "all of this intertwinement between the different tools if you want to use or do provision burn metal you're going to use",
    "start": "1988460",
    "end": "1994279"
  },
  {
    "text": "a tinker you're going to look at Tinkerbell if you want to deploy your kubernetes cluster on bare metal you're going to",
    "start": "1994279",
    "end": "2000340"
  },
  {
    "text": "introduce cluster API into the picture if you want to automate the deployment of your infrastructure this is for",
    "start": "2000340",
    "end": "2006460"
  },
  {
    "text": "githubs coming soon to play or a tool such as Argo CD because you have all of your infrastructure as yaml so you can",
    "start": "2006460",
    "end": "2013299"
  },
  {
    "text": "use githubs and in addition to that you can be you're able to manage any applications you have on top of your",
    "start": "2013299",
    "end": "2018940"
  },
  {
    "text": "cluster so this can go a further layer if you choose so and all of this has been possible",
    "start": "2018940",
    "end": "2025120"
  },
  {
    "text": "because of the power of building blocks within the cloud native ecosystem all this intertwinement between these tools",
    "start": "2025120",
    "end": "2030760"
  },
  {
    "text": "is a driving force that even looked into the bare metal provisioning in an automatic declarative and interoperable",
    "start": "2030760",
    "end": "2037960"
  },
  {
    "text": "way now without saying we are hiring so if",
    "start": "2037960",
    "end": "2043600"
  },
  {
    "text": "you'd like to work with my team at Apple or if you'd like to work within the Apple cloud services team please go at",
    "start": "2043600",
    "end": "2049419"
  },
  {
    "text": "jobs.apple.com we'll be able to find roles across Europe and us and if you have any questions in regards to the",
    "start": "2049419",
    "end": "2055060"
  },
  {
    "text": "roles I'm more than happy to help you throughout the process and make it as easy for you to join our team",
    "start": "2055060",
    "end": "2061480"
  },
  {
    "text": "if you have any curiosity about cluster API and githubs and the combination between these two I've written quite a",
    "start": "2061480",
    "end": "2067720"
  },
  {
    "text": "few blogs about this and you can find them on my medium account and if you have any questions I'm more",
    "start": "2067720",
    "end": "2074500"
  },
  {
    "text": "than happy to answer them after this talk this is actually a QR code to the cloud native fundamental scores again",
    "start": "2074500",
    "end": "2080378"
  },
  {
    "text": "it's free you don't have to pay for it but if you know someone who's interested in pursuing a cloud native career I",
    "start": "2080379",
    "end": "2086500"
  },
  {
    "text": "definitely recommend looking at this course as well if you have any questions I'm going to be available on social media such as Twitter and Linkedin",
    "start": "2086500",
    "end": "2094000"
  },
  {
    "text": "this is Katie gamanji and I look forward to seeing how you can shape the cloud native ecosystem thank you and enjoy the",
    "start": "2094000",
    "end": "2099580"
  },
  {
    "text": "rest of the conference",
    "start": "2099580",
    "end": "2102300"
  }
]