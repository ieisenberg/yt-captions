[
  {
    "text": "hi i'm daniel hulchan",
    "start": "1360",
    "end": "3120"
  },
  {
    "text": "and i'm patrick dewine and we are",
    "start": "3120",
    "end": "5440"
  },
  {
    "text": "engineers at",
    "start": "5440",
    "end": "6240"
  },
  {
    "text": "vmware and we want to introduce a new",
    "start": "6240",
    "end": "8800"
  },
  {
    "text": "project that we've been working on",
    "start": "8800",
    "end": "10320"
  },
  {
    "text": "called build kit cli recruit control",
    "start": "10320",
    "end": "12639"
  },
  {
    "text": "which we realize is a bit of a mouthful",
    "start": "12639",
    "end": "17920"
  },
  {
    "text": "so we've been working with containers",
    "start": "18880",
    "end": "20240"
  },
  {
    "text": "and container technology for about seven",
    "start": "20240",
    "end": "21760"
  },
  {
    "text": "years now",
    "start": "21760",
    "end": "22800"
  },
  {
    "text": "we actually worked at docker for about",
    "start": "22800",
    "end": "25039"
  },
  {
    "text": "five years",
    "start": "25039",
    "end": "26720"
  },
  {
    "text": "so one of the things that docker really",
    "start": "26720",
    "end": "28160"
  },
  {
    "text": "did well was they had a really good way",
    "start": "28160",
    "end": "29760"
  },
  {
    "text": "of building",
    "start": "29760",
    "end": "30640"
  },
  {
    "text": "and running container images it's just",
    "start": "30640",
    "end": "32800"
  },
  {
    "text": "two steps in the cli",
    "start": "32800",
    "end": "34079"
  },
  {
    "text": "you do a docker build and a docker run i",
    "start": "34079",
    "end": "37200"
  },
  {
    "text": "actually when i was working at docker i",
    "start": "37200",
    "end": "38640"
  },
  {
    "text": "worked on",
    "start": "38640",
    "end": "39280"
  },
  {
    "text": "docker doodles if anyone knows what",
    "start": "39280",
    "end": "41280"
  },
  {
    "text": "those are",
    "start": "41280",
    "end": "43200"
  },
  {
    "text": "being able to iterate using build and",
    "start": "43200",
    "end": "45280"
  },
  {
    "text": "run made",
    "start": "45280",
    "end": "46480"
  },
  {
    "text": "creating those docker doodles it was a",
    "start": "46480",
    "end": "48320"
  },
  {
    "text": "really fast process",
    "start": "48320",
    "end": "50879"
  },
  {
    "text": "so kubernetes is great as an operations",
    "start": "50879",
    "end": "53039"
  },
  {
    "text": "platform but it's not quite as easy to",
    "start": "53039",
    "end": "54879"
  },
  {
    "text": "use as a developer platform",
    "start": "54879",
    "end": "56719"
  },
  {
    "text": "but we think it could be so i'm going to",
    "start": "56719",
    "end": "59199"
  },
  {
    "text": "do a quick demo",
    "start": "59199",
    "end": "60800"
  },
  {
    "text": "of a new doodle that i've actually",
    "start": "60800",
    "end": "62960"
  },
  {
    "text": "created",
    "start": "62960",
    "end": "65359"
  },
  {
    "text": "so let me explain a little bit about",
    "start": "67439",
    "end": "69760"
  },
  {
    "text": "what we've got here",
    "start": "69760",
    "end": "70960"
  },
  {
    "text": "this is a single node cluster a single",
    "start": "70960",
    "end": "73600"
  },
  {
    "text": "dome coupe cluster which is",
    "start": "73600",
    "end": "74960"
  },
  {
    "text": "set up on my mac laptop it's running",
    "start": "74960",
    "end": "78479"
  },
  {
    "text": "mini cube and but this should work just",
    "start": "78479",
    "end": "81520"
  },
  {
    "text": "as well on any other flavor of",
    "start": "81520",
    "end": "82720"
  },
  {
    "text": "kubernetes as well too",
    "start": "82720",
    "end": "84479"
  },
  {
    "text": "i've already gone ahead and installed",
    "start": "84479",
    "end": "85840"
  },
  {
    "text": "the control build client which i'm just",
    "start": "85840",
    "end": "87920"
  },
  {
    "text": "going to run here",
    "start": "87920",
    "end": "89280"
  },
  {
    "text": "um and so what this is doing because i",
    "start": "89280",
    "end": "92479"
  },
  {
    "text": "haven't",
    "start": "92479",
    "end": "92960"
  },
  {
    "text": "run control build yet it's setting up a",
    "start": "92960",
    "end": "96560"
  },
  {
    "text": "builder",
    "start": "96560",
    "end": "97840"
  },
  {
    "text": "which is you know if you run the",
    "start": "97840",
    "end": "99360"
  },
  {
    "text": "subsequent times that you're not going",
    "start": "99360",
    "end": "101280"
  },
  {
    "text": "to need to go",
    "start": "101280",
    "end": "102000"
  },
  {
    "text": "through that particular step first but",
    "start": "102000",
    "end": "104479"
  },
  {
    "text": "now what it's doing is taking the docker",
    "start": "104479",
    "end": "106079"
  },
  {
    "text": "file which i have",
    "start": "106079",
    "end": "107280"
  },
  {
    "text": "sitting inside of this directory and",
    "start": "107280",
    "end": "110399"
  },
  {
    "text": "it's going and building the various",
    "start": "110399",
    "end": "112000"
  },
  {
    "text": "different stages in fact there's a",
    "start": "112000",
    "end": "114079"
  },
  {
    "text": "cache miss which is why it's trying to",
    "start": "114079",
    "end": "117200"
  },
  {
    "text": "pull",
    "start": "117200",
    "end": "117759"
  },
  {
    "text": "part of the alpine",
    "start": "117759",
    "end": "120560"
  },
  {
    "text": "it's going in getting some of the",
    "start": "121040",
    "end": "122640"
  },
  {
    "text": "dependencies which are",
    "start": "122640",
    "end": "124479"
  },
  {
    "text": "specified inside of the docker file and",
    "start": "124479",
    "end": "126799"
  },
  {
    "text": "now it's actually compiling",
    "start": "126799",
    "end": "128879"
  },
  {
    "text": "this particular uh doodle so now that",
    "start": "128879",
    "end": "132400"
  },
  {
    "text": "that's actually been",
    "start": "132400",
    "end": "133360"
  },
  {
    "text": "loaded by um by the builder",
    "start": "133360",
    "end": "136800"
  },
  {
    "text": "it into the local docker runtime i can",
    "start": "136800",
    "end": "139440"
  },
  {
    "text": "go ahead",
    "start": "139440",
    "end": "140000"
  },
  {
    "text": "and do a quick control run to run to",
    "start": "140000",
    "end": "142239"
  },
  {
    "text": "create a pod",
    "start": "142239",
    "end": "143360"
  },
  {
    "text": "and run it directly and so there we go",
    "start": "143360",
    "end": "147270"
  },
  {
    "text": "[Music]",
    "start": "147270",
    "end": "150369"
  },
  {
    "text": "this is fine awesome",
    "start": "151599",
    "end": "157120"
  },
  {
    "text": "all right so let's take a little bit",
    "start": "157120",
    "end": "158560"
  },
  {
    "text": "let's take a look at how this actually",
    "start": "158560",
    "end": "159920"
  },
  {
    "text": "works",
    "start": "159920",
    "end": "160879"
  },
  {
    "text": "uh so as you saw in the demo the first",
    "start": "160879",
    "end": "163200"
  },
  {
    "text": "thing that happens when the cli runs is",
    "start": "163200",
    "end": "165120"
  },
  {
    "text": "it checks to see if there's an existing",
    "start": "165120",
    "end": "166640"
  },
  {
    "text": "builder running",
    "start": "166640",
    "end": "167599"
  },
  {
    "text": "if not it starts one up for you with its",
    "start": "167599",
    "end": "169599"
  },
  {
    "text": "default settings",
    "start": "169599",
    "end": "171280"
  },
  {
    "text": "once the builder pod is running it uses",
    "start": "171280",
    "end": "173280"
  },
  {
    "text": "the equivalent of a kubecontrol exact",
    "start": "173280",
    "end": "175280"
  },
  {
    "text": "to get a pipe into the pod then it uses",
    "start": "175280",
    "end": "178080"
  },
  {
    "text": "the build kit grpc api",
    "start": "178080",
    "end": "180000"
  },
  {
    "text": "to talk to the builder over that pipe by",
    "start": "180000",
    "end": "183120"
  },
  {
    "text": "using exec",
    "start": "183120",
    "end": "184000"
  },
  {
    "text": "to talk to the builder we're able to",
    "start": "184000",
    "end": "185280"
  },
  {
    "text": "rely on kubernetes native rbac",
    "start": "185280",
    "end": "187120"
  },
  {
    "text": "for access control now by default these",
    "start": "187120",
    "end": "189920"
  },
  {
    "text": "builder pods are privileged",
    "start": "189920",
    "end": "191680"
  },
  {
    "text": "we mount the container run and so that",
    "start": "191680",
    "end": "194560"
  },
  {
    "text": "they can talk to the runtime for that",
    "start": "194560",
    "end": "196239"
  },
  {
    "text": "cluster node what's cool about this",
    "start": "196239",
    "end": "199120"
  },
  {
    "text": "is now every image you build is",
    "start": "199120",
    "end": "200560"
  },
  {
    "text": "immediately available for the kubernetes",
    "start": "200560",
    "end": "202319"
  },
  {
    "text": "cluster to use",
    "start": "202319",
    "end": "204560"
  },
  {
    "text": "now you wouldn't want to run the builder",
    "start": "204560",
    "end": "205840"
  },
  {
    "text": "in this way on a production cluster as",
    "start": "205840",
    "end": "207440"
  },
  {
    "text": "anyone who has exact permissions into",
    "start": "207440",
    "end": "208959"
  },
  {
    "text": "the pod",
    "start": "208959",
    "end": "209840"
  },
  {
    "text": "would be able to inject images into your",
    "start": "209840",
    "end": "211440"
  },
  {
    "text": "cluster but for a development cluster",
    "start": "211440",
    "end": "213760"
  },
  {
    "text": "this is extremely powerful and efficient",
    "start": "213760",
    "end": "216319"
  },
  {
    "text": "now you can choose to disable this and",
    "start": "216319",
    "end": "217840"
  },
  {
    "text": "run a non-privileged builder",
    "start": "217840",
    "end": "219599"
  },
  {
    "text": "but then you'll have to push the image",
    "start": "219599",
    "end": "220959"
  },
  {
    "text": "to a registry or save it off locally in",
    "start": "220959",
    "end": "222799"
  },
  {
    "text": "order to use it",
    "start": "222799",
    "end": "224159"
  },
  {
    "text": "if you do want to push to a registry we",
    "start": "224159",
    "end": "225920"
  },
  {
    "text": "use standard kubernetes image pull",
    "start": "225920",
    "end": "227680"
  },
  {
    "text": "secrets so the builder can push directly",
    "start": "227680",
    "end": "231439"
  },
  {
    "text": "so if you have multiple nodes in your",
    "start": "233760",
    "end": "235519"
  },
  {
    "text": "cluster you can scale up the deployment",
    "start": "235519",
    "end": "237920"
  },
  {
    "text": "for the builder",
    "start": "237920",
    "end": "238879"
  },
  {
    "text": "to get pods running on all the nodes",
    "start": "238879",
    "end": "241120"
  },
  {
    "text": "when you build an image it gets built on",
    "start": "241120",
    "end": "242640"
  },
  {
    "text": "one node and then at the end of the",
    "start": "242640",
    "end": "243920"
  },
  {
    "text": "build",
    "start": "243920",
    "end": "244400"
  },
  {
    "text": "we use the cli the cli helps transfer",
    "start": "244400",
    "end": "246640"
  },
  {
    "text": "that image across to all the other codes",
    "start": "246640",
    "end": "248640"
  },
  {
    "text": "all the other pods this makes your image",
    "start": "248640",
    "end": "251439"
  },
  {
    "text": "available on all the nodes",
    "start": "251439",
    "end": "252799"
  },
  {
    "text": "so if you try to run a pod with that new",
    "start": "252799",
    "end": "254239"
  },
  {
    "text": "image you just built it won't matter",
    "start": "254239",
    "end": "256079"
  },
  {
    "text": "where kubernetes schedules it",
    "start": "256079",
    "end": "259040"
  },
  {
    "text": "this does mean that you'll need a fast",
    "start": "259040",
    "end": "260400"
  },
  {
    "text": "network between the cli and your cluster",
    "start": "260400",
    "end": "262560"
  },
  {
    "text": "unless your images are really small now",
    "start": "262560",
    "end": "265199"
  },
  {
    "text": "if you push to a registry",
    "start": "265199",
    "end": "266800"
  },
  {
    "text": "we skip this replication step in the",
    "start": "266800",
    "end": "269680"
  },
  {
    "text": "future we're planning to implement a pod",
    "start": "269680",
    "end": "271440"
  },
  {
    "text": "to pod transfer model so that you can",
    "start": "271440",
    "end": "273040"
  },
  {
    "text": "build larger images on a distant cluster",
    "start": "273040",
    "end": "275120"
  },
  {
    "text": "without a performance here",
    "start": "275120",
    "end": "278160"
  },
  {
    "text": "okay so why did we build this thing we",
    "start": "278800",
    "end": "281680"
  },
  {
    "text": "know that there's a lot of different",
    "start": "281680",
    "end": "283040"
  },
  {
    "text": "ways",
    "start": "283040",
    "end": "283600"
  },
  {
    "text": "to build container images and kubernetes",
    "start": "283600",
    "end": "285360"
  },
  {
    "text": "that are out there and some of those",
    "start": "285360",
    "end": "286800"
  },
  {
    "text": "tools are actually really great",
    "start": "286800",
    "end": "288639"
  },
  {
    "text": "there are however still a lot of people",
    "start": "288639",
    "end": "291360"
  },
  {
    "text": "who are using dr build",
    "start": "291360",
    "end": "293360"
  },
  {
    "text": "it's just really easy it just works",
    "start": "293360",
    "end": "296800"
  },
  {
    "text": "so a lot of those other tools though",
    "start": "296800",
    "end": "299520"
  },
  {
    "text": "they require you to use",
    "start": "299520",
    "end": "301120"
  },
  {
    "text": "a registry and many of them require a",
    "start": "301120",
    "end": "303759"
  },
  {
    "text": "lot of setup and",
    "start": "303759",
    "end": "305199"
  },
  {
    "text": "the images aren't available locally",
    "start": "305199",
    "end": "308800"
  },
  {
    "text": "the other thing that we see which is",
    "start": "308800",
    "end": "310320"
  },
  {
    "text": "happening around kubernetes is that",
    "start": "310320",
    "end": "312160"
  },
  {
    "text": "people are moving away from the docker",
    "start": "312160",
    "end": "314000"
  },
  {
    "text": "from docker d as being the default",
    "start": "314000",
    "end": "316240"
  },
  {
    "text": "container runtime",
    "start": "316240",
    "end": "318639"
  },
  {
    "text": "but people have built up scripts and",
    "start": "318639",
    "end": "320800"
  },
  {
    "text": "automation and muscle memory",
    "start": "320800",
    "end": "322240"
  },
  {
    "text": "around building images so we wanted to",
    "start": "322240",
    "end": "324720"
  },
  {
    "text": "create something which was close to the",
    "start": "324720",
    "end": "326639"
  },
  {
    "text": "the same experience that they already",
    "start": "326639",
    "end": "328160"
  },
  {
    "text": "have",
    "start": "328160",
    "end": "330400"
  },
  {
    "text": "so the build kit project was started",
    "start": "330560",
    "end": "332000"
  },
  {
    "text": "back in 2017 to create a more powerful",
    "start": "332000",
    "end": "334320"
  },
  {
    "text": "toolkit for converting source to build",
    "start": "334320",
    "end": "336000"
  },
  {
    "text": "artifacts",
    "start": "336000",
    "end": "336800"
  },
  {
    "text": "like container images so patrick and i",
    "start": "336800",
    "end": "339759"
  },
  {
    "text": "were both working at docker at the time",
    "start": "339759",
    "end": "342080"
  },
  {
    "text": "we were not part of the build kit",
    "start": "342080",
    "end": "343120"
  },
  {
    "text": "project itself but although we were",
    "start": "343120",
    "end": "344800"
  },
  {
    "text": "working on some downstream projects",
    "start": "344800",
    "end": "346639"
  },
  {
    "text": "that used build kit so build kit itself",
    "start": "346639",
    "end": "349199"
  },
  {
    "text": "is a really great tool",
    "start": "349199",
    "end": "350560"
  },
  {
    "text": "it's compatible with the latest docker",
    "start": "350560",
    "end": "351919"
  },
  {
    "text": "file features so it takes your docker",
    "start": "351919",
    "end": "354240"
  },
  {
    "text": "file and creates a graph",
    "start": "354240",
    "end": "355680"
  },
  {
    "text": "for all the build steps and then it can",
    "start": "355680",
    "end": "358080"
  },
  {
    "text": "run those steps in parallel to create",
    "start": "358080",
    "end": "359840"
  },
  {
    "text": "your container image",
    "start": "359840",
    "end": "361600"
  },
  {
    "text": "it only transfers files from your local",
    "start": "361600",
    "end": "363360"
  },
  {
    "text": "directory if they're actually used",
    "start": "363360",
    "end": "364800"
  },
  {
    "text": "during the build and it's smart about",
    "start": "364800",
    "end": "366639"
  },
  {
    "text": "tracking your files have changed",
    "start": "366639",
    "end": "368080"
  },
  {
    "text": "for better incremental builds to make",
    "start": "368080",
    "end": "371120"
  },
  {
    "text": "incremental builds faster",
    "start": "371120",
    "end": "372479"
  },
  {
    "text": "it can cast those build results locally",
    "start": "372479",
    "end": "374319"
  },
  {
    "text": "on the builder or even within a registry",
    "start": "374319",
    "end": "376720"
  },
  {
    "text": "so that enables multi-node build farms",
    "start": "376720",
    "end": "378720"
  },
  {
    "text": "to build faster",
    "start": "378720",
    "end": "380240"
  },
  {
    "text": "one thing i wanted to call out was that",
    "start": "380240",
    "end": "382960"
  },
  {
    "text": "it's actually really good at building",
    "start": "382960",
    "end": "385039"
  },
  {
    "text": "multi-architecture builds as well which",
    "start": "385039",
    "end": "387039"
  },
  {
    "text": "is what i use all the time for things",
    "start": "387039",
    "end": "388560"
  },
  {
    "text": "like those docker deals that we were",
    "start": "388560",
    "end": "389919"
  },
  {
    "text": "looking at earlier",
    "start": "389919",
    "end": "392080"
  },
  {
    "text": "so let's take a look at another demo",
    "start": "392080",
    "end": "393680"
  },
  {
    "text": "showing the power of a fast",
    "start": "393680",
    "end": "395120"
  },
  {
    "text": "developer interlude so let's briefly",
    "start": "395120",
    "end": "398240"
  },
  {
    "text": "describe the setup that i've got in my",
    "start": "398240",
    "end": "399759"
  },
  {
    "text": "environment",
    "start": "399759",
    "end": "400319"
  },
  {
    "text": "so i've got a mac laptop running fusion",
    "start": "400319",
    "end": "402639"
  },
  {
    "text": "so i do a vm run list",
    "start": "402639",
    "end": "404080"
  },
  {
    "text": "so you can see i've got one vm running",
    "start": "404080",
    "end": "405520"
  },
  {
    "text": "right now let's do a control",
    "start": "405520",
    "end": "408400"
  },
  {
    "text": "get nodes so we can see",
    "start": "408400",
    "end": "411680"
  },
  {
    "text": "this is actually a two node cluster",
    "start": "411680",
    "end": "413199"
  },
  {
    "text": "right now i'm not running my second node",
    "start": "413199",
    "end": "414960"
  },
  {
    "text": "but sometimes i'll use that for demos",
    "start": "414960",
    "end": "417120"
  },
  {
    "text": "for this demo i'm just going to use a",
    "start": "417120",
    "end": "418240"
  },
  {
    "text": "single node",
    "start": "418240",
    "end": "419520"
  },
  {
    "text": "so it is a simple ubuntu vm running",
    "start": "419520",
    "end": "422160"
  },
  {
    "text": "container d as the runtime",
    "start": "422160",
    "end": "424400"
  },
  {
    "text": "okay if i do a get pods you can see i've",
    "start": "424400",
    "end": "427360"
  },
  {
    "text": "got nothing running so i haven't booted",
    "start": "427360",
    "end": "428720"
  },
  {
    "text": "up my",
    "start": "428720",
    "end": "429120"
  },
  {
    "text": "my builder yet so let's go ahead and",
    "start": "429120",
    "end": "431680"
  },
  {
    "text": "look at the demo setup itself",
    "start": "431680",
    "end": "433360"
  },
  {
    "text": "so we'll start with a really simple",
    "start": "433360",
    "end": "434479"
  },
  {
    "text": "docker file so the docker file",
    "start": "434479",
    "end": "437360"
  },
  {
    "text": "uses busybox as the base layer and all",
    "start": "437360",
    "end": "440319"
  },
  {
    "text": "it does is copy in the command and set",
    "start": "440319",
    "end": "442080"
  },
  {
    "text": "that as the entry point",
    "start": "442080",
    "end": "444319"
  },
  {
    "text": "so let's take a look at that command so",
    "start": "444319",
    "end": "447280"
  },
  {
    "text": "this is just a really simple shell",
    "start": "447280",
    "end": "448560"
  },
  {
    "text": "script",
    "start": "448560",
    "end": "449280"
  },
  {
    "text": "just to kind of demonstrate a fast inner",
    "start": "449280",
    "end": "451599"
  },
  {
    "text": "loop",
    "start": "451599",
    "end": "452639"
  },
  {
    "text": "to kind of simulate uh you know if you",
    "start": "452639",
    "end": "454319"
  },
  {
    "text": "actually had code that you were adding",
    "start": "454319",
    "end": "455840"
  },
  {
    "text": "here to your application so all it does",
    "start": "455840",
    "end": "457199"
  },
  {
    "text": "is just",
    "start": "457199",
    "end": "457680"
  },
  {
    "text": "spit out a date and a hello world with a",
    "start": "457680",
    "end": "459599"
  },
  {
    "text": "number and we can increment that to see",
    "start": "459599",
    "end": "461120"
  },
  {
    "text": "the inner loop",
    "start": "461120",
    "end": "461919"
  },
  {
    "text": "can again simulate what what a developer",
    "start": "461919",
    "end": "463599"
  },
  {
    "text": "we're doing as you're as you're writing",
    "start": "463599",
    "end": "464800"
  },
  {
    "text": "code",
    "start": "464800",
    "end": "465360"
  },
  {
    "text": "in that that fast interloop all right",
    "start": "465360",
    "end": "468160"
  },
  {
    "text": "and then let's look at our application",
    "start": "468160",
    "end": "469440"
  },
  {
    "text": "definition",
    "start": "469440",
    "end": "471280"
  },
  {
    "text": "so what i've got set up here is again",
    "start": "471280",
    "end": "472960"
  },
  {
    "text": "kind of to help optimize for a developer",
    "start": "472960",
    "end": "474800"
  },
  {
    "text": "inner loop",
    "start": "474800",
    "end": "475599"
  },
  {
    "text": "we've got the deployment i've got the",
    "start": "475599",
    "end": "478240"
  },
  {
    "text": "strategy set to recreate",
    "start": "478240",
    "end": "480080"
  },
  {
    "text": "so instead of doing a rolling update",
    "start": "480080",
    "end": "481840"
  },
  {
    "text": "it's going to immediately terminate the",
    "start": "481840",
    "end": "483039"
  },
  {
    "text": "old pods",
    "start": "483039",
    "end": "483759"
  },
  {
    "text": "and spin up the new pods a few other",
    "start": "483759",
    "end": "486479"
  },
  {
    "text": "settings of note in here",
    "start": "486479",
    "end": "488080"
  },
  {
    "text": "i've got my image pull image pull policy",
    "start": "488080",
    "end": "490479"
  },
  {
    "text": "set to never",
    "start": "490479",
    "end": "491919"
  },
  {
    "text": "that's to make sure that i'm always",
    "start": "491919",
    "end": "493199"
  },
  {
    "text": "using the image that i've built locally",
    "start": "493199",
    "end": "494879"
  },
  {
    "text": "we're not trying to pull this from a",
    "start": "494879",
    "end": "496000"
  },
  {
    "text": "registry",
    "start": "496000",
    "end": "496639"
  },
  {
    "text": "again we're trying to do a fast inner",
    "start": "496639",
    "end": "498160"
  },
  {
    "text": "loop where it's local development on my",
    "start": "498160",
    "end": "499840"
  },
  {
    "text": "local cube environment",
    "start": "499840",
    "end": "502479"
  },
  {
    "text": "i've got a restart policy set to always",
    "start": "502479",
    "end": "504879"
  },
  {
    "text": "so it's always going to restart",
    "start": "504879",
    "end": "506560"
  },
  {
    "text": "the pod and a termination grace period",
    "start": "506560",
    "end": "509840"
  },
  {
    "text": "set to zero so that's going to make it",
    "start": "509840",
    "end": "511120"
  },
  {
    "text": "faster to terminate and shut down the",
    "start": "511120",
    "end": "512880"
  },
  {
    "text": "old pods",
    "start": "512880",
    "end": "513680"
  },
  {
    "text": "so all of this should help to kind of",
    "start": "513680",
    "end": "515680"
  },
  {
    "text": "build up that fast inner loop so as a",
    "start": "515680",
    "end": "517200"
  },
  {
    "text": "developer i write some code compile",
    "start": "517200",
    "end": "519200"
  },
  {
    "text": "and then test now in a production",
    "start": "519200",
    "end": "521279"
  },
  {
    "text": "environment obviously you'd have",
    "start": "521279",
    "end": "522080"
  },
  {
    "text": "different settings but this kind of",
    "start": "522080",
    "end": "523039"
  },
  {
    "text": "helps",
    "start": "523039",
    "end": "523518"
  },
  {
    "text": "helps optimize that inner loop all right",
    "start": "523519",
    "end": "526560"
  },
  {
    "text": "so let's go ahead and actually build",
    "start": "526560",
    "end": "528240"
  },
  {
    "text": "the image so i'll just cut and paste",
    "start": "528240",
    "end": "531760"
  },
  {
    "text": "that in",
    "start": "531760",
    "end": "534480"
  },
  {
    "text": "all right so what it's doing right now",
    "start": "534480",
    "end": "535519"
  },
  {
    "text": "is actually booting up the builder and",
    "start": "535519",
    "end": "536880"
  },
  {
    "text": "you can see that it's actually",
    "start": "536880",
    "end": "537839"
  },
  {
    "text": "attempting to use docker",
    "start": "537839",
    "end": "539120"
  },
  {
    "text": "but the docker runtime failed and it's",
    "start": "539120",
    "end": "541040"
  },
  {
    "text": "going to retry with container d",
    "start": "541040",
    "end": "542560"
  },
  {
    "text": "and the reason we do that is docker d is",
    "start": "542560",
    "end": "544320"
  },
  {
    "text": "still the most popular container runtime",
    "start": "544320",
    "end": "546080"
  },
  {
    "text": "out there",
    "start": "546080",
    "end": "546560"
  },
  {
    "text": "in the wild even though a lot of folks",
    "start": "546560",
    "end": "548720"
  },
  {
    "text": "are switching over to container d",
    "start": "548720",
    "end": "550240"
  },
  {
    "text": "um as many folks know docker actually",
    "start": "550240",
    "end": "552399"
  },
  {
    "text": "has container d under the covers so if",
    "start": "552399",
    "end": "553839"
  },
  {
    "text": "we started with containerity by default",
    "start": "553839",
    "end": "555839"
  },
  {
    "text": "we might incorrectly assume that your",
    "start": "555839",
    "end": "557440"
  },
  {
    "text": "cluster is using containerity",
    "start": "557440",
    "end": "559600"
  },
  {
    "text": "and not realize that docker's sitting on",
    "start": "559600",
    "end": "561440"
  },
  {
    "text": "top of it um so",
    "start": "561440",
    "end": "563040"
  },
  {
    "text": "kind of for simplicity for now we we",
    "start": "563040",
    "end": "564800"
  },
  {
    "text": "default to docker and then we'll flip",
    "start": "564800",
    "end": "566720"
  },
  {
    "text": "back to container d",
    "start": "566720",
    "end": "568160"
  },
  {
    "text": "if if docker is not detected so you can",
    "start": "568160",
    "end": "570320"
  },
  {
    "text": "see that was all automatic didn't have",
    "start": "570320",
    "end": "571519"
  },
  {
    "text": "to do anything",
    "start": "571519",
    "end": "572399"
  },
  {
    "text": "you can if you're manually creating the",
    "start": "572399",
    "end": "574880"
  },
  {
    "text": "builder",
    "start": "574880",
    "end": "575760"
  },
  {
    "text": "you can explicitly specify that you want",
    "start": "575760",
    "end": "577200"
  },
  {
    "text": "to use the continuity runtime and that",
    "start": "577200",
    "end": "578720"
  },
  {
    "text": "will kind of short circuit that auto",
    "start": "578720",
    "end": "580399"
  },
  {
    "text": "detection logic",
    "start": "580399",
    "end": "581680"
  },
  {
    "text": "so you can see it took about 17 seconds",
    "start": "581680",
    "end": "583279"
  },
  {
    "text": "to attempt docker fail",
    "start": "583279",
    "end": "585120"
  },
  {
    "text": "and then restart or retry with",
    "start": "585120",
    "end": "586560"
  },
  {
    "text": "continuity now that at this point the",
    "start": "586560",
    "end": "588480"
  },
  {
    "text": "builder is already running",
    "start": "588480",
    "end": "589760"
  },
  {
    "text": "so if i do any subsequent builds it'll",
    "start": "589760",
    "end": "591440"
  },
  {
    "text": "immediately be available",
    "start": "591440",
    "end": "592880"
  },
  {
    "text": "and i can just jump right into my build",
    "start": "592880",
    "end": "595760"
  },
  {
    "text": "let's look at a few other things",
    "start": "595760",
    "end": "597040"
  },
  {
    "text": "in the output here so we can see it's",
    "start": "597040",
    "end": "598959"
  },
  {
    "text": "it's pulling the base layer of library",
    "start": "598959",
    "end": "600959"
  },
  {
    "text": "busy box",
    "start": "600959",
    "end": "602560"
  },
  {
    "text": "and that was able to resolve uh in the",
    "start": "602560",
    "end": "604240"
  },
  {
    "text": "continuity image cache",
    "start": "604240",
    "end": "605839"
  },
  {
    "text": "um then it copied in the image uh and",
    "start": "605839",
    "end": "608800"
  },
  {
    "text": "that was pretty much it for this",
    "start": "608800",
    "end": "609760"
  },
  {
    "text": "dockerfile right there's no compilation",
    "start": "609760",
    "end": "611279"
  },
  {
    "text": "or anything like that",
    "start": "611279",
    "end": "612240"
  },
  {
    "text": "like we saw in patrick's demo finally",
    "start": "612240",
    "end": "615040"
  },
  {
    "text": "what it's doing is just exporting it to",
    "start": "615040",
    "end": "616480"
  },
  {
    "text": "an image",
    "start": "616480",
    "end": "617600"
  },
  {
    "text": "and tagging it with the the tag that i",
    "start": "617600",
    "end": "619920"
  },
  {
    "text": "specified",
    "start": "619920",
    "end": "620640"
  },
  {
    "text": "and so at this point that image is now",
    "start": "620640",
    "end": "622320"
  },
  {
    "text": "loaded into my container runtime and",
    "start": "622320",
    "end": "624160"
  },
  {
    "text": "available on those nodes",
    "start": "624160",
    "end": "625519"
  },
  {
    "text": "now if i had my second node running it",
    "start": "625519",
    "end": "627279"
  },
  {
    "text": "would have transferred the image over to",
    "start": "627279",
    "end": "628480"
  },
  {
    "text": "that second node as well",
    "start": "628480",
    "end": "630160"
  },
  {
    "text": "and so now both nodes would be able to",
    "start": "630160",
    "end": "631600"
  },
  {
    "text": "run on this image",
    "start": "631600",
    "end": "633760"
  },
  {
    "text": "so let's go ahead and get the",
    "start": "633760",
    "end": "636800"
  },
  {
    "text": "application running",
    "start": "636800",
    "end": "639600"
  },
  {
    "text": "and if we do it get pods we can now see",
    "start": "643680",
    "end": "646640"
  },
  {
    "text": "both the build kit builder",
    "start": "646640",
    "end": "648000"
  },
  {
    "text": "which is running and ready to go for the",
    "start": "648000",
    "end": "650079"
  },
  {
    "text": "next indication",
    "start": "650079",
    "end": "651279"
  },
  {
    "text": "um or the next time i build an image and",
    "start": "651279",
    "end": "653200"
  },
  {
    "text": "i've got my app running as well",
    "start": "653200",
    "end": "654880"
  },
  {
    "text": "now what i'm going to do over in this",
    "start": "654880",
    "end": "656000"
  },
  {
    "text": "terminal window is i'll actually do a",
    "start": "656000",
    "end": "657920"
  },
  {
    "text": "little loop",
    "start": "657920",
    "end": "659120"
  },
  {
    "text": "so just kind of an infinite while loop",
    "start": "659120",
    "end": "661279"
  },
  {
    "text": "control logs",
    "start": "661279",
    "end": "662399"
  },
  {
    "text": "i do a follow on the logs i'm going to",
    "start": "662399",
    "end": "664160"
  },
  {
    "text": "use a label selector for app equals my",
    "start": "664160",
    "end": "666320"
  },
  {
    "text": "app",
    "start": "666320",
    "end": "667200"
  },
  {
    "text": "what this will let me do is in this",
    "start": "667200",
    "end": "668720"
  },
  {
    "text": "terminal it will continue to follow the",
    "start": "668720",
    "end": "670240"
  },
  {
    "text": "log output",
    "start": "670240",
    "end": "671200"
  },
  {
    "text": "even as i iterate right so we'll go",
    "start": "671200",
    "end": "673120"
  },
  {
    "text": "ahead and start that up so you can see",
    "start": "673120",
    "end": "674560"
  },
  {
    "text": "it's just",
    "start": "674560",
    "end": "674959"
  },
  {
    "text": "continually spitting out hello world",
    "start": "674959",
    "end": "676720"
  },
  {
    "text": "with a date",
    "start": "676720",
    "end": "678560"
  },
  {
    "text": "date stamp every three seconds or so",
    "start": "678560",
    "end": "681519"
  },
  {
    "text": "okay",
    "start": "681519",
    "end": "681920"
  },
  {
    "text": "so now let's kind of do a simulation of",
    "start": "681920",
    "end": "684000"
  },
  {
    "text": "a developer inner loop",
    "start": "684000",
    "end": "685200"
  },
  {
    "text": "so i'm going to write some code make",
    "start": "685200",
    "end": "686560"
  },
  {
    "text": "some changes recompile",
    "start": "686560",
    "end": "688959"
  },
  {
    "text": "and see my code running so we'll go",
    "start": "688959",
    "end": "692079"
  },
  {
    "text": "ahead and",
    "start": "692079",
    "end": "692560"
  },
  {
    "text": "modify this program to keep it simple",
    "start": "692560",
    "end": "696000"
  },
  {
    "text": "we'll just say",
    "start": "696000",
    "end": "696720"
  },
  {
    "text": "hello world 2.",
    "start": "696720",
    "end": "699519"
  },
  {
    "text": "so we'll write that out and i'm going to",
    "start": "699839",
    "end": "702800"
  },
  {
    "text": "repeat the build command",
    "start": "702800",
    "end": "704399"
  },
  {
    "text": "but i'm going to do one little",
    "start": "704399",
    "end": "705680"
  },
  {
    "text": "difference here so after i build it",
    "start": "705680",
    "end": "707920"
  },
  {
    "text": "what i'm going to do is if that's",
    "start": "707920",
    "end": "710160"
  },
  {
    "text": "successful",
    "start": "710160",
    "end": "711360"
  },
  {
    "text": "i'm going to do a coup control delete",
    "start": "711360",
    "end": "713920"
  },
  {
    "text": "pod",
    "start": "713920",
    "end": "715200"
  },
  {
    "text": "with a label selector app equals myapp",
    "start": "715200",
    "end": "718639"
  },
  {
    "text": "so what that's going to do is if the",
    "start": "718639",
    "end": "719760"
  },
  {
    "text": "build failed it'll stop but if the build",
    "start": "719760",
    "end": "721760"
  },
  {
    "text": "succeeded",
    "start": "721760",
    "end": "722720"
  },
  {
    "text": "it's going to go ahead and delete the",
    "start": "722720",
    "end": "723920"
  },
  {
    "text": "pod where app equals my app so that",
    "start": "723920",
    "end": "726160"
  },
  {
    "text": "should delete this pod",
    "start": "726160",
    "end": "727440"
  },
  {
    "text": "and allow the deployment and the",
    "start": "727440",
    "end": "729120"
  },
  {
    "text": "kubernetes scheduler to detect the pods",
    "start": "729120",
    "end": "730959"
  },
  {
    "text": "dead",
    "start": "730959",
    "end": "731680"
  },
  {
    "text": "and automatically restart the pod which",
    "start": "731680",
    "end": "733600"
  },
  {
    "text": "will pick up the new image that i just",
    "start": "733600",
    "end": "735120"
  },
  {
    "text": "built",
    "start": "735120",
    "end": "736000"
  },
  {
    "text": "so let's go ahead and see that work",
    "start": "736000",
    "end": "739200"
  },
  {
    "text": "voila so there we go within a second or",
    "start": "743200",
    "end": "745360"
  },
  {
    "text": "so we've got hello world two coming out",
    "start": "745360",
    "end": "747360"
  },
  {
    "text": "and you can see that the build took uh",
    "start": "747360",
    "end": "749200"
  },
  {
    "text": "much shorter this time",
    "start": "749200",
    "end": "750639"
  },
  {
    "text": "uh we didn't have to bootstrap the",
    "start": "750639",
    "end": "752320"
  },
  {
    "text": "builder it was already present running",
    "start": "752320",
    "end": "754240"
  },
  {
    "text": "um all we did was copy in the new",
    "start": "754240",
    "end": "756079"
  },
  {
    "text": "command",
    "start": "756079",
    "end": "757440"
  },
  {
    "text": "and export the layers so there you go",
    "start": "757440",
    "end": "760639"
  },
  {
    "text": "nice fast inner loop optimized for",
    "start": "760639",
    "end": "762639"
  },
  {
    "text": "developers immediately have your images",
    "start": "762639",
    "end": "764800"
  },
  {
    "text": "available on your local system",
    "start": "764800",
    "end": "767120"
  },
  {
    "text": "works on single nodes works on",
    "start": "767120",
    "end": "768560"
  },
  {
    "text": "multi-nodes as well",
    "start": "768560",
    "end": "772160"
  },
  {
    "text": "all right so let's actually look at how",
    "start": "772160",
    "end": "773760"
  },
  {
    "text": "you would go about creating a customized",
    "start": "773760",
    "end": "775680"
  },
  {
    "text": "builder if you wanted to",
    "start": "775680",
    "end": "778560"
  },
  {
    "text": "so first let's go ahead and delete the",
    "start": "778560",
    "end": "780880"
  },
  {
    "text": "builder that we already have",
    "start": "780880",
    "end": "787120"
  },
  {
    "text": "okay um so one thing i should mention",
    "start": "787120",
    "end": "789440"
  },
  {
    "text": "real quick so we've been showing",
    "start": "789440",
    "end": "790639"
  },
  {
    "text": "kube control build as the uh kind of",
    "start": "790639",
    "end": "792959"
  },
  {
    "text": "primary ux",
    "start": "792959",
    "end": "794240"
  },
  {
    "text": "uh or the primary cli commands that you",
    "start": "794240",
    "end": "796320"
  },
  {
    "text": "would run because it makes it feel",
    "start": "796320",
    "end": "798240"
  },
  {
    "text": "very similar to the way the docker build",
    "start": "798240",
    "end": "799519"
  },
  {
    "text": "works that's actually an alias to",
    "start": "799519",
    "end": "802480"
  },
  {
    "text": "build kit build and so we have a number",
    "start": "802480",
    "end": "805040"
  },
  {
    "text": "of different commands",
    "start": "805040",
    "end": "806079"
  },
  {
    "text": "underneath kube control build kit so we",
    "start": "806079",
    "end": "808480"
  },
  {
    "text": "say control build kit help",
    "start": "808480",
    "end": "810639"
  },
  {
    "text": "we can see build is one of the sub",
    "start": "810639",
    "end": "812800"
  },
  {
    "text": "commands of build kit",
    "start": "812800",
    "end": "814160"
  },
  {
    "text": "which again is just an alias to cube",
    "start": "814160",
    "end": "815839"
  },
  {
    "text": "control build",
    "start": "815839",
    "end": "817519"
  },
  {
    "text": "there's other commands that you can do",
    "start": "817519",
    "end": "818880"
  },
  {
    "text": "under the build kit top level command",
    "start": "818880",
    "end": "821760"
  },
  {
    "text": "so you can create a new builder list",
    "start": "821760",
    "end": "823920"
  },
  {
    "text": "existing builders because you can create",
    "start": "823920",
    "end": "825199"
  },
  {
    "text": "multiple builders with different",
    "start": "825199",
    "end": "826320"
  },
  {
    "text": "configurations",
    "start": "826320",
    "end": "827680"
  },
  {
    "text": "remove your builders i was just using",
    "start": "827680",
    "end": "830560"
  },
  {
    "text": "control delete for the deployment but",
    "start": "830560",
    "end": "832160"
  },
  {
    "text": "you could also use the rm command",
    "start": "832160",
    "end": "833920"
  },
  {
    "text": "under build kit as well so let's go",
    "start": "833920",
    "end": "836639"
  },
  {
    "text": "ahead and take a look at",
    "start": "836639",
    "end": "838480"
  },
  {
    "text": "build kit create help",
    "start": "838480",
    "end": "841519"
  },
  {
    "text": "so there's a lot of command flags here",
    "start": "841519",
    "end": "843040"
  },
  {
    "text": "um we're not going to go through all of",
    "start": "843040",
    "end": "844160"
  },
  {
    "text": "them but",
    "start": "844160",
    "end": "844880"
  },
  {
    "text": "uh just a kind of a real quick summary",
    "start": "844880",
    "end": "846959"
  },
  {
    "text": "so this allows you to",
    "start": "846959",
    "end": "848079"
  },
  {
    "text": "manually or explicitly create a builder",
    "start": "848079",
    "end": "850480"
  },
  {
    "text": "so you can tune and",
    "start": "850480",
    "end": "851680"
  },
  {
    "text": "and optimize the configuration of it",
    "start": "851680",
    "end": "853839"
  },
  {
    "text": "based on what you want in your",
    "start": "853839",
    "end": "854959"
  },
  {
    "text": "environment",
    "start": "854959",
    "end": "855680"
  },
  {
    "text": "so this would be how you would set it up",
    "start": "855680",
    "end": "857760"
  },
  {
    "text": "to run rootless if you wanted to have",
    "start": "857760",
    "end": "859120"
  },
  {
    "text": "kind of a de-privileged environment",
    "start": "859120",
    "end": "862079"
  },
  {
    "text": "you can pass in specific flags to the",
    "start": "862079",
    "end": "863760"
  },
  {
    "text": "build kit demon inside",
    "start": "863760",
    "end": "865760"
  },
  {
    "text": "of the builder if you want to tune and",
    "start": "865760",
    "end": "867360"
  },
  {
    "text": "again kind of modify the behavior of",
    "start": "867360",
    "end": "868800"
  },
  {
    "text": "build kit",
    "start": "868800",
    "end": "869839"
  },
  {
    "text": "and pass in a specific build kit config",
    "start": "869839",
    "end": "871760"
  },
  {
    "text": "file if you already have one that you've",
    "start": "871760",
    "end": "873680"
  },
  {
    "text": "set up or if you want to customize that",
    "start": "873680",
    "end": "876399"
  },
  {
    "text": "that",
    "start": "876399",
    "end": "876720"
  },
  {
    "text": "setup the one i'll show just real quick",
    "start": "876720",
    "end": "879120"
  },
  {
    "text": "as an example",
    "start": "879120",
    "end": "880079"
  },
  {
    "text": "is the runtime flag so by default we",
    "start": "880079",
    "end": "882399"
  },
  {
    "text": "have it set up to do auto which kind of",
    "start": "882399",
    "end": "883680"
  },
  {
    "text": "does that auto detection logic i talked",
    "start": "883680",
    "end": "885360"
  },
  {
    "text": "about",
    "start": "885360",
    "end": "886720"
  },
  {
    "text": "you can also specify the runtimes",
    "start": "886720",
    "end": "888880"
  },
  {
    "text": "explicitly so for this one",
    "start": "888880",
    "end": "890240"
  },
  {
    "text": "i'll show you kind of using container d",
    "start": "890240",
    "end": "891680"
  },
  {
    "text": "explicitly so it doesn't have to do",
    "start": "891680",
    "end": "893279"
  },
  {
    "text": "the automatic detection so let's say",
    "start": "893279",
    "end": "896000"
  },
  {
    "text": "control build kit",
    "start": "896000",
    "end": "897440"
  },
  {
    "text": "create runtime container d",
    "start": "897440",
    "end": "901760"
  },
  {
    "text": "and so now we'll go ahead and boot up",
    "start": "901760",
    "end": "903199"
  },
  {
    "text": "the the builder with container d",
    "start": "903199",
    "end": "905120"
  },
  {
    "text": "immediately we don't have to try docker",
    "start": "905120",
    "end": "906560"
  },
  {
    "text": "or fail and then fall back to containity",
    "start": "906560",
    "end": "908399"
  },
  {
    "text": "so you can see it was much faster to get",
    "start": "908399",
    "end": "909680"
  },
  {
    "text": "started",
    "start": "909680",
    "end": "910320"
  },
  {
    "text": "and i'd be ready to run and start doing",
    "start": "910320",
    "end": "912079"
  },
  {
    "text": "builds now",
    "start": "912079",
    "end": "914560"
  },
  {
    "text": "so i mentioned uh i mentioned multi-arc",
    "start": "914639",
    "end": "917519"
  },
  {
    "text": "support a few minutes ago and",
    "start": "917519",
    "end": "919199"
  },
  {
    "text": "i wanted to talk about that a little bit",
    "start": "919199",
    "end": "920560"
  },
  {
    "text": "more when i say multi-arch",
    "start": "920560",
    "end": "922959"
  },
  {
    "text": "what i mean is that if you've got nodes",
    "start": "922959",
    "end": "925680"
  },
  {
    "text": "in your cluster which are running",
    "start": "925680",
    "end": "927760"
  },
  {
    "text": "let's say x8664 linux or arm linux or",
    "start": "927760",
    "end": "931120"
  },
  {
    "text": "even windows so for example i'm running",
    "start": "931120",
    "end": "934160"
  },
  {
    "text": "a personal cluster at home that's got a",
    "start": "934160",
    "end": "935600"
  },
  {
    "text": "mix of pcs and raspberry pi's",
    "start": "935600",
    "end": "937600"
  },
  {
    "text": "running linux to do some home automation",
    "start": "937600",
    "end": "940560"
  },
  {
    "text": "so how do you get",
    "start": "940560",
    "end": "941600"
  },
  {
    "text": "a common image tag to run across all of",
    "start": "941600",
    "end": "944560"
  },
  {
    "text": "those nodes",
    "start": "944560",
    "end": "945600"
  },
  {
    "text": "you could make images with different",
    "start": "945600",
    "end": "947120"
  },
  {
    "text": "tags for each one of those different",
    "start": "947120",
    "end": "948560"
  },
  {
    "text": "architectures",
    "start": "948560",
    "end": "949759"
  },
  {
    "text": "but if you want a single deployment to",
    "start": "949759",
    "end": "952160"
  },
  {
    "text": "scale across each one of those",
    "start": "952160",
    "end": "954079"
  },
  {
    "text": "or each of those nodes it has to have a",
    "start": "954079",
    "end": "956720"
  },
  {
    "text": "single",
    "start": "956720",
    "end": "957360"
  },
  {
    "text": "image definition you can already see",
    "start": "957360",
    "end": "960399"
  },
  {
    "text": "examples of these types of images which",
    "start": "960399",
    "end": "961839"
  },
  {
    "text": "are on docker hub right now",
    "start": "961839",
    "end": "963519"
  },
  {
    "text": "where most of the library images are",
    "start": "963519",
    "end": "966079"
  },
  {
    "text": "already multi-arched",
    "start": "966079",
    "end": "967680"
  },
  {
    "text": "so uh if you pulled something like",
    "start": "967680",
    "end": "970240"
  },
  {
    "text": "postgres",
    "start": "970240",
    "end": "971120"
  },
  {
    "text": "or the redis images it'll just work on",
    "start": "971120",
    "end": "973440"
  },
  {
    "text": "whatever architecture you're using",
    "start": "973440",
    "end": "976160"
  },
  {
    "text": "what's cool about buildkit is that it",
    "start": "976160",
    "end": "978720"
  },
  {
    "text": "lets you",
    "start": "978720",
    "end": "979279"
  },
  {
    "text": "easily build these types of images",
    "start": "979279",
    "end": "982480"
  },
  {
    "text": "and there are three different ways of",
    "start": "982480",
    "end": "985040"
  },
  {
    "text": "doing it",
    "start": "985040",
    "end": "986240"
  },
  {
    "text": "you can build natively on the target",
    "start": "986240",
    "end": "988959"
  },
  {
    "text": "architectures",
    "start": "988959",
    "end": "990160"
  },
  {
    "text": "which we don't support quite yet but we",
    "start": "990160",
    "end": "992720"
  },
  {
    "text": "are working on that",
    "start": "992720",
    "end": "994880"
  },
  {
    "text": "you can also potentially use an emulator",
    "start": "994880",
    "end": "997440"
  },
  {
    "text": "such as",
    "start": "997440",
    "end": "998240"
  },
  {
    "text": "qemu or to emulate those different",
    "start": "998240",
    "end": "1000639"
  },
  {
    "text": "architectures",
    "start": "1000639",
    "end": "1002240"
  },
  {
    "text": "and if you're using an interpreted",
    "start": "1002240",
    "end": "1003680"
  },
  {
    "text": "language like python or node",
    "start": "1003680",
    "end": "1006000"
  },
  {
    "text": "or a compiled language which supports",
    "start": "1006000",
    "end": "1008160"
  },
  {
    "text": "cross compilation like go",
    "start": "1008160",
    "end": "1010560"
  },
  {
    "text": "or rust or even java it's pretty easy to",
    "start": "1010560",
    "end": "1013199"
  },
  {
    "text": "do",
    "start": "1013199",
    "end": "1014240"
  },
  {
    "text": "you can do this in languages like c",
    "start": "1014240",
    "end": "1017759"
  },
  {
    "text": "and c plus plus but it usually takes a",
    "start": "1017759",
    "end": "1020000"
  },
  {
    "text": "little bit more effort to get your tool",
    "start": "1020000",
    "end": "1021680"
  },
  {
    "text": "chain to work one big caveat that i",
    "start": "1021680",
    "end": "1025038"
  },
  {
    "text": "should mention though is with multi-arch",
    "start": "1025039",
    "end": "1026558"
  },
  {
    "text": "images",
    "start": "1026559",
    "end": "1027280"
  },
  {
    "text": "is that if um you for now you have to",
    "start": "1027280",
    "end": "1030880"
  },
  {
    "text": "to push it to push your images to a",
    "start": "1030880",
    "end": "1033120"
  },
  {
    "text": "registry",
    "start": "1033120",
    "end": "1034000"
  },
  {
    "text": "when you're doing the build but we have",
    "start": "1034000",
    "end": "1036079"
  },
  {
    "text": "been looking at ways",
    "start": "1036079",
    "end": "1037600"
  },
  {
    "text": "to assemble them locally which wouldn't",
    "start": "1037600",
    "end": "1039438"
  },
  {
    "text": "require you to do that push",
    "start": "1039439",
    "end": "1042640"
  },
  {
    "text": "so it's still a little bit tricky to get",
    "start": "1044720",
    "end": "1048160"
  },
  {
    "text": "the cross compilation",
    "start": "1048160",
    "end": "1049600"
  },
  {
    "text": "working there's a bunch of changes that",
    "start": "1049600",
    "end": "1052000"
  },
  {
    "text": "you'll you're going to need to do",
    "start": "1052000",
    "end": "1053440"
  },
  {
    "text": "to your docker file to get it to work if",
    "start": "1053440",
    "end": "1056480"
  },
  {
    "text": "you're familiar with multi-stage builds",
    "start": "1056480",
    "end": "1058320"
  },
  {
    "text": "inside of docker files this should look",
    "start": "1058320",
    "end": "1060720"
  },
  {
    "text": "relatively straightforward",
    "start": "1060720",
    "end": "1064000"
  },
  {
    "text": "in this particular example uh there are",
    "start": "1064080",
    "end": "1066240"
  },
  {
    "text": "four different stages",
    "start": "1066240",
    "end": "1067440"
  },
  {
    "text": "and in the first stage what happens is",
    "start": "1067440",
    "end": "1070320"
  },
  {
    "text": "we're going to",
    "start": "1070320",
    "end": "1071440"
  },
  {
    "text": "build um for each one of the different",
    "start": "1071440",
    "end": "1074320"
  },
  {
    "text": "build platforms that actually gets",
    "start": "1074320",
    "end": "1075600"
  },
  {
    "text": "executed",
    "start": "1075600",
    "end": "1076720"
  },
  {
    "text": "um once for every one of the platforms",
    "start": "1076720",
    "end": "1079360"
  },
  {
    "text": "that you're using",
    "start": "1079360",
    "end": "1080799"
  },
  {
    "text": "the second and third stages of the",
    "start": "1080799",
    "end": "1082400"
  },
  {
    "text": "docker file are",
    "start": "1082400",
    "end": "1084080"
  },
  {
    "text": "required to get the correct base image",
    "start": "1084080",
    "end": "1086400"
  },
  {
    "text": "for whatever architecture that you're",
    "start": "1086400",
    "end": "1088240"
  },
  {
    "text": "that you're trying to target so in this",
    "start": "1088240",
    "end": "1091039"
  },
  {
    "text": "case there's a",
    "start": "1091039",
    "end": "1092400"
  },
  {
    "text": "release linux and a release windows",
    "start": "1092400",
    "end": "1094880"
  },
  {
    "text": "stage",
    "start": "1094880",
    "end": "1096160"
  },
  {
    "text": "in linux i'm just copying i'm using from",
    "start": "1096160",
    "end": "1098880"
  },
  {
    "text": "scratch",
    "start": "1098880",
    "end": "1099679"
  },
  {
    "text": "and i'm just copying the built",
    "start": "1099679",
    "end": "1101360"
  },
  {
    "text": "executable to that",
    "start": "1101360",
    "end": "1103039"
  },
  {
    "text": "in the case of windows i'm having to use",
    "start": "1103039",
    "end": "1105679"
  },
  {
    "text": "nanoserver",
    "start": "1105679",
    "end": "1106840"
  },
  {
    "text": "so unfortunately it's a lot bigger than",
    "start": "1106840",
    "end": "1109440"
  },
  {
    "text": "just using from scratch",
    "start": "1109440",
    "end": "1111360"
  },
  {
    "text": "but then i copy over the newly built",
    "start": "1111360",
    "end": "1113760"
  },
  {
    "text": "executable over to it",
    "start": "1113760",
    "end": "1116400"
  },
  {
    "text": "and then of course i set up the entry",
    "start": "1116400",
    "end": "1117840"
  },
  {
    "text": "points for both of those",
    "start": "1117840",
    "end": "1119679"
  },
  {
    "text": "the last stage is actually kind of like",
    "start": "1119679",
    "end": "1122559"
  },
  {
    "text": "the magic",
    "start": "1122559",
    "end": "1123200"
  },
  {
    "text": "sauce that build kit uses to assemble",
    "start": "1123200",
    "end": "1125440"
  },
  {
    "text": "each one of the architectures",
    "start": "1125440",
    "end": "1128240"
  },
  {
    "text": "the target os and target arch and",
    "start": "1128240",
    "end": "1131679"
  },
  {
    "text": "build platform variables that you can",
    "start": "1131679",
    "end": "1133039"
  },
  {
    "text": "see in the docker file",
    "start": "1133039",
    "end": "1134960"
  },
  {
    "text": "are variables which are automatically",
    "start": "1134960",
    "end": "1136880"
  },
  {
    "text": "set by build kit",
    "start": "1136880",
    "end": "1138400"
  },
  {
    "text": "and they're pulled out of the platform",
    "start": "1138400",
    "end": "1140080"
  },
  {
    "text": "argument that when you're executing",
    "start": "1140080",
    "end": "1142559"
  },
  {
    "text": "the control build itself",
    "start": "1142559",
    "end": "1146159"
  },
  {
    "text": "all right so what what environments can",
    "start": "1148080",
    "end": "1149919"
  },
  {
    "text": "you run this on um so we've tested this",
    "start": "1149919",
    "end": "1152000"
  },
  {
    "text": "on kubernetes versions 114 and up so",
    "start": "1152000",
    "end": "1154320"
  },
  {
    "text": "pretty much every supported stable",
    "start": "1154320",
    "end": "1155840"
  },
  {
    "text": "version of kubernetes today works",
    "start": "1155840",
    "end": "1158240"
  },
  {
    "text": "as far as run times we support both",
    "start": "1158240",
    "end": "1160799"
  },
  {
    "text": "container d",
    "start": "1160799",
    "end": "1161520"
  },
  {
    "text": "and docker d run times additional",
    "start": "1161520",
    "end": "1163600"
  },
  {
    "text": "runtimes can be added in the future",
    "start": "1163600",
    "end": "1166160"
  },
  {
    "text": "as far as distros most distros should",
    "start": "1166160",
    "end": "1168480"
  },
  {
    "text": "just work",
    "start": "1168480",
    "end": "1170080"
  },
  {
    "text": "some kubernetes distros like k3d use",
    "start": "1170080",
    "end": "1172640"
  },
  {
    "text": "some special tricks around how they set",
    "start": "1172640",
    "end": "1174080"
  },
  {
    "text": "up their container runtime",
    "start": "1174080",
    "end": "1175840"
  },
  {
    "text": "in these cases we currently aren't able",
    "start": "1175840",
    "end": "1177679"
  },
  {
    "text": "to mount to contain a runtime socket to",
    "start": "1177679",
    "end": "1179280"
  },
  {
    "text": "load up the images",
    "start": "1179280",
    "end": "1180720"
  },
  {
    "text": "um so you can still use the tool on",
    "start": "1180720",
    "end": "1182480"
  },
  {
    "text": "those",
    "start": "1182480",
    "end": "1184160"
  },
  {
    "text": "distros but you'll need to use the",
    "start": "1184160",
    "end": "1185760"
  },
  {
    "text": "registry and push the images to the",
    "start": "1185760",
    "end": "1187520"
  },
  {
    "text": "registry",
    "start": "1187520",
    "end": "1188400"
  },
  {
    "text": "so you won't be able to do the immediate",
    "start": "1188400",
    "end": "1190160"
  },
  {
    "text": "build and run like we showed in the",
    "start": "1190160",
    "end": "1192000"
  },
  {
    "text": "demos today",
    "start": "1192000",
    "end": "1194640"
  },
  {
    "text": "all right so this is a really young",
    "start": "1196799",
    "end": "1198400"
  },
  {
    "text": "project we do have native os packaging",
    "start": "1198400",
    "end": "1200960"
  },
  {
    "text": "for mac os windows",
    "start": "1200960",
    "end": "1202240"
  },
  {
    "text": "linux to make it a little bit easier to",
    "start": "1202240",
    "end": "1204400"
  },
  {
    "text": "get installed",
    "start": "1204400",
    "end": "1205440"
  },
  {
    "text": "go take a look give it a try we're",
    "start": "1205440",
    "end": "1207679"
  },
  {
    "text": "always looking for help so if this is",
    "start": "1207679",
    "end": "1209039"
  },
  {
    "text": "interesting to you give us a hand",
    "start": "1209039",
    "end": "1211360"
  },
  {
    "text": "pick up an open issue submit a pull",
    "start": "1211360",
    "end": "1213039"
  },
  {
    "text": "request join the community",
    "start": "1213039",
    "end": "1214880"
  },
  {
    "text": "help us define what the 1.0 release",
    "start": "1214880",
    "end": "1216720"
  },
  {
    "text": "should look like",
    "start": "1216720",
    "end": "1219120"
  },
  {
    "text": "thanks for coming and watching our talk",
    "start": "1219120",
    "end": "1222240"
  },
  {
    "text": "we'll open it up for q a now",
    "start": "1222240",
    "end": "1227120"
  }
]