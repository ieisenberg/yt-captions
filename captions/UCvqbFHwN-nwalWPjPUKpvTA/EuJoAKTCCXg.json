[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "all right so my name is Clayton Coleman I'm architect for openshift I've been at kubernetes community contributors since",
    "start": "0",
    "end": "7760"
  },
  {
    "text": "near the very beginning and today I'm going to talk about staple sets do you",
    "start": "7760",
    "end": "13469"
  },
  {
    "text": "guys start about that you guys came to this you probably saw a different title on",
    "start": "13469",
    "end": "19439"
  },
  {
    "text": "the schedule and I talked about staple sets I think it's really important that",
    "start": "19439",
    "end": "25410"
  },
  {
    "text": "we get this out of the way upfront this talk is absolutely 100% not about pets",
    "start": "25410",
    "end": "30840"
  },
  {
    "text": "is about stateful apps they just recently we changed the name of pet sets to stateful sets and there",
    "start": "30840",
    "end": "37739"
  },
  {
    "text": "was a big discussion in the community and the idea here is that the the general idea of a pet is this",
    "start": "37739",
    "end": "44850"
  },
  {
    "text": "something you care about and so we're just gonna be a little bit more precise and we're gonna talk about state but during this talk I'm absolutely",
    "start": "44850",
    "end": "50190"
  },
  {
    "text": "guaranteed that I'm gonna say pet sets so I say pet sets or stateful sets I mean the same thing",
    "start": "50190",
    "end": "56270"
  },
  {
    "start": "56000",
    "end": "213000"
  },
  {
    "text": "so what does a stateful set mean why do we create staple sets what's the point",
    "start": "56270",
    "end": "61649"
  },
  {
    "text": "of this talk even kubernetes is a programmable platform for building applications",
    "start": "61649",
    "end": "69110"
  },
  {
    "text": "everything in kubernetes is about a pattern that makes applications easier",
    "start": "69110",
    "end": "74670"
  },
  {
    "text": "to run administer and keep running and so keeping running is really important",
    "start": "74670",
    "end": "80369"
  },
  {
    "text": "if you have an application that's downs not much of an application the real world unfortunately is not so nice to us",
    "start": "80369",
    "end": "86909"
  },
  {
    "text": "kubernetes is supposed to be flexible and able to recover from failures",
    "start": "86909",
    "end": "92689"
  },
  {
    "text": "there's really two solutions to dealing with failure [Music]",
    "start": "92689",
    "end": "98720"
  },
  {
    "text": "there's two solutions for dealing with failure these are pretty common patterns the first one is detect that something",
    "start": "98720",
    "end": "104280"
  },
  {
    "text": "bad actually happened and restart the application move it someplace else",
    "start": "104280",
    "end": "109640"
  },
  {
    "text": "this is often called mean time to recovery if you plan for this you can actually be pretty effective the other",
    "start": "109640",
    "end": "116700"
  },
  {
    "text": "option is running multiple copies which kind of depends on the first one I'll talk a little bit more about that in a minute so recovery crew Bernays is",
    "start": "116700",
    "end": "123509"
  },
  {
    "text": "actually pretty good at recovery this is one of the fundamental principles of how kubernetes is built the idea of grenades",
    "start": "123509",
    "end": "128729"
  },
  {
    "text": "is you say this is what I want to run and the infrastructure tries to keep it running so if you only need three nines of",
    "start": "128729",
    "end": "134350"
  },
  {
    "text": "availability 99.9% availability that's eight hours of downtime a year more or less than less I did the math wrong and",
    "start": "134350",
    "end": "141270"
  },
  {
    "text": "for a lot of simple applications that's a lot of downtime right I mean eight hours you it takes you three or four",
    "start": "141270",
    "end": "147940"
  },
  {
    "text": "minutes to restart and you have less than 10 or 15 outages a year you're well within that budget so kubernetes is",
    "start": "147940",
    "end": "154540"
  },
  {
    "text": "really good at two things restarting things that crash as well as detecting",
    "start": "154540",
    "end": "160300"
  },
  {
    "text": "nodes that have gone down or they have problems and in this case in kubernetes",
    "start": "160300",
    "end": "165400"
  },
  {
    "text": "if you detective something's wrong there's a process that will come along and it'll say you know what this pods",
    "start": "165400",
    "end": "170470"
  },
  {
    "text": "not working anymore I want to stop it and another one will get started somewhere else on the cluster",
    "start": "170470",
    "end": "175800"
  },
  {
    "text": "but that's just for simple applications if you start building more complex applications that have more dependencies",
    "start": "175800",
    "end": "180850"
  },
  {
    "text": "you know you might depend from your front-end on a web service that also",
    "start": "180850",
    "end": "186280"
  },
  {
    "text": "depends on a database and if you start adding more and more web services because you're building a micro service infrastructure what actually happens is",
    "start": "186280",
    "end": "193570"
  },
  {
    "text": "that the margin for error tends to be a lot smaller it's not just if your application fails it's if any of the",
    "start": "193570",
    "end": "199720"
  },
  {
    "text": "dependencies fail and you can't recover from that so raqudii and recovering can",
    "start": "199720",
    "end": "205030"
  },
  {
    "text": "work but the bigger and more complex your applications get the more the less margin you have for transient failures",
    "start": "205030",
    "end": "211860"
  },
  {
    "text": "so the naive solution as we replicate if",
    "start": "211860",
    "end": "217000"
  },
  {
    "start": "213000",
    "end": "462000"
  },
  {
    "text": "you've got a stateless web application and that's a keyword stateless replications really easy to spend up fifteen of them one time goes down you",
    "start": "217000",
    "end": "223120"
  },
  {
    "text": "don't care but unfortunately replication is actually a really really really hard problem the moment you're",
    "start": "223120",
    "end": "229900"
  },
  {
    "text": "dealing with something that actually matters that has to be consistent so qu Bernays is really good at replication in",
    "start": "229900",
    "end": "237040"
  },
  {
    "text": "kubernetes there's the first primitive above a pod which is something that runs containers was a replica set and in this",
    "start": "237040",
    "end": "245260"
  },
  {
    "text": "case you say I want one of these and it goes in runs in the cluster so imagine that Harrison Ford is running on your",
    "start": "245260",
    "end": "251920"
  },
  {
    "text": "cluster somewhere and then you say you know what I want to have some backup so now I have three Harrison Ford's but",
    "start": "251920",
    "end": "258940"
  },
  {
    "text": "because a replica set is about creating copies there's a wrinkle if you're storing data",
    "start": "258940",
    "end": "266350"
  },
  {
    "text": "on each of those three copies you can get into trouble so the easiest way you",
    "start": "266350",
    "end": "271660"
  },
  {
    "text": "can get into trouble would be you know you tell everybody to go store some data and the first Harrison Ford says yep I",
    "start": "271660",
    "end": "279580"
  },
  {
    "text": "got it and suddenly if you go back and ask all the",
    "start": "279580",
    "end": "285670"
  },
  {
    "text": "Harrison Ford's what the value of a vehicle's one is you're probably not gonna get a very good answer and then",
    "start": "285670",
    "end": "291670"
  },
  {
    "text": "you know this is this should be no surprise to anybody this room but I think it's building up to why we think the replication isn't enough so as part",
    "start": "291670",
    "end": "301510"
  },
  {
    "text": "of the design process for kubernetes we started with pods we build",
    "start": "301510",
    "end": "307390"
  },
  {
    "text": "on top of them replica sets replica sets has just create three copies and we know that we want to help people deal",
    "start": "307390",
    "end": "315130"
  },
  {
    "text": "with states state is a fundamental part of the applications we run it's not just about web services it's about databases",
    "start": "315130",
    "end": "321940"
  },
  {
    "text": "it's about message queues it's about applications that write data to disk and then send that to other places",
    "start": "321940",
    "end": "327210"
  },
  {
    "text": "and so it's part of the research for this we we kind of geeked out on data there's been a long discussion this is",
    "start": "327210",
    "end": "334120"
  },
  {
    "text": "not a new topic in the community there's an immense amount of research out there there's immense amount of types of systems that actually store state and",
    "start": "334120",
    "end": "343000"
  },
  {
    "text": "this is just a portion of this spreadsheet but early on we went through and kind of tried to catalog a lot of",
    "start": "343000",
    "end": "348640"
  },
  {
    "text": "the patterns that we've seen you know on the far left you might have no sequel and sequel databases the",
    "start": "348640",
    "end": "354730"
  },
  {
    "text": "trade-offs here usually are kind of the ones that we're all kind of familiar with so if you've heard of the cap theorem you get to make a choice when",
    "start": "354730",
    "end": "361990"
  },
  {
    "text": "you have distributed systems you can focus on consistency or you can focus on availability in the event that something",
    "start": "361990",
    "end": "369190"
  },
  {
    "text": "is partitioned and so we kind of we tried to go through this thing and say what are the common ideas that come out of all of these types of software and",
    "start": "369190",
    "end": "375640"
  },
  {
    "text": "again these are just components that people tend to reuse there's an almost",
    "start": "375640",
    "end": "381070"
  },
  {
    "text": "infinite number of applications that actually have state that exist in the real world that aren't represented here",
    "start": "381070",
    "end": "386440"
  },
  {
    "text": "so a classic example might be if you have a large je application that's been",
    "start": "386440",
    "end": "392080"
  },
  {
    "text": "taking over for ten years quite happily now and you have a session store that might be using Java serialization to do",
    "start": "392080",
    "end": "398110"
  },
  {
    "text": "in memory copy across those machines that's a stateful set that sent the session data has to be",
    "start": "398110",
    "end": "404920"
  },
  {
    "text": "replicated across the cluster their data and if one of those machines goes down in your state's gone a user who has you",
    "start": "404920",
    "end": "410140"
  },
  {
    "text": "know a shopping cart or a web order or something like that comes back in and suddenly their cards gone you know these",
    "start": "410140",
    "end": "416200"
  },
  {
    "text": "are older problems but they still carry through today so we looked at all this data and I think it's important that I",
    "start": "416200",
    "end": "422860"
  },
  {
    "text": "stop here and say if you're running stateful things on kubernetes today they do work",
    "start": "422860",
    "end": "428160"
  },
  {
    "text": "it's possible today to set up a replication controller or a replica set",
    "start": "428160",
    "end": "433180"
  },
  {
    "text": "and use a persistent volume and if you set things up right your data is going",
    "start": "433180",
    "end": "438580"
  },
  {
    "text": "to be preserved if a failure happens it's going to take over but our goal is not just to make it possible",
    "start": "438580",
    "end": "444660"
  },
  {
    "text": "but to make it easy if if you have a workload if qu Bernays is the goal if",
    "start": "444660",
    "end": "450250"
  },
  {
    "text": "the Careers goal is running applications and some applications have state it's kind of silly to say you know what you",
    "start": "450250",
    "end": "456340"
  },
  {
    "text": "can run state but there's all these rough edges so we're not going to help you",
    "start": "456340",
    "end": "461310"
  },
  {
    "text": "so the stateful said is taking some of the lessons is going through the patterns that we see and",
    "start": "462000",
    "end": "471160"
  },
  {
    "text": "boiling them down to a couple of core concepts so staple said is a little bit like a replica set it replicates",
    "start": "471160",
    "end": "478090"
  },
  {
    "text": "software but it adds two things the idea of identity and of tracking State and",
    "start": "478090",
    "end": "484420"
  },
  {
    "text": "States a real catch-all term for the sake of argument here it really means access to storage or access to something",
    "start": "484420",
    "end": "491590"
  },
  {
    "text": "that is persistent beyond an individual instance so pods as you may be aware are",
    "start": "491590",
    "end": "498730"
  },
  {
    "text": "built on top of containers which are ephemeral so in kubernetes if you schedule a pod and that machine gets wiped off the face of the planet if your",
    "start": "498730",
    "end": "505600"
  },
  {
    "text": "data only exists on that machine data is not coming back Kerber days makes it easy to attach persistent volumes to",
    "start": "505600",
    "end": "511510"
  },
  {
    "text": "your machines that might be network attached you might be using a cloud provider with AWS or GCE and you've got",
    "start": "511510",
    "end": "518169"
  },
  {
    "text": "persistent disks where the cloud provider has done all the hard work of letting you pretend that data doesn't matter and these machines are all",
    "start": "518169",
    "end": "524140"
  },
  {
    "text": "fungible but joy might also be running on bare metal using NFS I scuzzy fibre channel Gluster Ceph any of the other",
    "start": "524140",
    "end": "531730"
  },
  {
    "text": "plugins that people have been adding and that state whether it's on persistent",
    "start": "531730",
    "end": "537100"
  },
  {
    "text": "volumes or not we want to make it easy to reason about so because state is important because state",
    "start": "537100",
    "end": "544600"
  },
  {
    "start": "541000",
    "end": "572000"
  },
  {
    "text": "means data safety first as a user of",
    "start": "544600",
    "end": "549630"
  },
  {
    "text": "kubernetes if you use the system it doesn't help you understand what it's",
    "start": "549630",
    "end": "554709"
  },
  {
    "text": "doing and what the failure modes are and how you can hurt yourself it's not a very good system all right if you trust",
    "start": "554709",
    "end": "561730"
  },
  {
    "text": "your data to the system but you can't understand and expect it to work the way you want designed for the administrator",
    "start": "561730",
    "end": "567970"
  },
  {
    "text": "or the application author or the human it's not a very good system so",
    "start": "567970",
    "end": "573480"
  },
  {
    "start": "572000",
    "end": "674000"
  },
  {
    "text": "we kind of formalized the three laws of staple sets may be familiar to some of you a staple set may not injure your",
    "start": "573480",
    "end": "579850"
  },
  {
    "text": "state or through inaction allow state to come to harm formalization of that first",
    "start": "579850",
    "end": "584889"
  },
  {
    "text": "principle which is do not lose data that you trust to the set and yes sure you",
    "start": "584889",
    "end": "591970"
  },
  {
    "text": "know this is programming things are hard people always make mistakes but first and foremost we shouldn't lose data or",
    "start": "591970",
    "end": "597089"
  },
  {
    "text": "by not helping or telling the user allow that data to be lost a",
    "start": "597089",
    "end": "602130"
  },
  {
    "text": "second you know take orders do what you're told unless it conflicts with the first order so we want to failsafe so if",
    "start": "602130",
    "end": "609160"
  },
  {
    "text": "you say do something stupid we want to make sure there's enough patterns and things built into stateful sets that say",
    "start": "609160",
    "end": "616000"
  },
  {
    "text": "that was stupid I'm not gonna allow you to do it or if you do it here's why this is going to cause you a problem and I'm",
    "start": "616000",
    "end": "623529"
  },
  {
    "text": "really sorry but I'm about to lose your data and finally a staple said must maintain its members as long as such",
    "start": "623529",
    "end": "629199"
  },
  {
    "text": "protection does not conflict for the first or second laws this would be the general idea of",
    "start": "629199",
    "end": "635339"
  },
  {
    "text": "there's the trade-off that I mentioned before consistency versus availability is",
    "start": "635339",
    "end": "640589"
  },
  {
    "text": "kind of a fundamental principle of distributed systems design can't work around it so a replica set in kubernetes",
    "start": "640589",
    "end": "648480"
  },
  {
    "text": "leans towards availability stateful set is going to lean towards consistency and",
    "start": "648480",
    "end": "654459"
  },
  {
    "text": "because it makes that trade-off when when we have to we will prefer to do",
    "start": "654459",
    "end": "662529"
  },
  {
    "text": "nothing and take the cost to take the head to availability than to violate what you told us to do or to lose your",
    "start": "662529",
    "end": "668830"
  },
  {
    "text": "data and so again these are just guidelines and there's not actually written into code we don't have a prosthetic positronic brain or anything",
    "start": "668830",
    "end": "675160"
  },
  {
    "start": "674000",
    "end": "863000"
  },
  {
    "text": "behind this although I wish we did so I'm going to start with a really quick demo and then come back and talk through",
    "start": "675160",
    "end": "681220"
  },
  {
    "text": "what's going on in the demo so I'm going to show I'm gonna show you",
    "start": "681220",
    "end": "686310"
  },
  {
    "text": "not having access to wireless but so while this password",
    "start": "686310",
    "end": "691860"
  },
  {
    "text": "wouldn't be a demo without it all right what was it cloud native",
    "start": "703740",
    "end": "710700"
  },
  {
    "text": "okay so I'm gonna show you guys openshift I",
    "start": "714560",
    "end": "721790"
  },
  {
    "text": "work on open shift up and shift is a distribution of kubernetes we had a bunch of other stuff around kubernetes",
    "start": "721790",
    "end": "727160"
  },
  {
    "text": "in a kind of opinionated way but ultimately under the covers it's still raw Cabernet so I'm running open shift",
    "start": "727160",
    "end": "733130"
  },
  {
    "text": "1/4 which is built on top of kubernetes 1/4 it's pretty easy we try to keep the numbers the same except when we ship it",
    "start": "733130",
    "end": "738590"
  },
  {
    "text": "to people and then we add 3 for some arbitrary reason so an open shift a",
    "start": "738590",
    "end": "744070"
  },
  {
    "text": "Cooper net or an open shift project is just a kubernetes namespace so what I'm gonna do is I'm going to take a",
    "start": "744070",
    "end": "750550"
  },
  {
    "text": "zookeeper example written by prashanth who could not be here today",
    "start": "750550",
    "end": "755810"
  },
  {
    "text": "because he made me do it prashanth is Sean put together this as",
    "start": "755810",
    "end": "760820"
  },
  {
    "text": "we were doing the Alpha work for pet set so what I'm doing is I've got a I've got a list of kubernetes resources and I'm",
    "start": "760820",
    "end": "767240"
  },
  {
    "text": "just adding them in and creating them here I'll show you a little bit more of the details but I'm creating a service and a",
    "start": "767240",
    "end": "774020"
  },
  {
    "text": "pet set remember we're gonna rename pet sets so just follow me along on this and",
    "start": "774020",
    "end": "779450"
  },
  {
    "text": "then I'm gonna create some storage now",
    "start": "779450",
    "end": "785380"
  },
  {
    "text": "the wonderful joy of Jason I should test the front ok I'm gonna do it the easy way",
    "start": "785380",
    "end": "792460"
  },
  {
    "text": "never trust a UI",
    "start": "794740",
    "end": "798220"
  },
  {
    "text": "okay so I'm going to create a zookeeper here and this would have worked if I'd properly formatted my mo",
    "start": "802050",
    "end": "807420"
  },
  {
    "text": "and my clocks are all screwed up because VMs are awesome so I've created a pet",
    "start": "807420",
    "end": "813820"
  },
  {
    "text": "set here I've created a service the pet sets gonna go scale up to pods a bunch of stuffs gonna happen in the background",
    "start": "813820",
    "end": "819750"
  },
  {
    "text": "we're gonna see I talked a little bit about the idea that we're going to be",
    "start": "819750",
    "end": "825730"
  },
  {
    "text": "predictable and help you not mess up so one of the things that people tend to get wrong is they start a whole bunch of",
    "start": "825730",
    "end": "832390"
  },
  {
    "text": "stuff at once and they all try to do things it's not necessarily easy to reason about the order those things",
    "start": "832390",
    "end": "837940"
  },
  {
    "text": "happen in so the way that pets that works is we start",
    "start": "837940",
    "end": "844240"
  },
  {
    "text": "the first one up and then we walk through the set so that's a you know a simplification so you don't have to reason about what happens if all three",
    "start": "844240",
    "end": "851500"
  },
  {
    "text": "start up at once and fight I've got the logs here of showing the pod it's going to come up you're going",
    "start": "851500",
    "end": "857020"
  },
  {
    "text": "to see the second one come up and then hopefully by the time I come back to this they'll all be created",
    "start": "857020",
    "end": "863250"
  },
  {
    "start": "863000",
    "end": "1132000"
  },
  {
    "text": "so you kind of saw a little bit of this in the UI so what is the staple set or pet set a staple set is designed to",
    "start": "863250",
    "end": "871270"
  },
  {
    "text": "stamp out identical copies of a pod and this is a pod template so if you've ever",
    "start": "871270",
    "end": "878680"
  },
  {
    "text": "created a replica set or a daemon set in kubernetes this should be really familiar it's just you know I want to go create an open JDK container and I want",
    "start": "878680",
    "end": "886000"
  },
  {
    "text": "a mount in a data directory we're gonna create multiple copies so I say I want three of them and the name of this set",
    "start": "886000",
    "end": "892360"
  },
  {
    "text": "is zoo just because it's faster or easier to type in zookeeper the special thing about Pet sets and",
    "start": "892360",
    "end": "899650"
  },
  {
    "text": "staple sets is we've talked about identity the identity is the idea that",
    "start": "899650",
    "end": "905200"
  },
  {
    "text": "even as individual pods come and go there is an instance of the software running that thinks it's the first one",
    "start": "905200",
    "end": "911140"
  },
  {
    "text": "and there's an instance that thinks it's the second one and there's an instance that things there's a third one if one of those fails we're gonna use the name",
    "start": "911140",
    "end": "918250"
  },
  {
    "text": "and this is the name of the pod we're gonna use this as the thing that we",
    "start": "918250",
    "end": "923350"
  },
  {
    "text": "organized on so there's never going to be getting ahead of myself here we're going to replace zoo 2 or zoo 1 or zoo 0",
    "start": "923350",
    "end": "929560"
  },
  {
    "text": "with another instance that thinks that Zoo one we want and the state part of this is",
    "start": "929560",
    "end": "936160"
  },
  {
    "text": "the second part which is if you have a replica set today it's an identical copy so you'll say",
    "start": "936160",
    "end": "942630"
  },
  {
    "text": "create three copies of this pod template each one of those is gonna point to the",
    "start": "942630",
    "end": "948520"
  },
  {
    "text": "exact same volume now in kubernetes if you're using a block storage device",
    "start": "948520",
    "end": "954190"
  },
  {
    "text": "which says I can only be mounted to one system at a time what's gonna happen is only one is gonna actually start the",
    "start": "954190",
    "end": "961390"
  },
  {
    "text": "other two are gonna run and that's because ultimately at the end of the day what Amazon and GCS are Google and and",
    "start": "961390",
    "end": "968940"
  },
  {
    "text": "Azure and SEF provide is there's a lock on that storage in the backend and it's",
    "start": "968940",
    "end": "976120"
  },
  {
    "text": "saying only one machine at a time can access this volume but if you want to have three members that each have their",
    "start": "976120",
    "end": "982000"
  },
  {
    "text": "own volume you'd have to go create three replication controllers three replicas sets and then go fiddle around with a",
    "start": "982000",
    "end": "987460"
  },
  {
    "text": "bunch of details too because you can't scale them up so in kubernetes the pet set adds the idea of a volume",
    "start": "987460",
    "end": "993970"
  },
  {
    "text": "claim template so today in kubernetes when you want storage you say hey I want to go get one gig of storage and",
    "start": "993970",
    "end": "1001370"
  },
  {
    "text": "what will happen is at creation time instead of just creating this one once",
    "start": "1001370",
    "end": "1007050"
  },
  {
    "text": "for each new member we create we'll create a uniquely named one so I'll have",
    "start": "1007050",
    "end": "1013410"
  },
  {
    "text": "zu0 which is my first pod and it'll actually point to dated or 0 which is",
    "start": "1013410",
    "end": "1019380"
  },
  {
    "text": "the persistent bond volume claim created first so each pet or each staple set member has its own volume",
    "start": "1019380",
    "end": "1026839"
  },
  {
    "text": "this really depends if you've used persistent storage this actually really heavily benefits from having dynamic",
    "start": "1026839",
    "end": "1034350"
  },
  {
    "text": "provisioning so that's a feature that was introduced in 1001 for in a slightly better form",
    "start": "1034350",
    "end": "1040620"
  },
  {
    "text": "storage classes were added in one for as alpha and are starting to come out so the idea of dynamic provisioning is you",
    "start": "1040620",
    "end": "1046620"
  },
  {
    "text": "just say you want storage and if you happen to have a pretty awesome storage provider they just go off and they create a volume for you on demand it",
    "start": "1046620",
    "end": "1053130"
  },
  {
    "text": "makes it a little bit fiddly to demo on your laptop and that's something over time will address but we're starting to get there and then it has to be possible",
    "start": "1053130",
    "end": "1060270"
  },
  {
    "text": "to discover those other ones so if I have su 0 zu 1 + zu 2 almost all clustered software needs to",
    "start": "1060270",
    "end": "1067230"
  },
  {
    "text": "figure out how to talk to those other members of the set and so in kubernetes you know I said the word discover in",
    "start": "1067230",
    "end": "1074910"
  },
  {
    "text": "kubernetes the answer to service discovery is services so we've added some features to services which I'll",
    "start": "1074910",
    "end": "1080070"
  },
  {
    "text": "talk about in a little in a few minutes that make it easy for the individual members to go find each other but also",
    "start": "1080070",
    "end": "1087120"
  },
  {
    "text": "for someone who's talking to this application to either say you know what I don't care about which zookeeper instance I'm talking to so want to talk",
    "start": "1087120",
    "end": "1093270"
  },
  {
    "text": "to a zookeeper or to go find the individual members of this set by name and then",
    "start": "1093270",
    "end": "1100490"
  },
  {
    "text": "it's really important safety first would never allow two pods with the same",
    "start": "1100490",
    "end": "1106650"
  },
  {
    "text": "name to run at the same time I'll come back to that in a minute but the idea here is that if two people think they're the same",
    "start": "1106650",
    "end": "1112770"
  },
  {
    "text": "you could have pod 0 or zoo zero running one point of cluster if you could get another one that things said zero and",
    "start": "1112770",
    "end": "1119160"
  },
  {
    "text": "the two of them are talking to different members of the set you have the dreaded split brain right both of those guys are",
    "start": "1119160",
    "end": "1125040"
  },
  {
    "text": "participating you don't have three members you have four members you don't have a quorum or majority and said you",
    "start": "1125040",
    "end": "1130800"
  },
  {
    "text": "have a split I'll come back to that in a few minutes the way the DNS schema works is we've",
    "start": "1130800",
    "end": "1137190"
  },
  {
    "start": "1132000",
    "end": "1201000"
  },
  {
    "text": "added a couple of new alpha and features that are moving into beta that I specified a service and this is just a",
    "start": "1137190",
    "end": "1143190"
  },
  {
    "text": "normal kubernetes service of the normal kubernetes service that I created and I added the stateful set controller when",
    "start": "1143190",
    "end": "1151230"
  },
  {
    "text": "it creates those pods adds a little bit of info that tells the DNS service how",
    "start": "1151230",
    "end": "1157350"
  },
  {
    "text": "to identify that particular member of the set and so if you saw you know says",
    "start": "1157350",
    "end": "1163140"
  },
  {
    "text": "Susie zu 0 zu 1 + zu - those correspond to the names of the pods and it's just",
    "start": "1163140",
    "end": "1168240"
  },
  {
    "text": "the simplest possible system that could actually work if you ask for zk mi NS that service that cluster at local",
    "start": "1168240",
    "end": "1174060"
  },
  {
    "text": "inside your kubernetes cluster it's going to return 3a records the IPS",
    "start": "1174060",
    "end": "1179070"
  },
  {
    "text": "of each member of the set there's some tricks around DNS and as I'm sure some of you aware DNS can be a fiddly beast",
    "start": "1179070",
    "end": "1185370"
  },
  {
    "text": "at the best of times if you ask for the zookeeper set what you're guaranteed to get is you're never",
    "start": "1185370",
    "end": "1191310"
  },
  {
    "text": "going to get 4 members here but you could get the possibility that if one of",
    "start": "1191310",
    "end": "1196680"
  },
  {
    "text": "these gets replaced and comes back you might get another one in between another feature that we use is that we",
    "start": "1196680",
    "end": "1203879"
  },
  {
    "text": "added in Cooper Nettie's is the idea of a knit container so when we started Cooper neighs you have pot or you have containers in a pod you",
    "start": "1203879",
    "end": "1210629"
  },
  {
    "text": "can run one two three and infinite number not actually an infinite number of containers at the same time those all",
    "start": "1210629",
    "end": "1216960"
  },
  {
    "text": "start up at the same time and move forward they can share volumes they can talk to each other over the local network but it was really important for",
    "start": "1216960",
    "end": "1223289"
  },
  {
    "text": "us to be able to separate out the responsibility for",
    "start": "1223289",
    "end": "1228830"
  },
  {
    "text": "separate out the responsibility for setup from actually running your container so if you have a container",
    "start": "1228830",
    "end": "1233999"
  },
  {
    "text": "that runs zookeeper there might actually be things that you need to do ahead of time you want to generate a config file you want to go find out who the other",
    "start": "1233999",
    "end": "1239460"
  },
  {
    "text": "members are and write that config file out in the example that I'll show Sean",
    "start": "1239460",
    "end": "1244499"
  },
  {
    "text": "actually got really clever and he said you know I don't even really want to maintain docker image that has zookeeper in it I'm just gonna use the JDK and I'm",
    "start": "1244499",
    "end": "1252600"
  },
  {
    "text": "gonna download from a particular URL the version of zookeeper and I'm gonna",
    "start": "1252600",
    "end": "1258929"
  },
  {
    "text": "put it on disk and then all the other containers in the pod are going to use that so there's a number of ways that",
    "start": "1258929",
    "end": "1264480"
  },
  {
    "text": "you can use the net containers it's not coupled to stateful sets but it is a tool that can be used to separate out",
    "start": "1264480",
    "end": "1270899"
  },
  {
    "text": "the logic in your pots if your application needs to wait for another service to come up like if your Java Enterprise application doesn't really",
    "start": "1270899",
    "end": "1277799"
  },
  {
    "text": "like it if the database is down when it starts up and it gives a big nasty error you can write a bash loop in the command",
    "start": "1277799",
    "end": "1284460"
  },
  {
    "text": "arguments here that says can I ping the database kind of pain the database kind",
    "start": "1284460",
    "end": "1289499"
  },
  {
    "text": "of imitative this and just wait until it comes up sure",
    "start": "1289499",
    "end": "1295039"
  },
  {
    "start": "1297000",
    "end": "1332000"
  },
  {
    "text": "yeah so the question is is there eh getting an IP address yes so these are the pod IP addresses yeah and we'll talk",
    "start": "1298820",
    "end": "1305580"
  },
  {
    "text": "about that at the very end there's an infinite number of features that complex clustered systems need to",
    "start": "1305580",
    "end": "1314130"
  },
  {
    "text": "work and one of the focuses has been getting the core ideas in place these are pod IP spot IPS are fungible because",
    "start": "1314130",
    "end": "1320309"
  },
  {
    "text": "pods can come and go and depends on your network down the road there's been a request for the ability to have virtual",
    "start": "1320309",
    "end": "1326549"
  },
  {
    "text": "IPS for each member just it's not possible now we'll come back to it we definitely know it's a problem so to go",
    "start": "1326549",
    "end": "1333690"
  },
  {
    "text": "back to the demo let's hope that everything came up oh my gosh I got lucky so I've got my three members",
    "start": "1333690",
    "end": "1340530"
  },
  {
    "text": "running as you can see they all have the same names that I was talking about the demo on the overview page I can see I",
    "start": "1340530",
    "end": "1347309"
  },
  {
    "text": "have three pods and they're listening on two ports so there's nothing really as far as kubernetes and openshift is",
    "start": "1347309",
    "end": "1354510"
  },
  {
    "text": "concerned the pods are basically all the same all we saw was that they were part",
    "start": "1354510",
    "end": "1359850"
  },
  {
    "text": "of the same staple set and as we group them together in the UI the service didn't change all that much",
    "start": "1359850",
    "end": "1365549"
  },
  {
    "text": "let me jump on the command line so I'm going to run the demo and we'll see if",
    "start": "1365549",
    "end": "1371100"
  },
  {
    "text": "this works so let's hope so this is kind of Prashant's simple",
    "start": "1371100",
    "end": "1379110"
  },
  {
    "text": "hello world for zookeeper so what this does is it connects using exec into one",
    "start": "1379110",
    "end": "1385799"
  },
  {
    "text": "of the members of the zookeeper cluster so in this case I think he connected to zu0 and what he did was he just made a",
    "start": "1385799",
    "end": "1391950"
  },
  {
    "text": "simple create call that went in created a",
    "start": "1391950",
    "end": "1397440"
  },
  {
    "text": "single key in the zookeeper cluster and then we connect to the second instance and I don't know that it actually prints",
    "start": "1397440",
    "end": "1403409"
  },
  {
    "text": "the name out down here I see if I can find it",
    "start": "1403409",
    "end": "1407150"
  },
  {
    "text": "yeah so we exact into the show you the test script so you guys can see so the test script just execs into",
    "start": "1408740",
    "end": "1416659"
  },
  {
    "text": "yeah we just exact into the first and the last containers and we're at a",
    "start": "1420179",
    "end": "1426159"
  },
  {
    "text": "command line from zookeeper and we were able to read our key if I",
    "start": "1426159",
    "end": "1431639"
  },
  {
    "text": "shell into",
    "start": "1431639",
    "end": "1434940"
  },
  {
    "text": "if I go into the container or and bash because I want to type ahead",
    "start": "1437129",
    "end": "1443158"
  },
  {
    "text": "so just like any other kubernetes cluster I can exec into things right on",
    "start": "1447149",
    "end": "1452799"
  },
  {
    "text": "the cluster if I run an LS from within best member I see the instance so",
    "start": "1452799",
    "end": "1459720"
  },
  {
    "text": "there's a lot going on that's hidden inside the the set up logic here I think",
    "start": "1459720",
    "end": "1466029"
  },
  {
    "text": "the first thing that I would say is when we talk about stateful sets the idea is to put enough primitives in",
    "start": "1466029",
    "end": "1473049"
  },
  {
    "text": "place that this is easy to do impossible to do and possible to do safely but it",
    "start": "1473049",
    "end": "1478179"
  },
  {
    "start": "1474000",
    "end": "1566000"
  },
  {
    "text": "doesn't do it it's not magic right there's no magic here this is saying we have a basic idea we want to create multiple copies of something cou Bernays",
    "start": "1478179",
    "end": "1484179"
  },
  {
    "text": "is gonna go handle all the lifecycle of these if the machine goes down Cabrini's gonna take care of it it'll bring back a",
    "start": "1484179",
    "end": "1489399"
  },
  {
    "text": "new one if it can all the existing kubernetes primitives work but zookeeper we had to do a little bit of glue code",
    "start": "1489399",
    "end": "1494919"
  },
  {
    "text": "to set that zookeeper cluster up and that glue code is actually a really important part because each of those",
    "start": "1494919",
    "end": "1500889"
  },
  {
    "text": "clustered bits of software I showed those aren't simple systems right if you ever run an elasticsearch cluster or Kafka or zookeeper SCD or my sequel met",
    "start": "1500889",
    "end": "1508320"
  },
  {
    "text": "mexico master/slave sharded cluster or Hadoop or HDFS there's lots of things",
    "start": "1508320",
    "end": "1514029"
  },
  {
    "text": "that can go wrong I think I never want to leave people with the impression that stateful sets are",
    "start": "1514029",
    "end": "1520330"
  },
  {
    "text": "gonna just magically make problems go away but they're trying to provide a rock-solid primitive that people can",
    "start": "1520330",
    "end": "1526210"
  },
  {
    "text": "build higher level logic on if you have ten elasticsearch clusters you may still need to do some actions administrative",
    "start": "1526210",
    "end": "1533169"
  },
  {
    "text": "ly to keep those closures up-to-date do rolling updates and handle those tools and overtime the goal is to get the",
    "start": "1533169",
    "end": "1539080"
  },
  {
    "text": "community to be able to help pull together examples and tools that work but I suspect that for the next couple",
    "start": "1539080",
    "end": "1545259"
  },
  {
    "text": "of years when you look at these things you're going to still have systems that have really good fundamentals you can depend on",
    "start": "1545259",
    "end": "1551259"
  },
  {
    "text": "kubernetes to key things running and you'll build tools on top scripts systems patterns that make this easier",
    "start": "1551259",
    "end": "1558669"
  },
  {
    "text": "or they make it easier to reason about what's going on it's not going to magically solve all problems and so I I would",
    "start": "1558669",
    "end": "1567890"
  },
  {
    "text": "caution that if you're looking at staple sets today if you're trying to use staple sets if you're coming and getting involved in kubernetes you've heard",
    "start": "1567890",
    "end": "1573230"
  },
  {
    "text": "about these amazing things that can do all of these wonderful things for you take a deep breath step back you guys",
    "start": "1573230",
    "end": "1580039"
  },
  {
    "text": "know the systems that you run and you work with them we're gonna get better and better and better at these pieces but for now",
    "start": "1580039",
    "end": "1586149"
  },
  {
    "text": "they're still alpha and one of the reasons is still alpha and kubernetes 1/3 and 1/4 is a really big problem so I",
    "start": "1586149",
    "end": "1593120"
  },
  {
    "text": "talked before about a replica set that uses a persistent volume from AWS if I start up three of those then",
    "start": "1593120",
    "end": "1600880"
  },
  {
    "text": "if I started up three of those only one of them's gonna come up kubernetes will come along if that node goes down the",
    "start": "1601510",
    "end": "1608419"
  },
  {
    "text": "cloud provider and all this magic will actually work to detach that volume from the node and then you'll start up a new",
    "start": "1608419",
    "end": "1614029"
  },
  {
    "text": "pod so you can get availability that way there's a trick and so today in",
    "start": "1614029",
    "end": "1619309"
  },
  {
    "text": "kubernetes if a node goes down i've stops responding stops checking in we evacuated and after it's been evacuated",
    "start": "1619309",
    "end": "1625460"
  },
  {
    "text": "and if it hasn't responded for a long period of time we say you know what we don't need those pods anymore so we go",
    "start": "1625460",
    "end": "1631010"
  },
  {
    "text": "delete each and every one of them that doesn't mean that that pod stopped so the beauty of distributed systems is the",
    "start": "1631010",
    "end": "1637220"
  },
  {
    "text": "the masters have no idea what's happening on those remote systems unless they can talk and if they can't talk it",
    "start": "1637220",
    "end": "1643549"
  },
  {
    "text": "doesn't mean that the world is proceeding normally it means crazy and sane things are happening on the background and buyer beware and this is",
    "start": "1643549",
    "end": "1650269"
  },
  {
    "text": "something that sis amends for the last 50 years have dealt with and we've built more powerful tools to deal with this",
    "start": "1650269",
    "end": "1656149"
  },
  {
    "text": "things like pacemaker virtual IDs keep a live D we built systems that work",
    "start": "1656149",
    "end": "1662809"
  },
  {
    "text": "together to detect failures and to help administrators reason about them so",
    "start": "1662809",
    "end": "1668350"
  },
  {
    "start": "1668000",
    "end": "1880000"
  },
  {
    "text": "if the pod hasn't been stopped because for whatever reason that node can't talk",
    "start": "1668350",
    "end": "1673669"
  },
  {
    "text": "to the master but it can still talk to the other zookeeper members if we created in a new pod at that point we",
    "start": "1673669",
    "end": "1680330"
  },
  {
    "text": "would go and actually have two pods running at the same time because we forced delete it we said zu0 gone",
    "start": "1680330",
    "end": "1685670"
  },
  {
    "text": "deleted oh look there's no zeros anymore I'll go create another one so starting in 1-5 we fixed this and this was all my",
    "start": "1685670",
    "end": "1692090"
  },
  {
    "text": "fault by the way so when I put in graceful deletion to kubernetes I take full responsibility we were a little",
    "start": "1692090",
    "end": "1697850"
  },
  {
    "text": "aggressive about going in cleaning stuff up I was brought to sanity by the excellent community members including",
    "start": "1697850",
    "end": "1704810"
  },
  {
    "text": "some people in this room who I won't call up my name in starting in queue Bernays 1-5 and",
    "start": "1704810",
    "end": "1710300"
  },
  {
    "text": "this is really important when the system detects a node is down it'll record that",
    "start": "1710300",
    "end": "1716720"
  },
  {
    "text": "the node is down and it'll actually say I want to delete the pod but because we have graceful deletion in Cooper",
    "start": "1716720",
    "end": "1722630"
  },
  {
    "text": "Nettie's great solution says I want to start deleting the pod within a maximum window and when it's done the node says",
    "start": "1722630",
    "end": "1729920"
  },
  {
    "text": "okay it's done I go and I go delete the the pod format CD or from the API server which is basically the same thing in 1-5",
    "start": "1729920",
    "end": "1737030"
  },
  {
    "text": "when this happens we'll evacuate but we won't go and force delete stuff so it'll still be there in the API you'll still",
    "start": "1737030",
    "end": "1742940"
  },
  {
    "text": "see zu 0 it'll say it's unreachable as an admin you have a choice you can say I",
    "start": "1742940",
    "end": "1749660"
  },
  {
    "text": "know that the node this hit pod was on is gone if you're running on a cloud provider like GCE or a TBS this is gonna",
    "start": "1749660",
    "end": "1757310"
  },
  {
    "text": "get magically solved for you I'm through the beauty of cloud internet systems except when it doesn't work and your",
    "start": "1757310",
    "end": "1762470"
  },
  {
    "text": "data all gets lost don't don't sue me as an Eman you'll have the choice to break",
    "start": "1762470",
    "end": "1770290"
  },
  {
    "text": "the deadlock if you're an admin and you know that node is gone you can go forced believe the pod and the state will",
    "start": "1770290",
    "end": "1776660"
  },
  {
    "text": "settle will pick up the next piece and take over it'll go create a new pod but otherwise it'll fail safe fail in the",
    "start": "1776660",
    "end": "1784760"
  },
  {
    "text": "direction of causing the least possible damage and you'll run it or reduced availability so if you have three",
    "start": "1784760",
    "end": "1789890"
  },
  {
    "text": "members one goes down you'll have two that's enough for zookeeper to keep running but your failure margin will have been degraded and obviously if",
    "start": "1789890",
    "end": "1795950"
  },
  {
    "text": "you're running kubernetes today and you don't have an alerting system that tells you when nodes go down you should add an alerting system that tells you what",
    "start": "1795950",
    "end": "1801500"
  },
  {
    "text": "notes go down this the cluster is not perfect the real world is a crazy ugly place and bad things happen so",
    "start": "1801500",
    "end": "1808930"
  },
  {
    "text": "monitoring understanding how the system is working is critically important and this is a part that we're putting in",
    "start": "1808930",
    "end": "1814490"
  },
  {
    "text": "just to make sure that there's a there's a base level of logic that people can reason about to be a safe as possible",
    "start": "1814490",
    "end": "1819910"
  },
  {
    "text": "future work includes I talked about keep alive D and you know concepts like shoot",
    "start": "1819910",
    "end": "1825080"
  },
  {
    "text": "the other node in the head which sounds really traumatic and we probably won't call it that when it goes into cooper neighs because that might also be",
    "start": "1825080",
    "end": "1830450"
  },
  {
    "text": "somewhat contentious no shooting in kubernetes the idea is more broadly called fencing",
    "start": "1830450",
    "end": "1837140"
  },
  {
    "text": "node goes down you say I can't necessarily guarantee that I'm going to",
    "start": "1837140",
    "end": "1842840"
  },
  {
    "text": "be able to shut that note down cleanly but the rest of the cluster can act to",
    "start": "1842840",
    "end": "1848630"
  },
  {
    "text": "limit the impact that node might have on the rest of the cluster so this is really common in the storage space used",
    "start": "1848630",
    "end": "1855380"
  },
  {
    "text": "to be storage systems don't didn't have very good controls over who can talk to the storage system so if you have a nice",
    "start": "1855380",
    "end": "1860900"
  },
  {
    "text": "scuzzy or fiber channel device anybody on the network can go talk to that end point and if we were created another pot",
    "start": "1860900",
    "end": "1866060"
  },
  {
    "text": "and two people thought they were same one right the same data bad things happen fencing is usually the pattern of in",
    "start": "1866060",
    "end": "1873440"
  },
  {
    "text": "software or in hardware or at the networking layer or at any of a thousand",
    "start": "1873440",
    "end": "1879470"
  },
  {
    "text": "system saying block this device from talking to anyone else or don't accept",
    "start": "1879470",
    "end": "1885440"
  },
  {
    "start": "1880000",
    "end": "1931000"
  },
  {
    "text": "requests from this node that went down or talked to the ipmi Hardware on the",
    "start": "1885440",
    "end": "1890810"
  },
  {
    "text": "rack and physically shut it down and maybe there's people out there who have like a hundred pound iron weight that",
    "start": "1890810",
    "end": "1896570"
  },
  {
    "text": "drops on the machine or something I'd be pretty cool I'd like to see that but in the future we want to make it",
    "start": "1896570",
    "end": "1901760"
  },
  {
    "text": "possible for people to build fencing on top of kubernetes so that there's an independent agent that could be",
    "start": "1901760",
    "end": "1907400"
  },
  {
    "text": "customizable could be your admin tools it could be something that ships was part of the box that communities for bare metal systems they can come in and",
    "start": "1907400",
    "end": "1913970"
  },
  {
    "text": "say I've got failure detectors when I see something go wrong I can help kubernetes resolve this partition and",
    "start": "1913970",
    "end": "1920450"
  },
  {
    "text": "the fencer might be someone who if they're absolutely sure that machines gone they can take on immediate action so this is a lot of future work here the",
    "start": "1920450",
    "end": "1927980"
  },
  {
    "text": "goal is to build a sane reasonable system that people can layer on top of staple sets will enter beta and 1/5 it's",
    "start": "1927980",
    "end": "1934760"
  },
  {
    "text": "really important to us that you'll be able to reason and trust that the",
    "start": "1934760",
    "end": "1940340"
  },
  {
    "text": "stateful set is not going to lose data which is why 1/5 would the change I talked about is going to be when it goes",
    "start": "1940340",
    "end": "1945560"
  },
  {
    "text": "into beta we'll probably have a fairly long beta we want to get feedback examples features that are missing we",
    "start": "1945560",
    "end": "1951320"
  },
  {
    "text": "need the ability to update staple sets I'm sorry to like take away more of like the pretty pink bow around staple sets",
    "start": "1951320",
    "end": "1958140"
  },
  {
    "text": "the initial version and beta won't allow you to update them but you can script updates to do it and partially that's",
    "start": "1958140",
    "end": "1963670"
  },
  {
    "text": "because of crazy systems like I hope nobody hears from elasticsearch like elasticsearch where you actually need",
    "start": "1963670",
    "end": "1970450"
  },
  {
    "text": "because elastic search has sharding and there's internal concepts that need elastic search needs to know that you're",
    "start": "1970450",
    "end": "1976360"
  },
  {
    "text": "taking nodes down and react appropriately if you shut down a bunch of nodes and random or a bunch of pods",
    "start": "1976360",
    "end": "1981640"
  },
  {
    "text": "in random order and all that data gets lumped on to one box and people are still slamming data at that system you",
    "start": "1981640",
    "end": "1987330"
  },
  {
    "text": "might your whole cluster may come over so it's not a trivial problem we want to make more extensive tools for operating",
    "start": "1987330",
    "end": "1994210"
  },
  {
    "text": "sets if you guys saw the announcement from core OS last week they open sourced to tools that build on some of the ideas",
    "start": "1994210",
    "end": "1999610"
  },
  {
    "text": "that have been discussed in the in the staples that design the idea of",
    "start": "1999610",
    "end": "2006650"
  },
  {
    "text": "the idea of an operator which is basically just an automated process that makes it easy to stand up at CV clusters",
    "start": "2006650",
    "end": "2013110"
  },
  {
    "text": "or Prometheus cluster and handles that sort of resolution of what happened so Etsy D has its own particular foibles",
    "start": "2013110",
    "end": "2019290"
  },
  {
    "text": "about how its initialized and how you add and remove new members and the idea the operators you formalize some of that",
    "start": "2019290",
    "end": "2024360"
  },
  {
    "text": "knowledge into code but one of the challenges comes is well does that generally apply to elasticsearch no and",
    "start": "2024360",
    "end": "2030240"
  },
  {
    "text": "so one of the things we want to work with in the community is finding the points of commonality above this base",
    "start": "2030240",
    "end": "2036840"
  },
  {
    "text": "layer for things like operators and scripts and tooling and hooks that we might add back into staple sets over",
    "start": "2036840",
    "end": "2042720"
  },
  {
    "text": "time so and we want to add tests and documentation obviously if it's not easy to go try this out and understand how it",
    "start": "2042720",
    "end": "2048750"
  },
  {
    "text": "works it's not much good to people local persistent storage so I talked about persistent volumes if you have",
    "start": "2048750",
    "end": "2055230"
  },
  {
    "start": "2051000",
    "end": "2144000"
  },
  {
    "text": "dynamic provisioning but if you're running on bare metal and you don't have this massive cluster of auto provisioning stuff local persistent",
    "start": "2055230",
    "end": "2061830"
  },
  {
    "text": "storage is one way not the only way of making it a little bit easier to do I",
    "start": "2061830",
    "end": "2067440"
  },
  {
    "text": "create three members instead of having to go in provision asset block device for that I would like to be able to",
    "start": "2067440",
    "end": "2075629"
  },
  {
    "text": "create a local volume that's attached to that machine and I have to understand the trade-offs there right this is a",
    "start": "2075630",
    "end": "2080850"
  },
  {
    "text": "that data is located on that machine somebody eventually would have to go make it move you'd have to deal with",
    "start": "2080850",
    "end": "2086370"
  },
  {
    "text": "downtime we're not quite there yet but it's something that's on the roadmap for cube that enough people need local",
    "start": "2086370",
    "end": "2091980"
  },
  {
    "text": "persistent storage but it's gonna be really important to do you can emulate this a lot of ways today but we want to",
    "start": "2091980",
    "end": "2097980"
  },
  {
    "text": "make it easier in the box and as the agenda noticed software that needs",
    "start": "2097980",
    "end": "2103020"
  },
  {
    "text": "stabled IDs are stable IPS for each member so cassandra has a particularly",
    "start": "2103020",
    "end": "2108180"
  },
  {
    "text": "nasty habit of taking those nice generic DMS dresses we give it and then turning",
    "start": "2108180",
    "end": "2113340"
  },
  {
    "text": "of that into an IP address than sticking in a database so some of the work that we talked about it is possible to build",
    "start": "2113340",
    "end": "2119940"
  },
  {
    "text": "a script on top of that watches the Cassandra cluster and goes and updates the Cassandra member said we want to",
    "start": "2119940",
    "end": "2126180"
  },
  {
    "text": "explore solutions with a community but probably in the short term we have no good answer for this I'm sorry it's all",
    "start": "2126180",
    "end": "2132420"
  },
  {
    "text": "my fault we might in the future look at solutions like VIPs but bits are hard",
    "start": "2132420",
    "end": "2137570"
  },
  {
    "text": "question",
    "start": "2137570",
    "end": "2140570"
  },
  {
    "start": "2144000",
    "end": "2215000"
  },
  {
    "text": "there is no template expansion and so and this is this is a so the the the",
    "start": "2144499",
    "end": "2149519"
  },
  {
    "text": "question was there's no template expansion in that template template explain tune is really really",
    "start": "2149519",
    "end": "2155160"
  },
  {
    "text": "really really really hard probably there's Googlers in the room that can talk your ear off about all the foibles",
    "start": "2155160",
    "end": "2160470"
  },
  {
    "text": "about the ways that config management systems fit together and the different trade-offs they make we in favor of",
    "start": "2160470",
    "end": "2168950"
  },
  {
    "text": "starting down that path we said well let's take a step back what are the two things that we can provide on the Box IP",
    "start": "2168950",
    "end": "2175319"
  },
  {
    "text": "are stable identity and state it's still possible to use any config system you want to go generate helm charts should",
    "start": "2175319",
    "end": "2182670"
  },
  {
    "text": "support this today because helm charges just deal with API objects and so what we'd like to do is as that discussion",
    "start": "2182670",
    "end": "2188579"
  },
  {
    "text": "evolves kind of keep it orthogonal nothing in stateful sets depends on template expansion and because we try to",
    "start": "2188579",
    "end": "2194549"
  },
  {
    "text": "provide that base primitive and it there's actually no guarantee that a stateful set is just a single staple set",
    "start": "2194549",
    "end": "2201599"
  },
  {
    "text": "so if you have masters and workers you could end up with two staple sets and so we know that people are going to want to",
    "start": "2201599",
    "end": "2207839"
  },
  {
    "text": "compose these rather than sitting together so question back there",
    "start": "2207839",
    "end": "2213440"
  },
  {
    "text": "so everything that works on a pod today including node in turf in 'ti should",
    "start": "2215630",
    "end": "2221910"
  },
  {
    "text": "work today so all you have to do is set the beta annotation for intra pod",
    "start": "2221910",
    "end": "2227970"
  },
  {
    "text": "affinity and it'll spread them automatically in fact because every staple said basically requires a service",
    "start": "2227970",
    "end": "2233759"
  },
  {
    "text": "if you have that scheduling predicate set which it is by default I still think yes thank you Tim that's set by default",
    "start": "2233759",
    "end": "2240329"
  },
  {
    "text": "all members will land on another node unless there's only one node so I'm running on my laptop here in the demo I was running",
    "start": "2240329",
    "end": "2247380"
  },
  {
    "text": "in a VM there was no option so it put them all if you had a hard Finity rule it would have stopped at Zoo zero and",
    "start": "2247380",
    "end": "2253140"
  },
  {
    "text": "then started spewing errors other questions sir",
    "start": "2253140",
    "end": "2259730"
  },
  {
    "start": "2271000",
    "end": "2356000"
  },
  {
    "text": "yes oh and I didn't quite show it but the stateful set always goes from lowest",
    "start": "2272230",
    "end": "2277980"
  },
  {
    "text": "index the highest index if you deleted zero it would try to go and recreate",
    "start": "2277980",
    "end": "2283839"
  },
  {
    "text": "zero there's still a lot of wrinkles here the documentation that I alluded to we want to make it easier to describe",
    "start": "2283839",
    "end": "2289810"
  },
  {
    "text": "exactly what you can rely on and show examples I would say today the ordering",
    "start": "2289810",
    "end": "2295089"
  },
  {
    "text": "might be enough but it's easy to back yourself up again like the hard part about all this is it's distributed",
    "start": "2295089",
    "end": "2300790"
  },
  {
    "text": "systems which we can't magically solve so what we try to do in the staple set is we try more than anything else to be",
    "start": "2300790",
    "end": "2306609"
  },
  {
    "text": "consistent first we will never actively introduce inconsistency and so working",
    "start": "2306609",
    "end": "2313839"
  },
  {
    "text": "through how you would apply that inside you know for instance in zookeeper we will never create more than three and we",
    "start": "2313839",
    "end": "2320920"
  },
  {
    "text": "will never create two before the first one or never could zero indexing I",
    "start": "2320920",
    "end": "2326579"
  },
  {
    "text": "really wish we had done zero indexing this was my personal beef but I was overridden on that the third one will",
    "start": "2326579",
    "end": "2333910"
  },
  {
    "text": "never be created before the first one and so when you do initial bootstrapping if you've seen it come up at least once",
    "start": "2333910",
    "end": "2340540"
  },
  {
    "text": "you can make some reasoned decisions about it it's still a little tricky",
    "start": "2340540",
    "end": "2345869"
  },
  {
    "text": "so no and part of the reason for that is you can actually and there's been adjust",
    "start": "2355810",
    "end": "2361580"
  },
  {
    "start": "2356000",
    "end": "2501000"
  },
  {
    "text": "there's actually an active just a PR discussion on this if you put the cardinality as a downward API and then",
    "start": "2361580",
    "end": "2367910"
  },
  {
    "text": "you change that cardinality and then if you can't reason about so example here",
    "start": "2367910",
    "end": "2373490"
  },
  {
    "text": "as I start with three zookeeper nodes and then I scale up to four I scale up to oh sorry I scale up to seven I add",
    "start": "2373490",
    "end": "2378860"
  },
  {
    "text": "four more if you hard-coded three in your initial",
    "start": "2378860",
    "end": "2384560"
  },
  {
    "text": "template just as an environment variable or whatever then you could have formed an initial quorum we would have never created more if you hard-coded if that",
    "start": "2384560",
    "end": "2392120"
  },
  {
    "text": "changed we would have to go delete zero one and two and ensure that they observe it otherwise when we create those four",
    "start": "2392120",
    "end": "2398840"
  },
  {
    "text": "and it so the scenario would be the first three get partitioned before the before we detect it and those new four",
    "start": "2398840",
    "end": "2405650"
  },
  {
    "text": "come up that's actually a majority and if they're not carefully written to deal",
    "start": "2405650",
    "end": "2410870"
  },
  {
    "text": "with the fact that there may be another majority in the cluster when you resize them you could end up breaking it and",
    "start": "2410870",
    "end": "2416150"
  },
  {
    "text": "this is the this is the general challenges many of these systems have innate tools for handling membership",
    "start": "2416150",
    "end": "2421400"
  },
  {
    "text": "change that require certain set of guarantees there has to be a majority at all time to add new members and so one",
    "start": "2421400",
    "end": "2428210"
  },
  {
    "text": "of the things that we're trying to be very cautious about is allowing people to accidentally introduce",
    "start": "2428210",
    "end": "2433960"
  },
  {
    "text": "initialization splits and the documentation there's all of this is in people's heads or in pr's or discussions",
    "start": "2433960",
    "end": "2440570"
  },
  {
    "text": "we actually want to have a really good document that says here's how you can safely reason about it and the guarantees we provide it would be easy",
    "start": "2440570",
    "end": "2447110"
  },
  {
    "text": "to add that in the template but as you change the cluster membership if you didn't treat your own internal consensus",
    "start": "2447110",
    "end": "2452810"
  },
  {
    "text": "it's possible to get split brain sir",
    "start": "2452810",
    "end": "2457870"
  },
  {
    "start": "2501000",
    "end": "2584000"
  },
  {
    "text": "so I can't speak to Borg although I could call Tim out if he wants to talk about that he's hiding so the answer is",
    "start": "2501019",
    "end": "2509099"
  },
  {
    "text": "is that I in general and I think I can speak for everybody in the crew Bernays project is distributed systems are hard",
    "start": "2509099",
    "end": "2515220"
  },
  {
    "text": "they're not going away and rather than hide from that what we want to build is",
    "start": "2515220",
    "end": "2520650"
  },
  {
    "text": "a system that can eventually deal with both stateless and stateful applications correctly safely and work with the",
    "start": "2520650",
    "end": "2526410"
  },
  {
    "text": "communities to build it there's no other path forward right because everyone who needs a stateful database today can guarantee you they've got hacked up",
    "start": "2526410",
    "end": "2532740"
  },
  {
    "text": "versions no offense to anybody out here who has hacked up versions of anything we're using software that does all these",
    "start": "2532740",
    "end": "2538859"
  },
  {
    "text": "things today these aren't new problems as much as possible trying to bring",
    "start": "2538859",
    "end": "2543900"
  },
  {
    "text": "communities of expertise together so that we're all solving some of the same problems and everyone can benefit is I",
    "start": "2543900",
    "end": "2549839"
  },
  {
    "text": "think what kubernetes can bring to this it's it's worth trying because where there's no going back and if your",
    "start": "2549839",
    "end": "2555720"
  },
  {
    "text": "reasoning if you're every single person out there who cobbles together a script that sets the bouzouki per cluster on a",
    "start": "2555720",
    "end": "2561000"
  },
  {
    "text": "table us or on GCE or runs it in across the set of docker containers those are",
    "start": "2561000",
    "end": "2566130"
  },
  {
    "text": "really hard problems somewhere somehow we have to sit down and make sure that those can be built on good foundations",
    "start": "2566130",
    "end": "2572279"
  },
  {
    "text": "and I think there's solvable problems it's gonna take a while like it's not an easy problem but I think it's worth solving",
    "start": "2572279",
    "end": "2577609"
  },
  {
    "text": "sir",
    "start": "2577609",
    "end": "2580609"
  },
  {
    "start": "2584000",
    "end": "2637000"
  },
  {
    "text": "there's been a the proposal is basically yes that you'd create a persistent volume claim the scheduler would put you",
    "start": "2585460",
    "end": "2592930"
  },
  {
    "text": "on a machine that had enough storage to satisfy your request and then some process would go and record that so that",
    "start": "2592930",
    "end": "2599530"
  },
  {
    "text": "we could say no you are not allowed to run on a different machine for this persistent volume there's a couple of",
    "start": "2599530",
    "end": "2605200"
  },
  {
    "text": "proposals out there Tim nodded his head at that I think we'd like to do this over the next couple releases there's a",
    "start": "2605200",
    "end": "2610630"
  },
  {
    "text": "lot of bandwidth problems in trying to get because it's a hard problem I don't wanna screw this one up either so it is",
    "start": "2610630",
    "end": "2616240"
  },
  {
    "text": "every single person I know who has run kubernetes has asked for this it's",
    "start": "2616240",
    "end": "2621630"
  },
  {
    "text": "something we will do",
    "start": "2621630",
    "end": "2625140"
  },
  {
    "text": "I think that as an option so the question was our initialization container is a",
    "start": "2635680",
    "end": "2641380"
  },
  {
    "text": "good place to do secret download I think the answer is a cautious yes the problem",
    "start": "2641380",
    "end": "2646390"
  },
  {
    "text": "is is that for initialization containers to communicate with app containers you have to write to disk in the first place",
    "start": "2646390",
    "end": "2652119"
  },
  {
    "text": "so there's maybe like a small challenge there I would say that one of the scenarios that we have talked about",
    "start": "2652119",
    "end": "2657490"
  },
  {
    "text": "quite a lot is integrations with things like vault and other distributed secret systems where the responsibility for",
    "start": "2657490",
    "end": "2664900"
  },
  {
    "text": "getting the secrets into the container is clearly delineated from the application itself but we would need to",
    "start": "2664900",
    "end": "2670180"
  },
  {
    "text": "be very careful about how that's implemented",
    "start": "2670180",
    "end": "2674099"
  },
  {
    "start": "2681000",
    "end": "2774000"
  },
  {
    "text": "DNS is provided by kubernetes identity protection is provided by the",
    "start": "2682170",
    "end": "2688569"
  },
  {
    "text": "cluster and then the DNS reflects what's on the cluster today that is a strongly",
    "start": "2688569",
    "end": "2694000"
  },
  {
    "text": "consistent feedback loop with a couple of small wrinkles our goal would be to ensure that it is impossible for DNS to",
    "start": "2694000",
    "end": "2703089"
  },
  {
    "text": "be not something you can't reason about but knowing the part of DNS you could also look at the endpoints array that backs CNS and fetch that data because",
    "start": "2703089",
    "end": "2709450"
  },
  {
    "text": "that's stored in sed today that can be strongly consistent but we want to there's a caveat here which is the",
    "start": "2709450",
    "end": "2715450"
  },
  {
    "text": "answer should be absolutely yes and we need to make sure the systems and safeguards are in place so that it doesn't become no",
    "start": "2715450",
    "end": "2723180"
  },
  {
    "text": "that's true and the one of the ideas here would be that bootstrapping of",
    "start": "2727859",
    "end": "2735099"
  },
  {
    "text": "these clusters is usually the first part and then the members try to connect the masters anyway when the members try to",
    "start": "2735099",
    "end": "2741460"
  },
  {
    "text": "connect the masters if you've built a system that is consistent and you try to talk to something that's been split",
    "start": "2741460",
    "end": "2747160"
  },
  {
    "text": "brained either you caused the split brain by violating the cluster safety guarantees or you you're unable to join",
    "start": "2747160",
    "end": "2754180"
  },
  {
    "text": "that cluster so we want to be able to work through how people can write the system so that it is safe but yes there",
    "start": "2754180",
    "end": "2760329"
  },
  {
    "text": "are a lot of small things that are very important to call out and help people work through I",
    "start": "2760329",
    "end": "2766200"
  },
  {
    "text": "know that we're over time and any other class you can please come up here in a skiff after",
    "start": "2766200",
    "end": "2771620"
  },
  {
    "text": "[Applause]",
    "start": "2771620",
    "end": "2776500"
  }
]