[
  {
    "text": "hi everyone I'm delighted to be speaking",
    "start": "659",
    "end": "3899"
  },
  {
    "text": "at kubernetes days Sri Lanka 2022. my",
    "start": "3899",
    "end": "8280"
  },
  {
    "text": "name is dakshita ratnaika and I am a",
    "start": "8280",
    "end": "11760"
  },
  {
    "text": "developer Advocate at wso2",
    "start": "11760",
    "end": "14940"
  },
  {
    "text": "and",
    "start": "14940",
    "end": "16260"
  },
  {
    "text": "I'll be talking about how you can",
    "start": "16260",
    "end": "18180"
  },
  {
    "text": "simplify Network Services for real world",
    "start": "18180",
    "end": "20640"
  },
  {
    "text": "Cloud native applications with the",
    "start": "20640",
    "end": "23460"
  },
  {
    "text": "ballerina programming language",
    "start": "23460",
    "end": "26779"
  },
  {
    "text": "so what are Network Services",
    "start": "28980",
    "end": "32700"
  },
  {
    "text": "they're pretty much apis or",
    "start": "32700",
    "end": "34980"
  },
  {
    "text": "microservices",
    "start": "34980",
    "end": "36420"
  },
  {
    "text": "which are core components of cloud",
    "start": "36420",
    "end": "38760"
  },
  {
    "text": "native computing",
    "start": "38760",
    "end": "40920"
  },
  {
    "text": "breaking applications into small Loosely",
    "start": "40920",
    "end": "44760"
  },
  {
    "text": "coupled parts",
    "start": "44760",
    "end": "46800"
  },
  {
    "text": "makes it easier for developers to build",
    "start": "46800",
    "end": "49079"
  },
  {
    "text": "agile and resilient software",
    "start": "49079",
    "end": "52079"
  },
  {
    "text": "so these Network Services can be in the",
    "start": "52079",
    "end": "54180"
  },
  {
    "text": "form of a rest API a graphql API or a",
    "start": "54180",
    "end": "59460"
  },
  {
    "text": "grpc service and so on",
    "start": "59460",
    "end": "63198"
  },
  {
    "text": "so what is it like to build Network",
    "start": "63719",
    "end": "66659"
  },
  {
    "text": "Services",
    "start": "66659",
    "end": "68119"
  },
  {
    "text": "distributed applications are complex so",
    "start": "68119",
    "end": "72299"
  },
  {
    "text": "when you're dealing with a network",
    "start": "72299",
    "end": "75299"
  },
  {
    "text": "errors are a normal part of doing",
    "start": "75299",
    "end": "78240"
  },
  {
    "text": "business",
    "start": "78240",
    "end": "79560"
  },
  {
    "text": "especially when you consider the eight",
    "start": "79560",
    "end": "82020"
  },
  {
    "text": "fallacies of distributed computing that",
    "start": "82020",
    "end": "84720"
  },
  {
    "text": "you can see on this slide",
    "start": "84720",
    "end": "87119"
  },
  {
    "text": "to build Cloud native applications with",
    "start": "87119",
    "end": "89820"
  },
  {
    "text": "Network Services",
    "start": "89820",
    "end": "91799"
  },
  {
    "text": "developers must be well versed in the",
    "start": "91799",
    "end": "96420"
  },
  {
    "text": "right tools programming languages and",
    "start": "96420",
    "end": "99960"
  },
  {
    "text": "development and deployment techniques",
    "start": "99960",
    "end": "103938"
  },
  {
    "text": "so in light of this",
    "start": "104640",
    "end": "107880"
  },
  {
    "text": "what's the role of the programming",
    "start": "107880",
    "end": "110340"
  },
  {
    "text": "language that you use to develop Network",
    "start": "110340",
    "end": "113340"
  },
  {
    "text": "Services",
    "start": "113340",
    "end": "114899"
  },
  {
    "text": "can you use any mainstream popular",
    "start": "114899",
    "end": "118020"
  },
  {
    "text": "programming language to build your",
    "start": "118020",
    "end": "119759"
  },
  {
    "text": "service and apis",
    "start": "119759",
    "end": "121560"
  },
  {
    "text": "yes most of the time",
    "start": "121560",
    "end": "123780"
  },
  {
    "text": "some are more suited than others",
    "start": "123780",
    "end": "127380"
  },
  {
    "text": "but are these languages truly Cloud",
    "start": "127380",
    "end": "130080"
  },
  {
    "text": "native",
    "start": "130080",
    "end": "131400"
  },
  {
    "text": "or are they repurposed for the cloud",
    "start": "131400",
    "end": "133879"
  },
  {
    "text": "with libraries and Frameworks",
    "start": "133879",
    "end": "138000"
  },
  {
    "text": "what if developers want to go beyond the",
    "start": "138000",
    "end": "142500"
  },
  {
    "text": "scope of the framework",
    "start": "142500",
    "end": "144420"
  },
  {
    "text": "do developers stick to these libraries",
    "start": "144420",
    "end": "146640"
  },
  {
    "text": "and Frameworks nevertheless because",
    "start": "146640",
    "end": "148800"
  },
  {
    "text": "they're familiar with the underlying",
    "start": "148800",
    "end": "150480"
  },
  {
    "text": "programming language",
    "start": "150480",
    "end": "152280"
  },
  {
    "text": "and some other questions to ask are",
    "start": "152280",
    "end": "155700"
  },
  {
    "text": "um",
    "start": "155700",
    "end": "157080"
  },
  {
    "text": "do these languages treat the network",
    "start": "157080",
    "end": "159239"
  },
  {
    "text": "aspects as an inherent part of the",
    "start": "159239",
    "end": "161580"
  },
  {
    "text": "language",
    "start": "161580",
    "end": "162599"
  },
  {
    "text": "and what about data handling how do they",
    "start": "162599",
    "end": "165180"
  },
  {
    "text": "see realize data on The Wire",
    "start": "165180",
    "end": "168859"
  },
  {
    "text": "um",
    "start": "168959",
    "end": "170459"
  },
  {
    "text": "to data in memory",
    "start": "170459",
    "end": "173099"
  },
  {
    "text": "so I can safely say that",
    "start": "173099",
    "end": "176640"
  },
  {
    "text": "none of the mainstream programming",
    "start": "176640",
    "end": "178680"
  },
  {
    "text": "languages as of now",
    "start": "178680",
    "end": "181200"
  },
  {
    "text": "have been purposely",
    "start": "181200",
    "end": "183780"
  },
  {
    "text": "built with the right level of",
    "start": "183780",
    "end": "185400"
  },
  {
    "text": "abstractions to ease the use and",
    "start": "185400",
    "end": "187620"
  },
  {
    "text": "creation of Network Services",
    "start": "187620",
    "end": "191480"
  },
  {
    "text": "enter the ballerina programming language",
    "start": "192180",
    "end": "196019"
  },
  {
    "text": "so the key goal of the ballerina",
    "start": "196019",
    "end": "198599"
  },
  {
    "text": "language is to significantly simplify",
    "start": "198599",
    "end": "203099"
  },
  {
    "text": "uh the creation integration and usage of",
    "start": "203099",
    "end": "208560"
  },
  {
    "text": "apis or microservices be it rest graphql",
    "start": "208560",
    "end": "214080"
  },
  {
    "text": "or grpc",
    "start": "214080",
    "end": "216480"
  },
  {
    "text": "the latest Swan Lake release comes with",
    "start": "216480",
    "end": "220799"
  },
  {
    "text": "many remarkable features that will be",
    "start": "220799",
    "end": "222780"
  },
  {
    "text": "appreciated by",
    "start": "222780",
    "end": "224340"
  },
  {
    "text": "any service developer so instead of",
    "start": "224340",
    "end": "227340"
  },
  {
    "text": "repurposing existing Technologies",
    "start": "227340",
    "end": "230040"
  },
  {
    "text": "ballerina is purposely designed to build",
    "start": "230040",
    "end": "233700"
  },
  {
    "text": "interactions over the network",
    "start": "233700",
    "end": "236819"
  },
  {
    "text": "um abstracting away the hard parts and",
    "start": "236819",
    "end": "239299"
  },
  {
    "text": "allowing you to focus on Core Business",
    "start": "239299",
    "end": "243180"
  },
  {
    "text": "logic",
    "start": "243180",
    "end": "245780"
  },
  {
    "text": "so I'm going to talk about a few",
    "start": "245879",
    "end": "248580"
  },
  {
    "text": "um",
    "start": "248580",
    "end": "249439"
  },
  {
    "text": "characteristics or offerings uh of the",
    "start": "249439",
    "end": "253560"
  },
  {
    "text": "Ballina language that makes it uh a",
    "start": "253560",
    "end": "257400"
  },
  {
    "text": "really good programming language to",
    "start": "257400",
    "end": "260100"
  },
  {
    "text": "program your services so the first one I",
    "start": "260100",
    "end": "262740"
  },
  {
    "text": "want to talk about is the ballerina",
    "start": "262740",
    "end": "265620"
  },
  {
    "text": "language being Network oriented so along",
    "start": "265620",
    "end": "269040"
  },
  {
    "text": "with a network aware type system",
    "start": "269040",
    "end": "271400"
  },
  {
    "text": "ballerina comes with fundamental",
    "start": "271400",
    "end": "276300"
  },
  {
    "text": "syntax abstraction for working with",
    "start": "276300",
    "end": "278940"
  },
  {
    "text": "Network Services",
    "start": "278940",
    "end": "280860"
  },
  {
    "text": "so ballerina has this concept or it",
    "start": "280860",
    "end": "283740"
  },
  {
    "text": "accommodates the concept of a service",
    "start": "283740",
    "end": "286320"
  },
  {
    "text": "and a service can be written in just",
    "start": "286320",
    "end": "288600"
  },
  {
    "text": "three or four lines of ballerina code",
    "start": "288600",
    "end": "290940"
  },
  {
    "text": "and services in Ballina are powered by",
    "start": "290940",
    "end": "295259"
  },
  {
    "text": "listeners and libraries and uh",
    "start": "295259",
    "end": "298979"
  },
  {
    "text": "so that's how a service can work right",
    "start": "298979",
    "end": "302360"
  },
  {
    "text": "and because ballina's service approach",
    "start": "302360",
    "end": "305280"
  },
  {
    "text": "is coupled with its unique wire-oriented",
    "start": "305280",
    "end": "308280"
  },
  {
    "text": "type system",
    "start": "308280",
    "end": "310199"
  },
  {
    "text": "you can generate an interface",
    "start": "310199",
    "end": "312960"
  },
  {
    "text": "description from the ballerina code",
    "start": "312960",
    "end": "315300"
  },
  {
    "text": "so this can be an open API spec an AC an",
    "start": "315300",
    "end": "319139"
  },
  {
    "text": "async API specification or a graphql",
    "start": "319139",
    "end": "322259"
  },
  {
    "text": "specification",
    "start": "322259",
    "end": "324900"
  },
  {
    "text": "so you can actually write regular",
    "start": "324900",
    "end": "326880"
  },
  {
    "text": "balloon service objects and generate",
    "start": "326880",
    "end": "329400"
  },
  {
    "text": "your client code so the combination of",
    "start": "329400",
    "end": "332100"
  },
  {
    "text": "these features",
    "start": "332100",
    "end": "334280"
  },
  {
    "text": "enables Cloud integration to work",
    "start": "334280",
    "end": "337139"
  },
  {
    "text": "smoothly",
    "start": "337139",
    "end": "338940"
  },
  {
    "text": "and then you also have client objects so",
    "start": "338940",
    "end": "341699"
  },
  {
    "text": "like you have service objects you also",
    "start": "341699",
    "end": "343919"
  },
  {
    "text": "have",
    "start": "343919",
    "end": "345479"
  },
  {
    "text": "um client objects to consume remote",
    "start": "345479",
    "end": "347699"
  },
  {
    "text": "services",
    "start": "347699",
    "end": "348840"
  },
  {
    "text": "the outbound Network interactions are",
    "start": "348840",
    "end": "351300"
  },
  {
    "text": "represented by client objects and",
    "start": "351300",
    "end": "353639"
  },
  {
    "text": "clients have remote methods that",
    "start": "353639",
    "end": "356639"
  },
  {
    "text": "represent outbound interactions with a",
    "start": "356639",
    "end": "359520"
  },
  {
    "text": "remote system",
    "start": "359520",
    "end": "361139"
  },
  {
    "text": "and",
    "start": "361139",
    "end": "363060"
  },
  {
    "text": "you also have sequence diagrams for",
    "start": "363060",
    "end": "365460"
  },
  {
    "text": "Network interactions so I'll be showing",
    "start": "365460",
    "end": "367440"
  },
  {
    "text": "that in um in one of the later slides",
    "start": "367440",
    "end": "372740"
  },
  {
    "text": "and ballerina is data oriented and is",
    "start": "373680",
    "end": "377400"
  },
  {
    "text": "not object oriented",
    "start": "377400",
    "end": "379860"
  },
  {
    "text": "um in in network interactions the object",
    "start": "379860",
    "end": "382819"
  },
  {
    "text": "oriented approach",
    "start": "382819",
    "end": "384900"
  },
  {
    "text": "bundles data with the code which is not",
    "start": "384900",
    "end": "387419"
  },
  {
    "text": "the most optimal way to send data across",
    "start": "387419",
    "end": "390539"
  },
  {
    "text": "widely distributed networks of",
    "start": "390539",
    "end": "392880"
  },
  {
    "text": "microservices and apis",
    "start": "392880",
    "end": "395460"
  },
  {
    "text": "and that's why ballerina comes with a",
    "start": "395460",
    "end": "399479"
  },
  {
    "text": "a network friendly type system with",
    "start": "399479",
    "end": "401699"
  },
  {
    "text": "powerful features to handle data on the",
    "start": "401699",
    "end": "403860"
  },
  {
    "text": "on the wire",
    "start": "403860",
    "end": "406460"
  },
  {
    "text": "um ballina's plane in memory data values",
    "start": "406500",
    "end": "409199"
  },
  {
    "text": "are pretty much in memory Json so this",
    "start": "409199",
    "end": "411960"
  },
  {
    "text": "allows a Json payload from The Wire to",
    "start": "411960",
    "end": "414360"
  },
  {
    "text": "come immediately into the language and",
    "start": "414360",
    "end": "416580"
  },
  {
    "text": "we operate it on without transformation",
    "start": "416580",
    "end": "418139"
  },
  {
    "text": "or serialization we know that Json is",
    "start": "418139",
    "end": "421380"
  },
  {
    "text": "the ma is the most widely used",
    "start": "421380",
    "end": "424740"
  },
  {
    "text": "um",
    "start": "424740",
    "end": "425520"
  },
  {
    "text": "format",
    "start": "425520",
    "end": "427080"
  },
  {
    "text": "on the network today",
    "start": "427080",
    "end": "429419"
  },
  {
    "text": "so Barona also comes with a set of",
    "start": "429419",
    "end": "432840"
  },
  {
    "text": "language features for working on data",
    "start": "432840",
    "end": "434960"
  },
  {
    "text": "out of which the",
    "start": "434960",
    "end": "438020"
  },
  {
    "text": "integrated query feature stands out so",
    "start": "438020",
    "end": "441300"
  },
  {
    "text": "this feature basically allows you to",
    "start": "441300",
    "end": "442919"
  },
  {
    "text": "query the data using an SQL like syntax",
    "start": "442919",
    "end": "445979"
  },
  {
    "text": "uh",
    "start": "445979",
    "end": "447539"
  },
  {
    "text": "or credits uh so basically query",
    "start": "447539",
    "end": "451259"
  },
  {
    "text": "Expressions contain a set of Clauses",
    "start": "451259",
    "end": "453419"
  },
  {
    "text": "similar to SQL to process the data",
    "start": "453419",
    "end": "456900"
  },
  {
    "text": "and there's also a table data which",
    "start": "456900",
    "end": "458940"
  },
  {
    "text": "makes it easy to work with relational",
    "start": "458940",
    "end": "460919"
  },
  {
    "text": "and tabular data",
    "start": "460919",
    "end": "464360"
  },
  {
    "text": "so",
    "start": "465720",
    "end": "466919"
  },
  {
    "text": "um",
    "start": "466919",
    "end": "467940"
  },
  {
    "text": "Barina allows you to do enterprise",
    "start": "467940",
    "end": "470340"
  },
  {
    "text": "Enterprise grade development so that",
    "start": "470340",
    "end": "473940"
  },
  {
    "text": "means basically to run Services reliably",
    "start": "473940",
    "end": "476280"
  },
  {
    "text": "securely and safely for a long period of",
    "start": "476280",
    "end": "478919"
  },
  {
    "text": "time on multiple environments",
    "start": "478919",
    "end": "482099"
  },
  {
    "text": "ballerina provides these capabilities",
    "start": "482099",
    "end": "484860"
  },
  {
    "text": "so when you talk about configurability",
    "start": "484860",
    "end": "487620"
  },
  {
    "text": "um ballerina takes the concept of",
    "start": "487620",
    "end": "489800"
  },
  {
    "text": "configurability into the language and",
    "start": "489800",
    "end": "492720"
  },
  {
    "text": "that allows us to keep the same program",
    "start": "492720",
    "end": "496220"
  },
  {
    "text": "and move from one environment to another",
    "start": "496220",
    "end": "500400"
  },
  {
    "text": "environment without being explicit about",
    "start": "500400",
    "end": "503340"
  },
  {
    "text": "what the dependencies are",
    "start": "503340",
    "end": "505680"
  },
  {
    "text": "and then you have transactions",
    "start": "505680",
    "end": "509099"
  },
  {
    "text": "um writing ballerina programs that use",
    "start": "509099",
    "end": "511379"
  },
  {
    "text": "transactions is quite straightforward",
    "start": "511379",
    "end": "513240"
  },
  {
    "text": "because transactions are a language",
    "start": "513240",
    "end": "515700"
  },
  {
    "text": "feature",
    "start": "515700",
    "end": "518300"
  },
  {
    "text": "um transactions in ballerina also work",
    "start": "518339",
    "end": "522240"
  },
  {
    "text": "really work well with the network",
    "start": "522240",
    "end": "525060"
  },
  {
    "text": "interaction features that means the",
    "start": "525060",
    "end": "527760"
  },
  {
    "text": "clients and services to support",
    "start": "527760",
    "end": "529820"
  },
  {
    "text": "distributed transactions",
    "start": "529820",
    "end": "533600"
  },
  {
    "text": "a lot of effort has been taken to handle",
    "start": "536459",
    "end": "539220"
  },
  {
    "text": "errors reliably and consistently within",
    "start": "539220",
    "end": "541980"
  },
  {
    "text": "the barrier language",
    "start": "541980",
    "end": "544019"
  },
  {
    "text": "um you have to be able to look at the",
    "start": "544019",
    "end": "546060"
  },
  {
    "text": "program and understand if there is an",
    "start": "546060",
    "end": "548399"
  },
  {
    "text": "error where an error could",
    "start": "548399",
    "end": "551700"
  },
  {
    "text": "take place and how the flow of control",
    "start": "551700",
    "end": "555000"
  },
  {
    "text": "is going to change so without using",
    "start": "555000",
    "end": "557519"
  },
  {
    "text": "exceptions ballerina allows the",
    "start": "557519",
    "end": "559620"
  },
  {
    "text": "developer to use the error data type",
    "start": "559620",
    "end": "562380"
  },
  {
    "text": "with explicit error control flow",
    "start": "562380",
    "end": "566459"
  },
  {
    "text": "when we talk about concurrency",
    "start": "566459",
    "end": "568880"
  },
  {
    "text": "concurrency is a fundamental requirement",
    "start": "568880",
    "end": "571440"
  },
  {
    "text": "in the cloud because your network",
    "start": "571440",
    "end": "573420"
  },
  {
    "text": "operations have high latency",
    "start": "573420",
    "end": "576240"
  },
  {
    "text": "so using threads and strands for",
    "start": "576240",
    "end": "579360"
  },
  {
    "text": "asynchronous communication ballerina",
    "start": "579360",
    "end": "581279"
  },
  {
    "text": "provides a simpler and intuitive",
    "start": "581279",
    "end": "585420"
  },
  {
    "text": "approach to concurrency",
    "start": "585420",
    "end": "588920"
  },
  {
    "text": "then it's important to highlight that",
    "start": "588980",
    "end": "592920"
  },
  {
    "text": "while ballerina provides better ways to",
    "start": "592920",
    "end": "595920"
  },
  {
    "text": "write services",
    "start": "595920",
    "end": "597240"
  },
  {
    "text": "it also comes with a subset of features",
    "start": "597240",
    "end": "599760"
  },
  {
    "text": "that are familiar",
    "start": "599760",
    "end": "601680"
  },
  {
    "text": "to a programmer of a c family language",
    "start": "601680",
    "end": "605160"
  },
  {
    "text": "such as Java C plus plus or c",
    "start": "605160",
    "end": "609180"
  },
  {
    "text": "and basically the the code is not",
    "start": "609180",
    "end": "613380"
  },
  {
    "text": "something that's alien to you you can",
    "start": "613380",
    "end": "615959"
  },
  {
    "text": "understand how it works right",
    "start": "615959",
    "end": "619380"
  },
  {
    "text": "foreign",
    "start": "619380",
    "end": "621260"
  },
  {
    "text": "ER supports generating Docker and",
    "start": "621260",
    "end": "624300"
  },
  {
    "text": "kubernetes artifacts from code with",
    "start": "624300",
    "end": "626940"
  },
  {
    "text": "simple configurations",
    "start": "626940",
    "end": "629040"
  },
  {
    "text": "and this simplifies the experience of",
    "start": "629040",
    "end": "632160"
  },
  {
    "text": "developing and deploying ballerina code",
    "start": "632160",
    "end": "635339"
  },
  {
    "text": "in the cloud",
    "start": "635339",
    "end": "638040"
  },
  {
    "text": "to deploy a code into different",
    "start": "638040",
    "end": "639959"
  },
  {
    "text": "different Cloud platforms such as AWS",
    "start": "639959",
    "end": "643339"
  },
  {
    "text": "and Microsoft Microsoft Azure",
    "start": "643339",
    "end": "646519"
  },
  {
    "text": "annotations on service objects are used",
    "start": "646519",
    "end": "649019"
  },
  {
    "text": "to enable easy Cloud deployment",
    "start": "649019",
    "end": "651420"
  },
  {
    "text": "uh the ballerina compiler can generate",
    "start": "651420",
    "end": "654920"
  },
  {
    "text": "artifacts such as",
    "start": "654920",
    "end": "657079"
  },
  {
    "text": "Docker files Docker images kubernetes",
    "start": "657079",
    "end": "661140"
  },
  {
    "text": "yaml files and serverless functions",
    "start": "661140",
    "end": "665640"
  },
  {
    "text": "so like I mentioned before",
    "start": "665640",
    "end": "668180"
  },
  {
    "text": "ballerina has",
    "start": "668180",
    "end": "671519"
  },
  {
    "text": "um a graphical aspect to it uh via",
    "start": "671519",
    "end": "674640"
  },
  {
    "text": "sequence diagrams so ballerina provides",
    "start": "674640",
    "end": "678300"
  },
  {
    "text": "an intrinsic graphical View",
    "start": "678300",
    "end": "681360"
  },
  {
    "text": "so the",
    "start": "681360",
    "end": "683480"
  },
  {
    "text": "unique graphical view of ballerina",
    "start": "683480",
    "end": "686040"
  },
  {
    "text": "wasn't an afterthought",
    "start": "686040",
    "end": "688440"
  },
  {
    "text": "it was in fact it has been designed",
    "start": "688440",
    "end": "691260"
  },
  {
    "text": "deeply into the language in order to",
    "start": "691260",
    "end": "693300"
  },
  {
    "text": "provide",
    "start": "693300",
    "end": "694860"
  },
  {
    "text": "um real insight with respect to a",
    "start": "694860",
    "end": "696899"
  },
  {
    "text": "functions or services",
    "start": "696899",
    "end": "699959"
  },
  {
    "text": "Network interactions and",
    "start": "699959",
    "end": "703500"
  },
  {
    "text": "their use of concurrency",
    "start": "703500",
    "end": "706320"
  },
  {
    "text": "so a sequence diagram is a kind of",
    "start": "706320",
    "end": "708839"
  },
  {
    "text": "diagram that works best for that so you",
    "start": "708839",
    "end": "711240"
  },
  {
    "text": "can see that this is like a mix of a",
    "start": "711240",
    "end": "714060"
  },
  {
    "text": "flow chart and a sequence diagram",
    "start": "714060",
    "end": "718019"
  },
  {
    "text": "um",
    "start": "718019",
    "end": "719040"
  },
  {
    "text": "so a function in a ballerina program has",
    "start": "719040",
    "end": "722279"
  },
  {
    "text": "equivalent representations in both",
    "start": "722279",
    "end": "724860"
  },
  {
    "text": "textual syntax and as a sequence diagram",
    "start": "724860",
    "end": "727740"
  },
  {
    "text": "that means you can switch between the",
    "start": "727740",
    "end": "729899"
  },
  {
    "text": "two views seamlessly",
    "start": "729899",
    "end": "732980"
  },
  {
    "text": "and in addition to the powerful language",
    "start": "734480",
    "end": "738060"
  },
  {
    "text": "features",
    "start": "738060",
    "end": "739560"
  },
  {
    "text": "ballerina is batteries included which",
    "start": "739560",
    "end": "742680"
  },
  {
    "text": "means that",
    "start": "742680",
    "end": "744899"
  },
  {
    "text": "um",
    "start": "744899",
    "end": "746220"
  },
  {
    "text": "which means that the language comes with",
    "start": "746220",
    "end": "748260"
  },
  {
    "text": "a support system right and that means",
    "start": "748260",
    "end": "751440"
  },
  {
    "text": "that the language comes with a rich",
    "start": "751440",
    "end": "753060"
  },
  {
    "text": "standard library with libraries for",
    "start": "753060",
    "end": "756360"
  },
  {
    "text": "network data messaging and communication",
    "start": "756360",
    "end": "759779"
  },
  {
    "text": "protocols such as HTTP HTTP 2 Nets grpc",
    "start": "759779",
    "end": "765800"
  },
  {
    "text": "websub websocket",
    "start": "765800",
    "end": "768360"
  },
  {
    "text": "Etc",
    "start": "768360",
    "end": "769380"
  },
  {
    "text": "and we have a package management system",
    "start": "769380",
    "end": "771959"
  },
  {
    "text": "which allows you to pull and push",
    "start": "771959",
    "end": "774600"
  },
  {
    "text": "your ballerina packages",
    "start": "774600",
    "end": "777600"
  },
  {
    "text": "then there's a testing framework and",
    "start": "777600",
    "end": "781920"
  },
  {
    "text": "and we have we have extensions or",
    "start": "781920",
    "end": "784440"
  },
  {
    "text": "plugins for popular IDs the most notable",
    "start": "784440",
    "end": "787740"
  },
  {
    "text": "one being the visual studio code plugin",
    "start": "787740",
    "end": "791940"
  },
  {
    "text": "and structured document documentation",
    "start": "791940",
    "end": "794459"
  },
  {
    "text": "among other tools to support the",
    "start": "794459",
    "end": "797880"
  },
  {
    "text": "language",
    "start": "797880",
    "end": "800060"
  },
  {
    "text": "and",
    "start": "801540",
    "end": "802920"
  },
  {
    "text": "if you want to learn more about the",
    "start": "802920",
    "end": "804660"
  },
  {
    "text": "language the website is the best place",
    "start": "804660",
    "end": "806880"
  },
  {
    "text": "to go it's got a wealth of resources and",
    "start": "806880",
    "end": "809940"
  },
  {
    "text": "documentation to help you get started",
    "start": "809940",
    "end": "812220"
  },
  {
    "text": "and with that I'd like to conclude my 10",
    "start": "812220",
    "end": "815639"
  },
  {
    "text": "minute presentation on the ballerina",
    "start": "815639",
    "end": "817500"
  },
  {
    "text": "programming language",
    "start": "817500",
    "end": "819019"
  },
  {
    "text": "I hope it was useful learning about the",
    "start": "819019",
    "end": "822060"
  },
  {
    "text": "Barona language",
    "start": "822060",
    "end": "824220"
  },
  {
    "text": "thanks for joining",
    "start": "824220",
    "end": "827120"
  }
]