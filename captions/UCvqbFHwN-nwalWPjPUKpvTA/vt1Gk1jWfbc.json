[
  {
    "text": "javo Jackson ik1 Gao Singh Li Dao Zhi Li",
    "start": "230",
    "end": "8550"
  },
  {
    "text": "yeah [Applause]",
    "start": "8550",
    "end": "14839"
  },
  {
    "text": "unfortunately my duolingo subscription doesn't go much further so I have to do",
    "start": "14839",
    "end": "19859"
  },
  {
    "text": "this in English I apologize alright so",
    "start": "19859",
    "end": "26220"
  },
  {
    "text": "today I want to talk to you about modern service networking I want to talk to you about a new feature of consult called connect and I want to talk to you about",
    "start": "26220",
    "end": "33180"
  },
  {
    "text": "how you can use it with kubernetes and how we can use envoy super-easy",
    "start": "33180",
    "end": "40910"
  },
  {
    "text": "so I work as a developer advocate at Hoshi caught and I've worked in the",
    "start": "40910",
    "end": "46440"
  },
  {
    "text": "industry for like over 20 years now I do quite a lot of gray hair and the",
    "start": "46440",
    "end": "54149"
  },
  {
    "text": "key thing that I've always struggled with I've always had a problem with when",
    "start": "54149",
    "end": "59340"
  },
  {
    "text": "I been building systems is that networks are a pain right and network security is",
    "start": "59340",
    "end": "66869"
  },
  {
    "text": "a pain and n you add dynamism like",
    "start": "66869",
    "end": "72570"
  },
  {
    "text": "schedulers like auto-scaling groups and the pain is just amplified but now we've",
    "start": "72570",
    "end": "80070"
  },
  {
    "text": "got the service mesh so before we talk about connect let's look at what is our",
    "start": "80070",
    "end": "86070"
  },
  {
    "text": "problem right what is the problem with networks so the problem with networks is",
    "start": "86070",
    "end": "93840"
  },
  {
    "text": "that when you don't treat them right when you think about things in terms of this the perimeter firewall because you",
    "start": "93840",
    "end": "102540"
  },
  {
    "text": "think well hey I've got a perimeter firewall and that for my applications safe but that's not true right because",
    "start": "102540",
    "end": "109890"
  },
  {
    "text": "the key thing is about the way that a lot of modern attacks are working is",
    "start": "109890",
    "end": "114960"
  },
  {
    "text": "that people are bypassing that perimeter firewall and they're bypassing it because they're looking at application",
    "start": "114960",
    "end": "121320"
  },
  {
    "text": "code level bonner abilities that gives them an access into your network so I",
    "start": "121320",
    "end": "128910"
  },
  {
    "text": "really like this quote from from the sim attacking security report and it's that you know one of the key phases in",
    "start": "128910",
    "end": "135480"
  },
  {
    "text": "most targeted attacks is what's known as lateral movement attackers rarely look",
    "start": "135480",
    "end": "141000"
  },
  {
    "text": "out and manage to compromise the computer and this is kind of the key thing right that once you've compromised",
    "start": "141000",
    "end": "148079"
  },
  {
    "text": "that perimeter firewall this is when an attacker can run amok in your network",
    "start": "148079",
    "end": "153120"
  },
  {
    "text": "this is when they're going to be starting to look around and try to do the real damage they're not necessarily",
    "start": "153120",
    "end": "158670"
  },
  {
    "text": "gonna be stealing all of your data from the first service they hit simple",
    "start": "158670",
    "end": "164549"
  },
  {
    "text": "example how does that work well as an attacker I've identified that you've got",
    "start": "164549",
    "end": "170879"
  },
  {
    "text": "a service and it's a front-end service for your e-commerce website it's a favorite service it doesn't have",
    "start": "170879",
    "end": "177659"
  },
  {
    "text": "any real data but what I've identified is there's a vulnerability in this application it's",
    "start": "177659",
    "end": "184260"
  },
  {
    "text": "no js' there's a framework vulnerability which allows me to do remote code execution from that remote code",
    "start": "184260",
    "end": "192329"
  },
  {
    "text": "execution I can execute operating system commands on the underlying container",
    "start": "192329",
    "end": "197730"
  },
  {
    "text": "because well the containers not secure either but the key thing is that that's",
    "start": "197730",
    "end": "203849"
  },
  {
    "text": "not my destination like I can't really get anything out of that service but what I'm starting to do is I'm going to",
    "start": "203849",
    "end": "210030"
  },
  {
    "text": "start to look to move laterally I want to be starting to probe the network looking for other services looking for",
    "start": "210030",
    "end": "217680"
  },
  {
    "text": "other opportunities that I can move deeper into your system potentially other systems that are vulnerabilities",
    "start": "217680",
    "end": "224069"
  },
  {
    "text": "that I can attack so what I do in this instance is I manage to to get in deep",
    "start": "224069",
    "end": "230970"
  },
  {
    "text": "enough I managed to start being able to read traffic off your network I realize that you've got an order processing",
    "start": "230970",
    "end": "237389"
  },
  {
    "text": "system I realize you've got a transaction processing system but",
    "start": "237389",
    "end": "243690"
  },
  {
    "text": "actually you know they're secured you've got JWT you've got authorization between",
    "start": "243690",
    "end": "249720"
  },
  {
    "text": "those two services except you're not using the transport level encryption so",
    "start": "249720",
    "end": "257579"
  },
  {
    "text": "I've got in to your network I've snooped around I've identified two services which I should have no permission to be",
    "start": "257579",
    "end": "264120"
  },
  {
    "text": "able to interact with and I've retrieved your admin token and the payload that that's all I need to be",
    "start": "264120",
    "end": "273160"
  },
  {
    "text": "able to execute a further attack inside your system you know that in itself is",
    "start": "273160",
    "end": "280390"
  },
  {
    "text": "is a sort of it's like an e-commerce example right but the key thing is around a lot of the the recent sort of",
    "start": "280390",
    "end": "287370"
  },
  {
    "text": "exposure it's not so much about financial losses about data so we really",
    "start": "287370",
    "end": "293680"
  },
  {
    "text": "do have to be thinking deeper than that perimeter firewall when we're sort of looking in network security so the two",
    "start": "293680",
    "end": "301750"
  },
  {
    "text": "problems so the two problems that we had in this previous attack which is not so uncommon right open network access I had",
    "start": "301750",
    "end": "309940"
  },
  {
    "text": "absolute freedom of movement right the way through your network one side bypass",
    "start": "309940",
    "end": "315130"
  },
  {
    "text": "a permit firewall mistake number two you assume that because that perimeter",
    "start": "315130",
    "end": "321220"
  },
  {
    "text": "firewall exists that you don't need TLS internally you know you terminate TLS",
    "start": "321220",
    "end": "326860"
  },
  {
    "text": "between the client and the Gateway the endpoint but internally hey the firewalls good I don't need TLS you do",
    "start": "326860",
    "end": "334720"
  },
  {
    "text": "need TLS so let's address those so open",
    "start": "334720",
    "end": "341020"
  },
  {
    "text": "network access so you know that this kind of traditional approach who around",
    "start": "341020",
    "end": "347290"
  },
  {
    "text": "just having a perimeter firewall this this kind of what what's often commonly",
    "start": "347290",
    "end": "352390"
  },
  {
    "text": "known as a castle and moat approach this is not a new problem this is a problem",
    "start": "352390",
    "end": "358630"
  },
  {
    "text": "which was solved a long long time ago it was solved with problems around",
    "start": "358630",
    "end": "363900"
  },
  {
    "text": "realizing that you need network isolation that the second that you can't protect your infrastructure with with",
    "start": "363900",
    "end": "371080"
  },
  {
    "text": "physical security with full walls then you need to be thinking about how do you",
    "start": "371080",
    "end": "376560"
  },
  {
    "text": "separate the responsibilities how do you separate the traffic inside to avoid",
    "start": "376560",
    "end": "381910"
  },
  {
    "text": "these lateral movements and network segmentation is a solution to that again",
    "start": "381910",
    "end": "388990"
  },
  {
    "text": "this is like a 30 year old solution this was the solution it was invented",
    "start": "388990",
    "end": "394600"
  },
  {
    "text": "probably shortly after the network itself but what's network segments does is it kind of states let's break up",
    "start": "394600",
    "end": "402490"
  },
  {
    "text": "the network let's break it up into areas of risk or areas of trust so let's for",
    "start": "402490",
    "end": "409540"
  },
  {
    "text": "example break it up into front-end services and back-end services now",
    "start": "409540",
    "end": "416370"
  },
  {
    "text": "moving deeper than that we're now working in a multi-tenant environment so",
    "start": "416370",
    "end": "422140"
  },
  {
    "text": "you know you've got multiple applications running on a single node you've got multiple containers running",
    "start": "422140",
    "end": "428080"
  },
  {
    "text": "on a single kubernetes node and we need to kind of go deeper than just network",
    "start": "428080",
    "end": "433900"
  },
  {
    "text": "level segmentation and we need to start thinking about service level segmentation because potentially those",
    "start": "433900",
    "end": "440260"
  },
  {
    "text": "areas of risk those areas of trust are now mixed into the same node so with",
    "start": "440260",
    "end": "445690"
  },
  {
    "text": "service level segmentation we're kind of applying the same approach where we're sort of stating that we want this",
    "start": "445690",
    "end": "451750"
  },
  {
    "text": "ability to control traffic between services but it's predominantly on kind",
    "start": "451750",
    "end": "457330"
  },
  {
    "text": "of like a node level or on a an application level and all those things",
    "start": "457330",
    "end": "463420"
  },
  {
    "text": "are great except we have high availability so a big cheer for high",
    "start": "463420",
    "end": "470140"
  },
  {
    "text": "availability and a big boom for what it does in terms of networking because it adds the complexity because with a",
    "start": "470140",
    "end": "476890"
  },
  {
    "text": "static environment a static environment where you're controlling IP addresses you can manage routes you can manage",
    "start": "476890",
    "end": "483730"
  },
  {
    "text": "networks securely far easier but in a dynamic environment you don't know what",
    "start": "483730",
    "end": "489220"
  },
  {
    "text": "the IP address of them an application is until after it's appeared and potentially you still don't know and",
    "start": "489220",
    "end": "496810"
  },
  {
    "text": "dynamic environments are not just you kubernetes clusters but they you're all",
    "start": "496810",
    "end": "501940"
  },
  {
    "text": "to scale groups potentially vSphere you know there's it's a quite a broad",
    "start": "501940",
    "end": "507160"
  },
  {
    "text": "spectrum which makes it a really broad problem so how do we deal with this so",
    "start": "507160",
    "end": "515800"
  },
  {
    "text": "we've got two problems one is that the the application deployment is disconnected from the network",
    "start": "515800",
    "end": "521260"
  },
  {
    "text": "configuration what I mean so I mean that you know the applications are not being",
    "start": "521260",
    "end": "526990"
  },
  {
    "text": "orchestrated by you directly they're being orchestrated by a machine but then",
    "start": "526990",
    "end": "532390"
  },
  {
    "text": "how do you manage that in terms of controlling firewall routing how do you control things like you know sort of",
    "start": "532390",
    "end": "540160"
  },
  {
    "text": "routing tables and stuff like that it's not an easy problem because what we want",
    "start": "540160",
    "end": "545560"
  },
  {
    "text": "to do is we want to be able to do this we want to be able to state that service a can only talk to service B so in in",
    "start": "545560",
    "end": "553540"
  },
  {
    "text": "the kind of this old network segmentation mode I'm gonna configure my routing rules to only allow those to",
    "start": "553540",
    "end": "561430"
  },
  {
    "text": "service a instances 12 and 10 to talk to my service B instance one potentially",
    "start": "561430",
    "end": "568210"
  },
  {
    "text": "also add some firewall pause in the dynamic environment that changes all the",
    "start": "568210",
    "end": "574450"
  },
  {
    "text": "time it changes without me knowing it so how",
    "start": "574450",
    "end": "579940"
  },
  {
    "text": "do you can keep on top of that these are kind of the challenges which which we face with modern network security add",
    "start": "579940",
    "end": "588430"
  },
  {
    "text": "another layer of complexity kubernetes our schedulers we don't even know",
    "start": "588430",
    "end": "594130"
  },
  {
    "text": "potentially which node an application is running on the application is gonna be spread across a number of nodes and that",
    "start": "594130",
    "end": "601930"
  },
  {
    "text": "makes configuring those routing rules even more difficult the more application instances you've got the more difficult",
    "start": "601930",
    "end": "607960"
  },
  {
    "text": "those routing rules are so what you end up doing and I don't blame anybody is",
    "start": "607960",
    "end": "614740"
  },
  {
    "text": "you end up sort of segmenting your networks but allowing entire subnets for",
    "start": "614740",
    "end": "620020"
  },
  {
    "text": "your cluster and as we kind of saw that's that can be a big risk what we",
    "start": "620020",
    "end": "627220"
  },
  {
    "text": "want to be able to do is have a dynamic model for network segregation we don't",
    "start": "627220",
    "end": "634750"
  },
  {
    "text": "want to be defining things on static network locations we want to be basing things on application ID so we want to",
    "start": "634750",
    "end": "641620"
  },
  {
    "text": "take an intention based I have the intention that application a talks to application B it's it's simpler and it's",
    "start": "641620",
    "end": "649150"
  },
  {
    "text": "dynamic because as the applications are rescheduled you don't need to keep reconfiguring those rules so a second",
    "start": "649150",
    "end": "659530"
  },
  {
    "text": "problem TLS what about our TLS so kind of one of the key things in in",
    "start": "659530",
    "end": "665960"
  },
  {
    "text": "this sort of an attack is with that lateral movement the ability to read",
    "start": "665960",
    "end": "671600"
  },
  {
    "text": "data off the wire is really really dangerous right I mean there's two things as an attacker when I get inside",
    "start": "671600",
    "end": "677150"
  },
  {
    "text": "your system I can go straight for your database I can try and sort of attack",
    "start": "677150",
    "end": "682880"
  },
  {
    "text": "the the database inside the store but if you're not using encryption on your",
    "start": "682880",
    "end": "689960"
  },
  {
    "text": "transport I don't even need to I can just read the data straight off the wire does that take longer yes",
    "start": "689960",
    "end": "697730"
  },
  {
    "text": "takes longer is that a problem well maybe not because Oh wasp or wasp stated",
    "start": "697730",
    "end": "706100"
  },
  {
    "text": "that it can take up to a hundred and eighty days before you detect a breach so that means that somebody can be in",
    "start": "706100",
    "end": "712010"
  },
  {
    "text": "your system snooping around reading your data for 180 days before you you notice",
    "start": "712010",
    "end": "718730"
  },
  {
    "text": "it and if you look at sort of a recent",
    "start": "718730",
    "end": "723950"
  },
  {
    "text": "attack on a British airline there was something like forty days before they",
    "start": "723950",
    "end": "729050"
  },
  {
    "text": "noticed and this was a like a public script right you know there was a public script on their website that they didn't",
    "start": "729050",
    "end": "735320"
  },
  {
    "text": "realize what it was there was harvesting data for forty days so imagine that when",
    "start": "735320",
    "end": "740600"
  },
  {
    "text": "it's hidden deep inside your system I think hundred and you know so why",
    "start": "740600",
    "end": "747170"
  },
  {
    "text": "don't we use TLS internally well so if anybody's ever tried to implement TLS",
    "start": "747170",
    "end": "752960"
  },
  {
    "text": "internally service a service not using internal load balancers it's difficult",
    "start": "752960",
    "end": "758930"
  },
  {
    "text": "you've got to manage things like certificate authority you've got to do things like distributing keys and",
    "start": "758930",
    "end": "765080"
  },
  {
    "text": "certificates to to be able to terminate TLS you've potentially got to be able to change your code on your application to",
    "start": "765080",
    "end": "773660"
  },
  {
    "text": "be able to to reconfigure the the endpoints for for TLS as opposed to just",
    "start": "773660",
    "end": "779240"
  },
  {
    "text": "plain and all of these things are kind of challenging but they don't need to be",
    "start": "779240",
    "end": "785900"
  },
  {
    "text": "because I'm not the bringer of doom what I want to talked about is the easy",
    "start": "785900",
    "end": "791600"
  },
  {
    "text": "option and that's the service match you know there's been a lot discussed about service mashes I mean I think coop",
    "start": "791600",
    "end": "798750"
  },
  {
    "text": "con last year over in in the US was the first time when there was a huge number",
    "start": "798750",
    "end": "804840"
  },
  {
    "text": "of talks there's a lot of interest and there's a lot of interest because they solve really difficult problems in a",
    "start": "804840",
    "end": "811080"
  },
  {
    "text": "very elegant way so they work predominantly because you end up with",
    "start": "811080",
    "end": "818490"
  },
  {
    "text": "these two layers you have your control plane which is you centralizing",
    "start": "818490",
    "end": "823670"
  },
  {
    "text": "distributed highly available control plane and you have the data plane so you",
    "start": "823670",
    "end": "829500"
  },
  {
    "text": "control plane this is like your Ezio console connect data plane again sort of",
    "start": "829500",
    "end": "836300"
  },
  {
    "text": "envoy probably the most popular data plane at the moment it's one that most",
    "start": "836300",
    "end": "842370"
  },
  {
    "text": "of the service - you seem to be adopting and these two components work together",
    "start": "842370",
    "end": "848430"
  },
  {
    "text": "to be able to provide the functionality that we need to gain this security so",
    "start": "848430",
    "end": "853500"
  },
  {
    "text": "the control plane this is giving you the features such as service the service communication policy that ability to",
    "start": "853500",
    "end": "859440"
  },
  {
    "text": "control intention based routing as opposed to IP based observability so the",
    "start": "859440",
    "end": "867000"
  },
  {
    "text": "kind of a handy way and an easy way to collect all of those metrics and to be able to have a central point of Fanning",
    "start": "867000",
    "end": "873480"
  },
  {
    "text": "them out into whatever collection source of you're using it gives you something",
    "start": "873480",
    "end": "879540"
  },
  {
    "text": "which is really important and that's a service catalog because in order to do a",
    "start": "879540",
    "end": "884580"
  },
  {
    "text": "sort of a dynamic based routing you've got to have a service catalog you've got to have the ability to understand which",
    "start": "884580",
    "end": "891240"
  },
  {
    "text": "services exist and where they are you don't die a user need to know where they are but the control plane needs that",
    "start": "891240",
    "end": "897180"
  },
  {
    "text": "information and kind of importantly it needs the ability to manage a",
    "start": "897180",
    "end": "903570"
  },
  {
    "text": "certificate authority and it needs the ability to be able to generate the x.509 certificates which are needed to secure",
    "start": "903570",
    "end": "910500"
  },
  {
    "text": "the TLS endpoints also we need a way of",
    "start": "910500",
    "end": "915750"
  },
  {
    "text": "configuring that data plane if we had a can wreak inflict if we had to configure the the proxies the data plane every",
    "start": "915750",
    "end": "922680"
  },
  {
    "text": "time for every single application instance that would be some more challenging so the control playing again makes that easy for us so",
    "start": "922680",
    "end": "931660"
  },
  {
    "text": "the days of playing and this is going to be generally localized to your application but these are things that",
    "start": "931660",
    "end": "937269"
  },
  {
    "text": "you're looking at in terms of authorization right so you're not just dealing with TLS but you're dealing with",
    "start": "937269",
    "end": "943269"
  },
  {
    "text": "mutual TLS so that's TLS which is encrypting the traffic but also identification by using",
    "start": "943269",
    "end": "949870"
  },
  {
    "text": "client-side keys and certificates request tracing an easy way of getting",
    "start": "949870",
    "end": "955750"
  },
  {
    "text": "those sort of HTTP whatever sort of traffic metrics between your services",
    "start": "955750",
    "end": "962639"
  },
  {
    "text": "you know I still think you need to augment your services with with certain observability metrics but you know the",
    "start": "962639",
    "end": "969550"
  },
  {
    "text": "service match gives you a lot of stuff out-of-the-box history fat client stuff like I've stood",
    "start": "969550",
    "end": "977529"
  },
  {
    "text": "and I've talked about the need for building reliable applications the need",
    "start": "977529",
    "end": "984370"
  },
  {
    "text": "that you've got to embed into your code things like circuit breaking timeouts",
    "start": "984370",
    "end": "989829"
  },
  {
    "text": "you know configuration around load balancing retry logic but that takes",
    "start": "989829",
    "end": "997839"
  },
  {
    "text": "effort that's hard that requires language dependencies even Netflix themself said that history as a library",
    "start": "997839",
    "end": "1005399"
  },
  {
    "text": "was one of the kind of the kind of you know something they didn't like it was a dependency in which every micro service",
    "start": "1005399",
    "end": "1012029"
  },
  {
    "text": "had and which is something that's in some ways broke that micro service pattern but the data plane can handle",
    "start": "1012029",
    "end": "1020399"
  },
  {
    "text": "all of that for you it allows your application to be somewhat Network agnostic to be done and that's a good",
    "start": "1020399",
    "end": "1026790"
  },
  {
    "text": "thing because you've got then a centralized capability for that that information so how do you deploy it so",
    "start": "1026790",
    "end": "1036298"
  },
  {
    "text": "do I need to reconfigure my application is there going to be a huge amount of recoding that I need to do and the",
    "start": "1036299",
    "end": "1043140"
  },
  {
    "text": "answer's no because we leverage patterns like sidecars so we we leverage a",
    "start": "1043140",
    "end": "1049440"
  },
  {
    "text": "pattern where we're injecting the data plane injecting the Envoy proxy into an isolated environment like a pod",
    "start": "1049440",
    "end": "1057050"
  },
  {
    "text": "with our application so in our pod our application binds localhost it is",
    "start": "1057050",
    "end": "1063840"
  },
  {
    "text": "absolutely not accessible from any of the service externally it can only be",
    "start": "1063840",
    "end": "1070350"
  },
  {
    "text": "accessed from envoy now envoy is",
    "start": "1070350",
    "end": "1075450"
  },
  {
    "text": "exposing the the sort of the ingress into the application so all traffic is",
    "start": "1075450",
    "end": "1080580"
  },
  {
    "text": "gonna flow through envoy and then into your application and by that you don't",
    "start": "1080580",
    "end": "1086220"
  },
  {
    "text": "need to change any application code in order to to do things like services",
    "start": "1086220",
    "end": "1092850"
  },
  {
    "text": "service authentication or implementing TLS because envoy is terminating all of",
    "start": "1092850",
    "end": "1099060"
  },
  {
    "text": "that for you it's managing it for you so",
    "start": "1099060",
    "end": "1105150"
  },
  {
    "text": "where does consul come into this so console was was brought out under the market four or five years ago and it was",
    "start": "1105150",
    "end": "1114420"
  },
  {
    "text": "primarily how she copes approach it's solving the problem which systems were dealing with at the time which was",
    "start": "1114420",
    "end": "1119550"
  },
  {
    "text": "service discovery distributed configuration and health checking so",
    "start": "1119550",
    "end": "1125460"
  },
  {
    "text": "it's been hugely successful there are like millions and millions of downloads and there are some absolutely massive",
    "start": "1125460",
    "end": "1131730"
  },
  {
    "text": "clusters in excess of twenty thousand nodes of console a lot of people will",
    "start": "1131730",
    "end": "1137130"
  },
  {
    "text": "rely on it on a day-to-day basis for not just running modern applications and",
    "start": "1137130",
    "end": "1142740"
  },
  {
    "text": "schedulers like nomads and kubernetes but also for running sort of more legacy",
    "start": "1142740",
    "end": "1148230"
  },
  {
    "text": "applications for doing service discovery in in like VM fleets or actually even on physical machines and and the",
    "start": "1148230",
    "end": "1156630"
  },
  {
    "text": "architecture of it looks looks like this in that it is highly available system so",
    "start": "1156630",
    "end": "1161700"
  },
  {
    "text": "you have a cluster of server nodes so you're gonna run a quorum you're gonna have three or five or seven and these",
    "start": "1161700",
    "end": "1168690"
  },
  {
    "text": "are going to be running inside of kubernetes and the way this works is that console has the concept of leader",
    "start": "1168690",
    "end": "1174990"
  },
  {
    "text": "and a follower so the leader is the thing that manages the consistency it's",
    "start": "1174990",
    "end": "1180120"
  },
  {
    "text": "the thing that ensures that you've got reliable replication of data across all",
    "start": "1180120",
    "end": "1185640"
  },
  {
    "text": "of the cluster the followers can can kind of serve",
    "start": "1185640",
    "end": "1192419"
  },
  {
    "text": "requests but only if they're Reims any requests which is a right for example an update to a Service Catalog",
    "start": "1192419",
    "end": "1198909"
  },
  {
    "text": "for updating health checks or anything like that changing any of your your",
    "start": "1198909",
    "end": "1204549"
  },
  {
    "text": "console Connect intentions they get forwarded to the server and the server is only gonna write those to the RAF log",
    "start": "1204549",
    "end": "1209950"
  },
  {
    "text": "when it's received a quorum of responses from the followers so it makes it very",
    "start": "1209950",
    "end": "1215799"
  },
  {
    "text": "highly available but highly consistent when you're interacting with console you",
    "start": "1215799",
    "end": "1221919"
  },
  {
    "text": "don't talk directly to the server and the the reason that you don't do that is because we want to make this thing",
    "start": "1221919",
    "end": "1228700"
  },
  {
    "text": "performant it has to be highly distributed so a lot of the capabilities in terms of things like caching of",
    "start": "1228700",
    "end": "1235840"
  },
  {
    "text": "service catalogs the ability to to do all of the health checks they're done by",
    "start": "1235840",
    "end": "1241929"
  },
  {
    "text": "the clients so you don't need to load balanced a console server because all you do is talk to the client the client",
    "start": "1241929",
    "end": "1248769"
  },
  {
    "text": "is a hundred percent aware of the state of the cluster where the leaders are where the the followers are if there are",
    "start": "1248769",
    "end": "1256389"
  },
  {
    "text": "any unhealthy cluster server nodes it has got built-in capabilities around retries so that makes it again",
    "start": "1256389",
    "end": "1263590"
  },
  {
    "text": "operationally simple and very very reliable when you're building that out",
    "start": "1263590",
    "end": "1269259"
  },
  {
    "text": "into kubernetes you end up with something like this so you you end up with your your quorum of console servers",
    "start": "1269259",
    "end": "1276029"
  },
  {
    "text": "they're gonna be running on your your kubernetes nodes somewhere it doesn't",
    "start": "1276029",
    "end": "1281350"
  },
  {
    "text": "matter you know that's the beauty of the modern scheduler but on each of the",
    "start": "1281350",
    "end": "1286509"
  },
  {
    "text": "nodes inside of like is something like a daemon set you're going to be running each console client so your pods which",
    "start": "1286509",
    "end": "1293350"
  },
  {
    "text": "are running on the node will talk to the local console client the console client",
    "start": "1293350",
    "end": "1298539"
  },
  {
    "text": "then delegates that request to one of the server nodes in terms of health",
    "start": "1298539",
    "end": "1307090"
  },
  {
    "text": "checking I kind of briefly touched on this but the way that health checking",
    "start": "1307090",
    "end": "1312909"
  },
  {
    "text": "works in console is it's distributed it makes it highly performant because the local nodes are performing the health",
    "start": "1312909",
    "end": "1319570"
  },
  {
    "text": "checks on the local servers there's kind of a second layer of health checking which is that the the actual",
    "start": "1319570",
    "end": "1326740"
  },
  {
    "text": "climbs console clients are sending a heartbeat back to the server and and if the the server doesn't receive a",
    "start": "1326740",
    "end": "1333190"
  },
  {
    "text": "heartbeat then it'll declare that the entire node is out of operation this is",
    "start": "1333190",
    "end": "1339640"
  },
  {
    "text": "using the the swim protocol which a lot of distributed systems are going to use",
    "start": "1339640",
    "end": "1345190"
  },
  {
    "text": "and I'm I'm kind of proud to say that Hoshi Corp research have published a paper on some enhancements to to the",
    "start": "1345190",
    "end": "1352390"
  },
  {
    "text": "swim protocol to make it more more reliable which of course is implemented",
    "start": "1352390",
    "end": "1358150"
  },
  {
    "text": "and consoled but is also open sourced so that other people can implement it if they're using swim as well so RCA we",
    "start": "1358150",
    "end": "1366880"
  },
  {
    "text": "still have our certificate authority and I mentioned inside of the control plane one of its responsibilities is managing",
    "start": "1366880",
    "end": "1374320"
  },
  {
    "text": "that certificate authority so in console connect you have the built in certificate authority now but that's",
    "start": "1374320",
    "end": "1382720"
  },
  {
    "text": "gonna serve all of the purposes around generating allowing you to rotate your route certificate sleep certificate",
    "start": "1382720",
    "end": "1388510"
  },
  {
    "text": "signing request but in addition to using the built in CA you've also got the",
    "start": "1388510",
    "end": "1395470"
  },
  {
    "text": "capability to leverage hash called fault so if you're already using vault and you're using vault for your PKI",
    "start": "1395470",
    "end": "1401910"
  },
  {
    "text": "infrastructure or maybe you need the capability to use an HSM for enhance",
    "start": "1401910",
    "end": "1408160"
  },
  {
    "text": "security then you know that there's an optional and pluggable vault integration",
    "start": "1408160",
    "end": "1413980"
  },
  {
    "text": "as well and to connect so kind of just a",
    "start": "1413980",
    "end": "1419020"
  },
  {
    "text": "quick overview of how it works is that you're gonna generate the clients gonna",
    "start": "1419020",
    "end": "1424510"
  },
  {
    "text": "generate the key pair it sends that request to the connect server for signing and potentially the confusing",
    "start": "1424510",
    "end": "1432640"
  },
  {
    "text": "vault it'll forward it on but then that's gonna sign your your um your",
    "start": "1432640",
    "end": "1438400"
  },
  {
    "text": "certificate we use the spiffy standard really pleased that spiff he's made it",
    "start": "1438400",
    "end": "1445810"
  },
  {
    "text": "into the CNC F I think it's a wonderful initiative to kind of try and standardize identity",
    "start": "1445810",
    "end": "1453210"
  },
  {
    "text": "but one of the things that you want again around certificates is rotation",
    "start": "1455790",
    "end": "1461620"
  },
  {
    "text": "and that's important stale TLS certificates long-lived certificates you want to try and keep TT",
    "start": "1461620",
    "end": "1468640"
  },
  {
    "text": "ELLs on things as short as possible one of the nice features of Connect is that",
    "start": "1468640",
    "end": "1473920"
  },
  {
    "text": "it allows you to do root level rotation on your certificates and the way that",
    "start": "1473920",
    "end": "1479620"
  },
  {
    "text": "that works is in the traditional flow where you have a route an intermediary in the leaf which would be given out to",
    "start": "1479620",
    "end": "1485110"
  },
  {
    "text": "the service when you want to rotate a route what you can actually do is issue",
    "start": "1485110",
    "end": "1491890"
  },
  {
    "text": "another route create a new route and load that in to connect what connect will do is it generates new",
    "start": "1491890",
    "end": "1499120"
  },
  {
    "text": "intermediaries and cross signs with both the old route and the new route and then",
    "start": "1499120",
    "end": "1504430"
  },
  {
    "text": "reissues the leaf certificates so whenever your system is in operation",
    "start": "1504430",
    "end": "1509640"
  },
  {
    "text": "when it's validating those certificates it doesn't matter at this point whether",
    "start": "1509640",
    "end": "1516070"
  },
  {
    "text": "it's got the old route of a new route because if both of those are active eventually once we contain of transition",
    "start": "1516070",
    "end": "1525820"
  },
  {
    "text": "away from the old route then we move over to the new so we've got this capability of having this uninterrupted",
    "start": "1525820",
    "end": "1533260"
  },
  {
    "text": "seamless ability to rotate root certificates because of using this cross signing because the intermediary is",
    "start": "1533260",
    "end": "1539470"
  },
  {
    "text": "going to be valid against both so intentions like what's simpler than that",
    "start": "1539470",
    "end": "1547720"
  },
  {
    "text": "you know the the capability to just say I want to allow this communication",
    "start": "1547720",
    "end": "1553480"
  },
  {
    "text": "between server to services by using the service name I want the ability to deny",
    "start": "1553480",
    "end": "1558540"
  },
  {
    "text": "the communication between these two services and we'll see this a little bit more in depth when I do a little demo",
    "start": "1558540",
    "end": "1564490"
  },
  {
    "text": "hopefully envoy right it's the obvious",
    "start": "1564490",
    "end": "1571030"
  },
  {
    "text": "choice it's it's fast becoming the industry favorite method of the data",
    "start": "1571030",
    "end": "1576070"
  },
  {
    "text": "plane for your your service match and rightly so it's a great great piece of",
    "start": "1576070",
    "end": "1581710"
  },
  {
    "text": "software so kind of how lack just quickly how",
    "start": "1581710",
    "end": "1588330"
  },
  {
    "text": "this all ties together then is that the way that it works is that when envoy is",
    "start": "1588330",
    "end": "1595649"
  },
  {
    "text": "starts it's gonna get bootstrapped and then when it sort of starts up its going to connect to the console client it's",
    "start": "1595649",
    "end": "1602880"
  },
  {
    "text": "going to obtain its certificates and the keys that it needs to be able to to secure the endpoint with mutual TLS so",
    "start": "1602880",
    "end": "1609720"
  },
  {
    "text": "it does that because what we've done is we've implemented the ax D s the Envoy XDS API inside of console the next step",
    "start": "1609720",
    "end": "1620279"
  },
  {
    "text": "is that the console claim is then going to get those certificates sign it's going to delegate that to the control plane and once that key bundle is being",
    "start": "1620279",
    "end": "1632190"
  },
  {
    "text": "passed back then envoy can start to secure those connections we've got to",
    "start": "1632190",
    "end": "1640710"
  },
  {
    "text": "think about updates we've already mentioned that we want to be able to rotate certificates we want seamless updates to our our system and we're",
    "start": "1640710",
    "end": "1650940"
  },
  {
    "text": "gonna do that in a very sort of low overhead way because the client is",
    "start": "1650940",
    "end": "1656190"
  },
  {
    "text": "issuing a blocking query on console which means that it's kind of saying when you get some updates on ax let me",
    "start": "1656190",
    "end": "1662820"
  },
  {
    "text": "know and that's a really low overhead it's not polling it just maintains that and envoys doing the same thing because",
    "start": "1662820",
    "end": "1670799"
  },
  {
    "text": "we've got that persistent G RPC connection between the client and envoy",
    "start": "1670799",
    "end": "1675809"
  },
  {
    "text": "so that's a bi-directional streaming API which means that the client can the console client can actually push",
    "start": "1675809",
    "end": "1681630"
  },
  {
    "text": "information down into convoy at convoy envoy in terms of when you get that",
    "start": "1681630",
    "end": "1691110"
  },
  {
    "text": "connection so the clients can initialize connection they can do a little bit of the TLS handshake envoy is gonna request",
    "start": "1691110",
    "end": "1697830"
  },
  {
    "text": "that the client sends its client certificate it's part of the MT LS flow so that client certificate has got that",
    "start": "1697830",
    "end": "1704370"
  },
  {
    "text": "x.509 spiffy identity encoded into it inside the URI Sun and only if the you",
    "start": "1704370",
    "end": "1711929"
  },
  {
    "text": "know the the the certificate is signed by the right the right route",
    "start": "1711929",
    "end": "1717630"
  },
  {
    "text": "then will that connection be allowed well there's an additional step because",
    "start": "1717630",
    "end": "1723330"
  },
  {
    "text": "we want to validate it's not just a case of is this connection presenting valid identity but it is this service allowed",
    "start": "1723330",
    "end": "1731190"
  },
  {
    "text": "in my intention graph so envoys gonna make a call again using that XDS API to",
    "start": "1731190",
    "end": "1737460"
  },
  {
    "text": "console and it's gonna say I've got a request from service a is this okay is",
    "start": "1737460",
    "end": "1743070"
  },
  {
    "text": "this allowed in the intention graph and console will give a yes or a no so",
    "start": "1743070",
    "end": "1749580"
  },
  {
    "text": "that's that that whole process is not terribly inefficient because actually",
    "start": "1749580",
    "end": "1757200"
  },
  {
    "text": "what's happening is between those two Envoy proxies you can end up with persistent connections you know you want",
    "start": "1757200",
    "end": "1762600"
  },
  {
    "text": "to be able to maintain the persistent connection so you want to avoid having to do the DM TLS handshake every time",
    "start": "1762600",
    "end": "1767760"
  },
  {
    "text": "every request and you certainly don't want to be doing the REO thent ocation every time because that's gonna cause a",
    "start": "1767760",
    "end": "1773880"
  },
  {
    "text": "centralized dependency on the control plane but also it's gonna slow down the application so it's a very very very low",
    "start": "1773880",
    "end": "1781110"
  },
  {
    "text": "overhead so in terms of how we segment well this was our previous problem and",
    "start": "1781110",
    "end": "1788940"
  },
  {
    "text": "we said that the reality was gonna be this but that's fine because what we're",
    "start": "1788940",
    "end": "1795630"
  },
  {
    "text": "now doing is we're segmenting by using intention based security all of the exposed ports in the system are M TLS",
    "start": "1795630",
    "end": "1803570"
  },
  {
    "text": "secured you've got to have a valid identity in order to be able to connect whether it's open or not I'm gonna show",
    "start": "1803570",
    "end": "1814770"
  },
  {
    "text": "you in a second how we deploy it but really really easy console helm chart run it up on top of your kubernetes",
    "start": "1814770",
    "end": "1820290"
  },
  {
    "text": "cluster and I think the important thing is that sidecar injection so really",
    "start": "1820290",
    "end": "1828150"
  },
  {
    "text": "simple setup using pod annotations",
    "start": "1828150",
    "end": "1832190"
  },
  {
    "text": "and it would be wonderful if everything was kubernetes but it isn't unfortunately we have to deal with",
    "start": "1834950",
    "end": "1841909"
  },
  {
    "text": "legacy systems and console Connect allows you to deal with that - you can integrate console Connect as easily as",
    "start": "1841909",
    "end": "1848989"
  },
  {
    "text": "you're running it on kubernetes as you can with a like a java-based application",
    "start": "1848989",
    "end": "1854989"
  },
  {
    "text": "on a Linux VM or even a windows-based application running on a well Windows",
    "start": "1854989",
    "end": "1860299"
  },
  {
    "text": "virtual machine and even physical infrastructure - right there is still similar",
    "start": "1860299",
    "end": "1867309"
  },
  {
    "text": "el4 course you can then use a few databases and if you want to go with the",
    "start": "1867309",
    "end": "1874909"
  },
  {
    "text": "next level you don't even need to to use that the sort of the configured data",
    "start": "1874909",
    "end": "1881059"
  },
  {
    "text": "plane if you need super low latency then actually you can use a software development kit so this is an example of",
    "start": "1881059",
    "end": "1887359"
  },
  {
    "text": "how you can make a direct G RPC connection using the software development kit and this relies on no",
    "start": "1887359",
    "end": "1893899"
  },
  {
    "text": "sort of proxy at all so let's take a look hopefully so my traffic is on a 4G Wi-Fi",
    "start": "1893899",
    "end": "1910009"
  },
  {
    "text": "device which is proxied out to the US",
    "start": "1910009",
    "end": "1919220"
  },
  {
    "text": "air to the UK and my server is out in",
    "start": "1919220",
    "end": "1925639"
  },
  {
    "text": "the US so I don't know what could possibly go wrong with that okay finally",
    "start": "1925639",
    "end": "1934869"
  },
  {
    "text": "alright so let's take",
    "start": "1934869",
    "end": "1941889"
  },
  {
    "text": "go away all right let me make that",
    "start": "1948279",
    "end": "1954529"
  },
  {
    "text": "bigger foot so the the first thing that",
    "start": "1954529",
    "end": "1961130"
  },
  {
    "text": "we need to do is suggest install console on our our kubernetes cluster so I've",
    "start": "1961130",
    "end": "1966799"
  },
  {
    "text": "got a pretty bare kubernetes cluster here so let me just run the console",
    "start": "1966799",
    "end": "1974059"
  },
  {
    "text": "hound chart so I'm going to do helm install - name gonna call it console and",
    "start": "1974059",
    "end": "1982970"
  },
  {
    "text": "I've just got the helm chart locally",
    "start": "1982970",
    "end": "1987429"
  },
  {
    "text": "and that's going to install so the benefit of using Hallam is it can give you a capability of running console if",
    "start": "2009180",
    "end": "2015940"
  },
  {
    "text": "you're not already running it using tooling that you're already familiar with you can safely and securely run",
    "start": "2015940",
    "end": "2022300"
  },
  {
    "text": "console on top of kubernetes I mean it's just an application may be my wife eyes",
    "start": "2022300",
    "end": "2031630"
  },
  {
    "text": "died okay did I mention that there was",
    "start": "2031630",
    "end": "2046900"
  },
  {
    "text": "an extreme danger that using a proxy connection across two continents might",
    "start": "2046900",
    "end": "2055898"
  },
  {
    "text": "cause a problem with a demo right okay",
    "start": "2055899",
    "end": "2061829"
  },
  {
    "text": "so let me show you what I was going to deploy anyway so this is like",
    "start": "2062100",
    "end": "2067870"
  },
  {
    "text": "predominantly all I'm gonna need I've got a very standard pod definition here",
    "start": "2067870",
    "end": "2073379"
  },
  {
    "text": "so I have a service that I'm gonna create because there's a sort of a forward-facing service inside my cluster",
    "start": "2073380",
    "end": "2079898"
  },
  {
    "text": "I'm gonna specify some some ports and things a deployment really nothing weird",
    "start": "2079899",
    "end": "2086169"
  },
  {
    "text": "going on there right number of replicas and in my template now the the",
    "start": "2086169",
    "end": "2092860"
  },
  {
    "text": "difference is that if I want to a naval console connect on my cluster and to to add that envoy data plane into my pod I",
    "start": "2092860",
    "end": "2100510"
  },
  {
    "text": "don't have to write anything special I don't need to define any special containers or set up any special",
    "start": "2100510",
    "end": "2106740"
  },
  {
    "text": "configuration I'm just gonna use the annotations because console connect has",
    "start": "2106740",
    "end": "2111910"
  },
  {
    "text": "kubernetes integration into it that allows you to just specify the annotation console connect equals true",
    "start": "2111910",
    "end": "2119070"
  },
  {
    "text": "and then I can specify my up streams because in the same way that I'm only",
    "start": "2119070",
    "end": "2127270"
  },
  {
    "text": "talking localhost inbound via my Envoy proxy what I want to make a call out to",
    "start": "2127270",
    "end": "2133390"
  },
  {
    "text": "a service then I'm gonna talk localhost as well that's the way that envoy it means that I don't need to worry",
    "start": "2133390",
    "end": "2139510"
  },
  {
    "text": "about the whole kind of history saying the circuit ballad breaking the low balancing because envoy is performing",
    "start": "2139510",
    "end": "2146560"
  },
  {
    "text": "that functionality for me so I tell envoy I want you to connect to this service and it'll expose me a local host",
    "start": "2146560",
    "end": "2155080"
  },
  {
    "text": "port which makes my application configuration super easy moving down",
    "start": "2155080",
    "end": "2162040"
  },
  {
    "text": "there again you know there's there's really nothing nothing special going on",
    "start": "2162040",
    "end": "2168520"
  },
  {
    "text": "nothing complicated oh it did come up",
    "start": "2168520",
    "end": "2174450"
  },
  {
    "text": "but unfortunately I'm out of time and I",
    "start": "2174450",
    "end": "2180640"
  },
  {
    "text": "do apologize about that but let me just quickly summary all right so demo demo",
    "start": "2180640",
    "end": "2187420"
  },
  {
    "text": "bad simple architecture easy to run console connect use the kubernetes hound",
    "start": "2187420",
    "end": "2195460"
  },
  {
    "text": "chart look at our problems right TLS is",
    "start": "2195460",
    "end": "2202750"
  },
  {
    "text": "hard you've got to do a whole the CA thing you've got to work out how to distribute certificates you got to work out how to rotate keys no you don't use",
    "start": "2202750",
    "end": "2210640"
  },
  {
    "text": "the service match because that's its job it does all of that for you when it",
    "start": "2210640",
    "end": "2217840"
  },
  {
    "text": "comes to things like configuring that network segmentation to be able to reduce the blast radius in the event of",
    "start": "2217840",
    "end": "2224440"
  },
  {
    "text": "a breach you don't need to worry about the dynamism which is given to you by",
    "start": "2224440",
    "end": "2230020"
  },
  {
    "text": "your your scheduler because the service mesh allows you to not worry about physical network locations about IP",
    "start": "2230020",
    "end": "2237100"
  },
  {
    "text": "addresses and you just concern yourself with service identity and to leverage",
    "start": "2237100",
    "end": "2243160"
  },
  {
    "text": "that em TLS to not only give you encrypted traffic but authorized",
    "start": "2243160",
    "end": "2248230"
  },
  {
    "text": "connections you know you please go and try it out look the hound child is super",
    "start": "2248230",
    "end": "2256120"
  },
  {
    "text": "easy to use check out console and some more of the documentation at console dot IO helm",
    "start": "2256120",
    "end": "2263140"
  },
  {
    "text": "chart can be found in our github repo at github comm Hoshi corpse that console",
    "start": "2263140",
    "end": "2268930"
  },
  {
    "text": "helm and we are moving to get as part of the the official helm distribution I think there's a PR open",
    "start": "2268930",
    "end": "2275410"
  },
  {
    "text": "on that if you do have any questions I will be outside and more happy to to",
    "start": "2275410",
    "end": "2280930"
  },
  {
    "text": "chattin maybe I'll even finish my demo but thank you so much for for listening",
    "start": "2280930",
    "end": "2288869"
  },
  {
    "text": "some contact details there if you do want to contact me but thank you again [Applause]",
    "start": "2288869",
    "end": "2300359"
  }
]