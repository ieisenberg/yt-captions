[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "hi everyone and thanks for joining in",
    "start": "0",
    "end": "1599"
  },
  {
    "text": "today i'm xdevelo i'm a software",
    "start": "1599",
    "end": "3919"
  },
  {
    "text": "engineer at",
    "start": "3919",
    "end": "4720"
  },
  {
    "text": "arm and i will be presenting parsec the",
    "start": "4720",
    "end": "7520"
  },
  {
    "text": "platform assertion for security",
    "start": "7520",
    "end": "9519"
  },
  {
    "text": "and also its involvements in the larger",
    "start": "9519",
    "end": "11679"
  },
  {
    "text": "errors community",
    "start": "11679",
    "end": "13120"
  },
  {
    "text": "so let's get started let's see",
    "start": "13120",
    "end": "17520"
  },
  {
    "text": "why why pasek",
    "start": "17520",
    "end": "20880"
  },
  {
    "text": "to the the edge in between the cloud and",
    "start": "21520",
    "end": "24400"
  },
  {
    "text": "the iot endpoint is becoming a",
    "start": "24400",
    "end": "26640"
  },
  {
    "text": "richer compute capable world",
    "start": "26640",
    "end": "29679"
  },
  {
    "text": "at the edge you you would want to to",
    "start": "29679",
    "end": "31840"
  },
  {
    "text": "execute richer workloads for example for",
    "start": "31840",
    "end": "33920"
  },
  {
    "text": "machine learning or sensor data analysis",
    "start": "33920",
    "end": "38159"
  },
  {
    "text": "similarly than in the cloud gh is a",
    "start": "38640",
    "end": "42160"
  },
  {
    "text": "multi-tenant environment where multiple",
    "start": "42160",
    "end": "44079"
  },
  {
    "text": "applications",
    "start": "44079",
    "end": "45360"
  },
  {
    "text": "could be accessing the same device",
    "start": "45360",
    "end": "50239"
  },
  {
    "text": "and similarly then in the cloud you",
    "start": "50239",
    "end": "51920"
  },
  {
    "text": "would want in the edge to have access to",
    "start": "51920",
    "end": "54000"
  },
  {
    "text": "the various cloud native development",
    "start": "54000",
    "end": "55520"
  },
  {
    "text": "tools",
    "start": "55520",
    "end": "57039"
  },
  {
    "text": "but very differently from the cloud um",
    "start": "57039",
    "end": "59760"
  },
  {
    "text": "the threat landscape is totally",
    "start": "59760",
    "end": "61359"
  },
  {
    "text": "different",
    "start": "61359",
    "end": "62640"
  },
  {
    "text": "you would have new new threats in the",
    "start": "62640",
    "end": "65198"
  },
  {
    "text": "edge than than in the cloud",
    "start": "65199",
    "end": "66799"
  },
  {
    "text": "and the the platforms",
    "start": "66799",
    "end": "70320"
  },
  {
    "text": "are also very diverse",
    "start": "70320",
    "end": "73360"
  },
  {
    "text": "and specifically um",
    "start": "73360",
    "end": "76400"
  },
  {
    "text": "the the root of trust that they have so",
    "start": "76400",
    "end": "78560"
  },
  {
    "text": "the the",
    "start": "78560",
    "end": "79439"
  },
  {
    "text": "the hardware-backed security modules",
    "start": "79439",
    "end": "81439"
  },
  {
    "text": "present on those platforms",
    "start": "81439",
    "end": "82880"
  },
  {
    "text": "can be very diverse you could have",
    "start": "82880",
    "end": "84560"
  },
  {
    "text": "trusted platform modules hardware",
    "start": "84560",
    "end": "86159"
  },
  {
    "text": "security modules",
    "start": "86159",
    "end": "87280"
  },
  {
    "text": "and secure elements",
    "start": "87280",
    "end": "90240"
  },
  {
    "text": "so there is a conflict there",
    "start": "90720",
    "end": "94479"
  },
  {
    "text": "between on one side having applications",
    "start": "94479",
    "end": "98400"
  },
  {
    "text": "that are highly secure um that store",
    "start": "98400",
    "end": "100880"
  },
  {
    "text": "their keys in",
    "start": "100880",
    "end": "101920"
  },
  {
    "text": "real hardware uh in those uh root of",
    "start": "101920",
    "end": "104799"
  },
  {
    "text": "trust modules",
    "start": "104799",
    "end": "106079"
  },
  {
    "text": "and that's also easily deployed and on",
    "start": "106079",
    "end": "108479"
  },
  {
    "text": "the other side",
    "start": "108479",
    "end": "109759"
  },
  {
    "text": "this uh this this big landscape of",
    "start": "109759",
    "end": "112880"
  },
  {
    "text": "different platforms and different",
    "start": "112880",
    "end": "114399"
  },
  {
    "text": "uh device and different hardware backed",
    "start": "114399",
    "end": "118079"
  },
  {
    "text": "security",
    "start": "118079",
    "end": "118719"
  },
  {
    "text": "devices so so parsec is made to",
    "start": "118719",
    "end": "122399"
  },
  {
    "start": "120000",
    "end": "172000"
  },
  {
    "text": "to to to solve that problems parsec",
    "start": "122399",
    "end": "125119"
  },
  {
    "text": "provides a",
    "start": "125119",
    "end": "125840"
  },
  {
    "text": "uniform compatibility layer across the",
    "start": "125840",
    "end": "129280"
  },
  {
    "text": "diverse wall of",
    "start": "129280",
    "end": "130560"
  },
  {
    "text": "edge parsec makes",
    "start": "130560",
    "end": "133599"
  },
  {
    "text": "the connection in between cloud native",
    "start": "133599",
    "end": "136319"
  },
  {
    "text": "applications",
    "start": "136319",
    "end": "137520"
  },
  {
    "text": "that are written in any programming",
    "start": "137520",
    "end": "139120"
  },
  {
    "text": "language and",
    "start": "139120",
    "end": "141360"
  },
  {
    "text": "between the the device that",
    "start": "141360",
    "end": "144560"
  },
  {
    "text": "can be any platform on any architecture",
    "start": "144560",
    "end": "147040"
  },
  {
    "text": "and",
    "start": "147040",
    "end": "148400"
  },
  {
    "text": "working with any any any hardware so",
    "start": "148400",
    "end": "150959"
  },
  {
    "text": "they could be",
    "start": "150959",
    "end": "151760"
  },
  {
    "text": "trusted but for modules hardware",
    "start": "151760",
    "end": "153200"
  },
  {
    "text": "security modules a trusted execution",
    "start": "153200",
    "end": "155760"
  },
  {
    "text": "environment services and and and other",
    "start": "155760",
    "end": "158800"
  },
  {
    "text": "hardware-based security modules",
    "start": "158800",
    "end": "160800"
  },
  {
    "text": "so parsec is making these connections so",
    "start": "160800",
    "end": "162800"
  },
  {
    "text": "that cloud native",
    "start": "162800",
    "end": "164959"
  },
  {
    "text": "development is possible at the edge",
    "start": "164959",
    "end": "167360"
  },
  {
    "text": "secure cognitive",
    "start": "167360",
    "end": "168640"
  },
  {
    "text": "development this possibility",
    "start": "168640",
    "end": "171760"
  },
  {
    "start": "172000",
    "end": "247000"
  },
  {
    "text": "so let's see on a on a conceptual view",
    "start": "172560",
    "end": "175599"
  },
  {
    "text": "parsec api is rooted in",
    "start": "175599",
    "end": "179280"
  },
  {
    "text": "platform security architecture psa and",
    "start": "179280",
    "end": "182159"
  },
  {
    "text": "specifically",
    "start": "182159",
    "end": "183680"
  },
  {
    "text": "parsec uses the psa cryptography api",
    "start": "183680",
    "end": "186720"
  },
  {
    "text": "which is providing key storage and",
    "start": "186720",
    "end": "190080"
  },
  {
    "text": "a lot of different cryptography",
    "start": "190080",
    "end": "192720"
  },
  {
    "text": "operations like",
    "start": "192720",
    "end": "194319"
  },
  {
    "text": "for example asymmetric signing symmetric",
    "start": "194319",
    "end": "196959"
  },
  {
    "text": "signing",
    "start": "196959",
    "end": "197599"
  },
  {
    "text": "and and many more persec is a service",
    "start": "197599",
    "end": "202000"
  },
  {
    "text": "a service that is available to",
    "start": "202000",
    "end": "203560"
  },
  {
    "text": "[Music]",
    "start": "203560",
    "end": "205280"
  },
  {
    "text": "clients in a rich choice so it's a it's",
    "start": "205280",
    "end": "208080"
  },
  {
    "text": "a it's a user space demon",
    "start": "208080",
    "end": "211519"
  },
  {
    "text": "which is not accessed through",
    "start": "211680",
    "end": "215120"
  },
  {
    "text": "one specific language um parsec is as as",
    "start": "215120",
    "end": "218159"
  },
  {
    "text": "develop its own wire protocol which is",
    "start": "218159",
    "end": "220080"
  },
  {
    "text": "language",
    "start": "220080",
    "end": "220640"
  },
  {
    "text": "agnostic and on top of which",
    "start": "220640",
    "end": "224159"
  },
  {
    "text": "client libraries can be can be developed",
    "start": "224159",
    "end": "227760"
  },
  {
    "text": "so client libraries in a lot of",
    "start": "227760",
    "end": "229360"
  },
  {
    "text": "different programming language",
    "start": "229360",
    "end": "231519"
  },
  {
    "text": "that can that know how to communicate",
    "start": "231519",
    "end": "233840"
  },
  {
    "text": "with the ipc protocol",
    "start": "233840",
    "end": "235599"
  },
  {
    "text": "in a convenient way for for developers",
    "start": "235599",
    "end": "238159"
  },
  {
    "text": "so that's",
    "start": "238159",
    "end": "238840"
  },
  {
    "text": "accessing in a you know in a rich",
    "start": "238840",
    "end": "242159"
  },
  {
    "text": "workload",
    "start": "242159",
    "end": "242799"
  },
  {
    "text": "um the hardware hardware-backed security",
    "start": "242799",
    "end": "245200"
  },
  {
    "text": "modules is easy",
    "start": "245200",
    "end": "247519"
  },
  {
    "start": "247000",
    "end": "352000"
  },
  {
    "text": "so let's see in more detail what is the",
    "start": "247519",
    "end": "249680"
  },
  {
    "text": "the service architecture there",
    "start": "249680",
    "end": "252720"
  },
  {
    "text": "so the parsec services architect is is",
    "start": "252720",
    "end": "255599"
  },
  {
    "text": "made around the",
    "start": "255599",
    "end": "256479"
  },
  {
    "text": "front end and backhand architecture",
    "start": "256479",
    "end": "260000"
  },
  {
    "text": "so on the front end you have the",
    "start": "260000",
    "end": "261280"
  },
  {
    "text": "listener which is the component",
    "start": "261280",
    "end": "263199"
  },
  {
    "text": "responsible for taking in",
    "start": "263199",
    "end": "265360"
  },
  {
    "text": "the requests of all the the clients on",
    "start": "265360",
    "end": "267840"
  },
  {
    "text": "your system",
    "start": "267840",
    "end": "270320"
  },
  {
    "text": "so the listener is",
    "start": "270800",
    "end": "274159"
  },
  {
    "text": "knows the the y protocol and the",
    "start": "274800",
    "end": "278560"
  },
  {
    "text": "and pass the request deeper in the",
    "start": "278560",
    "end": "281919"
  },
  {
    "text": "service",
    "start": "281919",
    "end": "283440"
  },
  {
    "text": "so that access control is performed in",
    "start": "283440",
    "end": "285840"
  },
  {
    "text": "between the",
    "start": "285840",
    "end": "287199"
  },
  {
    "text": "different tenants and the requests are",
    "start": "287199",
    "end": "290080"
  },
  {
    "text": "passed",
    "start": "290080",
    "end": "291120"
  },
  {
    "text": "on the specific providers that needs to",
    "start": "291120",
    "end": "293759"
  },
  {
    "text": "to respond to the request",
    "start": "293759",
    "end": "295840"
  },
  {
    "text": "and the provider is the backend of the",
    "start": "295840",
    "end": "298160"
  },
  {
    "text": "service it is the",
    "start": "298160",
    "end": "301039"
  },
  {
    "text": "the part where that knows that has the",
    "start": "301039",
    "end": "303520"
  },
  {
    "text": "the hardware specific knowledge",
    "start": "303520",
    "end": "305199"
  },
  {
    "text": "on how to communicate with the the root",
    "start": "305199",
    "end": "308560"
  },
  {
    "text": "of trust",
    "start": "308560",
    "end": "311360"
  },
  {
    "text": "and on the left on the other side of the",
    "start": "311360",
    "end": "313440"
  },
  {
    "text": "ipc",
    "start": "313440",
    "end": "314560"
  },
  {
    "text": "um there is the the cloud native",
    "start": "314560",
    "end": "316639"
  },
  {
    "text": "application",
    "start": "316639",
    "end": "318240"
  },
  {
    "text": "which is using the parsec client library",
    "start": "318240",
    "end": "322400"
  },
  {
    "text": "to to be a totally platform agnostic and",
    "start": "322400",
    "end": "325360"
  },
  {
    "text": "and",
    "start": "325360",
    "end": "326240"
  },
  {
    "text": "and that will work on on on any platform",
    "start": "326240",
    "end": "329680"
  },
  {
    "text": "so",
    "start": "329680",
    "end": "331199"
  },
  {
    "text": "anywhere that this application is",
    "start": "331199",
    "end": "334080"
  },
  {
    "text": "deployed",
    "start": "334080",
    "end": "335120"
  },
  {
    "text": "anywhere that there is a perfect service",
    "start": "335120",
    "end": "336880"
  },
  {
    "text": "it will work and will not need to be",
    "start": "336880",
    "end": "339039"
  },
  {
    "text": "reconfigured",
    "start": "339039",
    "end": "340960"
  },
  {
    "text": "as as it was previously if this",
    "start": "340960",
    "end": "343759"
  },
  {
    "text": "application wanted to use a",
    "start": "343759",
    "end": "346000"
  },
  {
    "text": "tpm or hsm it would have to change its",
    "start": "346000",
    "end": "348479"
  },
  {
    "text": "api calls",
    "start": "348479",
    "end": "349680"
  },
  {
    "text": "but with per sec it doesn't have to",
    "start": "349680",
    "end": "353039"
  },
  {
    "start": "352000",
    "end": "413000"
  },
  {
    "text": "and i've talked about client libraries",
    "start": "353039",
    "end": "356880"
  },
  {
    "text": "there are client libraries ergonomics",
    "start": "356960",
    "end": "360639"
  },
  {
    "text": "depending on what is the the the use",
    "start": "360639",
    "end": "363440"
  },
  {
    "text": "case so",
    "start": "363440",
    "end": "364560"
  },
  {
    "text": "there is different layers the first",
    "start": "364560",
    "end": "367039"
  },
  {
    "text": "layer",
    "start": "367039",
    "end": "367600"
  },
  {
    "text": "the client library core is for",
    "start": "367600",
    "end": "369520"
  },
  {
    "text": "sophisticated use case with granular",
    "start": "369520",
    "end": "371360"
  },
  {
    "text": "control and that's the layer where",
    "start": "371360",
    "end": "373680"
  },
  {
    "text": "all operations with all parameters are",
    "start": "373680",
    "end": "376080"
  },
  {
    "text": "available",
    "start": "376080",
    "end": "376720"
  },
  {
    "text": "so that's the most complicated layer",
    "start": "376720",
    "end": "378160"
  },
  {
    "text": "because one developer",
    "start": "378160",
    "end": "380160"
  },
  {
    "text": "will have to to set the specific",
    "start": "380160",
    "end": "381840"
  },
  {
    "text": "parameters for for each call",
    "start": "381840",
    "end": "384240"
  },
  {
    "text": "but there is a higher level for specific",
    "start": "384240",
    "end": "386960"
  },
  {
    "text": "use case",
    "start": "386960",
    "end": "388000"
  },
  {
    "text": "um which where",
    "start": "388000",
    "end": "391120"
  },
  {
    "text": "where the client library make makes the",
    "start": "391120",
    "end": "394080"
  },
  {
    "text": "the the choices for you with a small",
    "start": "394080",
    "end": "396400"
  },
  {
    "text": "defaulting or capability profiling",
    "start": "396400",
    "end": "399199"
  },
  {
    "text": "where parameters are already set",
    "start": "399199",
    "end": "401360"
  },
  {
    "text": "basically",
    "start": "401360",
    "end": "403120"
  },
  {
    "text": "and i'll show in an example uh layer uh",
    "start": "403120",
    "end": "405840"
  },
  {
    "text": "letter",
    "start": "405840",
    "end": "406880"
  },
  {
    "text": "what's the the client library call looks",
    "start": "406880",
    "end": "409680"
  },
  {
    "text": "like for the for the followers clients",
    "start": "409680",
    "end": "413360"
  },
  {
    "start": "413000",
    "end": "544000"
  },
  {
    "text": "well multi-tenancy is an imp is a",
    "start": "413680",
    "end": "416319"
  },
  {
    "text": "obviously",
    "start": "416319",
    "end": "416960"
  },
  {
    "text": "important part part of this so",
    "start": "416960",
    "end": "420080"
  },
  {
    "text": "cloud native workload delivery at the",
    "start": "420080",
    "end": "421840"
  },
  {
    "text": "edge is expected to be multitenant",
    "start": "421840",
    "end": "424160"
  },
  {
    "text": "multiple applications will share access",
    "start": "424160",
    "end": "426319"
  },
  {
    "text": "to the secure hardware on the platform",
    "start": "426319",
    "end": "428800"
  },
  {
    "text": "each application needs a unique and",
    "start": "428800",
    "end": "430800"
  },
  {
    "text": "personal identity",
    "start": "430800",
    "end": "432240"
  },
  {
    "text": "which is assigned by a component that",
    "start": "432240",
    "end": "433919"
  },
  {
    "text": "parser can trust",
    "start": "433919",
    "end": "436800"
  },
  {
    "text": "the parsec service tweets each api call",
    "start": "436800",
    "end": "439919"
  },
  {
    "text": "according to the identity of the",
    "start": "439919",
    "end": "441199"
  },
  {
    "text": "application that made a call",
    "start": "441199",
    "end": "443520"
  },
  {
    "text": "partitions key stores and brokers access",
    "start": "443520",
    "end": "445840"
  },
  {
    "text": "to hardware based on the identity",
    "start": "445840",
    "end": "449440"
  },
  {
    "text": "the source of the identity depends on",
    "start": "449599",
    "end": "451440"
  },
  {
    "text": "the deployment it might be a container",
    "start": "451440",
    "end": "453199"
  },
  {
    "text": "runtime manager for example",
    "start": "453199",
    "end": "455360"
  },
  {
    "text": "a deployed system requires an identity",
    "start": "455360",
    "end": "457280"
  },
  {
    "text": "provider a separate component that",
    "start": "457280",
    "end": "459680"
  },
  {
    "text": "assigns identities to applications",
    "start": "459680",
    "end": "461840"
  },
  {
    "text": "which has a trust relationship with the",
    "start": "461840",
    "end": "463520"
  },
  {
    "text": "parsec service",
    "start": "463520",
    "end": "465360"
  },
  {
    "text": "let's let's see let's see how how it",
    "start": "465360",
    "end": "467199"
  },
  {
    "text": "works in practice",
    "start": "467199",
    "end": "469520"
  },
  {
    "text": "so in your typical system you would have",
    "start": "469520",
    "end": "471440"
  },
  {
    "text": "the parsec service",
    "start": "471440",
    "end": "472639"
  },
  {
    "text": "sitting on top of the hardware back",
    "start": "472639",
    "end": "475840"
  },
  {
    "text": "security modules and applications making",
    "start": "475840",
    "end": "479280"
  },
  {
    "text": "calls to the parsec service",
    "start": "479280",
    "end": "482479"
  },
  {
    "text": "separately from the parsec service there",
    "start": "484000",
    "end": "485440"
  },
  {
    "text": "is the ident separator",
    "start": "485440",
    "end": "487039"
  },
  {
    "text": "which rules is to give to each",
    "start": "487039",
    "end": "489759"
  },
  {
    "text": "application on your system their",
    "start": "489759",
    "end": "491120"
  },
  {
    "text": "specific identity",
    "start": "491120",
    "end": "493199"
  },
  {
    "text": "this identity is given",
    "start": "493199",
    "end": "496720"
  },
  {
    "text": "on their request to the perfect service",
    "start": "496720",
    "end": "499680"
  },
  {
    "text": "so",
    "start": "499680",
    "end": "500000"
  },
  {
    "text": "whenever an application wants to make a",
    "start": "500000",
    "end": "501759"
  },
  {
    "text": "call to the parsec service for example",
    "start": "501759",
    "end": "503520"
  },
  {
    "text": "to",
    "start": "503520",
    "end": "504160"
  },
  {
    "text": "to generate a key pair or to",
    "start": "504160",
    "end": "508000"
  },
  {
    "text": "use a key to encrypt some data the",
    "start": "508000",
    "end": "510879"
  },
  {
    "text": "application",
    "start": "510879",
    "end": "511520"
  },
  {
    "text": "has to give its identity to the parsec",
    "start": "511520",
    "end": "513360"
  },
  {
    "text": "service and the parsec service",
    "start": "513360",
    "end": "516000"
  },
  {
    "text": "with that identity will perform a",
    "start": "516000",
    "end": "518719"
  },
  {
    "text": "keystore partitioning",
    "start": "518719",
    "end": "520320"
  },
  {
    "text": "so that one application cannot access",
    "start": "520320",
    "end": "522320"
  },
  {
    "text": "the key of another one",
    "start": "522320",
    "end": "525599"
  },
  {
    "text": "but of course parsec needs to trust",
    "start": "526560",
    "end": "529839"
  },
  {
    "text": "that identity and needs to",
    "start": "529839",
    "end": "533120"
  },
  {
    "text": "verifies it so that the authenticity of",
    "start": "533120",
    "end": "536080"
  },
  {
    "text": "of each of those identity identities is",
    "start": "536080",
    "end": "538240"
  },
  {
    "text": "respected",
    "start": "538240",
    "end": "538880"
  },
  {
    "text": "so there needs to be a trust",
    "start": "538880",
    "end": "539920"
  },
  {
    "text": "relationship in between parsec and the",
    "start": "539920",
    "end": "542160"
  },
  {
    "text": "identity provider",
    "start": "542160",
    "end": "545040"
  },
  {
    "start": "544000",
    "end": "672000"
  },
  {
    "text": "for example when one identity provider",
    "start": "545040",
    "end": "547920"
  },
  {
    "text": "that we currently",
    "start": "547920",
    "end": "549040"
  },
  {
    "text": "have in pasek is um using",
    "start": "549040",
    "end": "552480"
  },
  {
    "text": "unix user id",
    "start": "552480",
    "end": "555839"
  },
  {
    "text": "so in that in that uh with that identity",
    "start": "555839",
    "end": "559200"
  },
  {
    "text": "provider the applications",
    "start": "559200",
    "end": "560880"
  },
  {
    "text": "when making calls to parsec give",
    "start": "560880",
    "end": "563920"
  },
  {
    "text": "their their uid to parsec and to verify",
    "start": "563920",
    "end": "567440"
  },
  {
    "text": "it",
    "start": "567440",
    "end": "567760"
  },
  {
    "text": "parsec uses a feature on unix domain",
    "start": "567760",
    "end": "571440"
  },
  {
    "text": "socket called",
    "start": "571440",
    "end": "572360"
  },
  {
    "text": "peer credentials",
    "start": "572360",
    "end": "575360"
  },
  {
    "text": "to make sure that the uid given in the",
    "start": "575360",
    "end": "578640"
  },
  {
    "text": "request",
    "start": "578640",
    "end": "579200"
  },
  {
    "text": "match the actual uid of the process",
    "start": "579200",
    "end": "581760"
  },
  {
    "text": "which is on the other end",
    "start": "581760",
    "end": "583040"
  },
  {
    "text": "of the unix domain circuit and if they",
    "start": "583040",
    "end": "585440"
  },
  {
    "text": "match parsec is sure that",
    "start": "585440",
    "end": "587600"
  },
  {
    "text": "the application is is indeed the one",
    "start": "587600",
    "end": "589760"
  },
  {
    "text": "that",
    "start": "589760",
    "end": "590959"
  },
  {
    "text": "it says it is and can use that uid as",
    "start": "590959",
    "end": "593760"
  },
  {
    "text": "identity to partition the keystore",
    "start": "593760",
    "end": "597360"
  },
  {
    "text": "another identity that we use in parsec",
    "start": "597360",
    "end": "601120"
  },
  {
    "text": "is the is the spf id",
    "start": "601120",
    "end": "604720"
  },
  {
    "text": "and uh using a spire as a spf",
    "start": "604720",
    "end": "608320"
  },
  {
    "text": "implementation for example",
    "start": "608320",
    "end": "609519"
  },
  {
    "text": "the the application fetch their their",
    "start": "609519",
    "end": "612560"
  },
  {
    "text": "their spf id",
    "start": "612560",
    "end": "614160"
  },
  {
    "text": "and what they actually fetch is the is",
    "start": "614160",
    "end": "616800"
  },
  {
    "text": "the jot",
    "start": "616800",
    "end": "617360"
  },
  {
    "text": "svid token um using the",
    "start": "617360",
    "end": "620959"
  },
  {
    "text": "the spiffy workload api they give this",
    "start": "620959",
    "end": "623519"
  },
  {
    "text": "token to parsec",
    "start": "623519",
    "end": "625120"
  },
  {
    "text": "and parsec uses the workload api as well",
    "start": "625120",
    "end": "628079"
  },
  {
    "text": "to verify it",
    "start": "628079",
    "end": "628959"
  },
  {
    "text": "and make sure that that",
    "start": "628959",
    "end": "632399"
  },
  {
    "text": "that that this token is valid and uses",
    "start": "632399",
    "end": "634399"
  },
  {
    "text": "the specie id",
    "start": "634399",
    "end": "635519"
  },
  {
    "text": "as the pass as the the application",
    "start": "635519",
    "end": "637279"
  },
  {
    "text": "identity to partition the crystal",
    "start": "637279",
    "end": "639760"
  },
  {
    "text": "so this is two examples of",
    "start": "639760",
    "end": "641040"
  },
  {
    "text": "authenticators um one coming from",
    "start": "641040",
    "end": "643600"
  },
  {
    "text": "uid from the operating system and the",
    "start": "643600",
    "end": "645279"
  },
  {
    "text": "other one coming from spiffy",
    "start": "645279",
    "end": "648160"
  },
  {
    "text": "but many more are possible and more",
    "start": "648160",
    "end": "650480"
  },
  {
    "text": "generally in parsec",
    "start": "650480",
    "end": "652160"
  },
  {
    "text": "there is a um a plugable architecture",
    "start": "652160",
    "end": "655519"
  },
  {
    "text": "where",
    "start": "655519",
    "end": "656000"
  },
  {
    "text": "all the different parts can be can be",
    "start": "656000",
    "end": "657680"
  },
  {
    "text": "changed so",
    "start": "657680",
    "end": "658360"
  },
  {
    "text": "[Music]",
    "start": "658360",
    "end": "660720"
  },
  {
    "text": "other identity providers are perfectly",
    "start": "660720",
    "end": "662560"
  },
  {
    "text": "possible depending on",
    "start": "662560",
    "end": "665360"
  },
  {
    "text": "depending on the on the deployment of",
    "start": "665360",
    "end": "667519"
  },
  {
    "text": "parsec",
    "start": "667519",
    "end": "669920"
  },
  {
    "text": "so ultimately uh to use parsec you need",
    "start": "672480",
    "end": "676000"
  },
  {
    "text": "the client library",
    "start": "676000",
    "end": "676880"
  },
  {
    "text": "written in the in the language that you",
    "start": "676880",
    "end": "678720"
  },
  {
    "text": "want",
    "start": "678720",
    "end": "680880"
  },
  {
    "text": "and what we have currently um we have",
    "start": "680880",
    "end": "683040"
  },
  {
    "text": "support for",
    "start": "683040",
    "end": "683920"
  },
  {
    "text": "a rest client library we have support",
    "start": "683920",
    "end": "687519"
  },
  {
    "text": "for a go client library",
    "start": "687519",
    "end": "690079"
  },
  {
    "text": "a c client library which is a which is",
    "start": "690079",
    "end": "693120"
  },
  {
    "text": "made possible through embed crypto",
    "start": "693120",
    "end": "695360"
  },
  {
    "text": "and we also have a cli tool to access",
    "start": "695360",
    "end": "698160"
  },
  {
    "text": "basic",
    "start": "698160",
    "end": "700560"
  },
  {
    "text": "so each of those are our ways for for",
    "start": "700720",
    "end": "704079"
  },
  {
    "text": "your your your workloads to to access",
    "start": "704079",
    "end": "706800"
  },
  {
    "text": "the perfect service",
    "start": "706800",
    "end": "708959"
  },
  {
    "start": "708000",
    "end": "901000"
  },
  {
    "text": "and let's see let's see how uh an actual",
    "start": "708959",
    "end": "712240"
  },
  {
    "text": "example of",
    "start": "712240",
    "end": "712880"
  },
  {
    "text": "of the of the resclient library looks",
    "start": "712880",
    "end": "714639"
  },
  {
    "text": "like so as i told before",
    "start": "714639",
    "end": "717120"
  },
  {
    "text": "this is the this is the the",
    "start": "717120",
    "end": "720320"
  },
  {
    "text": "the core library level so so the layer",
    "start": "720320",
    "end": "722399"
  },
  {
    "text": "where",
    "start": "722399",
    "end": "724160"
  },
  {
    "text": "all the parameters are to be defined by",
    "start": "724160",
    "end": "727920"
  },
  {
    "text": "the column so not the easiest layer",
    "start": "727920",
    "end": "729680"
  },
  {
    "text": "but still as you can see all this code",
    "start": "729680",
    "end": "733040"
  },
  {
    "text": "which is like around 25 lines",
    "start": "733040",
    "end": "735440"
  },
  {
    "text": "is enough to uh to instantiate a",
    "start": "735440",
    "end": "739839"
  },
  {
    "text": "pass a client generate a keypair sign a",
    "start": "739839",
    "end": "743120"
  },
  {
    "text": "hash",
    "start": "743120",
    "end": "743600"
  },
  {
    "text": "and export a public key so it's not",
    "start": "743600",
    "end": "745360"
  },
  {
    "text": "actually it's not it's not that much",
    "start": "745360",
    "end": "748240"
  },
  {
    "text": "um so if you if you focus on the four",
    "start": "748240",
    "end": "752480"
  },
  {
    "text": "last lines we",
    "start": "752480",
    "end": "755760"
  },
  {
    "text": "we actually do perform the actual calls",
    "start": "755760",
    "end": "758880"
  },
  {
    "text": "where we",
    "start": "758880",
    "end": "759920"
  },
  {
    "text": "create basic basic clients which is the",
    "start": "759920",
    "end": "763600"
  },
  {
    "text": "the name of the rest client we generate",
    "start": "763600",
    "end": "765920"
  },
  {
    "text": "a key pair",
    "start": "765920",
    "end": "767040"
  },
  {
    "text": "uh and that is using the psc crypto as",
    "start": "767040",
    "end": "771040"
  },
  {
    "text": "as as an api as i told before so when",
    "start": "771040",
    "end": "773680"
  },
  {
    "text": "generating a keypair you have to give",
    "start": "773680",
    "end": "775680"
  },
  {
    "text": "key attributes and in that case we say",
    "start": "775680",
    "end": "778399"
  },
  {
    "text": "that",
    "start": "778399",
    "end": "779279"
  },
  {
    "text": "the key that we are going to generate is",
    "start": "779279",
    "end": "782399"
  },
  {
    "text": "a ecc keeper",
    "start": "782399",
    "end": "784320"
  },
  {
    "text": "we give it it's curve family and the",
    "start": "784320",
    "end": "786639"
  },
  {
    "text": "specific curve that it's going to use",
    "start": "786639",
    "end": "788480"
  },
  {
    "text": "and also we give a policy uh where we",
    "start": "788480",
    "end": "790880"
  },
  {
    "text": "say that um",
    "start": "790880",
    "end": "792959"
  },
  {
    "text": "with this key you you will only be",
    "start": "792959",
    "end": "795519"
  },
  {
    "text": "allowed to",
    "start": "795519",
    "end": "796720"
  },
  {
    "text": "to sign ash and nothing else so you",
    "start": "796720",
    "end": "798720"
  },
  {
    "text": "can't export it for example",
    "start": "798720",
    "end": "800800"
  },
  {
    "text": "and you can only use an",
    "start": "800800",
    "end": "803839"
  },
  {
    "text": "algorithm that we that we specify and in",
    "start": "803839",
    "end": "805920"
  },
  {
    "text": "this case is ecgsa with",
    "start": "805920",
    "end": "807839"
  },
  {
    "text": "shadow56 and",
    "start": "807839",
    "end": "811120"
  },
  {
    "text": "then on on the on the other line we",
    "start": "811120",
    "end": "814320"
  },
  {
    "text": "we assign a small text to it and this",
    "start": "814320",
    "end": "816880"
  },
  {
    "text": "specific algorithm and then we export",
    "start": "816880",
    "end": "818480"
  },
  {
    "text": "the the public key",
    "start": "818480",
    "end": "821360"
  },
  {
    "text": "so if two two other things to notice in",
    "start": "821440",
    "end": "824000"
  },
  {
    "text": "that snippet of code",
    "start": "824000",
    "end": "825360"
  },
  {
    "text": "is that the key names are referenced",
    "start": "825360",
    "end": "827600"
  },
  {
    "text": "using utf-8 strings",
    "start": "827600",
    "end": "829600"
  },
  {
    "text": "so as you can see you can put emojis in",
    "start": "829600",
    "end": "831519"
  },
  {
    "text": "it which is",
    "start": "831519",
    "end": "832880"
  },
  {
    "text": "it can be nice and also",
    "start": "832880",
    "end": "837600"
  },
  {
    "text": "to to actually instantiate a",
    "start": "837600",
    "end": "841279"
  },
  {
    "text": "client so there is just one one new",
    "start": "841279",
    "end": "844480"
  },
  {
    "text": "uh method here but what happens in the",
    "start": "844480",
    "end": "847760"
  },
  {
    "text": "in the background is actually a very",
    "start": "847760",
    "end": "850000"
  },
  {
    "text": "much more complicated than that is that",
    "start": "850000",
    "end": "852480"
  },
  {
    "text": "when creating these clients",
    "start": "852480",
    "end": "854240"
  },
  {
    "text": "this client will actually use the",
    "start": "854240",
    "end": "856079"
  },
  {
    "text": "default parsec provider and the default",
    "start": "856079",
    "end": "858800"
  },
  {
    "text": "persec authenticator on the system",
    "start": "858800",
    "end": "861600"
  },
  {
    "text": "and when i mean default is that it's the",
    "start": "861600",
    "end": "863760"
  },
  {
    "text": "default that has been set",
    "start": "863760",
    "end": "865199"
  },
  {
    "text": "by uh by the parsec administrator",
    "start": "865199",
    "end": "868320"
  },
  {
    "text": "when setting up per second the system",
    "start": "868320",
    "end": "871839"
  },
  {
    "text": "so this code these few lines of code",
    "start": "872000",
    "end": "876160"
  },
  {
    "text": "anywhere they are they are deployed they",
    "start": "876160",
    "end": "878160"
  },
  {
    "text": "will work",
    "start": "878160",
    "end": "880079"
  },
  {
    "text": "and they will work on the default",
    "start": "880079",
    "end": "883040"
  },
  {
    "text": "provider and",
    "start": "883040",
    "end": "884000"
  },
  {
    "text": "the default authenticator that parsec is",
    "start": "884000",
    "end": "885920"
  },
  {
    "text": "working with so if",
    "start": "885920",
    "end": "887760"
  },
  {
    "text": "parsec is deployed with a tpm those this",
    "start": "887760",
    "end": "890720"
  },
  {
    "text": "will work with a tpm",
    "start": "890720",
    "end": "892000"
  },
  {
    "text": "and if parsec is working with hsm this",
    "start": "892000",
    "end": "893920"
  },
  {
    "text": "will work with an hsn but this code does",
    "start": "893920",
    "end": "895440"
  },
  {
    "text": "not have to change",
    "start": "895440",
    "end": "896399"
  },
  {
    "text": "and that's the big value proposition of",
    "start": "896399",
    "end": "898079"
  },
  {
    "text": "barcelona that's the the cloud native",
    "start": "898079",
    "end": "900160"
  },
  {
    "text": "way so i've shown the the rest client",
    "start": "900160",
    "end": "903920"
  },
  {
    "start": "901000",
    "end": "978000"
  },
  {
    "text": "let's see",
    "start": "903920",
    "end": "904639"
  },
  {
    "text": "the exact same um same code so the the",
    "start": "904639",
    "end": "907519"
  },
  {
    "text": "exact same",
    "start": "907519",
    "end": "908800"
  },
  {
    "text": "same operations but using the parsec",
    "start": "908800",
    "end": "910720"
  },
  {
    "text": "tool which is the cli client",
    "start": "910720",
    "end": "914160"
  },
  {
    "text": "and in the exact same way here we have a",
    "start": "914160",
    "end": "916959"
  },
  {
    "text": "we have commands to",
    "start": "916959",
    "end": "918560"
  },
  {
    "text": "to create an ecc key",
    "start": "918560",
    "end": "922000"
  },
  {
    "text": "we have another command to sign and then",
    "start": "922000",
    "end": "925040"
  },
  {
    "text": "we export the public key here",
    "start": "925040",
    "end": "927519"
  },
  {
    "text": "and in the exact same way this is using",
    "start": "927519",
    "end": "929600"
  },
  {
    "text": "the default",
    "start": "929600",
    "end": "930720"
  },
  {
    "text": "provider and the default authenticator",
    "start": "930720",
    "end": "932639"
  },
  {
    "text": "on the system",
    "start": "932639",
    "end": "934720"
  },
  {
    "text": "of course it's if if parsec is is",
    "start": "934720",
    "end": "937839"
  },
  {
    "text": "deployed",
    "start": "937839",
    "end": "939040"
  },
  {
    "text": "on a system where there is both a tpm",
    "start": "939040",
    "end": "942720"
  },
  {
    "text": "an hsm and",
    "start": "942720",
    "end": "945839"
  },
  {
    "text": "a trusted service it's possible to",
    "start": "946000",
    "end": "948240"
  },
  {
    "text": "choose like uh",
    "start": "948240",
    "end": "949839"
  },
  {
    "text": "in the in the code the specific one that",
    "start": "949839",
    "end": "953199"
  },
  {
    "text": "you want",
    "start": "953199",
    "end": "954480"
  },
  {
    "text": "but by default and using the simple",
    "start": "954480",
    "end": "956399"
  },
  {
    "text": "commands it will use the",
    "start": "956399",
    "end": "958160"
  },
  {
    "text": "the default one which is often the only",
    "start": "958160",
    "end": "960480"
  },
  {
    "text": "one that that barcode is deployed with",
    "start": "960480",
    "end": "964079"
  },
  {
    "text": "so yeah that was it for the for the",
    "start": "964880",
    "end": "967759"
  },
  {
    "text": "passive part of the presentation uh uh",
    "start": "967759",
    "end": "969920"
  },
  {
    "text": "uh i also wanted to to present what's",
    "start": "969920",
    "end": "973120"
  },
  {
    "text": "our involvement in the in the larger",
    "start": "973120",
    "end": "974639"
  },
  {
    "text": "risk community so what what do we do for",
    "start": "974639",
    "end": "976399"
  },
  {
    "text": "the rest community",
    "start": "976399",
    "end": "978560"
  },
  {
    "start": "978000",
    "end": "1091000"
  },
  {
    "text": "so as i as i told before parsec is a",
    "start": "978560",
    "end": "981519"
  },
  {
    "text": "heavily relies",
    "start": "981519",
    "end": "982720"
  },
  {
    "text": "on the different route of trust so on",
    "start": "982720",
    "end": "985680"
  },
  {
    "text": "the different hardware back",
    "start": "985680",
    "end": "986880"
  },
  {
    "text": "security modules and that we",
    "start": "986880",
    "end": "990720"
  },
  {
    "text": "that we use and instead of",
    "start": "990720",
    "end": "994000"
  },
  {
    "text": "developing the code uh inside the",
    "start": "994000",
    "end": "998079"
  },
  {
    "text": "inside the the the code source",
    "start": "998079",
    "end": "1001680"
  },
  {
    "text": "we decided to to publish uh",
    "start": "1001680",
    "end": "1005360"
  },
  {
    "text": "independent crates for for each of them",
    "start": "1005360",
    "end": "1007759"
  },
  {
    "text": "so for example for the tpm",
    "start": "1007759",
    "end": "1010000"
  },
  {
    "text": "we have a tss yes api crate",
    "start": "1010000",
    "end": "1013680"
  },
  {
    "text": "which is which is a wrapper around the",
    "start": "1013680",
    "end": "1017680"
  },
  {
    "text": "enhanced system api to communicate with",
    "start": "1017680",
    "end": "1019839"
  },
  {
    "text": "gpms",
    "start": "1019839",
    "end": "1021040"
  },
  {
    "text": "for hsm we have the crypto key crate",
    "start": "1021040",
    "end": "1023279"
  },
  {
    "text": "which is wrapped around the pkcs11 api",
    "start": "1023279",
    "end": "1027120"
  },
  {
    "text": "and for the trusted service provider we",
    "start": "1027120",
    "end": "1029520"
  },
  {
    "text": "have the um",
    "start": "1029520",
    "end": "1030558"
  },
  {
    "text": "and that's used in parsec as well we",
    "start": "1030559",
    "end": "1032319"
  },
  {
    "text": "have the psa cryptocrate",
    "start": "1032319",
    "end": "1034079"
  },
  {
    "text": "a wrap around the ps4 cryptoc api",
    "start": "1034079",
    "end": "1038480"
  },
  {
    "text": "and all of those crates are rebuilt in a",
    "start": "1038480",
    "end": "1041280"
  },
  {
    "text": "similar way because they are",
    "start": "1041280",
    "end": "1043360"
  },
  {
    "text": "as as in they're all safe abstraction",
    "start": "1043360",
    "end": "1046319"
  },
  {
    "text": "oversee apis",
    "start": "1046319",
    "end": "1047760"
  },
  {
    "text": "so they are really using uh rust ejumps",
    "start": "1047760",
    "end": "1050799"
  },
  {
    "text": "and rusty geometric codes",
    "start": "1050799",
    "end": "1052559"
  },
  {
    "text": "to make sure that that what is exported",
    "start": "1052559",
    "end": "1055520"
  },
  {
    "text": "in rust is always safe",
    "start": "1055520",
    "end": "1056960"
  },
  {
    "text": "memory safe and straight safe so that",
    "start": "1056960",
    "end": "1060240"
  },
  {
    "text": "they are actually really nice to use and",
    "start": "1060240",
    "end": "1063760"
  },
  {
    "text": "[Music]",
    "start": "1063760",
    "end": "1065039"
  },
  {
    "text": "even for someone that has no no interest",
    "start": "1065039",
    "end": "1066960"
  },
  {
    "text": "at all in person just wants to use a",
    "start": "1066960",
    "end": "1069200"
  },
  {
    "text": "tpm hsn uh interest those are",
    "start": "1069200",
    "end": "1072320"
  },
  {
    "text": "uh really nice to do so and yeah many",
    "start": "1072320",
    "end": "1075760"
  },
  {
    "text": "people are using them uh",
    "start": "1075760",
    "end": "1076960"
  },
  {
    "text": "yeah totally independently for fanbase",
    "start": "1076960",
    "end": "1079039"
  },
  {
    "text": "so so that's that's that's really great",
    "start": "1079039",
    "end": "1080960"
  },
  {
    "text": "to",
    "start": "1080960",
    "end": "1081280"
  },
  {
    "text": "to see to see engagement from the",
    "start": "1081280",
    "end": "1083360"
  },
  {
    "text": "community just for for those specific",
    "start": "1083360",
    "end": "1085120"
  },
  {
    "text": "parts",
    "start": "1085120",
    "end": "1087360"
  },
  {
    "text": "so other than the crate that we that we",
    "start": "1087360",
    "end": "1091440"
  },
  {
    "start": "1091000",
    "end": "1264000"
  },
  {
    "text": "that we ship we also contributed to to",
    "start": "1091440",
    "end": "1094160"
  },
  {
    "text": "other",
    "start": "1094160",
    "end": "1095200"
  },
  {
    "text": "rust projects so for bioengine for",
    "start": "1095200",
    "end": "1097520"
  },
  {
    "text": "example we",
    "start": "1097520",
    "end": "1098240"
  },
  {
    "text": "we added a support for",
    "start": "1098240",
    "end": "1101440"
  },
  {
    "text": "dynamic loading in biogen itself so",
    "start": "1101440",
    "end": "1104400"
  },
  {
    "text": "using the",
    "start": "1104400",
    "end": "1105120"
  },
  {
    "text": "lib loading crate so that binding is",
    "start": "1105120",
    "end": "1108000"
  },
  {
    "text": "capable of",
    "start": "1108000",
    "end": "1108799"
  },
  {
    "text": "generating a structure uh",
    "start": "1108799",
    "end": "1112320"
  },
  {
    "text": "which creates a",
    "start": "1112320",
    "end": "1115360"
  },
  {
    "text": "lib loading context so that's for",
    "start": "1115440",
    "end": "1117840"
  },
  {
    "text": "example you can see",
    "start": "1117840",
    "end": "1119039"
  },
  {
    "text": "here and that's what we use in the",
    "start": "1119039",
    "end": "1120559"
  },
  {
    "text": "crypto key",
    "start": "1120559",
    "end": "1122480"
  },
  {
    "text": "syscrate is that it generates this",
    "start": "1122480",
    "end": "1125520"
  },
  {
    "text": "pkcs11 structure",
    "start": "1125520",
    "end": "1127120"
  },
  {
    "text": "in this specific case because it's been",
    "start": "1127120",
    "end": "1128640"
  },
  {
    "text": "given the pkcs11 ca",
    "start": "1128640",
    "end": "1130400"
  },
  {
    "text": "api header file and so that at runtime",
    "start": "1130400",
    "end": "1134000"
  },
  {
    "text": "we just have to give him the the path of",
    "start": "1134000",
    "end": "1135679"
  },
  {
    "text": "the dynamic library and it will",
    "start": "1135679",
    "end": "1138000"
  },
  {
    "text": "automatically create the leap loading",
    "start": "1138000",
    "end": "1139919"
  },
  {
    "text": "structure so that's really useful",
    "start": "1139919",
    "end": "1142080"
  },
  {
    "text": "for for rest abstraction of the",
    "start": "1142080",
    "end": "1145520"
  },
  {
    "text": "other api and libraries that are meant",
    "start": "1145520",
    "end": "1148080"
  },
  {
    "text": "to be",
    "start": "1148080",
    "end": "1148880"
  },
  {
    "text": "to be loaded at some time",
    "start": "1148880",
    "end": "1152160"
  },
  {
    "text": "we added the peer credential support for",
    "start": "1152799",
    "end": "1155200"
  },
  {
    "text": "unix domain sockets",
    "start": "1155200",
    "end": "1157200"
  },
  {
    "text": "um and that's currently available in",
    "start": "1157200",
    "end": "1159440"
  },
  {
    "text": "nightly rest",
    "start": "1159440",
    "end": "1160320"
  },
  {
    "text": "with the the pr cred method that that",
    "start": "1160320",
    "end": "1163520"
  },
  {
    "text": "that",
    "start": "1163520",
    "end": "1164000"
  },
  {
    "text": "is to be executed on the unix stream and",
    "start": "1164000",
    "end": "1167280"
  },
  {
    "text": "that method actually returns the uid",
    "start": "1167280",
    "end": "1170559"
  },
  {
    "text": "and the the group id of the process that",
    "start": "1170559",
    "end": "1173520"
  },
  {
    "text": "is on the other side of the",
    "start": "1173520",
    "end": "1175840"
  },
  {
    "text": "of the of the socket and that's mainly",
    "start": "1175840",
    "end": "1178080"
  },
  {
    "text": "uh what we use",
    "start": "1178080",
    "end": "1179600"
  },
  {
    "text": "in the in the bar second indicator to",
    "start": "1179600",
    "end": "1181840"
  },
  {
    "text": "make sure to to check",
    "start": "1181840",
    "end": "1183440"
  },
  {
    "text": "that the uid match the client that is",
    "start": "1183440",
    "end": "1186720"
  },
  {
    "text": "that is calling basic and also we added",
    "start": "1186720",
    "end": "1189760"
  },
  {
    "text": "a basic uh",
    "start": "1189760",
    "end": "1191919"
  },
  {
    "text": "svid uh token api support in in russ",
    "start": "1191919",
    "end": "1194960"
  },
  {
    "text": "bifi",
    "start": "1194960",
    "end": "1195679"
  },
  {
    "text": "and that's what we're using our specific",
    "start": "1195679",
    "end": "1197520"
  },
  {
    "text": "authenticator",
    "start": "1197520",
    "end": "1200160"
  },
  {
    "text": "so yeah so that's it for",
    "start": "1201039",
    "end": "1204400"
  },
  {
    "text": "for for for this presentation uh thanks",
    "start": "1204400",
    "end": "1207120"
  },
  {
    "text": "a lot for",
    "start": "1207120",
    "end": "1208159"
  },
  {
    "text": "for listening to it um you can check the",
    "start": "1208159",
    "end": "1211280"
  },
  {
    "text": "code of pasek and the code of the",
    "start": "1211280",
    "end": "1212880"
  },
  {
    "text": "different crates that i presented in",
    "start": "1212880",
    "end": "1214880"
  },
  {
    "text": "in the prolac second github organization",
    "start": "1214880",
    "end": "1217919"
  },
  {
    "text": "if you're interested in pasek make sure",
    "start": "1217919",
    "end": "1220080"
  },
  {
    "text": "to check out our book",
    "start": "1220080",
    "end": "1222000"
  },
  {
    "text": "it actually contains a quick a quick",
    "start": "1222000",
    "end": "1223919"
  },
  {
    "text": "start guide",
    "start": "1223919",
    "end": "1225120"
  },
  {
    "text": "um if you're running a linux and x86",
    "start": "1225120",
    "end": "1228799"
  },
  {
    "text": "to to to really uh get you started",
    "start": "1228799",
    "end": "1231039"
  },
  {
    "text": "quickly",
    "start": "1231039",
    "end": "1231840"
  },
  {
    "text": "um and uh try trying the",
    "start": "1231840",
    "end": "1235120"
  },
  {
    "text": "the actual trying the the cli parsec",
    "start": "1235120",
    "end": "1237280"
  },
  {
    "text": "tool uh quickly",
    "start": "1237280",
    "end": "1239440"
  },
  {
    "text": "we are on the cncf slack workspace on",
    "start": "1239440",
    "end": "1241760"
  },
  {
    "text": "the pacific channel if you have any",
    "start": "1241760",
    "end": "1243039"
  },
  {
    "text": "questions at all",
    "start": "1243039",
    "end": "1244080"
  },
  {
    "text": "uh really feel free to to chat with us",
    "start": "1244080",
    "end": "1247039"
  },
  {
    "text": "and we have a weekly community call as",
    "start": "1247039",
    "end": "1248559"
  },
  {
    "text": "well",
    "start": "1248559",
    "end": "1249039"
  },
  {
    "text": "uh on tuesdays uh where where you can",
    "start": "1249039",
    "end": "1251840"
  },
  {
    "text": "where you can",
    "start": "1251840",
    "end": "1252640"
  },
  {
    "text": "also join and chat with uh with us so if",
    "start": "1252640",
    "end": "1256000"
  },
  {
    "text": "you have any questions",
    "start": "1256000",
    "end": "1256880"
  },
  {
    "text": "i'll i'll be really happy to to to",
    "start": "1256880",
    "end": "1258799"
  },
  {
    "text": "answer and yeah otherwise",
    "start": "1258799",
    "end": "1260640"
  },
  {
    "text": "thanks a lot for listening to me today",
    "start": "1260640",
    "end": "1263080"
  },
  {
    "text": "thanks",
    "start": "1263080",
    "end": "1266080"
  }
]