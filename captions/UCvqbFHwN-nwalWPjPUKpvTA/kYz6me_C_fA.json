[
  {
    "start": "0",
    "end": "78000"
  },
  {
    "text": "thanks everyone for being here so rob",
    "start": "1040",
    "end": "2800"
  },
  {
    "text": "and i are here to talk to you all about",
    "start": "2800",
    "end": "5440"
  },
  {
    "text": "streaming recording rules for prometheus",
    "start": "5440",
    "end": "7680"
  },
  {
    "text": "thanos and cortex using the m3",
    "start": "7680",
    "end": "10000"
  },
  {
    "text": "coordinator",
    "start": "10000",
    "end": "12559"
  },
  {
    "text": "all right so just a little bit about us",
    "start": "13040",
    "end": "15040"
  },
  {
    "text": "before getting started so my name is",
    "start": "15040",
    "end": "17199"
  },
  {
    "text": "gibbs cullen i'm a developer advocate at",
    "start": "17199",
    "end": "19279"
  },
  {
    "text": "chronosphere",
    "start": "19279",
    "end": "20640"
  },
  {
    "text": "um",
    "start": "20640",
    "end": "21520"
  },
  {
    "text": "during my time at chronosphere i've",
    "start": "21520",
    "end": "23600"
  },
  {
    "text": "helped work on the m3 project as a",
    "start": "23600",
    "end": "25840"
  },
  {
    "text": "contributor",
    "start": "25840",
    "end": "26960"
  },
  {
    "text": "also a member of the cncf observability",
    "start": "26960",
    "end": "29760"
  },
  {
    "text": "tag and um",
    "start": "29760",
    "end": "32320"
  },
  {
    "text": "and then i think i have my twitter up",
    "start": "32320",
    "end": "33840"
  },
  {
    "text": "there as well",
    "start": "33840",
    "end": "35440"
  },
  {
    "text": "and i'm rob um back",
    "start": "35440",
    "end": "37840"
  },
  {
    "text": "uh just to mainly do the demo with gibbs",
    "start": "37840",
    "end": "40239"
  },
  {
    "text": "here",
    "start": "40239",
    "end": "41520"
  },
  {
    "text": "as i mentioned before um have worked on",
    "start": "41520",
    "end": "44640"
  },
  {
    "text": "and create created the m3db open source",
    "start": "44640",
    "end": "46879"
  },
  {
    "text": "project and also an open metrics",
    "start": "46879",
    "end": "49360"
  },
  {
    "text": "contributor which is a cncf project",
    "start": "49360",
    "end": "51680"
  },
  {
    "text": "defining a standard for transmitting",
    "start": "51680",
    "end": "53360"
  },
  {
    "text": "metrics based on the prometheus",
    "start": "53360",
    "end": "55360"
  },
  {
    "text": "exposition format",
    "start": "55360",
    "end": "58079"
  },
  {
    "text": "all right so just gonna go through the",
    "start": "58079",
    "end": "59680"
  },
  {
    "text": "agenda real quick so gonna start out",
    "start": "59680",
    "end": "61440"
  },
  {
    "text": "going through the problem statement and",
    "start": "61440",
    "end": "63280"
  },
  {
    "text": "then gonna talk about aggregation using",
    "start": "63280",
    "end": "65360"
  },
  {
    "text": "prometheus recording rules and then we",
    "start": "65360",
    "end": "67680"
  },
  {
    "text": "will go into streaming aggregation using",
    "start": "67680",
    "end": "70479"
  },
  {
    "text": "uh prometheus in the m3 coordinator",
    "start": "70479",
    "end": "73040"
  },
  {
    "text": "which rob will then give a quick demo on",
    "start": "73040",
    "end": "75520"
  },
  {
    "text": "and then",
    "start": "75520",
    "end": "76560"
  },
  {
    "text": "time for q a",
    "start": "76560",
    "end": "79360"
  },
  {
    "text": "all right so querying high cardinality",
    "start": "80159",
    "end": "81759"
  },
  {
    "text": "metrics",
    "start": "81759",
    "end": "83759"
  },
  {
    "text": "okay so here we have an example of a c",
    "start": "83759",
    "end": "86320"
  },
  {
    "text": "advisor dashboard",
    "start": "86320",
    "end": "88159"
  },
  {
    "text": "the c advisor dashboard basically just",
    "start": "88159",
    "end": "90159"
  },
  {
    "text": "provides",
    "start": "90159",
    "end": "91200"
  },
  {
    "text": "resource usage and performance metrics",
    "start": "91200",
    "end": "93520"
  },
  {
    "text": "of all your running containers and in",
    "start": "93520",
    "end": "95840"
  },
  {
    "text": "this particular dashboard we're looking",
    "start": "95840",
    "end": "97360"
  },
  {
    "text": "at",
    "start": "97360",
    "end": "99119"
  },
  {
    "text": "all the containers are pods within the",
    "start": "99119",
    "end": "101439"
  },
  {
    "text": "gateway application and um essentially",
    "start": "101439",
    "end": "104799"
  },
  {
    "text": "just giving you a kind of a quick look",
    "start": "104799",
    "end": "106799"
  },
  {
    "text": "or 10 000 foot view of",
    "start": "106799",
    "end": "108640"
  },
  {
    "text": "how all your",
    "start": "108640",
    "end": "110159"
  },
  {
    "text": "applications are performing across your",
    "start": "110159",
    "end": "111759"
  },
  {
    "text": "pods",
    "start": "111759",
    "end": "114560"
  },
  {
    "text": "so just looking",
    "start": "114560",
    "end": "115840"
  },
  {
    "text": "into a particular panel here looking at",
    "start": "115840",
    "end": "118079"
  },
  {
    "text": "cpu usage across all of your pods",
    "start": "118079",
    "end": "122079"
  },
  {
    "text": "we're going to look take a deeper look",
    "start": "122079",
    "end": "123600"
  },
  {
    "text": "and to see kind of what it takes to kind",
    "start": "123600",
    "end": "125920"
  },
  {
    "text": "of calculate",
    "start": "125920",
    "end": "127280"
  },
  {
    "text": "this metric",
    "start": "127280",
    "end": "128640"
  },
  {
    "text": "to kind of get the results you're you're",
    "start": "128640",
    "end": "130560"
  },
  {
    "text": "seeing in this overview",
    "start": "130560",
    "end": "133599"
  },
  {
    "text": "so as you can see here and this and this",
    "start": "135120",
    "end": "138080"
  },
  {
    "text": "query here so we're looking at the cpu",
    "start": "138080",
    "end": "141120"
  },
  {
    "text": "usage",
    "start": "141120",
    "end": "142400"
  },
  {
    "text": "metric",
    "start": "142400",
    "end": "143440"
  },
  {
    "text": "and you can see that it it's going to",
    "start": "143440",
    "end": "145840"
  },
  {
    "text": "take quite a long time for you to render",
    "start": "145840",
    "end": "148480"
  },
  {
    "text": "all of your query results and that's",
    "start": "148480",
    "end": "150239"
  },
  {
    "text": "because",
    "start": "150239",
    "end": "151200"
  },
  {
    "text": "your query is pulling again across",
    "start": "151200",
    "end": "153760"
  },
  {
    "text": "pulling all the labels across all of",
    "start": "153760",
    "end": "155040"
  },
  {
    "text": "your pods and that's going to result in",
    "start": "155040",
    "end": "157519"
  },
  {
    "text": "about 51 000",
    "start": "157519",
    "end": "159680"
  },
  {
    "text": "time series metrics so",
    "start": "159680",
    "end": "161599"
  },
  {
    "text": "with that sort of load you're going to",
    "start": "161599",
    "end": "163040"
  },
  {
    "text": "have it's going to take about 20 seconds",
    "start": "163040",
    "end": "165280"
  },
  {
    "text": "for",
    "start": "165280",
    "end": "166239"
  },
  {
    "text": "your",
    "start": "166239",
    "end": "167040"
  },
  {
    "text": "query results to",
    "start": "167040",
    "end": "168840"
  },
  {
    "text": "render but in most cases you don't",
    "start": "168840",
    "end": "171120"
  },
  {
    "text": "typically need to have this",
    "start": "171120",
    "end": "173680"
  },
  {
    "text": "look at all your kind of pod level",
    "start": "173680",
    "end": "176160"
  },
  {
    "text": "metrics um so in most cases you probably",
    "start": "176160",
    "end": "179120"
  },
  {
    "text": "just want to look at the aggregate level",
    "start": "179120",
    "end": "180560"
  },
  {
    "text": "view to see what's going on across your",
    "start": "180560",
    "end": "182400"
  },
  {
    "text": "pods",
    "start": "182400",
    "end": "183360"
  },
  {
    "text": "and so in order to do that you can",
    "start": "183360",
    "end": "186400"
  },
  {
    "text": "do some aggregation so in this example",
    "start": "186400",
    "end": "188800"
  },
  {
    "text": "we are looking at just",
    "start": "188800",
    "end": "190640"
  },
  {
    "text": "two labels so we're aggregating on two",
    "start": "190640",
    "end": "192239"
  },
  {
    "text": "labels container name and namespace",
    "start": "192239",
    "end": "195599"
  },
  {
    "text": "and by by doing this aggregation on",
    "start": "195599",
    "end": "198000"
  },
  {
    "text": "these two labels kind of before you do",
    "start": "198000",
    "end": "199760"
  },
  {
    "text": "the query",
    "start": "199760",
    "end": "200959"
  },
  {
    "text": "you're able to cut down um by quite a",
    "start": "200959",
    "end": "203760"
  },
  {
    "text": "bit the time it takes for your results",
    "start": "203760",
    "end": "205920"
  },
  {
    "text": "to render so",
    "start": "205920",
    "end": "207360"
  },
  {
    "text": "in this example now it's only going to",
    "start": "207360",
    "end": "208959"
  },
  {
    "text": "take less than a second for your query",
    "start": "208959",
    "end": "210799"
  },
  {
    "text": "results to render and then",
    "start": "210799",
    "end": "212720"
  },
  {
    "text": "and that's mostly because you've cut it",
    "start": "212720",
    "end": "214720"
  },
  {
    "text": "down to about 230 time series",
    "start": "214720",
    "end": "218799"
  },
  {
    "start": "220000",
    "end": "344000"
  },
  {
    "text": "and one of the ways you can do this",
    "start": "222400",
    "end": "223920"
  },
  {
    "text": "aggregation kind of before the query to",
    "start": "223920",
    "end": "226000"
  },
  {
    "text": "get these",
    "start": "226000",
    "end": "227200"
  },
  {
    "text": "improved results is through prometheus",
    "start": "227200",
    "end": "229519"
  },
  {
    "text": "recording rules",
    "start": "229519",
    "end": "232239"
  },
  {
    "text": "so just going to go through what",
    "start": "232959",
    "end": "234560"
  },
  {
    "text": "prometheus recording rules are",
    "start": "234560",
    "end": "237200"
  },
  {
    "text": "so essentially",
    "start": "237200",
    "end": "238400"
  },
  {
    "text": "they allow you to pre-compute",
    "start": "238400",
    "end": "241599"
  },
  {
    "text": "frequently needed or computationally",
    "start": "241599",
    "end": "243599"
  },
  {
    "text": "expensive expressions which you can then",
    "start": "243599",
    "end": "245920"
  },
  {
    "text": "store back as a new",
    "start": "245920",
    "end": "248640"
  },
  {
    "text": "new set of time series to your time",
    "start": "248640",
    "end": "250560"
  },
  {
    "text": "series database",
    "start": "250560",
    "end": "252400"
  },
  {
    "text": "and",
    "start": "252400",
    "end": "253280"
  },
  {
    "text": "these rules are typically evaluated",
    "start": "253280",
    "end": "256079"
  },
  {
    "text": "and pre-computed on",
    "start": "256079",
    "end": "258000"
  },
  {
    "text": "regular intervals so using the cron job",
    "start": "258000",
    "end": "260560"
  },
  {
    "text": "type processes",
    "start": "260560",
    "end": "262000"
  },
  {
    "text": "and this makes them really useful for",
    "start": "262000",
    "end": "263680"
  },
  {
    "text": "dashboard purposes where you need to",
    "start": "263680",
    "end": "266639"
  },
  {
    "text": "kind of use the same expression",
    "start": "266639",
    "end": "269280"
  },
  {
    "text": "over and over again",
    "start": "269280",
    "end": "270720"
  },
  {
    "text": "without having to",
    "start": "270720",
    "end": "272800"
  },
  {
    "text": "every time they're refreshed and so",
    "start": "272800",
    "end": "274639"
  },
  {
    "text": "recording rules make it so that you",
    "start": "274639",
    "end": "276000"
  },
  {
    "text": "don't have to kind of do that",
    "start": "276000",
    "end": "277680"
  },
  {
    "text": "reevaluation every time",
    "start": "277680",
    "end": "280240"
  },
  {
    "text": "and again",
    "start": "280240",
    "end": "281680"
  },
  {
    "text": "they are",
    "start": "281680",
    "end": "282800"
  },
  {
    "text": "um because they are compatible and",
    "start": "282800",
    "end": "284800"
  },
  {
    "text": "supported by prometheus you have all of",
    "start": "284800",
    "end": "286240"
  },
  {
    "text": "your prom ql functions available to you",
    "start": "286240",
    "end": "290240"
  },
  {
    "text": "and in this slide we're just going to",
    "start": "290240",
    "end": "291360"
  },
  {
    "text": "look at an example of a recording rule",
    "start": "291360",
    "end": "293280"
  },
  {
    "text": "so i believe the um",
    "start": "293280",
    "end": "296479"
  },
  {
    "text": "the code here we have the cpu kind of",
    "start": "296479",
    "end": "299280"
  },
  {
    "text": "usage metric that we are",
    "start": "299280",
    "end": "302080"
  },
  {
    "text": "summing at a regular interval so every",
    "start": "302080",
    "end": "303759"
  },
  {
    "text": "minute in this recording rule and then",
    "start": "303759",
    "end": "305840"
  },
  {
    "text": "it's going to be grouped by the two",
    "start": "305840",
    "end": "307600"
  },
  {
    "text": "labels um and the config so container",
    "start": "307600",
    "end": "310479"
  },
  {
    "text": "name and namespace but basically inside",
    "start": "310479",
    "end": "312880"
  },
  {
    "text": "this",
    "start": "312880",
    "end": "314080"
  },
  {
    "text": "inside this diagram you have your single",
    "start": "314080",
    "end": "316160"
  },
  {
    "text": "prometheus node you have your rule",
    "start": "316160",
    "end": "317840"
  },
  {
    "text": "manager it's pinging the querier at",
    "start": "317840",
    "end": "320320"
  },
  {
    "text": "these regular intervals",
    "start": "320320",
    "end": "322000"
  },
  {
    "text": "so these are stimming samples inside the",
    "start": "322000",
    "end": "323600"
  },
  {
    "text": "diagram here and at that point it's",
    "start": "323600",
    "end": "326320"
  },
  {
    "text": "going to create a brand new",
    "start": "326320",
    "end": "328479"
  },
  {
    "text": "aggregated time series which",
    "start": "328479",
    "end": "330560"
  },
  {
    "text": "will then be",
    "start": "330560",
    "end": "331919"
  },
  {
    "text": "sent to your time series database",
    "start": "331919",
    "end": "335039"
  },
  {
    "text": "and this is all just just to know this",
    "start": "335039",
    "end": "336960"
  },
  {
    "text": "is going to be all done in memory and as",
    "start": "336960",
    "end": "338720"
  },
  {
    "text": "like a single process",
    "start": "338720",
    "end": "341680"
  },
  {
    "text": "but let's say you",
    "start": "342800",
    "end": "344720"
  },
  {
    "start": "344000",
    "end": "512000"
  },
  {
    "text": "wanted to do",
    "start": "344720",
    "end": "345919"
  },
  {
    "text": "aggregation outside of your prometheus",
    "start": "345919",
    "end": "349039"
  },
  {
    "text": "instances or and kind of use a remote",
    "start": "349039",
    "end": "350880"
  },
  {
    "text": "storage solution",
    "start": "350880",
    "end": "353039"
  },
  {
    "text": "for larger scale use cases",
    "start": "353039",
    "end": "355680"
  },
  {
    "text": "and to also aggregate at almost any",
    "start": "355680",
    "end": "358080"
  },
  {
    "text": "level of time series without increasing",
    "start": "358080",
    "end": "360400"
  },
  {
    "text": "the load of your heavy recording rules",
    "start": "360400",
    "end": "362720"
  },
  {
    "text": "then",
    "start": "362720",
    "end": "363680"
  },
  {
    "text": "m3 then kind of you could do this using",
    "start": "363680",
    "end": "366160"
  },
  {
    "text": "m3 and m3 coordinator which allows for",
    "start": "366160",
    "end": "368800"
  },
  {
    "text": "the streaming aggregation",
    "start": "368800",
    "end": "372240"
  },
  {
    "text": "okay so kind of just to",
    "start": "374000",
    "end": "376560"
  },
  {
    "text": "go into a little bit more about how m3",
    "start": "376560",
    "end": "378639"
  },
  {
    "text": "does the streaming aggregation first of",
    "start": "378639",
    "end": "380560"
  },
  {
    "text": "all just a quick review of a recap of",
    "start": "380560",
    "end": "383039"
  },
  {
    "text": "what m3 is so it's a remote storage",
    "start": "383039",
    "end": "386240"
  },
  {
    "text": "um",
    "start": "386240",
    "end": "387280"
  },
  {
    "text": "prometheus remote storage solution it's",
    "start": "387280",
    "end": "389280"
  },
  {
    "text": "created back at uber in 2016 to help",
    "start": "389280",
    "end": "392800"
  },
  {
    "text": "manage their metrics monitoring use",
    "start": "392800",
    "end": "394800"
  },
  {
    "text": "cases internally and now is used by many",
    "start": "394800",
    "end": "397120"
  },
  {
    "text": "other big companies including including",
    "start": "397120",
    "end": "399120"
  },
  {
    "text": "chronosphere",
    "start": "399120",
    "end": "401520"
  },
  {
    "text": "and then with m3 so the aggregation is",
    "start": "401520",
    "end": "403919"
  },
  {
    "text": "going to be moved",
    "start": "403919",
    "end": "405600"
  },
  {
    "text": "from kind of your recording rules to",
    "start": "405600",
    "end": "408080"
  },
  {
    "text": "streaming aggregation and we're going to",
    "start": "408080",
    "end": "409759"
  },
  {
    "text": "do that using what we call roll up rules",
    "start": "409759",
    "end": "412000"
  },
  {
    "text": "and rollup rules um essentially solve",
    "start": "412000",
    "end": "414800"
  },
  {
    "text": "the same problem as",
    "start": "414800",
    "end": "416400"
  },
  {
    "text": "prometheus recording rules except we",
    "start": "416400",
    "end": "418720"
  },
  {
    "text": "just take a slightly different approach",
    "start": "418720",
    "end": "420960"
  },
  {
    "text": "and what we do is we um through the",
    "start": "420960",
    "end": "423280"
  },
  {
    "text": "aggregation using the m3 coordinator and",
    "start": "423280",
    "end": "426800"
  },
  {
    "text": "in some use cases the aggregator tiers",
    "start": "426800",
    "end": "429039"
  },
  {
    "text": "like in the diagram here",
    "start": "429039",
    "end": "430800"
  },
  {
    "text": "um we use them to reconstitute metrics",
    "start": "430800",
    "end": "433759"
  },
  {
    "text": "so counters",
    "start": "433759",
    "end": "435120"
  },
  {
    "text": "gauges",
    "start": "435120",
    "end": "436479"
  },
  {
    "text": "histogram metrics as if they had been",
    "start": "436479",
    "end": "438400"
  },
  {
    "text": "exposed as an aggregate",
    "start": "438400",
    "end": "441599"
  },
  {
    "text": "from a single instance of an application",
    "start": "441599",
    "end": "444240"
  },
  {
    "text": "versus from several instances of an",
    "start": "444240",
    "end": "445840"
  },
  {
    "text": "application",
    "start": "445840",
    "end": "448400"
  },
  {
    "text": "and then we also do",
    "start": "448639",
    "end": "450400"
  },
  {
    "text": "provide another way to aggregate metrics",
    "start": "450400",
    "end": "453120"
  },
  {
    "text": "through um",
    "start": "453120",
    "end": "454319"
  },
  {
    "text": "mapping rules which essentially just",
    "start": "454319",
    "end": "456000"
  },
  {
    "text": "does down sampling",
    "start": "456000",
    "end": "457680"
  },
  {
    "text": "of metrics but",
    "start": "457680",
    "end": "459360"
  },
  {
    "text": "regardless both ways of aggregation once",
    "start": "459360",
    "end": "462240"
  },
  {
    "text": "once the aggregations are completed",
    "start": "462240",
    "end": "464400"
  },
  {
    "text": "these new metrics will be then sent over",
    "start": "464400",
    "end": "466720"
  },
  {
    "text": "to",
    "start": "466720",
    "end": "468080"
  },
  {
    "text": "your timeshares database or your remote",
    "start": "468080",
    "end": "470319"
  },
  {
    "text": "storage solution",
    "start": "470319",
    "end": "473360"
  },
  {
    "text": "and then yeah just zooming in a little",
    "start": "474960",
    "end": "476240"
  },
  {
    "text": "bit and kind of recapping on those two",
    "start": "476240",
    "end": "477840"
  },
  {
    "text": "ways of aggregating metrics so with",
    "start": "477840",
    "end": "480000"
  },
  {
    "text": "these visuals here which i think are",
    "start": "480000",
    "end": "481520"
  },
  {
    "text": "helpful so we have um",
    "start": "481520",
    "end": "484000"
  },
  {
    "text": "kind of roll up rules which essentially",
    "start": "484000",
    "end": "486160"
  },
  {
    "text": "just roll up across",
    "start": "486160",
    "end": "488479"
  },
  {
    "text": "or aggregate across multiple time series",
    "start": "488479",
    "end": "491039"
  },
  {
    "text": "and this is essentially just reduces",
    "start": "491039",
    "end": "492800"
  },
  {
    "text": "your query time cardinality and then we",
    "start": "492800",
    "end": "495199"
  },
  {
    "text": "have mapping rules which um do the down",
    "start": "495199",
    "end": "498240"
  },
  {
    "text": "sampling by doing aggregations inside a",
    "start": "498240",
    "end": "500639"
  },
  {
    "text": "single time series and then making kind",
    "start": "500639",
    "end": "502800"
  },
  {
    "text": "of these longer term",
    "start": "502800",
    "end": "504800"
  },
  {
    "text": "or larger scale queries",
    "start": "504800",
    "end": "507199"
  },
  {
    "text": "more efficient as they're have fewer",
    "start": "507199",
    "end": "509840"
  },
  {
    "text": "samples",
    "start": "509840",
    "end": "512240"
  },
  {
    "start": "512000",
    "end": "625000"
  },
  {
    "text": "and now just going to quickly go through",
    "start": "513360",
    "end": "514959"
  },
  {
    "text": "an example of a rule up rule and kind of",
    "start": "514959",
    "end": "517599"
  },
  {
    "text": "how you would implement it so",
    "start": "517599",
    "end": "519760"
  },
  {
    "text": "we have",
    "start": "519760",
    "end": "521039"
  },
  {
    "text": "kind of the configuration of what a",
    "start": "521039",
    "end": "522880"
  },
  {
    "text": "roll-up roll looks like here on this",
    "start": "522880",
    "end": "524480"
  },
  {
    "text": "slide but essentially roll-up rules",
    "start": "524480",
    "end": "527200"
  },
  {
    "text": "are just a series of transforms that are",
    "start": "527200",
    "end": "531440"
  },
  {
    "text": "kind of",
    "start": "531440",
    "end": "532320"
  },
  {
    "text": "done in order so we have the three main",
    "start": "532320",
    "end": "534959"
  },
  {
    "text": "steps we'll go through here",
    "start": "534959",
    "end": "536720"
  },
  {
    "text": "but you can see there's the on the",
    "start": "536720",
    "end": "538800"
  },
  {
    "text": "configuration we have um",
    "start": "538800",
    "end": "541680"
  },
  {
    "text": "kind of the the roll-up rule name and",
    "start": "541680",
    "end": "543440"
  },
  {
    "text": "then there's the filter",
    "start": "543440",
    "end": "544959"
  },
  {
    "text": "um",
    "start": "544959",
    "end": "545839"
  },
  {
    "text": "that we use as well",
    "start": "545839",
    "end": "547680"
  },
  {
    "text": "and then",
    "start": "547680",
    "end": "548720"
  },
  {
    "text": "and then in terms of the steps we have",
    "start": "548720",
    "end": "550320"
  },
  {
    "text": "our first step which is to take the",
    "start": "550320",
    "end": "552720"
  },
  {
    "text": "increases or the deltas",
    "start": "552720",
    "end": "555040"
  },
  {
    "text": "between each of our",
    "start": "555040",
    "end": "556560"
  },
  {
    "text": "monotonic counters so you can see in the",
    "start": "556560",
    "end": "558800"
  },
  {
    "text": "bar chart we have we're kind of",
    "start": "558800",
    "end": "560240"
  },
  {
    "text": "measuring the little the increments",
    "start": "560240",
    "end": "562720"
  },
  {
    "text": "in between each of the counters",
    "start": "562720",
    "end": "564080"
  },
  {
    "text": "measuring the increases or the deltas",
    "start": "564080",
    "end": "566320"
  },
  {
    "text": "there",
    "start": "566320",
    "end": "567440"
  },
  {
    "text": "second step would then be to",
    "start": "567440",
    "end": "570480"
  },
  {
    "text": "kind of sum up the increases or the",
    "start": "570480",
    "end": "573040"
  },
  {
    "text": "deltas so kind of creating this new",
    "start": "573040",
    "end": "575519"
  },
  {
    "text": "rolled up metric um by the different",
    "start": "575519",
    "end": "578320"
  },
  {
    "text": "labels that are presented in the group",
    "start": "578320",
    "end": "580240"
  },
  {
    "text": "by",
    "start": "580240",
    "end": "581680"
  },
  {
    "text": "line here so by in this example",
    "start": "581680",
    "end": "584000"
  },
  {
    "text": "container name and namespace",
    "start": "584000",
    "end": "586160"
  },
  {
    "text": "so once we've done",
    "start": "586160",
    "end": "588320"
  },
  {
    "text": "the summing of those increases then we",
    "start": "588320",
    "end": "590880"
  },
  {
    "text": "can now do the final transform and the",
    "start": "590880",
    "end": "593120"
  },
  {
    "text": "final step here which is to create um",
    "start": "593120",
    "end": "598000"
  },
  {
    "text": "turn this metric into a monotonic",
    "start": "598000",
    "end": "599920"
  },
  {
    "text": "cumulative counter which will then be",
    "start": "599920",
    "end": "602720"
  },
  {
    "text": "sent over and persisted to your",
    "start": "602720",
    "end": "605920"
  },
  {
    "text": "time series database or remote storage",
    "start": "605920",
    "end": "608160"
  },
  {
    "text": "um and kind of one that's one that has",
    "start": "608160",
    "end": "610880"
  },
  {
    "text": "been done you'll use the",
    "start": "610880",
    "end": "613200"
  },
  {
    "text": "storage policies",
    "start": "613200",
    "end": "614640"
  },
  {
    "text": "set in this configuration here to",
    "start": "614640",
    "end": "616880"
  },
  {
    "text": "kind of dictate the resolution and",
    "start": "616880",
    "end": "618800"
  },
  {
    "text": "retention periods",
    "start": "618800",
    "end": "620560"
  },
  {
    "text": "so",
    "start": "620560",
    "end": "621440"
  },
  {
    "text": "that's kind of a quick overview of what",
    "start": "621440",
    "end": "622959"
  },
  {
    "text": "that looks like and now rob is going to",
    "start": "622959",
    "end": "625120"
  },
  {
    "text": "go through",
    "start": "625120",
    "end": "627120"
  },
  {
    "text": "how",
    "start": "627120",
    "end": "627920"
  },
  {
    "text": "these two different approaches so",
    "start": "627920",
    "end": "629120"
  },
  {
    "text": "streaming aggregation with m3 and",
    "start": "629120",
    "end": "631120"
  },
  {
    "text": "regular recording rules how they are",
    "start": "631120",
    "end": "632800"
  },
  {
    "text": "different from each other",
    "start": "632800",
    "end": "634800"
  },
  {
    "text": "cheers",
    "start": "634800",
    "end": "636000"
  },
  {
    "text": "thanks gibbs um so yeah i was going to",
    "start": "636000",
    "end": "637920"
  },
  {
    "text": "just quickly step through a few of the",
    "start": "637920",
    "end": "640320"
  },
  {
    "text": "the",
    "start": "640320",
    "end": "641200"
  },
  {
    "text": "differences um at a high level and then",
    "start": "641200",
    "end": "644320"
  },
  {
    "text": "give a quick demo if the demo gods are",
    "start": "644320",
    "end": "647120"
  },
  {
    "text": "kind today",
    "start": "647120",
    "end": "648399"
  },
  {
    "text": "which they may not be but we'll see",
    "start": "648399",
    "end": "651680"
  },
  {
    "text": "and uh you know i think",
    "start": "651680",
    "end": "653680"
  },
  {
    "text": "what's first worth talking about is uh",
    "start": "653680",
    "end": "656880"
  },
  {
    "text": "this is actually a",
    "start": "656880",
    "end": "658560"
  },
  {
    "text": "similar example that i talked um just in",
    "start": "658560",
    "end": "661279"
  },
  {
    "text": "the short um earlier keynote but uh",
    "start": "661279",
    "end": "666160"
  },
  {
    "text": "when we look at like specific use cases",
    "start": "666160",
    "end": "667920"
  },
  {
    "text": "that can be very high cardinality um and",
    "start": "667920",
    "end": "670320"
  },
  {
    "text": "again",
    "start": "670320",
    "end": "671200"
  },
  {
    "text": "histograms tend to be a",
    "start": "671200",
    "end": "673200"
  },
  {
    "text": "obvious choice here because the the",
    "start": "673200",
    "end": "675600"
  },
  {
    "text": "amount of buckets which you define",
    "start": "675600",
    "end": "678079"
  },
  {
    "text": "which gives you the level of granularity",
    "start": "678079",
    "end": "679839"
  },
  {
    "text": "you want in terms of how precise your",
    "start": "679839",
    "end": "682240"
  },
  {
    "text": "histogram measurements can be",
    "start": "682240",
    "end": "684160"
  },
  {
    "text": "can multiply",
    "start": "684160",
    "end": "686079"
  },
  {
    "text": "your cardinality quite extensively and",
    "start": "686079",
    "end": "688240"
  },
  {
    "text": "so you know in this example we're",
    "start": "688240",
    "end": "689920"
  },
  {
    "text": "looking at yeah single microservice with",
    "start": "689920",
    "end": "692240"
  },
  {
    "text": "200 pods",
    "start": "692240",
    "end": "693600"
  },
  {
    "text": "um 20 endpoints http or grpc",
    "start": "693600",
    "end": "699120"
  },
  {
    "text": "measuring latency via the different",
    "start": "699920",
    "end": "701920"
  },
  {
    "text": "status codes",
    "start": "701920",
    "end": "703360"
  },
  {
    "text": "and then",
    "start": "703360",
    "end": "704640"
  },
  {
    "text": "at a level of precision",
    "start": "704640",
    "end": "706959"
  },
  {
    "text": "um that that can be defined by a spread",
    "start": "706959",
    "end": "709680"
  },
  {
    "text": "of 30 histogram buckets",
    "start": "709680",
    "end": "712560"
  },
  {
    "text": "so this is you know a single metric",
    "start": "712560",
    "end": "714959"
  },
  {
    "text": "across a few end points that you might",
    "start": "714959",
    "end": "716800"
  },
  {
    "text": "want to graph like you might want the",
    "start": "716800",
    "end": "718000"
  },
  {
    "text": "p99 of all of those endpoints on one",
    "start": "718000",
    "end": "720079"
  },
  {
    "text": "panel in grafana",
    "start": "720079",
    "end": "722079"
  },
  {
    "text": "and that single panel",
    "start": "722079",
    "end": "724800"
  },
  {
    "text": "is is going to be",
    "start": "724800",
    "end": "726480"
  },
  {
    "text": "operating on 600 000 time series",
    "start": "726480",
    "end": "729120"
  },
  {
    "text": "and you know it would be super nice if",
    "start": "729120",
    "end": "730959"
  },
  {
    "text": "you could then also go and slice and",
    "start": "730959",
    "end": "732320"
  },
  {
    "text": "dice those metrics by the git server",
    "start": "732320",
    "end": "735120"
  },
  {
    "text": "version or the mobile client front-end",
    "start": "735120",
    "end": "737120"
  },
  {
    "text": "version maybe you're running experiments",
    "start": "737120",
    "end": "739200"
  },
  {
    "text": "and you want different metrics based on",
    "start": "739200",
    "end": "742399"
  },
  {
    "text": "the sub-populations um that",
    "start": "742399",
    "end": "745279"
  },
  {
    "text": "the like experiment groups for a b",
    "start": "745279",
    "end": "747839"
  },
  {
    "text": "testing and things like that um and all",
    "start": "747839",
    "end": "749920"
  },
  {
    "text": "of this is only going to multiply this",
    "start": "749920",
    "end": "751360"
  },
  {
    "text": "like very high cardinality number",
    "start": "751360",
    "end": "753600"
  },
  {
    "text": "um",
    "start": "753600",
    "end": "754959"
  },
  {
    "text": "so",
    "start": "754959",
    "end": "755680"
  },
  {
    "text": "uh",
    "start": "755680",
    "end": "756480"
  },
  {
    "text": "you know gibbs already ran through what",
    "start": "756480",
    "end": "758320"
  },
  {
    "text": "um a recording rule execution looks like",
    "start": "758320",
    "end": "761600"
  },
  {
    "text": "um and then in in a distributed mode",
    "start": "761600",
    "end": "764079"
  },
  {
    "text": "this is essentially you know gets um",
    "start": "764079",
    "end": "766720"
  },
  {
    "text": "even more complicated because there's",
    "start": "766720",
    "end": "768399"
  },
  {
    "text": "the hops are over the network here uh so",
    "start": "768399",
    "end": "771519"
  },
  {
    "text": "when you're pulling data back from",
    "start": "771519",
    "end": "772800"
  },
  {
    "text": "storage if you actually want to",
    "start": "772800",
    "end": "774160"
  },
  {
    "text": "reconstitute an aggregation across",
    "start": "774160",
    "end": "776880"
  },
  {
    "text": "multiple prometheus instances if you're",
    "start": "776880",
    "end": "779360"
  },
  {
    "text": "using say thanos and the thanos sidecar",
    "start": "779360",
    "end": "783519"
  },
  {
    "text": "or with cortex it would be from all the",
    "start": "783519",
    "end": "785279"
  },
  {
    "text": "cortex storage nodes uh",
    "start": "785279",
    "end": "787440"
  },
  {
    "text": "you have to pull all that back um and",
    "start": "787440",
    "end": "789600"
  },
  {
    "text": "then ride it back again very frequently",
    "start": "789600",
    "end": "791600"
  },
  {
    "text": "um so and then to concretely walk",
    "start": "791600",
    "end": "793839"
  },
  {
    "text": "through what that might look like uh you",
    "start": "793839",
    "end": "795760"
  },
  {
    "text": "know if we have if you have four",
    "start": "795760",
    "end": "797200"
  },
  {
    "text": "prometheus instances and you're um again",
    "start": "797200",
    "end": "800480"
  },
  {
    "text": "for this single metric our uh for one",
    "start": "800480",
    "end": "802880"
  },
  {
    "text": "service are uh trying to calculate the",
    "start": "802880",
    "end": "805600"
  },
  {
    "text": "um",
    "start": "805600",
    "end": "806399"
  },
  {
    "text": "the histogram of the of those four",
    "start": "806399",
    "end": "808959"
  },
  {
    "text": "storage nodes each returning 150 000",
    "start": "808959",
    "end": "811600"
  },
  {
    "text": "time series all over the network to a",
    "start": "811600",
    "end": "813440"
  },
  {
    "text": "single thanos query instance",
    "start": "813440",
    "end": "815680"
  },
  {
    "text": "um that's all operating in memory uh",
    "start": "815680",
    "end": "817920"
  },
  {
    "text": "which which has obviously memory",
    "start": "817920",
    "end": "819760"
  },
  {
    "text": "constraints um and then if it can't",
    "start": "819760",
    "end": "822160"
  },
  {
    "text": "execute fast enough then uh you you're",
    "start": "822160",
    "end": "824720"
  },
  {
    "text": "getting data that's kind of",
    "start": "824720",
    "end": "827120"
  },
  {
    "text": "uh irregular",
    "start": "827120",
    "end": "829760"
  },
  {
    "text": "comparative to when you collected it",
    "start": "829760",
    "end": "833040"
  },
  {
    "text": "and so",
    "start": "833040",
    "end": "833920"
  },
  {
    "text": "m3 aggregation can supplement recording",
    "start": "833920",
    "end": "836079"
  },
  {
    "text": "rules",
    "start": "836079",
    "end": "837920"
  },
  {
    "text": "now as kind of gives already said it",
    "start": "837920",
    "end": "840000"
  },
  {
    "text": "reconstitutes the metric it doesn't",
    "start": "840000",
    "end": "841839"
  },
  {
    "text": "allow",
    "start": "841839",
    "end": "842720"
  },
  {
    "text": "arbitrary prong ql",
    "start": "842720",
    "end": "845199"
  },
  {
    "text": "but again the majority of the problem",
    "start": "845199",
    "end": "847440"
  },
  {
    "text": "here is not uh in any other part of the",
    "start": "847440",
    "end": "850079"
  },
  {
    "text": "expression except",
    "start": "850079",
    "end": "851839"
  },
  {
    "text": "a few distinct high cardinality labels",
    "start": "851839",
    "end": "853760"
  },
  {
    "text": "that you can aggregate away and",
    "start": "853760",
    "end": "855440"
  },
  {
    "text": "reconstitute a new counter as if it was",
    "start": "855440",
    "end": "857760"
  },
  {
    "text": "aggregated from one place",
    "start": "857760",
    "end": "859519"
  },
  {
    "text": "so it stays on that expensive um",
    "start": "859519",
    "end": "862000"
  },
  {
    "text": "step that that runs over the network uh",
    "start": "862000",
    "end": "864480"
  },
  {
    "text": "it also um",
    "start": "864480",
    "end": "866639"
  },
  {
    "text": "avoids this reverse index query pressure",
    "start": "866639",
    "end": "869120"
  },
  {
    "text": "and just release",
    "start": "869120",
    "end": "871120"
  },
  {
    "text": "query bandwidth on",
    "start": "871120",
    "end": "873040"
  },
  {
    "text": "prometheus or your remote storage in",
    "start": "873040",
    "end": "874639"
  },
  {
    "text": "general so you can separate and scale",
    "start": "874639",
    "end": "877360"
  },
  {
    "text": "aggregation independently to the tsdb",
    "start": "877360",
    "end": "880320"
  },
  {
    "text": "and not be bottlenecked",
    "start": "880320",
    "end": "882240"
  },
  {
    "text": "there or a down dashboard or or other",
    "start": "882240",
    "end": "884720"
  },
  {
    "text": "alerts um",
    "start": "884720",
    "end": "886399"
  },
  {
    "text": "and then and of course you can pack way",
    "start": "886399",
    "end": "888160"
  },
  {
    "text": "more alerts in them and um also scale",
    "start": "888160",
    "end": "891199"
  },
  {
    "text": "your dashboard traffic um",
    "start": "891199",
    "end": "893360"
  },
  {
    "text": "uh without having to",
    "start": "893360",
    "end": "895760"
  },
  {
    "text": "pay the cost of recording rules at that",
    "start": "895760",
    "end": "897600"
  },
  {
    "text": "layer",
    "start": "897600",
    "end": "898959"
  },
  {
    "text": "and then you know you can also use",
    "start": "898959",
    "end": "901040"
  },
  {
    "text": "templated aggregation rules which can be",
    "start": "901040",
    "end": "902880"
  },
  {
    "text": "really powerful",
    "start": "902880",
    "end": "904560"
  },
  {
    "text": "to",
    "start": "904560",
    "end": "906079"
  },
  {
    "text": "deploy this use case across many",
    "start": "906079",
    "end": "907920"
  },
  {
    "text": "different metric names without having to",
    "start": "907920",
    "end": "910639"
  },
  {
    "text": "go and one-off for every single panel",
    "start": "910639",
    "end": "913519"
  },
  {
    "text": "that you're trying to speed up",
    "start": "913519",
    "end": "915360"
  },
  {
    "text": "go and create a rule for this allows you",
    "start": "915360",
    "end": "917519"
  },
  {
    "text": "to say i just want anything that matches",
    "start": "917519",
    "end": "919519"
  },
  {
    "text": "a specific filter to exclude um a",
    "start": "919519",
    "end": "922000"
  },
  {
    "text": "certain high cardinality label that i",
    "start": "922000",
    "end": "923519"
  },
  {
    "text": "know exists on all of my metrics like",
    "start": "923519",
    "end": "925760"
  },
  {
    "text": "the pod or instance",
    "start": "925760",
    "end": "928800"
  },
  {
    "start": "927000",
    "end": "1282000"
  },
  {
    "text": "and so",
    "start": "928800",
    "end": "930240"
  },
  {
    "text": "we're gonna have a look at uh what this",
    "start": "930240",
    "end": "931600"
  },
  {
    "text": "looks like in",
    "start": "931600",
    "end": "932959"
  },
  {
    "text": "reality",
    "start": "932959",
    "end": "934320"
  },
  {
    "text": "now bear with me because i am gonna try",
    "start": "934320",
    "end": "936399"
  },
  {
    "text": "to just",
    "start": "936399",
    "end": "938399"
  },
  {
    "text": "remove",
    "start": "938399",
    "end": "939440"
  },
  {
    "text": "the screen mirroring here",
    "start": "939440",
    "end": "942480"
  },
  {
    "text": "and get my terminal",
    "start": "942480",
    "end": "944320"
  },
  {
    "text": "i'm back on my laptop",
    "start": "944320",
    "end": "948040"
  },
  {
    "text": "okay",
    "start": "957360",
    "end": "959680"
  },
  {
    "text": "there we go great",
    "start": "963440",
    "end": "966399"
  },
  {
    "text": "all right",
    "start": "967519",
    "end": "968560"
  },
  {
    "text": "and",
    "start": "968560",
    "end": "970000"
  },
  {
    "text": "battery is also low",
    "start": "970000",
    "end": "973279"
  },
  {
    "text": "um",
    "start": "973440",
    "end": "974320"
  },
  {
    "text": "so um let's just have a look at uh",
    "start": "974320",
    "end": "978160"
  },
  {
    "text": "the demo that i'm about to run through",
    "start": "978160",
    "end": "979519"
  },
  {
    "text": "so basically",
    "start": "979519",
    "end": "981199"
  },
  {
    "text": "um",
    "start": "981199",
    "end": "982560"
  },
  {
    "text": "we have",
    "start": "982560",
    "end": "984560"
  },
  {
    "text": "a",
    "start": "984560",
    "end": "985360"
  },
  {
    "text": "docker compose stack here and this is",
    "start": "985360",
    "end": "987839"
  },
  {
    "text": "so yeah you can check this out",
    "start": "987839",
    "end": "990000"
  },
  {
    "text": "just from the m3 repo there's also you",
    "start": "990000",
    "end": "992240"
  },
  {
    "text": "can get here via the docks so you go to",
    "start": "992240",
    "end": "994720"
  },
  {
    "text": "the m3 docs then you go to integrations",
    "start": "994720",
    "end": "996959"
  },
  {
    "text": "and instead of going to the default",
    "start": "996959",
    "end": "998880"
  },
  {
    "text": "prometheus",
    "start": "998880",
    "end": "1000560"
  },
  {
    "text": "remote storage aggregation inquiry with",
    "start": "1000560",
    "end": "1002240"
  },
  {
    "text": "m3 you go to the aggregation for",
    "start": "1002240",
    "end": "1003680"
  },
  {
    "text": "prometheus thanos or other remote right",
    "start": "1003680",
    "end": "1005759"
  },
  {
    "text": "storage",
    "start": "1005759",
    "end": "1007040"
  },
  {
    "text": "and this will highlight the dock and",
    "start": "1007040",
    "end": "1009839"
  },
  {
    "text": "compose stack that i'm about to run",
    "start": "1009839",
    "end": "1011360"
  },
  {
    "text": "through so it has a deep link to",
    "start": "1011360",
    "end": "1015040"
  },
  {
    "text": "the development stack that i'm about to",
    "start": "1015040",
    "end": "1017040"
  },
  {
    "text": "run locally",
    "start": "1017040",
    "end": "1018639"
  },
  {
    "text": "what's interesting here in the",
    "start": "1018639",
    "end": "1019680"
  },
  {
    "text": "development stack is",
    "start": "1019680",
    "end": "1021360"
  },
  {
    "text": "basically",
    "start": "1021360",
    "end": "1022399"
  },
  {
    "text": "we have if we go look at the document",
    "start": "1022399",
    "end": "1024319"
  },
  {
    "text": "compose file um",
    "start": "1024319",
    "end": "1026558"
  },
  {
    "text": "we have a",
    "start": "1026559",
    "end": "1028640"
  },
  {
    "text": "coordinator which is receiving traffic",
    "start": "1028640",
    "end": "1031038"
  },
  {
    "text": "from a prometheus scraper so this scrape",
    "start": "1031039",
    "end": "1033678"
  },
  {
    "text": "this prometheus instance just acts",
    "start": "1033679",
    "end": "1035360"
  },
  {
    "text": "purely as a scraper sends all of its",
    "start": "1035360",
    "end": "1037600"
  },
  {
    "text": "data to um m3 coordinator and one",
    "start": "1037600",
    "end": "1040558"
  },
  {
    "text": "through remove right",
    "start": "1040559",
    "end": "1042880"
  },
  {
    "text": "yeah that is a good call thank you",
    "start": "1042880",
    "end": "1045760"
  },
  {
    "text": "um",
    "start": "1045760",
    "end": "1047120"
  },
  {
    "text": "uh i'll do that on the terminal as well",
    "start": "1047120",
    "end": "1048960"
  },
  {
    "text": "so this this prometheus scraper",
    "start": "1048960",
    "end": "1052000"
  },
  {
    "text": "basically scrapes a whole bunch of c",
    "start": "1052000",
    "end": "1053760"
  },
  {
    "text": "advisor metrics in this demo",
    "start": "1053760",
    "end": "1056320"
  },
  {
    "text": "and sends them to m3 coordinator",
    "start": "1056320",
    "end": "1058480"
  },
  {
    "text": "uh via prometheus from our right and",
    "start": "1058480",
    "end": "1060640"
  },
  {
    "text": "then",
    "start": "1060640",
    "end": "1062400"
  },
  {
    "text": "either you can use m3 coordinator by",
    "start": "1062400",
    "end": "1064960"
  },
  {
    "text": "itself to aggregate in",
    "start": "1064960",
    "end": "1067440"
  },
  {
    "text": "in",
    "start": "1067440",
    "end": "1068480"
  },
  {
    "text": "in memory you know",
    "start": "1068480",
    "end": "1070240"
  },
  {
    "text": "with a single replica over running",
    "start": "1070240",
    "end": "1072640"
  },
  {
    "text": "as a sidecar and then it can basically",
    "start": "1072640",
    "end": "1075679"
  },
  {
    "text": "aggregate across those metrics and give",
    "start": "1075679",
    "end": "1077280"
  },
  {
    "text": "you uh rolled up metrics um and and then",
    "start": "1077280",
    "end": "1080799"
  },
  {
    "text": "it sends basically data either to two",
    "start": "1080799",
    "end": "1083840"
  },
  {
    "text": "different prometheus instances one's",
    "start": "1083840",
    "end": "1085360"
  },
  {
    "text": "called raw which is just storing back",
    "start": "1085360",
    "end": "1087440"
  },
  {
    "text": "the samples that the scraper was sending",
    "start": "1087440",
    "end": "1089039"
  },
  {
    "text": "it and then the other one is aggregate",
    "start": "1089039",
    "end": "1090880"
  },
  {
    "text": "which is um receiving both",
    "start": "1090880",
    "end": "1093520"
  },
  {
    "text": "time series that were aggregated using",
    "start": "1093520",
    "end": "1095679"
  },
  {
    "text": "rules that you defined as well as down",
    "start": "1095679",
    "end": "1098080"
  },
  {
    "text": "sampled",
    "start": "1098080",
    "end": "1099039"
  },
  {
    "text": "to",
    "start": "1099039",
    "end": "1099760"
  },
  {
    "text": "like either one minute or five minute of",
    "start": "1099760",
    "end": "1101600"
  },
  {
    "text": "resolution",
    "start": "1101600",
    "end": "1102880"
  },
  {
    "text": "um so that it basically means you can",
    "start": "1102880",
    "end": "1104880"
  },
  {
    "text": "get",
    "start": "1104880",
    "end": "1106240"
  },
  {
    "text": "different levels of uh resolution",
    "start": "1106240",
    "end": "1109280"
  },
  {
    "text": "similar to how thanos does um",
    "start": "1109280",
    "end": "1111520"
  },
  {
    "text": "uh",
    "start": "1111520",
    "end": "1112720"
  },
  {
    "text": "batch down sampling but this is all",
    "start": "1112720",
    "end": "1114559"
  },
  {
    "text": "happening in real time so it's available",
    "start": "1114559",
    "end": "1116000"
  },
  {
    "text": "like every five minutes um",
    "start": "1116000",
    "end": "1118320"
  },
  {
    "text": "as a data point is ready so what the",
    "start": "1118320",
    "end": "1120240"
  },
  {
    "text": "config looks like here is you know you",
    "start": "1120240",
    "end": "1122559"
  },
  {
    "text": "have basically",
    "start": "1122559",
    "end": "1124400"
  },
  {
    "text": "these uh this is the rollup rule so it's",
    "start": "1124400",
    "end": "1126640"
  },
  {
    "text": "saying for uh so in this specific",
    "start": "1126640",
    "end": "1129120"
  },
  {
    "text": "example i'm not using the template like",
    "start": "1129120",
    "end": "1131200"
  },
  {
    "text": "i which is a little bit more complex",
    "start": "1131200",
    "end": "1133840"
  },
  {
    "text": "i'm specifically saying i want to match",
    "start": "1133840",
    "end": "1135919"
  },
  {
    "text": "exactly this metric name",
    "start": "1135919",
    "end": "1137919"
  },
  {
    "text": "take the increase of it",
    "start": "1137919",
    "end": "1140480"
  },
  {
    "text": "group by these dimensions which is the",
    "start": "1140480",
    "end": "1142160"
  },
  {
    "text": "container the namespace and",
    "start": "1142160",
    "end": "1144799"
  },
  {
    "text": "the cpu index if you want to look at",
    "start": "1144799",
    "end": "1147200"
  },
  {
    "text": "stats on a per cpu basis but not across",
    "start": "1147200",
    "end": "1149919"
  },
  {
    "text": "all the instances and then we're",
    "start": "1149919",
    "end": "1151760"
  },
  {
    "text": "building the the monotonic counter again",
    "start": "1151760",
    "end": "1154559"
  },
  {
    "text": "here",
    "start": "1154559",
    "end": "1155520"
  },
  {
    "text": "and we're storing it in this storage",
    "start": "1155520",
    "end": "1157679"
  },
  {
    "text": "policies tells us which prometheus those",
    "start": "1157679",
    "end": "1160320"
  },
  {
    "text": "those two prometheuses that we had which",
    "start": "1160320",
    "end": "1162080"
  },
  {
    "text": "one to store it in and those are defined",
    "start": "1162080",
    "end": "1164320"
  },
  {
    "text": "up here",
    "start": "1164320",
    "end": "1165520"
  },
  {
    "text": "we have the raw prometheus",
    "start": "1165520",
    "end": "1167730"
  },
  {
    "text": "[Music]",
    "start": "1167730",
    "end": "1169840"
  },
  {
    "text": "basically taking",
    "start": "1169840",
    "end": "1171440"
  },
  {
    "text": "any unaggregated metrics and then the",
    "start": "1171440",
    "end": "1173440"
  },
  {
    "text": "aggregated one",
    "start": "1173440",
    "end": "1175600"
  },
  {
    "text": "receiving anything that's been defined",
    "start": "1175600",
    "end": "1177120"
  },
  {
    "text": "for one hour and one minute resolution",
    "start": "1177120",
    "end": "1179360"
  },
  {
    "text": "uh by the rules that we have down here",
    "start": "1179360",
    "end": "1182720"
  },
  {
    "text": "um so",
    "start": "1182720",
    "end": "1184320"
  },
  {
    "text": "i've been running this",
    "start": "1184320",
    "end": "1185840"
  },
  {
    "text": "for",
    "start": "1185840",
    "end": "1186559"
  },
  {
    "text": "uh the length of talk and that's",
    "start": "1186559",
    "end": "1188080"
  },
  {
    "text": "probably why i don't have many",
    "start": "1188080",
    "end": "1190160"
  },
  {
    "text": "don't have a whole lot of battery left",
    "start": "1190160",
    "end": "1191919"
  },
  {
    "text": "um",
    "start": "1191919",
    "end": "1192960"
  },
  {
    "text": "so if we log in here",
    "start": "1192960",
    "end": "1196240"
  },
  {
    "text": "we can kind of see the different",
    "start": "1197360",
    "end": "1200000"
  },
  {
    "text": "yeah great the different um the",
    "start": "1200000",
    "end": "1202000"
  },
  {
    "text": "different metrics so here these are the",
    "start": "1202000",
    "end": "1203760"
  },
  {
    "text": "unaggregated metrics this is a cpu usage",
    "start": "1203760",
    "end": "1206240"
  },
  {
    "text": "seconds total",
    "start": "1206240",
    "end": "1207520"
  },
  {
    "text": "um and it's at two minute of the part",
    "start": "1207520",
    "end": "1209760"
  },
  {
    "text": "interval you can see here that the",
    "start": "1209760",
    "end": "1211120"
  },
  {
    "text": "results and and we're summing by",
    "start": "1211120",
    "end": "1212880"
  },
  {
    "text": "container and namespace",
    "start": "1212880",
    "end": "1215520"
  },
  {
    "text": "this is the aggregate one which is the",
    "start": "1215520",
    "end": "1217679"
  },
  {
    "text": "exact same shape and data",
    "start": "1217679",
    "end": "1219440"
  },
  {
    "text": "and everything else but it's using the",
    "start": "1219440",
    "end": "1221039"
  },
  {
    "text": "rolled up metric name and it's you know",
    "start": "1221039",
    "end": "1223520"
  },
  {
    "text": "we don't even have to so the under the",
    "start": "1223520",
    "end": "1225840"
  },
  {
    "text": "only um",
    "start": "1225840",
    "end": "1227600"
  },
  {
    "text": "uh",
    "start": "1227600",
    "end": "1228720"
  },
  {
    "text": "labels on this metric are the ones that",
    "start": "1228720",
    "end": "1230480"
  },
  {
    "text": "we defined to keep",
    "start": "1230480",
    "end": "1232480"
  },
  {
    "text": "and so that's why on the right here",
    "start": "1232480",
    "end": "1234080"
  },
  {
    "text": "where we're actually doing the you know",
    "start": "1234080",
    "end": "1236080"
  },
  {
    "text": "the count of the",
    "start": "1236080",
    "end": "1237679"
  },
  {
    "text": "um the underlying metric name so to view",
    "start": "1237679",
    "end": "1240240"
  },
  {
    "text": "the cardinality of each of these you can",
    "start": "1240240",
    "end": "1242080"
  },
  {
    "text": "see that the raw metrics is in the",
    "start": "1242080",
    "end": "1244000"
  },
  {
    "text": "thousands um for for these whereas the",
    "start": "1244000",
    "end": "1246960"
  },
  {
    "text": "aggregated one is just at the",
    "start": "1246960",
    "end": "1248320"
  },
  {
    "text": "granularity you need to view your data",
    "start": "1248320",
    "end": "1250880"
  },
  {
    "text": "in your graphs",
    "start": "1250880",
    "end": "1252320"
  },
  {
    "text": "and so obviously",
    "start": "1252320",
    "end": "1254000"
  },
  {
    "text": "over large periods of times with you",
    "start": "1254000",
    "end": "1256000"
  },
  {
    "text": "know lots of pods rather than a small",
    "start": "1256000",
    "end": "1258240"
  },
  {
    "text": "demo environment i'm marrying um this",
    "start": "1258240",
    "end": "1260080"
  },
  {
    "text": "really adds up because it's you know a",
    "start": "1260080",
    "end": "1261600"
  },
  {
    "text": "factor of a thousand divided by",
    "start": "1261600",
    "end": "1264159"
  },
  {
    "text": "um",
    "start": "1264159",
    "end": "1265120"
  },
  {
    "text": "23 so you know 43 43 x uh",
    "start": "1265120",
    "end": "1270080"
  },
  {
    "text": "larger",
    "start": "1270080",
    "end": "1271280"
  },
  {
    "text": "in terms of cardinality and",
    "start": "1271280",
    "end": "1273360"
  },
  {
    "text": "yeah that's that's pretty much",
    "start": "1273360",
    "end": "1275120"
  },
  {
    "text": "what i wanted to step you through um i",
    "start": "1275120",
    "end": "1276799"
  },
  {
    "text": "think we have a brief amount of time to",
    "start": "1276799",
    "end": "1278480"
  },
  {
    "text": "do q a perhaps",
    "start": "1278480",
    "end": "1281200"
  },
  {
    "text": "yeah i think few minutes great and um",
    "start": "1281200",
    "end": "1284240"
  },
  {
    "start": "1282000",
    "end": "1767000"
  },
  {
    "text": "yeah bio great to",
    "start": "1284240",
    "end": "1285760"
  },
  {
    "text": "to also catch up after the talk um",
    "start": "1285760",
    "end": "1288480"
  },
  {
    "text": "uh at the event at 5 p.m or we we also",
    "start": "1288480",
    "end": "1291039"
  },
  {
    "text": "have a booth on wednesday if you want to",
    "start": "1291039",
    "end": "1292640"
  },
  {
    "text": "come chat about open source or not",
    "start": "1292640",
    "end": "1295840"
  },
  {
    "text": "anything else yeah thank you does",
    "start": "1295840",
    "end": "1297840"
  },
  {
    "text": "anybody have any questions all right i'm",
    "start": "1297840",
    "end": "1299840"
  },
  {
    "text": "going to bring this over with some some",
    "start": "1299840",
    "end": "1301520"
  },
  {
    "text": "wipes and we can",
    "start": "1301520",
    "end": "1302880"
  },
  {
    "text": "hand it off",
    "start": "1302880",
    "end": "1305840"
  },
  {
    "text": "so i have a question about where this",
    "start": "1316559",
    "end": "1318080"
  },
  {
    "text": "fits in with the with the receiver setup",
    "start": "1318080",
    "end": "1320159"
  },
  {
    "text": "in thanos",
    "start": "1320159",
    "end": "1321280"
  },
  {
    "text": "um and so would this be in front of the",
    "start": "1321280",
    "end": "1324000"
  },
  {
    "text": "receiver and then it would just proxy",
    "start": "1324000",
    "end": "1325440"
  },
  {
    "text": "those those requests back to the",
    "start": "1325440",
    "end": "1327679"
  },
  {
    "text": "receiver",
    "start": "1327679",
    "end": "1329200"
  },
  {
    "text": "behind it",
    "start": "1329200",
    "end": "1330400"
  },
  {
    "text": "yeah that's a good question um",
    "start": "1330400",
    "end": "1333120"
  },
  {
    "text": "so",
    "start": "1333120",
    "end": "1333840"
  },
  {
    "text": "basically",
    "start": "1333840",
    "end": "1334880"
  },
  {
    "text": "uh if you're using a thanos receiver",
    "start": "1334880",
    "end": "1337039"
  },
  {
    "text": "already instead of like athena sidecar",
    "start": "1337039",
    "end": "1339520"
  },
  {
    "text": "then uh yeah you can point um the m3",
    "start": "1339520",
    "end": "1342559"
  },
  {
    "text": "coordinator to just write its results to",
    "start": "1342559",
    "end": "1345440"
  },
  {
    "text": "that thanos receiver",
    "start": "1345440",
    "end": "1347360"
  },
  {
    "text": "so",
    "start": "1347360",
    "end": "1348640"
  },
  {
    "text": "instead of writing",
    "start": "1348640",
    "end": "1350640"
  },
  {
    "text": "directly to the faintest receiver via",
    "start": "1350640",
    "end": "1353039"
  },
  {
    "text": "remote right you write to the",
    "start": "1353039",
    "end": "1354159"
  },
  {
    "text": "coordinative i remote right and then",
    "start": "1354159",
    "end": "1355679"
  },
  {
    "text": "have the coordinator point to the thanos",
    "start": "1355679",
    "end": "1358159"
  },
  {
    "text": "receiver uh and and then the optional",
    "start": "1358159",
    "end": "1360880"
  },
  {
    "text": "part of",
    "start": "1360880",
    "end": "1362080"
  },
  {
    "text": "the",
    "start": "1362080",
    "end": "1362880"
  },
  {
    "text": "of um this whole thing as well is if you",
    "start": "1362880",
    "end": "1365039"
  },
  {
    "text": "wanted to not just use a single process",
    "start": "1365039",
    "end": "1366720"
  },
  {
    "text": "for the m3 coordinator is is having a",
    "start": "1366720",
    "end": "1369520"
  },
  {
    "text": "cluster of entry aggregators which the",
    "start": "1369520",
    "end": "1371120"
  },
  {
    "text": "coordinator can use for for distributed",
    "start": "1371120",
    "end": "1373520"
  },
  {
    "text": "stateful aggregation",
    "start": "1373520",
    "end": "1375280"
  },
  {
    "text": "awesome thank you",
    "start": "1375280",
    "end": "1379000"
  },
  {
    "text": "uh yeah thanks for your talk um what are",
    "start": "1389919",
    "end": "1392640"
  },
  {
    "text": "some best practices you recommend to",
    "start": "1392640",
    "end": "1394880"
  },
  {
    "text": "avoid like false positives on your",
    "start": "1394880",
    "end": "1397200"
  },
  {
    "text": "alerts",
    "start": "1397200",
    "end": "1398640"
  },
  {
    "text": "um",
    "start": "1398640",
    "end": "1400159"
  },
  {
    "text": "through",
    "start": "1400159",
    "end": "1400880"
  },
  {
    "text": "prom",
    "start": "1400880",
    "end": "1403840"
  },
  {
    "text": "to avoid false positive and then i lost",
    "start": "1405120",
    "end": "1407360"
  },
  {
    "text": "that last word oh",
    "start": "1407360",
    "end": "1408960"
  },
  {
    "text": "and",
    "start": "1408960",
    "end": "1409840"
  },
  {
    "text": "in prometheus how how can you avoid like",
    "start": "1409840",
    "end": "1412720"
  },
  {
    "text": "false positives and fire alarms firing",
    "start": "1412720",
    "end": "1415360"
  },
  {
    "text": "when they shouldn't be",
    "start": "1415360",
    "end": "1417280"
  },
  {
    "text": "you know",
    "start": "1417280",
    "end": "1418640"
  },
  {
    "text": "yeah interesting um do you have a",
    "start": "1418640",
    "end": "1420480"
  },
  {
    "text": "specific example like maybe like latency",
    "start": "1420480",
    "end": "1423360"
  },
  {
    "text": "going too high or like what kind of",
    "start": "1423360",
    "end": "1425840"
  },
  {
    "text": "false positives um",
    "start": "1425840",
    "end": "1428000"
  },
  {
    "text": "where are you thinking through yeah like",
    "start": "1428000",
    "end": "1430240"
  },
  {
    "text": "cpu spikes http requests you know things",
    "start": "1430240",
    "end": "1434640"
  },
  {
    "text": "like that um like would you use standard",
    "start": "1434640",
    "end": "1437039"
  },
  {
    "text": "deviation or",
    "start": "1437039",
    "end": "1439840"
  },
  {
    "text": "yeah that that's really interesting",
    "start": "1439840",
    "end": "1441520"
  },
  {
    "text": "question um so and just to repeat it i",
    "start": "1441520",
    "end": "1444320"
  },
  {
    "text": "guess yeah",
    "start": "1444320",
    "end": "1445360"
  },
  {
    "text": "you know cpu spikes",
    "start": "1445360",
    "end": "1447919"
  },
  {
    "text": "latency deviation",
    "start": "1447919",
    "end": "1449760"
  },
  {
    "text": "um",
    "start": "1449760",
    "end": "1450880"
  },
  {
    "text": "yeah i think everyone struggles with",
    "start": "1450880",
    "end": "1452640"
  },
  {
    "text": "this one you know it's everyone has",
    "start": "1452640",
    "end": "1454799"
  },
  {
    "text": "their own strategies obviously using a",
    "start": "1454799",
    "end": "1456559"
  },
  {
    "text": "sustained high period um",
    "start": "1456559",
    "end": "1459200"
  },
  {
    "text": "for",
    "start": "1459200",
    "end": "1460240"
  },
  {
    "text": "you know for like latency spikes can",
    "start": "1460240",
    "end": "1462159"
  },
  {
    "text": "help",
    "start": "1462159",
    "end": "1463279"
  },
  {
    "text": "in terms of like",
    "start": "1463279",
    "end": "1464640"
  },
  {
    "text": "what's",
    "start": "1464640",
    "end": "1465840"
  },
  {
    "text": "known good standard deviation um",
    "start": "1465840",
    "end": "1468960"
  },
  {
    "text": "does tend to work well uh",
    "start": "1468960",
    "end": "1471360"
  },
  {
    "text": "but it requires a lot of care right like",
    "start": "1471360",
    "end": "1473360"
  },
  {
    "text": "looking at week over week data like my",
    "start": "1473360",
    "end": "1475520"
  },
  {
    "text": "using an offset by seven days and",
    "start": "1475520",
    "end": "1477919"
  },
  {
    "text": "comparing that to the current um that's",
    "start": "1477919",
    "end": "1480559"
  },
  {
    "text": "that's all pretty uh",
    "start": "1480559",
    "end": "1482880"
  },
  {
    "text": "um yeah it requires a lot of human",
    "start": "1482880",
    "end": "1485520"
  },
  {
    "text": "curation",
    "start": "1485520",
    "end": "1486400"
  },
  {
    "text": "um",
    "start": "1486400",
    "end": "1487600"
  },
  {
    "text": "i i i would say",
    "start": "1487600",
    "end": "1490000"
  },
  {
    "text": "there's probably",
    "start": "1490000",
    "end": "1491360"
  },
  {
    "text": "better sources than me that that have",
    "start": "1491360",
    "end": "1494000"
  },
  {
    "text": "deeply",
    "start": "1494000",
    "end": "1495120"
  },
  {
    "text": "written about it",
    "start": "1495120",
    "end": "1497679"
  },
  {
    "text": "but you know the the industry best",
    "start": "1497760",
    "end": "1500400"
  },
  {
    "text": "standard really with",
    "start": "1500400",
    "end": "1501760"
  },
  {
    "text": "uh prometheus tends to be",
    "start": "1501760",
    "end": "1504240"
  },
  {
    "text": "standard deviation uh with",
    "start": "1504240",
    "end": "1506880"
  },
  {
    "text": "with like a lot of care and curation",
    "start": "1506880",
    "end": "1510159"
  },
  {
    "text": "and also did you change the prometheus",
    "start": "1510159",
    "end": "1512159"
  },
  {
    "text": "cmo file as well",
    "start": "1512159",
    "end": "1514480"
  },
  {
    "text": "or using your own custom one",
    "start": "1514480",
    "end": "1517200"
  },
  {
    "text": "for uh so the main thing that we altered",
    "start": "1517200",
    "end": "1519600"
  },
  {
    "text": "prometheus to do is just send remote",
    "start": "1519600",
    "end": "1522000"
  },
  {
    "text": "write to m3 coordinator so it's adding",
    "start": "1522000",
    "end": "1524320"
  },
  {
    "text": "the prometheus remote right endpoint to",
    "start": "1524320",
    "end": "1526320"
  },
  {
    "text": "the",
    "start": "1526320",
    "end": "1527039"
  },
  {
    "text": "uh to prometheus itself and so",
    "start": "1527039",
    "end": "1528880"
  },
  {
    "text": "everything that it's scraping is sending",
    "start": "1528880",
    "end": "1530240"
  },
  {
    "text": "off to 103 coordinator",
    "start": "1530240",
    "end": "1532640"
  },
  {
    "text": "thank you",
    "start": "1532640",
    "end": "1535880"
  },
  {
    "text": "of course",
    "start": "1542720",
    "end": "1544799"
  },
  {
    "text": "hi there uh thank you for your talk um",
    "start": "1544799",
    "end": "1547120"
  },
  {
    "text": "one of the challenges with prometheus is",
    "start": "1547120",
    "end": "1548799"
  },
  {
    "text": "the high carbon",
    "start": "1548799",
    "end": "1550159"
  },
  {
    "text": "high cardinality with the metrics that",
    "start": "1550159",
    "end": "1552320"
  },
  {
    "text": "you have available and something that",
    "start": "1552320",
    "end": "1554480"
  },
  {
    "text": "can help with that challenge is uh the",
    "start": "1554480",
    "end": "1556480"
  },
  {
    "text": "recording rules which you talked about",
    "start": "1556480",
    "end": "1558320"
  },
  {
    "text": "um going a step further m3 appears to be",
    "start": "1558320",
    "end": "1560480"
  },
  {
    "text": "able to help with the roll-up and",
    "start": "1560480",
    "end": "1561760"
  },
  {
    "text": "mapping rules again to help with the",
    "start": "1561760",
    "end": "1563520"
  },
  {
    "text": "high cardinality of the recording rules",
    "start": "1563520",
    "end": "1565600"
  },
  {
    "text": "that you might be creating on a label by",
    "start": "1565600",
    "end": "1568000"
  },
  {
    "text": "label or aggregation by aggregation",
    "start": "1568000",
    "end": "1569520"
  },
  {
    "text": "basis",
    "start": "1569520",
    "end": "1570480"
  },
  {
    "text": "on what are some best practices you",
    "start": "1570480",
    "end": "1572240"
  },
  {
    "text": "might recommend around a new user for m3",
    "start": "1572240",
    "end": "1575039"
  },
  {
    "text": "from creating or abusing the",
    "start": "1575039",
    "end": "1578480"
  },
  {
    "text": "sheer number of cardinality of these",
    "start": "1578480",
    "end": "1580480"
  },
  {
    "text": "recording rules and mapping rules that",
    "start": "1580480",
    "end": "1581919"
  },
  {
    "text": "you could be creating",
    "start": "1581919",
    "end": "1583679"
  },
  {
    "text": "with m3",
    "start": "1583679",
    "end": "1585919"
  },
  {
    "text": "so uh just so i",
    "start": "1585919",
    "end": "1587679"
  },
  {
    "text": "understand the question it's basically",
    "start": "1587679",
    "end": "1590159"
  },
  {
    "text": "how",
    "start": "1590159",
    "end": "1592080"
  },
  {
    "text": "how to think about the",
    "start": "1592080",
    "end": "1594080"
  },
  {
    "text": "vast number of like specific",
    "start": "1594080",
    "end": "1595919"
  },
  {
    "text": "aggregations that you configure yeah for",
    "start": "1595919",
    "end": "1598080"
  },
  {
    "text": "example",
    "start": "1598080",
    "end": "1599200"
  },
  {
    "text": "you might be taking a look at",
    "start": "1599200",
    "end": "1600960"
  },
  {
    "text": "multiple types of aggregations on top of",
    "start": "1600960",
    "end": "1602640"
  },
  {
    "text": "a single metric such as the sum or the",
    "start": "1602640",
    "end": "1604159"
  },
  {
    "text": "p99 or things like that",
    "start": "1604159",
    "end": "1606320"
  },
  {
    "text": "why not all of them how does that help",
    "start": "1606320",
    "end": "1608080"
  },
  {
    "text": "shift the problem of the high",
    "start": "1608080",
    "end": "1609520"
  },
  {
    "text": "cardinality of the labels that exist",
    "start": "1609520",
    "end": "1611760"
  },
  {
    "text": "into the high cardinality of",
    "start": "1611760",
    "end": "1613520"
  },
  {
    "text": "rules that you might be aggregating over",
    "start": "1613520",
    "end": "1615840"
  },
  {
    "text": "yeah that's where the metric template uh",
    "start": "1615840",
    "end": "1618159"
  },
  {
    "text": "sorry the aggregation template really",
    "start": "1618159",
    "end": "1620240"
  },
  {
    "text": "you know shines",
    "start": "1620240",
    "end": "1621520"
  },
  {
    "text": "in that you define like anything that",
    "start": "1621520",
    "end": "1624000"
  },
  {
    "text": "matches underscore total if you assume",
    "start": "1624000",
    "end": "1626080"
  },
  {
    "text": "that to be a counter then you can",
    "start": "1626080",
    "end": "1628240"
  },
  {
    "text": "exclude by",
    "start": "1628240",
    "end": "1630240"
  },
  {
    "text": "you can apply a rollup of increases and",
    "start": "1630240",
    "end": "1632960"
  },
  {
    "text": "deltas and then um",
    "start": "1632960",
    "end": "1635120"
  },
  {
    "text": "and then build a monotonic counter on",
    "start": "1635120",
    "end": "1636640"
  },
  {
    "text": "those",
    "start": "1636640",
    "end": "1637760"
  },
  {
    "text": "and use the metric name as the",
    "start": "1637760",
    "end": "1640880"
  },
  {
    "text": "the resulting input as a variable",
    "start": "1640880",
    "end": "1643600"
  },
  {
    "text": "for the output metric name so that way",
    "start": "1643600",
    "end": "1646799"
  },
  {
    "text": "it'll",
    "start": "1646799",
    "end": "1647600"
  },
  {
    "text": "dynamically build essentially a",
    "start": "1647600",
    "end": "1649679"
  },
  {
    "text": "recording rule on the fly",
    "start": "1649679",
    "end": "1651919"
  },
  {
    "text": "again it's not as powerful as recording",
    "start": "1651919",
    "end": "1653360"
  },
  {
    "text": "rules because it's reconstituting the",
    "start": "1653360",
    "end": "1654480"
  },
  {
    "text": "metric rather than giving you like",
    "start": "1654480",
    "end": "1655760"
  },
  {
    "text": "arbitrary",
    "start": "1655760",
    "end": "1656960"
  },
  {
    "text": "promethepromql",
    "start": "1656960",
    "end": "1658720"
  },
  {
    "text": "but the",
    "start": "1658720",
    "end": "1659840"
  },
  {
    "text": "templating aspect is very powerful",
    "start": "1659840",
    "end": "1662559"
  },
  {
    "text": "wonderful thank you",
    "start": "1662559",
    "end": "1666120"
  },
  {
    "text": "all right then i guess on the last",
    "start": "1670559",
    "end": "1671840"
  },
  {
    "text": "question um",
    "start": "1671840",
    "end": "1674159"
  },
  {
    "text": "can you share a little bit about the",
    "start": "1674159",
    "end": "1675200"
  },
  {
    "text": "circumstances that caused you to design",
    "start": "1675200",
    "end": "1676799"
  },
  {
    "text": "and implement this",
    "start": "1676799",
    "end": "1678080"
  },
  {
    "text": "to",
    "start": "1678080",
    "end": "1679679"
  },
  {
    "text": "design",
    "start": "1679679",
    "end": "1680559"
  },
  {
    "text": "to design and implement this aggregator",
    "start": "1680559",
    "end": "1682559"
  },
  {
    "text": "oh yeah great thanks everyone um",
    "start": "1682559",
    "end": "1685679"
  },
  {
    "text": "yeah uh i mean i think gibbs touched on",
    "start": "1685679",
    "end": "1687919"
  },
  {
    "text": "it a little bit",
    "start": "1687919",
    "end": "1688960"
  },
  {
    "text": "it's been part of m3 since m3 was uh",
    "start": "1688960",
    "end": "1693840"
  },
  {
    "text": "built as a remote storage um",
    "start": "1693840",
    "end": "1697360"
  },
  {
    "text": "at uber and uh the main",
    "start": "1697360",
    "end": "1700320"
  },
  {
    "text": "the main reason why",
    "start": "1700320",
    "end": "1702159"
  },
  {
    "text": "you know that that was",
    "start": "1702159",
    "end": "1704240"
  },
  {
    "text": "really done",
    "start": "1704240",
    "end": "1705679"
  },
  {
    "text": "was",
    "start": "1705679",
    "end": "1706559"
  },
  {
    "text": "that it it we had all these high",
    "start": "1706559",
    "end": "1708480"
  },
  {
    "text": "cardinality",
    "start": "1708480",
    "end": "1711120"
  },
  {
    "text": "use cases and it was just very difficult",
    "start": "1711279",
    "end": "1714159"
  },
  {
    "text": "for all the developers to to go and",
    "start": "1714159",
    "end": "1716480"
  },
  {
    "text": "curate and specifically",
    "start": "1716480",
    "end": "1718480"
  },
  {
    "text": "protect against cardinality explosion",
    "start": "1718480",
    "end": "1720880"
  },
  {
    "text": "and every single one of their",
    "start": "1720880",
    "end": "1722640"
  },
  {
    "text": "different things that they were",
    "start": "1722640",
    "end": "1724000"
  },
  {
    "text": "monitoring um and so you know the",
    "start": "1724000",
    "end": "1726640"
  },
  {
    "text": "aggregator was built to be able to like",
    "start": "1726640",
    "end": "1728720"
  },
  {
    "text": "give the power back to the end users so",
    "start": "1728720",
    "end": "1730799"
  },
  {
    "text": "they don't have to go and reinstrument",
    "start": "1730799",
    "end": "1732320"
  },
  {
    "text": "their application they can just derive",
    "start": "1732320",
    "end": "1734799"
  },
  {
    "text": "different pivots of the same very high",
    "start": "1734799",
    "end": "1737039"
  },
  {
    "text": "cardinality data that they're pumping in",
    "start": "1737039",
    "end": "1739760"
  },
  {
    "text": "so at some point you know you can just",
    "start": "1739760",
    "end": "1741919"
  },
  {
    "text": "throw money in the problem to collect",
    "start": "1741919",
    "end": "1743200"
  },
  {
    "text": "the metrics but then the dashboard",
    "start": "1743200",
    "end": "1744960"
  },
  {
    "text": "spinner",
    "start": "1744960",
    "end": "1746159"
  },
  {
    "text": "or the timeouts you know of um",
    "start": "1746159",
    "end": "1749279"
  },
  {
    "text": "of your vowels start to hit so",
    "start": "1749279",
    "end": "1751760"
  },
  {
    "text": "this is a way to like",
    "start": "1751760",
    "end": "1753679"
  },
  {
    "text": "basically without changing your code get",
    "start": "1753679",
    "end": "1755919"
  },
  {
    "text": "to the actual result you want um around",
    "start": "1755919",
    "end": "1758240"
  },
  {
    "text": "that",
    "start": "1758240",
    "end": "1759520"
  },
  {
    "text": "very cool thank you very much",
    "start": "1759520",
    "end": "1761360"
  },
  {
    "text": "thanks for the talk",
    "start": "1761360",
    "end": "1762559"
  },
  {
    "text": "thanks everyone",
    "start": "1762559",
    "end": "1763679"
  },
  {
    "text": "thank you",
    "start": "1763679",
    "end": "1765640"
  },
  {
    "text": "[Applause]",
    "start": "1765640",
    "end": "1768959"
  }
]