[
  {
    "text": "hi everyone um welcome to our talk and",
    "start": "160",
    "end": "3040"
  },
  {
    "text": "thanks for coming um yeah we're talking",
    "start": "3040",
    "end": "6879"
  },
  {
    "text": "about Kubernetes here designing for the",
    "start": "6879",
    "end": "8880"
  },
  {
    "text": "long haul where we want to try to share",
    "start": "8880",
    "end": "11200"
  },
  {
    "text": "tips and tricks and um stuff we learned",
    "start": "11200",
    "end": "13759"
  },
  {
    "text": "in our journey with cluster API and",
    "start": "13759",
    "end": "15519"
  },
  {
    "text": "designing APIs before we start we want",
    "start": "15519",
    "end": "18240"
  },
  {
    "text": "to introduce ourselves i'm Christian i'm",
    "start": "18240",
    "end": "20880"
  },
  {
    "text": "a maintainer in cluster API and a",
    "start": "20880",
    "end": "23439"
  },
  {
    "text": "software engineer at Broadcom hello",
    "start": "23439",
    "end": "26080"
  },
  {
    "text": "everyone thank you for being here i'm",
    "start": "26080",
    "end": "28640"
  },
  {
    "text": "Fitza Pandini i'm also a cluster API",
    "start": "28640",
    "end": "31920"
  },
  {
    "text": "maintainer and I work in the same team",
    "start": "31920",
    "end": "33680"
  },
  {
    "text": "of Christian in in",
    "start": "33680",
    "end": "35960"
  },
  {
    "text": "Broadcom",
    "start": "35960",
    "end": "37640"
  },
  {
    "text": "so the long haul so let's start with a",
    "start": "37640",
    "end": "41280"
  },
  {
    "text": "pool how many of you are maintaining a",
    "start": "41280",
    "end": "44480"
  },
  {
    "text": "project software contributed to a",
    "start": "44480",
    "end": "46559"
  },
  {
    "text": "project software no matter if upstream",
    "start": "46559",
    "end": "48640"
  },
  {
    "text": "or downstream open source or not let's",
    "start": "48640",
    "end": "50879"
  },
  {
    "text": "raise hand",
    "start": "50879",
    "end": "53600"
  },
  {
    "text": "please okay some good developer vibes in",
    "start": "53800",
    "end": "57199"
  },
  {
    "text": "the room",
    "start": "57199",
    "end": "58359"
  },
  {
    "text": "so you all probably know that every",
    "start": "58359",
    "end": "62480"
  },
  {
    "text": "software project keep",
    "start": "62480",
    "end": "64680"
  },
  {
    "text": "evolving as soon as users start using",
    "start": "64680",
    "end": "67280"
  },
  {
    "text": "your project you start getting feedback",
    "start": "67280",
    "end": "70560"
  },
  {
    "text": "you start getting a request for",
    "start": "70560",
    "end": "72600"
  },
  {
    "text": "improvement and so also your API or your",
    "start": "72600",
    "end": "76200"
  },
  {
    "text": "CRD have to improve",
    "start": "76200",
    "end": "80600"
  },
  {
    "text": "but your API your CRD is slightly",
    "start": "80880",
    "end": "83520"
  },
  {
    "text": "different than your binary you need a a",
    "start": "83520",
    "end": "86159"
  },
  {
    "text": "strategy to make sure that your CRD",
    "start": "86159",
    "end": "90000"
  },
  {
    "text": "evolve nicely in the long",
    "start": "90000",
    "end": "92759"
  },
  {
    "text": "run in the Kubernetes ecosystem let me",
    "start": "92759",
    "end": "95920"
  },
  {
    "text": "say the most common strategy to make",
    "start": "95920",
    "end": "98240"
  },
  {
    "text": "your API to evolve is based by two",
    "start": "98240",
    "end": "102119"
  },
  {
    "text": "complimentary ideas the first one is",
    "start": "102119",
    "end": "105040"
  },
  {
    "text": "that you want to pick to keep",
    "start": "105040",
    "end": "108119"
  },
  {
    "text": "evolving your current API version if you",
    "start": "108119",
    "end": "112000"
  },
  {
    "text": "think about it this is what they are",
    "start": "112000",
    "end": "114079"
  },
  {
    "text": "doing in Kubernetes kubernetes is V1",
    "start": "114079",
    "end": "116960"
  },
  {
    "text": "since a couple of year now and it keeps",
    "start": "116960",
    "end": "120759"
  },
  {
    "text": "evolving but sometime what you can do",
    "start": "120759",
    "end": "124320"
  },
  {
    "text": "with a single API version is limited so",
    "start": "124320",
    "end": "127840"
  },
  {
    "text": "you cannot do breaking change so",
    "start": "127840",
    "end": "130000"
  },
  {
    "text": "sometime you also want to create new API",
    "start": "130000",
    "end": "132720"
  },
  {
    "text": "version but the key point here is that",
    "start": "132720",
    "end": "136080"
  },
  {
    "text": "you want to create API version only",
    "start": "136080",
    "end": "138879"
  },
  {
    "text": "after a careful and deliberate decision",
    "start": "138879",
    "end": "142560"
  },
  {
    "text": "this is the key so today",
    "start": "142560",
    "end": "145640"
  },
  {
    "text": "talk is about avoiding making mistakes",
    "start": "145640",
    "end": "150720"
  },
  {
    "text": "that will force you to create unplanned",
    "start": "150720",
    "end": "155000"
  },
  {
    "text": "version",
    "start": "155000",
    "end": "158000"
  },
  {
    "text": "okay before talking about mistakes let's",
    "start": "158440",
    "end": "162319"
  },
  {
    "text": "have a a quick refresher on how we",
    "start": "162319",
    "end": "164720"
  },
  {
    "text": "develop APIs or CRD in Kubernetes so the",
    "start": "164720",
    "end": "168400"
  },
  {
    "text": "process started",
    "start": "168400",
    "end": "170519"
  },
  {
    "text": "by writing a go types you write a go",
    "start": "170519",
    "end": "174640"
  },
  {
    "text": "types then what you do you run a uh a",
    "start": "174640",
    "end": "178560"
  },
  {
    "text": "generator from controller gen and this",
    "start": "178560",
    "end": "181360"
  },
  {
    "text": "generator create a CRD where the most",
    "start": "181360",
    "end": "184400"
  },
  {
    "text": "important part in of the CRD is the open",
    "start": "184400",
    "end": "187280"
  },
  {
    "text": "API spec that reflect your",
    "start": "187280",
    "end": "189879"
  },
  {
    "text": "types finally you apply this CRD to the",
    "start": "189879",
    "end": "193120"
  },
  {
    "text": "API server and the user can interact",
    "start": "193120",
    "end": "196640"
  },
  {
    "text": "with your API by writing YAML so if you",
    "start": "196640",
    "end": "201360"
  },
  {
    "text": "look at the at this",
    "start": "201360",
    "end": "203159"
  },
  {
    "text": "process where do you think mistakes will",
    "start": "203159",
    "end": "205840"
  },
  {
    "text": "happen",
    "start": "205840",
    "end": "207640"
  },
  {
    "text": "so on the right side there are the users",
    "start": "207640",
    "end": "211360"
  },
  {
    "text": "user by default are always right so they",
    "start": "211360",
    "end": "214319"
  },
  {
    "text": "cannot make the mistakes in the middle",
    "start": "214319",
    "end": "217920"
  },
  {
    "text": "we have the generator generator just",
    "start": "217920",
    "end": "220879"
  },
  {
    "text": "work well so what is left only got types",
    "start": "220879",
    "end": "227440"
  },
  {
    "text": "but what could possibly go wrong when",
    "start": "227440",
    "end": "230159"
  },
  {
    "text": "you keep a good developer and you ask",
    "start": "230159",
    "end": "232560"
  },
  {
    "text": "him to develop a Kubernetes",
    "start": "232560",
    "end": "236120"
  },
  {
    "text": "API",
    "start": "236120",
    "end": "238120"
  },
  {
    "text": "well so with all the respect for my",
    "start": "238120",
    "end": "241280"
  },
  {
    "text": "fellow devel uh maintainers and and",
    "start": "241280",
    "end": "243920"
  },
  {
    "text": "contributors a lot of things could could",
    "start": "243920",
    "end": "246480"
  },
  {
    "text": "go wrong so let's start looking what",
    "start": "246480",
    "end": "249599"
  },
  {
    "text": "mistake we we could happen by going",
    "start": "249599",
    "end": "254159"
  },
  {
    "text": "through some of the lesson learned in",
    "start": "254159",
    "end": "256720"
  },
  {
    "text": "the la in the last few years yeah so",
    "start": "256720",
    "end": "260079"
  },
  {
    "text": "first we're going to dig into some go",
    "start": "260079",
    "end": "262160"
  },
  {
    "text": "examples where we could do mistakes i'd",
    "start": "262160",
    "end": "265040"
  },
  {
    "text": "like to show first three antiatterns we",
    "start": "265040",
    "end": "267759"
  },
  {
    "text": "identified so the first one is embedding",
    "start": "267759",
    "end": "270400"
  },
  {
    "text": "external APIs um in our case cluster API",
    "start": "270400",
    "end": "274800"
  },
  {
    "text": "tries to create clusters and we do that",
    "start": "274800",
    "end": "277120"
  },
  {
    "text": "in a provider by use for example using",
    "start": "277120",
    "end": "279400"
  },
  {
    "text": "cubeadm we want the user to also be able",
    "start": "279400",
    "end": "282320"
  },
  {
    "text": "to configure things there like he maybe",
    "start": "282320",
    "end": "285680"
  },
  {
    "text": "wants to enable a specific flag for the",
    "start": "285680",
    "end": "288240"
  },
  {
    "text": "cube API server which is part somewhere",
    "start": "288240",
    "end": "291040"
  },
  {
    "text": "there in cube adm's configuration",
    "start": "291040",
    "end": "294919"
  },
  {
    "text": "um a cubid ADM binary itself is normally",
    "start": "294919",
    "end": "299520"
  },
  {
    "text": "supposed to work for a single cubernetes",
    "start": "299520",
    "end": "301680"
  },
  {
    "text": "version so if you take a look for",
    "start": "301680",
    "end": "304080"
  },
  {
    "text": "example before v1.29 29 Kubernetes QBAM",
    "start": "304080",
    "end": "308320"
  },
  {
    "text": "used the vivon beta 3 version of their",
    "start": "308320",
    "end": "311280"
  },
  {
    "text": "cluster configuration starting with the",
    "start": "311280",
    "end": "314000"
  },
  {
    "text": "version after with B130 they started",
    "start": "314000",
    "end": "317680"
  },
  {
    "text": "using a newer API version because they",
    "start": "317680",
    "end": "319600"
  },
  {
    "text": "introduced some changes in cluster API",
    "start": "319600",
    "end": "322240"
  },
  {
    "text": "though we want to or a user wants to",
    "start": "322240",
    "end": "325600"
  },
  {
    "text": "create clusters in different versions",
    "start": "325600",
    "end": "327680"
  },
  {
    "text": "while running them in different versions",
    "start": "327680",
    "end": "330560"
  },
  {
    "text": "there could be classes running 1.29 29",
    "start": "330560",
    "end": "332800"
  },
  {
    "text": "while still others are uh v29 and others",
    "start": "332800",
    "end": "336479"
  },
  {
    "text": "are already at v30 so we can't just",
    "start": "336479",
    "end": "340080"
  },
  {
    "text": "embed the v1 beta 3 or v1 beta 4 api",
    "start": "340080",
    "end": "344720"
  },
  {
    "text": "version of cubadium and expose that one",
    "start": "344720",
    "end": "347440"
  },
  {
    "text": "to the users because what if they want",
    "start": "347440",
    "end": "349600"
  },
  {
    "text": "to create a cluster with the other",
    "start": "349600",
    "end": "350880"
  },
  {
    "text": "version um so what could happen there is",
    "start": "350880",
    "end": "354479"
  },
  {
    "text": "um or or what's the mistake here",
    "start": "354479",
    "end": "358720"
  },
  {
    "text": "uh we just can't do this because it",
    "start": "358720",
    "end": "361440"
  },
  {
    "text": "would be breaking a breaking change if",
    "start": "361440",
    "end": "363360"
  },
  {
    "text": "Cubadium itself evolves introduces",
    "start": "363360",
    "end": "365919"
  },
  {
    "text": "changes we bump our go dependency and",
    "start": "365919",
    "end": "369280"
  },
  {
    "text": "have to use the newer V1 beta 4 version",
    "start": "369280",
    "end": "373280"
  },
  {
    "text": "um but would not be able anymore to",
    "start": "373280",
    "end": "375039"
  },
  {
    "text": "create the new the older versions then",
    "start": "375039",
    "end": "378720"
  },
  {
    "text": "so what we do instead is we copy adapt",
    "start": "378720",
    "end": "381600"
  },
  {
    "text": "and evolve we have our own copy of that",
    "start": "381600",
    "end": "384400"
  },
  {
    "text": "configuration our own strct we use and",
    "start": "384400",
    "end": "386639"
  },
  {
    "text": "expose to our users and in the back end",
    "start": "386639",
    "end": "389039"
  },
  {
    "text": "we convert to the version we need when",
    "start": "389039",
    "end": "392639"
  },
  {
    "text": "creating the cluster because the user",
    "start": "392639",
    "end": "394560"
  },
  {
    "text": "defined we want to 29 or V30 and by that",
    "start": "394560",
    "end": "397840"
  },
  {
    "text": "we can support a long range of",
    "start": "397840",
    "end": "399759"
  },
  {
    "text": "Kubernetes versions like",
    "start": "399759",
    "end": "401639"
  },
  {
    "text": "V27 to V33 while still using Cubad's V1",
    "start": "401639",
    "end": "406880"
  },
  {
    "text": "beta 3 or V1 beta 4 in the back end",
    "start": "406880",
    "end": "411000"
  },
  {
    "text": "another example of embedding external",
    "start": "411000",
    "end": "413840"
  },
  {
    "text": "APIs would",
    "start": "413840",
    "end": "415160"
  },
  {
    "text": "be in cluster API we have this cluster",
    "start": "415160",
    "end": "418720"
  },
  {
    "text": "object and of course we need some",
    "start": "418720",
    "end": "421199"
  },
  {
    "text": "control plane to run in our cluster or",
    "start": "421199",
    "end": "423759"
  },
  {
    "text": "for our cluster for that we refer a",
    "start": "423759",
    "end": "426639"
  },
  {
    "text": "control plane object in our cluster",
    "start": "426639",
    "end": "428599"
  },
  {
    "text": "object when modeling that we decided to",
    "start": "428599",
    "end": "432240"
  },
  {
    "text": "use an object from the core v1 package",
    "start": "432240",
    "end": "436400"
  },
  {
    "text": "core v1 seems to be stable it should not",
    "start": "436400",
    "end": "440800"
  },
  {
    "text": "evolve that much so we shouldn't have",
    "start": "440800",
    "end": "442800"
  },
  {
    "text": "issues when um yeah bumping to a new go",
    "start": "442800",
    "end": "446960"
  },
  {
    "text": "module version of",
    "start": "446960",
    "end": "448759"
  },
  {
    "text": "Kubernetes but what's the mistake",
    "start": "448759",
    "end": "451639"
  },
  {
    "text": "here we just started using core v1",
    "start": "451639",
    "end": "455199"
  },
  {
    "text": "object reference but yeah and it worked",
    "start": "455199",
    "end": "459280"
  },
  {
    "text": "we're fine we still have it like this",
    "start": "459280",
    "end": "461280"
  },
  {
    "text": "today but there are for example three um",
    "start": "461280",
    "end": "464800"
  },
  {
    "text": "fields in there which we don't need",
    "start": "464800",
    "end": "468319"
  },
  {
    "text": "users see these fields in the API they",
    "start": "468319",
    "end": "470800"
  },
  {
    "text": "might expect something to happen if they",
    "start": "470800",
    "end": "472880"
  },
  {
    "text": "set these fields but they're actually",
    "start": "472880",
    "end": "475240"
  },
  {
    "text": "unused just removing these",
    "start": "475240",
    "end": "477879"
  },
  {
    "text": "fields is not that easy because it may",
    "start": "477879",
    "end": "480720"
  },
  {
    "text": "be a a breaking change if a user misused",
    "start": "480720",
    "end": "483680"
  },
  {
    "text": "that field before um and we try to get",
    "start": "483680",
    "end": "486400"
  },
  {
    "text": "rid of that when going to V1 beta 2 um",
    "start": "486400",
    "end": "489599"
  },
  {
    "text": "because we don't can't do it in in our",
    "start": "489599",
    "end": "492319"
  },
  {
    "text": "v1 beta 1 API so what should we have",
    "start": "492319",
    "end": "495840"
  },
  {
    "text": "done instead we we should have seen okay",
    "start": "495840",
    "end": "498160"
  },
  {
    "text": "object reference is a cool example we",
    "start": "498160",
    "end": "501280"
  },
  {
    "text": "reuse that but we create our own copy",
    "start": "501280",
    "end": "504160"
  },
  {
    "text": "and only use that or have the fields in",
    "start": "504160",
    "end": "507199"
  },
  {
    "text": "our API which we really need and skip",
    "start": "507199",
    "end": "509599"
  },
  {
    "text": "adding the other ones and in this way if",
    "start": "509599",
    "end": "512560"
  },
  {
    "text": "we later on maybe need a UID field we",
    "start": "512560",
    "end": "515360"
  },
  {
    "text": "just could add it and make use of it but",
    "start": "515360",
    "end": "517279"
  },
  {
    "text": "only when we need",
    "start": "517279",
    "end": "519719"
  },
  {
    "text": "it a third example which is also pretty",
    "start": "519719",
    "end": "522640"
  },
  {
    "text": "similar but does not depend on external",
    "start": "522640",
    "end": "525360"
  },
  {
    "text": "APIs is in our machines we have a spec",
    "start": "525360",
    "end": "530399"
  },
  {
    "text": "and a machine itself is supposed to be",
    "start": "530399",
    "end": "533200"
  },
  {
    "text": "one unique item we also have the concept",
    "start": "533200",
    "end": "536160"
  },
  {
    "text": "of machine templates to create a fleet",
    "start": "536160",
    "end": "538560"
  },
  {
    "text": "of machines so at the first hand we",
    "start": "538560",
    "end": "541839"
  },
  {
    "text": "thought yeah it's totally good to maybe",
    "start": "541839",
    "end": "544880"
  },
  {
    "text": "just use the same spec and same strct",
    "start": "544880",
    "end": "547240"
  },
  {
    "text": "because a machine template we want to",
    "start": "547240",
    "end": "549760"
  },
  {
    "text": "define everything in there and create",
    "start": "549760",
    "end": "552560"
  },
  {
    "text": "hundreds of machines of it but let's",
    "start": "552560",
    "end": "555040"
  },
  {
    "text": "consider the use case of adding",
    "start": "555040",
    "end": "557680"
  },
  {
    "text": "something like an IP address because we",
    "start": "557680",
    "end": "559680"
  },
  {
    "text": "want to do IP address management with",
    "start": "559680",
    "end": "561760"
  },
  {
    "text": "our um",
    "start": "561760",
    "end": "564440"
  },
  {
    "text": "controllers what's wrong here is we did",
    "start": "564440",
    "end": "567839"
  },
  {
    "text": "not consider that IP address adding it",
    "start": "567839",
    "end": "570320"
  },
  {
    "text": "to the machine spec it could also leak",
    "start": "570320",
    "end": "573600"
  },
  {
    "text": "into the machine template and from the",
    "start": "573600",
    "end": "576000"
  },
  {
    "text": "machine template side it just doesn't",
    "start": "576000",
    "end": "577600"
  },
  {
    "text": "make sense because every machine at the",
    "start": "577600",
    "end": "579680"
  },
  {
    "text": "end should have a different IP and not",
    "start": "579680",
    "end": "581839"
  },
  {
    "text": "the same so what should we have done",
    "start": "581839",
    "end": "584160"
  },
  {
    "text": "here instead is the same copy adapt and",
    "start": "584160",
    "end": "587440"
  },
  {
    "text": "evolve in a separate strct type we",
    "start": "587440",
    "end": "589760"
  },
  {
    "text": "should think about do we need to evolve",
    "start": "589760",
    "end": "593920"
  },
  {
    "text": "these different objects separately and",
    "start": "593920",
    "end": "596800"
  },
  {
    "text": "um because converting between one and",
    "start": "596800",
    "end": "598800"
  },
  {
    "text": "the other strct is pretty pretty simple",
    "start": "598800",
    "end": "601440"
  },
  {
    "text": "but just swapping out go types may end",
    "start": "601440",
    "end": "604800"
  },
  {
    "text": "up in completely different open API",
    "start": "604800",
    "end": "607440"
  },
  {
    "text": "specs depending on what we do or if we",
    "start": "607440",
    "end": "609839"
  },
  {
    "text": "do not do it",
    "start": "609839",
    "end": "612360"
  },
  {
    "text": "carefully okay so after seeing three",
    "start": "612360",
    "end": "616240"
  },
  {
    "text": "example of bad things that can happen if",
    "start": "616240",
    "end": "620320"
  },
  {
    "text": "you embed that API you might ask",
    "start": "620320",
    "end": "622279"
  },
  {
    "text": "yourself if is it is always bad to reuse",
    "start": "622279",
    "end": "626640"
  },
  {
    "text": "existing code type and the answer is no",
    "start": "626640",
    "end": "629440"
  },
  {
    "text": "in some cases perfectly fine in some",
    "start": "629440",
    "end": "631839"
  },
  {
    "text": "cases you have to for instance in your",
    "start": "631839",
    "end": "634959"
  },
  {
    "text": "CRD on your go in the go type for your",
    "start": "634959",
    "end": "637519"
  },
  {
    "text": "CRD you have to embed the type meta and",
    "start": "637519",
    "end": "640800"
  },
  {
    "text": "object meta in order to make them uh uh",
    "start": "640800",
    "end": "645360"
  },
  {
    "text": "proper compliant Kubernetes object there",
    "start": "645360",
    "end": "648160"
  },
  {
    "text": "are also other type that were explicitly",
    "start": "648160",
    "end": "651360"
  },
  {
    "text": "designed for reuse like condition meta",
    "start": "651360",
    "end": "654160"
  },
  {
    "text": "v1 condition uh in kubernetes or like",
    "start": "654160",
    "end": "657600"
  },
  {
    "text": "type uh or like time which provide uh",
    "start": "657600",
    "end": "662160"
  },
  {
    "text": "nice and then this serialization of",
    "start": "662160",
    "end": "665640"
  },
  {
    "text": "timestamps in some cases it is also good",
    "start": "665640",
    "end": "668720"
  },
  {
    "text": "to reuse your own types but you have to",
    "start": "668720",
    "end": "674079"
  },
  {
    "text": "carefully",
    "start": "674079",
    "end": "675640"
  },
  {
    "text": "consider what are the implication in",
    "start": "675640",
    "end": "678079"
  },
  {
    "text": "order to avoid the problem that",
    "start": "678079",
    "end": "679680"
  },
  {
    "text": "Christian just",
    "start": "679680",
    "end": "682040"
  },
  {
    "text": "described taking a step back for a",
    "start": "682040",
    "end": "685200"
  },
  {
    "text": "minute let's let's look again at how we",
    "start": "685200",
    "end": "688640"
  },
  {
    "text": "develop uh the PI so this process",
    "start": "688640",
    "end": "693079"
  },
  {
    "text": "unfortunately",
    "start": "693079",
    "end": "694760"
  },
  {
    "text": "might lead or might trick maintainers",
    "start": "694760",
    "end": "698399"
  },
  {
    "text": "because as a maintainer we focus a lot",
    "start": "698399",
    "end": "700880"
  },
  {
    "text": "on writing go types and we just think oh",
    "start": "700880",
    "end": "704640"
  },
  {
    "text": "uh controller gen will take care of",
    "start": "704640",
    "end": "706640"
  },
  {
    "text": "everything and generate uh uh everything",
    "start": "706640",
    "end": "710320"
  },
  {
    "text": "cor but but this could be uh misleading",
    "start": "710320",
    "end": "714640"
  },
  {
    "text": "because at the",
    "start": "714640",
    "end": "716760"
  },
  {
    "text": "end what impact the user is the open API",
    "start": "716760",
    "end": "720399"
  },
  {
    "text": "spec",
    "start": "720399",
    "end": "721480"
  },
  {
    "text": "so pro tip or lesson learned here is",
    "start": "721480",
    "end": "725120"
  },
  {
    "text": "that whenever you change your go type",
    "start": "725120",
    "end": "727600"
  },
  {
    "text": "run the generator and look at the open",
    "start": "727600",
    "end": "730000"
  },
  {
    "text": "API spec so it's not too too difficult",
    "start": "730000",
    "end": "733279"
  },
  {
    "text": "to to read and you really can figure it",
    "start": "733279",
    "end": "736800"
  },
  {
    "text": "out what impact will your change",
    "start": "736800",
    "end": "742040"
  },
  {
    "text": "uh create to the",
    "start": "742040",
    "end": "745320"
  },
  {
    "text": "users as a lot last tip uh of this first",
    "start": "745320",
    "end": "749519"
  },
  {
    "text": "session of the talk let's talk about uh",
    "start": "749519",
    "end": "753519"
  },
  {
    "text": "a minute about",
    "start": "753519",
    "end": "755320"
  },
  {
    "text": "rules so when we talk about API",
    "start": "755320",
    "end": "759279"
  },
  {
    "text": "guarantee or API breaking change or API",
    "start": "759279",
    "end": "763120"
  },
  {
    "text": "deprecation",
    "start": "763120",
    "end": "764680"
  },
  {
    "text": "rule they apply on the open API spec",
    "start": "764680",
    "end": "769519"
  },
  {
    "text": "okay this is what impact user this is",
    "start": "769519",
    "end": "771760"
  },
  {
    "text": "where guarantee apply if I have one beta",
    "start": "771760",
    "end": "774959"
  },
  {
    "text": "one API",
    "start": "774959",
    "end": "776720"
  },
  {
    "text": "uh when I'm going to deprecate it it",
    "start": "776720",
    "end": "778800"
  },
  {
    "text": "will take one year or three",
    "start": "778800",
    "end": "782880"
  },
  {
    "text": "release",
    "start": "783000",
    "end": "784920"
  },
  {
    "text": "however from the other from the other",
    "start": "784920",
    "end": "787360"
  },
  {
    "text": "side of the equation some other rule",
    "start": "787360",
    "end": "789760"
  },
  {
    "text": "apply or some other policy this is a go",
    "start": "789760",
    "end": "791920"
  },
  {
    "text": "binary this is a binary this is go will",
    "start": "791920",
    "end": "794639"
  },
  {
    "text": "combine into a binary so same ver apply",
    "start": "794639",
    "end": "798000"
  },
  {
    "text": "what are the implication of these two",
    "start": "798000",
    "end": "800079"
  },
  {
    "text": "rules apply to the same artifact is",
    "start": "800079",
    "end": "803880"
  },
  {
    "text": "that if you are in a better corner and",
    "start": "803880",
    "end": "807600"
  },
  {
    "text": "you know your audience which is super",
    "start": "807600",
    "end": "810000"
  },
  {
    "text": "important you may you might find very",
    "start": "810000",
    "end": "813040"
  },
  {
    "text": "pragmatic way to solve to solve an issue",
    "start": "813040",
    "end": "816399"
  },
  {
    "text": "let's make an example you want to rename",
    "start": "816399",
    "end": "818560"
  },
  {
    "text": "a go type you could do it if you for",
    "start": "818560",
    "end": "822320"
  },
  {
    "text": "instance if your API package is used",
    "start": "822320",
    "end": "825279"
  },
  {
    "text": "only by someone internally of your",
    "start": "825279",
    "end": "828560"
  },
  {
    "text": "company is a breaking change but you can",
    "start": "828560",
    "end": "831200"
  },
  {
    "text": "manage it okay and this way might help",
    "start": "831200",
    "end": "834480"
  },
  {
    "text": "to solve some of the issue that",
    "start": "834480",
    "end": "836240"
  },
  {
    "text": "Christian",
    "start": "836240",
    "end": "838279"
  },
  {
    "text": "described so we talked a lot about go",
    "start": "838279",
    "end": "841040"
  },
  {
    "text": "code what about comments it can't be too",
    "start": "841040",
    "end": "844079"
  },
  {
    "text": "hard there should no should be there",
    "start": "844079",
    "end": "846160"
  },
  {
    "text": "should be no issues there right let's",
    "start": "846160",
    "end": "848399"
  },
  {
    "text": "make an example for generating CRDs we",
    "start": "848399",
    "end": "851440"
  },
  {
    "text": "often use this magic markers which are",
    "start": "851440",
    "end": "854079"
  },
  {
    "text": "for example used by controller gen to",
    "start": "854079",
    "end": "856240"
  },
  {
    "text": "influence the open API spec what could",
    "start": "856240",
    "end": "859120"
  },
  {
    "text": "be what could we do wrong here is we",
    "start": "859120",
    "end": "862240"
  },
  {
    "text": "could simply miss setting the right",
    "start": "862240",
    "end": "864240"
  },
  {
    "text": "markers",
    "start": "864240",
    "end": "865399"
  },
  {
    "text": "like the max length validation is very",
    "start": "865399",
    "end": "869040"
  },
  {
    "text": "important for example for cell cell is",
    "start": "869040",
    "end": "871600"
  },
  {
    "text": "all around us and validating admission",
    "start": "871600",
    "end": "874000"
  },
  {
    "text": "policies only work if you use the proper",
    "start": "874000",
    "end": "877519"
  },
  {
    "text": "if you add the proper validations which",
    "start": "877519",
    "end": "879440"
  },
  {
    "text": "result to the right um fields to be set",
    "start": "879440",
    "end": "882240"
  },
  {
    "text": "in our open API",
    "start": "882240",
    "end": "884199"
  },
  {
    "text": "spec another example is setting fields",
    "start": "884199",
    "end": "887680"
  },
  {
    "text": "you consider optional actually as",
    "start": "887680",
    "end": "889720"
  },
  {
    "text": "optional which also might influence um",
    "start": "889720",
    "end": "892399"
  },
  {
    "text": "how it results in the open API spec so",
    "start": "892399",
    "end": "895120"
  },
  {
    "text": "what we could do about this is there's a",
    "start": "895120",
    "end": "898399"
  },
  {
    "text": "solution for this there's a project",
    "start": "898399",
    "end": "901120"
  },
  {
    "text": "called KL which is short for Kubernetes",
    "start": "901120",
    "end": "903920"
  },
  {
    "text": "API llinter which checks for common",
    "start": "903920",
    "end": "906320"
  },
  {
    "text": "practices and enforces best practices in",
    "start": "906320",
    "end": "908720"
  },
  {
    "text": "your code it's a it's a super good",
    "start": "908720",
    "end": "911040"
  },
  {
    "text": "llinter which integrates nicely with",
    "start": "911040",
    "end": "912959"
  },
  {
    "text": "with Golink CRIN um and at this point I",
    "start": "912959",
    "end": "916560"
  },
  {
    "text": "want to give a shout out to Cho who",
    "start": "916560",
    "end": "919040"
  },
  {
    "text": "started this project and is driving it",
    "start": "919040",
    "end": "921440"
  },
  {
    "text": "and to everyone else um who is contri",
    "start": "921440",
    "end": "923920"
  },
  {
    "text": "contributing to it the project itself is",
    "start": "923920",
    "end": "926720"
  },
  {
    "text": "planned to get a home in Sikk API",
    "start": "926720",
    "end": "928480"
  },
  {
    "text": "machinery as repository um and yeah",
    "start": "928480",
    "end": "931839"
  },
  {
    "text": "please it's a good thing to start using",
    "start": "931839",
    "end": "934320"
  },
  {
    "text": "it and um it makes you help think about",
    "start": "934320",
    "end": "937519"
  },
  {
    "text": "some decisions maybe not every lint rule",
    "start": "937519",
    "end": "940720"
  },
  {
    "text": "applies for your API in that field maybe",
    "start": "940720",
    "end": "944880"
  },
  {
    "text": "but then you can do explicit exception",
    "start": "944880",
    "end": "946800"
  },
  {
    "text": "of that and um note that in your API or",
    "start": "946800",
    "end": "949440"
  },
  {
    "text": "in your go docu as edition",
    "start": "949440",
    "end": "953040"
  },
  {
    "text": "so one more example where KL could help",
    "start": "953040",
    "end": "955600"
  },
  {
    "text": "you in future is the following we have",
    "start": "955600",
    "end": "959440"
  },
  {
    "text": "an cluster object which for example has",
    "start": "959440",
    "end": "962000"
  },
  {
    "text": "an variables um list or array in it we",
    "start": "962000",
    "end": "965839"
  },
  {
    "text": "have a second controller also trying to",
    "start": "965839",
    "end": "968880"
  },
  {
    "text": "add a field to this list or to this",
    "start": "968880",
    "end": "971639"
  },
  {
    "text": "array per default this list is treated",
    "start": "971639",
    "end": "974880"
  },
  {
    "text": "as atomic so both sides the controller",
    "start": "974880",
    "end": "978639"
  },
  {
    "text": "or the GitOps tool trying to sync the",
    "start": "978639",
    "end": "982399"
  },
  {
    "text": "source to the target object would always",
    "start": "982399",
    "end": "984959"
  },
  {
    "text": "try to just set the instance type and",
    "start": "984959",
    "end": "987120"
  },
  {
    "text": "the zone fields here while our other",
    "start": "987120",
    "end": "990480"
  },
  {
    "text": "tool like controller which wants to just",
    "start": "990480",
    "end": "992639"
  },
  {
    "text": "set a con cost center um field variable",
    "start": "992639",
    "end": "997199"
  },
  {
    "text": "adding to that field just fights with",
    "start": "997199",
    "end": "1000240"
  },
  {
    "text": "our GitHubs tool and then we end up in",
    "start": "1000240",
    "end": "1002800"
  },
  {
    "text": "infinite reconciliations which costs",
    "start": "1002800",
    "end": "1005360"
  },
  {
    "text": "performance costs resources and it's",
    "start": "1005360",
    "end": "1007600"
  },
  {
    "text": "just not good the solution here is",
    "start": "1007600",
    "end": "1010639"
  },
  {
    "text": "setting the list list type and list map",
    "start": "1010639",
    "end": "1013040"
  },
  {
    "text": "key",
    "start": "1013040",
    "end": "1014040"
  },
  {
    "text": "um markers so open API understands this",
    "start": "1014040",
    "end": "1018720"
  },
  {
    "text": "array not as array but as as list map",
    "start": "1018720",
    "end": "1021839"
  },
  {
    "text": "which then helps to have co-ownership of",
    "start": "1021839",
    "end": "1024558"
  },
  {
    "text": "entries inside this list that's the",
    "start": "1024559",
    "end": "1027280"
  },
  {
    "text": "llinter which is planned to be",
    "start": "1027280",
    "end": "1028640"
  },
  {
    "text": "implemented in kala it's not there yet",
    "start": "1028640",
    "end": "1030480"
  },
  {
    "text": "there's a couple of more um and open",
    "start": "1030480",
    "end": "1032720"
  },
  {
    "text": "misses for it um so",
    "start": "1032720",
    "end": "1036798"
  },
  {
    "text": "yeah okay so at this",
    "start": "1037640",
    "end": "1042799"
  },
  {
    "text": "point you you might think that you now",
    "start": "1043000",
    "end": "1046240"
  },
  {
    "text": "master writing go types for for",
    "start": "1046240",
    "end": "1049280"
  },
  {
    "text": "Kubernetes",
    "start": "1049280",
    "end": "1050520"
  },
  {
    "text": "API you know about types you know about",
    "start": "1050520",
    "end": "1054080"
  },
  {
    "text": "comment and magic",
    "start": "1054080",
    "end": "1056600"
  },
  {
    "text": "markers unfortunately this is not enough",
    "start": "1056600",
    "end": "1060200"
  },
  {
    "text": "so there is one last category of uh",
    "start": "1060200",
    "end": "1064320"
  },
  {
    "text": "mistake that we can do as a developer",
    "start": "1064320",
    "end": "1066880"
  },
  {
    "text": "when writing uh an API and this is the",
    "start": "1066880",
    "end": "1070799"
  },
  {
    "text": "most common and the most tricky to get",
    "start": "1070799",
    "end": "1073840"
  },
  {
    "text": "right and it is about the mistake in",
    "start": "1073840",
    "end": "1077440"
  },
  {
    "text": "field",
    "start": "1077440",
    "end": "1078840"
  },
  {
    "text": "names",
    "start": "1078840",
    "end": "1080600"
  },
  {
    "text": "so let's think",
    "start": "1080600",
    "end": "1083000"
  },
  {
    "text": "about an API an",
    "start": "1083000",
    "end": "1086360"
  },
  {
    "text": "API is a representation of what your",
    "start": "1086360",
    "end": "1090240"
  },
  {
    "text": "project is doing every project is",
    "start": "1090240",
    "end": "1092720"
  },
  {
    "text": "solving a unique problem if you think",
    "start": "1092720",
    "end": "1094640"
  },
  {
    "text": "about cluster API this is a a short",
    "start": "1094640",
    "end": "1097679"
  },
  {
    "text": "project statement for cluster",
    "start": "1097679",
    "end": "1101279"
  },
  {
    "text": "API if you think about the corresponding",
    "start": "1102120",
    "end": "1105520"
  },
  {
    "text": "cluster object you can imagine it as a",
    "start": "1105520",
    "end": "1108640"
  },
  {
    "text": "different",
    "start": "1108640",
    "end": "1109960"
  },
  {
    "text": "representation of the same statement it",
    "start": "1109960",
    "end": "1112960"
  },
  {
    "text": "is the it is what you present to your",
    "start": "1112960",
    "end": "1116240"
  },
  {
    "text": "user is what tell user what your your",
    "start": "1116240",
    "end": "1120720"
  },
  {
    "text": "project is doing but what is the biggest",
    "start": "1120720",
    "end": "1123760"
  },
  {
    "text": "difference between the two form of",
    "start": "1123760",
    "end": "1127200"
  },
  {
    "text": "project statement is that on the left",
    "start": "1127200",
    "end": "1130480"
  },
  {
    "text": "you have context you have full test",
    "start": "1130480",
    "end": "1133039"
  },
  {
    "text": "sentences that explain what your project",
    "start": "1133039",
    "end": "1135919"
  },
  {
    "text": "is doing on the right instead you have",
    "start": "1135919",
    "end": "1139919"
  },
  {
    "text": "only a few",
    "start": "1139919",
    "end": "1141880"
  },
  {
    "text": "keyword",
    "start": "1141880",
    "end": "1144280"
  },
  {
    "text": "and the the key point here is that in",
    "start": "1144280",
    "end": "1148000"
  },
  {
    "text": "API design every one of these keyword",
    "start": "1148000",
    "end": "1151200"
  },
  {
    "text": "matters so it is really important to",
    "start": "1151200",
    "end": "1155200"
  },
  {
    "text": "choose the right keyword and what are",
    "start": "1155200",
    "end": "1157440"
  },
  {
    "text": "the common mistake",
    "start": "1157440",
    "end": "1159559"
  },
  {
    "text": "here there are a lot so if you not",
    "start": "1159559",
    "end": "1164320"
  },
  {
    "text": "choose accurately the the",
    "start": "1164320",
    "end": "1168039"
  },
  {
    "text": "keywords the your API might be confusing",
    "start": "1168039",
    "end": "1170799"
  },
  {
    "text": "for your",
    "start": "1170799",
    "end": "1172200"
  },
  {
    "text": "user if you use s synonymous or",
    "start": "1172200",
    "end": "1176000"
  },
  {
    "text": "abbreviation for the same word word in",
    "start": "1176000",
    "end": "1179200"
  },
  {
    "text": "two different CRD of your project your",
    "start": "1179200",
    "end": "1181840"
  },
  {
    "text": "user may may be confused as",
    "start": "1181840",
    "end": "1184919"
  },
  {
    "text": "well if you use generic",
    "start": "1184919",
    "end": "1189000"
  },
  {
    "text": "term lightly without thinking carefully",
    "start": "1189000",
    "end": "1192080"
  },
  {
    "text": "at it your user might be confused what",
    "start": "1192080",
    "end": "1194960"
  },
  {
    "text": "does this mean",
    "start": "1194960",
    "end": "1197799"
  },
  {
    "text": "okay and making user confused is not the",
    "start": "1197799",
    "end": "1201120"
  },
  {
    "text": "only issue is the fact the real problem",
    "start": "1201120",
    "end": "1203440"
  },
  {
    "text": "is that when you choose the wrong",
    "start": "1203440",
    "end": "1205520"
  },
  {
    "text": "keyword then changing a keyword renaming",
    "start": "1205520",
    "end": "1209360"
  },
  {
    "text": "a field in your API is a breaking",
    "start": "1209360",
    "end": "1212600"
  },
  {
    "text": "change so what is the solution",
    "start": "1212600",
    "end": "1217000"
  },
  {
    "text": "here luckily there are a few tips that",
    "start": "1217000",
    "end": "1220000"
  },
  {
    "text": "can help you and one is really simple",
    "start": "1220000",
    "end": "1224480"
  },
  {
    "text": "and and and effective so you can try to",
    "start": "1224480",
    "end": "1228799"
  },
  {
    "text": "do this exercise you can try to read",
    "start": "1228799",
    "end": "1231919"
  },
  {
    "text": "your API",
    "start": "1231919",
    "end": "1234159"
  },
  {
    "text": "uh and transform it and build a sentence",
    "start": "1234159",
    "end": "1238080"
  },
  {
    "text": "that start with I want to I want to",
    "start": "1238080",
    "end": "1241039"
  },
  {
    "text": "because it is a declarative API so if",
    "start": "1241039",
    "end": "1243600"
  },
  {
    "text": "you do this the exercise here is that I",
    "start": "1243600",
    "end": "1247679"
  },
  {
    "text": "want a cluster with a topology that has",
    "start": "1247679",
    "end": "1251679"
  },
  {
    "text": "a control plane with three replica it is",
    "start": "1251679",
    "end": "1254960"
  },
  {
    "text": "a simple sentence it makes sense it is",
    "start": "1254960",
    "end": "1258000"
  },
  {
    "text": "easy to read user can't understand it",
    "start": "1258000",
    "end": "1261120"
  },
  {
    "text": "this is a good sign a a a good evidence",
    "start": "1261120",
    "end": "1264080"
  },
  {
    "text": "that you are creating a",
    "start": "1264080",
    "end": "1267000"
  },
  {
    "text": "a a good API if instead your sentence",
    "start": "1267000",
    "end": "1271440"
  },
  {
    "text": "doesn't read well it is not uh proper",
    "start": "1271440",
    "end": "1275320"
  },
  {
    "text": "English or uh",
    "start": "1275320",
    "end": "1278600"
  },
  {
    "text": "uh the word are not good etc because",
    "start": "1278600",
    "end": "1282080"
  },
  {
    "text": "there is a a first red alarm that you",
    "start": "1282080",
    "end": "1286080"
  },
  {
    "text": "are not building a nice API or or",
    "start": "1286080",
    "end": "1289200"
  },
  {
    "text": "something that you will regret in the",
    "start": "1289200",
    "end": "1290799"
  },
  {
    "text": "future",
    "start": "1290799",
    "end": "1292240"
  },
  {
    "text": "the second",
    "start": "1292240",
    "end": "1293400"
  },
  {
    "text": "tip require a little bit of more of work",
    "start": "1293400",
    "end": "1297120"
  },
  {
    "text": "but it is really really effective in the",
    "start": "1297120",
    "end": "1300400"
  },
  {
    "text": "long run so if you think about it every",
    "start": "1300400",
    "end": "1305280"
  },
  {
    "text": "project has a glossaryy has a set of",
    "start": "1305280",
    "end": "1307840"
  },
  {
    "text": "term that are specific of this",
    "start": "1307840",
    "end": "1311320"
  },
  {
    "text": "project",
    "start": "1311320",
    "end": "1313559"
  },
  {
    "text": "unfortunately not every project write",
    "start": "1313559",
    "end": "1316799"
  },
  {
    "text": "down is is",
    "start": "1316799",
    "end": "1318600"
  },
  {
    "text": "glossaryy okay so what are the benefits",
    "start": "1318600",
    "end": "1321679"
  },
  {
    "text": "of having a glossary there are many of",
    "start": "1321679",
    "end": "1326039"
  },
  {
    "text": "them first of all a glossary will help",
    "start": "1326039",
    "end": "1329400"
  },
  {
    "text": "users in reading your API will help user",
    "start": "1329400",
    "end": "1332720"
  },
  {
    "text": "when they look at your",
    "start": "1332720",
    "end": "1334919"
  },
  {
    "text": "documentation will be a good companion",
    "start": "1334919",
    "end": "1338320"
  },
  {
    "text": "for for your user but it will be even",
    "start": "1338320",
    "end": "1341919"
  },
  {
    "text": "more important for you maintainers and",
    "start": "1341919",
    "end": "1345039"
  },
  {
    "text": "for the maintainers that will follow you",
    "start": "1345039",
    "end": "1347360"
  },
  {
    "text": "because if there is a an ep a glossaryy",
    "start": "1347360",
    "end": "1350880"
  },
  {
    "text": "which define term which give a cont",
    "start": "1350880",
    "end": "1354080"
  },
  {
    "text": "which allows everyone to understand the",
    "start": "1354080",
    "end": "1357280"
  },
  {
    "text": "keywords in your API this will help when",
    "start": "1357280",
    "end": "1360600"
  },
  {
    "text": "you will add something on top we try to",
    "start": "1360600",
    "end": "1363520"
  },
  {
    "text": "extend the your API you you will create",
    "start": "1363520",
    "end": "1366559"
  },
  {
    "text": "a new CRD in your API so the benefit of",
    "start": "1366559",
    "end": "1370080"
  },
  {
    "text": "having a CRD are very worth the effort",
    "start": "1370080",
    "end": "1373120"
  },
  {
    "text": "and and on top of it you can also",
    "start": "1373120",
    "end": "1375360"
  },
  {
    "text": "consider that it's something that you",
    "start": "1375360",
    "end": "1377919"
  },
  {
    "text": "can build over time so it is not",
    "start": "1377919",
    "end": "1380320"
  },
  {
    "text": "something that you have to do up front",
    "start": "1380320",
    "end": "1382080"
  },
  {
    "text": "as a huge",
    "start": "1382080",
    "end": "1384600"
  },
  {
    "text": "effort let's have an example what we in",
    "start": "1384600",
    "end": "1387760"
  },
  {
    "text": "that case for example did wrong we have",
    "start": "1387760",
    "end": "1390240"
  },
  {
    "text": "the concept of infra infrastructure",
    "start": "1390240",
    "end": "1392320"
  },
  {
    "text": "providers which have for example an AWS",
    "start": "1392320",
    "end": "1395120"
  },
  {
    "text": "machine for AWS we added a field in our",
    "start": "1395120",
    "end": "1398000"
  },
  {
    "text": "contract to say okay AWS machine should",
    "start": "1398000",
    "end": "1401520"
  },
  {
    "text": "notify that in its status with a ready",
    "start": "1401520",
    "end": "1403760"
  },
  {
    "text": "field that it's ready but what does",
    "start": "1403760",
    "end": "1406159"
  },
  {
    "text": "ready mean is it is the node ready is it",
    "start": "1406159",
    "end": "1409760"
  },
  {
    "text": "up and running is it provisioned if you",
    "start": "1409760",
    "end": "1413679"
  },
  {
    "text": "had come from the glossery or from a",
    "start": "1413679",
    "end": "1416880"
  },
  {
    "text": "definition of what we want to have out",
    "start": "1416880",
    "end": "1419360"
  },
  {
    "text": "of that field it would have been each",
    "start": "1419360",
    "end": "1421440"
  },
  {
    "text": "infrastructure machine must report when",
    "start": "1421440",
    "end": "1424080"
  },
  {
    "text": "a machine's initialization is completed",
    "start": "1424080",
    "end": "1427039"
  },
  {
    "text": "and infrastructure is fully provisioned",
    "start": "1427039",
    "end": "1429760"
  },
  {
    "text": "that's what we actually present with the",
    "start": "1429760",
    "end": "1432159"
  },
  {
    "text": "old status ready field it's something",
    "start": "1432159",
    "end": "1434400"
  },
  {
    "text": "we're going to try to fix with the V1",
    "start": "1434400",
    "end": "1436400"
  },
  {
    "text": "beta 2 API 2 in our contract there um",
    "start": "1436400",
    "end": "1440400"
  },
  {
    "text": "and the mistake here is simple just",
    "start": "1440400",
    "end": "1443120"
  },
  {
    "text": "lightly using that wrong wording and",
    "start": "1443120",
    "end": "1445600"
  },
  {
    "text": "which then results in a inaccurate and",
    "start": "1445600",
    "end": "1448400"
  },
  {
    "text": "not explicit API which could be easily",
    "start": "1448400",
    "end": "1452679"
  },
  {
    "text": "misunderstood another example on that",
    "start": "1452679",
    "end": "1455520"
  },
  {
    "text": "camel casing let's think about having an",
    "start": "1455520",
    "end": "1458559"
  },
  {
    "text": "API which does the same as cube cuddle",
    "start": "1458559",
    "end": "1460640"
  },
  {
    "text": "drain we start with having a flag or",
    "start": "1460640",
    "end": "1463279"
  },
  {
    "text": "cube cattle has a flag for grace period",
    "start": "1463279",
    "end": "1465760"
  },
  {
    "text": "so we start adding a field called node",
    "start": "1465760",
    "end": "1467919"
  },
  {
    "text": "node drain grace period at the next",
    "start": "1467919",
    "end": "1470400"
  },
  {
    "text": "version we think ah grace period is not",
    "start": "1470400",
    "end": "1473200"
  },
  {
    "text": "enough we also need a a field for the",
    "start": "1473200",
    "end": "1475360"
  },
  {
    "text": "timeout flag so we add no drain timeout",
    "start": "1475360",
    "end": "1478799"
  },
  {
    "text": "we consist consistently extending our",
    "start": "1478799",
    "end": "1481360"
  },
  {
    "text": "API we did before but it reads a bit",
    "start": "1481360",
    "end": "1485480"
  },
  {
    "text": "weird what we should have done instead",
    "start": "1485480",
    "end": "1487760"
  },
  {
    "text": "is think about embedding and",
    "start": "1487760",
    "end": "1490520"
  },
  {
    "text": "extensibility if we would have added a",
    "start": "1490520",
    "end": "1493200"
  },
  {
    "text": "note drain field which contains the",
    "start": "1493200",
    "end": "1496080"
  },
  {
    "text": "grace period we could easily expand and",
    "start": "1496080",
    "end": "1498880"
  },
  {
    "text": "and evolve with adding a timeout field",
    "start": "1498880",
    "end": "1501120"
  },
  {
    "text": "or others later so consider using",
    "start": "1501120",
    "end": "1505080"
  },
  {
    "text": "nesting to be",
    "start": "1505080",
    "end": "1507080"
  },
  {
    "text": "extensible there are other examples",
    "start": "1507080",
    "end": "1509120"
  },
  {
    "text": "where cal for example helps you like",
    "start": "1509120",
    "end": "1511679"
  },
  {
    "text": "think about not using a boolean but",
    "start": "1511679",
    "end": "1513919"
  },
  {
    "text": "maybe use a enum instead which because",
    "start": "1513919",
    "end": "1516320"
  },
  {
    "text": "you maybe want to have different",
    "start": "1516320",
    "end": "1517760"
  },
  {
    "text": "meanings later on",
    "start": "1517760",
    "end": "1521400"
  },
  {
    "text": "and last pro tip for today is get",
    "start": "1521520",
    "end": "1524640"
  },
  {
    "text": "inspiration from the best api design is",
    "start": "1524640",
    "end": "1527120"
  },
  {
    "text": "not a oneman show and consider getting",
    "start": "1527120",
    "end": "1529840"
  },
  {
    "text": "feedback where you can like peer reviews",
    "start": "1529840",
    "end": "1532720"
  },
  {
    "text": "ask users take a look at other",
    "start": "1532720",
    "end": "1535520"
  },
  {
    "text": "Kubernetes projects or Kubernetes API",
    "start": "1535520",
    "end": "1538799"
  },
  {
    "text": "types itself but critically think of if",
    "start": "1538799",
    "end": "1542320"
  },
  {
    "text": "the same applies to your API and if you",
    "start": "1542320",
    "end": "1544799"
  },
  {
    "text": "should do it this way or just adapt some",
    "start": "1544799",
    "end": "1547840"
  },
  {
    "text": "some parts of it you could even ask an",
    "start": "1547840",
    "end": "1550320"
  },
  {
    "text": "AI but consider thinking about it",
    "start": "1550320",
    "end": "1555200"
  },
  {
    "text": "again okay so before wrapping up let's",
    "start": "1557640",
    "end": "1562279"
  },
  {
    "text": "quickly talk about what we did not cover",
    "start": "1562279",
    "end": "1566320"
  },
  {
    "text": "in today",
    "start": "1566320",
    "end": "1567960"
  },
  {
    "text": "presentation",
    "start": "1567960",
    "end": "1569480"
  },
  {
    "text": "so we did not have a deep dive on CRD",
    "start": "1569480",
    "end": "1573760"
  },
  {
    "text": "markers there are many of them some of",
    "start": "1573760",
    "end": "1576880"
  },
  {
    "text": "them are simple and intuitive like mix",
    "start": "1576880",
    "end": "1579679"
  },
  {
    "text": "min",
    "start": "1579679",
    "end": "1581840"
  },
  {
    "text": "uh most of of the one uh uh about uh",
    "start": "1581840",
    "end": "1585080"
  },
  {
    "text": "validation but there are really many of",
    "start": "1585080",
    "end": "1587760"
  },
  {
    "text": "them so there is a good documentation uh",
    "start": "1587760",
    "end": "1591120"
  },
  {
    "text": "the link is there but again the trick",
    "start": "1591120",
    "end": "1594600"
  },
  {
    "text": "is apply a mer generate userd look at",
    "start": "1594600",
    "end": "1598880"
  },
  {
    "text": "what they looks like in the open API",
    "start": "1598880",
    "end": "1600960"
  },
  {
    "text": "spec and test it in the server is is",
    "start": "1600960",
    "end": "1603360"
  },
  {
    "text": "simple i'm very",
    "start": "1603360",
    "end": "1605640"
  },
  {
    "text": "excited what else we did not talk about",
    "start": "1605640",
    "end": "1609840"
  },
  {
    "text": "we did not talk about creating a new",
    "start": "1609840",
    "end": "1612919"
  },
  {
    "text": "API and deprecating or removing the old",
    "start": "1612919",
    "end": "1615919"
  },
  {
    "text": "API version",
    "start": "1615919",
    "end": "1618320"
  },
  {
    "text": "well this is way more complicated than",
    "start": "1618320",
    "end": "1621760"
  },
  {
    "text": "it should be because uh unfortunately",
    "start": "1621760",
    "end": "1624880"
  },
  {
    "text": "there are problem that you have take",
    "start": "1624880",
    "end": "1627200"
  },
  {
    "text": "care of like storage uh uh storage",
    "start": "1627200",
    "end": "1630960"
  },
  {
    "text": "version migration and also you have to",
    "start": "1630960",
    "end": "1634080"
  },
  {
    "text": "deal with uh a few annoying API server",
    "start": "1634080",
    "end": "1637919"
  },
  {
    "text": "issue that that we are also trying to",
    "start": "1637919",
    "end": "1640080"
  },
  {
    "text": "fix in parallel uh maybe this will be",
    "start": "1640080",
    "end": "1644000"
  },
  {
    "text": "the topic for the next talk uh we also",
    "start": "1644000",
    "end": "1647840"
  },
  {
    "text": "did not talk about some other trick",
    "start": "1647840",
    "end": "1649919"
  },
  {
    "text": "about API development like how to make",
    "start": "1649919",
    "end": "1652480"
  },
  {
    "text": "your API to work well with the cap and",
    "start": "1652480",
    "end": "1655200"
  },
  {
    "text": "restore tool like um uh Valero for",
    "start": "1655200",
    "end": "1660120"
  },
  {
    "text": "instance and uh wrapping it wrapping it",
    "start": "1660120",
    "end": "1664320"
  },
  {
    "text": "up so API design is a",
    "start": "1664320",
    "end": "1667720"
  },
  {
    "text": "journey enjoy it share your",
    "start": "1667720",
    "end": "1672520"
  },
  {
    "text": "learning and have fun and with this",
    "start": "1672520",
    "end": "1676240"
  },
  {
    "text": "thank you for attending we will get your",
    "start": "1676240",
    "end": "1678559"
  },
  {
    "text": "question if you have to",
    "start": "1678559",
    "end": "1682760"
  }
]