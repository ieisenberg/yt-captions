[
  {
    "text": "hello everyone my name is I'm a software",
    "start": "0",
    "end": "3720"
  },
  {
    "text": "engineer at Google today I will talk",
    "start": "3720",
    "end": "6600"
  },
  {
    "text": "about our work and design on global",
    "start": "6600",
    "end": "9360"
  },
  {
    "text": "routine service",
    "start": "9360",
    "end": "12320"
  },
  {
    "text": "here's the agenda for today's talk",
    "start": "13380",
    "end": "15960"
  },
  {
    "text": "first I will start with the brief",
    "start": "15960",
    "end": "17699"
  },
  {
    "text": "introduction about our background of our",
    "start": "17699",
    "end": "21000"
  },
  {
    "text": "work",
    "start": "21000",
    "end": "22080"
  },
  {
    "text": "next I will talk about the exiting",
    "start": "22080",
    "end": "24720"
  },
  {
    "text": "Define",
    "start": "24720",
    "end": "25619"
  },
  {
    "text": "after that I will dive into details",
    "start": "25619",
    "end": "27960"
  },
  {
    "text": "about our new design",
    "start": "27960",
    "end": "31340"
  },
  {
    "text": "so first the background so why we need",
    "start": "33180",
    "end": "36780"
  },
  {
    "text": "to read limiting particularly effective",
    "start": "36780",
    "end": "39540"
  },
  {
    "text": "traffic management is a key to allow",
    "start": "39540",
    "end": "41879"
  },
  {
    "text": "customers to ensure that their micro",
    "start": "41879",
    "end": "44520"
  },
  {
    "text": "surveys and over architecture is highly",
    "start": "44520",
    "end": "47460"
  },
  {
    "text": "available for when any particular client",
    "start": "47460",
    "end": "49920"
  },
  {
    "text": "from exhausting service resource and a",
    "start": "49920",
    "end": "52980"
  },
  {
    "text": "highly reliable",
    "start": "52980",
    "end": "54300"
  },
  {
    "text": "be resilient to misbehaving clients from",
    "start": "54300",
    "end": "57239"
  },
  {
    "text": "overloading the service",
    "start": "57239",
    "end": "59100"
  },
  {
    "text": "in Envoy it can delegate the",
    "start": "59100",
    "end": "61500"
  },
  {
    "text": "retainmentization to external service",
    "start": "61500",
    "end": "65539"
  },
  {
    "text": "so in next few slides of today's talk I",
    "start": "66200",
    "end": "70320"
  },
  {
    "text": "will explain why",
    "start": "70320",
    "end": "73100"
  },
  {
    "text": "so first",
    "start": "73680",
    "end": "76020"
  },
  {
    "text": "um let me talk about the existing design",
    "start": "76020",
    "end": "79020"
  },
  {
    "text": "here is a high level overview of a",
    "start": "79020",
    "end": "81420"
  },
  {
    "text": "request flow so on left hand side there",
    "start": "81420",
    "end": "84180"
  },
  {
    "text": "are multiple client send a request to a",
    "start": "84180",
    "end": "86040"
  },
  {
    "text": "service in the middle",
    "start": "86040",
    "end": "87720"
  },
  {
    "text": "surveys have onward deployed as sidecar",
    "start": "87720",
    "end": "90119"
  },
  {
    "text": "proxy",
    "start": "90119",
    "end": "91500"
  },
  {
    "text": "so before the request reaches to the",
    "start": "91500",
    "end": "93360"
  },
  {
    "text": "service onboard will ask a reading",
    "start": "93360",
    "end": "95759"
  },
  {
    "text": "server if your request should be really",
    "start": "95759",
    "end": "97680"
  },
  {
    "text": "limited or not",
    "start": "97680",
    "end": "99060"
  },
  {
    "text": "so effects is yes the status code 429",
    "start": "99060",
    "end": "102000"
  },
  {
    "text": "will be returned if one says no a",
    "start": "102000",
    "end": "105060"
  },
  {
    "text": "request will be allowed in the central",
    "start": "105060",
    "end": "106680"
  },
  {
    "text": "service",
    "start": "106680",
    "end": "109100"
  },
  {
    "text": "so um let's zoom in a bit look at the",
    "start": "109140",
    "end": "112320"
  },
  {
    "text": "protocol between the envoy and the",
    "start": "112320",
    "end": "114780"
  },
  {
    "text": "written server",
    "start": "114780",
    "end": "116100"
  },
  {
    "text": "so here is the diagram of a request flow",
    "start": "116100",
    "end": "118920"
  },
  {
    "text": "and the API portal interface",
    "start": "118920",
    "end": "122579"
  },
  {
    "text": "so a few things to highlight here",
    "start": "122579",
    "end": "125820"
  },
  {
    "text": "first as you can see from API interface",
    "start": "125820",
    "end": "128280"
  },
  {
    "text": "it is using unary grpc mode video client",
    "start": "128280",
    "end": "132180"
  },
  {
    "text": "sender single request get a SQL response",
    "start": "132180",
    "end": "134459"
  },
  {
    "text": "back like a normal function call",
    "start": "134459",
    "end": "136920"
  },
  {
    "text": "secondly Envoy query integrating server",
    "start": "136920",
    "end": "140160"
  },
  {
    "text": "for every incoming custom request",
    "start": "140160",
    "end": "142560"
  },
  {
    "text": "certainly so on the left hand side the",
    "start": "142560",
    "end": "145200"
  },
  {
    "text": "clock the custom request is blocked",
    "start": "145200",
    "end": "147420"
  },
  {
    "text": "while waiting for the response",
    "start": "147420",
    "end": "151040"
  },
  {
    "text": "so what are the problems with exceeding",
    "start": "151680",
    "end": "154020"
  },
  {
    "text": "approach actually some of them I just",
    "start": "154020",
    "end": "155940"
  },
  {
    "text": "mentioned but let's look at them all",
    "start": "155940",
    "end": "157980"
  },
  {
    "text": "together",
    "start": "157980",
    "end": "160159"
  },
  {
    "text": "so first of all",
    "start": "161819",
    "end": "164519"
  },
  {
    "text": "um the old design doesn't scale very",
    "start": "164519",
    "end": "166560"
  },
  {
    "text": "well",
    "start": "166560",
    "end": "167400"
  },
  {
    "text": "so onboard query written server for",
    "start": "167400",
    "end": "169980"
  },
  {
    "text": "every incoming custom request this still",
    "start": "169980",
    "end": "172800"
  },
  {
    "text": "is infrastructure essential means using",
    "start": "172800",
    "end": "175739"
  },
  {
    "text": "server info itself has to support the",
    "start": "175739",
    "end": "178080"
  },
  {
    "text": "same volume of requests as epoxy which",
    "start": "178080",
    "end": "181620"
  },
  {
    "text": "could be huge",
    "start": "181620",
    "end": "182879"
  },
  {
    "text": "secondly there will be high latency on",
    "start": "182879",
    "end": "185400"
  },
  {
    "text": "the client side because the client need",
    "start": "185400",
    "end": "187980"
  },
  {
    "text": "to read the full response from the",
    "start": "187980",
    "end": "189420"
  },
  {
    "text": "server",
    "start": "189420",
    "end": "190379"
  },
  {
    "text": "surly so there will be low performance",
    "start": "190379",
    "end": "194159"
  },
  {
    "text": "on the server side",
    "start": "194159",
    "end": "195720"
  },
  {
    "text": "so as you can see from the diagram here",
    "start": "195720",
    "end": "198239"
  },
  {
    "text": "so if in the universe mode if there are",
    "start": "198239",
    "end": "201720"
  },
  {
    "text": "multiple backend servers available each",
    "start": "201720",
    "end": "204239"
  },
  {
    "text": "RBC could send to different backends so",
    "start": "204239",
    "end": "207780"
  },
  {
    "text": "what does this imply and why this lead",
    "start": "207780",
    "end": "210300"
  },
  {
    "text": "to better performance I will explain in",
    "start": "210300",
    "end": "213959"
  },
  {
    "text": "next few slides",
    "start": "213959",
    "end": "216800"
  },
  {
    "text": "so have talked about the auto design",
    "start": "217019",
    "end": "219599"
  },
  {
    "text": "let's jump to new design",
    "start": "219599",
    "end": "222920"
  },
  {
    "text": "so the overall request flow architecture",
    "start": "223260",
    "end": "226920"
  },
  {
    "text": "stay mostly seen we still leverage on",
    "start": "226920",
    "end": "229440"
  },
  {
    "text": "voice functionality of delegating the",
    "start": "229440",
    "end": "232140"
  },
  {
    "text": "written meditation to external service",
    "start": "232140",
    "end": "235319"
  },
  {
    "text": "uh you probably ask what's new",
    "start": "235319",
    "end": "238560"
  },
  {
    "text": "so here are three new major major",
    "start": "238560",
    "end": "240840"
  },
  {
    "text": "features to be highlight",
    "start": "240840",
    "end": "242640"
  },
  {
    "text": "I will go through them one by one",
    "start": "242640",
    "end": "246500"
  },
  {
    "text": "so first Imperial slice I mentioned unit",
    "start": "247379",
    "end": "250080"
  },
  {
    "text": "grpc is not good for performance here we",
    "start": "250080",
    "end": "253260"
  },
  {
    "text": "switch to bytext streaming mode",
    "start": "253260",
    "end": "255959"
  },
  {
    "text": "it provides the persistent connection",
    "start": "255959",
    "end": "258180"
  },
  {
    "text": "between client and the server basically",
    "start": "258180",
    "end": "260699"
  },
  {
    "text": "because inside stream mode",
    "start": "260699",
    "end": "264079"
  },
  {
    "text": "so the client and server can send",
    "start": "264600",
    "end": "267060"
  },
  {
    "text": "arbitrary number or message back and",
    "start": "267060",
    "end": "269280"
  },
  {
    "text": "forth over long live stream",
    "start": "269280",
    "end": "272520"
  },
  {
    "text": "so why this is good for performance",
    "start": "272520",
    "end": "275880"
  },
  {
    "text": "um",
    "start": "275880",
    "end": "277380"
  },
  {
    "text": "first let's look at the retail limiting",
    "start": "277380",
    "end": "281280"
  },
  {
    "text": "server side",
    "start": "281280",
    "end": "282360"
  },
  {
    "text": "so this is thickness actually have",
    "start": "282360",
    "end": "285120"
  },
  {
    "text": "helped us to make a full use of",
    "start": "285120",
    "end": "286620"
  },
  {
    "text": "server-side functionality for example",
    "start": "286620",
    "end": "288960"
  },
  {
    "text": "caching we can avoid the cache Miss on",
    "start": "288960",
    "end": "293280"
  },
  {
    "text": "the cost of Cashmere",
    "start": "293280",
    "end": "294960"
  },
  {
    "text": "so I imagine that repeatedly hitting",
    "start": "294960",
    "end": "297600"
  },
  {
    "text": "different backend server will increase",
    "start": "297600",
    "end": "300000"
  },
  {
    "text": "the chunks of cache Miss so the written",
    "start": "300000",
    "end": "302520"
  },
  {
    "text": "request will have to wait for the data",
    "start": "302520",
    "end": "304860"
  },
  {
    "text": "to be available",
    "start": "304860",
    "end": "306300"
  },
  {
    "text": "and besides that on the server side it",
    "start": "306300",
    "end": "308699"
  },
  {
    "text": "can also help to reduce the",
    "start": "308699",
    "end": "310800"
  },
  {
    "text": "synchronization between different",
    "start": "310800",
    "end": "312180"
  },
  {
    "text": "backhand",
    "start": "312180",
    "end": "313380"
  },
  {
    "text": "so um think about example if one client",
    "start": "313380",
    "end": "316740"
  },
  {
    "text": "report is usage to the multiple backend",
    "start": "316740",
    "end": "320040"
  },
  {
    "text": "server in order for retaining service to",
    "start": "320040",
    "end": "322800"
  },
  {
    "text": "figure out a total using number it's",
    "start": "322800",
    "end": "325320"
  },
  {
    "text": "need to synchronize between different",
    "start": "325320",
    "end": "326759"
  },
  {
    "text": "backend to do the calculation which will",
    "start": "326759",
    "end": "329280"
  },
  {
    "text": "induce introduce additional overhead",
    "start": "329280",
    "end": "332220"
  },
  {
    "text": "so um besides that regarding protocol",
    "start": "332220",
    "end": "335280"
  },
  {
    "text": "itself it can also help to reduce avoid",
    "start": "335280",
    "end": "338400"
  },
  {
    "text": "the continuous rpca initialization which",
    "start": "338400",
    "end": "341720"
  },
  {
    "text": "includes like starting a new HTTP",
    "start": "341720",
    "end": "344400"
  },
  {
    "text": "request at the transporter layer",
    "start": "344400",
    "end": "348380"
  },
  {
    "text": "so next is our quota based stable",
    "start": "349860",
    "end": "353100"
  },
  {
    "text": "approach so what is quarter based",
    "start": "353100",
    "end": "355500"
  },
  {
    "text": "basically we group The Client into each",
    "start": "355500",
    "end": "357720"
  },
  {
    "text": "quarter bucket why we are doing that",
    "start": "357720",
    "end": "361080"
  },
  {
    "text": "so firstly because richer limits can be",
    "start": "361080",
    "end": "363900"
  },
  {
    "text": "satisfied in various degree of",
    "start": "363900",
    "end": "365520"
  },
  {
    "text": "granularities by default our clients are",
    "start": "365520",
    "end": "368699"
  },
  {
    "text": "equal but you can also group the client",
    "start": "368699",
    "end": "370979"
  },
  {
    "text": "to uh so that you can allocate more of",
    "start": "370979",
    "end": "373919"
  },
  {
    "text": "your capacity to hybrid clients for",
    "start": "373919",
    "end": "376740"
  },
  {
    "text": "example if you have a production client",
    "start": "376740",
    "end": "378539"
  },
  {
    "text": "and a developer client you may want to",
    "start": "378539",
    "end": "380880"
  },
  {
    "text": "allocate more quarters to your",
    "start": "380880",
    "end": "382259"
  },
  {
    "text": "production client",
    "start": "382259",
    "end": "383940"
  },
  {
    "text": "secondly it can help to Associated",
    "start": "383940",
    "end": "386759"
  },
  {
    "text": "response with request",
    "start": "386759",
    "end": "388620"
  },
  {
    "text": "so implied eye streaming mode the order",
    "start": "388620",
    "end": "390900"
  },
  {
    "text": "of response requests are not guaranteed",
    "start": "390900",
    "end": "394319"
  },
  {
    "text": "so basically the client and the server",
    "start": "394319",
    "end": "396300"
  },
  {
    "text": "can really write in whatever order they",
    "start": "396300",
    "end": "398280"
  },
  {
    "text": "want",
    "start": "398280",
    "end": "399180"
  },
  {
    "text": "but for vitamin client it is required to",
    "start": "399180",
    "end": "402840"
  },
  {
    "text": "know which response correspond to which",
    "start": "402840",
    "end": "405120"
  },
  {
    "text": "request so that they can apply the",
    "start": "405120",
    "end": "408180"
  },
  {
    "text": "recommendization properly",
    "start": "408180",
    "end": "410220"
  },
  {
    "text": "so quarter bucket with the bucket ID as",
    "start": "410220",
    "end": "413639"
  },
  {
    "text": "identify will serve as a bridge between",
    "start": "413639",
    "end": "416100"
  },
  {
    "text": "the server and the client to establish",
    "start": "416100",
    "end": "418620"
  },
  {
    "text": "the mapping between the request and the",
    "start": "418620",
    "end": "420660"
  },
  {
    "text": "response",
    "start": "420660",
    "end": "422340"
  },
  {
    "text": "so",
    "start": "422340",
    "end": "423840"
  },
  {
    "text": "next is how we group them physically we",
    "start": "423840",
    "end": "426780"
  },
  {
    "text": "generate the bucket ID either statically",
    "start": "426780",
    "end": "428819"
  },
  {
    "text": "or diamantically so um let me use a",
    "start": "428819",
    "end": "433340"
  },
  {
    "text": "diagram below to explain this so",
    "start": "433340",
    "end": "435840"
  },
  {
    "text": "basically on the left hand side is a",
    "start": "435840",
    "end": "437639"
  },
  {
    "text": "configuration on the right hand side is",
    "start": "437639",
    "end": "440039"
  },
  {
    "text": "a general debugged ID for the static",
    "start": "440039",
    "end": "442560"
  },
  {
    "text": "method so the key and value from the",
    "start": "442560",
    "end": "445259"
  },
  {
    "text": "configuration will be used as they are",
    "start": "445259",
    "end": "447479"
  },
  {
    "text": "for the dynamic method so the value of",
    "start": "447479",
    "end": "451259"
  },
  {
    "text": "the bucket ID is retrieved from the",
    "start": "451259",
    "end": "453539"
  },
  {
    "text": "request header as highlighted in the",
    "start": "453539",
    "end": "455699"
  },
  {
    "text": "green color",
    "start": "455699",
    "end": "456780"
  },
  {
    "text": "for example request matching between the",
    "start": "456780",
    "end": "459120"
  },
  {
    "text": "configuration and the key of the request",
    "start": "459120",
    "end": "461580"
  },
  {
    "text": "header highlighted in blue color",
    "start": "461580",
    "end": "465800"
  },
  {
    "text": "so um have said that so our design is",
    "start": "468000",
    "end": "472380"
  },
  {
    "text": "operated on the quarter bucket basis",
    "start": "472380",
    "end": "475080"
  },
  {
    "text": "instead of individual clients",
    "start": "475080",
    "end": "477479"
  },
  {
    "text": "so the code usage for each bucket",
    "start": "477479",
    "end": "480259"
  },
  {
    "text": "includes information like number of",
    "start": "480259",
    "end": "482940"
  },
  {
    "text": "requests on a lot denied and there's a",
    "start": "482940",
    "end": "486120"
  },
  {
    "text": "quarter assignment for each packet from",
    "start": "486120",
    "end": "487860"
  },
  {
    "text": "the server includes information like",
    "start": "487860",
    "end": "490020"
  },
  {
    "text": "resolution strategy and the left hand of",
    "start": "490020",
    "end": "492660"
  },
  {
    "text": "the assignment",
    "start": "492660",
    "end": "494880"
  },
  {
    "text": "so um next",
    "start": "494880",
    "end": "496979"
  },
  {
    "text": "it's about how we make it a staple push",
    "start": "496979",
    "end": "500160"
  },
  {
    "text": "the answer is pretty simple",
    "start": "500160",
    "end": "503160"
  },
  {
    "text": "we are using cash",
    "start": "503160",
    "end": "505020"
  },
  {
    "text": "so we leverage the thread local storage",
    "start": "505020",
    "end": "507479"
  },
  {
    "text": "on void to catch a response from reading",
    "start": "507479",
    "end": "509940"
  },
  {
    "text": "the server",
    "start": "509940",
    "end": "511080"
  },
  {
    "text": "by using cache it can first avoid the",
    "start": "511080",
    "end": "514200"
  },
  {
    "text": "returning queries to the server and also",
    "start": "514200",
    "end": "516719"
  },
  {
    "text": "it can improve the latency on the client",
    "start": "516719",
    "end": "519300"
  },
  {
    "text": "side if there is already valid according",
    "start": "519300",
    "end": "521700"
  },
  {
    "text": "in the cache",
    "start": "521700",
    "end": "524240"
  },
  {
    "text": "so last is about our report reply reply",
    "start": "526020",
    "end": "530459"
  },
  {
    "text": "pattern with subscription model",
    "start": "530459",
    "end": "532680"
  },
  {
    "text": "so first and so basically for retaining",
    "start": "532680",
    "end": "535019"
  },
  {
    "text": "server uh using client is a periodically",
    "start": "535019",
    "end": "537540"
  },
  {
    "text": "reported it's called usage to the server",
    "start": "537540",
    "end": "539580"
  },
  {
    "text": "and for the written server and it will",
    "start": "539580",
    "end": "542580"
  },
  {
    "text": "send back assignment once it has collect",
    "start": "542580",
    "end": "544740"
  },
  {
    "text": "enough reports to make the decision",
    "start": "544740",
    "end": "547620"
  },
  {
    "text": "and under the sufficient model here",
    "start": "547620",
    "end": "549660"
  },
  {
    "text": "means that the first report from the",
    "start": "549660",
    "end": "552120"
  },
  {
    "text": "client will serve as an indicator to the",
    "start": "552120",
    "end": "554519"
  },
  {
    "text": "server that okay the client is",
    "start": "554519",
    "end": "556740"
  },
  {
    "text": "subscribed to receive future updates",
    "start": "556740",
    "end": "558540"
  },
  {
    "text": "from the server",
    "start": "558540",
    "end": "561380"
  },
  {
    "text": "so what what's the benefit is this model",
    "start": "564839",
    "end": "567300"
  },
  {
    "text": "provides",
    "start": "567300",
    "end": "568440"
  },
  {
    "text": "um basically you can provide a more",
    "start": "568440",
    "end": "569880"
  },
  {
    "text": "intelligent rhythmatization",
    "start": "569880",
    "end": "572279"
  },
  {
    "text": "so right now the routine server can",
    "start": "572279",
    "end": "575040"
  },
  {
    "text": "adjust the quarter assignment based on",
    "start": "575040",
    "end": "577260"
  },
  {
    "text": "real-time usage report from a client a",
    "start": "577260",
    "end": "580440"
  },
  {
    "text": "single example below requires assign per",
    "start": "580440",
    "end": "583019"
  },
  {
    "text": "use so there's a like a social media",
    "start": "583019",
    "end": "585720"
  },
  {
    "text": "website News website and a shopping",
    "start": "585720",
    "end": "587519"
  },
  {
    "text": "website on Black Friday there might be a",
    "start": "587519",
    "end": "590339"
  },
  {
    "text": "spike of internet usage on the shopping",
    "start": "590339",
    "end": "591959"
  },
  {
    "text": "website so once the server receives such",
    "start": "591959",
    "end": "594660"
  },
  {
    "text": "report from the client it can choose to",
    "start": "594660",
    "end": "597360"
  },
  {
    "text": "allocate more quarters to the shopping",
    "start": "597360",
    "end": "599100"
  },
  {
    "text": "website to allow more requests to go",
    "start": "599100",
    "end": "601680"
  },
  {
    "text": "through",
    "start": "601680",
    "end": "603860"
  },
  {
    "text": "so yeah so let me summarize the design",
    "start": "605100",
    "end": "607980"
  },
  {
    "text": "and wrap it up so first uh this design",
    "start": "607980",
    "end": "611880"
  },
  {
    "text": "is more scalable basically uh we have",
    "start": "611880",
    "end": "614640"
  },
  {
    "text": "this staple infrastructure which is",
    "start": "614640",
    "end": "616320"
  },
  {
    "text": "called the cache you can avoid returning",
    "start": "616320",
    "end": "618180"
  },
  {
    "text": "queries to the server",
    "start": "618180",
    "end": "619680"
  },
  {
    "text": "and also yeah this design is more",
    "start": "619680",
    "end": "622320"
  },
  {
    "text": "intelligent because right now the",
    "start": "622320",
    "end": "624300"
  },
  {
    "text": "written server can adjust the assignment",
    "start": "624300",
    "end": "626700"
  },
  {
    "text": "based on the real-time client usage",
    "start": "626700",
    "end": "628620"
  },
  {
    "text": "report last but not least the design is",
    "start": "628620",
    "end": "631500"
  },
  {
    "text": "more performant for some server side",
    "start": "631500",
    "end": "633779"
  },
  {
    "text": "because it can make full use of",
    "start": "633779",
    "end": "635580"
  },
  {
    "text": "server-side functionality and avoid the",
    "start": "635580",
    "end": "638279"
  },
  {
    "text": "heaviest connection between different",
    "start": "638279",
    "end": "639660"
  },
  {
    "text": "server back-ends on the client side you",
    "start": "639660",
    "end": "642779"
  },
  {
    "text": "can you know avoid sending returning",
    "start": "642779",
    "end": "644640"
  },
  {
    "text": "queries and response to the custom",
    "start": "644640",
    "end": "647339"
  },
  {
    "text": "request faster",
    "start": "647339",
    "end": "649860"
  },
  {
    "text": "um yeah",
    "start": "649860",
    "end": "652100"
  },
  {
    "text": "so here is acknowledgment so this is a",
    "start": "652320",
    "end": "655200"
  },
  {
    "text": "joint work across multiple teams at",
    "start": "655200",
    "end": "657540"
  },
  {
    "text": "Google",
    "start": "657540",
    "end": "659839"
  },
  {
    "text": "yeah thank you that's it",
    "start": "661740",
    "end": "664150"
  },
  {
    "text": "[Applause]",
    "start": "664150",
    "end": "671690"
  },
  {
    "text": "questions",
    "start": "673079",
    "end": "675620"
  },
  {
    "text": "all right so what's that all right so",
    "start": "683459",
    "end": "684779"
  },
  {
    "text": "what's the time of Grant here so we both",
    "start": "684779",
    "end": "687600"
  },
  {
    "text": "support I think per minute",
    "start": "687600",
    "end": "690600"
  },
  {
    "text": "um per seconds yeah because it can be",
    "start": "690600",
    "end": "692820"
  },
  {
    "text": "specified in the configuration",
    "start": "692820",
    "end": "696019"
  },
  {
    "text": "sorry what's up",
    "start": "700740",
    "end": "703940"
  },
  {
    "text": "so basically uh humans for so right now",
    "start": "707399",
    "end": "710579"
  },
  {
    "text": "it's a bright day streaming mode so we",
    "start": "710579",
    "end": "712079"
  },
  {
    "text": "don't need the synchronization on the",
    "start": "712079",
    "end": "713640"
  },
  {
    "text": "server side so because always one server",
    "start": "713640",
    "end": "716459"
  },
  {
    "text": "is sent to the all the data to the one",
    "start": "716459",
    "end": "718560"
  },
  {
    "text": "backend server",
    "start": "718560",
    "end": "720060"
  },
  {
    "text": "so this avoided synchronization on the",
    "start": "720060",
    "end": "722279"
  },
  {
    "text": "service side",
    "start": "722279",
    "end": "725300"
  },
  {
    "text": "just wonder uh if we have a client that",
    "start": "736680",
    "end": "740220"
  },
  {
    "text": "creates multiple connections through",
    "start": "740220",
    "end": "742680"
  },
  {
    "text": "multiple servers how do you synchronize",
    "start": "742680",
    "end": "744540"
  },
  {
    "text": "that rate limit",
    "start": "744540",
    "end": "747120"
  },
  {
    "text": "um multiple connections so multiple",
    "start": "747120",
    "end": "750000"
  },
  {
    "text": "commands uh you want to synchronize",
    "start": "750000",
    "end": "751740"
  },
  {
    "text": "between different clients",
    "start": "751740",
    "end": "753420"
  },
  {
    "text": "different service",
    "start": "753420",
    "end": "755220"
  },
  {
    "text": "for the service so basically",
    "start": "755220",
    "end": "758220"
  },
  {
    "text": "um our design is not um don't really",
    "start": "758220",
    "end": "761279"
  },
  {
    "text": "care about the client's information so",
    "start": "761279",
    "end": "763440"
  },
  {
    "text": "because the client is grouped with a",
    "start": "763440",
    "end": "764880"
  },
  {
    "text": "quarter bucket so what we clear is about",
    "start": "764880",
    "end": "767339"
  },
  {
    "text": "the each book called the buckets",
    "start": "767339",
    "end": "770160"
  },
  {
    "text": "so",
    "start": "770160",
    "end": "771660"
  },
  {
    "text": "um I think our design doesn't need to",
    "start": "771660",
    "end": "773339"
  },
  {
    "text": "synchronize between different clients",
    "start": "773339",
    "end": "775380"
  },
  {
    "text": "yeah if I understand your question card",
    "start": "775380",
    "end": "779639"
  },
  {
    "text": "okay so it's a local uh so he's global",
    "start": "779639",
    "end": "785220"
  },
  {
    "text": "yeah this is a global really Limited",
    "start": "785220",
    "end": "789079"
  },
  {
    "text": "maybe I can think",
    "start": "789480",
    "end": "792380"
  },
  {
    "text": "yeah please",
    "start": "792839",
    "end": "795500"
  },
  {
    "text": "um yeah so we are targeted to early next",
    "start": "797880",
    "end": "800339"
  },
  {
    "text": "year",
    "start": "800339",
    "end": "801120"
  },
  {
    "text": "yeah",
    "start": "801120",
    "end": "803519"
  },
  {
    "text": "huh",
    "start": "803519",
    "end": "806160"
  },
  {
    "text": "oh so question is so do you have a",
    "start": "806160",
    "end": "808079"
  },
  {
    "text": "Target date for this design to be",
    "start": "808079",
    "end": "810420"
  },
  {
    "text": "available like to be used yeah",
    "start": "810420",
    "end": "813920"
  },
  {
    "text": "yeah please",
    "start": "814200",
    "end": "816860"
  },
  {
    "text": "yeah so that's a good question so",
    "start": "825240",
    "end": "826740"
  },
  {
    "text": "basically we have a predefined",
    "start": "826740",
    "end": "828660"
  },
  {
    "text": "configuration even on the so if there is",
    "start": "828660",
    "end": "831180"
  },
  {
    "text": "for example there's no assignment so we",
    "start": "831180",
    "end": "833940"
  },
  {
    "text": "have a predefined role instead of a",
    "start": "833940",
    "end": "835620"
  },
  {
    "text": "querying server and also in the cache",
    "start": "835620",
    "end": "838079"
  },
  {
    "text": "side in the server side as you mentioned",
    "start": "838079",
    "end": "840540"
  },
  {
    "text": "we can like pre-load the ultimatization",
    "start": "840540",
    "end": "843480"
  },
  {
    "text": "instead of waiting for the data to be",
    "start": "843480",
    "end": "845760"
  },
  {
    "text": "available right",
    "start": "845760",
    "end": "848420"
  },
  {
    "text": "yeah yeah",
    "start": "852600",
    "end": "853920"
  },
  {
    "text": "so yeah I'm also there's a caching for",
    "start": "853920",
    "end": "856680"
  },
  {
    "text": "the for the written page response from",
    "start": "856680",
    "end": "859079"
  },
  {
    "text": "the server",
    "start": "859079",
    "end": "860639"
  },
  {
    "text": "yeah and also on both side that's like a",
    "start": "860639",
    "end": "863519"
  },
  {
    "text": "predefined role so for example if",
    "start": "863519",
    "end": "865200"
  },
  {
    "text": "there's no response in the cache we use",
    "start": "865200",
    "end": "868079"
  },
  {
    "text": "a predefined rule to say okay a lot of",
    "start": "868079",
    "end": "870300"
  },
  {
    "text": "requests or deny request",
    "start": "870300",
    "end": "872160"
  },
  {
    "text": "then when the data is populated we look",
    "start": "872160",
    "end": "874860"
  },
  {
    "text": "at the data in the cache",
    "start": "874860",
    "end": "877940"
  },
  {
    "text": "uh you mean the priorities for",
    "start": "885180",
    "end": "889279"
  },
  {
    "text": "so this really depends on configuration",
    "start": "899100",
    "end": "901860"
  },
  {
    "text": "and also not only just priorities we can",
    "start": "901860",
    "end": "905060"
  },
  {
    "text": "group the request based on other",
    "start": "905060",
    "end": "907320"
  },
  {
    "text": "attributes",
    "start": "907320",
    "end": "908639"
  },
  {
    "text": "so priority is just one of them so",
    "start": "908639",
    "end": "910980"
  },
  {
    "text": "basically yeah",
    "start": "910980",
    "end": "914120"
  },
  {
    "text": "it's customizable yeah",
    "start": "919920",
    "end": "923240"
  },
  {
    "text": "yeah any additional questions",
    "start": "926880",
    "end": "930720"
  },
  {
    "text": "thank you so much thank you next we have",
    "start": "930720",
    "end": "934879"
  }
]