[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "hello welcome to kubecon cloudnativecon",
    "start": "480",
    "end": "3439"
  },
  {
    "text": "i was fortunate to have been asked to",
    "start": "3439",
    "end": "5200"
  },
  {
    "text": "give a lightning talk at the very first",
    "start": "5200",
    "end": "7520"
  },
  {
    "text": "cloud native day and it's an honor to be",
    "start": "7520",
    "end": "9440"
  },
  {
    "text": "with you here in valencia today",
    "start": "9440",
    "end": "11759"
  },
  {
    "text": "in this lightning talk we will be",
    "start": "11759",
    "end": "13840"
  },
  {
    "text": "discussing how to scale container bills",
    "start": "13840",
    "end": "15839"
  },
  {
    "text": "with software supply chains with the",
    "start": "15839",
    "end": "17600"
  },
  {
    "text": "build packs flux and cartographer",
    "start": "17600",
    "end": "19840"
  },
  {
    "text": "projects",
    "start": "19840",
    "end": "21680"
  },
  {
    "start": "20000",
    "end": "62000"
  },
  {
    "text": "so build packs is a cncf incubating",
    "start": "21680",
    "end": "24480"
  },
  {
    "text": "project and is designed to simply go",
    "start": "24480",
    "end": "26560"
  },
  {
    "text": "from source code to a running container",
    "start": "26560",
    "end": "28960"
  },
  {
    "text": "there are no docker files required to",
    "start": "28960",
    "end": "31199"
  },
  {
    "text": "build the container image so all that",
    "start": "31199",
    "end": "32880"
  },
  {
    "text": "complexity just melts away",
    "start": "32880",
    "end": "35120"
  },
  {
    "text": "it seems like also every day in the news",
    "start": "35120",
    "end": "36960"
  },
  {
    "text": "we hear something about a software bill",
    "start": "36960",
    "end": "38800"
  },
  {
    "text": "of materials or an s-bomb how it's",
    "start": "38800",
    "end": "40480"
  },
  {
    "text": "either required or helpful build packs",
    "start": "40480",
    "end": "43120"
  },
  {
    "text": "also creates an s bomb natively as part",
    "start": "43120",
    "end": "45200"
  },
  {
    "text": "of the build process",
    "start": "45200",
    "end": "47120"
  },
  {
    "text": "the build pack spec is involved with a",
    "start": "47120",
    "end": "49760"
  },
  {
    "text": "logical mapping of layers to components",
    "start": "49760",
    "end": "51680"
  },
  {
    "text": "so it makes it easy to do rebasing so",
    "start": "51680",
    "end": "53760"
  },
  {
    "text": "this is really good for incremental",
    "start": "53760",
    "end": "55440"
  },
  {
    "text": "builds which results in minimal data",
    "start": "55440",
    "end": "57840"
  },
  {
    "text": "transfer when a full uh rebuilt is not",
    "start": "57840",
    "end": "60320"
  },
  {
    "text": "required",
    "start": "60320",
    "end": "62800"
  },
  {
    "start": "62000",
    "end": "94000"
  },
  {
    "text": "buildpack's api supports a wide variety",
    "start": "63520",
    "end": "66159"
  },
  {
    "text": "of s-bom formats including sift spdx and",
    "start": "66159",
    "end": "69520"
  },
  {
    "text": "cyclone dx the s-bom is created at build",
    "start": "69520",
    "end": "72159"
  },
  {
    "text": "time which is nice because the user",
    "start": "72159",
    "end": "73680"
  },
  {
    "text": "doesn't have to go back to scan the",
    "start": "73680",
    "end": "75280"
  },
  {
    "text": "container to try to figure out what",
    "start": "75280",
    "end": "76640"
  },
  {
    "text": "packages are in the container there's",
    "start": "76640",
    "end": "78560"
  },
  {
    "text": "also a lot of really nice",
    "start": "78560",
    "end": "80799"
  },
  {
    "text": "metadata in the s-bom also including",
    "start": "80799",
    "end": "82880"
  },
  {
    "text": "what processes are available",
    "start": "82880",
    "end": "84960"
  },
  {
    "text": "what run image was used to create the",
    "start": "84960",
    "end": "86960"
  },
  {
    "text": "app image and as well as what build pack",
    "start": "86960",
    "end": "89200"
  },
  {
    "text": "was used to create the app image",
    "start": "89200",
    "end": "92159"
  },
  {
    "text": "the rebasing capability",
    "start": "92159",
    "end": "94960"
  },
  {
    "start": "94000",
    "end": "113000"
  },
  {
    "text": "in build packs is key because large",
    "start": "94960",
    "end": "97360"
  },
  {
    "text": "organizations could have hundreds of",
    "start": "97360",
    "end": "98799"
  },
  {
    "text": "apps that use a common base os layer and",
    "start": "98799",
    "end": "101840"
  },
  {
    "text": "if one package in that base os layer",
    "start": "101840",
    "end": "104799"
  },
  {
    "text": "changes that means all the applications",
    "start": "104799",
    "end": "106799"
  },
  {
    "text": "need to be rebuilt say all these",
    "start": "106799",
    "end": "108560"
  },
  {
    "text": "applications use logging and say there's",
    "start": "108560",
    "end": "110479"
  },
  {
    "text": "a base logging package say log4j",
    "start": "110479",
    "end": "113360"
  },
  {
    "start": "113000",
    "end": "134000"
  },
  {
    "text": "that means every time",
    "start": "113360",
    "end": "115759"
  },
  {
    "text": "the update happens in the base package",
    "start": "115759",
    "end": "117680"
  },
  {
    "text": "the image needs to be rebuilt the build",
    "start": "117680",
    "end": "119360"
  },
  {
    "text": "packs can make that easy because build",
    "start": "119360",
    "end": "121200"
  },
  {
    "text": "pack images are built are composed of",
    "start": "121200",
    "end": "123600"
  },
  {
    "text": "layers and the app images can all share",
    "start": "123600",
    "end": "125920"
  },
  {
    "text": "a common runtime layer so in our example",
    "start": "125920",
    "end": "129280"
  },
  {
    "text": "when that base os layer is updated and",
    "start": "129280",
    "end": "131360"
  },
  {
    "text": "all the application images are affected",
    "start": "131360",
    "end": "134400"
  },
  {
    "start": "134000",
    "end": "154000"
  },
  {
    "text": "build packs can upload a single patch",
    "start": "134400",
    "end": "137200"
  },
  {
    "text": "copy of the os packages in the",
    "start": "137200",
    "end": "139120"
  },
  {
    "text": "environment to the container registry so",
    "start": "139120",
    "end": "141760"
  },
  {
    "text": "this rebase thing can happen very very",
    "start": "141760",
    "end": "143840"
  },
  {
    "text": "quickly this can happen in the order of",
    "start": "143840",
    "end": "145360"
  },
  {
    "text": "milliseconds and then a tool like kpac",
    "start": "145360",
    "end": "147760"
  },
  {
    "text": "can automate the run of the build pack",
    "start": "147760",
    "end": "149440"
  },
  {
    "text": "builds and then a supply chain like",
    "start": "149440",
    "end": "151920"
  },
  {
    "text": "cartographer can then deploy the app",
    "start": "151920",
    "end": "154319"
  },
  {
    "start": "154000",
    "end": "194000"
  },
  {
    "text": "images at scale so cartographer is a",
    "start": "154319",
    "end": "157599"
  },
  {
    "text": "kubernetes native supply chain it's",
    "start": "157599",
    "end": "160239"
  },
  {
    "text": "designed to be very efficient you write",
    "start": "160239",
    "end": "161840"
  },
  {
    "text": "your kubernetes resources once and then",
    "start": "161840",
    "end": "163760"
  },
  {
    "text": "reuse them as templates so it minimizes",
    "start": "163760",
    "end": "166239"
  },
  {
    "text": "the yaml developers and operators need",
    "start": "166239",
    "end": "168480"
  },
  {
    "text": "to use and it gets us away from that",
    "start": "168480",
    "end": "170560"
  },
  {
    "text": "wall of yaml burden or impediment it",
    "start": "170560",
    "end": "172879"
  },
  {
    "text": "defines all the steps for an apps to",
    "start": "172879",
    "end": "174800"
  },
  {
    "text": "reach the path to production so it's",
    "start": "174800",
    "end": "176720"
  },
  {
    "text": "really good at automating best practices",
    "start": "176720",
    "end": "178879"
  },
  {
    "text": "and a shift left methodology it's",
    "start": "178879",
    "end": "181360"
  },
  {
    "text": "designed to work with any kubernetes",
    "start": "181360",
    "end": "183200"
  },
  {
    "text": "object in any kubernetes object that is",
    "start": "183200",
    "end": "185760"
  },
  {
    "text": "applied to the cluster can be used in",
    "start": "185760",
    "end": "187599"
  },
  {
    "text": "the supply chain it's also designed to",
    "start": "187599",
    "end": "189840"
  },
  {
    "text": "work with existing tools like ci cd",
    "start": "189840",
    "end": "192319"
  },
  {
    "text": "pipelines",
    "start": "192319",
    "end": "194879"
  },
  {
    "start": "194000",
    "end": "224000"
  },
  {
    "text": "so",
    "start": "194959",
    "end": "196239"
  },
  {
    "text": "cartographer is based on choreography",
    "start": "196239",
    "end": "198480"
  },
  {
    "text": "which is more flexible than linear",
    "start": "198480",
    "end": "200239"
  },
  {
    "text": "orchestration with linear orchestration",
    "start": "200239",
    "end": "202720"
  },
  {
    "text": "typically a phase say a pipeline run",
    "start": "202720",
    "end": "204640"
  },
  {
    "text": "happens it goes deep and then everything",
    "start": "204640",
    "end": "206640"
  },
  {
    "text": "waits till the end of that phase or that",
    "start": "206640",
    "end": "208480"
  },
  {
    "text": "pipeline run",
    "start": "208480",
    "end": "210159"
  },
  {
    "text": "choreography is essentially a graph it",
    "start": "210159",
    "end": "212879"
  },
  {
    "text": "has an event broker so anything can",
    "start": "212879",
    "end": "214879"
  },
  {
    "text": "trigger an event in the supply chain",
    "start": "214879",
    "end": "217040"
  },
  {
    "text": "it's based on a kubernetes api so it's",
    "start": "217040",
    "end": "219519"
  },
  {
    "text": "essentially looking at kubernetes",
    "start": "219519",
    "end": "221040"
  },
  {
    "text": "objects a status and updating the spec",
    "start": "221040",
    "end": "223599"
  },
  {
    "text": "field",
    "start": "223599",
    "end": "224720"
  },
  {
    "start": "224000",
    "end": "238000"
  },
  {
    "text": "so in our example where the base os",
    "start": "224720",
    "end": "227200"
  },
  {
    "text": "layer changed then build pack can",
    "start": "227200",
    "end": "229760"
  },
  {
    "text": "trigger the container releases",
    "start": "229760",
    "end": "231280"
  },
  {
    "text": "automatically so all that happens",
    "start": "231280",
    "end": "232799"
  },
  {
    "text": "without a code commit from the developer",
    "start": "232799",
    "end": "235760"
  },
  {
    "text": "in addition to",
    "start": "235760",
    "end": "238319"
  },
  {
    "text": "choreography you can also have an",
    "start": "238319",
    "end": "240799"
  },
  {
    "text": "automatic run of the supply chain when",
    "start": "240799",
    "end": "242640"
  },
  {
    "text": "the developer commits code to the",
    "start": "242640",
    "end": "244480"
  },
  {
    "text": "repository flux is a cncf incubating",
    "start": "244480",
    "end": "247840"
  },
  {
    "text": "project it has a git watcher so when the",
    "start": "247840",
    "end": "249760"
  },
  {
    "text": "developer",
    "start": "249760",
    "end": "250879"
  },
  {
    "text": "hits commit and up commits to get then",
    "start": "250879",
    "end": "253360"
  },
  {
    "text": "the supply chain runs so it's based on",
    "start": "253360",
    "end": "255360"
  },
  {
    "text": "the get ops philosophy so you have a",
    "start": "255360",
    "end": "257440"
  },
  {
    "text": "nice declarative state you have um all",
    "start": "257440",
    "end": "260239"
  },
  {
    "text": "the rich archiving and revision history",
    "start": "260239",
    "end": "262639"
  },
  {
    "text": "and the single source of truth of git",
    "start": "262639",
    "end": "266080"
  },
  {
    "start": "266000",
    "end": "300000"
  },
  {
    "text": "so",
    "start": "266080",
    "end": "267280"
  },
  {
    "text": "scaling container builds build pack with",
    "start": "267280",
    "end": "269199"
  },
  {
    "text": "the rebasing is very powerful flex is",
    "start": "269199",
    "end": "271600"
  },
  {
    "text": "the get watcher and then the supply",
    "start": "271600",
    "end": "273440"
  },
  {
    "text": "chain choreographer ties it all together",
    "start": "273440",
    "end": "275759"
  },
  {
    "text": "for more information on build packs",
    "start": "275759",
    "end": "277520"
  },
  {
    "text": "check out the session on thursday",
    "start": "277520",
    "end": "279840"
  },
  {
    "text": "check out the session on friday for flux",
    "start": "279840",
    "end": "282160"
  },
  {
    "text": "and flagger and for more information on",
    "start": "282160",
    "end": "284400"
  },
  {
    "text": "cartographer please join us on twitter",
    "start": "284400",
    "end": "286639"
  },
  {
    "text": "feed as well as join us in the community",
    "start": "286639",
    "end": "288800"
  },
  {
    "text": "meetings and the open hours that occur",
    "start": "288800",
    "end": "290720"
  },
  {
    "text": "every week",
    "start": "290720",
    "end": "292080"
  },
  {
    "text": "so thank you for your interest in",
    "start": "292080",
    "end": "293840"
  },
  {
    "text": "scaling container bills with supply",
    "start": "293840",
    "end": "295440"
  },
  {
    "text": "chains",
    "start": "295440",
    "end": "296150"
  },
  {
    "text": "[Applause]",
    "start": "296150",
    "end": "300310"
  }
]