[
  {
    "start": "0",
    "end": "140000"
  },
  {
    "text": "cool okay we're on all right everybody welcome my name is Ted young I work on",
    "start": "230",
    "end": "7470"
  },
  {
    "text": "the open tracing project and this is supposedly a deep dive into open tracing",
    "start": "7470",
    "end": "12780"
  },
  {
    "text": "and what that means to me is that we're gonna get all of your questions answered so first of all I want to figure out",
    "start": "12780",
    "end": "19910"
  },
  {
    "text": "where people are kind of at in the audience as far as all of this stuff so we're going to do sort of a series of",
    "start": "19910",
    "end": "25470"
  },
  {
    "text": "hand races so get your hand ready first of all a easy one who here writes code",
    "start": "25470",
    "end": "32870"
  },
  {
    "text": "okay good the right audience for this who here has",
    "start": "32870",
    "end": "39410"
  },
  {
    "text": "used open tracing okay good good mix who",
    "start": "39410",
    "end": "45329"
  },
  {
    "text": "here writes open-source libraries written a library something all right",
    "start": "45329",
    "end": "50640"
  },
  {
    "text": "good mix of people who here has wanted",
    "start": "50640",
    "end": "55649"
  },
  {
    "text": "to pump out some kind of logging or other diagnostic information from the open source library that they wrote got",
    "start": "55649",
    "end": "62789"
  },
  {
    "text": "some hands who here found that to be like really frustrating it's really hard",
    "start": "62789",
    "end": "69000"
  },
  {
    "text": "right like how are you supposed to do it there's a bunch of questions you need answered and you can't seem to pick the",
    "start": "69000",
    "end": "74850"
  },
  {
    "text": "right thing so oh and final question who here saw bins",
    "start": "74850",
    "end": "81150"
  },
  {
    "text": "talk about open tracing earlier on Monday okay good too many so we can do a bit of repeat so what I would like to do",
    "start": "81150",
    "end": "88920"
  },
  {
    "text": "with this talk is sort of I have a bunch of slides but we're gonna sort of very",
    "start": "88920",
    "end": "94170"
  },
  {
    "text": "quickly run through them just to give people a baseline but then we're gonna",
    "start": "94170",
    "end": "99750"
  },
  {
    "text": "really turn this into a question and answer session because to me a deep dive is really about an opportunity to ask",
    "start": "99750",
    "end": "105990"
  },
  {
    "text": "whatever burning question you have because whatever question you have is probably similar to questions that other people have and I would like to spend",
    "start": "105990",
    "end": "112500"
  },
  {
    "text": "most of this half hour really kind of discussing those things so I'm gonna run",
    "start": "112500",
    "end": "118380"
  },
  {
    "text": "through the slides real quick so don't necessarily expect to keep up and think",
    "start": "118380",
    "end": "123570"
  },
  {
    "text": "about questions you want to ask and then we're going to start passing the microphone around and in addition to me we've also got Ben Siegelman here",
    "start": "123570",
    "end": "130259"
  },
  {
    "text": "who started the open tracing project we have Carlos up though who works on the Python and Java",
    "start": "130259",
    "end": "135620"
  },
  {
    "text": "API so we can really get into some detailed Q&A so real quick what is",
    "start": "135620",
    "end": "143360"
  },
  {
    "start": "140000",
    "end": "425000"
  },
  {
    "text": "distributed tracing well distributed tracing is just monitoring it's is there's nothing different there's",
    "start": "143360",
    "end": "148940"
  },
  {
    "text": "nothing new all it is is monitoring right computers are doing things we want to know what they're doing and that's",
    "start": "148940",
    "end": "156650"
  },
  {
    "text": "really hard to observe from the outside so you need to get on the inside your",
    "start": "156650",
    "end": "162980"
  },
  {
    "text": "your never doing anything more than this I would argue when you're monitoring there's a sequence of events that you're",
    "start": "162980",
    "end": "169700"
  },
  {
    "text": "trying to put together you're trying to analyze those events in aggregate which is basically metrics and then you want",
    "start": "169700",
    "end": "176569"
  },
  {
    "text": "to set alerts and SLA Xand and other things based on those aggregated events",
    "start": "176569",
    "end": "182379"
  },
  {
    "text": "so we're tracing comes into this picture is that used to be really easy when",
    "start": "182379",
    "end": "188390"
  },
  {
    "text": "everything was running on one computer right like this computer starts to heat up I just pop open Activity Monitor and",
    "start": "188390",
    "end": "194569"
  },
  {
    "text": "find out the thing that's going wrong and restart it damn you Photoshop but",
    "start": "194569",
    "end": "200660"
  },
  {
    "text": "once everything gets distributed trying to understand the sequence of events in",
    "start": "200660",
    "end": "205700"
  },
  {
    "text": "any particular transaction becomes harder because you know you've got some logs on this machine some logs on this",
    "start": "205700",
    "end": "211489"
  },
  {
    "text": "other machine some logs on a third machine and those logs are all mixed in together with other logs coming out of those machines and so you start having",
    "start": "211489",
    "end": "218630"
  },
  {
    "text": "to do a lot of gluing and filtering just to even get the story put back together again and once you're gluing your",
    "start": "218630",
    "end": "225859"
  },
  {
    "text": "tracing that's that's basically all tracing is is passing some form of correlation IDs or some kind of context",
    "start": "225859",
    "end": "233000"
  },
  {
    "text": "so that you can actually index these logs and analyze them in a more structured fashion because the",
    "start": "233000",
    "end": "239150"
  },
  {
    "text": "old-fashioned way of just SS aging into the machine and looking at the log files and digging around in there and regex",
    "start": "239150",
    "end": "244519"
  },
  {
    "text": "just doesn't work at scale if you haven't used a tracing system before",
    "start": "244519",
    "end": "250549"
  },
  {
    "text": "this is tends to be the kind of display that you'll see at first so audience is",
    "start": "250549",
    "end": "258019"
  },
  {
    "text": "left you've got a sort of standard looking architecture let's imagine this",
    "start": "258019",
    "end": "265070"
  },
  {
    "text": "is a sort of web checkout a transaction that we want to look at so you've got a web client you've got a web",
    "start": "265070",
    "end": "272150"
  },
  {
    "text": "server and that web server is talking to three backends an authentication service a billing service and a database and so",
    "start": "272150",
    "end": "279500"
  },
  {
    "text": "when the user on the client hits purchase that request goes to the web",
    "start": "279500",
    "end": "285020"
  },
  {
    "text": "server the web server first authorizes you it then goes to the billing system inside the billing system you've got two",
    "start": "285020",
    "end": "292250"
  },
  {
    "text": "steps verifying so your address and processing the payment and when that succeeds you record the transaction in",
    "start": "292250",
    "end": "299960"
  },
  {
    "text": "your database so this kind of visualization on the right shows you",
    "start": "299960",
    "end": "305780"
  },
  {
    "text": "some interesting things right you can see the latency how long things took and you can see concurrency and parallelism",
    "start": "305780",
    "end": "313160"
  },
  {
    "text": "so you can see this is a very serialize set of transactions we authenticate we",
    "start": "313160",
    "end": "318889"
  },
  {
    "text": "bill and then we go to the database so but once we start talking about tracing",
    "start": "318889",
    "end": "326090"
  },
  {
    "text": "and gluing things together there's a little bit of lingo that we want to share so we all understand we're",
    "start": "326090",
    "end": "332300"
  },
  {
    "text": "talking about the same thing so this is another view if you look at this view here this graph on the top is the same",
    "start": "332300",
    "end": "342500"
  },
  {
    "text": "kind of thing you've got a service a making a network call to service B and inside of service a there's a set of",
    "start": "342500",
    "end": "350539"
  },
  {
    "text": "operations that are occurring that are related to each other so each operation",
    "start": "350539",
    "end": "356000"
  },
  {
    "text": "in tracing lingo we tend to call a span so a span is just something your",
    "start": "356000",
    "end": "361250"
  },
  {
    "text": "computer did that has a name it has a start time it has a duration or an end",
    "start": "361250",
    "end": "366500"
  },
  {
    "text": "time and then it has a bunch of tags that are attached to it and you can think of these tags is basically indices",
    "start": "366500",
    "end": "373220"
  },
  {
    "text": "that you're going to use in your database later in order to look up these",
    "start": "373220",
    "end": "378680"
  },
  {
    "text": "transactions or aggregate them into metrics in order to then glue these",
    "start": "378680",
    "end": "383750"
  },
  {
    "text": "things together there's some bit of information that has to go in band over the wire so in service a talks to",
    "start": "383750",
    "end": "390260"
  },
  {
    "text": "service B let's say you're making an HTTP call you need to have an HTTP header in there where you're passing",
    "start": "390260",
    "end": "396169"
  },
  {
    "text": "along at minimum some kind of identifier and there's usually two there's a trace identifier that says hey",
    "start": "396169",
    "end": "403210"
  },
  {
    "text": "this is the whole overall transaction and then you have a parent span identifier so when the next operation",
    "start": "403210",
    "end": "410290"
  },
  {
    "text": "occurs in service B it needs to know the previous operation was this particular one from service a and that's a there's",
    "start": "410290",
    "end": "418540"
  },
  {
    "text": "often may be some other information that you're sending over the wire as well but that's kind of the primary thing that's",
    "start": "418540",
    "end": "423850"
  },
  {
    "text": "going on there there's a lot of confusion because there's a lot of",
    "start": "423850",
    "end": "429610"
  },
  {
    "start": "425000",
    "end": "471000"
  },
  {
    "text": "different projects they kind of partially overlap there's not a huge amount of standardization in this space",
    "start": "429610",
    "end": "434890"
  },
  {
    "text": "yet but that's the thing we're trying to work towards another reason why there's",
    "start": "434890",
    "end": "441190"
  },
  {
    "text": "some amount of confusion is depending on who you are in this ecosystem you may",
    "start": "441190",
    "end": "446650"
  },
  {
    "text": "care about one aspect of the standardization sorry over-over the",
    "start": "446650",
    "end": "452350"
  },
  {
    "text": "other one and so because people might care about one part of this more than they care about another part of it you",
    "start": "452350",
    "end": "459100"
  },
  {
    "text": "know sometimes these conversations can kind of move past each other so part of",
    "start": "459100",
    "end": "465070"
  },
  {
    "text": "this talk in this deep dive is to really get people on the same page about what these different pieces are so if we dig",
    "start": "465070",
    "end": "473020"
  },
  {
    "text": "into those pieces this right here this is your system from the perspective of a",
    "start": "473020",
    "end": "480700"
  },
  {
    "text": "monitoring system in cloud computing it really doesn't get much more complicated",
    "start": "480700",
    "end": "486190"
  },
  {
    "text": "than this even though it might look complicated because you have a big system at the end of the day you have your services that you're running your",
    "start": "486190",
    "end": "494020"
  },
  {
    "text": "services for the most part are probably made up of your application code in your application logic but then you're",
    "start": "494020",
    "end": "501370"
  },
  {
    "text": "leveraging a whole bunch of shared libraries right so and in particular",
    "start": "501370",
    "end": "506440"
  },
  {
    "text": "things like frameworks and RPC calls that shared code that you're not writing yourself you don't say okay I'm going to",
    "start": "506440",
    "end": "513520"
  },
  {
    "text": "write you know a new e-commerce application so step 1 let's reimplementation to go grab an HTTP",
    "start": "513520",
    "end": "521830"
  },
  {
    "text": "library but then you're going to want to log a bunch of information and you're going to send some of this context over",
    "start": "521830",
    "end": "528400"
  },
  {
    "text": "the wire and so that bit where you're sending the context of the wire that's pretty related to that HTTP library",
    "start": "528400",
    "end": "534649"
  },
  {
    "text": "you're using because at the end of the day that library should be the thing that's injecting and extracting this",
    "start": "534649",
    "end": "540800"
  },
  {
    "text": "band context and propagating that down the down the wire so in addition to your",
    "start": "540800",
    "end": "547339"
  },
  {
    "text": "services you're also talking to other people's services so you're not just leveraging shared libraries you're also",
    "start": "547339",
    "end": "554269"
  },
  {
    "text": "leveraging shared services running on shared infrastructure and as soon as you do that those things are kind of like",
    "start": "554269",
    "end": "560809"
  },
  {
    "text": "black boxes you can see like inside your service you can install some kind of",
    "start": "560809",
    "end": "565819"
  },
  {
    "text": "tracing API or a tracing system and pump data out into some kind of analysis system but you can't do that with other",
    "start": "565819",
    "end": "572269"
  },
  {
    "text": "people's services but increasingly they're all providing some form of tracing analysis you know you've got",
    "start": "572269",
    "end": "579199"
  },
  {
    "text": "x-ray and stackdriver and all these other things so if you want to get a",
    "start": "579199",
    "end": "584240"
  },
  {
    "text": "complete trace of everything that includes not just your application code and your services but also maybe include",
    "start": "584240",
    "end": "590839"
  },
  {
    "text": "some details about how they're interacting with these databases and things that other people are running there's some bit on the back end where",
    "start": "590839",
    "end": "598459"
  },
  {
    "text": "you're going to end up with potentially multiple different analysis systems and if you want to get a complete trace",
    "start": "598459",
    "end": "605029"
  },
  {
    "text": "you're gonna have to take part of that tracing data out of one of these systems and pump it into another one I would say",
    "start": "605029",
    "end": "611779"
  },
  {
    "text": "for a lot of application developers you're probably not needing to do too much of that yet especially if you're",
    "start": "611779",
    "end": "617269"
  },
  {
    "text": "not really pushing the boundaries of the services that you're using but more and more people are building bigger systems",
    "start": "617269",
    "end": "624170"
  },
  {
    "text": "that that really are pushing those boundaries and so that's a problem that's going to need to get solved more",
    "start": "624170",
    "end": "629420"
  },
  {
    "text": "and more in the future so again this is just another slide saying basically what",
    "start": "629420",
    "end": "634850"
  },
  {
    "text": "I just said so in order to make that",
    "start": "634850",
    "end": "640639"
  },
  {
    "text": "whole system work you're going to need four pieces and three of them ideally",
    "start": "640639",
    "end": "645679"
  },
  {
    "text": "should be standardized or shared in some way if you have a tracing API that's",
    "start": "645679",
    "end": "651619"
  },
  {
    "text": "standardized then you can put it into your libraries that then gets shared with other people right because you're",
    "start": "651619",
    "end": "657290"
  },
  {
    "text": "not making a decision for them about whether they're using Jaeger or Zipkin or some other system you can't you",
    "start": "657290",
    "end": "666170"
  },
  {
    "text": "wouldn't want to say put like you a New Relic API or something you know vendor proprietary into your open source",
    "start": "666170",
    "end": "672649"
  },
  {
    "text": "library but someone who's using your open source library may want to pump information out into one of those",
    "start": "672649",
    "end": "677899"
  },
  {
    "text": "systems so some kind of API that kind of abstracts that problem would be very useful in terms of sending data over the",
    "start": "677899",
    "end": "686209"
  },
  {
    "text": "wire ideally that would be standardized as well so you have some standard HTTP",
    "start": "686209",
    "end": "691220"
  },
  {
    "text": "headers that you're putting this tri-state into because then things like",
    "start": "691220",
    "end": "696770"
  },
  {
    "text": "proxies and when you have these systems linking to each other they're able to kind of recognize that oh this is Trey",
    "start": "696770",
    "end": "703459"
  },
  {
    "text": "state there's tracing going on and then ideally if we're going to have to export",
    "start": "703459",
    "end": "709670"
  },
  {
    "text": "data from one of these systems to another or write services that just want",
    "start": "709670",
    "end": "715040"
  },
  {
    "text": "to expose some kind of end point like syslog it would be great to have some",
    "start": "715040",
    "end": "720470"
  },
  {
    "text": "kind of standard data format that that information was coming out in rather than having to like write adapters for",
    "start": "720470",
    "end": "728209"
  },
  {
    "text": "all of these different data formats that are out there and then last but not least you have some kind of system that",
    "start": "728209",
    "end": "734240"
  },
  {
    "text": "you're analyzing this data in I'd argue that's the place where you don't need Standardization because everyone's just",
    "start": "734240",
    "end": "740029"
  },
  {
    "text": "running their own system and that's also the place where we're trying to sort of move monitoring forward and coming up",
    "start": "740029",
    "end": "746600"
  },
  {
    "text": "with better and better ways of analyzing this data so I would argue that really what you want is the part where you're",
    "start": "746600",
    "end": "753080"
  },
  {
    "text": "getting the data out of the system we should all agree on kind of what that looks like and have some standards there",
    "start": "753080",
    "end": "758450"
  },
  {
    "text": "and then really focus in terms of you know competing with each other and trying to push the boundaries just just",
    "start": "758450",
    "end": "765589"
  },
  {
    "text": "in the analysis part that's not happening inside of these systems when",
    "start": "765589",
    "end": "773209"
  },
  {
    "start": "770000",
    "end": "854000"
  },
  {
    "text": "you go to instrument your own application code though I would say you're gonna hear people say oh you really got to use this you really got to",
    "start": "773209",
    "end": "779120"
  },
  {
    "text": "use that you have to use open tracing you have to use census you have to use something rather I don't think you have to use anything when it's just your",
    "start": "779120",
    "end": "785029"
  },
  {
    "text": "application code you can kind of do whatever you want that's your code you're not sharing it with anybody else",
    "start": "785029",
    "end": "790209"
  },
  {
    "text": "it's sort of like you're in your bedroom with blinds closed like whatever you want to do to get data out of there is",
    "start": "790209",
    "end": "796190"
  },
  {
    "text": "fine but a very common thing is like what happens when you want to take some",
    "start": "796190",
    "end": "801290"
  },
  {
    "text": "of your location code pull it out as some kind of shared library and let other people",
    "start": "801290",
    "end": "806740"
  },
  {
    "text": "use it or even internally within your own application run it in a bunch of different contexts so as soon as you do",
    "start": "806740",
    "end": "813459"
  },
  {
    "text": "that you're talking about instrumenting shared libraries and as soon as you want to instrument shared libraries you run",
    "start": "813459",
    "end": "820630"
  },
  {
    "text": "right into this problem of not wanting to make a bunch of these decisions so you need some kind of abstracted API in",
    "start": "820630",
    "end": "827260"
  },
  {
    "text": "order to help be able to actually bake instrumentation directly into your",
    "start": "827260",
    "end": "832930"
  },
  {
    "text": "library rather than people writing a bunch of plugins and adapters for each",
    "start": "832930",
    "end": "838029"
  },
  {
    "text": "kind of tracing or monitoring system you might want to attach shared services",
    "start": "838029",
    "end": "845050"
  },
  {
    "text": "that's a black box so you can't have any kind of API level thing so the",
    "start": "845050",
    "end": "850390"
  },
  {
    "text": "standardization for shared services has to happen at the protocol layer so what",
    "start": "850390",
    "end": "857709"
  },
  {
    "start": "854000",
    "end": "941000"
  },
  {
    "text": "are the solutions that I would suggest to solve these problems or for the tracing API I think open tracing is the",
    "start": "857709",
    "end": "864700"
  },
  {
    "text": "project that's really trying to move API standardization forward so what we do",
    "start": "864700",
    "end": "870190"
  },
  {
    "text": "there is we have an API that if you look at the API in detail you notice it",
    "start": "870190",
    "end": "876339"
  },
  {
    "text": "really goes out of its way to avoid exposing certain kinds of decisions that you would want to make for example it",
    "start": "876339",
    "end": "883240"
  },
  {
    "text": "doesn't expose what kind of wire protocol you're using because there's a variety of wire protocols out there we",
    "start": "883240",
    "end": "890050"
  },
  {
    "text": "might have a standard one in the future but we don't right now so the API says when you inject some kind of trace",
    "start": "890050",
    "end": "896920"
  },
  {
    "text": "context into your HTTP headers there's nothing externally visible as",
    "start": "896920",
    "end": "903459"
  },
  {
    "text": "part of that API that describes what HTTP header you're going to put it into",
    "start": "903459",
    "end": "908940"
  },
  {
    "text": "but we would like to have a standard wire protocol that works currently being",
    "start": "908940",
    "end": "914500"
  },
  {
    "text": "done in a w3c group called the trace context working group and we're starting",
    "start": "914500",
    "end": "920800"
  },
  {
    "text": "with HTTP headers there but you could imagine other standards for other kinds",
    "start": "920800",
    "end": "926440"
  },
  {
    "text": "of message queues and things coming out of that I would love to see a sort of standard data format that doesn't exist",
    "start": "926440",
    "end": "933250"
  },
  {
    "text": "yet at all but this same w3c group is starting to kind of dig into that problem and then analysis systems",
    "start": "933250",
    "end": "941410"
  },
  {
    "start": "941000",
    "end": "1059000"
  },
  {
    "text": "who cares so this is just that same graph again showing this thing from kind",
    "start": "941410",
    "end": "948370"
  },
  {
    "text": "of with these solutions baked in and where I think they need to be so you",
    "start": "948370",
    "end": "954220"
  },
  {
    "text": "would need open tracing inside of your service as the API that you're using and that the API that your shared libraries",
    "start": "954220",
    "end": "959710"
  },
  {
    "text": "are using you would need the standardized trace context in order to",
    "start": "959710",
    "end": "966040"
  },
  {
    "text": "propagate that tray state to somebody else's service that service can kind of",
    "start": "966040",
    "end": "972160"
  },
  {
    "text": "pump information out in whatever data format it wants but as soon as you want to pull that back in to your tracing",
    "start": "972160",
    "end": "978970"
  },
  {
    "text": "system some kind of standardized trace data format that's the place where you would want to see that so and then",
    "start": "978970",
    "end": "988380"
  },
  {
    "text": "normally want to give this talk I do a demo at this point but rather than doing that I want to turn this now into a QA",
    "start": "988380",
    "end": "994660"
  },
  {
    "text": "so that was a big rush through the landscape so I'm imagine there's a lot of",
    "start": "994660",
    "end": "1001770"
  },
  {
    "text": "questions and I know also I've been talking about the general tracing world but this is kind of an open tracing",
    "start": "1001770",
    "end": "1007020"
  },
  {
    "text": "focus deep dive but feel free to ask questions about some of this w3c stuff as well if you have a question on that",
    "start": "1007020",
    "end": "1013440"
  },
  {
    "text": "front and with that ah [Music]",
    "start": "1013440",
    "end": "1021249"
  },
  {
    "text": "so there's oh right sorry so the question is what about asynchronous",
    "start": "1027209",
    "end": "1033000"
  },
  {
    "text": "workflows how do you trace asynchronous workflows and there there's two kinds of",
    "start": "1033000",
    "end": "1039689"
  },
  {
    "text": "asynchronous workflows one is very short-lived asynchronous workflows or",
    "start": "1039690",
    "end": "1045390"
  },
  {
    "text": "what you might call asynchronous programming where you're doing some kind of non-blocking i/o and tracing here",
    "start": "1045390",
    "end": "1052950"
  },
  {
    "text": "let's see which slide that I have that path shows this if you go back to here",
    "start": "1052950",
    "end": "1060170"
  },
  {
    "start": "1059000",
    "end": "1151000"
  },
  {
    "text": "the same way you have these parent-child relationships when you make that",
    "start": "1060170",
    "end": "1065820"
  },
  {
    "text": "reference there's a couple kinds of references you can use the primary one is called a child of",
    "start": "1065820",
    "end": "1071450"
  },
  {
    "text": "relationship that says the this child operation is going to return to the",
    "start": "1071450",
    "end": "1078420"
  },
  {
    "text": "parent operation so there's some work it was doing was on behalf of the parent operation and then there's another",
    "start": "1078420",
    "end": "1084810"
  },
  {
    "text": "reference type called follows from and the follows from reference says hey I just kicked off this work but I'm not",
    "start": "1084810",
    "end": "1091290"
  },
  {
    "text": "waiting around for it to finish so I just did some stuff and then go send an email in the background and then that",
    "start": "1091290",
    "end": "1097740"
  },
  {
    "text": "stunned so you can use those reference types to actually collect all of that",
    "start": "1097740",
    "end": "1103140"
  },
  {
    "text": "into a single graph where this becomes problematic are very long-running",
    "start": "1103140",
    "end": "1108780"
  },
  {
    "text": "asynchronous flows and I think that might be what you're you're asking about",
    "start": "1108780",
    "end": "1114440"
  },
  {
    "text": "[Music]",
    "start": "1118460",
    "end": "1121549"
  },
  {
    "text": "yeah can I jump on it so let me just repeat the question what about something",
    "start": "1127220",
    "end": "1132660"
  },
  {
    "text": "that's very long-running so you have some like scheduled cron job that happens monthly another example I would",
    "start": "1132660",
    "end": "1139140"
  },
  {
    "text": "give is like rather than a checkout like where I'm like Boop I'm going to",
    "start": "1139140",
    "end": "1144270"
  },
  {
    "text": "purchase this item what about the whole shopping cart experience where you're browsing around and picking things and",
    "start": "1144270",
    "end": "1149520"
  },
  {
    "text": "you want to see all of that in a single graph yeah I was gonna say the the challenge of tracing in general it's",
    "start": "1149520",
    "end": "1158610"
  },
  {
    "start": "1151000",
    "end": "1319000"
  },
  {
    "text": "being met kind of in order of greatest need and I think that tracing",
    "start": "1158610",
    "end": "1163950"
  },
  {
    "text": "latency-sensitive workloads has been such a priority that the sort of thing you're describing has been getting short",
    "start": "1163950",
    "end": "1170670"
  },
  {
    "text": "shrift that's my honest opinion there's two questions really there's modeling",
    "start": "1170670",
    "end": "1175740"
  },
  {
    "text": "that type of transaction you're describing and there's a problem there and then actually using tools that were designed to analyze and visualize those",
    "start": "1175740",
    "end": "1182970"
  },
  {
    "text": "transactions I'm unaware of a system that's out there right now that you can use that works well for transactions",
    "start": "1182970",
    "end": "1189900"
  },
  {
    "text": "that take like 100 milliseconds and transactions that take multiple days I've there's this guy Demetrius who's",
    "start": "1189900",
    "end": "1195360"
  },
  {
    "text": "involved it's open tracing who works at Bloomberg Bloomberg and they have some workloads like the ones you're",
    "start": "1195360",
    "end": "1201240"
  },
  {
    "text": "describing where they do a lot of computation over the course of many hours there's also some people at she Grail it's like",
    "start": "1201240",
    "end": "1207919"
  },
  {
    "text": "they're trying to cure cancer or some other insignificant task like that but",
    "start": "1207919",
    "end": "1212940"
  },
  {
    "text": "they're doing analysis of human genomes it's this intensely complicated multi-hour MapReduce and similarly like",
    "start": "1212940",
    "end": "1220440"
  },
  {
    "text": "they have these traces they want to generate and they had to write their own it analytical tools the thing that that",
    "start": "1220440",
    "end": "1225539"
  },
  {
    "text": "I do like about the open tracing approach this is that Ted is correct in",
    "start": "1225539",
    "end": "1230850"
  },
  {
    "text": "that we have like a follows from relationship but we also have the idea of multiple parents has the other thing",
    "start": "1230850",
    "end": "1236010"
  },
  {
    "text": "that comes up in asynchronous workloads you often have Forks and joins and the data and if you have many different",
    "start": "1236010",
    "end": "1242970"
  },
  {
    "text": "pieces of data that are all colliding into one joined thing you can model that well and open tracing the irony is that",
    "start": "1242970",
    "end": "1248789"
  },
  {
    "text": "you can go and use any open tracing off-the-shelf thing and none of them properly visualize that you know and so",
    "start": "1248789",
    "end": "1255870"
  },
  {
    "text": "I think there's a question of how you model it in the code I think open tracing actually does that quite well unfortunately I can't tell you and then",
    "start": "1255870",
    "end": "1261870"
  },
  {
    "text": "you should use this tool that binds to open tracing to analyze the data the only thing I can tell you is what I told the people at Grail which is what",
    "start": "1261870",
    "end": "1267630"
  },
  {
    "text": "they're doing already which is to write your own system to visualize the thing hopefully you open-source it and then",
    "start": "1267630",
    "end": "1273000"
  },
  {
    "text": "other people can use it as well because I think the task of analyzing long-running MapReduce jobs and things",
    "start": "1273000",
    "end": "1278100"
  },
  {
    "text": "like that it's a different problem even if the the instrumentation is the same yeah I don't know if that's helpful of it",
    "start": "1278100",
    "end": "1285169"
  },
  {
    "start": "1319000",
    "end": "1599000"
  },
  {
    "text": "well first so first the question is if you're if you're doing distributed",
    "start": "1319090",
    "end": "1326450"
  },
  {
    "text": "logging right let's say you're like I'm not calling it tracing I'm just logging because I'm using a logging system sure",
    "start": "1326450",
    "end": "1335030"
  },
  {
    "text": "ah",
    "start": "1335030",
    "end": "1337180"
  },
  {
    "text": "so the question is if tracing isn't just about logging you know what is it about and I would say my own personal opinion",
    "start": "1341270",
    "end": "1347930"
  },
  {
    "text": "and this is weirdly contentious is tracing is just logging tracing is logging in a world where you need some",
    "start": "1347930",
    "end": "1354800"
  },
  {
    "text": "kind of index like this X Trace ID header that you're propagating in order",
    "start": "1354800",
    "end": "1360800"
  },
  {
    "text": "to get your logs into a logging system that's then indexing them based on that",
    "start": "1360800",
    "end": "1366380"
  },
  {
    "text": "header so that you can look them up again later right so you're tracing right now you're tracing and where I",
    "start": "1366380",
    "end": "1372350"
  },
  {
    "text": "would say open tracing comes into play is right now you're probably having to write you know some glue code yourself",
    "start": "1372350",
    "end": "1379550"
  },
  {
    "text": "to actually shove that header you know that request ID both in and out of your",
    "start": "1379550",
    "end": "1385460"
  },
  {
    "text": "HTTP headers and then you have this sort of passed the baton where like through your code you need to somehow keep track",
    "start": "1385460",
    "end": "1392090"
  },
  {
    "text": "of that ID somewhere somehow and just doing that sort of in-house on your own",
    "start": "1392090",
    "end": "1398030"
  },
  {
    "text": "you end up writing some code to deal with that and all open tracing is is a sort of standardized way of doing that",
    "start": "1398030",
    "end": "1404840"
  },
  {
    "text": "so rather than having to do all of that yourself or come up with those solutions you could use the open tracing API",
    "start": "1404840",
    "end": "1413290"
  },
  {
    "text": "because basically you could take your system start writing open tracing code",
    "start": "1413290",
    "end": "1418340"
  },
  {
    "text": "and have that take exactly what you're doing as the backend for open tracing no",
    "start": "1418340",
    "end": "1424610"
  },
  {
    "text": "disagreement disagree no I I don't I would say that not all",
    "start": "1424610",
    "end": "1430010"
  },
  {
    "text": "tracing is logging or sorry there's there's some distinctions here tracing typically has some notion of",
    "start": "1430010",
    "end": "1438440"
  },
  {
    "text": "causal information as well so you know which log line cause which log line if that makes sense that's these references which are",
    "start": "1438440",
    "end": "1444560"
  },
  {
    "text": "usually not in a in a distributed logging system and that's pretty important in that if you have a transaction in a",
    "start": "1444560",
    "end": "1451450"
  },
  {
    "text": "microservices architecture it will typically involve a lot of concurrency and so if you just have a correlation ID",
    "start": "1451450",
    "end": "1457000"
  },
  {
    "text": "in the log it's really difficult to figure out if you just chronologically order all the statements it's hard to",
    "start": "1457000",
    "end": "1462879"
  },
  {
    "text": "figure out which ones are actually on the critical path of the transaction which is the thing that's holding up the end user and a tracing system because it",
    "start": "1462879",
    "end": "1469179"
  },
  {
    "text": "has the information about what caused what will allow you to focus just on the part of the system that's actually",
    "start": "1469179",
    "end": "1474730"
  },
  {
    "text": "slowing down the end user so the causal information is important you could certainly put that in your logs as well but then you'd have to go and and",
    "start": "1474730",
    "end": "1481210"
  },
  {
    "text": "reconstruct destroy yourself the other thing that tracing systems typically involve some form of sampling the amount",
    "start": "1481210",
    "end": "1486639"
  },
  {
    "text": "of data that's generated at scale by a detailed logging system is sometimes a",
    "start": "1486639",
    "end": "1492549"
  },
  {
    "text": "little overwhelming at least from an ROI standpoint and then the last thing I was going to say is related yeah related to",
    "start": "1492549",
    "end": "1503919"
  },
  {
    "text": "this why would you migrate if you're not going to write any more code you probably shouldn't seriously",
    "start": "1503919",
    "end": "1510639"
  },
  {
    "text": "but and and so I think so what's the",
    "start": "1510639",
    "end": "1528370"
  },
  {
    "text": "what's the best way to migrate if you were going to migrate that sort of thing",
    "start": "1528370",
    "end": "1533100"
  },
  {
    "text": "instead of what you're doing already you mean I I think Ted sort of spoke to that but it's just the advantage of using",
    "start": "1535679",
    "end": "1542230"
  },
  {
    "text": "open tracing is that there's like hundreds of projects that already support it and so if your developers",
    "start": "1542230",
    "end": "1548019"
  },
  {
    "text": "depend on those projects they don't need to instrument those by hand that's it and honestly that that may not be enough",
    "start": "1548019",
    "end": "1553509"
  },
  {
    "text": "of a value proposition maybe you shouldn't I'm serious but but if if it's beneficial to have that integration",
    "start": "1553509",
    "end": "1558580"
  },
  {
    "text": "there already that's great and then also if down the line you decide to send the data somewhere else or to multiple",
    "start": "1558580",
    "end": "1563590"
  },
  {
    "text": "places that's a nice multiplexer and you know there could depending how you factored your code you might have",
    "start": "1563590",
    "end": "1568990"
  },
  {
    "text": "already accomplished that and I'm not suggesting you didn't but if that's if that's an advantage that that might be",
    "start": "1568990",
    "end": "1574570"
  },
  {
    "text": "compelling as well but it's ok to you know and that's it I don't think open tracing should be used by everyone for all things I think it makes sense if",
    "start": "1574570",
    "end": "1580990"
  },
  {
    "text": "you're trying to decouple you instrumentation from where it gets sent and for greenfield stuff I think it",
    "start": "1580990",
    "end": "1586749"
  },
  {
    "text": "makes a ton of sense but if you already have a correlation ID and you're not planning on adding a lot more to the application in the future and it's just",
    "start": "1586749",
    "end": "1591909"
  },
  {
    "text": "in maintenance mode it really might not be worth it it wasn't a rhetorical question I it's it's a it's reasonable to keep it where it is if you're not",
    "start": "1591909",
    "end": "1597789"
  },
  {
    "text": "going to add a lot of code to it yes and I want to just just add two little writers onto that one is just to put it",
    "start": "1597789",
    "end": "1605769"
  },
  {
    "start": "1599000",
    "end": "1800000"
  },
  {
    "text": "in concrete terms you have one ID which is the trace ID so you have X trace ID if you wanted to turn this more into",
    "start": "1605769",
    "end": "1612669"
  },
  {
    "text": "tracing you would be adding an additional ID that would be you know X span ID right and that span ID would be",
    "start": "1612669",
    "end": "1621460"
  },
  {
    "text": "the thing that would be changing with each operation along with a reference type you know to say so that you can",
    "start": "1621460",
    "end": "1628239"
  },
  {
    "text": "figure out this is one stack and this is another stack trace and this is another stack trace and the other thing I would",
    "start": "1628239",
    "end": "1635080"
  },
  {
    "text": "say is you were saying for my application code why should I change I'm using Cabana and it's fine but if you",
    "start": "1635080",
    "end": "1641440"
  },
  {
    "text": "take some part of that application code and turn it into a library and you want to hand it to somebody else and when",
    "start": "1641440",
    "end": "1646809"
  },
  {
    "text": "they plug it into their system it automatically binds to any kind of monitoring they might be running then",
    "start": "1646809",
    "end": "1652989"
  },
  {
    "text": "you can't just put cabana directly into there right because you'd be making a decision that your library only uses",
    "start": "1652989",
    "end": "1659349"
  },
  {
    "text": "Cabana and rather than saying that you'd like to say hey my library just omits event data it will if it's a RPC library",
    "start": "1659349",
    "end": "1667929"
  },
  {
    "text": "it will inject and extract these correlation IDs whether it's X rays ID or something else it doesn't matter and",
    "start": "1667929",
    "end": "1674379"
  },
  {
    "text": "then other people can use it so if they're not using Cabana or using that particular header they can still use",
    "start": "1674379",
    "end": "1680169"
  },
  {
    "text": "your library without having to write that code all over again yeah",
    "start": "1680169",
    "end": "1686519"
  },
  {
    "text": "any more questions there's one back there sorry how do we handle time",
    "start": "1686519",
    "end": "1696700"
  },
  {
    "text": "you mean like clock skew and things of that nature",
    "start": "1696700",
    "end": "1701279"
  },
  {
    "text": "yeah so open tracing as an",
    "start": "1710629",
    "end": "1715830"
  },
  {
    "text": "instrumentation project gets to avoid this issue because the instrumentation is the same you say I'm starting this",
    "start": "1715830",
    "end": "1721590"
  },
  {
    "text": "I'm stopping this the implementation has a real pickle on its hands I mean I know from our work at light step it's one",
    "start": "1721590",
    "end": "1728070"
  },
  {
    "text": "thing on the server side but when you do tracing across mobile clients where those clocks are off by a couple of",
    "start": "1728070",
    "end": "1733590"
  },
  {
    "text": "seconds and the network latency is so high you can't run something like ntp it's pretty painful that one nice thing",
    "start": "1733590",
    "end": "1739649"
  },
  {
    "text": "about tracing is that you do have some well-defined ordering events so you know that if you have a child of relationship",
    "start": "1739649",
    "end": "1746339"
  },
  {
    "text": "here what kind of saying earlier you can use the invariants expressed in the data model to say that the child start time",
    "start": "1746339",
    "end": "1752849"
  },
  {
    "text": "has to be after the parents start time and the child's finish time has to be before the parents finish time and if",
    "start": "1752849",
    "end": "1758399"
  },
  {
    "text": "you apply those across the trace you can start to line up timestamps but I don't know of a very satisfying answer the",
    "start": "1758399",
    "end": "1765389"
  },
  {
    "text": "spanner paper goes into some detail about trying to reify uncertainty in clocks and blah-blah-blah-blah-blah",
    "start": "1765389",
    "end": "1770789"
  },
  {
    "text": "and I mean at some point it all just falls apart though if your clocks if your network latency czar too large",
    "start": "1770789",
    "end": "1776009"
  },
  {
    "text": "there's really I don't know of a really satisfying answer to the time synchronization problem for tracing",
    "start": "1776009",
    "end": "1781139"
  },
  {
    "text": "implementations yeah I mean yeah so the Lamport clock type of type of approaches",
    "start": "1781139",
    "end": "1788099"
  },
  {
    "text": "is the the kind of thing I was getting at with what's the word not exposing I'm",
    "start": "1788099",
    "end": "1793679"
  },
  {
    "text": "exploiting the invariance in the data model yeah but it's it's really pernicious problem that's a good",
    "start": "1793679",
    "end": "1799739"
  },
  {
    "text": "question but but yeah and just to re-emphasize one reason why it doesn't",
    "start": "1799739",
    "end": "1804899"
  },
  {
    "start": "1800000",
    "end": "2012000"
  },
  {
    "text": "matter as much as you're not using time or clocks to order these you know trace",
    "start": "1804899",
    "end": "1811379"
  },
  {
    "text": "events you're using a graph so you're connecting them into a graph so even if",
    "start": "1811379",
    "end": "1816419"
  },
  {
    "text": "the clocks are skewing you still know what led to what led to what because the time doesn't matter",
    "start": "1816419",
    "end": "1821849"
  },
  {
    "text": "and then when if you're doing latency analysis assuming your clock isn't skewing between when you started the",
    "start": "1821849",
    "end": "1828509"
  },
  {
    "text": "span locally and ending it which does sometimes happen but it's very rare but assuming that your clock internally",
    "start": "1828509",
    "end": "1834059"
  },
  {
    "text": "within each process is somewhat accurate you can still get that latency information out for Spann even if the clocks are skewed",
    "start": "1834059",
    "end": "1841590"
  },
  {
    "text": "across across your clients in your server there's a question there yes so",
    "start": "1841590",
    "end": "1866880"
  },
  {
    "text": "the question is how are errors and exceptions handled in open tracing and",
    "start": "1866880",
    "end": "1872610"
  },
  {
    "text": "tracing and I would say the answer there is is tagging so on each span you can",
    "start": "1872610",
    "end": "1879059"
  },
  {
    "text": "set tags and some of those tags are used for indexing other tags are used to adds",
    "start": "1879059",
    "end": "1885510"
  },
  {
    "text": "like semantic information to your span and the most common one is called the error tag so there's a set of error",
    "start": "1885510",
    "end": "1891600"
  },
  {
    "text": "values and there's also yeah there's sort of a span can be in an error State which is well defined as also the",
    "start": "1891600",
    "end": "1897510"
  },
  {
    "text": "specification has a particular way of representing exceptions and stack traces",
    "start": "1897510",
    "end": "1903210"
  },
  {
    "text": "and things like that in the in the each span has a list of time-stamped events",
    "start": "1903210",
    "end": "1909720"
  },
  {
    "text": "which are called logs which may be confusing sorry but there's yeah this is the span level air and then below",
    "start": "1909720",
    "end": "1915240"
  },
  {
    "text": "there's another specification for for the stack trace type information right so here's an example of like what we're",
    "start": "1915240",
    "end": "1922740"
  },
  {
    "text": "trying to say is if you have an error here are some some standard tag names so",
    "start": "1922740",
    "end": "1928919"
  },
  {
    "text": "that when you're looking in these tracing systems they're they're expecting these these particular identifiers to be there so if you see a",
    "start": "1928919",
    "end": "1935880"
  },
  {
    "text": "tag that's named error and it's a boolean value that system knows that means this this ban had a logical error",
    "start": "1935880",
    "end": "1944210"
  },
  {
    "text": "yeah sure",
    "start": "1945679",
    "end": "1948860"
  },
  {
    "text": "so the question is is is the open tracing project also involved in storage",
    "start": "1955870",
    "end": "1961100"
  },
  {
    "text": "or any kind of back-end solutions and so I would say very emphatically no the the",
    "start": "1961100",
    "end": "1966500"
  },
  {
    "text": "purpose of the project is to have an abstracted API that makes no decisions about what you might do with the data it",
    "start": "1966500",
    "end": "1972980"
  },
  {
    "text": "doesn't make any decisions about where you would put it how you would export it and that's very intentional to allow you",
    "start": "1972980",
    "end": "1980450"
  },
  {
    "text": "to pick your own back-end yes the talk I",
    "start": "1980450",
    "end": "1986030"
  },
  {
    "text": "gave on whatever it was the first day of this conference what was that Wednesday",
    "start": "1986030",
    "end": "1992090"
  },
  {
    "text": "I have no idea what things I know what yours is in 17 anyway they're talking give other day was about this topic in",
    "start": "1992090",
    "end": "1999920"
  },
  {
    "text": "the scope of the project but I can say with some confidence open tracing will never build like an analytical like tool",
    "start": "1999920",
    "end": "2007690"
  },
  {
    "text": "that would store the data because we think it's really important to keep the project scope as narrow as possible yeah",
    "start": "2007690",
    "end": "2013630"
  },
  {
    "start": "2012000",
    "end": "2146000"
  },
  {
    "text": "the the big ass that we're asking for an open tracing if you get involved is to",
    "start": "2013630",
    "end": "2018730"
  },
  {
    "text": "consider as the API stabilized if you're making open source libraries rather than having people include the the open",
    "start": "2018730",
    "end": "2026410"
  },
  {
    "text": "tracing API calls as a plug-in you just make it directly into the library so Couchbase for example is a database and",
    "start": "2026410",
    "end": "2033360"
  },
  {
    "text": "their Java SDK now comes with open tracing baked in and along with that",
    "start": "2033360",
    "end": "2038800"
  },
  {
    "text": "they've also shipped a playbook so they're like here's all the event data that comes out of our client here's what",
    "start": "2038800",
    "end": "2044800"
  },
  {
    "text": "it means so if you're seeing like retries or timeouts or if you see you know this event point this is what you",
    "start": "2044800",
    "end": "2051370"
  },
  {
    "text": "should do this is how you should tune this thing so that that's actually the main focus of the project is to enable",
    "start": "2051370",
    "end": "2057190"
  },
  {
    "text": "that because that's the thing if you go write these libraries right now that's like really hard to give people that you",
    "start": "2057190",
    "end": "2062230"
  },
  {
    "text": "end up having to come up with some made-up event thing and some hooks for them to figure out how they're gonna put",
    "start": "2062230",
    "end": "2067720"
  },
  {
    "text": "it into their system definitely have time for one more question yeah I think we're at the end right ok one last one",
    "start": "2067720",
    "end": "2075540"
  },
  {
    "text": "[Music]",
    "start": "2080469",
    "end": "2089620"
  },
  {
    "text": "I've had some conversations with some of the people in the lambda team and there is some implementation concerns with",
    "start": "2089620",
    "end": "2096620"
  },
  {
    "text": "doing tracing in an environment where you aren't allowed to retain state from call to call cause you have to flush",
    "start": "2096620",
    "end": "2101690"
  },
  {
    "text": "with every single call which are kind of annoying but nothing for family difficult about it the open tracing",
    "start": "2101690",
    "end": "2106820"
  },
  {
    "text": "piece is not so bad it's actually the implementation of the tracing system x-ray is probably the only thing that",
    "start": "2106820",
    "end": "2111860"
  },
  {
    "text": "has a good shot at it and lambda because they can cheat but I'm I've asked them with my you know nicest most polite",
    "start": "2111860",
    "end": "2119540"
  },
  {
    "text": "voice to please please PLEASE expose hooks to make that kind of thing easier to implement efficiently and I don't believe that's happened yet I think the",
    "start": "2119540",
    "end": "2125390"
  },
  {
    "text": "open source server list frameworks hopefully will be more forthcoming about that and I think we're out of time",
    "start": "2125390",
    "end": "2131450"
  },
  {
    "text": "if you have any further questions as a community we all hang out on git er and so you can come find us get er I am",
    "start": "2131450",
    "end": "2139340"
  },
  {
    "text": "slash open tracing and we hope to see you there have a good one or ask questions after this thank you",
    "start": "2139340",
    "end": "2144880"
  },
  {
    "text": "[Applause]",
    "start": "2144880",
    "end": "2148558"
  }
]