[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "hello kubecon welcome",
    "start": "640",
    "end": "3040"
  },
  {
    "text": "to our session i'm alexander kaninsky",
    "start": "3040",
    "end": "5680"
  },
  {
    "text": "i'm cloud software architect",
    "start": "5680",
    "end": "7359"
  },
  {
    "text": "working for intel and today with my",
    "start": "7359",
    "end": "10400"
  },
  {
    "text": "colleague",
    "start": "10400",
    "end": "11120"
  },
  {
    "text": "we are going to talk about something",
    "start": "11120",
    "end": "12719"
  },
  {
    "text": "interesting in the run times track",
    "start": "12719",
    "end": "16320"
  },
  {
    "text": "hello cubecon my name is christian litke",
    "start": "16320",
    "end": "19359"
  },
  {
    "text": "i work for intel finland as a linux and",
    "start": "19359",
    "end": "21840"
  },
  {
    "text": "cloud software engineer",
    "start": "21840",
    "end": "24320"
  },
  {
    "text": "maximizing workloads performance with",
    "start": "24320",
    "end": "26320"
  },
  {
    "text": "smarter runtimes",
    "start": "26320",
    "end": "28640"
  },
  {
    "text": "we will take a look at performance",
    "start": "28640",
    "end": "30480"
  },
  {
    "text": "optimization how kubernetes models",
    "start": "30480",
    "end": "33040"
  },
  {
    "text": "hardware",
    "start": "33040",
    "end": "34079"
  },
  {
    "text": "detour into hardware domains and then",
    "start": "34079",
    "end": "36480"
  },
  {
    "text": "talk about smart runtimes",
    "start": "36480",
    "end": "38320"
  },
  {
    "start": "38000",
    "end": "143000"
  },
  {
    "text": "so let me first start with achieving my",
    "start": "38320",
    "end": "40879"
  },
  {
    "text": "performance optimization",
    "start": "40879",
    "end": "42800"
  },
  {
    "text": "comes down to a very known problem of",
    "start": "42800",
    "end": "45600"
  },
  {
    "text": "noisy neighbors",
    "start": "45600",
    "end": "47200"
  },
  {
    "text": "we all have dozens of hundreds of",
    "start": "47200",
    "end": "49520"
  },
  {
    "text": "workloads running now and",
    "start": "49520",
    "end": "52079"
  },
  {
    "text": "and all of those workloads they have a",
    "start": "52079",
    "end": "54399"
  },
  {
    "text": "different characteristics",
    "start": "54399",
    "end": "55760"
  },
  {
    "text": "different life cycles and so on",
    "start": "55760",
    "end": "59120"
  },
  {
    "text": "so one thing which i want to say in the",
    "start": "59120",
    "end": "61520"
  },
  {
    "text": "very beginning",
    "start": "61520",
    "end": "62480"
  },
  {
    "text": "the silver moon doesn't exist even",
    "start": "62480",
    "end": "64799"
  },
  {
    "text": "though if you have some good algorithms",
    "start": "64799",
    "end": "66880"
  },
  {
    "text": "to",
    "start": "66880",
    "end": "67920"
  },
  {
    "text": "optimize one set of workloads most",
    "start": "67920",
    "end": "70400"
  },
  {
    "text": "probably for",
    "start": "70400",
    "end": "71200"
  },
  {
    "text": "ourselves it will have differences and",
    "start": "71200",
    "end": "74159"
  },
  {
    "text": "the reason for that is what",
    "start": "74159",
    "end": "76560"
  },
  {
    "text": "like we all have differences in the cpus",
    "start": "76560",
    "end": "79600"
  },
  {
    "text": "caches memory and our hardware resources",
    "start": "79600",
    "end": "83200"
  },
  {
    "text": "when usage of patterns of those",
    "start": "83200",
    "end": "85439"
  },
  {
    "text": "resources also differs",
    "start": "85439",
    "end": "87680"
  },
  {
    "text": "what is important is what you need to",
    "start": "87680",
    "end": "90880"
  },
  {
    "text": "understand",
    "start": "90880",
    "end": "91759"
  },
  {
    "text": "how those resources are used how you can",
    "start": "91759",
    "end": "94479"
  },
  {
    "text": "measure them",
    "start": "94479",
    "end": "95200"
  },
  {
    "text": "and how you can react in those events of",
    "start": "95200",
    "end": "98479"
  },
  {
    "text": "the life cycle of those workloads",
    "start": "98479",
    "end": "101439"
  },
  {
    "text": "today in our scope is just a container",
    "start": "101439",
    "end": "104720"
  },
  {
    "text": "runtimes",
    "start": "104720",
    "end": "105600"
  },
  {
    "text": "dryer container b and some interfaces",
    "start": "105600",
    "end": "108399"
  },
  {
    "text": "waters",
    "start": "108399",
    "end": "108960"
  },
  {
    "text": "connecting roads pieces together and",
    "start": "108960",
    "end": "111759"
  },
  {
    "text": "even though",
    "start": "111759",
    "end": "113360"
  },
  {
    "text": "here i'm talking about theory of things",
    "start": "113360",
    "end": "117119"
  },
  {
    "text": "we we have a project which is called cri",
    "start": "117119",
    "end": "121119"
  },
  {
    "text": "resource manager",
    "start": "121119",
    "end": "122159"
  },
  {
    "text": "where we validated most of our materials",
    "start": "122159",
    "end": "125680"
  },
  {
    "text": "theories and we have practical examples",
    "start": "125680",
    "end": "129440"
  },
  {
    "text": "of what can be achieved by extending the",
    "start": "129440",
    "end": "133200"
  },
  {
    "text": "runtimes",
    "start": "133200",
    "end": "135200"
  },
  {
    "text": "but let's talk about",
    "start": "135200",
    "end": "138560"
  },
  {
    "text": "how the resources are recognized how we",
    "start": "138560",
    "end": "140959"
  },
  {
    "text": "can",
    "start": "140959",
    "end": "142400"
  },
  {
    "text": "look at them in our kubernetes world",
    "start": "142400",
    "end": "146480"
  },
  {
    "text": "where pristine and vanilla installation",
    "start": "146480",
    "end": "150080"
  },
  {
    "text": "of",
    "start": "150080",
    "end": "150480"
  },
  {
    "text": "kubernetes you have a very simplified",
    "start": "150480",
    "end": "153040"
  },
  {
    "text": "model of resources",
    "start": "153040",
    "end": "154879"
  },
  {
    "text": "everything is one big share pool",
    "start": "154879",
    "end": "158480"
  },
  {
    "text": "every cpu is record every memory region",
    "start": "158480",
    "end": "161840"
  },
  {
    "text": "is again one big shared set of resources",
    "start": "161840",
    "end": "166400"
  },
  {
    "text": "and obviously in this setup you are not",
    "start": "166400",
    "end": "169840"
  },
  {
    "text": "able to provide too much of your",
    "start": "169840",
    "end": "172239"
  },
  {
    "text": "controls",
    "start": "172239",
    "end": "173440"
  },
  {
    "text": "you have some priorities but that's it",
    "start": "173440",
    "end": "176560"
  },
  {
    "text": "to fully embrace our control we need to",
    "start": "176560",
    "end": "179360"
  },
  {
    "text": "start",
    "start": "179360",
    "end": "180080"
  },
  {
    "text": "dividing those resources into a smaller",
    "start": "180080",
    "end": "182159"
  },
  {
    "text": "challenge",
    "start": "182159",
    "end": "183120"
  },
  {
    "text": "so we can when you can measure and",
    "start": "183120",
    "end": "185120"
  },
  {
    "text": "control one",
    "start": "185120",
    "end": "187200"
  },
  {
    "text": "and when people are thinking about the",
    "start": "187200",
    "end": "189200"
  },
  {
    "text": "divisions of",
    "start": "189200",
    "end": "190800"
  },
  {
    "text": "standard computer resources where you",
    "start": "190800",
    "end": "192720"
  },
  {
    "text": "immediately came to the idea of",
    "start": "192720",
    "end": "194720"
  },
  {
    "text": "no one and this current",
    "start": "194720",
    "end": "198480"
  },
  {
    "text": "implementation of aluminum kubernetes",
    "start": "198480",
    "end": "200959"
  },
  {
    "text": "you still",
    "start": "200959",
    "end": "202239"
  },
  {
    "text": "have one big set of shared resources for",
    "start": "202239",
    "end": "205440"
  },
  {
    "text": "cpus",
    "start": "205440",
    "end": "206159"
  },
  {
    "text": "you still have one big shared set of",
    "start": "206159",
    "end": "208159"
  },
  {
    "text": "memory",
    "start": "208159",
    "end": "209360"
  },
  {
    "text": "uh regions you have possibility to do",
    "start": "209360",
    "end": "212400"
  },
  {
    "text": "some exclusive allocations but it's",
    "start": "212400",
    "end": "214799"
  },
  {
    "text": "still",
    "start": "214799",
    "end": "215440"
  },
  {
    "text": "limited and even if we look at the",
    "start": "215440",
    "end": "218720"
  },
  {
    "text": "newer development in white area you have",
    "start": "218720",
    "end": "222000"
  },
  {
    "text": "some improvements",
    "start": "222000",
    "end": "223360"
  },
  {
    "text": "you can select multiple memory regions",
    "start": "223360",
    "end": "226799"
  },
  {
    "text": "but still this memory regions will be",
    "start": "226799",
    "end": "229360"
  },
  {
    "text": "shared resource between the",
    "start": "229360",
    "end": "231599"
  },
  {
    "text": "exclusive and shared allocations of",
    "start": "231599",
    "end": "233920"
  },
  {
    "text": "workloads",
    "start": "233920",
    "end": "235840"
  },
  {
    "text": "so when we are talking about new one it",
    "start": "235840",
    "end": "238720"
  },
  {
    "text": "might be not",
    "start": "238720",
    "end": "239599"
  },
  {
    "text": "enough uh for a boundary",
    "start": "239599",
    "end": "243040"
  },
  {
    "text": "of division of resources on the system",
    "start": "243040",
    "end": "245360"
  },
  {
    "text": "and for reason for that we need to",
    "start": "245360",
    "end": "247680"
  },
  {
    "text": "look more deeper in the history of human",
    "start": "247680",
    "end": "250879"
  },
  {
    "text": "two decades ago we had a setup",
    "start": "250879",
    "end": "254080"
  },
  {
    "text": "of a system where you have multiple cpus",
    "start": "254080",
    "end": "257120"
  },
  {
    "text": "single memory controller you had a",
    "start": "257120",
    "end": "259280"
  },
  {
    "text": "memory bus",
    "start": "259280",
    "end": "260239"
  },
  {
    "text": "and when all of those cpus were",
    "start": "260239",
    "end": "262320"
  },
  {
    "text": "accessing globally",
    "start": "262320",
    "end": "264400"
  },
  {
    "text": "that was called unifor uniform memory",
    "start": "264400",
    "end": "266960"
  },
  {
    "text": "access",
    "start": "266960",
    "end": "268000"
  },
  {
    "text": "or symmetric multi-processing",
    "start": "268000",
    "end": "271440"
  },
  {
    "text": "however this setup was not really",
    "start": "271440",
    "end": "273919"
  },
  {
    "text": "scalable",
    "start": "273919",
    "end": "275600"
  },
  {
    "text": "and when the architecture evolved",
    "start": "275600",
    "end": "279600"
  },
  {
    "text": "to non-uniform memory access",
    "start": "279600",
    "end": "283520"
  },
  {
    "text": "what it means it means what you have",
    "start": "283520",
    "end": "285520"
  },
  {
    "text": "groups of course you have independent",
    "start": "285520",
    "end": "287520"
  },
  {
    "text": "memory controllers",
    "start": "287520",
    "end": "289040"
  },
  {
    "text": "you have independent set of memories and",
    "start": "289040",
    "end": "291280"
  },
  {
    "text": "you have interconnect between those",
    "start": "291280",
    "end": "293360"
  },
  {
    "text": "groups so each of this group is becoming",
    "start": "293360",
    "end": "296720"
  },
  {
    "text": "uh norma domain and you can have",
    "start": "296720",
    "end": "299600"
  },
  {
    "text": "multiple of those domains",
    "start": "299600",
    "end": "301680"
  },
  {
    "text": "and you can have multiple different",
    "start": "301680",
    "end": "303520"
  },
  {
    "text": "links between them not necessarily like",
    "start": "303520",
    "end": "305759"
  },
  {
    "text": "a full mesh interconnect",
    "start": "305759",
    "end": "307280"
  },
  {
    "text": "but uh different sizes different",
    "start": "307280",
    "end": "310160"
  },
  {
    "text": "connections",
    "start": "310160",
    "end": "311199"
  },
  {
    "text": "and that is really model or system",
    "start": "311199",
    "end": "313520"
  },
  {
    "text": "dependent",
    "start": "313520",
    "end": "314639"
  },
  {
    "text": "that's why this idea of non-new format",
    "start": "314639",
    "end": "317600"
  },
  {
    "text": "is coming from",
    "start": "317600",
    "end": "318639"
  },
  {
    "text": "and when you're optimizing we need to",
    "start": "318639",
    "end": "320960"
  },
  {
    "text": "understand",
    "start": "320960",
    "end": "323120"
  },
  {
    "text": "however access between the memory",
    "start": "323120",
    "end": "324880"
  },
  {
    "text": "regions is actually",
    "start": "324880",
    "end": "326880"
  },
  {
    "text": "affecting your performance",
    "start": "326880",
    "end": "329919"
  },
  {
    "text": "but even if we double click on your",
    "start": "329919",
    "end": "332960"
  },
  {
    "text": "memory",
    "start": "332960",
    "end": "334479"
  },
  {
    "text": "nowadays when memory became also",
    "start": "334479",
    "end": "336560"
  },
  {
    "text": "heterogeneous resource",
    "start": "336560",
    "end": "338240"
  },
  {
    "text": "we all know about a standard memory era",
    "start": "338240",
    "end": "341759"
  },
  {
    "text": "but when we have already",
    "start": "341759",
    "end": "344800"
  },
  {
    "text": "other types of memory for example obtain",
    "start": "344800",
    "end": "347440"
  },
  {
    "text": "persistent memory",
    "start": "347440",
    "end": "348960"
  },
  {
    "text": "it's still connected to the same memory",
    "start": "348960",
    "end": "350960"
  },
  {
    "text": "circuits it's still dim interface",
    "start": "350960",
    "end": "354000"
  },
  {
    "text": "however even though it's seen",
    "start": "354000",
    "end": "357039"
  },
  {
    "text": "as a normal system memory it has a bit",
    "start": "357039",
    "end": "359440"
  },
  {
    "text": "different performance characteristics",
    "start": "359440",
    "end": "362240"
  },
  {
    "text": "and to fully utilize it for applications",
    "start": "362240",
    "end": "365039"
  },
  {
    "text": "it would be good to",
    "start": "365039",
    "end": "367840"
  },
  {
    "text": "understand those differences but that's",
    "start": "368000",
    "end": "370639"
  },
  {
    "text": "not",
    "start": "370639",
    "end": "371280"
  },
  {
    "text": "our end of story",
    "start": "371280",
    "end": "374639"
  },
  {
    "text": "very soon we will have another bus which",
    "start": "374960",
    "end": "378160"
  },
  {
    "text": "is called compute express link",
    "start": "378160",
    "end": "380160"
  },
  {
    "text": "and one of the profiles for this bus is",
    "start": "380160",
    "end": "382880"
  },
  {
    "text": "a",
    "start": "382880",
    "end": "383199"
  },
  {
    "text": "memory extension and by memory it means",
    "start": "383199",
    "end": "386000"
  },
  {
    "text": "what",
    "start": "386000",
    "end": "386400"
  },
  {
    "text": "we're going to have a possibility to",
    "start": "386400",
    "end": "388639"
  },
  {
    "text": "attach additional memory",
    "start": "388639",
    "end": "390800"
  },
  {
    "text": "uh to the controllers not to the two",
    "start": "390800",
    "end": "392840"
  },
  {
    "text": "nodes",
    "start": "392840",
    "end": "394240"
  },
  {
    "text": "and that's not going to be like new",
    "start": "394240",
    "end": "396720"
  },
  {
    "text": "phone",
    "start": "396720",
    "end": "397520"
  },
  {
    "text": "type of memory you can have different",
    "start": "397520",
    "end": "399840"
  },
  {
    "text": "types of memory give us different",
    "start": "399840",
    "end": "401280"
  },
  {
    "text": "performance characteristics",
    "start": "401280",
    "end": "403280"
  },
  {
    "text": "this memory can be hot plugged and so on",
    "start": "403280",
    "end": "406960"
  },
  {
    "text": "so all of these different memory regions",
    "start": "406960",
    "end": "410319"
  },
  {
    "text": "will be seen in linux as a separate",
    "start": "410319",
    "end": "413919"
  },
  {
    "text": "newer memory nodes",
    "start": "413919",
    "end": "417360"
  },
  {
    "start": "418000",
    "end": "520000"
  },
  {
    "text": "so if we double click to",
    "start": "418319",
    "end": "421440"
  },
  {
    "text": "cpu box we can see what",
    "start": "421440",
    "end": "424960"
  },
  {
    "text": "like modern cpus have multiple physical",
    "start": "424960",
    "end": "428400"
  },
  {
    "text": "cores",
    "start": "428400",
    "end": "429120"
  },
  {
    "text": "why it might be different by the",
    "start": "429120",
    "end": "430319"
  },
  {
    "text": "frequencies but",
    "start": "430319",
    "end": "433039"
  },
  {
    "text": "it can be also our differences for",
    "start": "433120",
    "end": "435120"
  },
  {
    "text": "example with hyperturrets",
    "start": "435120",
    "end": "437199"
  },
  {
    "text": "so you can have multiple hyperterrors",
    "start": "437199",
    "end": "439599"
  },
  {
    "text": "per physical core",
    "start": "439599",
    "end": "441039"
  },
  {
    "text": "and those hyper threads are sharing",
    "start": "441039",
    "end": "444080"
  },
  {
    "text": "the same resource on the low level",
    "start": "444080",
    "end": "446319"
  },
  {
    "text": "meaning",
    "start": "446319",
    "end": "447199"
  },
  {
    "text": "one until two caches",
    "start": "447199",
    "end": "450319"
  },
  {
    "text": "so one of the division boundaries can be",
    "start": "450319",
    "end": "453520"
  },
  {
    "text": "also physical core versus uh",
    "start": "453520",
    "end": "457840"
  },
  {
    "text": "one one hypertron",
    "start": "457840",
    "end": "461039"
  },
  {
    "text": "we have alpha cash or last level cash",
    "start": "461840",
    "end": "465440"
  },
  {
    "text": "before you reach for memory",
    "start": "465440",
    "end": "467360"
  },
  {
    "text": "this already becomes a shared resource",
    "start": "467360",
    "end": "470240"
  },
  {
    "text": "between multiple cores within the same",
    "start": "470240",
    "end": "473120"
  },
  {
    "text": "socket or die and",
    "start": "473120",
    "end": "476879"
  },
  {
    "text": "architecture is not something what is",
    "start": "476879",
    "end": "480319"
  },
  {
    "text": "studied",
    "start": "480319",
    "end": "481759"
  },
  {
    "text": "uh the architecture of cpus are evolving",
    "start": "481759",
    "end": "485440"
  },
  {
    "text": "and in new versions for new generations",
    "start": "485440",
    "end": "488240"
  },
  {
    "text": "you might have an",
    "start": "488240",
    "end": "489280"
  },
  {
    "text": "absolutely different split of resources",
    "start": "489280",
    "end": "492479"
  },
  {
    "text": "like water score like what is the l3",
    "start": "492479",
    "end": "494560"
  },
  {
    "text": "cash domain and so on",
    "start": "494560",
    "end": "496560"
  },
  {
    "text": "and that actually also goes to even more",
    "start": "496560",
    "end": "501120"
  },
  {
    "text": "deeper separation of things so you can",
    "start": "501120",
    "end": "503759"
  },
  {
    "text": "have",
    "start": "503759",
    "end": "505520"
  },
  {
    "text": "the means splitted physically or",
    "start": "505520",
    "end": "507759"
  },
  {
    "text": "logically so for example you can have",
    "start": "507759",
    "end": "509520"
  },
  {
    "text": "multiple dice per one",
    "start": "509520",
    "end": "511199"
  },
  {
    "text": "physical package or you might have a",
    "start": "511199",
    "end": "514000"
  },
  {
    "text": "logical",
    "start": "514000",
    "end": "514880"
  },
  {
    "text": "pseudonumber clustering within one",
    "start": "514880",
    "end": "517518"
  },
  {
    "text": "physical package",
    "start": "517519",
    "end": "520640"
  },
  {
    "start": "520000",
    "end": "714000"
  },
  {
    "text": "so based on red we need to understand",
    "start": "520640",
    "end": "524159"
  },
  {
    "text": "what linux and actual hardware looks",
    "start": "524159",
    "end": "527200"
  },
  {
    "text": "like in terms of hierarchy",
    "start": "527200",
    "end": "529680"
  },
  {
    "text": "so you have physical components like",
    "start": "529680",
    "end": "533120"
  },
  {
    "text": "sockets or packages in linux terms",
    "start": "533120",
    "end": "537120"
  },
  {
    "text": "you have dies for multi-ship cpus",
    "start": "537120",
    "end": "540480"
  },
  {
    "text": "and then you have inside the cpu cores",
    "start": "540480",
    "end": "544320"
  },
  {
    "text": "and those cpu cores is practically can",
    "start": "544320",
    "end": "547680"
  },
  {
    "text": "be grouped",
    "start": "547680",
    "end": "548880"
  },
  {
    "text": "into same some pool or some",
    "start": "548880",
    "end": "552480"
  },
  {
    "text": "some zone of resources which contains",
    "start": "552480",
    "end": "556240"
  },
  {
    "text": "cpu caches memory io and so on",
    "start": "556240",
    "end": "560560"
  },
  {
    "text": "you have possibility to have inside this",
    "start": "560560",
    "end": "563839"
  },
  {
    "text": "small group",
    "start": "563839",
    "end": "565040"
  },
  {
    "text": "shared set of resources and exclusively",
    "start": "565040",
    "end": "568000"
  },
  {
    "text": "allocated set of resources",
    "start": "568000",
    "end": "571200"
  },
  {
    "text": "and when you can mount your workloads",
    "start": "571200",
    "end": "573440"
  },
  {
    "text": "into these small groups",
    "start": "573440",
    "end": "576480"
  },
  {
    "text": "my next problem or next question will be",
    "start": "576480",
    "end": "579040"
  },
  {
    "text": "of course like what if i have a workload",
    "start": "579040",
    "end": "581040"
  },
  {
    "text": "which is",
    "start": "581040",
    "end": "581760"
  },
  {
    "text": "bigger one with small group well you",
    "start": "581760",
    "end": "583839"
  },
  {
    "text": "still have",
    "start": "583839",
    "end": "585600"
  },
  {
    "text": "ability to",
    "start": "585600",
    "end": "588319"
  },
  {
    "text": "group on the higher level so you can",
    "start": "588640",
    "end": "590800"
  },
  {
    "text": "have a parent",
    "start": "590800",
    "end": "591839"
  },
  {
    "text": "nodes or parent virtual groups uh which",
    "start": "591839",
    "end": "595120"
  },
  {
    "text": "spawns across like multiple",
    "start": "595120",
    "end": "596880"
  },
  {
    "text": "dice into one socket and one you can",
    "start": "596880",
    "end": "599839"
  },
  {
    "text": "have a proper accounting for all of",
    "start": "599839",
    "end": "601839"
  },
  {
    "text": "those which is",
    "start": "601839",
    "end": "602560"
  },
  {
    "text": "practically like some of the resources",
    "start": "602560",
    "end": "604480"
  },
  {
    "text": "of all the child nodes",
    "start": "604480",
    "end": "607519"
  },
  {
    "text": "so to reiterate that when we are talking",
    "start": "607519",
    "end": "610640"
  },
  {
    "text": "about",
    "start": "610640",
    "end": "611120"
  },
  {
    "text": "resource zones where workloads about",
    "start": "611120",
    "end": "614399"
  },
  {
    "text": "it's good to have a good understanding",
    "start": "614399",
    "end": "616640"
  },
  {
    "text": "of what your physical",
    "start": "616640",
    "end": "618160"
  },
  {
    "text": "layout or system looks like and that",
    "start": "618160",
    "end": "620880"
  },
  {
    "text": "might be",
    "start": "620880",
    "end": "621519"
  },
  {
    "text": "a lot different based on generations",
    "start": "621519",
    "end": "625279"
  },
  {
    "text": "based on the vendors and so on",
    "start": "625279",
    "end": "627519"
  },
  {
    "text": "because in different generations you",
    "start": "627519",
    "end": "629760"
  },
  {
    "text": "have differences in how memory series",
    "start": "629760",
    "end": "631920"
  },
  {
    "text": "are being",
    "start": "631920",
    "end": "632720"
  },
  {
    "text": "organized and how what caches are",
    "start": "632720",
    "end": "635040"
  },
  {
    "text": "divided how",
    "start": "635040",
    "end": "636399"
  },
  {
    "text": "io buses are connected you can have",
    "start": "636399",
    "end": "639680"
  },
  {
    "text": "different types of memory even though we",
    "start": "639680",
    "end": "642480"
  },
  {
    "text": "will be connected",
    "start": "642480",
    "end": "643519"
  },
  {
    "text": "to the same memory controller for linux",
    "start": "643519",
    "end": "647279"
  },
  {
    "text": "it will be visible",
    "start": "647279",
    "end": "648320"
  },
  {
    "text": "as separate numbers but what we actually",
    "start": "648320",
    "end": "651760"
  },
  {
    "text": "want to",
    "start": "651760",
    "end": "652399"
  },
  {
    "text": "understand as well how will separate",
    "start": "652399",
    "end": "655600"
  },
  {
    "text": "reported by the linux controller by the",
    "start": "655600",
    "end": "658560"
  },
  {
    "text": "linux kernel",
    "start": "658560",
    "end": "660000"
  },
  {
    "text": "numa numbers can be grouped into one",
    "start": "660000",
    "end": "662399"
  },
  {
    "text": "logical",
    "start": "662399",
    "end": "663440"
  },
  {
    "text": "and usable resource zone we have",
    "start": "663440",
    "end": "666560"
  },
  {
    "text": "possibility",
    "start": "666560",
    "end": "667519"
  },
  {
    "text": "at a moment to say which zone can be",
    "start": "667519",
    "end": "670000"
  },
  {
    "text": "used but",
    "start": "670000",
    "end": "670800"
  },
  {
    "text": "what we don't have and this is something",
    "start": "670800",
    "end": "673200"
  },
  {
    "text": "what i hope will be improved in the next",
    "start": "673200",
    "end": "675440"
  },
  {
    "text": "years of the linux",
    "start": "675440",
    "end": "676959"
  },
  {
    "text": "is the ability to control",
    "start": "676959",
    "end": "680320"
  },
  {
    "text": "how much memory or how much of our",
    "start": "680320",
    "end": "683360"
  },
  {
    "text": "resources can be used",
    "start": "683360",
    "end": "684640"
  },
  {
    "text": "per zone for application and when we",
    "start": "684640",
    "end": "688320"
  },
  {
    "text": "have",
    "start": "688320",
    "end": "688720"
  },
  {
    "text": "even more harder tasks to understand and",
    "start": "688720",
    "end": "691440"
  },
  {
    "text": "fix",
    "start": "691440",
    "end": "692160"
  },
  {
    "text": "is how to understand where lower details",
    "start": "692160",
    "end": "696079"
  },
  {
    "text": "of a workload for example the working",
    "start": "696079",
    "end": "698320"
  },
  {
    "text": "set size",
    "start": "698320",
    "end": "699519"
  },
  {
    "text": "to have a good split of understanding",
    "start": "699519",
    "end": "702720"
  },
  {
    "text": "what is where what size of a memory",
    "start": "702720",
    "end": "706320"
  },
  {
    "text": "used by application versions were called",
    "start": "706320",
    "end": "708640"
  },
  {
    "text": "area of",
    "start": "708640",
    "end": "709680"
  },
  {
    "text": "for pages to use by application",
    "start": "709680",
    "end": "713279"
  },
  {
    "text": "so going first",
    "start": "713920",
    "end": "717440"
  },
  {
    "start": "714000",
    "end": "833000"
  },
  {
    "text": "we have caches we can at one moment",
    "start": "717440",
    "end": "721120"
  },
  {
    "text": "split one we can assign workloads to the",
    "start": "721120",
    "end": "724959"
  },
  {
    "text": "caches",
    "start": "724959",
    "end": "725920"
  },
  {
    "text": "however we have a problem",
    "start": "725920",
    "end": "728959"
  },
  {
    "text": "where first of all the amount of",
    "start": "728959",
    "end": "732720"
  },
  {
    "text": "cash classes is limited so you can't",
    "start": "732720",
    "end": "735600"
  },
  {
    "text": "assign",
    "start": "735600",
    "end": "736160"
  },
  {
    "text": "each of your container to separate plus",
    "start": "736160",
    "end": "738800"
  },
  {
    "text": "second",
    "start": "738800",
    "end": "740000"
  },
  {
    "text": "the configuration of the caches is",
    "start": "740000",
    "end": "743440"
  },
  {
    "text": "something what is really hardwired",
    "start": "743440",
    "end": "746639"
  },
  {
    "text": "we need to come up with a good",
    "start": "746639",
    "end": "748000"
  },
  {
    "text": "abstraction and we think",
    "start": "748000",
    "end": "750160"
  },
  {
    "text": "what class is one for good abstractions",
    "start": "750160",
    "end": "753200"
  },
  {
    "text": "what we can use in kubernetes or in cncf",
    "start": "753200",
    "end": "756160"
  },
  {
    "text": "world",
    "start": "756160",
    "end": "757279"
  },
  {
    "text": "meaning we have a classes example like",
    "start": "757279",
    "end": "761040"
  },
  {
    "text": "gold silver bronze and when we have a",
    "start": "761040",
    "end": "764560"
  },
  {
    "text": "node level mapping between those",
    "start": "764560",
    "end": "767920"
  },
  {
    "text": "classes to the actual parameters of a",
    "start": "767920",
    "end": "770839"
  },
  {
    "text": "hardware",
    "start": "770839",
    "end": "772399"
  },
  {
    "text": "so simplified ui for containers",
    "start": "772399",
    "end": "776000"
  },
  {
    "text": "keep knowledge on one or level",
    "start": "776000",
    "end": "779120"
  },
  {
    "text": "and even though if it's done for the",
    "start": "779120",
    "end": "782160"
  },
  {
    "text": "caches we have",
    "start": "782160",
    "end": "783200"
  },
  {
    "text": "another resource which is also can",
    "start": "783200",
    "end": "785440"
  },
  {
    "text": "benefit from the same approach",
    "start": "785440",
    "end": "788079"
  },
  {
    "text": "and i'm talking here about the blockade",
    "start": "788079",
    "end": "791360"
  },
  {
    "text": "this is virtual resource known by linux",
    "start": "791360",
    "end": "794000"
  },
  {
    "text": "kernel where you can define the priority",
    "start": "794000",
    "end": "796160"
  },
  {
    "text": "sound",
    "start": "796160",
    "end": "797680"
  },
  {
    "text": "limits for block storage but again like",
    "start": "797680",
    "end": "800720"
  },
  {
    "text": "multiple",
    "start": "800720",
    "end": "801760"
  },
  {
    "text": "nodes in the future originals cluster",
    "start": "801760",
    "end": "804320"
  },
  {
    "text": "might have different configurations",
    "start": "804320",
    "end": "806160"
  },
  {
    "text": "of storage devices",
    "start": "806160",
    "end": "810240"
  },
  {
    "text": "you don't need to expose that to a end",
    "start": "810240",
    "end": "813360"
  },
  {
    "text": "user how to control it",
    "start": "813360",
    "end": "814959"
  },
  {
    "text": "but what you want to do is again",
    "start": "814959",
    "end": "816959"
  },
  {
    "text": "probably with class-based",
    "start": "816959",
    "end": "818959"
  },
  {
    "text": "abstraction for consuming of those",
    "start": "818959",
    "end": "821120"
  },
  {
    "text": "resources",
    "start": "821120",
    "end": "822560"
  },
  {
    "text": "and that allows you to again properly",
    "start": "822560",
    "end": "826320"
  },
  {
    "text": "split and control those resources on",
    "start": "826320",
    "end": "828959"
  },
  {
    "text": "paranormal",
    "start": "828959",
    "end": "829680"
  },
  {
    "text": "basis",
    "start": "829680",
    "end": "832240"
  },
  {
    "start": "833000",
    "end": "947000"
  },
  {
    "text": "so all of this i",
    "start": "833040",
    "end": "836560"
  },
  {
    "text": "the reason why i talked is what we have",
    "start": "836560",
    "end": "839519"
  },
  {
    "text": "possibility to divide the resources we",
    "start": "839519",
    "end": "841839"
  },
  {
    "text": "have present possibility to measure one",
    "start": "841839",
    "end": "844320"
  },
  {
    "text": "those are vendor-specific but now when",
    "start": "844320",
    "end": "847040"
  },
  {
    "text": "we have understanding how to divide how",
    "start": "847040",
    "end": "849360"
  },
  {
    "text": "to measure",
    "start": "849360",
    "end": "850880"
  },
  {
    "text": "now we need to have a control for it",
    "start": "850880",
    "end": "854320"
  },
  {
    "text": "so smarter run times ever since its",
    "start": "854320",
    "end": "858079"
  },
  {
    "text": "introduction kubernetes has enjoyed an",
    "start": "858079",
    "end": "860160"
  },
  {
    "text": "increasingly wide scale adoption",
    "start": "860160",
    "end": "861839"
  },
  {
    "text": "across public and private clouds as a",
    "start": "861839",
    "end": "864639"
  },
  {
    "text": "result",
    "start": "864639",
    "end": "865440"
  },
  {
    "text": "both the spectrum of workloads and the",
    "start": "865440",
    "end": "867279"
  },
  {
    "text": "diversity of the cluster hardware is",
    "start": "867279",
    "end": "869120"
  },
  {
    "text": "rapidly growing",
    "start": "869120",
    "end": "870560"
  },
  {
    "text": "you have ai databases content streaming",
    "start": "870560",
    "end": "873279"
  },
  {
    "text": "network function",
    "start": "873279",
    "end": "874320"
  },
  {
    "text": "virtualization automotive edge",
    "start": "874320",
    "end": "877600"
  },
  {
    "text": "running anywhere from a virtualized",
    "start": "877600",
    "end": "879360"
  },
  {
    "text": "generic public",
    "start": "879360",
    "end": "881279"
  },
  {
    "text": "cloud something like google cloud",
    "start": "881279",
    "end": "885040"
  },
  {
    "text": "to a bare metal custom cloud with",
    "start": "885040",
    "end": "887040"
  },
  {
    "text": "accelerators",
    "start": "887040",
    "end": "888079"
  },
  {
    "text": "for instance 5gh with fpgas",
    "start": "888079",
    "end": "891839"
  },
  {
    "text": "kubernetes is literally taking over the",
    "start": "891839",
    "end": "893920"
  },
  {
    "text": "world while this is a",
    "start": "893920",
    "end": "895440"
  },
  {
    "text": "positive problem it is also causing some",
    "start": "895440",
    "end": "898079"
  },
  {
    "text": "headache for us",
    "start": "898079",
    "end": "900880"
  },
  {
    "text": "kubernetes node resource management is",
    "start": "901680",
    "end": "903440"
  },
  {
    "text": "implemented in cubelet the node agent",
    "start": "903440",
    "end": "906000"
  },
  {
    "text": "cubelet has a simplistic view and",
    "start": "906000",
    "end": "907839"
  },
  {
    "text": "limited understanding of the hardware",
    "start": "907839",
    "end": "910160"
  },
  {
    "text": "moreover it comes with a single",
    "start": "910160",
    "end": "912079"
  },
  {
    "text": "one-size-fits-all resource algorithm or",
    "start": "912079",
    "end": "914240"
  },
  {
    "text": "resource allocation algorithm",
    "start": "914240",
    "end": "917839"
  },
  {
    "text": "now while this algorithm is good for",
    "start": "917920",
    "end": "919839"
  },
  {
    "text": "many common cases",
    "start": "919839",
    "end": "921120"
  },
  {
    "text": "critical workloads on bare metal require",
    "start": "921120",
    "end": "923600"
  },
  {
    "text": "more optimal",
    "start": "923600",
    "end": "924639"
  },
  {
    "text": "hardware aware resource assignment for",
    "start": "924639",
    "end": "926720"
  },
  {
    "text": "acceptable performance",
    "start": "926720",
    "end": "928639"
  },
  {
    "text": "similarly workloads in domain specific",
    "start": "928639",
    "end": "931279"
  },
  {
    "text": "clusters",
    "start": "931279",
    "end": "931920"
  },
  {
    "text": "often require custom resource allocation",
    "start": "931920",
    "end": "934399"
  },
  {
    "text": "logic",
    "start": "934399",
    "end": "935839"
  },
  {
    "text": "the one-size-fits-all algorithm cannot",
    "start": "935839",
    "end": "938160"
  },
  {
    "text": "scale to satisfy all these requirements",
    "start": "938160",
    "end": "940800"
  },
  {
    "text": "we need multiple resource allocation and",
    "start": "940800",
    "end": "943040"
  },
  {
    "text": "assignment algorithms",
    "start": "943040",
    "end": "945120"
  },
  {
    "text": "and support for custom logic that sounds",
    "start": "945120",
    "end": "948560"
  },
  {
    "start": "947000",
    "end": "996000"
  },
  {
    "text": "a little bit like we need support for",
    "start": "948560",
    "end": "950160"
  },
  {
    "text": "pluggable algorithms",
    "start": "950160",
    "end": "951759"
  },
  {
    "text": "but where to plug these we have very few",
    "start": "951759",
    "end": "955040"
  },
  {
    "text": "candidates",
    "start": "955040",
    "end": "955920"
  },
  {
    "text": "either the cubelet or the runtime itself",
    "start": "955920",
    "end": "960959"
  },
  {
    "text": "cubelet already hosts one policy so",
    "start": "961120",
    "end": "963360"
  },
  {
    "text": "should we extend it with pluggable",
    "start": "963360",
    "end": "964959"
  },
  {
    "text": "policies",
    "start": "964959",
    "end": "966240"
  },
  {
    "text": "well that would be problematic for many",
    "start": "966240",
    "end": "968000"
  },
  {
    "text": "reasons",
    "start": "968000",
    "end": "969600"
  },
  {
    "text": "first of all we would like to keep the",
    "start": "969600",
    "end": "971519"
  },
  {
    "text": "orchestration hardware agnostic",
    "start": "971519",
    "end": "974160"
  },
  {
    "text": "and as it is critical infrastructure we",
    "start": "974160",
    "end": "976240"
  },
  {
    "text": "would like to keep it as simple as",
    "start": "976240",
    "end": "977759"
  },
  {
    "text": "possible",
    "start": "977759",
    "end": "979199"
  },
  {
    "text": "a cubelet is already complex adding",
    "start": "979199",
    "end": "982000"
  },
  {
    "text": "pluggable policies would definitely",
    "start": "982000",
    "end": "983680"
  },
  {
    "text": "increase its complexity",
    "start": "983680",
    "end": "986639"
  },
  {
    "text": "luckily another option suggests itself",
    "start": "986639",
    "end": "989440"
  },
  {
    "text": "the run time",
    "start": "989440",
    "end": "992160"
  },
  {
    "text": "let's plug custom algorithms to the",
    "start": "992240",
    "end": "994240"
  },
  {
    "text": "runtime and make it smarter",
    "start": "994240",
    "end": "996560"
  },
  {
    "text": "the kubernetes apis are predominantly",
    "start": "996560",
    "end": "998720"
  },
  {
    "text": "declarative",
    "start": "998720",
    "end": "999920"
  },
  {
    "text": "the user describes what a workload needs",
    "start": "999920",
    "end": "1003279"
  },
  {
    "text": "and orchestration decides how this will",
    "start": "1003279",
    "end": "1005680"
  },
  {
    "text": "be achieved",
    "start": "1005680",
    "end": "1006800"
  },
  {
    "text": "this is true for the resource api 2.",
    "start": "1006800",
    "end": "1010000"
  },
  {
    "text": "container resources are requested in",
    "start": "1010000",
    "end": "1011839"
  },
  {
    "text": "abstract terms for instance",
    "start": "1011839",
    "end": "1013680"
  },
  {
    "text": "3 000 millicourse and not course 1 3 and",
    "start": "1013680",
    "end": "1016959"
  },
  {
    "text": "5.",
    "start": "1016959",
    "end": "1019279"
  },
  {
    "text": "but the api between the cubelet and the",
    "start": "1020320",
    "end": "1022399"
  },
  {
    "text": "runtime the container runtime interface",
    "start": "1022399",
    "end": "1025038"
  },
  {
    "text": "is fully imperative",
    "start": "1025039",
    "end": "1026880"
  },
  {
    "text": "it carries concrete resources and",
    "start": "1026880",
    "end": "1028798"
  },
  {
    "text": "related parameters",
    "start": "1028799",
    "end": "1030558"
  },
  {
    "text": "to bridge this gap the cubelet turns",
    "start": "1030559",
    "end": "1032720"
  },
  {
    "text": "abstract resource requirements into",
    "start": "1032720",
    "end": "1034558"
  },
  {
    "text": "concrete resource",
    "start": "1034559",
    "end": "1035839"
  },
  {
    "text": "assignments using its allocation",
    "start": "1035839",
    "end": "1038319"
  },
  {
    "text": "algorithm",
    "start": "1038319",
    "end": "1040079"
  },
  {
    "text": "but what would we need instead so",
    "start": "1040079",
    "end": "1043199"
  },
  {
    "text": "let's separate the what from the how and",
    "start": "1043199",
    "end": "1045280"
  },
  {
    "text": "leave resource requirements unresolved",
    "start": "1045280",
    "end": "1047280"
  },
  {
    "text": "in the cubelet",
    "start": "1047280",
    "end": "1048960"
  },
  {
    "text": "let's update the cri api to allow",
    "start": "1048960",
    "end": "1051200"
  },
  {
    "text": "passing abstract resource requirements",
    "start": "1051200",
    "end": "1053039"
  },
  {
    "text": "to the runtime itself",
    "start": "1053039",
    "end": "1056000"
  },
  {
    "text": "let's extend the runtime by pluggable",
    "start": "1056000",
    "end": "1058080"
  },
  {
    "text": "custom resource allocation and",
    "start": "1058080",
    "end": "1059840"
  },
  {
    "text": "assignment algorithms",
    "start": "1059840",
    "end": "1061520"
  },
  {
    "text": "and an api that these algorithms can use",
    "start": "1061520",
    "end": "1064080"
  },
  {
    "text": "to resolve what spec requirements to",
    "start": "1064080",
    "end": "1066400"
  },
  {
    "text": "concrete resources",
    "start": "1066400",
    "end": "1068000"
  },
  {
    "text": "in other words let's make the runtime",
    "start": "1068000",
    "end": "1070160"
  },
  {
    "text": "smarter",
    "start": "1070160",
    "end": "1071760"
  },
  {
    "start": "1071000",
    "end": "1263000"
  },
  {
    "text": "there already exists an extension point",
    "start": "1071760",
    "end": "1074160"
  },
  {
    "text": "for plugging resource allocation",
    "start": "1074160",
    "end": "1075679"
  },
  {
    "text": "algorithms into runtimes",
    "start": "1075679",
    "end": "1078160"
  },
  {
    "text": "this is nri the node resource interface",
    "start": "1078160",
    "end": "1081440"
  },
  {
    "text": "container the subproject in draft status",
    "start": "1081440",
    "end": "1085200"
  },
  {
    "text": "it is described as a new interface for",
    "start": "1085200",
    "end": "1088080"
  },
  {
    "text": "managing resources",
    "start": "1088080",
    "end": "1089520"
  },
  {
    "text": "on a node for pots and containers it was",
    "start": "1089520",
    "end": "1092799"
  },
  {
    "text": "largely inspired by the container",
    "start": "1092799",
    "end": "1094720"
  },
  {
    "text": "network interface",
    "start": "1094720",
    "end": "1096480"
  },
  {
    "text": "which is used by runtimes to handle",
    "start": "1096480",
    "end": "1098320"
  },
  {
    "text": "multiple implementations",
    "start": "1098320",
    "end": "1099840"
  },
  {
    "text": "of the container network stack",
    "start": "1099840",
    "end": "1102880"
  },
  {
    "text": "we share common interest with nri it",
    "start": "1102880",
    "end": "1105760"
  },
  {
    "text": "aims improving node resource management",
    "start": "1105760",
    "end": "1107760"
  },
  {
    "text": "with a structured api",
    "start": "1107760",
    "end": "1109360"
  },
  {
    "text": "and plug-in design for containers we",
    "start": "1109360",
    "end": "1112080"
  },
  {
    "text": "would like to do pretty much the same",
    "start": "1112080",
    "end": "1114880"
  },
  {
    "text": "it wants additional interfaces to",
    "start": "1114880",
    "end": "1117280"
  },
  {
    "text": "customize",
    "start": "1117280",
    "end": "1118000"
  },
  {
    "text": "and con a container's runtime",
    "start": "1118000",
    "end": "1119760"
  },
  {
    "text": "environment we also would like the same",
    "start": "1119760",
    "end": "1123039"
  },
  {
    "text": "nris current focus however is on better",
    "start": "1123039",
    "end": "1126000"
  },
  {
    "text": "control and more flexibility for",
    "start": "1126000",
    "end": "1127919"
  },
  {
    "text": "injecting devices into containers",
    "start": "1127919",
    "end": "1130400"
  },
  {
    "text": "this we would like to extend a bit so",
    "start": "1130400",
    "end": "1133039"
  },
  {
    "text": "ideally we would like to make nri",
    "start": "1133039",
    "end": "1135120"
  },
  {
    "text": "the primary integration point for",
    "start": "1135120",
    "end": "1136880"
  },
  {
    "text": "extending the runtime",
    "start": "1136880",
    "end": "1138240"
  },
  {
    "text": "and allow any vendor to plug in their",
    "start": "1138240",
    "end": "1141039"
  },
  {
    "text": "any resource allocation and optimization",
    "start": "1141039",
    "end": "1143360"
  },
  {
    "text": "algorithm",
    "start": "1143360",
    "end": "1144160"
  },
  {
    "text": "so how do we want to extend nri",
    "start": "1144160",
    "end": "1147360"
  },
  {
    "text": "well nri tabs into container lifecycle",
    "start": "1147360",
    "end": "1149520"
  },
  {
    "text": "events and invokes corresponding",
    "start": "1149520",
    "end": "1151520"
  },
  {
    "text": "plugin api functions the plugin receives",
    "start": "1151520",
    "end": "1154559"
  },
  {
    "text": "information about the event",
    "start": "1154559",
    "end": "1156160"
  },
  {
    "text": "and then it selects and configures",
    "start": "1156160",
    "end": "1157840"
  },
  {
    "text": "resources and responds back with data",
    "start": "1157840",
    "end": "1160799"
  },
  {
    "text": "about how to set up the container the",
    "start": "1160799",
    "end": "1163280"
  },
  {
    "text": "current nri events are creation and",
    "start": "1163280",
    "end": "1165440"
  },
  {
    "text": "removal of bots and containers",
    "start": "1165440",
    "end": "1168160"
  },
  {
    "text": "to enable more generic support for",
    "start": "1168160",
    "end": "1170000"
  },
  {
    "text": "resource optimization algorithms",
    "start": "1170000",
    "end": "1172160"
  },
  {
    "text": "nri needs to step into a few more events",
    "start": "1172160",
    "end": "1175200"
  },
  {
    "text": "to enable smart algorithms nri needs to",
    "start": "1175200",
    "end": "1177840"
  },
  {
    "text": "pass all the necessary information to",
    "start": "1177840",
    "end": "1179679"
  },
  {
    "text": "plugins",
    "start": "1179679",
    "end": "1181679"
  },
  {
    "text": "to allow proper container setup nri",
    "start": "1181679",
    "end": "1184240"
  },
  {
    "text": "plugins needs to be able to pass back",
    "start": "1184240",
    "end": "1186000"
  },
  {
    "text": "enough data",
    "start": "1186000",
    "end": "1187120"
  },
  {
    "text": "for correct container configuration",
    "start": "1187120",
    "end": "1191440"
  },
  {
    "text": "so finally let's look at the plugin",
    "start": "1191600",
    "end": "1193840"
  },
  {
    "text": "invocation mechanism",
    "start": "1193840",
    "end": "1195679"
  },
  {
    "text": "the current implementation is a hook",
    "start": "1195679",
    "end": "1197440"
  },
  {
    "text": "like one shot api",
    "start": "1197440",
    "end": "1198880"
  },
  {
    "text": "with a separate exact for every request",
    "start": "1198880",
    "end": "1201520"
  },
  {
    "text": "for stateful plugins we need another",
    "start": "1201520",
    "end": "1203360"
  },
  {
    "text": "menus",
    "start": "1203360",
    "end": "1204000"
  },
  {
    "text": "with minimal overhead probably a proto",
    "start": "1204000",
    "end": "1206480"
  },
  {
    "text": "booth based api",
    "start": "1206480",
    "end": "1207840"
  },
  {
    "text": "over grpc or ttrpc so eventually we",
    "start": "1207840",
    "end": "1211440"
  },
  {
    "text": "would like nri to become the common",
    "start": "1211440",
    "end": "1213200"
  },
  {
    "text": "resource integration point for all oci",
    "start": "1213200",
    "end": "1215600"
  },
  {
    "text": "compatible runtimes",
    "start": "1215600",
    "end": "1217120"
  },
  {
    "text": "therefore the nri core and data",
    "start": "1217120",
    "end": "1219440"
  },
  {
    "text": "structures",
    "start": "1219440",
    "end": "1220159"
  },
  {
    "text": "need to be run time agnostic adaptation",
    "start": "1220159",
    "end": "1223280"
  },
  {
    "text": "to any corresponding runtime specific",
    "start": "1223280",
    "end": "1225360"
  },
  {
    "text": "bits",
    "start": "1225360",
    "end": "1226000"
  },
  {
    "text": "should happen in the runtime itself",
    "start": "1226000",
    "end": "1230000"
  },
  {
    "text": "container is already integrated with nri",
    "start": "1230480",
    "end": "1233520"
  },
  {
    "text": "but we need to extend on that a bit",
    "start": "1233520",
    "end": "1237440"
  },
  {
    "text": "we have to hook into a few more",
    "start": "1237440",
    "end": "1238880"
  },
  {
    "text": "additional lifecycle events",
    "start": "1238880",
    "end": "1240559"
  },
  {
    "text": "and make sure that all the necessary",
    "start": "1240559",
    "end": "1242240"
  },
  {
    "text": "data is passed back and forth to the",
    "start": "1242240",
    "end": "1244240"
  },
  {
    "text": "plugins",
    "start": "1244240",
    "end": "1246240"
  },
  {
    "text": "also the current code ignores plugin",
    "start": "1246240",
    "end": "1247919"
  },
  {
    "text": "replies altogether",
    "start": "1247919",
    "end": "1249280"
  },
  {
    "text": "that has to be updated to modify",
    "start": "1249280",
    "end": "1251120"
  },
  {
    "text": "containers according to the plugin",
    "start": "1251120",
    "end": "1252720"
  },
  {
    "text": "decisions",
    "start": "1252720",
    "end": "1255039"
  },
  {
    "text": "once we have ironed out all these",
    "start": "1255039",
    "end": "1256480"
  },
  {
    "text": "details with container d we can take",
    "start": "1256480",
    "end": "1259440"
  },
  {
    "text": "cryo and integrate it to nri as well",
    "start": "1259440",
    "end": "1263840"
  },
  {
    "text": "cri needs to evolve also to provide",
    "start": "1264000",
    "end": "1266080"
  },
  {
    "text": "better support for smarter smarter",
    "start": "1266080",
    "end": "1268159"
  },
  {
    "text": "runtimes",
    "start": "1268159",
    "end": "1269200"
  },
  {
    "text": "smart algorithms need declarative",
    "start": "1269200",
    "end": "1271280"
  },
  {
    "text": "resource requirements",
    "start": "1271280",
    "end": "1273120"
  },
  {
    "text": "and the separation of what in the",
    "start": "1273120",
    "end": "1274880"
  },
  {
    "text": "cubelet from the how in the runtime",
    "start": "1274880",
    "end": "1277840"
  },
  {
    "text": "to do this cri needs to pass through",
    "start": "1277840",
    "end": "1280480"
  },
  {
    "text": "both spec resource requirements where",
    "start": "1280480",
    "end": "1282320"
  },
  {
    "text": "button",
    "start": "1282320",
    "end": "1284640"
  },
  {
    "text": "smartel algorithms with better",
    "start": "1284640",
    "end": "1286240"
  },
  {
    "text": "efficiency also need a few group",
    "start": "1286240",
    "end": "1288840"
  },
  {
    "text": "operations",
    "start": "1288840",
    "end": "1290000"
  },
  {
    "text": "vm-based runtimes need full information",
    "start": "1290000",
    "end": "1292480"
  },
  {
    "text": "about all container resource",
    "start": "1292480",
    "end": "1294000"
  },
  {
    "text": "requirements for sandbox creation",
    "start": "1294000",
    "end": "1297200"
  },
  {
    "text": "also to optimize the collocation of",
    "start": "1297200",
    "end": "1298960"
  },
  {
    "text": "related containers it is better to get a",
    "start": "1298960",
    "end": "1301039"
  },
  {
    "text": "single request for creating all the",
    "start": "1301039",
    "end": "1302799"
  },
  {
    "text": "related containers at once",
    "start": "1302799",
    "end": "1306400"
  },
  {
    "text": "we also need the ability to update",
    "start": "1306400",
    "end": "1308080"
  },
  {
    "text": "multiple containers with a single",
    "start": "1308080",
    "end": "1309600"
  },
  {
    "text": "request",
    "start": "1309600",
    "end": "1310960"
  },
  {
    "text": "and finally we would like a dedicated",
    "start": "1310960",
    "end": "1313919"
  },
  {
    "text": "api for container state monitoring",
    "start": "1313919",
    "end": "1316400"
  },
  {
    "text": "we want to allow clients to subscribe",
    "start": "1316400",
    "end": "1318320"
  },
  {
    "text": "for content as they change events",
    "start": "1318320",
    "end": "1320240"
  },
  {
    "text": "then trigger and deliver notifications",
    "start": "1320240",
    "end": "1322320"
  },
  {
    "text": "from the run time when such an event",
    "start": "1322320",
    "end": "1324159"
  },
  {
    "text": "occurs",
    "start": "1324159",
    "end": "1326559"
  },
  {
    "start": "1327000",
    "end": "1414000"
  },
  {
    "text": "so based on the things what we just",
    "start": "1327440",
    "end": "1331120"
  },
  {
    "text": "provided to you there are three things",
    "start": "1331120",
    "end": "1333520"
  },
  {
    "text": "what we want you to take home",
    "start": "1333520",
    "end": "1335679"
  },
  {
    "text": "out of this presentation first of all is",
    "start": "1335679",
    "end": "1338480"
  },
  {
    "text": "a",
    "start": "1338480",
    "end": "1338960"
  },
  {
    "text": "about the hardware a hard drive is",
    "start": "1338960",
    "end": "1342000"
  },
  {
    "text": "evolving",
    "start": "1342000",
    "end": "1342720"
  },
  {
    "text": "and the hardware is changing all the",
    "start": "1342720",
    "end": "1344720"
  },
  {
    "text": "assumptions about how",
    "start": "1344720",
    "end": "1346159"
  },
  {
    "text": "hardware works might be changing next",
    "start": "1346159",
    "end": "1348320"
  },
  {
    "text": "day",
    "start": "1348320",
    "end": "1349679"
  },
  {
    "text": "so it means no one single algorithm",
    "start": "1349679",
    "end": "1353120"
  },
  {
    "text": "which will satisfy all we needs",
    "start": "1353120",
    "end": "1355200"
  },
  {
    "text": "we need to have a flexibility",
    "start": "1355200",
    "end": "1358240"
  },
  {
    "text": "second thing about the kubernetes",
    "start": "1358240",
    "end": "1361360"
  },
  {
    "text": "coblet holds the information of what and",
    "start": "1361360",
    "end": "1364640"
  },
  {
    "text": "what should be run what is the priority",
    "start": "1364640",
    "end": "1368159"
  },
  {
    "text": "of",
    "start": "1368159",
    "end": "1368400"
  },
  {
    "text": "things but we need to split",
    "start": "1368400",
    "end": "1372320"
  },
  {
    "text": "what and how what",
    "start": "1372320",
    "end": "1375760"
  },
  {
    "text": "is about runtimes runtimes now",
    "start": "1375760",
    "end": "1378799"
  },
  {
    "text": "contains some information about how",
    "start": "1378799",
    "end": "1382240"
  },
  {
    "text": "like linux container window os windows",
    "start": "1382240",
    "end": "1385280"
  },
  {
    "text": "is containers",
    "start": "1385280",
    "end": "1386559"
  },
  {
    "text": "or vm vm-based containment and so on so",
    "start": "1386559",
    "end": "1390000"
  },
  {
    "text": "we want to have runtimes to control",
    "start": "1390000",
    "end": "1393280"
  },
  {
    "text": "before how part of how containers are",
    "start": "1393280",
    "end": "1396559"
  },
  {
    "text": "run",
    "start": "1396559",
    "end": "1397600"
  },
  {
    "text": "and we want to have a plugins in this",
    "start": "1397600",
    "end": "1400080"
  },
  {
    "text": "interface",
    "start": "1400080",
    "end": "1401039"
  },
  {
    "text": "so what more custom logic and vendor",
    "start": "1401039",
    "end": "1404640"
  },
  {
    "text": "specific projects or",
    "start": "1404640",
    "end": "1407120"
  },
  {
    "text": "special installation logic can be",
    "start": "1407120",
    "end": "1409200"
  },
  {
    "text": "extended",
    "start": "1409200",
    "end": "1411679"
  },
  {
    "text": "on web we have reached the end of our",
    "start": "1412240",
    "end": "1416000"
  },
  {
    "start": "1414000",
    "end": "1445000"
  },
  {
    "text": "presentation me and preston available on",
    "start": "1416000",
    "end": "1418799"
  },
  {
    "text": "the github",
    "start": "1418799",
    "end": "1419679"
  },
  {
    "text": "or kubernetes slug and we are happy to",
    "start": "1419679",
    "end": "1422640"
  },
  {
    "text": "talk more and more details about",
    "start": "1422640",
    "end": "1424400"
  },
  {
    "text": "all the things what we presented today",
    "start": "1424400",
    "end": "1426159"
  },
  {
    "text": "and what we are doing",
    "start": "1426159",
    "end": "1427440"
  },
  {
    "text": "for our hardware performance",
    "start": "1427440",
    "end": "1429360"
  },
  {
    "text": "actualizations",
    "start": "1429360",
    "end": "1431279"
  },
  {
    "text": "we will be available today after the",
    "start": "1431279",
    "end": "1433760"
  },
  {
    "text": "sessions",
    "start": "1433760",
    "end": "1434480"
  },
  {
    "text": "for live q a so welcome",
    "start": "1434480",
    "end": "1438159"
  },
  {
    "text": "and thank you for participating in our",
    "start": "1438159",
    "end": "1441200"
  },
  {
    "text": "session today thank you",
    "start": "1441200",
    "end": "1444320"
  },
  {
    "text": "thank you",
    "start": "1444320",
    "end": "1447360"
  }
]