[
  {
    "text": "welcome everyone to our talk about",
    "start": "80",
    "end": "2320"
  },
  {
    "text": "simplifying network automation with",
    "start": "2320",
    "end": "4000"
  },
  {
    "text": "netbox operator or how we call it just",
    "start": "4000",
    "end": "6400"
  },
  {
    "text": "claim it Uh very excited to do this I'm",
    "start": "6400",
    "end": "10080"
  },
  {
    "text": "I'm Yudler I'm a DevOps engineer at",
    "start": "10080",
    "end": "12400"
  },
  {
    "text": "Swisscom I'm here with Leia Brier uh",
    "start": "12400",
    "end": "15040"
  },
  {
    "text": "DevOps engineer in the very same team We",
    "start": "15040",
    "end": "17600"
  },
  {
    "text": "both work for Swisscom Swisscom is a",
    "start": "17600",
    "end": "20800"
  },
  {
    "text": "Switzerland a major Switz Swiss uh",
    "start": "20800",
    "end": "23439"
  },
  {
    "text": "service provider for IT and",
    "start": "23439",
    "end": "25359"
  },
  {
    "text": "telecommunication services",
    "start": "25359",
    "end": "27760"
  },
  {
    "text": "We both work in the 5G core automation",
    "start": "27760",
    "end": "30320"
  },
  {
    "text": "team to um automate the 5G deployment",
    "start": "30320",
    "end": "34880"
  },
  {
    "text": "and to really modernize this entire uh",
    "start": "34880",
    "end": "38920"
  },
  {
    "text": "ecosystem So for us this is mainly about",
    "start": "38920",
    "end": "43640"
  },
  {
    "text": "becoming moving from a legacy te telco",
    "start": "43640",
    "end": "47600"
  },
  {
    "text": "to a more modern techco This includes",
    "start": "47600",
    "end": "50640"
  },
  {
    "text": "like getting rid of Excel spreadsheets",
    "start": "50640",
    "end": "52559"
  },
  {
    "text": "for configuration um getting rid of",
    "start": "52559",
    "end": "54879"
  },
  {
    "text": "manual work um really trying to automate",
    "start": "54879",
    "end": "58239"
  },
  {
    "text": "as many things as possible And we really",
    "start": "58239",
    "end": "61039"
  },
  {
    "text": "think that we can uh do that using",
    "start": "61039",
    "end": "64080"
  },
  {
    "text": "Kubernetes using GitOps and so on So",
    "start": "64080",
    "end": "67680"
  },
  {
    "text": "let's start with where we're at today or",
    "start": "67680",
    "end": "70560"
  },
  {
    "text": "where we were a few uh months ago Uh",
    "start": "70560",
    "end": "74080"
  },
  {
    "text": "this is your average um configuration",
    "start": "74080",
    "end": "76479"
  },
  {
    "text": "manifest in a 5G core It's an XML file",
    "start": "76479",
    "end": "79759"
  },
  {
    "text": "It contains a lot of nitty-gritty",
    "start": "79759",
    "end": "81840"
  },
  {
    "text": "details that you check into git and then",
    "start": "81840",
    "end": "84080"
  },
  {
    "text": "you try to somehow manage that right so",
    "start": "84080",
    "end": "87439"
  },
  {
    "text": "it's a rather static configuration which",
    "start": "87439",
    "end": "91040"
  },
  {
    "text": "contains all the low-level details like",
    "start": "91040",
    "end": "93360"
  },
  {
    "text": "vlan ids IP addresses and so on and you",
    "start": "93360",
    "end": "96720"
  },
  {
    "text": "need to provide that in advance",
    "start": "96720",
    "end": "100240"
  },
  {
    "text": "So we were thinking what if we could",
    "start": "100240",
    "end": "102720"
  },
  {
    "text": "move to a more dynamic approach more",
    "start": "102720",
    "end": "106320"
  },
  {
    "text": "more dynamic configuration which would",
    "start": "106320",
    "end": "108960"
  },
  {
    "text": "start with a high level intent which",
    "start": "108960",
    "end": "111280"
  },
  {
    "text": "contains only the necessary information",
    "start": "111280",
    "end": "113200"
  },
  {
    "text": "you need and then you had a you have a",
    "start": "113200",
    "end": "116079"
  },
  {
    "text": "system that surrounds it which is able",
    "start": "116079",
    "end": "118640"
  },
  {
    "text": "to actually figure out all the details",
    "start": "118640",
    "end": "121200"
  },
  {
    "text": "on its own",
    "start": "121200",
    "end": "123280"
  },
  {
    "text": "So that would be a rather dynamic",
    "start": "123280",
    "end": "125040"
  },
  {
    "text": "approach and we think for us that's",
    "start": "125040",
    "end": "128239"
  },
  {
    "text": "about adopting the Kubernetes resource",
    "start": "128239",
    "end": "130479"
  },
  {
    "text": "model We really think that KRM can help",
    "start": "130479",
    "end": "133040"
  },
  {
    "text": "us on achieving that So as a reminder",
    "start": "133040",
    "end": "135840"
  },
  {
    "text": "Kubernetes resource model contains of",
    "start": "135840",
    "end": "137840"
  },
  {
    "text": "the uh CRD extensions basically API",
    "start": "137840",
    "end": "141360"
  },
  {
    "text": "extensions of the Kubernetes API Um it",
    "start": "141360",
    "end": "144560"
  },
  {
    "text": "contains custom resources as instances",
    "start": "144560",
    "end": "147200"
  },
  {
    "text": "of these CRDs And then lastly you add",
    "start": "147200",
    "end": "150800"
  },
  {
    "text": "your business logic where you can do",
    "start": "150800",
    "end": "152400"
  },
  {
    "text": "whatever you need it to do in the",
    "start": "152400",
    "end": "155319"
  },
  {
    "text": "end So Kubernetes resource model is one",
    "start": "155319",
    "end": "159840"
  },
  {
    "text": "piece of the puzzle The other piece of",
    "start": "159840",
    "end": "161360"
  },
  {
    "text": "the puzzle that I would like to talk",
    "start": "161360",
    "end": "162720"
  },
  {
    "text": "about is the claim approach which is a",
    "start": "162720",
    "end": "167120"
  },
  {
    "text": "concept that we see in Kubernetes",
    "start": "167120",
    "end": "168959"
  },
  {
    "text": "already as of today which basically",
    "start": "168959",
    "end": "171040"
  },
  {
    "text": "splits the source of truth from uh",
    "start": "171040",
    "end": "173200"
  },
  {
    "text": "between git and kubernetes I'm showing",
    "start": "173200",
    "end": "175840"
  },
  {
    "text": "you this based on the example of a",
    "start": "175840",
    "end": "177920"
  },
  {
    "text": "persistent volume um in Kubernetes So it",
    "start": "177920",
    "end": "182720"
  },
  {
    "text": "usually starts with a stateful set um",
    "start": "182720",
    "end": "185680"
  },
  {
    "text": "you you create a stateful set in",
    "start": "185680",
    "end": "187800"
  },
  {
    "text": "Kubernetes and there you define for",
    "start": "187800",
    "end": "191280"
  },
  {
    "text": "instance you want a 1 GBTE um volume in",
    "start": "191280",
    "end": "195040"
  },
  {
    "text": "the end and that's all you need to tell",
    "start": "195040",
    "end": "197120"
  },
  {
    "text": "the system in order to to make it work",
    "start": "197120",
    "end": "201599"
  },
  {
    "text": "This will then be synced to the",
    "start": "201599",
    "end": "202879"
  },
  {
    "text": "Kubernetes API using GitOps Hopefully um",
    "start": "202879",
    "end": "206159"
  },
  {
    "text": "the P the the stateful set controller",
    "start": "206159",
    "end": "208640"
  },
  {
    "text": "will take over and reconcile it Create",
    "start": "208640",
    "end": "210959"
  },
  {
    "text": "the persistent volume claim Then you",
    "start": "210959",
    "end": "212799"
  },
  {
    "text": "will have the persistent volume",
    "start": "212799",
    "end": "214000"
  },
  {
    "text": "controller doing its magic and",
    "start": "214000",
    "end": "216000"
  },
  {
    "text": "eventually you will have a running pot",
    "start": "216000",
    "end": "219120"
  },
  {
    "text": "which has a 1 GBTE interface attached Um",
    "start": "219120",
    "end": "223280"
  },
  {
    "text": "that's just an example to show you how",
    "start": "223280",
    "end": "225200"
  },
  {
    "text": "what we did in uh in netbox operator Um",
    "start": "225200",
    "end": "228319"
  },
  {
    "text": "and you can see it's a very dynamic",
    "start": "228319",
    "end": "230400"
  },
  {
    "text": "system you only give it the necessary",
    "start": "230400",
    "end": "232879"
  },
  {
    "text": "information um you that is required at",
    "start": "232879",
    "end": "236159"
  },
  {
    "text": "the beginning If you look at that same",
    "start": "236159",
    "end": "238080"
  },
  {
    "text": "example from a source of truth point of",
    "start": "238080",
    "end": "240480"
  },
  {
    "text": "view we can see in git we only have the",
    "start": "240480",
    "end": "243920"
  },
  {
    "text": "stateful set and the very high level",
    "start": "243920",
    "end": "246599"
  },
  {
    "text": "intent We sync that to the Kubernetes",
    "start": "246599",
    "end": "249879"
  },
  {
    "text": "cluster There we have an exact copy of",
    "start": "249879",
    "end": "252720"
  },
  {
    "text": "this object and we have an additional",
    "start": "252720",
    "end": "255360"
  },
  {
    "text": "additional information like the PVC",
    "start": "255360",
    "end": "257359"
  },
  {
    "text": "itself the PV which contains some ID",
    "start": "257359",
    "end": "260320"
  },
  {
    "text": "that you don't want to know in the end",
    "start": "260320",
    "end": "262479"
  },
  {
    "text": "as a user and the",
    "start": "262479",
    "end": "265240"
  },
  {
    "text": "pot So in this example you can see we",
    "start": "265240",
    "end": "269600"
  },
  {
    "text": "already have a split source of truth",
    "start": "269600",
    "end": "271199"
  },
  {
    "text": "between git which contains only the high",
    "start": "271199",
    "end": "273600"
  },
  {
    "text": "level idea of what you're doing and",
    "start": "273600",
    "end": "276320"
  },
  {
    "text": "kubernetes",
    "start": "276320",
    "end": "278400"
  },
  {
    "text": "So with that I hand over to you Leia",
    "start": "278400",
    "end": "282240"
  },
  {
    "text": "Thank you Y So if we compare pure",
    "start": "282240",
    "end": "285360"
  },
  {
    "text": "GitHubs with GitHubs combined with KRM",
    "start": "285360",
    "end": "288320"
  },
  {
    "text": "um the PVC example showed well",
    "start": "288320",
    "end": "291080"
  },
  {
    "text": "how the source of truth is shared",
    "start": "291080",
    "end": "294160"
  },
  {
    "text": "between git and kubernetes So this",
    "start": "294160",
    "end": "297440"
  },
  {
    "text": "allows for",
    "start": "297440",
    "end": "298680"
  },
  {
    "text": "abstraction In git you only need to",
    "start": "298680",
    "end": "301120"
  },
  {
    "text": "store your intent and the details can",
    "start": "301120",
    "end": "303680"
  },
  {
    "text": "then be handled by kubernetes",
    "start": "303680",
    "end": "308000"
  },
  {
    "text": "This also gives you flexibility as you",
    "start": "308000",
    "end": "310479"
  },
  {
    "text": "don't know to know all the details in",
    "start": "310479",
    "end": "313639"
  },
  {
    "text": "advance but some things can be",
    "start": "313639",
    "end": "317039"
  },
  {
    "text": "calculated around",
    "start": "317039",
    "end": "320240"
  },
  {
    "text": "time It also makes scalability easier as",
    "start": "321560",
    "end": "325360"
  },
  {
    "text": "you can just claim more things more",
    "start": "325360",
    "end": "328240"
  },
  {
    "text": "instances of the same thing",
    "start": "328240",
    "end": "332680"
  },
  {
    "text": "Um and it's also reduced the operational",
    "start": "338440",
    "end": "343160"
  },
  {
    "text": "complexity So you saw the big",
    "start": "343160",
    "end": "345759"
  },
  {
    "text": "configuration in the beginning If you",
    "start": "345759",
    "end": "348000"
  },
  {
    "text": "look at it like at a monolith",
    "start": "348000",
    "end": "351440"
  },
  {
    "text": "um you could compare GitHubs with KM to",
    "start": "351440",
    "end": "354479"
  },
  {
    "text": "a micros service And one of these um if",
    "start": "354479",
    "end": "359039"
  },
  {
    "text": "you look at it this way one of these",
    "start": "359039",
    "end": "360320"
  },
  {
    "text": "microser would then be netbox operator",
    "start": "360320",
    "end": "363600"
  },
  {
    "text": "which would handle the IP address",
    "start": "363600",
    "end": "367840"
  },
  {
    "text": "management So if you'd like to look more",
    "start": "368360",
    "end": "371199"
  },
  {
    "text": "about our journey from GitHubs to KM I'd",
    "start": "371199",
    "end": "374080"
  },
  {
    "text": "like to recommend the following talks by",
    "start": "374080",
    "end": "376400"
  },
  {
    "text": "my colleagues from Swisscom So at the",
    "start": "376400",
    "end": "379280"
  },
  {
    "text": "end of the presentation there will be a",
    "start": "379280",
    "end": "381360"
  },
  {
    "text": "cure code where you can find the slides",
    "start": "381360",
    "end": "383759"
  },
  {
    "text": "and you can open the links from",
    "start": "383759",
    "end": "387759"
  },
  {
    "text": "there I'd like to give a short",
    "start": "390280",
    "end": "392639"
  },
  {
    "text": "introduction about Netbox So Netbox is",
    "start": "392639",
    "end": "395840"
  },
  {
    "text": "an open-source tool for network element",
    "start": "395840",
    "end": "398800"
  },
  {
    "text": "and IP address management It offers a",
    "start": "398800",
    "end": "402280"
  },
  {
    "text": "comprehensive API which you can use for",
    "start": "402280",
    "end": "405160"
  },
  {
    "text": "automations of your for example cables",
    "start": "405160",
    "end": "408400"
  },
  {
    "text": "and Rex or also IP",
    "start": "408400",
    "end": "411720"
  },
  {
    "text": "addresses The networks operator is a",
    "start": "411720",
    "end": "414880"
  },
  {
    "text": "Kubernetes operator we built in Swisscom",
    "start": "414880",
    "end": "417120"
  },
  {
    "text": "and open sourced and it makes these",
    "start": "417120",
    "end": "419919"
  },
  {
    "text": "resources directly available in your",
    "start": "419919",
    "end": "422720"
  },
  {
    "text": "Kubernetes cluster",
    "start": "422720",
    "end": "425520"
  },
  {
    "text": "So it uses netbox as source of truth and",
    "start": "425520",
    "end": "429680"
  },
  {
    "text": "it also has some advanced features like",
    "start": "429680",
    "end": "432639"
  },
  {
    "text": "state key ips Currently IP addresses IP",
    "start": "432639",
    "end": "436400"
  },
  {
    "text": "ranges and prefixes are supported with",
    "start": "436400",
    "end": "438720"
  },
  {
    "text": "netbox operator and it's",
    "start": "438720",
    "end": "442120"
  },
  {
    "text": "um based on the claim model similar to",
    "start": "442120",
    "end": "445440"
  },
  {
    "text": "the persistent volume claim we showed",
    "start": "445440",
    "end": "448639"
  },
  {
    "text": "before",
    "start": "448639",
    "end": "451639"
  },
  {
    "text": "So with netbox operator you can define",
    "start": "453680",
    "end": "456560"
  },
  {
    "text": "claim resources for example a prefix",
    "start": "456560",
    "end": "459199"
  },
  {
    "text": "claim which will then with GitHubs be",
    "start": "459199",
    "end": "462400"
  },
  {
    "text": "applied to your cube API and then the",
    "start": "462400",
    "end": "465599"
  },
  {
    "text": "prefix claim resource will communicate",
    "start": "465599",
    "end": "467680"
  },
  {
    "text": "to Netbox to find every prefix",
    "start": "467680",
    "end": "472560"
  },
  {
    "text": "Then the prefix will be created on your",
    "start": "472560",
    "end": "474800"
  },
  {
    "text": "cluster and the prefix controller will",
    "start": "474800",
    "end": "477120"
  },
  {
    "text": "then create update or delete the prefix",
    "start": "477120",
    "end": "480879"
  },
  {
    "text": "in",
    "start": "480879",
    "end": "483360"
  },
  {
    "text": "netbox So if you look at the source of",
    "start": "484120",
    "end": "486720"
  },
  {
    "text": "truth here the intent is stored in",
    "start": "486720",
    "end": "491080"
  },
  {
    "text": "nitbox or in git and then when it's",
    "start": "491080",
    "end": "495039"
  },
  {
    "text": "applied to the cluster at runtime you",
    "start": "495039",
    "end": "497919"
  },
  {
    "text": "will get the prefix that's actually",
    "start": "497919",
    "end": "501919"
  },
  {
    "text": "used So now I want to show Netflix",
    "start": "506759",
    "end": "509919"
  },
  {
    "text": "operator in action",
    "start": "509919",
    "end": "512518"
  },
  {
    "text": "So I've set up a local kind cluster and",
    "start": "512519",
    "end": "516800"
  },
  {
    "text": "there I have um a netbox instance",
    "start": "516800",
    "end": "519919"
  },
  {
    "text": "installed and also the netbox",
    "start": "519919",
    "end": "522680"
  },
  {
    "text": "operator and then I'll apply a prefix",
    "start": "522680",
    "end": "525920"
  },
  {
    "text": "claim custom resource which will then be",
    "start": "525920",
    "end": "528480"
  },
  {
    "text": "reconciled by netbox operator",
    "start": "528480",
    "end": "533399"
  },
  {
    "text": "You'll also be able to find these",
    "start": "537519",
    "end": "539120"
  },
  {
    "text": "examples in GitHub if you want to try it",
    "start": "539120",
    "end": "541760"
  },
  {
    "text": "out yourself with instructions on how to",
    "start": "541760",
    "end": "545040"
  },
  {
    "text": "set up a local kind cluster And I've",
    "start": "545040",
    "end": "549440"
  },
  {
    "text": "already done this",
    "start": "549440",
    "end": "552240"
  },
  {
    "text": "now So for this demos um I assume that I",
    "start": "553800",
    "end": "557680"
  },
  {
    "text": "can use any prefix which is in notbox",
    "start": "557680",
    "end": "560240"
  },
  {
    "text": "and has the custom field environment set",
    "start": "560240",
    "end": "562399"
  },
  {
    "text": "to",
    "start": "562399",
    "end": "563399"
  },
  {
    "text": "pro Um so I create one",
    "start": "563399",
    "end": "567399"
  },
  {
    "text": "prefix",
    "start": "567399",
    "end": "570399"
  },
  {
    "text": "now and here I'll define the custom",
    "start": "576760",
    "end": "582000"
  },
  {
    "text": "field So most likely if you would use",
    "start": "584519",
    "end": "587440"
  },
  {
    "text": "netbox operator the prefixes are already",
    "start": "587440",
    "end": "590399"
  },
  {
    "text": "present in",
    "start": "590399",
    "end": "591720"
  },
  {
    "text": "netbox Um and for this demo I created it",
    "start": "591720",
    "end": "597199"
  },
  {
    "text": "now So let's have a look at how the",
    "start": "598040",
    "end": "601440"
  },
  {
    "text": "prefix claim custom resource",
    "start": "601440",
    "end": "603959"
  },
  {
    "text": "look So here you can see um we define a",
    "start": "603959",
    "end": "607600"
  },
  {
    "text": "tenant This will be the tenant of the",
    "start": "607600",
    "end": "609680"
  },
  {
    "text": "claimed prefix the parent prefix we",
    "start": "609680",
    "end": "612959"
  },
  {
    "text": "created before and also the prefix",
    "start": "612959",
    "end": "616560"
  },
  {
    "text": "length we want to get If I now apply",
    "start": "616560",
    "end": "619839"
  },
  {
    "text": "this to my Kubernetes",
    "start": "619839",
    "end": "622120"
  },
  {
    "text": "cluster and list the prefix claim and",
    "start": "622120",
    "end": "624959"
  },
  {
    "text": "prefix custom resources we can see that",
    "start": "624959",
    "end": "628560"
  },
  {
    "text": "the first free prefix in that parent",
    "start": "628560",
    "end": "631440"
  },
  {
    "text": "prefix got",
    "start": "631440",
    "end": "634320"
  },
  {
    "text": "assigned All right So in our case we're",
    "start": "640920",
    "end": "644079"
  },
  {
    "text": "not limited to that one prefix but we",
    "start": "644079",
    "end": "646800"
  },
  {
    "text": "can use any prefix that has uh the",
    "start": "646800",
    "end": "649760"
  },
  {
    "text": "custom build environment set to prod For",
    "start": "649760",
    "end": "652720"
  },
  {
    "text": "this we have a dynamic version of this",
    "start": "652720",
    "end": "654800"
  },
  {
    "text": "prefix f claim which will filter the",
    "start": "654800",
    "end": "657839"
  },
  {
    "text": "prefixes in netbox um based on custom",
    "start": "657839",
    "end": "661519"
  },
  {
    "text": "fields So here the netbox operator will",
    "start": "661519",
    "end": "664560"
  },
  {
    "text": "first um do the filters of the possible",
    "start": "664560",
    "end": "667519"
  },
  {
    "text": "parent prefixes Then it will select one",
    "start": "667519",
    "end": "670399"
  },
  {
    "text": "and assign a prefix from",
    "start": "670399",
    "end": "674240"
  },
  {
    "text": "there So this is the manifest we'll use",
    "start": "681959",
    "end": "685360"
  },
  {
    "text": "So instead of a fixed parent prefix we",
    "start": "685360",
    "end": "687760"
  },
  {
    "text": "have now a filter for the um custom",
    "start": "687760",
    "end": "692240"
  },
  {
    "text": "field environment set to prot and also",
    "start": "692240",
    "end": "694720"
  },
  {
    "text": "IP family",
    "start": "694720",
    "end": "697519"
  },
  {
    "text": "IPv4 So I apply this to my cluster now",
    "start": "698920",
    "end": "702240"
  },
  {
    "text": "and I list again the prefix claim and",
    "start": "702240",
    "end": "705360"
  },
  {
    "text": "prefix custom resources",
    "start": "705360",
    "end": "709399"
  },
  {
    "text": "So we we got the second prefix",
    "start": "709440",
    "end": "712720"
  },
  {
    "text": "um",
    "start": "712720",
    "end": "715040"
  },
  {
    "text": "assigned So now how can we then use the",
    "start": "720760",
    "end": "723920"
  },
  {
    "text": "claimed prefixes on our",
    "start": "723920",
    "end": "726040"
  },
  {
    "text": "clusters for this I would like to show",
    "start": "726040",
    "end": "728480"
  },
  {
    "text": "an example where we do a load balancer",
    "start": "728480",
    "end": "730800"
  },
  {
    "text": "configuration with the claim prefix",
    "start": "730800",
    "end": "734399"
  },
  {
    "text": "This means we somehow need to u map the",
    "start": "734399",
    "end": "737839"
  },
  {
    "text": "status field prefix from the prefix",
    "start": "737839",
    "end": "740360"
  },
  {
    "text": "claim to the custom resource that's used",
    "start": "740360",
    "end": "743680"
  },
  {
    "text": "to configure the load",
    "start": "743680",
    "end": "747320"
  },
  {
    "text": "balancer In our case we'll use KO for",
    "start": "747320",
    "end": "750560"
  },
  {
    "text": "this demo KO is a tool where you can",
    "start": "750560",
    "end": "753040"
  },
  {
    "text": "define",
    "start": "753040",
    "end": "754639"
  },
  {
    "text": "um mappings between fields of different",
    "start": "754639",
    "end": "758440"
  },
  {
    "text": "series And I've already installed KO and",
    "start": "758440",
    "end": "762639"
  },
  {
    "text": "this mapping on my KIN",
    "start": "762639",
    "end": "766480"
  },
  {
    "text": "cluster So you can see again how the",
    "start": "766760",
    "end": "769120"
  },
  {
    "text": "prefix is mapped to the metal AB IP",
    "start": "769120",
    "end": "771040"
  },
  {
    "text": "address pool And then we'll be able to",
    "start": "771040",
    "end": "774399"
  },
  {
    "text": "get IP addresses from this pool assigned",
    "start": "774399",
    "end": "776959"
  },
  {
    "text": "to our",
    "start": "776959",
    "end": "779440"
  },
  {
    "text": "services So here for this example you'll",
    "start": "794600",
    "end": "797600"
  },
  {
    "text": "also need metal lb and carrier installed",
    "start": "797600",
    "end": "800560"
  },
  {
    "text": "on your kind cluster",
    "start": "800560",
    "end": "803440"
  },
  {
    "text": "and you'll find information how to set",
    "start": "803440",
    "end": "805760"
  },
  {
    "text": "this up on in the readme",
    "start": "805760",
    "end": "809800"
  },
  {
    "text": "So here in this manifest you'll find all",
    "start": "814639",
    "end": "816720"
  },
  {
    "text": "the information requirements required",
    "start": "816720",
    "end": "819120"
  },
  {
    "text": "for this mapping to create the prefix",
    "start": "819120",
    "end": "821120"
  },
  {
    "text": "claim",
    "start": "821120",
    "end": "822680"
  },
  {
    "text": "and the medb IP address",
    "start": "822680",
    "end": "827120"
  },
  {
    "text": "pool and so let's check",
    "start": "829399",
    "end": "834120"
  },
  {
    "text": "which prefix got assigned and how the",
    "start": "834120",
    "end": "837440"
  },
  {
    "text": "metal ABI pool looks like",
    "start": "837440",
    "end": "842160"
  },
  {
    "text": "I need to move this around so we can see",
    "start": "847360",
    "end": "850240"
  },
  {
    "text": "the entire width of the",
    "start": "850240",
    "end": "852040"
  },
  {
    "text": "terminal And so here we can see the new",
    "start": "852040",
    "end": "855120"
  },
  {
    "text": "prefix that was",
    "start": "855120",
    "end": "856600"
  },
  {
    "text": "assigned and the middlebi pair pool has",
    "start": "856600",
    "end": "859760"
  },
  {
    "text": "the same",
    "start": "859760",
    "end": "861800"
  },
  {
    "text": "one So now I'd like to create the sample",
    "start": "861800",
    "end": "866360"
  },
  {
    "text": "deployment I create the ninx deployment",
    "start": "866360",
    "end": "870000"
  },
  {
    "text": "and here I only need to set this",
    "start": "870000",
    "end": "872079"
  },
  {
    "text": "annotation to find define which metal IP",
    "start": "872079",
    "end": "875120"
  },
  {
    "text": "address pool to",
    "start": "875120",
    "end": "877000"
  },
  {
    "text": "use and I use type load",
    "start": "877000",
    "end": "881680"
  },
  {
    "text": "balancer So I apply this to my cluster",
    "start": "883639",
    "end": "887199"
  },
  {
    "text": "and now I can list the deployments and",
    "start": "887199",
    "end": "889839"
  },
  {
    "text": "services in the name space that got",
    "start": "889839",
    "end": "892279"
  },
  {
    "text": "created and we see that we got an",
    "start": "892279",
    "end": "895120"
  },
  {
    "text": "external IP",
    "start": "895120",
    "end": "898000"
  },
  {
    "text": "assigned So now we can also access our",
    "start": "898519",
    "end": "901760"
  },
  {
    "text": "deployment over this IP",
    "start": "901760",
    "end": "906360"
  },
  {
    "text": "So you could also define other mappings",
    "start": "922079",
    "end": "924240"
  },
  {
    "text": "to use these prefix claims for other",
    "start": "924240",
    "end": "927720"
  },
  {
    "text": "configurations for example a CNF",
    "start": "927720",
    "end": "930920"
  },
  {
    "text": "configuration With this I'd like to hand",
    "start": "930920",
    "end": "933120"
  },
  {
    "text": "over to Yel for more demos Thanks a lot",
    "start": "933120",
    "end": "936600"
  },
  {
    "text": "Leia So I'm going to show a last use",
    "start": "936600",
    "end": "940720"
  },
  {
    "text": "case or last demo which is the",
    "start": "940720",
    "end": "943360"
  },
  {
    "text": "restoration of prefixes In this example",
    "start": "943360",
    "end": "946880"
  },
  {
    "text": "we create three different prefixes We we",
    "start": "946880",
    "end": "950959"
  },
  {
    "text": "let them reconcile so they're they're",
    "start": "950959",
    "end": "953120"
  },
  {
    "text": "healthy and we get we have the prefix",
    "start": "953120",
    "end": "955360"
  },
  {
    "text": "Then we will remove them in",
    "start": "955360",
    "end": "958199"
  },
  {
    "text": "Kubernetes and recreate them and make",
    "start": "958199",
    "end": "960880"
  },
  {
    "text": "sure that we get the same IP So that's",
    "start": "960880",
    "end": "962720"
  },
  {
    "text": "one of the features of netbox operator",
    "start": "962720",
    "end": "964639"
  },
  {
    "text": "to actually allow you to restore um the",
    "start": "964639",
    "end": "967839"
  },
  {
    "text": "prefixes based on the external source",
    "start": "967839",
    "end": "970000"
  },
  {
    "text": "which in this case is",
    "start": "970000",
    "end": "972959"
  },
  {
    "text": "netbox",
    "start": "973079",
    "end": "976079"
  },
  {
    "text": "So for that I will first create a new",
    "start": "978680",
    "end": "982399"
  },
  {
    "text": "namespace called restoration That's just",
    "start": "982399",
    "end": "984800"
  },
  {
    "text": "for the for the sake of the example And",
    "start": "984800",
    "end": "987839"
  },
  {
    "text": "I will create three different prefixes",
    "start": "987839",
    "end": "989920"
  },
  {
    "text": "If we look at one of these uh",
    "start": "989920",
    "end": "994480"
  },
  {
    "text": "YAML we can see uh it's similar to what",
    "start": "998040",
    "end": "1001519"
  },
  {
    "text": "Leia showed earlier It's basically um",
    "start": "1001519",
    "end": "1004240"
  },
  {
    "text": "based on a parent prefix selector We",
    "start": "1004240",
    "end": "1006399"
  },
  {
    "text": "create a new prefix Um you can see there",
    "start": "1006399",
    "end": "1009199"
  },
  {
    "text": "is this preserve in netbox flag set to",
    "start": "1009199",
    "end": "1012240"
  },
  {
    "text": "true which basically tells netbox",
    "start": "1012240",
    "end": "1013920"
  },
  {
    "text": "operator if if the prefix is deleted",
    "start": "1013920",
    "end": "1016880"
  },
  {
    "text": "from the cube API don't delete it in",
    "start": "1016880",
    "end": "1021600"
  },
  {
    "text": "netbox and we also have a prefix length",
    "start": "1023240",
    "end": "1026400"
  },
  {
    "text": "of /32 which is basically the equivalent",
    "start": "1026400",
    "end": "1028959"
  },
  {
    "text": "of an IP address So we can ensure sticky",
    "start": "1028959",
    "end": "1031199"
  },
  {
    "text": "IP addresses by by using exactly that",
    "start": "1031199",
    "end": "1033600"
  },
  {
    "text": "feature So I will now apply these",
    "start": "1033600",
    "end": "1036280"
  },
  {
    "text": "resources and see uh if we get something",
    "start": "1036280",
    "end": "1039360"
  },
  {
    "text": "there",
    "start": "1039360",
    "end": "1042360"
  },
  {
    "text": "um so we now have three prefixes You can",
    "start": "1055720",
    "end": "1059360"
  },
  {
    "text": "see sample one has prefix zero Sample",
    "start": "1059360",
    "end": "1061760"
  },
  {
    "text": "two has prefix one Sample three has",
    "start": "1061760",
    "end": "1063679"
  },
  {
    "text": "prefix two So um nothing nothing special",
    "start": "1063679",
    "end": "1067919"
  },
  {
    "text": "here Let's delete these prefix prefixes",
    "start": "1067919",
    "end": "1071679"
  },
  {
    "text": "I I will do that based on the I I will",
    "start": "1071679",
    "end": "1074640"
  },
  {
    "text": "delete the entire namespace And now I",
    "start": "1074640",
    "end": "1077679"
  },
  {
    "text": "will create these resources in reverse",
    "start": "1077679",
    "end": "1080640"
  },
  {
    "text": "order to prove that we don't rely on the",
    "start": "1080640",
    "end": "1083440"
  },
  {
    "text": "order We just rely on something else",
    "start": "1083440",
    "end": "1088720"
  },
  {
    "text": "So when I create the first",
    "start": "1088720",
    "end": "1092000"
  },
  {
    "text": "one we do have some uh lease",
    "start": "1098440",
    "end": "1103600"
  },
  {
    "text": "uh lease problems sometimes So I will",
    "start": "1103600",
    "end": "1106320"
  },
  {
    "text": "delete these leases now which should",
    "start": "1106320",
    "end": "1109919"
  },
  {
    "text": "hopefully speed up things So when we",
    "start": "1109919",
    "end": "1113039"
  },
  {
    "text": "create when I create the the third",
    "start": "1113039",
    "end": "1115360"
  },
  {
    "text": "prefix now this will show you that that",
    "start": "1115360",
    "end": "1118880"
  },
  {
    "text": "we've successfully restored the same",
    "start": "1118880",
    "end": "1121200"
  },
  {
    "text": "prefix I will do the same with the",
    "start": "1121200",
    "end": "1123600"
  },
  {
    "text": "second and first and we should be able",
    "start": "1123600",
    "end": "1126160"
  },
  {
    "text": "to",
    "start": "1126160",
    "end": "1127160"
  },
  {
    "text": "see that we've actually restored the",
    "start": "1127160",
    "end": "1130400"
  },
  {
    "text": "same um prefixes This is done based on a",
    "start": "1130400",
    "end": "1134160"
  },
  {
    "text": "restoration hash that we compute based",
    "start": "1134160",
    "end": "1136160"
  },
  {
    "text": "on the immutable fields of the prefix",
    "start": "1136160",
    "end": "1138480"
  },
  {
    "text": "claim And the reason why we do that is",
    "start": "1138480",
    "end": "1141440"
  },
  {
    "text": "because some applications especially um",
    "start": "1141440",
    "end": "1145840"
  },
  {
    "text": "telco applications they need sticky IPs",
    "start": "1145840",
    "end": "1148320"
  },
  {
    "text": "because you have IP addresses in",
    "start": "1148320",
    "end": "1150520"
  },
  {
    "text": "configurations And if we use a dynamic",
    "start": "1150520",
    "end": "1153280"
  },
  {
    "text": "system like that we would really uh like",
    "start": "1153280",
    "end": "1155760"
  },
  {
    "text": "to avoid changing IP addresses too often",
    "start": "1155760",
    "end": "1158640"
  },
  {
    "text": "For instance you configure an IP address",
    "start": "1158640",
    "end": "1160400"
  },
  {
    "text": "of some core component in your run which",
    "start": "1160400",
    "end": "1163360"
  },
  {
    "text": "will lead to thousands of updates uh and",
    "start": "1163360",
    "end": "1166320"
  },
  {
    "text": "probably also downtime So that's why we",
    "start": "1166320",
    "end": "1168799"
  },
  {
    "text": "created this um restoration feature in",
    "start": "1168799",
    "end": "1171760"
  },
  {
    "text": "netbox",
    "start": "1171760",
    "end": "1172760"
  },
  {
    "text": "operator So that concludes our demo Um",
    "start": "1172760",
    "end": "1176880"
  },
  {
    "text": "we have two more demos in the git repo",
    "start": "1176880",
    "end": "1178799"
  },
  {
    "text": "One is about prefix exhaustion uh which",
    "start": "1178799",
    "end": "1181520"
  },
  {
    "text": "basically uh allows you to based on this",
    "start": "1181520",
    "end": "1184960"
  },
  {
    "text": "dynamic selection process to exhaust",
    "start": "1184960",
    "end": "1186960"
  },
  {
    "text": "prefixes But if you if you automate it",
    "start": "1186960",
    "end": "1189600"
  },
  {
    "text": "the correct way then we can overcome",
    "start": "1189600",
    "end": "1192080"
  },
  {
    "text": "that And the other one is multicluster",
    "start": "1192080",
    "end": "1194240"
  },
  {
    "text": "support So we support um consuming",
    "start": "1194240",
    "end": "1197520"
  },
  {
    "text": "netbox from multiple",
    "start": "1197520",
    "end": "1199720"
  },
  {
    "text": "clusters I will come back to this",
    "start": "1199720",
    "end": "1202000"
  },
  {
    "text": "productivity slide again because now we",
    "start": "1202000",
    "end": "1204799"
  },
  {
    "text": "we we see on the right side what we've",
    "start": "1204799",
    "end": "1206799"
  },
  {
    "text": "gained So what we've shown in these demo",
    "start": "1206799",
    "end": "1210000"
  },
  {
    "text": "demos is basically uh some are some",
    "start": "1210000",
    "end": "1212880"
  },
  {
    "text": "examples We don't show the entire",
    "start": "1212880",
    "end": "1214400"
  },
  {
    "text": "process of how we use netbox operator",
    "start": "1214400",
    "end": "1216799"
  },
  {
    "text": "but we really think that we can by using",
    "start": "1216799",
    "end": "1219360"
  },
  {
    "text": "netbox operator by using KRM um we can",
    "start": "1219360",
    "end": "1222880"
  },
  {
    "text": "really reduce our effort spent for",
    "start": "1222880",
    "end": "1225080"
  },
  {
    "text": "provisioning from days and weeks down to",
    "start": "1225080",
    "end": "1228720"
  },
  {
    "text": "minutes and hours So that's why we we're",
    "start": "1228720",
    "end": "1232080"
  },
  {
    "text": "doing this and that's basically the",
    "start": "1232080",
    "end": "1234400"
  },
  {
    "text": "success success story of this KRM",
    "start": "1234400",
    "end": "1237799"
  },
  {
    "text": "approach With that I will talk about",
    "start": "1237799",
    "end": "1240559"
  },
  {
    "text": "some of the use cases So you've seen the",
    "start": "1240559",
    "end": "1243200"
  },
  {
    "text": "metal LB case uh shown by Leia Um that's",
    "start": "1243200",
    "end": "1247880"
  },
  {
    "text": "basically including the so so we extend",
    "start": "1247880",
    "end": "1251200"
  },
  {
    "text": "that with um the the entire fabric",
    "start": "1251200",
    "end": "1253840"
  },
  {
    "text": "configuration uh like the the cluster",
    "start": "1253840",
    "end": "1256400"
  },
  {
    "text": "bootstrapping process Another use case",
    "start": "1256400",
    "end": "1258480"
  },
  {
    "text": "is the 5G core network function",
    "start": "1258480",
    "end": "1260640"
  },
  {
    "text": "configurations day zero and day one",
    "start": "1260640",
    "end": "1262480"
  },
  {
    "text": "There we we need this sticky IP feature",
    "start": "1262480",
    "end": "1265919"
  },
  {
    "text": "And the third use case that um another",
    "start": "1265919",
    "end": "1268400"
  },
  {
    "text": "team in Swisscom is working on is the",
    "start": "1268400",
    "end": "1270080"
  },
  {
    "text": "VNF",
    "start": "1270080",
    "end": "1272120"
  },
  {
    "text": "configuration Then what's coming up next",
    "start": "1272120",
    "end": "1274400"
  },
  {
    "text": "so we have a few things We will",
    "start": "1274400",
    "end": "1276799"
  },
  {
    "text": "certainly expand or explore more use",
    "start": "1276799",
    "end": "1279039"
  },
  {
    "text": "cases We will um discuss the potential",
    "start": "1279039",
    "end": "1282240"
  },
  {
    "text": "usage in pro project silva Um that would",
    "start": "1282240",
    "end": "1285840"
  },
  {
    "text": "certainly be interesting uh we will work",
    "start": "1285840",
    "end": "1288480"
  },
  {
    "text": "on enhancements of netbox operator be it",
    "start": "1288480",
    "end": "1290880"
  },
  {
    "text": "features or stability and then we will",
    "start": "1290880",
    "end": "1293600"
  },
  {
    "text": "evaluate or continue evaluating uh tools",
    "start": "1293600",
    "end": "1297039"
  },
  {
    "text": "like KCP or KRO you have seen KO um in",
    "start": "1297039",
    "end": "1301200"
  },
  {
    "text": "in Leia's demo and we will continue to",
    "start": "1301200",
    "end": "1304240"
  },
  {
    "text": "do",
    "start": "1304240",
    "end": "1305799"
  },
  {
    "text": "that and with that I ask you if you if",
    "start": "1305799",
    "end": "1308720"
  },
  {
    "text": "you're using Netbox in your system",
    "start": "1308720",
    "end": "1310559"
  },
  {
    "text": "please get started now by using the",
    "start": "1310559",
    "end": "1312320"
  },
  {
    "text": "Netbox operator give it a try have a",
    "start": "1312320",
    "end": "1314240"
  },
  {
    "text": "look how it how it works how it can suit",
    "start": "1314240",
    "end": "1316240"
  },
  {
    "text": "you and uh for sure automate your",
    "start": "1316240",
    "end": "1319440"
  },
  {
    "text": "infrastructure using KRM uh similar to",
    "start": "1319440",
    "end": "1322159"
  },
  {
    "text": "what CubNet is doing Please have a look",
    "start": "1322159",
    "end": "1324080"
  },
  {
    "text": "at these projects We really think that's",
    "start": "1324080",
    "end": "1325760"
  },
  {
    "text": "the way to go forward in the",
    "start": "1325760",
    "end": "1327960"
  },
  {
    "text": "industry On this slide you can find um",
    "start": "1327960",
    "end": "1331440"
  },
  {
    "text": "the QR codes to the Netbox operator Git",
    "start": "1331440",
    "end": "1334080"
  },
  {
    "text": "repo uh on the left side and on the",
    "start": "1334080",
    "end": "1335919"
  },
  {
    "text": "right side you can find these slides and",
    "start": "1335919",
    "end": "1338320"
  },
  {
    "text": "the the feedback um form And with that",
    "start": "1338320",
    "end": "1342240"
  },
  {
    "text": "thanks a lot for being here Thanks a lot",
    "start": "1342240",
    "end": "1344000"
  },
  {
    "text": "for your interest Um was a pleasure and",
    "start": "1344000",
    "end": "1347679"
  },
  {
    "text": "I think we do have three two three",
    "start": "1347679",
    "end": "1350320"
  },
  {
    "text": "minutes for",
    "start": "1350320",
    "end": "1353039"
  },
  {
    "text": "[Applause]",
    "start": "1355010",
    "end": "1363380"
  },
  {
    "text": "question Does anyone have a question i",
    "start": "1365240",
    "end": "1368960"
  },
  {
    "text": "don't know how it works here",
    "start": "1368960",
    "end": "1372760"
  },
  {
    "text": "Okay then Uh thanks a lot Enjoy the rest",
    "start": "1376720",
    "end": "1380559"
  },
  {
    "text": "of the day See you around",
    "start": "1380559",
    "end": "1384279"
  }
]