[
  {
    "text": "hi everyone thank you for being in the session uh today we will talk about some of the updates from SIG O uh both for a",
    "start": "320",
    "end": "8320"
  },
  {
    "text": "and authorization um and we will touch on upon a lot of features that are coming in uh v133 that's coming out in a",
    "start": "8320",
    "end": "16720"
  },
  {
    "text": "couple of weeks and then we will talk about some new features uh that are planned for future releases my name is",
    "start": "16720",
    "end": "23600"
  },
  {
    "text": "Rita uh I'm an engineer at Microsoft i'm also a SEO co-chair i am i'm also an",
    "start": "23600",
    "end": "30880"
  },
  {
    "text": "engineer in Microsoft and well I do all things well all things contributions in",
    "start": "30880",
    "end": "36000"
  },
  {
    "text": "sego that's true um and throughout the slide uh we will also be mentioning",
    "start": "36000",
    "end": "41040"
  },
  {
    "text": "contributors who are contributing to all the different features um because uh none of this would be possible without",
    "start": "41040",
    "end": "46960"
  },
  {
    "text": "the contributors so let's start with the graduated features",
    "start": "46960",
    "end": "54399"
  },
  {
    "text": "uh bound um service account token improvements this is a a kept an enhancement that has been uh done by Mo",
    "start": "54399",
    "end": "61920"
  },
  {
    "text": "James and Jordan for the past few releases and it's going to GA in 133 um",
    "start": "61920",
    "end": "67200"
  },
  {
    "text": "so what is this feature right so in the past when attempting to verify a service account token associated with a pod it",
    "start": "67200",
    "end": "74640"
  },
  {
    "text": "was very it wasn't possible to verify the pod associated to a specific node um",
    "start": "74640",
    "end": "80400"
  },
  {
    "text": "you would have to do a lot to get the relevant pod um get the pod object from",
    "start": "80400",
    "end": "85759"
  },
  {
    "text": "the private claim in the drop token and cross referencing that to find the specific node name um this feature",
    "start": "85759",
    "end": "93200"
  },
  {
    "text": "actually allows us to uh have a robust chain of identifi identity verification",
    "start": "93200",
    "end": "98799"
  },
  {
    "text": "all the way from the requester to um the projected token and and we want to get",
    "start": "98799",
    "end": "105680"
  },
  {
    "text": "the no object reference in the requested pod where it's embedded in the sign jot",
    "start": "105680",
    "end": "112560"
  },
  {
    "text": "this feature um incorporates additional claims like the node name uh and JTI in",
    "start": "112560",
    "end": "118399"
  },
  {
    "text": "the token itself so that we can do this traceability and prevent any replay attacks",
    "start": "118399",
    "end": "124960"
  },
  {
    "text": "uh cluster trust bundles so uh this feature uh makes it really easy for you",
    "start": "124960",
    "end": "131280"
  },
  {
    "text": "to install and maintain an additional trust in your cluster right so",
    "start": "131280",
    "end": "136560"
  },
  {
    "text": "previously if you wanted to add a trusted signer into your cluster you would probably have to juggle a lot of",
    "start": "136560",
    "end": "142879"
  },
  {
    "text": "config maps around and with the rotation those those were some some nightmares",
    "start": "142879",
    "end": "148080"
  },
  {
    "text": "out there and so we've got these cluster trust bundles which basically with which",
    "start": "148080",
    "end": "154239"
  },
  {
    "text": "basically you define uh your serer your trusted serer as an API object and then",
    "start": "154239",
    "end": "160239"
  },
  {
    "text": "in your ports you you just mount uh the trust uh the trust TR bundle of that",
    "start": "160239",
    "end": "167440"
  },
  {
    "text": "trusted object of trusted signer into your pots yi projected volume u so uh",
    "start": "167440",
    "end": "174720"
  },
  {
    "text": "yeah you know one of the showcases here was uh a ser for the QPS server that I",
    "start": "174720",
    "end": "183440"
  },
  {
    "text": "was actually adding in 132 uh so you you can see in the slide basically how do",
    "start": "183440",
    "end": "190000"
  },
  {
    "text": "how how you would work with these uh custom trust bundle objects right you you can see that a lot of it revolves",
    "start": "190000",
    "end": "196319"
  },
  {
    "text": "around the signers like the signers name and you you you basically as as a consumer of of trusts inside of a",
    "start": "196319",
    "end": "203840"
  },
  {
    "text": "cluster you you you can list all the signers you can decide who you want to trust and then you just simply mount it",
    "start": "203840",
    "end": "209040"
  },
  {
    "text": "inside of your uh of your pot and I just want to add to here started the original",
    "start": "209040",
    "end": "214400"
  },
  {
    "text": "design and stand made it possible to move to beta in 133 yep stand okay uh",
    "start": "214400",
    "end": "221760"
  },
  {
    "text": "next feature is fine grain cublet API authorization uh again this is graduating in beta le by vineiac um and",
    "start": "221760",
    "end": "230480"
  },
  {
    "text": "um there's not a lot of big changes for the beta release um and this feature basically enables admins to grant",
    "start": "230480",
    "end": "236159"
  },
  {
    "text": "specific granular permissions for endpoints um like config z and pause",
    "start": "236159",
    "end": "242799"
  },
  {
    "text": "without um resorting to granting a more broader proxy per permissions which is",
    "start": "242799",
    "end": "248400"
  },
  {
    "text": "the case today um this again aderes to the principle of lease privilege um and",
    "start": "248400",
    "end": "253439"
  },
  {
    "text": "allowing components such as logging and monitoring um agents to be able to access only the necessary cublet API",
    "start": "253439",
    "end": "260079"
  },
  {
    "text": "endpoints that it should have access to all right uh does this work yeah uh so you",
    "start": "260079",
    "end": "268560"
  },
  {
    "text": "may know that UIDs in and in Kubernetes clusters maybe don't seem as important but UIDs are actually quite or maybe",
    "start": "268560",
    "end": "275600"
  },
  {
    "text": "important in in some external systems right and uh so recently starting with",
    "start": "275600",
    "end": "281600"
  },
  {
    "text": "structured uh authentication uh you would start seeing UIDs appearing in",
    "start": "281600",
    "end": "287199"
  },
  {
    "text": "some of the authenticators that started with the OIDC and in 133 uh two other uh",
    "start": "287199",
    "end": "293680"
  },
  {
    "text": "authenticators were enhanced with UIDs uh so we had the uh UIDs uh being been",
    "start": "293680",
    "end": "302080"
  },
  {
    "text": "now honored in the uh client certificate authenticator uh where you would consume",
    "start": "302080",
    "end": "308800"
  },
  {
    "text": "the UID on on the API server from uh from the client certificate from a",
    "start": "308800",
    "end": "313919"
  },
  {
    "text": "specific relative uh the end in in the subject of the certificate right uh you",
    "start": "313919",
    "end": "319360"
  },
  {
    "text": "can see like the oid of the RDN here uh the reason I'm mentioning it like the",
    "start": "319360",
    "end": "325039"
  },
  {
    "text": "first part is like all the way until two it's uh do ID that is reserved by Anna",
    "start": "325039",
    "end": "331440"
  },
  {
    "text": "for CNCF and you can see that that it is folded by two and you may be wondering hm that's weird I wonder what's what",
    "start": "331440",
    "end": "338160"
  },
  {
    "text": "what happened with one we will get to that later u so that's one thing uh one",
    "start": "338160",
    "end": "343280"
  },
  {
    "text": "of the authenticators uh the other authenticator which actually graduated from uh the UID graduated from alpha to",
    "start": "343280",
    "end": "349919"
  },
  {
    "text": "beta was the request header authenticator uh so now in beta by",
    "start": "349919",
    "end": "355440"
  },
  {
    "text": "default the cube API server will always uh include the UID in the extreme remote",
    "start": "355440",
    "end": "361759"
  },
  {
    "text": "UID header uh however if you if you want to consume these headers you still need",
    "start": "361759",
    "end": "366960"
  },
  {
    "text": "to go through some configuration this doesn't happen by default but we'll be looking into that in the future",
    "start": "366960",
    "end": "372759"
  },
  {
    "text": "versions all right so these were the graduated features uh let's look at",
    "start": "372759",
    "end": "378240"
  },
  {
    "text": "what's upcoming and uh we will start here with the feature that I personally",
    "start": "378240",
    "end": "384800"
  },
  {
    "text": "am the most excited about not only because I got to work on it but you know",
    "start": "384800",
    "end": "390080"
  },
  {
    "text": "this this is a feature that actually will eventually when it reaches G it",
    "start": "390080",
    "end": "395600"
  },
  {
    "text": "should uh improve the security stance of Kubernetes by default so this is really",
    "start": "395600",
    "end": "401759"
  },
  {
    "text": "great and to introduce it to you so uh I'm not sure how many of you know that",
    "start": "401759",
    "end": "408800"
  },
  {
    "text": "when a bot uh tries to uh download a private image from a private repository",
    "start": "408800",
    "end": "414560"
  },
  {
    "text": "right you specify your uh image pull secret in in in your pod manifest and",
    "start": "414560",
    "end": "420199"
  },
  {
    "text": "you you know the the the container image eventually gets downloaded on the node but from this point when the image",
    "start": "420199",
    "end": "427440"
  },
  {
    "text": "actually makes it onto the node uh any other pot that is capable of running or",
    "start": "427440",
    "end": "432880"
  },
  {
    "text": "can can which can be scheduled on the node can use that pot even without any",
    "start": "432880",
    "end": "438720"
  },
  {
    "text": "other you know additional credentials that that the original bot had to had to use and so up until now what you have to",
    "start": "438720",
    "end": "446319"
  },
  {
    "text": "do is you would have to turn on special admission that would just turn your image pool policy into always and with",
    "start": "446319",
    "end": "454240"
  },
  {
    "text": "this feature however uh we were looking we started looking into this and uh so",
    "start": "454240",
    "end": "460080"
  },
  {
    "text": "for every pull that the cub does we actually record uh the the information",
    "start": "460080",
    "end": "465520"
  },
  {
    "text": "about the pool like about the credentials used and and such",
    "start": "465520",
    "end": "470680"
  },
  {
    "text": "and whenever any other pot tries to uh tries to access the image which is on",
    "start": "470680",
    "end": "476400"
  },
  {
    "text": "the node which was pulled by uh by the cube we check the uh credentials that",
    "start": "476400",
    "end": "482720"
  },
  {
    "text": "the bot is presenting the the cublet you know when when it's trying to access the image and when we see that uh these",
    "start": "482720",
    "end": "490639"
  },
  {
    "text": "credentials were not previously used to successfully pull the image we just uh we just push uh the pot to uh to go or",
    "start": "490639",
    "end": "499520"
  },
  {
    "text": "the pool to go uh through the register authentication again um and yeah so so",
    "start": "499520",
    "end": "505039"
  },
  {
    "text": "this is this is really great uh so it not only as you can see it not not only",
    "start": "505039",
    "end": "510240"
  },
  {
    "text": "like uh uh removes this like weird behavior of the image pool policies uh",
    "start": "510240",
    "end": "516800"
  },
  {
    "text": "if not present and never uh but also like eventually it should remove uh the",
    "start": "516800",
    "end": "524159"
  },
  {
    "text": "uh container registry from the critical path when uh you know so so when when",
    "start": "524159",
    "end": "529200"
  },
  {
    "text": "previously you would have to use the always put policy and you would always have to query it so I think it's it's really exciting i hope that you will be",
    "start": "529200",
    "end": "536160"
  },
  {
    "text": "excited about this just as I am and yeah uh it only says my name here in the",
    "start": "536160",
    "end": "541680"
  },
  {
    "text": "slide but this was really a group effort that these were there were many hours of",
    "start": "541680",
    "end": "546959"
  },
  {
    "text": "many people invested into it uh not not only sig like me and Jordan jordan did",
    "start": "546959",
    "end": "552080"
  },
  {
    "text": "really great job on reviewing and design like helping design all all this but also the sign group we spent many hours",
    "start": "552080",
    "end": "559519"
  },
  {
    "text": "designing this i spent many many hours implementing this but yeah uh really",
    "start": "559519",
    "end": "565519"
  },
  {
    "text": "exciting another feature called service account image pull credential which is very",
    "start": "565640",
    "end": "573200"
  },
  {
    "text": "similar uh in the same space where today admins are limited to using long lived",
    "start": "573200",
    "end": "579920"
  },
  {
    "text": "hard to rotate image pole secrets right that are stored directly in the",
    "start": "579920",
    "end": "586240"
  },
  {
    "text": "kubernetes API or secrets that are managed um at the cublet level uh via a",
    "start": "586240",
    "end": "592160"
  },
  {
    "text": "cublet credential provider this means that any pod running in on the node can",
    "start": "592160",
    "end": "598000"
  },
  {
    "text": "access those images um and a pod should instead be able to use its own identity",
    "start": "598000",
    "end": "604000"
  },
  {
    "text": "to pull the image that it should have access to so this particular feature was",
    "start": "604000",
    "end": "609120"
  },
  {
    "text": "worked on by a niche um and is a part of a bigger effort to reduce reliance on",
    "start": "609120",
    "end": "614640"
  },
  {
    "text": "long live secrets uh in Kubernetes um it allows the cublet to request shortlived",
    "start": "614640",
    "end": "620800"
  },
  {
    "text": "tokens tailored to specific audience this uses a projected service account",
    "start": "620800",
    "end": "626000"
  },
  {
    "text": "token for cublet image credential providers enabling dynamic configuration",
    "start": "626000",
    "end": "631519"
  },
  {
    "text": "of service account names and audience for token",
    "start": "631519",
    "end": "636639"
  },
  {
    "text": "requests uh another feature uh is called the DRA admin access um so for those of",
    "start": "639079",
    "end": "645120"
  },
  {
    "text": "you who are familiar uh DRA stands for dynamic resource allocation this is",
    "start": "645120",
    "end": "650399"
  },
  {
    "text": "something SIG O worked with SIG node on um basically the feature introduces",
    "start": "650399",
    "end": "655680"
  },
  {
    "text": "bunch of APIs that facilitates dynamic requesting and sharing of resources like",
    "start": "655680",
    "end": "661440"
  },
  {
    "text": "GPUs or other specialized hardware between pods and containers to enhance",
    "start": "661440",
    "end": "666640"
  },
  {
    "text": "resource allocation now in 133 as an alpha feature now only",
    "start": "666640",
    "end": "673360"
  },
  {
    "text": "users that are authorized to create resource claims and resource claim templates with elevated privilege can",
    "start": "673360",
    "end": "680800"
  },
  {
    "text": "basically roll out workloads that to manage devices that are allocated and",
    "start": "680800",
    "end": "686160"
  },
  {
    "text": "used by other users and this is only possible for namespaces",
    "start": "686160",
    "end": "692240"
  },
  {
    "text": "that have this specific resource cateio admin access true label again to ensure",
    "start": "692240",
    "end": "699160"
  },
  {
    "text": "non-admins cannot misuse the field so as you can see that's an example of a",
    "start": "699160",
    "end": "704880"
  },
  {
    "text": "resource claim template using the admin access",
    "start": "704880",
    "end": "709920"
  },
  {
    "text": "feature uh and I should say uh at the beginning of the talk that we we have three demos so if time permits we'll",
    "start": "710279",
    "end": "717440"
  },
  {
    "text": "show all three um the next feature is called external signing for service account tokens um this is something",
    "start": "717440",
    "end": "724399"
  },
  {
    "text": "Jordan Samuel Harshel worked on um uh and there's bunch of uh changes in 133",
    "start": "724399",
    "end": "731040"
  },
  {
    "text": "so today when we think about token signing it is done in process with local",
    "start": "731040",
    "end": "737120"
  },
  {
    "text": "private key files this feature adds the ability to allow the Kubernetes API",
    "start": "737120",
    "end": "743920"
  },
  {
    "text": "servers to make gRPC calls to for token signing with external systems like KMS",
    "start": "743920",
    "end": "751680"
  },
  {
    "text": "um making it easier for for you to do key rotation key verification and audit",
    "start": "751680",
    "end": "757680"
  },
  {
    "text": "um and reducing the need for the Kubernetes API server to manage signing",
    "start": "757680",
    "end": "762959"
  },
  {
    "text": "key directly and offload that responsibility to a external search system",
    "start": "762959",
    "end": "770240"
  },
  {
    "text": "all right p oh yeah good uh so P certificates that's uh another big thing",
    "start": "771120",
    "end": "777120"
  },
  {
    "text": "uh that here is working on it's it's another uh certificate feature uh this one lets you uh easily mint certificates",
    "start": "777120",
    "end": "786079"
  },
  {
    "text": "client certificates for your service account identities um this is that there is a currently",
    "start": "786079",
    "end": "793120"
  },
  {
    "text": "like a huge PR which we are all reviewing uh done by Tahir and it",
    "start": "793120",
    "end": "798720"
  },
  {
    "text": "introduces new API there are parts of node authorization that that there there",
    "start": "798720",
    "end": "805360"
  },
  {
    "text": "are all all these things and yeah eventually hopefully we we will get to a point where uh where minting",
    "start": "805360",
    "end": "811920"
  },
  {
    "text": "certificates for for your service accounts will be really easy and Yeah",
    "start": "811920",
    "end": "817880"
  },
  {
    "text": "yeah and identity for service account is represented by the structure that you",
    "start": "817880",
    "end": "823200"
  },
  {
    "text": "can see here and maybe if you remember the original slides and and the oid you will see where that num number one for",
    "start": "823200",
    "end": "830959"
  },
  {
    "text": "CNCF group went so it was it was decided in",
    "start": "830959",
    "end": "837120"
  },
  {
    "text": "here okay uh so there there are some other features i was specifically told that uh you know Siga hasn't done the",
    "start": "837160",
    "end": "844800"
  },
  {
    "text": "planning for 134 yet so you know the the the numbers may change but these are these are things which are currently in",
    "start": "844800",
    "end": "851680"
  },
  {
    "text": "flight uh namely the harden of cubat 7 ser validation is a feature that will",
    "start": "851680",
    "end": "858720"
  },
  {
    "text": "add additional check for the cube API server when it's trying to connect to the cublet u you know beside the normal",
    "start": "858720",
    "end": "866240"
  },
  {
    "text": "host name validation uh the cube server will also check that the host name actually matches what what the cube API",
    "start": "866240",
    "end": "873360"
  },
  {
    "text": "server would expect because it knows which node is connecting to so that's that's just one add additional check",
    "start": "873360",
    "end": "878800"
  },
  {
    "text": "there u there's also the extension of the node restriction to service accounts",
    "start": "878800",
    "end": "884639"
  },
  {
    "text": "so when you have workloads which may you know like like Damon says which are just",
    "start": "884639",
    "end": "890560"
  },
  {
    "text": "labeling nodes for so so you can schedule some specific workloads on them",
    "start": "890560",
    "end": "895839"
  },
  {
    "text": "uh you don't actually need those service accounts to do more than just like access the specific node object and so",
    "start": "895839",
    "end": "901519"
  },
  {
    "text": "this is this is exactly what uh this particular feature is about",
    "start": "901519",
    "end": "907440"
  },
  {
    "text": "okay and um the next one is PSA restrictions for probes host fields um",
    "start": "907519",
    "end": "913040"
  },
  {
    "text": "for those of you who thought we were done with PSA not quite um there's always new vulnerabilities and new ways",
    "start": "913040",
    "end": "918800"
  },
  {
    "text": "to protect your clusters um so with this new PSA control that is still getting",
    "start": "918800",
    "end": "924320"
  },
  {
    "text": "worked in progress um and it's hopefully going to alpha in 134 um Sora is working",
    "start": "924320",
    "end": "931279"
  },
  {
    "text": "on a design for this right now um and this control basically restricts setting the dohost file in probe handler and",
    "start": "931279",
    "end": "939440"
  },
  {
    "text": "life cycle handler configurations this is to mitigate potential server side request forgery vulnerabilities that",
    "start": "939440",
    "end": "946560"
  },
  {
    "text": "could result in imp from improper configurations uh of probes or life",
    "start": "946560",
    "end": "951920"
  },
  {
    "text": "cycle handlers so look for that all right demo time yay",
    "start": "951920",
    "end": "960920"
  },
  {
    "text": "all right so the first demo is um the DR ammon access feature we'll probably have",
    "start": "961839",
    "end": "967279"
  },
  {
    "text": "to click it on the other screen let's see click oh no click okay so maybe",
    "start": "967279",
    "end": "975279"
  },
  {
    "text": "before Oops did it stop okay so maybe before the demo starts um so think of a",
    "start": "975279",
    "end": "981920"
  },
  {
    "text": "uh so this example basically talks about let's say you have a cluster with GPUs",
    "start": "981920",
    "end": "987360"
  },
  {
    "text": "and you want to make sure um your normal users can allocate workloads that request certain amount of GPUs but for",
    "start": "987360",
    "end": "994480"
  },
  {
    "text": "ammon tasks you don't you want to run those ammon tasks but you don't want to actually um prevent normal users from",
    "start": "994480",
    "end": "1002240"
  },
  {
    "text": "allocating those resources so that's what this feature is about now without this feature what it means is when an",
    "start": "1002240",
    "end": "1008639"
  },
  {
    "text": "admin tries to get access to the GPUs or certain hardware it would basically",
    "start": "1008639",
    "end": "1014480"
  },
  {
    "text": "prevent them from using that be or once the resource is allocated that the normal users can't use those resources",
    "start": "1014480",
    "end": "1023199"
  },
  {
    "text": "i can just click it now oh think it went to the next demo uh did",
    "start": "1023199",
    "end": "1028798"
  },
  {
    "text": "it okay i'll click it here if I get there all right where's my cursor here",
    "start": "1028799",
    "end": "1034079"
  },
  {
    "text": "all right technologies can you see this",
    "start": "1034079",
    "end": "1039720"
  },
  {
    "text": "clearly okay so basically here we have um a kind cluster with the uh alpha",
    "start": "1039720",
    "end": "1046160"
  },
  {
    "text": "feature enabled with bunch of DRA feature flags um and as you can see here we have bunch of work worker uh nodes",
    "start": "1046160",
    "end": "1054640"
  },
  {
    "text": "with GPUs allocated um and here we have bunch of um regular let's say AI",
    "start": "1054640",
    "end": "1061440"
  },
  {
    "text": "workloads that request bunch of um resource claims and using uh resource",
    "start": "1061440",
    "end": "1067360"
  },
  {
    "text": "claim templates that request uh say n number of GPUs and once this is deployed",
    "start": "1067360",
    "end": "1074080"
  },
  {
    "text": "um then all those GPUs are now allocated or assigned so any future um request",
    "start": "1074080",
    "end": "1081360"
  },
  {
    "text": "that uses the same uh resource claim would not be able to get any right",
    "start": "1081360",
    "end": "1086400"
  },
  {
    "text": "because they're already used or in use so next we have another work oh wait what am I looking",
    "start": "1086400",
    "end": "1094039"
  },
  {
    "text": "at uh okay so as you can see all u all the",
    "start": "1094039",
    "end": "1099520"
  },
  {
    "text": "GPUs across all the um worker nodes are now allocated and assigned",
    "start": "1099520",
    "end": "1106600"
  },
  {
    "text": "reserved and as you can see these are the um uh resource slices that shows the",
    "start": "1106600",
    "end": "1112240"
  },
  {
    "text": "GPUs are currently being used uh next we",
    "start": "1112240",
    "end": "1117880"
  },
  {
    "text": "have see this is another admin uh pod that an",
    "start": "1117880",
    "end": "1124320"
  },
  {
    "text": "admin is trying to allocate resource and as you can see it's getting an error that hey it looks like you can't",
    "start": "1124320",
    "end": "1129760"
  },
  {
    "text": "allocate this because all the GPUs are gone like I'm sure all of you have gotten um so in order for us to run this",
    "start": "1129760",
    "end": "1137679"
  },
  {
    "text": "type of um uh task let's say you're trying to get some metrics from the GPUs",
    "start": "1137679",
    "end": "1143200"
  },
  {
    "text": "or you're trying to get some health metrics right um so what what we would",
    "start": "1143200",
    "end": "1148559"
  },
  {
    "text": "like to do is actually update this uh pod yaml to use another resource claim",
    "start": "1148559",
    "end": "1154480"
  },
  {
    "text": "that is using the admin access feature but before it can do that um first we",
    "start": "1154480",
    "end": "1162720"
  },
  {
    "text": "need to make sure we're can't see",
    "start": "1162720",
    "end": "1167520"
  },
  {
    "text": "this it's my computer it's actually I think it stopped did it",
    "start": "1172280",
    "end": "1178480"
  },
  {
    "text": "no no it's good okay",
    "start": "1178480",
    "end": "1182520"
  },
  {
    "text": "okay um so now as you can see it's trying to use the resource claim but it",
    "start": "1189760",
    "end": "1194880"
  },
  {
    "text": "notices that it can't schedule the resource claim because it's not in a namespace that's dedicated to run admin",
    "start": "1194880",
    "end": "1201440"
  },
  {
    "text": "tasks so next what we want to do um is basically um create a namespace and and",
    "start": "1201440",
    "end": "1209679"
  },
  {
    "text": "label it with the um Kubernetes um name uh label to make sure that this",
    "start": "1209679",
    "end": "1216000"
  },
  {
    "text": "namespace can run ammon tasks um and next we want to uh update the um pod",
    "start": "1216000",
    "end": "1221919"
  },
  {
    "text": "yaml to use the new resource claim and the new namespace",
    "start": "1221919",
    "end": "1227720"
  },
  {
    "text": "so here as you can see the new pod got um alloc or got scheduled and it's able",
    "start": "1227760",
    "end": "1233440"
  },
  {
    "text": "to run successfully um and next we see that",
    "start": "1233440",
    "end": "1241159"
  },
  {
    "text": "um that it is running successfully so yeah next",
    "start": "1242679",
    "end": "1250080"
  },
  {
    "text": "[Applause] demo all right now I need to find my",
    "start": "1250610",
    "end": "1257760"
  },
  {
    "text": "cursor yeah my computer is a little cursed but hopefully you'll you'll be able to see something so in this demo",
    "start": "1257760",
    "end": "1263760"
  },
  {
    "text": "you will see a bot failed to launch uh that's basically it on the left side you can see uh you know u the old behavior",
    "start": "1263760",
    "end": "1272640"
  },
  {
    "text": "uh this is this is by the way the demo for secret put images uh on the right side you can see uh a cluster with uh",
    "start": "1272640",
    "end": "1279760"
  },
  {
    "text": "the feature uh enabled the feature that prevents you know the the unverified",
    "start": "1279760",
    "end": "1285760"
  },
  {
    "text": "um u image container image use so first",
    "start": "1285760",
    "end": "1291760"
  },
  {
    "text": "uh we you know we will be using uh an image which uh is from in a private",
    "start": "1291760",
    "end": "1298240"
  },
  {
    "text": "organization uh so we will create a bot just to see uh this fail um so you can",
    "start": "1298240",
    "end": "1304400"
  },
  {
    "text": "see that uh you can see that I made a typo there",
    "start": "1304400",
    "end": "1310240"
  },
  {
    "text": "but uh you can see that that the image actually failed to pull uh because it didn't have any authorization because we",
    "start": "1310240",
    "end": "1315840"
  },
  {
    "text": "didn't supply any credentials for it to be pulled right and so that is all good",
    "start": "1315840",
    "end": "1322360"
  },
  {
    "text": "um so we we just didn't delete that port because we don't need it for now u so",
    "start": "1322360",
    "end": "1328000"
  },
  {
    "text": "next we will create a pool secret that we will later use we will use it real",
    "start": "1328000",
    "end": "1333440"
  },
  {
    "text": "soon in fact so you can see here is is a pod that actually specifies that that",
    "start": "1333440",
    "end": "1339280"
  },
  {
    "text": "secret that we just uh created for for the pool and it will use that to reach out",
    "start": "1339280",
    "end": "1347520"
  },
  {
    "text": "to the registry and just represent the credential to it so we are creating pod",
    "start": "1347520",
    "end": "1353120"
  },
  {
    "text": "and as you can see uh this was really the thing that made the previous bot fail to start because the image wouldn't",
    "start": "1353120",
    "end": "1360480"
  },
  {
    "text": "pull all right um so uh next uh what what you will see",
    "start": "1360480",
    "end": "1366799"
  },
  {
    "text": "is we will just create the old pool which was uh I call it broken um and now",
    "start": "1366799",
    "end": "1373440"
  },
  {
    "text": "we will uh see what what actually happened or didn't happen eventually",
    "start": "1373440",
    "end": "1379600"
  },
  {
    "text": "hopefully the video didn't stop there it is so now that we can actually see Yep",
    "start": "1379600",
    "end": "1386880"
  },
  {
    "text": "you can actually see that with the new uh setup the the image failed bull",
    "start": "1386880",
    "end": "1392320"
  },
  {
    "text": "whereas with the old setup you know the the the image the the the pot still started even though it didn't have the",
    "start": "1392320",
    "end": "1398400"
  },
  {
    "text": "credentials to actually use uh use that container image and here on the right side you can you can just see the proof",
    "start": "1398400",
    "end": "1404559"
  },
  {
    "text": "that the image actually failed to pull because it was oh yeah because it was just forced to to repool the the image",
    "start": "1404559",
    "end": "1411919"
  },
  {
    "text": "registry and here here for completeness you just see uh that even with the pull",
    "start": "1411919",
    "end": "1417440"
  },
  {
    "text": "u pull policy never uh your image will still not be used instead uh the pot",
    "start": "1417440",
    "end": "1423120"
  },
  {
    "text": "with in the new configuration will just fail to start so yeah on the left side old cluster right side new cluster yay",
    "start": "1423120",
    "end": "1431440"
  },
  {
    "text": "multi-tenency multi-tenency yeah here here I'm just uh showing you",
    "start": "1431440",
    "end": "1438400"
  },
  {
    "text": "know what what happens uh when you say say I live in in a different um",
    "start": "1438400",
    "end": "1444200"
  },
  {
    "text": "different name space here I made a typo so so the pot isn't actually there but I will create it inside of the new",
    "start": "1444200",
    "end": "1450400"
  },
  {
    "text": "namespace again so first you know showing the broken part you can see uh",
    "start": "1450400",
    "end": "1456880"
  },
  {
    "text": "that again old old custer running new custer fail to fail to start the image",
    "start": "1456880",
    "end": "1462080"
  },
  {
    "text": "but that's that's not the important part here uh next you will see uh me creating",
    "start": "1462080",
    "end": "1467679"
  },
  {
    "text": "uh the image with uh well the secret and then the uh the image actually u",
    "start": "1467679",
    "end": "1474320"
  },
  {
    "text": "actually using that secret uh to pull uh to pull the image again although this",
    "start": "1474320",
    "end": "1480159"
  },
  {
    "text": "time it will actually not pull it but it will use uh the image from the node so",
    "start": "1480159",
    "end": "1485600"
  },
  {
    "text": "you can see both PS are running as expected right we we have we have the secret and then uh we'll be listing the",
    "start": "1485600",
    "end": "1492799"
  },
  {
    "text": "events uh and yeah this is a little messy but eventually I find the right",
    "start": "1492799",
    "end": "1498799"
  },
  {
    "text": "event there which says that let's see",
    "start": "1498799",
    "end": "1504279"
  },
  {
    "text": "data which says that the image was actually used from inside of node and",
    "start": "1504279",
    "end": "1510880"
  },
  {
    "text": "yeah oh you you can see that that the image improved a little bit right Yeah I",
    "start": "1510880",
    "end": "1516000"
  },
  {
    "text": "think that's Yeah that's that's probably fine for this demo yeah the anonymous failed",
    "start": "1516000",
    "end": "1522480"
  },
  {
    "text": "exactly yeah yeah yeah yeah and we have one more demo here is",
    "start": "1522480",
    "end": "1528000"
  },
  {
    "text": "this uh No this is the this is the the other one but we have one more demo here let's",
    "start": "1528000",
    "end": "1534720"
  },
  {
    "text": "see the time yeah I think we should be good right so this demo just uh shows",
    "start": "1534720",
    "end": "1540880"
  },
  {
    "text": "how you would use the cluster just bundles um if it starts it starts yeah uh here",
    "start": "1540880",
    "end": "1547919"
  },
  {
    "text": "you can see uh we we are configuring the uh feature gates on the API server the controller manager and cubat in control",
    "start": "1547919",
    "end": "1555120"
  },
  {
    "text": "manager this is basically just so that the trust bundle for the cube API server is published and it's not very important",
    "start": "1555120",
    "end": "1561360"
  },
  {
    "text": "for this demo but I'm using this for testing and in cublat this dis this allows the cluster trust bundle",
    "start": "1561360",
    "end": "1566720"
  },
  {
    "text": "projection into the pots and on the API server obviously we we need the APIs and",
    "start": "1566720",
    "end": "1572000"
  },
  {
    "text": "the arpegg for all that so again we create a name space for testing um we",
    "start": "1572000",
    "end": "1578080"
  },
  {
    "text": "create a secret service with with ser certificate and key for the service that we will be",
    "start": "1578080",
    "end": "1584880"
  },
  {
    "text": "running right we can you can see that uh the issuer is standable at test CA and",
    "start": "1584880",
    "end": "1591760"
  },
  {
    "text": "uh this is uh this is the DNS sign for it u and this is the CA that's signed uh",
    "start": "1591760",
    "end": "1598720"
  },
  {
    "text": "the ser certificate so yeah you know it's self signed obviously way um so in",
    "start": "1598720",
    "end": "1605360"
  },
  {
    "text": "the next step I should be creating uh the cluster trust bundle for this CA",
    "start": "1605360",
    "end": "1610440"
  },
  {
    "text": "right uh let's see it happen yeah uh so the cluster test bundle looks like this you can see it has a certain name which",
    "start": "1610440",
    "end": "1618240"
  },
  {
    "text": "has a very specific format to cluster test bundles this is a serer name so the the name of the cluster test bundle",
    "start": "1618240",
    "end": "1624640"
  },
  {
    "text": "object is actually derived from the signer name and uh yeah you you've got labels which are also important for uh",
    "start": "1624640",
    "end": "1632320"
  },
  {
    "text": "for how you mount uh or how you request the mount inside of the pot so we create",
    "start": "1632320",
    "end": "1638799"
  },
  {
    "text": "this uh clust bundle object and then yeah then then we are basically creating",
    "start": "1638799",
    "end": "1644720"
  },
  {
    "text": "just a service this is an echo http server which basically like send sends back information about the request that",
    "start": "1644720",
    "end": "1651200"
  },
  {
    "text": "you made to it and you can see that it is serving with a with a SER file and key file that we just created uh here I",
    "start": "1651200",
    "end": "1658480"
  },
  {
    "text": "made a typo um but here is yeah here here's just a service for for the pot so",
    "start": "1658480",
    "end": "1664000"
  },
  {
    "text": "that you know it it matches the uh the hosting match and u yeah here is a",
    "start": "1664000",
    "end": "1671760"
  },
  {
    "text": "client port which will just you know uh curl the uh the endpoint uh of uh of the",
    "start": "1671760",
    "end": "1678240"
  },
  {
    "text": "HTTP service we just created it will use the uh it will use the",
    "start": "1678240",
    "end": "1683640"
  },
  {
    "text": "caert from inside of u of the clust",
    "start": "1683640",
    "end": "1688720"
  },
  {
    "text": "bundle volume which is specified down here you can see the way how the clust bundle volume is is actually specified",
    "start": "1688720",
    "end": "1695520"
  },
  {
    "text": "here's a sign name and here is a label selector which which actually uh lets you pick you know specific CA you can",
    "start": "1695520",
    "end": "1702480"
  },
  {
    "text": "also like pick pick a few this could also like pick a few of them like you know previous and the new one so that",
    "start": "1702480",
    "end": "1708880"
  },
  {
    "text": "you can rotate a little bit more easier uh and here you can see uh that the client already uh finished and I will",
    "start": "1708880",
    "end": "1716320"
  },
  {
    "text": "also show the logs of it and yeah uh basically here I'm showing uh that this",
    "start": "1716320",
    "end": "1723200"
  },
  {
    "text": "is exact this is yeah this this is uh the you can see the",
    "start": "1723200",
    "end": "1728520"
  },
  {
    "text": "servic and you can see that the CA file which you specified in part was being used for for this successful pull or",
    "start": "1728520",
    "end": "1736679"
  },
  {
    "text": "request yep and uh so That's it for the demos uh",
    "start": "1736679",
    "end": "1744080"
  },
  {
    "text": "and uh this slide will will take like this QR code will take you to the description",
    "start": "1744080",
    "end": "1750000"
  },
  {
    "text": "of of the sego group what we do how we meet uh and when u and basically all the",
    "start": "1750000",
    "end": "1756159"
  },
  {
    "text": "information about about the group and with all that I think now is a good time for questions we've got five minutes",
    "start": "1756159",
    "end": "1763460"
  },
  {
    "text": "[Applause]",
    "start": "1763460",
    "end": "1771169"
  },
  {
    "text": "there's one question back i see",
    "start": "1773039",
    "end": "1777480"
  },
  {
    "text": "oh sorry um related to the pod image pulling you",
    "start": "1783200",
    "end": "1788240"
  },
  {
    "text": "said that one pod can pull the image and then if another one uh wants to pull it",
    "start": "1788240",
    "end": "1794559"
  },
  {
    "text": "then it needs to reau authenticate to the registry what happens if for a",
    "start": "1794559",
    "end": "1800440"
  },
  {
    "text": "reason um the pod gets evicted deleted whatever",
    "start": "1800440",
    "end": "1805919"
  },
  {
    "text": "what will the new pod do uh do you mean like the pod that previously successfully pulled it it doesn't matter",
    "start": "1805919",
    "end": "1812399"
  },
  {
    "text": "these uh the the records are actually persisted on uh on the node right and",
    "start": "1812399",
    "end": "1817919"
  },
  {
    "text": "eventually they may be uh they may be like cleaned up but uh yeah those are",
    "start": "1817919",
    "end": "1824720"
  },
  {
    "text": "usually persisted actually right so if the second pod has the same secret if the second yeah if the second pod has",
    "start": "1824720",
    "end": "1830000"
  },
  {
    "text": "the same secret uh it's it's fine the the the request will not go uh to the",
    "start": "1830000",
    "end": "1835360"
  },
  {
    "text": "image registry right because yeah",
    "start": "1835360",
    "end": "1839520"
  },
  {
    "text": "Okay any other questions",
    "start": "1842520",
    "end": "1847080"
  },
  {
    "text": "go try all the new features oh yeah please [Applause]",
    "start": "1848559",
    "end": "1857820"
  }
]