[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "B you hello everyone my name is n Agarwal I'm a Dev manager at Microsoft I",
    "start": "599",
    "end": "7640"
  },
  {
    "text": "work in Azure container networking network security policies and observability for Azure kuber services",
    "start": "7640",
    "end": "14879"
  },
  {
    "text": "and along with that I'm also actively involved in an ongoing discussion for a cap for multi Network in a Sig multi",
    "start": "14879",
    "end": "21080"
  },
  {
    "text": "Network group and with me hello everyone my name is Aran kangaru I'm a the simic engineer at n",
    "start": "21080",
    "end": "28519"
  },
  {
    "text": "I've been involved with the kubernets community and a buil software based on kuber since",
    "start": "28519",
    "end": "34040"
  },
  {
    "start": "34000",
    "end": "495000"
  },
  {
    "text": "2016 so today we are going to talk about how we have implemented Network isolation in a shared multitenant",
    "start": "34239",
    "end": "40840"
  },
  {
    "text": "cluster so before we start let's quickly go through the agenda we are going to talk about the basic principles of",
    "start": "40840",
    "end": "47320"
  },
  {
    "text": "kubernetes multitenancy what are the existing scenarios that exist today that solve some of the crucial network",
    "start": "47320",
    "end": "53600"
  },
  {
    "text": "multitenancy is scenarios how we have enhanced those scenarios and added Network isolation on",
    "start": "53600",
    "end": "60239"
  },
  {
    "text": "a shared multi-end cluster and last but not at all the least we have a very promising demo followed by question and",
    "start": "60239",
    "end": "66640"
  },
  {
    "text": "answers so with that I give the floor to Arland to start thanks",
    "start": "66640",
    "end": "73560"
  },
  {
    "text": "now so as M mentioned there are different definitions for multi-tenancy based on the context for the purpose of",
    "start": "73560",
    "end": "80240"
  },
  {
    "text": "this talk we're going to Define multitenancy as running multiple instances of the same application or different applications with some level",
    "start": "80240",
    "end": "86960"
  },
  {
    "text": "of isolation on shared infrastructure there are two main reasons for doing",
    "start": "86960",
    "end": "92680"
  },
  {
    "text": "that one is reduce cost by consolidating many applications on fewer VMS and",
    "start": "92680",
    "end": "98840"
  },
  {
    "text": "clusters we can reduce costs there are fewer um you know VMS to manage less",
    "start": "98840",
    "end": "103920"
  },
  {
    "text": "cluster management fees that all hypers scalers charge um and the second reason scale",
    "start": "103920",
    "end": "109920"
  },
  {
    "text": "because now there are a larger pool of resources available to Any Given application so the potential for uh",
    "start": "109920",
    "end": "115040"
  },
  {
    "text": "scale is much higher now as moan mentioned there are two main considerations here one is security the",
    "start": "115040",
    "end": "122119"
  },
  {
    "text": "fact that applications from different tenants sometimes um or um you know they",
    "start": "122119",
    "end": "129000"
  },
  {
    "text": "don't know each other or they can be adversarial in our applications that can run on the same um infrastructure can run and the second problem is that",
    "start": "129000",
    "end": "136120"
  },
  {
    "text": "applications can adversely affect each other's performance commonly known as the Noisy Neighbor",
    "start": "136120",
    "end": "142680"
  },
  {
    "text": "problem now as far as state of multi tennis in kubernetes there are different implementations within kubernetes and",
    "start": "145120",
    "end": "150720"
  },
  {
    "text": "outside of kubernetes as far as compute Linux namespaces and cgroups are common ways to isolate processes running on the",
    "start": "150720",
    "end": "157519"
  },
  {
    "text": "same host if you want even higher isolation you can run sandbox SPS examples of them are C containers gvisor",
    "start": "157519",
    "end": "164680"
  },
  {
    "text": "and hyperv um that provide caral level isolation just like virtual machines as",
    "start": "164680",
    "end": "171560"
  },
  {
    "text": "far as storage there are some objects that are Nam space some that are not plus um different storage protocols like",
    "start": "171560",
    "end": "178480"
  },
  {
    "text": "um NFS SNB um or different storage platforms they have different ways of restricting access to volumes and",
    "start": "178480",
    "end": "184799"
  },
  {
    "text": "files as far as networking that's the main focus of this talk so we cover that um quite extensively later and in",
    "start": "184799",
    "end": "192000"
  },
  {
    "text": "kubernetes um name spaces these are the common constructs to separate different tenants and using service accounts and",
    "start": "192000",
    "end": "199640"
  },
  {
    "text": "arxs are common ways to control access to kuet objects now the classic example of",
    "start": "199640",
    "end": "206000"
  },
  {
    "text": "multi-tenancy is Coke and Pepsi running on the same infrastructure so for the",
    "start": "206000",
    "end": "211640"
  },
  {
    "text": "rest of this talk I'm going to use the hypothetical example of the Red soda company and blue soda company running on",
    "start": "211640",
    "end": "217760"
  },
  {
    "text": "the same um cluster and I'm going to reference an application that I wrote called soda DB you can get it from",
    "start": "217760",
    "end": "223640"
  },
  {
    "text": "GitHub to illustrate these Concepts so the three uh main ways to",
    "start": "223640",
    "end": "231480"
  },
  {
    "text": "provide Network multi in kubernetes are pod networking Network policy and service measure and these Technologies",
    "start": "231480",
    "end": "238159"
  },
  {
    "text": "are different in the scope of is oltion that they provide for example pod networking provides isolation within a",
    "start": "238159",
    "end": "243799"
  },
  {
    "text": "single kubernetes node Network policy um is associated with um providing um",
    "start": "243799",
    "end": "251159"
  },
  {
    "text": "separation for pods that are running on the same cluster and then these Technologies different at different",
    "start": "251159",
    "end": "256959"
  },
  {
    "text": "layers of the stack for example Network policies correspond to transport layer and the network layer port numbers and",
    "start": "256959",
    "end": "263199"
  },
  {
    "text": "IP addresses now um just a quick recap of",
    "start": "263199",
    "end": "268680"
  },
  {
    "text": "how kubernetes networking is implemented in kubernetes we have a flat Network namespace model that means any pod can",
    "start": "268680",
    "end": "275120"
  },
  {
    "text": "talk to any other part or node or the API server using his IP",
    "start": "275120",
    "end": "280680"
  },
  {
    "text": "address now here is an example of two SoDo DB parts that are running on the",
    "start": "282520",
    "end": "288680"
  },
  {
    "text": "same node um despite both of these processes listening to Port 880 um they",
    "start": "288680",
    "end": "294479"
  },
  {
    "text": "don't interfere with each other that's because the underlying processes they map to different n namespaces in",
    "start": "294479",
    "end": "301440"
  },
  {
    "text": "kubernetes and in the host on the Linux and if you want to know the next",
    "start": "301440",
    "end": "306720"
  },
  {
    "text": "level detail these Network namespaces are implemented through something called pause containers in Linux in kubernetes",
    "start": "306720",
    "end": "314639"
  },
  {
    "text": "so um for each for example in this case I have the red soda DB namespace I can",
    "start": "314639",
    "end": "320160"
  },
  {
    "text": "see it's owner is a pause container and once I enter that name space I can see",
    "start": "320160",
    "end": "325479"
  },
  {
    "text": "the IP address corresponding to the Red soda PA associated with this namespace",
    "start": "325479",
    "end": "331639"
  },
  {
    "text": "now Network policies are ways to specify rules for uh controlling Ingress and",
    "start": "332000",
    "end": "337319"
  },
  {
    "text": "egress for PS This requires cni plugin support and has been there since the",
    "start": "337319",
    "end": "342400"
  },
  {
    "text": "early days of kubernetes an example of a network policy would be to allow communication between name uh um front",
    "start": "342400",
    "end": "349800"
  },
  {
    "text": "end and back end or you know restrict communication within only red Nam space",
    "start": "349800",
    "end": "355000"
  },
  {
    "text": "or within the blue sort of namespace but not across them perhaps the most complete um",
    "start": "355000",
    "end": "362319"
  },
  {
    "text": "technology that provides nwork multi tenacy kubernetes today service M and by",
    "start": "362319",
    "end": "367880"
  },
  {
    "text": "defining uh authentication policies and authorization policies one can um",
    "start": "367880",
    "end": "373039"
  },
  {
    "text": "restrict communication between different microservices that running on the same cluster um so at net app we wanted to",
    "start": "373039",
    "end": "379759"
  },
  {
    "text": "build a storage service based on kubernetes and unfortunately these Technologies they all had some gaps for",
    "start": "379759",
    "end": "386599"
  },
  {
    "text": "example network name spaces and cgroups again they help with isolation within a single kubernetes note Network policies",
    "start": "386599",
    "end": "393680"
  },
  {
    "text": "help with isolation between kubernetes parts that are running on the same cluster in our use case our sever PS",
    "start": "393680",
    "end": "400800"
  },
  {
    "text": "they run on kubernetes but the storage clients they can run outside on Virtual machines right and um with service mesh",
    "start": "400800",
    "end": "407720"
  },
  {
    "text": "one can have a mesh that consists of both kubernetes parts as well as virtual machines but that use case is only",
    "start": "407720",
    "end": "413960"
  },
  {
    "text": "limited to grpc applications and for our use case you know we wanted to support NFS and SNB storage protocols so that",
    "start": "413960",
    "end": "421479"
  },
  {
    "text": "didn't work for us so the question was really can we do better and in the rest",
    "start": "421479",
    "end": "426720"
  },
  {
    "text": "of the Talk N is going to explain how oh be before that um this is really",
    "start": "426720",
    "end": "432240"
  },
  {
    "text": "the state of art as far as um how netk multi tennessy is implemented for cloud",
    "start": "432240",
    "end": "438120"
  },
  {
    "text": "services so today um in gcp in Azure and in AWS the way",
    "start": "438120",
    "end": "447680"
  },
  {
    "text": "cloud services are built is that each um kubernetes or service project has a",
    "start": "447680",
    "end": "453720"
  },
  {
    "text": "dedicated um project within it we have a single with have a kubernetes um cluster",
    "start": "453720",
    "end": "459160"
  },
  {
    "text": "and this project or subscription gets linked to the customers um project via v-net or VPC",
    "start": "459160",
    "end": "465400"
  },
  {
    "text": "pering so as you can imagine this is very secure because there is only a",
    "start": "465400",
    "end": "470440"
  },
  {
    "text": "direct link between customers environment and the service but the downside is that there's really no um",
    "start": "470440",
    "end": "477319"
  },
  {
    "text": "sharing each customer each 10 has their own dedicated um kubernetes cluster",
    "start": "477319",
    "end": "482479"
  },
  {
    "text": "within um the service project so now n is going to tell us how we can improve",
    "start": "482479",
    "end": "488080"
  },
  {
    "text": "on this model in the next few slides thank you Arin for covering all",
    "start": "488080",
    "end": "493440"
  },
  {
    "text": "the great options we have so just in the last slide what Arland has explained so",
    "start": "493440",
    "end": "500960"
  },
  {
    "text": "the hostage Services what they're doing right now they're deploying customer applications which requires direct",
    "start": "500960",
    "end": "506560"
  },
  {
    "text": "connectivity to their Network into their dedicated infra cubes clusters now what",
    "start": "506560",
    "end": "512039"
  },
  {
    "text": "does that mean that incurs a cost to the hostage Services which in turn will be",
    "start": "512039",
    "end": "517159"
  },
  {
    "text": "expensive for the end customers as well so what we really wanted to achieve is the shared kubernetes cluster to host a",
    "start": "517159",
    "end": "524320"
  },
  {
    "text": "multi Network multitenant workloads now in this diagram you can see there is a",
    "start": "524320",
    "end": "529640"
  },
  {
    "text": "customer pod deployed on a kubernetes cluster hosted into the hostage service",
    "start": "529640",
    "end": "536000"
  },
  {
    "text": "tenant it has two interfaces one interface is the a default interface let's call it a interface from the",
    "start": "536000",
    "end": "541959"
  },
  {
    "text": "default Network and let's call that as an infra Network and that is doubting all the traffic let's call that traffic",
    "start": "541959",
    "end": "548640"
  },
  {
    "text": "is management traffic that's routing the management traffic to the default cluster wide Network the another neck",
    "start": "548640",
    "end": "554880"
  },
  {
    "text": "which is injected which is the ith one the yellow Nick here which is injected from the customer Network into the Pod",
    "start": "554880",
    "end": "561680"
  },
  {
    "text": "running on a on a multi-tenant kubernetes cluster so that Nick has the",
    "start": "561680",
    "end": "567240"
  },
  {
    "text": "private access to the service running into the services running into the",
    "start": "567240",
    "end": "572560"
  },
  {
    "text": "customer network over a private IP all this has been done on a shared cluster",
    "start": "572560",
    "end": "578200"
  },
  {
    "text": "and that what that gives us it saves money to our hostage services and in turn to the customers as well without",
    "start": "578200",
    "end": "584839"
  },
  {
    "text": "compromising security let's talk about the challenges",
    "start": "584839",
    "end": "590279"
  },
  {
    "text": "what we have faced in achieving what we've we have just discussed so two main things the cuet",
    "start": "590279",
    "end": "597120"
  },
  {
    "text": "cuet is not aware of multi Network part cuet internally invokes cni for those",
    "start": "597120",
    "end": "602560"
  },
  {
    "text": "who do not know what cni is cni is a container networking interface which is invoked by the container run time to",
    "start": "602560",
    "end": "608920"
  },
  {
    "text": "provision the networking for the pods so cuet when invokes cni it only is aware of a single",
    "start": "608920",
    "end": "615680"
  },
  {
    "text": "interface it will go and deploy it pro provision the default interface on the",
    "start": "615680",
    "end": "621040"
  },
  {
    "text": "Pod can have multiple IPS but they all belong to the same interface similarly",
    "start": "621040",
    "end": "626440"
  },
  {
    "text": "Cube scheduler it does not know about these special nodes which can satisfy the multi Network pod needs so let's see",
    "start": "626440",
    "end": "634320"
  },
  {
    "text": "how we are addressing the problem so we have extended our cni to",
    "start": "634320",
    "end": "640160"
  },
  {
    "text": "attach these secondary interfaces onto the multi Network ports so now here on the right side you see there is a node",
    "start": "640160",
    "end": "647839"
  },
  {
    "text": "which today a kubernetes node is provisioned with a single interface but now we have extended the node to also",
    "start": "647839",
    "end": "654240"
  },
  {
    "text": "attach additional interfaces which will later be provisioned uniquely for each",
    "start": "654240",
    "end": "659320"
  },
  {
    "text": "different network so on the you see your two extending ourland uh example for red s",
    "start": "659320",
    "end": "666880"
  },
  {
    "text": "and a blue soda we have a two necks which a red one is for Red soda neck and",
    "start": "666880",
    "end": "672160"
  },
  {
    "text": "then there is a blue soda neck it's to they both have provision separately into their Red soda tenant and the blue soda",
    "start": "672160",
    "end": "678800"
  },
  {
    "text": "tenant and when a multi Network pod the Red soda pod gets deployed now that Nick",
    "start": "678800",
    "end": "684800"
  },
  {
    "text": "which was provisioned on the host gets projected into the Pod now inside the you were seeing two two interfaces one",
    "start": "684800",
    "end": "692560"
  },
  {
    "text": "which is carrying your management traffic onto from the default Network and the second which is carrying the",
    "start": "692560",
    "end": "698480"
  },
  {
    "text": "customer traffic rest of the traffic is going all via the second interface now these Red soda uh pod and",
    "start": "698480",
    "end": "705800"
  },
  {
    "text": "blue soda pod are running a trusted code so they can be process isolated and then there are the security policies we can",
    "start": "705800",
    "end": "712160"
  },
  {
    "text": "apply to make sure that they multi-end but if they are interested then they can be provision isolated bya Ka Kata hyperv",
    "start": "712160",
    "end": "718839"
  },
  {
    "text": "or G visor later in the talk we will also talk about how we have used device",
    "start": "718839",
    "end": "724519"
  },
  {
    "text": "plugins to make this special worker nodes and these ex additional interfaces",
    "start": "724519",
    "end": "730079"
  },
  {
    "text": "as a first class resource for the cube scheduler deep diving into the details",
    "start": "730079",
    "end": "736959"
  },
  {
    "text": "of the cni extensions so we have leveraged the crd based approach so",
    "start": "736959",
    "end": "742519"
  },
  {
    "text": "hostage Services they will deploy a crd let's call it a pod Network crd it",
    "start": "742519",
    "end": "747920"
  },
  {
    "text": "defines what my customer Network looks like what's my the vnet VPC information",
    "start": "747920",
    "end": "753399"
  },
  {
    "text": "the subnet I'm going to be using to inject I to provision the IPS then a pod",
    "start": "753399",
    "end": "759760"
  },
  {
    "text": "the customer pod gets deployed it is labeled with that crd and then referencing that crd gives a signal to",
    "start": "759760",
    "end": "766480"
  },
  {
    "text": "cni to do the extra work and not star is we have we will be aligning with the",
    "start": "766480",
    "end": "773240"
  },
  {
    "text": "ongoing cap which is which is ongoing cap for the multi Network so extending onto it this I one",
    "start": "773240",
    "end": "781800"
  },
  {
    "text": "which is provision into the customer Network so the r Cloud which is hosting",
    "start": "781800",
    "end": "786920"
  },
  {
    "text": "the core networking Services Provisions injects this sck into into the customer",
    "start": "786920",
    "end": "792160"
  },
  {
    "text": "network but let me deep dive into what's EXA happening inside the guest inside the VM by the cni so when the multi",
    "start": "792160",
    "end": "799519"
  },
  {
    "text": "Network part gets scheduled cuet invokes the cni cni learns this information from",
    "start": "799519",
    "end": "806000"
  },
  {
    "text": "the cube API about that this pod is labeled bu with the p network crd so it requires an additional inck it also gets",
    "start": "806000",
    "end": "813480"
  },
  {
    "text": "the information from the cube API that which of the available interface on the Node is associated with this Nick",
    "start": "813480",
    "end": "821000"
  },
  {
    "text": "eventually cni moves that Nick projects that Nick into the Pod and now my pod has two",
    "start": "821000",
    "end": "828160"
  },
  {
    "text": "necks e0 and E1 a going a little Deep dive into the plue soda pod what you see",
    "start": "828160",
    "end": "834040"
  },
  {
    "text": "inside you will see two necks one is your infra neck and then another is your",
    "start": "834040",
    "end": "840120"
  },
  {
    "text": "management another is your customer neck and then the additional routes which are provisioned where like management",
    "start": "840120",
    "end": "846160"
  },
  {
    "text": "traffic like a port traffic or D or service traffic all traffic will go via it zero and all your rest of the traffic",
    "start": "846160",
    "end": "853000"
  },
  {
    "text": "will go via it1 going a little deep further how our",
    "start": "853000",
    "end": "858759"
  },
  {
    "text": "crds will look like so we have defined a PNET on the left we have defined a p network CD where we have defined the",
    "start": "858759",
    "end": "865600"
  },
  {
    "text": "vnet and the subnet constructs and then on the right once you able your pod with that crd you will have a multi Network",
    "start": "865600",
    "end": "874720"
  },
  {
    "text": "pod now uh so now let's talk about the cube scheduler part so how would a cube",
    "start": "875000",
    "end": "881240"
  },
  {
    "text": "scheduler know that this is my special node which is coming up with additional next not all node in my kubernetes neck",
    "start": "881240",
    "end": "888079"
  },
  {
    "text": "I want to attach multi Network pod I want to secure my system node pools I uh so I there are only some node pools I",
    "start": "888079",
    "end": "896199"
  },
  {
    "text": "have additional Network policies where I can host these multi Networks parts so for that we have achieved it by using",
    "start": "896199",
    "end": "903199"
  },
  {
    "text": "device plugins so with the device plugin we can we can extend the node capability",
    "start": "903199",
    "end": "909240"
  },
  {
    "text": "device plugins registers these additional interfaces as a resource and make them as a first class so they they",
    "start": "909240",
    "end": "915279"
  },
  {
    "text": "learn about the available interfaces on the Node pass it that information to the cube scheduler now a part comes up",
    "start": "915279",
    "end": "921759"
  },
  {
    "text": "requesting for one of the additional lck as a multi Network multi multi network",
    "start": "921759",
    "end": "927040"
  },
  {
    "text": "interface and then Cube will pass that information to the device plugin and device plugin will do its magic reserve",
    "start": "927040",
    "end": "933279"
  },
  {
    "text": "the Pod allocates and cni will do its magic of extending that interface into",
    "start": "933279",
    "end": "938480"
  },
  {
    "text": "the Pod so with that I'm going to give the stage back to Arin to see all of the",
    "start": "938480",
    "end": "945399"
  },
  {
    "start": "940000",
    "end": "1402000"
  },
  {
    "text": "work we've been doing into a real working demo thanks",
    "start": "945399",
    "end": "951959"
  },
  {
    "text": "now so next is to show you everything we talked about is",
    "start": "951959",
    "end": "957680"
  },
  {
    "text": "real so in the setup uh we have a Azure kubernetes service cluster an AKs",
    "start": "957680",
    "end": "964079"
  },
  {
    "text": "cluster that is running two instances of soda DB application one is corresponding",
    "start": "964079",
    "end": "969959"
  },
  {
    "text": "to the Red soda company and one is corresponding to the blue soda company these parts they both have two",
    "start": "969959",
    "end": "977560"
  },
  {
    "text": "IP addresses the E zero Nick gets his IP address from the vet and subnet",
    "start": "977560",
    "end": "985399"
  },
  {
    "text": "associated with the AKs cluster and then the one interfaces they",
    "start": "985399",
    "end": "990720"
  },
  {
    "text": "get their IP addresses from the customers vnet and",
    "start": "990720",
    "end": "996440"
  },
  {
    "text": "subet so um in this demo we're going to show you that the VMS that are on the",
    "start": "996440",
    "end": "1002720"
  },
  {
    "text": "customer side in the projects and the customer subscription can only access the pot that was provisioned for that",
    "start": "1002720",
    "end": "1008920"
  },
  {
    "text": "customer and nothing",
    "start": "1008920",
    "end": "1011959"
  },
  {
    "text": "else",
    "start": "1017839",
    "end": "1020839"
  },
  {
    "text": "all right so now here I have a multi-tenant Azure kubernetes service",
    "start": "1029120",
    "end": "1034880"
  },
  {
    "text": "cluster this AKs cluster has a single node pool and this is also a special type of",
    "start": "1034880",
    "end": "1042199"
  },
  {
    "text": "node pool they call it multier not pool because it has multiple Nicks and in this instance we have two nodes in this",
    "start": "1042199",
    "end": "1050840"
  },
  {
    "text": "pool so I'm going to use one node per tenant for hosting the SoDo DB",
    "start": "1051440",
    "end": "1057080"
  },
  {
    "text": "po so the next step is for us to um create our multitenant environment so",
    "start": "1057080",
    "end": "1063760"
  },
  {
    "text": "I'm going to create um first two Nam spaces one for each tenant so you can",
    "start": "1063760",
    "end": "1069360"
  },
  {
    "text": "see here there is one Nam space for the Red soda company one red name space for the blue soda company and then I'm going",
    "start": "1069360",
    "end": "1075280"
  },
  {
    "text": "to create the Pod Network custom resources that n just talked talked about so there is one for the Red soda",
    "start": "1075280",
    "end": "1080559"
  },
  {
    "text": "company and one for the blue soda company and if you notice these two pot networks they reference different v-ets",
    "start": "1080559",
    "end": "1087440"
  },
  {
    "text": "and subnets one corresponding to each",
    "start": "1087440",
    "end": "1092399"
  },
  {
    "text": "tenant next I'm going to create the Pod Network instance objects so these are",
    "start": "1096240",
    "end": "1103159"
  },
  {
    "text": "optional and then I proceed by creating my deployments so the first deployment",
    "start": "1103159",
    "end": "1108880"
  },
  {
    "text": "corresponds to the Red soda company and here if you notice there I'm using some",
    "start": "1108880",
    "end": "1115600"
  },
  {
    "text": "special labels to associate this deployment this part to the Pod Network",
    "start": "1115600",
    "end": "1120640"
  },
  {
    "text": "that I created in the step above right and then I'm going to do the same for the blue soda deployment so I create a",
    "start": "1120640",
    "end": "1127799"
  },
  {
    "text": "deployment for the blue soda deploy soda deployment and I associate with the blue pod",
    "start": "1127799",
    "end": "1134159"
  },
  {
    "text": "Network and one thing to note is that both SB in Es are listening on E one",
    "start": "1134159",
    "end": "1140480"
  },
  {
    "text": "interface the IP address that was coming from the tenance environment so I",
    "start": "1140480",
    "end": "1145640"
  },
  {
    "text": "proceed by creating these animals and objects um and now we should have two",
    "start": "1145640",
    "end": "1153720"
  },
  {
    "text": "parts running in two different name spaces for each",
    "start": "1153720",
    "end": "1158400"
  },
  {
    "text": "tenant So within a few seconds these parts should be up and",
    "start": "1158840",
    "end": "1164440"
  },
  {
    "text": "running so if you notice there are two IP addresses here these IP addresses correspond to e zero interface coming",
    "start": "1167360",
    "end": "1173880"
  },
  {
    "text": "from the kubernetes um subnet and V for AKs",
    "start": "1173880",
    "end": "1179120"
  },
  {
    "text": "now um I'm going to show you the red SoDo DB",
    "start": "1179120",
    "end": "1186480"
  },
  {
    "text": "po here you can see this pod is running and I'm going to exact into it and show",
    "start": "1187080",
    "end": "1193000"
  },
  {
    "text": "you the two network interfaces that's within this pot so the second interface the E1 interface that that's the one",
    "start": "1193000",
    "end": "1199520"
  },
  {
    "text": "that is um connected to the customer's environment and I'm going to use that IP",
    "start": "1199520",
    "end": "1204760"
  },
  {
    "text": "address to populate some records in the S DB database so in this case I add four",
    "start": "1204760",
    "end": "1211320"
  },
  {
    "text": "records you know red classic di red cherry red and",
    "start": "1211320",
    "end": "1217759"
  },
  {
    "text": "um I'm going to do the same thing with the blue SoDo DB",
    "start": "1219640",
    "end": "1224840"
  },
  {
    "text": "part again this P also has two networking",
    "start": "1227080",
    "end": "1232440"
  },
  {
    "text": "interfaces and the second interface is used for connectivity to the",
    "start": "1232640",
    "end": "1238960"
  },
  {
    "text": "client so I also use this IP address to uh populate some",
    "start": "1238960",
    "end": "1245159"
  },
  {
    "text": "records so in this instance I'm adding only three records for the blue s. DB now the next",
    "start": "1247400",
    "end": "1254640"
  },
  {
    "text": "step is to show you the network connectivity between different environments so we want to confirm that",
    "start": "1254640",
    "end": "1260480"
  },
  {
    "text": "the Red soda DB uh cannot talk to the blue soda DB instance so I exec to the",
    "start": "1260480",
    "end": "1266159"
  },
  {
    "text": "Red soda and I use the blue sod DB's IP address and I can show you that they can't talk to each",
    "start": "1266159",
    "end": "1272120"
  },
  {
    "text": "other and I can show the same thing on reverse P so the blue soda cannot talk to the Red soda",
    "start": "1272120",
    "end": "1278320"
  },
  {
    "text": "part that's the winning",
    "start": "1278320",
    "end": "1282000"
  },
  {
    "text": "moment now in the rest of the demo I'm going to show you the connectivity from the VMS that provision in the um",
    "start": "1284039",
    "end": "1290720"
  },
  {
    "text": "customers subscriptions so for that I switch over to the azal portal here's a VM Red soda",
    "start": "1290720",
    "end": "1298919"
  },
  {
    "text": "client in the customer's environment and you can see the IP",
    "start": "1298919",
    "end": "1304919"
  },
  {
    "text": "address for this VM so now I'm going to show you this VM can actually talk to the U Red soda DB instance using its",
    "start": "1304919",
    "end": "1311640"
  },
  {
    "text": "eth1 IP",
    "start": "1311640",
    "end": "1314960"
  },
  {
    "text": "address so you I use Curl I'm going to retrieve record zero and you can see red",
    "start": "1317520",
    "end": "1323360"
  },
  {
    "text": "classic was retrieved next I'm going to show you that this VM cannot talk to the blue SB",
    "start": "1323360",
    "end": "1330000"
  },
  {
    "text": "instance that is running on the same cluster and you can see it can't because",
    "start": "1330000",
    "end": "1335880"
  },
  {
    "text": "there's no route to that sort of DB instance and you know the same thing works on the blue sod client",
    "start": "1335880",
    "end": "1344520"
  },
  {
    "text": "VM the blue sod client VM can talk to the blue solb",
    "start": "1344520",
    "end": "1350880"
  },
  {
    "text": "instance but it cannot talk to the red solb",
    "start": "1350880",
    "end": "1355559"
  },
  {
    "text": "instance yeah one thing I want to highlight here is what Arin is showing that this is all connectivities over",
    "start": "1357640",
    "end": "1364159"
  },
  {
    "text": "private IP there is no Public Access there's no load balancers in front of it there's no express route Gateway so it's",
    "start": "1364159",
    "end": "1370600"
  },
  {
    "text": "all about on on a direct private connectivity so it's all it's more secure than",
    "start": "1370600",
    "end": "1377039"
  },
  {
    "text": "ever all right so that concludes our demo and with that said we'll be happy",
    "start": "1377440",
    "end": "1383640"
  },
  {
    "text": "to answer any questions you",
    "start": "1383640",
    "end": "1386559"
  },
  {
    "text": "have Hello uh thanks for the talk uh I wanted to ask you you showed the scenario where the port has each a",
    "start": "1401240",
    "end": "1409120"
  },
  {
    "start": "1402000",
    "end": "1899000"
  },
  {
    "text": "separate uh Network inter device uh so if I run five uh ports on a single node",
    "start": "1409120",
    "end": "1416720"
  },
  {
    "text": "within the same customer Network they do get five network interfaces am I",
    "start": "1416720",
    "end": "1422679"
  },
  {
    "text": "correct so yes for now the implementation has it will get get five different interfaces onto the node but",
    "start": "1422679",
    "end": "1430000"
  },
  {
    "text": "that's something you can you can extrapolate as well so there you could do both you can have single interface",
    "start": "1430000",
    "end": "1436600"
  },
  {
    "text": "and that can be projected into the five customer pods pointing to the same Nick or you can the implementation what we",
    "start": "1436600",
    "end": "1443400"
  },
  {
    "text": "did the case study was we had a diff dedicated Nick to a dedicated multi- Network pod okay but the one you are",
    "start": "1443400",
    "end": "1450159"
  },
  {
    "text": "asking is it can be achieved you can have a dedicated neck for each different network and can Multiplex into the pods",
    "start": "1450159",
    "end": "1456720"
  },
  {
    "text": "running on the same same node oh I would probably like to have the other way around to just have a single network",
    "start": "1456720",
    "end": "1462640"
  },
  {
    "text": "interface I mean that's that's our default implementation okay yes thank you and does the cap also support this",
    "start": "1462640",
    "end": "1468960"
  },
  {
    "text": "because from the from what you have shown there is some kind limits and the number of Nicks that you require per pot",
    "start": "1468960",
    "end": "1475760"
  },
  {
    "text": "if I understood correctly so the the implementation what we had is an influence from the cap uh the cap what",
    "start": "1475760",
    "end": "1482559"
  },
  {
    "text": "cap is suggesting is to have these the crds what we have created as the first",
    "start": "1482559",
    "end": "1488279"
  },
  {
    "text": "class first class spec inside the Pod spec so um as of now I I'm I'm not sure",
    "start": "1488279",
    "end": "1495159"
  },
  {
    "text": "if there are any limits but I can I can get back on that",
    "start": "1495159",
    "end": "1500320"
  },
  {
    "text": "okay thank you for the talk uh one question I have is uh the choice of the",
    "start": "1502480",
    "end": "1510200"
  },
  {
    "text": "network interface you want to connect is based on the labels uh on the P that we put if I saw",
    "start": "1510200",
    "end": "1517520"
  },
  {
    "text": "correctly and uh how do you stop anyone uh to if I am",
    "start": "1517520",
    "end": "1524880"
  },
  {
    "text": "the blue soda to connect to the Red soda network interface just by changing my labels if I want",
    "start": "1524880",
    "end": "1532279"
  },
  {
    "text": "to sorry could you please extend the last part how will you change if I'm the bluea company and I",
    "start": "1532279",
    "end": "1539440"
  },
  {
    "text": "want to change my labels and let's say I want to change the label pods to Red",
    "start": "1539440",
    "end": "1545080"
  },
  {
    "text": "soda company how do you check that it's not possible today uh except with um I'm",
    "start": "1545080",
    "end": "1551880"
  },
  {
    "text": "just going so I'm going to back to the slide so you're saying how if I change",
    "start": "1551880",
    "end": "1557200"
  },
  {
    "text": "something in my red sort of part to access to the blue uh on the slide with the customer resource definition when",
    "start": "1557200",
    "end": "1563960"
  },
  {
    "text": "you talk about it than oh the so the custom resource definition is is managed",
    "start": "1563960",
    "end": "1569399"
  },
  {
    "text": "by the hosted service so the security aspect is it's not owned by the customer",
    "start": "1569399",
    "end": "1574440"
  },
  {
    "text": "itself the hosted service platform which is hosting this kubernetes worker node",
    "start": "1574440",
    "end": "1579640"
  },
  {
    "text": "kubernetes cluster is managing the cies and Arland you want to add how will use we are going to secure so basically for",
    "start": "1579640",
    "end": "1587000"
  },
  {
    "text": "example net up as a service provider We Are The Entity that provision these",
    "start": "1587000",
    "end": "1592720"
  },
  {
    "text": "storage parts or blue soda Red soda instances right and we manage the network policies for them so when a",
    "start": "1592720",
    "end": "1598919"
  },
  {
    "text": "customer comes to net app you know we coordinate with them as far as you know what subance they want to use for",
    "start": "1598919",
    "end": "1604880"
  },
  {
    "text": "mounting their volumes right and we have this contract between them and we Define we as a service provider we Define the",
    "start": "1604880",
    "end": "1611360"
  },
  {
    "text": "Pod networks for them so we restrict access across different tenants but we",
    "start": "1611360",
    "end": "1616720"
  },
  {
    "text": "ensure that each tenant can securely and privately access only their paths and",
    "start": "1616720",
    "end": "1622520"
  },
  {
    "text": "nothing else so this it's the responsibility of the service provider to manage the Pod Network objects and",
    "start": "1622520",
    "end": "1629120"
  },
  {
    "text": "enforce multi tennis thank you there are two questions here on the front",
    "start": "1629120",
    "end": "1636039"
  },
  {
    "text": "and hi um I've seen multi network interface Parts in with molus in Cube",
    "start": "1639080",
    "end": "1646679"
  },
  {
    "text": "word is this using molus as well uh no uh we have we have extended",
    "start": "1646679",
    "end": "1652799"
  },
  {
    "text": "our own a cni the reason malas malas is is attached to a different crd called",
    "start": "1652799",
    "end": "1658480"
  },
  {
    "text": "Network attachment definition and like I said our influence was the multi Network",
    "start": "1658480",
    "end": "1663880"
  },
  {
    "text": "cap we eventually want this part Network crd to be the first class uh first class resource into the kubernetes uh",
    "start": "1663880",
    "end": "1671200"
  },
  {
    "text": "ecosystem and that's why we went with our own azni what are the limitations in terms",
    "start": "1671200",
    "end": "1676519"
  },
  {
    "text": "of network interface counts I know certain skus in Azure can only have four network interfaces and stuff like that",
    "start": "1676519",
    "end": "1682279"
  },
  {
    "text": "what are the limits of that so Azure today owns up to eight um",
    "start": "1682279",
    "end": "1689039"
  },
  {
    "text": "eight Nick on on a given VM but that's that's an ongoing uh like ongoing work",
    "start": "1689039",
    "end": "1695720"
  },
  {
    "text": "to extend that okay yeah I would also add that the novel thing about this implementation is",
    "start": "1695720",
    "end": "1702399"
  },
  {
    "text": "not so much like multiple Nicks per po but rather is how these Nicks are connected to hypers skater you know",
    "start": "1702399",
    "end": "1709559"
  },
  {
    "text": "Network constructs like vpcs and vet that are extending to customer",
    "start": "1709559",
    "end": "1715880"
  },
  {
    "text": "environment hey good morning uh this is asan from American Airlines platform engineering um so we are not using any",
    "start": "1716200",
    "end": "1723519"
  },
  {
    "text": "like Network plugins and we we are hosting like thousands of apps on our platform but maybe in the future if you",
    "start": "1723519",
    "end": "1729880"
  },
  {
    "text": "wanted to move towards that route um is there any limitation on your side when it comes to logical separation or",
    "start": "1729880",
    "end": "1736440"
  },
  {
    "text": "isolation of the cidr or E 01 or two and let's say if if I have a client and they",
    "start": "1736440",
    "end": "1743640"
  },
  {
    "text": "have like a SAS Services Runing on my platform and even within the same name",
    "start": "1743640",
    "end": "1749519"
  },
  {
    "text": "space they want to isolate the network for the part security concerns is that",
    "start": "1749519",
    "end": "1754960"
  },
  {
    "text": "possible with your network Plugin or Nick plugin sorry do you want to take",
    "start": "1754960",
    "end": "1760039"
  },
  {
    "text": "that go ahead so yeah so you know obviously different cni plugins they",
    "start": "1760039",
    "end": "1765080"
  },
  {
    "text": "have different implementations so you know there's no one silver bullet or one",
    "start": "1765080",
    "end": "1770320"
  },
  {
    "text": "way of doing things in this instance um as far as isolation within a host",
    "start": "1770320",
    "end": "1777000"
  },
  {
    "text": "this is done through Network Nam spaces and I showed you example of that you know how that was set up with um Linux",
    "start": "1777000",
    "end": "1782200"
  },
  {
    "text": "network name spaces so that provides isolation within the host and many um cni plugins like Calico the ones",
    "start": "1782200",
    "end": "1789519"
  },
  {
    "text": "provided by you know Azure Google and it all work pretty much the same way by set up these network name spaces so that's",
    "start": "1789519",
    "end": "1796039"
  },
  {
    "text": "isolation within a given note and and then um as far as isolation beyond the",
    "start": "1796039",
    "end": "1801399"
  },
  {
    "text": "note there are other solutions that we talked about you know like um Network policies and service",
    "start": "1801399",
    "end": "1808799"
  },
  {
    "text": "Mission any more yeah uh thank you for the talk um just",
    "start": "1809399",
    "end": "1814880"
  },
  {
    "text": "one question about IP address management I'm guessing the PO IPS are not stable do I have any chance to intergrate like",
    "start": "1814880",
    "end": "1822640"
  },
  {
    "text": "external DNS or something via service or something to um to have a reliable networking connection activity yes so",
    "start": "1822640",
    "end": "1829640"
  },
  {
    "text": "actually one cool thing about this implementation is that we can also have the option of having stable IP addresses",
    "start": "1829640",
    "end": "1835320"
  },
  {
    "text": "per part and that's actually what Neta wanted because as pods move around",
    "start": "1835320",
    "end": "1840720"
  },
  {
    "text": "between noes their IP addresses change and you know for storage Services it's",
    "start": "1840720",
    "end": "1845960"
  },
  {
    "text": "very important to keep the IP address persistent because every time it moves you have to do a remount so one thing we",
    "start": "1845960",
    "end": "1852279"
  },
  {
    "text": "didn't show quite here is that you can actually using the Pod Network instance",
    "start": "1852279",
    "end": "1858679"
  },
  {
    "text": "custom resource that I didn't talk to much about you can actually associate a fixed IP address um to a given pod and",
    "start": "1858679",
    "end": "1865279"
  },
  {
    "text": "as the Pod moves around the IP address goes with it so that was another thing that was quite different than other you",
    "start": "1865279",
    "end": "1870639"
  },
  {
    "text": "know cni implementations yeah adding on to what Arin said great question we do have the capability to extend and not",
    "start": "1870639",
    "end": "1878399"
  },
  {
    "text": "make these additional interface IPS as fmrl so that means we statically bind that with the multi Network",
    "start": "1878399",
    "end": "1886320"
  },
  {
    "text": "pod okay I think that calls for all the",
    "start": "1886919",
    "end": "1893639"
  },
  {
    "text": "questions thank you very [Applause] much",
    "start": "1893639",
    "end": "1901440"
  }
]