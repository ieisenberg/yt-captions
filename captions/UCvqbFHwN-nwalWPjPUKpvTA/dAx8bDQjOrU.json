[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "hello I'm Jason Smith I work at",
    "start": "120",
    "end": "2220"
  },
  {
    "text": "container solutions senior engineer",
    "start": "2220",
    "end": "4290"
  },
  {
    "text": "there that's my twitter handle I don't",
    "start": "4290",
    "end": "5879"
  },
  {
    "text": "really use Twitter that much decide from",
    "start": "5879",
    "end": "7830"
  },
  {
    "text": "retweeting other people's stuff I don't",
    "start": "7830",
    "end": "9750"
  },
  {
    "text": "really feel like I have anything that",
    "start": "9750",
    "end": "11130"
  },
  {
    "text": "important to say so today I'm gonna be",
    "start": "11130",
    "end": "14759"
  },
  {
    "text": "talking about binary protocols but",
    "start": "14759",
    "end": "17250"
  },
  {
    "text": "before I get into what you probably came",
    "start": "17250",
    "end": "20490"
  },
  {
    "text": "here to see I'm gonna start a little",
    "start": "20490",
    "end": "21869"
  },
  {
    "text": "earlier at the beginning we're gonna go",
    "start": "21869",
    "end": "24779"
  },
  {
    "text": "back to 1844 so in 1844 the Telegraph",
    "start": "24779",
    "end": "31920"
  },
  {
    "start": "28000",
    "end": "192000"
  },
  {
    "text": "was released the it became incredibly",
    "start": "31920",
    "end": "35010"
  },
  {
    "text": "popular the lines spread all over the",
    "start": "35010",
    "end": "37290"
  },
  {
    "text": "world and on those lines there was an",
    "start": "37290",
    "end": "40320"
  },
  {
    "text": "encoding we're all familiar with it",
    "start": "40320",
    "end": "42329"
  },
  {
    "text": "Morse code and Morse code is described",
    "start": "42329",
    "end": "47940"
  },
  {
    "text": "as a series of dits and DAHS or some",
    "start": "47940",
    "end": "50100"
  },
  {
    "text": "people call them dots and dashes and but",
    "start": "50100",
    "end": "53640"
  },
  {
    "text": "it's a it's a little bit more than that",
    "start": "53640",
    "end": "57090"
  },
  {
    "text": "Morse code is actually binary it's",
    "start": "57090",
    "end": "59190"
  },
  {
    "text": "broken down by a time unit which is a",
    "start": "59190",
    "end": "62190"
  },
  {
    "text": "bit and each dit da gap everything else",
    "start": "62190",
    "end": "65909"
  },
  {
    "text": "is is actually equatable to a binary",
    "start": "65909",
    "end": "68580"
  },
  {
    "text": "value gets being a one plus zero it",
    "start": "68580",
    "end": "72510"
  },
  {
    "text": "actually has to be defined by the gap",
    "start": "72510",
    "end": "74130"
  },
  {
    "text": "following it just follow along some of",
    "start": "74130",
    "end": "77130"
  },
  {
    "text": "you people look a little confused so",
    "start": "77130",
    "end": "81409"
  },
  {
    "text": "that means telegraphy was the first",
    "start": "81409",
    "end": "85680"
  },
  {
    "text": "binary protocol on the wire it was",
    "start": "85680",
    "end": "87780"
  },
  {
    "text": "actually the first time we were",
    "start": "87780",
    "end": "89159"
  },
  {
    "text": "transferring data on the wire with",
    "start": "89159",
    "end": "91680"
  },
  {
    "text": "binary data so is this the first network",
    "start": "91680",
    "end": "95790"
  },
  {
    "text": "engineer not particularly in this case",
    "start": "95790",
    "end": "97740"
  },
  {
    "text": "that gentleman was actually cutting the",
    "start": "97740",
    "end": "99479"
  },
  {
    "text": "wire this was taken there in the Civil",
    "start": "99479",
    "end": "101130"
  },
  {
    "text": "War and he was cutting the wire trying",
    "start": "101130",
    "end": "102780"
  },
  {
    "text": "to hide the the network from the network",
    "start": "102780",
    "end": "107040"
  },
  {
    "text": "partition so is that all we have to",
    "start": "107040",
    "end": "112649"
  },
  {
    "text": "learn from Morse code not exactly",
    "start": "112649",
    "end": "116600"
  },
  {
    "text": "so Morse was thinking ahead if you",
    "start": "116600",
    "end": "119969"
  },
  {
    "text": "notice some of these letters have",
    "start": "119969",
    "end": "122700"
  },
  {
    "text": "shorter notation than other ones such as",
    "start": "122700",
    "end": "125100"
  },
  {
    "text": "e a√≠ st and he was actually he chose",
    "start": "125100",
    "end": "130770"
  },
  {
    "text": "those because he felt like those are",
    "start": "130770",
    "end": "132569"
  },
  {
    "text": "some of the more common",
    "start": "132569",
    "end": "134480"
  },
  {
    "text": "letters used when communicating and it",
    "start": "134480",
    "end": "139050"
  },
  {
    "text": "was so what he wanted to do is he wanted",
    "start": "139050",
    "end": "141720"
  },
  {
    "text": "to make them have the shortest notation",
    "start": "141720",
    "end": "143190"
  },
  {
    "text": "he wanted the actual message being sent",
    "start": "143190",
    "end": "145800"
  },
  {
    "text": "on the wire to be as short as possible",
    "start": "145800",
    "end": "148130"
  },
  {
    "text": "he was being frugal with the number of",
    "start": "148130",
    "end": "151080"
  },
  {
    "text": "time units he wanted to make like I said",
    "start": "151080",
    "end": "154440"
  },
  {
    "text": "you wanted to make the message as small",
    "start": "154440",
    "end": "155490"
  },
  {
    "text": "as possible so there's actually name for",
    "start": "155490",
    "end": "158010"
  },
  {
    "text": "this this is called entropy encoding I",
    "start": "158010",
    "end": "159780"
  },
  {
    "text": "don't know if any of you are familiar",
    "start": "159780",
    "end": "160770"
  },
  {
    "text": "with Huffman encoding it uses the same",
    "start": "160770",
    "end": "162690"
  },
  {
    "text": "principle and the idea behind Huffman",
    "start": "162690",
    "end": "166290"
  },
  {
    "text": "encoding or I'm sorry entropy encoding",
    "start": "166290",
    "end": "167940"
  },
  {
    "text": "is that you take the most common",
    "start": "167940",
    "end": "170550"
  },
  {
    "text": "occurring symbols and you assign them",
    "start": "170550",
    "end": "172650"
  },
  {
    "text": "the smallest values when you're",
    "start": "172650",
    "end": "174870"
  },
  {
    "text": "transferring that message so this is so",
    "start": "174870",
    "end": "180540"
  },
  {
    "text": "Morse code wasn't only the first time",
    "start": "180540",
    "end": "182760"
  },
  {
    "text": "that we sent binary data on a wire it",
    "start": "182760",
    "end": "185700"
  },
  {
    "text": "was actually the first time we encoded",
    "start": "185700",
    "end": "187380"
  },
  {
    "text": "data for the smallest footprint on the",
    "start": "187380",
    "end": "189480"
  },
  {
    "text": "wire as possible so that was the history",
    "start": "189480",
    "end": "193110"
  },
  {
    "text": "lesson for today so also nothing nothing",
    "start": "193110",
    "end": "197460"
  },
  {
    "text": "we're doing is really new I mean we've",
    "start": "197460",
    "end": "199440"
  },
  {
    "text": "been kind of dealing with the same",
    "start": "199440",
    "end": "200640"
  },
  {
    "text": "problems for a long time so we're gonna",
    "start": "200640",
    "end": "202890"
  },
  {
    "text": "cover three things today first is how we",
    "start": "202890",
    "end": "205290"
  },
  {
    "text": "got to where we're at right now what",
    "start": "205290",
    "end": "206940"
  },
  {
    "text": "we're discussing binary protocols how",
    "start": "206940",
    "end": "210239"
  },
  {
    "text": "buying a binary protocols work and why",
    "start": "210239",
    "end": "214410"
  },
  {
    "text": "are we adopting them at this time so and",
    "start": "214410",
    "end": "219420"
  },
  {
    "text": "hopefully if you're gonna walk away with",
    "start": "219420",
    "end": "221400"
  },
  {
    "text": "anything out of this if you already know",
    "start": "221400",
    "end": "224100"
  },
  {
    "text": "this information you're probably going",
    "start": "224100",
    "end": "225540"
  },
  {
    "text": "to walk away with a sense of smug",
    "start": "225540",
    "end": "227040"
  },
  {
    "text": "satisfaction and if you don't hopefully",
    "start": "227040",
    "end": "230430"
  },
  {
    "text": "it'll help you think about what it means",
    "start": "230430",
    "end": "232709"
  },
  {
    "text": "to be writing microservices in a cloud",
    "start": "232709",
    "end": "234930"
  },
  {
    "text": "native environment so let's start by",
    "start": "234930",
    "end": "240450"
  },
  {
    "start": "238000",
    "end": "250000"
  },
  {
    "text": "looking on how we got here so to start",
    "start": "240450",
    "end": "244940"
  },
  {
    "text": "we're gonna fast forward to from 1844 to",
    "start": "244940",
    "end": "248370"
  },
  {
    "text": "the 1960s in the 1960s pretty much all",
    "start": "248370",
    "end": "252510"
  },
  {
    "start": "250000",
    "end": "304000"
  },
  {
    "text": "the way through the 1990s our PC became",
    "start": "252510",
    "end": "254580"
  },
  {
    "text": "pretty much the dominant form of inter",
    "start": "254580",
    "end": "258060"
  },
  {
    "text": "service communication for a distributed",
    "start": "258060",
    "end": "261180"
  },
  {
    "text": "system but it had problems we had",
    "start": "261180",
    "end": "263729"
  },
  {
    "text": "stubbing coupling complexity and it",
    "start": "263729",
    "end": "267000"
  },
  {
    "text": "wasn't very portable",
    "start": "267000",
    "end": "267990"
  },
  {
    "text": "across a lot of different languages and",
    "start": "267990",
    "end": "271050"
  },
  {
    "text": "most in most cases that was using binary",
    "start": "271050",
    "end": "273180"
  },
  {
    "text": "data to communicate one of the bigger",
    "start": "273180",
    "end": "275580"
  },
  {
    "text": "problems with RPC though is is it had",
    "start": "275580",
    "end": "278729"
  },
  {
    "text": "this idea that the network was supposed",
    "start": "278729",
    "end": "281850"
  },
  {
    "text": "to be transparent to the developer",
    "start": "281850",
    "end": "283949"
  },
  {
    "text": "meaning that they weren't supposed to be",
    "start": "283949",
    "end": "286050"
  },
  {
    "text": "aware that you were communicating over a",
    "start": "286050",
    "end": "287970"
  },
  {
    "text": "network right now we know that's just",
    "start": "287970",
    "end": "290580"
  },
  {
    "text": "not true we need to know that we're",
    "start": "290580",
    "end": "293250"
  },
  {
    "text": "working on a network but aside from all",
    "start": "293250",
    "end": "297389"
  },
  {
    "text": "this even with all these caveats RPC is",
    "start": "297389",
    "end": "300330"
  },
  {
    "text": "still widely used today in distributed",
    "start": "300330",
    "end": "303210"
  },
  {
    "text": "systems so then in the 90s we got HTTP",
    "start": "303210",
    "end": "307349"
  },
  {
    "start": "304000",
    "end": "325000"
  },
  {
    "text": "and it was it's been widely adopted it's",
    "start": "307349",
    "end": "310919"
  },
  {
    "text": "it's adopted because it's open and it's",
    "start": "310919",
    "end": "313770"
  },
  {
    "text": "easy to tool for and there's a robust",
    "start": "313770",
    "end": "315449"
  },
  {
    "text": "number of tools lots of languages can",
    "start": "315449",
    "end": "317639"
  },
  {
    "text": "write interfaces for it so and it that",
    "start": "317639",
    "end": "322289"
  },
  {
    "text": "made it easily",
    "start": "322289",
    "end": "323039"
  },
  {
    "text": "multilingual but it led to what we have",
    "start": "323039",
    "end": "327889"
  },
  {
    "start": "325000",
    "end": "357000"
  },
  {
    "text": "what we're commonly seeing today is data",
    "start": "327889",
    "end": "330660"
  },
  {
    "text": "in text and the first popular one being",
    "start": "330660",
    "end": "334949"
  },
  {
    "text": "XML the problem with XML is of course",
    "start": "334949",
    "end": "338880"
  },
  {
    "text": "it's large it's really really",
    "start": "338880",
    "end": "341550"
  },
  {
    "text": "complicated it's hard to read and it led",
    "start": "341550",
    "end": "346199"
  },
  {
    "text": "to really big data packages to the most",
    "start": "346199",
    "end": "348510"
  },
  {
    "text": "popular communication systems with us",
    "start": "348510",
    "end": "351750"
  },
  {
    "text": "where XML and then followed by soap so",
    "start": "351750",
    "end": "358110"
  },
  {
    "start": "357000",
    "end": "386000"
  },
  {
    "text": "next we had JSON popularly probably the",
    "start": "358110",
    "end": "362039"
  },
  {
    "text": "most popular series ation format we have",
    "start": "362039",
    "end": "364289"
  },
  {
    "text": "it's widely used in rest it's but it has",
    "start": "364289",
    "end": "367830"
  },
  {
    "text": "problems it's not typesafe the servic",
    "start": "367830",
    "end": "370919"
  },
  {
    "text": "server client contracts have just",
    "start": "370919",
    "end": "372630"
  },
  {
    "text": "recently become popular API blueprint",
    "start": "372630",
    "end": "374909"
  },
  {
    "text": "swagger things like that only recently",
    "start": "374909",
    "end": "377370"
  },
  {
    "text": "have they started to be adopted and it",
    "start": "377370",
    "end": "382289"
  },
  {
    "text": "was still text so it's loaded to",
    "start": "382289",
    "end": "384240"
  },
  {
    "text": "serialize but both HTTP with the text",
    "start": "384240",
    "end": "390120"
  },
  {
    "start": "386000",
    "end": "422000"
  },
  {
    "text": "formats has led to what we commonly",
    "start": "390120",
    "end": "392759"
  },
  {
    "text": "refer to today as web services it's a",
    "start": "392759",
    "end": "395340"
  },
  {
    "text": "lot it's it's it's it's how a lot of",
    "start": "395340",
    "end": "400289"
  },
  {
    "text": "companies are now",
    "start": "400289",
    "end": "401520"
  },
  {
    "text": "communicating internally but also",
    "start": "401520",
    "end": "403500"
  },
  {
    "text": "externally as well so that's a little",
    "start": "403500",
    "end": "408180"
  },
  {
    "text": "history on how we got there now I'm",
    "start": "408180",
    "end": "410009"
  },
  {
    "text": "gonna go into a little bit on how they",
    "start": "410009",
    "end": "411479"
  },
  {
    "text": "work I'm just gonna go a general",
    "start": "411479",
    "end": "412650"
  },
  {
    "text": "overview and try to get a concept of how",
    "start": "412650",
    "end": "416400"
  },
  {
    "text": "they're trying to reduce the message",
    "start": "416400",
    "end": "419220"
  },
  {
    "text": "message size by using binary formats so",
    "start": "419220",
    "end": "423620"
  },
  {
    "start": "422000",
    "end": "465000"
  },
  {
    "text": "they try to achieve one thing they try",
    "start": "423620",
    "end": "426509"
  },
  {
    "text": "to try to make things fast they're",
    "start": "426509",
    "end": "428310"
  },
  {
    "text": "trying to make make it fast in three",
    "start": "428310",
    "end": "431580"
  },
  {
    "text": "different ways in one way is they try to",
    "start": "431580",
    "end": "433949"
  },
  {
    "text": "make this message is small so they",
    "start": "433949",
    "end": "435870"
  },
  {
    "text": "transfer over the wire quickly they also",
    "start": "435870",
    "end": "440520"
  },
  {
    "text": "try to make decoding and encoding faster",
    "start": "440520",
    "end": "442919"
  },
  {
    "text": "meaning at the expense of being small",
    "start": "442919",
    "end": "445979"
  },
  {
    "text": "they may encode the values but they're",
    "start": "445979",
    "end": "448770"
  },
  {
    "text": "gonna try it and but some of them don't",
    "start": "448770",
    "end": "450330"
  },
  {
    "text": "and they try to save it as raw values",
    "start": "450330",
    "end": "453509"
  },
  {
    "text": "that you can actually map into memory",
    "start": "453509",
    "end": "454860"
  },
  {
    "text": "and I'll get into that in a minute and",
    "start": "454860",
    "end": "457289"
  },
  {
    "text": "another way they try to make it fast is",
    "start": "457289",
    "end": "458909"
  },
  {
    "text": "if you have big data packages they try",
    "start": "458909",
    "end": "461039"
  },
  {
    "text": "to make it fast by being able to",
    "start": "461039",
    "end": "462419"
  },
  {
    "text": "traverse the message quickly so I'm",
    "start": "462419",
    "end": "467520"
  },
  {
    "start": "465000",
    "end": "580000"
  },
  {
    "text": "going to cover three primary ones",
    "start": "467520",
    "end": "469560"
  },
  {
    "text": "protocol buffers flatbuffers in captain",
    "start": "469560",
    "end": "471690"
  },
  {
    "text": "proto so all three you double utilize an",
    "start": "471690",
    "end": "476539"
  },
  {
    "text": "interface definition all of them support",
    "start": "476539",
    "end": "480060"
  },
  {
    "text": "the idea of an involving message meaning",
    "start": "480060",
    "end": "483030"
  },
  {
    "text": "you can add and remove fields from it",
    "start": "483030",
    "end": "485210"
  },
  {
    "text": "they are all strongly typed they offer a",
    "start": "485210",
    "end": "490590"
  },
  {
    "text": "reflection api and they all offer text",
    "start": "490590",
    "end": "494190"
  },
  {
    "text": "output for debugging in the future so",
    "start": "494190",
    "end": "499800"
  },
  {
    "text": "protocol buffers was developed at Google",
    "start": "499800",
    "end": "501630"
  },
  {
    "text": "if anybody attended the GRP see you may",
    "start": "501630",
    "end": "505250"
  },
  {
    "text": "may have heard something about it it's",
    "start": "505250",
    "end": "508469"
  },
  {
    "text": "developed for compact messages traversal",
    "start": "508469",
    "end": "511650"
  },
  {
    "text": "is done by stepping and skipping",
    "start": "511650",
    "end": "513060"
  },
  {
    "text": "depending on the type of field that you",
    "start": "513060",
    "end": "514770"
  },
  {
    "text": "have there is some decoding that has to",
    "start": "514770",
    "end": "517289"
  },
  {
    "text": "take has to take place to to produce",
    "start": "517289",
    "end": "520169"
  },
  {
    "text": "usable values and not all values need to",
    "start": "520169",
    "end": "523770"
  },
  {
    "text": "be read but the entire message needs to",
    "start": "523770",
    "end": "526380"
  },
  {
    "text": "be med read because protocol buffers",
    "start": "526380",
    "end": "529230"
  },
  {
    "text": "supports duplicate values meaning if you",
    "start": "529230",
    "end": "532560"
  },
  {
    "text": "have the same",
    "start": "532560",
    "end": "534880"
  },
  {
    "text": "filled twice in the same message it",
    "start": "534880",
    "end": "537100"
  },
  {
    "text": "either concatenates it if it's a string",
    "start": "537100",
    "end": "538840"
  },
  {
    "text": "it adds them together if if it's an",
    "start": "538840",
    "end": "540880"
  },
  {
    "text": "integer and it so that means it's",
    "start": "540880",
    "end": "543280"
  },
  {
    "text": "required to read the entire message",
    "start": "543280",
    "end": "545080"
  },
  {
    "text": "before you can just move on to your to",
    "start": "545080",
    "end": "547900"
  },
  {
    "text": "work that you're working on so when",
    "start": "547900",
    "end": "552550"
  },
  {
    "text": "you're looking at Pro so I'm gonna look",
    "start": "552550",
    "end": "554200"
  },
  {
    "text": "ahead at the code protocol buffers it's",
    "start": "554200",
    "end": "556030"
  },
  {
    "text": "really simple format it just starts with",
    "start": "556030",
    "end": "558670"
  },
  {
    "text": "a when you first enter the message it",
    "start": "558670",
    "end": "561820"
  },
  {
    "text": "starts with the field label a field type",
    "start": "561820",
    "end": "566640"
  },
  {
    "text": "then oh yeah and then any ancillary data",
    "start": "566640",
    "end": "571930"
  },
  {
    "text": "that may go along with it some fields",
    "start": "571930",
    "end": "574000"
  },
  {
    "text": "have more information that needs to be",
    "start": "574000",
    "end": "576180"
  },
  {
    "text": "attached to it and then the data itself",
    "start": "576180",
    "end": "579540"
  },
  {
    "text": "so as an example if we're looking at a",
    "start": "579540",
    "end": "582550"
  },
  {
    "start": "580000",
    "end": "598000"
  },
  {
    "text": "string a string is going to start with",
    "start": "582550",
    "end": "585040"
  },
  {
    "text": "the label then the type which is a",
    "start": "585040",
    "end": "587770"
  },
  {
    "text": "string then the length of this string",
    "start": "587770",
    "end": "590560"
  },
  {
    "text": "and in this case it would be a series of",
    "start": "590560",
    "end": "595690"
  },
  {
    "text": "utf-8 characters if we're looking at a",
    "start": "595690",
    "end": "599440"
  },
  {
    "start": "598000",
    "end": "640000"
  },
  {
    "text": "variable integer they work a little",
    "start": "599440",
    "end": "601780"
  },
  {
    "text": "different same but starts the same exact",
    "start": "601780",
    "end": "603970"
  },
  {
    "text": "way it's a label the type which is of",
    "start": "603970",
    "end": "608080"
  },
  {
    "text": "our integer and then the bytes that",
    "start": "608080",
    "end": "609850"
  },
  {
    "text": "follow it now with a variable integer",
    "start": "609850",
    "end": "612220"
  },
  {
    "text": "they do encode it in a certain way but",
    "start": "612220",
    "end": "614440"
  },
  {
    "text": "the the way they delineate the end of",
    "start": "614440",
    "end": "617230"
  },
  {
    "text": "the field is by the last byte in the",
    "start": "617230",
    "end": "620590"
  },
  {
    "text": "data is going to have the first the most",
    "start": "620590",
    "end": "622870"
  },
  {
    "text": "significant bit will have a 0 that means",
    "start": "622870",
    "end": "624820"
  },
  {
    "text": "you know you've reached the end of your",
    "start": "624820",
    "end": "626140"
  },
  {
    "text": "data which means if you're traversing",
    "start": "626140",
    "end": "628360"
  },
  {
    "text": "the field you need to read each byte",
    "start": "628360",
    "end": "630610"
  },
  {
    "text": "until you hit that one and then you know",
    "start": "630610",
    "end": "633460"
  },
  {
    "text": "you've gotten the whole of the data for",
    "start": "633460",
    "end": "635110"
  },
  {
    "text": "that field so that kind of makes",
    "start": "635110",
    "end": "641350"
  },
  {
    "text": "protocol buffers at the root level I'm",
    "start": "641350",
    "end": "647020"
  },
  {
    "text": "sorry let me back up here a second so",
    "start": "647020",
    "end": "649480"
  },
  {
    "text": "using the length of the word and the",
    "start": "649480",
    "end": "651970"
  },
  {
    "text": "length of the variable integer and by",
    "start": "651970",
    "end": "653230"
  },
  {
    "text": "skipping over these bytes you can",
    "start": "653230",
    "end": "654880"
  },
  {
    "text": "actually tell where one field begins and",
    "start": "654880",
    "end": "656950"
  },
  {
    "text": "then you assume the next field or one",
    "start": "656950",
    "end": "659380"
  },
  {
    "text": "field ends and you assume where the next",
    "start": "659380",
    "end": "660730"
  },
  {
    "text": "one begins and this sort of stacks the",
    "start": "660730",
    "end": "663850"
  },
  {
    "text": "the fields on top of each other they're",
    "start": "663850",
    "end": "666100"
  },
  {
    "text": "completely independent they don't know",
    "start": "666100",
    "end": "667780"
  },
  {
    "text": "about each other",
    "start": "667780",
    "end": "668680"
  },
  {
    "text": "and you can in theory append more bytes",
    "start": "668680",
    "end": "671410"
  },
  {
    "text": "of data to the end of your message and",
    "start": "671410",
    "end": "673120"
  },
  {
    "text": "that will be continued to be read and in",
    "start": "673120",
    "end": "677260"
  },
  {
    "text": "this case order is not required either",
    "start": "677260",
    "end": "680910"
  },
  {
    "text": "so now I'm going to talk about",
    "start": "680910",
    "end": "683890"
  },
  {
    "text": "flatbuffers in camp proto together and",
    "start": "683890",
    "end": "686130"
  },
  {
    "text": "then I'm going to tell about to talk",
    "start": "686130",
    "end": "688990"
  },
  {
    "text": "about some of the differences in some of",
    "start": "688990",
    "end": "690100"
  },
  {
    "text": "the decoding processes so flappers was",
    "start": "690100",
    "end": "693130"
  },
  {
    "text": "also developed internal by Google and",
    "start": "693130",
    "end": "695910"
  },
  {
    "text": "captain proto was developed by Kenton",
    "start": "695910",
    "end": "698500"
  },
  {
    "text": "vara who is a former developer for proto",
    "start": "698500",
    "end": "701680"
  },
  {
    "text": "pub at Google so they both use zero copy",
    "start": "701680",
    "end": "705970"
  },
  {
    "text": "meaning that the values come straight",
    "start": "705970",
    "end": "708070"
  },
  {
    "text": "out of your message straight into memory",
    "start": "708070",
    "end": "710320"
  },
  {
    "text": "and there is no decoding process",
    "start": "710320",
    "end": "711730"
  },
  {
    "text": "involved they also use a root and",
    "start": "711730",
    "end": "716200"
  },
  {
    "text": "hierarchal table structures that define",
    "start": "716200",
    "end": "718120"
  },
  {
    "text": "how to access the data so in vs.",
    "start": "718120",
    "end": "721300"
  },
  {
    "text": "protocol buffers will you actually had",
    "start": "721300",
    "end": "722890"
  },
  {
    "text": "type and labels flatbuffers and cap",
    "start": "722890",
    "end": "726910"
  },
  {
    "text": "proto actually have a table that defines",
    "start": "726910",
    "end": "728770"
  },
  {
    "text": "how to go into your data and they both",
    "start": "728770",
    "end": "732550"
  },
  {
    "text": "require a root table as well and you can",
    "start": "732550",
    "end": "735550"
  },
  {
    "text": "also use em map to do memory mapping of",
    "start": "735550",
    "end": "738100"
  },
  {
    "text": "your values straight into into memory so",
    "start": "738100",
    "end": "743050"
  },
  {
    "text": "the key differences between these are so",
    "start": "743050",
    "end": "747910"
  },
  {
    "text": "flatbuffers uses indirection it uses a",
    "start": "747910",
    "end": "750400"
  },
  {
    "text": "two tables actually to define how to",
    "start": "750400",
    "end": "753310"
  },
  {
    "text": "access the table one is the the V table",
    "start": "753310",
    "end": "756100"
  },
  {
    "text": "and the other one is another table it",
    "start": "756100",
    "end": "757779"
  },
  {
    "text": "defines how to actually access the data",
    "start": "757779",
    "end": "759370"
  },
  {
    "text": "in the table but and and can proto uses",
    "start": "759370",
    "end": "765490"
  },
  {
    "text": "64-bit words and it bounds the data in",
    "start": "765490",
    "end": "769330"
  },
  {
    "text": "these 64-bit words and using these two",
    "start": "769330",
    "end": "774160"
  },
  {
    "text": "methods flatbuffers actually has to be",
    "start": "774160",
    "end": "776950"
  },
  {
    "text": "built from the bottom up meaning you",
    "start": "776950",
    "end": "778630"
  },
  {
    "text": "have to get your your leaves if you're",
    "start": "778630",
    "end": "781060"
  },
  {
    "text": "building a tree you have to get your",
    "start": "781060",
    "end": "782470"
  },
  {
    "text": "leaves before you get to the root cap",
    "start": "782470",
    "end": "784300"
  },
  {
    "text": "and proto gets built from the root down",
    "start": "784300",
    "end": "786670"
  },
  {
    "text": "to the leaves so I'm gonna look at the",
    "start": "786670",
    "end": "790959"
  },
  {
    "start": "789000",
    "end": "847000"
  },
  {
    "text": "coding captain proto really quick so",
    "start": "790959",
    "end": "792850"
  },
  {
    "text": "with Captain proto the first 64 bits in",
    "start": "792850",
    "end": "798040"
  },
  {
    "text": "a message define the root table pointer",
    "start": "798040",
    "end": "801820"
  },
  {
    "text": "and it is defined as and as you're",
    "start": "801820",
    "end": "805660"
  },
  {
    "text": "entering these first 64 bits you get the",
    "start": "805660",
    "end": "807820"
  },
  {
    "text": "type where is the the data the data",
    "start": "807820",
    "end": "812740"
  },
  {
    "text": "length and the pointers length so in",
    "start": "812740",
    "end": "817630"
  },
  {
    "text": "this example you have a you get the type",
    "start": "817630",
    "end": "820030"
  },
  {
    "text": "which is a structure pointer which is",
    "start": "820030",
    "end": "821560"
  },
  {
    "text": "going to be your first couple bits is",
    "start": "821560",
    "end": "823060"
  },
  {
    "text": "going to always give me a structure",
    "start": "823060",
    "end": "824080"
  },
  {
    "text": "pointer you're gonna get the word offset",
    "start": "824080",
    "end": "826240"
  },
  {
    "text": "of how many words over are you going to",
    "start": "826240",
    "end": "828100"
  },
  {
    "text": "be traversing before you get to your",
    "start": "828100",
    "end": "831130"
  },
  {
    "text": "words of data and you're also gonna get",
    "start": "831130",
    "end": "835000"
  },
  {
    "text": "the how many words of data you're",
    "start": "835000",
    "end": "836710"
  },
  {
    "text": "getting in there and then you're gonna",
    "start": "836710",
    "end": "839110"
  },
  {
    "text": "get more pointers which would just be",
    "start": "839110",
    "end": "841270"
  },
  {
    "text": "repeats of this and this would create",
    "start": "841270",
    "end": "843520"
  },
  {
    "text": "your hierarchical structure so looking",
    "start": "843520",
    "end": "849670"
  },
  {
    "start": "847000",
    "end": "882000"
  },
  {
    "text": "at those words of data it going back to",
    "start": "849670",
    "end": "852520"
  },
  {
    "text": "this your words of data and cell 3 and 4",
    "start": "852520",
    "end": "855540"
  },
  {
    "text": "the words of data are are in are in",
    "start": "855540",
    "end": "859540"
  },
  {
    "text": "order in there based on the spec meaning",
    "start": "859540",
    "end": "861820"
  },
  {
    "text": "that if you give it a value of 1 and",
    "start": "861820",
    "end": "864790"
  },
  {
    "text": "then the next field has a value of 2",
    "start": "864790",
    "end": "866590"
  },
  {
    "text": "they have to remain in that order in",
    "start": "866590",
    "end": "868420"
  },
  {
    "text": "these words of data if you add more",
    "start": "868420",
    "end": "871240"
  },
  {
    "text": "fields that can only be added with a",
    "start": "871240",
    "end": "873040"
  },
  {
    "text": "higher field value than the previous",
    "start": "873040",
    "end": "876070"
  },
  {
    "text": "values have already assigned and you'll",
    "start": "876070",
    "end": "877690"
  },
  {
    "text": "see why that is in a second so in this",
    "start": "877690",
    "end": "883570"
  },
  {
    "start": "882000",
    "end": "927000"
  },
  {
    "text": "definition for captain proto we have a",
    "start": "883570",
    "end": "886030"
  },
  {
    "text": "boolean and then we have an integer with",
    "start": "886030",
    "end": "890230"
  },
  {
    "text": "8 bits so in this case if we were to go",
    "start": "890230",
    "end": "894400"
  },
  {
    "text": "back to these words data and the first",
    "start": "894400",
    "end": "898840"
  },
  {
    "text": "word of data when you first enter that",
    "start": "898840",
    "end": "900670"
  },
  {
    "text": "word of data with just this definition",
    "start": "900670",
    "end": "902440"
  },
  {
    "text": "your first bit you'd know would be a",
    "start": "902440",
    "end": "904420"
  },
  {
    "text": "boolean and then the following eight",
    "start": "904420",
    "end": "906310"
  },
  {
    "text": "bits would be the next field and every",
    "start": "906310",
    "end": "908440"
  },
  {
    "text": "field is defined as a set definition 8",
    "start": "908440",
    "end": "912010"
  },
  {
    "text": "bits 64 bits or you know whatever the",
    "start": "912010",
    "end": "914800"
  },
  {
    "text": "type of field it is and then everything",
    "start": "914800",
    "end": "917860"
  },
  {
    "text": "else after that is padded with 64 bits",
    "start": "917860",
    "end": "920110"
  },
  {
    "text": "because captain proto requires",
    "start": "920110",
    "end": "921940"
  },
  {
    "text": "everything to be bound into 64 bits so",
    "start": "921940",
    "end": "928120"
  },
  {
    "start": "927000",
    "end": "1016000"
  },
  {
    "text": "flatbuffers which really complicated and",
    "start": "928120",
    "end": "932050"
  },
  {
    "text": "I don't think I could explain it in",
    "start": "932050",
    "end": "934960"
  },
  {
    "text": "in any reasonable amount of time here",
    "start": "934960",
    "end": "937089"
  },
  {
    "text": "but it's it actually uses labelled",
    "start": "937089",
    "end": "940470"
  },
  {
    "text": "tables of indirection so as you can see",
    "start": "940470",
    "end": "944020"
  },
  {
    "text": "on the top of the screen where you see",
    "start": "944020",
    "end": "945700"
  },
  {
    "text": "the twelve that's actually where you",
    "start": "945700",
    "end": "947290"
  },
  {
    "text": "enter your message it defines the v--",
    "start": "947290",
    "end": "949180"
  },
  {
    "text": "table the v-- table defines then the",
    "start": "949180",
    "end": "951490"
  },
  {
    "text": "route tables and the fields and then the",
    "start": "951490",
    "end": "954160"
  },
  {
    "text": "fields jump back and forth and then you",
    "start": "954160",
    "end": "956470"
  },
  {
    "text": "finally get your data I don't think I",
    "start": "956470",
    "end": "958870"
  },
  {
    "text": "could really get through this whole",
    "start": "958870",
    "end": "960550"
  },
  {
    "text": "thing in just thirty minutes but if you",
    "start": "960550",
    "end": "963430"
  },
  {
    "text": "want to this is there's a article called",
    "start": "963430",
    "end": "966130"
  },
  {
    "text": "flatbuffers explained if you google that",
    "start": "966130",
    "end": "967600"
  },
  {
    "text": "it's by Maxime Zak's that's actually his",
    "start": "967600",
    "end": "969820"
  },
  {
    "text": "graphic he goes into great detail on how",
    "start": "969820",
    "end": "973000"
  },
  {
    "text": "this works and he gives examples so",
    "start": "973000",
    "end": "978690"
  },
  {
    "text": "flatbuffers in Kappa proto are their",
    "start": "978690",
    "end": "981430"
  },
  {
    "text": "tree structure they require a route data",
    "start": "981430",
    "end": "984160"
  },
  {
    "text": "that gets traversed into lower branches",
    "start": "984160",
    "end": "986589"
  },
  {
    "text": "now where this helps is if you have big",
    "start": "986589",
    "end": "989440"
  },
  {
    "text": "data structures you can you only need",
    "start": "989440",
    "end": "992080"
  },
  {
    "text": "sections of your data",
    "start": "992080",
    "end": "993339"
  },
  {
    "text": "it makes traversal very quick you can go",
    "start": "993339",
    "end": "996040"
  },
  {
    "text": "deep into large data sets and get data",
    "start": "996040",
    "end": "998649"
  },
  {
    "text": "quick whereas protobuf you have to",
    "start": "998649",
    "end": "1001080"
  },
  {
    "text": "traverse your entire message and read",
    "start": "1001080",
    "end": "1003150"
  },
  {
    "text": "each and every field before you actually",
    "start": "1003150",
    "end": "1005370"
  },
  {
    "text": "get the data that you need",
    "start": "1005370",
    "end": "1007490"
  },
  {
    "text": "but this also comes at the cost of more",
    "start": "1007490",
    "end": "1010709"
  },
  {
    "text": "padding you're gonna get bigger messages",
    "start": "1010709",
    "end": "1013080"
  },
  {
    "text": "because you're padding your data",
    "start": "1013080",
    "end": "1016490"
  },
  {
    "start": "1016000",
    "end": "1036000"
  },
  {
    "text": "there's a lot more options I can't",
    "start": "1016760",
    "end": "1019380"
  },
  {
    "text": "really cover all of them I chose the",
    "start": "1019380",
    "end": "1022170"
  },
  {
    "text": "three that I did because they're the",
    "start": "1022170",
    "end": "1023700"
  },
  {
    "text": "most popular and it's more I really want",
    "start": "1023700",
    "end": "1027360"
  },
  {
    "text": "to just give an example and just get",
    "start": "1027360",
    "end": "1028890"
  },
  {
    "text": "people to think more about how binary",
    "start": "1028890",
    "end": "1030959"
  },
  {
    "text": "protocols are being encoded so they can",
    "start": "1030959",
    "end": "1033420"
  },
  {
    "text": "get a better understanding of how it all",
    "start": "1033420",
    "end": "1034800"
  },
  {
    "text": "works so you may be thinking I'm gonna",
    "start": "1034800",
    "end": "1038130"
  },
  {
    "start": "1036000",
    "end": "1068000"
  },
  {
    "text": "talk about benchmarks right now but that",
    "start": "1038130",
    "end": "1041308"
  },
  {
    "text": "is definitely not the case I don't",
    "start": "1041309",
    "end": "1044670"
  },
  {
    "text": "really think it's about benchmarks I",
    "start": "1044670",
    "end": "1046980"
  },
  {
    "text": "think you should evaluate any sort of",
    "start": "1046980",
    "end": "1050370"
  },
  {
    "text": "binary protocol based on what your needs",
    "start": "1050370",
    "end": "1053370"
  },
  {
    "text": "are if like I said if you're using",
    "start": "1053370",
    "end": "1055830"
  },
  {
    "text": "something with big data sets flat",
    "start": "1055830",
    "end": "1057510"
  },
  {
    "text": "buffers or cat proto may be better for",
    "start": "1057510",
    "end": "1059700"
  },
  {
    "text": "you whereas if you're doing",
    "start": "1059700",
    "end": "1061110"
  },
  {
    "text": "inter-service communication at small",
    "start": "1061110",
    "end": "1063620"
  },
  {
    "text": "packages of data protobufs might be your",
    "start": "1063620",
    "end": "1066419"
  },
  {
    "text": "better choice",
    "start": "1066419",
    "end": "1068570"
  },
  {
    "start": "1068000",
    "end": "1101000"
  },
  {
    "text": "but it's all about the tooling I don't",
    "start": "1068570",
    "end": "1071730"
  },
  {
    "text": "advocate taking any of these without",
    "start": "1071730",
    "end": "1074850"
  },
  {
    "text": "using the the tools the ones with the",
    "start": "1074850",
    "end": "1077670"
  },
  {
    "text": "best tooling around them I have to say",
    "start": "1077670",
    "end": "1079440"
  },
  {
    "text": "flatbuffers and cotton proto and",
    "start": "1079440",
    "end": "1080930"
  },
  {
    "text": "protobuf all have robust tooling built",
    "start": "1080930",
    "end": "1083550"
  },
  {
    "text": "around them I can't speak for some of",
    "start": "1083550",
    "end": "1086760"
  },
  {
    "text": "the others I'm pretty sure thrift has",
    "start": "1086760",
    "end": "1088170"
  },
  {
    "text": "some pretty robust tooling built around",
    "start": "1088170",
    "end": "1090120"
  },
  {
    "text": "it too but I'm always an advocate for",
    "start": "1090120",
    "end": "1093030"
  },
  {
    "text": "choose the ones that have the best",
    "start": "1093030",
    "end": "1094860"
  },
  {
    "text": "tooling and make it the most boring",
    "start": "1094860",
    "end": "1096810"
  },
  {
    "text": "choice you can make because you're gonna",
    "start": "1096810",
    "end": "1098460"
  },
  {
    "text": "have a lot more problems anyway so why",
    "start": "1098460",
    "end": "1102960"
  },
  {
    "start": "1101000",
    "end": "1151000"
  },
  {
    "text": "are we adopting binary protocols now why",
    "start": "1102960",
    "end": "1105990"
  },
  {
    "text": "is it a thing why are we talking about",
    "start": "1105990",
    "end": "1107610"
  },
  {
    "text": "it now why is it why is it that is it's",
    "start": "1107610",
    "end": "1111810"
  },
  {
    "text": "raised its head again from the days gone",
    "start": "1111810",
    "end": "1114360"
  },
  {
    "text": "by so to get a get an idea of why that",
    "start": "1114360",
    "end": "1118920"
  },
  {
    "text": "is we have to go back to our PC it had",
    "start": "1118920",
    "end": "1122160"
  },
  {
    "text": "its drawbacks but we're seeing a",
    "start": "1122160",
    "end": "1124590"
  },
  {
    "text": "resurgence but it's not the same RPC",
    "start": "1124590",
    "end": "1128630"
  },
  {
    "text": "unlike the old RPC systems like G RPC do",
    "start": "1128630",
    "end": "1134430"
  },
  {
    "text": "not hide the network you're completely",
    "start": "1134430",
    "end": "1136860"
  },
  {
    "text": "aware you're working over a network it",
    "start": "1136860",
    "end": "1140040"
  },
  {
    "text": "also is well-defined and it's open and",
    "start": "1140040",
    "end": "1142950"
  },
  {
    "text": "it's widely available across languages",
    "start": "1142950",
    "end": "1145560"
  },
  {
    "text": "and I'm sure they're trying to port it",
    "start": "1145560",
    "end": "1147960"
  },
  {
    "text": "to more and more languages every day and",
    "start": "1147960",
    "end": "1152840"
  },
  {
    "start": "1151000",
    "end": "1229000"
  },
  {
    "text": "we have to come to terms the fact that",
    "start": "1152840",
    "end": "1155910"
  },
  {
    "text": "micro services are not web services",
    "start": "1155910",
    "end": "1158700"
  },
  {
    "text": "which means we don't want to write our",
    "start": "1158700",
    "end": "1161640"
  },
  {
    "text": "services as web services anymore we need",
    "start": "1161640",
    "end": "1165180"
  },
  {
    "text": "to be writing our services to to handle",
    "start": "1165180",
    "end": "1170520"
  },
  {
    "text": "to be as minimal as possible so I'm",
    "start": "1170520",
    "end": "1175200"
  },
  {
    "text": "gonna give you an example I don't know",
    "start": "1175200",
    "end": "1177600"
  },
  {
    "text": "if anybody here is familiar with the",
    "start": "1177600",
    "end": "1179610"
  },
  {
    "text": "sock shop it's a it's an open source",
    "start": "1179610",
    "end": "1182220"
  },
  {
    "text": "project sponsored by weave so it it's",
    "start": "1182220",
    "end": "1188370"
  },
  {
    "text": "only basically made up about ten",
    "start": "1188370",
    "end": "1190050"
  },
  {
    "text": "services but this is all the other",
    "start": "1190050",
    "end": "1193140"
  },
  {
    "text": "traffic that is required to get it that",
    "start": "1193140",
    "end": "1197130"
  },
  {
    "text": "is happening in the background so it's",
    "start": "1197130",
    "end": "1199170"
  },
  {
    "text": "not just the sock shop you also have",
    "start": "1199170",
    "end": "1201030"
  },
  {
    "text": "kubernetes trap",
    "start": "1201030",
    "end": "1202260"
  },
  {
    "text": "you also have Prometheus traffic you",
    "start": "1202260",
    "end": "1205080"
  },
  {
    "text": "also have open tracing going on and you",
    "start": "1205080",
    "end": "1207630"
  },
  {
    "text": "can see this isn't just making a request",
    "start": "1207630",
    "end": "1211170"
  },
  {
    "text": "to FedEx to figure out how much the",
    "start": "1211170",
    "end": "1213540"
  },
  {
    "text": "shipping cost is for a product you want",
    "start": "1213540",
    "end": "1215130"
  },
  {
    "text": "to ship this is constant persistent",
    "start": "1215130",
    "end": "1218340"
  },
  {
    "text": "communication going over the network by",
    "start": "1218340",
    "end": "1222179"
  },
  {
    "text": "the way this is weave works they got a",
    "start": "1222179",
    "end": "1223620"
  },
  {
    "text": "booth upstairs if you haven't checked",
    "start": "1223620",
    "end": "1225330"
  },
  {
    "text": "out their product it's amazing so the",
    "start": "1225330",
    "end": "1231870"
  },
  {
    "start": "1229000",
    "end": "1246000"
  },
  {
    "text": "reason we're doing this is we're trying",
    "start": "1231870",
    "end": "1233370"
  },
  {
    "text": "to shrink our footprint we want to",
    "start": "1233370",
    "end": "1236429"
  },
  {
    "text": "shrink it on the network we want to",
    "start": "1236429",
    "end": "1238260"
  },
  {
    "text": "shrink it in the CPU and we want to",
    "start": "1238260",
    "end": "1240210"
  },
  {
    "text": "shrink it in memory and I know binary",
    "start": "1240210",
    "end": "1243630"
  },
  {
    "text": "protocols helps us on all three fronts",
    "start": "1243630",
    "end": "1246800"
  },
  {
    "start": "1246000",
    "end": "1289000"
  },
  {
    "text": "so I was actually surprised by how many",
    "start": "1246800",
    "end": "1250830"
  },
  {
    "text": "Americans are actually at this",
    "start": "1250830",
    "end": "1252210"
  },
  {
    "text": "conference but in 1992 there was a",
    "start": "1252210",
    "end": "1254940"
  },
  {
    "text": "campaign manager for Bill Clinton and he",
    "start": "1254940",
    "end": "1258270"
  },
  {
    "text": "famously said the economy stupid and",
    "start": "1258270",
    "end": "1261350"
  },
  {
    "text": "this James Carville I love this",
    "start": "1261350",
    "end": "1264179"
  },
  {
    "text": "statement I think it's it cuts right to",
    "start": "1264179",
    "end": "1266760"
  },
  {
    "text": "the issue it got Clinton elected twice",
    "start": "1266760",
    "end": "1268740"
  },
  {
    "text": "in a row but it he doesn't mince words",
    "start": "1268740",
    "end": "1272250"
  },
  {
    "text": "he he doesn't he doesn't beat around the",
    "start": "1272250",
    "end": "1274350"
  },
  {
    "text": "bush and so for us I think it's it's",
    "start": "1274350",
    "end": "1277920"
  },
  {
    "text": "it's cloud native stupid but that's",
    "start": "1277920",
    "end": "1282179"
  },
  {
    "text": "that's my boss he's sitting in the back",
    "start": "1282179",
    "end": "1283770"
  },
  {
    "text": "there at Jamie Dobson he's also speaking",
    "start": "1283770",
    "end": "1289890"
  },
  {
    "start": "1289000",
    "end": "1304000"
  },
  {
    "text": "next at this event but no one at",
    "start": "1289890",
    "end": "1292890"
  },
  {
    "text": "container solutions thinks anybody in",
    "start": "1292890",
    "end": "1294420"
  },
  {
    "text": "the room is stupid and if you have any",
    "start": "1294420",
    "end": "1296370"
  },
  {
    "text": "interaction with Jamie and Penny my",
    "start": "1296370",
    "end": "1299400"
  },
  {
    "text": "other boss this is pretty much our",
    "start": "1299400",
    "end": "1301380"
  },
  {
    "text": "office dynamic so the point is we're",
    "start": "1301380",
    "end": "1306000"
  },
  {
    "start": "1304000",
    "end": "1334000"
  },
  {
    "text": "trying to move to be cloud native in",
    "start": "1306000",
    "end": "1308640"
  },
  {
    "text": "that we are trying to reduce our service",
    "start": "1308640",
    "end": "1310650"
  },
  {
    "text": "footprint so we stopped thinking about",
    "start": "1310650",
    "end": "1313320"
  },
  {
    "text": "using api's and web services and things",
    "start": "1313320",
    "end": "1317250"
  },
  {
    "text": "like that and we have to think about",
    "start": "1317250",
    "end": "1319650"
  },
  {
    "text": "being more economical and productive",
    "start": "1319650",
    "end": "1322950"
  },
  {
    "text": "forms of inner surface communication and",
    "start": "1322950",
    "end": "1325050"
  },
  {
    "text": "that is primarily why binary protocols",
    "start": "1325050",
    "end": "1328530"
  },
  {
    "text": "has become the hot topic of conversation",
    "start": "1328530",
    "end": "1331290"
  },
  {
    "text": "at this point in time",
    "start": "1331290",
    "end": "1334490"
  },
  {
    "start": "1334000",
    "end": "1472000"
  },
  {
    "text": "so that's my presentation thanks starved",
    "start": "1335169",
    "end": "1338589"
  },
  {
    "text": "me questions yeah you mean streaming",
    "start": "1338589",
    "end": "1357089"
  },
  {
    "text": "right what is what is the implications I",
    "start": "1360419",
    "end": "1367269"
  },
  {
    "text": "couldn't say what the implication I",
    "start": "1367269",
    "end": "1369039"
  },
  {
    "text": "haven't thought about it but um so",
    "start": "1369039",
    "end": "1371369"
  },
  {
    "text": "streaming on the level of like Sage ERP",
    "start": "1371369",
    "end": "1374259"
  },
  {
    "text": "C so it's right so it's got it's got to",
    "start": "1374259",
    "end": "1381069"
  },
  {
    "text": "it's got two effects there if you are",
    "start": "1381069",
    "end": "1384519"
  },
  {
    "text": "using a buffered channel you know and",
    "start": "1384519",
    "end": "1386739"
  },
  {
    "text": "just reading it off the channel it does",
    "start": "1386739",
    "end": "1388419"
  },
  {
    "text": "make it faster in the fact that you can",
    "start": "1388419",
    "end": "1389919"
  },
  {
    "text": "just skip over bytes of data but you",
    "start": "1389919",
    "end": "1393519"
  },
  {
    "text": "have to finish your whole consumption",
    "start": "1393519",
    "end": "1396870"
  },
  {
    "text": "[Music]",
    "start": "1396870",
    "end": "1398969"
  },
  {
    "text": "aside from that but so so it's it's kind",
    "start": "1398969",
    "end": "1402819"
  },
  {
    "text": "of like a double-edged sword there I",
    "start": "1402819",
    "end": "1405159"
  },
  {
    "text": "guess",
    "start": "1405159",
    "end": "1407369"
  },
  {
    "text": "in the old days",
    "start": "1412990",
    "end": "1416970"
  },
  {
    "text": "what progress",
    "start": "1423630",
    "end": "1425970"
  },
  {
    "text": "so all three that I showed they all do",
    "start": "1425970",
    "end": "1429000"
  },
  {
    "text": "provide tooling to actually do text",
    "start": "1429000",
    "end": "1430980"
  },
  {
    "text": "output it's usually based on the actual",
    "start": "1430980",
    "end": "1433590"
  },
  {
    "text": "message package like you did to code the",
    "start": "1433590",
    "end": "1435600"
  },
  {
    "text": "whole message package so if you write it",
    "start": "1435600",
    "end": "1437009"
  },
  {
    "text": "to a file then you will decode it like I",
    "start": "1437009",
    "end": "1439679"
  },
  {
    "text": "don't think G RPC provides the tooling",
    "start": "1439679",
    "end": "1441990"
  },
  {
    "text": "to actually decode from within your code",
    "start": "1441990",
    "end": "1445529"
  },
  {
    "text": "there but if you were to write your your",
    "start": "1445529",
    "end": "1448320"
  },
  {
    "text": "message Pat your the entire message to a",
    "start": "1448320",
    "end": "1450750"
  },
  {
    "text": "file I think you can decode it all them",
    "start": "1450750",
    "end": "1452789"
  },
  {
    "text": "from into text format which makes it a",
    "start": "1452789",
    "end": "1455850"
  },
  {
    "text": "little easier ooh oh they do okay I did",
    "start": "1455850",
    "end": "1467940"
  },
  {
    "text": "I was not aware of that",
    "start": "1467940",
    "end": "1470690"
  },
  {
    "start": "1472000",
    "end": "1716000"
  },
  {
    "text": "yes so I think cat proto I'm pretty sure",
    "start": "1482030",
    "end": "1488270"
  },
  {
    "text": "his little Indian protobuf uses VAR",
    "start": "1488270",
    "end": "1493130"
  },
  {
    "text": "integer which is encode encoded integers",
    "start": "1493130",
    "end": "1496940"
  },
  {
    "text": "and they it's they it's little endian",
    "start": "1496940",
    "end": "1501230"
  },
  {
    "text": "but they break it into bytes so and then",
    "start": "1501230",
    "end": "1506120"
  },
  {
    "text": "they it sits like this that's your",
    "start": "1506120",
    "end": "1509360"
  },
  {
    "text": "that's your integer they take it break",
    "start": "1509360",
    "end": "1511220"
  },
  {
    "text": "it up put it like this and then they put",
    "start": "1511220",
    "end": "1513350"
  },
  {
    "text": "the zero at the end and then when you",
    "start": "1513350",
    "end": "1514880"
  },
  {
    "text": "decode it you got to put it back over",
    "start": "1514880",
    "end": "1516050"
  },
  {
    "text": "here like this so",
    "start": "1516050",
    "end": "1519580"
  },
  {
    "text": "I am not familiar with asm1 but I think",
    "start": "1530570",
    "end": "1534559"
  },
  {
    "text": "Anna's",
    "start": "1534559",
    "end": "1534990"
  },
  {
    "text": "[Laughter]",
    "start": "1534990",
    "end": "1542679"
  },
  {
    "text": "what can't brother",
    "start": "1557000",
    "end": "1560450"
  },
  {
    "text": "I'm sorry a definition of the message",
    "start": "1617440",
    "end": "1631270"
  },
  {
    "text": "right I don't think protocol buffers",
    "start": "1631270",
    "end": "1643850"
  },
  {
    "text": "works like that",
    "start": "1643850",
    "end": "1645960"
  },
  {
    "text": "[Music]",
    "start": "1645960",
    "end": "1649179"
  },
  {
    "text": "how does the web right you have an idea",
    "start": "1650890",
    "end": "1660010"
  },
  {
    "text": "right",
    "start": "1660010",
    "end": "1663010"
  },
  {
    "text": "[Music]",
    "start": "1669120",
    "end": "1672200"
  },
  {
    "text": "as far as I know it doesn't send you a",
    "start": "1678740",
    "end": "1681210"
  },
  {
    "text": "descriptor as far as I know it sends you",
    "start": "1681210",
    "end": "1683250"
  },
  {
    "text": "as soon as you start entering the",
    "start": "1683250",
    "end": "1684630"
  },
  {
    "text": "message the first thing you look at is",
    "start": "1684630",
    "end": "1686460"
  },
  {
    "text": "the label and then the type okay okay",
    "start": "1686460",
    "end": "1694850"
  },
  {
    "text": "any other questions",
    "start": "1699740",
    "end": "1703028"
  },
  {
    "text": "oh well I'm Jason thanks for listening I",
    "start": "1704130",
    "end": "1707780"
  },
  {
    "text": "hope you learned something",
    "start": "1707780",
    "end": "1711500"
  },
  {
    "text": "[Applause]",
    "start": "1715460",
    "end": "1718559"
  }
]