[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hi everyone and welcome today we will be",
    "start": "0",
    "end": "2399"
  },
  {
    "text": "talking about how we enable multi-user",
    "start": "2399",
    "end": "4240"
  },
  {
    "text": "workflows for kubeflow pipelines",
    "start": "4240",
    "end": "6160"
  },
  {
    "text": "let's get started first of all",
    "start": "6160",
    "end": "9280"
  },
  {
    "text": "let us introduce ourselves my name is",
    "start": "9280",
    "end": "11599"
  },
  {
    "text": "janis and i'm a software engineer at",
    "start": "11599",
    "end": "13200"
  },
  {
    "text": "arikto working on kubeflow",
    "start": "13200",
    "end": "14960"
  },
  {
    "text": "i am presenting together with yuan going",
    "start": "14960",
    "end": "16960"
  },
  {
    "text": "from google who works on kubeflow",
    "start": "16960",
    "end": "19039"
  },
  {
    "text": "pipelines",
    "start": "19039",
    "end": "20240"
  },
  {
    "text": "together we worked on designing and",
    "start": "20240",
    "end": "22080"
  },
  {
    "text": "delivering multi-user support for",
    "start": "22080",
    "end": "24000"
  },
  {
    "text": "kubeflow pipelines",
    "start": "24000",
    "end": "26800"
  },
  {
    "text": "in this talk we will explore how",
    "start": "26800",
    "end": "28960"
  },
  {
    "text": "multiple users can",
    "start": "28960",
    "end": "30000"
  },
  {
    "text": "work together on kepler pipelines in a",
    "start": "30000",
    "end": "32000"
  },
  {
    "text": "secure isolated manner",
    "start": "32000",
    "end": "34239"
  },
  {
    "text": "this completes the kubeflow pipelines",
    "start": "34239",
    "end": "36079"
  },
  {
    "text": "experience which allows you to",
    "start": "36079",
    "end": "38000"
  },
  {
    "text": "simplify user onboarding with the",
    "start": "38000",
    "end": "40000"
  },
  {
    "text": "kubeflow pipeline's intuitive ux",
    "start": "40000",
    "end": "42239"
  },
  {
    "text": "accelerate pipeline development by",
    "start": "42239",
    "end": "44079"
  },
  {
    "text": "writing pipelines as python code",
    "start": "44079",
    "end": "46160"
  },
  {
    "text": "and collaborate in a secure and isolated",
    "start": "46160",
    "end": "48559"
  },
  {
    "text": "manner",
    "start": "48559",
    "end": "50399"
  },
  {
    "text": "so let's start at the beginning what is",
    "start": "50399",
    "end": "53120"
  },
  {
    "text": "kubeflow",
    "start": "53120",
    "end": "54399"
  },
  {
    "text": "kubeflow is a machine learning platform",
    "start": "54399",
    "end": "56320"
  },
  {
    "text": "built on top of kubernetes",
    "start": "56320",
    "end": "58160"
  },
  {
    "text": "dedicated to making deployments of",
    "start": "58160",
    "end": "60160"
  },
  {
    "text": "machine learning workflows",
    "start": "60160",
    "end": "61520"
  },
  {
    "text": "simple portable and scalable",
    "start": "61520",
    "end": "65119"
  },
  {
    "text": "now then what's keyflow pipelines kiplo",
    "start": "65119",
    "end": "68159"
  },
  {
    "text": "pipelines is a cornerstone",
    "start": "68159",
    "end": "69760"
  },
  {
    "text": "of the kubeflow platform it provides a",
    "start": "69760",
    "end": "71840"
  },
  {
    "text": "powerful platform to run machine",
    "start": "71840",
    "end": "73520"
  },
  {
    "text": "learning pipelines on",
    "start": "73520",
    "end": "75119"
  },
  {
    "text": "it comes with a powerful ui and a",
    "start": "75119",
    "end": "77040"
  },
  {
    "text": "diomatic python sdk to define pipelines",
    "start": "77040",
    "end": "79439"
  },
  {
    "text": "as code",
    "start": "79439",
    "end": "80240"
  },
  {
    "text": "rich visualizations linux tracking and",
    "start": "80240",
    "end": "82720"
  },
  {
    "text": "more",
    "start": "82720",
    "end": "85040"
  },
  {
    "text": "so as we said q flow pipelines are a",
    "start": "85600",
    "end": "88640"
  },
  {
    "text": "very important component of the kubeflow",
    "start": "88640",
    "end": "90479"
  },
  {
    "text": "platform",
    "start": "90479",
    "end": "91439"
  },
  {
    "text": "however when admins try to bring",
    "start": "91439",
    "end": "93600"
  },
  {
    "text": "pipelines to their users",
    "start": "93600",
    "end": "95040"
  },
  {
    "text": "they quickly stumble upon the problem",
    "start": "95040",
    "end": "96720"
  },
  {
    "text": "that kubeflow pipelines has",
    "start": "96720",
    "end": "98320"
  },
  {
    "text": "no isolation authentication or",
    "start": "98320",
    "end": "100479"
  },
  {
    "text": "authorization",
    "start": "100479",
    "end": "101759"
  },
  {
    "text": "all pipelines are running in one",
    "start": "101759",
    "end": "103520"
  },
  {
    "text": "namespace one search environment",
    "start": "103520",
    "end": "105600"
  },
  {
    "text": "which means that secret and data",
    "start": "105600",
    "end": "107119"
  },
  {
    "text": "isolation is impossible",
    "start": "107119",
    "end": "109439"
  },
  {
    "text": "how are we going to isolate authenticate",
    "start": "109439",
    "end": "111840"
  },
  {
    "text": "and authorize to the kubeflow pipelines",
    "start": "111840",
    "end": "113840"
  },
  {
    "text": "api",
    "start": "113840",
    "end": "115280"
  },
  {
    "text": "kubeflow pipelines is not the kubernetes",
    "start": "115280",
    "end": "117520"
  },
  {
    "text": "native api",
    "start": "117520",
    "end": "118719"
  },
  {
    "text": "it is not based on crds or an aggregated",
    "start": "118719",
    "end": "121439"
  },
  {
    "text": "api server",
    "start": "121439",
    "end": "122799"
  },
  {
    "text": "instead keyflow pipelines has its own",
    "start": "122799",
    "end": "124960"
  },
  {
    "text": "api server and database",
    "start": "124960",
    "end": "127040"
  },
  {
    "text": "mysql and object store in the initial",
    "start": "127040",
    "end": "130720"
  },
  {
    "text": "kubeflow pipeline's design there is no",
    "start": "130720",
    "end": "133440"
  },
  {
    "text": "mention of isolation authentication or",
    "start": "133440",
    "end": "135520"
  },
  {
    "text": "authorization",
    "start": "135520",
    "end": "136800"
  },
  {
    "text": "so how can we extend the initial design",
    "start": "136800",
    "end": "138879"
  },
  {
    "text": "to enable multiple users to work",
    "start": "138879",
    "end": "140640"
  },
  {
    "text": "together in a secure isolated manner",
    "start": "140640",
    "end": "144640"
  },
  {
    "text": "to design how to isolate authenticate",
    "start": "144800",
    "end": "147040"
  },
  {
    "text": "and authorize for the kubeflow pipelines",
    "start": "147040",
    "end": "149040"
  },
  {
    "text": "api",
    "start": "149040",
    "end": "149840"
  },
  {
    "text": "we first turn our attention to the",
    "start": "149840",
    "end": "151360"
  },
  {
    "text": "kubernetes api for inspiration",
    "start": "151360",
    "end": "154000"
  },
  {
    "text": "for isolation kubernetes uses namespaces",
    "start": "154000",
    "end": "157599"
  },
  {
    "text": "almost every resource lives in a",
    "start": "157599",
    "end": "159519"
  },
  {
    "text": "namespace",
    "start": "159519",
    "end": "161200"
  },
  {
    "text": "for authentication the kubernetes api",
    "start": "161200",
    "end": "163599"
  },
  {
    "text": "server supports multiple methods",
    "start": "163599",
    "end": "165440"
  },
  {
    "text": "like authenticating user's poi dc that",
    "start": "165440",
    "end": "168400"
  },
  {
    "text": "is open id connect",
    "start": "168400",
    "end": "170480"
  },
  {
    "text": "authenticating machine accounts via",
    "start": "170480",
    "end": "172560"
  },
  {
    "text": "service account tokens",
    "start": "172560",
    "end": "174239"
  },
  {
    "text": "or getting the user identity from http",
    "start": "174239",
    "end": "176879"
  },
  {
    "text": "headers set by a trusted proxy",
    "start": "176879",
    "end": "179760"
  },
  {
    "text": "finally for authorization kubernetes",
    "start": "179760",
    "end": "182239"
  },
  {
    "text": "uses role-based access control over our",
    "start": "182239",
    "end": "184560"
  },
  {
    "text": "back for short",
    "start": "184560",
    "end": "186000"
  },
  {
    "text": "permissions are defined as roles and",
    "start": "186000",
    "end": "188400"
  },
  {
    "text": "given to subjects via role bindings",
    "start": "188400",
    "end": "191280"
  },
  {
    "text": "now let's see how we can apply those",
    "start": "191280",
    "end": "193360"
  },
  {
    "text": "principles for designing isolation",
    "start": "193360",
    "end": "195760"
  },
  {
    "text": "authentication and authorization for the",
    "start": "195760",
    "end": "198000"
  },
  {
    "text": "kubeflow pipelines api",
    "start": "198000",
    "end": "201280"
  },
  {
    "text": "first of all let's talk about isolation",
    "start": "201519",
    "end": "204879"
  },
  {
    "text": "ql pipeline's initial design has no",
    "start": "204879",
    "end": "206959"
  },
  {
    "text": "isolation primitive whatsoever",
    "start": "206959",
    "end": "208959"
  },
  {
    "text": "all pipeline runs are shared and",
    "start": "208959",
    "end": "211280"
  },
  {
    "text": "everyone can access them",
    "start": "211280",
    "end": "213040"
  },
  {
    "text": "we introduce the namespace as an",
    "start": "213040",
    "end": "215280"
  },
  {
    "text": "isolation primitive same as kubernetes",
    "start": "215280",
    "end": "218080"
  },
  {
    "text": "in the queue flow pipelines data model",
    "start": "218080",
    "end": "219920"
  },
  {
    "text": "there are pipeline definitions",
    "start": "219920",
    "end": "221680"
  },
  {
    "text": "and pipeline runs which are",
    "start": "221680",
    "end": "223560"
  },
  {
    "text": "instantiations of those definitions",
    "start": "223560",
    "end": "226720"
  },
  {
    "text": "all pipeline runs reside inside of an",
    "start": "226720",
    "end": "229120"
  },
  {
    "text": "experiment",
    "start": "229120",
    "end": "230959"
  },
  {
    "text": "now to extend the cubesat pipelines data",
    "start": "230959",
    "end": "233439"
  },
  {
    "text": "model with an isolation primitive",
    "start": "233439",
    "end": "235599"
  },
  {
    "text": "we add a namespace attribute to",
    "start": "235599",
    "end": "237439"
  },
  {
    "text": "experiments",
    "start": "237439",
    "end": "238799"
  },
  {
    "text": "pipeline runs further an experiment by",
    "start": "238799",
    "end": "240959"
  },
  {
    "text": "looking up at five minutes in the story",
    "start": "240959",
    "end": "243280"
  },
  {
    "text": "pipeline runs find their namespace by",
    "start": "243280",
    "end": "245680"
  },
  {
    "text": "looking up their experiment",
    "start": "245680",
    "end": "247920"
  },
  {
    "text": "in addition the experiment api endpoints",
    "start": "247920",
    "end": "250480"
  },
  {
    "text": "are extended",
    "start": "250480",
    "end": "252560"
  },
  {
    "text": "all api calls must now specify namespace",
    "start": "252560",
    "end": "256000"
  },
  {
    "text": "same as kubernetes apis",
    "start": "256000",
    "end": "259680"
  },
  {
    "start": "260000",
    "end": "260000"
  },
  {
    "text": "then let's talk about authentication",
    "start": "261359",
    "end": "264720"
  },
  {
    "text": "as we saw the kubernetes api server",
    "start": "264720",
    "end": "267120"
  },
  {
    "text": "supports various ways of authentication",
    "start": "267120",
    "end": "269520"
  },
  {
    "text": "we want to support that in the pipelines",
    "start": "269520",
    "end": "271520"
  },
  {
    "text": "api server as well",
    "start": "271520",
    "end": "273360"
  },
  {
    "text": "we want to be able to authenticate users",
    "start": "273360",
    "end": "275520"
  },
  {
    "text": "as well as service accounts",
    "start": "275520",
    "end": "277280"
  },
  {
    "text": "so we designed the following ways of",
    "start": "277280",
    "end": "279120"
  },
  {
    "text": "authentication",
    "start": "279120",
    "end": "280720"
  },
  {
    "text": "first of all a user can authenticate",
    "start": "280720",
    "end": "282800"
  },
  {
    "text": "with oidc",
    "start": "282800",
    "end": "283919"
  },
  {
    "text": "at the history gateway provided by",
    "start": "283919",
    "end": "285680"
  },
  {
    "text": "kubeflow and then authenticate to the",
    "start": "285680",
    "end": "287680"
  },
  {
    "text": "pipelines api server",
    "start": "287680",
    "end": "289120"
  },
  {
    "text": "via http headers here the steel gateway",
    "start": "289120",
    "end": "293120"
  },
  {
    "text": "acts as a trusted authentication proxy",
    "start": "293120",
    "end": "295919"
  },
  {
    "text": "for machine authentication",
    "start": "295919",
    "end": "297280"
  },
  {
    "text": "htmpls is a good solution but it can't",
    "start": "297280",
    "end": "300400"
  },
  {
    "text": "easily be used with all kinds of",
    "start": "300400",
    "end": "301919"
  },
  {
    "text": "workflows",
    "start": "301919",
    "end": "303120"
  },
  {
    "text": "for example around the completion",
    "start": "303120",
    "end": "305039"
  },
  {
    "text": "workloads like argo workflows and",
    "start": "305039",
    "end": "307360"
  },
  {
    "text": "kubernetes jobs don't fully support",
    "start": "307360",
    "end": "309360"
  },
  {
    "text": "running with an issue sidecar",
    "start": "309360",
    "end": "311759"
  },
  {
    "text": "for that reason we also designed a third",
    "start": "311759",
    "end": "313840"
  },
  {
    "text": "way of authentication",
    "start": "313840",
    "end": "315199"
  },
  {
    "text": "authentication with the service account",
    "start": "315199",
    "end": "316639"
  },
  {
    "text": "token now be careful",
    "start": "316639",
    "end": "319199"
  },
  {
    "text": "we use service account tokens with a",
    "start": "319199",
    "end": "320639"
  },
  {
    "text": "custom audience issued by the token",
    "start": "320639",
    "end": "322639"
  },
  {
    "text": "request api",
    "start": "322639",
    "end": "324080"
  },
  {
    "text": "these tokens are only usable at the",
    "start": "324080",
    "end": "326080"
  },
  {
    "text": "pipeline's api server",
    "start": "326080",
    "end": "327759"
  },
  {
    "text": "and not the kubernetes api server and as",
    "start": "327759",
    "end": "330639"
  },
  {
    "text": "job video will tell you",
    "start": "330639",
    "end": "333680"
  },
  {
    "text": "handing a service account token an",
    "start": "333759",
    "end": "336160"
  },
  {
    "text": "unbound service account token to",
    "start": "336160",
    "end": "338080"
  },
  {
    "text": "anything other",
    "start": "338080",
    "end": "338960"
  },
  {
    "text": "than the kubernetes api server is a very",
    "start": "338960",
    "end": "341360"
  },
  {
    "text": "very bad idea",
    "start": "341360",
    "end": "344240"
  },
  {
    "text": "now we saw what we did about isolation",
    "start": "345520",
    "end": "348240"
  },
  {
    "text": "authentication",
    "start": "348240",
    "end": "349440"
  },
  {
    "text": "now let's talk about authorization",
    "start": "349440",
    "end": "351680"
  },
  {
    "text": "authorization is all about answering the",
    "start": "351680",
    "end": "353759"
  },
  {
    "text": "question of",
    "start": "353759",
    "end": "354639"
  },
  {
    "text": "can user do action on a resource in",
    "start": "354639",
    "end": "358080"
  },
  {
    "text": "namespace",
    "start": "358080",
    "end": "359199"
  },
  {
    "text": "for example cansara list pods",
    "start": "359199",
    "end": "362639"
  },
  {
    "text": "in namespace kubeflow in the first",
    "start": "362639",
    "end": "365199"
  },
  {
    "text": "implementation",
    "start": "365199",
    "end": "366000"
  },
  {
    "text": "keep flow pipelines are using the queue",
    "start": "366000",
    "end": "367600"
  },
  {
    "text": "to access management service or k-form",
    "start": "367600",
    "end": "369600"
  },
  {
    "text": "for short to authorize requests",
    "start": "369600",
    "end": "372080"
  },
  {
    "text": "kfam is introducing a simple view edit",
    "start": "372080",
    "end": "374720"
  },
  {
    "text": "admin access control list abstraction",
    "start": "374720",
    "end": "377039"
  },
  {
    "text": "for all actions on top of kubernetes are",
    "start": "377039",
    "end": "379039"
  },
  {
    "text": "back",
    "start": "379039",
    "end": "380080"
  },
  {
    "text": "as you can see from the permission table",
    "start": "380080",
    "end": "381759"
  },
  {
    "text": "below there are only three levels of",
    "start": "381759",
    "end": "383759"
  },
  {
    "text": "access available",
    "start": "383759",
    "end": "384800"
  },
  {
    "text": "so an admin can specify a more",
    "start": "384800",
    "end": "386960"
  },
  {
    "text": "fine-grained policy",
    "start": "386960",
    "end": "388400"
  },
  {
    "text": "like a user can view and create pipeline",
    "start": "388400",
    "end": "390639"
  },
  {
    "text": "definitions but not start pipeline",
    "start": "390639",
    "end": "392840"
  },
  {
    "text": "rounds this method is deprecated",
    "start": "392840",
    "end": "395440"
  },
  {
    "text": "and will be superseded by our bug and",
    "start": "395440",
    "end": "397360"
  },
  {
    "text": "subject tax review",
    "start": "397360",
    "end": "400400"
  },
  {
    "text": "after talking about the current way of",
    "start": "400560",
    "end": "402319"
  },
  {
    "text": "doing authorization",
    "start": "402319",
    "end": "403680"
  },
  {
    "text": "let's also see where we want to go the",
    "start": "403680",
    "end": "405919"
  },
  {
    "text": "endpoint for authorization is to map",
    "start": "405919",
    "end": "407759"
  },
  {
    "text": "every kubeflow pipeline's api endpoint",
    "start": "407759",
    "end": "409759"
  },
  {
    "text": "to enter back permission",
    "start": "409759",
    "end": "411520"
  },
  {
    "text": "for example we get the api's v1beta1",
    "start": "411520",
    "end": "414800"
  },
  {
    "text": "runs id",
    "start": "414800",
    "end": "416560"
  },
  {
    "text": "api call to get runs and so on",
    "start": "416560",
    "end": "420160"
  },
  {
    "text": "the information about permissions lives",
    "start": "420160",
    "end": "422960"
  },
  {
    "text": "in kubernetes roles and role bindings",
    "start": "422960",
    "end": "424960"
  },
  {
    "text": "just like with native kubernetes",
    "start": "424960",
    "end": "426720"
  },
  {
    "text": "resources",
    "start": "426720",
    "end": "427840"
  },
  {
    "text": "then permissions are checked using a",
    "start": "427840",
    "end": "429840"
  },
  {
    "text": "subject access review poll",
    "start": "429840",
    "end": "431840"
  },
  {
    "text": "now be careful and make sure to note",
    "start": "431840",
    "end": "435120"
  },
  {
    "text": "that these resources are not crds but we",
    "start": "435120",
    "end": "438000"
  },
  {
    "text": "can use the subject access review api to",
    "start": "438000",
    "end": "439840"
  },
  {
    "text": "authorize them anyway",
    "start": "439840",
    "end": "441360"
  },
  {
    "text": "so we are essentially using kubernetes",
    "start": "441360",
    "end": "443280"
  },
  {
    "text": "as an authorization system",
    "start": "443280",
    "end": "445680"
  },
  {
    "text": "an authorization database and enable",
    "start": "445680",
    "end": "448840"
  },
  {
    "text": "admins to assign fine grain permissions",
    "start": "448840",
    "end": "451840"
  },
  {
    "text": "in the same way they do for kubernetes",
    "start": "451840",
    "end": "453759"
  },
  {
    "text": "native apis",
    "start": "453759",
    "end": "454720"
  },
  {
    "text": "with roles and role bindings this method",
    "start": "454720",
    "end": "458240"
  },
  {
    "text": "of",
    "start": "458240",
    "end": "458560"
  },
  {
    "text": "authorization will be implemented by",
    "start": "458560",
    "end": "462800"
  },
  {
    "text": "arito",
    "start": "462840",
    "end": "465840"
  },
  {
    "text": "so we designed authentication",
    "start": "468160",
    "end": "470080"
  },
  {
    "text": "authorization",
    "start": "470080",
    "end": "471360"
  },
  {
    "text": "and isolation for the kepler pipelines",
    "start": "471360",
    "end": "473680"
  },
  {
    "text": "service",
    "start": "473680",
    "end": "474879"
  },
  {
    "text": "isolation is achieved using namespaces",
    "start": "474879",
    "end": "477120"
  },
  {
    "text": "same as kubernetes",
    "start": "477120",
    "end": "478560"
  },
  {
    "text": "for authentication we support multiple",
    "start": "478560",
    "end": "480720"
  },
  {
    "text": "ways for both human",
    "start": "480720",
    "end": "482080"
  },
  {
    "text": "and machine accounts for authorization",
    "start": "482080",
    "end": "484960"
  },
  {
    "text": "we want to move to using native",
    "start": "484960",
    "end": "486560"
  },
  {
    "text": "kubernetes or back permissions and",
    "start": "486560",
    "end": "488479"
  },
  {
    "text": "subject tax review",
    "start": "488479",
    "end": "490479"
  },
  {
    "text": "now let's see how it all comes together",
    "start": "490479",
    "end": "492879"
  },
  {
    "text": "a user",
    "start": "492879",
    "end": "493759"
  },
  {
    "text": "logs in at the http gateway",
    "start": "493759",
    "end": "498800"
  },
  {
    "text": "and is authenticated then the easter",
    "start": "498800",
    "end": "501280"
  },
  {
    "text": "gateway will proxy the request",
    "start": "501280",
    "end": "503840"
  },
  {
    "text": "with the user's identity in http headers",
    "start": "503840",
    "end": "507680"
  },
  {
    "text": "when inside the workload with no human",
    "start": "507680",
    "end": "509520"
  },
  {
    "text": "interaction for example a jupiter",
    "start": "509520",
    "end": "511440"
  },
  {
    "text": "notebook",
    "start": "511440",
    "end": "512080"
  },
  {
    "text": "we can authenticate in two ways we can",
    "start": "512080",
    "end": "514320"
  },
  {
    "text": "authenticate with a service account",
    "start": "514320",
    "end": "515760"
  },
  {
    "text": "token with a custom audience",
    "start": "515760",
    "end": "517360"
  },
  {
    "text": "issued with a token request api call",
    "start": "517360",
    "end": "520320"
  },
  {
    "text": "after issuing the token",
    "start": "520320",
    "end": "522479"
  },
  {
    "text": "we send it via the authorization better",
    "start": "522479",
    "end": "525360"
  },
  {
    "text": "header",
    "start": "525360",
    "end": "525920"
  },
  {
    "text": "in http requests to the pipelines api",
    "start": "525920",
    "end": "528560"
  },
  {
    "text": "server",
    "start": "528560",
    "end": "530000"
  },
  {
    "text": "finally we can authenticate via",
    "start": "530000",
    "end": "532160"
  },
  {
    "text": "istiomtls if that's available for a",
    "start": "532160",
    "end": "534560"
  },
  {
    "text": "workload",
    "start": "534560",
    "end": "537040"
  },
  {
    "text": "finally the pipeline cpi server",
    "start": "538399",
    "end": "541519"
  },
  {
    "text": "now that it knows who the user is and",
    "start": "541519",
    "end": "544000"
  },
  {
    "text": "what the user wants to do",
    "start": "544000",
    "end": "545839"
  },
  {
    "text": "will ask the simple question of can user",
    "start": "545839",
    "end": "548560"
  },
  {
    "text": "do",
    "start": "548560",
    "end": "548880"
  },
  {
    "text": "action on the resource in namespace",
    "start": "548880",
    "end": "552080"
  },
  {
    "text": "and issue a subject access review code",
    "start": "552080",
    "end": "554560"
  },
  {
    "text": "to authorize the request",
    "start": "554560",
    "end": "556560"
  },
  {
    "text": "depending on the answer of the",
    "start": "556560",
    "end": "558640"
  },
  {
    "text": "authorization decision",
    "start": "558640",
    "end": "560320"
  },
  {
    "text": "the pipelines api server will then",
    "start": "560320",
    "end": "562080"
  },
  {
    "text": "execute an action on its database",
    "start": "562080",
    "end": "565839"
  },
  {
    "text": "so all in all we explore kubernetes",
    "start": "565839",
    "end": "568160"
  },
  {
    "text": "design for",
    "start": "568160",
    "end": "568880"
  },
  {
    "text": "isolation authentication and",
    "start": "568880",
    "end": "570560"
  },
  {
    "text": "authorization and use it as a guide for",
    "start": "570560",
    "end": "572880"
  },
  {
    "text": "the kubeflow pipelines api",
    "start": "572880",
    "end": "574880"
  },
  {
    "text": "we isolate using namespaces authenticate",
    "start": "574880",
    "end": "577680"
  },
  {
    "text": "using oidc",
    "start": "577680",
    "end": "578720"
  },
  {
    "text": "service account tokens or s2mtls and",
    "start": "578720",
    "end": "581440"
  },
  {
    "text": "authorized with kubernetes are back",
    "start": "581440",
    "end": "583600"
  },
  {
    "text": "for the next part of the talk i will",
    "start": "583600",
    "end": "585360"
  },
  {
    "text": "hand it over to yuan",
    "start": "585360",
    "end": "586640"
  },
  {
    "text": "who will be talking about isolating",
    "start": "586640",
    "end": "588839"
  },
  {
    "text": "visualizations",
    "start": "588839",
    "end": "590080"
  },
  {
    "text": "networking implementation considerations",
    "start": "590080",
    "end": "592480"
  },
  {
    "text": "and more",
    "start": "592480",
    "end": "594160"
  },
  {
    "text": "so thanks janice this is rian at google",
    "start": "594160",
    "end": "597200"
  },
  {
    "text": "cloud working on kubeflow pipelines",
    "start": "597200",
    "end": "599680"
  },
  {
    "text": "janice just introduced three ways people",
    "start": "599680",
    "end": "602320"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "may authenticate",
    "start": "602320",
    "end": "603760"
  },
  {
    "text": "but for the current phase we have only",
    "start": "603760",
    "end": "605920"
  },
  {
    "text": "designed and implemented",
    "start": "605920",
    "end": "607680"
  },
  {
    "text": "using authentication info as a http",
    "start": "607680",
    "end": "611200"
  },
  {
    "text": "header",
    "start": "611200",
    "end": "612320"
  },
  {
    "text": "now that the kfp api server takes a",
    "start": "612320",
    "end": "614880"
  },
  {
    "text": "plain text header for user identity",
    "start": "614880",
    "end": "618320"
  },
  {
    "text": "it sounds dangerous right so how do we",
    "start": "618320",
    "end": "621120"
  },
  {
    "text": "make sure",
    "start": "621120",
    "end": "621839"
  },
  {
    "text": "clients cannot pretend to be others by",
    "start": "621839",
    "end": "624880"
  },
  {
    "text": "faking a request",
    "start": "624880",
    "end": "627200"
  },
  {
    "text": "this is where s2 mutual tls comes into",
    "start": "627200",
    "end": "630240"
  },
  {
    "text": "the play",
    "start": "630240",
    "end": "631519"
  },
  {
    "text": "you probably know that so here's a",
    "start": "631519",
    "end": "633279"
  },
  {
    "text": "really simplified explanation",
    "start": "633279",
    "end": "636480"
  },
  {
    "text": "first we have a client talking to a",
    "start": "636480",
    "end": "639920"
  },
  {
    "text": "server through plain text http",
    "start": "639920",
    "end": "643120"
  },
  {
    "text": "after turning on mutual tls the request",
    "start": "643120",
    "end": "646480"
  },
  {
    "text": "is proxied through an istio sidecar in",
    "start": "646480",
    "end": "649360"
  },
  {
    "text": "the client pod",
    "start": "649360",
    "end": "650800"
  },
  {
    "text": "then the client sidecar knows how to",
    "start": "650800",
    "end": "652959"
  },
  {
    "text": "secure the connection to the server",
    "start": "652959",
    "end": "654720"
  },
  {
    "text": "sidecar",
    "start": "654720",
    "end": "655839"
  },
  {
    "text": "and the server sidecar talks to server",
    "start": "655839",
    "end": "658240"
  },
  {
    "text": "container",
    "start": "658240",
    "end": "658959"
  },
  {
    "text": "in http again in this way",
    "start": "658959",
    "end": "662320"
  },
  {
    "text": "the client container and server",
    "start": "662320",
    "end": "664079"
  },
  {
    "text": "container are still talking",
    "start": "664079",
    "end": "666079"
  },
  {
    "text": "in plain text http but the connection",
    "start": "666079",
    "end": "669120"
  },
  {
    "text": "between pods",
    "start": "669120",
    "end": "670160"
  },
  {
    "text": "are secured and by this mutual tls",
    "start": "670160",
    "end": "674800"
  },
  {
    "text": "amazing isn't that so in addition to",
    "start": "674800",
    "end": "678160"
  },
  {
    "text": "that",
    "start": "678160",
    "end": "678720"
  },
  {
    "text": "the server-side car now knows identity",
    "start": "678720",
    "end": "681920"
  },
  {
    "text": "of clients talking to it therefore we",
    "start": "681920",
    "end": "684640"
  },
  {
    "text": "can configure some authorization rules",
    "start": "684640",
    "end": "687120"
  },
  {
    "text": "like",
    "start": "687120",
    "end": "687760"
  },
  {
    "text": "only allow requests from this namespace",
    "start": "687760",
    "end": "691040"
  },
  {
    "text": "or like these service accounts",
    "start": "691040",
    "end": "695120"
  },
  {
    "text": "so with these hto features",
    "start": "695680",
    "end": "699440"
  },
  {
    "text": "we are able to set up a set of security",
    "start": "699440",
    "end": "701600"
  },
  {
    "text": "rules to",
    "start": "701600",
    "end": "703200"
  },
  {
    "text": "first allow traffic from instill gateway",
    "start": "703200",
    "end": "705920"
  },
  {
    "text": "to kfb ui",
    "start": "705920",
    "end": "707839"
  },
  {
    "text": "allow traffic among all kfp components",
    "start": "707839",
    "end": "711040"
  },
  {
    "text": "allow traffic from kfp to dependent",
    "start": "711040",
    "end": "713680"
  },
  {
    "text": "services",
    "start": "713680",
    "end": "715040"
  },
  {
    "text": "and the most important one being denying",
    "start": "715040",
    "end": "718399"
  },
  {
    "text": "traffic",
    "start": "718399",
    "end": "718959"
  },
  {
    "text": "from non-kft sources to kf internal",
    "start": "718959",
    "end": "722639"
  },
  {
    "text": "components so finally with all of this",
    "start": "722639",
    "end": "727680"
  },
  {
    "text": "when kfp api server receives a request",
    "start": "727680",
    "end": "730959"
  },
  {
    "text": "we can be sure it's coming from the",
    "start": "730959",
    "end": "733200"
  },
  {
    "text": "trusted",
    "start": "733200",
    "end": "734000"
  },
  {
    "text": "istio gateway",
    "start": "734000",
    "end": "737040"
  },
  {
    "start": "737000",
    "end": "737000"
  },
  {
    "text": "so it took us a lot of efforts just to",
    "start": "737760",
    "end": "740639"
  },
  {
    "text": "securely",
    "start": "740639",
    "end": "741519"
  },
  {
    "text": "pass the user identity to our api server",
    "start": "741519",
    "end": "744959"
  },
  {
    "text": "that's unfortunately just the beginning",
    "start": "744959",
    "end": "747360"
  },
  {
    "text": "of this story",
    "start": "747360",
    "end": "748959"
  },
  {
    "text": "the api server also needs to support",
    "start": "748959",
    "end": "751519"
  },
  {
    "text": "multi-user separation",
    "start": "751519",
    "end": "753760"
  },
  {
    "text": "think about the generic problem of",
    "start": "753760",
    "end": "755839"
  },
  {
    "text": "adding user separation to a service",
    "start": "755839",
    "end": "758880"
  },
  {
    "text": "there are typically two options to do",
    "start": "758880",
    "end": "760880"
  },
  {
    "text": "this",
    "start": "760880",
    "end": "762079"
  },
  {
    "text": "the centralized option is to build a",
    "start": "762079",
    "end": "764800"
  },
  {
    "text": "service that take",
    "start": "764800",
    "end": "766480"
  },
  {
    "text": "for example here namespace as a",
    "start": "766480",
    "end": "768160"
  },
  {
    "text": "primitive concept",
    "start": "768160",
    "end": "769680"
  },
  {
    "text": "and enforces authorization rules on it",
    "start": "769680",
    "end": "773279"
  },
  {
    "text": "it takes more efforts to implement",
    "start": "773279",
    "end": "775360"
  },
  {
    "text": "because we have to do",
    "start": "775360",
    "end": "776639"
  },
  {
    "text": "intrusive logic changes throughout the",
    "start": "776639",
    "end": "778800"
  },
  {
    "text": "application",
    "start": "778800",
    "end": "779839"
  },
  {
    "text": "basically we need to add a namespace",
    "start": "779839",
    "end": "782240"
  },
  {
    "text": "argument",
    "start": "782240",
    "end": "783440"
  },
  {
    "text": "authorization and application logic to",
    "start": "783440",
    "end": "785920"
  },
  {
    "text": "every api method",
    "start": "785920",
    "end": "787680"
  },
  {
    "text": "and don't forget db schema migration",
    "start": "787680",
    "end": "790160"
  },
  {
    "text": "tool",
    "start": "790160",
    "end": "791440"
  },
  {
    "text": "on the other hand the decentralized",
    "start": "791440",
    "end": "793839"
  },
  {
    "text": "option is to start",
    "start": "793839",
    "end": "795279"
  },
  {
    "text": "independent instances of the original",
    "start": "795279",
    "end": "797680"
  },
  {
    "text": "service",
    "start": "797680",
    "end": "798480"
  },
  {
    "text": "for each user we then we need a gateway",
    "start": "798480",
    "end": "801760"
  },
  {
    "text": "in front of it and we need a controller",
    "start": "801760",
    "end": "805440"
  },
  {
    "text": "that auto sets up the services in new",
    "start": "805440",
    "end": "807920"
  },
  {
    "text": "username spaces",
    "start": "807920",
    "end": "809920"
  },
  {
    "text": "this option is non-intrusive we're just",
    "start": "809920",
    "end": "812480"
  },
  {
    "text": "composing",
    "start": "812480",
    "end": "813200"
  },
  {
    "text": "existing application instances in a way",
    "start": "813200",
    "end": "816240"
  },
  {
    "text": "that they look like a single service",
    "start": "816240",
    "end": "818160"
  },
  {
    "text": "with multi-user support",
    "start": "818160",
    "end": "821519"
  },
  {
    "text": "so for kfb api server we decided to",
    "start": "822000",
    "end": "825120"
  },
  {
    "text": "build a centralized one that takes",
    "start": "825120",
    "end": "827279"
  },
  {
    "text": "namespace",
    "start": "827279",
    "end": "828560"
  },
  {
    "text": "as previously described so a single",
    "start": "828560",
    "end": "832079"
  },
  {
    "start": "831000",
    "end": "831000"
  },
  {
    "text": "instance means",
    "start": "832079",
    "end": "833120"
  },
  {
    "text": "lower operational and computational cost",
    "start": "833120",
    "end": "836959"
  },
  {
    "text": "this is important especially because",
    "start": "836959",
    "end": "839279"
  },
  {
    "text": "usually a platform team",
    "start": "839279",
    "end": "841120"
  },
  {
    "text": "can handle kfp systems operations like",
    "start": "841120",
    "end": "844320"
  },
  {
    "text": "upgrade or backup so data scientist",
    "start": "844320",
    "end": "847279"
  },
  {
    "text": "teams can focus on their own work",
    "start": "847279",
    "end": "850320"
  },
  {
    "text": "so other reasons including reserving the",
    "start": "850320",
    "end": "852959"
  },
  {
    "text": "possibility of building cross namespace",
    "start": "852959",
    "end": "855199"
  },
  {
    "text": "features like",
    "start": "855199",
    "end": "856320"
  },
  {
    "text": "sharing and this comes with a cost",
    "start": "856320",
    "end": "860079"
  },
  {
    "text": "but it's a cost only for us we did a lot",
    "start": "860079",
    "end": "863199"
  },
  {
    "text": "of code changes through",
    "start": "863199",
    "end": "864480"
  },
  {
    "text": "all apis made the namespace parameter",
    "start": "864480",
    "end": "867680"
  },
  {
    "text": "primitive concept",
    "start": "867680",
    "end": "869040"
  },
  {
    "text": "and added authorizations in place",
    "start": "869040",
    "end": "873040"
  },
  {
    "text": "also remember kfp provides end-to-end",
    "start": "873760",
    "end": "876320"
  },
  {
    "text": "reusable machine learning workflow",
    "start": "876320",
    "end": "878959"
  },
  {
    "text": "so it looks like this seeing",
    "start": "878959",
    "end": "880800"
  },
  {
    "text": "visualization right inside kfpui we also",
    "start": "880800",
    "end": "884399"
  },
  {
    "text": "provide",
    "start": "884399",
    "end": "885040"
  },
  {
    "text": "tensorboard self-service instances and",
    "start": "885040",
    "end": "888160"
  },
  {
    "text": "artifact preview",
    "start": "888160",
    "end": "889279"
  },
  {
    "text": "right inside ui however users may decide",
    "start": "889279",
    "end": "893120"
  },
  {
    "text": "to store their artifacts",
    "start": "893120",
    "end": "894959"
  },
  {
    "text": "in external storages like google cloud",
    "start": "894959",
    "end": "897760"
  },
  {
    "text": "storage",
    "start": "897760",
    "end": "898720"
  },
  {
    "text": "so cafe ui server needs to fetch these",
    "start": "898720",
    "end": "901839"
  },
  {
    "text": "artifacts for them in order to show them",
    "start": "901839",
    "end": "904480"
  },
  {
    "text": "on the on the ui",
    "start": "904480",
    "end": "906160"
  },
  {
    "text": "so how do we separate kfe ui permissions",
    "start": "906160",
    "end": "910959"
  },
  {
    "start": "908000",
    "end": "908000"
  },
  {
    "text": "for this case we decided to take the",
    "start": "910959",
    "end": "913440"
  },
  {
    "text": "decentralized option here",
    "start": "913440",
    "end": "915760"
  },
  {
    "text": "because these artifacts tensorboard and",
    "start": "915760",
    "end": "918399"
  },
  {
    "text": "visualization services are stateless",
    "start": "918399",
    "end": "920800"
  },
  {
    "text": "lightweight clients so there's not much",
    "start": "920800",
    "end": "924079"
  },
  {
    "text": "operational cost anyway also users are",
    "start": "924079",
    "end": "927920"
  },
  {
    "text": "free to configure their own instances",
    "start": "927920",
    "end": "930240"
  },
  {
    "text": "with correct permissions",
    "start": "930240",
    "end": "931759"
  },
  {
    "text": "in this way additionally",
    "start": "931759",
    "end": "935920"
  },
  {
    "text": "one contributor is adding volume support",
    "start": "935920",
    "end": "938240"
  },
  {
    "text": "for data passing",
    "start": "938240",
    "end": "939759"
  },
  {
    "text": "a decentralized factory servers can",
    "start": "939759",
    "end": "942800"
  },
  {
    "text": "even support mounting persistence",
    "start": "942800",
    "end": "945040"
  },
  {
    "text": "volumes",
    "start": "945040",
    "end": "945920"
  },
  {
    "text": "because they are also in user name",
    "start": "945920",
    "end": "947839"
  },
  {
    "text": "spaces",
    "start": "947839",
    "end": "949279"
  },
  {
    "text": "so comparing to kfp api server we took a",
    "start": "949279",
    "end": "952800"
  },
  {
    "text": "different approach",
    "start": "952800",
    "end": "954720"
  },
  {
    "text": "for artifact servers because they have",
    "start": "954720",
    "end": "957519"
  },
  {
    "text": "different characteristics",
    "start": "957519",
    "end": "959440"
  },
  {
    "text": "and tradeoffs that in the end both",
    "start": "959440",
    "end": "962399"
  },
  {
    "text": "different options",
    "start": "962399",
    "end": "963360"
  },
  {
    "text": "make sense for different things we are",
    "start": "963360",
    "end": "966839"
  },
  {
    "text": "considering",
    "start": "966839",
    "end": "968079"
  },
  {
    "text": "so it's interesting that we got the",
    "start": "968079",
    "end": "969839"
  },
  {
    "text": "experience of building multi-user",
    "start": "969839",
    "end": "971519"
  },
  {
    "text": "support with both",
    "start": "971519",
    "end": "972639"
  },
  {
    "text": "options for different components in kfp",
    "start": "972639",
    "end": "977279"
  },
  {
    "text": "there are still some missing pieces for",
    "start": "979040",
    "end": "980800"
  },
  {
    "start": "980000",
    "end": "980000"
  },
  {
    "text": "this design",
    "start": "980800",
    "end": "982480"
  },
  {
    "text": "first how do we integrate other two",
    "start": "982480",
    "end": "985360"
  },
  {
    "text": "types of",
    "start": "985360",
    "end": "986079"
  },
  {
    "text": "authentication methods with in-cluster",
    "start": "986079",
    "end": "989120"
  },
  {
    "text": "traffic authorization",
    "start": "989120",
    "end": "992160"
  },
  {
    "text": "they can allow other workloads in the",
    "start": "992160",
    "end": "994480"
  },
  {
    "text": "cluster to authenticate to kft api",
    "start": "994480",
    "end": "996959"
  },
  {
    "text": "server",
    "start": "996959",
    "end": "998800"
  },
  {
    "text": "second pipeline definitions are still",
    "start": "998800",
    "end": "1001759"
  },
  {
    "text": "shared",
    "start": "1001759",
    "end": "1002720"
  },
  {
    "text": "that basically means code pipeline code",
    "start": "1002720",
    "end": "1005199"
  },
  {
    "text": "is shared",
    "start": "1005199",
    "end": "1006639"
  },
  {
    "text": "so this is okay for some organizations",
    "start": "1006639",
    "end": "1008800"
  },
  {
    "text": "but not others",
    "start": "1008800",
    "end": "1011680"
  },
  {
    "text": "then menu object store and machine",
    "start": "1011680",
    "end": "1014320"
  },
  {
    "text": "learning metadata",
    "start": "1014320",
    "end": "1015680"
  },
  {
    "text": "db are dependencies of kfp they don't",
    "start": "1015680",
    "end": "1019040"
  },
  {
    "text": "support separation themselves",
    "start": "1019040",
    "end": "1021519"
  },
  {
    "text": "so it's still an open question how kfp",
    "start": "1021519",
    "end": "1024558"
  },
  {
    "text": "can support separation for them",
    "start": "1024559",
    "end": "1028319"
  },
  {
    "start": "1025000",
    "end": "1025000"
  },
  {
    "text": "so after discussing all about the design",
    "start": "1029360",
    "end": "1032319"
  },
  {
    "text": "let me share",
    "start": "1032319",
    "end": "1033120"
  },
  {
    "text": "interesting things i learned when",
    "start": "1033120",
    "end": "1034959"
  },
  {
    "text": "implementing this feature",
    "start": "1034959",
    "end": "1037199"
  },
  {
    "text": "first on background i was learning still",
    "start": "1037199",
    "end": "1039600"
  },
  {
    "text": "from the beginning",
    "start": "1039600",
    "end": "1040959"
  },
  {
    "text": "through this so i hope these experiences",
    "start": "1040959",
    "end": "1043760"
  },
  {
    "text": "can",
    "start": "1043760",
    "end": "1044400"
  },
  {
    "text": "help someone who's listening to and",
    "start": "1044400",
    "end": "1047918"
  },
  {
    "text": "disclaimer i was working with st 1.1",
    "start": "1047919",
    "end": "1051440"
  },
  {
    "text": "which was a fairly old version kubeflow",
    "start": "1051440",
    "end": "1054000"
  },
  {
    "text": "was using",
    "start": "1054000",
    "end": "1054799"
  },
  {
    "text": "it's likely some of these have been",
    "start": "1054799",
    "end": "1056720"
  },
  {
    "text": "improved without my notice",
    "start": "1056720",
    "end": "1059280"
  },
  {
    "text": "okay so let's start lessons i learned",
    "start": "1059280",
    "end": "1062799"
  },
  {
    "text": "the hard way",
    "start": "1062799",
    "end": "1066559"
  },
  {
    "text": "uh before using any istio features",
    "start": "1066559",
    "end": "1070480"
  },
  {
    "text": "clients and servers need to have istio",
    "start": "1070480",
    "end": "1072880"
  },
  {
    "text": "sidecars injected",
    "start": "1072880",
    "end": "1075039"
  },
  {
    "text": "that became my immediate blocker right",
    "start": "1075039",
    "end": "1077760"
  },
  {
    "text": "away",
    "start": "1077760",
    "end": "1078720"
  },
  {
    "text": "remember kubeflow is a platform of",
    "start": "1078720",
    "end": "1081280"
  },
  {
    "text": "machine learning applications on cloud",
    "start": "1081280",
    "end": "1083600"
  },
  {
    "text": "there are a lot of applications other",
    "start": "1083600",
    "end": "1085600"
  },
  {
    "text": "than kubeflow pipelines",
    "start": "1085600",
    "end": "1086960"
  },
  {
    "text": "in the same control plane namespace",
    "start": "1086960",
    "end": "1089679"
  },
  {
    "text": "pipelines was actually the first",
    "start": "1089679",
    "end": "1091520"
  },
  {
    "text": "applications",
    "start": "1091520",
    "end": "1092880"
  },
  {
    "text": "to require is to security in this",
    "start": "1092880",
    "end": "1095280"
  },
  {
    "text": "namespace",
    "start": "1095280",
    "end": "1096240"
  },
  {
    "text": "so i had to turn that on turn",
    "start": "1096240",
    "end": "1099600"
  },
  {
    "text": "it to sidecar injection on",
    "start": "1099600",
    "end": "1102880"
  },
  {
    "text": "um so there are several things that can",
    "start": "1102880",
    "end": "1105600"
  },
  {
    "text": "configure it",
    "start": "1105600",
    "end": "1107120"
  },
  {
    "text": "there's a cluster-scoped config map",
    "start": "1107120",
    "end": "1110720"
  },
  {
    "text": "that changes whether parts are injected",
    "start": "1110720",
    "end": "1113120"
  },
  {
    "text": "by default",
    "start": "1113120",
    "end": "1114480"
  },
  {
    "text": "there's also a namespace label that is",
    "start": "1114480",
    "end": "1117440"
  },
  {
    "text": "required before",
    "start": "1117440",
    "end": "1118559"
  },
  {
    "text": "any auto injection can happen in the",
    "start": "1118559",
    "end": "1120840"
  },
  {
    "text": "namespace",
    "start": "1120840",
    "end": "1122000"
  },
  {
    "text": "of course there's also a pod level",
    "start": "1122000",
    "end": "1124160"
  },
  {
    "text": "annotation that works for",
    "start": "1124160",
    "end": "1125600"
  },
  {
    "text": "just the parts so in order to",
    "start": "1125600",
    "end": "1129440"
  },
  {
    "text": "turn on istio sidecar injection what i",
    "start": "1129440",
    "end": "1132320"
  },
  {
    "text": "wanted was that",
    "start": "1132320",
    "end": "1133919"
  },
  {
    "text": "all pods in the shared name place should",
    "start": "1133919",
    "end": "1137039"
  },
  {
    "text": "default to not",
    "start": "1137039",
    "end": "1138240"
  },
  {
    "text": "inject while the kfp parts can use pod",
    "start": "1138240",
    "end": "1141520"
  },
  {
    "text": "level annotations to turn on",
    "start": "1141520",
    "end": "1143679"
  },
  {
    "text": "injection but that's actually not",
    "start": "1143679",
    "end": "1147600"
  },
  {
    "text": "feasible because the default policy",
    "start": "1147600",
    "end": "1150720"
  },
  {
    "text": "is a cluster scope configuration uh",
    "start": "1150720",
    "end": "1153600"
  },
  {
    "text": "while other namespaces in kubeflow have",
    "start": "1153600",
    "end": "1156080"
  },
  {
    "text": "already been depending on that behavior",
    "start": "1156080",
    "end": "1158720"
  },
  {
    "text": "uh it would be a",
    "start": "1158720",
    "end": "1160160"
  },
  {
    "text": "bigger problem if i wanted to change the",
    "start": "1160160",
    "end": "1162400"
  },
  {
    "text": "cluster scope",
    "start": "1162400",
    "end": "1163360"
  },
  {
    "text": "default value so in the end i had to add",
    "start": "1163360",
    "end": "1166640"
  },
  {
    "text": "the disable",
    "start": "1166640",
    "end": "1167440"
  },
  {
    "text": "injection annotation to every other part",
    "start": "1167440",
    "end": "1170320"
  },
  {
    "text": "in the shared namespace",
    "start": "1170320",
    "end": "1172160"
  },
  {
    "text": "with a really huge pull request",
    "start": "1172160",
    "end": "1175840"
  },
  {
    "text": "and got some really hard time",
    "start": "1175840",
    "end": "1177440"
  },
  {
    "text": "troubleshooting all the pre-summit tests",
    "start": "1177440",
    "end": "1180320"
  },
  {
    "text": "but it was necessary and it was a great",
    "start": "1180320",
    "end": "1183679"
  },
  {
    "text": "step",
    "start": "1183679",
    "end": "1184400"
  },
  {
    "text": "for the entire qfloor community to move",
    "start": "1184400",
    "end": "1186640"
  },
  {
    "text": "towards",
    "start": "1186640",
    "end": "1188000"
  },
  {
    "text": "integrating more issue security features",
    "start": "1188000",
    "end": "1193840"
  },
  {
    "text": "so when gradually migrating to istu",
    "start": "1195679",
    "end": "1199679"
  },
  {
    "text": "at first i was tempted to first set up",
    "start": "1199679",
    "end": "1202400"
  },
  {
    "text": "some authorization rules",
    "start": "1202400",
    "end": "1204240"
  },
  {
    "text": "without turning on mutual tls",
    "start": "1204240",
    "end": "1207440"
  },
  {
    "text": "um because who knows the documentation",
    "start": "1207440",
    "end": "1210240"
  },
  {
    "text": "looks complex for mutual trs",
    "start": "1210240",
    "end": "1212799"
  },
  {
    "text": "and so i i thought probably i could skip",
    "start": "1212799",
    "end": "1215679"
  },
  {
    "text": "it",
    "start": "1215679",
    "end": "1216960"
  },
  {
    "text": "but please be careful that wouldn't work",
    "start": "1216960",
    "end": "1219360"
  },
  {
    "text": "for many authorization rules",
    "start": "1219360",
    "end": "1221600"
  },
  {
    "text": "because a rule that refers to even only",
    "start": "1221600",
    "end": "1224320"
  },
  {
    "text": "name spaces",
    "start": "1224320",
    "end": "1225360"
  },
  {
    "text": "requires mutual tls it still doesn't",
    "start": "1225360",
    "end": "1229120"
  },
  {
    "text": "magically knows",
    "start": "1229120",
    "end": "1230640"
  },
  {
    "text": "the namespace of a request",
    "start": "1230640",
    "end": "1233840"
  },
  {
    "text": "mutual tls is on these two side cards",
    "start": "1233840",
    "end": "1236799"
  },
  {
    "text": "mutually authenticate each other",
    "start": "1236799",
    "end": "1238960"
  },
  {
    "text": "so they know each other's identity for",
    "start": "1238960",
    "end": "1241760"
  },
  {
    "text": "example",
    "start": "1241760",
    "end": "1242640"
  },
  {
    "text": "service account a in namespace b",
    "start": "1242640",
    "end": "1246240"
  },
  {
    "text": "so that's why it still can authorize",
    "start": "1246240",
    "end": "1248720"
  },
  {
    "text": "requests by namespace",
    "start": "1248720",
    "end": "1250640"
  },
  {
    "text": "to put it in another way this is",
    "start": "1250640",
    "end": "1253039"
  },
  {
    "text": "actually",
    "start": "1253039",
    "end": "1253679"
  },
  {
    "text": "um listen carefully this is actually a",
    "start": "1253679",
    "end": "1255919"
  },
  {
    "text": "live takeaway",
    "start": "1255919",
    "end": "1257120"
  },
  {
    "text": "so before giving anyone money don't",
    "start": "1257120",
    "end": "1259840"
  },
  {
    "text": "forget",
    "start": "1259840",
    "end": "1260480"
  },
  {
    "text": "authentication you need to ask them",
    "start": "1260480",
    "end": "1263120"
  },
  {
    "text": "prove",
    "start": "1263120",
    "end": "1264000"
  },
  {
    "text": "who they are first this is as important",
    "start": "1264000",
    "end": "1267039"
  },
  {
    "text": "as authorization",
    "start": "1267039",
    "end": "1269120"
  },
  {
    "text": "so these were just showcases of the hard",
    "start": "1269120",
    "end": "1272559"
  },
  {
    "text": "problems that",
    "start": "1272559",
    "end": "1273520"
  },
  {
    "text": "took me on still learner really a few",
    "start": "1273520",
    "end": "1277120"
  },
  {
    "text": "days to figure out",
    "start": "1277120",
    "end": "1278559"
  },
  {
    "text": "troubleshooting",
    "start": "1278559",
    "end": "1281279"
  },
  {
    "text": "so my takeaways are do not skip",
    "start": "1283679",
    "end": "1287520"
  },
  {
    "text": "the basics really understanding is two",
    "start": "1287520",
    "end": "1290559"
  },
  {
    "text": "concepts",
    "start": "1290559",
    "end": "1291440"
  },
  {
    "text": "save more time later and",
    "start": "1291440",
    "end": "1294720"
  },
  {
    "text": "it's good to learn troubleshooting",
    "start": "1294720",
    "end": "1296720"
  },
  {
    "text": "techniques for istio system",
    "start": "1296720",
    "end": "1298320"
  },
  {
    "text": "end to end um there's a great",
    "start": "1298320",
    "end": "1300320"
  },
  {
    "text": "documentation for that",
    "start": "1300320",
    "end": "1301840"
  },
  {
    "text": "but from my experience most",
    "start": "1301840",
    "end": "1304640"
  },
  {
    "text": "authorization problems can be solved",
    "start": "1304640",
    "end": "1306960"
  },
  {
    "text": "with just",
    "start": "1306960",
    "end": "1307679"
  },
  {
    "text": "one section in the huge troubleshooting",
    "start": "1307679",
    "end": "1309919"
  },
  {
    "text": "doc",
    "start": "1309919",
    "end": "1310960"
  },
  {
    "text": "that's the ensuring proxies enforced",
    "start": "1310960",
    "end": "1314159"
  },
  {
    "text": "policies correctly section",
    "start": "1314159",
    "end": "1316240"
  },
  {
    "text": "it tells you how to enable debugging",
    "start": "1316240",
    "end": "1318640"
  },
  {
    "text": "logging",
    "start": "1318640",
    "end": "1319280"
  },
  {
    "text": "um for a site card then you can observe",
    "start": "1319280",
    "end": "1323120"
  },
  {
    "text": "what information is still parsed from a",
    "start": "1323120",
    "end": "1325440"
  },
  {
    "text": "request",
    "start": "1325440",
    "end": "1326320"
  },
  {
    "text": "and whether it was denied",
    "start": "1326320",
    "end": "1332320"
  },
  {
    "text": "so at the end remember that this",
    "start": "1332320",
    "end": "1335679"
  },
  {
    "text": "couldn't happen without these amazing",
    "start": "1335679",
    "end": "1338080"
  },
  {
    "text": "people",
    "start": "1338080",
    "end": "1339280"
  },
  {
    "text": "we all worked on the design together",
    "start": "1339280",
    "end": "1342080"
  },
  {
    "text": "while ning",
    "start": "1342080",
    "end": "1343440"
  },
  {
    "text": "chen and i at google cloud implemented",
    "start": "1343440",
    "end": "1347200"
  },
  {
    "text": "current features thank you let's proceed",
    "start": "1347200",
    "end": "1350559"
  },
  {
    "text": "with our demo",
    "start": "1350559",
    "end": "1351760"
  },
  {
    "text": "in this demo we will see two kubeflow",
    "start": "1351760",
    "end": "1354559"
  },
  {
    "text": "users",
    "start": "1354559",
    "end": "1355360"
  },
  {
    "text": "working on the same kubeflow pipelines",
    "start": "1355360",
    "end": "1357600"
  },
  {
    "text": "installation",
    "start": "1357600",
    "end": "1359360"
  },
  {
    "text": "or orpheus and yuri dies are two users",
    "start": "1359360",
    "end": "1361679"
  },
  {
    "text": "of kubeflow",
    "start": "1361679",
    "end": "1363120"
  },
  {
    "text": "who are working on the same kubeflow",
    "start": "1363120",
    "end": "1364720"
  },
  {
    "text": "pipelines installation but as you will",
    "start": "1364720",
    "end": "1366640"
  },
  {
    "text": "see",
    "start": "1366640",
    "end": "1366960"
  },
  {
    "text": "the resources are isolated let's see",
    "start": "1366960",
    "end": "1369600"
  },
  {
    "text": "what happens",
    "start": "1369600",
    "end": "1372240"
  },
  {
    "text": "first of all orpheus will log into",
    "start": "1373280",
    "end": "1375360"
  },
  {
    "text": "kubeflow",
    "start": "1375360",
    "end": "1377919"
  },
  {
    "text": "when orthos logs in he will be greeted",
    "start": "1382559",
    "end": "1384640"
  },
  {
    "text": "by the kubeflow central dashboard",
    "start": "1384640",
    "end": "1386640"
  },
  {
    "text": "where he will navigate to the notebooks",
    "start": "1386640",
    "end": "1388480"
  },
  {
    "text": "page and start a new notebook server",
    "start": "1388480",
    "end": "1392000"
  },
  {
    "text": "here orpheus is using the codelab",
    "start": "1392000",
    "end": "1395520"
  },
  {
    "text": "tutorial the titanic codelab tutorial",
    "start": "1395520",
    "end": "1402400"
  },
  {
    "text": "orthos will also select the allow access",
    "start": "1402400",
    "end": "1404960"
  },
  {
    "text": "to crypto pipelines and allow access to",
    "start": "1404960",
    "end": "1406799"
  },
  {
    "text": "raw configurations",
    "start": "1406799",
    "end": "1408159"
  },
  {
    "text": "which add specific service account",
    "start": "1408159",
    "end": "1410720"
  },
  {
    "text": "tokens",
    "start": "1410720",
    "end": "1411360"
  },
  {
    "text": "to the pod in order to access the",
    "start": "1411360",
    "end": "1413520"
  },
  {
    "text": "pipelines api server",
    "start": "1413520",
    "end": "1414960"
  },
  {
    "text": "and the rok api server when the notebook",
    "start": "1414960",
    "end": "1418240"
  },
  {
    "text": "server is ready",
    "start": "1418240",
    "end": "1419200"
  },
  {
    "text": "orfes will connect to it and open the",
    "start": "1419200",
    "end": "1422400"
  },
  {
    "text": "jupyter notebook he has prepared",
    "start": "1422400",
    "end": "1424080"
  },
  {
    "text": "beforehand",
    "start": "1424080",
    "end": "1426640"
  },
  {
    "text": "now in order to convert the jupiter",
    "start": "1426880",
    "end": "1430159"
  },
  {
    "text": "notebook to",
    "start": "1430159",
    "end": "1431440"
  },
  {
    "text": "a kubeflow pipeline orphans will be",
    "start": "1431440",
    "end": "1433919"
  },
  {
    "text": "using the kale tool",
    "start": "1433919",
    "end": "1436320"
  },
  {
    "text": "with the kill tool you can just tag your",
    "start": "1436320",
    "end": "1439520"
  },
  {
    "text": "notebook cells and with a click of a",
    "start": "1439520",
    "end": "1442240"
  },
  {
    "text": "button",
    "start": "1442240",
    "end": "1443039"
  },
  {
    "text": "gail will parse your jupiter notebook",
    "start": "1443039",
    "end": "1445279"
  },
  {
    "text": "and convert it into kubeflow pipeline",
    "start": "1445279",
    "end": "1448640"
  },
  {
    "text": "as we can see here kale converts the",
    "start": "1448640",
    "end": "1451279"
  },
  {
    "text": "notebook",
    "start": "1451279",
    "end": "1452559"
  },
  {
    "text": "submits the pipeline to the pipelines",
    "start": "1452559",
    "end": "1455039"
  },
  {
    "text": "api server",
    "start": "1455039",
    "end": "1456320"
  },
  {
    "text": "and will finally present orpheus with a",
    "start": "1456320",
    "end": "1458400"
  },
  {
    "text": "link so he can track",
    "start": "1458400",
    "end": "1460000"
  },
  {
    "text": "the progress",
    "start": "1460000",
    "end": "1462640"
  },
  {
    "text": "orfus visit visits that link and here he",
    "start": "1467440",
    "end": "1471039"
  },
  {
    "text": "can track the progress",
    "start": "1471039",
    "end": "1472559"
  },
  {
    "text": "of its of his run",
    "start": "1472559",
    "end": "1475679"
  },
  {
    "text": "now let's go to the other user",
    "start": "1481679",
    "end": "1487840"
  },
  {
    "text": "yuridise also goes to the kubflow page",
    "start": "1487840",
    "end": "1491440"
  },
  {
    "text": "and logs in",
    "start": "1491440",
    "end": "1501840"
  },
  {
    "text": "after that yuri dies will list all",
    "start": "1505919",
    "end": "1508960"
  },
  {
    "text": "pipeline runs",
    "start": "1508960",
    "end": "1511679"
  },
  {
    "text": "and as you can see she cannot see the",
    "start": "1511679",
    "end": "1513840"
  },
  {
    "text": "runs",
    "start": "1513840",
    "end": "1514880"
  },
  {
    "text": "which or face hers have started these",
    "start": "1514880",
    "end": "1517360"
  },
  {
    "text": "runs are in namespace cuteplay orpheus",
    "start": "1517360",
    "end": "1520559"
  },
  {
    "text": "while she is working in namespace you",
    "start": "1520559",
    "end": "1522559"
  },
  {
    "text": "play yuridize",
    "start": "1522559",
    "end": "1524480"
  },
  {
    "text": "when she tries to visit the link for one",
    "start": "1524480",
    "end": "1526960"
  },
  {
    "text": "of our faces runs",
    "start": "1526960",
    "end": "1528880"
  },
  {
    "text": "she gets an error because it's not",
    "start": "1528880",
    "end": "1530400"
  },
  {
    "text": "allowed to do that",
    "start": "1530400",
    "end": "1533279"
  },
  {
    "text": "and when going to the experiments page",
    "start": "1538559",
    "end": "1541360"
  },
  {
    "text": "you can see",
    "start": "1541360",
    "end": "1542080"
  },
  {
    "text": "that she cannot see or faces a titanic",
    "start": "1542080",
    "end": "1545360"
  },
  {
    "text": "experiment as well",
    "start": "1545360",
    "end": "1547600"
  },
  {
    "text": "to find it to prove that we can list the",
    "start": "1547600",
    "end": "1550799"
  },
  {
    "text": "pods",
    "start": "1550799",
    "end": "1551360"
  },
  {
    "text": "for the namespace of our fails",
    "start": "1551360",
    "end": "1554640"
  },
  {
    "text": "called cube flower fails and see that",
    "start": "1554640",
    "end": "1557679"
  },
  {
    "text": "all",
    "start": "1557679",
    "end": "1558159"
  },
  {
    "text": "the around pods are there while in",
    "start": "1558159",
    "end": "1561039"
  },
  {
    "text": "kubeflow uridize",
    "start": "1561039",
    "end": "1563120"
  },
  {
    "text": "no pods exist and this is how we isolate",
    "start": "1563120",
    "end": "1567440"
  },
  {
    "text": "kubeflow pipelines for multiple users",
    "start": "1567440",
    "end": "1571600"
  }
]