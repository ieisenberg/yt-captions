[
  {
    "text": "okay good morning everyone thank you very much for coming to our talk on fussing the cncf's landscape",
    "start": "160",
    "end": "7200"
  },
  {
    "text": "my name is adam and i work with david at adalogix and over the course of the almost la of",
    "start": "7200",
    "end": "14719"
  },
  {
    "text": "the last almost two years we have been working on securing and",
    "start": "14719",
    "end": "20000"
  },
  {
    "text": "we have been working on improving the security posture of cncf projects by way of fosting",
    "start": "20000",
    "end": "28240"
  },
  {
    "text": "the work has been funded by the cncf and in this talk we will",
    "start": "28960",
    "end": "34960"
  },
  {
    "text": "present some of the experiences and the results that have come out of this and we will",
    "start": "34960",
    "end": "41760"
  },
  {
    "text": "look forward and consider where we are in the greater picture of this work",
    "start": "41760",
    "end": "49760"
  },
  {
    "text": "a quick run-through of what we will go through in this talk",
    "start": "49760",
    "end": "55120"
  },
  {
    "text": "a quick forcing intro for those that are unfamiliar with fussing",
    "start": "55120",
    "end": "61359"
  },
  {
    "text": "next we will go through the oss first project and why it is so important for the",
    "start": "61359",
    "end": "67920"
  },
  {
    "text": "open source ecosystem we will touch upon and go into",
    "start": "67920",
    "end": "75200"
  },
  {
    "text": "the state of forcing cncf projects",
    "start": "75200",
    "end": "81040"
  },
  {
    "text": "and in that regard we will go into how we how to foster cncf project and how we",
    "start": "83360",
    "end": "90159"
  },
  {
    "text": "approach that challenge and and some of the results that have",
    "start": "90159",
    "end": "95680"
  },
  {
    "text": "come out of this and lastly we will consider future work",
    "start": "95680",
    "end": "100880"
  },
  {
    "text": "in terms of [Music] in the perspective of where we what the",
    "start": "100880",
    "end": "106000"
  },
  {
    "text": "work that has been done now and where we will be going next and uh",
    "start": "106000",
    "end": "112240"
  },
  {
    "text": "and also just to note here uh we'll present a lot of work that we have been doing but we will also touch upon",
    "start": "112240",
    "end": "117680"
  },
  {
    "text": "projects and data where we are just like tiny pieces of of the whole puzzle because there are other people fussing",
    "start": "117680",
    "end": "123920"
  },
  {
    "text": "uh various uncf projects and they deserve a huge amount of credit in the data that we show as well",
    "start": "123920",
    "end": "131599"
  },
  {
    "text": "okay so i'm david and i'm going to give a quick intro to fussing and the main reason for this is amongst",
    "start": "133280",
    "end": "140720"
  },
  {
    "text": "other reasons to kind of argue why it's useful to people",
    "start": "140720",
    "end": "147120"
  },
  {
    "text": "who might be interested in fussing but not but might not believe it's it's really working",
    "start": "147120",
    "end": "153040"
  },
  {
    "text": "and how many here are familiar with fussing how many have heard about it before",
    "start": "153040",
    "end": "158080"
  },
  {
    "text": "okay so around i wanna say 40 or something how many have never heard about fossiling before",
    "start": "158080",
    "end": "164560"
  },
  {
    "text": "okay so certainly i think maybe this talk is jumping a little bit too too",
    "start": "164560",
    "end": "169599"
  },
  {
    "text": "ahead then so so fussing from a high point of view is",
    "start": "169599",
    "end": "174640"
  },
  {
    "text": "like automating test case generation so it's very similar to",
    "start": "174640",
    "end": "180319"
  },
  {
    "text": "writing test unit tests or integration tests but it's a way to kind of like generalize",
    "start": "180319",
    "end": "186000"
  },
  {
    "text": "the input that a test case uses so on the left here you see traditional",
    "start": "186000",
    "end": "191840"
  },
  {
    "text": "ways of of of testing let's say my api and if you were to test that with",
    "start": "191840",
    "end": "198239"
  },
  {
    "text": "various different inputs you would just have you know a set of lines in your code that says that calls my api with",
    "start": "198239",
    "end": "204879"
  },
  {
    "text": "with the different inputs and the way you would generalize this in fussing is you would have this",
    "start": "204879",
    "end": "211280"
  },
  {
    "text": "essentially a loop that calls into my api but instead of giving a specific input you would just ask the first to",
    "start": "211280",
    "end": "218720"
  },
  {
    "text": "give you this input like you will ask the first to give you some input and that will then connect",
    "start": "218720",
    "end": "225760"
  },
  {
    "text": "the point is then that the fossa can generate all sorts of inputs and this is um",
    "start": "225760",
    "end": "231920"
  },
  {
    "text": "the input that the fossa will generate is often considered to be just random input but in fact it's kind of input",
    "start": "231920",
    "end": "238480"
  },
  {
    "text": "that has been constructed by way of a very complex system",
    "start": "238480",
    "end": "243760"
  },
  {
    "text": "underneath that is the fussing engine which approximates in a sense a very useful",
    "start": "243760",
    "end": "249599"
  },
  {
    "text": "input for for the files that if one can argue but how this will look in actual code is",
    "start": "249599",
    "end": "255360"
  },
  {
    "text": "right there so here we have the simplest case of uh um flush driver in the go language where",
    "start": "255360",
    "end": "262240"
  },
  {
    "text": "you just have a function called fuss and this will then be called by the fussing engine which is kind of like underlying",
    "start": "262240",
    "end": "268320"
  },
  {
    "text": "in your program with default input and then you just called my api so this is the exact way",
    "start": "268320",
    "end": "273840"
  },
  {
    "text": "that you would um write a fossa for my api in golang",
    "start": "273840",
    "end": "279360"
  },
  {
    "text": "so i said before there's this there's this myth that fussing is just",
    "start": "279360",
    "end": "284479"
  },
  {
    "text": "random input it's not going to work to my application that uses highly complex data data types",
    "start": "284479",
    "end": "291440"
  },
  {
    "text": "and this is a this is kind of like a response we often hear when we approach cncf projects especially cncf projects",
    "start": "291440",
    "end": "298160"
  },
  {
    "text": "that are not that are written in memory safe languages so in memory unsafe languages cnc plus plus fusing has been around for",
    "start": "298160",
    "end": "305759"
  },
  {
    "text": "for quite a number of years now years now i think fasting was first started around 30",
    "start": "305759",
    "end": "310880"
  },
  {
    "text": "years ago but it has really had this evolution or resurgence in a sense the last",
    "start": "310880",
    "end": "316400"
  },
  {
    "text": "15 years or so where this coverage guided fussing came to be",
    "start": "316400",
    "end": "321600"
  },
  {
    "text": "so we often get this response when we say we would like to foster a project we often get a very",
    "start": "321600",
    "end": "327600"
  },
  {
    "text": "sort of critical view from us it's not going to work because it's just random testing and it's just a false",
    "start": "327600",
    "end": "333600"
  },
  {
    "text": "notion in a sense there are hundreds of academic papers in the last decade exploring how to improve",
    "start": "333600",
    "end": "339919"
  },
  {
    "text": "fussing and it did start 30 years ago with basically just cutting from random",
    "start": "339919",
    "end": "346000"
  },
  {
    "text": "and using that as input to your program but that's not how it is anymore it's a highly structured tools that try to",
    "start": "346000",
    "end": "354639"
  },
  {
    "text": "pick the right inputs to your code such that you will execute essentially as much of the underlying code as",
    "start": "354639",
    "end": "361280"
  },
  {
    "text": "possible and when i say modern day fosters here i really refer to coverage-guided fossus",
    "start": "361280",
    "end": "369120"
  },
  {
    "text": "so like underlying principles in coverage guided fasting is that you have a given",
    "start": "369120",
    "end": "374479"
  },
  {
    "text": "corpus which is just a set of test cases and these are the test cases that you",
    "start": "374479",
    "end": "380080"
  },
  {
    "text": "work from when you want to generate new input to a a an api",
    "start": "380080",
    "end": "386080"
  },
  {
    "text": "and the fuzzer will start with a given corpus it could be just a random element",
    "start": "386080",
    "end": "392160"
  },
  {
    "text": "and then it will start to exec and then you will have to compile your code so your target project that you",
    "start": "392160",
    "end": "398240"
  },
  {
    "text": "want to analyze you have to compile that in a certain way such that essentially the compiler can",
    "start": "398240",
    "end": "403759"
  },
  {
    "text": "insert extra code into your program that the foster will use to essentially trace execution",
    "start": "403759",
    "end": "411120"
  },
  {
    "text": "in the target and it's then going to use this i i ability to",
    "start": "411120",
    "end": "416240"
  },
  {
    "text": "track execution in the program to identify whether a given test case is good or bad and the way he's going to do",
    "start": "416240",
    "end": "423120"
  },
  {
    "text": "this is it's going to uh pick c's from the from the corpus",
    "start": "423120",
    "end": "428960"
  },
  {
    "text": "it will execute the program with that seed and then it will track what was the kind like let's say let's just call it",
    "start": "428960",
    "end": "435280"
  },
  {
    "text": "execution path of that program okay then it will save the execution path into kind of like a set of we have",
    "start": "435280",
    "end": "442240"
  },
  {
    "text": "explored this already then the next time it will so like just run again pick a new seed from the corbus mutate",
    "start": "442240",
    "end": "450000"
  },
  {
    "text": "that seed so that means just modified randomly in a sense and then it will execute the program again and again",
    "start": "450000",
    "end": "456639"
  },
  {
    "text": "trace did did we see a new trace in the program it's not really traces but",
    "start": "456639",
    "end": "462319"
  },
  {
    "text": "i think it's more intuitive to think of it that way and if there is a new coverage say a new",
    "start": "462319",
    "end": "467520"
  },
  {
    "text": "trace with this new input then it will save that seed into the core bus",
    "start": "467520",
    "end": "472879"
  },
  {
    "text": "but if if there isn't new coverage they will just kind of like forget about that seed and the main",
    "start": "472879",
    "end": "478800"
  },
  {
    "text": "point is that you build up this corpus iteratively",
    "start": "478800",
    "end": "483840"
  },
  {
    "text": "where each seed in the corpus essentially executes the target program in a unique way",
    "start": "483840",
    "end": "490479"
  },
  {
    "text": "and the benefit of this is that you will reduce the complexity for",
    "start": "490479",
    "end": "496639"
  },
  {
    "text": "uh like exploring the code i'm going to try to argue that through a small example here",
    "start": "496639",
    "end": "501680"
  },
  {
    "text": "so say for example you have a program that checks that has four conditions that checks a",
    "start": "501680",
    "end": "506800"
  },
  {
    "text": "byte in each like in a given uh data buffer and if you were to guess",
    "start": "506800",
    "end": "513440"
  },
  {
    "text": "for uh four bytes correctly say uh a b c d just four characters you would have a a a an",
    "start": "513440",
    "end": "521039"
  },
  {
    "text": "input space of 2 to 32 because a byte is 8 bits and 4 bytes is plus 32 bits which is 2",
    "start": "521039",
    "end": "527519"
  },
  {
    "text": "to 32 but because we have this notion of core bus and coverage guided we have to guess",
    "start": "527519",
    "end": "532880"
  },
  {
    "text": "each byte essentially one at the time and when we are to guess one byte there's",
    "start": "532880",
    "end": "539120"
  },
  {
    "text": "two to the eighth chances of getting it correctly okay so that's",
    "start": "539120",
    "end": "544160"
  },
  {
    "text": "one uh that's you have a chance of one out of 256 to guess the first bite correctly",
    "start": "544160",
    "end": "550000"
  },
  {
    "text": "so let's say we get the first bite correctly then we save that seed in our corbus and we just call our current seed",
    "start": "550000",
    "end": "555600"
  },
  {
    "text": "so like at data buffer with a and then we have to guess the next one and that's again to guess the next byte we again have a",
    "start": "555600",
    "end": "562160"
  },
  {
    "text": "chance of one of 256 of guessing it correctly and that kind of keeps going",
    "start": "562160",
    "end": "568320"
  },
  {
    "text": "until we have guest abcd correctly and again the reason we do that is",
    "start": "568320",
    "end": "574000"
  },
  {
    "text": "because we save whenever we see that we guessed it correctly we save that and we move on to guess the next byte",
    "start": "574000",
    "end": "581279"
  },
  {
    "text": "so the point is that we have we have to guess a maximum 256 times four times",
    "start": "581279",
    "end": "587360"
  },
  {
    "text": "which is 1024 which is much less than 2 to 32. and that's kind of the ideas behind",
    "start": "587360",
    "end": "593600"
  },
  {
    "text": "coverage guided fusing and why it reduces the complexity of exploring a program from just random guessing",
    "start": "593600",
    "end": "600720"
  },
  {
    "text": "and this is this this thing is called coverage guided fusing and that's kind of like one of the breakthroughs and fussing",
    "start": "600720",
    "end": "607120"
  },
  {
    "text": "that essentially made it much more applicable and what almost everybody uses today",
    "start": "607120",
    "end": "614240"
  },
  {
    "text": "okay so which box can you uncover with fussing",
    "start": "614240",
    "end": "619279"
  },
  {
    "text": "fundamentally faucets are just test case generators they explore the code they don't actually detect the box",
    "start": "619279",
    "end": "626160"
  },
  {
    "text": "the thing that detects the box is just what how the program executes and we then have this concept of",
    "start": "626160",
    "end": "632320"
  },
  {
    "text": "sanitizers in memory safe languages and these sanitizers are essentially kind of like block oracles that you compile into",
    "start": "632320",
    "end": "638800"
  },
  {
    "text": "your code which can check for things such as buffer overflows",
    "start": "638800",
    "end": "644240"
  },
  {
    "text": "valid invalid dereferences and use after freeze and all these kind of things which are common things in in",
    "start": "644240",
    "end": "650240"
  },
  {
    "text": "memory safe memory unsafe languages in memory safe languages which is what most of the cncf projects have written",
    "start": "650240",
    "end": "656399"
  },
  {
    "text": "in in particular go you will you will be finding you you essentially don't have sanitizers so the things that you find",
    "start": "656399",
    "end": "662480"
  },
  {
    "text": "at the moment are stuff such as encore encode exceptions out of bounds nail pointed references timeouts",
    "start": "662480",
    "end": "669120"
  },
  {
    "text": "in some sense deadlocks and other memory issues and these are kind of the things you can expect when you fast when you",
    "start": "669120",
    "end": "674800"
  },
  {
    "text": "fuss a a a golang project you can also do various things such as behavioral testing but i don't think i will go into",
    "start": "674800",
    "end": "681200"
  },
  {
    "text": "that now um but point being uh you can expect you the fastest will not",
    "start": "681200",
    "end": "687760"
  },
  {
    "text": "detect an issue in itself it's actually when the pro you will just explore the program the various ways that it",
    "start": "687760",
    "end": "692959"
  },
  {
    "text": "executes and then potentially you will find that if you execute it this way it will throw and they'll point at their",
    "start": "692959",
    "end": "698079"
  },
  {
    "text": "reference okay so fusses are pretty complex to to to",
    "start": "698079",
    "end": "703760"
  },
  {
    "text": "manage uh as i said we need to have this core bus and we the faster will build up the corpus",
    "start": "703760",
    "end": "710639"
  },
  {
    "text": "over time as it explores the code and that also means you shouldn't run the fuzzer from an",
    "start": "710639",
    "end": "717440"
  },
  {
    "text": "empty corbus whenever you run it you kind of have to incrementally build it up over like each day over the years and",
    "start": "717440",
    "end": "723519"
  },
  {
    "text": "so on and there's also a lot of other issues that comes with managing fuses such as",
    "start": "723519",
    "end": "729279"
  },
  {
    "text": "you know how do you keep track of all the bugs how do you report things and how do you share results between",
    "start": "729279",
    "end": "734639"
  },
  {
    "text": "everybody and this is what we have oss was for so oss first is a",
    "start": "734639",
    "end": "740880"
  },
  {
    "text": "service run by google which is oss i think it's open source",
    "start": "740880",
    "end": "746399"
  },
  {
    "text": "software first thing thank you and it's essentially a git repository where you upload",
    "start": "746399",
    "end": "752399"
  },
  {
    "text": "a docker file you upload a build script and then you to a given folder in this",
    "start": "752399",
    "end": "757440"
  },
  {
    "text": "github repository and then google will just start running all the files that the given build script will build",
    "start": "757440",
    "end": "764000"
  },
  {
    "text": "so this is where the vast majority of open source projects are being fussed by way off now and i think that ocs first",
    "start": "764000",
    "end": "770720"
  },
  {
    "text": "has around 600 open source projects so essentially all the the very security critical ones and all the ones that we",
    "start": "770720",
    "end": "776720"
  },
  {
    "text": "will be talking about this case in in this talk is also on those sensors and yeah we have a link here to how to",
    "start": "776720",
    "end": "782160"
  },
  {
    "text": "integrate into ocs first please check it out oss first might be a little bit large",
    "start": "782160",
    "end": "788000"
  },
  {
    "text": "because there's a it's just it's just in a sense a big big framework that that lies on the",
    "start": "788000",
    "end": "793120"
  },
  {
    "text": "underneath it and some maintainers are actually not that interested in getting into us oss first because they feel it's",
    "start": "793120",
    "end": "798639"
  },
  {
    "text": "a little bit too heavy the same developers of oss first has developed this concept called clusterful",
    "start": "798639",
    "end": "804160"
  },
  {
    "text": "slide which essentially runs and manages all of your fusses in your ci and you don't have to uh",
    "start": "804160",
    "end": "810800"
  },
  {
    "text": "to like do the whole integration into ourselves first and clusterful slide is also straightforward to integrate into",
    "start": "810800",
    "end": "816160"
  },
  {
    "text": "your project so if you're an open source maintainer or similar check it out",
    "start": "816160",
    "end": "822000"
  },
  {
    "text": "okay so uh i think i've already talked about this let's now talk about the cncf landscape",
    "start": "822000",
    "end": "828800"
  },
  {
    "text": "being fast",
    "start": "828800",
    "end": "831440"
  },
  {
    "text": "so yeah so here we see an overview of the cncf projects that are currently integrated in towards espos",
    "start": "834079",
    "end": "840839"
  },
  {
    "text": "and a quick note istio will also fall on this list once it joins",
    "start": "840839",
    "end": "848399"
  },
  {
    "text": "ideologics we have written a lot of fossils for istio which also has resulted in a high severity finding",
    "start": "848399",
    "end": "855120"
  },
  {
    "text": "we have a blog post about that on our blog it's a pretty interesting case if you are a go developer",
    "start": "855120",
    "end": "860800"
  },
  {
    "text": "so i encourage you to check that out there might be a cncf",
    "start": "860800",
    "end": "865920"
  },
  {
    "text": "project at least i can think of at least one that do have fosters and do a pretty good job",
    "start": "865920",
    "end": "871600"
  },
  {
    "text": "at writing forces and maintaining them and making sure that they are not broken",
    "start": "871600",
    "end": "878480"
  },
  {
    "text": "but not all cncf projects that do uh",
    "start": "878480",
    "end": "884240"
  },
  {
    "text": "maintain a fussing suite integrated into a ss first and because of that it's it's",
    "start": "884240",
    "end": "889440"
  },
  {
    "text": "uh it's a little um difficult to say that",
    "start": "889440",
    "end": "895760"
  },
  {
    "text": "that they that these projects are running their fossils correctly for the reasons that david",
    "start": "895760",
    "end": "901680"
  },
  {
    "text": "mentioned because running the phosphorous especially once you get start having 10 20 30 fossa's in your",
    "start": "901680",
    "end": "907199"
  },
  {
    "text": "system in your project it becomes a very complex task to run these fossils so",
    "start": "907199",
    "end": "913199"
  },
  {
    "text": "if you can think of a project here that do a good job at [Music]",
    "start": "913199",
    "end": "918320"
  },
  {
    "text": "maintaining a fusing suite but it's not on this list that is the reason and if you are such a project please",
    "start": "918320",
    "end": "925120"
  },
  {
    "text": "reach out to us and we'll be happy to integrate your project into assess first for you",
    "start": "925120",
    "end": "930480"
  },
  {
    "text": "so let's talk about how to foster a cncf project and this is the approach that we take",
    "start": "930480",
    "end": "936230"
  },
  {
    "text": "[Music] yeah that is our practical uh approach uh to",
    "start": "936230",
    "end": "942320"
  },
  {
    "text": "pretty much all cncf projects that we approach that uh have done no prior work uh with",
    "start": "942320",
    "end": "949120"
  },
  {
    "text": "forcing uh david mentioned we have worked on some projects that have worked on forcing for years",
    "start": "949120",
    "end": "955120"
  },
  {
    "text": "um and [Music] that [Music] that is another story so so this is more",
    "start": "955120",
    "end": "962160"
  },
  {
    "text": "in terms of taking a project from zero to having a pretty solid fussing setup",
    "start": "962160",
    "end": "967600"
  },
  {
    "text": "so we start with an initial integration and to us that means um we start by writing",
    "start": "967600",
    "end": "973920"
  },
  {
    "text": "a few initial forces and merge them into the cncf fussing repository where we maintain all fossa's",
    "start": "973920",
    "end": "981839"
  },
  {
    "text": "that we write for for the cncf projects",
    "start": "981839",
    "end": "987440"
  },
  {
    "text": "we are we open for contributions there and please check it out if you if you if you",
    "start": "987440",
    "end": "993040"
  },
  {
    "text": "wish to next we integrate the project into oss first so the fossils run continuously",
    "start": "993040",
    "end": "999440"
  },
  {
    "text": "and on in the oces force integration we instruct um voices first to",
    "start": "999440",
    "end": "1005199"
  },
  {
    "text": "put the latest master branch or release branch and pull the faucets from the cncf fusion",
    "start": "1005199",
    "end": "1010800"
  },
  {
    "text": "repository so that so that we can work uh on",
    "start": "1010800",
    "end": "1016160"
  },
  {
    "text": "the forces through the cncf fusing repository and oss first will catch those updates",
    "start": "1016160",
    "end": "1022839"
  },
  {
    "text": "continuously uh the next step is we write a lot of us to to get coverage up and uh",
    "start": "1022839",
    "end": "1028959"
  },
  {
    "text": "um yeah i mean at this point we we we have made the initial integration and",
    "start": "1028959",
    "end": "1035360"
  },
  {
    "text": "uh we the next step is really to increase coverage of the whole project starting with complex",
    "start": "1035360",
    "end": "1043360"
  },
  {
    "text": "parts of the code base finally we we work on delivering this over to the",
    "start": "1043360",
    "end": "1050960"
  },
  {
    "text": "project maintainers and owners and if we the goal on this final step is to",
    "start": "1050960",
    "end": "1057280"
  },
  {
    "text": "make the owners take charge of the the process the project owners take charge of the fusing from here we want it is",
    "start": "1057280",
    "end": "1065200"
  },
  {
    "text": "our goal that it is the project's uh [Music] it is the projects uh",
    "start": "1065200",
    "end": "1071600"
  },
  {
    "text": "that that they take complete ownership and they can do whatever they want the lead fosters modify fosters if they if",
    "start": "1071600",
    "end": "1077760"
  },
  {
    "text": "they see it fit um and and in this step here step three we work with the",
    "start": "1077760",
    "end": "1083919"
  },
  {
    "text": "projects on doing that so there are some pros and cons of having someone like ossa data logics",
    "start": "1083919",
    "end": "1089760"
  },
  {
    "text": "integrate a cncf project uh integrate fusing into our cncf project and one of one of the pros is that we",
    "start": "1089760",
    "end": "1096960"
  },
  {
    "text": "have a lot of experience with fussing uh i think a datalogics we have contributed fosus to more than 200 open",
    "start": "1096960",
    "end": "1104160"
  },
  {
    "text": "source security projects sorry open source projects um so and we have you know gone",
    "start": "1104160",
    "end": "1110799"
  },
  {
    "text": "down rabbit holes we have seen what uh you know what how how to quickly get from zero to one um and effectively",
    "start": "1110799",
    "end": "1118720"
  },
  {
    "text": "but of course we don't have the year months and years of experience that the project maintainers do",
    "start": "1118720",
    "end": "1125679"
  },
  {
    "text": "and yeah naturally on the third one as well",
    "start": "1125679",
    "end": "1131760"
  },
  {
    "text": "maintainers don't have that much time to first [Music]",
    "start": "1131760",
    "end": "1137520"
  },
  {
    "text": "you know learn about fossiling and how to uh best integrate it into that project um",
    "start": "1137520",
    "end": "1144160"
  },
  {
    "text": "they have plenty to do already um i believe we had a project where they",
    "start": "1144160",
    "end": "1149200"
  },
  {
    "text": "had had had a github issue uh on um the fact that they should integrate fussing into that project for",
    "start": "1149200",
    "end": "1155679"
  },
  {
    "text": "two years this this issue had been open and um at data logic we were able to pretty",
    "start": "1155679",
    "end": "1161760"
  },
  {
    "text": "quickly get fusing started and the the engagement resulted in a high",
    "start": "1161760",
    "end": "1167200"
  },
  {
    "text": "severity cv so yeah um [Music]",
    "start": "1167200",
    "end": "1174829"
  },
  {
    "text": "yeah i think that's it for this one uh yeah so so in in terms of uh the last",
    "start": "1175919",
    "end": "1181200"
  },
  {
    "text": "step in the process of integrating of uh working with the cncf projects uh a few things that we do uh when we",
    "start": "1181200",
    "end": "1188080"
  },
  {
    "text": "when we wish to hand over the fusing suites to the projects themselves is that we encourage so uh we work from",
    "start": "1188080",
    "end": "1195280"
  },
  {
    "text": "the cnc cncf fusion repo initially and we encourage the maintainers to move the",
    "start": "1195280",
    "end": "1200480"
  },
  {
    "text": "forces upstream to integrate into the test suite ci",
    "start": "1200480",
    "end": "1207200"
  },
  {
    "text": "nightly builds etc and which will make maintenance",
    "start": "1207200",
    "end": "1214559"
  },
  {
    "text": "easier and should help the projects avoid downtime in",
    "start": "1214559",
    "end": "1219760"
  },
  {
    "text": "their in their forces there will often be a a list of bugs",
    "start": "1219760",
    "end": "1225840"
  },
  {
    "text": "found in in this engagement and osspos has capabilities to reproduce",
    "start": "1225840",
    "end": "1231679"
  },
  {
    "text": "these very easily and this this this will be something that will help projects",
    "start": "1231679",
    "end": "1238080"
  },
  {
    "text": "with we encourage uh projects to write fosus specific for that",
    "start": "1238080",
    "end": "1244080"
  },
  {
    "text": "project and simply simply further develop the whole uh forcing setup",
    "start": "1244080",
    "end": "1250559"
  },
  {
    "text": "how how the project see fit a quick note on if on our gopher's",
    "start": "1250559",
    "end": "1255760"
  },
  {
    "text": "header project if you are a project that",
    "start": "1255760",
    "end": "1261360"
  },
  {
    "text": "is that is implemented in go we have a very neat little",
    "start": "1261360",
    "end": "1266799"
  },
  {
    "text": "library here that makes it quite easy to for structured data types you simply",
    "start": "1266799",
    "end": "1273360"
  },
  {
    "text": "initiate a consumer where you after which you can quickly create random",
    "start": "1273360",
    "end": "1280480"
  },
  {
    "text": "or pseudo-random versions of structs maps slices and much",
    "start": "1280480",
    "end": "1286480"
  },
  {
    "text": "more so a quick note on that if you wish to use that",
    "start": "1286480",
    "end": "1291760"
  },
  {
    "text": "okay so hello hello all right so um you can fast a lot of different projects written in a lot of",
    "start": "1291760",
    "end": "1298559"
  },
  {
    "text": "different languages and essentially oss first supports all supports projects within golang cnc plus",
    "start": "1298559",
    "end": "1304400"
  },
  {
    "text": "rust python and java java and the bugs you look for in various",
    "start": "1304400",
    "end": "1310880"
  },
  {
    "text": "the box you look for in a project kind of depends on the language that you are fussing and",
    "start": "1310880",
    "end": "1316159"
  },
  {
    "text": "threat models of the projects that you are fussing may not always be present so you can go multiple ways when you are to",
    "start": "1316159",
    "end": "1321679"
  },
  {
    "text": "say foster project you can either kind of like extrapolate from the testing suite that they have you can you can try to",
    "start": "1321679",
    "end": "1327919"
  },
  {
    "text": "identify the whole and the result of that is that you will find most likely a lot of bugs but may not be securely",
    "start": "1327919",
    "end": "1333360"
  },
  {
    "text": "relevant bucks because you might not so like attack the threat model in a sense um and",
    "start": "1333360",
    "end": "1339520"
  },
  {
    "text": "ccf projects are often written in memory saved languages which means that if you are looking to fast cncf projects most",
    "start": "1339520",
    "end": "1346400"
  },
  {
    "text": "likely you will turn into go or say mainly go to be honest",
    "start": "1346400",
    "end": "1351760"
  },
  {
    "text": "but at the same time even if you are fussing a project written in goal line you can always look for the dependencies",
    "start": "1351760",
    "end": "1357200"
  },
  {
    "text": "of a given project so for example flux it's a git ups tool that is based on that it's",
    "start": "1357200",
    "end": "1363679"
  },
  {
    "text": "written in go and it's a so like a bunch of custom kubernetes operators controllers sorry",
    "start": "1363679",
    "end": "1369520"
  },
  {
    "text": "and that depends flux depends on the other go project called get to go and get to go itself",
    "start": "1369520",
    "end": "1377120"
  },
  {
    "text": "depends on the library called libgit which has sixty thousand lines of c of c",
    "start": "1377120",
    "end": "1382320"
  },
  {
    "text": "or super splash code i can't remember which essentially means even if you are just interested in fussing memory unsafe",
    "start": "1382320",
    "end": "1389360"
  },
  {
    "text": "projects you can still go for a lot of um say cncf projects that may not be",
    "start": "1389360",
    "end": "1395360"
  },
  {
    "text": "written in memory unsafe languages because they will have dependencies to memory unsafe",
    "start": "1395360",
    "end": "1400880"
  },
  {
    "text": "languages okay so what are the results here and the results we are going to present in",
    "start": "1400880",
    "end": "1406080"
  },
  {
    "text": "this section is essentially the data given to us by oss first on",
    "start": "1406080",
    "end": "1412159"
  },
  {
    "text": "this url so they make all of the results publicly available by on",
    "start": "1412159",
    "end": "1417720"
  },
  {
    "text": "box.chromium.org and you can use the following query to uh essentially get the results that that",
    "start": "1417720",
    "end": "1424080"
  },
  {
    "text": "we're going to show and i want to just give a note here that this is an overapproximation from the perspective",
    "start": "1424080",
    "end": "1430159"
  },
  {
    "text": "of the results are the results but it will be the fusses will like",
    "start": "1430159",
    "end": "1436159"
  },
  {
    "text": "not necessarily only find legit bugs the forces themselves can have issues which will be reported as a bug in this manner",
    "start": "1436159",
    "end": "1443039"
  },
  {
    "text": "the engines can sometimes have an issue which will also report a bug so take it with a little bit of grain of salt and",
    "start": "1443039",
    "end": "1449440"
  },
  {
    "text": "don't expect that all these numbers constitute exploitable bucks",
    "start": "1449440",
    "end": "1454559"
  },
  {
    "text": "so these are the results on uh from from oss first reported",
    "start": "1454559",
    "end": "1459919"
  },
  {
    "text": "and potentially what we can see here is that there are two projects envoy and phonebit written in c plus and c and",
    "start": "1459919",
    "end": "1466159"
  },
  {
    "text": "they have approximately well above 200 bucks each reported",
    "start": "1466159",
    "end": "1471200"
  },
  {
    "text": "and notice again that this is this does include security box and also non-security box",
    "start": "1471200",
    "end": "1477840"
  },
  {
    "text": "as set by oss first so if you look at the query you can see i have this it's like type here",
    "start": "1477840",
    "end": "1484320"
  },
  {
    "text": "where we both include security and box security types so it's not just security",
    "start": "1484320",
    "end": "1489760"
  },
  {
    "text": "types and this includes all forms of well all forms of memory corruption issues that you can imagine",
    "start": "1489760",
    "end": "1497360"
  },
  {
    "text": "and notice here that envoy has been fussing for i think they first integrated into ss first since",
    "start": "1497360",
    "end": "1503120"
  },
  {
    "text": "2016 and i believe that the team has done like a tremendous job in in getting fussing all over their project so in the",
    "start": "1503120",
    "end": "1510000"
  },
  {
    "text": "sense that there's a lot of box it's a good sign from the perspective of they have analyzed a lot of their code base",
    "start": "1510000",
    "end": "1516960"
  },
  {
    "text": "we didn't have all of the the golang projects here and you can see that the numbers are uh quite a bit lower but",
    "start": "1516960",
    "end": "1522799"
  },
  {
    "text": "this is also a reference to they are not as like mature in their fussing approach as the two other projects that i mentioned",
    "start": "1522799",
    "end": "1529200"
  },
  {
    "text": "here but these are the numbers that you can expect and in a sense it also goes to show",
    "start": "1529200",
    "end": "1535600"
  },
  {
    "text": "there is some there will be work involved here because imagine sitting at the receiving end of",
    "start": "1535600",
    "end": "1540720"
  },
  {
    "text": "envoy and you have to analyze 860 bucks to verify how to fix them or et cetera et cetera a lot of them will also be",
    "start": "1540720",
    "end": "1547440"
  },
  {
    "text": "like issues from the oss site that will be fixed by itself in a sense um but there",
    "start": "1547440",
    "end": "1553120"
  },
  {
    "text": "will be a lot of work for for for the developers to to deal with this stuff so if we are to plot the issues that are",
    "start": "1553120",
    "end": "1560240"
  },
  {
    "text": "reported here we can plug them based on how many issues are closed on this monorail so the database that i've just",
    "start": "1560240",
    "end": "1566400"
  },
  {
    "text": "shown or and also how many are open and in that sense we can see how often",
    "start": "1566400",
    "end": "1572000"
  },
  {
    "text": "bugs so like get introduced or like get found by the fusses and how often they are so like fixed",
    "start": "1572000",
    "end": "1577679"
  },
  {
    "text": "so here we have a project called argo and the red graph that you see up here is the amount of box closed on the database",
    "start": "1577679",
    "end": "1585440"
  },
  {
    "text": "that means whenever a bug is fixed it will turn from open to closed so close is just going to go upwards",
    "start": "1585440",
    "end": "1591679"
  },
  {
    "text": "depending on how many bucks gets found and fixed whereas the blue one the blue is like",
    "start": "1591679",
    "end": "1597919"
  },
  {
    "text": "line shows how many issues are open so ideally it will go a little bit up and then it will hopefully go down depending",
    "start": "1597919",
    "end": "1603840"
  },
  {
    "text": "on how fast the bugs are fixed and here we have an example of say uh when fussing was introduced",
    "start": "1603840",
    "end": "1610720"
  },
  {
    "text": "quickly a lot of bucks was found but they were also very very fast to fix it and we can also see that it's kind of a",
    "start": "1610720",
    "end": "1616400"
  },
  {
    "text": "like a rhythmic curve the red one which means that the fossils will find a lot of bugs in the beginning and then it will start to fade",
    "start": "1616400",
    "end": "1623200"
  },
  {
    "text": "out as they kind of have explored all of their potential or get to explore all of their potential",
    "start": "1623200",
    "end": "1629120"
  },
  {
    "text": "we have another project here kubernetes and notice that the the so the x-axis",
    "start": "1629120",
    "end": "1634240"
  },
  {
    "text": "shows the date and the y-axis shows the uh the amount of issues closed or opened",
    "start": "1634240",
    "end": "1639840"
  },
  {
    "text": "and here you can see so like a similar graph it looked rhythmic in a sense and there are",
    "start": "1639840",
    "end": "1645520"
  },
  {
    "text": "a few bugs still open in the kubernetes bug tracker we then have an example of link d2 proxy",
    "start": "1645520",
    "end": "1651919"
  },
  {
    "text": "where you can see that again the red graph will have a logarithmic sign but also a logarithmic curve",
    "start": "1651919",
    "end": "1658159"
  },
  {
    "text": "but you can also see that they are very fast at fixing the box whenever bugs occur the next day is fixed so it's kind",
    "start": "1658159",
    "end": "1664399"
  },
  {
    "text": "of like a great they they do it really well the legacy team but at the same time you can also",
    "start": "1664399",
    "end": "1669679"
  },
  {
    "text": "see bugs kind of stopped being found let's say uh six months ago and you can",
    "start": "1669679",
    "end": "1676559"
  },
  {
    "text": "ask why most likely that's because they don't contribute new fusses to their code base which is also an interesting",
    "start": "1676559",
    "end": "1682240"
  },
  {
    "text": "uh a thought so if you were to for example if you knew how to fast rush projects most likely you could go and",
    "start": "1682240",
    "end": "1687760"
  },
  {
    "text": "and and help them out fluent bit another example and again we",
    "start": "1687760",
    "end": "1693120"
  },
  {
    "text": "see it it's like they the blue bar keeps being low whereas the",
    "start": "1693120",
    "end": "1699520"
  },
  {
    "text": "box keep increasing and that's also a sign of whenever uh so like whenever a bug is found and fixed",
    "start": "1699520",
    "end": "1706880"
  },
  {
    "text": "that one gets put you know put on the ripper but the blue one kind of stays constant and that means every time a bug",
    "start": "1706880",
    "end": "1712399"
  },
  {
    "text": "is fixed a new one is found so when when your first find finds a bug it will kind of like run into that bug all the time",
    "start": "1712399",
    "end": "1719279"
  },
  {
    "text": "so it will kind of redetect it all the time when you then fix it it can finally progress further into coverage and",
    "start": "1719279",
    "end": "1724640"
  },
  {
    "text": "that's why like the red will continue to grow whereas the blue line stays stable",
    "start": "1724640",
    "end": "1729840"
  },
  {
    "text": "um [Music] and here is the envoy project uh yeah fusion rack give that",
    "start": "1729840",
    "end": "1738679"
  },
  {
    "text": "yeah yeah so let's talk about where we'll go from here",
    "start": "1740000",
    "end": "1746240"
  },
  {
    "text": "let's zoom out a little bit in terms of where we are in the greater scheme of things here as david",
    "start": "1746240",
    "end": "1751840"
  },
  {
    "text": "mentioned over the last 10 15 years a lot of work has been done in",
    "start": "1751840",
    "end": "1757039"
  },
  {
    "text": "making fussing generally available for for open source projects for the open",
    "start": "1757039",
    "end": "1763039"
  },
  {
    "text": "source community that that has included writing really really great fussing engines sanitizers",
    "start": "1763039",
    "end": "1770720"
  },
  {
    "text": "and bringing these um this technology to other languages to all sorts of languages as david already",
    "start": "1770720",
    "end": "1777360"
  },
  {
    "text": "mentioned so we have quite a mature fussing engines now",
    "start": "1777360",
    "end": "1782480"
  },
  {
    "text": "but of course we are seeing changes in this as well for example with go18118 where the fusing engine is",
    "start": "1782480",
    "end": "1789360"
  },
  {
    "text": "getting integrated into the language itself so next over over the",
    "start": "1789360",
    "end": "1795200"
  },
  {
    "text": "last few years we have worked on bringing these forcing capabilities to the cncf projects",
    "start": "1795200",
    "end": "1800480"
  },
  {
    "text": "um and and in in and like you see that that is like more or",
    "start": "1800480",
    "end": "1806799"
  },
  {
    "text": "less where we are in in that in that story uh so let's talk about the next steps what what will happen over the",
    "start": "1806799",
    "end": "1812720"
  },
  {
    "text": "next couple of years uh like we mentioned we want to see main maintainers involved it will make a huge",
    "start": "1812720",
    "end": "1818640"
  },
  {
    "text": "difference for difference for in terms of taking forcing from the initial step to",
    "start": "1818640",
    "end": "1825679"
  },
  {
    "text": "to to really approaching it from a domain specific",
    "start": "1825679",
    "end": "1830799"
  },
  {
    "text": "knowledge kind of approach next we will see more box bug oracles",
    "start": "1830799",
    "end": "1837360"
  },
  {
    "text": "and sanitizers for memory save languages um there are",
    "start": "1837360",
    "end": "1842559"
  },
  {
    "text": "a bunch of of vulnerabilities that fosters don't detect they do they check some but there are a lot they don't",
    "start": "1842559",
    "end": "1848399"
  },
  {
    "text": "detect and we want to find those automatically [Music] next",
    "start": "1848399",
    "end": "1854480"
  },
  {
    "text": "yeah again mature forcing even more based on what has been done now",
    "start": "1854480",
    "end": "1861200"
  },
  {
    "text": "and that involves involving involving the community and the maintainers could i just could i just interrupt here so",
    "start": "1861200",
    "end": "1866720"
  },
  {
    "text": "with regards to this uh could you go one back with regards to this bug oracle's uh standard sizes one important point to",
    "start": "1866720",
    "end": "1873440"
  },
  {
    "text": "highlight here is that we have java fussing available but it didn't detect the lock for j issue",
    "start": "1873440",
    "end": "1878960"
  },
  {
    "text": "then they the developers of this uh java fussing engine came up with a bug oracle to detect command injections and they",
    "start": "1878960",
    "end": "1885279"
  },
  {
    "text": "found uh lock4j in a matter of minutes with that it's like the new bug oracle and you'll",
    "start": "1885279",
    "end": "1890399"
  },
  {
    "text": "see a lot more of that where people will try to identify those type of like high level issues that may not be",
    "start": "1890399",
    "end": "1896480"
  },
  {
    "text": "just detectable by the program crashing for example",
    "start": "1896480",
    "end": "1900799"
  },
  {
    "text": "yeah so i i i guess we have already gone through the maintainer involvement um",
    "start": "1905440",
    "end": "1910480"
  },
  {
    "text": "that is one of the steps that we will uh cons that we want to see over the next couple of years",
    "start": "1910480",
    "end": "1915679"
  },
  {
    "text": "um but yeah so david had an example of a real world scenario",
    "start": "1915679",
    "end": "1920720"
  },
  {
    "text": "where a bug detector was improved to to detect new vulnerabilities",
    "start": "1920720",
    "end": "1926000"
  },
  {
    "text": "and let's talk about like some possible scenarios where that will",
    "start": "1926000",
    "end": "1931600"
  },
  {
    "text": "occur in the in the cloud native space that that the cnc projects can benefit from so when we",
    "start": "1931600",
    "end": "1938559"
  },
  {
    "text": "talk about uh bug oracles or sensors we consider it from an from a perspective of uh it being integrated like into",
    "start": "1938559",
    "end": "1946159"
  },
  {
    "text": "fusing where the the developers of foss harnesses and the",
    "start": "1946159",
    "end": "1951600"
  },
  {
    "text": "tests itself don't have to tweak or uh change settings of the photos but",
    "start": "1951600",
    "end": "1957279"
  },
  {
    "text": "the same frost test can be used to detect all these different uh box and vulnerabilities",
    "start": "1957279",
    "end": "1964720"
  },
  {
    "text": "so for example now and go as david mentioned we detect the we have a list a series of box that can detect",
    "start": "1964720",
    "end": "1971840"
  },
  {
    "text": "automatically like out of ranges out of memories timeout nailed the references etc",
    "start": "1971840",
    "end": "1977440"
  },
  {
    "text": "but let's let's it's very likely that we'll see a race condition sanitizer for example that",
    "start": "1977440",
    "end": "1984240"
  },
  {
    "text": "will not only detect possible race conditions but might also try to slow",
    "start": "1984240",
    "end": "1989360"
  },
  {
    "text": "down a program in order to win a race and produce a",
    "start": "1989360",
    "end": "1995679"
  },
  {
    "text": "complete reproducible test case next logging we have a series of vulnerabilities",
    "start": "1995840",
    "end": "2001679"
  },
  {
    "text": "associated with logging for example can can users input",
    "start": "2001679",
    "end": "2007039"
  },
  {
    "text": "arbitrary data into the logs and thus create fake log entries",
    "start": "2007039",
    "end": "2013519"
  },
  {
    "text": "to to prevent an audit trail file handling",
    "start": "2013519",
    "end": "2019679"
  },
  {
    "text": "that seems that is a big issue also in the cncf landscape",
    "start": "2019679",
    "end": "2025200"
  },
  {
    "text": "i believe that the talk after hours is about a vulnerability associated uh to",
    "start": "2025200",
    "end": "2032640"
  },
  {
    "text": "to file handling so i encourage you to check that out but basically can we read arbitrary files can we write uh",
    "start": "2032640",
    "end": "2038880"
  },
  {
    "text": "arbitrary files on the system uh that we're not supposed to command injections we added the logics we found a",
    "start": "2038880",
    "end": "2045440"
  },
  {
    "text": "suv in a high severe severe city i believe in flocks last winter",
    "start": "2045440",
    "end": "2051599"
  },
  {
    "text": "and that that could i think believe they found another one just last week um and",
    "start": "2051599",
    "end": "2058079"
  },
  {
    "text": "yeah it continues to be an issue in in the uh in the memory saved languages and uh we",
    "start": "2058079",
    "end": "2064480"
  },
  {
    "text": "it would be it is we might see a bug oracle sanitizer that will find these",
    "start": "2064480",
    "end": "2069839"
  },
  {
    "text": "these bugs so the main point here is that when we get these sanitizers into the",
    "start": "2069839",
    "end": "2076320"
  },
  {
    "text": "the fusing itself into fuzzing itself where developers don't have to do anything extra to to",
    "start": "2076320",
    "end": "2083520"
  },
  {
    "text": "make use of these sanitizers because we have coverage of all these cncf projects",
    "start": "2083520",
    "end": "2090000"
  },
  {
    "text": "they they will benefit from from these new developments immediately and that will have a massive impact so a single",
    "start": "2090000",
    "end": "2096720"
  },
  {
    "text": "um a single sanitizer will be piped out to to all these uh cncf projects uh without",
    "start": "2096720",
    "end": "2104240"
  },
  {
    "text": "much or any uh further work so the point is so the point here is that we already have hundreds of fusses",
    "start": "2104240",
    "end": "2110960"
  },
  {
    "text": "now for cntf projects but there are a lot of attacks that are not necessarily caught which actually could get caught",
    "start": "2110960",
    "end": "2116400"
  },
  {
    "text": "even by the kobus that exists in the current versus and if you come up now the next step is if you come up with",
    "start": "2116400",
    "end": "2121760"
  },
  {
    "text": "these bug oracles all these fusses will be able to find say whatever bug your bug oracle may",
    "start": "2121760",
    "end": "2127359"
  },
  {
    "text": "find i think i think that's it we'll leave this uh",
    "start": "2127359",
    "end": "2134079"
  },
  {
    "text": "conclusion as such but in short we fussed a lot of projects found a lot of bugs it works really well",
    "start": "2134079",
    "end": "2141200"
  },
  {
    "text": "it's not fully automated as you can see that there's a lot of bugs to digest it takes time to write these verses so you",
    "start": "2141200",
    "end": "2146880"
  },
  {
    "text": "will often hear fuzzing as security automation but it automates a part you still have to do",
    "start": "2146880",
    "end": "2152560"
  },
  {
    "text": "a lot of work yourself um i think that's it thank you",
    "start": "2152560",
    "end": "2159838"
  }
]