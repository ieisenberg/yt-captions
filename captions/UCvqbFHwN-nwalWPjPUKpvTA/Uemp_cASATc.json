[
  {
    "text": "uh please join me in welcoming uh Ryan",
    "start": "240",
    "end": "2360"
  },
  {
    "text": "petrich to the stage uh he's going to be",
    "start": "2360",
    "end": "4240"
  },
  {
    "text": "talking about CIS call me by your name",
    "start": "4240",
    "end": "6359"
  },
  {
    "text": "sandboxing WM and programs uh Ryan is an",
    "start": "6359",
    "end": "9200"
  },
  {
    "text": "SVP at a hedge fund uh called uh two",
    "start": "9200",
    "end": "12240"
  },
  {
    "text": "Sigma Investments but previously he",
    "start": "12240",
    "end": "14280"
  },
  {
    "text": "probably he worked at capsule 8 which I",
    "start": "14280",
    "end": "15920"
  },
  {
    "text": "think many people in this room uh would",
    "start": "15920",
    "end": "17840"
  },
  {
    "text": "uh would know of uh please join me",
    "start": "17840",
    "end": "19240"
  },
  {
    "text": "welcoming",
    "start": "19240",
    "end": "21640"
  },
  {
    "text": "Ryan hi uh I'm Ryan um before we get",
    "start": "24800",
    "end": "28160"
  },
  {
    "text": "started um this is not Financial advice",
    "start": "28160",
    "end": "31320"
  },
  {
    "text": "uh nor the views of my employer to Sigma",
    "start": "31320",
    "end": "34040"
  },
  {
    "text": "um I just have to get that out of the",
    "start": "34040",
    "end": "35280"
  },
  {
    "text": "way um uh first so welcome to sis call",
    "start": "35280",
    "end": "39879"
  },
  {
    "text": "me by your name sandboxing web assembly",
    "start": "39879",
    "end": "43239"
  },
  {
    "text": "programs uh web assembly is a bold",
    "start": "43239",
    "end": "46079"
  },
  {
    "text": "vision for the future of computing it's",
    "start": "46079",
    "end": "48760"
  },
  {
    "text": "one where you can safely run code",
    "start": "48760",
    "end": "50199"
  },
  {
    "text": "anywhere this means in browsers in the",
    "start": "50199",
    "end": "52559"
  },
  {
    "text": "cloud on the edge in your pocket in",
    "start": "52559",
    "end": "55120"
  },
  {
    "text": "embedded devices uh somehow on the",
    "start": "55120",
    "end": "58359"
  },
  {
    "text": "blockchain um I'm I'm just going to",
    "start": "58359",
    "end": "60920"
  },
  {
    "text": "ignore that last one um but really you",
    "start": "60920",
    "end": "62879"
  },
  {
    "text": "can run code anywhere um and the promise",
    "start": "62879",
    "end": "66799"
  },
  {
    "text": "is that web assembly programs can be run",
    "start": "66799",
    "end": "68640"
  },
  {
    "text": "at near native performance and then you",
    "start": "68640",
    "end": "70600"
  },
  {
    "text": "can pack these web assembly sandboxes",
    "start": "70600",
    "end": "72880"
  },
  {
    "text": "together really densely even if they're",
    "start": "72880",
    "end": "75240"
  },
  {
    "text": "from adversarial parties um and still",
    "start": "75240",
    "end": "77880"
  },
  {
    "text": "preserve these safety properties so you",
    "start": "77880",
    "end": "79920"
  },
  {
    "text": "can run you know a bunch of different",
    "start": "79920",
    "end": "81560"
  },
  {
    "text": "web assembly all in the same program and",
    "start": "81560",
    "end": "84360"
  },
  {
    "text": "it works and and you know is safe um so",
    "start": "84360",
    "end": "88159"
  },
  {
    "text": "this vision is only possible uh if the",
    "start": "88159",
    "end": "90720"
  },
  {
    "text": "separation between the",
    "start": "90720",
    "end": "92439"
  },
  {
    "text": "sandboxes and the host is reliable and",
    "start": "92439",
    "end": "95320"
  },
  {
    "text": "trustworthy um so isolation is the key",
    "start": "95320",
    "end": "98240"
  },
  {
    "text": "to web assembly success and its future",
    "start": "98240",
    "end": "101000"
  },
  {
    "text": "um Engineers building on top of web",
    "start": "101000",
    "end": "102680"
  },
  {
    "text": "assembly need to be confident in its",
    "start": "102680",
    "end": "104719"
  },
  {
    "text": "safety um or otherwise they'll kind of",
    "start": "104719",
    "end": "107439"
  },
  {
    "text": "stick to more convenient and traditional",
    "start": "107439",
    "end": "109920"
  },
  {
    "text": "methods like",
    "start": "109920",
    "end": "111719"
  },
  {
    "text": "containers um and so this is what I'm",
    "start": "111719",
    "end": "113439"
  },
  {
    "text": "going to focus on today um the isolation",
    "start": "113439",
    "end": "115520"
  },
  {
    "text": "properties of web assembly runtimes and",
    "start": "115520",
    "end": "118560"
  },
  {
    "text": "how we can better trust in them so with",
    "start": "118560",
    "end": "120719"
  },
  {
    "text": "a understanding of how this works I",
    "start": "120719",
    "end": "122439"
  },
  {
    "text": "think Engineers will be better equipped",
    "start": "122439",
    "end": "124479"
  },
  {
    "text": "to to deal with web assembly systems um",
    "start": "124479",
    "end": "127600"
  },
  {
    "text": "and to operate them safely so we're",
    "start": "127600",
    "end": "130160"
  },
  {
    "text": "going to begin our journey by examining",
    "start": "130160",
    "end": "131720"
  },
  {
    "text": "the techniques runtimes use to isolate",
    "start": "131720",
    "end": "134319"
  },
  {
    "text": "web assembly programs um we'll expand",
    "start": "134319",
    "end": "136920"
  },
  {
    "text": "into some isolation bugs in some of the",
    "start": "136920",
    "end": "139760"
  },
  {
    "text": "run times um and explore what attackers",
    "start": "139760",
    "end": "142239"
  },
  {
    "text": "might do with them um we'll shift into",
    "start": "142239",
    "end": "145200"
  },
  {
    "text": "some techniques operators um Can layer",
    "start": "145200",
    "end": "147920"
  },
  {
    "text": "on top to defend themselves um and then",
    "start": "147920",
    "end": "150519"
  },
  {
    "text": "we'll dive into a specific technique uh",
    "start": "150519",
    "end": "153160"
  },
  {
    "text": "system call sandboxing um that I've",
    "start": "153160",
    "end": "155200"
  },
  {
    "text": "explored in more detail so let's begin",
    "start": "155200",
    "end": "158200"
  },
  {
    "text": "by examining some of those techniques",
    "start": "158200",
    "end": "159920"
  },
  {
    "text": "that web assembly uses to enforce",
    "start": "159920",
    "end": "163040"
  },
  {
    "text": "isolation um first off I'm going to",
    "start": "163040",
    "end": "165440"
  },
  {
    "text": "cover some terminology that means a lot",
    "start": "165440",
    "end": "167800"
  },
  {
    "text": "so let's clear it up um first we have",
    "start": "167800",
    "end": "170159"
  },
  {
    "text": "guest we have runtime and we have host",
    "start": "170159",
    "end": "172800"
  },
  {
    "text": "so what do these things mean so the host",
    "start": "172800",
    "end": "175480"
  },
  {
    "text": "is a program that's running natively on",
    "start": "175480",
    "end": "177560"
  },
  {
    "text": "the computer and it wants to expose some",
    "start": "177560",
    "end": "179959"
  },
  {
    "text": "limited functionality maybe for",
    "start": "179959",
    "end": "182159"
  },
  {
    "text": "customization or programmability to an",
    "start": "182159",
    "end": "184200"
  },
  {
    "text": "in guest program that's written in web",
    "start": "184200",
    "end": "186239"
  },
  {
    "text": "assemblies we've got the host and we've",
    "start": "186239",
    "end": "187640"
  },
  {
    "text": "got the guest and it does this via a web",
    "start": "187640",
    "end": "190280"
  },
  {
    "text": "assembly runtime so this is a system",
    "start": "190280",
    "end": "192280"
  },
  {
    "text": "that's responsible for loading a web",
    "start": "192280",
    "end": "194080"
  },
  {
    "text": "assembly program uh and and running it",
    "start": "194080",
    "end": "196959"
  },
  {
    "text": "and giving it access to only the set of",
    "start": "196959",
    "end": "198720"
  },
  {
    "text": "interfaces that the host program chooses",
    "start": "198720",
    "end": "201239"
  },
  {
    "text": "to expose um and so we can see here on",
    "start": "201239",
    "end": "204680"
  },
  {
    "text": "the slide we've got kind of you know",
    "start": "204680",
    "end": "207319"
  },
  {
    "text": "program and we've got a web assembly gas",
    "start": "207319",
    "end": "209879"
  },
  {
    "text": "making a host call that calls back in",
    "start": "209879",
    "end": "212360"
  },
  {
    "text": "through the web assembly runtime to the",
    "start": "212360",
    "end": "214239"
  },
  {
    "text": "native",
    "start": "214239",
    "end": "216040"
  },
  {
    "text": "component and so critical to web",
    "start": "216040",
    "end": "218560"
  },
  {
    "text": "assembly security model is that the",
    "start": "218560",
    "end": "220480"
  },
  {
    "text": "guest only receives access to the set",
    "start": "220480",
    "end": "222720"
  },
  {
    "text": "functionality that the host program",
    "start": "222720",
    "end": "224959"
  },
  {
    "text": "wants to expose any additional access is",
    "start": "224959",
    "end": "229080"
  },
  {
    "text": "a tax surface it's stuff that kind of",
    "start": "229080",
    "end": "232159"
  },
  {
    "text": "leaks out um and especially in cases",
    "start": "232159",
    "end": "235120"
  },
  {
    "text": "where a single program uh loads multiple",
    "start": "235120",
    "end": "237519"
  },
  {
    "text": "guests from different tenants that the",
    "start": "237519",
    "end": "239959"
  },
  {
    "text": "tenants don't trust each other it's it's",
    "start": "239959",
    "end": "241640"
  },
  {
    "text": "really important that you know this this",
    "start": "241640",
    "end": "243720"
  },
  {
    "text": "boundary be preserved and so the",
    "start": "243720",
    "end": "246239"
  },
  {
    "text": "complicated thing here is that isolation",
    "start": "246239",
    "end": "248879"
  },
  {
    "text": "is actually at odds with runtime",
    "start": "248879",
    "end": "250599"
  },
  {
    "text": "performance uh runtimes could instrument",
    "start": "250599",
    "end": "253079"
  },
  {
    "text": "every step of the guest program uh with",
    "start": "253079",
    "end": "255640"
  },
  {
    "text": "Security checks um but that would end up",
    "start": "255640",
    "end": "258280"
  },
  {
    "text": "being really slow because each check has",
    "start": "258280",
    "end": "260639"
  },
  {
    "text": "some overhead um and the computer might",
    "start": "260639",
    "end": "263400"
  },
  {
    "text": "even spend more time running the checks",
    "start": "263400",
    "end": "265479"
  },
  {
    "text": "than executing the the useful work of",
    "start": "265479",
    "end": "267759"
  },
  {
    "text": "the guest program so let's take a look",
    "start": "267759",
    "end": "270199"
  },
  {
    "text": "at some of the ways that a web assembly",
    "start": "270199",
    "end": "272120"
  },
  {
    "text": "is designed with this this isolation in",
    "start": "272120",
    "end": "274400"
  },
  {
    "text": "mind so first off is single pass",
    "start": "274400",
    "end": "277600"
  },
  {
    "text": "verification so web assembly is designed",
    "start": "277600",
    "end": "280680"
  },
  {
    "text": "um as a bite code that you can scan it",
    "start": "280680",
    "end": "282840"
  },
  {
    "text": "in single pass and know that it's valid",
    "start": "282840",
    "end": "284639"
  },
  {
    "text": "right so this means web assembly run",
    "start": "284639",
    "end": "286280"
  },
  {
    "text": "times can start parsing and generating",
    "start": "286280",
    "end": "288120"
  },
  {
    "text": "code as they're loading it from the dis",
    "start": "288120",
    "end": "290800"
  },
  {
    "text": "or the network the initiate streaming",
    "start": "290800",
    "end": "293360"
  },
  {
    "text": "right if at any point the verification",
    "start": "293360",
    "end": "295160"
  },
  {
    "text": "fails runtime can just like Panic throw",
    "start": "295160",
    "end": "298199"
  },
  {
    "text": "out all the work and say like this",
    "start": "298199",
    "end": "300000"
  },
  {
    "text": "module is bad um and this lets run times",
    "start": "300000",
    "end": "303360"
  },
  {
    "text": "load and unload code really quickly",
    "start": "303360",
    "end": "305759"
  },
  {
    "text": "right so you can make for quick startup",
    "start": "305759",
    "end": "307280"
  },
  {
    "text": "times um and this allows service",
    "start": "307280",
    "end": "309240"
  },
  {
    "text": "providers to discard idle programs with",
    "start": "309240",
    "end": "311080"
  },
  {
    "text": "the confidence that they can just reload",
    "start": "311080",
    "end": "313199"
  },
  {
    "text": "them",
    "start": "313199",
    "end": "314520"
  },
  {
    "text": "again next up is structured control flow",
    "start": "314520",
    "end": "317400"
  },
  {
    "text": "so describing all code through",
    "start": "317400",
    "end": "319120"
  },
  {
    "text": "structured control flow in the bik code",
    "start": "319120",
    "end": "321080"
  },
  {
    "text": "makes it easy for runtimes to generate",
    "start": "321080",
    "end": "322880"
  },
  {
    "text": "safe native equivalence of the web",
    "start": "322880",
    "end": "325280"
  },
  {
    "text": "assembly code they receive um so",
    "start": "325280",
    "end": "327639"
  },
  {
    "text": "avoiding arbitrary control flow",
    "start": "327639",
    "end": "330039"
  },
  {
    "text": "you know just makes this translation",
    "start": "330039",
    "end": "331800"
  },
  {
    "text": "step where they take the web assembly",
    "start": "331800",
    "end": "333199"
  },
  {
    "text": "and they put it into native code it",
    "start": "333199",
    "end": "334319"
  },
  {
    "text": "makes that much easier and again some",
    "start": "334319",
    "end": "336479"
  },
  {
    "text": "run times can even do it in like a",
    "start": "336479",
    "end": "337919"
  },
  {
    "text": "streaming fashion they can get started",
    "start": "337919",
    "end": "339560"
  },
  {
    "text": "on it before they have all the code they",
    "start": "339560",
    "end": "341199"
  },
  {
    "text": "want to uh jit right other by code",
    "start": "341199",
    "end": "344199"
  },
  {
    "text": "formats like java.net have arbitrary",
    "start": "344199",
    "end": "346759"
  },
  {
    "text": "code and it makes the translation steps",
    "start": "346759",
    "end": "348919"
  },
  {
    "text": "a little more complicated with more risk",
    "start": "348919",
    "end": "351000"
  },
  {
    "text": "of bugs um so all of this making code",
    "start": "351000",
    "end": "354280"
  },
  {
    "text": "simp you know the code loading simple",
    "start": "354280",
    "end": "356360"
  },
  {
    "text": "means um you know there are fewer",
    "start": "356360",
    "end": "358720"
  },
  {
    "text": "opportunities for the the runtime to get",
    "start": "358720",
    "end": "360080"
  },
  {
    "text": "it wrong and um they can do it a little",
    "start": "360080",
    "end": "363440"
  },
  {
    "text": "more",
    "start": "363440",
    "end": "364639"
  },
  {
    "text": "quickly next is fixed stack layouts so",
    "start": "364639",
    "end": "368680"
  },
  {
    "text": "web assembly defines stack layouts um",
    "start": "368680",
    "end": "371360"
  },
  {
    "text": "without the ability to acquire addresses",
    "start": "371360",
    "end": "373759"
  },
  {
    "text": "of data on the stack if you want to",
    "start": "373759",
    "end": "375440"
  },
  {
    "text": "acquire the address of something you",
    "start": "375440",
    "end": "376840"
  },
  {
    "text": "need to put it somewhere else um and so",
    "start": "376840",
    "end": "379680"
  },
  {
    "text": "this avoids stack buffer overflows and",
    "start": "379680",
    "end": "381880"
  },
  {
    "text": "other cases where important parts of the",
    "start": "381880",
    "end": "384400"
  },
  {
    "text": "stack are accessed or",
    "start": "384400",
    "end": "386520"
  },
  {
    "text": "manipulated um in native code this often",
    "start": "386520",
    "end": "390240"
  },
  {
    "text": "allows an attacker to hijack control",
    "start": "390240",
    "end": "392160"
  },
  {
    "text": "flow in arbitrary ways usually by",
    "start": "392160",
    "end": "394599"
  },
  {
    "text": "manipulating the the return addresses um",
    "start": "394599",
    "end": "398120"
  },
  {
    "text": "so all of this as important as an",
    "start": "398120",
    "end": "400360"
  },
  {
    "text": "attacker being able to manipulate the",
    "start": "400360",
    "end": "402000"
  },
  {
    "text": "control flow means they can escape this",
    "start": "402000",
    "end": "404880"
  },
  {
    "text": "isolated sandbox that has been assigned",
    "start": "404880",
    "end": "406720"
  },
  {
    "text": "to the web assembly program uh so in web",
    "start": "406720",
    "end": "409680"
  },
  {
    "text": "assembly deployments that have",
    "start": "409680",
    "end": "411000"
  },
  {
    "text": "multi-tenancy that's a huge problem",
    "start": "411000",
    "end": "413599"
  },
  {
    "text": "because now you have the tenants like",
    "start": "413599",
    "end": "415120"
  },
  {
    "text": "being able to see and interact with the",
    "start": "415120",
    "end": "416599"
  },
  {
    "text": "others and that's you know that's bad",
    "start": "416599",
    "end": "418960"
  },
  {
    "text": "and and actually multi- tendency means",
    "start": "418960",
    "end": "421560"
  },
  {
    "text": "you're worried about malicious code that",
    "start": "421560",
    "end": "424400"
  },
  {
    "text": "you're loading not just malicious data",
    "start": "424400",
    "end": "426479"
  },
  {
    "text": "that you're",
    "start": "426479",
    "end": "428560"
  },
  {
    "text": "processing uh next up is function",
    "start": "428560",
    "end": "430759"
  },
  {
    "text": "pointer tables um so in web assembly",
    "start": "430759",
    "end": "433919"
  },
  {
    "text": "it's not actually possible to directly",
    "start": "433919",
    "end": "435919"
  },
  {
    "text": "acquire the address but function all",
    "start": "435919",
    "end": "438360"
  },
  {
    "text": "indirect calls go through these tables",
    "start": "438360",
    "end": "440639"
  },
  {
    "text": "where you say like ah function n is this",
    "start": "440639",
    "end": "443879"
  },
  {
    "text": "particular thing and web assembly",
    "start": "443879",
    "end": "446479"
  },
  {
    "text": "figures out the runtime figures out how",
    "start": "446479",
    "end": "448080"
  },
  {
    "text": "to map that under the scenes",
    "start": "448080",
    "end": "449919"
  },
  {
    "text": "um so this avoids the guest program um",
    "start": "449919",
    "end": "452599"
  },
  {
    "text": "being able to mismatch the signatures",
    "start": "452599",
    "end": "455160"
  },
  {
    "text": "and thus leak data from the host in ways",
    "start": "455160",
    "end": "458160"
  },
  {
    "text": "that might be able to manipulate it so",
    "start": "458160",
    "end": "460879"
  },
  {
    "text": "again this is about like control flow",
    "start": "460879",
    "end": "463039"
  },
  {
    "text": "and making sure that an attacker can't",
    "start": "463039",
    "end": "466080"
  },
  {
    "text": "hijack how this this runtime is",
    "start": "466080",
    "end": "469879"
  },
  {
    "text": "going um another thing is um isolated",
    "start": "469879",
    "end": "474199"
  },
  {
    "text": "linear memories um and so this is the",
    "start": "474199",
    "end": "476360"
  },
  {
    "text": "only General memory storage available to",
    "start": "476360",
    "end": "478639"
  },
  {
    "text": "guest programs",
    "start": "478639",
    "end": "480039"
  },
  {
    "text": "um and web assembly programs cannot",
    "start": "480039",
    "end": "483280"
  },
  {
    "text": "access uh the host memory right so you",
    "start": "483280",
    "end": "485919"
  },
  {
    "text": "can only read or write to the regions",
    "start": "485919",
    "end": "487919"
  },
  {
    "text": "they've been assigned um and of course",
    "start": "487919",
    "end": "490039"
  },
  {
    "text": "the the runtime or the host can reach",
    "start": "490039",
    "end": "491759"
  },
  {
    "text": "into the guest's memory space to to like",
    "start": "491759",
    "end": "494039"
  },
  {
    "text": "see what it's doing or to to read some",
    "start": "494039",
    "end": "496280"
  },
  {
    "text": "arguments or data out uh but not vice",
    "start": "496280",
    "end": "498440"
  },
  {
    "text": "versa and again key to isolating tenants",
    "start": "498440",
    "end": "501720"
  },
  {
    "text": "from each other each tenant gets their",
    "start": "501720",
    "end": "503440"
  },
  {
    "text": "own little pool of memory and can't know",
    "start": "503440",
    "end": "505280"
  },
  {
    "text": "about the existence of",
    "start": "505280",
    "end": "507400"
  },
  {
    "text": "others and digging in a little deeper on",
    "start": "507400",
    "end": "509759"
  },
  {
    "text": "this um is uh guard pages and lazy",
    "start": "509759",
    "end": "512680"
  },
  {
    "text": "filling so to implement these linear",
    "start": "512680",
    "end": "514719"
  },
  {
    "text": "memories without expensive bounds check",
    "start": "514719",
    "end": "517080"
  },
  {
    "text": "on every memory operation in the program",
    "start": "517080",
    "end": "519959"
  },
  {
    "text": "of which there are many um they take",
    "start": "519959",
    "end": "522800"
  },
  {
    "text": "advantage of memory management units in",
    "start": "522800",
    "end": "525240"
  },
  {
    "text": "modern computers right so um if you ask",
    "start": "525240",
    "end": "528080"
  },
  {
    "text": "the mmu to give you 8 gigabytes of",
    "start": "528080",
    "end": "530000"
  },
  {
    "text": "address space and you know your your",
    "start": "530000",
    "end": "532959"
  },
  {
    "text": "addresses are only 33 bits um that means",
    "start": "532959",
    "end": "537200"
  },
  {
    "text": "there's nothing else in there except you",
    "start": "537200",
    "end": "539480"
  },
  {
    "text": "know reserved empty space for the web",
    "start": "539480",
    "end": "541320"
  },
  {
    "text": "assembly program um so that means it",
    "start": "541320",
    "end": "543680"
  },
  {
    "text": "can't be filled by other parts of the",
    "start": "543680",
    "end": "545079"
  },
  {
    "text": "host program or other tenants um and it",
    "start": "545079",
    "end": "548680"
  },
  {
    "text": "it means that any attempt by the the web",
    "start": "548680",
    "end": "550680"
  },
  {
    "text": "assembly guest to access out of bounds",
    "start": "550680",
    "end": "553120"
  },
  {
    "text": "will trigger a crash and the runtime",
    "start": "553120",
    "end": "555760"
  },
  {
    "text": "will will detect that and convert it",
    "start": "555760",
    "end": "558640"
  },
  {
    "text": "into an",
    "start": "558640",
    "end": "560600"
  },
  {
    "text": "exit um host calls instead of CIS calls",
    "start": "560600",
    "end": "564160"
  },
  {
    "text": "so all access to files Network other",
    "start": "564160",
    "end": "566519"
  },
  {
    "text": "resources um are done through host calls",
    "start": "566519",
    "end": "568680"
  },
  {
    "text": "and never directly uh by interfacing",
    "start": "568680",
    "end": "571120"
  },
  {
    "text": "with the colel the web assembly run",
    "start": "571120",
    "end": "573720"
  },
  {
    "text": "times will validate all the host calls",
    "start": "573720",
    "end": "575720"
  },
  {
    "text": "to make sure that the sandbox is allowed",
    "start": "575720",
    "end": "577560"
  },
  {
    "text": "to perform the operation that they've",
    "start": "577560",
    "end": "579680"
  },
  {
    "text": "requested um and then they'll go and",
    "start": "579680",
    "end": "582200"
  },
  {
    "text": "perform the operation on the guest's",
    "start": "582200",
    "end": "583600"
  },
  {
    "text": "behalf um so this includes standard apis",
    "start": "583600",
    "end": "586040"
  },
  {
    "text": "like wazzy we've heard that before you",
    "start": "586040",
    "end": "588079"
  },
  {
    "text": "know it's it's a posix like um and then",
    "start": "588079",
    "end": "591160"
  },
  {
    "text": "custom apis uh from the host program to",
    "start": "591160",
    "end": "593560"
  },
  {
    "text": "the guest so the the host can expose",
    "start": "593560",
    "end": "595760"
  },
  {
    "text": "custom functionality um but they should",
    "start": "595760",
    "end": "598079"
  },
  {
    "text": "be careful not to expose anything um",
    "start": "598079",
    "end": "600680"
  },
  {
    "text": "that is that is",
    "start": "600680",
    "end": "602880"
  },
  {
    "text": "dangerous um and lastly the this kind of",
    "start": "602880",
    "end": "606600"
  },
  {
    "text": "a lack of a feature but like um web",
    "start": "606600",
    "end": "609920"
  },
  {
    "text": "assembly started with no multi-threading",
    "start": "609920",
    "end": "611680"
  },
  {
    "text": "support I understand there's an",
    "start": "611680",
    "end": "613160"
  },
  {
    "text": "extension but this is actually really",
    "start": "613160",
    "end": "614880"
  },
  {
    "text": "critical because it introduces a whole",
    "start": "614880",
    "end": "616760"
  },
  {
    "text": "ton of other security concerns around um",
    "start": "616760",
    "end": "620240"
  },
  {
    "text": "you know the guest being able to modify",
    "start": "620240",
    "end": "621760"
  },
  {
    "text": "data as the host is reading it um and",
    "start": "621760",
    "end": "624640"
  },
  {
    "text": "also things like being able to time the",
    "start": "624640",
    "end": "627600"
  },
  {
    "text": "operations that the host is doing and",
    "start": "627600",
    "end": "629680"
  },
  {
    "text": "drive a side Channel there so both of",
    "start": "629680",
    "end": "631760"
  },
  {
    "text": "these break down the isolation barrier",
    "start": "631760",
    "end": "633560"
  },
  {
    "text": "and like threading is just a can of",
    "start": "633560",
    "end": "635200"
  },
  {
    "text": "worms um so I understand that some smart",
    "start": "635200",
    "end": "638560"
  },
  {
    "text": "people are working on how to do it",
    "start": "638560",
    "end": "639760"
  },
  {
    "text": "safely and I'm I'm sure they can tell me",
    "start": "639760",
    "end": "641880"
  },
  {
    "text": "what the status of that is um and then",
    "start": "641880",
    "end": "644920"
  },
  {
    "text": "this it seems weird to call this a",
    "start": "644920",
    "end": "646720"
  },
  {
    "text": "technique but honestly the web assembly",
    "start": "646720",
    "end": "649040"
  },
  {
    "text": "Community is really diligent and they've",
    "start": "649040",
    "end": "651240"
  },
  {
    "text": "read all the research on how to build",
    "start": "651240",
    "end": "652880"
  },
  {
    "text": "safe run times uh language run times are",
    "start": "652880",
    "end": "655240"
  },
  {
    "text": "complex beasts um and they have",
    "start": "655240",
    "end": "657959"
  },
  {
    "text": "similarly complex security concerns so",
    "start": "657959",
    "end": "661079"
  },
  {
    "text": "you know like a lot of it is just being",
    "start": "661079",
    "end": "662959"
  },
  {
    "text": "very diligent and rust and memory safe",
    "start": "662959",
    "end": "666079"
  },
  {
    "text": "languages don't really save you when the",
    "start": "666079",
    "end": "669120"
  },
  {
    "text": "job is generating new code that might",
    "start": "669120",
    "end": "672920"
  },
  {
    "text": "also need to be Memory safe um so a lot",
    "start": "672920",
    "end": "676120"
  },
  {
    "text": "of work goes into this and I'm I'm sure",
    "start": "676120",
    "end": "679639"
  },
  {
    "text": "there's tons of details of getting it",
    "start": "679639",
    "end": "681399"
  },
  {
    "text": "right on all the various architectures",
    "start": "681399",
    "end": "682760"
  },
  {
    "text": "that are very fiddly um and actually the",
    "start": "682760",
    "end": "685440"
  },
  {
    "text": "web as sendly Community has done pretty",
    "start": "685440",
    "end": "686959"
  },
  {
    "text": "well on this there have been",
    "start": "686959",
    "end": "688040"
  },
  {
    "text": "surprisingly flaws that break isolation",
    "start": "688040",
    "end": "690920"
  },
  {
    "text": "so good work probably some of you in the",
    "start": "690920",
    "end": "692880"
  },
  {
    "text": "room have spent a lot of time on",
    "start": "692880",
    "end": "695480"
  },
  {
    "text": "this um but it's it's really difficult",
    "start": "695480",
    "end": "698120"
  },
  {
    "text": "to get right and um so when I went",
    "start": "698120",
    "end": "700839"
  },
  {
    "text": "searching for implementation bugs I did",
    "start": "700839",
    "end": "702639"
  },
  {
    "text": "find some um and um there weren't too",
    "start": "702639",
    "end": "706000"
  },
  {
    "text": "many of them but that's great and but",
    "start": "706000",
    "end": "708160"
  },
  {
    "text": "any any single bug that violates this",
    "start": "708160",
    "end": "710200"
  },
  {
    "text": "isolation model can actually be kind of",
    "start": "710200",
    "end": "712120"
  },
  {
    "text": "catastrophic so they're really important",
    "start": "712120",
    "end": "714959"
  },
  {
    "text": "um the first place I looked was in WM",
    "start": "714959",
    "end": "717880"
  },
  {
    "text": "time it's the most popular I think",
    "start": "717880",
    "end": "720200"
  },
  {
    "text": "dedicated runtime and has a rigorous",
    "start": "720200",
    "end": "722720"
  },
  {
    "text": "security program uh with fuzzing and",
    "start": "722720",
    "end": "725040"
  },
  {
    "text": "proper reporting of security bugs um I",
    "start": "725040",
    "end": "727519"
  },
  {
    "text": "found two cve um one let guest programs",
    "start": "727519",
    "end": "732279"
  },
  {
    "text": "you know access past the end of the",
    "start": "732279",
    "end": "734000"
  },
  {
    "text": "Guard we has some incorrect handling of",
    "start": "734000",
    "end": "736320"
  },
  {
    "text": "bit shifting this is hard to get right",
    "start": "736320",
    "end": "739279"
  },
  {
    "text": "um this only applied to x86 um and so",
    "start": "739279",
    "end": "742920"
  },
  {
    "text": "you know that's not great and then the",
    "start": "742920",
    "end": "744399"
  },
  {
    "text": "other one coincidentally also was around",
    "start": "744399",
    "end": "746639"
  },
  {
    "text": "this concept of linear memory and um it",
    "start": "746639",
    "end": "749279"
  },
  {
    "text": "allowed reading sort of before the zero",
    "start": "749279",
    "end": "752600"
  },
  {
    "text": "address via some uh funky restoring of",
    "start": "752600",
    "end": "756000"
  },
  {
    "text": "values from the Native stack so both of",
    "start": "756000",
    "end": "758720"
  },
  {
    "text": "these could allow guest programs to read",
    "start": "758720",
    "end": "760959"
  },
  {
    "text": "or write outside of their assigned",
    "start": "760959",
    "end": "763399"
  },
  {
    "text": "memory region either past the guard or",
    "start": "763399",
    "end": "765560"
  },
  {
    "text": "before zero um and that could lead to a",
    "start": "765560",
    "end": "768320"
  },
  {
    "text": "compromise of the host program you know",
    "start": "768320",
    "end": "770480"
  },
  {
    "text": "or exfiltration of some data so that's",
    "start": "770480",
    "end": "772440"
  },
  {
    "text": "not great when you want to keep your web",
    "start": "772440",
    "end": "774519"
  },
  {
    "text": "assembly programs",
    "start": "774519",
    "end": "776880"
  },
  {
    "text": "isolated um wmer another one I they tend",
    "start": "776880",
    "end": "780680"
  },
  {
    "text": "not to issue cves that I could tell I'm",
    "start": "780680",
    "end": "782880"
  },
  {
    "text": "not sure maybe I just couldn't find them",
    "start": "782880",
    "end": "785320"
  },
  {
    "text": "um but I I did read a paper that",
    "start": "785320",
    "end": "787279"
  },
  {
    "text": "described two bugs in their wazzy",
    "start": "787279",
    "end": "789000"
  },
  {
    "text": "implementations one allowed deleting",
    "start": "789000",
    "end": "790880"
  },
  {
    "text": "files outside of the sandbox the other",
    "start": "790880",
    "end": "792760"
  },
  {
    "text": "allowed uh writing to files that were",
    "start": "792760",
    "end": "795079"
  },
  {
    "text": "marked readon so that violates some",
    "start": "795079",
    "end": "798079"
  },
  {
    "text": "isolation",
    "start": "798079",
    "end": "799399"
  },
  {
    "text": "property um there's uh whammer which is",
    "start": "799399",
    "end": "802279"
  },
  {
    "text": "a a micro runtime which is designed to",
    "start": "802279",
    "end": "804519"
  },
  {
    "text": "be run on Tiny embedded systems and they",
    "start": "804519",
    "end": "807000"
  },
  {
    "text": "have a different design um I think their",
    "start": "807000",
    "end": "809240"
  },
  {
    "text": "policy is to report cves like WM time",
    "start": "809240",
    "end": "812120"
  },
  {
    "text": "but I I actually couldn't find any I did",
    "start": "812120",
    "end": "814199"
  },
  {
    "text": "find a bug on their tracker that um",
    "start": "814199",
    "end": "816839"
  },
  {
    "text": "showed they had forgotten to check the",
    "start": "816839",
    "end": "819160"
  },
  {
    "text": "the argument stack didn't get too large",
    "start": "819160",
    "end": "820839"
  },
  {
    "text": "which is a common thing on embedded",
    "start": "820839",
    "end": "823000"
  },
  {
    "text": "devices where you have limited memory",
    "start": "823000",
    "end": "824800"
  },
  {
    "text": "like things can move into each other and",
    "start": "824800",
    "end": "826519"
  },
  {
    "text": "that's bad um um and then of course",
    "start": "826519",
    "end": "829920"
  },
  {
    "text": "there's V8 V8 is used in Chrome node",
    "start": "829920",
    "end": "832959"
  },
  {
    "text": "Edge and seemingly every new browser",
    "start": "832959",
    "end": "834959"
  },
  {
    "text": "these days um uh it had some call stack",
    "start": "834959",
    "end": "838480"
  },
  {
    "text": "and keep corruption vulnerabilities way",
    "start": "838480",
    "end": "840480"
  },
  {
    "text": "back in",
    "start": "840480",
    "end": "841360"
  },
  {
    "text": "2017 um and of course there's more bugs",
    "start": "841360",
    "end": "844480"
  },
  {
    "text": "in the the JavaScript portion um I think",
    "start": "844480",
    "end": "847360"
  },
  {
    "text": "the fact that web assembly has had very",
    "start": "847360",
    "end": "849040"
  },
  {
    "text": "few sort of validates the design um you",
    "start": "849040",
    "end": "852880"
  },
  {
    "text": "know but uh so so these were and it's",
    "start": "852880",
    "end": "855399"
  },
  {
    "text": "important to notice these were all fixed",
    "start": "855399",
    "end": "857920"
  },
  {
    "text": "they're in the past and they shouldn't",
    "start": "857920",
    "end": "859480"
  },
  {
    "text": "be a knock against any of them um I'm",
    "start": "859480",
    "end": "861920"
  },
  {
    "text": "just trying to show that like software",
    "start": "861920",
    "end": "864000"
  },
  {
    "text": "has bugs and some of those are are going",
    "start": "864000",
    "end": "866360"
  },
  {
    "text": "to be security bugs um it is important I",
    "start": "866360",
    "end": "869759"
  },
  {
    "text": "did come across UV wazzy um it claimed",
    "start": "869759",
    "end": "873160"
  },
  {
    "text": "not to be providing a security sandbox",
    "start": "873160",
    "end": "875040"
  },
  {
    "text": "so I find that a bit alarming I think I",
    "start": "875040",
    "end": "877120"
  },
  {
    "text": "think perhaps it's just early in the",
    "start": "877120",
    "end": "878600"
  },
  {
    "text": "Project's life",
    "start": "878600",
    "end": "880199"
  },
  {
    "text": "cycle um so what do attackers do with",
    "start": "880199",
    "end": "883160"
  },
  {
    "text": "these bugs um it's important to know",
    "start": "883160",
    "end": "885639"
  },
  {
    "text": "what they do and what their goals are um",
    "start": "885639",
    "end": "887639"
  },
  {
    "text": "and that way we can secure our systems",
    "start": "887639",
    "end": "889079"
  },
  {
    "text": "and this is especially critical on",
    "start": "889079",
    "end": "890519"
  },
  {
    "text": "multi-tenant",
    "start": "890519",
    "end": "892240"
  },
  {
    "text": "systems uh so one obvious thing is you",
    "start": "892240",
    "end": "894759"
  },
  {
    "text": "can read and write data outside of your",
    "start": "894759",
    "end": "896560"
  },
  {
    "text": "sandbox um this includes memory from",
    "start": "896560",
    "end": "899040"
  },
  {
    "text": "other tenants this kind of has limited",
    "start": "899040",
    "end": "901279"
  },
  {
    "text": "use I mean it is it is a danger and you",
    "start": "901279",
    "end": "904279"
  },
  {
    "text": "might get lucky but it's not really like",
    "start": "904279",
    "end": "906720"
  },
  {
    "text": "most attackers are really after",
    "start": "906720",
    "end": "909199"
  },
  {
    "text": "arbitrary code execution right if you",
    "start": "909199",
    "end": "911360"
  },
  {
    "text": "can run code in that host the process",
    "start": "911360",
    "end": "914839"
  },
  {
    "text": "right you have full access to like",
    "start": "914839",
    "end": "916839"
  },
  {
    "text": "whatever is there including the other",
    "start": "916839",
    "end": "918160"
  },
  {
    "text": "tenants and that's the that's the real",
    "start": "918160",
    "end": "920120"
  },
  {
    "text": "danger um and so they can do anything",
    "start": "920120",
    "end": "922440"
  },
  {
    "text": "the host program would do and this is",
    "start": "922440",
    "end": "924199"
  },
  {
    "text": "like being able to you know like the",
    "start": "924199",
    "end": "925839"
  },
  {
    "text": "attacker can kick up their feet like",
    "start": "925839",
    "end": "927160"
  },
  {
    "text": "they own the place um and I'm not sure",
    "start": "927160",
    "end": "930000"
  },
  {
    "text": "but I think this might be possible from",
    "start": "930000",
    "end": "932240"
  },
  {
    "text": "some of these bugs previously it it",
    "start": "932240",
    "end": "935000"
  },
  {
    "text": "often devils in the",
    "start": "935000",
    "end": "936560"
  },
  {
    "text": "details um so let's take a look at what",
    "start": "936560",
    "end": "939199"
  },
  {
    "text": "a traditional exploit path is um I guess",
    "start": "939199",
    "end": "941680"
  },
  {
    "text": "a non-wm program as a point of",
    "start": "941680",
    "end": "943920"
  },
  {
    "text": "comparison so we've got some form of",
    "start": "943920",
    "end": "946519"
  },
  {
    "text": "memory corruption uh corrupt the Heap or",
    "start": "946519",
    "end": "949120"
  },
  {
    "text": "the stack and be able to hijack control",
    "start": "949120",
    "end": "951319"
  },
  {
    "text": "flow and you reuse little bits and",
    "start": "951319",
    "end": "954160"
  },
  {
    "text": "pieces of the existing executable image",
    "start": "954160",
    "end": "957360"
  },
  {
    "text": "to add add in some new code um and then",
    "start": "957360",
    "end": "961079"
  },
  {
    "text": "jump to that code and then usually that",
    "start": "961079",
    "end": "963240"
  },
  {
    "text": "code um will go and execute a shell wasm",
    "start": "963240",
    "end": "967360"
  },
  {
    "text": "it's a bit different um so WM makes uh",
    "start": "967360",
    "end": "970880"
  },
  {
    "text": "protecting the guest a little bit tough",
    "start": "970880",
    "end": "973000"
  },
  {
    "text": "they have structure control flow all the",
    "start": "973000",
    "end": "974639"
  },
  {
    "text": "things we talked about",
    "start": "974639",
    "end": "976279"
  },
  {
    "text": "previously um but wasm we have this",
    "start": "976279",
    "end": "979079"
  },
  {
    "text": "densely packed web assembly programs and",
    "start": "979079",
    "end": "981519"
  },
  {
    "text": "so it's not just a tax on the guests",
    "start": "981519",
    "end": "983759"
  },
  {
    "text": "it's a tax by the guest on the runtime",
    "start": "983759",
    "end": "987519"
  },
  {
    "text": "um so Cloud providers want to be",
    "start": "987519",
    "end": "989120"
  },
  {
    "text": "absolutely sure that a rogue tenant can",
    "start": "989120",
    "end": "991519"
  },
  {
    "text": "attack the peers um and so malicious",
    "start": "991519",
    "end": "993920"
  },
  {
    "text": "guest code should still keep the host",
    "start": "993920",
    "end": "997120"
  },
  {
    "text": "safe and so here it's very similar",
    "start": "997120",
    "end": "999839"
  },
  {
    "text": "actually you have memory corruption in",
    "start": "999839",
    "end": "1001800"
  },
  {
    "text": "the wasm runtime um you know by the the",
    "start": "1001800",
    "end": "1005680"
  },
  {
    "text": "the guest code that's loaded um you have",
    "start": "1005680",
    "end": "1007920"
  },
  {
    "text": "R payload probably you can reuse some of",
    "start": "1007920",
    "end": "1011160"
  },
  {
    "text": "the code that that like the web assembly",
    "start": "1011160",
    "end": "1013399"
  },
  {
    "text": "runtime generated by loading your code",
    "start": "1013399",
    "end": "1015839"
  },
  {
    "text": "or you can use the other code in it and",
    "start": "1015839",
    "end": "1017519"
  },
  {
    "text": "then again map the shell C code launch",
    "start": "1017519",
    "end": "1018959"
  },
  {
    "text": "into a shell kick up your feet enjoy so",
    "start": "1018959",
    "end": "1022040"
  },
  {
    "text": "how do we raise the the cost of attack",
    "start": "1022040",
    "end": "1024678"
  },
  {
    "text": "here right how do we mitigate these",
    "start": "1024679",
    "end": "1026640"
  },
  {
    "text": "flaws um and web assembly is pretty good",
    "start": "1026640",
    "end": "1029199"
  },
  {
    "text": "but it's not perfect so I like to layer",
    "start": "1029199",
    "end": "1031839"
  },
  {
    "text": "things right so the first and most",
    "start": "1031839",
    "end": "1034079"
  },
  {
    "text": "obvious thing is process isolation I'm",
    "start": "1034079",
    "end": "1036000"
  },
  {
    "text": "glad um another speaker talked about",
    "start": "1036000",
    "end": "1038038"
  },
  {
    "text": "that that's fantastic um not every bug",
    "start": "1038039",
    "end": "1040480"
  },
  {
    "text": "leads to code execution this is really",
    "start": "1040480",
    "end": "1042079"
  },
  {
    "text": "effective at isolating tenants from each",
    "start": "1042079",
    "end": "1044000"
  },
  {
    "text": "other you just put all the tenants web",
    "start": "1044000",
    "end": "1046199"
  },
  {
    "text": "assembly stuff in one process and keep",
    "start": "1046199",
    "end": "1048600"
  },
  {
    "text": "tenants in different processes and",
    "start": "1048600",
    "end": "1050039"
  },
  {
    "text": "that's super easy um and it's actually",
    "start": "1050039",
    "end": "1052160"
  },
  {
    "text": "key to a lot of the other strategies we",
    "start": "1052160",
    "end": "1054080"
  },
  {
    "text": "have next is cgroups um I think Docker",
    "start": "1054080",
    "end": "1057640"
  },
  {
    "text": "is the most obvious and popular way you",
    "start": "1057640",
    "end": "1059720"
  },
  {
    "text": "can isolate file system Network a whole",
    "start": "1059720",
    "end": "1061640"
  },
  {
    "text": "ton of stuff and you can layer this",
    "start": "1061640",
    "end": "1063720"
  },
  {
    "text": "again on top of web assembly run",
    "start": "1063720",
    "end": "1066200"
  },
  {
    "text": "times then we have reduced privilege and",
    "start": "1066200",
    "end": "1069039"
  },
  {
    "text": "file system permissions these ones are I",
    "start": "1069039",
    "end": "1071960"
  },
  {
    "text": "guess kind of obvious but they're easy",
    "start": "1071960",
    "end": "1073919"
  },
  {
    "text": "to overlook you you know it's easy to",
    "start": "1073919",
    "end": "1075840"
  },
  {
    "text": "accidentally give access to something",
    "start": "1075840",
    "end": "1078480"
  },
  {
    "text": "that you know the host runtime doesn't",
    "start": "1078480",
    "end": "1080280"
  },
  {
    "text": "need and so reducing this surface area",
    "start": "1080280",
    "end": "1083280"
  },
  {
    "text": "is",
    "start": "1083280",
    "end": "1084200"
  },
  {
    "text": "important virtual machines is another",
    "start": "1084200",
    "end": "1086559"
  },
  {
    "text": "tactic it kind of defeats the purpose of",
    "start": "1086559",
    "end": "1088600"
  },
  {
    "text": "web assembly but I had to put it up here",
    "start": "1088600",
    "end": "1090880"
  },
  {
    "text": "just so people would say I didn't you",
    "start": "1090880",
    "end": "1092880"
  },
  {
    "text": "know forget it um and then lastly and",
    "start": "1092880",
    "end": "1096240"
  },
  {
    "text": "this is perhaps where I'm going to focus",
    "start": "1096240",
    "end": "1097840"
  },
  {
    "text": "on is um system call sandboxing so you",
    "start": "1097840",
    "end": "1101640"
  },
  {
    "text": "can put it in a sandbox which limits",
    "start": "1101640",
    "end": "1104000"
  },
  {
    "text": "what operations the program can ask the",
    "start": "1104000",
    "end": "1106240"
  },
  {
    "text": "konel uh to perform on its back half so",
    "start": "1106240",
    "end": "1108720"
  },
  {
    "text": "this is like the next layer underneath",
    "start": "1108720",
    "end": "1111200"
  },
  {
    "text": "the the web assembly runtime um so the",
    "start": "1111200",
    "end": "1115159"
  },
  {
    "text": "way this works is there's the subsystem",
    "start": "1115159",
    "end": "1117120"
  },
  {
    "text": "called set comp you can ask the colonel",
    "start": "1117120",
    "end": "1119080"
  },
  {
    "text": "hey only allow me to perform CIS calls",
    "start": "1119080",
    "end": "1121320"
  },
  {
    "text": "with these patterns uh and the colonel",
    "start": "1121320",
    "end": "1123320"
  },
  {
    "text": "will validate every call you make um so",
    "start": "1123320",
    "end": "1125960"
  },
  {
    "text": "this style of sandboxing is tricky to",
    "start": "1125960",
    "end": "1127480"
  },
  {
    "text": "get right it's really cumbersome you",
    "start": "1127480",
    "end": "1129000"
  },
  {
    "text": "have to know all the CIS calls your",
    "start": "1129000",
    "end": "1130600"
  },
  {
    "text": "program does um before you you know like",
    "start": "1130600",
    "end": "1134480"
  },
  {
    "text": "ask the konel to limit and if you miss",
    "start": "1134480",
    "end": "1136559"
  },
  {
    "text": "any you you know that's kind kind of",
    "start": "1136559",
    "end": "1138559"
  },
  {
    "text": "troublesome the colonel will will reject",
    "start": "1138559",
    "end": "1140720"
  },
  {
    "text": "you um and your program will crash so",
    "start": "1140720",
    "end": "1143000"
  },
  {
    "text": "that's that's a problem when you have",
    "start": "1143000",
    "end": "1144480"
  },
  {
    "text": "multi- tendency that's a problem in",
    "start": "1144480",
    "end": "1147200"
  },
  {
    "text": "general um but web assembly runtimes as",
    "start": "1147200",
    "end": "1150280"
  },
  {
    "text": "complex as they are they have a",
    "start": "1150280",
    "end": "1151679"
  },
  {
    "text": "relatively fixed set of behaviors really",
    "start": "1151679",
    "end": "1154400"
  },
  {
    "text": "they load and jit compile the the web",
    "start": "1154400",
    "end": "1157080"
  },
  {
    "text": "assembly guest programs they instantiate",
    "start": "1157080",
    "end": "1159480"
  },
  {
    "text": "instances of those programs including",
    "start": "1159480",
    "end": "1161080"
  },
  {
    "text": "some linear memories um and then they",
    "start": "1161080",
    "end": "1163200"
  },
  {
    "text": "execute uh those programs so those",
    "start": "1163200",
    "end": "1165400"
  },
  {
    "text": "programs will do a bunch of stuff with",
    "start": "1165400",
    "end": "1167200"
  },
  {
    "text": "their memory and then they'll do a host",
    "start": "1167200",
    "end": "1169240"
  },
  {
    "text": "call so once you figure out what the",
    "start": "1169240",
    "end": "1171640"
  },
  {
    "text": "runtime does um and what limited sets of",
    "start": "1171640",
    "end": "1174400"
  },
  {
    "text": "behavior in the the host calls you have",
    "start": "1174400",
    "end": "1177200"
  },
  {
    "text": "um you can set up a CIS call Profile um",
    "start": "1177200",
    "end": "1180360"
  },
  {
    "text": "Chrome does this for render processes",
    "start": "1180360",
    "end": "1182799"
  },
  {
    "text": "and attempt to mitigate unknown bugs in",
    "start": "1182799",
    "end": "1185200"
  },
  {
    "text": "V8 and the Dom and web assembly and just",
    "start": "1185200",
    "end": "1187880"
  },
  {
    "text": "all the things that go into the magic of",
    "start": "1187880",
    "end": "1190200"
  },
  {
    "text": "rendering a web",
    "start": "1190200",
    "end": "1191640"
  },
  {
    "text": "page um it does take a ton of effort to",
    "start": "1191640",
    "end": "1195240"
  },
  {
    "text": "build precise csol profiles um even when",
    "start": "1195240",
    "end": "1198720"
  },
  {
    "text": "you control all the software like",
    "start": "1198720",
    "end": "1200000"
  },
  {
    "text": "everything uses libraries um and it's",
    "start": "1200000",
    "end": "1202480"
  },
  {
    "text": "it's really hard to to kind of like know",
    "start": "1202480",
    "end": "1205159"
  },
  {
    "text": "what everything under the stack of your",
    "start": "1205159",
    "end": "1206919"
  },
  {
    "text": "software is doing uh but we can write",
    "start": "1206919",
    "end": "1209799"
  },
  {
    "text": "software to generate and apply the",
    "start": "1209799",
    "end": "1211440"
  },
  {
    "text": "profiles instead uh using a branch of",
    "start": "1211440",
    "end": "1213640"
  },
  {
    "text": "competing science known as program",
    "start": "1213640",
    "end": "1215919"
  },
  {
    "text": "analysis so um with program analysis you",
    "start": "1215919",
    "end": "1218960"
  },
  {
    "text": "could yield precise sandbox profiles uh",
    "start": "1218960",
    "end": "1221760"
  },
  {
    "text": "that tightly limit what your web",
    "start": "1221760",
    "end": "1223440"
  },
  {
    "text": "assembly runtime can",
    "start": "1223440",
    "end": "1225080"
  },
  {
    "text": "perform and I built software to do",
    "start": "1225080",
    "end": "1227480"
  },
  {
    "text": "exactly this",
    "start": "1227480",
    "end": "1228760"
  },
  {
    "text": "um it's not specific to web assembly um",
    "start": "1228760",
    "end": "1231000"
  },
  {
    "text": "it's called colander um but I'm going to",
    "start": "1231000",
    "end": "1233240"
  },
  {
    "text": "take it here and apply it to a web",
    "start": "1233240",
    "end": "1236360"
  },
  {
    "text": "assembly runtime so it does static",
    "start": "1236360",
    "end": "1238679"
  },
  {
    "text": "analysis on the scale of whole programs",
    "start": "1238679",
    "end": "1240679"
  },
  {
    "text": "libraries complex control flow",
    "start": "1240679",
    "end": "1242280"
  },
  {
    "text": "loop-de-loops switch statements",
    "start": "1242280",
    "end": "1244120"
  },
  {
    "text": "everything um it generates and applies a",
    "start": "1244120",
    "end": "1247559"
  },
  {
    "text": "set comp profile that applies to the",
    "start": "1247559",
    "end": "1250159"
  },
  {
    "text": "program um and you do it by prefec your",
    "start": "1250159",
    "end": "1252960"
  },
  {
    "text": "program with colander like you might do",
    "start": "1252960",
    "end": "1254360"
  },
  {
    "text": "with estrace so um I've applied it to WM",
    "start": "1254360",
    "end": "1257039"
  },
  {
    "text": "times so it's like colander dwm time",
    "start": "1257039",
    "end": "1259679"
  },
  {
    "text": "right uh to add this extra layer of",
    "start": "1259679",
    "end": "1262600"
  },
  {
    "text": "isolation um so it generates precisely",
    "start": "1262600",
    "end": "1265640"
  },
  {
    "text": "scope profiles without manual effort um",
    "start": "1265640",
    "end": "1269559"
  },
  {
    "text": "and it does this um in a really sort of",
    "start": "1269559",
    "end": "1272520"
  },
  {
    "text": "precise Way by knowing exactly what",
    "start": "1272520",
    "end": "1274799"
  },
  {
    "text": "operations and CIS calls the the program",
    "start": "1274799",
    "end": "1277600"
  },
  {
    "text": "performs um so this means we can",
    "start": "1277600",
    "end": "1279320"
  },
  {
    "text": "actually sandbox just like entire web",
    "start": "1279320",
    "end": "1281440"
  },
  {
    "text": "assembly run times um without actually",
    "start": "1281440",
    "end": "1283640"
  },
  {
    "text": "doing all that hard work to investigate",
    "start": "1283640",
    "end": "1285640"
  },
  {
    "text": "all the minutia of the operation they",
    "start": "1285640",
    "end": "1288720"
  },
  {
    "text": "perform and so it models the imagined",
    "start": "1288720",
    "end": "1292000"
  },
  {
    "text": "possible states of the program at",
    "start": "1292000",
    "end": "1294120"
  },
  {
    "text": "sandboxing in this case WM time and as",
    "start": "1294120",
    "end": "1296360"
  },
  {
    "text": "it goes so it doesn't have to you know",
    "start": "1296360",
    "end": "1298080"
  },
  {
    "text": "Engineers don't have to do that hard",
    "start": "1298080",
    "end": "1301000"
  },
  {
    "text": "work and it does all this to get a",
    "start": "1301000",
    "end": "1303080"
  },
  {
    "text": "complete picture of what system calls",
    "start": "1303080",
    "end": "1305080"
  },
  {
    "text": "are possible even in those obscure error",
    "start": "1305080",
    "end": "1307559"
  },
  {
    "text": "paths that you know happen in",
    "start": "1307559",
    "end": "1311559"
  },
  {
    "text": "seldomly uh it's important to note that",
    "start": "1311559",
    "end": "1313799"
  },
  {
    "text": "colander can be more precise than just",
    "start": "1313799",
    "end": "1315600"
  },
  {
    "text": "these system call numbers it knows what",
    "start": "1315600",
    "end": "1317760"
  },
  {
    "text": "range range of values are possible for",
    "start": "1317760",
    "end": "1319600"
  },
  {
    "text": "each argument and this is much more",
    "start": "1319600",
    "end": "1321200"
  },
  {
    "text": "detailed than a human could be expected",
    "start": "1321200",
    "end": "1323000"
  },
  {
    "text": "to write and you'll see in a moment why",
    "start": "1323000",
    "end": "1325799"
  },
  {
    "text": "I wanted to apply it to web assembly",
    "start": "1325799",
    "end": "1328559"
  },
  {
    "text": "runtimes and that's because many",
    "start": "1328559",
    "end": "1330960"
  },
  {
    "text": "security system uh sensitive system",
    "start": "1330960",
    "end": "1332960"
  },
  {
    "text": "calls like those that can add new",
    "start": "1332960",
    "end": "1335039"
  },
  {
    "text": "executable code um kind of only happen",
    "start": "1335039",
    "end": "1338080"
  },
  {
    "text": "like at startup and program",
    "start": "1338080",
    "end": "1340760"
  },
  {
    "text": "initialization um and when web assembly",
    "start": "1340760",
    "end": "1342919"
  },
  {
    "text": "modules are loaded and then once the",
    "start": "1342919",
    "end": "1344640"
  },
  {
    "text": "program gets going it should like never",
    "start": "1344640",
    "end": "1346440"
  },
  {
    "text": "do that again and that is something that",
    "start": "1346440",
    "end": "1348400"
  },
  {
    "text": "attackers generally do during their",
    "start": "1348400",
    "end": "1351120"
  },
  {
    "text": "their",
    "start": "1351120",
    "end": "1352039"
  },
  {
    "text": "attack so um colander applies the",
    "start": "1352039",
    "end": "1354960"
  },
  {
    "text": "program when you ask it to and so it can",
    "start": "1354960",
    "end": "1357080"
  },
  {
    "text": "do it just after the program finishes",
    "start": "1357080",
    "end": "1359000"
  },
  {
    "text": "starting and it can block any CIS calls",
    "start": "1359000",
    "end": "1361320"
  },
  {
    "text": "that are only used to",
    "start": "1361320",
    "end": "1362799"
  },
  {
    "text": "initialize so here is WM times and the",
    "start": "1362799",
    "end": "1365919"
  },
  {
    "text": "text is Tiny so I apologize for that um",
    "start": "1365919",
    "end": "1369039"
  },
  {
    "text": "these are WM times memory mapping CIS",
    "start": "1369039",
    "end": "1371279"
  },
  {
    "text": "calls that it it figured out and you'll",
    "start": "1371279",
    "end": "1373320"
  },
  {
    "text": "notice only one of them is pro exec So",
    "start": "1373320",
    "end": "1376000"
  },
  {
    "text": "Pro exec is asking for an ex utable",
    "start": "1376000",
    "end": "1378400"
  },
  {
    "text": "memory mapping um so it doesn't make",
    "start": "1378400",
    "end": "1381159"
  },
  {
    "text": "memory mappings after it's finished uh",
    "start": "1381159",
    "end": "1383640"
  },
  {
    "text": "compiling web assembly code so cers can",
    "start": "1383640",
    "end": "1386200"
  },
  {
    "text": "just wait until all that startup",
    "start": "1386200",
    "end": "1388520"
  },
  {
    "text": "compilation finishes and then tell the",
    "start": "1388520",
    "end": "1391120"
  },
  {
    "text": "colonel like allow it to continue to",
    "start": "1391120",
    "end": "1393000"
  },
  {
    "text": "mmap and and protect but never with the",
    "start": "1393000",
    "end": "1395919"
  },
  {
    "text": "produ Z option and that means we can",
    "start": "1395919",
    "end": "1399240"
  },
  {
    "text": "block Shell Code just entirely like no",
    "start": "1399240",
    "end": "1402480"
  },
  {
    "text": "shell code um attacker can compromise",
    "start": "1402480",
    "end": "1406240"
  },
  {
    "text": "the guest and as soon as they try they",
    "start": "1406240",
    "end": "1408240"
  },
  {
    "text": "will get",
    "start": "1408240",
    "end": "1409640"
  },
  {
    "text": "blocked uh so Coler doesn't really have",
    "start": "1409640",
    "end": "1412159"
  },
  {
    "text": "any specific knowledge of wasm time um I",
    "start": "1412159",
    "end": "1415440"
  },
  {
    "text": "only had to tell it like here's the",
    "start": "1415440",
    "end": "1416960"
  },
  {
    "text": "point at which the program undergos a",
    "start": "1416960",
    "end": "1419279"
  },
  {
    "text": "phase change um and it should apply",
    "start": "1419279",
    "end": "1421880"
  },
  {
    "text": "equally well in future versions and to",
    "start": "1421880",
    "end": "1423840"
  },
  {
    "text": "other web assembly run",
    "start": "1423840",
    "end": "1425400"
  },
  {
    "text": "times um it is available on GitHub and",
    "start": "1425400",
    "end": "1428600"
  },
  {
    "text": "it runs on most x86 Linux",
    "start": "1428600",
    "end": "1431559"
  },
  {
    "text": "distributions um I'm looking at other",
    "start": "1431559",
    "end": "1434679"
  },
  {
    "text": "architectures but right now it is",
    "start": "1434679",
    "end": "1436080"
  },
  {
    "text": "architecture specific",
    "start": "1436080",
    "end": "1438600"
  },
  {
    "text": "um and so with this um I hope all of you",
    "start": "1438600",
    "end": "1441799"
  },
  {
    "text": "learned a little bit about sort of like",
    "start": "1441799",
    "end": "1443480"
  },
  {
    "text": "web assemblies isolation I'm a huge fan",
    "start": "1443480",
    "end": "1446320"
  },
  {
    "text": "of of just sort of like where it's going",
    "start": "1446320",
    "end": "1448400"
  },
  {
    "text": "especially the component model stuff",
    "start": "1448400",
    "end": "1449960"
  },
  {
    "text": "with nested run times and being able to",
    "start": "1449960",
    "end": "1452159"
  },
  {
    "text": "interrupt between languages freely is",
    "start": "1452159",
    "end": "1454440"
  },
  {
    "text": "just fascinating and really exciting um",
    "start": "1454440",
    "end": "1456960"
  },
  {
    "text": "and I want to get more people into it um",
    "start": "1456960",
    "end": "1459440"
  },
  {
    "text": "I'm excited to get the like isolation",
    "start": "1459440",
    "end": "1462000"
  },
  {
    "text": "properties just as bulletproof as",
    "start": "1462000",
    "end": "1464200"
  },
  {
    "text": "possible and I think it's going to be",
    "start": "1464200",
    "end": "1466279"
  },
  {
    "text": "magical when we can just like have fine",
    "start": "1466279",
    "end": "1468679"
  },
  {
    "text": "grain isolation like between the",
    "start": "1468679",
    "end": "1471039"
  },
  {
    "text": "different parts of our software uh",
    "start": "1471039",
    "end": "1473080"
  },
  {
    "text": "without having to do microservices or",
    "start": "1473080",
    "end": "1475080"
  },
  {
    "text": "anything like that um so I'm actually",
    "start": "1475080",
    "end": "1477320"
  },
  {
    "text": "really eager to see what additional",
    "start": "1477320",
    "end": "1478840"
  },
  {
    "text": "steps the community is taking to secure",
    "start": "1478840",
    "end": "1481159"
  },
  {
    "text": "their web assembly runtimes and software",
    "start": "1481159",
    "end": "1483480"
  },
  {
    "text": "especially if you run like a",
    "start": "1483480",
    "end": "1484760"
  },
  {
    "text": "multi-tenant platform that absolutely",
    "start": "1484760",
    "end": "1487000"
  },
  {
    "text": "fascinates me um so thanks for your time",
    "start": "1487000",
    "end": "1489640"
  },
  {
    "text": "and attention um I'm Ryan petrich",
    "start": "1489640",
    "end": "1492320"
  },
  {
    "text": "basically at our petrich everywhere and",
    "start": "1492320",
    "end": "1494960"
  },
  {
    "text": "uh if you like weird hackery things give",
    "start": "1494960",
    "end": "1497000"
  },
  {
    "text": "me a shout",
    "start": "1497000",
    "end": "1499760"
  },
  {
    "text": "incredible talk um any questions for",
    "start": "1505799",
    "end": "1507760"
  },
  {
    "text": "Ryan over",
    "start": "1507760",
    "end": "1511000"
  },
  {
    "text": "here hi thanks for your presentation I",
    "start": "1517840",
    "end": "1521440"
  },
  {
    "text": "check d report of calendar uh but I",
    "start": "1521440",
    "end": "1524600"
  },
  {
    "text": "couldn't find the source cord and the",
    "start": "1524600",
    "end": "1526960"
  },
  {
    "text": "rense so could you uh tell me where I",
    "start": "1526960",
    "end": "1529880"
  },
  {
    "text": "can I find the source course and what's",
    "start": "1529880",
    "end": "1531679"
  },
  {
    "text": "the rense of this software I am trying",
    "start": "1531679",
    "end": "1534320"
  },
  {
    "text": "to figure out the licensing right now",
    "start": "1534320",
    "end": "1536120"
  },
  {
    "text": "I'm committed to making it open source",
    "start": "1536120",
    "end": "1538080"
  },
  {
    "text": "but that'll be wrapped up pretty pretty",
    "start": "1538080",
    "end": "1540720"
  },
  {
    "text": "soon so so it's not open source at this",
    "start": "1540720",
    "end": "1544279"
  },
  {
    "text": "moment right now I only have the the",
    "start": "1544279",
    "end": "1546320"
  },
  {
    "text": "binary available yes yeah uh but I think",
    "start": "1546320",
    "end": "1550600"
  },
  {
    "text": "this conference is most compated open",
    "start": "1550600",
    "end": "1553760"
  },
  {
    "text": "source software so it really nice if we",
    "start": "1553760",
    "end": "1557320"
  },
  {
    "text": "if you open software before uh",
    "start": "1557320",
    "end": "1560840"
  },
  {
    "text": "conference next time yeah I'm I'm the",
    "start": "1560840",
    "end": "1564360"
  },
  {
    "text": "plan is to have it be gplv3 I just ran",
    "start": "1564360",
    "end": "1567120"
  },
  {
    "text": "out of time for the the purposes of this",
    "start": "1567120",
    "end": "1569360"
  },
  {
    "text": "conference yeah yeah thank",
    "start": "1569360",
    "end": "1572840"
  },
  {
    "text": "you other",
    "start": "1572840",
    "end": "1576120"
  },
  {
    "text": "questions all right Ryan thank you so",
    "start": "1576240",
    "end": "1578200"
  },
  {
    "text": "much thank",
    "start": "1578200",
    "end": "1581120"
  },
  {
    "text": "you",
    "start": "1581720",
    "end": "1584720"
  }
]