[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "all right welcome to today's cncf live webinar conference conflict-free replicated data types i'm libby schultz",
    "start": "5040",
    "end": "12639"
  },
  {
    "text": "and i'll be moderating today's webinar i'm going to read our code of conduct and then hand over to jared dillon cto",
    "start": "12639",
    "end": "18480"
  },
  {
    "text": "at mycelial and james moore principal instructor at mycelial a few housekeeping items before we get started",
    "start": "18480",
    "end": "25279"
  },
  {
    "text": "during the webinar you're not able to speak as an attendee but there's a q a box on the right hand side of your",
    "start": "25279",
    "end": "30480"
  },
  {
    "text": "screen in the chat box please feel free to drop your questions there and we'll get to as many as we can at the end",
    "start": "30480",
    "end": "37280"
  },
  {
    "text": "this is an official webinar of the cncf and as such is subject to the cncf code of conduct",
    "start": "37280",
    "end": "42800"
  },
  {
    "text": "please do not add anything to the chat or questions that would be in violation of that code of conduct and please be",
    "start": "42800",
    "end": "48079"
  },
  {
    "text": "respectful of all of your fellow participants and presenters please also note that the recording slides will be posted later today to the",
    "start": "48079",
    "end": "54960"
  },
  {
    "text": "cncf online programs page at community.cncf.io under online programs they will also be",
    "start": "54960",
    "end": "62480"
  },
  {
    "text": "available via your registration link you used today and the recording will be on our online programs youtube playlist",
    "start": "62480",
    "end": "69280"
  },
  {
    "text": "with that i will hand it over to jared and james to get things going",
    "start": "69280",
    "end": "75280"
  },
  {
    "text": "thanks libby uh as uh as a little introduced i'm jared dillon i'm the cto with mycelial and uh with me is james uh",
    "start": "76720",
    "end": "84240"
  },
  {
    "text": "moore as well who's our principal instructor over at myself um so just to walk through",
    "start": "84240",
    "end": "90640"
  },
  {
    "start": "90000",
    "end": "150000"
  },
  {
    "text": "a little bit of what we're going to talk about today we're going to start off with a history of what distributed systems look",
    "start": "90640",
    "end": "97759"
  },
  {
    "text": "like and how they've applied to the cloud native landscape in in over the past couple years",
    "start": "97759",
    "end": "103840"
  },
  {
    "text": "and then we're going to talk a little bit about consensus or values in distributed systems and",
    "start": "103840",
    "end": "109439"
  },
  {
    "text": "why consensus on values is is important in order to build reliable robust",
    "start": "109439",
    "end": "114880"
  },
  {
    "text": "large-scale systems from there we're going to talk about the challenges of building consensus-based",
    "start": "114880",
    "end": "120399"
  },
  {
    "text": "systems at global scale and talk a little bit about the use cases of",
    "start": "120399",
    "end": "126079"
  },
  {
    "text": "why you might want to solve these particular sets of challenges last we'll move over to james and james",
    "start": "126079",
    "end": "132720"
  },
  {
    "text": "will talk about what conflict-free replicated data types are how to use them and how they're",
    "start": "132720",
    "end": "138319"
  },
  {
    "text": "implemented as well as examples of how they're actually being used out in",
    "start": "138319",
    "end": "144000"
  },
  {
    "text": "libraries as well as ways to contribute and participate in this in the in an open source community",
    "start": "144000",
    "end": "150000"
  },
  {
    "text": "so just to give a little background into distributed systems in the cloud native",
    "start": "150000",
    "end": "155280"
  },
  {
    "text": "environment our goal when in in designing this and and really a large goal of the cloud",
    "start": "155280",
    "end": "161200"
  },
  {
    "text": "native movement was to start begin scaling and solving the problems of scale beyond single systems",
    "start": "161200",
    "end": "167599"
  },
  {
    "text": "while ensuring some sort of acid compliance making sure that all of our our data is atomic it's consistent it's",
    "start": "167599",
    "end": "175920"
  },
  {
    "text": "item potent and it's durable right we want to be able to write values and then read and know that we're",
    "start": "175920",
    "end": "182560"
  },
  {
    "text": "reading a valid result back right and so that leads to",
    "start": "182560",
    "end": "188000"
  },
  {
    "text": "some guarantees of data integrity we can trust our systems we know that we know",
    "start": "188000",
    "end": "193599"
  },
  {
    "text": "that our rights are serialized we know that that certain properties of our systems when",
    "start": "193599",
    "end": "199040"
  },
  {
    "text": "we go to access and read that across multiple systems but when we're talking about multiple",
    "start": "199040",
    "end": "205599"
  },
  {
    "text": "systems we also need to start dealing with the realities of the world and so partition",
    "start": "205599",
    "end": "210720"
  },
  {
    "text": "tolerance comes into play what happens when one or many nodes starts to go offline",
    "start": "210720",
    "end": "217360"
  },
  {
    "text": "how do i make sure that system continues to function either by progression or by",
    "start": "217360",
    "end": "222720"
  },
  {
    "text": "being able to at least still access and read values in the meantime",
    "start": "222720",
    "end": "228239"
  },
  {
    "text": "and we want to do this with some sort of reliable leader election or some sort of",
    "start": "228239",
    "end": "233360"
  },
  {
    "text": "guaranteed consensus mechanism to make sure that we have the correct values",
    "start": "233360",
    "end": "240000"
  },
  {
    "text": "and so a lot of this talk is really about the the the purpose of values the purpose of consent consensus and",
    "start": "240000",
    "end": "246640"
  },
  {
    "text": "consistency in our systems so just to recap a little bit and add",
    "start": "246640",
    "end": "252480"
  },
  {
    "text": "some more we're really looking for a guarantee of data integrity between different servers",
    "start": "252480",
    "end": "258160"
  },
  {
    "text": "and that's so that we can get some level of fault tolerance right we're looking at building highly available systems",
    "start": "258160",
    "end": "263680"
  },
  {
    "text": "that can sustain a fault somewhere along the line that will ultimately get fixed later but",
    "start": "263680",
    "end": "270479"
  },
  {
    "text": "doesn't compromise the working system in the meantime so we're wanting to ensure continued progress",
    "start": "270479",
    "end": "277680"
  },
  {
    "text": "servers are available and typically in these systems we can't make",
    "start": "277680",
    "end": "282800"
  },
  {
    "text": "progress if a majority fails but we always want to be able to return a correct result and this is very critical",
    "start": "282800",
    "end": "288639"
  },
  {
    "text": "right if we're building systems on top of kubernetes we even in a read-only state we need the state of that system",
    "start": "288639",
    "end": "295600"
  },
  {
    "text": "to return a correct read even while rights are unavailable to us",
    "start": "295600",
    "end": "302000"
  },
  {
    "text": "so an understandable way about to go about this there's been attempts at this",
    "start": "302000",
    "end": "307199"
  },
  {
    "text": "starting with with paxos and other consensus algorithms but in",
    "start": "307199",
    "end": "312880"
  },
  {
    "text": "in the past decade a paper was written called a consensus algorithm called raft came out that was ultimately designed",
    "start": "312880",
    "end": "319440"
  },
  {
    "text": "around under understandability and with the with the idea that that sane or",
    "start": "319440",
    "end": "325520"
  },
  {
    "text": "or reliable robust implementations would come out of strongly understood systems",
    "start": "325520",
    "end": "331440"
  },
  {
    "text": "and so i encourage everyone to go read the rap documentation if you haven't uh it is a great example of how to build a",
    "start": "331440",
    "end": "338320"
  },
  {
    "text": "consensus-based system that agrees on on on values while remaining strongly",
    "start": "338320",
    "end": "344080"
  },
  {
    "text": "consistent and there's no better example in the cncf of",
    "start": "344080",
    "end": "350400"
  },
  {
    "text": "of raft than etsy d it's a graduated cncf project it was originally developed at core os to build",
    "start": "350400",
    "end": "357199"
  },
  {
    "text": "out what was what's called fleet and that was the ability it was a distributed",
    "start": "357199",
    "end": "362319"
  },
  {
    "text": "uh system manager for deploying out in the early days of docker workloads on top of a core os cluster",
    "start": "362319",
    "end": "369440"
  },
  {
    "text": "it was also used for other mechanisms inside of coreos and really was the beating heart of a cluster of operating",
    "start": "369440",
    "end": "375039"
  },
  {
    "text": "systems and so what is that cd well at its core it's a distributed locking strongly",
    "start": "375039",
    "end": "381520"
  },
  {
    "text": "consistent key value store i write i write a key and i expect that to be able to read that result once scd confirms",
    "start": "381520",
    "end": "389520"
  },
  {
    "text": "that that key has been written and so it's acid compliant and that's in in that from that standpoint",
    "start": "389520",
    "end": "395600"
  },
  {
    "text": "so now after years of use users being scaled it's the core data store for kubernetes core dns",
    "start": "395600",
    "end": "402880"
  },
  {
    "text": "and a lot of other cncf projects it's based on raft and it's a single",
    "start": "402880",
    "end": "408240"
  },
  {
    "text": "writer with leadership election and multiple readers so what does single writer mean in this case well",
    "start": "408240",
    "end": "414479"
  },
  {
    "text": "any any node can accept a right however those rights get forwarded over to the",
    "start": "414479",
    "end": "419759"
  },
  {
    "text": "leader if that if that current raft node that's being accessed is a follower and so you",
    "start": "419759",
    "end": "425360"
  },
  {
    "text": "really only have one node that is responsible for the",
    "start": "425360",
    "end": "431680"
  },
  {
    "text": "of data at any given time so",
    "start": "431680",
    "end": "437360"
  },
  {
    "text": "as systems have scaled and we see this no better in kubernetes and multi kubernetes and federation",
    "start": "437360",
    "end": "443520"
  },
  {
    "text": "and the the need for getting workloads closer to users we start to",
    "start": "443520",
    "end": "449440"
  },
  {
    "text": "see challenges in these very consistency orient or consistency bound environments where you have single writers where",
    "start": "449440",
    "end": "456720"
  },
  {
    "text": "where latency is is a is a is a significant issue and so these sorts of stores these these",
    "start": "456720",
    "end": "463440"
  },
  {
    "text": "consistency oriented stores really work best in very low latency environments",
    "start": "463440",
    "end": "469199"
  },
  {
    "text": "so a global scale of cd cluster for example often suffers from heartbeat issues",
    "start": "469199",
    "end": "474720"
  },
  {
    "text": "because as you move across the globe latency of course increases you're not going to be at the speed of light and",
    "start": "474720",
    "end": "481599"
  },
  {
    "text": "you start to see partitioning problems and so what we've settled on is is generally",
    "start": "481599",
    "end": "488720"
  },
  {
    "text": "scaling into the the region or the availability zone and having had a background building out very very large",
    "start": "488960",
    "end": "495280"
  },
  {
    "text": "kubernetes clusters doing machine learning uh graphics programming uh or gpu based operations some of the",
    "start": "495280",
    "end": "502400"
  },
  {
    "text": "worst failures that i've seen actually come from missed heartbeats with latency",
    "start": "502400",
    "end": "507520"
  },
  {
    "text": "because etcd failed to actually uh get into a proper state because of these",
    "start": "507520",
    "end": "514800"
  },
  {
    "text": "sorts of latency issues and so trying to scale that out to a global environment is incredibly difficult",
    "start": "514800",
    "end": "521839"
  },
  {
    "text": "as compared to trying to run multiple clusters and trying to get data between those",
    "start": "521839",
    "end": "528480"
  },
  {
    "text": "so strong consensus works best in very low latency environments we also have a a major bottleneck in",
    "start": "528480",
    "end": "535360"
  },
  {
    "text": "this single writer environment again large scale and having developed out kudo and other operator based systems",
    "start": "535360",
    "end": "542640"
  },
  {
    "text": "we're seeing with custom resources much more use of the kubernetes control plane as a general",
    "start": "542640",
    "end": "548800"
  },
  {
    "text": "purpose store and so scaling ncd in this environment becomes very interesting because if you start to",
    "start": "548800",
    "end": "554720"
  },
  {
    "text": "have uh more rights than your max throughput you start to back up you start to have",
    "start": "554720",
    "end": "560080"
  },
  {
    "text": "issues you start to have failures in ncd because it can't scale multi or this multi-reader and single",
    "start": "560080",
    "end": "566800"
  },
  {
    "text": "writer environment and it presents a lot of challenges for very high reason with the answer being well use a",
    "start": "566800",
    "end": "574160"
  },
  {
    "text": "secondary store for other data or spin up more kubernetes clusters and deal with more federation",
    "start": "574160",
    "end": "582160"
  },
  {
    "text": "so okay as we're starting to build out as we're starting to think about these next systems well event sourcing comes into",
    "start": "582160",
    "end": "588959"
  },
  {
    "text": "play right and event sourcing is is this idea where we have a centralized bus of events",
    "start": "588959",
    "end": "596480"
  },
  {
    "text": "and uh you have multiple readers coming off of this that that consume those events",
    "start": "596480",
    "end": "601920"
  },
  {
    "text": "and perform either different actions or uh or it has a decoupled sense from the",
    "start": "601920",
    "end": "607519"
  },
  {
    "text": "whole where you interact with the entire system through events well the issue ultimately drives into the",
    "start": "607519",
    "end": "614640"
  },
  {
    "text": "same core problem and the the problems they don't go away",
    "start": "614640",
    "end": "620640"
  },
  {
    "text": "because the model's been switched in order for this to be robust robust events really require strongly",
    "start": "620640",
    "end": "627120"
  },
  {
    "text": "guaranteed ordering and so clients receiving events at different times really can cause buffering and",
    "start": "627120",
    "end": "633200"
  },
  {
    "text": "bottlenecks because you need to be able to piece that together in order to get to a consistent approach or a consensus",
    "start": "633200",
    "end": "639680"
  },
  {
    "text": "at the end of the day about about date your data and so attempting a multi-writer system with events really",
    "start": "639680",
    "end": "645760"
  },
  {
    "text": "forces questions about consensus and getting those values back at the end",
    "start": "645760",
    "end": "651279"
  },
  {
    "start": "650000",
    "end": "770000"
  },
  {
    "text": "so we're really looking at a new set of needs here we're looking at what's called strong eventual consistency now",
    "start": "651279",
    "end": "657920"
  },
  {
    "text": "what is that we've uh if you've heard of the term eventual consistent or if you haven't eventual consistency is a",
    "start": "657920",
    "end": "664560"
  },
  {
    "text": "liveness guarantee where eventual consistency means that",
    "start": "664560",
    "end": "669680"
  },
  {
    "text": "eventually all replicas will have the same information but can return any result in the",
    "start": "669680",
    "end": "676240"
  },
  {
    "text": "meantime depending on what the state of the system is in and and so there's no guarantees of safety",
    "start": "676240",
    "end": "683279"
  },
  {
    "text": "with with with that because even if it's received the information an eventually",
    "start": "683279",
    "end": "688560"
  },
  {
    "text": "consistent system as it's been defined so far requires every single node in order to",
    "start": "688560",
    "end": "694480"
  },
  {
    "text": "report the new value even if it's aware of that new value it'll still may report the old one and this really",
    "start": "694480",
    "end": "701120"
  },
  {
    "text": "gets them down into database semantics this is supposed opposed to strong eventual consistency and if you're",
    "start": "701120",
    "end": "707279"
  },
  {
    "text": "familiar strong consistency that means that that when a right's accepted",
    "start": "707279",
    "end": "712880"
  },
  {
    "text": "the value is the same everywhere now strong strong eventual consistency sounds like an oxymoron but what strong",
    "start": "712880",
    "end": "718560"
  },
  {
    "text": "eventual consistency does and we'll talk about this more as we get into see like into what crdts are and what how they operate",
    "start": "718560",
    "end": "726639"
  },
  {
    "text": "strong eventual consistency adds the safety guarantee on top that is to say every node that's",
    "start": "726639",
    "end": "732240"
  },
  {
    "text": "received the update is able to report the new event and so it's eventually",
    "start": "732240",
    "end": "737519"
  },
  {
    "text": "consistent but it's also correct with the information that it currently has and we'll see some interesting use cases",
    "start": "737519",
    "end": "743760"
  },
  {
    "text": "for that so data is converging to the same value across all replicas but in the meantime",
    "start": "743760",
    "end": "749519"
  },
  {
    "text": "every replica that has the data is strongly consistent",
    "start": "749519",
    "end": "756160"
  },
  {
    "text": "and so connectivity is not guaranteed low latency is not guaranteed and ultimately ordering here is not",
    "start": "756160",
    "end": "761760"
  },
  {
    "text": "important we'll talk a little bit a little bit about that a little bit more so",
    "start": "761760",
    "end": "767839"
  },
  {
    "text": "let's look at that some some use cases for these needs right and a big one is globally distributed databases now we",
    "start": "767839",
    "end": "774560"
  },
  {
    "start": "770000",
    "end": "877000"
  },
  {
    "text": "have this in some forms now we have uh either sharded databases with a shard",
    "start": "774560",
    "end": "780079"
  },
  {
    "text": "key uh and that's that's a that's one form of scale or you ultimately have some sort of primary",
    "start": "780079",
    "end": "786560"
  },
  {
    "text": "region that's responsible for accepting rights and distributing reads out globally so",
    "start": "786560",
    "end": "792240"
  },
  {
    "text": "neither of these really fit the bill if you think about uh systems like cassandra things things",
    "start": "792240",
    "end": "797360"
  },
  {
    "text": "that that shard based on these shard keys you're really managing scale on a",
    "start": "797360",
    "end": "802560"
  },
  {
    "text": "different dimension than geographic you're managing scale on a dimension of",
    "start": "802560",
    "end": "808560"
  },
  {
    "text": "your data cardinality and so if you have all of your replicas of",
    "start": "808560",
    "end": "814480"
  },
  {
    "text": "of a certain shard go down now you have a partial outage for that type of data",
    "start": "814480",
    "end": "820320"
  },
  {
    "text": "but that doesn't say anything about your geographic distribution right it means nothing about having a multi-writer system",
    "start": "820320",
    "end": "827680"
  },
  {
    "text": "that is global scale it's really talking about multi writer systems at that chart or at that short key cardinality",
    "start": "827680",
    "end": "834880"
  },
  {
    "text": "so if we wanted to go out and build and there's a couple examples of this out there in the wild now",
    "start": "834880",
    "end": "840639"
  },
  {
    "text": "building a system that's multi-writer at the regional or cluster cluster level where these regional partitions don't",
    "start": "840639",
    "end": "846320"
  },
  {
    "text": "cause systemic failures and we're doing we're operating on a single",
    "start": "846320",
    "end": "851360"
  },
  {
    "text": "database when we're doing this and this is the difference between that and like between this sort of globally",
    "start": "851360",
    "end": "856480"
  },
  {
    "text": "distributed database like a spanner and other types of databases that that choose other strategies for this",
    "start": "856480",
    "end": "863199"
  },
  {
    "text": "and our goal here is to achieve monotonous tonicity and so what that means is is the ordering of events is",
    "start": "863199",
    "end": "868800"
  },
  {
    "text": "not important we all eventually converge on the same document no matter the order of events that come in",
    "start": "868800",
    "end": "876399"
  },
  {
    "start": "877000",
    "end": "959000"
  },
  {
    "text": "another use case here is going to be building out local first applications",
    "start": "877440",
    "end": "882880"
  },
  {
    "text": "and so really what a local first application is is the extension of this user data out to the client right",
    "start": "882880",
    "end": "889120"
  },
  {
    "text": "they're able to uh operate completely offline and then synchronize data back with your cloud when you're offline",
    "start": "889120",
    "end": "895440"
  },
  {
    "text": "and so building out this sort of at this idea of edge native enables cloud native use cases in very adverse or low bandwidth",
    "start": "895440",
    "end": "902320"
  },
  {
    "text": "environments where you can come back offline online and merge your data with the whole with",
    "start": "902320",
    "end": "907760"
  },
  {
    "text": "guarantees that it that that your system's always going to progress you're not going to deal with rollbacks",
    "start": "907760",
    "end": "914399"
  },
  {
    "text": "and just to move back actually one very important thing about this order independence is that",
    "start": "914399",
    "end": "920959"
  },
  {
    "text": "prior systems in this class forced you to to deal with and stop the system if there were conflicts right and so one of",
    "start": "920959",
    "end": "928240"
  },
  {
    "text": "the goals we want to achieve here is that this is a rollback free system that's not to say that there won't be",
    "start": "928240",
    "end": "934639"
  },
  {
    "text": "conflicts but everything converges to the same document without user intervention",
    "start": "934639",
    "end": "941199"
  },
  {
    "text": "no matter what and so we can we can make this guarantee without stopping the system the system is always progressing",
    "start": "941199",
    "end": "947759"
  },
  {
    "text": "without a rollback and so the the last use case i will talk",
    "start": "947759",
    "end": "952800"
  },
  {
    "text": "about here is is building out collaborative applications collaborative collaboration multiplayer is becoming a",
    "start": "952800",
    "end": "958000"
  },
  {
    "text": "feature of many applications and arguably a competitive advantage and so you're seeing out a a large swath of",
    "start": "958000",
    "end": "965759"
  },
  {
    "start": "959000",
    "end": "1042000"
  },
  {
    "text": "applications that are multiplayer first if you've ever used google docs i'm sure most if not all of us do",
    "start": "965759",
    "end": "971279"
  },
  {
    "text": "uh being able to collaborate in real time with others is a feature of of work in",
    "start": "971279",
    "end": "977680"
  },
  {
    "text": "our current uh current age and and a feature of most of these applications and so applications built",
    "start": "977680",
    "end": "984399"
  },
  {
    "text": "for a cloud native environment will be able to handle collaboration or we'll need to handle collaboration and this is on top of distributing local",
    "start": "984399",
    "end": "991680"
  },
  {
    "text": "first right if this is all being forwarded to a central node some of your users are going to have high latency",
    "start": "991680",
    "end": "996959"
  },
  {
    "text": "others low latency and you haven't really solved the problem and so it almost demands a multi-writer",
    "start": "996959",
    "end": "1003519"
  },
  {
    "text": "application in order to be able to to achieve",
    "start": "1003519",
    "end": "1009759"
  },
  {
    "text": "this strong consistency between every single collaborator get to consistent to the same value and",
    "start": "1009759",
    "end": "1016399"
  },
  {
    "text": "enable all collaborators to be writing at the same time as opposed to doing something like subversion where we lock",
    "start": "1016399",
    "end": "1021839"
  },
  {
    "text": "the documents and makes their rights and you know that's not how these these document based systems are working right",
    "start": "1021839",
    "end": "1028240"
  },
  {
    "text": "and very importantly machines need to be able to collaborate not just humans and there's a lot of use cases that are",
    "start": "1028240",
    "end": "1034000"
  },
  {
    "text": "enabled once these machines are able to collaborate on on values rather than",
    "start": "1034000",
    "end": "1039520"
  },
  {
    "text": "falling back to more traditional uh operations so we're really talking about bringing",
    "start": "1039520",
    "end": "1045760"
  },
  {
    "text": "cloud8 to the edge here right and so uh we need this all to be observable we need to be traceable we need to be",
    "start": "1045760",
    "end": "1052559"
  },
  {
    "text": "operable and cloud data is great for the cloud but new solutions are needed for what we're kind of referring to is edge",
    "start": "1052559",
    "end": "1058720"
  },
  {
    "text": "native environments and what's nice is that there are solutions to these problems so with that i'll turn",
    "start": "1058720",
    "end": "1064720"
  },
  {
    "text": "it over to my colleague james moore who will kind of dive into what crdts are",
    "start": "1064720",
    "end": "1070240"
  },
  {
    "text": "how they how they work and hopefully gives everyone some ideas of how they can use them in their projects",
    "start": "1070240",
    "end": "1078320"
  },
  {
    "text": "thanks jared i'm going to go ahead and share my screen here",
    "start": "1079200",
    "end": "1084000"
  },
  {
    "start": "1090000",
    "end": "1140000"
  },
  {
    "text": "all right so as jared said over the next few minutes i'm going to provide an introduction to crdts so",
    "start": "1090720",
    "end": "1097679"
  },
  {
    "text": "what exactly are crdts well they're a collection of data types",
    "start": "1097679",
    "end": "1103760"
  },
  {
    "text": "similar to the data types you're likely familiar with so for example there are arrays there are maps there are text types",
    "start": "1103760",
    "end": "1110880"
  },
  {
    "text": "there are counters there are registers which allow you to wrap other types sets and among other options as well",
    "start": "1110880",
    "end": "1118960"
  },
  {
    "text": "now and these data types work very similar to their conventional counterparts but there's something",
    "start": "1118960",
    "end": "1124240"
  },
  {
    "text": "special and interesting about crdts which is the fact that they're effectively shared data types",
    "start": "1124240",
    "end": "1131440"
  },
  {
    "text": "now we'll talk more about this concept of shared data types in a moment but first i want to address how you'd use",
    "start": "1131440",
    "end": "1137039"
  },
  {
    "text": "crdts in an application at a high level using crdts isn't all",
    "start": "1137039",
    "end": "1142559"
  },
  {
    "start": "1140000",
    "end": "1333000"
  },
  {
    "text": "that different from other data types that you're likely familiar with so for example if you're going to write",
    "start": "1142559",
    "end": "1148080"
  },
  {
    "text": "a to-do app your application's data model might look something like this where you're storing to-do's in an array",
    "start": "1148080",
    "end": "1154559"
  },
  {
    "text": "and then you'd add to do items like this where each to-do item is a record with",
    "start": "1154559",
    "end": "1161200"
  },
  {
    "text": "meaningful properties now composing conventional data types like this works well when",
    "start": "1161200",
    "end": "1167280"
  },
  {
    "text": "you're writing an application meant for a single person but what if we want to make this to-do app a collaborative application",
    "start": "1167280",
    "end": "1174960"
  },
  {
    "text": "where multiple people can add edit and remove to do's okay some of you might be thinking well",
    "start": "1174960",
    "end": "1181520"
  },
  {
    "text": "writing a multi-user app like this isn't all that hard right well when i say i want this to do app to",
    "start": "1181520",
    "end": "1187840"
  },
  {
    "text": "be collaborative i don't just mean it's a multi-user application i mean something different something deeper",
    "start": "1187840",
    "end": "1194640"
  },
  {
    "text": "let me explain what i mean with a couple of examples so imagine the person on the left side",
    "start": "1194640",
    "end": "1200240"
  },
  {
    "text": "of the screen decides to edit the by milk task to make it more descriptive and then at",
    "start": "1200240",
    "end": "1206559"
  },
  {
    "text": "the same time the person on the right side makes a different edit to the same milk task",
    "start": "1206559",
    "end": "1213840"
  },
  {
    "text": "so what should happen in this scenario well in a truly collaborative application both of these concurrent",
    "start": "1213840",
    "end": "1220000"
  },
  {
    "text": "edits would be merged together like this now what you just saw here in this",
    "start": "1220000",
    "end": "1226000"
  },
  {
    "text": "simple example should give you a sense of what i mean by collaboration in a deeper way not just a multi-user",
    "start": "1226000",
    "end": "1232840"
  },
  {
    "text": "way or here's a similar but slightly different scenario what if both of these",
    "start": "1232840",
    "end": "1238000"
  },
  {
    "text": "people are offline and the person on the left decides to delete the modal one task",
    "start": "1238000",
    "end": "1244960"
  },
  {
    "text": "and the person on the right decides to add a new to-do item",
    "start": "1244960",
    "end": "1250158"
  },
  {
    "text": "and again remember both of these edits are happening offline so first of all writing applications",
    "start": "1250480",
    "end": "1256320"
  },
  {
    "text": "that work both offline and online is not an easy task in and of itself but crdts",
    "start": "1256320",
    "end": "1262159"
  },
  {
    "text": "make it easier and secondly what should happen in this app when both of these users get back",
    "start": "1262159",
    "end": "1267280"
  },
  {
    "text": "online well ideally the model on task should be deleted on the right",
    "start": "1267280",
    "end": "1273679"
  },
  {
    "text": "and the new clean the garage task should get replicated to the left",
    "start": "1273679",
    "end": "1279120"
  },
  {
    "text": "okay so to achieve this kind of collaboration the kind of collaboration i just alluded to",
    "start": "1279440",
    "end": "1284720"
  },
  {
    "text": "this conventional data model isn't going to help us however with a few small changes to the data types in",
    "start": "1284720",
    "end": "1291440"
  },
  {
    "text": "our model we can make this app more collaborative so what changes to this conventional",
    "start": "1291440",
    "end": "1297840"
  },
  {
    "text": "data model would we need to make well we could selectively use crdts so",
    "start": "1297840",
    "end": "1303919"
  },
  {
    "text": "for example instead of storing to-do's in a normal array you could use a crdt",
    "start": "1303919",
    "end": "1309679"
  },
  {
    "text": "array and then instead of using strings for the title we could use a crdt text data",
    "start": "1309679",
    "end": "1316840"
  },
  {
    "text": "type now using these new data types isn't all that different than using the conventional equivalents",
    "start": "1316840",
    "end": "1323520"
  },
  {
    "text": "in fact the apis from most crdt libraries are very similar to their conventional counterparts",
    "start": "1323520",
    "end": "1329039"
  },
  {
    "text": "but you're probably wondering what's the benefit of using these crdts",
    "start": "1329039",
    "end": "1334960"
  },
  {
    "start": "1333000",
    "end": "1423000"
  },
  {
    "text": "well this is where i want to turn back to the description i used earlier for crdts when i called them shared data",
    "start": "1334960",
    "end": "1340559"
  },
  {
    "text": "types but what exactly do i mean by shared data types well at a high level it means",
    "start": "1340559",
    "end": "1346320"
  },
  {
    "text": "you can use these data types on separate computers and you can make local changes to the",
    "start": "1346320",
    "end": "1352559"
  },
  {
    "text": "data without any locks and the changes that are made can be shared or replicated to the other computer and",
    "start": "1352559",
    "end": "1359120"
  },
  {
    "text": "merged without conflict okay i want to highlight a few",
    "start": "1359120",
    "end": "1364159"
  },
  {
    "text": "subtleties in what i just described first of all the data replication can happen in near real time as long as the",
    "start": "1364159",
    "end": "1370960"
  },
  {
    "text": "two computers are connected or the replication can happen later in an asynchronous fashion",
    "start": "1370960",
    "end": "1377600"
  },
  {
    "text": "in other words these two computers could be completely disconnected and the application can still work in a local",
    "start": "1377600",
    "end": "1383840"
  },
  {
    "text": "first or offline mode and then at a later point in time maybe minutes or hours or even days later the changes can",
    "start": "1383840",
    "end": "1390400"
  },
  {
    "text": "be replicated and merged between these two computers effectively synchronizing their state",
    "start": "1390400",
    "end": "1396720"
  },
  {
    "text": "now this example only shows two computers that are synchronizing their state but there could be many other",
    "start": "1396720",
    "end": "1401840"
  },
  {
    "text": "computers involved and i want you to notice that i never mentioned anything about servers",
    "start": "1401840",
    "end": "1407919"
  },
  {
    "text": "i mean you could and likely would use servers in many scenarios but it's not a requirement of crdts",
    "start": "1407919",
    "end": "1414640"
  },
  {
    "text": "in fact i think it's more helpful to think of crdts as a peer-to-peer technology but you can and should use",
    "start": "1414640",
    "end": "1420720"
  },
  {
    "text": "servers where it makes sense okay if you're new to crdt's you're",
    "start": "1420720",
    "end": "1426720"
  },
  {
    "start": "1423000",
    "end": "1455000"
  },
  {
    "text": "probably wondering well how do they work i mean what's the secret sauce well",
    "start": "1426720",
    "end": "1433039"
  },
  {
    "text": "you have to create these data structures in a special way following certain rules which we'll talk more about in a moment",
    "start": "1433039",
    "end": "1439679"
  },
  {
    "text": "and it's also important to note that crdt store your application data but they also store metadata",
    "start": "1439679",
    "end": "1447200"
  },
  {
    "text": "okay so what's with this metadata hold that thought because i'm going to look at this metadata more in just a",
    "start": "1447200",
    "end": "1452880"
  },
  {
    "text": "moment here now to fully understand how crdts work you need to understand a bit of order",
    "start": "1452880",
    "end": "1459360"
  },
  {
    "start": "1455000",
    "end": "1534000"
  },
  {
    "text": "theory and in particular you need to understand join semi-lattices so are you ready to do a deep dive into",
    "start": "1459360",
    "end": "1466159"
  },
  {
    "text": "some order theory okay well before you stop the video i'm just kidding we're not going to go into",
    "start": "1466159",
    "end": "1471200"
  },
  {
    "text": "a deep dive into order theory as fun as that might sound we're just not going to do that but i mention order theory for a",
    "start": "1471200",
    "end": "1477600"
  },
  {
    "text": "reason the reason i mention this is because it's important to understand that there are mathematical proofs behind crdts and",
    "start": "1477600",
    "end": "1484320"
  },
  {
    "text": "we should draw confidence in the technology because of its underlying mathematical principles",
    "start": "1484320",
    "end": "1490480"
  },
  {
    "text": "but in practice most developers don't need to understand the math behind crdts",
    "start": "1490880",
    "end": "1496000"
  },
  {
    "text": "you just need to understand how to interact with crdts in other words you need to understand the apis",
    "start": "1496000",
    "end": "1503440"
  },
  {
    "text": "now as i said a moment ago most developers don't need to know much about order theory unless you're a developer",
    "start": "1504480",
    "end": "1510480"
  },
  {
    "text": "who's writing crdt libraries in which case you're going to have to know the order theory but most of us",
    "start": "1510480",
    "end": "1516480"
  },
  {
    "text": "developers don't need this level of understanding okay so you don't need to know all the",
    "start": "1516480",
    "end": "1522080"
  },
  {
    "text": "mathematical proofs behind crdts but if you're new to crdts you're probably how they work and i'd like to",
    "start": "1522080",
    "end": "1528960"
  },
  {
    "text": "give you a sense of how they work by looking at one of the simpler crdt data types",
    "start": "1528960",
    "end": "1534720"
  },
  {
    "start": "1534000",
    "end": "1969000"
  },
  {
    "text": "a counter type",
    "start": "1534720",
    "end": "1537919"
  },
  {
    "text": "so we need to count something an application that counts something so for example maybe our application is",
    "start": "1540840",
    "end": "1547039"
  },
  {
    "text": "running on some sort of scanners that collaboratively count things that pass them by on a conveyor belt",
    "start": "1547039",
    "end": "1553360"
  },
  {
    "text": "or maybe the application is meant to count people entering a venue on smartphones",
    "start": "1553360",
    "end": "1559679"
  },
  {
    "text": "at all the entrances and it's possible that these smartphones need to work both offline or online",
    "start": "1559679",
    "end": "1566559"
  },
  {
    "text": "because of the operating location now there's a subtlety in these two",
    "start": "1566559",
    "end": "1571919"
  },
  {
    "text": "examples that i want to draw your attention to when we think about collaborative applications i suspect that most of us",
    "start": "1571919",
    "end": "1578720"
  },
  {
    "text": "are thinking about people collaborating on a common task but people aren't the only things that can collaborate",
    "start": "1578720",
    "end": "1585440"
  },
  {
    "text": "for example we see on the left side of the screen it represents collaboration between machines and the example on the right",
    "start": "1585440",
    "end": "1591840"
  },
  {
    "text": "side of the screen represents collaboration between people i think a better general term to use",
    "start": "1591840",
    "end": "1597520"
  },
  {
    "text": "instead of machines on the left side and people on the right side would be actors in other words actors can collaborate on",
    "start": "1597520",
    "end": "1604080"
  },
  {
    "text": "a common task and actors could be machines or people or both",
    "start": "1604080",
    "end": "1611080"
  },
  {
    "text": "and the reason the reason i'm making this point is because we live in a world where smart computing devices are",
    "start": "1612559",
    "end": "1617760"
  },
  {
    "text": "proliferating they're all around us and i think we need new programming models that better support the reality of the",
    "start": "1617760",
    "end": "1623840"
  },
  {
    "text": "hardware situation and the actor model is probably the best programming model for dealing with the proliferation of",
    "start": "1623840",
    "end": "1630080"
  },
  {
    "text": "hardware devices and crdt keys fit nicely into the actor model",
    "start": "1630080",
    "end": "1636399"
  },
  {
    "text": "okay let's look at implementing this collaborative counter now first i want to see if we can implement this",
    "start": "1636880",
    "end": "1643200"
  },
  {
    "text": "collaborative counter by using a primitive type an integer in the applications data model",
    "start": "1643200",
    "end": "1649200"
  },
  {
    "text": "but here's a spoiler alert for you integers won't work for us and you'll see why in just a moment here",
    "start": "1649200",
    "end": "1655760"
  },
  {
    "text": "so let's say this device on the left counts the first concert goer which increments its local count from 0 to 1.",
    "start": "1655760",
    "end": "1664320"
  },
  {
    "text": "then we could somehow replicate this 1 on the left to the other devices on the right",
    "start": "1664320",
    "end": "1670880"
  },
  {
    "text": "and when we do that excuse me things seem to be working so far",
    "start": "1670880",
    "end": "1678320"
  },
  {
    "text": "next the middle device increments the count from one to two but then at the same moment in time the device on the",
    "start": "1679679",
    "end": "1685200"
  },
  {
    "text": "right increments its count from one to two as well so to be clear what i'm saying is both",
    "start": "1685200",
    "end": "1690640"
  },
  {
    "text": "the devices on the right side concurrently updated their local counts next the updated count is replicated",
    "start": "1690640",
    "end": "1697360"
  },
  {
    "text": "from the middle device to the left device and the one is changed to two then the update count is replicated from the",
    "start": "1697360",
    "end": "1703840"
  },
  {
    "text": "right device to the left device and the two is replaced by two okay that's not",
    "start": "1703840",
    "end": "1710000"
  },
  {
    "text": "right i mean we know the total count should be three at this point right",
    "start": "1710000",
    "end": "1715279"
  },
  {
    "text": "okay this example is just one reason why primitive types in a collaborative application like this just won't work",
    "start": "1715279",
    "end": "1724278"
  },
  {
    "text": "however if we swap out our integer based counter with a crdt counter",
    "start": "1726399",
    "end": "1732399"
  },
  {
    "text": "we won't experience the problem you just saw and to increment the counters all you need to do is call increment",
    "start": "1732399",
    "end": "1740320"
  },
  {
    "text": "and basically this is all you need to know as a developer to interact with the crt",
    "start": "1741039",
    "end": "1747039"
  },
  {
    "text": "counter and again by swapping out the integer for a c or dt counter we can have a",
    "start": "1747039",
    "end": "1752559"
  },
  {
    "text": "collaboratively maintained count that works even if the device is offline",
    "start": "1752559",
    "end": "1758000"
  },
  {
    "text": "but even though you don't technically need to know how a crdt counter works you're probably still curious how they",
    "start": "1758000",
    "end": "1764159"
  },
  {
    "text": "work so let's look at how this crt counter could be implemented",
    "start": "1764159",
    "end": "1769679"
  },
  {
    "text": "so as a learning exercise we'll talk through the implementation of a crdd counter",
    "start": "1770240",
    "end": "1776000"
  },
  {
    "text": "now a counter obviously represents a number but that doesn't mean the underlying data model has to be a number",
    "start": "1776000",
    "end": "1783600"
  },
  {
    "text": "here's what i mean what if the model for our counter was composed of two things a unique id for",
    "start": "1784159",
    "end": "1789600"
  },
  {
    "text": "each replica and a map then when the count is incremented",
    "start": "1789600",
    "end": "1796480"
  },
  {
    "text": "a key value pair is added to our map where the key is the unique replica id",
    "start": "1796480",
    "end": "1801919"
  },
  {
    "text": "and the value is the incremented count for this replica now to get the actual count value we",
    "start": "1801919",
    "end": "1808480"
  },
  {
    "text": "just need to sum the values in the count map which at this point is just one",
    "start": "1808480",
    "end": "1814640"
  },
  {
    "text": "then to replicate the update we just send the entire map to the other nodes and merge the map in",
    "start": "1814720",
    "end": "1820640"
  },
  {
    "text": "a special way and at this point we've achieved consistency across the nodes in other words every node or smartphone",
    "start": "1820640",
    "end": "1827600"
  },
  {
    "text": "in this case has the same count value next let's walk through the problematic",
    "start": "1827600",
    "end": "1834000"
  },
  {
    "text": "scenario we saw a moment ago with concurrent updates",
    "start": "1834000",
    "end": "1838880"
  },
  {
    "text": "so both of these counters on the right get incremented at about the same time",
    "start": "1840240",
    "end": "1845440"
  },
  {
    "text": "then each node adds a new key value pair to their count maps where the key is the unique replica id",
    "start": "1845440",
    "end": "1851440"
  },
  {
    "text": "and the value is the count for the corresponding replica so the first time increment is called the value will be 1.",
    "start": "1851440",
    "end": "1859679"
  },
  {
    "text": "then to calculate the current counter value we simply sum the maps values which totals two for now",
    "start": "1859679",
    "end": "1867840"
  },
  {
    "text": "next the updated values are sent to the other replicas",
    "start": "1867840",
    "end": "1872480"
  },
  {
    "text": "and merged into their local maps",
    "start": "1872960",
    "end": "1877158"
  },
  {
    "text": "and as you can see the count value for each now node is now consistent at 3.",
    "start": "1878960",
    "end": "1885760"
  },
  {
    "text": "now any subsequent increments will simply increment the appropriate partial count value in the map so incrementing",
    "start": "1885760",
    "end": "1893120"
  },
  {
    "text": "on this device we'll increment this key pair key value pair",
    "start": "1893120",
    "end": "1898399"
  },
  {
    "text": "and incrementing on this device we'll increment this key value pair and lastly incrementing on this device we'll",
    "start": "1898399",
    "end": "1905200"
  },
  {
    "text": "increment this key value pair okay there's a few more details on how",
    "start": "1905200",
    "end": "1910559"
  },
  {
    "text": "crt crdt counters work but hopefully this gives the small exercise will give you a sense of how",
    "start": "1910559",
    "end": "1916559"
  },
  {
    "text": "they're implemented you remember how a few minutes ago i mentioned that crdts contain your",
    "start": "1916559",
    "end": "1921600"
  },
  {
    "text": "application data and also metadata well now you see what i mean by metadata",
    "start": "1921600",
    "end": "1927440"
  },
  {
    "text": "the counter needs to store extra data in the form of the replica id and the map",
    "start": "1927440",
    "end": "1932880"
  },
  {
    "text": "and the value of the counter is derived from the metadata",
    "start": "1932880",
    "end": "1937840"
  },
  {
    "text": "but again i'll ask what's the point of the metadata i mean why is it needed",
    "start": "1938240",
    "end": "1944000"
  },
  {
    "text": "now you may intuitively know what the metadata is for but i want to get specific",
    "start": "1944000",
    "end": "1949840"
  },
  {
    "text": "the metadata is needed so that the data types have all the information they need so that changes can be replicated and",
    "start": "1950559",
    "end": "1957200"
  },
  {
    "text": "merged among the peers in a conflict-free way in summary the metadata is all about",
    "start": "1957200",
    "end": "1963840"
  },
  {
    "text": "allowing the updates to be replicated and merged in a conflict-free way",
    "start": "1963840",
    "end": "1969679"
  },
  {
    "start": "1969000",
    "end": "2019000"
  },
  {
    "text": "excuse me now a consequence of having to store this metadata is the fact that crdts",
    "start": "1972559",
    "end": "1978159"
  },
  {
    "text": "require more memory than their conventional counterparts so there are tradeoffs when using crdts",
    "start": "1978159",
    "end": "1984159"
  },
  {
    "text": "and additional memory usage is one example of those trade-offs and keep in mind some data types use",
    "start": "1984159",
    "end": "1989919"
  },
  {
    "text": "more metadata than others another trade-off in the is the consistency model with crdts in",
    "start": "1989919",
    "end": "1996159"
  },
  {
    "text": "particular there's a period of time when replicas can have different values for example when we incremented one of the",
    "start": "1996159",
    "end": "2001840"
  },
  {
    "text": "counters a moment ago the other counters had different values until the updates arrived at the other nodes",
    "start": "2001840",
    "end": "2009039"
  },
  {
    "text": "so crtts are high offer high availability and strong eventual consistency the key word there being",
    "start": "2009039",
    "end": "2015840"
  },
  {
    "text": "eventual consistency now one of the next questions you",
    "start": "2015840",
    "end": "2021440"
  },
  {
    "start": "2019000",
    "end": "2051000"
  },
  {
    "text": "probably have is how do the peers in the crdt based system communicate in other words what",
    "start": "2021440",
    "end": "2026960"
  },
  {
    "text": "sort of networking protocols are used well crdts are somewhat network agnostic",
    "start": "2026960",
    "end": "2034480"
  },
  {
    "text": "meaning you have many choices and you get to decide how to connect the peers so you could use websockets and pub sub",
    "start": "2034480",
    "end": "2041840"
  },
  {
    "text": "to propagate updates you could use webrtc or you could use some sort of mesh networking or some",
    "start": "2041840",
    "end": "2048000"
  },
  {
    "text": "other gossip protocol the next question you may have is",
    "start": "2048000",
    "end": "2053919"
  },
  {
    "start": "2051000",
    "end": "2144000"
  },
  {
    "text": "how do you ensure updates get propagated to the peers as appropriate well there's some interesting",
    "start": "2053919",
    "end": "2060638"
  },
  {
    "text": "inherent properties of crvts that make updating peers a bit easier and more forgiving let me explain",
    "start": "2060639",
    "end": "2068158"
  },
  {
    "text": "there are three important update related attributes of all crdts that go back to the order",
    "start": "2068159",
    "end": "2074320"
  },
  {
    "text": "theory and in particular joints in my lattices which crdts are based on",
    "start": "2074320",
    "end": "2080639"
  },
  {
    "text": "first updates are idempotent meaning an update from one peer to another can be applied multiple",
    "start": "2086079",
    "end": "2092320"
  },
  {
    "text": "times and the result is the same effect let me demonstrate what i mean by idempotent",
    "start": "2092320",
    "end": "2099440"
  },
  {
    "text": "so let's say one of these counters gets incremented updating its local account to one",
    "start": "2101680",
    "end": "2108400"
  },
  {
    "text": "next the updates are sent to the other devices now let's say the left device",
    "start": "2108720",
    "end": "2115119"
  },
  {
    "text": "maybe it got temporarily disconnected and it's not sure if the other devices received its latest update",
    "start": "2115119",
    "end": "2121359"
  },
  {
    "text": "so the device on the left goes ahead and sends an update again and the same update can get sent again",
    "start": "2121359",
    "end": "2127440"
  },
  {
    "text": "and again multiple times and the result of merging the update multiple times gives you the same result",
    "start": "2127440",
    "end": "2133599"
  },
  {
    "text": "it's an idempotent operation the next important attribute of all crdts is that they're commutative",
    "start": "2133599",
    "end": "2143160"
  },
  {
    "start": "2144000",
    "end": "2168000"
  },
  {
    "text": "commutativity means changing the order of operands doesn't change the result for example",
    "start": "2144640",
    "end": "2150720"
  },
  {
    "text": "commutative means operating on x and y gives you the same result as operating on y and then",
    "start": "2150720",
    "end": "2156839"
  },
  {
    "text": "x in other words the ordering doesn't matter the third important attribute of all",
    "start": "2156839",
    "end": "2162880"
  },
  {
    "text": "crdts is that they are associative",
    "start": "2162880",
    "end": "2167039"
  },
  {
    "start": "2168000",
    "end": "2215000"
  },
  {
    "text": "associativity means rearranging the parentheses in an expression will not change the result so the result of this",
    "start": "2168400",
    "end": "2174880"
  },
  {
    "text": "set of operations is the same as this set of operations in other words the order doesn't matter",
    "start": "2174880",
    "end": "2182160"
  },
  {
    "text": "okay so what do these last two attributes give us well if you think of x y and z as",
    "start": "2182160",
    "end": "2189359"
  },
  {
    "text": "replica updates and you think of these operators as data merges you realize that updates from one",
    "start": "2189359",
    "end": "2196240"
  },
  {
    "text": "pair to another don't have to be propagated in any particular order as long as the",
    "start": "2196240",
    "end": "2202160"
  },
  {
    "text": "peer eventually receives all the updates in any particular sequence the peers state will become consistent with the",
    "start": "2202160",
    "end": "2208640"
  },
  {
    "text": "other peers",
    "start": "2208640",
    "end": "2211880"
  },
  {
    "text": "okay given these properties of crdts you can see that propagating updates between peers",
    "start": "2215200",
    "end": "2221200"
  },
  {
    "text": "is easier and more forgiving than you might imagine because updates can be passed to peers multiple times without",
    "start": "2221200",
    "end": "2227920"
  },
  {
    "text": "any adverse consequences and the updates can be passed in any particular sequence",
    "start": "2227920",
    "end": "2232960"
  },
  {
    "text": "and eventually each peer will converge on the same value so where do you go from here if you want",
    "start": "2232960",
    "end": "2239680"
  },
  {
    "start": "2237000",
    "end": "2272000"
  },
  {
    "text": "to look at crdts and try them out well crtc's are somewhat new so you're",
    "start": "2239680",
    "end": "2244880"
  },
  {
    "text": "not going to find lots of libraries yet but there are is a lot of work happening in this space including the work we're doing at",
    "start": "2244880",
    "end": "2251200"
  },
  {
    "text": "mycelium the best crdt libraries at this point are javascript libraries",
    "start": "2251200",
    "end": "2256800"
  },
  {
    "text": "you have ygs and you have auto merge both of which have been worked on for several years at this point",
    "start": "2256800",
    "end": "2262160"
  },
  {
    "text": "there's also a few up and coming libraries written in rust which are of particular interest to us",
    "start": "2262160",
    "end": "2268000"
  },
  {
    "text": "and some other languages as well so in summary with crdts you get shared",
    "start": "2268000",
    "end": "2275359"
  },
  {
    "start": "2272000",
    "end": "2572000"
  },
  {
    "text": "data types that allow you to build truly collaborative applications and it's a peer-to-peer technology where",
    "start": "2275359",
    "end": "2281760"
  },
  {
    "text": "you can optionally use servers if it makes sense and in a way you get the best of both",
    "start": "2281760",
    "end": "2287760"
  },
  {
    "text": "worlds in terms of online and offline capabilities",
    "start": "2287760",
    "end": "2292640"
  },
  {
    "text": "when online you get the near real-time capabilities but they also support offline",
    "start": "2292880",
    "end": "2298720"
  },
  {
    "text": "capabilities but can later synchronize the application state with other peers",
    "start": "2298720",
    "end": "2305200"
  },
  {
    "text": "and with that i'm going to turn it back over to jared",
    "start": "2305839",
    "end": "2310599"
  },
  {
    "text": "thanks james uh yeah so anyone who wants to come work on these is interested on",
    "start": "2312560",
    "end": "2318800"
  },
  {
    "text": "in in advancing state of the art uh at mycelio we're working on open sourcing a whole bunch of tooling related to this",
    "start": "2318800",
    "end": "2325599"
  },
  {
    "text": "and uh being able to embed it more into the cloud native and educated environments uh if you're interested in discussing",
    "start": "2325599",
    "end": "2332240"
  },
  {
    "text": "mycelil we are sorry crdts we have a discord where we talk about local first applications and",
    "start": "2332240",
    "end": "2338800"
  },
  {
    "text": "crdts all the time and uh we have more news for that so uh happy to take questions and",
    "start": "2338800",
    "end": "2345760"
  },
  {
    "text": "and have some discussion around crdts and we have a question already what are",
    "start": "2345760",
    "end": "2351760"
  },
  {
    "text": "the implications of long long-term long-duration disconnections on crdt's like for example days",
    "start": "2351760",
    "end": "2357280"
  },
  {
    "text": "that's a great question um so crdts are intended to solve the the",
    "start": "2357280",
    "end": "2364240"
  },
  {
    "text": "question of of merging towards the same document and",
    "start": "2364240",
    "end": "2369920"
  },
  {
    "text": "so at the end of the day once all all changes merge they are uh",
    "start": "2369920",
    "end": "2376320"
  },
  {
    "text": "every party has the exact same result and so this carries through actually before i",
    "start": "2376320",
    "end": "2382720"
  },
  {
    "text": "before i as i talk about carrying through uh this can be dependent on the type of",
    "start": "2382720",
    "end": "2388480"
  },
  {
    "text": "crdt you're using because we're really talking about embedding a lot of this",
    "start": "2388480",
    "end": "2393599"
  },
  {
    "text": "uh the conflict resolution in the type itself and so let's say that you have uh",
    "start": "2393599",
    "end": "2401119"
  },
  {
    "text": "two you you you have a key value you have a map or a dictionary where",
    "start": "2401119",
    "end": "2406640"
  },
  {
    "text": "it's a shared key map or you know key value store or dictionary or map and",
    "start": "2406640",
    "end": "2412319"
  },
  {
    "text": "uh one of those values is a string right you're just using a string you're not",
    "start": "2412319",
    "end": "2417440"
  },
  {
    "text": "using a text crdt for example and that gets changed now the rule might be a",
    "start": "2417440",
    "end": "2424000"
  },
  {
    "text": "last right wins register is what we would call that in that sense and so",
    "start": "2424000",
    "end": "2429040"
  },
  {
    "text": "uh given that that version can be part of that metadata",
    "start": "2429040",
    "end": "2434720"
  },
  {
    "text": "uh if if two parties edit the same key you edited it you know 15 days ago",
    "start": "2434720",
    "end": "2440640"
  },
  {
    "text": "it was offline until now there's a new value a last right wins register will merge that new value",
    "start": "2440640",
    "end": "2447599"
  },
  {
    "text": "that said there's other types of crdts that will try to better combine those",
    "start": "2447599",
    "end": "2452640"
  },
  {
    "text": "two pieces of information and this is where we're also looking at things like uh tools like webassembly at the point",
    "start": "2452640",
    "end": "2458720"
  },
  {
    "text": "of origination or at the point of conflict in order to to create more",
    "start": "2458720",
    "end": "2465119"
  },
  {
    "text": "embedded logical decisions around that sort of data now let's go to the example",
    "start": "2465119",
    "end": "2470319"
  },
  {
    "text": "of you're adding a key to a shared map uh let's say let's say you add that there's",
    "start": "2470319",
    "end": "2476079"
  },
  {
    "text": "no other conflicting party in the meantime and now that that that that's going to",
    "start": "2476079",
    "end": "2482079"
  },
  {
    "text": "uh you you hop back online no matter the order of those updates and",
    "start": "2482079",
    "end": "2487359"
  },
  {
    "text": "how old those are everyone's going to have that new value in the key with with typical",
    "start": "2487359",
    "end": "2492800"
  },
  {
    "text": "um you can call them observe remove like uh sets right you look at a map in this case as a set",
    "start": "2492800",
    "end": "2498720"
  },
  {
    "text": "and so in that case a long-term disconnection is not such a big issue",
    "start": "2498720",
    "end": "2505680"
  },
  {
    "text": "now one interesting property that you can have there is crdts can be made up over",
    "start": "2505680",
    "end": "2511680"
  },
  {
    "text": "those c or dt's as well and as james was showing and so let's say you add a key that's a list",
    "start": "2511680",
    "end": "2517839"
  },
  {
    "text": "right yeah i add a key that says to do's and i and that's a list of to do's and someone else has done that as well",
    "start": "2517839",
    "end": "2524640"
  },
  {
    "text": "and both both of us are just operating on on that list we can expect those lists to converge at the end of the day",
    "start": "2524640",
    "end": "2531359"
  },
  {
    "text": "now we're probably giving those random ids and so there may be cases depending on",
    "start": "2531359",
    "end": "2536480"
  },
  {
    "text": "how we detect duplication that that you may end up with duplicates and so",
    "start": "2536480",
    "end": "2542480"
  },
  {
    "text": "you kind of get into the the stories of your data problem of crdts",
    "start": "2542480",
    "end": "2548720"
  },
  {
    "text": "and one thing that i really like about this sort of data structure is it does force you to talk about well what does",
    "start": "2548720",
    "end": "2554880"
  },
  {
    "text": "my data actually mean what does it actually do in order to decide the guarantees that i want",
    "start": "2554880",
    "end": "2560560"
  },
  {
    "text": "um hopefully that answers your question",
    "start": "2560560",
    "end": "2565000"
  },
  {
    "start": "2572000",
    "end": "2630000"
  },
  {
    "text": "and but the most important thing there by the way just to wrap that up as well and awesome i'm glad they answered your question the most important part of that",
    "start": "2573680",
    "end": "2582720"
  },
  {
    "text": "is that no matter what the ordering is once all",
    "start": "2583280",
    "end": "2588960"
  },
  {
    "text": "of those are once all those events are received we've all converged on the same document and",
    "start": "2588960",
    "end": "2594400"
  },
  {
    "text": "so your long-term disconnection does not matter from the perspective of us having the same view of the world at the end",
    "start": "2594400",
    "end": "2601760"
  },
  {
    "text": "we've achieved consensus in a strong way by the end and you're not in in a uh",
    "start": "2601760",
    "end": "2608560"
  },
  {
    "text": "a state that you would be like for example with git where now you have just this giant merge conflict to work through right there there's that",
    "start": "2608560",
    "end": "2615920"
  },
  {
    "text": "possibility uh because it's mono mono isotonic has been",
    "start": "2615920",
    "end": "2622079"
  },
  {
    "text": "eliminated from from the from one of the problems that you need to solve right we're not talking about",
    "start": "2622079",
    "end": "2627440"
  },
  {
    "text": "whether it's correct at the end of the day but what do you think the largest barriers",
    "start": "2627440",
    "end": "2632480"
  },
  {
    "start": "2630000",
    "end": "2814000"
  },
  {
    "text": "for adoption for are for crts at this point um that's a fantastic question i'll give",
    "start": "2632480",
    "end": "2638160"
  },
  {
    "text": "some of my views and i'd love for james for you to give some of your views my biggest one i think is the",
    "start": "2638160",
    "end": "2643440"
  },
  {
    "text": "accessibility and proliferation of libraries uh out there that are usable and",
    "start": "2643440",
    "end": "2650720"
  },
  {
    "text": "and and just available for people to use and i think it gets caught up into these",
    "start": "2650720",
    "end": "2656800"
  },
  {
    "text": "peer-to-peer applications and building one sort of application whereas we are seeing examples of of",
    "start": "2656800",
    "end": "2662720"
  },
  {
    "text": "crdts being used for building global scale databases they're just either not open source or",
    "start": "2662720",
    "end": "2668480"
  },
  {
    "text": "not being heavily um used and promoted at this point there's also the issue of uh there is an",
    "start": "2668480",
    "end": "2675200"
  },
  {
    "text": "overhead to crdts and so latest research has dropped that right and right",
    "start": "2675200",
    "end": "2680240"
  },
  {
    "text": "amplification down quite a bit uh and and there's a lot of work going into performance as",
    "start": "2680240",
    "end": "2686000"
  },
  {
    "text": "well but these are larger than scalar values now there's some advantages of that to that as well because now we can",
    "start": "2686000",
    "end": "2692640"
  },
  {
    "text": "get to full causal views of our data we can go back in history we can kind of understand things",
    "start": "2692640",
    "end": "2699200"
  },
  {
    "text": "and so there's actually benefits to that amplification but a lot of our systems a lot of the ways",
    "start": "2699200",
    "end": "2704720"
  },
  {
    "text": "we look and design things is not built to really uh",
    "start": "2704720",
    "end": "2710400"
  },
  {
    "text": "support more like more than just these these these causal uh",
    "start": "2710400",
    "end": "2715920"
  },
  {
    "text": "like i'm sorry more than just these scout scholar values right or scalar values now",
    "start": "2715920",
    "end": "2721119"
  },
  {
    "text": "the only the other thing i would add to that is um not every application",
    "start": "2721119",
    "end": "2728079"
  },
  {
    "text": "is appropriate for crdts right and so scalar values are totally okay to use but",
    "start": "2728079",
    "end": "2734400"
  },
  {
    "text": "uh i think there's more applications out there where you might not want just a scalar value you might want the entire",
    "start": "2734400",
    "end": "2740720"
  },
  {
    "text": "history and of course once you get into that there's other um there's other interesting things around",
    "start": "2740720",
    "end": "2747440"
  },
  {
    "text": "transactions and compression and and and other hard problems to solve and so one things we're doing here mycelio",
    "start": "2747440",
    "end": "2753760"
  },
  {
    "text": "is is solving those hard problems and making these industrializable and usable um james what do you think on that",
    "start": "2753760",
    "end": "2760160"
  },
  {
    "text": "question yeah i think uh i agree with what you said there uh another barrier is it's",
    "start": "2760160",
    "end": "2766160"
  },
  {
    "text": "it's just a very big sort of paradigm shift so i think in a lot of ways and it's a very",
    "start": "2766160",
    "end": "2771440"
  },
  {
    "text": "very new technology not particularly mature but it's moving fast and so uh i think there are",
    "start": "2771440",
    "end": "2778160"
  },
  {
    "text": "uh we're gonna have to think differently about how to build apps in a lot of ways and i think that you know being a",
    "start": "2778160",
    "end": "2784079"
  },
  {
    "text": "somewhat new technology there's a lot of maturing and patterns that are sort of need to get figured out",
    "start": "2784079",
    "end": "2791359"
  },
  {
    "text": "within the community on on how to use these but and also you know really getting back to libraries is a big one",
    "start": "2791359",
    "end": "2797119"
  },
  {
    "text": "as well um but there is a surprising amount of effort in in various libraries",
    "start": "2797119",
    "end": "2802480"
  },
  {
    "text": "that that we see throughout the open source community so we're excited about that",
    "start": "2802480",
    "end": "2809119"
  },
  {
    "start": "2814000",
    "end": "2992000"
  },
  {
    "text": "uh yeah i'll just read this out um seems like real word apps using crtds need both crdts and traditional storage",
    "start": "2815520",
    "end": "2821440"
  },
  {
    "text": "mechanisms seems like it might be confusing to decide how which where patterns are applied yeah that's some of",
    "start": "2821440",
    "end": "2826560"
  },
  {
    "text": "the work that we're doing uh is to is to you if you think about",
    "start": "2826560",
    "end": "2833599"
  },
  {
    "text": "how we've learned patterns around designing very data intensive applications um",
    "start": "2833599",
    "end": "2840160"
  },
  {
    "text": "yes that's absolutely true right there's there's very few resources right now there's very little practice right now",
    "start": "2840160",
    "end": "2847280"
  },
  {
    "text": "and so enabling people to have more uh platforms to",
    "start": "2847280",
    "end": "2853599"
  },
  {
    "text": "to test that to to to determine a practice to kind of figure out that i i",
    "start": "2853599",
    "end": "2858640"
  },
  {
    "text": "think like in the first question i said the stories of data i think that rings really true right because if you look at",
    "start": "2858640",
    "end": "2865359"
  },
  {
    "text": "traditional storage mechanisms they're designed very generally they they they",
    "start": "2865359",
    "end": "2870400"
  },
  {
    "text": "accept a a scalar value of scalar value uh here's my here's postgres very",
    "start": "2870400",
    "end": "2876079"
  },
  {
    "text": "advanced database here's a j here's your even json data type right but you also have your varchar you have your your",
    "start": "2876079",
    "end": "2882480"
  },
  {
    "text": "number types you have you can fit values you can fit a lot of business use",
    "start": "2882480",
    "end": "2887599"
  },
  {
    "text": "cases into just a bunch of values and not not necessarily have to think about it",
    "start": "2887599",
    "end": "2892960"
  },
  {
    "text": "whereas i think looking at all the advantages of crdts",
    "start": "2892960",
    "end": "2898400"
  },
  {
    "text": "forces you into the conversation a lot sooner of of okay what are the properties of this and how i want to",
    "start": "2898400",
    "end": "2905680"
  },
  {
    "text": "choose based on that and then of course that does need to go to a backing store now there is some work on building out",
    "start": "2905680",
    "end": "2911839"
  },
  {
    "text": "um actual databases that are storing crdts much like an event sourcing database",
    "start": "2911839",
    "end": "2917920"
  },
  {
    "text": "would as well and uh you know we're we're talking to some of the people who are doing that because ultimately a crdt",
    "start": "2917920",
    "end": "2925520"
  },
  {
    "text": "under the hood when you're replicating it still it's just a very",
    "start": "2925520",
    "end": "2930800"
  },
  {
    "text": "uh opinionated shaped event and so you could go store that create a materialized view on it but of course",
    "start": "2930800",
    "end": "2936640"
  },
  {
    "text": "it's that is a lot more specialized than uh say just putting something into redis",
    "start": "2936640",
    "end": "2941920"
  },
  {
    "text": "for example right where you just care care about the value and nothing else and so",
    "start": "2941920",
    "end": "2947760"
  },
  {
    "text": "yeah i think that's absolutely true uh on that confusion and",
    "start": "2947760",
    "end": "2953520"
  },
  {
    "text": "sure and still still be very oriented around use cases now that said i think i",
    "start": "2953520",
    "end": "2959040"
  },
  {
    "text": "think oriented data towards your use case is a lot more powerful than just having random data that is is happens to",
    "start": "2959040",
    "end": "2966880"
  },
  {
    "text": "just be cardinal in some way or have some cardinality and uh and",
    "start": "2966880",
    "end": "2972880"
  },
  {
    "text": "those restrictions do add some some powers",
    "start": "2972880",
    "end": "2978680"
  },
  {
    "text": "um any more questions for us",
    "start": "2986240",
    "end": "2990400"
  },
  {
    "start": "2992000",
    "end": "3071000"
  },
  {
    "text": "yeah they i i like that comment like and then thank you yeah the stories of data is i think it's really important you know real implications of that",
    "start": "2993119",
    "end": "2998880"
  },
  {
    "text": "distribution like um and it's it isn't i i do agree with the the comment that like machines need",
    "start": "2998880",
    "end": "3005040"
  },
  {
    "text": "to calibrate not just humans and the reason i said that and the reason we bring it up so much is because um",
    "start": "3005040",
    "end": "3011040"
  },
  {
    "text": "you look at you look at moving compute more and more to the local environment and",
    "start": "3011040",
    "end": "3017520"
  },
  {
    "text": "uh you you look at clusters of machines that are actually performing tasks and so",
    "start": "3017520",
    "end": "3023200"
  },
  {
    "text": "uh it's not yeah we we i i think that our cpv systems are very",
    "start": "3023200",
    "end": "3030240"
  },
  {
    "text": "primitive forms of community of collaboration we agree on the same value right uh but that that doesn't",
    "start": "3030240",
    "end": "3036079"
  },
  {
    "text": "necessarily allow two actors to go perform local and so i think i think",
    "start": "3036079",
    "end": "3042240"
  },
  {
    "text": "i think the implications once machines can operate in a local first way",
    "start": "3042240",
    "end": "3048160"
  },
  {
    "text": "while so collaborating is going to be huge especially for for uh physical industries where you have",
    "start": "3048160",
    "end": "3054480"
  },
  {
    "text": "multiple machines working on on similar tasks",
    "start": "3054480",
    "end": "3059720"
  },
  {
    "text": "all right do we have any more questions up here we go",
    "start": "3070160",
    "end": "3075280"
  },
  {
    "start": "3071000",
    "end": "3232000"
  },
  {
    "text": "uh you mentioned that there are databases that internally use crdts anything you can recommend",
    "start": "3075280",
    "end": "3080319"
  },
  {
    "text": "on the open source front um there's some interesting movement on uh",
    "start": "3080319",
    "end": "3086720"
  },
  {
    "text": "uh gun gun db is one so gun dot eco is is a",
    "start": "3086720",
    "end": "3091920"
  },
  {
    "text": "open source attempt at firebase um there is also",
    "start": "3091920",
    "end": "3097440"
  },
  {
    "text": "uh is it sink store hang on let me uh let me look",
    "start": "3097440",
    "end": "3104000"
  },
  {
    "text": "uh redwood redwood is another attempt at that at this it's still very early there's a there's",
    "start": "3104000",
    "end": "3110000"
  },
  {
    "text": "a few um sas options but really what they're using them for in this case in that case is is the",
    "start": "3110000",
    "end": "3117440"
  },
  {
    "text": "distribution of data i think gun and redwood um it's redwood redwood there's also the",
    "start": "3117440",
    "end": "3123920"
  },
  {
    "text": "redwood javascript framework that's not what i'm talking about um is is storing uh",
    "start": "3123920",
    "end": "3131680"
  },
  {
    "text": "a a state tree among among many many peers and is using crdts to do so i",
    "start": "3131680",
    "end": "3137040"
  },
  {
    "text": "think there's a good example too of of an ipfs based database that is storing as crdts but we definitely need more",
    "start": "3137040",
    "end": "3144880"
  },
  {
    "text": "examples of this and and uh you know we're not really focused on the database side of the problem but i think a good",
    "start": "3144880",
    "end": "3150880"
  },
  {
    "text": "collaboration between the applications and databases are going to be uh more and more important and i'll post",
    "start": "3150880",
    "end": "3156720"
  },
  {
    "text": "those links in the chat as well",
    "start": "3156720",
    "end": "3160680"
  },
  {
    "text": "okay um solutions as far as i'm sorry sorry sorry libby uh sat solutions storage",
    "start": "3166240",
    "end": "3171280"
  },
  {
    "text": "i'm not aware there's any that use crdts for for storage um maybe someone will chime in on twitter",
    "start": "3171280",
    "end": "3177440"
  },
  {
    "text": "or discord later and and show one but the other things that i'm seeing on the sas front is uh",
    "start": "3177440",
    "end": "3183040"
  },
  {
    "text": "crdt is being used for multi-writer replication between geographic regions",
    "start": "3183040",
    "end": "3189200"
  },
  {
    "text": "i think with that we're at about time uh any other questions we're welcome to failed in our in our discord or twitter",
    "start": "3189520",
    "end": "3195920"
  },
  {
    "text": "or anywhere else please we we love the collaboration sure all right everybody thank you so much",
    "start": "3195920",
    "end": "3203200"
  },
  {
    "text": "going going one more time any more questions",
    "start": "3203200",
    "end": "3208440"
  },
  {
    "text": "all right well jared and james thank you both so much thank you everyone for joining us for another live webinar",
    "start": "3211839",
    "end": "3218960"
  },
  {
    "text": "look for everything online later this afternoon and we'll see you again next week",
    "start": "3218960",
    "end": "3224559"
  },
  {
    "text": "thanks everybody so much thank you thank you",
    "start": "3224559",
    "end": "3231400"
  }
]