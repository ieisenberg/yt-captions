[
  {
    "start": "0",
    "end": "209000"
  },
  {
    "text": "hello hi cubecon oh question for all of you that are",
    "start": "480",
    "end": "6160"
  },
  {
    "text": "joining just now we're going to talk about service mesh specifications how many of these",
    "start": "6160",
    "end": "13599"
  },
  {
    "text": "do you know think about it service mesh abstractions not",
    "start": "13599",
    "end": "20000"
  },
  {
    "text": "necessarily service meshes and how many of those that there are",
    "start": "20000",
    "end": "25039"
  },
  {
    "text": "there are quite a few but how many specifications are you familiar with do any come to mind",
    "start": "25039",
    "end": "32720"
  },
  {
    "text": "if so mention them in the chat let's let's see how many you can prattle off we'll go through all",
    "start": "34559",
    "end": "42079"
  },
  {
    "text": "of them today so no worries if if you're unfamiliar",
    "start": "42079",
    "end": "47840"
  },
  {
    "text": "by the way my name is lee calcote i'm joining you today from austin texas i",
    "start": "49200",
    "end": "56239"
  },
  {
    "text": "am i wear a number of hats i've been focused in this ecosystem for a long time",
    "start": "56239",
    "end": "61600"
  },
  {
    "text": "one of the hats that i wear is as the co-chair of the cncf's",
    "start": "61600",
    "end": "67680"
  },
  {
    "text": "special interest group on networking and all of the cncf projects that fall",
    "start": "67680",
    "end": "73760"
  },
  {
    "text": "within that domain so you know linker d and core dns envoy grpc",
    "start": "73760",
    "end": "82080"
  },
  {
    "text": "and service mesh interface and kuma and there's a there's a list uh",
    "start": "82080",
    "end": "89119"
  },
  {
    "text": "and so we we i stay busy with that hat on but i wear one as a doctor captain and as an author on the subject of",
    "start": "89119",
    "end": "97200"
  },
  {
    "text": "service meshes authoring a couple of books at the moment",
    "start": "97200",
    "end": "102399"
  },
  {
    "text": "and so we'll see if i make it out alive i'm not sure we're going to talk about a lot of",
    "start": "102399",
    "end": "107520"
  },
  {
    "text": "service mesh things today if we go too fast or we miss anything see the url in green",
    "start": "107520",
    "end": "114079"
  },
  {
    "text": "and you can have as much slides to your heart's content",
    "start": "114079",
    "end": "121040"
  },
  {
    "text": "i do have a full-time focus within the layer 5 community layer 5 community's",
    "start": "121040",
    "end": "127040"
  },
  {
    "text": "service mesh dedicated to service meshes and helping people adopt them and operate them do so",
    "start": "127040",
    "end": "133360"
  },
  {
    "text": "confidently we're gonna talk about some of the projects that the open source contributors",
    "start": "133360",
    "end": "138879"
  },
  {
    "text": "work on within that community it's warm and welcoming",
    "start": "138879",
    "end": "144640"
  },
  {
    "text": "sign in join up another slack workspace is just what you need this one isn't quite like the others",
    "start": "145040",
    "end": "152879"
  },
  {
    "text": "the other thing that i'm really fortunate to have today is um is to have a maintainer an open",
    "start": "152879",
    "end": "158400"
  },
  {
    "text": "source maintainer from that community joining and co-presenting work that he's been doing for some time",
    "start": "158400",
    "end": "166239"
  },
  {
    "text": "hi all i am kushtravidi i'm senior year undergraduate at iit",
    "start": "168879",
    "end": "174319"
  },
  {
    "text": "jodhpur and i have been focused on service meshes and",
    "start": "174319",
    "end": "179680"
  },
  {
    "text": "specification for around six to seven months i have been involved in the fi community",
    "start": "179680",
    "end": "185840"
  },
  {
    "text": "as a member as a contributor and as a maintainer we are doing lots of interesting stuff",
    "start": "185840",
    "end": "192239"
  },
  {
    "text": "over there working on measuring working on subway smash performance specifications",
    "start": "192239",
    "end": "197519"
  },
  {
    "text": "working on a semi conformance tool so yeah we have quite a few exciting physics and we have",
    "start": "197519",
    "end": "204319"
  },
  {
    "text": "a welcoming community nice good um",
    "start": "204319",
    "end": "210319"
  },
  {
    "start": "209000",
    "end": "209000"
  },
  {
    "text": "well let's let's talk about the the journey the cloud native journey to service",
    "start": "210319",
    "end": "215840"
  },
  {
    "text": "meshes i i know uh everyone's uh i guess i'll say this with as much sarcasm as i can",
    "start": "215840",
    "end": "222640"
  },
  {
    "text": "um maybe you're tired of hearing about journeys but um rest assured we are all on one",
    "start": "222640",
    "end": "229920"
  },
  {
    "text": "uh the journey doesn't look quite the same for everyone i think the further you step back from",
    "start": "229920",
    "end": "235519"
  },
  {
    "text": "it the more the journeys look the same for a lot of us that has been with uh",
    "start": "235519",
    "end": "242000"
  },
  {
    "text": "sort of the advent of cloud native has been with the popularization of containers",
    "start": "242000",
    "end": "247200"
  },
  {
    "text": "um thank you docker uh which you know docker was first announced a little over",
    "start": "247200",
    "end": "252319"
  },
  {
    "text": "about seven and a half years ago now we saw a number of container run times come",
    "start": "252319",
    "end": "257919"
  },
  {
    "text": "and a number of container run times still here um from there",
    "start": "257919",
    "end": "266080"
  },
  {
    "text": "containers took off like wildfire we got a lot of them turns out you need an orchestrator to help you wrangle that",
    "start": "266080",
    "end": "271440"
  },
  {
    "text": "sprawl we saw a number of orchestrators come and um we still have a number of",
    "start": "271440",
    "end": "278960"
  },
  {
    "text": "orchestrators around i don't remember know if it was today or yesterday but",
    "start": "278960",
    "end": "284639"
  },
  {
    "text": "hashicorp's nomad 1.0 was just announced and so um so can orchestrators are a thing",
    "start": "284639",
    "end": "293360"
  },
  {
    "text": "and so are service meshes the if you measure by the when linker",
    "start": "293360",
    "end": "299919"
  },
  {
    "text": "dv1 was announced that was about a little over four years ago and i was sort of generally available",
    "start": "299919",
    "end": "307039"
  },
  {
    "text": "three years three years ago so service meshes have been a hot",
    "start": "307039",
    "end": "313520"
  },
  {
    "text": "topic for the last few years and they still continue to be rightfully so they're quite a powerful",
    "start": "313520",
    "end": "320080"
  },
  {
    "text": "piece of technology um a lot of the power is yet to come from my perspective um not everyone",
    "start": "320080",
    "end": "328320"
  },
  {
    "text": "quite understands uh the capabilities of meshes as they are promoted and spoken about today",
    "start": "328320",
    "end": "335759"
  },
  {
    "text": "and for my part i believe that there's a tomorrow in which data plane intelligence really",
    "start": "335759",
    "end": "342320"
  },
  {
    "text": "matters and matters about how people write cloud native applications",
    "start": "342320",
    "end": "350000"
  },
  {
    "text": "so so come along on the journey i suppose is the thing there are uh any number of service",
    "start": "350000",
    "end": "357520"
  },
  {
    "text": "meshes out there and as a matter of fact one of the community projects is to track a landscape of",
    "start": "357520",
    "end": "365759"
  },
  {
    "text": "all of the meshes um there are this landscape was just updated today actually it's been a busy",
    "start": "365759",
    "end": "372319"
  },
  {
    "text": "day it's kind of late here at landscape was updated with the nginx service mesh",
    "start": "372319",
    "end": "378240"
  },
  {
    "text": "if you're not familiar with it or missed the announcement um a week or a couple weeks ago um go get",
    "start": "378240",
    "end": "384319"
  },
  {
    "text": "familiar there's a lot to say about each of these service meshes and how they work",
    "start": "384319",
    "end": "390240"
  },
  {
    "text": "their architecture why they're made who they're focused on what they do when",
    "start": "390240",
    "end": "395840"
  },
  {
    "text": "they came about why some of them aren't here anymore why we're still seeing new ones",
    "start": "395840",
    "end": "401919"
  },
  {
    "text": "a lot of things to go through you'll probably be interested in any number of the details that this",
    "start": "401919",
    "end": "407280"
  },
  {
    "text": "landscape tracks so visit it use it heavily reference it",
    "start": "407280",
    "end": "413759"
  },
  {
    "text": "but be aware this statement is",
    "start": "413759",
    "end": "418560"
  },
  {
    "text": "true uh we did pull out a a few",
    "start": "420840",
    "end": "426240"
  },
  {
    "start": "422000",
    "end": "422000"
  },
  {
    "text": "strengths just as a sampling of some of the surface meshes that are available network service mesh on the",
    "start": "426240",
    "end": "432880"
  },
  {
    "text": "right hand side is sort of the service meshes surface mesh if you will",
    "start": "432880",
    "end": "438319"
  },
  {
    "text": "it has a lower layer and by layer i mean osi model layer focus it's a highly performant mesh",
    "start": "438319",
    "end": "447360"
  },
  {
    "text": "it um layer seven uh players like five through seven tend to be more of the",
    "start": "447360",
    "end": "452720"
  },
  {
    "text": "focus of the rest of the service meshes so um nsm um offers some unique",
    "start": "452720",
    "end": "459680"
  },
  {
    "text": "value in that regard the other nsm or nginx service mesh um well interoperates",
    "start": "459680",
    "end": "466879"
  },
  {
    "text": "with nginx plus and that's what it uses as its proxy in the data plane",
    "start": "466879",
    "end": "472000"
  },
  {
    "text": "um quite an interesting interesting proposition considering that there's if i recollect correctly somewhere north",
    "start": "472000",
    "end": "479199"
  },
  {
    "text": "of 400 million deployments of nginx out there um",
    "start": "479199",
    "end": "484400"
  },
  {
    "text": "that as people continue on their journey from just using proxies in the standalone",
    "start": "484400",
    "end": "490160"
  },
  {
    "text": "environments and they go to have lots and lots of those proxies and ultimately arrive at a",
    "start": "490160",
    "end": "495440"
  },
  {
    "text": "service mesh those that are using nginx are probably well served in this regard",
    "start": "495440",
    "end": "502560"
  },
  {
    "text": "uh you know i won't go through the rest there's a bunch of things for us to talk about in this talk but go visit the landscape it'll help",
    "start": "502879",
    "end": "509440"
  },
  {
    "text": "you navigate these uh waters a bit i'll say that i for one am pleased that",
    "start": "509440",
    "end": "516240"
  },
  {
    "text": "there are various choices there's just there's different needs out there there's different",
    "start": "516240",
    "end": "521919"
  },
  {
    "start": "518000",
    "end": "518000"
  },
  {
    "text": "organizations different needs and what we're",
    "start": "521919",
    "end": "528480"
  },
  {
    "text": "answering on this slide is actually the first question that i ask which is how many abstractions are there how many",
    "start": "528480",
    "end": "533680"
  },
  {
    "text": "specifications how many standards are there that have come to the rescue",
    "start": "533680",
    "end": "538880"
  },
  {
    "text": "so to speak for understanding and interoperating with the the various service meshes that are",
    "start": "538880",
    "end": "545200"
  },
  {
    "text": "there one of these is smi",
    "start": "545200",
    "end": "550720"
  },
  {
    "text": "again fortunate in many regards i think in this space but i am a maintainer of of smi and",
    "start": "551360",
    "end": "558959"
  },
  {
    "text": "will tell you that it will describe smi more deeply here in a couple of slides",
    "start": "558959",
    "end": "565200"
  },
  {
    "text": "but it's focused on um lowest common denominator functionality across service meshes",
    "start": "565200",
    "end": "571120"
  },
  {
    "text": "smp service mesh performance focused on describing and capturing the performance",
    "start": "571120",
    "end": "576480"
  },
  {
    "text": "of a surface mesh the overhead the value is another way of looking at it",
    "start": "576480",
    "end": "581760"
  },
  {
    "text": "characterizing that hamlet or multi-vendor service inner mesh inner operation",
    "start": "581760",
    "end": "587600"
  },
  {
    "text": "is i'm also focused a bit on well it has a couple of apis that are",
    "start": "587600",
    "end": "594000"
  },
  {
    "text": "focused on federation and i like to think of it as service catalog",
    "start": "594000",
    "end": "600880"
  },
  {
    "text": "exchange but they each are complementary in nature and each address",
    "start": "600880",
    "end": "605920"
  },
  {
    "text": "um our specification to address a particular area around service meshes something",
    "start": "605920",
    "end": "613279"
  },
  {
    "start": "607000",
    "end": "607000"
  },
  {
    "text": "that i think isn't always obvious to folks and it is this piece of value",
    "start": "613279",
    "end": "618640"
  },
  {
    "text": "that people get from a service mesh and actually from the specifications",
    "start": "618640",
    "end": "625360"
  },
  {
    "text": "that we were just mentioning is the fact that teams are decoupled",
    "start": "625360",
    "end": "631200"
  },
  {
    "text": "when you're running a mesh developers get to iterate a bit independently of operators",
    "start": "631200",
    "end": "636640"
  },
  {
    "text": "and so do operators get to make changes to infrastructure to the way that applications behave",
    "start": "636640",
    "end": "642399"
  },
  {
    "text": "independent of developers in the presence of a mesh both of these",
    "start": "642399",
    "end": "647440"
  },
  {
    "text": "teams are significantly empowered as a matter of fact there's an alternative version of this slide that",
    "start": "647440",
    "end": "652640"
  },
  {
    "text": "talks about the product owner the product owner is a third",
    "start": "652640",
    "end": "657760"
  },
  {
    "text": "persona that is also significantly empowered in the",
    "start": "657760",
    "end": "663040"
  },
  {
    "text": "presence of a mesh there's some advanced use cases there that we",
    "start": "663040",
    "end": "668399"
  },
  {
    "text": "we've i've spoken to in a number of other trainings and talks",
    "start": "668399",
    "end": "673519"
  },
  {
    "text": "catch me in the chat if you want to hear about those use cases i'm pretty interesting so",
    "start": "673519",
    "end": "681519"
  },
  {
    "text": "everybody gets a piece of power i guess when they deploy a mesh",
    "start": "681519",
    "end": "687040"
  },
  {
    "text": "because of um well the fact that there are many meshes by the way i didn't say",
    "start": "687440",
    "end": "692800"
  },
  {
    "text": "that there's um a little over 20 of them that are being tracked on that landscape",
    "start": "692800",
    "end": "698800"
  },
  {
    "text": "the the those abstractions have come along and um there's a need for abstractions",
    "start": "698800",
    "end": "704399"
  },
  {
    "text": "because it's not necessarily the case that that most it's not the case that most",
    "start": "704399",
    "end": "709680"
  },
  {
    "text": "organizations are running multiple service meshes at the same time there are um that you know there's the one or two",
    "start": "709680",
    "end": "717120"
  },
  {
    "text": "percent or five percent of the world that's that's in that scenario for any number of different reasons",
    "start": "717120",
    "end": "723519"
  },
  {
    "text": "but by a majority that's not necessarily the case irrespective of that um infrastructure diversity in the",
    "start": "723519",
    "end": "731040"
  },
  {
    "text": "enterprise is a reality we've had any number of service meshes for the last few years",
    "start": "731040",
    "end": "737200"
  },
  {
    "text": "and near as i can tell we're going to have any number of them for any number of",
    "start": "737200",
    "end": "743600"
  },
  {
    "text": "more years certainly just like any other market we'll have some that enjoy much more",
    "start": "743600",
    "end": "748880"
  },
  {
    "text": "adoption than others but we've been as a community",
    "start": "748880",
    "end": "754720"
  },
  {
    "text": "out answering a lot of questions about which mesh is best for me how do i get started",
    "start": "754720",
    "end": "759920"
  },
  {
    "text": "how do i operate these with confidence how do i how do i ensure if i'm should i be",
    "start": "759920",
    "end": "766240"
  },
  {
    "text": "adopting one of these specifications how do i ensure if i am that my implementation or the service",
    "start": "766240",
    "end": "771839"
  },
  {
    "text": "meshes implementation adheres to the spec lots of those questions we try to answer",
    "start": "771839",
    "end": "777360"
  },
  {
    "text": "and we work within an open source project called mesheri",
    "start": "777360",
    "end": "782639"
  },
  {
    "text": "there's a lot of things to talk about about measuring we'll show you some of the surface mesh specifications using meshri",
    "start": "783040",
    "end": "792399"
  },
  {
    "text": "so let's take a moment to look at the architecture of measuring if you hail from a network engineering",
    "start": "792399",
    "end": "798160"
  },
  {
    "text": "background some of these next terms are going to be quite familiar to you if you don't then as long as you've spent some time",
    "start": "798160",
    "end": "804800"
  },
  {
    "text": "around kubernetes the the data plane and control plane terms are probably",
    "start": "804800",
    "end": "809920"
  },
  {
    "text": "conceptually somewhat familiar to you and are certainly two of the logical planes",
    "start": "809920",
    "end": "815040"
  },
  {
    "text": "that um generically comprise a service mesh there's um a third one",
    "start": "815040",
    "end": "821360"
  },
  {
    "text": "that meshery lands into and that's the management plane there's",
    "start": "821360",
    "end": "828639"
  },
  {
    "text": "a lot of comparatives and an analogy to be made here to how physical networks run and these data",
    "start": "828639",
    "end": "835040"
  },
  {
    "text": "plane control and management planes that are represented there as we collectively sort of",
    "start": "835040",
    "end": "840800"
  },
  {
    "text": "at least part of us or half of us live in the cloud native ecosystem we",
    "start": "840800",
    "end": "847920"
  },
  {
    "text": "live within a software-defined network landscape and service meshes in some respects are",
    "start": "847920",
    "end": "853360"
  },
  {
    "text": "sort of a next-gen sdn the management planes can do any number",
    "start": "853360",
    "end": "859519"
  },
  {
    "text": "of things they help bridge the divide between other back-end systems and service meshes they also help do",
    "start": "859519",
    "end": "867279"
  },
  {
    "text": "things like performance management um configuration management maybe input making sure that you're doing best",
    "start": "867279",
    "end": "873519"
  },
  {
    "text": "practices implementations be taking common patterns and applying them to your environment",
    "start": "873519",
    "end": "880959"
  },
  {
    "text": "maybe they're facilitating insertion of web assembly modules and filters into",
    "start": "881600",
    "end": "887680"
  },
  {
    "text": "your proxies these things are things that mesherie does",
    "start": "887680",
    "end": "892880"
  },
  {
    "text": "measurey is also was a release partner with smi and implements smi it also is the",
    "start": "892880",
    "end": "899440"
  },
  {
    "text": "canonical implementation of s p it also [Music]",
    "start": "899440",
    "end": "905519"
  },
  {
    "text": "supports nine different service meshes today it has individual adapters written for",
    "start": "905519",
    "end": "911360"
  },
  {
    "text": "each of those service meshes it does leverage smi but it also uses different adapters for each service mesh",
    "start": "911360",
    "end": "918160"
  },
  {
    "text": "to allow those meshes to expose their differentiated value",
    "start": "918160",
    "end": "924480"
  },
  {
    "text": "so let's take a look at our first uh specification smi service mesh",
    "start": "924880",
    "end": "932399"
  },
  {
    "text": "interface smi is born of uh well its goal and kind of its genesis was",
    "start": "932399",
    "end": "940720"
  },
  {
    "text": "born inside of kubernetes i guess is maybe one of the ways of articulating it that its focus is on um",
    "start": "941199",
    "end": "948320"
  },
  {
    "text": "being a specification that is native to kubernetes its focus is um",
    "start": "948320",
    "end": "956240"
  },
  {
    "text": "on lowest i said this before but lowest common denominator functionality or a different way of saying that is",
    "start": "956240",
    "end": "961600"
  },
  {
    "text": "kind of focusing on bringing forth apis that highlight and reinforce",
    "start": "961600",
    "end": "968480"
  },
  {
    "text": "the most common use cases that service meshes are being used for currently while leaving space and",
    "start": "968480",
    "end": "974320"
  },
  {
    "text": "providing extensibility room for additional apis to address",
    "start": "974320",
    "end": "980560"
  },
  {
    "text": "other service mesh functionality as more people adopt and more people make other use cases well well known",
    "start": "980560",
    "end": "990800"
  },
  {
    "text": "there are four specifications today they're listed here one that defines traffic splitting and",
    "start": "991440",
    "end": "997920"
  },
  {
    "text": "how traffic splitting can work so that you as a consumer or a user of a service mesh can",
    "start": "997920",
    "end": "1005920"
  },
  {
    "text": "configure and control a service mesh using this standard specification for defining something like",
    "start": "1005920",
    "end": "1013680"
  },
  {
    "text": "traffic splitting doing a canary and doing that in a universal way or",
    "start": "1013680",
    "end": "1020480"
  },
  {
    "text": "doing that in a standard way and so on for other use cases around",
    "start": "1020480",
    "end": "1026640"
  },
  {
    "text": "access control and metrics and exposing and highlighting the um",
    "start": "1026640",
    "end": "1034079"
  },
  {
    "text": "the most the most common metrics that people look at",
    "start": "1034079",
    "end": "1039918"
  },
  {
    "text": "okay if you're familiar with sona boy from the",
    "start": "1040799",
    "end": "1047038"
  },
  {
    "start": "1041000",
    "end": "1041000"
  },
  {
    "text": "kubernetes project or as a related project to kubernetes sonaboy is a utility that's used to",
    "start": "1047039",
    "end": "1056080"
  },
  {
    "text": "identify whether or not a kubernetes distribution of which at one point there was near 100",
    "start": "1056080",
    "end": "1062400"
  },
  {
    "text": "maybe there's over 100 now but whether or not that distribution is in fact um kubernetes whether or not that piece",
    "start": "1062400",
    "end": "1070400"
  },
  {
    "text": "of software that is labeled with kubernetes in fact adheres to the kubernetes apis",
    "start": "1070400",
    "end": "1076480"
  },
  {
    "text": "and um and like i said it is kubernetes so um",
    "start": "1076480",
    "end": "1083200"
  },
  {
    "text": "sonaboy runs some conformance tests um the same thing is needed for smi as a standard specification it needs",
    "start": "1083280",
    "end": "1090240"
  },
  {
    "text": "to define what it means for a service mesh right now i believe there are",
    "start": "1090240",
    "end": "1096080"
  },
  {
    "text": "seven of service seven service meshes that um claim compatibility with smi",
    "start": "1096080",
    "end": "1103679"
  },
  {
    "text": "and um there's been a community effort uh",
    "start": "1103679",
    "end": "1110240"
  },
  {
    "text": "open source effort to create um service mesh conformance tests to assert whether or not a given",
    "start": "1110240",
    "end": "1117360"
  },
  {
    "text": "surface mesh is compatible with smi and in order to facilitate those types of",
    "start": "1117360",
    "end": "1123120"
  },
  {
    "text": "tests you've got to have a tool to well provision",
    "start": "1123120",
    "end": "1128400"
  },
  {
    "text": "those seven service meshes um to provision a sample application on those service",
    "start": "1128400",
    "end": "1134000"
  },
  {
    "text": "meshes to then generate load and test out whether or not traffic splitting behaves like it should or or works with",
    "start": "1134000",
    "end": "1141280"
  },
  {
    "text": "that service mesh's implementation traffic splitting as an example",
    "start": "1141280",
    "end": "1147760"
  },
  {
    "text": "and so and then you need to be able to collect the results guarantee the provenance of those results and publish them and so",
    "start": "1148080",
    "end": "1156080"
  },
  {
    "text": "as a community we turned to mesherie as the tool to implement smi conformance and",
    "start": "1156080",
    "end": "1162840"
  },
  {
    "text": "um we've been working with the individual service meshes",
    "start": "1162840",
    "end": "1170000"
  },
  {
    "text": "to validate their conformance and so let's take a moment to do a demo",
    "start": "1170000",
    "end": "1176640"
  },
  {
    "start": "1171000",
    "end": "1171000"
  },
  {
    "text": "let's take a moment to look at what that looks like to validate uh conformance in smi",
    "start": "1176640",
    "end": "1186480"
  },
  {
    "text": "using meshri so uh what i'm going to do here is use",
    "start": "1186640",
    "end": "1192480"
  },
  {
    "text": "mestre as the tool to validate that conformance we'll come over and spin up mesherie locally so we'll use",
    "start": "1192480",
    "end": "1199360"
  },
  {
    "text": "measuring ctl as the command line interface to work with measuring",
    "start": "1199360",
    "end": "1206640"
  },
  {
    "text": "uh that command line interface we'll do a mystery ctl system start it'll",
    "start": "1206640",
    "end": "1211760"
  },
  {
    "text": "update uh the latest uh and greatest meshery start that up open up your browser and",
    "start": "1211760",
    "end": "1217840"
  },
  {
    "text": "drop us in here we can interact with a number of different service meshes the",
    "start": "1217840",
    "end": "1225600"
  },
  {
    "text": "service mesh that we're going to work with today is open service mesh",
    "start": "1225600",
    "end": "1230960"
  },
  {
    "text": "open service mesh is uh one of those seven that um is compatible with smi and so let's",
    "start": "1232159",
    "end": "1238559"
  },
  {
    "text": "put it to the test just before we do let's familiarize with my environment a little bit i'm uh on a mac i'm running",
    "start": "1238559",
    "end": "1246559"
  },
  {
    "text": "docker desktop i'm running kubernetes inside of docker desktop",
    "start": "1246559",
    "end": "1252640"
  },
  {
    "text": "and i should be running a relatively clean system yep looks a fairly fresh",
    "start": "1257120",
    "end": "1263440"
  },
  {
    "text": "install just kubernetes we are connected let's go over to open service mesh and",
    "start": "1263440",
    "end": "1271200"
  },
  {
    "text": "install it uh osm should you know installs fairly",
    "start": "1271200",
    "end": "1277200"
  },
  {
    "text": "fairly quickly as that does we'll go ahead and get familiar a little bit with some of the",
    "start": "1277200",
    "end": "1282559"
  },
  {
    "text": "other operations we can perform here specifically on smi conformance and so one of those operations is to",
    "start": "1282559",
    "end": "1290799"
  },
  {
    "text": "validate our service mesh configuration our conformance it looks like osm is coming",
    "start": "1290799",
    "end": "1296559"
  },
  {
    "text": "up here looks like we're up up up up and we'll initiate conformance testing",
    "start": "1296559",
    "end": "1304400"
  },
  {
    "text": "there are well i lose count of how many conformance tests that there are",
    "start": "1304400",
    "end": "1309440"
  },
  {
    "text": "currently defined um the con the test assertions that are",
    "start": "1309440",
    "end": "1315919"
  },
  {
    "text": "being used are not a complete spec so they will address all four of smi's",
    "start": "1315919",
    "end": "1323919"
  },
  {
    "text": "apis but the conformance tests are a work in progress and so",
    "start": "1323919",
    "end": "1332799"
  },
  {
    "text": "as such we will show on the current set so so right now that",
    "start": "1332799",
    "end": "1338640"
  },
  {
    "text": "those are being run i'm going to go ahead and take a look at",
    "start": "1338640",
    "end": "1343759"
  },
  {
    "text": "some prior tests that were run just a bit ago so these were run earlier on open",
    "start": "1344080",
    "end": "1350480"
  },
  {
    "text": "service mesh these tests go and and do assertions across um these different the same",
    "start": "1350480",
    "end": "1358320"
  },
  {
    "text": "specifications we were looking at traffic access traffic split um traffic spec",
    "start": "1358320",
    "end": "1363520"
  },
  {
    "text": "we don't have looks like we don't have traffic metrics being tested here just yet but there are a number of assertions",
    "start": "1363520",
    "end": "1369200"
  },
  {
    "text": "things that uh osm should do and behave to be conformant and",
    "start": "1369200",
    "end": "1376158"
  },
  {
    "text": "i wouldn't reflect um on osm in a negative way here the conformance tests are early and so",
    "start": "1376400",
    "end": "1383840"
  },
  {
    "text": "really is the notion that each of these meshes needs to adhere to a certain set of assertions so",
    "start": "1383840",
    "end": "1392159"
  },
  {
    "text": "uh mescheri then collects these uh results and will eventually be",
    "start": "1392159",
    "end": "1398000"
  },
  {
    "text": "publishing them in combination with the smi project",
    "start": "1398000",
    "end": "1403280"
  },
  {
    "text": "so nice smp is our next",
    "start": "1403280",
    "end": "1411919"
  },
  {
    "start": "1408000",
    "end": "1408000"
  },
  {
    "text": "specification our next standard smp is service mesh performance",
    "start": "1411919",
    "end": "1417679"
  },
  {
    "text": "you know it's it's very frequently been the case that as i engage and speak with people about service meshes they are",
    "start": "1417679",
    "end": "1423840"
  },
  {
    "text": "concerned about overhead of a mesh and you know rightfully so service meshes",
    "start": "1423840",
    "end": "1430720"
  },
  {
    "text": "can do a lot and the more that you ask any particular pieces of infrastructure to do",
    "start": "1430720",
    "end": "1436000"
  },
  {
    "text": "the more cpu and memory that you would expect that it consumes",
    "start": "1436000",
    "end": "1441200"
  },
  {
    "text": "as such um really trying to characterize the performance of your infrastructure",
    "start": "1442640",
    "end": "1449679"
  },
  {
    "text": "of a surface mesh is a really difficult thing to do and to articulate it",
    "start": "1449679",
    "end": "1455279"
  },
  {
    "text": "concisely um considering the number of variables that you have to track how difficult it can be to have",
    "start": "1455279",
    "end": "1461919"
  },
  {
    "text": "repeatable tests and benchmark your environment track your history based on your environment",
    "start": "1461919",
    "end": "1468400"
  },
  {
    "text": "compare performance between other meshes people need people you can go look up at published",
    "start": "1468400",
    "end": "1474400"
  },
  {
    "text": "results from either some of the service meshes that do publish results about performance some that don't but what you'll find is",
    "start": "1474400",
    "end": "1481840"
  },
  {
    "text": "that they're probably using an environment that isn't necessarily like yours and they're also using different statistics",
    "start": "1481840",
    "end": "1489200"
  },
  {
    "text": "and metrics to measure themselves and it's kind of doesn't help",
    "start": "1489200",
    "end": "1498240"
  },
  {
    "text": "and so smp it was born um in combination with uh in engaging with",
    "start": "1498240",
    "end": "1504159"
  },
  {
    "text": "a few of those different service mesh maintainers and creating a standard",
    "start": "1504159",
    "end": "1509200"
  },
  {
    "text": "way of articulate capturing articulating um a performance of a mesh",
    "start": "1509200",
    "end": "1516480"
  },
  {
    "text": "in a future discussion we'll talk about meshmark if you want to learn about what meshmark",
    "start": "1516480",
    "end": "1521600"
  },
  {
    "text": "is visit the specifications website you'll you'll see",
    "start": "1521600",
    "end": "1527440"
  },
  {
    "text": "the it gets kind of um maybe more interesting than you might think it's first of all really rather",
    "start": "1527440",
    "end": "1534960"
  },
  {
    "text": "challenging and somewhat intriguing how many things you need to measure and keep track of it's not just the mesh it's not just the meshes version or its",
    "start": "1534960",
    "end": "1541679"
  },
  {
    "text": "workloads or how many clusters you have the size",
    "start": "1541679",
    "end": "1546960"
  },
  {
    "text": "of the clusters the type of nodes all these things it's all of that it's also the type of",
    "start": "1546960",
    "end": "1552480"
  },
  {
    "text": "infrastructure that i'm sorry the type of uh the way in which you're configuring your control plan or your service mesh you",
    "start": "1552480",
    "end": "1560559"
  },
  {
    "start": "1557000",
    "end": "1557000"
  },
  {
    "text": "might be using um client libraries um to do some service mesh functionality",
    "start": "1560559",
    "end": "1569279"
  },
  {
    "text": "maybe you're using those in combination with the service mesh or maybe not what costs more what's more efficient",
    "start": "1569279",
    "end": "1575520"
  },
  {
    "text": "what's more powerful these are all open questions that s p assists in answering",
    "start": "1575520",
    "end": "1581039"
  },
  {
    "text": "and assists in answering in your in your environment maybe you're using webassembly and",
    "start": "1581039",
    "end": "1587440"
  },
  {
    "text": "filters there well what's more efficient um should you implement retries",
    "start": "1587440",
    "end": "1593200"
  },
  {
    "text": "as an example or authorization in one versus the next is one more powerful what's the overhead",
    "start": "1593200",
    "end": "1598880"
  },
  {
    "text": "um of using one so there's a lot of approaches",
    "start": "1598880",
    "end": "1604720"
  },
  {
    "text": "here to to how you derive that value and how you put that value to work so",
    "start": "1604720",
    "end": "1611120"
  },
  {
    "start": "1611000",
    "end": "1611000"
  },
  {
    "text": "for example yeah so there's a few examples here about path-based routing and context-based run like just different um",
    "start": "1611120",
    "end": "1617279"
  },
  {
    "text": "load balancing algorithms what are those going to cost you um and the speed by which you can enable",
    "start": "1617279",
    "end": "1624240"
  },
  {
    "text": "that in the mesh is pretty fantastic you'd be surprised by some of the results",
    "start": "1624240",
    "end": "1629679"
  },
  {
    "text": "of some tests that we've done and that the community has done in combination with a couple of",
    "start": "1629679",
    "end": "1636480"
  },
  {
    "text": "universities and graduate students we actually showed some of those results last cubecon eu we are going to",
    "start": "1636480",
    "end": "1644559"
  },
  {
    "text": "um do a short demo of smp now okay so i'm going to demonstrate",
    "start": "1644559",
    "end": "1652159"
  },
  {
    "text": "service mesh performance or more specifically i'm going to show you the implementation",
    "start": "1652159",
    "end": "1657919"
  },
  {
    "text": "of server switch performance as me told you that measuring the service mesh management plane is the",
    "start": "1657919",
    "end": "1664559"
  },
  {
    "text": "canonical implementation of the service mesh performance so on my terminal i have a local",
    "start": "1664559",
    "end": "1670720"
  },
  {
    "text": "deployment of mystery running you can also deploy machinery on kubernetes as well as",
    "start": "1670720",
    "end": "1676559"
  },
  {
    "text": "the vended kubernetes platforms like aks eks and gcp or you can",
    "start": "1676559",
    "end": "1682960"
  },
  {
    "text": "use a dockerized container to run machine i also have my kubernetes",
    "start": "1682960",
    "end": "1690559"
  },
  {
    "text": "on docker desktop where i can just bring the configuration and you can",
    "start": "1690559",
    "end": "1695600"
  },
  {
    "text": "see on my kubernetes i have open service",
    "start": "1695600",
    "end": "1700880"
  },
  {
    "text": "mesh deployed and yep you can see all the pods are running controller different prometheus",
    "start": "1700880",
    "end": "1707919"
  },
  {
    "text": "instances so let's jump into the demo and see how smp spec works so",
    "start": "1707919",
    "end": "1715840"
  },
  {
    "text": "the machine ui is exposed at 9081 port if you will just go into performance description",
    "start": "1715840",
    "end": "1722399"
  },
  {
    "text": "this is the ui which is used to instantiate a load test so we'll just performance benchmark or",
    "start": "1722399",
    "end": "1728960"
  },
  {
    "text": "osm control pin quickly open service mesh so here is the url",
    "start": "1728960",
    "end": "1736960"
  },
  {
    "text": "where i have exposed the open service mesh",
    "start": "1736960",
    "end": "1741840"
  },
  {
    "text": "and i can just hit the performance endpoint for the same",
    "start": "1742320",
    "end": "1747440"
  },
  {
    "text": "over here you can see we have three load generators ford io wrk2 and nighthawk all of these load",
    "start": "1747440",
    "end": "1755039"
  },
  {
    "text": "generators have their own set of attributes which they record correctly",
    "start": "1755039",
    "end": "1760799"
  },
  {
    "text": "and each of each of its attributes have their own significance so let's just",
    "start": "1760799",
    "end": "1766799"
  },
  {
    "text": "do photo and start the test",
    "start": "1766799",
    "end": "1770720"
  },
  {
    "text": "while doing the test let's see what other options we can expose in machine so in the advanced",
    "start": "1773039",
    "end": "1780080"
  },
  {
    "text": "options you can even you can even tell what header should be passed by testing",
    "start": "1780080",
    "end": "1786080"
  },
  {
    "text": "your services or service mesh you can tell them the cookies you can tell the content type",
    "start": "1786080",
    "end": "1791440"
  },
  {
    "text": "and you can tell the request body which should be passed while doing the performance test",
    "start": "1791440",
    "end": "1797120"
  },
  {
    "text": "and then yep this should be completed okay so here's the",
    "start": "1797120",
    "end": "1804880"
  },
  {
    "text": "output of the fort io load generator and you can see the output is in fort io",
    "start": "1804880",
    "end": "1810960"
  },
  {
    "text": "format and you can actually download the test results from here or you can just browse",
    "start": "1810960",
    "end": "1816000"
  },
  {
    "text": "into the results tab and you can see all of the lists you which you have rented now",
    "start": "1816000",
    "end": "1823120"
  },
  {
    "text": "so now we will be using nighthawk to generate the load and",
    "start": "1823120",
    "end": "1829279"
  },
  {
    "text": "benchmark the service for the same and later onwards we'll be seeing how different load generator",
    "start": "1829279",
    "end": "1835679"
  },
  {
    "text": "generates the load and how service mesh performance interprets the load generated using",
    "start": "1835679",
    "end": "1841919"
  },
  {
    "text": "different performance using different load generators so some",
    "start": "1841919",
    "end": "1850640"
  },
  {
    "text": "control",
    "start": "1850640",
    "end": "1853279"
  },
  {
    "text": "so here's the endpoint url which i used earlier with ford i o and let's start the test",
    "start": "1860399",
    "end": "1868799"
  },
  {
    "text": "so nighthawk is the load generator which is maintained by online community and it is relatively",
    "start": "1869519",
    "end": "1877279"
  },
  {
    "text": "new and it still hasn't got its one point or at least but right now nighthawk has sufficient",
    "start": "1877279",
    "end": "1884480"
  },
  {
    "text": "features to come to compete with different load generators which are still in the play like it can",
    "start": "1884480",
    "end": "1890640"
  },
  {
    "text": "generate a grpc server it can generate a grpc service on its own and it has some",
    "start": "1890640",
    "end": "1896799"
  },
  {
    "text": "more attributes which you can expose using their cli tool",
    "start": "1896799",
    "end": "1903278"
  },
  {
    "text": "um",
    "start": "1904840",
    "end": "1907840"
  },
  {
    "text": "yep so here's the load test and here's the",
    "start": "1910640",
    "end": "1916880"
  },
  {
    "text": "result which was generated using nighthawk you can also see that",
    "start": "1916880",
    "end": "1921919"
  },
  {
    "text": "mystery has the capability to search your environment and see what specifications are you using",
    "start": "1921919",
    "end": "1929279"
  },
  {
    "text": "and what's the load on your kubernetes so let's jump into the results tab and",
    "start": "1929279",
    "end": "1934559"
  },
  {
    "text": "see how we compare the test results",
    "start": "1934559",
    "end": "1938720"
  },
  {
    "text": "so here is the one which i run using nighthawk and here's the one which also you're",
    "start": "1943760",
    "end": "1950159"
  },
  {
    "text": "saying photo if i select the night talk one and i",
    "start": "1950159",
    "end": "1955440"
  },
  {
    "text": "if i click on the download you will see that the yaml gets downloaded",
    "start": "1955440",
    "end": "1960480"
  },
  {
    "text": "in the smp format which you can browse over here",
    "start": "1960480",
    "end": "1967919"
  },
  {
    "text": "in the yaml you see that start time load time the performance",
    "start": "1969440",
    "end": "1976320"
  },
  {
    "text": "latencies the metrics the environment are being captured we plan to capture more details",
    "start": "1976320",
    "end": "1984799"
  },
  {
    "text": "according to the specification we have specified in the service mesh performance repo you",
    "start": "1984799",
    "end": "1991360"
  },
  {
    "text": "can just go into the depo and see what all attributes we are planning to capture",
    "start": "1991360",
    "end": "1999200"
  },
  {
    "text": "one more interesting thing which we have about machine over here is if you see the following result",
    "start": "1999200",
    "end": "2006720"
  },
  {
    "text": "and what i can do is i can just select the results and i can just compare them",
    "start": "2006880",
    "end": "2015200"
  },
  {
    "text": "so over here if you see the graph a the blue line this is the",
    "start": "2015360",
    "end": "2021519"
  },
  {
    "text": "loader which was using the four dialog generator and if you see b the orange one",
    "start": "2021519",
    "end": "2030320"
  },
  {
    "text": "this was the load test which was 10 using my talk you also have a wrk 2 performance test",
    "start": "2030320",
    "end": "2039600"
  },
  {
    "text": "which you can see over here very good thank you krish it always helps to see",
    "start": "2039600",
    "end": "2046799"
  },
  {
    "start": "2045000",
    "end": "2045000"
  },
  {
    "text": "a specification in action sometimes the abstraction is a bit too abstract",
    "start": "2046799",
    "end": "2052878"
  },
  {
    "text": "for me it becomes pretty obvious how smp",
    "start": "2052879",
    "end": "2058720"
  },
  {
    "text": "facilitates um confidence and efficiency and how it is that people operate a mesh",
    "start": "2058839",
    "end": "2067440"
  },
  {
    "start": "2067000",
    "end": "2067000"
  },
  {
    "text": "uh our next specification to discuss is hamlet",
    "start": "2067440",
    "end": "2074480"
  },
  {
    "text": "we mentioned hamlet earlier we talked about briefly about hamlet's focus on service mesh federation",
    "start": "2074480",
    "end": "2084000"
  },
  {
    "text": "hamlet's an important specification i consider in and like i said before in a lot of",
    "start": "2084000",
    "end": "2090000"
  },
  {
    "text": "respects i consider that you you might think of it as service catalog federation like the other specifications",
    "start": "2090000",
    "end": "2097280"
  },
  {
    "text": "hamlet um is defines api interfaces",
    "start": "2097280",
    "end": "2104240"
  },
  {
    "text": "two apis in hamlet at the moment one is the federated resource discovery",
    "start": "2104240",
    "end": "2110079"
  },
  {
    "text": "api the other one is the federated service discovery api there is much discovery that's happening",
    "start": "2110079",
    "end": "2116720"
  },
  {
    "text": "in these apis that's intentional the intention here is to marry up and",
    "start": "2116720",
    "end": "2122960"
  },
  {
    "text": "connect to disparate service mesh deployments those deployments might be of the same",
    "start": "2122960",
    "end": "2128560"
  },
  {
    "text": "type they might be of two different types hamlet takes on a client",
    "start": "2128560",
    "end": "2136320"
  },
  {
    "text": "server architecture in which resources and services of one service",
    "start": "2136320",
    "end": "2141680"
  },
  {
    "text": "mesh are discovered registered and using a common",
    "start": "2141680",
    "end": "2147359"
  },
  {
    "text": "format information about them is exchanged between different service meshes part of the",
    "start": "2147359",
    "end": "2155040"
  },
  {
    "text": "real power here or i consider in hamlet is the ability to overcome",
    "start": "2155040",
    "end": "2161680"
  },
  {
    "text": "what are likely to be separate administrative domains there's likely one team that controls um",
    "start": "2161680",
    "end": "2168640"
  },
  {
    "text": "this service mesh over here and the services that it's running another team that controls this one the",
    "start": "2168640",
    "end": "2174720"
  },
  {
    "text": "ability to identify um rules around authentication and",
    "start": "2174720",
    "end": "2181280"
  },
  {
    "text": "authorization rules around which services get exposed and to whom and who can",
    "start": "2181280",
    "end": "2186640"
  },
  {
    "text": "who can communicate with them and whether or not they can do it securely these are things that hamlet addresses",
    "start": "2186640",
    "end": "2193920"
  },
  {
    "text": "so in addition to smi smp and hamlet there have been an",
    "start": "2193920",
    "end": "2200400"
  },
  {
    "start": "2195000",
    "end": "2195000"
  },
  {
    "text": "emergence of surface mesh patterns patterns by which the way in which people are",
    "start": "2200400",
    "end": "2206079"
  },
  {
    "text": "running and operating meshes um you know surface meshes we've seen have",
    "start": "2206079",
    "end": "2211200"
  },
  {
    "text": "been around for you know four years now part of the work that we're doing inside",
    "start": "2211200",
    "end": "2216480"
  },
  {
    "text": "of the cncf's sig network there's a service mesh working group",
    "start": "2216480",
    "end": "2221599"
  },
  {
    "text": "that working group is um well helping identify those patterns",
    "start": "2221599",
    "end": "2227920"
  },
  {
    "text": "of which there's a list right now unbeknownst to you this is a clickable",
    "start": "2227920",
    "end": "2233280"
  },
  {
    "text": "hyperlink that when you have access to the slides you can click on",
    "start": "2233280",
    "end": "2238320"
  },
  {
    "text": "if you don't find the slides reach out to cush reach out to myself or better yet reach out and join into",
    "start": "2238320",
    "end": "2246079"
  },
  {
    "text": "the service mesh working group all are welcome you don't have to be a member of",
    "start": "2246079",
    "end": "2251760"
  },
  {
    "text": "the cncf to participate but come join in and help us work through the 60 patterns that are defined",
    "start": "2251760",
    "end": "2257760"
  },
  {
    "text": "right now 30 of those are going into",
    "start": "2257760",
    "end": "2262480"
  },
  {
    "text": "an o'reilly book called service mesh patterns with that it's been wonderful talking",
    "start": "2262800",
    "end": "2269599"
  },
  {
    "text": "service mesh with you talking abstractions and specifications",
    "start": "2269599",
    "end": "2274480"
  },
  {
    "text": "uh thank you for your time cush and i will be in the chat ready to field your questions if we",
    "start": "2275040",
    "end": "2281280"
  },
  {
    "text": "are out of time and we don't get to them come join the layer five uh community",
    "start": "2281280",
    "end": "2287119"
  },
  {
    "text": "come join the slack there are each of the service meshes that we've discussed today there are",
    "start": "2287119",
    "end": "2293440"
  },
  {
    "text": "representatives of those in the community and there are many people who have adopted and are",
    "start": "2293440",
    "end": "2298880"
  },
  {
    "text": "operating service meshes in that community as well so um a lot to be shared and to share",
    "start": "2298880",
    "end": "2306880"
  },
  {
    "text": "okay thanks a lot we'll see you in the chat",
    "start": "2306880",
    "end": "2313040"
  }
]