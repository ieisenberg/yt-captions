[
  {
    "text": "all right hello everyone uh thank you very much for having me uh and welcome to my talk uh it's called the attacker",
    "start": "480",
    "end": "7319"
  },
  {
    "text": "perspective insights from Hocking Alibaba clouds internal kubernetes environments uh and the story I'm going",
    "start": "7319",
    "end": "13040"
  },
  {
    "text": "to tell you here today is kind of a unique uh story and the cubec con view because we're not going to tell a",
    "start": "13040",
    "end": "18480"
  },
  {
    "text": "kubernetes story from the point of view of like a developer or devop person or any of these things but from the opposite point of view uh how me uh as a",
    "start": "18480",
    "end": "26400"
  },
  {
    "text": "hacker uh is looking on kubernetes environments like real life kuber environments of Alibaba Cloud uh and",
    "start": "26400",
    "end": "32680"
  },
  {
    "text": "trying to basically hack them break them uh and specifically uh how uh we were",
    "start": "32680",
    "end": "38559"
  },
  {
    "text": "able to start from a database instance uh on Al Cloud that belonged to us contained uh our own data only uh from",
    "start": "38559",
    "end": "45600"
  },
  {
    "text": "there we were able to gain control over the entire kubernetes cluster uh and gain access to all the other customers",
    "start": "45600",
    "end": "50760"
  },
  {
    "text": "databases uh that use the same service on Alig cloud and not only that but also",
    "start": "50760",
    "end": "56079"
  },
  {
    "text": "we were able to gain right access to alibaba's internal container Reg containing all their uh images for",
    "start": "56079",
    "end": "62199"
  },
  {
    "text": "different cloud services as well uh poison their images with whatever you know malicious scope that we wanted to",
    "start": "62199",
    "end": "67439"
  },
  {
    "text": "uh insert into there and have that code execute on all the other customers databases as well and on other cloud services onb Cloud too so how do we do",
    "start": "67439",
    "end": "75040"
  },
  {
    "text": "it uh what sort of mistakes and bugs we able to uh exploit here to get this crazy level of privilege and most",
    "start": "75040",
    "end": "81320"
  },
  {
    "text": "importantly how can you guys prevent yourself from doing the similar mistakes uh when building these sort of services",
    "start": "81320",
    "end": "86520"
  },
  {
    "text": "uh let's Dive Right In uh before we do uh allow me to introduce myself uh my name is Elon I'm also here on behalf of",
    "start": "86520",
    "end": "93880"
  },
  {
    "text": "my teammate ran chin he couldn't be here uh with us but he did a lot of the stuff that I'm going to talk about today uh I",
    "start": "93880",
    "end": "100399"
  },
  {
    "text": "am my name is as I said my Twitter handle is very conveniently just at HEI uh so uh if you want to uh hit me up",
    "start": "100399",
    "end": "107439"
  },
  {
    "text": "there I post uh cool research stuff from time to time you're also very welcome to uh slide into my DMs uh I am 24 years",
    "start": "107439",
    "end": "113960"
  },
  {
    "text": "old uh based in Israel um very proud to be Jewish and very proud to be Israeli",
    "start": "113960",
    "end": "119719"
  },
  {
    "text": "um especially during these tough times uh and I am a security researcher as part of the wiiz research team what we",
    "start": "119719",
    "end": "126159"
  },
  {
    "text": "do is basically Cloud security lat research uh which uh translated means a lot of the time working with uh real",
    "start": "126159",
    "end": "132840"
  },
  {
    "text": "life uh big and complex um kubernetes and Docker based environments uh in lots",
    "start": "132840",
    "end": "138519"
  },
  {
    "text": "of different cloud services and Cloud providers such as alib Cloud uh Ali",
    "start": "138519",
    "end": "143800"
  },
  {
    "text": "Cloud uh is the biggest cloud provider in the uh Asia Pacific region and also generally a very big cloud provider",
    "start": "143800",
    "end": "150519"
  },
  {
    "text": "uh and just like the other Cloud providers that you guys might know alib Cloud also offers a wide variety of",
    "start": "150519",
    "end": "156840"
  },
  {
    "text": "managed database services to its customers they come in all uh shapes sizes colors and flavors uh in this",
    "start": "156840",
    "end": "162879"
  },
  {
    "text": "particular research we decided to focus on particular one of them called postgress SQL uh postgress SQL is a",
    "start": "162879",
    "end": "169720"
  },
  {
    "text": "database it's we chose that one because it's a very complex and feature database and uh on our experience we found it to",
    "start": "169720",
    "end": "176239"
  },
  {
    "text": "be uh relatively easy to exploit to gain code execution um uh basically uh what we found on previous Cloud providers uh",
    "start": "176239",
    "end": "183400"
  },
  {
    "text": "when working with Pocus SQL is that uh it's basically an open source project for databases that is inherently",
    "start": "183400",
    "end": "189280"
  },
  {
    "text": "designed for on premise environments and all these Cloud providers try to like modify it in order to be a uh",
    "start": "189280",
    "end": "195080"
  },
  {
    "text": "cloud-based uh service based solution uh they did these sort of similar patterns of mistakes that we were able to exploit",
    "start": "195080",
    "end": "201040"
  },
  {
    "text": "uh in many different Cloud providers if you're interested in learning more about those particular vulnerabilities uh there is a link at the bottom of the",
    "start": "201040",
    "end": "206959"
  },
  {
    "text": "slide uh we have a very detailed blog about these vulnerabilities and we also had black hat talk about this which is",
    "start": "206959",
    "end": "212799"
  },
  {
    "text": "quite interesting uh if uh that's what you're into uh so uh we're not going to talk about that today we're going to",
    "start": "212799",
    "end": "217879"
  },
  {
    "text": "talk about kubernetes but uh just know that this is the reason uh we chose pogress uh so pogress skill is offered",
    "start": "217879",
    "end": "223360"
  },
  {
    "text": "by two uh database services in a cloud one of them is called analytic DB which is sort of like the big data uh service",
    "start": "223360",
    "end": "230319"
  },
  {
    "text": "that Al provides and other one is called absera DB uh ODS which is just a regular",
    "start": "230319",
    "end": "235519"
  },
  {
    "text": "uh database service so let's talk about analytic DB and how we basically how we",
    "start": "235519",
    "end": "241720"
  },
  {
    "text": "hack that service uh so uh we started out by creating a new database on our",
    "start": "241720",
    "end": "246799"
  },
  {
    "text": "account uh and basically uh started looking for these you know vulnerabilities I just talked about",
    "start": "246799",
    "end": "252120"
  },
  {
    "text": "these mistakes uh until we were able to gain code execution uh on those data on one of these databases and the first",
    "start": "252120",
    "end": "257840"
  },
  {
    "text": "thing we asked ourselves after we g code execution is okay we're running code on something where exactly are we running",
    "start": "257840",
    "end": "263479"
  },
  {
    "text": "what sort of infrastructure does this database have we en code on something somewhere but what exactly is the underlying infrastructure so we start",
    "start": "263479",
    "end": "270400"
  },
  {
    "text": "you know looking at the file system the processes the network etc etc uh until",
    "start": "270400",
    "end": "275520"
  },
  {
    "text": "we figure out uh that this is a kubernetes environment uh our uh database instance runs on a kubernetes",
    "start": "275520",
    "end": "281520"
  },
  {
    "text": "pod which of course begs the question how can we actually Escape that part we don't want to be you know chained we",
    "start": "281520",
    "end": "287720"
  },
  {
    "text": "don't want to be in The Matrix we want to break out of jail and see what actually happens uh on the infrastructure of what we're doing uh so",
    "start": "287720",
    "end": "295560"
  },
  {
    "text": "how do we break out of prison uh basically whenever we try to escape out of containers we try to look for these",
    "start": "295560",
    "end": "301080"
  },
  {
    "text": "similar patterns of mistakes that people usually make when configuring uh dock containers that we can uh exploit in",
    "start": "301080",
    "end": "307520"
  },
  {
    "text": "order to break out so one of the popular things that we would be looking for for example is high permissions within the",
    "start": "307520",
    "end": "312680"
  },
  {
    "text": "container uh like what sort of permissions and uh Linux capabilities maybe does our user have that we can uh",
    "start": "312680",
    "end": "318520"
  },
  {
    "text": "try to exploit so on this case we did not run as route we ran as a user called ad BPG admin it was quite frankly just a",
    "start": "318520",
    "end": "327720"
  },
  {
    "text": "weak user it was kind of a loser it didn't have access to anything interesting uh it didn't have any sort of permissions or capabilities that we",
    "start": "327720",
    "end": "333840"
  },
  {
    "text": "were able to exploit so that one was kind of uh a hit on the wall uh the other thing we try to look for is it",
    "start": "333840",
    "end": "339280"
  },
  {
    "text": "sort of shared Nam spaces uh do we have a p Nam space a mountain name space a network Nam space that we share with anything else that we can try to exploit",
    "start": "339280",
    "end": "345919"
  },
  {
    "text": "for our own good uh in this case we had none so nothing uh this was also uh",
    "start": "345919",
    "end": "351520"
  },
  {
    "text": "quite of a dead end another thing that we try to look for is any sort of shared uh resources uh and in this case we",
    "start": "351520",
    "end": "357800"
  },
  {
    "text": "actually found a persistent volume storage uh which was our home directory it was slome adbp jadine uh this was a",
    "start": "357800",
    "end": "365000"
  },
  {
    "text": "persistent volume storage and uh this was uh the first maybe interesting find that we found but it wasn't that",
    "start": "365000",
    "end": "370680"
  },
  {
    "text": "interesting uh because that folder was not particularly interesting folder it was just our home directory it mostly",
    "start": "370680",
    "end": "376080"
  },
  {
    "text": "contained uh the post SQL data our own database data uh which had to be persistent because you know that's the",
    "start": "376080",
    "end": "381759"
  },
  {
    "text": "service but it didn't actually give us anything meaningful so we at this point we looked at this list that you're",
    "start": "381759",
    "end": "388720"
  },
  {
    "text": "seeing behind me and we Tred to ask ourselves we took like a hard look at the mirror and try to ask ourselves so what do we have here uh and ultimately",
    "start": "388720",
    "end": "395319"
  },
  {
    "text": "the answer was nothing we didn't really have anything interesting as you can see here our user is weak we do not have any",
    "start": "395319",
    "end": "401880"
  },
  {
    "text": "shared name spaces we only have like one persistent volume storage that we don't really have anything to do without so we really did have nothing on our hands at",
    "start": "401880",
    "end": "408639"
  },
  {
    "text": "this point uh so we decided to go back to the drawing board and do what any good security researcher does best uh",
    "start": "408639",
    "end": "414720"
  },
  {
    "text": "and don't tell anyone because sort of a trade secret but what a good security researcher does a big percentage of the time is is just click on random buttons",
    "start": "414720",
    "end": "421160"
  },
  {
    "text": "of that something interesting pops up so we decided to do just that uh we went back to the Alibaba Management console",
    "start": "421160",
    "end": "426759"
  },
  {
    "text": "as you can see there are a lot of buttons going around so we decided to just click all of the buttons until something interesting will inevitably",
    "start": "426759",
    "end": "431919"
  },
  {
    "text": "pop up and then something interesting popped up uh this uh toggle that you see here is labeled SSL encryption uh and",
    "start": "431919",
    "end": "439960"
  },
  {
    "text": "right as we saw that that looked really interesting to us because SSL encryptions implies uh there that there",
    "start": "439960",
    "end": "445360"
  },
  {
    "text": "has to be some sort of SSL certificate being installed the certificate is a file and when you do all these actions",
    "start": "445360",
    "end": "450720"
  },
  {
    "text": "with files you open up lots of interesting attack surfaces like assink attacks like f system permissions all",
    "start": "450720",
    "end": "456319"
  },
  {
    "text": "these sorts of stuff this looked like an interesting direction to us so uh we clicked on that toggle and we clicked",
    "start": "456319",
    "end": "461960"
  },
  {
    "text": "okay and suddenly bam all sorts of interesting stuff started to happen within our container all these new processes started popping up uh so",
    "start": "461960",
    "end": "467560"
  },
  {
    "text": "you're like okay uh stuff is happening that's very exciting what exactly is happening uh so let's go over these processes one by one first process we",
    "start": "467560",
    "end": "474919"
  },
  {
    "text": "see here is run C in it which is very exciting because it means a new container uh is being being created it's",
    "start": "474919",
    "end": "480080"
  },
  {
    "text": "being spawned uh which is always uh always exciting to see uh but why exactly do we see that process here it's",
    "start": "480080",
    "end": "486599"
  },
  {
    "text": "a different container why exactly do we actually see the runy command well the answer is that it must mean that we",
    "start": "486599",
    "end": "492319"
  },
  {
    "text": "share the NP the mpace because we can see all the processes that running within that container it means that our container and that new container being",
    "start": "492319",
    "end": "498319"
  },
  {
    "text": "spawned share a PD space great let's move on to the second one the second one is a python script that is being run",
    "start": "498319",
    "end": "505120"
  },
  {
    "text": "from that new container uh it's running from uh a script that is on SL opt but we wanted to see that script we went to/",
    "start": "505120",
    "end": "511599"
  },
  {
    "text": "opt and that script was never there quite weird what does that mean uh well that means that we have a different",
    "start": "511599",
    "end": "518240"
  },
  {
    "text": "Mount name space uh our container SL opt and that new container SL opts are different folders uh we cannot see that",
    "start": "518240",
    "end": "523919"
  },
  {
    "text": "script that means we have different Mount name space cool moving on third uh commanding run is making a new directory",
    "start": "523919",
    "end": "530800"
  },
  {
    "text": "under our home directory under home PG admin and when we looked at that folder we saw that the folder was indeed",
    "start": "530800",
    "end": "536640"
  },
  {
    "text": "created which means we have the same SL /bg admin which means we have a shared",
    "start": "536640",
    "end": "541880"
  },
  {
    "text": "volume that's exciting we have something another thing in common with that new uh with that new container that's cool uh",
    "start": "541880",
    "end": "547000"
  },
  {
    "text": "and finally the last command that this uh script runs is the SCP command uh",
    "start": "547000",
    "end": "552360"
  },
  {
    "text": "this command actually does not run as root it runs as us it runs as the adpg admin user okay so",
    "start": "552360",
    "end": "559680"
  },
  {
    "text": "SCP what the hell is that so SCP stands for uh secure copy protocol basically",
    "start": "559680",
    "end": "565120"
  },
  {
    "text": "it's a utility for transferring files over an SSH connection between uh machines that's how Alba chose to uh",
    "start": "565120",
    "end": "570959"
  },
  {
    "text": "move the certificate from their machine to ours uh and this is interesting to us because we thought okay if there's an",
    "start": "570959",
    "end": "576279"
  },
  {
    "text": "SSH connection being created then uh SSH will have to read the SSH configuration",
    "start": "576279",
    "end": "581560"
  },
  {
    "text": "but because this runs as our user not as Ruth then the SSH configuration will be loaded from our home directory slome",
    "start": "581560",
    "end": "589040"
  },
  {
    "text": "adbp jmin so we can write an SS configuration the SCP will load it and it will listen to everything that happens inside it so we're like okay we",
    "start": "589040",
    "end": "595959"
  },
  {
    "text": "might control configuration what can we do with that so ask ourselves all these you know theories maybe we can add a new",
    "start": "595959",
    "end": "602360"
  },
  {
    "text": "library and do some sort ofo hijacking thing inject ourselves to the SSS sshd",
    "start": "602360",
    "end": "607959"
  },
  {
    "text": "process etc etc but in reality there's just a configuration called local command it takes a command and it runs it which is very very convenient uh",
    "start": "607959",
    "end": "615399"
  },
  {
    "text": "shout out to Open Stage for that amazing configuration option so basically we added this uh to our config file and",
    "start": "615399",
    "end": "621079"
  },
  {
    "text": "then uh whenever SCP runs and loads that configuration our Command will be executed so little recap we had our own",
    "start": "621079",
    "end": "628040"
  },
  {
    "text": "container the p container right nearby that we had uh the Alibaba management container uh both of those share same",
    "start": "628040",
    "end": "634200"
  },
  {
    "text": "home directory and p n space uh whenever that container will uh go to run the SCP",
    "start": "634200",
    "end": "639399"
  },
  {
    "text": "command on our container it will load our malicious s configuration and Bam now we're running code on the Alibaba",
    "start": "639399",
    "end": "644800"
  },
  {
    "text": "management container as well so what does this management container actually contain uh we're on a new machine uh we",
    "start": "644800",
    "end": "651959"
  },
  {
    "text": "try to figure out uh what exactly we're looking at here we try to look at you know W files processes whatever in this",
    "start": "651959",
    "end": "657040"
  },
  {
    "text": "case mostly files because that's the uh the thing that was different between the two containers and imagine our surprise",
    "start": "657040",
    "end": "662760"
  },
  {
    "text": "when we came across the SL run directory and saw this file right here Docker do",
    "start": "662760",
    "end": "669720"
  },
  {
    "text": "sock we all know Docker uh how Docker Works behind the scenes is basically uh you have the docker API it uh listens in",
    "start": "669720",
    "end": "677160"
  },
  {
    "text": "to get these uh all these commands like you know uh run uh create a new container create a new image spawn a new",
    "start": "677160",
    "end": "682639"
  },
  {
    "text": "blah blah blah uh and it listens to these commands and performs them uh it can listen on either a TCP connection or",
    "start": "682639",
    "end": "688320"
  },
  {
    "text": "a Unix s which is a file just like this one Docker dosak uh which means if we have access to WR of that file we can",
    "start": "688320",
    "end": "695440"
  },
  {
    "text": "write Docker API commands and the docker API is supposed to run them so we're like okay fantastic let's create a new",
    "start": "695440",
    "end": "702600"
  },
  {
    "text": "let's send a command to Docker API asking the dock API to run a new privilege container on the host run our",
    "start": "702600",
    "end": "707959"
  },
  {
    "text": "own commands on a new privilege container uh would that work well it did",
    "start": "707959",
    "end": "714320"
  },
  {
    "text": "we ran a command uh we were able to uh get a new privil container and we got a reverse sh back back uh from the kuber",
    "start": "714320",
    "end": "720519"
  },
  {
    "text": "node itself we got a new scary error message saying that it's like a production server uh so seems like we",
    "start": "720519",
    "end": "726200"
  },
  {
    "text": "were successful let's have a little recap again on how we escaped out that",
    "start": "726200",
    "end": "731279"
  },
  {
    "text": "kubernetes node we started out with executing code on our own database at Old po SQL instance from there we're",
    "start": "731279",
    "end": "737160"
  },
  {
    "text": "able to spread to this neighbor container the Alibaba management container through the SCP trip uh from",
    "start": "737160",
    "end": "744040"
  },
  {
    "text": "there we were able to access doer API create a new privilege container and once we were a privilege container we",
    "start": "744040",
    "end": "749440"
  },
  {
    "text": "had access to run code over the entire the entire kubernetes node cool so now you control the kubernetes node what",
    "start": "749440",
    "end": "755800"
  },
  {
    "text": "exactly is on that kuber node so we started looking around and we realized that uh this node did not contain",
    "start": "755800",
    "end": "761480"
  },
  {
    "text": "anything besides our own data in it we didn't see any evidence for other customers data which means that on this",
    "start": "761480",
    "end": "766959"
  },
  {
    "text": "service uh each customer database runs on a different kubernetes node basically this is the way for Al to separate between uh different",
    "start": "766959",
    "end": "773639"
  },
  {
    "text": "customers uh so that means that even after we did all this escape and we control the entire KU node we still",
    "start": "773639",
    "end": "779880"
  },
  {
    "text": "don't have any direct access to other customers data or do we so it's worth noting that",
    "start": "779880",
    "end": "788000"
  },
  {
    "text": "if you're using kubernetes uh for separation of nodes uh there is still one thing that uh keeps them together",
    "start": "788000",
    "end": "793760"
  },
  {
    "text": "although they're theoretically separate which is kubernetes itself kubernetes uh links all these nodes together through",
    "start": "793760",
    "end": "799160"
  },
  {
    "text": "the kubernetes API which sort of complicates your you know tenent isolation architecture uh so we have to show okay we're a node in a kubernetes",
    "start": "799160",
    "end": "806320"
  },
  {
    "text": "cluster we have a service account what exactly kind a service account do so we tried uh listing the pods and",
    "start": "806320",
    "end": "813320"
  },
  {
    "text": "immediately we saw that something was fishy because we did not only see our own pods but we also saw other customers pods as well uh so we realized okay this",
    "start": "813320",
    "end": "820399"
  },
  {
    "text": "might be a strong service account what else can we do uh besides seeing the pods we're also able to see all the images that we used to create all the",
    "start": "820399",
    "end": "826959"
  },
  {
    "text": "spots basically all the uh the the templates uh I used to create them uh and the more interesting thing is that",
    "start": "826959",
    "end": "833079"
  },
  {
    "text": "all these images used the same uh secret a Docker image pool Secret uh there were",
    "start": "833079",
    "end": "839519"
  },
  {
    "text": "basically the credentials uh for Docker to log into the container regustry and fetch images uh so we had access to that",
    "start": "839519",
    "end": "844759"
  },
  {
    "text": "secret meaning we had credentials to log into alibaba's internal Docker container registry so we were like okay we have",
    "start": "844759",
    "end": "850440"
  },
  {
    "text": "credal Docker registry what sort of credentials are they exactly so we decided to uh check uh what sort of",
    "start": "850440",
    "end": "855839"
  },
  {
    "text": "access token we get when using these credentials uh we got this access token and if you have very sharp vision from",
    "start": "855839",
    "end": "862639"
  },
  {
    "text": "right there at the crowd you might notice uh that this token did not only allow pull but also push permissions",
    "start": "862639",
    "end": "869160"
  },
  {
    "text": "meaning that we can push we can take our own images and push them into the internal container registry uh and",
    "start": "869160",
    "end": "875360"
  },
  {
    "text": "basically Poison every single image internal image on Al Cloud whether it be our own service different Services",
    "start": "875360",
    "end": "881199"
  },
  {
    "text": "insert whatever you know malware or custom code that we want to run and every single image on Alibaba Cloud",
    "start": "881199",
    "end": "886279"
  },
  {
    "text": "every single container on alibab cloud that is Created from that image will run our own code in it okay A little recap",
    "start": "886279",
    "end": "892959"
  },
  {
    "text": "it's going to be nice video nice video so uh we start out us as an attacker",
    "start": "892959",
    "end": "899079"
  },
  {
    "text": "with our own pus SQL instance uh we managed to run code on that uh with the pus SQL vulnerability and from there we",
    "start": "899079",
    "end": "905839"
  },
  {
    "text": "were able to escape uh to the underlying node run code on the underlying kubernetes node once we had access to",
    "start": "905839",
    "end": "911079"
  },
  {
    "text": "that node we had access to communicate with the kubernetes API server so we managed to fetch uh the docker image",
    "start": "911079",
    "end": "916560"
  },
  {
    "text": "pool secret using that secret we connected to alibaba's internal Docker container registry and we were able to",
    "start": "916560",
    "end": "923560"
  },
  {
    "text": "push our own malicious image and then that image would be pulled by every other",
    "start": "923560",
    "end": "929399"
  },
  {
    "text": "analytic DB on Alibaba and not only that it will also be pulled by a myriad of other Alibaba services for example app",
    "start": "929399",
    "end": "936639"
  },
  {
    "text": "DB that we talked about will also pull their images from our uh control jeny and we will be able to basically run our",
    "start": "936639",
    "end": "942800"
  },
  {
    "text": "arbitary code on every single one of them all",
    "start": "942800",
    "end": "948120"
  },
  {
    "text": "right so we talked about analytic DB let's also talk a little bit about absera the",
    "start": "948120",
    "end": "954639"
  },
  {
    "text": "other uh database service that Alibaba provides so so EPS DB RDS uh how are we",
    "start": "954639",
    "end": "961040"
  },
  {
    "text": "able to escape from that one too so it was kind of similar but uh also not uh",
    "start": "961040",
    "end": "967079"
  },
  {
    "text": "we started out with the same you know same exact vulnerability we were able to run code on our uh prus SQL instance",
    "start": "967079",
    "end": "973360"
  },
  {
    "text": "from there we were able to similarly escape to a Alibaba management container",
    "start": "973360",
    "end": "978680"
  },
  {
    "text": "however this time this management container was in itself a privileged do container so we didn't have to do you know any extra steps we were all the",
    "start": "978680",
    "end": "985160"
  },
  {
    "text": "privileged so we were able to take over the entire kubernetes node uh so now we're on a different kubernetes node it's a different service",
    "start": "985160",
    "end": "991560"
  },
  {
    "text": "it's different infrastructure and we start to look around trying to figure out you know what does this node have what exactly does it control uh and",
    "start": "991560",
    "end": "998319"
  },
  {
    "text": "imagine our surprise uh when we looked around and saw tons of other customers",
    "start": "998319",
    "end": "1003839"
  },
  {
    "text": "databases on the exact same node meaning that on abser DB Alibaba does not separate between customers node it only",
    "start": "1003839",
    "end": "1011399"
  },
  {
    "text": "separates between pods so as a minute the the minute that we managed to escape to the kubernetes node we we were already able to access other customers",
    "start": "1011399",
    "end": "1017800"
  },
  {
    "text": "databases so uh those are basically uh the vulnerabilties we found in both poql",
    "start": "1017800",
    "end": "1024400"
  },
  {
    "text": "services in alibo Cloud we reported all of them to Ala they responded very professionally and they applied multiple",
    "start": "1024400",
    "end": "1030360"
  },
  {
    "text": "fixes first of all they fixed all the uh vulnerabilities and misconfiguration that we just talked about uh obviously",
    "start": "1030360",
    "end": "1037319"
  },
  {
    "text": "uh they also uh interestingly uh created a new uh internal internally developed",
    "start": "1037319",
    "end": "1042480"
  },
  {
    "text": "safe container technology similar to Google's gvisor but Alibaba internal one uh they applied to all those containers",
    "start": "1042480",
    "end": "1048520"
  },
  {
    "text": "uh as a manner to harden them basically make it harder for people to escape out of those containers uh and finally they",
    "start": "1048520",
    "end": "1054080"
  },
  {
    "text": "also restricted and scoped uh the nodes permission the service accounts permission within the kubernetes cluster",
    "start": "1054080",
    "end": "1059440"
  },
  {
    "text": "and also obviously the container registry permissions so that people uh won't have right access anymore uh all",
    "start": "1059440",
    "end": "1065919"
  },
  {
    "text": "right let's talk a little bit about what went wrong here exactly what sort of mistakes and bugs were we able to exploit here in order to get these",
    "start": "1065919",
    "end": "1073039"
  },
  {
    "text": "permissions the first mistake that happens here is first of all the unsafe na space sharing between our container",
    "start": "1073039",
    "end": "1079799"
  },
  {
    "text": "and the other container uh basically whenever you share a network name space a p name space Mount name space uh",
    "start": "1079799",
    "end": "1085880"
  },
  {
    "text": "between a weaker container and a stronger container you're inherently weakening the container security because",
    "start": "1085880",
    "end": "1091360"
  },
  {
    "text": "you're uh making the attack surface bigger uh whenever you intervie with on container you should know it's obviously",
    "start": "1091360",
    "end": "1097200"
  },
  {
    "text": "a risky thing to do you should do it with Extreme Caution and with low privileges as possible uh the second",
    "start": "1097200",
    "end": "1102720"
  },
  {
    "text": "mistake Happening Here is using the container as the sole security barrier between uh customers between different",
    "start": "1102720",
    "end": "1109480"
  },
  {
    "text": "tenants uh whenever you use container as a security barrier you should be aware of what exactly is needed for an",
    "start": "1109480",
    "end": "1114960"
  },
  {
    "text": "attacker to bypass that security barrier and when you're using containers uh you're first of all prone to any sort of",
    "start": "1114960",
    "end": "1120280"
  },
  {
    "text": "misconfiguration on USF resource sharing uh which is exactly what you saw here today uh but not only that it's also",
    "start": "1120280",
    "end": "1125400"
  },
  {
    "text": "worth mentioning that uh when you use a container as a security mechanism you're also exposed to any Linux Kel vulnerabilities uh because Linux Kel is",
    "start": "1125400",
    "end": "1132600"
  },
  {
    "text": "the one that is responsible for basically enforcing uh those policies uh that means that whenever there is an",
    "start": "1132600",
    "end": "1138760"
  },
  {
    "text": "vulnerability a one day uh that is not that uncommon in today's world uh whenever you manage to run Cod on the",
    "start": "1138760",
    "end": "1144520"
  },
  {
    "text": "Kernel you're also able to escape from the container so all the attacker needs to do to bypass that security barrier is",
    "start": "1144520",
    "end": "1149799"
  },
  {
    "text": "one of those two things uh so it's worth mentioning uh worth mentioning that when choosing security barriers what exactly",
    "start": "1149799",
    "end": "1154840"
  },
  {
    "text": "is needed for a skilled attacker to bypass them which is in that case not necessarily that much uh third thing we wrong here is the",
    "start": "1154840",
    "end": "1162679"
  },
  {
    "text": "strong Docker registry credentials which also had uh right permissions uh it's worth mentioning when you create a",
    "start": "1162679",
    "end": "1167760"
  },
  {
    "text": "secret that is uh that powerful that any service account that has you know secret permissions po permissions within the",
    "start": "1167760",
    "end": "1173679"
  },
  {
    "text": "kubernetes environment can potentially obtain them uh and whenever it's obtained they can pose kind of unique",
    "start": "1173679",
    "end": "1179720"
  },
  {
    "text": "risk that crosses different environments because uh you know both uh Productions of environment de environment build test",
    "start": "1179720",
    "end": "1186360"
  },
  {
    "text": "and even developers workstations all those people are pulling images in order to work so whenever you can uh control a",
    "start": "1186360",
    "end": "1194080"
  },
  {
    "text": "uh internal container registry uh it allows you to spread within all these different environments which normally an",
    "start": "1194080",
    "end": "1199120"
  },
  {
    "text": "attacker wouldn't be able to do so easily uh if you're interested in uh T isolation in general uh there's a great",
    "start": "1199120",
    "end": "1205039"
  },
  {
    "text": "resource that I highly recommend it's called Peach uh it's basically an open source framework uh that is used for",
    "start": "1205039",
    "end": "1210720"
  },
  {
    "text": "modeling and Improvement standardization in SAS and pass applications uh it was developed with the help of excellent",
    "start": "1210720",
    "end": "1216360"
  },
  {
    "text": "people from great companies such as yourself so contributors are always appreciated uh if you're uh working with",
    "start": "1216360",
    "end": "1221520"
  },
  {
    "text": "multi Talent environments or even creating multi environments I think it's a very good uh research to consult with in order to make sure that you're uh",
    "start": "1221520",
    "end": "1227520"
  },
  {
    "text": "separating things properly uh and also if you know things that uh we don't then uh contributions are very appreciated",
    "start": "1227520",
    "end": "1233480"
  },
  {
    "text": "it's available at peach. wiio if you're interested in reading more if you're interested in uh This research more uh",
    "start": "1233480",
    "end": "1240039"
  },
  {
    "text": "just know that basically what what I told you here today was kind of just the tip of the iceberg uh we have a very detailed blog about uh all the uh",
    "start": "1240039",
    "end": "1247360"
  },
  {
    "text": "vulnerabilities and stuff that I didn't even uh get to touch on uh on it's called broken Sesame it's the top QR",
    "start": "1247360",
    "end": "1253120"
  },
  {
    "text": "code here uh and if you're uh if you like that then we also had a very similar research on IBM Cloud on a",
    "start": "1253120",
    "end": "1258480"
  },
  {
    "text": "different cloud provider where we also were able to do some sort of supply chain poisoning That's the bottom QR code uh right here uh highly recommended",
    "start": "1258480",
    "end": "1265600"
  },
  {
    "text": "read broken system and hell's keychain all right uh let's things up with some",
    "start": "1265600",
    "end": "1271360"
  },
  {
    "text": "takeaways first of all uh it's worth noting that whenever you introduce uh kubernetes uh kubernetes cluster",
    "start": "1271360",
    "end": "1277440"
  },
  {
    "text": "kubernetes uh pods to a multi-tenant environment it sort of complicates your security model because it provides",
    "start": "1277440",
    "end": "1282919"
  },
  {
    "text": "additional attack surface uh it provides uh the attacker with access to stuff like uh identity service Cal share",
    "start": "1282919",
    "end": "1288919"
  },
  {
    "text": "resources network resources uh that are all that are always uh uh better for you",
    "start": "1288919",
    "end": "1294760"
  },
  {
    "text": "know expanding your attack surface uh so it's not it doesn't mean that you should never introduce kubernetes to multi tent",
    "start": "1294760",
    "end": "1300480"
  },
  {
    "text": "uh security environment but you should be aware of the risk that it poses and the new attack surface that it creates",
    "start": "1300480",
    "end": "1306440"
  },
  {
    "text": "uh the second thing is that containers uh should never be the sole security barrier it should never be the only line of defense uh because it can be broken",
    "start": "1306440",
    "end": "1312640"
  },
  {
    "text": "with as we saw today stuff that doesn't necessarily require a super skilled attacker it can be a line of the defense",
    "start": "1312640",
    "end": "1318279"
  },
  {
    "text": "but it shouldn't be the only one and another thing that is worth mentioning that is whenever you use containers as a",
    "start": "1318279",
    "end": "1323640"
  },
  {
    "text": "security barrier you should definitely take a look into sa container Technologies Google has a uh a very uh a",
    "start": "1323640",
    "end": "1331000"
  },
  {
    "text": "very good project in my opinion called gvisor uh it's basically uh sort of a safe container solution to help make a",
    "start": "1331000",
    "end": "1337919"
  },
  {
    "text": "very hardened container stuff that is uh much harder to escape from than uh a non-h hardened one uh so if you're using",
    "start": "1337919",
    "end": "1344039"
  },
  {
    "text": "containers in security Bea you might as well make them hardened uh and finally this sort of a generic takeway but it's",
    "start": "1344039",
    "end": "1349520"
  },
  {
    "text": "also very relevant here uh pentest your internal environments uh assume that people when gain access to uh customer",
    "start": "1349520",
    "end": "1355320"
  },
  {
    "text": "pods and start to work your way up from there to start uh to try to see what an accur will might be able to see uh let's",
    "start": "1355320",
    "end": "1361760"
  },
  {
    "text": "hope that it won't be an access to overwrite every single image on your internal container industry all right",
    "start": "1361760",
    "end": "1368440"
  },
  {
    "text": "thank you very much any [Applause]",
    "start": "1368440",
    "end": "1374920"
  },
  {
    "text": "questions thank you uh if anyone has any questions you can ah you can go to the uh the",
    "start": "1376559",
    "end": "1381679"
  },
  {
    "text": "microphone just out of curiosity why was the docker socket available in that image that you uh that you were shared",
    "start": "1381679",
    "end": "1388159"
  },
  {
    "text": "with like uh that's a good question uh I can't really explain to why because you know I didn't really build that",
    "start": "1388159",
    "end": "1393320"
  },
  {
    "text": "environment but uh I think that because it was so many hops inside it was a more",
    "start": "1393320",
    "end": "1398720"
  },
  {
    "text": "trusted you know environment uh like in the second case it was even more of a trusted environment because even the",
    "start": "1398720",
    "end": "1404120"
  },
  {
    "text": "management container wasn't itself privileged uh you know it was uh I think think that uh a lots of times people",
    "start": "1404120",
    "end": "1409360"
  },
  {
    "text": "assume that as as long as uh you're uh the stuff you're building is more internal is more uh business internal",
    "start": "1409360",
    "end": "1416200"
  },
  {
    "text": "then it won't be it doesn't have to be as hardened uh but that's always a mistake because it's you know it's",
    "start": "1416200",
    "end": "1421320"
  },
  {
    "text": "always barriers upon barriers right uh whenever the first barrier is broken and you get the second one then you have to",
    "start": "1421320",
    "end": "1426720"
  },
  {
    "text": "make new defenses uh so I can only assume that's the why when you pushed to ECR was there no",
    "start": "1426720",
    "end": "1434360"
  },
  {
    "text": "audit that would have caught that unauthorized access um um that's a good question um we did not obviously push",
    "start": "1434360",
    "end": "1442320"
  },
  {
    "text": "any sort of Mal we just uh basically we just tested our login and managed to",
    "start": "1442320",
    "end": "1447880"
  },
  {
    "text": "managed to see that our token had uh pull push access uh we later talked to Alibaba and they confirmed that it was",
    "start": "1447880",
    "end": "1454080"
  },
  {
    "text": "indeed uh push access like just like we thought we were able to overwrite all the files but we didn't actually uh try",
    "start": "1454080",
    "end": "1459320"
  },
  {
    "text": "to do that in real life because that would be uh you know that that might be actually dangerous and we don't want to damage the uh the actual production",
    "start": "1459320",
    "end": "1465000"
  },
  {
    "text": "environment of Alibaba uh but yeah uh they also interestingly enough uh they said uh that during our research uh",
    "start": "1465000",
    "end": "1471919"
  },
  {
    "text": "there was um some sort of alert going on on a very specific part of the intervent",
    "start": "1471919",
    "end": "1478600"
  },
  {
    "text": "which was the uh uh the pascus SQL uh code execution uh they said that this is",
    "start": "1478600",
    "end": "1483799"
  },
  {
    "text": "the part that they noticed uh when we uh started doing basically our entire uh our entire thing there but we got rid of",
    "start": "1483799",
    "end": "1489760"
  },
  {
    "text": "that pretty quickly uh like even after running code on the procress we uh managed to go to you know to the N to to",
    "start": "1489760",
    "end": "1495760"
  },
  {
    "text": "uh sorry to the other container and to uh the the C8 is not so we didn't really uh need that afterwards but they said that this was the part that they noticed",
    "start": "1495760",
    "end": "1502600"
  },
  {
    "text": "internally thank you thank you and you mentioned uh you did it pretty quickly",
    "start": "1502600",
    "end": "1507919"
  },
  {
    "text": "but like how quickly is it like days hours uh uh not hours uh but yeah it was",
    "start": "1507919",
    "end": "1513080"
  },
  {
    "text": "uh it was days pretty much it was like um I think uh like a week plus minus",
    "start": "1513080",
    "end": "1518679"
  },
  {
    "text": "yeah that entire like uh story thank you thank",
    "start": "1518679",
    "end": "1523600"
  },
  {
    "text": "you thank you a great talk uh you did mention that there was an alert right uh",
    "start": "1526679",
    "end": "1532960"
  },
  {
    "text": "what would have the incident responders do that would have stopped you like they",
    "start": "1532960",
    "end": "1539279"
  },
  {
    "text": "got alert now could they have taken your role I don't know like you have already",
    "start": "1539279",
    "end": "1545279"
  },
  {
    "text": "controlled the kuber cluster so what action could they have taken to kind of break your uh steps thank you uh that's",
    "start": "1545279",
    "end": "1553360"
  },
  {
    "text": "a great question uh I think that uh when when they said that what they noticed was the postl code execution that uh",
    "start": "1553360",
    "end": "1560120"
  },
  {
    "text": "that means that they can fix it you know they can uh try to and they did fix it eventually of course uh you could try to",
    "start": "1560120",
    "end": "1566000"
  },
  {
    "text": "you know limit the post kill permissions you can try to even close the code execution uh vulnerability entirely uh",
    "start": "1566000",
    "end": "1572520"
  },
  {
    "text": "but the thing is that that point uh whenever you uh you know at that point that uh they noticed us at this point we",
    "start": "1572520",
    "end": "1578600"
  },
  {
    "text": "were already pretty deep in right we managed to get rid of the post SQL as a necessity because we're already the",
    "start": "1578600",
    "end": "1584039"
  },
  {
    "text": "running on the Node uh so at that point I think the thing to do is after you know you Passat the vulnerability and",
    "start": "1584039",
    "end": "1590360"
  },
  {
    "text": "you maybe close the exit to actually try to uh consult your uh IR solutions to",
    "start": "1590360",
    "end": "1595399"
  },
  {
    "text": "see what sort of stuff do we manage to do after running cod in the post skill because uh it's naive to think that",
    "start": "1595399",
    "end": "1601200"
  },
  {
    "text": "whatever this this first D of defense is breached that this is the last thing we did right uh we must have done something",
    "start": "1601200",
    "end": "1606840"
  },
  {
    "text": "else so if they were able to see all the commands that we run and all the things that we moved laterally uh they were able to maybe catch up uh the stuff that",
    "start": "1606840",
    "end": "1613440"
  },
  {
    "text": "we did after and try to close all the rest of the stuff that we did after this I don't know if they were able to G to that conclusion before we reported it to",
    "start": "1613440",
    "end": "1619919"
  },
  {
    "text": "them because in this case we reported it to them uh but it's a good question what happens when you know when a bad guy does this how how will they be able to",
    "start": "1619919",
    "end": "1626279"
  },
  {
    "text": "track the process that happens after pogus because pogus is not is not enough to close justce one for libility so I'm",
    "start": "1626279",
    "end": "1633039"
  },
  {
    "text": "just think interesting discussion there hey um I've got a question",
    "start": "1633039",
    "end": "1638600"
  },
  {
    "text": "that sort of post Chris extended when you've got a basically a single tenant service that you're scaling to multi-",
    "start": "1638600",
    "end": "1644880"
  },
  {
    "text": "tenants yeah and what's the best practice for isolation so clearly pod-based isolation unless if you really",
    "start": "1644880",
    "end": "1651440"
  },
  {
    "text": "know what you're doing and are also lucky that's a dangerous path uh node base isolation um also you pointed out",
    "start": "1651440",
    "end": "1658880"
  },
  {
    "text": "has problems separate clusters separate projects if you're on a hyperscaler and like separate gcp projects or or where",
    "start": "1658880",
    "end": "1665000"
  },
  {
    "text": "do you where do you think that line is on on where the isolation should be uh that's a good question I think that",
    "start": "1665000",
    "end": "1670720"
  },
  {
    "text": "whenever you introduce like a a security barrier or sort of a you know something that separates between something and",
    "start": "1670720",
    "end": "1676320"
  },
  {
    "text": "another uh you need what you need to think is what uh what is needed to break",
    "start": "1676320",
    "end": "1681519"
  },
  {
    "text": "that isolation because there there's always something that you can do to break that isolation if it's a kubernetes cluster then you would have",
    "start": "1681519",
    "end": "1687080"
  },
  {
    "text": "to you know have permissions within the kubernetes cluster you have to have a privileg service account etc etc if it's",
    "start": "1687080",
    "end": "1692559"
  },
  {
    "text": "for example a a an actual VM right a virtual machine then you uh it's not",
    "start": "1692559",
    "end": "1697720"
  },
  {
    "text": "it's still not unbreakable you would just have to have a guest to host uh vulnerability uh which is might be",
    "start": "1697720",
    "end": "1703320"
  },
  {
    "text": "harder to to find than a uh Lal vulnerability just by Jud in one days that are coming out uh and even if you",
    "start": "1703320",
    "end": "1710240"
  },
  {
    "text": "have you know let's go for the craziest part you have two uh physical machines that are connected you know actual uh",
    "start": "1710240",
    "end": "1716600"
  },
  {
    "text": "pizza boxes connected to uh uh you know sockets uh even then you would have probably some sort of network access",
    "start": "1716600",
    "end": "1723240"
  },
  {
    "text": "between and even then you could you know I don't know uh plug USB into one of them right uh but I think that what you",
    "start": "1723240",
    "end": "1729320"
  },
  {
    "text": "have to uh consider is like uh how hard would you want it to be for an attacker to uh break out and what exactly does an",
    "start": "1729320",
    "end": "1736039"
  },
  {
    "text": "attacker need to have in order order to break out because there will be there will always be something it will be a l",
    "start": "1736039",
    "end": "1741840"
  },
  {
    "text": "external vulnerability will it be a misconfiguration a guest to host vulnerability etc etc and as long as you go further deep it will might be more",
    "start": "1741840",
    "end": "1748480"
  },
  {
    "text": "hard to maintain and more costly but it will also be harder to break off right and that's I think the tradeoff like the",
    "start": "1748480",
    "end": "1753519"
  },
  {
    "text": "cat and mouse game here thank you thank you hey just a little continuation on the",
    "start": "1753519",
    "end": "1760679"
  },
  {
    "text": "the monitoring question there so you you mentioned obviously it's important to to follow up on that stuff um but any sort",
    "start": "1760679",
    "end": "1767640"
  },
  {
    "text": "guidelines surrounding that you know as far as you know are there do we know if there are you know projects within cncf or anything else kind of you",
    "start": "1767640",
    "end": "1774559"
  },
  {
    "text": "know inevitably we will screw up you know the integration everything else right so it's good to have best",
    "start": "1774559",
    "end": "1779799"
  },
  {
    "text": "practices but you know can we attack it from both sides and say well you know we're going to do the best they configure it but we're also going to",
    "start": "1779799",
    "end": "1784919"
  },
  {
    "text": "make sure that we're you know monitoring have the observability in place so that we you know because you would notice",
    "start": "1784919",
    "end": "1789960"
  },
  {
    "text": "that they saw it but it didn't sound like they had enough in place to really maybe see it fast enough or follow",
    "start": "1789960",
    "end": "1795840"
  },
  {
    "text": "through right so any recommendations from that end that are more kind of you",
    "start": "1795840",
    "end": "1801000"
  },
  {
    "text": "know standardized or tools um aside from just you know uh do it",
    "start": "1801000",
    "end": "1806039"
  },
  {
    "text": "better uh that's a great question honestly uh I think that generally in security when you try to build a secure",
    "start": "1806039",
    "end": "1812120"
  },
  {
    "text": "environment you have to do both things right you have to uh both prevent and also like uh both prevent and monitor uh",
    "start": "1812120",
    "end": "1820399"
  },
  {
    "text": "you want to prevent by building uh I think that uh framework the peach framework is a great resource for for",
    "start": "1820399",
    "end": "1826200"
  },
  {
    "text": "preventing for designing like better more secure systems uh but in in addition to uh in addition to that you",
    "start": "1826200",
    "end": "1832559"
  },
  {
    "text": "also have to mod uh very well uh and I think uh in this case uh the stuff that I don't have like a specific tool in",
    "start": "1832559",
    "end": "1838519"
  },
  {
    "text": "mind but I think in this case uh the sort of stuff that would have maybe caught us is uh both uh stuff that",
    "start": "1838519",
    "end": "1844760"
  },
  {
    "text": "monitors are like processes being created uh like if you had like for example a log of every single you know",
    "start": "1844760",
    "end": "1849960"
  },
  {
    "text": "process being created you might have seen like all the stuff that we were running on the container uh another thing that might have uh like caught the",
    "start": "1849960",
    "end": "1855919"
  },
  {
    "text": "eye of someone is uh you know network based uh network based uh monitoring",
    "start": "1855919",
    "end": "1862039"
  },
  {
    "text": "because uh we did make you know network connections we did make in our case you know reverse shells and you suddenly see",
    "start": "1862039",
    "end": "1867320"
  },
  {
    "text": "you know a reverse shell coming out of the postgress instance but then again you see it coming out of the management container and then you see another",
    "start": "1867320",
    "end": "1872519"
  },
  {
    "text": "reverse shell coming out of the kubernetes cluster uh the kubernetes node uh sorry uh so Network base uh",
    "start": "1872519",
    "end": "1878039"
  },
  {
    "text": "detection would probably caught what we were doing as well uh unfortunately I don't have like a tool off the top of my",
    "start": "1878039",
    "end": "1884600"
  },
  {
    "text": "uh off the top of my head but it's both important to as you said uh both Monitor and uh protect and defend thank you",
    "start": "1884600",
    "end": "1891840"
  },
  {
    "text": "thank you all right thank you very much if you have any other question feel free to",
    "start": "1891840",
    "end": "1897960"
  },
  {
    "text": "just come up uh or like send me a message on Twitter whatever you uh whatever you feel more comfortable uh",
    "start": "1897960",
    "end": "1903159"
  },
  {
    "text": "and thank you very much for coming thank you very much for having me appreciate [Applause] it",
    "start": "1903159",
    "end": "1910000"
  }
]