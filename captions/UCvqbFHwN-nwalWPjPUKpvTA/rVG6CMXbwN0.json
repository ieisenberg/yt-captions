[
  {
    "text": "in this session I will introduce how to use clust API Med CBE and clust scaler",
    "start": "160",
    "end": "5600"
  },
  {
    "text": "to scale on PR per kuet clusters um this the contents of this",
    "start": "5600",
    "end": "13000"
  },
  {
    "text": "presentation um pretty repeated with the previous one",
    "start": "13000",
    "end": "19920"
  },
  {
    "text": "so you know okay my name is shuk I work for fits and currently focus on bomal",
    "start": "19920",
    "end": "27400"
  },
  {
    "text": "provisioning uh on kuet and uh today's content first is some",
    "start": "27400",
    "end": "33960"
  },
  {
    "text": "background and then I will introduce a how the three projects work uh how to",
    "start": "33960",
    "end": "39480"
  },
  {
    "text": "use them and finally show you a demo okay the background uh nowadays we",
    "start": "39480",
    "end": "47360"
  },
  {
    "text": "still need um prmit for some reasons like need for full control of the entire",
    "start": "47360",
    "end": "53280"
  },
  {
    "text": "uh entire environment or need for some specific uh level of security and privacy or maybe the compliance",
    "start": "53280",
    "end": "61199"
  },
  {
    "text": "requirements uh but we all know that managing an un uh unem environment can",
    "start": "61199",
    "end": "67560"
  },
  {
    "text": "be very tedious because we need to do everything by ourself so how could we",
    "start": "67560",
    "end": "73080"
  },
  {
    "text": "reduce the operation cost and uh as here we are at Cub day the solution I want to",
    "start": "73080",
    "end": "80360"
  },
  {
    "text": "introduce today is a cattive way uh combining clust API uh met Cube Dio and",
    "start": "80360",
    "end": "87520"
  },
  {
    "text": "clust scaler to automatically create and manage kubernetes clusters which are provisioned by bomet",
    "start": "87520",
    "end": "94799"
  },
  {
    "text": "servers so kubernetes we we are all very familiar with is a great tool for",
    "start": "94799",
    "end": "101520"
  },
  {
    "text": "deploying applications and the rest three projects are um can be used to",
    "start": "101520",
    "end": "106719"
  },
  {
    "text": "manage the uh infrastructure the first is clust API it",
    "start": "106719",
    "end": "112799"
  },
  {
    "text": "extends kubernetes API to create and manage the kubernetes Clusters and it is",
    "start": "112799",
    "end": "118759"
  },
  {
    "text": "a kubernetes Comm sub projects created by C cluster life cycle it also runs on",
    "start": "118759",
    "end": "125360"
  },
  {
    "text": "kubernetes cluster and that cluster is called management cluster uh the cluster",
    "start": "125360",
    "end": "130640"
  },
  {
    "text": "is created by and managed by cluster API is called workload cluster then and the",
    "start": "130640",
    "end": "136400"
  },
  {
    "text": "infrastructure can be a cloud or bom metal uh but no matter what infr uh",
    "start": "136400",
    "end": "142120"
  },
  {
    "text": "infrastructure is used uh there must exist an infrastructure provider",
    "start": "142120",
    "end": "147440"
  },
  {
    "text": "component that Provisions machines and Network works for our clusters and for bomal uh met Cube dial",
    "start": "147440",
    "end": "155879"
  },
  {
    "text": "can be that provider uh it is a bomal provisioning tool for CES uh with it we can install",
    "start": "155879",
    "end": "164400"
  },
  {
    "text": "os2 bomal server in the kubernetes way and the last one is cluster of",
    "start": "164400",
    "end": "171640"
  },
  {
    "text": "scaler which adjusts the size of a cluster of a cluster uh according to the",
    "start": "171640",
    "end": "177640"
  },
  {
    "text": "workload and uh using with clust API it watches a workload cluster and send",
    "start": "177640",
    "end": "184560"
  },
  {
    "text": "scale request to clust API when necessary and combine the the three",
    "start": "184560",
    "end": "190599"
  },
  {
    "text": "projects we can automatically create a manage and scale of B metal kuet",
    "start": "190599",
    "end": "196959"
  },
  {
    "text": "clusters okay now before talking about the details of the three uh projects",
    "start": "196959",
    "end": "202920"
  },
  {
    "text": "there's a little bit background knowledge although I believe that everyone is very familiar with which is",
    "start": "202920",
    "end": "210680"
  },
  {
    "text": "uh the way in which kubernetes works okay kubernetes use these objects to",
    "start": "210680",
    "end": "217319"
  },
  {
    "text": "describe the state of the system and controllers to uh watch those objects",
    "start": "217319",
    "end": "224000"
  },
  {
    "text": "and uh make the desired State happen so this is the fundamental mechanism of",
    "start": "224000",
    "end": "230840"
  },
  {
    "text": "kues and uh we also know that kuat provides a easy way to extend its API",
    "start": "230840",
    "end": "237840"
  },
  {
    "text": "which is CD and the custom resource definition with CD uh kubernetes can",
    "start": "237840",
    "end": "244560"
  },
  {
    "text": "understand the new kind of objects and then uh combined with custom controllers",
    "start": "244560",
    "end": "251000"
  },
  {
    "text": "to control those new objects uh we can make kuet to uh what we",
    "start": "251000",
    "end": "256440"
  },
  {
    "text": "want so the projects we are talking about today also use this",
    "start": "256440",
    "end": "261799"
  },
  {
    "text": "mechanism and okay with uh keeping this in mind let's go further about how the",
    "start": "261800",
    "end": "267880"
  },
  {
    "text": "three projects work the the first is clust",
    "start": "267880",
    "end": "272800"
  },
  {
    "text": "API again clust API extends kubernetes API to create and uh uh manage KU",
    "start": "273000",
    "end": "280479"
  },
  {
    "text": "cluster and to do this job cluster API first defines two new",
    "start": "280479",
    "end": "286919"
  },
  {
    "text": "crds uh the cluster and the Machine the cluster which represents a workload",
    "start": "286919",
    "end": "292440"
  },
  {
    "text": "cluster and the Machine represents a infrastructure component hosting a",
    "start": "292440",
    "end": "297840"
  },
  {
    "text": "kubernetes node and and that component can be a virtual machine B metal or even",
    "start": "297840",
    "end": "304400"
  },
  {
    "text": "a container which works like a machine with these two objects we can describe",
    "start": "304400",
    "end": "310479"
  },
  {
    "text": "the basic state of our cluster and next we need some controllers to watch these",
    "start": "310479",
    "end": "316919"
  },
  {
    "text": "objects and request resources from infrastructure and boot machines into",
    "start": "316919",
    "end": "322600"
  },
  {
    "text": "kubernetes nodes and to decouple from the infrastructure specific Logic the",
    "start": "322600",
    "end": "328080"
  },
  {
    "text": "cluster API uses the idea of Provider there are three providers",
    "start": "328080",
    "end": "334600"
  },
  {
    "text": "defined here the infrastructure provider control plan provider and bootstrap",
    "start": "334600",
    "end": "339720"
  },
  {
    "text": "provider the infrastructure provider is responsible for requesting resources",
    "start": "339720",
    "end": "344960"
  },
  {
    "text": "from infrastructure and met Cube Dio is an infrastructure provider and the bootstrap provider",
    "start": "344960",
    "end": "352479"
  },
  {
    "text": "provides data to a machine for bootstrapping it into a cat node and the control plan provider is used to create",
    "start": "352479",
    "end": "359479"
  },
  {
    "text": "a in plan for our uh cluster now each uh provider needs to",
    "start": "359479",
    "end": "364880"
  },
  {
    "text": "Define some CDs and Implement related controllers so that uh the cluster and",
    "start": "364880",
    "end": "370360"
  },
  {
    "text": "the Machine object just need to interact with the those uh infrastruct those",
    "start": "370360",
    "end": "375680"
  },
  {
    "text": "provider series and do not need to worry about any detail provider specific logic",
    "start": "375680",
    "end": "383120"
  },
  {
    "text": "by the way the A blue arrow in the image here means the reference ref to another",
    "start": "383120",
    "end": "390720"
  },
  {
    "text": "object and the black one means the creating or modifying an",
    "start": "390720",
    "end": "397478"
  },
  {
    "text": "object the cluster uh object contains the intercluster network configuration",
    "start": "397960",
    "end": "403360"
  },
  {
    "text": "like Port cider or Surface cider and also references to the infrastructure uh",
    "start": "403360",
    "end": "408880"
  },
  {
    "text": "cluster and control plan objects and then the infrastructure",
    "start": "408880",
    "end": "414720"
  },
  {
    "text": "cluster object contains information about the infrastructure network uh which the cluster run on and also some",
    "start": "414720",
    "end": "422400"
  },
  {
    "text": "other configuration for our cluster and uh here the example here I used is uh",
    "start": "422400",
    "end": "428160"
  },
  {
    "text": "very specific to met Cube Dio and the control plan uh object",
    "start": "428160",
    "end": "434680"
  },
  {
    "text": "contains templates of infrastructure machine and bootstop config object and",
    "start": "434680",
    "end": "440360"
  },
  {
    "text": "uh the those templates will be used to create those uh",
    "start": "440360",
    "end": "446800"
  },
  {
    "text": "objects and uh and infrastructure machine object represents a machine on the specific infrastructure it contains",
    "start": "447639",
    "end": "455280"
  },
  {
    "text": "information for the controller to request the machine from the specific infrastructure and then provisioning and",
    "start": "455280",
    "end": "462319"
  },
  {
    "text": "bootstrapping it into a kubernets node the bootstrap part information is actually from a secret generated from",
    "start": "462319",
    "end": "469759"
  },
  {
    "text": "the bootstrap config object okay the bootstrap config object",
    "start": "469759",
    "end": "476400"
  },
  {
    "text": "contains information about how to bootstrap a server into kubernetes Noe usually through cloud in it and the",
    "start": "476400",
    "end": "482800"
  },
  {
    "text": "secret storing those data will be generated and referred by the infrastructure machine",
    "start": "482800",
    "end": "489319"
  },
  {
    "text": "object and the last is the machine object it contains the references to the",
    "start": "489319",
    "end": "495759"
  },
  {
    "text": "infrastructure machine object and bootstop config object and also it has",
    "start": "495759",
    "end": "501400"
  },
  {
    "text": "uh it knows the name of the cluster which it belongs to and there are many other studies defined in this",
    "start": "501400",
    "end": "507879"
  },
  {
    "text": "architecture but to create a kuet control plan we mainly need three",
    "start": "507879",
    "end": "513800"
  },
  {
    "text": "objects uh the cluster infrastructure cluster and control plan object uh after",
    "start": "513800",
    "end": "521200"
  },
  {
    "text": "the three objects are ready the control plan provider will start to create the",
    "start": "521200",
    "end": "527800"
  },
  {
    "text": "INF infrastructure machine objects and bootstrap config objects and then create",
    "start": "527800",
    "end": "533320"
  },
  {
    "text": "a machine object which has reference to uh the previous two objects and after",
    "start": "533320",
    "end": "539160"
  },
  {
    "text": "that the Machine controller will set on reference to the infrastructure machine",
    "start": "539160",
    "end": "545040"
  },
  {
    "text": "and the bootp config object to uh notify that to notify each provider that these",
    "start": "545040",
    "end": "552720"
  },
  {
    "text": "objects are consumed by uh some machine and then the boot shop provider",
    "start": "552720",
    "end": "558880"
  },
  {
    "text": "will know okay I need to generate boot shop data for that machine and infrastructure uh machine uh controller",
    "start": "558880",
    "end": "566120"
  },
  {
    "text": "will not uh start to use those data and request a machine and bootstrap that",
    "start": "566120",
    "end": "572600"
  },
  {
    "text": "machine into a commun node here are the sample uh",
    "start": "572600",
    "end": "579200"
  },
  {
    "text": "implementation implemented by the clust AP Community which are using CU ADM to",
    "start": "579200",
    "end": "585760"
  },
  {
    "text": "uh bootst machine and uh when creating a worker",
    "start": "585760",
    "end": "592440"
  },
  {
    "text": "nodes clust has defined another two crds machine deployment and machine Set uh",
    "start": "592440",
    "end": "598800"
  },
  {
    "text": "their logic is familiar with the uh control plan provider and the the relationship between them is just like",
    "start": "598800",
    "end": "606839"
  },
  {
    "text": "Port uh replix set and deployment in",
    "start": "606839",
    "end": "611640"
  },
  {
    "text": "kues so uh next is about met Cube",
    "start": "613920",
    "end": "619279"
  },
  {
    "text": "Dio again metal cube Dio is a b metal provisioning tool for kubernetes and",
    "start": "619279",
    "end": "625360"
  },
  {
    "text": "also is in the infrastructure provider for cluster API",
    "start": "625360",
    "end": "631160"
  },
  {
    "text": "there are two main components in better cubed uh uh clust API provider met CED",
    "start": "632079",
    "end": "638519"
  },
  {
    "text": "or we can call it a capim 3 and the B metal operator the capim 3 is the",
    "start": "638519",
    "end": "644720"
  },
  {
    "text": "infrastructure provider and the BM operator is the BM provisioning",
    "start": "644720",
    "end": "650480"
  },
  {
    "text": "tool and the crd defined by them are actually meted cluster and meted machine",
    "start": "650880",
    "end": "657440"
  },
  {
    "text": "and the bmit host the bmit host object represents a bmit",
    "start": "657440",
    "end": "663240"
  },
  {
    "text": "server it contains information such as BMC details uh boot mode OS image OS",
    "start": "663240",
    "end": "669800"
  },
  {
    "text": "image uh user data and so on uh B operator will use this data to access",
    "start": "669800",
    "end": "676399"
  },
  {
    "text": "the Bal servers control the power and do the provisioning",
    "start": "676399",
    "end": "682079"
  },
  {
    "text": "work now to use the M Cube along with cluster API we first need to create B",
    "start": "682680",
    "end": "688920"
  },
  {
    "text": "host objects for each bomet servers these bomet host objects are the server",
    "start": "688920",
    "end": "695120"
  },
  {
    "text": "inventory ready for provisioning clust API",
    "start": "695120",
    "end": "700079"
  },
  {
    "text": "machines then we need to create a clust API object that will generate machines",
    "start": "700760",
    "end": "705880"
  },
  {
    "text": "for us here I use machine set for the example and also we need to create",
    "start": "705880",
    "end": "713480"
  },
  {
    "text": "related met Cube machine template and met Cube data template object the met machine template is used",
    "start": "713480",
    "end": "720639"
  },
  {
    "text": "to generate met Cube machine which is a consumer of the B met host object and",
    "start": "720639",
    "end": "727560"
  },
  {
    "text": "met Cube data template is used to generate uh network data and the",
    "start": "727560",
    "end": "732920"
  },
  {
    "text": "metadata used for cloudy need for uh when provisioning our uh bomet",
    "start": "732920",
    "end": "740680"
  },
  {
    "text": "server and like uh we talked before the machine set controller will use the",
    "start": "741000",
    "end": "747720"
  },
  {
    "text": "those templates to create a met Cube machine and Cube AUM config uh",
    "start": "747720",
    "end": "754720"
  },
  {
    "text": "object and also uh after that uh a machine object",
    "start": "754720",
    "end": "760000"
  },
  {
    "text": "will be created and uh refering to the previous object two objects then the",
    "start": "760000",
    "end": "765800"
  },
  {
    "text": "Machine controller set on the reference and uh each provider will start to uh started the provisioning",
    "start": "765800",
    "end": "772639"
  },
  {
    "text": "work which is generating the secret uh secrets that storing uh our",
    "start": "772639",
    "end": "779519"
  },
  {
    "text": "btp data and after all the secrets are ready the Met Cube Machine controller",
    "start": "779519",
    "end": "786519"
  },
  {
    "text": "will choose a suitable bit host set part of its back including image and the",
    "start": "786519",
    "end": "793320"
  },
  {
    "text": "reference for user data metadata and network data and also the",
    "start": "793320",
    "end": "799399"
  },
  {
    "text": "consumer and next the Bal operator will detect those changes and uh start the",
    "start": "799399",
    "end": "805560"
  },
  {
    "text": "provisioning work use this data",
    "start": "805560",
    "end": "810040"
  },
  {
    "text": "uh about about provisioning uh bomal operator uses uh",
    "start": "811199",
    "end": "816399"
  },
  {
    "text": "open stack ironic project as the back end there is an ironic server running",
    "start": "816399",
    "end": "823399"
  },
  {
    "text": "along with the bomal operator accepting requests from the bomal operator and it",
    "start": "823399",
    "end": "829000"
  },
  {
    "text": "will access to the bomal server change the boot option and Power on the server through its BMC start a ram disk and",
    "start": "829000",
    "end": "836680"
  },
  {
    "text": "runs an agent called ironic python agent or EPA uh and the EPA will uh talk with",
    "start": "836680",
    "end": "844079"
  },
  {
    "text": "ironic inspect hardware and write data to the hardware uh",
    "start": "844079",
    "end": "850160"
  },
  {
    "text": "dis okay this is the provisioning workflow it shows how uh the image is",
    "start": "850839",
    "end": "856079"
  },
  {
    "text": "written to the server when uh using pixie Boot and after right after uh",
    "start": "856079",
    "end": "862759"
  },
  {
    "text": "written to the dis uh the server will uh reboot and uh if we set the correct St",
    "start": "862759",
    "end": "869519"
  },
  {
    "text": "data then a CET node will uh be",
    "start": "869519",
    "end": "874880"
  },
  {
    "text": "initiated okay the last one is cluster or",
    "start": "875720",
    "end": "880839"
  },
  {
    "text": "scalar it can adjust the size of a kubernetes cluster according to its",
    "start": "880839",
    "end": "885920"
  },
  {
    "text": "workload uh to implement this the core mechanism and idea it uses",
    "start": "885920",
    "end": "893320"
  },
  {
    "text": "is node group a node group is a set of nodes uh nodes that have the same",
    "start": "893320",
    "end": "898680"
  },
  {
    "text": "capacit and the set of labels the cluster old scaler defines an interface",
    "start": "898680",
    "end": "904360"
  },
  {
    "text": "also called a node group to control a node group though uh this interface has",
    "start": "904360",
    "end": "910079"
  },
  {
    "text": "methods like uh increase size or delit nodes and so on and uh it is implemented",
    "start": "910079",
    "end": "916680"
  },
  {
    "text": "by each cloud provider and clust API is one of them and the cluster scaler will check",
    "start": "916680",
    "end": "925320"
  },
  {
    "text": "the ports deployed on the target cluster periodically",
    "start": "925320",
    "end": "930720"
  },
  {
    "text": "if there exist a port whose status is pending because of lacking",
    "start": "930720",
    "end": "936560"
  },
  {
    "text": "resources the clust of scaler will then choose a node group and calculate uh if",
    "start": "936560",
    "end": "943560"
  },
  {
    "text": "scaling up that node group whether the new node could host uh the pending ports",
    "start": "943560",
    "end": "949600"
  },
  {
    "text": "or not if so uh how many new nodes are",
    "start": "949600",
    "end": "954720"
  },
  {
    "text": "needed and after the calculation the clust scalar will call uh increase size method to scale up that",
    "start": "954720",
    "end": "962160"
  },
  {
    "text": "node group and uh requests will be sent to uh the related cloud and the new",
    "start": "962160",
    "end": "970560"
  },
  {
    "text": "machines will be created and put into kubernetes nodes scaling down is similar",
    "start": "970560",
    "end": "977120"
  },
  {
    "text": "with uh this logic uh the class scaler checks the resources usage of each Noe",
    "start": "977120",
    "end": "983680"
  },
  {
    "text": "uh to see uh if there are notes that are not needed anymore if We Exist it will",
    "start": "983680",
    "end": "990279"
  },
  {
    "text": "start scaling down by calling the delete nodes",
    "start": "990279",
    "end": "995000"
  },
  {
    "text": "method clust okay clust API is one of the cloud provider so if using clust API",
    "start": "995519",
    "end": "1002279"
  },
  {
    "text": "a node group is actually a machine set or machine deployment object and the scaling job is done by changing the the",
    "start": "1002279",
    "end": "1011279"
  },
  {
    "text": "replix field in their spec now uh because the aut scaler needs",
    "start": "1011279",
    "end": "1017920"
  },
  {
    "text": "to not only check ports running on the workload cluster but also uh",
    "start": "1017920",
    "end": "1024839"
  },
  {
    "text": "modifying uh machine set or machine deployment on the management cluster so the cluster of scaler needs to uh need",
    "start": "1024839",
    "end": "1032079"
  },
  {
    "text": "needs access to both of the two clusters okay the next part is about how",
    "start": "1032079",
    "end": "1039120"
  },
  {
    "text": "to use the three projects uh clust API Community created",
    "start": "1039120",
    "end": "1047400"
  },
  {
    "text": "a uh tour called cluster cut which can deploy related CDs and uh controllers",
    "start": "1047400",
    "end": "1054400"
  },
  {
    "text": "and also generate yo files for objects like cluster we can use cluster cutle uh",
    "start": "1054400",
    "end": "1060880"
  },
  {
    "text": "in it command to create cluster API core components and uh uh each",
    "start": "1060880",
    "end": "1067240"
  },
  {
    "text": "provider to deploy B metal operator and ironic the metal cube uh Community",
    "start": "1067240",
    "end": "1073400"
  },
  {
    "text": "provides a script uh deploy.sh this script can deploy B",
    "start": "1073400",
    "end": "1078840"
  },
  {
    "text": "operator and ironic in cluster as a part and we can also deploy ironic outside of",
    "start": "1078840",
    "end": "1086320"
  },
  {
    "text": "the cluster using another script uh wrong local ironic Dosh but wrong both",
    "start": "1086320",
    "end": "1092760"
  },
  {
    "text": "of them there are some ver uh variables need to be configured here are a part of",
    "start": "1092760",
    "end": "1101440"
  },
  {
    "text": "them and if using uh deploy do uh sh uh",
    "start": "1101440",
    "end": "1107679"
  },
  {
    "text": "the these variables are defined through one of these two",
    "start": "1107679",
    "end": "1113159"
  },
  {
    "text": "files and uh for R local ironic Dosh uh",
    "start": "1113159",
    "end": "1118240"
  },
  {
    "text": "they are defined through system uh environment or we can use default values",
    "start": "1118240",
    "end": "1123679"
  },
  {
    "text": "defined in the script itself okay after all the components are",
    "start": "1123679",
    "end": "1130480"
  },
  {
    "text": "ready we just need to create objects uh they are cluster creating uh control",
    "start": "1130480",
    "end": "1136840"
  },
  {
    "text": "plan machine deployment uh cuum Cube config template and met Cube cluster met",
    "start": "1136840",
    "end": "1142840"
  },
  {
    "text": "Cube machine template met Cube data template and also by hosts now uh and with all the needed",
    "start": "1142840",
    "end": "1150799"
  },
  {
    "text": "objects created the provision job will start automatically now about uh cluster o",
    "start": "1150799",
    "end": "1158400"
  },
  {
    "text": "scaler it can be deployed using Helm and uh the chart can be downloaded from the",
    "start": "1158400",
    "end": "1165159"
  },
  {
    "text": "G from GitHub and uh when installing with we also need to set some specific",
    "start": "1165159",
    "end": "1171159"
  },
  {
    "text": "variables to specify clust API as the cloud provider and also specify how the",
    "start": "1171159",
    "end": "1177679"
  },
  {
    "text": "cluster of scaler could access to uh workload cluster and uh management",
    "start": "1177679",
    "end": "1185480"
  },
  {
    "text": "cluster the cluster EP mode here defines the how the uh cluster of scalar could",
    "start": "1185720",
    "end": "1192559"
  },
  {
    "text": "access to the Clusters and in this example I am using Cube uh Cube config",
    "start": "1192559",
    "end": "1199080"
  },
  {
    "text": "in cluster mode which means the clust the aut scaler will run in the management cluster and use Cube config",
    "start": "1199080",
    "end": "1206840"
  },
  {
    "text": "to talk to the workload cluster and use in cluster authentication to access the",
    "start": "1206840",
    "end": "1212360"
  },
  {
    "text": "management cluster and the cube config for workload",
    "start": "1212360",
    "end": "1217799"
  },
  {
    "text": "cluster is specified through clust API Cube config secret the value is the name",
    "start": "1217799",
    "end": "1224200"
  },
  {
    "text": "of the secret stored in the management cluster",
    "start": "1224200",
    "end": "1229440"
  },
  {
    "text": "uh to control which machine sets or machine deployments should be scaled we need need to add these two annotations",
    "start": "1231440",
    "end": "1238799"
  },
  {
    "text": "to those Target objects the clust scalar will monitor any machine set or machine",
    "start": "1238799",
    "end": "1246679"
  },
  {
    "text": "deployment uh that contains both of these two",
    "start": "1246679",
    "end": "1251880"
  },
  {
    "text": "annotations okay finally the demo part in the demo I will first create a",
    "start": "1253159",
    "end": "1260799"
  },
  {
    "text": "one Master One worker uh cluster using two Bal servers and then scale up that",
    "start": "1260799",
    "end": "1268640"
  },
  {
    "text": "cluster uh this image shows the network of the entire uh entire environment we",
    "start": "1268640",
    "end": "1275240"
  },
  {
    "text": "the management cluster need to uh access to uh The BMC and also access to",
    "start": "1275240",
    "end": "1282720"
  },
  {
    "text": "provisioning network which is uh which uh which is uh uh in which ironic rounds",
    "start": "1282720",
    "end": "1289440"
  },
  {
    "text": "and also the bomet network which is uh in which the kubernetes uh the workload",
    "start": "1289440",
    "end": "1296120"
  },
  {
    "text": "cluster kubernetes runs",
    "start": "1296120",
    "end": "1301799"
  },
  {
    "text": "okay well because the I'm using Bal and the provisioning of a BAL",
    "start": "1303159",
    "end": "1310440"
  },
  {
    "text": "server is very uh time consuming so actually this is a video record and uh",
    "start": "1310440",
    "end": "1320480"
  },
  {
    "text": "and uh and I have already created uh all the",
    "start": "1320480",
    "end": "1326480"
  },
  {
    "text": "components you can see here the cap in cap uh capy system uh Nam space there",
    "start": "1326480",
    "end": "1333640"
  },
  {
    "text": "are class API controller manager and uh there are there there exists uh cadium",
    "start": "1333640",
    "end": "1340440"
  },
  {
    "text": "controller plan control plan controller and CU ADM bootp controller and also",
    "start": "1340440",
    "end": "1347600"
  },
  {
    "text": "capim 3 controller manager and bomet operator and ironic and I have created three bomet",
    "start": "1347600",
    "end": "1355279"
  },
  {
    "text": "hosts the their state is uh available and if uh I if you I if I get in the",
    "start": "1355279",
    "end": "1363960"
  },
  {
    "text": "detail of the B host I can",
    "start": "1363960",
    "end": "1368880"
  },
  {
    "text": "find the hardware information in their",
    "start": "1369279",
    "end": "1375200"
  },
  {
    "text": "status for example here LS and the CPU and the",
    "start": "1375200",
    "end": "1381679"
  },
  {
    "text": "storage and uh the next we need to create our",
    "start": "1382400",
    "end": "1389600"
  },
  {
    "text": "cluster and control plan the first is uh the cluster uh object it looks like this it",
    "start": "1389600",
    "end": "1397080"
  },
  {
    "text": "has cluster network uh intercluster network uh configuration and uh control",
    "start": "1397080",
    "end": "1402279"
  },
  {
    "text": "plan reference and infrastructure reference and next is the cadium control",
    "start": "1402279",
    "end": "1408919"
  },
  {
    "text": "plan object it's a very it's a little long",
    "start": "1408919",
    "end": "1414559"
  },
  {
    "text": "and you can see here we we have a infrastructure reference to a metri cube",
    "start": "1414559",
    "end": "1421039"
  },
  {
    "text": "machine template that will be used to generate a met Cube machine object and",
    "start": "1421039",
    "end": "1427520"
  },
  {
    "text": "also we have template for uh uh for bu of data and it is in the format of cloud",
    "start": "1427520",
    "end": "1433400"
  },
  {
    "text": "init we have I have defined a lot of commands to wrong and also a lot of",
    "start": "1433400",
    "end": "1439000"
  },
  {
    "text": "files to uh be created in the",
    "start": "1439000",
    "end": "1444440"
  },
  {
    "text": "server okay the next one is the machine uh met Cube machine",
    "start": "1445320",
    "end": "1452600"
  },
  {
    "text": "template and uh in the template we have uh the data template to use to generate",
    "start": "1452600",
    "end": "1459440"
  },
  {
    "text": "uh to use to generate the network data and metadata and also the image",
    "start": "1459440",
    "end": "1464480"
  },
  {
    "text": "information for the server and as you can see here the here",
    "start": "1464480",
    "end": "1470799"
  },
  {
    "text": "are the uh met Cube data template and it contains information",
    "start": "1470799",
    "end": "1476520"
  },
  {
    "text": "about uh metadata and the network",
    "start": "1476520",
    "end": "1481080"
  },
  {
    "text": "data and last one is met CBE cluster it only contains the control plan end point",
    "start": "1483760",
    "end": "1490399"
  },
  {
    "text": "and also a b value indicated that we uh our cluster has no uh cloud provider",
    "start": "1490399",
    "end": "1500039"
  },
  {
    "text": "and uh after created uh those objects",
    "start": "1500039",
    "end": "1505360"
  },
  {
    "text": "all can we can get the cluster that says the face is",
    "start": "1505360",
    "end": "1510840"
  },
  {
    "text": "provisioning and uh because the uh uh the controller is",
    "start": "1510840",
    "end": "1517720"
  },
  {
    "text": "checking uh whether the infrastructure cluster is ready or",
    "start": "1517720",
    "end": "1522840"
  },
  {
    "text": "not and uh if we get cadium control plan object",
    "start": "1522840",
    "end": "1529600"
  },
  {
    "text": "here there are nothing in it that because the cluster is not provisioned yet and a few minutes later a few",
    "start": "1529600",
    "end": "1537559"
  },
  {
    "text": "seconds later okay the because the Met Cube cluster our infrastructure is ready now",
    "start": "1537559",
    "end": "1544960"
  },
  {
    "text": "so the cluster is going to the provision phase and we can see the cadium control plan",
    "start": "1544960",
    "end": "1554279"
  },
  {
    "text": "has replic class one and uh updated one and uh and uh it is unavailable so it is in the",
    "start": "1554279",
    "end": "1562080"
  },
  {
    "text": "initialized phase and initializing phase and we can see uh a new machine is",
    "start": "1562080",
    "end": "1568640"
  },
  {
    "text": "created and in the provisioning phase and the metal cube machine is also be",
    "start": "1568640",
    "end": "1573799"
  },
  {
    "text": "created about 30 seconds ago and Bal",
    "start": "1573799",
    "end": "1580520"
  },
  {
    "text": "host a one of the Bal is chosen and state is provisioning and the power is",
    "start": "1580520",
    "end": "1587600"
  },
  {
    "text": "online and and uh the consumer is our Med machine object and almost uh",
    "start": "1587600",
    "end": "1595279"
  },
  {
    "text": "after 15 minutes in my environment the",
    "start": "1595279",
    "end": "1601200"
  },
  {
    "text": "data the O image will be wrting into the Bal host uh B host",
    "start": "1601200",
    "end": "1610440"
  },
  {
    "text": "so the state yeah here the state after 15 minutes the state of the B host is uh",
    "start": "1614159",
    "end": "1622200"
  },
  {
    "text": "provisioned which means the uh all the data has been written to the uh server",
    "start": "1622200",
    "end": "1628720"
  },
  {
    "text": "and uh and it uh but but if we get the medical machine uh it say not ready not",
    "start": "1628720",
    "end": "1637640"
  },
  {
    "text": "because uh server get rebooted and uh the all the command is running now and",
    "start": "1637640",
    "end": "1644960"
  },
  {
    "text": "the cetus is not uh up yet and after another two almost another two",
    "start": "1644960",
    "end": "1655559"
  },
  {
    "text": "minutes okay here uh can see another two minutes after another",
    "start": "1660320",
    "end": "1667679"
  },
  {
    "text": "two minutes the machine has a provider id set and the pH is running and uh the",
    "start": "1667679",
    "end": "1673760"
  },
  {
    "text": "Met Cube machine also has the same provider id and R is true the provider",
    "start": "1673760",
    "end": "1679360"
  },
  {
    "text": "is generated by met Cube uh automatically and uh the and will be are",
    "start": "1679360",
    "end": "1686880"
  },
  {
    "text": "copied to the machine object and if that is and if that provide IDE is that the",
    "start": "1686880",
    "end": "1693480"
  },
  {
    "text": "machine will consumed uh be considered as running and ready and uh we can see",
    "start": "1693480",
    "end": "1699200"
  },
  {
    "text": "here the control plan is now initialized and server available and now we can access to our",
    "start": "1699200",
    "end": "1707200"
  },
  {
    "text": "server to get and you can get note and also the cube config for our",
    "start": "1707200",
    "end": "1715120"
  },
  {
    "text": "workload cluster is stored in the management cluster as a secret so the my",
    "start": "1715120",
    "end": "1720320"
  },
  {
    "text": "cluster comp be config we can get this use this to access our",
    "start": "1720320",
    "end": "1727600"
  },
  {
    "text": "cluster okay I have stalled the CU config and uh get note and also get p",
    "start": "1727600",
    "end": "1738039"
  },
  {
    "text": "now the next is uh I need to create a machine deployment to create our create",
    "start": "1738840",
    "end": "1744880"
  },
  {
    "text": "a worker for our cluster the machine deployment has the bootstrap template to",
    "start": "1744880",
    "end": "1750720"
  },
  {
    "text": "create a bootstrap config and a template to create a machine uh medic",
    "start": "1750720",
    "end": "1756840"
  },
  {
    "text": "machine okay the they are similar with the so I was",
    "start": "1761440",
    "end": "1767960"
  },
  {
    "text": "uh similar with the control plan so skip this and uh after these objects are",
    "start": "1767960",
    "end": "1773240"
  },
  {
    "text": "created and",
    "start": "1773240",
    "end": "1776559"
  },
  {
    "text": "uh here the machine deployment is in scaling up phase and a new machine is",
    "start": "1778559",
    "end": "1784600"
  },
  {
    "text": "created and a new metal machine is created",
    "start": "1784600",
    "end": "1788759"
  },
  {
    "text": "also and after another two okay the machine object has a has a reference to",
    "start": "1789760",
    "end": "1796640"
  },
  {
    "text": "the bootstop config and the Met machine object and after another and uh yeah and",
    "start": "1796640",
    "end": "1804320"
  },
  {
    "text": "uh a new another B bmh has been chosen and it is in provisioning",
    "start": "1804320",
    "end": "1810240"
  },
  {
    "text": "Phase okay after another two 20 minutes it will be",
    "start": "1810240",
    "end": "1816360"
  },
  {
    "text": "come Walker well ready okay the Walker is ready now and",
    "start": "1816360",
    "end": "1824039"
  },
  {
    "text": "uh they have provider id set and machine deployment is in running phas and",
    "start": "1824039",
    "end": "1831039"
  },
  {
    "text": "uh our get note there are two nodes in our workload cluster and next I will use",
    "start": "1831039",
    "end": "1838760"
  },
  {
    "text": "this uh uh script to create auto scaler okay Autos scal is",
    "start": "1838760",
    "end": "1845279"
  },
  {
    "text": "created and you can see here A P is running and uh to trigger the scaling up",
    "start": "1845279",
    "end": "1854519"
  },
  {
    "text": "I need to ensure that our machine deployment has the right annotations",
    "start": "1854519",
    "end": "1863360"
  },
  {
    "text": "here okay and uh now next uh to trigger the scaling up",
    "start": "1863360",
    "end": "1872320"
  },
  {
    "text": "uh we create a deployment the deployment the port deployed by this deployment",
    "start": "1872320",
    "end": "1877639"
  },
  {
    "text": "does nothing but request for full CPU course and because the worker has uh 20",
    "start": "1877639",
    "end": "1885679"
  },
  {
    "text": "CPUs so the port is running and so if we if",
    "start": "1885679",
    "end": "1893080"
  },
  {
    "text": "I add this to six and there will be one port in pending status in pending",
    "start": "1893080",
    "end": "1901679"
  },
  {
    "text": "phase okay so here there a port there are a pending port in the workload cluster and uh I can see the machine",
    "start": "1901679",
    "end": "1910480"
  },
  {
    "text": "deployment is scaling up again and a new machine is created and uh the last uh",
    "start": "1910480",
    "end": "1917360"
  },
  {
    "text": "bitto is chosen for provisioning okay that's",
    "start": "1917360",
    "end": "1923440"
  },
  {
    "text": "all okay the last is some information about the",
    "start": "1935480",
    "end": "1940799"
  },
  {
    "text": "community thank you all [Applause]",
    "start": "1941000",
    "end": "1947710"
  }
]