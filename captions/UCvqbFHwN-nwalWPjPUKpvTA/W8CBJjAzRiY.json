[
  {
    "text": "perfect alright hello everyone so in",
    "start": "260",
    "end": "7379"
  },
  {
    "text": "this talk we're gonna discuss and what it takes for serverless to become commodity so hopefully at one point and",
    "start": "7379",
    "end": "15179"
  },
  {
    "text": "we start moving on to other interesting stuff so to get us started",
    "start": "15179",
    "end": "21359"
  },
  {
    "text": "my name is Naimah kavion ii and i'm an engineer with IBM and i'm here with my friend dmitri from payroll who clearly you can",
    "start": "21359",
    "end": "31769"
  },
  {
    "text": "tell has come from the east coast alright so i think at this point in talk",
    "start": "31769",
    "end": "39780"
  },
  {
    "text": "all of us know the pros about several lists obviously a lot of people want to",
    "start": "39780",
    "end": "44850"
  },
  {
    "text": "use serverless and enjoy using server list because it's easy to manage and it's cost effective obviously it's easy",
    "start": "44850",
    "end": "52020"
  },
  {
    "text": "to manage because there is less that you have to care about and you know back to",
    "start": "52020",
    "end": "57539"
  },
  {
    "text": "evans talk it's cost effective in many ways particularly saving on the",
    "start": "57539",
    "end": "62640"
  },
  {
    "text": "operations cost on the negative side however one of the biggest problems that people deal with when talking about",
    "start": "62640",
    "end": "69060"
  },
  {
    "text": "serverless is that the they're afraid of getting locked in with a particular vendor",
    "start": "69060",
    "end": "74270"
  },
  {
    "text": "essentially the reason is because you're only in charge of a tiny layer for your",
    "start": "74270",
    "end": "79860"
  },
  {
    "text": "software you know for every other service you have to rely on the service provider or the cloud platform provider",
    "start": "79860",
    "end": "85909"
  },
  {
    "text": "to build your application so this is to the point that you know some people",
    "start": "85909",
    "end": "91979"
  },
  {
    "text": "including alex Pavia of Korres consider surrealists as one of the worst and proprietary logins in human history",
    "start": "91979",
    "end": "98220"
  },
  {
    "text": "right also so other people including",
    "start": "98220",
    "end": "103649"
  },
  {
    "text": "Kelsey acknowledged this and you know one way for a lot of companies to try",
    "start": "103649",
    "end": "108659"
  },
  {
    "text": "and solve this is by providing an open source layer that can go on top and then",
    "start": "108659",
    "end": "114420"
  },
  {
    "text": "would give you the flexibility to migrate from one cloud provider to another if you choose to so for us to",
    "start": "114420",
    "end": "122040"
  },
  {
    "text": "kind of understand what it takes for several is to become commodity we started looking at kubernetes as a good example because I think at this point",
    "start": "122040",
    "end": "128610"
  },
  {
    "text": "pretty much everyone agrees that kubernetes is the orchestration war and continued as a",
    "start": "128610",
    "end": "134130"
  },
  {
    "text": "service is essentially kubernetes right so the question that we started asking",
    "start": "134130",
    "end": "140430"
  },
  {
    "text": "ourselves was okay what does it take for service to become commodity and who's",
    "start": "140430",
    "end": "146370"
  },
  {
    "text": "gonna win the serverless war so we started looking at why kubernetes was so",
    "start": "146370",
    "end": "151710"
  },
  {
    "text": "successful and identified three different stakeholders and the reason they actually liked kubernetes a lot so",
    "start": "151710",
    "end": "158940"
  },
  {
    "text": "from a providers perspective kubernetes was very appealing because it was open source and it was eyes agnostic so they",
    "start": "158940",
    "end": "165930"
  },
  {
    "text": "could contribute to you they could see what's happening inside they could take it and deploy it on their infrastructure right from an operator's perspective it",
    "start": "165930",
    "end": "174660"
  },
  {
    "text": "was interesting because it offered the declarative model of deployment which",
    "start": "174660",
    "end": "179850"
  },
  {
    "text": "was consistent so regardless of the type of application that you want to deploy you need to know the building blocks and",
    "start": "179850",
    "end": "185970"
  },
  {
    "text": "then once you know the building blocks you put them together you get your application up and running so it was very easy to get onboard with kubernetes",
    "start": "185970",
    "end": "192090"
  },
  {
    "text": "and finally from developers perspective it was appealing because it offered a",
    "start": "192090",
    "end": "198390"
  },
  {
    "text": "consistent API across all the platforms right so it actually allowed them to migrate from one providers to another if",
    "start": "198390",
    "end": "204840"
  },
  {
    "text": "they weren't happy with their existing provider so we decided to actually take",
    "start": "204840",
    "end": "211050"
  },
  {
    "text": "these and look at what it takes for a service platform to repeat kubernetes",
    "start": "211050",
    "end": "216360"
  },
  {
    "text": "success what did I need to do right and so you know the points that I discussed",
    "start": "216360",
    "end": "223230"
  },
  {
    "text": "being open source eyes agnostic consistent deployment deployment model and consistent API the first three",
    "start": "223230",
    "end": "231060"
  },
  {
    "text": "appear to be you know satisfied by essentially every service less platform",
    "start": "231060",
    "end": "237390"
  },
  {
    "text": "that's built on top of kubernetes these days right all of them and here today use the utilized the API that kubernetes",
    "start": "237390",
    "end": "244590"
  },
  {
    "text": "offers and essentially there are a lot of open source is agnostic platforms that can be built on top of kubernetes",
    "start": "244590",
    "end": "250890"
  },
  {
    "text": "so the one piece that we started looking at or was okay what is the consistent API that needs to be implemented by a",
    "start": "250890",
    "end": "258540"
  },
  {
    "text": "service platform for it to be peeling and to be adapted you know more generally and that is basically the",
    "start": "258540",
    "end": "265240"
  },
  {
    "text": "their current discussion in the rest of this talk so yes we started looking and",
    "start": "265240",
    "end": "270430"
  },
  {
    "text": "a consistent API model and in order to do that and next slide in order to do",
    "start": "270430",
    "end": "276520"
  },
  {
    "text": "that we actually started looking at different and severest platforms and we started looking at different criteria",
    "start": "276520",
    "end": "284080"
  },
  {
    "text": "for what the API is supposed to be across these in order to compare and contrast and come up with a final ideal",
    "start": "284080",
    "end": "292060"
  },
  {
    "text": "that we think is essential for a service platform so I'm going to end it to Dimitri hey so yeah we'll take a look at",
    "start": "292060",
    "end": "299229"
  },
  {
    "text": "the seven criterias over here and find out what are the different implementations like aw aslam the open",
    "start": "299229",
    "end": "305979"
  },
  {
    "text": "way scope and fast cube list key native do do note that we're not experts in any of",
    "start": "305979",
    "end": "313449"
  },
  {
    "text": "them really but we did look into different implementations as deeply as",
    "start": "313449",
    "end": "318669"
  },
  {
    "text": "we could we looked at documentation we played around with some we do occasionally contribute to key native we",
    "start": "318669",
    "end": "325690"
  },
  {
    "text": "do use AWS lambda for a few of our own projects and of course neem is from IBM",
    "start": "325690",
    "end": "331030"
  },
  {
    "text": "so is more familiar with open risk but do take the information with a grain of salt and do let us know if something is",
    "start": "331030",
    "end": "338320"
  },
  {
    "text": "incorrect so let's take a look at number one packaging contract so when we say",
    "start": "338320",
    "end": "344260"
  },
  {
    "text": "packaging contract what we mean is what does the developer need to provide to the platform to run their function right",
    "start": "344260",
    "end": "351340"
  },
  {
    "text": "so in lambda when lambda first came out right dad if actually a zip file as the",
    "start": "351340",
    "end": "358150"
  },
  {
    "text": "interface nowadays they gotten a little bit more sophisticated in their area and",
    "start": "358150",
    "end": "363520"
  },
  {
    "text": "they allow you to provide multiple zip files for different for different",
    "start": "363520",
    "end": "372090"
  },
  {
    "text": "scenarios and those being for example the the base layer and then I think the",
    "start": "372090",
    "end": "379440"
  },
  {
    "text": "final application open wisk supports custom packaging similar to",
    "start": "379440",
    "end": "384789"
  },
  {
    "text": "lambda but also does support OCI image open pass custom packaging that",
    "start": "384789",
    "end": "390280"
  },
  {
    "text": "ultimately results in OCI image same for cublas kay native say it again there you go",
    "start": "390280",
    "end": "399939"
  },
  {
    "text": "and then Kay native because it's based on kubernetes it only supports Osei image though I'm sure people who you",
    "start": "399939",
    "end": "407049"
  },
  {
    "text": "know use cloud native bill paxton whatnot can ultimately avoid osei image",
    "start": "407049",
    "end": "412360"
  },
  {
    "text": "directly but you know really convert into it before giving it to K native so",
    "start": "412360",
    "end": "418509"
  },
  {
    "text": "let's take a look at next one next one is runtime invocation contract so we kind of split the I guess the the system",
    "start": "418509",
    "end": "427419"
  },
  {
    "text": "into two parts one part between the platform and the runtime and runtime we",
    "start": "427419",
    "end": "433360"
  },
  {
    "text": "have this kind of a may be a wrapper around your application that's what we",
    "start": "433360",
    "end": "438399"
  },
  {
    "text": "call runtime and so we're gonna talk about specifically between the platform and the runtime so let's dig in so",
    "start": "438399",
    "end": "445239"
  },
  {
    "text": "lambda as we found out actually as runtime pooling lambda API right so this",
    "start": "445239",
    "end": "453909"
  },
  {
    "text": "is somewhat different from some of the other implementations where for example open whisk allows you send a message",
    "start": "453909",
    "end": "461559"
  },
  {
    "text": "over HTTP to you know the end application right which is you know",
    "start": "461559",
    "end": "467679"
  },
  {
    "text": "obviously a quite a bit different implementation right open fast quite",
    "start": "467679",
    "end": "473499"
  },
  {
    "text": "similar it pushes over HTTP cumulus again and we scan it if there is",
    "start": "473499",
    "end": "480159"
  },
  {
    "text": "actually no runtime wrapper right you have your application directly in OCI image and it directly accepts whatever",
    "start": "480159",
    "end": "486999"
  },
  {
    "text": "the request is coming in so we're going to also talk a little bit more about that in next slide some of the other I",
    "start": "486999",
    "end": "493269"
  },
  {
    "text": "guess I think earlier in the talks about open fast it was mentioned that you can",
    "start": "493269",
    "end": "499269"
  },
  {
    "text": "you know depending how much functionality you want to reuse from the platform you can bypass some of the",
    "start": "499269",
    "end": "505119"
  },
  {
    "text": "layers I'm sure some of these other implementations love you also to remove some of the I guess built-in default",
    "start": "505119",
    "end": "513149"
  },
  {
    "text": "processing but that that's that our current summary of this so between the",
    "start": "513149",
    "end": "521469"
  },
  {
    "text": "runtime and application right so if we imagine that this runtime thing is a wrapper around your",
    "start": "521469",
    "end": "526610"
  },
  {
    "text": "application what does it take for the runtime to actually pass the information down to your function so in lambda if",
    "start": "526610",
    "end": "534980"
  },
  {
    "text": "you look into it into the underlying libraries and SDKs that they provide",
    "start": "534980",
    "end": "540220"
  },
  {
    "text": "there is some custom JSON enveloping going on with open risk there is two",
    "start": "540220",
    "end": "546200"
  },
  {
    "text": "options there is a JSON envelope which I believe is custom for open risk and then",
    "start": "546200",
    "end": "551420"
  },
  {
    "text": "you can also just directly accept http stream as if it's coming from you know your regular low bouncer open fast we",
    "start": "551420",
    "end": "559610"
  },
  {
    "text": "saw that there is a standard in standard out began corrects for wrong no tell us",
    "start": "559610",
    "end": "565459"
  },
  {
    "text": "what it is",
    "start": "565459",
    "end": "567910"
  },
  {
    "text": "okay yeah so sounds like we should have",
    "start": "582710",
    "end": "588020"
  },
  {
    "text": "talked to open fast maintained there's a little bit deeper we we didn't take a",
    "start": "588020",
    "end": "594110"
  },
  {
    "text": "look at open fast to too much besides the docs like I said not an",
    "start": "594110",
    "end": "599540"
  },
  {
    "text": "experts in a lot of these things but it sounds like HTTP acts as a basis of it",
    "start": "599540",
    "end": "606290"
  },
  {
    "text": "and I'm assuming there is a watchdog or some other mechanism that translates it into standard instant without for some",
    "start": "606290",
    "end": "612770"
  },
  {
    "text": "of the stuff no interesting",
    "start": "612770",
    "end": "624290"
  },
  {
    "text": "so I guess based on my understanding some of the examples did show that you can just write some kind of a bash",
    "start": "624290",
    "end": "632060"
  },
  {
    "text": "function or whatnot that just accepts some you know input-output kind of a thing but maybe that wasn't it",
    "start": "632060",
    "end": "638560"
  },
  {
    "text": "right right so that that's what we're kind of talking about this wrapper rate that right but this is exactly what",
    "start": "638560",
    "end": "646339"
  },
  {
    "text": "we're talking about so runtime is that potentially optional wrapper rate that ultimately results in what the end user",
    "start": "646339",
    "end": "654279"
  },
  {
    "text": "looks like back so this is exactly what",
    "start": "654310",
    "end": "659330"
  },
  {
    "text": "we're talking about runtime is that potentially optional wrapper the wraps the the application right so ultimately",
    "start": "659330",
    "end": "666380"
  },
  {
    "text": "yes it may be billed inside with an HTTP and whatnot right but from the end user",
    "start": "666380",
    "end": "673300"
  },
  {
    "text": "let's say they're proposed ways to do standard instance fair enough",
    "start": "673300",
    "end": "683839"
  },
  {
    "text": "okay so Kay native as you just mentioned so Kennedy doesn't do any kind of",
    "start": "683839",
    "end": "690260"
  },
  {
    "text": "wrapping to our knowledge HTTP one HTTP 2 and cloud events for key native",
    "start": "690260",
    "end": "695480"
  },
  {
    "text": "eventing was some of the technologies that we seen there used and then I guess",
    "start": "695480",
    "end": "703630"
  },
  {
    "text": "one interesting thing that you know Kennedy when lambda we saw was that with",
    "start": "703630",
    "end": "711050"
  },
  {
    "text": "lambda you do get to use a lot of the SDK and I guess proprietary lambda",
    "start": "711050",
    "end": "717300"
  },
  {
    "text": "technology to wrap your application around with skinny rivers it's slightly more familiar check to an average web",
    "start": "717300",
    "end": "725760"
  },
  {
    "text": "developer right that you don't have to really write any kind of you know",
    "start": "725760",
    "end": "730949"
  },
  {
    "text": "wrappers or you don't have to use any kind of additional libraries you can just use directly let's say in goaling",
    "start": "730949",
    "end": "735959"
  },
  {
    "text": "net HTTP or whatever else it may be right so that's one aspect to consider",
    "start": "735959",
    "end": "743180"
  },
  {
    "text": "execution model lambda we saw that it",
    "start": "743180",
    "end": "749220"
  },
  {
    "text": "was offering synchronous and asynchronous functionality we saw that",
    "start": "749220",
    "end": "755339"
  },
  {
    "text": "there is a well personally we've used synchronous functionality in most of the",
    "start": "755339",
    "end": "760889"
  },
  {
    "text": "cases but we did observe that you can configure some of this functionality to actually run asynchronously for open",
    "start": "760889",
    "end": "768029"
  },
  {
    "text": "risk we have synchronous asynchronous as well open fast also supports that so that's cublas however in key native we've only",
    "start": "768029",
    "end": "776070"
  },
  {
    "text": "seen synchronous functionality being supported by default now obviously you",
    "start": "776070",
    "end": "781470"
  },
  {
    "text": "know anything that's synchronous you can kick off asynchronous tasks within your synchronous requests and maybe fully",
    "start": "781470",
    "end": "787589"
  },
  {
    "text": "complete it but with that comes interesting questions of when does your function terminate and how you can",
    "start": "787589",
    "end": "794819"
  },
  {
    "text": "manage it over time or visibility into that stuff I believe you my actually",
    "start": "794819",
    "end": "800569"
  },
  {
    "text": "made some issues to discuss that further with the key Native community I don't",
    "start": "800569",
    "end": "806339"
  },
  {
    "text": "quite know where that is at this point let's see what else we got retry model",
    "start": "806339",
    "end": "812720"
  },
  {
    "text": "with retry model it was quite actually interesting most of the most of all",
    "start": "812720",
    "end": "820110"
  },
  {
    "text": "things did not support any kind of a built-in platform provided retry with one exception of lambda and open fast",
    "start": "820110",
    "end": "826639"
  },
  {
    "text": "with lambda though it wasn't three tries based on if the platform is failing was",
    "start": "826639",
    "end": "832589"
  },
  {
    "text": "mostly retries based on your application logic we don't have any kind of retries",
    "start": "832589",
    "end": "840980"
  },
  {
    "text": "one I guess asynchronous workloads well",
    "start": "840980",
    "end": "846180"
  },
  {
    "text": "no a synchronous workloads no trice so that was a that was kind of an",
    "start": "846180",
    "end": "852390"
  },
  {
    "text": "interesting observation there yes question",
    "start": "852390",
    "end": "859009"
  },
  {
    "text": "so the question was since we mentioned cloud events does that mean that we're",
    "start": "870660",
    "end": "875850"
  },
  {
    "text": "also putting key native eventing and key native serving under the under this",
    "start": "875850",
    "end": "882720"
  },
  {
    "text": "title of key native yes and no so again",
    "start": "882720",
    "end": "888000"
  },
  {
    "text": "none of this is you know specific with particular examples but we did see that",
    "start": "888000",
    "end": "897240"
  },
  {
    "text": "key native is aware that cloud events is an emerging standard so it is being used in one part of a system but not as alien",
    "start": "897240",
    "end": "904350"
  },
  {
    "text": "Adam but mostly focused on key native serving in this case so even though",
    "start": "904350",
    "end": "910950"
  },
  {
    "text": "obviously you can you can implement a sync and do retries with with cloud events and can I live event in there is",
    "start": "910950",
    "end": "918000"
  },
  {
    "text": "no standard for how you do it like there is no general accepted community way that okay this is how you",
    "start": "918000",
    "end": "923880"
  },
  {
    "text": "do a sync with Kay native in other words with the other ones there is like a very clear way for example with lambda you",
    "start": "923880",
    "end": "929010"
  },
  {
    "text": "can just pass the invocation time and that's it right all right concurrency",
    "start": "929010",
    "end": "936630"
  },
  {
    "text": "model and auto scaling so lambda is",
    "start": "936630",
    "end": "941880"
  },
  {
    "text": "mostly request based and you know given that their auto scaling based on a queue",
    "start": "941880",
    "end": "947190"
  },
  {
    "text": "length again not a lambda engineers so they might be doing some more magic stuff behind the scenes that's what we",
    "start": "947190",
    "end": "953400"
  },
  {
    "text": "observed based on api's and usage open whisk was mostly request based open fast",
    "start": "953400",
    "end": "961410"
  },
  {
    "text": "request based and resource based and when we mention resource based will mean here is based on CPU and all kinds of",
    "start": "961410",
    "end": "966960"
  },
  {
    "text": "other potentially custom metrics sure NH",
    "start": "966960",
    "end": "972600"
  },
  {
    "text": "so so that's basically it right great",
    "start": "972600",
    "end": "977509"
  },
  {
    "text": "yeah yeah so everything is a skeleton zero except for for the other one is not a scale to zero essentially so for cube",
    "start": "977700",
    "end": "985690"
  },
  {
    "text": "list request based the resource based with it appears that cube Willis did not",
    "start": "985690",
    "end": "992170"
  },
  {
    "text": "support scale to zero whereas all of the other offerings in the slide did support and finally K native offers a request",
    "start": "992170",
    "end": "999460"
  },
  {
    "text": "based and resource based via HP and kPa extensions so finally I think this is",
    "start": "999460",
    "end": "1008580"
  },
  {
    "text": "the last one traffic splitting so for traffic splitting it seems that lambda",
    "start": "1008580",
    "end": "1014420"
  },
  {
    "text": "decided to go with offering a first class in their API first class support",
    "start": "1014420",
    "end": "1020190"
  },
  {
    "text": "for a provisions open wisk did not have such functionality and i think it",
    "start": "1020190",
    "end": "1025350"
  },
  {
    "text": "requires external load balancing to separate between different a provisions so if actually you end up deployment",
    "start": "1025350",
    "end": "1032100"
  },
  {
    "text": "multiple applications not iterating on the same application for open fast",
    "start": "1032100",
    "end": "1039560"
  },
  {
    "text": "external service mesh was the choice seemed to be the choice any corrections",
    "start": "1039560",
    "end": "1046680"
  },
  {
    "text": "they're sitting on okay perfect",
    "start": "1046680",
    "end": "1053220"
  },
  {
    "text": "so using service mesh interface that came out of I think this and then cublas same kind of a situation external",
    "start": "1053220",
    "end": "1059580"
  },
  {
    "text": "service mesh and finally key native we have built-in functionality done through",
    "start": "1059580",
    "end": "1067140"
  },
  {
    "text": "revisions so revision is a you know copy of your application over time and cainy",
    "start": "1067140",
    "end": "1074010"
  },
  {
    "text": "also support some configuration some first-class routing specific objects CR",
    "start": "1074010",
    "end": "1081870"
  },
  {
    "text": "DS that could be used to integrate with whatever you want to integrate with so",
    "start": "1081870",
    "end": "1088340"
  },
  {
    "text": "you know we've talked about some of these platforms that were all aware of we've talked about some of the some of",
    "start": "1088340",
    "end": "1096450"
  },
  {
    "text": "the aspects of those platforms so under your seats there's a clicker where you can pick up and start voting for some of",
    "start": "1096450",
    "end": "1103710"
  },
  {
    "text": "the things that we're gonna go in slides no nobody looked I checked nobody looked",
    "start": "1103710",
    "end": "1110010"
  },
  {
    "text": "okay so one of the one of the things that neem and I wanted to do is we wanted to go through a few different",
    "start": "1110010",
    "end": "1115440"
  },
  {
    "text": "questions and actually ask the audience to vote as we go along to some of the",
    "start": "1115440",
    "end": "1121740"
  },
  {
    "text": "slides and obviously with by raising hands and so let's begin and some of",
    "start": "1121740",
    "end": "1127410"
  },
  {
    "text": "this stuff I think you might you go first so obviously like Demetri said",
    "start": "1127410",
    "end": "1133340"
  },
  {
    "text": "like if we give it in give this presentation in any other conference we",
    "start": "1133340",
    "end": "1138450"
  },
  {
    "text": "we have some opinions or some ideas about you know what is the design for a service platform but here because",
    "start": "1138450",
    "end": "1144480"
  },
  {
    "text": "there's a lot of experts in the room we thought we would turn it over and ask you guys what we think would be the proper API designed for for several s so",
    "start": "1144480",
    "end": "1152280"
  },
  {
    "text": "the first thing that we started packaging contracts so as we mentioned there are a number of choices for",
    "start": "1152280",
    "end": "1157470"
  },
  {
    "text": "packaging contract like OCR images custom packaging and custom packaging into OCR images right so just by a show",
    "start": "1157470",
    "end": "1166410"
  },
  {
    "text": "of hand who thinks you know the the proper packaging contract or packaging",
    "start": "1166410",
    "end": "1171630"
  },
  {
    "text": "your packaging contract would be OCI images okay custom packaging of zip",
    "start": "1171630",
    "end": "1180600"
  },
  {
    "text": "files and stuff okay one person custom packaging into OCR you inches okay great",
    "start": "1180600",
    "end": "1189380"
  },
  {
    "text": "what is it one entry yeah yeah so the",
    "start": "1189380",
    "end": "1195929"
  },
  {
    "text": "perfect option combination about see our images and custom packaging into OCR images sure so we thought like our",
    "start": "1195929",
    "end": "1204870"
  },
  {
    "text": "opinion was OCR images and the the main reason was that well obviously you can do custom packaging into OCR images but",
    "start": "1204870",
    "end": "1212340"
  },
  {
    "text": "then you'll have to make your users to also customize their OCR images and",
    "start": "1212340",
    "end": "1217830"
  },
  {
    "text": "provide them potentially if there's a huge dependency for your application huge set of dependencies for your application because otherwise you know",
    "start": "1217830",
    "end": "1224640"
  },
  {
    "text": "you can rely on kpac or some other technologies or build packs to kind of bring it into the into the OCR image but",
    "start": "1224640",
    "end": "1230549"
  },
  {
    "text": "essentially it feels like it might be slightly easier for people to just take care of the end to end and provide you",
    "start": "1230549",
    "end": "1236669"
  },
  {
    "text": "with one OCR image maybe to clarify that is we don't necessarily think that the platform itself should be respond",
    "start": "1236669",
    "end": "1243180"
  },
  {
    "text": "before that but rather maybe there is another better tool that deals with that conversion if such conversion is desired",
    "start": "1243180",
    "end": "1250110"
  },
  {
    "text": "to be exposed to the user",
    "start": "1250110",
    "end": "1253700"
  },
  {
    "text": "all right so what what's being said for people who didn't hear is that it's",
    "start": "1281350",
    "end": "1286389"
  },
  {
    "text": "really the question of what kind of user if you're targeting with your platform right some users are very comfortable with doing let's say traditional non or",
    "start": "1286389",
    "end": "1294940"
  },
  {
    "text": "CI artifact delivery to their platform so they're happy in that world right versus maybe a newer kubernetes based",
    "start": "1294940",
    "end": "1304350"
  },
  {
    "text": "systems right they really prefer the OCI image base yeah I think we generally",
    "start": "1304350",
    "end": "1309399"
  },
  {
    "text": "agree is if it becomes more of a question where do you draw the boundary of the service platform right and at",
    "start": "1309399",
    "end": "1316000"
  },
  {
    "text": "least both of us don't necessarily think that you know yeah it's fair to put that",
    "start": "1316000",
    "end": "1322269"
  },
  {
    "text": "functionality into the service platform but we do believe that it's fair to put it into an additional product maybe on",
    "start": "1322269",
    "end": "1328059"
  },
  {
    "text": "top of that right so yeah all right so let's take a look at the next one run",
    "start": "1328059",
    "end": "1334509"
  },
  {
    "text": "time invocation contract so keep in mind that again we've defined the run time as that lightweight wrapper around the",
    "start": "1334509",
    "end": "1342009"
  },
  {
    "text": "application right it's mostly for convenience for the end user to be you",
    "start": "1342009",
    "end": "1348700"
  },
  {
    "text": "know more potentially familiar with the with the contract right so this this piece is really maybe on the",
    "start": "1348700",
    "end": "1355360"
  },
  {
    "text": "implementation detail to the platform right so we think there's two options here there's an option where runtime",
    "start": "1355360",
    "end": "1364120"
  },
  {
    "text": "calls the platform so this is mostly for style off let's say your platform has",
    "start": "1364120",
    "end": "1370179"
  },
  {
    "text": "some kind of an internal cue right where individual functions get spun up let's",
    "start": "1370179",
    "end": "1376450"
  },
  {
    "text": "say and pull from the pool from the platform and an alternative is platform calls the runtime right so that's more",
    "start": "1376450",
    "end": "1382809"
  },
  {
    "text": "similar that's a 2k native where there is a platform component it's smart enough to scale up some come your",
    "start": "1382809",
    "end": "1390429"
  },
  {
    "text": "function and then send the request to the function so for number one any-any",
    "start": "1390429",
    "end": "1398110"
  },
  {
    "text": "ends that runs calling platform to run time calling platform platform calling",
    "start": "1398110",
    "end": "1404080"
  },
  {
    "text": "run time all right so this is a controversial talk we",
    "start": "1404080",
    "end": "1411559"
  },
  {
    "text": "picked this one I think so this is by",
    "start": "1411559",
    "end": "1416990"
  },
  {
    "text": "the way I was actually surprised when they were looking at lambda we actually",
    "start": "1416990",
    "end": "1422149"
  },
  {
    "text": "deployed a few applications online and run it for a while but we didn't know how exactly it worked so we looked into",
    "start": "1422149",
    "end": "1428090"
  },
  {
    "text": "it a little bit and we actually found out it was actually two api's exposed where she is a little bit like 3 or 4",
    "start": "1428090",
    "end": "1434870"
  },
  {
    "text": "API endpoints exposed where individual containers when they get spun up they actually say what's the next",
    "start": "1434870",
    "end": "1441110"
  },
  {
    "text": "request and then they pull it and they work with it we think it's a little bit more flexible",
    "start": "1441110",
    "end": "1447470"
  },
  {
    "text": "approach it removes a few problems that you typically end up dealing with if you",
    "start": "1447470",
    "end": "1453500"
  },
  {
    "text": "prefer number two for auto scaling and whatnot but there's a big downside right is that if there is some existing",
    "start": "1453500",
    "end": "1460340"
  },
  {
    "text": "applications that you want to put in this service world and they deal with HTTP workloads right and they just want",
    "start": "1460340",
    "end": "1466639"
  },
  {
    "text": "to accept the HTTP streams or whatever it may be right there is some difficulty there now lambda for example they they",
    "start": "1466639",
    "end": "1475100"
  },
  {
    "text": "had some libraries and whatnot to make it easier right so once you connect once",
    "start": "1475100",
    "end": "1480559"
  },
  {
    "text": "you connect let's say alb like we do in our case with the lambda and use some",
    "start": "1480559",
    "end": "1486529"
  },
  {
    "text": "additional libraries you can still do you know basic HTTP stuff but there is some shims involved any other thoughts",
    "start": "1486529",
    "end": "1494779"
  },
  {
    "text": "from the audience yes",
    "start": "1494779",
    "end": "1499389"
  },
  {
    "text": "Evan says streaming protocols like HTTP - might be harder to put in into model",
    "start": "1509360",
    "end": "1515480"
  },
  {
    "text": "one the model - right that was the assumption that you know if you go is",
    "start": "1515480",
    "end": "1522380"
  },
  {
    "text": "model one you do want that higher level HTTP tool so the point is there is like different types of workloads and for one",
    "start": "1522380",
    "end": "1528530"
  },
  {
    "text": "particular type of workload that's streaming always the amount of one it's not going to work but if you put that",
    "start": "1528530",
    "end": "1533780"
  },
  {
    "text": "one aside then the benefits that you get and I think in the other ones in the other points or criteria we're going to",
    "start": "1533780",
    "end": "1540020"
  },
  {
    "text": "get to it the benefits that you get from model one makes it appealing potentially and I",
    "start": "1540020",
    "end": "1546230"
  },
  {
    "text": "think we can discuss it in the next slide I Ono application okay so before",
    "start": "1546230",
    "end": "1551900"
  },
  {
    "text": "we get to that application invocation contract right and the application invocation contract I think is the layer",
    "start": "1551900",
    "end": "1558430"
  },
  {
    "text": "that in your runtime calls or basically the the layer that your platform uses in",
    "start": "1558430",
    "end": "1564230"
  },
  {
    "text": "order to make data or transfer data to your application right so the three or",
    "start": "1564230",
    "end": "1570290"
  },
  {
    "text": "the four different models that we've seen is that there is like a custom message envelope that can be transferred",
    "start": "1570290",
    "end": "1576650"
  },
  {
    "text": "and like this is the example with lambda for example you get a JSON envelope from the platform and your application deals",
    "start": "1576650",
    "end": "1582710"
  },
  {
    "text": "with it there is the CDN the standard in and standard outs and it happens in some of the platforms and that you know the",
    "start": "1582710",
    "end": "1589130"
  },
  {
    "text": "parameters get passed the application and execute the binary for the application or it can be HTTP similar to",
    "start": "1589130",
    "end": "1594980"
  },
  {
    "text": "what Kay native does and basically making a direct call to the application or it can be a combination of HTTP and",
    "start": "1594980",
    "end": "1602060"
  },
  {
    "text": "cloud events basically passing the message wrapping it in an envelope and passing it in the form of cloud event into the application right so looking at",
    "start": "1602060",
    "end": "1609740"
  },
  {
    "text": "these four options and again like who thinks costume message envelope is a better option and keep in mind that",
    "start": "1609740",
    "end": "1616070"
  },
  {
    "text": "application invocation contract we defined as this lightweight wrapper around your right so it's potentially",
    "start": "1616070",
    "end": "1624050"
  },
  {
    "text": "optional but hopefully the default was in that platform so custom message",
    "start": "1624050",
    "end": "1630320"
  },
  {
    "text": "envelopes I saw one to standard in and standard out there is",
    "start": "1630320",
    "end": "1637060"
  },
  {
    "text": "one HTTP yeah there's a few and then",
    "start": "1637060",
    "end": "1642790"
  },
  {
    "text": "HTTP and cloud events there you go okay so for us we also think that the last",
    "start": "1642790",
    "end": "1650500"
  },
  {
    "text": "one is the better option mostly because you know piggyback on the on the",
    "start": "1650500",
    "end": "1655750"
  },
  {
    "text": "previous point that we made about the runtime contract if your runtime contract actually allows for pulling",
    "start": "1655750",
    "end": "1661840"
  },
  {
    "text": "then the way we thought of the platform is that you actually store that information that comes in or the request",
    "start": "1661840",
    "end": "1667270"
  },
  {
    "text": "that comes in in the form of the package or a client event package envelope and",
    "start": "1667270",
    "end": "1672430"
  },
  {
    "text": "then you keep it and pass it through to your application as you process these requests right and for it to be a",
    "start": "1672430",
    "end": "1679480"
  },
  {
    "text": "standard like cloud event is potentially more useful because then you know there is again like given level of flexibility",
    "start": "1679480",
    "end": "1687190"
  },
  {
    "text": "between if you move your applicator application and move it to a different runtime you can more easily interact",
    "start": "1687190",
    "end": "1692560"
  },
  {
    "text": "with it so for the benefit of using the standard cloud event specifications we",
    "start": "1692560",
    "end": "1698410"
  },
  {
    "text": "thought that you know it's better than custom package a little quicker we have about five minutes sure so execution",
    "start": "1698410",
    "end": "1704890"
  },
  {
    "text": "model you know some of the platforms offer only synchronous some offer both",
    "start": "1704890",
    "end": "1710020"
  },
  {
    "text": "some of her well I don't think any of them offer just a synchronous maybe some do I'm sure someone does so what is it any",
    "start": "1710020",
    "end": "1719650"
  },
  {
    "text": "hands for just synchronous just asynchronous both alright well everybody",
    "start": "1719650",
    "end": "1727180"
  },
  {
    "text": "got both we also think both finally yeah retry model so this one you know you can",
    "start": "1727180",
    "end": "1736090"
  },
  {
    "text": "really slice it and dice it all kinds of ways you know there is something that",
    "start": "1736090",
    "end": "1741460"
  },
  {
    "text": "could be platform provided and obviously platform provided also goes in all kinds of various shades of that right there is",
    "start": "1741460",
    "end": "1748900"
  },
  {
    "text": "a you know there could be internal application internal platform problems that they asked to deal with or he has",
    "start": "1748900",
    "end": "1755230"
  },
  {
    "text": "to be maybe only application specific retry logic or alternative you just go",
    "start": "1755230",
    "end": "1760480"
  },
  {
    "text": "ahead and go leave it to the client right so",
    "start": "1760480",
    "end": "1765860"
  },
  {
    "text": "what do you think number one enhance a couple ends - mostly - alright we pick",
    "start": "1765860",
    "end": "1776900"
  },
  {
    "text": "the other one the reason we pick the other one is it's mostly because we think similar to how",
    "start": "1776900",
    "end": "1783890"
  },
  {
    "text": "service meshes work where they shift some of that responsibility from the",
    "start": "1783890",
    "end": "1790100"
  },
  {
    "text": "end-user from the application writer right into this you know additional",
    "start": "1790100",
    "end": "1796220"
  },
  {
    "text": "component that you don't really have to think or worry about we think that the platform can do a similar kind of help",
    "start": "1796220",
    "end": "1803480"
  },
  {
    "text": "or give similar help to the application writer I'd only think we had any other",
    "start": "1803480",
    "end": "1809350"
  },
  {
    "text": "specific reasons why I would pick this one yeah all right what's next so a",
    "start": "1809350",
    "end": "1815809"
  },
  {
    "text": "concurrency model and auto scaling obviously the three models that we discussed pull based based on the number",
    "start": "1815809",
    "end": "1822530"
  },
  {
    "text": "of requests push based based on the number of requests and then resource based right so pull based number of",
    "start": "1822530",
    "end": "1829370"
  },
  {
    "text": "requests evan push based and the number of requests all right",
    "start": "1829370",
    "end": "1835419"
  },
  {
    "text": "resource based all right so resource base I think HBA and looking at the cpu",
    "start": "1835419",
    "end": "1842990"
  },
  {
    "text": "resources and everything else I think when we looked at it again going back to the runtime that we",
    "start": "1842990",
    "end": "1850220"
  },
  {
    "text": "noticed and basically if you have this async model enable without the pool based based on the number of requests",
    "start": "1850220",
    "end": "1856160"
  },
  {
    "text": "I'm looking at the queue lengths potentially make it easier for you to scale and I think I guess maybe to to",
    "start": "1856160",
    "end": "1863330"
  },
  {
    "text": "even go further than that we don't necessarily think that it would be that useful to have resource based scaling if",
    "start": "1863330",
    "end": "1869480"
  },
  {
    "text": "you are able to deal with the you know determined based on a queue length right",
    "start": "1869480",
    "end": "1875559"
  },
  {
    "text": "which might be controversial yes",
    "start": "1875559",
    "end": "1880779"
  },
  {
    "text": "potentially but then if you have deployed an application that you know let's say you've said hey this",
    "start": "1889570",
    "end": "1896180"
  },
  {
    "text": "application is a single-threaded it only deals with one requested time",
    "start": "1896180",
    "end": "1901970"
  },
  {
    "text": "right you gave it some initial sizing right maybe that's enough not sure all",
    "start": "1901970",
    "end": "1912170"
  },
  {
    "text": "right traffic splitting I think this might be the last one we have we we kind",
    "start": "1912170",
    "end": "1918740"
  },
  {
    "text": "of decided to so I guess offer two options over here that there are not",
    "start": "1918740",
    "end": "1925760"
  },
  {
    "text": "necessarily related to traffic splitting but really influence traffic splitting so we thought native a provisions that",
    "start": "1925760",
    "end": "1931880"
  },
  {
    "text": "facilitate traffic splitting would be nice or alternatively independent apps",
    "start": "1931880",
    "end": "1938710"
  },
  {
    "text": "where if actually you have to push your app multiple times to get different versions and then externally deal with",
    "start": "1938710",
    "end": "1945920"
  },
  {
    "text": "how you route to those things might be another good option thoughts number one",
    "start": "1945920",
    "end": "1951590"
  },
  {
    "text": "who thinks number one is good all right there's a few of them number two nobody",
    "start": "1951590",
    "end": "1958640"
  },
  {
    "text": "thinks number two well maybe one all right we also thought number one is good given that it gives that flexibility and",
    "start": "1958640",
    "end": "1965240"
  },
  {
    "text": "additional data to the integrator and also if the platform provides this based",
    "start": "1965240",
    "end": "1971300"
  },
  {
    "text": "on you know app history and that provisions and easy rollback so what that could be easily achieved more",
    "start": "1971300",
    "end": "1978050"
  },
  {
    "text": "easily achieved so yeah questions that's probably the most controversial slide I think we've done catch us somewhere out",
    "start": "1978050",
    "end": "1985160"
  },
  {
    "text": "there thank you very much [Applause]",
    "start": "1985160",
    "end": "1991060"
  },
  {
    "text": "I don't think",
    "start": "1991060",
    "end": "1994050"
  }
]