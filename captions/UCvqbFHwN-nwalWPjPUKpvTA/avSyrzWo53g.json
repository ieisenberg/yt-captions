[
  {
    "text": "all right hi everyone uh my name is Kate Golden Ring I'm a senior software engineer at firon uh where we build spin",
    "start": "199",
    "end": "6279"
  },
  {
    "text": "the open source developer tool for uh web assembly applications and uh firan Cloud a platform for hosting those",
    "start": "6279",
    "end": "13519"
  },
  {
    "text": "applications I'm Bailey ha I the CTO at Cosmic where we build a distributed app",
    "start": "13519",
    "end": "19439"
  },
  {
    "text": "platform for webly and uh in particular we're both really excited to be up here",
    "start": "19439",
    "end": "25000"
  },
  {
    "text": "together today um we were both at the first cubec con wasum day 3 years ago and it is really impressive to see how",
    "start": "25000",
    "end": "32279"
  },
  {
    "text": "much this community is grown this room is at least twice the size already um and that just speaks to how this word",
    "start": "32279",
    "end": "37719"
  },
  {
    "text": "web assembly which was originally really attached to that web part has really evolved to be a very pervasive",
    "start": "37719",
    "end": "43600"
  },
  {
    "text": "technology um spanning to all different areas of tech um so to kick off I want",
    "start": "43600",
    "end": "48879"
  },
  {
    "text": "to kind of zoom out um in that technical space and talk about what does it mean to build good software um and I think",
    "start": "48879",
    "end": "56000"
  },
  {
    "text": "when you talk about that your first response could be uh build something that does what it's supposed to do uh",
    "start": "56000",
    "end": "61640"
  },
  {
    "text": "that's a good thing to do when you're building software um but if you want to go above and beyond that uh if you're",
    "start": "61640",
    "end": "67240"
  },
  {
    "text": "building good software it should be isolated uh your software shouldn't be able to affect other applications on the",
    "start": "67240",
    "end": "72880"
  },
  {
    "text": "same system uh it should be mitigable so if something does go wrong ideally you can mitigate it and fix it as fast as",
    "start": "72880",
    "end": "79720"
  },
  {
    "text": "possible uh and finally it should be efficient it should only use the resources it needs um and be able to use",
    "start": "79720",
    "end": "85560"
  },
  {
    "text": "whatever resources it's using very efficiently uh so all this comes together in that good software is",
    "start": "85560",
    "end": "92240"
  },
  {
    "text": "software that you can wrap up and pass off to someone else and walk away and",
    "start": "92240",
    "end": "97439"
  },
  {
    "text": "feel like you're really giving a gift to someone and all that comes together to this one word uh where the gift a good",
    "start": "97439",
    "end": "104000"
  },
  {
    "text": "software is that it's maintainable okay so given where we are",
    "start": "104000",
    "end": "111000"
  },
  {
    "text": "right now at LM day you can guess that uh our we're going to meet our prise with answering how do you write good",
    "start": "111000",
    "end": "117000"
  },
  {
    "text": "software well I think good software can start with w um so I want you to pull out your wasm",
    "start": "117000",
    "end": "122640"
  },
  {
    "text": "bingo cards because you're going to hear a lot of these terms probably throughout the day uh and the first one is that uh",
    "start": "122640",
    "end": "128800"
  },
  {
    "text": "wasm is polyglot it's a compilation Target that many high level languages can Target uh it's very small it has a",
    "start": "128800",
    "end": "135640"
  },
  {
    "text": "tiny binary footprint that makes it really great for uh downloading it in a lot of different places it even supports",
    "start": "135640",
    "end": "142040"
  },
  {
    "text": "streaming compilation uh it's portable so it can run across different operating systems and architectures basically if",
    "start": "142040",
    "end": "148840"
  },
  {
    "text": "there's a web assembly run time on it you can run wasm there it's also isolated it's designed to be",
    "start": "148840",
    "end": "154959"
  },
  {
    "text": "sandbox and uh it has an incredibly fast startup time making platforms like the ones that we work on uh a really ideal",
    "start": "154959",
    "end": "162200"
  },
  {
    "text": "place so that we can start wasm super fast uh so it's really great for serous workloads uh and perhaps my favorite",
    "start": "162200",
    "end": "169040"
  },
  {
    "text": "because I'm also the wazzy co-chair is that it's an open standard uh it's been developed within the w3c's community",
    "start": "169040",
    "end": "176239"
  },
  {
    "text": "group and uh through those Open Standards we're able to build build something that uh is cross vender and uh",
    "start": "176239",
    "end": "182800"
  },
  {
    "text": "can really um do a lot of amazing things uh but there's some other terms",
    "start": "182800",
    "end": "188200"
  },
  {
    "text": "that we don't often talk about in terms of wasm and web assembly components and that it's mitigable it's maintainable",
    "start": "188200",
    "end": "196519"
  },
  {
    "text": "and also if you care the combination of all these make it for a really great Target for Green",
    "start": "196519",
    "end": "201840"
  },
  {
    "text": "Computing so a wasm module uh is really as I said before a compilation Target so",
    "start": "201840",
    "end": "208200"
  },
  {
    "text": "I can compile code using r or go or C++ or JavaScript and many many many more uh",
    "start": "208200",
    "end": "214439"
  },
  {
    "text": "to compile to this portable Target it has all the properties that I mentioned before uh but there's this new upand",
    "start": "214439",
    "end": "221799"
  },
  {
    "text": "cominging Evolution uh called Web simply components and so with a web assembly component it wraps a WM module or",
    "start": "221799",
    "end": "229280"
  },
  {
    "text": "multiple WM modules and makes it so that I can actually compose now uh multiple",
    "start": "229280",
    "end": "234959"
  },
  {
    "text": "uh components together and the way that I do that is through interfaces and these interf faes are with exports on",
    "start": "234959",
    "end": "241519"
  },
  {
    "text": "one side so saying the things that I expose on my component and through Imports on the other side saying the",
    "start": "241519",
    "end": "246720"
  },
  {
    "text": "things that I need to be able to run and so I can compose component a and component B together uh but it's even",
    "start": "246720",
    "end": "253319"
  },
  {
    "text": "cooler than that because it also is language interoperable so if I compiled a component with rust and another one",
    "start": "253319",
    "end": "259560"
  },
  {
    "text": "with go I can have these two communicate with each other over my exports and",
    "start": "259560",
    "end": "264960"
  },
  {
    "text": "imports but additionally once I've done this composition uh something",
    "start": "264960",
    "end": "270120"
  },
  {
    "text": "uh is really interesting about this technology in that it enables fine grain sandboxing this composition is through a",
    "start": "270120",
    "end": "276440"
  },
  {
    "text": "shared nothing linking uh so that my linear memory of each one of my coraza",
    "start": "276440",
    "end": "281680"
  },
  {
    "text": "modules and also the globals and maybe even the functions that are not exposed over my exports or Imports uh are now",
    "start": "281680",
    "end": "290080"
  },
  {
    "text": "isolated um and that allows us to really build software in a new way that we",
    "start": "290080",
    "end": "295320"
  },
  {
    "text": "haven't really been able to do before and uh so I think that that um when you",
    "start": "295320",
    "end": "300960"
  },
  {
    "text": "think about where we are right now uh we're building this it's getting it's",
    "start": "300960",
    "end": "306400"
  },
  {
    "text": "getting pretty close and we're going to show some live demos of uh it actually working um but going back a step of like",
    "start": "306400",
    "end": "313919"
  },
  {
    "text": "where's where's our current state of software today uh there was a recent report from cig in in 2023 um this year",
    "start": "313919",
    "end": "322199"
  },
  {
    "text": "from the cloud native security and usage report and they said that 87% of",
    "start": "322199",
    "end": "327479"
  },
  {
    "text": "container images running in production have a critical or high severity uh severe uh vulnerability and that number",
    "start": "327479",
    "end": "334400"
  },
  {
    "text": "is like really high and kind of crazy uh but if you keep reading in the report it says that only 15% of those high and",
    "start": "334400",
    "end": "341560"
  },
  {
    "text": "critical vulnerabilities are actually in use at runtime uh so if you think about",
    "start": "341560",
    "end": "346639"
  },
  {
    "text": "that it means that basically we're our artifacts are including a lot of code that we're not actually even using right",
    "start": "346639",
    "end": "352880"
  },
  {
    "text": "at runtime and and that kind of speaks to the way that we have to build our apps today most of our app logic uh that",
    "start": "352880",
    "end": "359880"
  },
  {
    "text": "is inside our app code uh is is not our own it's open source software usually uh",
    "start": "359880",
    "end": "365680"
  },
  {
    "text": "but what that means is that effectively uh we're pulling in a lot of",
    "start": "365680",
    "end": "371759"
  },
  {
    "text": "stuff and it's really complicated and so uh when you work in an environment that is perhaps regulated there are also all",
    "start": "371759",
    "end": "379280"
  },
  {
    "text": "kinds of new legislation that's coming down the pipe there's a ton that already exists that have uh real teeth to make",
    "start": "379280",
    "end": "385639"
  },
  {
    "text": "sure that we're writing good secure software but the landscape is complex",
    "start": "385639",
    "end": "391039"
  },
  {
    "text": "and it is it varies across regions and so when you look at a diagram like this I realize it's overwhelming this is what",
    "start": "391039",
    "end": "398680"
  },
  {
    "text": "uh my CEO Liam shows every once in a while when he's talking about like the flow through regulatory software life",
    "start": "398680",
    "end": "404800"
  },
  {
    "text": "cycle development and to me it kind of looks like a toilet bowl and uh so my",
    "start": "404800",
    "end": "411360"
  },
  {
    "text": "instinct is like I want to flush it away like I don't want this to be the problem",
    "start": "411360",
    "end": "416400"
  },
  {
    "text": "that we all have to deal with and uh you know if you if you think about it uh when you have an environment like this",
    "start": "416400",
    "end": "423319"
  },
  {
    "text": "you have a Target you have all these regulations then the only security policy that's sort of Saye is to say",
    "start": "423319",
    "end": "429400"
  },
  {
    "text": "okay well we can't have any high or critical cve it doesn't matter if they they aren't actually impacting us or",
    "start": "429400",
    "end": "436160"
  },
  {
    "text": "that we're not you know executing that vulnerable code we just have to get rid of it and so what we end up doing is",
    "start": "436160",
    "end": "441960"
  },
  {
    "text": "rebuilding and recompiling all of our code every month and every developer in this room knows what that's like we all have dependabot our other techniques to",
    "start": "441960",
    "end": "448840"
  },
  {
    "text": "be able to to solve this uh but I want to propose that there's a different way that we can do this and I believe it's",
    "start": "448840",
    "end": "455400"
  },
  {
    "text": "with a componentized ecosystem and so I think that also can be summarized as can I just focus on my",
    "start": "455400",
    "end": "461440"
  },
  {
    "text": "business logic and put all of those dependencies that could have vulnerabilities in their own components",
    "start": "461440",
    "end": "467080"
  },
  {
    "text": "and then have an application that's composable so that I can snap in all those different dependencies and when",
    "start": "467080",
    "end": "472599"
  },
  {
    "text": "something goes wrong um and so an example application that we want to walk through throughout this talk um to kind",
    "start": "472599",
    "end": "479199"
  },
  {
    "text": "of of talk about components is say you have some application that has some middleware you want to do authentication",
    "start": "479199",
    "end": "485400"
  },
  {
    "text": "Well normally your authentication part of your application would be built into the same application um but instead what",
    "start": "485400",
    "end": "491919"
  },
  {
    "text": "if your authentication middleware could be its own isolated component so that the secrets it needs is isolated in its",
    "start": "491919",
    "end": "497560"
  },
  {
    "text": "component and that you truly never enter your business logic unless you're authenticated um so this diagram kind of",
    "start": "497560",
    "end": "504479"
  },
  {
    "text": "displays that we have two components like I mentioned that middleware component and then your business logic component and here's where we talk about",
    "start": "504479",
    "end": "510759"
  },
  {
    "text": "those interfaces again those imports and exports that the component model um brings about and in particular we talk",
    "start": "510759",
    "end": "517240"
  },
  {
    "text": "we're talking about the incoming Handler import here um so our authentication middleware component is going to say",
    "start": "517240",
    "end": "523440"
  },
  {
    "text": "that it um it Imports an incom or it exports an incoming Handler so saying you can pass me an incoming Handler from",
    "start": "523440",
    "end": "529920"
  },
  {
    "text": "the web assembly host and then you'll see that it also Imports one so then it can pass that same HTTP request to your",
    "start": "529920",
    "end": "537360"
  },
  {
    "text": "business logic if Authentication succeeds um and so another thing to notice about this diagram is you'll see",
    "start": "537360",
    "end": "543440"
  },
  {
    "text": "Wy CLI environment so the second part of that is what I was saying and where ideally you could expose only your",
    "start": "543440",
    "end": "549279"
  },
  {
    "text": "secrets from the host only a few environment variables and then that middleware component can import those",
    "start": "549279",
    "end": "555440"
  },
  {
    "text": "but the business logic component will not be able to see those so we have multiple levels of isolation here and so",
    "start": "555440",
    "end": "561519"
  },
  {
    "text": "we're going to go ahead and demo this um using wasm time which is uh one of the",
    "start": "561519",
    "end": "567560"
  },
  {
    "text": "most popular run times in the space and is U maintained by the bite code Alliance um and before uh we kind of",
    "start": "567560",
    "end": "575120"
  },
  {
    "text": "talk through and and this demo that we're going to be showing um is available here on GitHub and I want to",
    "start": "575120",
    "end": "581480"
  },
  {
    "text": "make a huge shout out to Michelle denani and Brian hardock who work with me at Fon who put this together um and the",
    "start": "581480",
    "end": "587839"
  },
  {
    "text": "demo consists of those two um components that were in our diagram you have your um uh you have your authentication",
    "start": "587839",
    "end": "594680"
  },
  {
    "text": "middleware which is a GitHub oo application so it runs through the normal GitHub ooth protocol there and",
    "start": "594680",
    "end": "600920"
  },
  {
    "text": "then you have your business logic which we're just calling your example application and all this business logic",
    "start": "600920",
    "end": "606120"
  },
  {
    "text": "is is um it simply returns an HTTP response with a body that says my",
    "start": "606120",
    "end": "612120"
  },
  {
    "text": "business logic executed so the idea here is that we only see that line if we",
    "start": "612120",
    "end": "617560"
  },
  {
    "text": "passed and authenticated um properly our application so we have this cloned here",
    "start": "617560",
    "end": "623360"
  },
  {
    "text": "locally and first I'm just going to run it and then we'll talk through what um commands we used using some open source",
    "start": "623360",
    "end": "631040"
  },
  {
    "text": "tooling okay so you can see here wasm 's now serving up our component we'll talk through how we put that together in a",
    "start": "634040",
    "end": "640240"
  },
  {
    "text": "little bit and that it's served up on Local Host 3000 um so let me before we go let's",
    "start": "640240",
    "end": "647000"
  },
  {
    "text": "just make sure our cookies are cleared here okay we shouldn't have any cookies",
    "start": "647000",
    "end": "652079"
  },
  {
    "text": "okay so we're going to log in log in with GitHub and now um we're going to have",
    "start": "652079",
    "end": "658040"
  },
  {
    "text": "Bailey come in here",
    "start": "658040",
    "end": "663279"
  },
  {
    "text": "and I'm gonna really come in here now",
    "start": "664399",
    "end": "670800"
  },
  {
    "text": "great okay we're authenticating with our GitHub oath one more this is really layered we're",
    "start": "670800",
    "end": "678120"
  },
  {
    "text": "layered and our business logic executed um so wow thank you um so what just",
    "start": "681279",
    "end": "689480"
  },
  {
    "text": "happened there if we look through the series of commands there first we built our first component using cargo",
    "start": "689480",
    "end": "695639"
  },
  {
    "text": "component so cargo component is an upstream tool also maintained by the bik code Alliance that helps you build",
    "start": "695639",
    "end": "701160"
  },
  {
    "text": "components uh in Rust and what we did here uh which we don't recommend is we",
    "start": "701160",
    "end": "706360"
  },
  {
    "text": "compiled in those environment variables so while that doc while that diagram showed importing them and having them",
    "start": "706360",
    "end": "711800"
  },
  {
    "text": "exposed via the runtime we aren't doing that in this demo just because that's not universally supported yet but it's coming very soon um and we also spe",
    "start": "711800",
    "end": "718920"
  },
  {
    "text": "specified the call back URL um to our application uh once we've authenticated which has also been configured in our",
    "start": "718920",
    "end": "724320"
  },
  {
    "text": "GitHub O ooth app so now at that first after that first cargo component build",
    "start": "724320",
    "end": "730079"
  },
  {
    "text": "we have outputed our GitHub oo. wasm file that was a our first component then",
    "start": "730079",
    "end": "735320"
  },
  {
    "text": "we do a second cargo component build and that's of our business logic so that was our example app and after that we have",
    "start": "735320",
    "end": "741720"
  },
  {
    "text": "an example. wasm and so finally we compose them using wasm tools another Upstream open source tool for uh web",
    "start": "741720",
    "end": "748120"
  },
  {
    "text": "assembly component ipulation and we basically are saying take that GitHub oo application and line up its exports with",
    "start": "748120",
    "end": "754639"
  },
  {
    "text": "the imports and exports of the example application and then output that resolved finalized component which is",
    "start": "754639",
    "end": "760680"
  },
  {
    "text": "service. wasm and then our final uh step there was what you see in the terminal down here let's serve it and what wasm",
    "start": "760680",
    "end": "767240"
  },
  {
    "text": "time serve which is a new subcommand in the latest release of 14.0 of wasm time",
    "start": "767240",
    "end": "772360"
  },
  {
    "text": "is basically says I'll forward htb requests to this component um so let's",
    "start": "772360",
    "end": "778440"
  },
  {
    "text": "uh go",
    "start": "778440",
    "end": "780839"
  },
  {
    "text": "back that all worked um but we also want to talk about that other part of good software which is mitigable software is",
    "start": "784079",
    "end": "791199"
  },
  {
    "text": "great um so first what how can we uh find an equation for what mitigation",
    "start": "791199",
    "end": "796720"
  },
  {
    "text": "looks like so mitigation can be also interpret interpreted as the meantime to resolve a vulnerability so it's the time",
    "start": "796720",
    "end": "803480"
  },
  {
    "text": "to detect plus the time to fix and the time to release so time to detect that VAR um depends on like the reporting of",
    "start": "803480",
    "end": "810680"
  },
  {
    "text": "your space um but the time to fix and the time to release we think that web assembly drastically",
    "start": "810680",
    "end": "817760"
  },
  {
    "text": "reduces so let's walk through some scenarios uh and see a couple things go wrong first one say you have a",
    "start": "817760",
    "end": "823600"
  },
  {
    "text": "vulnerability in that authentication middleware component well one thing to notice about this component is that it is ubiquitous I could plug this",
    "start": "823600",
    "end": "830560"
  },
  {
    "text": "authentication middleware component into any application it's not specific to my business logic rather you could imagine",
    "start": "830560",
    "end": "836320"
  },
  {
    "text": "any uh componentized application using this so under that definition it can kind of be seen as a library that would",
    "start": "836320",
    "end": "841639"
  },
  {
    "text": "be maintained upstream and actually there is a registry uh within the component space that's under development",
    "start": "841639",
    "end": "847480"
  },
  {
    "text": "called War where you could imagine this would be an upstream component that would live there so let's say there's a vulnerability in the authentication",
    "start": "847480",
    "end": "853880"
  },
  {
    "text": "middleware well the Upstream maintainer would likely patch it and all you need to do is pull down thatw file and relink",
    "start": "853880",
    "end": "860160"
  },
  {
    "text": "it um so I didn't have to do any rebuilds I just had to do a relink and I actually didn't even need to um modify",
    "start": "860160",
    "end": "866839"
  },
  {
    "text": "my dependency chain to fit this new um new library that I'm or new patched",
    "start": "866839",
    "end": "872639"
  },
  {
    "text": "Library so let's take another scenario let's say it's my fault um something in",
    "start": "872639",
    "end": "877720"
  },
  {
    "text": "my business logic went wrong uh so yeah I do need to actually fix that uh so I'm",
    "start": "877720",
    "end": "882800"
  },
  {
    "text": "going to rebuild that component um but the authentication middleware or if we expand this to a bigger scenario all the",
    "start": "882800",
    "end": "889399"
  },
  {
    "text": "other libraries that are componentized that you're bringing in you don't need to rebuild or re resolve how they interact with each other because of",
    "start": "889399",
    "end": "895160"
  },
  {
    "text": "these tightly uh tightly typed interfaces um and you can imagine your business logic actually might be broken",
    "start": "895160",
    "end": "900680"
  },
  {
    "text": "up into several components too maybe one team in your company manages some components others and others and they're all composed together so your section of",
    "start": "900680",
    "end": "907920"
  },
  {
    "text": "the business logic having a vulnerability isn't going to result in anyone else having to do more work so we",
    "start": "907920",
    "end": "913079"
  },
  {
    "text": "rebuild that we relink it um and re-release it and that is a shorter Loop",
    "start": "913079",
    "end": "918360"
  },
  {
    "text": "for some problem that I caused and let's talk about a third scenario so both of us have platform and",
    "start": "918360",
    "end": "924680"
  },
  {
    "text": "Cloud providers for running web assembly and hosting your web assembly app applications so the third scenario is",
    "start": "924680",
    "end": "930600"
  },
  {
    "text": "that you don't have to do anything your platform provider fixes the problem and the only reason that's enabled within",
    "start": "930600",
    "end": "935839"
  },
  {
    "text": "the web assembly and component model ecosystem is because there's a concept of guest components and host components",
    "start": "935839",
    "end": "942000"
  },
  {
    "text": "so host component can be thought of as something that exists alongside with the runtime and oftentimes these have",
    "start": "942000",
    "end": "947480"
  },
  {
    "text": "clients in them so maybe it's a key Value Store client so maybe a reddis client and you can imagine that our",
    "start": "947480",
    "end": "953360"
  },
  {
    "text": "business logic maybe it uses a cache so it writes some keys and values to that key Value Store well that's actually",
    "start": "953360",
    "end": "959279"
  },
  {
    "text": "going to be um the client for that is actually going to live with the web assembly runtime so imagine if there was",
    "start": "959279",
    "end": "965000"
  },
  {
    "text": "a vulnerability there uh your platform provider could patch that and fix that for you and you didn't need to worry",
    "start": "965000",
    "end": "970160"
  },
  {
    "text": "about rebuilding that client into your code rather the host component handles it and that once again is an ubiquitous",
    "start": "970160",
    "end": "977639"
  },
  {
    "text": "host component so there's also a world where that could be maintained upstream and your cloud provider actually only",
    "start": "977639",
    "end": "982800"
  },
  {
    "text": "needs to pull down the patched version of that too so we saw multiple scenarios of",
    "start": "982800",
    "end": "989720"
  },
  {
    "text": "where first of all we built a componentized application and we saw how we were able to mitigate that um any",
    "start": "989720",
    "end": "995959"
  },
  {
    "text": "security vulnerabilities that would happen with it and we did in a way that increased developer productivity um but we also did it in a way that increased",
    "start": "995959",
    "end": "1002880"
  },
  {
    "text": "environmental efficiency of the way we're building our applications yeah so consider this in",
    "start": "1002880",
    "end": "1009120"
  },
  {
    "text": "the in the in the scenarios that Kate just walked through uh we never really ended up rebuilding an entire",
    "start": "1009120",
    "end": "1015040"
  },
  {
    "text": "application we were just rebuilding that one piece uh of the problem that changed but conventionally in in the way that we",
    "start": "1015040",
    "end": "1021560"
  },
  {
    "text": "build software today uh we have really matrices of matrices uh we've got like",
    "start": "1021560",
    "end": "1027120"
  },
  {
    "text": "say uh multiple Go versions maybe multiple operating systems and uh maybe",
    "start": "1027120",
    "end": "1032520"
  },
  {
    "text": "even uh different platform architectures right um and so I pulled these two uh one was from a uh a goang library that",
    "start": "1032520",
    "end": "1040959"
  },
  {
    "text": "um I used to use and and then another one was just straight out of the docker documentation so this is like a you know",
    "start": "1040959",
    "end": "1046880"
  },
  {
    "text": "I would say a fairly common pattern that you see uh across most of our builds is that we are building against operating",
    "start": "1046880",
    "end": "1053039"
  },
  {
    "text": "system architecture language versions uh maybe even different versions of Frameworks um and then we're also doing",
    "start": "1053039",
    "end": "1058480"
  },
  {
    "text": "that exact same Loop for testing uh and then when we package we're usually packaging for that different Target",
    "start": "1058480",
    "end": "1064039"
  },
  {
    "text": "operating system and architecture and so you can imagine every single change that comes down the pipe say every single",
    "start": "1064039",
    "end": "1069720"
  },
  {
    "text": "time we're turning our dependencies we're rebuilding the entire world uh and so that is pretty costly um but in a",
    "start": "1069720",
    "end": "1077200"
  },
  {
    "text": "componentized ecosystem when we look at this we can say that we would only build once because we're building one portable",
    "start": "1077200",
    "end": "1083159"
  },
  {
    "text": "Target architecture when we test we only need to test on our runtime that we're running on once and when we package well",
    "start": "1083159",
    "end": "1091039"
  },
  {
    "text": "actually we're already packaged that's what's kind of cool is that components are packages so I don't need to like run",
    "start": "1091039",
    "end": "1097120"
  },
  {
    "text": "a bunch of numbers for you to say this could really change the way that we write software and a really amazing way",
    "start": "1097120",
    "end": "1104400"
  },
  {
    "text": "that I think developers genuinely want and need so uh we've got more so let's",
    "start": "1104400",
    "end": "1112679"
  },
  {
    "text": "bring it back to that demo um so bayy just mentioned how web assembly applications are incredibly portable and",
    "start": "1112679",
    "end": "1118480"
  },
  {
    "text": "we're using that definition of cross architecture and cross operating system but we want to bring a new definition",
    "start": "1118480",
    "end": "1123799"
  },
  {
    "text": "there uh one that means there's no vendor lock in uh this web assembly component can run across clouds and the",
    "start": "1123799",
    "end": "1129679"
  },
  {
    "text": "reason why that's possible is because we have all these interfaces like the HTTP interface we've been talking about that",
    "start": "1129679",
    "end": "1135600"
  },
  {
    "text": "are uh Community defined and and um if as long as your Cloud supports that",
    "start": "1135600",
    "end": "1141280"
  },
  {
    "text": "interface and another Cloud supports that interface your web assembly module or web assembly component can run AC",
    "start": "1141280",
    "end": "1146600"
  },
  {
    "text": "from one and also on the other so we demoed earlier using local Upstream",
    "start": "1146600",
    "end": "1152080"
  },
  {
    "text": "tooling to run this right here on this laptop but now we're going to demo running it on firon cloud um the cloud",
    "start": "1152080",
    "end": "1158600"
  },
  {
    "text": "that I develop and then we're going to run it on cosmotic where Bailey develops that cloud um to show that this same",
    "start": "1158600",
    "end": "1164679"
  },
  {
    "text": "service. WM is entirely portable",
    "start": "1164679",
    "end": "1170240"
  },
  {
    "text": "okay so while this is deploying um you'll notice that in our make file um this looks just like the commands we did",
    "start": "1178880",
    "end": "1185320"
  },
  {
    "text": "earlier the only reason we're rebuilding this is to embed different client secrets in a different call back URL um",
    "start": "1185320",
    "end": "1191600"
  },
  {
    "text": "but if in the future when we have that environment variable injection support we wouldn't need to do a rebuild at all",
    "start": "1191600",
    "end": "1197480"
  },
  {
    "text": "um so now we've deployed our app to fir on cloud so we can go ahead",
    "start": "1197480",
    "end": "1203440"
  },
  {
    "text": "and try and see that lovely business logic string again I'll take a moment",
    "start": "1203440",
    "end": "1208600"
  },
  {
    "text": "for to make sure it's fully deployed and so what we used to build this application um was spin so that's",
    "start": "1208600",
    "end": "1215200"
  },
  {
    "text": "the developer tool I mentioned earlier um which helps you get started quickly developing um web assembly applications",
    "start": "1215200",
    "end": "1221000"
  },
  {
    "text": "with a spin new and then we could have run this locally with a spin up um and our last command of that cycle is a spin",
    "start": "1221000",
    "end": "1226919"
  },
  {
    "text": "deploy um to the class and when you do a spin deploy um you get your custom URL or you can use the",
    "start": "1226919",
    "end": "1233640"
  },
  {
    "text": "custom domain as we did here and then we're going to log in so do our same Loop um and we already had cashed those",
    "start": "1233640",
    "end": "1240919"
  },
  {
    "text": "credentials from Bailey's GitHub so we're",
    "start": "1240919",
    "end": "1245399"
  },
  {
    "text": "in okay one more one more CL um so right we we're just going to show that we can",
    "start": "1246679",
    "end": "1252400"
  },
  {
    "text": "run it uh portably in multiple places and um as Kate said uh we're rebuilding here uh because we haven't gotten the",
    "start": "1252400",
    "end": "1260400"
  },
  {
    "text": "the ubiquitous tooling but if you're into that please talk to me after I have lots of ideas uh both in the bod",
    "start": "1260400",
    "end": "1267400"
  },
  {
    "text": "Alliance space and uh within wazzy the working group and um so I'm rebuilding",
    "start": "1267400",
    "end": "1273080"
  },
  {
    "text": "and launching here same thing um one difference is that I'm using the wasm cloud uh which is a cncf project and I'm",
    "start": "1273080",
    "end": "1280640"
  },
  {
    "text": "using the CLI for that to sign it um so now I've got a signed component and then",
    "start": "1280640",
    "end": "1285760"
  },
  {
    "text": "I I ran a similar command to what Kate but something that launches into my cloud uh and so I've successfully",
    "start": "1285760",
    "end": "1292559"
  },
  {
    "text": "launched it and let's go over here oh I remember we uh we want to make sure it",
    "start": "1292559",
    "end": "1298880"
  },
  {
    "text": "shows up in an incognito window so it's like you know look no cash and it should",
    "start": "1298880",
    "end": "1304600"
  },
  {
    "text": "still have the GitHub token and we're in business logic",
    "start": "1304600",
    "end": "1311480"
  },
  {
    "text": "um um so I guess to recap what just happened there uh we took the same service. wasam and run it locally and",
    "start": "1314279",
    "end": "1321159"
  },
  {
    "text": "then across clouds um we filled out our whole wasm bingo card uh we talked about how wasam is inherently isolated with",
    "start": "1321159",
    "end": "1327919"
  },
  {
    "text": "its own linear memory um we talked about how it's mitigable walk through a few scenarios how it's green build once um",
    "start": "1327919",
    "end": "1334480"
  },
  {
    "text": "and truly portable with multiple definitions of that word and um a lot of what you saw here actually the majority",
    "start": "1334480",
    "end": "1339799"
  },
  {
    "text": "of it is open source tooling that you can get involved in um so we hope this kind of ties a bow on the beginning of",
    "start": "1339799",
    "end": "1345480"
  },
  {
    "text": "the day um and you see the gift that is web assembly yeah and and uh if you're excited about",
    "start": "1345480",
    "end": "1351919"
  },
  {
    "text": "this future that we just painted here um please get involved uh we both uh are",
    "start": "1351919",
    "end": "1357240"
  },
  {
    "text": "are contributors in the bik Cod Alliance uh Foundation there's also uh if you're interested in the standard side of the",
    "start": "1357240",
    "end": "1362799"
  },
  {
    "text": "house uh the w3c wasm working group um then also inside the cncf uh there's a",
    "start": "1362799",
    "end": "1369000"
  },
  {
    "text": "wasm working group as well uh so if you're focused more on like say you know hey what would be my artifact definition",
    "start": "1369000",
    "end": "1375120"
  },
  {
    "text": "of a component inside oci that would be your place and then both of our projects are open source uh spin is what Kate",
    "start": "1375120",
    "end": "1383159"
  },
  {
    "text": "showed off and then WM cloud is a cncf project uh here so I think there are",
    "start": "1383159",
    "end": "1388440"
  },
  {
    "text": "several more talks too later so um please talk to us we're going to be walking around and I think that it'll be",
    "start": "1388440",
    "end": "1394799"
  },
  {
    "text": "really fun building the next future of applications thank you",
    "start": "1394799",
    "end": "1400559"
  },
  {
    "text": "everyone I think everybody can see why this talk ended up voted right to the top of the day um any questions for Kate",
    "start": "1404080",
    "end": "1410480"
  },
  {
    "text": "or for Bailey",
    "start": "1410480",
    "end": "1417760"
  },
  {
    "text": "oh great demos thanks very much that was awesome um I've used wasum uh tools",
    "start": "1417919",
    "end": "1424520"
  },
  {
    "text": "composed to take two different WMS and combine them together uh through that",
    "start": "1424520",
    "end": "1429559"
  },
  {
    "text": "interface what work is being done on kind of dynamic negotiation between components that's a great question so uh",
    "start": "1429559",
    "end": "1437400"
  },
  {
    "text": "lots of different areas of work um is Peter hun here okay well I'm gonna give",
    "start": "1437400",
    "end": "1442440"
  },
  {
    "text": "Peter hun a shout out he's been working on a linking language uh and so instead of having that yo file or the CLI",
    "start": "1442440",
    "end": "1448559"
  },
  {
    "text": "interface uh being able to define a linking language to be able to compose those components together uh if we have",
    "start": "1448559",
    "end": "1454520"
  },
  {
    "text": "that it would be really easy for runtime say on the fly to do this now this linking is always going to be static uh",
    "start": "1454520",
    "end": "1461120"
  },
  {
    "text": "and and that's really a great benefit also for security posture and that I'm able to statically analyze and say what are you trying to do here are you trying",
    "start": "1461120",
    "end": "1468080"
  },
  {
    "text": "to open up some sockets did I actually check that I set up firewall rules correctly right so um giving the",
    "start": "1468080",
    "end": "1473440"
  },
  {
    "text": "opportunity for the runtime to create a Sandbox environment uh so um I would say",
    "start": "1473440",
    "end": "1478559"
  },
  {
    "text": "linking language um extra work on shared everything linking uh is coming I I also",
    "start": "1478559",
    "end": "1484880"
  },
  {
    "text": "want to shout out like Joel dice would be another person to talk to uh here uh if you want to know more um so I think",
    "start": "1484880",
    "end": "1492559"
  },
  {
    "text": "basically that Dynamic at runtime linking is going to be something that you get out of the platform so uh Kate's",
    "start": "1492559",
    "end": "1498520"
  },
  {
    "text": "scenario 3 what I really expect to see going forward is a lot of different wasm",
    "start": "1498520",
    "end": "1504159"
  },
  {
    "text": "platform providers will just kind of automatically mitigate all of the stuff for you as a developer we might you",
    "start": "1504159",
    "end": "1510279"
  },
  {
    "text": "might get an alert and be like hey we just fixed your stuff for you celebrate um but uh it would never be something",
    "start": "1510279",
    "end": "1516120"
  },
  {
    "text": "that the developer would necessarily have to take an action and uh that's how you get software that is just truly",
    "start": "1516120",
    "end": "1524320"
  },
  {
    "text": "maintainable I've got a question uh bail and Kate when we think about all the big epics of tech we've had before whether",
    "start": "1525399",
    "end": "1531760"
  },
  {
    "text": "it was virtual machines public Cloud kubernetes uh or containers um there was",
    "start": "1531760",
    "end": "1537720"
  },
  {
    "text": "always one artifact that everybody could collaborate around and build an ecosystem around so my question for",
    "start": "1537720",
    "end": "1542919"
  },
  {
    "text": "either of you is is this web assembly's Docker moment um that was such a well prompted",
    "start": "1542919",
    "end": "1549320"
  },
  {
    "text": "question um I I would say yes um I think we have a huge potential to have this",
    "start": "1549320",
    "end": "1555320"
  },
  {
    "text": "new unit which is components or web assembly um that can pave the way for a new way of developing applications so as",
    "start": "1555320",
    "end": "1560799"
  },
  {
    "text": "Liam mentioned we have VMS which was kind of you were able to isolate your application from another application but",
    "start": "1560799",
    "end": "1565880"
  },
  {
    "text": "they were still fairly monolithic and then you had containers which created this microservice approach and now we're at the web assembly era where we can",
    "start": "1565880",
    "end": "1572039"
  },
  {
    "text": "really create these small tiny um ideally maybe functions that can kick",
    "start": "1572039",
    "end": "1577799"
  },
  {
    "text": "off in microseconds sometimes um so that creates this new paradigm of computing",
    "start": "1577799",
    "end": "1582840"
  },
  {
    "text": "where you can have really reactive serverless applications and that's powered by a new form of compute uh",
    "start": "1582840",
    "end": "1588520"
  },
  {
    "text": "namely web assembly and just like the previous EPO you have a new way that you have to build your applications in order",
    "start": "1588520",
    "end": "1594520"
  },
  {
    "text": "to take advantage of this Liam I saw questions on this side of the house yeah uh who had a question",
    "start": "1594520",
    "end": "1600679"
  },
  {
    "text": "over here coming",
    "start": "1600679",
    "end": "1604158"
  },
  {
    "text": "down so I've been working on building a culture of web assembly within our company and in the getting to that goal",
    "start": "1609440",
    "end": "1617039"
  },
  {
    "text": "I've buil a few reference implementations both in CIS and different backends and one of the things",
    "start": "1617039",
    "end": "1622120"
  },
  {
    "text": "I've noticed is that in the WM runtime the applications default to UTC it seems",
    "start": "1622120",
    "end": "1627480"
  },
  {
    "text": "as if they don't have the certain Integrations with the operating system as a native binary does I was wondering if that was an issue y'all have come",
    "start": "1627480",
    "end": "1633640"
  },
  {
    "text": "across and maybe work past or if it's a contribution opportunity I would say all",
    "start": "1633640",
    "end": "1640080"
  },
  {
    "text": "contributions super welcome as a default maintainer answer here uh I think that",
    "start": "1640080",
    "end": "1645640"
  },
  {
    "text": "wasm time itself um definitely lends itself usually to being embedded uh in",
    "start": "1645640",
    "end": "1650960"
  },
  {
    "text": "other pieces of software so that might help explain why you know that's not a major area that's like filled out but um",
    "start": "1650960",
    "end": "1659320"
  },
  {
    "text": "as we've recently changed our CLI we've learned that there are actually a ton of wasmtime CLI uh consumers and so um I",
    "start": "1659320",
    "end": "1666919"
  },
  {
    "text": "think that type of change would be really you know welcome I can point you to some of the WM time maintainers while",
    "start": "1666919",
    "end": "1672559"
  },
  {
    "text": "we're here uh and and i' be happy to connect to you thank you I look forward to that",
    "start": "1672559",
    "end": "1679080"
  },
  {
    "text": "other questions",
    "start": "1679080",
    "end": "1682039"
  },
  {
    "text": "Bruce thanks you look nervous sorry what I'm GNA ask um yeah I was wondering what",
    "start": "1686600",
    "end": "1694240"
  },
  {
    "text": "um you talked about that aspect of sharing components where you can apply security or fixing runtimes um",
    "start": "1694240",
    "end": "1701240"
  },
  {
    "text": "vulnerabilities which need to be fixed with that component model which looked interesting and what I was wondering",
    "start": "1701240",
    "end": "1707240"
  },
  {
    "text": "though is and and one aspect of that if I understood correctly is that it's not going to break the application when you",
    "start": "1707240",
    "end": "1713519"
  },
  {
    "text": "do that and what my question though was EVP ebpf is there can that be applied I",
    "start": "1713519",
    "end": "1721120"
  },
  {
    "text": "mean what I see with that is that you can it has these interesting Hooks and",
    "start": "1721120",
    "end": "1726760"
  },
  {
    "text": "you're able to apply certain tools and I was wondering if that would be applicable",
    "start": "1726760",
    "end": "1732480"
  },
  {
    "text": "to um wasum modules mind if I take this one okay so uh something we didn't show",
    "start": "1732480",
    "end": "1739240"
  },
  {
    "text": "is that these interfaces are also versioned uh so usually when you're you're worried about like breaking an",
    "start": "1739240",
    "end": "1744880"
  },
  {
    "text": "application it's because the API changed and it broke right uh and so when you tried to recompile it it gives you like",
    "start": "1744880",
    "end": "1751440"
  },
  {
    "text": "some compiler error but these interfaces are strongly typed uh so you would know",
    "start": "1751440",
    "end": "1757760"
  },
  {
    "text": "immediately whether or not they don't work um and the other thing is that it gives you this like ultimate level of",
    "start": "1757760",
    "end": "1762799"
  },
  {
    "text": "flexibility because that's your API surface layer so say your logic on the inside Chang is then whatever you expose",
    "start": "1762799",
    "end": "1769480"
  },
  {
    "text": "over that interface doesn't necessarily have to be the internal API it's that's your public facing API so uh the first",
    "start": "1769480",
    "end": "1775919"
  },
  {
    "text": "thing I would say is if you're building something like as important as wazzy key value interface that piece is not going",
    "start": "1775919",
    "end": "1781080"
  },
  {
    "text": "to be changing very often that API layer the client pieces that connect to it will frequently change and the protocols",
    "start": "1781080",
    "end": "1787559"
  },
  {
    "text": "too uh but that's not exposed to the user so this is like a really nice way of consuming uh libraries and the other",
    "start": "1787559",
    "end": "1794279"
  },
  {
    "text": "side of your question was about ebpf uh yes um there is so much cool stuff happening",
    "start": "1794279",
    "end": "1800080"
  },
  {
    "text": "in that space right now uh last wasm day I think we saw two different talks on it",
    "start": "1800080",
    "end": "1805320"
  },
  {
    "text": "at least one uh where uh folks are both figuring out how to run wasm uh modules",
    "start": "1805320",
    "end": "1811039"
  },
  {
    "text": "and as part of ebpf because right wm's the last plug-in model you'll ever need and so with ebpf uh it's kind of hard to",
    "start": "1811039",
    "end": "1818440"
  },
  {
    "text": "write code that um you know it's it's in the kernel space and so with WM you're able to now enable programs to use it or",
    "start": "1818440",
    "end": "1825399"
  },
  {
    "text": "write programs for the user space so so like that's one key part of that um and then I would say that both of us like I",
    "start": "1825399",
    "end": "1832120"
  },
  {
    "text": "can at least speak for cosonic we use cium uh as part of our isolation strategy for the networking layer and if",
    "start": "1832120",
    "end": "1838640"
  },
  {
    "text": "you're into that um the guys who wrote net re for that side of it are here as well Dan in the back um so please talk",
    "start": "1838640",
    "end": "1845600"
  },
  {
    "text": "to him if You' like uh talking ebpf and celium uh with there for your networking policies so yeah um good questions yeah",
    "start": "1845600",
    "end": "1853120"
  },
  {
    "text": "that was a that was nandor at Cisco that did the talk at the last boscom that's on YouTube if you want to check that out sorry Kate I didn't I was just going to",
    "start": "1853120",
    "end": "1859399"
  },
  {
    "text": "follow up I think one part of your question was is this going to break as we're rolling out the fix and you can just use any sort of cloud Ops to roll",
    "start": "1859399",
    "end": "1865880"
  },
  {
    "text": "that out in a way that it it wouldn't you would still be serving previously with your previous version of your runtime while you roll out your new",
    "start": "1865880",
    "end": "1871679"
  },
  {
    "text": "updated runtime with the host component patched we had time for one more",
    "start": "1871679",
    "end": "1878278"
  },
  {
    "text": "question all right everybody please join me in thanking Kate and",
    "start": "1880200",
    "end": "1885679"
  },
  {
    "text": "Bailey",
    "start": "1886240",
    "end": "1889240"
  }
]