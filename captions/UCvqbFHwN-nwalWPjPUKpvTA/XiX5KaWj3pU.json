[
  {
    "text": "good morning everybody nice to meet you guys my name is gray I'm chukumo B",
    "start": "0",
    "end": "7799"
  },
  {
    "text": "um that's my Twitter handle I'm not I think I've barely been on",
    "start": "7799",
    "end": "13920"
  },
  {
    "text": "Facebook for a while so that's why I didn't bother putting that ball yeah you can find me on Facebook with my name and on Instagram so",
    "start": "13920",
    "end": "21000"
  },
  {
    "text": "um today I'm going to be talking to you guys about my journey to Cloud native",
    "start": "21000",
    "end": "26599"
  },
  {
    "text": "kubernetes and trying to secure it so this talk is you know I'll say for the",
    "start": "26599",
    "end": "31980"
  },
  {
    "text": "newbies people trying to delve you know into the whole Cloud native bandwagon",
    "start": "31980",
    "end": "37380"
  },
  {
    "text": "the ecosystem and then just to give you like a route on how to go about learning",
    "start": "37380",
    "end": "42420"
  },
  {
    "text": "these Technologies so for me it all started you know with the workshop",
    "start": "42420",
    "end": "48300"
  },
  {
    "text": "um when I was still in uni during my final year studying software engineering at Cardiff met so and I think it was six",
    "start": "48300",
    "end": "55739"
  },
  {
    "text": "of my friends we had like a friend group where we try you know to attend as much workshops and seminars as possible you",
    "start": "55739",
    "end": "64198"
  },
  {
    "text": "know possibly ones that will give us some badge to add to our LinkedIn profile to help us with our job search",
    "start": "64199",
    "end": "69840"
  },
  {
    "text": "and job hunt so that was how we came across you know the kubernetes workshops and you know we all jumped on it",
    "start": "69840",
    "end": "77100"
  },
  {
    "text": "and then you know it was I'll say it was a good experience then even though you",
    "start": "77100",
    "end": "83100"
  },
  {
    "text": "know everything was so vague and you know so alien to us at the time so but",
    "start": "83100",
    "end": "89820"
  },
  {
    "text": "they instructed a very good job you know starting to explain",
    "start": "89820",
    "end": "94759"
  },
  {
    "text": "um give us an overview about the different architecture and the monolithic architecture and the micro",
    "start": "94920",
    "end": "101100"
  },
  {
    "text": "service architecture so for me at the time I got to you know understand that all the soil I've been developing you",
    "start": "101100",
    "end": "108299"
  },
  {
    "text": "know using the monolithic architecture without even now knowing about it you know went on after the research to after",
    "start": "108299",
    "end": "115259"
  },
  {
    "text": "the workshop to do my own research to really get to understand this different architectures so you know for me I was",
    "start": "115259",
    "end": "123420"
  },
  {
    "text": "like if we've been developing using this architecture and everything has been working fine so why the need for the",
    "start": "123420",
    "end": "130500"
  },
  {
    "text": "whole microservices and kubernetes because everything sounded so difficult so I'm just going to touch on some of",
    "start": "130500",
    "end": "138120"
  },
  {
    "text": "the advantages of Monolithic architecture and you know the disadvantages and then we'll move from",
    "start": "138120",
    "end": "145379"
  },
  {
    "text": "there so I guess one of the key advantages of the monolithic architecture will be that you know it's",
    "start": "145379",
    "end": "151800"
  },
  {
    "text": "very easy to develop you know you could develop an entire application and get it",
    "start": "151800",
    "end": "156900"
  },
  {
    "text": "to Market you know very quickly compared to microservices it's very easy for a",
    "start": "156900",
    "end": "163440"
  },
  {
    "text": "team to pull together and build an executable app using this architecture and then it's also simple to deploy it's",
    "start": "163440",
    "end": "172200"
  },
  {
    "text": "not as complex as your microservice technology multi-complica applications",
    "start": "172200",
    "end": "177720"
  },
  {
    "text": "have fewer parts so so there are fewer components to manage and to fix and you",
    "start": "177720",
    "end": "184080"
  },
  {
    "text": "know all in all everything is self-contained in and it makes it easier to deploy your application sorry",
    "start": "184080",
    "end": "193440"
  },
  {
    "text": "and then um uncomplicated testing and debugging testing and debugging is you",
    "start": "193440",
    "end": "199920"
  },
  {
    "text": "know a very big part of the debate of Monolithic architectures versus the",
    "start": "199920",
    "end": "205080"
  },
  {
    "text": "microservice architecture debates you have to test all the parts of an applications of an application",
    "start": "205080",
    "end": "211319"
  },
  {
    "text": "separately in regards to your microservices you have to test that they",
    "start": "211319",
    "end": "217200"
  },
  {
    "text": "work properly and also test that each service fits together and communicates",
    "start": "217200",
    "end": "222780"
  },
  {
    "text": "properly and then you also have the case of um cash caching dependencies and data",
    "start": "222780",
    "end": "230159"
  },
  {
    "text": "assets forgive my pronunciation English is not my first language so you know that but with regards to monolithic",
    "start": "230159",
    "end": "238019"
  },
  {
    "text": "architecture these these are not the case because the application is fitted as a single unit and works together as a",
    "start": "238019",
    "end": "244920"
  },
  {
    "text": "whole you can you know do everything quickly and easily from a central login system but it also has its own",
    "start": "244920",
    "end": "252120"
  },
  {
    "text": "disadvantage in the sense that you it's less scalable so it's the",
    "start": "252120",
    "end": "258419"
  },
  {
    "text": "monolithic architecture because the software is tightly coupled you know it",
    "start": "258419",
    "end": "263639"
  },
  {
    "text": "can be very difficult to like scale the software for for instance if you wanted to like",
    "start": "263639",
    "end": "269580"
  },
  {
    "text": "um Advance a particular feature or part of your application you literally have",
    "start": "269580",
    "end": "275280"
  },
  {
    "text": "to take down you know the whole application just to alter a single feature it's difficult to adapt to new",
    "start": "275280",
    "end": "282360"
  },
  {
    "text": "technology as mentioned um it's it's a tightly coupled",
    "start": "282360",
    "end": "288120"
  },
  {
    "text": "architecture so if for instance you take a music application for example where",
    "start": "288120",
    "end": "294180"
  },
  {
    "text": "the you have your catalog is tightly coupled to like the purchase and the the Play services",
    "start": "294180",
    "end": "299900"
  },
  {
    "text": "if you wanted to like um just maybe alter the features of the catalog or the",
    "start": "299900",
    "end": "306419"
  },
  {
    "text": "play purchase like I said earlier you still have to like you know take the whole application down just to be able",
    "start": "306419",
    "end": "313020"
  },
  {
    "text": "to alter that feature and then there is very high dependencies between the",
    "start": "313020",
    "end": "318660"
  },
  {
    "text": "functionalities of the monolithic architecture so applications can run",
    "start": "318660",
    "end": "325860"
  },
  {
    "text": "into software engineering downtime and difficulties if you go back to the music",
    "start": "325860",
    "end": "331020"
  },
  {
    "text": "app for example because the catalog and the player and the purchase function are so dependent upon each other",
    "start": "331020",
    "end": "338780"
  },
  {
    "text": "again if you know one one of them should go down the whole application will be",
    "start": "338780",
    "end": "344160"
  },
  {
    "text": "affected so but in with regards to the microservice architecture which is you",
    "start": "344160",
    "end": "351419"
  },
  {
    "text": "know basically a style of a large application built as a collection of small independently Deployable Services",
    "start": "351419",
    "end": "358320"
  },
  {
    "text": "as you can see you know in with this example so these Services communicate",
    "start": "358320",
    "end": "363600"
  },
  {
    "text": "with each other through apis and are designed to be Loosely coupled you know",
    "start": "363600",
    "end": "369539"
  },
  {
    "text": "so that they can be developed and tested and deployed independently um",
    "start": "369539",
    "end": "375240"
  },
  {
    "text": "microservice architecture also enables faster development and scalability and",
    "start": "375240",
    "end": "380400"
  },
  {
    "text": "makes it easier to evolve and maintain your application over time because you",
    "start": "380400",
    "end": "385740"
  },
  {
    "text": "know as you can see with the different Services each service can be developed or you know managed by a different team",
    "start": "385740",
    "end": "392340"
  },
  {
    "text": "and they can make use of what that whatever technology that they are very comfortable with and then you know it",
    "start": "392340",
    "end": "399479"
  },
  {
    "text": "also has his course comes with his own pros and cons you know regards to",
    "start": "399479",
    "end": "404660"
  },
  {
    "text": "microservices it's very scalable it's easier to scale each micro service can",
    "start": "404660",
    "end": "410520"
  },
  {
    "text": "be scaled individually leading to better resource utilization and improve",
    "start": "410520",
    "end": "416400"
  },
  {
    "text": "performance it's very resilient in informed micro service Fields it doesn't bring down the entire system and the",
    "start": "416400",
    "end": "424020"
  },
  {
    "text": "other parts you know keep functioning as intended it improves the deployments of your",
    "start": "424020",
    "end": "432000"
  },
  {
    "text": "application microservice can be deployed independently in to allow it for faster",
    "start": "432000",
    "end": "437280"
  },
  {
    "text": "and more frequent release it's flexible allows for greater flexibility in",
    "start": "437280",
    "end": "443220"
  },
  {
    "text": "choosing technology Stacks so like I said earlier each of the services can be",
    "start": "443220",
    "end": "449240"
  },
  {
    "text": "created using whatever technology Stacks that the team or the developer is",
    "start": "449240",
    "end": "454860"
  },
  {
    "text": "comfortable with but it also has its own disadvantages you know which includes",
    "start": "454860",
    "end": "460199"
  },
  {
    "text": "complexity microservice architecture at you know complexity in terms of communicating and testing and deployment",
    "start": "460199",
    "end": "468979"
  },
  {
    "text": "dependency management between the micro Services need to be managed carefully to",
    "start": "468979",
    "end": "474599"
  },
  {
    "text": "avoid errors and delays and we also you know comes with the issue of network latency increased Network calls between",
    "start": "474599",
    "end": "481919"
  },
  {
    "text": "these Services can lead to slower performance and debugging is also more",
    "start": "481919",
    "end": "488039"
  },
  {
    "text": "complex in microservices with and environment issues can span between",
    "start": "488039",
    "end": "493919"
  },
  {
    "text": "multiple service and also testing micro a micro service you know application can",
    "start": "493919",
    "end": "499740"
  },
  {
    "text": "be more demanding you know you have to test the individual service on on their",
    "start": "499740",
    "end": "504840"
  },
  {
    "text": "own and also test that they communicate with each other as intended so when",
    "start": "504840",
    "end": "510000"
  },
  {
    "text": "stacked up together side by side you start to understand you know why microservice started becoming you know",
    "start": "510000",
    "end": "516959"
  },
  {
    "text": "more popular uh for me you know being I'll say relatively new within the industry I can't really tell how far you",
    "start": "516959",
    "end": "524820"
  },
  {
    "text": "know back you know we could go with microservices but um in some real monolithic application",
    "start": "524820",
    "end": "530519"
  },
  {
    "text": "is built as a single unified unit while you know microservices is a collection",
    "start": "530519",
    "end": "536160"
  },
  {
    "text": "of smaller independently deployables and service so in the case of the example we",
    "start": "536160",
    "end": "542160"
  },
  {
    "text": "gave above for instance if you wanted to go about you know um program or developing such service",
    "start": "542160",
    "end": "549240"
  },
  {
    "text": "you're going to have like um your rest API crowd for the account DB or the user",
    "start": "549240",
    "end": "555420"
  },
  {
    "text": "DB whatever case it may be you know programmed like in this case I just you know try to",
    "start": "555420",
    "end": "561540"
  },
  {
    "text": "um sketch or like call it a draft code for you know the account DB using fast API you also have your rest API crowd",
    "start": "561540",
    "end": "569700"
  },
  {
    "text": "for the event inventory um rest API and then for the shipping",
    "start": "569700",
    "end": "575820"
  },
  {
    "text": "too so um as you can see here in the project",
    "start": "575820",
    "end": "580920"
  },
  {
    "text": "directory all the different service or rest API are in their own directory this",
    "start": "580920",
    "end": "588000"
  },
  {
    "text": "is just to show you know that this service can be developed by a different team on its own and you know be a",
    "start": "588000",
    "end": "594240"
  },
  {
    "text": "full-fledged application on its own you know but as long as like the design or",
    "start": "594240",
    "end": "599940"
  },
  {
    "text": "the requirements for the application is followed and then the apis are able to",
    "start": "599940",
    "end": "605459"
  },
  {
    "text": "communicate with each other both on Endeavor and in prod so as you can see for each service in its own directory",
    "start": "605459",
    "end": "612480"
  },
  {
    "text": "has its own requirements.txt file its own Docker file but in this case you",
    "start": "612480",
    "end": "618300"
  },
  {
    "text": "also have your Docker file for the whole application and your Docker compose file or you know going to explaining those",
    "start": "618300",
    "end": "623820"
  },
  {
    "text": "down the slide so where does cloud native come you know",
    "start": "623820",
    "end": "629339"
  },
  {
    "text": "into this whole picture Cloud native at first of all is an",
    "start": "629339",
    "end": "636300"
  },
  {
    "text": "approach of building and running applications and services that take advantage of the features and",
    "start": "636300",
    "end": "643019"
  },
  {
    "text": "capabilities of cloud computing platforms the cloud native approach focuses on using some of the following",
    "start": "643019",
    "end": "650640"
  },
  {
    "text": "principles we've mentioned already like your microservices and some other",
    "start": "650640",
    "end": "655920"
  },
  {
    "text": "features like containers like which is basically packaging applications and",
    "start": "655920",
    "end": "660959"
  },
  {
    "text": "their dependencies into lightweight portable containers which can run consistently across different",
    "start": "660959",
    "end": "667320"
  },
  {
    "text": "environments and Cloud native also focuses on automation automating the",
    "start": "667320",
    "end": "673200"
  },
  {
    "text": "deployment scaling and management of applications and services",
    "start": "673200",
    "end": "678740"
  },
  {
    "text": "observability sorry monitoring and collecting data from applications and",
    "start": "678920",
    "end": "684000"
  },
  {
    "text": "services to gain insights about their behaviors and performance and also it",
    "start": "684000",
    "end": "690060"
  },
  {
    "text": "also encourages resilience and designing applications to be highly available and withstand failure issues so but before",
    "start": "690060",
    "end": "697680"
  },
  {
    "text": "we go into details with container containerization of application I'll",
    "start": "697680",
    "end": "702839"
  },
  {
    "text": "just like to like touch on I'm not really go into full details but just you",
    "start": "702839",
    "end": "708060"
  },
  {
    "text": "know I'm so you can see the difference between VM virtual machines and containerization because VMS was the",
    "start": "708060",
    "end": "714660"
  },
  {
    "text": "solution before containerization became a thing so VMS",
    "start": "714660",
    "end": "720060"
  },
  {
    "text": "is basically a software implementation of a physical machine which allows",
    "start": "720060",
    "end": "725459"
  },
  {
    "text": "multiple operating systems to run on a single host each VM runs on its own",
    "start": "725459",
    "end": "732240"
  },
  {
    "text": "operating system which provides an isolated environment for your application to run",
    "start": "732240",
    "end": "738720"
  },
  {
    "text": "while the container is a lightweight Standalone executable package that",
    "start": "738720",
    "end": "744480"
  },
  {
    "text": "contains everything an application needs to run including your code your",
    "start": "744480",
    "end": "750300"
  },
  {
    "text": "runtime your system tools your libraries and your settings containers uses the",
    "start": "750300",
    "end": "756540"
  },
  {
    "text": "host operating systems Canal which makes them more lightweight and efficient than",
    "start": "756540",
    "end": "761820"
  },
  {
    "text": "VMS so in summary VMS a VM is a full-fledged and virtualized environment",
    "start": "761820",
    "end": "767420"
  },
  {
    "text": "while your container is a lightweight isolated environment that just shares the host canals operating system so in",
    "start": "767420",
    "end": "776519"
  },
  {
    "text": "in this case from our example a micro service application you'll see that each",
    "start": "776519",
    "end": "783540"
  },
  {
    "text": "of the surveys it's on its own separate container specified by the black",
    "start": "783540",
    "end": "789120"
  },
  {
    "text": "rectangle so containerization has really become a popular approach for packaging",
    "start": "789120",
    "end": "795360"
  },
  {
    "text": "and deploying applications in recent years it offers several benefits like portability containers can run on any",
    "start": "795360",
    "end": "803339"
  },
  {
    "text": "system as long as that system supports containerization technology in makes it",
    "start": "803339",
    "end": "808519"
  },
  {
    "text": "very easy to move application between different environments such as from development to production containers",
    "start": "808519",
    "end": "815940"
  },
  {
    "text": "support isolation they provide a level of isolation for applications which",
    "start": "815940",
    "end": "822000"
  },
  {
    "text": "means that they are isolated from each other and from the host system this",
    "start": "822000",
    "end": "827579"
  },
  {
    "text": "reduces the risk of conflict between different applications and their dependencies",
    "start": "827579",
    "end": "833579"
  },
  {
    "text": "it's very resource efficient containers are lightweight and share the host operating systems kernel which makes",
    "start": "833579",
    "end": "840600"
  },
  {
    "text": "them more resource efficient than in the case of virtual machines they are very",
    "start": "840600",
    "end": "845880"
  },
  {
    "text": "scalable they can easily be scaled up and down to meet changing demands it can",
    "start": "845880",
    "end": "851279"
  },
  {
    "text": "be version controlled container image can be versioned and stored in a container registry and you can easily",
    "start": "851279",
    "end": "857279"
  },
  {
    "text": "roll back to a previous version and um with all these things",
    "start": "857279",
    "end": "863279"
  },
  {
    "text": "um about containers and the features they bring to the table like they're scaling up and down you know of your",
    "start": "863279",
    "end": "869339"
  },
  {
    "text": "containers depend depending on the changing change of Demands you know how",
    "start": "869339",
    "end": "874920"
  },
  {
    "text": "do we go about implementing all these things I'm um making sure that you know everything",
    "start": "874920",
    "end": "881639"
  },
  {
    "text": "works as intended we can scale up and down you know as required this really is",
    "start": "881639",
    "end": "887279"
  },
  {
    "text": "where as you must have guessed you know kubernetes comes in so kubernetes",
    "start": "887279",
    "end": "894300"
  },
  {
    "text": "which is often called KS for for in shorts is",
    "start": "894300",
    "end": "899639"
  },
  {
    "text": "um a container orchestration system for automating the um deployments scaling",
    "start": "899639",
    "end": "905760"
  },
  {
    "text": "and management of containerized application I hope I'm not far behind that time I think I started this slide",
    "start": "905760",
    "end": "911519"
  },
  {
    "text": "too early so my time I think is wrong so um it was originally developed by",
    "start": "911519",
    "end": "917699"
  },
  {
    "text": "Google and is now maintained by Cloud native cncf kubernetes provides a",
    "start": "917699",
    "end": "923880"
  },
  {
    "text": "platform agnostic way to manage and orchestrate containers allowing developers to focus on writing code",
    "start": "923880",
    "end": "930240"
  },
  {
    "text": "instead of managing infrastructure it also provides um some of the following features like",
    "start": "930240",
    "end": "936360"
  },
  {
    "text": "automatic bin packing or you automatically schedules containers to run on the most appropriate nodes",
    "start": "936360",
    "end": "942360"
  },
  {
    "text": "available um it provides self-healing capabilities containers can automatically detect and",
    "start": "942360",
    "end": "949740"
  },
  {
    "text": "replace field sorry kubernetes can automatically detect and replace field containers it provides service Discovery",
    "start": "949740",
    "end": "957959"
  },
  {
    "text": "and load balancing capabilities it has a built-in service Discovery mechanism",
    "start": "957959",
    "end": "963420"
  },
  {
    "text": "which allows containers to automatically discover and communicate with each other it also provides loads balancing",
    "start": "963420",
    "end": "970560"
  },
  {
    "text": "capabilities that automatically distributes traffic amongst multiple replicas of a container he has the",
    "start": "970560",
    "end": "978660"
  },
  {
    "text": "automated rollouts and rollback features that allows for Auto method rollbacks of",
    "start": "978660",
    "end": "983899"
  },
  {
    "text": "rollouts of new versions of an application which makes it easy to update applications without downtime it",
    "start": "983899",
    "end": "991560"
  },
  {
    "text": "also has the secret and configuration management features that allows to that",
    "start": "991560",
    "end": "996899"
  },
  {
    "text": "allows for the Secure Storage of um your secret password and the increase encryption keys there are also other",
    "start": "996899",
    "end": "1005300"
  },
  {
    "text": "popular choice for container orchestration but kubernetes is the most popular one and is widely used in",
    "start": "1005300",
    "end": "1011199"
  },
  {
    "text": "production environments both on-prem and in cloud and can be used you know with",
    "start": "1011199",
    "end": "1017120"
  },
  {
    "text": "other technology Cloud native Technologies like Docker and Prometheus so for me at",
    "start": "1017120",
    "end": "1024740"
  },
  {
    "text": "the time you know um with this whole knowledge you know from the workshop and from personal",
    "start": "1024740",
    "end": "1030438"
  },
  {
    "text": "research it was back to you know um usual for me but luckily um I started",
    "start": "1030439",
    "end": "1036918"
  },
  {
    "text": "um studying my masters which was in cyber security and was a two years program so we had the option of doing",
    "start": "1036919",
    "end": "1043760"
  },
  {
    "text": "our third I think it was the third semester you either research on the topic or you go for an internship so I I",
    "start": "1043760",
    "end": "1051559"
  },
  {
    "text": "I went for an internship and I was lucky enough I got three of us",
    "start": "1051559",
    "end": "1056660"
  },
  {
    "text": "two for software engineering then one for a cloud native devsecups internship and as you'd have guessed I went for it",
    "start": "1056660",
    "end": "1063799"
  },
  {
    "text": "so um for um it was really an opportunity for me to really get um hands-on",
    "start": "1063799",
    "end": "1069860"
  },
  {
    "text": "experience with Cloud native Technologies like kubernetes and Docker and you know really delve into it big",
    "start": "1069860",
    "end": "1077419"
  },
  {
    "text": "time and I mean it's been you know for me Cloud native since then and",
    "start": "1077419",
    "end": "1084500"
  },
  {
    "text": "um I'm doing the luxury of experienced colleagues you know during my internship I was able to ask them the best approach",
    "start": "1084500",
    "end": "1091400"
  },
  {
    "text": "and best route or the best way to go about learning these tools and most of them you know we are like of the opinion",
    "start": "1091400",
    "end": "1098000"
  },
  {
    "text": "of getting comfortable with the Linux system first then delving into",
    "start": "1098000",
    "end": "1103100"
  },
  {
    "text": "containers and then eventually kubernetes so yeah I brushed up on my",
    "start": "1103100",
    "end": "1109160"
  },
  {
    "text": "Linux you know abilities because I've always been a Windows guy and then after that you know",
    "start": "1109160",
    "end": "1116780"
  },
  {
    "text": "where I delved um head deep into containers I was able to really understand containers how to create",
    "start": "1116780",
    "end": "1123320"
  },
  {
    "text": "container from writing your Docker file for your application and then creating a",
    "start": "1123320",
    "end": "1128419"
  },
  {
    "text": "Docker image a container image from your Docker file using the docker build command and then eventually a Docker",
    "start": "1128419",
    "end": "1135200"
  },
  {
    "text": "container with the docker run command got to understand how to pull and push container images to container Registries",
    "start": "1135200",
    "end": "1143140"
  },
  {
    "text": "and you know after that I I guess one of um I also I would say some of the",
    "start": "1143140",
    "end": "1150020"
  },
  {
    "text": "resources I use to really get um hangs on with containers linuxware of the I",
    "start": "1150020",
    "end": "1158299"
  },
  {
    "text": "think the main one was the upscale 20-day upscale um channel on Reddit and",
    "start": "1158299",
    "end": "1164299"
  },
  {
    "text": "then some YouTube resources and then after you know getting to understand",
    "start": "1164299",
    "end": "1169640"
  },
  {
    "text": "Docker images how to create mine and how to make use of um images already available on container",
    "start": "1169640",
    "end": "1177200"
  },
  {
    "text": "registry this is just an example of a Docker file and then really understanding the specifications for",
    "start": "1177200",
    "end": "1183980"
  },
  {
    "text": "building containers you know how to make use of like Ci CIS benchmarks or just",
    "start": "1183980",
    "end": "1190100"
  },
  {
    "text": "really understanding your application to create you know to be able to write a Docker file that is going to really run",
    "start": "1190100",
    "end": "1197900"
  },
  {
    "text": "your application properly the way you want it or sometimes just following you know an intern internal specification",
    "start": "1197900",
    "end": "1204559"
  },
  {
    "text": "depending on the organization you're working for so you know I was really I",
    "start": "1204559",
    "end": "1210200"
  },
  {
    "text": "would say very comfortable with container at the time and then um went on to really understand",
    "start": "1210200",
    "end": "1216020"
  },
  {
    "text": "kubernetes so um for um this is just a basic overview of the features or",
    "start": "1216020",
    "end": "1222919"
  },
  {
    "text": "architecture of kubernetes so um some of the features like you can see here the",
    "start": "1222919",
    "end": "1229100"
  },
  {
    "text": "master node which is the node the master node is the control plane",
    "start": "1229100",
    "end": "1234260"
  },
  {
    "text": "node of a kubernetes cluster it's responsible for maintaining the desired State and",
    "start": "1234260",
    "end": "1240559"
  },
  {
    "text": "ensuring that the actual State matches the desired State you have your worker nodes the worker nodes are the machines",
    "start": "1240559",
    "end": "1247220"
  },
  {
    "text": "that run your containerized applications and and they communicate to the master node",
    "start": "1247220",
    "end": "1253280"
  },
  {
    "text": "to receive instruction on what to run and how to run it each each worker node",
    "start": "1253280",
    "end": "1258679"
  },
  {
    "text": "runs a container runtime such as Docker cubelet and it communicates with the master node and ensures that the desired",
    "start": "1258679",
    "end": "1265700"
  },
  {
    "text": "state of the cluster is always maintained then you have your Cube API server",
    "start": "1265700",
    "end": "1271640"
  },
  {
    "text": "um which is the key component one of the key components of the kubernetes control plane that exposes some restful API",
    "start": "1271640",
    "end": "1278840"
  },
  {
    "text": "endpoints I think you can see them there that can be used to perform various",
    "start": "1278840",
    "end": "1284179"
  },
  {
    "text": "operations on the cluster including some crowd operations on resources such as",
    "start": "1284179",
    "end": "1289460"
  },
  {
    "text": "Sports Services deployments it communicates with the hcd data store to retrieve and update the",
    "start": "1289460",
    "end": "1297020"
  },
  {
    "text": "states of the cluster and the communicate to the cubelets on each worker node to ensure that the actual",
    "start": "1297020",
    "end": "1303799"
  },
  {
    "text": "state of the cluster matches the desired State you also have your Cube kubernetes",
    "start": "1303799",
    "end": "1309440"
  },
  {
    "text": "controller manager which is a component that runs as part of the kubernetes control plane it is responsible for",
    "start": "1309440",
    "end": "1316159"
  },
  {
    "text": "running various controllers like your replication controller your endpoint",
    "start": "1316159",
    "end": "1321799"
  },
  {
    "text": "controller namespace controller service and token controllers these controllers",
    "start": "1321799",
    "end": "1326840"
  },
  {
    "text": "are responsible for maintaining the desired state of the cluster for example ensuring that the number of replica pods",
    "start": "1326840",
    "end": "1334460"
  },
  {
    "text": "desired is running on the cluster you also have your kubernetes scheduler",
    "start": "1334460",
    "end": "1339620"
  },
  {
    "text": "which is a component that runs as part of your kubernetes control plane it's also responsible for scheduling pods on",
    "start": "1339620",
    "end": "1346400"
  },
  {
    "text": "worker nodes in the cluster the scheduler receives specifications from the cube API server and the size assigns",
    "start": "1346400",
    "end": "1354080"
  },
  {
    "text": "them to you know the appropriate worker nodes based on various factors such as available resources constraints and",
    "start": "1354080",
    "end": "1360919"
  },
  {
    "text": "Affinity rules you have your kubernetes cubelets which is a lightweight agent that runs on each worker nodes in a",
    "start": "1360919",
    "end": "1367880"
  },
  {
    "text": "kubernetes cluster it's responsible for ensuring that the desire state of the cluster is reflected on the nodes he",
    "start": "1367880",
    "end": "1374720"
  },
  {
    "text": "runs on and then you have your kubernetes proxy which is a component that runs on each worker nodes of your",
    "start": "1374720",
    "end": "1382100"
  },
  {
    "text": "kubernetes cluster and responsible for maintaining the network roads rules on",
    "start": "1382100",
    "end": "1387200"
  },
  {
    "text": "the Node and for forwarding traffic to the correct Port then your hcd your hcd",
    "start": "1387200",
    "end": "1392600"
  },
  {
    "text": "is a distributed key store that is used by kubernetes as a backing store for all",
    "start": "1392600",
    "end": "1398659"
  },
  {
    "text": "its for all its cluster data it stores the configuration data for the kubernetes",
    "start": "1398659",
    "end": "1404840"
  },
  {
    "text": "control plane and all objects in the cluster you also have your container",
    "start": "1404840",
    "end": "1409940"
  },
  {
    "text": "engine which is the um the software responsible for managing the life cycles of containers including you know",
    "start": "1409940",
    "end": "1416480"
  },
  {
    "text": "starting stopping and managing the con the resources of the containers",
    "start": "1416480",
    "end": "1421760"
  },
  {
    "text": "um there are so many other resources of the kubernetes including like your pods",
    "start": "1421760",
    "end": "1426860"
  },
  {
    "text": "your um deployments stateful sets and demand sets but these are just a few of",
    "start": "1426860",
    "end": "1433880"
  },
  {
    "text": "them then in in our case where you know we try to sketch or to build up on the example",
    "start": "1433880",
    "end": "1441980"
  },
  {
    "text": "rest API um if you were working on like like I said you know for the newbies people who",
    "start": "1441980",
    "end": "1447740"
  },
  {
    "text": "are trying to really you know get accustomed with these Technologies so in a situation where you're creating a",
    "start": "1447740",
    "end": "1454700"
  },
  {
    "text": "micro service like that and you wanted to test them you know you can make use of um the docker compose which is a tool",
    "start": "1454700",
    "end": "1462200"
  },
  {
    "text": "for defining and running multiple container application container or Docker applications it allows you to",
    "start": "1462200",
    "end": "1469400"
  },
  {
    "text": "define the service that makes up your application you know in a single Docker compost file and then you can start",
    "start": "1469400",
    "end": "1475880"
  },
  {
    "text": "start them and manage them like in our case I don't know if you can see it you",
    "start": "1475880",
    "end": "1481039"
  },
  {
    "text": "see we have the user service the shipping service and the inventories",
    "start": "1481039",
    "end": "1486380"
  },
  {
    "text": "service in this case they've all been converted to a Docker image um the inventory image user image and",
    "start": "1486380",
    "end": "1493520"
  },
  {
    "text": "shipping image and then we also have a network work you know for to ensure that all the services are running within the",
    "start": "1493520",
    "end": "1500120"
  },
  {
    "text": "same network and we have our database there so you can use a Docker compose file to test your application or you",
    "start": "1500120",
    "end": "1507620"
  },
  {
    "text": "could just write your own kubernetes deployment configuration file",
    "start": "1507620",
    "end": "1514400"
  },
  {
    "text": "um using a Cuban using kubernetes to deploy and you can use your kubernetes",
    "start": "1514400",
    "end": "1520280"
  },
  {
    "text": "deployment configuration file to deploy and scale your application this in this",
    "start": "1520280",
    "end": "1525320"
  },
  {
    "text": "process you just write your deployment configuration which defines the desired state of the application the resources",
    "start": "1525320",
    "end": "1533240"
  },
  {
    "text": "um it needs to run and then using the kubernetes command line or the or the",
    "start": "1533240",
    "end": "1539419"
  },
  {
    "text": "API you create and manage your deployments the the configuration that can include information such as the",
    "start": "1539419",
    "end": "1545779"
  },
  {
    "text": "number of replicas how many replicas you want the container to be um and then the resource limits and your",
    "start": "1545779",
    "end": "1552140"
  },
  {
    "text": "environment variables to run your services you could also use the",
    "start": "1552140",
    "end": "1557179"
  },
  {
    "text": "kubernetes stateful set resource this is used to manage",
    "start": "1557179",
    "end": "1563539"
  },
  {
    "text": "deployments just like your deployments file or but in this case for stateful applications a stateful application is",
    "start": "1563539",
    "end": "1570620"
  },
  {
    "text": "an application that you know it requires a hostname and a persistent store coverage like your database for example",
    "start": "1570620",
    "end": "1577779"
  },
  {
    "text": "so and unlike deployment which uses",
    "start": "1577779",
    "end": "1582860"
  },
  {
    "text": "replication controller and replica set to manage the scaling and availability of State stateless pods a stateful",
    "start": "1582860",
    "end": "1590059"
  },
  {
    "text": "search uses a unique hostname for each board and guarantees that the poor that",
    "start": "1590059",
    "end": "1595640"
  },
  {
    "text": "pods are created and deleted in a specific order this ensures that the Pod maintained the same network identity",
    "start": "1595640",
    "end": "1602179"
  },
  {
    "text": "throughout their life cycles allowing them to maintain stable network connections and stateful set also",
    "start": "1602179",
    "end": "1608240"
  },
  {
    "text": "provides a way to provision persistent storage for ports so you know this is",
    "start": "1608240",
    "end": "1613400"
  },
  {
    "text": "also an example of a stateful set configuration file it's just like the um the deployments file but in this case",
    "start": "1613400",
    "end": "1620539"
  },
  {
    "text": "this is more suited for pods or containers you know that require persistent storage so",
    "start": "1620539",
    "end": "1627980"
  },
  {
    "text": "um and then um down you know the configuration file you see where a service configuration",
    "start": "1627980",
    "end": "1634159"
  },
  {
    "text": "for a service is specified like I said like I stated in our Docker compose",
    "start": "1634159",
    "end": "1640880"
  },
  {
    "text": "example this to ensure that your containers and Boards you know run within the same network so",
    "start": "1640880",
    "end": "1647419"
  },
  {
    "text": "armed with this information you know with um so far you're well you know on",
    "start": "1647419",
    "end": "1653419"
  },
  {
    "text": "your way to being able to sit for the cks certification and then you know like",
    "start": "1653419",
    "end": "1658820"
  },
  {
    "text": "I said this is basically John it's Cloud native kubernetes and how to secure it so where does security come into all",
    "start": "1658820",
    "end": "1666740"
  },
  {
    "text": "this but I would like to also point out that security shouldn't be an afterthought it should be something you",
    "start": "1666740",
    "end": "1672620"
  },
  {
    "text": "also think about you know in the process of implementing and designing",
    "start": "1672620",
    "end": "1678500"
  },
  {
    "text": "um your application but um for me as a newbie um one one of the",
    "start": "1678500",
    "end": "1684559"
  },
  {
    "text": "um very important um place to start with with regards to security is your requirement.txt file",
    "start": "1684559",
    "end": "1692179"
  },
  {
    "text": "this is where you you know I'll say keep track of record of all the libraries",
    "start": "1692179",
    "end": "1697220"
  },
  {
    "text": "plugins and in third party um softwares or whatever you must have used in your in the",
    "start": "1697220",
    "end": "1704059"
  },
  {
    "text": "um production or development of your application like in this case um using the first API framework",
    "start": "1704059",
    "end": "1712039"
  },
  {
    "text": "um we use the python Python 3.4 Alpine the first API and then",
    "start": "1712039",
    "end": "1718880"
  },
  {
    "text": "the uvicon server so I'm do this information you could easily you know",
    "start": "1718880",
    "end": "1723980"
  },
  {
    "text": "maybe go to the documentation or research on um the zero day vulnerabilities",
    "start": "1723980",
    "end": "1731900"
  },
  {
    "text": "um announcement you know of security updates and patches but you know um",
    "start": "1731900",
    "end": "1737179"
  },
  {
    "text": "something another thing you could do is scan um this image using some open source and",
    "start": "1737179",
    "end": "1743600"
  },
  {
    "text": "freely available image scanners like um you have your Aqua trivi for example",
    "start": "1743600",
    "end": "1748880"
  },
  {
    "text": "which is what I like I use regularly so after creating your own Docker writing",
    "start": "1748880",
    "end": "1755000"
  },
  {
    "text": "your own Docker file and creating a container image from it you could easily scan your own container image or scan",
    "start": "1755000",
    "end": "1760640"
  },
  {
    "text": "any of this like in this case we scanned the python the the likely the python library or the",
    "start": "1760640",
    "end": "1769340"
  },
  {
    "text": "python software itself and so and then the the good thing about aqua TVs that",
    "start": "1769340",
    "end": "1775159"
  },
  {
    "text": "it not it just doesn't just give you the vulnerability report but it also gives",
    "start": "1775159",
    "end": "1780740"
  },
  {
    "text": "you the installed version of you know whatever vulnerability",
    "start": "1780740",
    "end": "1786080"
  },
  {
    "text": "um it finds in your container image it gives you the install version of that library or Plugin or whatever it is and",
    "start": "1786080",
    "end": "1792260"
  },
  {
    "text": "then the fixed version of it so I'm with this information all you have to do is to go to the documentation of that",
    "start": "1792260",
    "end": "1798860"
  },
  {
    "text": "library or Plugin you know look for the fixed fashion download it and implement",
    "start": "1798860",
    "end": "1804500"
  },
  {
    "text": "it in your application but you know just to put it out there",
    "start": "1804500",
    "end": "1810020"
  },
  {
    "text": "when you scan your container image and you don't get a report it doesn't necessarily mean that you know your app",
    "start": "1810020",
    "end": "1816799"
  },
  {
    "text": "or products is completely secure it just means that at the time of scanning no",
    "start": "1816799",
    "end": "1822020"
  },
  {
    "text": "vulnerability or security issue has been reported because the way Aqua traffic",
    "start": "1822020",
    "end": "1827179"
  },
  {
    "text": "works is by it scans your your container image checks all the libraries and plugins and third-party softwares you're",
    "start": "1827179",
    "end": "1834860"
  },
  {
    "text": "using and that scans this goes through the CV database to know if anything has been reported on those so if anything",
    "start": "1834860",
    "end": "1841220"
  },
  {
    "text": "has been reported it throws it backs back at you and gives you the results and the um the",
    "start": "1841220",
    "end": "1850120"
  },
  {
    "text": "the it tells you if it's a critical vulnerability a medium one or a low One",
    "start": "1850120",
    "end": "1855860"
  },
  {
    "text": "But whichever one it is it's always good to implement the patch immediately and then some additional tips for Securities",
    "start": "1855860",
    "end": "1863059"
  },
  {
    "text": "to you know always use security monitoring and",
    "start": "1863059",
    "end": "1869240"
  },
  {
    "text": "logging tools to you know quickly detect and respond to security threats is",
    "start": "1869240",
    "end": "1874580"
  },
  {
    "text": "always um make it a duty to always keep your softwares and systems up to date you",
    "start": "1874580",
    "end": "1881480"
  },
  {
    "text": "know with later security patches and Updates this will always this will ensure that your Cloud resources are",
    "start": "1881480",
    "end": "1887720"
  },
  {
    "text": "protected against non-vulnerabilities Music Cloud native Security Solutions",
    "start": "1887720",
    "end": "1893360"
  },
  {
    "text": "such as service mesh this can provide security features like service to",
    "start": "1893360",
    "end": "1898640"
  },
  {
    "text": "service authentication and encryption make use of role and based Access",
    "start": "1898640",
    "end": "1903679"
  },
  {
    "text": "Control to limit access to the cluster to only authorize users and rows use",
    "start": "1903679",
    "end": "1910940"
  },
  {
    "text": "kubernetes security context to limit the capabilities of your pods and your",
    "start": "1910940",
    "end": "1918200"
  },
  {
    "text": "containers running the cluster this will help to protect the cluster and these resources from malicious or",
    "start": "1918200",
    "end": "1924260"
  },
  {
    "text": "misconfigured containers make use of kubernetes network policies",
    "start": "1924260",
    "end": "1929419"
  },
  {
    "text": "to control traffic between your pods and use of and make use of kubernetes",
    "start": "1929419",
    "end": "1934880"
  },
  {
    "text": "security policies to control pod and container security settings always use secrets and config maps to",
    "start": "1934880",
    "end": "1943640"
  },
  {
    "text": "securely store and manage sensitive data like password and encryption Keys use",
    "start": "1943640",
    "end": "1948919"
  },
  {
    "text": "kubernetes audits login to track and monitor activities within your cluster",
    "start": "1948919",
    "end": "1954500"
  },
  {
    "text": "you start party Security Solutions sorry I know this is more of like use use you",
    "start": "1954500",
    "end": "1960500"
  },
  {
    "text": "start practice Security Solutions um as kubernetes Network and pod um",
    "start": "1960500",
    "end": "1966140"
  },
  {
    "text": "Security Solutions to provide additional security features and protections this",
    "start": "1966140",
    "end": "1971899"
  },
  {
    "text": "can be helpful in providing extra security layers to detect and prevent vulnerability",
    "start": "1971899",
    "end": "1977620"
  },
  {
    "text": "like I said earlier always update and Patch your kubernetes cluster",
    "start": "1977620",
    "end": "1983480"
  },
  {
    "text": "well seek help from experienced and professional and professionals or",
    "start": "1983480",
    "end": "1989000"
  },
  {
    "text": "consult you know your um some online resources especially",
    "start": "1989000",
    "end": "1994340"
  },
  {
    "text": "um the official documentations of whatever um third party security software you're",
    "start": "1994340",
    "end": "2000340"
  },
  {
    "text": "using or libraries and plug-in and then always be vigilant about new security",
    "start": "2000340",
    "end": "2006460"
  },
  {
    "text": "trust threats and best practices to keep your Cloud environment safe one of the",
    "start": "2006460",
    "end": "2013440"
  },
  {
    "text": "tip I would like to add there is to always link your codes especially your",
    "start": "2013440",
    "end": "2019539"
  },
  {
    "text": "Docker file code to make sure you're following industry standard in the in in",
    "start": "2019539",
    "end": "2024580"
  },
  {
    "text": "the case of the cafe for example you can make use of the handling I",
    "start": "2024580",
    "end": "2030519"
  },
  {
    "text": "um you don't you don't really need to install it you can just go to the to their website or the documentation page",
    "start": "2030519",
    "end": "2036700"
  },
  {
    "text": "copy your Docker your codes or your Docker file posted there and then it gives you you know correction chance to",
    "start": "2036700",
    "end": "2044260"
  },
  {
    "text": "make how to implement your path and you know the base images to how to specify",
    "start": "2044260",
    "end": "2051280"
  },
  {
    "text": "your base images or your commands that helps a lot and then",
    "start": "2051280",
    "end": "2057398"
  },
  {
    "text": "um I guess that's it so but feel free if you have any question or anything you'd",
    "start": "2057399",
    "end": "2063398"
  },
  {
    "text": "like to know and resources are used like the code Cloud resource and a Monster tutorial feel free to reach out and I",
    "start": "2063399",
    "end": "2071320"
  },
  {
    "text": "don't mind sharing those yeah thank you [Applause]",
    "start": "2071320",
    "end": "2079570"
  }
]