[
  {
    "text": "hello hello hello here",
    "start": "160480",
    "end": "168239"
  },
  {
    "text": "so is this your first call uh do you want to be associated with some company",
    "start": "168239",
    "end": "174720"
  },
  {
    "text": "i'm from oracle i'm just looking into this it's interesting",
    "start": "174720",
    "end": "185840"
  },
  {
    "text": "uh do you mean do you know if ricardo wants to join today",
    "start": "191599",
    "end": "196720"
  },
  {
    "text": "no i don't know i'll go ping him right now see if he's available",
    "start": "197200",
    "end": "213840"
  },
  {
    "text": "okay since the channel will switch to password authentication maybe we give",
    "start": "224239",
    "end": "229920"
  },
  {
    "text": "people a little bit more time yeah i think also last time it took them about 10 minutes for everybody to get on",
    "start": "229920",
    "end": "238239"
  },
  {
    "text": "board",
    "start": "238840",
    "end": "241840"
  },
  {
    "text": "is this your first call on serverless workflow yes yes yeah so uh i was going drawing",
    "start": "256000",
    "end": "262479"
  },
  {
    "text": "with a few of my teammates uh jorgen and olivier so yeah um i will like okay so",
    "start": "262479",
    "end": "269199"
  },
  {
    "text": "i can edit you from oracle as well then johnson hi",
    "start": "269199",
    "end": "282880"
  },
  {
    "text": "to sort of curiosity are you also with oracle cloud infrastructure as case or a from a different department",
    "start": "282880",
    "end": "292159"
  },
  {
    "text": "yeah so we are from oracle cloud infrastructure yeah yeah and by the way it's x it's uh",
    "start": "292479",
    "end": "299680"
  },
  {
    "text": "oh sorry sorry",
    "start": "299680",
    "end": "311840"
  },
  {
    "text": "man no response from ricardo yet but i'll let you know if he says anything and there's k",
    "start": "360400",
    "end": "367360"
  },
  {
    "text": "high k okay",
    "start": "367360",
    "end": "381840"
  },
  {
    "text": "okay and it's almost five minutes so let's start um community question time does anybody",
    "start": "382000",
    "end": "388000"
  },
  {
    "text": "have a question",
    "start": "388000",
    "end": "390720"
  },
  {
    "text": "no then let's get to our first agenda point we have a new logo um after the cncf design team has",
    "start": "393759",
    "end": "400960"
  },
  {
    "text": "proposed us with several options and we had a coloring",
    "start": "400960",
    "end": "406000"
  },
  {
    "text": "discussion last meeting two weeks ago uh we finally come on the slack channel to this logo",
    "start": "406000",
    "end": "413759"
  },
  {
    "text": "that is our new project logo and uh if i understand correctly we're",
    "start": "413759",
    "end": "419280"
  },
  {
    "text": "waiting for the the artwork team to come up with the different formats uh to upload it in the",
    "start": "419280",
    "end": "426880"
  },
  {
    "text": "do they upload it to the landscape or would they deliver it to us team uh i think we will get a link",
    "start": "426880",
    "end": "435680"
  },
  {
    "text": "where we will get this logo with text without text black and white white only i mean all",
    "start": "435680",
    "end": "442400"
  },
  {
    "text": "kinds of different options so then we can pick and choose but where the link is i'm on it",
    "start": "442400",
    "end": "448400"
  },
  {
    "text": "i was just told uh artwork repo so where that is i don't know yeah sorry i'm new to this as well",
    "start": "448400",
    "end": "458240"
  },
  {
    "text": "okay and we have a few spec updates um jimmy do you want to say something about",
    "start": "460880",
    "end": "466479"
  },
  {
    "text": "the updates to the subflow states back yeah definitely in the last two weeks",
    "start": "466479",
    "end": "471680"
  },
  {
    "text": "we've had a couple of uh updates uh the biggest one is the one i hope we will discuss",
    "start": "471680",
    "end": "477039"
  },
  {
    "text": "today and i have a little presentation for it as well so we can all kind of look into it",
    "start": "477039",
    "end": "482319"
  },
  {
    "text": "but these updates they're mentioned there is we updated the subflow states specification uh document",
    "start": "482319",
    "end": "488960"
  },
  {
    "text": "because uh via community also um uh it wasn't very clear as far as",
    "start": "488960",
    "end": "496080"
  },
  {
    "text": "how function in event definitions uh get propagated to uh sub-flow states again for for",
    "start": "496080",
    "end": "502879"
  },
  {
    "text": "people their new subplot state is a state that allows you to um rather than have uh",
    "start": "502879",
    "end": "509280"
  },
  {
    "text": "allows you to have reusable workflows uh that can be used in in several other workflows uh they",
    "start": "509280",
    "end": "515360"
  },
  {
    "text": "solve a particular business solution um so",
    "start": "515360",
    "end": "520959"
  },
  {
    "text": "uh a subwork a subflow state allows you to point to one and that gets embedded and gets executed at that point during",
    "start": "520959",
    "end": "526959"
  },
  {
    "text": "the workflow execution um so uh there was a question okay the",
    "start": "526959",
    "end": "532640"
  },
  {
    "text": "software inherit function event definition so there was ongoing discussion that in the prs",
    "start": "532640",
    "end": "538320"
  },
  {
    "text": "and at the end we decided that no uh each uh sapple state has to define its own uh",
    "start": "538320",
    "end": "544240"
  },
  {
    "text": "function and events so services that he wants to invoke and the event steady needs to be either",
    "start": "544240",
    "end": "551279"
  },
  {
    "text": "consumed or produced during its own execution so that was",
    "start": "551279",
    "end": "556399"
  },
  {
    "text": "mainly the decision because we are as a specification base we do not wish to allow run times not that we don't",
    "start": "556399",
    "end": "562480"
  },
  {
    "text": "wish to but it is better for runtimes for us to be very clear and specific what we want",
    "start": "562480",
    "end": "567839"
  },
  {
    "text": "and also at the same time each workflow regardless if it is a subflow or a",
    "start": "567839",
    "end": "573519"
  },
  {
    "text": "parent flow should be able to be validated on its own rather than depending",
    "start": "573519",
    "end": "579040"
  },
  {
    "text": "on another workflow's definition so we decided on that the second one is um it kind of goes",
    "start": "579040",
    "end": "587200"
  },
  {
    "text": "in line with this uh because we uh now force that each workflow defines its own",
    "start": "587200",
    "end": "592240"
  },
  {
    "text": "functions in the definition there's all definitely cases where we want to reuse those",
    "start": "592240",
    "end": "598000"
  },
  {
    "text": "um and so we allow now for functions not only to be referenced inline and events but also to reference",
    "start": "598000",
    "end": "605760"
  },
  {
    "text": "an existing json or yaml file which include uh those so basically you",
    "start": "605760",
    "end": "611120"
  },
  {
    "text": "can define a json or ml file which includes your function definitions or your event definitions",
    "start": "611120",
    "end": "616640"
  },
  {
    "text": "and you can reference them in in in your function in your workflow and that should be",
    "start": "616640",
    "end": "622000"
  },
  {
    "text": "embedded uh so multiple workflows can reuse them rather than having to to to inline them in every single",
    "start": "622000",
    "end": "629440"
  },
  {
    "text": "workflow definition that you have uh so that there was an update um so the third one is the one",
    "start": "629440",
    "end": "636160"
  },
  {
    "text": "that we're gonna actually talk about today it's just a pr form currently but i that's something that we all really need",
    "start": "636160",
    "end": "642160"
  },
  {
    "text": "to decide and i'm just trying to make a case for it today and see what everybody thinks um and we'll go we'll we'll talk in",
    "start": "642160",
    "end": "648720"
  },
  {
    "text": "detail there now so i don't want to waste any time now um as far as issues goes if you guys have time please look at those two",
    "start": "648720",
    "end": "655279"
  },
  {
    "text": "issues that are linked here they have to do with retries and and one of our community members uh",
    "start": "655279",
    "end": "662560"
  },
  {
    "text": "there make some really good points on what we can do to improve um especially our retry",
    "start": "662560",
    "end": "670079"
  },
  {
    "text": "definitions in the in in the current work was specification so having more people look at it and",
    "start": "670079",
    "end": "676320"
  },
  {
    "text": "chime in i think would really be helpful um especially because right now i am rewriting",
    "start": "676320",
    "end": "682160"
  },
  {
    "text": "or trying to rewrite the error handling and the timeout and the retry sections of the of the specifications",
    "start": "682160",
    "end": "689120"
  },
  {
    "text": "and this has to do with that so any input would be much appreciated",
    "start": "689120",
    "end": "694959"
  },
  {
    "text": "yeah yeah if i get it that's all by our contributions by jung so thanks a",
    "start": "694959",
    "end": "700160"
  },
  {
    "text": "lot for all of the issues and the pull requests that came out of it yeah thank you very much for that",
    "start": "700160",
    "end": "708000"
  },
  {
    "text": "that nice discussion we had on the pr's and and the issues",
    "start": "708000",
    "end": "713279"
  },
  {
    "text": "i have two questions on the remaining issues on retries they're both marked documentation could this be clarified",
    "start": "713440",
    "end": "721760"
  },
  {
    "text": "so documentation only or would it would we have to restrict the use of the interval versus",
    "start": "721760",
    "end": "730000"
  },
  {
    "text": "max attempts or the use of how we specify intervals um",
    "start": "730000",
    "end": "738720"
  },
  {
    "text": "i think there's definitely going to be changes to the to the schema as well so we might need to relabel those issues",
    "start": "738720",
    "end": "745200"
  },
  {
    "text": "sorry okay to add like spec label on it or i don't",
    "start": "745200",
    "end": "751920"
  },
  {
    "text": "know okay and um yeah i think that's",
    "start": "751920",
    "end": "760320"
  },
  {
    "text": "for the agenda today i didn't add any other topics um so tamiya do you want to do the deep",
    "start": "760320",
    "end": "768480"
  },
  {
    "text": "dive right away or should we first conclude ask for any other questions and then",
    "start": "768480",
    "end": "775360"
  },
  {
    "text": "jump into the deep dive yeah definitely whichever way you think is best",
    "start": "775360",
    "end": "781120"
  },
  {
    "text": "okay um then let me ask if there are more questions",
    "start": "781360",
    "end": "789439"
  },
  {
    "text": "i would have one about the use of open api but maybe i can take this offline uh favor of time let me do",
    "start": "798320",
    "end": "805600"
  },
  {
    "text": "a final whole call so michael hi i noticed you joining thanks yes i'm",
    "start": "805600",
    "end": "812839"
  },
  {
    "text": "here and so yeah that's it then let's go into",
    "start": "812839",
    "end": "818480"
  },
  {
    "text": "our first deep dive about function definitions yeah and let's see how i can share my",
    "start": "818480",
    "end": "825040"
  },
  {
    "text": "screen but just while i find the oh i think you have to stop sharing uh",
    "start": "825040",
    "end": "830560"
  },
  {
    "text": "manolo but just to understand last uh our last",
    "start": "830560",
    "end": "835920"
  },
  {
    "text": "meeting we said that it would be beneficial for everybody if we if we started taking our time during",
    "start": "835920",
    "end": "841279"
  },
  {
    "text": "these meetings and discussing certain parts of the specifications and and honestly i i'd love for this to",
    "start": "841279",
    "end": "847519"
  },
  {
    "text": "be an open discussion uh not a monologue and uh and uh and this one i think will be a little bit",
    "start": "847519",
    "end": "853680"
  },
  {
    "text": "spicy i must say so i'm hoping that everybody participates in it because",
    "start": "853680",
    "end": "858720"
  },
  {
    "text": "introduces a a change to to to what our specification i think we should",
    "start": "858720",
    "end": "865040"
  },
  {
    "text": "kind of look at it and discuss so let me start sharing the screen",
    "start": "865040",
    "end": "870560"
  },
  {
    "text": "and sorry my presentation is not very pretty but i started it this morning so",
    "start": "870560",
    "end": "877519"
  },
  {
    "text": "last meeting um can you guys see my screen yep",
    "start": "877519",
    "end": "884399"
  },
  {
    "text": "okay great so last meeting we said that the first topic of the discussion uh in our kind of deep dice or whatever",
    "start": "884399",
    "end": "890959"
  },
  {
    "text": "we want to call these sessions is about function definitions so i just wanted to start off by saying",
    "start": "890959",
    "end": "896320"
  },
  {
    "text": "what are function definitions in serverless workflow they're used to describe what services",
    "start": "896320",
    "end": "902320"
  },
  {
    "text": "need to be invoked and how to invoke them they're typically external services they need to",
    "start": "902320",
    "end": "908160"
  },
  {
    "text": "be invoked during workflow execution as part of the orchestration",
    "start": "908160",
    "end": "913279"
  },
  {
    "text": "of of services and and everything else that that that uh you're doing and you're",
    "start": "913279",
    "end": "919279"
  },
  {
    "text": "defining with our serverless workflow markup and again uh in order to solve business",
    "start": "919279",
    "end": "924720"
  },
  {
    "text": "problems everything that we're doing or the defining has to solve a particular part of your business",
    "start": "924720",
    "end": "930560"
  },
  {
    "text": "problems within your organization or or the problems you're trying to solve another thing about function",
    "start": "930560",
    "end": "936880"
  },
  {
    "text": "definitions is that they should really provide the runtimes all the information needed",
    "start": "936880",
    "end": "942560"
  },
  {
    "text": "in order to invoke this particular external service so that's kind of i want to say that up",
    "start": "942560",
    "end": "948160"
  },
  {
    "text": "front so but there is a lot of parts about invoking services there isn't authentication callbacks we have",
    "start": "948160",
    "end": "954959"
  },
  {
    "text": "especially with web hooks and a lot of different parts they're part of actually invoking a service or a",
    "start": "954959",
    "end": "960800"
  },
  {
    "text": "function so we'll get to that as well as far as our specification is concerned since we're",
    "start": "960800",
    "end": "967040"
  },
  {
    "text": "not doing an in-house project or a proprietary type of markup we have to be aware",
    "start": "967040",
    "end": "972720"
  },
  {
    "text": "about portability so we have to understand that whatever markup we define or say users have to use if they choose",
    "start": "972720",
    "end": "980480"
  },
  {
    "text": "to use the service workflow specification uh portability should be a very oh sorry about my dog",
    "start": "980480",
    "end": "986240"
  },
  {
    "text": "should be very important part of of what we're doing so in order to see where we're kind of",
    "start": "986240",
    "end": "993360"
  },
  {
    "text": "taking the or where we're proposing to take this function definitions let's take a look",
    "start": "993360",
    "end": "998880"
  },
  {
    "text": "at how this currently looks with uh our specification and i did this little example here",
    "start": "998880",
    "end": "1004720"
  },
  {
    "text": "this is a whole workflow definition uh in yaml and basically um if you look on top",
    "start": "1004720",
    "end": "1012240"
  },
  {
    "text": "after id name inversion you'll see functions which defines the function definition array in serverless",
    "start": "1012240",
    "end": "1018720"
  },
  {
    "text": "workload instead of inlining function definitions instead inside of states or steps or",
    "start": "1018720",
    "end": "1024720"
  },
  {
    "text": "or those parts they're really concerned with uh execution or logic",
    "start": "1024720",
    "end": "1031120"
  },
  {
    "text": "we actually define them up front so we have our functions array each one has a name parameter which is a",
    "start": "1031120",
    "end": "1037520"
  },
  {
    "text": "unique identifier of this particular function definition this is workflow unique identifier not",
    "start": "1037520",
    "end": "1044558"
  },
  {
    "text": "unique identifier within the service that we're trying to invoke this is just a domain specific to the workflow markup",
    "start": "1044559",
    "end": "1051840"
  },
  {
    "text": "itself the second thing uh parameter is called resource uh and this defines the endpoint location",
    "start": "1051840",
    "end": "1059520"
  },
  {
    "text": "of uh this particular service that is exposed to the public and then we have a proprietary a string",
    "start": "1059520",
    "end": "1066240"
  },
  {
    "text": "based uh parameter called type which we initially thought uh or currently have thought when we",
    "start": "1066240",
    "end": "1072720"
  },
  {
    "text": "when we did this that it would allow runtime implementations to give further uh information about the type of service",
    "start": "1072720",
    "end": "1079600"
  },
  {
    "text": "we kind of left it open-ended which is a string currently type so user users can give some more",
    "start": "1079600",
    "end": "1085520"
  },
  {
    "text": "information that is again domain specific to them about this particular service so here you will you see two functions",
    "start": "1085520",
    "end": "1092720"
  },
  {
    "text": "defined one is the get current time and one is the read wikipedia function definitions",
    "start": "1092720",
    "end": "1098960"
  },
  {
    "text": "and within the states uh then different states have actions for example the operation state",
    "start": "1098960",
    "end": "1105760"
  },
  {
    "text": "callback state and an event states can define actions within actions we can",
    "start": "1105760",
    "end": "1112160"
  },
  {
    "text": "reference uh those functions which means referencing a function within an action means",
    "start": "1112160",
    "end": "1117200"
  },
  {
    "text": "at this point the actual uh service should be executed during workflow execution so we have a",
    "start": "1117200",
    "end": "1124480"
  },
  {
    "text": "function ref and the second parameter down here on line 19 is ref name",
    "start": "1124480",
    "end": "1129760"
  },
  {
    "text": "and at this point we say we reference our function definition and at this point we want to",
    "start": "1129760",
    "end": "1135280"
  },
  {
    "text": "execute the get current time function the same thing on starting on line 20 you can see it's the same thing but we",
    "start": "1135280",
    "end": "1141679"
  },
  {
    "text": "also allow parameters which are basically json objects currently uh to to to be passed as the payload of of",
    "start": "1141679",
    "end": "1150480"
  },
  {
    "text": "um for this service that needs to be executed so any questions so far this is kind of",
    "start": "1150480",
    "end": "1156960"
  },
  {
    "text": "like what we currently have i have a question so you've defined some of these um parameters that i understand",
    "start": "1156960",
    "end": "1163760"
  },
  {
    "text": "they're getting passed through for example in the wikipedia example but why is it that the there isn't a",
    "start": "1163760",
    "end": "1169280"
  },
  {
    "text": "definition of what parameters are available on the read wikipedia function in this particular case",
    "start": "1169280",
    "end": "1175360"
  },
  {
    "text": "yeah and we're actually going to get to that and this is a very good question one problem with and as you will see",
    "start": "1175360",
    "end": "1181440"
  },
  {
    "text": "with other currently used or or popular",
    "start": "1181440",
    "end": "1187360"
  },
  {
    "text": "workflow markups out there you don't have that as a workflow developer currently you",
    "start": "1187760",
    "end": "1193919"
  },
  {
    "text": "not only have to know what you want to write as far as your orchestration to solve your orchestration business problem but you",
    "start": "1193919",
    "end": "1200400"
  },
  {
    "text": "in a way have to be an admin as well to understand the api and all the operations of all the",
    "start": "1200400",
    "end": "1206240"
  },
  {
    "text": "services that you want to invoke which definitely makes it hard for modelers",
    "start": "1206240",
    "end": "1211520"
  },
  {
    "text": "all right so one of the parts of this where i'm going to is kind of like a step-by-step approach to get to where i",
    "start": "1211520",
    "end": "1218000"
  },
  {
    "text": "kind of want to get at the end all right um no no problem so this is just again a",
    "start": "1218000",
    "end": "1225360"
  },
  {
    "text": "little bit of iteration of how we currently do things we have a name resource and type parameter function",
    "start": "1225360",
    "end": "1231039"
  },
  {
    "text": "definitions also similar to states have a metadata definition this is our free form type of",
    "start": "1231039",
    "end": "1236880"
  },
  {
    "text": "extension object which uh modelers can use to add uh",
    "start": "1236880",
    "end": "1242760"
  },
  {
    "text": "non-executable parameters and information to their",
    "start": "1242760",
    "end": "1247840"
  },
  {
    "text": "workflow model so yeah metadata is also available for function definitions",
    "start": "1247840",
    "end": "1254000"
  },
  {
    "text": "as far as function ref goes again we have a ref name which references the name unique name parameter on the of the",
    "start": "1254000",
    "end": "1260159"
  },
  {
    "text": "function definition and as we have seen in the example the parameters which is a free form json objects where you can add",
    "start": "1260159",
    "end": "1266480"
  },
  {
    "text": "uh the data that needs to be passed to the particular service that we want to invoke",
    "start": "1266480",
    "end": "1271679"
  },
  {
    "text": "um during workflow execution now let's in order for us to see where",
    "start": "1271679",
    "end": "1277679"
  },
  {
    "text": "we are and how to improve uh one of the things i think maybe it's a good idea let's compare it to other ones now i",
    "start": "1277679",
    "end": "1284559"
  },
  {
    "text": "picked google cloud workflow not because i pick on google or anything like that it's just a new one and it's",
    "start": "1284559",
    "end": "1290799"
  },
  {
    "text": "kind of new and i just wanted to see hey let's see what they're doing all right and this is for their documentation",
    "start": "1290799",
    "end": "1296640"
  },
  {
    "text": "instead of states they have steps and similar to for example aws which",
    "start": "1296640",
    "end": "1301840"
  },
  {
    "text": "we'll see they have they defined their service execution inside of their steps where we",
    "start": "1301840",
    "end": "1307760"
  },
  {
    "text": "kind of do it a little bit different we'll define them up front and reference them and also you can reference uh",
    "start": "1307760",
    "end": "1315280"
  },
  {
    "text": "files json or yaml reusability we talked about this earlier",
    "start": "1315280",
    "end": "1320559"
  },
  {
    "text": "but basically uh this is on top it's kind of like the definition they have a call parameter where you can",
    "start": "1320559",
    "end": "1326880"
  },
  {
    "text": "uh have an enumeration of different types of http calls to the services that you can make",
    "start": "1326880",
    "end": "1332080"
  },
  {
    "text": "you can have arguments uh url methods you can set headers you can say the body",
    "start": "1332080",
    "end": "1338720"
  },
  {
    "text": "and blah blah blah authentication information is right there as well and then you have things like timeouts",
    "start": "1338720",
    "end": "1344240"
  },
  {
    "text": "and the results as far as being the results of the service the data results how",
    "start": "1344240",
    "end": "1349600"
  },
  {
    "text": "uh is it placed within the workflow data uh uh as the state execution continues",
    "start": "1349600",
    "end": "1355520"
  },
  {
    "text": "and underneath is the same example that i showed uh on the earliest earlier slide using the",
    "start": "1355520",
    "end": "1361520"
  },
  {
    "text": "serverless workload uh specification this is kind of like with their yaml they their workflows are only ammo",
    "start": "1361520",
    "end": "1367200"
  },
  {
    "text": "based uh this is what it looks like basically where we show the json another we also show the ammo it doesn't matter",
    "start": "1367200",
    "end": "1374159"
  },
  {
    "text": "so that's kind of what it would look as you can see that's another approach to to that's similar to ours at this point",
    "start": "1374159",
    "end": "1382320"
  },
  {
    "text": "another of course a very popular workflow language out there is aws",
    "start": "1382320",
    "end": "1387360"
  },
  {
    "text": "and i don't have a full example i've been rushing to do this but this is how this is the very similar",
    "start": "1387360",
    "end": "1392720"
  },
  {
    "text": "thing they define a resource which is uh in this case an arn but in a way",
    "start": "1392720",
    "end": "1397919"
  },
  {
    "text": "that's a uri at the end you can look at that and they also have um json object type called parameters",
    "start": "1397919",
    "end": "1406080"
  },
  {
    "text": "where you can basically stick anything in there you wish in order",
    "start": "1406080",
    "end": "1411919"
  },
  {
    "text": "to provide all the data all the information for this particular service to execute um so looking at",
    "start": "1411919",
    "end": "1419760"
  },
  {
    "text": "these three and of course there are many others that i haven't looked at and i hope you guys can maybe help me with",
    "start": "1419760",
    "end": "1425440"
  },
  {
    "text": "looking at even different approaches they're very similar right so let's see about some notes that i",
    "start": "1425440",
    "end": "1432960"
  },
  {
    "text": "made and again this is just my opinion and you guys can tell me yours and i would love to hear it",
    "start": "1432960",
    "end": "1438480"
  },
  {
    "text": "so some notes about all of this mentioned including ours they try to be neutral",
    "start": "1438480",
    "end": "1444880"
  },
  {
    "text": "but in a way every single definition that we have seen so far is proprietary in the sense that",
    "start": "1444880",
    "end": "1452000"
  },
  {
    "text": "it allows you to do what it allows you to do all right it's very specific",
    "start": "1452000",
    "end": "1458960"
  },
  {
    "text": "to container the cloud platforms you run on for example just letting you know from the",
    "start": "1458960",
    "end": "1464400"
  },
  {
    "text": "information that i read and if you guys work at google or work with google flow please correct me but they allow for example currently at this",
    "start": "1464400",
    "end": "1470960"
  },
  {
    "text": "stage only http execution is to be made um aws also has the services that",
    "start": "1470960",
    "end": "1476960"
  },
  {
    "text": "they have the exposed in their system and they allow you to call those so it's very kind of",
    "start": "1476960",
    "end": "1482480"
  },
  {
    "text": "closed box type of approach where we as a specification we kind of have to look at a much",
    "start": "1482480",
    "end": "1487840"
  },
  {
    "text": "broader uh uh state at this time so no matter what we do or no matter",
    "start": "1487840",
    "end": "1493520"
  },
  {
    "text": "what we're trying or these different approaches are trying to do they were never going to fit",
    "start": "1493520",
    "end": "1498720"
  },
  {
    "text": "the requirements of everybody now we can't do that either however uh",
    "start": "1498720",
    "end": "1506480"
  },
  {
    "text": "they're always going to be changes and updates and improvements needed but",
    "start": "1506480",
    "end": "1512480"
  },
  {
    "text": "they're all based on again the proprietary or the in-house definition of how you invoke a function now the",
    "start": "1512480",
    "end": "1519840"
  },
  {
    "text": "second notes i put on this slide is specific to our function definitions",
    "start": "1519840",
    "end": "1525600"
  },
  {
    "text": "i mean what i mean by that we're in the same boat so we we're also trying to evoke services during or or define how",
    "start": "1525600",
    "end": "1532400"
  },
  {
    "text": "services are evoked during uh workflow execution but we are a specification so we have to look at this",
    "start": "1532400",
    "end": "1538799"
  },
  {
    "text": "differently as a sophistication we have to distinguish ourselves",
    "start": "1538799",
    "end": "1544159"
  },
  {
    "text": "we can again do what we're doing and keep what we're doing in refining it and updating as new customers or new",
    "start": "1544159",
    "end": "1550159"
  },
  {
    "text": "consumers of the service workload marker will come in with the requirements but again it will be some sort of custom",
    "start": "1550159",
    "end": "1556480"
  },
  {
    "text": "based definition right um and my idea or or the idea that that",
    "start": "1556480",
    "end": "1561600"
  },
  {
    "text": "i think as going forward should probably look at is to rely on other specifications",
    "start": "1561600",
    "end": "1567120"
  },
  {
    "text": "same thing we our specifications said that we rely for cloud event specification for",
    "start": "1567120",
    "end": "1572320"
  },
  {
    "text": "cloud format well functions in a way or executing a service is a very similar thing we should really",
    "start": "1572320",
    "end": "1578640"
  },
  {
    "text": "rely on existing specifications just do things 100 times better than anything that we can specifically create",
    "start": "1578640",
    "end": "1585840"
  },
  {
    "text": "and do for function or service definitions and at the same time we need to focus on",
    "start": "1585840",
    "end": "1591840"
  },
  {
    "text": "portability and the more information such as authentication username passwords headers things like",
    "start": "1591840",
    "end": "1598640"
  },
  {
    "text": "that that we stick in our markup itself are going to uh limit our portability in the future",
    "start": "1598640",
    "end": "1605760"
  },
  {
    "text": "across containers and cloud platforms or even if we're just doing this normal",
    "start": "1605760",
    "end": "1611120"
  },
  {
    "text": "local host type of project you know that that our specification is also there for",
    "start": "1611120",
    "end": "1617039"
  },
  {
    "text": "so what does this really mean going long term for function definitions we",
    "start": "1617039",
    "end": "1622480"
  },
  {
    "text": "i think we should start relying on open api specification and why well for many reasons um",
    "start": "1622480",
    "end": "1630400"
  },
  {
    "text": "but let's kind of look at first where that's taking us so services that we need that workflows",
    "start": "1630400",
    "end": "1637039"
  },
  {
    "text": "need to invoke during their executions have to provide or have available an open eye",
    "start": "1637039",
    "end": "1642480"
  },
  {
    "text": "description and an open api is a specification it is a huge widely used",
    "start": "1642480",
    "end": "1648640"
  },
  {
    "text": "uh you guys can look at the docs and read everything but their description is basically json or yaml format",
    "start": "1648640",
    "end": "1654480"
  },
  {
    "text": "open api covers almost all use cases for invoking restful http services",
    "start": "1654480",
    "end": "1661360"
  },
  {
    "text": "including authentication callbacks for web hooks etc etc so what they can provide and",
    "start": "1661360",
    "end": "1667279"
  },
  {
    "text": "already do is already there and we don't have to duplicate it we don't have to create a",
    "start": "1667279",
    "end": "1672320"
  },
  {
    "text": "subset of it and keep improving it it's it's there and it's widely used",
    "start": "1672320",
    "end": "1677520"
  },
  {
    "text": "it is very good for runtime implementation of our specification because a runtimes get all the information they",
    "start": "1677520",
    "end": "1684640"
  },
  {
    "text": "need all the tooling that already exists in multiple different languages uh that they can read an opi open api",
    "start": "1684640",
    "end": "1691440"
  },
  {
    "text": "definition and know exactly how to actually make this call remember also their single call to",
    "start": "1691440",
    "end": "1697520"
  },
  {
    "text": "rest service can actually mean multiple calls can mean getting a jwt uh the token doing basic",
    "start": "1697520",
    "end": "1704399"
  },
  {
    "text": "authentication or even a lot more uh things than that so open api can already describe all this for us",
    "start": "1704399",
    "end": "1712559"
  },
  {
    "text": "also another thing is for tooling now this is where i come to your question that was asked before uh",
    "start": "1712559",
    "end": "1720159"
  },
  {
    "text": "with allowing opi specifications if there is ever tooling for serverless workload which i hope there will be",
    "start": "1720159",
    "end": "1726000"
  },
  {
    "text": "uh outside of just the the visual code plugin that we provide uh some visual tooling for example you",
    "start": "1726000",
    "end": "1732720"
  },
  {
    "text": "will be able to get read the reference opi open api specific definition and",
    "start": "1732720",
    "end": "1738640"
  },
  {
    "text": "help the users with the actual services or operations provided by the",
    "start": "1738640",
    "end": "1744559"
  },
  {
    "text": "service they need to execute so it completely offloads that part from the workflow modelers",
    "start": "1744559",
    "end": "1750880"
  },
  {
    "text": "which i think will help a lot any questions so far",
    "start": "1750880",
    "end": "1756080"
  },
  {
    "text": "yeah i'm sorry i had connection problems in between but uh open api so i",
    "start": "1757520",
    "end": "1765200"
  },
  {
    "text": "i do like it probably the most for anything that is rest based because it's",
    "start": "1765200",
    "end": "1772320"
  },
  {
    "text": "really complete as you said it allows everything",
    "start": "1772320",
    "end": "1777279"
  },
  {
    "text": "for amazon web service you've given the example in there using arn resources it's a uri format",
    "start": "1777919",
    "end": "1785760"
  },
  {
    "text": "to describe their endpoints but there you don't even get to choose the transport method so whether that is",
    "start": "1785760",
    "end": "1792240"
  },
  {
    "text": "http or whether they're using java rmi internally you don't get to know",
    "start": "1792240",
    "end": "1798000"
  },
  {
    "text": "um for the the google example that is a very generic uh http get so",
    "start": "1798000",
    "end": "1805919"
  },
  {
    "text": "first um if we stick with http um would open api",
    "start": "1805919",
    "end": "1814720"
  },
  {
    "text": "do you happen to know if we might run into compatibility issues because if you if",
    "start": "1814720",
    "end": "1820640"
  },
  {
    "text": "you want to call something that you could easily call with an http request and you can specify",
    "start": "1820640",
    "end": "1826720"
  },
  {
    "text": "all the authentication bearer and whatever you need uh in the request um but you don't have an api",
    "start": "1826720",
    "end": "1834640"
  },
  {
    "text": "schema for it you'd have to build it yourself right yeah and i thought about that a lot",
    "start": "1834640",
    "end": "1840880"
  },
  {
    "text": "actually and the way i see it is open api or swagger as it's also called",
    "start": "1840880",
    "end": "1846159"
  },
  {
    "text": "has a lot of tooling already and they make it very simple to build one if one doesn't exist number one",
    "start": "1846159",
    "end": "1852000"
  },
  {
    "text": "number two i i made sure before i did this and you guys can really really do your research yourself and and",
    "start": "1852000",
    "end": "1858559"
  },
  {
    "text": "i would love to get everybody's feedback everybody is doing open api now if you look at aws itself",
    "start": "1858559",
    "end": "1864480"
  },
  {
    "text": "they allow you to upload uh swagger definitions open api definitions and",
    "start": "1864480",
    "end": "1870320"
  },
  {
    "text": "also allow you to build open up api definitions from their existing services same thing with google cloud same thing",
    "start": "1870320",
    "end": "1878159"
  },
  {
    "text": "uh with openshift for example the stuff that upcat are working in so i know that i just talked to for example scott",
    "start": "1878159",
    "end": "1884320"
  },
  {
    "text": "nichols about k native would that fit within the two and he said yes you can also define",
    "start": "1884320",
    "end": "1889440"
  },
  {
    "text": "k native services using an open api definition so the i understand",
    "start": "1889440",
    "end": "1896000"
  },
  {
    "text": "that there might be use cases where users can say hey i don't want to do this or i cannot do this",
    "start": "1896000",
    "end": "1901840"
  },
  {
    "text": "but that is the trade-off that we're going to have to to deal with this as a specification",
    "start": "1901840",
    "end": "1907600"
  },
  {
    "text": "um i i also described in the pr that we still have the metadata section so for users really",
    "start": "1907600",
    "end": "1913679"
  },
  {
    "text": "they simply do not want to use what we the open api as i will show in the next slide",
    "start": "1913679",
    "end": "1919120"
  },
  {
    "text": "the proposed change to the function definition they can still use metadata to describe how to invoke their service uh with uh",
    "start": "1919120",
    "end": "1927200"
  },
  {
    "text": "the exclamation or or the node that those types of workflow definitions we",
    "start": "1927200",
    "end": "1933200"
  },
  {
    "text": "cannot as a specification ensure that they're portable across um multiple containers or or cloud",
    "start": "1933200",
    "end": "1940080"
  },
  {
    "text": "environments um but it's still possible to do using the metadata",
    "start": "1940080",
    "end": "1945200"
  },
  {
    "text": "okay so we would default the type to open api i'm guessing the latest",
    "start": "1945200",
    "end": "1951360"
  },
  {
    "text": "version yeah you'll see typing type is completely removed you'll see uh next slide and then if you want to uh",
    "start": "1951360",
    "end": "1957919"
  },
  {
    "text": "yeah yeah i know this bit okay so anything else",
    "start": "1957919",
    "end": "1963519"
  },
  {
    "text": "could use the extension mechanism to describe a different",
    "start": "1963519",
    "end": "1968720"
  },
  {
    "text": "um invocation method yes definitely but like we have to still",
    "start": "1968720",
    "end": "1975039"
  },
  {
    "text": "understand that we cannot please everybody no matter what we do but however the amount of benefits this",
    "start": "1975039",
    "end": "1981919"
  },
  {
    "text": "has for the bigger public has to outweigh uh",
    "start": "1981919",
    "end": "1987919"
  },
  {
    "text": "if we're going to do this so this is kind of why the discussion i love it i love it i really want to",
    "start": "1987919",
    "end": "1993039"
  },
  {
    "text": "make this the the standard or default way for um message invocation",
    "start": "1993039",
    "end": "1999840"
  },
  {
    "text": "the only thing i don't want to close any doors so by removing the type field so i was",
    "start": "1999840",
    "end": "2005440"
  },
  {
    "text": "wondering if we should default it to open api or if we really want to remove it completely",
    "start": "2005440",
    "end": "2010960"
  },
  {
    "text": "we could reintroduce it later if we wanted to definitely definitely so i think this is the last slide uh",
    "start": "2010960",
    "end": "2018399"
  },
  {
    "text": "i hope no there is one more after this but i did an example now it's the same example as we saw before",
    "start": "2018399",
    "end": "2024880"
  },
  {
    "text": "but with the proposed function definition where we still need a unique name again the name is domain specific",
    "start": "2024880",
    "end": "2031039"
  },
  {
    "text": "to the workflow definition itself as far as referencing it in actions but",
    "start": "2031039",
    "end": "2036320"
  },
  {
    "text": "you see rather than having resource type uh and anything you have a single parameter",
    "start": "2036320",
    "end": "2042240"
  },
  {
    "text": "call operation the operation parameter is is is a string with two",
    "start": "2042240",
    "end": "2047840"
  },
  {
    "text": "parts uh divided by the little hashtag the first part is a uri so it doesn't",
    "start": "2047840",
    "end": "2054000"
  },
  {
    "text": "have to be http it can be class path file path whatever is as far as as long as if it's the the",
    "start": "2054000",
    "end": "2059760"
  },
  {
    "text": "uri specification to the actual json or yaml file where your service",
    "start": "2059760",
    "end": "2065599"
  },
  {
    "text": "open api service definition uh is present the part after the hashtag is the",
    "start": "2065599",
    "end": "2072320"
  },
  {
    "text": "operation iid and if you look at the uh open api specification there is a widely used parameter called operation",
    "start": "2072320",
    "end": "2079200"
  },
  {
    "text": "id uh which is again a domain specific parameter which really ties in well to our uh domain",
    "start": "2079200",
    "end": "2086638"
  },
  {
    "text": "specific uh language workflow language itself and this is a unique mapping in the open",
    "start": "2086639",
    "end": "2094240"
  },
  {
    "text": "api definition uh to a particular endpoint or operation that your service provides",
    "start": "2094240",
    "end": "2102079"
  },
  {
    "text": "this is actually luckily this the hashtag is uh is the uri delimiter to",
    "start": "2102079",
    "end": "2109280"
  },
  {
    "text": "specify a fragment so date time here would be a fragment but open api uses object references",
    "start": "2109280",
    "end": "2118160"
  },
  {
    "text": "where the hashtag separates i think the specific path to the object right",
    "start": "2118160",
    "end": "2126560"
  },
  {
    "text": "in there is several uh we have to identify the uniqueness in open api definition",
    "start": "2126560",
    "end": "2133359"
  },
  {
    "text": "how do we uniquely define a certain operation of the service that it provides",
    "start": "2133359",
    "end": "2138560"
  },
  {
    "text": "there is two things you cannot use the path name itself it's not unique because you can use",
    "start": "2138560",
    "end": "2144400"
  },
  {
    "text": "variables you can you can you can use name and path maybe",
    "start": "2144400",
    "end": "2149760"
  },
  {
    "text": "but one of the standards that's really across the board right now is to use the operation id",
    "start": "2149760",
    "end": "2155040"
  },
  {
    "text": "which is a string that has to be unique within the open api it maps one to one uh to a certain operation of",
    "start": "2155040",
    "end": "2162720"
  },
  {
    "text": "the service um and the same the reason and i'm just letting you know we can change this format",
    "start": "2162720",
    "end": "2168160"
  },
  {
    "text": "but take a look at for example apache camel the latest uh not recently they also added open api support",
    "start": "2168160",
    "end": "2174960"
  },
  {
    "text": "and they use the same type of string so i didn't steal it from them but looking at their stuff they so the approach is something that other",
    "start": "2174960",
    "end": "2181680"
  },
  {
    "text": "are looking at that's why i think is is is useful but we we really",
    "start": "2181680",
    "end": "2186720"
  },
  {
    "text": "if we find some better approach or idea let's use that so that's but we need some sort of way",
    "start": "2186720",
    "end": "2192240"
  },
  {
    "text": "to define okay here is the yaml or json which has the open api definition file",
    "start": "2192240",
    "end": "2197520"
  },
  {
    "text": "so the runtime can read it the tooling can read it and see all the different operations that the servers provide",
    "start": "2197520",
    "end": "2202880"
  },
  {
    "text": "and then we need a unique identifier which represents a single operation of",
    "start": "2202880",
    "end": "2208560"
  },
  {
    "text": "that service that we actually want to invoke so that's kind of like that if we use this type of string format or not",
    "start": "2208560",
    "end": "2214800"
  },
  {
    "text": "or two parameters versus one i'm okay with all of that",
    "start": "2214800",
    "end": "2220720"
  },
  {
    "text": "one comment i would make is that i think the query on line 22 shouldn't be required in this case",
    "start": "2220960",
    "end": "2227119"
  },
  {
    "text": "because the action and the search should come from the open api spec right um that's a good question however",
    "start": "2227119",
    "end": "2235920"
  },
  {
    "text": "one of the things that i uh for example day of the week if you look at that the api the open api specification",
    "start": "2235920",
    "end": "2243520"
  },
  {
    "text": "itself does not know or is involved in the actual execution of the workflow itself",
    "start": "2243520",
    "end": "2249839"
  },
  {
    "text": "so what happens on really after the execution of the first function in this",
    "start": "2249839",
    "end": "2254880"
  },
  {
    "text": "case the get current time the results of the function are merged with the",
    "start": "2254880",
    "end": "2260079"
  },
  {
    "text": "uh state in this case the get to days wikipedia articles operation state",
    "start": "2260079",
    "end": "2266800"
  },
  {
    "text": "and then the second function gets invoked right so we have to pass the workflow has to",
    "start": "2266800",
    "end": "2273119"
  },
  {
    "text": "pass this data which were the results of the first function invocation",
    "start": "2273119",
    "end": "2278160"
  },
  {
    "text": "as the body or the parameter to the second function information execution so we still have that to",
    "start": "2278160",
    "end": "2284720"
  },
  {
    "text": "define that however what open api makes it a lot easier now is that up front during compile time we",
    "start": "2284720",
    "end": "2292160"
  },
  {
    "text": "can say hey uh the as parameters you pass a query",
    "start": "2292160",
    "end": "2297599"
  },
  {
    "text": "right parameter but the openid api definition says it should really be called something else or you're passing",
    "start": "2297599",
    "end": "2304320"
  },
  {
    "text": "in one parameter but in opi open api definition of the service endpoint",
    "start": "2304320",
    "end": "2309520"
  },
  {
    "text": "you require two parameters for example i mean what it means it's not necessarily a query parameter",
    "start": "2309520",
    "end": "2316240"
  },
  {
    "text": "like it could be a post body it could be uh whatever depending on what the european api spec says yeah it should be",
    "start": "2316240",
    "end": "2322960"
  },
  {
    "text": "exactly that's why i'm saying that query may be is not needed there because whatever how",
    "start": "2322960",
    "end": "2329359"
  },
  {
    "text": "whatever form those parameters take should be defined as part of the open api spec definitely",
    "start": "2329359",
    "end": "2335119"
  },
  {
    "text": "yeah that's a one-to-one mapping that that open api even helps us with to know",
    "start": "2335119",
    "end": "2340560"
  },
  {
    "text": "exactly the structure of the parameter that we have to pass in",
    "start": "2340560",
    "end": "2346400"
  },
  {
    "text": "even they have open api has a schema definition for the object type so even",
    "start": "2346400",
    "end": "2351760"
  },
  {
    "text": "workflow developers will exactly know what the structure of the parameters needs to be in order to invoke this",
    "start": "2351760",
    "end": "2358079"
  },
  {
    "text": "service is the help no all right so do you agree that the query online 22 is not required",
    "start": "2358079",
    "end": "2365359"
  },
  {
    "text": "or do you think it is required um i think you could just bump",
    "start": "2365359",
    "end": "2370560"
  },
  {
    "text": "action and search up one level yeah yeah i think so too yeah that's fine",
    "start": "2370560",
    "end": "2376400"
  },
  {
    "text": "hey hi tiho can you hear me yes hi guys i'm sorry i'm i'm late um",
    "start": "2376800",
    "end": "2383680"
  },
  {
    "text": "sorry yeah regarding these parameters it is uh this will fit very well on the pr",
    "start": "2383680",
    "end": "2390079"
  },
  {
    "text": "that issue that i open regarding we giving reasonable uh reason to the two",
    "start": "2390079",
    "end": "2396960"
  },
  {
    "text": "parameters so uh if they are path parameters query parameters header parameters or body parameters we",
    "start": "2396960",
    "end": "2404640"
  },
  {
    "text": "we don't know you know actually uh we don't need to know now because with the open api thing and yeah i i",
    "start": "2404640",
    "end": "2410400"
  },
  {
    "text": "guess query we won't need that and maybe just uh parameters maybe i don't know",
    "start": "2410400",
    "end": "2417599"
  },
  {
    "text": "name me and data and then the data we we fetch from the from the from the variable name or from",
    "start": "2417599",
    "end": "2424880"
  },
  {
    "text": "the body of the state yeah or anything like that because we we have this",
    "start": "2424880",
    "end": "2430079"
  },
  {
    "text": "context information coming from the op api and one other question that i have it is",
    "start": "2430079",
    "end": "2436000"
  },
  {
    "text": "that uh regarding this well how that you have there in the operation",
    "start": "2436000",
    "end": "2441280"
  },
  {
    "text": "uh for implementation let's say that uh they might have the the open api",
    "start": "2441280",
    "end": "2450079"
  },
  {
    "text": "json file uh within the their context like if i'm i'm writing a java",
    "start": "2450079",
    "end": "2456800"
  },
  {
    "text": "implementation for that i can i can have that that emo or json file within my class path or if i'm running",
    "start": "2456800",
    "end": "2464160"
  },
  {
    "text": "i'm writing a go application i can have that you know package on my binary as well or i can",
    "start": "2464160",
    "end": "2470640"
  },
  {
    "text": "have that uh external reference like file or anything like that so this is a valid",
    "start": "2470640",
    "end": "2476640"
  },
  {
    "text": "uh way or i um name right so yeah so it's so it can be",
    "start": "2476640",
    "end": "2482480"
  },
  {
    "text": "exposed by http i can refresh this file for whatever classpath file it's it just says to follow uri",
    "start": "2482480",
    "end": "2489839"
  },
  {
    "text": "specification oh yeah just just let's try to maybe",
    "start": "2489839",
    "end": "2495440"
  },
  {
    "text": "document that and somehow or write that on the yeah because maybe people will ask like oh if",
    "start": "2495440",
    "end": "2503040"
  },
  {
    "text": "i can't fetch the the the resource of my my workflow won't work you know",
    "start": "2503040",
    "end": "2509520"
  },
  {
    "text": "because i won't i won't have this operation now so yeah we can actually have that yeah i think in the",
    "start": "2509520",
    "end": "2515200"
  },
  {
    "text": "pr define it as a in some of the examples even use file column forward slash for slash rather",
    "start": "2515200",
    "end": "2520960"
  },
  {
    "text": "http just to show that you can really define where it is yourself rather than always has to be available",
    "start": "2520960",
    "end": "2528160"
  },
  {
    "text": "on some public endpoint oh that's nice yeah i'm sorry certainly last no no no problem",
    "start": "2528160",
    "end": "2533760"
  },
  {
    "text": "so just last slide ahead i'm sorry it takes so long so here is the link to the pr i think it's you know currently only",
    "start": "2533760",
    "end": "2539760"
  },
  {
    "text": "open pr right now um so the changes are name name is again",
    "start": "2539760",
    "end": "2545520"
  },
  {
    "text": "still the unique identifier for the function definition operation is now the new parameter which",
    "start": "2545520",
    "end": "2550960"
  },
  {
    "text": "we said has two parts divided by the hashtag the first one being an uri um as an and ricardo said",
    "start": "2550960",
    "end": "2559520"
  },
  {
    "text": "and the second part being the operation id and on on the low i create the image below i",
    "start": "2559520",
    "end": "2565680"
  },
  {
    "text": "created a little open api definition using the swagger editor um",
    "start": "2565680",
    "end": "2571839"
  },
  {
    "text": "that's not completely correct but it's just the most important part there that shows the how the operation id for",
    "start": "2571839",
    "end": "2579520"
  },
  {
    "text": "slash date time maps uh to the uh in in actually in our definition",
    "start": "2579520",
    "end": "2586079"
  },
  {
    "text": "of of this string um so yeah and you can see you can see uh",
    "start": "2586079",
    "end": "2592240"
  },
  {
    "text": "like you can define in open api the response codes uh if what kind of",
    "start": "2592240",
    "end": "2597520"
  },
  {
    "text": "return message it gets and the parameters and and things like that so yeah",
    "start": "2597520",
    "end": "2603760"
  },
  {
    "text": "it it does what it does it does what the specification is intended to do it does it very well",
    "start": "2603760",
    "end": "2609200"
  },
  {
    "text": "so yeah so that's all i had if you guys have any questions concerns um if you want to know more about",
    "start": "2609200",
    "end": "2616319"
  },
  {
    "text": "function definitions or anything right now please pick up i have a question about the serverless",
    "start": "2616319",
    "end": "2623280"
  },
  {
    "text": "functions like if you go back to the aws step functions example where i think it was showing an",
    "start": "2623280",
    "end": "2628480"
  },
  {
    "text": "r for a function yes sir uh okay in this case it's",
    "start": "2628480",
    "end": "2635200"
  },
  {
    "text": "sns publish um if we instead have an example where the state is making a call to",
    "start": "2635200",
    "end": "2643119"
  },
  {
    "text": "a lambda function um how would how would that work what would you know what would that look like with",
    "start": "2643119",
    "end": "2650880"
  },
  {
    "text": "with this um we it would look the same the first one",
    "start": "2650880",
    "end": "2656720"
  },
  {
    "text": "would be this the operation string would be basically the first thing is again a uri to your open api uh",
    "start": "2656720",
    "end": "2664319"
  },
  {
    "text": "json or yaml definition the second part would be your operation id for example",
    "start": "2664319",
    "end": "2670000"
  },
  {
    "text": "called publish and you would need to either have one available or create yourself an",
    "start": "2670000",
    "end": "2676480"
  },
  {
    "text": "open api definition json or yaml with a path which can be really this",
    "start": "2676480",
    "end": "2683040"
  },
  {
    "text": "path right here and an operation id of publish so the runtime can map",
    "start": "2683040",
    "end": "2688960"
  },
  {
    "text": "the operation id to to the operator of the operation id to the",
    "start": "2688960",
    "end": "2695680"
  },
  {
    "text": "to the one defined in your open api specification so so somebody that's running this in",
    "start": "2695680",
    "end": "2704480"
  },
  {
    "text": "in aws they would need to upload an open api spec somewhere that points to their lambda",
    "start": "2704480",
    "end": "2711040"
  },
  {
    "text": "function yeah but from what i've seen again this is why i kind of i do feel confident about this more than not and where i",
    "start": "2711040",
    "end": "2718319"
  },
  {
    "text": "want your guys's input because you guys might be experts in certain domains they're much better than i ever could be uh to",
    "start": "2718319",
    "end": "2726160"
  },
  {
    "text": "know but from what i read that even in on aws you can uh it can create them for",
    "start": "2726160",
    "end": "2732160"
  },
  {
    "text": "you they them being the open api uh definitions for the services exposed",
    "start": "2732160",
    "end": "2739520"
  },
  {
    "text": "so not in all cases you have to do your your own and upload them somewhere but in a lot",
    "start": "2739520",
    "end": "2745280"
  },
  {
    "text": "of cases in different cloud and and and providers will do this for you",
    "start": "2745280",
    "end": "2750640"
  },
  {
    "text": "same thing on openshift all the services you can openshift can generate the",
    "start": "2750640",
    "end": "2755920"
  },
  {
    "text": "the open api definitions for you already gotcha i think that makes sense for examples like calling sqs or calling",
    "start": "2755920",
    "end": "2762560"
  },
  {
    "text": "some you know largest established aws service yeah but struggling to figure out how it",
    "start": "2762560",
    "end": "2768560"
  },
  {
    "text": "works with something like my own custom lambda function that i've uploaded",
    "start": "2768560",
    "end": "2774160"
  },
  {
    "text": "and i want to invoke that i guess um i guess what what it sounds like is",
    "start": "2774160",
    "end": "2782640"
  },
  {
    "text": "in that case i i'm not sure if i'd be in like using an open api spec for the lambda",
    "start": "2782640",
    "end": "2788480"
  },
  {
    "text": "service and then passing in the parameters that tell it to invoke my function or if",
    "start": "2788480",
    "end": "2793839"
  },
  {
    "text": "i need to provide an open api spec to describe the kind of api that that lambda function forms",
    "start": "2793839",
    "end": "2802319"
  },
  {
    "text": "um yeah the funny thing about lambda functions i as far as i know and",
    "start": "2802319",
    "end": "2808720"
  },
  {
    "text": "i'm not very overly familiar with amazon services is as far as i know in order to make a",
    "start": "2808720",
    "end": "2815599"
  },
  {
    "text": "restful call to a lambda function that can also expect a result you'd have to put an api",
    "start": "2815599",
    "end": "2823680"
  },
  {
    "text": "gateway in front where you choose to pass yourself and then you just refer to the arn",
    "start": "2823680",
    "end": "2830640"
  },
  {
    "text": "as the function to be executed and in this scenario i'm not even sure if how the",
    "start": "2830640",
    "end": "2836960"
  },
  {
    "text": "lambda can how it would produce the result but",
    "start": "2836960",
    "end": "2842240"
  },
  {
    "text": "it's that's the only way to make it restful and once you have that you for your api gateway uh in",
    "start": "2842240",
    "end": "2849200"
  },
  {
    "text": "on amazon you could um come up with a swagger definition this example uses sns publish and it's",
    "start": "2849200",
    "end": "2856720"
  },
  {
    "text": "unidirectional it's really more of a cloud event it's cloud events of course",
    "start": "2856720",
    "end": "2863520"
  },
  {
    "text": "not exactly supported uh in amazon but it is the transport here",
    "start": "2863520",
    "end": "2869839"
  },
  {
    "text": "is um a message broker so you have to publish to a topic in",
    "start": "2869839",
    "end": "2876640"
  },
  {
    "text": "order to invoke the function i think the the lambda here is bound to that topic ain and",
    "start": "2876640",
    "end": "2885119"
  },
  {
    "text": "there you only have a message structure that's one way so i don't know if actually i assume that",
    "start": "2885119",
    "end": "2893280"
  },
  {
    "text": "open api cannot define um such apis",
    "start": "2893280",
    "end": "2901200"
  },
  {
    "text": "because it's really done for for restful apis and those are meant to be http",
    "start": "2901200",
    "end": "2908079"
  },
  {
    "text": "https based request response client server protocol um if there is something",
    "start": "2908079",
    "end": "2915920"
  },
  {
    "text": "other that's why i mentioned maybe we wanted to retain the type for function invocations i'm not",
    "start": "2915920",
    "end": "2921920"
  },
  {
    "text": "assuming anybody wants to do old-fashioned corba calls or do some asn 1 encoding but",
    "start": "2921920",
    "end": "2927920"
  },
  {
    "text": "if there are other invocation protocols not based on http um then",
    "start": "2927920",
    "end": "2935280"
  },
  {
    "text": "retaining the type field would be at least an option to extend the specification",
    "start": "2935280",
    "end": "2940480"
  },
  {
    "text": "and write some proprietary extension the other thing i have in mind is that since this is unidirectional",
    "start": "2940480",
    "end": "2948160"
  },
  {
    "text": "it's not really waiting for result we could somehow formulate such an such a message",
    "start": "2948160",
    "end": "2955040"
  },
  {
    "text": "as an event a produced event that is uh being produced by the workflow we we have and that's a",
    "start": "2955040",
    "end": "2962079"
  },
  {
    "text": "good thing manuel you mentioned this we have two ways of invoking functions within the serverless workforce specification one is",
    "start": "2962079",
    "end": "2968880"
  },
  {
    "text": "via the actual function definition which is meant more in our case for synchronous http",
    "start": "2968880",
    "end": "2975440"
  },
  {
    "text": "calls in this case uh we also have the ability to invoke functions in actions via events",
    "start": "2975440",
    "end": "2982160"
  },
  {
    "text": "that is also already there in the specification itself so you can already define in a lot of cases right now we",
    "start": "2982160",
    "end": "2989440"
  },
  {
    "text": "have functions that are not exposed via http or not exposed at all but they can be triggered via events in different",
    "start": "2989440",
    "end": "2995440"
  },
  {
    "text": "containers for example and in that case we can also describe a trigger event and a result event in",
    "start": "2995440",
    "end": "3001040"
  },
  {
    "text": "actions uh to invoke those types of services as well um so those are more if you want more of",
    "start": "3001040",
    "end": "3007680"
  },
  {
    "text": "an async type of um scenario where where where um you fire and then you",
    "start": "3007680",
    "end": "3014480"
  },
  {
    "text": "wait you will most likely use anyways event-based uh invocation of your services or",
    "start": "3014480",
    "end": "3020880"
  },
  {
    "text": "specifically the callback state even if you wanted to but yeah so function is",
    "start": "3020880",
    "end": "3026800"
  },
  {
    "text": "more of like a synchronous type of invocation scenario in my opinion again",
    "start": "3026800",
    "end": "3033520"
  },
  {
    "text": "so so one thing on this uh from me thinking about from the user experience point of view like in in step",
    "start": "3035440",
    "end": "3041760"
  },
  {
    "text": "functions like this example we're looking at i know it's sns but like the the goal for when the launch",
    "start": "3041760",
    "end": "3047440"
  },
  {
    "text": "step functions was to orchestrate functions right and i think we can look at another example where",
    "start": "3047440",
    "end": "3053359"
  },
  {
    "text": "they'll they have like ability to trigger functions directly so if if with our specification",
    "start": "3053359",
    "end": "3061920"
  },
  {
    "text": "we need some sort of a similar way to trigger functions right but by asking the function author to",
    "start": "3061920",
    "end": "3068559"
  },
  {
    "text": "also define a yaml spec and have it available somewhere uploaded",
    "start": "3068559",
    "end": "3074079"
  },
  {
    "text": "somewhere i think that's going to increase a lot of development cost which might not be what the function",
    "start": "3074079",
    "end": "3082160"
  },
  {
    "text": "author was looking for definitely yeah and this is this is the type of discussion i think we definitely",
    "start": "3082160",
    "end": "3087760"
  },
  {
    "text": "i wanted to have with this there is definite trade-off and we have to say what we uh want to do",
    "start": "3087760",
    "end": "3095440"
  },
  {
    "text": "as a as a group there is definitely a little bit of upfront development with this",
    "start": "3095440",
    "end": "3103200"
  },
  {
    "text": "the way i looked at it and you can tell me if i'm wrong is yes there is but you have to understand that the",
    "start": "3103200",
    "end": "3108640"
  },
  {
    "text": "actual people developing the workflow model could be completely or not understand",
    "start": "3108640",
    "end": "3114960"
  },
  {
    "text": "the actual service uh definitions that they want to invoke i know that i want to as a business",
    "start": "3114960",
    "end": "3121200"
  },
  {
    "text": "analyst or as a user creating solving by particular business problem the orchestration of services",
    "start": "3121200",
    "end": "3127920"
  },
  {
    "text": "i know what type of service i need to invoke but i do not need to know exactly every single operation or if if i have",
    "start": "3127920",
    "end": "3135119"
  },
  {
    "text": "to first get a jwt if i have to do basic authentication what is even my username and password up",
    "start": "3135119",
    "end": "3141119"
  },
  {
    "text": "front open api is much better suited for that so yes you can say your requirement",
    "start": "3141119",
    "end": "3148160"
  },
  {
    "text": "increases development time but at the same time having uh open apis",
    "start": "3148160",
    "end": "3153680"
  },
  {
    "text": "uh definition even for your services will allow you to pour them tomorrow to",
    "start": "3153680",
    "end": "3159200"
  },
  {
    "text": "a different cloud provider pour them to a different uh container for example so i don't see it as this particularly",
    "start": "3159200",
    "end": "3165920"
  },
  {
    "text": "bad thing for yourself doing this work anyways and given the open api tooling it seriously need",
    "start": "3165920",
    "end": "3172240"
  },
  {
    "text": "takes like minimal time to do that uh it's also some discovery and it's already if",
    "start": "3172240",
    "end": "3178559"
  },
  {
    "text": "you already have defined services for example inside the runtime container such as quarkus",
    "start": "3178559",
    "end": "3183839"
  },
  {
    "text": "uh spring boots things like that it is basically just one line of uh of uh",
    "start": "3183839",
    "end": "3191760"
  },
  {
    "text": "in most cases one line of application properties or some sort of",
    "start": "3191760",
    "end": "3197359"
  },
  {
    "text": "properties that you have to set and it will generate the json and yaml for you so open api is very unique in that a lot",
    "start": "3197359",
    "end": "3204400"
  },
  {
    "text": "of tooling already exists for it that will help you not have to spend a lot of a lot of",
    "start": "3204400",
    "end": "3210079"
  },
  {
    "text": "development effort but what he buys us as a specification is is really the fact that what would you",
    "start": "3210079",
    "end": "3216800"
  },
  {
    "text": "rather have a workflow definition that is not portable or a workflow definition that",
    "start": "3216800",
    "end": "3221920"
  },
  {
    "text": "is and i think that's what we need to decide because using open ipr allows us as a specification to say we are indeed",
    "start": "3221920",
    "end": "3229200"
  },
  {
    "text": "portable for for service uh definitions and and then they're in for",
    "start": "3229200",
    "end": "3234839"
  },
  {
    "text": "invocations um and that's the trade-off that i want to that i want to make a decision on with",
    "start": "3234839",
    "end": "3239920"
  },
  {
    "text": "you guys if possible can we think of like uh like i don't know from a market perspective like",
    "start": "3239920",
    "end": "3245040"
  },
  {
    "text": "what the 80 20 on this is like as a and as a function developer is like 80",
    "start": "3245040",
    "end": "3252160"
  },
  {
    "text": "of the time i'm gonna require uh these like open api seems to me like an",
    "start": "3252160",
    "end": "3258640"
  },
  {
    "text": "advanced use case right and i i don't know if that's true but it just seems to me",
    "start": "3258640",
    "end": "3264720"
  },
  {
    "text": "like is that something um do we want to force that upon everybody or can we think of something like uh the",
    "start": "3264720",
    "end": "3271440"
  },
  {
    "text": "current method as like a quick start uh that can solve most of the use cases",
    "start": "3271440",
    "end": "3277200"
  },
  {
    "text": "for function invocations or do we think that for every use case or function",
    "start": "3277200",
    "end": "3283760"
  },
  {
    "text": "invocation that we need to ask the function or the workflow developer to write an open api spec",
    "start": "3283760",
    "end": "3289680"
  },
  {
    "text": "as well yeah i don't know uh my take again sorry if anybody wants",
    "start": "3289680",
    "end": "3296400"
  },
  {
    "text": "to speak up please do but my take is again we are working on a specification we're",
    "start": "3296400",
    "end": "3301680"
  },
  {
    "text": "not working on a in-house project the problem we're going to run into is",
    "start": "3301680",
    "end": "3306880"
  },
  {
    "text": "uh tomorrow let's say somebody wants to use this specification but google ads",
    "start": "3306880",
    "end": "3311920"
  },
  {
    "text": "or anybody really out there adds a parameter that they specifically need that we",
    "start": "3311920",
    "end": "3317280"
  },
  {
    "text": "can only add in the next version and then so they cannot use our markup they will go",
    "start": "3317280",
    "end": "3322400"
  },
  {
    "text": "to google same thing again somebody is going to have something that we don't and it again",
    "start": "3322400",
    "end": "3327760"
  },
  {
    "text": "is all proprietary and in-house definitions if it's not open api again the point of",
    "start": "3327760",
    "end": "3334559"
  },
  {
    "text": "my talk here is let's use specification based stuff and we can never replicate for",
    "start": "3334559",
    "end": "3339839"
  },
  {
    "text": "example what opid api does and if we have use cases where",
    "start": "3339839",
    "end": "3345440"
  },
  {
    "text": "this is really why we use cloud events we don't really want to create another event format so we said",
    "start": "3345440",
    "end": "3351359"
  },
  {
    "text": "let's use the specifications same thing with function definitions the service definitions is let's use specifications",
    "start": "3351359",
    "end": "3358000"
  },
  {
    "text": "for that because that really allow us to grow uh a lot more than for example markups that",
    "start": "3358000",
    "end": "3365200"
  },
  {
    "text": "uh uh focus on in-house or proprietary definitions for this i mean it might be",
    "start": "3365200",
    "end": "3372640"
  },
  {
    "text": "worthwhile having a um an inline version of the definition",
    "start": "3372640",
    "end": "3378240"
  },
  {
    "text": "to uh and there might be another use of this type field is to say okay well yes you know ideally you should have an a an",
    "start": "3378240",
    "end": "3385440"
  },
  {
    "text": "existing open api that you can get it from or maybe you can host a copy of that yourself if if one's not available",
    "start": "3385440",
    "end": "3391680"
  },
  {
    "text": "but you might make for a nice you know compact example if we had an inline format as well that people could use",
    "start": "3391680",
    "end": "3398240"
  },
  {
    "text": "if if you guys are developing a runtime where you simply say no we don't want to use this",
    "start": "3398240",
    "end": "3404240"
  },
  {
    "text": "you can still use the metadata section of the function definition to really put in there anything you possibly want",
    "start": "3404240",
    "end": "3410880"
  },
  {
    "text": "that is fair game and you can adjust your runtime um which i think we're doing actually",
    "start": "3410880",
    "end": "3416880"
  },
  {
    "text": "going to do a little bit of that also within within red hat and also uh ricardo tell me if i'm wrong but uh",
    "start": "3416880",
    "end": "3424079"
  },
  {
    "text": "we also looking at metadata to inject further information uh that is specific to our runtime but",
    "start": "3424079",
    "end": "3430799"
  },
  {
    "text": "just on the specification level itself we cannot consider those types of um",
    "start": "3430799",
    "end": "3437920"
  },
  {
    "text": "workflow definitions portable right i mean am i wrong you guys tell me i really like the open",
    "start": "3437920",
    "end": "3444559"
  },
  {
    "text": "api spec and first class support for it i guess what i'm worried about is removing the the type field which",
    "start": "3444559",
    "end": "3451680"
  },
  {
    "text": "seems like it it requires the use of open api spec",
    "start": "3451680",
    "end": "3457440"
  },
  {
    "text": "for for all functions where um i guess i'm worried that there are use cases that they're not where the interaction isn't",
    "start": "3457440",
    "end": "3464799"
  },
  {
    "text": "restful and so any open api spec being required would be confusing to users of the definition",
    "start": "3464799",
    "end": "3472720"
  },
  {
    "text": "all right so i think that that's two people i think manuel also said the same thing so one of the things maybe to to move",
    "start": "3472720",
    "end": "3479680"
  },
  {
    "text": "towards this implementation is let's put back the type parameter which is again to",
    "start": "3479680",
    "end": "3484880"
  },
  {
    "text": "everybody a string that basically runtimes can put in their own identification or further description of of the type of",
    "start": "3484880",
    "end": "3492160"
  },
  {
    "text": "service they want to invoke to make sense for their runtime",
    "start": "3492160",
    "end": "3496960"
  },
  {
    "text": "yeah i agree with it with this as well because let's say that they they they wish to",
    "start": "3497680",
    "end": "3502720"
  },
  {
    "text": "invoke a soap service for instance how they did that yeah then you know they they might use",
    "start": "3502720",
    "end": "3508640"
  },
  {
    "text": "the wsdl they are very old-school uh yeah i guess that makes sense having",
    "start": "3508640",
    "end": "3514559"
  },
  {
    "text": "the type parameter and we can even um assume a default type parameter being",
    "start": "3514559",
    "end": "3522079"
  },
  {
    "text": "an open api definition for instance i don't know maybe something like that and then if you want change you just you",
    "start": "3522079",
    "end": "3527200"
  },
  {
    "text": "know type your own type parameter and interpret that in a way that you that you can um",
    "start": "3527200",
    "end": "3533599"
  },
  {
    "text": "do your thing but again won't be portable because uh we are looking for you know portability as well so you can you can",
    "start": "3533599",
    "end": "3540559"
  },
  {
    "text": "port uh part your workflow from from one runtime to another and then if you use a",
    "start": "3540559",
    "end": "3545920"
  },
  {
    "text": "proprietary type you won't be able to do that so that's that could be reinforced",
    "start": "3545920",
    "end": "3551599"
  },
  {
    "text": "in the in the specification as well",
    "start": "3551599",
    "end": "3558720"
  },
  {
    "text": "regarding http i think in the generic http method we ran into issues of how to",
    "start": "3558720",
    "end": "3565280"
  },
  {
    "text": "encode the query parameter to a url the authorization header fields or",
    "start": "3565280",
    "end": "3572319"
  },
  {
    "text": "potentially additional headers to be sent the structure of the body right because",
    "start": "3572319",
    "end": "3578960"
  },
  {
    "text": "the encoding of the body wasn't clear from the function call um",
    "start": "3578960",
    "end": "3584559"
  },
  {
    "text": "if there was some write-up um i don't know i'm thinking about",
    "start": "3584559",
    "end": "3590559"
  },
  {
    "text": "following the google example um we we could have a type",
    "start": "3590559",
    "end": "3595760"
  },
  {
    "text": "http that would still allow a generic adaptation right",
    "start": "3595760",
    "end": "3603039"
  },
  {
    "text": "zoicaro would you rather switch to open api completely use the tooling to generate",
    "start": "3604319",
    "end": "3611760"
  },
  {
    "text": "specs for function development so i don't know i know you",
    "start": "3611760",
    "end": "3617839"
  },
  {
    "text": "guys work a little in java um if it's probably like back",
    "start": "3617839",
    "end": "3622880"
  },
  {
    "text": "in the wsdl times you wouldn't run the full specification eventually you end up annotating your code",
    "start": "3622880",
    "end": "3630160"
  },
  {
    "text": "and you have all the specification created through tooling so a similar thing you could do with",
    "start": "3630160",
    "end": "3636079"
  },
  {
    "text": "open api but for somebody who just steps in i agree here it would",
    "start": "3636079",
    "end": "3642000"
  },
  {
    "text": "be a really a lot of effort um describing the api",
    "start": "3642000",
    "end": "3648400"
  },
  {
    "text": "open api spec first in order to be able to use any workflow engine to make some",
    "start": "3648400",
    "end": "3653680"
  },
  {
    "text": "calls so something that just generically calls an http endpoint um makes it still sense to me",
    "start": "3653680",
    "end": "3662079"
  },
  {
    "text": "i know a lot of people who still implement services that way because they want to type up",
    "start": "3662079",
    "end": "3668160"
  },
  {
    "text": "something quick so if we had a type http",
    "start": "3668160",
    "end": "3675040"
  },
  {
    "text": "and probably with some predefined metadata on the method headers",
    "start": "3675040",
    "end": "3682160"
  },
  {
    "text": "body and whatever is still in is is like in the google example um would you support it",
    "start": "3682160",
    "end": "3690000"
  },
  {
    "text": "to edit to the specification or is that a no-go because uh there is not enough validation in it",
    "start": "3690000",
    "end": "3697280"
  },
  {
    "text": "this is hard to to answer uh well from from a runtime implementation",
    "start": "3697280",
    "end": "3705839"
  },
  {
    "text": "perspective i'd say that uh doesn't matter uh if it is cam come from an open api or",
    "start": "3705839",
    "end": "3713119"
  },
  {
    "text": "directly from the spec and the code base would be the same uh but i have mixed feelings about this",
    "start": "3713119",
    "end": "3721440"
  },
  {
    "text": "because uh you know [Music] on",
    "start": "3721440",
    "end": "3726799"
  },
  {
    "text": "we we can we can have that uh using the only the open api and then leave uh every every every",
    "start": "3726799",
    "end": "3733920"
  },
  {
    "text": "standard of defining how to call an http restful service to the open api and that's it",
    "start": "3733920",
    "end": "3739200"
  },
  {
    "text": "because this is the standard today everyone's doing that there's a lot of tooling like uh jiho said um to work with swagger for",
    "start": "3739200",
    "end": "3746559"
  },
  {
    "text": "instance you can you know any java application can you can generate that you know quite quite quite quite quick and for go",
    "start": "3746559",
    "end": "3753520"
  },
  {
    "text": "as well it is basically the same thing um but at the same time i understand",
    "start": "3753520",
    "end": "3759760"
  },
  {
    "text": "that we understand that we can we can have uh lots of people you know seeking for the the the the specification just to",
    "start": "3759760",
    "end": "3768400"
  },
  {
    "text": "call simple service and then they do not have the the open api um defined and",
    "start": "3768400",
    "end": "3776160"
  },
  {
    "text": "for that i'd say that they they should use their own metadata and do their stuff in there and you know",
    "start": "3776160",
    "end": "3782319"
  },
  {
    "text": "the runtime just supposed to to support that because would be a how to maintain the",
    "start": "3782319",
    "end": "3788559"
  },
  {
    "text": "specification in order to align with the open api",
    "start": "3788559",
    "end": "3794160"
  },
  {
    "text": "maybe so uh like the the issue that i opened to classify the parameters when calling a http",
    "start": "3794160",
    "end": "3801680"
  },
  {
    "text": "service being a rest or not um we are basically doing the same job",
    "start": "3801680",
    "end": "3808960"
  },
  {
    "text": "that open api is doing so in my opinion it should be a no-go i'd say that",
    "start": "3808960",
    "end": "3814319"
  },
  {
    "text": "we should only have the type open api defined by default and this is uh if you do not uh define a type just",
    "start": "3814319",
    "end": "3821920"
  },
  {
    "text": "be will be open api because it is wide used used by everyone in the industry and you",
    "start": "3821920",
    "end": "3828079"
  },
  {
    "text": "know and uh we can rely on the standards of the open api and this and for rest for rest for",
    "start": "3828079",
    "end": "3836319"
  },
  {
    "text": "you know called this kind of services and for atp uh i'd say that the implement you should",
    "start": "3836319",
    "end": "3843359"
  },
  {
    "text": "decide uh how to if they would support that or not",
    "start": "3843359",
    "end": "3849599"
  },
  {
    "text": "okay i have to still learn a little bit more about open api thanks um i had one",
    "start": "3850720",
    "end": "3857280"
  },
  {
    "text": "question uh still because uh tma you mentioned once or twice that uh authorization is",
    "start": "3857280",
    "end": "3863760"
  },
  {
    "text": "uh open api would give us a also give us a specification of how to",
    "start": "3863760",
    "end": "3869200"
  },
  {
    "text": "authenticate with the service um and i was thinking about some messy",
    "start": "3869200",
    "end": "3875520"
  },
  {
    "text": "proprietary authentication methods that i've come across and how they would be supported uh or if",
    "start": "3875520",
    "end": "3883440"
  },
  {
    "text": "they could be supported generating an open api spec so i get a definition so um how",
    "start": "3883440",
    "end": "3890400"
  },
  {
    "text": "how versatile is it to have um let's say random headers added to the request",
    "start": "3890400",
    "end": "3900160"
  },
  {
    "text": "the the actual headers you can define them all in your open api thing so again that would",
    "start": "3901520",
    "end": "3907039"
  },
  {
    "text": "offload that for us as well but again you can use metadata i think metadata in a way because it's",
    "start": "3907039",
    "end": "3914000"
  },
  {
    "text": "not uh really ex provides execution semantics",
    "start": "3914000",
    "end": "3919039"
  },
  {
    "text": "you can you can add all the headers extra headers you want and again you have to be kind",
    "start": "3919039",
    "end": "3924799"
  },
  {
    "text": "of cautious is disportable now in 99 of the cases i understand for everybody probably even here portability is not",
    "start": "3924799",
    "end": "3933599"
  },
  {
    "text": "really a big issue again you look at more work created by this rather than not but we",
    "start": "3933599",
    "end": "3940160"
  },
  {
    "text": "we have to understand again we're working on a on the specification itself and one of the most important thing that",
    "start": "3940160",
    "end": "3945440"
  },
  {
    "text": "we're trying to distinguish ourselves from from from all the other workflow markups out there",
    "start": "3945440",
    "end": "3951119"
  },
  {
    "text": "is this portability issue and vendor neutrality and that i think that for us has to be kind",
    "start": "3951119",
    "end": "3956559"
  },
  {
    "text": "of like embedded in a and i i have a hard time with that as well um to kind of look at this from",
    "start": "3956559",
    "end": "3961920"
  },
  {
    "text": "that perspective more and more than anything else uh yeah it i i fully understand",
    "start": "3961920",
    "end": "3967440"
  },
  {
    "text": "that doing this uh might limit the users actually of what what you're doing because like",
    "start": "3967440",
    "end": "3973119"
  },
  {
    "text": "you guys all said it might be much faster and easier just to hardcore than http url in there",
    "start": "3973119",
    "end": "3978480"
  },
  {
    "text": "but at the same time uh then you run into the same problems uh",
    "start": "3978480",
    "end": "3984079"
  },
  {
    "text": "that we're trying to solve as a specification right so so that's that's one thing like why",
    "start": "3984079",
    "end": "3990240"
  },
  {
    "text": "why it doesn't prevent all sort of users in the event definitions to",
    "start": "3990240",
    "end": "3995359"
  },
  {
    "text": "to to use the proprietary event formatting right on the on the runtime either but we recommend using the cloud event",
    "start": "3995359",
    "end": "4002240"
  },
  {
    "text": "format as well so so that i think distinguishes us from from from other",
    "start": "4002240",
    "end": "4007920"
  },
  {
    "text": "uh workflow markups out there they're popping up every week it seems uh and i think that's a positive but",
    "start": "4007920",
    "end": "4014960"
  },
  {
    "text": "yeah um i'm all a fan i'm really a fan of open api to seven yeah and if there is a better",
    "start": "4014960",
    "end": "4021920"
  },
  {
    "text": "to learn about it if there is the reason we picked it is because like",
    "start": "4021920",
    "end": "4027520"
  },
  {
    "text": "ricardo said there is a standard out there um if there is other ones for for for non-http based",
    "start": "4027520",
    "end": "4034319"
  },
  {
    "text": "let's use that but one of the things i think that's important for us to be specification",
    "start": "4034319",
    "end": "4039359"
  },
  {
    "text": "based right and and let's just pick the best one uh that i think no sure i brought it up",
    "start": "4039359",
    "end": "4045920"
  },
  {
    "text": "several times the only thing i wasn't sure about if it fully covers the features of a generic",
    "start": "4045920",
    "end": "4052960"
  },
  {
    "text": "http request so the security information and so on that would also go into the parameters then yeah it also it also",
    "start": "4052960",
    "end": "4060799"
  },
  {
    "text": "solves the for example the cases that we we we discussed with argo recently about web",
    "start": "4060799",
    "end": "4066000"
  },
  {
    "text": "hooks it also deals with callbacks as well so there's a lot of use cases that we",
    "start": "4066000",
    "end": "4071440"
  },
  {
    "text": "really don't have to specify on our own and have to work with in",
    "start": "4071440",
    "end": "4076559"
  },
  {
    "text": "order to to make uh users happy so in a way creates more works which",
    "start": "4076559",
    "end": "4082799"
  },
  {
    "text": "work for our users uh which might limit the adoption but the same way i think the inclusion of of of on",
    "start": "4082799",
    "end": "4090319"
  },
  {
    "text": "runtimes and users uh especially the people writing the runtimes i think this is a huge step up",
    "start": "4090319",
    "end": "4095680"
  },
  {
    "text": "for them i kind of wonder i know we're a bit going a bit over time now the um the example you gave before about the",
    "start": "4095680",
    "end": "4103359"
  },
  {
    "text": "wikipedia api you know you've got to pass this um i think it's open search",
    "start": "4103359",
    "end": "4108640"
  },
  {
    "text": "action parameter every time the way that we previously described that you'd have to put that inside every",
    "start": "4108640",
    "end": "4115040"
  },
  {
    "text": "function every indication definition it may make sense to have some kind of a",
    "start": "4115040",
    "end": "4120318"
  },
  {
    "text": "like a mapping on top of the open api to say well i'm just i'm not just calling you know generic wikipedia api and you",
    "start": "4120319",
    "end": "4127440"
  },
  {
    "text": "know passing through my parameters but saying okay well for this function definition i always want to",
    "start": "4127440",
    "end": "4132880"
  },
  {
    "text": "do the search and then you've only got one parameter that people will then pass to that function",
    "start": "4132880",
    "end": "4139440"
  },
  {
    "text": "if you're following me that's a nice thought yeah to have pre-customized uh function calls",
    "start": "4139520",
    "end": "4146640"
  },
  {
    "text": "here pre-filled headers oh yeah you wouldn't want to have to repeat that",
    "start": "4146640",
    "end": "4152719"
  },
  {
    "text": "everywhere hey open up an issue for that i would",
    "start": "4152719",
    "end": "4157758"
  },
  {
    "text": "love to to to to work with you guys with that as well",
    "start": "4157759",
    "end": "4162960"
  },
  {
    "text": "all right so if i i mean what did you guys think",
    "start": "4166400",
    "end": "4172719"
  },
  {
    "text": "overall because this is a kind of like first deep dive but it's a pretty hard one because we introduced a",
    "start": "4172719",
    "end": "4177758"
  },
  {
    "text": "big change in the next ones the way i think it was intended just to talk about what we have i think uh two things if if",
    "start": "4177759",
    "end": "4186080"
  },
  {
    "text": "you guys don't mind either in chat or this week or in the next two weeks in our um",
    "start": "4186080",
    "end": "4191199"
  },
  {
    "text": "in our our team chat if you don't mind like writing what would you like to see discuss next",
    "start": "4191199",
    "end": "4197360"
  },
  {
    "text": "um so let's pick a topic for for our next deep dive or anything else you want to talk about",
    "start": "4197360",
    "end": "4204000"
  },
  {
    "text": "also the same thing is like if any of you guys would be willing uh to lead this type of discussion for",
    "start": "4204000",
    "end": "4210080"
  },
  {
    "text": "the next time please step up i it would be really nice",
    "start": "4210080",
    "end": "4215440"
  },
  {
    "text": "if i wasn't always the one talking about this stuff of course i can if you guys want me to",
    "start": "4215440",
    "end": "4220800"
  },
  {
    "text": "but if anybody of you would like to take a section of the specification and talk about it to",
    "start": "4220800",
    "end": "4226480"
  },
  {
    "text": "everybody um and and have a discussion that will be great too so yeah",
    "start": "4226480",
    "end": "4233119"
  },
  {
    "text": "hey thanks to mia for leading the discussion today uh was sorry okay say the same thing",
    "start": "4237040",
    "end": "4243679"
  },
  {
    "text": "this was really useful thank you we should yeah we should be doing more of these deep dives yeah i really enjoy it as well uh i i",
    "start": "4243679",
    "end": "4250400"
  },
  {
    "text": "left some some comments in the pr about the the this definition you if we open it price so we can i",
    "start": "4250400",
    "end": "4257600"
  },
  {
    "text": "believe talk in there and the pr itself um because we are on top of the hour i don't know if we have any more time to",
    "start": "4257600",
    "end": "4264000"
  },
  {
    "text": "discuss anything",
    "start": "4264000",
    "end": "4266719"
  },
  {
    "text": "okay thank you guys so much for your comments and your time uh to join and listen to all this and",
    "start": "4271040",
    "end": "4276719"
  },
  {
    "text": "yeah hope to see you guys again next time thank you enjoy it bye cheers",
    "start": "4276719",
    "end": "4287840"
  },
  {
    "text": "you",
    "start": "4290159",
    "end": "4292239"
  }
]