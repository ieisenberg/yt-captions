[
  {
    "text": "hello everybody we are going to talk about how to achieve and maintain a healthy CI with cedo test flakes what C",
    "start": "80",
    "end": "8000"
  },
  {
    "text": "can be an exaggeration but in the long term it is my name is Antonio o I work",
    "start": "8000",
    "end": "13759"
  },
  {
    "text": "at Google inl in s testing and hi I'm Michelle sheperson I am a uh",
    "start": "13759",
    "end": "21160"
  },
  {
    "text": "senior software engineer at Google and a chair of sick testingair testing hi I'm Benjamin aler uh I'm a",
    "start": "21160",
    "end": "28760"
  },
  {
    "text": "chair of sick testing infra and I'm on the kuber steering committee okay okay let's let's",
    "start": "28760",
    "end": "37800"
  },
  {
    "text": "uh understand what is the problem we're going to talk about right FL it is that's the worst nightmare of every",
    "start": "37800",
    "end": "45280"
  },
  {
    "text": "project maintainer every developer or we have dreams with that right F test",
    "start": "45280",
    "end": "52840"
  },
  {
    "text": "is it passes sometimes other times doesn't pass and there are several",
    "start": "52840",
    "end": "58800"
  },
  {
    "text": "combination of f right and several causes of flck test there can be",
    "start": "58800",
    "end": "64960"
  },
  {
    "text": "environment problems because our infra is overwhelming and sometimes there can",
    "start": "64960",
    "end": "70080"
  },
  {
    "text": "be that the test is lazy especially you are using goang go routines and channels",
    "start": "70080",
    "end": "75799"
  },
  {
    "text": "and all this unlocks uh you know what I'm talking about right",
    "start": "75799",
    "end": "83000"
  },
  {
    "text": "and the main problem is if it's flecky my Cod is it good or is it but and",
    "start": "83000",
    "end": "91479"
  },
  {
    "text": "that's the the question that we make ourselves before the release can we release this uh project with all this",
    "start": "91479",
    "end": "99360"
  },
  {
    "text": "test flaking or not our answer for that is clear no you",
    "start": "99360",
    "end": "105040"
  },
  {
    "text": "cannot but how we achieve this well let's first",
    "start": "105119",
    "end": "110640"
  },
  {
    "text": "understand better how kubernetes Project work right kubernetes uh project has a",
    "start": "110640",
    "end": "117000"
  },
  {
    "text": "group uh special interest groups that can be horizontal or vertical",
    "start": "117000",
    "end": "123640"
  },
  {
    "text": "horizontal means that the scope is across different areas and vertical means that they own some a specific area",
    "start": "123640",
    "end": "131680"
  },
  {
    "text": "right SE testing usually people that comes to the project comes with the mapping of their",
    "start": "131680",
    "end": "138000"
  },
  {
    "text": "Enterprises or companies or or organization and assume that se",
    "start": "138000",
    "end": "145120"
  },
  {
    "text": "testing is the quality team well H spoiler alert it is not see testing is",
    "start": "145120",
    "end": "151360"
  },
  {
    "text": "not about helping the other teams to write the test or review the test no",
    "start": "151360",
    "end": "157599"
  },
  {
    "text": "it's in kubernetes every s owns their Cod owns their area and is in charge of",
    "start": "157599",
    "end": "163480"
  },
  {
    "text": "collaborating with the other SS and understand the other six the goal of SE testing is provide the tooling provide",
    "start": "163480",
    "end": "170239"
  },
  {
    "text": "the help provide the experience and this is how in kubernetes we",
    "start": "170239",
    "end": "177200"
  },
  {
    "text": "collaborate each others to be able to achieve a uh a cedo flake policy we",
    "start": "177200",
    "end": "182760"
  },
  {
    "text": "implemented the we also wrote down in our documentation that we have a c flake",
    "start": "182760",
    "end": "188239"
  },
  {
    "text": "policies I think it was last year or something like that so there is a big commitment in each SE to not not allow",
    "start": "188239",
    "end": "198080"
  },
  {
    "text": "flakes so how can you achieve that one of the common misconceptions is to invest in",
    "start": "199519",
    "end": "205760"
  },
  {
    "text": "only in testing invest in only one area right and uh um this is is problematic",
    "start": "205760",
    "end": "213439"
  },
  {
    "text": "because then this create fragmentation and creat more Ro focused people right I",
    "start": "213439",
    "end": "219840"
  },
  {
    "text": "do the F you do the test and the other people review the risk and this is another part that we are strongly",
    "start": "219840",
    "end": "227400"
  },
  {
    "text": "against this is as we said before we we base our development in solidarity and",
    "start": "227400",
    "end": "233319"
  },
  {
    "text": "the person there are person with more skills to do one things and person to do skills for other thing and",
    "start": "233319",
    "end": "240560"
  },
  {
    "text": "the if we are able to collaborate and use these complementary skills we",
    "start": "240560",
    "end": "247799"
  },
  {
    "text": "achieve a perfect sofware product uh with C flakes so when you are developing",
    "start": "247799",
    "end": "255560"
  },
  {
    "text": "something it everything starts at the at the design level and that's when we have",
    "start": "255560",
    "end": "261239"
  },
  {
    "text": "the cap a lot of people complain about the cap this is a lot of bureaucracy I",
    "start": "261239",
    "end": "266280"
  },
  {
    "text": "have a lot of new picking whatever right but the thing is this is the bar that we want to have we",
    "start": "266280",
    "end": "273120"
  },
  {
    "text": "need to understand what you want to achieve with kubernetes we need to understand how this is going to influence the other the other components",
    "start": "273120",
    "end": "280360"
  },
  {
    "text": "it's not that you do a caping S network and you don't talk with talk with C Machinery we need to be aware that what",
    "start": "280360",
    "end": "287680"
  },
  {
    "text": "you are going to implement works and you don't have the full contest so that's",
    "start": "287680",
    "end": "293479"
  },
  {
    "text": "why there are people with more content that is going to ask you these tough questions then during this cap we also",
    "start": "293479",
    "end": "302120"
  },
  {
    "text": "ask how are you going to test this how is this going to work how are you going",
    "start": "302120",
    "end": "307880"
  },
  {
    "text": "to deal with upgrades these are type questions but it's important because",
    "start": "307880",
    "end": "313000"
  },
  {
    "text": "this is going to influence your feat it's going to influence your design",
    "start": "313000",
    "end": "319039"
  },
  {
    "text": "and the other this is just an Inception right then you go to the development",
    "start": "319039",
    "end": "324600"
  },
  {
    "text": "cycle you go to the code reviews and then we reach the time that it is",
    "start": "324600",
    "end": "330240"
  },
  {
    "text": "released it is working what is the another important",
    "start": "330240",
    "end": "335400"
  },
  {
    "text": "step that you that you in a project as a maintainer need to to have it's a strong policy for",
    "start": "335400",
    "end": "341680"
  },
  {
    "text": "backport because there is a strong contention point because people don't want to upgrade so what they want is to",
    "start": "341680",
    "end": "348280"
  },
  {
    "text": "start to get all the features down to the release branches we have a very",
    "start": "348280",
    "end": "353319"
  },
  {
    "text": "strong policy in in vort we only vort regressions critical fixing test and we",
    "start": "353319",
    "end": "361680"
  },
  {
    "text": "all go ask for a test because if this happened why we didn't why we Wen able",
    "start": "361680",
    "end": "368240"
  },
  {
    "text": "to to to see this problem right then we need to put a test so it it never happen",
    "start": "368240",
    "end": "376240"
  },
  {
    "text": "again and well this is more about software development and and",
    "start": "376479",
    "end": "383440"
  },
  {
    "text": "philosophy but that is the time that you did",
    "start": "383440",
    "end": "388639"
  },
  {
    "text": "everything well but still you have flaky test how do you how do",
    "start": "388639",
    "end": "394360"
  },
  {
    "text": "you address this problem right so one important thing is how do you",
    "start": "394360",
    "end": "401319"
  },
  {
    "text": "develop your test there are these kind of test that test 200 things at the same time so when something fails it can be",
    "start": "401319",
    "end": "408319"
  },
  {
    "text": "200 things plus the one that you don't know so it's important that that you make your test independent right what",
    "start": "408319",
    "end": "415479"
  },
  {
    "text": "I'm testing what I want to be sure that that what I want to assert or not to",
    "start": "415479",
    "end": "421199"
  },
  {
    "text": "assert right can be negative testing so design your test as you design your code",
    "start": "421199",
    "end": "427400"
  },
  {
    "text": "you need to get the the right attraction you need to get the right test with the",
    "start": "427400",
    "end": "433199"
  },
  {
    "text": "right uh goals so another important thing that is always I",
    "start": "433199",
    "end": "440960"
  },
  {
    "text": "wouldn't say always but is commonly neglected is the infra word the test R right we have have actions and we",
    "start": "440960",
    "end": "448199"
  },
  {
    "text": "start to add this and suddenly oh this doesn't work it's super low of course you are consuming all the course of the",
    "start": "448199",
    "end": "454639"
  },
  {
    "text": "CPU infrastructure is important it has to work you need to monitor where the test are running you need to understand",
    "start": "454639",
    "end": "462840"
  },
  {
    "text": "what are the expectation on your testing you need to also time to run your test",
    "start": "462840",
    "end": "469360"
  },
  {
    "text": "fast right you need to have a good strategy to say I want to be able to",
    "start": "469360",
    "end": "474680"
  },
  {
    "text": "match with uh certain certain assurance that my code",
    "start": "474680",
    "end": "480080"
  },
  {
    "text": "code is is correct but I also want to merch fast if you need to send a PO",
    "start": "480080",
    "end": "486280"
  },
  {
    "text": "request and you take like one day to get the results that's terrible for the development impact so a good testing",
    "start": "486280",
    "end": "493240"
  },
  {
    "text": "strategy based on pramit periodic jobs and monitoring Michelle and Ben are",
    "start": "493240",
    "end": "500199"
  },
  {
    "text": "going to talk about the touring later is is really important",
    "start": "500199",
    "end": "506199"
  },
  {
    "text": "and I don't know common lesson learns that we have from",
    "start": "506199",
    "end": "514000"
  },
  {
    "text": "working in in kubernetes is is and common problems are timing issues race",
    "start": "514000",
    "end": "519880"
  },
  {
    "text": "conditions dependencies this you can put a lot of effort during the development but these",
    "start": "519880",
    "end": "526839"
  },
  {
    "text": "are hard to know we have [Music] some how can I say some snippet um",
    "start": "526839",
    "end": "534480"
  },
  {
    "text": "documentation that will help you to to to identify this problem right we have a",
    "start": "534480",
    "end": "540920"
  },
  {
    "text": "way to run stress test so you run the test multiple times in parallel to",
    "start": "540920",
    "end": "546399"
  },
  {
    "text": "identify races is also Golan has a nice race detector that allows you to compile",
    "start": "546399",
    "end": "552600"
  },
  {
    "text": "the test binary so it detect all the races so you need to to invest in the tooling",
    "start": "552600",
    "end": "558160"
  },
  {
    "text": "too and well with this I just want to I think",
    "start": "558160",
    "end": "564680"
  },
  {
    "text": "that this is my okay I want to say that you need to sum all these things and",
    "start": "564680",
    "end": "572200"
  },
  {
    "text": "encourage a a culture of quality this this picture is from Spain it's",
    "start": "572200",
    "end": "577839"
  },
  {
    "text": "aiaia aqu I don't know how to say in English the thing is is is something that the Romans build like I don't know",
    "start": "577839",
    "end": "584800"
  },
  {
    "text": "how many years ago 300 without concrete without anything and stones to for other",
    "start": "584800",
    "end": "590279"
  },
  {
    "text": "Stone and it's still standing in the center of the city so you are able to",
    "start": "590279",
    "end": "595839"
  },
  {
    "text": "build this culture of quality that every developer every person in the project is able to talk with each other it's able",
    "start": "595839",
    "end": "601880"
  },
  {
    "text": "to put this emphasis during the development to say this is not going to fail forget about production ready I had",
    "start": "601880",
    "end": "609160"
  },
  {
    "text": "this question during this this cuon is your code production ready everything",
    "start": "609160",
    "end": "614320"
  },
  {
    "text": "kubernetes has to be produ ready what's production ready are you doing to development for something that is not",
    "start": "614320",
    "end": "620320"
  },
  {
    "text": "produ ready we need to build this culture in the organization and once you build this",
    "start": "620320",
    "end": "627279"
  },
  {
    "text": "culture everything will start to get better better well yes uh now I H I'm going to",
    "start": "627279",
    "end": "636240"
  },
  {
    "text": "talk also to how do you build this right you need to have a infrastructure you",
    "start": "636240",
    "end": "642959"
  },
  {
    "text": "need to have Pro you need to have tooling and these are the things that we are building in the community in testing",
    "start": "642959",
    "end": "648959"
  },
  {
    "text": "to help the the project and Michelle now is going to take over and talk more about",
    "start": "648959",
    "end": "655560"
  },
  {
    "text": "this yeah hey folks so k project has a few things that are built under s",
    "start": "655560",
    "end": "661880"
  },
  {
    "text": "testing and some other areas to kind of help tackle flakes so let's start off",
    "start": "661880",
    "end": "667360"
  },
  {
    "text": "actually with where you're commonly encountering these as a developer so there's a few types of jobs that",
    "start": "667360",
    "end": "674680"
  },
  {
    "text": "commonly run for tests uh you might see these on your uh PRS pre Summits these",
    "start": "674680",
    "end": "679920"
  },
  {
    "text": "are usually going to be things like the unit test or other things that are blocking submission so if you're a developer and you're seeing failures",
    "start": "679920",
    "end": "686079"
  },
  {
    "text": "here it's usually a oh I'm not going to be able to submit my code let me take a look at what's actually happening here",
    "start": "686079",
    "end": "692040"
  },
  {
    "text": "you can also see these in a few other places with things like post Summits things that run after your PR merges um",
    "start": "692040",
    "end": "697639"
  },
  {
    "text": "these are usually a little bit harder to spot because at this point your code's submitted so you're not necessarily",
    "start": "697639",
    "end": "703480"
  },
  {
    "text": "looking out for like did something else also happen afterwards and there's also periodics these are usually larger more",
    "start": "703480",
    "end": "710760"
  },
  {
    "text": "complex things that uh aren't tied to a particular PR but as it implies run periodically at a particular time so",
    "start": "710760",
    "end": "718279"
  },
  {
    "text": "again even harder to spot these aren't necessarily linked to anything you need something else in order to discover",
    "start": "718279",
    "end": "724560"
  },
  {
    "text": "what's happening with the periodics and then uh common thing for the pre submits you might go in and say",
    "start": "724560",
    "end": "731160"
  },
  {
    "text": "like oh my job failed let me go and take a look at the details of the logs or the artifacts in order to try and figure out",
    "start": "731160",
    "end": "737959"
  },
  {
    "text": "what happened here and what do I need to fix with my code so we get the",
    "start": "737959",
    "end": "744199"
  },
  {
    "text": "problem let's say that I've looked at the errors and it's uh not quite clear",
    "start": "744199",
    "end": "749360"
  },
  {
    "text": "is this actually due to my code or is this due to a flaky test um we need other Clues uh besides just the logs and",
    "start": "749360",
    "end": "755639"
  },
  {
    "text": "the artifacts to actually tell what is happening here so things like do I have some signal that these",
    "start": "755639",
    "end": "763040"
  },
  {
    "text": "kinds of failures have happened before if so where did they start are they affecting other jobs besides the one",
    "start": "763040",
    "end": "768560"
  },
  {
    "text": "that failed um in that case we have a few different things within the kubernetes project to kind of help",
    "start": "768560",
    "end": "773839"
  },
  {
    "text": "tackle these with different approaches so first up and actually a",
    "start": "773839",
    "end": "779199"
  },
  {
    "text": "pretty simple one to check what if I would just want to check if this uh job has been failing before well from the uh",
    "start": "779199",
    "end": "786600"
  },
  {
    "text": "from the links from the prmit for instance you get the uh logs in prow and then you can also go to the job history",
    "start": "786600",
    "end": "792639"
  },
  {
    "text": "just for a quick overview of all of the recent uh runs of that job um so easily",
    "start": "792639",
    "end": "798079"
  },
  {
    "text": "linked from the same place you're already looking for failures but as you can kind of tell limited on details it",
    "start": "798079",
    "end": "803399"
  },
  {
    "text": "will tell you what the status of the recent jobs are when it ran on what Etc",
    "start": "803399",
    "end": "808440"
  },
  {
    "text": "but it's not giving you you details of the actual failures without going into every single one of these individually",
    "start": "808440",
    "end": "814399"
  },
  {
    "text": "it's not telling you what tests failed um and it's not giving you the additional details you need to look further in if these things are actually",
    "start": "814399",
    "end": "821560"
  },
  {
    "text": "failing so let's say that we do have failing things what else what may look at for uh checking the job",
    "start": "821560",
    "end": "828959"
  },
  {
    "text": "history we could also look at a more overview um if we're looking for maybe",
    "start": "828959",
    "end": "834920"
  },
  {
    "text": "like a job is failing but I suspect that it might be related to something like your like infrastructure that I think",
    "start": "834920",
    "end": "841639"
  },
  {
    "text": "might be causing uh failures across maybe the whole project or maybe something more specific like a repo or",
    "start": "841639",
    "end": "847120"
  },
  {
    "text": "cluster in that case there's also the overview uh job status on prow showing all the recent uh history there's also",
    "start": "847120",
    "end": "854920"
  },
  {
    "text": "uh something that you can filter down and drill down into maybe I want to check if there's something wrong more",
    "start": "854920",
    "end": "861680"
  },
  {
    "text": "locally uh again kind of limited details you can go back into the like specific logs for these jobs but if you're doing",
    "start": "861680",
    "end": "868800"
  },
  {
    "text": "this for a ton of jobs at once this could be like a pretty slow manual",
    "start": "868800",
    "end": "874079"
  },
  {
    "text": "process so uh we get to test grid test grid has a visual history of the job uh history",
    "start": "874079",
    "end": "882399"
  },
  {
    "text": "um for a bunch of the running tests Etc uh the grid view makes it easy to map",
    "start": "882399",
    "end": "888759"
  },
  {
    "text": "the tests rows to the uh columns which are runs over time so for instance this",
    "start": "888759",
    "end": "894600"
  },
  {
    "text": "is a a view of the history of all the uh tests running in a particular job uh",
    "start": "894600",
    "end": "900160"
  },
  {
    "text": "over time um correlated with things like the time that they ran at the commits that they run under Etc um this makes it",
    "start": "900160",
    "end": "907360"
  },
  {
    "text": "really easy to spot patterns over time visually um it's dense and it's customizable to allow you to filter down",
    "start": "907360",
    "end": "915639"
  },
  {
    "text": "a grid either for the default view for all users or at the time and point that you're debugging to make it easy to have",
    "start": "915639",
    "end": "921920"
  },
  {
    "text": "lenses on uh that ad hoc debugging trying to figure out exactly what is a",
    "start": "921920",
    "end": "927279"
  },
  {
    "text": "root cause what are patterns that might want to investigate further into so for this",
    "start": "927279",
    "end": "933199"
  },
  {
    "text": "case oh actually in this case for instance we can see that there are um flakes happening we have things that are",
    "start": "933199",
    "end": "939480"
  },
  {
    "text": "not consistently a pass or fail um but we can also see uh a little bit hard to see in this particular screenshot but",
    "start": "939480",
    "end": "945240"
  },
  {
    "text": "it's things that are happening on the overall status of the job but not the tests running under them which is a pretty classic indication of a",
    "start": "945240",
    "end": "952920"
  },
  {
    "text": "flake um there's also a few other things that are in test grid I won't go over all the features but um different things",
    "start": "952920",
    "end": "958399"
  },
  {
    "text": "to trying to check the overall status of things at a glance to make it easier to drill into problems if you remember me",
    "start": "958399",
    "end": "965160"
  },
  {
    "text": "mentioning periodics before where it's hard to find uh exactly what's happening for instance this is a good place to",
    "start": "965160",
    "end": "970319"
  },
  {
    "text": "check um you don't have the status on like individual PR failures for instance",
    "start": "970319",
    "end": "975800"
  },
  {
    "text": "but you can get the out of glance status if you're trying to for instance monitor the health of the overall test of a Sig",
    "start": "975800",
    "end": "981360"
  },
  {
    "text": "or the project um has recent stats it also gives you a quick view of for instance particular test rows uh that",
    "start": "981360",
    "end": "988319"
  },
  {
    "text": "may have failed so yeah back to that example earlier we see that this one's flaky but for",
    "start": "988319",
    "end": "994680"
  },
  {
    "text": "overall and not for individual tests we also have this example which is",
    "start": "994680",
    "end": "1000480"
  },
  {
    "text": "flaky on the individual tests we can see a lot of like overall failures but there's also a lot of things that are",
    "start": "1000480",
    "end": "1006319"
  },
  {
    "text": "clearly runs that are passing or failing uh rapidly switching between like",
    "start": "1006319",
    "end": "1012040"
  },
  {
    "text": "individual runs um there's another common thing that I call out here just because it is",
    "start": "1012040",
    "end": "1018040"
  },
  {
    "text": "a pretty useful one for debugging here um there's a little hidden feature in test grade where you can also click and",
    "start": "1018040",
    "end": "1024319"
  },
  {
    "text": "drag between columns and that will open up on GI Hub the changes that have occurred between the two commits of",
    "start": "1024319",
    "end": "1030199"
  },
  {
    "text": "those runs so a common one for instance you're checking here where there's a clear boundary between all the Test",
    "start": "1030199",
    "end": "1035319"
  },
  {
    "text": "passing and then the test starting to flake um I could check the individual runs to try and see what happened or I",
    "start": "1035319",
    "end": "1041760"
  },
  {
    "text": "can start immediately with where I think might be the more useful place to investigate which is checking between that failing or that flaking and then",
    "start": "1041760",
    "end": "1048319"
  },
  {
    "text": "passing Colum and then getting all of the uh GitHub commits that happen between there to try and figure out exactly what happened",
    "start": "1048319",
    "end": "1054440"
  },
  {
    "text": "especially useful for things like the periodics where a particular run may have caught some or many commits um that",
    "start": "1054440",
    "end": "1062080"
  },
  {
    "text": "are a difference between the uh previous run and then yeah a lot of these are",
    "start": "1062080",
    "end": "1069400"
  },
  {
    "text": "talking about like looking at the test uh kind of monitoring um kind of a push",
    "start": "1069400",
    "end": "1074600"
  },
  {
    "text": "model um where you are looking at the test at a point in time but that's relying on you to like periodically",
    "start": "1074600",
    "end": "1081039"
  },
  {
    "text": "check in on the test yourselves um so what if I want to uh know when critical",
    "start": "1081039",
    "end": "1086280"
  },
  {
    "text": "things are failing or uh flaking well there's configurable alerts in test grid",
    "start": "1086280",
    "end": "1091880"
  },
  {
    "text": "to say like alert me when uh a tab starts getting uh failing rows um those",
    "start": "1091880",
    "end": "1097440"
  },
  {
    "text": "can be configured to also allow like it needs X number of passes in order to no longer be counted as a failing row and",
    "start": "1097440",
    "end": "1103960"
  },
  {
    "text": "then you can also get email alerts when that tab starts having failing rows um a good way for instance for uh a recent",
    "start": "1103960",
    "end": "1110480"
  },
  {
    "text": "thing that we actually did have to check which was a failure in Kettle one of the underlying uh tools for the next thing",
    "start": "1110480",
    "end": "1117080"
  },
  {
    "text": "I'll get to um but it's a good way to say like my S is invested in these",
    "start": "1117080",
    "end": "1122799"
  },
  {
    "text": "particular jobs or tests passing and I really want to make sure that we tackle it soon when we notice that that starts",
    "start": "1122799",
    "end": "1130919"
  },
  {
    "text": "failing and then lastly one of the other tools that is uh pretty critical here is triage so this is a clustered failure by",
    "start": "1131080",
    "end": "1139280"
  },
  {
    "text": "the failure message um you remember earlier we can go to the prow UI to get the logs for the um for the particular",
    "start": "1139280",
    "end": "1147080"
  },
  {
    "text": "failure in order to try and debug more triage gives an overview of the failures across a lot of the jobs basically all",
    "start": "1147080",
    "end": "1153919"
  },
  {
    "text": "of the jobs that have run recently um and similar to the uh overall view or the rest of these tools you can filter",
    "start": "1153919",
    "end": "1161320"
  },
  {
    "text": "by for instance Sig or other things in order to drill down into particular failures of",
    "start": "1161320",
    "end": "1167720"
  },
  {
    "text": "Interest and I think this is pretty illustrative of why a triage is super useful we have the summary of like the",
    "start": "1167720",
    "end": "1173520"
  },
  {
    "text": "particular status that happened here or the particular um failure message uh a kind of a idea of occurrences uh over",
    "start": "1173520",
    "end": "1180799"
  },
  {
    "text": "time and also recently and then we also have a a clear graph with when those",
    "start": "1180799",
    "end": "1186080"
  },
  {
    "text": "occurrences happen so we can see that it uh occasionally occurs something that uh",
    "start": "1186080",
    "end": "1191600"
  },
  {
    "text": "just might pop up in a test sometimes and then hit a sudden Spike on the fifth um and then we can also see actually",
    "start": "1191600",
    "end": "1198080"
  },
  {
    "text": "that um I believe somebody submitted a change around the time where the uh spikes went down resolving uh the flake",
    "start": "1198080",
    "end": "1204840"
  },
  {
    "text": "itself um also again links back to prow if you want to debug get a start here",
    "start": "1204840",
    "end": "1211320"
  },
  {
    "text": "for debugging what some of the uh recent examples might be with more logs to actually check the uh",
    "start": "1211320",
    "end": "1217480"
  },
  {
    "text": "cause and um to follow up on this there's also uh you can file a bug from",
    "start": "1217480",
    "end": "1224000"
  },
  {
    "text": "triage in order to have a sample of the same information that it has in GitHub and then start tracking more",
    "start": "1224000",
    "end": "1230280"
  },
  {
    "text": "investigation sharing with others uh Etc so yeah tackling flakes is uh",
    "start": "1230280",
    "end": "1239159"
  },
  {
    "text": "something that is um needs a multipronged approach we have a bunch of tools that kind of tackle this with",
    "start": "1239159",
    "end": "1244840"
  },
  {
    "text": "different trade-offs in different ways um those tools are interl uh there's",
    "start": "1244840",
    "end": "1250039"
  },
  {
    "text": "definitely improvements that can be made but uh notice all of those link back to the logs for debugging prow links out to",
    "start": "1250039",
    "end": "1256039"
  },
  {
    "text": "its own overviews for uh checking like quick history um test grid uh links back",
    "start": "1256039",
    "end": "1261440"
  },
  {
    "text": "to prow Etc um there's a bunch of uh other things I didn't mention in there as well that like kind of make it easy",
    "start": "1261440",
    "end": "1267120"
  },
  {
    "text": "to jump from tool to Tool uh going to the next uh most useful place to investigate um there's the push and pull",
    "start": "1267120",
    "end": "1274080"
  },
  {
    "text": "models uh where monitoring is useful for uh checking on test Health especially",
    "start": "1274080",
    "end": "1279120"
  },
  {
    "text": "over time as somebody invested in the health of the project overall and preventing these flakes but also pull models to try and uh get notifications",
    "start": "1279120",
    "end": "1287279"
  },
  {
    "text": "to fix things when it needed as quickly as possible and then communication things like being able to file bugs from",
    "start": "1287279",
    "end": "1293159"
  },
  {
    "text": "triage being able to link to any of these uis to uh share the failures with others and uh just kind of communicate",
    "start": "1293159",
    "end": "1300360"
  },
  {
    "text": "across the project for having multiple people up to date on what's Happening and helping to tackle these things",
    "start": "1300360",
    "end": "1306840"
  },
  {
    "text": "together and regardless if we go back to that earlier prmit um let's say that I",
    "start": "1306840",
    "end": "1312200"
  },
  {
    "text": "have my prmit failure and I want to debug it um the best thing is just to know that we don't really have flakes",
    "start": "1312200",
    "end": "1319880"
  },
  {
    "text": "you can safely just look at that failure and say what in my code probably could have caused this um without having to",
    "start": "1319880",
    "end": "1325559"
  },
  {
    "text": "worry about going down the rabbit hole of investigating everything else so prevention over a cure and uh next up I'll hand it over to",
    "start": "1325559",
    "end": "1336080"
  },
  {
    "text": "Ben I'm going to quickly take a moment to plug uh one thing that we forgot to mention here is that there's a release",
    "start": "1336080",
    "end": "1341400"
  },
  {
    "text": "CI signal group in Sig release that is specifically looking across all of this",
    "start": "1341400",
    "end": "1346919"
  },
  {
    "text": "not in for any particular Sig for for the set of jobs that we know are really important to releasing the project that",
    "start": "1346919",
    "end": "1352559"
  },
  {
    "text": "are really high quality very reliable and should not be failing U one of the cool things about all those tools is",
    "start": "1352559",
    "end": "1358760"
  },
  {
    "text": "that they give you different ways to drill down you know by the particular ones you're focusing on or with triage",
    "start": "1358760",
    "end": "1364679"
  },
  {
    "text": "for failures that are happening across all of the jobs when we have some rare flake that you might not clearly introduce that if you looked in test",
    "start": "1364679",
    "end": "1371440"
  },
  {
    "text": "grid you don't see that signal um and that we have these groups that are you know focusing on their own tests but",
    "start": "1371440",
    "end": "1376840"
  },
  {
    "text": "also groups that are looking across the project to try to catch that sort of thing um really big shout out to those",
    "start": "1376840",
    "end": "1382559"
  },
  {
    "text": "folks they do a lot of work to keep kubernetes release high quality and to reach out and figure out who who's the",
    "start": "1382559",
    "end": "1388120"
  },
  {
    "text": "right domain expert for those you know odd ones that the sigs might have missed so I'm going to talk about the",
    "start": "1388120",
    "end": "1395360"
  },
  {
    "text": "infrastructure um this is a really important thing uh few years",
    "start": "1395360",
    "end": "1401960"
  },
  {
    "text": "ago our infrastructure was not reliable enough and it's really hard to get people to pay attention into your test",
    "start": "1401960",
    "end": "1409200"
  },
  {
    "text": "results and take seriously that you know they may be responsible for some change that's causing failures if there's lots",
    "start": "1409200",
    "end": "1415440"
  },
  {
    "text": "of failures that are not anyone's responsibility from any of their code and are from the underlying",
    "start": "1415440",
    "end": "1420760"
  },
  {
    "text": "infrastructure if your infrastructure can't be trustworthy you're never going to get people to take the quality",
    "start": "1420760",
    "end": "1426320"
  },
  {
    "text": "seriously of the tests you need developers to trust that when they see a",
    "start": "1426320",
    "end": "1431559"
  },
  {
    "text": "job failing that's a change in the code it's a change in a test it's not the",
    "start": "1431559",
    "end": "1437559"
  },
  {
    "text": "environment so one of the initiatives we took was to",
    "start": "1437559",
    "end": "1444440"
  },
  {
    "text": "be able to run more hermetic testing in a lot of cases where we don't have to run a ton of external infrastructure uh",
    "start": "1444440",
    "end": "1450720"
  },
  {
    "text": "we build this tool called kind it lets us run clusters locally where the container nodes so it's a Docker",
    "start": "1450720",
    "end": "1457480"
  },
  {
    "text": "container that's a node that runs containers inside um it has some of its own problems but it allows us to be",
    "start": "1457480",
    "end": "1463200"
  },
  {
    "text": "insulated from any external dependencies and something that you can replicate locally on your machine",
    "start": "1463200",
    "end": "1469360"
  },
  {
    "text": "um of course we run kubernetes CI on",
    "start": "1469360",
    "end": "1474799"
  },
  {
    "text": "kubernetes um so we actually run a pod on kubernetes which is running Docker",
    "start": "1474799",
    "end": "1480760"
  },
  {
    "text": "and Docker or rather Docker and container D and then we run uh container D inside that it's just we have no",
    "start": "1480760",
    "end": "1487440"
  },
  {
    "text": "particular choice but this is what the stack looks like for um when we're running these kind jobs and you might think wow that's pretty errone well it",
    "start": "1487440",
    "end": "1495320"
  },
  {
    "text": "was initially but it turns out that the real problem that we tend to run into is",
    "start": "1495320",
    "end": "1501520"
  },
  {
    "text": "IO contention um if you are running multiple kubernetes control plane nodes",
    "start": "1501520",
    "end": "1508039"
  },
  {
    "text": "on a machine that is itself running kubernetes and then you're hammering it within twin tests you are making a lot",
    "start": "1508039",
    "end": "1514760"
  },
  {
    "text": "of IO on that machine and you need to be careful about when you have these workloads that have a ton of IO making",
    "start": "1514760",
    "end": "1521840"
  },
  {
    "text": "sure they're insulated so we made a push to make sure that when we're running this kind of job it's the only thing on",
    "start": "1521840",
    "end": "1527120"
  },
  {
    "text": "the machine and the Machine has has a very fast disc that can keep up with uh all of the thing that's happening here",
    "start": "1527120",
    "end": "1533000"
  },
  {
    "text": "not just the API server and ETD from all the rights from the tests but also when we're doing image pulls and things like",
    "start": "1533000",
    "end": "1538279"
  },
  {
    "text": "that you can wind up with a lot of dis read and WR and um you're going to hit the limits on the underlying machine and",
    "start": "1538279",
    "end": "1544760"
  },
  {
    "text": "then that's going to cause tests to flake that has nothing to do with the tests or the code it's just the underlying infrastructure can't keep up",
    "start": "1544760",
    "end": "1551840"
  },
  {
    "text": "especially if you wind up collocating two of these things that are really right heavy so you need to avoid",
    "start": "1551840",
    "end": "1559159"
  },
  {
    "text": "resource contention you need to make sure that the resource contention is not from the underlying infrastructure as",
    "start": "1559159",
    "end": "1565200"
  },
  {
    "text": "opposed to some kind of bug in the code so we made a big push um kubernetes is",
    "start": "1565200",
    "end": "1571520"
  },
  {
    "text": "CI has been around for a long time this DIY thing that moved from Jenkins to running on kubernetes itself we had a GK",
    "start": "1571520",
    "end": "1578799"
  },
  {
    "text": "1.4.6 cluster with ABAC um and it's been upgraded in place ever since so a lot of the things that are best practices today",
    "start": "1578799",
    "end": "1586279"
  },
  {
    "text": "were not happening um it was running inside of Google for a long time on kind of the unlimited Google Cloud money",
    "start": "1586279",
    "end": "1592559"
  },
  {
    "text": "faucet instead of the donations through the community and no one was setting requests and limits on their jobs we",
    "start": "1592559",
    "end": "1598520"
  },
  {
    "text": "were just had a really big pool of VMS and throw all the Pods at it that does not work if you're testing things in CI",
    "start": "1598520",
    "end": "1606080"
  },
  {
    "text": "you need some kind of guarantee of like how much resources is this thing getting you need that to be consistent or you're going to have fakes from that so we",
    "start": "1606080",
    "end": "1612520"
  },
  {
    "text": "enforce that every ciod has to set requests and limits they should match you should have guaranteed quality",
    "start": "1612520",
    "end": "1618279"
  },
  {
    "text": "service I'm not sure if I would recommend that for all of your production workloads but for CI tests that consistency is really important um",
    "start": "1618279",
    "end": "1625600"
  },
  {
    "text": "and it allows us to run the infrastructure effectively as well you need to consider your IO needs you",
    "start": "1625600",
    "end": "1630919"
  },
  {
    "text": "should really find some tooling that works for your platform to monitor um IO",
    "start": "1630919",
    "end": "1636240"
  },
  {
    "text": "heavy workloads and proactively look for that um we've spent some time in testing digging through this sort of thing to",
    "start": "1636240",
    "end": "1641960"
  },
  {
    "text": "say oh well certain kinds of build tools or certain kinds of test tools or going to do a lot of IO and you're just like",
    "start": "1641960",
    "end": "1648520"
  },
  {
    "text": "you're running on an underlying machine uh you can't schedule for this currently in kubernetes so we do things like",
    "start": "1648520",
    "end": "1655120"
  },
  {
    "text": "putting things in memory making sure it's the only workload on a machine and that the disc is fast enough and knowing",
    "start": "1655120",
    "end": "1661720"
  },
  {
    "text": "that the test is not failing because it's IO starved because of some other workload on the machine measure measure",
    "start": "1661720",
    "end": "1668880"
  },
  {
    "text": "measure you need to be checking this you need to be looking at this proactively and catching oh hey our CI machines are",
    "start": "1668880",
    "end": "1675679"
  },
  {
    "text": "getting starved for Io and we collocating workloads this is a problem",
    "start": "1675679",
    "end": "1681360"
  },
  {
    "text": "I also want to mention for anyone here that's writing things a go that's a lot of the cloud native Community um go Max",
    "start": "1681360",
    "end": "1686880"
  },
  {
    "text": "BRS when you're doing this is not the default is not aware of container limits",
    "start": "1686880",
    "end": "1692480"
  },
  {
    "text": "um so if you have things that are doing a lot of go routines with locks and whatnot you can have contention there",
    "start": "1692480",
    "end": "1698880"
  },
  {
    "text": "that uh is actually because you're not aligning the go run time with the am of",
    "start": "1698880",
    "end": "1704240"
  },
  {
    "text": "resources you're actually providing you can use the downward API in kubernetes to pass through the CPU limit as this",
    "start": "1704240",
    "end": "1710360"
  },
  {
    "text": "environment variable um there's a library from Uber called Auto Max procs that you can import we're using a mix of",
    "start": "1710360",
    "end": "1716960"
  },
  {
    "text": "approaches in the kubernetes project to try to avoid things like our unit test flaking because we're running them",
    "start": "1716960",
    "end": "1722320"
  },
  {
    "text": "highly parallel and they're doing go routines and locks and things and it's on a machine with lots of cores but",
    "start": "1722320",
    "end": "1728720"
  },
  {
    "text": "we're running the unit tests with I don't know four of them and so then go is seeing the underlying CPUs and trying",
    "start": "1728720",
    "end": "1733880"
  },
  {
    "text": "to use all of them you have to look out for this sort of thing that again isn't something that someone writing a unit",
    "start": "1733880",
    "end": "1740360"
  },
  {
    "text": "test is thinking about it's just the intersection of the tests running on the underlying",
    "start": "1740360",
    "end": "1746080"
  },
  {
    "text": "infrastructure the other thing to watch out for we mentioned we're running Docker and Docker well that's privilege",
    "start": "1746080",
    "end": "1751760"
  },
  {
    "text": "of containers they're even leakier than normal containers but even for normal containers if you're running CI with",
    "start": "1751760",
    "end": "1757559"
  },
  {
    "text": "containers you have to watch out for there a number of things that aren't really contained um off the top of my",
    "start": "1757559",
    "end": "1763559"
  },
  {
    "text": "head two big ones B format MK if you're making things run cross architecture um",
    "start": "1763559",
    "end": "1768840"
  },
  {
    "text": "if you've ever run an arm image on an AMD host or vice versa that's usually",
    "start": "1768840",
    "end": "1774000"
  },
  {
    "text": "being done with this neat little hack where you tell the konel hey use this user space emulator when you're running",
    "start": "1774000",
    "end": "1779919"
  },
  {
    "text": "binaries that look like arm 64 that's registered in a global API in the colonel when exec calls happen go out to",
    "start": "1779919",
    "end": "1787480"
  },
  {
    "text": "this interpreter if you are setting this up in parallel on a CI machine you can race on registering these handlers um so",
    "start": "1787480",
    "end": "1795200"
  },
  {
    "text": "watch out for that sort of thing you could consider running as a Damon set set or you can make sure that those workloads are not scheduling at the same",
    "start": "1795200",
    "end": "1801600"
  },
  {
    "text": "time um they will race each other on this API or I notify limits where even if you don't have a page container the",
    "start": "1801600",
    "end": "1808200"
  },
  {
    "text": "limits themselves are Global to the machine they're not namespaced like something like file handle limits and",
    "start": "1808200",
    "end": "1814279"
  },
  {
    "text": "it's pretty easy to run into this when you're running like a lot of Cu lits with kind or something like that um some",
    "start": "1814279",
    "end": "1820399"
  },
  {
    "text": "automation tools out there uh that are trying to watch for files um it's pretty easy to hit this you might not be aware",
    "start": "1820399",
    "end": "1826720"
  },
  {
    "text": "of it error messages might look like you're running out of file handles but if you do a little digging you'll find",
    "start": "1826720",
    "end": "1832000"
  },
  {
    "text": "that oh but this tool is using I notify uh so we bump the I notify limits pretty high on all of our CI machines because",
    "start": "1832000",
    "end": "1837559"
  },
  {
    "text": "we just know that we're going to have a lot of things using this so we just preemptively make sure that there's plenty of capacity for running this and",
    "start": "1837559",
    "end": "1844080"
  },
  {
    "text": "they're not going to run in this artificial limit the other thing is while we've",
    "start": "1844080",
    "end": "1850159"
  },
  {
    "text": "done all this stuff to try to run things within the CI as much as possible and keep it really hermetic and reliable",
    "start": "1850159",
    "end": "1855639"
  },
  {
    "text": "locally um that's not sufficient for developing kubernetes kubernetes the up",
    "start": "1855639",
    "end": "1861880"
  },
  {
    "text": "and source project advertises a 5,000 node scaling Target that's important",
    "start": "1861880",
    "end": "1867919"
  },
  {
    "text": "even if you're not running to 5,000 nodes to get some idea of the systemic scaling of the project and the reliability the stability so we actually",
    "start": "1867919",
    "end": "1875600"
  },
  {
    "text": "test 5,000 node clusters in the cloud you're not going to run a kind cluster",
    "start": "1875600",
    "end": "1880679"
  },
  {
    "text": "on some 8 core VM with 5,000 nodes you're going to melt the machine so we",
    "start": "1880679",
    "end": "1885960"
  },
  {
    "text": "run 5,000 VM M plus a control plane in",
    "start": "1885960",
    "end": "1891360"
  },
  {
    "text": "the cloud on a regular basis if you are doing that sort of thing now you have a big problem where you have a ton of",
    "start": "1891360",
    "end": "1897279"
  },
  {
    "text": "resources outside of the CI system and you can't let those get starved or or or",
    "start": "1897279",
    "end": "1903720"
  },
  {
    "text": "something that we used to run into uh things would just say oh this is the gcp project where you run the tests uh when",
    "start": "1903720",
    "end": "1909399"
  },
  {
    "text": "you start the test spin up the cluster and delete the cluster at the end of the test but if your test pod gets",
    "start": "1909399",
    "end": "1915440"
  },
  {
    "text": "preempted and it fails to clean up now you have 5,000 no cluster just sitting there consuming all of the quota in the",
    "start": "1915440",
    "end": "1921679"
  },
  {
    "text": "project so we have this little State machine system with a couple of microservices where if you want to use",
    "start": "1921679",
    "end": "1928159"
  },
  {
    "text": "something like a gcp project or an ads sub account we're going to lease it to you from a clean state to a busy state",
    "start": "1928159",
    "end": "1936120"
  },
  {
    "text": "where you're running jobs you're going to have a TTL on that and you're going to heartbeat from the job to say hey I'm",
    "start": "1936120",
    "end": "1942320"
  },
  {
    "text": "still using this if you failed to heartbeat we hit the TTL there's another service that will move it into the dirty",
    "start": "1942320",
    "end": "1948720"
  },
  {
    "text": "state that this project isn't currently being used but we need to make sure that we clean up all those resources so that",
    "start": "1948720",
    "end": "1955880"
  },
  {
    "text": "the next time we hand out this project there won't be left over 5,000 o clusters eating up all the quota um and",
    "start": "1955880",
    "end": "1962760"
  },
  {
    "text": "then finally when we run a tool that just wipes everything in the account or the clust or the gcp project then we",
    "start": "1962760",
    "end": "1969880"
  },
  {
    "text": "move it into the clean State available to be leased to the next one and again to drive confidence in this and make",
    "start": "1969880",
    "end": "1976159"
  },
  {
    "text": "sure that we can drive that you you know culture of quality we first have to make sure that this is reliable we have",
    "start": "1976159",
    "end": "1982440"
  },
  {
    "text": "enough resources we're monitoring it you're not going to run into CI starting to fail very often because we' ran out",
    "start": "1982440",
    "end": "1987919"
  },
  {
    "text": "of resources we're proactively uh staying on top of tracking that we have enough projects",
    "start": "1987919",
    "end": "1994159"
  },
  {
    "text": "we're not getting low on them we're not getting stuck cleaning up um we've made a pretty big push to try to make sure",
    "start": "1994159",
    "end": "2000200"
  },
  {
    "text": "that as much as possible we never hit that state so that you can focus on making sure that the tests themselves",
    "start": "2000200",
    "end": "2006120"
  },
  {
    "text": "are reliable so in conclusion eliminating flaky tests",
    "start": "2006120",
    "end": "2012200"
  },
  {
    "text": "is crucial for achieving a robust CI pipeline you need a holistic approach to Quality starting with design and code",
    "start": "2012200",
    "end": "2019039"
  },
  {
    "text": "reviews you need to think upfront how do we build things so that they aren't going to be",
    "start": "2019039",
    "end": "2024320"
  },
  {
    "text": "flaky you need collaboration and shared responsibility don't tell one group that they're going to be responsible for",
    "start": "2024320",
    "end": "2030559"
  },
  {
    "text": "every aspect of testing you're going to burn them out and you're not aligning the thinking about how do we build these",
    "start": "2030559",
    "end": "2035600"
  },
  {
    "text": "things to be reliable the people who are building features are the people that know how to test the features and they know where the problems are going to be",
    "start": "2035600",
    "end": "2042240"
  },
  {
    "text": "and you need to do that in collaboration with other people that may be experts in like the test framework or the",
    "start": "2042240",
    "end": "2049839"
  },
  {
    "text": "infrastructure adopting best practices and leveraging all these tools can let you build this highquality software like",
    "start": "2049839",
    "end": "2056118"
  },
  {
    "text": "the kubernetes project strives for and remember only you can prevent",
    "start": "2056119",
    "end": "2061280"
  },
  {
    "text": "CIF fires you can find us on GitHub uh",
    "start": "2061280",
    "end": "2067800"
  },
  {
    "text": "primarily in the kubernetes test infr project where we have all of the configuration for what we're running um",
    "start": "2067800",
    "end": "2072878"
  },
  {
    "text": "you can find us in the kubernetes slack you can get an invite at slack. kat. to the sick testing Channel we have a bqu",
    "start": "2072879",
    "end": "2079320"
  },
  {
    "text": "meeting at 10 a.m. Pacific uh the sick testing channel has the link in the",
    "start": "2079320",
    "end": "2085079"
  },
  {
    "text": "agenda thank you any questions might be out of time sorry well you can come meet",
    "start": "2085320",
    "end": "2091520"
  },
  {
    "text": "us afterwards we'll step outside thank you all",
    "start": "2091520",
    "end": "2096240"
  }
]