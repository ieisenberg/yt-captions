[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "yeah I think we're good all right thank you so much for coming thank you for coming to cube Khan it's remarkable honestly to see a",
    "start": "539",
    "end": "8790"
  },
  {
    "text": "thousand people here when there were three of us I think three years ago so I'm still sort of sinking in and so",
    "start": "8790",
    "end": "16560"
  },
  {
    "text": "today I'm gonna talk a little bit actually not so much about kubernetes actually and a little bit about some",
    "start": "16560",
    "end": "22109"
  },
  {
    "text": "ideas that I've had floating around for a while I took some time off in late May",
    "start": "22109",
    "end": "27840"
  },
  {
    "text": "and early June of this year and you know because I had to write code while I was taking time off I wrote a bunch of code",
    "start": "27840",
    "end": "34170"
  },
  {
    "text": "and that this is the the net of that it was kind of an experiment to see some ideas that I had and see how they looked",
    "start": "34170",
    "end": "40800"
  },
  {
    "text": "so hopefully they they look interesting and hopefully we can go forward from here and that's that's the basis of this",
    "start": "40800",
    "end": "47340"
  },
  {
    "text": "I should say that this is all although I you know I'm currently employed by Microsoft this is all my own ideas so if",
    "start": "47340",
    "end": "56820"
  },
  {
    "text": "they're terrible don't blame them and if they're good then they can have them and that's great um that's just the",
    "start": "56820",
    "end": "63210"
  },
  {
    "text": "way it works I guess we used to say what is it success has a thousand fathers and",
    "start": "63210",
    "end": "68520"
  },
  {
    "text": "failures and orphan alright so there's a brief history of applications and I think when we start think about",
    "start": "68520",
    "end": "74220"
  },
  {
    "start": "70000",
    "end": "94000"
  },
  {
    "text": "applications a long time ago we think about unicorns you know they were bespoke software that was built for a",
    "start": "74220",
    "end": "80100"
  },
  {
    "text": "specific machine and it was really it was intended to run on one machine in",
    "start": "80100",
    "end": "86549"
  },
  {
    "text": "one place for one customer right that was you know in the 1950s on mainframes",
    "start": "86549",
    "end": "91829"
  },
  {
    "text": "that's the way applications were built and eventually we had clones right",
    "start": "91829",
    "end": "97200"
  },
  {
    "start": "94000",
    "end": "117000"
  },
  {
    "text": "eventually we started saying like oh actually that program is good and I have that same machine in four different places so I'm gonna run that same",
    "start": "97200",
    "end": "103470"
  },
  {
    "text": "machine in four different places but they're still disjoint they're still really just clones of each other they",
    "start": "103470",
    "end": "109770"
  },
  {
    "text": "don't know that they don't know that they exist they don't really know anything about each other and they're really not connected in any real way so",
    "start": "109770",
    "end": "117600"
  },
  {
    "start": "117000",
    "end": "149000"
  },
  {
    "text": "then we move on and then eventually we get to a world of client-server and and these things are still kind of bespoke",
    "start": "117600",
    "end": "123390"
  },
  {
    "text": "clones of one another it's just that you have a server in one place on one machine and you have a bunch of clients",
    "start": "123390",
    "end": "128849"
  },
  {
    "text": "that are clones of each other and they're talking to that one machine but I think what's important here is even at this point there's really not",
    "start": "128849",
    "end": "135820"
  },
  {
    "text": "a lot of configuration there's really not a lot of description of the topology the client maybe knows where to go find",
    "start": "135820",
    "end": "140950"
  },
  {
    "text": "the server but that's about it but eventually we started saying like well actually we don't just want clones we",
    "start": "140950",
    "end": "146830"
  },
  {
    "text": "want kind of parameterised clones and we started adding in configuration files I",
    "start": "146830",
    "end": "153730"
  },
  {
    "start": "149000",
    "end": "181000"
  },
  {
    "text": "don't know what everybody's first configuration file was my first configuration file was the Java",
    "start": "153730",
    "end": "159400"
  },
  {
    "text": "properties file and I don't know but but eventually we had this idea that applications should be configured in",
    "start": "159400",
    "end": "165070"
  },
  {
    "text": "this way and this was the beginning of a long tempestuous divorce of code and",
    "start": "165070",
    "end": "171820"
  },
  {
    "text": "config and then they get back together and you'd have config in your code and then they split back up and then they decide it's terrible for the children",
    "start": "171820",
    "end": "179610"
  },
  {
    "text": "and then eventually you get to distributed applications and that added this wrinkle where not only is the",
    "start": "179610",
    "end": "186430"
  },
  {
    "start": "181000",
    "end": "262000"
  },
  {
    "text": "config potentially associated with the application but there's actually this other configuration that describes the",
    "start": "186430",
    "end": "193390"
  },
  {
    "text": "broader topology of the application describes how you want to deploy this application and cloud only made this",
    "start": "193390",
    "end": "199720"
  },
  {
    "text": "worse because suddenly you had a file that described not only how you wanted to deploy your application but actually",
    "start": "199720",
    "end": "205750"
  },
  {
    "text": "all of the machines and everything else and so you're furthering and furthering this divorce of the application from the",
    "start": "205750",
    "end": "211420"
  },
  {
    "text": "thing that describes how that application should run and I think that",
    "start": "211420",
    "end": "216880"
  },
  {
    "text": "the net result of this is that it's it becomes too hard to reason about these",
    "start": "216880",
    "end": "221950"
  },
  {
    "text": "things because they're so far separate from one another and I think that there",
    "start": "221950",
    "end": "227799"
  },
  {
    "text": "is there's an experience that's been lost I mean in most applications it's not like you can take an application",
    "start": "227799",
    "end": "233380"
  },
  {
    "text": "that was designed to run in a sharded replicated pattern and like say well hey now you're gonna go be scatter gather",
    "start": "233380",
    "end": "239799"
  },
  {
    "text": "right it just doesn't work like the application knows how it's supposed to be configured it's just that we've",
    "start": "239799",
    "end": "245049"
  },
  {
    "text": "decided we're going to write the configuration somewhere else you know parameterization makes sense because",
    "start": "245049",
    "end": "250480"
  },
  {
    "text": "you're going to reuse it in different contexts but things like the fact that the topology is described in a different",
    "start": "250480",
    "end": "256090"
  },
  {
    "text": "file than the code like were you gonna change the topology right it just doesn't make that much sense and I think",
    "start": "256090",
    "end": "263080"
  },
  {
    "start": "262000",
    "end": "279000"
  },
  {
    "text": "that this is really an unnatural separation and I'm sort of hopeful that you know and some",
    "start": "263080",
    "end": "268240"
  },
  {
    "text": "of the things I'm going to talk about in a little bit we'll see some ideas about how maybe we can bring these things back together and I think part of the reason",
    "start": "268240",
    "end": "274090"
  },
  {
    "text": "that it's an unnatural separation is it actually makes the act of building one of these systems just too hard right so",
    "start": "274090",
    "end": "280570"
  },
  {
    "start": "279000",
    "end": "339000"
  },
  {
    "text": "I wanted to take another little starting point what does this do yeah so one or",
    "start": "280570",
    "end": "290860"
  },
  {
    "text": "two people all right what does this do all right everybody knows what this does",
    "start": "290860",
    "end": "296290"
  },
  {
    "text": "and it's the same thing all right this is just the dump of the compiler and the assembly code of this all right",
    "start": "296290",
    "end": "303669"
  },
  {
    "text": "and I I'm going to say unless you saw the string hello world up top you didn't actually know you were cheating and I",
    "start": "303669",
    "end": "311889"
  },
  {
    "text": "think that this is this is part of the point right which is that we don't and we deal in higher language level",
    "start": "311889",
    "end": "317710"
  },
  {
    "text": "languages most of the time then see anyway at this point but we don't we've decided that that abstraction is not",
    "start": "317710",
    "end": "323949"
  },
  {
    "text": "worth our time and that's not that we can't do it it's not that we're not smart enough to figure out assembly language it's that if we were all still",
    "start": "323949",
    "end": "330910"
  },
  {
    "text": "doing assembly language I don't think any of us would be in this room kubernetes literally would not exist if",
    "start": "330910",
    "end": "336820"
  },
  {
    "text": "we were all still programming an assembly language and yet I think we're writing our distributed systems in",
    "start": "336820",
    "end": "342070"
  },
  {
    "start": "339000",
    "end": "365000"
  },
  {
    "text": "assembly right I think that we are in talking about you know deploying this PAH you know this set of pods and this",
    "start": "342070",
    "end": "348220"
  },
  {
    "text": "service and these pieces the building blocks that we're putting together they're not concepts they're just",
    "start": "348220",
    "end": "353740"
  },
  {
    "text": "assembly language instructions right and we need to if we're going to really build our systems and we're going to",
    "start": "353740",
    "end": "360729"
  },
  {
    "text": "move on from where we are it has to get easier and so let's start thinking about",
    "start": "360729",
    "end": "365919"
  },
  {
    "text": "and so the genesis for a lot of this work was to say how do we write our systems in code and I was talking about",
    "start": "365919",
    "end": "372639"
  },
  {
    "text": "this yesterday about the things that I'm most interested in in the future we were at this meetup down in in Seattle",
    "start": "372639",
    "end": "380380"
  },
  {
    "text": "earlier yesterday and I think that the thing that I'm most excited about and the thing that I'm most interested in is",
    "start": "380380",
    "end": "386160"
  },
  {
    "text": "democratizing distributed systems all right if you look at so I I like to say",
    "start": "386160",
    "end": "392650"
  },
  {
    "text": "one of the smartest people who I've ever worked with what he did before we worked on distributed systems together is he",
    "start": "392650",
    "end": "398020"
  },
  {
    "text": "built serve web browsers for mobile phones like the Motorola RAZR right that kind",
    "start": "398020",
    "end": "405250"
  },
  {
    "text": "of phone and he's just incredibly smart embedded systems just knew the operating system you wanted to note about timing",
    "start": "405250",
    "end": "411220"
  },
  {
    "text": "and the operating said he knew it exactly right and it's because he had to be that good in order to build a web browser for a mobile phone right and at",
    "start": "411220",
    "end": "418630"
  },
  {
    "text": "this point teenagers middle schoolers my daughter is in two years is probably gonna be",
    "start": "418630",
    "end": "424270"
  },
  {
    "text": "riding phone applications for her phone we've democratized mobile development we've democratized web development we",
    "start": "424270",
    "end": "430390"
  },
  {
    "text": "haven't democratized distributed system development and it's time that we did all right so the rest of this is going",
    "start": "430390",
    "end": "436660"
  },
  {
    "text": "to be really a sketch a proof of concept if you will some ideas to get the discussion started about how we might",
    "start": "436660",
    "end": "443140"
  },
  {
    "text": "actually go about doing this all right so this is and it's out there right now I called it meta particle tachyon was",
    "start": "443140",
    "end": "449770"
  },
  {
    "start": "445000",
    "end": "459000"
  },
  {
    "text": "taken sadly but meta particles are tachyons and that go faster than light",
    "start": "449770",
    "end": "455770"
  },
  {
    "text": "and I can't remove the name of the other one which goes slower than the speed of light and so the basic idea is just like",
    "start": "455770",
    "end": "460930"
  },
  {
    "start": "459000",
    "end": "480000"
  },
  {
    "text": "we had that compiler before for take the source code and turn it into machine instruction or turn it into assembly",
    "start": "460930",
    "end": "466930"
  },
  {
    "text": "language that then turns into machine instructions we have the same kind of idea we have code we turned it into an",
    "start": "466930",
    "end": "472300"
  },
  {
    "text": "abstract syntax tree we feed it into the orchestrator and the app pops out the distributed app pops out the other side",
    "start": "472300",
    "end": "479100"
  },
  {
    "text": "okay and just to give you the the smallest little example of this here's a",
    "start": "479100",
    "end": "484750"
  },
  {
    "start": "480000",
    "end": "890000"
  },
  {
    "text": "program that is written here right and I'm using nodejs doesn't really matter for the ideas that are involved so you",
    "start": "484750",
    "end": "492669"
  },
  {
    "text": "know we bring in our library we're gonna define a service this is just gonna be a really simple service it's gonna have a",
    "start": "492669",
    "end": "498010"
  },
  {
    "text": "request in a response I'm gonna say expose which says I want to show it to the world and I'm going to say serve now",
    "start": "498010",
    "end": "504250"
  },
  {
    "text": "there's actually a lot of things that happen in this serve line at the very",
    "start": "504250",
    "end": "509590"
  },
  {
    "text": "end right you can think of this as being the definition of our program that thing right there it's pretty much the compiler and what it's going to do is",
    "start": "509590",
    "end": "517089"
  },
  {
    "text": "it's going to take this code it packages inside of a container it deploys that container to an orchestration system it",
    "start": "517089",
    "end": "522969"
  },
  {
    "text": "sets up a service to met to share down to that container and at this point you should say that's an awful lot of work",
    "start": "522969",
    "end": "529240"
  },
  {
    "text": "to say you know basically hello world right and I think that that's true if this was",
    "start": "529240",
    "end": "534530"
  },
  {
    "text": "all that we were building distributed systems wouldn't be hard and we wouldn't need to talk about these sorts of ideas but there's a whole lot of other pieces",
    "start": "534530",
    "end": "541670"
  },
  {
    "text": "to building a distributed system that I hope these things will make easier all right so I want to show you a quick demo",
    "start": "541670",
    "end": "547490"
  },
  {
    "text": "of this experience just to kind of ground it out a little bit before I move on so I'm gonna hope that this works",
    "start": "547490",
    "end": "560210"
  },
  {
    "text": "because yesterday I don't know it was anybody in my talk yesterday there was",
    "start": "560210",
    "end": "565340"
  },
  {
    "text": "some serious demo fail there so I'm hoping that all of the blood that was spilled there is going to not is gonna",
    "start": "565340",
    "end": "571700"
  },
  {
    "text": "mean that I don't have blood spilled here but you never know all right and so here I'm gonna say we're gonna say less server ones yes",
    "start": "571700",
    "end": "579830"
  },
  {
    "text": "there's that same program that we just saw up on the screen and now I can actually say and what you can see here",
    "start": "579830",
    "end": "592550"
  },
  {
    "text": "is there it is building the container and now it's deployed it and now if I say Q control get pods",
    "start": "592550",
    "end": "598420"
  },
  {
    "text": "there's my simple service out there and running right and I can actually say",
    "start": "598420",
    "end": "603650"
  },
  {
    "text": "node client is simple wall service oops",
    "start": "603650",
    "end": "610520"
  },
  {
    "text": "sorry I have to go over here actually write service find the service IP",
    "start": "610520",
    "end": "618170"
  },
  {
    "text": "address copy that yeah ctrl shift C copy",
    "start": "618170",
    "end": "624110"
  },
  {
    "text": "that we can go over here we can say put",
    "start": "624110",
    "end": "629810"
  },
  {
    "text": "that IP address in here give it the right name all right and there's that",
    "start": "629810",
    "end": "637700"
  },
  {
    "text": "same like here's what the request was it's just a simple echo server that's that's echoing the request back to me so",
    "start": "637700",
    "end": "643700"
  },
  {
    "text": "at this point again I hope if you were paying attention you're all saying well you know that seems like a really an",
    "start": "643700",
    "end": "649760"
  },
  {
    "text": "awful lot of work to return hello world so and now we're going to take it a little bit further further forward and",
    "start": "649760",
    "end": "655370"
  },
  {
    "text": "talk about like well what we're can we actually go with this all right and so this is the next example this is a",
    "start": "655370",
    "end": "661220"
  },
  {
    "text": "simple replicated service all right we have a happy user there at the top there to a root node that root node is fanning",
    "start": "661220",
    "end": "668330"
  },
  {
    "text": "out to those leaf nodes all right so let's take a look at what this looks like in meta particle here's our web sorry I went through a little animation",
    "start": "668330",
    "end": "674060"
  },
  {
    "text": "so there's you know one request gets replicated over it or it gets routed over to leave number three another",
    "start": "674060",
    "end": "679760"
  },
  {
    "text": "request gets routed over to leaf number one it's a simple round-robin right so here's what this looks like it looks",
    "start": "679760",
    "end": "686780"
  },
  {
    "text": "very similar except for you know here what I'm going to say is meta particle dot spread and so in saying spread I'm",
    "start": "686780",
    "end": "693980"
  },
  {
    "text": "saying I want to spread my requests across this number of replicas here's the function that I want to run at the",
    "start": "693980",
    "end": "699320"
  },
  {
    "text": "leaf again I'm going to say expose the service run this service all right so",
    "start": "699320",
    "end": "705260"
  },
  {
    "text": "let's drop back into that demo we're gonna go back over here I'm going to",
    "start": "705260",
    "end": "712090"
  },
  {
    "text": "delete the old thing that I had alright and so now we can say a server - yes all",
    "start": "712090",
    "end": "720530"
  },
  {
    "text": "right so here's my replicated service visible know I'm blaming the VGA adapter",
    "start": "720530",
    "end": "731510"
  },
  {
    "text": "that's all I'm saying",
    "start": "731510",
    "end": "734230"
  },
  {
    "text": "yeah I could I wish I knew how to make yes it's like how do i how do you make",
    "start": "739180",
    "end": "745070"
  },
  {
    "text": "the terminal bigger yeah that's usually the Mac way of doing it but that's not",
    "start": "745070",
    "end": "750980"
  },
  {
    "text": "what's working here preferences parents",
    "start": "750980",
    "end": "757270"
  },
  {
    "text": "let's go with 14 bold you know Linux",
    "start": "757270",
    "end": "765230"
  },
  {
    "text": "comes through eventually well is it Kelsey said next year's the year of the Linux desktop something like",
    "start": "765230",
    "end": "770450"
  },
  {
    "text": "that and it's Debian - so like Debian is",
    "start": "770450",
    "end": "775630"
  },
  {
    "text": "yeah I like no I mean honestly I like Debian a lot but it's just like it's very manual it reminds you of the good",
    "start": "775630",
    "end": "782660"
  },
  {
    "text": "old days um all right so now we're gonna say we can say there's that that server that we had now we can actually say node",
    "start": "782660",
    "end": "789500"
  },
  {
    "text": "server - yes runner it closed curing",
    "start": "789500",
    "end": "794570"
  },
  {
    "text": "that is all right let's do that so again it's building that image it",
    "start": "794570",
    "end": "799580"
  },
  {
    "text": "deploying it and now let's take a look sweet acute control get pods now we",
    "start": "799580",
    "end": "805250"
  },
  {
    "text": "actually have three replicas so you can see replicated service zero one two and then we have this shard which is the",
    "start": "805250",
    "end": "811760"
  },
  {
    "text": "route right so we declare it declared three of our leaf nodes are one route and container is creating hopefully it's",
    "start": "811760",
    "end": "818570"
  },
  {
    "text": "running by now all right it's up and running and now we can actually also say we can get services grab that service",
    "start": "818570",
    "end": "826370"
  },
  {
    "text": "over here control shift copy go over here and we",
    "start": "826370",
    "end": "833210"
  },
  {
    "text": "can say alright I'm gonna go put this in here alright and now you can see here",
    "start": "833210",
    "end": "848480"
  },
  {
    "text": "what the very back is it's visible right up there is the server that it's serving",
    "start": "848480",
    "end": "853520"
  },
  {
    "text": "from with the hash that's there and if the demo gods are with me when I do another request you can see there that",
    "start": "853520",
    "end": "860300"
  },
  {
    "text": "the server changed right I went from shard number one to shard number two still in shard number two back to number",
    "start": "860300",
    "end": "865430"
  },
  {
    "text": "one back to zero and if I put this in a loop you know you can see that it's",
    "start": "865430",
    "end": "877430"
  },
  {
    "text": "round-robin amongst the amongst the server's right so I hope that this is beginning to show you I hope this is",
    "start": "877430",
    "end": "885050"
  },
  {
    "text": "beginning to show you maybe give you an inkling of the simplification that with it that's possible here",
    "start": "885050",
    "end": "890450"
  },
  {
    "start": "890000",
    "end": "989000"
  },
  {
    "text": "and so I wanted to take the next step to take it a little bit further and talk about a sharded service so who here",
    "start": "890450",
    "end": "897290"
  },
  {
    "text": "knows what a sharded services it's okay all right about half about half the audience all right now I think there's a",
    "start": "897290",
    "end": "903170"
  },
  {
    "text": "lot of concepts and distributed systems sharding master election they're really not that hard they they're not that hard",
    "start": "903170",
    "end": "909050"
  },
  {
    "text": "to understand conceptually they can be hard to implement sometimes but they're relatively easy to understand",
    "start": "909050",
    "end": "914510"
  },
  {
    "text": "conceptually and I think one of the keys here is we want to make it possible for people who just understand the concept but don't necessarily want to understand",
    "start": "914510",
    "end": "921080"
  },
  {
    "text": "the implementation to use these things right like just like you understand how you can use compare and swap in the",
    "start": "921080",
    "end": "926300"
  },
  {
    "text": "assembly language to do a lock that doesn't mean we should all go out and write POSIX locks right there's a reason",
    "start": "926300",
    "end": "931910"
  },
  {
    "text": "that everybody uses that library and it's because it's subtle and it's hard and it's honestly a waste of time and so the same thing so",
    "start": "931910",
    "end": "938899"
  },
  {
    "text": "that the sharded service here or request comes in it has some characteristic like what's the user and it hashes the user",
    "start": "938899",
    "end": "945140"
  },
  {
    "text": "mods up by the number of replicas that you have and and your requests always get routed to that particular server but",
    "start": "945140",
    "end": "951470"
  },
  {
    "text": "you can scale horizontally because you know my request gets routed to one server someone else's request get",
    "start": "951470",
    "end": "956930"
  },
  {
    "text": "surrounded to another server someone else's request gets routed to another server if you use consistent hashing and that's one of the things that people get",
    "start": "956930",
    "end": "962959"
  },
  {
    "text": "wrong sometimes then when you add in more replicas you actually tend not to have much churn and so you can do things",
    "start": "962959",
    "end": "970459"
  },
  {
    "text": "like cache things in memory for performance and stuff like that and have pretty good assurances that you're going",
    "start": "970459",
    "end": "975470"
  },
  {
    "text": "to you know that that cache is gonna be relatively hot all right so let's take a look at how you know and here if I use",
    "start": "975470",
    "end": "980990"
  },
  {
    "text": "Robin user robin instead of user Brendan you're gonna go over to a different leaf and that's a sharted service because the",
    "start": "980990",
    "end": "986270"
  },
  {
    "text": "shard here is you know two versus zero all right so let's look at this here well here we go I'm saying to say MP",
    "start": "986270",
    "end": "993860"
  },
  {
    "start": "989000",
    "end": "1177000"
  },
  {
    "text": "inside where I said spread before I'm gonna say MP shard and then instead of",
    "start": "993860",
    "end": "998930"
  },
  {
    "text": "and I give them shards and instead of just giving a service function I'm also giving us a sharding function right and",
    "start": "998930",
    "end": "1005410"
  },
  {
    "text": "so now that root that's being deployed it's job is not just a spread load its job is actually to run my sharding",
    "start": "1005410",
    "end": "1012700"
  },
  {
    "text": "function figure out what shard it should be talking to and route the resurrection to the corresponding shard all right and",
    "start": "1012700",
    "end": "1019779"
  },
  {
    "text": "again I'm really writing my infrastructure as code right and so if",
    "start": "1019779",
    "end": "1024938"
  },
  {
    "text": "we take a look here at the demo I'll go back out and I will delete this one so",
    "start": "1024939",
    "end": "1039428"
  },
  {
    "text": "if we look at server 3 is you can see here there is basically with some",
    "start": "1039429",
    "end": "1045100"
  },
  {
    "text": "exception handling that I omitted in the slide for rooms of space there is the this sharding function there's my",
    "start": "1045100",
    "end": "1051850"
  },
  {
    "text": "sharding function there's my service function and now I can run this",
    "start": "1051850",
    "end": "1057299"
  },
  {
    "text": "I can spell kubernetes and now we're",
    "start": "1060140",
    "end": "1065480"
  },
  {
    "text": "building that image we're deploying that image we're building up those services c-cute control get pods you can see",
    "start": "1065480",
    "end": "1072800"
  },
  {
    "text": "there there's the compute the leaf function these are the ones that I just deleted from before here's my sharted",
    "start": "1072800",
    "end": "1078980"
  },
  {
    "text": "service they're all the leaf functions for my shot at service here's that sharded root that's being created they're up and running my other previous",
    "start": "1078980",
    "end": "1086870"
  },
  {
    "text": "service is finished dying if I get services we can grab this service shard",
    "start": "1086870",
    "end": "1092870"
  },
  {
    "text": "here go over and now if I go over here",
    "start": "1092870",
    "end": "1101740"
  },
  {
    "text": "paste this in",
    "start": "1102310",
    "end": "1105850"
  },
  {
    "text": "now you'll see it's it's the same response it's displaying the host over there but now if I do that loop it's the",
    "start": "1111090",
    "end": "1126100"
  },
  {
    "text": "same server all the time but if I go in here and I actually say well I'm going to do the same loop but I'm gonna do you",
    "start": "1126100",
    "end": "1131770"
  },
  {
    "text": "know I'll change the user to be Brendan with some degree of randomness and",
    "start": "1131770",
    "end": "1137050"
  },
  {
    "text": "crossing my fingers for luck yeah we're gonna see we're gonna target we're gonna shard and target to a different server",
    "start": "1137050",
    "end": "1142150"
  },
  {
    "text": "right so depending on the input that I've sent in in the request I'm getting directed to one particular server or another particular server this is good",
    "start": "1142150",
    "end": "1148480"
  },
  {
    "text": "because it spreads the load this is good because if one of those servers fails I only lose you know 10% of my users as",
    "start": "1148480",
    "end": "1155350"
  },
  {
    "text": "opposed to 100% of my or it's better to lose 10% of my users a hundred percent of the time instead of 100% of my users",
    "start": "1155350",
    "end": "1163420"
  },
  {
    "text": "ten percent of the time it's different services have different feelings about that but that's that's the reason you'll",
    "start": "1163420",
    "end": "1169270"
  },
  {
    "text": "choose charting all right and so I want to step back out from that and go drum",
    "start": "1169270",
    "end": "1174460"
  },
  {
    "text": "drop back into the talk so I'm not going to give a demo this one it exists in the",
    "start": "1174460",
    "end": "1180850"
  },
  {
    "start": "1177000",
    "end": "1505000"
  },
  {
    "text": "github repo for you to play around with this is the next sort of idea behind a service which is a scatter gather",
    "start": "1180850",
    "end": "1186550"
  },
  {
    "text": "service and so in a scatter gather service what happens is your request goes out so what we were doing before it",
    "start": "1186550",
    "end": "1193120"
  },
  {
    "text": "was really just request routing right that was all we were doing there wasn't really a lot of computation in a scatter gather service your request goes into a",
    "start": "1193120",
    "end": "1200380"
  },
  {
    "text": "root it's scattered out to a bunch of leaves so one request gets multiplex out to a whole bunch of leaves all of those",
    "start": "1200380",
    "end": "1206470"
  },
  {
    "text": "responses come back to the root the root collates them in some way and returns it",
    "start": "1206470",
    "end": "1211900"
  },
  {
    "text": "back up to the main to the main user right and so there's this merge function that happens at the root so you have a",
    "start": "1211900",
    "end": "1217690"
  },
  {
    "text": "leaf function that returns data a merge function that returns roots or returns results at the root this is by the way",
    "start": "1217690",
    "end": "1223060"
  },
  {
    "text": "how the traditional Google search index was implemented each leaf stores you know a very small",
    "start": "1223060",
    "end": "1229060"
  },
  {
    "text": "segment of the web your search query goes out to all of them they all get computed the data comes back up they're",
    "start": "1229060",
    "end": "1235690"
  },
  {
    "text": "sorted and ranked and merged in the root and then returned back up to the user so",
    "start": "1235690",
    "end": "1241150"
  },
  {
    "text": "all right and that is I'll go back out because apparently I didn't copy and paste the source code in",
    "start": "1241150",
    "end": "1246980"
  },
  {
    "text": "there if we so the version of this that",
    "start": "1246980",
    "end": "1257210"
  },
  {
    "text": "I did was basically a Gaussian distribution each leaf returns a set of random numbers the root returns a histogram of",
    "start": "1257210",
    "end": "1265280"
  },
  {
    "text": "those numbers see what actually a time I actually think I have time to run this so I maybe I will actually run this for",
    "start": "1265280",
    "end": "1271370"
  },
  {
    "text": "you so you can see here this is the leaf function right here it's just pushing a Gaussian random number between 25 and",
    "start": "1271370",
    "end": "1277700"
  },
  {
    "text": "100 it's going to return the result it's going to return a hundred of those then we go into the merge function the merge",
    "start": "1277700",
    "end": "1283400"
  },
  {
    "text": "function here is just going to calculate a simple histogram right so it's going to take all those random numbers that it got back bucket them up in and calculate",
    "start": "1283400",
    "end": "1290870"
  },
  {
    "text": "the histogram right and so if we can go back over here I should show you this service definition and then if you look",
    "start": "1290870",
    "end": "1298039"
  },
  {
    "text": "at the service definition right here all we're saying is we're gonna say well what's the name its histogram service I'm gonna do a scatter I want ten",
    "start": "1298039",
    "end": "1304730"
  },
  {
    "text": "replicas of my leaf function here's the function I want to run it the leaf here's the function that I want to run",
    "start": "1304730",
    "end": "1309860"
  },
  {
    "text": "and merge at the root all right and so we're gonna say we can say I'm going to delete the other run all right so now we",
    "start": "1309860",
    "end": "1322700"
  },
  {
    "text": "can run this I don't to delete it yeah thanks so it's",
    "start": "1322700",
    "end": "1333480"
  },
  {
    "text": "built again building that image it's deploying the image and again like the good thing about this is if you edit that code and you run that application",
    "start": "1333480",
    "end": "1340020"
  },
  {
    "text": "again it redeploys right the it rebuilds the image it redeploys the image it has that sort of feel of edit and in replace",
    "start": "1340020",
    "end": "1346410"
  },
  {
    "text": "on and so then if we go over here I'm going to see the services see acute",
    "start": "1346410",
    "end": "1352680"
  },
  {
    "text": "control get pods so now we're gonna see there's all of those scatter services",
    "start": "1352680",
    "end": "1357780"
  },
  {
    "text": "are being created there's the one gather service we can say get services and",
    "start": "1357780",
    "end": "1363320"
  },
  {
    "text": "there is the gather service is right here the observant among you will notice",
    "start": "1363320",
    "end": "1370200"
  },
  {
    "text": "that in order to achieve this kind of sharding i've actually had to define a service for every replica which is kind",
    "start": "1370200",
    "end": "1376410"
  },
  {
    "text": "of sad but i could also have implemented it via endpoint scraping but this was",
    "start": "1376410",
    "end": "1381690"
  },
  {
    "text": "easier alright so I can go over here and I can actually say alright go here and",
    "start": "1381690",
    "end": "1390360"
  },
  {
    "text": "it's called histogram service and the",
    "start": "1390360",
    "end": "1396300"
  },
  {
    "text": "input is actually ignored what you can see there and the result I maybe I'll clear it so that it's easier to see and run it again what you can see there",
    "start": "1396300",
    "end": "1404610"
  },
  {
    "text": "in the result is that histogram right the densities in the middle it's a traditional Gaussian distribution it's got a tail on either end distributions",
    "start": "1404610",
    "end": "1411990"
  },
  {
    "text": "in the middle right so this is scattered out collected a whole bunch of random numbers gathered back in run the",
    "start": "1411990",
    "end": "1417180"
  },
  {
    "text": "histogram in the merge function return the result back to the user all from oops cancel all from the code",
    "start": "1417180",
    "end": "1429450"
  },
  {
    "text": "that was expressed right here right so all in this service declaration alright so I'll step back out so the next piece",
    "start": "1429450",
    "end": "1439110"
  },
  {
    "text": "is well it's great to be able to define your topology it's interesting it's useful but one of the really hard",
    "start": "1439110",
    "end": "1446040"
  },
  {
    "text": "problems in distributed systems is storage right is is in the fact that",
    "start": "1446040",
    "end": "1451080"
  },
  {
    "text": "suddenly have all of these different processes running out all these different machines and storage becomes",
    "start": "1451080",
    "end": "1456330"
  },
  {
    "text": "very very hard and so I think if we're really going to democratize distributed",
    "start": "1456330",
    "end": "1461430"
  },
  {
    "text": "we have to take a stab at solving this problem as well now storage is hard for a reason because there's concurrency and",
    "start": "1461430",
    "end": "1467490"
  },
  {
    "text": "lots of really bad things happen and so along the path we're gonna have to make a few assumptions but I think that what",
    "start": "1467490",
    "end": "1472500"
  },
  {
    "text": "we've found in various other places web applications and everything else is if you give people a framework that's",
    "start": "1472500",
    "end": "1477780"
  },
  {
    "text": "flexible and that they can work with they'll figure out how to make use of it to solve their particular problem and so",
    "start": "1477780",
    "end": "1483780"
  },
  {
    "text": "that's what we're gonna do with storage so here is a simple server where we're starting out to a replicated replicated",
    "start": "1483780",
    "end": "1490710"
  },
  {
    "text": "leaf over there over here we wanted to requests plus plus in both places and we",
    "start": "1490710",
    "end": "1495990"
  },
  {
    "text": "really would like it if requests actually was incremented not on the machine but in some sort of global",
    "start": "1495990",
    "end": "1502350"
  },
  {
    "text": "notion of what requests is right and so here's what that looks like so we can",
    "start": "1502350",
    "end": "1508560"
  },
  {
    "start": "1505000",
    "end": "1533000"
  },
  {
    "text": "say here is I have this request coming in I'm gonna say if met a particle if it's go if the global scope of requests",
    "start": "1508560",
    "end": "1515940"
  },
  {
    "text": "doesn't exist hey set it to zero otherwise and then no matter what increment the scope requests plus plus",
    "start": "1515940",
    "end": "1523920"
  },
  {
    "text": "right and the net effect of this is actually going to be that that variable gets updated in a distributed storage",
    "start": "1523920",
    "end": "1531420"
  },
  {
    "text": "system that it can be accessed no matter where this particular application is running right so before it services your",
    "start": "1531420",
    "end": "1539190"
  },
  {
    "start": "1533000",
    "end": "1650000"
  },
  {
    "text": "request mehta particle is loading up all of the values that you asked for because i can reflect and i can see what you're",
    "start": "1539190",
    "end": "1545370"
  },
  {
    "text": "looking for and when you make changes it detects those changes it can examine the",
    "start": "1545370",
    "end": "1552300"
  },
  {
    "text": "scope variables before it executed your request function and examine the scope variables after it executed a request",
    "start": "1552300",
    "end": "1558600"
  },
  {
    "text": "function and it can persist those changes back into the store and now if those of you who have done distributed",
    "start": "1558600",
    "end": "1563970"
  },
  {
    "text": "systems before are really any concurrent programming before or saying but Brendan what about the read versus real read",
    "start": "1563970",
    "end": "1570660"
  },
  {
    "text": "update right race it's like one of your favorite races right it's one of my favorite I like the 5k but the read",
    "start": "1570660",
    "end": "1576150"
  },
  {
    "text": "update writes race is a close second and so what's happening here is we're",
    "start": "1576150",
    "end": "1581640"
  },
  {
    "text": "assuming that our Storage has a has optimistic concurrency we're assuming",
    "start": "1581640",
    "end": "1587400"
  },
  {
    "text": "two things we're assuming at our storage has optimistic concurrency and we're assuming that in your request function here you don't have side effects other",
    "start": "1587400",
    "end": "1594240"
  },
  {
    "text": "than store into scope or at least their item potent side-effects right you can make web requests but they better not be data",
    "start": "1594240",
    "end": "1600590"
  },
  {
    "text": "specific web requests right they have to be things that you can repeat multiple times and these are the assumptions that you know if you want to be able to have",
    "start": "1600590",
    "end": "1606320"
  },
  {
    "text": "this kind of simplification these are the assumptions that you have to bake into your system and and that's where",
    "start": "1606320",
    "end": "1612140"
  },
  {
    "text": "the compromise happens and this is probably plate one of the places where I'm potentially the least comfortable right because this is a place where",
    "start": "1612140",
    "end": "1618410"
  },
  {
    "text": "you're imposing a programming model on to the end user and they may or may not like that but regardless what happens is",
    "start": "1618410",
    "end": "1625130"
  },
  {
    "text": "because we have optimistic concurrency when we take that when we see that requests incremented and we try and",
    "start": "1625130",
    "end": "1630830"
  },
  {
    "text": "persist it back into storage we can detect that actually there has been this read update write race and what we can",
    "start": "1630830",
    "end": "1637310"
  },
  {
    "text": "do is we can actually just say well you know what that particular iteration of running that function doesn't count and",
    "start": "1637310",
    "end": "1643100"
  },
  {
    "text": "we'll drop it on the floor and we'll sort of rewind ourself back to right before we service to your request we'll",
    "start": "1643100",
    "end": "1648440"
  },
  {
    "text": "reload all of the data from the storage space will rerun your code that's why it",
    "start": "1648440",
    "end": "1654050"
  },
  {
    "text": "has to be stateless and without side effects other than in the scope variables will rerun your code and will",
    "start": "1654050",
    "end": "1660590"
  },
  {
    "text": "try and store the data again and if we can't do it because someone else snuck in there in the meantime we'll just keep",
    "start": "1660590",
    "end": "1666410"
  },
  {
    "text": "going eventually we'll time out because obviously all good systems to try and avoid infinite loops but generally",
    "start": "1666410",
    "end": "1673850"
  },
  {
    "text": "speaking in a probabilistic way will succeed eventually because the the concurrent writes will normalize in a",
    "start": "1673850",
    "end": "1678980"
  },
  {
    "start": "1678000",
    "end": "1933000"
  },
  {
    "text": "way where we get we sneak in at some point and we we store those requests in and so if we take a look then so this is",
    "start": "1678980",
    "end": "1687200"
  },
  {
    "text": "what happens go back over to our demo over here and now we can say server six",
    "start": "1687200",
    "end": "1698150"
  },
  {
    "text": "so this is a replica it's a you can see here this is a service and we're combining we have spread here that is",
    "start": "1698150",
    "end": "1705950"
  },
  {
    "text": "spread across three replicas it's got the service function and it's doing exactly this storage thing that that I'm",
    "start": "1705950",
    "end": "1713720"
  },
  {
    "text": "asking for all right and then it's going to return back the number of requests and so that you know that I'm not",
    "start": "1713720",
    "end": "1719660"
  },
  {
    "text": "cheating the server name so that you'll actually be able to tell that the server is going in different places and now you",
    "start": "1719660",
    "end": "1725630"
  },
  {
    "text": "say well you know what I'm going to say I'm going to Redis is my backing story it's this is implemented in a pluggable way you can",
    "start": "1725630",
    "end": "1731260"
  },
  {
    "text": "plug in different storage layers as long as they support optimistic concurrency or can be made to support optimistic concurrency we can support any kind of",
    "start": "1731260",
    "end": "1738940"
  },
  {
    "text": "storage layer on and one of the other pieces is this this is really gonna feel",
    "start": "1738940",
    "end": "1743950"
  },
  {
    "text": "like writing a program and running a program on your local machine well you need to take your environment variables on that local machine into effect so if",
    "start": "1743950",
    "end": "1750550"
  },
  {
    "text": "you were paying attention earlier you may have I'm going to delete the previous we're going to leave this because just to get cleaned some stuff",
    "start": "1750550",
    "end": "1757120"
  },
  {
    "text": "up all right if you're pretty attention",
    "start": "1757120",
    "end": "1763870"
  },
  {
    "text": "earlier when I listed the services you'll see that there's this Redis service running here and now I'm going",
    "start": "1763870",
    "end": "1769600"
  },
  {
    "text": "to take that cluster IP and I'm in control show copy it and I'm gonna say export Redis host equals this service",
    "start": "1769600",
    "end": "1779800"
  },
  {
    "text": "right this is a local environment variable there's an environment variable in my shell and yet what I'm gonna do",
    "start": "1779800",
    "end": "1785410"
  },
  {
    "text": "when I'm doing that deployment is I'm actually going to introspect the environment variables across my shell I'm gonna push those environment",
    "start": "1785410",
    "end": "1790960"
  },
  {
    "text": "variables into the container right because I want the experience of running it on my machine to look and feel like",
    "start": "1790960",
    "end": "1797170"
  },
  {
    "text": "the experience of running it in that container I'm gonna grab those things push them up and so by knowing that this",
    "start": "1797170",
    "end": "1804580"
  },
  {
    "text": "is the Redis host that I want to talk to it's going to also be the Redis host that we talk to inside the container and",
    "start": "1804580",
    "end": "1809920"
  },
  {
    "text": "so then I can say node server 6j yes all",
    "start": "1809920",
    "end": "1822880"
  },
  {
    "text": "right and we'll run that so again it's gonna build the image it's going to deploy that out now if you say cube",
    "start": "1822880",
    "end": "1828280"
  },
  {
    "text": "control get pods it's in the midst of creating this replicated service with",
    "start": "1828280",
    "end": "1834220"
  },
  {
    "text": "the shard you know the shard front end at the beginning eventually we will get there all right we're up and running on so we",
    "start": "1834220",
    "end": "1840520"
  },
  {
    "text": "can say get services you'll grab that",
    "start": "1840520",
    "end": "1845530"
  },
  {
    "text": "shard over here we'll go over here and",
    "start": "1845530",
    "end": "1852750"
  },
  {
    "text": "my final act of faith to the demo gods I'll see if this demo runs",
    "start": "1852750",
    "end": "1857889"
  },
  {
    "text": "mm anybody remember what I called it replicated storage service",
    "start": "1857889",
    "end": "1865690"
  },
  {
    "text": "all right so there you can see request is 14 the and obviously practice this",
    "start": "1872769",
    "end": "1879529"
  },
  {
    "text": "demo a little bit beforehand and the server that it's talking to you know it's a ey ooh I see all right so we can",
    "start": "1879529",
    "end": "1884600"
  },
  {
    "text": "run this again Gress is 15 coming out of the different server and just to give it a really little bit of a stress test we",
    "start": "1884600",
    "end": "1890690"
  },
  {
    "text": "can say 4x in 0 1 2 3 and we'll wear",
    "start": "1890690",
    "end": "1899779"
  },
  {
    "text": "these with an ampersand at the end which means they'll all run in parallel and",
    "start": "1899779",
    "end": "1905080"
  },
  {
    "text": "they're lagging in a little bit obviously because of the the conflicts",
    "start": "1905080",
    "end": "1911179"
  },
  {
    "text": "that happen but you can see we have you know 18 if you can count we have 18 19",
    "start": "1911179",
    "end": "1916639"
  },
  {
    "text": "20 21 22 all like we've counted all of those requests that have come in parallel across all of the different hosts successfully incrementing the",
    "start": "1916639",
    "end": "1923570"
  },
  {
    "text": "counter each time giving the user the illusion that everything is sort of running in this one program on this one machine when it's fact a distributed",
    "start": "1923570",
    "end": "1929779"
  },
  {
    "text": "system all right so that's it here's",
    "start": "1929779",
    "end": "1935600"
  },
  {
    "start": "1933000",
    "end": "2015000"
  },
  {
    "text": "where to go from here it's up on my github this is really the only beginning the beginning I hope and it's a proof of",
    "start": "1935600",
    "end": "1941149"
  },
  {
    "text": "concept at that I showed it to Joe while ago and he said like you've done this horrible thing where you're combining",
    "start": "1941149",
    "end": "1946610"
  },
  {
    "text": "like the definition of you needed you need a stronger abstract syntax tree in there so that we can target go programs",
    "start": "1946610",
    "end": "1953240"
  },
  {
    "text": "so that we can target other kinds of containers and that sort of thing and I think that's definitely what we need we need to build a library of these",
    "start": "1953240",
    "end": "1959179"
  },
  {
    "text": "standard containers so that I'm not actually for things like sharding I'm not necessarily relying on this",
    "start": "1959179",
    "end": "1964820"
  },
  {
    "text": "JavaScript container that I've built but actually we have a library of standard containers and so this is just an",
    "start": "1964820",
    "end": "1970880"
  },
  {
    "text": "invitation if you like what you see and you think it's interesting please come hang out and work on this with me if it's terrible as I said",
    "start": "1970880",
    "end": "1977659"
  },
  {
    "text": "please don't blame my employer and thank you so much for coming to cube Khan and",
    "start": "1977659",
    "end": "1982880"
  },
  {
    "text": "for being interested in kubernetes",
    "start": "1982880",
    "end": "1986200"
  },
  {
    "text": "have any questions I guess before yeah",
    "start": "1992780",
    "end": "1997280"
  },
  {
    "text": "other than general familiarity what was your overriding reason for choosing an",
    "start": "2005020",
    "end": "2010610"
  },
  {
    "text": "imperative language over a functional versus declarative I don't think there",
    "start": "2010610",
    "end": "2015860"
  },
  {
    "start": "2015000",
    "end": "2370000"
  },
  {
    "text": "was one I think that yeah I think that",
    "start": "2015860",
    "end": "2021290"
  },
  {
    "text": "node is where I'm hacked i hack fastest I guess these days that's probably the head limited amount of time so I this",
    "start": "2021290",
    "end": "2030770"
  },
  {
    "text": "looks great in most applications however you combine a lot of these different patterns so how",
    "start": "2030770",
    "end": "2036980"
  },
  {
    "text": "do you get a most multiple of those like different sharding and all combining to",
    "start": "2036980",
    "end": "2042620"
  },
  {
    "text": "make in one application I guess I wouldn't I don't think in the context of a single micro service you're going to",
    "start": "2042620",
    "end": "2048200"
  },
  {
    "text": "combine those patterns together except for this sort of storage and sharding so the goal in exposing them all as",
    "start": "2048200",
    "end": "2054138"
  },
  {
    "text": "kubernetes services is that that is you know that's one of your micro services and and I think I definitely believe in",
    "start": "2054139",
    "end": "2060530"
  },
  {
    "text": "decoupling micro services so I don't think that we want to build the topology of like this is how all my micro",
    "start": "2060530",
    "end": "2065990"
  },
  {
    "text": "services connect to each other and so I the hope is that that's the way you",
    "start": "2065990",
    "end": "2072800"
  },
  {
    "text": "achieve it is that each one of these pieces of code is conceptually one application it's conceptually one micro service the linking of the micro",
    "start": "2072800",
    "end": "2079760"
  },
  {
    "text": "services together is something that the program's can do just like calling any other web service so I think that's that's the way I would think about it",
    "start": "2079760",
    "end": "2086169"
  },
  {
    "text": "yeah so what do you do with the pieces of the language that can't actually support that distributed execution like",
    "start": "2086169",
    "end": "2092030"
  },
  {
    "text": "if you had a global and your node program and yeah that's the part where that's the part where you can't write that's the part where you have to talk",
    "start": "2092030",
    "end": "2098750"
  },
  {
    "text": "to I mean that's why we have scope the scope and storage like scope is trying to give you enough of a global issue I",
    "start": "2098750",
    "end": "2105560"
  },
  {
    "text": "looking thing that you can that people can adapt but obviously like we can't we",
    "start": "2105560",
    "end": "2111080"
  },
  {
    "text": "can't go from that world to distributed systems without a little bit of you know is there like a clear enough surface",
    "start": "2111080",
    "end": "2116330"
  },
  {
    "text": "area of features of the language that have to be excluded or don't think that there are any pieces I guess what I would say aside the goal is",
    "start": "2116330",
    "end": "2122170"
  },
  {
    "text": "that there aren't any pieces of the language that are excluded it's just that you say like hey you know that thing that you declared is var up here",
    "start": "2122170",
    "end": "2127750"
  },
  {
    "text": "in the top level of your thing you need to say NP dot scope global can you detect that at compile time",
    "start": "2127750",
    "end": "2133390"
  },
  {
    "text": "yes hi really interesting one question would",
    "start": "2133390",
    "end": "2140230"
  },
  {
    "text": "you say that you want to abstract that from the language level right so build a library that doesn't only understand",
    "start": "2140230",
    "end": "2147070"
  },
  {
    "text": "JavaScript can be whatever language so actually when you do that aren't you going one step behind",
    "start": "2147070",
    "end": "2152370"
  },
  {
    "text": "separating again your program from the actual topology yeah I think you can you I mean I think you can view it though",
    "start": "2152370",
    "end": "2158320"
  },
  {
    "text": "and I think that's why I I think that's why I ended up where I was and I think this is that's why I ended up with the system that I built but I do think it's",
    "start": "2158320",
    "end": "2165910"
  },
  {
    "text": "important to realize that there will be bits and pieces that you take from behind right like that you take from you",
    "start": "2165910",
    "end": "2171520"
  },
  {
    "text": "have stuff that you've already written you have code that you've already built or you have code that someone else has written that you want to reuse I think",
    "start": "2171520",
    "end": "2176920"
  },
  {
    "text": "it's important that whatever we build in this world be extensible in that way it may not be the happy path it may not be",
    "start": "2176920",
    "end": "2182080"
  },
  {
    "text": "the the best path but I think it's important that it be possible so that's I guess that's that's my main motivation",
    "start": "2182080",
    "end": "2187810"
  },
  {
    "text": "and have you thought maybe you can combine it with existing services like for instance when you do the scattering",
    "start": "2187810",
    "end": "2193210"
  },
  {
    "text": "or the load balancing you can include like eh a proxy under right and so then yeah that would be the other thing is",
    "start": "2193210",
    "end": "2198400"
  },
  {
    "text": "like yeah you don't I don't I think it's silly especially in the replicated service world where there isn't any user code that's running there it's silly",
    "start": "2198400",
    "end": "2204910"
  },
  {
    "text": "that it's not a che proxy and I think there's also and the other reason to say you want to abstract it from the language is I think that we instead of",
    "start": "2204910",
    "end": "2211360"
  },
  {
    "text": "saying like hey you need to define your function in JavaScript and then I'll call your sharding function in",
    "start": "2211360",
    "end": "2216580"
  },
  {
    "text": "JavaScript you can say like hey your sharding function needs to implement this webhook and I'll have a shard or",
    "start": "2216580",
    "end": "2222070"
  },
  {
    "text": "that calls that's it's a sidecar in the pod with you that calls into your into",
    "start": "2222070",
    "end": "2227410"
  },
  {
    "text": "your function HTTP web hook style gets a response back and then does the sharding",
    "start": "2227410",
    "end": "2232540"
  },
  {
    "text": "and i think that that is a more sort of sustainable flexible pattern going forward it's a little bit less pretty",
    "start": "2232540",
    "end": "2237720"
  },
  {
    "text": "but yeah",
    "start": "2237720",
    "end": "2241170"
  },
  {
    "text": "no I think this is always gonna be something on top yeah I mean I think at the limit in the limit what I would say",
    "start": "2246870",
    "end": "2252280"
  },
  {
    "text": "is that I could imagine doing these things as third party resources right so you define like hey this is what it",
    "start": "2252280",
    "end": "2257920"
  },
  {
    "text": "means to be a sharted service here's a third party resource definition use this container as my sharding function use",
    "start": "2257920",
    "end": "2263320"
  },
  {
    "text": "this container as my lief function and when I create that third party resource it poops everything into existence I",
    "start": "2263320",
    "end": "2269500"
  },
  {
    "text": "could imagine doing it that way it becomes more declarative and I think it depends on whether you're an integrator",
    "start": "2269500",
    "end": "2275200"
  },
  {
    "text": "versus a developer I think we wear those different hats at different times some people you know sometimes and some people are just kind of integrating",
    "start": "2275200",
    "end": "2281470"
  },
  {
    "text": "different pieces together to make something that works and sometimes you're writing your program whole cloth from scratch they're kind of two",
    "start": "2281470",
    "end": "2287410"
  },
  {
    "text": "different experiences for many distributed algorithms you need to maintain state about individual",
    "start": "2287410",
    "end": "2293590"
  },
  {
    "text": "elements you know like state machines as far as what say there are let's say simpler consensus you know how do you",
    "start": "2293590",
    "end": "2299770"
  },
  {
    "text": "envision supporting so I'm not sure that",
    "start": "2299770",
    "end": "2305890"
  },
  {
    "text": "I mean so easily you could easily with that global scope you could maintain a state machine state if you wanted to",
    "start": "2305890",
    "end": "2311860"
  },
  {
    "text": "right because again it's like it's a read update right so if you have if you're doing a distributed advancing of",
    "start": "2311860",
    "end": "2318430"
  },
  {
    "text": "a state machine it's gonna read the current state it's gonna do an advance it's gonna try and write the state back if there's a conflict because somebody",
    "start": "2318430",
    "end": "2325150"
  },
  {
    "text": "else picked it up then it'll ignore that particular computation right now it's",
    "start": "2325150",
    "end": "2332470"
  },
  {
    "text": "quite possible that that you don't want that kind of optimistic concurrency in a state machine right everything that I've",
    "start": "2332470",
    "end": "2339190"
  },
  {
    "text": "done here is entirely about optimistic concurrency there's definitely some distributed system patterns where you want to have a clear owner right where",
    "start": "2339190",
    "end": "2345250"
  },
  {
    "text": "you want to say this person they're the owner and I think we need to figure out in that same kind of spirit how do you",
    "start": "2345250",
    "end": "2351010"
  },
  {
    "text": "build that into this right how do you take that idea of an owner a master elector maybe or something like that and",
    "start": "2351010",
    "end": "2356620"
  },
  {
    "text": "make it work what's the program that we write for that and I haven't done that yet right we need that's why we need",
    "start": "2356620",
    "end": "2361900"
  },
  {
    "text": "help or why I need help thank you yeah all right we're done so thank you so",
    "start": "2361900",
    "end": "2367060"
  },
  {
    "text": "much",
    "start": "2367060",
    "end": "2369210"
  }
]