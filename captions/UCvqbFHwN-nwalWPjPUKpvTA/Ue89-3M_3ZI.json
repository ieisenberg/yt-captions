[
  {
    "text": "who is ready to talk about some ebpf",
    "start": "80",
    "end": "2840"
  },
  {
    "text": "stuff hooray all right fabulous fabulous",
    "start": "2840",
    "end": "7720"
  },
  {
    "text": "um so I'm going to be talking to you",
    "start": "7720",
    "end": "9519"
  },
  {
    "text": "about some lessons that I learned",
    "start": "9519",
    "end": "11120"
  },
  {
    "text": "migrating some",
    "start": "11120",
    "end": "12880"
  },
  {
    "text": "Modern multi-platform ebpf",
    "start": "12880",
    "end": "16920"
  },
  {
    "text": "programs um so I am Dave hello um I work",
    "start": "16920",
    "end": "21519"
  },
  {
    "text": "at Red Hat uh in the office of the CTO",
    "start": "21519",
    "end": "24279"
  },
  {
    "text": "where we do all sorts of things with",
    "start": "24279",
    "end": "25880"
  },
  {
    "text": "ebpf containers networking that type of",
    "start": "25880",
    "end": "28640"
  },
  {
    "text": "thing uh you may have seen me before at",
    "start": "28640",
    "end": "31320"
  },
  {
    "text": "a cubon or Linux plumbers or something",
    "start": "31320",
    "end": "34079"
  },
  {
    "text": "talking about a library called Aya which",
    "start": "34079",
    "end": "36399"
  },
  {
    "text": "is a pure rust uh ebpf library and",
    "start": "36399",
    "end": "39800"
  },
  {
    "text": "allows you to write your ebpf programs",
    "start": "39800",
    "end": "41680"
  },
  {
    "text": "in Rust I'm not talking about that today",
    "start": "41680",
    "end": "43840"
  },
  {
    "text": "though I've done too much rust",
    "start": "43840",
    "end": "45760"
  },
  {
    "text": "evangelism and I get told that it's",
    "start": "45760",
    "end": "47920"
  },
  {
    "text": "boring um I'm also the creator of",
    "start": "47920",
    "end": "50480"
  },
  {
    "text": "something called BPF man which is a uh",
    "start": "50480",
    "end": "53640"
  },
  {
    "text": "ebf program manager for kubernetes that",
    "start": "53640",
    "end": "56559"
  },
  {
    "text": "allows you to run your BPF programs in",
    "start": "56559",
    "end": "58600"
  },
  {
    "text": "kubernetes with out lots of privileges",
    "start": "58600",
    "end": "61760"
  },
  {
    "text": "but I'm not going to talk to you about",
    "start": "61760",
    "end": "62800"
  },
  {
    "text": "that either no I'm talking to you about",
    "start": "62800",
    "end": "65760"
  },
  {
    "text": "some contributions that I've made to",
    "start": "65760",
    "end": "67720"
  },
  {
    "text": "another open source project called",
    "start": "67720",
    "end": "70159"
  },
  {
    "text": "Kepler who has heard of Kepler show your",
    "start": "70159",
    "end": "73479"
  },
  {
    "text": "hands all right that's about three",
    "start": "73479",
    "end": "75520"
  },
  {
    "text": "people in the room so this is good it's",
    "start": "75520",
    "end": "77920"
  },
  {
    "text": "lucky I've got something in here to",
    "start": "77920",
    "end": "79280"
  },
  {
    "text": "explain this uh so Kepler is an acronym",
    "start": "79280",
    "end": "83360"
  },
  {
    "text": "it's a horrible acronym for kubernetes",
    "start": "83360",
    "end": "85680"
  },
  {
    "text": "based efficient power level",
    "start": "85680",
    "end": "87759"
  },
  {
    "text": "exporter um what Kepler is doing",
    "start": "87759",
    "end": "90640"
  },
  {
    "text": "uh is it is getting information about",
    "start": "90640",
    "end": "95000"
  },
  {
    "text": "how much power is used by every process",
    "start": "95000",
    "end": "97720"
  },
  {
    "text": "on a node um and that is useful if you",
    "start": "97720",
    "end": "100640"
  },
  {
    "text": "want to know which applications in your",
    "start": "100640",
    "end": "103000"
  },
  {
    "text": "kubernetes cluster are using the most",
    "start": "103000",
    "end": "104680"
  },
  {
    "text": "power uh because you want to do",
    "start": "104680",
    "end": "106799"
  },
  {
    "text": "something like time a day based",
    "start": "106799",
    "end": "108600"
  },
  {
    "text": "scheduling so you can schedule when your",
    "start": "108600",
    "end": "110119"
  },
  {
    "text": "workloads are Greener or if you want to",
    "start": "110119",
    "end": "112840"
  },
  {
    "text": "uh you have you know Carbon regulations",
    "start": "112840",
    "end": "115600"
  },
  {
    "text": "um it's very very useful I'm",
    "start": "115600",
    "end": "117680"
  },
  {
    "text": "told um Kepler does a lot of stuff um so",
    "start": "117680",
    "end": "121920"
  },
  {
    "text": "much stuff in fact that we're just going",
    "start": "121920",
    "end": "123159"
  },
  {
    "text": "to focus on this bit in red because",
    "start": "123159",
    "end": "125079"
  },
  {
    "text": "that's the ebpf bit and that's the bit",
    "start": "125079",
    "end": "126719"
  },
  {
    "text": "that I most excited about there is",
    "start": "126719",
    "end": "128800"
  },
  {
    "text": "machine learning in here that uh where",
    "start": "128800",
    "end": "130800"
  },
  {
    "text": "we don't have data we're able to",
    "start": "130800",
    "end": "132239"
  },
  {
    "text": "estimate data to give you that power",
    "start": "132239",
    "end": "133959"
  },
  {
    "text": "estimate in the end there is metrics",
    "start": "133959",
    "end": "136400"
  },
  {
    "text": "pipeline in here but we we're just",
    "start": "136400",
    "end": "138840"
  },
  {
    "text": "interested in",
    "start": "138840",
    "end": "141200"
  },
  {
    "text": "ebpf so what the Kepler project is doing",
    "start": "141200",
    "end": "144040"
  },
  {
    "text": "with ebpf is we have a bunch of pmu",
    "start": "144040",
    "end": "147720"
  },
  {
    "text": "events on the CPU which allow to measure",
    "start": "147720",
    "end": "150519"
  },
  {
    "text": "things like number of CPU Cycles used",
    "start": "150519",
    "end": "153720"
  },
  {
    "text": "number of CPU in instructions executed",
    "start": "153720",
    "end": "157239"
  },
  {
    "text": "um uh cache misses all sorts of things",
    "start": "157239",
    "end": "160599"
  },
  {
    "text": "and what we're going to do is attach",
    "start": "160599",
    "end": "162480"
  },
  {
    "text": "those into ebpf per event array so they",
    "start": "162480",
    "end": "165000"
  },
  {
    "text": "can be read by a probe and the",
    "start": "165000",
    "end": "167200"
  },
  {
    "text": "kernel so whenever our sked switch K",
    "start": "167200",
    "end": "171440"
  },
  {
    "text": "probe gets hit uh we know that a task is",
    "start": "171440",
    "end": "174000"
  },
  {
    "text": "going onto the CPU so we're going to go",
    "start": "174000",
    "end": "176720"
  },
  {
    "text": "and read all of these counters to go and",
    "start": "176720",
    "end": "178599"
  },
  {
    "text": "find out what the number of instructions",
    "start": "178599",
    "end": "180920"
  },
  {
    "text": "were on this CPU uh at the time this was",
    "start": "180920",
    "end": "183400"
  },
  {
    "text": "executed Cycles Etc and then we're going",
    "start": "183400",
    "end": "186280"
  },
  {
    "text": "to go and store that in an array over",
    "start": "186280",
    "end": "188280"
  },
  {
    "text": "here the next event that we're going to",
    "start": "188280",
    "end": "190560"
  },
  {
    "text": "read is when a task goes off the CPU or",
    "start": "190560",
    "end": "193840"
  },
  {
    "text": "on and once we know it's going off the",
    "start": "193840",
    "end": "196280"
  },
  {
    "text": "CPU we're going to do the same thing but",
    "start": "196280",
    "end": "198480"
  },
  {
    "text": "kind of in Reverse so we're going to",
    "start": "198480",
    "end": "200000"
  },
  {
    "text": "read the counters we're now going to",
    "start": "200000",
    "end": "201879"
  },
  {
    "text": "read from our array and then we're going",
    "start": "201879",
    "end": "203360"
  },
  {
    "text": "to calculate a Delta between when the",
    "start": "203360",
    "end": "205400"
  },
  {
    "text": "task went on the CPU and when it's going",
    "start": "205400",
    "end": "207480"
  },
  {
    "text": "off the CPU which will then give us that",
    "start": "207480",
    "end": "209799"
  },
  {
    "text": "total number of uh CPU time or CPU",
    "start": "209799",
    "end": "213280"
  },
  {
    "text": "instructions that were executed within",
    "start": "213280",
    "end": "215000"
  },
  {
    "text": "that window and then we're going and pop",
    "start": "215000",
    "end": "216920"
  },
  {
    "text": "that in a hashmap so something else can",
    "start": "216920",
    "end": "218760"
  },
  {
    "text": "go and read it later so this is the the",
    "start": "218760",
    "end": "222319"
  },
  {
    "text": "fine grained implementation details of",
    "start": "222319",
    "end": "225400"
  },
  {
    "text": "how we are getting very very very",
    "start": "225400",
    "end": "227720"
  },
  {
    "text": "precise information about how much CPU",
    "start": "227720",
    "end": "230760"
  },
  {
    "text": "time and how many CPU instructions and",
    "start": "230760",
    "end": "232799"
  },
  {
    "text": "cycles that are given process on the",
    "start": "232799",
    "end": "234400"
  },
  {
    "text": "system was using now those astute uh",
    "start": "234400",
    "end": "237879"
  },
  {
    "text": "observers will have noticed that U",
    "start": "237879",
    "end": "240280"
  },
  {
    "text": "this will work on anything so this would",
    "start": "240280",
    "end": "241959"
  },
  {
    "text": "work in a virtual machine this would",
    "start": "241959",
    "end": "243560"
  },
  {
    "text": "work on normal Linux uh it's not just",
    "start": "243560",
    "end": "245760"
  },
  {
    "text": "about kubernetes but obviously coming",
    "start": "245760",
    "end": "247879"
  },
  {
    "text": "back to our acronym uh if we drop the K",
    "start": "247879",
    "end": "250599"
  },
  {
    "text": "Epler is just not as catchy so there we",
    "start": "250599",
    "end": "254200"
  },
  {
    "text": "go so from the user space stand uh",
    "start": "254200",
    "end": "257160"
  },
  {
    "text": "standpoint we have that hashmap in the",
    "start": "257160",
    "end": "259400"
  },
  {
    "text": "kernel which is going to give us all of",
    "start": "259400",
    "end": "261720"
  },
  {
    "text": "our information about all of these",
    "start": "261720",
    "end": "263360"
  },
  {
    "text": "processes and occasionally uh once our",
    "start": "263360",
    "end": "266520"
  },
  {
    "text": "sample period has elapsed so 3 seconds",
    "start": "266520",
    "end": "269520"
  },
  {
    "text": "we're we're going to go and gather all",
    "start": "269520",
    "end": "270759"
  },
  {
    "text": "of the metrics from the kernel and then",
    "start": "270759",
    "end": "272440"
  },
  {
    "text": "we're going to go and spit them out into",
    "start": "272440",
    "end": "273800"
  },
  {
    "text": "that metrics pipeline that we're not",
    "start": "273800",
    "end": "275280"
  },
  {
    "text": "going to talk about and the way we do",
    "start": "275280",
    "end": "277400"
  },
  {
    "text": "that is we just Batre the whole map so",
    "start": "277400",
    "end": "280000"
  },
  {
    "text": "if we know about 32k processes we're",
    "start": "280000",
    "end": "283199"
  },
  {
    "text": "just going to read 32k entries out the",
    "start": "283199",
    "end": "285320"
  },
  {
    "text": "hashmap and go and push that off into",
    "start": "285320",
    "end": "287639"
  },
  {
    "text": "the",
    "start": "287639",
    "end": "289560"
  },
  {
    "text": "pipeline so why would we want to change",
    "start": "289560",
    "end": "292840"
  },
  {
    "text": "anything well when Kepler started it was",
    "start": "292840",
    "end": "295880"
  },
  {
    "text": "written in",
    "start": "295880",
    "end": "297720"
  },
  {
    "text": "BCC who knows what BCC is all right",
    "start": "297720",
    "end": "301479"
  },
  {
    "text": "that's more than three people so that's",
    "start": "301479",
    "end": "303360"
  },
  {
    "text": "wonderful um so BCC uh is the BPF",
    "start": "303360",
    "end": "306680"
  },
  {
    "text": "compiler collection very cool uh way of",
    "start": "306680",
    "end": "310000"
  },
  {
    "text": "writing your BPF programs in a right",
    "start": "310000",
    "end": "312199"
  },
  {
    "text": "once Run Anywhere type of environment",
    "start": "312199",
    "end": "315160"
  },
  {
    "text": "now what this means for Kepler is that",
    "start": "315160",
    "end": "317919"
  },
  {
    "text": "at compile time we have our application",
    "start": "317919",
    "end": "320720"
  },
  {
    "text": "binary and within that application",
    "start": "320720",
    "end": "323000"
  },
  {
    "text": "binary we have the source code of the",
    "start": "323000",
    "end": "325479"
  },
  {
    "text": "ebpf probe when we go to run that thing",
    "start": "325479",
    "end": "329440"
  },
  {
    "text": "then what happens is within the BCC",
    "start": "329440",
    "end": "332880"
  },
  {
    "text": "Library our source code gets spat out to",
    "start": "332880",
    "end": "336080"
  },
  {
    "text": "llvm which then goes turns the source",
    "start": "336080",
    "end": "338479"
  },
  {
    "text": "code into object code which then goes",
    "start": "338479",
    "end": "340479"
  },
  {
    "text": "and passes the object code to Li BPF",
    "start": "340479",
    "end": "342840"
  },
  {
    "text": "which then loads the object code into",
    "start": "342840",
    "end": "344880"
  },
  {
    "text": "the",
    "start": "344880",
    "end": "345759"
  },
  {
    "text": "kernel now what's very cool about this",
    "start": "345759",
    "end": "348360"
  },
  {
    "text": "is that it gives us portability in so",
    "start": "348360",
    "end": "350600"
  },
  {
    "text": "far",
    "start": "350600",
    "end": "351479"
  },
  {
    "text": "as whatever the runtime Target is we're",
    "start": "351479",
    "end": "355160"
  },
  {
    "text": "going to know that our BPF program is",
    "start": "355160",
    "end": "356840"
  },
  {
    "text": "going to work on it because we've",
    "start": "356840",
    "end": "358639"
  },
  {
    "text": "compiled it specific spefically to work",
    "start": "358639",
    "end": "360560"
  },
  {
    "text": "on that",
    "start": "360560",
    "end": "362199"
  },
  {
    "text": "platform but there are downsides um when",
    "start": "362199",
    "end": "365840"
  },
  {
    "text": "we were packaging uh Kepler with its",
    "start": "365840",
    "end": "368319"
  },
  {
    "text": "bcc-based uh probe implementation we",
    "start": "368319",
    "end": "371520"
  },
  {
    "text": "noticed that the dependencies were kind",
    "start": "371520",
    "end": "374039"
  },
  {
    "text": "of big um so if you were to install BCC",
    "start": "374039",
    "end": "378120"
  },
  {
    "text": "uh it's around about 217 Meg unpacked um",
    "start": "378120",
    "end": "382240"
  },
  {
    "text": "because it uses lib lvm and lib clang",
    "start": "382240",
    "end": "385639"
  },
  {
    "text": "which are fairly large um so that meant",
    "start": "385639",
    "end": "389319"
  },
  {
    "text": "that we kind of had a rather large",
    "start": "389319",
    "end": "392199"
  },
  {
    "text": "package um so we wanted to reduce that",
    "start": "392199",
    "end": "395520"
  },
  {
    "text": "as much as possible the only way to do",
    "start": "395520",
    "end": "398039"
  },
  {
    "text": "that is to move from compiling on the",
    "start": "398039",
    "end": "400479"
  },
  {
    "text": "target system uh at runtime to compiling",
    "start": "400479",
    "end": "403800"
  },
  {
    "text": "ahead of time which leads us to why we",
    "start": "403800",
    "end": "406599"
  },
  {
    "text": "might want to go down a lib BPF only",
    "start": "406599",
    "end": "410080"
  },
  {
    "text": "approach so the flow in Li BPF is a",
    "start": "410080",
    "end": "413360"
  },
  {
    "text": "little bit different so at compile time",
    "start": "413360",
    "end": "416879"
  },
  {
    "text": "we now have two artifacts um you could",
    "start": "416879",
    "end": "419639"
  },
  {
    "text": "put them both together but we'll just",
    "start": "419639",
    "end": "421360"
  },
  {
    "text": "imagine them as two uh we have our",
    "start": "421360",
    "end": "423720"
  },
  {
    "text": "application binary which runs in Newland",
    "start": "423720",
    "end": "426039"
  },
  {
    "text": "and then we have our ebpf object file uh",
    "start": "426039",
    "end": "428879"
  },
  {
    "text": "and at runtime there is no compilation",
    "start": "428879",
    "end": "431240"
  },
  {
    "text": "phase anymore we just let give that",
    "start": "431240",
    "end": "433360"
  },
  {
    "text": "straight to uh Li BPF Li BPF can then go",
    "start": "433360",
    "end": "437080"
  },
  {
    "text": "pop that into the",
    "start": "437080",
    "end": "438960"
  },
  {
    "text": "kernel now the compromise here is that",
    "start": "438960",
    "end": "442120"
  },
  {
    "text": "running anywhere requires some assembly",
    "start": "442120",
    "end": "445639"
  },
  {
    "text": "uh from the uh from the program author",
    "start": "445639",
    "end": "449560"
  },
  {
    "text": "uh not assembly is in assembly ASM code",
    "start": "449560",
    "end": "453319"
  },
  {
    "text": "but you you are required to take",
    "start": "453319",
    "end": "455879"
  },
  {
    "text": "additional steps uh so if you are using",
    "start": "455879",
    "end": "459319"
  },
  {
    "text": "K probes or Trace points or something",
    "start": "459319",
    "end": "461560"
  },
  {
    "text": "you may be familiar with VM linux. which",
    "start": "461560",
    "end": "464520"
  },
  {
    "text": "is generated from the kernel debug info",
    "start": "464520",
    "end": "468199"
  },
  {
    "text": "uh that gives us very nice uh mappings",
    "start": "468199",
    "end": "470919"
  },
  {
    "text": "to all of the data structures there that",
    "start": "470919",
    "end": "472400"
  },
  {
    "text": "we could potentially use now the problem",
    "start": "472400",
    "end": "474759"
  },
  {
    "text": "is VM Linux is architecture specific so",
    "start": "474759",
    "end": "478199"
  },
  {
    "text": "we need to make sure that we've got one",
    "start": "478199",
    "end": "479680"
  },
  {
    "text": "of these for every Target architecture",
    "start": "479680",
    "end": "481560"
  },
  {
    "text": "that we could potentially be targeting",
    "start": "481560",
    "end": "483520"
  },
  {
    "text": "and with Kepler was at least four um",
    "start": "483520",
    "end": "486639"
  },
  {
    "text": "that we had to take care of each one of",
    "start": "486639",
    "end": "489520"
  },
  {
    "text": "these VM Linux files is three Meg each",
    "start": "489520",
    "end": "491840"
  },
  {
    "text": "and they were all checked in uh to",
    "start": "491840",
    "end": "493840"
  },
  {
    "text": "source code uh in our repository um this",
    "start": "493840",
    "end": "497479"
  },
  {
    "text": "raised my eyebrows um because they are",
    "start": "497479",
    "end": "500720"
  },
  {
    "text": "big files for one but for two there was",
    "start": "500720",
    "end": "503199"
  },
  {
    "text": "no information about how they got there",
    "start": "503199",
    "end": "505120"
  },
  {
    "text": "who made them what kernel version they",
    "start": "505120",
    "end": "506879"
  },
  {
    "text": "were generated on um we had to then sort",
    "start": "506879",
    "end": "510960"
  },
  {
    "text": "of conditionally include each one of",
    "start": "510960",
    "end": "512599"
  },
  {
    "text": "these based on the target platform when",
    "start": "512599",
    "end": "514120"
  },
  {
    "text": "we were doing",
    "start": "514120",
    "end": "515200"
  },
  {
    "text": "compilation and yeah it wasn't it wasn't",
    "start": "515200",
    "end": "518800"
  },
  {
    "text": "ideal um so like I said VM uh VM linux.",
    "start": "518800",
    "end": "524039"
  },
  {
    "text": "built from the BTF of the running kernel",
    "start": "524039",
    "end": "526240"
  },
  {
    "text": "contains important type defs for things",
    "start": "526240",
    "end": "528600"
  },
  {
    "text": "like ptge for the CPU registers on the",
    "start": "528600",
    "end": "530800"
  },
  {
    "text": "target system which is useful if you're",
    "start": "530800",
    "end": "532440"
  },
  {
    "text": "working with Trace Point objects and K",
    "start": "532440",
    "end": "535040"
  },
  {
    "text": "probes and things like that um and Corey",
    "start": "535040",
    "end": "537880"
  },
  {
    "text": "typed s for all the struct US in the",
    "start": "537880",
    "end": "539640"
  },
  {
    "text": "kernel so if you want to use task struct",
    "start": "539640",
    "end": "541200"
  },
  {
    "text": "or something it's going to be there you",
    "start": "541200",
    "end": "542800"
  },
  {
    "text": "don't need to write your own one all",
    "start": "542800",
    "end": "544680"
  },
  {
    "text": "very",
    "start": "544680",
    "end": "547000"
  },
  {
    "text": "simple so",
    "start": "547000",
    "end": "550880"
  },
  {
    "text": "modernization when we started out and",
    "start": "550880",
    "end": "553240"
  },
  {
    "text": "when I came into the project there was",
    "start": "553240",
    "end": "555079"
  },
  {
    "text": "already a um Port from BCC to lib BPF uh",
    "start": "555079",
    "end": "561200"
  },
  {
    "text": "in process and that revolved around uh a",
    "start": "561200",
    "end": "565760"
  },
  {
    "text": "complete rewrite I say rewrite it was",
    "start": "565760",
    "end": "567839"
  },
  {
    "text": "more like copy paste and then change",
    "start": "567839",
    "end": "569480"
  },
  {
    "text": "some things until it compiles of the BCC",
    "start": "569480",
    "end": "572120"
  },
  {
    "text": "probes um over to something which works",
    "start": "572120",
    "end": "575519"
  },
  {
    "text": "with li BPF uh and then the choice was",
    "start": "575519",
    "end": "578800"
  },
  {
    "text": "made to use lib BPF go as the go library",
    "start": "578800",
    "end": "582240"
  },
  {
    "text": "of choice um because in the background",
    "start": "582240",
    "end": "585640"
  },
  {
    "text": "uh it uses Li",
    "start": "585640",
    "end": "587720"
  },
  {
    "text": "BPF um there were a few other things to",
    "start": "587720",
    "end": "590560"
  },
  {
    "text": "mention here about this when they",
    "start": "590560",
    "end": "591839"
  },
  {
    "text": "started poking around the code um we had",
    "start": "591839",
    "end": "595240"
  },
  {
    "text": "these Artisan handcrafted data",
    "start": "595240",
    "end": "597480"
  },
  {
    "text": "structures that allowed the go code to",
    "start": "597480",
    "end": "600399"
  },
  {
    "text": "read the uh data that was in the ebpf",
    "start": "600399",
    "end": "603560"
  },
  {
    "text": "map so it was a uh exercise for the",
    "start": "603560",
    "end": "608640"
  },
  {
    "text": "developer to ensure that what was in the",
    "start": "608640",
    "end": "612079"
  },
  {
    "text": "kernel code actually mapped up with what",
    "start": "612079",
    "end": "614720"
  },
  {
    "text": "was in the go",
    "start": "614720",
    "end": "617040"
  },
  {
    "text": "code it used see go um which was slow uh",
    "start": "617040",
    "end": "621720"
  },
  {
    "text": "but also from a build standpoint uh the",
    "start": "621720",
    "end": "624880"
  },
  {
    "text": "builds took longer uh and our build",
    "start": "624880",
    "end": "627240"
  },
  {
    "text": "environment became very specific",
    "start": "627240",
    "end": "629320"
  },
  {
    "text": "specific we needed to have a very",
    "start": "629320",
    "end": "631480"
  },
  {
    "text": "specific version of Li BPF static",
    "start": "631480",
    "end": "633920"
  },
  {
    "text": "available uh at Bill time which meant",
    "start": "633920",
    "end": "636480"
  },
  {
    "text": "trying to get people to build the",
    "start": "636480",
    "end": "637760"
  },
  {
    "text": "project was uh increasingly difficult",
    "start": "637760",
    "end": "640839"
  },
  {
    "text": "there was make file magic uh that made",
    "start": "640839",
    "end": "643360"
  },
  {
    "text": "all of this come together and we were",
    "start": "643360",
    "end": "646160"
  },
  {
    "text": "loading um the object file from some",
    "start": "646160",
    "end": "649360"
  },
  {
    "text": "arbitrary location on disk um and",
    "start": "649360",
    "end": "653639"
  },
  {
    "text": "because of all of the VM Linux magic it",
    "start": "653639",
    "end": "656279"
  },
  {
    "text": "wasn't particularly",
    "start": "656279",
    "end": "657920"
  },
  {
    "text": "portable um so on our kernel side we had",
    "start": "657920",
    "end": "661079"
  },
  {
    "text": "our K probes we had our Trace points and",
    "start": "661079",
    "end": "663200"
  },
  {
    "text": "we had all of this big VM Linux stuff",
    "start": "663200",
    "end": "665720"
  },
  {
    "text": "checked into the",
    "start": "665720",
    "end": "668120"
  },
  {
    "text": "repository so where we wanted to go was",
    "start": "668120",
    "end": "671760"
  },
  {
    "text": "we were going to make some changes so on",
    "start": "671760",
    "end": "674480"
  },
  {
    "text": "the Kernel side we're going to make some",
    "start": "674480",
    "end": "676600"
  },
  {
    "text": "changes and hopefully we're going to get",
    "start": "676600",
    "end": "678399"
  },
  {
    "text": "rid of that VM Linux stuff on the user",
    "start": "678399",
    "end": "681440"
  },
  {
    "text": "space side we're going to make some",
    "start": "681440",
    "end": "682959"
  },
  {
    "text": "changes as well uh we're going to",
    "start": "682959",
    "end": "685279"
  },
  {
    "text": "potentially look at changing the ebpf",
    "start": "685279",
    "end": "687399"
  },
  {
    "text": "library used uh to get rid of the uh",
    "start": "687399",
    "end": "691600"
  },
  {
    "text": "handcrafted stuff and make that",
    "start": "691600",
    "end": "694240"
  },
  {
    "text": "autogenerated to get rid of the SEO and",
    "start": "694240",
    "end": "696680"
  },
  {
    "text": "have something that runs in pure go um",
    "start": "696680",
    "end": "699680"
  },
  {
    "text": "to get rid of the make file magic and",
    "start": "699680",
    "end": "701320"
  },
  {
    "text": "have something which is simple and",
    "start": "701320",
    "end": "702959"
  },
  {
    "text": "easier to understand for a go developer",
    "start": "702959",
    "end": "705680"
  },
  {
    "text": "to embed the elf file inside the binary",
    "start": "705680",
    "end": "708079"
  },
  {
    "text": "so we don't have two things to ship",
    "start": "708079",
    "end": "709600"
  },
  {
    "text": "around everywhere which means a build on",
    "start": "709600",
    "end": "711600"
  },
  {
    "text": "my machine I should be able to go and",
    "start": "711600",
    "end": "713880"
  },
  {
    "text": "SCP off to a test server run it and it",
    "start": "713880",
    "end": "716760"
  },
  {
    "text": "will just work and hopefully get to a",
    "start": "716760",
    "end": "719320"
  },
  {
    "text": "situation where uh we have a much more",
    "start": "719320",
    "end": "722680"
  },
  {
    "text": "portable ebpf",
    "start": "722680",
    "end": "725760"
  },
  {
    "text": "codebase so by modern uh we set a bar",
    "start": "725760",
    "end": "729399"
  },
  {
    "text": "and said kernel 512 is going to be the",
    "start": "729399",
    "end": "732120"
  },
  {
    "text": "lowest that we're going to support um",
    "start": "732120",
    "end": "734639"
  },
  {
    "text": "which is a a long-term H supported",
    "start": "734639",
    "end": "737040"
  },
  {
    "text": "kernel at least or there's an LTS near",
    "start": "737040",
    "end": "739959"
  },
  {
    "text": "there um and for multiplatform what we",
    "start": "739959",
    "end": "743000"
  },
  {
    "text": "wanted was just two variants of our abpf",
    "start": "743000",
    "end": "745600"
  },
  {
    "text": "probe one that's little Indian and one",
    "start": "745600",
    "end": "747839"
  },
  {
    "text": "that's big Indian those are only two",
    "start": "747839",
    "end": "749680"
  },
  {
    "text": "variants that we should ever need uh we",
    "start": "749680",
    "end": "751880"
  },
  {
    "text": "still do need one binary per platform",
    "start": "751880",
    "end": "754079"
  },
  {
    "text": "but from the ebpf side things are so",
    "start": "754079",
    "end": "756279"
  },
  {
    "text": "much simpler than having to have an ebpf",
    "start": "756279",
    "end": "759079"
  },
  {
    "text": "probe for every Target architecture and",
    "start": "759079",
    "end": "761040"
  },
  {
    "text": "potentially for different kernel",
    "start": "761040",
    "end": "762560"
  },
  {
    "text": "versions on different Target",
    "start": "762560",
    "end": "763680"
  },
  {
    "text": "architectures as",
    "start": "763680",
    "end": "766480"
  },
  {
    "text": "well so we made some changes on the ebpf",
    "start": "766560",
    "end": "771399"
  },
  {
    "text": "side we looked at the K probes that we",
    "start": "771399",
    "end": "774160"
  },
  {
    "text": "were using and it became immediately",
    "start": "774160",
    "end": "776199"
  },
  {
    "text": "obvious that we didn't have to use K",
    "start": "776199",
    "end": "777959"
  },
  {
    "text": "probes uh we could use Trace points um",
    "start": "777959",
    "end": "781120"
  },
  {
    "text": "there were some advantages to trace",
    "start": "781120",
    "end": "782760"
  },
  {
    "text": "points that uh they don't change uh the",
    "start": "782760",
    "end": "785320"
  },
  {
    "text": "ABI is stable so uh the kernel can",
    "start": "785320",
    "end": "787839"
  },
  {
    "text": "continue to uh evolve and our Trace",
    "start": "787839",
    "end": "790800"
  },
  {
    "text": "points will just work and since the",
    "start": "790800",
    "end": "793240"
  },
  {
    "text": "format is well defined uh we shouldn't",
    "start": "793240",
    "end": "795360"
  },
  {
    "text": "need to worry about the VM linux.",
    "start": "795360",
    "end": "797320"
  },
  {
    "text": "anymore uh we can just write the the",
    "start": "797320",
    "end": "799360"
  },
  {
    "text": "little bits of code that we need to deal",
    "start": "799360",
    "end": "801040"
  },
  {
    "text": "with that everything should just work",
    "start": "801040",
    "end": "803079"
  },
  {
    "text": "fine uh the only con to doing this is",
    "start": "803079",
    "end": "805880"
  },
  {
    "text": "that one of the places that we were",
    "start": "805880",
    "end": "807279"
  },
  {
    "text": "using K probe didn't have a Trace point",
    "start": "807279",
    "end": "810000"
  },
  {
    "text": "but that's fine we'll we'll cover that",
    "start": "810000",
    "end": "813079"
  },
  {
    "text": "later so removing VM linux. was fairly",
    "start": "813079",
    "end": "816760"
  },
  {
    "text": "trivial if you head into uh CIS kernel",
    "start": "816760",
    "end": "820000"
  },
  {
    "text": "tracing events you can go and get the",
    "start": "820000",
    "end": "821839"
  },
  {
    "text": "format of all the trace points on the",
    "start": "821839",
    "end": "823760"
  },
  {
    "text": "system and there there's a little",
    "start": "823760",
    "end": "826519"
  },
  {
    "text": "section at the beginning that says",
    "start": "826519",
    "end": "828440"
  },
  {
    "text": "common stuff do not read this um you",
    "start": "828440",
    "end": "831600"
  },
  {
    "text": "need to start reading after the first uh",
    "start": "831600",
    "end": "834320"
  },
  {
    "text": "you know the first field starts here",
    "start": "834320",
    "end": "836920"
  },
  {
    "text": "basically and if you go and look all",
    "start": "836920",
    "end": "839120"
  },
  {
    "text": "over the internet you'll find a pattern",
    "start": "839120",
    "end": "840720"
  },
  {
    "text": "that looks like this unsigned long pad",
    "start": "840720",
    "end": "843480"
  },
  {
    "text": "you know will just won't touch that",
    "start": "843480",
    "end": "845079"
  },
  {
    "text": "first eight",
    "start": "845079",
    "end": "846800"
  },
  {
    "text": "bytes",
    "start": "846800",
    "end": "848639"
  },
  {
    "text": "now this is fine right because that",
    "start": "848639",
    "end": "851839"
  },
  {
    "text": "that's never going to not be 8",
    "start": "851839",
    "end": "855000"
  },
  {
    "text": "bytes um I made the changes I felt",
    "start": "855000",
    "end": "857920"
  },
  {
    "text": "really chuffed um shipped a new version",
    "start": "857920",
    "end": "861839"
  },
  {
    "text": "and suddenly we started getting bug",
    "start": "861839",
    "end": "863639"
  },
  {
    "text": "reports of do you know this isn't",
    "start": "863639",
    "end": "865800"
  },
  {
    "text": "working on",
    "start": "865800",
    "end": "867839"
  },
  {
    "text": "real now now when they say not working",
    "start": "867839",
    "end": "871519"
  },
  {
    "text": "it loaded into the kernel just fine um",
    "start": "871519",
    "end": "874040"
  },
  {
    "text": "but all the values that were getting uh",
    "start": "874040",
    "end": "876360"
  },
  {
    "text": "added for CPU time they were just",
    "start": "876360",
    "end": "879959"
  },
  {
    "text": "garbage now I was confused um but we",
    "start": "879959",
    "end": "883639"
  },
  {
    "text": "started doing some digging and we found",
    "start": "883639",
    "end": "885800"
  },
  {
    "text": "out that on not rail um offset is eight",
    "start": "885800",
    "end": "890759"
  },
  {
    "text": "which is what we expected but on real",
    "start": "890759",
    "end": "894720"
  },
  {
    "text": "offset is",
    "start": "894720",
    "end": "896759"
  },
  {
    "text": "12 and 12 is not F so all of our reads",
    "start": "896759",
    "end": "901720"
  },
  {
    "text": "were off um causing our probe to just",
    "start": "901720",
    "end": "905360"
  },
  {
    "text": "not work catastrophically which is is",
    "start": "905360",
    "end": "907839"
  },
  {
    "text": "quite awful really um and this all turns",
    "start": "907839",
    "end": "910360"
  },
  {
    "text": "out that in real uh some work was done",
    "start": "910360",
    "end": "913240"
  },
  {
    "text": "to merge the realtime patches with the",
    "start": "913240",
    "end": "915480"
  },
  {
    "text": "kernel so we have one version in so",
    "start": "915480",
    "end": "917399"
  },
  {
    "text": "things are slightly different here and",
    "start": "917399",
    "end": "919360"
  },
  {
    "text": "it's incredibly annoying because now my",
    "start": "919360",
    "end": "921639"
  },
  {
    "text": "Trace point doesn't work now if we'd",
    "start": "921639",
    "end": "924240"
  },
  {
    "text": "have stuck sorry coming back here a",
    "start": "924240",
    "end": "925759"
  },
  {
    "text": "minute if we'd have stuck with vm.",
    "start": "925759",
    "end": "927480"
  },
  {
    "text": "linux. this would have probably been",
    "start": "927480",
    "end": "929839"
  },
  {
    "text": "fine because that structure at the",
    "start": "929839",
    "end": "931720"
  },
  {
    "text": "beginning that Trace entry one um that",
    "start": "931720",
    "end": "934720"
  },
  {
    "text": "that would have automatically updated",
    "start": "934720",
    "end": "936279"
  },
  {
    "text": "itself but because we removed VM Linux",
    "start": "936279",
    "end": "938319"
  },
  {
    "text": "we kind of fell into a",
    "start": "938319",
    "end": "940199"
  },
  {
    "text": "trap but turns out the uh kernel does",
    "start": "940199",
    "end": "944240"
  },
  {
    "text": "continue to evolve and there have been",
    "start": "944240",
    "end": "946319"
  },
  {
    "text": "at least two uh large increments to",
    "start": "946319",
    "end": "948800"
  },
  {
    "text": "trace points since then we've had raw",
    "start": "948800",
    "end": "950880"
  },
  {
    "text": "Trace points and my favorite BTF enabled",
    "start": "950880",
    "end": "953880"
  },
  {
    "text": "raw Trace points now these are like",
    "start": "953880",
    "end": "956399"
  },
  {
    "text": "Trace points but better because they are",
    "start": "956399",
    "end": "958560"
  },
  {
    "text": "faster",
    "start": "958560",
    "end": "959639"
  },
  {
    "text": "they are stable enough because we have",
    "start": "959639",
    "end": "962120"
  },
  {
    "text": "BTF that allows us to do all sorts of",
    "start": "962120",
    "end": "964319"
  },
  {
    "text": "cool trickery to make sure that the",
    "start": "964319",
    "end": "966079"
  },
  {
    "text": "things that we want to read are",
    "start": "966079",
    "end": "967759"
  },
  {
    "text": "available for us to read um and they're",
    "start": "967759",
    "end": "970399"
  },
  {
    "text": "pretty easy to work with but more",
    "start": "970399",
    "end": "972319"
  },
  {
    "text": "importantly they don't have the same",
    "start": "972319",
    "end": "974240"
  },
  {
    "text": "issue as the trace points did",
    "start": "974240",
    "end": "977880"
  },
  {
    "text": "originally so I made the change again",
    "start": "977880",
    "end": "981160"
  },
  {
    "text": "and now everything was working um to do",
    "start": "981160",
    "end": "984639"
  },
  {
    "text": "that we are using tasr um but we're",
    "start": "984639",
    "end": "987240"
  },
  {
    "text": "using our own sort of compressed version",
    "start": "987240",
    "end": "989199"
  },
  {
    "text": "of tasr if anybody has seen tasr in the",
    "start": "989199",
    "end": "991519"
  },
  {
    "text": "kernel they will know that it",
    "start": "991519",
    "end": "993000"
  },
  {
    "text": "humongously long uh in here we only care",
    "start": "993000",
    "end": "995480"
  },
  {
    "text": "about PID uh so our tasr only has PID in",
    "start": "995480",
    "end": "998560"
  },
  {
    "text": "it and Cory takes care of doing all of",
    "start": "998560",
    "end": "1000959"
  },
  {
    "text": "the relocations for us to make sure that",
    "start": "1000959",
    "end": "1002720"
  },
  {
    "text": "we just",
    "start": "1002720",
    "end": "1003680"
  },
  {
    "text": "repid as we found out though we also",
    "start": "1003680",
    "end": "1006160"
  },
  {
    "text": "wanted to read the State field and it",
    "start": "1006160",
    "end": "1008160"
  },
  {
    "text": "turns out that that field managed to get",
    "start": "1008160",
    "end": "1009880"
  },
  {
    "text": "itself renamed sometime in the kernel",
    "start": "1009880",
    "end": "1012079"
  },
  {
    "text": "from state to underscore uncore state",
    "start": "1012079",
    "end": "1015120"
  },
  {
    "text": "which was a little bit annoying to say",
    "start": "1015120",
    "end": "1017040"
  },
  {
    "text": "the least but thanks to story uh we were",
    "start": "1017040",
    "end": "1019880"
  },
  {
    "text": "able to get around this by defining",
    "start": "1019880",
    "end": "1021959"
  },
  {
    "text": "ourselves two intermediate structs one",
    "start": "1021959",
    "end": "1024558"
  },
  {
    "text": "task struct old and one task struct new",
    "start": "1024559",
    "end": "1027280"
  },
  {
    "text": "uh and then we're able to just try and",
    "start": "1027280",
    "end": "1029400"
  },
  {
    "text": "use this helper BPF core field exists if",
    "start": "1029400",
    "end": "1032000"
  },
  {
    "text": "it's the old one use the old version if",
    "start": "1032000",
    "end": "1033558"
  },
  {
    "text": "it's a new one use the new version our",
    "start": "1033559",
    "end": "1035520"
  },
  {
    "text": "program compiles passes the verifier all",
    "start": "1035520",
    "end": "1037798"
  },
  {
    "text": "the relocations happen and everything is",
    "start": "1037799",
    "end": "1039720"
  },
  {
    "text": "amazing so Corey is awesome and with",
    "start": "1039720",
    "end": "1042600"
  },
  {
    "text": "these custom Corey types we don't need",
    "start": "1042600",
    "end": "1044280"
  },
  {
    "text": "to worry about VM",
    "start": "1044280",
    "end": "1046360"
  },
  {
    "text": "Linux now for the one case where we",
    "start": "1046360",
    "end": "1048600"
  },
  {
    "text": "didn't have a trace point we could use f",
    "start": "1048600",
    "end": "1050280"
  },
  {
    "text": "exit uh which allows us to hook into the",
    "start": "1050280",
    "end": "1052960"
  },
  {
    "text": "kernel function uh the nice thing about",
    "start": "1052960",
    "end": "1055280"
  },
  {
    "text": "this was we didn't need to read anything",
    "start": "1055280",
    "end": "1057000"
  },
  {
    "text": "from the context at all we just needed",
    "start": "1057000",
    "end": "1058840"
  },
  {
    "text": "to know when that thing happened this",
    "start": "1058840",
    "end": "1061160"
  },
  {
    "text": "isn't a solution for everybody but it",
    "start": "1061160",
    "end": "1062840"
  },
  {
    "text": "was a solution for",
    "start": "1062840",
    "end": "1064559"
  },
  {
    "text": "us which then brings us to how that",
    "start": "1064559",
    "end": "1067120"
  },
  {
    "text": "changed the current state at this point",
    "start": "1067120",
    "end": "1069760"
  },
  {
    "text": "we've got our BTF Trace points our F",
    "start": "1069760",
    "end": "1071840"
  },
  {
    "text": "exit our own cor type definitions and",
    "start": "1071840",
    "end": "1074400"
  },
  {
    "text": "all that VM Linux code is gone the only",
    "start": "1074400",
    "end": "1077039"
  },
  {
    "text": "thing we need to do now is take a look",
    "start": "1077039",
    "end": "1078600"
  },
  {
    "text": "at what what's happening in userland so",
    "start": "1078600",
    "end": "1080919"
  },
  {
    "text": "in summary VM L.H means one probe for",
    "start": "1080919",
    "end": "1083480"
  },
  {
    "text": "every architecture and potentially",
    "start": "1083480",
    "end": "1085600"
  },
  {
    "text": "versions of Kernel if you have that kind",
    "start": "1085600",
    "end": "1087400"
  },
  {
    "text": "of State and d-core State situation um",
    "start": "1087400",
    "end": "1091880"
  },
  {
    "text": "Trace points only stable if you use VM",
    "start": "1091880",
    "end": "1093679"
  },
  {
    "text": "linux. don't fall into that trap and",
    "start": "1093679",
    "end": "1096400"
  },
  {
    "text": "using BTF Trace points f exit and custom",
    "start": "1096400",
    "end": "1098720"
  },
  {
    "text": "Corey types fixed",
    "start": "1098720",
    "end": "1100679"
  },
  {
    "text": "it now for the uh user space portion uh",
    "start": "1100679",
    "end": "1105600"
  },
  {
    "text": "we moved from Li bpfo to the celum e EF",
    "start": "1105600",
    "end": "1109679"
  },
  {
    "text": "Library uh what EF gave us was the",
    "start": "1109679",
    "end": "1113360"
  },
  {
    "text": "fact that it's pure go no SEO involved",
    "start": "1113360",
    "end": "1115799"
  },
  {
    "text": "at all uh there is a very cool tool",
    "start": "1115799",
    "end": "1118559"
  },
  {
    "text": "inside uh the celum ebpf ecosystem",
    "start": "1118559",
    "end": "1121039"
  },
  {
    "text": "called BPF to go that allows us to use",
    "start": "1121039",
    "end": "1123880"
  },
  {
    "text": "go generate to compile our BPF bite code",
    "start": "1123880",
    "end": "1127120"
  },
  {
    "text": "uh it also uh embeds the bite code into",
    "start": "1127120",
    "end": "1130000"
  },
  {
    "text": "our binary which solves our our",
    "start": "1130000",
    "end": "1131640"
  },
  {
    "text": "packaging problem and it also",
    "start": "1131640",
    "end": "1135120"
  },
  {
    "text": "autogenerator for dealing with our ebpf",
    "start": "1135120",
    "end": "1137360"
  },
  {
    "text": "Maps so this BAS basically solves 99% of",
    "start": "1137360",
    "end": "1140559"
  },
  {
    "text": "my issues with the uh previous code just",
    "start": "1140559",
    "end": "1143640"
  },
  {
    "text": "from changing the the library from one",
    "start": "1143640",
    "end": "1145480"
  },
  {
    "text": "to the other we now have only two object",
    "start": "1145480",
    "end": "1148520"
  },
  {
    "text": "files and I can just use go build with",
    "start": "1148520",
    "end": "1151039"
  },
  {
    "text": "go OS and go Arch uh and everything just",
    "start": "1151039",
    "end": "1153919"
  },
  {
    "text": "works so if I want one for myips or I",
    "start": "1153919",
    "end": "1156960"
  },
  {
    "text": "want one for risk 5 I just put in the",
    "start": "1156960",
    "end": "1160000"
  },
  {
    "text": "Necessary Things um and then suddenly",
    "start": "1160000",
    "end": "1162240"
  },
  {
    "text": "I've got a binary which can Target the",
    "start": "1162240",
    "end": "1164320"
  },
  {
    "text": "right platform so this was really really",
    "start": "1164320",
    "end": "1166720"
  },
  {
    "text": "easy to do uh cross builds with",
    "start": "1166720",
    "end": "1169960"
  },
  {
    "text": "um as part of the auto generation we",
    "start": "1169960",
    "end": "1171880"
  },
  {
    "text": "found a bug or a feature um if you look",
    "start": "1171880",
    "end": "1176200"
  },
  {
    "text": "at our our code on the left hand side",
    "start": "1176200",
    "end": "1179520"
  },
  {
    "text": "you'll notice that PID is the first",
    "start": "1179520",
    "end": "1181159"
  },
  {
    "text": "field and uh tgid is the second field uh",
    "start": "1181159",
    "end": "1184520"
  },
  {
    "text": "but if you look on the right hand side",
    "start": "1184520",
    "end": "1186919"
  },
  {
    "text": "uh that's reversed um there are reasons",
    "start": "1186919",
    "end": "1189760"
  },
  {
    "text": "for this uh because the kernel sees uh",
    "start": "1189760",
    "end": "1192240"
  },
  {
    "text": "process IDs and task IDs differently um",
    "start": "1192240",
    "end": "1195280"
  },
  {
    "text": "and we had to uh we had to switch those",
    "start": "1195280",
    "end": "1198080"
  },
  {
    "text": "around uh to make sense if you're",
    "start": "1198080",
    "end": "1200120"
  },
  {
    "text": "looking from user space uh the only",
    "start": "1200120",
    "end": "1202360"
  },
  {
    "text": "problem was we were switching that",
    "start": "1202360",
    "end": "1203679"
  },
  {
    "text": "around in one too many places so we",
    "start": "1203679",
    "end": "1205640"
  },
  {
    "text": "switched it around in the C code and",
    "start": "1205640",
    "end": "1207120"
  },
  {
    "text": "then we switched it around when it came",
    "start": "1207120",
    "end": "1208640"
  },
  {
    "text": "from uh the EF stuff over to our uh our",
    "start": "1208640",
    "end": "1213240"
  },
  {
    "text": "metrix collector um so having that",
    "start": "1213240",
    "end": "1215559"
  },
  {
    "text": "autogeneration there saved us uh from",
    "start": "1215559",
    "end": "1218000"
  },
  {
    "text": "ourselves um and it fixed a",
    "start": "1218000",
    "end": "1221039"
  },
  {
    "text": "bug so just doing that migration um we",
    "start": "1221039",
    "end": "1225440"
  },
  {
    "text": "now got our Auto generated uh data",
    "start": "1225440",
    "end": "1227720"
  },
  {
    "text": "structures no go simplified build",
    "start": "1227720",
    "end": "1230159"
  },
  {
    "text": "embedded Al in binary and uh now",
    "start": "1230159",
    "end": "1232600"
  },
  {
    "text": "completely portable ebpf probes uh which",
    "start": "1232600",
    "end": "1235480"
  },
  {
    "text": "we were very happy about I know I'm",
    "start": "1235480",
    "end": "1238480"
  },
  {
    "text": "running very close up to uh time so uh I",
    "start": "1238480",
    "end": "1241960"
  },
  {
    "text": "did have a but wait there's more section",
    "start": "1241960",
    "end": "1244679"
  },
  {
    "text": "so I will just buzz through that very",
    "start": "1244679",
    "end": "1246200"
  },
  {
    "text": "quickly uh because uh aside from uh some",
    "start": "1246200",
    "end": "1250159"
  },
  {
    "text": "of the more obvious features of ebpf",
    "start": "1250159",
    "end": "1252400"
  },
  {
    "text": "there were at least three that uh we",
    "start": "1252400",
    "end": "1254400"
  },
  {
    "text": "found that were really really cool uh",
    "start": "1254400",
    "end": "1256400"
  },
  {
    "text": "and felt worth mentioning um um the",
    "start": "1256400",
    "end": "1259080"
  },
  {
    "text": "first one is that we can now unit test",
    "start": "1259080",
    "end": "1260919"
  },
  {
    "text": "our ebpf code now this is really cool",
    "start": "1260919",
    "end": "1263799"
  },
  {
    "text": "because we can create a dummy function",
    "start": "1263799",
    "end": "1266720"
  },
  {
    "text": "um to test out my doap player SK switch",
    "start": "1266720",
    "end": "1269480"
  },
  {
    "text": "Trace um and I can make sure that uh",
    "start": "1269480",
    "end": "1272559"
  },
  {
    "text": "this returns as it should do so this",
    "start": "1272559",
    "end": "1275600"
  },
  {
    "text": "function changes some maps uh I can",
    "start": "1275600",
    "end": "1278120"
  },
  {
    "text": "write some assertions to make sure that",
    "start": "1278120",
    "end": "1279960"
  },
  {
    "text": "the the data in those maps have indeed",
    "start": "1279960",
    "end": "1281760"
  },
  {
    "text": "been changed in the way it was expecting",
    "start": "1281760",
    "end": "1284000"
  },
  {
    "text": "which is another great way of avoiding",
    "start": "1284000",
    "end": "1286919"
  },
  {
    "text": "bugs uh we can do ebpf benchmarking uh",
    "start": "1286919",
    "end": "1290320"
  },
  {
    "text": "thanks again to selum ebpf because it uh",
    "start": "1290320",
    "end": "1293600"
  },
  {
    "text": "integrates very well with go testing and",
    "start": "1293600",
    "end": "1295640"
  },
  {
    "text": "go Benchmark Frameworks uh which allowed",
    "start": "1295640",
    "end": "1298120"
  },
  {
    "text": "us to Benchmark our ebpf probe uh find",
    "start": "1298120",
    "end": "1301400"
  },
  {
    "text": "out that it was running in about 2.8",
    "start": "1301400",
    "end": "1303880"
  },
  {
    "text": "micros is which seems like forever if",
    "start": "1303880",
    "end": "1307320"
  },
  {
    "text": "you're looking at uh things in the",
    "start": "1307320",
    "end": "1309600"
  },
  {
    "text": "kernel um and using that we were able",
    "start": "1309600",
    "end": "1312159"
  },
  {
    "text": "then to open this up in the profiler dig",
    "start": "1312159",
    "end": "1314799"
  },
  {
    "text": "through find the hotpots and make some",
    "start": "1314799",
    "end": "1317000"
  },
  {
    "text": "changes uh to end up with a more",
    "start": "1317000",
    "end": "1319120"
  },
  {
    "text": "efficient probe in the",
    "start": "1319120",
    "end": "1322039"
  },
  {
    "text": "end and lastly I had a crazy idea about",
    "start": "1322039",
    "end": "1326240"
  },
  {
    "text": "instead of doing the batch read that we",
    "start": "1326240",
    "end": "1328360"
  },
  {
    "text": "were doing previously of these",
    "start": "1328360",
    "end": "1330240"
  },
  {
    "text": "potentially 32,000 events could we just",
    "start": "1330240",
    "end": "1333279"
  },
  {
    "text": "like stream them as they happened over",
    "start": "1333279",
    "end": "1335320"
  },
  {
    "text": "to user space and have user space just",
    "start": "1335320",
    "end": "1337480"
  },
  {
    "text": "deal with all of the",
    "start": "1337480",
    "end": "1338919"
  },
  {
    "text": "summarization now cium ebpf has support",
    "start": "1338919",
    "end": "1341960"
  },
  {
    "text": "for ring buffer which is wonderful um",
    "start": "1341960",
    "end": "1346480"
  },
  {
    "text": "so in its default configuration ation",
    "start": "1346480",
    "end": "1348960"
  },
  {
    "text": "though uh we end up hitting 100% CPU uh",
    "start": "1348960",
    "end": "1352679"
  },
  {
    "text": "because there were just too many events",
    "start": "1352679",
    "end": "1354279"
  },
  {
    "text": "coming in from the colel over to",
    "start": "1354279",
    "end": "1356600"
  },
  {
    "text": "userland and uh yeah we needed to tune",
    "start": "1356600",
    "end": "1359640"
  },
  {
    "text": "that thing um tuning a ring buffer is",
    "start": "1359640",
    "end": "1362720"
  },
  {
    "text": "black magic um if anybody has done this",
    "start": "1362720",
    "end": "1365159"
  },
  {
    "text": "successfully please come and find me um",
    "start": "1365159",
    "end": "1368799"
  },
  {
    "text": "there there were too many knobs to tune",
    "start": "1368799",
    "end": "1370840"
  },
  {
    "text": "uh the ring buffer size the notification",
    "start": "1370840",
    "end": "1372840"
  },
  {
    "text": "batch size on our Go Side um how many uh",
    "start": "1372840",
    "end": "1378159"
  },
  {
    "text": "what sort of buffering we had set up",
    "start": "1378159",
    "end": "1380000"
  },
  {
    "text": "there how many go routines we were using",
    "start": "1380000",
    "end": "1381559"
  },
  {
    "text": "to process events uh it was turning into",
    "start": "1381559",
    "end": "1384240"
  },
  {
    "text": "a bit of a nightmare to get uh values we",
    "start": "1384240",
    "end": "1386600"
  },
  {
    "text": "were changing one of these at the time",
    "start": "1386600",
    "end": "1387880"
  },
  {
    "text": "running a sample uh seeing if that",
    "start": "1387880",
    "end": "1389960"
  },
  {
    "text": "changed run it again um however uh",
    "start": "1389960",
    "end": "1393440"
  },
  {
    "text": "celium ebpf uh kindly accepted the patch",
    "start": "1393440",
    "end": "1395960"
  },
  {
    "text": "from me to uh add um a way of getting",
    "start": "1395960",
    "end": "1399440"
  },
  {
    "text": "metrics from The Ring buffer uh so that",
    "start": "1399440",
    "end": "1402159"
  },
  {
    "text": "we can now in real time see how much",
    "start": "1402159",
    "end": "1404240"
  },
  {
    "text": "available data is in the ring buffer",
    "start": "1404240",
    "end": "1406279"
  },
  {
    "text": "which makes tuning things a little bit",
    "start": "1406279",
    "end": "1408080"
  },
  {
    "text": "easier I still haven't got to the point",
    "start": "1408080",
    "end": "1410039"
  },
  {
    "text": "where it's working efficiently uh at",
    "start": "1410039",
    "end": "1412039"
  },
  {
    "text": "least you know hitting the sort of 1 to",
    "start": "1412039",
    "end": "1413960"
  },
  {
    "text": "3% userland CPU sweet spot that I'm",
    "start": "1413960",
    "end": "1416679"
  },
  {
    "text": "looking for uh but it's certainly",
    "start": "1416679",
    "end": "1418720"
  },
  {
    "text": "trending in the right",
    "start": "1418720",
    "end": "1420960"
  },
  {
    "text": "direction all right so other benefits",
    "start": "1420960",
    "end": "1425039"
  },
  {
    "text": "unit testing is awesome uh benchmarking",
    "start": "1425039",
    "end": "1427559"
  },
  {
    "text": "let us validate our probes run within",
    "start": "1427559",
    "end": "1429520"
  },
  {
    "text": "acceptable parameters and ring buffer",
    "start": "1429520",
    "end": "1432080"
  },
  {
    "text": "could be very exciting if I ever get it",
    "start": "1432080",
    "end": "1434919"
  },
  {
    "text": "working all right that is the end of my",
    "start": "1434919",
    "end": "1438039"
  },
  {
    "text": "talk thank thank you for paying",
    "start": "1438039",
    "end": "1439279"
  },
  {
    "text": "attention",
    "start": "1439279",
    "end": "1442159"
  }
]