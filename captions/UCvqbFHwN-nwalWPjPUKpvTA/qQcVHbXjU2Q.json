[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hello everyone uh we're here to talk",
    "start": "199",
    "end": "1839"
  },
  {
    "text": "about to to you about backstage's new o",
    "start": "1839",
    "end": "5000"
  },
  {
    "text": "system so my name is Patrick and with me",
    "start": "5000",
    "end": "7640"
  },
  {
    "text": "I have my colleague colleague fan",
    "start": "7640",
    "end": "11240"
  },
  {
    "text": "Frederick sorry we're both maintain",
    "start": "11240",
    "end": "14200"
  },
  {
    "text": "engineers at Spotify and core",
    "start": "14200",
    "end": "15759"
  },
  {
    "text": "maintainers of",
    "start": "15759",
    "end": "17680"
  },
  {
    "text": "Backstage now let me start with a super",
    "start": "17680",
    "end": "20039"
  },
  {
    "start": "18000",
    "end": "60000"
  },
  {
    "text": "quick intro to Backstage uh which is a",
    "start": "20039",
    "end": "22039"
  },
  {
    "text": "framework for building internal",
    "start": "22039",
    "end": "23519"
  },
  {
    "text": "developer portals backstage uses a",
    "start": "23519",
    "end": "26039"
  },
  {
    "text": "plug-in based architecture with both",
    "start": "26039",
    "end": "27840"
  },
  {
    "text": "front end and backend plugins uh today",
    "start": "27840",
    "end": "30320"
  },
  {
    "text": "we're going to focus on the backend side",
    "start": "30320",
    "end": "31800"
  },
  {
    "text": "of things uh where you can think of a",
    "start": "31800",
    "end": "33280"
  },
  {
    "text": "plugin as roughly the equivalent of a",
    "start": "33280",
    "end": "36120"
  },
  {
    "text": "microservice uh now we have a couple of",
    "start": "36120",
    "end": "38200"
  },
  {
    "text": "important design principles for",
    "start": "38200",
    "end": "39680"
  },
  {
    "text": "backstage first off we want to minimize",
    "start": "39680",
    "end": "42160"
  },
  {
    "text": "external dependencies we want to keep it",
    "start": "42160",
    "end": "44320"
  },
  {
    "text": "simple to deploy we also want to",
    "start": "44320",
    "end": "46760"
  },
  {
    "text": "minimize configuration and ship with",
    "start": "46760",
    "end": "48480"
  },
  {
    "text": "sensible defaults now there's a lot of",
    "start": "48480",
    "end": "50920"
  },
  {
    "text": "power in the customization of Backstage",
    "start": "50920",
    "end": "52719"
  },
  {
    "text": "but we want things to work well out of",
    "start": "52719",
    "end": "54440"
  },
  {
    "text": "the box now over to Fan Frederick to",
    "start": "54440",
    "end": "57640"
  },
  {
    "text": "talk about our new H system names and",
    "start": "57640",
    "end": "59719"
  },
  {
    "text": "stuff",
    "start": "59719",
    "end": "60680"
  },
  {
    "start": "60000",
    "end": "87000"
  },
  {
    "text": "uh thanks Patrick so our o system was",
    "start": "60680",
    "end": "63280"
  },
  {
    "text": "really due for a reamp there used to be",
    "start": "63280",
    "end": "64838"
  },
  {
    "text": "a requirement for backstage to be",
    "start": "64839",
    "end": "66799"
  },
  {
    "text": "deployed uh behind secure gateways for",
    "start": "66799",
    "end": "69320"
  },
  {
    "text": "example the VPN and that was due to the",
    "start": "69320",
    "end": "71400"
  },
  {
    "text": "design of the old uh o architecture and",
    "start": "71400",
    "end": "73880"
  },
  {
    "text": "its limitations and the goal for this",
    "start": "73880",
    "end": "75840"
  },
  {
    "text": "new system has been to make",
    "start": "75840",
    "end": "77320"
  },
  {
    "text": "installations secure by default uh so",
    "start": "77320",
    "end": "79560"
  },
  {
    "text": "that they are safe to expose toward",
    "start": "79560",
    "end": "81040"
  },
  {
    "text": "public internet um and while add it",
    "start": "81040",
    "end": "83159"
  },
  {
    "text": "improving service to service o and user",
    "start": "83159",
    "end": "84840"
  },
  {
    "text": "token",
    "start": "84840",
    "end": "85799"
  },
  {
    "text": "management so let's start by looking at",
    "start": "85799",
    "end": "88280"
  },
  {
    "start": "87000",
    "end": "143000"
  },
  {
    "text": "user o in the old design so so this is",
    "start": "88280",
    "end": "90360"
  },
  {
    "text": "what it looks like uh we built an O",
    "start": "90360",
    "end": "92360"
  },
  {
    "text": "backend plugin that is the basis uh of",
    "start": "92360",
    "end": "95040"
  },
  {
    "text": "all user based off flows uh it receives",
    "start": "95040",
    "end": "97240"
  },
  {
    "text": "a signin request from a client that and",
    "start": "97240",
    "end": "100200"
  },
  {
    "text": "then ensures that there's a fresh public",
    "start": "100200",
    "end": "102439"
  },
  {
    "text": "private key pair uh that it Ed to sign a",
    "start": "102439",
    "end": "104920"
  },
  {
    "text": "JWT that it returns to the client uh and",
    "start": "104920",
    "end": "108680"
  },
  {
    "text": "that proves who you are and the O",
    "start": "108680",
    "end": "110479"
  },
  {
    "text": "backend also has a jwks endpoint uh that",
    "start": "110479",
    "end": "113719"
  },
  {
    "text": "contains all the public Keys exposed uh",
    "start": "113719",
    "end": "116320"
  },
  {
    "text": "the client stores the token in memory",
    "start": "116320",
    "end": "119000"
  },
  {
    "text": "for later use so that for example when",
    "start": "119000",
    "end": "121119"
  },
  {
    "text": "it wants to perform a search or call any",
    "start": "121119",
    "end": "123119"
  },
  {
    "text": "you know backend plugin it passes along",
    "start": "123119",
    "end": "125360"
  },
  {
    "text": "this user token uh and the search",
    "start": "125360",
    "end": "127520"
  },
  {
    "text": "backend knows how to turn around and ask",
    "start": "127520",
    "end": "129640"
  },
  {
    "text": "the off back end to verify this thing by",
    "start": "129640",
    "end": "131480"
  },
  {
    "text": "talking to its key set endpoint right",
    "start": "131480",
    "end": "133879"
  },
  {
    "text": "and this port is actually pretty okay",
    "start": "133879",
    "end": "135400"
  },
  {
    "text": "this is the previous design again uh",
    "start": "135400",
    "end": "137879"
  },
  {
    "text": "it's mostly kept around uh but with a",
    "start": "137879",
    "end": "140239"
  },
  {
    "text": "small important addition but we'll get",
    "start": "140239",
    "end": "141680"
  },
  {
    "text": "to that",
    "start": "141680",
    "end": "143040"
  },
  {
    "start": "143000",
    "end": "180000"
  },
  {
    "text": "soon what if you need to make an",
    "start": "143040",
    "end": "145120"
  },
  {
    "text": "upstream request as a backend uh while",
    "start": "145120",
    "end": "147720"
  },
  {
    "text": "fulfilling the initial call so in the",
    "start": "147720",
    "end": "150000"
  },
  {
    "text": "old design um the user token was just",
    "start": "150000",
    "end": "152800"
  },
  {
    "text": "forwarded to the Upstream Service uh you",
    "start": "152800",
    "end": "155640"
  },
  {
    "text": "know it's needed by the receiver",
    "start": "155640",
    "end": "157239"
  },
  {
    "text": "sometimes because he wants to do for",
    "start": "157239",
    "end": "158319"
  },
  {
    "text": "example permission checks and so on um",
    "start": "158319",
    "end": "161239"
  },
  {
    "text": "and this is not great uh Upstream",
    "start": "161239",
    "end": "163040"
  },
  {
    "text": "Services have no way of knowing who's",
    "start": "163040",
    "end": "165159"
  },
  {
    "text": "actually calling them it just looks like",
    "start": "165159",
    "end": "167040"
  },
  {
    "text": "a regular user request and it leaks",
    "start": "167040",
    "end": "169120"
  },
  {
    "text": "tokens a little bit too much through the",
    "start": "169120",
    "end": "171120"
  },
  {
    "text": "call chains since user tokens has the",
    "start": "171120",
    "end": "173280"
  },
  {
    "text": "full off power of the original user um",
    "start": "173280",
    "end": "175959"
  },
  {
    "text": "we want to constrain the use of those as",
    "start": "175959",
    "end": "177920"
  },
  {
    "text": "much as",
    "start": "177920",
    "end": "178840"
  },
  {
    "text": "possible there's also the case about",
    "start": "178840",
    "end": "181360"
  },
  {
    "start": "180000",
    "end": "219000"
  },
  {
    "text": "Pure service off when there's no client",
    "start": "181360",
    "end": "183120"
  },
  {
    "text": "interaction at all for this the old",
    "start": "183120",
    "end": "185640"
  },
  {
    "text": "design had a secret key in app config uh",
    "start": "185640",
    "end": "189080"
  },
  {
    "text": "that all plugins shared uh and that uh",
    "start": "189080",
    "end": "191959"
  },
  {
    "text": "was used to both symmetrically sign and",
    "start": "191959",
    "end": "194440"
  },
  {
    "text": "verify uh tokens as they were passed",
    "start": "194440",
    "end": "197040"
  },
  {
    "text": "along and this has definitely has",
    "start": "197040",
    "end": "198519"
  },
  {
    "text": "several shortcomings the receiver only",
    "start": "198519",
    "end": "200519"
  },
  {
    "text": "knows that caller is like some backend",
    "start": "200519",
    "end": "202480"
  },
  {
    "text": "plugin because apparently they knew the",
    "start": "202480",
    "end": "204000"
  },
  {
    "text": "signing secret right um but there's just",
    "start": "204000",
    "end": "206640"
  },
  {
    "text": "one secret and you have to rotate it",
    "start": "206640",
    "end": "208159"
  },
  {
    "text": "manually um which is practical and the",
    "start": "208159",
    "end": "210439"
  },
  {
    "text": "generated tokens also aren't properly",
    "start": "210439",
    "end": "212120"
  },
  {
    "text": "Limited in their use because there's no",
    "start": "212120",
    "end": "213640"
  },
  {
    "text": "Source or Target plugin info in them so",
    "start": "213640",
    "end": "215599"
  },
  {
    "text": "once you have a token you can talk to",
    "start": "215599",
    "end": "217920"
  },
  {
    "text": "anyone so how do we improve all this uh",
    "start": "217920",
    "end": "220799"
  },
  {
    "start": "219000",
    "end": "254000"
  },
  {
    "text": "let's start by looking at service off uh",
    "start": "220799",
    "end": "223080"
  },
  {
    "text": "now it's in the new design if you",
    "start": "223080",
    "end": "225120"
  },
  {
    "text": "remember the O plugin and it's key infra",
    "start": "225120",
    "end": "227959"
  },
  {
    "text": "now all plugins have this um so plugins",
    "start": "227959",
    "end": "231360"
  },
  {
    "text": "create self-signed service tokens uh",
    "start": "231360",
    "end": "233599"
  },
  {
    "text": "which are only valid for one given pair",
    "start": "233599",
    "end": "235200"
  },
  {
    "text": "of plugins and the receiver can use the",
    "start": "235200",
    "end": "237400"
  },
  {
    "text": "service Discovery mechanism to turn",
    "start": "237400",
    "end": "238959"
  },
  {
    "text": "around and ask",
    "start": "238959",
    "end": "240280"
  },
  {
    "text": "who the you know claimed caller is and",
    "start": "240280",
    "end": "243360"
  },
  {
    "text": "verify against their key set that is",
    "start": "243360",
    "end": "244879"
  },
  {
    "text": "actually issued by them um and the token",
    "start": "244879",
    "end": "248599"
  },
  {
    "text": "can no longer be used against any other",
    "start": "248599",
    "end": "250120"
  },
  {
    "text": "back end and we get key rotation for",
    "start": "250120",
    "end": "253680"
  },
  {
    "text": "free uh looking at user o this is the",
    "start": "253680",
    "end": "257880"
  },
  {
    "start": "254000",
    "end": "271000"
  },
  {
    "text": "little Edition that I talked about sign",
    "start": "257880",
    "end": "259560"
  },
  {
    "text": "in um now returns also a secure identity",
    "start": "259560",
    "end": "262919"
  },
  {
    "text": "proof as we call it um inside the user",
    "start": "262919",
    "end": "265360"
  },
  {
    "text": "token this is an entirely",
    "start": "265360",
    "end": "267000"
  },
  {
    "text": "self-sufficient little thing that can be",
    "start": "267000",
    "end": "268960"
  },
  {
    "text": "validated on it its own and as a matter",
    "start": "268960",
    "end": "271680"
  },
  {
    "text": "of fact it can be uh embedded inside",
    "start": "271680",
    "end": "274199"
  },
  {
    "text": "service tokens as well so when clients",
    "start": "274199",
    "end": "276360"
  },
  {
    "text": "make requests it gets embedded and turns",
    "start": "276360",
    "end": "279160"
  },
  {
    "text": "the service token into into an own",
    "start": "279160",
    "end": "280840"
  },
  {
    "text": "behalf of token right and uh now the",
    "start": "280840",
    "end": "284039"
  },
  {
    "text": "receiver can receiver can safely and",
    "start": "284039",
    "end": "286000"
  },
  {
    "text": "separately know that identities of who's",
    "start": "286000",
    "end": "288360"
  },
  {
    "text": "directly calling them and who the",
    "start": "288360",
    "end": "289680"
  },
  {
    "text": "original user is can be",
    "start": "289680",
    "end": "292360"
  },
  {
    "text": "verified um this identity proof can also",
    "start": "292360",
    "end": "294919"
  },
  {
    "text": "be used for other things like making",
    "start": "294919",
    "end": "296280"
  },
  {
    "text": "cookie tokens that identify the user but",
    "start": "296280",
    "end": "298240"
  },
  {
    "text": "do not have the full power of the user",
    "start": "298240",
    "end": "300320"
  },
  {
    "text": "token which is important so back over to",
    "start": "300320",
    "end": "303199"
  },
  {
    "start": "303000",
    "end": "312000"
  },
  {
    "text": "Patrick all right thank you okay that",
    "start": "303199",
    "end": "307080"
  },
  {
    "text": "covers the architectural design of our",
    "start": "307080",
    "end": "308840"
  },
  {
    "text": "new system now I want to talk a bit",
    "start": "308840",
    "end": "310479"
  },
  {
    "text": "about our API design so as a reminder",
    "start": "310479",
    "end": "313840"
  },
  {
    "start": "312000",
    "end": "368000"
  },
  {
    "text": "one of the primary reasons for these",
    "start": "313840",
    "end": "315360"
  },
  {
    "text": "changes was that we wanted to make",
    "start": "315360",
    "end": "316960"
  },
  {
    "text": "backstage protected and secure by",
    "start": "316960",
    "end": "318840"
  },
  {
    "text": "default but that's a quite tricky change",
    "start": "318840",
    "end": "321080"
  },
  {
    "text": "to roll out um we could have required",
    "start": "321080",
    "end": "324000"
  },
  {
    "text": "all plugins to opt in to this new",
    "start": "324000",
    "end": "326000"
  },
  {
    "text": "Behavior but we chose the opposite they",
    "start": "326000",
    "end": "329240"
  },
  {
    "text": "are in always protected by default which",
    "start": "329240",
    "end": "331560"
  },
  {
    "text": "we call default off policy uh now",
    "start": "331560",
    "end": "335120"
  },
  {
    "text": "plugins with particular requirements",
    "start": "335120",
    "end": "337039"
  },
  {
    "text": "they're able to opt out of this if they",
    "start": "337039",
    "end": "338720"
  },
  {
    "text": "need to for individual route which",
    "start": "338720",
    "end": "340600"
  },
  {
    "text": "routes which is what you see here in the",
    "start": "340600",
    "end": "342240"
  },
  {
    "text": "code snippet to the right now the",
    "start": "342240",
    "end": "344039"
  },
  {
    "text": "reasoning for this choice is simple it",
    "start": "344039",
    "end": "346120"
  },
  {
    "text": "has a higher impact in the very short",
    "start": "346120",
    "end": "347759"
  },
  {
    "text": "term but long term it reduces the risk",
    "start": "347759",
    "end": "349639"
  },
  {
    "text": "of mistakes and makes the default",
    "start": "349639",
    "end": "351680"
  },
  {
    "text": "Behavior the secure one we really want",
    "start": "351680",
    "end": "354240"
  },
  {
    "text": "to avoid a situation where there's",
    "start": "354240",
    "end": "356000"
  },
  {
    "text": "uncertainty about whether plugin is",
    "start": "356000",
    "end": "357759"
  },
  {
    "text": "protected or not uh and if a plugin is",
    "start": "357759",
    "end": "359960"
  },
  {
    "text": "broken it's because it rejects uh access",
    "start": "359960",
    "end": "363360"
  },
  {
    "text": "rather than the other way around reject",
    "start": "363360",
    "end": "365680"
  },
  {
    "text": "access when it",
    "start": "365680",
    "end": "367759"
  },
  {
    "text": "shouldn't now that was an example how we",
    "start": "367759",
    "end": "370360"
  },
  {
    "start": "368000",
    "end": "436000"
  },
  {
    "text": "bring existing plugins along now I want",
    "start": "370360",
    "end": "372039"
  },
  {
    "text": "to highlight an example of how we",
    "start": "372039",
    "end": "373720"
  },
  {
    "text": "prepare for the future so our o apis u",
    "start": "373720",
    "end": "377120"
  },
  {
    "text": "our new o apis has a method that excepts",
    "start": "377120",
    "end": "379599"
  },
  {
    "text": "incoming requests and returns its",
    "start": "379599",
    "end": "381919"
  },
  {
    "text": "credentials they in turn represent",
    "start": "381919",
    "end": "383919"
  },
  {
    "text": "either a user or a service principle",
    "start": "383919",
    "end": "386039"
  },
  {
    "text": "which we in this example use to decide",
    "start": "386039",
    "end": "387960"
  },
  {
    "text": "the level of access now that's fine for",
    "start": "387960",
    "end": "390919"
  },
  {
    "text": "now but consider what would happen if we",
    "start": "390919",
    "end": "393680"
  },
  {
    "text": "added another type in the future let's",
    "start": "393680",
    "end": "395280"
  },
  {
    "text": "say some form of guest access now we've",
    "start": "395280",
    "end": "398120"
  },
  {
    "text": "got the vulnerability on on our hands",
    "start": "398120",
    "end": "400000"
  },
  {
    "text": "because guest principles are treated",
    "start": "400000",
    "end": "402039"
  },
  {
    "text": "just the same as the",
    "start": "402039",
    "end": "403360"
  },
  {
    "text": "service you could go blame the author",
    "start": "403360",
    "end": "405560"
  },
  {
    "text": "for this code for not being explicit",
    "start": "405560",
    "end": "407319"
  },
  {
    "text": "enough but that's not very productive uh",
    "start": "407319",
    "end": "409800"
  },
  {
    "text": "after all we effectively encouraged the",
    "start": "409800",
    "end": "411560"
  },
  {
    "text": "code to be written this way which is why",
    "start": "411560",
    "end": "413960"
  },
  {
    "text": "we chose a different design so this is",
    "start": "413960",
    "end": "416319"
  },
  {
    "text": "our actual API if you want to get access",
    "start": "416319",
    "end": "418440"
  },
  {
    "text": "to the principle you have to explicitly",
    "start": "418440",
    "end": "420360"
  },
  {
    "text": "list the types that you expect uh which",
    "start": "420360",
    "end": "422479"
  },
  {
    "text": "is the allow option you see here at the",
    "start": "422479",
    "end": "424080"
  },
  {
    "text": "top with this design um we're able to",
    "start": "424080",
    "end": "426639"
  },
  {
    "text": "add additional principles in the future",
    "start": "426639",
    "end": "428360"
  },
  {
    "text": "without breaking existing code in",
    "start": "428360",
    "end": "429840"
  },
  {
    "text": "dangerous",
    "start": "429840",
    "end": "431199"
  },
  {
    "text": "ways and that's it thank",
    "start": "431199",
    "end": "435160"
  },
  {
    "text": "you",
    "start": "435680",
    "end": "438680"
  }
]