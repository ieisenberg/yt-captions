[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "great thank you welcome everyone please",
    "start": "30",
    "end": "2280"
  },
  {
    "text": "take a seat so alright so in early 2008",
    "start": "2280",
    "end": "9420"
  },
  {
    "text": "we sent out a survey looking at the",
    "start": "9420",
    "end": "11160"
  },
  {
    "text": "landscape of what ingress was to fulfill",
    "start": "11160",
    "end": "14130"
  },
  {
    "text": "this was a survey from the users to say",
    "start": "14130",
    "end": "16560"
  },
  {
    "text": "hey what features are you getting out of",
    "start": "16560",
    "end": "19170"
  },
  {
    "text": "ingress what features do you consider",
    "start": "19170",
    "end": "20609"
  },
  {
    "text": "important and basically ingress",
    "start": "20609",
    "end": "23820"
  },
  {
    "text": "describes an l7 proxy based load",
    "start": "23820",
    "end": "26460"
  },
  {
    "text": "balancer of course it could be extend to",
    "start": "26460",
    "end": "28140"
  },
  {
    "text": "l4 but l7 is the domain it serves right",
    "start": "28140",
    "end": "30810"
  },
  {
    "text": "now now in our mind when we looked at",
    "start": "30810",
    "end": "33540"
  },
  {
    "text": "what is the next ingress API actually",
    "start": "33540",
    "end": "35579"
  },
  {
    "text": "there were a couple of meta questions",
    "start": "35579",
    "end": "37070"
  },
  {
    "text": "that we also were asking does it make",
    "start": "37070",
    "end": "39899"
  },
  {
    "text": "sense to be part of core kubernetes",
    "start": "39899",
    "end": "41520"
  },
  {
    "text": "could there be a project that's actually",
    "start": "41520",
    "end": "43770"
  },
  {
    "text": "outside of kubernetes I couldn't point",
    "start": "43770",
    "end": "45210"
  },
  {
    "text": "to and say hey use that because that has",
    "start": "45210",
    "end": "47280"
  },
  {
    "text": "already solved the problem the other",
    "start": "47280",
    "end": "49170"
  },
  {
    "text": "aspect that we considered is could we",
    "start": "49170",
    "end": "51059"
  },
  {
    "text": "have a stronger statement on Portability",
    "start": "51059",
    "end": "52770"
  },
  {
    "text": "and feature sets for example one option",
    "start": "52770",
    "end": "54719"
  },
  {
    "text": "would be to say it's not portable",
    "start": "54719",
    "end": "56879"
  },
  {
    "text": "we can't reconcile all these different",
    "start": "56879",
    "end": "58559"
  },
  {
    "text": "providers let's just give up on",
    "start": "58559",
    "end": "60300"
  },
  {
    "text": "portability another option would be",
    "start": "60300",
    "end": "61920"
  },
  {
    "text": "let's standardize on a given",
    "start": "61920",
    "end": "63480"
  },
  {
    "text": "implementation and wait for everyone to",
    "start": "63480",
    "end": "65309"
  },
  {
    "text": "converge now looking at this in terms of",
    "start": "65309",
    "end": "69240"
  },
  {
    "text": "the landscape of actual implementations",
    "start": "69240",
    "end": "70799"
  },
  {
    "text": "we have both the cloud providers",
    "start": "70799",
    "end": "73530"
  },
  {
    "text": "providing proxy infrastructure as well",
    "start": "73530",
    "end": "76200"
  },
  {
    "text": "as sort of off-the-shelf user space",
    "start": "76200",
    "end": "79200"
  },
  {
    "text": "proxies and it looks like it's likely",
    "start": "79200",
    "end": "81960"
  },
  {
    "text": "infeasible for clouds to allow the kind",
    "start": "81960",
    "end": "84509"
  },
  {
    "text": "of customization and expressiveness of a",
    "start": "84509",
    "end": "86700"
  },
  {
    "text": "self managed proxy but we do see",
    "start": "86700",
    "end": "88829"
  },
  {
    "text": "convergence but it's slow and finally in",
    "start": "88829",
    "end": "92009"
  },
  {
    "text": "the space in the past two years we have",
    "start": "92009",
    "end": "94229"
  },
  {
    "text": "basically the rise of the service mesh",
    "start": "94229",
    "end": "96270"
  },
  {
    "text": "so this is a third player in the space",
    "start": "96270",
    "end": "98610"
  },
  {
    "text": "of l7 load balancing now in terms of",
    "start": "98610",
    "end": "103170"
  },
  {
    "text": "asking this question it is important to",
    "start": "103170",
    "end": "106500"
  },
  {
    "text": "look at sort of existing models so we",
    "start": "106500",
    "end": "110250"
  },
  {
    "text": "have this challenge in the ingress API",
    "start": "110250",
    "end": "112049"
  },
  {
    "text": "of portability expressiveness and",
    "start": "112049",
    "end": "114540"
  },
  {
    "text": "features but in the past two years also",
    "start": "114540",
    "end": "117479"
  },
  {
    "text": "we have seen a lot of api's try to fill",
    "start": "117479",
    "end": "120630"
  },
  {
    "text": "this space and one thing to ask is what",
    "start": "120630",
    "end": "125430"
  },
  {
    "text": "can we learn from each of these api's so",
    "start": "125430",
    "end": "127920"
  },
  {
    "text": "I'm going to go through a couple of",
    "start": "127920",
    "end": "129330"
  },
  {
    "text": "popular models now I reference these",
    "start": "129330",
    "end": "132569"
  },
  {
    "text": "systems it's not",
    "start": "132569",
    "end": "133530"
  },
  {
    "text": "for illustrative purposes this is not",
    "start": "133530",
    "end": "134910"
  },
  {
    "text": "meant to be exhaustive so if you don't",
    "start": "134910",
    "end": "136290"
  },
  {
    "text": "see your favorite system here it's not",
    "start": "136290",
    "end": "137970"
  },
  {
    "text": "mean it's not cool it's just I didn't",
    "start": "137970",
    "end": "140040"
  },
  {
    "text": "put in the slides okay so what I'm gonna",
    "start": "140040",
    "end": "143700"
  },
  {
    "start": "142000",
    "end": "142000"
  },
  {
    "text": "do is decompose each of these models",
    "start": "143700",
    "end": "145350"
  },
  {
    "text": "into key attributes I know there are not",
    "start": "145350",
    "end": "147630"
  },
  {
    "text": "a lot of nuances to the API such as the",
    "start": "147630",
    "end": "150390"
  },
  {
    "text": "features supported in the specific way",
    "start": "150390",
    "end": "152160"
  },
  {
    "text": "you write them but for the purposes of",
    "start": "152160",
    "end": "154200"
  },
  {
    "text": "this representation we're going to look",
    "start": "154200",
    "end": "156569"
  },
  {
    "text": "at the big picture right and here we",
    "start": "156569",
    "end": "158970"
  },
  {
    "text": "have the good old ingress resource model",
    "start": "158970",
    "end": "162390"
  },
  {
    "text": "we have an single resource that",
    "start": "162390",
    "end": "165030"
  },
  {
    "text": "describes a bunch of host path matching",
    "start": "165030",
    "end": "166950"
  },
  {
    "text": "and it goes to back ends and the key",
    "start": "166950",
    "end": "169320"
  },
  {
    "text": "attributes for this is that one it's",
    "start": "169320",
    "end": "172620"
  },
  {
    "text": "self service so a single developer can",
    "start": "172620",
    "end": "174750"
  },
  {
    "text": "define and configure all aspects of the",
    "start": "174750",
    "end": "176730"
  },
  {
    "text": "front-end",
    "start": "176730",
    "end": "177300"
  },
  {
    "text": "TLS configuration and the back end at",
    "start": "177300",
    "end": "179430"
  },
  {
    "text": "the same time it supports a single role",
    "start": "179430",
    "end": "181830"
  },
  {
    "text": "which is the developer kind of owns the",
    "start": "181830",
    "end": "183390"
  },
  {
    "text": "whole thing and it's very simple it's",
    "start": "183390",
    "end": "185310"
  },
  {
    "text": "just one resource to understand now as",
    "start": "185310",
    "end": "188160"
  },
  {
    "text": "part of the GA work so that was the beta",
    "start": "188160",
    "end": "190470"
  },
  {
    "text": "as part of the GA work we have kind of",
    "start": "190470",
    "end": "192630"
  },
  {
    "text": "codified certain common practice and",
    "start": "192630",
    "end": "195959"
  },
  {
    "text": "also added a little bit of flexibility",
    "start": "195959",
    "end": "197489"
  },
  {
    "text": "so we've added this notion of an ingress",
    "start": "197489",
    "end": "199590"
  },
  {
    "text": "class it's very similar to that of a",
    "start": "199590",
    "end": "201510"
  },
  {
    "text": "storage class in that you can say hey",
    "start": "201510",
    "end": "204390"
  },
  {
    "text": "this is my nginx ingress or my H a proxy",
    "start": "204390",
    "end": "207180"
  },
  {
    "text": "ingress or my Cloud ingress and also",
    "start": "207180",
    "end": "209610"
  },
  {
    "text": "we're currently in discussion although",
    "start": "209610",
    "end": "211110"
  },
  {
    "text": "this may be punted to add more",
    "start": "211110",
    "end": "213090"
  },
  {
    "text": "flexibility on the backend side so if",
    "start": "213090",
    "end": "215070"
  },
  {
    "text": "you imagine assembling your load",
    "start": "215070",
    "end": "216660"
  },
  {
    "text": "balancer you would probably want to",
    "start": "216660",
    "end": "217890"
  },
  {
    "text": "assemble things other than services into",
    "start": "217890",
    "end": "220440"
  },
  {
    "text": "your load balancer another popular model",
    "start": "220440",
    "end": "224430"
  },
  {
    "text": "that has come up in the past two years",
    "start": "224430",
    "end": "225780"
  },
  {
    "text": "is that of Sto",
    "start": "225780",
    "end": "226890"
  },
  {
    "text": "so sto is a service mesh but really the",
    "start": "226890",
    "end": "229410"
  },
  {
    "text": "set of resources it uses R is also",
    "start": "229410",
    "end": "231989"
  },
  {
    "text": "intended to serve",
    "start": "231989",
    "end": "233579"
  },
  {
    "text": "traffic ingress so what are the key",
    "start": "233579",
    "end": "235950"
  },
  {
    "text": "attributes of this T oh well one big",
    "start": "235950",
    "end": "239070"
  },
  {
    "text": "difference is that they have separated",
    "start": "239070",
    "end": "240780"
  },
  {
    "text": "the representation of the proxy",
    "start": "240780",
    "end": "243720"
  },
  {
    "text": "infrastructure from the rest of the",
    "start": "243720",
    "end": "246810"
  },
  {
    "text": "application description so you have this",
    "start": "246810",
    "end": "248400"
  },
  {
    "text": "gateway that describes the proxy",
    "start": "248400",
    "end": "250500"
  },
  {
    "text": "infrastructure then you have a virtual",
    "start": "250500",
    "end": "254400"
  },
  {
    "text": "service and destination rule that",
    "start": "254400",
    "end": "255930"
  },
  {
    "text": "describe how the application routing",
    "start": "255930",
    "end": "257640"
  },
  {
    "text": "works and then finally we come back to",
    "start": "257640",
    "end": "259859"
  },
  {
    "text": "the services at the other end so the key",
    "start": "259859",
    "end": "262729"
  },
  {
    "text": "aspects of this do",
    "start": "262729",
    "end": "265260"
  },
  {
    "text": "is that it actually supports separate",
    "start": "265260",
    "end": "266910"
  },
  {
    "text": "roles for proxy infrastructure in",
    "start": "266910",
    "end": "268470"
  },
  {
    "text": "application description and then it also",
    "start": "268470",
    "end": "271410"
  },
  {
    "text": "has a very rich feature set which is",
    "start": "271410",
    "end": "274500"
  },
  {
    "text": "primarily based on envoy another model",
    "start": "274500",
    "end": "278430"
  },
  {
    "start": "277000",
    "end": "277000"
  },
  {
    "text": "that has come about in the past two",
    "start": "278430",
    "end": "280290"
  },
  {
    "text": "years is that of ingress route so",
    "start": "280290",
    "end": "282420"
  },
  {
    "text": "ingress route is an interesting API",
    "start": "282420",
    "end": "284400"
  },
  {
    "text": "model in that is recursive so you have",
    "start": "284400",
    "end": "286920"
  },
  {
    "text": "the single resource ingress route but",
    "start": "286920",
    "end": "289230"
  },
  {
    "text": "ingress routes can connect to other",
    "start": "289230",
    "end": "291720"
  },
  {
    "text": "ingress routes what this connection",
    "start": "291720",
    "end": "293820"
  },
  {
    "text": "means is a delegation so you'll see here",
    "start": "293820",
    "end": "296340"
  },
  {
    "text": "the red ingress route has rules for just",
    "start": "296340",
    "end": "300090"
  },
  {
    "text": "the top level hosts but the delegated",
    "start": "300090",
    "end": "302610"
  },
  {
    "text": "ingress route has rules for a specific",
    "start": "302610",
    "end": "304830"
  },
  {
    "text": "host in a specific path so this lets you",
    "start": "304830",
    "end": "307320"
  },
  {
    "text": "model separate roles and has this",
    "start": "307320",
    "end": "309570"
  },
  {
    "text": "recursive composability feature of",
    "start": "309570",
    "end": "312750"
  },
  {
    "text": "course in addition it has added some",
    "start": "312750",
    "end": "315750"
  },
  {
    "text": "features such as traffic splitting among",
    "start": "315750",
    "end": "318600"
  },
  {
    "text": "other things now there's lots of other",
    "start": "318600",
    "end": "321240"
  },
  {
    "text": "API models just for completeness we know",
    "start": "321240",
    "end": "323790"
  },
  {
    "text": "that of course everyone has lots of",
    "start": "323790",
    "end": "325320"
  },
  {
    "text": "annotations for describing their",
    "start": "325320",
    "end": "327540"
  },
  {
    "text": "features and some implementations have",
    "start": "327540",
    "end": "331140"
  },
  {
    "text": "actually implemented ingress like",
    "start": "331140",
    "end": "334620"
  },
  {
    "text": "features using decorators on service and",
    "start": "334620",
    "end": "336480"
  },
  {
    "text": "then merging it post facto and also you",
    "start": "336480",
    "end": "338580"
  },
  {
    "text": "can just go straight to custom resources",
    "start": "338580",
    "end": "341630"
  },
  {
    "text": "so the question is what have we learned",
    "start": "341630",
    "end": "344250"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "so when ingress was first designed the",
    "start": "344250",
    "end": "345900"
  },
  {
    "text": "focus was on simplicity and a single",
    "start": "345900",
    "end": "348210"
  },
  {
    "text": "developer but really when we're looking",
    "start": "348210",
    "end": "350820"
  },
  {
    "text": "at kind of what these api's are trying",
    "start": "350820",
    "end": "353850"
  },
  {
    "text": "to solve we see that we need to handle",
    "start": "353850",
    "end": "356130"
  },
  {
    "text": "multi role environments for example you",
    "start": "356130",
    "end": "358110"
  },
  {
    "text": "have infrastructure people working on",
    "start": "358110",
    "end": "361080"
  },
  {
    "text": "infrastructure providing ingress as a",
    "start": "361080",
    "end": "363660"
  },
  {
    "text": "service to the application developer and",
    "start": "363660",
    "end": "366360"
  },
  {
    "text": "you may not want the application",
    "start": "366360",
    "end": "367680"
  },
  {
    "text": "developer to own everything the second",
    "start": "367680",
    "end": "370290"
  },
  {
    "text": "thing is this question of how much",
    "start": "370290",
    "end": "371640"
  },
  {
    "text": "portability so if you look at the",
    "start": "371640",
    "end": "374220"
  },
  {
    "text": "results of the survey there's a very",
    "start": "374220",
    "end": "376790"
  },
  {
    "text": "paradoxical desire to both have",
    "start": "376790",
    "end": "379290"
  },
  {
    "text": "portability yet not prevent the user",
    "start": "379290",
    "end": "381240"
  },
  {
    "text": "from using all the capabilities if they",
    "start": "381240",
    "end": "383640"
  },
  {
    "text": "so desire so in some sense we need to",
    "start": "383640",
    "end": "386460"
  },
  {
    "text": "design the API such that this can be a",
    "start": "386460",
    "end": "388890"
  },
  {
    "text": "user choice right we can't the worst",
    "start": "388890",
    "end": "391080"
  },
  {
    "text": "thing to do is to tell your user hey you",
    "start": "391080",
    "end": "392580"
  },
  {
    "text": "can't use this it's not portable but you",
    "start": "392580",
    "end": "394740"
  },
  {
    "text": "know they know they want to use it",
    "start": "394740",
    "end": "396230"
  },
  {
    "text": "finally just in general we should",
    "start": "396230",
    "end": "399090"
  },
  {
    "text": "change the syntax a little bit to",
    "start": "399090",
    "end": "400470"
  },
  {
    "text": "support future API growth so while there",
    "start": "400470",
    "end": "404130"
  },
  {
    "text": "are gaps today the claim is that in the",
    "start": "404130",
    "end": "407729"
  },
  {
    "text": "future providers and features will",
    "start": "407729",
    "end": "409110"
  },
  {
    "text": "converge and we do see convergence for",
    "start": "409110",
    "end": "410850"
  },
  {
    "text": "example the cloud infrastructure is",
    "start": "410850",
    "end": "412710"
  },
  {
    "text": "slowly adding all the features that the",
    "start": "412710",
    "end": "414240"
  },
  {
    "text": "user space proxies already have now",
    "start": "414240",
    "end": "418010"
  },
  {
    "text": "given all that this is a modest proposal",
    "start": "418010",
    "end": "421070"
  },
  {
    "text": "warning this is super early this is",
    "start": "421070",
    "end": "423150"
  },
  {
    "text": "basically a shot in the dark so we",
    "start": "423150",
    "end": "425430"
  },
  {
    "text": "really want a lot of feedback from the",
    "start": "425430",
    "end": "427110"
  },
  {
    "text": "community and the thing to note is that",
    "start": "427110",
    "end": "429660"
  },
  {
    "text": "this takes heavily from existing work so",
    "start": "429660",
    "end": "431610"
  },
  {
    "text": "we don't aim to try to be clever and",
    "start": "431610",
    "end": "434340"
  },
  {
    "text": "solve it a different way if an existing",
    "start": "434340",
    "end": "436680"
  },
  {
    "text": "model works well then we should actually",
    "start": "436680",
    "end": "438389"
  },
  {
    "text": "adopt it to be the standard for",
    "start": "438389",
    "end": "440130"
  },
  {
    "text": "kubernetes now the way I'm going to",
    "start": "440130",
    "end": "442830"
  },
  {
    "text": "sketch this is first I'm going to talk",
    "start": "442830",
    "end": "444419"
  },
  {
    "text": "about the shape of resources basically",
    "start": "444419",
    "end": "446100"
  },
  {
    "text": "the model that we are thinking about",
    "start": "446100",
    "end": "447960"
  },
  {
    "text": "then I'm gonna talk about portability",
    "start": "447960",
    "end": "450930"
  },
  {
    "text": "extensibility how to make that a",
    "start": "450930",
    "end": "452460"
  },
  {
    "text": "first-class feature of the API and then",
    "start": "452460",
    "end": "454680"
  },
  {
    "text": "finally we will discuss future",
    "start": "454680",
    "end": "455970"
  },
  {
    "text": "directions and one of them would be",
    "start": "455970",
    "end": "457169"
  },
  {
    "text": "multi cluster so in terms of the model",
    "start": "457169",
    "end": "460169"
  },
  {
    "text": "if this is nothing earth-shattering",
    "start": "460169",
    "end": "461880"
  },
  {
    "text": "right we need to model the",
    "start": "461880",
    "end": "464220"
  },
  {
    "text": "infrastructure which is the load",
    "start": "464220",
    "end": "465750"
  },
  {
    "text": "balancing implementation separate it",
    "start": "465750",
    "end": "468180"
  },
  {
    "text": "from the application description and of",
    "start": "468180",
    "end": "470370"
  },
  {
    "text": "course we have the backends kubernetes",
    "start": "470370",
    "end": "472410"
  },
  {
    "text": "today now to anchor this discussion",
    "start": "472410",
    "end": "474930"
  },
  {
    "text": "would have a basically a strawman set of",
    "start": "474930",
    "end": "477450"
  },
  {
    "text": "resources we take from the sto model",
    "start": "477450",
    "end": "480419"
  },
  {
    "text": "this nice feature of representing the",
    "start": "480419",
    "end": "482970"
  },
  {
    "text": "Gateway or the proxy infrastructure as a",
    "start": "482970",
    "end": "485070"
  },
  {
    "text": "resource itself and we add on to that a",
    "start": "485070",
    "end": "488580"
  },
  {
    "text": "notion of class so you can imagine that",
    "start": "488580",
    "end": "490770"
  },
  {
    "text": "today we have ingress class and ingress",
    "start": "490770",
    "end": "493110"
  },
  {
    "text": "resources you have something similar",
    "start": "493110",
    "end": "494880"
  },
  {
    "text": "representing your proxy infrastructure",
    "start": "494880",
    "end": "497039"
  },
  {
    "text": "you may have a gateway class that",
    "start": "497039",
    "end": "499860"
  },
  {
    "text": "represents your nginx and another",
    "start": "499860",
    "end": "501750"
  },
  {
    "text": "gateway class that represents your cloud",
    "start": "501750",
    "end": "503400"
  },
  {
    "text": "infrastructure and then you can create",
    "start": "503400",
    "end": "504690"
  },
  {
    "text": "gateways from there in the middle you",
    "start": "504690",
    "end": "506760"
  },
  {
    "text": "have a virtual host now a virtual host",
    "start": "506760",
    "end": "508710"
  },
  {
    "text": "may be recursive like ingress route and",
    "start": "508710",
    "end": "510930"
  },
  {
    "text": "this is your application description so",
    "start": "510930",
    "end": "512909"
  },
  {
    "text": "this is what your application developer",
    "start": "512909",
    "end": "514709"
  },
  {
    "text": "will write to describe their application",
    "start": "514709",
    "end": "517080"
  },
  {
    "text": "routing and then it may be delegated to",
    "start": "517080",
    "end": "519810"
  },
  {
    "text": "support the different roles that you may",
    "start": "519810",
    "end": "521880"
  },
  {
    "text": "have in your hierarchy and finally we",
    "start": "521880",
    "end": "524700"
  },
  {
    "text": "have the backends which may be",
    "start": "524700",
    "end": "526200"
  },
  {
    "text": "heterogeneous so let's talk about",
    "start": "526200",
    "end": "528390"
  },
  {
    "text": "gateway so gateways split into two",
    "start": "528390",
    "end": "530940"
  },
  {
    "text": "pieces one of them is",
    "start": "530940",
    "end": "532649"
  },
  {
    "text": "class and gateway class really lets you",
    "start": "532649",
    "end": "535559"
  },
  {
    "text": "specify just like storage class",
    "start": "535559",
    "end": "537199"
  },
  {
    "text": "deployment specific options one concrete",
    "start": "537199",
    "end": "540300"
  },
  {
    "text": "example that we've seen a lot in ingress",
    "start": "540300",
    "end": "542699"
  },
  {
    "text": "is some ingress controllers merge all",
    "start": "542699",
    "end": "545069"
  },
  {
    "text": "the configurations together and",
    "start": "545069",
    "end": "546329"
  },
  {
    "text": "implement your ingress configurations in",
    "start": "546329",
    "end": "548999"
  },
  {
    "text": "one proxy other implementations take",
    "start": "548999",
    "end": "551519"
  },
  {
    "text": "each ingress definition and have a",
    "start": "551519",
    "end": "553619"
  },
  {
    "text": "separate virtual IP and load balancer",
    "start": "553619",
    "end": "555420"
  },
  {
    "text": "chain for them so that's that kind of",
    "start": "555420",
    "end": "558389"
  },
  {
    "text": "configuration will be attached to the",
    "start": "558389",
    "end": "560369"
  },
  {
    "text": "Gateway class now the Gateway represents",
    "start": "560369",
    "end": "563309"
  },
  {
    "text": "an actual instance of a load balancer or",
    "start": "563309",
    "end": "565649"
  },
  {
    "text": "proxy infrastructure and this is useful",
    "start": "565649",
    "end": "568350"
  },
  {
    "text": "because you can attach things like",
    "start": "568350",
    "end": "569759"
  },
  {
    "text": "capacity or different permissions to",
    "start": "569759",
    "end": "572459"
  },
  {
    "text": "various gateways in addition the Gateway",
    "start": "572459",
    "end": "576089"
  },
  {
    "text": "will be where you would define say",
    "start": "576089",
    "end": "577410"
  },
  {
    "text": "protocol termination ssl features and so",
    "start": "577410",
    "end": "579629"
  },
  {
    "text": "forth now gateways need to be matched up",
    "start": "579629",
    "end": "583139"
  },
  {
    "text": "with virtual hosts right and there",
    "start": "583139",
    "end": "584790"
  },
  {
    "text": "actually if you think about it there are",
    "start": "584790",
    "end": "586559"
  },
  {
    "text": "a couple of design options here you know",
    "start": "586559",
    "end": "588449"
  },
  {
    "text": "if Gateway referenced virtual host you",
    "start": "588449",
    "end": "590279"
  },
  {
    "text": "can add virtual host reference gateway",
    "start": "590279",
    "end": "591569"
  },
  {
    "text": "and so on and so forth",
    "start": "591569",
    "end": "592589"
  },
  {
    "text": "it seems to make the most sense taking",
    "start": "592589",
    "end": "594600"
  },
  {
    "text": "from the sto paradigm that the virtual",
    "start": "594600",
    "end": "597420"
  },
  {
    "text": "host attaches to the Gateway because if",
    "start": "597420",
    "end": "599370"
  },
  {
    "text": "you create a gateway that allows for all",
    "start": "599370",
    "end": "602399"
  },
  {
    "text": "virtual hosts to attach to it then you",
    "start": "602399",
    "end": "604139"
  },
  {
    "text": "have preserved this self-service model",
    "start": "604139",
    "end": "606809"
  },
  {
    "text": "that the original ingress has on the",
    "start": "606809",
    "end": "609660"
  },
  {
    "text": "other hand if you really want to lock it",
    "start": "609660",
    "end": "611220"
  },
  {
    "text": "down then you can have the gateway",
    "start": "611220",
    "end": "612629"
  },
  {
    "text": "filter the virtual host it serves thus",
    "start": "612629",
    "end": "614730"
  },
  {
    "text": "preserving the operational control of",
    "start": "614730",
    "end": "617160"
  },
  {
    "text": "the resource now in terms of virtual",
    "start": "617160",
    "end": "620670"
  },
  {
    "text": "hosts again this is like a very",
    "start": "620670",
    "end": "622439"
  },
  {
    "text": "high-level sketch it seems that if we go",
    "start": "622439",
    "end": "626129"
  },
  {
    "text": "with a match action model as how to",
    "start": "626129",
    "end": "628949"
  },
  {
    "text": "describe HTTP or l7 load balancing it's",
    "start": "628949",
    "end": "632399"
  },
  {
    "text": "a very generic model that lets us add",
    "start": "632399",
    "end": "634220"
  },
  {
    "text": "more matches and predicates later so we",
    "start": "634220",
    "end": "637350"
  },
  {
    "text": "can start with a very simple matcher for",
    "start": "637350",
    "end": "639299"
  },
  {
    "text": "example we can just support path based",
    "start": "639299",
    "end": "640949"
  },
  {
    "text": "for now and later we can hang more",
    "start": "640949",
    "end": "643199"
  },
  {
    "text": "predicates off of it as the cloud and",
    "start": "643199",
    "end": "645120"
  },
  {
    "text": "portable features get implemented and",
    "start": "645120",
    "end": "649019"
  },
  {
    "text": "then actions again right now you can",
    "start": "649019",
    "end": "652049"
  },
  {
    "text": "start with an action that just goes",
    "start": "652049",
    "end": "653249"
  },
  {
    "text": "sense to a back-end but again it gives",
    "start": "653249",
    "end": "655139"
  },
  {
    "text": "us a space to add more fancy processing",
    "start": "655139",
    "end": "658470"
  },
  {
    "text": "later for instance in this case you see",
    "start": "658470",
    "end": "659790"
  },
  {
    "text": "an action could be reply with 404 now",
    "start": "659790",
    "end": "663299"
  },
  {
    "text": "what would this look like again this is",
    "start": "663299",
    "end": "665249"
  },
  {
    "text": "just a sketch",
    "start": "665249",
    "end": "666649"
  },
  {
    "text": "but this is basically how the virtual",
    "start": "666649",
    "end": "669240"
  },
  {
    "text": "host may look like and then the kind of",
    "start": "669240",
    "end": "671430"
  },
  {
    "text": "configuration you would right so the",
    "start": "671430",
    "end": "673649"
  },
  {
    "text": "bottom line to take away from this slide",
    "start": "673649",
    "end": "675600"
  },
  {
    "text": "is what we want to do is still preserve",
    "start": "675600",
    "end": "677850"
  },
  {
    "text": "the simplicity of the existing ingress",
    "start": "677850",
    "end": "680130"
  },
  {
    "text": "but allow for future growth okay",
    "start": "680130",
    "end": "686279"
  },
  {
    "start": "685000",
    "end": "685000"
  },
  {
    "text": "so in terms of extensibility we have the",
    "start": "686279",
    "end": "689040"
  },
  {
    "text": "in schema extensibility but really a lot",
    "start": "689040",
    "end": "691440"
  },
  {
    "text": "of people also want the out of schema",
    "start": "691440",
    "end": "693600"
  },
  {
    "text": "extensibility and here this is something",
    "start": "693600",
    "end": "697020"
  },
  {
    "text": "we have to figure out as community it",
    "start": "697020",
    "end": "698580"
  },
  {
    "text": "seems like we need a decorator pattern",
    "start": "698580",
    "end": "700970"
  },
  {
    "text": "could there potentially be better API",
    "start": "700970",
    "end": "703320"
  },
  {
    "text": "machinery to do this or we could",
    "start": "703320",
    "end": "706550"
  },
  {
    "text": "decorate every single place with one of",
    "start": "706550",
    "end": "710190"
  },
  {
    "text": "these drinks training raw objects etc",
    "start": "710190",
    "end": "713089"
  },
  {
    "text": "this we really have to work out through",
    "start": "713089",
    "end": "715740"
  },
  {
    "text": "examples and UX with the end-user now",
    "start": "715740",
    "end": "719399"
  },
  {
    "text": "let's talk about portability and here is",
    "start": "719399",
    "end": "722910"
  },
  {
    "start": "721000",
    "end": "721000"
  },
  {
    "text": "where we're gonna propose a new strategy",
    "start": "722910",
    "end": "724500"
  },
  {
    "text": "to be pursued in terms of portability",
    "start": "724500",
    "end": "727020"
  },
  {
    "text": "this is kind of a different model than",
    "start": "727020",
    "end": "729149"
  },
  {
    "text": "kubernetes the question you might ask is",
    "start": "729149",
    "end": "732000"
  },
  {
    "text": "why why can't we use an existing model",
    "start": "732000",
    "end": "734070"
  },
  {
    "text": "so a lot of features of kubernetes have",
    "start": "734070",
    "end": "736770"
  },
  {
    "text": "grown up with the evolution human rights",
    "start": "736770",
    "end": "739050"
  },
  {
    "text": "itself for example container runtimes so",
    "start": "739050",
    "end": "741390"
  },
  {
    "text": "they're easier to bring in line with a",
    "start": "741390",
    "end": "742950"
  },
  {
    "text": "portable standard on the other hand we",
    "start": "742950",
    "end": "745589"
  },
  {
    "text": "have storage classes but they have very",
    "start": "745589",
    "end": "747300"
  },
  {
    "text": "orthogonal features that don't",
    "start": "747300",
    "end": "748920"
  },
  {
    "text": "necessarily conflict with each other",
    "start": "748920",
    "end": "750709"
  },
  {
    "text": "proxy implementations predate kubernetes",
    "start": "750709",
    "end": "753630"
  },
  {
    "text": "and they're pretty heterogeneous in",
    "start": "753630",
    "end": "755399"
  },
  {
    "text": "terms of feature sets what we want is a",
    "start": "755399",
    "end": "758040"
  },
  {
    "text": "way to express in the API something that",
    "start": "758040",
    "end": "760290"
  },
  {
    "text": "will have a gravity towards portability",
    "start": "760290",
    "end": "763050"
  },
  {
    "text": "towards a core API and it turns out when",
    "start": "763050",
    "end": "766890"
  },
  {
    "text": "we look at the way annotations are used",
    "start": "766890",
    "end": "768540"
  },
  {
    "text": "it's actually not very easy to corral",
    "start": "768540",
    "end": "770760"
  },
  {
    "text": "those annotations into a core so what",
    "start": "770760",
    "end": "773760"
  },
  {
    "text": "we're proposing is to have an expanding",
    "start": "773760",
    "end": "776490"
  },
  {
    "text": "ring of support so in the center we will",
    "start": "776490",
    "end": "779100"
  },
  {
    "text": "have a core API this is guaranteed",
    "start": "779100",
    "end": "781290"
  },
  {
    "text": "portable across all providers and really",
    "start": "781290",
    "end": "783630"
  },
  {
    "text": "the minimal set that's required to say",
    "start": "783630",
    "end": "785459"
  },
  {
    "text": "you are an ingress provider outside of",
    "start": "785459",
    "end": "789329"
  },
  {
    "text": "this there's an extended API the",
    "start": "789329",
    "end": "791130"
  },
  {
    "text": "extended API is still portable but the",
    "start": "791130",
    "end": "793740"
  },
  {
    "text": "but only on a feature by feature basis",
    "start": "793740",
    "end": "795690"
  },
  {
    "text": "so you",
    "start": "795690",
    "end": "797220"
  },
  {
    "text": "a support a feature in the extended API",
    "start": "797220",
    "end": "800639"
  },
  {
    "text": "but it must be portable and this will be",
    "start": "800639",
    "end": "803490"
  },
  {
    "text": "made part of the kubernetes api schema",
    "start": "803490",
    "end": "806250"
  },
  {
    "text": "and finally to catch all the other use",
    "start": "806250",
    "end": "808500"
  },
  {
    "text": "cases we have this custom layer on the",
    "start": "808500",
    "end": "810209"
  },
  {
    "text": "outside this will not be expressed in",
    "start": "810209",
    "end": "812220"
  },
  {
    "text": "the kubernetes api on the other hand you",
    "start": "812220",
    "end": "815339"
  },
  {
    "text": "have no requirements to make it portable",
    "start": "815339",
    "end": "817800"
  },
  {
    "text": "so what does this give us well this",
    "start": "817800",
    "end": "822600"
  },
  {
    "text": "creates a gravity to pull things into",
    "start": "822600",
    "end": "824550"
  },
  {
    "text": "the core for example if we know that say",
    "start": "824550",
    "end": "827910"
  },
  {
    "text": "80% of the implementations can support a",
    "start": "827910",
    "end": "830160"
  },
  {
    "text": "feature in the extended API and we",
    "start": "830160",
    "end": "832379"
  },
  {
    "text": "generally have a sense that everyone is",
    "start": "832379",
    "end": "834300"
  },
  {
    "text": "headed in that direction we can put it",
    "start": "834300",
    "end": "836129"
  },
  {
    "text": "in the extended API we can have",
    "start": "836129",
    "end": "837930"
  },
  {
    "text": "validations and so forth for it and then",
    "start": "837930",
    "end": "840060"
  },
  {
    "text": "this will standardize that usage for",
    "start": "840060",
    "end": "841920"
  },
  {
    "text": "when the day comes which we know is",
    "start": "841920",
    "end": "843420"
  },
  {
    "text": "coming but everyone's going to converge",
    "start": "843420",
    "end": "845189"
  },
  {
    "text": "and have this functionality so the",
    "start": "845189",
    "end": "849149"
  },
  {
    "text": "question would be ok this is kind of",
    "start": "849149",
    "end": "850680"
  },
  {
    "text": "complicated how do we actually make this",
    "start": "850680",
    "end": "852240"
  },
  {
    "text": "operationalize in practice so really you",
    "start": "852240",
    "end": "854910"
  },
  {
    "text": "have to have enforcement by conformance",
    "start": "854910",
    "end": "857310"
  },
  {
    "text": "tests right and each extended feature",
    "start": "857310",
    "end": "860519"
  },
  {
    "text": "definition requires a contained",
    "start": "860519",
    "end": "862470"
  },
  {
    "text": "conformance that will say hey your",
    "start": "862470",
    "end": "863970"
  },
  {
    "text": "implementation satisfies this feature",
    "start": "863970",
    "end": "866279"
  },
  {
    "text": "set and then this is a suggestion to see",
    "start": "866279",
    "end": "869399"
  },
  {
    "text": "if it's going to be possible is to",
    "start": "869399",
    "end": "871290"
  },
  {
    "text": "require all extended features to be",
    "start": "871290",
    "end": "873000"
  },
  {
    "text": "statically checkable what I mean by",
    "start": "873000",
    "end": "874949"
  },
  {
    "text": "statically checkable is when you submit",
    "start": "874949",
    "end": "876540"
  },
  {
    "text": "an API",
    "start": "876540",
    "end": "877829"
  },
  {
    "text": "yamo to me I can look and say oh yeah",
    "start": "877829",
    "end": "880139"
  },
  {
    "text": "you have this feature enabled I can",
    "start": "880139",
    "end": "881910"
  },
  {
    "text": "check in an admission controller if my",
    "start": "881910",
    "end": "884819"
  },
  {
    "text": "ingress actually supports this and you",
    "start": "884819",
    "end": "887879"
  },
  {
    "text": "can create tools around it to help",
    "start": "887879",
    "end": "889829"
  },
  {
    "text": "people migrate and be portable so in",
    "start": "889829",
    "end": "893879"
  },
  {
    "text": "terms of what this would look like in",
    "start": "893879",
    "end": "895589"
  },
  {
    "text": "actuality right",
    "start": "895589",
    "end": "896730"
  },
  {
    "text": "we do expect core ingress and maybe we",
    "start": "896730",
    "end": "899430"
  },
  {
    "text": "can add something like traffic splitting",
    "start": "899430",
    "end": "900600"
  },
  {
    "text": "that's well implemented by all the",
    "start": "900600",
    "end": "902899"
  },
  {
    "text": "controllers in the core API in the",
    "start": "902899",
    "end": "906720"
  },
  {
    "text": "extended we would have things that we",
    "start": "906720",
    "end": "908579"
  },
  {
    "text": "see cloud providers are moving towards",
    "start": "908579",
    "end": "910709"
  },
  {
    "text": "but not there yet like regex or rewrite",
    "start": "910709",
    "end": "913139"
  },
  {
    "text": "and finally your extremely neat feature",
    "start": "913139",
    "end": "917579"
  },
  {
    "text": "of course will never be in the core so",
    "start": "917579",
    "end": "922680"
  },
  {
    "start": "922000",
    "end": "922000"
  },
  {
    "text": "let's talk about future directions in",
    "start": "922680",
    "end": "924389"
  },
  {
    "text": "terms of interesting backends because I",
    "start": "924389",
    "end": "926160"
  },
  {
    "text": "sketched out that we will have a",
    "start": "926160",
    "end": "928559"
  },
  {
    "text": "resource that describes the",
    "start": "928559",
    "end": "930750"
  },
  {
    "text": "infrastructure",
    "start": "930750",
    "end": "931560"
  },
  {
    "text": "then we have a routing layer inside that",
    "start": "931560",
    "end": "934050"
  },
  {
    "text": "describes your applications and finally",
    "start": "934050",
    "end": "935790"
  },
  {
    "text": "the back ends there could be some",
    "start": "935790",
    "end": "938399"
  },
  {
    "text": "interesting things there too one of the",
    "start": "938399",
    "end": "940259"
  },
  {
    "text": "things I described was the storage",
    "start": "940259",
    "end": "941790"
  },
  {
    "text": "bucket which you can imagine the",
    "start": "941790",
    "end": "943079"
  },
  {
    "text": "community coming into a convergence",
    "start": "943079",
    "end": "945570"
  },
  {
    "text": "about how to describe storage buckets",
    "start": "945570",
    "end": "947220"
  },
  {
    "text": "but another one that would be",
    "start": "947220",
    "end": "948779"
  },
  {
    "text": "interesting as multi cluster services",
    "start": "948779",
    "end": "950310"
  },
  {
    "text": "and here to present that Rohit thank you",
    "start": "950310",
    "end": "954889"
  },
  {
    "text": "sorry so let's take a step back a little",
    "start": "954889",
    "end": "959970"
  },
  {
    "text": "bit and go over some use cases right so",
    "start": "959970",
    "end": "964319"
  },
  {
    "start": "960000",
    "end": "960000"
  },
  {
    "text": "note that to preface this when we talk",
    "start": "964319",
    "end": "967529"
  },
  {
    "text": "about a global application we mean where",
    "start": "967529",
    "end": "970410"
  },
  {
    "text": "your backends are deployed and say one",
    "start": "970410",
    "end": "972930"
  },
  {
    "text": "or more availability zones so canary so",
    "start": "972930",
    "end": "977399"
  },
  {
    "text": "typically you want to deploy your",
    "start": "977399",
    "end": "979550"
  },
  {
    "text": "application in one locality do whatever",
    "start": "979550",
    "end": "982500"
  },
  {
    "text": "checks you need to do and then roll that",
    "start": "982500",
    "end": "984630"
  },
  {
    "text": "out across the globe so that's a that's",
    "start": "984630",
    "end": "987240"
  },
  {
    "text": "one of the more simple use cases we see",
    "start": "987240",
    "end": "989540"
  },
  {
    "text": "and obviously you want to serve your",
    "start": "989540",
    "end": "993000"
  },
  {
    "text": "end-users as fast as possible and to do",
    "start": "993000",
    "end": "997290"
  },
  {
    "text": "that you want to ensure your backends",
    "start": "997290",
    "end": "999540"
  },
  {
    "text": "are as close to your user as possible so",
    "start": "999540",
    "end": "1001100"
  },
  {
    "text": "if you have a user in Australia they get",
    "start": "1001100",
    "end": "1003500"
  },
  {
    "text": "routed to backends that are closest to",
    "start": "1003500",
    "end": "1004970"
  },
  {
    "text": "Australia and something that builds off",
    "start": "1004970",
    "end": "1007550"
  },
  {
    "text": "that is high availability you want your",
    "start": "1007550",
    "end": "1009620"
  },
  {
    "text": "users to be served even if the backends",
    "start": "1009620",
    "end": "1013760"
  },
  {
    "text": "closest to them are down and in general",
    "start": "1013760",
    "end": "1017480"
  },
  {
    "text": "you're okay with a trade-off in that if",
    "start": "1017480",
    "end": "1020839"
  },
  {
    "text": "your backends are down you're okay with",
    "start": "1020839",
    "end": "1022370"
  },
  {
    "text": "serving or users a little bit slower but",
    "start": "1022370",
    "end": "1024829"
  },
  {
    "text": "they are being served right and hybrid a",
    "start": "1024829",
    "end": "1028909"
  },
  {
    "text": "very typical use case we see is teams",
    "start": "1028909",
    "end": "1033918"
  },
  {
    "text": "wanting to span cloud providers for",
    "start": "1033919",
    "end": "1037120"
  },
  {
    "text": "disaster recovery purposes or on Prem",
    "start": "1037120",
    "end": "1040428"
  },
  {
    "text": "for compliance reasons all right so to",
    "start": "1040429",
    "end": "1045110"
  },
  {
    "start": "1043000",
    "end": "1043000"
  },
  {
    "text": "kind of set the stage for what we'll be",
    "start": "1045110",
    "end": "1046938"
  },
  {
    "text": "showing you take a look at a user",
    "start": "1046939",
    "end": "1048919"
  },
  {
    "text": "journey and the kind of persona we're",
    "start": "1048919",
    "end": "1052100"
  },
  {
    "text": "looking at is an admin role and this",
    "start": "1052100",
    "end": "1055159"
  },
  {
    "text": "admin wants l7 load balancing across a",
    "start": "1055159",
    "end": "1058130"
  },
  {
    "text": "global service that's deployed on kate's",
    "start": "1058130",
    "end": "1060200"
  },
  {
    "text": "clusters and when we say this we mean",
    "start": "1060200",
    "end": "1062540"
  },
  {
    "text": "north-south load balancing",
    "start": "1062540",
    "end": "1064640"
  },
  {
    "text": "by this we mean traffic that's coming in",
    "start": "1064640",
    "end": "1068000"
  },
  {
    "text": "from your end users into your mesh of",
    "start": "1068000",
    "end": "1070400"
  },
  {
    "text": "services that's not to say that you need",
    "start": "1070400",
    "end": "1073010"
  },
  {
    "text": "to use sto or link or D this is as",
    "start": "1073010",
    "end": "1075740"
  },
  {
    "text": "opposed to east-west which is traffic",
    "start": "1075740",
    "end": "1077419"
  },
  {
    "text": "within your service mesh and you'd want",
    "start": "1077419",
    "end": "1080900"
  },
  {
    "text": "the ability to add and remove clusters",
    "start": "1080900",
    "end": "1082520"
  },
  {
    "text": "to the slowed bouncing based on your",
    "start": "1082520",
    "end": "1083960"
  },
  {
    "text": "business requirements so this gets back",
    "start": "1083960",
    "end": "1085580"
  },
  {
    "text": "to the use cases of low latency and high",
    "start": "1085580",
    "end": "1089030"
  },
  {
    "text": "availability and you want teams in your",
    "start": "1089030",
    "end": "1092419"
  },
  {
    "text": "organization to be able to manage their",
    "start": "1092419",
    "end": "1094039"
  },
  {
    "text": "own ingress this is kind of the",
    "start": "1094039",
    "end": "1095480"
  },
  {
    "text": "self-service model and you want there to",
    "start": "1095480",
    "end": "1098690"
  },
  {
    "text": "be obviously a clear boundary between",
    "start": "1098690",
    "end": "1100340"
  },
  {
    "text": "your admin who's kind of controlling",
    "start": "1100340",
    "end": "1102080"
  },
  {
    "text": "infrastructure and the end users which",
    "start": "1102080",
    "end": "1104390"
  },
  {
    "text": "are your developers and you lastly you",
    "start": "1104390",
    "end": "1107570"
  },
  {
    "text": "want your teams to be able to leverage",
    "start": "1107570",
    "end": "1108860"
  },
  {
    "text": "the kubernetes api it's a pretty",
    "start": "1108860",
    "end": "1111110"
  },
  {
    "text": "powerful tool and being able to express",
    "start": "1111110",
    "end": "1114919"
  },
  {
    "text": "this in a kubernetes api also reduces",
    "start": "1114919",
    "end": "1117080"
  },
  {
    "text": "the learning curve for your developers",
    "start": "1117080",
    "end": "1119590"
  },
  {
    "text": "all right so here's what we are",
    "start": "1119590",
    "end": "1122990"
  },
  {
    "text": "proposing from here on if you hear me",
    "start": "1122990",
    "end": "1126289"
  },
  {
    "text": "say MCI or MCs that's referring to multi",
    "start": "1126289",
    "end": "1129380"
  },
  {
    "text": "clustering rest Multi cluster service so",
    "start": "1129380",
    "end": "1132679"
  },
  {
    "text": "if you take a look at what's highlighted",
    "start": "1132679",
    "end": "1134480"
  },
  {
    "text": "in the red you will see that this is",
    "start": "1134480",
    "end": "1137030"
  },
  {
    "text": "very similar to the core",
    "start": "1137030",
    "end": "1140150"
  },
  {
    "text": "vanilla ingress and service",
    "start": "1140150",
    "end": "1142580"
  },
  {
    "text": "specification in fact in our proposal",
    "start": "1142580",
    "end": "1145789"
  },
  {
    "text": "what we've done is simply taken those",
    "start": "1145789",
    "end": "1148520"
  },
  {
    "text": "api's and embedded them inside the field",
    "start": "1148520",
    "end": "1150950"
  },
  {
    "text": "you see called template and the benefit",
    "start": "1150950",
    "end": "1153830"
  },
  {
    "text": "of this is that it this becomes very",
    "start": "1153830",
    "end": "1155419"
  },
  {
    "text": "pluggable as ingress and services evolve",
    "start": "1155419",
    "end": "1158770"
  },
  {
    "text": "we can conceivably replace their older",
    "start": "1158770",
    "end": "1162409"
  },
  {
    "text": "counterparts with the newer ones in kind",
    "start": "1162409",
    "end": "1164600"
  },
  {
    "text": "of a drag-and-drop fashion so the new",
    "start": "1164600",
    "end": "1170419"
  },
  {
    "text": "part here which is highlighted in red is",
    "start": "1170419",
    "end": "1172220"
  },
  {
    "text": "what we refer to kind of as clusters",
    "start": "1172220",
    "end": "1174530"
  },
  {
    "text": "selection so you kind of might be",
    "start": "1174530",
    "end": "1177919"
  },
  {
    "text": "wondering how this works so this is kind",
    "start": "1177919",
    "end": "1182030"
  },
  {
    "text": "of where the list of clusters",
    "start": "1182030",
    "end": "1183289"
  },
  {
    "text": "implementation Clemson for those of you",
    "start": "1183289",
    "end": "1185440"
  },
  {
    "text": "who are active in cig multi cluster",
    "start": "1185440",
    "end": "1188690"
  },
  {
    "text": "you've probably heard of the cluster",
    "start": "1188690",
    "end": "1189860"
  },
  {
    "text": "registry project",
    "start": "1189860",
    "end": "1191390"
  },
  {
    "text": "and a cluster registry is really just a",
    "start": "1191390",
    "end": "1193370"
  },
  {
    "text": "list of clusters and how that's",
    "start": "1193370",
    "end": "1195470"
  },
  {
    "text": "implemented is typically using a Cooper",
    "start": "1195470",
    "end": "1197300"
  },
  {
    "text": "Nettie's API server and a custom",
    "start": "1197300",
    "end": "1199820"
  },
  {
    "text": "resource definition and so how it works",
    "start": "1199820",
    "end": "1202040"
  },
  {
    "text": "is you're you define your clusters using",
    "start": "1202040",
    "end": "1204590"
  },
  {
    "text": "a CR D they have a certain set of labels",
    "start": "1204590",
    "end": "1206630"
  },
  {
    "text": "and your multi cluster service matches",
    "start": "1206630",
    "end": "1209030"
  },
  {
    "text": "on those labels and that's where you",
    "start": "1209030",
    "end": "1210950"
  },
  {
    "text": "dictate where you want your service to",
    "start": "1210950",
    "end": "1212450"
  },
  {
    "text": "live okay so this kind of diagram will",
    "start": "1212450",
    "end": "1217850"
  },
  {
    "start": "1215000",
    "end": "1215000"
  },
  {
    "text": "maybe hopefully drive home the user",
    "start": "1217850",
    "end": "1219890"
  },
  {
    "text": "journey I discussed earlier so given",
    "start": "1219890",
    "end": "1224030"
  },
  {
    "text": "that MCI and MCS are kubernetes api is",
    "start": "1224030",
    "end": "1226700"
  },
  {
    "text": "you need some place to store them this",
    "start": "1226700",
    "end": "1229460"
  },
  {
    "text": "is where the quote-unquote config source",
    "start": "1229460",
    "end": "1231710"
  },
  {
    "text": "comes in this is just a standard",
    "start": "1231710",
    "end": "1233540"
  },
  {
    "text": "kubernetes api server and ideally you",
    "start": "1233540",
    "end": "1236720"
  },
  {
    "text": "have an administrative figure like we",
    "start": "1236720",
    "end": "1238490"
  },
  {
    "text": "discussed earlier that maintains the API",
    "start": "1238490",
    "end": "1240710"
  },
  {
    "text": "server because after all it's",
    "start": "1240710",
    "end": "1242420"
  },
  {
    "text": "infrastructure and you need kubernetes",
    "start": "1242420",
    "end": "1246530"
  },
  {
    "text": "clusters to run your workloads again",
    "start": "1246530",
    "end": "1248630"
  },
  {
    "text": "ideally the administrative figure",
    "start": "1248630",
    "end": "1251030"
  },
  {
    "text": "manages the turn up and turn down of",
    "start": "1251030",
    "end": "1252710"
  },
  {
    "text": "these clusters and sidenote here nothing",
    "start": "1252710",
    "end": "1256790"
  },
  {
    "text": "is precluding you from having the config",
    "start": "1256790",
    "end": "1258920"
  },
  {
    "text": "source be on the same cluster as your",
    "start": "1258920",
    "end": "1260990"
  },
  {
    "text": "application backends we just separated",
    "start": "1260990",
    "end": "1262880"
  },
  {
    "text": "them for to make it easier to follow and",
    "start": "1262880",
    "end": "1266960"
  },
  {
    "text": "the thing that is omitted from this",
    "start": "1266960",
    "end": "1268280"
  },
  {
    "text": "picture is the cluster registry and",
    "start": "1268280",
    "end": "1272290"
  },
  {
    "text": "finally individual developers slash",
    "start": "1272290",
    "end": "1275960"
  },
  {
    "text": "teams first they manage their workloads",
    "start": "1275960",
    "end": "1279200"
  },
  {
    "text": "on these individual clusters and they",
    "start": "1279200",
    "end": "1281150"
  },
  {
    "text": "manage the l7 primitives ok so some",
    "start": "1281150",
    "end": "1287780"
  },
  {
    "start": "1286000",
    "end": "1286000"
  },
  {
    "text": "common questions we've gotten with this",
    "start": "1287780",
    "end": "1290480"
  },
  {
    "text": "first of all why not have a multi",
    "start": "1290480",
    "end": "1292700"
  },
  {
    "text": "cluster deployment on the surface it",
    "start": "1292700",
    "end": "1295400"
  },
  {
    "text": "seems like that may alleviate some of",
    "start": "1295400",
    "end": "1297770"
  },
  {
    "text": "the problems of having to go in and",
    "start": "1297770",
    "end": "1299240"
  },
  {
    "text": "create your deployments on each cluster",
    "start": "1299240",
    "end": "1301720"
  },
  {
    "text": "and the quick answer to that is we don't",
    "start": "1301720",
    "end": "1304490"
  },
  {
    "text": "want to be opinionated on how users",
    "start": "1304490",
    "end": "1306710"
  },
  {
    "text": "deploy their workloads it's not it's not",
    "start": "1306710",
    "end": "1309710"
  },
  {
    "text": "what we're trying to deliver with this",
    "start": "1309710",
    "end": "1310970"
  },
  {
    "text": "API and furthermore there's a lot of",
    "start": "1310970",
    "end": "1314510"
  },
  {
    "text": "best practices in the multi cluster",
    "start": "1314510",
    "end": "1317180"
  },
  {
    "text": "space with how to deploy workloads so",
    "start": "1317180",
    "end": "1319460"
  },
  {
    "text": "there's no one-size-fits-all approach",
    "start": "1319460",
    "end": "1321590"
  },
  {
    "text": "there",
    "start": "1321590",
    "end": "1323809"
  },
  {
    "text": "all right what about Federation so again",
    "start": "1323809",
    "end": "1326479"
  },
  {
    "text": "those of you who are active in the multi",
    "start": "1326479",
    "end": "1327889"
  },
  {
    "text": "cluster sig are familiar with Federation",
    "start": "1327889",
    "end": "1330019"
  },
  {
    "text": "v2 for those who are not Federation is",
    "start": "1330019",
    "end": "1333769"
  },
  {
    "text": "designed kind of to allow users to",
    "start": "1333769",
    "end": "1335599"
  },
  {
    "text": "deploy their workloads across multiple",
    "start": "1335599",
    "end": "1338090"
  },
  {
    "text": "clusters from a single API some common",
    "start": "1338090",
    "end": "1341299"
  },
  {
    "text": "use cases are distributing your app with",
    "start": "1341299",
    "end": "1343789"
  },
  {
    "text": "policy and multiple clusters disaster",
    "start": "1343789",
    "end": "1345559"
  },
  {
    "text": "recovery migration so you might be",
    "start": "1345559",
    "end": "1347779"
  },
  {
    "text": "wondering how what we've proposed to you",
    "start": "1347779",
    "end": "1349700"
  },
  {
    "text": "is different and the answer to that is a",
    "start": "1349700",
    "end": "1353090"
  },
  {
    "text": "kind of three parts the first one is",
    "start": "1353090",
    "end": "1355940"
  },
  {
    "text": "that the assumptions we are making",
    "start": "1355940",
    "end": "1357469"
  },
  {
    "text": "versus Federation are slightly different",
    "start": "1357469",
    "end": "1359629"
  },
  {
    "text": "one quick example is that there's a",
    "start": "1359629",
    "end": "1361789"
  },
  {
    "text": "resource I'm called federated ingress",
    "start": "1361789",
    "end": "1364249"
  },
  {
    "text": "which to keep it very short is deployed",
    "start": "1364249",
    "end": "1368839"
  },
  {
    "text": "in each of your clusters by the",
    "start": "1368839",
    "end": "1370249"
  },
  {
    "text": "Federation control plane in our case we",
    "start": "1370249",
    "end": "1372440"
  },
  {
    "text": "do not take that approach in Federation",
    "start": "1372440",
    "end": "1376099"
  },
  {
    "text": "is also opinionated on a lot of things",
    "start": "1376099",
    "end": "1378229"
  },
  {
    "text": "particularly across cluster DNS and",
    "start": "1378229",
    "end": "1380539"
  },
  {
    "text": "service discovery how you deploy your",
    "start": "1380539",
    "end": "1382909"
  },
  {
    "text": "workloads and that kind of ties in to",
    "start": "1382909",
    "end": "1385190"
  },
  {
    "text": "the Third Point which it Federation is",
    "start": "1385190",
    "end": "1388009"
  },
  {
    "text": "trying to solve a lot of use cases for",
    "start": "1388009",
    "end": "1389570"
  },
  {
    "text": "you what we are trying to deliver is a",
    "start": "1389570",
    "end": "1392479"
  },
  {
    "text": "more narrow offering and I say a la",
    "start": "1392479",
    "end": "1394190"
  },
  {
    "text": "carte here because that's really what it",
    "start": "1394190",
    "end": "1395570"
  },
  {
    "text": "is and so we're kind of comparing apples",
    "start": "1395570",
    "end": "1399349"
  },
  {
    "text": "to oranges here but it's important to",
    "start": "1399349",
    "end": "1401269"
  },
  {
    "text": "call out okay and it's do right now",
    "start": "1401269",
    "end": "1407269"
  },
  {
    "text": "there is no reference architecture for",
    "start": "1407269",
    "end": "1409570"
  },
  {
    "text": "how to do north-south load balancing",
    "start": "1409570",
    "end": "1412479"
  },
  {
    "text": "using the sto api's however we do see",
    "start": "1412479",
    "end": "1416089"
  },
  {
    "text": "that there's a potential for those api's",
    "start": "1416089",
    "end": "1418070"
  },
  {
    "text": "to adopt this use case at this point",
    "start": "1418070",
    "end": "1419960"
  },
  {
    "text": "it's just a matter of waiting and seeing",
    "start": "1419960",
    "end": "1423998"
  },
  {
    "text": "okay",
    "start": "1425259",
    "end": "1426440"
  },
  {
    "text": "so in conclusion we have three things",
    "start": "1426440",
    "end": "1429649"
  },
  {
    "start": "1428000",
    "end": "1428000"
  },
  {
    "text": "one is the initial kept proposal",
    "start": "1429649",
    "end": "1432999"
  },
  {
    "text": "basically illustrating this sketch",
    "start": "1432999",
    "end": "1435349"
  },
  {
    "text": "we're hope is coming shortly although we",
    "start": "1435349",
    "end": "1438019"
  },
  {
    "text": "do have to get the ingress v1 GA wrapped",
    "start": "1438019",
    "end": "1440059"
  },
  {
    "text": "up first but we'll probably have that",
    "start": "1440059",
    "end": "1442129"
  },
  {
    "text": "conversation in parallel because the v2",
    "start": "1442129",
    "end": "1444830"
  },
  {
    "text": "is going to be a pretty long track I",
    "start": "1444830",
    "end": "1446509"
  },
  {
    "text": "imagine the second thing and I have this",
    "start": "1446509",
    "end": "1448940"
  },
  {
    "text": "in bold is that feedback from the",
    "start": "1448940",
    "end": "1450469"
  },
  {
    "text": "community is key we would love to hear",
    "start": "1450469",
    "end": "1452599"
  },
  {
    "text": "what people's use cases are what makes",
    "start": "1452599",
    "end": "1455059"
  },
  {
    "text": "sense I think we got some feedback from",
    "start": "1455059",
    "end": "1457340"
  },
  {
    "text": "the contributor summit yesterday that oh",
    "start": "1457340",
    "end": "1459860"
  },
  {
    "text": "no you're gonna make me learn some more",
    "start": "1459860",
    "end": "1461600"
  },
  {
    "text": "resources please don't make me do that",
    "start": "1461600",
    "end": "1463520"
  },
  {
    "text": "that's always useful to know and then",
    "start": "1463520",
    "end": "1466070"
  },
  {
    "text": "finally we expect as part of this work",
    "start": "1466070",
    "end": "1468020"
  },
  {
    "text": "to come up with like a reference",
    "start": "1468020",
    "end": "1469520"
  },
  {
    "text": "implementation so everyone can look at",
    "start": "1469520",
    "end": "1472010"
  },
  {
    "text": "it especially the libraries for doing",
    "start": "1472010",
    "end": "1474410"
  },
  {
    "text": "conformance for various controller",
    "start": "1474410",
    "end": "1476180"
  },
  {
    "text": "implementers and that's it so thanks for",
    "start": "1476180",
    "end": "1480920"
  },
  {
    "text": "coming to our talk and this is our",
    "start": "1480920",
    "end": "1482810"
  },
  {
    "text": "contact information",
    "start": "1482810",
    "end": "1483740"
  },
  {
    "text": "[Applause]",
    "start": "1483740",
    "end": "1483980"
  },
  {
    "text": "[Music]",
    "start": "1483980",
    "end": "1488500"
  },
  {
    "text": "[Applause]",
    "start": "1488500",
    "end": "1491260"
  },
  {
    "text": "and we are open for questions I don't",
    "start": "1491260",
    "end": "1493430"
  },
  {
    "text": "know how this is going to repeat them",
    "start": "1493430",
    "end": "1496760"
  },
  {
    "text": "okay",
    "start": "1496760",
    "end": "1499330"
  },
  {
    "text": "okay so two questions one of the the",
    "start": "1546160",
    "end": "1551290"
  },
  {
    "text": "first one is how do we support something",
    "start": "1551290",
    "end": "1553450"
  },
  {
    "text": "like an envoy filter and then the second",
    "start": "1553450",
    "end": "1555880"
  },
  {
    "text": "question is there seems to be a lot of",
    "start": "1555880",
    "end": "1558760"
  },
  {
    "text": "duplication I think I may have to take",
    "start": "1558760",
    "end": "1560470"
  },
  {
    "text": "that one offline it might be hard to",
    "start": "1560470",
    "end": "1562750"
  },
  {
    "text": "answer so in terms of envoy filter that",
    "start": "1562750",
    "end": "1565060"
  },
  {
    "text": "would be what I would expect to live in",
    "start": "1565060",
    "end": "1567190"
  },
  {
    "text": "the custom land because it's so specific",
    "start": "1567190",
    "end": "1569470"
  },
  {
    "text": "to envoy now if we for example let's say",
    "start": "1569470",
    "end": "1572500"
  },
  {
    "text": "webassembly filters become somehow very",
    "start": "1572500",
    "end": "1575380"
  },
  {
    "text": "standardized it may be possible putting",
    "start": "1575380",
    "end": "1578830"
  },
  {
    "text": "the extended set but for now I would",
    "start": "1578830",
    "end": "1580750"
  },
  {
    "text": "imagine that stuff like the filters",
    "start": "1580750",
    "end": "1582730"
  },
  {
    "text": "would be sort of out of scope of the",
    "start": "1582730",
    "end": "1585900"
  },
  {
    "text": "portable standard does answer your first",
    "start": "1585900",
    "end": "1588820"
  },
  {
    "text": "question any other questions don't be",
    "start": "1588820",
    "end": "1595930"
  },
  {
    "text": "shy someone from over here hmm no",
    "start": "1595930",
    "end": "1603340"
  },
  {
    "text": "questions",
    "start": "1603340",
    "end": "1605730"
  },
  {
    "text": "all right going once twice",
    "start": "1607160",
    "end": "1614560"
  },
  {
    "text": "okay thank you",
    "start": "1614679",
    "end": "1616770"
  },
  {
    "text": "[Applause]",
    "start": "1616770",
    "end": "1617110"
  },
  {
    "text": "[Music]",
    "start": "1617110",
    "end": "1620290"
  }
]