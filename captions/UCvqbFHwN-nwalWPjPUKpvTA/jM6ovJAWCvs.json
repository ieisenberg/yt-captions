[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "we're here to show you how you can enable multi cloud with STL and the way we're gonna do that is use like stretch",
    "start": "0",
    "end": "6779"
  },
  {
    "text": "the SEO mesh across the multiple clouds we're gonna use a public cloud and a",
    "start": "6779",
    "end": "11969"
  },
  {
    "text": "private cloud and we'll show you a demo quite a bit of this talk is around showing you the actual how we actually",
    "start": "11969",
    "end": "18690"
  },
  {
    "text": "implemented the work so there's a few slides on that my name is John Joyce with the Cisco cloud CTO computing group",
    "start": "18690",
    "end": "28130"
  },
  {
    "text": "my name is Robin Lee I'm a lead software engineer at Cisco so this talk we're",
    "start": "28130",
    "end": "36600"
  },
  {
    "text": "really not gonna go into use cases of why you might want to do multi cloud or which applications or services could",
    "start": "36600",
    "end": "42360"
  },
  {
    "text": "take advantage multi cloud that's not the purpose or earlier talks I think they covered that this is more about how",
    "start": "42360",
    "end": "47579"
  },
  {
    "text": "you do it and showing you an example of actually doing it so where I will give",
    "start": "47579",
    "end": "54629"
  },
  {
    "start": "52000",
    "end": "88000"
  },
  {
    "text": "you a little bit of an introduction of SDO and a service mesh or most people familiar with sto and what a service",
    "start": "54629",
    "end": "59699"
  },
  {
    "text": "misha's there's anybody that's not really familiar with that okay well we",
    "start": "59699",
    "end": "66479"
  },
  {
    "text": "have a few slides so I'll try to go through them quickly since most people are familiar with it but then we'll talk more specifically about some of the",
    "start": "66479",
    "end": "72750"
  },
  {
    "text": "changes we did to enable the multi service I'm sorry the multi cluster in",
    "start": "72750",
    "end": "78840"
  },
  {
    "text": "sto and then then we'll get into the deployment details and then the actual",
    "start": "78840",
    "end": "84479"
  },
  {
    "text": "demo ok so the goal here is to be able",
    "start": "84479",
    "end": "92009"
  },
  {
    "start": "88000",
    "end": "137000"
  },
  {
    "text": "to as micro services as monolithic and larger services get decomposed into",
    "start": "92009",
    "end": "98100"
  },
  {
    "text": "micro services what we want to enable is that those micro services can run",
    "start": "98100",
    "end": "103380"
  },
  {
    "text": "anywhere on any cloud in any environment and you can do that safely and securely",
    "start": "103380",
    "end": "109070"
  },
  {
    "text": "and not have to worry really too much about the placement and the way we're",
    "start": "109070",
    "end": "116369"
  },
  {
    "text": "going to do that is with this do because this deal provides some of the that that security some of the the efficiency some",
    "start": "116369",
    "end": "123899"
  },
  {
    "text": "of the programmability some of the routing rules to allow you to achieve that separation and allow you to not be",
    "start": "123899",
    "end": "132390"
  },
  {
    "text": "as worried about the placement of your microservices so just a quick bit on",
    "start": "132390",
    "end": "140680"
  },
  {
    "start": "137000",
    "end": "204000"
  },
  {
    "text": "what a service meshes service mesh is a mesh of proxies that you act as like the",
    "start": "140680",
    "end": "146500"
  },
  {
    "text": "front end to the API between the micro services so what I'm showing here is",
    "start": "146500",
    "end": "153270"
  },
  {
    "text": "that you know you have a bunch of micro services or it's kind of a bit arbitrary what they may be they have api's between",
    "start": "153270",
    "end": "160450"
  },
  {
    "text": "themselves those ApS could be various protocols different formats and what we",
    "start": "160450",
    "end": "167950"
  },
  {
    "text": "what the mesh does is allow sort of an infrastructure that provides a common",
    "start": "167950",
    "end": "174190"
  },
  {
    "text": "infrastructure for these micro services to communicate securely with each other so what we're showing in this demo is",
    "start": "174190",
    "end": "180940"
  },
  {
    "text": "doing that with this do and we'll talk a little bit about the details I'm not going to talk about all the advantages",
    "start": "180940",
    "end": "187330"
  },
  {
    "text": "some of them are listed here but since most people are familiar with the service mesh you can kind of just read that in the in in the case of this do",
    "start": "187330",
    "end": "194650"
  },
  {
    "text": "the the proxies or sidecar inject it so there's a there's a nice separation there between the application act and",
    "start": "194650",
    "end": "201100"
  },
  {
    "text": "the actual proxy itself so this is the",
    "start": "201100",
    "end": "206970"
  },
  {
    "start": "204000",
    "end": "279000"
  },
  {
    "text": "VCO architecture it's the the figures borrowed directly from isseo i/o it's a",
    "start": "206970",
    "end": "213310"
  },
  {
    "text": "bit dated with some of the naming there's been quite a few naming changes in 0-8 so I would encourage you if you",
    "start": "213310",
    "end": "219730"
  },
  {
    "text": "really want the details to go to a CIO but I'm trying to convey a little bit of an architecture so you get a feel for",
    "start": "219730",
    "end": "225220"
  },
  {
    "text": "what a SDO is and how it runs it pilot is the piece of this do that controls",
    "start": "225220",
    "end": "232690"
  },
  {
    "text": "the proxies and creates the mesh for the proxies and has a view of the entire topology mixer is provides telemetry it",
    "start": "232690",
    "end": "241900"
  },
  {
    "text": "also provides some policy checks a little bit higher level security for",
    "start": "241900",
    "end": "248319"
  },
  {
    "text": "server side when the request comes to the server mixer is able to do a bit more authentication the SDO off has been",
    "start": "248319",
    "end": "258039"
  },
  {
    "text": "renamed this do Citadel and that provides the certification that starts",
    "start": "258039",
    "end": "263979"
  },
  {
    "text": "to envoy so that it can certified both application traffic and inter control plane traffic between like",
    "start": "263979",
    "end": "272410"
  },
  {
    "text": "envoy and it's communication with pilot",
    "start": "272410",
    "end": "277230"
  },
  {
    "text": "so what do we do with multi cluster so with multi cluster the the the the the",
    "start": "278940",
    "end": "284710"
  },
  {
    "start": "279000",
    "end": "377000"
  },
  {
    "text": "most important thing is that you were able to get the service and end point information from all the clusters over",
    "start": "284710",
    "end": "290950"
  },
  {
    "text": "to pilot in in this scenario here the ischial community is might have",
    "start": "290950",
    "end": "298720"
  },
  {
    "text": "different ways of doing this we were exploring different ways to do this but at the current time what support it is",
    "start": "298720",
    "end": "303940"
  },
  {
    "text": "there's a single pilot that communicates with all the API servers from all the",
    "start": "303940",
    "end": "309850"
  },
  {
    "text": "clusters regardless of what environment those clusters are running in okay so",
    "start": "309850",
    "end": "315040"
  },
  {
    "text": "each sto pilot gets the service endpoint data from all the other API servers and",
    "start": "315040",
    "end": "323080"
  },
  {
    "text": "then it it additionally so a little bit on how we",
    "start": "323080",
    "end": "329740"
  },
  {
    "text": "did that so we we borrowed the cig multi",
    "start": "329740",
    "end": "335110"
  },
  {
    "text": "cluster cluster registry as the source of where those clusters are not where",
    "start": "335110",
    "end": "341830"
  },
  {
    "text": "those clusters right but which clusters we want to connect with so we we used an early form of that we actually don't do",
    "start": "341830",
    "end": "347560"
  },
  {
    "text": "an API call it's more file based call right now but we are planning to extend that in the future to take full",
    "start": "347560",
    "end": "353590"
  },
  {
    "text": "advantage of the cluster registry and do API calls over to the cluster registry to get the set of clusters that are part",
    "start": "353590",
    "end": "359140"
  },
  {
    "text": "should be part of this multi cluster mesh so when based on the the cluster",
    "start": "359140",
    "end": "364600"
  },
  {
    "text": "registry information we create a controller and pilot that then goes off and interacts with each of those API",
    "start": "364600",
    "end": "371650"
  },
  {
    "text": "servers to get the service and endpoint data and and this shows what we do with",
    "start": "371650",
    "end": "379570"
  },
  {
    "start": "377000",
    "end": "441000"
  },
  {
    "text": "it so in this figure the the on-prem is sort of the left hand side the right",
    "start": "379570",
    "end": "386740"
  },
  {
    "text": "hand side is a gke based cluster and",
    "start": "386740",
    "end": "391810"
  },
  {
    "text": "we're running pilot only in the gke based cluster and basically what pilot",
    "start": "391810",
    "end": "397510"
  },
  {
    "text": "will do based on the cluster registry information we push to it it will interact with all the coop API servers",
    "start": "397510",
    "end": "404169"
  },
  {
    "text": "on all the clusters that will go to the service and endpoint data it will also get config data relative to like sto",
    "start": "404169",
    "end": "410409"
  },
  {
    "text": "route rules and stuff like that and it combines that in and and pushes it into",
    "start": "410409",
    "end": "415889"
  },
  {
    "text": "what's what we call pilot discovery so pilot discovery is a cache that",
    "start": "415889",
    "end": "421030"
  },
  {
    "text": "represents the entire XDS database for Envoy so when Envoy does an XDS request to get",
    "start": "421030",
    "end": "428650"
  },
  {
    "text": "its the it's you know it's CD SLDS RDS its XDS information pilot they able to",
    "start": "428650",
    "end": "436960"
  },
  {
    "text": "push that out to it okay so alongside of",
    "start": "436960",
    "end": "444639"
  },
  {
    "start": "441000",
    "end": "511000"
  },
  {
    "text": "the actual service and endpoint discovery this is kind of explaining what we do to have envoy be able to talk",
    "start": "444639",
    "end": "452440"
  },
  {
    "text": "to a single pilot and get the discovery data so what we do there is the way",
    "start": "452440",
    "end": "460389"
  },
  {
    "text": "envoy is configured envoy is configured with just a generic DNS entry on I'm",
    "start": "460389",
    "end": "466240"
  },
  {
    "text": "sorry a generic service name for pilot and mixer so what will happen is when",
    "start": "466240",
    "end": "472449"
  },
  {
    "text": "envoy comes up it's does a local DNS query of where is my pilot where is my",
    "start": "472449",
    "end": "478270"
  },
  {
    "text": "mixer that ends up pointing back to the single cluster that's hosting pilot a",
    "start": "478270",
    "end": "483400"
  },
  {
    "text": "mixer and then it just does a normal XDS discovery if you're all familiar with envoy it's just a protocol interaction",
    "start": "483400",
    "end": "490930"
  },
  {
    "text": "to get its XDS information so what in",
    "start": "490930",
    "end": "497080"
  },
  {
    "text": "order to do this what we have to make sure is that pilot there's a service representation for pilot and mixer in",
    "start": "497080",
    "end": "504460"
  },
  {
    "text": "every cluster and we do that via headless services in addition what we",
    "start": "504460",
    "end": "514300"
  },
  {
    "text": "have to make sure is that this the this asserts that both the Envoy needs at the",
    "start": "514300",
    "end": "520390"
  },
  {
    "text": "data plane level to communicate with pilot as well as the certs for the",
    "start": "520390",
    "end": "525579"
  },
  {
    "text": "applications communicate with each other are available and the way we do that is we run a sto citadel in",
    "start": "525579",
    "end": "532060"
  },
  {
    "text": "cluster and then we that all those certs are chained back to a single root",
    "start": "532060",
    "end": "537340"
  },
  {
    "text": "certificate this just like sort of shows the procedure we use to achieve that",
    "start": "537340",
    "end": "544170"
  },
  {
    "text": "okay so now a little bit on the deployment that you're gonna see so a",
    "start": "546510",
    "end": "555700"
  },
  {
    "start": "554000",
    "end": "638000"
  },
  {
    "text": "couple things that for this particular deployment demonstration some of the",
    "start": "555700",
    "end": "561490"
  },
  {
    "text": "environmental requirements yeah you must have IP reach ability between the clusters in the particular demo you'll",
    "start": "561490",
    "end": "569710"
  },
  {
    "text": "see we actually expose the pot IPS on all the clusters so you have pod reach",
    "start": "569710",
    "end": "576370"
  },
  {
    "text": "ability across the clusters and we take advantage of that you don't have to use the pods or are other ways you could do",
    "start": "576370",
    "end": "581710"
  },
  {
    "text": "this but in this particular demo we use pot IPS and have reach ability about across those IPs",
    "start": "581710",
    "end": "588520"
  },
  {
    "text": "the other thing is that your micro service itself is going to take advantage of dns and use dns to resolve",
    "start": "588520",
    "end": "594520"
  },
  {
    "text": "its peer services so if you have a service that doesn't have it",
    "start": "594520",
    "end": "600870"
  },
  {
    "text": "instantiation on a particular cluster you you need to do something in dns to",
    "start": "600870",
    "end": "605890"
  },
  {
    "text": "make sure that that service name is represented back on it differently if",
    "start": "605890",
    "end": "614380"
  },
  {
    "text": "you have a service in pod a and a service in pod b that wants to access",
    "start": "614380",
    "end": "620790"
  },
  {
    "text": "the pod a service you have to make sure there's a representation in pod b of the",
    "start": "620790",
    "end": "626950"
  },
  {
    "text": "poppy cluster b of the service that you want to access so we do that again with",
    "start": "626950",
    "end": "632110"
  },
  {
    "text": "headless services and and Robert we'll get into a little bit more detail in that in a minute",
    "start": "632110",
    "end": "639330"
  },
  {
    "start": "638000",
    "end": "669000"
  },
  {
    "text": "this is I kind of showed this figure a little bit before it's just a little bit",
    "start": "639330",
    "end": "644500"
  },
  {
    "text": "less cluttered in what you'll see here is we will have a bunch of control plane pods and sto Citadel is the only really",
    "start": "644500",
    "end": "652860"
  },
  {
    "text": "control plate element running on both the the gke and the on-prem side just",
    "start": "652860",
    "end": "660459"
  },
  {
    "text": "one little note some of this slides say GCP I hope the Google guys don't get mad at",
    "start": "660459",
    "end": "665589"
  },
  {
    "text": "me this is all gke based in our actual demo so a little bit a quick detail on",
    "start": "665589",
    "end": "673839"
  },
  {
    "start": "669000",
    "end": "780000"
  },
  {
    "text": "what you'll see with respect to the application so you understand the flow of things the applications based on",
    "start": "673839",
    "end": "678970"
  },
  {
    "text": "what's known as the book info application that's commonly used in in sto for both testing and and to display",
    "start": "678970",
    "end": "689170"
  },
  {
    "text": "the power of Sto so what happens is that the user makes a request to the product",
    "start": "689170",
    "end": "695079"
  },
  {
    "text": "page but the the actual service is decomposed in a couple microservices",
    "start": "695079",
    "end": "701170"
  },
  {
    "text": "running different languages as shown here and in the particular demo will show you the tan all the tan pods are",
    "start": "701170",
    "end": "708850"
  },
  {
    "text": "running on gke and we have a single micro service that's running on Prem to just be able to very easily see the",
    "start": "708850",
    "end": "715629"
  },
  {
    "text": "routing between the two to two scenarios and this I have a little bit of an",
    "start": "715629",
    "end": "722439"
  },
  {
    "text": "animation here showing you the actual flow of the client request when the",
    "start": "722439",
    "end": "728500"
  },
  {
    "text": "client makes it when an external client makes a request to the product page this is going to show you how the micro services work together to fulfill the",
    "start": "728500",
    "end": "736779"
  },
  {
    "text": "final response back so the end user will make a request the product page itself",
    "start": "736779",
    "end": "742509"
  },
  {
    "text": "will go to reviews to say get me my reviews portion for that request it also",
    "start": "742509",
    "end": "748720"
  },
  {
    "text": "get the details portion from the details pod now the more interesting part there",
    "start": "748720",
    "end": "755500"
  },
  {
    "text": "will be exhibit in the demo his reviews itself needs to go to deep rating service to get information on how many",
    "start": "755500",
    "end": "762370"
  },
  {
    "text": "stars it should depict and oops and then",
    "start": "762370",
    "end": "769480"
  },
  {
    "text": "finally all these all this data from the different micro services is aggregated",
    "start": "769480",
    "end": "775300"
  },
  {
    "text": "and sent back to the to the end user the end receiver so at this point Robert",
    "start": "775300",
    "end": "782290"
  },
  {
    "start": "780000",
    "end": "827000"
  },
  {
    "text": "will go into a little bit of details and show you some okay so John just talked",
    "start": "782290",
    "end": "787389"
  },
  {
    "text": "about the background and the architecture of Steel MIDI cluster and",
    "start": "787389",
    "end": "794019"
  },
  {
    "text": "also the booking for sample application deployment so I'm",
    "start": "794019",
    "end": "799290"
  },
  {
    "text": "going to go through the detail of the department for each steal and the",
    "start": "799290",
    "end": "805110"
  },
  {
    "text": "booking for application there's not",
    "start": "805110",
    "end": "810230"
  },
  {
    "text": "enough time to do a live demo here so what we do it is to pre deploy and we",
    "start": "810230",
    "end": "821279"
  },
  {
    "text": "took some screenshots and I'm going to go through that with you so you can see",
    "start": "821279",
    "end": "829889"
  },
  {
    "start": "827000",
    "end": "863000"
  },
  {
    "text": "on the screen we have two clusters on the top is the gke cluster we are going",
    "start": "829889",
    "end": "835470"
  },
  {
    "text": "to use as prama primary cluster and on the bottom is the unprimed cluster so",
    "start": "835470",
    "end": "845370"
  },
  {
    "text": "the unprimed cluster is deployed in one of our dmz sites and between the",
    "start": "845370",
    "end": "852089"
  },
  {
    "text": "clusters the pot pot networking is established by Vivian so now we are",
    "start": "852089",
    "end": "867870"
  },
  {
    "start": "863000",
    "end": "1003000"
  },
  {
    "text": "ready to deploy there are many ways to deploy and there is a documented",
    "start": "867870",
    "end": "877350"
  },
  {
    "text": "procedure that you can find at st dot io site for multi-class to the deployment",
    "start": "877350",
    "end": "883529"
  },
  {
    "text": "in this demo we choose to use this epoch",
    "start": "883529",
    "end": "888630"
  },
  {
    "text": "import make target to deploy sto and poke info so we execute this command in",
    "start": "888630",
    "end": "898529"
  },
  {
    "text": "the primary tiki cluster and as a result the Institute control plan will be",
    "start": "898529",
    "end": "904800"
  },
  {
    "text": "deployed over there so the most Civic",
    "start": "904800",
    "end": "911329"
  },
  {
    "text": "significant flag is the cluster registry der flag so",
    "start": "911329",
    "end": "917759"
  },
  {
    "text": "we store the coop config of the remote cluster over there and so the flag also",
    "start": "917759",
    "end": "927569"
  },
  {
    "text": "signals the et you testing for this is the matter custard appointment earlier I mentioned",
    "start": "927569",
    "end": "937699"
  },
  {
    "text": "that we're using a preliminary version of the cluster registry so it's it's a file based that's why you just see a",
    "start": "937699",
    "end": "943519"
  },
  {
    "text": "file based reference ultimately that will probably migrate to like more of an API call but at the time we did this the",
    "start": "943519",
    "end": "951259"
  },
  {
    "text": "cluster registry stuff was still quite a bit in flux so we we use the file based approach so we also deploy the e steel",
    "start": "951259",
    "end": "960679"
  },
  {
    "text": "and the book info in the east EO system namespace so now we press the enter and",
    "start": "960679",
    "end": "970219"
  },
  {
    "text": "the the deployment started going so",
    "start": "970219",
    "end": "975559"
  },
  {
    "text": "basically during this deployment we generate the East Adama file for both the GE cluster and the unprimed cluster",
    "start": "975559",
    "end": "983749"
  },
  {
    "text": "and we apply that Yama file in both clusters so in the same time we also",
    "start": "983749",
    "end": "990679"
  },
  {
    "text": "generate the booking for mo file and apply it over in the TK cluster now you",
    "start": "990679",
    "end": "997549"
  },
  {
    "text": "can see the deployment is going on quite well so now the deployment has been",
    "start": "997549",
    "end": "1006759"
  },
  {
    "text": "completely completed successfully and in the TK cluster you can see the sto",
    "start": "1006759",
    "end": "1012549"
  },
  {
    "text": "control components have been started and running how silly",
    "start": "1012549",
    "end": "1018009"
  },
  {
    "text": "so these components will include like pallet Citadel in mixer components and",
    "start": "1018009",
    "end": "1025749"
  },
  {
    "text": "the ingress and egress gateways you can also find that the book info application",
    "start": "1025749",
    "end": "1033249"
  },
  {
    "text": "is deployed over the GE cluster and we",
    "start": "1033249",
    "end": "1040139"
  },
  {
    "text": "we only have reviews version 1 and version 2 are running there so in",
    "start": "1040139",
    "end": "1045339"
  },
  {
    "text": "earlier slides you have seen that we have three versions of review micro services so we we only deploy the two",
    "start": "1045339",
    "end": "1054730"
  },
  {
    "text": "versions of reviews over in the TK cluster on the bottom you can see that",
    "start": "1054730",
    "end": "1061840"
  },
  {
    "text": "the only steel control component that we deployed is citadel and all the other",
    "start": "1061840",
    "end": "1070039"
  },
  {
    "text": "components are not running over there here we chose all the services that",
    "start": "1070039",
    "end": "1078049"
  },
  {
    "text": "running in the clusters so the in the te cluster you can see all the steel",
    "start": "1078049",
    "end": "1085639"
  },
  {
    "text": "services they all have cluster IPs and",
    "start": "1085639",
    "end": "1090909"
  },
  {
    "text": "on the bottom you can see the these two services we have deployed over there but",
    "start": "1092470",
    "end": "1100549"
  },
  {
    "text": "all these services are Halas and selector lists except for Citadel the",
    "start": "1100549",
    "end": "1106399"
  },
  {
    "text": "reason we have them created over there is because you know the site cars need",
    "start": "1106399",
    "end": "1113320"
  },
  {
    "text": "to discover their IPs by means of DNS",
    "start": "1113320",
    "end": "1120130"
  },
  {
    "start": "1121000",
    "end": "1159000"
  },
  {
    "text": "here we show all the endpoints that",
    "start": "1124029",
    "end": "1129909"
  },
  {
    "text": "created in either of the clusters for pallet is only running in the primary",
    "start": "1130360",
    "end": "1138639"
  },
  {
    "text": "cluster and we create the endpoint in the unprimed cluster so that you know",
    "start": "1138639",
    "end": "1145549"
  },
  {
    "text": "the data can be discovered and the set car running in the on prime cluster can",
    "start": "1145549",
    "end": "1151700"
  },
  {
    "text": "communicate with pallet and discover the mesh configuration here we highlighted",
    "start": "1151700",
    "end": "1162380"
  },
  {
    "text": "the externalities for the sto ingress this IP is going to be used by browsers",
    "start": "1162380",
    "end": "1171159"
  },
  {
    "text": "to to access the book in for service now",
    "start": "1171159",
    "end": "1183679"
  },
  {
    "text": "we are ready to deploy some of the booking for micro surfaces in the",
    "start": "1183679",
    "end": "1188899"
  },
  {
    "text": "unprimed cluster so we we only deploy the reviews version 3 in",
    "start": "1188899",
    "end": "1195620"
  },
  {
    "text": "prime cluster in the same time since the reviews service is going to call reading",
    "start": "1195620",
    "end": "1204320"
  },
  {
    "text": "service so we created select early selection list service readings service",
    "start": "1204320",
    "end": "1212870"
  },
  {
    "text": "in the unprimed cluster this is for this is so that you can the reveal service",
    "start": "1212870",
    "end": "1221480"
  },
  {
    "text": "can discover the reading service in the prime cluster so after we have done the",
    "start": "1221480",
    "end": "1234770"
  },
  {
    "start": "1228000",
    "end": "1252000"
  },
  {
    "text": "deployment of the review service this is the result this you can see on the",
    "start": "1234770",
    "end": "1239870"
  },
  {
    "text": "unprimed cluster so you can see the reviews version 3 is deployed and",
    "start": "1239870",
    "end": "1245150"
  },
  {
    "text": "running and the reading services also deployed over there",
    "start": "1245150",
    "end": "1252820"
  },
  {
    "start": "1252000",
    "end": "1311000"
  },
  {
    "text": "so after deployment so here we want to show you the the MOA configurations that",
    "start": "1254270",
    "end": "1262340"
  },
  {
    "text": "palette has generated so basically the site car will talk to palette to find",
    "start": "1262340",
    "end": "1270290"
  },
  {
    "text": "out all the XDS services configurations so here we shows",
    "start": "1270290",
    "end": "1279559"
  },
  {
    "text": "the reviews service that has been configured to the site car and for each",
    "start": "1279559",
    "end": "1288590"
  },
  {
    "text": "for the review service you know you can see the full DNS name reviews the steel",
    "start": "1288590",
    "end": "1296240"
  },
  {
    "text": "system the SVC loco and it also shows the site car",
    "start": "1296240",
    "end": "1302540"
  },
  {
    "text": "should use SDS service to discover all the end points and here we show that you",
    "start": "1302540",
    "end": "1314179"
  },
  {
    "start": "1311000",
    "end": "1382000"
  },
  {
    "text": "know the site car is sending the SDS in request to pilot and this is a return",
    "start": "1314179",
    "end": "1322240"
  },
  {
    "text": "that Jan palette will will respond you can see that the IP address one end to",
    "start": "1322240",
    "end": "1328940"
  },
  {
    "text": "the 172 2884 best the reviews version 3",
    "start": "1328940",
    "end": "1336190"
  },
  {
    "text": "endpoint that is running in the unprimed cluster it's a little difficult to see",
    "start": "1336190",
    "end": "1344809"
  },
  {
    "text": "here but the the the upper two stanzas are like reviews wanna use - and in the",
    "start": "1344809",
    "end": "1353450"
  },
  {
    "text": "bottom stanza is the reviews 3 so the upper two are from gke the bottom one",
    "start": "1353450",
    "end": "1359809"
  },
  {
    "text": "from on-prem yeah I think with that I'm",
    "start": "1359809",
    "end": "1364970"
  },
  {
    "text": "going to turn the podium to down as so he's going to show how to configure the",
    "start": "1364970",
    "end": "1370340"
  },
  {
    "text": "rules so that traffic can be steered between the clusters so I'm gonna try to",
    "start": "1370340",
    "end": "1376909"
  },
  {
    "text": "do this via live demo hopefully it all works",
    "start": "1376909",
    "end": "1381669"
  },
  {
    "start": "1382000",
    "end": "1501000"
  },
  {
    "text": "[Music]",
    "start": "1382700",
    "end": "1391319"
  },
  {
    "text": "okay so this is this is our cluster",
    "start": "1393539",
    "end": "1398009"
  },
  {
    "text": "[Music]",
    "start": "1399870",
    "end": "1402990"
  },
  {
    "text": "do you have to share",
    "start": "1411640",
    "end": "1415110"
  },
  {
    "text": "I think you have to you have to share",
    "start": "1426520",
    "end": "1433290"
  },
  {
    "text": "nice nicely",
    "start": "1455640",
    "end": "1458570"
  },
  {
    "text": "I just showed the media smart",
    "start": "1477059",
    "end": "1484580"
  },
  {
    "text": "sorry about the technical difficulties",
    "start": "1492429",
    "end": "1496990"
  },
  {
    "start": "1501000",
    "end": "1644000"
  },
  {
    "text": "display this once show the screen on it",
    "start": "1503080",
    "end": "1509330"
  },
  {
    "text": "oh here you go",
    "start": "1509330",
    "end": "1518140"
  },
  {
    "text": "he's the expert",
    "start": "1518140",
    "end": "1521500"
  },
  {
    "text": "say your BNC",
    "start": "1537510",
    "end": "1542540"
  },
  {
    "text": "so long have this screen",
    "start": "1562330",
    "end": "1566440"
  },
  {
    "text": "I apologize a little bit for this but",
    "start": "1582570",
    "end": "1587870"
  },
  {
    "text": "these are the workloads which were the same ones Robert was showing okay",
    "start": "1587870",
    "end": "1596330"
  },
  {
    "text": "worse",
    "start": "1604730",
    "end": "1607330"
  },
  {
    "text": "yeah okay so this is the sample app and right",
    "start": "1643540",
    "end": "1653009"
  },
  {
    "start": "1644000",
    "end": "1777000"
  },
  {
    "text": "now we have it's going to low balance a little bit between reviews wanna reviews",
    "start": "1653009",
    "end": "1660749"
  },
  {
    "text": "to which you can see by the stars okay and if we go up here we look at the",
    "start": "1660749",
    "end": "1674700"
  },
  {
    "text": "route rules there's only a default rule so now apply a different route rule",
    "start": "1674700",
    "end": "1685099"
  },
  {
    "text": "no work",
    "start": "1707170",
    "end": "1710160"
  },
  {
    "text": "[Music]",
    "start": "1748350",
    "end": "1751419"
  },
  {
    "text": "okay so now we have two out rules and if I go here now this particular out rule",
    "start": "1773130",
    "end": "1781200"
  },
  {
    "text": "is only sends user Jason over to v3 so I",
    "start": "1781200",
    "end": "1789210"
  },
  {
    "text": "haven't logged in as user of Jason right now so I'll still get the I should still",
    "start": "1789210",
    "end": "1794880"
  },
  {
    "text": "get load balancing between v1 and v2 but if I sign in",
    "start": "1794880",
    "end": "1801620"
  },
  {
    "text": "oh I get v3 so the idea here is now that",
    "start": "1806580",
    "end": "1812490"
  },
  {
    "text": "this all this traffic this could be like a canary perhaps the canary install or something but all the traffic for Jason when Jason",
    "start": "1812490",
    "end": "1821190"
  },
  {
    "text": "logs in will be routed over to the pod on Prem and we actually labeled the",
    "start": "1821190",
    "end": "1829350"
  },
  {
    "text": "application slightly differently so you can see that",
    "start": "1829350",
    "end": "1833510"
  },
  {
    "text": "just so you can see that",
    "start": "1847549",
    "end": "1850898"
  },
  {
    "text": "it's",
    "start": "1877140",
    "end": "1880140"
  },
  {
    "text": "thank you",
    "start": "1930260",
    "end": "1933040"
  },
  {
    "start": "1940000",
    "end": "2231000"
  },
  {
    "text": "so here's the actual llamo we used to for that role it's on Jason I'm",
    "start": "1941260",
    "end": "1949090"
  },
  {
    "text": "appointing to only use Jason so I had a few more examples but considering the",
    "start": "1949090",
    "end": "1954970"
  },
  {
    "text": "the challenge of trying to type and hold my head sideways and everything I think we're gonna skip those and we can go to",
    "start": "1954970",
    "end": "1961840"
  },
  {
    "text": "questions anybody have any questions",
    "start": "1961840",
    "end": "1967500"
  },
  {
    "text": "yeah thanks great talk currently the control plan for Easter or",
    "start": "1967890",
    "end": "1974470"
  },
  {
    "text": "most of it that's in the primary cluster so that makes that data center basically a single point of failure for me any",
    "start": "1974470",
    "end": "1980230"
  },
  {
    "text": "plans on taking that forward to being able to make that CEO redundant as well",
    "start": "1980230",
    "end": "1985500"
  },
  {
    "text": "so well two points it's it's the the clock yeah the cluster itself is a",
    "start": "1985500",
    "end": "1991630"
  },
  {
    "text": "single point of failure but you can obviously you know do things like scale the pods and stuff like that to try to",
    "start": "1991630",
    "end": "1998820"
  },
  {
    "text": "yeah sure so they're high in the SEO",
    "start": "1998820",
    "end": "2003990"
  },
  {
    "text": "community is explored something that generally we've called this work Multi cluster and generally called the other",
    "start": "2003990",
    "end": "2009809"
  },
  {
    "text": "work multi-cloud although we sometimes been fuzzy on the naming and the idea",
    "start": "2009809",
    "end": "2015120"
  },
  {
    "text": "there would be you to run pilot in multiple instances and then you'd have the pilots talking to each other so that",
    "start": "2015120",
    "end": "2021540"
  },
  {
    "text": "would provide you know more resiliency for that particular failure case alright great thanks",
    "start": "2021540",
    "end": "2029179"
  },
  {
    "text": "not what we haven't done that example in this demo actually my my peer here",
    "start": "2043580",
    "end": "2052850"
  },
  {
    "text": "Arvind has done a lot of work with what's known as in stos mesh expansion",
    "start": "2052850",
    "end": "2059559"
  },
  {
    "text": "so so so just so you all know the question was if you're not running a",
    "start": "2073770",
    "end": "2079350"
  },
  {
    "text": "kubernetes cluster on your other where you want to run your other micro",
    "start": "2079350",
    "end": "2084720"
  },
  {
    "text": "services what do you do okay and what what we were just talking about",
    "start": "2084720",
    "end": "2089878"
  },
  {
    "text": "everybody could hear is that what you run is a little bit of pilot on the on",
    "start": "2089879",
    "end": "2095250"
  },
  {
    "text": "the the the example scenario in SEO is what's known as mesh expansion where",
    "start": "2095250",
    "end": "2101880"
  },
  {
    "text": "it's a VM so you run like a little bit of pilot over there on the VM it's not a full control plane but it allows the",
    "start": "2101880",
    "end": "2108570"
  },
  {
    "text": "communication between pilot and the the non kubernetes cluster any other any",
    "start": "2108570",
    "end": "2121020"
  },
  {
    "text": "other questions",
    "start": "2121020",
    "end": "2123650"
  },
  {
    "text": "yeah so within the SEO community we've talked a little bit about the service broker okay",
    "start": "2131890",
    "end": "2138980"
  },
  {
    "text": "the question was have we taught thought about kind of combining this work with",
    "start": "2138980",
    "end": "2144320"
  },
  {
    "text": "the service broker so I don't my team",
    "start": "2144320",
    "end": "2149420"
  },
  {
    "text": "you know the team that's worked on this particular work we haven't spent a lot of time looking at that but within the",
    "start": "2149420",
    "end": "2155060"
  },
  {
    "text": "SEO community that's been a discussion point so the only besides the questions",
    "start": "2155060",
    "end": "2167240"
  },
  {
    "text": "I think the only I had a reference slide that I'll try to pull up real quick",
    "start": "2167240",
    "end": "2173410"
  },
  {
    "text": "provide some pointers oh we're at a time",
    "start": "2173410",
    "end": "2182660"
  },
  {
    "text": "so I'll just flash this real quick and then so here's some references it's in",
    "start": "2182660",
    "end": "2198230"
  },
  {
    "text": "the slide deck that's posted if you want to get it get it I think the only thing that I like to point out is we'd love to",
    "start": "2198230",
    "end": "2204770"
  },
  {
    "text": "have anybody that wants to contribute to this work extend it to other environments extend it to non kubernetes",
    "start": "2204770",
    "end": "2210320"
  },
  {
    "text": "environments we've tested this work on on print well in an on-prem case we've",
    "start": "2210320",
    "end": "2215600"
  },
  {
    "text": "tested this with OpenStack based VMs with vSphere hbm's people are testing it",
    "start": "2215600",
    "end": "2221330"
  },
  {
    "text": "with IBM cloud and we're going to try to plan to test this with two kubernetes clusters so there's definitely an",
    "start": "2221330",
    "end": "2227300"
  },
  {
    "text": "opportunity for people to get involved here if they'd like thank you everybody",
    "start": "2227300",
    "end": "2231970"
  }
]