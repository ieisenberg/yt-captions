[
  {
    "text": "it's gone quiet so I think that means I'm meant to start um so I really was not expecting to be in this room and I'm",
    "start": "40",
    "end": "6560"
  },
  {
    "text": "kind of astounded there so many people in this room are you sure you're in the right",
    "start": "6560",
    "end": "13559"
  },
  {
    "text": "room you're laughing but um okay so my name is Adrian Mo um I'm a technical",
    "start": "14320",
    "end": "20760"
  },
  {
    "text": "community advocate or Dev if you will for chain guard at chain guard we build minimal low cve container",
    "start": "20760",
    "end": "28960"
  },
  {
    "text": "images so this is one of my favorite quotes about um containers it's probably a",
    "start": "28960",
    "end": "35480"
  },
  {
    "text": "decade old it's by Brian canell who is a you know if you ever get a chance to see",
    "start": "35480",
    "end": "40760"
  },
  {
    "text": "a Brian canell talk do he's always amazing but he said Docker is doing to",
    "start": "40760",
    "end": "46239"
  },
  {
    "text": "app what app did to toar so way back in the day we used to use tar balls to ship",
    "start": "46239",
    "end": "52199"
  },
  {
    "text": "software around you know you just put your stuff in the tar.gz and send it around and that was okay it kind of",
    "start": "52199",
    "end": "58760"
  },
  {
    "text": "worked but there was always problem s with dependencies we work in my machine but not on somebody else's",
    "start": "58760",
    "end": "64518"
  },
  {
    "text": "machine um and then we start reducing things like putting stuff more stuff into the package managers and Linux",
    "start": "64519",
    "end": "71600"
  },
  {
    "text": "distributions um and that was a lot better because our package managers would take care of figuring out the",
    "start": "71600",
    "end": "77880"
  },
  {
    "text": "dependencies and so on and then Docker took it even a step",
    "start": "77880",
    "end": "83119"
  },
  {
    "text": "further um by packaging everything up down to the operating system",
    "start": "83119",
    "end": "88280"
  },
  {
    "text": "layer uh and that got us has much better reproducibility and solves this it works on my machine problem so that's kind of",
    "start": "88280",
    "end": "95560"
  },
  {
    "text": "what that that quotes getting at but even if you look at your package manager",
    "start": "95560",
    "end": "103040"
  },
  {
    "text": "formats your Debs your apks your RPMs Etc if you squint they're really just a",
    "start": "103040",
    "end": "110880"
  },
  {
    "text": "tar ball plus a little bit of metadata around versions and dependencies there's",
    "start": "110880",
    "end": "116479"
  },
  {
    "text": "not much else uh to and it's the same with container",
    "start": "116479",
    "end": "123759"
  },
  {
    "text": "images they're really just packaging for an application it's just a file system and",
    "start": "123759",
    "end": "131280"
  },
  {
    "text": "some metadata and theoretically at least they're not that difficult to create a container image there's even standards",
    "start": "131280",
    "end": "138360"
  },
  {
    "text": "documents that tell you exactly what files you need to get in there to get a running oci container",
    "start": "138360",
    "end": "144920"
  },
  {
    "text": "image so you might think well everybody will create their own container",
    "start": "144920",
    "end": "150640"
  },
  {
    "text": "to but we've not really seen that happen or at least we've not really seen people",
    "start": "150640",
    "end": "156280"
  },
  {
    "text": "create good container build tools we've may be seen a lot of build tools but not a lot of fantastic build",
    "start": "156280",
    "end": "164920"
  },
  {
    "text": "[Music] tooling um so what are some of the",
    "start": "166340",
    "end": "172560"
  },
  {
    "text": "things we would like to see in a image Builder well ideally if you want to your",
    "start": "172560",
    "end": "177720"
  },
  {
    "text": "best of image Builder is going to be able to build min minimal image so what do I mean by that I mean like our image",
    "start": "177720",
    "end": "183400"
  },
  {
    "text": "should only have our application and its immediate dependencies I don't want lots of operating system components other",
    "start": "183400",
    "end": "189720"
  },
  {
    "text": "things blo in the image it should be fast you don't want to be waiting a long time for images to build reproducible",
    "start": "189720",
    "end": "196239"
  },
  {
    "text": "that's an interesting one so this is kind of a sliding scale so docker's",
    "start": "196239",
    "end": "201519"
  },
  {
    "text": "fairely reproducible you've run it twice you get more or less the same thing out but you don't get something that's",
    "start": "201519",
    "end": "207360"
  },
  {
    "text": "bitwise reproducible as I don't get a binary that if I compare it I'll get exactly the same thing bit for bit",
    "start": "207360",
    "end": "215120"
  },
  {
    "text": "because there tends to be things like file time time stamps and the ually build IDs I think they solve the build",
    "start": "215120",
    "end": "220319"
  },
  {
    "text": "IDs one and then there are some other points that may or may not be important to you",
    "start": "220319",
    "end": "225920"
  },
  {
    "text": "like Simplicity I mean typically I'm going to prefer a simpler build tool but if you want to do something like uh",
    "start": "225920",
    "end": "231840"
  },
  {
    "text": "organization wide you may have a platform team that's responsible for your build tool and therefore Simplicity",
    "start": "231840",
    "end": "237519"
  },
  {
    "text": "may be less of an issue uh some people may really care about es bombs I suspect",
    "start": "237519",
    "end": "242599"
  },
  {
    "text": "that might be a a bigger thing in the future I had planned to talk about s bombs but um I don't know if you you",
    "start": "242599",
    "end": "248360"
  },
  {
    "text": "read the abstract from my talk I put far too much in there uh so that's one of the things I've trimmed a little bit um",
    "start": "248360",
    "end": "254680"
  },
  {
    "text": "generic so another thing we see with build tooling is you get things designed for specific ecosystems um and we'll see",
    "start": "254680",
    "end": "261359"
  },
  {
    "text": "that in a minute um but you also get build tooling designed to build",
    "start": "261359",
    "end": "266479"
  },
  {
    "text": "anything so this is where we came from so if you were using Docker you know 10 years ago",
    "start": "268720",
    "end": "276919"
  },
  {
    "text": "or 8 years ago then you did a Docker build something like this and this still works and still a perfectly valid way to",
    "start": "276919",
    "end": "284080"
  },
  {
    "text": "build a Docker image especially if you're just doing something locally so in this case we're just using the the Upstream goang image we're compiling our",
    "start": "284080",
    "end": "291280"
  },
  {
    "text": "go application and we're setting an entry point and that works as you're probably aware the problem is that we",
    "start": "291280",
    "end": "298680"
  },
  {
    "text": "still got all our build Tooling in that image so our final image doesn't just have a application it's got all the",
    "start": "298680",
    "end": "304240"
  },
  {
    "text": "build tooling it's got all the stuff in the underlying Debian operating system that we don't really need to run our",
    "start": "304240",
    "end": "309560"
  },
  {
    "text": "application and ideally I would like to get rid of that um because it's just a source of potential cves and",
    "start": "309560",
    "end": "318039"
  },
  {
    "text": "problems um yeah with Docker we still have this problem that it's not entirely reproducible but it's fairly",
    "start": "318039",
    "end": "326560"
  },
  {
    "text": "reproducible um and then we got multi-stage",
    "start": "328639",
    "end": "334560"
  },
  {
    "text": "builds I can't remember exactly when multi-stage came out but that was really a huge step in my opinion so if you",
    "start": "334560",
    "end": "341880"
  },
  {
    "text": "combine multi-stage Docker builds with minimal runtime images then I think",
    "start": "341880",
    "end": "347160"
  },
  {
    "text": "that's actually one of the best ways still to build container images so in",
    "start": "347160",
    "end": "352240"
  },
  {
    "text": "this example I'm using chain guard's go image to build a go Application I could as well have used the the go image from",
    "start": "352240",
    "end": "360680"
  },
  {
    "text": "before um I am doing zego enabled equals z which will give me a static image uh",
    "start": "360680",
    "end": "366280"
  },
  {
    "text": "that static image I'm copying over to the chain guard static image um for the runtime image",
    "start": "366280",
    "end": "374680"
  },
  {
    "text": "container and in this way I end up with a very small final image that doesn't contain all the build tool and Etc and",
    "start": "374840",
    "end": "381720"
  },
  {
    "text": "it'll just be a few megabytes in size uh in this case I've used the chinguard",
    "start": "381720",
    "end": "387840"
  },
  {
    "text": "static image you could also use the Google dist image they're honestly fairly",
    "start": "387840",
    "end": "393599"
  },
  {
    "text": "similar some of you might be saying well could you also use scratch like the completely empty scratch image and that",
    "start": "393599",
    "end": "401720"
  },
  {
    "text": "will work in some cases during a static binary where it falls down is that a lot of applications in Linux require or",
    "start": "401720",
    "end": "409520"
  },
  {
    "text": "expect a few more things from the host environment for example TLS certificates",
    "start": "409520",
    "end": "414840"
  },
  {
    "text": "it's a really common one like if you want to talk to anything securely you're going to need TLS certificates in your container other things include a user",
    "start": "414840",
    "end": "422520"
  },
  {
    "text": "some applications expect a Linux user to be present um SLT directory things like",
    "start": "422520",
    "end": "428160"
  },
  {
    "text": "that and that's exactly what the static images give you just enough to run uh",
    "start": "428160",
    "end": "433639"
  },
  {
    "text": "the average static",
    "start": "433639",
    "end": "436919"
  },
  {
    "text": "binary so yeah that's a huge step forward um you're typically not going to have any cves in this image unless like",
    "start": "442639",
    "end": "450000"
  },
  {
    "text": "you you know pulled in CV your go dependencies or something like that um",
    "start": "450000",
    "end": "455400"
  },
  {
    "text": "we're still using Docker so there's still some issues around reproducibility the other thing is you",
    "start": "455400",
    "end": "460879"
  },
  {
    "text": "need to have the example I showed there I worked for if you can compile a static binary but say you have a Java a node a",
    "start": "460879",
    "end": "468680"
  },
  {
    "text": "python project then you need to use a different image uh a minimal runtime image for that stap so if you look at",
    "start": "468680",
    "end": "475360"
  },
  {
    "text": "chainu images we do have minimal runtime images for all those so do go check out our images if you want to use this",
    "start": "475360",
    "end": "482080"
  },
  {
    "text": "approach Google also have a um several",
    "start": "482080",
    "end": "486720"
  },
  {
    "text": "more but the example I showed there was with um go and there's actually an even",
    "start": "487759",
    "end": "494039"
  },
  {
    "text": "simpler way to get uh a minimal image with go and that's to use this this tool called",
    "start": "494039",
    "end": "500159"
  },
  {
    "text": "KO um and in that case there's not even any config files unless you want one you",
    "start": "500159",
    "end": "505479"
  },
  {
    "text": "can literally just type KO build and you go project and it's going to build uh uh a",
    "start": "505479",
    "end": "512159"
  },
  {
    "text": "minimal image container with your go application and I think it actually used as a chain guard static image by default",
    "start": "512159",
    "end": "519320"
  },
  {
    "text": "so if you're using go that's definitely one to check",
    "start": "519320",
    "end": "523200"
  },
  {
    "text": "out but you might be thinking well hang on you're talking about these dis images",
    "start": "527560",
    "end": "533760"
  },
  {
    "text": "how are these disal list images made and can you use the same build tool that's used to make the this toist images",
    "start": "533760",
    "end": "541000"
  },
  {
    "text": "yourself uh and the answer is yes you can but you might not want",
    "start": "541000",
    "end": "546040"
  },
  {
    "text": "to um so Google container tools dist list is built with basil or basil",
    "start": "546040",
    "end": "552839"
  },
  {
    "text": "whatever it's called um and what they basically did was take Debian and hacked everything out of it to get a minimal",
    "start": "552839",
    "end": "559600"
  },
  {
    "text": "image um chain dis images we have our own build tool in called apko and we use",
    "start": "559600",
    "end": "565120"
  },
  {
    "text": "the Wolfie operating system or Linux distribution which is our own next",
    "start": "565120",
    "end": "571639"
  },
  {
    "text": "distribution okay I'm going to try and do a few brief demos we'll see how this",
    "start": "571760",
    "end": "578680"
  },
  {
    "text": "goes okay so first one is Basel am I in the Basel directory that's the first",
    "start": "580760",
    "end": "585880"
  },
  {
    "text": "thing we're in dagger that's not going to",
    "start": "585880",
    "end": "589839"
  },
  {
    "text": "help can people see this",
    "start": "591040",
    "end": "594920"
  },
  {
    "text": "okay sorry make it bigger it's good",
    "start": "596360",
    "end": "603600"
  },
  {
    "text": "okay one person talk make it bigger",
    "start": "606959",
    "end": "613880"
  },
  {
    "text": "okay I think the problems is at the bottom okay so um this is the example",
    "start": "614000",
    "end": "620959"
  },
  {
    "text": "basil examples from a company called aspect aspect are great they do lots of stuff around basil uh basil is",
    "start": "620959",
    "end": "626480"
  },
  {
    "text": "phenomenally powerful it's also phenomenally confusing um here's the build file I probably",
    "start": "626480",
    "end": "632920"
  },
  {
    "text": "shouldn't say that it is it's just very powerful and uh well my feelings will become clear from this example so this",
    "start": "632920",
    "end": "640279"
  },
  {
    "text": "is the build file it's actually reasonably straightforward um you can",
    "start": "640279",
    "end": "645519"
  },
  {
    "text": "see unsurprising things like it's telling you what the sources are what we're going to build the libraries the",
    "start": "645519",
    "end": "651839"
  },
  {
    "text": "binary we're going to put in a tar file the oci image uses a tar file also uses a dist base and that's kind of",
    "start": "651839",
    "end": "661200"
  },
  {
    "text": "it interesting well another bit is we have the modules file and because",
    "start": "661200",
    "end": "667880"
  },
  {
    "text": "there's a lot of had big focus on reproducibility and Supply chains of Basil um you have a modules file that",
    "start": "667880",
    "end": "674320"
  },
  {
    "text": "specifies the versions of everything uh so that's that there um and notice we",
    "start": "674320",
    "end": "680839"
  },
  {
    "text": "actually pull in the Google discource base image here and specifi the the digest and that's kind of interesting",
    "start": "680839",
    "end": "687639"
  },
  {
    "text": "because ideally you would think Basel you'd want to build everything from scratch for a supply chain reasons",
    "start": "687639",
    "end": "694440"
  },
  {
    "text": "there's not any really good reason why we're pull pulling in an external base image rather than creating one",
    "start": "694440",
    "end": "701760"
  },
  {
    "text": "here okay now I've built this before so this should",
    "start": "702399",
    "end": "708480"
  },
  {
    "text": "be fast work there we go so yeah it's it's",
    "start": "708480",
    "end": "716160"
  },
  {
    "text": "very very fast to rebuild things the first time you build something it does take a little bit longer and that's",
    "start": "716160",
    "end": "721800"
  },
  {
    "text": "built this toball it is a Docker image I can do this and it will load it into",
    "start": "721800",
    "end": "727639"
  },
  {
    "text": "Docker I'm not going to bother running whatever the image is I'm just showing it is a Docker image um one thing that I",
    "start": "727639",
    "end": "735680"
  },
  {
    "text": "and it is also very small um ls- LH so that tballs 10",
    "start": "735680",
    "end": "742399"
  },
  {
    "text": "megabytes so we are getting minimal images out um one thing I expected to happen",
    "start": "742399",
    "end": "750040"
  },
  {
    "text": "that doesn't happen I'm not sure why so if I do shaum on that I get",
    "start": "750040",
    "end": "757360"
  },
  {
    "text": "that and then if",
    "start": "757360",
    "end": "761279"
  },
  {
    "text": "[Music] I and rebuild",
    "start": "762600",
    "end": "768920"
  },
  {
    "text": "it I get a different sha so I assume there's a time stamp or something like",
    "start": "768920",
    "end": "774800"
  },
  {
    "text": "that in there um I was expecting to get exactly the same shaam but clearly I've",
    "start": "774800",
    "end": "780120"
  },
  {
    "text": "done something wrong or I don't understand something I did try and look at this so I I I typed this",
    "start": "780120",
    "end": "787000"
  },
  {
    "text": "command and this kind of sums up my feelings about basil this is the help",
    "start": "787000",
    "end": "792040"
  },
  {
    "text": "for the build command you're laughing this is probably",
    "start": "792040",
    "end": "798000"
  },
  {
    "text": "halfway it's insane it's still going there you go um",
    "start": "799680",
    "end": "806120"
  },
  {
    "text": "so you'll forgive me for giving up at that stage um so that's Basel um it's",
    "start": "806120",
    "end": "812279"
  },
  {
    "text": "very powerful but yeah it's also very",
    "start": "812279",
    "end": "819079"
  },
  {
    "text": "complicated um but yeah you get minimal images out of it I think the big thing though is battel will build everything",
    "start": "819079",
    "end": "825120"
  },
  {
    "text": "right it builds your go code it builds your Java Cod it build builds your C code um and provides like complete sort",
    "start": "825120",
    "end": "830959"
  },
  {
    "text": "of supply chain solution it's not really just for building container images uh so",
    "start": "830959",
    "end": "836079"
  },
  {
    "text": "if you want to get into basil you're going to know what you're doing I guess oops didn't click",
    "start": "836079",
    "end": "844040"
  },
  {
    "text": "that okay so the other alternative is appco or apko I've never like we built",
    "start": "846560",
    "end": "853639"
  },
  {
    "text": "it I still don't know how to pronounce it um yeah we can do an example of this",
    "start": "853639",
    "end": "860160"
  },
  {
    "text": "as well which is hopefully a lot simpler I do have some old build files",
    "start": "860160",
    "end": "867360"
  },
  {
    "text": "Lin around but the only file of interest is this build. apko file um so all we're",
    "start": "867360",
    "end": "873600"
  },
  {
    "text": "specifying is the repository in this case we want to get apks from the Wolfie repository you could also use Alpine you",
    "start": "873600",
    "end": "880399"
  },
  {
    "text": "can't mix and match them because Wolfie is compiled against GBC and Alpine's muzzle but um yeah you can use ether",
    "start": "880399",
    "end": "887279"
  },
  {
    "text": "here and we're saying we want to create a container image with the packages wolfy base and cicat bundle uh and also",
    "start": "887279",
    "end": "894959"
  },
  {
    "text": "set in some metadata on the image and that's it you can't do anything else an",
    "start": "894959",
    "end": "901880"
  },
  {
    "text": "appco everything inside your container image has to come from an APK you can't pull in random files you can't there's",
    "start": "901880",
    "end": "910199"
  },
  {
    "text": "no equivalent of Docker run commands for example so it's much much",
    "start": "910199",
    "end": "915360"
  },
  {
    "text": "simpler and less powerful arguably but",
    "start": "915360",
    "end": "920440"
  },
  {
    "text": "uh okay and then if I do app Cod",
    "start": "920440",
    "end": "925040"
  },
  {
    "text": "build that's what you get so so um hang on can I",
    "start": "926920",
    "end": "934680"
  },
  {
    "text": "a so in the what we're saying is appco build specified architecture then the",
    "start": "935199",
    "end": "940560"
  },
  {
    "text": "build file which is build appco the name of the image which is going to be wolfy Bas so this image literally just an",
    "start": "940560",
    "end": "945880"
  },
  {
    "text": "image with a shell and not a lot else um and then the file that it's going to",
    "start": "945880",
    "end": "952000"
  },
  {
    "text": "save out to so it's created this Wolfie based. tgz file again you can do Docker",
    "start": "952000",
    "end": "957920"
  },
  {
    "text": "load three that loads the image again it's",
    "start": "957920",
    "end": "965199"
  },
  {
    "text": "going to be fairly small there's a little bit more in this",
    "start": "965199",
    "end": "970440"
  },
  {
    "text": "so I guess it's maybe 15 megabytes or so oh 6 megabytes perfect",
    "start": "970440",
    "end": "978079"
  },
  {
    "text": "um but if I do share some",
    "start": "978079",
    "end": "984519"
  },
  {
    "text": "two6 so I get this very nice sh J some in this case it starts with the word added just by random chance um so let's",
    "start": "986519",
    "end": "995199"
  },
  {
    "text": "RM that and rerun the",
    "start": "995199",
    "end": "1001240"
  },
  {
    "text": "build and I get exactly the same sh some out so that is bitwise reproducible um",
    "start": "1006000",
    "end": "1013000"
  },
  {
    "text": "of course there is a little bit of a gotcha or not gotcha but thing to be aware of in this case",
    "start": "1013000",
    "end": "1019639"
  },
  {
    "text": "I haven't specified the exact versions of these packages you of course would need to specify the exact versions if",
    "start": "1019639",
    "end": "1025240"
  },
  {
    "text": "you wanted this to be reproducible in like a few weeks",
    "start": "1025240",
    "end": "1030360"
  },
  {
    "text": "time okay so that's",
    "start": "1031919",
    "end": "1036159"
  },
  {
    "text": "app um yeah simple declarative we' shown it to be reproducible you get a minimal",
    "start": "1038160",
    "end": "1044400"
  },
  {
    "text": "image out um I've written composers well with Docker files so like",
    "start": "1044400",
    "end": "1049520"
  },
  {
    "text": "we use app code to build this tool is minimal runtime images that you can then use with Docker files to put your",
    "start": "1049520",
    "end": "1057000"
  },
  {
    "text": "application code on top because you probably don't want to be building an APK for your application code and using",
    "start": "1057000",
    "end": "1063440"
  },
  {
    "text": "App code to create the final image me you can and it's not a bad thing to do but I guess most people aren't going to",
    "start": "1063440",
    "end": "1069160"
  },
  {
    "text": "do that and the other thing is of course if you used AP K you're dependent on",
    "start": "1069160",
    "end": "1074840"
  },
  {
    "text": "Wolfie packages you can create your own packages with either APK tools or mange",
    "start": "1074840",
    "end": "1082120"
  },
  {
    "text": "which is our way of creating um apks and interestingly we also have a",
    "start": "1082120",
    "end": "1089039"
  },
  {
    "text": "rules apko uh for Basil that was created by aspect again I",
    "start": "1089039",
    "end": "1094480"
  },
  {
    "text": "think and that solves the problem I mentioned before about basil pulling in",
    "start": "1094480",
    "end": "1099919"
  },
  {
    "text": "an outside image if you use rules apko inside your Basel build you can end up",
    "start": "1099919",
    "end": "1105360"
  },
  {
    "text": "with sort of a fully hermetic build from scratch",
    "start": "1105360",
    "end": "1110760"
  },
  {
    "text": "which is nice okay this one is interesting um canonical came out with",
    "start": "1111039",
    "end": "1117240"
  },
  {
    "text": "something called chisel containers this is basically their version of disis um",
    "start": "1117240",
    "end": "1123120"
  },
  {
    "text": "and they've managed to create uh very minimal um the two examples I've seen",
    "start": "1123120",
    "end": "1128240"
  },
  {
    "text": "are net and J I'm not sure they've released many other images um but the",
    "start": "1128240",
    "end": "1133559"
  },
  {
    "text": "ones they have released they're definitely minimal you know no cves or low cves",
    "start": "1133559",
    "end": "1139360"
  },
  {
    "text": "um and they look pretty good um the way they did it is kind of",
    "start": "1139360",
    "end": "1146720"
  },
  {
    "text": "interesting they use something called rockcraft so rockcraft I think this is",
    "start": "1146720",
    "end": "1152520"
  },
  {
    "text": "what creates the image I couldn't actually run it because it's all abunto and snap based so I couldn't install I",
    "start": "1152520",
    "end": "1158559"
  },
  {
    "text": "guess I could have created a darker image but yeah I wasn't actually that interested after I played with it um so",
    "start": "1158559",
    "end": "1166360"
  },
  {
    "text": "this is going to create I think a Docker image and this this is basically like telling",
    "start": "1166360",
    "end": "1171440"
  },
  {
    "text": "it what packages we want to install so this is saying install the hello package but you can also ask it for what calls",
    "start": "1171440",
    "end": "1179679"
  },
  {
    "text": "slices which you know is contining the Chisel metaphor so I guess you chisel out",
    "start": "1179679",
    "end": "1185039"
  },
  {
    "text": "slices um and then you you type something like hello bins and it'll only",
    "start": "1185039",
    "end": "1190240"
  },
  {
    "text": "install the binaries from the hello package assuming the bin slice has been defined so that's interesting and the",
    "start": "1190240",
    "end": "1197720"
  },
  {
    "text": "next question of course is how do you define these slices so this is the example from the rockcraft um tutorial",
    "start": "1197720",
    "end": "1206320"
  },
  {
    "text": "um and we have an example of slicing up the open SSL package so what we're",
    "start": "1206320",
    "end": "1211480"
  },
  {
    "text": "saying here is I want to create a bin slice that only has op SSL um C rehash",
    "start": "1211480",
    "end": "1218559"
  },
  {
    "text": "and the library is required to run that so what we're saying is yeah we're going to need libc libssl uh some config files",
    "start": "1218559",
    "end": "1226159"
  },
  {
    "text": "and these two binaries but I don't want anything else so you know it's going to cut out a lot of stuff and then it it says it does",
    "start": "1226159",
    "end": "1233559"
  },
  {
    "text": "need the config so down here we also have a bunch of config files that we're specifying in a separate",
    "start": "1233559",
    "end": "1241360"
  },
  {
    "text": "slice and my sort of issue with that is kind of right on the slide as well",
    "start": "1241360",
    "end": "1246440"
  },
  {
    "text": "because these are all hardcoded paths so what happens when the APK changes a path",
    "start": "1246440",
    "end": "1252200"
  },
  {
    "text": "or the name of a file presum there slice breaks and you have to update it so it does seem a bit manual and",
    "start": "1252200",
    "end": "1259120"
  },
  {
    "text": "potentially error prone so definitely seems kind of useful um",
    "start": "1259120",
    "end": "1264640"
  },
  {
    "text": "they've had some good results with it I'm not entirely convinced how generally",
    "start": "1264640",
    "end": "1270520"
  },
  {
    "text": "applicable it is also it it very much ties into the",
    "start": "1270520",
    "end": "1277679"
  },
  {
    "text": "whole um canonical ecosystem with charms",
    "start": "1277679",
    "end": "1283640"
  },
  {
    "text": "Etc yeah at build packs does anybody use build packs",
    "start": "1284960",
    "end": "1290520"
  },
  {
    "text": "yeah one or two it doesn't seem hugely popular um yeah build packs the main",
    "start": "1291279",
    "end": "1297520"
  },
  {
    "text": "thing about build packs is kind of easy to use and automatic uh they sort of pick up your config and do a a build",
    "start": "1297520",
    "end": "1304720"
  },
  {
    "text": "automatically um I didn't realize this but there seems to be multiple implementations of build",
    "start": "1304720",
    "end": "1310679"
  },
  {
    "text": "packs I used uh petto I can find the",
    "start": "1310679",
    "end": "1317520"
  },
  {
    "text": "sample but I wasn't overly impressed with the defaults I have to say",
    "start": "1317520",
    "end": "1323880"
  },
  {
    "text": "so yeah this is just like there's no there's no build pack config here it's just um a simple go",
    "start": "1323880",
    "end": "1331960"
  },
  {
    "text": "project you run it with pack there we go so we're saying pack build my",
    "start": "1331960",
    "end": "1338840"
  },
  {
    "text": "application uh use the P petto go build pack and we want the Jammy base so it's",
    "start": "1338840",
    "end": "1345919"
  },
  {
    "text": "using the Debian base image I've run this before so it should be fairly fast the first time I had to",
    "start": "1345919",
    "end": "1352200"
  },
  {
    "text": "download a whole bunch of images um there is some support for S bombs I don't think it analyzes the go",
    "start": "1352200",
    "end": "1359000"
  },
  {
    "text": "deps though okay that's built my image my app",
    "start": "1359000",
    "end": "1365120"
  },
  {
    "text": "now unlike some of the other ones it's not built a tire ball it has actually loaded that straight into the docker cache and my problem is that by",
    "start": "1365120",
    "end": "1374840"
  },
  {
    "text": "default it builds quite a large image so it's like 121 megabytes and if I",
    "start": "1374840",
    "end": "1382880"
  },
  {
    "text": "do you know I don't I'm not sure if they're keeping it up to date or it's just that that b image has a lot of cves",
    "start": "1387720",
    "end": "1394600"
  },
  {
    "text": "but it's not like a it really doesn't seem a great default or the other thing that happened and I haven't even figured",
    "start": "1394600",
    "end": "1399880"
  },
  {
    "text": "out how to fix this is if I try to run it it turns out it's built uh amd64",
    "start": "1399880",
    "end": "1407840"
  },
  {
    "text": "image even though like I ran it on a arm platform I kind of thought it would have",
    "start": "1407840",
    "end": "1412960"
  },
  {
    "text": "figured out hang on you r on arm let's build an arm image but it didn't I'm",
    "start": "1412960",
    "end": "1418039"
  },
  {
    "text": "sure I can't just pass a a flag somewhere and it will fix that um the other thing I should say is",
    "start": "1418039",
    "end": "1425720"
  },
  {
    "text": "um forgotten the guy's surname but there somebody called Ram that wrote for the new stack and he wrote a great article",
    "start": "1425720",
    "end": "1431679"
  },
  {
    "text": "on using wolfy as a base image for build packs which will solve quite a lot of my",
    "start": "1431679",
    "end": "1437159"
  },
  {
    "text": "criticisms there anyway um that's build packs the I guess",
    "start": "1437159",
    "end": "1443080"
  },
  {
    "text": "the big thing is I've shown it there for go there are examples for Java Ruby python Etc and again it's like zero or",
    "start": "1443080",
    "end": "1451159"
  },
  {
    "text": "low cont it should just work sort of",
    "start": "1451159",
    "end": "1455080"
  },
  {
    "text": "thing um build kit and Dagger yeah so this is one of my favorites so dagger is",
    "start": "1457520",
    "end": "1462799"
  },
  {
    "text": "actually built on top of bkit um if you're not aware bkit is the engine",
    "start": "1462799",
    "end": "1467960"
  },
  {
    "text": "under p in Docker build interesting thing is Docker files just scratch the surface of the power of",
    "start": "1467960",
    "end": "1474640"
  },
  {
    "text": "build kit I think they always want to create a better front ends but they never entirely Managed IT for whatever",
    "start": "1474640",
    "end": "1481480"
  },
  {
    "text": "reason but dagger does try to take advantage of more of the the power of",
    "start": "1481480",
    "end": "1486559"
  },
  {
    "text": "the bukit engine now dagger isn't designed just for building container image it's really designed to solve the",
    "start": "1486559",
    "end": "1492520"
  },
  {
    "text": "whole cicd problem um where you know you want you're trying to debug cicd but it",
    "start": "1492520",
    "end": "1497679"
  },
  {
    "text": "works differently you can't run it locally or at least it doesn't run the same locally as it does remotely and you end up you know with 20",
    "start": "1497679",
    "end": "1505039"
  },
  {
    "text": "commits that are all like works this time sort of and it always continues to fail and you're pulling your hair out so",
    "start": "1505039",
    "end": "1511000"
  },
  {
    "text": "that's the what daggers aimed at um oh yeah let's see the dagger",
    "start": "1511000",
    "end": "1518720"
  },
  {
    "text": "example so uh",
    "start": "1527320",
    "end": "1533039"
  },
  {
    "text": "dagger so in dagger the real sort of powerful thing you can do is Define your",
    "start": "1533039",
    "end": "1539440"
  },
  {
    "text": "build pipelines in code and you can kind of see there like it's designed for assembling powerful build pipelines",
    "start": "1539440",
    "end": "1547039"
  },
  {
    "text": "for multiple functions in this case I've used go there are like front ends for various different",
    "start": "1547039",
    "end": "1553360"
  },
  {
    "text": "languages um and what we're saying here is we're defining a function build and",
    "start": "1553360",
    "end": "1559799"
  },
  {
    "text": "publish um and there's multiple modules that you can already use in dagger so",
    "start": "1559799",
    "end": "1565760"
  },
  {
    "text": "dag is the short for dagger um we're using the Wolfie module so I think it",
    "start": "1565760",
    "end": "1571080"
  },
  {
    "text": "was Solomon himself or dagger anyway uh have created a Wolfie module that creates a Wolfie based container so this",
    "start": "1571080",
    "end": "1579679"
  },
  {
    "text": "dag Wolfie dot container is going to return a container",
    "start": "1579679",
    "end": "1585240"
  },
  {
    "text": "object called CTR and then in this step we're calling the goang module and we're",
    "start": "1585240",
    "end": "1591159"
  },
  {
    "text": "calling build container it's going to build our goang source and it's going to build it on top of this container image",
    "start": "1591159",
    "end": "1597799"
  },
  {
    "text": "that we're passing in and then we're going to call publish which is going to upload the image to a",
    "start": "1597799",
    "end": "1605520"
  },
  {
    "text": "registry again this is just the the basic example from the docs I've not written this",
    "start": "1605520",
    "end": "1611679"
  },
  {
    "text": "myself uh I it oh that was lucky so so uh to to sort",
    "start": "1611679",
    "end": "1620000"
  },
  {
    "text": "of call dagger functions it's dagger call so we're calling build and publish which is the name of that uh function we",
    "start": "1620000",
    "end": "1626520"
  },
  {
    "text": "defined a minute ago uh we passed a couple of arguments to do with a build source and build",
    "start": "1626520",
    "end": "1633000"
  },
  {
    "text": "args and one really nice thing about dagger is it gives you um quite nice output I have to say and like updates",
    "start": "1633000",
    "end": "1639399"
  },
  {
    "text": "and what it's doing it does everything in parallel and caches everything etc etc so yeah it's really quite fun output",
    "start": "1639399",
    "end": "1646720"
  },
  {
    "text": "I have to say and there we go it's built that and it's pushed it up to this",
    "start": "1646720",
    "end": "1653279"
  },
  {
    "text": "registry so I should be able to",
    "start": "1653279",
    "end": "1657440"
  },
  {
    "text": "do should have changed us to say hello keepon shouldn't I I",
    "start": "1660159",
    "end": "1666919"
  },
  {
    "text": "didn't you a local bin hello I don't",
    "start": "1670880",
    "end": "1675720"
  },
  {
    "text": "know oh it's cuz I didn't spell local right also my thing is com off the end of the",
    "start": "1677120",
    "end": "1685880"
  },
  {
    "text": "screen hey there we go okay so that's dagger um very powerful you can Define",
    "start": "1693080",
    "end": "1699200"
  },
  {
    "text": "things in code but it's really designed for the cicd problem more than just building",
    "start": "1699200",
    "end": "1704919"
  },
  {
    "text": "containers um the real strength though in dagger is the modules so they have something called a daverse um and people",
    "start": "1704919",
    "end": "1712080"
  },
  {
    "text": "are submitting their own modules there modules for things like apq and Wolfie already um so yeah um I really do",
    "start": "1712080",
    "end": "1719480"
  },
  {
    "text": "recommend checking out dagger it's pretty fantastic and the last thing I want to mention is NY",
    "start": "1719480",
    "end": "1725799"
  },
  {
    "text": "so I thought NY was going to be a fantastic solution when I started this um like has anybody else looked at NY",
    "start": "1725799",
    "end": "1732600"
  },
  {
    "text": "put your hand up yeah how many people agree that it's like going down a rabbit hole",
    "start": "1732600",
    "end": "1739159"
  },
  {
    "text": "yeah yeah it's so I theoretically at least NYX is",
    "start": "1739159",
    "end": "1744880"
  },
  {
    "text": "a fantastic solution for building containers because it's designed to be reproducible and it should be possible",
    "start": "1744880",
    "end": "1750159"
  },
  {
    "text": "to create minimal containers the problem I had is there's a thousand different ways to do things",
    "start": "1750159",
    "end": "1756919"
  },
  {
    "text": "and everybody tells you a different way to do it so I started down here at the bottom with the example from the doc I",
    "start": "1756919",
    "end": "1762919"
  },
  {
    "text": "never actually got that working completely because I think there was some issue with Mac OS that apparently is possible to but I don't know how um",
    "start": "1762919",
    "end": "1770360"
  },
  {
    "text": "then there's actually a really nice blog by Mitchell Hashimoto um and he wrote about how he builds things um with NYX",
    "start": "1770360",
    "end": "1777640"
  },
  {
    "text": "and uses mixes it with Docker file so quite an interesting approach I don't think it's idiomatic approach um but he",
    "start": "1777640",
    "end": "1784760"
  },
  {
    "text": "has a lot of success with it um then when I talked to somebody they told me no don't do that have a look at this",
    "start": "1784760",
    "end": "1791600"
  },
  {
    "text": "example that uses fak um and pointed me at Discord um but it",
    "start": "1791600",
    "end": "1798760"
  },
  {
    "text": "it was it was more than I could get going um and then two weeks ago in Hacker News somebody had a a talk called",
    "start": "1798760",
    "end": "1805799"
  },
  {
    "text": "building better Docker images with NYX or something um and they had a fource way of doing things so there's four",
    "start": "1805799",
    "end": "1812320"
  },
  {
    "text": "different ways of doing it and I do not know which is the correct way or if there is a correct way or if it even is",
    "start": "1812320",
    "end": "1818360"
  },
  {
    "text": "an idiomatic way um and that's my problem with Nick so I'm not even going to show an",
    "start": "1818360",
    "end": "1824320"
  },
  {
    "text": "example um yeah but I did find this great quote in The Hacker News comments",
    "start": "1824559",
    "end": "1830080"
  },
  {
    "text": "about that last article somebody said Nick I love it but sometimes it feels like being a Morty on Rick's ADV",
    "start": "1830080",
    "end": "1836519"
  },
  {
    "text": "adventure to compiler land and yeah I really like that quote because that was very much my",
    "start": "1836519",
    "end": "1844039"
  },
  {
    "text": "experience okay so wrapping up what would I recommend I think this like both Basel",
    "start": "1845000",
    "end": "1853640"
  },
  {
    "text": "and Dagger kind of are trying to solve bigger problems than just building containers",
    "start": "1853640",
    "end": "1858840"
  },
  {
    "text": "so basil you know builds everything um it doesn't just build containers it's going to build all your source code Etc",
    "start": "1858840",
    "end": "1865399"
  },
  {
    "text": "and I guess dagger is as well um you're only going to use basil if you want like",
    "start": "1865399",
    "end": "1871200"
  },
  {
    "text": "supply chain guarantees and things like that I guess you're going to know what you're getting into when you start playing with",
    "start": "1871200",
    "end": "1877000"
  },
  {
    "text": "Basel otherwise I wouldn't touch it um dagger I think dagger is going to be",
    "start": "1877000",
    "end": "1883720"
  },
  {
    "text": "pretty big I think it's a really pretty nice solution to the cic problem problem",
    "start": "1883720",
    "end": "1888840"
  },
  {
    "text": "uh and for that reason it might end up being used in quite a lot of smaller projects as well as it is quite easy to",
    "start": "1888840",
    "end": "1894200"
  },
  {
    "text": "get going with um yeah so if you have trouble with cicd and I think we all do",
    "start": "1894200",
    "end": "1900960"
  },
  {
    "text": "um then definitely take a look at dagger um after that if you if your",
    "start": "1900960",
    "end": "1909039"
  },
  {
    "text": "project is just like a small project and you it's in like a specific ecosystem like go or or Java um I would probably",
    "start": "1909039",
    "end": "1916360"
  },
  {
    "text": "look to see if there's a specific build to tool for that ecosystem so if I had a",
    "start": "1916360",
    "end": "1921720"
  },
  {
    "text": "go project I just wanted to create a container image for I would just use Co KO because that's it all work and it's",
    "start": "1921720",
    "end": "1928000"
  },
  {
    "text": "like zero effort and it gets me a good result um I've not played with it too",
    "start": "1928000",
    "end": "1933679"
  },
  {
    "text": "much but there is jib for Java that I assume does something very similar for like a generic tool that you",
    "start": "1933679",
    "end": "1939919"
  },
  {
    "text": "can use um across multiple teams Etc I would be use still be using multi-stage",
    "start": "1939919",
    "end": "1945679"
  },
  {
    "text": "Docker builds with dist base images for your runtimes yeah so please go and",
    "start": "1945679",
    "end": "1951159"
  },
  {
    "text": "check out the chard disas images um and see how they work for you but honestly for the majority of people I think",
    "start": "1951159",
    "end": "1957880"
  },
  {
    "text": "that's the simplest good solution where you end up with minimal low CV images um",
    "start": "1957880",
    "end": "1965760"
  },
  {
    "text": "that you can run in production uh you know you're obviously welcome to to play with appco for most",
    "start": "1965760",
    "end": "1973000"
  },
  {
    "text": "people I don't think it's I think you're only going to want to play with appco if you have a specific use case that appco is good for",
    "start": "1973000",
    "end": "1980120"
  },
  {
    "text": "because you're going to need to put everything you need into an",
    "start": "1980120",
    "end": "1985159"
  },
  {
    "text": "APK NYX honestly there's no point in putting NYX here because if you like NYX",
    "start": "1985159",
    "end": "1992159"
  },
  {
    "text": "then you're not going to listen to me anyway you're going to use it so yeah go ahead but NYX probably is a fantastic",
    "start": "1992159",
    "end": "1998760"
  },
  {
    "text": "solution I just couldn't find it um and yeah on that note thank you very much",
    "start": "1998760",
    "end": "2004080"
  },
  {
    "text": "that was all I have",
    "start": "2004080",
    "end": "2007398"
  }
]