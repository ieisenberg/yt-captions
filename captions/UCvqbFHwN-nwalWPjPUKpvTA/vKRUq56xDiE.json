[
  {
    "text": "so hi everyone it's great to be here personally kubecon and thanks for sticking around with us",
    "start": "320",
    "end": "6000"
  },
  {
    "text": "like i know it's late on a friday and everyone just wants to go but we're here to talk to you about",
    "start": "6000",
    "end": "11040"
  },
  {
    "text": "multi-cloud workload identity with spiffy i'm jake",
    "start": "11040",
    "end": "17119"
  },
  {
    "text": "i am one of the site manager maintainers um interested in all things identity and x509",
    "start": "17119",
    "end": "23359"
  },
  {
    "text": "and hey i'm charlie i work on the enterprise side of jetstack product and",
    "start": "23359",
    "end": "28400"
  },
  {
    "text": "i'm also interested in all things authentication and authorization",
    "start": "28400",
    "end": "33520"
  },
  {
    "text": "we're both senior software engineers uh working at jetstack and jetstart product and are both interested in spiffy",
    "start": "33520",
    "end": "40399"
  },
  {
    "text": "we think spiffy's really great and we're interested in trying to encourage more adoption in the in the technology and",
    "start": "40399",
    "end": "46960"
  },
  {
    "text": "that's why we're doing this talk during a company hackathon at the end of last year we worked on a project",
    "start": "46960",
    "end": "54719"
  },
  {
    "text": "that allowed was based on using spiffy ids to improve the developer experience for",
    "start": "54719",
    "end": "60879"
  },
  {
    "text": "cross-cloud identities or use of cross-cloud apis for cross-cloud workloads",
    "start": "60879",
    "end": "66400"
  },
  {
    "text": "and the work that we're presenting today is based on that so we're going to have a presentation",
    "start": "66400",
    "end": "71760"
  },
  {
    "text": "where we're going to explain about how we think about workload identity and what that means for us and then we're",
    "start": "71760",
    "end": "77520"
  },
  {
    "text": "going to have um a short and explain what we've built and have a short demo of that",
    "start": "77520",
    "end": "83439"
  },
  {
    "text": "and you'll also be able to get we'll also share a link to our code at the end if you're interested in",
    "start": "83439",
    "end": "89119"
  },
  {
    "text": "having a look yourselves it's a proof of concept but the code will be there",
    "start": "89119",
    "end": "94240"
  },
  {
    "text": "so what do we think about workflow identity what what is a workload identity",
    "start": "94240",
    "end": "99600"
  },
  {
    "text": "so [Music] an identity is a way for a workload to prove who it is prove its authenticity",
    "start": "99600",
    "end": "106079"
  },
  {
    "text": "to other workloads and other anything that it may be communicating with so",
    "start": "106079",
    "end": "111439"
  },
  {
    "text": "we believe that a workload identity workload should be issued this identity just by existing just by running in a",
    "start": "111439",
    "end": "117200"
  },
  {
    "text": "cluster just by running anywhere it's not something that it should you shouldn't have to have anything that it knows uh anything that it's any secret",
    "start": "117200",
    "end": "125040"
  },
  {
    "text": "that should be given beforehand it's something that it should get just by existing by running in some environment",
    "start": "125040",
    "end": "132480"
  },
  {
    "text": "so contrasting this to what we often see people doing uh with even with",
    "start": "132480",
    "end": "138480"
  },
  {
    "text": "kubernetes workloads is they're putting secrets in there in their deployments they're including secret tokens to talk",
    "start": "138480",
    "end": "145360"
  },
  {
    "text": "to other services like we we believe that those aren't identities and identity is a different thing an",
    "start": "145360",
    "end": "150959"
  },
  {
    "text": "identity is something that you have just by existing so um yeah the problem of course you",
    "start": "150959",
    "end": "158879"
  },
  {
    "text": "many of you will be aware of you know if you're trying to get secret tokens into many thousands millions of pods many",
    "start": "158879",
    "end": "165599"
  },
  {
    "text": "different tenants and many different clusters this very quickly becomes very challenging to manage at scale",
    "start": "165599",
    "end": "173040"
  },
  {
    "text": "we also believe that the best way to represent workload identity that we have",
    "start": "173040",
    "end": "178319"
  },
  {
    "text": "is with an unforgeable document and we we view that a good solution to that has been an x509 certificate",
    "start": "178319",
    "end": "185760"
  },
  {
    "text": "an unforgeable document is a document that represents your identity that can't be used by somebody else",
    "start": "185760",
    "end": "191280"
  },
  {
    "text": "it still proves who i am uh who what my what workload i am but it's not a document that can be stolen by a",
    "start": "191280",
    "end": "197920"
  },
  {
    "text": "malicious workload and replayed to somebody else and that's the way x509 is is good",
    "start": "197920",
    "end": "204400"
  },
  {
    "text": "because it's part of the communication is part of a challenge and i need to have the private key that goes companies",
    "start": "204400",
    "end": "209760"
  },
  {
    "text": "with that certificate to prove what that workload is who that workload is",
    "start": "209760",
    "end": "215519"
  },
  {
    "text": "and we also believe that workloads shouldn't need to have or do anything to get their identity so we talked about",
    "start": "215519",
    "end": "221920"
  },
  {
    "text": "how we don't want workloads to have a secret in order to go and work out who they are or to have to call someone we",
    "start": "221920",
    "end": "228239"
  },
  {
    "text": "don't want them to have to do anything they should find their identity available to them or their identity is",
    "start": "228239",
    "end": "234000"
  },
  {
    "text": "available to them without them even needing to know where it is",
    "start": "234000",
    "end": "238720"
  },
  {
    "text": "so what what do we have at the moment you're running in for example in a single cloud provider what do you have",
    "start": "239280",
    "end": "245519"
  },
  {
    "text": "available to you in a kubernetes environment that looks like this that looks like workload identity so many of",
    "start": "245519",
    "end": "251360"
  },
  {
    "text": "you will be running in gke and eks clusters aks clusters manage",
    "start": "251360",
    "end": "256479"
  },
  {
    "text": "kubernetes offerings these have all got something that looks a bit like what i've just described the workload",
    "start": "256479",
    "end": "262079"
  },
  {
    "text": "identity definition that we've just described it's possible for a workload which is",
    "start": "262079",
    "end": "268560"
  },
  {
    "text": "running in one of these clusters to get an identity without needing to know",
    "start": "268560",
    "end": "274000"
  },
  {
    "text": "anything without needing to request anything and it can use that identity to call um",
    "start": "274000",
    "end": "279759"
  },
  {
    "text": "apis in that cloud very easily and we see this as this this this part of the problem is is",
    "start": "279759",
    "end": "286400"
  },
  {
    "text": "or this in this case is solved uh what's good about these identities is",
    "start": "286400",
    "end": "292000"
  },
  {
    "text": "that they're easily consumed by cloud sdks if you're talking to a google cloud storage bucket the google cloud sdk is",
    "start": "292000",
    "end": "298800"
  },
  {
    "text": "able to make use of that workload identity and the workload doesn't need to know",
    "start": "298800",
    "end": "303919"
  },
  {
    "text": "that it's using the workload identity it could be using a service account but the sdk works that out for the developer",
    "start": "303919",
    "end": "310240"
  },
  {
    "text": "and the developer experience is quite good yeah developers also don't need to worry",
    "start": "310240",
    "end": "315440"
  },
  {
    "text": "about because of that developers don't need to worry about how they're going to get a key into their",
    "start": "315440",
    "end": "321280"
  },
  {
    "text": "service account key or some aws credentials into their workload so that they can talk to the things they need to",
    "start": "321280",
    "end": "326880"
  },
  {
    "text": "talk to so um yeah they so they don't need to do",
    "start": "326880",
    "end": "332800"
  },
  {
    "text": "anything extra there the other thing that's nice about these identities is that they're automatically rotated",
    "start": "332800",
    "end": "339919"
  },
  {
    "text": "so there's no hassle when you want to go and you don't need to when a key is exposed",
    "start": "339919",
    "end": "345600"
  },
  {
    "text": "for some reason maybe somebody commits it to a github repo or something they don't need to go around and update all the deployment scripts and you don't",
    "start": "345600",
    "end": "351680"
  },
  {
    "text": "have developers managing these secrets at all but we see a problem with these identities",
    "start": "351680",
    "end": "358639"
  },
  {
    "text": "or with with that if we don't see that as sufficient to solving this workload identity problem of making uh or this",
    "start": "358639",
    "end": "364720"
  },
  {
    "text": "goal of trying to make sure that all workloads have an identity um these identities are proprietary and",
    "start": "364720",
    "end": "372080"
  },
  {
    "text": "they are most useful and most easily used in your the cloud that the workload is resident in",
    "start": "372080",
    "end": "378240"
  },
  {
    "text": "it's easy for me to use my gke workload identity to talk to google apis but",
    "start": "378240",
    "end": "383520"
  },
  {
    "text": "although it is available identity federation is still another thing to configure that needs to be configured",
    "start": "383520",
    "end": "388560"
  },
  {
    "text": "such that you can call apis and other clouds and you also can't use this identity everywhere like you you can't",
    "start": "388560",
    "end": "394800"
  },
  {
    "text": "use this identity to talk natively to a postgres database because postgres uses",
    "start": "394800",
    "end": "400160"
  },
  {
    "text": "a different user and password and different way of authenticating callers",
    "start": "400160",
    "end": "405919"
  },
  {
    "text": "so the identity is is one of many identities and it's not universally accepted",
    "start": "405919",
    "end": "411440"
  },
  {
    "text": "yeah and so what this what's frustrating about this is even though we've got something that looks",
    "start": "411440",
    "end": "416800"
  },
  {
    "text": "like workload identity um and we even call it workload identity we're still back to that same problem of",
    "start": "416800",
    "end": "422960"
  },
  {
    "text": "a workload having many identities and managing many identities so",
    "start": "422960",
    "end": "430000"
  },
  {
    "text": "we we see that and then we're back to creating additional secrets and credentials outside so that we could",
    "start": "430800",
    "end": "436319"
  },
  {
    "text": "talk to other services that we need to talk to talk to that database or talk to that random thing that's still left on-prem",
    "start": "436319",
    "end": "442080"
  },
  {
    "text": "and that's a security issue where developers are managing these secrets in their deployment pipelines in different ways",
    "start": "442080",
    "end": "447840"
  },
  {
    "text": "potentially insecurely and in a large environment large multi-tenant environment it's really hard to keep track of it",
    "start": "447840",
    "end": "454479"
  },
  {
    "text": "credentials are left around they and so on they're not revoked when they're no longer used",
    "start": "454479",
    "end": "460639"
  },
  {
    "text": "of course the other thing about those extra those extra credentials which have been managed is that they're",
    "start": "460639",
    "end": "466560"
  },
  {
    "text": "not cryptographically identifying the the workload anymore they're just as we see it just another password",
    "start": "466560",
    "end": "473360"
  },
  {
    "text": "that could be if the misconfiguration were to happen another work picked up by another workload and used",
    "start": "473360",
    "end": "479919"
  },
  {
    "text": "such that identity is actually available to anybody who has the secret and we see that as a big problem",
    "start": "479919",
    "end": "487280"
  },
  {
    "text": "so what we would really like to see is that there was a production ready standard",
    "start": "487280",
    "end": "492720"
  },
  {
    "text": "for workload identity where workloads could have a single identity to talk to everything they needed to talk to",
    "start": "492720",
    "end": "497919"
  },
  {
    "text": "regardless of where that was um whether it was a cloud provider or another open source tool or another",
    "start": "497919",
    "end": "503440"
  },
  {
    "text": "workload that was um had been a custom workload in your organization um",
    "start": "503440",
    "end": "509120"
  },
  {
    "text": "it should be using the same identity and we'd love for that that for there to be a standard",
    "start": "509120",
    "end": "514640"
  },
  {
    "text": "so we're now going to pass over to jake to talk a bit about what what what we'd like how we'd like this to look and what",
    "start": "514640",
    "end": "520800"
  },
  {
    "text": "we've done in this area great thanks",
    "start": "520800",
    "end": "525839"
  },
  {
    "text": "so you've probably heard about spiffy by now because it's been mentioned a few times in this track",
    "start": "525839",
    "end": "533120"
  },
  {
    "text": "uh it stands for secure production identity framework for everyone and we first got exposed to it like four",
    "start": "533120",
    "end": "540320"
  },
  {
    "text": "years ago and i think in kubecon seattle and we thought it was just a really good idea",
    "start": "540320",
    "end": "546320"
  },
  {
    "text": "and it's the foundation from cloud agnostic kind of identity control plane",
    "start": "546320",
    "end": "551360"
  },
  {
    "text": "it's uh open specification and reference implementation inspire",
    "start": "551360",
    "end": "557040"
  },
  {
    "text": "to authenticate securely between services over untrusted networks without using passwords or api tokens",
    "start": "557040",
    "end": "563360"
  },
  {
    "text": "so if you think back to our first slide i think that's the first thing that we said",
    "start": "563360",
    "end": "569839"
  },
  {
    "text": "then the spiffy spec defines a spiffy id and the spiffy verifiable identity",
    "start": "570160",
    "end": "575920"
  },
  {
    "text": "document so these are standardized identity a spiffy id is looks a little",
    "start": "575920",
    "end": "581120"
  },
  {
    "text": "bit like a url you can see one underneath consisting of the trust domain and then",
    "start": "581120",
    "end": "586320"
  },
  {
    "text": "a any identity can go in the various path components it's human readable and it identifies a",
    "start": "586320",
    "end": "593040"
  },
  {
    "text": "person or a service and the svid or the spriffy verifiable identity",
    "start": "593040",
    "end": "599360"
  },
  {
    "text": "document it's a specially crafted x 509 certificate so it has a very specific",
    "start": "599360",
    "end": "605040"
  },
  {
    "text": "format um but more importantly you can use it to cryptographically identify the bearer",
    "start": "605040",
    "end": "610880"
  },
  {
    "text": "of the holder and again this is what we believe is the unforgivable document that should",
    "start": "610880",
    "end": "616480"
  },
  {
    "text": "represent our identity and finally if you're using your svid or",
    "start": "616480",
    "end": "622640"
  },
  {
    "text": "svid to perform a tls handshake mutual tls it means that both entities on each",
    "start": "622640",
    "end": "627920"
  },
  {
    "text": "side of the connection should be reasonably sure that the identity on the other side is who they",
    "start": "627920",
    "end": "632959"
  },
  {
    "text": "say they are so yeah it's unforgeable it's cncf incubating project and open",
    "start": "632959",
    "end": "639839"
  },
  {
    "text": "source so since 2020 spiffy's been incubating it's a collaborative effort based on",
    "start": "639839",
    "end": "645839"
  },
  {
    "text": "like many many engineering years of effort inside how kind of big companies that you've heard",
    "start": "645839",
    "end": "651519"
  },
  {
    "text": "of have integrated their service identities so we can take all that knowledge in cncf",
    "start": "651519",
    "end": "658480"
  },
  {
    "text": "and we are happy that it won't become proprietary at any point so happy to drive adoption of it",
    "start": "658480",
    "end": "665519"
  },
  {
    "text": "and i think we're not alone in this lots of people are starting to think about using",
    "start": "665519",
    "end": "670720"
  },
  {
    "text": "it and getting getting traction at these talks at least and we've seen a few customers at jet stack talk about it as well",
    "start": "670720",
    "end": "679120"
  },
  {
    "text": "so how do we take svids and make them cloud native",
    "start": "680399",
    "end": "685519"
  },
  {
    "text": "so as a maintainer of the manager project i'll just tell tell you about that too",
    "start": "685519",
    "end": "691760"
  },
  {
    "text": "so slap manager is a cncf sandbox project it's dedicated to all kind of",
    "start": "691760",
    "end": "696959"
  },
  {
    "text": "cloud native x509 certificate management but it's a kind of umbrella organization that encompassing several projects and",
    "start": "696959",
    "end": "704560"
  },
  {
    "text": "i'm kind of lucky enough that i spend a good time a good amount of my work time being allowed to contribute to it",
    "start": "704560",
    "end": "711519"
  },
  {
    "text": "and the first opponent we need is set manager itself it's a kind of very popular cuventis",
    "start": "711680",
    "end": "717120"
  },
  {
    "text": "operator most people are already using it even if they don't know they are",
    "start": "717120",
    "end": "722399"
  },
  {
    "text": "and we can issue x 509 certificates from morris neca so the project started at jet stack where we work and it was",
    "start": "722399",
    "end": "728399"
  },
  {
    "text": "originally originally designed for easily getting public acme or let's encrypt certificates for your ingresses",
    "start": "728399",
    "end": "735440"
  },
  {
    "text": "but we kind of support all kind of internal cas but and if we don't support it yet you",
    "start": "735440",
    "end": "741519"
  },
  {
    "text": "can easily write an integration so you can easily issue x59 certificates from your internal pka",
    "start": "741519",
    "end": "748639"
  },
  {
    "text": "and the idea of set managers that will automatically will automatically issue and rotate short-lived certificates for",
    "start": "748639",
    "end": "754480"
  },
  {
    "text": "you you don't need to worry about them and it's a cncf project it entered the sandbox in november 2020 and we're going",
    "start": "754480",
    "end": "761200"
  },
  {
    "text": "for incubation right now so hopefully before the next q con will be incubated",
    "start": "761200",
    "end": "767680"
  },
  {
    "text": "so we've got certain azure and now we need svids so we need our workload identity",
    "start": "768079",
    "end": "774320"
  },
  {
    "text": "so we have something called csi driver spiffy this is kind of officially in the spiffy project now if you scroll down on",
    "start": "774320",
    "end": "780079"
  },
  {
    "text": "spiffy.io you'll see it um we said earlier that workloads should",
    "start": "780079",
    "end": "785279"
  },
  {
    "text": "not have to do or know anything to get their identity so",
    "start": "785279",
    "end": "791120"
  },
  {
    "text": "if you've been in any spire talks they call this like solving with zeroth circle you don't need you don't need to trust something",
    "start": "791120",
    "end": "797360"
  },
  {
    "text": "you just need to get your identity from somewhere so a csi driver is a way of exposing a",
    "start": "797360",
    "end": "804320"
  },
  {
    "text": "file system to a pod and so it's part of the volume setup of your pod",
    "start": "804320",
    "end": "809920"
  },
  {
    "text": "it will happen before your workload starts and the cubelet tells you your",
    "start": "809920",
    "end": "815760"
  },
  {
    "text": "identity as part of starting a pod because by deploying something on kubernetes you've explicitly told the",
    "start": "815760",
    "end": "821600"
  },
  {
    "text": "cubelet i want you to start this pod and so",
    "start": "821600",
    "end": "827199"
  },
  {
    "text": "we're kind of pre-pod startup and we generate a let's see we get the",
    "start": "827199",
    "end": "832800"
  },
  {
    "text": "csi driver called we generate an in-memory private key we generate a csr from this and we submit that to set",
    "start": "832800",
    "end": "839440"
  },
  {
    "text": "manager so the important thing here is that the private we get an svid sign from set",
    "start": "839440",
    "end": "845120"
  },
  {
    "text": "manager and the private key never leaves the workload yeah",
    "start": "845120",
    "end": "850320"
  },
  {
    "text": "we can also put in kind of approval and attestation steps at this point like we have",
    "start": "850320",
    "end": "855680"
  },
  {
    "text": "we have something called approval policy which might integrate with what you're already using for your kind of compliance",
    "start": "855680",
    "end": "863120"
  },
  {
    "text": "but you could insert policy at this point and then yeah your identity is available",
    "start": "863120",
    "end": "868720"
  },
  {
    "text": "in the pod before the workload starts and the final part of",
    "start": "868720",
    "end": "874399"
  },
  {
    "text": "kind of any mutual tls is you need the trust bundles for your trust domain so we have a third project",
    "start": "874399",
    "end": "881199"
  },
  {
    "text": "in this demo called trust we don't actually know we'll keep that name because",
    "start": "881199",
    "end": "886240"
  },
  {
    "text": "it's a bit generic but it's kind of a trust root distribution management so how do you",
    "start": "886240",
    "end": "891360"
  },
  {
    "text": "verify that the sbid that is coming to you mutual cls is valid um well",
    "start": "891360",
    "end": "897760"
  },
  {
    "text": "a trust domain is basically a bundle of ca certificates and we'll just distribute them to workloads based on",
    "start": "897760",
    "end": "904320"
  },
  {
    "text": "the correct context right which workload should trust which trust domains",
    "start": "904320",
    "end": "910480"
  },
  {
    "text": "so we combine all of these um so all of our workloads will have uh svid",
    "start": "910480",
    "end": "916800"
  },
  {
    "text": "available before they start so at the beginning we we had a third point which was workloads should not",
    "start": "916800",
    "end": "923120"
  },
  {
    "text": "have to know or do anything to get their identity so how are we going to solve that",
    "start": "923120",
    "end": "929360"
  },
  {
    "text": "so we're kind of we like swifty a lot and we're trying to drive adoptions but if you look out in the ecosystem right now",
    "start": "930720",
    "end": "938480"
  },
  {
    "text": "most mostly the most the most users of sofia ids are just",
    "start": "938480",
    "end": "943839"
  },
  {
    "text": "using it to configure mtls between envoy instances which is great for the service measures",
    "start": "943839",
    "end": "950079"
  },
  {
    "text": "that are already using envoy they can adopt spiffy ids and all of your service mesh traffic will be completely",
    "start": "950079",
    "end": "956320"
  },
  {
    "text": "encrypted and validated like this works with istio and console connect and kuma and all the other",
    "start": "956320",
    "end": "962800"
  },
  {
    "text": "projects that are on spiffy.io but while they're using spiffy it doesn't increase adoption of the svid",
    "start": "962800",
    "end": "969680"
  },
  {
    "text": "because it's an opaque implementation detail like by default your you talk",
    "start": "969680",
    "end": "975040"
  },
  {
    "text": "unencrypted connections to your envoy sidecar envoy does the encryption and verifying",
    "start": "975040",
    "end": "980079"
  },
  {
    "text": "of the other end which is another envoy which decrypts it and then just passes it to you without any context",
    "start": "980079",
    "end": "986000"
  },
  {
    "text": "so you can't use the spiffy flavored mtls",
    "start": "986000",
    "end": "991040"
  },
  {
    "text": "directly and you can't verify who's calling to you this is this is sad so we want to",
    "start": "991040",
    "end": "998160"
  },
  {
    "text": "increase adoption of spiffy and the only way to do that is to make it easy to use",
    "start": "998160",
    "end": "1004160"
  },
  {
    "text": "and we want to get to the point where everything will use svs natively so for our kind of mini demo we",
    "start": "1004160",
    "end": "1012079"
  },
  {
    "text": "proof of concept we set out to recreate the state-of-the-art cloud provider experience that charlie talked about where you just call apis and they know",
    "start": "1012079",
    "end": "1018959"
  },
  {
    "text": "who you are but we want to use a standard identity document on different services like ah",
    "start": "1018959",
    "end": "1026319"
  },
  {
    "text": "spiffy id but the developer experience has to stay the same it has to be seamless to use so",
    "start": "1026319",
    "end": "1032240"
  },
  {
    "text": "they should just continue writing the same code they've always written and call their cloud services and it",
    "start": "1032240",
    "end": "1038000"
  },
  {
    "text": "just works so",
    "start": "1038000",
    "end": "1043120"
  },
  {
    "text": "we we're going to show you a live demo i hope it works and i'll just quickly show you what it looks like before we do it",
    "start": "1043120",
    "end": "1048799"
  },
  {
    "text": "so say you've got your app and you're talking to a cloud provider and it's just working",
    "start": "1048799",
    "end": "1054880"
  },
  {
    "text": "um we have built a connector called spiffy",
    "start": "1054880",
    "end": "1059919"
  },
  {
    "text": "connector it's very unimaginative which can verify a incoming sbid",
    "start": "1059919",
    "end": "1065600"
  },
  {
    "text": "and swap it for very very short-lived temporary cloud credentials so you still have them but they're very very",
    "start": "1065600",
    "end": "1071039"
  },
  {
    "text": "short-lived so you hopefully can't be stolen um",
    "start": "1071039",
    "end": "1076799"
  },
  {
    "text": "we have a sidecar in the pod uh",
    "start": "1076799",
    "end": "1082400"
  },
  {
    "text": "that is talking to this server over uh grpc and this grpc is using the go",
    "start": "1082720",
    "end": "1088799"
  },
  {
    "text": "spiffy library to authenticate and validate the incoming swift",
    "start": "1088799",
    "end": "1095280"
  },
  {
    "text": "um we can actually get our s bid from anywhere because we support fire as well",
    "start": "1095280",
    "end": "1100320"
  },
  {
    "text": "in case you already have it but we like our we like our csi driver so we're using",
    "start": "1100320",
    "end": "1106559"
  },
  {
    "text": "that in this demo the sidecar will automatically pick up the svid it will",
    "start": "1106559",
    "end": "1111919"
  },
  {
    "text": "talk to the spiffy connector server and exchange it for very short-lived cloud credentials",
    "start": "1111919",
    "end": "1116960"
  },
  {
    "text": "and write it in the kind of well-known location that the cloud sdks are already expecting potentials to be",
    "start": "1116960",
    "end": "1124320"
  },
  {
    "text": "and we and then you just call the cloud apis and it works and we know that you can do",
    "start": "1124400",
    "end": "1130160"
  },
  {
    "text": "this kind of already with kubernetes service account identity federation but this can this kind of idea is that",
    "start": "1130160",
    "end": "1136880"
  },
  {
    "text": "we're using a standardized identity it doesn't have to be on kubernetes like a lot of people trying struggling with",
    "start": "1136880",
    "end": "1142160"
  },
  {
    "text": "workload agencies are like how do we get from our on-prem and hybrid environments to clouds and this is how it would work",
    "start": "1142160",
    "end": "1151639"
  },
  {
    "text": "um yeah we just believe it's more secure as well because your single identity document is this signed x509 certificate",
    "start": "1151679",
    "end": "1158799"
  },
  {
    "text": "and if it's being minted from your internal ca you can check the audit logs if you say you know exactly how many",
    "start": "1158799",
    "end": "1165360"
  },
  {
    "text": "identities have been issued and who should be using them",
    "start": "1165360",
    "end": "1170960"
  },
  {
    "text": "so it's time for the live demo you ready yeah um let's see if i can get this too sharp",
    "start": "1172240",
    "end": "1182240"
  },
  {
    "text": "drag this over there let's go",
    "start": "1182799",
    "end": "1187760"
  },
  {
    "text": "start that first let's go back to this",
    "start": "1188799",
    "end": "1194320"
  },
  {
    "text": "i'll try to find micah so there's a big lag so bear with me i'm also going to have to",
    "start": "1194320",
    "end": "1199600"
  },
  {
    "text": "zoom this in a bit i think apologies lag",
    "start": "1199600",
    "end": "1207000"
  },
  {
    "text": "okay now if i do should have done this before but we're doing it now",
    "start": "1208799",
    "end": "1214799"
  },
  {
    "text": "live demo i think people can read that a bit more",
    "start": "1214799",
    "end": "1222480"
  },
  {
    "text": "okay that good enough okay cool so um",
    "start": "1223679",
    "end": "1229679"
  },
  {
    "text": "on my laptop i've got our demo running in a kind cluster",
    "start": "1229679",
    "end": "1234720"
  },
  {
    "text": "we're running those two green components you just saw on the on the diagram we've got this the spiffy connector",
    "start": "1234720",
    "end": "1240480"
  },
  {
    "text": "server which is issuing the short-lived credentials and we've got an example workload and we're going to first look",
    "start": "1240480",
    "end": "1246480"
  },
  {
    "text": "at how these two are deployed and then look at the things running on the cluster so let's first look at the spiffy",
    "start": "1246480",
    "end": "1252960"
  },
  {
    "text": "connector server deployment so um the spiffy connector server is it's",
    "start": "1252960",
    "end": "1260000"
  },
  {
    "text": "just a deployment it's a single single replica but it's importantly is",
    "start": "1260000",
    "end": "1265039"
  },
  {
    "text": "configured with an acl or a list of acls so here we can see that our example",
    "start": "1265039",
    "end": "1272640"
  },
  {
    "text": "what we're calling match principle matches the spiffy id of our example",
    "start": "1272640",
    "end": "1277679"
  },
  {
    "text": "application so you can see that that application or workload is able to get",
    "start": "1277679",
    "end": "1284720"
  },
  {
    "text": "certain sets of credentials so first it's able the first type of credential",
    "start": "1284720",
    "end": "1290240"
  },
  {
    "text": "it's able to get is a google i am service account key from the google i am service account key provider",
    "start": "1290240",
    "end": "1295679"
  },
  {
    "text": "with an object reference to this service account that's running in my personal gcp",
    "start": "1295679",
    "end": "1301039"
  },
  {
    "text": "project it's also able to get an aws credential for by assuming this role",
    "start": "1301039",
    "end": "1307840"
  },
  {
    "text": "uh from from a different provider from an aws sts assume role provider the server is also configured with its",
    "start": "1307840",
    "end": "1315120"
  },
  {
    "text": "own um ssbid so the server knows how to find its svid by looking somewhere at",
    "start": "1315120",
    "end": "1321760"
  },
  {
    "text": "looking at a a mounted set of files so that's also set in the in the service configuration",
    "start": "1321760",
    "end": "1328720"
  },
  {
    "text": "and that's so that the workload knows to trust the server and we'll see that in just a second",
    "start": "1328720",
    "end": "1333760"
  },
  {
    "text": "the deployment itself is is fairly fairly simple um it's it's just a spiffy connector server we we make use of this",
    "start": "1333760",
    "end": "1340559"
  },
  {
    "text": "config file i've just talked you through the other thing that the server does have is the server has",
    "start": "1340559",
    "end": "1347520"
  },
  {
    "text": "does have some credentials such that it is able to go and mint those short-term credentials so we've moved that away",
    "start": "1347520",
    "end": "1354159"
  },
  {
    "text": "from the the the long-lived cloud credentials away from the developer workloads into the specific connector",
    "start": "1354159",
    "end": "1360559"
  },
  {
    "text": "server in our example um and then so that's what what you're also seeing here um as you can again as you can see the",
    "start": "1360559",
    "end": "1367600"
  },
  {
    "text": "the spiffy id is also included as a volume mount um and this uh this biffy",
    "start": "1367600",
    "end": "1372880"
  },
  {
    "text": "ideas are made available to the server um using the csi spiffy integration that we have with set manager um so that's",
    "start": "1372880",
    "end": "1379840"
  },
  {
    "text": "how that's um that's how both the server and the workload are getting their s50 ids",
    "start": "1379840",
    "end": "1385120"
  },
  {
    "text": "and these volumes uh as you would expect for the cloud provided credentials",
    "start": "1385120",
    "end": "1391039"
  },
  {
    "text": "so now i'm going to show you the example app which has a sidecar running next to it",
    "start": "1391039",
    "end": "1397440"
  },
  {
    "text": "and we're going to have a look at what that configuration looks like too uh",
    "start": "1397440",
    "end": "1402799"
  },
  {
    "text": "the application that we're running uh is a simple application which is going to move files from one cloud to",
    "start": "1402799",
    "end": "1411280"
  },
  {
    "text": "another uh you might imagine some in other more complicated multi-cloud",
    "start": "1411280",
    "end": "1416960"
  },
  {
    "text": "workload example but that's what it's doing in our cases what the imagine that there's some use case that we want to",
    "start": "1416960",
    "end": "1422640"
  },
  {
    "text": "move files periodically or whatever between two two different clouds um so the configuration that the developers",
    "start": "1422640",
    "end": "1429039"
  },
  {
    "text": "have written is here they are exposing a service where people are instructing the application on a",
    "start": "1429039",
    "end": "1435120"
  },
  {
    "text": "given port and they are talking between two different buckets in the cloud provider and these",
    "start": "1435120",
    "end": "1441200"
  },
  {
    "text": "are configured here these are the two bucket names and it's also configured as a simple",
    "start": "1441200",
    "end": "1446720"
  },
  {
    "text": "deployment in in this deployment we have two containers we have the example application which runs and",
    "start": "1446720",
    "end": "1453760"
  },
  {
    "text": "serves the application and it has some some volume mounts to",
    "start": "1453760",
    "end": "1459279"
  },
  {
    "text": "to share the which are shared with the sidecar which it uses to access the short-lived credentials which are",
    "start": "1459279",
    "end": "1465440"
  },
  {
    "text": "collected by the sidecar um and just before you're wondering like oh hey look you know you said you're",
    "start": "1465440",
    "end": "1471600"
  },
  {
    "text": "going to make the developer experience better like this looks like something that the developer would need to",
    "start": "1471600",
    "end": "1476720"
  },
  {
    "text": "configure themselves like you could perhaps imagine if you were to use something like this that a mutating web",
    "start": "1476720",
    "end": "1482159"
  },
  {
    "text": "hook would inject configuration or sidecars as you are familiar with for other tools so",
    "start": "1482159",
    "end": "1488559"
  },
  {
    "text": "it's included here to help you understand what's going on like mutating webhook would be rather magic",
    "start": "1488559",
    "end": "1494000"
  },
  {
    "text": "and i felt that it was clearer just to show what it would look like so alongside the workload is the spiffy",
    "start": "1494000",
    "end": "1499919"
  },
  {
    "text": "connector sidecar and the spiffy connector sidecar is configured it expects to find a spiffy connector",
    "start": "1499919",
    "end": "1506720"
  },
  {
    "text": "server a particular place in the cluster um at this address",
    "start": "1506720",
    "end": "1512080"
  },
  {
    "text": "it also expects the spiffy connector server to present a particular spiffy id back uh it should have this id back and",
    "start": "1512080",
    "end": "1519520"
  },
  {
    "text": "otherwise it won't it won't talk to it um and it's also configured where to find its own spiffy id and that spiffy",
    "start": "1519520",
    "end": "1525440"
  },
  {
    "text": "id that it or its own svid and that svid is presented to the server to identify itself",
    "start": "1525440",
    "end": "1531520"
  },
  {
    "text": "um and i've just had a pop-up on my other screen i'm just going to",
    "start": "1531520",
    "end": "1537279"
  },
  {
    "text": "press skip deployment um and so yes and as as you can see it",
    "start": "1537279",
    "end": "1544559"
  },
  {
    "text": "also has these same shared volume mounds so the the spiffy connector sidecar is",
    "start": "1544559",
    "end": "1549600"
  },
  {
    "text": "able to write the short loaded credentials into the volume mounts and then those are made available in the workload",
    "start": "1549600",
    "end": "1555440"
  },
  {
    "text": "container as well so that the sdks in the workload are able to call those cloud apis",
    "start": "1555440",
    "end": "1563039"
  },
  {
    "text": "transparently without needing to know where those how they are being authenticated to talk to them",
    "start": "1563039",
    "end": "1569760"
  },
  {
    "text": "so i'm going to have a look at the um the infrastructure if you like for this that's running in the set manager name",
    "start": "1569760",
    "end": "1576080"
  },
  {
    "text": "space cert manager itself along with the cert manager csi driver",
    "start": "1576080",
    "end": "1581360"
  },
  {
    "text": "spiffy and cert manager trust project are all running the cert manager namespace to make all of this possible",
    "start": "1581360",
    "end": "1587520"
  },
  {
    "text": "um so as you can see we've got some manager components and things here um",
    "start": "1587520",
    "end": "1593840"
  },
  {
    "text": "that this is allowing all of this to happen and allowing things like that that volume configuration that we saw in",
    "start": "1594960",
    "end": "1601039"
  },
  {
    "text": "both the server and the example application to work so when that volume configuration is there the the s-vid is",
    "start": "1601039",
    "end": "1607279"
  },
  {
    "text": "automatically made available now we're going to have a look at the",
    "start": "1607279",
    "end": "1612559"
  },
  {
    "text": "pods in the spiffy connector server namespace so we've got one spiffy connector server running",
    "start": "1612559",
    "end": "1619200"
  },
  {
    "text": "we can have a look at the logs for the spiffy connector server to see what it's been up to",
    "start": "1619200",
    "end": "1627039"
  },
  {
    "text": "it's loaded its configuration it's also supposed to show that it's issued to",
    "start": "1627039",
    "end": "1632320"
  },
  {
    "text": "it's also supposed to show that it's issued some credentials to our to our workload",
    "start": "1632320",
    "end": "1638240"
  },
  {
    "text": "now we're going to have a look at the example workload hopefully its logs are more interesting",
    "start": "1638240",
    "end": "1645279"
  },
  {
    "text": "um we're hoping here that we'll see that it's requested and got google and aws",
    "start": "1645279",
    "end": "1651360"
  },
  {
    "text": "credentials it says that it's starting a credential manager for this particular workload and the it's got both",
    "start": "1651360",
    "end": "1658159"
  },
  {
    "text": "uh google cloud and aws credentials and they've been saved in the respective paths",
    "start": "1658159",
    "end": "1663679"
  },
  {
    "text": "so that's the end of the terminal demo i just want to as a as proof of concept i",
    "start": "1663679",
    "end": "1668720"
  },
  {
    "text": "want to show you this application actually doing something um i'm going to",
    "start": "1668720",
    "end": "1674799"
  },
  {
    "text": "try and i seem to have sorry i'm back in kind of lag mode over here",
    "start": "1674799",
    "end": "1680159"
  },
  {
    "text": "let me just get this out of full screen and try and recover my window that i thought",
    "start": "1680159",
    "end": "1686799"
  },
  {
    "text": "i was moving over uh here it is um",
    "start": "1686799",
    "end": "1692720"
  },
  {
    "text": "i'll do my best hopefully it's pretty complicated interface so if you can't",
    "start": "1692720",
    "end": "1697919"
  },
  {
    "text": "you can't quite work out what's going on um do let me know so",
    "start": "1697919",
    "end": "1703679"
  },
  {
    "text": "the workload is is a very simple server that moves files from one cloud to another",
    "start": "1703679",
    "end": "1709200"
  },
  {
    "text": "and you can hopefully work out where these different files are at the moment they're in aws s3",
    "start": "1709200",
    "end": "1715760"
  },
  {
    "text": "i've got the s3 management console open here and if the conference wi-fi works then i'll be",
    "start": "1715760",
    "end": "1724080"
  },
  {
    "text": "able to show you that it is actually here by clicking this button so you can see that the file is still",
    "start": "1724080",
    "end": "1729279"
  },
  {
    "text": "sitting there in s3 and in my other tab here i've got a gcp",
    "start": "1729279",
    "end": "1734399"
  },
  {
    "text": "bucket with no objects in it and i'll prove to you that there are no objects in it by clicking the refresh",
    "start": "1734399",
    "end": "1741279"
  },
  {
    "text": "button again nothing has shown up so and now if i go",
    "start": "1741279",
    "end": "1746880"
  },
  {
    "text": "back to our example workload and i click move files it should move the object",
    "start": "1746880",
    "end": "1751919"
  },
  {
    "text": "from one cloud to the other um and that's all",
    "start": "1751919",
    "end": "1757520"
  },
  {
    "text": "the credentials that allowed that operation to take place were all made possible by the spiffy id and the svid",
    "start": "1757520",
    "end": "1764559"
  },
  {
    "text": "did that workload had so hopefully we've proved that it's a live demo we've",
    "start": "1764559",
    "end": "1770960"
  },
  {
    "text": "proved that it can work in some way um i'm going to switch back to try and",
    "start": "1770960",
    "end": "1776480"
  },
  {
    "text": "find my chrome window for the presentation and if i go",
    "start": "1776480",
    "end": "1782240"
  },
  {
    "text": "back up here and go present a view i hope it will just continue oh no that's not what we",
    "start": "1782240",
    "end": "1788640"
  },
  {
    "text": "want um we're very prepared it's okay yeah well",
    "start": "1788640",
    "end": "1794480"
  },
  {
    "text": "let's let's try and let's try and do this exit full screen",
    "start": "1794480",
    "end": "1800880"
  },
  {
    "text": "and let's do bring this i'm going to bring this back over here just",
    "start": "1800880",
    "end": "1806399"
  },
  {
    "text": "to tell it what to do let's do a present of you we've actually",
    "start": "1806399",
    "end": "1811679"
  },
  {
    "text": "only got one more slide so this is quite a lot of work for that one final sign",
    "start": "1811679",
    "end": "1817200"
  },
  {
    "text": "it was it was quicker in my head there you go um",
    "start": "1817520",
    "end": "1823679"
  },
  {
    "text": "and now back here let's just make this window the right size as well and we can go to the next slide yeah great so",
    "start": "1823679",
    "end": "1831360"
  },
  {
    "text": "hopefully what we have shown with this proof of concept is an example use case",
    "start": "1831360",
    "end": "1836399"
  },
  {
    "text": "where spiffy ids are used as first-class citizens um we",
    "start": "1836399",
    "end": "1841840"
  },
  {
    "text": "we appreciate that you may have other ways of solving this problem that that aren't as awful as we told you they",
    "start": "1841840",
    "end": "1848080"
  },
  {
    "text": "might be but what we really wanted to show here was that spiffy ids can be",
    "start": "1848080",
    "end": "1854399"
  },
  {
    "text": "useful and you can use them and they can form like valid paths and",
    "start": "1854399",
    "end": "1860159"
  },
  {
    "text": "channels of communications between workloads um so it's been and it's been really",
    "start": "1860159",
    "end": "1866720"
  },
  {
    "text": "interesting to we've had with jake and myself my colleagues at jet stack have been",
    "start": "1866720",
    "end": "1872960"
  },
  {
    "text": "staffing the cert manager booth this week and we've had lots of people coming to us and talking about these",
    "start": "1872960",
    "end": "1879840"
  },
  {
    "text": "fantastically complicated systems they have for getting certificates for different host names",
    "start": "1879840",
    "end": "1885840"
  },
  {
    "text": "into different workloads in different clusters because they're all meant to have the same identity and then but they're all running in all these",
    "start": "1885840",
    "end": "1891200"
  },
  {
    "text": "different places and it's kind of like oh well you know have you thought about using a different kind of identity how",
    "start": "1891200",
    "end": "1896399"
  },
  {
    "text": "do you feel about using spiffy and so it's actually really validated and other discussions we've had this week have",
    "start": "1896399",
    "end": "1901679"
  },
  {
    "text": "really validated you know that people are looking for some kind of standard here um so",
    "start": "1901679",
    "end": "1907679"
  },
  {
    "text": "yeah we've got all sorts of ideas about what we want to do with this stuff like uh",
    "start": "1907679",
    "end": "1913120"
  },
  {
    "text": "this is a toy example it was an example that you know jake myself and our colleague josh here in the front row did",
    "start": "1913120",
    "end": "1918880"
  },
  {
    "text": "as part of a company hackathon in a few days um it was the easiest thing we were all familiar with to talking cloud",
    "start": "1918880",
    "end": "1925600"
  },
  {
    "text": "provider apis all the time um and it was the almost obvious thing we could come up with but like while",
    "start": "1925600",
    "end": "1931120"
  },
  {
    "text": "trying to think about what could you connect i'd really love to build a postgres connector that allowed me to",
    "start": "1931120",
    "end": "1936399"
  },
  {
    "text": "talk to postgres databases and get link spiffy ids to postgres identities",
    "start": "1936399",
    "end": "1941919"
  },
  {
    "text": "um you know i'm excited by authorization as well like what could you do if you knew the identity and like process the",
    "start": "1941919",
    "end": "1948240"
  },
  {
    "text": "query such that certain identities were allowed to access certain tables or to perform certain operations within the",
    "start": "1948240",
    "end": "1954480"
  },
  {
    "text": "database um yeah you can imagine a world where things accept spiffy everywhere like why",
    "start": "1954480",
    "end": "1960240"
  },
  {
    "text": "should i need a gcp key in the first place like why can't i just talk spiffy um spiffy straight to gcp or straight to",
    "start": "1960240",
    "end": "1967679"
  },
  {
    "text": "any cloud provider or even any api um so so yeah that's that's it that's what",
    "start": "1967679",
    "end": "1974000"
  },
  {
    "text": "we wanted to talk about um thanks very much for listening and for staying around this late i'm conscious",
    "start": "1974000",
    "end": "1980080"
  },
  {
    "text": "it's been a tiring week for me and jake and it's been a tiring week for many of you i'm sure so thanks for coming at the",
    "start": "1980080",
    "end": "1986640"
  },
  {
    "text": "very end to listen to us plug specifically for a little bit um just before we go on and hopefully have some",
    "start": "1986640",
    "end": "1992320"
  },
  {
    "text": "questions um if you if you want to chat to us you you can those are our work emails we're also on uh on twitter um",
    "start": "1992320",
    "end": "2000480"
  },
  {
    "text": "you can you can find us uh or chat to us at the end um we'd also like to say a quick thanks to our colleague josh who's",
    "start": "2000480",
    "end": "2006799"
  },
  {
    "text": "got the camera in the front row uh josh not only worked with us on the initial um",
    "start": "2006799",
    "end": "2013679"
  },
  {
    "text": "my colleague sit around was waving at me from the back thanks itaram uh",
    "start": "2013679",
    "end": "2020320"
  },
  {
    "text": "josh not only worked this on that uh the hackathon project where this came from but has also been important in",
    "start": "2020320",
    "end": "2026720"
  },
  {
    "text": "building so manager and cert manager csi spiffy which is the kind of the fundamental",
    "start": "2026720",
    "end": "2032080"
  },
  {
    "text": "infrastructure that we see as being an important step in making spiffy workload identity really work on",
    "start": "2032080",
    "end": "2039760"
  },
  {
    "text": "kubernetes environments um so yeah i promise there would be code there's a link the first link is the",
    "start": "2039760",
    "end": "2046559"
  },
  {
    "text": "spiffy connector that we've presented there's the example application and things is all in there you know i i don't think it's production",
    "start": "2046559",
    "end": "2052960"
  },
  {
    "text": "ready but you might find it interesting to look at it um you can also go and check out the csi driver spiffy",
    "start": "2052960",
    "end": "2059040"
  },
  {
    "text": "in the under under cert manager uh github generally or just go and read a bit more about",
    "start": "2059040",
    "end": "2064720"
  },
  {
    "text": "that spiffy yeah come come talk to us like we really want to drive a world where spiffy is",
    "start": "2064720",
    "end": "2070800"
  },
  {
    "text": "used and the pragmatic way of doing that is to build more support into other things",
    "start": "2070800",
    "end": "2076480"
  },
  {
    "text": "so we'd love to collaborate with you and just yeah come chat to us we're we're on the kubernetes slack in certain",
    "start": "2076480",
    "end": "2083358"
  },
  {
    "text": "manager dev channels but we're also on the spiffy slack which is probably a better place for it just yeah come chat",
    "start": "2083359",
    "end": "2089839"
  },
  {
    "text": "to us thank you yeah thanks",
    "start": "2089839",
    "end": "2095158"
  },
  {
    "text": "i don't know we weren't told we weren't given any instructions about questions but i don't",
    "start": "2102400",
    "end": "2107520"
  },
  {
    "text": "know if people have any questions we have a microphone here oh there's a microphone okay um",
    "start": "2107520",
    "end": "2113359"
  },
  {
    "text": "it might be good to try and let's try to try the microphone",
    "start": "2113359",
    "end": "2117839"
  },
  {
    "text": "right thank you very much for the talk it's very inspiring i would like to ask because maybe",
    "start": "2124079",
    "end": "2131280"
  },
  {
    "text": "i lost that part how does the server which actually may",
    "start": "2131280",
    "end": "2136480"
  },
  {
    "text": "run per cluster one per cluster so to say acquires these credentials from the cloud provider itself i understood that",
    "start": "2136480",
    "end": "2143119"
  },
  {
    "text": "the connector connects to the server but i'm missing the bit where the server",
    "start": "2143119",
    "end": "2148480"
  },
  {
    "text": "grant gets the credentials from there yeah so so in our toy example the server",
    "start": "2148480",
    "end": "2154560"
  },
  {
    "text": "has a long-lived aws credential which is a bit of a fraud because we just said don't do that",
    "start": "2154560",
    "end": "2160560"
  },
  {
    "text": "but you can connect it with your like we move we're moving it to a single point and you would in in probably in",
    "start": "2160560",
    "end": "2167440"
  },
  {
    "text": "production it would be like volt or something okay so basically you would use",
    "start": "2167440",
    "end": "2173440"
  },
  {
    "text": "something that the cloud provider provides so if for example cloud provider could use x509 directly that",
    "start": "2173440",
    "end": "2179599"
  },
  {
    "text": "would be the best for you because you don't even need to connect right yeah exactly and you can kind of do it with",
    "start": "2179599",
    "end": "2184880"
  },
  {
    "text": "oidc federation already so maybe you would do that as well all right thank you",
    "start": "2184880",
    "end": "2191440"
  },
  {
    "text": "any other questions you have to pass the pass the microphone across",
    "start": "2193280",
    "end": "2201079"
  },
  {
    "text": "now you mentioned integration sorry with cloud providers so in that case",
    "start": "2207200",
    "end": "2214320"
  },
  {
    "text": "wouldn't it be the way that when i look at for example audit logs on my",
    "start": "2214320",
    "end": "2219599"
  },
  {
    "text": "s3 bucket or whatever i'm accessing that i would only see the identity of that",
    "start": "2219599",
    "end": "2225200"
  },
  {
    "text": "spiffy server and also that server like needing access to everything that every workload needs",
    "start": "2225200",
    "end": "2231920"
  },
  {
    "text": "access to or is there a way to kind of separate that out to be able to",
    "start": "2231920",
    "end": "2238320"
  },
  {
    "text": "use those identities outside of the spiffy world yeah you you would see just the swifty",
    "start": "2238320",
    "end": "2245680"
  },
  {
    "text": "server doing those well you would you would see the the short-lived credential that was issued",
    "start": "2245680",
    "end": "2250800"
  },
  {
    "text": "by the server i suppose which you could you would have an audit log showing you that the spiffy",
    "start": "2250800",
    "end": "2257599"
  },
  {
    "text": "connector server had issued you a credential additional credential then the credentials used in that way",
    "start": "2257599",
    "end": "2262880"
  },
  {
    "text": "but um yeah like it's it's not ideal but it's it's meant to just be an example really",
    "start": "2262880",
    "end": "2269040"
  },
  {
    "text": "uh use case yeah so you you would have to like piece it together from both logs",
    "start": "2269040",
    "end": "2274400"
  },
  {
    "text": "and then figure out what was happening yeah i mean we said already our ideal situation is that the cloud provider",
    "start": "2274400",
    "end": "2280400"
  },
  {
    "text": "just speaks fifties and we wouldn't have this but we also no one's going to use 50 if you can't use it right now so",
    "start": "2280400",
    "end": "2286640"
  },
  {
    "text": "we're trying to drive up adoption and then get people to notice and then start implementing native support",
    "start": "2286640",
    "end": "2292960"
  },
  {
    "text": "okay have you looked at like for example in microsoft azure id",
    "start": "2292960",
    "end": "2298400"
  },
  {
    "text": "you can actually use certificates for authentication",
    "start": "2298400",
    "end": "2303920"
  },
  {
    "text": "of applications so is have you looked at a way of maybe",
    "start": "2303920",
    "end": "2309839"
  },
  {
    "text": "integrating that to automatically generate those identities and then putting the",
    "start": "2309839",
    "end": "2315119"
  },
  {
    "text": "certificates in there so i actually haven't looked but it's while we've been looking at the",
    "start": "2315119",
    "end": "2320160"
  },
  {
    "text": "ecosystem in general well while most things say that you can authenticate with mutual tls they'll be",
    "start": "2320160",
    "end": "2326720"
  },
  {
    "text": "doing some parsing of the common name basically just for identity which is not the same as what a",
    "start": "2326720",
    "end": "2333520"
  },
  {
    "text": "svid looks like so even if things claim that they speak mgls it doesn't really it doesn't",
    "start": "2333520",
    "end": "2338800"
  },
  {
    "text": "necessarily mean that they'll be able to abstract uh take an identity out of the sbid but we'll look at microsoft because",
    "start": "2338800",
    "end": "2346000"
  },
  {
    "text": "we want to support more things and this was just a short demo okay thanks it's not something we're",
    "start": "2346000",
    "end": "2351839"
  },
  {
    "text": "familiar with as familiar with any other questions before we finish it",
    "start": "2351839",
    "end": "2361200"
  },
  {
    "text": "cool well you can always chat to us yeah we're we're available on various slacks and",
    "start": "2362560",
    "end": "2367599"
  },
  {
    "text": "our company page jet stack bio okay",
    "start": "2367599",
    "end": "2372720"
  },
  {
    "text": "thanks very much",
    "start": "2372720",
    "end": "2376119"
  }
]