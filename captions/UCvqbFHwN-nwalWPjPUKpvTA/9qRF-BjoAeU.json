[
  {
    "text": "kubernetes as universal infrastructure",
    "start": "240",
    "end": "2560"
  },
  {
    "text": "control plane",
    "start": "2560",
    "end": "4400"
  },
  {
    "text": "kubernetes is generally related to as a",
    "start": "4400",
    "end": "7200"
  },
  {
    "text": "piece of software that is",
    "start": "7200",
    "end": "8960"
  },
  {
    "text": "pretty much useful for orchestrating and",
    "start": "8960",
    "end": "11679"
  },
  {
    "text": "managing containerized applications",
    "start": "11679",
    "end": "14400"
  },
  {
    "text": "however",
    "start": "14400",
    "end": "15440"
  },
  {
    "text": "kubernetes by its inherent extensibility",
    "start": "15440",
    "end": "18720"
  },
  {
    "text": "is",
    "start": "18720",
    "end": "19439"
  },
  {
    "text": "useful even to manage infrastructure",
    "start": "19439",
    "end": "22480"
  },
  {
    "text": "outside of a kubernetes cluster",
    "start": "22480",
    "end": "25279"
  },
  {
    "text": "i am raghu rahman balachandran and i am",
    "start": "25279",
    "end": "27519"
  },
  {
    "text": "a co-founder at invisible cloud where we",
    "start": "27519",
    "end": "30080"
  },
  {
    "text": "offer gravity a self-service",
    "start": "30080",
    "end": "32960"
  },
  {
    "text": "kubernetes platform that simplifies the",
    "start": "32960",
    "end": "35600"
  },
  {
    "text": "developer experience for kubernetes",
    "start": "35600",
    "end": "38079"
  },
  {
    "text": "while devops teams and central teams can",
    "start": "38079",
    "end": "40480"
  },
  {
    "text": "use gravity to standardize kubernetes",
    "start": "40480",
    "end": "43280"
  },
  {
    "text": "across the organization",
    "start": "43280",
    "end": "46160"
  },
  {
    "text": "so kubernetes operators",
    "start": "46160",
    "end": "48079"
  },
  {
    "text": "are useful to perform custom automations",
    "start": "48079",
    "end": "51280"
  },
  {
    "text": "that are not natively offered by the",
    "start": "51280",
    "end": "53760"
  },
  {
    "text": "kubernetes apis available out of the box",
    "start": "53760",
    "end": "56239"
  },
  {
    "text": "of any kubernetes cluster so what we can",
    "start": "56239",
    "end": "58800"
  },
  {
    "text": "do is so if you have let's say some kind",
    "start": "58800",
    "end": "60559"
  },
  {
    "text": "of a custom automation that we want to",
    "start": "60559",
    "end": "63359"
  },
  {
    "text": "run then we can write our own operators",
    "start": "63359",
    "end": "66720"
  },
  {
    "text": "where we define what the uh spec or the",
    "start": "66720",
    "end": "70080"
  },
  {
    "text": "schema looks like through a custom",
    "start": "70080",
    "end": "72080"
  },
  {
    "text": "resource definition",
    "start": "72080",
    "end": "73760"
  },
  {
    "text": "and then",
    "start": "73760",
    "end": "74880"
  },
  {
    "text": "uh when the user creates a custom",
    "start": "74880",
    "end": "76720"
  },
  {
    "text": "resource uh the user provides",
    "start": "76720",
    "end": "78960"
  },
  {
    "text": "essentially a desired set of inputs that",
    "start": "78960",
    "end": "80960"
  },
  {
    "text": "is required for the custom resource to",
    "start": "80960",
    "end": "82720"
  },
  {
    "text": "be created and then we have a piece of",
    "start": "82720",
    "end": "85200"
  },
  {
    "text": "logic that takes those inputs and then",
    "start": "85200",
    "end": "87600"
  },
  {
    "text": "performs whatever automation that is",
    "start": "87600",
    "end": "89280"
  },
  {
    "text": "required",
    "start": "89280",
    "end": "90720"
  },
  {
    "text": "while you may not have written an",
    "start": "90720",
    "end": "92320"
  },
  {
    "text": "operator by yourself you're very likely",
    "start": "92320",
    "end": "94320"
  },
  {
    "text": "to have used a lot of operators so",
    "start": "94320",
    "end": "96320"
  },
  {
    "text": "whenever you install any kind of add-on",
    "start": "96320",
    "end": "98400"
  },
  {
    "text": "to a kubernetes cluster they essentially",
    "start": "98400",
    "end": "100880"
  },
  {
    "text": "are operators uh written by irrespective",
    "start": "100880",
    "end": "104079"
  },
  {
    "text": "vendors",
    "start": "104079",
    "end": "106159"
  },
  {
    "text": "so",
    "start": "106159",
    "end": "106880"
  },
  {
    "text": "operators allows us to perform these",
    "start": "106880",
    "end": "108560"
  },
  {
    "text": "kind of custom automations right so",
    "start": "108560",
    "end": "111600"
  },
  {
    "text": "why not we use these operators to even",
    "start": "111600",
    "end": "114880"
  },
  {
    "text": "manage cloud resources why should we use",
    "start": "114880",
    "end": "117759"
  },
  {
    "text": "a third-party tool to even orchestrate",
    "start": "117759",
    "end": "120159"
  },
  {
    "text": "cloud resources such as a database or",
    "start": "120159",
    "end": "123600"
  },
  {
    "text": "an object store and so on so forth",
    "start": "123600",
    "end": "125680"
  },
  {
    "text": "so",
    "start": "125680",
    "end": "126479"
  },
  {
    "text": "we can use kubernetes",
    "start": "126479",
    "end": "129039"
  },
  {
    "text": "to orchestrate cloud resources through",
    "start": "129039",
    "end": "130800"
  },
  {
    "text": "these custom operators and the key",
    "start": "130800",
    "end": "132800"
  },
  {
    "text": "benefit is that users can use then the",
    "start": "132800",
    "end": "135760"
  },
  {
    "text": "familiar kubernetes based models like",
    "start": "135760",
    "end": "138160"
  },
  {
    "text": "writing the yaml definitions like how",
    "start": "138160",
    "end": "140400"
  },
  {
    "text": "you would write for a deployment or an",
    "start": "140400",
    "end": "142879"
  },
  {
    "text": "increase or a part and in the same",
    "start": "142879",
    "end": "145040"
  },
  {
    "text": "fashion you can actually even provision",
    "start": "145040",
    "end": "147120"
  },
  {
    "text": "a cloud resources right and then you can",
    "start": "147120",
    "end": "148959"
  },
  {
    "text": "manage them using the rich set of tools",
    "start": "148959",
    "end": "152239"
  },
  {
    "text": "available within the kubernetes",
    "start": "152239",
    "end": "153519"
  },
  {
    "text": "ecosystem",
    "start": "153519",
    "end": "156000"
  },
  {
    "text": "in in the past there have been uh",
    "start": "156000",
    "end": "158000"
  },
  {
    "text": "attempts made to uh uh achieve this from",
    "start": "158000",
    "end": "160800"
  },
  {
    "text": "a kubernetes uh cluster itself so one of",
    "start": "160800",
    "end": "163599"
  },
  {
    "text": "the earliest implementations were uh",
    "start": "163599",
    "end": "166239"
  },
  {
    "text": "done on using the kubernetes service",
    "start": "166239",
    "end": "168640"
  },
  {
    "text": "catalog api where you can have an open",
    "start": "168640",
    "end": "171440"
  },
  {
    "text": "service broker implementation uh to our",
    "start": "171440",
    "end": "174160"
  },
  {
    "text": "to provision cloud resources uh through",
    "start": "174160",
    "end": "176720"
  },
  {
    "text": "uh kubernetes itself all right",
    "start": "176720",
    "end": "179040"
  },
  {
    "text": "and uh currently uh today all the cloud",
    "start": "179040",
    "end": "181920"
  },
  {
    "text": "providers offer their own specific",
    "start": "181920",
    "end": "184720"
  },
  {
    "text": "operators so for example aws offers",
    "start": "184720",
    "end": "187360"
  },
  {
    "text": "something called as ack which is aws one",
    "start": "187360",
    "end": "189920"
  },
  {
    "text": "controller for kubernetes azure has",
    "start": "189920",
    "end": "192720"
  },
  {
    "text": "something called as azure service",
    "start": "192720",
    "end": "194080"
  },
  {
    "text": "operator",
    "start": "194080",
    "end": "195120"
  },
  {
    "text": "and gcp has gcp config connected so all",
    "start": "195120",
    "end": "198640"
  },
  {
    "text": "of them are",
    "start": "198640",
    "end": "200640"
  },
  {
    "text": "custom operators provided by the",
    "start": "200640",
    "end": "202959"
  },
  {
    "text": "specific cloud provider where you can",
    "start": "202959",
    "end": "204879"
  },
  {
    "text": "use these operators install them on the",
    "start": "204879",
    "end": "206560"
  },
  {
    "text": "cluster and then",
    "start": "206560",
    "end": "207920"
  },
  {
    "text": "provision respective cloud services",
    "start": "207920",
    "end": "209920"
  },
  {
    "text": "through these operators",
    "start": "209920",
    "end": "213720"
  },
  {
    "text": "one of the other interesting thing that",
    "start": "214080",
    "end": "215519"
  },
  {
    "text": "is happening",
    "start": "215519",
    "end": "216560"
  },
  {
    "text": "in various organizations currently is",
    "start": "216560",
    "end": "218560"
  },
  {
    "text": "what is called as the rise of uh",
    "start": "218560",
    "end": "220640"
  },
  {
    "text": "platform teams right so many",
    "start": "220640",
    "end": "223040"
  },
  {
    "text": "organizations are building internal",
    "start": "223040",
    "end": "225120"
  },
  {
    "text": "platform teams where these platform",
    "start": "225120",
    "end": "227360"
  },
  {
    "text": "teams are",
    "start": "227360",
    "end": "228799"
  },
  {
    "text": "tasked with building abstractions where",
    "start": "228799",
    "end": "232480"
  },
  {
    "text": "these abstractions are offered as shared",
    "start": "232480",
    "end": "235519"
  },
  {
    "text": "services to developers",
    "start": "235519",
    "end": "237519"
  },
  {
    "text": "and the abstractions actually take care",
    "start": "237519",
    "end": "239280"
  },
  {
    "text": "of implementing a lot of these best",
    "start": "239280",
    "end": "241599"
  },
  {
    "text": "practices policies and guardrails right",
    "start": "241599",
    "end": "244640"
  },
  {
    "text": "so for example uh if",
    "start": "244640",
    "end": "247599"
  },
  {
    "text": "a developer needs let's say a database",
    "start": "247599",
    "end": "249920"
  },
  {
    "text": "or a queueing service or a messaging",
    "start": "249920",
    "end": "251840"
  },
  {
    "text": "service then the platform team actually",
    "start": "251840",
    "end": "254159"
  },
  {
    "text": "builds this kind of abstraction and",
    "start": "254159",
    "end": "256000"
  },
  {
    "text": "offers it to developers so our",
    "start": "256000",
    "end": "257680"
  },
  {
    "text": "developers simply say okay i just need",
    "start": "257680",
    "end": "259600"
  },
  {
    "text": "this queue and the service actually",
    "start": "259600",
    "end": "261519"
  },
  {
    "text": "takes care of provisioning the actual",
    "start": "261519",
    "end": "263280"
  },
  {
    "text": "infrastructure",
    "start": "263280",
    "end": "264560"
  },
  {
    "text": "developers on the other hand",
    "start": "264560",
    "end": "266880"
  },
  {
    "text": "expect a self-service uh way of",
    "start": "266880",
    "end": "269840"
  },
  {
    "text": "consuming these abstractions where they",
    "start": "269840",
    "end": "271680"
  },
  {
    "text": "can simply use a self-service experience",
    "start": "271680",
    "end": "274000"
  },
  {
    "text": "to provision infrastructure so that they",
    "start": "274000",
    "end": "276160"
  },
  {
    "text": "can actually move fast without being",
    "start": "276160",
    "end": "277840"
  },
  {
    "text": "limited by",
    "start": "277840",
    "end": "279040"
  },
  {
    "text": "uh devops teams bandwidth and so on so",
    "start": "279040",
    "end": "280960"
  },
  {
    "text": "forth and the key thing is they don't",
    "start": "280960",
    "end": "282720"
  },
  {
    "text": "want to deal with the infrastructure",
    "start": "282720",
    "end": "284800"
  },
  {
    "text": "directly",
    "start": "284800",
    "end": "285840"
  },
  {
    "text": "where they'll have to be required to",
    "start": "285840",
    "end": "287280"
  },
  {
    "text": "provide a lot of configurations and",
    "start": "287280",
    "end": "288639"
  },
  {
    "text": "parameters right",
    "start": "288639",
    "end": "291199"
  },
  {
    "text": "this is exactly where",
    "start": "291199",
    "end": "293199"
  },
  {
    "text": "cross plane comes into the picture uh",
    "start": "293199",
    "end": "295840"
  },
  {
    "text": "right so crossbringer is an open source",
    "start": "295840",
    "end": "297680"
  },
  {
    "text": "project where it can be used uh to",
    "start": "297680",
    "end": "300479"
  },
  {
    "text": "orchestrate any cloud infrastructure",
    "start": "300479",
    "end": "302720"
  },
  {
    "text": "from a kubernetes cluster right so cross",
    "start": "302720",
    "end": "305600"
  },
  {
    "text": "plane of uh",
    "start": "305600",
    "end": "307280"
  },
  {
    "text": "exists as what's called as a universal",
    "start": "307280",
    "end": "309360"
  },
  {
    "text": "control plane",
    "start": "309360",
    "end": "310479"
  },
  {
    "text": "and using cross plane platform teams can",
    "start": "310479",
    "end": "313360"
  },
  {
    "text": "actually",
    "start": "313360",
    "end": "314400"
  },
  {
    "text": "compose various abstractions",
    "start": "314400",
    "end": "317440"
  },
  {
    "text": "and",
    "start": "317440",
    "end": "318320"
  },
  {
    "text": "offer them to developers and these",
    "start": "318320",
    "end": "320560"
  },
  {
    "text": "abstractions hide away all the",
    "start": "320560",
    "end": "322240"
  },
  {
    "text": "complexities after provisioning",
    "start": "322240",
    "end": "324880"
  },
  {
    "text": "the infrastructure and the abstraction",
    "start": "324880",
    "end": "326960"
  },
  {
    "text": "can actually also implement all the",
    "start": "326960",
    "end": "329600"
  },
  {
    "text": "guardrails and policies and controls",
    "start": "329600",
    "end": "331840"
  },
  {
    "text": "that is required by a particular",
    "start": "331840",
    "end": "333840"
  },
  {
    "text": "organization",
    "start": "333840",
    "end": "336000"
  },
  {
    "text": "developers when they want to provision",
    "start": "336000",
    "end": "337680"
  },
  {
    "text": "an infrastructure they simply use these",
    "start": "337680",
    "end": "340000"
  },
  {
    "text": "abstractions and the key thing is that",
    "start": "340000",
    "end": "342560"
  },
  {
    "text": "they can use the same kubernetes style",
    "start": "342560",
    "end": "345199"
  },
  {
    "text": "declarative way of defining the",
    "start": "345199",
    "end": "346880"
  },
  {
    "text": "infrastructure and provision those",
    "start": "346880",
    "end": "349440"
  },
  {
    "text": "infrastructure",
    "start": "349440",
    "end": "350840"
  },
  {
    "text": "directly and crossplane uh has out of",
    "start": "350840",
    "end": "353680"
  },
  {
    "text": "the box support for all the major cloud",
    "start": "353680",
    "end": "355840"
  },
  {
    "text": "providers and you can pretty much",
    "start": "355840",
    "end": "358240"
  },
  {
    "text": "provision any cloud service through",
    "start": "358240",
    "end": "360800"
  },
  {
    "text": "crossplane currently",
    "start": "360800",
    "end": "364159"
  },
  {
    "text": "so uh let's dive a little bit deeper",
    "start": "365520",
    "end": "367440"
  },
  {
    "text": "into cross plane and uh at a high level",
    "start": "367440",
    "end": "370319"
  },
  {
    "text": "there are six uh major building blocks",
    "start": "370319",
    "end": "373440"
  },
  {
    "text": "that cross plane offers uh we will dive",
    "start": "373440",
    "end": "376000"
  },
  {
    "text": "into each one of them to understand what",
    "start": "376000",
    "end": "377680"
  },
  {
    "text": "they are and how we can use them to",
    "start": "377680",
    "end": "380080"
  },
  {
    "text": "compose our infrastructure",
    "start": "380080",
    "end": "383039"
  },
  {
    "text": "so before i dive into those concepts so",
    "start": "383039",
    "end": "385600"
  },
  {
    "text": "let's look at a simple use case so let's",
    "start": "385600",
    "end": "388400"
  },
  {
    "text": "say",
    "start": "388400",
    "end": "389199"
  },
  {
    "text": "a platform team wants to offer",
    "start": "389199",
    "end": "391440"
  },
  {
    "text": "a simple postgres sql",
    "start": "391440",
    "end": "393360"
  },
  {
    "text": "service or an abstraction",
    "start": "393360",
    "end": "395440"
  },
  {
    "text": "where the service takes care of a lot of",
    "start": "395440",
    "end": "397199"
  },
  {
    "text": "these configurations and",
    "start": "397199",
    "end": "399680"
  },
  {
    "text": "the developers simply specify what is",
    "start": "399680",
    "end": "402080"
  },
  {
    "text": "the required storage and in which cloud",
    "start": "402080",
    "end": "404400"
  },
  {
    "text": "provider they would want the postgresql",
    "start": "404400",
    "end": "406960"
  },
  {
    "text": "instance to be created",
    "start": "406960",
    "end": "408560"
  },
  {
    "text": "and the rest of the configurations uh",
    "start": "408560",
    "end": "410960"
  },
  {
    "text": "everything will be automatically taken",
    "start": "410960",
    "end": "412800"
  },
  {
    "text": "care by this particular uh postgresql",
    "start": "412800",
    "end": "415440"
  },
  {
    "text": "abstraction that the platform team is",
    "start": "415440",
    "end": "417039"
  },
  {
    "text": "offering",
    "start": "417039",
    "end": "418240"
  },
  {
    "text": "so with that as a con as the context so",
    "start": "418240",
    "end": "420880"
  },
  {
    "text": "let's look at how we can use cross plane",
    "start": "420880",
    "end": "423120"
  },
  {
    "text": "uh to offer such an abstraction or a",
    "start": "423120",
    "end": "425919"
  },
  {
    "text": "service",
    "start": "425919",
    "end": "427680"
  },
  {
    "text": "so the first concept is uh",
    "start": "427680",
    "end": "429840"
  },
  {
    "text": "providers so providers as the name",
    "start": "429840",
    "end": "432479"
  },
  {
    "text": "suggests are the actual infrastructure",
    "start": "432479",
    "end": "434560"
  },
  {
    "text": "providers so these are the actual cross",
    "start": "434560",
    "end": "436800"
  },
  {
    "text": "plane",
    "start": "436800",
    "end": "437599"
  },
  {
    "text": "packages that gets installed on a",
    "start": "437599",
    "end": "439680"
  },
  {
    "text": "cluster and it deals with the actual",
    "start": "439680",
    "end": "442240"
  },
  {
    "text": "cloud service apis whenever a particular",
    "start": "442240",
    "end": "444720"
  },
  {
    "text": "resource needs to be created",
    "start": "444720",
    "end": "446880"
  },
  {
    "text": "so in this example",
    "start": "446880",
    "end": "449680"
  },
  {
    "text": "you can simply install for example a",
    "start": "449680",
    "end": "451599"
  },
  {
    "text": "provider aws which has all the required",
    "start": "451599",
    "end": "454479"
  },
  {
    "text": "managed resources which i'll talk about",
    "start": "454479",
    "end": "456560"
  },
  {
    "text": "in the next slide",
    "start": "456560",
    "end": "458160"
  },
  {
    "text": "and it can be used to create any",
    "start": "458160",
    "end": "460560"
  },
  {
    "text": "resource within the aws",
    "start": "460560",
    "end": "463360"
  },
  {
    "text": "cloud",
    "start": "463360",
    "end": "465840"
  },
  {
    "text": "the next",
    "start": "466000",
    "end": "467520"
  },
  {
    "text": "building block is",
    "start": "467520",
    "end": "469120"
  },
  {
    "text": "called as managed resource right a",
    "start": "469120",
    "end": "471919"
  },
  {
    "text": "managed resource",
    "start": "471919",
    "end": "474240"
  },
  {
    "text": "within cross plane actually represents",
    "start": "474240",
    "end": "476800"
  },
  {
    "text": "an external resource such as a cloud",
    "start": "476800",
    "end": "479120"
  },
  {
    "text": "service right so it could be",
    "start": "479120",
    "end": "481520"
  },
  {
    "text": "an rds instance or a",
    "start": "481520",
    "end": "484080"
  },
  {
    "text": "gcps cloud sequel instance",
    "start": "484080",
    "end": "486240"
  },
  {
    "text": "any uh aws or a gcp or an azure service",
    "start": "486240",
    "end": "489280"
  },
  {
    "text": "right for example and this is a",
    "start": "489280",
    "end": "491680"
  },
  {
    "text": "fundamental core building block that can",
    "start": "491680",
    "end": "494319"
  },
  {
    "text": "be used to create",
    "start": "494319",
    "end": "496000"
  },
  {
    "text": "a corresponding cloud service right so",
    "start": "496000",
    "end": "498879"
  },
  {
    "text": "what you see here on the right side is",
    "start": "498879",
    "end": "502000"
  },
  {
    "text": "where you can create an rds instance by",
    "start": "502000",
    "end": "503840"
  },
  {
    "text": "specifying various properties and when",
    "start": "503840",
    "end": "506560"
  },
  {
    "text": "you apply this yaml a corresponding rmds",
    "start": "506560",
    "end": "509120"
  },
  {
    "text": "instance actually gets created",
    "start": "509120",
    "end": "511680"
  },
  {
    "text": "so while you can directly create a cloud",
    "start": "511680",
    "end": "514800"
  },
  {
    "text": "resource through managed resources most",
    "start": "514800",
    "end": "517279"
  },
  {
    "text": "people will not use this directly",
    "start": "517279",
    "end": "519440"
  },
  {
    "text": "because most of the time we would want a",
    "start": "519440",
    "end": "521599"
  },
  {
    "text": "higher level",
    "start": "521599",
    "end": "522880"
  },
  {
    "text": "abstraction that takes care of even",
    "start": "522880",
    "end": "525040"
  },
  {
    "text": "composing other required infrastructure",
    "start": "525040",
    "end": "528000"
  },
  {
    "text": "as well right",
    "start": "528000",
    "end": "530720"
  },
  {
    "text": "okay and that's where compositions come",
    "start": "531040",
    "end": "533120"
  },
  {
    "text": "into picture and we start composing",
    "start": "533120",
    "end": "535839"
  },
  {
    "text": "infrastructure through compositions and",
    "start": "535839",
    "end": "537519"
  },
  {
    "text": "the first step to do that",
    "start": "537519",
    "end": "539279"
  },
  {
    "text": "is to define something called as a",
    "start": "539279",
    "end": "541040"
  },
  {
    "text": "composite resource definition",
    "start": "541040",
    "end": "543680"
  },
  {
    "text": "xrd in short right so an xrd",
    "start": "543680",
    "end": "547680"
  },
  {
    "text": "essentially has a respect of the schema",
    "start": "547680",
    "end": "551040"
  },
  {
    "text": "that",
    "start": "551040",
    "end": "551839"
  },
  {
    "text": "defines what kind of composited",
    "start": "551839",
    "end": "553839"
  },
  {
    "text": "resources exists",
    "start": "553839",
    "end": "555519"
  },
  {
    "text": "within the system and it can be used to",
    "start": "555519",
    "end": "559680"
  },
  {
    "text": "create various",
    "start": "559680",
    "end": "561120"
  },
  {
    "text": "resources downstream right so think of",
    "start": "561120",
    "end": "564800"
  },
  {
    "text": "xrd is",
    "start": "564800",
    "end": "566320"
  },
  {
    "text": "very similar to the kubernetes custom",
    "start": "566320",
    "end": "568640"
  },
  {
    "text": "resource definitions if you have uh",
    "start": "568640",
    "end": "570640"
  },
  {
    "text": "dealt with that before or if you're",
    "start": "570640",
    "end": "572240"
  },
  {
    "text": "let's say coming from the terraform",
    "start": "572240",
    "end": "574399"
  },
  {
    "text": "world",
    "start": "574399",
    "end": "575360"
  },
  {
    "text": "xrds can be thought of similar to a",
    "start": "575360",
    "end": "577600"
  },
  {
    "text": "variable blocks that you will have in a",
    "start": "577600",
    "end": "579360"
  },
  {
    "text": "typical tf module",
    "start": "579360",
    "end": "583360"
  },
  {
    "text": "so here is a simple example for a",
    "start": "583360",
    "end": "585519"
  },
  {
    "text": "composite resource definition so in this",
    "start": "585519",
    "end": "587920"
  },
  {
    "text": "case",
    "start": "587920",
    "end": "588800"
  },
  {
    "text": "for our positive sql example so we are",
    "start": "588800",
    "end": "591200"
  },
  {
    "text": "defining a kind called as exposed equal",
    "start": "591200",
    "end": "594160"
  },
  {
    "text": "instance and simply we are defining this",
    "start": "594160",
    "end": "596880"
  },
  {
    "text": "spec of this composite resource",
    "start": "596880",
    "end": "598720"
  },
  {
    "text": "definition so this is again left to the",
    "start": "598720",
    "end": "601600"
  },
  {
    "text": "platform team right so they are actually",
    "start": "601600",
    "end": "602959"
  },
  {
    "text": "creating a custom",
    "start": "602959",
    "end": "604560"
  },
  {
    "text": "uh definition and this spec can be",
    "start": "604560",
    "end": "607200"
  },
  {
    "text": "defined as they are going to define uh",
    "start": "607200",
    "end": "610079"
  },
  {
    "text": "the actual abstract action so in this",
    "start": "610079",
    "end": "612079"
  },
  {
    "text": "case we are defining a spec which simply",
    "start": "612079",
    "end": "615040"
  },
  {
    "text": "expects the storage gb",
    "start": "615040",
    "end": "617519"
  },
  {
    "text": "as the parameter from the end user right",
    "start": "617519",
    "end": "622079"
  },
  {
    "text": "okay so now we have a spec then the next",
    "start": "622399",
    "end": "624160"
  },
  {
    "text": "step is to actually",
    "start": "624160",
    "end": "626079"
  },
  {
    "text": "create a different compositions so a",
    "start": "626079",
    "end": "629279"
  },
  {
    "text": "composition essentially allows us to",
    "start": "629279",
    "end": "631600"
  },
  {
    "text": "create",
    "start": "631600",
    "end": "632800"
  },
  {
    "text": "various resources in the form of a",
    "start": "632800",
    "end": "635120"
  },
  {
    "text": "composition right so you compose various",
    "start": "635120",
    "end": "637200"
  },
  {
    "text": "resources using a composition and these",
    "start": "637200",
    "end": "639839"
  },
  {
    "text": "can be",
    "start": "639839",
    "end": "641279"
  },
  {
    "text": "used by cross plane to create the actual",
    "start": "641279",
    "end": "643600"
  },
  {
    "text": "underlying resources so the the",
    "start": "643600",
    "end": "646160"
  },
  {
    "text": "composition in turn creates the",
    "start": "646160",
    "end": "648160"
  },
  {
    "text": "corresponding managed resources such as",
    "start": "648160",
    "end": "651279"
  },
  {
    "text": "the rds instance or a cloud sql instance",
    "start": "651279",
    "end": "654000"
  },
  {
    "text": "in the respective uh cloud provider",
    "start": "654000",
    "end": "656800"
  },
  {
    "text": "so as a platform team",
    "start": "656800",
    "end": "658480"
  },
  {
    "text": "what we will be essentially doing is uh",
    "start": "658480",
    "end": "661360"
  },
  {
    "text": "creating different types of compositions",
    "start": "661360",
    "end": "664240"
  },
  {
    "text": "whatever abstractions we want to offer",
    "start": "664240",
    "end": "666480"
  },
  {
    "text": "we will create different variants of the",
    "start": "666480",
    "end": "668959"
  },
  {
    "text": "abstraction through compositions right",
    "start": "668959",
    "end": "671440"
  },
  {
    "text": "so in our example of trying to offer a",
    "start": "671440",
    "end": "673760"
  },
  {
    "text": "postgres sql instance we could have a",
    "start": "673760",
    "end": "676160"
  },
  {
    "text": "production postgres",
    "start": "676160",
    "end": "677839"
  },
  {
    "text": "which automatically configures high",
    "start": "677839",
    "end": "679920"
  },
  {
    "text": "availability and encryption uh while a",
    "start": "679920",
    "end": "682800"
  },
  {
    "text": "dev postgres composition",
    "start": "682800",
    "end": "685120"
  },
  {
    "text": "restricts let's say instance type so",
    "start": "685120",
    "end": "686959"
  },
  {
    "text": "let's say small or medium right so like",
    "start": "686959",
    "end": "689600"
  },
  {
    "text": "that we can",
    "start": "689600",
    "end": "690800"
  },
  {
    "text": "create different flavors of our",
    "start": "690800",
    "end": "692720"
  },
  {
    "text": "composition and offer them to",
    "start": "692720",
    "end": "694959"
  },
  {
    "text": "developers to actually provision the",
    "start": "694959",
    "end": "696640"
  },
  {
    "text": "resources",
    "start": "696640",
    "end": "697920"
  },
  {
    "text": "so a composition can be thought of",
    "start": "697920",
    "end": "700240"
  },
  {
    "text": "something similar to a terraform module",
    "start": "700240",
    "end": "702320"
  },
  {
    "text": "or a helm template that is used to",
    "start": "702320",
    "end": "705440"
  },
  {
    "text": "define how a particular resource will",
    "start": "705440",
    "end": "706959"
  },
  {
    "text": "get provisioned",
    "start": "706959",
    "end": "709519"
  },
  {
    "text": "so for our example of trying to offer an",
    "start": "709519",
    "end": "712639"
  },
  {
    "text": "abstraction for creating postgresql",
    "start": "712639",
    "end": "715519"
  },
  {
    "text": "instance on both aws and gcp a platform",
    "start": "715519",
    "end": "718480"
  },
  {
    "text": "team essentially creates two",
    "start": "718480",
    "end": "720079"
  },
  {
    "text": "compositions",
    "start": "720079",
    "end": "721440"
  },
  {
    "text": "but both of them if you see",
    "start": "721440",
    "end": "723440"
  },
  {
    "text": "are",
    "start": "723440",
    "end": "724320"
  },
  {
    "text": "of kind x postgresql instance this is",
    "start": "724320",
    "end": "726880"
  },
  {
    "text": "also of exposure sql instance and the",
    "start": "726880",
    "end": "730160"
  },
  {
    "text": "gcp one is also of x postgres sql",
    "start": "730160",
    "end": "732639"
  },
  {
    "text": "instance",
    "start": "732639",
    "end": "734240"
  },
  {
    "text": "but where they differ is that in the aws",
    "start": "734240",
    "end": "736959"
  },
  {
    "text": "case the actual underlying managed",
    "start": "736959",
    "end": "738880"
  },
  {
    "text": "resource that is getting created is of",
    "start": "738880",
    "end": "741200"
  },
  {
    "text": "timed rds instance whereas on the",
    "start": "741200",
    "end": "744639"
  },
  {
    "text": "gcp side the",
    "start": "744639",
    "end": "746480"
  },
  {
    "text": "managed resource is actually a cloud sql",
    "start": "746480",
    "end": "748880"
  },
  {
    "text": "instance",
    "start": "748880",
    "end": "750480"
  },
  {
    "text": "then as part of the composition itself",
    "start": "750480",
    "end": "752880"
  },
  {
    "text": "we can pre-configure a lot of parameters",
    "start": "752880",
    "end": "755839"
  },
  {
    "text": "this is where you start breaking in a",
    "start": "755839",
    "end": "758000"
  },
  {
    "text": "lot of those best practices and guard",
    "start": "758000",
    "end": "759519"
  },
  {
    "text": "rails and so on so forth so we can do",
    "start": "759519",
    "end": "761519"
  },
  {
    "text": "that as part of the composition itself",
    "start": "761519",
    "end": "764800"
  },
  {
    "text": "and then",
    "start": "764800",
    "end": "766160"
  },
  {
    "text": "when",
    "start": "766160",
    "end": "767279"
  },
  {
    "text": "you the user gives the inputs let's say",
    "start": "767279",
    "end": "769600"
  },
  {
    "text": "in this case we want to accept the",
    "start": "769600",
    "end": "771279"
  },
  {
    "text": "storage gb as an input then",
    "start": "771279",
    "end": "774959"
  },
  {
    "text": "we can",
    "start": "774959",
    "end": "776560"
  },
  {
    "text": "merge those user inputs to the actual",
    "start": "776560",
    "end": "779040"
  },
  {
    "text": "managed resource that is getting created",
    "start": "779040",
    "end": "781120"
  },
  {
    "text": "so in this case we are seeing",
    "start": "781120",
    "end": "782959"
  },
  {
    "text": "we are accepting storage gp as a",
    "start": "782959",
    "end": "785200"
  },
  {
    "text": "parameter from the user in the gcp",
    "start": "785200",
    "end": "787600"
  },
  {
    "text": "scales map that parameter to",
    "start": "787600",
    "end": "790160"
  },
  {
    "text": "the data disk size gb on the gcp site",
    "start": "790160",
    "end": "793360"
  },
  {
    "text": "while on the aws side map that same",
    "start": "793360",
    "end": "796000"
  },
  {
    "text": "parameter to the allocated storage",
    "start": "796000",
    "end": "799760"
  },
  {
    "text": "on the rdps side right",
    "start": "799760",
    "end": "802240"
  },
  {
    "text": "so this is how we create different types",
    "start": "802240",
    "end": "804560"
  },
  {
    "text": "of compositions depending upon",
    "start": "804560",
    "end": "806560"
  },
  {
    "text": "how we would want to",
    "start": "806560",
    "end": "808480"
  },
  {
    "text": "create our abstractions",
    "start": "808480",
    "end": "811680"
  },
  {
    "text": "now once the compositions are available",
    "start": "812000",
    "end": "814000"
  },
  {
    "text": "the next step is to actually create",
    "start": "814000",
    "end": "815600"
  },
  {
    "text": "those uh resources that we want so",
    "start": "815600",
    "end": "818160"
  },
  {
    "text": "that's when we create a composite",
    "start": "818160",
    "end": "819920"
  },
  {
    "text": "resource a composite resource represents",
    "start": "819920",
    "end": "822880"
  },
  {
    "text": "a set of managed resources that will",
    "start": "822880",
    "end": "824639"
  },
  {
    "text": "eventually get created in the underlying",
    "start": "824639",
    "end": "827360"
  },
  {
    "text": "cloud service",
    "start": "827360",
    "end": "828800"
  },
  {
    "text": "provider",
    "start": "828800",
    "end": "830240"
  },
  {
    "text": "so a composite resource provides the",
    "start": "830240",
    "end": "832480"
  },
  {
    "text": "required inputs from the user",
    "start": "832480",
    "end": "834639"
  },
  {
    "text": "to the composition and then the",
    "start": "834639",
    "end": "836480"
  },
  {
    "text": "composition kickstarts creation of",
    "start": "836480",
    "end": "839360"
  },
  {
    "text": "the",
    "start": "839360",
    "end": "840160"
  },
  {
    "text": "composite the managed resources in the",
    "start": "840160",
    "end": "842320"
  },
  {
    "text": "underlying cloud provider so composite",
    "start": "842320",
    "end": "844959"
  },
  {
    "text": "resource can be thought of similar to a",
    "start": "844959",
    "end": "847199"
  },
  {
    "text": "custom resource in the kubernetes world",
    "start": "847199",
    "end": "849279"
  },
  {
    "text": "or like a tfr's or a helm wireless.aml",
    "start": "849279",
    "end": "852800"
  },
  {
    "text": "right that's how you would relate to a",
    "start": "852800",
    "end": "854560"
  },
  {
    "text": "composite resource",
    "start": "854560",
    "end": "856959"
  },
  {
    "text": "so",
    "start": "856959",
    "end": "857839"
  },
  {
    "text": "let's say we switch the persona and we",
    "start": "857839",
    "end": "860320"
  },
  {
    "text": "go to a developer persona and we want to",
    "start": "860320",
    "end": "862160"
  },
  {
    "text": "create a resource then essentially we",
    "start": "862160",
    "end": "864720"
  },
  {
    "text": "create a composite resource we're saying",
    "start": "864720",
    "end": "866639"
  },
  {
    "text": "that we want an x postgres equal",
    "start": "866639",
    "end": "868839"
  },
  {
    "text": "instance uh",
    "start": "868839",
    "end": "869920"
  },
  {
    "text": "a database",
    "start": "869920",
    "end": "871199"
  },
  {
    "text": "and we are saying that okay we want 20",
    "start": "871199",
    "end": "873360"
  },
  {
    "text": "gb and the provider is aws that's all we",
    "start": "873360",
    "end": "875519"
  },
  {
    "text": "are saying and when we apply this yaml",
    "start": "875519",
    "end": "878720"
  },
  {
    "text": "the respective composition is",
    "start": "878720",
    "end": "880320"
  },
  {
    "text": "automatically picked up and the",
    "start": "880320",
    "end": "882000"
  },
  {
    "text": "corresponding managed resources are",
    "start": "882000",
    "end": "883519"
  },
  {
    "text": "automatically created by cross plane",
    "start": "883519",
    "end": "887519"
  },
  {
    "text": "there is also another concept called as",
    "start": "890160",
    "end": "892639"
  },
  {
    "text": "composite resource claim a composite",
    "start": "892639",
    "end": "895199"
  },
  {
    "text": "resource claim is very similar to a",
    "start": "895199",
    "end": "897760"
  },
  {
    "text": "composite resource uh it actually one to",
    "start": "897760",
    "end": "900399"
  },
  {
    "text": "one maps to a composite resource and",
    "start": "900399",
    "end": "902959"
  },
  {
    "text": "also has the exact sca same schema like",
    "start": "902959",
    "end": "906079"
  },
  {
    "text": "a composite resource right",
    "start": "906079",
    "end": "908240"
  },
  {
    "text": "the key difference between uh xrc",
    "start": "908240",
    "end": "911279"
  },
  {
    "text": "resource claim and a composite resource",
    "start": "911279",
    "end": "913360"
  },
  {
    "text": "is that",
    "start": "913360",
    "end": "914320"
  },
  {
    "text": "typically xrc the composite resource",
    "start": "914320",
    "end": "916959"
  },
  {
    "text": "claim is used by developers",
    "start": "916959",
    "end": "919920"
  },
  {
    "text": "and",
    "start": "919920",
    "end": "920720"
  },
  {
    "text": "devops teams and platform teams can use",
    "start": "920720",
    "end": "922880"
  },
  {
    "text": "the composite resource to create",
    "start": "922880",
    "end": "924800"
  },
  {
    "text": "resources right and the other key",
    "start": "924800",
    "end": "927120"
  },
  {
    "text": "difference is that the composite",
    "start": "927120",
    "end": "929040"
  },
  {
    "text": "resource claims are all name space scope",
    "start": "929040",
    "end": "931680"
  },
  {
    "text": "they reside within the name space that",
    "start": "931680",
    "end": "933040"
  },
  {
    "text": "is specified and the composite resources",
    "start": "933040",
    "end": "936240"
  },
  {
    "text": "are actually clustered scoped right so",
    "start": "936240",
    "end": "939120"
  },
  {
    "text": "but one to one they have a exact same uh",
    "start": "939120",
    "end": "942480"
  },
  {
    "text": "spectrum schema and they relate to each",
    "start": "942480",
    "end": "944399"
  },
  {
    "text": "other uh in a one-to-one fashion",
    "start": "944399",
    "end": "948160"
  },
  {
    "text": "so how how does this",
    "start": "948480",
    "end": "950160"
  },
  {
    "text": "all these things actually get uh",
    "start": "950160",
    "end": "952240"
  },
  {
    "text": "assembled and you know and you put",
    "start": "952240",
    "end": "953680"
  },
  {
    "text": "together how does it look like right so",
    "start": "953680",
    "end": "956000"
  },
  {
    "text": "the first step is the platform team uh",
    "start": "956000",
    "end": "958240"
  },
  {
    "text": "defines the spec through a composite",
    "start": "958240",
    "end": "960720"
  },
  {
    "text": "resource definition and then the",
    "start": "960720",
    "end": "962560"
  },
  {
    "text": "platform team can create",
    "start": "962560",
    "end": "964720"
  },
  {
    "text": "different",
    "start": "964720",
    "end": "965759"
  },
  {
    "text": "compositions uh which create the actual",
    "start": "965759",
    "end": "969680"
  },
  {
    "text": "composite resources",
    "start": "969680",
    "end": "971360"
  },
  {
    "text": "and as a developer they initiate a",
    "start": "971360",
    "end": "974560"
  },
  {
    "text": "composite resource claim to be created",
    "start": "974560",
    "end": "976800"
  },
  {
    "text": "by",
    "start": "976800",
    "end": "977519"
  },
  {
    "text": "creating a claim which in turn creates a",
    "start": "977519",
    "end": "979839"
  },
  {
    "text": "composite resource and the composite",
    "start": "979839",
    "end": "981839"
  },
  {
    "text": "resource starts creating all the",
    "start": "981839",
    "end": "984399"
  },
  {
    "text": "required managed resources in the",
    "start": "984399",
    "end": "986399"
  },
  {
    "text": "underlying uh cloud provider as defined",
    "start": "986399",
    "end": "989519"
  },
  {
    "text": "in the composition uh composition",
    "start": "989519",
    "end": "992480"
  },
  {
    "text": "defined by the platform teams okay so",
    "start": "992480",
    "end": "994720"
  },
  {
    "text": "that's how this whole thing is going to",
    "start": "994720",
    "end": "996079"
  },
  {
    "text": "work",
    "start": "996079",
    "end": "998160"
  },
  {
    "text": "okay so with that let's actually jump",
    "start": "998160",
    "end": "1000320"
  },
  {
    "text": "into a demo where we will see things in",
    "start": "1000320",
    "end": "1002320"
  },
  {
    "text": "action",
    "start": "1002320",
    "end": "1003440"
  },
  {
    "text": "um",
    "start": "1003440",
    "end": "1005759"
  },
  {
    "text": "so um i've got a kubernetes cluster uh",
    "start": "1006240",
    "end": "1009519"
  },
  {
    "text": "running on uh aws uh eks and i've got it",
    "start": "1009519",
    "end": "1013839"
  },
  {
    "text": "connected to my uh local",
    "start": "1013839",
    "end": "1016079"
  },
  {
    "text": "and uh you can see that uh",
    "start": "1016079",
    "end": "1018560"
  },
  {
    "text": "my cube config is currently connected to",
    "start": "1018560",
    "end": "1020160"
  },
  {
    "text": "that right",
    "start": "1020160",
    "end": "1021440"
  },
  {
    "text": "now the first step to do is that we can",
    "start": "1021440",
    "end": "1024319"
  },
  {
    "text": "start installing cross plane so that can",
    "start": "1024319",
    "end": "1026160"
  },
  {
    "text": "be installed",
    "start": "1026160",
    "end": "1027760"
  },
  {
    "text": "uh just by using a helm and you know",
    "start": "1027760",
    "end": "1030160"
  },
  {
    "text": "install the cross plane",
    "start": "1030160",
    "end": "1032880"
  },
  {
    "text": "template",
    "start": "1032880",
    "end": "1033839"
  },
  {
    "text": "and once cross player is installed then",
    "start": "1033839",
    "end": "1036880"
  },
  {
    "text": "the first step is to actually",
    "start": "1036880",
    "end": "1039678"
  },
  {
    "text": "install the provider that you would want",
    "start": "1039679",
    "end": "1041760"
  },
  {
    "text": "to enable so",
    "start": "1041760",
    "end": "1043678"
  },
  {
    "text": "in this case uh",
    "start": "1043679",
    "end": "1045438"
  },
  {
    "text": "you can simply say i want to have",
    "start": "1045439",
    "end": "1047438"
  },
  {
    "text": "provided aws to be installed because we",
    "start": "1047439",
    "end": "1049360"
  },
  {
    "text": "are going to deal with aws primarily",
    "start": "1049360",
    "end": "1052640"
  },
  {
    "text": "and i've already got that as well",
    "start": "1052640",
    "end": "1055039"
  },
  {
    "text": "installed on the cluster so if i just",
    "start": "1055039",
    "end": "1056799"
  },
  {
    "text": "say",
    "start": "1056799",
    "end": "1058320"
  },
  {
    "text": "k get",
    "start": "1058320",
    "end": "1060880"
  },
  {
    "text": "providers",
    "start": "1061440",
    "end": "1064240"
  },
  {
    "text": "so i've got the provider aws",
    "start": "1064240",
    "end": "1067039"
  },
  {
    "text": "uh installed on the cluster right",
    "start": "1067039",
    "end": "1070480"
  },
  {
    "text": "now um so let's say we want to uh create",
    "start": "1070480",
    "end": "1073600"
  },
  {
    "text": "an sqs",
    "start": "1073600",
    "end": "1075280"
  },
  {
    "text": "abstraction where we want to offer an",
    "start": "1075280",
    "end": "1077520"
  },
  {
    "text": "sql service where developers can create",
    "start": "1077520",
    "end": "1079840"
  },
  {
    "text": "cues on the fly",
    "start": "1079840",
    "end": "1081840"
  },
  {
    "text": "so what we will first do is",
    "start": "1081840",
    "end": "1084240"
  },
  {
    "text": "we will create a composite resource",
    "start": "1084240",
    "end": "1085919"
  },
  {
    "text": "definition for sqs",
    "start": "1085919",
    "end": "1088880"
  },
  {
    "text": "and we define okay it's a composite",
    "start": "1088880",
    "end": "1090640"
  },
  {
    "text": "squares and it can be claimed by the",
    "start": "1090640",
    "end": "1092880"
  },
  {
    "text": "developer using the name",
    "start": "1092880",
    "end": "1094559"
  },
  {
    "text": "sqs and we simply define the spec for",
    "start": "1094559",
    "end": "1097679"
  },
  {
    "text": "this particular",
    "start": "1097679",
    "end": "1099280"
  },
  {
    "text": "abstraction that we want to offer",
    "start": "1099280",
    "end": "1101120"
  },
  {
    "text": "uh it's a very simple spec where we",
    "start": "1101120",
    "end": "1103039"
  },
  {
    "text": "simply accept name region and the",
    "start": "1103039",
    "end": "1106000"
  },
  {
    "text": "visibility time mode from the",
    "start": "1106000",
    "end": "1108400"
  },
  {
    "text": "end user right so that's the first step",
    "start": "1108400",
    "end": "1110960"
  },
  {
    "text": "to define a composite resource",
    "start": "1110960",
    "end": "1112720"
  },
  {
    "text": "definition",
    "start": "1112720",
    "end": "1114240"
  },
  {
    "text": "then we define a composition",
    "start": "1114240",
    "end": "1117360"
  },
  {
    "text": "right where",
    "start": "1117360",
    "end": "1119280"
  },
  {
    "text": "we are saying that okay that's of",
    "start": "1119280",
    "end": "1121120"
  },
  {
    "text": "composite sqs",
    "start": "1121120",
    "end": "1122799"
  },
  {
    "text": "time",
    "start": "1122799",
    "end": "1123600"
  },
  {
    "text": "and in the composition",
    "start": "1123600",
    "end": "1126160"
  },
  {
    "text": "we are",
    "start": "1126160",
    "end": "1127919"
  },
  {
    "text": "predefining the message retention period",
    "start": "1127919",
    "end": "1130559"
  },
  {
    "text": "and we are accepting",
    "start": "1130559",
    "end": "1132880"
  },
  {
    "text": "visibility time mode region from the",
    "start": "1132880",
    "end": "1135360"
  },
  {
    "text": "user and that's actually mapped from the",
    "start": "1135360",
    "end": "1139120"
  },
  {
    "text": "user specified parameter to the actual",
    "start": "1139120",
    "end": "1141679"
  },
  {
    "text": "visibility time mode property in the",
    "start": "1141679",
    "end": "1143840"
  },
  {
    "text": "actual underlying management resource",
    "start": "1143840",
    "end": "1145200"
  },
  {
    "text": "similar region is also mapped to the",
    "start": "1145200",
    "end": "1147200"
  },
  {
    "text": "reason parameter in the managed resource",
    "start": "1147200",
    "end": "1149280"
  },
  {
    "text": "right",
    "start": "1149280",
    "end": "1151039"
  },
  {
    "text": "and",
    "start": "1151039",
    "end": "1151760"
  },
  {
    "text": "so that's the composition and uh as a",
    "start": "1151760",
    "end": "1154880"
  },
  {
    "text": "user when i want to use",
    "start": "1154880",
    "end": "1157679"
  },
  {
    "text": "this composition and create a particular",
    "start": "1157679",
    "end": "1160320"
  },
  {
    "text": "sqsq i simply say okay i want to create",
    "start": "1160320",
    "end": "1163520"
  },
  {
    "text": "a queue",
    "start": "1163520",
    "end": "1164559"
  },
  {
    "text": "the name is whatever demo is give us and",
    "start": "1164559",
    "end": "1166880"
  },
  {
    "text": "the region is usc 1 and the visibility",
    "start": "1166880",
    "end": "1169600"
  },
  {
    "text": "mode is 30 and i can also say that okay",
    "start": "1169600",
    "end": "1173120"
  },
  {
    "text": "once this cube is created",
    "start": "1173120",
    "end": "1175360"
  },
  {
    "text": "i want the q connection details to be",
    "start": "1175360",
    "end": "1177840"
  },
  {
    "text": "available in a particular secret right",
    "start": "1177840",
    "end": "1180160"
  },
  {
    "text": "because my application needs to be able",
    "start": "1180160",
    "end": "1181840"
  },
  {
    "text": "to",
    "start": "1181840",
    "end": "1182559"
  },
  {
    "text": "connect to the particular queue right",
    "start": "1182559",
    "end": "1186160"
  },
  {
    "text": "so let's actually go ahead and",
    "start": "1186160",
    "end": "1188720"
  },
  {
    "text": "install all of this so",
    "start": "1188720",
    "end": "1191440"
  },
  {
    "text": "let's say we first install the",
    "start": "1191440",
    "end": "1194720"
  },
  {
    "text": "crd right so",
    "start": "1194720",
    "end": "1196880"
  },
  {
    "text": "let's actually apply the",
    "start": "1196880",
    "end": "1199039"
  },
  {
    "text": "crd camel",
    "start": "1199039",
    "end": "1202000"
  },
  {
    "text": "that should happen yeah so we have got",
    "start": "1204159",
    "end": "1206720"
  },
  {
    "text": "the",
    "start": "1206720",
    "end": "1207520"
  },
  {
    "text": "composite resource definition created so",
    "start": "1207520",
    "end": "1209919"
  },
  {
    "text": "the next step is to define the uh to",
    "start": "1209919",
    "end": "1212000"
  },
  {
    "text": "install the composition",
    "start": "1212000",
    "end": "1214400"
  },
  {
    "text": "we'll go ahead and",
    "start": "1214400",
    "end": "1215679"
  },
  {
    "text": "actually install the composition",
    "start": "1215679",
    "end": "1219039"
  },
  {
    "text": "so typically this activity will be",
    "start": "1219440",
    "end": "1221280"
  },
  {
    "text": "performed by the uh platforms team and",
    "start": "1221280",
    "end": "1223600"
  },
  {
    "text": "the compositions will be available and",
    "start": "1223600",
    "end": "1225520"
  },
  {
    "text": "then when it's available for the",
    "start": "1225520",
    "end": "1227120"
  },
  {
    "text": "developer they simply initiate a claim",
    "start": "1227120",
    "end": "1229440"
  },
  {
    "text": "which actually creates a queue right so",
    "start": "1229440",
    "end": "1232320"
  },
  {
    "text": "now that the composition is actually",
    "start": "1232320",
    "end": "1233600"
  },
  {
    "text": "available we can actually go ahead and",
    "start": "1233600",
    "end": "1234880"
  },
  {
    "text": "create a particular queue as well so",
    "start": "1234880",
    "end": "1236880"
  },
  {
    "text": "before that let's actually switch to",
    "start": "1236880",
    "end": "1238559"
  },
  {
    "text": "rescuers console so we don't have any",
    "start": "1238559",
    "end": "1241360"
  },
  {
    "text": "queue available here",
    "start": "1241360",
    "end": "1242960"
  },
  {
    "text": "so let's actually go and say",
    "start": "1242960",
    "end": "1247240"
  },
  {
    "text": "sqs claim dot ml",
    "start": "1248240",
    "end": "1250480"
  },
  {
    "text": "uh to actually initiate creation of a",
    "start": "1250480",
    "end": "1252720"
  },
  {
    "text": "particular sqs queue so yeah so there",
    "start": "1252720",
    "end": "1255360"
  },
  {
    "text": "you go sqs",
    "start": "1255360",
    "end": "1256880"
  },
  {
    "text": "demo is created so if i actually say",
    "start": "1256880",
    "end": "1260240"
  },
  {
    "text": "cube ctl",
    "start": "1260240",
    "end": "1262960"
  },
  {
    "text": "i should actually see so that i actually",
    "start": "1265360",
    "end": "1267280"
  },
  {
    "text": "have the rescue sdmo queue created so",
    "start": "1267280",
    "end": "1269600"
  },
  {
    "text": "what you see here is uh you now start",
    "start": "1269600",
    "end": "1272320"
  },
  {
    "text": "managing sqs itself from kubernetes",
    "start": "1272320",
    "end": "1275200"
  },
  {
    "text": "right you know have that custom resource",
    "start": "1275200",
    "end": "1276960"
  },
  {
    "text": "uh",
    "start": "1276960",
    "end": "1277919"
  },
  {
    "text": "created here itself and actually can",
    "start": "1277919",
    "end": "1280159"
  },
  {
    "text": "manage uh that particular queue from",
    "start": "1280159",
    "end": "1282720"
  },
  {
    "text": "kubernetes without even going to the aws",
    "start": "1282720",
    "end": "1284720"
  },
  {
    "text": "console or using any other tool right so",
    "start": "1284720",
    "end": "1287120"
  },
  {
    "text": "if i switch back to my area console uh a",
    "start": "1287120",
    "end": "1290080"
  },
  {
    "text": "queue should get created in another",
    "start": "1290080",
    "end": "1292480"
  },
  {
    "text": "few seconds maybe there you go right so",
    "start": "1292480",
    "end": "1294880"
  },
  {
    "text": "the queue actually has got created so as",
    "start": "1294880",
    "end": "1297440"
  },
  {
    "text": "simple as that so now uh the power of",
    "start": "1297440",
    "end": "1300000"
  },
  {
    "text": "cross plane now comes in the picture",
    "start": "1300000",
    "end": "1301919"
  },
  {
    "text": "where like i mentioned you can now",
    "start": "1301919",
    "end": "1304159"
  },
  {
    "text": "manage everything from kubernetes itself",
    "start": "1304159",
    "end": "1307280"
  },
  {
    "text": "and because it runs in",
    "start": "1307280",
    "end": "1309039"
  },
  {
    "text": "kubernetes uh itself",
    "start": "1309039",
    "end": "1312080"
  },
  {
    "text": "all the aspects of kubernetes like your",
    "start": "1312080",
    "end": "1314080"
  },
  {
    "text": "reconciliation uh loop all those things",
    "start": "1314080",
    "end": "1316640"
  },
  {
    "text": "also apply to even this particular cloud",
    "start": "1316640",
    "end": "1318720"
  },
  {
    "text": "distance right so let's take for example",
    "start": "1318720",
    "end": "1321360"
  },
  {
    "text": "somebody goes and",
    "start": "1321360",
    "end": "1322799"
  },
  {
    "text": "modifies this particular cube where",
    "start": "1322799",
    "end": "1325200"
  },
  {
    "text": "they actually go and change the",
    "start": "1325200",
    "end": "1326880"
  },
  {
    "text": "visibility time out to let's say",
    "start": "1326880",
    "end": "1328880"
  },
  {
    "text": "60 seconds instead of 30 seconds right",
    "start": "1328880",
    "end": "1331919"
  },
  {
    "text": "and say go and save",
    "start": "1331919",
    "end": "1333600"
  },
  {
    "text": "right so now uh because the",
    "start": "1333600",
    "end": "1336559"
  },
  {
    "text": "uh the queue was created from from",
    "start": "1336559",
    "end": "1339200"
  },
  {
    "text": "kubernetes through cross plane uh it",
    "start": "1339200",
    "end": "1341360"
  },
  {
    "text": "will it will automatically try to",
    "start": "1341360",
    "end": "1342960"
  },
  {
    "text": "maintain the state as defined in your",
    "start": "1342960",
    "end": "1345679"
  },
  {
    "text": "desired state right so the",
    "start": "1345679",
    "end": "1347200"
  },
  {
    "text": "reconciliation loop is always going to",
    "start": "1347200",
    "end": "1349440"
  },
  {
    "text": "keep reconciling and finding out whether",
    "start": "1349440",
    "end": "1351360"
  },
  {
    "text": "there is any change and automatically",
    "start": "1351360",
    "end": "1353520"
  },
  {
    "text": "detect the drift and you know revert",
    "start": "1353520",
    "end": "1355840"
  },
  {
    "text": "that change so if i actually go back and",
    "start": "1355840",
    "end": "1358640"
  },
  {
    "text": "refresh this uh",
    "start": "1358640",
    "end": "1361360"
  },
  {
    "text": "so it's it's one minute now and if you",
    "start": "1361360",
    "end": "1363600"
  },
  {
    "text": "give another a few seconds while the",
    "start": "1363600",
    "end": "1365600"
  },
  {
    "text": "cross plane kicks in and finds out that",
    "start": "1365600",
    "end": "1367760"
  },
  {
    "text": "you know this particular thing has",
    "start": "1367760",
    "end": "1369600"
  },
  {
    "text": "changed it will actually revert it back",
    "start": "1369600",
    "end": "1372880"
  },
  {
    "text": "so let me actually",
    "start": "1372880",
    "end": "1374799"
  },
  {
    "text": "uh see if that happens",
    "start": "1374799",
    "end": "1377679"
  },
  {
    "text": "i think we just have to yeah there you",
    "start": "1377679",
    "end": "1379039"
  },
  {
    "text": "go right so uh the time mode visible",
    "start": "1379039",
    "end": "1381600"
  },
  {
    "text": "timeout has actually come back to 30",
    "start": "1381600",
    "end": "1383039"
  },
  {
    "text": "seconds as defined in",
    "start": "1383039",
    "end": "1385039"
  },
  {
    "text": "our",
    "start": "1385039",
    "end": "1386240"
  },
  {
    "text": "claim right",
    "start": "1386240",
    "end": "1388320"
  },
  {
    "text": "so that is the uh the key uh difference",
    "start": "1388320",
    "end": "1391760"
  },
  {
    "text": "between you know cross spin on the other",
    "start": "1391760",
    "end": "1393440"
  },
  {
    "text": "infrastructure as code tool right where",
    "start": "1393440",
    "end": "1395760"
  },
  {
    "text": "drifts can be automatically detected and",
    "start": "1395760",
    "end": "1397360"
  },
  {
    "text": "automatically reconciled and you can go",
    "start": "1397360",
    "end": "1399200"
  },
  {
    "text": "back to your",
    "start": "1399200",
    "end": "1400559"
  },
  {
    "text": "desired state as defined in your spec",
    "start": "1400559",
    "end": "1403919"
  },
  {
    "text": "right so that was a simple demo and if",
    "start": "1403919",
    "end": "1405600"
  },
  {
    "text": "you just want to delete this particular",
    "start": "1405600",
    "end": "1407200"
  },
  {
    "text": "cube we can actually again simply delete",
    "start": "1407200",
    "end": "1408960"
  },
  {
    "text": "it from uh here itself right the entire",
    "start": "1408960",
    "end": "1411280"
  },
  {
    "text": "life cycle can be managed from",
    "start": "1411280",
    "end": "1413120"
  },
  {
    "text": "kubernetes itself",
    "start": "1413120",
    "end": "1416600"
  },
  {
    "text": "right so that was a simple demo of how",
    "start": "1417120",
    "end": "1419840"
  },
  {
    "text": "you can use uh crossplane to uh",
    "start": "1419840",
    "end": "1421919"
  },
  {
    "text": "provision uh cloud service like an aws",
    "start": "1421919",
    "end": "1424480"
  },
  {
    "text": "sqs right out of your kubernetes cluster",
    "start": "1424480",
    "end": "1429120"
  },
  {
    "text": "now uh the next question is uh what",
    "start": "1429120",
    "end": "1431840"
  },
  {
    "text": "about",
    "start": "1431840",
    "end": "1432640"
  },
  {
    "text": "pod identities right uh so now this",
    "start": "1432640",
    "end": "1435679"
  },
  {
    "text": "queue has got created uh how does the",
    "start": "1435679",
    "end": "1438559"
  },
  {
    "text": "application connect to that particular",
    "start": "1438559",
    "end": "1440720"
  },
  {
    "text": "uh queue because it needs uh credentials",
    "start": "1440720",
    "end": "1444080"
  },
  {
    "text": "to talk to the particular queue right uh",
    "start": "1444080",
    "end": "1446720"
  },
  {
    "text": "so in terms of aws iem rolls or whatever",
    "start": "1446720",
    "end": "1449520"
  },
  {
    "text": "right",
    "start": "1449520",
    "end": "1450320"
  },
  {
    "text": "now",
    "start": "1450320",
    "end": "1451120"
  },
  {
    "text": "um every part when it wants to connect",
    "start": "1451120",
    "end": "1453520"
  },
  {
    "text": "to a particular uh cloud service then it",
    "start": "1453520",
    "end": "1456559"
  },
  {
    "text": "needs to have those fine grained",
    "start": "1456559",
    "end": "1458000"
  },
  {
    "text": "permissions uh that are specific to what",
    "start": "1458000",
    "end": "1460960"
  },
  {
    "text": "that particular part needs to connect to",
    "start": "1460960",
    "end": "1462799"
  },
  {
    "text": "let's say there is a part that connects",
    "start": "1462799",
    "end": "1464080"
  },
  {
    "text": "to sql it needs only squeeze permission",
    "start": "1464080",
    "end": "1466240"
  },
  {
    "text": "if there is a part that needs to connect",
    "start": "1466240",
    "end": "1467679"
  },
  {
    "text": "let's say dynamodb it needs to have only",
    "start": "1467679",
    "end": "1469440"
  },
  {
    "text": "that particular permission so this whole",
    "start": "1469440",
    "end": "1471360"
  },
  {
    "text": "thing needs to be",
    "start": "1471360",
    "end": "1472480"
  },
  {
    "text": "again dynamically created whenever the",
    "start": "1472480",
    "end": "1474240"
  },
  {
    "text": "product comes up and you need to create",
    "start": "1474240",
    "end": "1476240"
  },
  {
    "text": "those respective iem roles and policies",
    "start": "1476240",
    "end": "1478400"
  },
  {
    "text": "and also create those respective uh",
    "start": "1478400",
    "end": "1480400"
  },
  {
    "text": "service accounts right so if you're",
    "start": "1480400",
    "end": "1482480"
  },
  {
    "text": "operating as a platform then this whole",
    "start": "1482480",
    "end": "1484240"
  },
  {
    "text": "process needs to be again automated",
    "start": "1484240",
    "end": "1486159"
  },
  {
    "text": "right so how do we do that so again the",
    "start": "1486159",
    "end": "1488720"
  },
  {
    "text": "operators are to the rescue right so",
    "start": "1488720",
    "end": "1490960"
  },
  {
    "text": "what we can do is we can actually have",
    "start": "1490960",
    "end": "1492960"
  },
  {
    "text": "our own custom operator",
    "start": "1492960",
    "end": "1495200"
  },
  {
    "text": "to manage the whole pod identity aspect",
    "start": "1495200",
    "end": "1497600"
  },
  {
    "text": "right so you can have your own custom",
    "start": "1497600",
    "end": "1499600"
  },
  {
    "text": "operator written where what it does is",
    "start": "1499600",
    "end": "1501919"
  },
  {
    "text": "whenever a part comes up and it needs to",
    "start": "1501919",
    "end": "1503919"
  },
  {
    "text": "let's say connect to a particular cloud",
    "start": "1503919",
    "end": "1506000"
  },
  {
    "text": "service it identifies which servers it",
    "start": "1506000",
    "end": "1508159"
  },
  {
    "text": "needs to connect to it automatically",
    "start": "1508159",
    "end": "1510000"
  },
  {
    "text": "creates those required iem roles and",
    "start": "1510000",
    "end": "1512159"
  },
  {
    "text": "policies and also creates the required",
    "start": "1512159",
    "end": "1514480"
  },
  {
    "text": "kubernetes service accounts attaches to",
    "start": "1514480",
    "end": "1516320"
  },
  {
    "text": "the particular part and you know",
    "start": "1516320",
    "end": "1518159"
  },
  {
    "text": "immediately the part can actually start",
    "start": "1518159",
    "end": "1519679"
  },
  {
    "text": "connecting to that particular queue",
    "start": "1519679",
    "end": "1521279"
  },
  {
    "text": "right um",
    "start": "1521279",
    "end": "1522960"
  },
  {
    "text": "so hopefully that gives you an idea of",
    "start": "1522960",
    "end": "1524799"
  },
  {
    "text": "how we can automate the entire",
    "start": "1524799",
    "end": "1526240"
  },
  {
    "text": "infrastructure of provisioning",
    "start": "1526240",
    "end": "1528400"
  },
  {
    "text": "cloud services and even provisioning iem",
    "start": "1528400",
    "end": "1530880"
  },
  {
    "text": "roles everything through operators",
    "start": "1530880",
    "end": "1532640"
  },
  {
    "text": "through a combination of cross plane and",
    "start": "1532640",
    "end": "1534960"
  },
  {
    "text": "our own custom operators so in terms of",
    "start": "1534960",
    "end": "1537919"
  },
  {
    "text": "the benefits that cross plane offers",
    "start": "1537919",
    "end": "1540640"
  },
  {
    "text": "i can fun first fundamental benefit is",
    "start": "1540640",
    "end": "1542720"
  },
  {
    "text": "that uh because we are managing",
    "start": "1542720",
    "end": "1544640"
  },
  {
    "text": "everything through kubernetes itself now",
    "start": "1544640",
    "end": "1546799"
  },
  {
    "text": "as uh as users we can use the kubernetes",
    "start": "1546799",
    "end": "1551120"
  },
  {
    "text": "ecosystem and its tools to even manage",
    "start": "1551120",
    "end": "1553360"
  },
  {
    "text": "cloud resources right uh you don't have",
    "start": "1553360",
    "end": "1555840"
  },
  {
    "text": "to use another third-party tool to um to",
    "start": "1555840",
    "end": "1559279"
  },
  {
    "text": "manage cloud resources the entire",
    "start": "1559279",
    "end": "1561600"
  },
  {
    "text": "state of your cloud resources are",
    "start": "1561600",
    "end": "1564080"
  },
  {
    "text": "available within your kubernetes",
    "start": "1564080",
    "end": "1565919"
  },
  {
    "text": "clusters itself right and that's a",
    "start": "1565919",
    "end": "1568240"
  },
  {
    "text": "big advantage in terms of simplifying",
    "start": "1568240",
    "end": "1570000"
  },
  {
    "text": "the entire infrastructure pipelines",
    "start": "1570000",
    "end": "1572080"
  },
  {
    "text": "and we also saw in the demo where",
    "start": "1572080",
    "end": "1574799"
  },
  {
    "text": "the reconciliation happens automatically",
    "start": "1574799",
    "end": "1577120"
  },
  {
    "text": "so that any drifts that happens in the",
    "start": "1577120",
    "end": "1579760"
  },
  {
    "text": "infrastructure outside of",
    "start": "1579760",
    "end": "1581919"
  },
  {
    "text": "cross plane is automatically detected",
    "start": "1581919",
    "end": "1584240"
  },
  {
    "text": "and",
    "start": "1584240",
    "end": "1585520"
  },
  {
    "text": "it maintains the desired state as",
    "start": "1585520",
    "end": "1587279"
  },
  {
    "text": "defined in our definitions right this is",
    "start": "1587279",
    "end": "1589919"
  },
  {
    "text": "very very powerful",
    "start": "1589919",
    "end": "1591440"
  },
  {
    "text": "where",
    "start": "1591440",
    "end": "1592400"
  },
  {
    "text": "any drifts is actually automatically",
    "start": "1592400",
    "end": "1594159"
  },
  {
    "text": "rolled back",
    "start": "1594159",
    "end": "1595760"
  },
  {
    "text": "so uh that's pretty much it so hopefully",
    "start": "1595760",
    "end": "1598320"
  },
  {
    "text": "that was useful uh so if you have any",
    "start": "1598320",
    "end": "1600960"
  },
  {
    "text": "follow-up questions",
    "start": "1600960",
    "end": "1602720"
  },
  {
    "text": "so please do reach out to me",
    "start": "1602720",
    "end": "1605200"
  },
  {
    "text": "thank you and have a great",
    "start": "1605200",
    "end": "1608799"
  }
]