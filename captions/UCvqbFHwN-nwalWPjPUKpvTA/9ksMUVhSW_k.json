[
  {
    "text": "all right i think we're uh ready to get started hello and welcome everyone thank you for coming i know it's been",
    "start": "160",
    "end": "6560"
  },
  {
    "text": "kind of a long week so i really appreciate you making it to my presentation uh it's one of the last at",
    "start": "6560",
    "end": "13280"
  },
  {
    "text": "cubecon so we're gonna make sure we wrap it up with some nice service meshing um before we",
    "start": "13280",
    "end": "19439"
  },
  {
    "text": "actually start can i get a quick show of hints for people that have heard about linkerity before",
    "start": "19439",
    "end": "25199"
  },
  {
    "text": "oh wow all right we're doing something well uh and who hasn't ever used the service mesh before",
    "start": "25199",
    "end": "32480"
  },
  {
    "text": "okay no worries we're gonna cover everything um cool so let's get started welcome to",
    "start": "32480",
    "end": "37760"
  },
  {
    "text": "overview and state of linker d uh we run one of these presentations for every kubecon",
    "start": "37760",
    "end": "42800"
  },
  {
    "text": "i'm going to be going through what a service mesh is what linguity is and where it sort of fits into the cncf",
    "start": "42800",
    "end": "47920"
  },
  {
    "text": "landscape um and then we're going to talk about what we've been doing and where we're going next and now what's",
    "start": "47920",
    "end": "52960"
  },
  {
    "text": "planned for the roadmap so a little bit about myself my name is matty david i'm a linguity maintainer",
    "start": "52960",
    "end": "60160"
  },
  {
    "text": "i'm also a software engineer at buoyant the creators of linkerd if you want to get in touch with me after the",
    "start": "60160",
    "end": "65280"
  },
  {
    "text": "presentation you have all of my handles there i'm on twitter github and a couple of slack workspaces not",
    "start": "65280",
    "end": "71200"
  },
  {
    "text": "just linkedins that's a picture of me before i started working for for linkery i didn't know what iptables is so i was",
    "start": "71200",
    "end": "76880"
  },
  {
    "text": "very happy things have changed a little bit since then but i basically started my contributor",
    "start": "76880",
    "end": "83520"
  },
  {
    "text": "experience with with linkerity when i was still a student it's been like two years and a half",
    "start": "83520",
    "end": "88720"
  },
  {
    "text": "almost free now that i've been coding and pushing features for linker d so i'm super excited to have a chance to talk",
    "start": "88720",
    "end": "95040"
  },
  {
    "text": "about it with you all maybe you know maybe you don't there are a couple of people that don't know",
    "start": "95040",
    "end": "100960"
  },
  {
    "text": "anything about service meshes but linker d is uh cncs first graduated service mesh so that's a huge milestone for us",
    "start": "100960",
    "end": "107920"
  },
  {
    "text": "we've been running in productions for more than five years now the slides are a bit old so it's four plus years still",
    "start": "107920",
    "end": "113759"
  },
  {
    "text": "accurate um we have a bunch of slack channel members we have a very thriving community both on github and on slack",
    "start": "113759",
    "end": "121360"
  },
  {
    "text": "we're committed to open governance and we have been adopted in production by a bunch of cool companies ranging from",
    "start": "121360",
    "end": "127280"
  },
  {
    "text": "enterprises all the way down to startups so no matter how big or small your company is",
    "start": "127280",
    "end": "132640"
  },
  {
    "text": "how much traffic you have linker d is definitely a good fit and we're going to see why",
    "start": "132640",
    "end": "139360"
  },
  {
    "text": "let's talk a bit about service meshes and what linguidi is supposed to be doing",
    "start": "139680",
    "end": "144800"
  },
  {
    "text": "so service meshes i think in the cncf landscape have become a bit of a buzzword and have become a bit complicated so",
    "start": "144800",
    "end": "151200"
  },
  {
    "text": "they have this sort of history that predates them i guess uh and that",
    "start": "151200",
    "end": "157760"
  },
  {
    "text": "makes them seem very confusing so people try and stay away from them but service meshes are are pretty simple they're",
    "start": "157760",
    "end": "164239"
  },
  {
    "text": "just platform level tools that give you reliability observability and security out of the box so it's nothing",
    "start": "164239",
    "end": "169760"
  },
  {
    "text": "complicated about that we basically do this by injecting a bunch of proxies running a sidecar containers",
    "start": "169760",
    "end": "177760"
  },
  {
    "text": "next three applications so what linker does is it injects a proxy next to your application it",
    "start": "177760",
    "end": "183360"
  },
  {
    "text": "receives your traffic it proxies it over to its target and in the process it achieves mtls so security",
    "start": "183360",
    "end": "190800"
  },
  {
    "text": "it pulls metrics from that so you have observability and it provides a bunch of useful features such as retries and",
    "start": "190800",
    "end": "197519"
  },
  {
    "text": "timeouts to achieve reliability it's not very complicated so",
    "start": "197519",
    "end": "203440"
  },
  {
    "text": "that's precisely why in the link rd team we like to preach about simplicity",
    "start": "203440",
    "end": "209040"
  },
  {
    "text": "service meshes can be simple if done right and that's exactly what we're trying to do linkerity just works and that's why we",
    "start": "209040",
    "end": "215920"
  },
  {
    "text": "have as you can see on the slide the moto less is more and more is less we have this strict philosophy and we're",
    "start": "215920",
    "end": "222480"
  },
  {
    "text": "kind of very opinionated when it comes to it that when you have a platform level tool it should just work you",
    "start": "222480",
    "end": "227920"
  },
  {
    "text": "shouldn't be concerned with learning how a tool works and you shouldn't have to operate it too much on a daily basis",
    "start": "227920",
    "end": "234560"
  },
  {
    "text": "what we want you to do is to install linkrd and just run it take your hands off focus on your day-to-day job you're",
    "start": "234560",
    "end": "240640"
  },
  {
    "text": "probably either a developer or you're an operator you have scripts to write you have code to push so you don't need to",
    "start": "240640",
    "end": "246480"
  },
  {
    "text": "worry about how the proxy works and all of the other platform level capabilities",
    "start": "246480",
    "end": "251760"
  },
  {
    "text": "so with linkerd we wanted to make sure that with zero config everything is possible out of the box for any",
    "start": "251760",
    "end": "257040"
  },
  {
    "text": "kubernetes app we're also ultra lite we wanted to introduce the bare minimum overhead and",
    "start": "257040",
    "end": "262479"
  },
  {
    "text": "that's very important when you have a platform level tool especially one that proxy traffic we want it to be simple like i",
    "start": "262479",
    "end": "268400"
  },
  {
    "text": "previously said and we wanted to make security a basic feature we didn't want it to to",
    "start": "268400",
    "end": "274479"
  },
  {
    "text": "be an option we wanted to make it the default for the data plane link rd uses rust",
    "start": "274479",
    "end": "281759"
  },
  {
    "text": "i'm not sure many of you are familiar with rust can i get another quick show of hands yeah all right we're doing well there so",
    "start": "281759",
    "end": "288800"
  },
  {
    "text": "rust is a programming language that's been sort of getting more momentum as of late",
    "start": "288800",
    "end": "294639"
  },
  {
    "text": "but its main value proposition is that you get zero cost abstractions and that's that is very performant",
    "start": "294639",
    "end": "300639"
  },
  {
    "text": "you can basically compile it to native code so it's very portable you can run it on on any architecture that you want",
    "start": "300639",
    "end": "306800"
  },
  {
    "text": "and it makes sure that it has a strong type system so that most of the years are caught at compile time and that's very important for us because again as a",
    "start": "306800",
    "end": "313360"
  },
  {
    "text": "platform level tool we don't want to bring down your prod deployment on a friday right your production environment",
    "start": "313360",
    "end": "318479"
  },
  {
    "text": "sorry on a friday because that would be pretty bad it will reflect poorly on on us and on you for",
    "start": "318479",
    "end": "323759"
  },
  {
    "text": "choosing linguity rust like i said compiles to native code and that makes it ultra light and ultra",
    "start": "323759",
    "end": "330080"
  },
  {
    "text": "fast and it lets you avoid an entire class of memory vulnerabilities through its borrowed checker so",
    "start": "330080",
    "end": "336639"
  },
  {
    "text": "rust basically makes sure that you cannot commit any uh bad memory faults such as double freeze",
    "start": "336639",
    "end": "342560"
  },
  {
    "text": "or you know messing around with pointers and if you've coded in c or c plus plus that probably happened to you at some",
    "start": "342560",
    "end": "347919"
  },
  {
    "text": "point it doesn't even have to be something that you don't know you know just a simple negligence and a pull",
    "start": "347919",
    "end": "353120"
  },
  {
    "text": "request can just lead to a bunch of disastrous cascading failures we are also built on a state-of-the-art",
    "start": "353120",
    "end": "359120"
  },
  {
    "text": "network stack so there are a couple of libraries in the rust ecosystem that have gained a lot of traction and that are used in production",
    "start": "359120",
    "end": "365360"
  },
  {
    "text": "systems so one of them is tokyo which is an asynchronous runtime and the linker d maintainers and linkerity contributors",
    "start": "365360",
    "end": "371120"
  },
  {
    "text": "have contributed extensively to tokyo one of the core maintainers was actually at buoyant developing the linguity proxy",
    "start": "371120",
    "end": "377440"
  },
  {
    "text": "uh we're built on top of tower were bent on top of hyper and h2 so most of the modern rust async",
    "start": "377440",
    "end": "383840"
  },
  {
    "text": "networking stack that's now used in a bunch of libraries and a bunch of other production systems have started from",
    "start": "383840",
    "end": "389360"
  },
  {
    "text": "linkedin we're still contributors to this day our philosophy when it comes to the proxy is that it should be simple to",
    "start": "389360",
    "end": "395199"
  },
  {
    "text": "implement uh sorry that it should be simple to use and it should be an implementation detail it should be sort",
    "start": "395199",
    "end": "400319"
  },
  {
    "text": "of opaque to everything that you're doing in your kubernetes environment you shouldn't have to be a proxy expert to",
    "start": "400319",
    "end": "405440"
  },
  {
    "text": "operate linkedin our approach to security so that's another one of our core ideologies first",
    "start": "405440",
    "end": "412560"
  },
  {
    "text": "keep it simple second keep it secure our approach to security is very focused and follows this strict",
    "start": "412560",
    "end": "419120"
  },
  {
    "text": "philosophy we want to secure the foundations so you know we're we're using rust for the linker d2 proxy so we",
    "start": "419120",
    "end": "424639"
  },
  {
    "text": "don't get any cvs or or memory vulnerabilities we're built on top of kubernetes actually and blinker d as a",
    "start": "424639",
    "end": "431440"
  },
  {
    "text": "whole we're leveraging almost entirely kubernetes primitives and in this case for security we use",
    "start": "431440",
    "end": "436960"
  },
  {
    "text": "service accounts for pod identity and we want to remove any barriers that you would have as an operator so that's why",
    "start": "436960",
    "end": "442319"
  },
  {
    "text": "we have mtls is on by default and as of recent versions you can't actually",
    "start": "442319",
    "end": "447360"
  },
  {
    "text": "disable mtls we want it to be on because we're strict believers in security",
    "start": "447360",
    "end": "453520"
  },
  {
    "text": "this is a question that we often get and we kind of love to answer it",
    "start": "453599",
    "end": "459840"
  },
  {
    "text": "how does linguidi compare to istio and it's a bit of a hard question because it really depends on your",
    "start": "459840",
    "end": "466000"
  },
  {
    "text": "production environment and it depends on what you want to do istio is built for feature parity they",
    "start": "466000",
    "end": "471919"
  },
  {
    "text": "add a bunch of features you can do a lot of cool stuff but that comes at a cost it comes at a cost of complexity you",
    "start": "471919",
    "end": "477440"
  },
  {
    "text": "have a bunch of crds to manage you have a bunch of things to learn and this is very hard when you have",
    "start": "477440",
    "end": "483199"
  },
  {
    "text": "limited time to learn a tool and to adopt a tool on the other hand link rd uses the bare",
    "start": "483199",
    "end": "488639"
  },
  {
    "text": "minimum to build a secure and reliable kubernetes platform so like i mentioned",
    "start": "488639",
    "end": "493680"
  },
  {
    "text": "we leverage almost entirely kubernetes primitives so for example for all of our network communications we're using",
    "start": "493680",
    "end": "499360"
  },
  {
    "text": "endpoints we're using services we don't add anything new to the whole stack",
    "start": "499360",
    "end": "504400"
  },
  {
    "text": "so that makes us much easier to use but it also makes us smaller lighter and faster",
    "start": "504400",
    "end": "509919"
  },
  {
    "text": "that's because linker d is built purposely the linguity proxy is built purposely for linkerid and when we think",
    "start": "509919",
    "end": "516560"
  },
  {
    "text": "about features yes we do miss out on feature parity but every feature that we add is carefully thought out that's",
    "start": "516560",
    "end": "522320"
  },
  {
    "text": "something that we want to do for our adopters we want to provide a stable platform we don't want to introduce any breaking changes we don't want to",
    "start": "522320",
    "end": "528880"
  },
  {
    "text": "surprise you we want you to know that the tool is going to work for a very long time and it's going to have backwards compatibility and we do that",
    "start": "528880",
    "end": "535680"
  },
  {
    "text": "by carefully thinking through the road map and thinking through of what people need chances are if you have a problem we can",
    "start": "535680",
    "end": "541760"
  },
  {
    "text": "definitely fix it but if we can fix it without adding more overhead more complexity and more features we're",
    "start": "541760",
    "end": "547360"
  },
  {
    "text": "probably going to do that as well the cons is obviously for linker d that it only works on kubernetes so we were",
    "start": "547360",
    "end": "553760"
  },
  {
    "text": "built for kubernetes and we leveraged the primitives but this has an asterisk to it and as",
    "start": "553760",
    "end": "558880"
  },
  {
    "text": "we'll see on the roadmap it's going to be changing in the future",
    "start": "558880",
    "end": "563839"
  },
  {
    "text": "that kind of covers the first part of the presentation you know the introduction to linkedin service",
    "start": "564399",
    "end": "570080"
  },
  {
    "text": "meshes if you didn't really understand everything you'll have some time to answer questions to ask questions at the end but now i want to talk a little bit",
    "start": "570080",
    "end": "576720"
  },
  {
    "text": "about linker d's years so far so since the last time i i had this presentation for kubecon eu 2021",
    "start": "576720",
    "end": "583760"
  },
  {
    "text": "a bunch of things have changed shortly before last year before kubecon last year we introduced d 2.9 mtls for",
    "start": "583760",
    "end": "590800"
  },
  {
    "text": "all so prior to this linkedin only did mtls for layer 7 protocols we did an mdls for http grpc and that was kind of",
    "start": "590800",
    "end": "598080"
  },
  {
    "text": "it but we wanted to introduce mtls for tcp out of the box with no configuration",
    "start": "598080",
    "end": "603200"
  },
  {
    "text": "and we managed to do that we've also added arm support we're the only service mesh as far as i know",
    "start": "603200",
    "end": "608399"
  },
  {
    "text": "please feel free to collect to correct me that compiles to arm architecture so if you have a home lab if you have arm",
    "start": "608399",
    "end": "614240"
  },
  {
    "text": "instances you can run the kerdi on it we introduced a multi-multi-core proxy runtime so we can add more throughput",
    "start": "614240",
    "end": "620240"
  },
  {
    "text": "and concurrency this was sort of by community demand people wanted to have some configuration options there and",
    "start": "620240",
    "end": "625600"
  },
  {
    "text": "mess around with the with the proxy's uh thread system so we obliged and then we also made prometheus",
    "start": "625600",
    "end": "632399"
  },
  {
    "text": "optional so in liquor day 2.9 uh prometheus and the metric stack shipped with the core linguity installation but",
    "start": "632399",
    "end": "638640"
  },
  {
    "text": "we quickly realized that in a bunch of production environments people already were running their own prometheus instance and we didn't want you to have",
    "start": "638640",
    "end": "645279"
  },
  {
    "text": "to deal with whatever linker he was adding so we just made it optional but that gave us an idea for lingardi",
    "start": "645279",
    "end": "651200"
  },
  {
    "text": "2.10 what if we just remove prometheus and we make everything optional to begin with what if instead of adding all of",
    "start": "651200",
    "end": "657519"
  },
  {
    "text": "this stuff that you might not need you can just have a default control plane that's the bare minimum it doesn't",
    "start": "657519",
    "end": "662880"
  },
  {
    "text": "introduce an overhead and then you can start composing as much as you want so this idea of having composed",
    "start": "662880",
    "end": "669519"
  },
  {
    "text": "sort of components and adding composition also comes in the proxy where we were inspired by the finago",
    "start": "669519",
    "end": "676880"
  },
  {
    "text": "library i don't know if any of you had any experience with it and sort of follows a similar pattern of building middlewares",
    "start": "676880",
    "end": "683279"
  },
  {
    "text": "to proxy traffic so this is what we did for linkrd 2.10 we split everything out into extension",
    "start": "683279",
    "end": "689040"
  },
  {
    "text": "so we have a vise extension which is the metric stack you have prometheus grafana metrics api and the linkrd dashboard if",
    "start": "689040",
    "end": "695839"
  },
  {
    "text": "you want to run with it you can if you don't you don't have to we introduced a jager extension for distributed tracing",
    "start": "695839",
    "end": "701040"
  },
  {
    "text": "and a multi-cluster extension by pulling all of the multi-cluster specific machinery into its own thing",
    "start": "701040",
    "end": "707200"
  },
  {
    "text": "extensions can also come from third parties so we wanted to give adopters the chance to run their own extensions and",
    "start": "707200",
    "end": "712959"
  },
  {
    "text": "integrate with the cli and the check system that we have so right now for example in my spare time i'm writing a",
    "start": "712959",
    "end": "718560"
  },
  {
    "text": "linguity extension to take care of job objects uh if you've used the sidecar pattern with job objects you'll know",
    "start": "718560",
    "end": "723680"
  },
  {
    "text": "that it's a bit hard to deal with so i wanted to solve that problem for the community in my spare time and i can just do it in an extension",
    "start": "723680",
    "end": "730560"
  },
  {
    "text": "besides all of this extension stuff of course we added more stuff such as opaque ports to proc to proxy without",
    "start": "730560",
    "end": "736000"
  },
  {
    "text": "protocol detection and we extended multi-cluster to old tcp connection and lots more of course that i didn't really",
    "start": "736000",
    "end": "741839"
  },
  {
    "text": "remember to put on the slide today we uh we have linkerd 2.11 so we",
    "start": "741839",
    "end": "748399"
  },
  {
    "text": "released linkedin 2.11 i think in autumn and what we focused on was policy",
    "start": "748399",
    "end": "754240"
  },
  {
    "text": "so for linkery to truly be a security conscious service mesh and to offer as much security as we can we wanted to",
    "start": "754240",
    "end": "760079"
  },
  {
    "text": "make sure that we can extend zero trust your kubernetes platform but we cannot have zero trust without having",
    "start": "760079",
    "end": "765920"
  },
  {
    "text": "authorization policies so that's why in 2011 we focused on server side policies we wanted to have a fine grain access",
    "start": "765920",
    "end": "772480"
  },
  {
    "text": "control system that you can use in a composable way again or big fans of composition that works with linguity",
    "start": "772480",
    "end": "779440"
  },
  {
    "text": "secure identities and also that works at a network range so right now with authorization policies you can describe",
    "start": "779440",
    "end": "785279"
  },
  {
    "text": "basically a resource on your server that will allow you to accept traffic from specific lines and this is all based on",
    "start": "785279",
    "end": "791600"
  },
  {
    "text": "identity or based on network ranges if you don't want certain subnets to connect your server you can just deny",
    "start": "791600",
    "end": "797760"
  },
  {
    "text": "them we also added some more stuff we added grpc retries so this is more http",
    "start": "797760",
    "end": "803920"
  },
  {
    "text": "requests with bodies if you have an http post request that has a body and you want to retry it i don't know if any of you have tried to implement this but it",
    "start": "803920",
    "end": "810240"
  },
  {
    "text": "turns out to be a pretty complex problem especially if you want to keep the overhead minimal what do you do a lot of",
    "start": "810240",
    "end": "815680"
  },
  {
    "text": "the bytes do you keep them in memory do you buffer them it's pretty hard if you think about it especially when you have tens of thousands of connections running",
    "start": "815680",
    "end": "822399"
  },
  {
    "text": "but we managed to do it so we released grpc retries that's what we call it",
    "start": "822399",
    "end": "827440"
  },
  {
    "text": "and we also managed in the process to reduce the proxy footprint even more so the control plane for example is also",
    "start": "827440",
    "end": "833440"
  },
  {
    "text": "down to three deployments from four i think before we also expanded a bit more on",
    "start": "833440",
    "end": "839360"
  },
  {
    "text": "multi-cluster we and the community had some requests to extend stateless stateful sets and",
    "start": "839360",
    "end": "845519"
  },
  {
    "text": "multi-cluster and be able to mirror them but this is kind of a hard problem to do and we solved it by the introduction of",
    "start": "845519",
    "end": "851279"
  },
  {
    "text": "multi-cluster headless support we also added fuss testing some cli tab completions to make the quality of life",
    "start": "851279",
    "end": "857839"
  },
  {
    "text": "a bit better for contributors and a few other goodies so in the image here you can kind of see the depiction",
    "start": "857839",
    "end": "863600"
  },
  {
    "text": "of how server authorizations would work naturally it's never that simple in real life but",
    "start": "863600",
    "end": "868959"
  },
  {
    "text": "at least it provides an example so as of now this is how linkrd's architecture looks like we have a",
    "start": "868959",
    "end": "875120"
  },
  {
    "text": "control plane and a data plane the data plane is made out of proxies you just inject them next to your application and",
    "start": "875120",
    "end": "881199"
  },
  {
    "text": "this is done by the control planes proxy injector component the link rd proxy then talks to a couple",
    "start": "881199",
    "end": "887040"
  },
  {
    "text": "of components that from the control plane we have a destination service and the destination service is used to serve",
    "start": "887040",
    "end": "892399"
  },
  {
    "text": "service discovery you have a target you have an ip what do we know about this ip can we find out more so this is where we",
    "start": "892399",
    "end": "898560"
  },
  {
    "text": "collect all of the metadata where we do all of the current client-side policies that we have in place such as retries",
    "start": "898560",
    "end": "903920"
  },
  {
    "text": "and timeouts and where we scope the target out and build a load balancer next we have the policy controller and",
    "start": "903920",
    "end": "910720"
  },
  {
    "text": "this is something that we've introduced in lingerie 2.11 and the policy controller is pretty much like the",
    "start": "910720",
    "end": "915760"
  },
  {
    "text": "service discovery mechanism but for policy and finally we have the identity component the identity component is",
    "start": "915760",
    "end": "921839"
  },
  {
    "text": "super crucial for us because it allows the linguistic proxies to acquire a certificate as soon as they start and a",
    "start": "921839",
    "end": "927199"
  },
  {
    "text": "certificate is refreshed every 24 hours so when it comes to certificate management with linguity all you have to",
    "start": "927199",
    "end": "932560"
  },
  {
    "text": "do is install it with a root trust anchor an issuer certificate and then the issuer certificate will be used",
    "start": "932560",
    "end": "937839"
  },
  {
    "text": "automatically to create a bunch of leave certificates for your linkedin proxy so this is kind of how all of the magic",
    "start": "937839",
    "end": "943440"
  },
  {
    "text": "works and this is a default installation however you can make linker d as robust",
    "start": "943440",
    "end": "951519"
  },
  {
    "text": "and as powerful as you want for the extensions so i would have added a few more extensions but i sort of ran out of",
    "start": "951519",
    "end": "957519"
  },
  {
    "text": "space here but i wanted to exemplify the two most used extensions i think that we have the viz extension introduces a prometheus",
    "start": "957519",
    "end": "964800"
  },
  {
    "text": "instance a grafana instance and the web dashboard prometheus is going to scrape all the all of the linguity proxies the",
    "start": "964800",
    "end": "970880"
  },
  {
    "text": "proxies themselves proxy the traffic and collect all of the metrics and then we have automatic scrapes well we have",
    "start": "970880",
    "end": "976000"
  },
  {
    "text": "scrapes that ship with a the control plane and the viz extension and prometheus will use it to take all of the metrics",
    "start": "976000",
    "end": "982160"
  },
  {
    "text": "out we also have a tab component and i'm not sure if any of you have used app when you tried out linker d but it's a",
    "start": "982160",
    "end": "987519"
  },
  {
    "text": "really nice tool it lets you basically have a bunch of streaming uh lines from the proxy that",
    "start": "987519",
    "end": "994560"
  },
  {
    "text": "show you how their connections are are being handled and finally we have the tap injector which is kind of like the proxy injector",
    "start": "994560",
    "end": "1001279"
  },
  {
    "text": "but for tap it's pretty self-explanatory next up with the multi-cluster extension we have only two",
    "start": "1001279",
    "end": "1007360"
  },
  {
    "text": "components and that's a multi-cluster gateway that's used to proxy traffic across clusters",
    "start": "1007360",
    "end": "1012399"
  },
  {
    "text": "and we have the service mirror that's going to mirror all of the services into your own cluster linkard's approach to",
    "start": "1012399",
    "end": "1017680"
  },
  {
    "text": "multi-cluster is actually a little bit unique we're not doing what most other projects are doing out there and we",
    "start": "1017680",
    "end": "1023199"
  },
  {
    "text": "wanted to design it in a way more simpler way i can expand on that a little bit later",
    "start": "1023199",
    "end": "1028240"
  },
  {
    "text": "if anyone has any follow-up questions we're finally getting to to my favorite",
    "start": "1028240",
    "end": "1033520"
  },
  {
    "text": "slide uh what's next for linguity uh but before i sort of get into it i want to",
    "start": "1033520",
    "end": "1038798"
  },
  {
    "text": "first tell you about the linguity release process that we have so linkerid currently has two types of",
    "start": "1038799",
    "end": "1044079"
  },
  {
    "text": "releases we have weekly edge releases and this is usually where most of our",
    "start": "1044079",
    "end": "1049679"
  },
  {
    "text": "functionality and the code that we push on a weekly basis makes its way into and then we have stable releases uh once we",
    "start": "1049679",
    "end": "1056000"
  },
  {
    "text": "have kind of completed all of the milestone of a stable release of a stable release yeah and in weekly edge",
    "start": "1056000",
    "end": "1061440"
  },
  {
    "text": "releases we're going to create a release candidate that's going to turn into the actual stable release so without edge",
    "start": "1061440",
    "end": "1067360"
  },
  {
    "text": "releases what we really try is to have new features the you know kind of",
    "start": "1067360",
    "end": "1072480"
  },
  {
    "text": "innovate as fast as we can and get the community input and while i'm mentioning all of this is",
    "start": "1072480",
    "end": "1077679"
  },
  {
    "text": "because while i have here the road map for the stable release i want to talk a little bit about what we've been doing since",
    "start": "1077679",
    "end": "1083039"
  },
  {
    "text": "2.11 came out so since 2.11 came out we released two more stable versions 2.11.1",
    "start": "1083039",
    "end": "1088480"
  },
  {
    "text": "and 2.11.2 and these are focused on back porting some of the issues that we fixed throughout the year in edge releases",
    "start": "1088480",
    "end": "1095360"
  },
  {
    "text": "also we we shipped an apache style logging for the proxy so you can have nginx like",
    "start": "1095360",
    "end": "1102320"
  },
  {
    "text": "access logs uh which is very useful and it was uh kind of requested by the community",
    "start": "1102320",
    "end": "1108640"
  },
  {
    "text": "we're also working on having a log streaming endpoint for the proxy so i i don't know if any of you have had the",
    "start": "1108640",
    "end": "1114160"
  },
  {
    "text": "opportunity to debug the proxy but sometimes you have to change the log level you have to",
    "start": "1114160",
    "end": "1119200"
  },
  {
    "text": "get the logs from your kubernetes pod and we wanted to make that a little bit simpler so we exposed an endpoint to",
    "start": "1119200",
    "end": "1124400"
  },
  {
    "text": "stream all of the logs you can put them into an aggregator you can look at them in real time and do whatever you want",
    "start": "1124400",
    "end": "1129919"
  },
  {
    "text": "and we've also started improving the cni plug-in so i know that the community had some issues with the cni plug-in",
    "start": "1129919",
    "end": "1135679"
  },
  {
    "text": "and we were super quick to fix that and we already started working on it other than that i think we've mostly had",
    "start": "1135679",
    "end": "1142320"
  },
  {
    "text": "a bunch of fixes and a bunch of quality of life improvements that the community was super vocal about and very",
    "start": "1142320",
    "end": "1147679"
  },
  {
    "text": "importantly we released a failover controller for multi-cluster we wanted to have a way for multi-cluster communications to have like an active",
    "start": "1147679",
    "end": "1154480"
  },
  {
    "text": "passive sort of scenario and have a way to fail over and increase the reliability that linkedi brings so all",
    "start": "1154480",
    "end": "1160240"
  },
  {
    "text": "of this has been happening behind the scenes and it releases but then as soon as 2.11 came out we also started working on",
    "start": "1160240",
    "end": "1167440"
  },
  {
    "text": "the next set of features that the community wanted us to build for 2.11.12 we have a very big focus on",
    "start": "1167440",
    "end": "1175600"
  },
  {
    "text": "expanding on server authorizations so right now server authorizations work based on on labels you select the",
    "start": "1175600",
    "end": "1182640"
  },
  {
    "text": "identities or you select networks but this is all happening on labels you select basically a set of pods that you",
    "start": "1182640",
    "end": "1189039"
  },
  {
    "text": "want the authorization to apply to however we wanted to stabilize in a different pattern so we sort of took a",
    "start": "1189039",
    "end": "1195360"
  },
  {
    "text": "hint from the gateway api community and we started doing what's known as policy attachment so policy attachment kind of",
    "start": "1195360",
    "end": "1201679"
  },
  {
    "text": "allows us to target specific objects and extend the api as much as we want without introducing new types um",
    "start": "1201679",
    "end": "1208720"
  },
  {
    "text": "it's super robust we're super excited about it but what it'll let us do is to cover grpc and http verbs and rounds",
    "start": "1208720",
    "end": "1214480"
  },
  {
    "text": "when it comes to server authorizations so we're going to have a much more fleshed out route system that's going to work out way nicely way more nicely with",
    "start": "1214480",
    "end": "1221760"
  },
  {
    "text": "with the current authorization system when it comes to cni i briefly sort of mentioned that we started doing some",
    "start": "1221760",
    "end": "1227520"
  },
  {
    "text": "fixes there we received some reports that the cni plug-in could handle different chaining",
    "start": "1227520",
    "end": "1233280"
  },
  {
    "text": "chaining scenarios a little bit better so we're working on providing better integration and better tooling so uh",
    "start": "1233280",
    "end": "1238480"
  },
  {
    "text": "linker d can work better with other ci plugins so if you want to run linker d with psyllium with calico or anything",
    "start": "1238480",
    "end": "1244559"
  },
  {
    "text": "else out there you can probably do that as of 2.12. finally",
    "start": "1244559",
    "end": "1250480"
  },
  {
    "text": "on the roadmap for 2.13 we're super excited to bring client policies so we've done server policies you can now",
    "start": "1250480",
    "end": "1257120"
  },
  {
    "text": "have zero trust in your cluster but that's not enough a lot of people want jwt authentication",
    "start": "1257120",
    "end": "1262320"
  },
  {
    "text": "and authorization a lot of people want circuit breaking a lot of people want header-based routing they want egress",
    "start": "1262320",
    "end": "1267919"
  },
  {
    "text": "control all of this stuff will come with client-side policies once these are fleshed out all of the other systems",
    "start": "1267919",
    "end": "1273679"
  },
  {
    "text": "will be much easier to implement and much easier to extend also we we heard that people want spiffy",
    "start": "1273679",
    "end": "1280159"
  },
  {
    "text": "support so that's something that's on our roadmap when it comes to integration and also i mentioned at the start there was an",
    "start": "1280159",
    "end": "1286480"
  },
  {
    "text": "asterisk with linkery not working outside of kubernetes we're planning on doing mesh expansion",
    "start": "1286480",
    "end": "1292000"
  },
  {
    "text": "so this is sort of what the roadmap looks like we're super excited to be working on all of this stuff 2.12 is",
    "start": "1292000",
    "end": "1297679"
  },
  {
    "text": "planned for obviously this year and 2014 will follow shortly after",
    "start": "1297679",
    "end": "1303840"
  },
  {
    "text": "if you haven't had a chance to look into a link ready match at the conference uh i know this is already a bit late",
    "start": "1303840",
    "end": "1309600"
  },
  {
    "text": "because it's friday the conference is about to end but i wanted you to be aware in case you wanted to watch some of the recordings",
    "start": "1309600",
    "end": "1316400"
  },
  {
    "text": "so we've done a couple of deep dives into how protocol detection works in linguity um we've also done a little",
    "start": "1316400",
    "end": "1321840"
  },
  {
    "text": "lightning talk on um logging and debugging failures with linkedin telepresence and also we had a couple of",
    "start": "1321840",
    "end": "1328400"
  },
  {
    "text": "really cool case studies made by linkery adopters so for example",
    "start": "1328400",
    "end": "1334240"
  },
  {
    "text": "if any of you have managed to to catch the xbox cloud gaming uh presentation they they basically talk",
    "start": "1334240",
    "end": "1340080"
  },
  {
    "text": "on how linkery helped them secure 22k pods without a lot of effort and stress",
    "start": "1340080",
    "end": "1347840"
  },
  {
    "text": "now we also want to talk a little bit about the community uh so linker d is uh is",
    "start": "1348559",
    "end": "1353760"
  },
  {
    "text": "proud to have a very active community we have a very thriving slack community where people tend to help each other out",
    "start": "1353760",
    "end": "1359200"
  },
  {
    "text": "so i encourage all of you to join chances are if you've joined you've probably met me already so if that's the",
    "start": "1359200",
    "end": "1364320"
  },
  {
    "text": "case hi nice to meet you again in person all of our development is done on github",
    "start": "1364320",
    "end": "1369520"
  },
  {
    "text": "so if you have any questions if you have any concerns you can always reach us on github that's also where we track our",
    "start": "1369520",
    "end": "1374559"
  },
  {
    "text": "milestones for releases so this is very important because a question that we often get about the project is oh when",
    "start": "1374559",
    "end": "1379840"
  },
  {
    "text": "will 2.12 be out and the short answer is well when all of the milestones will be completed and the best way to track this",
    "start": "1379840",
    "end": "1386720"
  },
  {
    "text": "is by going on github and looking at the issues finally we have third party security",
    "start": "1386720",
    "end": "1392960"
  },
  {
    "text": "audits and benchmarks that have been done i can forward some links or you can google them they're pretty easy to come",
    "start": "1392960",
    "end": "1398559"
  },
  {
    "text": "by and there are two more things that i wanted to mention we have a linkard hero program so if you're thinking about",
    "start": "1398559",
    "end": "1404080"
  },
  {
    "text": "contributing this is super important the linker d hero program is our way of celebrating our our contributors because",
    "start": "1404080",
    "end": "1410720"
  },
  {
    "text": "we really appreciate the work that you're doing i myself started as a contributor so i'm very fond of the program if you want to be a linguity",
    "start": "1410720",
    "end": "1417679"
  },
  {
    "text": "hero i i really encourage you to to join up and and put a pr in and then we also have a link or the",
    "start": "1417679",
    "end": "1423760"
  },
  {
    "text": "anchor program the linkery anchor program is uh is there to help people develop their their writing and their presentation",
    "start": "1423760",
    "end": "1430080"
  },
  {
    "text": "skills by sharing their linkery journey",
    "start": "1430080",
    "end": "1434879"
  },
  {
    "text": "and without being said i also wanted to say that the linguity team is looking to grow so if you want to work with me or",
    "start": "1435200",
    "end": "1441039"
  },
  {
    "text": "if you want to work with any of my colleagues we would love to have you so head over to buoyan.io slash i love",
    "start": "1441039",
    "end": "1446720"
  },
  {
    "text": "linkerd and uh yeah let us know",
    "start": "1446720",
    "end": "1452000"
  },
  {
    "text": "that's it for the link ready talk but what i want to do now so hold the collapse for a little bit what i want to",
    "start": "1452000",
    "end": "1457120"
  },
  {
    "text": "do now is take questions because i think it's very important for us to engage a little bit and get to answer anything",
    "start": "1457120",
    "end": "1462159"
  },
  {
    "text": "that i haven't really covered in the presentation so any questions all right there we go",
    "start": "1462159",
    "end": "1469279"
  },
  {
    "text": "i have a mic so i'm just going to try and pass it you get bonus points if you stump me by",
    "start": "1469279",
    "end": "1475520"
  },
  {
    "text": "the way hi thanks for the talk how is the upgrade",
    "start": "1475520",
    "end": "1482640"
  },
  {
    "text": "process between the different versions are there many braking changes",
    "start": "1482640",
    "end": "1487760"
  },
  {
    "text": "that is a very good question so our personal recommendation",
    "start": "1487760",
    "end": "1493279"
  },
  {
    "text": "is to always upgrade one version at a time so for example if you're running linker d 2.8 we wouldn't really",
    "start": "1493279",
    "end": "1499360"
  },
  {
    "text": "recommend that you go straight to 2.11. we recommend that you take it incremental with that being said we",
    "start": "1499360",
    "end": "1504720"
  },
  {
    "text": "always have to guarantee that at least one version we are not going to pretty much implement any breaking changes",
    "start": "1504720",
    "end": "1510960"
  },
  {
    "text": "as a matter of fact i don't think we've had any major breaking changes up until this point maybe once or twice when we change",
    "start": "1510960",
    "end": "1516880"
  },
  {
    "text": "some trd definitions which again drives home the point that too many crds and too much configuration is bad for your",
    "start": "1516880",
    "end": "1523520"
  },
  {
    "text": "system but yeah when it comes to upgrading we generally recommend that you upgrade one version at a time because it's very",
    "start": "1523520",
    "end": "1530320"
  },
  {
    "text": "unlikely that you'll have any braking changes edge releases are a bit of a",
    "start": "1530320",
    "end": "1535360"
  },
  {
    "text": "or a bit of a different thing there we don't really guarantee that edge releases are not going to",
    "start": "1535360",
    "end": "1540880"
  },
  {
    "text": "contain breaking changes but that's life when you live on the edge i guess",
    "start": "1540880",
    "end": "1546400"
  },
  {
    "text": "i was about to ask the same question pretty much so now i'm gonna expand on it can we upgrade",
    "start": "1547600",
    "end": "1554799"
  },
  {
    "text": "on the fly on the go can we update our best service without yeah",
    "start": "1554799",
    "end": "1560960"
  },
  {
    "text": "yeah so that's again a very good question um you can upgrade on the go without having",
    "start": "1560960",
    "end": "1566640"
  },
  {
    "text": "any downtime for your own services so naturally if the liquidity control plane has to be upgraded the pods have",
    "start": "1566640",
    "end": "1572640"
  },
  {
    "text": "to be rerolled so you're going to have a bit of downtime there depending on what the deployment strategy is if you run",
    "start": "1572640",
    "end": "1577919"
  },
  {
    "text": "linkery in ha mode which is what we recommend people do in production systems they're not going to have any downtime with linkedin at all you're",
    "start": "1577919",
    "end": "1584480"
  },
  {
    "text": "also not going to have any down time with your services because once they acquire their their target through service",
    "start": "1584480",
    "end": "1590720"
  },
  {
    "text": "discovery the connections are going to be open for a very long time so assuming the upgrade process is is a success and",
    "start": "1590720",
    "end": "1597360"
  },
  {
    "text": "in most cases it is you're not going to experience any downtime as long as you run in aj mode",
    "start": "1597360",
    "end": "1604240"
  },
  {
    "text": "any other questions yeah there we go",
    "start": "1605039",
    "end": "1610919"
  },
  {
    "text": "hi um as you said that ellen kerdi works by",
    "start": "1614960",
    "end": "1620480"
  },
  {
    "text": "injecting a sidecar pod actually a container in your boat",
    "start": "1620480",
    "end": "1625679"
  },
  {
    "text": "is there any advice or best practice to work within a github scenario where",
    "start": "1625679",
    "end": "1632000"
  },
  {
    "text": "there's a tool that is constantly trying to set the state of the cluster to a certain",
    "start": "1632000",
    "end": "1638399"
  },
  {
    "text": "yeah that's that's a very good question so linkery actually integrates very well with flux and argo cd we have a bunch of",
    "start": "1638399",
    "end": "1644080"
  },
  {
    "text": "guides on how to do that uh we're we're fans of get ops and we understand that deployment strategies can be a bit",
    "start": "1644080",
    "end": "1649679"
  },
  {
    "text": "complicated especially when you manage a big platform off the top of my head i don't have any",
    "start": "1649679",
    "end": "1655360"
  },
  {
    "text": "specific advice to give but we do have guides that are meant to help help guide you for the github's get up",
    "start": "1655360",
    "end": "1661360"
  },
  {
    "text": "sort of workflow but when it comes to proxy injection one of the things that i do",
    "start": "1661360",
    "end": "1666640"
  },
  {
    "text": "want to mention is that it's relatively simple all you have to do is put an annotation on your workloads so if",
    "start": "1666640",
    "end": "1672320"
  },
  {
    "text": "you're using a deployment that the annotation would go on the pod template and that's responsible for actually telling the control plane to inject the",
    "start": "1672320",
    "end": "1679679"
  },
  {
    "text": "sidecar proxy so there isn't really a lot of configuration that you have to do and there's nothing that would kind of",
    "start": "1679679",
    "end": "1685360"
  },
  {
    "text": "set your uh set your git ops flow apart if that",
    "start": "1685360",
    "end": "1690559"
  },
  {
    "text": "makes sense cool thanks yeah no problem good question",
    "start": "1690559",
    "end": "1697000"
  },
  {
    "text": "i have a i have a reverse question which is i just want to add a little color to the upgrade",
    "start": "1703120",
    "end": "1708480"
  },
  {
    "text": "thing so the the linker d data plane can withstand loss of connectivity to",
    "start": "1708480",
    "end": "1714480"
  },
  {
    "text": "the control plane so the proxies will continue to operate they won't get service discovery updates so in single",
    "start": "1714480",
    "end": "1720080"
  },
  {
    "text": "in single uh control plane mode you actually can upgrade the control plane without having",
    "start": "1720080",
    "end": "1726720"
  },
  {
    "text": "a loss or without having downtime of your application as long as you're not launching new pods",
    "start": "1726720",
    "end": "1731760"
  },
  {
    "text": "during that process because if you launch a new pod the proxy injector won't be able to add the proxy you it's so you can do it and if you",
    "start": "1731760",
    "end": "1739679"
  },
  {
    "text": "have control over the cluster it's probably fine ha mode of course i would recommend for production for",
    "start": "1739679",
    "end": "1744960"
  },
  {
    "text": "like a variety of reasons once you've upgraded the control plane the data plane can typically remain at",
    "start": "1744960",
    "end": "1750159"
  },
  {
    "text": "the previous version so we'll do you know we'll allow one version one major version of",
    "start": "1750159",
    "end": "1755200"
  },
  {
    "text": "data plane control plane compatibility and then you can you can decide then to like",
    "start": "1755200",
    "end": "1760240"
  },
  {
    "text": "upgrade the data plane yourself immediately or you can be lazy about it and just let it happen naturally as soon",
    "start": "1760240",
    "end": "1765440"
  },
  {
    "text": "as you start getting divergence between control plane data plane of more than one major version",
    "start": "1765440",
    "end": "1770960"
  },
  {
    "text": "no guarantees so you kind of have to keep an eye on on the version mismatch if you do that",
    "start": "1770960",
    "end": "1777200"
  },
  {
    "text": "yeah that's right thank you",
    "start": "1777200",
    "end": "1781840"
  },
  {
    "text": "hi uh firstly absolutely amazing really great stuff uh really well presented as",
    "start": "1787679",
    "end": "1792960"
  },
  {
    "text": "well a lot of questions about udp do you currently have any known issues with udp specifically things like http",
    "start": "1792960",
    "end": "1799840"
  },
  {
    "text": "dtls yeah so that's a good question actually linkrd does not support udp",
    "start": "1799840",
    "end": "1805760"
  },
  {
    "text": "and it's sort of by design we're mostly focused on pcp protocols so linker d as a service mesh",
    "start": "1805760",
    "end": "1811840"
  },
  {
    "text": "and linker these proxy works mainly on top of tcp thanks",
    "start": "1811840",
    "end": "1817278"
  },
  {
    "text": "any other questions thanks",
    "start": "1819440",
    "end": "1824720"
  },
  {
    "text": "very useful um i heard someone saying earlier today that um using",
    "start": "1824720",
    "end": "1831440"
  },
  {
    "text": "ebpf or like as a service mesh has the potential to be faster than a sidecar",
    "start": "1831440",
    "end": "1837120"
  },
  {
    "text": "proxy um i don't know i don't sound like an aggressive question or something like i",
    "start": "1837120",
    "end": "1842240"
  },
  {
    "text": "was uh curious like if you have any thoughts on that if it's easy to i don't know support that as well maybe you",
    "start": "1842240",
    "end": "1847840"
  },
  {
    "text": "disagree or i don't know i just want to learn it's a it's a very good question and actually when you picked up the mic i was running am i going to finally get",
    "start": "1847840",
    "end": "1854399"
  },
  {
    "text": "an evp question uh because it's i i haven't had it yet um it's a very good question and i'm",
    "start": "1854399",
    "end": "1861679"
  },
  {
    "text": "going to tackle it into two separate answers so first of all uh the ebpf mode of running a service mesh when you run",
    "start": "1861679",
    "end": "1868000"
  },
  {
    "text": "on a per host deployment sort of a demon set that's what we've tried with linker d1 so our first approach with linker d1",
    "start": "1868000",
    "end": "1875039"
  },
  {
    "text": "was to have a daemon set that runs on a host and it was very hard for us to scale down so that was one of the first",
    "start": "1875039",
    "end": "1882480"
  },
  {
    "text": "points that i've noticed the first version of linkery obviously predates me i only started working there",
    "start": "1882480",
    "end": "1888720"
  },
  {
    "text": "working on a project full time two and a half years ago but another thing that i've noticed with it in my my research",
    "start": "1888720",
    "end": "1893760"
  },
  {
    "text": "was that it didn't really let us have a good separation of processes so",
    "start": "1893760",
    "end": "1899200"
  },
  {
    "text": "when we run as a sidecar container we run next to the container and that gives us good isolation between the processes",
    "start": "1899200",
    "end": "1904399"
  },
  {
    "text": "when you run on the host that's not entirely possible so that's something to keep in mind and finally one of the",
    "start": "1904399",
    "end": "1910399"
  },
  {
    "text": "reasons why we wanted to run the sidecar container and why we why we went with it for linker d2 is that it allowed us to",
    "start": "1910399",
    "end": "1916720"
  },
  {
    "text": "scope identity to the lowest sort of unit of work in the cluster and that's the pod the",
    "start": "1916720",
    "end": "1922799"
  },
  {
    "text": "the only way to really achieve zero trust in kubernetes is to tie identity to the lowest unit of work",
    "start": "1922799",
    "end": "1929840"
  },
  {
    "text": "and i think that would be much more difficult to do when you run per host so the kind of tldr here is that we we",
    "start": "1929840",
    "end": "1937440"
  },
  {
    "text": "tried it before it didn't really work out and we stuck with the sidecar container for good reasons it allows us",
    "start": "1937440",
    "end": "1942720"
  },
  {
    "text": "to scale better it allows us to achieve a better separation and it allows us to",
    "start": "1942720",
    "end": "1948000"
  },
  {
    "text": "do zero trust so i think i think for now it's the it's the better model to go with for sure",
    "start": "1948000",
    "end": "1953600"
  },
  {
    "text": "and then when it comes to ebpf a lot of the bppf technology used right now is proprietary so one use of ebpf the",
    "start": "1953600",
    "end": "1960640"
  },
  {
    "text": "linker for linguity for example would be in iptables but the kernel modules for ebpf haven't really",
    "start": "1960640",
    "end": "1966640"
  },
  {
    "text": "been contributed or developed enough for us to use it as a backend for iptables",
    "start": "1966640",
    "end": "1972720"
  },
  {
    "text": "we're going to look into it when when the time will come and when it will be present as a module in the kernel",
    "start": "1972720",
    "end": "1978320"
  },
  {
    "text": "but until then um we're we're going to stick with the ip tables implementation and when it comes",
    "start": "1978320",
    "end": "1983840"
  },
  {
    "text": "to it another thing is that you know when you run in kernel space you're sort of inviting trouble so that's also something to keep in mind good question",
    "start": "1983840",
    "end": "1990640"
  },
  {
    "text": "though thank you",
    "start": "1990640",
    "end": "1993759"
  },
  {
    "text": "sorry mate i have another reverse question about ebpf which is um",
    "start": "2000559",
    "end": "2008159"
  },
  {
    "text": "yeah like matteo said there's kind of two components there's like ebpf you know uh what can i",
    "start": "2008480",
    "end": "2013600"
  },
  {
    "text": "what can i do at layer four to like speed up you know how the kernel is processing stuff and you kind of get",
    "start": "2013600",
    "end": "2019120"
  },
  {
    "text": "that with psyllium you know as a cni layer and that works fine for the most part with linker d there's also the idea of the ebpf",
    "start": "2019120",
    "end": "2026080"
  },
  {
    "text": "service mesh and what happens there is they have evpf in the kernel but they also have",
    "start": "2026080",
    "end": "2031519"
  },
  {
    "text": "a single envoy proxy per host you know that's a multi-tenant that all traffic",
    "start": "2031519",
    "end": "2037600"
  },
  {
    "text": "goes through and that's what i really don't like about that model because operationally you're in",
    "start": "2037600",
    "end": "2043519"
  },
  {
    "text": "you puts you in a very difficult spot you've got one point of failure for pods on the node you've got one",
    "start": "2043519",
    "end": "2049358"
  },
  {
    "text": "place where if something goes wrong a random selection of pods from your services start going around that was",
    "start": "2049359",
    "end": "2054720"
  },
  {
    "text": "what we saw with um with linkardi one.x is that any kind of like operational",
    "start": "2054720",
    "end": "2060398"
  },
  {
    "text": "you know task you had to do on a per node basis when the rest of your architecture set up like service level",
    "start": "2060399",
    "end": "2065839"
  },
  {
    "text": "gets very very difficult and envoy is also i've got a lot of opinions",
    "start": "2065839",
    "end": "2072320"
  },
  {
    "text": "about envoy but one it's not it's not designed for this kind of contested multi-tenancy right it's",
    "start": "2072320",
    "end": "2078560"
  },
  {
    "text": "just not it's not and designing it designing any software for contested multi-tenancy is really really hard",
    "start": "2078560",
    "end": "2084720"
  },
  {
    "text": "it would be possible to rewrite envoy to do that but it would be very non-trivial",
    "start": "2084720",
    "end": "2091679"
  },
  {
    "text": "and it would be you know i almost don't know what the point would be since we already have",
    "start": "2091679",
    "end": "2097200"
  },
  {
    "text": "this very nice model you know involving containers and isolation voc groups and stuff like that so",
    "start": "2097200",
    "end": "2104079"
  },
  {
    "text": "you should try it you know i welcome you to try it but i don't think it's the right model and i i think side cars are actually really nice",
    "start": "2104079",
    "end": "2109920"
  },
  {
    "text": "if anyone was that service meshcon i was on a you know i talked about this a little bit at the panel at the end i think sidecars are actually a really",
    "start": "2109920",
    "end": "2115280"
  },
  {
    "text": "really nice model if you can make the side cars fast if you can make them small you have really nice operational semantics you have really nice security",
    "start": "2115280",
    "end": "2121760"
  },
  {
    "text": "semantics and there are problems with side cars and there's stuff we can do to improve them in kubernetes certainly",
    "start": "2121760",
    "end": "2127680"
  },
  {
    "text": "when you get into like pod container ordering and stuff like that it has an operational model as a",
    "start": "2127680",
    "end": "2134000"
  },
  {
    "text": "security model they're really really nice so we're gonna stick with it sorry for the long",
    "start": "2134000",
    "end": "2139440"
  },
  {
    "text": "reverse answer of course all right well thank you all that's time now so if you have",
    "start": "2139440",
    "end": "2144960"
  },
  {
    "text": "more questions you know where to reach me um thank you so much for joining and yeah give linkery a try",
    "start": "2144960",
    "end": "2152759"
  },
  {
    "text": "you",
    "start": "2158000",
    "end": "2160079"
  }
]