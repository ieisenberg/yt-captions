[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "hi everyone I'm going to talk to you about a patchy beam that this big data",
    "start": "359",
    "end": "5520"
  },
  {
    "text": "processing framework and the story of how we change it to make it portable",
    "start": "5520",
    "end": "12320"
  },
  {
    "text": "this talk has two aspects one aspect is to introduce you into Apache be in the path shipping model and the second part",
    "start": "12320",
    "end": "19619"
  },
  {
    "text": "is discussing the technical challenges of migrating the current infrastructure",
    "start": "19619",
    "end": "24720"
  },
  {
    "text": "we have into a multi language infrastructure with G RPC so I am is",
    "start": "24720",
    "end": "32219"
  },
  {
    "text": "mile media I am s4 engineer that works up talent in the project active as",
    "start": "32219",
    "end": "38550"
  },
  {
    "text": "committed and as part of the PMC in Apache beam and I also an Apache",
    "start": "38550",
    "end": "44100"
  },
  {
    "text": "Software Foundation member so I'm a little bit like in the wrong place because this is cloud native confirm add well we have to be friends all of us",
    "start": "44100",
    "end": "50510"
  },
  {
    "text": "this is open source anyway so I work for talent that this this company who",
    "start": "50510",
    "end": "56039"
  },
  {
    "text": "produces that integration software and in open source in part and I mentioned",
    "start": "56039",
    "end": "62820"
  },
  {
    "text": "my company because they were kind to send me here on also because what we're creating new products and we are hiring",
    "start": "62820",
    "end": "69240"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "actively so if anyone of you is interested in these kind of subjects around be more big data or DevOps also",
    "start": "69240",
    "end": "76549"
  },
  {
    "text": "please join me afterwards or send me a message or anything we are based in France to have to relocate maybe okay",
    "start": "76549",
    "end": "84450"
  },
  {
    "text": "so first we're going to introduce Apache beam and patchy beam is for me a really",
    "start": "84450",
    "end": "90780"
  },
  {
    "start": "89000",
    "end": "89000"
  },
  {
    "text": "exciting project because it's the conjunction of the two lines of the volume and of big data",
    "start": "90780",
    "end": "95939"
  },
  {
    "text": "in the one line Google publish all these papers like the MapReduce paper like the BigTable paper and people in the",
    "start": "95939",
    "end": "103770"
  },
  {
    "text": "community from different companies started to create implementations like had to patch base etc and also the",
    "start": "103770",
    "end": "110340"
  },
  {
    "text": "community bring new ideas like expert deep for example with a nice API or with",
    "start": "110340",
    "end": "116009"
  },
  {
    "text": "in-memory processing and others ideas so there was like two parallel worlds where",
    "start": "116009",
    "end": "121469"
  },
  {
    "text": "people who were not at Google were always looking what Google did but this change once Google submitted this their",
    "start": "121469",
    "end": "130470"
  },
  {
    "text": "SDK for data flow into the serve our foundation so this is for me excitement this is the point of union of",
    "start": "130470",
    "end": "137040"
  },
  {
    "text": "these two words and beam pretends to be the unified programming model for Big",
    "start": "137040",
    "end": "144420"
  },
  {
    "start": "140000",
    "end": "140000"
  },
  {
    "text": "Data and two aspects that are really important is that we are we care about efficiency but we can also call",
    "start": "144420",
    "end": "150720"
  },
  {
    "text": "portability and when we discuss about unified is in the sense of that we can",
    "start": "150720",
    "end": "156120"
  },
  {
    "text": "do batch and stream processing with the same framework this means that we have",
    "start": "156120",
    "end": "161690"
  },
  {
    "start": "158000",
    "end": "158000"
  },
  {
    "text": "we don't need a special api's for both words and how do we accomplish this with",
    "start": "161690",
    "end": "167970"
  },
  {
    "text": "some special elements that I'm going to present immediately and that as well",
    "start": "167970",
    "end": "174769"
  },
  {
    "text": "Ansari than the runs for some questions I will see later on so the first the",
    "start": "174769",
    "end": "180360"
  },
  {
    "text": "first important concept to see how we achieve this is to understand the",
    "start": "180360",
    "end": "185580"
  },
  {
    "start": "181000",
    "end": "181000"
  },
  {
    "text": "separation of n time and processing time when we talk about event time is the time this won't even happen let's say",
    "start": "185580",
    "end": "191640"
  },
  {
    "text": "that you have I don't know playing AB game your telephone or listening to Spotify so when this user interacted he",
    "start": "191640",
    "end": "197940"
  },
  {
    "text": "created an event and d7 has a time associated to it that is normally not the same time at which we are processing",
    "start": "197940",
    "end": "204060"
  },
  {
    "text": "the data this is the processing time normally it arrives later so you can see this plot that we have these events that",
    "start": "204060",
    "end": "210900"
  },
  {
    "text": "are arriving and in an ideal world we will have data arriving in time and this diagonal line but most reality is not",
    "start": "210900",
    "end": "218280"
  },
  {
    "text": "like that we have all these narrow delays things are transmitted food and even we can have data and because",
    "start": "218280",
    "end": "224220"
  },
  {
    "text": "for example somebody lost the connection to the internet so this this event arrives once he takes gets the",
    "start": "224220",
    "end": "229440"
  },
  {
    "text": "connection back so this is the case that for normal data but this is the case of death arrives in return late so beam two",
    "start": "229440",
    "end": "240750"
  },
  {
    "text": "to be able to compute all this data in a precise way but also in a fast way I",
    "start": "240750",
    "end": "248489"
  },
  {
    "text": "mean with low latency ask for questions these four questions that what resource",
    "start": "248489",
    "end": "254670"
  },
  {
    "text": "are calculated wherein Aventine are we calculating these bristles when are we",
    "start": "254670",
    "end": "260400"
  },
  {
    "text": "in processing time are we computing materialize in this resource and how we refine the results okay this",
    "start": "260400",
    "end": "266290"
  },
  {
    "text": "sounds a little bit abstract but with so many missions is going to be more clear so let's see if the first question is",
    "start": "266290",
    "end": "273010"
  },
  {
    "start": "270000",
    "end": "270000"
  },
  {
    "text": "what are we doing so in this case we are just going to sum all these numbers that we saw in the plot so this happens with",
    "start": "273010",
    "end": "281140"
  },
  {
    "text": "the progress of time that when we are processing and we are just some in data but when we arrive to the top we compute",
    "start": "281140",
    "end": "287170"
  },
  {
    "text": "the data let's not forget that this this computation happens when we decide that",
    "start": "287170",
    "end": "294220"
  },
  {
    "text": "it happens and if we have an infinite source of data we have to say when and what are we going to include in this",
    "start": "294220",
    "end": "300580"
  },
  {
    "text": "computation so this is the classical batch case this is MapReduce for all of",
    "start": "300580",
    "end": "305950"
  },
  {
    "text": "those of you who know but when we have this streaming case we need to define",
    "start": "305950",
    "end": "312490"
  },
  {
    "start": "309000",
    "end": "309000"
  },
  {
    "text": "what the interval of time we care about and we can do this with Windows we can",
    "start": "312490",
    "end": "318220"
  },
  {
    "text": "define a window that allows us to for example divide the events into chunks",
    "start": "318220",
    "end": "323560"
  },
  {
    "text": "let's say what what what was the most listeners song in between 10:00 and 11:00 today for example so this event",
    "start": "323560",
    "end": "330700"
  },
  {
    "text": "times get grouped this does get group in time into Windows and then we computed",
    "start": "330700",
    "end": "337540"
  },
  {
    "text": "later with this why this because we need to have answers faster we cannot wait all the life for all the events to",
    "start": "337540",
    "end": "343990"
  },
  {
    "text": "arrive so we do this but again we have a say again the same problem when we",
    "start": "343990",
    "end": "349030"
  },
  {
    "text": "trigger the computation of this data when we do the accumulation we have to decide and the way we decide this is by",
    "start": "349030",
    "end": "355900"
  },
  {
    "text": "using triggers and triggers and in this case we were going to discuss a trigger",
    "start": "355900",
    "end": "361900"
  },
  {
    "start": "358000",
    "end": "358000"
  },
  {
    "text": "that is the watermark do you remember the straight line I mentioned before this straight line is the ideal case but",
    "start": "361900",
    "end": "368320"
  },
  {
    "text": "the watermark is is it in the real life is not so clean it could be on",
    "start": "368320",
    "end": "373450"
  },
  {
    "text": "and this deadline in in the indicates that I won't receive more data so this",
    "start": "373450",
    "end": "378460"
  },
  {
    "text": "in the beam connectors send this this line to us this data of the watermark",
    "start": "378460",
    "end": "384040"
  },
  {
    "text": "and then we decide to cut and compute once the water masses is complete but as",
    "start": "384040",
    "end": "390220"
  },
  {
    "text": "you can see in this graph the first even arrive late this red one and we lost",
    "start": "390220",
    "end": "396220"
  },
  {
    "text": "accuracy to compute faster have low latency well we lost a little bit of accuracy and",
    "start": "396220",
    "end": "401810"
  },
  {
    "text": "this is how we refine the model then the last question so we can tell things like in this code I forgot to say that the",
    "start": "401810",
    "end": "408530"
  },
  {
    "start": "405000",
    "end": "405000"
  },
  {
    "text": "top level is Java low-level spite on bottom sorry in the in the graph and the",
    "start": "408530",
    "end": "414530"
  },
  {
    "text": "way we compute this is with what we can tell the system ok wait one more minute",
    "start": "414530",
    "end": "420380"
  },
  {
    "text": "of processing time and bring all the extra data that arrived in this minute or you can also count how many elements",
    "start": "420380",
    "end": "428090"
  },
  {
    "text": "arrive afterwards that are in this window and also compute we accumulate those so this is a little bit more",
    "start": "428090",
    "end": "435410"
  },
  {
    "text": "tricky to read graph but the idea here is that we can recover this this later and have a more accurate result thus",
    "start": "435410",
    "end": "442520"
  },
  {
    "text": "that's the wall beam model we do all of these by by answering these four",
    "start": "442520",
    "end": "447650"
  },
  {
    "start": "445000",
    "end": "445000"
  },
  {
    "text": "questions and we can model all these processing scenarios so we have",
    "start": "447650",
    "end": "454400"
  },
  {
    "text": "classical bash like MapReduce window batching and streaming a stamina accumulation and but in the end what we",
    "start": "454400",
    "end": "460910"
  },
  {
    "start": "459000",
    "end": "459000"
  },
  {
    "text": "did with all this code and pipeline code was construct a pipeline a pipeline is",
    "start": "460910",
    "end": "466010"
  },
  {
    "text": "that is a graph of transformations that we go in steps from data that comes from",
    "start": "466010",
    "end": "471470"
  },
  {
    "text": "a source for example let's say Kafka or HBase or something like that into the data that goes out somewhere",
    "start": "471470",
    "end": "477950"
  },
  {
    "text": "so all these color box are transformations and and we call P collections PP turns from those and P",
    "start": "477950",
    "end": "484370"
  },
  {
    "text": "collections the lines that go out of of these boxes this is what kind of",
    "start": "484370",
    "end": "490099"
  },
  {
    "start": "490000",
    "end": "490000"
  },
  {
    "text": "transformations are we talking about what the classical maps transformations that we call paru in beam we can",
    "start": "490099",
    "end": "496820"
  },
  {
    "text": "transform pill element wise so just apply in one function and that's it we have group by key and reduction like",
    "start": "496820",
    "end": "503240"
  },
  {
    "text": "transformations that are like counts and psalms and chorus that correspond to reduce in MapReduce and we have all",
    "start": "503240",
    "end": "510590"
  },
  {
    "text": "these windowing and triggering ones that cover the the concepts that we just quickly view to have more precise",
    "start": "510590",
    "end": "518779"
  },
  {
    "text": "computing computation so in the end Apache beam is the the has three kind of",
    "start": "518779",
    "end": "525980"
  },
  {
    "start": "520000",
    "end": "520000"
  },
  {
    "text": "users the end users who write their programs we have SDK writers who want to create",
    "start": "525980",
    "end": "531290"
  },
  {
    "text": "new SDK that implements the model of Apache beam so all these concepts of doing those triggers etc and we have",
    "start": "531290",
    "end": "537949"
  },
  {
    "text": "runners who are the system that execute this this graph is interesting because you can see that Java Java and Python",
    "start": "537949",
    "end": "544670"
  },
  {
    "text": "can be language that are used and and running one in some of these different systems like Apache spark or flink or",
    "start": "544670",
    "end": "551209"
  },
  {
    "text": "Google dataflow and so today we have all",
    "start": "551209",
    "end": "557240"
  },
  {
    "text": "these runners that are implemented or are in progress at least you can see that we cover most of the most popular",
    "start": "557240",
    "end": "563480"
  },
  {
    "text": "ones we have in the bottom d2 cloud native ones that are the Google one that",
    "start": "563480",
    "end": "569779"
  },
  {
    "text": "you don't care about infrastructure at all you just send your job and it executes and I and IV streams one but",
    "start": "569779",
    "end": "576319"
  },
  {
    "text": "the world there are also some that are working progress but there is something that maybe we use them thing really well",
    "start": "576319",
    "end": "583819"
  },
  {
    "text": "we saw this diagram is that all these are Java based all these executing the",
    "start": "583819",
    "end": "589670"
  },
  {
    "text": "java virtual machine so the normal question that after",
    "start": "589670",
    "end": "595190"
  },
  {
    "text": "someone understand the the presentation a little bit more is ok so I have a Python pipeline at pipeline and I want",
    "start": "595190",
    "end": "602089"
  },
  {
    "text": "to execute it with this part owner what do I do I translate this into PI spark say no ok can I execute Python or not",
    "start": "602089",
    "end": "611720"
  },
  {
    "text": "you have a base runner mm-hmm and the third question is no can I use tensorflow this is a fan favorite of the",
    "start": "611720",
    "end": "619730"
  },
  {
    "text": "last year and run it with a Java pipeline no and then last one is ok the",
    "start": "619730",
    "end": "627380"
  },
  {
    "text": "Python SDK doesn't have a connector for Kafka can I use the one that is in Java",
    "start": "627380",
    "end": "632600"
  },
  {
    "text": "to connect and the answer to all of those is definitely no so let's say that",
    "start": "632600",
    "end": "638540"
  },
  {
    "text": "look this diagram that we show before it was nice but in reality today we are",
    "start": "638540",
    "end": "643670"
  },
  {
    "text": "living in this world so the only way to execute Python in Apache beam is to go straight to dataflow so if you have an",
    "start": "643670",
    "end": "651110"
  },
  {
    "text": "on premise thing with the spark or in Hadoop you cannot you cannot run it so",
    "start": "651110",
    "end": "657920"
  },
  {
    "text": "this is the this is a big problem because this is like half of the model that is missing of the idea at least of",
    "start": "657920",
    "end": "663829"
  },
  {
    "text": "beam and this is what the portability IEP is for so the portability API is is a set",
    "start": "663829",
    "end": "670740"
  },
  {
    "text": "of services and contracts to be able to do this but first let's see what we do today so this is how we translate how a",
    "start": "670740",
    "end": "679020"
  },
  {
    "start": "675000",
    "end": "675000"
  },
  {
    "text": "runner translates a by a pipeline written in beam so the user just takes the SDK it was the code sends the",
    "start": "679020",
    "end": "685620"
  },
  {
    "text": "pipeline that is Java code it's executed in it passes by a runner that translates this thing into a native job that you",
    "start": "685620",
    "end": "691740"
  },
  {
    "text": "see inviolate there and this nut job gets distributed by the arm system let's",
    "start": "691740",
    "end": "696810"
  },
  {
    "text": "a spark or fling into the different master and workers and in the end the",
    "start": "696810",
    "end": "702480"
  },
  {
    "text": "the functions that we applied this part do functions as this Maps or this combiner the or reducers get executed",
    "start": "702480",
    "end": "709050"
  },
  {
    "text": "the user-defined functions that get executed in a in a worker in the clusters now so this is easy to do in",
    "start": "709050",
    "end": "716940"
  },
  {
    "text": "Java because well we can play a lot with Java we can play with reflection we can extract that compose it but if we think",
    "start": "716940",
    "end": "724680"
  },
  {
    "text": "about Python then we'd have to think in a different ways like that so what was",
    "start": "724680",
    "end": "732870"
  },
  {
    "start": "727000",
    "end": "727000"
  },
  {
    "text": "the real problem we were achieving fighting for we are trying to execute code in any language never run it but we",
    "start": "732870",
    "end": "740400"
  },
  {
    "text": "need we have some constraints we need to still support the code that exists we are not going to change the user part we",
    "start": "740400",
    "end": "747210"
  },
  {
    "text": "need to provision an executed respected environment I mean if the person is going to write Python probably he would",
    "start": "747210",
    "end": "752430"
  },
  {
    "text": "like to have all the Python libraries that he has for his project we need to",
    "start": "752430",
    "end": "758700"
  },
  {
    "text": "be performin have low overhead for this and we have to support both multiple",
    "start": "758700",
    "end": "763860"
  },
  {
    "text": "languages of course because every SDK can be in a different language and we want something easy to evolve so an",
    "start": "763860",
    "end": "770130"
  },
  {
    "text": "initial idea could be just to take this initial image the of the on top of the of the runner and add a process in the",
    "start": "770130",
    "end": "777300"
  },
  {
    "text": "side to run Python like this for couple at operating system thread and I roam",
    "start": "777300",
    "end": "782490"
  },
  {
    "text": "there but then you have all the isolation problems so the natural ideas to expand this into a docker container",
    "start": "782490",
    "end": "788610"
  },
  {
    "text": "so that's what what this whole idea is about we had a container so we can have now the user code really into this",
    "start": "788610",
    "end": "796110"
  },
  {
    "text": "container so then what when we had this diagram of",
    "start": "796110",
    "end": "801780"
  },
  {
    "text": "the transformation you can see that these two transforms now if they are written in Python they will become this",
    "start": "801780",
    "end": "809250"
  },
  {
    "text": "they will become a call of G RPC but I want to talk about this later that then executing the worker the Python code and",
    "start": "809250",
    "end": "815790"
  },
  {
    "text": "L get is get this out so how can we do this we can do this with three elements",
    "start": "815790",
    "end": "822060"
  },
  {
    "text": "that we call the runner API this is your baby I at the F and API so the runner",
    "start": "822060",
    "end": "827670"
  },
  {
    "text": "API is a way to represent all those concepts I discussed at the beginning all these B transforms of these",
    "start": "827670",
    "end": "834780"
  },
  {
    "text": "windowing triggers all of this we have struct it then then we have an inner present in a misrepresentation way that",
    "start": "834780",
    "end": "841380"
  },
  {
    "text": "is going to be protocol buffers then we have the job API that is the way we submit the jobs to the system and we see",
    "start": "841380",
    "end": "848910"
  },
  {
    "text": "their progress or or if we can cancel them also and there is the FN api that the first set of protocols between the",
    "start": "848910",
    "end": "855570"
  },
  {
    "text": "the runner and sdk harness that is the docker container so this will serve to",
    "start": "855570",
    "end": "864930"
  },
  {
    "text": "use your PC for this why well the classical characteristics of CRPC is a",
    "start": "864930",
    "end": "870330"
  },
  {
    "text": "it's an efficient serialization format the uses as an efficient written format this protocol buffers is for multiple",
    "start": "870330",
    "end": "876870"
  },
  {
    "text": "languages and at least it supported the two we wanted Java and Python it has a",
    "start": "876870",
    "end": "882240"
  },
  {
    "text": "really simple service definition and if you haven't seen G RPC before I will show you and I am pretty sure that you",
    "start": "882240",
    "end": "887280"
  },
  {
    "text": "are going to understand the ideas quite quickly and has pretty decent network performance uses multiplexing for HTTP 2",
    "start": "887280",
    "end": "894720"
  },
  {
    "text": "so we are going to be able to mix different things in the main same channel and it has rich communication",
    "start": "894720",
    "end": "901110"
  },
  {
    "text": "models like subscriptions and bi-directional streaming so this this is",
    "start": "901110",
    "end": "906270"
  },
  {
    "start": "906000",
    "end": "906000"
  },
  {
    "text": "why this is the new architecture of how we do things now is slightly more complex now we added some boxes so we",
    "start": "906270",
    "end": "914610"
  },
  {
    "text": "added the job server that allows us to control the job as I said we added this",
    "start": "914610",
    "end": "920940"
  },
  {
    "text": "artifact station that I will explain in detail some moments and we added also the set of services there in the top in",
    "start": "920940",
    "end": "927570"
  },
  {
    "text": "the bottom sorry that allow us to control the execution we are going",
    "start": "927570",
    "end": "932819"
  },
  {
    "text": "to detail all of this okay so first we before we send the pipeline in Java code",
    "start": "932819",
    "end": "938639"
  },
  {
    "start": "935000",
    "end": "935000"
  },
  {
    "text": "now we transform this pipeline into this abstract representation and protobuf",
    "start": "938639",
    "end": "944250"
  },
  {
    "text": "this is the first step but the user still sees this name Java code or Python code then you see this is an example of",
    "start": "944250",
    "end": "952709"
  },
  {
    "text": "the definition in protocol buffers as you can see a polonaise is a set of",
    "start": "952709",
    "end": "958259"
  },
  {
    "text": "components and each component component has some of the things that these functions do you can see concepts that I",
    "start": "958259",
    "end": "964019"
  },
  {
    "text": "mentioned like Purdue would combine another the lighteners speak about but",
    "start": "964019",
    "end": "969180"
  },
  {
    "text": "you get the idea and there are all these hobbies structures data structures inside there is the job server and the",
    "start": "969180",
    "end": "977160"
  },
  {
    "start": "975000",
    "end": "975000"
  },
  {
    "text": "job server in the diagram has a service and this is a RPC service this is copy",
    "start": "977160",
    "end": "983730"
  },
  {
    "text": "pasted and even without makeup and as you can see it's quite readable you can",
    "start": "983730",
    "end": "988800"
  },
  {
    "text": "immediately call a prepaid a job or run get the state of the job its progress",
    "start": "988800",
    "end": "993839"
  },
  {
    "text": "and etc also and this is a very interesting use of ER PC you can get a",
    "start": "993839",
    "end": "1000740"
  },
  {
    "text": "stream of result so you can somehow somehow kind of subscribe to changes in",
    "start": "1000740",
    "end": "1007279"
  },
  {
    "text": "the state or messages that are important for us to track and when we say we say",
    "start": "1007279",
    "end": "1013189"
  },
  {
    "text": "use subscribe all is the runner who is forking this execution so it's going to subscribe to see what's going on all the",
    "start": "1013189",
    "end": "1019040"
  },
  {
    "text": "time we are trying to solve this line of between both okay so now this these are",
    "start": "1019040",
    "end": "1024860"
  },
  {
    "text": "this set of services that allow us to control the execution and go go with it",
    "start": "1024860",
    "end": "1031178"
  },
  {
    "text": "the effin API the goal of the airy-fairy API is just to control the interaction",
    "start": "1031179",
    "end": "1038058"
  },
  {
    "text": "between the runner and a and the container they harness in this in this talk so first element of this is the",
    "start": "1038059",
    "end": "1045470"
  },
  {
    "text": "artifact element so this is just to stage things into the docker container then to the harness why we need the",
    "start": "1045470",
    "end": "1052850"
  },
  {
    "text": "staging if we could have a container that has everything that's a good question but well if we are going to",
    "start": "1052850",
    "end": "1058070"
  },
  {
    "text": "distribute this to the general public will probably will create a general docker and then people can stash fing",
    "start": "1058070",
    "end": "1063559"
  },
  {
    "text": "if they want or create their on docker images so this let's say that this service can be optional if people",
    "start": "1063559",
    "end": "1068690"
  },
  {
    "text": "provide their own images this is just to put to put in its own some artifacts and",
    "start": "1068690",
    "end": "1078019"
  },
  {
    "text": "we also have a concept of manifest and a manifest and Louis just to give",
    "start": "1078019",
    "end": "1083269"
  },
  {
    "text": "permissions to these artifacts and to control the bomb that they are not corrupted with an md5 probably with",
    "start": "1083269",
    "end": "1089029"
  },
  {
    "text": "change for a morphs from cache then we have the provision service the provision",
    "start": "1089029",
    "end": "1095720"
  },
  {
    "text": "services are about the resources in the container how much CPU we need how much ram we need a memory I mean if we need",
    "start": "1095720",
    "end": "1105139"
  },
  {
    "text": "these space and this kind of stuff all of these goes in in the provision API",
    "start": "1105139",
    "end": "1110830"
  },
  {
    "text": "then and more interesting this is how we send data between both of them we the",
    "start": "1110830",
    "end": "1117230"
  },
  {
    "text": "runner just opens a connection and just sends bytes yes bytes going on and in the in the",
    "start": "1117230",
    "end": "1125179"
  },
  {
    "text": "container there is this thing we call quarters in beam that allowed to transform from bytes into the representation we have so people can",
    "start": "1125179",
    "end": "1132139"
  },
  {
    "text": "still be using Pico for example in Python or whatever the serialization they want and and this is also decoded",
    "start": "1132139",
    "end": "1139399"
  },
  {
    "text": "back into bytes and send the coded back into my story and sent over the wire we have also an extra service that this",
    "start": "1139399",
    "end": "1146330"
  },
  {
    "text": "state API that was seen further okay so as I said we send bytes back and forth",
    "start": "1146330",
    "end": "1154720"
  },
  {
    "text": "and this for to do this we use protocol buffers but we found some problem some",
    "start": "1154720",
    "end": "1161450"
  },
  {
    "text": "limitation with protocol buffers is that depending on the language is the biggest message in protocol buffers can be to",
    "start": "1161450",
    "end": "1167749"
  },
  {
    "text": " bytes or 4 gigabytes so to enable compatibility between us between all we",
    "start": "1167749",
    "end": "1172909"
  },
  {
    "text": "decided to use the lower limit and the data is is worse with logical streams",
    "start": "1172909",
    "end": "1179360"
  },
  {
    "text": "which means that our add one element can be represented",
    "start": "1179360",
    "end": "1184509"
  },
  {
    "text": "composed by different messages of protocol of buffers I mean so this is",
    "start": "1184509",
    "end": "1189830"
  },
  {
    "text": "how data works this is the state API the state API is all around having",
    "start": "1189830",
    "end": "1196999"
  },
  {
    "text": "state in the executor so sometimes we can compute things and give this data",
    "start": "1196999",
    "end": "1202099"
  },
  {
    "text": "back to the container and this is just mostly like a like state store in the",
    "start": "1202099",
    "end": "1212449"
  },
  {
    "text": "kroner but we encourage the container to have a cache also of this to avoid round trips",
    "start": "1212449",
    "end": "1219289"
  },
  {
    "text": "because well we're care about performance in this so that's that's the idea here and this is fearful to useful",
    "start": "1219289",
    "end": "1226099"
  },
  {
    "text": "to do things like site inputs that is for example when I have a collection of",
    "start": "1226099",
    "end": "1231469"
  },
  {
    "text": "data that I care like I don't know that is a small thing that I can materialize like an index table yes I can inject",
    "start": "1231469",
    "end": "1239239"
  },
  {
    "text": "this as a state in their honor and even cache it in the in the container okay so",
    "start": "1239239",
    "end": "1247039"
  },
  {
    "text": "this is the more interesting one the control API allows us to orchestrate all",
    "start": "1247039",
    "end": "1254119"
  },
  {
    "text": "the execution of things the this is the one who decides okay I want to process a",
    "start": "1254119",
    "end": "1259189"
  },
  {
    "text": "bundle the design is a set of elements I send you this little part of the graph and you execute it and you give me the",
    "start": "1259189",
    "end": "1265849"
  },
  {
    "text": "results back this is this is an example",
    "start": "1265849",
    "end": "1271129"
  },
  {
    "text": "of the definition of the messages and the service so we send for example a",
    "start": "1271129",
    "end": "1276739"
  },
  {
    "text": "request for a bone for processor bundle like you see that and there are there will be some other instructions D not",
    "start": "1276739",
    "end": "1282319"
  },
  {
    "text": "here so this is how we process a bundle there is some preparation steps first we",
    "start": "1282319",
    "end": "1289039"
  },
  {
    "start": "1284000",
    "end": "1284000"
  },
  {
    "text": "use send the offenders are no registered we get all these inputs and outputs ready to be connected back and forth and",
    "start": "1289039",
    "end": "1295809"
  },
  {
    "text": "then we use send the trigger to start executing the functions the user-defined",
    "start": "1295809",
    "end": "1301099"
  },
  {
    "text": "functions so it is when you execute the Python call and this this this process",
    "start": "1301099",
    "end": "1306889"
  },
  {
    "text": "in the end since the outputs back so this is this is more or less how it",
    "start": "1306889",
    "end": "1312679"
  },
  {
    "text": "works as you can see there was a game between between control and data API is",
    "start": "1312679",
    "end": "1318649"
  },
  {
    "text": "to do this got our services let's say so finally we have this login service that",
    "start": "1318649",
    "end": "1328209"
  },
  {
    "text": "allows us just to get the locks of container out so we just want to know",
    "start": "1328449",
    "end": "1333940"
  },
  {
    "text": "because well things are happening to container but the person who runs the cluster probably is running this on",
    "start": "1333940",
    "end": "1340039"
  },
  {
    "text": "Hadoop or another different system that he wants to lock the locks there so this is how we stack the locks",
    "start": "1340039",
    "end": "1347740"
  },
  {
    "text": "so what what are the advantages of this approach is that we gain this isolation",
    "start": "1348460",
    "end": "1355309"
  },
  {
    "start": "1349000",
    "end": "1349000"
  },
  {
    "text": "of code we isolate the configuration of the user environment - and this is nice",
    "start": "1355309",
    "end": "1361220"
  },
  {
    "text": "because we can provide all the dependencies in one big chunk we or or",
    "start": "1361220",
    "end": "1367130"
  },
  {
    "text": "provide it with artifacts as we said maybe so we can support multiple language execution and eventually with",
    "start": "1367130",
    "end": "1375320"
  },
  {
    "text": "this we can support mixing pipelines in different languages and this is important for the tensorflow example",
    "start": "1375320",
    "end": "1380899"
  },
  {
    "text": "that we mentioned for example if someone with Java knowledge just want to add",
    "start": "1380899",
    "end": "1386090"
  },
  {
    "text": "some small part in their position that makes Python um invokes transfer flow we",
    "start": "1386090",
    "end": "1391970"
  },
  {
    "text": "can do this and also it's important because in Java we have support for SQL so you can send SQL queries but this is",
    "start": "1391970",
    "end": "1398750"
  },
  {
    "text": "not in Python so the Python people can call the SQL by invoking the Java",
    "start": "1398750",
    "end": "1403779"
  },
  {
    "text": "harness so what what are the issues of course all of this has a price there is",
    "start": "1403779",
    "end": "1410510"
  },
  {
    "text": "some performance overhead that in the first test we did this around 15%",
    "start": "1410510",
    "end": "1416740"
  },
  {
    "text": "we have extra components we have a dependency now in docker and also it's a",
    "start": "1416740",
    "end": "1423500"
  },
  {
    "text": "little bit more complex as well but this is the price to be able to reuse so what",
    "start": "1423500",
    "end": "1430159"
  },
  {
    "text": "the current status of this and what's the future work of this current status",
    "start": "1430159",
    "end": "1436100"
  },
  {
    "start": "1435000",
    "end": "1435000"
  },
  {
    "text": "we have a universal local runner that this a local runner to test these things so it uses to all this machinery and",
    "start": "1436100",
    "end": "1443830"
  },
  {
    "text": "allows to invoke Python from any language there we are we have an ongoing",
    "start": "1443830",
    "end": "1450289"
  },
  {
    "text": "rewrite of the fling runner to support the portability API and the great news is that just three or four weeks ago for",
    "start": "1450289",
    "end": "1457100"
  },
  {
    "text": "the first time we got the word count of Python being executed in fling with all",
    "start": "1457100",
    "end": "1462710"
  },
  {
    "text": "these services of course workouts like the hello world but is is already covers that most of",
    "start": "1462710",
    "end": "1470240"
  },
  {
    "text": "the things are in the right place we have to go ahead and also we have a newcomer that that we also be when able",
    "start": "1470240",
    "end": "1478430"
  },
  {
    "text": "to test with the finger owner and this is the go SDK so the go SDK is an",
    "start": "1478430",
    "end": "1483980"
  },
  {
    "start": "1481000",
    "end": "1481000"
  },
  {
    "text": "ongoing workouts wind up in community and the world go SDK you can see the",
    "start": "1483980",
    "end": "1489650"
  },
  {
    "text": "basic we were counting in go is the first SDK that is natively written to",
    "start": "1489650",
    "end": "1496400"
  },
  {
    "text": "use all of this and disciplines are really interesting opportunity also",
    "start": "1496400",
    "end": "1501620"
  },
  {
    "text": "because as you see go produces static binaries and we can invoke faster things",
    "start": "1501620",
    "end": "1507230"
  },
  {
    "text": "with this and particular we can invoke net native things in the container so this will be quite useful for example if",
    "start": "1507230",
    "end": "1514250"
  },
  {
    "text": "you want to do manually some kind of computer graphics algorithms in GPU or stuff like that I think this is a good",
    "start": "1514250",
    "end": "1520100"
  },
  {
    "text": "use for this so what's it going and what's the future where well still",
    "start": "1520100",
    "end": "1525530"
  },
  {
    "start": "1522000",
    "end": "1522000"
  },
  {
    "text": "working in completing the full model soup all have an estate having Windows triggers all these concepts of the",
    "start": "1525530",
    "end": "1530960"
  },
  {
    "text": "beginning we discuss in how to do matrix correctly with the released I mean",
    "start": "1530960",
    "end": "1536150"
  },
  {
    "text": "because we also we need this dance background for between the worker and the runner sorry and the harness we have",
    "start": "1536150",
    "end": "1544160"
  },
  {
    "text": "not tested yet to invoke ru connectors between different languages this example I mention of calling the Kafka connector",
    "start": "1544160",
    "end": "1550370"
  },
  {
    "text": "from Python if it's not exist in multiple languages pilot panels have not",
    "start": "1550370",
    "end": "1555470"
  },
  {
    "text": "be test but should work of course all of this means that we are not ready for",
    "start": "1555470",
    "end": "1561020"
  },
  {
    "text": "production so this is one of the bigger goals in the rest of the year this is a lot of work so I I don't expect that we have",
    "start": "1561020",
    "end": "1567710"
  },
  {
    "text": "this before at least q4 and also we have",
    "start": "1567710",
    "end": "1573080"
  },
  {
    "text": "we have to support all everyone else like this part and make this more user friendly for example because we would be",
    "start": "1573080",
    "end": "1579620"
  },
  {
    "text": "setting the abstract yes I can invoke ro tensorflow from Java but how do you do this in the programming level we have to",
    "start": "1579620",
    "end": "1585500"
  },
  {
    "text": "refine some things and finally we have this validation tests that we already",
    "start": "1585500",
    "end": "1590690"
  },
  {
    "text": "use for the Java native versions this is like our TCK that is valid",
    "start": "1590690",
    "end": "1596450"
  },
  {
    "text": "compatibility caitli say that is the the ballot let's run our tests so we have to validate that all of",
    "start": "1596450",
    "end": "1603310"
  },
  {
    "text": "this is correct semantically so this presentation was in part well to make",
    "start": "1603310",
    "end": "1609700"
  },
  {
    "text": "you the people interested in these subjects aware of this ongoing work see that is interesting I find is pretty",
    "start": "1609700",
    "end": "1616240"
  },
  {
    "text": "cool from personal point of view and just to invite also people to contribute or to come just test and play with these",
    "start": "1616240",
    "end": "1623350"
  },
  {
    "text": "report box and do stuff like that not only the portability is decay you can",
    "start": "1623350",
    "end": "1631000"
  },
  {
    "text": "also come with new ideas for example one really exciting idea I found is to implement the dotnet SDK this will bring",
    "start": "1631000",
    "end": "1638680"
  },
  {
    "text": "to the community all the drug network with all the good things that it has if someone is interested also you can think",
    "start": "1638680",
    "end": "1645040"
  },
  {
    "text": "about creating maybe an active runner that could be implemented in goal and just replace flink or a spark or",
    "start": "1645040",
    "end": "1650800"
  },
  {
    "text": "whatever I mean there are plenty of ideas to contribute not only these know",
    "start": "1650800",
    "end": "1656620"
  },
  {
    "text": "we could be Moscow is doing a lot of other stuff in the sides if you are interested well already in version 2 5",
    "start": "1656620",
    "end": "1663340"
  },
  {
    "text": "the first stable version was one year ago so this is a good moment of stability in the project a part of this",
    "start": "1663340",
    "end": "1669820"
  },
  {
    "text": "internal changes and we have a vibrant community of companies and contributors",
    "start": "1669820",
    "end": "1676240"
  },
  {
    "text": "working in the project and some of the new things were working on a part of the",
    "start": "1676240",
    "end": "1681250"
  },
  {
    "text": "portability and the go SDK is they move to a new API of connectors that is",
    "start": "1681250",
    "end": "1686650"
  },
  {
    "text": "called a splitter will do a fence there is a really really cool subject but well no time to talk about this but it allows",
    "start": "1686650",
    "end": "1692350"
  },
  {
    "text": "to create more rich container cocoa connectors that spark or flink all our systems have if you have the time take a",
    "start": "1692350",
    "end": "1698650"
  },
  {
    "text": "look at the presentation on a strata that was some months ago by Eugene and",
    "start": "1698650",
    "end": "1704890"
  },
  {
    "text": "also there is this schema where the collections that they are like typed typed collections to be executed a",
    "start": "1704890",
    "end": "1711220"
  },
  {
    "text": "little bit like Sparta's so this is just to greet some of the people involved in",
    "start": "1711220",
    "end": "1716950"
  },
  {
    "start": "1714000",
    "end": "1714000"
  },
  {
    "text": "this work remember opens forces team game so all of these guys worked really",
    "start": "1716950",
    "end": "1723550"
  },
  {
    "text": "hard to put this into place and this is some referencing in case you want to",
    "start": "1723550",
    "end": "1728800"
  },
  {
    "start": "1726000",
    "end": "1726000"
  },
  {
    "text": "check later on in this light thank you I'm sorry if I went a little bit fast but my",
    "start": "1728800",
    "end": "1735260"
  },
  {
    "text": "presentation was intended to be for 45 minutes and I realized today that was 35 so it was like but at least you have a",
    "start": "1735260",
    "end": "1742909"
  },
  {
    "text": "quite complete deck to check afterwards so on this is all thank you",
    "start": "1742909",
    "end": "1749380"
  },
  {
    "text": "any questions maybe if I see anything so",
    "start": "1752720",
    "end": "1757809"
  },
  {
    "text": "thank you this might this might be pretty new but do things like growl VM that are you know Java called Python",
    "start": "1766179",
    "end": "1774049"
  },
  {
    "text": "tech new virtual machines okay how does that play into this okay well this is",
    "start": "1774049",
    "end": "1779960"
  },
  {
    "text": "different we have also have it would we okay I",
    "start": "1779960",
    "end": "1785990"
  },
  {
    "text": "just repeat the question what about groovy and all these languages that are allowed to execute",
    "start": "1785990",
    "end": "1791020"
  },
  {
    "text": "like a scripting languages on top of the Java Virtual Machine we have support for",
    "start": "1791020",
    "end": "1796549"
  },
  {
    "text": "this already there is an extension on being that is not married yet but I'm working on this pull request so I am",
    "start": "1796549",
    "end": "1802850"
  },
  {
    "text": "aware of it that allows to use the scripting languages but just in a primitive way let's say that we use it",
    "start": "1802850",
    "end": "1809179"
  },
  {
    "text": "to do par to us or do things like that but this is not not far also there is an",
    "start": "1809179",
    "end": "1815120"
  },
  {
    "text": "edge here that is the skull implementation of them of the BIM model or the SDK a list so this exists already",
    "start": "1815120",
    "end": "1823130"
  },
  {
    "text": "but this is more to cover the whole ecosystem because well you can have for example JSON to execute Python on Java",
    "start": "1823130",
    "end": "1828559"
  },
  {
    "text": "but you don't can use all the dependencies of Python so this is what we try to achieve any other questions no",
    "start": "1828559",
    "end": "1837669"
  },
  {
    "text": "okay okay thank you",
    "start": "1840010",
    "end": "1845049"
  }
]