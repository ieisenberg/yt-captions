[
  {
    "text": "my name is Eddie zanewski I work for a company called chain guard where we do software supply chain security for containers and all the cool kubernetes",
    "start": "120",
    "end": "7259"
  },
  {
    "text": "stuff that's out there but today we're telling you to talk about an awesome thing called oidc and of course I had to",
    "start": "7259",
    "end": "13740"
  },
  {
    "text": "come up with a fun title for this talk so I can't sing it or else they will",
    "start": "13740",
    "end": "19260"
  },
  {
    "text": "cease and desist the LF so just sing the song in your head for a minute",
    "start": "19260",
    "end": "25100"
  },
  {
    "text": "so quick bit about me I'm a software engineer chain guard I mentioned that you can find me on the Internet it's at",
    "start": "25260",
    "end": "30420"
  },
  {
    "text": "Eddie Zane I live in Denver Colorado and I like to climb big mountains I'm a maintainer for",
    "start": "30420",
    "end": "36239"
  },
  {
    "text": "the kubernetes and six store projects so I work on Cube control and all things CLI so you can at me",
    "start": "36239",
    "end": "43020"
  },
  {
    "text": "um in Sig store I work on a tool called git sign which we'll take a look at in a bit and I am not a cryptographer or a",
    "start": "43020",
    "end": "49559"
  },
  {
    "text": "security engineer just throwing that out there right so take all of your advice as it will",
    "start": "49559",
    "end": "54660"
  },
  {
    "text": "again I need to do a disclaimer uh I know nothing about this except that it's fun and cool and I've spent a lot of",
    "start": "54660",
    "end": "62219"
  },
  {
    "text": "time playing with it but again don't take advice from me in a production world",
    "start": "62219",
    "end": "67680"
  },
  {
    "text": "so the first thing we have to talk about is I'm sure I've seen slides in almost every talk for this is authentication",
    "start": "67680",
    "end": "73920"
  },
  {
    "text": "versus authorization are folks familiar with the difference here we don't spend too long on it okay we'll mention it so",
    "start": "73920",
    "end": "80340"
  },
  {
    "text": "authentication is generally who you are authorization is what you're allowed to do OCTA has some really good docs on",
    "start": "80340",
    "end": "87479"
  },
  {
    "text": "this if you want to check those out and I have a link to the slides at the end but it's that specification so we",
    "start": "87479",
    "end": "93299"
  },
  {
    "text": "usually call this authen and ALT C and so rewind back to 2007 this is also",
    "start": "93299",
    "end": "101340"
  },
  {
    "text": "from an OCTA blog post but this was how Yelp would check your contact list for",
    "start": "101340",
    "end": "108240"
  },
  {
    "text": "uh if your friends were also signed into Yelp right this is before the days of oauth and you would check your little",
    "start": "108240",
    "end": "115140"
  },
  {
    "text": "email service provider give them your username and password which they would just make requests directly and scrape a",
    "start": "115140",
    "end": "121439"
  },
  {
    "text": "bunch of stuff probably We've Come Away since then there's obviously a problem doing it this way",
    "start": "121439",
    "end": "127220"
  },
  {
    "text": "and so that's what led us to uh something we like to call oauth right",
    "start": "127220",
    "end": "132900"
  },
  {
    "text": "and so you've all probably used oauth before right I'm assuming everyone has you've",
    "start": "132900",
    "end": "138300"
  },
  {
    "text": "signed in with the service provider before so here I am signing in with my Google account and you can see the",
    "start": "138300",
    "end": "144780"
  },
  {
    "text": "Scopes and all the things that uh this app is requesting so access to my calendar all these things are just",
    "start": "144780",
    "end": "151260"
  },
  {
    "text": "Scopes in a a docs file that this app pulled in and said I would like these permissions on behalf of this user",
    "start": "151260",
    "end": "158340"
  },
  {
    "text": "same thing here with Spotify and GitHub uh Spotify is asking for permission to",
    "start": "158340",
    "end": "163920"
  },
  {
    "text": "read my email and my play history in there and GitHub can request all the orgs that I have access to right so",
    "start": "163920",
    "end": "170340"
  },
  {
    "text": "basic stuff that we've all worked through oauth to me was scary for a long time was one of those things that you",
    "start": "170340",
    "end": "176220"
  },
  {
    "text": "touched as a kid in a hackathon and didn't really want to understand or have to deal with again",
    "start": "176220",
    "end": "181680"
  },
  {
    "text": "um but it's really not that bad but the real thing behind oauth is that it's designed for authorization it was not",
    "start": "181680",
    "end": "186840"
  },
  {
    "text": "designed for authentication which is what a lot of providers and a lot of websites have used it for",
    "start": "186840",
    "end": "193140"
  },
  {
    "text": "uh the idea is that there is some resource provider that has a resource typically owned by another user and",
    "start": "193140",
    "end": "199260"
  },
  {
    "text": "oauth allows you to access that resource on behalf of that user right so this user grants you permissions to do that",
    "start": "199260",
    "end": "206700"
  },
  {
    "text": "there's different flows as part of oauth and some of these I didn't actually know about until I started researching it",
    "start": "206700",
    "end": "211800"
  },
  {
    "text": "authorization flow is the one that you're most familiar with this is where you go through that consent form where",
    "start": "211800",
    "end": "217440"
  },
  {
    "text": "you can get a code back and that code either has like a refresh token that can be used to refresh and make long-lived",
    "start": "217440",
    "end": "223260"
  },
  {
    "text": "requests client credentials are machine to machine identity so this is where your oath application would authenticate just",
    "start": "223260",
    "end": "230879"
  },
  {
    "text": "to the API and get a token it can use so not accessing users data",
    "start": "230879",
    "end": "236280"
  },
  {
    "text": "device flow so if you've ever had to type a code in from a thing on a command line which says open this thing and type",
    "start": "236280",
    "end": "242459"
  },
  {
    "text": "this code in or if you've signed into Netflix or Hulu on your Google TV or",
    "start": "242459",
    "end": "248099"
  },
  {
    "text": "something and it shows you the code that you can go to netflix.com activate and type in that's actually the oauth device",
    "start": "248099",
    "end": "254640"
  },
  {
    "text": "flow behind the scenes uh and then there's the implicit flow which is for client-side applications",
    "start": "254640",
    "end": "260180"
  },
  {
    "text": "this is typically discouraged because it's all client-side this is where you don't have secrets that you can keep",
    "start": "260180",
    "end": "265800"
  },
  {
    "text": "from the user so the industry is trying to move away from this implicit flow all these oops requests have these",
    "start": "265800",
    "end": "272340"
  },
  {
    "text": "things called Scopes they are just arbitrary strings to the provider that they make up whatever the hell they want",
    "start": "272340",
    "end": "277500"
  },
  {
    "text": "and they represent certain permissions so the user read email is from Spotify",
    "start": "277500",
    "end": "282660"
  },
  {
    "text": "that's one of the Scopes you can request if you're using OCTA you can octa.uses.read as the scope",
    "start": "282660",
    "end": "289380"
  },
  {
    "text": "or if you're using Google and the the Google Sheets API they just throw a URL at you so completely arbitrary things",
    "start": "289380",
    "end": "296280"
  },
  {
    "text": "that the provider decides on and if we look at this",
    "start": "296280",
    "end": "301320"
  },
  {
    "text": "these are the Google Docs they have all of their Scopes in a single dock which is really cool so you can come in and",
    "start": "301320",
    "end": "307560"
  },
  {
    "text": "find the service that you want see the different scope permissions that you can get you can access read-only Fitness data so",
    "start": "307560",
    "end": "315840"
  },
  {
    "text": "it's pretty cool that it's all in there and then a oauth URL for that authorization flow",
    "start": "315840",
    "end": "323520"
  },
  {
    "text": "that you've all probably used at some point this is what one of those URLs looks like so this is kind of the magic behind the scenes is your web server",
    "start": "323520",
    "end": "330720"
  },
  {
    "text": "would construct this URL you can see that there's the path in there oauth 2",
    "start": "330720",
    "end": "336180"
  },
  {
    "text": "V2 auth client ID which is kind of a username for your oauth client it sticks",
    "start": "336180",
    "end": "342479"
  },
  {
    "text": "in a redirect URI that's one of the the other confusing things when you're a kid at a hackathon you don't understand how",
    "start": "342479",
    "end": "348720"
  },
  {
    "text": "it works so that's kind of just where Google is going to redirect the request with your actual code that can be pulled",
    "start": "348720",
    "end": "355259"
  },
  {
    "text": "out and response type code some other Scopes in there right so if I click this link",
    "start": "355259",
    "end": "362580"
  },
  {
    "text": "you'll see that it will bring me to a very similar pop-up I have",
    "start": "362580",
    "end": "370320"
  },
  {
    "text": "to pick a Google account and then I have to allow permission to use my Sheets app cool right and so if I click allow this",
    "start": "370320",
    "end": "376080"
  },
  {
    "text": "is going to 404 because it's redirecting me to a web server that's not actually listening but in the URI here there is a",
    "start": "376080",
    "end": "382259"
  },
  {
    "text": "code that my web app would grab and trade for a actual token so kind of the back end part of this secret state",
    "start": "382259",
    "end": "390180"
  },
  {
    "text": "cool makes sense you can't talk about ogc without talking about oauth",
    "start": "390180",
    "end": "396080"
  },
  {
    "text": "and so if you ever go and create a oauth app somewhere this is uh creating one in",
    "start": "396360",
    "end": "401880"
  },
  {
    "text": "Octa you get that client ID which is kind of your username it identifies your client that's public and then the client",
    "start": "401880",
    "end": "407340"
  },
  {
    "text": "secret which is locked and kept on the back end that's what you would use along with that front-end browser code to",
    "start": "407340",
    "end": "413280"
  },
  {
    "text": "trade for an actual access token and you can see here there's some of those um callback Uris that you'd have to",
    "start": "413280",
    "end": "420360"
  },
  {
    "text": "specify so this would be your production web application callback this is a documentation of what that",
    "start": "420360",
    "end": "426660"
  },
  {
    "text": "flow looks like also from OCTA they have some really great Docs glance over pretty quickly you hit that",
    "start": "426660",
    "end": "433139"
  },
  {
    "text": "authorized endpoint redirects you back you get that consent which is the pop-up I showed you got that authorization code",
    "start": "433139",
    "end": "439740"
  },
  {
    "text": "server will post that to token with your secret from the back end you'll get that access token back and refresh token so",
    "start": "439740",
    "end": "447180"
  },
  {
    "text": "you can renew it once it expires and then you can use that access token to make API requests on behalf of that user",
    "start": "447180",
    "end": "452460"
  },
  {
    "text": "so that's what you would save pretty straightforward and so I have a quick demo of that",
    "start": "452460",
    "end": "460020"
  },
  {
    "text": "so I have a Spotify webflow here and any go developers in the room yeah",
    "start": "460020",
    "end": "468000"
  },
  {
    "text": "quite a few go has some really great unique oauth libraries that are part of the standard library for the most part I",
    "start": "468000",
    "end": "474840"
  },
  {
    "text": "got secrets in here that I'm going to delete afterwards so whatever and so it's pretty simple I hit that",
    "start": "474840",
    "end": "480960"
  },
  {
    "text": "oauth URL on my flash login it's got that redirect it's going to redirect you to a URL",
    "start": "480960",
    "end": "489300"
  },
  {
    "text": "that's constructed from my provider that's going to take me to the browser browsers after I consent is going to",
    "start": "489300",
    "end": "495660"
  },
  {
    "text": "send me to this oauth callback one I grab the code out of the URL parameters do some error checking call this magic",
    "start": "495660",
    "end": "502740"
  },
  {
    "text": "exchange method which is what takes my secret and posts it for that token cool cool and then I'm hitting the slash me",
    "start": "502740",
    "end": "509400"
  },
  {
    "text": "endpoint on Spotify right so very straightforward so I'm just going to run this",
    "start": "509400",
    "end": "515839"
  },
  {
    "text": "so we'll hit localhost log in right there's that prompt I'm",
    "start": "518580",
    "end": "524700"
  },
  {
    "text": "going to agree and allow and then we get my profile information cool very straightforward right",
    "start": "524700",
    "end": "531480"
  },
  {
    "text": "so that's a regular oil flow that's a regular oauth application so what is oidc",
    "start": "531480",
    "end": "537439"
  },
  {
    "text": "that's the flow we went through just quick diagram of it if you want to look later in the slides oh one more thing",
    "start": "539519",
    "end": "545160"
  },
  {
    "text": "get signed demo right so git sign is a project from Sig store which is uh artifact signing and so I have a a git",
    "start": "545160",
    "end": "553440"
  },
  {
    "text": "repo here that I can commit and it's going to use git sign which will sign my git commit with uh with Sig store and",
    "start": "553440",
    "end": "561600"
  },
  {
    "text": "this is something you'll see in a lot of developer tools where you'll do something it'll pop out a URL open your",
    "start": "561600",
    "end": "567660"
  },
  {
    "text": "browser what it's actually doing is running a local web server listening for that callback which is really cool so",
    "start": "567660",
    "end": "572820"
  },
  {
    "text": "you use oauth a ton you might not realize it so I'm going to authorize a Google it's going to that's a new page",
    "start": "572820",
    "end": "578640"
  },
  {
    "text": "that's nice and it's going to give it back to git sign sign that commit cool right gcloud does this too if you log in",
    "start": "578640",
    "end": "585899"
  },
  {
    "text": "with the gcloud CLI a lot of tools use this mechanism to get a code to a CLI",
    "start": "585899",
    "end": "591240"
  },
  {
    "text": "tool from your browser very neat and then",
    "start": "591240",
    "end": "598339"
  },
  {
    "text": "so but there's issues with the loss it was again originally designed for authorization not authentication which",
    "start": "599100",
    "end": "606120"
  },
  {
    "text": "is what a lot of people started using it for I don't actually want to access resources on your behalf I just want to know who you are and give you an easy",
    "start": "606120",
    "end": "611820"
  },
  {
    "text": "way to log into my application there are no standard Scopes as I showed before right arbitrary strings you don't",
    "start": "611820",
    "end": "619200"
  },
  {
    "text": "know what one provider is going to do some have different crazy stuff in there",
    "start": "619200",
    "end": "624420"
  },
  {
    "text": "there was no standard who am I in point right that endpoint I hit from Spotify was like slash API slash V1 me uh there",
    "start": "624420",
    "end": "632339"
  },
  {
    "text": "was no standard way for you to know who you had an API token for and again these are Long Live",
    "start": "632339",
    "end": "638040"
  },
  {
    "text": "credentials right so the root of all evil we all know this we don't want to provision these things and have them sitting around all right I already",
    "start": "638040",
    "end": "643920"
  },
  {
    "text": "leaked my Spotify credentials by showing you that file and so Discovery is another mechanism in",
    "start": "643920",
    "end": "651060"
  },
  {
    "text": "here there is actually oauth discovery which I'll show you a bit later but that matters a bit more with oidc",
    "start": "651060",
    "end": "658620"
  },
  {
    "text": "uh Spotify has this endpoint that you can hit it's well-known oauth",
    "start": "658620",
    "end": "664140"
  },
  {
    "text": "authorization server and this kind of tells you about their oauth provider which is neat this isn't used as much",
    "start": "664140",
    "end": "671220"
  },
  {
    "text": "honestly as it is in the oidc world but here you can know that's where you send a user to get a token and there's a",
    "start": "671220",
    "end": "679079"
  },
  {
    "text": "slash token endpoint some here that's that tells you where you would post this to so a bit of an afterthought",
    "start": "679079",
    "end": "686519"
  },
  {
    "text": "cool so enter oidc so oidc stands for open ID connect open ID was another form",
    "start": "686519",
    "end": "691860"
  },
  {
    "text": "of authentication that kind of got shut down by a lot of people it was a way to have Federated logins but it kind of was",
    "start": "691860",
    "end": "699060"
  },
  {
    "text": "replaced with oauth and then brought back again through oidc it is an extension to olap so it's a thin layer",
    "start": "699060",
    "end": "705540"
  },
  {
    "text": "built on top of oauth it uses Json web tokens it has this concept of an ID token so along with",
    "start": "705540",
    "end": "712500"
  },
  {
    "text": "that access token you would get back you would get back an ID token and this is supposed to contain information about",
    "start": "712500",
    "end": "717540"
  },
  {
    "text": "the user by itself as a standalone it also introduced the standard user",
    "start": "717540",
    "end": "722640"
  },
  {
    "text": "info endpoint so everything that's oidc compatible should have a user endpoint and a user info and point that you can",
    "start": "722640",
    "end": "728519"
  },
  {
    "text": "hit with that access token to get back to that identity token and information about a user",
    "start": "728519",
    "end": "734040"
  },
  {
    "text": "it comes with a standard set of Scopes open ID is the scope that you introduced",
    "start": "734040",
    "end": "739380"
  },
  {
    "text": "that's pretty much the only magic behind getting an oidc token from a oauth provider usually is you have to stick in",
    "start": "739380",
    "end": "744779"
  },
  {
    "text": "the open ID scope the profile scope and I mentioned Discovery before so IDC has",
    "start": "744779",
    "end": "751079"
  },
  {
    "text": "well-known discovery which I'll show in a second uh quick breakdown of Json web tokens you may",
    "start": "751079",
    "end": "757440"
  },
  {
    "text": "have seen before usually called jots there's three big section in it it has a header the header contains the algorithm",
    "start": "757440",
    "end": "763740"
  },
  {
    "text": "the key ID what it was signed with all that jazz it has a section called",
    "start": "763740",
    "end": "769019"
  },
  {
    "text": "payloads or claims this is actually what is assigned so this holds the information about the token who it's for",
    "start": "769019",
    "end": "775740"
  },
  {
    "text": "who created it how long it lasts for and then there's that signature which is the first two parts put together and kind of",
    "start": "775740",
    "end": "781800"
  },
  {
    "text": "sign with an RSA signature uh the claims section there's some",
    "start": "781800",
    "end": "787740"
  },
  {
    "text": "pretty standard claims that we use everywhere a subject or sub this is the client ID that you would usually use",
    "start": "787740",
    "end": "793019"
  },
  {
    "text": "throw off so this identifies who this token is is for who owns this token",
    "start": "793019",
    "end": "798240"
  },
  {
    "text": "um the audience field this is who the token is intended for so that auth's over so who should accept this token",
    "start": "798240",
    "end": "805139"
  },
  {
    "text": "the issuer this is who who minted this token who created this token so accounts.google.com accounts.spotify.com",
    "start": "805139",
    "end": "813600"
  },
  {
    "text": "issued at timestamp expires time stamp and then this jsonweb token.io site's",
    "start": "813600",
    "end": "820980"
  },
  {
    "text": "pretty great so you can come in here and paste the token in and see the breakdown of what it looks like decoded so you can",
    "start": "820980",
    "end": "826800"
  },
  {
    "text": "see the algorithm that this is signed with the type of token uh the subject arbitrary field called name and then",
    "start": "826800",
    "end": "833940"
  },
  {
    "text": "when this was issued and then you can verify the signature so cool that's the Json web token and",
    "start": "833940",
    "end": "841019"
  },
  {
    "text": "there's also step CLI which is rad if you want to do this on the command line you can use a step CLI the folks over at",
    "start": "841019",
    "end": "848639"
  },
  {
    "text": "step crypto Json web token inspect insecure because we're not going to verify the",
    "start": "848639",
    "end": "853800"
  },
  {
    "text": "signature and it'll print out the same thing so those are tools that we're going to use",
    "start": "853800",
    "end": "859940"
  },
  {
    "text": "uh and then I have an OCTA demo to show what this looks like",
    "start": "861600",
    "end": "866720"
  },
  {
    "text": "so I stood up a development environment for OCTA uh very straightforward stuff so this is a full proper two-spec oidc",
    "start": "870000",
    "end": "877560"
  },
  {
    "text": "flow right so this shows the oauth endpoint URL it's got my client ID in there response type blah blah blah",
    "start": "877560",
    "end": "884880"
  },
  {
    "text": "callback and then the Scopes it shows profile open ID and email",
    "start": "884880",
    "end": "892620"
  },
  {
    "text": "start up a server same thing as before call back at that code trade it out",
    "start": "892620",
    "end": "898680"
  },
  {
    "text": "more credentials to leak grab the access token grab the ID token",
    "start": "898680",
    "end": "904019"
  },
  {
    "text": "right so you get both back when you have these in your Scopes and then I'm making a request to that standard user info",
    "start": "904019",
    "end": "910019"
  },
  {
    "text": "endpoint so let's run that",
    "start": "910019",
    "end": "914540"
  },
  {
    "text": "and we're going to go localhost login it's got a semi to OCTA this is just a development instance so",
    "start": "916920",
    "end": "924540"
  },
  {
    "text": "there's nothing actually in here don't actually leak this one this is",
    "start": "924540",
    "end": "930540"
  },
  {
    "text": "important there we go sign in get that call back",
    "start": "930540",
    "end": "936480"
  },
  {
    "text": "cool so here we have the access token that came back so we can take a look at that OCTA",
    "start": "936480",
    "end": "943139"
  },
  {
    "text": "actually uses a Json web token as their access token there's nothing wrong with doing that it's just they're using that",
    "start": "943139",
    "end": "950100"
  },
  {
    "text": "as a mechanism instead of sending you some arbitrary API key so we can pop that in here",
    "start": "950100",
    "end": "956579"
  },
  {
    "text": "see the key ID that it was signed with the algorithm information about me here's the issuer my OCTA domain",
    "start": "956579",
    "end": "964860"
  },
  {
    "text": "uh the Scopes that are on it the subject that's my email cool",
    "start": "964860",
    "end": "970199"
  },
  {
    "text": "and then we can look at the actual ID token that came back",
    "start": "970199",
    "end": "975660"
  },
  {
    "text": "which will have a bit more I sat down and compared the two again OCTA is a special case where they use the Json web",
    "start": "975660",
    "end": "981120"
  },
  {
    "text": "token for both but this has a bit more information about me as a person so it has my preferred username I was trying",
    "start": "981120",
    "end": "989279"
  },
  {
    "text": "to get like my city and stuff in here I couldn't figure out how to do that right but this would identify me as a user same kind of stuff there's the audience",
    "start": "989279",
    "end": "995519"
  },
  {
    "text": "that's my user ID and OCTA the subject so cool",
    "start": "995519",
    "end": "1003339"
  },
  {
    "text": "and then below was that user info endpoint right so pretty much the same stuff that's in there just turned into a",
    "start": "1003440",
    "end": "1008779"
  },
  {
    "text": "Json web token see this one has more info like my time zone stuff",
    "start": "1008779",
    "end": "1015040"
  },
  {
    "text": "so oidc I mentioned this concept of Discovery this is where it's really cool and how it's pretty compatible for",
    "start": "1016220",
    "end": "1021380"
  },
  {
    "text": "anybody you have an issuer that someplace that mints tokens right so fills in those claims gives them on",
    "start": "1021380",
    "end": "1027140"
  },
  {
    "text": "behalf of a trusted user signs that thing ships it off accounts.google.com is Google's issuer",
    "start": "1027140",
    "end": "1034699"
  },
  {
    "text": "there's this well-known field which is really neat so this is where you can go check out the open ID configuration for",
    "start": "1034699",
    "end": "1041360"
  },
  {
    "text": "any sort of Provider that's just public information so I like showing Googles",
    "start": "1041360",
    "end": "1047120"
  },
  {
    "text": "so Google shows their issuer authorization endpoint same thing with the the oauth I showed before but uh",
    "start": "1047120",
    "end": "1054080"
  },
  {
    "text": "it's used a lot more in oidc so if you go to attach this to a service or provider it's saying hey trust my",
    "start": "1054080",
    "end": "1060559"
  },
  {
    "text": "identity provider it's going to go and actually grab this take a fingerprint of it and that's how it's going to save and",
    "start": "1060559",
    "end": "1066140"
  },
  {
    "text": "you know register if anything changes a couple other bits raised with a token",
    "start": "1066140",
    "end": "1071299"
  },
  {
    "text": "endpoint the claims that it supports some of some providers don't do this and some don't",
    "start": "1071299",
    "end": "1077419"
  },
  {
    "text": "respect the claims in the first place the token types that hands out Jason Webb Bearer token right all that stuff",
    "start": "1077419",
    "end": "1083900"
  },
  {
    "text": "always the field I'm actually looking for oh here you go uh the Jason Webb key set ID right so that's the next field",
    "start": "1083900",
    "end": "1090679"
  },
  {
    "text": "that's in here so the jwks this is what the basically",
    "start": "1090679",
    "end": "1096740"
  },
  {
    "text": "the public Key Ring of that provider so it has to tell inside of that well-known",
    "start": "1096740",
    "end": "1101900"
  },
  {
    "text": "configuration point where the consumer should go to get their keys and that's how it does it so Google's is actually",
    "start": "1101900",
    "end": "1107900"
  },
  {
    "text": "at this URL same kind of deal this is again a Jason Webb key set has a key type key ID",
    "start": "1107900",
    "end": "1116740"
  },
  {
    "text": "these are the um the parameters to generating that key right the exponent All That Jazz these",
    "start": "1116740",
    "end": "1125240"
  },
  {
    "text": "rotate there's a whole bunch of magic and procedure behind how this rotates you're supposed to keep the old one around for a little bit so I think that",
    "start": "1125240",
    "end": "1131000"
  },
  {
    "text": "there's two yeah there's two in here so here's the one that they're probably using right now to sign and then here's",
    "start": "1131000",
    "end": "1136520"
  },
  {
    "text": "the one that's being deprecated and phased out",
    "start": "1136520",
    "end": "1140500"
  },
  {
    "text": "uh all this is tied under an umbrella called Josie or Jose Json objects",
    "start": "1142100",
    "end": "1147559"
  },
  {
    "text": "signing an encryption so if you want to know more about how this works check out those rfcs and specs I actually had to implement a few of them from scratch and",
    "start": "1147559",
    "end": "1153860"
  },
  {
    "text": "python it was miserable but that's where all this is umbrella under",
    "start": "1153860",
    "end": "1159020"
  },
  {
    "text": "and so why do we care about oidc and so this is the point of talk is this concept of federation I have folks",
    "start": "1159020",
    "end": "1164960"
  },
  {
    "text": "familiar with Federation yeah maybe a little bit so Federation is just kind of like a",
    "start": "1164960",
    "end": "1171140"
  },
  {
    "text": "magic trust relationship between an issuer and a resource provider right Google provides a service called",
    "start": "1171140",
    "end": "1176780"
  },
  {
    "text": "workload identity Federation that's rad but what really is is just like a trusted person sitting in a cardboard",
    "start": "1176780",
    "end": "1182539"
  },
  {
    "text": "box that takes a token from this one and hands it out this side there's no like actual uh you know spec or RFC behind",
    "start": "1182539",
    "end": "1190160"
  },
  {
    "text": "any of this works it could be solved by a person in a box um there's no longer lived credentials with",
    "start": "1190160",
    "end": "1196880"
  },
  {
    "text": "Federation which is great and so this would be I'll show you a demo in a second where your CI CD provider injects",
    "start": "1196880",
    "end": "1203960"
  },
  {
    "text": "a unique oidc token into every pipeline run that can be traded out for a gcp",
    "start": "1203960",
    "end": "1210140"
  },
  {
    "text": "credential an AWS credential so you no longer have to provision those long-lived identities store them as",
    "start": "1210140",
    "end": "1216440"
  },
  {
    "text": "environment Secrets inside of your CI provider and have to worry about them leaking or anything there's no search",
    "start": "1216440",
    "end": "1221960"
  },
  {
    "text": "it's just trust usually the the provider what will happen is it will take that oidc token",
    "start": "1221960",
    "end": "1228020"
  },
  {
    "text": "hand it to the trusted source so go to Google cloud and usually assume a roller",
    "start": "1228020",
    "end": "1233539"
  },
  {
    "text": "identity so this is tied to an actual service account it's super auditable so all this is",
    "start": "1233539",
    "end": "1240500"
  },
  {
    "text": "auditable you can track who assumed that I identity where it came from in the case of GitHub when they issue tokens",
    "start": "1240500",
    "end": "1246320"
  },
  {
    "text": "you know the pipeline ID that ran you know the repo the time what caused that",
    "start": "1246320",
    "end": "1252020"
  },
  {
    "text": "pipeline to start where can you do this and where will you find these so I mentioned cicd GitHub",
    "start": "1252020",
    "end": "1259100"
  },
  {
    "text": "gitlab Circle CI I think semaphore a bunch of different providers so this is becoming way more Pro prominent now",
    "start": "1259100",
    "end": "1265059"
  },
  {
    "text": "injecting this token into every run which is cool there's a Jenkins plugin if you're using",
    "start": "1265059",
    "end": "1270440"
  },
  {
    "text": "Jenkins to get oidc tokens issued Cloud resources will accept this I",
    "start": "1270440",
    "end": "1275539"
  },
  {
    "text": "mentioned that gcp AWS Azure they all do some sort of workload identity Federation Google got lucky and claimed",
    "start": "1275539",
    "end": "1281840"
  },
  {
    "text": "the the service name that makes a ton of sense but calling a workload identity Federation is like a good umbrella name",
    "start": "1281840",
    "end": "1287539"
  },
  {
    "text": "there kubernetes clusters do this so I have a kubernetes demo somewhere I",
    "start": "1287539",
    "end": "1294620"
  },
  {
    "text": "showed you Sig store signing with Sig store signing I show doing it manually and I had to go through the oauth flow",
    "start": "1294620",
    "end": "1301340"
  },
  {
    "text": "but if you're doing say a again of action to release a binary and you want",
    "start": "1301340",
    "end": "1306679"
  },
  {
    "text": "to sign a binary as part of an action pipeline you can take that oidc token trade that for a a Sig store signing",
    "start": "1306679",
    "end": "1313340"
  },
  {
    "text": "certificate without any uh you know pop-up or oauth flow and it gets tied back to that actual workload so you know",
    "start": "1313340",
    "end": "1320240"
  },
  {
    "text": "the provenance of where that artifact was built and all that's signed in a testable",
    "start": "1320240",
    "end": "1326179"
  },
  {
    "text": "so this is a GitHub action token this is injected if you set a I think it's like",
    "start": "1326179",
    "end": "1332059"
  },
  {
    "text": "token right true or something and your permissions for your your GitHub manifest",
    "start": "1332059",
    "end": "1337520"
  },
  {
    "text": "uh same kind of deal you can see the subject here that's going to identify the repo uh the environment actions has",
    "start": "1337520",
    "end": "1344179"
  },
  {
    "text": "the concept of different environments that you can use for different Secrets audience right who this is uh the repo",
    "start": "1344179",
    "end": "1350299"
  },
  {
    "text": "is for the ref of that thing right so very unique stuff to a CI provider but",
    "start": "1350299",
    "end": "1357200"
  },
  {
    "text": "they can all get put in there uh actor ID bunch of other stuff right so very cool the issuer is issuer or",
    "start": "1357200",
    "end": "1365059"
  },
  {
    "text": "tokens not actions.githubuser content.com right so your Cloud would trust this",
    "start": "1365059",
    "end": "1371059"
  },
  {
    "text": "so I have a GitHub demo and",
    "start": "1371059",
    "end": "1378039"
  },
  {
    "text": "I don't even know how long I have let's see I have no person or timer",
    "start": "1382220",
    "end": "1389840"
  },
  {
    "text": "thank you perfect timing actually uh so I can come into my GitHub here for this",
    "start": "1389840",
    "end": "1395360"
  },
  {
    "text": "project show you what this manifest looks like right so this is a manual dispatch there's that permission",
    "start": "1395360",
    "end": "1401720"
  },
  {
    "text": "so this is how you get the token injected I just have that job blah blah blah runs on so this is going to check",
    "start": "1401720",
    "end": "1407240"
  },
  {
    "text": "out the repo it's going to set up that Google up so that's actually the magic thing that happens here so I have a",
    "start": "1407240",
    "end": "1413120"
  },
  {
    "text": "trust relationship I've set up in gcp that it's trusting this particular",
    "start": "1413120",
    "end": "1418480"
  },
  {
    "text": "pipeline in this action so it has the mapping there and so this action will set up and trade",
    "start": "1418480",
    "end": "1424820"
  },
  {
    "text": "out for a token which I have a manual workflow for too and then it has the",
    "start": "1424820",
    "end": "1430159"
  },
  {
    "text": "service account that it's assuming inside of gcp and then it's going to run that gcloud",
    "start": "1430159",
    "end": "1436280"
  },
  {
    "text": "CLI and just kind of list out who I am so let's kick that off",
    "start": "1436280",
    "end": "1442419"
  },
  {
    "text": "run workflow",
    "start": "1444980",
    "end": "1448059"
  },
  {
    "text": "so let's see it's going to start",
    "start": "1450740",
    "end": "1455200"
  },
  {
    "text": "right so you can imagine just being you tagged a release or you cut a release at a certain commit and now you want it to",
    "start": "1456919",
    "end": "1462740"
  },
  {
    "text": "build binary sign them and ship them setting up gcloud this is the longest",
    "start": "1462740",
    "end": "1469220"
  },
  {
    "text": "step it's got to download the the binary it's already set up the credentials you can see it created Created credentials",
    "start": "1469220",
    "end": "1475700"
  },
  {
    "text": "file at this path so it already has the the token exchanged",
    "start": "1475700",
    "end": "1481220"
  },
  {
    "text": "it's going to run that who am I there we go right so you can see that it is actually assumed that service account",
    "start": "1481220",
    "end": "1487340"
  },
  {
    "text": "so that works cool so that's inside of your CI provider",
    "start": "1487340",
    "end": "1493659"
  },
  {
    "text": "kubernetes demo real quick so if I do something like",
    "start": "1493659",
    "end": "1499940"
  },
  {
    "text": "K get raw Cube CTL get raw slash dot well known",
    "start": "1499940",
    "end": "1507220"
  },
  {
    "text": "open ID configuration right so every kubernetes cluster that's",
    "start": "1508039",
    "end": "1513559"
  },
  {
    "text": "in a managed service will have an oidc provider that's usually backed by their Im so gcp will tie this to service",
    "start": "1513559",
    "end": "1522140"
  },
  {
    "text": "accounts inside of IM there same thing with eks you can do this in your own clusters too you can provide your own",
    "start": "1522140",
    "end": "1528500"
  },
  {
    "text": "oidc provider or kubernetes will run one on your behalf and tie it but you can see here is the issuer from",
    "start": "1528500",
    "end": "1534799"
  },
  {
    "text": "my cluster right it's tied to a specific project and a certain uh region and the cluster",
    "start": "1534799",
    "end": "1543260"
  },
  {
    "text": "name right there's where you could find that the key store for my cluster let's see is it public",
    "start": "1543260",
    "end": "1549500"
  },
  {
    "text": "that's a private IP what's supported right so every",
    "start": "1549500",
    "end": "1554720"
  },
  {
    "text": "kubernetes cluster has this which is really cool so if you have your your workload run and tecton actually does this anyone use tecton for CI CD tecton",
    "start": "1554720",
    "end": "1562039"
  },
  {
    "text": "is a a open source project for CI CD that's kubernetes native and it will use",
    "start": "1562039",
    "end": "1568279"
  },
  {
    "text": "this provider to do all of your federating and signing and a testing so it's really cool",
    "start": "1568279",
    "end": "1574940"
  },
  {
    "text": "so that's with kubernetes so I've been calling this oidc wave 2.",
    "start": "1574940",
    "end": "1582500"
  },
  {
    "text": "everything I just showed you that GitHub action pipeline my kubernetes cluster none of those are actually attached to",
    "start": "1582500",
    "end": "1589460"
  },
  {
    "text": "oauth at all and I'm sure there's someone out there who will have a better explanation or definition of what this",
    "start": "1589460",
    "end": "1594980"
  },
  {
    "text": "is uh but for my naive self this is a extension beyond what oidc was intended",
    "start": "1594980",
    "end": "1601700"
  },
  {
    "text": "for this machine to machine authentication right GitHub actions was really the first provider to do this",
    "start": "1601700",
    "end": "1607220"
  },
  {
    "text": "where they were injecting these tokens into those runs there is no oauth involved at all with how they mint those",
    "start": "1607220",
    "end": "1613100"
  },
  {
    "text": "tokens it is a machine identity right this is where we're all moving towards",
    "start": "1613100",
    "end": "1618860"
  },
  {
    "text": "um I don't think we'll have time to talk about spiffy Inspire but the the idea of having your trust relationship between a",
    "start": "1618860",
    "end": "1624799"
  },
  {
    "text": "identity provider and a resource uh consumer or a producer is just that",
    "start": "1624799",
    "end": "1630500"
  },
  {
    "text": "implicit trust so it's there's no long-lived credentials on either side",
    "start": "1630500",
    "end": "1635779"
  },
  {
    "text": "so it's just it's just interesting to see how this has evolved beyond the need for having oauth attached to it",
    "start": "1635779",
    "end": "1642020"
  },
  {
    "text": "and at the end of the day who do you want signing your releases do you want your releases assigned to a Eddie at",
    "start": "1642020",
    "end": "1648260"
  },
  {
    "text": "chain guard.dev that you know may still may have been signed like three years ago but I haven't worked there for two",
    "start": "1648260",
    "end": "1654080"
  },
  {
    "text": "years so is that still a valid release or signature when I leave do you have to rotate out who's signing it so having it",
    "start": "1654080",
    "end": "1660620"
  },
  {
    "text": "signed by a service account a system identity uh is a much better approach right you can have it signed by release",
    "start": "1660620",
    "end": "1667279"
  },
  {
    "text": "at kubernetes.io uh with all with all things you need to",
    "start": "1667279",
    "end": "1672860"
  },
  {
    "text": "trust but verify uh the fun thing is that anyone could actually mint a valid oidc token uh there's nothing that",
    "start": "1672860",
    "end": "1678740"
  },
  {
    "text": "really says otherwise the claims actually matter that are inside there",
    "start": "1678740",
    "end": "1684140"
  },
  {
    "text": "um you can put whatever you want in that audience and subject field uh issue subject audience are really",
    "start": "1684140",
    "end": "1690440"
  },
  {
    "text": "important ones that you want to make sure are verifiable what happens if there was a service who",
    "start": "1690440",
    "end": "1696320"
  },
  {
    "text": "were to issue tokens with whatever uh I went and built one for fun I called it",
    "start": "1696320",
    "end": "1702140"
  },
  {
    "text": "just trustme.dev and so this is a service that you should",
    "start": "1702140",
    "end": "1707960"
  },
  {
    "text": "not use for anything real but it's fun and so it will just mint tokens with whatever you pass in as the URL",
    "start": "1707960",
    "end": "1714380"
  },
  {
    "text": "parameters so here we have a token that",
    "start": "1714380",
    "end": "1720260"
  },
  {
    "text": "let me toss this debug parameter in the URL right so I have issued a token that is",
    "start": "1720260",
    "end": "1728779"
  },
  {
    "text": "the audience is sts.amazonaws.com cool well let's see what if we change the issuer so let's",
    "start": "1728779",
    "end": "1736159"
  },
  {
    "text": "say this was issued by accounts.google.com",
    "start": "1736159",
    "end": "1740539"
  },
  {
    "text": "cool still a valid token well what if I also have the subject in here",
    "start": "1741260",
    "end": "1747679"
  },
  {
    "text": "of something like admin at cncf.io right",
    "start": "1747679",
    "end": "1753440"
  },
  {
    "text": "so if I hand this this is a valid token you can totally verify the signature if",
    "start": "1753440",
    "end": "1758659"
  },
  {
    "text": "I hand this off to a provider what's to stop them from trusting it what's to stop them from actually knowing this is",
    "start": "1758659",
    "end": "1764600"
  },
  {
    "text": "forged well thankfully smart people have figured out how to prevent this though there are definitely Services out there",
    "start": "1764600",
    "end": "1770480"
  },
  {
    "text": "that are not checking the fields and and they're just getting a valid token with the issuer and they're definitely not",
    "start": "1770480",
    "end": "1775940"
  },
  {
    "text": "verifying that it's who it's for or where it's coming from uh and so I had a quick uh AWS demo",
    "start": "1775940",
    "end": "1784700"
  },
  {
    "text": "where I can do AWS a simple token service assume role with web identity I",
    "start": "1784700",
    "end": "1790159"
  },
  {
    "text": "have a a RN a role in here session name duration cool and then I just have to",
    "start": "1790159",
    "end": "1796240"
  },
  {
    "text": "pop in this web identity so let's say",
    "start": "1796240",
    "end": "1802220"
  },
  {
    "text": "go back token we give it the subject of demo",
    "start": "1802220",
    "end": "1813620"
  },
  {
    "text": "grab this I think that's all I need for it to work",
    "start": "1813620",
    "end": "1819740"
  },
  {
    "text": "no see it knows so it's missing a required claim audience so let's tossing an audience in there",
    "start": "1819740",
    "end": "1827740"
  },
  {
    "text": "oh bring me the token",
    "start": "1834440",
    "end": "1839320"
  },
  {
    "text": "ah incorrect audience token yep uh audience is supposed to be demo what",
    "start": "1845679",
    "end": "1851960"
  },
  {
    "text": "did I put oh Eddie demo there we go let's try that again",
    "start": "1851960",
    "end": "1858398"
  },
  {
    "text": "right so I have a trust relationship set up it's just gonna trust whatever I said",
    "start": "1863299",
    "end": "1868399"
  },
  {
    "text": "um in this case this this is what it's supposed to happen but the the way that the cloud provider gets around this is",
    "start": "1868399",
    "end": "1874340"
  },
  {
    "text": "you actually have to specify outside of the token who your audience is for right so it's just another step here",
    "start": "1874340",
    "end": "1881240"
  },
  {
    "text": "uh the protection against so verify token and claims you want to make sure you're actually matching that issuer to",
    "start": "1881240",
    "end": "1887600"
  },
  {
    "text": "the issuer's key right so the key shouldn't match if you do it the incorrect way",
    "start": "1887600",
    "end": "1892700"
  },
  {
    "text": "you want to pass the audience alongside that token so Google Cloud does it cool too they have the docs right here uh the",
    "start": "1892700",
    "end": "1899960"
  },
  {
    "text": "the token Amazon's the same way so you have the token here that you would passed",
    "start": "1899960",
    "end": "1905000"
  },
  {
    "text": "but you also specify the audience as well so the audience and the requests should match what's in the token and",
    "start": "1905000",
    "end": "1911779"
  },
  {
    "text": "that's how you can ensure that it's for the correct project uh Dex is a a front end for other apps",
    "start": "1911779",
    "end": "1921740"
  },
  {
    "text": "um I don't think I have much time to talk about it but if you go through that Sig store oil flow and where I where I",
    "start": "1921740",
    "end": "1927919"
  },
  {
    "text": "showed signing that git commit that's actually decks that's running behind the scenes so decks can Federate uh those",
    "start": "1927919",
    "end": "1933140"
  },
  {
    "text": "different identity providers to a different application so it can handle all the attaching and plugging in",
    "start": "1933140",
    "end": "1939740"
  },
  {
    "text": "uh 50 spiers for machine identities I'm not going to try to explain that because I'm running out of time the one last",
    "start": "1939740",
    "end": "1946159"
  },
  {
    "text": "thing I wanted to show was how this workload Federation Works behind the scenes so this is grabbing an oidc token",
    "start": "1946159",
    "end": "1954020"
  },
  {
    "text": "this is a valid one for my service so gcp is set up to trust me and so if we look at what that token",
    "start": "1954020",
    "end": "1961399"
  },
  {
    "text": "looks like real quick so you can see that the audience is my",
    "start": "1961399",
    "end": "1966620"
  },
  {
    "text": "gcp identity pool that I set up issuer and the the subject",
    "start": "1966620",
    "end": "1972640"
  },
  {
    "text": "Google actually takes that and it gets traded for a Federated access token so this is kind of like a secret",
    "start": "1973100",
    "end": "1979039"
  },
  {
    "text": "proprietary this basically Marshalls into a protobuf and so your service gets back this",
    "start": "1979039",
    "end": "1984320"
  },
  {
    "text": "identity token after it talks to Google you have to take that then and you have",
    "start": "1984320",
    "end": "1989779"
  },
  {
    "text": "to take uh hit another endpoint that says hey I have a Federated identity token can I please have an access token",
    "start": "1989779",
    "end": "1996019"
  },
  {
    "text": "on behalf of this user so Google will go and mint that and that's actually the token that you can use to hit that who",
    "start": "1996019",
    "end": "2002260"
  },
  {
    "text": "am I endpoint so that's what this is showing so with that I am most likely out of",
    "start": "2002260",
    "end": "2008919"
  },
  {
    "text": "time if you want the slides you can take a picture of that that's the QR code for",
    "start": "2008919",
    "end": "2014679"
  },
  {
    "text": "the slides and I'd be happy to answer any questions up here so thanks for listening to me uh ramble about oidc",
    "start": "2014679",
    "end": "2021780"
  },
  {
    "text": "[Applause]",
    "start": "2021780",
    "end": "2026579"
  }
]