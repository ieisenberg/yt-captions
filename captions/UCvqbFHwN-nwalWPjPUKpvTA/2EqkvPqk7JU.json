[
  {
    "start": "0",
    "end": "240000"
  },
  {
    "text": "okay I think we're good to start hi everyone thanks very much for coming to",
    "start": "30",
    "end": "5339"
  },
  {
    "text": "my talk evolving systems design with linka D my name's Edie I work at form 3",
    "start": "5339",
    "end": "12410"
  },
  {
    "text": "I'm a developer there and we've done a really interesting thing over the last",
    "start": "12410",
    "end": "17730"
  },
  {
    "text": "18 months we've integrated our platform with all of the important payments",
    "start": "17730",
    "end": "23970"
  },
  {
    "text": "infrastructure in Europe so he started off with doing that with faster payments which is a real-time payments platform",
    "start": "23970",
    "end": "30359"
  },
  {
    "text": "in the UK then we did batch base with Beck's and we've recently done separate",
    "start": "30359",
    "end": "36059"
  },
  {
    "text": "stint in Europe as well as Swift and we've had to deal with a lot of legacy",
    "start": "36059",
    "end": "42329"
  },
  {
    "text": "technology some of them dating back from 1968 so that's been a lot of fun so",
    "start": "42329",
    "end": "48030"
  },
  {
    "text": "we've dealt with everything from FLAC files with fix width message formats all",
    "start": "48030",
    "end": "53160"
  },
  {
    "text": "the way up to cutting-edge 1990s soap XML technology and the reason that we've",
    "start": "53160",
    "end": "59520"
  },
  {
    "text": "done all of that painful integration is so that our customers don't have to so",
    "start": "59520",
    "end": "64739"
  },
  {
    "text": "they can rock up to our JSON API with web callbacks and cloud-based cue",
    "start": "64739",
    "end": "71340"
  },
  {
    "text": "callbacks do one straightforward integration which takes roughly two",
    "start": "71340",
    "end": "76650"
  },
  {
    "text": "weeks and they can achieve as much as we did in the last 18 months so that's the",
    "start": "76650",
    "end": "82860"
  },
  {
    "text": "kind of business concept behind this is that our customers are usually financially regulated institutions which",
    "start": "82860",
    "end": "89040"
  },
  {
    "text": "one to send and receive payments from other bank accounts so that's the nature of the business it's quite an exciting",
    "start": "89040",
    "end": "95670"
  },
  {
    "text": "business idea and it's is proving very popular and we've got a lot of demand from from banks so back to sort of the",
    "start": "95670",
    "end": "104640"
  },
  {
    "text": "topic of this talk I really like stories about software and hardware development",
    "start": "104640",
    "end": "110100"
  },
  {
    "text": "and I've highlighted two of my personal favorites here dealers of lightning which is about the story that of setting",
    "start": "110100",
    "end": "118770"
  },
  {
    "text": "up a research laboratory in Xerox PARC Xerox decided in 1970 that they needed",
    "start": "118770",
    "end": "126360"
  },
  {
    "text": "to understand what the office of the future was going to look like because they were a photo copying company and",
    "start": "126360",
    "end": "132150"
  },
  {
    "text": "were worried that they wouldn't be relevant in the future so I think that was quite a cool idea and they got some",
    "start": "132150",
    "end": "138450"
  },
  {
    "text": "really brilliant scientists together and the scientists made a very shrewd",
    "start": "138450",
    "end": "144270"
  },
  {
    "text": "observation they thought that they would set up their research center as far away from head offices as physically possible",
    "start": "144270",
    "end": "150020"
  },
  {
    "text": "so get away from all of the managers and concentrate on on building the office of",
    "start": "150020",
    "end": "155160"
  },
  {
    "text": "the future it was very interesting in three to five years they developed amazing technology they started off with",
    "start": "155160",
    "end": "161370"
  },
  {
    "text": "the laser printer just to keep the folks back in New Jersey happy then they",
    "start": "161370",
    "end": "166560"
  },
  {
    "text": "developed East net networking which kind of makes sense you could then network your computer they then went on to",
    "start": "166560",
    "end": "173340"
  },
  {
    "text": "invent small talk and object oriented programming and bitmap graphics and the",
    "start": "173340",
    "end": "179190"
  },
  {
    "text": "first personal computer that had a graphical user interface which I've got a picture of here",
    "start": "179190",
    "end": "184230"
  },
  {
    "text": "it's the Alto star and they did that all within five years which is pretty amazing when it took us 18 months to",
    "start": "184230",
    "end": "191010"
  },
  {
    "text": "integrate a payment system I'm impressed with that another book which I really",
    "start": "191010",
    "end": "196980"
  },
  {
    "text": "enjoyed reading some years ago was about the race to invent the next generating",
    "start": "196980",
    "end": "202440"
  },
  {
    "text": "next generation operating system around the Windows 3.1 era Microsoft realized",
    "start": "202440",
    "end": "208830"
  },
  {
    "text": "that their architecture wasn't going to cut it they embarked on a joint project with IBM with os/2 warp but secretly",
    "start": "208830",
    "end": "216600"
  },
  {
    "text": "they also set up another project to develop the Windows NT kernel and they",
    "start": "216600",
    "end": "221930"
  },
  {
    "text": "they poached Dave Cutler a computer scientist from digital who I think was",
    "start": "221930",
    "end": "227280"
  },
  {
    "text": "the lead engineer on VMs and and this book goes into some of the technical nitty-gritty that his team went through",
    "start": "227280",
    "end": "234030"
  },
  {
    "text": "as well as some of the interesting politics and Microsoft to get that is really fantastic book so my story is",
    "start": "234030",
    "end": "242100"
  },
  {
    "start": "240000",
    "end": "355000"
  },
  {
    "text": "nowhere near as exciting or interesting as that I'm afraid but it's it's all about day-to-day software development in",
    "start": "242100",
    "end": "248610"
  },
  {
    "text": "small teams and I've worked with the same engineering team across two",
    "start": "248610",
    "end": "254070"
  },
  {
    "text": "different systems and I want to show you we had problems with reliability of",
    "start": "254070",
    "end": "259440"
  },
  {
    "text": "service to service communication on both of those systems and some of the techniques that we use to",
    "start": "259440",
    "end": "265080"
  },
  {
    "text": "make that more reliable so in system one we increase the reliability and we",
    "start": "265080",
    "end": "271680"
  },
  {
    "text": "reduce some of the latency I did a similar thing in system two which is the current platform at forum 3 but we added",
    "start": "271680",
    "end": "278639"
  },
  {
    "text": "circuit circuit breaker technology to protect services under under stress but",
    "start": "278639",
    "end": "284729"
  },
  {
    "text": "we still got quite a bit more work to do with tail latency so what is teh latency",
    "start": "284729",
    "end": "290610"
  },
  {
    "text": "if you line it up all your requests from fastest to slowest you quite often see",
    "start": "290610",
    "end": "296669"
  },
  {
    "text": "that you get this hockey stick at the end of the last one percentile so you",
    "start": "296669",
    "end": "302490"
  },
  {
    "text": "can see it here oops like shaking Hauser and you might",
    "start": "302490",
    "end": "307620"
  },
  {
    "text": "think well that's not really a problem because it's only 1% but if you've got a million users that are making one",
    "start": "307620",
    "end": "313500"
  },
  {
    "text": "request your API that means that a hundred users are going to see the worst part of that tail latency right at the",
    "start": "313500",
    "end": "320310"
  },
  {
    "text": "top and 10,000 of your users are going to see some part of that tail latency so",
    "start": "320310",
    "end": "325439"
  },
  {
    "text": "it does turn out to be quite a big problem and that's amplified if your",
    "start": "325439",
    "end": "330960"
  },
  {
    "text": "page view has several calls to your back-end so if you've got 10 requests going to your back-end that's no longer",
    "start": "330960",
    "end": "336930"
  },
  {
    "text": "10,000 users it's many more so this",
    "start": "336930",
    "end": "341940"
  },
  {
    "text": "first system that we worked on was a trading application you could buy and sell shares commodities and FX you've",
    "start": "341940",
    "end": "351000"
  },
  {
    "text": "probably seen one of these systems before it was the monolith it was the",
    "start": "351000",
    "end": "356520"
  },
  {
    "text": "worst kind of monolith the dreaded distributed monolith where we had all of the trappings of SOA architecture but we",
    "start": "356520",
    "end": "364500"
  },
  {
    "text": "had all the disadvantages of a single shared database and data model so it's",
    "start": "364500",
    "end": "369539"
  },
  {
    "text": "quite hard to work on this system but nonetheless we endeavored the basic design of this system is you've got",
    "start": "369539",
    "end": "375990"
  },
  {
    "text": "requests coming in to the load balance being sent to the API gateway then",
    "start": "375990",
    "end": "381389"
  },
  {
    "text": "popped on a message broker request queue than being DQ'd by one of the service",
    "start": "381389",
    "end": "386639"
  },
  {
    "text": "instances putting back on the request response queue and being sent back to",
    "start": "386639",
    "end": "392039"
  },
  {
    "text": "the user and this this design work worked really well under normal conditions but it didn't always work",
    "start": "392039",
    "end": "399090"
  },
  {
    "text": "and sometimes we got reports from customers that they would do stuff on their UI but nothing would happen and",
    "start": "399090",
    "end": "405300"
  },
  {
    "text": "it's because we were getting timeouts somewhere in this message breaker architecture as we talked around and",
    "start": "405300",
    "end": "412560"
  },
  {
    "text": "asked people what what was this what was the purpose of this message broker because we can see in the code that it",
    "start": "412560",
    "end": "418260"
  },
  {
    "text": "was really doing anything useful and no one really seemed to know why it was there so that was a shame so we decided",
    "start": "418260",
    "end": "425790"
  },
  {
    "text": "to remove it in the lab and we just put a straightforward HTTP load balancer in",
    "start": "425790",
    "end": "431220"
  },
  {
    "text": "between and it worked a whole ton better we're getting much lower latencies and",
    "start": "431220",
    "end": "438080"
  },
  {
    "text": "we thought well we've solved this problem aren't we clever engineer so we sort of high-fived each other went to",
    "start": "438080",
    "end": "444870"
  },
  {
    "text": "the pub problem solved unfortunately about a week later we started getting",
    "start": "444870",
    "end": "450990"
  },
  {
    "text": "these timeouts again so that was a bit annoying so we reopened the project and we noticed that there were very rare",
    "start": "450990",
    "end": "457740"
  },
  {
    "text": "events that would cause these timeouts so there were a lot less frequent now that we've got our load pallets straight",
    "start": "457740",
    "end": "464250"
  },
  {
    "text": "three load bounds but it's one in a million or something would timeout and we notice that these correlated",
    "start": "464250",
    "end": "469889"
  },
  {
    "text": "sometimes with garbage collection events in the in the processes or sometimes",
    "start": "469889",
    "end": "475760"
  },
  {
    "text": "strange Network activity on the network card it would just get saturated so we",
    "start": "475760",
    "end": "481470"
  },
  {
    "text": "came up with the theory that if we just retried the next request would have succeeded because it was just a very",
    "start": "481470",
    "end": "487380"
  },
  {
    "text": "rare event so we introduced this this library in our API gateway which we very",
    "start": "487380",
    "end": "493830"
  },
  {
    "text": "imaginatively called the retry library and it basically just retried the request on one of those rare events and",
    "start": "493830",
    "end": "500840"
  },
  {
    "text": "that approach worked very well so we rolled that out to production thinking",
    "start": "500840",
    "end": "506010"
  },
  {
    "text": "we've definitely solved it this time and lo and behold we'd we'd actually broken",
    "start": "506010",
    "end": "511770"
  },
  {
    "text": "the system quite badly on very busy days because our retry logic didn't have any",
    "start": "511770",
    "end": "517620"
  },
  {
    "text": "back off built into it so if a service was really struggling it now got absolutely hammered by our retry library",
    "start": "517620",
    "end": "526520"
  },
  {
    "text": "so we then started to learn about circuit breakers and why they were a good thing",
    "start": "526520",
    "end": "531620"
  },
  {
    "text": "which sort of now brings us on to the second system of his form 3 we learned a",
    "start": "531620",
    "end": "538760"
  },
  {
    "text": "few lessons about circuit breakers and we wanted to carry those forward into this this new system and we thought well",
    "start": "538760",
    "end": "544790"
  },
  {
    "text": "there's no sense us writing more retry libraries surely you know other people",
    "start": "544790",
    "end": "550460"
  },
  {
    "text": "who are better than us at engineering have solved this problem and spent a lot more time on it and so we started",
    "start": "550460",
    "end": "556339"
  },
  {
    "text": "looking in the open source community to see solutions out there and we found finagle from Twitter and they'd spend a",
    "start": "556339",
    "end": "562820"
  },
  {
    "text": "lot of time doing exactly what we wanted to do there's a slight problem though is it was tied to the JVM which was",
    "start": "562820",
    "end": "570680"
  },
  {
    "text": "something that we we weren't interested in so he started looking further afield and came across linker D and they had",
    "start": "570680",
    "end": "579529"
  },
  {
    "text": "taken the finagle library essentially taken it out of process and they're now",
    "start": "579529",
    "end": "585020"
  },
  {
    "text": "inside the request flow as a proxy and they've added features on top of finagle",
    "start": "585020",
    "end": "590060"
  },
  {
    "text": "but they've got that core 4 Nagel inside it so you get all the good client-side features like timeouts retries on",
    "start": "590060",
    "end": "596540"
  },
  {
    "text": "failures and timeouts they've implemented that important circuit breaker pattern for us it's got a really",
    "start": "596540",
    "end": "602900"
  },
  {
    "text": "good way to do security using TLS it's just quite straightforward and it's got",
    "start": "602900",
    "end": "609740"
  },
  {
    "text": "the ability to very easily integrate with common service discovery tools it",
    "start": "609740",
    "end": "615980"
  },
  {
    "text": "can do different types of deployments integrates with distributed tracing and",
    "start": "615980",
    "end": "623920"
  },
  {
    "text": "here I've got a distributed trace for you that is an example from our early",
    "start": "623920",
    "end": "629089"
  },
  {
    "text": "prototype of one of our core payments api's it's quite hard to see on this on this slide but essentially this call",
    "start": "629089",
    "end": "638630"
  },
  {
    "text": "stack will enable you to look at what micro services are calling what Microsoft is in at the top here you can",
    "start": "638630",
    "end": "645410"
  },
  {
    "text": "see that we're calling the payment API but that is in turn calling the user API to check that you're allowed to carrying",
    "start": "645410",
    "end": "652640"
  },
  {
    "text": "out that function but for some reason the user API is then calling a whole bunch of other services and we hadn't",
    "start": "652640",
    "end": "658310"
  },
  {
    "text": "realized that until we started looking at these tracing graphs and that led us to redesign this",
    "start": "658310",
    "end": "663820"
  },
  {
    "text": "payments API systems so that we were using JWT tokens to sort of distribute",
    "start": "663820",
    "end": "669090"
  },
  {
    "text": "permissioning around the system and then we didn't need to call the user service quite so often so these the sort of",
    "start": "669090",
    "end": "676090"
  },
  {
    "text": "tracing grass works sort of critical in our early development cycles and we still use them regulate to debug",
    "start": "676090",
    "end": "683290"
  },
  {
    "text": "production issues so we decided to",
    "start": "683290",
    "end": "688840"
  },
  {
    "text": "deploy link ID in its most common deployment model which is called linker to linker where each node in your system",
    "start": "688840",
    "end": "696400"
  },
  {
    "text": "has a local link ID daemon and you proxy all your service to service communication through linker d-- we also",
    "start": "696400",
    "end": "704080"
  },
  {
    "text": "proxy outbound traffic to third parties through Lincoln T as well so that we get visibility on calling third parties and",
    "start": "704080",
    "end": "713320"
  },
  {
    "text": "you might think well this this kind of looks like a bit of an overkill why would a why would I want to do this well",
    "start": "713320",
    "end": "719380"
  },
  {
    "text": "you get all of those client-side benefits which we talked about earlier the retries and you also get the ability",
    "start": "719380",
    "end": "725920"
  },
  {
    "text": "to have all your traffic encrypted and you only need to worry about managing",
    "start": "725920",
    "end": "731220"
  },
  {
    "text": "encryption in one component of your system for for sort of on the wire encryption so you don't need to worry",
    "start": "731220",
    "end": "738610"
  },
  {
    "text": "about how do you do a TLS in java 1.8 how do you do it in golang how do you",
    "start": "738610",
    "end": "743950"
  },
  {
    "text": "net we just encrypt it using the kadhi and the other services don't need to",
    "start": "743950",
    "end": "749140"
  },
  {
    "text": "worry about that concern and the management of those certificates is simplified because we know that they're only in link a D so that we're obviously",
    "start": "749140",
    "end": "757570"
  },
  {
    "text": "don't let them expire another benefit that we sort of fell into really was that we then noticed that the only",
    "start": "757570",
    "end": "764680"
  },
  {
    "text": "communication between nodes was going by link a D so we locked down the security",
    "start": "764680",
    "end": "769690"
  },
  {
    "text": "groups on our ec2 instances so that we only allowed a link a D traffic to talk to each other which sort of narrowed the",
    "start": "769690",
    "end": "777700"
  },
  {
    "text": "attack surface and allowed us to sort of prioritize patches to to link a D or JVM",
    "start": "777700",
    "end": "783070"
  },
  {
    "text": "related patches which was useful ok so I've got a two little demos for you",
    "start": "783070",
    "end": "789220"
  },
  {
    "start": "785000",
    "end": "1100000"
  },
  {
    "text": "today the first demo sort of represents system one before we started work on it",
    "start": "789220",
    "end": "794860"
  },
  {
    "text": "and I wanted to show you what what that looks like to the end-user so I created 10 virtual users",
    "start": "794860",
    "end": "802850"
  },
  {
    "text": "using a little tool called k6 which i came across while preparing this this",
    "start": "802850",
    "end": "808640"
  },
  {
    "text": "demo it's a very easy way to do some load testing and it publishes its",
    "start": "808640",
    "end": "813950"
  },
  {
    "text": "metrics to in flux and we can then look at them in ingre fauna and it's just going to send those requests to a load",
    "start": "813950",
    "end": "821750"
  },
  {
    "text": "balancer which distributes it to these services and I've got four instances of",
    "start": "821750",
    "end": "827330"
  },
  {
    "text": "the same service to a super-healthy which are these if I can do this which is that one in that one at the bottom",
    "start": "827330",
    "end": "833540"
  },
  {
    "text": "and then one has got this delay sickness it's a mild case of delay sickness only",
    "start": "833540",
    "end": "840970"
  },
  {
    "text": "two percent of traffic will get delayed by about one second and then the third",
    "start": "840970",
    "end": "846770"
  },
  {
    "text": "instance has got a terrible bout of 503 sickness and it's been hospitalized so",
    "start": "846770",
    "end": "854060"
  },
  {
    "text": "40% of that traffic is going to return a 503 so I just start up this demo and",
    "start": "854060",
    "end": "861860"
  },
  {
    "text": "then we'll have a little look at the docker compose file",
    "start": "861860",
    "end": "866350"
  },
  {
    "text": "dr. Campos but I don't know if anyone else to solve this problem but the sort",
    "start": "894500",
    "end": "900620"
  },
  {
    "text": "of getting all the timing right I had to to use some some little bash scripts that I put in the the bootstrapping of",
    "start": "900620",
    "end": "907670"
  },
  {
    "text": "this but it seemed a bit awkward but it's the only way I could get it to work properly so you can see that it's kind of sleeping waiting for that load",
    "start": "907670",
    "end": "913940"
  },
  {
    "text": "balancer to come up thankfully it has come up so now the load testing tool is going to kick off those requests so I",
    "start": "913940",
    "end": "921710"
  },
  {
    "text": "thought it might be worth just quickly taking a look at some of the docker files here so at the top I've got this",
    "start": "921710",
    "end": "931840"
  },
  {
    "text": "traffic simulator using k6 is very easy to create ten virtual users and have",
    "start": "931840",
    "end": "938660"
  },
  {
    "text": "this little javascript file run for five minutes and this javascript file is dead",
    "start": "938660",
    "end": "945410"
  },
  {
    "text": "simple it just hits the load balancer endpoint and by default k6 publishes a",
    "start": "945410",
    "end": "951890"
  },
  {
    "text": "lot of interesting metrics to in flux but bizarrely didn't publish the HTTP",
    "start": "951890",
    "end": "957080"
  },
  {
    "text": "status code so I hacked together a little statement there to add some",
    "start": "957080",
    "end": "963140"
  },
  {
    "text": "buckets so we've now got it hitting the load balancer which as I mentioned is a",
    "start": "963140",
    "end": "969500"
  },
  {
    "text": "nginx configuration and is really straightforward it's just listening on port 80 there and then it's proxying",
    "start": "969500",
    "end": "977060"
  },
  {
    "text": "everything to this upstream label system one and here we've got those four services defined there so it's going to",
    "start": "977060",
    "end": "983540"
  },
  {
    "text": "round-robin each of those services and here you can see that the I wrote a",
    "start": "983540",
    "end": "990950"
  },
  {
    "text": "little echo program and if you it just echoes out this text but then you can",
    "start": "990950",
    "end": "996740"
  },
  {
    "text": "give it these sicknesses like delay or response code and then the rest of this",
    "start": "996740",
    "end": "1002290"
  },
  {
    "text": "file has just got the infrastructure now my Mac might start to levitate as well",
    "start": "1002290",
    "end": "1008710"
  },
  {
    "text": "the fans spin up because this is quite intensive stuff but we can now go and",
    "start": "1008710",
    "end": "1014860"
  },
  {
    "text": "look at the result of this in and you can see that we've got quite a lot of",
    "start": "1014860",
    "end": "1020040"
  },
  {
    "text": "error codes coming here roughly about 10% and we've got also we've got these",
    "start": "1020040",
    "end": "1026140"
  },
  {
    "text": "outliers that have delayed for about one second so you know that was sort of an",
    "start": "1026140",
    "end": "1033339"
  },
  {
    "text": "exaggerated view of that first system before we started working on it if I quickly go back to now just in case I",
    "start": "1033339",
    "end": "1041290"
  },
  {
    "text": "hadn't gone to the demo God's altar frequently enough over the weekend I had some some canned screenshots but show",
    "start": "1041290",
    "end": "1047920"
  },
  {
    "text": "the results of that demo so the second the second demo is is very similar but",
    "start": "1047920",
    "end": "1055000"
  },
  {
    "text": "we will inject link addi into the request flow and I should note that you",
    "start": "1055000",
    "end": "1060820"
  },
  {
    "text": "could remove nginx here but just because I was lazy I didn't want to change this",
    "start": "1060820",
    "end": "1066490"
  },
  {
    "text": "load testing script so I just kept it in there and so that link addy knows where",
    "start": "1066490",
    "end": "1071740"
  },
  {
    "text": "those services are I decided to use console which was dead easy to set up",
    "start": "1071740",
    "end": "1077200"
  },
  {
    "text": "for link addy so we just stopped that",
    "start": "1077200",
    "end": "1083020"
  },
  {
    "text": "demo and start the next one",
    "start": "1083020",
    "end": "1088230"
  },
  {
    "text": "I need some sort of intermission music or something to keep this guy but I just",
    "start": "1096210",
    "end": "1102480"
  },
  {
    "start": "1100000",
    "end": "1370000"
  },
  {
    "text": "want to chat something this this has never failed in the 10 times that I've practiced it that you never know yeah",
    "start": "1102480",
    "end": "1112590"
  },
  {
    "text": "there we go so it's come up so the second doctor compose file is very",
    "start": "1112590",
    "end": "1118620"
  },
  {
    "text": "similar we got all the same components but we've added a few new ones so we've got the linker D container here which is",
    "start": "1118620",
    "end": "1125760"
  },
  {
    "text": "very simple setup all you need to do is Mount a volume that's got your configuration file on it and we worth looking at that very",
    "start": "1125760",
    "end": "1133980"
  },
  {
    "text": "quickly this is sort of what's required to get console integration you just add this name er here and then we've created",
    "start": "1133980",
    "end": "1141150"
  },
  {
    "text": "one simple Rooter and we've given it some sort of characteristics it's",
    "start": "1141150",
    "end": "1146310"
  },
  {
    "text": "allowed to retry failed requests and this percent can retry basically means",
    "start": "1146310",
    "end": "1151710"
  },
  {
    "text": "for every successful request you can retry twice for failure and then we've",
    "start": "1151710",
    "end": "1158370"
  },
  {
    "text": "given it some very aggressive timeouts which are not really production kind of",
    "start": "1158370",
    "end": "1165900"
  },
  {
    "text": "timeouts it was just to demonstrate the demo of how link addi will will kick in on a on the timed out request and retry",
    "start": "1165900",
    "end": "1173250"
  },
  {
    "text": "it and the reason that link addi is able to find our services is we've got this d",
    "start": "1173250",
    "end": "1179850"
  },
  {
    "text": "tab here which which took me a while to get my head around d tab it's sort of a bit like regex you learn it then you",
    "start": "1179850",
    "end": "1187020"
  },
  {
    "text": "forget it then you learn it again so yeah essentially what it does here is it",
    "start": "1187020",
    "end": "1192720"
  },
  {
    "text": "uses this identifier and says that the first segment of the URI so after the",
    "start": "1192720",
    "end": "1198330"
  },
  {
    "text": "host it's like slash service 1 it will then pipe that to console and ask for service",
    "start": "1198330",
    "end": "1206220"
  },
  {
    "text": "1 instances so I can show you that here I've got console running if we just go",
    "start": "1206220",
    "end": "1215520"
  },
  {
    "text": "back and refresh that it's going to pass service 1 to link a d-link ADIZ going to",
    "start": "1215520",
    "end": "1221190"
  },
  {
    "text": "hand that to console and console is going to come back with these four nodes and it's going to send it the IP address",
    "start": "1221190",
    "end": "1227430"
  },
  {
    "text": "and port numbers and we had to update nginx make it a bit",
    "start": "1227430",
    "end": "1233890"
  },
  {
    "text": "simpler so instead of proxying to its upstream label it just forwards all the traffic to link addy and that's that",
    "start": "1233890",
    "end": "1240070"
  },
  {
    "text": "path segment that I was talking about that's used in the lookup so those details can be a little bit more",
    "start": "1240070",
    "end": "1245920"
  },
  {
    "text": "complicated this is probably the simplest detail you'll ever see so yeah",
    "start": "1245920",
    "end": "1253660"
  },
  {
    "text": "the only other thing I needed to do was somehow register the services with consoles they spun up so an easy",
    "start": "1253660",
    "end": "1259420"
  },
  {
    "text": "technique to do this is to use console registrate err which is a little docker container that hooks into the docker",
    "start": "1259420",
    "end": "1266080"
  },
  {
    "text": "socket and listens for containers spinning up and anything that's got exposed port it will register in console",
    "start": "1266080",
    "end": "1272860"
  },
  {
    "text": "for you so it's very useful for this sort of demonstration stuff we also use it in our production platform as well",
    "start": "1272860",
    "end": "1279670"
  },
  {
    "text": "and then I added the infrastructure components so hopefully whilst I've been",
    "start": "1279670",
    "end": "1286270"
  },
  {
    "text": "speaking this has been going nice in the background if we go back to Agri fauna",
    "start": "1286270",
    "end": "1292600"
  },
  {
    "text": "status codes you should see that we've had a lot less errors during demo 2 in",
    "start": "1292600",
    "end": "1299980"
  },
  {
    "text": "fact none and we've also pulled in some of those outliers they're now sort of at hovering and",
    "start": "1299980",
    "end": "1307570"
  },
  {
    "text": "they're still infrequently but they're hovering around 200 milliseconds I'll",
    "start": "1307570",
    "end": "1313420"
  },
  {
    "text": "just show you the home page or graph honor because the k6 guys have done a nice job of sending some metrics with",
    "start": "1313420",
    "end": "1318760"
  },
  {
    "text": "their load balancing that load testing tool so you can see here a few more things of the percentiles for those",
    "start": "1318760",
    "end": "1325530"
  },
  {
    "text": "durations so just to show that it's not",
    "start": "1325530",
    "end": "1330610"
  },
  {
    "text": "all smoke and mirrors I think it's interesting to look at the the link addy dashboard this is what each node of link",
    "start": "1330610",
    "end": "1337210"
  },
  {
    "text": "Rd has its own dashboard and you can see real-time statistics so you can see here",
    "start": "1337210",
    "end": "1342730"
  },
  {
    "text": "at the top we've got the Rueter and it's got a hundred percent success but you can see down here that this retry budget",
    "start": "1342730",
    "end": "1349840"
  },
  {
    "text": "is flickering that's because failures are occurring in in the network but it's retrying them",
    "start": "1349840",
    "end": "1355570"
  },
  {
    "text": "and then you get a breakdown per service and you can see here retries and",
    "start": "1355570",
    "end": "1360730"
  },
  {
    "text": "failures occurring regularly as we go long but the end-user isn't getting any",
    "start": "1360730",
    "end": "1366610"
  },
  {
    "text": "of those errors back because we plugged into Zipkin and we can go and look at",
    "start": "1366610",
    "end": "1372400"
  },
  {
    "start": "1370000",
    "end": "1520000"
  },
  {
    "text": "some of the tracing so this was a happy",
    "start": "1372400",
    "end": "1378760"
  },
  {
    "text": "path trace so the outer span is the ingress into link a D so that's our",
    "start": "1378760",
    "end": "1384130"
  },
  {
    "text": "request going into link Adeel 4140 then link ID is calling our service service",
    "start": "1384130",
    "end": "1389830"
  },
  {
    "text": "one that's that span and it's taking seven milliseconds to process that get",
    "start": "1389830",
    "end": "1394990"
  },
  {
    "text": "request then the last span I just wanted to demonstrate how as a developer you",
    "start": "1394990",
    "end": "1400179"
  },
  {
    "text": "can send your own telemetry to Zipkin so in my little go program I've sent it a",
    "start": "1400179",
    "end": "1406050"
  },
  {
    "text": "span that said that this this data access took 12 microseconds but if we",
    "start": "1406050",
    "end": "1414280"
  },
  {
    "text": "look at let's try and find some more interesting ones so maybe this one that's okay so this this one's an",
    "start": "1414280",
    "end": "1420760"
  },
  {
    "text": "example of a retry so here you can understand why Lincoln D was retry so if we click on this span here you can",
    "start": "1420760",
    "end": "1429280"
  },
  {
    "text": "see that it got a 503 back from the service so that's why it did the retry",
    "start": "1429280",
    "end": "1435340"
  },
  {
    "text": "and if you hover over there you can see the annotation and it I think it got",
    "start": "1435340",
    "end": "1440440"
  },
  {
    "text": "that twice before the last one was successful we can also look up super",
    "start": "1440440",
    "end": "1448660"
  },
  {
    "text": "slow requests in Zipkin and take a look at those so here's one that took a took",
    "start": "1448660",
    "end": "1455140"
  },
  {
    "text": "a second but what's interesting about this one is although that span here took a second you can see that the user got a",
    "start": "1455140",
    "end": "1463030"
  },
  {
    "text": "reply in 200 milliseconds that's because link addy if we click here it timed out",
    "start": "1463030",
    "end": "1470200"
  },
  {
    "text": "that request that was taking a long time and you can see the information in here that's saying it's timed out and then",
    "start": "1470200",
    "end": "1475720"
  },
  {
    "text": "it's retried it",
    "start": "1475720",
    "end": "1478530"
  },
  {
    "text": "okay so that is the end of that demo",
    "start": "1487590",
    "end": "1492740"
  },
  {
    "text": "so here the the sort of results of those two demos side by side and I think you can it's obvious to see the error rates",
    "start": "1503320",
    "end": "1509770"
  },
  {
    "text": "have dropped and those outliers have changed that y-axis is is different",
    "start": "1509770",
    "end": "1515230"
  },
  {
    "text": "instead of a second it's 200 milliseconds so I recently read a paper",
    "start": "1515230",
    "end": "1521590"
  },
  {
    "start": "1520000",
    "end": "1599000"
  },
  {
    "text": "that Google published about the Taylor scale so this is an approach that Google",
    "start": "1521590",
    "end": "1527590"
  },
  {
    "text": "have taken further reducing those those outliers because you can't really just",
    "start": "1527590",
    "end": "1532750"
  },
  {
    "text": "use timeouts that doesn't really work by lowering the time that's super low in",
    "start": "1532750",
    "end": "1538360"
  },
  {
    "text": "production that's that's not really feasible for various different reasons so Google's approach to this was to use",
    "start": "1538360",
    "end": "1545590"
  },
  {
    "text": "a technique that they've called hedge requests which is essentially they're betting on the fact that there's a small",
    "start": "1545590",
    "end": "1552940"
  },
  {
    "text": "chance the request is going to go wrong so rather than take the hit of retrying that timed out request and the end user",
    "start": "1552940",
    "end": "1559810"
  },
  {
    "text": "getting a bad experience they will hedge that and send multiple requests all at the same time",
    "start": "1559810",
    "end": "1565330"
  },
  {
    "text": "and that paper takes you through in quite a lot of detail their approach to",
    "start": "1565330",
    "end": "1571270"
  },
  {
    "text": "that so I'm not sure if that's an avenue that we're going to go down in the future or if the the community is is",
    "start": "1571270",
    "end": "1579340"
  },
  {
    "text": "going to go down down that Avenue with with service measures but it would be interesting to see if that's an approach",
    "start": "1579340",
    "end": "1585280"
  },
  {
    "text": "that we can use so here you can see that the third service was the first chat to",
    "start": "1585280",
    "end": "1590920"
  },
  {
    "text": "respond and then the other two got a cancellation message to say don't bother processing so yeah it's wrap it all up",
    "start": "1590920",
    "end": "1600460"
  },
  {
    "start": "1599000",
    "end": "1615000"
  },
  {
    "text": "we've really enjoyed using link addy and we've seen that it's been an easy way to",
    "start": "1600460",
    "end": "1605530"
  },
  {
    "text": "implement the the retry and circuit breaker patterns and to manage TLS and",
    "start": "1605530",
    "end": "1610800"
  },
  {
    "text": "and definitely very helpful with the distributed tracing so I just wanted to",
    "start": "1610800",
    "end": "1616750"
  },
  {
    "start": "1615000",
    "end": "1710000"
  },
  {
    "text": "say thanks very much to to the linker D community and its maintainer z' they've",
    "start": "1616750",
    "end": "1622660"
  },
  {
    "text": "been super helpful whenever we've had problems that they're always there on slack it's a very welcoming place so",
    "start": "1622660",
    "end": "1629740"
  },
  {
    "text": "thanks very much those guys this demo is sort of party bag wrapped you",
    "start": "1629740",
    "end": "1635149"
  },
  {
    "text": "can take it home with you if you want to clone that repo you can just try it out at home and yet if I need to mention",
    "start": "1635149",
    "end": "1643009"
  },
  {
    "text": "that we're a young startup a small team then we're looking to grow we're looking",
    "start": "1643009",
    "end": "1649219"
  },
  {
    "text": "to hire engineers remotely or working in our London office we're looking for",
    "start": "1649219",
    "end": "1654979"
  },
  {
    "text": "people that are interested in open source sort of cloud native programming",
    "start": "1654979",
    "end": "1660440"
  },
  {
    "text": "and software as well as people that think that payments is something that might be able to interest them during",
    "start": "1660440",
    "end": "1666499"
  },
  {
    "text": "their day job so yeah thank you very much sir any questions yeah",
    "start": "1666499",
    "end": "1685179"
  },
  {
    "text": "do you mean like a sidecar deployment I think I mean I'm not a suit I'm not a",
    "start": "1693520",
    "end": "1700280"
  },
  {
    "text": "super expert on these deployment models but as I understand it if you have the benefit of the sidecar approach is if",
    "start": "1700280",
    "end": "1706610"
  },
  {
    "text": "the linker Dean know died your other services would still be alive but in our",
    "start": "1706610",
    "end": "1712460"
  },
  {
    "text": "deployment model that per the per host deployment if linker D dies you need to consider that whole hostess is dead the",
    "start": "1712460",
    "end": "1720440"
  },
  {
    "text": "sort of disadvantage of the sidecar I suppose is that at the moment linka D is based on the JVM so it has quite high",
    "start": "1720440",
    "end": "1727100"
  },
  {
    "text": "memory footprint so you'd need to bear that in mind I suppose yeah",
    "start": "1727100",
    "end": "1738580"
  },
  {
    "text": "we did measure it earlier on in the project the the extra overhead of using linker D and for our sort of scenario of",
    "start": "1744930",
    "end": "1752970"
  },
  {
    "start": "1745000",
    "end": "1812000"
  },
  {
    "text": "our latency kind of requirements it was it was negligible it's also the",
    "start": "1752970",
    "end": "1759120"
  },
  {
    "text": "communication happens locally on the node so it's not extra and network hop",
    "start": "1759120",
    "end": "1764640"
  },
  {
    "text": "over a wire it's an extra local loopback hop so we we decided that for the",
    "start": "1764640",
    "end": "1772050"
  },
  {
    "text": "benefits that it gave us that was a trade-off that we were happy to make",
    "start": "1772050",
    "end": "1779060"
  },
  {
    "text": "-",
    "start": "1792050",
    "end": "1795050"
  },
  {
    "text": "so it was your question it could talk to any service discovery oh yeah yeah so",
    "start": "1797220",
    "end": "1812760"
  },
  {
    "start": "1812000",
    "end": "1850000"
  },
  {
    "text": "that's right yeah console was used for that for this demonstration just as it was an easy route to get it up and",
    "start": "1812760",
    "end": "1818490"
  },
  {
    "text": "running but yeah you could plug into any service discovery I've forgotten the",
    "start": "1818490",
    "end": "1824580"
  },
  {
    "text": "list of ones that it supports but it's quite a long list if memory serves we",
    "start": "1824580",
    "end": "1829680"
  },
  {
    "text": "use console on our production platform that's why I'm sort of comfortable using",
    "start": "1829680",
    "end": "1835050"
  },
  {
    "text": "it yeah I guess that's another good thing about link is it so it plays nicely with lots of other tools yeah",
    "start": "1835050",
    "end": "1844850"
  },
  {
    "text": "yeah so your question at the moment we're not running on kubernetes when we",
    "start": "1849770",
    "end": "1856050"
  },
  {
    "start": "1850000",
    "end": "1900000"
  },
  {
    "text": "built the platform at the time we we didn't know much about kubernetes and was quite a small engineering team so we",
    "start": "1856050",
    "end": "1862110"
  },
  {
    "text": "we went what we're comfortable with and we didn't have a lot of time to spend on on sort of docker orchestration so we're",
    "start": "1862110",
    "end": "1870180"
  },
  {
    "text": "running on ECS at the moment and I think that's definitely something that we want to look into in the near future is going",
    "start": "1870180",
    "end": "1877140"
  },
  {
    "text": "to a better Orchestrator so so I can't I can't answer that question any more than",
    "start": "1877140",
    "end": "1883890"
  },
  {
    "text": "that hi",
    "start": "1883890",
    "end": "1889790"
  },
  {
    "text": "yes I think the question is how does a service mesh replace the distributed",
    "start": "1899830",
    "end": "1905510"
  },
  {
    "start": "1900000",
    "end": "1945000"
  },
  {
    "text": "system or if it doesn't sorry dispute racing system yeah so I",
    "start": "1905510",
    "end": "1910670"
  },
  {
    "text": "mean in my experience they sort of go hand in hand so we're using open tracing and Zipkin and we use it integrated into",
    "start": "1910670",
    "end": "1919970"
  },
  {
    "text": "linka d and we also send trace telemetry outside of linker D so they sort of work",
    "start": "1919970",
    "end": "1926060"
  },
  {
    "text": "together quite nicely",
    "start": "1926060",
    "end": "1930340"
  },
  {
    "text": "yeah so we that that's right in I probably should have done that and it's a my bad removed nginx from the second",
    "start": "1943889",
    "end": "1951399"
  },
  {
    "start": "1945000",
    "end": "2009000"
  },
  {
    "text": "demo because linka D has got its own load balancer with several different algorithms that you can choose from and",
    "start": "1951399",
    "end": "1959019"
  },
  {
    "text": "I'm not qualified to speak on all of those algorithms but I know that the default one is fairly sensible but they",
    "start": "1959019",
    "end": "1967750"
  },
  {
    "text": "tend to be much more intelligent than your traditional Hardware load balancers because they have a lot more data about",
    "start": "1967750",
    "end": "1974970"
  },
  {
    "text": "how services are performing and which network routes are the quickest because they're in the flow of the traffic and",
    "start": "1974970",
    "end": "1981490"
  },
  {
    "text": "they're analyzing the response times so yeah we don't use load balancers in",
    "start": "1981490",
    "end": "1987009"
  },
  {
    "text": "production sort of at that part of the infrastructure we only use them right at the top at the ingress from the sort of",
    "start": "1987009",
    "end": "1993460"
  },
  {
    "text": "the public routes in sorry yeah",
    "start": "1993460",
    "end": "2001278"
  },
  {
    "text": "yes sir only it only can load balance as far as I'm aware HTTP traffic they have",
    "start": "2008180",
    "end": "2013890"
  },
  {
    "start": "2009000",
    "end": "2043000"
  },
  {
    "text": "another project that I'm not familiar with called link addy TCP which i think is now superseded by conduit which does",
    "start": "2013890",
    "end": "2021120"
  },
  {
    "text": "TCP load balancing but you want to talk to the link addy guys at the booth about",
    "start": "2021120",
    "end": "2027720"
  },
  {
    "text": "that they're they're the experts sorry",
    "start": "2027720",
    "end": "2032480"
  },
  {
    "start": "2043000",
    "end": "2210000"
  },
  {
    "text": "so I did would it be okay to yell at microphone I can't I can't hear you - sorry my question was if you know if",
    "start": "2043030",
    "end": "2051520"
  },
  {
    "text": "linker D has any feature for sticky session or session affinity so layer",
    "start": "2051520",
    "end": "2056800"
  },
  {
    "text": "seven load-balancing based on some key alright that's a great question I have",
    "start": "2056800",
    "end": "2064690"
  },
  {
    "text": "no idea I'm sorry we don't have that scenario to worry about in our infrastructure so it's not something",
    "start": "2064690",
    "end": "2070570"
  },
  {
    "text": "we've come across sorry I think there's a question over here yeah yeah so the",
    "start": "2070570",
    "end": "2084370"
  },
  {
    "text": "question is do we plan to use the link a derating to do canary releases we really",
    "start": "2084370",
    "end": "2091388"
  },
  {
    "text": "want to look at our deployment model sort of holistically so at the moment",
    "start": "2091389",
    "end": "2097320"
  },
  {
    "text": "that's one of the things as a big project that we want to kick off is how do we do deployments canary deployments",
    "start": "2097320",
    "end": "2102700"
  },
  {
    "text": "I think that's definitely an option isn't it as I've seen it's a feature it's not one that we use at the moment",
    "start": "2102700",
    "end": "2108690"
  },
  {
    "text": "but I think that's it I'm hoping to talk to people at this conference and get a view on the different ways that we can",
    "start": "2108690",
    "end": "2115240"
  },
  {
    "text": "do deploys we haven't solved that one yet so I here first and then I'll get back to you yes",
    "start": "2115240",
    "end": "2122820"
  },
  {
    "text": "sorry can you use the microphone I've really struggling to hear yes do you",
    "start": "2137250",
    "end": "2146610"
  },
  {
    "text": "know how how we can configure liquor D to handle the post requests for example your requests and just want one single",
    "start": "2146610",
    "end": "2153870"
  },
  {
    "text": "request to be executed like you are doing our reservation yes a lincolnís",
    "start": "2153870",
    "end": "2159510"
  },
  {
    "text": "got the option on the retries to to say only retry like get requests or you can",
    "start": "2159510",
    "end": "2166170"
  },
  {
    "text": "configure it to also retry like post patch put delete requests so depending",
    "start": "2166170",
    "end": "2173550"
  },
  {
    "text": "on your how idempotent your your back-end is you can configure it either way so we use request IDs in our system",
    "start": "2173550",
    "end": "2182490"
  },
  {
    "text": "to make all requests idempotent so we can retry any of them but i guess",
    "start": "2182490",
    "end": "2190320"
  },
  {
    "text": "everyone's situation might differ on that",
    "start": "2190320",
    "end": "2194300"
  },
  {
    "text": "yeah",
    "start": "2202030",
    "end": "2205030"
  },
  {
    "text": "yeah that's a good question I we've not seen that but I guess it must be an",
    "start": "2209980",
    "end": "2216010"
  },
  {
    "text": "option as it's running on the JVM so that's a good question",
    "start": "2216010",
    "end": "2223170"
  },
  {
    "text": "see oh sorry i do apologize i'm not i'm not a link at the expert I was but I'm",
    "start": "2233170",
    "end": "2239060"
  },
  {
    "text": "struggling with some of these questions but that's an interesting one okay",
    "start": "2239060",
    "end": "2247660"
  },
  {
    "text": "so we have a request ID and if the",
    "start": "2253160",
    "end": "2259259"
  },
  {
    "text": "backend has already seen that request ID it will throw it away but if it hasn't seen it it will then process it so it's",
    "start": "2259259",
    "end": "2266430"
  },
  {
    "text": "quite a simple technique to know if we've processed a request or not so if",
    "start": "2266430",
    "end": "2271799"
  },
  {
    "text": "it's lost in between the client sending in the service receiving its it will be",
    "start": "2271799",
    "end": "2278849"
  },
  {
    "text": "safe to do the retry yeah so the idea is",
    "start": "2278849",
    "end": "2286410"
  },
  {
    "text": "sort of stored forever with the resource that you're creating so maybe one last",
    "start": "2286410",
    "end": "2294420"
  },
  {
    "text": "question we better wrap it up",
    "start": "2294420",
    "end": "2297499"
  },
  {
    "text": "yeah I've not found how to do that that's a good something I've often wondered is how because the information",
    "start": "2305120",
    "end": "2311360"
  },
  {
    "text": "that you get in a zip code is it's just the status code you can't see the",
    "start": "2311360",
    "end": "2316670"
  },
  {
    "text": "request so we've had to fall back to other mechanisms for logging that at a different place in the sort of the",
    "start": "2316670",
    "end": "2323270"
  },
  {
    "text": "infrastructure but we do have a way of like logging the dumping the whole thing but it I've not found a way to do that",
    "start": "2323270",
    "end": "2329330"
  },
  {
    "text": "with link addy all right thanks a lot guys yes",
    "start": "2329330",
    "end": "2334390"
  },
  {
    "text": "[Applause]",
    "start": "2334390",
    "end": "2336760"
  }
]