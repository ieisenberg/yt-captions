[
  {
    "text": "hello everyone Thank you for so much for",
    "start": "1199",
    "end": "4400"
  },
  {
    "text": "joining my session",
    "start": "4400",
    "end": "6919"
  },
  {
    "text": "today Let me ask you a quick question",
    "start": "6919",
    "end": "10160"
  },
  {
    "text": "Can you put survival",
    "start": "10160",
    "end": "12440"
  },
  {
    "text": "restart Potter restarts might sound",
    "start": "12440",
    "end": "15440"
  },
  {
    "text": "basic but handling them correctly is a",
    "start": "15440",
    "end": "18560"
  },
  {
    "text": "bit",
    "start": "18560",
    "end": "19640"
  },
  {
    "text": "challenging Kubernetes restart port in",
    "start": "19640",
    "end": "22640"
  },
  {
    "text": "many situations And if your pot isn't",
    "start": "22640",
    "end": "25519"
  },
  {
    "text": "ready for prepare for that you could run",
    "start": "25519",
    "end": "28240"
  },
  {
    "text": "into unexpected",
    "start": "28240",
    "end": "32079"
  },
  {
    "text": "issues Before we dive in let me briefly",
    "start": "32360",
    "end": "35360"
  },
  {
    "text": "introduce myself My name is Ay Zawa I'm",
    "start": "35360",
    "end": "38399"
  },
  {
    "text": "member of technical staff at Crownatics",
    "start": "38399",
    "end": "41200"
  },
  {
    "text": "I'm currently developing L Marina It's a",
    "start": "41200",
    "end": "44559"
  },
  {
    "text": "open source AI platform for Kubernetes",
    "start": "44559",
    "end": "47920"
  },
  {
    "text": "So today I going to show you some",
    "start": "47920",
    "end": "49920"
  },
  {
    "text": "insights I learned over the years",
    "start": "49920",
    "end": "54680"
  },
  {
    "text": "Here is the today's agenda I going to",
    "start": "54680",
    "end": "57920"
  },
  {
    "text": "show you how to reduce the impact of",
    "start": "57920",
    "end": "60399"
  },
  {
    "text": "restart using three different type of",
    "start": "60399",
    "end": "62800"
  },
  {
    "text": "application as example Let's move",
    "start": "62800",
    "end": "67320"
  },
  {
    "text": "on So why does restart matter It comes",
    "start": "67320",
    "end": "72479"
  },
  {
    "text": "down how Kubernetes traits your app You",
    "start": "72479",
    "end": "76080"
  },
  {
    "text": "might have heard the famous analogy",
    "start": "76080",
    "end": "79200"
  },
  {
    "text": "Kubernetes treats you up more like",
    "start": "79200",
    "end": "81200"
  },
  {
    "text": "cattle rather than pet But what does",
    "start": "81200",
    "end": "84600"
  },
  {
    "text": "mean If your application is a pet it",
    "start": "84600",
    "end": "88080"
  },
  {
    "text": "requires special care manual",
    "start": "88080",
    "end": "91400"
  },
  {
    "text": "intervention every time it goes wrong",
    "start": "91400",
    "end": "94479"
  },
  {
    "text": "But Kubernetes is optimized for cattle",
    "start": "94479",
    "end": "98320"
  },
  {
    "text": "In fact many powerful features such as",
    "start": "98320",
    "end": "100640"
  },
  {
    "text": "self-heering roaring upgrade and",
    "start": "100640",
    "end": "103159"
  },
  {
    "text": "autocaring fundamentally rely on",
    "start": "103159",
    "end": "105880"
  },
  {
    "text": "restarts So take out take advantage of",
    "start": "105880",
    "end": "109920"
  },
  {
    "text": "those powerful features Put",
    "start": "109920",
    "end": "111840"
  },
  {
    "text": "restartability as",
    "start": "111840",
    "end": "115600"
  },
  {
    "text": "important A restart isn't just a single",
    "start": "117159",
    "end": "120240"
  },
  {
    "text": "scenario",
    "start": "120240",
    "end": "121759"
  },
  {
    "text": "We'll dive into the detail later but for",
    "start": "121759",
    "end": "124640"
  },
  {
    "text": "now let's get a high level",
    "start": "124640",
    "end": "126759"
  },
  {
    "text": "overview at the container level if your",
    "start": "126759",
    "end": "130080"
  },
  {
    "text": "container exit or livveness prove",
    "start": "130080",
    "end": "132760"
  },
  {
    "text": "failure the kubert",
    "start": "132760",
    "end": "135480"
  },
  {
    "text": "restarted and second at the replica set",
    "start": "135480",
    "end": "139120"
  },
  {
    "text": "level even if your part gets the readed",
    "start": "139120",
    "end": "142160"
  },
  {
    "text": "it automatically recreated by the",
    "start": "142160",
    "end": "145239"
  },
  {
    "text": "controller to keep the desired replica",
    "start": "145239",
    "end": "148160"
  },
  {
    "text": "count at the deployment level during ing",
    "start": "148160",
    "end": "151599"
  },
  {
    "text": "a roaring up degrade Unlike the previous",
    "start": "151599",
    "end": "154480"
  },
  {
    "text": "two scenarios deployment creates a new",
    "start": "154480",
    "end": "157360"
  },
  {
    "text": "port forest before degrading the old",
    "start": "157360",
    "end": "161319"
  },
  {
    "text": "one So how can we ensure our workloads",
    "start": "161319",
    "end": "164800"
  },
  {
    "text": "survive in these",
    "start": "164800",
    "end": "167480"
  },
  {
    "text": "scenarios Let's examine the simplest",
    "start": "167480",
    "end": "170080"
  },
  {
    "text": "scenario a basic duration and recreation",
    "start": "170080",
    "end": "174440"
  },
  {
    "text": "flow We have a simple deployment",
    "start": "174440",
    "end": "178560"
  },
  {
    "text": "This defined only image and arguments",
    "start": "178560",
    "end": "181440"
  },
  {
    "text": "but doesn't handle any",
    "start": "181440",
    "end": "184519"
  },
  {
    "text": "signals Let's say we direct its pot",
    "start": "184519",
    "end": "187440"
  },
  {
    "text": "using cubic cut direct pot for three",
    "start": "187440",
    "end": "191200"
  },
  {
    "text": "this port receive a stop signal usually",
    "start": "191200",
    "end": "194159"
  },
  {
    "text": "six time However if the application",
    "start": "194159",
    "end": "196959"
  },
  {
    "text": "doesn't handle the signal it continue",
    "start": "196959",
    "end": "199360"
  },
  {
    "text": "running during the default 30 grace",
    "start": "199360",
    "end": "201599"
  },
  {
    "text": "period Once that time is up the port is",
    "start": "201599",
    "end": "206000"
  },
  {
    "text": "forcibly stopped with sig",
    "start": "206000",
    "end": "208120"
  },
  {
    "text": "kill Meanwhile the number of running",
    "start": "208120",
    "end": "211360"
  },
  {
    "text": "port drops below the desired number So",
    "start": "211360",
    "end": "214799"
  },
  {
    "text": "the port is",
    "start": "214799",
    "end": "216599"
  },
  {
    "text": "recreated Then scheduling image brewing",
    "start": "216599",
    "end": "220159"
  },
  {
    "text": "and container startup all happens as",
    "start": "220159",
    "end": "224959"
  },
  {
    "text": "usual Now you might wonder why the port",
    "start": "225239",
    "end": "228799"
  },
  {
    "text": "keeps running even after it receives sik",
    "start": "228799",
    "end": "231920"
  },
  {
    "text": "If you run some program on your laptop",
    "start": "231920",
    "end": "234480"
  },
  {
    "text": "and send it signal it's typically",
    "start": "234480",
    "end": "236760"
  },
  {
    "text": "terminated However in the container",
    "start": "236760",
    "end": "239280"
  },
  {
    "text": "world application typically runs as P1",
    "start": "239280",
    "end": "243360"
  },
  {
    "text": "So the Linux kind of treats it specially",
    "start": "243360",
    "end": "246480"
  },
  {
    "text": "If your application doesn't handle S",
    "start": "246480",
    "end": "249200"
  },
  {
    "text": "time it's just ignored That's why the",
    "start": "249200",
    "end": "252000"
  },
  {
    "text": "process keeps running until sig kill And",
    "start": "252000",
    "end": "254879"
  },
  {
    "text": "here's a problem",
    "start": "254879",
    "end": "258439"
  },
  {
    "text": "If your application just wait the entire",
    "start": "258720",
    "end": "261759"
  },
  {
    "text": "grace build the can waste resource also",
    "start": "261759",
    "end": "265520"
  },
  {
    "text": "your application has shutdown task like",
    "start": "265520",
    "end": "268560"
  },
  {
    "text": "crossing connections or writing back",
    "start": "268560",
    "end": "271320"
  },
  {
    "text": "data Sudden shutdown can lead to request",
    "start": "271320",
    "end": "275360"
  },
  {
    "text": "rows and",
    "start": "275360",
    "end": "277240"
  },
  {
    "text": "inconsistencies To avoid this it's",
    "start": "277240",
    "end": "279520"
  },
  {
    "text": "important to handle the stop signal and",
    "start": "279520",
    "end": "281520"
  },
  {
    "text": "shutdown app before the graceful period",
    "start": "281520",
    "end": "284160"
  },
  {
    "text": "ends",
    "start": "284160",
    "end": "287160"
  },
  {
    "text": "However some application is a different",
    "start": "289280",
    "end": "291600"
  },
  {
    "text": "signal for graceful shutdown For example",
    "start": "291600",
    "end": "294560"
  },
  {
    "text": "NGX",
    "start": "294560",
    "end": "296280"
  },
  {
    "text": "expect But what if you can't modify the",
    "start": "296280",
    "end": "299280"
  },
  {
    "text": "application code directory like those",
    "start": "299280",
    "end": "301440"
  },
  {
    "text": "third party",
    "start": "301440",
    "end": "302919"
  },
  {
    "text": "applications In such cases there are two",
    "start": "302919",
    "end": "305919"
  },
  {
    "text": "solution Docker file stop signal and",
    "start": "305919",
    "end": "308320"
  },
  {
    "text": "Kubernetes pretop In the docker file you",
    "start": "308320",
    "end": "312320"
  },
  {
    "text": "can set stop signal to tell which signal",
    "start": "312320",
    "end": "315199"
  },
  {
    "text": "your application",
    "start": "315199",
    "end": "316840"
  },
  {
    "text": "expects In this example reset secret So",
    "start": "316840",
    "end": "321039"
  },
  {
    "text": "container gets secret instead of sig",
    "start": "321039",
    "end": "325600"
  },
  {
    "text": "time The second method is pre-top",
    "start": "326280",
    "end": "329320"
  },
  {
    "text": "actions which runs just before the",
    "start": "329320",
    "end": "331840"
  },
  {
    "text": "container shutdown",
    "start": "331840",
    "end": "333240"
  },
  {
    "text": "begins There are several options First",
    "start": "333240",
    "end": "336880"
  },
  {
    "text": "with an exit hook you can send the",
    "start": "336880",
    "end": "339199"
  },
  {
    "text": "desired signal directory like using Q",
    "start": "339199",
    "end": "342759"
  },
  {
    "text": "secret but it's required kill binaries",
    "start": "342759",
    "end": "346479"
  },
  {
    "text": "in your application",
    "start": "346479",
    "end": "348759"
  },
  {
    "text": "container Second HTTP hook is another",
    "start": "348759",
    "end": "352560"
  },
  {
    "text": "option It calls a shutdown end point on",
    "start": "352560",
    "end": "355440"
  },
  {
    "text": "your app which is useful if your",
    "start": "355440",
    "end": "358080"
  },
  {
    "text": "application provides the HTTbased",
    "start": "358080",
    "end": "360639"
  },
  {
    "text": "graceful shutdown",
    "start": "360639",
    "end": "364120"
  },
  {
    "text": "The last thing is the life cycle stop",
    "start": "364240",
    "end": "367240"
  },
  {
    "text": "signal This feature isn't available yet",
    "start": "367240",
    "end": "370240"
  },
  {
    "text": "but you will able to specify custom",
    "start": "370240",
    "end": "372720"
  },
  {
    "text": "stops signal directory in the pot",
    "start": "372720",
    "end": "376199"
  },
  {
    "text": "manifest This is useful because it works",
    "start": "376199",
    "end": "380080"
  },
  {
    "text": "like docker file stop signal but you",
    "start": "380080",
    "end": "382319"
  },
  {
    "text": "don't need to rebuild your image",
    "start": "382319",
    "end": "386680"
  },
  {
    "text": "So now we understand how termination",
    "start": "389600",
    "end": "392720"
  },
  {
    "text": "works for a single container port But",
    "start": "392720",
    "end": "395520"
  },
  {
    "text": "what happen when your pot has multiple",
    "start": "395520",
    "end": "399080"
  },
  {
    "text": "containers For primary containers the",
    "start": "399080",
    "end": "401919"
  },
  {
    "text": "termination process all happens at the",
    "start": "401919",
    "end": "404720"
  },
  {
    "text": "same",
    "start": "404720",
    "end": "405720"
  },
  {
    "text": "times But what about",
    "start": "405720",
    "end": "410240"
  },
  {
    "text": "side The sidecore design pattern which",
    "start": "411479",
    "end": "414319"
  },
  {
    "text": "is extend the functionality of the",
    "start": "414319",
    "end": "417759"
  },
  {
    "text": "primary container like logging",
    "start": "417759",
    "end": "420199"
  },
  {
    "text": "agents like that has been known for many",
    "start": "420199",
    "end": "423440"
  },
  {
    "text": "years but cyto support as a native",
    "start": "423440",
    "end": "426080"
  },
  {
    "text": "kubernetes feature is relatively new It",
    "start": "426080",
    "end": "428960"
  },
  {
    "text": "becomes a default starting in",
    "start": "428960",
    "end": "432120"
  },
  {
    "text": "1.29 This feature builds on the init",
    "start": "432120",
    "end": "435039"
  },
  {
    "text": "container and it's only applied when the",
    "start": "435039",
    "end": "437599"
  },
  {
    "text": "port restart policy is set to always",
    "start": "437599",
    "end": "443000"
  },
  {
    "text": "So here how the shutdown works Unlike",
    "start": "443960",
    "end": "448560"
  },
  {
    "text": "primary container cytos shut down",
    "start": "448560",
    "end": "451240"
  },
  {
    "text": "sequentially Once all the primary",
    "start": "451240",
    "end": "453440"
  },
  {
    "text": "container have exited the cyto get stop",
    "start": "453440",
    "end": "456639"
  },
  {
    "text": "signal one by one in the rebas order of",
    "start": "456639",
    "end": "461039"
  },
  {
    "text": "how they",
    "start": "461039",
    "end": "463080"
  },
  {
    "text": "started In this example cyto stop in the",
    "start": "463080",
    "end": "466479"
  },
  {
    "text": "order three two one",
    "start": "466479",
    "end": "470759"
  },
  {
    "text": "One thing to keep in mind the port",
    "start": "471440",
    "end": "473440"
  },
  {
    "text": "hommination grace period is shared by",
    "start": "473440",
    "end": "475599"
  },
  {
    "text": "all containers So make sure everything",
    "start": "475599",
    "end": "477759"
  },
  {
    "text": "can finish in this",
    "start": "477759",
    "end": "480720"
  },
  {
    "text": "period So far we've learned a great",
    "start": "481720",
    "end": "484080"
  },
  {
    "text": "source down However portination grace",
    "start": "484080",
    "end": "486960"
  },
  {
    "text": "period are not always guaranteed Of",
    "start": "486960",
    "end": "489680"
  },
  {
    "text": "course if your app crash due to bugs or",
    "start": "489680",
    "end": "492720"
  },
  {
    "text": "get killed by killer there's no grace",
    "start": "492720",
    "end": "496720"
  },
  {
    "text": "build",
    "start": "496720",
    "end": "498240"
  },
  {
    "text": "And even when Kubernetes does to do",
    "start": "498240",
    "end": "501360"
  },
  {
    "text": "termination it can sometime be",
    "start": "501360",
    "end": "503039"
  },
  {
    "text": "overridden or ignored For example",
    "start": "503039",
    "end": "505680"
  },
  {
    "text": "duration and eviction API can override",
    "start": "505680",
    "end": "508639"
  },
  {
    "text": "this period For example if you run cube",
    "start": "508639",
    "end": "511039"
  },
  {
    "text": "cut date pot with a 1 second grace per",
    "start": "511039",
    "end": "514959"
  },
  {
    "text": "field option the pot will be immediately",
    "start": "514959",
    "end": "517599"
  },
  {
    "text": "terminated regardless of its pot grace",
    "start": "517599",
    "end": "520880"
  },
  {
    "text": "period settings",
    "start": "520880",
    "end": "524440"
  },
  {
    "text": "Also when a node is under severe",
    "start": "524640",
    "end": "527200"
  },
  {
    "text": "resource pressure the cubate epic spot",
    "start": "527200",
    "end": "529920"
  },
  {
    "text": "to reduce node",
    "start": "529920",
    "end": "531880"
  },
  {
    "text": "usage in a software eviction this is",
    "start": "531880",
    "end": "535279"
  },
  {
    "text": "disabled by default but cubate override",
    "start": "535279",
    "end": "538080"
  },
  {
    "text": "it by its configuration",
    "start": "538080",
    "end": "540760"
  },
  {
    "text": "value and harder eviction is more",
    "start": "540760",
    "end": "544760"
  },
  {
    "text": "aggressive but uh immediately evicted",
    "start": "544760",
    "end": "547760"
  },
  {
    "text": "with any grace",
    "start": "547760",
    "end": "551200"
  },
  {
    "text": "period So we've explored the standalone",
    "start": "552680",
    "end": "556959"
  },
  {
    "text": "applications with that But how about",
    "start": "556959",
    "end": "559120"
  },
  {
    "text": "applications that handle network traffic",
    "start": "559120",
    "end": "561600"
  },
  {
    "text": "like HTTP",
    "start": "561600",
    "end": "564680"
  },
  {
    "text": "servers Let's consider deployment with a",
    "start": "564680",
    "end": "567519"
  },
  {
    "text": "service When you delete a port",
    "start": "567519",
    "end": "570080"
  },
  {
    "text": "Kubernetes sends a stop signal as we",
    "start": "570080",
    "end": "572959"
  },
  {
    "text": "learned before then eventually removes a",
    "start": "572959",
    "end": "575600"
  },
  {
    "text": "port from the routing table A new port",
    "start": "575600",
    "end": "578560"
  },
  {
    "text": "starts up and once it mark as ready",
    "start": "578560",
    "end": "580800"
  },
  {
    "text": "traffic is direct there",
    "start": "580800",
    "end": "584080"
  },
  {
    "text": "However even if we've implemented the",
    "start": "584080",
    "end": "586399"
  },
  {
    "text": "grace version down it's not enough to",
    "start": "586399",
    "end": "589040"
  },
  {
    "text": "guarantee zero downtime We still face to",
    "start": "589040",
    "end": "594399"
  },
  {
    "text": "challenges Let's look at the first",
    "start": "594839",
    "end": "597640"
  },
  {
    "text": "issue On the right this go code shows a",
    "start": "597640",
    "end": "601440"
  },
  {
    "text": "typical HTTP server After receiving",
    "start": "601440",
    "end": "604480"
  },
  {
    "text": "signal the shutdown function is called",
    "start": "604480",
    "end": "606880"
  },
  {
    "text": "for graceful shutdown And this function",
    "start": "606880",
    "end": "610000"
  },
  {
    "text": "keeps handling infrared requests but",
    "start": "610000",
    "end": "612959"
  },
  {
    "text": "stop listening immediately Here's a",
    "start": "612959",
    "end": "615680"
  },
  {
    "text": "catch The server stop listening to new",
    "start": "615680",
    "end": "618560"
  },
  {
    "text": "requests but new incoming request will",
    "start": "618560",
    "end": "620959"
  },
  {
    "text": "still be routed to your pot It's causing",
    "start": "620959",
    "end": "623839"
  },
  {
    "text": "a request",
    "start": "623839",
    "end": "625640"
  },
  {
    "text": "drop To avoid this problem shutdown",
    "start": "625640",
    "end": "628880"
  },
  {
    "text": "should be delayed until Kubernetes stop",
    "start": "628880",
    "end": "631200"
  },
  {
    "text": "routing traffic to the",
    "start": "631200",
    "end": "633560"
  },
  {
    "text": "pot There are some ways to introduce",
    "start": "633560",
    "end": "636640"
  },
  {
    "text": "this ray One is just modify your",
    "start": "636640",
    "end": "639120"
  },
  {
    "text": "application code and adding strip before",
    "start": "639120",
    "end": "641760"
  },
  {
    "text": "the shutdown logic Another way is pre-",
    "start": "641760",
    "end": "645120"
  },
  {
    "text": "stop",
    "start": "645120",
    "end": "646360"
  },
  {
    "text": "three from 1.3 This feature is available",
    "start": "646360",
    "end": "650560"
  },
  {
    "text": "by default So you can set three seconds",
    "start": "650560",
    "end": "653519"
  },
  {
    "text": "in the port manifest",
    "start": "653519",
    "end": "657040"
  },
  {
    "text": "directory Let's move on to the next",
    "start": "658519",
    "end": "661040"
  },
  {
    "text": "challenge If your app isn't prepared",
    "start": "661040",
    "end": "663680"
  },
  {
    "text": "right after it startup that Kubernetes",
    "start": "663680",
    "end": "666240"
  },
  {
    "text": "immediately starts sending",
    "start": "666240",
    "end": "668519"
  },
  {
    "text": "requests these requests can get",
    "start": "668519",
    "end": "671880"
  },
  {
    "text": "dropped Readiness prove can solve this",
    "start": "671880",
    "end": "676279"
  },
  {
    "text": "problem This pro check whether the",
    "start": "676279",
    "end": "678640"
  },
  {
    "text": "application is actually ready to handle",
    "start": "678640",
    "end": "681120"
  },
  {
    "text": "the",
    "start": "681120",
    "end": "681959"
  },
  {
    "text": "request Kubernetes will starting request",
    "start": "681959",
    "end": "685920"
  },
  {
    "text": "only after this pro passes",
    "start": "685920",
    "end": "690440"
  },
  {
    "text": "However using only a readiness probe has",
    "start": "691880",
    "end": "695880"
  },
  {
    "text": "limitations because this probe checks",
    "start": "695880",
    "end": "698399"
  },
  {
    "text": "the status throughout the entire",
    "start": "698399",
    "end": "700880"
  },
  {
    "text": "container life cycle not just during",
    "start": "700880",
    "end": "703800"
  },
  {
    "text": "startup Generally you need different",
    "start": "703800",
    "end": "706880"
  },
  {
    "text": "threshold or inverters for startup and",
    "start": "706880",
    "end": "709680"
  },
  {
    "text": "post startup proves If you rely on a",
    "start": "709680",
    "end": "712959"
  },
  {
    "text": "readiness proof for each phases it could",
    "start": "712959",
    "end": "715680"
  },
  {
    "text": "lead to slower startup or two strike",
    "start": "715680",
    "end": "718160"
  },
  {
    "text": "health checks",
    "start": "718160",
    "end": "720720"
  },
  {
    "text": "That's where startup prove comes in This",
    "start": "720720",
    "end": "723360"
  },
  {
    "text": "prove runs only during a initialization",
    "start": "723360",
    "end": "726639"
  },
  {
    "text": "phase Once the startup prove succeeded",
    "start": "726639",
    "end": "730000"
  },
  {
    "text": "ladiness and liveness prove",
    "start": "730000",
    "end": "732920"
  },
  {
    "text": "takeover This separation let you",
    "start": "732920",
    "end": "735200"
  },
  {
    "text": "configure startup proofs without",
    "start": "735200",
    "end": "737519"
  },
  {
    "text": "affecting the post startup",
    "start": "737519",
    "end": "741600"
  },
  {
    "text": "proofs Next let's see the actual",
    "start": "744120",
    "end": "747279"
  },
  {
    "text": "behavior",
    "start": "747279",
    "end": "749160"
  },
  {
    "text": "restart On the left we have deployment",
    "start": "749160",
    "end": "752480"
  },
  {
    "text": "and service management It doesn't have",
    "start": "752480",
    "end": "755040"
  },
  {
    "text": "special settings On the right this is a",
    "start": "755040",
    "end": "757760"
  },
  {
    "text": "corrected version deployment It's added",
    "start": "757760",
    "end": "760240"
  },
  {
    "text": "pre-top three and proves which ensure",
    "start": "760240",
    "end": "763600"
  },
  {
    "text": "smooth traffic transition with zero",
    "start": "763600",
    "end": "767680"
  },
  {
    "text": "time Let's see the fader case first On",
    "start": "769560",
    "end": "772720"
  },
  {
    "text": "the screen each panel show the fader",
    "start": "772720",
    "end": "774720"
  },
  {
    "text": "case deployments port and the service",
    "start": "774720",
    "end": "778200"
  },
  {
    "text": "endpoint And now I going to drape the",
    "start": "778200",
    "end": "783040"
  },
  {
    "text": "port Look at the log Our server received",
    "start": "784040",
    "end": "786880"
  },
  {
    "text": "a sig time and start the shutdown",
    "start": "786880",
    "end": "789600"
  },
  {
    "text": "However IP table haven't been updated",
    "start": "789600",
    "end": "792160"
  },
  {
    "text": "yet and traffic is still being direct to",
    "start": "792160",
    "end": "795920"
  },
  {
    "text": "the pot",
    "start": "795920",
    "end": "799160"
  },
  {
    "text": "As a result these requests",
    "start": "799839",
    "end": "803600"
  },
  {
    "text": "dropped Now Kubernetes has created a new",
    "start": "804920",
    "end": "808000"
  },
  {
    "text": "port and the routing has switched but we",
    "start": "808000",
    "end": "810959"
  },
  {
    "text": "still see",
    "start": "810959",
    "end": "813440"
  },
  {
    "text": "failures This is because the new server",
    "start": "814200",
    "end": "816880"
  },
  {
    "text": "isn't ready to handle",
    "start": "816880",
    "end": "820240"
  },
  {
    "text": "requests So next let's see how we can",
    "start": "821880",
    "end": "824959"
  },
  {
    "text": "avoid these",
    "start": "824959",
    "end": "826920"
  },
  {
    "text": "issues Here the corrected version of",
    "start": "826920",
    "end": "830600"
  },
  {
    "text": "deployment which has",
    "start": "830600",
    "end": "833880"
  },
  {
    "text": "prior Now I going to delete support",
    "start": "833880",
    "end": "838639"
  },
  {
    "text": "again This time thanks to P of three",
    "start": "838680",
    "end": "842240"
  },
  {
    "text": "Kubernetes waits 4 seconds before",
    "start": "842240",
    "end": "844320"
  },
  {
    "text": "sending the signal",
    "start": "844320",
    "end": "847800"
  },
  {
    "text": "signal While an old P is threeing a new",
    "start": "847800",
    "end": "851360"
  },
  {
    "text": "port is created The readiness prove",
    "start": "851360",
    "end": "854480"
  },
  {
    "text": "return success once port and endpoint",
    "start": "854480",
    "end": "857600"
  },
  {
    "text": "are ready The IP table will also be",
    "start": "857600",
    "end": "862120"
  },
  {
    "text": "updated As you can see traffic smoothly",
    "start": "862120",
    "end": "865440"
  },
  {
    "text": "transition without any",
    "start": "865440",
    "end": "868199"
  },
  {
    "text": "drops Finally the old port receive sign",
    "start": "868199",
    "end": "871760"
  },
  {
    "text": "and",
    "start": "871760",
    "end": "873320"
  },
  {
    "text": "exited This way by applying pre- stop",
    "start": "873320",
    "end": "876320"
  },
  {
    "text": "three B proves we can minimize downtime",
    "start": "876320",
    "end": "878959"
  },
  {
    "text": "during the port restart",
    "start": "878959",
    "end": "883000"
  },
  {
    "text": "We've covered traffic handling during",
    "start": "884399",
    "end": "886560"
  },
  {
    "text": "restarts but we haven't touched when the",
    "start": "886560",
    "end": "889279"
  },
  {
    "text": "traffic shift happened",
    "start": "889279",
    "end": "891560"
  },
  {
    "text": "exactly Normally cube proxy do not send",
    "start": "891560",
    "end": "895040"
  },
  {
    "text": "the traffic to terminating pot but if no",
    "start": "895040",
    "end": "898959"
  },
  {
    "text": "other end points are ready traffic still",
    "start": "898959",
    "end": "902160"
  },
  {
    "text": "goes to the shutting down ports This",
    "start": "902160",
    "end": "905600"
  },
  {
    "text": "will change the restart behavior",
    "start": "905600",
    "end": "907760"
  },
  {
    "text": "depending on replic accounts and restart",
    "start": "907760",
    "end": "910480"
  },
  {
    "text": "types",
    "start": "910480",
    "end": "912880"
  },
  {
    "text": "In multi library scenarios Kubernetes",
    "start": "912880",
    "end": "915760"
  },
  {
    "text": "remove the the point almost after the",
    "start": "915760",
    "end": "918560"
  },
  {
    "text": "port is",
    "start": "918560",
    "end": "919639"
  },
  {
    "text": "derated Then it ask the new port and the",
    "start": "919639",
    "end": "923279"
  },
  {
    "text": "point once it it becomes",
    "start": "923279",
    "end": "926839"
  },
  {
    "text": "ready Of course there gap between the",
    "start": "926839",
    "end": "930800"
  },
  {
    "text": "old port stopping the new and the new",
    "start": "930800",
    "end": "933680"
  },
  {
    "text": "one being ready But it doesn't matter",
    "start": "933680",
    "end": "936399"
  },
  {
    "text": "because as a replica can still handle",
    "start": "936399",
    "end": "939040"
  },
  {
    "text": "this request",
    "start": "939040",
    "end": "942320"
  },
  {
    "text": "Next in the routing upgrade new ports",
    "start": "942560",
    "end": "945440"
  },
  {
    "text": "are created first So regardless of leak",
    "start": "945440",
    "end": "949279"
  },
  {
    "text": "accounts traffic will be",
    "start": "949279",
    "end": "951720"
  },
  {
    "text": "switched when the new port are marked as",
    "start": "951720",
    "end": "956720"
  },
  {
    "text": "ready But one point note that traffic",
    "start": "958360",
    "end": "961759"
  },
  {
    "text": "doesn't stop at the same time of",
    "start": "961759",
    "end": "963920"
  },
  {
    "text": "duration",
    "start": "963920",
    "end": "965759"
  },
  {
    "text": "components like cubit endpoint thrice",
    "start": "965759",
    "end": "968959"
  },
  {
    "text": "controller and cube procy all component",
    "start": "968959",
    "end": "971920"
  },
  {
    "text": "fetch resource status from API server",
    "start": "971920",
    "end": "975040"
  },
  {
    "text": "and process them as synchronously so",
    "start": "975040",
    "end": "977279"
  },
  {
    "text": "there could be a",
    "start": "977279",
    "end": "980000"
  },
  {
    "text": "thre then how about the single replica",
    "start": "981880",
    "end": "985680"
  },
  {
    "text": "worker as I mentioned if there is no as",
    "start": "985680",
    "end": "989120"
  },
  {
    "text": "the lady endpoint traffic keeps going to",
    "start": "989120",
    "end": "991600"
  },
  {
    "text": "the terminating port as you can see on",
    "start": "991600",
    "end": "994720"
  },
  {
    "text": "the left the old port keeps receiving",
    "start": "994720",
    "end": "997759"
  },
  {
    "text": "traffic after it starting shutting",
    "start": "997759",
    "end": "1000519"
  },
  {
    "text": "down Once the new port is ready the",
    "start": "1000519",
    "end": "1003519"
  },
  {
    "text": "traffic is",
    "start": "1003519",
    "end": "1004839"
  },
  {
    "text": "switched With this seamless traffic",
    "start": "1004839",
    "end": "1007279"
  },
  {
    "text": "shake even if it's a single replica",
    "start": "1007279",
    "end": "1010560"
  },
  {
    "text": "workload we can avoid request drop",
    "start": "1010560",
    "end": "1013040"
  },
  {
    "text": "during restarts However as we learned in",
    "start": "1013040",
    "end": "1015920"
  },
  {
    "text": "the previous demo if the old port ends",
    "start": "1015920",
    "end": "1018880"
  },
  {
    "text": "too quickly the new port can't take over",
    "start": "1018880",
    "end": "1021759"
  },
  {
    "text": "this request",
    "start": "1021759",
    "end": "1023720"
  },
  {
    "text": "it there is a risk of the gas",
    "start": "1023720",
    "end": "1027480"
  },
  {
    "text": "drops Therefore giving enough pris and",
    "start": "1027480",
    "end": "1032079"
  },
  {
    "text": "setting proof is",
    "start": "1032079",
    "end": "1035438"
  },
  {
    "text": "important Next let's look at what",
    "start": "1035720",
    "end": "1039199"
  },
  {
    "text": "happens when a liveness prove fails in a",
    "start": "1039199",
    "end": "1041918"
  },
  {
    "text": "single replica In the container level",
    "start": "1041919",
    "end": "1045199"
  },
  {
    "text": "result all events happens sequentially",
    "start": "1045199",
    "end": "1048640"
  },
  {
    "text": "So there's a short gap before it comes",
    "start": "1048640",
    "end": "1051200"
  },
  {
    "text": "back unlike the routing upgrade case No",
    "start": "1051200",
    "end": "1055440"
  },
  {
    "text": "one can take over this traffic",
    "start": "1055440",
    "end": "1059600"
  },
  {
    "text": "So during this gap the request is",
    "start": "1060760",
    "end": "1064160"
  },
  {
    "text": "dropped That's why in some cases we",
    "start": "1064160",
    "end": "1067039"
  },
  {
    "text": "cannot avoid downtime in a single",
    "start": "1067039",
    "end": "1069039"
  },
  {
    "text": "replica So multiple replicas is",
    "start": "1069039",
    "end": "1071440"
  },
  {
    "text": "recommended for important applications",
    "start": "1071440",
    "end": "1076279"
  },
  {
    "text": "Now we learned about simple app and HTTP",
    "start": "1077120",
    "end": "1080520"
  },
  {
    "text": "servers But what about",
    "start": "1080520",
    "end": "1083480"
  },
  {
    "text": "controllers We can apprise the same",
    "start": "1083480",
    "end": "1085840"
  },
  {
    "text": "approach to controller but with one",
    "start": "1085840",
    "end": "1088480"
  },
  {
    "text": "extra factor which is a leader election",
    "start": "1088480",
    "end": "1092160"
  },
  {
    "text": "Typically the controller implement",
    "start": "1092160",
    "end": "1094480"
  },
  {
    "text": "controllers implements leader election",
    "start": "1094480",
    "end": "1097600"
  },
  {
    "text": "to prevent conflicting",
    "start": "1097600",
    "end": "1099960"
  },
  {
    "text": "upgrades So let's focus on",
    "start": "1099960",
    "end": "1103000"
  },
  {
    "text": "that",
    "start": "1103000",
    "end": "1105240"
  },
  {
    "text": "Here we will take the controller long",
    "start": "1105240",
    "end": "1108240"
  },
  {
    "text": "time as an example This is a commonly",
    "start": "1108240",
    "end": "1111440"
  },
  {
    "text": "used library to implement a",
    "start": "1111440",
    "end": "1113880"
  },
  {
    "text": "controller In this library once the",
    "start": "1113880",
    "end": "1116640"
  },
  {
    "text": "controller gets saved time and the",
    "start": "1116640",
    "end": "1118880"
  },
  {
    "text": "context is cancelled the great shutdown",
    "start": "1118880",
    "end": "1122200"
  },
  {
    "text": "begins It goes through several",
    "start": "1122200",
    "end": "1124480"
  },
  {
    "text": "termination procedures and finally stop",
    "start": "1124480",
    "end": "1127600"
  },
  {
    "text": "renewing leaderships",
    "start": "1127600",
    "end": "1130240"
  },
  {
    "text": "Then new reader gets a",
    "start": "1130240",
    "end": "1133760"
  },
  {
    "text": "leadership So how can we reduce",
    "start": "1135240",
    "end": "1137919"
  },
  {
    "text": "disruption during",
    "start": "1137919",
    "end": "1140520"
  },
  {
    "text": "reelection We",
    "start": "1140520",
    "end": "1143919"
  },
  {
    "text": "talk before talking about the",
    "start": "1144679",
    "end": "1147840"
  },
  {
    "text": "optimization technique Let's see the",
    "start": "1147840",
    "end": "1150520"
  },
  {
    "text": "Kubernetes leader election",
    "start": "1150520",
    "end": "1153640"
  },
  {
    "text": "behaviors Kubernetes provides a list",
    "start": "1153640",
    "end": "1156400"
  },
  {
    "text": "resource for radar election Each",
    "start": "1156400",
    "end": "1159400"
  },
  {
    "text": "candidate continuously try to update",
    "start": "1159400",
    "end": "1162080"
  },
  {
    "text": "this shared resource and the fast that",
    "start": "1162080",
    "end": "1165600"
  },
  {
    "text": "successfully updated it becomes it",
    "start": "1165600",
    "end": "1169120"
  },
  {
    "text": "becomes a",
    "start": "1169120",
    "end": "1171760"
  },
  {
    "text": "leader Here are two key parameters that",
    "start": "1173000",
    "end": "1176000"
  },
  {
    "text": "affect reader transitions First list",
    "start": "1176000",
    "end": "1179120"
  },
  {
    "text": "duration set the maximum leader duration",
    "start": "1179120",
    "end": "1181120"
  },
  {
    "text": "without renewal The default period is 15",
    "start": "1181120",
    "end": "1184799"
  },
  {
    "text": "seconds seconds Retry period specify how",
    "start": "1184799",
    "end": "1189039"
  },
  {
    "text": "frequently candidate attempt to acquire",
    "start": "1189039",
    "end": "1191760"
  },
  {
    "text": "leadership The default interval is two",
    "start": "1191760",
    "end": "1194679"
  },
  {
    "text": "seconds With these default values in the",
    "start": "1194679",
    "end": "1198160"
  },
  {
    "text": "worst case a leadership takeover could",
    "start": "1198160",
    "end": "1200559"
  },
  {
    "text": "take 17 seconds",
    "start": "1200559",
    "end": "1203280"
  },
  {
    "text": "You might think we could just shorten",
    "start": "1203280",
    "end": "1205679"
  },
  {
    "text": "little duration to reduce take over time",
    "start": "1205679",
    "end": "1209320"
  },
  {
    "text": "but setting a two short period",
    "start": "1209320",
    "end": "1213880"
  },
  {
    "text": "increase split brain risk like multiple",
    "start": "1213880",
    "end": "1217600"
  },
  {
    "text": "port",
    "start": "1217600",
    "end": "1219480"
  },
  {
    "text": "var So how can we safely reduce this",
    "start": "1219480",
    "end": "1224280"
  },
  {
    "text": "time The controller runtime provides an",
    "start": "1224280",
    "end": "1227360"
  },
  {
    "text": "option called leader election release on",
    "start": "1227360",
    "end": "1229919"
  },
  {
    "text": "cancer When enabled this the leader",
    "start": "1229919",
    "end": "1234000"
  },
  {
    "text": "proactively ends the leadership not just",
    "start": "1234000",
    "end": "1237280"
  },
  {
    "text": "waited for",
    "start": "1237280",
    "end": "1239159"
  },
  {
    "text": "expiration Internally the manager",
    "start": "1239159",
    "end": "1241520"
  },
  {
    "text": "updates list duration seconds to 1",
    "start": "1241520",
    "end": "1244000"
  },
  {
    "text": "second only at the",
    "start": "1244000",
    "end": "1245720"
  },
  {
    "text": "end With this configuration the",
    "start": "1245720",
    "end": "1249360"
  },
  {
    "text": "leadership transition time can speed up",
    "start": "1249360",
    "end": "1251760"
  },
  {
    "text": "to 3 seconds while keeping the default",
    "start": "1251760",
    "end": "1254960"
  },
  {
    "text": "duration except on termination",
    "start": "1254960",
    "end": "1258919"
  },
  {
    "text": "ends In summary although careful",
    "start": "1258919",
    "end": "1261520"
  },
  {
    "text": "attention is required temporary",
    "start": "1261520",
    "end": "1264159"
  },
  {
    "text": "listation updates allow you to safe and",
    "start": "1264159",
    "end": "1267360"
  },
  {
    "text": "rapid leadership",
    "start": "1267360",
    "end": "1270559"
  },
  {
    "text": "transition So far we've discussed how",
    "start": "1271960",
    "end": "1275360"
  },
  {
    "text": "application can gracefully handle",
    "start": "1275360",
    "end": "1277280"
  },
  {
    "text": "restarts But what if cluster maintenance",
    "start": "1277280",
    "end": "1280640"
  },
  {
    "text": "target multiple restarts and affect the",
    "start": "1280640",
    "end": "1283200"
  },
  {
    "text": "entire workload How can we minimize",
    "start": "1283200",
    "end": "1286000"
  },
  {
    "text": "these disruptions",
    "start": "1286000",
    "end": "1289640"
  },
  {
    "text": "Port disruption budget called PDB can",
    "start": "1289679",
    "end": "1292799"
  },
  {
    "text": "limit these voluntary disruptions On the",
    "start": "1292799",
    "end": "1296240"
  },
  {
    "text": "right we have to manifest a deployment",
    "start": "1296240",
    "end": "1298880"
  },
  {
    "text": "with two replicas and is secured by a",
    "start": "1298880",
    "end": "1302520"
  },
  {
    "text": "PDB This PDB allows only one port to be",
    "start": "1302520",
    "end": "1308159"
  },
  {
    "text": "unavailable In the scenario on the left",
    "start": "1308200",
    "end": "1311760"
  },
  {
    "text": "the eviction request succeeded because",
    "start": "1311760",
    "end": "1313760"
  },
  {
    "text": "it respects the budget we've set But in",
    "start": "1313760",
    "end": "1316720"
  },
  {
    "text": "the scenario on the right the eviction",
    "start": "1316720",
    "end": "1318960"
  },
  {
    "text": "request is rejected This is because",
    "start": "1318960",
    "end": "1322080"
  },
  {
    "text": "another port is still pending and the",
    "start": "1322080",
    "end": "1324320"
  },
  {
    "text": "eviction would exceed the",
    "start": "1324320",
    "end": "1326120"
  },
  {
    "text": "budget In this way when new setup PDB",
    "start": "1326120",
    "end": "1330520"
  },
  {
    "text": "resol requests that would viate the",
    "start": "1330520",
    "end": "1333200"
  },
  {
    "text": "disruption budget So you can reduce",
    "start": "1333200",
    "end": "1338000"
  },
  {
    "text": "disruption We found the PDB is",
    "start": "1338520",
    "end": "1341600"
  },
  {
    "text": "beneficial to reduce those disruption",
    "start": "1341600",
    "end": "1344480"
  },
  {
    "text": "that there are some limitations First",
    "start": "1344480",
    "end": "1347679"
  },
  {
    "text": "unlike Ring upgrade port eviction",
    "start": "1347679",
    "end": "1350720"
  },
  {
    "text": "doesn't create a replacement port ahead",
    "start": "1350720",
    "end": "1353679"
  },
  {
    "text": "of time So if you want to keep at least",
    "start": "1353679",
    "end": "1356559"
  },
  {
    "text": "one port during eviction you need at",
    "start": "1356559",
    "end": "1359120"
  },
  {
    "text": "least two running ports to begin",
    "start": "1359120",
    "end": "1362360"
  },
  {
    "text": "with Second if you set PDB to stry it",
    "start": "1362360",
    "end": "1368000"
  },
  {
    "text": "could permanently block eviction",
    "start": "1368000",
    "end": "1370320"
  },
  {
    "text": "requests This would happen in several",
    "start": "1370320",
    "end": "1372880"
  },
  {
    "text": "cases such as when V workload has only a",
    "start": "1372880",
    "end": "1375200"
  },
  {
    "text": "single replica max unavailable is set to",
    "start": "1375200",
    "end": "1378000"
  },
  {
    "text": "zero or the application is never in a",
    "start": "1378000",
    "end": "1380640"
  },
  {
    "text": "running state due to bugs or something",
    "start": "1380640",
    "end": "1383360"
  },
  {
    "text": "like",
    "start": "1383360",
    "end": "1384840"
  },
  {
    "text": "that This can complicate node",
    "start": "1384840",
    "end": "1387360"
  },
  {
    "text": "maintenance like cube drain and it",
    "start": "1387360",
    "end": "1389840"
  },
  {
    "text": "requires lot of manual",
    "start": "1389840",
    "end": "1393120"
  },
  {
    "text": "intervention I mentioned that",
    "start": "1393880",
    "end": "1395760"
  },
  {
    "text": "application part can also broke this",
    "start": "1395760",
    "end": "1398320"
  },
  {
    "text": "eviction but",
    "start": "1398320",
    "end": "1401039"
  },
  {
    "text": "Kubernetes provide this solution",
    "start": "1401039",
    "end": "1403360"
  },
  {
    "text": "starting from version 1.27 Kubernetes",
    "start": "1403360",
    "end": "1406480"
  },
  {
    "text": "supports unhealthy port eviction policy",
    "start": "1406480",
    "end": "1408799"
  },
  {
    "text": "as a default When you set always a load",
    "start": "1408799",
    "end": "1412080"
  },
  {
    "text": "to this policy unhealthy port do not",
    "start": "1412080",
    "end": "1414640"
  },
  {
    "text": "broke the eviction",
    "start": "1414640",
    "end": "1417799"
  },
  {
    "text": "request Lastly remember that PTB only",
    "start": "1417799",
    "end": "1420960"
  },
  {
    "text": "apply to the eviction API and death of",
    "start": "1420960",
    "end": "1424520"
  },
  {
    "text": "preemption Of course if you delete pot",
    "start": "1424520",
    "end": "1427200"
  },
  {
    "text": "PDB constraint won't be worked Also",
    "start": "1427200",
    "end": "1431320"
  },
  {
    "text": "also when the scheduleuler try to print",
    "start": "1431320",
    "end": "1434320"
  },
  {
    "text": "lower priority port to make a note space",
    "start": "1434320",
    "end": "1438240"
  },
  {
    "text": "it normally will follow the disruption",
    "start": "1438240",
    "end": "1441039"
  },
  {
    "text": "budget But if finds no plates match",
    "start": "1441039",
    "end": "1443520"
  },
  {
    "text": "those",
    "start": "1443520",
    "end": "1444360"
  },
  {
    "text": "constraint budget in which case",
    "start": "1444360",
    "end": "1447280"
  },
  {
    "text": "preemption may ignore the PDB",
    "start": "1447280",
    "end": "1451880"
  },
  {
    "text": "So finally let's move on to the key",
    "start": "1457080",
    "end": "1460640"
  },
  {
    "text": "takeaways for today's",
    "start": "1460640",
    "end": "1463080"
  },
  {
    "text": "sessions First make sure your",
    "start": "1463080",
    "end": "1466080"
  },
  {
    "text": "application can handle sig time and",
    "start": "1466080",
    "end": "1468240"
  },
  {
    "text": "start grace version down If another",
    "start": "1468240",
    "end": "1471520"
  },
  {
    "text": "signal is needed use stop signal or pre-",
    "start": "1471520",
    "end": "1474559"
  },
  {
    "text": "stop actions Also cycles are terminated",
    "start": "1474559",
    "end": "1479720"
  },
  {
    "text": "sequentially in reverse order of their",
    "start": "1479720",
    "end": "1483039"
  },
  {
    "text": "startup time and remember the pot",
    "start": "1483039",
    "end": "1486000"
  },
  {
    "text": "termination grace period is not always",
    "start": "1486000",
    "end": "1489480"
  },
  {
    "text": "guaranteed Next pre stop three and let",
    "start": "1489480",
    "end": "1493520"
  },
  {
    "text": "help minimize traffic downtime Both",
    "start": "1493520",
    "end": "1496400"
  },
  {
    "text": "features support smooth traffic shifting",
    "start": "1496400",
    "end": "1498880"
  },
  {
    "text": "during restart",
    "start": "1498880",
    "end": "1502360"
  },
  {
    "text": "Third if your controller use leader",
    "start": "1503600",
    "end": "1506080"
  },
  {
    "text": "directionction you can speed up the",
    "start": "1506080",
    "end": "1507760"
  },
  {
    "text": "takeover time by setting in short period",
    "start": "1507760",
    "end": "1510000"
  },
  {
    "text": "as a list duration only at the manager",
    "start": "1510000",
    "end": "1513120"
  },
  {
    "text": "stops But be careful for sprint brain",
    "start": "1513120",
    "end": "1517520"
  },
  {
    "text": "Lastly PDB can mitigate the impact of",
    "start": "1517520",
    "end": "1520400"
  },
  {
    "text": "voluntary disruption without losing",
    "start": "1520400",
    "end": "1522840"
  },
  {
    "text": "overload leasers",
    "start": "1522840",
    "end": "1526080"
  },
  {
    "text": "These practices sees will help make your",
    "start": "1526080",
    "end": "1528960"
  },
  {
    "text": "part more list friendly and take",
    "start": "1528960",
    "end": "1531679"
  },
  {
    "text": "advantage of Kubernetes automation",
    "start": "1531679",
    "end": "1536000"
  },
  {
    "text": "features And last here's some list This",
    "start": "1536600",
    "end": "1540880"
  },
  {
    "text": "slide has been uploaded to the event",
    "start": "1540880",
    "end": "1542960"
  },
  {
    "text": "site and all example are available on my",
    "start": "1542960",
    "end": "1547159"
  },
  {
    "text": "repository That's wrap up our deep dive",
    "start": "1547159",
    "end": "1550799"
  },
  {
    "text": "port restart session Thank you",
    "start": "1550799",
    "end": "1554210"
  },
  {
    "text": "[Applause]",
    "start": "1554210",
    "end": "1565248"
  }
]