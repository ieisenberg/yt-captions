[
  {
    "text": "getting the signal we're going to go ahead and kick this off uh thank you all for coming we are surprised that so many",
    "start": "40",
    "end": "5720"
  },
  {
    "text": "of you are here so late on Friday but we appreciate it hopefully this will be at",
    "start": "5720",
    "end": "11000"
  },
  {
    "text": "least entertaining um thank you for coming to the sigo Deep dive session we're going to give you an overview of",
    "start": "11000",
    "end": "16960"
  },
  {
    "text": "some stuff we've already done some stuff we're planning to do and then uh we're going to look at some exploratory work",
    "start": "16960",
    "end": "22320"
  },
  {
    "text": "that we're doing uh my name is Jordan liot I'm one of the tech leads for sigo work with a lot of people I see here uh",
    "start": "22320",
    "end": "30720"
  },
  {
    "text": "on the slide or in the original uh meeting Mo con was supposed to be here",
    "start": "30720",
    "end": "35800"
  },
  {
    "text": "he couldn't make it but instead we have hey uh I'm Anish I'm a software engineer at Microsoft I'm a member of kuity sigot",
    "start": "35800",
    "end": "43200"
  },
  {
    "text": "and maintainer for Secret store CSI driver and I'm Rita I am Sig o and",
    "start": "43200",
    "end": "49760"
  },
  {
    "text": "Microsoft and with that thank you for being here on such a late Friday afternoon so first let's kick off with",
    "start": "49760",
    "end": "57000"
  },
  {
    "text": "some graduated features uh all right so the first one that we",
    "start": "57000",
    "end": "63480"
  },
  {
    "text": "have structured authorization config uh Jordan nun and Rita myself worked on",
    "start": "63480",
    "end": "70320"
  },
  {
    "text": "that um so the idea behind this feature is instead of using a CLI flags for your",
    "start": "70320",
    "end": "77920"
  },
  {
    "text": "Cube API server now you have a single configuration file that you can actually",
    "start": "77920",
    "end": "83759"
  },
  {
    "text": "uh Define multiple web hooks uh and the config file can be reloaded without any",
    "start": "83759",
    "end": "90079"
  },
  {
    "text": "restarting of your API server um and you can actually provide customization",
    "start": "90079",
    "end": "95439"
  },
  {
    "text": "around what the um authorization looks like specifically customize web hook uh",
    "start": "95439",
    "end": "101799"
  },
  {
    "text": "timeout and uh failure policies uh and then we also have sell match conditions",
    "start": "101799",
    "end": "108320"
  },
  {
    "text": "uh to scope what type of conditions actually requires a a request to be",
    "start": "108320",
    "end": "114360"
  },
  {
    "text": "called to to call a web hook uh and some of these examples are",
    "start": "114360",
    "end": "119600"
  },
  {
    "text": "you know a deny we hook at the front of the authorization chain as you can see",
    "start": "119600",
    "end": "125079"
  },
  {
    "text": "uh and then in front of a standard node and rback authorizer uh and then a short",
    "start": "125079",
    "end": "131760"
  },
  {
    "text": "a super short timeout uh a Deni policy if errors are encountered um and then",
    "start": "131760",
    "end": "137959"
  },
  {
    "text": "using Cell match conditions to scope to a specific name space and exam that",
    "start": "137959",
    "end": "144760"
  },
  {
    "text": "System Controller so that an outage of the web hook that isn't going to create uh any issues to the cluster uh and then",
    "start": "144760",
    "end": "152519"
  },
  {
    "text": "a second allow web hook uh at the end of your authorization chain uh can also",
    "start": "152519",
    "end": "158360"
  },
  {
    "text": "have some uh timeouts as well as um failure",
    "start": "158360",
    "end": "163440"
  },
  {
    "text": "policy um obviously there's uh also a link at the bottom where you can check",
    "start": "163440",
    "end": "168560"
  },
  {
    "text": "out a previous demo that Lega did uh in 2023 really cool demo and the uh the",
    "start": "168560",
    "end": "176120"
  },
  {
    "text": "slides and links are all uploaded so uh feel free to check those out and you can follow those those",
    "start": "176120",
    "end": "181400"
  },
  {
    "text": "later uh next we have a structured authentication config um similarly uh",
    "start": "181400",
    "end": "188120"
  },
  {
    "text": "and this is a feature that Anish and mo worked on uh and similarly we want to take the responsibility from the flags",
    "start": "188120",
    "end": "195319"
  },
  {
    "text": "so that you can add a lot more customization with a configuration file and and again this is uh a config file",
    "start": "195319",
    "end": "201920"
  },
  {
    "text": "that you can reload without restarting the server uh and a lot of really awesome op uh options that you can",
    "start": "201920",
    "end": "208439"
  },
  {
    "text": "provide uh examp Le being multiple J authenticators um being able to uh",
    "start": "208439",
    "end": "214439"
  },
  {
    "text": "support multiple identity providers uh except multiple audiences as you can see",
    "start": "214439",
    "end": "221040"
  },
  {
    "text": "uh for the same authenticator uh and it can also extract data from your JW token",
    "start": "221040",
    "end": "226760"
  },
  {
    "text": "for authentication uh and then your identity provider uh that don't support uh open",
    "start": "226760",
    "end": "233200"
  },
  {
    "text": "ID connect Discovery can also be supported and once again we have cell expression that can be used to to",
    "start": "233200",
    "end": "240519"
  },
  {
    "text": "extract uh user attributes from the claims uh and as you can see from this",
    "start": "240519",
    "end": "245879"
  },
  {
    "text": "example um a pen to join or split claims and set other extra user attributes uh",
    "start": "245879",
    "end": "253640"
  },
  {
    "text": "and the cell expression can also be used to verify extracted user attributes are",
    "start": "253640",
    "end": "261160"
  },
  {
    "text": "acceptable next we have another really cool feature called uh label field uh",
    "start": "261479",
    "end": "266960"
  },
  {
    "text": "selector authorization uh David and Jordan worked on this um and this is a new feature",
    "start": "266960",
    "end": "273000"
  },
  {
    "text": "that allows you to create more finer grain authorization based on labels and fuel selectors um and this again allows",
    "start": "273000",
    "end": "281320"
  },
  {
    "text": "web hul authorizers in the future uh to allow lists watch requests providing",
    "start": "281320",
    "end": "286639"
  },
  {
    "text": "that the requests actually use labels uh and field selectors uh for example um it",
    "start": "286639",
    "end": "292160"
  },
  {
    "text": "is now possible for uh you to create an authorizer to say hey if uh the user",
    "start": "292160",
    "end": "298840"
  },
  {
    "text": "this user can not list all pods unless um the No Name matches some specific",
    "start": "298840",
    "end": "305120"
  },
  {
    "text": "value right um and then also another example is allow a user to watch all",
    "start": "305120",
    "end": "311120"
  },
  {
    "text": "secrets in a namespace that are not labeled as say confidential equal to true or something like",
    "start": "311120",
    "end": "317520"
  },
  {
    "text": "that very excited um another really cool feature",
    "start": "317520",
    "end": "323000"
  },
  {
    "text": "is um actually exposing no information in service account tokens uh Mo and",
    "start": "323000",
    "end": "329919"
  },
  {
    "text": "worked on this feature uh and since 130 uh kubernetes version 130 uh the",
    "start": "329919",
    "end": "336160"
  },
  {
    "text": "information from your Note is actually included in the token issued to the pot",
    "start": "336160",
    "end": "341400"
  },
  {
    "text": "uh and those user attributes are surfaced uh when the token is used to authenticate to the API server uh to the",
    "start": "341400",
    "end": "348960"
  },
  {
    "text": "API uh this actually means that authorization and emission components can see that information and restrict",
    "start": "348960",
    "end": "355960"
  },
  {
    "text": "requests uh based on the note of the pot the credential was issue to and whereby",
    "start": "355960",
    "end": "362440"
  },
  {
    "text": "again restricting access for what the no can access uh and then there's actually",
    "start": "362440",
    "end": "368560"
  },
  {
    "text": "another talk earlier this week uh called squashing trampling uh pots uh and then",
    "start": "368560",
    "end": "375000"
  },
  {
    "text": "the demo for that is uh included in that link uh thank you for that",
    "start": "375000",
    "end": "381639"
  },
  {
    "text": "demo uh another gradu feature is called restricted Anonymous",
    "start": "381639",
    "end": "387090"
  },
  {
    "text": "[Music] authentication uh uh sorry uh of of vgnc worked on this",
    "start": "387090",
    "end": "394599"
  },
  {
    "text": "particular feature and and um so ideally Anonymous access could be uh completely",
    "start": "394599",
    "end": "401720"
  },
  {
    "text": "turned off but as we all know sometimes that's pretty hard because there are special needs and with very very narrow",
    "start": "401720",
    "end": "408039"
  },
  {
    "text": "specific use cases for example um Health Z is for low balancing live Z is for",
    "start": "408039",
    "end": "413919"
  },
  {
    "text": "health check and cluster information so there are cases where you do need to enable anonymous access so with this new",
    "start": "413919",
    "end": "421240"
  },
  {
    "text": "feature it basically allows you to tightly control um how you want to specify specific inp points so that um",
    "start": "421240",
    "end": "429520"
  },
  {
    "text": "you know we don't make a mistake uh maybe a bad copy paste uh that could",
    "start": "429520",
    "end": "434800"
  },
  {
    "text": "actually end up opening up Anonymous access to your whole cluster uh and with this uh it will",
    "start": "434800",
    "end": "443120"
  },
  {
    "text": "prevent uh uh protect against accidental uh broad authorization",
    "start": "443120",
    "end": "449919"
  },
  {
    "text": "all right so that's that's what we've been busy working on over the past year and I want to talk about some of the",
    "start": "450440",
    "end": "456400"
  },
  {
    "text": "things that we are working on now that will be coming up in the next year uh",
    "start": "456400",
    "end": "462080"
  },
  {
    "text": "and as we go we're trying to put the names of the people who are working on these just so you get a sense of how",
    "start": "462080",
    "end": "467199"
  },
  {
    "text": "many different people are involved in these sometimes it's the same suspicious crew of characters but we really do have",
    "start": "467199",
    "end": "472919"
  },
  {
    "text": "a lot of people chipping in to help with these um so to here worked on these two",
    "start": "472919",
    "end": "478560"
  },
  {
    "text": "U the first is is the idea of a cluster trust bundle if you've ever needed to distribute CA roots to your pod uh",
    "start": "478560",
    "end": "484199"
  },
  {
    "text": "you've probably been forced to put them into a config map and then copy that config map into every namespace and then",
    "start": "484199",
    "end": "489800"
  },
  {
    "text": "Mount that into pods um that's what we do for the ca bundle for talking back to the QB API server uh and it's okay it's",
    "start": "489800",
    "end": "496879"
  },
  {
    "text": "not terrible but it's it's a little fiddly and it's tough to keep that synced across all namespaces uh and so",
    "start": "496879",
    "end": "503680"
  },
  {
    "text": "this is this is a first class way to do that um it connects to the idea of the",
    "start": "503680",
    "end": "508800"
  },
  {
    "text": "signer name that it's already in the certificate signing request API so this uh is giving a first class way to",
    "start": "508800",
    "end": "514360"
  },
  {
    "text": "distribute the ca roots for signers uh and then a corresponding feature to be",
    "start": "514360",
    "end": "520120"
  },
  {
    "text": "able to mount those into pods the second feature is POD",
    "start": "520120",
    "end": "526040"
  },
  {
    "text": "certificates uh which to here is also working on uh which would allow pods to request a certificate from a given",
    "start": "526040",
    "end": "533160"
  },
  {
    "text": "signer and have that certificate be issued and then mounted into the Pod and so these are sort of gener generic",
    "start": "533160",
    "end": "539680"
  },
  {
    "text": "mechanisms for Distributing trust and generic mechanisms for Distributing identity certificates which could be",
    "start": "539680",
    "end": "544880"
  },
  {
    "text": "used for all kinds of creative things I'm sure the next feature that is in",
    "start": "544880",
    "end": "551560"
  },
  {
    "text": "progress is something called external service account token signing uh toah",
    "start": "551560",
    "end": "557279"
  },
  {
    "text": "here worked on this but Harel is a a new person to our community he hasn't done a lot Upstream we're excited to have him",
    "start": "557279",
    "end": "563880"
  },
  {
    "text": "help with this uh and the idea is to externalize the signing so right now when the API server issues a token it",
    "start": "563880",
    "end": "570920"
  },
  {
    "text": "does that using private key files that holds locally and so the API server has the signing material available to it it",
    "start": "570920",
    "end": "577200"
  },
  {
    "text": "can make the token and issue it uh this optionally lets you replace that local",
    "start": "577200",
    "end": "582279"
  },
  {
    "text": "signer with a call out to a grpc API which uh lets you remove access to",
    "start": "582279",
    "end": "587839"
  },
  {
    "text": "signing material from the QB API server it lets you delegate that signing to some external possibly more trusted",
    "start": "587839",
    "end": "594600"
  },
  {
    "text": "signer like a cloud KMS uh or lets you at least have auditability that a",
    "start": "594600",
    "end": "601160"
  },
  {
    "text": "signature of a token happened U and so the that's on the signing side on the other side is getting the set of public",
    "start": "601160",
    "end": "608279"
  },
  {
    "text": "keys that you use to verify tokens and that also is part of this API so",
    "start": "608279",
    "end": "613880"
  },
  {
    "text": "externalizing the signing and externalizing the way you get public keys to verify tokens and a nice sort of",
    "start": "613880",
    "end": "620560"
  },
  {
    "text": "side property of externalizing the public key bit is that you can now get those dynamically so if you're doing a",
    "start": "620560",
    "end": "626519"
  },
  {
    "text": "key rotation uh you can fetch the keys regularly and get the new",
    "start": "626519",
    "end": "632399"
  },
  {
    "text": "keys without restarting your server and distribute them from some external external point we're excited to see this",
    "start": "632399",
    "end": "639200"
  },
  {
    "text": "happen this just merged in Alpha uh so it will be able to be used in beta or",
    "start": "639200",
    "end": "644279"
  },
  {
    "text": "stable hopefully next year next feature is fine grained cuet authorization so the cuet has an API",
    "start": "644279",
    "end": "650839"
  },
  {
    "text": "which some people know and some people don't uh and the way authorization was set up for that API U was that it carved",
    "start": "650839",
    "end": "657760"
  },
  {
    "text": "out a few specific things like uh health and uh metrics and logs and pretty much",
    "start": "657760",
    "end": "664120"
  },
  {
    "text": "everything else got put in a bucket because we really only expected the cube API server to be talking to the cubet",
    "start": "664120",
    "end": "669320"
  },
  {
    "text": "API and so fine gr authorization didn't really matter if the only client was",
    "start": "669320",
    "end": "674839"
  },
  {
    "text": "this one main highly privileged client anyway uh but there are actually scenarios where you have node local",
    "start": "674839",
    "end": "681639"
  },
  {
    "text": "agents that want to check things like configuration or health or inspect running pods and it was unfortunate that",
    "start": "681639",
    "end": "689399"
  },
  {
    "text": "to let those things work you had to give them unfettered access to the whole cuet API and so vanak also is working on a",
    "start": "689399",
    "end": "697399"
  },
  {
    "text": "feature to um allow access just to those",
    "start": "697399",
    "end": "702760"
  },
  {
    "text": "specific name uh end points uh without over granting permissions so we're excited to see that",
    "start": "702760",
    "end": "710040"
  },
  {
    "text": "happen the next uh feature uh St and IU worked on this one um who here has seen",
    "start": "710519",
    "end": "717440"
  },
  {
    "text": "a bit flip happen in at CD uh where you write something to at CD",
    "start": "717440",
    "end": "724399"
  },
  {
    "text": "and suddenly like instead of API version in kind it's like apj version and kind",
    "start": "724399",
    "end": "730200"
  },
  {
    "text": "yeah um cosmic rays are weird and they really do happen and the failure mode is",
    "start": "730200",
    "end": "738199"
  },
  {
    "text": "pretty horrific uh as soon as that happens to one of your objects in it CD that entire resource type becomes unlist",
    "start": "738199",
    "end": "746160"
  },
  {
    "text": "uh and if you can even manage to figure out which specific object went bad the",
    "start": "746160",
    "end": "751199"
  },
  {
    "text": "way you recover from that is also really bad you have to go do surgery talking directly to etcd um so that was one one",
    "start": "751199",
    "end": "759399"
  },
  {
    "text": "case where we saw this another case is if you're using something like uh storage encryption and there's a human",
    "start": "759399",
    "end": "765360"
  },
  {
    "text": "accident and you actually removed a a key needed for decryption before you had",
    "start": "765360",
    "end": "771320"
  },
  {
    "text": "fully uh migrated all of the data encrypted with that accidents happen",
    "start": "771320",
    "end": "776360"
  },
  {
    "text": "again the recovery the failure mode was just horrific and the recovery was very painful as well and so this feature",
    "start": "776360",
    "end": "783079"
  },
  {
    "text": "allows explicit uh Force deletion with",
    "start": "783079",
    "end": "788199"
  },
  {
    "text": "appropriate highly high high permissions explicit force delution of corrupt",
    "start": "788199",
    "end": "793839"
  },
  {
    "text": "objects um to allow recovering from scenarios like this hopefully you never",
    "start": "793839",
    "end": "800040"
  },
  {
    "text": "encounter those but if you do at least there will be a path forward for",
    "start": "800040",
    "end": "805440"
  },
  {
    "text": "you the next set of features that I'm I'm really excited about who here knew that once an image is pulled to a node",
    "start": "805560",
    "end": "812720"
  },
  {
    "text": "even if it required pull Secrets credentials to pull from the registry once it's on the Node any pod on the",
    "start": "812720",
    "end": "818680"
  },
  {
    "text": "Node can use that image by default who knew that okay maybe a third of us",
    "start": "818680",
    "end": "826160"
  },
  {
    "text": "um yeah that's been disappointing for 10 years there were workarounds to that",
    "start": "826160",
    "end": "832320"
  },
  {
    "text": "there's an entry admission plugin you can turn on called Always pull images which basically forces every pod to",
    "start": "832320",
    "end": "839320"
  },
  {
    "text": "always do an image registry ping every time it tries to start that gets around",
    "start": "839320",
    "end": "845560"
  },
  {
    "text": "this issue but then it causes other issues like your image registry is now in the critical path and an out is there",
    "start": "845560",
    "end": "850600"
  },
  {
    "text": "can mean your pod can't spawn new replicas on that node uh the workarounds weren't great and so St has been working",
    "start": "850600",
    "end": "857759"
  },
  {
    "text": "on uh a way to keep track of which credentials successfully were used to",
    "start": "857759",
    "end": "863079"
  },
  {
    "text": "pull images and then if new pods show up that haven't proven that they should have access to an image that required",
    "start": "863079",
    "end": "869720"
  },
  {
    "text": "credentials uh they have to prove themselves so on first attempt first use of an image by a pod with unproven",
    "start": "869720",
    "end": "876680"
  },
  {
    "text": "credentials it'll ping the registry and after that it'll get to use it without reut without putting the registry in the",
    "start": "876680",
    "end": "883440"
  },
  {
    "text": "CR critical path the second feature uh related to image PS uh Anish and mo have",
    "start": "883440",
    "end": "889839"
  },
  {
    "text": "been working on this uh right now when a pod has to authenticate to an image",
    "start": "889839",
    "end": "897399"
  },
  {
    "text": "registry there are only two options one one is it uses static credentials that live in kubernetes Secrets which either",
    "start": "897399",
    "end": "905399"
  },
  {
    "text": "you take responsibility for rotating or more realistically are just super long lived um that's one option the other",
    "start": "905399",
    "end": "912959"
  },
  {
    "text": "option is something the cluster administrator sets up that's node wide that has no idea of the pod that's using",
    "start": "912959",
    "end": "920839"
  },
  {
    "text": "an image is just told please give me your credential to pull an image I don't know who this is for uh and so this",
    "start": "920839",
    "end": "928000"
  },
  {
    "text": "enhances that itial plugin API to give more context about the Pod and the service account specifically that the",
    "start": "928000",
    "end": "934560"
  },
  {
    "text": "image is being pulled for and so it can do things like uh pass through a service",
    "start": "934560",
    "end": "940319"
  },
  {
    "text": "account token for Registries that are kubernetes aware and can make use of that or do a token exchange where the",
    "start": "940319",
    "end": "946440"
  },
  {
    "text": "service account a token is exchanged for some provider specific token using some mapping that the plugin determines so",
    "start": "946440",
    "end": "952959"
  },
  {
    "text": "this is going to allow us to have shorter live tokens better scoped image",
    "start": "952959",
    "end": "958680"
  },
  {
    "text": "po credentials uh and we're excited about seeing",
    "start": "958680",
    "end": "963639"
  },
  {
    "text": "that now we're into thees uh features U",
    "start": "964000",
    "end": "969040"
  },
  {
    "text": "remember we said that node claims inside tokens were sort of the foundation for",
    "start": "969040",
    "end": "974120"
  },
  {
    "text": "future work we want to do about bounding service account permissions this is one of those features so uh we've done a lot",
    "start": "974120",
    "end": "981800"
  },
  {
    "text": "of work with node restriction and node authorization to keep the cubet identity itself as constrained as we can to keep",
    "start": "981800",
    "end": "987360"
  },
  {
    "text": "it from escaping to other nodes but as soon as you have a Damon set that schedules pods out on every node and",
    "start": "987360",
    "end": "993920"
  },
  {
    "text": "runs with a service account and you give that service account super broad permissions well now every node in your",
    "start": "993920",
    "end": "1000680"
  },
  {
    "text": "cluster has access to credentials that it can use to escape and so so it sort of undes some of that work and uh we've",
    "start": "1000680",
    "end": "1007120"
  },
  {
    "text": "seen people struggle with this some people just end up overg granting stuff to demon sets anyway some people try to",
    "start": "1007120",
    "end": "1012319"
  },
  {
    "text": "be clever and like well we'll have this Damon set mount in the cuet credentials and use that instead to stay",
    "start": "1012319",
    "end": "1018920"
  },
  {
    "text": "constrainted it's just it it's been difficult and so we're trying to think about how we can use node information",
    "start": "1018920",
    "end": "1025760"
  },
  {
    "text": "inside service account tokens to opt into service accounts that are restricted to sort of the footprint of",
    "start": "1025760",
    "end": "1032319"
  },
  {
    "text": "their nodes permissions uh there are some tricky issues around this um you've got Damon sets wanting to do things the",
    "start": "1032319",
    "end": "1038280"
  },
  {
    "text": "node can do anyway so that's fine you've got service accounts wanting to do things that the node can't do but aren't",
    "start": "1038280",
    "end": "1045798"
  },
  {
    "text": "won't let you move between nodes and if you know that's what happening and you want to Grant it anyway that could be fine but how to express that is a little",
    "start": "1045799",
    "end": "1052559"
  },
  {
    "text": "tricky so this is in design if you're interested talk to Vanek or me or look for uh discussions of this in the Sig",
    "start": "1052559",
    "end": "1061400"
  },
  {
    "text": "meetings uh this last one I wanted to talk about is sort of a tweak to some of the CER certificate validation we",
    "start": "1061400",
    "end": "1067600"
  },
  {
    "text": "already do when the QB API server talks to a node it already uses standard TLS verification of the serving certificate",
    "start": "1067600",
    "end": "1074080"
  },
  {
    "text": "that the cuet presents which is fine uh but that's typically IP or DNS name",
    "start": "1074080",
    "end": "1079880"
  },
  {
    "text": "validation and in environments where nodes can cycle in and out rapidly and maybe IP addresses can be released and",
    "start": "1079880",
    "end": "1087320"
  },
  {
    "text": "reallocated rapidly uh we would like to do a little bit more uh to make sure that we're actually talking to the node",
    "start": "1087320",
    "end": "1093280"
  },
  {
    "text": "we think we're talking to and so this is this is a relatively small design I think this will go pretty quick uh but",
    "start": "1093280",
    "end": "1098679"
  },
  {
    "text": "it's doing additional checks on the TLs certificates when we talk to nodes just to strengthen our guarantee that we're",
    "start": "1098679",
    "end": "1105200"
  },
  {
    "text": "talking to the right node with that I want to hand it off to who's going to talk about some of the",
    "start": "1105200",
    "end": "1110360"
  },
  {
    "text": "Secret store work thank you okay so so far we talked about all",
    "start": "1110360",
    "end": "1116200"
  },
  {
    "text": "the Caps uh The Secret store CS sync controller is actually a new cot sub project uh this was derived from the",
    "start": "1116200",
    "end": "1123840"
  },
  {
    "text": "existing sub project which is called Secret store CSI driver uh we have an optional SYNC feature in the driver",
    "start": "1123840",
    "end": "1129559"
  },
  {
    "text": "which is not ideal so we basically came up with the design uh we worked with everyone in sigot and finally we spun it",
    "start": "1129559",
    "end": "1137039"
  },
  {
    "text": "off as a separate controller uh so right now the controller lives in kubernetes Sig uh n worked on the alpha release for",
    "start": "1137039",
    "end": "1143200"
  },
  {
    "text": "this one um and the goal is basically to use the existing providers that we",
    "start": "1143200",
    "end": "1148880"
  },
  {
    "text": "support for the CSI driver um we use the same RPC like the same communication",
    "start": "1148880",
    "end": "1153919"
  },
  {
    "text": "that we do between driver provider we use that for the controller provider as well um right now it's in Alpha uh we're",
    "start": "1153919",
    "end": "1159760"
  },
  {
    "text": "working towards the beta Milestone and for beta basically we're working on the rotation support so anytime a secret",
    "start": "1159760",
    "end": "1166080"
  },
  {
    "text": "changes in your external Secret store we will automatically update the kubernetes secret and then in addition to that",
    "start": "1166080",
    "end": "1172200"
  },
  {
    "text": "we're doing uh we're also adding metrics and then performing load testing to make sure that this can handle load uh once",
    "start": "1172200",
    "end": "1179440"
  },
  {
    "text": "the controller reaches beta Upstream uh we have a plan to deprecate the sync as",
    "start": "1179440",
    "end": "1184600"
  },
  {
    "text": "kuber feature in the driver and then I think once the controller reach is stable we will come up with a way to",
    "start": "1184600",
    "end": "1191480"
  },
  {
    "text": "completely remove the feature from the driver okay so we have covered the Caps",
    "start": "1191480",
    "end": "1199679"
  },
  {
    "text": "that have already graduated in sigo and then also the Caps that are currently",
    "start": "1199679",
    "end": "1205440"
  },
  {
    "text": "ongoing uh in the title for this talk if you had looked at it there was another thing which Mo had put in which was",
    "start": "1205440",
    "end": "1212320"
  },
  {
    "text": "maybe rback Plus+ so we entering that part of the talk which is going to be brief uh so first thing is user stories",
    "start": "1212320",
    "end": "1220679"
  },
  {
    "text": "for authorization so here are some of the user stories that we want to explore and cover so basically it's allowing",
    "start": "1220679",
    "end": "1227720"
  },
  {
    "text": "nodes to list part schedule through them while this is already handled by the node authorizer it cannot currently be",
    "start": "1227720",
    "end": "1234320"
  },
  {
    "text": "expressed in a generic Manner and then for example if you have a custom resource with a field that matches the",
    "start": "1234320",
    "end": "1239679"
  },
  {
    "text": "node name how can you ensure that the node agent can only list subset of the",
    "start": "1239679",
    "end": "1245760"
  },
  {
    "text": "custom resource relevant to that node it's scheduled on similarly consider a",
    "start": "1245760",
    "end": "1250919"
  },
  {
    "text": "scenario where a controller needs to list only a specific type of resource so these type of restrictions could also",
    "start": "1250919",
    "end": "1257640"
  },
  {
    "text": "extend to other use cas cases such as applying field selectors to secrets and then expanding on this it could be",
    "start": "1257640",
    "end": "1264520"
  },
  {
    "text": "valuable to support uh field selector label selectors on secrets for instance you might want a dynamic control",
    "start": "1264520",
    "end": "1270960"
  },
  {
    "text": "mechanism where a user can only list Secrets labeled with their username and",
    "start": "1270960",
    "end": "1276600"
  },
  {
    "text": "this would require referencing attributes dynamically across resources and roles uh these are the US user stories",
    "start": "1276600",
    "end": "1283880"
  },
  {
    "text": "and problems that we've been considering to address uh throughout these changes",
    "start": "1283880",
    "end": "1289000"
  },
  {
    "text": "maintaining uh straight backward compatibility is critical so we need to ensure that the older API servers",
    "start": "1289000",
    "end": "1296159"
  },
  {
    "text": "continue to process requests as expected without any unintended",
    "start": "1296159",
    "end": "1301520"
  },
  {
    "text": "behaviors so all of these can already be done in some way or form using webook",
    "start": "1301520",
    "end": "1307440"
  },
  {
    "text": "authorizers but what if you want a declarative way to do this so that is where rback Plus+",
    "start": "1307440",
    "end": "1315120"
  },
  {
    "text": "totally an experimental thing I would say it's pre pre Alpha like we're just looking at it uh so the approach that",
    "start": "1315120",
    "end": "1321159"
  },
  {
    "text": "we're exploring is conditional R back effectively uh what I mean by conditional is in a sense very similar",
    "start": "1321159",
    "end": "1327320"
  },
  {
    "text": "to what exists today uh but today but it's just more Dynamic so you could say",
    "start": "1327320",
    "end": "1332440"
  },
  {
    "text": "that a cluster role binding is conditional on the user that they can apply to and a role binding is",
    "start": "1332440",
    "end": "1338520"
  },
  {
    "text": "conditional on the user and then the intersection of both the users and the name space it resides in so there are",
    "start": "1338520",
    "end": "1344880"
  },
  {
    "text": "sort of two dimensions of conditionality that exist today uh you can scope it down to either the user or user and the",
    "start": "1344880",
    "end": "1351919"
  },
  {
    "text": "namespace and then there is a smaller so there there are a small set of Dimensions that are made available today",
    "start": "1351919",
    "end": "1358679"
  },
  {
    "text": "the idea is to make more Dynamic Dimensions available and the design that",
    "start": "1358679",
    "end": "1363960"
  },
  {
    "text": "we are exploring and the POC is uh leaving the cluster role as is and then",
    "start": "1363960",
    "end": "1369600"
  },
  {
    "text": "assume you don't need this level of fanciness in case of R bindings and then this leaves us with cluster R binding",
    "start": "1369600",
    "end": "1376520"
  },
  {
    "text": "and making that conditional so right now in the PC we are calling it conditional uh cluster roll binding and",
    "start": "1376520",
    "end": "1384279"
  },
  {
    "text": "it's basically a different way to bind cluster roles at cluster scope but in",
    "start": "1384279",
    "end": "1389679"
  },
  {
    "text": "addition having a bunch of cell Expressions that get evaluated before you uh Do It um so this is the gist of",
    "start": "1389679",
    "end": "1397960"
  },
  {
    "text": "the proposal and then what I'm going to do is show you how the API looks like",
    "start": "1397960",
    "end": "1403600"
  },
  {
    "text": "right now uh basically the cluster roles remains exactly the same as a user you",
    "start": "1403600",
    "end": "1409520"
  },
  {
    "text": "define a cluster role saying Hey I want to have secrets and then get and list",
    "start": "1409520",
    "end": "1414679"
  },
  {
    "text": "and then there is a new resource called the conditional cluster Ro binding um",
    "start": "1414679",
    "end": "1419720"
  },
  {
    "text": "and then if you look at it basically this cluster conditional cluster role binding references the cluster role name",
    "start": "1419720",
    "end": "1425360"
  },
  {
    "text": "via a new field and then in addition to that there are a list of conditions that need to evaluate to True before this",
    "start": "1425360",
    "end": "1431480"
  },
  {
    "text": "cluster role gets activated and in here for this example basically this is an example where you want to constrain a",
    "start": "1431480",
    "end": "1438000"
  },
  {
    "text": "controller can list all secrets of a particular type um and then so the first expression",
    "start": "1438000",
    "end": "1444400"
  },
  {
    "text": "is basically saying hey if the request user matches Bob and then we are further",
    "start": "1444400",
    "end": "1449880"
  },
  {
    "text": "constraining to say if it matches only field selector so basically a type equal",
    "start": "1449880",
    "end": "1456080"
  },
  {
    "text": "to my type so this particular user Bob can list secrets of uh this particular field and when both these conditions",
    "start": "1456080",
    "end": "1463480"
  },
  {
    "text": "evaluate to true then basically the user can list those Secrets then here's an example on how",
    "start": "1463480",
    "end": "1469679"
  },
  {
    "text": "you could do this with label selectors on secrets so a similar expression which is to say us a bob but in addition to",
    "start": "1469679",
    "end": "1477360"
  },
  {
    "text": "that you can also use the label selectors and say if a secret has my",
    "start": "1477360",
    "end": "1482720"
  },
  {
    "text": "label equal to my value then this particular user Bob is allowed to list secrets of those",
    "start": "1482720",
    "end": "1487799"
  },
  {
    "text": "type and then uh this is an example on how you could use regular expressions",
    "start": "1487799",
    "end": "1493279"
  },
  {
    "text": "and say a particular user can access name spaces that start with a particular",
    "start": "1493279",
    "end": "1498799"
  },
  {
    "text": "prefix and here the example that we're doing is prod hyphen so Bob user can",
    "start": "1498799",
    "end": "1504360"
  },
  {
    "text": "access names spaces prod one prod two and so on right and then an interesting example here that we have is around what",
    "start": "1504360",
    "end": "1513000"
  },
  {
    "text": "nodes can list um basically the first expression here is checking the prefix",
    "start": "1513000",
    "end": "1518320"
  },
  {
    "text": "and asserting the name is not just a prefix so it's asserting that the object that's making the request is actually a",
    "start": "1518320",
    "end": "1523960"
  },
  {
    "text": "node and then it is also asserting that this particular node belongs to to the group system nodes uh and then in the",
    "start": "1523960",
    "end": "1533159"
  },
  {
    "text": "last expression it's basically checking that the one that it's listing the node name matches what whichever uh node is",
    "start": "1533159",
    "end": "1541200"
  },
  {
    "text": "requesting it so basically we're uh tightening that in the third condition",
    "start": "1541200",
    "end": "1547080"
  },
  {
    "text": "so this is a quick overview of the experimental API and then I have a",
    "start": "1547080",
    "end": "1554039"
  },
  {
    "text": "cluster uh which has this so when you do K get conditional cluster Ro binding",
    "start": "1554039",
    "end": "1560120"
  },
  {
    "text": "basically I have applied all the conditional cluster roles uh that are the RO Bindings that I shared in the",
    "start": "1560120",
    "end": "1567240"
  },
  {
    "text": "previous one so if I [Music]",
    "start": "1567240",
    "end": "1573229"
  },
  {
    "text": "do okay so this is the example from the name spaces that that have a particular",
    "start": "1574399",
    "end": "1580960"
  },
  {
    "text": "prefix right and so what we had allowed was the user Bob is allowed to access anything with prod hyphen so if I do CBE",
    "start": "1580960",
    "end": "1587640"
  },
  {
    "text": "CTL get Secrets no error I can if there are secrets in that namespace then I can get it similarly if I do prod two that",
    "start": "1587640",
    "end": "1595799"
  },
  {
    "text": "works uh but as user Bob now if I try to access secrets in dev namespace then it",
    "start": "1595799",
    "end": "1603760"
  },
  {
    "text": "basically says you're not allowed to do that and then similarly if we look",
    "start": "1603760",
    "end": "1611600"
  },
  {
    "text": "at okay so this is the one with the label selector so in the label selector",
    "start": "1611919",
    "end": "1617000"
  },
  {
    "text": "we said anyone with uh is allowed to list secrets that have this particular label which is my label",
    "start": "1617000",
    "end": "1622559"
  },
  {
    "text": "equal to my value so when I do that the conditional policy allows me to do it",
    "start": "1622559",
    "end": "1628240"
  },
  {
    "text": "but if I try anything else uh then it basically says no you're not allowed to do that and then the last thing",
    "start": "1628240",
    "end": "1636760"
  },
  {
    "text": "is with the field selectors okay so in the field selector",
    "start": "1636760",
    "end": "1644039"
  },
  {
    "text": "if I try a type that I'm not allowed to basically it'll out but in this case if I do the my type",
    "start": "1644039",
    "end": "1652320"
  },
  {
    "text": "that is allowed by that conditional binding then it'll work uh so this is a",
    "start": "1652320",
    "end": "1657880"
  },
  {
    "text": "quick demo of what we're thinking and so far what we have done is we have presented this in the seot meeting uh",
    "start": "1657880",
    "end": "1663640"
  },
  {
    "text": "which is 2 weeks before the cubec con we got a lot of good be feedback from David Jordan and other folks on the call uh so",
    "start": "1663640",
    "end": "1670559"
  },
  {
    "text": "we're going to continue working on a newer version of the API uh to address those comments uh but if this is",
    "start": "1670559",
    "end": "1678600"
  },
  {
    "text": "anything that interests you or if you have user scenarios that could fit in this uh feel free to reach out to us or",
    "start": "1678600",
    "end": "1685440"
  },
  {
    "text": "like join the SE",
    "start": "1685440",
    "end": "1688398"
  },
  {
    "text": "call okay that's it um we want to leave some time for questions I think we have a little bit of time um there's links to",
    "start": "1693279",
    "end": "1700519"
  },
  {
    "text": "where you can find us after today we'd love to have you join and participate in the conversation and help out with some of these things that's it thank you",
    "start": "1700519",
    "end": "1710120"
  },
  {
    "text": "I think there are microphon so if you have a question go to the microphone that'll help the recording and help other people thank you yeah hey",
    "start": "1711760",
    "end": "1719399"
  },
  {
    "text": "hello yeah hi uh quick question um about the image pull off and you said it's",
    "start": "1719399",
    "end": "1725880"
  },
  {
    "text": "kind of a per pod thing is it would pods that are part of the same deployment",
    "start": "1725880",
    "end": "1731399"
  },
  {
    "text": "also continue doing that off because that would affect cold starts uh which",
    "start": "1731399",
    "end": "1736559"
  },
  {
    "text": "which of the two features are you talking about the one that like reveries access reification uh so the",
    "start": "1736559",
    "end": "1742559"
  },
  {
    "text": "reification um is not pod specific rific looks at",
    "start": "1742559",
    "end": "1748240"
  },
  {
    "text": "the credentials that are being used to pull the image which today are just the",
    "start": "1748240",
    "end": "1753480"
  },
  {
    "text": "static image pole secrets and so that's what it pays attention to it basically says uh it takes a hash of the actual",
    "start": "1753480",
    "end": "1761640"
  },
  {
    "text": "credential data and it also looks at the dimension of the secret like the name namespace uid and it says if either of",
    "start": "1761640",
    "end": "1768399"
  },
  {
    "text": "those were previously allowed to pull this image then you're good so if you have a bunch of pods from the same",
    "start": "1768399",
    "end": "1774279"
  },
  {
    "text": "deployment using the same image pull secrets on the same node only the first one is going to hit the registry okay",
    "start": "1774279",
    "end": "1780399"
  },
  {
    "text": "awesome thanks yep um so that rback Plus+ is pretty",
    "start": "1780399",
    "end": "1787320"
  },
  {
    "text": "cool um one question I I noticed in unless I missed it in your demo you",
    "start": "1787320",
    "end": "1793399"
  },
  {
    "text": "drilled in deep into the object uh that you're requesting but for the user you",
    "start": "1793399",
    "end": "1799760"
  },
  {
    "text": "were just testing the username and I'm wondering if we can like go into the labels that are on the user service",
    "start": "1799760",
    "end": "1806360"
  },
  {
    "text": "account if it's got any uh so not the labels but in the user",
    "start": "1806360",
    "end": "1812120"
  },
  {
    "text": "so basically the user info is available uh and then apart from that the request attribute so in that the name space name",
    "start": "1812120",
    "end": "1818440"
  },
  {
    "text": "the label selector and the field selectors that's what we are thinking of exposing right",
    "start": "1818440",
    "end": "1823640"
  },
  {
    "text": "now yeah so the way the authentication layer works",
    "start": "1823640",
    "end": "1828720"
  },
  {
    "text": "uh is that the authenticator returns a set of user attributes username some groups and then some extra attributes uh",
    "start": "1828720",
    "end": "1836480"
  },
  {
    "text": "and so it's up to the authenticator to decide what goes in those extra attributes uh and for service account",
    "start": "1836480",
    "end": "1841720"
  },
  {
    "text": "authentication things like the node and the Pod are now surfaced as extra",
    "start": "1841720",
    "end": "1847320"
  },
  {
    "text": "attributes but you don't have access all the way back through to the surface account API object and labels and stuff",
    "start": "1847320",
    "end": "1854159"
  },
  {
    "text": "there I see okay",
    "start": "1854159",
    "end": "1858000"
  },
  {
    "text": "nobody else everybody's ready to go home all right I think we'll call it there thank you all for coming out hope to see",
    "start": "1860679",
    "end": "1867279"
  },
  {
    "text": "you later have a great trip home see you",
    "start": "1867279",
    "end": "1871559"
  }
]