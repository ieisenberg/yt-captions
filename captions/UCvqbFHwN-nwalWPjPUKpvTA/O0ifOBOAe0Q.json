[
  {
    "start": "0",
    "end": "115000"
  },
  {
    "text": "and okay",
    "start": "80",
    "end": "5680"
  },
  {
    "text": "welcome to another cncf live webinar everyone advancements in kubernetes",
    "start": "5680",
    "end": "10719"
  },
  {
    "text": "workload identity for azure i'm libby schultz and i'll be moderating today's webinar i'm going to read our code of",
    "start": "10719",
    "end": "16320"
  },
  {
    "text": "conduct and then hand it over to anish rama zakar and ernest wong software",
    "start": "16320",
    "end": "21520"
  },
  {
    "text": "engineers at microsoft a few housekeeping items before we get started during the webinar you're not",
    "start": "21520",
    "end": "27119"
  },
  {
    "text": "able to speak as an attendee but please add all of your comments and questions to the chat box on the right hand side",
    "start": "27119",
    "end": "33600"
  },
  {
    "text": "and we will get to as many questions as we can at the end this is an official webinar of the cncf",
    "start": "33600",
    "end": "39040"
  },
  {
    "text": "and as such is subject to the cncf code of conduct please do not add anything to the chat or questions that would be in",
    "start": "39040",
    "end": "44960"
  },
  {
    "text": "violation of that code of conduct and please be respectful of all of your fellow participants and presenters",
    "start": "44960",
    "end": "50640"
  },
  {
    "text": "please also note that the recording and slides will be posted later today to the cncf online programs page",
    "start": "50640",
    "end": "58199"
  },
  {
    "text": "community.cncf.io under online programs they're also available via your registration link and the recording will",
    "start": "58199",
    "end": "64239"
  },
  {
    "text": "be on our online programs youtube playlist on on youtube with that i'll hand it to",
    "start": "64239",
    "end": "70720"
  },
  {
    "text": "anish and ernest to kick off today's presentation thanks",
    "start": "70720",
    "end": "76799"
  },
  {
    "text": "so yeah i'm ernest from the microsoft azure container upstream team we focus",
    "start": "76799",
    "end": "82320"
  },
  {
    "text": "on developing cloud-native open source software for our",
    "start": "82320",
    "end": "88080"
  },
  {
    "text": "customers at azure and welcome to this uh presentations",
    "start": "88080",
    "end": "94320"
  },
  {
    "text": "hey um i'm manish i'm part of the same team so we're part of azure container compute tab security team and then we",
    "start": "94400",
    "end": "100720"
  },
  {
    "text": "maintain a couple of open source security projects i think some of them that you've heard is azure workload",
    "start": "100720",
    "end": "106159"
  },
  {
    "text": "entity secret store csi driver and kubernetes kms",
    "start": "106159",
    "end": "112680"
  },
  {
    "start": "115000",
    "end": "148000"
  },
  {
    "text": "so yeah in today's presentation we're gonna touch on uh our projects a depauw identity and",
    "start": "117680",
    "end": "124960"
  },
  {
    "text": "workload identity and we're going to talk about pros and cons for each project and initially just",
    "start": "124960",
    "end": "131360"
  },
  {
    "text": "going to do a quick demo on workload identity and last but not least i'll",
    "start": "131360",
    "end": "137520"
  },
  {
    "text": "also talk about the road maps and some resource that folks can check out after",
    "start": "137520",
    "end": "142640"
  },
  {
    "text": "the presentation to learn more about the projects",
    "start": "142640",
    "end": "146640"
  },
  {
    "text": "okay so imagine you're in application developers on azure and your",
    "start": "149200",
    "end": "154319"
  },
  {
    "text": "applications wants to access some azure cloud resource you have a couple of options",
    "start": "154319",
    "end": "160400"
  },
  {
    "text": "first you can create a service principle which contains a client id and client",
    "start": "160400",
    "end": "165760"
  },
  {
    "text": "secrets that's not very secure because your client secret can be leaked and you have",
    "start": "165760",
    "end": "171440"
  },
  {
    "text": "to manually rotate the secret every once in a while to keep your system secured the second options which is what aad pod",
    "start": "171440",
    "end": "178879"
  },
  {
    "text": "identity is mainly about is to use an azure manage identity",
    "start": "178879",
    "end": "184959"
  },
  {
    "text": "you can think of manage identity as a surface principle but without the client secrets this is",
    "start": "184959",
    "end": "192239"
  },
  {
    "text": "beneficial because users don't have to be concerned about leaking the client secrets",
    "start": "192239",
    "end": "197360"
  },
  {
    "text": "because there's no more client secrets and the users don't have to manually rotate the client secrets anymore",
    "start": "197360",
    "end": "204239"
  },
  {
    "text": "and yeah let's apply these concepts to kubernetes let's say you're kubernetes developers and",
    "start": "204239",
    "end": "210640"
  },
  {
    "text": "on azure and your kubernetes applications wants to access some azure cloud resource for example",
    "start": "210640",
    "end": "217040"
  },
  {
    "text": "fetching a secret from azure key vault or downloading of files from azure storage you can either",
    "start": "217040",
    "end": "224640"
  },
  {
    "text": "choose the surface principle route which is not very secured or the managed identity rounds which is what we",
    "start": "224640",
    "end": "231200"
  },
  {
    "text": "recommend however as i mentioned earlier you can",
    "start": "231200",
    "end": "237439"
  },
  {
    "text": "you can only attach manage identity on the vm level or",
    "start": "237840",
    "end": "243200"
  },
  {
    "text": "or your kubernetes cluster level and once you assign the manage identity to your clusters all the applications",
    "start": "243200",
    "end": "249120"
  },
  {
    "text": "within the clusters will have the same access to the same set of azure resource which is not very ideal in some",
    "start": "249120",
    "end": "255200"
  },
  {
    "text": "situations you might want to restrict a particular application to only be able to fetch secrets from a key",
    "start": "255200",
    "end": "261919"
  },
  {
    "text": "vault but not be able to access some unauthorized resource",
    "start": "261919",
    "end": "267440"
  },
  {
    "text": "so this is where adp identity comes in not only does it",
    "start": "267440",
    "end": "273199"
  },
  {
    "start": "272000",
    "end": "423000"
  },
  {
    "text": "help developers assigned managed identities to individuals kubernetes notes using the concepts of kubernetes",
    "start": "273199",
    "end": "280080"
  },
  {
    "text": "crds but it also acts as a gatekeeper to make sure that our kubernetes",
    "start": "280080",
    "end": "286080"
  },
  {
    "text": "applications are using the correct managed identity that they're supposed to use",
    "start": "286080",
    "end": "292639"
  },
  {
    "text": "so here is a quick simplified architecture for aed pod",
    "start": "292639",
    "end": "298080"
  },
  {
    "text": "identity so developers who wants to use those projects will start off by creating two",
    "start": "298080",
    "end": "304639"
  },
  {
    "text": "kubernetes crds azure identity and azure identity bindings",
    "start": "304639",
    "end": "310400"
  },
  {
    "text": "azure identity is a representation of an azure managed identity",
    "start": "310400",
    "end": "315919"
  },
  {
    "text": "it contains the client id of the identity as well as the azure resource id of the identity that",
    "start": "315919",
    "end": "323039"
  },
  {
    "text": "you want to assign to your workload next the developers will create",
    "start": "323039",
    "end": "329600"
  },
  {
    "text": "an azure identity binding which is a kubernetes custom resource that binds an",
    "start": "329600",
    "end": "336400"
  },
  {
    "text": "azure identity with a pod using label selectors in the pods metadata",
    "start": "336400",
    "end": "344080"
  },
  {
    "text": "finally the developers will create their pods with that particular label defined in our",
    "start": "344080",
    "end": "350080"
  },
  {
    "text": "binding crds and once the pot is created a depo identity will assign the manage",
    "start": "350080",
    "end": "356880"
  },
  {
    "text": "identity defined in azure identity crds to where the pod is",
    "start": "356880",
    "end": "362160"
  },
  {
    "text": "scheduled and once the assignment is complete the pod can start accessing azure resource",
    "start": "362160",
    "end": "368160"
  },
  {
    "text": "with azure sdk and under the hood azure sdk will fetch",
    "start": "368160",
    "end": "373600"
  },
  {
    "text": "and access token from our instant metadata service or",
    "start": "373600",
    "end": "378840"
  },
  {
    "text": "imds and that piece of traffic uh is intercept by aadpod identity",
    "start": "378840",
    "end": "385440"
  },
  {
    "text": "and we'll make sure that the token request is valid that is uh the pod",
    "start": "385440",
    "end": "391280"
  },
  {
    "text": "requesting the access token is indeed using a managed identity that they're supposed",
    "start": "391280",
    "end": "396400"
  },
  {
    "text": "to use and with this validations we can block any",
    "start": "396400",
    "end": "401440"
  },
  {
    "text": "pods or workload that are trying to use a different identity that they're not supposed to use",
    "start": "401440",
    "end": "407680"
  },
  {
    "text": "and after the validation is complete imds will return the token back to the pod and the pod can access whatever",
    "start": "407680",
    "end": "414720"
  },
  {
    "text": "azure resource they're supposed to access and with this model it was fine but we",
    "start": "414720",
    "end": "422080"
  },
  {
    "text": "do have some limitations that prevent us from scaling further first identity assignments operations",
    "start": "422080",
    "end": "429840"
  },
  {
    "start": "423000",
    "end": "490000"
  },
  {
    "text": "generally takes around 10 to 40 seconds to complete so that means applications won't be able",
    "start": "429840",
    "end": "436479"
  },
  {
    "text": "to access azure resource for around 40 seconds uh if the identity is not previously",
    "start": "436479",
    "end": "443039"
  },
  {
    "text": "assigned to the underlying azure node second this solutions only works on",
    "start": "443039",
    "end": "449199"
  },
  {
    "text": "azure so kubernetes applications running in other environments will have to use",
    "start": "449199",
    "end": "454880"
  },
  {
    "text": "surface principles which is not very secured as i mentioned earlier next it only supports the linux workload",
    "start": "454880",
    "end": "462880"
  },
  {
    "text": "and with the increase in developers running containerized windows workload on azure we tried to prototype pod",
    "start": "462880",
    "end": "469599"
  },
  {
    "text": "identity for windows but we didn't have any luck with it and last but not least over the past",
    "start": "469599",
    "end": "476160"
  },
  {
    "text": "years we have encountered some imds caching issues which causes",
    "start": "476160",
    "end": "482319"
  },
  {
    "text": "uh some of some of our users to not be able to fetch tokens in their applications",
    "start": "482319",
    "end": "487840"
  },
  {
    "text": "and with that being said azure workload identity the next generations of aed pod",
    "start": "487840",
    "end": "493280"
  },
  {
    "start": "490000",
    "end": "533000"
  },
  {
    "text": "identity will address all of these concerns that i just mentioned it doesn't require identity assignment",
    "start": "493280",
    "end": "500400"
  },
  {
    "text": "operations uh it's cloud agnostic",
    "start": "500400",
    "end": "506080"
  },
  {
    "text": "meaning this solutions will work in any clouds and any",
    "start": "506080",
    "end": "512320"
  },
  {
    "text": "environments including your local environment",
    "start": "512320",
    "end": "518560"
  },
  {
    "text": "and it also works on your windows workload out of the box and it doesn't rely on",
    "start": "518560",
    "end": "524320"
  },
  {
    "text": "imds to fetch access token so how do we achieve all these",
    "start": "524320",
    "end": "529920"
  },
  {
    "text": "there are three main pillars that enable us to move forward with the new design",
    "start": "529920",
    "end": "536480"
  },
  {
    "start": "533000",
    "end": "605000"
  },
  {
    "text": "federated identity credentials surface accounts and mutating left hooks",
    "start": "536480",
    "end": "541519"
  },
  {
    "text": "let me quickly explain what each of these components means a federated identity credentials helps",
    "start": "541519",
    "end": "549680"
  },
  {
    "text": "establish a trust relationship between an external identity providers and",
    "start": "549680",
    "end": "555760"
  },
  {
    "text": "an identity within our azure active directory what this means is that we can turn our",
    "start": "555760",
    "end": "562160"
  },
  {
    "text": "kubernetes clusters into an identity providers using built-in features",
    "start": "562160",
    "end": "568320"
  },
  {
    "text": "and once our kubernetes clusters can issue tokens to our workload",
    "start": "568320",
    "end": "574320"
  },
  {
    "text": "we can establish a trust relationship between our kubernetes clusters and",
    "start": "574320",
    "end": "580720"
  },
  {
    "text": "an identity in aad once aad acknowledged this relationship we can",
    "start": "580720",
    "end": "586959"
  },
  {
    "text": "start exchanging tokens issued by our clusters for a valid",
    "start": "586959",
    "end": "592880"
  },
  {
    "text": "aad token and we can use the aad token to access our azure resource",
    "start": "592880",
    "end": "599040"
  },
  {
    "text": "so how do we turn our kubernetes clusters into an identity providers well",
    "start": "599040",
    "end": "604240"
  },
  {
    "text": "the concept of identity in kubernetes is not anything new",
    "start": "604240",
    "end": "609920"
  },
  {
    "start": "605000",
    "end": "821000"
  },
  {
    "text": "in kubernetes a surface account represents a identity that workload can use kubernetes",
    "start": "609920",
    "end": "617120"
  },
  {
    "text": "administrators can set our back rules to against the surface accounts to",
    "start": "617120",
    "end": "622160"
  },
  {
    "text": "control what their workload can access within the clusters",
    "start": "622160",
    "end": "627440"
  },
  {
    "text": "last but not least azure workload identity also contains one core components which is our",
    "start": "627440",
    "end": "633760"
  },
  {
    "text": "mutating admission web hook the job of the mutating web hook is to",
    "start": "633760",
    "end": "639200"
  },
  {
    "text": "intercept any workload admissions requests from the users and project the surface account token to",
    "start": "639200",
    "end": "647040"
  },
  {
    "text": "our containerized workload file system and it also inject several",
    "start": "647040",
    "end": "652800"
  },
  {
    "text": "environment variables as well and by having a mutating web hook users don't have to manually change their",
    "start": "652800",
    "end": "659360"
  },
  {
    "text": "workload to manifest to support this new authentication flow so let's look at how",
    "start": "659360",
    "end": "664880"
  },
  {
    "text": "we glue these three main components together first the users will",
    "start": "664880",
    "end": "671440"
  },
  {
    "text": "create a surface account for their workload in the kubernetes clusters you can think of",
    "start": "671440",
    "end": "677120"
  },
  {
    "text": "the surface account as an azure identity crds in aed pod identity",
    "start": "677120",
    "end": "684320"
  },
  {
    "text": "next the users will initiate a request to aad to establish a trust relationship",
    "start": "684320",
    "end": "691120"
  },
  {
    "text": "between our surface account and identity in aad",
    "start": "691120",
    "end": "696959"
  },
  {
    "text": "what this will do is that if we give aad and valid",
    "start": "696959",
    "end": "702399"
  },
  {
    "text": "surface account token it should return about aad token back to our workload",
    "start": "702399",
    "end": "708880"
  },
  {
    "text": "and once this relationship is established we can deploy our mutating webhook",
    "start": "708880",
    "end": "716480"
  },
  {
    "text": "as well as our workload the webhook will intercept the admission request that wants to use the workload",
    "start": "716480",
    "end": "723440"
  },
  {
    "text": "identity project and it will automatically project the surface account token to the file system as well",
    "start": "723440",
    "end": "729920"
  },
  {
    "text": "as a couple of environment variables and",
    "start": "729920",
    "end": "735600"
  },
  {
    "text": "our workload can now leverage our latest and greatest azure sdk to access",
    "start": "735600",
    "end": "741760"
  },
  {
    "text": "our azure resource the benefits of using azure sdk is that it helps abstract the",
    "start": "741760",
    "end": "748720"
  },
  {
    "text": "token exchange steps and under the hood azure sdk will read the environment",
    "start": "748720",
    "end": "754320"
  },
  {
    "text": "variables and the projected surface account token in our file system and",
    "start": "754320",
    "end": "759360"
  },
  {
    "text": "pass those parameters to azure active directory aad will then verify the authenticity of",
    "start": "759360",
    "end": "766000"
  },
  {
    "text": "the tokens and if it is valid aad will return an access token back to our",
    "start": "766000",
    "end": "772399"
  },
  {
    "text": "azure sdk and with a valid access token we can now access any resource in a cloud",
    "start": "772399",
    "end": "779519"
  },
  {
    "text": "and yeah as you can see we're now able to eliminate everything we mentioned a couple slides ago users don't have to",
    "start": "779519",
    "end": "786320"
  },
  {
    "text": "wait 40 seconds for the identity assignment operations and this solution is cloud and os",
    "start": "786320",
    "end": "792240"
  },
  {
    "text": "agnostics so it works in any environment now last but not least we don't have to",
    "start": "792240",
    "end": "797279"
  },
  {
    "text": "fetch tokens through imds instead we now directly query ad endpoints",
    "start": "797279",
    "end": "804399"
  },
  {
    "text": "to exchange service account tokens for an access token",
    "start": "804399",
    "end": "809440"
  },
  {
    "text": "so i'm very super i'm super excited about this project and it was a great collaboration with aad",
    "start": "809440",
    "end": "816560"
  },
  {
    "text": "aks team as well as the azure sdk team and with that being said i'll hand it off to anish for a quick demo",
    "start": "816560",
    "end": "825360"
  },
  {
    "start": "821000",
    "end": "1245000"
  },
  {
    "text": "thank you ernest okay um so we've been working on azure workload identity for a while now",
    "start": "825519",
    "end": "832399"
  },
  {
    "text": "and we're really excited to have this finally available for our users to try out um this is based on the new workload",
    "start": "832399",
    "end": "839199"
  },
  {
    "text": "identity federation which is currently under preview so as part of this demo what we're going to see is we're going",
    "start": "839199",
    "end": "844320"
  },
  {
    "text": "to see workload identity in action with azure ad applications um i'm a fan of",
    "start": "844320",
    "end": "850079"
  },
  {
    "text": "live demos but just for this purpose of the live webinar what i've done is i've done a recording so what we're going to",
    "start": "850079",
    "end": "855120"
  },
  {
    "text": "do is run through the recording and then i will um talk through what is going on um so as part of this demo what i've",
    "start": "855120",
    "end": "862480"
  },
  {
    "text": "done is i've created a aks cluster with this new flag called enable oidc",
    "start": "862480",
    "end": "868839"
  },
  {
    "text": "issuer so this is a one node aks cluster and it is running kubernetes version",
    "start": "868839",
    "end": "874240"
  },
  {
    "text": "v122 um and i've already enabled the odc issuer on this cluster",
    "start": "874240",
    "end": "880000"
  },
  {
    "text": "so this oidc issuer feature is currently in preview on aks",
    "start": "880000",
    "end": "885279"
  },
  {
    "text": "when you create a new cluster or update an existing cluster with enable oidc",
    "start": "885279",
    "end": "890639"
  },
  {
    "text": "issuer flag an issuer url will be set up for your cluster",
    "start": "890639",
    "end": "895839"
  },
  {
    "text": "in addition to the initial issuer url setup aks will handle the rotation of",
    "start": "895839",
    "end": "901440"
  },
  {
    "text": "the signing keys for the cluster every 90 days there will also be an option to perform",
    "start": "901440",
    "end": "907440"
  },
  {
    "text": "a rotation of these signing keys on demand if there has been any kind of compromise in the future",
    "start": "907440",
    "end": "913440"
  },
  {
    "text": "um so this is what my oidc issuer url looks like right and then the issuer url is",
    "start": "913440",
    "end": "919680"
  },
  {
    "text": "actually part of the aks cluster properties so that means you can query",
    "start": "919680",
    "end": "925519"
  },
  {
    "text": "it with azak's show command uh so when we do azak show here we can see this is my cluster issuer",
    "start": "925519",
    "end": "932000"
  },
  {
    "text": "uh which has the ftdn and basically a unique cluster id for each cluster",
    "start": "932000",
    "end": "939040"
  },
  {
    "text": "uh so what exactly is on this issuer url so there are two things right the first thing is the oidc discovery document",
    "start": "939040",
    "end": "947040"
  },
  {
    "text": "um this is the standard discovery document which has the issuer url and then it also has the json web key set",
    "start": "947040",
    "end": "954399"
  },
  {
    "text": "uri the url where the public signing keys are available and apart from that a couple of other",
    "start": "954399",
    "end": "961360"
  },
  {
    "text": "fields which is required for by the oidc spec and then now when we try to query the",
    "start": "961360",
    "end": "968240"
  },
  {
    "text": "jwks the json web key set we can see that this has the public",
    "start": "968240",
    "end": "974959"
  },
  {
    "text": "signing keys that's used by the cluster so the private signing keys are available in the cluster that is what is",
    "start": "974959",
    "end": "980720"
  },
  {
    "text": "used to sign the service account tokens and when aad gets the service account",
    "start": "980720",
    "end": "986639"
  },
  {
    "text": "tokens it can validate that using this discovery url and the public signing keys that's available",
    "start": "986639",
    "end": "994240"
  },
  {
    "text": "so the next thing that we're going to do in this cluster is we're going to deploy the mutating web hook that we talked",
    "start": "994480",
    "end": "1001440"
  },
  {
    "text": "about uh it simplifies config for the deployments um for the purpose of this",
    "start": "1001440",
    "end": "1006959"
  },
  {
    "text": "demo what i've done is i've installed the mutating web hook using help charge",
    "start": "1006959",
    "end": "1012079"
  },
  {
    "text": "from our open source repo but when this is natively integrated in",
    "start": "1012079",
    "end": "1017279"
  },
  {
    "text": "aks you would be able to enable this with enable workload identity flag similar to all the add-ons that's",
    "start": "1017279",
    "end": "1023600"
  },
  {
    "text": "available today so what this does is it installs the mutating webhook in azure",
    "start": "1023600",
    "end": "1030079"
  },
  {
    "text": "worker entry system namespace so let's take a look at what's there in that namespace",
    "start": "1030079",
    "end": "1035199"
  },
  {
    "text": "so as you can see here what we have here is a deployment and a service the",
    "start": "1035199",
    "end": "1040558"
  },
  {
    "text": "service is configured for the workload identity webhook the configuration for workload entity is",
    "start": "1040559",
    "end": "1046000"
  },
  {
    "text": "done using the kubernetes service accounts like we talked about so as a user all you would have to do is",
    "start": "1046000",
    "end": "1052240"
  },
  {
    "text": "annotate the service account with the client id of the azure ad application or",
    "start": "1052240",
    "end": "1057840"
  },
  {
    "text": "the managed identity that the pod needs to use to access azure resources and when this pod is created",
    "start": "1057840",
    "end": "1064880"
  },
  {
    "text": "the mutating webhook will be called as part of the admission request based on the annotation that is there in",
    "start": "1064880",
    "end": "1071679"
  },
  {
    "text": "the service account it will inject the environment variables that can be consumed by the sdks",
    "start": "1071679",
    "end": "1078480"
  },
  {
    "text": "and also it will add the projected service account token volume this means you can use the same pod spec",
    "start": "1078480",
    "end": "1085919"
  },
  {
    "text": "that you're using in different cloud providers and you can just deploy that in azure without making any native",
    "start": "1085919",
    "end": "1092000"
  },
  {
    "text": "making any changes specifically to run work product manager",
    "start": "1092000",
    "end": "1097039"
  },
  {
    "text": "um workload identity is based on projected service account uh that we",
    "start": "1097039",
    "end": "1102640"
  },
  {
    "text": "talked about um how is this different from default service accounts so projected service account",
    "start": "1102640",
    "end": "1108799"
  },
  {
    "text": "jwts differ from traditional tokens in that they expire they have a proper",
    "start": "1108799",
    "end": "1114240"
  },
  {
    "text": "issuer and then the audience field comes filled out so that they can act like proper jpgs",
    "start": "1114240",
    "end": "1120799"
  },
  {
    "text": "these projected service account tokens aren't synced as kubernetes secret and they can only be injected into the pod",
    "start": "1120799",
    "end": "1127840"
  },
  {
    "text": "as volume so as part of this demo the first thing that we're going to do is we're going to",
    "start": "1127840",
    "end": "1132960"
  },
  {
    "text": "create an azure ad application so here i'm doing azad sp create for rbac this",
    "start": "1132960",
    "end": "1138640"
  },
  {
    "text": "is something that we all are aware of today as you can see there is an app id and",
    "start": "1138640",
    "end": "1143679"
  },
  {
    "text": "there's also a password this password gets created by default",
    "start": "1143679",
    "end": "1148720"
  },
  {
    "text": "but this at least for workload identity is never used so you can actually get",
    "start": "1148720",
    "end": "1154240"
  },
  {
    "text": "into the portal uh manage the app registration and delete the password because this client secret is never used",
    "start": "1154240",
    "end": "1161120"
  },
  {
    "text": "anywhere with workload identity the next thing that we're going to do for the demo is we're going to create a",
    "start": "1161120",
    "end": "1168080"
  },
  {
    "text": "namespace within the cluster um so we're going to call it wi demo app",
    "start": "1168080",
    "end": "1174000"
  },
  {
    "text": "and the main part now that we need is to create the annotated service account so",
    "start": "1174000",
    "end": "1180320"
  },
  {
    "text": "in this service account annotations we are using the client id of the azure ad",
    "start": "1180320",
    "end": "1185840"
  },
  {
    "text": "application that we created in the previous step and then in the labels we have azure",
    "start": "1185840",
    "end": "1191600"
  },
  {
    "text": "workload entity use true this is what tells the mutating web hook that this particular service account is going to",
    "start": "1191600",
    "end": "1198000"
  },
  {
    "text": "be consumed for workload identity with azure so please mutate any pod that uses this",
    "start": "1198000",
    "end": "1204640"
  },
  {
    "text": "particular service account the next thing that we're going to do is",
    "start": "1204640",
    "end": "1210799"
  },
  {
    "text": "we talked about federated identity credential so we need to establish a trust between the azure ad application",
    "start": "1210799",
    "end": "1217840"
  },
  {
    "text": "that we created uh in the first step and then the service account issuer and the subject so we're going to tie all of it",
    "start": "1217840",
    "end": "1223760"
  },
  {
    "text": "together and say hey trust this token that i send which has all of this",
    "start": "1223760",
    "end": "1228960"
  },
  {
    "text": "so there are a couple of ways to add this federated int credential you can do it with ac rest um there's also support",
    "start": "1228960",
    "end": "1236080"
  },
  {
    "text": "for it coming soon with azure cli and there's also support for doing this with ui so for this demo what we're",
    "start": "1236080",
    "end": "1242559"
  },
  {
    "text": "going to do is we're going to do it with ui um so if you see here this is the azure ad application that we",
    "start": "1242559",
    "end": "1249120"
  },
  {
    "start": "1245000",
    "end": "1550000"
  },
  {
    "text": "created and if you go under certificates and secrets in addition to certificates and client",
    "start": "1249120",
    "end": "1256240"
  },
  {
    "text": "secrets now there is a new field which is called federated credentials so when you click on that and say add",
    "start": "1256240",
    "end": "1262880"
  },
  {
    "text": "credential i you can pick which scenario you're using this uh federated credential for so",
    "start": "1262880",
    "end": "1269679"
  },
  {
    "text": "this works with github actions which is being deployed and that needs to access azure resources kubernetes uh this",
    "start": "1269679",
    "end": "1275360"
  },
  {
    "text": "particular scenario we are using kubernetes so here the first thing we do is we add",
    "start": "1275360",
    "end": "1281440"
  },
  {
    "text": "the cluster issuer url which is the issuer url we saw for the cluster that i'm that i have",
    "start": "1281440",
    "end": "1286960"
  },
  {
    "text": "uh the namespace here is the name space where the workload is going to be",
    "start": "1286960",
    "end": "1292240"
  },
  {
    "text": "deployed and the service account is and then the service account name is the service account that's going to be used",
    "start": "1292240",
    "end": "1298720"
  },
  {
    "text": "by the pod and then as you can see when you populate the namespace and the service",
    "start": "1298720",
    "end": "1303919"
  },
  {
    "text": "account name the subject identifier gets auto-generated so this is based on the current kubernetes spec which means it",
    "start": "1303919",
    "end": "1310240"
  },
  {
    "text": "performs validation and makes sure that there are no invalid values and then you add a generic name which",
    "start": "1310240",
    "end": "1317840"
  },
  {
    "text": "can be used to detect what this set data credential means and then a description uh the audience field as you can see is",
    "start": "1317840",
    "end": "1326240"
  },
  {
    "text": "a standard field that we're using for all kubernetes workload so this is not something that has to be explicitly",
    "start": "1326240",
    "end": "1331440"
  },
  {
    "text": "configured by the user but if you need to override that then you could do that as well",
    "start": "1331440",
    "end": "1339760"
  },
  {
    "text": "so we're going to create the federated entity credential so what this means is now there has been a trust that has been",
    "start": "1340880",
    "end": "1347200"
  },
  {
    "text": "established between your azure ad app and service account the next thing we're going to do is we're going to create a",
    "start": "1347200",
    "end": "1352640"
  },
  {
    "text": "workload pod which references the service account so just to show how simple it is to deploy",
    "start": "1352640",
    "end": "1359039"
  },
  {
    "text": "an application uh what we're doing here is we're just using our cube tpl run command",
    "start": "1359039",
    "end": "1364559"
  },
  {
    "text": "and then if you as you can see we're using the azure cli image in the service account we are",
    "start": "1364559",
    "end": "1370480"
  },
  {
    "text": "referencing the service account that we just created in the previous step which was annotated and node selector is linux",
    "start": "1370480",
    "end": "1376720"
  },
  {
    "text": "but as ernest mentioned this will work for windows scenarios as well like out of the box",
    "start": "1376720",
    "end": "1383360"
  },
  {
    "text": "so now that the port is created uh the next thing that we're going to see is let's see what has been injected into",
    "start": "1383360",
    "end": "1391039"
  },
  {
    "text": "this pod um so these are the environment variables that we talked about um so there are four environment variables the",
    "start": "1391039",
    "end": "1397360"
  },
  {
    "text": "azure authorities host is the endpoint where we need to fetch a token from the",
    "start": "1397360",
    "end": "1402480"
  },
  {
    "text": "client id is you got is from the client id annotation in the service account our tenant id is",
    "start": "1402480",
    "end": "1409840"
  },
  {
    "text": "the tenant id of the azure ad application but if it's not specifically provided then we would",
    "start": "1409840",
    "end": "1416880"
  },
  {
    "text": "default to using the tenant id of your cluster and then the azure federated token file",
    "start": "1416880",
    "end": "1424080"
  },
  {
    "text": "is the path where the projected service account token can be found",
    "start": "1424080",
    "end": "1430000"
  },
  {
    "text": "next let's see what other changes the mutating webhook made and",
    "start": "1430000",
    "end": "1436320"
  },
  {
    "text": "the on the pod that was deployed um so the first set of changes is the new environment variables that we looked",
    "start": "1436320",
    "end": "1442559"
  },
  {
    "text": "at that was added by the mutating webhook and then the next thing is the projected",
    "start": "1442559",
    "end": "1448480"
  },
  {
    "text": "service account token so it's called azure identity token and it's a projected service account token volume",
    "start": "1448480",
    "end": "1454400"
  },
  {
    "text": "and we are defaulting to the audience that we're using as standard across kubernetes workloads and the expiration",
    "start": "1454400",
    "end": "1460799"
  },
  {
    "text": "seconds is set to the lowest possible value so that that cubelet will uh renew",
    "start": "1460799",
    "end": "1465919"
  },
  {
    "text": "the token at 80 of expiry so this is added by the mutating web",
    "start": "1465919",
    "end": "1471919"
  },
  {
    "text": "book and the user does not have to make any changes to their prospect",
    "start": "1471919",
    "end": "1477679"
  },
  {
    "text": "uh then the next thing that we're going to do is try to get an access token with",
    "start": "1477679",
    "end": "1483120"
  },
  {
    "text": "the federated token that's available in the month so we are executing into the pod and then the first thing we are",
    "start": "1483120",
    "end": "1489279"
  },
  {
    "text": "going to do is we are doing an easy login so as you can see here we are using all the environment variables that",
    "start": "1489279",
    "end": "1496240"
  },
  {
    "text": "have been injected from using the webhook so there is no specific value that i'm hardcoding here",
    "start": "1496240",
    "end": "1503200"
  },
  {
    "text": "and then there is this new federated token flag in easy login where you can actually pass the federated token",
    "start": "1503200",
    "end": "1511760"
  },
  {
    "text": "which is the projected service account token so when we do ac login now um using all the values that have been",
    "start": "1511760",
    "end": "1517279"
  },
  {
    "text": "injected with web book we can see that we are able to successfully login and when we run az account get access token",
    "start": "1517279",
    "end": "1525919"
  },
  {
    "text": "so now this is where we can confirm that we were able to exchange a",
    "start": "1525919",
    "end": "1531760"
  },
  {
    "text": "kubernetes service account token for a valid aed token all of this by just establishing this trust using",
    "start": "1531760",
    "end": "1539039"
  },
  {
    "text": "federated identity credential",
    "start": "1539039",
    "end": "1542919"
  },
  {
    "text": "and that's it for the demo",
    "start": "1544320",
    "end": "1547679"
  },
  {
    "text": "okay so now that we've looked at the demo and then we've also understood the changes",
    "start": "1552159",
    "end": "1557760"
  },
  {
    "text": "that we've made in work azure workload entity um it's very simple in terms of configuration and then it also gets rid",
    "start": "1557760",
    "end": "1564640"
  },
  {
    "text": "of all these limitations that we had in port identity so just to have this integrated in more and more",
    "start": "1564640",
    "end": "1571039"
  },
  {
    "text": "solutions because it's um zero trust and then it doesn't require a client secret uh we've been working on",
    "start": "1571039",
    "end": "1577600"
  },
  {
    "text": "integrating workflow identity with some of the projects maintained by our team and our sister teams um so the first one",
    "start": "1577600",
    "end": "1583679"
  },
  {
    "text": "is a first integration is with azure keyword provider for secret storage csi driver um so for those of you who are",
    "start": "1583679",
    "end": "1590559"
  },
  {
    "text": "not aware of this project it's uh something that enables getting secrets that's stored in azure keyword and it",
    "start": "1590559",
    "end": "1596799"
  },
  {
    "text": "uses the secret store csi driver interface to mount them into kubernetes",
    "start": "1596799",
    "end": "1601919"
  },
  {
    "text": "pod the secret store csi driver is a cigarette sub project uh which supports multiple providers today and azure",
    "start": "1601919",
    "end": "1608480"
  },
  {
    "text": "keyword is one of them um so we have workload identity integrated with that which means you can",
    "start": "1608480",
    "end": "1614159"
  },
  {
    "text": "fetch secrets from keyword without any kind of secrets that we talked about and then the second one is ratify um so",
    "start": "1614159",
    "end": "1621760"
  },
  {
    "text": "ratify enables validation of supply chain artifacts um such as image signatures and s-bonds um so ratify",
    "start": "1621760",
    "end": "1629279"
  },
  {
    "text": "recently added support for workload entity federation using workload entity federation in",
    "start": "1629279",
    "end": "1634880"
  },
  {
    "text": "kubernetes so which means you can set it up without any kind of client secret and",
    "start": "1634880",
    "end": "1640320"
  },
  {
    "text": "it works out of the box um and then in terms of",
    "start": "1640320",
    "end": "1646159"
  },
  {
    "text": "the road map where we are with azure workload entity today uh so we did the",
    "start": "1646159",
    "end": "1651440"
  },
  {
    "text": "open source project launch which was done in jam this is for the mutating web hook and",
    "start": "1651440",
    "end": "1658960"
  },
  {
    "text": "also based on our experience from pod identity something that we learned was we want to help our users by automating",
    "start": "1658960",
    "end": "1666480"
  },
  {
    "text": "some of the operations so for this purpose we also developed a new cli tool called azure workload entity cli",
    "start": "1666480",
    "end": "1673120"
  },
  {
    "text": "so we launched all of this in jam all of this works today with azure ad apps",
    "start": "1673120",
    "end": "1679039"
  },
  {
    "text": "and then the second thing was the aks oidc issuer support so this is where aks",
    "start": "1679039",
    "end": "1684240"
  },
  {
    "text": "will set up the oidc issuer it will rotate the signing keys every 90 days",
    "start": "1684240",
    "end": "1689279"
  },
  {
    "text": "and then also on demand rotation uh this can also be used for federation",
    "start": "1689279",
    "end": "1694960"
  },
  {
    "text": "with other cloud providers if required um and then we also did a a preview with",
    "start": "1694960",
    "end": "1701200"
  },
  {
    "text": "azure ad applications uh on aks uh for some customers but they've also been",
    "start": "1701200",
    "end": "1706559"
  },
  {
    "text": "doing this publicly right now with oss um so what we have in plans next is we are working",
    "start": "1706559",
    "end": "1714240"
  },
  {
    "text": "with aad on workload identity federation with managed identity um we know most of",
    "start": "1714240",
    "end": "1719760"
  },
  {
    "text": "our users today um use managed identities both identity so we know that",
    "start": "1719760",
    "end": "1725200"
  },
  {
    "text": "it's critical and that is what we are working towards right now we are testing and we are hoping to have something",
    "start": "1725200",
    "end": "1731279"
  },
  {
    "text": "available soon for users to try out uh once we have managed identity um",
    "start": "1731279",
    "end": "1737200"
  },
  {
    "text": "this would be feature complete with what pod identity supports today uh so the next stage would be to have a public",
    "start": "1737200",
    "end": "1744000"
  },
  {
    "text": "preview on aks um as a managed add-on for workload entity and based on the",
    "start": "1744000",
    "end": "1749440"
  },
  {
    "text": "feedback on public preview and other consumption the next thing we would do is we would eventually move the project",
    "start": "1749440",
    "end": "1755760"
  },
  {
    "text": "to ga",
    "start": "1755760",
    "end": "1758240"
  },
  {
    "text": "thanks anish what a great demo and that concludes our presentations and here is",
    "start": "1761279",
    "end": "1767039"
  },
  {
    "text": "a quick list of resources that you can check out uh that includes uh our",
    "start": "1767039",
    "end": "1773120"
  },
  {
    "text": "documentation's website for pod identity as well as workload identity and",
    "start": "1773120",
    "end": "1778480"
  },
  {
    "text": "there is also one url that you might be interested in checking out which is the",
    "start": "1778480",
    "end": "1783760"
  },
  {
    "text": "federation with azure ad this basically explained in detail the",
    "start": "1783760",
    "end": "1788960"
  },
  {
    "text": "architectures of federated identity credentials which is what oracle identity is based on",
    "start": "1788960",
    "end": "1795840"
  },
  {
    "text": "and yeah and that's all we have thank you",
    "start": "1795840",
    "end": "1802559"
  },
  {
    "text": "okay if anyone has questions go ahead and pop them in the chat um daniel we will have the presentation",
    "start": "1806320",
    "end": "1813840"
  },
  {
    "text": "attached to the uh webinar recording um so if anish and ernest can just send",
    "start": "1813840",
    "end": "1820240"
  },
  {
    "text": "that to me this final version as soon as we're done i will make sure that's attached when you click your registration link",
    "start": "1820240",
    "end": "1827039"
  },
  {
    "text": "so pop your questions in the chat and let us know what else you want to know",
    "start": "1827039",
    "end": "1834679"
  },
  {
    "text": "they must be thinking of something good for y'all",
    "start": "1843039",
    "end": "1847720"
  },
  {
    "text": "anybody there we go",
    "start": "1852080",
    "end": "1858398"
  },
  {
    "text": "um yeah i mean in terms of ga we are working towards getting managed",
    "start": "1858960",
    "end": "1864080"
  },
  {
    "text": "identity support out in public preview um so once that's available uh the workload entity federation with",
    "start": "1864080",
    "end": "1870240"
  },
  {
    "text": "azure ad apps might go into ga but um i think",
    "start": "1870240",
    "end": "1875840"
  },
  {
    "text": "hopefully we're targeting end of this year to have something but if you if you need concrete",
    "start": "1875840",
    "end": "1881519"
  },
  {
    "text": "timelines then we can follow up with you again on github issues or maybe some",
    "start": "1881519",
    "end": "1886559"
  },
  {
    "text": "internal threads",
    "start": "1886559",
    "end": "1890360"
  },
  {
    "text": "ah and then if there are any other feature requests or anything that you would like to see in addition to what we",
    "start": "1896399",
    "end": "1902399"
  },
  {
    "text": "support today with workload entity federation that makes it easier to be able to use it with your workloads",
    "start": "1902399",
    "end": "1908320"
  },
  {
    "text": "please feel free to open a github issue um add what you need then we can follow up with aad and see",
    "start": "1908320",
    "end": "1914240"
  },
  {
    "text": "if this is something that we can prioritize",
    "start": "1914240",
    "end": "1918600"
  },
  {
    "text": "all right anyone else",
    "start": "1921760",
    "end": "1925600"
  },
  {
    "text": "going once going twice",
    "start": "1930640",
    "end": "1936559"
  },
  {
    "text": "all right well thank you everyone for joining thank you anish and ernest for an awesome demo and",
    "start": "1939679",
    "end": "1946320"
  },
  {
    "text": "presentation if anyone else has any questions i think you know where to hit them up um and if",
    "start": "1946320",
    "end": "1953120"
  },
  {
    "text": "y'all could send me that deck then i will make sure everything is posted online later this afternoon",
    "start": "1953120",
    "end": "1959440"
  },
  {
    "text": "and thanks again everyone and join us next week for another live webinar",
    "start": "1959440",
    "end": "1965279"
  },
  {
    "text": "and we can go a little early today thanks again for having us",
    "start": "1965279",
    "end": "1973799"
  }
]