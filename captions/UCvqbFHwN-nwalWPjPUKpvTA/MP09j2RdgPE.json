[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "right good afternoon if any of you were in Jesse's talk just a few minutes ago",
    "start": "30",
    "end": "6509"
  },
  {
    "text": "I'm going to cover some of the same thing so we're still going intercept comm set comp they'll be a live demo ever contain a breakout but it's going",
    "start": "6509",
    "end": "12900"
  },
  {
    "text": "to go a little bit more low level based on all the work that she's done for us at Google already right so I'm Andy I'm",
    "start": "12900",
    "end": "23340"
  },
  {
    "text": "dev like second job see I'm from the UK government so they were speaking in a",
    "start": "23340",
    "end": "29910"
  },
  {
    "text": "personal capacity and security it's just a line item on my job description",
    "start": "29910",
    "end": "34920"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "what are open-source exploits the vulnerabilities in commonly used open",
    "start": "34920",
    "end": "40649"
  },
  {
    "text": "source code that can be used to gain access to a system that is not permitted and the question of in secure containers",
    "start": "40649",
    "end": "47640"
  },
  {
    "start": "47000",
    "end": "47000"
  },
  {
    "text": "do they really contain how can they contain and how have they defended",
    "start": "47640",
    "end": "53489"
  },
  {
    "text": "against major recent vulnerabilities I usually expect that data is safe when",
    "start": "53489",
    "end": "59460"
  },
  {
    "text": "they hand it over so we asked the question is it possible to protect all user data sure your users",
    "start": "59460",
    "end": "66000"
  },
  {
    "text": "should expect some level of privacy but we can't protect our data if there are",
    "start": "66000",
    "end": "71700"
  },
  {
    "text": "bugs in code parts and it's bug-free code possible well it seems probably",
    "start": "71700",
    "end": "77850"
  },
  {
    "text": "quite unlikely so by extension is anything secure or to lower the bar is",
    "start": "77850",
    "end": "82950"
  },
  {
    "text": "anything secure from teenagers with all",
    "start": "82950",
    "end": "88170"
  },
  {
    "text": "these leaks of personally identifying information over the past few years is our data even more secure than it was 30",
    "start": "88170",
    "end": "95040"
  },
  {
    "text": "years ago so this talk is about security the anatomy of some recent open source",
    "start": "95040",
    "end": "102540"
  },
  {
    "start": "98000",
    "end": "98000"
  },
  {
    "text": "vulnerabilities how containers affect that security model the CI pipeline",
    "start": "102540",
    "end": "108329"
  },
  {
    "text": "tooling we can use to protect ourselves and defense from future vulnerabilities so quickly what is security it's a",
    "start": "108329",
    "end": "115560"
  },
  {
    "text": "question of availability we can access what we want when we want to the",
    "start": "115560",
    "end": "120570"
  },
  {
    "text": "integrity data can only be edited by those authorized to edit it and confidentiality it can only be accessed",
    "start": "120570",
    "end": "127229"
  },
  {
    "text": "by those authorized to edits so it's full control and knowledge of a system",
    "start": "127229",
    "end": "132330"
  },
  {
    "text": "without C data that it contains so to achieve security we must trust certain parties",
    "start": "132330",
    "end": "138320"
  },
  {
    "text": "they encrypt our data in transit and it rests public trusted routes towards operating systems and some closed source",
    "start": "138320",
    "end": "146370"
  },
  {
    "text": "operating system firmware vendors etc various protocols open standards compilers they were trusting these guys",
    "start": "146370",
    "end": "153480"
  },
  {
    "text": "not to have bugs the break our security models and most importantly open source",
    "start": "153480",
    "end": "158700"
  },
  {
    "text": "code that we can see and audits and ideally that has been audited although",
    "start": "158700",
    "end": "164760"
  },
  {
    "text": "often when it hasn't so why do we use open source it's security one of those reasons Linna says law states given a",
    "start": "164760",
    "end": "172890"
  },
  {
    "text": "large enough beta tester and co-developer base almost every problem",
    "start": "172890",
    "end": "178080"
  },
  {
    "text": "can be characterized quickly and the fix obvious to somebody so while open source software has the potential to be more",
    "start": "178080",
    "end": "184680"
  },
  {
    "text": "secure than its closed source counterparts simply being open source is no guarantee of security but does more",
    "start": "184680",
    "end": "192990"
  },
  {
    "text": "secure even matter when we want a hundred percent security there's anything completely secure recent",
    "start": "192990",
    "end": "198300"
  },
  {
    "text": "breaches suggest knots so let's examine some of those from the past few years we'll go through funder abilities with a",
    "start": "198300",
    "end": "205110"
  },
  {
    "text": "focus on webserver and container exploitation their impact and mitigation and we'll see what part containers have",
    "start": "205110",
    "end": "212460"
  },
  {
    "text": "to play you may have seen the recent glut of overhyped logo vulnerabilities",
    "start": "212460",
    "end": "219410"
  },
  {
    "text": "do these provide any value well probably they probably give more exposure to",
    "start": "219410",
    "end": "225330"
  },
  {
    "text": "vulnerabilities and guess this admins to patch them quicker security researchers work relatively hard so if you'll give",
    "start": "225330",
    "end": "231780"
  },
  {
    "text": "them a pass I'd appreciate it for the purpose of this talk all the vulnerabilities discussed here will have affected you or a server that you",
    "start": "231780",
    "end": "238350"
  },
  {
    "text": "administer or have come into contact with so heart bleed a catastrophic floor",
    "start": "238350",
    "end": "244560"
  },
  {
    "start": "242000",
    "end": "242000"
  },
  {
    "text": "in open SSL a commonly used encryption library referred to as a modest code",
    "start": "244560",
    "end": "250680"
  },
  {
    "text": "base of outsized importance this was considered theoretically and exploitable by ironically enough CloudFlare more on",
    "start": "250680",
    "end": "258450"
  },
  {
    "text": "them later and an attack proven inside nine hours",
    "start": "258450",
    "end": "263600"
  },
  {
    "text": "when they opened a competition to see if anyone could actually exfiltrate their server keys it affected twenty-five to fifty percent",
    "start": "263600",
    "end": "270470"
  },
  {
    "text": "of all major sites its closure and is a problem in ssl heartbleed heart beat",
    "start": "270470",
    "end": "276919"
  },
  {
    "text": "handling so a heart beat is sent by the client to the server to maintain a",
    "start": "276919",
    "end": "282620"
  },
  {
    "text": "persistent open connection in this case the user sends an expected reply word",
    "start": "282620",
    "end": "288080"
  },
  {
    "text": "along with the length of that word obviously that should be validated on the server side it's untrusted user",
    "start": "288080",
    "end": "293660"
  },
  {
    "text": "input in this case the example is hats and the length is five hundred so the",
    "start": "293660",
    "end": "299480"
  },
  {
    "text": "server replies with the word hat in memory and their leaks the next five hundred bytes private data that's",
    "start": "299480",
    "end": "305990"
  },
  {
    "text": "private data that could contain private keys information about other connections essentially not something that line is",
    "start": "305990",
    "end": "311960"
  },
  {
    "text": "permitted or authorized to access so a malicious user specifies a false length",
    "start": "311960",
    "end": "317390"
  },
  {
    "text": "and we potentially leak all sorts of data you do this attack enough times",
    "start": "317390",
    "end": "322520"
  },
  {
    "text": "because it's in the initiation phase of the protocol it's not reported in logs",
    "start": "322520",
    "end": "327710"
  },
  {
    "text": "it's just seen as an aborted connection collect enough data and you can piece together the private keys and other",
    "start": "327710",
    "end": "334340"
  },
  {
    "text": "contents of memory so the poor guy involved valid that missed validating a",
    "start": "334340",
    "end": "340460"
  },
  {
    "text": "variable containing a length a relatively easy mistake to make especially in see reading more data than",
    "start": "340460",
    "end": "347870"
  },
  {
    "text": "one is permitted is called a buffer overrun and this particular bug was",
    "start": "347870",
    "end": "353240"
  },
  {
    "text": "discovered by fuzz testing the open ssl library with american fuzzy lock and",
    "start": "353240",
    "end": "358930"
  },
  {
    "text": "another tool called dress sanitizer from google a father is something that sends a huge amount of untrusted data check",
    "start": "358930",
    "end": "366110"
  },
  {
    "text": "code paths that potentially aren't checked by the application code AFL is a",
    "start": "366110",
    "end": "371210"
  },
  {
    "text": "relatively advanced fuzzer and requires the software target to be recompiled with extra code it will then",
    "start": "371210",
    "end": "378080"
  },
  {
    "text": "track with branches of code of follows and use a genetic algorithm to try and explore as much of the problem space and",
    "start": "378080",
    "end": "384200"
  },
  {
    "text": "as short a time as possible address sanitizer just turns memory access errors and crashes so FL knows that it's",
    "start": "384200",
    "end": "391400"
  },
  {
    "text": "done something that it shouldn't have done so the user mitigation for heartbleed was update OpenSSL reissue and",
    "start": "391400",
    "end": "399640"
  },
  {
    "text": "redistribute your security keys so the questions was OpenSSL more secure for",
    "start": "399640",
    "end": "404650"
  },
  {
    "text": "being open source well probably even though this bug had existed for a while",
    "start": "404650",
    "end": "409920"
  },
  {
    "text": "the requirement of a FL to have the source code to re instrument meant that",
    "start": "409920",
    "end": "414970"
  },
  {
    "text": "it probably wouldn't have been found without a dedicated order on a closed source code base from somebody using",
    "start": "414970",
    "end": "420070"
  },
  {
    "text": "that tool anecdotally many closed source vendors who didn't disclose that they used the open SSL library quietly",
    "start": "420070",
    "end": "426610"
  },
  {
    "text": "updated around that time so containers don't really help open SSL the hosts",
    "start": "426610",
    "end": "434530"
  },
  {
    "text": "memory was protected but heartbleed leaks process memory anyway ie the web",
    "start": "434530",
    "end": "439780"
  },
  {
    "text": "servers so the containment is not really effective heartbleed is essentially",
    "start": "439780",
    "end": "445210"
  },
  {
    "text": "indefensible where the container as the checks not at the right level it's an attack on the implementation of a spec",
    "start": "445210",
    "end": "451660"
  },
  {
    "text": "and the application itself but containers do help because presumably we have fast redeployment cih DD pipelines",
    "start": "451660",
    "end": "458710"
  },
  {
    "text": "and the time it takes to ship a change from test through to production should be dramatically reduced the silver",
    "start": "458710",
    "end": "465040"
  },
  {
    "text": "lining so in kernel in container terms heart bleeds is like building a castle",
    "start": "465040",
    "end": "470190"
  },
  {
    "text": "securing the walls and having the guards give away the secrets so the next",
    "start": "470190",
    "end": "476650"
  },
  {
    "text": "vulnerability shellshock a bash shell vulnerability allowing privilege",
    "start": "476650",
    "end": "481930"
  },
  {
    "start": "478000",
    "end": "478000"
  },
  {
    "text": "escalation this adds code to a specially crafted environment variable which is then executed in the wrong context and",
    "start": "481930",
    "end": "488260"
  },
  {
    "text": "potentially privilege escalated so while heartbleed leaks data shellshock can be",
    "start": "488260",
    "end": "493900"
  },
  {
    "text": "used to take over the host system some impact CGI Web Apps sshd and basically",
    "start": "493900",
    "end": "500140"
  },
  {
    "text": "all Linux boxes or pre SD boxes and all UNIX boxes post 1991 and all Mac's",
    "start": "500140",
    "end": "507060"
  },
  {
    "text": "basically the world for all of us here although Debian Ubuntu or less",
    "start": "507060",
    "end": "512590"
  },
  {
    "text": "vulnerable because they don't use bash by default Alpine installs busybox so you only have a bash like so some",
    "start": "512590",
    "end": "519729"
  },
  {
    "text": "distributions by default will less vulnerable is a demo of worse a static demo of an",
    "start": "519729",
    "end": "528700"
  },
  {
    "text": "HTTP request that demonstrates the shellshock bug so on the first line you see the user agent containing the",
    "start": "528700",
    "end": "534520"
  },
  {
    "text": "exploit payload we've got parentheses and then another set of curly braces with an O up in the",
    "start": "534520",
    "end": "540340"
  },
  {
    "text": "middle then closing off that initial function call then we execute bashed ping ID cat ECC password his burps we",
    "start": "540340",
    "end": "547540"
  },
  {
    "text": "output showing the server responding because the payload came through in",
    "start": "547540",
    "end": "552900"
  },
  {
    "text": "header unless the target targeted server was recording all HTTP headers which is",
    "start": "552900",
    "end": "560230"
  },
  {
    "text": "infinitely rare then this would insure from the logs so this bug was in the",
    "start": "560230",
    "end": "566920"
  },
  {
    "text": "initial implementation of function importing and exporting written by bashes original author before HTTP",
    "start": "566920",
    "end": "573940"
  },
  {
    "text": "existed before the web was born and before Linux shipped version 1 that was",
    "start": "573940",
    "end": "580780"
  },
  {
    "text": "the 25th of August 91 so it would be incredible if this bug was not being exploited in the wild",
    "start": "580780",
    "end": "586810"
  },
  {
    "text": "during that 25 year window a lot of CDs were found around that time and finally",
    "start": "586810",
    "end": "594100"
  },
  {
    "start": "589000",
    "end": "589000"
  },
  {
    "text": "fixed by Florian were more of red hats he said he found the bug after reflecting on an earlier vulnerability",
    "start": "594100",
    "end": "599230"
  },
  {
    "text": "of a similar type and bash and of note is that the latter two bugs on this list were also discovered with American fuzzy",
    "start": "599230",
    "end": "606040"
  },
  {
    "text": "lock the mitigation upgrades was this more secure for being open source well",
    "start": "606040",
    "end": "611950"
  },
  {
    "text": "probably not because it's been in the wild for so long so many eyes had looked at it maybe there's a FAL ability and",
    "start": "611950",
    "end": "619990"
  },
  {
    "text": "allowed Linux is law there but did containers help absolutely they isolated the process into the container running",
    "start": "619990",
    "end": "626620"
  },
  {
    "text": "the webserver so the host was him the host was isolated in the impact cushioned assuming no further privilege escalation",
    "start": "626620",
    "end": "632860"
  },
  {
    "text": "vulnerabilities as opposed to heartbleed this is a remote command execution so we",
    "start": "632860",
    "end": "638200"
  },
  {
    "text": "can contain the command when it's run on our servers and protect the hosts back to the castle metaphor the perimeter is",
    "start": "638200",
    "end": "645400"
  },
  {
    "text": "secure but this is akin to allowing a Trojan horse through the gates of the castle but locking it in the dungeons",
    "start": "645400",
    "end": "652980"
  },
  {
    "text": "the malicious contents spilled out but they can't get any further than the jail that they've been",
    "start": "652980",
    "end": "658490"
  },
  {
    "text": "placed in the next vulnerability drown an attack on TLS which stands for",
    "start": "658490",
    "end": "664220"
  },
  {
    "text": "decrypting RSA with obsolete and weakened encryption because it's a",
    "start": "664220",
    "end": "669950"
  },
  {
    "text": "protocol attack similar to heartbleed it can't be defended with containers the problem here is old US export grade",
    "start": "669950",
    "end": "677030"
  },
  {
    "text": "cryptography on symmetric ciphers 33% of all sites were vulnerable a disclosure",
    "start": "677030",
    "end": "683920"
  },
  {
    "text": "mitigation say blessed salvation - it was enabled in the first place and",
    "start": "683920",
    "end": "689000"
  },
  {
    "text": "upgrade openness so changing any secrets that may have been leaked as a side note",
    "start": "689000",
    "end": "694280"
  },
  {
    "text": "there are a lot of TLS vulnerabilities that containers can't help with and why",
    "start": "694280",
    "end": "700160"
  },
  {
    "text": "so many and why the cluster after May 23rd hmm our dear friends Edward Snowden",
    "start": "700160",
    "end": "707620"
  },
  {
    "text": "post these revelations have renewed vigor has been applied to TLS libraries",
    "start": "707620",
    "end": "713510"
  },
  {
    "text": "in the fear that they're all back doored so develops fear but throughout the search for intentional or accidental",
    "start": "713510",
    "end": "719380"
  },
  {
    "text": "vulnerabilities still allowing outdated ciphers on their hosts is TLS more",
    "start": "719380",
    "end": "727640"
  },
  {
    "text": "secure for being open source well this is the cavalcade of academics and researchers that were required to",
    "start": "727640",
    "end": "733100"
  },
  {
    "text": "combine their expertise to identify this vulnerability so undoubtedly yes",
    "start": "733100",
    "end": "739070"
  },
  {
    "text": "although the complexity of attack probably meant it was the remit of state-sponsored actors back to the",
    "start": "739070",
    "end": "745610"
  },
  {
    "text": "castle this is like securing the entrance to the castle with an obstacle only",
    "start": "745610",
    "end": "750680"
  },
  {
    "text": "allowing people over a narrow and secure bridge and then being surprised when",
    "start": "750680",
    "end": "755990"
  },
  {
    "text": "emojis drains and thinking it continues to provide any security and containers",
    "start": "755990",
    "end": "761180"
  },
  {
    "text": "help it's a protocol attack and no amount of containers will help us from miss implementations or vulnerabilities",
    "start": "761180",
    "end": "766820"
  },
  {
    "text": "and specifications the only benefit we reap is quick redeployment so the next",
    "start": "766820",
    "end": "772790"
  },
  {
    "start": "772000",
    "end": "772000"
  },
  {
    "text": "vulnerability dirty cow this is a linux kernel bug which when exploited gives",
    "start": "772790",
    "end": "779420"
  },
  {
    "text": "root on every kernel since 2007 was this more secure for being open source probably not considering how centrally",
    "start": "779420",
    "end": "787400"
  },
  {
    "text": "important that piece of code is the amount of reviewers required to sign off pache and the amount of people using the",
    "start": "787400",
    "end": "792620"
  },
  {
    "text": "code so the URL is dirty Cal dot ninja truly the worst of all logo",
    "start": "792620",
    "end": "797720"
  },
  {
    "text": "vulnerability URLs and it's a race condition in the copy on write code in kernel memory mappings again it's on",
    "start": "797720",
    "end": "806210"
  },
  {
    "text": "every Linux device embedded Linux devices probably have no path to upgrade from this book so the severity is still",
    "start": "806210",
    "end": "812630"
  },
  {
    "text": "impacting today exploitation of this bug doesn't leave any trace in library and logs and the mitigation is once again",
    "start": "812630",
    "end": "820390"
  },
  {
    "text": "upgrade so of notes this bug was found in the wild by the research were",
    "start": "820390",
    "end": "825830"
  },
  {
    "text": "involved by recording all the packets coming into his server one of his sites",
    "start": "825830",
    "end": "831170"
  },
  {
    "text": "was compromised he was running a rolling packet capture and he reconstructed the binary ran it in a sandbox and then",
    "start": "831170",
    "end": "837830"
  },
  {
    "text": "submitted it back to you were back to the Linux mailing list so how containers",
    "start": "837830",
    "end": "844310"
  },
  {
    "text": "helped well containers didn't contain the spoke containers rely on the kernel for protection they're just an extension",
    "start": "844310",
    "end": "851000"
  },
  {
    "text": "there's only a single kernel shared between all the containers running on a host so namespace and C groups are",
    "start": "851000",
    "end": "859190"
  },
  {
    "text": "beneficial up to a point but when there's a bug in one of those pieces of code it's very difficult to protect",
    "start": "859190",
    "end": "864950"
  },
  {
    "text": "protects against and go through a demo showing how you can break out using this",
    "start": "864950",
    "end": "870950"
  },
  {
    "text": "exploit and how you can prevent that in a few moments so back to the castle it's like building a cost on the biggest rot",
    "start": "870950",
    "end": "876800"
  },
  {
    "text": "you can find being surprised when someone tunnels in from underneath the kernel lets the containers guard down",
    "start": "876800",
    "end": "882740"
  },
  {
    "text": "and there's very little that can be done by default so a couple more",
    "start": "882740",
    "end": "887930"
  },
  {
    "text": "vulnerabilities first there was a run C exploit in docker 12/5 which allowed the main process of the container if running",
    "start": "887930",
    "end": "894770"
  },
  {
    "text": "as roots to fight its way back out and take over the host not running as root",
    "start": "894770",
    "end": "900950"
  },
  {
    "text": "inside the container defends against this the fix again is to upgrade docker",
    "start": "900950",
    "end": "906050"
  },
  {
    "text": "and the honorable mention goes to cloud bleed revealed Friday the 24th of",
    "start": "906050",
    "end": "911330"
  },
  {
    "text": "February an error and an HTML parser triggered the same error as heartbleed a buffer overrun and leaked private data",
    "start": "911330",
    "end": "918500"
  },
  {
    "text": "in the response interpolated with HTML and there's some disagreement over how",
    "start": "918500",
    "end": "924120"
  },
  {
    "text": "vulnerable or how exploitable this actually has been the amount of data leaks nevertheless was it more secure an",
    "start": "924120",
    "end": "930779"
  },
  {
    "text": "open source well it wasn't open source would it being more secure possibly enough people running it would probably",
    "start": "930779",
    "end": "937020"
  },
  {
    "text": "have identified the bug at some stage obviously you'd be catching this with a strange kind of integration test so it's",
    "start": "937020",
    "end": "942600"
  },
  {
    "text": "difficult to catch at a lower level but there's no way in a month of Mondays the containers would help it's an",
    "start": "942600",
    "end": "948240"
  },
  {
    "text": "application issue and containers containing processes not portions of their memory so what do these",
    "start": "948240",
    "end": "954089"
  },
  {
    "text": "vulnerabilities have in common humans inevitably making mistakes the",
    "start": "954089",
    "end": "959220"
  },
  {
    "text": "people that reported these bugs were generally not on the project teams so lines' law has some benefits here",
    "start": "959220",
    "end": "965610"
  },
  {
    "text": "opening up to more eyes results in greater shared understanding fuzzing application yields fantastic results",
    "start": "965610",
    "end": "972510"
  },
  {
    "text": "American fuzzy lot found a huge amount of vulnerabilities if you look at their homepage they've got a laundry list of",
    "start": "972510",
    "end": "977880"
  },
  {
    "text": "products that they've owned and containers not a panacea as I'm sure we all know there are plenty of",
    "start": "977880",
    "end": "983880"
  },
  {
    "text": "vulnerabilities they either cannot stop or are not configured to stop and move on to that shortly",
    "start": "983880",
    "end": "989459"
  },
  {
    "text": "also there's no way to compare this to closed source because we don't have equivalent disclosure from closed source",
    "start": "989459",
    "end": "995190"
  },
  {
    "text": "vendors but you can help security review if you're confident innate to these",
    "start": "995190",
    "end": "1000320"
  },
  {
    "text": "projects fuzz the code and finally major vulnerabilities had no mitigation except",
    "start": "1000320",
    "end": "1006170"
  },
  {
    "text": "for upgrade so let's demo a contain a breakout this is potentially the most",
    "start": "1006170",
    "end": "1012110"
  },
  {
    "text": "insane attack to demo because it relies on a race condition and I'll demo it inside a VM on my laptop which is",
    "start": "1012110",
    "end": "1018350"
  },
  {
    "text": "stepping down CPU on battery mode but it's the most recent and probably the most dangerous all linux kernel's since",
    "start": "1018350",
    "end": "1024920"
  },
  {
    "text": "2007 all docker versions here we go",
    "start": "1024920",
    "end": "1031959"
  },
  {
    "text": "visible you tell me the back when that's sufficient all right",
    "start": "1034559",
    "end": "1042490"
  },
  {
    "text": "okay so I've scripted all this in an effort to de-stress tasks pray for God's",
    "start": "1042490",
    "end": "1048580"
  },
  {
    "text": "I can't see what that says everyone team up come on out let me okay right so so what we have",
    "start": "1048580",
    "end": "1063130"
  },
  {
    "text": "here is",
    "start": "1063130",
    "end": "1065549"
  },
  {
    "text": "you",
    "start": "1071220",
    "end": "1073280"
  },
  {
    "text": "dtrace in an effort to essentially trick the kernel where there's the brief",
    "start": "1091440",
    "end": "1096810"
  },
  {
    "text": "moment where it's possible to write to memory that is being changed from root privilege to user and at the moment",
    "start": "1096810",
    "end": "1104160"
  },
  {
    "text": "where it's still writable by the you becomes writable by the user before it's lost its privilege of root access so",
    "start": "1104160",
    "end": "1109950"
  },
  {
    "text": "it's copy on rights and the race condition is getting in there just before the permissions have changed entirely in this Cystic window we're",
    "start": "1109950",
    "end": "1116940"
  },
  {
    "text": "tracing port 1 2 3 4 which is where once the exploit inside the container has",
    "start": "1116940",
    "end": "1125520"
  },
  {
    "text": "managed to trick the kernel it then opens up a socket back of the network",
    "start": "1125520",
    "end": "1130530"
  },
  {
    "text": "connection back on that port which will be listening on and so we'll be able to see the connection here and very top",
    "start": "1130530",
    "end": "1136860"
  },
  {
    "text": "window we have the exploit itself so",
    "start": "1136860",
    "end": "1144170"
  },
  {
    "text": "what we've done here is build a container with the dirty cow virtual dynamic shared object exploits in it and",
    "start": "1144170",
    "end": "1152480"
  },
  {
    "text": "this is going to tell us what vulnerabilities we have on this kernel version so it's an old version 42 and",
    "start": "1152480",
    "end": "1159330"
  },
  {
    "text": "there are various other things that are wrong with it we're just going to focus on data cow for now we want to run with",
    "start": "1159330",
    "end": "1164400"
  },
  {
    "text": "a barber well that gives you a clue what we'll do later for now no so we're off",
    "start": "1164400",
    "end": "1170460"
  },
  {
    "text": "we've got the Emin vehicle which the memory advised P Trace is attempting to",
    "start": "1170460",
    "end": "1175920"
  },
  {
    "text": "trace the application from within itself to inject this code being a race",
    "start": "1175920",
    "end": "1182880"
  },
  {
    "text": "condition you can see it's still 1034 47 this is way behind where we actually are because of the huge volume of calls and",
    "start": "1182880",
    "end": "1188970"
  },
  {
    "text": "then we've got the listener open here on globs to all adapters and one two three",
    "start": "1188970",
    "end": "1195330"
  },
  {
    "text": "four and there we go so we've now you can see at the top we've managed to backdoor the V s do an increase decrease",
    "start": "1195330",
    "end": "1204360"
  },
  {
    "text": "the size of the slightly and we'll have a look at what the top process now gives us access to",
    "start": "1204360",
    "end": "1211070"
  },
  {
    "text": "so you can see it bottom hopefully not yep that file is owned by roots and up top",
    "start": "1214779",
    "end": "1223580"
  },
  {
    "text": "here so this is within the container and we'll be able to see we can see the",
    "start": "1223580",
    "end": "1229039"
  },
  {
    "text": "process list from the host so you've escaped the container we can also see this tamp file I think you can actually",
    "start": "1229039",
    "end": "1237350"
  },
  {
    "text": "see that of course",
    "start": "1237350",
    "end": "1240789"
  },
  {
    "text": "you",
    "start": "1246179",
    "end": "1248240"
  },
  {
    "text": "getting what wanted to and we're able to export exploit a problem with the kernel",
    "start": "1261990",
    "end": "1268200"
  },
  {
    "text": "from inside a container so close that",
    "start": "1268200",
    "end": "1273690"
  },
  {
    "text": "all down and restart the VM later okay",
    "start": "1273690",
    "end": "1284539"
  },
  {
    "start": "1290000",
    "end": "1290000"
  },
  {
    "text": "so just to recap we can't secure a thing we know there are problems in software",
    "start": "1290290",
    "end": "1295330"
  },
  {
    "text": "development even the most depended upon open source libraries that we know and",
    "start": "1295330",
    "end": "1300640"
  },
  {
    "text": "love have vulnerabilities when experts working on them and humans will always make mistakes that will always generate",
    "start": "1300640",
    "end": "1307060"
  },
  {
    "text": "bugs we know there are problems in software nothing is entirely secure and the cost",
    "start": "1307060",
    "end": "1313000"
  },
  {
    "text": "of things like formal specifications for all code is too high otherwise we'd see",
    "start": "1313000",
    "end": "1319270"
  },
  {
    "text": "greater adoption security struggles to keep pace with the cadence of DevOps delivery of DevOps revolution means that",
    "start": "1319270",
    "end": "1326380"
  },
  {
    "text": "speed sacrifices security generally as the first fall and unless we start to be",
    "start": "1326380",
    "end": "1332110"
  },
  {
    "text": "penalized for insecure software as we suggested by Bruce Schneier at Congress after the dine hack or the",
    "start": "1332110",
    "end": "1339400"
  },
  {
    "text": "dying botnets dine dear DDoS Luntz last year unless we start to be penalized for",
    "start": "1339400",
    "end": "1345850"
  },
  {
    "text": "insecure software our competitors who are not penalized will have the advantage the speed of shipping features",
    "start": "1345850",
    "end": "1351790"
  },
  {
    "text": "is competitive advantage and we're not going to win the thing by slowing down going back to software is it possible to",
    "start": "1351790",
    "end": "1359260"
  },
  {
    "text": "write bug-free code only with sufficient",
    "start": "1359260",
    "end": "1365680"
  },
  {
    "text": "time conformance to a specification does not guarantee the absence of exploitable",
    "start": "1365680",
    "end": "1371470"
  },
  {
    "text": "bugs there's quite a lot here and probably too much to go through now but nist has published an analysis of state",
    "start": "1371470",
    "end": "1378340"
  },
  {
    "text": "VR on how to reduce software vulnerabilities which is deeply fascinating I'll leave these in here",
    "start": "1378340",
    "end": "1383380"
  },
  {
    "text": "posterity essentially measure software quality use good teams and measure the",
    "start": "1383380",
    "end": "1390280"
  },
  {
    "text": "cost of quality of what you do there's also wonderful secure programming how-to by David wheeler this is all free I",
    "start": "1390280",
    "end": "1396580"
  },
  {
    "text": "publish these slides afterwards so essentially been this paper which is",
    "start": "1396580",
    "end": "1401920"
  },
  {
    "text": "worth reading in its entirety summarize its major stuff right good specifications use good people treat",
    "start": "1401920",
    "end": "1407110"
  },
  {
    "text": "them well test stuff test stuff furiously there are applicate that these",
    "start": "1407110",
    "end": "1412540"
  },
  {
    "text": "are applicable to open source and enterprise but if we agree that humans are fallible and at some point we'll see",
    "start": "1412540",
    "end": "1418900"
  },
  {
    "text": "more epic open source failures there must be something we can do to prevent ourselves preemptively so from that let",
    "start": "1418900",
    "end": "1426409"
  },
  {
    "start": "1421000",
    "end": "1421000"
  },
  {
    "text": "Brazilian architecture is the one that stands out and probably the one of most interest to us today so let's examine",
    "start": "1426409",
    "end": "1432830"
  },
  {
    "text": "then the best practices with a view to so we know these are the things",
    "start": "1432830",
    "end": "1438950"
  },
  {
    "text": "containers a good app is security which into this list well",
    "start": "1438950",
    "end": "1444260"
  },
  {
    "text": "the integration with advanced kernel security features this is a relatively recent addition to docker so in they bad",
    "start": "1444260",
    "end": "1451039"
  },
  {
    "start": "1449000",
    "end": "1449000"
  },
  {
    "text": "at security there aren't namespaces for everything the daemon running as routes age-old criticism which is changing and",
    "start": "1451039",
    "end": "1458510"
  },
  {
    "text": "of course there are isolation trade to be made versus a hypervisor there's actually as we move towards things like",
    "start": "1458510",
    "end": "1465590"
  },
  {
    "text": "hyper SH and being totally containers implementation then those docker in",
    "start": "1465590",
    "end": "1473809"
  },
  {
    "text": "virtual machine implementations are keen to how Google Rome these containers on",
    "start": "1473809",
    "end": "1478850"
  },
  {
    "text": "the on compute engine and how AWS the same way so running within a container",
    "start": "1478850",
    "end": "1485720"
  },
  {
    "text": "within a hypervisor may be sort of the best of both worlds ultimately as he",
    "start": "1485720",
    "end": "1490970"
  },
  {
    "text": "said knowledge mature slightly but a good thing about containers the default",
    "start": "1490970",
    "end": "1496130"
  },
  {
    "text": "configuration is pretty robust at this point and at any review who are in that security talked previously with Jess",
    "start": "1496130",
    "end": "1502610"
  },
  {
    "text": "Rizzo we have her to thank for a lot of these things the reduction of dependencies reduces the attack surface by installing",
    "start": "1502610",
    "end": "1511940"
  },
  {
    "text": "minimal tools and attaching by namespace rather than requiring debugging tools to be built into the application units were",
    "start": "1511940",
    "end": "1518690"
  },
  {
    "text": "shipping fast the software updates chain of trust post-mortem from logging drivers so that this is a list of all",
    "start": "1518690",
    "end": "1526010"
  },
  {
    "text": "some of the vulnerabilities the containers have prevented by default it's not exhaustive and notably unmitigated are the kernel issues that",
    "start": "1526010",
    "end": "1533330"
  },
  {
    "text": "we've been through previously so how does docker provide security hardening again I'm sure everybody knows this",
    "start": "1533330",
    "end": "1539179"
  },
  {
    "start": "1535000",
    "end": "1535000"
  },
  {
    "text": "we've got namespaces providing different view for each of their sub components for example the pit namespace gives",
    "start": "1539179",
    "end": "1545899"
  },
  {
    "text": "different process IDs inside the container as outside the container so each container has its own view of the",
    "start": "1545899",
    "end": "1552889"
  },
  {
    "text": "world and the host a view of all the micro vs. with Sider got Network directories all these",
    "start": "1552889",
    "end": "1561470"
  },
  {
    "text": "things and as of doctor 110 we also have user name spaces which are in their first implementation at the moment",
    "start": "1561470",
    "end": "1567770"
  },
  {
    "text": "because the curl doesn't quite support individual user names bases per container that will change but up until",
    "start": "1567770",
    "end": "1574190"
  },
  {
    "text": "this point mapping a user inside the container to non brute outside the container is the best mitigation that we",
    "start": "1574190",
    "end": "1579890"
  },
  {
    "text": "have control groups again preventing processes for steaming too much resource",
    "start": "1579890",
    "end": "1585110"
  },
  {
    "text": "and doctor runtime configuration if we can run is immutable applications with",
    "start": "1585110",
    "end": "1591520"
  },
  {
    "text": "unrideable valves root file systems then it's helpful it's not up again a panacea because you can just type the loader",
    "start": "1591520",
    "end": "1598190"
  },
  {
    "text": "code into a runtime interpreter for this one there or execute things from memory pit limits and security options",
    "start": "1598190",
    "end": "1604820"
  },
  {
    "text": "especially preventing privileges from being granted after the container started so capabilities allow",
    "start": "1604820",
    "end": "1612320"
  },
  {
    "text": "fine-grained access control rather than just I am routes the Linux kernel has over 600 system calls and a bug in any",
    "start": "1612320",
    "end": "1619730"
  },
  {
    "text": "one of those as demonstrated can lead to a privilege escalation so this reduces",
    "start": "1619730",
    "end": "1625040"
  },
  {
    "text": "the chances that have occasional burn abilities are exploitable and can also protect us from dirty cow which we'll go",
    "start": "1625040",
    "end": "1631160"
  },
  {
    "text": "through and demo in a moment that have relies on a system called P trace as we spoke about which has a legitimate use",
    "start": "1631160",
    "end": "1638450"
  },
  {
    "text": "in a lot of cases for example if you want to a process list or you want to s trace attach trace to a running process",
    "start": "1638450",
    "end": "1645380"
  },
  {
    "text": "or invoke a process that way so this admins need this tool but in",
    "start": "1645380",
    "end": "1650630"
  },
  {
    "text": "this case it was exploited and we can run through how to prevent it from being available with inside the container to",
    "start": "1650630",
    "end": "1656480"
  },
  {
    "text": "be exploited docker drops a huge number of system calls automatically to",
    "start": "1656480",
    "end": "1662600"
  },
  {
    "text": "restrict the behavior of containers and second profiles are an extension of that writing tighter more fine-grained",
    "start": "1662600",
    "end": "1669830"
  },
  {
    "text": "control access lists around",
    "start": "1669830",
    "end": "1673929"
  },
  {
    "start": "1674000",
    "end": "1674000"
  },
  {
    "text": "you ships gr security extent colonel and",
    "start": "1679670",
    "end": "1688760"
  },
  {
    "text": "also doesn't run lib sea otter doesn't run bash by default so moving",
    "start": "1688760",
    "end": "1695240"
  },
  {
    "text": "applications to alpine gives you a large amount of free security obviously",
    "start": "1695240",
    "end": "1700520"
  },
  {
    "text": "contending with running news all versus live sea is something that may be dependent upon what you're compiling and putting into your containers in the",
    "start": "1700520",
    "end": "1707180"
  },
  {
    "text": "first place system policies insist called whitelisting these allow fine-grained",
    "start": "1707180",
    "end": "1712760"
  },
  {
    "text": "access control to system calls set comp is the most comprehensive a Parmen",
    "start": "1712760",
    "end": "1717860"
  },
  {
    "text": "SELinux our Ubuntu and Red Hat specific and that Tamayo is its own sort of",
    "start": "1717860",
    "end": "1723200"
  },
  {
    "text": "kernel extensions so who uses security policies not very many people it seems",
    "start": "1723200",
    "end": "1728270"
  },
  {
    "text": "thank you in general from the red mark survey this comes in about twenty four percent",
    "start": "1728270",
    "end": "1735550"
  },
  {
    "text": "considering they are the line of defense against unknown",
    "start": "1735550",
    "end": "1741850"
  },
  {
    "text": "you",
    "start": "1747590",
    "end": "1749650"
  },
  {
    "text": "a busybox container to the network namespace so in that case once you're attached to the network namespace of",
    "start": "1756940",
    "end": "1762100"
  },
  {
    "text": "course your network is shared with the container that you attach to this means",
    "start": "1762100",
    "end": "1767200"
  },
  {
    "text": "you don't need to install TCP dump into your containers essentially you don't need any debugging tools at all you can",
    "start": "1767200",
    "end": "1773080"
  },
  {
    "text": "bring everything with you and attach it in an unprivileged manner or you can use the more nucleus Cystic style option",
    "start": "1773080",
    "end": "1779200"
  },
  {
    "text": "where you bring a privileged container in and you operate on the hosts view of the system depends on what you need to",
    "start": "1779200",
    "end": "1786130"
  },
  {
    "text": "do ideally where any printed containers as lost resorts assisting it's a wonderful tool however avoiding previous",
    "start": "1786130",
    "end": "1793390"
  },
  {
    "text": "antennas where possible capability drops are essential these namespaces the resource limits the",
    "start": "1793390",
    "end": "1800170"
  },
  {
    "text": "cgroups afford and mounting volumes in is again restricted a manner as is",
    "start": "1800170",
    "end": "1806650"
  },
  {
    "text": "possible so we can also use things like notary content addressable images means",
    "start": "1806650",
    "end": "1814720"
  },
  {
    "text": "that the hash that we see for dock container is akin to get a Merkel tree related to the contents of the container",
    "start": "1814720",
    "end": "1821230"
  },
  {
    "text": "didn't used to be the way it is now we can use those as cryptographic security to make sure that what we ship from our",
    "start": "1821230",
    "end": "1827200"
  },
  {
    "text": "development laptops makes it through to production with exactly the same code cube lettuce also offers some security",
    "start": "1827200",
    "end": "1834580"
  },
  {
    "text": "controls there either at the pod or the contain a level but syntax is the same run as non-root exploits the user",
    "start": "1834580",
    "end": "1841450"
  },
  {
    "text": "Explorer paint the wrong word utilizes the user namespaces that we spoke of before single username space to run the",
    "start": "1841450",
    "end": "1849310"
  },
  {
    "text": "user in the container at non routes outside so it's only on the dock a demon",
    "start": "1849310",
    "end": "1854380"
  },
  {
    "text": "namespace but this will change with the next iteration of kernel namespace implementation FS group is selinux",
    "start": "1854380",
    "end": "1862030"
  },
  {
    "text": "extent sorry especially it's the center's volume label and set the ownership of mounted volumes with SS",
    "start": "1862030",
    "end": "1868150"
  },
  {
    "text": "groups so back to the container breakout and let's do the same thing let's do the",
    "start": "1868150",
    "end": "1876880"
  },
  {
    "text": "same thing but using security extensions",
    "start": "1876880",
    "end": "1881580"
  },
  {
    "text": "you",
    "start": "1904519",
    "end": "1906580"
  },
  {
    "text": "what even can do it's fairly generic but it covers a huge amount of cases",
    "start": "1910900",
    "end": "1916290"
  },
  {
    "text": "unfortunately in the case of the how vs do implementation of that vulnerability",
    "start": "1916290",
    "end": "1921790"
  },
  {
    "text": "then the P trade system call was used so",
    "start": "1921790",
    "end": "1927030"
  },
  {
    "text": "going through the same list of vulnerability",
    "start": "1927030",
    "end": "1931710"
  },
  {
    "text": "you",
    "start": "1937240",
    "end": "1939300"
  },
  {
    "text": "listen the accepted and all we're going to do is comment out that cool said P",
    "start": "1958190",
    "end": "1964670"
  },
  {
    "text": "trace now is no longer an exemption and we will run exactly the same exploit as",
    "start": "1964670",
    "end": "1969890"
  },
  {
    "text": "before this is where we expect to see a similar line to this an app armor status",
    "start": "1969890",
    "end": "1978830"
  },
  {
    "text": "line so off we go we're making the same tools Emma boys and we have broken",
    "start": "1978830",
    "end": "1988370"
  },
  {
    "text": "straight out now let's just have a look at what we've got sorry broken up the top term with the application there we",
    "start": "1988370",
    "end": "1995480"
  },
  {
    "text": "go so we can see here that the pete ray school was denied which meant that when",
    "start": "1995480",
    "end": "2002920"
  },
  {
    "text": "the exploit attempted to make that system call the app are Malay in the",
    "start": "2002920",
    "end": "2008290"
  },
  {
    "text": "middle said we're not permitted to do that in the way that we've been figured and terminated which was enough to crash",
    "start": "2008290",
    "end": "2014110"
  },
  {
    "text": "the program and if we look here we can",
    "start": "2014110",
    "end": "2019960"
  },
  {
    "text": "see a parma denied p trace from the profile dr default and the exploits",
    "start": "2019960",
    "end": "2025720"
  },
  {
    "text": "called dead beef wonderfully so there we are we've locked the container exploit",
    "start": "2025720",
    "end": "2032920"
  },
  {
    "text": "with a very simple change these are application specific there's no one-size-fits-all and there are some",
    "start": "2032920",
    "end": "2039250"
  },
  {
    "text": "tools that can be used to generate profiles I'm conscious that we've almost",
    "start": "2039250",
    "end": "2044590"
  },
  {
    "text": "reached the end of time with quite less lunch I've got another few minutes feel free to reach out if you're hungry",
    "start": "2044590",
    "end": "2050950"
  },
  {
    "text": "otherwise I'll try and whiz through the rest of what we've got here so auto-generated second profiles Jen",
    "start": "2050950",
    "end": "2058000"
  },
  {
    "start": "2054000",
    "end": "2054000"
  },
  {
    "text": "seconds a simple way around this Dhaka slim can do static or runtime analysis of an application to identify what's",
    "start": "2058000",
    "end": "2066010"
  },
  {
    "text": "this calls it's made and then generate a second profile based on that and Bain is again courtesy of Jesse cell and the",
    "start": "2066010",
    "end": "2073960"
  },
  {
    "text": "basis of an app armor proposal for docker core because there's no",
    "start": "2073960",
    "end": "2079540"
  },
  {
    "text": "one-size-fits-all solution and restricting too many system calls breaks applications then this is pretty complex",
    "start": "2079540",
    "end": "2085870"
  },
  {
    "text": "thing to get right finally the we've works and container solutions sock shop demo is shouting",
    "start": "2085870",
    "end": "2092139"
  },
  {
    "text": "ample of a well configured kubernetes manifest this goes through and only it drops all privileges and only re-enable",
    "start": "2092140",
    "end": "2098830"
  },
  {
    "text": "the privileges required per application so there's some pipeline tooling I'll",
    "start": "2098830",
    "end": "2104830"
  },
  {
    "text": "run through briefly the weakest point in your infrastructure is a likely a",
    "start": "2104830",
    "end": "2110920"
  },
  {
    "text": "circulation point it's a leaky secrets prevention again these slides be published swords with through these",
    "start": "2110920",
    "end": "2117040"
  },
  {
    "start": "2113000",
    "end": "2113000"
  },
  {
    "text": "quickly truffle hog searches for keys by looking for entropy and strings good for",
    "start": "2117040",
    "end": "2123430"
  },
  {
    "text": "finding random strings but doesn't find AWS access keys get sequences from AWS labs if finds a DRS access keys but",
    "start": "2123430",
    "end": "2131110"
  },
  {
    "text": "doesn't search for broad entropy and requires a lot of regex configuration so insert them in parallel probably the",
    "start": "2131110",
    "end": "2137230"
  },
  {
    "start": "2137000",
    "end": "2137000"
  },
  {
    "text": "minimum required doc container scanning you guys probably know most of these",
    "start": "2137230",
    "end": "2142240"
  },
  {
    "text": "pulling vulnerabilities from the NIST vulnerability database Claire the core OS offering lineThe it's more or less",
    "start": "2142240",
    "end": "2149950"
  },
  {
    "text": "open source but the enterprise doc plugin does require subscription although it gets a shout out for being",
    "start": "2149950",
    "end": "2156190"
  },
  {
    "text": "pure c'mon lion beauty docker scan is a new tool announced at root akan Spain",
    "start": "2156190",
    "end": "2162160"
  },
  {
    "text": "that essentially tries to break containers trojan eyes them and identify which user is actually running which is",
    "start": "2162160",
    "end": "2168070"
  },
  {
    "text": "more complex if it looks really interesting a new tool looking for contributors open s cap is now folded",
    "start": "2168070",
    "end": "2174370"
  },
  {
    "text": "into Red Hat stalling as well Banyon collector these benders all do the",
    "start": "2174370",
    "end": "2180970"
  },
  {
    "text": "container scanning an IDs worth praising if you have the money to support this if",
    "start": "2180970",
    "end": "2187060"
  },
  {
    "text": "you're making any money as a as a company host analysis doc bench is sorry",
    "start": "2187060",
    "end": "2196750"
  },
  {
    "start": "2196000",
    "end": "2196000"
  },
  {
    "text": "host knows this doc bench is provided by docker gives you a checklist of the things that you should or shouldn't be",
    "start": "2196750",
    "end": "2202060"
  },
  {
    "text": "doing on your hosts application dependency analysis we want to make sure that we're not bringing vulnerable",
    "start": "2202060",
    "end": "2207160"
  },
  {
    "start": "2203000",
    "end": "2203000"
  },
  {
    "text": "versions of things OpenSSL especially been so last nick will actually make",
    "start": "2207160",
    "end": "2214450"
  },
  {
    "text": "pull requests for you so you get an automatic routes remediation of vulnerabilities fuzzers american fuzzy",
    "start": "2214450",
    "end": "2221590"
  },
  {
    "text": "lop that's what it looks like it's an amazing tool worth just playing with having the website and seeing how many things",
    "start": "2221590",
    "end": "2227720"
  },
  {
    "text": "it has broken web application scanners this is a talk in itself but these can",
    "start": "2227720",
    "end": "2233480"
  },
  {
    "start": "2229000",
    "end": "2229000"
  },
  {
    "text": "go in the pipeline and be used as another form of testing running somewhere between component integration",
    "start": "2233480",
    "end": "2238610"
  },
  {
    "text": "and system acceptance and defined behavior of applications I should have a client search on here I should have only",
    "start": "2238610",
    "end": "2245060"
  },
  {
    "text": "this port open etc so how do we stay secure well we don't make our houses and",
    "start": "2245060",
    "end": "2251330"
  },
  {
    "text": "possessions open through everybody we look monitor and alarm them and this is referred to as defense-in-depth",
    "start": "2251330",
    "end": "2256720"
  },
  {
    "text": "intrusion detection systems are a necessary part of this should always run them in production and anywhere else",
    "start": "2256720",
    "end": "2262310"
  },
  {
    "start": "2259000",
    "end": "2259000"
  },
  {
    "text": "that has keys to production and can be escalated from which contentiously includes build servers Fulco consisting",
    "start": "2262310",
    "end": "2270530"
  },
  {
    "text": "is essentially just the system tracing part of Cystic this is call tracing and will generate alerts for you this could",
    "start": "2270530",
    "end": "2278060"
  },
  {
    "text": "be integrated with Cystic cloud it's all open source really nifty implementation there's also various other things open",
    "start": "2278060",
    "end": "2285140"
  },
  {
    "text": "against proprietary entries snorts being the old-school it's all about the future",
    "start": "2285140",
    "end": "2290540"
  },
  {
    "text": "nothing's inherently secure open-source software it doesn't really matter if",
    "start": "2290540",
    "end": "2295730"
  },
  {
    "text": "it's secure enough secure or less than open closed source secure enough for our needs as endorsed by major corporations",
    "start": "2295730",
    "end": "2302960"
  },
  {
    "text": "and users but this talk has been about exploits that are scary shiny and interesting but they're not the way that",
    "start": "2302960",
    "end": "2309650"
  },
  {
    "start": "2304000",
    "end": "2304000"
  },
  {
    "text": "people get hacked the open web application security top-10 hasn't changed for years with good reason",
    "start": "2309650",
    "end": "2314920"
  },
  {
    "text": "application vulnerabilities at this level are the easiest routes to exfiltration of your data application",
    "start": "2314920",
    "end": "2321170"
  },
  {
    "text": "code changes far more frequently than the infrastructure code that we put beneath it so prepare for the unexpected",
    "start": "2321170",
    "end": "2327770"
  },
  {
    "start": "2327000",
    "end": "2327000"
  },
  {
    "text": "secure your networks application code Jesus browsers and when all else fails run IDs so there's a brief set of",
    "start": "2327770",
    "end": "2336440"
  },
  {
    "text": "recapping points and our perviously slides on twitter afterwards thank you",
    "start": "2336440",
    "end": "2343000"
  },
  {
    "text": "[Applause]",
    "start": "2343870",
    "end": "2348350"
  }
]