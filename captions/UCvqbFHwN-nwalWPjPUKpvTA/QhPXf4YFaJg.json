[
  {
    "start": "0",
    "end": "106000"
  },
  {
    "text": "hello everybody uh thanks for coming to this tutorial about using bpf in cloud native",
    "start": "80",
    "end": "6160"
  },
  {
    "text": "environment my name is albon i'm a co-founder and",
    "start": "6160",
    "end": "11280"
  },
  {
    "text": "director at kinfolk labs we do consulting and engineering around open source projects",
    "start": "11280",
    "end": "17199"
  },
  {
    "text": "related to linux and communities and at control clubs we are a team dedicated team focused on",
    "start": "17199",
    "end": "23920"
  },
  {
    "text": "innovation in our open source projects and also collaborating with other software company and upside",
    "start": "23920",
    "end": "30160"
  },
  {
    "text": "projects hi i'm marga i also work at kim folk",
    "start": "30160",
    "end": "39040"
  },
  {
    "text": "i'm an engineer in the flatcar team flatcar is a container optimized os",
    "start": "39040",
    "end": "45760"
  },
  {
    "text": "which can be used to run inside kubernetes if you want but i'm also interested in other things",
    "start": "45760",
    "end": "52480"
  },
  {
    "text": "so i joined alban today for this workshop on bpf because i found bpf",
    "start": "52480",
    "end": "58879"
  },
  {
    "text": "a very interesting tool for debugging applications",
    "start": "58879",
    "end": "63520"
  },
  {
    "text": "thanks um so i mentioned keyfront labs before atkinfolk we had to build 100 percent",
    "start": "65119",
    "end": "72799"
  },
  {
    "text": "um open enterprise cloud native stack it includes a flat card",
    "start": "72799",
    "end": "78320"
  },
  {
    "text": "container linux or linux disk software containers as maga mentioned on locomotive or kubernetes distro",
    "start": "78320",
    "end": "84720"
  },
  {
    "text": "but everything we do uh show in this uh talk is about um",
    "start": "84720",
    "end": "91040"
  },
  {
    "text": "things you can do um with other linux distribution and other kubernetes distribution so it's uh generic technology is not",
    "start": "91040",
    "end": "98240"
  },
  {
    "text": "tied to",
    "start": "98240",
    "end": "100798"
  },
  {
    "text": "next slide yeah so uh this is a hands-on tutorial",
    "start": "104960",
    "end": "111680"
  },
  {
    "start": "106000",
    "end": "106000"
  },
  {
    "text": "it's a workshop where we want you to follow along and do the the exercises the demos that",
    "start": "111680",
    "end": "117520"
  },
  {
    "text": "we will show on your computer so uh we want you to please now clone this repo",
    "start": "117520",
    "end": "125280"
  },
  {
    "text": "and and get started if you haven't already hopefully you have done this already but",
    "start": "125280",
    "end": "130959"
  },
  {
    "text": "if you haven't uh we will cross our fingers that everything works out of the box and then",
    "start": "130959",
    "end": "136239"
  },
  {
    "text": "you can get ready the workshop uses a mini cube you can",
    "start": "136239",
    "end": "141360"
  },
  {
    "text": "also do these things with other kubernetes distributions but the we've optimized everything so that",
    "start": "141360",
    "end": "148319"
  },
  {
    "text": "everything works out of the box or hopefully works out of the box so we recommend that you follow along using",
    "start": "148319",
    "end": "155280"
  },
  {
    "text": "the tools that we provided for example for minicube we are providing an image",
    "start": "155280",
    "end": "160800"
  },
  {
    "text": "that already includes the kernel headers because for using these tools you need to have the",
    "start": "160800",
    "end": "166959"
  },
  {
    "text": "kernel headers so um yeah and and then you have to",
    "start": "166959",
    "end": "172319"
  },
  {
    "text": "install the rest of the tools we will do this along with you uh all the different steps",
    "start": "172319",
    "end": "177680"
  },
  {
    "text": "but we want you to do this on your computer you can also do it on a vm if you want to use a vm there's a few",
    "start": "177680",
    "end": "184400"
  },
  {
    "text": "caveats that you have to take into account but you can do it on a vm all right so we will start with",
    "start": "184400",
    "end": "191040"
  },
  {
    "text": "our first hands-on task which is to get mini cube running install it if you",
    "start": "191040",
    "end": "196720"
  },
  {
    "text": "haven't installed it and for that i will share my screen",
    "start": "196720",
    "end": "203440"
  },
  {
    "text": "okay so we have already cloned the repo in this cloud native bpf workshop",
    "start": "207760",
    "end": "213440"
  },
  {
    "text": "directory hopefully you have cloned it by now and",
    "start": "213440",
    "end": "218879"
  },
  {
    "text": "we will go into the getting started directory that has a startminiqueue.sh script",
    "start": "218879",
    "end": "226720"
  },
  {
    "text": "let's have a quick look at the script uh to see what it does before executing",
    "start": "226720",
    "end": "231920"
  },
  {
    "text": "stuff it's usually a good idea to check what things do so this script downloads mini cube then",
    "start": "231920",
    "end": "238000"
  },
  {
    "text": "verifies the hash sums and then it will ask you for confirmation because it will",
    "start": "238000",
    "end": "244640"
  },
  {
    "text": "delete any mini cube that you have running if you have it on your machine and then uh there's two options either",
    "start": "244640",
    "end": "252080"
  },
  {
    "text": "you pass this use drive or non parameter which is only if you are running on a inside a virtual machine or you don't",
    "start": "252080",
    "end": "258880"
  },
  {
    "text": "and then it it runs with virtualization ideally you want to run with virtualization it's",
    "start": "258880",
    "end": "264160"
  },
  {
    "text": "a better idea but if you are running this inside a vm you want to use the use driver non-parameter all right we",
    "start": "264160",
    "end": "271680"
  },
  {
    "text": "will now run this start mini cube",
    "start": "271680",
    "end": "276720"
  },
  {
    "text": "so this is now downloading the mini cube image that we prepared for you with the",
    "start": "276720",
    "end": "282880"
  },
  {
    "text": "uh with the headers and now it downloaded the image and now",
    "start": "282880",
    "end": "289600"
  },
  {
    "text": "it will start mini cube and this can take a while so while this is running",
    "start": "289600",
    "end": "294639"
  },
  {
    "text": "uh we will go back to the slides and",
    "start": "294639",
    "end": "299600"
  },
  {
    "text": "go back to uh explain a little bit why we're here and why why this workshop even",
    "start": "299680",
    "end": "307600"
  },
  {
    "text": "is necessary uh someone asked for the git clone url",
    "start": "307600",
    "end": "314479"
  },
  {
    "text": "again so i will go back quickly to the url the this is the git clone url and one",
    "start": "314479",
    "end": "322320"
  },
  {
    "text": "thing i wanted to mention on this slide was that we also have a slack channel for this tutorial the slack channel is",
    "start": "322320",
    "end": "330160"
  },
  {
    "text": "in the kubecon slack is 2-cubecon tutorials bpf",
    "start": "330160",
    "end": "336720"
  },
  {
    "text": "so in the channel uh feel free to ask questions or like answer each other uh inside that",
    "start": "336720",
    "end": "343039"
  },
  {
    "text": "slack channel all right so while mini cube is installing",
    "start": "343039",
    "end": "348160"
  },
  {
    "text": "why are we even here what's what's all this about so this is about debugging applications",
    "start": "348160",
    "end": "356000"
  },
  {
    "text": "and in particular debugging applications inside kubernetes debugging in general is hard but",
    "start": "356000",
    "end": "362400"
  },
  {
    "text": "debugging inside kubernetes is even harder because like everything is running somewhere and we don't know",
    "start": "362400",
    "end": "368160"
  },
  {
    "text": "the pods are communicating with each other and how do we even figure out what's going on the bpf",
    "start": "368160",
    "end": "374720"
  },
  {
    "text": "tracing tools are really good to help us figure out what's going on but the problem is that ppf tracing",
    "start": "374720",
    "end": "379919"
  },
  {
    "text": "tools that already exist out there were thought to be run on a machine",
    "start": "379919",
    "end": "386240"
  },
  {
    "text": "and investigate what's going on inside the machine so the tools that we will demonstrate",
    "start": "386240",
    "end": "391600"
  },
  {
    "text": "today inspector gadget and cube ctl trace are plugging this gap of like how do we",
    "start": "391600",
    "end": "397919"
  },
  {
    "text": "run this super useful bpf tools inside kubernetes or",
    "start": "397919",
    "end": "403280"
  },
  {
    "text": "with kubernetes and to explain a little bit more about that alvin will tell you more about bpf and",
    "start": "403280",
    "end": "409840"
  },
  {
    "text": "how bpf works thanks",
    "start": "409840",
    "end": "416240"
  },
  {
    "start": "411000",
    "end": "411000"
  },
  {
    "text": "so bpf stands for berkeley package filter maybe you know about that if you are on this talk",
    "start": "417919",
    "end": "425120"
  },
  {
    "text": "but i will give a bit more context um so it takes for quite a while initially it",
    "start": "425120",
    "end": "430880"
  },
  {
    "text": "was for tcp dump that was used to uh filter",
    "start": "430880",
    "end": "436160"
  },
  {
    "text": "network traffic on a road socket so that tcp dom can be performant and",
    "start": "436160",
    "end": "442639"
  },
  {
    "text": "can you can specify filters on to say only want to get http traffic for",
    "start": "442639",
    "end": "449599"
  },
  {
    "text": "example or only dns traffic or arbitrary expression like that and to make it performant they use bpf",
    "start": "449599",
    "end": "457360"
  },
  {
    "text": "to execute the filter actually inside the kernel so instead of tcp then getting all the",
    "start": "457360",
    "end": "464400"
  },
  {
    "text": "network traffic in user space in the discipline process and then filtering there instead of that",
    "start": "464400",
    "end": "469840"
  },
  {
    "text": "um it create a bpa filter put it in the kernel and the kernel will only",
    "start": "469840",
    "end": "474879"
  },
  {
    "text": "wake up the dissipating process only resists necessary for the packets you want",
    "start": "474879",
    "end": "480080"
  },
  {
    "text": "that was the initial use case in meanwhile recently it developed to a lot",
    "start": "480080",
    "end": "488000"
  },
  {
    "text": "of more use case their use case for networking where a different socket filter or you can do",
    "start": "488000",
    "end": "494400"
  },
  {
    "text": "traffic shipping use case for security where you can have a site comp where to",
    "start": "494400",
    "end": "501440"
  },
  {
    "text": "filter the system calls you want to do or more recently on linux security modules",
    "start": "501440",
    "end": "506960"
  },
  {
    "text": "and uh lastly there are use cases for tracing so that's more what we are focusing today",
    "start": "506960",
    "end": "512479"
  },
  {
    "text": "where we can uh use bpf for guns to uh hook into trace prints or k-pops or",
    "start": "512479",
    "end": "518959"
  },
  {
    "text": "eupops and so on so i can explain a bit more into details",
    "start": "518959",
    "end": "525920"
  },
  {
    "text": "what eppf is this extended version of vpf so the workflow looks like that at the",
    "start": "525920",
    "end": "532640"
  },
  {
    "text": "beginning you write a bpa program usually in a language like a c you can",
    "start": "532640",
    "end": "538240"
  },
  {
    "text": "compare that with c local lvm into your bpf by code and then this bpfpi",
    "start": "538240",
    "end": "544240"
  },
  {
    "text": "code can be uploaded in the kernel with the bpf system call and then the first thing the kernel will",
    "start": "544240",
    "end": "549600"
  },
  {
    "text": "do will it will verify the bpa program to see if it is safe but it means it it will make sure it's",
    "start": "549600",
    "end": "556240"
  },
  {
    "text": "not possible for the bpf program to access any random memory in the kernel if it's not safe or",
    "start": "556240",
    "end": "562959"
  },
  {
    "text": "corrupt your data or anything so it's not like your name modules where is dangerous using bpf program doesn't",
    "start": "562959",
    "end": "569440"
  },
  {
    "text": "risk crouching your channel so this ppf system call will return a file",
    "start": "569440",
    "end": "575040"
  },
  {
    "text": "descriptor that represents your bpf program but so far it doesn't do anything until",
    "start": "575040",
    "end": "581040"
  },
  {
    "text": "this bpf program is attached to something in a kernel it can be attached with k ports to some",
    "start": "581040",
    "end": "587519"
  },
  {
    "text": "kind of function as to on a network stack a different layer and this ppf program can",
    "start": "587519",
    "end": "597040"
  },
  {
    "text": "make use of bpf helper functions to execute some things outside of the close",
    "start": "597040",
    "end": "605040"
  },
  {
    "text": "sandbox there is another concept called bpfmaps bpf maps are kind",
    "start": "605040",
    "end": "611200"
  },
  {
    "text": "of like a global variable that are accessible from your bpf program and accessible",
    "start": "611200",
    "end": "617120"
  },
  {
    "text": "from user space applications so that's a mechanism for ppf for grants on",
    "start": "617120",
    "end": "622160"
  },
  {
    "text": "your user space application to communicate together through this bpf maps",
    "start": "622160",
    "end": "632640"
  },
  {
    "start": "630000",
    "end": "630000"
  },
  {
    "text": "so there are varieties of tracing tools on linux that use bpf i listed some of them here on the",
    "start": "632640",
    "end": "639920"
  },
  {
    "text": "left side there is bpf trace which has a custom language to write your bpf programs there are bcc",
    "start": "639920",
    "end": "648079"
  },
  {
    "text": "tools bbcc is a really useful repository with a lot of examples how to use bpf",
    "start": "648079",
    "end": "654480"
  },
  {
    "text": "so that's a good static plan to learn bpf to see the collection of tools and",
    "start": "654480",
    "end": "660959"
  },
  {
    "text": "try to execute them or to read how it's done by reading the source",
    "start": "660959",
    "end": "666720"
  },
  {
    "text": "there are other tools like trace loop we will talk about it today and other one but most of those tools are",
    "start": "666720",
    "end": "672640"
  },
  {
    "text": "more designed to run on one computer so it's not really cloud native with",
    "start": "672640",
    "end": "677839"
  },
  {
    "text": "something you can do on the kubernetes level for that there are tools like cube ctl trace",
    "start": "677839",
    "end": "684079"
  },
  {
    "text": "that's a capacitive plugin you can use on kubernetes and internally it will use",
    "start": "684079",
    "end": "689680"
  },
  {
    "text": "bpf trace on the work or not and there is inspector gadget that will use",
    "start": "689680",
    "end": "695120"
  },
  {
    "text": "tools from bcc from traslip and so on to be able to use those tools",
    "start": "695120",
    "end": "702000"
  },
  {
    "text": "at the kubernetes level as well",
    "start": "702000",
    "end": "705360"
  },
  {
    "text": "right so now we will move on with the next hands-on task which is",
    "start": "709920",
    "end": "715440"
  },
  {
    "text": "installing inspector gadget hopefully your mini cube installation is done by now uh and if if it if you have run into any",
    "start": "715440",
    "end": "723279"
  },
  {
    "text": "problems remember asking on the slack channel it's kubecon tutorials bpf",
    "start": "723279",
    "end": "728320"
  },
  {
    "text": "two kubecon tutorials vpf a few people are already asking questions there remember to ask questions there okay so",
    "start": "728320",
    "end": "736399"
  },
  {
    "text": "the next handsome thing that we will do is uh",
    "start": "736399",
    "end": "743360"
  },
  {
    "text": "there's another script which is called get inspector gadget which first checks that you have qctl",
    "start": "743360",
    "end": "750079"
  },
  {
    "text": "installed and that it's working and then checks whether you have it already installed like you could already have inspector",
    "start": "750079",
    "end": "755360"
  },
  {
    "text": "gadget on your machine and so it doesn't do anything in that case it then uh tries to install it with crew",
    "start": "755360",
    "end": "763680"
  },
  {
    "text": "if you have crew installed because that's the recommended way but if you don't have crew install it downloads the",
    "start": "763680",
    "end": "768800"
  },
  {
    "text": "latest release for you and installs it in the same path as cube ctls so",
    "start": "768800",
    "end": "776800"
  },
  {
    "text": "let's now execute that in this machine it was already installed",
    "start": "776800",
    "end": "782639"
  },
  {
    "text": "so it didn't do anything but in your machine it's probably now downloading and installing the gadget",
    "start": "782639",
    "end": "789200"
  },
  {
    "text": "but this is now just installing the plugin and what we want to do is to now install a pod in our cluster",
    "start": "789200",
    "end": "797760"
  },
  {
    "text": "so first we will check that it actually works by running cube ctl gadget help",
    "start": "797760",
    "end": "804800"
  },
  {
    "text": "and we when we get the help uh we see that it has a bunch of sub commands that we can use",
    "start": "804800",
    "end": "811680"
  },
  {
    "text": "and we will show a few of those subcommands in this workshop uh and now",
    "start": "811680",
    "end": "818720"
  },
  {
    "text": "that we know that it's running we need to deploy a gadget so how do we deploy a gadget",
    "start": "818720",
    "end": "824160"
  },
  {
    "text": "there's this very handy cubectl gadget deploy command that we will first",
    "start": "824160",
    "end": "830800"
  },
  {
    "text": "inspect before we run it this generates a yaml that says all the",
    "start": "830800",
    "end": "836160"
  },
  {
    "text": "different uh service accounts cluster role binding and demon set that will",
    "start": "836160",
    "end": "842560"
  },
  {
    "text": "need to be created to run our gadget pod in our cluster so now we will actually apply it",
    "start": "842560",
    "end": "850560"
  },
  {
    "text": "doing q ctl apply dash f dash okay",
    "start": "850560",
    "end": "857519"
  },
  {
    "text": "so this created the three resources and we can check",
    "start": "857519",
    "end": "863439"
  },
  {
    "text": "it's container creating so it's creating it will take a little bit until it's done with everything we can",
    "start": "867199",
    "end": "873519"
  },
  {
    "text": "check maybe now yeah so now it's running so we have the pod and it's deployed",
    "start": "873519",
    "end": "879920"
  },
  {
    "text": "uh in our cluster and we can maybe check the logs cube ctl logs",
    "start": "879920",
    "end": "889199"
  },
  {
    "text": "cube system [Music] and then this is kubernetes up",
    "start": "889199",
    "end": "898639"
  },
  {
    "text": "gadget and yeah we see that uh it launched",
    "start": "898639",
    "end": "905519"
  },
  {
    "text": "and everything was successful which is great news all right so we have inspector gadget in",
    "start": "905519",
    "end": "911760"
  },
  {
    "text": "our cluster what can we do with it let's go back to the slides",
    "start": "911760",
    "end": "918240"
  },
  {
    "text": "the first gadget that we're going to look at is called network policy advisor",
    "start": "919920",
    "end": "925920"
  },
  {
    "text": "it's uh the use case for this gadget is when you shine a project and",
    "start": "925920",
    "end": "933519"
  },
  {
    "start": "926000",
    "end": "926000"
  },
  {
    "text": "it turns out your project has a lot of boots a lot of services they talk to each other they transmit data but there's not",
    "start": "933519",
    "end": "941199"
  },
  {
    "text": "network policy so everything is open and if something",
    "start": "941199",
    "end": "946320"
  },
  {
    "text": "malicious what's going on there's like no security whatsoever and this is a bad",
    "start": "946320",
    "end": "951519"
  },
  {
    "text": "idea and you want to deploy a network policy but you have like no idea of the",
    "start": "951519",
    "end": "956560"
  },
  {
    "text": "architecture you're new to the project so how do you even start thinking about this architecture",
    "start": "956560",
    "end": "962800"
  },
  {
    "text": "and if you care about this idea of like it's not a good idea to start putting the security at the end alvin",
    "start": "962800",
    "end": "969519"
  },
  {
    "text": "actually has a talk later today almost like right after this workshop uh called pod security as an afterthought",
    "start": "969519",
    "end": "976240"
  },
  {
    "text": "where he will cover these issues and more and so this is the problem and this is what a",
    "start": "976240",
    "end": "984079"
  },
  {
    "text": "network policy can help us with and we will see what this means with an",
    "start": "984079",
    "end": "989680"
  },
  {
    "text": "example in particular we will use an example that was generated by google",
    "start": "989680",
    "end": "995279"
  },
  {
    "text": "which is a microservices demo with a bunch of different services for like a",
    "start": "995279",
    "end": "1002160"
  },
  {
    "text": "an e-commerce site so it has a database it has checkout service shipping service like",
    "start": "1002160",
    "end": "1008399"
  },
  {
    "text": "it they just like they are all dummy services but it can help you give you an idea of what a micro service application",
    "start": "1008399",
    "end": "1017279"
  },
  {
    "text": "looks like in kubernetes and we will use this example to try out the network policy advisor",
    "start": "1017279",
    "end": "1025760"
  },
  {
    "text": "all right so with that i will share my screen again",
    "start": "1025760",
    "end": "1032319"
  },
  {
    "text": "and we will change to the zero one directory",
    "start": "1034319",
    "end": "1041199"
  },
  {
    "text": "in this directory we have a yaml file and a readme in the yaml file there's a bunch of",
    "start": "1041199",
    "end": "1048160"
  },
  {
    "text": "different things so we can for example grab for the different kinds of resources",
    "start": "1048160",
    "end": "1056320"
  },
  {
    "text": "that are there we see that there's a bunch of deployment a bunch of services if we try to make sense out of this it",
    "start": "1056320",
    "end": "1062240"
  },
  {
    "text": "would take a long time so instead of doing that we are going to use the network policy advisor so we",
    "start": "1062240",
    "end": "1069600"
  },
  {
    "text": "will do cute ctl gadget network policy monitor",
    "start": "1069600",
    "end": "1076640"
  },
  {
    "text": "because we first put it in monitor mode and then we will say name spaces and this is",
    "start": "1076640",
    "end": "1083919"
  },
  {
    "text": "important it has to be plural otherwise it doesn't work and then uh",
    "start": "1083919",
    "end": "1090799"
  },
  {
    "text": "we will output this into a file called networktrace.log so we are starting a",
    "start": "1090799",
    "end": "1098000"
  },
  {
    "text": "monitor in the demo namespace and we are saving this in the networktrace.log file",
    "start": "1098000",
    "end": "1106320"
  },
  {
    "text": "now i will split the screen and in this other side of the screen",
    "start": "1106320",
    "end": "1111520"
  },
  {
    "text": "let's change again to this directory i will actually start the deployment so",
    "start": "1111520",
    "end": "1117039"
  },
  {
    "text": "first i will create the namespace create",
    "start": "1117039",
    "end": "1122400"
  },
  {
    "text": "namespace demo and then i will apply the yaml file",
    "start": "1122400",
    "end": "1130880"
  },
  {
    "text": "okay all these uh pods are now getting created it will take a while for all the pots to",
    "start": "1135520",
    "end": "1141360"
  },
  {
    "text": "get created uh we will now see that it says container creating for most of them",
    "start": "1141360",
    "end": "1147919"
  },
  {
    "text": "we can check that our network trace.log",
    "start": "1147919",
    "end": "1154320"
  },
  {
    "text": "should be getting input soon but maybe not yet because all the",
    "start": "1155520",
    "end": "1160960"
  },
  {
    "text": "containers are creating but okay it's getting input this is good now we will let this run",
    "start": "1160960",
    "end": "1166559"
  },
  {
    "text": "and in the meantime i'll stop sharing and go back to the slides and i'll tell you a little more about",
    "start": "1166559",
    "end": "1173679"
  },
  {
    "text": "what the network policy advisor does so first these were the comments and and remember they are all",
    "start": "1173679",
    "end": "1179600"
  },
  {
    "start": "1175000",
    "end": "1175000"
  },
  {
    "text": "documented in the github repo so you can go to the github repo to to check them out and check a bit more",
    "start": "1179600",
    "end": "1186320"
  },
  {
    "text": "explanations about them and then uh this is a diagram",
    "start": "1186320",
    "end": "1192160"
  },
  {
    "text": "of what's going on with inspector gadget so inspector gadget is a cube ctl plugin so",
    "start": "1192160",
    "end": "1197760"
  },
  {
    "text": "the first thing that happens when you type cube ctl space gadget is that it turns into a",
    "start": "1197760",
    "end": "1203200"
  },
  {
    "text": "cube ctl dash gadget which is the the executable and it only talks to the",
    "start": "1203200",
    "end": "1208480"
  },
  {
    "text": "kubernetes api it doesn't talk to the node where the the pods are running it everything",
    "start": "1208480",
    "end": "1215520"
  },
  {
    "text": "it does it does through the kubernetes api so the first thing we did a little bit earlier was to deploy the",
    "start": "1215520",
    "end": "1222880"
  },
  {
    "text": "gadget part and that was done through the kubernetes api and then we asked that gadget pod to",
    "start": "1222880",
    "end": "1229120"
  },
  {
    "text": "install a vpf program in this case in the network policy advisor case it was",
    "start": "1229120",
    "end": "1234320"
  },
  {
    "text": "the the vpf program to monitor what was going on on the network uh and all of that is done through the",
    "start": "1234320",
    "end": "1241520"
  },
  {
    "text": "kubernetes api inside the node our gadget port is the one that talks to the kernel",
    "start": "1241520",
    "end": "1246960"
  },
  {
    "text": "it creates the vpf program necessary for whatever action we are asking of it",
    "start": "1246960",
    "end": "1252480"
  },
  {
    "text": "and then it feeds this program into the kernel and as we later explain more about",
    "start": "1252480",
    "end": "1259440"
  },
  {
    "text": "what's going on in that stage but this is the basic idea of what's",
    "start": "1259440",
    "end": "1264480"
  },
  {
    "text": "happening of what happened right now when i type network",
    "start": "1264480",
    "end": "1270080"
  },
  {
    "text": "network policy monitor all right and this is the log that we are",
    "start": "1270080",
    "end": "1275919"
  },
  {
    "text": "generating i show a little bit of what the log was looking like when i started generating",
    "start": "1275919",
    "end": "1281600"
  },
  {
    "text": "it and uh it has basically two types of entries accept and connect and these are like",
    "start": "1281600",
    "end": "1288240"
  },
  {
    "text": "the tcp actions of accept and connect and it stores",
    "start": "1288240",
    "end": "1293360"
  },
  {
    "text": "uh the ips that were involved the ports the pods and all this information of course this",
    "start": "1293360",
    "end": "1299360"
  },
  {
    "text": "log is very verbose and it has a lot of information and it wouldn't be nice to",
    "start": "1299360",
    "end": "1305039"
  },
  {
    "text": "parse it uh as a human like it's hard to make sense of all of these information so",
    "start": "1305039",
    "end": "1310640"
  },
  {
    "text": "of course there's a subcommand that helps us make sense of this information so the the report sub command will",
    "start": "1310640",
    "end": "1318799"
  },
  {
    "text": "parse this log and generate a yaml file which is a basic network policy file",
    "start": "1318799",
    "end": "1324320"
  },
  {
    "text": "it it's not the idea that you just use this yaml file and deploy it in your cluster and forget about it",
    "start": "1324320",
    "end": "1330240"
  },
  {
    "text": "you should look at it and think if you want to add things or remove things it's it's just a basis um",
    "start": "1330240",
    "end": "1338559"
  },
  {
    "text": "but it's very helpful to have it to not have to think of all these policies on your own",
    "start": "1338559",
    "end": "1346159"
  },
  {
    "text": "alright so hopefully our pods have deployed by now and we have",
    "start": "1346159",
    "end": "1351280"
  },
  {
    "text": "[Music] we can generate the report",
    "start": "1351280",
    "end": "1356639"
  },
  {
    "text": "let's stop this tale and yeah there's one that crash hoops",
    "start": "1358400",
    "end": "1365200"
  },
  {
    "text": "because uh the recommendation service crash loops because it requires like a",
    "start": "1365200",
    "end": "1370799"
  },
  {
    "text": "service account and we don't have any service accounts but the others are all running so with",
    "start": "1370799",
    "end": "1376799"
  },
  {
    "text": "that we can actually stop the monitor",
    "start": "1376799",
    "end": "1382960"
  },
  {
    "text": "with control z and we can instead call",
    "start": "1383840",
    "end": "1390320"
  },
  {
    "text": "the report and for this we will pass",
    "start": "1390320",
    "end": "1396960"
  },
  {
    "text": "dash input and the file we generated which was networktrace.log",
    "start": "1396960",
    "end": "1402799"
  },
  {
    "text": "and then redirect this to network policy dot yaml",
    "start": "1402799",
    "end": "1410640"
  },
  {
    "text": "so this will generate a yaml file with the network policy",
    "start": "1410640",
    "end": "1415840"
  },
  {
    "text": "let's close the other window and we can now look at the yaml file",
    "start": "1415840",
    "end": "1423760"
  },
  {
    "text": "and this is going to be complex because the service is complex but basically you can see that there's",
    "start": "1423760",
    "end": "1431919"
  },
  {
    "text": "ingress and egress for each of the different services involved and",
    "start": "1431919",
    "end": "1439279"
  },
  {
    "text": "the labels that they match the ports that are used etc so as i said this is basically a",
    "start": "1439279",
    "end": "1446880"
  },
  {
    "text": "basis of what you want to then customize for your actual service",
    "start": "1446880",
    "end": "1454720"
  },
  {
    "text": "all right uh that was it for the network policy and now alban",
    "start": "1454720",
    "end": "1462320"
  },
  {
    "text": "is going to show you a few more interesting gadgets",
    "start": "1462320",
    "end": "1467919"
  },
  {
    "text": "thank you so now i will talk about trace loop which is the next gadget using bpf",
    "start": "1470400",
    "end": "1478480"
  },
  {
    "text": "that i will talk about um so to summarize i have this sentence it's about tracing calls in c groups",
    "start": "1478480",
    "end": "1485520"
  },
  {
    "text": "using bpf on overwatable wing buffer that sounds quite complicated so i will go through",
    "start": "1485520",
    "end": "1491919"
  },
  {
    "text": "that and show what it does so the use case i want to show there is",
    "start": "1491919",
    "end": "1500320"
  },
  {
    "text": "something similar to strays so i really like to use trace as a",
    "start": "1500320",
    "end": "1505440"
  },
  {
    "text": "developer to debug my applications but when i use it on the kubernetes",
    "start": "1505440",
    "end": "1511440"
  },
  {
    "text": "level trace has some problems is um he can be slow uh it means it's not possible to",
    "start": "1511440",
    "end": "1518320"
  },
  {
    "text": "use it for all my parts in production all the time because that will make everything too",
    "start": "1518320",
    "end": "1524000"
  },
  {
    "text": "slow and although sometimes i have the use case where i have some unexpected crashes and then",
    "start": "1524000",
    "end": "1531039"
  },
  {
    "text": "when something has crashed it's too late to use trace because the process is not there anymore the part is not there anymore so there is",
    "start": "1531039",
    "end": "1537120"
  },
  {
    "text": "nothing to use stress on so here the come the idea to use",
    "start": "1537120",
    "end": "1542559"
  },
  {
    "text": "something like a flight recorder so to use bpf to record the system calls used by applications",
    "start": "1542559",
    "end": "1550080"
  },
  {
    "text": "but instead of printing them all the time i just store them in a ring",
    "start": "1550080",
    "end": "1556320"
  },
  {
    "text": "buffer so there will be a buffer for every pod uh that constantly record the events and",
    "start": "1556320",
    "end": "1563440"
  },
  {
    "text": "it uses a writable ring buffer that means that when the buffer is full you just override the older standards",
    "start": "1563440",
    "end": "1569120"
  },
  {
    "text": "and so on in this way we can use that to debug later",
    "start": "1569120",
    "end": "1576320"
  },
  {
    "start": "1575000",
    "end": "1575000"
  },
  {
    "text": "so if i compare stress on trace loop that's quite different stress use the",
    "start": "1576799",
    "end": "1582159"
  },
  {
    "text": "system called ptress to be able to capture the data twice loop use bpf on transparence",
    "start": "1582159",
    "end": "1589120"
  },
  {
    "text": "with stress you can capture the data on one or several specific processes and on",
    "start": "1589120",
    "end": "1596720"
  },
  {
    "text": "treslope it's uh is done to capture events on the at the level of c groups on stress",
    "start": "1596720",
    "end": "1604000"
  },
  {
    "text": "um it can be slow because for every events it need to have some context switch between",
    "start": "1604000",
    "end": "1610640"
  },
  {
    "text": "the tracy and the transfer for every system calls and twist loop doesn't work like that it has",
    "start": "1610640",
    "end": "1615919"
  },
  {
    "text": "a ring buffer that is only written and so they're just copying something in",
    "start": "1615919",
    "end": "1621039"
  },
  {
    "text": "memory without actually having any context switch between processes",
    "start": "1621039",
    "end": "1627120"
  },
  {
    "text": "but stress is uh as a good points too it's it is cycle loose and reliable it cannot",
    "start": "1627120",
    "end": "1632559"
  },
  {
    "text": "lose events so you when you see the logs from stress you necessarily see everything it doesn't forget parameter",
    "start": "1632559",
    "end": "1640960"
  },
  {
    "text": "or something press loop work in a synchronous way and can lose event in some case",
    "start": "1640960",
    "end": "1647039"
  },
  {
    "text": "so but it's good enough to debug most of the case so event 2 is not it doesn't guarantee",
    "start": "1647039",
    "end": "1654480"
  },
  {
    "text": "that you get all the parameters everything",
    "start": "1654480",
    "end": "1659840"
  },
  {
    "text": "so if i go into a bit more detail um twice loop a similar interface to",
    "start": "1659840",
    "end": "1667279"
  },
  {
    "text": "stress it gives information about system calls but it uses ppf program on the",
    "start": "1667279",
    "end": "1672799"
  },
  {
    "text": "transferences enter that means that every time a system call is executed on your system",
    "start": "1672799",
    "end": "1678960"
  },
  {
    "text": "from any process it will execute this transport and execute the bpf program and the first thing this bpf program",
    "start": "1678960",
    "end": "1686000"
  },
  {
    "text": "will do we'll check which container it is about so it can in this example use the groups",
    "start": "1686000",
    "end": "1691600"
  },
  {
    "text": "to look at the secret id to know which container it is or it can either use the name space id",
    "start": "1691600",
    "end": "1699679"
  },
  {
    "text": "and then depending on the container it can redirect the execution to another bpf program one for",
    "start": "1699679",
    "end": "1706559"
  },
  {
    "text": "each different container that has been configured and it will output the data about the",
    "start": "1706559",
    "end": "1714080"
  },
  {
    "text": "system call into a ring buffer for each container and this ring buffer is written on",
    "start": "1714080",
    "end": "1720080"
  },
  {
    "text": "overwritten in loop but it's never read unless the user",
    "start": "1720080",
    "end": "1725279"
  },
  {
    "text": "explicitly asks for it for example if they want to debug",
    "start": "1725279",
    "end": "1730559"
  },
  {
    "text": "the application if it does crash for example and that in this case the data is",
    "start": "1730559",
    "end": "1736240"
  },
  {
    "text": "retrieved by the daemon set where trace loop is running and the user can see it with a custodial gadget",
    "start": "1736240",
    "end": "1742960"
  },
  {
    "text": "so now it's time for another hands-on task i will share my screen",
    "start": "1744240",
    "end": "1750840"
  },
  {
    "text": "again here it is and i will go back to the",
    "start": "1750840",
    "end": "1757600"
  },
  {
    "text": "parent directory with that workshop directory",
    "start": "1757600",
    "end": "1763840"
  },
  {
    "text": "from here there is with me that you can read from github or i will run commands directly",
    "start": "1764480",
    "end": "1771600"
  },
  {
    "text": "there so we have this cube ctl gadget right slope come on",
    "start": "1771600",
    "end": "1780960"
  },
  {
    "text": "what it does is add some sub command on one of the",
    "start": "1780960",
    "end": "1787279"
  },
  {
    "text": "subcommand is to list the trace that is recording so",
    "start": "1787279",
    "end": "1792480"
  },
  {
    "text": "i will capacitor get that transfer list and it it's a bit like a cl you need to",
    "start": "1792480",
    "end": "1799760"
  },
  {
    "text": "specify the chain uh default for by default to use distance space or",
    "start": "1799760",
    "end": "1806720"
  },
  {
    "text": "touch the packets a to see all the name spaces from here i see",
    "start": "1806720",
    "end": "1812000"
  },
  {
    "text": "quite a lot of parts that markers executed in a previous example from the demo namespace",
    "start": "1812000",
    "end": "1820559"
  },
  {
    "text": "let me go to the top and we can see that uh those trace",
    "start": "1820559",
    "end": "1828640"
  },
  {
    "text": "is from a part that has terminated four minutes ago for example for this one but it is a stress loop still have a",
    "start": "1828640",
    "end": "1835600"
  },
  {
    "text": "record from them so it is a ring buffer with the last system calls that can look",
    "start": "1835600",
    "end": "1840640"
  },
  {
    "text": "at them to see what's happening so i will take the trace id here and i will do",
    "start": "1840640",
    "end": "1847919"
  },
  {
    "text": "a cup still gadget twist loop show oops like this",
    "start": "1847919",
    "end": "1855440"
  },
  {
    "text": "ctrl show and here i get the last",
    "start": "1856399",
    "end": "1863600"
  },
  {
    "text": "few system calls that were executed by this part before it has been clicked so i can go a",
    "start": "1863600",
    "end": "1871120"
  },
  {
    "text": "bit higher and you can see a lot of critex commands and some other system",
    "start": "1871120",
    "end": "1878799"
  },
  {
    "text": "calls from the java process okay the second thing",
    "start": "1878799",
    "end": "1887518"
  },
  {
    "text": "i can show here is um i will run",
    "start": "1887840",
    "end": "1893510"
  },
  {
    "text": "[Music] example we have one pod",
    "start": "1893510",
    "end": "1899519"
  },
  {
    "text": "that i will start until it is executing multiplication and then saving the",
    "start": "1899519",
    "end": "1906080"
  },
  {
    "text": "result into this file and then attempting to read this file but because there is a bug in that",
    "start": "1906080",
    "end": "1911679"
  },
  {
    "text": "script uh it might not work as expected so let's see that",
    "start": "1911679",
    "end": "1917120"
  },
  {
    "text": "i'll copy paste this from guitar",
    "start": "1917120",
    "end": "1923679"
  },
  {
    "text": "so here i get error message it cannot read that file so",
    "start": "1925360",
    "end": "1934480"
  },
  {
    "text": "in this case i will use [Music] press loop again to attempt to debug",
    "start": "1934480",
    "end": "1941440"
  },
  {
    "text": "that and to create the result",
    "start": "1941440",
    "end": "1945200"
  },
  {
    "text": "gadget press loop this see that even if my pad has terminated",
    "start": "1946720",
    "end": "1953919"
  },
  {
    "text": "i still have the trace so that's this multiplication part that",
    "start": "1953919",
    "end": "1959760"
  },
  {
    "text": "turned on can even delete it",
    "start": "1959760",
    "end": "1965039"
  },
  {
    "text": "and when it's deleted i still have press not remain here and",
    "start": "1968000",
    "end": "1974799"
  },
  {
    "text": "i can show um this trace",
    "start": "1974799",
    "end": "1982398"
  },
  {
    "text": "um so here it is so maybe i can ask the audience to see something",
    "start": "1986640",
    "end": "1993120"
  },
  {
    "text": "do you see what's happening here",
    "start": "1993120",
    "end": "2005840"
  },
  {
    "text": "okay so we will go through that um here it say it's opening attempting to",
    "start": "2007200",
    "end": "2013120"
  },
  {
    "text": "opening this file but this file doesn't exist and if i look a bit above",
    "start": "2013120",
    "end": "2021840"
  },
  {
    "text": "i should see another [Music]",
    "start": "2021919",
    "end": "2028569"
  },
  {
    "text": "here on this line but this is a different file that's why um when i write with this",
    "start": "2031360",
    "end": "2037039"
  },
  {
    "text": "file i try to read a different file that's why it doesn't work",
    "start": "2037039",
    "end": "2042158"
  },
  {
    "text": "i can we can also see here this read system call on the white system column",
    "start": "2042480",
    "end": "2048480"
  },
  {
    "text": "that's the bc program that receive on a standard input the multiplication to perform and to write the answer so in this case",
    "start": "2048480",
    "end": "2056480"
  },
  {
    "text": "the answer is 42. okay so everything that was here is in",
    "start": "2056480",
    "end": "2063599"
  },
  {
    "text": "this repository so if you did not have time to do everything you can",
    "start": "2063599",
    "end": "2069200"
  },
  {
    "text": "do it yourself later i will stop showing my screen",
    "start": "2069200",
    "end": "2077030"
  },
  {
    "text": "[Music] go to the next slide so here",
    "start": "2077030",
    "end": "2082560"
  },
  {
    "text": "there are the commands that are executed cuba ctl gadget dress up list and then this one i don't show if the",
    "start": "2082560",
    "end": "2089358"
  },
  {
    "text": "pod is still running you can actually although see the last system calls at that time",
    "start": "2089359",
    "end": "2095679"
  },
  {
    "text": "but if the pod has been destroyed then the ap api server doesn't know about it",
    "start": "2095679",
    "end": "2101119"
  },
  {
    "text": "anymore but you have to use this show command to be able to see that",
    "start": "2101119",
    "end": "2108319"
  },
  {
    "text": "okay and there are more gadgets in inspector",
    "start": "2108480",
    "end": "2114400"
  },
  {
    "text": "gadgets and a lot of them are reusing tools that are inside the bcc repository",
    "start": "2114400",
    "end": "2120720"
  },
  {
    "text": "so inspector gadget is kind of relying on the shoulder of bcc to do a lot of things",
    "start": "2120720",
    "end": "2126480"
  },
  {
    "text": "there are a lot of examples here buying snoop for example come from bcc",
    "start": "2126480",
    "end": "2132320"
  },
  {
    "text": "exact snoop as well and so on there are snoop tools that are",
    "start": "2132320",
    "end": "2139119"
  },
  {
    "text": "detecting when there is a new exact system called detecting when there is a new open",
    "start": "2139119",
    "end": "2145520"
  },
  {
    "text": "system called to open a new file and so on um i will show a bit later",
    "start": "2145520",
    "end": "2152000"
  },
  {
    "text": "some example with exact snoop um so on this um bcc tools like exact",
    "start": "2152000",
    "end": "2160720"
  },
  {
    "start": "2154000",
    "end": "2154000"
  },
  {
    "text": "snoop and investment um usually the usual experience we want is to trace parts in general we user",
    "start": "2160720",
    "end": "2168720"
  },
  {
    "text": "don't really care about specific process id when we work at the kubernetes level we don't want to know about the pid or",
    "start": "2168720",
    "end": "2176240"
  },
  {
    "text": "exactly which node it is running on we want to use kubernetes concepts like the pod or",
    "start": "2176240",
    "end": "2183280"
  },
  {
    "text": "kubernetes levels or namespace and so on other when we i could get information from different process from different",
    "start": "2183280",
    "end": "2189440"
  },
  {
    "text": "parts and we want to upgrade them aggregate them using kubernetes levels",
    "start": "2189440",
    "end": "2195359"
  },
  {
    "text": "in summary we want a user experience like cube ctl where developers don't need to",
    "start": "2195359",
    "end": "2201280"
  },
  {
    "text": "use a section or not and they don't need to know about the internal details about pids and so on",
    "start": "2201280",
    "end": "2207920"
  },
  {
    "text": "so to come up with that we have this user experience with for example",
    "start": "2209359",
    "end": "2216320"
  },
  {
    "text": "the exact snoop gadget where we specify which port",
    "start": "2216320",
    "end": "2221440"
  },
  {
    "text": "to trace using one of those",
    "start": "2221440",
    "end": "2226640"
  },
  {
    "text": "filters you can filter by kubernetes levels like this or using namespace or the pod",
    "start": "2226640",
    "end": "2234079"
  },
  {
    "text": "name or the node or if you have um pods with several containers inside one part",
    "start": "2234079",
    "end": "2240640"
  },
  {
    "text": "you can although select which container you want to use all those labels you can use one or",
    "start": "2240640",
    "end": "2247440"
  },
  {
    "text": "several of them you can make combination or just one if you want to",
    "start": "2247440",
    "end": "2252880"
  },
  {
    "text": "we'll go to next slide um so this kind of filtering is really complicated to do because um",
    "start": "2254000",
    "end": "2261520"
  },
  {
    "text": "when you uh use cubesat gadget uh exact snoop for example there might be",
    "start": "2261520",
    "end": "2267119"
  },
  {
    "text": "zero or one or more part to trace and that's how this set of parts to twist uh change with time",
    "start": "2267119",
    "end": "2272880"
  },
  {
    "text": "because part can be created or destroyed over time because it's a dynamic system and so different tracer",
    "start": "2272880",
    "end": "2280240"
  },
  {
    "text": "can have different part to twist and that's charge of your time so let's make it difficult to implement in this example",
    "start": "2280240",
    "end": "2287760"
  },
  {
    "text": "uh it uses oc gadget this can also come from openshift that's the cli tool for",
    "start": "2287760",
    "end": "2294240"
  },
  {
    "text": "openshift so if you use openshift you can also use inspector gadget as a",
    "start": "2294240",
    "end": "2299440"
  },
  {
    "text": "plugin for oc uh if you use scriptctl you can use cubettl gadget as well both works the same way",
    "start": "2299440",
    "end": "2307520"
  },
  {
    "start": "2308000",
    "end": "2308000"
  },
  {
    "text": "so how does it work here it works with a component that runs in a",
    "start": "2308000",
    "end": "2313680"
  },
  {
    "text": "daemon set called the gadget tracer manager and this demand running on all nodes and",
    "start": "2313680",
    "end": "2318800"
  },
  {
    "text": "it has a simple grpc api with four meters",
    "start": "2318800",
    "end": "2324240"
  },
  {
    "text": "so the methods are to inform the gadget faster manager of new containers every time a new",
    "start": "2324240",
    "end": "2329359"
  },
  {
    "text": "container is started it knows about it because our container is called every time there is a new twister",
    "start": "2329359",
    "end": "2335200"
  },
  {
    "text": "um exact snow for example that is started it knows by this little call",
    "start": "2335200",
    "end": "2342720"
  },
  {
    "text": "the the add container remove container methods are called by the",
    "start": "2342720",
    "end": "2348240"
  },
  {
    "text": "ocr hooks so i will explain a bit what is horse here hooks um when you have a kubernetes cluster",
    "start": "2348240",
    "end": "2355280"
  },
  {
    "text": "the parts are started by the curbide through the container runtime on the container on time",
    "start": "2355280",
    "end": "2362880"
  },
  {
    "text": "in the end my for example execute run c and run c and other container runtime of",
    "start": "2362880",
    "end": "2368400"
  },
  {
    "text": "this ocr hooks where you can execute arbitrary scripts or commands",
    "start": "2368400",
    "end": "2374320"
  },
  {
    "text": "every time it starts a new container or every time it stop it through that mechanism we execute a",
    "start": "2374320",
    "end": "2381599"
  },
  {
    "text": "command that will uh call the grpc method to the gadget source manager so that it knows about all the containers",
    "start": "2381599",
    "end": "2387839"
  },
  {
    "text": "on their kubernetes levels on the other side we have",
    "start": "2387839",
    "end": "2394240"
  },
  {
    "text": "a cube ctl gadget when it executes a gadget it will run it on",
    "start": "2394240",
    "end": "2400400"
  },
  {
    "text": "on the gadget pod and it will use this bcc rapper shell script that",
    "start": "2400400",
    "end": "2406880"
  },
  {
    "text": "will tell the catcher tracer manager about the tracer so it knows which kind of uh node or label or",
    "start": "2406880",
    "end": "2413839"
  },
  {
    "text": "it wants to select so the gadget tracer manager knows about the container he do knows",
    "start": "2413839",
    "end": "2419680"
  },
  {
    "text": "about the tracer and can use this information together to know",
    "start": "2419680",
    "end": "2425119"
  },
  {
    "text": "which tracer should trace which pole the next thing it does it will update",
    "start": "2425119",
    "end": "2432160"
  },
  {
    "text": "bpf apps with that information so there is one bpf map for every tracer that will contain the list of parts that",
    "start": "2432160",
    "end": "2439520"
  },
  {
    "text": "need to be traced by this tracer and if that information change it will automatically",
    "start": "2439520",
    "end": "2445280"
  },
  {
    "text": "update the ppf map accordingly on later when this bcc repair script",
    "start": "2445280",
    "end": "2453040"
  },
  {
    "text": "executes for example execs loop from the bcc project it will use a bpf program",
    "start": "2453040",
    "end": "2460319"
  },
  {
    "text": "the in this case installer caprob and it will use the bpf map in order to know whether",
    "start": "2460319",
    "end": "2466720"
  },
  {
    "text": "it should trace this container or not",
    "start": "2466720",
    "end": "2471040"
  },
  {
    "text": "okay so now it's time to",
    "start": "2472000",
    "end": "2477359"
  },
  {
    "text": "share my screen again",
    "start": "2478720",
    "end": "2481838"
  },
  {
    "text": "so i will go to the next directory",
    "start": "2487520",
    "end": "2495839"
  },
  {
    "text": "and as usual there is a real me a file that you can read on github as well and i will show two things here",
    "start": "2496240",
    "end": "2504880"
  },
  {
    "text": "the first thing is i will execute this exact snoop gadget",
    "start": "2504880",
    "end": "2512720"
  },
  {
    "text": "to filter to get the information on one specific",
    "start": "2512720",
    "end": "2518400"
  },
  {
    "text": "pod",
    "start": "2518400",
    "end": "2520640"
  },
  {
    "text": "my screen sorry",
    "start": "2525680",
    "end": "2537838"
  },
  {
    "text": "okay so here i executed exact move for all the pods in the",
    "start": "2542319",
    "end": "2548720"
  },
  {
    "text": "default space with this label but if i look at that",
    "start": "2548720",
    "end": "2554079"
  },
  {
    "text": "there is no currently no parts with that level so it doesn't",
    "start": "2554079",
    "end": "2559359"
  },
  {
    "text": "print anything next thing i will start a new",
    "start": "2559359",
    "end": "2565280"
  },
  {
    "text": "pod with that label and i will use this command curl",
    "start": "2565280",
    "end": "2572800"
  },
  {
    "text": "something by bash which is a maybe a bit of an anti-pattern but useful for this demo",
    "start": "2572800",
    "end": "2580800"
  },
  {
    "text": "so i will run in this part into in the interactive mode and show what it does here",
    "start": "2580800",
    "end": "2588400"
  },
  {
    "text": "so first it has to download the fedora image because i use the fedora docker image here and once it",
    "start": "2588720",
    "end": "2596480"
  },
  {
    "text": "executed it run some script but at the bottom thanks to exact snoop i can see which",
    "start": "2596480",
    "end": "2601920"
  },
  {
    "text": "command it runs so mkd here rpm rm and so on so just finish to",
    "start": "2601920",
    "end": "2607520"
  },
  {
    "text": "execute it but exact smooth captured everything",
    "start": "2607520",
    "end": "2613680"
  },
  {
    "text": "here at the top rpm with this european package",
    "start": "2614079",
    "end": "2621119"
  },
  {
    "text": "and so on i can't stop that and",
    "start": "2621119",
    "end": "2628000"
  },
  {
    "text": "the second um",
    "start": "2628000",
    "end": "2635839"
  },
  {
    "text": "i want to show on this one maybe you can do together at the same time",
    "start": "2639280",
    "end": "2646000"
  },
  {
    "text": "just deploy uh ng-mix application so let me show you what it",
    "start": "2646000",
    "end": "2652560"
  },
  {
    "text": "contains you can edit a configmap with",
    "start": "2652560",
    "end": "2658880"
  },
  {
    "text": "the files for a website in front of my batteries",
    "start": "2658880",
    "end": "2663920"
  },
  {
    "text": "and it contains a coughing map with the configuration for nginx so you see",
    "start": "2663920",
    "end": "2670319"
  },
  {
    "text": "nginx configuration and then a deployment file which um has three replica of nginx",
    "start": "2670319",
    "end": "2678720"
  },
  {
    "text": "and it will use the configuration from um that's specified on the website uh",
    "start": "2678720",
    "end": "2685040"
  },
  {
    "text": "in the coffin gap that is displayed with okay",
    "start": "2685040",
    "end": "2690640"
  },
  {
    "text": "so let's deploy that",
    "start": "2690640",
    "end": "2693760"
  },
  {
    "text": "so it creates the configmaps the deployment on the services so you can access",
    "start": "2696720",
    "end": "2704000"
  },
  {
    "text": "this engine x from outside of the kubernetes cluster through the services in this case we use minicube so i will",
    "start": "2704000",
    "end": "2710880"
  },
  {
    "text": "use this midi cube service command in order to um",
    "start": "2710880",
    "end": "2719838"
  },
  {
    "text": "directory so i use this minicube command in order to proxy the request",
    "start": "2722240",
    "end": "2729839"
  },
  {
    "text": "through this url so if i call this hopefully i get something",
    "start": "2729839",
    "end": "2738078"
  },
  {
    "text": "you can either use firefox or another browser if you want here i get a 404",
    "start": "2738240",
    "end": "2746319"
  },
  {
    "text": "but then i want to either use this yellow.txt file that i put in a",
    "start": "2746319",
    "end": "2753280"
  },
  {
    "text": "coffee mac and hope to get it unfortunately i get the 404 because",
    "start": "2753280",
    "end": "2759839"
  },
  {
    "text": "there is a bug in my deployment general and here i want to use um",
    "start": "2759839",
    "end": "2767119"
  },
  {
    "text": "inspector gadget open smooth in order to debug that and see what's happening so i will give",
    "start": "2767119",
    "end": "2774800"
  },
  {
    "text": "one minute for you to try this",
    "start": "2774800",
    "end": "2789839"
  },
  {
    "text": "it's happening continue that and [Music] i will use",
    "start": "2808160",
    "end": "2817838"
  },
  {
    "text": "i will use um i will show how to use inspector gadget open scope to debug this",
    "start": "2819680",
    "end": "2825920"
  },
  {
    "text": "so ctl get pod here see there are three deployments uh",
    "start": "2825920",
    "end": "2832000"
  },
  {
    "text": "sorry three parts from a deployment it means that every time i do a curl uh command i'm not quite sure which part",
    "start": "2832000",
    "end": "2839020"
  },
  {
    "text": "[Music] it will reach but if i do",
    "start": "2839020",
    "end": "2845440"
  },
  {
    "text": "show labels i see that all of them has this app equal nginx level so i can use this filter",
    "start": "2845440",
    "end": "2854640"
  },
  {
    "text": "in in factor gadget to filter on the parts with that level",
    "start": "2854640",
    "end": "2860800"
  },
  {
    "text": "and snoop i will say only the namespace default",
    "start": "2869280",
    "end": "2878079"
  },
  {
    "text": "and i will select on the label app equal nginx",
    "start": "2878079",
    "end": "2884240"
  },
  {
    "text": "you can ignore the running at the beginning and look at the output let's see what happened when",
    "start": "2885599",
    "end": "2892960"
  },
  {
    "text": "i do curl here i got a 404 and i see that at the same time i see that nginx",
    "start": "2892960",
    "end": "2901280"
  },
  {
    "text": "attempted to open this path slash tc slash nginx html dot txt and it",
    "start": "2901280",
    "end": "2908400"
  },
  {
    "text": "fell it returned the error minus one which means it failed to open this file",
    "start": "2908400",
    "end": "2915760"
  },
  {
    "text": "um so that gives a hint what's happening it attempt to with this file but we can check uh if we",
    "start": "2915760",
    "end": "2924000"
  },
  {
    "text": "when we installed this cropping map nginx data feedback contained this file but",
    "start": "2924000",
    "end": "2931599"
  },
  {
    "text": "maybe we mounted it at the wrong place so that gave her a hint",
    "start": "2931599",
    "end": "2936800"
  },
  {
    "text": "okay this coffee map is not in this volume the henchmix dodge volume",
    "start": "2936800",
    "end": "2943838"
  },
  {
    "text": "let's see it's mounted in slash bar www but engineering's expected to have it in",
    "start": "2944000",
    "end": "2950960"
  },
  {
    "text": "this path so that's a mistake it doesn't match the configuration of",
    "start": "2950960",
    "end": "2957359"
  },
  {
    "text": "nginx and where i mounted the volume",
    "start": "2957359",
    "end": "2962400"
  },
  {
    "text": "so i can use cryptitel edit i ng mixed implement",
    "start": "2962800",
    "end": "2971838"
  },
  {
    "text": "and find this month on three let's add with okay",
    "start": "2974720",
    "end": "2985839"
  },
  {
    "text": "okay so now it should hopefully restart the nginx parts you can get powder",
    "start": "2986400",
    "end": "2995519"
  },
  {
    "text": "see that kubernetes is stopping the whole parts and stamping new one and let's see what happens if i do",
    "start": "2997440",
    "end": "3005520"
  },
  {
    "text": "a call command again this time i get this uh",
    "start": "3005520",
    "end": "3012000"
  },
  {
    "text": "could reply",
    "start": "3012000",
    "end": "3014720"
  },
  {
    "text": "you can see it it's getting i don't get a 404 anymore",
    "start": "3017359",
    "end": "3027119"
  },
  {
    "text": "okay so let me stop the chair and",
    "start": "3027119",
    "end": "3034720"
  },
  {
    "text": "we'll go to the next slide on pass",
    "start": "3034720",
    "end": "3040079"
  },
  {
    "text": "like too manga",
    "start": "3040079",
    "end": "3042880"
  },
  {
    "text": "all right so up until now we've been looking into inspector gadget which was one of the",
    "start": "3046240",
    "end": "3051920"
  },
  {
    "text": "tools that we said we would look into and now we will look into another one which is called cube ctl trace",
    "start": "3051920",
    "end": "3057839"
  },
  {
    "text": "cube ctl trace is a wrapper around bpf trace mbpf trace",
    "start": "3057839",
    "end": "3063280"
  },
  {
    "text": "is a command that lets you create bpf expressions using a domain specific",
    "start": "3063280",
    "end": "3069599"
  },
  {
    "text": "language so that it's easier so that you don't have to write the c program and compile it and install it so all of",
    "start": "3069599",
    "end": "3077040"
  },
  {
    "text": "that is done by the bpf tool and the thing you need to write are the bpf expressions",
    "start": "3077040",
    "end": "3082480"
  },
  {
    "text": "they are a bit complex so i'm going to show a few vpf expressions and it you might get a",
    "start": "3082480",
    "end": "3089280"
  },
  {
    "text": "little bit scared but once you see a few examples it becomes easier to understand what's going on so",
    "start": "3089280",
    "end": "3096240"
  },
  {
    "start": "3095000",
    "end": "3095000"
  },
  {
    "text": "this is what the vpf syntax looks like uh this is just the bpf trace command and",
    "start": "3096240",
    "end": "3102160"
  },
  {
    "text": "we will talk about cube ctl trace after we understand a little bit what vpf trace expressions look like",
    "start": "3102160",
    "end": "3108880"
  },
  {
    "text": "so as this slide is showing vpf expressions are divided into three parts",
    "start": "3108880",
    "end": "3114400"
  },
  {
    "text": "the probe the filter and the action the probe is the thing we want to trace so in this example here we are saying we",
    "start": "3114400",
    "end": "3122000"
  },
  {
    "text": "want to trace the kernel function called do nanoslip so anytime that kernel",
    "start": "3122000",
    "end": "3127760"
  },
  {
    "text": "function is called our tracer will get activated the filter as the name says it basically",
    "start": "3127760",
    "end": "3135359"
  },
  {
    "text": "allows us to filter the tracing events for some",
    "start": "3135359",
    "end": "3140960"
  },
  {
    "text": "criteria in this case the process id needs to be higher than 100 and the action is what we want to do",
    "start": "3140960",
    "end": "3148079"
  },
  {
    "text": "whenever this probe after the filter gets hit so this",
    "start": "3148079",
    "end": "3155280"
  },
  {
    "text": "is the most complex part of the syntax this add sign with square brackets means that",
    "start": "3155280",
    "end": "3161359"
  },
  {
    "text": "it's creating a hashmap and the key in that hashtag hashmap",
    "start": "3161359",
    "end": "3166400"
  },
  {
    "text": "called com is basically the command name that was executed so the command",
    "start": "3166400",
    "end": "3174400"
  },
  {
    "text": "ended up calling this do nanoslip kernel function will be there it could be bash it could",
    "start": "3174400",
    "end": "3180640"
  },
  {
    "text": "be ls i know whatever is calling this kernel function in the end",
    "start": "3180640",
    "end": "3186160"
  },
  {
    "text": "that would be the command and the plus plus is that basically we want to count an increment",
    "start": "3186160",
    "end": "3191599"
  },
  {
    "text": "and so at the end when this is finished running we will have a table with all the commands that",
    "start": "3191599",
    "end": "3198079"
  },
  {
    "text": "were executed and how many times they called do nano slip",
    "start": "3198079",
    "end": "3203200"
  },
  {
    "text": "on the next slide we will see a couple more one liners like this instead of using the kernel function",
    "start": "3203200",
    "end": "3210640"
  },
  {
    "start": "3205000",
    "end": "3205000"
  },
  {
    "text": "that we saw in the previous slide these ones are using trace points trace points are points that",
    "start": "3210640",
    "end": "3217040"
  },
  {
    "text": "kernel maintainers and module writers have identified there are good places for",
    "start": "3217040",
    "end": "3223200"
  },
  {
    "text": "debugging and there's a lot of trace points and you can use",
    "start": "3223200",
    "end": "3228319"
  },
  {
    "text": "bpf tool to inspect what trace points are available in your kernel and the good thing about",
    "start": "3228319",
    "end": "3235119"
  },
  {
    "text": "trace points is that they tend to be more stable there's no guarantee that a kernel",
    "start": "3235119",
    "end": "3241040"
  },
  {
    "text": "function will not change its name or the parameters it takes or the returns values",
    "start": "3241040",
    "end": "3247359"
  },
  {
    "text": "uh but trace points are kind of stable they could still change but less and so when there's a trace point",
    "start": "3247359",
    "end": "3254960"
  },
  {
    "text": "for something that you want to trace it's a good idea to go for that and in this case we are both both",
    "start": "3254960",
    "end": "3260880"
  },
  {
    "text": "examples are showing syscalls so this is the trace bonds for a syscall",
    "start": "3260880",
    "end": "3265920"
  },
  {
    "text": "is starting in the first example we are using a similar hash table",
    "start": "3265920",
    "end": "3271040"
  },
  {
    "text": "that is just counting how many times each command executed at different cisco",
    "start": "3271040",
    "end": "3278720"
  },
  {
    "text": "in the second one it's using a little bit more complex it's counting all of the",
    "start": "3278720",
    "end": "3285119"
  },
  {
    "text": "ciscos that were called regardless of which command called them and then once per second it's printing that",
    "start": "3285119",
    "end": "3292160"
  },
  {
    "text": "number and clearing the the stack so that it in the end like what will happen",
    "start": "3292160",
    "end": "3299680"
  },
  {
    "text": "is that once per second it will print how many syscalls were called that second um",
    "start": "3299680",
    "end": "3306160"
  },
  {
    "text": "and so these are just a couple of examples in the website that is pointed there and it's also in the",
    "start": "3306160",
    "end": "3312000"
  },
  {
    "text": "github repo uh there's a lot more examples there's a huge reference that you can consult",
    "start": "3312000",
    "end": "3318640"
  },
  {
    "text": "and in in our exercises we will see a few more examples uh but of course like this is super",
    "start": "3318640",
    "end": "3325200"
  },
  {
    "text": "flexible and you can do a lot of things uh but you don't need to understand all of it just to start trying",
    "start": "3325200",
    "end": "3330720"
  },
  {
    "text": "some things out so if you get an idea of what's going on then then you can",
    "start": "3330720",
    "end": "3336319"
  },
  {
    "text": "start using it and you can like mix and match things from different examples and so",
    "start": "3336319",
    "end": "3341920"
  },
  {
    "text": "that was ppf trace what about cube ctl trace so cube ctl trace is the way of running",
    "start": "3341920",
    "end": "3348160"
  },
  {
    "text": "ppf trace commands inside kubernetes it doesn't have this handy",
    "start": "3348160",
    "end": "3354960"
  },
  {
    "text": "namespace selection or app label selection you need to tell it",
    "start": "3354960",
    "end": "3361680"
  },
  {
    "text": "either the node or the pod and the pod needs to be like the specific part no it can be just like pods that start",
    "start": "3361680",
    "end": "3369040"
  },
  {
    "text": "with this you have to give it a specific part for it to run and you can give it either",
    "start": "3369040",
    "end": "3374799"
  },
  {
    "text": "either an inline expression or a file so if your ppf script turns out to be",
    "start": "3374799",
    "end": "3380720"
  },
  {
    "text": "very complex you probably don't want to have like a three line wine liner",
    "start": "3380720",
    "end": "3385839"
  },
  {
    "text": "uh then it makes sense to have a file where you can add comments and and make",
    "start": "3385839",
    "end": "3391359"
  },
  {
    "text": "it a little bit more readable okay and now we will actually",
    "start": "3391359",
    "end": "3398640"
  },
  {
    "text": "see this in action as we mentioned earlier it's a good idea to follow along",
    "start": "3398640",
    "end": "3404400"
  },
  {
    "text": "with the the github repo because everything is documented there",
    "start": "3404400",
    "end": "3410079"
  },
  {
    "text": "if if you are not sure what we are executing check out the comments that we",
    "start": "3410079",
    "end": "3416079"
  },
  {
    "text": "documented there all right uh is this still running",
    "start": "3416079",
    "end": "3421359"
  },
  {
    "text": "i think so right",
    "start": "3421359",
    "end": "3424400"
  },
  {
    "text": "yeah so let's stop this nginx deployment",
    "start": "3427599",
    "end": "3434640"
  },
  {
    "text": "yeah and let's now switch to zero four",
    "start": "3435359",
    "end": "3442160"
  },
  {
    "text": "okay um",
    "start": "3443040",
    "end": "3447839"
  },
  {
    "text": "yeah all right the first thing we will do is",
    "start": "3449040",
    "end": "3455359"
  },
  {
    "text": "uh create an alias so the tricky thing about both inspector gadget and cube ctl",
    "start": "3455359",
    "end": "3461760"
  },
  {
    "text": "trays is that they need to have access to the kernel headers and this is why we gave you a mini cube iso that has the",
    "start": "3461760",
    "end": "3468880"
  },
  {
    "text": "headers and and that why we are using this like special things it was trying to like",
    "start": "3468880",
    "end": "3475040"
  },
  {
    "text": "simplify getting the headers because if you don't have the kernel headers then you can trace and so",
    "start": "3475040",
    "end": "3481920"
  },
  {
    "text": "qctl trace doesn't have the compression the decompression mechanism to access",
    "start": "3481920",
    "end": "3488240"
  },
  {
    "text": "the kernel headers in our minicube instance and that's why we need to give it a different",
    "start": "3488240",
    "end": "3493839"
  },
  {
    "text": "container where it will have this xc executable and so i'm going to copy and",
    "start": "3493839",
    "end": "3500400"
  },
  {
    "text": "paste you if you are following along you should copy and paste from the github repo this alias so what i'm doing here is",
    "start": "3500400",
    "end": "3507839"
  },
  {
    "text": "i'm copying the i'm creating an alias that is called qctl",
    "start": "3507839",
    "end": "3513200"
  },
  {
    "text": "trace run that basically calls qctl trace run with this long parameters and then every time i",
    "start": "3513200",
    "end": "3520079"
  },
  {
    "text": "will call qctl trace run it will pass this parameters so that it can access the kernel headers",
    "start": "3520079",
    "end": "3528000"
  },
  {
    "text": "okay so we have the alias and now what we need to do uh is know the node",
    "start": "3528000",
    "end": "3534799"
  },
  {
    "text": "name in our case the node name is minicube but if you are running",
    "start": "3534799",
    "end": "3540880"
  },
  {
    "text": "uh on a different platform if you're running inside a vm uh it might have a different name so we",
    "start": "3540880",
    "end": "3548559"
  },
  {
    "text": "need to know that now name where we want to run the expression and so now i'm going to copy and paste",
    "start": "3548559",
    "end": "3555359"
  },
  {
    "text": "this expression so uh what i'm saying here is i want to run this trace",
    "start": "3555359",
    "end": "3561200"
  },
  {
    "text": "in my note called mini cube and it's going to be a cisco trace and what i'm doing here is",
    "start": "3561200",
    "end": "3567359"
  },
  {
    "text": "a little bit different than the one i showed in the slide what it's doing is it's tracing",
    "start": "3567359",
    "end": "3572720"
  },
  {
    "text": "all the syscalls and then it's creating a hash table with the probe which means the cisco",
    "start": "3572720",
    "end": "3579599"
  },
  {
    "text": "as the entry and then it's counting how many times it's called",
    "start": "3579599",
    "end": "3584640"
  },
  {
    "text": "okay so we are going to create a hash table that has all the ciscos that were called and how",
    "start": "3584640",
    "end": "3589760"
  },
  {
    "text": "many times those ciscos were called",
    "start": "3589760",
    "end": "3593520"
  },
  {
    "text": "oh sorry i forgot to actually install qctl trace so here there's this getcubectltrace",
    "start": "3596559",
    "end": "3605280"
  },
  {
    "text": "script which looks very much like the inspector gadget script that will install the plugin for me of course you",
    "start": "3605280",
    "end": "3612720"
  },
  {
    "text": "can install it uh yourself uh this is just a handy way to save time",
    "start": "3612720",
    "end": "3619280"
  },
  {
    "text": "and it's installing yep now it's done now let's try the other",
    "start": "3619280",
    "end": "3624640"
  },
  {
    "text": "command again okay so it says that it created a trace",
    "start": "3624640",
    "end": "3629920"
  },
  {
    "text": "and we can actually list whichever traces it has right now it",
    "start": "3629920",
    "end": "3635440"
  },
  {
    "text": "will have only one trace uh but as we try things out this list",
    "start": "3635440",
    "end": "3640720"
  },
  {
    "text": "will get longer with all the different traces that qctl trace is collecting",
    "start": "3640720",
    "end": "3646160"
  },
  {
    "text": "and to actually interact with the trace we will attach to it i will copy and paste",
    "start": "3646160",
    "end": "3653599"
  },
  {
    "text": "this one uh i could also copy and paste this one but it's annoying because it's",
    "start": "3653599",
    "end": "3659119"
  },
  {
    "text": "mixed together with the no name so",
    "start": "3659119",
    "end": "3664000"
  },
  {
    "text": "okay i'm attached to the trace and now the kind of trace that i executed only prints something at the",
    "start": "3664559",
    "end": "3671200"
  },
  {
    "text": "end so in order for me to see anything i need to tell it to finish and then it will print something so i",
    "start": "3671200",
    "end": "3678960"
  },
  {
    "text": "will press ctrl z and okay so if this happens it means it",
    "start": "3678960",
    "end": "3686319"
  },
  {
    "text": "didn't work uh if it says signal killed it means that it got killed before it managed to",
    "start": "3686319",
    "end": "3691839"
  },
  {
    "text": "print the table and we need to try again so i'm going to try again",
    "start": "3691839",
    "end": "3697200"
  },
  {
    "text": "so this is the trace i want to run it says it's created and now i want to",
    "start": "3697200",
    "end": "3705440"
  },
  {
    "text": "attach to it",
    "start": "3705440",
    "end": "3712880"
  },
  {
    "text": "and now i'm going to press ctrl c again",
    "start": "3712880",
    "end": "3718160"
  },
  {
    "text": "and this time it printed the table i'm not sure what the other thing is clearly a bug but i'm not sure what the bug is",
    "start": "3718880",
    "end": "3724880"
  },
  {
    "text": "let's not worry about that right now anyway it printed a table we see that there's a",
    "start": "3724880",
    "end": "3730720"
  },
  {
    "text": "bunch of different ciscos that are being called uh we see yeah a lot of differences",
    "start": "3730720",
    "end": "3736799"
  },
  {
    "text": "calls uh i'm interested in the right cisco like what is being written like",
    "start": "3736799",
    "end": "3742480"
  },
  {
    "text": "i stopped everything there's nothing really going on in my cluster so why is anybody writing anything so",
    "start": "3742480",
    "end": "3749920"
  },
  {
    "text": "i want to see what why why there's a right call so for that i will",
    "start": "3749920",
    "end": "3759039"
  },
  {
    "text": "i will edit my previous trace and instead of having a star here",
    "start": "3760240",
    "end": "3766880"
  },
  {
    "text": "i will check the right syscall and instead of counting per probe",
    "start": "3766880",
    "end": "3772799"
  },
  {
    "text": "because this will only be right i will count per command so i will see which commands are writing",
    "start": "3772799",
    "end": "3780640"
  },
  {
    "text": "and to avoid this having to like start the trace and then attach myself",
    "start": "3780640",
    "end": "3786960"
  },
  {
    "text": "i'll use the attach command and this will just let me stay attached",
    "start": "3786960",
    "end": "3792640"
  },
  {
    "text": "when i run it so now the trace is created it attached",
    "start": "3792640",
    "end": "3798559"
  },
  {
    "text": "one probe to the kernel so it's now gathering data of which programs are writing stuff",
    "start": "3798559",
    "end": "3806079"
  },
  {
    "text": "and i will now stop it and it should print a table",
    "start": "3806079",
    "end": "3811280"
  },
  {
    "text": "yeah so we have a table of a bunch of different things that we're printing cubelet",
    "start": "3811280",
    "end": "3817280"
  },
  {
    "text": "writing cubelet is the one that's writing the most hcd is also writing a lot",
    "start": "3817280",
    "end": "3822960"
  },
  {
    "text": "uh and yeah we could inspect why any of those are writing but i mean yeah they are writing stuff uh but let's",
    "start": "3822960",
    "end": "3830000"
  },
  {
    "text": "check for example out of those uh let's check",
    "start": "3830000",
    "end": "3836318"
  },
  {
    "text": "one of them so to check one of them remember i said that there was this filter",
    "start": "3836559",
    "end": "3842400"
  },
  {
    "text": "part like up to now the examples i showed had no filters so now i would add a filter",
    "start": "3842400",
    "end": "3847760"
  },
  {
    "text": "and in the filter i will say i want to check if the command is core dns",
    "start": "3847760",
    "end": "3854240"
  },
  {
    "text": "so if the command is core dns then this will match and now i don't want to count stuff i",
    "start": "3854240",
    "end": "3861200"
  },
  {
    "text": "know that it's writing and then it's it's core dns so what will i count what",
    "start": "3861200",
    "end": "3867280"
  },
  {
    "text": "i wanted to actually see what is it writing so to do that i will do a printf",
    "start": "3867280",
    "end": "3875039"
  },
  {
    "text": "and then to the printf i'm going to pass the arguments of the trace point",
    "start": "3876319",
    "end": "3885200"
  },
  {
    "text": "and from the arguments i'm going to select the buffer",
    "start": "3885200",
    "end": "3891599"
  },
  {
    "text": "so with this what this will do is it will print every time coordinates writes anything",
    "start": "3892480",
    "end": "3899039"
  },
  {
    "text": "it will print what it is that it's running that writing",
    "start": "3899039",
    "end": "3904400"
  },
  {
    "text": "okay and so we see that it's responding to http requests and to most of these",
    "start": "3906799",
    "end": "3912799"
  },
  {
    "text": "requests it responds response 404 not found so there is some service probably a liveness check",
    "start": "3912799",
    "end": "3919200"
  },
  {
    "text": "that is trying to check if it's working and it's responding for a four note file",
    "start": "3919200",
    "end": "3925359"
  },
  {
    "text": "which is kind of interesting but anyway we see that this is what car dns was writing",
    "start": "3925359",
    "end": "3931839"
  },
  {
    "text": "all right so that was like the basic usage of qctl trace",
    "start": "3931839",
    "end": "3937119"
  },
  {
    "text": "we are now moving on to the next example which will use one of the files that we",
    "start": "3937119",
    "end": "3943680"
  },
  {
    "text": "have here the bash redline so in this bash redline file we have a script",
    "start": "3943680",
    "end": "3949760"
  },
  {
    "text": "and as i mentioned because it's longer we have comments and and we can format",
    "start": "3949760",
    "end": "3956240"
  },
  {
    "text": "it so that it's easier to read and so this this is an example that traces",
    "start": "3956240",
    "end": "3963280"
  },
  {
    "text": "bash commands and here what we see is that it has this special variable called container pid",
    "start": "3963280",
    "end": "3971200"
  },
  {
    "text": "that is the is replaced eventually after a few calls it gets",
    "start": "3971200",
    "end": "3977920"
  },
  {
    "text": "replaced by cube ctl trace for the pid of the container that is",
    "start": "3977920",
    "end": "3984000"
  },
  {
    "text": "executing this uh the probe that we want to match",
    "start": "3984000",
    "end": "3989599"
  },
  {
    "text": "why does it need to get replaced because here the trace that we are using the probe is called you read probe it's",
    "start": "3989599",
    "end": "3996319"
  },
  {
    "text": "a user space function and so it needs to access the",
    "start": "3996319",
    "end": "4001359"
  },
  {
    "text": "executable the bash executable that we are going to trace here it needs to actually access the file and",
    "start": "4001359",
    "end": "4007760"
  },
  {
    "text": "to access the file it needs to have the right inode and to be able to find the symbol",
    "start": "4007760",
    "end": "4013760"
  },
  {
    "text": "for the redline function and so that's why we have to put this container bit here and then",
    "start": "4013760",
    "end": "4021200"
  },
  {
    "text": "cube ctl trace will replace it okay let's let's see it in action we are",
    "start": "4021200",
    "end": "4027440"
  },
  {
    "text": "closely running out of time so i need to hurry up a little bit so the first thing",
    "start": "4027440",
    "end": "4033039"
  },
  {
    "text": "i'll do is i'll split the screen",
    "start": "4033039",
    "end": "4038480"
  },
  {
    "text": "and in this side of the screen i'm going to start a test pod that will just have a bash",
    "start": "4038720",
    "end": "4044799"
  },
  {
    "text": "command in it with an ubuntu image",
    "start": "4044799",
    "end": "4049838"
  },
  {
    "text": "yeah okay and it's working i have an ubuntu image and i have a bash command in it and now on the other port and the other",
    "start": "4050160",
    "end": "4057760"
  },
  {
    "text": "part of the screen i'm going to",
    "start": "4057760",
    "end": "4063119"
  },
  {
    "text": "attach to that pod and execute the bash redline so like this so i'm going to do a cube",
    "start": "4063119",
    "end": "4070640"
  },
  {
    "text": "ctl trace run and i'm going to pass the file that i showed and then instead of the node like i",
    "start": "4070640",
    "end": "4077280"
  },
  {
    "text": "showed before i'm going to attach to the pod and keep it running",
    "start": "4077280",
    "end": "4083680"
  },
  {
    "text": "so my trace it's created is waiting for tracing bash command and then on the other side of the screen",
    "start": "4083680",
    "end": "4091520"
  },
  {
    "text": "i will try things whatever i type here will get printed so",
    "start": "4091520",
    "end": "4098719"
  },
  {
    "text": "and even if i type a command that doesn't exist it will get printed because this is basically what we're doing we're",
    "start": "4098719",
    "end": "4105440"
  },
  {
    "text": "tracing what the redline function returns okay you might ask yourself okay",
    "start": "4105440",
    "end": "4112159"
  },
  {
    "text": "this doesn't seem particularly useful why would i want to trace what bash commands are getting executed maybe it's",
    "start": "4112159",
    "end": "4118400"
  },
  {
    "text": "useful for someone trying to hack my system but not for me to debug anything so",
    "start": "4118400",
    "end": "4124318"
  },
  {
    "text": "let's now uh actually debug or well see how we could debug",
    "start": "4124319",
    "end": "4131838"
  },
  {
    "text": "in an actual kubernetes application so for that i will stop this trace",
    "start": "4131839",
    "end": "4141120"
  },
  {
    "text": "and i the one of the other things that we have in this directory",
    "start": "4142000",
    "end": "4147040"
  },
  {
    "text": "is this caterday yaml that has a deployment of a catterday",
    "start": "4147040",
    "end": "4152480"
  },
  {
    "text": "application and i will apply this card to the yaml",
    "start": "4152480",
    "end": "4161838"
  },
  {
    "text": "okay it applied and now uh this is an application that serves a",
    "start": "4162159",
    "end": "4167758"
  },
  {
    "text": "website with uh cats in it and so uh i will toward in order to use it i",
    "start": "4167759",
    "end": "4174719"
  },
  {
    "text": "need to use a mini cube service redirection so i",
    "start": "4174719",
    "end": "4182400"
  }
]