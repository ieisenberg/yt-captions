[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "thank you excited to see the full room so today we're gonna talk about open telemetry and we'll go bu on getting",
    "start": "30",
    "end": "6839"
  },
  {
    "text": "started I'm Sergei from Microsoft I'm Morgan product manager at Google so this is an",
    "start": "6839",
    "end": "15929"
  },
  {
    "text": "advanced session we're not going to do the usual spiel about the power of observability and what tracing is and",
    "start": "15929",
    "end": "21720"
  },
  {
    "text": "all that I think there's probably been other sessions at this conference that cover that we're diving into how to",
    "start": "21720",
    "end": "26939"
  },
  {
    "text": "actually use open symmetry and how to use instrumentation to solve specific scenarios in your application however in",
    "start": "26939",
    "end": "33660"
  },
  {
    "text": "case you're in the wrong room or you just came in here fun open symmetry provides makes robust portable telemetry",
    "start": "33660",
    "end": "41160"
  },
  {
    "text": "a built-in feature of cloud native software well that actually means is that we give you a way to extract",
    "start": "41160",
    "end": "46379"
  },
  {
    "start": "43000",
    "end": "163000"
  },
  {
    "text": "signals and metrics and relevant telemetry information from your application so you can then send them to",
    "start": "46379",
    "end": "52440"
  },
  {
    "text": "a back-end for processing we don't do the backend part we're not Prometheus we're not Yeager we're just the",
    "start": "52440",
    "end": "57510"
  },
  {
    "text": "components that you add to your application to get that Salama tree out open Salama tree has a few core",
    "start": "57510",
    "end": "62579"
  },
  {
    "text": "components probably the most core is the api is themselves we defined interfaces across I think eight or nine different",
    "start": "62579",
    "end": "68580"
  },
  {
    "text": "languages that describe application metrics distributed traces environmental",
    "start": "68580",
    "end": "74400"
  },
  {
    "text": "metadata and so on and so these api's are how you can actually describe those things in order for them to be exported",
    "start": "74400",
    "end": "80369"
  },
  {
    "text": "we next offer integrations integrations are often overlooked but they're in many ways one of the most important",
    "start": "80369",
    "end": "85619"
  },
  {
    "text": "components of Occam's lemon tree these integrations are the reason why when you start using open telemetry and you're using an HTTP library or g RPC or a",
    "start": "85619",
    "end": "92579"
  },
  {
    "text": "storage client that you don't have to go and instrument those huge yourselves you don't have to go and write a create your",
    "start": "92579",
    "end": "97650"
  },
  {
    "text": "own latency metrics for your various endpoints because we offer integrations that do that for you and that's the real",
    "start": "97650",
    "end": "102930"
  },
  {
    "text": "power of the project next we have libraries these are actual implementations opens laboratory allows",
    "start": "102930",
    "end": "108000"
  },
  {
    "text": "you to bring your own implementation if you want but we also have a single set of standard implementations that we expect most people are probably going to",
    "start": "108000",
    "end": "113640"
  },
  {
    "text": "use these libraries take care that take care of things like distributed trace context propagation they take care of",
    "start": "113640",
    "end": "120540"
  },
  {
    "text": "sampling they take care of all the sort of nasty bits that you really don't want to have to implement yourself time and time again finally we have exporters",
    "start": "120540",
    "end": "127950"
  },
  {
    "text": "exporters will send the data that you capture the data that you've defined to your back-end of choice",
    "start": "127950",
    "end": "133580"
  },
  {
    "text": "that might be Prometheus it might be Jaeger might be one of various one of many various commercial offerings and we",
    "start": "133580",
    "end": "140090"
  },
  {
    "text": "have collectors we're not going to dive too much into the collector in this session there was some pretty good",
    "start": "140090",
    "end": "145430"
  },
  {
    "text": "conversations about the collector at the observability talk on Monday the collector is something you can run as a",
    "start": "145430",
    "end": "151160"
  },
  {
    "text": "network service or an agent I can do things from just proxying the telemetry that you're collecting and sending it to",
    "start": "151160",
    "end": "156410"
  },
  {
    "text": "different backends or it can capture system metrics and things like that but we're not going to dive into too much of",
    "start": "156410",
    "end": "162200"
  },
  {
    "text": "data during this talk it's me that's you",
    "start": "162200",
    "end": "167690"
  },
  {
    "start": "163000",
    "end": "500000"
  },
  {
    "text": "that's why I produced as Morgan said open Salima 3 provides a full solution",
    "start": "167690",
    "end": "174470"
  },
  {
    "text": "our full solution for telemetry collection and if you add Jagger or zip",
    "start": "174470",
    "end": "181130"
  },
  {
    "text": "you know parameters you get complete insight into application behaviour through distributed tracing and matrix",
    "start": "181130",
    "end": "186680"
  },
  {
    "text": "if you add some managed solution from one of the commercial vendors be it as",
    "start": "186680",
    "end": "192440"
  },
  {
    "text": "your monitor Google's tech driver I wouldn't mention all other vendors working with us but exhaust and you'll",
    "start": "192440",
    "end": "198890"
  },
  {
    "text": "get full stack full stack miner with turnkey thermalized back-end",
    "start": "198890",
    "end": "205720"
  },
  {
    "text": "this is telemetry flow from through the components of open telemetry API gets",
    "start": "205720",
    "end": "213200"
  },
  {
    "text": "signal from application and then translates the signals into hdk and sdk",
    "start": "213200",
    "end": "219400"
  },
  {
    "text": "3 the signals as a telemetry items it has a symmetry model as its element lis",
    "start": "219400",
    "end": "225590"
  },
  {
    "text": "been pushed through the processor and exporter pipeline through out of application process through collector",
    "start": "225590",
    "end": "232060"
  },
  {
    "text": "then collector I decide like massage the data process it and reach this data and",
    "start": "232060",
    "end": "238820"
  },
  {
    "text": "then send it to one of the bakit of your choice using collectors so open sea",
    "start": "238820",
    "end": "245030"
  },
  {
    "text": "limited is a complete solution you don't need any other components you may find all of them on this diagram but provides",
    "start": "245030",
    "end": "251989"
  },
  {
    "text": "in a full solution we still allow a lot of room for innovation so we say we brought in all those extensibility",
    "start": "251989",
    "end": "258440"
  },
  {
    "text": "points so you can extend every single of these components or completely replace",
    "start": "258440",
    "end": "263780"
  },
  {
    "text": "them when we talk look at a sensibility and with design extensibility we try to strike a balance",
    "start": "263780",
    "end": "271189"
  },
  {
    "text": "between being flexible and being powerful out-of-the-box we trying to if",
    "start": "271189",
    "end": "279469"
  },
  {
    "text": "you look at extensibility points you look at them from right to left",
    "start": "279469",
    "end": "284689"
  },
  {
    "text": "first extensibility point is ability to configure collector to send data to",
    "start": "284689",
    "end": "289909"
  },
  {
    "text": "various backends it's very easy extensibility it's very easy to use and",
    "start": "289909",
    "end": "296000"
  },
  {
    "text": "you can configure that at any moment of your application lifecycle because it's",
    "start": "296000",
    "end": "301580"
  },
  {
    "text": "configured out of process in a collector process second extensibility point is a",
    "start": "301580",
    "end": "307509"
  },
  {
    "text": "ability to configure collector to process your data is the way you need to process it you can aggregate certain",
    "start": "307509",
    "end": "314090"
  },
  {
    "text": "metrics and don't aggregate others you can filters pants you can enrich telemetry visit additional attributes",
    "start": "314090",
    "end": "320900"
  },
  {
    "text": "all those is available through configuration throat extensibility point",
    "start": "320900",
    "end": "326300"
  },
  {
    "text": "is a interesting one sometimes in your environment you cannot install",
    "start": "326300",
    "end": "332120"
  },
  {
    "text": "additional collector additional process a sidecar to run and process your telemetry in this case you need our",
    "start": "332120",
    "end": "339349"
  },
  {
    "text": "expert err from inside the process communicating directly to the backend of",
    "start": "339349",
    "end": "344479"
  },
  {
    "text": "your choice forced extensibility point is the same",
    "start": "344479",
    "end": "349520"
  },
  {
    "text": "sampling and processing and enriching of telemetry that you saw in collector but",
    "start": "349520",
    "end": "356449"
  },
  {
    "text": "this one is happening in process sometimes we need to do it because of performance reasons and sometimes some",
    "start": "356449",
    "end": "363110"
  },
  {
    "text": "attributes that you want to associate user telemetry are simply not available in the collector and finally thieves and",
    "start": "363110",
    "end": "371089"
  },
  {
    "text": "the most extreme extensibility point is the ability to completely replace entire",
    "start": "371089",
    "end": "376909"
  },
  {
    "text": "SDK and whole stack offer telemetry processing to something completely new",
    "start": "376909",
    "end": "382219"
  },
  {
    "text": "like you can rewrite the entire stack and the reason for this extensibility point is that our inspiration is to make",
    "start": "382219",
    "end": "389419"
  },
  {
    "text": "telemetry a built-in feature of every application so you don't want to lock you into solution of Scylla meter",
    "start": "389419",
    "end": "396259"
  },
  {
    "text": "processing or the data model we use you or the allow you to get the signals from your",
    "start": "396259",
    "end": "401980"
  },
  {
    "text": "application and put it into form you are you want some examples of this",
    "start": "401980",
    "end": "407650"
  },
  {
    "text": "extensibility is Salima tree systems that operates on raw events we typically",
    "start": "407650",
    "end": "414070"
  },
  {
    "text": "operate with a span that represent the duration of time but some system only a",
    "start": "414070",
    "end": "419380"
  },
  {
    "text": "present start event of a span and add two vendors fun it what we want to enable this type of extensibility for",
    "start": "419380",
    "end": "425290"
  },
  {
    "text": "those vendors while we enable all those extensibility points we truly believe",
    "start": "425290",
    "end": "431080"
  },
  {
    "text": "that most of you will never need all of them you probably will be fine with like",
    "start": "431080",
    "end": "436750"
  },
  {
    "text": "a few api's and we want to make sure that we have all this API is easy to use easy to configure it easy to understand",
    "start": "436750",
    "end": "445200"
  },
  {
    "text": "typically when you look at open telemetry you can have this like up one",
    "start": "445200",
    "end": "450700"
  },
  {
    "text": "of the most useful API for end-users will be just to configure SDK get the",
    "start": "450700",
    "end": "456880"
  },
  {
    "text": "leg of blocks of monitoring components and put them all together then another",
    "start": "456880",
    "end": "464320"
  },
  {
    "text": "API will be to provide this leg of blocks to build them to instrument your libraries to instrument third-party",
    "start": "464320",
    "end": "470140"
  },
  {
    "text": "libraries finally you can you may want to fine-tune telemetry that you collect",
    "start": "470140",
    "end": "476530"
  },
  {
    "text": "and this is a processing API processing enrichment API and some API is like",
    "start": "476530",
    "end": "482320"
  },
  {
    "text": "expert or API will mostly be used by Salima tree vendors and we not going to",
    "start": "482320",
    "end": "488260"
  },
  {
    "text": "cover it in this talk with this I want to switch to Morgan to make a getting",
    "start": "488260",
    "end": "494410"
  },
  {
    "text": "started demo like how to get started with open telemetry alright so we're",
    "start": "494410",
    "end": "500020"
  },
  {
    "start": "500000",
    "end": "712000"
  },
  {
    "text": "gonna show a very simple example of how to get started and then we're gonna go into the beyond getting started part",
    "start": "500020",
    "end": "505270"
  },
  {
    "text": "that you were promised in the title of this session so for getting started we have a common scenario we have a client",
    "start": "505270",
    "end": "510820"
  },
  {
    "text": "that calls the server we're just gonna do this single to hop scenario there are obviously bigger examples if you have 10",
    "start": "510820",
    "end": "517000"
  },
  {
    "text": "micro services you'll have a client that calls a server which has a client that calls another server and so on we're just doing a simplified version but",
    "start": "517000",
    "end": "523090"
  },
  {
    "text": "we're gonna show context propagation for tracing and how easy it is to get started so like I said client calls the",
    "start": "523090",
    "end": "528700"
  },
  {
    "text": "server server sends a response to the client the those who are less familiar distributed",
    "start": "528700",
    "end": "534070"
  },
  {
    "text": "tracing the client is going to create something called a span that tracks the amount of processing time done on the client and other other metadata the",
    "start": "534070",
    "end": "540130"
  },
  {
    "text": "server will then generate its own span which should be of course shorter than the clients fan and it'll be a child of",
    "start": "540130",
    "end": "545140"
  },
  {
    "text": "it and the context that sort of trace ID would propagate between both is how on the back end in Jaeger we know to stitch",
    "start": "545140",
    "end": "550420"
  },
  {
    "text": "those together let me change inputs and go to the demo what I have here is that big enough for",
    "start": "550420",
    "end": "557800"
  },
  {
    "text": "everyone I hear nothing so I assume it's fine what we have here is a very basic",
    "start": "557800",
    "end": "564220"
  },
  {
    "text": "nodejs application we've a client and a server we're looking at the client code right now it's our hello world example",
    "start": "564220",
    "end": "570670"
  },
  {
    "text": "this is on our open salami tree JavaScript github and it is quite",
    "start": "570670",
    "end": "576370"
  },
  {
    "text": "literally what you expect you have a client here it makes a request to localhost for the hello world endpoint",
    "start": "576370",
    "end": "582120"
  },
  {
    "text": "and just waits for response and on the server side it spins for about two",
    "start": "582120",
    "end": "587260"
  },
  {
    "text": "seconds and then responds to it very very simple the only thing that we've done here the only code that we have",
    "start": "587260",
    "end": "592840"
  },
  {
    "text": "that is specific to open salami tree is that we've imported the core open telemetry Java Script library and then",
    "start": "592840",
    "end": "599530"
  },
  {
    "text": "we've just told it to set up the tracer and exporters for the HTTP client service at no point do we generate a",
    "start": "599530",
    "end": "605170"
  },
  {
    "text": "custom span at no point do we have to handle sampling or context propagation or anything else this is all done",
    "start": "605170",
    "end": "611020"
  },
  {
    "text": "automatically through the integrations that are built into opens lemon tree this is the real power of the project",
    "start": "611020",
    "end": "616320"
  },
  {
    "text": "you don't need to do any of this boilerplate code yourself and so we'll get this running the server code is",
    "start": "616320",
    "end": "622930"
  },
  {
    "text": "remarkably similar so we got the server running got the client running and we'll",
    "start": "622930",
    "end": "632170"
  },
  {
    "text": "go over to Jager which was already running in the background actually has some trace it's already captured and if we hop into one of those traces we'd",
    "start": "632170",
    "end": "637930"
  },
  {
    "text": "already captured refresh it if we want to see a new one there we go yeah make a",
    "start": "637930",
    "end": "643270"
  },
  {
    "text": "deal yeah like this is this is live running I've got two captured in the back in the background just in case things go wrong but this this is the",
    "start": "643270",
    "end": "650470"
  },
  {
    "text": "trace that we literally just sent in and we can see the two spans that we expect we've got a root span here for the",
    "start": "650470",
    "end": "655690"
  },
  {
    "text": "clients that's just tracking the the operations happening of the clients it then sent out a request and we can see",
    "start": "655690",
    "end": "661810"
  },
  {
    "text": "the operations happening on the server as we can see the difference between latency on these is incredibly small they're both running a local host",
    "start": "661810",
    "end": "667600"
  },
  {
    "text": "obviously it's gonna be pretty quick but this simple example is powerful because if we can see how little code to have",
    "start": "667600",
    "end": "674170"
  },
  {
    "text": "few code changes are required to take place ID to import a library and tell it I'm using HTTP go use HTTP vary with",
    "start": "674170",
    "end": "681339"
  },
  {
    "text": "just a couple seconds of work we got this to happen automatically and we've done it also in a way where it's linked",
    "start": "681339",
    "end": "686529"
  },
  {
    "text": "to source control and we can manage it ourselves we can roll it forward roll it back okay so as promised this session is",
    "start": "686529",
    "end": "697660"
  },
  {
    "text": "titled beyond getting started so what we're gonna do for the next next 20 minutes roughly is walk through",
    "start": "697660",
    "end": "702670"
  },
  {
    "text": "different scenarios that you as developers are gonna commonly run into and show you how you handle these with",
    "start": "702670",
    "end": "708279"
  },
  {
    "text": "hope inflamatory and talk about best practices the first of these scenarios is a basically based on what we just did",
    "start": "708279",
    "end": "715570"
  },
  {
    "start": "712000",
    "end": "886000"
  },
  {
    "text": "we've the client the client calls the server but there's a long-running task on the server and the scenario here it's",
    "start": "715570",
    "end": "721690"
  },
  {
    "text": "once again it's just there's a sleep statement for two seconds but you can imagine a workload you know in your",
    "start": "721690",
    "end": "727390"
  },
  {
    "text": "everyday job where you have something you know chand requests and one of the services that that chain passes through",
    "start": "727390",
    "end": "733089"
  },
  {
    "text": "has something that takes some time something that is worth tracking independently and you can create your",
    "start": "733089",
    "end": "738339"
  },
  {
    "text": "own span for it so that every time a trace goes through that service you can you can actually analyze how long that",
    "start": "738339",
    "end": "744250"
  },
  {
    "text": "long-running operation took generally you won't need to do this if you have a chain of a few services they're doing very quick very repeatable tasks there's",
    "start": "744250",
    "end": "751209"
  },
  {
    "text": "no point in adding any custom instrumentation but sometimes there is so I'm gonna cut back to my demo and",
    "start": "751209",
    "end": "761170"
  },
  {
    "text": "we're gonna look at the server code so like I said the server is similar to the client we imported open Salama tree core",
    "start": "761170",
    "end": "767050"
  },
  {
    "text": "we put on the same aged we then imported the HTTP server instrumentation and",
    "start": "767050",
    "end": "772290"
  },
  {
    "text": "because we want to add some custom instrumentation we have to add a little bit of code right open Salama tree can't",
    "start": "772290",
    "end": "777640"
  },
  {
    "text": "magically determine what you think is worth tracking and so as a developer you have to tell it so the first thing we're",
    "start": "777640",
    "end": "782830"
  },
  {
    "text": "gonna do is create a reference to the tracer this is just something this is just an instance of the API that we need",
    "start": "782830",
    "end": "788020"
  },
  {
    "text": "to actually communicate with open Salam a tree we then actually go and create a span so we define a span here we get the",
    "start": "788020",
    "end": "796180"
  },
  {
    "text": "current span that was already captured by the automatic instrumentation and then we're to create another child span on top of",
    "start": "796180",
    "end": "801370"
  },
  {
    "text": "it we also log what we're doing and we just tell it to create the child span now of course a span has a duration",
    "start": "801370",
    "end": "807790"
  },
  {
    "text": "attracts you know the start and end of an event so we also need to close the event close the span so here once we've",
    "start": "807790",
    "end": "814030"
  },
  {
    "text": "finished our little timeout or two second sleep statement we tell it to end the span and then continue what it was",
    "start": "814030",
    "end": "819580"
  },
  {
    "text": "doing and here just in case if there's an error we do the same thing so I'll save this I'll then shut down the client",
    "start": "819580",
    "end": "828030"
  },
  {
    "text": "run it again okay",
    "start": "828030",
    "end": "836760"
  },
  {
    "text": "clients running and we'll go back to our trace list search again and here we are",
    "start": "836760",
    "end": "844150"
  },
  {
    "text": "oh well that's not supposed to look like that so good thing I'd already had a tab open so this is the three spans that we",
    "start": "844150",
    "end": "851830"
  },
  {
    "text": "expect to get that from that operation so we've got the two spans that were automatically captured from our HTTP",
    "start": "851830",
    "end": "856870"
  },
  {
    "text": "requests through our services and we've got an additional one that's tracking the long-running process on this machine with just a few lines of code we've not",
    "start": "856870",
    "end": "864070"
  },
  {
    "text": "only gotten the automatic instrumentation we've not only got tracing in context propagation all that hard stuff done we've added custom",
    "start": "864070",
    "end": "870550"
  },
  {
    "text": "Salama tree to our application that we can then analyze so if there's a slowdown or some sort of performance issue we can use this to find out why",
    "start": "870550",
    "end": "877180"
  },
  {
    "text": "it's slow and with that I think Sergei",
    "start": "877180",
    "end": "884260"
  },
  {
    "text": "you're gonna talk about a few additional scenarios so we just learned how to how",
    "start": "884260",
    "end": "891040"
  },
  {
    "start": "886000",
    "end": "1171000"
  },
  {
    "text": "easy it is to enable open telemetry and how easy to collect spans beat",
    "start": "891040",
    "end": "897220"
  },
  {
    "text": "automatically or manually through code instrumentation so now we will talk about scenarios and there will be a lot",
    "start": "897220",
    "end": "904720"
  },
  {
    "text": "of back-and-forth so I probably will still be standing there and talking about scenario first and then swishing",
    "start": "904720",
    "end": "911320"
  },
  {
    "text": "to code first thing I want to cover is I want to say that not all spans made",
    "start": "911320",
    "end": "916960"
  },
  {
    "text": "equal sometimes you have some health and point and the same point is constantly bombarded with millions of requests and",
    "start": "916960",
    "end": "923440"
  },
  {
    "text": "all of them are 200 ok and they're typically very fast very small and solemnity produced by monitoring this",
    "start": "923440",
    "end": "931000"
  },
  {
    "text": "request is I can hide user problems and also its cost you",
    "start": "931000",
    "end": "936540"
  },
  {
    "text": "money so sometimes you want to filter it out you can feel the telemetry out on",
    "start": "936540",
    "end": "941639"
  },
  {
    "text": "multiple components of open telemetry if you remember the diagram you can do it in collector but in this particular",
    "start": "941639",
    "end": "947730"
  },
  {
    "text": "example I will show you how to implement custom sampler to filter it out and very early stage before sample spam is all is",
    "start": "947730",
    "end": "956310"
  },
  {
    "text": "even created and other things that I",
    "start": "956310",
    "end": "962310"
  },
  {
    "text": "want to say there'll be switch of environments we start with no GS and",
    "start": "962310",
    "end": "967709"
  },
  {
    "text": "it's not like I don't like not yes I just have a point to make and I make it in like five minutes I think so wait for",
    "start": "967709",
    "end": "974819"
  },
  {
    "text": "it and I session to.net well circus",
    "start": "974819",
    "end": "982829"
  },
  {
    "text": "ended up open salami tree already has great support for tracing on node Python",
    "start": "982829",
    "end": "988860"
  },
  {
    "text": "Java go and net and we've got other languages that are in the pipe following that very shortly so it's easy to enable",
    "start": "988860",
    "end": "997589"
  },
  {
    "text": "open telemetry for.net as for any other languages you import a bunch of packages",
    "start": "997589",
    "end": "1003410"
  },
  {
    "text": "and then as is few statements so in this particular example I want to monitor incoming requests and I want to send",
    "start": "1003410",
    "end": "1010880"
  },
  {
    "text": "them to Zipkin and I can figure Zipkin endpoint that's it you have telemetry so now like I want to compile this",
    "start": "1010880",
    "end": "1017839"
  },
  {
    "text": "application run it really quick and I will hit a house endpoint the first",
    "start": "1017839",
    "end": "1024370"
  },
  {
    "text": "default in pointer weather forecast will be opened and then I hit house",
    "start": "1024370",
    "end": "1031030"
  },
  {
    "text": "and now I want to prove to you that telemetry was actually connected so I go",
    "start": "1034570",
    "end": "1040660"
  },
  {
    "text": "to Zipkin you remember i reconfigured Zipkin and it will show me in a second",
    "start": "1040660",
    "end": "1047020"
  },
  {
    "text": "two spans one for weather forecast another for house I can prove you that it's house so you see so now I switch",
    "start": "1047020",
    "end": "1054970"
  },
  {
    "text": "back to my application I want to configure sampling to filter those out let's close it and it's very easy to",
    "start": "1054970",
    "end": "1063430"
  },
  {
    "text": "enable sampling I will use custom sampler because open selamat result doesn't know which endpoints are",
    "start": "1063430",
    "end": "1068980"
  },
  {
    "text": "synthetic as health endpoints my custom sampler will answer the question should i sample method name is very descriptive",
    "start": "1068980",
    "end": "1077110"
  },
  {
    "text": "and based on name will span I either her return decision false",
    "start": "1077110",
    "end": "1084100"
  },
  {
    "text": "please don't sample or I pass the decision to another sampler that will be make more advanced decisions so looking",
    "start": "1084100",
    "end": "1093250"
  },
  {
    "text": "at this code you basically you basically filtering out all the health data and",
    "start": "1093250",
    "end": "1101020"
  },
  {
    "text": "that you don't care about it so switching back here I just need to enable the sampler for my application",
    "start": "1101020",
    "end": "1107290"
  },
  {
    "text": "and when I run again so now whether an",
    "start": "1107290",
    "end": "1113530"
  },
  {
    "text": "endpoint will open first as as he the house endpoint and in zip can be also",
    "start": "1113530",
    "end": "1118600"
  },
  {
    "text": "will only see resident point this is a",
    "start": "1118600",
    "end": "1127060"
  },
  {
    "text": "scenario I know that we see a lot certainly even if applications I've written on my own is just not wanting to",
    "start": "1127060",
    "end": "1132190"
  },
  {
    "text": "sample helps the health checks because it pollutes the the tracing data that you've captured so 200 okay empty page",
    "start": "1132190",
    "end": "1138760"
  },
  {
    "text": "and switch into Zipkin",
    "start": "1138760",
    "end": "1142740"
  },
  {
    "text": "Wi-Fi is not great here yes the world",
    "start": "1147690",
    "end": "1155730"
  },
  {
    "text": "okay so you only see one end point and it's wet weather forecast end point okay",
    "start": "1156770",
    "end": "1163580"
  },
  {
    "text": "now switch back to the slides so this was first exam for scenario we filtered",
    "start": "1163580",
    "end": "1171980"
  },
  {
    "start": "1171000",
    "end": "1303000"
  },
  {
    "text": "out certain spans now I want to talk about how to make Spence more useful so",
    "start": "1171980",
    "end": "1177620"
  },
  {
    "text": "we increase ROI return on investments of collections as pawns and pain for storing them in a in our cemetery system",
    "start": "1177620",
    "end": "1185350"
  },
  {
    "text": "very often you want to attribute your spans with additional attributes so you",
    "start": "1185350",
    "end": "1191030"
  },
  {
    "text": "may want to have some business details associated is in common request or you might do a tip with a session that user",
    "start": "1191030",
    "end": "1197179"
  },
  {
    "text": "our brows face it's very easy to do in open telemetry and many examples of",
    "start": "1197179",
    "end": "1203330"
  },
  {
    "text": "manual instrumentation are quite straightforward you have a start span you have n span and you have spent",
    "start": "1203330",
    "end": "1209600"
  },
  {
    "text": "object to add attributes for in this sample I want to add attribute to automatically collected span so you",
    "start": "1209600",
    "end": "1216440"
  },
  {
    "text": "don't worry about enabling data collection you pretty sure that spans will be collected you just want to add",
    "start": "1216440",
    "end": "1222830"
  },
  {
    "text": "more information on the span it's coming back to the application here I will",
    "start": "1222830",
    "end": "1232000"
  },
  {
    "text": "switch to controller what I want to say here is there is multiple ways to add",
    "start": "1232000",
    "end": "1240170"
  },
  {
    "text": "attributes to the application this see this one is extremely easy and extremely",
    "start": "1240170",
    "end": "1245480"
  },
  {
    "text": "straightforward so you don't you probably will figure it out on your all very quickly just looking at our documentation so I get a tracer out of",
    "start": "1245480",
    "end": "1252620"
  },
  {
    "text": "dependency injection here and I access current span current span was already created by open selim III automatic data",
    "start": "1252620",
    "end": "1260510"
  },
  {
    "text": "collection so I just take it and put an attribute for it so let's run it and in",
    "start": "1260510",
    "end": "1266179"
  },
  {
    "text": "Zipkin we will open the span and it will sees a new attribute associated with the",
    "start": "1266179",
    "end": "1271400"
  },
  {
    "text": "span almost there okay",
    "start": "1271400",
    "end": "1280950"
  },
  {
    "text": "go back and yes this is a news pan wasn't a minute ago and for sure it has",
    "start": "1280950",
    "end": "1288550"
  },
  {
    "text": "a new attribute you see you can increase the value of spans automatically",
    "start": "1288550",
    "end": "1294550"
  },
  {
    "text": "connected by open cinema tree by simply pushing new attributes on it but not all",
    "start": "1294550",
    "end": "1301660"
  },
  {
    "text": "attributes are made equal some attributes are very special some",
    "start": "1301660",
    "end": "1307240"
  },
  {
    "start": "1303000",
    "end": "1462000"
  },
  {
    "text": "attributes described in your application or the process this the application running into so you can have these",
    "start": "1307240",
    "end": "1314680"
  },
  {
    "text": "attributes are very special not because they're global for the process but because you want to associate these",
    "start": "1314680",
    "end": "1319840"
  },
  {
    "text": "attributes with all the telemetry having a system with all the metrics is all the logs is all the spans so you don't want",
    "start": "1319840",
    "end": "1326320"
  },
  {
    "text": "to write a line of cosine current span attribute current metric attribute you",
    "start": "1326320",
    "end": "1331570"
  },
  {
    "text": "just want to set it globally for every selamat resource to consume and it's",
    "start": "1331570",
    "end": "1336610"
  },
  {
    "text": "very easy to do in our example so let's go back into court this is wrong screen",
    "start": "1336610",
    "end": "1343620"
  },
  {
    "text": "let's go back to code and we're here i",
    "start": "1343620",
    "end": "1349930"
  },
  {
    "text": "go back to a startup file because this is global attributes and i said it once",
    "start": "1349930",
    "end": "1355240"
  },
  {
    "text": "for the process i'll uncommon couple of lines here this is like setattribute",
    "start": "1355240",
    "end": "1360490"
  },
  {
    "text": "method you see i can i created new",
    "start": "1360490",
    "end": "1365620"
  },
  {
    "text": "resource and I associated a few properties visit some progress is I just",
    "start": "1365620",
    "end": "1370870"
  },
  {
    "text": "custom like I just came up with it like we don't know about deployment tenant ID just like random name some properties",
    "start": "1370870",
    "end": "1377560"
  },
  {
    "text": "are very special we have a semantics for that and we have specification explaining the semantics so what I'm",
    "start": "1377560",
    "end": "1382810"
  },
  {
    "text": "gonna do I wanna since I edit this special property here I just gonna comment out this property here because",
    "start": "1382810",
    "end": "1389170"
  },
  {
    "text": "every expert knows the semantics and it knows that service name needs to be",
    "start": "1389170",
    "end": "1394360"
  },
  {
    "text": "taken from resource API when I ran this example resident point will open and",
    "start": "1394360",
    "end": "1401230"
  },
  {
    "text": "what you will see that spans will still be delivered to zip into the same application name back end up even though",
    "start": "1401230",
    "end": "1408250"
  },
  {
    "text": "I commended it out and then they will have additional attribute st. deployment tenant IG go back here we",
    "start": "1408250",
    "end": "1422280"
  },
  {
    "text": "go it's already here you see the same application name and there is a",
    "start": "1422280",
    "end": "1428070"
  },
  {
    "text": "deployment tenant ID here know that some system will have a special meaning for",
    "start": "1428070",
    "end": "1434190"
  },
  {
    "text": "those properties because they global some don't like Zipkin doesn't have special meaning for that so we just put",
    "start": "1434190",
    "end": "1439800"
  },
  {
    "text": "it into a set of default name value pairs and finally not finding it anymore",
    "start": "1439800",
    "end": "1452059"
  },
  {
    "text": "so resource attributes are very special attributes because it spawn entire",
    "start": "1453920",
    "end": "1459350"
  },
  {
    "text": "process but there is another dimension that the attributes can spawn into and this dimension is request dimension so",
    "start": "1459350",
    "end": "1466710"
  },
  {
    "start": "1462000",
    "end": "1942000"
  },
  {
    "text": "entire request may have the same set of attributes associated visit and flight",
    "start": "1466710",
    "end": "1472440"
  },
  {
    "text": "ID for future flight is a good example of it so imagine you have a bit ation",
    "start": "1472440",
    "end": "1478080"
  },
  {
    "text": "can you have certain feature you want to test the way to test the feature is not",
    "start": "1478080",
    "end": "1483900"
  },
  {
    "text": "only click it through but also look at telemetry produced by flight so those",
    "start": "1483900",
    "end": "1489090"
  },
  {
    "text": "attributes not only spawn across all cinema 3 items as a dimension for metric and as a span attributes but also they",
    "start": "1489090",
    "end": "1497120"
  },
  {
    "text": "they typically involve some additional sampling projects that needs to be taken",
    "start": "1497120",
    "end": "1503510"
  },
  {
    "text": "flight IDs into account you don't want to lose a telemetry from a single flight",
    "start": "1503510",
    "end": "1508740"
  },
  {
    "text": "when flight is only 1% of like a set up for only 1% of exposure so to set cast",
    "start": "1508740",
    "end": "1515850"
  },
  {
    "text": "to set this khatai of attributes we have a different API called distributed context and it's copying API so you",
    "start": "1515850",
    "end": "1522750"
  },
  {
    "text": "start you set a scope of of this attribute and you end the scope of this attribute and all the telemetry inside",
    "start": "1522750",
    "end": "1528780"
  },
  {
    "text": "of the scope should be attributed with this ID I'll show it really quick this",
    "start": "1528780",
    "end": "1538020"
  },
  {
    "text": "example and so here you have distributed",
    "start": "1538020",
    "end": "1544860"
  },
  {
    "text": "context and using statement in c-sharp define scoping and scope is here and you",
    "start": "1544860",
    "end": "1552570"
  },
  {
    "text": "have a flight ID and I said the flight random source I I take a weather forecast from random source",
    "start": "1552570",
    "end": "1559010"
  },
  {
    "text": "multi limited inside here will be attribute with the distributed tracing I won't go into details because I want to",
    "start": "1559010",
    "end": "1565050"
  },
  {
    "text": "show something even cooler so now get ready for this and this has promised",
    "start": "1565050",
    "end": "1571640"
  },
  {
    "text": "explanation why we need a dotnet for flight idea it's not only need to be",
    "start": "1571640",
    "end": "1579000"
  },
  {
    "text": "associated with old Salima tree inside a single component you may also want to associate flight ID with every component",
    "start": "1579000",
    "end": "1585780"
  },
  {
    "text": "in distributed application so you want to know how many database cause failed for specific flight or if some user",
    "start": "1585780",
    "end": "1595110"
  },
  {
    "text": "experience a problem which flight ìjesus user was using so you want to propagate",
    "start": "1595110",
    "end": "1600210"
  },
  {
    "text": "flight idea through the components and you want to do it as a thematic as possible and you want to associate all",
    "start": "1600210",
    "end": "1606780"
  },
  {
    "text": "telemetry business so once we didn't dotnet and ice P dot net is first step",
    "start": "1606780",
    "end": "1613500"
  },
  {
    "text": "towards the global mission of open telemetry to make Salim Utley built-in in all software so we took the context",
    "start": "1613500",
    "end": "1622770"
  },
  {
    "text": "propagation the first step and plug it inside the SP dotnet itself let me show",
    "start": "1622770",
    "end": "1628200"
  },
  {
    "text": "you",
    "start": "1628200",
    "end": "1630260"
  },
  {
    "text": "okay for this example we will need more application because we want to propagate contacts through the distributed",
    "start": "1636410",
    "end": "1642510"
  },
  {
    "text": "application so we need more components first component will be windows form",
    "start": "1642510",
    "end": "1647880"
  },
  {
    "text": "application long-forgotten windows forms i have two buttons red button",
    "start": "1647880",
    "end": "1654420"
  },
  {
    "text": "green button red button will set and you by the way notice that this application",
    "start": "1654420",
    "end": "1660150"
  },
  {
    "text": "doesn't have any open telemetry references it's pure it's like it's just",
    "start": "1660150",
    "end": "1665340"
  },
  {
    "text": "framework so there is API that is not open till m3p I don't get confused it's",
    "start": "1665340",
    "end": "1670470"
  },
  {
    "text": "not like opens elementary terms or whatever it's dotnet terms but we using",
    "start": "1670470",
    "end": "1675630"
  },
  {
    "text": "those API sand we are using open slam three applies and merging them together the sir it's a long crowd so we are with",
    "start": "1675630",
    "end": "1683160"
  },
  {
    "text": "this API we can say that this operation gating weather forecast is happening",
    "start": "1683160",
    "end": "1688290"
  },
  {
    "text": "with this flight idea what I did build threat and this weather high forecast happen is fight as it being green so",
    "start": "1688290",
    "end": "1695130"
  },
  {
    "text": "let's start this application but it's not all like I want to make it even more complicated so let's get a third",
    "start": "1695130",
    "end": "1702870"
  },
  {
    "text": "application in the mix this is ice p.net application out-of-the-box is literally",
    "start": "1702870",
    "end": "1708840"
  },
  {
    "text": "I created the new template and replace the controller so I added working as",
    "start": "1708840",
    "end": "1714240"
  },
  {
    "text": "well you see there is no dependency on any external frameworks and no it's out",
    "start": "1714240",
    "end": "1719580"
  },
  {
    "text": "of the box I speed another application and all I spin net 3.0 applications go have this feature out of the box so this",
    "start": "1719580",
    "end": "1726540"
  },
  {
    "text": "weather forecast controller just proxy all the calls to my back-end",
    "start": "1726540",
    "end": "1731760"
  },
  {
    "text": "applications that I showed we're in a very beginning so let's start this application and last thing I want to do",
    "start": "1731760",
    "end": "1740610"
  },
  {
    "text": "is since context propagate context may contain a lot of properties opens in",
    "start": "1740610",
    "end": "1746520"
  },
  {
    "text": "limited doesn't know which properties to use for as a dimensions for metrics and as a span attributes so I want to go",
    "start": "1746520",
    "end": "1753270"
  },
  {
    "text": "here in a back-end application and I want to tell my application to take",
    "start": "1753270",
    "end": "1759420"
  },
  {
    "text": "flight ID as a attribute for my spans so trust me it taken like set attribute on",
    "start": "1759420",
    "end": "1765930"
  },
  {
    "text": "a span so now I want to start back an application finally I have all three",
    "start": "1765930",
    "end": "1771049"
  },
  {
    "text": "crying and I'll go and click red button",
    "start": "1771049",
    "end": "1776299"
  },
  {
    "text": "and green bud like button green God so red button first within about a second",
    "start": "1776299",
    "end": "1785860"
  },
  {
    "text": "hopefully it worked let's check and yeah I want to check it",
    "start": "1785860",
    "end": "1794179"
  },
  {
    "text": "differently so what happened this windows forms application uniform",
    "start": "1794179",
    "end": "1801980"
  },
  {
    "text": "application send a request the first component which didn't have any open cinema tree enabled they just propagate countries this fronted application",
    "start": "1801980",
    "end": "1809240"
  },
  {
    "text": "proxied call to the second application which had open ceilometer so it collects data and it takes a context out of",
    "start": "1809240",
    "end": "1815260"
  },
  {
    "text": "application it what's more interesting is every application on a way also have",
    "start": "1815260",
    "end": "1821480"
  },
  {
    "text": "login and the slogan is also built-in feature of asp.net and it also traces a transaction of this operation so lets me",
    "start": "1821480",
    "end": "1829250"
  },
  {
    "text": "let me go to one of the applications and grab some box so in this logs i have trace ID and like",
    "start": "1829250",
    "end": "1835309"
  },
  {
    "text": "I'll take this trace ID and I'll go to",
    "start": "1835309",
    "end": "1841370"
  },
  {
    "text": "Zipkin and search for the strategy",
    "start": "1841370",
    "end": "1845080"
  },
  {
    "text": "it worked what is it read it didn't work",
    "start": "1850220",
    "end": "1861530"
  },
  {
    "text": "I know why because I picked let me",
    "start": "1861530",
    "end": "1869020"
  },
  {
    "text": "double-check okay okay in the interest of time I promise you it worked I mean",
    "start": "1869020",
    "end": "1875770"
  },
  {
    "text": "so all the context flight ID you said in the first application through dotnet ap",
    "start": "1876429",
    "end": "1883250"
  },
  {
    "text": "is automatically converted translated into properties of Spencer Matthews last",
    "start": "1883250",
    "end": "1888650"
  },
  {
    "text": "application and we will do more of that for other languages as well so some like",
    "start": "1888650",
    "end": "1897830"
  },
  {
    "text": "I showed you propagation for HTTP it's automatic sometimes you need to have propagation",
    "start": "1897830",
    "end": "1904100"
  },
  {
    "text": "for other protocols and it's not automatic so we need to have api's to enable this propagation especially it's",
    "start": "1904100",
    "end": "1910280"
  },
  {
    "text": "important for queue patterns when you take when when there is not a direct RPC",
    "start": "1910280",
    "end": "1915409"
  },
  {
    "text": "our correlation when you need to put messages in to put context into your",
    "start": "1915409",
    "end": "1920450"
  },
  {
    "text": "messages and propagate the message as a whole so context will be propagated as a",
    "start": "1920450",
    "end": "1925880"
  },
  {
    "text": "payload of as a message so for this kind of scenario you need to have custom logic I have a gemma but I think in",
    "start": "1925880",
    "end": "1932900"
  },
  {
    "text": "incidence of time Alice used to Morgan because in reality we hope you will",
    "start": "1932900",
    "end": "1938390"
  },
  {
    "text": "never need this API and Morgan will tell you why thanks",
    "start": "1938390",
    "end": "1944919"
  },
  {
    "start": "1942000",
    "end": "2230000"
  },
  {
    "text": "it's very important for us to feedback and if you want to get involved",
    "start": "2198520",
    "end": "2204619"
  },
  {
    "text": "there is a session tomorrow that you can attend it's a maintainer struck we'll talk a little bit about the same but mostly",
    "start": "2204619",
    "end": "2210859"
  },
  {
    "text": "about how to get engaged into the project how to participate and what the",
    "start": "2210859",
    "end": "2217039"
  },
  {
    "text": "benefits you get from this project is that I want to thank all you for coming yeah thank you if you have any questions",
    "start": "2217039",
    "end": "2224190"
  },
  {
    "text": "[Applause]",
    "start": "2224190",
    "end": "2232359"
  }
]