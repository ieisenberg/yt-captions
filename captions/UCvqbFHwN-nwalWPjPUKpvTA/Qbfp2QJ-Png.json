[
  {
    "text": "good afternoon we have here Jin Xiu and monopod farm and they will be talking to",
    "start": "30",
    "end": "7980"
  },
  {
    "text": "us about kubernetes storage cheat sheet for vm administrators and they are both from Google and I made a sensation from",
    "start": "7980",
    "end": "14160"
  },
  {
    "text": "VMs to Potts so pretty cool stuff perfect",
    "start": "14160",
    "end": "20230"
  },
  {
    "text": "[Applause] Thank You German for the introduction",
    "start": "20230",
    "end": "25699"
  },
  {
    "text": "again appreciate everybody being here part of the talk was more about like I",
    "start": "25699",
    "end": "30869"
  },
  {
    "text": "spent quite a few years just 20 working on physical machines we am sand about in",
    "start": "30869",
    "end": "36600"
  },
  {
    "text": "a year and a half ago or so I landed up in container lab and I was looking to say okay if somebody has to start today",
    "start": "36600",
    "end": "43020"
  },
  {
    "text": "and coming from that how can we draw parallels on how at an architecture",
    "start": "43020",
    "end": "48090"
  },
  {
    "text": "level how things work in a vm how can I look at that in a container world how",
    "start": "48090",
    "end": "54510"
  },
  {
    "text": "can I look at an operational level allocation of volumes setting up corners what does it mean in if I'm used to",
    "start": "54510",
    "end": "60420"
  },
  {
    "text": "those things on a VM world how does can I translate them in a container lab so the talks more about",
    "start": "60420",
    "end": "66810"
  },
  {
    "text": "that we'll definitely have time towards the end for questions so definitely feel free let's start with a quick sorry it's",
    "start": "66810",
    "end": "79770"
  },
  {
    "text": "learning the clicker it's a quick sort of introduction of a new bathroom plot measure for anther storage and hybrid at",
    "start": "79770",
    "end": "86930"
  },
  {
    "text": "Google jingler tell more about yourself sure my name is sting M cuoco software",
    "start": "86930",
    "end": "92579"
  },
  {
    "text": "engineer I work for Gannett his storage lifecycle team perfect so moving on to",
    "start": "92579",
    "end": "100700"
  },
  {
    "text": "the agenda what we really want to spend time on is a little bit talking about",
    "start": "100700",
    "end": "106409"
  },
  {
    "text": "why do containers need storage containers supposed to just come up and go away and come back again anyway you",
    "start": "106409",
    "end": "112259"
  },
  {
    "text": "need them then we're gonna dive into a little bit more around what does it mean do you",
    "start": "112259",
    "end": "118350"
  },
  {
    "text": "look at container storage at an architecture level and draw parallels from a VM standpoint moving on I'll be",
    "start": "118350",
    "end": "125280"
  },
  {
    "text": "talking more about we're at an operational level talking about day two and day three how do we draw parallels",
    "start": "125280",
    "end": "131640"
  },
  {
    "text": "at an operation level then what we really want you to walk out is a small cheat sheet when you",
    "start": "131640",
    "end": "138239"
  },
  {
    "text": "talk to storage to container folks and they start using terminology you can always look it up and say I know exactly",
    "start": "138239",
    "end": "143970"
  },
  {
    "text": "what you mean so that's the goal that we can let you walk out with a quick small cheat sheet not 40k just quick sheet so let's get",
    "start": "143970",
    "end": "152129"
  },
  {
    "text": "started so container storage why I mean I talked about autumn containers",
    "start": "152129",
    "end": "158700"
  },
  {
    "text": "epithermal just there's no supposed to be stayed now when we talk about containers there they still need storage",
    "start": "158700",
    "end": "166049"
  },
  {
    "text": "depending on what type of workloads are configured how things are what workloads and applications they're running on at a",
    "start": "166049",
    "end": "173220"
  },
  {
    "text": "minimum you need storage to have control kubernetes control planes so HDD has to",
    "start": "173220",
    "end": "180090"
  },
  {
    "text": "have so you have some base images when you boot up you need storage for that so",
    "start": "180090",
    "end": "185760"
  },
  {
    "text": "that's at a minimum please that's what you need from a story standpoint moving on if you're running straight less",
    "start": "185760",
    "end": "191760"
  },
  {
    "text": "applications you don't need persistent storage but you may need storage for stateless",
    "start": "191760",
    "end": "197160"
  },
  {
    "text": "applications to runs scratch space you may need to store some logs temporary",
    "start": "197160",
    "end": "202410"
  },
  {
    "text": "data while the processing is happening in the containers so that's the second area where depending on the application",
    "start": "202410",
    "end": "209910"
  },
  {
    "text": "if they're stateless that's one place might need storage for containers moving on as we get into more stateful",
    "start": "209910",
    "end": "216540"
  },
  {
    "text": "applications you wanna run a MongoDB Cassandra or my sequel in containers you",
    "start": "216540",
    "end": "222810"
  },
  {
    "text": "may actually need storage which lives beyond the life of containers so this is",
    "start": "222810",
    "end": "228060"
  },
  {
    "text": "where we talk about stateful applications and persistent storage so these are the three scenarios like",
    "start": "228060",
    "end": "235139"
  },
  {
    "text": "number one you absolutely need it number two and three depends on the what the workloads what kind of applications",
    "start": "235139",
    "end": "241319"
  },
  {
    "text": "you're running on just do a manual",
    "start": "241319",
    "end": "247620"
  },
  {
    "text": "looking so talking about before we start deep diving into it",
    "start": "247620",
    "end": "254400"
  },
  {
    "text": "we're responsive time on how the progression of containers is happening",
    "start": "254400",
    "end": "259979"
  },
  {
    "text": "and what are becoming the acceptable norms around your deployments so talking about some",
    "start": "259979",
    "end": "266840"
  },
  {
    "text": "storage attached patterns traditionally if I must admin and order deploys some",
    "start": "266840",
    "end": "273560"
  },
  {
    "text": "workloads kubernetes and researchers who deploy workloads in containers but the",
    "start": "273560",
    "end": "279080"
  },
  {
    "text": "data was either living in if you're running in the cloud like a managed database service from a particular cloud",
    "start": "279080",
    "end": "284930"
  },
  {
    "text": "vendor that was one pattern for deployment moving on there was another pattern where well I",
    "start": "284930",
    "end": "291439"
  },
  {
    "text": "want to run my own databases but I'm not sure should I run them inside a container because I'm not sure I'll just",
    "start": "291439",
    "end": "299060"
  },
  {
    "text": "run it inside a VM so one potential option was you could run a database",
    "start": "299060",
    "end": "305599"
  },
  {
    "text": "inside a VM but your workload is running in containers you get the agility the scale across them and that's some place",
    "start": "305599",
    "end": "313539"
  },
  {
    "text": "one configuration to do 100 patterns but as the CSI is maturing as the CSI has",
    "start": "313539",
    "end": "320870"
  },
  {
    "text": "now enterprise features like snapshot it's in going into beta soon there is a huge push and a huge ask for",
    "start": "320870",
    "end": "328190"
  },
  {
    "text": "our mr. to say I don't want to look at two separate frameworks one for VM one for containers can as an application can",
    "start": "328190",
    "end": "335060"
  },
  {
    "text": "I have a consistent application of framework all based on containers so more and more admins are adopting to",
    "start": "335060",
    "end": "342199"
  },
  {
    "text": "move towards running databases inside containers itself so that's where you need persistent disks and where the life",
    "start": "342199",
    "end": "350419"
  },
  {
    "text": "of disk is actually beyond just the container itself so a lot of our conversations between Jing and I we",
    "start": "350419",
    "end": "356810"
  },
  {
    "text": "focus more on the third pattern today so",
    "start": "356810",
    "end": "365569"
  },
  {
    "text": "we wanted we were looking at many ways on how we dice and slice the whole model",
    "start": "365569",
    "end": "370699"
  },
  {
    "text": "and what we did ended up doing was kind of doing it in a pattern to say at day",
    "start": "370699",
    "end": "376550"
  },
  {
    "text": "zero when you're thinking about deploying an application what are the fundamental approach differences at an",
    "start": "376550",
    "end": "382339"
  },
  {
    "text": "architecture level so de zero you're thinking about architecture you're thinking about a design of an application",
    "start": "382339",
    "end": "387439"
  },
  {
    "text": "you haven't deployed anything yet day one you start to deploy your application you start building the application",
    "start": "387439",
    "end": "393409"
  },
  {
    "text": "framework infrastructure framework we'll talk about what are the differences at that level then we get a",
    "start": "393409",
    "end": "399739"
  },
  {
    "text": "day two I start ringing applications I start consuming my infrastructure with applications and framework what are the",
    "start": "399739",
    "end": "406939"
  },
  {
    "text": "parallels we can draw on that side and a3 as I start consuming how do I start",
    "start": "406939",
    "end": "412909"
  },
  {
    "text": "controlling and managing things at scale I'm used to certain patterns on PM's can",
    "start": "412909",
    "end": "418849"
  },
  {
    "text": "I translate the same concept and what does the translation even mean at managing at scale levels sharing",
    "start": "418849",
    "end": "424729"
  },
  {
    "text": "quarters and things that's about volley management paddles around day three so day zero is more at a design day three",
    "start": "424729",
    "end": "431419"
  },
  {
    "text": "is more about when you're actually scaling and managing things at scale and trying to make sure things stay in a",
    "start": "431419",
    "end": "436789"
  },
  {
    "text": "sane way so that's kind of how we're structuring the talk Genki recovered pacer okay",
    "start": "436789",
    "end": "447019"
  },
  {
    "text": "so they zero let's start with storage architecture comparison so this is you",
    "start": "447019",
    "end": "457309"
  },
  {
    "text": "know typical virtual machine clusters that have right this simplified architecture view the bottom layer",
    "start": "457309",
    "end": "464419"
  },
  {
    "text": "storage you there's a variety of storage available and on top of physical storage",
    "start": "464419",
    "end": "470029"
  },
  {
    "text": "layer typically there is a virtualization layer it provides a unified interface for a virtual machine",
    "start": "470029",
    "end": "476659"
  },
  {
    "text": "to access your storage right no matter what kind of storage underneath you can",
    "start": "476659",
    "end": "482659"
  },
  {
    "text": "access as file or prog devices and across these layers and the data paths",
    "start": "482659",
    "end": "489740"
  },
  {
    "text": "make available for a workload to access the storage and on the other hand",
    "start": "489740",
    "end": "495789"
  },
  {
    "text": "there's also need a control path right so you can manage your virtual machine",
    "start": "495789",
    "end": "501319"
  },
  {
    "text": "and storage resources so typically a control plane provides you a set of we",
    "start": "501319",
    "end": "507949"
  },
  {
    "text": "so called imperative api's to perform some tasks like you create virtual",
    "start": "507949",
    "end": "512959"
  },
  {
    "text": "machine create disk attached volume to some virtual machines now moving to a",
    "start": "512959",
    "end": "523250"
  },
  {
    "text": "container world right so on top of virtual machine layer you have operating",
    "start": "523250",
    "end": "528860"
  },
  {
    "text": "system and then you can run a number of containers inside a virtual machine and",
    "start": "528860",
    "end": "534670"
  },
  {
    "text": "you can run a workload instead of containers and across these layers again",
    "start": "534670",
    "end": "539800"
  },
  {
    "text": "the telepaths make available for your workload to access a storage and in",
    "start": "539800",
    "end": "547240"
  },
  {
    "text": "order to of course manage your containers and it's really the resources you know you need another layer of",
    "start": "547240",
    "end": "553660"
  },
  {
    "text": "control plane we called container frustration so container Association",
    "start": "553660",
    "end": "560890"
  },
  {
    "text": "will manage the container lifecycle and also through every system and control",
    "start": "560890",
    "end": "567520"
  },
  {
    "text": "plane at virtual machine layer to manage the underlying storage system kubernetes",
    "start": "567520",
    "end": "583990"
  },
  {
    "text": "of course is one of such continuous treatment system so Cabana is a main",
    "start": "583990",
    "end": "590710"
  },
  {
    "text": "difference is commonly used when a DS we so-called the current API so just in a",
    "start": "590710",
    "end": "596110"
  },
  {
    "text": "minute we'll describe was the fundamental difference between kubernetes declarative API and imperative API and",
    "start": "596110",
    "end": "604860"
  },
  {
    "text": "also focus be able to manage the underlying storage resources when it",
    "start": "604860",
    "end": "611350"
  },
  {
    "text": "need to communicate with the control plane at what machine layer so the",
    "start": "611350",
    "end": "618070"
  },
  {
    "text": "storage community initiative standard to be able these two layers to communicate",
    "start": "618070",
    "end": "624760"
  },
  {
    "text": "each other we called container storage interface so it is cross environment",
    "start": "624760",
    "end": "631870"
  },
  {
    "text": "standardized interface to expose the file or block devices so with this",
    "start": "631870",
    "end": "640470"
  },
  {
    "text": "standardized interface and for storage vendor just need to implement their",
    "start": "640470",
    "end": "647410"
  },
  {
    "text": "storage drivers and to expose those services based on the CSI spike and it",
    "start": "647410",
    "end": "656710"
  },
  {
    "text": "can easily plug in any container system okay we just mentioned imperative",
    "start": "656710",
    "end": "673400"
  },
  {
    "text": "API and a component is the curse of the API what's the difference at a left side",
    "start": "673400",
    "end": "680120"
  },
  {
    "text": "right it is a typical some list of commands you can use to perform some",
    "start": "680120",
    "end": "685730"
  },
  {
    "text": "tasks in virtual machine environment and pokemon that is everything every",
    "start": "685730",
    "end": "693620"
  },
  {
    "text": "resources basically described as API objects here we have some examples and",
    "start": "693620",
    "end": "700300"
  },
  {
    "text": "for storage later we'll explain those in more detail all right we have persistent",
    "start": "700300",
    "end": "706940"
  },
  {
    "text": "volume claim and storage class and for a workload you have pod that represent a",
    "start": "706940",
    "end": "712910"
  },
  {
    "text": "set of containers work together and you have other type of resources as objects",
    "start": "712910",
    "end": "721690"
  },
  {
    "text": "so what's the difference between these two let's use a simple task as example",
    "start": "721690",
    "end": "729590"
  },
  {
    "text": "right you want to create a disk and you want to make it available for your workload to access it and in the typical",
    "start": "729590",
    "end": "737210"
  },
  {
    "text": "virtual machine environment you need to figure out what's the sequence of",
    "start": "737210",
    "end": "742400"
  },
  {
    "text": "commands you need to run like here you need to create disk you need to partition format this and attach takes",
    "start": "742400",
    "end": "749540"
  },
  {
    "text": "to denote that where your container is scheduled to what if there's some when",
    "start": "749540",
    "end": "756290"
  },
  {
    "text": "you run these commands there are some failures and problems then you have to run your API again now in a declarative",
    "start": "756290",
    "end": "765290"
  },
  {
    "text": "API word so it's changed a way of managing system you no longer need to",
    "start": "765290",
    "end": "771410"
  },
  {
    "text": "worry about or figure out the sequence of commands you need to run you just",
    "start": "771410",
    "end": "776720"
  },
  {
    "text": "describe what you want to achieve what the state of your system you want to get",
    "start": "776720",
    "end": "782230"
  },
  {
    "text": "so for example if you need a volume available you just define a volume spec",
    "start": "782230",
    "end": "789460"
  },
  {
    "text": "describe what kind of volume you need what's the size of the volume what some you want and the system the",
    "start": "789460",
    "end": "796990"
  },
  {
    "text": "controller will figure out what to do and make it available and if you're part",
    "start": "796990",
    "end": "802240"
  },
  {
    "text": "need to use that volume then you define your parts bag which have a reference of",
    "start": "802240",
    "end": "808150"
  },
  {
    "text": "your volume object again the controller will just figure out what to do and",
    "start": "808150",
    "end": "814590"
  },
  {
    "text": "basically what you they find in your API objects right this grab what's the",
    "start": "814590",
    "end": "820900"
  },
  {
    "text": "desired state of your system and the controller will compare the desired state and with the actual state and",
    "start": "820900",
    "end": "828450"
  },
  {
    "text": "determine what's the action I need to take for example it need to attach a",
    "start": "828450",
    "end": "834130"
  },
  {
    "text": "volume to a node and then format it with the file system you just requested and",
    "start": "834130",
    "end": "841240"
  },
  {
    "text": "then mounted and everything is done by control automatically if anything goes",
    "start": "841240",
    "end": "847960"
  },
  {
    "text": "wrong the controller will just keep reconciling the space until it reach the desired state this is just a control",
    "start": "847960",
    "end": "859150"
  },
  {
    "text": "over at it keep reconciling and now we already have idea of kubernetes way of",
    "start": "859150",
    "end": "867880"
  },
  {
    "text": "managing and we move on to how we represent the volume in communities and",
    "start": "867880",
    "end": "880380"
  },
  {
    "text": "so again in water washing environment rats you have two type of people two",
    "start": "882030",
    "end": "890290"
  },
  {
    "text": "different rows four users right user care about like what kind of storage",
    "start": "890290",
    "end": "897160"
  },
  {
    "text": "I need whether it is persistent or whether they need to be a file blog whether you need multi or single reader",
    "start": "897160",
    "end": "904510"
  },
  {
    "text": "writer what's the size of your storage and user just kind of sent this request",
    "start": "904510",
    "end": "911230"
  },
  {
    "text": "and the system mean we'll need to figure out how to set up the storage whether it",
    "start": "911230",
    "end": "917050"
  },
  {
    "text": "is fabric I know FSS mbm and based on users request and the system may need to",
    "start": "917050",
    "end": "924640"
  },
  {
    "text": "run sequence of commands had to carve the storage partition or format and then",
    "start": "924640",
    "end": "933650"
  },
  {
    "text": "make it available and in kubernetes so we are trying to use object to represent",
    "start": "933650",
    "end": "943910"
  },
  {
    "text": "not again to make the relationship between the user and system mean so from",
    "start": "943910",
    "end": "951560"
  },
  {
    "text": "user side please delay it needs some requests so we use so called persistent",
    "start": "951560",
    "end": "958730"
  },
  {
    "text": "volume claim to represent a request for storage so here we have example and in",
    "start": "958730",
    "end": "966080"
  },
  {
    "text": "the persistence volume claim spike you can define what's the size of your",
    "start": "966080",
    "end": "972710"
  },
  {
    "text": "storage and what is the access mode for storage and also you can define what's",
    "start": "972710",
    "end": "978800"
  },
  {
    "text": "the file system want to put for your storage and you may notice there is no",
    "start": "978800",
    "end": "987279"
  },
  {
    "text": "detail information about the actual storage at all there's no you don't know",
    "start": "987279",
    "end": "992930"
  },
  {
    "text": "what is the actual underlying storage type whether it is NFS or it is a scuzzy",
    "start": "992930",
    "end": "999680"
  },
  {
    "text": "and there's no like a disk ID there so the benefit of this way is it makes your",
    "start": "999680",
    "end": "1007330"
  },
  {
    "text": "workload very portable right so if you need to migrate your workload from one class to another right you can just use",
    "start": "1007330",
    "end": "1014770"
  },
  {
    "text": "exactly the same PVC right there's nothing you need to change and also is",
    "start": "1014770",
    "end": "1020650"
  },
  {
    "text": "PVC the queries can manage the volume lifecycle independently from their",
    "start": "1020650",
    "end": "1027610"
  },
  {
    "text": "workload and then but down to the N read",
    "start": "1027610",
    "end": "1035920"
  },
  {
    "text": "the controller still needs you access be able to manage storage so where those",
    "start": "1035920",
    "end": "1041699"
  },
  {
    "text": "detailed storage information stored so we have another object to store those",
    "start": "1041699",
    "end": "1047678"
  },
  {
    "text": "information we called persistent volume so this is example of search",
    "start": "1047679",
    "end": "1055040"
  },
  {
    "text": "spec so in this example is specifying what's the size of what's the capacity",
    "start": "1055040",
    "end": "1060750"
  },
  {
    "text": "of the storage and was the available volume access mode and what is the file",
    "start": "1060750",
    "end": "1068430"
  },
  {
    "text": "system and also what is the driver for",
    "start": "1068430",
    "end": "1074130"
  },
  {
    "text": "this storage and the detailed volume ID",
    "start": "1074130",
    "end": "1079850"
  },
  {
    "text": "visit is a handle or so that you can access the volume and for user side",
    "start": "1079850",
    "end": "1086850"
  },
  {
    "text": "right it creates a PVC such as a claim and system means that right it's need to",
    "start": "1086850",
    "end": "1093270"
  },
  {
    "text": "create those PV objects to represent those volumes and the system will",
    "start": "1093270",
    "end": "1099660"
  },
  {
    "text": "binding these two objects banding here means you have pointers to pointer and",
    "start": "1099660",
    "end": "1105980"
  },
  {
    "text": "now the controller can use that pointer to find out from this claim right to the",
    "start": "1105980",
    "end": "1114180"
  },
  {
    "text": "actual volume information and next Minoo we'll talk about different ways of",
    "start": "1114180",
    "end": "1121440"
  },
  {
    "text": "pioneer mapping between pv BBC thank you",
    "start": "1121440",
    "end": "1127710"
  },
  {
    "text": "so moving on I mean we covered a couple of things we covered like what other differences between imperative approach",
    "start": "1127710",
    "end": "1134610"
  },
  {
    "text": "with and the decorative approach that containers have and I think that's something to consider you're designing",
    "start": "1134610",
    "end": "1140340"
  },
  {
    "text": "the architecture about completing a task we also covered like how does kubernetes",
    "start": "1140340",
    "end": "1146070"
  },
  {
    "text": "abstract storage by source classes or p BBC mapping so that way your application",
    "start": "1146070",
    "end": "1151830"
  },
  {
    "text": "is portable independent of the underlying architecture now let's look at when you are designing your",
    "start": "1151830",
    "end": "1158340"
  },
  {
    "text": "architecture if you come in from a we in world one of the things I've seen a lot",
    "start": "1158340",
    "end": "1163890"
  },
  {
    "text": "of folks do is around depending on the level of control you want around allocations like if you're using an",
    "start": "1163890",
    "end": "1169800"
  },
  {
    "text": "external storage a lot of folks will just create let's say ten hundred gig volumes and say this is my standard size",
    "start": "1169800",
    "end": "1177180"
  },
  {
    "text": "these are the volumes these 50 are allowed to be assigned to this application these 50 or for this other",
    "start": "1177180",
    "end": "1182940"
  },
  {
    "text": "applications and the two shall never converge because you're worried about workload incompatibilities or because",
    "start": "1182940",
    "end": "1189830"
  },
  {
    "text": "processors may be shared on an external system so mapping the same parallels to",
    "start": "1189830",
    "end": "1195710"
  },
  {
    "text": "the container world in containers you actually can do a very similar thing you",
    "start": "1195710",
    "end": "1200720"
  },
  {
    "text": "can actually have pre provision volumes where you actually can dictate that these are the set of volumes that can be",
    "start": "1200720",
    "end": "1207200"
  },
  {
    "text": "mapped and the system cannot dynamically create or you can create more",
    "start": "1207200",
    "end": "1213080"
  },
  {
    "text": "flexibility to the applications and say well let's talk about dynamic volumes so",
    "start": "1213080",
    "end": "1220010"
  },
  {
    "text": "moving getting into it so pre provision and sometimes also called static",
    "start": "1220010",
    "end": "1225200"
  },
  {
    "text": "provisioning is where a storage admin can pre create a set of volumes and",
    "start": "1225200",
    "end": "1230720"
  },
  {
    "text": "whenever a container gets deployed and asks for a volume through a storage class and a PVC mapping the only option",
    "start": "1230720",
    "end": "1238460"
  },
  {
    "text": "is one of the pre created volumes if the volume doesn't exist the request fails if the volume exists the request goes",
    "start": "1238460",
    "end": "1245180"
  },
  {
    "text": "through but there is no you cannot create more than what you were allocated so it's an interesting way of creating",
    "start": "1245180",
    "end": "1251840"
  },
  {
    "text": "that paradigm you can control how different things are mapped other piece I also want to mention over here is if",
    "start": "1251840",
    "end": "1258530"
  },
  {
    "text": "there is a scenario especially well stateful applications where you have a backup you restore the backup into a",
    "start": "1258530",
    "end": "1264920"
  },
  {
    "text": "particular volume and where your workload comes up you really don't want any volume but that particular volume",
    "start": "1264920",
    "end": "1270710"
  },
  {
    "text": "itself to be mounted there is a way around PP we see mapping where you can force a container to be mapped to a",
    "start": "1270710",
    "end": "1278360"
  },
  {
    "text": "certain specific volume this is very in this case comes in when you have like restores or backups and then you have a",
    "start": "1278360",
    "end": "1285290"
  },
  {
    "text": "very specific relative mapped out so that is also part of pre provisioned or static provisioning in the dynamic",
    "start": "1285290",
    "end": "1294140"
  },
  {
    "text": "provisioning the biggest difference is that depending on the storage policies",
    "start": "1294140",
    "end": "1299330"
  },
  {
    "text": "across the environment you may allocate a set of storage pool and say as long as",
    "start": "1299330",
    "end": "1306500"
  },
  {
    "text": "this like a one terabyte tool dear application admin have added create as many volumes create whatever size but",
    "start": "1306500",
    "end": "1313640"
  },
  {
    "text": "this is the area and you can just use one terabyte of pool or you can allocate",
    "start": "1313640",
    "end": "1319520"
  },
  {
    "text": "multiple sets of pools who say one is my SSD one is my spinning dry 7.5 15 K dries",
    "start": "1319520",
    "end": "1326520"
  },
  {
    "text": "whatever the pool configuration is but the actual volumes are not pre created",
    "start": "1326520",
    "end": "1331800"
  },
  {
    "text": "they are created on demand when a container spins up or a workload is",
    "start": "1331800",
    "end": "1336840"
  },
  {
    "text": "deployed so again it depends on what are the policies across your environment for",
    "start": "1336840",
    "end": "1342270"
  },
  {
    "text": "managing VMs and if you want to translate the same policies the same level of controls they can be mapped to",
    "start": "1342270",
    "end": "1349050"
  },
  {
    "text": "you the container side and container supports both of those policies itself we've seen both models being viable but",
    "start": "1349050",
    "end": "1360780"
  },
  {
    "text": "the biggest difference comes in like if you are running workloads on pram or you're running workloads in the cloud",
    "start": "1360780",
    "end": "1366679"
  },
  {
    "text": "there is a difference if you're in the cloud you actually end up more on the",
    "start": "1366679",
    "end": "1373110"
  },
  {
    "text": "dynamic provisioning side and if you're in running on Fram and you're concerned",
    "start": "1373110",
    "end": "1378120"
  },
  {
    "text": "about that you actually do dynamic Pro you can do static provisioning - is",
    "start": "1378120",
    "end": "1387240"
  },
  {
    "text": "there any ways",
    "start": "1387240",
    "end": "1389690"
  },
  {
    "text": "sorry so we talk about storage glasses",
    "start": "1402120",
    "end": "1407550"
  },
  {
    "text": "store its classes can you guys hear me okay okay so stories class is a way",
    "start": "1407550",
    "end": "1414760"
  },
  {
    "text": "which basically allows storage and infrastructure admins to provide controls you can actually control you",
    "start": "1414760",
    "end": "1422290"
  },
  {
    "text": "can create classes and give them names like this is my fast class slow class or slower class and within the time within",
    "start": "1422290",
    "end": "1430720"
  },
  {
    "text": "that parameter you can define what is the provision or provision or is usually like a CSI driver to say depending on",
    "start": "1430720",
    "end": "1436990"
  },
  {
    "text": "what storage vendors you're using on frame or what type of storage you're using in the cloud each of them will",
    "start": "1436990",
    "end": "1442510"
  },
  {
    "text": "have their own storage providers or storage provisioners and then you can define what type of interface and the",
    "start": "1442510",
    "end": "1448540"
  },
  {
    "text": "disk it is inside so it gives you those controls within that within storage class depending on the type of storage",
    "start": "1448540",
    "end": "1456970"
  },
  {
    "text": "provider you're working they could be custom parameters also pass to expose certain vendor specific",
    "start": "1456970",
    "end": "1463120"
  },
  {
    "text": "information also but at a base level there is a general set of parameters",
    "start": "1463120",
    "end": "1469120"
  },
  {
    "text": "that can define what kind of service the application needs now before we get into",
    "start": "1469120",
    "end": "1480490"
  },
  {
    "text": "this so we have we've thought about the architecture we're starting to deploy applications we have figured out we're",
    "start": "1480490",
    "end": "1486640"
  },
  {
    "text": "going to use dynamic provisioning or static provisioning now we start deploying applications an application",
    "start": "1486640",
    "end": "1491950"
  },
  {
    "text": "start consuming storage then the question becomes how do you maintain state where because of the dynamic array",
    "start": "1491950",
    "end": "1499960"
  },
  {
    "text": "of the environment when you scale you really don't scale beyond the certain level of controls that you have so on",
    "start": "1499960",
    "end": "1507540"
  },
  {
    "text": "day three will I want to talk about more about how do you send boundaries and controls in that in an environment so",
    "start": "1507540",
    "end": "1515020"
  },
  {
    "text": "one of the things we can do is set quotas when you can set quotas on how",
    "start": "1515020",
    "end": "1520690"
  },
  {
    "text": "many PVCs an individual namespace can allocate where it's growing or scaling",
    "start": "1520690",
    "end": "1527590"
  },
  {
    "text": "or scaling up and scaling down and in that case you can look in this example can say there are five PS and the total capacity cannot be more",
    "start": "1527590",
    "end": "1534840"
  },
  {
    "text": "than 50 gigs now the application has flexibility to define how many of those",
    "start": "1534840",
    "end": "1540000"
  },
  {
    "text": "but the total is capped at 50 so it gives admins a way to control the scale",
    "start": "1540000",
    "end": "1546870"
  },
  {
    "text": "and the dynamic city but still give flexibility to the application admin to say you can still do what you want but",
    "start": "1546870",
    "end": "1552240"
  },
  {
    "text": "these are the limits that are defined in that space the next level of control we",
    "start": "1552240",
    "end": "1561630"
  },
  {
    "text": "can look at is limit range so depending on what type of box you want to give for",
    "start": "1561630",
    "end": "1567600"
  },
  {
    "text": "the application admins another way to do it is that like specially coming from a",
    "start": "1567600",
    "end": "1572880"
  },
  {
    "text": "VM world particularly storage admins there was a general rule depending on",
    "start": "1572880",
    "end": "1579210"
  },
  {
    "text": "the scalar say any volume less than hundred gigs go ahead and it's automated",
    "start": "1579210",
    "end": "1584460"
  },
  {
    "text": "you can create it by yourself anything over 100 gigs well let's talk about it because I may need to do some capacity",
    "start": "1584460",
    "end": "1590730"
  },
  {
    "text": "planning or things around it if I translate the same concept over to",
    "start": "1590730",
    "end": "1596120"
  },
  {
    "text": "containers within this you can define limit ranges to say any any wall in",
    "start": "1596120",
    "end": "1603510"
  },
  {
    "text": "between let's say one or two gigs this will just take an example can be done automatically but anything beyond that",
    "start": "1603510",
    "end": "1609900"
  },
  {
    "text": "it needs to be a special request so if you're a storage art when you're",
    "start": "1609900",
    "end": "1615450"
  },
  {
    "text": "controlling what your scale is going to be this is another way where you can define certain limits",
    "start": "1615450",
    "end": "1621570"
  },
  {
    "text": "depending on what your corporate policies are how you want to manage growth how you'll manage scale and how",
    "start": "1621570",
    "end": "1627060"
  },
  {
    "text": "you make sure the applications don't step on each other given a lot of the environment is going to be shared at least on the back end so here's the",
    "start": "1627060",
    "end": "1637890"
  },
  {
    "text": "cheat sheet so we talked about pvp VCS we talked about static provisioning",
    "start": "1637890",
    "end": "1643980"
  },
  {
    "text": "dynamic provisioning we talked about CSI drivers essentially a lot of these concepts are very similar they have",
    "start": "1643980",
    "end": "1650670"
  },
  {
    "text": "different names there are different titles but the end of the day the level of controls are more dynamic but they",
    "start": "1650670",
    "end": "1657390"
  },
  {
    "text": "can be translated to something that you're already aware of so we start with the storage class a storage class is a",
    "start": "1657390",
    "end": "1663810"
  },
  {
    "text": "storage profile in containers the main goal is to abstract application from any physical characteristics of a",
    "start": "1663810",
    "end": "1670589"
  },
  {
    "text": "storage you don't care about that it's FCI Scaasi all you care as I am writing",
    "start": "1670589",
    "end": "1675779"
  },
  {
    "text": "into the storage class and when application moves for an environment a to environment B as long as that storage",
    "start": "1675779",
    "end": "1681539"
  },
  {
    "text": "class is available I am fine I'm not worried about what's serving that storage class next thing is PV is more",
    "start": "1681539",
    "end": "1689820"
  },
  {
    "text": "about kind of going back to the imperative way of modeling of request PV",
    "start": "1689820",
    "end": "1696179"
  },
  {
    "text": "is an actual storage object saying here's my volume this is how you map it so it's almost like a volume it's an",
    "start": "1696179",
    "end": "1704009"
  },
  {
    "text": "object that is representing volume in containers PVC is a request for a volume",
    "start": "1704009",
    "end": "1709799"
  },
  {
    "text": "again going back to the data models this is you request and then you get it and kubernetes works on achieving that state",
    "start": "1709799",
    "end": "1716659"
  },
  {
    "text": "controller is that manages the whole thing on how to get to the per state that was requested if the resources are",
    "start": "1716659",
    "end": "1723779"
  },
  {
    "text": "not there it will keep trying versus I failed there will be timeouts but that it works on it",
    "start": "1723779",
    "end": "1729419"
  },
  {
    "text": "static provisioning and dynamic provisioning depending and again your policies for the environment that you're",
    "start": "1729419",
    "end": "1734789"
  },
  {
    "text": "using for VM and containers you can leverage that static provisioning allows you to limit provisioning to pre",
    "start": "1734789",
    "end": "1740820"
  },
  {
    "text": "carved-out volumes dynamic provisioning allows you to create dynamic volumes on",
    "start": "1740820",
    "end": "1746549"
  },
  {
    "text": "demand given a storage pool or a pool of storage and you'll hear multiple terms",
    "start": "1746549",
    "end": "1752249"
  },
  {
    "text": "around CSI drivers entry drivers the",
    "start": "1752249",
    "end": "1757529"
  },
  {
    "text": "biggest difference is entry drivers was previously the way storage storage",
    "start": "1757529",
    "end": "1762599"
  },
  {
    "text": "partners integrated into containers CSI is the new way and a lot of drivers are",
    "start": "1762599",
    "end": "1767789"
  },
  {
    "text": "moving the biggest difference being entry drivers were part of the kubernetes stack CSI drivers are",
    "start": "1767789",
    "end": "1774089"
  },
  {
    "text": "external interfaces which partners storage partners write to it but that if that term comes up it essentially is a",
    "start": "1774089",
    "end": "1780809"
  },
  {
    "text": "storage interface that storage partners and vendors use to integrate into the container stack itself so hopefully this",
    "start": "1780809",
    "end": "1788789"
  },
  {
    "text": "helps you move and translate terminology from A to B basic concepts around how",
    "start": "1788789",
    "end": "1795239"
  },
  {
    "text": "you can look at containers I look at storage and if you're used to certain practices and an operational level or an",
    "start": "1795239",
    "end": "1801990"
  },
  {
    "text": "architecture level on a VM goal this will help you kind of map those to you if you're moving on to the container",
    "start": "1801990",
    "end": "1808350"
  },
  {
    "text": "side thank you so much for taking time this afternoon and if there any",
    "start": "1808350",
    "end": "1814020"
  },
  {
    "text": "questions we can definitely answer them [Applause]",
    "start": "1814020",
    "end": "1824880"
  }
]