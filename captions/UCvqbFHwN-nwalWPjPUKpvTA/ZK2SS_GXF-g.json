[
  {
    "text": "perfect thank you so much Wow I haven't done anything yet wait to clap until I",
    "start": "30",
    "end": "5520"
  },
  {
    "text": "actually do something now thank you all very much we're gonna try to make this really fun I'm honestly thrilled and",
    "start": "5520",
    "end": "12240"
  },
  {
    "text": "very humbled to be here today this is my first ever cube con I've been a Youtube attendee for the last few years it's",
    "start": "12240",
    "end": "20789"
  },
  {
    "text": "it's been an incredible week so hopefully I'll be able to share some stuff here that you'll be able to take away but also one of the things that I",
    "start": "20789",
    "end": "27449"
  },
  {
    "text": "really love about cube con in this community is that I also want to open this up to a dialog and whether it",
    "start": "27449",
    "end": "33239"
  },
  {
    "text": "happens in this room or after the fact at the booth on Twitter and community stand-ups is we're kind of moving this",
    "start": "33239",
    "end": "38640"
  },
  {
    "text": "world of serverless and kubernetes forward so as just mentioned I'm Jeff Holland we'll have a fun session today in fact I",
    "start": "38640",
    "end": "45239"
  },
  {
    "text": "was well I switch to this first slide I was gonna make this entirely Star Wars themed and have like gifts all over the",
    "start": "45239",
    "end": "51870"
  },
  {
    "text": "place from Star Wars stuff and I had all the jokes written but then earlier this week as I was going through the deck has",
    "start": "51870",
    "end": "58050"
  },
  {
    "text": "like I don't know how someone from Disney is gonna be here or they're gonna catch wind and I do not want to get sued",
    "start": "58050",
    "end": "63149"
  },
  {
    "text": "by Disney so just use your imagination and I still snuck some in at the end I've got a fun demo that will tie it",
    "start": "63149",
    "end": "68850"
  },
  {
    "text": "back to Star Wars which I'm very in the mood for right now okay so to start with serverless means a lot of things and it",
    "start": "68850",
    "end": "75180"
  },
  {
    "text": "means nothing because marketing but for now just focusing on how I think about",
    "start": "75180",
    "end": "81270"
  },
  {
    "text": "service to set the context regardless of Technology in my mind serverless is really about enabling developers IT",
    "start": "81270",
    "end": "88890"
  },
  {
    "text": "admins really anyone dealing with code to be able to focus primarily on just",
    "start": "88890",
    "end": "94200"
  },
  {
    "text": "their application logic and all the other pieces that you're usually thinking about when shipping an application you don't have to worry",
    "start": "94200",
    "end": "100710"
  },
  {
    "text": "about anymore they're taking care by the platform by tools behind the scenes to enable you to be faster and more",
    "start": "100710",
    "end": "105869"
  },
  {
    "text": "efficient now service has a lot of attributes this isn't a requirements list there's a whole spectrum some",
    "start": "105869",
    "end": "112229"
  },
  {
    "text": "things are service and they have some of these but a few of the qualities are things like event-driven something",
    "start": "112229",
    "end": "117750"
  },
  {
    "text": "triggers an event it triggers your code to say hey something's happened here to run and as part of that event-driven",
    "start": "117750",
    "end": "123719"
  },
  {
    "text": "it means that that compute will be made available on demand as well so hey an event happen that I need to run this",
    "start": "123719",
    "end": "129509"
  },
  {
    "text": "code for let's make sure that we have computable just-in-time for that event and there's often this",
    "start": "129509",
    "end": "135390"
  },
  {
    "text": "aspect of paper use and again this can vary there's an entire spectrum sometimes paper use is like running an",
    "start": "135390",
    "end": "141840"
  },
  {
    "text": "AWS lambda or the Azure function service and you literally only pay when your code is actually executing but paper use",
    "start": "141840",
    "end": "149520"
  },
  {
    "text": "might also just mean that because you're doing event-driven and on-demand computing that you're scaling your",
    "start": "149520",
    "end": "154560"
  },
  {
    "text": "resources only when you need them and so you're able to more efficiently use your underlying compute so with this in mind",
    "start": "154560",
    "end": "161610"
  },
  {
    "text": "as your functions has been around for a while I've been on the Azure functions team and working in service yeah sure",
    "start": "161610",
    "end": "167190"
  },
  {
    "text": "for about five years now we see it used all over the place for a bunch of different things in fact I was just",
    "start": "167190",
    "end": "172410"
  },
  {
    "text": "looking over the last just the last three weeks there's been over a quarter of a trillion executions that happened",
    "start": "172410",
    "end": "179160"
  },
  {
    "text": "around as your functions so we have a bunch of stuff that make up those executions often where people get",
    "start": "179160",
    "end": "184680"
  },
  {
    "text": "started our simple automation type tasks a pull request gets open can you add this label can you add these checks a 5",
    "start": "184680",
    "end": "192030"
  },
  {
    "text": "o'clock p.m. can you shut down these machines or run an update can you post a slack when it's lunchtime",
    "start": "192030",
    "end": "197310"
  },
  {
    "text": "and ask for a vote on where we want to go for lunch really good way to get started I often call automation and",
    "start": "197310",
    "end": "202680"
  },
  {
    "text": "serve a list like the gateway drug but often it grows from there and people can start to use them for other things glue",
    "start": "202680",
    "end": "208320"
  },
  {
    "text": "is another very common place to see serverless containers and functions used I've got over here I've got sequel",
    "start": "208320",
    "end": "215220"
  },
  {
    "text": "over there they need to be able to talk better to each other maybe I can glue them together with some serverless",
    "start": "215220",
    "end": "220340"
  },
  {
    "text": "rapid api's I think about how Netflix is documented how they're using service Tekken's to service methodologies where",
    "start": "220340",
    "end": "227640"
  },
  {
    "text": "they have front-end developers writing the UI for Netflix who need to be able to fetch fetch data from back-end",
    "start": "227640",
    "end": "235140"
  },
  {
    "text": "services and rather than having to spin up a full micro service to fetch that data from they empower their developers",
    "start": "235140",
    "end": "242340"
  },
  {
    "text": "to just write little functions they go grab the data that they need and return it back to the UI so these very rapid",
    "start": "242340",
    "end": "248310"
  },
  {
    "text": "API is for mobile apps web apps you name it are a big one and then as things kind",
    "start": "248310",
    "end": "253410"
  },
  {
    "text": "of grow up kind of the bigger ones that we see are really around event streaming and cue processing billions of messages",
    "start": "253410",
    "end": "259549"
  },
  {
    "text": "funneling through queues and streams and kafka processing and ricci transforming",
    "start": "259549",
    "end": "266160"
  },
  {
    "text": "the data making insights and analysis full suites that are made up of hundreds of functions with data's being passed",
    "start": "266160",
    "end": "272230"
  },
  {
    "text": "around all with those service principles I talked about before actually a good example of this is Best Buy they gave a",
    "start": "272230",
    "end": "278229"
  },
  {
    "text": "talk at the spring one conference that honestly I'd recommend checking out if you're interested about how they're using server lists and other tools to",
    "start": "278229",
    "end": "285580"
  },
  {
    "text": "build a modern retail experience so they have a few cool stuff here one is that",
    "start": "285580",
    "end": "291430"
  },
  {
    "text": "they do a lot of processing on premises at regional data centers they're using things like kubernetes you can see open",
    "start": "291430",
    "end": "298060"
  },
  {
    "text": "shift here and at some point some of that data is gonna make its way to a cloud they're using a Kafka like service",
    "start": "298060",
    "end": "304540"
  },
  {
    "text": "in Azure called event hubs they're processing those Kafka events those little lightning bolts that you see those are functions so they're using",
    "start": "304540",
    "end": "311380"
  },
  {
    "text": "some service functions here to be able to scale rapidly transform the data put it into the right databases and power",
    "start": "311380",
    "end": "317680"
  },
  {
    "text": "things like the bestbuy.com experience and Best Buy had a lot of requirements right one of them is hey we're gonna",
    "start": "317680",
    "end": "323470"
  },
  {
    "text": "have things like Black Friday we need to make sure that our compute can scale rapidly at midnight or whenever Black",
    "start": "323470",
    "end": "329710"
  },
  {
    "text": "Friday is earlier every year it's probably like 8 o'clock in the morning on Thanksgiving now but at 8 o'clock in the morning on Thanksgiving they need to",
    "start": "329710",
    "end": "335680"
  },
  {
    "text": "be able to scale rapidly they also had some other requirements they knew Kafka they loved Kafka they're like hey if and",
    "start": "335680",
    "end": "342310"
  },
  {
    "text": "if an exception happens if something goes wrong we want to be able to know that we have control to say you know",
    "start": "342310",
    "end": "348520"
  },
  {
    "text": "what don't checkpoint the stream we need to retry these messages and the last one which is an important one we'll get to",
    "start": "348520",
    "end": "354820"
  },
  {
    "text": "it later in the presentation ordering was super important it very much mattered if the item was purchased item",
    "start": "354820",
    "end": "362500"
  },
  {
    "text": "was cancelled shipment was created what order those events get processed was very important to them they were able to",
    "start": "362500",
    "end": "369340"
  },
  {
    "text": "build this they say in a matter of weeks where traditionally it would take them months that's a quote from their presentation again at that spring one",
    "start": "369340",
    "end": "375370"
  },
  {
    "text": "conference which is kind of a good example to set the stage here now one of the things that we have been doing as a",
    "start": "375370",
    "end": "381280"
  },
  {
    "text": "service and as I mentioned as a fan as your functions itself like those lightning bolts those have been open",
    "start": "381280",
    "end": "387910"
  },
  {
    "text": "source since day one you can go to github.com slash Asher slash as your functions in our runtime the way that we",
    "start": "387910",
    "end": "394180"
  },
  {
    "text": "trigger and run your code has been open-source but there were other things that made people choose things like",
    "start": "394180",
    "end": "399760"
  },
  {
    "text": "servlet in the cloud things like that scaling that I talked about so one of the things that we've been working with and talking",
    "start": "399760",
    "end": "406060"
  },
  {
    "text": "to the community some partners like red hat is how can we start to bring more of these experiences to that other side to",
    "start": "406060",
    "end": "412960"
  },
  {
    "text": "where you don't want to have lock-in to a specific vendor like Azure but you want to run these service workloads anywhere one of the first things that we",
    "start": "412960",
    "end": "419980"
  },
  {
    "text": "noticed from some of our learnings is that by default kubernetes is not very well suited for event-driven scaling and",
    "start": "419980",
    "end": "427540"
  },
  {
    "text": "that's because by default kubernetes can really only do resource based scaling looking at CPU and memory and in many",
    "start": "427540",
    "end": "433780"
  },
  {
    "text": "ways I think that's like treating the symptom and not the cause yes a bunch of cue messages will eventually cause the",
    "start": "433780",
    "end": "439990"
  },
  {
    "text": "CPUs to rise but the real thing I want to be able to scale on is oh there's a million cue messages here that need to",
    "start": "439990",
    "end": "446200"
  },
  {
    "text": "get processed and that's just not what kubernetes is doing by default so we looked at this we looked at some of the",
    "start": "446200",
    "end": "451480"
  },
  {
    "text": "learnings that we had and the thing that we kind of developed and released again in partnership with Red Hat was kaida so",
    "start": "451480",
    "end": "458800"
  },
  {
    "text": "this just went 1.0 this week on Tuesday and kada is that event-driven scale",
    "start": "458800",
    "end": "464950"
  },
  {
    "text": "controlling that can run inside of any kubernetes cluster so kada can monitor",
    "start": "464950",
    "end": "471130"
  },
  {
    "text": "the rate of events to proactively scale a container even before the CPU has been",
    "start": "471130",
    "end": "476200"
  },
  {
    "text": "impacted so in the example of queues that I was using Keita can actually say oh wow there's a million queue messages",
    "start": "476200",
    "end": "482560"
  },
  {
    "text": "here I need to hurry and scale out to a bunch of replicas I can't just wait for the autoscaler defaults to scale it out",
    "start": "482560",
    "end": "489300"
  },
  {
    "text": "it's all it's doing behind the scenes is just feeding this data into the native kubernetes api so we didn't reinvent",
    "start": "489300",
    "end": "496000"
  },
  {
    "text": "anything here it allows containers to scale to and from zero as well in the same way that a function or a lambda in",
    "start": "496000",
    "end": "502660"
  },
  {
    "text": "the cloud can scale to and from zero it's completely open source we just worked with the service working group",
    "start": "502660",
    "end": "508270"
  },
  {
    "text": "and got buy-off we're not working with the Oversight Committee and our plan is to onboard this to the CNC F in the",
    "start": "508270",
    "end": "514330"
  },
  {
    "text": "coming months all right I was eating some popcorn before I think at a kernel stuck in my throat",
    "start": "514330",
    "end": "519599"
  },
  {
    "text": "anyway so onboarding to the CNC F which we're excited about an install into any",
    "start": "519600",
    "end": "525910"
  },
  {
    "text": "cluster so kate is very non-intrusive you can pop it into a cluster e where you already have deployments and you",
    "start": "525910",
    "end": "532090"
  },
  {
    "text": "could just map it to only scale things you want to it's not a decision that's gonna change everything and it's got a bunch of extensible trigger",
    "start": "532090",
    "end": "538400"
  },
  {
    "text": "sources it knows about as your events it knows about Kafka rabbitmq Nats Redis AWS GCP a lot of contributions from the",
    "start": "538400",
    "end": "547430"
  },
  {
    "text": "community as well to improve this library so to kind of show you this in action I'm just gonna do a very quick demo I have a cluster already set up and",
    "start": "547430",
    "end": "555680"
  },
  {
    "text": "the only thing I have in this cluster right now is well first I've already installed the k2 operator which I'll go",
    "start": "555680",
    "end": "561950"
  },
  {
    "text": "into how that works in a second and then I have this RabbitMQ consumer this",
    "start": "561950",
    "end": "567080"
  },
  {
    "text": "container that's going to trigger and consume rabbitmq events and you'll notice right now it's scaled all the way",
    "start": "567080",
    "end": "573200"
  },
  {
    "text": "to zero and the reason it's scaled all the way to zero is because k2 knows that there's nothing on that queue that it",
    "start": "573200",
    "end": "579650"
  },
  {
    "text": "needs to run let me actually switch to the right directory so what I'm gonna do here is I'm gonna run this job that will",
    "start": "579650",
    "end": "586850"
  },
  {
    "text": "publish a thousand messages to this queue let's go ahead and watch what happens you'll see the job spinning up",
    "start": "586850",
    "end": "592850"
  },
  {
    "text": "the job just completed so it's publishing those messages and right away you'll see that a consumer has just",
    "start": "592850",
    "end": "599120"
  },
  {
    "text": "popped up Keita noticed oh there's actually work to be done here and it's now added one but even before I finish",
    "start": "599120",
    "end": "604820"
  },
  {
    "text": "this sentence it's not just waiting for the CPU Keita actually can see oh there's actually a thousand messages",
    "start": "604820",
    "end": "610730"
  },
  {
    "text": "here we want to be able to very rapidly scale out so I'm already at four I would guess by the time that I get to the end",
    "start": "610730",
    "end": "616940"
  },
  {
    "text": "of this next sentence it will scale out to eight there we go like magic it's gonna continue to scale out this bursty",
    "start": "616940",
    "end": "623060"
  },
  {
    "text": "serverless scale consume those messages and if we left this open for about thirty seconds once that queue is empty",
    "start": "623060",
    "end": "629300"
  },
  {
    "text": "Keita will help drive the scaling decisions to bring that all the way back down to zero so I'm providing these",
    "start": "629300",
    "end": "634850"
  },
  {
    "text": "service container x' to consume compute only when I need them because Keita is helping kubernetes know I only need",
    "start": "634850",
    "end": "641690"
  },
  {
    "text": "these containers to run when there's actually events to process it's a very simple demo there to see kind of that in",
    "start": "641690",
    "end": "647570"
  },
  {
    "text": "action so you're not just looking at slides so what's happening behind the scenes here as I mentioned there's an operator this you can install with like",
    "start": "647570",
    "end": "654500"
  },
  {
    "text": "a helm chart yam or whatever else super-lightweight entirely written and go it's helping monitor those event",
    "start": "654500",
    "end": "660620"
  },
  {
    "text": "sources at a configurable period and it also has with it those scalars the knowledge of those event sources this",
    "start": "660620",
    "end": "667430"
  },
  {
    "text": "is extensible as well you could write a G RPC discoverable scale or you can contribute directly to Keita",
    "start": "667430",
    "end": "673160"
  },
  {
    "text": "and the other pieces here is the metrics API that kubernetes exposes already in",
    "start": "673160",
    "end": "679250"
  },
  {
    "text": "the horizontal pod autoscaler that knows how to talk to that metrics api and the other piece i have here is my event",
    "start": "679250",
    "end": "685130"
  },
  {
    "text": "source and the demo i just said it was rabbitmq this could be Kafka it could be AWS SQS right could be anything and now",
    "start": "685130",
    "end": "692690"
  },
  {
    "text": "the last thing I have is I've got my deployment I have my actual deployment my set of containers that I need to run",
    "start": "692690",
    "end": "698870"
  },
  {
    "text": "in kubernetes in the way that I describe my relationship between the deployment",
    "start": "698870",
    "end": "704000"
  },
  {
    "text": "and the event source is with this custom resource called the scaled object so I don't know how much you can read this",
    "start": "704000",
    "end": "709880"
  },
  {
    "text": "now I know the fonts a little bit greyed out all this really has is it says hey what's the deployment that I'm scaling",
    "start": "709880",
    "end": "715670"
  },
  {
    "text": "that scaled target reference which I'm calling my deployment here I can set some metadata like how frequently to",
    "start": "715670",
    "end": "721730"
  },
  {
    "text": "pull for events you can control minimums and maximums if you want to make sure maybe you never want to scale to zero",
    "start": "721730",
    "end": "727610"
  },
  {
    "text": "maybe you never want to scale about 60 and then you can just define the metadata for your event source like in",
    "start": "727610",
    "end": "733220"
  },
  {
    "text": "this case hey I want to listen to Kafka this is where to find Kafka this is the consumer group I care about and this lag",
    "start": "733220",
    "end": "738980"
  },
  {
    "text": "threshold thing that lets you control how aggressively it scales sometimes the single message might represent a lot of",
    "start": "738980",
    "end": "745459"
  },
  {
    "text": "work so you want to scale out very aggressively and other times a thousand messages might just be a second of work",
    "start": "745459",
    "end": "751339"
  },
  {
    "text": "so you want it to scale more conservatively you have some options here to control that more as you need so",
    "start": "751339",
    "end": "758540"
  },
  {
    "text": "once I'm ready to go I can then just apply that deployment to kubernetes throw it in there in this case like I",
    "start": "758540",
    "end": "765290"
  },
  {
    "text": "did before I've grade it out it's scaled to zero and all the Keita operator is doing now is it identified that scaled",
    "start": "765290",
    "end": "772640"
  },
  {
    "text": "object and it just constantly is asking that event source how many events are being generated right is there work to",
    "start": "772640",
    "end": "779180"
  },
  {
    "text": "be done here and eventually a queue message or a Kafka stream message or whatever else is going to land on that",
    "start": "779180",
    "end": "784940"
  },
  {
    "text": "event source k-tiz can identify it and just like you saw my demo it's going to scale it up to",
    "start": "784940",
    "end": "789950"
  },
  {
    "text": "one and then potentially help the HPA and again the HPA is doing all the scaling here kate is just feeding at the",
    "start": "789950",
    "end": "796940"
  },
  {
    "text": "right data eventually scaled out to as many as you need okay so that's kind of how Keita works in a",
    "start": "796940",
    "end": "803060"
  },
  {
    "text": "nutshell and there were a few core principles that we as a community had as",
    "start": "803060",
    "end": "808070"
  },
  {
    "text": "we were building kata the first one is we didn't want to rebuild that kubernetes already offered out-of-the-box kubernetes has an auto",
    "start": "808070",
    "end": "814790"
  },
  {
    "text": "scaler great let's use that one kubernetes has a metrics concept let's use that concept it's just augmenting what was out of the",
    "start": "814790",
    "end": "821810"
  },
  {
    "text": "box with additional data and insights and capabilities to bring up these service workloads it is also extremely",
    "start": "821810",
    "end": "828050"
  },
  {
    "text": "single purpose it's not a service platform this is not trying to do everything it only does one thing",
    "start": "828050",
    "end": "834290"
  },
  {
    "text": "event-driven scaling and it tries to do that one thing very well super simple very non intrusive to see",
    "start": "834290",
    "end": "841160"
  },
  {
    "text": "RDS and that's it just that single operator running in a cluster it can work with any container in any workload",
    "start": "841160",
    "end": "847700"
  },
  {
    "text": "I'll show you later today you could you could take that container it could be running your own custom code it could be running an Asscher function doesn't",
    "start": "847700",
    "end": "853610"
  },
  {
    "text": "matter any workload if it has an event source cated knows how to scale it we",
    "start": "853610",
    "end": "859100"
  },
  {
    "text": "also in kind of a design principle and what makes kata different and we'll get to this a little bit too we wanted to",
    "start": "859100",
    "end": "864860"
  },
  {
    "text": "make sure that application developers could take advantage of all of the features that make message brokers great",
    "start": "864860",
    "end": "871089"
  },
  {
    "text": "RabbitMQ Kafka Nats all of these have really rich pieces of functionality that",
    "start": "871089",
    "end": "876320"
  },
  {
    "text": "can improve my application we didn't want that to get lost in the translation of bringing service containers and then",
    "start": "876320",
    "end": "883430"
  },
  {
    "text": "finally is open built with the community which will go into more - there's one scenario I want to call out quickly it's",
    "start": "883430",
    "end": "889670"
  },
  {
    "text": "important to note when you think about these rapid scale out and also rapid scale in and that's what do I do if I",
    "start": "889670",
    "end": "896600"
  },
  {
    "text": "have a long-running execution this came up very early with kada it came up with a few of our customers that we're working with where they were like hey",
    "start": "896600",
    "end": "903170"
  },
  {
    "text": "yeah Jeff and your demo you dropped a thousand rabbitmq messages and you pretty much just printed out hello world",
    "start": "903170",
    "end": "908860"
  },
  {
    "text": "but what if every cue message actually represented a significant amount of work what if every cue message is a video",
    "start": "908860",
    "end": "915650"
  },
  {
    "text": "that has to be transcoded that's going to take 8 hours and the problem here can",
    "start": "915650",
    "end": "920839"
  },
  {
    "text": "be imagine I drop a thousand videos that need to be transcoded ok to cease it",
    "start": "920839",
    "end": "925880"
  },
  {
    "text": "you've configured your scale settings enough and k2 scales you out to a number of different replicas and I've it here",
    "start": "925880",
    "end": "932300"
  },
  {
    "text": "there could be like a progress bar this is how far they are on their eight-hour job okay you can see instance two and three are",
    "start": "932300",
    "end": "938120"
  },
  {
    "text": "close to being done one in four have just got started well the challenge is kate is feeding these metrics into the HPA and at some",
    "start": "938120",
    "end": "945889"
  },
  {
    "text": "point the HPA might say hey you know what the Q's actually slowing down a lot we maybe don't need four instances",
    "start": "945889",
    "end": "952579"
  },
  {
    "text": "anymore let's go ahead and start to scale down and the way HPA works the way I like to think about it is that the HPA is very",
    "start": "952579",
    "end": "960199"
  },
  {
    "text": "much like vanos and that it's gonna snap its fingers and it's gonna get rid of a bunch of my instances but it has no",
    "start": "960199",
    "end": "966259"
  },
  {
    "text": "regard if you are spider-man or Iron Man it's just gonna snap its fingers so the problem here with kada is that if I'm",
    "start": "966259",
    "end": "972410"
  },
  {
    "text": "seven hours into an eight hour job and the HPA snaps its fingers it's very possible that the thing that only needed",
    "start": "972410",
    "end": "979279"
  },
  {
    "text": "ten more minutes just got killed and so we were trying to figure out how do we solve for these more kind of advanced",
    "start": "979279",
    "end": "985399"
  },
  {
    "text": "messaging workloads that might be long running so there's two options that we have to combat Thanos we call them Hulk",
    "start": "985399",
    "end": "991639"
  },
  {
    "text": "and Iron Man this presentation is full of spoilers by the way so if the words baby Yoda or if you're sensitive to",
    "start": "991639",
    "end": "998689"
  },
  {
    "text": "those words you might just want to leave now okay so there's two options you have",
    "start": "998689",
    "end": "1004209"
  },
  {
    "text": "here option one you can just leverage the out-of-the-box kubernetes life cycle",
    "start": "1004209",
    "end": "1009459"
  },
  {
    "text": "so kubernetes does a few things it can do like pre hooks it sends a signal to",
    "start": "1009459",
    "end": "1015939"
  },
  {
    "text": "delay termination if you're one hour into an eight-hour job kubernetes can",
    "start": "1015939",
    "end": "1020980"
  },
  {
    "text": "say hey i want to scale you down and you can be just hold on a minute and you can tell - just hold on a minute for hours",
    "start": "1020980",
    "end": "1026620"
  },
  {
    "text": "and hours and hours it works some people don't like it a whole bunch because you see it as a terminating state for eight",
    "start": "1026620",
    "end": "1032860"
  },
  {
    "text": "hours but it's an option the other option that's really cool here is that while we've been talking a lot about",
    "start": "1032860",
    "end": "1038529"
  },
  {
    "text": "scaling deployments with Keita you can also tell it you know what I have an event source here but for every event I",
    "start": "1038529",
    "end": "1044860"
  },
  {
    "text": "actually want you to create a job and in that case Keita will schedule a job for every event you can control the",
    "start": "1044860",
    "end": "1051100"
  },
  {
    "text": "parallelism and those jobs can run to completion so in the video example I",
    "start": "1051100",
    "end": "1056110"
  },
  {
    "text": "might have a thousand things drop in that queue Keita will spin up a few jobs wait for a job to complete clean it up",
    "start": "1056110",
    "end": "1062860"
  },
  {
    "text": "spin up another one and that way I don't have to worry about running to completion so the patterns a little different the intent of those jobs would",
    "start": "1062860",
    "end": "1069700"
  },
  {
    "text": "be grabbed one event process it to completion and then terminate but it works it's a really useful pattern that",
    "start": "1069700",
    "end": "1075850"
  },
  {
    "text": "I wanted to make sure I called out here to enable those long-running scenarios alright let's see what I have next oh",
    "start": "1075850",
    "end": "1081250"
  },
  {
    "text": "this is a great discussion point before we get to the last demo is this the best way to do a vent driven okay and I",
    "start": "1081250",
    "end": "1087820"
  },
  {
    "text": "specifically use the word the best because that's a very loaded question there's very rarely ever the best way to",
    "start": "1087820",
    "end": "1094030"
  },
  {
    "text": "do anything but I did want to present some of the reasons that we feel the pattern of how kada is doing",
    "start": "1094030",
    "end": "1099400"
  },
  {
    "text": "event-driven containers is useful and a useful tool to have in your toolbox and there's a few patterns that are pretty",
    "start": "1099400",
    "end": "1106179"
  },
  {
    "text": "common here especially in the world of server lists and we're not the only ones who do it this way and there's not just",
    "start": "1106179",
    "end": "1111820"
  },
  {
    "text": "one one project or one company who does things the alternative approach but these are kind of the two most common",
    "start": "1111820",
    "end": "1117669"
  },
  {
    "text": "ways to handle event ribbon so how kate is doing it and some others like nucleo is that you have your event source and",
    "start": "1117669",
    "end": "1123400"
  },
  {
    "text": "the thing that's actually consuming those events the thing the developer is writing they're in charge of actually",
    "start": "1123400",
    "end": "1129640"
  },
  {
    "text": "connecting and pulling that event directly from RabbitMQ or Kafka the other alternative that's super common",
    "start": "1129640",
    "end": "1136179"
  },
  {
    "text": "for a bunch of server list platforms and frameworks is that you have your event source but all the developer rights is",
    "start": "1136179",
    "end": "1142360"
  },
  {
    "text": "an HTTP container the whole world is HTTP all I have to think about is I'm gonna write an event driven container",
    "start": "1142360",
    "end": "1148690"
  },
  {
    "text": "expose an HTTP endpoint and then there's some channel or adapter or something else that actually is converting those",
    "start": "1148690",
    "end": "1155080"
  },
  {
    "text": "messages you can imagine it's Kafka something's pulling those messages of Kafka and then throwing out HTTP",
    "start": "1155080",
    "end": "1161470"
  },
  {
    "text": "requests to any service containers that are interested so there's pros and cons to both of these approaches but I want",
    "start": "1161470",
    "end": "1167740"
  },
  {
    "text": "to help explain where where kata kind of fits in here so let's look at the one I talked about the alternative approach",
    "start": "1167740",
    "end": "1173100"
  },
  {
    "text": "the big Pro here is that if I'm a server list developer if I'm a developer wants",
    "start": "1173100",
    "end": "1178360"
  },
  {
    "text": "to do an event trip in container I only I don't have to know anything about how to use the SDKs SDKs can be a pain in",
    "start": "1178360",
    "end": "1184030"
  },
  {
    "text": "the butt to use I don't have to think about that in this model I just think about exposing an HTTP",
    "start": "1184030",
    "end": "1189370"
  },
  {
    "text": "endpoint which every language has a great example of how to do everything becomes HTTP everything becomes G RPC so",
    "start": "1189370",
    "end": "1196360"
  },
  {
    "text": "that's great but there are some cons here as well it becomes much harder for a developer to leverage some of the",
    "start": "1196360",
    "end": "1203290"
  },
  {
    "text": "native event capabilities think of a cue message I don't know how many of you have used a lot of cue technologies",
    "start": "1203290",
    "end": "1208540"
  },
  {
    "text": "before but when you're consuming messages from a cue there's often this very common gesture where you lock the",
    "start": "1208540",
    "end": "1214210"
  },
  {
    "text": "cue message to say I'm working on it and as your developer in your code you actually have a few choices you can make",
    "start": "1214210",
    "end": "1220150"
  },
  {
    "text": "you can say I've completed processing which DQ's the message and it will never get processed again you can abandon that",
    "start": "1220150",
    "end": "1227830"
  },
  {
    "text": "message you can say hey something's gone wrong I wasn't able to finish doing this someone else should go try to do this",
    "start": "1227830",
    "end": "1234010"
  },
  {
    "text": "one again and abandon it and then the third choice is you can dead-letter it you could back you know what this message is crap no one should waste",
    "start": "1234010",
    "end": "1240340"
  },
  {
    "text": "their time on this message again I'm gonna explicitly dead-letter it so even just with queues there's these three distinct options if I'm in this world",
    "start": "1240340",
    "end": "1247870"
  },
  {
    "text": "where my code has been separated from the event source by this middle layer it",
    "start": "1247870",
    "end": "1253120"
  },
  {
    "text": "becomes much harder for me to know how do I do an HTTP response that may be an abandoned may be a complete and it may",
    "start": "1253120",
    "end": "1260200"
  },
  {
    "text": "be a dead letter it's a lot harder for me to reason around it I have to re-engineer those patterns for every single event source some context will",
    "start": "1260200",
    "end": "1267190"
  },
  {
    "text": "also always be lost in transition as you're converting something from a rich type and then transferring it to a bunch",
    "start": "1267190",
    "end": "1272680"
  },
  {
    "text": "of headers in a body there's always going to be some stuff that's gonna have to get lost in the mix especially when you wanna make it language agnostic so",
    "start": "1272680",
    "end": "1279490"
  },
  {
    "text": "it's a trade-off you have to be aware of it also becomes really difficult to do some of those common patterns like",
    "start": "1279490",
    "end": "1284830"
  },
  {
    "text": "ordering I mentioned in the example before Best Buy really wanted service but they really needed ordering we work",
    "start": "1284830",
    "end": "1291070"
  },
  {
    "text": "with a bunch of financial customers who very much care when Jeff when Jeff bought Microsoft stock when Microsoft",
    "start": "1291070",
    "end": "1297760"
  },
  {
    "text": "stock went down and when chef sold that stock the order of those three events are extremely extremely important okay",
    "start": "1297760",
    "end": "1304750"
  },
  {
    "text": "so I need ordering but if I have this middle layer it's hard for me when I'm shooting off all these HTTP events to",
    "start": "1304750",
    "end": "1310930"
  },
  {
    "text": "make sure that HTTP requests one got processed and completed before you should be event two there's ways around",
    "start": "1310930",
    "end": "1316240"
  },
  {
    "text": "it you could be I actually only send one request at a time and wait for it to finish and then send the next one but",
    "start": "1316240",
    "end": "1322450"
  },
  {
    "text": "again things like Kafka just have this out of the box it's like grab a whole batch of messages process of an order",
    "start": "1322450",
    "end": "1328000"
  },
  {
    "text": "super high throughput super high control the only other one I'll flag this is more of an it too",
    "start": "1328000",
    "end": "1334660"
  },
  {
    "text": "somebody has to worry about the SD case someone has to make sure that the events are successfully getting pulled from",
    "start": "1334660",
    "end": "1340150"
  },
  {
    "text": "something like Kafka in this model if it's not the developer then it's someone",
    "start": "1340150",
    "end": "1345580"
  },
  {
    "text": "else who has to make sure that all these events adapters are working they're connected to the right sources and that they're everything making work and in my",
    "start": "1345580",
    "end": "1352720"
  },
  {
    "text": "mind very often as a developer I'm okay being aware of the fact I'm pulling from Kafka and I'll be the one who worries",
    "start": "1352720",
    "end": "1358600"
  },
  {
    "text": "about that SDK ok so again this isn't necessarily wrong it's not necessarily right but there's important trade-offs",
    "start": "1358600",
    "end": "1364690"
  },
  {
    "text": "here and that's why with kada we just wanted to call out this is a different approach right kata will monitor the",
    "start": "1364690",
    "end": "1370210"
  },
  {
    "text": "rate of events and it's going to scale your container but it assumes that your container is going to connect with a",
    "start": "1370210",
    "end": "1375940"
  },
  {
    "text": "whatever protocol it wants to this could be HTTP it could be AMQP it could be mqtt I don't know there's 1,800",
    "start": "1375940",
    "end": "1382510"
  },
  {
    "text": "different ways to pull messages from something but here we can support them all without having to build adapters",
    "start": "1382510",
    "end": "1388060"
  },
  {
    "text": "that can do the translation layer okay so something I wanted to kind of pause it into this room now the downside to",
    "start": "1388060",
    "end": "1396190"
  },
  {
    "text": "this approach though is that SDK suck okay I don't care what SDK you're using",
    "start": "1396190",
    "end": "1401290"
  },
  {
    "text": "they all suck so for example I love rabbitmq I really do this is an example",
    "start": "1401290",
    "end": "1406810"
  },
  {
    "text": "of the hello world rabbitmq Python example and so if I kind of just scroll",
    "start": "1406810",
    "end": "1413320"
  },
  {
    "text": "through this code all this is really doing is it's pulling a message from RabbitMQ imprinting hello world but I",
    "start": "1413320",
    "end": "1419650"
  },
  {
    "text": "need all this code to just establish the connection peek the message all those other things that's a whole bunch of",
    "start": "1419650",
    "end": "1425740"
  },
  {
    "text": "code that if you're using the alternative approach the developer doesn't have to right so the only last",
    "start": "1425740",
    "end": "1431410"
  },
  {
    "text": "thing I want to show and then I'll do our last Star Wars demo is that this is where we start to think more programming",
    "start": "1431410",
    "end": "1437260"
  },
  {
    "text": "models and programming frameworks can help fill in that gap so I mentioned at the beginning as you're functions is",
    "start": "1437260",
    "end": "1443170"
  },
  {
    "text": "completely open source just ignore the word azure for now we'll take care of that it's all on github it's open",
    "start": "1443170",
    "end": "1448450"
  },
  {
    "text": "sourced this is what an azure function looks like that's doing the exact same task I just say I have a function I care",
    "start": "1448450",
    "end": "1455290"
  },
  {
    "text": "about a queue print hello world now the SDK is still there but it's managed by",
    "start": "1455290",
    "end": "1460360"
  },
  {
    "text": "the azure functions runtime so as a developer I can say I want to write a service function just write my four",
    "start": "1460360",
    "end": "1466330"
  },
  {
    "text": "lines of code still use kata it's still doing peak walking behind the scenes and I can even pass an SDKs to",
    "start": "1466330",
    "end": "1472570"
  },
  {
    "text": "say complete abandon checkpoint whatever but I'm not having to worry about it in my face as much okay so is this where it",
    "start": "1472570",
    "end": "1480160"
  },
  {
    "text": "no not quite where I do it so you might be looking at this and thinking Jeff why are you talking about Azure again we were talking about kata and kubernetes",
    "start": "1480160",
    "end": "1486570"
  },
  {
    "text": "you can take any Azure function you can run an it docker only and kubernetes",
    "start": "1486570",
    "end": "1493000"
  },
  {
    "text": "deploy and you can deploy any Azure function that you write wherever you want to you could deploy it to Asher you",
    "start": "1493000",
    "end": "1499179"
  },
  {
    "text": "could deploy it to Google you could deploy it and run it on premises you don't pay us anything there's no license we don't care you can take that as your",
    "start": "1499179",
    "end": "1506080"
  },
  {
    "text": "function and run it wherever you want to so with that here is our final demo this is a fun one so what I have here what I",
    "start": "1506080",
    "end": "1511840"
  },
  {
    "text": "want to build I have here a dashboard in power bi and you might be thinking Jeff",
    "start": "1511840",
    "end": "1518200"
  },
  {
    "text": "is a cube Conway's at miss crow fauna and to that I would say I don't know how to use crow fauna but that's okay you",
    "start": "1518200",
    "end": "1524230"
  },
  {
    "text": "could do this ingre fauna I'm very confident so this dashboard is very empty and lonely right now and what I",
    "start": "1524230",
    "end": "1530410"
  },
  {
    "text": "want to do is that for those of you who are unaware Twitter is a flurry right now with information about Star Wars",
    "start": "1530410",
    "end": "1537280"
  },
  {
    "text": "everything from Star Wars land to baby oh de to the rise of Skywalker Ben solo",
    "start": "1537280",
    "end": "1542950"
  },
  {
    "text": "was trending yesterday but I was too afraid to dig into why so I want to be",
    "start": "1542950",
    "end": "1548290"
  },
  {
    "text": "able to write a service app that can scale to the volume of all these tweets happening about Star Wars and populate",
    "start": "1548290",
    "end": "1554470"
  },
  {
    "text": "this dashboard with some insight about it and so to do that I'm going to use my",
    "start": "1554470",
    "end": "1559720"
  },
  {
    "text": "favorite tool the visual studio code and I have a Kafka stream that I've been publishing every tweet in real-time to",
    "start": "1559720",
    "end": "1566770"
  },
  {
    "text": "Kafka now I have here an azure function so you'll notice there's no code here",
    "start": "1566770",
    "end": "1572200"
  },
  {
    "text": "about Kafka I've just said hey I want a Kafka trigger you worry about pulling the messages from Kafka I'm gonna pull",
    "start": "1572200",
    "end": "1578679"
  },
  {
    "text": "in these events in order process them in order you know this is in typescript could have done this in Python whatever",
    "start": "1578679",
    "end": "1585070"
  },
  {
    "text": "Java and here I'm just gonna pull in the Twitter event I'm going to grab I'm",
    "start": "1585070",
    "end": "1591640"
  },
  {
    "text": "gonna run some sentiment analysis on it are they happy about Star Wars are they angry about Star Wars I assume everyone's happy about Star",
    "start": "1591640",
    "end": "1597970"
  },
  {
    "text": "Wars maybe should I bring up the last Jedi though that's a more controversy",
    "start": "1597970",
    "end": "1603260"
  },
  {
    "text": "and then the last thing I'm gonna do I'm just going to make a simple HTTP post to that real-time dashboard now what's nice",
    "start": "1603260",
    "end": "1609800"
  },
  {
    "text": "here and one of the things that makes this programming model nice I can go ahead and set a breakpoint press f5 to",
    "start": "1609800",
    "end": "1617420"
  },
  {
    "text": "start spinning up and actually run that open source as your functions runtime directly on my machine you'll see here's",
    "start": "1617420",
    "end": "1624230"
  },
  {
    "text": "the beautiful ASCII art also represented on my shirt saying okay we're gonna spin up we're gonna look at this app we're",
    "start": "1624230",
    "end": "1630800"
  },
  {
    "text": "going to load up the user code that Jeff wrote here it actually already pulled a",
    "start": "1630800",
    "end": "1636560"
  },
  {
    "text": "tweet so you can see I hit my breakpoint let's just step through this a bit whatever tweet this was it's got a score",
    "start": "1636560",
    "end": "1642620"
  },
  {
    "text": "of zero so it's neutral and we could even come in here and see what is this tweet about hopefully there's Star Wars",
    "start": "1642620",
    "end": "1649640"
  },
  {
    "text": "the Mandalorian Disney Plus baby Yoda I warned you I warned you it mentioned",
    "start": "1649640",
    "end": "1655910"
  },
  {
    "text": "baby onna ok so I can break point to bug this and when I'm ready to go I can publish it but let's just not do a",
    "start": "1655910",
    "end": "1662180"
  },
  {
    "text": "boring publish let's do an exciting publish so I'm just gonna one run more command I'm gonna switch the context of",
    "start": "1662180",
    "end": "1668420"
  },
  {
    "text": "my cube CTL I'm gonna connect to Google Cloud so I'm gonna switch here let's do this whole thing on Google so I've just",
    "start": "1668420",
    "end": "1675320"
  },
  {
    "text": "switched over to a kubernetes cluster running on Google cloud and here's where I can run the funk kubernetes deploy",
    "start": "1675320",
    "end": "1680960"
  },
  {
    "text": "it's gonna look at this Asscher function it's gonna put it inside of a docker container build that container publish",
    "start": "1680960",
    "end": "1687680"
  },
  {
    "text": "it to my registry public or private and then deploy that to my cluster now I don't want to have to worry about Wi-Fi",
    "start": "1687680",
    "end": "1693710"
  },
  {
    "text": "and publishing this image so I actually already built the image this morning so let's just go ahead and apply it quickly not that one so I took that function and",
    "start": "1693710",
    "end": "1706850"
  },
  {
    "text": "I just deployed it and here we'll switch to this screen where it's a little bit bigger I could do the same thing where I",
    "start": "1706850",
    "end": "1712700"
  },
  {
    "text": "say watch pods and you'll notice as soon as I deployed it it's actually already said there's actually a bunch of tweets",
    "start": "1712700",
    "end": "1718610"
  },
  {
    "text": "happening so it's spun up one of my Azure functions in Google Cloud kubernetes and I would imagine to an",
    "start": "1718610",
    "end": "1725180"
  },
  {
    "text": "assuming you can all participate in the room as well if you tweet anything about Star Wars there's enough tweets happening right now it's automatically",
    "start": "1725180",
    "end": "1731270"
  },
  {
    "text": "scaled me out to four of those functions so now the real moment of truth when we switch back to the - bored this has now come to life with",
    "start": "1731270",
    "end": "1739430"
  },
  {
    "text": "real-time data the real-time sentiment you can see that heartbeat of everyone in the world who's tweeting about Star",
    "start": "1739430",
    "end": "1745010"
  },
  {
    "text": "Wars right now I see some tweets coming from over here in San Diego so way to go room way to participate right so we can",
    "start": "1745010",
    "end": "1752270"
  },
  {
    "text": "see here there's a bunch of weird hashtags I don't see anything hopefully nothing inappropriate this is unfiltered",
    "start": "1752270",
    "end": "1758150"
  },
  {
    "text": "but that just gives you the idea is there something bad here I hope not yesterday yesterday when I was testing",
    "start": "1758150",
    "end": "1765320"
  },
  {
    "text": "it there was something suggestive in one of the tweets and I was like please do not retweet this in the middle of my presentation people just need to figure",
    "start": "1765320",
    "end": "1773000"
  },
  {
    "text": "their lives out but again this is this is a really cool way that in in the 40",
    "start": "1773000",
    "end": "1779090"
  },
  {
    "text": "lines of azor functions runtime code by deploying this to kubernetes in this",
    "start": "1779090",
    "end": "1784370"
  },
  {
    "text": "case Google turning on Keita with that serverless scale I've been able to write a server this app that can scale to",
    "start": "1784370",
    "end": "1790220"
  },
  {
    "text": "millions of events but run it wherever I want no vendor lock-in event-driven scale event driven containers whatever I",
    "start": "1790220",
    "end": "1796280"
  },
  {
    "text": "need okay so that's a fun way to see what you can start to do with this stuff so that's it that's all I had to share",
    "start": "1796280",
    "end": "1802070"
  },
  {
    "text": "today we'll have a little bit of time for questions if there's any a few resources if you're interesting",
    "start": "1802070",
    "end": "1807560"
  },
  {
    "text": "kaida SH that's the landing page it will give you the docs the deployment scripts everything you need the code is all on",
    "start": "1807560",
    "end": "1814430"
  },
  {
    "text": "github and we also have community stand-ups every Thursday so if you're interested in participating you want to",
    "start": "1814430",
    "end": "1820250"
  },
  {
    "text": "help with the design you have feature requests you want to contribute some scalars Docs samples whatever we love it",
    "start": "1820250",
    "end": "1825680"
  },
  {
    "text": "all please I would encourage you to join those stand-ups thank you all very much again you've been so welcoming I",
    "start": "1825680",
    "end": "1831470"
  },
  {
    "text": "mentioned this was my first cube con I really hope I get to go to more of these this has been such a fun conference my twitter handles there at the very bottom",
    "start": "1831470",
    "end": "1837770"
  },
  {
    "text": "at Jeff Holland as well if you have any questions as well so with that we do have like three minutes if there's any",
    "start": "1837770",
    "end": "1843650"
  },
  {
    "text": "questions in the room we can answer them here but thank you all very much it's been a pleasure",
    "start": "1843650",
    "end": "1848980"
  },
  {
    "text": "thanks Jeff okay I will run around with questions and just before that please do",
    "start": "1853660",
    "end": "1858980"
  },
  {
    "text": "remember to rate the session on sket comm please do I didn't know it was",
    "start": "1858980",
    "end": "1864080"
  },
  {
    "text": "first but I'll go for who its closest so excellent presentation so I'm fairly new",
    "start": "1864080",
    "end": "1871910"
  },
  {
    "text": "to the kubernetes OpenShift and those sets of technologies I've heard of K",
    "start": "1871910",
    "end": "1877430"
  },
  {
    "text": "native service technology but don't know the details of it but I was wondering if you could compare and contrast K native",
    "start": "1877430",
    "end": "1885140"
  },
  {
    "text": "Takeda and where there's any intersection or how they integrate with one another overlap things like that great question",
    "start": "1885140",
    "end": "1892430"
  },
  {
    "text": "thank you I think from the the biggest one k native is an entire I kind of mentioned kata super single purpose it only does",
    "start": "1892430",
    "end": "1898610"
  },
  {
    "text": "the event-driven scale thing K native is like a full platform it's got Candide of serving Candide of eventing event-driven",
    "start": "1898610",
    "end": "1904970"
  },
  {
    "text": "scale is one of the ten things that Canada can do so that's one of the big",
    "start": "1904970",
    "end": "1910100"
  },
  {
    "text": "differences in considerations it's still evolving we're actually even just this morning we've been working with the K",
    "start": "1910100",
    "end": "1916040"
  },
  {
    "text": "Native team to see what opportunities there might be there so kata itself is very single purpose the only other",
    "start": "1916040",
    "end": "1921350"
  },
  {
    "text": "difference is K native eventing today does use that kind of alternate eventing strategy that I talked about where Kate",
    "start": "1921350",
    "end": "1927890"
  },
  {
    "text": "is different so there there's kind of a change there but you can also mix and match these two like we've been working",
    "start": "1927890",
    "end": "1933530"
  },
  {
    "text": "I mentioned with red hat red hats obviously involved with K native they're using K native with kata and they even",
    "start": "1933530",
    "end": "1940220"
  },
  {
    "text": "have customers who are using that width as your function so there is a bit of mixing and matching kata though very single purpose Canada is a much broader",
    "start": "1940220",
    "end": "1947540"
  },
  {
    "text": "kind of platform thing I think that's how I'd answer it I'm looking at the K native row to see I'm not seeing any",
    "start": "1947540",
    "end": "1952960"
  },
  {
    "text": "disapproving shake so we'll go with that okay I think of the presentation is",
    "start": "1952960",
    "end": "1960350"
  },
  {
    "text": "there also all just killing for the notes ah great question so this will",
    "start": "1960350",
    "end": "1966580"
  },
  {
    "text": "this comes up very often kata itself won't do the cluster",
    "start": "1966580",
    "end": "1971690"
  },
  {
    "text": "auto-scaling but because it's going to be requesting pods it will drive that so",
    "start": "1971690",
    "end": "1978290"
  },
  {
    "text": "how it work you would set up like a cluster Auto scale rule and say if I need more resources I want you to see",
    "start": "1978290",
    "end": "1983480"
  },
  {
    "text": "out Keita might say I need ten containers that each need one core those",
    "start": "1983480",
    "end": "1989480"
  },
  {
    "text": "scheduling requests will drive the cluster autoscale decision so indirectly it does it just not directly you can",
    "start": "1989480",
    "end": "1996800"
  },
  {
    "text": "also use this to kind of indirectly as well with things like the virtual cubelet or virtual nodes so the one I",
    "start": "1996800",
    "end": "2003130"
  },
  {
    "text": "didn't do it in this demo because I was on Google Cloud but if I did this on aks I might also have those scale out into",
    "start": "2003130",
    "end": "2009040"
  },
  {
    "text": "serverless containers like far gate or ACI and you can also drive scale out",
    "start": "2009040",
    "end": "2014110"
  },
  {
    "text": "into manage containers as well pattern great question a question about the word",
    "start": "2014110",
    "end": "2020440"
  },
  {
    "text": "provisioning do you handle it if you do how a provision of the other pots",
    "start": "2020440",
    "end": "2025780"
  },
  {
    "text": "because you can provision too many of them so maybe it's not necessary because",
    "start": "2025780",
    "end": "2031500"
  },
  {
    "text": "the queue is about to be exhausted right correct yes so there there is always the",
    "start": "2031500",
    "end": "2038320"
  },
  {
    "text": "risk that it's like hey quedas making 18 scheduling requests but maybe two is enough and that's where those knobs in",
    "start": "2038320",
    "end": "2044530"
  },
  {
    "text": "that scaled object of both the aggressiveness that you scale and also the maximums will really come into play",
    "start": "2044530",
    "end": "2049750"
  },
  {
    "text": "especially something like Kafka we actually enforce it on Kafka but it will never scale out beyond the number of",
    "start": "2049750",
    "end": "2055480"
  },
  {
    "text": "partitions that you have available so that you're not over provisioning in that way but kata will do the best that",
    "start": "2055480",
    "end": "2061000"
  },
  {
    "text": "it can with the knowledge that it has but there's also some some responsibility to make sure you've got the right maximums in the right pod",
    "start": "2061000",
    "end": "2067210"
  },
  {
    "text": "requests so you're requesting just the CPU you actually need as well we have time for one more do we have to stop at",
    "start": "2067210",
    "end": "2072429"
  },
  {
    "text": "11:30 sharp case the last one but will also be there's the Microsoft booth upstairs we can answer more there - okay",
    "start": "2072430",
    "end": "2078790"
  },
  {
    "text": "just quick question can you like structure kata to do like workflows like could you say I want to have this",
    "start": "2078790",
    "end": "2084669"
  },
  {
    "text": "execute in a particular order you talked about ordering so could you like save a workflow and then run it you know",
    "start": "2084670",
    "end": "2090940"
  },
  {
    "text": "repeatedly it responds to certain events I haven't tried it there's nothing that would prevent it the one thing that came",
    "start": "2090940",
    "end": "2096310"
  },
  {
    "text": "to mind when you were asking that is there's some workflow tools at least that I'm familiar with like Brigade that let you do like kubernetes jobs and",
    "start": "2096310",
    "end": "2102250"
  },
  {
    "text": "execute a workflow I would imagine that there's a world that you could do the job thing and have that kick off a",
    "start": "2102250",
    "end": "2107770"
  },
  {
    "text": "brigade workflow and it would actually just work so I guess the short answer is I haven't personally tried it I don't",
    "start": "2107770",
    "end": "2113260"
  },
  {
    "text": "think there's anything blocking it but that's a fantastic feature request that even I'll try to mend remember but that's something I'd love",
    "start": "2113260",
    "end": "2119160"
  },
  {
    "text": "to see that kind of stuff to kick off more of these stateful workflows as well yeah okay so that's it thank you all",
    "start": "2119160",
    "end": "2125610"
  },
  {
    "text": "again for coming we'll be if you have other questions about kata you can find us at the booth later today thanks everyone",
    "start": "2125610",
    "end": "2130800"
  },
  {
    "text": "[Applause]",
    "start": "2130800",
    "end": "2133489"
  }
]