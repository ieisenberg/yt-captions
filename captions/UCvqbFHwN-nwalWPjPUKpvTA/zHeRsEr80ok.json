[
  {
    "start": "0",
    "end": "103000"
  },
  {
    "text": "welcome cncf community thanks for giving me the opportunity and joining in to automating sre from hello world to",
    "start": "799",
    "end": "7040"
  },
  {
    "text": "enterprise care with captain this is really an overview and introductory section to our cncf sandbox project captain",
    "start": "7040",
    "end": "14880"
  },
  {
    "text": "i think of all the links here that you need in order to figure out where to find more about captain captain.sage follow",
    "start": "14880",
    "end": "20880"
  },
  {
    "text": "us on the captain project star us on github or join the slack channel i am andy",
    "start": "20880",
    "end": "26720"
  },
  {
    "text": "grabner i'm a deaf rail for captain and if you want to know more about me feel free to reach out",
    "start": "26720",
    "end": "31920"
  },
  {
    "text": "we will also have a live webinar on the cncf webinar schedule coming up next week",
    "start": "31920",
    "end": "37120"
  },
  {
    "text": "so then i will also be joined by jurgen etzel stuffer and we can then both show you more about",
    "start": "37120",
    "end": "42559"
  },
  {
    "text": "captain in life you can ask us questions and then we navigate you through the product but i",
    "start": "42559",
    "end": "47840"
  },
  {
    "text": "really encourage you as a first step if you want to learn more definitely check out our website from",
    "start": "47840",
    "end": "52879"
  },
  {
    "text": "here you can reach all the tutorials you can get access to additional resources like previous",
    "start": "52879",
    "end": "58559"
  },
  {
    "text": "recordings on different use cases uh also testimonials to see how other users are using kept and how they take",
    "start": "58559",
    "end": "65040"
  },
  {
    "text": "the benefit we've also just recently released captain 0.8 so it's march 2021 depending on when you",
    "start": "65040",
    "end": "72320"
  },
  {
    "text": "watch this there might even be newer versions but just to let you know that this is the latest and greatest as of the time of the recording but let",
    "start": "72320",
    "end": "79040"
  },
  {
    "text": "me first go back and give you a little overview and let me get started why we actually built captain because we",
    "start": "79040",
    "end": "85520"
  },
  {
    "text": "built captain to solve a couple of problems that we've seen in our own organization but also with",
    "start": "85520",
    "end": "91600"
  },
  {
    "text": "users in our community one of them was a lot of devops teams are challenged with having very",
    "start": "91600",
    "end": "97200"
  },
  {
    "text": "monolithic automation in the pipelines and it becomes hard to deploy what does this mean an example",
    "start": "97200",
    "end": "104079"
  },
  {
    "start": "103000",
    "end": "103000"
  },
  {
    "text": "is from christian heckleman uh he is a devops engineer and he constantly is challenged",
    "start": "104079",
    "end": "109680"
  },
  {
    "text": "with pipelines that are broken he constantly gets pinged on slack saying pipeline broken please fix he is managing as you",
    "start": "109680",
    "end": "116560"
  },
  {
    "text": "can see at 2 800 projects and 966 ci cd pipelines and this is obviously",
    "start": "116560",
    "end": "123200"
  },
  {
    "text": "challenging especially if things are broken and why are they broken because over the time they became very complex here's one of the screenshots",
    "start": "123200",
    "end": "130720"
  },
  {
    "text": "and this might be something that you can also relate to some of these pipelines start small but all of a sudden",
    "start": "130720",
    "end": "136560"
  },
  {
    "text": "well it escalates well and fast we end up with very complex scripts that are doing a lot of amazing",
    "start": "136560",
    "end": "143280"
  },
  {
    "text": "things but it's really hard to maintain and keep up especially if you then have different permutations so this is the first",
    "start": "143280",
    "end": "148400"
  },
  {
    "text": "problem we see out there and that we want to address with captain the second problem is",
    "start": "148400",
    "end": "153599"
  },
  {
    "text": "that also devops teams or people that are in uh related and in charge of",
    "start": "153599",
    "end": "160319"
  },
  {
    "text": "tool integrations and pipelining um these pipelines tend to contain tool integrations",
    "start": "160319",
    "end": "165920"
  },
  {
    "text": "and they are often custom made custom built and then copy paste it around because of lack of standard",
    "start": "165920",
    "end": "171920"
  },
  {
    "text": "this is an example from dita he's a senior ace engineer here at dynatrace",
    "start": "171920",
    "end": "177120"
  },
  {
    "start": "172000",
    "end": "172000"
  },
  {
    "text": "and he says onboarding or updating pipelines is manual and often error prone now while his environment",
    "start": "177120",
    "end": "182640"
  },
  {
    "text": "is much smaller than what we saw from christian the challenge is that you often start with one pipeline for one",
    "start": "182640",
    "end": "188560"
  },
  {
    "text": "service then you copy and paste and modify small things into the other services so you end up",
    "start": "188560",
    "end": "195920"
  },
  {
    "text": "with a lot of different pipelines for a project and then this multiplies and you have the classical snowflake effect",
    "start": "195920",
    "end": "201840"
  },
  {
    "text": "now what's interesting we've done some analysis so deta has done some analysis to actually see how much duplicated code",
    "start": "201840",
    "end": "208080"
  },
  {
    "text": "we have across all the different pipelines we have in our different projects and it's a very well eye opening to see",
    "start": "208080",
    "end": "215599"
  },
  {
    "text": "that there's a lot of red here which means a lot of duplicated code that means if there are either bugs in there",
    "start": "215599",
    "end": "221040"
  },
  {
    "text": "or something needs to be changed need to change it in many different places and often you don't even know anymore",
    "start": "221040",
    "end": "226159"
  },
  {
    "text": "where the changes this is another problem we want to make this easier because we're spending too much time another problem that we",
    "start": "226159",
    "end": "232400"
  },
  {
    "text": "solve or want to solve is we see a lot of sre teams they're trying to get sre practices around sli slows around",
    "start": "232400",
    "end": "239040"
  },
  {
    "text": "performance testing around chaos engineering at scale into their organization but it's really hard to automate that at",
    "start": "239040",
    "end": "244879"
  },
  {
    "text": "scale triscon so roman fiesta managing director triscon he's been working with",
    "start": "244879",
    "end": "250560"
  },
  {
    "start": "246000",
    "end": "246000"
  },
  {
    "text": "organizations where they're limited to the number of tests they can run per year or the number of apps they can",
    "start": "250560",
    "end": "257040"
  },
  {
    "text": "test and validate against their slos so the reason why they are struggling",
    "start": "257040",
    "end": "262639"
  },
  {
    "text": "with it is because a lot of the stuff is done manually a lot of tests have to be rerun because they only run",
    "start": "262639",
    "end": "269120"
  },
  {
    "text": "you know let's say 15 times a year so a lot of things change between this also means they have only about 10",
    "start": "269120",
    "end": "274800"
  },
  {
    "text": "percent of the projects onboarded in an organization but don't scale they haven't scaled it",
    "start": "274800",
    "end": "280000"
  },
  {
    "text": "across the organization the reasons for all this is because there's a lot of manual time spent in",
    "start": "280000",
    "end": "285520"
  },
  {
    "text": "script creation configure your monitoring analyzing your test results analyzing your slos which you want to do",
    "start": "285520",
    "end": "293360"
  },
  {
    "text": "if you want to get broader with your sre practice not only in production but also bring it across the lifecycle",
    "start": "293360",
    "end": "299520"
  },
  {
    "text": "now these are three problems and three challenges now i want to show you three examples of how captain users have been helped by",
    "start": "299520",
    "end": "306800"
  },
  {
    "start": "302000",
    "end": "302000"
  },
  {
    "text": "captain and solve their problems sumit is at intuit they are using argo",
    "start": "306800",
    "end": "311840"
  },
  {
    "text": "gatling and jenkins for distributed load testing fully automated and now they are using captain to completely automate the test analysis",
    "start": "311840",
    "end": "319759"
  },
  {
    "text": "captain has a capability that is called slo-based quality gates so they run their tests and their existing tooling and then they",
    "start": "319759",
    "end": "326479"
  },
  {
    "text": "hand it over to captain to fully automatically continuously evaluate slo something that they have done manually",
    "start": "326479",
    "end": "332320"
  },
  {
    "text": "before now captain allows them to scale coming back to roman who i brought up earlier",
    "start": "332320",
    "end": "337440"
  },
  {
    "text": "remember he had like 15 to 20 tests per year and only five apps well now they run 15",
    "start": "337440",
    "end": "344240"
  },
  {
    "text": "times the amount of tests and 10 times the amount of apps thanks to the automation",
    "start": "344240",
    "end": "349360"
  },
  {
    "text": "that captain brings in because captain runs tests more consecutively more continuously",
    "start": "349360",
    "end": "354800"
  },
  {
    "text": "more automated and also automates the analysis this really enables them to do",
    "start": "354800",
    "end": "360240"
  },
  {
    "text": "automated performance and resiliency resiliency testing and the third one remember christian he",
    "start": "360240",
    "end": "365360"
  },
  {
    "text": "was challenged with the ever-growing number of pipelines well they have now moved over to",
    "start": "365360",
    "end": "370560"
  },
  {
    "text": "kubernetes which means new microservices new pipelines that have to be onboarded and",
    "start": "370560",
    "end": "376319"
  },
  {
    "text": "they didn't want to make the mistake from the big from the from the past from the previous architecture",
    "start": "376319",
    "end": "381440"
  },
  {
    "text": "so now they're using captain to orchestrate the whole end-to-end delivery pipeline calling gitlab",
    "start": "381440",
    "end": "387520"
  },
  {
    "text": "for deployment kept triggering their automated tests with uh catalan ng meter",
    "start": "387520",
    "end": "394080"
  },
  {
    "text": "using helm for deployment but then also doing the automated quality git evaluation so this is where this is some of the",
    "start": "394080",
    "end": "400400"
  },
  {
    "text": "stories and you can actually find some videos of these three gentlemen and more if you",
    "start": "400400",
    "end": "405759"
  },
  {
    "text": "go to the captain websites and go to captain resources there are some other nice testimonials you can also find them on the website",
    "start": "405759",
    "end": "412479"
  },
  {
    "text": "what i really like is taras from facebook who says captain feels like a reference implementation of google's",
    "start": "412479",
    "end": "418000"
  },
  {
    "text": "site reliability engineering and the site reliability engineering workbook i guess this was really nice for us to",
    "start": "418000",
    "end": "423840"
  },
  {
    "text": "hear that it seems a lot of people understand that we really try to help especially the",
    "start": "423840",
    "end": "429759"
  },
  {
    "text": "sre community to bring sre automated in your cloud native continuous delivery",
    "start": "429759",
    "end": "437199"
  },
  {
    "text": "all right so now what is captain right captain is something different for",
    "start": "437199",
    "end": "444160"
  },
  {
    "start": "439000",
    "end": "439000"
  },
  {
    "text": "different personas whether you are an ops an sre a deaf whether you're a performance",
    "start": "444160",
    "end": "450319"
  },
  {
    "text": "engineer whoever you are captain allows you to pick a use case where you're currently struggling",
    "start": "450319",
    "end": "455520"
  },
  {
    "text": "with automation with automating it in general or in the way you want to automate that and integrate",
    "start": "455520",
    "end": "461599"
  },
  {
    "text": "it into existing automation tools so captain allows you to pick the use case that you want to automate",
    "start": "461599",
    "end": "467199"
  },
  {
    "text": "quality gates delivery sre automation or auto remediation for production",
    "start": "467199",
    "end": "473360"
  },
  {
    "text": "depending on the use case you then bring your configuration for instance for the quality gate",
    "start": "473360",
    "end": "478400"
  },
  {
    "text": "evaluation you have to bring your sli and slo definitions for your performance test automation you",
    "start": "478400",
    "end": "483919"
  },
  {
    "text": "bring your workload definition for your order remediation and production you bring your run books and best of all",
    "start": "483919",
    "end": "490080"
  },
  {
    "text": "captain doesn't execute this thing captain is an orchestrator captain",
    "start": "490080",
    "end": "495199"
  },
  {
    "text": "connects to your tools so you can bring your tools that work well in your particular",
    "start": "495199",
    "end": "500560"
  },
  {
    "text": "environment everyone has a different environment everyone has favorite tools that you have investments in so you can bring these tools and connect",
    "start": "500560",
    "end": "506960"
  },
  {
    "text": "them to captain because captain then takes your configuration takes your use case and really automates",
    "start": "506960",
    "end": "513360"
  },
  {
    "text": "the configuration of your tools connects them and provides the use cases completely as a self-service",
    "start": "513360",
    "end": "519279"
  },
  {
    "text": "and it does it through a declarative approach everything all the configuration files",
    "start": "519279",
    "end": "526240"
  },
  {
    "text": "are all persisted stored and versioned in git everything is centered around service",
    "start": "526240",
    "end": "532080"
  },
  {
    "text": "level objectives as slows every action captain takes is validated that it doesn't break anything or still",
    "start": "532080",
    "end": "537680"
  },
  {
    "text": "you are within your slos and the whole communication from captain to your different tools is",
    "start": "537680",
    "end": "542959"
  },
  {
    "text": "all based on the cloud event standard so everything is standard based there is no",
    "start": "542959",
    "end": "548720"
  },
  {
    "text": "proprietary integration now everything is based on standards which makes it easy to extend easy bring in your tools",
    "start": "548720",
    "end": "554480"
  },
  {
    "text": "and also easy to swap tools without having to then update your manual",
    "start": "554480",
    "end": "559760"
  },
  {
    "text": "custom proprietary integrations right before i go into demo a quick",
    "start": "559760",
    "end": "565440"
  },
  {
    "text": "architecture overview the architecture was driven by really the new requirements that we've",
    "start": "565440",
    "end": "570880"
  },
  {
    "text": "seen remember we have seen pipelines we've seen automation scripts that grew too fast because they had",
    "start": "570880",
    "end": "577760"
  },
  {
    "text": "mixed information about processing and tooling and target platform and environments in there there was also no clear separation",
    "start": "577760",
    "end": "584240"
  },
  {
    "text": "of concerns about what the developers should do and evaps engineers should do and a site reliability engineer should",
    "start": "584240",
    "end": "589519"
  },
  {
    "text": "do this is kind of everything we packed everything together and these were the fundamental problems",
    "start": "589519",
    "end": "595200"
  },
  {
    "text": "i think of most of the approaches we have today so what we what we said well in the end we have processes",
    "start": "595200",
    "end": "601440"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "but we want to automate processes with the hard dependencies to the tooling so we said if you have a process on the",
    "start": "601440",
    "end": "607360"
  },
  {
    "text": "left and you have the hardcore dependencies why not just break these things apart why not",
    "start": "607360",
    "end": "613279"
  },
  {
    "text": "break the dependencies or remove these hard dependencies and say hey we have a process that we want to",
    "start": "613279",
    "end": "619519"
  },
  {
    "text": "automate of course right it may be build prepare deploy test notify rollback whatever you do",
    "start": "619519",
    "end": "624800"
  },
  {
    "text": "in automating certain processes in your delivery and operations on the right then you have your tools so",
    "start": "624800",
    "end": "631120"
  },
  {
    "text": "i rather like to call them capabilities because you may have one or more tools that have a certain capability or can",
    "start": "631120",
    "end": "636800"
  },
  {
    "text": "provide a certain capability in a certain environment so if you have the process on the left",
    "start": "636800",
    "end": "642320"
  },
  {
    "text": "and the capabilities on the right and we have a process orchestrator then we need some way for",
    "start": "642320",
    "end": "648880"
  },
  {
    "text": "them to communicate and this is where eventing comes in captain uses an event-based model just",
    "start": "648880",
    "end": "654480"
  },
  {
    "text": "as when we break monolithic applications into smaller services then use eventing into connect and we do the same thing",
    "start": "654480",
    "end": "661200"
  },
  {
    "text": "we allow it to define the process and as we execute the process captain will then send the right event at the right moment",
    "start": "661200",
    "end": "668640"
  },
  {
    "text": "to for instance say hey i need to i need somebody that has the capability to deploy container number",
    "start": "668640",
    "end": "674480"
  },
  {
    "text": "one in-depth with a blue-green deployment strategy then you may have one or two capabilities maybe you have helm",
    "start": "674480",
    "end": "680959"
  },
  {
    "text": "that could do it maybe you have a jenkins pipeline that could do it or you have spinnaker",
    "start": "680959",
    "end": "686240"
  },
  {
    "text": "then these tools can say yes i can do it because i'm certified uh and i have all the config files that",
    "start": "686240",
    "end": "691839"
  },
  {
    "text": "i need for that environment let me do it and when it's done it sends it back that it that the job was",
    "start": "691839",
    "end": "697360"
  },
  {
    "text": "successfully done or maybe failed who knows and then captain can continue with the workflow so really what we did is we said which",
    "start": "697360",
    "end": "704800"
  },
  {
    "text": "events do we need and also what who are what are the capabilities we need on the right side",
    "start": "704800",
    "end": "711120"
  },
  {
    "text": "and then we connect them through eventing from 10 000 feet the way this looks like you install captain",
    "start": "711120",
    "end": "717040"
  },
  {
    "start": "713000",
    "end": "713000"
  },
  {
    "text": "on kubernetes uh you install the so-called control plane on a cluster that manages all of the",
    "start": "717040",
    "end": "724079"
  },
  {
    "text": "workflow and all the logic i just explained we're using nets as the eventing engine now in order to use captain you have",
    "start": "724079",
    "end": "731360"
  },
  {
    "text": "somebody that needs to say which processes which workflows which sequences captain should actually",
    "start": "731360",
    "end": "736880"
  },
  {
    "text": "orchestrate and automate this is what we call the application plan you specify what type of processes",
    "start": "736880",
    "end": "742480"
  },
  {
    "text": "is it delivery process is it a remediation process is it a testing process you declare this",
    "start": "742480",
    "end": "748160"
  },
  {
    "text": "in our config files we call them cheaper than remediation files shipyard that means everything that is",
    "start": "748160",
    "end": "753920"
  },
  {
    "text": "related to continuous delivery until it ends up in production and remediation is everything for the order for all the remediating",
    "start": "753920",
    "end": "761040"
  },
  {
    "text": "tasks in production the nice thing is because we have a clear separation of concerns between",
    "start": "761040",
    "end": "766240"
  },
  {
    "text": "process definition and and the tooling and the capabilities you can have even a different team that can define and install the",
    "start": "766240",
    "end": "772800"
  },
  {
    "text": "execution plane either on the same cluster or on different clusters we just introduced captain 0.8 that now",
    "start": "772800",
    "end": "779120"
  },
  {
    "text": "finally has the capability to execute or to install the execution plane in all of your different target",
    "start": "779120",
    "end": "785040"
  },
  {
    "text": "systems and then this team can say well which tools do you want to use in this target",
    "start": "785040",
    "end": "790480"
  },
  {
    "text": "environment and then they install these capabilities they're listening to these cloud events so it's all based on",
    "start": "790480",
    "end": "796800"
  },
  {
    "text": "standards and once they receive it they execute the action respond which means at the end the real beneficiary",
    "start": "796800",
    "end": "804399"
  },
  {
    "text": "is the user the dev the ops the sre that can then say i have a new artifact",
    "start": "804399",
    "end": "810720"
  },
  {
    "text": "and i want captain to now run an automated process for me let's say test automation or even delivery",
    "start": "810720",
    "end": "817600"
  },
  {
    "text": "which means then captain starts with sending the events depending on your process definition",
    "start": "817600",
    "end": "824560"
  },
  {
    "text": "with this triggers the right tooling in your execution plane these tools then do the action and then",
    "start": "824560",
    "end": "830079"
  },
  {
    "text": "report back if something is good or not good the nice thing is you can easily now",
    "start": "830079",
    "end": "835279"
  },
  {
    "text": "change the process without having to think about which tool integrations you now need to worry about",
    "start": "835279",
    "end": "841199"
  },
  {
    "text": "or maybe break but you can also change the tooling without thinking about the process right you can say i'm swapping from",
    "start": "841199",
    "end": "847920"
  },
  {
    "text": "let's say a jenkins pipeline that used to do my deployments to now using helm natively or you may switch",
    "start": "847920",
    "end": "854480"
  },
  {
    "text": "from jmeter as a testing tool to something like niotus or you switch",
    "start": "854480",
    "end": "860560"
  },
  {
    "text": "from one monitoring tool to another monitoring tool it gives you the observability data",
    "start": "860560",
    "end": "866240"
  },
  {
    "text": "and the nice thing is you don't have these integrations hardcoded anymore it's all process definition tool capabilities",
    "start": "866240",
    "end": "874160"
  },
  {
    "text": "and then they are connected through events so i want to off go into my first demo",
    "start": "874160",
    "end": "879519"
  },
  {
    "text": "i want to show you a little bit of captain all right so i had this here um let me show you",
    "start": "879519",
    "end": "885839"
  },
  {
    "text": "something that i have here and by the way as i said in about a week or so",
    "start": "885839",
    "end": "891760"
  },
  {
    "text": "we do a uh we do a live demo we can do more we",
    "start": "891760",
    "end": "898480"
  },
  {
    "text": "do a live webinar and we do a little bit more on on live demos with captain so just wanna let you know i've installed",
    "start": "898480",
    "end": "904320"
  },
  {
    "text": "captain on an eks cluster this is a standard installation now where i have control and execution plan installed you",
    "start": "904320",
    "end": "911040"
  },
  {
    "text": "see a couple of pots here that i have i also have my captain cli authenticated against my captain",
    "start": "911040",
    "end": "919519"
  },
  {
    "text": "environment and i can now also do things like and let me just do this here history",
    "start": "919519",
    "end": "926079"
  },
  {
    "text": "grab artifact i want to kick off a new deployment i'm too lazy to remember all of this to",
    "start": "926079",
    "end": "933279"
  },
  {
    "text": "be honest with you that's why what i want now says i want to say captain please",
    "start": "933279",
    "end": "938560"
  },
  {
    "text": "i have a new artifact for you for a particular captain project as service and here's my new image and",
    "start": "938560",
    "end": "944240"
  },
  {
    "text": "now you go off now while this runs i want to show you a little bit of what actually happens behind the scenes",
    "start": "944240",
    "end": "949680"
  },
  {
    "text": "so here is my captain installation here is my captain o7 project",
    "start": "949680",
    "end": "954720"
  },
  {
    "text": "captain internally holds a config repo for everything it does so for every project you get a config repo",
    "start": "954720",
    "end": "960800"
  },
  {
    "text": "and then you can also specify an upstream git this is here my github repository what you can see here",
    "start": "960800",
    "end": "968000"
  },
  {
    "text": "in the main branch i have my shipyard file this is kind of my process definition this is what where i",
    "start": "968000",
    "end": "974560"
  },
  {
    "text": "say captain i want you to provide me three stages dev staging and prod",
    "start": "974560",
    "end": "979839"
  },
  {
    "text": "you can give it different types of metadata to change the opinionated workflow that captain has like what type",
    "start": "979839",
    "end": "985680"
  },
  {
    "text": "of deployment should happen what type of testing should happen what type of approval should happen what type of remediation should happen",
    "start": "985680",
    "end": "992240"
  },
  {
    "text": "now what you see here is a shipyard file of captain version 0.7 0.8 was just",
    "start": "992240",
    "end": "997920"
  },
  {
    "text": "released as i'm recording this so i will show you how this change in open day because in 0.8 you're more",
    "start": "997920",
    "end": "1004160"
  },
  {
    "text": "flexible with what should happen in a stage but i start with o7 here because in the end it",
    "start": "1004160",
    "end": "1009279"
  },
  {
    "text": "gets the point across what captain is doing so this is what i specified that's my whole kind of pipeline code",
    "start": "1009279",
    "end": "1015440"
  },
  {
    "text": "now what else do i have for every individual stage captain created a branch for me",
    "start": "1015440",
    "end": "1023519"
  },
  {
    "text": "like for instance if i go into the dev branch this is now where i have all of my supporting configuration files",
    "start": "1023519",
    "end": "1029438"
  },
  {
    "text": "for the individual tools and capabilities so that they can do their job so for instance i have my g meter scripts in",
    "start": "1029439",
    "end": "1035678"
  },
  {
    "text": "here because i'm using jmeter so when gmeter is triggered later on it can access this config repo for def",
    "start": "1035679",
    "end": "1041918"
  },
  {
    "text": "and then say okay what are my files what is my configuration i also have for i can either specify it",
    "start": "1041919",
    "end": "1048799"
  },
  {
    "text": "on a global scale for stage or i can do it on an individual service because a project in captain typically contains",
    "start": "1048799",
    "end": "1054400"
  },
  {
    "text": "multiple micro services that you want to deploy then you can have more specific files for a particular service maybe i have",
    "start": "1054400",
    "end": "1060000"
  },
  {
    "text": "specific test files for a service so i have global files for maybe everything some basic tests and then",
    "start": "1060000",
    "end": "1066559"
  },
  {
    "text": "specific ones now what you also see here i have my helm folder where i have my helm charts and",
    "start": "1066559",
    "end": "1073280"
  },
  {
    "text": "interestingly enough two minutes ago something was changed here because remember i triggered off",
    "start": "1073280",
    "end": "1079679"
  },
  {
    "text": "my i said captain send new event artifacts let me just go back quickly i said uh captain send event",
    "start": "1079679",
    "end": "1086880"
  },
  {
    "text": "new artifact for this project for this service for simple node i have a new version and one of the",
    "start": "1086880",
    "end": "1093760"
  },
  {
    "text": "things that captain does the way i specified it captain will first trigger send an event",
    "start": "1093760",
    "end": "1099760"
  },
  {
    "text": "and say hey andy wants to change the version and therefore take this version information and update",
    "start": "1099760",
    "end": "1105360"
  },
  {
    "text": "it in the files where it's necessary so the first thing that actually happens is a version change and it made the update here",
    "start": "1105360",
    "end": "1111679"
  },
  {
    "text": "which is nice because i don't have to deal with it you don't have to do it you can also do it through your regular uh github's approach where you you know",
    "start": "1111679",
    "end": "1118480"
  },
  {
    "text": "change uh your configurations in that git repo and then trigger the rest of the captain workflow",
    "start": "1118480",
    "end": "1124320"
  },
  {
    "text": "but this i think is pretty neat so we have everything in here def we also have prod and staging so for",
    "start": "1124320",
    "end": "1129520"
  },
  {
    "text": "every stage you have your different files now let's go back to captain let's go into this project",
    "start": "1129520",
    "end": "1135520"
  },
  {
    "text": "so this is now my captain o7 project and i have if i click on environment i have",
    "start": "1135520",
    "end": "1141039"
  },
  {
    "text": "my dev staging and prod so this is kind of just the visualization of the gpio file that i",
    "start": "1141039",
    "end": "1147039"
  },
  {
    "text": "showed you earlier i can also see what is currently deployed in that stage",
    "start": "1147039",
    "end": "1152320"
  },
  {
    "text": "i have only one service on border that's my symbol node so i can click on here and it seems build number four was",
    "start": "1152320",
    "end": "1157600"
  },
  {
    "text": "already deployed if i go back to staging this is where probably",
    "start": "1157600",
    "end": "1163360"
  },
  {
    "text": "build number three still right because so build number four was in depth and build number three is in staging and",
    "start": "1163360",
    "end": "1169679"
  },
  {
    "text": "uh because i sent kind of captain along the way captain will now go through all the process until hopefully it ends up in",
    "start": "1169679",
    "end": "1175360"
  },
  {
    "text": "broad and you will see here i actually didn't clean up my environment from some previous demos i actually had a couple of builds and",
    "start": "1175360",
    "end": "1182000"
  },
  {
    "text": "runs earlier that made it all the way into prod not almost all the way into prod",
    "start": "1182000",
    "end": "1187120"
  },
  {
    "text": "because i specified in my sheet pad file that i want to have direct deployment or direct promotion",
    "start": "1187120",
    "end": "1193280"
  },
  {
    "text": "from dev to staging if a build is good but from staging to production i always want to have like a manual",
    "start": "1193280",
    "end": "1198960"
  },
  {
    "text": "approval this is why these are these are waiting here and now i get the overview of my slis and my slos",
    "start": "1198960",
    "end": "1204640"
  },
  {
    "text": "and i can then make a decision to go a no-go so these are some old test runs that i have never approved so",
    "start": "1204640",
    "end": "1209840"
  },
  {
    "text": "this is this is why they're still lingering around now but what's interesting this gives me an overview of what what is what is",
    "start": "1209840",
    "end": "1216240"
  },
  {
    "text": "currently deployed in which stage but if i click on services then i see here in the list all of my",
    "start": "1216240",
    "end": "1222799"
  },
  {
    "text": "previous attempts and my previous demos when i ran deployments right they can be triggered through the cli through a web hook",
    "start": "1222799",
    "end": "1229039"
  },
  {
    "text": "you can do it as part of the git action whatever you want if i go to build number four now if i",
    "start": "1229039",
    "end": "1234559"
  },
  {
    "text": "click on it on the right side now you actually see all these events that i talked about earlier remember in my in my animation i said",
    "start": "1234559",
    "end": "1242159"
  },
  {
    "text": "captain is sending events and with this triggering then the capabilities and once they are picking up the job they say yes i'm",
    "start": "1242159",
    "end": "1248640"
  },
  {
    "text": "doing it and then they're sending back once they're done so this is really neat because i see exactly what is happening",
    "start": "1248640",
    "end": "1254880"
  },
  {
    "text": "deployment test finished until quality gates are enforced and then it goes on into the next stage",
    "start": "1254880",
    "end": "1261200"
  },
  {
    "text": "now let me switch to build number three that i ran a little earlier because here i see a little more because",
    "start": "1261200",
    "end": "1266640"
  },
  {
    "text": "in this case the build was promoted all the way from def",
    "start": "1266640",
    "end": "1272320"
  },
  {
    "text": "into staging and then into staging we also ran some jmeter tests and we did some more extensive uh",
    "start": "1272320",
    "end": "1279679"
  },
  {
    "text": "quality gate evaluations until it ended up waiting in prague for approval",
    "start": "1279679",
    "end": "1285200"
  },
  {
    "text": "so i can actually now finally i think you know kick this off and push build number three in prod i",
    "start": "1285200",
    "end": "1290559"
  },
  {
    "text": "mean build number four is already on its way but now i'm good with this so this is kind of like a quick overview what",
    "start": "1290559",
    "end": "1296400"
  },
  {
    "text": "you've what you should take away with you is that uh in captain everything is declarative meaning",
    "start": "1296400",
    "end": "1302000"
  },
  {
    "text": "you declare what kind of process you want to automate we have the shipyard file for instance",
    "start": "1302000",
    "end": "1308240"
  },
  {
    "text": "you then also add all of your configuration files for your specific tools and capabilities into that git",
    "start": "1308240",
    "end": "1315280"
  },
  {
    "text": "repository for a particular stage either for this for the overall stage meaning all your test files for that",
    "start": "1315280",
    "end": "1321200"
  },
  {
    "text": "stage or specific ones uh in in for a particular service",
    "start": "1321200",
    "end": "1326880"
  },
  {
    "text": "and then captain orchestrates everything for you now captain also has a very rich api right we have a swagger ui here",
    "start": "1326880",
    "end": "1335440"
  },
  {
    "text": "where you can explore the api and this is where you can then for",
    "start": "1335440",
    "end": "1340720"
  },
  {
    "text": "instance trigger an event from the outside you can create your project to service you can fully automate captain",
    "start": "1340720",
    "end": "1346080"
  },
  {
    "text": "there's a lot of different options here to then access the git repository or",
    "start": "1346080",
    "end": "1352400"
  },
  {
    "text": "everything in the git repository upload files download files up to you and you may ask you may ask",
    "start": "1352400",
    "end": "1357840"
  },
  {
    "text": "okay so but how do i build a new service how do i extend it well services are basically listeners to",
    "start": "1357840",
    "end": "1364720"
  },
  {
    "text": "events and if you go to captain sandbox",
    "start": "1364720",
    "end": "1370799"
  },
  {
    "text": "then this is actually a great way for you first to uh to see what type of services we have we have a",
    "start": "1371280",
    "end": "1376880"
  },
  {
    "text": "sandbox we have a contrib and we have the core captain project but this is where we have low cost service litmus service you see there's a",
    "start": "1376880",
    "end": "1383120"
  },
  {
    "text": "lot of stuff already built monaco service the github's operator we have a lot of things here already",
    "start": "1383120",
    "end": "1388320"
  },
  {
    "text": "if you want to write your own service and see how easy it is to just build an integration based on",
    "start": "1388320",
    "end": "1394320"
  },
  {
    "text": "these standards then just take this template it's a go template and you can get started now we have already videos for that so",
    "start": "1394320",
    "end": "1401280"
  },
  {
    "text": "i'm not spending my time so what you've seen is a quick overview",
    "start": "1401280",
    "end": "1406960"
  },
  {
    "text": "of how captain works now the nice thing is captain can easily be integrated in existing pipelines and existing tooling",
    "start": "1406960",
    "end": "1412240"
  },
  {
    "start": "1407000",
    "end": "1407000"
  },
  {
    "text": "that was also our goal we don't want to replace everything we want to extend them we want to automate things that are currently hard",
    "start": "1412240",
    "end": "1418799"
  },
  {
    "text": "to automate and one of the examples is patrick they're using gitlab for ci for building",
    "start": "1418799",
    "end": "1423919"
  },
  {
    "text": "their containers and pushing it to the registry and then they're kicking off captain and keptness then doing the",
    "start": "1423919",
    "end": "1429440"
  },
  {
    "text": "delivery for them so this was kind of the the overview of of a key major use case",
    "start": "1429440",
    "end": "1435679"
  },
  {
    "text": "now a very big important piece of captain is that everything we do in captain everything captain does is always validated",
    "start": "1435679",
    "end": "1443360"
  },
  {
    "text": "against important data slos service level objectives so every time you deploy every time you",
    "start": "1443360",
    "end": "1450400"
  },
  {
    "text": "run a test every time you do remediation we we were using slos",
    "start": "1450400",
    "end": "1455679"
  },
  {
    "text": "and the reason why we had to do this because this was a problem that a lot of people are facing and this",
    "start": "1455679",
    "end": "1461360"
  },
  {
    "start": "1461000",
    "end": "1461000"
  },
  {
    "text": "was also one of the problems i highlighted in the beginning that a lot of people are trying to automate data",
    "start": "1461360",
    "end": "1467360"
  },
  {
    "text": "data based decisions as part of the delivery process and i know many people have tried to",
    "start": "1467360",
    "end": "1473760"
  },
  {
    "text": "bake this into the existing pipelines whatever tools these are to make a good or no good decision but",
    "start": "1473760",
    "end": "1479679"
  },
  {
    "text": "it's really hard because we do no longer only has just have unit tests to look into or",
    "start": "1479679",
    "end": "1484960"
  },
  {
    "text": "functional tests sres especially are asked to run more performance tests more chaos tests",
    "start": "1484960",
    "end": "1491039"
  },
  {
    "text": "you need to bring in observability data from tools like open telemetry or your apm",
    "start": "1491039",
    "end": "1497279"
  },
  {
    "text": "solutions and there's so much data and it's really hard to to then analyze it from a build",
    "start": "1497279",
    "end": "1502480"
  },
  {
    "text": "to build from a deployment to the deployment perspective it is all possible but it's not easy",
    "start": "1502480",
    "end": "1507760"
  },
  {
    "text": "so what we then said well we want to tackle this problem and we want to make it core at captain",
    "start": "1507760",
    "end": "1514559"
  },
  {
    "start": "1509000",
    "end": "1509000"
  },
  {
    "text": "and for this we looked at google's s3 practice so sre stands for site reliability",
    "start": "1514559",
    "end": "1520400"
  },
  {
    "text": "engineering i guess i don't tell you anything new for those where it is new it's very simple actually",
    "start": "1520400",
    "end": "1526000"
  },
  {
    "text": "you have slis these are your service level indicators something a metric that you can measure that is",
    "start": "1526000",
    "end": "1531039"
  },
  {
    "text": "important to you like the error rate of login requests then you specify what is your objective",
    "start": "1531039",
    "end": "1536159"
  },
  {
    "text": "with this metric so for instance you want to make sure that the login error rate should be less than two percent over 30 day period",
    "start": "1536159",
    "end": "1543440"
  },
  {
    "text": "especially in production these are the things that you've defined and then slas probably more well-known are things like",
    "start": "1543440",
    "end": "1550240"
  },
  {
    "text": "what would happen if you are kind of missing your solos then you may have a legal contract you may have some",
    "start": "1550240",
    "end": "1556799"
  },
  {
    "text": "obligation or you may lose users whatever that is so in the end google did a great job in",
    "start": "1556799",
    "end": "1562559"
  },
  {
    "text": "advocating for this principle as part of the site reliability engineering practices great videos great books i like the top",
    "start": "1562559",
    "end": "1568799"
  },
  {
    "text": "line slo travis slos which inform slas now what we thought it's great that more",
    "start": "1568799",
    "end": "1575440"
  },
  {
    "start": "1574000",
    "end": "1574000"
  },
  {
    "text": "and more organizations are looking into using slos as part of their production deployments",
    "start": "1575440",
    "end": "1581120"
  },
  {
    "text": "uh production monitoring right you can use slos for individual services",
    "start": "1581120",
    "end": "1587120"
  },
  {
    "text": "applications for different types of metrics you use them use the error budget the status to make decisions",
    "start": "1587120",
    "end": "1593200"
  },
  {
    "text": "on whether or not to deploy but we thought why not take it and use the same concept",
    "start": "1593200",
    "end": "1600240"
  },
  {
    "text": "for everything we do for everything we do from when you you you create your first",
    "start": "1600240",
    "end": "1605760"
  },
  {
    "text": "container image until you deployed in dev run your tests why not use the same concept of looking",
    "start": "1605760",
    "end": "1611840"
  },
  {
    "text": "at metrics and then validate them if they are within what i'm expecting my expectations are",
    "start": "1611840",
    "end": "1618320"
  },
  {
    "text": "and this is why we bring captain quality gates as a core component to it which is based on the concept of slis",
    "start": "1618320",
    "end": "1624799"
  },
  {
    "text": "and slos metrics compares against objectives and then captain just analyzes metrics that are important for",
    "start": "1624799",
    "end": "1631919"
  },
  {
    "text": "you with every commit with every build and then makes a decision good or no good",
    "start": "1631919",
    "end": "1637200"
  },
  {
    "text": "now these might be different metrics and different thresholds that you have in production i understand that",
    "start": "1637200",
    "end": "1642320"
  },
  {
    "text": "this is also where you typically use regression detection between builds because you want to know did the new build maybe introduce cpu",
    "start": "1642320",
    "end": "1650080"
  },
  {
    "text": "consumption by 20 or are you making 50 new database calls to the back end",
    "start": "1650080",
    "end": "1655200"
  },
  {
    "text": "and this is something that you want to flag these might be not slos that are interesting for you in production well they might be",
    "start": "1655200",
    "end": "1660960"
  },
  {
    "text": "but what i'm saying here is we allow you to also specify different slis and slos as part of qualitygate",
    "start": "1660960",
    "end": "1667279"
  },
  {
    "text": "so um very high level how this works you specify sli in captain what metrics",
    "start": "1667279",
    "end": "1674399"
  },
  {
    "text": "you want from whatever tool and data source it could be prometheus could be dynatrace could be wavefront",
    "start": "1674399",
    "end": "1680320"
  },
  {
    "text": "could be any of the other monitoring tools then you specify your slos where you can say i'm expecting this metric to be",
    "start": "1680320",
    "end": "1686880"
  },
  {
    "text": "within a certain range or i don't want this metric to go above a certain baseline by looking back",
    "start": "1686880",
    "end": "1694559"
  },
  {
    "text": "at different builds so you can do absolute and relative we analyze every single value and we",
    "start": "1694559",
    "end": "1701520"
  },
  {
    "text": "grade it and then we come up with a total score and then you can also say what is your objective for the overall",
    "start": "1701520",
    "end": "1706559"
  },
  {
    "text": "score we always normalize it between 0 and 100. so if build number one comes along and",
    "start": "1706559",
    "end": "1712080"
  },
  {
    "text": "everything is green then great and captain will tell you you're good to go one hundred percent if build two comes along",
    "start": "1712080",
    "end": "1718399"
  },
  {
    "text": "and it seems you are slower on response time and failure rate then you're getting penalized",
    "start": "1718399",
    "end": "1724000"
  },
  {
    "text": "getting 75 and then you can decide it's still good to go yes or no if you're trying to fix this problem and",
    "start": "1724000",
    "end": "1730640"
  },
  {
    "text": "build number three comes along and all of a sudden you fixed the response time and the failure rate but all of a sudden you have an increase",
    "start": "1730640",
    "end": "1737200"
  },
  {
    "text": "in number of backend login service calls from one to two but it didn't allow",
    "start": "1737200",
    "end": "1742799"
  },
  {
    "text": "any of that to happen because of your slo definition of an increase of zero percent then you're getting penalized and this",
    "start": "1742799",
    "end": "1748799"
  },
  {
    "text": "would then stop your pipeline which is great because you immediately get that feedback and then build number",
    "start": "1748799",
    "end": "1754799"
  },
  {
    "text": "four comes along everything is green and now we're good to go so this is how it looks in excel this is",
    "start": "1754799",
    "end": "1760799"
  },
  {
    "text": "now how it looks in in captain the way captain treats slice and slos you specify",
    "start": "1760799",
    "end": "1766000"
  },
  {
    "start": "1761000",
    "end": "1761000"
  },
  {
    "text": "your slis in as indicators sli sli yaml files i don't want to start the",
    "start": "1766000",
    "end": "1772320"
  },
  {
    "text": "debate on the amble and json now so you basically say these are the metrics and then you put the query",
    "start": "1772320",
    "end": "1777520"
  },
  {
    "text": "language next to it for the particular tool that you're using and then you specify your slos in a separate file so we made a",
    "start": "1777520",
    "end": "1784399"
  },
  {
    "text": "strategic decision to separate data source definition to the sli definition from the slo because this",
    "start": "1784399",
    "end": "1790320"
  },
  {
    "text": "also allows you to easily swap monitoring tools by still but still maintaining your slow definitions",
    "start": "1790320",
    "end": "1797520"
  },
  {
    "text": "so if you have those and then captain you're asking captain please evaluate",
    "start": "1797520",
    "end": "1802880"
  },
  {
    "text": "because this is also one valid use case you can just stay kept the only thing i want you to do is to evaluate my performance metrics or",
    "start": "1802880",
    "end": "1810480"
  },
  {
    "text": "my sls and slos then captain will send an event say hey which tools can give me",
    "start": "1810480",
    "end": "1816320"
  },
  {
    "text": "these slis here all the definitions then whatever tool you've connected can then",
    "start": "1816320",
    "end": "1821360"
  },
  {
    "text": "report the value captain then takes this value scores every single value based on the slos and then comes up with a total",
    "start": "1821360",
    "end": "1828399"
  },
  {
    "text": "score that is then translated into pass warning or fail now let me go quickly back into captain",
    "start": "1828399",
    "end": "1836320"
  },
  {
    "start": "1834000",
    "end": "1834000"
  },
  {
    "text": "uh and to show you this how we did it with dynatrace now this also works for prometheus and others i'm just using",
    "start": "1836320",
    "end": "1841919"
  },
  {
    "text": "dyna trees because this is where i where my day job is and so i'm familiar with that tool in dynatrace we allow you to simply just",
    "start": "1841919",
    "end": "1848640"
  },
  {
    "text": "build a dashboard and then captain will automate all this now let me go back to my",
    "start": "1848640",
    "end": "1853760"
  },
  {
    "text": "captain instance so remember earlier we deployed build",
    "start": "1853760",
    "end": "1859279"
  },
  {
    "text": "number four let's see where build number four is now oh yeah build number four made it all the way through it's now waiting in prod",
    "start": "1859279",
    "end": "1865600"
  },
  {
    "text": "but let me show you this here this is the sli and slo definition now remember i told you that",
    "start": "1865600",
    "end": "1872559"
  },
  {
    "text": "normally you would go in into your git repo and if i go to staging",
    "start": "1872559",
    "end": "1880159"
  },
  {
    "text": "and if i go to uh in my case i'm using dynatrace as the monitoring tool so here's where i specify my slis",
    "start": "1880240",
    "end": "1887200"
  },
  {
    "text": "i could go in and specify all of my queries against my dynatrace query language so i say hey",
    "start": "1887200",
    "end": "1892880"
  },
  {
    "text": "there's an sli called process memory and this is how you query it you can do all that and you can then",
    "start": "1892880",
    "end": "1899519"
  },
  {
    "text": "also specify your slos in the yaml just as i showed you earlier here all the slos",
    "start": "1899519",
    "end": "1905519"
  },
  {
    "text": "and i'm sure there's somewhere the memory the process memory with past warning weight and so on and",
    "start": "1905519",
    "end": "1912159"
  },
  {
    "text": "so forth so you can do this and while this is great what we did",
    "start": "1912159",
    "end": "1917360"
  },
  {
    "text": "in order to make this a little easier because not everybody is yet there to do everything is code from this from the scratch from from scratch",
    "start": "1917360",
    "end": "1925360"
  },
  {
    "text": "we said for our integration here if you're using dynatrace you can also",
    "start": "1925360",
    "end": "1930720"
  },
  {
    "text": "just build a dashboard meaning i have an observability platform",
    "start": "1930720",
    "end": "1936559"
  },
  {
    "text": "i build a dashboard where what i would normally do right you normally build a dashboard you put all your metrics on",
    "start": "1936559",
    "end": "1942640"
  },
  {
    "text": "and then you typically have an idea on how how how must the metric look like like how what's the metric",
    "start": "1942640",
    "end": "1949120"
  },
  {
    "text": "what's the range that i expected so that's the same thing that i did here um i basically put in all my metrics",
    "start": "1949120",
    "end": "1955760"
  },
  {
    "text": "that are important for me and then additionally if i zoom in here a little bit",
    "start": "1955760",
    "end": "1961440"
  },
  {
    "text": "instead of me looking at them and say okay what's the value that i that i'm expecting and that is good i",
    "start": "1961440",
    "end": "1966720"
  },
  {
    "text": "can specify my rules pass",
    "start": "1966720",
    "end": "1971919"
  },
  {
    "text": "should be faster than 600 milliseconds and it should not slow down by more than 10 percent i can do this on service level metrics",
    "start": "1971919",
    "end": "1978399"
  },
  {
    "text": "on transaction metrics i can do this also on my process metrics memory whatever i have",
    "start": "1978399",
    "end": "1983679"
  },
  {
    "text": "even loop loop tick frequency because in my case i have a node.js app so you put this in here and it's just a",
    "start": "1983679",
    "end": "1991279"
  },
  {
    "text": "convenience thing and what we what what captain does with it it takes this dashboard that's kind of the source of proof",
    "start": "1991279",
    "end": "1996880"
  },
  {
    "text": "generates the sli and slow yaml out of it so that then captain internally can also process it the same way as with all",
    "start": "1996880",
    "end": "2002799"
  },
  {
    "text": "the other monitoring tools and then here back in my in my cabins bridge",
    "start": "2002799",
    "end": "2008159"
  },
  {
    "text": "i have all the results for every single metric for every single run i can look at it i can also click on the",
    "start": "2008159",
    "end": "2014960"
  },
  {
    "text": "chart and then see things over time which is really nice",
    "start": "2014960",
    "end": "2020159"
  },
  {
    "text": "now i also want to quickly highlight uh captain 0.8 i mentioned open8 was just released and i'm really",
    "start": "2020159",
    "end": "2025919"
  },
  {
    "text": "happy about this because there's some really cool new capabilities in",
    "start": "2025919",
    "end": "2031519"
  },
  {
    "text": "0.8 you also have a nicer way of visualizing the stages so you can really easily click",
    "start": "2031519",
    "end": "2036960"
  },
  {
    "text": "and focus on the sequences here for the slo validation we now get a nice",
    "start": "2036960",
    "end": "2042080"
  },
  {
    "text": "overview of tables this was missing earlier what's the sli what's the value what is the pass and the warning criteria what's",
    "start": "2042080",
    "end": "2048240"
  },
  {
    "text": "the result what's the score how much does it contribute to the 100 points this is all here",
    "start": "2048240",
    "end": "2053440"
  },
  {
    "text": "and obviously you still have the charts as i just show you you can also ignore tests or ignore runs in case you had a",
    "start": "2053440",
    "end": "2059520"
  },
  {
    "text": "major issue that you're aware of so that it doesn't kind of pollute your baseline",
    "start": "2059520",
    "end": "2064800"
  },
  {
    "text": "right so really cool things that that are that are possible now especially also nicer visualization",
    "start": "2064800",
    "end": "2071280"
  },
  {
    "text": "all right now what that means is this is core to captain we always",
    "start": "2071280",
    "end": "2077280"
  },
  {
    "text": "evaluate our slos but it means you can also use it standalone and this is i have to admit",
    "start": "2077280",
    "end": "2083280"
  },
  {
    "text": "it's it's the first use case that people that people start with captain they say i may have already my pipeline i",
    "start": "2083280",
    "end": "2090000"
  },
  {
    "text": "already deploy with like christian here with gitlab and already kick off some tests but then",
    "start": "2090000",
    "end": "2095679"
  },
  {
    "text": "i have not yet automated my test validation so i want to use captain for it so in this case it's just from your",
    "start": "2095679",
    "end": "2101599"
  },
  {
    "text": "existing let's say gitlab pipeline you trigger the captain evaluation then captain brings back",
    "start": "2101599",
    "end": "2107440"
  },
  {
    "text": "the result all right last point i've shown you a lot about data driven",
    "start": "2107440",
    "end": "2115119"
  },
  {
    "text": "delivery data driven validation now the last concept is data driven operations",
    "start": "2115119",
    "end": "2121680"
  },
  {
    "text": "we also know that a lot of people are struggling with all the remediation and there we also",
    "start": "2121680",
    "end": "2126800"
  },
  {
    "text": "wanted to focus kept let captain focus on through a feature that we call closed loop remediation so similar to",
    "start": "2126800",
    "end": "2133040"
  },
  {
    "start": "2127000",
    "end": "2127000"
  },
  {
    "text": "orchestrating processes for delivery we can do the same thing for processes that we want to trigger as",
    "start": "2133040",
    "end": "2140320"
  },
  {
    "text": "part of a problem in production so for instance if you have a monitoring tool that alerts you on conversion rate dropped root causes cpu",
    "start": "2140320",
    "end": "2147440"
  },
  {
    "text": "pressure then you can specify similar to the shipyard file i showed you earlier but",
    "start": "2147440",
    "end": "2152560"
  },
  {
    "text": "now a remediation file will say these are my steps that i would execute as remediation and again these",
    "start": "2152560",
    "end": "2159359"
  },
  {
    "text": "steps these actions captain will take them and the way captain treats them is just",
    "start": "2159359",
    "end": "2165440"
  },
  {
    "text": "like with the delivery process it sends an event and say who has the capability to execute this",
    "start": "2165440",
    "end": "2171599"
  },
  {
    "text": "particular action on that system because this is what i i want to automate so for instance the",
    "start": "2171599",
    "end": "2178720"
  },
  {
    "text": "problem comes in captain will say well the first thing is scaling up so please scale up whoever",
    "start": "2178720",
    "end": "2183760"
  },
  {
    "text": "whatever action that is and then remember also for the order remediation we validate we",
    "start": "2183760",
    "end": "2191040"
  },
  {
    "text": "validate the slis and dslos and also we call them blossom business level objectives because in production",
    "start": "2191040",
    "end": "2196640"
  },
  {
    "text": "you typically then also take maybe some end user metrics to it what's the impact on the end user",
    "start": "2196640",
    "end": "2202000"
  },
  {
    "text": "and then based on that captain says yes the first remediation action brought the system back to a regulator",
    "start": "2202000",
    "end": "2207119"
  },
  {
    "text": "healthy state that's great if not run the next action and if nothing of that solves it then in",
    "start": "2207119",
    "end": "2213839"
  },
  {
    "text": "the end you can still escalate really cool but i know also really scary",
    "start": "2213839",
    "end": "2220079"
  },
  {
    "text": "a lot of people think they don't trust this in production as a first i'm running it as a first time this is why we are also partnering and",
    "start": "2220079",
    "end": "2226640"
  },
  {
    "text": "we've seen a lot of movement and this is why jurgen is great that he will be there with us next week in the live webinar",
    "start": "2226640",
    "end": "2232960"
  },
  {
    "text": "um integrating captain in prepro with chaos engineering so captain can trigger your performance",
    "start": "2232960",
    "end": "2239040"
  },
  {
    "text": "test to run some load against your system captain can also at the same time trigger your chaos test whether it's",
    "start": "2239040",
    "end": "2244240"
  },
  {
    "text": "litmus whether it's kremlin whatever you you use and then the first thing this does it",
    "start": "2244240",
    "end": "2249599"
  },
  {
    "text": "validates that you are alerting and monitoring works correctly and then you can use this",
    "start": "2249599",
    "end": "2255200"
  },
  {
    "text": "to create to refine to validate to battle test your remediation actions because you in the end this is a package you're pushing",
    "start": "2255200",
    "end": "2261680"
  },
  {
    "text": "new code through and the code now also comes with remediation actions and the the combination of both and the",
    "start": "2261680",
    "end": "2267760"
  },
  {
    "text": "orchestration that captain provides really wants to make sure that the system stays healthy even under chaotic",
    "start": "2267760",
    "end": "2273520"
  },
  {
    "text": "situations so captain can then be used here what i like to also call test driven operations",
    "start": "2273520",
    "end": "2279680"
  },
  {
    "text": "because that's really what it is i want to test drive my operational code that will be executed later in case",
    "start": "2279680",
    "end": "2285920"
  },
  {
    "text": "chaos really strikes but i've already battle tested it here so to wrap it up captain",
    "start": "2285920",
    "end": "2293760"
  },
  {
    "text": "is different things for different people but really what it is it allows you to painlessly automate",
    "start": "2293760",
    "end": "2300800"
  },
  {
    "text": "tasks around delivery and operations you pick your use case you bring your configuration you pick your tools",
    "start": "2300800",
    "end": "2307520"
  },
  {
    "text": "captain does the rest now captain 0.8 was just released and a",
    "start": "2307520",
    "end": "2313520"
  },
  {
    "text": "major milestone here is that we have now multi-cluster support so we can install the control plane that is managing and controlling",
    "start": "2313520",
    "end": "2320079"
  },
  {
    "text": "the processes and we can communicate to one or many different execution planes that then",
    "start": "2320079",
    "end": "2325440"
  },
  {
    "text": "actually do the execution itself christian is actually one of those people that are one of our early",
    "start": "2325440",
    "end": "2331280"
  },
  {
    "text": "adopters there to use captain triggered from gitlab",
    "start": "2331280",
    "end": "2337280"
  },
  {
    "text": "to then do multi-stage deployment into the different environments then having the deployment doing the",
    "start": "2337280",
    "end": "2342800"
  },
  {
    "text": "testing and then eventually promoting and the automated monitoring another cool thing is and i showed you",
    "start": "2342800",
    "end": "2348480"
  },
  {
    "text": "this briefly in the demo we went to a different shipyard model now we have shipyard version 0.2.0",
    "start": "2348480",
    "end": "2355520"
  },
  {
    "text": "which allows you to be more explicit on what should happen in each stage in the previous versions we were very up",
    "start": "2355520",
    "end": "2362880"
  },
  {
    "text": "not opportunistic opinionated that's the right word we were very opinionated on what happens in a stage",
    "start": "2362880",
    "end": "2369359"
  },
  {
    "text": "now we give you more freedom you can define your own tasks and sequences and you can say which sequence should trigger when",
    "start": "2369359",
    "end": "2375440"
  },
  {
    "text": "and what should happen after which sequence gives you more flexibility so have a look at cap 0.8 best way to",
    "start": "2375440",
    "end": "2382079"
  },
  {
    "text": "get started is to go to tutorials make sure you choose the right version and if you have any more questions feel",
    "start": "2382079",
    "end": "2387680"
  },
  {
    "text": "free to you know reach out to us make sure to",
    "start": "2387680",
    "end": "2392720"
  },
  {
    "text": "follow us on twitter visit our website join us on slack and uh yeah make sure to also join us",
    "start": "2392720",
    "end": "2400640"
  },
  {
    "text": "live at the cncf live webinar where we talk about captain then you can ask all the questions and we just go through the",
    "start": "2400640",
    "end": "2406240"
  },
  {
    "text": "product thank you so much happy sreeing happy scaling from a small project to to a",
    "start": "2406240",
    "end": "2412480"
  },
  {
    "text": "large enterprise skill thank you",
    "start": "2412480",
    "end": "2420560"
  }
]