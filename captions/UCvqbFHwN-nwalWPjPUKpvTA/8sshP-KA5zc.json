[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "can you all hear me okay hi my name is",
    "start": "30",
    "end": "4560"
  },
  {
    "text": "Siddharth and thank you all for coming",
    "start": "4560",
    "end": "6600"
  },
  {
    "text": "to my talk is called treating network",
    "start": "6600",
    "end": "9599"
  },
  {
    "text": "assets a schedulable of resources so I",
    "start": "9599",
    "end": "13380"
  },
  {
    "text": "am an engineer on the Amazon eks team",
    "start": "13380",
    "end": "15630"
  },
  {
    "text": "and in the past I have to work for the",
    "start": "15630",
    "end": "18600"
  },
  {
    "text": "Amazon",
    "start": "18600",
    "end": "18990"
  },
  {
    "text": "ECS team which is yet another container",
    "start": "18990",
    "end": "21029"
  },
  {
    "text": "orchestration framework and even before",
    "start": "21029",
    "end": "23670"
  },
  {
    "text": "that I used to work for a company called",
    "start": "23670",
    "end": "25470"
  },
  {
    "text": "Citrix when my Alice who work on the Xen",
    "start": "25470",
    "end": "27750"
  },
  {
    "text": "hypervisor and the open source jennifer",
    "start": "27750",
    "end": "29880"
  },
  {
    "text": "tool strap called sappy and I have a bit",
    "start": "29880",
    "end": "33360"
  },
  {
    "text": "of an agenda for today's talk I'll",
    "start": "33360",
    "end": "34920"
  },
  {
    "text": "briefly introduce CNI and container",
    "start": "34920",
    "end": "39450"
  },
  {
    "text": "scheduling before I move on to describe",
    "start": "39450",
    "end": "41550"
  },
  {
    "text": "the challenges and the solution we've",
    "start": "41550",
    "end": "43530"
  },
  {
    "text": "come up to address these challenges",
    "start": "43530",
    "end": "46699"
  },
  {
    "start": "48000",
    "end": "285000"
  },
  {
    "text": "let's move on to describing CNI see i",
    "start": "48379",
    "end": "52860"
  },
  {
    "text": "stands for container networking",
    "start": "52860",
    "end": "54899"
  },
  {
    "text": "interface",
    "start": "54899",
    "end": "55649"
  },
  {
    "text": "it's a highly overloaded term in today's",
    "start": "55649",
    "end": "58320"
  },
  {
    "text": "world because it means different things",
    "start": "58320",
    "end": "60300"
  },
  {
    "text": "to different people",
    "start": "60300",
    "end": "62870"
  },
  {
    "text": "the CNI project itself has multiple",
    "start": "63470",
    "end": "66810"
  },
  {
    "text": "provisions of the spec spec voice in 0.3",
    "start": "66810",
    "end": "70310"
  },
  {
    "text": "gives her three commands add delete and",
    "start": "70310",
    "end": "74010"
  },
  {
    "text": "version add is used to set up the",
    "start": "74010",
    "end": "76710"
  },
  {
    "text": "containers network namespace delete user",
    "start": "76710",
    "end": "79409"
  },
  {
    "text": "teardown and content network namespace",
    "start": "79409",
    "end": "80970"
  },
  {
    "text": "and work here is used to return a list",
    "start": "80970",
    "end": "83280"
  },
  {
    "text": "of supported versions of the CNI plug-in",
    "start": "83280",
    "end": "87080"
  },
  {
    "text": "there's a new version of the spec we 0.4",
    "start": "87080",
    "end": "90540"
  },
  {
    "text": "it defines a new method called check",
    "start": "90540",
    "end": "92880"
  },
  {
    "text": "that used to describe the containers",
    "start": "92880",
    "end": "95790"
  },
  {
    "text": "connectivity whether it works properly",
    "start": "95790",
    "end": "96960"
  },
  {
    "text": "or not the CMA project itself also hosts",
    "start": "96960",
    "end": "103649"
  },
  {
    "text": "a bunch of plugins they go all the way",
    "start": "103649",
    "end": "106439"
  },
  {
    "text": "from the simple loopback plugin to",
    "start": "106439",
    "end": "108299"
  },
  {
    "text": "advanced plugins like flannel and port",
    "start": "108299",
    "end": "109979"
  },
  {
    "text": "map we even see windows plugins now on",
    "start": "109979",
    "end": "112829"
  },
  {
    "text": "the cni project like wind bridge and",
    "start": "112829",
    "end": "114810"
  },
  {
    "text": "when overlay the Siena project also has",
    "start": "114810",
    "end": "120390"
  },
  {
    "text": "the library and provides a skeleton to",
    "start": "120390",
    "end": "122850"
  },
  {
    "text": "build and develop your own schema",
    "start": "122850",
    "end": "124380"
  },
  {
    "text": "plugins so to quickly recap on CNI the",
    "start": "124380",
    "end": "130379"
  },
  {
    "text": "CNI project defines the spec",
    "start": "130379",
    "end": "132390"
  },
  {
    "text": "has a library and also defines base",
    "start": "132390",
    "end": "135090"
  },
  {
    "text": "plugins to build your own cni plugins",
    "start": "135090",
    "end": "137040"
  },
  {
    "text": "for development and testing purposes the",
    "start": "137040",
    "end": "140580"
  },
  {
    "text": "Siena project essentially aims to",
    "start": "140580",
    "end": "142980"
  },
  {
    "text": "provide connectivity and reach ability",
    "start": "142980",
    "end": "144870"
  },
  {
    "text": "for containers the CNA program also has",
    "start": "144870",
    "end": "148380"
  },
  {
    "text": "capabilities called plug-in chaining",
    "start": "148380",
    "end": "149970"
  },
  {
    "text": "wherein you can make one plug-in call",
    "start": "149970",
    "end": "152640"
  },
  {
    "text": "another plug-in to get set up the",
    "start": "152640",
    "end": "154620"
  },
  {
    "text": "network net should set up a network",
    "start": "154620",
    "end": "156030"
  },
  {
    "text": "stack for the container the scanner",
    "start": "156030",
    "end": "160380"
  },
  {
    "text": "project is very useful for developers",
    "start": "160380",
    "end": "162209"
  },
  {
    "text": "because it exactly calls one method to",
    "start": "162209",
    "end": "165720"
  },
  {
    "text": "set up the stack and one method rotate",
    "start": "165720",
    "end": "167070"
  },
  {
    "text": "down the stack",
    "start": "167070",
    "end": "169290"
  },
  {
    "text": "since the cni project decouples the",
    "start": "169290",
    "end": "171959"
  },
  {
    "text": "network's development from the container",
    "start": "171959",
    "end": "174030"
  },
  {
    "text": "runtime",
    "start": "174030",
    "end": "174570"
  },
  {
    "text": "an orchestration frameworks it's",
    "start": "174570",
    "end": "176640"
  },
  {
    "text": "actually very useful for customers and",
    "start": "176640",
    "end": "179250"
  },
  {
    "text": "developers let's move on to see how",
    "start": "179250",
    "end": "185250"
  },
  {
    "text": "cubelet and CNI work together the",
    "start": "185250",
    "end": "188790"
  },
  {
    "text": "cubelet is not exactly aware of the pods",
    "start": "188790",
    "end": "190950"
  },
  {
    "text": "per se there ever or something called as",
    "start": "190950",
    "end": "193140"
  },
  {
    "text": "sand boxes and the sand boxes and ports",
    "start": "193140",
    "end": "196200"
  },
  {
    "text": "are loosely coupled and not tightly",
    "start": "196200",
    "end": "197579"
  },
  {
    "text": "coupled the only guarantee we have today",
    "start": "197579",
    "end": "200880"
  },
  {
    "text": "is that the cubelet guarantees at least",
    "start": "200880",
    "end": "204480"
  },
  {
    "text": "one invocation of the CNI plugin per",
    "start": "204480",
    "end": "207150"
  },
  {
    "text": "sandbox to enter that CNI and cube",
    "start": "207150",
    "end": "214019"
  },
  {
    "text": "network together we need a pass in these",
    "start": "214019",
    "end": "216420"
  },
  {
    "text": "mandatory flags you need to set the",
    "start": "216420",
    "end": "218970"
  },
  {
    "text": "network plugin to be CNI you need to",
    "start": "218970",
    "end": "221459"
  },
  {
    "text": "point it to the CNI binary directory and",
    "start": "221459",
    "end": "223590"
  },
  {
    "text": "the configuration directory and in cases",
    "start": "223590",
    "end": "226650"
  },
  {
    "text": "wherein you have multiple CNI setup on",
    "start": "226650",
    "end": "228600"
  },
  {
    "text": "the same node the use lexicographic",
    "start": "228600",
    "end": "231600"
  },
  {
    "text": "order to determine which plug-in to call",
    "start": "231600",
    "end": "233340"
  },
  {
    "text": "to set up the stack and if you now",
    "start": "233340",
    "end": "237660"
  },
  {
    "text": "typically see CNI deployments they are",
    "start": "237660",
    "end": "240239"
  },
  {
    "text": "typically daemon sets which have three",
    "start": "240239",
    "end": "241980"
  },
  {
    "text": "components there was a CNI plug-in",
    "start": "241980",
    "end": "244860"
  },
  {
    "text": "itself and then there's a CNI",
    "start": "244860",
    "end": "246690"
  },
  {
    "text": "configuration and then there is a node",
    "start": "246690",
    "end": "248910"
  },
  {
    "text": "level demon set",
    "start": "248910",
    "end": "249900"
  },
  {
    "text": "so the daemon is a long-running process",
    "start": "249900",
    "end": "251940"
  },
  {
    "text": "on the node that the plugin invoke to",
    "start": "251940",
    "end": "254280"
  },
  {
    "text": "set up the stack so if you take the case",
    "start": "254280",
    "end": "258870"
  },
  {
    "text": "of the Amazon you see a solution so we",
    "start": "258870",
    "end": "262140"
  },
  {
    "text": "have the ec2 instance and then we have",
    "start": "262140",
    "end": "264570"
  },
  {
    "text": "the cubelet",
    "start": "264570",
    "end": "265600"
  },
  {
    "text": "and then we have the plug-in itself so",
    "start": "265600",
    "end": "268270"
  },
  {
    "text": "when cubelet invokes the add command the",
    "start": "268270",
    "end": "271300"
  },
  {
    "text": "cni plug-in talk to the network local",
    "start": "271300",
    "end": "272890"
  },
  {
    "text": "control plane to get an IP and plumb the",
    "start": "272890",
    "end": "276370"
  },
  {
    "text": "routing and untrim the routing entries",
    "start": "276370",
    "end": "278470"
  },
  {
    "text": "on the node let's now move on to contain",
    "start": "278470",
    "end": "286450"
  },
  {
    "start": "285000",
    "end": "434000"
  },
  {
    "text": "a scheduling to see how it works so this",
    "start": "286450",
    "end": "290890"
  },
  {
    "text": "is the typical architecture of",
    "start": "290890",
    "end": "291910"
  },
  {
    "text": "kubernetes so the control frame consists",
    "start": "291910",
    "end": "295090"
  },
  {
    "text": "of three major components the API server",
    "start": "295090",
    "end": "298080"
  },
  {
    "text": "the scheduler and the controller manager",
    "start": "298080",
    "end": "300910"
  },
  {
    "text": "and they have a data store called HCD",
    "start": "300910",
    "end": "305070"
  },
  {
    "text": "this is just a flow of how parts get",
    "start": "306510",
    "end": "309670"
  },
  {
    "text": "scheduled in communities so when users",
    "start": "309670",
    "end": "312570"
  },
  {
    "text": "create a pod they send a request to the",
    "start": "312570",
    "end": "316270"
  },
  {
    "text": "API server we send savestate onto HCD",
    "start": "316270",
    "end": "320070"
  },
  {
    "text": "the scheduler watches for unassigned",
    "start": "320070",
    "end": "322660"
  },
  {
    "text": "quads and then tries to find a node for",
    "start": "322660",
    "end": "326350"
  },
  {
    "text": "this corresponding pod and it binds the",
    "start": "326350",
    "end": "328840"
  },
  {
    "text": "pod to a node and the state is saved",
    "start": "328840",
    "end": "330910"
  },
  {
    "text": "back onto a CD the cubelet then picks",
    "start": "330910",
    "end": "334630"
  },
  {
    "text": "the pod sets up the container net stack",
    "start": "334630",
    "end": "337540"
  },
  {
    "text": "and then runs the pod for you",
    "start": "337540",
    "end": "341250"
  },
  {
    "text": "the community scheduler essentially",
    "start": "343470",
    "end": "346030"
  },
  {
    "text": "finds nodes for posture on its complex",
    "start": "346030",
    "end": "350800"
  },
  {
    "text": "and feature-rich",
    "start": "350800",
    "end": "351970"
  },
  {
    "text": "it has a bunch of features you can set",
    "start": "351970",
    "end": "354520"
  },
  {
    "text": "node affinity and anti affinity for",
    "start": "354520",
    "end": "356800"
  },
  {
    "text": "definitey and 90 affinity also supports",
    "start": "356800",
    "end": "358810"
  },
  {
    "text": "trains and toleration x' so the default",
    "start": "358810",
    "end": "362110"
  },
  {
    "text": "scheduler typically takes CPU and memory",
    "start": "362110",
    "end": "364990"
  },
  {
    "text": "into accounting for scheduling so as an",
    "start": "364990",
    "end": "368590"
  },
  {
    "text": "example if you see the pod spec it has",
    "start": "368590",
    "end": "372250"
  },
  {
    "text": "CPU and memory limits that you can set",
    "start": "372250",
    "end": "374170"
  },
  {
    "text": "on them so with the Linux kernel both of",
    "start": "374170",
    "end": "377470"
  },
  {
    "text": "these come from Signum subsystem",
    "start": "377470",
    "end": "379740"
  },
  {
    "text": "typically CPU is the compressible",
    "start": "379740",
    "end": "381760"
  },
  {
    "text": "resource and it can be oversubscribed",
    "start": "381760",
    "end": "385710"
  },
  {
    "text": "you can use TP of shares to set up your",
    "start": "385710",
    "end": "389230"
  },
  {
    "text": "CPU limits you can also use a",
    "start": "389230",
    "end": "391090"
  },
  {
    "text": "combination of CPU quarters and CPU",
    "start": "391090",
    "end": "394360"
  },
  {
    "text": "period to get fine-grained control of",
    "start": "394360",
    "end": "396610"
  },
  {
    "text": "CPU and typically with memory it's not",
    "start": "396610",
    "end": "400990"
  },
  {
    "text": "compressible and running and when you",
    "start": "400990",
    "end": "403240"
  },
  {
    "text": "run out of memory it's going to kill",
    "start": "403240",
    "end": "405430"
  },
  {
    "text": "some process or a container so how this",
    "start": "405430",
    "end": "407500"
  },
  {
    "text": "thing happens is there's something",
    "start": "407500",
    "end": "408550"
  },
  {
    "text": "called as an ohm score that's computed",
    "start": "408550",
    "end": "411010"
  },
  {
    "text": "and the more higher and the higher the",
    "start": "411010",
    "end": "413020"
  },
  {
    "text": "score the more likely you're supposed to",
    "start": "413020",
    "end": "414160"
  },
  {
    "text": "are likely to be killed Kuban it is also",
    "start": "414160",
    "end": "419110"
  },
  {
    "text": "supports custom schedulers you can have",
    "start": "419110",
    "end": "423370"
  },
  {
    "text": "your own scheduler for special purposes",
    "start": "423370",
    "end": "424870"
  },
  {
    "text": "and special needs and the way to use",
    "start": "424870",
    "end": "427840"
  },
  {
    "text": "them is to set the scheduler name in",
    "start": "427840",
    "end": "429550"
  },
  {
    "text": "your spec let's move on now because some",
    "start": "429550",
    "end": "436630"
  },
  {
    "start": "434000",
    "end": "508000"
  },
  {
    "text": "of the challenges we applying to address",
    "start": "436630",
    "end": "440820"
  },
  {
    "text": "typically customers use VP C's to launch",
    "start": "442050",
    "end": "446080"
  },
  {
    "text": "the workloads and the me pcs can be",
    "start": "446080",
    "end": "448690"
  },
  {
    "text": "simple or complex me pcs can have public",
    "start": "448690",
    "end": "452320"
  },
  {
    "text": "subnets private subnets or multiple",
    "start": "452320",
    "end": "454540"
  },
  {
    "text": "siders one of the key challenges is how",
    "start": "454540",
    "end": "458650"
  },
  {
    "text": "do you account for networking assets in",
    "start": "458650",
    "end": "461080"
  },
  {
    "text": "the scheduling process in communities",
    "start": "461080",
    "end": "463630"
  },
  {
    "text": "follows an IP per pod model and with",
    "start": "463630",
    "end": "466930"
  },
  {
    "text": "this at scale how do you ensure that it",
    "start": "466930",
    "end": "469000"
  },
  {
    "text": "happens the other big challenge is that",
    "start": "469000",
    "end": "474510"
  },
  {
    "text": "with typical CNI deployments they use n3",
    "start": "474510",
    "end": "478120"
  },
  {
    "text": "networking and we also have a",
    "start": "478120",
    "end": "480460"
  },
  {
    "text": "long-running node level daemon which is",
    "start": "480460",
    "end": "482830"
  },
  {
    "text": "used to set up the routing entries on",
    "start": "482830",
    "end": "484960"
  },
  {
    "text": "the host is there a way to get rid of",
    "start": "484960",
    "end": "486820"
  },
  {
    "text": "them and typically the I M permissions",
    "start": "486820",
    "end": "493570"
  },
  {
    "text": "on the node are really exhaustive",
    "start": "493570",
    "end": "496030"
  },
  {
    "text": "because you need to like create and",
    "start": "496030",
    "end": "497350"
  },
  {
    "text": "delete interfaces assign and D assign IP",
    "start": "497350",
    "end": "499990"
  },
  {
    "text": "addresses on the interfaces so is there",
    "start": "499990",
    "end": "502390"
  },
  {
    "text": "a way to reduce the surface area is the",
    "start": "502390",
    "end": "504220"
  },
  {
    "text": "next big challenge so let's move on to",
    "start": "504220",
    "end": "510610"
  },
  {
    "start": "508000",
    "end": "716000"
  },
  {
    "text": "the solution the solution we built uses",
    "start": "510610",
    "end": "514599"
  },
  {
    "text": "external resources it uses custom",
    "start": "514599",
    "end": "517270"
  },
  {
    "text": "resource controllers it also use the",
    "start": "517270",
    "end": "519880"
  },
  {
    "text": "admission web hooks and then we now have",
    "start": "519880",
    "end": "522039"
  },
  {
    "text": "CNI plugin to factor all of this into",
    "start": "522040",
    "end": "524320"
  },
  {
    "text": "account",
    "start": "524320",
    "end": "526380"
  },
  {
    "text": "so the first component is called the BBC",
    "start": "526870",
    "end": "530200"
  },
  {
    "text": "resource controller this aims to",
    "start": "530200",
    "end": "533020"
  },
  {
    "text": "provision and manage BBC resources for",
    "start": "533020",
    "end": "535960"
  },
  {
    "text": "the cluster it's built using go so its",
    "start": "535960",
    "end": "540370"
  },
  {
    "text": "platform agnostic and architecture",
    "start": "540370",
    "end": "542500"
  },
  {
    "text": "agnostic it can be built for any",
    "start": "542500",
    "end": "544420"
  },
  {
    "text": "platform and for any architecture the",
    "start": "544420",
    "end": "549100"
  },
  {
    "text": "controller also has a flexible resource",
    "start": "549100",
    "end": "552340"
  },
  {
    "text": "model and has a simple provider",
    "start": "552340",
    "end": "554800"
  },
  {
    "text": "interface the provider interface makes",
    "start": "554800",
    "end": "557410"
  },
  {
    "text": "it very easy to add new resources to the",
    "start": "557410",
    "end": "560740"
  },
  {
    "text": "controller let's look at the provider",
    "start": "560740",
    "end": "567790"
  },
  {
    "text": "interface the provider interface",
    "start": "567790",
    "end": "570790"
  },
  {
    "text": "basically has five methods the first is",
    "start": "570790",
    "end": "574180"
  },
  {
    "text": "called get resource name that method",
    "start": "574180",
    "end": "575860"
  },
  {
    "text": "just defines the name of the resource",
    "start": "575860",
    "end": "577330"
  },
  {
    "text": "and then you can basically tweak your",
    "start": "577330",
    "end": "579610"
  },
  {
    "text": "warm pool settings for the resource of",
    "start": "579610",
    "end": "581890"
  },
  {
    "text": "planning to create and delete so the",
    "start": "581890",
    "end": "584500"
  },
  {
    "text": "method called inert resourceful is for",
    "start": "584500",
    "end": "586420"
  },
  {
    "text": "the initial setup of the resource pool",
    "start": "586420",
    "end": "587830"
  },
  {
    "text": "for this particular resource create",
    "start": "587830",
    "end": "591220"
  },
  {
    "text": "resource is used to create a give a",
    "start": "591220",
    "end": "594730"
  },
  {
    "text": "number of quantity of a given resource",
    "start": "594730",
    "end": "596440"
  },
  {
    "text": "on a given node and delete let's just",
    "start": "596440",
    "end": "599290"
  },
  {
    "text": "use a free app or to free up the",
    "start": "599290",
    "end": "600400"
  },
  {
    "text": "resource on the given node as of today",
    "start": "600400",
    "end": "605050"
  },
  {
    "text": "we have two implementations of the",
    "start": "605050",
    "end": "607810"
  },
  {
    "text": "provider interface we have the eni",
    "start": "607810",
    "end": "610180"
  },
  {
    "text": "provider and the IP address provider so",
    "start": "610180",
    "end": "617140"
  },
  {
    "text": "how this thing actually works under the",
    "start": "617140",
    "end": "619480"
  },
  {
    "text": "hood so the controller watches for node",
    "start": "619480",
    "end": "622480"
  },
  {
    "text": "objects and then advertises the nodes",
    "start": "622480",
    "end": "626880"
  },
  {
    "text": "capabilities like for example in this",
    "start": "626880",
    "end": "629560"
  },
  {
    "text": "case we get no objects and when we",
    "start": "629560",
    "end": "632140"
  },
  {
    "text": "handle them we get the notes",
    "start": "632140",
    "end": "633760"
  },
  {
    "text": "capabilities in terms of networking",
    "start": "633760",
    "end": "635200"
  },
  {
    "text": "capabilities like how many a nice",
    "start": "635200",
    "end": "636760"
  },
  {
    "text": "there's no supports and how many IP for",
    "start": "636760",
    "end": "639280"
  },
  {
    "text": "interfaces the Kansas node support and",
    "start": "639280",
    "end": "640870"
  },
  {
    "text": "with an advertise them at the extranet",
    "start": "640870",
    "end": "642520"
  },
  {
    "text": "resources for example in this case we",
    "start": "642520",
    "end": "646420"
  },
  {
    "text": "see that this node has one eni and that",
    "start": "646420",
    "end": "649840"
  },
  {
    "text": "eni supports protein IPS the controller",
    "start": "649840",
    "end": "656260"
  },
  {
    "text": "also watches for pod objects",
    "start": "656260",
    "end": "659970"
  },
  {
    "text": "so what the controller now does is that",
    "start": "661420",
    "end": "664399"
  },
  {
    "text": "it tries to find an IP for the port to",
    "start": "664399",
    "end": "666860"
  },
  {
    "text": "consume and annotates the ports back",
    "start": "666860",
    "end": "669170"
  },
  {
    "text": "with the IP to be used we also have a V",
    "start": "669170",
    "end": "677390"
  },
  {
    "text": "PC admission webhook it is a mutating",
    "start": "677390",
    "end": "680269"
  },
  {
    "text": "admission web hook that basically",
    "start": "680269",
    "end": "682490"
  },
  {
    "text": "injects extended resource requirements",
    "start": "682490",
    "end": "684950"
  },
  {
    "text": "for the pod object for example in this",
    "start": "684950",
    "end": "689540"
  },
  {
    "text": "case we see the limits and requests for",
    "start": "689540",
    "end": "694279"
  },
  {
    "text": "the pod objects the C&I plug-in itself",
    "start": "694279",
    "end": "699589"
  },
  {
    "text": "is fairly simple it's a simple",
    "start": "699589",
    "end": "701899"
  },
  {
    "text": "executable that reads support",
    "start": "701899",
    "end": "704180"
  },
  {
    "text": "annotations to set up the pod Network to",
    "start": "704180",
    "end": "706640"
  },
  {
    "text": "set up the pod Network stack the plugin",
    "start": "706640",
    "end": "709880"
  },
  {
    "text": "also provides connectivity and reach",
    "start": "709880",
    "end": "711500"
  },
  {
    "text": "ability let's go for a quick demo",
    "start": "711500",
    "end": "721149"
  },
  {
    "start": "716000",
    "end": "836000"
  },
  {
    "text": "can you all see the screen is this",
    "start": "738010",
    "end": "748660"
  },
  {
    "text": "better",
    "start": "748660",
    "end": "750899"
  },
  {
    "text": "this is good all right",
    "start": "758050",
    "end": "763709"
  },
  {
    "text": "okay it's be hard for me to see okay",
    "start": "770680",
    "end": "775230"
  },
  {
    "text": "okay give me a second",
    "start": "790300",
    "end": "794200"
  },
  {
    "start": "836000",
    "end": "1271000"
  },
  {
    "text": "just bear with me yep Oh",
    "start": "848170",
    "end": "858090"
  },
  {
    "text": "in my cluster I have a 1.11 cluster and",
    "start": "858090",
    "end": "861900"
  },
  {
    "text": "I have a bunch of nodes to make the demo",
    "start": "861900",
    "end": "864750"
  },
  {
    "text": "more interesting we have a bunch of",
    "start": "864750",
    "end": "873750"
  },
  {
    "text": "Linux nodes and Windows nodes they still",
    "start": "873750",
    "end": "881010"
  },
  {
    "text": "hug is it hard to read on the back",
    "start": "881010",
    "end": "885140"
  },
  {
    "text": "okay so onto this cluster",
    "start": "898960",
    "end": "902470"
  },
  {
    "text": "I'm deployed by BBC admission webhook",
    "start": "902470",
    "end": "905470"
  },
  {
    "text": "and the controller so so we have the",
    "start": "905470",
    "end": "914710"
  },
  {
    "text": "controller and the web book running for",
    "start": "914710",
    "end": "916540"
  },
  {
    "text": "this cluster now let's do some work",
    "start": "916540",
    "end": "920680"
  },
  {
    "text": "loops onto this cluster so can you read",
    "start": "920680",
    "end": "930250"
  },
  {
    "text": "this so we are deploying a simple server",
    "start": "930250",
    "end": "936040"
  },
  {
    "text": "core web server on to this cluster this",
    "start": "936040",
    "end": "938260"
  },
  {
    "text": "is a Windows pod",
    "start": "938260",
    "end": "941160"
  },
  {
    "text": "okay",
    "start": "953360",
    "end": "956360"
  },
  {
    "text": "we now see that all of these quads are",
    "start": "958730",
    "end": "960770"
  },
  {
    "text": "running and if you describe any of them",
    "start": "960770",
    "end": "966710"
  },
  {
    "text": "in detail",
    "start": "966710",
    "end": "969100"
  },
  {
    "text": "you see that the admission web book has",
    "start": "975930",
    "end": "978870"
  },
  {
    "text": "injected a limit of the private IP and a",
    "start": "978870",
    "end": "982590"
  },
  {
    "text": "request for the same for the same you",
    "start": "982590",
    "end": "985980"
  },
  {
    "text": "can also see the controller injecting",
    "start": "985980",
    "end": "990300"
  },
  {
    "text": "annotations with the pod IP address and",
    "start": "990300",
    "end": "994310"
  },
  {
    "text": "this should match the pods actual IP",
    "start": "994310",
    "end": "997140"
  },
  {
    "text": "just set by the cni plugin for the squad",
    "start": "997140",
    "end": "1001870"
  },
  {
    "text": "since this cluster has both linux nodes",
    "start": "1002590",
    "end": "1005150"
  },
  {
    "text": "and windows note you can also schedule",
    "start": "1005150",
    "end": "1006740"
  },
  {
    "text": "linux notes on them this is a simple",
    "start": "1006740",
    "end": "1014980"
  },
  {
    "text": "simple pod : ax so if you apply these",
    "start": "1014980",
    "end": "1022570"
  },
  {
    "text": "all of these should be running and",
    "start": "1030850",
    "end": "1034620"
  },
  {
    "text": "we can also scale the deployments for",
    "start": "1049480",
    "end": "1052190"
  },
  {
    "text": "example let's scale this to ten odds",
    "start": "1052190",
    "end": "1058240"
  },
  {
    "text": "you see a lot of them are running and if",
    "start": "1066630",
    "end": "1071770"
  },
  {
    "text": "you know describe one of these quads",
    "start": "1071770",
    "end": "1075720"
  },
  {
    "text": "you now see that this node has",
    "start": "1084980",
    "end": "1088670"
  },
  {
    "text": "advertised an opaque resource called",
    "start": "1088670",
    "end": "1091220"
  },
  {
    "text": "private ipv4 address and three of them",
    "start": "1091220",
    "end": "1093860"
  },
  {
    "text": "are being consumed by the pod they have",
    "start": "1093860",
    "end": "1095720"
  },
  {
    "text": "on the cluster any questions yes okay",
    "start": "1095720",
    "end": "1117370"
  },
  {
    "text": "is it COO net or the web hood",
    "start": "1117680",
    "end": "1119590"
  },
  {
    "text": "considering the amount of IP addresses",
    "start": "1119590",
    "end": "1121370"
  },
  {
    "text": "available in your cluster like for",
    "start": "1121370",
    "end": "1123110"
  },
  {
    "text": "example in our slash 21 cluster you will",
    "start": "1123110",
    "end": "1126110"
  },
  {
    "text": "submit you will be able to have a",
    "start": "1126110",
    "end": "1128420"
  },
  {
    "text": "limited amount of IP addresses so this",
    "start": "1128420",
    "end": "1131450"
  },
  {
    "text": "IP address limit come from the node",
    "start": "1131450",
    "end": "1133040"
  },
  {
    "text": "itself like in Amazon each instance",
    "start": "1133040",
    "end": "1136520"
  },
  {
    "text": "supports a fist say a set number of en",
    "start": "1136520",
    "end": "1138500"
  },
  {
    "text": "eyes and eg and I has a set number of IP",
    "start": "1138500",
    "end": "1140720"
  },
  {
    "text": "addresses for instance type so the iPad",
    "start": "1140720",
    "end": "1142790"
  },
  {
    "text": "as you see is based on the instance type",
    "start": "1142790",
    "end": "1144830"
  },
  {
    "text": "of your worker node so also unknown",
    "start": "1144830",
    "end": "1148700"
  },
  {
    "text": "known as unknown eni situations it's",
    "start": "1148700",
    "end": "1152720"
  },
  {
    "text": "very common to have like a limit of 255",
    "start": "1152720",
    "end": "1155620"
  },
  {
    "text": "addresses per per node so I just wanted",
    "start": "1155620",
    "end": "1162290"
  },
  {
    "text": "to point out that for example when",
    "start": "1162290",
    "end": "1163820"
  },
  {
    "text": "running any key as you have to be",
    "start": "1163820",
    "end": "1164900"
  },
  {
    "text": "careful with this subnet that you decide",
    "start": "1164900",
    "end": "1166580"
  },
  {
    "text": "to choose all the way then into a limit",
    "start": "1166580",
    "end": "1168950"
  },
  {
    "text": "of IP addresses as you can allocate",
    "start": "1168950",
    "end": "1170450"
  },
  {
    "text": "interview PC and then you are",
    "start": "1170450",
    "end": "1173210"
  },
  {
    "text": "practically import never work because I",
    "start": "1173210",
    "end": "1176390"
  },
  {
    "text": "won't have a networking so your BBC",
    "start": "1176390",
    "end": "1179690"
  },
  {
    "text": "configuration is different from the",
    "start": "1179690",
    "end": "1181040"
  },
  {
    "text": "limits you see here so your subnet can",
    "start": "1181040",
    "end": "1183170"
  },
  {
    "text": "be bigger or smaller if you have really",
    "start": "1183170",
    "end": "1185240"
  },
  {
    "text": "really tiny subnet the IP limits come",
    "start": "1185240",
    "end": "1187460"
  },
  {
    "text": "from the instance class and not from the",
    "start": "1187460",
    "end": "1189050"
  },
  {
    "text": "subnet itself thank you",
    "start": "1189050",
    "end": "1194740"
  },
  {
    "text": "I'm sorry I just",
    "start": "1194780",
    "end": "1197370"
  },
  {
    "text": "if we add a syrup here has come from the",
    "start": "1197370",
    "end": "1201120"
  },
  {
    "text": "IP address comes the IP address the",
    "start": "1201120",
    "end": "1202830"
  },
  {
    "text": "private IP address from the VP see from",
    "start": "1202830",
    "end": "1207030"
  },
  {
    "text": "the VP see yes okay so each part in eks",
    "start": "1207030",
    "end": "1211260"
  },
  {
    "text": "and gets a private IP from the BBC and",
    "start": "1211260",
    "end": "1213680"
  },
  {
    "text": "when I changed the network so it's",
    "start": "1213680",
    "end": "1215760"
  },
  {
    "text": "doable on the fly I'm sorry when I want",
    "start": "1215760",
    "end": "1219120"
  },
  {
    "text": "to change the the networks because maybe",
    "start": "1219120",
    "end": "1220980"
  },
  {
    "text": "I'm I'm running out of IP addresses I",
    "start": "1220980",
    "end": "1223080"
  },
  {
    "text": "switch into a different network scope is",
    "start": "1223080",
    "end": "1225390"
  },
  {
    "text": "this configure configurable or is it",
    "start": "1225390",
    "end": "1228360"
  },
  {
    "text": "static what configurable if I change in",
    "start": "1228360",
    "end": "1232800"
  },
  {
    "text": "the subnets or subnet sizes or something",
    "start": "1232800",
    "end": "1234810"
  },
  {
    "text": "like that so the limit is for instance",
    "start": "1234810",
    "end": "1236730"
  },
  {
    "text": "and not for subnet hi yes",
    "start": "1236730",
    "end": "1245630"
  },
  {
    "text": "other obstacles in this design to",
    "start": "1248950",
    "end": "1251290"
  },
  {
    "text": "supporting public IP addresses of really",
    "start": "1251290",
    "end": "1255340"
  },
  {
    "text": "globally routable IP addresses for pods",
    "start": "1255340",
    "end": "1258880"
  },
  {
    "text": "I mainly think about ipv6 for the future",
    "start": "1258880",
    "end": "1261730"
  },
  {
    "text": "but globally reachable ipv4 as well so",
    "start": "1261730",
    "end": "1265210"
  },
  {
    "text": "it's gonna be easy to scale this model",
    "start": "1265210",
    "end": "1267550"
  },
  {
    "text": "to support IP addresses you can just",
    "start": "1267550",
    "end": "1269740"
  },
  {
    "text": "have a new provider that gives you",
    "start": "1269740",
    "end": "1271630"
  },
  {
    "text": "public IP address instead of EPC private",
    "start": "1271630",
    "end": "1273340"
  },
  {
    "text": "IP addresses and that's possible with",
    "start": "1273340",
    "end": "1275440"
  },
  {
    "text": "this model if I understand your design",
    "start": "1275440",
    "end": "1284080"
  },
  {
    "text": "correctly and I feel so I can see that",
    "start": "1284080",
    "end": "1288010"
  },
  {
    "text": "the the local ipam is not really",
    "start": "1288010",
    "end": "1290830"
  },
  {
    "text": "responsible for assigning the IP address",
    "start": "1290830",
    "end": "1292750"
  },
  {
    "text": "so so is it possible that with this with",
    "start": "1292750",
    "end": "1296470"
  },
  {
    "text": "this design we are completely able to",
    "start": "1296470",
    "end": "1298810"
  },
  {
    "text": "ignore the IP address range assigned to",
    "start": "1298810",
    "end": "1302140"
  },
  {
    "text": "a node and just and just rely on the",
    "start": "1302140",
    "end": "1305740"
  },
  {
    "text": "controller and the CNI for IPAM",
    "start": "1305740",
    "end": "1309570"
  },
  {
    "text": "essentially what happens is now we know",
    "start": "1309570",
    "end": "1311830"
  },
  {
    "text": "near I Pam D on the node because the IP",
    "start": "1311830",
    "end": "1314290"
  },
  {
    "text": "addresses comes from the controller",
    "start": "1314290",
    "end": "1315820"
  },
  {
    "text": "itself so you can do away with I Pam D",
    "start": "1315820",
    "end": "1318280"
  },
  {
    "text": "with this model there is the only thing",
    "start": "1318280",
    "end": "1323920"
  },
  {
    "text": "I wanted to confirm so that's really",
    "start": "1323920",
    "end": "1325600"
  },
  {
    "text": "cool",
    "start": "1325600",
    "end": "1326080"
  },
  {
    "text": "it's really cool okay all right thank",
    "start": "1326080",
    "end": "1327970"
  },
  {
    "text": "you any more I missed it just wasn't",
    "start": "1327970",
    "end": "1339040"
  },
  {
    "text": "really clear on the run the limits and",
    "start": "1339040",
    "end": "1341320"
  },
  {
    "text": "the requests obviously the same things",
    "start": "1341320",
    "end": "1343420"
  },
  {
    "text": "or there's a one-to-one relationship",
    "start": "1343420",
    "end": "1344500"
  },
  {
    "text": "there but does that impact their",
    "start": "1344500",
    "end": "1346510"
  },
  {
    "text": "scheduling on to that so if you've got a",
    "start": "1346510",
    "end": "1348070"
  },
  {
    "text": "node that's got a ton load of small pods",
    "start": "1348070",
    "end": "1350500"
  },
  {
    "text": "on there and you run out of your your",
    "start": "1350500",
    "end": "1352870"
  },
  {
    "text": "eni and your IP limits for that node is",
    "start": "1352870",
    "end": "1356650"
  },
  {
    "text": "I mean the new pods won't be scheduled",
    "start": "1356650",
    "end": "1358960"
  },
  {
    "text": "on there so if the nord can't support",
    "start": "1358960",
    "end": "1364120"
  },
  {
    "text": "new IP addresses then you have pods will",
    "start": "1364120",
    "end": "1366190"
  },
  {
    "text": "be stuck in pending but they will know",
    "start": "1366190",
    "end": "1367720"
  },
  {
    "text": "now know that you cannot run the ports",
    "start": "1367720",
    "end": "1370630"
  },
  {
    "text": "because they don't have an IP address",
    "start": "1370630",
    "end": "1372000"
  },
  {
    "text": "available for the for any of your class",
    "start": "1372000",
    "end": "1374080"
  },
  {
    "text": "any of the nodes in the cluster so just",
    "start": "1374080",
    "end": "1378280"
  },
  {
    "text": "so clear they will schedule they'll just",
    "start": "1378280",
    "end": "1379930"
  },
  {
    "text": "feel they'll sit in a pending state",
    "start": "1379930",
    "end": "1381580"
  },
  {
    "text": "until",
    "start": "1381580",
    "end": "1382450"
  },
  {
    "text": "some other external actions you need to",
    "start": "1382450",
    "end": "1384129"
  },
  {
    "text": "have like an alert so to do that so once",
    "start": "1384129",
    "end": "1386799"
  },
  {
    "text": "you add more north via cluster and then",
    "start": "1386799",
    "end": "1388779"
  },
  {
    "text": "you have enough IP capacity the port",
    "start": "1388779",
    "end": "1391119"
  },
  {
    "text": "will then continue to run on on the",
    "start": "1391119",
    "end": "1392859"
  },
  {
    "text": "available nodes that you have on the",
    "start": "1392859",
    "end": "1394179"
  },
  {
    "text": "cluster I think the answer is if they're",
    "start": "1394179",
    "end": "1396340"
  },
  {
    "text": "pending they're not shed jeweled I think",
    "start": "1396340",
    "end": "1399039"
  },
  {
    "text": "that's the question you're asking",
    "start": "1399039",
    "end": "1399970"
  },
  {
    "text": "they've not been allocated to a node if",
    "start": "1399970",
    "end": "1402159"
  },
  {
    "text": "they're pending so I've got two nodes",
    "start": "1402159",
    "end": "1406239"
  },
  {
    "text": "one that's got two massive pods on it",
    "start": "1406239",
    "end": "1408340"
  },
  {
    "text": "one that's got tons of small pods on it",
    "start": "1408340",
    "end": "1410710"
  },
  {
    "text": "and the node with a lot of small pods",
    "start": "1410710",
    "end": "1413639"
  },
  {
    "text": "exhausts all of the IP addresses that",
    "start": "1413639",
    "end": "1415720"
  },
  {
    "text": "are available for that node type and I",
    "start": "1415720",
    "end": "1418899"
  },
  {
    "text": "go to try and put on another another pod",
    "start": "1418899",
    "end": "1421830"
  },
  {
    "text": "will it shed you'll it to the one that's",
    "start": "1421830",
    "end": "1424330"
  },
  {
    "text": "got capacity to be able to do it you",
    "start": "1424330",
    "end": "1426249"
  },
  {
    "text": "know it's ignoring the CPU and memory",
    "start": "1426249",
    "end": "1427989"
  },
  {
    "text": "capacity stuff so with this model we",
    "start": "1427989",
    "end": "1431139"
  },
  {
    "text": "advertise the new opaque resource called",
    "start": "1431139",
    "end": "1432549"
  },
  {
    "text": "IP address for the whole cluster so when",
    "start": "1432549",
    "end": "1434830"
  },
  {
    "text": "the scheduler tries to find a node for",
    "start": "1434830",
    "end": "1436330"
  },
  {
    "text": "your pod they'll try to find a node",
    "start": "1436330",
    "end": "1438190"
  },
  {
    "text": "which has enough private IP capacity and",
    "start": "1438190",
    "end": "1440590"
  },
  {
    "text": "then put the pods on that particular",
    "start": "1440590",
    "end": "1442299"
  },
  {
    "text": "node",
    "start": "1442299",
    "end": "1444508"
  },
  {
    "text": "is there a concept of a persistent IP",
    "start": "1448940",
    "end": "1451429"
  },
  {
    "text": "request for example if you have a",
    "start": "1451429",
    "end": "1454249"
  },
  {
    "text": "elastic IP bound to a private IP can you",
    "start": "1454249",
    "end": "1457249"
  },
  {
    "text": "request that that that you always be",
    "start": "1457249",
    "end": "1459859"
  },
  {
    "text": "assigned to that node on that of IP I",
    "start": "1459859",
    "end": "1462669"
  },
  {
    "text": "don't think that's possible out of the",
    "start": "1462669",
    "end": "1464690"
  },
  {
    "text": "box because the kind of design works",
    "start": "1464690",
    "end": "1467629"
  },
  {
    "text": "with private IP addresses from the BBC",
    "start": "1467629",
    "end": "1470649"
  },
  {
    "text": "ok so you don't consider IP requests",
    "start": "1470649",
    "end": "1473929"
  },
  {
    "text": "when scheduling just the amount of IP",
    "start": "1473929",
    "end": "1476210"
  },
  {
    "text": "address that APOD requests yes ok thank",
    "start": "1476210",
    "end": "1479149"
  },
  {
    "text": "you",
    "start": "1479149",
    "end": "1481210"
  },
  {
    "text": "anymore we're going over there are you",
    "start": "1485900",
    "end": "1488540"
  },
  {
    "text": "just retching okay",
    "start": "1488540",
    "end": "1490809"
  },
  {
    "text": "as you're gonna make me run to the back",
    "start": "1490809",
    "end": "1495940"
  },
  {
    "text": "so what I need to change if I want to",
    "start": "1503740",
    "end": "1507590"
  },
  {
    "text": "start using a secondary IP siders",
    "start": "1507590",
    "end": "1511690"
  },
  {
    "text": "secondary cider IPS for the the pods",
    "start": "1511690",
    "end": "1516490"
  },
  {
    "text": "could you just repeat the question so if",
    "start": "1516490",
    "end": "1521390"
  },
  {
    "text": "I run out of IPS in my current cider and",
    "start": "1521390",
    "end": "1526010"
  },
  {
    "text": "add a secondary cider",
    "start": "1526010",
    "end": "1528650"
  },
  {
    "text": "can I start using them in in eks and",
    "start": "1528650",
    "end": "1531650"
  },
  {
    "text": "work what I need to change in the",
    "start": "1531650",
    "end": "1533900"
  },
  {
    "text": "cluster so the current controller does",
    "start": "1533900",
    "end": "1538040"
  },
  {
    "text": "not take into account second two ciders",
    "start": "1538040",
    "end": "1539860"
  },
  {
    "text": "but if you have a node that's in the",
    "start": "1539860",
    "end": "1542210"
  },
  {
    "text": "secondary side arrange and then the IP",
    "start": "1542210",
    "end": "1544220"
  },
  {
    "text": "addresses would then be able to come",
    "start": "1544220",
    "end": "1545750"
  },
  {
    "text": "from that range for you thank you",
    "start": "1545750",
    "end": "1550720"
  },
  {
    "text": "disappoint about the question that the",
    "start": "1560240",
    "end": "1563010"
  },
  {
    "text": "they hit it is it when you want to add a",
    "start": "1563010",
    "end": "1567960"
  },
  {
    "text": "secondary CIDR to to the V PC so to the",
    "start": "1567960",
    "end": "1572280"
  },
  {
    "text": "e case cluster also because you are",
    "start": "1572280",
    "end": "1573750"
  },
  {
    "text": "running out of IP addresses the V PC",
    "start": "1573750",
    "end": "1577500"
  },
  {
    "text": "high V changes so I was running into",
    "start": "1577500",
    "end": "1580650"
  },
  {
    "text": "that that issue with the KS so I was",
    "start": "1580650",
    "end": "1583890"
  },
  {
    "text": "creating the cluster with terraform and",
    "start": "1583890",
    "end": "1585600"
  },
  {
    "text": "since the IV changes of the V PC you",
    "start": "1585600",
    "end": "1588960"
  },
  {
    "text": "need to recreate the cluster because you",
    "start": "1588960",
    "end": "1590940"
  },
  {
    "text": "need to assign the the new I you'd have",
    "start": "1590940",
    "end": "1595440"
  },
  {
    "text": "to assign the new IV to the eks cluster",
    "start": "1595440",
    "end": "1598380"
  },
  {
    "text": "so I had to reassign to recreate sorry",
    "start": "1598380",
    "end": "1601080"
  },
  {
    "text": "biggest cluster is that possible through",
    "start": "1601080",
    "end": "1604830"
  },
  {
    "text": "the Amazon console to just configure the",
    "start": "1604830",
    "end": "1609120"
  },
  {
    "text": "V PC so it will be reconfigured so I",
    "start": "1609120",
    "end": "1612930"
  },
  {
    "text": "mean is it necessary ready to recreate",
    "start": "1612930",
    "end": "1615030"
  },
  {
    "text": "the case cluster when when you are the",
    "start": "1615030",
    "end": "1618450"
  },
  {
    "text": "secondary CIDR to the V PC so the ID",
    "start": "1618450",
    "end": "1620940"
  },
  {
    "text": "changes might be a little detail maybe",
    "start": "1620940",
    "end": "1624210"
  },
  {
    "text": "you should just go to the Amazon booth",
    "start": "1624210",
    "end": "1625320"
  },
  {
    "text": "and asked that question a little bit",
    "start": "1625320",
    "end": "1628260"
  },
  {
    "text": "down in the weeds I think for for the",
    "start": "1628260",
    "end": "1630570"
  },
  {
    "text": "big audience",
    "start": "1630570",
    "end": "1631440"
  },
  {
    "text": "the current controller does not take",
    "start": "1631440",
    "end": "1633300"
  },
  {
    "text": "into account ii decided ranges yet but",
    "start": "1633300",
    "end": "1635310"
  },
  {
    "text": "will add support for that so on",
    "start": "1635310",
    "end": "1638360"
  },
  {
    "text": "not again I had a question in principle",
    "start": "1641770",
    "end": "1646450"
  },
  {
    "text": "with the your current code be adaptable",
    "start": "1646450",
    "end": "1649510"
  },
  {
    "text": "to some other cloud platforms are some",
    "start": "1649510",
    "end": "1651730"
  },
  {
    "text": "native I mean VM based or clusters or is",
    "start": "1651730",
    "end": "1657220"
  },
  {
    "text": "it sort of Amazon specific at the moment",
    "start": "1657220",
    "end": "1659470"
  },
  {
    "text": "so I think the controller is a very",
    "start": "1659470",
    "end": "1661120"
  },
  {
    "text": "general purpose and extensible can just",
    "start": "1661120",
    "end": "1663070"
  },
  {
    "text": "add a new provider or whatever resource",
    "start": "1663070",
    "end": "1665590"
  },
  {
    "text": "you want and then make it register with",
    "start": "1665590",
    "end": "1667840"
  },
  {
    "text": "the V PC controller and then things",
    "start": "1667840",
    "end": "1669730"
  },
  {
    "text": "should work for you",
    "start": "1669730",
    "end": "1670510"
  },
  {
    "text": "thank you we can I find it what do you",
    "start": "1670510",
    "end": "1679720"
  },
  {
    "text": "mean we can I find the code on github so",
    "start": "1679720",
    "end": "1683020"
  },
  {
    "text": "as part of the windows public preview",
    "start": "1683020",
    "end": "1684670"
  },
  {
    "text": "for Windows nodes the controller on the",
    "start": "1684670",
    "end": "1687040"
  },
  {
    "text": "web book are already available on github",
    "start": "1687040",
    "end": "1688570"
  },
  {
    "text": "like at least the way to set them up",
    "start": "1688570",
    "end": "1690250"
  },
  {
    "text": "I've been there on the instruction set",
    "start": "1690250",
    "end": "1692080"
  },
  {
    "text": "like on the readme file so let me bring",
    "start": "1692080",
    "end": "1695830"
  },
  {
    "text": "that up so if you look at this is a doc",
    "start": "1695830",
    "end": "1704309"
  },
  {
    "text": "4ek support for Windows nodes so this",
    "start": "1704309",
    "end": "1707890"
  },
  {
    "text": "walks you through setting up the V PC",
    "start": "1707890",
    "end": "1709630"
  },
  {
    "text": "controller and the admission web book",
    "start": "1709630",
    "end": "1711190"
  },
  {
    "text": "and how to set them up in the cluster",
    "start": "1711190",
    "end": "1713140"
  },
  {
    "text": "for you come on Thanks is it possible to",
    "start": "1713140",
    "end": "1718000"
  },
  {
    "text": "get that URL a bit bigger github.com",
    "start": "1718000",
    "end": "1721570"
  },
  {
    "text": "slash AWS slash containers roadmap",
    "start": "1721570",
    "end": "1726090"
  },
  {
    "text": "any more questions okay well thank you",
    "start": "1730340",
    "end": "1734990"
  },
  {
    "text": "very much sit off all right",
    "start": "1734990",
    "end": "1738190"
  },
  {
    "text": "[Applause]",
    "start": "1738550",
    "end": "1741059"
  }
]