[
  {
    "text": "thanks a lot for coming to my session my name is laand mua and I'm a product manager at AWS specifically in the",
    "start": "80",
    "end": "5799"
  },
  {
    "text": "Amazon eks team and I'm going to be speaking to you about how to establish trust between technically diverse or",
    "start": "5799",
    "end": "11840"
  },
  {
    "text": "heterogeneous service mesh implementations if any of you want to connect with me please feel free to do",
    "start": "11840",
    "end": "18080"
  },
  {
    "text": "so uh ideally you could connect with me on LinkedIn I'm relatively active over",
    "start": "18080",
    "end": "24199"
  },
  {
    "text": "there and for those of you that are interested in watching Cloud native content specifically related to kuber",
    "start": "24199",
    "end": "30720"
  },
  {
    "text": "or ISO or spiffy inspire you can check out my YouTube channel just search using my full name and maybe there'll be",
    "start": "30720",
    "end": "37000"
  },
  {
    "text": "something that's useful for you over there great so I was hoping to start",
    "start": "37000",
    "end": "44640"
  },
  {
    "text": "this session with a bit of an exercise but I thought it might be relatively complicated um I was going to use uh",
    "start": "44640",
    "end": "51440"
  },
  {
    "text": "bowls of yarn to illustrate uh a core part of the problem that I want to focus",
    "start": "51440",
    "end": "56480"
  },
  {
    "text": "on in this session and so I'm just going to describe it so you can get your imagination going as I describe this so",
    "start": "56480",
    "end": "64080"
  },
  {
    "text": "imagine I had um bowls of yarn with me and then I handed them out to everyone over here and then the exercise would",
    "start": "64080",
    "end": "70240"
  },
  {
    "text": "essentially be for you would be for you to unravel it or unroll it hold on to a piece of it and then pass it on to the",
    "start": "70240",
    "end": "75840"
  },
  {
    "text": "next person until everyone is touching a piece of yarn that was started by",
    "start": "75840",
    "end": "81640"
  },
  {
    "text": "someone else now if we were to take a snapshot of that from the top down sort of a bird's eye view it would kind of",
    "start": "81640",
    "end": "89079"
  },
  {
    "text": "look like a mess it would be colorful but it would be relatively messy and uh",
    "start": "89079",
    "end": "94360"
  },
  {
    "text": "that would be a relatively accurate picture of many modern systems not all",
    "start": "94360",
    "end": "100600"
  },
  {
    "text": "but many modern systems and the reason for that is because a lot of teams are",
    "start": "100600",
    "end": "107680"
  },
  {
    "text": "shifting towards uh a microservice model and so microservices are very beneficial",
    "start": "107680",
    "end": "114920"
  },
  {
    "text": "because it allows teams or companies to essentially innovate with small incremental steps modular components",
    "start": "114920",
    "end": "120640"
  },
  {
    "text": "that are a single purpose doesn't mean that they necessarily do away with monolithic architectures or other Legacy",
    "start": "120640",
    "end": "126719"
  },
  {
    "text": "systems they're still in the mix but what's happening is this kind of",
    "start": "126719",
    "end": "132120"
  },
  {
    "text": "progression adds to a mix that I typically like to refer to as a web of",
    "start": "132120",
    "end": "138360"
  },
  {
    "text": "complexity and this web of complexity grows in comp um in complexity as well",
    "start": "138360",
    "end": "143519"
  },
  {
    "text": "as size over time because teams are still going to be dedicated to improving their systems improving innovation",
    "start": "143519",
    "end": "150360"
  },
  {
    "text": "um and adding to their system overall as new requirements come up as new enhancements are",
    "start": "150360",
    "end": "156599"
  },
  {
    "text": "happening and as beneficial as it is to have a microservice architecture because of all the advantages that it",
    "start": "156599",
    "end": "164239"
  },
  {
    "text": "introduces we have to be able to find a way of identifying who's who because in these kinds of systems you're more",
    "start": "164239",
    "end": "171000"
  },
  {
    "text": "reliant on the network and service to service communication so how do you keep track of the different participants in",
    "start": "171000",
    "end": "178400"
  },
  {
    "text": "your web of complexity that's extremely important from a security perspective it heightens the risks uh when there are",
    "start": "178400",
    "end": "185200"
  },
  {
    "text": "additional components and you're not able to keep track of them you want to be able to know who's who in this large",
    "start": "185200",
    "end": "192840"
  },
  {
    "text": "space now a common approach that teams will use to address this is to essentially find a way of integrating",
    "start": "192840",
    "end": "199400"
  },
  {
    "text": "the different security standards that are supported by the different systems whether it's the Legacy systems the microservices and the monolith systems",
    "start": "199400",
    "end": "207200"
  },
  {
    "text": "and this can definitely work and it's something that I've witnessed but it becomes very challenging for various",
    "start": "207200",
    "end": "214319"
  },
  {
    "text": "reasons for one it typically requires the key stakeholders to get together",
    "start": "214319",
    "end": "220319"
  },
  {
    "text": "over and over again key stakeholders being your security Architects your platform teams and your application",
    "start": "220319",
    "end": "226599"
  },
  {
    "text": "developers there needs to be alignment between them because you are trying to find a way of bridging these different",
    "start": "226599",
    "end": "231879"
  },
  {
    "text": "security standards that are supported by the communicating systems and this can be tough and as The Innovation continues",
    "start": "231879",
    "end": "239560"
  },
  {
    "text": "and the web of complexity grows um so will the length and the necessity of those respective meetings between these",
    "start": "239560",
    "end": "247400"
  },
  {
    "text": "stakeholders now in addition to that your application developers will also have to be continuously modifying their",
    "start": "247400",
    "end": "253560"
  },
  {
    "text": "code especially if they're integrating libraries um that will be supporting these application networking",
    "start": "253560",
    "end": "259959"
  },
  {
    "text": "concerns and that's something that also adds a cognitive load to their jobs and they start to take on more things that",
    "start": "259959",
    "end": "266199"
  },
  {
    "text": "would probably fall outside of their purview",
    "start": "266199",
    "end": "270800"
  },
  {
    "text": "almost skipped some two two very important ones next is security misconfigurations right so that it",
    "start": "272720",
    "end": "278120"
  },
  {
    "text": "heightens the risks of that as well because of what's being juggled by your application developers but not only them even for platform engineers and then the",
    "start": "278120",
    "end": "285000"
  },
  {
    "text": "last one is a very common reality this is hard to",
    "start": "285000",
    "end": "290600"
  },
  {
    "text": "accomplish and so some teams will kick the can down the road they'll defer the problem so they can prioritize velocity",
    "start": "290600",
    "end": "297360"
  },
  {
    "text": "and um the challenge with this is the problem isn't necessarily going away if anything your can that you're kicking",
    "start": "297360",
    "end": "303440"
  },
  {
    "text": "down the road is going to get bigger and heavier with time especially as the web of complexity continues to grow because",
    "start": "303440",
    "end": "309280"
  },
  {
    "text": "you haven't exactly put a halt on system improvements with additional microservices or any other Integrations",
    "start": "309280",
    "end": "315720"
  },
  {
    "text": "that are being added into the mix so as much as we should be asking",
    "start": "315720",
    "end": "321759"
  },
  {
    "text": "the question how do we establish uh trust in the web of complexity we should be asking what is the best way because",
    "start": "321759",
    "end": "328680"
  },
  {
    "text": "we can certainly still establish trust by integrating different security standards but as I just walked through",
    "start": "328680",
    "end": "334639"
  },
  {
    "text": "um a couple of different challenges it introduces we want to find a way of alleviating those particular",
    "start": "334639",
    "end": "342638"
  },
  {
    "text": "problems and the common approach that teams use is to U adopt a service mesh",
    "start": "342960",
    "end": "348840"
  },
  {
    "text": "to essentially short circuit or fast track um having this trust domain",
    "start": "348840",
    "end": "354680"
  },
  {
    "text": "essentially a space where your workloads and your applications can communicate",
    "start": "354680",
    "end": "360600"
  },
  {
    "text": "securely and um they're a host of different service mesh implementations and service meshes essentially deal with",
    "start": "360600",
    "end": "366840"
  },
  {
    "text": "your application networking concerns um but in many cases teams will adopt them",
    "start": "366840",
    "end": "373560"
  },
  {
    "text": "uh primarily to address Mutual authentication they want end-to-end encryption they want to have an identity",
    "start": "373560",
    "end": "379120"
  },
  {
    "text": "management system which service meshes come with so they can benefit from",
    "start": "379120",
    "end": "384800"
  },
  {
    "text": "that and so the flow that we're ESS working towards which service meses can",
    "start": "385840",
    "end": "392720"
  },
  {
    "text": "give us is to start from a place of no implicit trust whatsoever so that means",
    "start": "392720",
    "end": "398520"
  },
  {
    "text": "every single application that will exist in this web of complexity or does exist in this web",
    "start": "398520",
    "end": "404720"
  },
  {
    "text": "of complexity should essentially or event or rather work its way towards being part of what we would refer to as",
    "start": "404720",
    "end": "410360"
  },
  {
    "text": "a trust domain starting from a place of no implicit trust whatsoever and then you ATT you attest it through some",
    "start": "410360",
    "end": "417639"
  },
  {
    "text": "specific criteria and then after it goes through the attestation only successfully only then will it be issued",
    "start": "417639",
    "end": "423240"
  },
  {
    "text": "an identity and be allowed to participate in your trust domain and so this is the end goal essentially you",
    "start": "423240",
    "end": "428639"
  },
  {
    "text": "want your web of complexity to exist within a trust domain where all the participants have been validated or",
    "start": "428639",
    "end": "434479"
  },
  {
    "text": "verified and have received an identity that they can then present to any other participant um to to show that they to",
    "start": "434479",
    "end": "442120"
  },
  {
    "text": "show who they are and for every other peer to be able to validate that",
    "start": "442120",
    "end": "447639"
  },
  {
    "text": "identity now that does solve the problem and so we could Sayre",
    "start": "448520",
    "end": "454919"
  },
  {
    "text": "I've got a trust domain for a particular service mesh but what if you're in a situation where there are multiple",
    "start": "454919",
    "end": "461360"
  },
  {
    "text": "service mesh implementations so team a is using ISO with the sidecar data plane",
    "start": "461360",
    "end": "468199"
  },
  {
    "text": "Team B is using ISO ambient mesh team C is using psyllium so how do we establish trust in",
    "start": "468199",
    "end": "474319"
  },
  {
    "text": "those kinds of situations because each one has a distinct identity management system",
    "start": "474319",
    "end": "479919"
  },
  {
    "text": "and I'll cover where this can be particularly helpful so an analogy that I like to use um is one based on a real",
    "start": "479919",
    "end": "488840"
  },
  {
    "text": "life scenario so years ago when I was working in Consulting I worked for a particular consulting firm and I was",
    "start": "488840",
    "end": "494280"
  },
  {
    "text": "issued a company card which gave me access to the company building now while I was working for",
    "start": "494280",
    "end": "500360"
  },
  {
    "text": "that particular consulting firm I was representing that firm at a financial institution and I couldn't exactly use",
    "start": "500360",
    "end": "507759"
  },
  {
    "text": "the company card from the consulting firm at the financial institution it wasn't going to work so that was an",
    "start": "507759",
    "end": "514039"
  },
  {
    "text": "identity for a particular quote unquote trust domain which was the consultation firm that I worked for and so at the",
    "start": "514039",
    "end": "519919"
  },
  {
    "text": "financial institution they needed to issue me a whole new identity or card",
    "start": "519919",
    "end": "525240"
  },
  {
    "text": "now if you think back to what I was covering before uh we don't want our applications to be in a situation where they are juggling U multiple security",
    "start": "525240",
    "end": "532839"
  },
  {
    "text": "standards this similar to this imagine um I happen to be working at six different companies that means all of of",
    "start": "532839",
    "end": "539560"
  },
  {
    "text": "a sudden now I'm juggling six different company cards so what we're trying to establish here is a mechanism for having one ID",
    "start": "539560",
    "end": "549160"
  },
  {
    "text": "that can be universally attestable and identified or can work as an",
    "start": "549160",
    "end": "554399"
  },
  {
    "text": "identification regardless of any other trust domain that I might I might find myself in and this is very similar to",
    "start": "554399",
    "end": "562040"
  },
  {
    "text": "none other than the passport system which is universal and I can very much relate to this because I'm Zambian but I",
    "start": "562040",
    "end": "569800"
  },
  {
    "text": "live in South Africa and I made a trip over here to the US but in those",
    "start": "569800",
    "end": "575399"
  },
  {
    "text": "different steps I used one identity document I used my passport and for each of the different countries you have",
    "start": "575399",
    "end": "583519"
  },
  {
    "text": "there are you have different separate passports for each representing each one of them they have they are separate",
    "start": "583519",
    "end": "589399"
  },
  {
    "text": "authorities that are represented with each one of these distinct countries however there's a universal system that",
    "start": "589399",
    "end": "594680"
  },
  {
    "text": "is used to essentially verify the validity of that particular document",
    "start": "594680",
    "end": "600200"
  },
  {
    "text": "even though it wasn't issued in that specific country and that's essentially what we want to translate um to our",
    "start": "600200",
    "end": "607040"
  },
  {
    "text": "environments with the web of complexity how do we have a passport like",
    "start": "607040",
    "end": "612600"
  },
  {
    "text": "system and that serves as an entree for spiffy uh which stands for",
    "start": "612600",
    "end": "619000"
  },
  {
    "text": "um secure production identity framework for everyone it's so funny for a moment",
    "start": "619000",
    "end": "624160"
  },
  {
    "text": "there I almost said special identity Frameworks I was like that's not what it stands for and this is basically a set",
    "start": "624160",
    "end": "629399"
  },
  {
    "text": "of Open Standards or specifications um that enable you to have interoperable",
    "start": "629399",
    "end": "634760"
  },
  {
    "text": "IDs or platform agnostic IDs as well as a test those IDs for workloads as well",
    "start": "634760",
    "end": "640079"
  },
  {
    "text": "as infrastructure components now uh these spiffy standards",
    "start": "640079",
    "end": "645320"
  },
  {
    "text": "have also been implemented in a production ready system and that would be Spire both of them are open-source",
    "start": "645320",
    "end": "651639"
  },
  {
    "text": "projects and in the session I'm going to specifically Focus um on spire and that's what I'll be using in My Demo so",
    "start": "651639",
    "end": "657800"
  },
  {
    "text": "if we go back to that diagram that showed earlier Spire essentially allows us and",
    "start": "657800",
    "end": "663399"
  },
  {
    "text": "even the spiffy specifications if you happen to implement them in your own custom way allow us to walk through the same model where we start with no",
    "start": "663399",
    "end": "669600"
  },
  {
    "text": "implicit trust whatsoever and then based on a certain criteria that we can figure we can attest a workload for example and",
    "start": "669600",
    "end": "676720"
  },
  {
    "text": "that could be based on a certain container that it should be running um the name space that that container should be running in um in addition it",
    "start": "676720",
    "end": "683600"
  },
  {
    "text": "could ALS you can also attest infrastructure components um and that",
    "start": "683600",
    "end": "690440"
  },
  {
    "text": "that helps us work towards a space where we're validating anything that is eventually going to live in our trust",
    "start": "690440",
    "end": "696120"
  },
  {
    "text": "domain so after successful atation then it will be issued an identity and end up in the destination that we want so we",
    "start": "696120",
    "end": "702240"
  },
  {
    "text": "still have our web of complexity but the difference is now we have it living inside of a trust",
    "start": "702240",
    "end": "709120"
  },
  {
    "text": "domain that has a universal identity model or a universal standard for",
    "start": "709120",
    "end": "715200"
  },
  {
    "text": "security Now how does that tie to bridging different service me meses well",
    "start": "715200",
    "end": "721399"
  },
  {
    "text": "if we're using an interoperable standard like what spiffy gives us then that means irrespective of the service mesh",
    "start": "721399",
    "end": "728720"
  },
  {
    "text": "implementation that we're using whether it's a custom Envoy mesh or ISO or psyllium as long as they support an",
    "start": "728720",
    "end": "735279"
  },
  {
    "text": "integration with this interoperable mechanism then we can essentially have a single uh root of trust and by that that",
    "start": "735279",
    "end": "743880"
  },
  {
    "text": "doesn't necessarily mean that you have to have a single Spire server this is they're different deployment models you could do that and in the demo that I'll",
    "start": "743880",
    "end": "750000"
  },
  {
    "text": "be showing that's the approach and following you could have a single Spire server that essentially functions as the root certificate Authority and it",
    "start": "750000",
    "end": "757800"
  },
  {
    "text": "distributes identities to the separate service mesh implementations alternatively you could",
    "start": "757800",
    "end": "765360"
  },
  {
    "text": "have a Spire server for each service mesh and then you could Federate trust",
    "start": "765360",
    "end": "770880"
  },
  {
    "text": "between them and what happens in that is essentially there's an exchange of trust bundles so that each Spire server has a",
    "start": "770880",
    "end": "778120"
  },
  {
    "text": "quote unquote for trust bundle with a certificate that it can pass on to the workloads in its respective trust domain",
    "start": "778120",
    "end": "784399"
  },
  {
    "text": "and the workloads will then be able to use their certificate in that trust bundle to validate appear in a foreign",
    "start": "784399",
    "end": "790760"
  },
  {
    "text": "trust domain right now very important we have",
    "start": "790760",
    "end": "798000"
  },
  {
    "text": "to ask the question when is this actually useful because it is a complex thing when would we when would you want",
    "start": "798000",
    "end": "803720"
  },
  {
    "text": "to use this and so the first one um and I kind of allude to this in the title would be a situation where if a company",
    "start": "803720",
    "end": "810519"
  },
  {
    "text": "happens to have a very strong um approach to technical diversity so some",
    "start": "810519",
    "end": "816600"
  },
  {
    "text": "companies are like this where they it's a form of empowering or enabling the different teams that exist in their Oregon saying you can choose the",
    "start": "816600",
    "end": "822839"
  },
  {
    "text": "technology that you want to use for uh whatever it is you're running and I've seen some uh Central platform teams will",
    "start": "822839",
    "end": "828839"
  },
  {
    "text": "essentially build a system that uh vends Technologies to the different internal",
    "start": "828839",
    "end": "834839"
  },
  {
    "text": "teams and the internal teams will essentially just enable the technologies that they want to use so if you want to use ISO you would enable that as a",
    "start": "834839",
    "end": "841440"
  },
  {
    "text": "consumer from this particular platform Team B may enable psyllium so in scenarios like that that's where this",
    "start": "841440",
    "end": "847199"
  },
  {
    "text": "becomes useful because there may still be required Integrations between these separate teams that are in the same organization and they have heterogeneous",
    "start": "847199",
    "end": "854040"
  },
  {
    "text": "systems running another one would be Integrations with an external organization so you don't have as much",
    "start": "854040",
    "end": "860480"
  },
  {
    "text": "influence on the technology that they're using but you need to integrate with them and then the third one would be",
    "start": "860480",
    "end": "866880"
  },
  {
    "text": "migrating from one service mesh to another and you may not necessarily be waiting for all your workloads to to be migrated",
    "start": "866880",
    "end": "873240"
  },
  {
    "text": "to the new service mesh and so in the process you still want to be able to keep the Integrations alive between",
    "start": "873240",
    "end": "879360"
  },
  {
    "text": "workloads that perhaps were running in ISO and now if you've started in a migration to cium or if you've started",
    "start": "879360",
    "end": "885680"
  },
  {
    "text": "migration to esto ambient mesh and you want to maintain that communication between those workloads then this gives",
    "start": "885680",
    "end": "892199"
  },
  {
    "text": "you uh this essentially enables that process because you can still have that trust between them even though they're",
    "start": "892199",
    "end": "898000"
  },
  {
    "text": "distinct meshes and by distinct I specifically mean um",
    "start": "898000",
    "end": "903240"
  },
  {
    "text": "they're technically different all right so before I get into",
    "start": "903240",
    "end": "908720"
  },
  {
    "text": "the demo I just want to walk through some context to help uh set the",
    "start": "908720",
    "end": "915199"
  },
  {
    "text": "stage so what I'm going to be demonstrating is communication between a custom Envoy mesh and uh an ISO service",
    "start": "915880",
    "end": "924120"
  },
  {
    "text": "mesh and for the sto service mesh I'm using the sidecar data plane so ambient",
    "start": "924120",
    "end": "929440"
  },
  {
    "text": "mesh sorry to disappoint if um if you were looking forward to that and so just to quickly run through",
    "start": "929440",
    "end": "935800"
  },
  {
    "text": "this and I'm actually going to get down here so that I can see this",
    "start": "935800",
    "end": "940079"
  },
  {
    "text": "clearly so this will look a lot like ISO and its sidecar model because",
    "start": "941160",
    "end": "946519"
  },
  {
    "text": "essentially um for every microservice that I'm deploying so I've got a graphql API I've got orders I've got products",
    "start": "946519",
    "end": "954560"
  },
  {
    "text": "and an edge proxy and each of the microservices has an Envoy proxy in",
    "start": "954560",
    "end": "960600"
  },
  {
    "text": "front of it so very similar to the um the iso data plane and the sidecar sto",
    "start": "960600",
    "end": "965880"
  },
  {
    "text": "data plane and our Edge proxy over here um is just an Envoy proxy and so it's going to receive requests uh from the",
    "start": "965880",
    "end": "972519"
  },
  {
    "text": "load balancer and we'll proxy them proxy any requests onto the different microservices and now I've got a Spire",
    "start": "972519",
    "end": "979120"
  },
  {
    "text": "server running inside of my kubernetes cluster and um the Spire agent essentially",
    "start": "979120",
    "end": "986199"
  },
  {
    "text": "communicates with the Spire server the Spire agent is a demon set and it serves what is known as the workload API and",
    "start": "986199",
    "end": "991839"
  },
  {
    "text": "the workload API is what's responsible for actually Distributing these identities the identities could either be jots or x.509",
    "start": "991839",
    "end": "998319"
  },
  {
    "text": "certificates and so the Spire agent is what is communicating with the envoy proxies so both uh so Envoy has the SDS",
    "start": "998319",
    "end": "1005000"
  },
  {
    "text": "API secret Discovery service for it to be able to fetch remote secrets and and in this case those secrets are the x.509",
    "start": "1005000",
    "end": "1011720"
  },
  {
    "text": "certificates and Spire also supports the SDS API enabling it to function as that server to push those certificates",
    "start": "1011720",
    "end": "1020240"
  },
  {
    "text": "so that's the custom Envoy mesh and then next is my esto mesh but I want to start off by just describing how the default",
    "start": "1020240",
    "end": "1027280"
  },
  {
    "text": "uh flow works with with issuing of identities in case you you're unfamiliar with that so the iso agent essentially",
    "start": "1027280",
    "end": "1035319"
  },
  {
    "text": "sends a certificate signing request to sod sdod functions by default as the root certificate Authority when you",
    "start": "1035319",
    "end": "1041000"
  },
  {
    "text": "install it and then Theo stod is then going to sign that certificate um and",
    "start": "1041000",
    "end": "1047038"
  },
  {
    "text": "then will'll issue back an svi which is a spiffy verifiable identity document and x.509 insert to the envoy proxy and",
    "start": "1047039",
    "end": "1054520"
  },
  {
    "text": "that's what it will use as its identity now when integrating with Spire what I'm essentially doing is I'm telling sod to",
    "start": "1054520",
    "end": "1062000"
  },
  {
    "text": "take a step back and Spire essentially becomes the root certificate Authority",
    "start": "1062000",
    "end": "1067280"
  },
  {
    "text": "and so as I mentioned before there are different deployment models I could have set up a Spire server distinctly for ISO",
    "start": "1067280",
    "end": "1072720"
  },
  {
    "text": "and Aspire server distinctly for the envoy mesh and had Federated trust between them but in this case it's one",
    "start": "1072720",
    "end": "1078919"
  },
  {
    "text": "SP server with a single trust domain issuing these identities to the custom",
    "start": "1078919",
    "end": "1084159"
  },
  {
    "text": "Envoy mesh as well as to the iso Envoy mesh and so this is what we have and",
    "start": "1084159",
    "end": "1091400"
  },
  {
    "text": "what I'm going to be demonstrating is I have configured The Edge proxy inside of",
    "start": "1091400",
    "end": "1097280"
  },
  {
    "text": "the custom Envoy mesh to forward any D any requests that are directly sent to",
    "start": "1097280",
    "end": "1102840"
  },
  {
    "text": "the products API to be forwarded to products inside of the sto uh service",
    "start": "1102840",
    "end": "1109559"
  },
  {
    "text": "mesh and what I've done with ISO is I have set it to strict mode in terms of the mutual authentication and so when",
    "start": "1109559",
    "end": "1115919"
  },
  {
    "text": "Mutual authentication is set to strict mode using the peer authentication configurations that essentially means",
    "start": "1115919",
    "end": "1121480"
  },
  {
    "text": "that every participant inside of that mesh enforces validation on both sides",
    "start": "1121480",
    "end": "1126679"
  },
  {
    "text": "of enforces the um validation of identity on both sides so basically making sure there has to be U Mutual",
    "start": "1126679",
    "end": "1133760"
  },
  {
    "text": "authentication and so that means that in order for this request to work um there has to be trust between the edge proxy",
    "start": "1133760",
    "end": "1142240"
  },
  {
    "text": "and the products API in the iso service mesh and in this case because they have the same roots of trust um that",
    "start": "1142240",
    "end": "1150360"
  },
  {
    "text": "essentially is what enables successful communication and encryption between both parties and you can still configure",
    "start": "1150360",
    "end": "1156960"
  },
  {
    "text": "this at a lower level and that's something that I'll show you where you could essentially still determine the",
    "start": "1156960",
    "end": "1162760"
  },
  {
    "text": "Sands or the spiffy IDs that you want to be approved so that you take it a a more",
    "start": "1162760",
    "end": "1168240"
  },
  {
    "text": "granular level as opposed to just saying well if it's part of this trust domain then go ahead and establish trust you",
    "start": "1168240",
    "end": "1173280"
  },
  {
    "text": "can make it even more granular and say it has to be a certificate that specifically has this spiffy",
    "start": "1173280",
    "end": "1180480"
  },
  {
    "text": "ID all",
    "start": "1186720",
    "end": "1190000"
  },
  {
    "text": "right so first off just want to show you what is going",
    "start": "1191960",
    "end": "1197600"
  },
  {
    "text": "on going on in side of the cluster over here so at the top over there you'll see Edge proxy graphql orders and products",
    "start": "1197600",
    "end": "1203880"
  },
  {
    "text": "and each of these are inside the e-commerce namespace so this is essentially uh where the custom Envoy",
    "start": "1203880",
    "end": "1209640"
  },
  {
    "text": "mesh this assoc this is uh in reference to the custom Envoy mesh and then below it a little bit over here you'll see gra",
    "start": "1209640",
    "end": "1216679"
  },
  {
    "text": "again graphql orders and products but you'll notice these are inside the sto e-commerce namespace because these",
    "start": "1216679",
    "end": "1222280"
  },
  {
    "text": "reside inside of iso so that's just so you can see our two meshes in action",
    "start": "1222280",
    "end": "1228159"
  },
  {
    "text": "over there",
    "start": "1228159",
    "end": "1230640"
  },
  {
    "text": "next thing that I want to walk",
    "start": "1236760",
    "end": "1240080"
  },
  {
    "text": "through just briefly is for you to see these configs and I'm going to try and",
    "start": "1243360",
    "end": "1249919"
  },
  {
    "text": "do this without hurting my",
    "start": "1249919",
    "end": "1253519"
  },
  {
    "text": "neck I'm going to try and just cover the relevant parts to Short Circuit this and",
    "start": "1255120",
    "end": "1260720"
  },
  {
    "text": "so this is the configuration for the Spire agents so if you recall I said the Spire agent is what serves the workload",
    "start": "1260720",
    "end": "1266280"
  },
  {
    "text": "API that actually distributes uh these certificates and so I've configured the",
    "start": "1266280",
    "end": "1271520"
  },
  {
    "text": "socket path over here and so this is what the consumers essentially need to be able to connect to in order for them",
    "start": "1271520",
    "end": "1277679"
  },
  {
    "text": "to receive those certificates or identities so now if I come to my ISO",
    "start": "1277679",
    "end": "1284600"
  },
  {
    "text": "configuration um this is essentially mod me modifying um the sidecar injections",
    "start": "1284600",
    "end": "1290240"
  },
  {
    "text": "and how that essentially starts up so that the esto proxy um now so that each",
    "start": "1290240",
    "end": "1295840"
  },
  {
    "text": "esto proxy now essentially knows that it should be getting its certificates from this particular socket path that gets",
    "start": "1295840",
    "end": "1302640"
  },
  {
    "text": "mounted over here and you'll see that this matches with the agent um configuration that I specified before so",
    "start": "1302640",
    "end": "1308520"
  },
  {
    "text": "this is essentially just telling ISO for every sidecar proxy that starts up um",
    "start": "1308520",
    "end": "1313640"
  },
  {
    "text": "fetch your certificate from this particular location",
    "start": "1313640",
    "end": "1318399"
  },
  {
    "text": "these are the config files just showing you that I'm enforcing Mutual authentication within the service",
    "start": "1320760",
    "end": "1327440"
  },
  {
    "text": "mesh so it is set to strict mode so having this one config over here uh",
    "start": "1327440",
    "end": "1332679"
  },
  {
    "text": "default for the sto system namespace would actually be sufficient because then that enforces it for the entire service mesh um or you could do it at a",
    "start": "1332679",
    "end": "1339760"
  },
  {
    "text": "namespace level which you can see over here this is set to strict the alternative would be permissive in which",
    "start": "1339760",
    "end": "1345159"
  },
  {
    "text": "case um Mutual authentication won't be a hard or strict requirement M and then",
    "start": "1345159",
    "end": "1350360"
  },
  {
    "text": "for the microservices uh this is specifically orders but it's to give you an idea of what it looks like for them",
    "start": "1350360",
    "end": "1355799"
  },
  {
    "text": "this is now transitioning to the custom Envoy mesh uh this is essentially the configuration and so this is a cluster",
    "start": "1355799",
    "end": "1362240"
  },
  {
    "text": "so clusters are essentially the Upstream hosts um that the envoy proxy communicates with and this is the",
    "start": "1362240",
    "end": "1369559"
  },
  {
    "text": "endpoint and the path associated with it so this is basically so that Envoy knows that this is where it should fetch its",
    "start": "1369559",
    "end": "1375640"
  },
  {
    "text": "certificate from so it's communicating with the Spire agent which remember is a Damon set that is running on the Node so",
    "start": "1375640",
    "end": "1381679"
  },
  {
    "text": "that's the same configuration that is shared across the different um applications or microservices running",
    "start": "1381679",
    "end": "1389200"
  },
  {
    "text": "in the custom Envoy mesh now if I specifically come over here to the edge proxy which if you",
    "start": "1389200",
    "end": "1395720"
  },
  {
    "text": "recall I mentioned that I'm redirecting any requests that are destined for the product's API to actually go outside of",
    "start": "1395720",
    "end": "1403360"
  },
  {
    "text": "the custom envo mesh and instead be redirected to the sto service mesh and",
    "start": "1403360",
    "end": "1410440"
  },
  {
    "text": "I think if I scroll up there we go so you'll see over here",
    "start": "1410640",
    "end": "1417960"
  },
  {
    "text": "so I'm in the cluster section so again this is in reference to the Upstream hosts this is products over here and if",
    "start": "1417960",
    "end": "1423400"
  },
  {
    "text": "you come down specifically I've highlighted the address over here you'll see this is product service but specifically sto e-commerce uh namespace",
    "start": "1423400",
    "end": "1430600"
  },
  {
    "text": "so this is going to hit the product service in the in the iso service mesh and I want to scroll down here so that",
    "start": "1430600",
    "end": "1436400"
  },
  {
    "text": "you can see that under the configurations that I've set up I've essentially said that you should um only",
    "start": "1436400",
    "end": "1442679"
  },
  {
    "text": "approve or accept uh these uh certificates that contain these particular spiffy IDs so this is the",
    "start": "1442679",
    "end": "1449480"
  },
  {
    "text": "default and the original one for the custom Envoy mesh as you can see over here this is running an e this is for an",
    "start": "1449480",
    "end": "1456400"
  },
  {
    "text": "e for the e-commerce namespace but because I'm als because",
    "start": "1456400",
    "end": "1461559"
  },
  {
    "text": "I've redirected the traffic to communicate with products in the iso service mesh I have added this",
    "start": "1461559",
    "end": "1466840"
  },
  {
    "text": "additional spiffy ID as acceptable so that when it is presented with that certificate from the products API and",
    "start": "1466840",
    "end": "1472360"
  },
  {
    "text": "the sto service mesh it will accept",
    "start": "1472360",
    "end": "1476080"
  },
  {
    "text": "it all right so um switch to postman I'm trying to find this there we go great",
    "start": "1480640",
    "end": "1487720"
  },
  {
    "text": "can everyone see this clearly okay good right so the two on",
    "start": "1487720",
    "end": "1494120"
  },
  {
    "text": "the left over here these are requests specifically for the sto service mesh so the first one is get products and if you",
    "start": "1494120",
    "end": "1500279"
  },
  {
    "text": "look down here you'll see product 1 a is an Envoy hoodie product 1B is a I believe is a spiffy sticker it's a bit",
    "start": "1500279",
    "end": "1506440"
  },
  {
    "text": "hard to see from here um and just so you know that this is working I'm going to hit the send request over there okay",
    "start": "1506440",
    "end": "1512840"
  },
  {
    "text": "great so you can see that and now if I was to come over here so that we can take a look let me",
    "start": "1512840",
    "end": "1520399"
  },
  {
    "text": "scroll down slightly so we can take a look at the orders products API this is again still in the iso service mesh I'm",
    "start": "1520399",
    "end": "1525600"
  },
  {
    "text": "going to hit that send request and you'll see so I'm getting back order details but more specifically if you",
    "start": "1525600",
    "end": "1531840"
  },
  {
    "text": "look under products I'm getting Envoy hoodie so this is as as expected that is",
    "start": "1531840",
    "end": "1537360"
  },
  {
    "text": "based on the list of products for the products API inside of iso",
    "start": "1537360",
    "end": "1544440"
  },
  {
    "text": "now if we come here this is now and with reference to the custom Envoy mesh and",
    "start": "1544440",
    "end": "1552919"
  },
  {
    "text": "this is the API for get orders and products so the request flow over here",
    "start": "1552919",
    "end": "1558440"
  },
  {
    "text": "is from load balancer to the uh Edge proxy and then from The Edge proxy to",
    "start": "1558440",
    "end": "1564159"
  },
  {
    "text": "orders and then from orders to products so that's a different path from the",
    "start": "1564159",
    "end": "1570120"
  },
  {
    "text": "configuration that I changed which was load balancer to Edge proxy directly to products so in this case we should get",
    "start": "1570120",
    "end": "1577279"
  },
  {
    "text": "the original um we should get a response from products inside the custom Envoy",
    "start": "1577279",
    "end": "1582320"
  },
  {
    "text": "mesh and if you look here you'll see that 1 a is actually kubernetes t-shirt so it's a separate product list for the",
    "start": "1582320",
    "end": "1590039"
  },
  {
    "text": "products API that is running in the custom Envoy mesh but now still in the custom Envoy mesh but now I'm sending a",
    "start": "1590039",
    "end": "1596399"
  },
  {
    "text": "request using the path that I've um that has the updated configuration so this is from The Edge proxy to the products a to",
    "start": "1596399",
    "end": "1604880"
  },
  {
    "text": "the products API and remember because I reconfigured that what's going to happen is it's going to forward that request to",
    "start": "1604880",
    "end": "1610360"
  },
  {
    "text": "the sto service mesh and you can already see it here the list that I'm getting",
    "start": "1610360",
    "end": "1615520"
  },
  {
    "text": "back is 1A Envoy hoodie showing that that traffic is now successfully going",
    "start": "1615520",
    "end": "1621000"
  },
  {
    "text": "through to the separate uh service mesh so that's an example of the bridged",
    "start": "1621000",
    "end": "1627200"
  },
  {
    "text": "trust and that is the end of my",
    "start": "1627200",
    "end": "1632440"
  },
  {
    "text": "talk okay any questions yes irrespective",
    "start": "1632440",
    "end": "1639720"
  },
  {
    "text": "service mesh integration with whether it's a self sign or a RCA based",
    "start": "1639720",
    "end": "1645039"
  },
  {
    "text": "certificate noes no concerns right right as long as it's got the",
    "start": "1645039",
    "end": "1651200"
  },
  {
    "text": "shared uh roots of trust right so that's the key thing there is is there um an",
    "start": "1651200",
    "end": "1656360"
  },
  {
    "text": "anchor of trust um across the board and remember that anchor of trust could either be like it it could be um one",
    "start": "1656360",
    "end": "1662360"
  },
  {
    "text": "Upstream Authority actually it could even be uh tier higher or hierarchically higher than Spire so you could tap Spire",
    "start": "1662360",
    "end": "1670559"
  },
  {
    "text": "into a different Upstream Authority um and you could have a shared Spire server across the service meshes or you could",
    "start": "1670559",
    "end": "1677960"
  },
  {
    "text": "have distinct Spire servers exactly and then have Federated trust established between them okay yes",
    "start": "1677960",
    "end": "1687639"
  },
  {
    "text": "you yeah",
    "start": "1690120",
    "end": "1693399"
  },
  {
    "text": "sure",
    "start": "1697960",
    "end": "1700960"
  },
  {
    "text": "yep yes",
    "start": "1703960",
    "end": "1707960"
  },
  {
    "text": "right yeah the urri um the URI this is the URI format for the for spiffy ID",
    "start": "1715240",
    "end": "1720799"
  },
  {
    "text": "yeah and you can this is something that you can uh generally modify this is",
    "start": "1720799",
    "end": "1727039"
  },
  {
    "text": "obviously this particular part is um is the prefix for it for the spiffy format",
    "start": "1727039",
    "end": "1733159"
  },
  {
    "text": "and Then followed by your trust domain so outlier.org is the name of my trust",
    "start": "1733159",
    "end": "1738760"
  },
  {
    "text": "domain in this case yeah and then after that uh generally so you could go",
    "start": "1738760",
    "end": "1743880"
  },
  {
    "text": "namespace um and then uh the right so NS and then the actual name of the",
    "start": "1743880",
    "end": "1749240"
  },
  {
    "text": "namespace and then essay representing service account and then you have the name of the service account followed over here but this is for a workload so",
    "start": "1749240",
    "end": "1755640"
  },
  {
    "text": "this looks slightly different if it's an infrastructure component that you're issuing an identity to like in for",
    "start": "1755640",
    "end": "1760880"
  },
  {
    "text": "example a virtual machine that you wanted to issue to",
    "start": "1760880",
    "end": "1766398"
  },
  {
    "text": "yeah sure and I'll I'll try my best with that so the key thing here is it comes down to what your",
    "start": "1769080",
    "end": "1775960"
  },
  {
    "text": "um what you're trying to accomplish so the key thing with spiffy is it's for if",
    "start": "1775960",
    "end": "1781039"
  },
  {
    "text": "you want that interoperability so for example even um so ISO out the box supports um spiffy",
    "start": "1781039",
    "end": "1788320"
  },
  {
    "text": "just it just implements part of the spiffy specification so it just uses the spiffy IDs um and the spiffy verifiable",
    "start": "1788320",
    "end": "1795000"
  },
  {
    "text": "identity documents it doesn't give you an entire spire um and that essentially also enables sto",
    "start": "1795000",
    "end": "1803159"
  },
  {
    "text": "to have trust established um not just within the mesh but you can also have",
    "start": "1803159",
    "end": "1809159"
  },
  {
    "text": "workloads that are outside of the mesh if they support that same kind of those same kinds of specifications um so this",
    "start": "1809159",
    "end": "1816159"
  },
  {
    "text": "is BAS your question sounds more like um an I um about the identity management",
    "start": "1816159",
    "end": "1822480"
  },
  {
    "text": "system because kubernetes has its own identity management system essentially and so what you were referring to there with the the jots for the service",
    "start": "1822480",
    "end": "1830039"
  },
  {
    "text": "account so that works specifically within um like the kubernetes system",
    "start": "1830039",
    "end": "1835240"
  },
  {
    "text": "itself uh this is specifically this this example is specifically for service meshes um and so yeah am I sort of am I",
    "start": "1835240",
    "end": "1844240"
  },
  {
    "text": "we can take it offline too okay sure if you want to have we can have some back and forth sure okay but I think I get I",
    "start": "1844240",
    "end": "1849799"
  },
  {
    "text": "think I get where you're heading at all right any other",
    "start": "1849799",
    "end": "1855518"
  },
  {
    "text": "questions no all right great well thanks so much for sticking it through",
    "start": "1856240",
    "end": "1863559"
  }
]