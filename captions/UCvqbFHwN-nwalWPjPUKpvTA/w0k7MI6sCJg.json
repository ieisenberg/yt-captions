[
  {
    "text": "greetings and welcome to our talk on the",
    "start": "719",
    "end": "2639"
  },
  {
    "text": "secret store csi driver keeping secret",
    "start": "2639",
    "end": "5200"
  },
  {
    "text": "secret",
    "start": "5200",
    "end": "7600"
  },
  {
    "text": "i'm anish ramshakar a software engineer",
    "start": "8160",
    "end": "10480"
  },
  {
    "text": "at microsoft",
    "start": "10480",
    "end": "11360"
  },
  {
    "text": "in seattle i worked on the security",
    "start": "11360",
    "end": "13759"
  },
  {
    "text": "projects in the container upstream team",
    "start": "13759",
    "end": "15839"
  },
  {
    "text": "i'm one of the maintainers of the secret",
    "start": "15839",
    "end": "17760"
  },
  {
    "text": "store csi driver",
    "start": "17760",
    "end": "19039"
  },
  {
    "text": "and the azure keyboard provider for",
    "start": "19039",
    "end": "20720"
  },
  {
    "text": "secret store csi driver",
    "start": "20720",
    "end": "23519"
  },
  {
    "text": "and i'm tommy murphy i'm a software",
    "start": "23519",
    "end": "25599"
  },
  {
    "text": "engineer at google in new york city",
    "start": "25599",
    "end": "28080"
  },
  {
    "text": "and i'm working on the secret manager",
    "start": "28080",
    "end": "30960"
  },
  {
    "text": "products",
    "start": "30960",
    "end": "31840"
  },
  {
    "text": "and i'm also one of the maintainers of",
    "start": "31840",
    "end": "34079"
  },
  {
    "text": "the secret store csi driver",
    "start": "34079",
    "end": "36320"
  },
  {
    "text": "and the google specific provider",
    "start": "36320",
    "end": "40079"
  },
  {
    "text": "so why are we talking about external",
    "start": "40079",
    "end": "41920"
  },
  {
    "text": "secret storage when kubernetes has a",
    "start": "41920",
    "end": "44079"
  },
  {
    "text": "perfectly good one built in",
    "start": "44079",
    "end": "46320"
  },
  {
    "text": "first the kubernetes secrets may not",
    "start": "46320",
    "end": "48480"
  },
  {
    "text": "meet your data arrest",
    "start": "48480",
    "end": "49840"
  },
  {
    "text": "encryption requirements although there",
    "start": "49840",
    "end": "52000"
  },
  {
    "text": "are kms providers",
    "start": "52000",
    "end": "53760"
  },
  {
    "text": "to enable data encryption",
    "start": "53760",
    "end": "57760"
  },
  {
    "text": "but depending on your organization you",
    "start": "57760",
    "end": "60800"
  },
  {
    "text": "may have already standardized on a",
    "start": "60800",
    "end": "62640"
  },
  {
    "text": "third-party secret solution",
    "start": "62640",
    "end": "64559"
  },
  {
    "text": "and you're looking to use that your",
    "start": "64559",
    "end": "67439"
  },
  {
    "text": "external",
    "start": "67439",
    "end": "68080"
  },
  {
    "text": "secret solution may have some sort of",
    "start": "68080",
    "end": "69920"
  },
  {
    "text": "secret rotation story or integrations",
    "start": "69920",
    "end": "72799"
  },
  {
    "text": "that you're looking to leverage and",
    "start": "72799",
    "end": "74960"
  },
  {
    "text": "finally if your organization has already",
    "start": "74960",
    "end": "77119"
  },
  {
    "text": "invested",
    "start": "77119",
    "end": "78159"
  },
  {
    "text": "in auditing and alerting on a",
    "start": "78159",
    "end": "80240"
  },
  {
    "text": "third-party secret system",
    "start": "80240",
    "end": "82159"
  },
  {
    "text": "you may not want to duplicate that",
    "start": "82159",
    "end": "83920"
  },
  {
    "text": "effort for your kubernetes secrets",
    "start": "83920",
    "end": "87200"
  },
  {
    "text": "so what do you do",
    "start": "87200",
    "end": "90320"
  },
  {
    "text": "there are a few options to consume",
    "start": "90320",
    "end": "92240"
  },
  {
    "text": "external secrets",
    "start": "92240",
    "end": "94079"
  },
  {
    "text": "first you might look into modifying your",
    "start": "94079",
    "end": "96000"
  },
  {
    "text": "application to fetch the external",
    "start": "96000",
    "end": "98000"
  },
  {
    "text": "secrets",
    "start": "98000",
    "end": "98960"
  },
  {
    "text": "from the external api directly using the",
    "start": "98960",
    "end": "102000"
  },
  {
    "text": "sdk",
    "start": "102000",
    "end": "103680"
  },
  {
    "text": "sdk provided by your",
    "start": "103680",
    "end": "106799"
  },
  {
    "text": "provider this may not be",
    "start": "106799",
    "end": "110079"
  },
  {
    "text": "possible though depending on your",
    "start": "110079",
    "end": "111759"
  },
  {
    "text": "deployment you may not have the code to",
    "start": "111759",
    "end": "114320"
  },
  {
    "text": "edit",
    "start": "114320",
    "end": "114880"
  },
  {
    "text": "or it may be prohibitively expensive to",
    "start": "114880",
    "end": "117200"
  },
  {
    "text": "implement these changes",
    "start": "117200",
    "end": "119040"
  },
  {
    "text": "and if you're targeting deployments",
    "start": "119040",
    "end": "120640"
  },
  {
    "text": "against multiple secret providers",
    "start": "120640",
    "end": "122560"
  },
  {
    "text": "this effort would need to be duplicated",
    "start": "122560",
    "end": "124719"
  },
  {
    "text": "for each secret system",
    "start": "124719",
    "end": "127680"
  },
  {
    "text": "so you may look at just copying the",
    "start": "127680",
    "end": "130000"
  },
  {
    "text": "secrets to kubernetes secrets perhaps",
    "start": "130000",
    "end": "132239"
  },
  {
    "text": "with the controller",
    "start": "132239",
    "end": "133680"
  },
  {
    "text": "this is portable but won't and won't",
    "start": "133680",
    "end": "136720"
  },
  {
    "text": "require application changes",
    "start": "136720",
    "end": "138879"
  },
  {
    "text": "but you may lose out on some of the",
    "start": "138879",
    "end": "140560"
  },
  {
    "text": "benefits of your external",
    "start": "140560",
    "end": "143120"
  },
  {
    "text": "secret store like data rest encryption",
    "start": "143120",
    "end": "146720"
  },
  {
    "text": "and the identity that's used to access",
    "start": "146720",
    "end": "149920"
  },
  {
    "text": "the secrets",
    "start": "149920",
    "end": "150959"
  },
  {
    "text": "may go from the workload to the",
    "start": "150959",
    "end": "153200"
  },
  {
    "text": "controller that is duplicating the",
    "start": "153200",
    "end": "155120"
  },
  {
    "text": "secrets",
    "start": "155120",
    "end": "157280"
  },
  {
    "text": "you could also use a sidecar to fetch",
    "start": "157280",
    "end": "159680"
  },
  {
    "text": "and write secrets",
    "start": "159680",
    "end": "160959"
  },
  {
    "text": "the sidecar may be injected using a",
    "start": "160959",
    "end": "163200"
  },
  {
    "text": "mutating web hook",
    "start": "163200",
    "end": "164800"
  },
  {
    "text": "here the pod identity would be used to",
    "start": "164800",
    "end": "166800"
  },
  {
    "text": "fetch the secrets",
    "start": "166800",
    "end": "168319"
  },
  {
    "text": "but the sidecar and the web hook may add",
    "start": "168319",
    "end": "170720"
  },
  {
    "text": "additional operational",
    "start": "170720",
    "end": "172000"
  },
  {
    "text": "complexity that you're not uh prepared",
    "start": "172000",
    "end": "175440"
  },
  {
    "text": "for",
    "start": "175440",
    "end": "177200"
  },
  {
    "text": "finally there's the secrets store csi",
    "start": "177200",
    "end": "180080"
  },
  {
    "text": "driver",
    "start": "180080",
    "end": "180720"
  },
  {
    "text": "which uses the container storage",
    "start": "180720",
    "end": "182560"
  },
  {
    "text": "interface specification",
    "start": "182560",
    "end": "184239"
  },
  {
    "text": "that we're going to talk about today and",
    "start": "184239",
    "end": "186400"
  },
  {
    "text": "we'll cover some of the features that we",
    "start": "186400",
    "end": "188000"
  },
  {
    "text": "think make it a good fit for consuming",
    "start": "188000",
    "end": "190080"
  },
  {
    "text": "external secrets on",
    "start": "190080",
    "end": "191599"
  },
  {
    "text": "kubernetes originally developed at deus",
    "start": "191599",
    "end": "196000"
  },
  {
    "text": "labs",
    "start": "196000",
    "end": "196720"
  },
  {
    "text": "this storage driver is now being built",
    "start": "196720",
    "end": "198879"
  },
  {
    "text": "and maintained",
    "start": "198879",
    "end": "200000"
  },
  {
    "text": "as a sig auth sub project the driver",
    "start": "200000",
    "end": "203040"
  },
  {
    "text": "allows kubernetes to mount",
    "start": "203040",
    "end": "204879"
  },
  {
    "text": "multiple secrets keys and certs stored",
    "start": "204879",
    "end": "207840"
  },
  {
    "text": "in enterprise grade external secret",
    "start": "207840",
    "end": "209920"
  },
  {
    "text": "stores",
    "start": "209920",
    "end": "210799"
  },
  {
    "text": "into pods as a volume once the volume is",
    "start": "210799",
    "end": "214400"
  },
  {
    "text": "attached",
    "start": "214400",
    "end": "215120"
  },
  {
    "text": "the data in it is mounted into the",
    "start": "215120",
    "end": "217040"
  },
  {
    "text": "container's temporary file system",
    "start": "217040",
    "end": "221120"
  },
  {
    "text": "as a storage driver it provides a",
    "start": "222640",
    "end": "225360"
  },
  {
    "text": "familiar",
    "start": "225360",
    "end": "226159"
  },
  {
    "text": "file system mount experience to your",
    "start": "226159",
    "end": "228720"
  },
  {
    "text": "compute workloads",
    "start": "228720",
    "end": "230640"
  },
  {
    "text": "it's also pluggable and supports",
    "start": "230640",
    "end": "232879"
  },
  {
    "text": "multiple external secret providers",
    "start": "232879",
    "end": "235200"
  },
  {
    "text": "without modifying your application or",
    "start": "235200",
    "end": "237920"
  },
  {
    "text": "changing the pod yaml",
    "start": "237920",
    "end": "240480"
  },
  {
    "text": "it can load new values of secrets",
    "start": "240480",
    "end": "242319"
  },
  {
    "text": "throughout your pod's life cycle",
    "start": "242319",
    "end": "244560"
  },
  {
    "text": "and it can also even sync those secrets",
    "start": "244560",
    "end": "247280"
  },
  {
    "text": "to kubernetes secrets",
    "start": "247280",
    "end": "249120"
  },
  {
    "text": "for further compatibility with existing",
    "start": "249120",
    "end": "251599"
  },
  {
    "text": "deployments",
    "start": "251599",
    "end": "252879"
  },
  {
    "text": "finally it supports both linux and",
    "start": "252879",
    "end": "255280"
  },
  {
    "text": "windows",
    "start": "255280",
    "end": "257440"
  },
  {
    "text": "you can use this driver if your cluster",
    "start": "257440",
    "end": "259519"
  },
  {
    "text": "is on 1.16 or greater",
    "start": "259519",
    "end": "261840"
  },
  {
    "text": "or if you have windows nodes you'll need",
    "start": "261840",
    "end": "264240"
  },
  {
    "text": "to be on 1.18",
    "start": "264240",
    "end": "265840"
  },
  {
    "text": "or greater",
    "start": "265840",
    "end": "269040"
  },
  {
    "text": "the current supported providers are",
    "start": "269040",
    "end": "270880"
  },
  {
    "text": "azure keyword google secret manager",
    "start": "270880",
    "end": "273199"
  },
  {
    "text": "and hashicorp quad and in the future we",
    "start": "273199",
    "end": "276080"
  },
  {
    "text": "are looking forward to an aws secrets",
    "start": "276080",
    "end": "278160"
  },
  {
    "text": "manager provider",
    "start": "278160",
    "end": "281199"
  },
  {
    "text": "so how does the secret store csi driver",
    "start": "281199",
    "end": "283759"
  },
  {
    "text": "work",
    "start": "283759",
    "end": "285040"
  },
  {
    "text": "the driver is installed as a daemon set",
    "start": "285040",
    "end": "287199"
  },
  {
    "text": "onto each node of the cluster",
    "start": "287199",
    "end": "289440"
  },
  {
    "text": "additionally there needs to be a",
    "start": "289440",
    "end": "291040"
  },
  {
    "text": "provider specific daemon set",
    "start": "291040",
    "end": "292960"
  },
  {
    "text": "deployed alongside the driver",
    "start": "292960",
    "end": "296720"
  },
  {
    "text": "when a pod is created through the",
    "start": "296720",
    "end": "298240"
  },
  {
    "text": "kubernetes api",
    "start": "298240",
    "end": "300000"
  },
  {
    "text": "it's scheduled onto a node the cubelet",
    "start": "300000",
    "end": "303600"
  },
  {
    "text": "process on the node",
    "start": "303600",
    "end": "304639"
  },
  {
    "text": "looks at the pod spec and sees there is",
    "start": "304639",
    "end": "306479"
  },
  {
    "text": "a volume mount request",
    "start": "306479",
    "end": "308880"
  },
  {
    "text": "the cubelet issues an rpc to the csi",
    "start": "308880",
    "end": "312080"
  },
  {
    "text": "driver to mount the volume",
    "start": "312080",
    "end": "315199"
  },
  {
    "text": "the csi driver creates and mounts the",
    "start": "315199",
    "end": "318240"
  },
  {
    "text": "temp fs",
    "start": "318240",
    "end": "319120"
  },
  {
    "text": "into the pod the csi driver then",
    "start": "319120",
    "end": "322639"
  },
  {
    "text": "issues a request to the provider",
    "start": "322639",
    "end": "326000"
  },
  {
    "text": "the provider talks to the external",
    "start": "326000",
    "end": "328000"
  },
  {
    "text": "secret store",
    "start": "328000",
    "end": "329120"
  },
  {
    "text": "to fetch the secrets and write them to",
    "start": "329120",
    "end": "332160"
  },
  {
    "text": "the pod volume",
    "start": "332160",
    "end": "333360"
  },
  {
    "text": "as files at this point the volume is",
    "start": "333360",
    "end": "336720"
  },
  {
    "text": "successfully mounted",
    "start": "336720",
    "end": "338240"
  },
  {
    "text": "and the pod starts running",
    "start": "338240",
    "end": "341680"
  },
  {
    "text": "so let's dig into some yaml here's an",
    "start": "342720",
    "end": "345039"
  },
  {
    "text": "example pod",
    "start": "345039",
    "end": "347360"
  },
  {
    "text": "this pod mounts a volume at far slash",
    "start": "347360",
    "end": "350400"
  },
  {
    "text": "secrets",
    "start": "350400",
    "end": "351520"
  },
  {
    "text": "this volume is a csi volume instead of a",
    "start": "351520",
    "end": "354639"
  },
  {
    "text": "secret's volume",
    "start": "354639",
    "end": "356080"
  },
  {
    "text": "the driver name in the csi volume tells",
    "start": "356080",
    "end": "359360"
  },
  {
    "text": "the cubelet to use the secret store",
    "start": "359360",
    "end": "361680"
  },
  {
    "text": "driver for this volume",
    "start": "361680",
    "end": "364800"
  },
  {
    "text": "the volume also references the secret",
    "start": "364800",
    "end": "366720"
  },
  {
    "text": "provider class app secrets",
    "start": "366720",
    "end": "368960"
  },
  {
    "text": "so what is the secret provider class",
    "start": "368960",
    "end": "372800"
  },
  {
    "text": "the seeker provider class is a namespace",
    "start": "372800",
    "end": "375440"
  },
  {
    "text": "kubernetes custom resource",
    "start": "375440",
    "end": "378880"
  },
  {
    "text": "that is used to provide the driver",
    "start": "378880",
    "end": "381520"
  },
  {
    "text": "configurations",
    "start": "381520",
    "end": "382960"
  },
  {
    "text": "and provider specific parameters to",
    "start": "382960",
    "end": "386080"
  },
  {
    "text": "the secret cs4 csi driver",
    "start": "386080",
    "end": "390800"
  },
  {
    "text": "we've looked at the pod yaml and the",
    "start": "390800",
    "end": "392479"
  },
  {
    "text": "secret provider class cmo",
    "start": "392479",
    "end": "394160"
  },
  {
    "text": "but how do you know which versions of",
    "start": "394160",
    "end": "395840"
  },
  {
    "text": "secrets are being used",
    "start": "395840",
    "end": "397840"
  },
  {
    "text": "by your pod the",
    "start": "397840",
    "end": "401280"
  },
  {
    "text": "secret provider class pod status",
    "start": "401280",
    "end": "404560"
  },
  {
    "text": "is a namespace kubernetes custom",
    "start": "404560",
    "end": "407440"
  },
  {
    "text": "resource",
    "start": "407440",
    "end": "408160"
  },
  {
    "text": "that is created by the csi driver",
    "start": "408160",
    "end": "411360"
  },
  {
    "text": "to track the binding between a pod",
    "start": "411360",
    "end": "414880"
  },
  {
    "text": "and a secret provider class",
    "start": "414880",
    "end": "418880"
  },
  {
    "text": "this resource contains details about the",
    "start": "418880",
    "end": "422240"
  },
  {
    "text": "current object",
    "start": "422240",
    "end": "423120"
  },
  {
    "text": "versions that have been loaded into the",
    "start": "423120",
    "end": "425199"
  },
  {
    "text": "pod mount",
    "start": "425199",
    "end": "428080"
  },
  {
    "text": "let's look at the demo now",
    "start": "433360",
    "end": "436639"
  },
  {
    "text": "first i'm going to show you what is",
    "start": "436639",
    "end": "438639"
  },
  {
    "text": "there on the cluster",
    "start": "438639",
    "end": "439759"
  },
  {
    "text": "so we have a kind cluster with a single",
    "start": "439759",
    "end": "442560"
  },
  {
    "text": "node that's running kubernetes version",
    "start": "442560",
    "end": "444919"
  },
  {
    "text": "1.20.2",
    "start": "444919",
    "end": "446479"
  },
  {
    "text": "to show how the secret store csi driver",
    "start": "446479",
    "end": "448720"
  },
  {
    "text": "enables port portability across",
    "start": "448720",
    "end": "450479"
  },
  {
    "text": "different",
    "start": "450479",
    "end": "450960"
  },
  {
    "text": "external secret store providers we're",
    "start": "450960",
    "end": "453120"
  },
  {
    "text": "going to start with deploying two",
    "start": "453120",
    "end": "454720"
  },
  {
    "text": "applications",
    "start": "454720",
    "end": "455520"
  },
  {
    "text": "written against specific third party",
    "start": "455520",
    "end": "457280"
  },
  {
    "text": "secrets and here we're going to be using",
    "start": "457280",
    "end": "459360"
  },
  {
    "text": "azure and gcp",
    "start": "459360",
    "end": "461199"
  },
  {
    "text": "first we're going to see what the pod",
    "start": "461199",
    "end": "463039"
  },
  {
    "text": "yaml looks like for these applications",
    "start": "463039",
    "end": "465199"
  },
  {
    "text": "using the external secret store api to",
    "start": "465199",
    "end": "467520"
  },
  {
    "text": "access the secret",
    "start": "467520",
    "end": "470479"
  },
  {
    "text": "this is a sample yaml for a pod using",
    "start": "472400",
    "end": "475039"
  },
  {
    "text": "the azure keyword api",
    "start": "475039",
    "end": "476639"
  },
  {
    "text": "to get the secret from azure keyword as",
    "start": "476639",
    "end": "479599"
  },
  {
    "text": "you can see here",
    "start": "479599",
    "end": "480560"
  },
  {
    "text": "the keyword name and the keyword secret",
    "start": "480560",
    "end": "483039"
  },
  {
    "text": "name are provided as arguments for the",
    "start": "483039",
    "end": "485199"
  },
  {
    "text": "container",
    "start": "485199",
    "end": "486240"
  },
  {
    "text": "and the credentials are obtained from",
    "start": "486240",
    "end": "489039"
  },
  {
    "text": "secret store threads",
    "start": "489039",
    "end": "490319"
  },
  {
    "text": "the kubernetes secret that i've",
    "start": "490319",
    "end": "492560"
  },
  {
    "text": "reconfigured",
    "start": "492560",
    "end": "495360"
  },
  {
    "text": "this is a yaml file for a pod using the",
    "start": "496879",
    "end": "499840"
  },
  {
    "text": "google secret manager api",
    "start": "499840",
    "end": "501440"
  },
  {
    "text": "to get the secrets from google secret",
    "start": "501440",
    "end": "503360"
  },
  {
    "text": "manager",
    "start": "503360",
    "end": "504639"
  },
  {
    "text": "the secret name here is app secret and",
    "start": "504639",
    "end": "507599"
  },
  {
    "text": "the version that's being fetched",
    "start": "507599",
    "end": "509120"
  },
  {
    "text": "is latest",
    "start": "509120",
    "end": "511919"
  },
  {
    "text": "now let's go ahead and deploy these pods",
    "start": "512959",
    "end": "515518"
  },
  {
    "text": "in their respective namespaces",
    "start": "515519",
    "end": "521839"
  },
  {
    "text": "so now we've deployed the parts let's",
    "start": "523039",
    "end": "524959"
  },
  {
    "text": "check if the pods are running",
    "start": "524959",
    "end": "528240"
  },
  {
    "text": "now that the pods are running we can",
    "start": "528240",
    "end": "530560"
  },
  {
    "text": "query the logs for the pods to see",
    "start": "530560",
    "end": "532800"
  },
  {
    "text": "the secret that's being used by the pods",
    "start": "532800",
    "end": "537040"
  },
  {
    "text": "so as we can see here the azure key",
    "start": "539040",
    "end": "541279"
  },
  {
    "text": "vault pod",
    "start": "541279",
    "end": "542160"
  },
  {
    "text": "is logging the secret from azure keyword",
    "start": "542160",
    "end": "544959"
  },
  {
    "text": "and the google secret manager pod",
    "start": "544959",
    "end": "547040"
  },
  {
    "text": "is logging the secret from the google",
    "start": "547040",
    "end": "549040"
  },
  {
    "text": "secret manager",
    "start": "549040",
    "end": "551440"
  },
  {
    "text": "now instead of having different",
    "start": "551440",
    "end": "553360"
  },
  {
    "text": "application implementation",
    "start": "553360",
    "end": "554800"
  },
  {
    "text": "for external secret store we have this",
    "start": "554800",
    "end": "556880"
  },
  {
    "text": "application that was returned to consume",
    "start": "556880",
    "end": "558800"
  },
  {
    "text": "the secret from the file system instead",
    "start": "558800",
    "end": "562000"
  },
  {
    "text": "using the secret store csi driver we're",
    "start": "562000",
    "end": "564160"
  },
  {
    "text": "going to show how this application",
    "start": "564160",
    "end": "566080"
  },
  {
    "text": "can get secrets from either secret",
    "start": "566080",
    "end": "568080"
  },
  {
    "text": "bracket",
    "start": "568080",
    "end": "569839"
  },
  {
    "text": "before we jump in if we look at the code",
    "start": "569839",
    "end": "572000"
  },
  {
    "text": "here we can see that this part",
    "start": "572000",
    "end": "574240"
  },
  {
    "text": "is trying to get the secret from the",
    "start": "574240",
    "end": "576640"
  },
  {
    "text": "file system",
    "start": "576640",
    "end": "577839"
  },
  {
    "text": "and log the secret",
    "start": "577839",
    "end": "581279"
  },
  {
    "text": "as a first step for the demo i am going",
    "start": "582480",
    "end": "584800"
  },
  {
    "text": "to deploy the secret store csi driver",
    "start": "584800",
    "end": "587440"
  },
  {
    "text": "using help in the cube system nail space",
    "start": "587440",
    "end": "591920"
  },
  {
    "text": "it's recommended to use a separate name",
    "start": "596800",
    "end": "598800"
  },
  {
    "text": "space for the csi driver pods other than",
    "start": "598800",
    "end": "601040"
  },
  {
    "text": "the ones that are used for the workload",
    "start": "601040",
    "end": "603440"
  },
  {
    "text": "now let's take a look at what the",
    "start": "603440",
    "end": "605040"
  },
  {
    "text": "helmets i've deployed",
    "start": "605040",
    "end": "608079"
  },
  {
    "text": "we have a csi driver daemon set here",
    "start": "610000",
    "end": "613040"
  },
  {
    "text": "the csi driver pods need to be run on",
    "start": "613040",
    "end": "615360"
  },
  {
    "text": "all the nodes",
    "start": "615360",
    "end": "616160"
  },
  {
    "text": "so that the cubelet process on the node",
    "start": "616160",
    "end": "618560"
  },
  {
    "text": "can talk to the driver",
    "start": "618560",
    "end": "619920"
  },
  {
    "text": "to mount the volume now that the driver",
    "start": "619920",
    "end": "622480"
  },
  {
    "text": "has been installed",
    "start": "622480",
    "end": "623440"
  },
  {
    "text": "let's go ahead and deploy the providers",
    "start": "623440",
    "end": "626399"
  },
  {
    "text": "in",
    "start": "626399",
    "end": "626880"
  },
  {
    "text": "the cube system namespace so first we're",
    "start": "626880",
    "end": "629839"
  },
  {
    "text": "going to be deploying",
    "start": "629839",
    "end": "631040"
  },
  {
    "text": "the azure keyword provider",
    "start": "631040",
    "end": "634959"
  },
  {
    "text": "and next we're going to be deploying the",
    "start": "635120",
    "end": "637279"
  },
  {
    "text": "google gcp",
    "start": "637279",
    "end": "638720"
  },
  {
    "text": "plugin let's check to make sure",
    "start": "638720",
    "end": "642880"
  },
  {
    "text": "that the provider and the driver pods",
    "start": "642880",
    "end": "644640"
  },
  {
    "text": "are running",
    "start": "644640",
    "end": "647279"
  },
  {
    "text": "now that the csi driver and the provider",
    "start": "647279",
    "end": "649279"
  },
  {
    "text": "pods have been installed and running we",
    "start": "649279",
    "end": "651200"
  },
  {
    "text": "are going to take a look at the pod yaml",
    "start": "651200",
    "end": "653440"
  },
  {
    "text": "that's being used for the the",
    "start": "653440",
    "end": "655360"
  },
  {
    "text": "application",
    "start": "655360",
    "end": "657920"
  },
  {
    "text": "so as you can see here the board",
    "start": "658160",
    "end": "660800"
  },
  {
    "text": "specifies the volume mount",
    "start": "660800",
    "end": "662560"
  },
  {
    "text": "the name for the volume amount is secret",
    "start": "662560",
    "end": "664160"
  },
  {
    "text": "store in line and the amount path",
    "start": "664160",
    "end": "666480"
  },
  {
    "text": "within the container is going to be",
    "start": "666480",
    "end": "668320"
  },
  {
    "text": "mount secret store",
    "start": "668320",
    "end": "670079"
  },
  {
    "text": "and in the volumes the same name is",
    "start": "670079",
    "end": "672480"
  },
  {
    "text": "being used and here the volume type is",
    "start": "672480",
    "end": "674720"
  },
  {
    "text": "csi",
    "start": "674720",
    "end": "675519"
  },
  {
    "text": "and we can see the driver that's being",
    "start": "675519",
    "end": "677120"
  },
  {
    "text": "used is the secret store csi driver",
    "start": "677120",
    "end": "679760"
  },
  {
    "text": "and here in the volume attributes we",
    "start": "679760",
    "end": "681760"
  },
  {
    "text": "have the secret provider class",
    "start": "681760",
    "end": "683399"
  },
  {
    "text": "csispc that we will take a look at next",
    "start": "683399",
    "end": "689839"
  },
  {
    "text": "so when we took when we take a look at",
    "start": "692000",
    "end": "693839"
  },
  {
    "text": "the secret provider class",
    "start": "693839",
    "end": "695600"
  },
  {
    "text": "here we can see the provider that's",
    "start": "695600",
    "end": "697120"
  },
  {
    "text": "being used is azure",
    "start": "697120",
    "end": "699040"
  },
  {
    "text": "and in the parameters we can see the",
    "start": "699040",
    "end": "701120"
  },
  {
    "text": "keyword name is",
    "start": "701120",
    "end": "702320"
  },
  {
    "text": "kubecon eu 2021 and the objects",
    "start": "702320",
    "end": "705600"
  },
  {
    "text": "is an array where you can define",
    "start": "705600",
    "end": "708320"
  },
  {
    "text": "multiple",
    "start": "708320",
    "end": "708880"
  },
  {
    "text": "different objects and the object type",
    "start": "708880",
    "end": "710959"
  },
  {
    "text": "here is secret",
    "start": "710959",
    "end": "712240"
  },
  {
    "text": "secret and the name is app secret uh the",
    "start": "712240",
    "end": "715200"
  },
  {
    "text": "possible values for object type are",
    "start": "715200",
    "end": "716800"
  },
  {
    "text": "secret key and search",
    "start": "716800",
    "end": "719760"
  },
  {
    "text": "now let's also take a look at the secret",
    "start": "719760",
    "end": "721920"
  },
  {
    "text": "provider class gamma",
    "start": "721920",
    "end": "723200"
  },
  {
    "text": "for the gcp plugin so we can see here",
    "start": "723200",
    "end": "726000"
  },
  {
    "text": "that the provider is gcp",
    "start": "726000",
    "end": "727839"
  },
  {
    "text": "and for the parameters we are trying to",
    "start": "727839",
    "end": "730160"
  },
  {
    "text": "get secrets",
    "start": "730160",
    "end": "731600"
  },
  {
    "text": "so the secret name is app secret and the",
    "start": "731600",
    "end": "733760"
  },
  {
    "text": "version that's being fetched",
    "start": "733760",
    "end": "735200"
  },
  {
    "text": "is latest so next i'm going to apply the",
    "start": "735200",
    "end": "738560"
  },
  {
    "text": "yamos to create the secret provider",
    "start": "738560",
    "end": "740399"
  },
  {
    "text": "class",
    "start": "740399",
    "end": "740959"
  },
  {
    "text": "in the azure and the gcp namespaces",
    "start": "740959",
    "end": "745839"
  },
  {
    "text": "okay now that we've configured the",
    "start": "750160",
    "end": "751680"
  },
  {
    "text": "secret provider class now the next thing",
    "start": "751680",
    "end": "753920"
  },
  {
    "text": "is to deploy the same pod yaml that we",
    "start": "753920",
    "end": "756320"
  },
  {
    "text": "looked at",
    "start": "756320",
    "end": "757200"
  },
  {
    "text": "in both the azure and the gcp name space",
    "start": "757200",
    "end": "762000"
  },
  {
    "text": "so when these parts get scheduled to a",
    "start": "765760",
    "end": "767760"
  },
  {
    "text": "node the cubelet process on the node",
    "start": "767760",
    "end": "769600"
  },
  {
    "text": "will see the volume definition",
    "start": "769600",
    "end": "771120"
  },
  {
    "text": "in the pod spec and invoke the csi",
    "start": "771120",
    "end": "773360"
  },
  {
    "text": "driver to mount the volume",
    "start": "773360",
    "end": "774959"
  },
  {
    "text": "the csi driver will mount the temp",
    "start": "774959",
    "end": "776959"
  },
  {
    "text": "address and make an rpc call to the",
    "start": "776959",
    "end": "779200"
  },
  {
    "text": "provider",
    "start": "779200",
    "end": "780000"
  },
  {
    "text": "to fetch and write the secrets to the",
    "start": "780000",
    "end": "782000"
  },
  {
    "text": "file system",
    "start": "782000",
    "end": "783519"
  },
  {
    "text": "let's check to see if the pods are",
    "start": "783519",
    "end": "785360"
  },
  {
    "text": "running",
    "start": "785360",
    "end": "787200"
  },
  {
    "text": "now that the pods are running now let's",
    "start": "787200",
    "end": "789200"
  },
  {
    "text": "look at the logs",
    "start": "789200",
    "end": "790639"
  },
  {
    "text": "the pods are running let's first check",
    "start": "790639",
    "end": "792560"
  },
  {
    "text": "the pod mount",
    "start": "792560",
    "end": "793920"
  },
  {
    "text": "to see if the files exist so as we can",
    "start": "793920",
    "end": "797279"
  },
  {
    "text": "see here",
    "start": "797279",
    "end": "798320"
  },
  {
    "text": "in the volume mount path defined we can",
    "start": "798320",
    "end": "800800"
  },
  {
    "text": "see the app secret file",
    "start": "800800",
    "end": "803120"
  },
  {
    "text": "and let's try to log the file content",
    "start": "803120",
    "end": "806880"
  },
  {
    "text": "and as we can see here we see this",
    "start": "806880",
    "end": "809519"
  },
  {
    "text": "secret is from",
    "start": "809519",
    "end": "810800"
  },
  {
    "text": "azure keyword",
    "start": "810800",
    "end": "815040"
  },
  {
    "text": "now let's check the logs for the pod",
    "start": "815040",
    "end": "818079"
  },
  {
    "text": "to see what the content is so this is",
    "start": "818079",
    "end": "820720"
  },
  {
    "text": "for the csi pod in azure namespace",
    "start": "820720",
    "end": "822800"
  },
  {
    "text": "which prints out hello from azure",
    "start": "822800",
    "end": "824320"
  },
  {
    "text": "keyboard and let's look at",
    "start": "824320",
    "end": "829839"
  },
  {
    "text": "and let's look at the logs for the csi",
    "start": "830560",
    "end": "832959"
  },
  {
    "text": "port in gcp name space",
    "start": "832959",
    "end": "834639"
  },
  {
    "text": "and we can see that it was able to fetch",
    "start": "834639",
    "end": "836480"
  },
  {
    "text": "the secret from google secret manager",
    "start": "836480",
    "end": "839199"
  },
  {
    "text": "and now as you can see the same",
    "start": "839199",
    "end": "841279"
  },
  {
    "text": "application is working against",
    "start": "841279",
    "end": "843440"
  },
  {
    "text": "either sql store",
    "start": "843440",
    "end": "846399"
  },
  {
    "text": "now that you've seen the driver in",
    "start": "848079",
    "end": "849440"
  },
  {
    "text": "action let's dig into some more advanced",
    "start": "849440",
    "end": "851519"
  },
  {
    "text": "features",
    "start": "851519",
    "end": "852720"
  },
  {
    "text": "the csi driver provides an optional",
    "start": "852720",
    "end": "854800"
  },
  {
    "text": "feature to sync the mounted contents",
    "start": "854800",
    "end": "856800"
  },
  {
    "text": "from the pod",
    "start": "856800",
    "end": "858000"
  },
  {
    "text": "as a kubernetes secret a common usage of",
    "start": "858000",
    "end": "861360"
  },
  {
    "text": "this feature is to store",
    "start": "861360",
    "end": "862880"
  },
  {
    "text": "the tls certificates in an external",
    "start": "862880",
    "end": "865199"
  },
  {
    "text": "secret store",
    "start": "865199",
    "end": "866399"
  },
  {
    "text": "and have the driver sync it to a",
    "start": "866399",
    "end": "868240"
  },
  {
    "text": "kubernetes tls secret",
    "start": "868240",
    "end": "870560"
  },
  {
    "text": "for use by an ingress controller",
    "start": "870560",
    "end": "873600"
  },
  {
    "text": "in addition the synced kubernetes secret",
    "start": "873600",
    "end": "876079"
  },
  {
    "text": "can also be referenced",
    "start": "876079",
    "end": "877440"
  },
  {
    "text": "in pod spec to set the secret as an",
    "start": "877440",
    "end": "880160"
  },
  {
    "text": "environment variable",
    "start": "880160",
    "end": "882639"
  },
  {
    "text": "use the optional secret objects field in",
    "start": "882639",
    "end": "885120"
  },
  {
    "text": "the secret provider class",
    "start": "885120",
    "end": "886959"
  },
  {
    "text": "to define the desired state of the",
    "start": "886959",
    "end": "888959"
  },
  {
    "text": "synced kubernetes",
    "start": "888959",
    "end": "890320"
  },
  {
    "text": "secret object",
    "start": "890320",
    "end": "893199"
  },
  {
    "text": "and it's generally accepted best",
    "start": "893760",
    "end": "896320"
  },
  {
    "text": "practice",
    "start": "896320",
    "end": "896959"
  },
  {
    "text": "to periodically rotate secrets if your",
    "start": "896959",
    "end": "900160"
  },
  {
    "text": "external secret store has an",
    "start": "900160",
    "end": "901760"
  },
  {
    "text": "automatic rotation feature you may be",
    "start": "901760",
    "end": "903920"
  },
  {
    "text": "interested in how your workload",
    "start": "903920",
    "end": "906079"
  },
  {
    "text": "can get the new values of the secret",
    "start": "906079",
    "end": "908240"
  },
  {
    "text": "whenever it changes",
    "start": "908240",
    "end": "910320"
  },
  {
    "text": "the driver supports automatic rotation",
    "start": "910320",
    "end": "912720"
  },
  {
    "text": "by periodically",
    "start": "912720",
    "end": "914320"
  },
  {
    "text": "reissuing rpc calls to the provider",
    "start": "914320",
    "end": "917360"
  },
  {
    "text": "to refresh the contents of the mount the",
    "start": "917360",
    "end": "920320"
  },
  {
    "text": "driver will emit a kubernetes event",
    "start": "920320",
    "end": "922720"
  },
  {
    "text": "and resync the new values of any synced",
    "start": "922720",
    "end": "925519"
  },
  {
    "text": "kubernetes",
    "start": "925519",
    "end": "926240"
  },
  {
    "text": "secrets",
    "start": "926240",
    "end": "928800"
  },
  {
    "text": "now let's take a look uh now let's do",
    "start": "932320",
    "end": "935040"
  },
  {
    "text": "another demo",
    "start": "935040",
    "end": "936480"
  },
  {
    "text": "for the sync secret feature first we're",
    "start": "936480",
    "end": "939360"
  },
  {
    "text": "going to see",
    "start": "939360",
    "end": "940000"
  },
  {
    "text": "how the secret store csi driver can sync",
    "start": "940000",
    "end": "942639"
  },
  {
    "text": "the mounted content as kubernetes secret",
    "start": "942639",
    "end": "945360"
  },
  {
    "text": "we're going to enable application to",
    "start": "945360",
    "end": "947759"
  },
  {
    "text": "work with nginx english controller with",
    "start": "947759",
    "end": "950079"
  },
  {
    "text": "dls certificates",
    "start": "950079",
    "end": "951360"
  },
  {
    "text": "stored in key vault so for the demo i've",
    "start": "951360",
    "end": "954480"
  },
  {
    "text": "already created a certificate for common",
    "start": "954480",
    "end": "956560"
  },
  {
    "text": "name localhost",
    "start": "956560",
    "end": "957519"
  },
  {
    "text": "using the step cli so let's inspect the",
    "start": "957519",
    "end": "960320"
  },
  {
    "text": "certificate using openssl",
    "start": "960320",
    "end": "962880"
  },
  {
    "text": "as we can see here the issuer the common",
    "start": "962880",
    "end": "965519"
  },
  {
    "text": "name here is localhost",
    "start": "965519",
    "end": "966959"
  },
  {
    "text": "and in terms of the validity the",
    "start": "966959",
    "end": "968880"
  },
  {
    "text": "certificate is valid for",
    "start": "968880",
    "end": "970639"
  },
  {
    "text": "until april 6th so",
    "start": "970639",
    "end": "974240"
  },
  {
    "text": "so now i'm going to upload the",
    "start": "974240",
    "end": "975680"
  },
  {
    "text": "certificate to azure keyword",
    "start": "975680",
    "end": "983839"
  },
  {
    "text": "now that the certificate has been",
    "start": "983920",
    "end": "985360"
  },
  {
    "text": "uploaded let's go to the next step which",
    "start": "985360",
    "end": "988000"
  },
  {
    "text": "is to deploy the ingress controller on",
    "start": "988000",
    "end": "990000"
  },
  {
    "text": "the cluster",
    "start": "990000",
    "end": "992560"
  },
  {
    "text": "this installs the ingress controller and",
    "start": "992560",
    "end": "994560"
  },
  {
    "text": "all the other required manifests",
    "start": "994560",
    "end": "997120"
  },
  {
    "text": "now let's take a look at a sample secret",
    "start": "997120",
    "end": "1000160"
  },
  {
    "text": "provider class that",
    "start": "1000160",
    "end": "1001440"
  },
  {
    "text": "is going to be used for syncing as",
    "start": "1001440",
    "end": "1003360"
  },
  {
    "text": "kubernetes secret",
    "start": "1003360",
    "end": "1004720"
  },
  {
    "text": "so as you can see here the name is azure",
    "start": "1004720",
    "end": "1007199"
  },
  {
    "text": "tls",
    "start": "1007199",
    "end": "1007839"
  },
  {
    "text": "so the provider that's being used is",
    "start": "1007839",
    "end": "1009519"
  },
  {
    "text": "azure and the parameters field here",
    "start": "1009519",
    "end": "1012320"
  },
  {
    "text": "matches what we saw previously in the",
    "start": "1012320",
    "end": "1015279"
  },
  {
    "text": "previous demo",
    "start": "1015279",
    "end": "1016959"
  },
  {
    "text": "so the object that's being fetched is",
    "start": "1016959",
    "end": "1019040"
  },
  {
    "text": "the certain the secret that we just",
    "start": "1019040",
    "end": "1020880"
  },
  {
    "text": "uploaded to azure keyword",
    "start": "1020880",
    "end": "1023120"
  },
  {
    "text": "the secret objects field in the secret",
    "start": "1023120",
    "end": "1025438"
  },
  {
    "text": "provider class",
    "start": "1025439",
    "end": "1026319"
  },
  {
    "text": "is what tells the csi driver that the",
    "start": "1026319",
    "end": "1029438"
  },
  {
    "text": "mounted content also needs to be",
    "start": "1029439",
    "end": "1031280"
  },
  {
    "text": "mirrored as kubernetes secret",
    "start": "1031280",
    "end": "1033199"
  },
  {
    "text": "here the secret name is what is the",
    "start": "1033199",
    "end": "1035438"
  },
  {
    "text": "desired name",
    "start": "1035439",
    "end": "1036640"
  },
  {
    "text": "the type is what the seeker type needs",
    "start": "1036640",
    "end": "1039038"
  },
  {
    "text": "to be",
    "start": "1039039",
    "end": "1039678"
  },
  {
    "text": "and as we can see the tls key and tls",
    "start": "1039679",
    "end": "1042240"
  },
  {
    "text": "cert are mandatory fields for",
    "start": "1042240",
    "end": "1044240"
  },
  {
    "text": "kubernetes secret of type tls",
    "start": "1044240",
    "end": "1047839"
  },
  {
    "text": "so now we're going to go ahead and",
    "start": "1047839",
    "end": "1049679"
  },
  {
    "text": "deploy the sql provider class",
    "start": "1049679",
    "end": "1051679"
  },
  {
    "text": "in the cluster now let's take a look",
    "start": "1051679",
    "end": "1055280"
  },
  {
    "text": "at the sample pod service and ingress",
    "start": "1055280",
    "end": "1058320"
  },
  {
    "text": "definitions",
    "start": "1058320",
    "end": "1059120"
  },
  {
    "text": "for the demo so here we have a static",
    "start": "1059120",
    "end": "1063600"
  },
  {
    "text": "pod",
    "start": "1063600",
    "end": "1064480"
  },
  {
    "text": "called foo app and the volume mount",
    "start": "1064480",
    "end": "1067840"
  },
  {
    "text": "in mount secret store and the volumes",
    "start": "1067840",
    "end": "1070400"
  },
  {
    "text": "being referenced here",
    "start": "1070400",
    "end": "1071520"
  },
  {
    "text": "is for the csi driver the secret",
    "start": "1071520",
    "end": "1074320"
  },
  {
    "text": "provider class here",
    "start": "1074320",
    "end": "1075440"
  },
  {
    "text": "azure tls matches the name for the sql",
    "start": "1075440",
    "end": "1077919"
  },
  {
    "text": "provider class we saw in the previous",
    "start": "1077919",
    "end": "1079440"
  },
  {
    "text": "step",
    "start": "1079440",
    "end": "1080240"
  },
  {
    "text": "and also as part of this manifest we are",
    "start": "1080240",
    "end": "1082559"
  },
  {
    "text": "creating service",
    "start": "1082559",
    "end": "1084160"
  },
  {
    "text": "and also another bar back end",
    "start": "1084160",
    "end": "1087200"
  },
  {
    "text": "and when we look at the ingress",
    "start": "1087200",
    "end": "1088559"
  },
  {
    "text": "specification we can see that",
    "start": "1088559",
    "end": "1090480"
  },
  {
    "text": "we are using tls for localhost and the",
    "start": "1090480",
    "end": "1093360"
  },
  {
    "text": "secret name",
    "start": "1093360",
    "end": "1094080"
  },
  {
    "text": "here english tls csi matches the secret",
    "start": "1094080",
    "end": "1097200"
  },
  {
    "text": "name that's defined in the secret",
    "start": "1097200",
    "end": "1098720"
  },
  {
    "text": "provider class",
    "start": "1098720",
    "end": "1100559"
  },
  {
    "text": "so let's go ahead and deploy all",
    "start": "1100559",
    "end": "1103679"
  },
  {
    "text": "the required odds back",
    "start": "1103679",
    "end": "1108880"
  },
  {
    "text": "now let's check to ensure that the pods",
    "start": "1108880",
    "end": "1111200"
  },
  {
    "text": "are running",
    "start": "1111200",
    "end": "1113200"
  },
  {
    "text": "they are so now when we try to curl the",
    "start": "1113200",
    "end": "1116160"
  },
  {
    "text": "endpoint",
    "start": "1116160",
    "end": "1116799"
  },
  {
    "text": "we can see the certificate that is being",
    "start": "1116799",
    "end": "1118640"
  },
  {
    "text": "used is the one synced by the secret",
    "start": "1118640",
    "end": "1120400"
  },
  {
    "text": "store csi driver",
    "start": "1120400",
    "end": "1121840"
  },
  {
    "text": "as kubernetes secret with an expiry date",
    "start": "1121840",
    "end": "1124320"
  },
  {
    "text": "of april 6th",
    "start": "1124320",
    "end": "1125919"
  },
  {
    "text": "so let's verify that",
    "start": "1125919",
    "end": "1129120"
  },
  {
    "text": "so when we look at the output here we",
    "start": "1129840",
    "end": "1131520"
  },
  {
    "text": "can see that the subject",
    "start": "1131520",
    "end": "1132960"
  },
  {
    "text": "matches the certificate that we uploaded",
    "start": "1132960",
    "end": "1134799"
  },
  {
    "text": "and also the expiry",
    "start": "1134799",
    "end": "1136000"
  },
  {
    "text": "date here is april 6 which matches the",
    "start": "1136000",
    "end": "1139200"
  },
  {
    "text": "certificate that we uploaded",
    "start": "1139200",
    "end": "1142399"
  },
  {
    "text": "as we talked about the secret provider",
    "start": "1142640",
    "end": "1144799"
  },
  {
    "text": "class in the presentation before",
    "start": "1144799",
    "end": "1146320"
  },
  {
    "text": "it is used to show the current version",
    "start": "1146320",
    "end": "1149280"
  },
  {
    "text": "of the object",
    "start": "1149280",
    "end": "1150000"
  },
  {
    "text": "that's being used by the part so now",
    "start": "1150000",
    "end": "1152880"
  },
  {
    "text": "let's check the secret provider class",
    "start": "1152880",
    "end": "1154799"
  },
  {
    "text": "for this particular port to see what",
    "start": "1154799",
    "end": "1156799"
  },
  {
    "text": "version is being used",
    "start": "1156799",
    "end": "1159919"
  },
  {
    "text": "so as we can see here the status is",
    "start": "1160880",
    "end": "1163200"
  },
  {
    "text": "mounted",
    "start": "1163200",
    "end": "1164080"
  },
  {
    "text": "and the objects is matches the field",
    "start": "1164080",
    "end": "1167039"
  },
  {
    "text": "objects that were defined in the secret",
    "start": "1167039",
    "end": "1168480"
  },
  {
    "text": "provider class",
    "start": "1168480",
    "end": "1169520"
  },
  {
    "text": "and the version that's being used for",
    "start": "1169520",
    "end": "1171360"
  },
  {
    "text": "the part currently is",
    "start": "1171360",
    "end": "1172880"
  },
  {
    "text": "starts with d7f4 and there is also other",
    "start": "1172880",
    "end": "1176559"
  },
  {
    "text": "additional metadata that can",
    "start": "1176559",
    "end": "1178160"
  },
  {
    "text": "help for cluster operators like the pod",
    "start": "1178160",
    "end": "1180320"
  },
  {
    "text": "name and also the mapping with the",
    "start": "1180320",
    "end": "1182080"
  },
  {
    "text": "secret provider class name",
    "start": "1182080",
    "end": "1185120"
  },
  {
    "text": "now that we've seen how sync kubernetes",
    "start": "1185120",
    "end": "1187919"
  },
  {
    "text": "secret works",
    "start": "1187919",
    "end": "1189360"
  },
  {
    "text": "let's also check out how rotating these",
    "start": "1189360",
    "end": "1192320"
  },
  {
    "text": "secrets would work",
    "start": "1192320",
    "end": "1193600"
  },
  {
    "text": "so for the purpose of the demo i have",
    "start": "1193600",
    "end": "1196559"
  },
  {
    "text": "already generated another certificate",
    "start": "1196559",
    "end": "1198640"
  },
  {
    "text": "with april 14th as the expiry date so we",
    "start": "1198640",
    "end": "1201360"
  },
  {
    "text": "can see the changes",
    "start": "1201360",
    "end": "1202960"
  },
  {
    "text": "so let's inspect the certificate before",
    "start": "1202960",
    "end": "1205039"
  },
  {
    "text": "we upload it to azure keyword",
    "start": "1205039",
    "end": "1207520"
  },
  {
    "text": "as we can see here the subject is",
    "start": "1207520",
    "end": "1210400"
  },
  {
    "text": "localhost",
    "start": "1210400",
    "end": "1211280"
  },
  {
    "text": "and the validity for this is april 14th",
    "start": "1211280",
    "end": "1215440"
  },
  {
    "text": "so now i'm going to upload the",
    "start": "1215440",
    "end": "1217360"
  },
  {
    "text": "certificate in key vault",
    "start": "1217360",
    "end": "1219039"
  },
  {
    "text": "with this new cell",
    "start": "1219039",
    "end": "1221919"
  },
  {
    "text": "the auto rotation feature in the secret",
    "start": "1225520",
    "end": "1227600"
  },
  {
    "text": "store csi driver should enable us to",
    "start": "1227600",
    "end": "1230080"
  },
  {
    "text": "fetch the new rotated certificate from",
    "start": "1230080",
    "end": "1232159"
  },
  {
    "text": "azure keyboard",
    "start": "1232159",
    "end": "1233200"
  },
  {
    "text": "and update the mount and the send",
    "start": "1233200",
    "end": "1235039"
  },
  {
    "text": "kubernetes secret",
    "start": "1235039",
    "end": "1236720"
  },
  {
    "text": "so now when we try to call the same end",
    "start": "1236720",
    "end": "1239280"
  },
  {
    "text": "point",
    "start": "1239280",
    "end": "1240080"
  },
  {
    "text": "we expect to see the certificate return",
    "start": "1240080",
    "end": "1242080"
  },
  {
    "text": "to have an expiry of",
    "start": "1242080",
    "end": "1243520"
  },
  {
    "text": "april 14 instead of april 6.",
    "start": "1243520",
    "end": "1249840"
  },
  {
    "text": "as we can see here the expiry date now",
    "start": "1250400",
    "end": "1253120"
  },
  {
    "text": "is april 14th",
    "start": "1253120",
    "end": "1254240"
  },
  {
    "text": "which is indicated that the certificate",
    "start": "1254240",
    "end": "1256799"
  },
  {
    "text": "that was rotated in the external secret",
    "start": "1256799",
    "end": "1258480"
  },
  {
    "text": "store",
    "start": "1258480",
    "end": "1259120"
  },
  {
    "text": "has successfully been updated in the",
    "start": "1259120",
    "end": "1261440"
  },
  {
    "text": "kubernetes secret on the cluster",
    "start": "1261440",
    "end": "1263840"
  },
  {
    "text": "now let's also check the secret provider",
    "start": "1263840",
    "end": "1266320"
  },
  {
    "text": "class part status again to see what",
    "start": "1266320",
    "end": "1268159"
  },
  {
    "text": "version of the secret is currently being",
    "start": "1268159",
    "end": "1269919"
  },
  {
    "text": "used",
    "start": "1269919",
    "end": "1272240"
  },
  {
    "text": "now as we can see here the version",
    "start": "1272320",
    "end": "1274880"
  },
  {
    "text": "before",
    "start": "1274880",
    "end": "1275520"
  },
  {
    "text": "started with d and now we can see that",
    "start": "1275520",
    "end": "1277679"
  },
  {
    "text": "the version here has been updated to the",
    "start": "1277679",
    "end": "1279600"
  },
  {
    "text": "newly updated secret",
    "start": "1279600",
    "end": "1283200"
  },
  {
    "text": "so as part of the demo we will also try",
    "start": "1284000",
    "end": "1287120"
  },
  {
    "text": "to rotate the secrets that were used by",
    "start": "1287120",
    "end": "1289120"
  },
  {
    "text": "the application as part of the",
    "start": "1289120",
    "end": "1290799"
  },
  {
    "text": "portability demo to see if it can pick",
    "start": "1290799",
    "end": "1292880"
  },
  {
    "text": "up the latest value",
    "start": "1292880",
    "end": "1294559"
  },
  {
    "text": "before we rotate the secret in key vault",
    "start": "1294559",
    "end": "1297520"
  },
  {
    "text": "or google secret manager let's start",
    "start": "1297520",
    "end": "1299440"
  },
  {
    "text": "tailing the logs to see the changes",
    "start": "1299440",
    "end": "1302840"
  },
  {
    "text": "happen",
    "start": "1302840",
    "end": "1305840"
  },
  {
    "text": "so now i am tailing the logs from the",
    "start": "1308480",
    "end": "1311200"
  },
  {
    "text": "csi pod in azure namespace",
    "start": "1311200",
    "end": "1313200"
  },
  {
    "text": "and also the csi port in gcp namespace",
    "start": "1313200",
    "end": "1315679"
  },
  {
    "text": "the csi pod",
    "start": "1315679",
    "end": "1316880"
  },
  {
    "text": "implements a file watcher which detects",
    "start": "1316880",
    "end": "1319039"
  },
  {
    "text": "any changes in the file system",
    "start": "1319039",
    "end": "1320559"
  },
  {
    "text": "and automatically logs the new secret",
    "start": "1320559",
    "end": "1324080"
  },
  {
    "text": "so now i'm going to go ahead and rotate",
    "start": "1324080",
    "end": "1326720"
  },
  {
    "text": "the secret",
    "start": "1326720",
    "end": "1327679"
  },
  {
    "text": "in key vault to the new value",
    "start": "1327679",
    "end": "1333840"
  },
  {
    "text": "as you can see the csi pod in azure news",
    "start": "1334880",
    "end": "1337600"
  },
  {
    "text": "space now has the new value",
    "start": "1337600",
    "end": "1339280"
  },
  {
    "text": "so now let's go ahead and rotate the",
    "start": "1339280",
    "end": "1341280"
  },
  {
    "text": "value in the",
    "start": "1341280",
    "end": "1342640"
  },
  {
    "text": "google secret manager as well",
    "start": "1342640",
    "end": "1347200"
  },
  {
    "text": "okay just did that and there you go",
    "start": "1347200",
    "end": "1351120"
  },
  {
    "text": "we can see that the secret store csi",
    "start": "1351120",
    "end": "1352799"
  },
  {
    "text": "driver has updated the content in the",
    "start": "1352799",
    "end": "1354640"
  },
  {
    "text": "mount",
    "start": "1354640",
    "end": "1355280"
  },
  {
    "text": "for the pods and they were able to pick",
    "start": "1355280",
    "end": "1357440"
  },
  {
    "text": "up the latest changes using the file",
    "start": "1357440",
    "end": "1359200"
  },
  {
    "text": "watcher",
    "start": "1359200",
    "end": "1361840"
  },
  {
    "text": "so what does the future look like we are",
    "start": "1365520",
    "end": "1368240"
  },
  {
    "text": "working towards the stable release for",
    "start": "1368240",
    "end": "1370000"
  },
  {
    "text": "the driver",
    "start": "1370000",
    "end": "1370880"
  },
  {
    "text": "this includes increasing the test",
    "start": "1370880",
    "end": "1372559"
  },
  {
    "text": "coverage and also finalizing the driver",
    "start": "1372559",
    "end": "1374960"
  },
  {
    "text": "provider interface",
    "start": "1374960",
    "end": "1376480"
  },
  {
    "text": "the cncf is commissioning a third-party",
    "start": "1376480",
    "end": "1378960"
  },
  {
    "text": "security review of the project",
    "start": "1378960",
    "end": "1381200"
  },
  {
    "text": "and we're looking forward to more",
    "start": "1381200",
    "end": "1382640"
  },
  {
    "text": "community involvement",
    "start": "1382640",
    "end": "1385840"
  },
  {
    "text": "if you'd like to get involved you can",
    "start": "1386400",
    "end": "1388240"
  },
  {
    "text": "join the csi secret store channel in the",
    "start": "1388240",
    "end": "1391120"
  },
  {
    "text": "kubernetes slack",
    "start": "1391120",
    "end": "1393200"
  },
  {
    "text": "we also have a mailing list for",
    "start": "1393200",
    "end": "1395120"
  },
  {
    "text": "notifications of new releases",
    "start": "1395120",
    "end": "1397120"
  },
  {
    "text": "and security announcements we use github",
    "start": "1397120",
    "end": "1400400"
  },
  {
    "text": "issues to track bugs featured requests",
    "start": "1400400",
    "end": "1403120"
  },
  {
    "text": "or to answer questions asynchronously",
    "start": "1403120",
    "end": "1406240"
  },
  {
    "text": "and also finally we hold a bi-weekly",
    "start": "1406240",
    "end": "1409520"
  },
  {
    "text": "community meeting",
    "start": "1409520",
    "end": "1412480"
  },
  {
    "text": "here are some of the resource some",
    "start": "1413280",
    "end": "1415280"
  },
  {
    "text": "resources from this presentation",
    "start": "1415280",
    "end": "1419360"
  },
  {
    "text": "that you may like there's the document",
    "start": "1419360",
    "end": "1423039"
  },
  {
    "text": "link to documentation for this psi",
    "start": "1423039",
    "end": "1425600"
  },
  {
    "text": "driver",
    "start": "1425600",
    "end": "1426720"
  },
  {
    "text": "links to documentation for the",
    "start": "1426720",
    "end": "1428720"
  },
  {
    "text": "individual providers",
    "start": "1428720",
    "end": "1430480"
  },
  {
    "text": "and a link to the examples from this",
    "start": "1430480",
    "end": "1432960"
  },
  {
    "text": "presentation",
    "start": "1432960",
    "end": "1435679"
  },
  {
    "text": "thank you for watching and remember to",
    "start": "1436240",
    "end": "1439279"
  },
  {
    "text": "keep this secret secret",
    "start": "1439279",
    "end": "1445840"
  }
]