[
  {
    "text": "hey folks thanks for coming my name is Andrew Ziegler I'm a software engineer Boyett I'm here to give this talk with",
    "start": "30",
    "end": "6270"
  },
  {
    "text": "my friend Frederick we kind of wanted to showcase linker D and Prometheus and how they're complementary technologies and",
    "start": "6270",
    "end": "13469"
  },
  {
    "text": "kind of show up the latest and greatest features but also talk about kind of the origin story of of how these tools",
    "start": "13469",
    "end": "20180"
  },
  {
    "text": "evolved how we ended up with these features and kind of how the integration between the two developed along the way",
    "start": "20180",
    "end": "27990"
  },
  {
    "text": "so with that Frederick burnsy okay so first we want to have a little quick run",
    "start": "27990",
    "end": "36390"
  },
  {
    "text": "through Prometheus quick show of hands how many people know about Prometheus",
    "start": "36390",
    "end": "43430"
  },
  {
    "text": "awesome I think that's like 90 95 % of the hands that's pretty good but",
    "start": "43430",
    "end": "49950"
  },
  {
    "text": "specifically I want to talk about a couple of features that make it such a",
    "start": "49950",
    "end": "56489"
  },
  {
    "text": "great fit for linker D and Prometheus but first let's talk about some history",
    "start": "56489",
    "end": "62309"
  },
  {
    "text": "just for everyone to know where Prometheus came from and how it developed over time so Prometheus was",
    "start": "62309",
    "end": "69420"
  },
  {
    "text": "initially created at SoundCloud by a couple of X coolers who knew some",
    "start": "69420",
    "end": "74520"
  },
  {
    "text": "systems within within Google and they liked it but there was nothing out there and so they created they new Borg within",
    "start": "74520",
    "end": "83270"
  },
  {
    "text": "Google and there was Berkman which is the monitoring system and sadly nothing",
    "start": "83270",
    "end": "89369"
  },
  {
    "text": "is named in the open source after the",
    "start": "89369",
    "end": "94530"
  },
  {
    "text": "fork or anything in Star Trek unfortunately at least I'm sad about",
    "start": "94530",
    "end": "100290"
  },
  {
    "text": "that so yeah so they created this and",
    "start": "100290",
    "end": "105920"
  },
  {
    "text": "today fast-forward like five years since they publicly started speaking about it",
    "start": "105920",
    "end": "113159"
  },
  {
    "text": "a ton of companies are using it and I just saw 95% of the room like raise",
    "start": "113159",
    "end": "120180"
  },
  {
    "text": "their hand that they know about Prometheus and maybe another quick show of hands how many people are actually using it in production okay okay that's",
    "start": "120180",
    "end": "128369"
  },
  {
    "text": "probably like 60 70 percent so that's great and I'm hoping that maybe the the gap",
    "start": "128369",
    "end": "137769"
  },
  {
    "text": "between the 95 percent and the 70 percent are going to be running",
    "start": "137769",
    "end": "142810"
  },
  {
    "text": "Prometheus after this and we can add your company to this slide so let's start with a really simple intro to how",
    "start": "142810",
    "end": "150340"
  },
  {
    "text": "Prometheus works on a really basic example so Prometheus is a pull based",
    "start": "150340",
    "end": "156940"
  },
  {
    "text": "system so in some regular interval it will go to your application and grab the",
    "start": "156940",
    "end": "163329"
  },
  {
    "text": "metrics that your application exposes and it just does that via an HTTP call so we just have an HTTP endpoint on our",
    "start": "163329",
    "end": "172269"
  },
  {
    "text": "application that exposes these metrics and we instrument our application to whenever something happens to increment",
    "start": "172269",
    "end": "180250"
  },
  {
    "text": "for example our our metrics and Prometheus comes every 15 seconds that's",
    "start": "180250",
    "end": "186160"
  },
  {
    "text": "the default but it's configurable and whatever our application returns we add",
    "start": "186160",
    "end": "192579"
  },
  {
    "text": "the time stamp to it and write it into our internal time series database and in this case our process hasn't actually",
    "start": "192579",
    "end": "200260"
  },
  {
    "text": "received any traffic itself so the request count was zero but now we're",
    "start": "200260",
    "end": "205810"
  },
  {
    "text": "actually routing production traffic to it and over time it increases its",
    "start": "205810",
    "end": "211060"
  },
  {
    "text": "metrics internally right and so for example now we have two requests that",
    "start": "211060",
    "end": "216519"
  },
  {
    "text": "were hit against this service and Promethea the 15 seconds have elapsed again so Prometheus comes around and",
    "start": "216519",
    "end": "223660"
  },
  {
    "text": "scrapes the metrics and inserts it into its time series database and furius just as this forever and eternity and this is",
    "start": "223660",
    "end": "232120"
  },
  {
    "text": "essentially the example of a single time series from one target and we'll keep",
    "start": "232120",
    "end": "237519"
  },
  {
    "text": "reiterating on this terminology to guide us through this talk basically so what",
    "start": "237519",
    "end": "245200"
  },
  {
    "text": "we just saw was collection of time series data but Prometheus is a monitoring system no it does that what",
    "start": "245200",
    "end": "251799"
  },
  {
    "text": "does that actually mean for something to be a monitoring system at least in my point of view it means that we need to",
    "start": "251799",
    "end": "258010"
  },
  {
    "text": "be able to do something actionable with that data that we're collecting and I",
    "start": "258010",
    "end": "263169"
  },
  {
    "text": "think the best that's example of that are so if there's some condition in our",
    "start": "263169",
    "end": "270040"
  },
  {
    "text": "system then we want to get a page for example or a slack notification or something that tells us that there's a",
    "start": "270040",
    "end": "277770"
  },
  {
    "text": "status that something's off in our in our infrastructure and I just wanted to",
    "start": "277770",
    "end": "284200"
  },
  {
    "text": "show that there's really nothing that's like black magic in Prometheus like we",
    "start": "284200",
    "end": "290620"
  },
  {
    "text": "saw that the collection is super simple it's just every 15 seconds it goes around and collect all these this data",
    "start": "290620",
    "end": "296050"
  },
  {
    "text": "so that's really simple right and alerting it's really the exact same thing and you see this throughout the",
    "start": "296050",
    "end": "302290"
  },
  {
    "text": "Prometheus code base that really everything's like super crisp and just",
    "start": "302290",
    "end": "308940"
  },
  {
    "text": "pretty I I don't want to say stupid because it's it's good but it's stupid",
    "start": "308940",
    "end": "315130"
  },
  {
    "text": "as in it's simple to understand so yeah this also just happens every 15",
    "start": "315130",
    "end": "321130"
  },
  {
    "text": "seconds Prometheus just evaluates all the rules it's configured to evaluate",
    "start": "321130",
    "end": "326350"
  },
  {
    "text": "and then if an alerting rule is firing then it will actually fire that but now",
    "start": "326350",
    "end": "332410"
  },
  {
    "text": "we're at coop con so what does that have to do with linker d & kubernetes and prometheus all the CNCs projects so",
    "start": "332410",
    "end": "341050"
  },
  {
    "text": "Prometheus has built-in service discovery mechanisms for kubernetes and what that means is Prometheus can go to",
    "start": "341050",
    "end": "348669"
  },
  {
    "text": "the criminales API and ask for all the pods in your kubernetes cluster for",
    "start": "348669",
    "end": "354250"
  },
  {
    "text": "example and that way Prometheus then knows okay I have this part of this pot and goes ahead and scrapes all of those",
    "start": "354250",
    "end": "361860"
  },
  {
    "text": "individually and this is a really subtle but very important thing which is",
    "start": "361860",
    "end": "367680"
  },
  {
    "text": "Prometheus is about white box monitoring and that actually does mean that we do go to every single pod and want to grab",
    "start": "367680",
    "end": "374919"
  },
  {
    "text": "metrics from every single instance we don't load-balanced this or something because then we would be getting metrics",
    "start": "374919",
    "end": "380979"
  },
  {
    "text": "from different processes every time we scrape our metrics we actually wanted the grannie we want the granular targets",
    "start": "380979",
    "end": "388150"
  },
  {
    "text": "to be scraped and that way we true have true insight into our applications and",
    "start": "388150",
    "end": "393250"
  },
  {
    "text": "how every single process is doing and then we can do aggregations over our entire infrastructure and make",
    "start": "393250",
    "end": "399639"
  },
  {
    "text": "sense of all of this data so this is really important when you think about Prometheus we always want to make sure",
    "start": "399639",
    "end": "406180"
  },
  {
    "text": "we get data as close to the origin of some action so if we are talking about a",
    "start": "406180",
    "end": "413860"
  },
  {
    "text": "network service we always want to have the instrumentation as close as possible to the code that actually does the",
    "start": "413860",
    "end": "424029"
  },
  {
    "text": "network requests so let's visualize this a bit so we saw previously we had like a",
    "start": "424029",
    "end": "430180"
  },
  {
    "text": "table where we inserted all of our time stems but it turns out time series are actually nice for graphing right so we",
    "start": "430180",
    "end": "438430"
  },
  {
    "text": "have a couple of samples here and we have a metric called HTTP requests",
    "start": "438430",
    "end": "443949"
  },
  {
    "text": "that's a really common thing to have but Prometheus has a model where you can",
    "start": "443949",
    "end": "451839"
  },
  {
    "text": "basically enrich all of these metrics with additional meta information which",
    "start": "451839",
    "end": "457029"
  },
  {
    "text": "is label which are labels and in this case for example we don't only have one",
    "start": "457029",
    "end": "463839"
  },
  {
    "text": "series for HTTP requests but we have lots of series describing different",
    "start": "463839",
    "end": "468909"
  },
  {
    "text": "aspects of our HTTP server so we can have for example metrics based on",
    "start": "468909",
    "end": "474009"
  },
  {
    "text": "request paths or on response latencies all things like that are totally",
    "start": "474009",
    "end": "481330"
  },
  {
    "text": "possible with Prometheus and we'll see later how that's great with link or D",
    "start": "481330",
    "end": "487469"
  },
  {
    "text": "now Prometheus was created at a time where there was no kubernetes and at the time",
    "start": "487469",
    "end": "496680"
  },
  {
    "text": "the the engineers looked at how what is the lifetime of a time series and",
    "start": "496680",
    "end": "503620"
  },
  {
    "text": "typically things were deployed on virtual machines for example and all processes even if they were restarted",
    "start": "503620",
    "end": "511060"
  },
  {
    "text": "they would be restarted on the same virtual machine and everything would basically stay the same so that means that our time series were always",
    "start": "511060",
    "end": "517810"
  },
  {
    "text": "continuous we didn't have lots of time series that started and stopped now this changed changes dramatically on",
    "start": "517810",
    "end": "525250"
  },
  {
    "text": "kubernetes or even on cloud providers that sometimes start to",
    "start": "525250",
    "end": "531360"
  },
  {
    "text": "evict your virtual machines or stuff like that so we will it's super important that Prometheus is purposely",
    "start": "531360",
    "end": "540660"
  },
  {
    "text": "built for an environment like this and this is what we did when we created the Prometheus 2.0 storage we specifically",
    "start": "540660",
    "end": "549420"
  },
  {
    "text": "had this problem that there are lots of pods coming and going in kubernetes and that meant there's there are a lot of",
    "start": "549420",
    "end": "555360"
  },
  {
    "text": "times used that keep being created and stopped and to make that problem even",
    "start": "555360",
    "end": "561990"
  },
  {
    "text": "worse people like insight and that's a good thing but it also means that it's",
    "start": "561990",
    "end": "567660"
  },
  {
    "text": "that much more data so the more labels we have the more time series we're going",
    "start": "567660",
    "end": "573000"
  },
  {
    "text": "to produce the more load we put on Prometheus and essentially the most",
    "start": "573000",
    "end": "579120"
  },
  {
    "text": "costly operation is creating a new time series you can roughly compare that to",
    "start": "579120",
    "end": "586740"
  },
  {
    "text": "creating a new file that's relatively expensive compared to appending to an",
    "start": "586740",
    "end": "592290"
  },
  {
    "text": "existing file that's a pretty cheap or at least comparatively a very cheap",
    "start": "592290",
    "end": "597769"
  },
  {
    "text": "operation so what's our situation we are",
    "start": "597769",
    "end": "602970"
  },
  {
    "text": "in a world where targets come and go all the time and they expel expose hundreds",
    "start": "602970",
    "end": "609240"
  },
  {
    "text": "and thousands of time series at a time so when we realized this in Prometheus",
    "start": "609240",
    "end": "616560"
  },
  {
    "text": "one point X we just thought we completely had to rethink everything",
    "start": "616560",
    "end": "621810"
  },
  {
    "text": "that we did because one of the key things in the Prometheus 1 point X",
    "start": "621810",
    "end": "628440"
  },
  {
    "text": "storage was that every single time series was a single file on disk and if you think about millions and millions of",
    "start": "628440",
    "end": "636930"
  },
  {
    "text": "active time series that awesome that translates to millions and millions of files on disk which some file systems",
    "start": "636930",
    "end": "643170"
  },
  {
    "text": "are not even particularly happy about us doing so we completely rewrote the",
    "start": "643170",
    "end": "650699"
  },
  {
    "text": "entire storage engine and the problem is not just inserting this data but then",
    "start": "650699",
    "end": "657959"
  },
  {
    "text": "people also wanted to queries also it's all sorts of queries and basically we have an visualization here that show",
    "start": "657959",
    "end": "664660"
  },
  {
    "text": "we have all sorts of queries where we slice and dice data and we want all of",
    "start": "664660",
    "end": "671290"
  },
  {
    "text": "this to be fast right and all of that as possible with Prometheus to print oh and",
    "start": "671290",
    "end": "677430"
  },
  {
    "text": "another cool feature that we I think",
    "start": "677430",
    "end": "682480"
  },
  {
    "text": "it's pretty unique about Prometheus in the space because Prometheus is pull based it can immediately detect if a",
    "start": "682480",
    "end": "690910"
  },
  {
    "text": "time series goes away so if our slash metrics endpoint had metrics for some path information and",
    "start": "690910",
    "end": "699780"
  },
  {
    "text": "that went away then we can immediately tell in Prometheus on the next scrape",
    "start": "699780",
    "end": "705820"
  },
  {
    "text": "that this time series has stopped that is not particularly useful for HTTP",
    "start": "705820",
    "end": "711460"
  },
  {
    "text": "requests but if you want to have for",
    "start": "711460",
    "end": "716560"
  },
  {
    "text": "example within the creeper Nettie's case we often have that pod information comes and goes all the time and we want to",
    "start": "716560",
    "end": "722020"
  },
  {
    "text": "have we want to be able to tell that the pot has disappeared immediately so stay",
    "start": "722020",
    "end": "728560"
  },
  {
    "text": "on this is really how do how can we tell that a time series is done and previously in Prometheus one point X",
    "start": "728560",
    "end": "735810"
  },
  {
    "text": "this was just like a time out based system where if a time series hasn't",
    "start": "735810",
    "end": "740950"
  },
  {
    "text": "received a new sample within the last five minutes its marked as stale but",
    "start": "740950",
    "end": "746770"
  },
  {
    "text": "that's problematic because that means that it potentially takes up to five minutes for alerts to actually register",
    "start": "746770",
    "end": "754210"
  },
  {
    "text": "that this time series is done so that's too late and in Prometheus 2.0 what we",
    "start": "754210",
    "end": "759820"
  },
  {
    "text": "did instead is immediately when we we",
    "start": "759820",
    "end": "766630"
  },
  {
    "text": "have some tracking functionality and immediately when the time series disappears from the endpoint we immediately mark it as stale and this is",
    "start": "766630",
    "end": "773800"
  },
  {
    "text": "a really nice property of Prometheus being a pulse pull based system because in a push based system this is not",
    "start": "773800",
    "end": "779680"
  },
  {
    "text": "really possible unless the pushing target also knows when it ends time",
    "start": "779680",
    "end": "785200"
  },
  {
    "text": "series which is kind of difficult to do and this is really great functionality",
    "start": "785200",
    "end": "791260"
  },
  {
    "text": "and it actually made us discover a bunch of problems in the Prometheus ecosystem",
    "start": "791260",
    "end": "796900"
  },
  {
    "text": "because this is an example of C advisor which exposes metrics about containers and",
    "start": "796900",
    "end": "805480"
  },
  {
    "text": "there was a bug that wasn't actually that what that was causing C advisor not to actually continuously exposed metrics",
    "start": "805480",
    "end": "814089"
  },
  {
    "text": "but just have gaps every now and then and in Prometheus one point X this",
    "start": "814089",
    "end": "819910"
  },
  {
    "text": "looked totally fine we have continuous lines everything looks happy but in 2.0 with",
    "start": "819910",
    "end": "825189"
  },
  {
    "text": "correct or better stay on this handling we immediately noticed that there could",
    "start": "825189",
    "end": "831100"
  },
  {
    "text": "be a problem and as I said this is super important in order to be sure that the",
    "start": "831100",
    "end": "836709"
  },
  {
    "text": "data that we're looking at is always fresh and even if you go out of the talk",
    "start": "836709",
    "end": "845490"
  },
  {
    "text": "not remembering any of the things that I've just said then just remember",
    "start": "845490",
    "end": "851160"
  },
  {
    "text": "basically this slide prometheus a single Prometheus server can get you really far",
    "start": "851160",
    "end": "858240"
  },
  {
    "text": "and we've seen in the in the wild in actual production systems that Prometheus is ingesting over 700,000",
    "start": "858240",
    "end": "866529"
  },
  {
    "text": "samples a second prometheus is capable of doing more we've done this synthetically but this is like one of",
    "start": "866529",
    "end": "873160"
  },
  {
    "text": "the an example in the wild that we've seen that real production in real",
    "start": "873160",
    "end": "881110"
  },
  {
    "text": "production usage usually people then start to split up Prometheus by responsibility so you have one class per",
    "start": "881110",
    "end": "888699"
  },
  {
    "text": "kubernetes cluster or per namespace or something like that and 700,000 samples",
    "start": "888699",
    "end": "894970"
  },
  {
    "text": "per second roughly translates to a 350 node kubernetes cluster that of course",
    "start": "894970",
    "end": "901360"
  },
  {
    "text": "is like a generalization because it depends on which metrics you collect but 350 nodes kubernetes cluster is already",
    "start": "901360",
    "end": "908250"
  },
  {
    "text": "you can already run quite a lot of workload on that and now we see with",
    "start": "908250",
    "end": "914589"
  },
  {
    "text": "we'll hear from Andrew how it how all these features and Prometheus makes make",
    "start": "914589",
    "end": "920110"
  },
  {
    "text": "linker D that much more awesome all right thanks a lot Frederick so yeah",
    "start": "920110",
    "end": "926530"
  },
  {
    "text": "when I'm hoping to use kind of walk through a similar history of how Lincoln he involved there's actually a lot of parallels with a link 31 and then to",
    "start": "926530",
    "end": "934210"
  },
  {
    "text": "evolved along with Prometheus so to give a little bit of a background so link Rd",
    "start": "934210",
    "end": "940450"
  },
  {
    "text": "is an open source service mesh for cloud native applications what what does that mean so service mesh is a term for a",
    "start": "940450",
    "end": "948670"
  },
  {
    "text": "layer of software that provides security reliability and visibility to your micro",
    "start": "948670",
    "end": "953860"
  },
  {
    "text": "service architecture and so there's typically two components of it you have a control plane which is really like the",
    "start": "953860",
    "end": "960730"
  },
  {
    "text": "operational view of what's going on so that's something that's a place where Prometheus would live you collect",
    "start": "960730",
    "end": "966610"
  },
  {
    "text": "metrics it gives you some kind of a user interface either through a dashboard or through like a command-line interface",
    "start": "966610",
    "end": "972910"
  },
  {
    "text": "and it's it's talking to its brian service discovery to your cluster it's also gathering metrics the other side is",
    "start": "972910",
    "end": "979930"
  },
  {
    "text": "the data plane that's typically a proxy that's running as a sidecar next to each of your your pods or your containers in",
    "start": "979930",
    "end": "986830"
  },
  {
    "text": "your your application so back up a little bit and kind of figure out like how did we get here",
    "start": "986830",
    "end": "992800"
  },
  {
    "text": "lincolnís origins go back to Twitter in 2010 at that time it was probably the",
    "start": "992800",
    "end": "1000930"
  },
  {
    "text": "largest rails installation on the planet the summer of 2010 was the World Cup every time Brazil scored a goal everyone",
    "start": "1000930",
    "end": "1008730"
  },
  {
    "text": "we treat go and the site would crash and so we were frantically trying to",
    "start": "1008730",
    "end": "1014790"
  },
  {
    "text": "decompose this thing into micro services and we found that every service kind of needed the same thing it needed security",
    "start": "1014790",
    "end": "1021600"
  },
  {
    "text": "visibility and reliability and so we factored that logic out into a library",
    "start": "1021600",
    "end": "1026790"
  },
  {
    "text": "called finagle it was a scholar library which is still used probably in every micro service at Twitter take over",
    "start": "1026790",
    "end": "1033750"
  },
  {
    "text": "virtually every service and it's a it's gained pretty good acceptance across the community I think even SoundCloud maybe",
    "start": "1033750",
    "end": "1040410"
  },
  {
    "text": "uses it and so it was great we found it very useful the drawback was since it",
    "start": "1040410",
    "end": "1047220"
  },
  {
    "text": "was a Scala library you needed to be writing a Scala application to take advantage of this kind of thing",
    "start": "1047220",
    "end": "1053330"
  },
  {
    "text": "so that was kind of the inspiration for building link or D but link or D 1.0 did",
    "start": "1053330",
    "end": "1058549"
  },
  {
    "text": "is it took this Scala library and wrapped it into a proxy so that any language any framework you could be",
    "start": "1058549",
    "end": "1065299"
  },
  {
    "text": "running locally you could be on ms-dos or kubernetes or whatever you could take advantage of this like service mesh",
    "start": "1065299",
    "end": "1071540"
  },
  {
    "text": "concept and it was agnostic to like what technology you are using so about a few",
    "start": "1071540",
    "end": "1079160"
  },
  {
    "text": "months after we released linker d1 we started getting requests for integration with Prometheus and so we added this",
    "start": "1079160",
    "end": "1086929"
  },
  {
    "text": "endpoint as Fredrik mentioned prometheus is a pull based system so all we had to",
    "start": "1086929",
    "end": "1092090"
  },
  {
    "text": "do is expose this nice little metrics endpoint on linker D and then Prometheus could go around and collect metrics from",
    "start": "1092090",
    "end": "1099559"
  },
  {
    "text": "all the linker D proxies running on your cluster at the time that's kind of all",
    "start": "1099559",
    "end": "1107690"
  },
  {
    "text": "we provided we started building up some examples some kind of reference designs on how do you plug linker D into",
    "start": "1107690",
    "end": "1114440"
  },
  {
    "text": "Prometheus and we realized that those reference designs started getting a lot of attention needed a lot of support and",
    "start": "1114440",
    "end": "1120980"
  },
  {
    "text": "and that that kind of motivates start thinking about a tighter integration between the two and so fast forward to",
    "start": "1120980",
    "end": "1127940"
  },
  {
    "text": "about a year and a half ago and we started thinking about linker d2 and and we kind of made made the jump to do like",
    "start": "1127940",
    "end": "1135650"
  },
  {
    "text": "a complete from the ground up rebuild and I'll walk through a few of the motivations for that one was the",
    "start": "1135650",
    "end": "1141890"
  },
  {
    "text": "communities ecosystem the like excitement around this community is insane like the the crowds in these",
    "start": "1141890",
    "end": "1148130"
  },
  {
    "text": "rooms is is wild and so while linker do one kind of you could run it anywhere",
    "start": "1148130",
    "end": "1154330"
  },
  {
    "text": "that was great but the downside is it made configuring it super complicated you know you had to come up with a",
    "start": "1154330",
    "end": "1161120"
  },
  {
    "text": "pretty complex config file and and it was not like an easy out of the box set it up and go and we're gonna we're gonna",
    "start": "1161120",
    "end": "1167299"
  },
  {
    "text": "see how liquor d2 does that so targeting specifically kubernetes made configuration like orders of magnitude",
    "start": "1167299",
    "end": "1174049"
  },
  {
    "text": "simpler next we wanted to include Prometheus as a first class component so",
    "start": "1174049",
    "end": "1179299"
  },
  {
    "text": "rather than walking people through plugging their into my cardi we'll just give it to you",
    "start": "1179299",
    "end": "1185910"
  },
  {
    "text": "fully integrated if you wanted to bring your own Prometheus you totally could it's all open source but but out of the",
    "start": "1185910",
    "end": "1192540"
  },
  {
    "text": "box we just wanted this stuff to work and we'll see that in a minute to the other pieces were which technologies did",
    "start": "1192540",
    "end": "1198390"
  },
  {
    "text": "we choose Scala served us really well for a long time but you know when you're",
    "start": "1198390",
    "end": "1203880"
  },
  {
    "text": "trying to run a proxy on next to every pod and people are like you know writing little tiny services and go or whatever",
    "start": "1203880",
    "end": "1210060"
  },
  {
    "text": "and they take up 10 megabytes of RAM and we're asking you to install like a a JVM",
    "start": "1210060",
    "end": "1215610"
  },
  {
    "text": "process that requires two hundred Meg's of RAM to run right next to it that's not really acceptable so for the control",
    "start": "1215610",
    "end": "1222690"
  },
  {
    "text": "plane working in the kubernetes ecosystem go seem like a natural choice the the community there's there's a lot",
    "start": "1222690",
    "end": "1228390"
  },
  {
    "text": "going on and it plugs really nicely into to all the kubernetes cooling on the the",
    "start": "1228390",
    "end": "1234570"
  },
  {
    "text": "proxy side we made a bit of a bet and we went with rust because we wanted that",
    "start": "1234570",
    "end": "1239790"
  },
  {
    "text": "native performance but we also wanted kind of the the safety that we were used to from Scala as I say it was a little",
    "start": "1239790",
    "end": "1246810"
  },
  {
    "text": "bit about it a little bit of a bed a couple of years ago but I think it's proved out pretty well we've gotten great community support and we've even",
    "start": "1246810",
    "end": "1254730"
  },
  {
    "text": "hired some of the members of the community and to work on libraries that help support the link or D proxy so just",
    "start": "1254730",
    "end": "1262050"
  },
  {
    "text": "super high-level overview of how it works this is kind of that same diagram you saw a minute ago with a control",
    "start": "1262050",
    "end": "1267630"
  },
  {
    "text": "plane and a data plane and you've got your your linker D controller that's the go side talking to kubernetes very",
    "start": "1267630",
    "end": "1273780"
  },
  {
    "text": "similar to how Prometheus works it's getting all the service discovery information it's telling the proxies",
    "start": "1273780",
    "end": "1278970"
  },
  {
    "text": "where all of the pods are and then next to every pod in your in your cluster you've got a little linker D proxy",
    "start": "1278970",
    "end": "1285480"
  },
  {
    "text": "running and that thing knows how to intelligently route to different pods in",
    "start": "1285480",
    "end": "1291390"
  },
  {
    "text": "your cluster so this is a really similar pattern as I said Prometheus is a first",
    "start": "1291390",
    "end": "1297630"
  },
  {
    "text": "class component of linker d2 it's set up to also listen to kubernetes while",
    "start": "1297630",
    "end": "1303150"
  },
  {
    "text": "linker D is doing routing information based on what kerbin is telling you Prometheus is doing collection as Frederick mentions so it goes and asks",
    "start": "1303150",
    "end": "1310050"
  },
  {
    "text": "kubernetes where is every linker see running and then it goes out and it collects data from every link your new",
    "start": "1310050",
    "end": "1315289"
  },
  {
    "text": "proxy and lets us roll up that information and because that proxy is responsible for every request in and out",
    "start": "1315289",
    "end": "1321499"
  },
  {
    "text": "of all of your applications you can get everything from request load latency success rate you know link reduce",
    "start": "1321499",
    "end": "1328070"
  },
  {
    "text": "protocol aware so you can you can get things that are HTTP or HTTP specific or",
    "start": "1328070",
    "end": "1333740"
  },
  {
    "text": "G RPC or whatever you're using a little bit more if you just want to introspect",
    "start": "1333740",
    "end": "1338779"
  },
  {
    "text": "the the metrics themselves we also include agra fauna that was another",
    "start": "1338779",
    "end": "1343940"
  },
  {
    "text": "lesson like people kind of wandered all of this stuff integrated together so if you're familiar with using ver fauna and Prometheus like if you install link",
    "start": "1343940",
    "end": "1350509"
  },
  {
    "text": "order you will feel right at home right away that stuff will work out of the box and then to administer that control plane we also include a CLI and a",
    "start": "1350509",
    "end": "1357710"
  },
  {
    "text": "dashboard and we'll kind of run through some of those tools in in a moment so",
    "start": "1357710",
    "end": "1362749"
  },
  {
    "text": "I'm gonna attempt a bit of a demo we got a really basic app native three micro services its intended for managing your",
    "start": "1362749",
    "end": "1369830"
  },
  {
    "text": "bookshelf so you've got a front-end web app and you've got an book service behind it an author service behind it also they're talking to on my sequel",
    "start": "1369830",
    "end": "1376190"
  },
  {
    "text": "database each of the three micro services has three replicas and we'll",
    "start": "1376190",
    "end": "1381230"
  },
  {
    "text": "kind of see how how they all interact we've got a traffic server that or a traffic like instance that just is meant",
    "start": "1381230",
    "end": "1388159"
  },
  {
    "text": "to you know put load on the system just to make the data interesting we'll also look at the books app from a browser and",
    "start": "1388159",
    "end": "1393259"
  },
  {
    "text": "make sure everything's working and then we'll also deploy like kind of a chaos monkey script that'll start tearing it",
    "start": "1393259",
    "end": "1399110"
  },
  {
    "text": "all down and kind of demonstrate how link ID and Prometheus handle that you",
    "start": "1399110",
    "end": "1405470"
  },
  {
    "text": "know Frederick was was mentioning churn and you're in this orchestra environment things are coming up and down how do",
    "start": "1405470",
    "end": "1411200"
  },
  {
    "text": "these tools perform when that's all going on so the first thing I'm gonna do",
    "start": "1411200",
    "end": "1416659"
  },
  {
    "text": "is deploy a my books app",
    "start": "1416659",
    "end": "1421659"
  },
  {
    "text": "so if that all went right I'm spinning",
    "start": "1425919",
    "end": "1431150"
  },
  {
    "text": "up nine pods plus like something for my sequel plus a traffic server so we're",
    "start": "1431150",
    "end": "1436460"
  },
  {
    "text": "just going to take a pic to peek at it really quick",
    "start": "1436460",
    "end": "1440230"
  },
  {
    "text": "okay so here's our books app pretty simple you can click on books you can click on authors you can edit things you",
    "start": "1450920",
    "end": "1457580"
  },
  {
    "text": "know pretty basic stuff shoutout to NK jemisin just season good book so that's that's kind of that now",
    "start": "1457580",
    "end": "1466910"
  },
  {
    "text": "we're gonna do a quick install of the control plane as I said like linker t1 was super complicated to set up when I",
    "start": "1466910",
    "end": "1473000"
  },
  {
    "text": "want to install link or d2 I should have mentioned I'm using a linker D to CLI that I've installed if you're familiar",
    "start": "1473000",
    "end": "1479360"
  },
  {
    "text": "with KU cuddle you'll feel right at home it's got tab completion it's got a bunch of commands you interact with kubernetes",
    "start": "1479360",
    "end": "1485000"
  },
  {
    "text": "objects the same way you would with KU cuddle so if I want to install it I just run linker D install and I pipe that",
    "start": "1485000",
    "end": "1491390"
  },
  {
    "text": "into kubernetes and if you want to kind of get a look at like what that's doing",
    "start": "1491390",
    "end": "1497150"
  },
  {
    "text": "you can just type linker to install and you can see this is the the ammo for the the control plane and if I wanted to",
    "start": "1497150",
    "end": "1502850"
  },
  {
    "text": "look at the different options you can separately there's same defaults and all of that but of course like it's super",
    "start": "1502850",
    "end": "1508160"
  },
  {
    "text": "configurable if you wanted to set different ports or edit the ammo yourself like you're totally free to do",
    "start": "1508160",
    "end": "1513530"
  },
  {
    "text": "that so if we kind of wanted to look at all the components everything that's installed into a linker D namespace so",
    "start": "1513530",
    "end": "1521240"
  },
  {
    "text": "you can kind of see everything that we just put on you can see the the four components of the control plane we've",
    "start": "1521240",
    "end": "1526400"
  },
  {
    "text": "got our controller ver fond of Prometheus and our front-end web dashboard which I'll show you in a minute and if I want to make sure",
    "start": "1526400",
    "end": "1533120"
  },
  {
    "text": "they're everything came up correctly we've got a check command that that you know boots up and checks that all of the",
    "start": "1533120",
    "end": "1539990"
  },
  {
    "text": "different components of linker D are up and running so if you install anchor D and something's weird this is the first thing we will tell you",
    "start": "1539990",
    "end": "1546380"
  },
  {
    "text": "to run and it should give you a nice little report on what's going on so we're good so next up I want to show you",
    "start": "1546380",
    "end": "1554000"
  },
  {
    "text": "the Prometheus that's inside the the linker D namespace so let's take a look",
    "start": "1554000",
    "end": "1560570"
  },
  {
    "text": "at that word service thinker de Deus so",
    "start": "1560570",
    "end": "1569540"
  },
  {
    "text": "for those familiar with Prometheus this is you know you should recognize this the interesting part is how Prometheus",
    "start": "1569540",
    "end": "1576350"
  },
  {
    "text": "is configured to collect metrics the two jobs I I want to point out are the",
    "start": "1576350",
    "end": "1581660"
  },
  {
    "text": "linker view controller those are control playing like like go components that were collecting metrics",
    "start": "1581660",
    "end": "1587680"
  },
  {
    "text": "from but more importantly we're collecting from the linker the proxies that are running inside the control",
    "start": "1587680",
    "end": "1593860"
  },
  {
    "text": "planes so we use linker D in linker D we have all of these Rus proxies that are",
    "start": "1593860",
    "end": "1599020"
  },
  {
    "text": "running in inside the control plane itself as you start to deploy linker D",
    "start": "1599020",
    "end": "1604270"
  },
  {
    "text": "into your apps that list will grow and you'll see Prometheus start to pick up the proxies running in each of your apps",
    "start": "1604270",
    "end": "1612000"
  },
  {
    "text": "so now I want to show you the the linker D dashboard just to kind of give you can do all of this from the command line but",
    "start": "1612000",
    "end": "1618580"
  },
  {
    "text": "it's also nice to just kind of be able to browse around and see all the information so you can see here we're",
    "start": "1618580",
    "end": "1624370"
  },
  {
    "text": "getting metrics on the control point components and this is the same way that you would get metrics on your your own",
    "start": "1624370",
    "end": "1629740"
  },
  {
    "text": "app which you'll see in a minute when I inject into the book so as I mentioned before if you just want to use grow",
    "start": "1629740",
    "end": "1635860"
  },
  {
    "text": "fauna and talk directly to Prometheus and click around and see things like success rate request rate latency it's",
    "start": "1635860",
    "end": "1642310"
  },
  {
    "text": "all here and we'll dig into this a little bit more but yeah but kind of the",
    "start": "1642310",
    "end": "1647380"
  },
  {
    "text": "point was like this this all comes up like you know with without a lot of setup so the next thing we're gonna do",
    "start": "1647380",
    "end": "1652990"
  },
  {
    "text": "is we're going to inject linker D proxies into the books app so let's just",
    "start": "1652990",
    "end": "1658720"
  },
  {
    "text": "kind of make sure that the books app is still here I can still click on it it's still running nothing up my sleeve so",
    "start": "1658720",
    "end": "1665280"
  },
  {
    "text": "we're going to take that books app llamo",
    "start": "1665280",
    "end": "1670660"
  },
  {
    "text": "that we had before and we're gonna pipe it into a linker D inject command and all that's going to do and then we'll",
    "start": "1670660",
    "end": "1677680"
  },
  {
    "text": "pipe that into kubernetes and if I kind of want to look at what just happened it took our application llamo and injected",
    "start": "1677680",
    "end": "1684340"
  },
  {
    "text": "several Rus proxies into it the app if we did this right didn't should not have gone down you'll",
    "start": "1684340",
    "end": "1692800"
  },
  {
    "text": "see some pods are spinning up other pods are coming down but the app should continue to work without without issues",
    "start": "1692800",
    "end": "1699610"
  },
  {
    "text": "so I I can refresh it I can still click around and everything continues to work",
    "start": "1699610",
    "end": "1705210"
  },
  {
    "text": "so if I go back to my dashboard if if if things works as expected I should start",
    "start": "1705210",
    "end": "1713080"
  },
  {
    "text": "to see some to lemon information of that of the books app",
    "start": "1713080",
    "end": "1718980"
  },
  {
    "text": "that I that I just deployed and you can see we're already getting success rate request rate latency all of that stuff",
    "start": "1718980",
    "end": "1724860"
  },
  {
    "text": "and I can click into like a graph on a dashboard again and see all of the same information for this book service so if",
    "start": "1724860",
    "end": "1732450"
  },
  {
    "text": "you take away nothing else from this talk in addition to this 700,000 requests per second for Prometheus no of",
    "start": "1732450",
    "end": "1739260"
  },
  {
    "text": "it like without changing your app at all you can run a link or D in jet command and get metrics like this for free",
    "start": "1739260",
    "end": "1744960"
  },
  {
    "text": "without doing a single thing you don't have to tear down we've specifically targeted link or D to run in in a number",
    "start": "1744960",
    "end": "1751080"
  },
  {
    "text": "of different environments so even if you're not a cluster operator you can't even create namespaces you can still install linker D and inject it into like",
    "start": "1751080",
    "end": "1758309"
  },
  {
    "text": "your own namespace that you have control over to dig into a little more data if I",
    "start": "1758309",
    "end": "1764760"
  },
  {
    "text": "wanted to look at stats for all of all the things that are running here's my",
    "start": "1764760",
    "end": "1771029"
  },
  {
    "text": "different deployments in the books app I can also do it over namespaces again if you've used q petal you'll recognize all",
    "start": "1771029",
    "end": "1777389"
  },
  {
    "text": "of these if I wanted to filter from one deployment to a from maybe all",
    "start": "1777389",
    "end": "1782820"
  },
  {
    "text": "deployments into let's say the author service I can do that too so again really we try to make these patterns",
    "start": "1782820",
    "end": "1788940"
  },
  {
    "text": "very familiar we also have a tap command that allows you to tap into every",
    "start": "1788940",
    "end": "1794279"
  },
  {
    "text": "request that's running through the system this isn't like tailing a log this activates the G RPC connection and",
    "start": "1794279",
    "end": "1799649"
  },
  {
    "text": "starts streaming data from the proxies dynamically so it's only doing work when you're running the tap command you can",
    "start": "1799649",
    "end": "1804720"
  },
  {
    "text": "obviously filter this a bunch of different ways to kind of identify requests that are that are flowing",
    "start": "1804720",
    "end": "1809940"
  },
  {
    "text": "through your system if you want a slightly more rolled up version we have a top command that'll give you it's a",
    "start": "1809940",
    "end": "1815639"
  },
  {
    "text": "lot like top on your laptop and it's like a top for my per services so it shows all of the requests that are that",
    "start": "1815639",
    "end": "1821700"
  },
  {
    "text": "are flowing through but in a rolled up way now Frederic mentioned earlier the the cardinality issued from you piece it",
    "start": "1821700",
    "end": "1828269"
  },
  {
    "text": "can ingest a ton of stuff but it's not really appropriate to to abuse it as far",
    "start": "1828269",
    "end": "1833669"
  },
  {
    "text": "as putting a lot of different time series into it you can see here like in",
    "start": "1833669",
    "end": "1839039"
  },
  {
    "text": "this list some of the requests we're seeing of path information and a URL that includes like author slash 168 JSON",
    "start": "1839039",
    "end": "1846929"
  },
  {
    "text": "like that's not really appropriate you have thousands or millions of objects in your database and you it",
    "start": "1846929",
    "end": "1852549"
  },
  {
    "text": "would it wouldn't be right to like record metrics for each one of those so we need a way to kind of roll that up",
    "start": "1852549",
    "end": "1857590"
  },
  {
    "text": "and I should kind of jump back and say like the motivation for this talk started in a in a tweet almost a year",
    "start": "1857590",
    "end": "1865720"
  },
  {
    "text": "ago when we announced like kind of our first beta version of linker d2 at the time we call it conduit and Fred worked",
    "start": "1865720",
    "end": "1872980"
  },
  {
    "text": "very politely replied and said I'd like to talk to you all about your your",
    "start": "1872980",
    "end": "1878020"
  },
  {
    "text": "linker D story and and he's really provided some awesome guidance on kind",
    "start": "1878020",
    "end": "1883179"
  },
  {
    "text": "of creating best practices integration with prometheus so part of what came out of that was",
    "start": "1883179",
    "end": "1890610"
  },
  {
    "text": "fixing that cardinality problem so that we can kind of get metrics in a you know well",
    "start": "1890610",
    "end": "1896049"
  },
  {
    "text": "rolled up way so inside my books app I've also got a bunch of swagger",
    "start": "1896049",
    "end": "1902080"
  },
  {
    "text": "documents that describe the api's of",
    "start": "1902080",
    "end": "1907450"
  },
  {
    "text": "each service and with a new linker D profile command that we've recently",
    "start": "1907450",
    "end": "1912940"
  },
  {
    "text": "added I can convert that swagger",
    "start": "1912940",
    "end": "1920169"
  },
  {
    "text": "document into a CRD the linker D understands and then pipe that into cout cuddle I'm gonna run another command",
    "start": "1920169",
    "end": "1927880"
  },
  {
    "text": "over here just to kind of demonstrate what's going on as I'm deploying these these CR DS all right cool",
    "start": "1927880",
    "end": "1937980"
  },
  {
    "text": "so there's a swagger document for the books the author service I'm gonna do it for books and for the web app",
    "start": "1943440",
    "end": "1956840"
  },
  {
    "text": "okay so we already see that our metrics are starting to get rolled up in a way that is aware of our API is which you",
    "start": "1961090",
    "end": "1969320"
  },
  {
    "text": "can get here you can get if I jump over to the linker D dashboard I should be able to drill into you know the",
    "start": "1969320",
    "end": "1975650"
  },
  {
    "text": "deployment of my author service I can kind of see what's calling it what it's calling here's kind of the exploded view",
    "start": "1975650",
    "end": "1981650"
  },
  {
    "text": "of all the requests but then here's the nice rolled-up view that's again aware of like the design of my API if you",
    "start": "1981650",
    "end": "1989300"
  },
  {
    "text": "don't have swagger documents you can define these here IDs yourselves it's it's pretty flexible the last thing I'm",
    "start": "1989300",
    "end": "1995390"
  },
  {
    "text": "going to deploy is a chaos monkey script so so this is going to I mentioned we",
    "start": "1995390",
    "end": "2007360"
  },
  {
    "text": "have three services with three replicas each that's nine pods this thing is going to randomly pick a pod every 10",
    "start": "2007360",
    "end": "2014710"
  },
  {
    "text": "seconds and terror and just tear it down so you'll start seeing the pods bounce up and down and kind of the point in how",
    "start": "2014710",
    "end": "2021670"
  },
  {
    "text": "linker D and Prometheus integrate with kubernetes is that because they're getting real-time information from from",
    "start": "2021670",
    "end": "2030400"
  },
  {
    "text": "kubernetes your your applications should continue to work okay and your metrics",
    "start": "2030400",
    "end": "2035740"
  },
  {
    "text": "information will continue to be like would be continuous correct and",
    "start": "2035740",
    "end": "2040840"
  },
  {
    "text": "real-time like as as Frederic mentioned having like a five-minute timeout when your your pods go away isn't really it's",
    "start": "2040840",
    "end": "2048970"
  },
  {
    "text": "it's much better model found no out of the box you know when things are bouncing up and down and still get",
    "start": "2048970",
    "end": "2055120"
  },
  {
    "text": "consistent metrics across that so quick",
    "start": "2055120",
    "end": "2060250"
  },
  {
    "text": "shout out to oh sorry I just wanted to call out really quickly",
    "start": "2060250",
    "end": "2066310"
  },
  {
    "text": "all the things we just did and hello",
    "start": "2066310",
    "end": "2071408"
  },
  {
    "text": "computer ok we're gonna look at it like this so I ran a linker the install",
    "start": "2071409",
    "end": "2077200"
  },
  {
    "text": "command to install the control plane I ran in and Jack come and iddin change the app at all we use stat and top to",
    "start": "2077200",
    "end": "2082898"
  },
  {
    "text": "kind of get the information about about what's going on we ran a dashboard command to give kind of a high-level",
    "start": "2082899",
    "end": "2088810"
  },
  {
    "text": "browsing over we looked at four Fano and Prometheus we ran a profile command to take advantage",
    "start": "2088810",
    "end": "2093879"
  },
  {
    "text": "of Swagger and we ran a routes command that gave us API aware statistics about",
    "start": "2093880",
    "end": "2099580"
  },
  {
    "text": "our about our application so again quick shout-out to the linker D community it's",
    "start": "2099580",
    "end": "2105460"
  },
  {
    "text": "been in production for for over two years now we've had over 100 contributors there's 2,500 people in our",
    "start": "2105460",
    "end": "2110950"
  },
  {
    "text": "slack Channel please come and join ask us questions there ask us questions and our booth all that stuff so on behalf of Fredrik and I",
    "start": "2110950",
    "end": "2118540"
  },
  {
    "text": "think thank you all so much",
    "start": "2118540",
    "end": "2121440"
  },
  {
    "text": "questions do we have time for questions okay there's one question",
    "start": "2128220",
    "end": "2136079"
  },
  {
    "text": "so good question sorry yeah the question was can you get things like like OS and",
    "start": "2147850",
    "end": "2154000"
  },
  {
    "text": "container level information you can do that with with Prometheus and Griffin oh",
    "start": "2154000",
    "end": "2159610"
  },
  {
    "text": "that's part of one career you could install it separately yourself Lincoln is really concerned with the",
    "start": "2159610",
    "end": "2165010"
  },
  {
    "text": "request level metrics but we have variations of link Rd that have Prometheus configured to gather that",
    "start": "2165010",
    "end": "2171730"
  },
  {
    "text": "kind of information and that's totally something that you could take that link or D install yeah Moe and edit yourself",
    "start": "2171730",
    "end": "2176920"
  },
  {
    "text": "if you wanted to I think it would be up to you whether you wanted to do that in the observability stack that's in linker",
    "start": "2176920",
    "end": "2183490"
  },
  {
    "text": "D or you could do it in kind of your own stack it's it's really your choice sorry",
    "start": "2183490",
    "end": "2196120"
  },
  {
    "text": "it's a very yeah",
    "start": "2196120",
    "end": "2200730"
  },
  {
    "text": "yes so the question was can Lincoln II kind of be your one-stop shop for TLS yes we have when I ran that install",
    "start": "2204070",
    "end": "2210730"
  },
  {
    "text": "command there are flags to turn on TLS which will use TLS between all of the",
    "start": "2210730",
    "end": "2217390"
  },
  {
    "text": "proxies we're working on things like ingress that's coming soon and working on including like like a full CA so it's",
    "start": "2217390",
    "end": "2224830"
  },
  {
    "text": "kind of in progress right now but you can try it out if you download the latest version of liquor D right now yeah go ahead",
    "start": "2224830",
    "end": "2233609"
  },
  {
    "text": "great question so the question was do you get Zipkin so the linker d1",
    "start": "2240690",
    "end": "2246030"
  },
  {
    "text": "supported Zipkin linker d2 we we decided to drop support for we felt that we",
    "start": "2246030",
    "end": "2251830"
  },
  {
    "text": "could get like about 90% of the benefits of tracing by just having metrics about",
    "start": "2251830",
    "end": "2257680"
  },
  {
    "text": "what's calling what we can kind of build your call graph and and give you tracing",
    "start": "2257680",
    "end": "2262930"
  },
  {
    "text": "like information but if you really need something like what Zipkin does where you get a request and you need to see",
    "start": "2262930",
    "end": "2268810"
  },
  {
    "text": "that request transit through all your micro services you'll need to configure a Zipkin separately to do that",
    "start": "2268810",
    "end": "2276720"
  },
  {
    "text": "[Music] right so you can you can deploy the",
    "start": "2290670",
    "end": "2297460"
  },
  {
    "text": "control plane with a flag that says how many replicas of each component you want so that number like depends on on all",
    "start": "2297460",
    "end": "2304840"
  },
  {
    "text": "kinds of like performance but it's it's designed to run in an H a configuration",
    "start": "2304840",
    "end": "2310150"
  },
  {
    "text": "so if you if you encounter performance problems with the control plane you can",
    "start": "2310150",
    "end": "2315370"
  },
  {
    "text": "just scale up that replica account to accommodate your cluster okay that's a",
    "start": "2315370",
    "end": "2340180"
  },
  {
    "text": "good question so it the questions around how could I split up my linker DS if I have certain set of concerns for a group",
    "start": "2340180",
    "end": "2347410"
  },
  {
    "text": "of applications over here and another over here when you run that link or the install command and the inject command",
    "start": "2347410",
    "end": "2352570"
  },
  {
    "text": "you can specify which namespace you want to be concerned with so you can deploy n",
    "start": "2352570",
    "end": "2358570"
  },
  {
    "text": "number of completely independent linker DS in different namespaces and when you go to inject a proxy you can decide",
    "start": "2358570",
    "end": "2365260"
  },
  {
    "text": "which link Rd you want that proxy associated with and then when you're seeing these dashboards and all those those metrics they'll be totally",
    "start": "2365260",
    "end": "2371500"
  },
  {
    "text": "separate",
    "start": "2371500",
    "end": "2373980"
  },
  {
    "text": "for the most part we've configured Prometheus to to work very specifically",
    "start": "2385870",
    "end": "2391520"
  },
  {
    "text": "for link or DS use case we don't hold on to metrics for very long so generally we",
    "start": "2391520",
    "end": "2396710"
  },
  {
    "text": "would say for as far as linker these metrics are concerned you can run that Prometheus like part of part of linker D",
    "start": "2396710",
    "end": "2404420"
  },
  {
    "text": "if you wanted to run it it's your own you totally can we haven't documentation on our website on how to do that so I",
    "start": "2404420",
    "end": "2410780"
  },
  {
    "text": "saw you sure sorry say that again",
    "start": "2410780",
    "end": "2420580"
  },
  {
    "text": "so the question was is there like an integration story with the Prometheus operator so for the most part yes the",
    "start": "2424329",
    "end": "2433900"
  },
  {
    "text": "specific configuration that link Rd ships out of the box uses the vanilla",
    "start": "2433900",
    "end": "2439779"
  },
  {
    "text": "current prometheus configuration but there's nothing stopping you from using",
    "start": "2439779",
    "end": "2445150"
  },
  {
    "text": "the Prometheus operators here these two model the same thing it's just not default sorry right you could as as",
    "start": "2445150",
    "end": "2458980"
  },
  {
    "text": "Andrew said that you can totally run your own Prometheus and that could be through the Prometheus operator to be",
    "start": "2458980",
    "end": "2465160"
  },
  {
    "text": "used by link or D I mean at the point",
    "start": "2465160",
    "end": "2472480"
  },
  {
    "text": "where you run your sorry the question was can can you use Federation in that kind of setup at the point where you run",
    "start": "2472480",
    "end": "2479859"
  },
  {
    "text": "your own Prometheus you can do whatever you want right like the only the only",
    "start": "2479859",
    "end": "2485349"
  },
  {
    "text": "thing you need to be careful about is that you basically use the configuration that link Reddy uses and then you can do",
    "start": "2485349",
    "end": "2492519"
  },
  {
    "text": "things like charting based on that configuration which is something that Prometheus supports and then you can do",
    "start": "2492519",
    "end": "2498670"
  },
  {
    "text": "Federation or you can use something like tunnels for horizontally scaling everything yeah that all that is totally",
    "start": "2498670",
    "end": "2504970"
  },
  {
    "text": "possible [Applause]",
    "start": "2504970",
    "end": "2510630"
  },
  {
    "text": "rejected a site disability policy yes",
    "start": "2510630",
    "end": "2517019"
  },
  {
    "text": "[Applause] yep okay so the question was someone",
    "start": "2523280",
    "end": "2529009"
  },
  {
    "text": "astutely noticed that one of the containers we inject with the proxy requires in that admin privileges what's",
    "start": "2529009",
    "end": "2535819"
  },
  {
    "text": "going on there is we have two pods one is the proxy itself the other is in a",
    "start": "2535819",
    "end": "2540950"
  },
  {
    "text": "container those knit containers are changing IP tables to to manage that we have an open ticket right now in the",
    "start": "2540950",
    "end": "2547880"
  },
  {
    "text": "link or D repo to support inject without a net admin privilege I don't have all",
    "start": "2547880",
    "end": "2554630"
  },
  {
    "text": "the details for it but it sits in the repo it's open source right now you can take a look and if you have particular requirements like search or net admin in",
    "start": "2554630",
    "end": "2561920"
  },
  {
    "text": "the repo like and comment on the ticket please",
    "start": "2561920",
    "end": "2566589"
  },
  {
    "text": "probably see instead of like cypher patterns like like",
    "start": "2574329",
    "end": "2580359"
  },
  {
    "text": "so so the question was have we looked at configurations of linker D that run kind",
    "start": "2585400",
    "end": "2590990"
  },
  {
    "text": "of per node rather than as a sidecar that's it's it's interesting like linker D one that was kind of our default",
    "start": "2590990",
    "end": "2597260"
  },
  {
    "text": "pattern and so it's something you you could configure link or D to to do we",
    "start": "2597260",
    "end": "2603290"
  },
  {
    "text": "don't have a lot of reference designs on how but it is something that we're looking at so everything you saw online",
    "start": "2603290",
    "end": "2613400"
  },
  {
    "text": "is is available in open source so obviously like linker DS is totally open",
    "start": "2613400",
    "end": "2618620"
  },
  {
    "text": "source you can see all of it we have a linker the examples repo that shows alive the examples I was working through and if you just look for like buoyant",
    "start": "2618620",
    "end": "2625490"
  },
  {
    "text": "books app you're gonna find that the books demo you could run through everything we just did",
    "start": "2625490",
    "end": "2630550"
  },
  {
    "text": "yeah totally this was all like self-contained crew manatees on the laptop",
    "start": "2630550",
    "end": "2636760"
  },
  {
    "text": "[Music]",
    "start": "2645620",
    "end": "2648760"
  },
  {
    "text": "yeah so the question is - is Winker de to support network policies it does not today it's on our roadmap and it's a 4/4",
    "start": "2653619",
    "end": "2665510"
  },
  {
    "text": "now yes it's definitely something we wanted to support we just we very intentionally been releasing a smaller",
    "start": "2665510",
    "end": "2671299"
  },
  {
    "text": "set of features and trying to get those production ready and then expand but that's that's on a short list we reduce",
    "start": "2671299",
    "end": "2682700"
  },
  {
    "text": "we do support ALS connections between between the proxies so you can turn that on but it's we have a lot more work to",
    "start": "2682700",
    "end": "2689450"
  },
  {
    "text": "do there particularly for ingress so again there's probably open tickets in the link of the repo - - like we're",
    "start": "2689450",
    "end": "2696680"
  },
  {
    "text": "gathering requirements for right now so please please take a look in there yeah",
    "start": "2696680",
    "end": "2702910"
  },
  {
    "text": "yeah",
    "start": "2708849",
    "end": "2711420"
  },
  {
    "text": "I don't I know we have there is some like helm charts out there that support",
    "start": "2716650",
    "end": "2721990"
  },
  {
    "text": "installing linker d2 I believe I haven't worked on them but if there's an open ticket I definitely recommend",
    "start": "2721990",
    "end": "2728800"
  },
  {
    "text": "commenting on it it's something we do want to support is kind of a first-class way to install it that's right yeah",
    "start": "2728800",
    "end": "2744610"
  },
  {
    "text": "they're an we similar similar issue we've recently added a community member",
    "start": "2744610",
    "end": "2750040"
  },
  {
    "text": "added audio injection capability so you can install your control plane like through through helm and then set",
    "start": "2750040",
    "end": "2756790"
  },
  {
    "text": "everything to be auto injected and then anytime you deploy an app it gets proxies for free yeah okay thank you",
    "start": "2756790",
    "end": "2768660"
  }
]