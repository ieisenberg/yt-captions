[
  {
    "text": "welcome to Json web tokens understanding",
    "start": "0",
    "end": "3000"
  },
  {
    "text": "common pitfalls my name is Bruce",
    "start": "3000",
    "end": "6660"
  },
  {
    "text": "you may recognize me from the show floor",
    "start": "6660",
    "end": "8940"
  },
  {
    "text": "as the guy that's overly",
    "start": "8940",
    "end": "10860"
  },
  {
    "text": "enthusiastically handing out info",
    "start": "10860",
    "end": "12540"
  },
  {
    "text": "stickers I'm actually a software",
    "start": "12540",
    "end": "15599"
  },
  {
    "text": "developer my background is in web",
    "start": "15599",
    "end": "17940"
  },
  {
    "text": "development application security and",
    "start": "17940",
    "end": "21180"
  },
  {
    "text": "access management so in those roles I've",
    "start": "21180",
    "end": "24660"
  },
  {
    "text": "spent a lot of time reading",
    "start": "24660",
    "end": "25939"
  },
  {
    "text": "specifications for the web",
    "start": "25939",
    "end": "28019"
  },
  {
    "text": "such as the Json web token RFC",
    "start": "28019",
    "end": "31500"
  },
  {
    "text": "and uh today I hope to distill some of",
    "start": "31500",
    "end": "34200"
  },
  {
    "text": "that knowledge and uh",
    "start": "34200",
    "end": "36540"
  },
  {
    "text": "bring it to you",
    "start": "36540",
    "end": "39320"
  },
  {
    "text": "so this is a 101 track lecture which",
    "start": "39840",
    "end": "42480"
  },
  {
    "text": "means I'd like to start from a base",
    "start": "42480",
    "end": "44219"
  },
  {
    "text": "foundational knowledge to get us all on",
    "start": "44219",
    "end": "45960"
  },
  {
    "text": "the same page first but if you've worked",
    "start": "45960",
    "end": "48059"
  },
  {
    "text": "with Json web tokens before then this",
    "start": "48059",
    "end": "50820"
  },
  {
    "text": "might be a good review Once you have",
    "start": "50820",
    "end": "52680"
  },
  {
    "text": "them implemented you generally just",
    "start": "52680",
    "end": "54300"
  },
  {
    "text": "start relying on them and trusting that",
    "start": "54300",
    "end": "55920"
  },
  {
    "text": "they're working as expected so this",
    "start": "55920",
    "end": "58440"
  },
  {
    "text": "might also give you a way to go back and",
    "start": "58440",
    "end": "60420"
  },
  {
    "text": "make sure that you're actually using",
    "start": "60420",
    "end": "61500"
  },
  {
    "text": "Json web tokens securely",
    "start": "61500",
    "end": "63600"
  },
  {
    "text": "uh starting from the base uh we're going",
    "start": "63600",
    "end": "66659"
  },
  {
    "text": "to be going over a Json web token format",
    "start": "66659",
    "end": "68460"
  },
  {
    "text": "so what they actually look like and",
    "start": "68460",
    "end": "70260"
  },
  {
    "text": "what's inside of them along with how",
    "start": "70260",
    "end": "72299"
  },
  {
    "text": "they're actually used",
    "start": "72299",
    "end": "73740"
  },
  {
    "text": "then we're going to move on to signing",
    "start": "73740",
    "end": "76260"
  },
  {
    "text": "Json web tokens this is the key",
    "start": "76260",
    "end": "79140"
  },
  {
    "text": "infinitive information that I want to",
    "start": "79140",
    "end": "80640"
  },
  {
    "text": "make sure everybody can get on the same",
    "start": "80640",
    "end": "82140"
  },
  {
    "text": "page for because the signature is the",
    "start": "82140",
    "end": "85080"
  },
  {
    "text": "key to security for the Json web token",
    "start": "85080",
    "end": "87659"
  },
  {
    "text": "if your signature invalidation is not",
    "start": "87659",
    "end": "90540"
  },
  {
    "text": "good then",
    "start": "90540",
    "end": "92640"
  },
  {
    "text": "uh pretty much",
    "start": "92640",
    "end": "95880"
  },
  {
    "text": "all bets are off",
    "start": "95880",
    "end": "97560"
  },
  {
    "text": "anybody can tell anything to your",
    "start": "97560",
    "end": "99840"
  },
  {
    "text": "applications and they will trust those",
    "start": "99840",
    "end": "101579"
  },
  {
    "text": "tokens",
    "start": "101579",
    "end": "102659"
  },
  {
    "text": "the signature is important because",
    "start": "102659",
    "end": "104640"
  },
  {
    "text": "there's information encoded in the Json",
    "start": "104640",
    "end": "107040"
  },
  {
    "text": "web token that whoever is receiving the",
    "start": "107040",
    "end": "109500"
  },
  {
    "text": "token will look at and take us true",
    "start": "109500",
    "end": "111299"
  },
  {
    "text": "based off of this signature",
    "start": "111299",
    "end": "113640"
  },
  {
    "text": "and then finally once we understand that",
    "start": "113640",
    "end": "115860"
  },
  {
    "text": "signature then we'll move on to the",
    "start": "115860",
    "end": "118259"
  },
  {
    "text": "security and common attacks on Json web",
    "start": "118259",
    "end": "120420"
  },
  {
    "text": "tokens",
    "start": "120420",
    "end": "121860"
  },
  {
    "text": "by the end of this talk you should be",
    "start": "121860",
    "end": "124020"
  },
  {
    "text": "able to accept Json web tokens create",
    "start": "124020",
    "end": "126240"
  },
  {
    "text": "Json web tokens validate them and",
    "start": "126240",
    "end": "129239"
  },
  {
    "text": "identify some common vulnerabilities",
    "start": "129239",
    "end": "133220"
  },
  {
    "text": "I like to start things off with some",
    "start": "134819",
    "end": "136800"
  },
  {
    "text": "real world analogies before we actually",
    "start": "136800",
    "end": "138420"
  },
  {
    "text": "dig down into the technical details",
    "start": "138420",
    "end": "140700"
  },
  {
    "text": "anybody here actually go to the bar last",
    "start": "140700",
    "end": "143099"
  },
  {
    "text": "night after the conference I know I did",
    "start": "143099",
    "end": "145560"
  },
  {
    "text": "and the first thing that happened when I",
    "start": "145560",
    "end": "148379"
  },
  {
    "text": "went to the bar I guess I have a",
    "start": "148379",
    "end": "149760"
  },
  {
    "text": "youthful glow is they asked for my ID",
    "start": "149760",
    "end": "152879"
  },
  {
    "text": "so I produced this government ID and",
    "start": "152879",
    "end": "155160"
  },
  {
    "text": "gave it to the bartender",
    "start": "155160",
    "end": "156660"
  },
  {
    "text": "the first thing the bartender did was",
    "start": "156660",
    "end": "158340"
  },
  {
    "text": "look to see that the ID was valid issued",
    "start": "158340",
    "end": "160620"
  },
  {
    "text": "by somebody they trusted which was the",
    "start": "160620",
    "end": "162239"
  },
  {
    "text": "Canadian government",
    "start": "162239",
    "end": "163440"
  },
  {
    "text": "uh if it looked like it had all the",
    "start": "163440",
    "end": "165360"
  },
  {
    "text": "anti-forgery features that an ID has and",
    "start": "165360",
    "end": "168180"
  },
  {
    "text": "finally once they trusted it they read",
    "start": "168180",
    "end": "170160"
  },
  {
    "text": "the information on the ID to make sure",
    "start": "170160",
    "end": "171959"
  },
  {
    "text": "that I was actually who I say I am and I",
    "start": "171959",
    "end": "174300"
  },
  {
    "text": "can buy alcohol",
    "start": "174300",
    "end": "175500"
  },
  {
    "text": "finally once they validated that",
    "start": "175500",
    "end": "177120"
  },
  {
    "text": "information was correct then they served",
    "start": "177120",
    "end": "179099"
  },
  {
    "text": "me",
    "start": "179099",
    "end": "180060"
  },
  {
    "text": "this is actually pretty similar to the",
    "start": "180060",
    "end": "182640"
  },
  {
    "text": "process of validating a Json web token",
    "start": "182640",
    "end": "185340"
  },
  {
    "text": "with an application",
    "start": "185340",
    "end": "188120"
  },
  {
    "text": "so I was able to validate who I was at",
    "start": "189000",
    "end": "191340"
  },
  {
    "text": "the bar using my ID but how am I going",
    "start": "191340",
    "end": "194280"
  },
  {
    "text": "to do that online obviously I can't scan",
    "start": "194280",
    "end": "196560"
  },
  {
    "text": "my passport and send it along to every",
    "start": "196560",
    "end": "199319"
  },
  {
    "text": "website that would be inconvenience and",
    "start": "199319",
    "end": "201300"
  },
  {
    "text": "extremely insecure",
    "start": "201300",
    "end": "203159"
  },
  {
    "text": "I need some kind of virtual piece of ID",
    "start": "203159",
    "end": "205620"
  },
  {
    "text": "that's issued by a trusted Authority but",
    "start": "205620",
    "end": "208980"
  },
  {
    "text": "maybe in this case not the governments",
    "start": "208980",
    "end": "210739"
  },
  {
    "text": "that also wouldn't scale very well",
    "start": "210739",
    "end": "213780"
  },
  {
    "text": "so who do we trust online we trust the",
    "start": "213780",
    "end": "217260"
  },
  {
    "text": "big tech companies like Google or",
    "start": "217260",
    "end": "219239"
  },
  {
    "text": "Microsoft so maybe we can use them to",
    "start": "219239",
    "end": "221640"
  },
  {
    "text": "sign in or maybe even on a smaller scale",
    "start": "221640",
    "end": "224040"
  },
  {
    "text": "if we have our own micro Services we're",
    "start": "224040",
    "end": "226080"
  },
  {
    "text": "using maybe we have an authentication",
    "start": "226080",
    "end": "228120"
  },
  {
    "text": "Service that we trust that our other",
    "start": "228120",
    "end": "230099"
  },
  {
    "text": "micro Services can rely on",
    "start": "230099",
    "end": "232200"
  },
  {
    "text": "this is where Json web tokens come in",
    "start": "232200",
    "end": "234239"
  },
  {
    "text": "they're like a digital online piece of",
    "start": "234239",
    "end": "237420"
  },
  {
    "text": "identification",
    "start": "237420",
    "end": "238860"
  },
  {
    "text": "uh so going back to our bar analogy when",
    "start": "238860",
    "end": "242580"
  },
  {
    "text": "I presented the bartender with the ID",
    "start": "242580",
    "end": "245040"
  },
  {
    "text": "that's like the Json web token itself",
    "start": "245040",
    "end": "248159"
  },
  {
    "text": "when the bartender looked at the Json",
    "start": "248159",
    "end": "249959"
  },
  {
    "text": "web token and saw that it was issued by",
    "start": "249959",
    "end": "251879"
  },
  {
    "text": "the Canadian governments uh that was",
    "start": "251879",
    "end": "254640"
  },
  {
    "text": "like seeing that the Json web token was",
    "start": "254640",
    "end": "256380"
  },
  {
    "text": "signed by a trusted Authority like",
    "start": "256380",
    "end": "258000"
  },
  {
    "text": "Google or your authentication Service",
    "start": "258000",
    "end": "260820"
  },
  {
    "text": "finally they read the information from",
    "start": "260820",
    "end": "263220"
  },
  {
    "text": "the ID or token",
    "start": "263220",
    "end": "265020"
  },
  {
    "text": "and made some assumptions about who I",
    "start": "265020",
    "end": "267360"
  },
  {
    "text": "was because they trusted it",
    "start": "267360",
    "end": "270740"
  },
  {
    "text": "so what is in a Json web token or JWT",
    "start": "272100",
    "end": "277320"
  },
  {
    "text": "well it's an acronym and you can break",
    "start": "277320",
    "end": "279660"
  },
  {
    "text": "it down to its three parts uh pretty",
    "start": "279660",
    "end": "282240"
  },
  {
    "text": "straightforwardly the first part is Json",
    "start": "282240",
    "end": "285360"
  },
  {
    "text": "or JavaScript object notation if you've",
    "start": "285360",
    "end": "288300"
  },
  {
    "text": "done web developments I'm sure this",
    "start": "288300",
    "end": "289979"
  },
  {
    "text": "looks familiar it's a pretty standard",
    "start": "289979",
    "end": "291780"
  },
  {
    "text": "way to send information about an object",
    "start": "291780",
    "end": "294900"
  },
  {
    "text": "between a server and a client in a way",
    "start": "294900",
    "end": "296940"
  },
  {
    "text": "that's easily readable",
    "start": "296940",
    "end": "298620"
  },
  {
    "text": "the next part W for web this is the",
    "start": "298620",
    "end": "301380"
  },
  {
    "text": "expected place that Json web tokens are",
    "start": "301380",
    "end": "303720"
  },
  {
    "text": "to be used normally between",
    "start": "303720",
    "end": "305340"
  },
  {
    "text": "microservices or any other application",
    "start": "305340",
    "end": "308040"
  },
  {
    "text": "running on the web",
    "start": "308040",
    "end": "309180"
  },
  {
    "text": "and finally there's t for token and this",
    "start": "309180",
    "end": "312720"
  },
  {
    "text": "isn't a token in the sense like a",
    "start": "312720",
    "end": "315240"
  },
  {
    "text": "Bitcoin or any other kind of",
    "start": "315240",
    "end": "317160"
  },
  {
    "text": "cryptocurrency uh this is just token in",
    "start": "317160",
    "end": "320340"
  },
  {
    "text": "the form of a piece of information that",
    "start": "320340",
    "end": "322919"
  },
  {
    "text": "asserts something about the person that",
    "start": "322919",
    "end": "324780"
  },
  {
    "text": "holds that token",
    "start": "324780",
    "end": "327680"
  },
  {
    "text": "so this is what a Json web token",
    "start": "328620",
    "end": "330419"
  },
  {
    "text": "actually looks like it's",
    "start": "330419",
    "end": "332580"
  },
  {
    "text": "pretty esoteric and intimidating to",
    "start": "332580",
    "end": "334380"
  },
  {
    "text": "humans pretty clearly not meant to be",
    "start": "334380",
    "end": "335940"
  },
  {
    "text": "read by us",
    "start": "335940",
    "end": "337220"
  },
  {
    "text": "and if you look closer even though it's",
    "start": "337220",
    "end": "340080"
  },
  {
    "text": "intimidating with a bunch of numbers and",
    "start": "340080",
    "end": "341699"
  },
  {
    "text": "letters you'll see there's actually",
    "start": "341699",
    "end": "343740"
  },
  {
    "text": "three dots separating distinct parts of",
    "start": "343740",
    "end": "347880"
  },
  {
    "text": "this Json web token",
    "start": "347880",
    "end": "349680"
  },
  {
    "text": "so what we're actually looking at is the",
    "start": "349680",
    "end": "352440"
  },
  {
    "text": "three different components of a Json web",
    "start": "352440",
    "end": "354000"
  },
  {
    "text": "token the header the blue Parts the",
    "start": "354000",
    "end": "356699"
  },
  {
    "text": "payload in pink which is the information",
    "start": "356699",
    "end": "358680"
  },
  {
    "text": "about who holds this Json web token and",
    "start": "358680",
    "end": "361860"
  },
  {
    "text": "the green part is the signature",
    "start": "361860",
    "end": "364259"
  },
  {
    "text": "one important thing to note is that",
    "start": "364259",
    "end": "366780"
  },
  {
    "text": "although this looks very obscured and",
    "start": "366780",
    "end": "370560"
  },
  {
    "text": "potentially secure it's actually just",
    "start": "370560",
    "end": "373020"
  },
  {
    "text": "base64 encoded base64 encoding is just a",
    "start": "373020",
    "end": "376919"
  },
  {
    "text": "standard way to encode information to",
    "start": "376919",
    "end": "378720"
  },
  {
    "text": "send it over the wire uh so a common",
    "start": "378720",
    "end": "382100"
  },
  {
    "text": "misconception I guess I've seen when",
    "start": "382100",
    "end": "384060"
  },
  {
    "text": "people are working with Json web tokens",
    "start": "384060",
    "end": "385800"
  },
  {
    "text": "is that they think they can store secret",
    "start": "385800",
    "end": "388500"
  },
  {
    "text": "information in them and in the case of a",
    "start": "388500",
    "end": "391319"
  },
  {
    "text": "standard Json web token that is not the",
    "start": "391319",
    "end": "393600"
  },
  {
    "text": "case it's just base64 encoded so whoever",
    "start": "393600",
    "end": "396840"
  },
  {
    "text": "receives this token can decode it and",
    "start": "396840",
    "end": "398580"
  },
  {
    "text": "read whatever's inside of it there is",
    "start": "398580",
    "end": "400979"
  },
  {
    "text": "something called an encrypted Json web",
    "start": "400979",
    "end": "402780"
  },
  {
    "text": "token which I'm not going to talk about",
    "start": "402780",
    "end": "404460"
  },
  {
    "text": "here but if you're looking to send",
    "start": "404460",
    "end": "405960"
  },
  {
    "text": "encrypted secret information to somebody",
    "start": "405960",
    "end": "408240"
  },
  {
    "text": "that's what you'll want to use instead",
    "start": "408240",
    "end": "412099"
  },
  {
    "text": "so let's go through the components the",
    "start": "412680",
    "end": "414600"
  },
  {
    "text": "first component of the Json web token is",
    "start": "414600",
    "end": "416520"
  },
  {
    "text": "the header so this is information about",
    "start": "416520",
    "end": "419220"
  },
  {
    "text": "how the token should actually be",
    "start": "419220",
    "end": "420900"
  },
  {
    "text": "validated by the party that receives the",
    "start": "420900",
    "end": "422759"
  },
  {
    "text": "token in this case you can see that it's",
    "start": "422759",
    "end": "425759"
  },
  {
    "text": "specifying the hs-256 algorithm was used",
    "start": "425759",
    "end": "428940"
  },
  {
    "text": "to create the signature and in the case",
    "start": "428940",
    "end": "432479"
  },
  {
    "text": "of all Json web tokens as far as I know",
    "start": "432479",
    "end": "435120"
  },
  {
    "text": "the type will be jots there can be other",
    "start": "435120",
    "end": "437460"
  },
  {
    "text": "things here if it's not a Json web token",
    "start": "437460",
    "end": "441300"
  },
  {
    "text": "the next part of the token is the",
    "start": "441300",
    "end": "443220"
  },
  {
    "text": "payload this is the midi bit that's your",
    "start": "443220",
    "end": "446220"
  },
  {
    "text": "clients will actually be looking at this",
    "start": "446220",
    "end": "448620"
  },
  {
    "text": "contains all the information about the",
    "start": "448620",
    "end": "450780"
  },
  {
    "text": "party that is presenting the token so",
    "start": "450780",
    "end": "452880"
  },
  {
    "text": "this could be a token presented by a",
    "start": "452880",
    "end": "454740"
  },
  {
    "text": "user or it could also be a token",
    "start": "454740",
    "end": "456720"
  },
  {
    "text": "presented by say a machine like another",
    "start": "456720",
    "end": "458880"
  },
  {
    "text": "micro service calling it to a different",
    "start": "458880",
    "end": "461460"
  },
  {
    "text": "micro service",
    "start": "461460",
    "end": "463740"
  },
  {
    "text": "um in our example here we've got the",
    "start": "463740",
    "end": "465479"
  },
  {
    "text": "email of the user that the token was",
    "start": "465479",
    "end": "466979"
  },
  {
    "text": "created for hello at example.com",
    "start": "466979",
    "end": "469500"
  },
  {
    "text": "and then two other commonly seen fields",
    "start": "469500",
    "end": "471660"
  },
  {
    "text": "and Json web tokens so these are",
    "start": "471660",
    "end": "474000"
  },
  {
    "text": "abbreviated for the point of just saving",
    "start": "474000",
    "end": "476400"
  },
  {
    "text": "space in the Json web token but you can",
    "start": "476400",
    "end": "479099"
  },
  {
    "text": "see the second field there is IAT which",
    "start": "479099",
    "end": "481680"
  },
  {
    "text": "stands for issued at this is the time",
    "start": "481680",
    "end": "483960"
  },
  {
    "text": "the token was created and if you receive",
    "start": "483960",
    "end": "486479"
  },
  {
    "text": "a token with an issued ad in the future",
    "start": "486479",
    "end": "488220"
  },
  {
    "text": "it's not valid",
    "start": "488220",
    "end": "489960"
  },
  {
    "text": "and the Third Field which is also an",
    "start": "489960",
    "end": "492539"
  },
  {
    "text": "extremely important one is exp the",
    "start": "492539",
    "end": "494819"
  },
  {
    "text": "expiry of the token these are both Unix",
    "start": "494819",
    "end": "497759"
  },
  {
    "text": "timestamps the expiry is important",
    "start": "497759",
    "end": "500400"
  },
  {
    "text": "because if you receive a token that's",
    "start": "500400",
    "end": "501900"
  },
  {
    "text": "after the expiry the information in it",
    "start": "501900",
    "end": "503819"
  },
  {
    "text": "may no longer be valid so kind of going",
    "start": "503819",
    "end": "506699"
  },
  {
    "text": "back to the ID analogy from earlier this",
    "start": "506699",
    "end": "510120"
  },
  {
    "text": "is like the information that was written",
    "start": "510120",
    "end": "511560"
  },
  {
    "text": "on your driver's license or passport and",
    "start": "511560",
    "end": "515039"
  },
  {
    "text": "for the expiry that's like the expiry of",
    "start": "515039",
    "end": "517020"
  },
  {
    "text": "the passport like maybe somebody's",
    "start": "517020",
    "end": "518339"
  },
  {
    "text": "address has changed or maybe some of",
    "start": "518339",
    "end": "520380"
  },
  {
    "text": "their features have changed since this",
    "start": "520380",
    "end": "522959"
  },
  {
    "text": "passport was issued",
    "start": "522959",
    "end": "526219"
  },
  {
    "text": "and finally there's this signature there",
    "start": "526860",
    "end": "529200"
  },
  {
    "text": "this part is kind of a little bit more",
    "start": "529200",
    "end": "531959"
  },
  {
    "text": "difficult to demonstrate because it",
    "start": "531959",
    "end": "533339"
  },
  {
    "text": "doesn't decode into Json it's just an",
    "start": "533339",
    "end": "535680"
  },
  {
    "text": "Integrity check value for that header",
    "start": "535680",
    "end": "537540"
  },
  {
    "text": "and payload like I said this is actually",
    "start": "537540",
    "end": "540120"
  },
  {
    "text": "the most important component because it",
    "start": "540120",
    "end": "541800"
  },
  {
    "text": "lets us know that the information in",
    "start": "541800",
    "end": "543660"
  },
  {
    "text": "those first two sections has not been",
    "start": "543660",
    "end": "545519"
  },
  {
    "text": "tampered with and we can trust it",
    "start": "545519",
    "end": "548760"
  },
  {
    "text": "so let's break down actually how we get",
    "start": "548760",
    "end": "550860"
  },
  {
    "text": "this signature to make sure that we're",
    "start": "550860",
    "end": "552660"
  },
  {
    "text": "doing it correctly and validating it",
    "start": "552660",
    "end": "554100"
  },
  {
    "text": "correctly",
    "start": "554100",
    "end": "556459"
  },
  {
    "text": "well there's two ways to actually get",
    "start": "556680",
    "end": "559019"
  },
  {
    "text": "the token signature the first way is",
    "start": "559019",
    "end": "561660"
  },
  {
    "text": "using symmetric key signing so according",
    "start": "561660",
    "end": "564720"
  },
  {
    "text": "to my research this is actually the most",
    "start": "564720",
    "end": "567600"
  },
  {
    "text": "common way to sign a Json web token in",
    "start": "567600",
    "end": "570720"
  },
  {
    "text": "my experience asymmetric key signing has",
    "start": "570720",
    "end": "573300"
  },
  {
    "text": "been more popular",
    "start": "573300",
    "end": "574580"
  },
  {
    "text": "but it's pretty straightforward",
    "start": "574580",
    "end": "577200"
  },
  {
    "text": "so",
    "start": "577200",
    "end": "578399"
  },
  {
    "text": "when the party is creating a Json web",
    "start": "578399",
    "end": "580740"
  },
  {
    "text": "token they'll take that header and",
    "start": "580740",
    "end": "582300"
  },
  {
    "text": "payload so the information about how the",
    "start": "582300",
    "end": "584820"
  },
  {
    "text": "token was signed and the information",
    "start": "584820",
    "end": "586260"
  },
  {
    "text": "about who the token was for and they'll",
    "start": "586260",
    "end": "588959"
  },
  {
    "text": "generate a hashed based message",
    "start": "588959",
    "end": "591180"
  },
  {
    "text": "authentication code which is in both",
    "start": "591180",
    "end": "593100"
  },
  {
    "text": "full using the header and payload along",
    "start": "593100",
    "end": "596519"
  },
  {
    "text": "with a shared secret key",
    "start": "596519",
    "end": "598980"
  },
  {
    "text": "this outputs a unique value which they",
    "start": "598980",
    "end": "601740"
  },
  {
    "text": "said is that third section of the Json",
    "start": "601740",
    "end": "603480"
  },
  {
    "text": "web token",
    "start": "603480",
    "end": "605760"
  },
  {
    "text": "um one important thing to note here is",
    "start": "605760",
    "end": "607680"
  },
  {
    "text": "that you don't really have to worry",
    "start": "607680",
    "end": "609480"
  },
  {
    "text": "about how hash based message",
    "start": "609480",
    "end": "611100"
  },
  {
    "text": "authentication codes are working just",
    "start": "611100",
    "end": "613080"
  },
  {
    "text": "know that when you pass in this shared",
    "start": "613080",
    "end": "615480"
  },
  {
    "text": "secret key which is like a password it's",
    "start": "615480",
    "end": "618180"
  },
  {
    "text": "going to Output some unique value and if",
    "start": "618180",
    "end": "621000"
  },
  {
    "text": "anything in the payload of the token",
    "start": "621000",
    "end": "622860"
  },
  {
    "text": "changes like say somebody decodes the",
    "start": "622860",
    "end": "624899"
  },
  {
    "text": "token and changes their email to admin",
    "start": "624899",
    "end": "626940"
  },
  {
    "text": "example.com",
    "start": "626940",
    "end": "628500"
  },
  {
    "text": "then this signature will no longer be",
    "start": "628500",
    "end": "631440"
  },
  {
    "text": "valid and the signing party will reject",
    "start": "631440",
    "end": "633540"
  },
  {
    "text": "the token",
    "start": "633540",
    "end": "635580"
  },
  {
    "text": "so how sorry the receiving party will",
    "start": "635580",
    "end": "638399"
  },
  {
    "text": "reject the token",
    "start": "638399",
    "end": "639839"
  },
  {
    "text": "so what does that actually look like",
    "start": "639839",
    "end": "641940"
  },
  {
    "text": "so the party receiving the token will",
    "start": "641940",
    "end": "643920"
  },
  {
    "text": "follow a similar process they'll take",
    "start": "643920",
    "end": "646500"
  },
  {
    "text": "the header and payload values and",
    "start": "646500",
    "end": "648540"
  },
  {
    "text": "they'll also use this shared secret key",
    "start": "648540",
    "end": "650160"
  },
  {
    "text": "which they've established somehow",
    "start": "650160",
    "end": "652019"
  },
  {
    "text": "beforehand to exchanged with the other",
    "start": "652019",
    "end": "653940"
  },
  {
    "text": "party",
    "start": "653940",
    "end": "655019"
  },
  {
    "text": "and then they'll find the unique value",
    "start": "655019",
    "end": "657000"
  },
  {
    "text": "and compare it to this signature sent in",
    "start": "657000",
    "end": "659220"
  },
  {
    "text": "since these signatures match they'll",
    "start": "659220",
    "end": "661800"
  },
  {
    "text": "know the token is valid and they can",
    "start": "661800",
    "end": "663540"
  },
  {
    "text": "proceed safely",
    "start": "663540",
    "end": "665339"
  },
  {
    "text": "uh kind of the downside of this",
    "start": "665339",
    "end": "667740"
  },
  {
    "text": "symmetric signing approach here is that",
    "start": "667740",
    "end": "670440"
  },
  {
    "text": "although it is pretty straightforward",
    "start": "670440",
    "end": "672000"
  },
  {
    "text": "using the shared secret key establishing",
    "start": "672000",
    "end": "674820"
  },
  {
    "text": "that shared secret key is a little bit",
    "start": "674820",
    "end": "677279"
  },
  {
    "text": "less secure you don't know who all has",
    "start": "677279",
    "end": "679380"
  },
  {
    "text": "access to it so",
    "start": "679380",
    "end": "681660"
  },
  {
    "text": "since the person validating the key has",
    "start": "681660",
    "end": "683579"
  },
  {
    "text": "that same password secret key they could",
    "start": "683579",
    "end": "686279"
  },
  {
    "text": "also generate tokens that would be seen",
    "start": "686279",
    "end": "688140"
  },
  {
    "text": "as valid and if there's other people",
    "start": "688140",
    "end": "689640"
  },
  {
    "text": "that are validating those those tokens",
    "start": "689640",
    "end": "692040"
  },
  {
    "text": "then you can't actually tell who it came",
    "start": "692040",
    "end": "694500"
  },
  {
    "text": "from",
    "start": "694500",
    "end": "695279"
  },
  {
    "text": "since the key is distributed",
    "start": "695279",
    "end": "698399"
  },
  {
    "text": "due to this I've used asymmetric signing",
    "start": "698399",
    "end": "701940"
  },
  {
    "text": "more this is a good approach if you've",
    "start": "701940",
    "end": "705000"
  },
  {
    "text": "got a bunch of micro services and you've",
    "start": "705000",
    "end": "707339"
  },
  {
    "text": "got one service that's only focused on",
    "start": "707339",
    "end": "709860"
  },
  {
    "text": "authentication you don't want the other",
    "start": "709860",
    "end": "711420"
  },
  {
    "text": "services to be able to create their own",
    "start": "711420",
    "end": "713160"
  },
  {
    "text": "tokens at all",
    "start": "713160",
    "end": "714540"
  },
  {
    "text": "so asymmetric signing is like how",
    "start": "714540",
    "end": "717420"
  },
  {
    "text": "cryptocurrency while it works you've got",
    "start": "717420",
    "end": "719220"
  },
  {
    "text": "a private key and a public key and the",
    "start": "719220",
    "end": "721680"
  },
  {
    "text": "private key is only held by the",
    "start": "721680",
    "end": "723300"
  },
  {
    "text": "authentication Service meanwhile the",
    "start": "723300",
    "end": "725399"
  },
  {
    "text": "public key is available on some endpoint",
    "start": "725399",
    "end": "727980"
  },
  {
    "text": "for anybody to access it's public",
    "start": "727980",
    "end": "730740"
  },
  {
    "text": "intentionally and can be used to",
    "start": "730740",
    "end": "732360"
  },
  {
    "text": "validate signatures created with this",
    "start": "732360",
    "end": "734100"
  },
  {
    "text": "private key",
    "start": "734100",
    "end": "735240"
  },
  {
    "text": "so here's what it looks like to actually",
    "start": "735240",
    "end": "737339"
  },
  {
    "text": "create a",
    "start": "737339",
    "end": "740220"
  },
  {
    "text": "signature for a Json web token using",
    "start": "740220",
    "end": "742440"
  },
  {
    "text": "asymmetric signing once again we take",
    "start": "742440",
    "end": "744959"
  },
  {
    "text": "the header and payload and we hash them",
    "start": "744959",
    "end": "747660"
  },
  {
    "text": "which creates a unique value",
    "start": "747660",
    "end": "749399"
  },
  {
    "text": "then since we're the party that's",
    "start": "749399",
    "end": "751920"
  },
  {
    "text": "creating this token we can use our",
    "start": "751920",
    "end": "753600"
  },
  {
    "text": "private key to encrypt that unique value",
    "start": "753600",
    "end": "755640"
  },
  {
    "text": "and add it as the signature",
    "start": "755640",
    "end": "759260"
  },
  {
    "text": "when somebody receives the token and",
    "start": "759420",
    "end": "761160"
  },
  {
    "text": "they need to validate it they will use",
    "start": "761160",
    "end": "764399"
  },
  {
    "text": "the public key of whoever signs that",
    "start": "764399",
    "end": "766920"
  },
  {
    "text": "token to decrypt that third section of",
    "start": "766920",
    "end": "769380"
  },
  {
    "text": "the token the signature this will reveal",
    "start": "769380",
    "end": "772440"
  },
  {
    "text": "what the person that created the token",
    "start": "772440",
    "end": "774420"
  },
  {
    "text": "says the unique value was and then they",
    "start": "774420",
    "end": "777959"
  },
  {
    "text": "can compute the hash of the header and",
    "start": "777959",
    "end": "779459"
  },
  {
    "text": "payload and compare them to make sure",
    "start": "779459",
    "end": "781320"
  },
  {
    "text": "that nothing has changed",
    "start": "781320",
    "end": "783420"
  },
  {
    "text": "due to the nature of asymmetric Keys",
    "start": "783420",
    "end": "786720"
  },
  {
    "text": "um",
    "start": "786720",
    "end": "788459"
  },
  {
    "text": "only the person that holds that private",
    "start": "788459",
    "end": "790139"
  },
  {
    "text": "key would be able to generate that",
    "start": "790139",
    "end": "791399"
  },
  {
    "text": "signature so you know that it's valid",
    "start": "791399",
    "end": "795019"
  },
  {
    "text": "so what does this look like in practice",
    "start": "795120",
    "end": "796700"
  },
  {
    "text": "this is a super simple diagram of what a",
    "start": "796700",
    "end": "801060"
  },
  {
    "text": "microservice architecture might look",
    "start": "801060",
    "end": "803220"
  },
  {
    "text": "like",
    "start": "803220",
    "end": "803940"
  },
  {
    "text": "you can see on the left here we've got",
    "start": "803940",
    "end": "806100"
  },
  {
    "text": "the authentication Service and on the",
    "start": "806100",
    "end": "808079"
  },
  {
    "text": "right is some other service",
    "start": "808079",
    "end": "809639"
  },
  {
    "text": "let's say it sends emails or something",
    "start": "809639",
    "end": "811320"
  },
  {
    "text": "it could really do anything",
    "start": "811320",
    "end": "813180"
  },
  {
    "text": "so step one the clients the laptop down",
    "start": "813180",
    "end": "815820"
  },
  {
    "text": "there will log into the authentication",
    "start": "815820",
    "end": "817620"
  },
  {
    "text": "Service stay with the username and",
    "start": "817620",
    "end": "819300"
  },
  {
    "text": "password",
    "start": "819300",
    "end": "820260"
  },
  {
    "text": "the authentication Service will validate",
    "start": "820260",
    "end": "822600"
  },
  {
    "text": "that username and password and then",
    "start": "822600",
    "end": "824220"
  },
  {
    "text": "create the token for that client's and",
    "start": "824220",
    "end": "827639"
  },
  {
    "text": "sign it with their private key",
    "start": "827639",
    "end": "830399"
  },
  {
    "text": "the token is then sent back to the",
    "start": "830399",
    "end": "831899"
  },
  {
    "text": "client and they can make requests to the",
    "start": "831899",
    "end": "833459"
  },
  {
    "text": "email service for whatever feature they",
    "start": "833459",
    "end": "835620"
  },
  {
    "text": "want say they call an endpoint to send",
    "start": "835620",
    "end": "837959"
  },
  {
    "text": "an email they'll send along that token",
    "start": "837959",
    "end": "840060"
  },
  {
    "text": "in the header of the request and the",
    "start": "840060",
    "end": "842040"
  },
  {
    "text": "other service can",
    "start": "842040",
    "end": "843959"
  },
  {
    "text": "then take that token out of the header",
    "start": "843959",
    "end": "846839"
  },
  {
    "text": "look at the public key for the",
    "start": "846839",
    "end": "848399"
  },
  {
    "text": "authentication Service which is public",
    "start": "848399",
    "end": "850260"
  },
  {
    "text": "and everybody knows",
    "start": "850260",
    "end": "851779"
  },
  {
    "text": "validate the signature and that the",
    "start": "851779",
    "end": "854220"
  },
  {
    "text": "contents of the token haven't changed",
    "start": "854220",
    "end": "856019"
  },
  {
    "text": "validate the tokens not expired and then",
    "start": "856019",
    "end": "858779"
  },
  {
    "text": "finally proceed to do",
    "start": "858779",
    "end": "860639"
  },
  {
    "text": "whatever it wants send the email",
    "start": "860639",
    "end": "864000"
  },
  {
    "text": "so let's break that down into an",
    "start": "864000",
    "end": "865260"
  },
  {
    "text": "algorithm so what we did there was we've",
    "start": "865260",
    "end": "867839"
  },
  {
    "text": "separated the Json web token into its",
    "start": "867839",
    "end": "869880"
  },
  {
    "text": "three segments header payload and",
    "start": "869880",
    "end": "871980"
  },
  {
    "text": "signature",
    "start": "871980",
    "end": "873060"
  },
  {
    "text": "we've decoded the header and payload and",
    "start": "873060",
    "end": "875880"
  },
  {
    "text": "checked from the header which signature",
    "start": "875880",
    "end": "877980"
  },
  {
    "text": "algorithm algorithm we should use to",
    "start": "877980",
    "end": "880079"
  },
  {
    "text": "verify the token",
    "start": "880079",
    "end": "881579"
  },
  {
    "text": "then based on that algorithm we've",
    "start": "881579",
    "end": "884100"
  },
  {
    "text": "verified that the signed hash matches",
    "start": "884100",
    "end": "887519"
  },
  {
    "text": "the header and payload the hash of the",
    "start": "887519",
    "end": "889560"
  },
  {
    "text": "header and payload of the token that we",
    "start": "889560",
    "end": "891240"
  },
  {
    "text": "received",
    "start": "891240",
    "end": "892380"
  },
  {
    "text": "finally we know that's valid so we check",
    "start": "892380",
    "end": "894180"
  },
  {
    "text": "the information is who is this user is",
    "start": "894180",
    "end": "896760"
  },
  {
    "text": "the token expired is it after the time",
    "start": "896760",
    "end": "898740"
  },
  {
    "text": "the token is issued at and then we can",
    "start": "898740",
    "end": "900779"
  },
  {
    "text": "proceed",
    "start": "900779",
    "end": "902279"
  },
  {
    "text": "seems pretty solid right",
    "start": "902279",
    "end": "904680"
  },
  {
    "text": "well there's one fatal flaw in here",
    "start": "904680",
    "end": "907079"
  },
  {
    "text": "that's actually enabled by the Json web",
    "start": "907079",
    "end": "909180"
  },
  {
    "text": "token specification and that's step",
    "start": "909180",
    "end": "912180"
  },
  {
    "text": "three so when you're validating the",
    "start": "912180",
    "end": "914880"
  },
  {
    "text": "header segments of the Json web token",
    "start": "914880",
    "end": "918560"
  },
  {
    "text": "the RFC actually says a none algorithm",
    "start": "918560",
    "end": "922980"
  },
  {
    "text": "is valid to use so what this means is",
    "start": "922980",
    "end": "927839"
  },
  {
    "text": "whoever's receiving the token will check",
    "start": "927839",
    "end": "929940"
  },
  {
    "text": "the header to see which algorithm they",
    "start": "929940",
    "end": "931860"
  },
  {
    "text": "should use to validate the signature",
    "start": "931860",
    "end": "934019"
  },
  {
    "text": "and in the case of none that means don't",
    "start": "934019",
    "end": "936660"
  },
  {
    "text": "validate this token just take it as",
    "start": "936660",
    "end": "938459"
  },
  {
    "text": "valid",
    "start": "938459",
    "end": "939660"
  },
  {
    "text": "so this is actually a pretty a pretty",
    "start": "939660",
    "end": "942120"
  },
  {
    "text": "big foot gun if you're just immediately",
    "start": "942120",
    "end": "944279"
  },
  {
    "text": "writing to the spec of the Json web",
    "start": "944279",
    "end": "946320"
  },
  {
    "text": "tokens",
    "start": "946320",
    "end": "947940"
  },
  {
    "text": "um",
    "start": "947940",
    "end": "948600"
  },
  {
    "text": "and it might seem extremely obvious but",
    "start": "948600",
    "end": "951360"
  },
  {
    "text": "this is actually something that's",
    "start": "951360",
    "end": "953820"
  },
  {
    "text": "fairly common in 2019 I don't know if",
    "start": "953820",
    "end": "957000"
  },
  {
    "text": "you've heard of auth zero they're a",
    "start": "957000",
    "end": "959399"
  },
  {
    "text": "fairly prominent oauth sign-in service",
    "start": "959399",
    "end": "961800"
  },
  {
    "text": "they were actually vulnerable to this",
    "start": "961800",
    "end": "964019"
  },
  {
    "text": "signature algorithm confusion and uh",
    "start": "964019",
    "end": "968459"
  },
  {
    "text": "that meant that any token that was sent",
    "start": "968459",
    "end": "970320"
  },
  {
    "text": "in with the none algorithm uh in a",
    "start": "970320",
    "end": "973079"
  },
  {
    "text": "different casing in their case I guess",
    "start": "973079",
    "end": "974519"
  },
  {
    "text": "they were comparing the actual like",
    "start": "974519",
    "end": "977100"
  },
  {
    "text": "none capitalized to like a different",
    "start": "977100",
    "end": "979260"
  },
  {
    "text": "casing uh was seen as valid",
    "start": "979260",
    "end": "983240"
  },
  {
    "text": "so how do we project against this",
    "start": "984180",
    "end": "987300"
  },
  {
    "text": "well it's pretty straightforward is we",
    "start": "987300",
    "end": "989820"
  },
  {
    "text": "go off of the spec",
    "start": "989820",
    "end": "991500"
  },
  {
    "text": "actually here's a demonstration actually",
    "start": "991500",
    "end": "993839"
  },
  {
    "text": "of what it would look like to attack a",
    "start": "993839",
    "end": "996240"
  },
  {
    "text": "service that's not validating the",
    "start": "996240",
    "end": "997620"
  },
  {
    "text": "algorithm is what they expect",
    "start": "997620",
    "end": "999779"
  },
  {
    "text": "uh",
    "start": "999779",
    "end": "1000980"
  },
  {
    "text": "I'm running commands in the terminal",
    "start": "1000980",
    "end": "1002480"
  },
  {
    "text": "here I'm just creating a header here",
    "start": "1002480",
    "end": "1004759"
  },
  {
    "text": "with the none algorithm for signing the",
    "start": "1004759",
    "end": "1007459"
  },
  {
    "text": "token and base64 encoding it then I'm",
    "start": "1007459",
    "end": "1010100"
  },
  {
    "text": "creating the body of the Json web token",
    "start": "1010100",
    "end": "1012620"
  },
  {
    "text": "setting the email to whatever I want in",
    "start": "1012620",
    "end": "1014959"
  },
  {
    "text": "this case admin example.com and since",
    "start": "1014959",
    "end": "1018019"
  },
  {
    "text": "it's not being validated at all the",
    "start": "1018019",
    "end": "1019880"
  },
  {
    "text": "service accepts that as correct and",
    "start": "1019880",
    "end": "1023000"
  },
  {
    "text": "allows me to proceed as admin",
    "start": "1023000",
    "end": "1025160"
  },
  {
    "text": "example.com",
    "start": "1025160",
    "end": "1027880"
  },
  {
    "text": "so yeah we can protect against this by",
    "start": "1028040",
    "end": "1029900"
  },
  {
    "text": "going off the spec and only allowing",
    "start": "1029900",
    "end": "1032000"
  },
  {
    "text": "specific signature algorithms that we",
    "start": "1032000",
    "end": "1035240"
  },
  {
    "text": "accept is valid so in our case let's",
    "start": "1035240",
    "end": "1037760"
  },
  {
    "text": "make sure that the token is using an",
    "start": "1037760",
    "end": "1039860"
  },
  {
    "text": "rs-256 signature",
    "start": "1039860",
    "end": "1042740"
  },
  {
    "text": "um most Json web token libraries will",
    "start": "1042740",
    "end": "1045798"
  },
  {
    "text": "protect you against this and just",
    "start": "1045799",
    "end": "1047600"
  },
  {
    "text": "decline the none algorithm but it's",
    "start": "1047600",
    "end": "1050059"
  },
  {
    "text": "worth checking the library using and",
    "start": "1050059",
    "end": "1051919"
  },
  {
    "text": "making sure that's actually the case",
    "start": "1051919",
    "end": "1055240"
  },
  {
    "text": "the next vulnerability is in the case of",
    "start": "1055520",
    "end": "1058039"
  },
  {
    "text": "symmetric key signing so",
    "start": "1058039",
    "end": "1060380"
  },
  {
    "text": "as I pointed out that secret key is",
    "start": "1060380",
    "end": "1063679"
  },
  {
    "text": "the keys to the kingdom and if that's",
    "start": "1063679",
    "end": "1065360"
  },
  {
    "text": "compromised then any token that comes",
    "start": "1065360",
    "end": "1068059"
  },
  {
    "text": "into your service",
    "start": "1068059",
    "end": "1069280"
  },
  {
    "text": "could potentially be not correct",
    "start": "1069280",
    "end": "1072980"
  },
  {
    "text": "um so in my example here I've got a",
    "start": "1072980",
    "end": "1075200"
  },
  {
    "text": "token that was signed using a symmetric",
    "start": "1075200",
    "end": "1077059"
  },
  {
    "text": "key it was a really short one sn1f I",
    "start": "1077059",
    "end": "1080360"
  },
  {
    "text": "found a random two along GitHub called",
    "start": "1080360",
    "end": "1082160"
  },
  {
    "text": "shotcrack which just brute forces the",
    "start": "1082160",
    "end": "1084740"
  },
  {
    "text": "secret key used to sign a symmetric key",
    "start": "1084740",
    "end": "1086720"
  },
  {
    "text": "signed token and I ran it here against",
    "start": "1086720",
    "end": "1089600"
  },
  {
    "text": "this token and my MacBook was able to",
    "start": "1089600",
    "end": "1091880"
  },
  {
    "text": "crack it in 10 seconds",
    "start": "1091880",
    "end": "1095080"
  },
  {
    "text": "so once a party has access to your",
    "start": "1096980",
    "end": "1098960"
  },
  {
    "text": "secret key they can use any",
    "start": "1098960",
    "end": "1101240"
  },
  {
    "text": "legitimate tool like job.io this is just",
    "start": "1101240",
    "end": "1104240"
  },
  {
    "text": "for decoding tokens and modifying them",
    "start": "1104240",
    "end": "1106700"
  },
  {
    "text": "uh and plug in that secret key and enter",
    "start": "1106700",
    "end": "1110059"
  },
  {
    "text": "whatever whatever information they want",
    "start": "1110059",
    "end": "1112039"
  },
  {
    "text": "so you can see here it might be a little",
    "start": "1112039",
    "end": "1114260"
  },
  {
    "text": "bit small",
    "start": "1114260",
    "end": "1115640"
  },
  {
    "text": "I set my name to admin example.com and I",
    "start": "1115640",
    "end": "1119840"
  },
  {
    "text": "plugged in that secret key and it was",
    "start": "1119840",
    "end": "1122059"
  },
  {
    "text": "valid so anybody that passed that token",
    "start": "1122059",
    "end": "1124460"
  },
  {
    "text": "into our service would be able to make",
    "start": "1124460",
    "end": "1126380"
  },
  {
    "text": "whatever calls they wanted as an admin",
    "start": "1126380",
    "end": "1130720"
  },
  {
    "text": "the protection against this is pretty",
    "start": "1131000",
    "end": "1133400"
  },
  {
    "text": "straightforward you're just going to",
    "start": "1133400",
    "end": "1134720"
  },
  {
    "text": "want to use a sufficiently long secret",
    "start": "1134720",
    "end": "1136220"
  },
  {
    "text": "key the length of that secret key varies",
    "start": "1136220",
    "end": "1139039"
  },
  {
    "text": "depending on what signing algorithm",
    "start": "1139039",
    "end": "1141080"
  },
  {
    "text": "you're using",
    "start": "1141080",
    "end": "1143539"
  },
  {
    "text": "uh kind of building on that a Less",
    "start": "1143539",
    "end": "1146480"
  },
  {
    "text": "Direct but increasingly common attack",
    "start": "1146480",
    "end": "1149059"
  },
  {
    "text": "that",
    "start": "1149059",
    "end": "1150320"
  },
  {
    "text": "I've personally seen growing in the wild",
    "start": "1150320",
    "end": "1152919"
  },
  {
    "text": "is that",
    "start": "1152919",
    "end": "1154700"
  },
  {
    "text": "attackers are now going directly after",
    "start": "1154700",
    "end": "1156740"
  },
  {
    "text": "tokens rather than usernames and",
    "start": "1156740",
    "end": "1158960"
  },
  {
    "text": "passwords",
    "start": "1158960",
    "end": "1160100"
  },
  {
    "text": "and the reason for this is that as MFA",
    "start": "1160100",
    "end": "1162919"
  },
  {
    "text": "is getting more popular uh",
    "start": "1162919",
    "end": "1166659"
  },
  {
    "text": "if you have a username and password then",
    "start": "1166820",
    "end": "1168919"
  },
  {
    "text": "you still need access to whatever the",
    "start": "1168919",
    "end": "1170480"
  },
  {
    "text": "second form of authentication is so",
    "start": "1170480",
    "end": "1172340"
  },
  {
    "text": "maybe you have to like Sim Jack them and",
    "start": "1172340",
    "end": "1174799"
  },
  {
    "text": "get access to their actual phone number",
    "start": "1174799",
    "end": "1177020"
  },
  {
    "text": "to do like a text verification or",
    "start": "1177020",
    "end": "1179179"
  },
  {
    "text": "something",
    "start": "1179179",
    "end": "1179960"
  },
  {
    "text": "but as an attacker if you can get access",
    "start": "1179960",
    "end": "1182539"
  },
  {
    "text": "to the tokens then you can bypass the",
    "start": "1182539",
    "end": "1185120"
  },
  {
    "text": "whole initial authentication flow and",
    "start": "1185120",
    "end": "1187880"
  },
  {
    "text": "just make requests until that token",
    "start": "1187880",
    "end": "1189559"
  },
  {
    "text": "expires so this is a pretty tempting",
    "start": "1189559",
    "end": "1192020"
  },
  {
    "text": "Target for a user or for an attacker",
    "start": "1192020",
    "end": "1194600"
  },
  {
    "text": "sorry",
    "start": "1194600",
    "end": "1195940"
  },
  {
    "text": "so you're going to want to make sure you",
    "start": "1195940",
    "end": "1198260"
  },
  {
    "text": "store these Json web tokens securely",
    "start": "1198260",
    "end": "1200840"
  },
  {
    "text": "in my case I prefer storing Json web",
    "start": "1200840",
    "end": "1204080"
  },
  {
    "text": "tokens in a cookie for the user",
    "start": "1204080",
    "end": "1206059"
  },
  {
    "text": "experience but this comes with some",
    "start": "1206059",
    "end": "1209179"
  },
  {
    "text": "pitfalls that I wanted to point out as",
    "start": "1209179",
    "end": "1210740"
  },
  {
    "text": "well so if you're storing the Json web",
    "start": "1210740",
    "end": "1213440"
  },
  {
    "text": "token in a cookie you're going to want",
    "start": "1213440",
    "end": "1214760"
  },
  {
    "text": "to make sure that cookie is secure that",
    "start": "1214760",
    "end": "1216980"
  },
  {
    "text": "means using an HTTP only cookie which",
    "start": "1216980",
    "end": "1220520"
  },
  {
    "text": "can only be sent or sorry HTT yeah HTTP",
    "start": "1220520",
    "end": "1224240"
  },
  {
    "text": "only cookie which can only be accessed",
    "start": "1224240",
    "end": "1227720"
  },
  {
    "text": "when sending requests it can't be",
    "start": "1227720",
    "end": "1229640"
  },
  {
    "text": "accessed by JavaScript which means no",
    "start": "1229640",
    "end": "1231620"
  },
  {
    "text": "malicious scripts in the browser can",
    "start": "1231620",
    "end": "1233900"
  },
  {
    "text": "actually access that cookie you're also",
    "start": "1233900",
    "end": "1237320"
  },
  {
    "text": "going to want to make sure the cookie is",
    "start": "1237320",
    "end": "1238700"
  },
  {
    "text": "set to secure so it's only sent over",
    "start": "1238700",
    "end": "1240740"
  },
  {
    "text": "https nobody intercepting the traffic",
    "start": "1240740",
    "end": "1243440"
  },
  {
    "text": "will be able to read the cookie in that",
    "start": "1243440",
    "end": "1245120"
  },
  {
    "text": "case",
    "start": "1245120",
    "end": "1246080"
  },
  {
    "text": "and finally if you're not doing some",
    "start": "1246080",
    "end": "1248419"
  },
  {
    "text": "fancy redirects for single sign-on then",
    "start": "1248419",
    "end": "1251360"
  },
  {
    "text": "you'll also want to set a same-site flag",
    "start": "1251360",
    "end": "1253880"
  },
  {
    "text": "on the cookie probably too secure so",
    "start": "1253880",
    "end": "1256880"
  },
  {
    "text": "that it can't be sent across redirects",
    "start": "1256880",
    "end": "1260559"
  },
  {
    "text": "the other option is to actually not",
    "start": "1260840",
    "end": "1263000"
  },
  {
    "text": "store cookies at all this means just",
    "start": "1263000",
    "end": "1265880"
  },
  {
    "text": "keeping the Json web token in memory",
    "start": "1265880",
    "end": "1268520"
  },
  {
    "text": "while running your application but",
    "start": "1268520",
    "end": "1271539"
  },
  {
    "text": "that's a little bit of a trade-off for",
    "start": "1271539",
    "end": "1273620"
  },
  {
    "text": "user experience because if they refresh",
    "start": "1273620",
    "end": "1275179"
  },
  {
    "text": "the page they'll log back in",
    "start": "1275179",
    "end": "1278860"
  },
  {
    "text": "as you saw in both the signature",
    "start": "1279260",
    "end": "1282380"
  },
  {
    "text": "algorithm confusion and a secret brute",
    "start": "1282380",
    "end": "1285140"
  },
  {
    "text": "forcing attacks",
    "start": "1285140",
    "end": "1286480"
  },
  {
    "text": "the most important thing is definitely",
    "start": "1286480",
    "end": "1288799"
  },
  {
    "text": "storing your keys securely that you're",
    "start": "1288799",
    "end": "1290900"
  },
  {
    "text": "using to sign these tokens",
    "start": "1290900",
    "end": "1293559"
  },
  {
    "text": "the best thing to do is to store the key",
    "start": "1293559",
    "end": "1296360"
  },
  {
    "text": "in a place that it can't be accessed at",
    "start": "1296360",
    "end": "1298100"
  },
  {
    "text": "all like an Hardware signed Hardware",
    "start": "1298100",
    "end": "1301640"
  },
  {
    "text": "certificate manager or something like",
    "start": "1301640",
    "end": "1303440"
  },
  {
    "text": "that like AWS HSM I'd recommend",
    "start": "1303440",
    "end": "1307280"
  },
  {
    "text": "something like AWS Key Management so",
    "start": "1307280",
    "end": "1309919"
  },
  {
    "text": "only the parties that are expected to be",
    "start": "1309919",
    "end": "1312380"
  },
  {
    "text": "able to access the key can access it or",
    "start": "1312380",
    "end": "1314659"
  },
  {
    "text": "something like vaults so that's more",
    "start": "1314659",
    "end": "1316580"
  },
  {
    "text": "auditable",
    "start": "1316580",
    "end": "1317960"
  },
  {
    "text": "anybody calling in to access your keys",
    "start": "1317960",
    "end": "1320480"
  },
  {
    "text": "you can see who's using them and in the",
    "start": "1320480",
    "end": "1323120"
  },
  {
    "text": "unfortunate case that your secret key",
    "start": "1323120",
    "end": "1325460"
  },
  {
    "text": "actually is compromised it's much easier",
    "start": "1325460",
    "end": "1327679"
  },
  {
    "text": "to roll it it's contained only in one",
    "start": "1327679",
    "end": "1330380"
  },
  {
    "text": "place you can go change it there rather",
    "start": "1330380",
    "end": "1332360"
  },
  {
    "text": "than finding everywhere the secret key",
    "start": "1332360",
    "end": "1333919"
  },
  {
    "text": "is just stored in the environments and",
    "start": "1333919",
    "end": "1335840"
  },
  {
    "text": "going and change them individually",
    "start": "1335840",
    "end": "1339100"
  },
  {
    "text": "so we've gone through the main security",
    "start": "1342200",
    "end": "1344480"
  },
  {
    "text": "pitfalls",
    "start": "1344480",
    "end": "1347179"
  },
  {
    "text": "but I think another common Pitfall that",
    "start": "1347179",
    "end": "1350480"
  },
  {
    "text": "I wanted to point out was making sure",
    "start": "1350480",
    "end": "1353240"
  },
  {
    "text": "you're actually using Json web tokens in",
    "start": "1353240",
    "end": "1355820"
  },
  {
    "text": "a way that makes sense",
    "start": "1355820",
    "end": "1358100"
  },
  {
    "text": "so Json web tokens really shine in a",
    "start": "1358100",
    "end": "1362480"
  },
  {
    "text": "distributed environment they're",
    "start": "1362480",
    "end": "1364880"
  },
  {
    "text": "stateless which means you don't have to",
    "start": "1364880",
    "end": "1366620"
  },
  {
    "text": "call into some Central authentication",
    "start": "1366620",
    "end": "1368419"
  },
  {
    "text": "Service to make sure they're valid and",
    "start": "1368419",
    "end": "1371299"
  },
  {
    "text": "this is good for if you're making calls",
    "start": "1371299",
    "end": "1374120"
  },
  {
    "text": "to many like distributed systems they",
    "start": "1374120",
    "end": "1377120"
  },
  {
    "text": "don't have to call back always to",
    "start": "1377120",
    "end": "1379340"
  },
  {
    "text": "validate the token they know the public",
    "start": "1379340",
    "end": "1381080"
  },
  {
    "text": "key so they can validate what it says is",
    "start": "1381080",
    "end": "1382880"
  },
  {
    "text": "true",
    "start": "1382880",
    "end": "1383840"
  },
  {
    "text": "this will reduce their Network calls",
    "start": "1383840",
    "end": "1386120"
  },
  {
    "text": "reduce latency and it's also nice just",
    "start": "1386120",
    "end": "1388820"
  },
  {
    "text": "to be able to assert some information",
    "start": "1388820",
    "end": "1390140"
  },
  {
    "text": "about whoever's calling your service by",
    "start": "1390140",
    "end": "1392480"
  },
  {
    "text": "checking the token they used",
    "start": "1392480",
    "end": "1395679"
  },
  {
    "text": "uh but you might not even need a Json",
    "start": "1395720",
    "end": "1398120"
  },
  {
    "text": "web token so if you're using just like a",
    "start": "1398120",
    "end": "1401500"
  },
  {
    "text": "monolithic or simple service then",
    "start": "1401500",
    "end": "1404539"
  },
  {
    "text": "session tokens might still be enough and",
    "start": "1404539",
    "end": "1406520"
  },
  {
    "text": "you don't need to worry about any of",
    "start": "1406520",
    "end": "1407960"
  },
  {
    "text": "this complicated stuff at all",
    "start": "1407960",
    "end": "1409880"
  },
  {
    "text": "so it's tried and true just creating",
    "start": "1409880",
    "end": "1412820"
  },
  {
    "text": "like a simple hash secret to send back",
    "start": "1412820",
    "end": "1415159"
  },
  {
    "text": "to the users and then validating that",
    "start": "1415159",
    "end": "1418039"
  },
  {
    "text": "when the request comes in if you have",
    "start": "1418039",
    "end": "1419539"
  },
  {
    "text": "quick access to the database",
    "start": "1419539",
    "end": "1422299"
  },
  {
    "text": "um",
    "start": "1422299",
    "end": "1424360"
  },
  {
    "text": "the other kind of downfall of Json web",
    "start": "1426080",
    "end": "1428120"
  },
  {
    "text": "tokens that I didn't really touch on",
    "start": "1428120",
    "end": "1430100"
  },
  {
    "text": "earlier was that due to their",
    "start": "1430100",
    "end": "1431780"
  },
  {
    "text": "statelessness if you need to invalidate",
    "start": "1431780",
    "end": "1433760"
  },
  {
    "text": "them then it can be a bit of a pain so",
    "start": "1433760",
    "end": "1436880"
  },
  {
    "text": "since you're accepting any token that's",
    "start": "1436880",
    "end": "1438740"
  },
  {
    "text": "signed as valid up until it expires",
    "start": "1438740",
    "end": "1441559"
  },
  {
    "text": "there's no way to revoke it unless you",
    "start": "1441559",
    "end": "1443780"
  },
  {
    "text": "do some complicated stuff like a token",
    "start": "1443780",
    "end": "1446659"
  },
  {
    "text": "block list but that kind of defeats the",
    "start": "1446659",
    "end": "1449360"
  },
  {
    "text": "purpose of using Json web tokens",
    "start": "1449360",
    "end": "1451580"
  },
  {
    "text": "so that's another Pitfall is that",
    "start": "1451580",
    "end": "1455539"
  },
  {
    "text": "session tokens can be easily revoked",
    "start": "1455539",
    "end": "1457400"
  },
  {
    "text": "Json web tokens might be valid for the",
    "start": "1457400",
    "end": "1459919"
  },
  {
    "text": "duration of their lifetime",
    "start": "1459919",
    "end": "1461480"
  },
  {
    "text": "so you're going to want to make sure",
    "start": "1461480",
    "end": "1462679"
  },
  {
    "text": "also to keep the session lifetime of the",
    "start": "1462679",
    "end": "1465140"
  },
  {
    "text": "Json web token as low as you can",
    "start": "1465140",
    "end": "1468880"
  },
  {
    "text": "so that's it we have the base knowledge",
    "start": "1469400",
    "end": "1471559"
  },
  {
    "text": "to create verify and securely work with",
    "start": "1471559",
    "end": "1474020"
  },
  {
    "text": "Json web tokens you can go forth now and",
    "start": "1474020",
    "end": "1477679"
  },
  {
    "text": "check that make your make sure that your",
    "start": "1477679",
    "end": "1479360"
  },
  {
    "text": "libraries are actually validating Json",
    "start": "1479360",
    "end": "1481039"
  },
  {
    "text": "web tokens correctly",
    "start": "1481039",
    "end": "1482659"
  },
  {
    "text": "and that you're creating them correctly",
    "start": "1482659",
    "end": "1484280"
  },
  {
    "text": "thanks for coming out if you'd like to",
    "start": "1484280",
    "end": "1487400"
  },
  {
    "text": "talk with me about tokens at all I'll be",
    "start": "1487400",
    "end": "1489200"
  },
  {
    "text": "at the infra booth at the conference",
    "start": "1489200",
    "end": "1491120"
  },
  {
    "text": "floor I'd love to hear from you",
    "start": "1491120",
    "end": "1493159"
  },
  {
    "text": "thank you",
    "start": "1493159",
    "end": "1494660"
  },
  {
    "text": "[Applause]",
    "start": "1494660",
    "end": "1497660"
  }
]