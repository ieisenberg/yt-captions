[
  {
    "text": "in this three-part demo we'll cover some",
    "start": "320",
    "end": "2720"
  },
  {
    "text": "key enterprise capabilities",
    "start": "2720",
    "end": "4720"
  },
  {
    "text": "of the dell emc storage and data",
    "start": "4720",
    "end": "6720"
  },
  {
    "text": "protection solutions",
    "start": "6720",
    "end": "8160"
  },
  {
    "text": "for kubernetes workloads",
    "start": "8160",
    "end": "12240"
  },
  {
    "text": "in software development it is always a",
    "start": "12639",
    "end": "14799"
  },
  {
    "text": "good idea to have test cases",
    "start": "14799",
    "end": "16720"
  },
  {
    "text": "that are realistic in this demo video we",
    "start": "16720",
    "end": "19279"
  },
  {
    "text": "are going to take a look",
    "start": "19279",
    "end": "20320"
  },
  {
    "text": "at how you can take the copy of",
    "start": "20320",
    "end": "22400"
  },
  {
    "text": "production data of a containerized",
    "start": "22400",
    "end": "24320"
  },
  {
    "text": "application",
    "start": "24320",
    "end": "25439"
  },
  {
    "text": "and use it to spin up a test or a dev",
    "start": "25439",
    "end": "28400"
  },
  {
    "text": "instance of the application",
    "start": "28400",
    "end": "30080"
  },
  {
    "text": "so that the application can be tested",
    "start": "30080",
    "end": "32000"
  },
  {
    "text": "with the latest production data",
    "start": "32000",
    "end": "34960"
  },
  {
    "text": "the storage platform here is powermax",
    "start": "34960",
    "end": "37120"
  },
  {
    "text": "with the container storage interface",
    "start": "37120",
    "end": "39680"
  },
  {
    "text": "kubernetes is the container",
    "start": "39680",
    "end": "41360"
  },
  {
    "text": "orchestration platform",
    "start": "41360",
    "end": "42800"
  },
  {
    "text": "and we are using gitlab for the devops",
    "start": "42800",
    "end": "45520"
  },
  {
    "text": "automation",
    "start": "45520",
    "end": "48160"
  },
  {
    "text": "here is a sample application that we",
    "start": "49440",
    "end": "51600"
  },
  {
    "text": "forked from github",
    "start": "51600",
    "end": "53360"
  },
  {
    "text": "it is a bare bones web app to manage a",
    "start": "53360",
    "end": "56000"
  },
  {
    "text": "list of to-do items",
    "start": "56000",
    "end": "57440"
  },
  {
    "text": "with sql lite as the back-end database",
    "start": "57440",
    "end": "59840"
  },
  {
    "text": "to store the to-do item information",
    "start": "59840",
    "end": "63440"
  },
  {
    "text": "and here is where the magic is happening",
    "start": "63440",
    "end": "65920"
  },
  {
    "text": "this is the persistent storage",
    "start": "65920",
    "end": "68000"
  },
  {
    "text": "claim for the sql lite part that is part",
    "start": "68000",
    "end": "71280"
  },
  {
    "text": "of the to-do",
    "start": "71280",
    "end": "71920"
  },
  {
    "text": "application here we are actually using a",
    "start": "71920",
    "end": "74560"
  },
  {
    "text": "tag",
    "start": "74560",
    "end": "75040"
  },
  {
    "text": "variable of the application instance to",
    "start": "75040",
    "end": "77520"
  },
  {
    "text": "dynamically allocate the right",
    "start": "77520",
    "end": "79600"
  },
  {
    "text": "storage volume if the tag indicates",
    "start": "79600",
    "end": "82640"
  },
  {
    "text": "that its production instance then a",
    "start": "82640",
    "end": "85119"
  },
  {
    "text": "claim against the production volume of",
    "start": "85119",
    "end": "86960"
  },
  {
    "text": "the storage class",
    "start": "86960",
    "end": "88400"
  },
  {
    "text": "sc and in a little while uh we'll",
    "start": "88400",
    "end": "92079"
  },
  {
    "text": "see how to pass power max as the value",
    "start": "92079",
    "end": "95119"
  },
  {
    "text": "for",
    "start": "95119",
    "end": "95520"
  },
  {
    "text": "sc if it's not a production instance",
    "start": "95520",
    "end": "98560"
  },
  {
    "text": "then a snapshot of the production volume",
    "start": "98560",
    "end": "100960"
  },
  {
    "text": "is used instead",
    "start": "100960",
    "end": "102560"
  },
  {
    "text": "if the snapshot pv doesn't exist",
    "start": "102560",
    "end": "105119"
  },
  {
    "text": "kubernetes creates a snapshot of the",
    "start": "105119",
    "end": "107360"
  },
  {
    "text": "production",
    "start": "107360",
    "end": "108240"
  },
  {
    "text": "persistent volume and then uses it",
    "start": "108240",
    "end": "111600"
  },
  {
    "text": "this way every non-production instance",
    "start": "111600",
    "end": "114000"
  },
  {
    "text": "will have its own persistent volume",
    "start": "114000",
    "end": "116399"
  },
  {
    "text": "that is actually the latest copy of the",
    "start": "116399",
    "end": "118960"
  },
  {
    "text": "production data",
    "start": "118960",
    "end": "120560"
  },
  {
    "text": "and here is the yaml for the snapshot",
    "start": "120560",
    "end": "123119"
  },
  {
    "text": "definition",
    "start": "123119",
    "end": "124079"
  },
  {
    "text": "the storage class that will be used here",
    "start": "124079",
    "end": "126479"
  },
  {
    "text": "will be",
    "start": "126479",
    "end": "127119"
  },
  {
    "text": "max dash snap class of course",
    "start": "127119",
    "end": "130479"
  },
  {
    "text": "sc is the variable here and we'll see",
    "start": "130479",
    "end": "132800"
  },
  {
    "text": "how to pass",
    "start": "132800",
    "end": "133840"
  },
  {
    "text": "power max for the variable sc",
    "start": "133840",
    "end": "137840"
  },
  {
    "text": "let's see this in action here is the",
    "start": "137840",
    "end": "140480"
  },
  {
    "text": "production version of the app",
    "start": "140480",
    "end": "142480"
  },
  {
    "text": "let me add a few items that are in fact",
    "start": "142480",
    "end": "144879"
  },
  {
    "text": "a must in today's world",
    "start": "144879",
    "end": "148239"
  },
  {
    "text": "now let's spin up a dev version of this",
    "start": "150400",
    "end": "152560"
  },
  {
    "text": "application to do some changes to the",
    "start": "152560",
    "end": "154480"
  },
  {
    "text": "app",
    "start": "154480",
    "end": "155760"
  },
  {
    "text": "before we do that a quick check on pvcs",
    "start": "155760",
    "end": "159200"
  },
  {
    "text": "and pvs in the namespace",
    "start": "159200",
    "end": "161120"
  },
  {
    "text": "you can see the persistent volume claim",
    "start": "161120",
    "end": "163519"
  },
  {
    "text": "and the persistent volume for the",
    "start": "163519",
    "end": "164879"
  },
  {
    "text": "production instance",
    "start": "164879",
    "end": "166239"
  },
  {
    "text": "and there are no snapshot volumes here",
    "start": "166239",
    "end": "169680"
  },
  {
    "text": "cool now i create a new branch called",
    "start": "169680",
    "end": "171920"
  },
  {
    "text": "colors",
    "start": "171920",
    "end": "172720"
  },
  {
    "text": "and the change i'm going to make is to",
    "start": "172720",
    "end": "174640"
  },
  {
    "text": "change the color of the title",
    "start": "174640",
    "end": "176800"
  },
  {
    "text": "on the web page",
    "start": "176800",
    "end": "179680"
  },
  {
    "text": "i can do a quick div to make sure",
    "start": "182239",
    "end": "185360"
  },
  {
    "text": "and then commit and push the change",
    "start": "185360",
    "end": "189200"
  },
  {
    "text": "this creates a new pipeline in gitlab",
    "start": "189200",
    "end": "192480"
  },
  {
    "text": "let me navigate to the build",
    "start": "192480",
    "end": "199760"
  },
  {
    "text": "and here is the helm command for the",
    "start": "199760",
    "end": "202080"
  },
  {
    "text": "application deployment",
    "start": "202080",
    "end": "203440"
  },
  {
    "text": "in kubernetes where we set things like",
    "start": "203440",
    "end": "206720"
  },
  {
    "text": "a unique namespace for the instance",
    "start": "206720",
    "end": "209760"
  },
  {
    "text": "and passing relevant variables of course",
    "start": "209760",
    "end": "212159"
  },
  {
    "text": "the variable sc which stands for storage",
    "start": "212159",
    "end": "214560"
  },
  {
    "text": "class",
    "start": "214560",
    "end": "215280"
  },
  {
    "text": "is being set to powermax",
    "start": "215280",
    "end": "218799"
  },
  {
    "text": "the build and deployment are completed",
    "start": "218799",
    "end": "221120"
  },
  {
    "text": "and here",
    "start": "221120",
    "end": "221920"
  },
  {
    "text": "we can see that the color of the title",
    "start": "221920",
    "end": "223760"
  },
  {
    "text": "has been changed",
    "start": "223760",
    "end": "225280"
  },
  {
    "text": "and if you notice the data is the latest",
    "start": "225280",
    "end": "228159"
  },
  {
    "text": "production data",
    "start": "228159",
    "end": "229280"
  },
  {
    "text": "since it's a snapshot of the production",
    "start": "229280",
    "end": "230959"
  },
  {
    "text": "volume",
    "start": "230959",
    "end": "233440"
  },
  {
    "text": "now we can go back and check to see that",
    "start": "234720",
    "end": "238159"
  },
  {
    "text": "a new snapshot volume is created",
    "start": "238159",
    "end": "240640"
  },
  {
    "text": "and we can also see the corresponding",
    "start": "240640",
    "end": "242879"
  },
  {
    "text": "persistent volume and volume claim",
    "start": "242879",
    "end": "245439"
  },
  {
    "text": "in addition to the production objects",
    "start": "245439",
    "end": "249360"
  },
  {
    "text": "i can also check the unisphere",
    "start": "252640",
    "end": "254319"
  },
  {
    "text": "environment to see that the snapshot has",
    "start": "254319",
    "end": "256639"
  },
  {
    "text": "been created",
    "start": "256639",
    "end": "257680"
  },
  {
    "text": "as part of the deployment within",
    "start": "257680",
    "end": "260720"
  },
  {
    "text": "the same storage group",
    "start": "260720",
    "end": "269840"
  },
  {
    "text": "this same workflow can be used for any",
    "start": "270560",
    "end": "272960"
  },
  {
    "text": "of the dell emc storage platforms listed",
    "start": "272960",
    "end": "275199"
  },
  {
    "text": "here",
    "start": "275199",
    "end": "276320"
  },
  {
    "text": "these are basically the respective",
    "start": "276320",
    "end": "278240"
  },
  {
    "text": "snapshot storage classes",
    "start": "278240",
    "end": "280000"
  },
  {
    "text": "for each of the platforms",
    "start": "280000",
    "end": "283840"
  },
  {
    "text": "in the second demo we'll see how dell",
    "start": "285360",
    "end": "287360"
  },
  {
    "text": "emc power store",
    "start": "287360",
    "end": "288880"
  },
  {
    "text": "can be used to deploy containerized",
    "start": "288880",
    "end": "290720"
  },
  {
    "text": "applications on vmware's",
    "start": "290720",
    "end": "292720"
  },
  {
    "text": "tanzu kubernetes grid",
    "start": "292720",
    "end": "297840"
  },
  {
    "text": "here we click on create a new namespace",
    "start": "299840",
    "end": "302960"
  },
  {
    "text": "we select our wcp cluster and specify",
    "start": "302960",
    "end": "306320"
  },
  {
    "text": "the name",
    "start": "306320",
    "end": "307039"
  },
  {
    "text": "and then just click create we can see",
    "start": "307039",
    "end": "310800"
  },
  {
    "text": "that the namespace creation completed",
    "start": "310800",
    "end": "312400"
  },
  {
    "text": "successfully and the kubernetes status",
    "start": "312400",
    "end": "315039"
  },
  {
    "text": "is active at this point",
    "start": "315039",
    "end": "318320"
  },
  {
    "text": "i'm adding the dell emc parse or storage",
    "start": "318320",
    "end": "320639"
  },
  {
    "text": "policy i just created to our namespace",
    "start": "320639",
    "end": "323440"
  },
  {
    "text": "this will allow me to create the tkg",
    "start": "323440",
    "end": "326560"
  },
  {
    "text": "persistent volumes",
    "start": "326560",
    "end": "328080"
  },
  {
    "text": "on my dell emc power store vivo data",
    "start": "328080",
    "end": "330560"
  },
  {
    "text": "store",
    "start": "330560",
    "end": "332880"
  },
  {
    "text": "next i'm logging in to my vsphere",
    "start": "333199",
    "end": "336840"
  },
  {
    "text": "kubernetes",
    "start": "336840",
    "end": "338160"
  },
  {
    "text": "using the kubectl command i'm",
    "start": "338160",
    "end": "340639"
  },
  {
    "text": "authenticating",
    "start": "340639",
    "end": "341840"
  },
  {
    "text": "with the administrator at vsphere local",
    "start": "341840",
    "end": "344160"
  },
  {
    "text": "user",
    "start": "344160",
    "end": "346560"
  },
  {
    "text": "then i'm switching to the new namespace",
    "start": "346880",
    "end": "349759"
  },
  {
    "text": "i just created",
    "start": "349759",
    "end": "351199"
  },
  {
    "text": "using the kubectl config use context",
    "start": "351199",
    "end": "353840"
  },
  {
    "text": "command",
    "start": "353840",
    "end": "356240"
  },
  {
    "text": "by running group ctl get sc",
    "start": "356400",
    "end": "359600"
  },
  {
    "text": "we can see the firestore policy this",
    "start": "359600",
    "end": "363039"
  },
  {
    "text": "appears as a storage class within the",
    "start": "363039",
    "end": "365360"
  },
  {
    "text": "namespace",
    "start": "365360",
    "end": "367840"
  },
  {
    "text": "as you can see i'm using this storage",
    "start": "369840",
    "end": "372160"
  },
  {
    "text": "class in my manifest file",
    "start": "372160",
    "end": "374319"
  },
  {
    "text": "of my tkg cluster this storage class",
    "start": "374319",
    "end": "377840"
  },
  {
    "text": "is used for both the control plane and",
    "start": "377840",
    "end": "380319"
  },
  {
    "text": "the worker nodes",
    "start": "380319",
    "end": "381680"
  },
  {
    "text": "you can also see the namespace and the",
    "start": "381680",
    "end": "383840"
  },
  {
    "text": "tkg name",
    "start": "383840",
    "end": "386400"
  },
  {
    "text": "now i'm just going to create it so now",
    "start": "386400",
    "end": "389840"
  },
  {
    "text": "we can go back to the vsphere ui",
    "start": "389840",
    "end": "392000"
  },
  {
    "text": "and see what's actually happening in our",
    "start": "392000",
    "end": "394560"
  },
  {
    "text": "namespace",
    "start": "394560",
    "end": "397199"
  },
  {
    "text": "we can see that the new tkg cluster has",
    "start": "399199",
    "end": "402319"
  },
  {
    "text": "been created",
    "start": "402319",
    "end": "403520"
  },
  {
    "text": "and the control plane vm has been built",
    "start": "403520",
    "end": "406400"
  },
  {
    "text": "out",
    "start": "406400",
    "end": "406960"
  },
  {
    "text": "but hasn't been powered on yet i'll",
    "start": "406960",
    "end": "409840"
  },
  {
    "text": "speed things a little bit",
    "start": "409840",
    "end": "411599"
  },
  {
    "text": "as this process takes about 10 minutes",
    "start": "411599",
    "end": "413680"
  },
  {
    "text": "to complete",
    "start": "413680",
    "end": "416240"
  },
  {
    "text": "by navigating to nsxt we can see",
    "start": "421440",
    "end": "425039"
  },
  {
    "text": "that a tier 1 gateway is being created",
    "start": "425039",
    "end": "427680"
  },
  {
    "text": "for the namespace",
    "start": "427680",
    "end": "429039"
  },
  {
    "text": "as well as a new load balancer",
    "start": "429039",
    "end": "432800"
  },
  {
    "text": "now let's connect to our power store",
    "start": "433759",
    "end": "436319"
  },
  {
    "text": "cluster",
    "start": "436319",
    "end": "437120"
  },
  {
    "text": "and navigate to the vival step",
    "start": "437120",
    "end": "440880"
  },
  {
    "text": "here you can see that we have multiple",
    "start": "442639",
    "end": "445039"
  },
  {
    "text": "vehicles",
    "start": "445039",
    "end": "445840"
  },
  {
    "text": "and each of them belongs to a particular",
    "start": "445840",
    "end": "448319"
  },
  {
    "text": "tkg vm",
    "start": "448319",
    "end": "450720"
  },
  {
    "text": "the type of evolves provisioned depends",
    "start": "450720",
    "end": "453440"
  },
  {
    "text": "on the type of data",
    "start": "453440",
    "end": "455280"
  },
  {
    "text": "that is being stored config vivo",
    "start": "455280",
    "end": "458800"
  },
  {
    "text": "stores standard vm configuration data",
    "start": "458800",
    "end": "461599"
  },
  {
    "text": "such as vmx",
    "start": "461599",
    "end": "462960"
  },
  {
    "text": "log and nvram files",
    "start": "462960",
    "end": "466479"
  },
  {
    "text": "data vehicles store data such as vmdks",
    "start": "466479",
    "end": "470960"
  },
  {
    "text": "snapshots and clones",
    "start": "470960",
    "end": "474000"
  },
  {
    "text": "swap vivo stores a copy of the vm memory",
    "start": "474000",
    "end": "477759"
  },
  {
    "text": "pages",
    "start": "477759",
    "end": "478639"
  },
  {
    "text": "when the vm is powered on",
    "start": "478639",
    "end": "482240"
  },
  {
    "text": "now let's log in to the guest tkg",
    "start": "482639",
    "end": "485599"
  },
  {
    "text": "cluster i just created",
    "start": "485599",
    "end": "487280"
  },
  {
    "text": "by specifying the tanzu kubernetes",
    "start": "487280",
    "end": "489599"
  },
  {
    "text": "cluster name",
    "start": "489599",
    "end": "490639"
  },
  {
    "text": "and namespace",
    "start": "490639",
    "end": "493840"
  },
  {
    "text": "we can also take a look at the nodes to",
    "start": "495440",
    "end": "497599"
  },
  {
    "text": "make sure",
    "start": "497599",
    "end": "498479"
  },
  {
    "text": "we are in the right context here",
    "start": "498479",
    "end": "501840"
  },
  {
    "text": "we can see the single control plane node",
    "start": "501840",
    "end": "504479"
  },
  {
    "text": "and the three worker nodes",
    "start": "504479",
    "end": "507840"
  },
  {
    "text": "now let's create a stateful application",
    "start": "508080",
    "end": "511280"
  },
  {
    "text": "inside the tkg cluster for the purpose",
    "start": "511280",
    "end": "514560"
  },
  {
    "text": "of this demo",
    "start": "514560",
    "end": "515518"
  },
  {
    "text": "i am deploying an application called",
    "start": "515519",
    "end": "517360"
  },
  {
    "text": "yoga by db",
    "start": "517360",
    "end": "518719"
  },
  {
    "text": "which consists of three master nodes and",
    "start": "518719",
    "end": "521360"
  },
  {
    "text": "three worker nodes",
    "start": "521360",
    "end": "522959"
  },
  {
    "text": "each has a persistent volume claim which",
    "start": "522959",
    "end": "526000"
  },
  {
    "text": "will represent",
    "start": "526000",
    "end": "527040"
  },
  {
    "text": "a single virtual volume",
    "start": "527040",
    "end": "530480"
  },
  {
    "text": "we can see that within a few seconds all",
    "start": "531600",
    "end": "534640"
  },
  {
    "text": "pods are up and running",
    "start": "534640",
    "end": "536800"
  },
  {
    "text": "we can access the application ui by",
    "start": "536800",
    "end": "539120"
  },
  {
    "text": "navigating to the service address",
    "start": "539120",
    "end": "541040"
  },
  {
    "text": "and specify the application port",
    "start": "541040",
    "end": "544880"
  },
  {
    "text": "persistent storage is presented through",
    "start": "546320",
    "end": "549120"
  },
  {
    "text": "the vmware csi driver",
    "start": "549120",
    "end": "550959"
  },
  {
    "text": "called cns cns uses existing storage",
    "start": "550959",
    "end": "554800"
  },
  {
    "text": "options for storage provisioning in a",
    "start": "554800",
    "end": "556800"
  },
  {
    "text": "new way",
    "start": "556800",
    "end": "557839"
  },
  {
    "text": "first it is based on storage policies as",
    "start": "557839",
    "end": "560800"
  },
  {
    "text": "we saw before",
    "start": "560800",
    "end": "562000"
  },
  {
    "text": "and furthermore it uses first class",
    "start": "562000",
    "end": "564480"
  },
  {
    "text": "disks",
    "start": "564480",
    "end": "565040"
  },
  {
    "text": "instead of standard disks dell emc power",
    "start": "565040",
    "end": "568880"
  },
  {
    "text": "protect data manager",
    "start": "568880",
    "end": "570399"
  },
  {
    "text": "and power protect dd series appliances",
    "start": "570399",
    "end": "573279"
  },
  {
    "text": "are the industry leading data protection",
    "start": "573279",
    "end": "575360"
  },
  {
    "text": "software",
    "start": "575360",
    "end": "576000"
  },
  {
    "text": "and purpose built hardware you can",
    "start": "576000",
    "end": "578560"
  },
  {
    "text": "deploy",
    "start": "578560",
    "end": "579040"
  },
  {
    "text": "power protect data manager capabilities",
    "start": "579040",
    "end": "581600"
  },
  {
    "text": "for your kubernetes environment",
    "start": "581600",
    "end": "583760"
  },
  {
    "text": "to protect complete applications with",
    "start": "583760",
    "end": "586480"
  },
  {
    "text": "the benefits of application consistency",
    "start": "586480",
    "end": "589040"
  },
  {
    "text": "and the most efficient data reduction",
    "start": "589040",
    "end": "591920"
  },
  {
    "text": "you can do this both",
    "start": "591920",
    "end": "593200"
  },
  {
    "text": "for on premises as well as for a public",
    "start": "593200",
    "end": "596160"
  },
  {
    "text": "cloud deployment",
    "start": "596160",
    "end": "597279"
  },
  {
    "text": "of kubernetes",
    "start": "597279",
    "end": "600160"
  },
  {
    "text": "for this demo we have chosen a",
    "start": "600720",
    "end": "602399"
  },
  {
    "text": "kubernetes deployment in aws",
    "start": "602399",
    "end": "604959"
  },
  {
    "text": "to show the data protection and",
    "start": "604959",
    "end": "606640"
  },
  {
    "text": "management workflows",
    "start": "606640",
    "end": "608959"
  },
  {
    "text": "our sample application is a mysql",
    "start": "608959",
    "end": "611440"
  },
  {
    "text": "namespace",
    "start": "611440",
    "end": "612480"
  },
  {
    "text": "for a wordpress blog",
    "start": "612480",
    "end": "615920"
  },
  {
    "text": "let's take a quick look at the app",
    "start": "615920",
    "end": "617839"
  },
  {
    "text": "namespace that we are protecting",
    "start": "617839",
    "end": "619839"
  },
  {
    "text": "and you can see the details of the parts",
    "start": "619839",
    "end": "622160"
  },
  {
    "text": "pvcs config maps",
    "start": "622160",
    "end": "623760"
  },
  {
    "text": "etc for the application",
    "start": "623760",
    "end": "633519"
  },
  {
    "text": "to enable application consistency we",
    "start": "633519",
    "end": "636160"
  },
  {
    "text": "introduced the concept",
    "start": "636160",
    "end": "637440"
  },
  {
    "text": "of application templates we are already",
    "start": "637440",
    "end": "640399"
  },
  {
    "text": "shipping templates for mysql and mongodb",
    "start": "640399",
    "end": "643279"
  },
  {
    "text": "and more will be added in the future and",
    "start": "643279",
    "end": "645519"
  },
  {
    "text": "you can also modify these or create new",
    "start": "645519",
    "end": "647760"
  },
  {
    "text": "ones yourself",
    "start": "647760",
    "end": "648880"
  },
  {
    "text": "based on the requirements of your",
    "start": "648880",
    "end": "650560"
  },
  {
    "text": "database",
    "start": "650560",
    "end": "652240"
  },
  {
    "text": "in the application template yaml file",
    "start": "652240",
    "end": "654480"
  },
  {
    "text": "the required calls for queries in the",
    "start": "654480",
    "end": "656320"
  },
  {
    "text": "database",
    "start": "656320",
    "end": "657200"
  },
  {
    "text": "are under pre-hooked section and the",
    "start": "657200",
    "end": "659360"
  },
  {
    "text": "unquizzing calls",
    "start": "659360",
    "end": "660800"
  },
  {
    "text": "are under the post hook section the nice",
    "start": "660800",
    "end": "664000"
  },
  {
    "text": "thing about these templates is that",
    "start": "664000",
    "end": "666160"
  },
  {
    "text": "they run agentless meaning the hooks do",
    "start": "666160",
    "end": "668399"
  },
  {
    "text": "not require",
    "start": "668399",
    "end": "669279"
  },
  {
    "text": "any agent to be pushed onto the",
    "start": "669279",
    "end": "670800"
  },
  {
    "text": "production cluster to make these",
    "start": "670800",
    "end": "673279"
  },
  {
    "text": "questing and unquestion calls to use",
    "start": "673279",
    "end": "676480"
  },
  {
    "text": "this template for our application",
    "start": "676480",
    "end": "678320"
  },
  {
    "text": "we'll also make sure that we are using",
    "start": "678320",
    "end": "680399"
  },
  {
    "text": "the right application",
    "start": "680399",
    "end": "681920"
  },
  {
    "text": "label",
    "start": "681920",
    "end": "684320"
  },
  {
    "text": "now let's create an app consistent",
    "start": "686880",
    "end": "688800"
  },
  {
    "text": "protection plan for this mysql",
    "start": "688800",
    "end": "690880"
  },
  {
    "text": "application",
    "start": "690880",
    "end": "692160"
  },
  {
    "text": "we'll go to the power protect data",
    "start": "692160",
    "end": "693680"
  },
  {
    "text": "manager ui and create a protection",
    "start": "693680",
    "end": "696240"
  },
  {
    "text": "policy",
    "start": "696240",
    "end": "697040"
  },
  {
    "text": "for the app using the policy wizard",
    "start": "697040",
    "end": "703839"
  },
  {
    "text": "select kubernetes for application type",
    "start": "708720",
    "end": "712720"
  },
  {
    "text": "leave the default crash consistent",
    "start": "715040",
    "end": "716800"
  },
  {
    "text": "option since the application consistency",
    "start": "716800",
    "end": "719040"
  },
  {
    "text": "is coming",
    "start": "719040",
    "end": "719760"
  },
  {
    "text": "from the template yaml file that we",
    "start": "719760",
    "end": "721760"
  },
  {
    "text": "already assigned to the application",
    "start": "721760",
    "end": "723839"
  },
  {
    "text": "using the appropriate label",
    "start": "723839",
    "end": "727920"
  },
  {
    "text": "here we select the mysql app that we",
    "start": "727920",
    "end": "730320"
  },
  {
    "text": "want the policy to apply",
    "start": "730320",
    "end": "733600"
  },
  {
    "text": "under schedule we specify the backup",
    "start": "738880",
    "end": "741760"
  },
  {
    "text": "frequency",
    "start": "741760",
    "end": "742480"
  },
  {
    "text": "and retention policies",
    "start": "742480",
    "end": "745839"
  },
  {
    "text": "now let us go ahead and initiate a",
    "start": "754320",
    "end": "756320"
  },
  {
    "text": "backup in the backup now",
    "start": "756320",
    "end": "758800"
  },
  {
    "text": "wizard using the policy we just created",
    "start": "758800",
    "end": "773839"
  },
  {
    "text": "once the job is done we can check the",
    "start": "775680",
    "end": "778160"
  },
  {
    "text": "new copy",
    "start": "778160",
    "end": "779200"
  },
  {
    "text": "of the application created on the data",
    "start": "779200",
    "end": "781839"
  },
  {
    "text": "domain target",
    "start": "781839",
    "end": "787440"
  },
  {
    "text": "now let us see how we can use this copy",
    "start": "787440",
    "end": "789680"
  },
  {
    "text": "of the application deployment",
    "start": "789680",
    "end": "791519"
  },
  {
    "text": "to spin it up on an entirely new",
    "start": "791519",
    "end": "793920"
  },
  {
    "text": "kubernetes cluster",
    "start": "793920",
    "end": "795680"
  },
  {
    "text": "let me go back to the data manager ui",
    "start": "795680",
    "end": "798160"
  },
  {
    "text": "and initiate a restore",
    "start": "798160",
    "end": "800160"
  },
  {
    "text": "using the asset restore wizard",
    "start": "800160",
    "end": "804160"
  },
  {
    "text": "you select the cluster to restore the",
    "start": "804160",
    "end": "806000"
  },
  {
    "text": "app to and here",
    "start": "806000",
    "end": "807760"
  },
  {
    "text": "i'm selecting the cluster called target",
    "start": "807760",
    "end": "810079"
  },
  {
    "text": "for the app",
    "start": "810079",
    "end": "810880"
  },
  {
    "text": "to be restored",
    "start": "810880",
    "end": "815839"
  },
  {
    "text": "and here i'm selecting the entire",
    "start": "818959",
    "end": "820720"
  },
  {
    "text": "application to be restored and not just",
    "start": "820720",
    "end": "822560"
  },
  {
    "text": "the database pvcs",
    "start": "822560",
    "end": "825440"
  },
  {
    "text": "you can restore to one of the namespaces",
    "start": "825440",
    "end": "827519"
  },
  {
    "text": "that are already available on the",
    "start": "827519",
    "end": "829279"
  },
  {
    "text": "cluster",
    "start": "829279",
    "end": "830000"
  },
  {
    "text": "or can specify a new namespace",
    "start": "830000",
    "end": "833199"
  },
  {
    "text": "for the restored app",
    "start": "833199",
    "end": "836560"
  },
  {
    "text": "pvcs is already included for restore",
    "start": "838959",
    "end": "842560"
  },
  {
    "text": "i continue and on the summary tab you",
    "start": "842560",
    "end": "845600"
  },
  {
    "text": "can check",
    "start": "845600",
    "end": "846560"
  },
  {
    "text": "the details and hit the restore button",
    "start": "846560",
    "end": "857839"
  },
  {
    "text": "once the restore job is done we can go",
    "start": "865920",
    "end": "868560"
  },
  {
    "text": "back to the command line",
    "start": "868560",
    "end": "869839"
  },
  {
    "text": "of this new cluster and check the newly",
    "start": "869839",
    "end": "872160"
  },
  {
    "text": "created namespace",
    "start": "872160",
    "end": "873760"
  },
  {
    "text": "and all the objects of the application's",
    "start": "873760",
    "end": "876399"
  },
  {
    "text": "stateful set",
    "start": "876399",
    "end": "877920"
  },
  {
    "text": "the parts pvcs config maps etc",
    "start": "877920",
    "end": "881920"
  },
  {
    "text": "thank you for watching",
    "start": "881920",
    "end": "885839"
  }
]