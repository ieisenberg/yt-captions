[
  {
    "text": "so this is the envoy deep-dive session but what we're actually gonna do is we have four different lightning talks so",
    "start": "719",
    "end": "7529"
  },
  {
    "text": "and then we'll you know if there's time at the end we'll do general QA I I think there's some people that thought that",
    "start": "7529",
    "end": "13620"
  },
  {
    "text": "this was another repeat of my talk yesterday which is not so hopefully that's what people would like to hear",
    "start": "13620",
    "end": "21650"
  },
  {
    "text": "and I think in the interest of time but let's just get going so our first talk is going to be Andre",
    "start": "22189",
    "end": "30840"
  },
  {
    "text": "from booking.com [Applause]",
    "start": "30840",
    "end": "38149"
  },
  {
    "text": "okay thank you hi I'm Andre I'm mocking no at common and fit no deploying convoy",
    "start": "38149",
    "end": "45149"
  },
  {
    "text": "or between officer which is a booking.com this presentation is about interesting stuff that we find while",
    "start": "45149",
    "end": "51539"
  },
  {
    "text": "doing this deployment the first talking is about a new service that we are",
    "start": "51539",
    "end": "57840"
  },
  {
    "text": "testing out in production these are statistics that submissions were using to monitor their service as we can see",
    "start": "57840",
    "end": "64948"
  },
  {
    "text": "in this there's border between our hogs and we were getting some requests so",
    "start": "64949",
    "end": "70110"
  },
  {
    "text": "everything seemed fine but when we looked from the edges artistic generated",
    "start": "70110",
    "end": "76020"
  },
  {
    "text": "to invoice on the client side what actually happened was that two hours after we started the test there was",
    "start": "76020",
    "end": "81630"
  },
  {
    "text": "another broken instance the fact is that we did quests and all those were errors so half of the requests okay half of the",
    "start": "81630",
    "end": "87810"
  },
  {
    "text": "bhagavad I don't know how we could find out without if we didn't deploy envoy",
    "start": "87810",
    "end": "93720"
  },
  {
    "text": "before in turn and of case we hadn't although a typical I and I didn't",
    "start": "93720",
    "end": "99659"
  },
  {
    "text": "support system connections and it was making requests across datacenters and this is what happened with the Pinet",
    "start": "99659",
    "end": "105899"
  },
  {
    "text": "time after we deployed a voice from the service in the north case we had the",
    "start": "105899",
    "end": "112970"
  },
  {
    "text": "service it was deployed in two datacenters everything was working fine in the first datacenter in the second one some",
    "start": "112970",
    "end": "119790"
  },
  {
    "text": "requests only some of them were timing out when we try to do the migration",
    "start": "119790",
    "end": "125540"
  },
  {
    "text": "after a bit of investigation what we found out was that the requested of timing how to actually four times slower",
    "start": "125540",
    "end": "131990"
  },
  {
    "text": "or in this dataset in the first one everything was what you find the same requests and this was to Tommy's miss",
    "start": "131990",
    "end": "138530"
  },
  {
    "text": "confirmation of the Santa beast it was using a database from the first data center in the second one in the replays",
    "start": "138530",
    "end": "144230"
  },
  {
    "text": "that of timing out work making multiple copies to the database from one HTTP request we also didn't have any idea",
    "start": "144230",
    "end": "151580"
  },
  {
    "text": "that this was happening before the fourth story is about an old service",
    "start": "151580",
    "end": "158420"
  },
  {
    "text": "that we try to migrate we do not know what I must to set for it so I said we said ok let's looked at all timeouts and",
    "start": "158420",
    "end": "163490"
  },
  {
    "text": "this is what we found it seemed to support time modes but all of them are",
    "start": "163490",
    "end": "168710"
  },
  {
    "text": "set to zero the canoes about this finding is that this time miss was",
    "start": "168710",
    "end": "174260"
  },
  {
    "text": "running like this for more than one even production and nothing ventured happened so that means the service was very very",
    "start": "174260",
    "end": "179480"
  },
  {
    "text": "stable this is the best story this was",
    "start": "179480",
    "end": "184730"
  },
  {
    "text": "happening the development environment over time we have the box for musics that keeps up slow in the development",
    "start": "184730",
    "end": "190880"
  },
  {
    "text": "environment but we had no visibility to even to know where to start looking at",
    "start": "190880",
    "end": "196910"
  },
  {
    "text": "what to start looking and after we deployed avoider we realize that most of",
    "start": "196910",
    "end": "203000"
  },
  {
    "text": "the services or experiencing like latency spikes every minute at the beginning of the minute for a few seconds after a bit of",
    "start": "203000",
    "end": "210740"
  },
  {
    "text": "investigation what we found out there was this con job schedule Ike this minute ly on all the developer machines",
    "start": "210740",
    "end": "218560"
  },
  {
    "text": "this product script before doing what it was supposed to do it was a connecting",
    "start": "218560",
    "end": "224060"
  },
  {
    "text": "pro configuration service that confirmation service bus was used by the rest of the infrastructure and data",
    "start": "224060",
    "end": "229130"
  },
  {
    "text": "slowdowns was coming from the canoe support just finding is that",
    "start": "229130",
    "end": "235430"
  },
  {
    "text": "NTP seems to work very well in our development environment this is how we",
    "start": "235430",
    "end": "244070"
  },
  {
    "text": "pulled out the migration will still be songs try to do all the changes by themselves well some of them shows that",
    "start": "244070",
    "end": "251480"
  },
  {
    "text": "most of them chose to pair with us and all the changes together and some of",
    "start": "251480",
    "end": "256670"
  },
  {
    "text": "them chose to let us do all the changes and this was mainly focuses at work in maintenance model that nobody wanted dog",
    "start": "256670",
    "end": "263660"
  },
  {
    "text": "new motto and the concern that progress by our",
    "start": "263660",
    "end": "268940"
  },
  {
    "text": "colleagues when we try to deploy them for in production was about the sausages like isn't going to eat up all my CP or",
    "start": "268940",
    "end": "275780"
  },
  {
    "text": "my movie another concern was about latency increase at the request when we're going",
    "start": "275780",
    "end": "281510"
  },
  {
    "text": "to be slower compared to the request without envoy and for both those cases we we just collected actual data and",
    "start": "281510",
    "end": "287840"
  },
  {
    "text": "looked at the data and we realized that this is not a problem for us and another",
    "start": "287840",
    "end": "294920"
  },
  {
    "text": "interesting concern was that while we were doing the migration we had the service that had some clients but not all the clients were migrated or we had",
    "start": "294920",
    "end": "301880"
  },
  {
    "text": "the client that was using multiple services and not all those services of migrated and each of them was waiting",
    "start": "301880",
    "end": "307700"
  },
  {
    "text": "for the order to finish the migration [Music] deposit thank you in what case of you",
    "start": "307700",
    "end": "340220"
  },
  {
    "text": "mean for with a void before so we use",
    "start": "340220",
    "end": "349580"
  },
  {
    "text": "statistics form and void in all those cases room for working from problems view statistics from envoy and we sent them to using study to start the export",
    "start": "349580",
    "end": "358730"
  },
  {
    "text": "table and then to parameters yes",
    "start": "358730",
    "end": "366280"
  },
  {
    "text": "that I it depends I think we mean just best howl for for work services like",
    "start": "374240",
    "end": "381030"
  },
  {
    "text": "also number of samples of intense analysis which we have just at sixty seventy percent now machine block",
    "start": "381030",
    "end": "389340"
  },
  {
    "text": "actually my taking one service is not that hard it's a I think it's something that you can do in maximum one hour work",
    "start": "389340",
    "end": "394500"
  },
  {
    "text": "but what we spend more time was also discussed with the semi salons and try to make them understand and that's",
    "start": "394500",
    "end": "399810"
  },
  {
    "text": "what's been more that's what we spend more time because we didn't want to do a change like just do the change like this",
    "start": "399810",
    "end": "405180"
  },
  {
    "text": "without also talking with the colleagues and everything so that's why I like I think we took like two months so far for",
    "start": "405180",
    "end": "411840"
  },
  {
    "text": "us but eighty percent of the time was more talking hi I'm Doug and I'm gonna",
    "start": "411840",
    "end": "430950"
  },
  {
    "text": "talk about building a service mesh with envoy at Squarespace so I thought",
    "start": "430950",
    "end": "436050"
  },
  {
    "text": "starting with a little bit of context would be helpful so if you go back to 2013 we were pretty small less than 50",
    "start": "436050",
    "end": "441330"
  },
  {
    "text": "engineers even less working on infrastructure and it's a typical story",
    "start": "441330",
    "end": "446970"
  },
  {
    "text": "we're building whatever works with a monolith and you know we grow a little",
    "start": "446970",
    "end": "452370"
  },
  {
    "text": "bit more and find out that you know we're kind of dealing with too much firefighting the monolith is kind of",
    "start": "452370",
    "end": "458250"
  },
  {
    "text": "inflexible for our needs 2016 we start to introduce micro services try to build",
    "start": "458250",
    "end": "464820"
  },
  {
    "text": "things to be scalable and reliable last year we have teams building you more micro services working independently",
    "start": "464820",
    "end": "471690"
  },
  {
    "text": "full stack the big thing is that we're introducing self-service infrastructure with kubernetes I'm so a little bit",
    "start": "471690",
    "end": "478770"
  },
  {
    "text": "about our platform so we started building or micro services platform in 2014 we're building Java API servers",
    "start": "478770",
    "end": "485669"
  },
  {
    "text": "running on virtual machines and using console for service discovery we're using a service client library based a",
    "start": "485669",
    "end": "492690"
  },
  {
    "text": "lot on the Netflix open source software stack so that's things like hysterics ribbon and arcs and Eddy",
    "start": "492690",
    "end": "499320"
  },
  {
    "text": "and now we have in progress this migration from VMs to kubernetes",
    "start": "499320",
    "end": "504450"
  },
  {
    "text": "so a little bit about our setup with console so we have our services when they come up they announce their",
    "start": "504450",
    "end": "510790"
  },
  {
    "text": "presence in the console and then a service that's requesting those has its",
    "start": "510790",
    "end": "516010"
  },
  {
    "text": "client library there that's running requesting service instances out of console and then performing the load",
    "start": "516010",
    "end": "521979"
  },
  {
    "text": "balances against the healthy and available service instances we have",
    "start": "521980",
    "end": "528880"
  },
  {
    "text": "console setup for cross data center replication using its built-in gossip",
    "start": "528880",
    "end": "534070"
  },
  {
    "text": "protocols so why did we want to pursue a service mesh I think one of the big",
    "start": "534070",
    "end": "540250"
  },
  {
    "text": "things was that we wanted to take that functionality that we had in our client library that's you know using the",
    "start": "540250",
    "end": "545440"
  },
  {
    "text": "Netflix open source stack and take that and move it out of that library so that it's its own process in the sidecar and",
    "start": "545440",
    "end": "552100"
  },
  {
    "text": "that would give us some advantages like being able to configure and update that process independently of the application",
    "start": "552100",
    "end": "557830"
  },
  {
    "text": "that it serves we also were interested in having advanced operational control through API is that work with that",
    "start": "557830",
    "end": "564580"
  },
  {
    "text": "sidecar we were looking to have improved observability and we really wanted to",
    "start": "564580",
    "end": "570370"
  },
  {
    "text": "open the door to support service development multiple languages historically everything in production",
    "start": "570370",
    "end": "576400"
  },
  {
    "text": "was Java but as the company has been growing there's been a desire to use other languages in production and its",
    "start": "576400",
    "end": "582130"
  },
  {
    "text": "it's already started to happen so we were really kind of behind the curve and wanted to support those other languages",
    "start": "582130",
    "end": "588480"
  },
  {
    "text": "so we chose envoy for a service mesh some of the things that we liked about it was that it's built to run as a",
    "start": "588480",
    "end": "594310"
  },
  {
    "text": "sidecar it can proxy ingress and egress traffic really like the dynamic configuration",
    "start": "594310",
    "end": "600730"
  },
  {
    "text": "API so we could use that to provide service discovery information and do",
    "start": "600730",
    "end": "606490"
  },
  {
    "text": "things like change the routing table and circuit breaker configuration on the on the fly and we thought this would be a",
    "start": "606490",
    "end": "612400"
  },
  {
    "text": "really big upgrade and our capability as operators so how did we go about trying",
    "start": "612400",
    "end": "619900"
  },
  {
    "text": "to incrementally introduce Envoy entire stack so what we came up with was introducing this new",
    "start": "619900",
    "end": "626890"
  },
  {
    "text": "service that we're calling mesh discovery and that's really going to be put in place to front console and then",
    "start": "626890",
    "end": "634000"
  },
  {
    "text": "that uses envoys XDS API the version to API to provide streaming",
    "start": "634000",
    "end": "639310"
  },
  {
    "text": "updates to envoy which is running as a sidecar in our kubernetes pods so our",
    "start": "639310",
    "end": "646090"
  },
  {
    "text": "services that are coming up they're still doing the same thing they've been doing before announcing in the console and then mesh discovery is just pulling",
    "start": "646090",
    "end": "652690"
  },
  {
    "text": "that information out so I wanted to talk a little bit about how we're using this",
    "start": "652690",
    "end": "658630"
  },
  {
    "text": "XDS protocol with console so envoy when it starts up and performs cluster",
    "start": "658630",
    "end": "665050"
  },
  {
    "text": "discovery CDF's request that goes the mesh discovery and that just Maps over really easily to requesting from",
    "start": "665050",
    "end": "673420"
  },
  {
    "text": "consoles catalog to just get a list of the services so we get that list back",
    "start": "673420",
    "end": "678640"
  },
  {
    "text": "from console and one of the things that console has in their API is what they call an index and that represents a",
    "start": "678640",
    "end": "685480"
  },
  {
    "text": "point in time and can be used for long polling to see if there's any updates so we're simply taking that value that we",
    "start": "685480",
    "end": "692050"
  },
  {
    "text": "get in the index and passing that as the version info back to envoy",
    "start": "692050",
    "end": "698460"
  },
  {
    "text": "so after envoy has gotten its initial list of clusters that stream from envoy",
    "start": "698460",
    "end": "706120"
  },
  {
    "text": "the mesh discovery that just remains open and idle in background mesh discovery is polling console you know",
    "start": "706120",
    "end": "713260"
  },
  {
    "text": "continuing to see if that catalog list has anything newer so we're just asking console do you have anything newer than",
    "start": "713260",
    "end": "719110"
  },
  {
    "text": "that index 1 2 3 once console has some new data it sends that back the index is",
    "start": "719110",
    "end": "725260"
  },
  {
    "text": "updated and we just pass all the information back to envoy with a push update and set the new version info",
    "start": "725260",
    "end": "731980"
  },
  {
    "text": "number so that's how it works for CVS the other parts of of XDS are pretty",
    "start": "731980",
    "end": "739870"
  },
  {
    "text": "similar so we're using EDS and that's the same exact strategy just instead",
    "start": "739870",
    "end": "745270"
  },
  {
    "text": "asking console for all of the available endpoints for a service instance and",
    "start": "745270",
    "end": "750490"
  },
  {
    "text": "then for RDS right now we just have a very simple routing table that's just",
    "start": "750490",
    "end": "756430"
  },
  {
    "text": "matching a header value to a cluster name so I've talked about observability",
    "start": "756430",
    "end": "762730"
  },
  {
    "text": "and this screenshot is an example of one of the things that we're currently working on so we're trying to find a",
    "start": "762730",
    "end": "768940"
  },
  {
    "text": "very visual way with envoy to show the listeners that envoy has open over on the left and then",
    "start": "768940",
    "end": "775130"
  },
  {
    "text": "all the clusters that it's recognizing and then finally all the end points for each cluster and we can dynamically set",
    "start": "775130",
    "end": "782120"
  },
  {
    "text": "the colors for the boxes based on various statistics so future work for us",
    "start": "782120",
    "end": "791450"
  },
  {
    "text": "includes trying to build out more orchestration features into our new discovery system so taking that mesh",
    "start": "791450",
    "end": "797990"
  },
  {
    "text": "discovery component really building it up to be the control plane that we that we need so we want to harness that XDS",
    "start": "797990",
    "end": "805310"
  },
  {
    "text": "API so that we can push updates and make traffic routing changes on the fly we",
    "start": "805310",
    "end": "810800"
  },
  {
    "text": "want to build API into that system to abstract away the common operations that",
    "start": "810800",
    "end": "816770"
  },
  {
    "text": "we want from our service mesh and we want to build a dashboard for operators so that they can see all of these",
    "start": "816770",
    "end": "823610"
  },
  {
    "text": "metrics and also be able to go in there and quickly make changes for the really common everyday operations that's it",
    "start": "823610",
    "end": "832970"
  },
  {
    "text": "thank you ok time for questions yeah so",
    "start": "832970",
    "end": "851390"
  },
  {
    "text": "we get the host information from envoy and so you can configure envoy with what",
    "start": "851390",
    "end": "857510"
  },
  {
    "text": "cluster it's in and like a name for that instance so we're receiving the information but right now we're not",
    "start": "857510",
    "end": "863630"
  },
  {
    "text": "doing anything with it but I think it's definitely something that we'll take advantage of in the future so we're",
    "start": "863630",
    "end": "874190"
  },
  {
    "text": "we're using Prometheus so we're just gonna scrape everything that that envoy provides for us the really key ones are",
    "start": "874190",
    "end": "882550"
  },
  {
    "text": "request r/a like response codes five hundreds and Layton sees those are the",
    "start": "882550",
    "end": "889910"
  },
  {
    "text": "big ones for us and I think you know in the future we'll care more about like",
    "start": "889910",
    "end": "895070"
  },
  {
    "text": "exactly where such traffic going and having good ways to drill down and answer those questions",
    "start": "895070",
    "end": "902829"
  },
  {
    "text": "okay all right",
    "start": "904390",
    "end": "913660"
  },
  {
    "text": "Kimball good afternoon today we're gonna",
    "start": "913660",
    "end": "924590"
  },
  {
    "text": "be talking about healthy Oh Kimball my name is Ross kuklinski I'm a staff systems architect at hep D oh hello I'm",
    "start": "924590",
    "end": "931760"
  },
  {
    "text": "here Oh engineer Octavio so we've been",
    "start": "931760",
    "end": "937520"
  },
  {
    "text": "collaborating on for a while now a healthy own Octavio and we announced gimble last week Kimball is a multi",
    "start": "937520",
    "end": "943820"
  },
  {
    "text": "cluster multi-team ingress load balancer built on kubernetes and envoy in contour",
    "start": "943820",
    "end": "949340"
  },
  {
    "text": "and before we get into all the technical and architectural decision decisions we've made I think it's important to",
    "start": "949340",
    "end": "954530"
  },
  {
    "text": "understand octopi oh and Yahoo Japan's infrastructure and why we went ahead and built this project let me talk about",
    "start": "954530",
    "end": "961970"
  },
  {
    "text": "active view and our background quickly the October is US subsidiary of EF to",
    "start": "961970",
    "end": "968840"
  },
  {
    "text": "Japan we cooperate with Japan on core infrastructure from their center to",
    "start": "968840",
    "end": "975770"
  },
  {
    "text": "private crowd we support over hundred applications running on 85,000 physical",
    "start": "975770",
    "end": "983000"
  },
  {
    "text": "servers tender centers and over 50 OpenStack clusters we've started using",
    "start": "983000",
    "end": "990350"
  },
  {
    "text": "kubernetes as well and the number of kubernetes cluster is growing rapidly in",
    "start": "990350",
    "end": "996010"
  },
  {
    "text": "such environment our challenge is application delivery application",
    "start": "996010",
    "end": "1003070"
  },
  {
    "text": "delivery at scale is key to our business we needed Forrester service discovery",
    "start": "1003070",
    "end": "1008740"
  },
  {
    "text": "and cannery deployment capability just provides instant rollback and",
    "start": "1008740",
    "end": "1014130"
  },
  {
    "text": "performance observability Gimpo enables our developers to address these",
    "start": "1014130",
    "end": "1020710"
  },
  {
    "text": "challenges and helps to increase their productivity and optimize system",
    "start": "1020710",
    "end": "1026980"
  },
  {
    "text": "performance we'd like to share more about gimbal architecture and attract to",
    "start": "1026980",
    "end": "1032170"
  },
  {
    "text": "invite Ross Beckett thank you so gimble is meant to be deployed to one",
    "start": "1032170",
    "end": "1039579"
  },
  {
    "text": "or more kubernetes clusters in front of your infrastructure so this is your load balancer you don't necessarily need a",
    "start": "1039579",
    "end": "1044890"
  },
  {
    "text": "cloud load balancer or if you're on Prem and you wanted to have something like a Google or Amazon cloud load balancer you",
    "start": "1044890",
    "end": "1050920"
  },
  {
    "text": "could deploy this to your infrastructure and get similar behavior and one of the interesting things so there's two really",
    "start": "1050920",
    "end": "1056680"
  },
  {
    "text": "three key components to gimble number one is the service discovery we need to pull information from upstream",
    "start": "1056680",
    "end": "1062680"
  },
  {
    "text": "kubernetes and OpenStack clusters and inject that information into gimble so that developers have a unified way to",
    "start": "1062680",
    "end": "1068680"
  },
  {
    "text": "configure their routing rules across all of their services that may be running in different clusters number two is the",
    "start": "1068680",
    "end": "1075550"
  },
  {
    "text": "routing capabilities so hefty earlier this year we built imbel or sorry last year we built gimble which was the first",
    "start": "1075550",
    "end": "1081550"
  },
  {
    "text": "part of our collaboration and gimble is an envoy based ingress controller for kubernetes what",
    "start": "1081550",
    "end": "1087370"
  },
  {
    "text": "sorry contour and then the third part is",
    "start": "1087370",
    "end": "1093520"
  },
  {
    "text": "the monitoring suite so let's dive into some of these things so the first thing was service discovery with our top yo",
    "start": "1093520",
    "end": "1100060"
  },
  {
    "text": "and we've noticed this with a lot of our customers development teams have a namespace in every cluster and they may",
    "start": "1100060",
    "end": "1105400"
  },
  {
    "text": "have applications to ploy it across multiple clusters some of it might be kubernetes some of it might be OpenStack so we needed a way to discover those",
    "start": "1105400",
    "end": "1112090"
  },
  {
    "text": "applications running in upstream clusters now with gimble what we do is we discover those in communities we are",
    "start": "1112090",
    "end": "1118900"
  },
  {
    "text": "just pulling they are grabbing the services and endpoint objects from kubernetes as well as the ingress so our",
    "start": "1118900",
    "end": "1125860"
  },
  {
    "text": "service and end points and we're injecting them into the gimble cluster for OpenStack they don't have service",
    "start": "1125860",
    "end": "1131680"
  },
  {
    "text": "and end points so we're translating the Nova API which gets us our virtual machine IPS imports and the OpenStack L",
    "start": "1131680",
    "end": "1138970"
  },
  {
    "text": "bass so their load balancer as a service API is an OpenStack and we translate those two service and endpoint objects",
    "start": "1138970",
    "end": "1145780"
  },
  {
    "text": "in the gimble cluster so as a developer you can do coop control get services or describe services and it shows all of",
    "start": "1145780",
    "end": "1152410"
  },
  {
    "text": "your services across all clusters and we're also applying metadata from which clusters that they came from so you can",
    "start": "1152410",
    "end": "1157960"
  },
  {
    "text": "see where your traffic is coming from the next aspect is the routing and policy so we built contour which is a",
    "start": "1157960",
    "end": "1167570"
  },
  {
    "text": "Illinois based ingress controller for kerbin Eddy's it's a drop-in replacement",
    "start": "1167570",
    "end": "1173340"
  },
  {
    "text": "for existing ingress controllers so one of the things that we found is the",
    "start": "1173340",
    "end": "1179130"
  },
  {
    "text": "dynamic API envoy is much well better suited for the dynamic environment of kubernetes where we have lots of",
    "start": "1179130",
    "end": "1185220"
  },
  {
    "text": "services and endpoints coming and going being able to hot reload the router configuration on the fly is key",
    "start": "1185220",
    "end": "1191779"
  },
  {
    "text": "however for those of you that have been working with kubernetes you may have noticed that the kubernetes ingress api",
    "start": "1191779",
    "end": "1197039"
  },
  {
    "text": "by default doesn't really cover all the needs that many organizations need two key issues number one it's not multi",
    "start": "1197039",
    "end": "1204929"
  },
  {
    "text": "team compatible so any team that has the ability to create an ingress object in a criminai his cluster could potentially",
    "start": "1204929",
    "end": "1211679"
  },
  {
    "text": "create routes or new domains that impact other teams that's not okay",
    "start": "1211679",
    "end": "1216990"
  },
  {
    "text": "in businesses the second one is the default ingress api doesn't support any",
    "start": "1216990",
    "end": "1222210"
  },
  {
    "text": "advanced features like weight shifting or load balancing or sort of cluster cutoff and it also doesn't support",
    "start": "1222210",
    "end": "1229169"
  },
  {
    "text": "multiple services per out and we have one service per out and in some of the",
    "start": "1229169",
    "end": "1235830"
  },
  {
    "text": "ingress controllers have gone through annotation they try to inject all that into annotations but we wanted to have",
    "start": "1235830",
    "end": "1241260"
  },
  {
    "text": "this built natively into a new API so we have put together a design for a new ingress router API that we're going to",
    "start": "1241260",
    "end": "1247830"
  },
  {
    "text": "be using as contour so contour will be able to speak either the current ingress or you can switch to this new ingress",
    "start": "1247830",
    "end": "1254429"
  },
  {
    "text": "route design we're about to start development on this so we're really excited about that and would love to",
    "start": "1254429",
    "end": "1259919"
  },
  {
    "text": "talk more about that but don't have time today the last fact aspect is",
    "start": "1259919",
    "end": "1264990"
  },
  {
    "text": "observability at the scale that ectopy o is running at they need to have insight into where the traffic is going where",
    "start": "1264990",
    "end": "1270539"
  },
  {
    "text": "are the errors which routes are having problems or is it localized to a specific service across all clusters or",
    "start": "1270539",
    "end": "1276630"
  },
  {
    "text": "is it a single one cluster that's having issues so gimble when we have an out-of-the-box monitoring system built",
    "start": "1276630",
    "end": "1282539"
  },
  {
    "text": "on Prometheus core fauna and alert manager and we include pre-built dashboards now these will be evolving as",
    "start": "1282539",
    "end": "1288960"
  },
  {
    "text": "we move forward with the project as we learn more about operating this system at scale and that really gets us to the next",
    "start": "1288960",
    "end": "1295250"
  },
  {
    "text": "piece where are we on our roadmap so last week we launched this project the two key things was the OpenStack",
    "start": "1295250",
    "end": "1301519"
  },
  {
    "text": "Discoverer and the kubernetes Discoverer we are leveraging the current ingress v1 beta API for managing this and we have",
    "start": "1301519",
    "end": "1309049"
  },
  {
    "text": "some initial Doc's documentation in dashboards looking forward this summer we'll be rolling out the ingress route",
    "start": "1309049",
    "end": "1315309"
  },
  {
    "text": "integration or interest route C or D into contour which is then used in gimbal so that will give us multi team",
    "start": "1315309",
    "end": "1321740"
  },
  {
    "text": "and advanced routing capabilities the other thing is octopus can be going to production with this and that means that",
    "start": "1321740",
    "end": "1328220"
  },
  {
    "text": "we have to test this to meet their performance standards which are quite high so will you will be Tapio and Hep C",
    "start": "1328220",
    "end": "1334970"
  },
  {
    "text": "will be collaborating on performance testing of gimbal which means that we're testing contour which means we're testing envoy to make sure that we can",
    "start": "1334970",
    "end": "1341779"
  },
  {
    "text": "handle all of this at scale now looking forward to this fall version 0.3 one of",
    "start": "1341779",
    "end": "1347690"
  },
  {
    "text": "the biggest sort of drawbacks for some companies with gimbal is right now hep do gimbal requires every pod or virtual",
    "start": "1347690",
    "end": "1354889"
  },
  {
    "text": "machine that's gonna be routed to needs to have a routable IP from the gimbal cluster so if we're using an overlay",
    "start": "1354889",
    "end": "1361039"
  },
  {
    "text": "network in your career Nets cluster this isn't gonna work for you yet but we know this is a deficiency for organisations",
    "start": "1361039",
    "end": "1367850"
  },
  {
    "text": "that may be running in some of the cloud providers so that's an aspect that we're working on the other piece is being able",
    "start": "1367850",
    "end": "1372950"
  },
  {
    "text": "to deploy this without a harbor load balancer in front of it at launch october low balance is in place but",
    "start": "1372950",
    "end": "1379789"
  },
  {
    "text": "looking forward there's really no reason that we need to have those hardware load balancers one of the things that we",
    "start": "1379789",
    "end": "1385129"
  },
  {
    "text": "could do is we could leverage something like metal lb or VR erp integration to",
    "start": "1385129",
    "end": "1390379"
  },
  {
    "text": "allow the on the gimbal clusters to broadcast the virtual IPS that they can serve traffic to and that way you can",
    "start": "1390379",
    "end": "1396980"
  },
  {
    "text": "easily remove the hover load balancers and you have fairly have a cloud native load balancer running in your bare metal",
    "start": "1396980",
    "end": "1402799"
  },
  {
    "text": "infrastructure or if you're running across multiple clouds you can still have a consistent load balancing",
    "start": "1402799",
    "end": "1407960"
  },
  {
    "text": "platform that will allow you to operate across multiple kubernetes clusters no matter which cloud you're in and that's",
    "start": "1407960",
    "end": "1414529"
  },
  {
    "text": "it thank you",
    "start": "1414529",
    "end": "1417250"
  },
  {
    "text": "and I think we've got time for two questions yes sir can you repeat your",
    "start": "1420340",
    "end": "1433610"
  },
  {
    "text": "question because I'm gonna repeat it two but I just want to make sure I fully understood great question so so the",
    "start": "1433610",
    "end": "1451730"
  },
  {
    "text": "question is if we're doing these advanced routing capabilities right now if you make a change your traffic and",
    "start": "1451730",
    "end": "1456980"
  },
  {
    "text": "disappear instantly one of the things that we've done with this ingress route design and we're doing more talks in the future about this I mean definitely",
    "start": "1456980",
    "end": "1463220"
  },
  {
    "text": "happy to talk afterwards is we're tracking ingress and treating it sort of like DNS delegation so you have your",
    "start": "1463220",
    "end": "1471830"
  },
  {
    "text": "route domain or your route ingress and so I own wapt.com and hefty comm and",
    "start": "1471830",
    "end": "1479150"
  },
  {
    "text": "maybe I am responsible for our main landing page so I have that in my namespace I can delegate that to I can",
    "start": "1479150",
    "end": "1485540"
  },
  {
    "text": "delegate /blog to the marketing team and inside their namespace they'll have",
    "start": "1485540",
    "end": "1491179"
  },
  {
    "text": "another ingress object that they manage and if they can delegate to themselves they can have a Bluegreen ingress so",
    "start": "1491179",
    "end": "1498290"
  },
  {
    "text": "they have their top-level that manages inside their namespace it can have a point or two that actually serves the",
    "start": "1498290",
    "end": "1504530"
  },
  {
    "text": "traffic and it points to two other ingress routes so you switch one if your traffic blackhole's",
    "start": "1504530",
    "end": "1510230"
  },
  {
    "text": "you switch back one more question no",
    "start": "1510230",
    "end": "1517070"
  },
  {
    "text": "more questions up there we go",
    "start": "1517070",
    "end": "1521649"
  },
  {
    "text": "so we do HTTP and HTTPS in terms of so if we're focusing on l7 load balancing",
    "start": "1524870",
    "end": "1531690"
  },
  {
    "text": "at this point may we eventually move lower the stack and support l3 or l4 low balancing maybe but it's not a priority",
    "start": "1531690",
    "end": "1538470"
  },
  {
    "text": "today and if that is something that you are interested in come talk to me great thank you spire and envoy",
    "start": "1538470",
    "end": "1559070"
  },
  {
    "text": "thanks Matt just the level set quick show of hands who here today is using TLS with envoy right now okay so for the",
    "start": "1559070",
    "end": "1568830"
  },
  {
    "text": "four people who put your hand up this talk is for you for everyone else shame",
    "start": "1568830",
    "end": "1575210"
  },
  {
    "text": "that Eli seriously is quite hard has his advancing slides man how do I do that",
    "start": "1575360",
    "end": "1580669"
  },
  {
    "text": "just presenter TLS is hard and hopefully spark and help you make it easier if",
    "start": "1580669",
    "end": "1587370"
  },
  {
    "text": "it's something you're trying to do so envoy supports em TLS out of the box it's a pretty neat feature it's used",
    "start": "1587370",
    "end": "1594330"
  },
  {
    "text": "really for two reasons one of them is confidentiality that's usually what you think of when you hear em TLS or TLS",
    "start": "1594330",
    "end": "1600110"
  },
  {
    "text": "encrypted on the wire but the other thing it gives you is identity because you need to establish the identity of",
    "start": "1600110",
    "end": "1605340"
  },
  {
    "text": "each of the the to connecting parties the way you do that is with a symmetric",
    "start": "1605340",
    "end": "1612809"
  },
  {
    "text": "keys keys and certificates and you know that's pretty easy to set up with envoy",
    "start": "1612809",
    "end": "1618299"
  },
  {
    "text": "you can stick them on disk and you can add the other relevant files to to envoy",
    "start": "1618299",
    "end": "1625440"
  },
  {
    "text": "configure envoy so Jason the identity of the the service which is important if",
    "start": "1625440",
    "end": "1632490"
  },
  {
    "text": "you want to verify who you're connecting to it's usually there's different ways that the x.509 certificate format allows",
    "start": "1632490",
    "end": "1638460"
  },
  {
    "text": "you to encode it it can be in the distinguished name it can be in the sand there's different strategies there an",
    "start": "1638460",
    "end": "1644940"
  },
  {
    "text": "envoy supports quite a few of them so it's easy enough to set up the challenge",
    "start": "1644940",
    "end": "1649950"
  },
  {
    "text": "will with all of this stuff though is you know how do you do it at scale when it's a test environment it's easy",
    "start": "1649950",
    "end": "1656230"
  },
  {
    "text": "enough to just create these things and stick them on a disk somewhere when you're in a production environment first of all you have new certificates sorry",
    "start": "1656230",
    "end": "1662560"
  },
  {
    "text": "new services being added often dynamically and certainly frequently and then on top of that you you need to be",
    "start": "1662560",
    "end": "1668770"
  },
  {
    "text": "able to rotate these credentials or you should be able to rotate these credentials recently frequently so start",
    "start": "1668770",
    "end": "1674500"
  },
  {
    "text": "the process of manually creating these things and sticking them on disk quite apart from potentially exposing exposing",
    "start": "1674500",
    "end": "1681580"
  },
  {
    "text": "holes in your certificate supply chain it also simply becomes cumbersome and it's something that's quite amenable to",
    "start": "1681580",
    "end": "1687760"
  },
  {
    "text": "automation so one answer to this which",
    "start": "1687760",
    "end": "1693310"
  },
  {
    "text": "we've been working on at Scytale along with a broader community is a project called spire spire stands first the",
    "start": "1693310",
    "end": "1700300"
  },
  {
    "text": "spiffy runtime environment and spiffy is a specification that defines the certificate formats and a set of API is",
    "start": "1700300",
    "end": "1707640"
  },
  {
    "text": "spires run as an agent and a server the agent exposes a thing called the",
    "start": "1707640",
    "end": "1712690"
  },
  {
    "text": "workload API which a service like Envoy for example can call into to retrieve",
    "start": "1712690",
    "end": "1718770"
  },
  {
    "text": "firstly its actual identity in the form of a string and then more usefully for us x.509 formatted crypto material that",
    "start": "1718770",
    "end": "1726370"
  },
  {
    "text": "it can use to establish an empty LS connection or for that matter maybe sign a job token or some other case because",
    "start": "1726370",
    "end": "1733030"
  },
  {
    "text": "it's an API it's programmatic and that means you're you're in a position now to start automating your certificate",
    "start": "1733030",
    "end": "1738490"
  },
  {
    "text": "issuance and these things have a ideally short-lived but configurable TTL so you",
    "start": "1738490",
    "end": "1744280"
  },
  {
    "text": "can rotate these things automatically the spire server excellent",
    "start": "1744280",
    "end": "1750880"
  },
  {
    "text": "the spire server maintains a registry of what are called attestation policies which briefly are the conditions under",
    "start": "1750880",
    "end": "1758350"
  },
  {
    "text": "which a given workload in this case are given envoy proxy should actually be issued a issued an identity and issued",
    "start": "1758350",
    "end": "1766210"
  },
  {
    "text": "certificates for that identity the the selector language and the selector types you can use is actually very configurable within spire and there's a",
    "start": "1766210",
    "end": "1772570"
  },
  {
    "text": "modular framework for building more but you can describe this in any number of different ways including by the infos by",
    "start": "1772570",
    "end": "1778870"
  },
  {
    "text": "the the kernel level information on where the workload is running say peered",
    "start": "1778870",
    "end": "1784360"
  },
  {
    "text": "or cubanelle or kubernetes level reference like a kubernetes namespace or pod spec",
    "start": "1784360",
    "end": "1790370"
  },
  {
    "text": "metadata but you can also describe the infrastructure this thing is running on so is the nodes that contains this",
    "start": "1790370",
    "end": "1796190"
  },
  {
    "text": "kernel running in a particular Amazon security group for example another bunch",
    "start": "1796190",
    "end": "1801260"
  },
  {
    "text": "of talks that go into that in more detail the identity is info spiffy is encoded in the the sand in the spiffy",
    "start": "1801260",
    "end": "1808580"
  },
  {
    "text": "certificate again a lot more there's plenty of material on how that's set up and structured if you're interested",
    "start": "1808580",
    "end": "1815110"
  },
  {
    "text": "the only challenge here with getting this to work with envoy is envoy does not know about the workload API and so",
    "start": "1815110",
    "end": "1821270"
  },
  {
    "text": "usefully there's a tool that is also available on the spiffy repository called the spiffy helper this is",
    "start": "1821270",
    "end": "1827420"
  },
  {
    "text": "basically just a simple script that you run in the same security domain and you know usually that usually adjacent to",
    "start": "1827420",
    "end": "1834350"
  },
  {
    "text": "envoy it's a sidecar to the sidecar if you will and basically what this thing does is it periodically calls into the",
    "start": "1834350",
    "end": "1841040"
  },
  {
    "text": "workload API retrieves the certificates via the API and sticks them on disk it",
    "start": "1841040",
    "end": "1846500"
  },
  {
    "text": "can track the TTL of these things and rotate them as well and crucially for Envoy when you rotate your certificates",
    "start": "1846500",
    "end": "1852440"
  },
  {
    "text": "you need to signal to envoy that you've rotated your key material and this by the spiffy helper sorry can do that as",
    "start": "1852440",
    "end": "1858440"
  },
  {
    "text": "well and then once you have this in place you now have programmatically",
    "start": "1858440",
    "end": "1865130"
  },
  {
    "text": "delivered key material that's been defined by a policy rather than something that you've had to manually generate and set up the only thing that",
    "start": "1865130",
    "end": "1872420"
  },
  {
    "text": "remains then is to is to start applying access rules to this again a rich set of",
    "start": "1872420",
    "end": "1878510"
  },
  {
    "text": "discussion that could happen around that but if you want to do it very easily within an envoy JSON file you just add a couple of lines to describe the the sand",
    "start": "1878510",
    "end": "1885950"
  },
  {
    "text": "of the spiffy IDs that you want to be able to connect to an incoming proxy and that's it except to say there's a",
    "start": "1885950",
    "end": "1892430"
  },
  {
    "text": "there's actually this slide is very misleading for one it references the SDS which is obsolete now the there's a lot",
    "start": "1892430",
    "end": "1900260"
  },
  {
    "text": "of work to do in this space but one of the first things we want to do is is have a nicer bundling between the the",
    "start": "1900260",
    "end": "1906500"
  },
  {
    "text": "XDS v2 API s and the Speier helper so that we can do this more dynamically without having things flying on disk in",
    "start": "1906500",
    "end": "1913100"
  },
  {
    "text": "in unsafe ways and plenty of links here if you if you want to learn more about this stuff and of",
    "start": "1913100",
    "end": "1918820"
  },
  {
    "text": "course you can come and ask me as well thanks I think we have time for two",
    "start": "1918820",
    "end": "1926860"
  },
  {
    "text": "questions awesome",
    "start": "1926860",
    "end": "1933610"
  },
  {
    "text": "done thanks Pat oh sorry so it's",
    "start": "1933610",
    "end": "1942100"
  },
  {
    "text": "actually configurable this is where the sort of policy language comes in so it depends on the environment that you're running your workload and and envoy in",
    "start": "1942100",
    "end": "1947950"
  },
  {
    "text": "so you first of all would use some sort of infrastructure describe descriptor typically so that might be an AWS ASG it",
    "start": "1947950",
    "end": "1956350"
  },
  {
    "text": "might actually be something specific to that machine so if you have a TPM for example with a private key in it you can",
    "start": "1956350",
    "end": "1961659"
  },
  {
    "text": "sign a nonce and use the corresponding public key to identify the machine so that's one level and then within the",
    "start": "1961659",
    "end": "1967779"
  },
  {
    "text": "machine it really depends on if you have any middleware and how you're doing that so if you're just running something on a",
    "start": "1967779",
    "end": "1973419"
  },
  {
    "text": "on Linux inside that machine you might use a unit like a UID or a GID to",
    "start": "1973419",
    "end": "1979869"
  },
  {
    "text": "identify it if you're running it inside a if that machine is actually a kubernetes node there's a plug-in that",
    "start": "1979869",
    "end": "1985720"
  },
  {
    "text": "will talk to the couplet and pull out the pod spec metadata and say well we're",
    "start": "1985720",
    "end": "1992049"
  },
  {
    "text": "identifying you you know is this process that's calling me something that you've said you're old and if so like give me",
    "start": "1992049",
    "end": "1997899"
  },
  {
    "text": "this pod spec metadata or about it we actually use a unit the API itself is a UNIX domain socket so what spire is",
    "start": "1997899",
    "end": "2003929"
  },
  {
    "text": "doing when workload calls that API is it interrogate the basically interrogate",
    "start": "2003929",
    "end": "2008940"
  },
  {
    "text": "the kernel and says who is the core of this and the kernel will give it back a PID and a G ID and a few other pieces",
    "start": "2008940",
    "end": "2016518"
  },
  {
    "text": "cool thank you again I think I think that was the smoothest set of lightning",
    "start": "2017869",
    "end": "2023129"
  },
  {
    "text": "talks that I've ever seen that was great we have like five minutes so now we can go into the ask me anything portion so",
    "start": "2023129",
    "end": "2030110"
  },
  {
    "text": "shoot",
    "start": "2030110",
    "end": "2033110"
  },
  {
    "text": "a lot of traction as a proxy and therefore it's gonna be a lot more",
    "start": "2036100",
    "end": "2041230"
  },
  {
    "text": "feature requests what what's your vision for envoy in terms of yeah that's a",
    "start": "2041230",
    "end": "2058210"
  },
  {
    "text": "that's a great question I I think what we're trying to do and we've held pretty",
    "start": "2058210",
    "end": "2063520"
  },
  {
    "text": "strong so far from a project perspective on this is to kind of keep with a",
    "start": "2063520",
    "end": "2069790"
  },
  {
    "text": "unified API so this XDS API so instead of going and supporting kubernetes CR DS and like",
    "start": "2069790",
    "end": "2078070"
  },
  {
    "text": "console and the 87 other systems out there we've kind of set the hard line in the sand which is that you know if this",
    "start": "2078070",
    "end": "2084790"
  },
  {
    "text": "is the API the Envoy supports and the people want to use it they basically have to write to this API and in the",
    "start": "2084790",
    "end": "2091480"
  },
  {
    "text": "beginning of the project I was concerned that that was going to be a non-starter and that people would complain about why",
    "start": "2091480",
    "end": "2097900"
  },
  {
    "text": "don't you support console or these seven things and as it turns out it's actually",
    "start": "2097900",
    "end": "2103000"
  },
  {
    "text": "become a a selling point and I I think people the api's I've been really",
    "start": "2103000",
    "end": "2109390"
  },
  {
    "text": "pleased with how we've evolved them I think people enjoy actually using them and I think that's the way that we keep",
    "start": "2109390",
    "end": "2115720"
  },
  {
    "text": "it from getting totally out of control so if people want to do their custom stuff you know they're gonna write to",
    "start": "2115720",
    "end": "2121000"
  },
  {
    "text": "the API they basically have to write their own adaptors from a feature perspective I think where we see the",
    "start": "2121000",
    "end": "2128440"
  },
  {
    "text": "project going is you know kind of the way that I look at it is my vision is",
    "start": "2128440",
    "end": "2134950"
  },
  {
    "text": "that envoy will run everywhere but that no one needs to know we're on boy actually runs so I think that there's",
    "start": "2134950",
    "end": "2140320"
  },
  {
    "text": "going to be a whole suite of systems whether it's contour or you know there's there's 10 or 12 different projects now",
    "start": "2140320",
    "end": "2146800"
  },
  {
    "text": "and you know lots of companies that are using envoy I don't I I see envoy as a",
    "start": "2146800",
    "end": "2152140"
  },
  {
    "text": "building block that gets used in larger systems so you know I think from a",
    "start": "2152140",
    "end": "2157720"
  },
  {
    "text": "feature creep perspective we're gonna do what it takes as long as it fits within the API but we're not gonna go out of",
    "start": "2157720",
    "end": "2163810"
  },
  {
    "text": "our way to support like every different possible use case it has to be kind of that at core use case that is useful to more",
    "start": "2163810",
    "end": "2171010"
  },
  {
    "text": "than one customer basically yeah and and",
    "start": "2171010",
    "end": "2178150"
  },
  {
    "text": "you know that's a constant struggle and there are things for example that I would like to never do so I don't know",
    "start": "2178150",
    "end": "2184210"
  },
  {
    "text": "that we'll ever implement cashing in envoy because why would we not use varnish like varnish works great why",
    "start": "2184210",
    "end": "2190089"
  },
  {
    "text": "would we implement a full web server and envoy and your NEX works great right so I think that's where we have to draw",
    "start": "2190089",
    "end": "2195520"
  },
  {
    "text": "those lines oh so I mean you know",
    "start": "2195520",
    "end": "2214569"
  },
  {
    "text": "there's there's other options these days like whether it's something like Swift or rust or something like that right you",
    "start": "2214569",
    "end": "2221680"
  },
  {
    "text": "know and all of these languages evolve but you know from my perspective when we",
    "start": "2221680",
    "end": "2227349"
  },
  {
    "text": "were in 2015 in choosing a language in the ecosystem my goal is to get stuff",
    "start": "2227349",
    "end": "2233680"
  },
  {
    "text": "done as fast as possible and the C++ ecosystem while not perfect by any means no tool is perfect it allows a large",
    "start": "2233680",
    "end": "2242170"
  },
  {
    "text": "number of programmers to get stuff done relatively quickly at high performance as teasing no teasing but you know as as",
    "start": "2242170",
    "end": "2253690"
  },
  {
    "text": "like I I'm under no illusion that C++ is going to last forever right so I mean as",
    "start": "2253690",
    "end": "2259660"
  },
  {
    "text": "as some of the tools again I think Swift and rust are both very interesting and",
    "start": "2259660",
    "end": "2266170"
  },
  {
    "text": "five years from now I personally think that they're gonna displace a lot of C++",
    "start": "2266170",
    "end": "2272819"
  },
  {
    "text": "no other questions cool well thank you for coming and I'll be around if anyone",
    "start": "2275520",
    "end": "2282309"
  },
  {
    "text": "wants to ask any one-on-one stuff thanks a lot [Applause]",
    "start": "2282309",
    "end": "2288050"
  }
]