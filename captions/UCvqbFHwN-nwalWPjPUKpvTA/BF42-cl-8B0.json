[
  {
    "text": "hello everyone uh you could all hear me",
    "start": "240",
    "end": "2480"
  },
  {
    "text": "okay",
    "start": "2480",
    "end": "4080"
  },
  {
    "text": "okay",
    "start": "4080",
    "end": "5200"
  },
  {
    "text": "uh so yeah so the title of my talk is",
    "start": "5200",
    "end": "7520"
  },
  {
    "text": "portable bpf with core",
    "start": "7520",
    "end": "10160"
  },
  {
    "text": "uh i am on the open source engineering",
    "start": "10160",
    "end": "12880"
  },
  {
    "text": "team at aqua",
    "start": "12880",
    "end": "14719"
  },
  {
    "text": "i'm from brooklyn new york he's my",
    "start": "14719",
    "end": "16240"
  },
  {
    "text": "pronouns you might see me on the ebpf",
    "start": "16240",
    "end": "18720"
  },
  {
    "text": "slack with uh this little crab guy",
    "start": "18720",
    "end": "22400"
  },
  {
    "text": "so here's an outline of my talk followed",
    "start": "22400",
    "end": "24800"
  },
  {
    "text": "by this slide we're going to be talking",
    "start": "24800",
    "end": "26480"
  },
  {
    "text": "about",
    "start": "26480",
    "end": "27760"
  },
  {
    "text": "my experience as the one of the",
    "start": "27760",
    "end": "30160"
  },
  {
    "text": "maintainers of tracy",
    "start": "30160",
    "end": "32398"
  },
  {
    "text": "we'll talk about what tracy is",
    "start": "32399",
    "end": "34559"
  },
  {
    "text": "our goal for distributing it and how cre",
    "start": "34559",
    "end": "37440"
  },
  {
    "text": "helps us achieve that goal",
    "start": "37440",
    "end": "40559"
  },
  {
    "text": "and we're going to look towards the",
    "start": "41120",
    "end": "42800"
  },
  {
    "text": "future of next steps in ebpf development",
    "start": "42800",
    "end": "46640"
  },
  {
    "text": "especially as it relates to portability",
    "start": "46640",
    "end": "49200"
  },
  {
    "text": "and distribution and how cre fits into",
    "start": "49200",
    "end": "51840"
  },
  {
    "text": "that",
    "start": "51840",
    "end": "54079"
  },
  {
    "text": "so",
    "start": "54239",
    "end": "55680"
  },
  {
    "text": "the primary project i work on is tracy",
    "start": "55680",
    "end": "58719"
  },
  {
    "text": "it's a ebpf project",
    "start": "58719",
    "end": "62320"
  },
  {
    "text": "that",
    "start": "62719",
    "end": "63840"
  },
  {
    "text": "is",
    "start": "63840",
    "end": "65040"
  },
  {
    "text": "it handles runtime detection",
    "start": "65040",
    "end": "67280"
  },
  {
    "text": "and forensics using ebpf and the way",
    "start": "67280",
    "end": "70320"
  },
  {
    "text": "that works is it uses hundreds of",
    "start": "70320",
    "end": "72400"
  },
  {
    "text": "different events",
    "start": "72400",
    "end": "73920"
  },
  {
    "text": "things like system calls trace points",
    "start": "73920",
    "end": "76400"
  },
  {
    "text": "network tc hooks lsm hooks all things",
    "start": "76400",
    "end": "78720"
  },
  {
    "text": "that you've learned",
    "start": "78720",
    "end": "79920"
  },
  {
    "text": "about earlier today",
    "start": "79920",
    "end": "81680"
  },
  {
    "text": "and if you're looking for a simple tool",
    "start": "81680",
    "end": "83520"
  },
  {
    "text": "to use to gain a ton of visibility into",
    "start": "83520",
    "end": "86320"
  },
  {
    "text": "your system",
    "start": "86320",
    "end": "87680"
  },
  {
    "text": "tracy is the kind of",
    "start": "87680",
    "end": "89759"
  },
  {
    "text": "drop-in tool that that can let you do",
    "start": "89759",
    "end": "92479"
  },
  {
    "text": "that",
    "start": "92479",
    "end": "94079"
  },
  {
    "text": "and it also lets you apply policy on top",
    "start": "94079",
    "end": "96799"
  },
  {
    "text": "of that",
    "start": "96799",
    "end": "98240"
  },
  {
    "text": "and in this example we could see uh an",
    "start": "98240",
    "end": "100799"
  },
  {
    "text": "exec ve system call that's being traced",
    "start": "100799",
    "end": "103119"
  },
  {
    "text": "so we're we're specifying exactly e to",
    "start": "103119",
    "end": "105439"
  },
  {
    "text": "be traced uh and where we have all this",
    "start": "105439",
    "end": "108079"
  },
  {
    "text": "information about it so we have the",
    "start": "108079",
    "end": "110079"
  },
  {
    "text": "actual command line that",
    "start": "110079",
    "end": "111840"
  },
  {
    "text": "caused this exact v to trigger",
    "start": "111840",
    "end": "115600"
  },
  {
    "text": "we have the time stamp we have",
    "start": "115600",
    "end": "117840"
  },
  {
    "text": "process id parent process id all of this",
    "start": "117840",
    "end": "120640"
  },
  {
    "text": "additional context",
    "start": "120640",
    "end": "122320"
  },
  {
    "text": "so it's a lot of",
    "start": "122320",
    "end": "124880"
  },
  {
    "text": "reading of memory in the kernel that's",
    "start": "124880",
    "end": "126719"
  },
  {
    "text": "essentially the primary thing that tracy",
    "start": "126719",
    "end": "128879"
  },
  {
    "text": "does",
    "start": "128879",
    "end": "131119"
  },
  {
    "text": "so the problem that we've observed while",
    "start": "134640",
    "end": "136959"
  },
  {
    "text": "developing tracy",
    "start": "136959",
    "end": "138560"
  },
  {
    "text": "is that",
    "start": "138560",
    "end": "140080"
  },
  {
    "text": "from kernel version to kernel version",
    "start": "140080",
    "end": "142000"
  },
  {
    "text": "there is",
    "start": "142000",
    "end": "143760"
  },
  {
    "text": "there becomes differences in",
    "start": "143760",
    "end": "145840"
  },
  {
    "text": "uh data structures as we're as we're",
    "start": "145840",
    "end": "147920"
  },
  {
    "text": "reading them",
    "start": "147920",
    "end": "149599"
  },
  {
    "text": "so in this example here we could see",
    "start": "149599",
    "end": "151840"
  },
  {
    "text": "that there",
    "start": "151840",
    "end": "153360"
  },
  {
    "text": "is a different field that we're reading",
    "start": "153360",
    "end": "156000"
  },
  {
    "text": "in the task struct",
    "start": "156000",
    "end": "158319"
  },
  {
    "text": "for kernels before 419 and after that",
    "start": "158319",
    "end": "160800"
  },
  {
    "text": "we're reading something different",
    "start": "160800",
    "end": "162560"
  },
  {
    "text": "so our initial approach to handling",
    "start": "162560",
    "end": "165280"
  },
  {
    "text": "these differences is to",
    "start": "165280",
    "end": "167599"
  },
  {
    "text": "have at run time this check to see",
    "start": "167599",
    "end": "171280"
  },
  {
    "text": "what kernel version we're dealing with",
    "start": "171280",
    "end": "173519"
  },
  {
    "text": "and",
    "start": "173519",
    "end": "174239"
  },
  {
    "text": "read from it accordingly",
    "start": "174239",
    "end": "176480"
  },
  {
    "text": "this of course has flaws",
    "start": "176480",
    "end": "179280"
  },
  {
    "text": "one being that sometimes fields are",
    "start": "179280",
    "end": "181200"
  },
  {
    "text": "renamed or completely removed so we",
    "start": "181200",
    "end": "183280"
  },
  {
    "text": "could run into errors where fields don't",
    "start": "183280",
    "end": "185200"
  },
  {
    "text": "exist so the code won't compile properly",
    "start": "185200",
    "end": "188239"
  },
  {
    "text": "against the headers that we're compiling",
    "start": "188239",
    "end": "189760"
  },
  {
    "text": "with",
    "start": "189760",
    "end": "191360"
  },
  {
    "text": "also it's just a real pain in the butt",
    "start": "191360",
    "end": "194159"
  },
  {
    "text": "to deal with",
    "start": "194159",
    "end": "195519"
  },
  {
    "text": "when we want to",
    "start": "195519",
    "end": "197040"
  },
  {
    "text": "support all these different",
    "start": "197040",
    "end": "198159"
  },
  {
    "text": "distributions",
    "start": "198159",
    "end": "199440"
  },
  {
    "text": "and all the versions of those",
    "start": "199440",
    "end": "200640"
  },
  {
    "text": "distributions",
    "start": "200640",
    "end": "202159"
  },
  {
    "text": "and if you're not paying attention to",
    "start": "202159",
    "end": "204560"
  },
  {
    "text": "every mailing list and",
    "start": "204560",
    "end": "207920"
  },
  {
    "text": "looking at every diff and every patch",
    "start": "208000",
    "end": "210239"
  },
  {
    "text": "it's hard to keep track of all the all",
    "start": "210239",
    "end": "212560"
  },
  {
    "text": "the differences in versions uh not to",
    "start": "212560",
    "end": "214879"
  },
  {
    "text": "mention if we have somebody that's",
    "start": "214879",
    "end": "216879"
  },
  {
    "text": "running a custom kernel you know i'm not",
    "start": "216879",
    "end": "218640"
  },
  {
    "text": "going to have a check saying like if",
    "start": "218640",
    "end": "220720"
  },
  {
    "text": "we're",
    "start": "220720",
    "end": "221680"
  },
  {
    "text": "running on grant's custom gen 2 kernel",
    "start": "221680",
    "end": "224879"
  },
  {
    "text": "then read from this field",
    "start": "224879",
    "end": "228400"
  },
  {
    "text": "so",
    "start": "229840",
    "end": "230959"
  },
  {
    "text": "this is one approach that we've taken",
    "start": "230959",
    "end": "233439"
  },
  {
    "text": "and clearly has it has its flaws",
    "start": "233439",
    "end": "237360"
  },
  {
    "text": "in addition to that what we were doing",
    "start": "237360",
    "end": "239519"
  },
  {
    "text": "is doing the same thing that bcc does",
    "start": "239519",
    "end": "242159"
  },
  {
    "text": "which is build on the",
    "start": "242159",
    "end": "244720"
  },
  {
    "text": "kernel that we're deploying our project",
    "start": "244720",
    "end": "246239"
  },
  {
    "text": "to so",
    "start": "246239",
    "end": "247840"
  },
  {
    "text": "as we deploy",
    "start": "247840",
    "end": "249360"
  },
  {
    "text": "or as a user picks up our",
    "start": "249360",
    "end": "252239"
  },
  {
    "text": "picks up tracy",
    "start": "252239",
    "end": "253599"
  },
  {
    "text": "and they run it for the first time it",
    "start": "253599",
    "end": "255360"
  },
  {
    "text": "would look for their kernel headers",
    "start": "255360",
    "end": "257280"
  },
  {
    "text": "build against those",
    "start": "257280",
    "end": "258799"
  },
  {
    "text": "um",
    "start": "258799",
    "end": "260239"
  },
  {
    "text": "and then and then run from there and",
    "start": "260239",
    "end": "261759"
  },
  {
    "text": "cache it somewhere",
    "start": "261759",
    "end": "263680"
  },
  {
    "text": "but this is of course an issue because",
    "start": "263680",
    "end": "265759"
  },
  {
    "text": "you know we would get bug reports about",
    "start": "265759",
    "end": "268479"
  },
  {
    "text": "tracy not being able to be built because",
    "start": "268479",
    "end": "271360"
  },
  {
    "text": "let's say the kernel headers are missing",
    "start": "271360",
    "end": "273120"
  },
  {
    "text": "or you know perhaps we just",
    "start": "273120",
    "end": "275520"
  },
  {
    "text": "aren't keeping track of all the",
    "start": "275520",
    "end": "276639"
  },
  {
    "text": "different kernel header versions for",
    "start": "276639",
    "end": "278400"
  },
  {
    "text": "every major distro like we would get you",
    "start": "278400",
    "end": "280560"
  },
  {
    "text": "know we don't want to have to support",
    "start": "280560",
    "end": "282720"
  },
  {
    "text": "scientific linux sex or something like",
    "start": "282720",
    "end": "285680"
  },
  {
    "text": "that like something very specific",
    "start": "285680",
    "end": "288880"
  },
  {
    "text": "so what do we want we want to be able to",
    "start": "288880",
    "end": "291040"
  },
  {
    "text": "write bpf code",
    "start": "291040",
    "end": "292880"
  },
  {
    "text": "without worrying about kernel version",
    "start": "292880",
    "end": "295360"
  },
  {
    "text": "differences we want to be able to",
    "start": "295360",
    "end": "297360"
  },
  {
    "text": "distribute the bpf object where we can",
    "start": "297360",
    "end": "299759"
  },
  {
    "text": "just host a single",
    "start": "299759",
    "end": "301759"
  },
  {
    "text": "bpf object have people download it",
    "start": "301759",
    "end": "304400"
  },
  {
    "text": "and have tracy",
    "start": "304400",
    "end": "306720"
  },
  {
    "text": "run it without any issue",
    "start": "306720",
    "end": "308720"
  },
  {
    "text": "we don't want to have to rely on a",
    "start": "308720",
    "end": "310240"
  },
  {
    "text": "special kernel feature to do that",
    "start": "310240",
    "end": "313039"
  },
  {
    "text": "and for the most part we don't need our",
    "start": "313039",
    "end": "315039"
  },
  {
    "text": "users to know about that",
    "start": "315039",
    "end": "318240"
  },
  {
    "text": "so",
    "start": "318960",
    "end": "319759"
  },
  {
    "text": "when do we want it",
    "start": "319759",
    "end": "321520"
  },
  {
    "text": "well we have it now so",
    "start": "321520",
    "end": "324400"
  },
  {
    "text": "this is what",
    "start": "324400",
    "end": "325759"
  },
  {
    "text": "core compile once run everywhere",
    "start": "325759",
    "end": "328960"
  },
  {
    "text": "enables us to do so",
    "start": "328960",
    "end": "332080"
  },
  {
    "text": "core",
    "start": "332080",
    "end": "333440"
  },
  {
    "text": "is",
    "start": "333440",
    "end": "335759"
  },
  {
    "text": "a concept that's enabled by the bpf",
    "start": "335759",
    "end": "339919"
  },
  {
    "text": "and these are essentially exactly what",
    "start": "339919",
    "end": "342960"
  },
  {
    "text": "it gives us so",
    "start": "342960",
    "end": "346000"
  },
  {
    "text": "right so compile once run everywhere or",
    "start": "346479",
    "end": "348479"
  },
  {
    "text": "core is a concept enabled by lib bpf",
    "start": "348479",
    "end": "353919"
  },
  {
    "text": "there are helper functions within lib",
    "start": "353919",
    "end": "355680"
  },
  {
    "text": "bpf",
    "start": "355680",
    "end": "356800"
  },
  {
    "text": "that will take into account kernel debug",
    "start": "356800",
    "end": "359919"
  },
  {
    "text": "information",
    "start": "359919",
    "end": "361360"
  },
  {
    "text": "to try and relocate kernel fields",
    "start": "361360",
    "end": "366080"
  },
  {
    "text": "as they have changed from kernel version",
    "start": "366080",
    "end": "368240"
  },
  {
    "text": "to version",
    "start": "368240",
    "end": "369840"
  },
  {
    "text": "and",
    "start": "369840",
    "end": "370560"
  },
  {
    "text": "just to clarify that lib bpf is a",
    "start": "370560",
    "end": "373199"
  },
  {
    "text": "user space library",
    "start": "373199",
    "end": "375360"
  },
  {
    "text": "that is in the kernel",
    "start": "375360",
    "end": "378080"
  },
  {
    "text": "repository",
    "start": "378080",
    "end": "381080"
  },
  {
    "text": "and it's used for interacting with the",
    "start": "381600",
    "end": "383280"
  },
  {
    "text": "bpf subsystem so",
    "start": "383280",
    "end": "385680"
  },
  {
    "text": "loading bpf programs and attaching them",
    "start": "385680",
    "end": "388319"
  },
  {
    "text": "to the various hooks",
    "start": "388319",
    "end": "391960"
  },
  {
    "text": "so let's go into how this is actually",
    "start": "400880",
    "end": "403680"
  },
  {
    "text": "working",
    "start": "403680",
    "end": "405039"
  },
  {
    "text": "so",
    "start": "405039",
    "end": "407199"
  },
  {
    "text": "the first thing i want to talk about",
    "start": "407280",
    "end": "408560"
  },
  {
    "text": "another another acronym for us to to",
    "start": "408560",
    "end": "410800"
  },
  {
    "text": "learn about is btf so bps btf stands for",
    "start": "410800",
    "end": "414880"
  },
  {
    "text": "bpf type format",
    "start": "414880",
    "end": "417039"
  },
  {
    "text": "it's a special a simple space efficient",
    "start": "417039",
    "end": "420080"
  },
  {
    "text": "uh debugging symbol format so if you've",
    "start": "420080",
    "end": "422160"
  },
  {
    "text": "ever worked with dwarf it's basically a",
    "start": "422160",
    "end": "424000"
  },
  {
    "text": "just a compressed paired down version",
    "start": "424000",
    "end": "426639"
  },
  {
    "text": "of that",
    "start": "426639",
    "end": "427680"
  },
  {
    "text": "so if you think about it",
    "start": "427680",
    "end": "430400"
  },
  {
    "text": "the linux kernel is a compiled program",
    "start": "430400",
    "end": "432720"
  },
  {
    "text": "just like any other",
    "start": "432720",
    "end": "434240"
  },
  {
    "text": "and it has all the symbol information or",
    "start": "434240",
    "end": "436319"
  },
  {
    "text": "you can have all the symbol information",
    "start": "436319",
    "end": "438240"
  },
  {
    "text": "for it",
    "start": "438240",
    "end": "439520"
  },
  {
    "text": "but since you know the binary itself is",
    "start": "439520",
    "end": "441919"
  },
  {
    "text": "is massive all the debug information is",
    "start": "441919",
    "end": "443680"
  },
  {
    "text": "even bigger",
    "start": "443680",
    "end": "444800"
  },
  {
    "text": "or makes it even bigger so",
    "start": "444800",
    "end": "446880"
  },
  {
    "text": "btf because it's compressed and because",
    "start": "446880",
    "end": "450960"
  },
  {
    "text": "you know engineers have found a way to",
    "start": "450960",
    "end": "453680"
  },
  {
    "text": "get all that same information in much",
    "start": "453680",
    "end": "455680"
  },
  {
    "text": "less space enables us to efficiently",
    "start": "455680",
    "end": "460080"
  },
  {
    "text": "do all these relocations and by",
    "start": "460400",
    "end": "462560"
  },
  {
    "text": "relocations i mean you know if we were",
    "start": "462560",
    "end": "465280"
  },
  {
    "text": "to",
    "start": "465280",
    "end": "466560"
  },
  {
    "text": "uh let's say read a specific field in a",
    "start": "466560",
    "end": "469120"
  },
  {
    "text": "test struct on a particular version and",
    "start": "469120",
    "end": "472080"
  },
  {
    "text": "that changes in another version",
    "start": "472080",
    "end": "474960"
  },
  {
    "text": "btf enables us or enables really lib bpf",
    "start": "474960",
    "end": "478800"
  },
  {
    "text": "to read that debug information",
    "start": "478800",
    "end": "482240"
  },
  {
    "text": "see where that field has changed like",
    "start": "482240",
    "end": "483919"
  },
  {
    "text": "the actual memory offset uh find it for",
    "start": "483919",
    "end": "486720"
  },
  {
    "text": "us and read from there instead of where",
    "start": "486720",
    "end": "488639"
  },
  {
    "text": "we initially uh specified it to be",
    "start": "488639",
    "end": "493800"
  },
  {
    "text": "so here's a diagram that will",
    "start": "496000",
    "end": "499199"
  },
  {
    "text": "hopefully help explain that so",
    "start": "499199",
    "end": "502240"
  },
  {
    "text": "here you see we have",
    "start": "502240",
    "end": "503759"
  },
  {
    "text": "on this this right box",
    "start": "503759",
    "end": "505759"
  },
  {
    "text": "or this box on the right",
    "start": "505759",
    "end": "507759"
  },
  {
    "text": "is tracy itself so we have the user",
    "start": "507759",
    "end": "510160"
  },
  {
    "text": "space side we have lib epf that it's",
    "start": "510160",
    "end": "513200"
  },
  {
    "text": "using to interact with the bpf programs",
    "start": "513200",
    "end": "515760"
  },
  {
    "text": "and the bpf system",
    "start": "515760",
    "end": "517518"
  },
  {
    "text": "we have the tracy bpf object itself and",
    "start": "517519",
    "end": "520399"
  },
  {
    "text": "then we have the kernel btf the btf for",
    "start": "520399",
    "end": "523760"
  },
  {
    "text": "the kernel that it's running on",
    "start": "523760",
    "end": "526080"
  },
  {
    "text": "that btf can be found",
    "start": "526080",
    "end": "528240"
  },
  {
    "text": "either in",
    "start": "528240",
    "end": "530080"
  },
  {
    "text": "sys kernel btfvm linux so vm linux is a",
    "start": "530080",
    "end": "534320"
  },
  {
    "text": "special file it's the",
    "start": "534320",
    "end": "537360"
  },
  {
    "text": "compiled kernel stuffed inside of an elf",
    "start": "537360",
    "end": "540320"
  },
  {
    "text": "binary",
    "start": "540320",
    "end": "542800"
  },
  {
    "text": "that will have",
    "start": "542800",
    "end": "544399"
  },
  {
    "text": "a",
    "start": "544399",
    "end": "545279"
  },
  {
    "text": "vtf section",
    "start": "545279",
    "end": "546880"
  },
  {
    "text": "if the kernel was compiled with a",
    "start": "546880",
    "end": "548959"
  },
  {
    "text": "specific configuration option config",
    "start": "548959",
    "end": "551360"
  },
  {
    "text": "debug info btf",
    "start": "551360",
    "end": "554000"
  },
  {
    "text": "otherwise lib epf also has an option for",
    "start": "554000",
    "end": "556640"
  },
  {
    "text": "us to specify",
    "start": "556640",
    "end": "558480"
  },
  {
    "text": "an external btf file",
    "start": "558480",
    "end": "560800"
  },
  {
    "text": "and that brings us to another cool",
    "start": "560800",
    "end": "562800"
  },
  {
    "text": "project that my team has worked on",
    "start": "562800",
    "end": "564320"
  },
  {
    "text": "called btf hub",
    "start": "564320",
    "end": "566000"
  },
  {
    "text": "so",
    "start": "566000",
    "end": "567440"
  },
  {
    "text": "if you are trying to support in your bpf",
    "start": "567440",
    "end": "570399"
  },
  {
    "text": "project if you're trying to support",
    "start": "570399",
    "end": "572399"
  },
  {
    "text": "a",
    "start": "572399",
    "end": "574160"
  },
  {
    "text": "particular distribution or a particular",
    "start": "574160",
    "end": "576000"
  },
  {
    "text": "kernel where this can this kernel",
    "start": "576000",
    "end": "578160"
  },
  {
    "text": "compile config option hasn't been",
    "start": "578160",
    "end": "579680"
  },
  {
    "text": "specified",
    "start": "579680",
    "end": "580959"
  },
  {
    "text": "um",
    "start": "580959",
    "end": "582800"
  },
  {
    "text": "you normally wouldn't be able to run",
    "start": "582800",
    "end": "585760"
  },
  {
    "text": "a program that has core",
    "start": "585760",
    "end": "589040"
  },
  {
    "text": "enabled so",
    "start": "589040",
    "end": "590800"
  },
  {
    "text": "you would have to",
    "start": "590800",
    "end": "592240"
  },
  {
    "text": "go back to that uh previous solution",
    "start": "592240",
    "end": "594320"
  },
  {
    "text": "that i that i outlined that we were",
    "start": "594320",
    "end": "595920"
  },
  {
    "text": "previously working with",
    "start": "595920",
    "end": "598640"
  },
  {
    "text": "but instead you can",
    "start": "598640",
    "end": "600560"
  },
  {
    "text": "pre-compile on your own",
    "start": "600560",
    "end": "602880"
  },
  {
    "text": "the",
    "start": "602880",
    "end": "604880"
  },
  {
    "text": "actual kernel for that version",
    "start": "604880",
    "end": "606800"
  },
  {
    "text": "include that debug information",
    "start": "606800",
    "end": "608800"
  },
  {
    "text": "extract that btf information",
    "start": "608800",
    "end": "611200"
  },
  {
    "text": "and supply it as an external file",
    "start": "611200",
    "end": "614160"
  },
  {
    "text": "which is what we've done in this",
    "start": "614160",
    "end": "616640"
  },
  {
    "text": "github repository where you could just",
    "start": "616640",
    "end": "618560"
  },
  {
    "text": "instead of doing that compilation",
    "start": "618560",
    "end": "620240"
  },
  {
    "text": "yourself",
    "start": "620240",
    "end": "621600"
  },
  {
    "text": "download this these btf files and load",
    "start": "621600",
    "end": "624399"
  },
  {
    "text": "it with",
    "start": "624399",
    "end": "625440"
  },
  {
    "text": "your bpf program",
    "start": "625440",
    "end": "628480"
  },
  {
    "text": "so now we want to talk about uh code",
    "start": "630320",
    "end": "632079"
  },
  {
    "text": "changes that we had to make to tracy uh",
    "start": "632079",
    "end": "634640"
  },
  {
    "text": "and really this is more like code",
    "start": "634640",
    "end": "636480"
  },
  {
    "text": "simplifications it it really uh",
    "start": "636480",
    "end": "639680"
  },
  {
    "text": "honestly cleaned up our code base",
    "start": "639680",
    "end": "641920"
  },
  {
    "text": "the first thing is vmlinix.h so in the",
    "start": "641920",
    "end": "644720"
  },
  {
    "text": "same way that we have that vm linux file",
    "start": "644720",
    "end": "647120"
  },
  {
    "text": "which is the compiled kernel",
    "start": "647120",
    "end": "649440"
  },
  {
    "text": "vmlinix.h is another generated file from",
    "start": "649440",
    "end": "652880"
  },
  {
    "text": "that",
    "start": "652880",
    "end": "653680"
  },
  {
    "text": "so it goes into that debug information",
    "start": "653680",
    "end": "656320"
  },
  {
    "text": "with all the different types and it",
    "start": "656320",
    "end": "658320"
  },
  {
    "text": "produces a header file that has all of",
    "start": "658320",
    "end": "660320"
  },
  {
    "text": "their type definitions",
    "start": "660320",
    "end": "662079"
  },
  {
    "text": "so if you take a a quick look at this",
    "start": "662079",
    "end": "665200"
  },
  {
    "text": "you could see",
    "start": "665200",
    "end": "666880"
  },
  {
    "text": "the definition for underscore underscore",
    "start": "666880",
    "end": "669200"
  },
  {
    "text": "u32 so if",
    "start": "669200",
    "end": "672320"
  },
  {
    "text": "your bpf program is relying on that data",
    "start": "672320",
    "end": "674720"
  },
  {
    "text": "type",
    "start": "674720",
    "end": "675839"
  },
  {
    "text": "you can import it and use it accordingly",
    "start": "675839",
    "end": "678959"
  },
  {
    "text": "using vmlinix.h",
    "start": "678959",
    "end": "681120"
  },
  {
    "text": "i wrote a blog post about this file",
    "start": "681120",
    "end": "682880"
  },
  {
    "text": "there's there's more to it that is very",
    "start": "682880",
    "end": "684959"
  },
  {
    "text": "cool",
    "start": "684959",
    "end": "685760"
  },
  {
    "text": "you could check it out the url there on",
    "start": "685760",
    "end": "687680"
  },
  {
    "text": "my personal blog",
    "start": "687680",
    "end": "690480"
  },
  {
    "text": "so you can see here that the changes",
    "start": "690720",
    "end": "692880"
  },
  {
    "text": "that we made in",
    "start": "692880",
    "end": "694320"
  },
  {
    "text": "our imports we actually are currently",
    "start": "694320",
    "end": "697360"
  },
  {
    "text": "currently have both of these we have a",
    "start": "697360",
    "end": "699040"
  },
  {
    "text": "compile time",
    "start": "699040",
    "end": "701600"
  },
  {
    "text": "variable that we define",
    "start": "701600",
    "end": "703680"
  },
  {
    "text": "but we're moving towards being able to",
    "start": "703680",
    "end": "705760"
  },
  {
    "text": "remove this",
    "start": "705760",
    "end": "707040"
  },
  {
    "text": "um",
    "start": "707040",
    "end": "708399"
  },
  {
    "text": "this this left side here but on the left",
    "start": "708399",
    "end": "710720"
  },
  {
    "text": "we have all these user apis and internal",
    "start": "710720",
    "end": "713279"
  },
  {
    "text": "headers that we're importing",
    "start": "713279",
    "end": "715440"
  },
  {
    "text": "getting those definitions of the data",
    "start": "715440",
    "end": "717920"
  },
  {
    "text": "types that we're trying to read from",
    "start": "717920",
    "end": "720240"
  },
  {
    "text": "in kernel",
    "start": "720240",
    "end": "721519"
  },
  {
    "text": "on the right you see that we have we're",
    "start": "721519",
    "end": "724079"
  },
  {
    "text": "just importing vmlinux.h as well as this",
    "start": "724079",
    "end": "727279"
  },
  {
    "text": "additional file that i want to talk",
    "start": "727279",
    "end": "728880"
  },
  {
    "text": "about",
    "start": "728880",
    "end": "730880"
  },
  {
    "text": "so that's a missing definitions file so",
    "start": "730880",
    "end": "733760"
  },
  {
    "text": "while we do have the convenience of",
    "start": "733760",
    "end": "735680"
  },
  {
    "text": "being able to just import a single",
    "start": "735680",
    "end": "737839"
  },
  {
    "text": "header file the vmlinux.h to get all of",
    "start": "737839",
    "end": "740240"
  },
  {
    "text": "our type definitions",
    "start": "740240",
    "end": "742399"
  },
  {
    "text": "that does lack all the macros and all",
    "start": "742399",
    "end": "744959"
  },
  {
    "text": "the functions that we otherwise would be",
    "start": "744959",
    "end": "747440"
  },
  {
    "text": "using in",
    "start": "747440",
    "end": "748959"
  },
  {
    "text": "those kernel headers so macros certainly",
    "start": "748959",
    "end": "751920"
  },
  {
    "text": "aren't put in the",
    "start": "751920",
    "end": "753600"
  },
  {
    "text": "type information or aren't put in the",
    "start": "753600",
    "end": "755760"
  },
  {
    "text": "debug information",
    "start": "755760",
    "end": "757360"
  },
  {
    "text": "and functions aren't aren't included",
    "start": "757360",
    "end": "759279"
  },
  {
    "text": "either so",
    "start": "759279",
    "end": "760639"
  },
  {
    "text": "i had a conversation on the mailing list",
    "start": "760639",
    "end": "762320"
  },
  {
    "text": "about the best way of handling it",
    "start": "762320",
    "end": "764959"
  },
  {
    "text": "and right now the",
    "start": "764959",
    "end": "767279"
  },
  {
    "text": "best solution that anyone was able to",
    "start": "767279",
    "end": "771279"
  },
  {
    "text": "give me advice for",
    "start": "771279",
    "end": "773200"
  },
  {
    "text": "is to just redefine it so theoretically",
    "start": "773200",
    "end": "776639"
  },
  {
    "text": "if there is a macro that",
    "start": "776639",
    "end": "779360"
  },
  {
    "text": "changes from version to version we would",
    "start": "779360",
    "end": "781360"
  },
  {
    "text": "have to be manually updating that",
    "start": "781360",
    "end": "784079"
  },
  {
    "text": "so we still have we still have work to",
    "start": "784079",
    "end": "786000"
  },
  {
    "text": "do there",
    "start": "786000",
    "end": "788399"
  },
  {
    "text": "uh and",
    "start": "788959",
    "end": "790880"
  },
  {
    "text": "essentially the last change is just",
    "start": "790880",
    "end": "792480"
  },
  {
    "text": "using the correct header file uh i'm",
    "start": "792480",
    "end": "794399"
  },
  {
    "text": "sorry using the correct helper functions",
    "start": "794399",
    "end": "796959"
  },
  {
    "text": "so",
    "start": "796959",
    "end": "798000"
  },
  {
    "text": "you could see here we have this internal",
    "start": "798000",
    "end": "799839"
  },
  {
    "text": "macro in tracy called read kern where we",
    "start": "799839",
    "end": "802880"
  },
  {
    "text": "zero out memory before",
    "start": "802880",
    "end": "804800"
  },
  {
    "text": "doing a",
    "start": "804800",
    "end": "805839"
  },
  {
    "text": "kernel read",
    "start": "805839",
    "end": "807440"
  },
  {
    "text": "and the only difference here is that",
    "start": "807440",
    "end": "809279"
  },
  {
    "text": "instead of using bpf probe read we're",
    "start": "809279",
    "end": "811120"
  },
  {
    "text": "using bpf core read",
    "start": "811120",
    "end": "813120"
  },
  {
    "text": "the arguments are exactly the same",
    "start": "813120",
    "end": "815760"
  },
  {
    "text": "it works in the same way",
    "start": "815760",
    "end": "817440"
  },
  {
    "text": "it's just under the hood using btf",
    "start": "817440",
    "end": "821760"
  },
  {
    "text": "and here's exactly that in action",
    "start": "822880",
    "end": "825199"
  },
  {
    "text": "reading a amount namespace id",
    "start": "825199",
    "end": "829560"
  },
  {
    "text": "so the most exciting way that we've been",
    "start": "837519",
    "end": "839920"
  },
  {
    "text": "able to change tracy and the real",
    "start": "839920",
    "end": "841839"
  },
  {
    "text": "purpose of this talk has been",
    "start": "841839",
    "end": "843360"
  },
  {
    "text": "distribution so",
    "start": "843360",
    "end": "846480"
  },
  {
    "text": "previously if we",
    "start": "846639",
    "end": "848720"
  },
  {
    "text": "wanted to publish binaries of tracy",
    "start": "848720",
    "end": "851920"
  },
  {
    "text": "where we want to support all those",
    "start": "851920",
    "end": "853519"
  },
  {
    "text": "distributions that i had on that slide",
    "start": "853519",
    "end": "855600"
  },
  {
    "text": "earlier",
    "start": "855600",
    "end": "856480"
  },
  {
    "text": "we would have to say you know here is",
    "start": "856480",
    "end": "858639"
  },
  {
    "text": "tracy for",
    "start": "858639",
    "end": "860240"
  },
  {
    "text": "ubuntu 2004 or here is tracy4204",
    "start": "860240",
    "end": "865040"
  },
  {
    "text": "or",
    "start": "865040",
    "end": "866079"
  },
  {
    "text": "or 2104",
    "start": "866079",
    "end": "867920"
  },
  {
    "text": "or for specific kernel versions",
    "start": "867920",
    "end": "871360"
  },
  {
    "text": "now what we can do is we compile a",
    "start": "871360",
    "end": "873839"
  },
  {
    "text": "single bpf object that has btf enabled",
    "start": "873839",
    "end": "879600"
  },
  {
    "text": "and we embed it in our user space go",
    "start": "879600",
    "end": "882000"
  },
  {
    "text": "program",
    "start": "882000",
    "end": "883040"
  },
  {
    "text": "so at run time when we start up tracy it",
    "start": "883040",
    "end": "886160"
  },
  {
    "text": "unloads that from memory",
    "start": "886160",
    "end": "888399"
  },
  {
    "text": "and loads it",
    "start": "888399",
    "end": "890240"
  },
  {
    "text": "and",
    "start": "890240",
    "end": "891199"
  },
  {
    "text": "you know we can compile that go program",
    "start": "891199",
    "end": "893040"
  },
  {
    "text": "statically so it's just a single",
    "start": "893040",
    "end": "894880"
  },
  {
    "text": "artifact that where that we can ship and",
    "start": "894880",
    "end": "898160"
  },
  {
    "text": "run on any system",
    "start": "898160",
    "end": "901279"
  },
  {
    "text": "so",
    "start": "903680",
    "end": "904399"
  },
  {
    "text": "this is uh you know",
    "start": "904399",
    "end": "906959"
  },
  {
    "text": "again uh this this same slide but all",
    "start": "906959",
    "end": "909360"
  },
  {
    "text": "these simple changes enable enable us to",
    "start": "909360",
    "end": "911680"
  },
  {
    "text": "not get bug reports about tracy having",
    "start": "911680",
    "end": "914560"
  },
  {
    "text": "garbled info on a particular",
    "start": "914560",
    "end": "916480"
  },
  {
    "text": "distribution",
    "start": "916480",
    "end": "918160"
  },
  {
    "text": "or someone's custom gentoo based kernel",
    "start": "918160",
    "end": "921440"
  },
  {
    "text": "and certainly not on production centos",
    "start": "921440",
    "end": "923680"
  },
  {
    "text": "servers",
    "start": "923680",
    "end": "924800"
  },
  {
    "text": "we now have the confidence to distribute",
    "start": "924800",
    "end": "926880"
  },
  {
    "text": "tracy to a wide array of environments",
    "start": "926880",
    "end": "929519"
  },
  {
    "text": "and can focus on developing the great",
    "start": "929519",
    "end": "930959"
  },
  {
    "text": "new features",
    "start": "930959",
    "end": "932399"
  },
  {
    "text": "that we",
    "start": "932399",
    "end": "933440"
  },
  {
    "text": "want to add and less on the",
    "start": "933440",
    "end": "936079"
  },
  {
    "text": "changes in different kernel versions",
    "start": "936079",
    "end": "938959"
  },
  {
    "text": "and more broadly i would say that this",
    "start": "938959",
    "end": "941680"
  },
  {
    "text": "is the future of bpf development that",
    "start": "941680",
    "end": "944000"
  },
  {
    "text": "this isn't going to be something that",
    "start": "944000",
    "end": "946399"
  },
  {
    "text": "people are going to ask like is is this",
    "start": "946399",
    "end": "948320"
  },
  {
    "text": "bpf project cre enabled you know as new",
    "start": "948320",
    "end": "952000"
  },
  {
    "text": "kernels are",
    "start": "952000",
    "end": "954560"
  },
  {
    "text": "or major distribution kernels are",
    "start": "954560",
    "end": "956560"
  },
  {
    "text": "shipping with",
    "start": "956560",
    "end": "957759"
  },
  {
    "text": "btf enabled by default",
    "start": "957759",
    "end": "959839"
  },
  {
    "text": "you won't really have to worry about",
    "start": "959839",
    "end": "961519"
  },
  {
    "text": "about that at all so you can have your",
    "start": "961519",
    "end": "964000"
  },
  {
    "text": "bpf program written in confidence to",
    "start": "964000",
    "end": "967519"
  },
  {
    "text": "not have to worry about if cre is",
    "start": "967519",
    "end": "969199"
  },
  {
    "text": "enabled or not",
    "start": "969199",
    "end": "970560"
  },
  {
    "text": "and for those custom kernels and those",
    "start": "970560",
    "end": "972399"
  },
  {
    "text": "older kernels",
    "start": "972399",
    "end": "973600"
  },
  {
    "text": "that's why we have btf hub",
    "start": "973600",
    "end": "977120"
  },
  {
    "text": "so i actually want to show a",
    "start": "977839",
    "end": "980079"
  },
  {
    "text": "demo of exactly this",
    "start": "980079",
    "end": "983279"
  },
  {
    "text": "i'm going to quickly",
    "start": "983279",
    "end": "985199"
  },
  {
    "text": "mirror displays i'll make it easier",
    "start": "985199",
    "end": "989440"
  },
  {
    "text": "so",
    "start": "993360",
    "end": "994560"
  },
  {
    "text": "here on this linux vm i have a uh",
    "start": "994560",
    "end": "997360"
  },
  {
    "text": "i'm sorry",
    "start": "997360",
    "end": "998639"
  },
  {
    "text": "is that is that big enough",
    "start": "998639",
    "end": "1001360"
  },
  {
    "text": "okay",
    "start": "1001360",
    "end": "1002160"
  },
  {
    "text": "uh so here on this",
    "start": "1002160",
    "end": "1004160"
  },
  {
    "text": "um",
    "start": "1004160",
    "end": "1005600"
  },
  {
    "text": "uh linux vm i'm running fedora",
    "start": "1005600",
    "end": "1007920"
  },
  {
    "text": "uh 34 this has a 5.12 kernel",
    "start": "1007920",
    "end": "1012079"
  },
  {
    "text": "and i'm just going to run a version of",
    "start": "1012079",
    "end": "1013839"
  },
  {
    "text": "tracy so you could actually",
    "start": "1013839",
    "end": "1016560"
  },
  {
    "text": "see what it does",
    "start": "1016560",
    "end": "1018720"
  },
  {
    "text": "just uh",
    "start": "1018720",
    "end": "1020240"
  },
  {
    "text": "look at the first 20 lines so",
    "start": "1020240",
    "end": "1022800"
  },
  {
    "text": "here with this debug flag turned on we",
    "start": "1022800",
    "end": "1024880"
  },
  {
    "text": "could see that i unpacked the cre bpf",
    "start": "1024880",
    "end": "1027520"
  },
  {
    "text": "object into memory",
    "start": "1027520",
    "end": "1029038"
  },
  {
    "text": "and i'm loading that",
    "start": "1029039",
    "end": "1030640"
  },
  {
    "text": "and and running with that and this is",
    "start": "1030640",
    "end": "1032240"
  },
  {
    "text": "actually a static binary",
    "start": "1032240",
    "end": "1034319"
  },
  {
    "text": "and you can see that it's running",
    "start": "1034319",
    "end": "1035678"
  },
  {
    "text": "properly we have",
    "start": "1035679",
    "end": "1038880"
  },
  {
    "text": "all these different commands that are",
    "start": "1038880",
    "end": "1040079"
  },
  {
    "text": "being run",
    "start": "1040079",
    "end": "1041360"
  },
  {
    "text": "we have the events that are actually",
    "start": "1041360",
    "end": "1043678"
  },
  {
    "text": "triggering",
    "start": "1043679",
    "end": "1046000"
  },
  {
    "text": "these to be printed so",
    "start": "1046000",
    "end": "1047760"
  },
  {
    "text": "this is an lsm hook",
    "start": "1047760",
    "end": "1050000"
  },
  {
    "text": "of a file being opened",
    "start": "1050000",
    "end": "1052640"
  },
  {
    "text": "this is a proc",
    "start": "1052640",
    "end": "1054000"
  },
  {
    "text": "info we have all the",
    "start": "1054000",
    "end": "1055919"
  },
  {
    "text": "arguments that are being",
    "start": "1055919",
    "end": "1058559"
  },
  {
    "text": "passed back into user space and being",
    "start": "1058559",
    "end": "1060480"
  },
  {
    "text": "interpreted correctly meaning that it's",
    "start": "1060480",
    "end": "1062640"
  },
  {
    "text": "the",
    "start": "1062640",
    "end": "1063919"
  },
  {
    "text": "we're relying on the proper definitions",
    "start": "1063919",
    "end": "1066480"
  },
  {
    "text": "and if we're not relying on the proper",
    "start": "1066480",
    "end": "1067919"
  },
  {
    "text": "definitions cre is handling it for us to",
    "start": "1067919",
    "end": "1071679"
  },
  {
    "text": "to find the",
    "start": "1071679",
    "end": "1074480"
  },
  {
    "text": "where they've been relocated to",
    "start": "1074480",
    "end": "1076720"
  },
  {
    "text": "so",
    "start": "1076720",
    "end": "1077760"
  },
  {
    "text": "here",
    "start": "1077760",
    "end": "1078640"
  },
  {
    "text": "i also have another vm",
    "start": "1078640",
    "end": "1081840"
  },
  {
    "text": "and this is running ubuntu i believe",
    "start": "1082320",
    "end": "1084799"
  },
  {
    "text": "it's 2104 this is running a 5.11 kernel",
    "start": "1084799",
    "end": "1090080"
  },
  {
    "text": "i'll run the same command",
    "start": "1090080",
    "end": "1093799"
  },
  {
    "text": "uh and yeah look at that i have a",
    "start": "1098160",
    "end": "1100160"
  },
  {
    "text": "security file open for starting it as",
    "start": "1100160",
    "end": "1101679"
  },
  {
    "text": "well uh and",
    "start": "1101679",
    "end": "1103760"
  },
  {
    "text": "it it did the same exact thing where it",
    "start": "1103760",
    "end": "1105600"
  },
  {
    "text": "unpacked the embedded bpf object from",
    "start": "1105600",
    "end": "1107760"
  },
  {
    "text": "memory",
    "start": "1107760",
    "end": "1110160"
  },
  {
    "text": "and loaded that into the kernel and ran",
    "start": "1111520",
    "end": "1113440"
  },
  {
    "text": "it",
    "start": "1113440",
    "end": "1114480"
  },
  {
    "text": "so",
    "start": "1114480",
    "end": "1115679"
  },
  {
    "text": "again all the arguments are",
    "start": "1115679",
    "end": "1117919"
  },
  {
    "text": "properly",
    "start": "1117919",
    "end": "1119440"
  },
  {
    "text": "properly displayed",
    "start": "1119440",
    "end": "1121039"
  },
  {
    "text": "and the kicker to all of this is that",
    "start": "1121039",
    "end": "1125360"
  },
  {
    "text": "if we look at the sha",
    "start": "1128080",
    "end": "1131200"
  },
  {
    "text": "it's exactly the same file",
    "start": "1134400",
    "end": "1137840"
  },
  {
    "text": "that's where you're supposed to all clap",
    "start": "1138320",
    "end": "1139520"
  },
  {
    "text": "and go",
    "start": "1139520",
    "end": "1141760"
  },
  {
    "text": "[Applause]",
    "start": "1142630",
    "end": "1144550"
  },
  {
    "text": "[Laughter]",
    "start": "1144550",
    "end": "1147360"
  },
  {
    "text": "uh okay",
    "start": "1147360",
    "end": "1148840"
  },
  {
    "text": "so uh right so that's what cr cre gives",
    "start": "1148840",
    "end": "1152160"
  },
  {
    "text": "us",
    "start": "1152160",
    "end": "1153039"
  },
  {
    "text": "uh",
    "start": "1153039",
    "end": "1154320"
  },
  {
    "text": "next steps things that we want to work",
    "start": "1154320",
    "end": "1155840"
  },
  {
    "text": "on uh working upstream to find a better",
    "start": "1155840",
    "end": "1158160"
  },
  {
    "text": "solution that than that missing",
    "start": "1158160",
    "end": "1159760"
  },
  {
    "text": "definitions header uh so you know one of",
    "start": "1159760",
    "end": "1162480"
  },
  {
    "text": "the suggestions was having a",
    "start": "1162480",
    "end": "1164640"
  },
  {
    "text": "um",
    "start": "1164640",
    "end": "1165520"
  },
  {
    "text": "like a in claim have a",
    "start": "1165520",
    "end": "1168720"
  },
  {
    "text": "like built-in attribute for checking if",
    "start": "1168720",
    "end": "1171039"
  },
  {
    "text": "a type is already defined so that we can",
    "start": "1171039",
    "end": "1173440"
  },
  {
    "text": "still import the headers that we want",
    "start": "1173440",
    "end": "1175520"
  },
  {
    "text": "but",
    "start": "1175520",
    "end": "1177200"
  },
  {
    "text": "not worry about them",
    "start": "1177200",
    "end": "1178720"
  },
  {
    "text": "having a collision with the names in",
    "start": "1178720",
    "end": "1180320"
  },
  {
    "text": "vmlinux.h",
    "start": "1180320",
    "end": "1182000"
  },
  {
    "text": "uh better verify our output so that's",
    "start": "1182000",
    "end": "1184160"
  },
  {
    "text": "certainly not something that's related",
    "start": "1184160",
    "end": "1186799"
  },
  {
    "text": "to cre or even lib vpf that's across the",
    "start": "1186799",
    "end": "1190080"
  },
  {
    "text": "board but we certainly ran into issues",
    "start": "1190080",
    "end": "1192240"
  },
  {
    "text": "where",
    "start": "1192240",
    "end": "1193120"
  },
  {
    "text": "we had verifier output that we just",
    "start": "1193120",
    "end": "1195120"
  },
  {
    "text": "could not make sense of during this",
    "start": "1195120",
    "end": "1197039"
  },
  {
    "text": "switch",
    "start": "1197039",
    "end": "1198240"
  },
  {
    "text": "documentation so a",
    "start": "1198240",
    "end": "1200880"
  },
  {
    "text": "recent effort that i've been working on",
    "start": "1200880",
    "end": "1202480"
  },
  {
    "text": "is launching the lib bpf read the docs",
    "start": "1202480",
    "end": "1205200"
  },
  {
    "text": "site so if you haven't seen that",
    "start": "1205200",
    "end": "1208240"
  },
  {
    "text": "it is a full api",
    "start": "1208240",
    "end": "1210559"
  },
  {
    "text": "documentation for the bpf you can go",
    "start": "1210559",
    "end": "1212559"
  },
  {
    "text": "check it out",
    "start": "1212559",
    "end": "1213760"
  },
  {
    "text": "and contribute it's sort of",
    "start": "1213760",
    "end": "1216000"
  },
  {
    "text": "if you're familiar with go and go doc",
    "start": "1216000",
    "end": "1217919"
  },
  {
    "text": "it's exactly that so as we document more",
    "start": "1217919",
    "end": "1220960"
  },
  {
    "text": "of the api that documentation will get",
    "start": "1220960",
    "end": "1222720"
  },
  {
    "text": "better",
    "start": "1222720",
    "end": "1223760"
  },
  {
    "text": "and certainly we're going to keep",
    "start": "1223760",
    "end": "1225039"
  },
  {
    "text": "working on btf hub so go check out that",
    "start": "1225039",
    "end": "1228080"
  },
  {
    "text": "repo as well",
    "start": "1228080",
    "end": "1230720"
  },
  {
    "text": "and and that's my talk thank you very",
    "start": "1231200",
    "end": "1232799"
  },
  {
    "text": "much",
    "start": "1232799",
    "end": "1235060"
  },
  {
    "text": "[Applause]",
    "start": "1235060",
    "end": "1238589"
  }
]