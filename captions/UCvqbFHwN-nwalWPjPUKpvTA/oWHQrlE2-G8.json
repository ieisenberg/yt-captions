[
  {
    "text": "all right uh welcome everyone",
    "start": "640",
    "end": "3120"
  },
  {
    "text": "surprisingly we're going to talk about",
    "start": "3120",
    "end": "4960"
  },
  {
    "text": "ebpf today",
    "start": "4960",
    "end": "7440"
  },
  {
    "text": "specifically we want to mention how we",
    "start": "7440",
    "end": "9760"
  },
  {
    "text": "actually build a program that uses rust",
    "start": "9760",
    "end": "12880"
  },
  {
    "text": "in the kernel space and go in the",
    "start": "12880",
    "end": "16720"
  },
  {
    "text": "user space so let's first start with",
    "start": "16720",
    "end": "19840"
  },
  {
    "text": "interactions",
    "start": "19840",
    "end": "22480"
  },
  {
    "text": "yeah so hi i'm dave i work at red hat as",
    "start": "22480",
    "end": "25840"
  },
  {
    "text": "a software engineer my background is in",
    "start": "25840",
    "end": "28560"
  },
  {
    "text": "software defined networking uh and most",
    "start": "28560",
    "end": "31279"
  },
  {
    "text": "recently ebpf and uh a lot of rust",
    "start": "31279",
    "end": "35680"
  },
  {
    "text": "you know it's quite often that you can",
    "start": "35680",
    "end": "37040"
  },
  {
    "text": "forget to update little bits of your",
    "start": "37040",
    "end": "39040"
  },
  {
    "text": "code and then spend hours debugging",
    "start": "39040",
    "end": "40960"
  },
  {
    "text": "something which was really trivial which",
    "start": "40960",
    "end": "42559"
  },
  {
    "text": "was oh actually i'm sending the wrong",
    "start": "42559",
    "end": "44559"
  },
  {
    "text": "thing on the the perfect end it'll nag",
    "start": "44559",
    "end": "46800"
  },
  {
    "text": "at me and tell me dave you're not",
    "start": "46800",
    "end": "48000"
  },
  {
    "text": "allowed to do that",
    "start": "48000",
    "end": "49600"
  },
  {
    "text": "and that's a lot of what iyer is able to",
    "start": "49600",
    "end": "51840"
  },
  {
    "text": "offer for you if you choose to use that",
    "start": "51840",
    "end": "53920"
  },
  {
    "text": "in the kernel space",
    "start": "53920",
    "end": "57399"
  },
  {
    "text": "all right uh let's also talk about",
    "start": "59359",
    "end": "62480"
  },
  {
    "text": "uh like how actually go helps uh",
    "start": "62480",
    "end": "65920"
  },
  {
    "text": "with the okay we",
    "start": "65920",
    "end": "68159"
  },
  {
    "text": "actually heard a lot of nice things",
    "start": "68159",
    "end": "69680"
  },
  {
    "text": "about trust but like how actually go",
    "start": "69680",
    "end": "71840"
  },
  {
    "text": "comes in the equation first of all",
    "start": "71840",
    "end": "74159"
  },
  {
    "text": "writing go applications are like super",
    "start": "74159",
    "end": "76479"
  },
  {
    "text": "easy so you can actually uh",
    "start": "76479",
    "end": "79200"
  },
  {
    "text": "faster and you also have like ability to",
    "start": "79200",
    "end": "82240"
  },
  {
    "text": "produce static binaries and we will see",
    "start": "82240",
    "end": "84560"
  },
  {
    "text": "in a minute that you can actually embed",
    "start": "84560",
    "end": "86479"
  },
  {
    "text": "the",
    "start": "86479",
    "end": "87280"
  },
  {
    "text": "ebpf programs in the binaries binaries",
    "start": "87280",
    "end": "89680"
  },
  {
    "text": "themselves as well but uh for me i guess",
    "start": "89680",
    "end": "92560"
  },
  {
    "text": "uh the like uh most important part like",
    "start": "92560",
    "end": "96000"
  },
  {
    "text": "uh a pro for goal community is like",
    "start": "96000",
    "end": "98640"
  },
  {
    "text": "there's a lot of uh",
    "start": "98640",
    "end": "100960"
  },
  {
    "text": "development going on around cncf and we",
    "start": "100960",
    "end": "103600"
  },
  {
    "text": "have a lot of packages that we can just",
    "start": "103600",
    "end": "105439"
  },
  {
    "text": "utilize in our case",
    "start": "105439",
    "end": "107600"
  },
  {
    "text": "it's gone again",
    "start": "107600",
    "end": "109200"
  },
  {
    "text": "we have we are like talking to the",
    "start": "109200",
    "end": "112399"
  },
  {
    "text": "container runtimes we are talking to the",
    "start": "112399",
    "end": "114159"
  },
  {
    "text": "kubernetes api and for all those uh work",
    "start": "114159",
    "end": "116719"
  },
  {
    "text": "we can actually find some sdks uh to",
    "start": "116719",
    "end": "118799"
  },
  {
    "text": "just like embed in our user space code",
    "start": "118799",
    "end": "121439"
  },
  {
    "text": "and uh discover the c groups uh rather",
    "start": "121439",
    "end": "124159"
  },
  {
    "text": "easily and then attach our profiler",
    "start": "124159",
    "end": "126320"
  },
  {
    "text": "programs",
    "start": "126320",
    "end": "129320"
  },
  {
    "text": "i will keep doing this yeah",
    "start": "133120",
    "end": "134660"
  },
  {
    "text": "[Music]",
    "start": "134660",
    "end": "136400"
  },
  {
    "text": "all right can you progress on",
    "start": "136400",
    "end": "138959"
  },
  {
    "text": "i forget what we're going to talk about",
    "start": "138959",
    "end": "140319"
  },
  {
    "text": "here now ah right yeah how it actually",
    "start": "140319",
    "end": "142400"
  },
  {
    "text": "works yeah now that's a question",
    "start": "142400",
    "end": "145120"
  },
  {
    "text": "so the way that we're actually able to",
    "start": "145120",
    "end": "147120"
  },
  {
    "text": "write our rust programs or rust bpf",
    "start": "147120",
    "end": "150400"
  },
  {
    "text": "programs is all really thanks to llvm",
    "start": "150400",
    "end": "153200"
  },
  {
    "text": "and the work of alessandro descena who",
    "start": "153200",
    "end": "155360"
  },
  {
    "text": "is my co-conspirator on ire",
    "start": "155360",
    "end": "157760"
  },
  {
    "text": "he was the one that actually added",
    "start": "157760",
    "end": "159120"
  },
  {
    "text": "support for",
    "start": "159120",
    "end": "161200"
  },
  {
    "text": "bpf as a target in russ c so rust knows",
    "start": "161200",
    "end": "164560"
  },
  {
    "text": "how to compile",
    "start": "164560",
    "end": "165920"
  },
  {
    "text": "down to bpf byte code which is amazing",
    "start": "165920",
    "end": "170000"
  },
  {
    "text": "and we",
    "start": "170000",
    "end": "171519"
  },
  {
    "text": "are just you know building on top of",
    "start": "171519",
    "end": "173360"
  },
  {
    "text": "that using rust so we were able to use",
    "start": "173360",
    "end": "175599"
  },
  {
    "text": "rust macro system to make things really",
    "start": "175599",
    "end": "178080"
  },
  {
    "text": "easy from a developer standpoint you",
    "start": "178080",
    "end": "180000"
  },
  {
    "text": "just annotate your code and say hey this",
    "start": "180000",
    "end": "182480"
  },
  {
    "text": "is an xdp program and it will keep you",
    "start": "182480",
    "end": "185120"
  },
  {
    "text": "on the right path to",
    "start": "185120",
    "end": "186640"
  },
  {
    "text": "writing that",
    "start": "186640",
    "end": "189200"
  },
  {
    "text": "okay in this section i'm going to talk",
    "start": "191760",
    "end": "194480"
  },
  {
    "text": "about the bpf core",
    "start": "194480",
    "end": "196959"
  },
  {
    "text": "which we which is the library that we",
    "start": "196959",
    "end": "199200"
  },
  {
    "text": "use in the user space uh",
    "start": "199200",
    "end": "201440"
  },
  {
    "text": "thanks to aya being like super nice and",
    "start": "201440",
    "end": "204080"
  },
  {
    "text": "compatible with the bpf api we can just",
    "start": "204080",
    "end": "207599"
  },
  {
    "text": "like use the bpf goal loader in user",
    "start": "207599",
    "end": "210159"
  },
  {
    "text": "space and like just run the programs and",
    "start": "210159",
    "end": "213440"
  },
  {
    "text": "we can actually",
    "start": "213440",
    "end": "215120"
  },
  {
    "text": "there are certain advantages to this we",
    "start": "215120",
    "end": "216799"
  },
  {
    "text": "can just statically bpf and like we we",
    "start": "216799",
    "end": "219840"
  },
  {
    "text": "just have corey support uh for our user",
    "start": "219840",
    "end": "222799"
  },
  {
    "text": "space program as well and if you want to",
    "start": "222799",
    "end": "225440"
  },
  {
    "text": "change any implementation it's kind of",
    "start": "225440",
    "end": "227680"
  },
  {
    "text": "in parka",
    "start": "227680",
    "end": "228959"
  },
  {
    "text": "in my company we are like true believers",
    "start": "228959",
    "end": "230959"
  },
  {
    "text": "of open standards and lib epf kind of an",
    "start": "230959",
    "end": "233680"
  },
  {
    "text": "open standard for us so keeping in that",
    "start": "233680",
    "end": "236239"
  },
  {
    "text": "uh in place like how uh gives us the",
    "start": "236239",
    "end": "239439"
  },
  {
    "text": "flexibility to just jump between for",
    "start": "239439",
    "end": "242239"
  },
  {
    "text": "example we just rewrite our whole our",
    "start": "242239",
    "end": "244400"
  },
  {
    "text": "like",
    "start": "244400",
    "end": "245519"
  },
  {
    "text": "bpf programs in rust and it just worked",
    "start": "245519",
    "end": "250560"
  },
  {
    "text": "so",
    "start": "251120",
    "end": "252239"
  },
  {
    "text": "yes uh i'm just like",
    "start": "252239",
    "end": "255120"
  },
  {
    "text": "skipping forward sorry for the agony",
    "start": "255120",
    "end": "258400"
  },
  {
    "text": "so in the in our example i was gonna",
    "start": "258400",
    "end": "260320"
  },
  {
    "text": "just like demonstrate like what we do",
    "start": "260320",
    "end": "262560"
  },
  {
    "text": "actually with this program which in the",
    "start": "262560",
    "end": "264639"
  },
  {
    "text": "user space we just like discover the c",
    "start": "264639",
    "end": "266720"
  },
  {
    "text": "groups and then we just like attach uh",
    "start": "266720",
    "end": "269520"
  },
  {
    "text": "the",
    "start": "269520",
    "end": "270240"
  },
  {
    "text": "the bp programs to those c groups and we",
    "start": "270240",
    "end": "273199"
  },
  {
    "text": "collect data and aggregate them into the",
    "start": "273199",
    "end": "275040"
  },
  {
    "text": "ebpf maps and in the user space we just",
    "start": "275040",
    "end": "277840"
  },
  {
    "text": "like convert them into ppro format which",
    "start": "277840",
    "end": "280240"
  },
  {
    "text": "is another open source uh format and we",
    "start": "280240",
    "end": "282960"
  },
  {
    "text": "send them over to the storage layer",
    "start": "282960",
    "end": "285199"
  },
  {
    "text": "so the program is actually rather a",
    "start": "285199",
    "end": "287199"
  },
  {
    "text": "simple one uh because most of the apis",
    "start": "287199",
    "end": "290160"
  },
  {
    "text": "are just provided uh with",
    "start": "290160",
    "end": "292400"
  },
  {
    "text": "ebpf and lib bpf we just",
    "start": "292400",
    "end": "295440"
  },
  {
    "text": "get the stack ids and the stack traces",
    "start": "295440",
    "end": "297600"
  },
  {
    "text": "from the kernel and then we have a map",
    "start": "297600",
    "end": "300880"
  },
  {
    "text": "that actually counts the unique stacks",
    "start": "300880",
    "end": "303199"
  },
  {
    "text": "and those aggregated values then sent to",
    "start": "303199",
    "end": "306080"
  },
  {
    "text": "the user space",
    "start": "306080",
    "end": "308800"
  },
  {
    "text": "so i will just like try to walk through",
    "start": "308800",
    "end": "311600"
  },
  {
    "text": "if this continues to work uh on the ras",
    "start": "311600",
    "end": "314720"
  },
  {
    "text": "program",
    "start": "314720",
    "end": "315680"
  },
  {
    "text": "so",
    "start": "315680",
    "end": "316560"
  },
  {
    "text": "rus programs are uh",
    "start": "316560",
    "end": "319039"
  },
  {
    "text": "for the ebpf they are rather simple so",
    "start": "319039",
    "end": "321039"
  },
  {
    "text": "they don't have any standard library or",
    "start": "321039",
    "end": "323360"
  },
  {
    "text": "they they don't have an entry point",
    "start": "323360",
    "end": "325680"
  },
  {
    "text": "like a main program right so your your",
    "start": "325680",
    "end": "328160"
  },
  {
    "text": "program is starts with like importing",
    "start": "328160",
    "end": "330160"
  },
  {
    "text": "couple of",
    "start": "330160",
    "end": "331120"
  },
  {
    "text": "libraries from uh",
    "start": "331120",
    "end": "332960"
  },
  {
    "text": "rust create that io provides uh which",
    "start": "332960",
    "end": "335919"
  },
  {
    "text": "are which is specifically for the kernel",
    "start": "335919",
    "end": "338000"
  },
  {
    "text": "space",
    "start": "338000",
    "end": "339600"
  },
  {
    "text": "if you are using an old kernel you need",
    "start": "339600",
    "end": "341919"
  },
  {
    "text": "to actually put a license section in",
    "start": "341919",
    "end": "343919"
  },
  {
    "text": "there otherwise like compiler will just",
    "start": "343919",
    "end": "346720"
  },
  {
    "text": "rant about it but it's not the case",
    "start": "346720",
    "end": "348639"
  },
  {
    "text": "anymore i guess if you are using",
    "start": "348639",
    "end": "350240"
  },
  {
    "text": "something uh recent 5.2 plus i guess",
    "start": "350240",
    "end": "354560"
  },
  {
    "text": "yeah and to be fair this is not",
    "start": "354560",
    "end": "356560"
  },
  {
    "text": "indicative of the nice sort of ap that",
    "start": "356560",
    "end": "358560"
  },
  {
    "text": "we like to provide you in ire it is a",
    "start": "358560",
    "end": "360479"
  },
  {
    "text": "hack to work around all kernels so don't",
    "start": "360479",
    "end": "362720"
  },
  {
    "text": "read into this one too much",
    "start": "362720",
    "end": "366240"
  },
  {
    "text": "and then like we",
    "start": "366240",
    "end": "368479"
  },
  {
    "text": "just create a ebpf map to actually count",
    "start": "368479",
    "end": "371680"
  },
  {
    "text": "the stack traces and this is a struck",
    "start": "371680",
    "end": "374479"
  },
  {
    "text": "representation of a key that we put in a",
    "start": "374479",
    "end": "376720"
  },
  {
    "text": "hash map and it in that hash like the",
    "start": "376720",
    "end": "380960"
  },
  {
    "text": "important part i guess in this section",
    "start": "380960",
    "end": "383039"
  },
  {
    "text": "of the program is like having a map",
    "start": "383039",
    "end": "385360"
  },
  {
    "text": "macro that where you can actually define",
    "start": "385360",
    "end": "387280"
  },
  {
    "text": "the ebpf map ebpf maps and having this",
    "start": "387280",
    "end": "390960"
  },
  {
    "text": "key it needs to be represented as a",
    "start": "390960",
    "end": "393199"
  },
  {
    "text": "seastrack uh",
    "start": "393199",
    "end": "394960"
  },
  {
    "text": "since we are just like also",
    "start": "394960",
    "end": "397120"
  },
  {
    "text": "sending this uh thing to the user space",
    "start": "397120",
    "end": "399440"
  },
  {
    "text": "and uh we need to be like sure that",
    "start": "399440",
    "end": "402000"
  },
  {
    "text": "there is there is nothing uh rather than",
    "start": "402000",
    "end": "404560"
  },
  {
    "text": "the data itself like padding or whatnot",
    "start": "404560",
    "end": "406720"
  },
  {
    "text": "yeah and type safety",
    "start": "406720",
    "end": "408800"
  },
  {
    "text": "look",
    "start": "408800",
    "end": "409599"
  },
  {
    "text": "so here is our map and it's a hash map",
    "start": "409599",
    "end": "412080"
  },
  {
    "text": "of stat count keys to u64s so you know",
    "start": "412080",
    "end": "415520"
  },
  {
    "text": "we we can't make any mistakes with that",
    "start": "415520",
    "end": "418400"
  },
  {
    "text": "right exactly",
    "start": "418400",
    "end": "420840"
  },
  {
    "text": "yeah so what else like this is how we",
    "start": "420840",
    "end": "423759"
  },
  {
    "text": "actually attach to an event in this case",
    "start": "423759",
    "end": "426560"
  },
  {
    "text": "it's a perf event and this is another",
    "start": "426560",
    "end": "429280"
  },
  {
    "text": "feature for rust we can use actually",
    "start": "429280",
    "end": "431520"
  },
  {
    "text": "results for that this is a rather like",
    "start": "431520",
    "end": "433919"
  },
  {
    "text": "common pattern in io programs we ever",
    "start": "433919",
    "end": "436960"
  },
  {
    "text": "have an event handler but that event",
    "start": "436960",
    "end": "438800"
  },
  {
    "text": "handler actually calling and helper",
    "start": "438800",
    "end": "440479"
  },
  {
    "text": "function which returns an result and we",
    "start": "440479",
    "end": "443120"
  },
  {
    "text": "can just like uh in a high level handle",
    "start": "443120",
    "end": "445759"
  },
  {
    "text": "all the",
    "start": "445759",
    "end": "446960"
  },
  {
    "text": "events basically rather successful or",
    "start": "446960",
    "end": "449440"
  },
  {
    "text": "failure yeah so that that's important",
    "start": "449440",
    "end": "451440"
  },
  {
    "text": "because there's a lot of fallible",
    "start": "451440",
    "end": "453039"
  },
  {
    "text": "operations that can happen inside an",
    "start": "453039",
    "end": "454800"
  },
  {
    "text": "ebpf program",
    "start": "454800",
    "end": "456400"
  },
  {
    "text": "but we can't panic inside ebpf because",
    "start": "456400",
    "end": "460240"
  },
  {
    "text": "we're not allowed to it's it's not a",
    "start": "460240",
    "end": "461840"
  },
  {
    "text": "permitted instruction so this actually",
    "start": "461840",
    "end": "463840"
  },
  {
    "text": "gives us a relatively nice",
    "start": "463840",
    "end": "466319"
  },
  {
    "text": "way to handle errors um",
    "start": "466319",
    "end": "469440"
  },
  {
    "text": "and we also have a logging library as",
    "start": "469440",
    "end": "471199"
  },
  {
    "text": "well which is kind of like bpf trace",
    "start": "471199",
    "end": "474160"
  },
  {
    "text": "print k on steroids so you can actually",
    "start": "474160",
    "end": "476560"
  },
  {
    "text": "leave it there in production as well for",
    "start": "476560",
    "end": "478720"
  },
  {
    "text": "your logging",
    "start": "478720",
    "end": "480000"
  },
  {
    "text": "and that that will help you know try and",
    "start": "480000",
    "end": "482160"
  },
  {
    "text": "debug some of these errors if and when",
    "start": "482160",
    "end": "484000"
  },
  {
    "text": "they do occur",
    "start": "484000",
    "end": "486560"
  },
  {
    "text": "and this is the actual program we",
    "start": "486720",
    "end": "488639"
  },
  {
    "text": "actually update the",
    "start": "488639",
    "end": "491039"
  },
  {
    "text": "maps by like also getting the stakes uh",
    "start": "491039",
    "end": "494240"
  },
  {
    "text": "stacks from the kernel itself and then",
    "start": "494240",
    "end": "496720"
  },
  {
    "text": "we just count them and uh update the",
    "start": "496720",
    "end": "499039"
  },
  {
    "text": "maps i will",
    "start": "499039",
    "end": "500960"
  },
  {
    "text": "start being a little fast here i don't",
    "start": "500960",
    "end": "503440"
  },
  {
    "text": "want to take so much of your time which",
    "start": "503440",
    "end": "505759"
  },
  {
    "text": "we already had so you can also panic in",
    "start": "505759",
    "end": "508240"
  },
  {
    "text": "the ebpf program so you need to add a",
    "start": "508240",
    "end": "510400"
  },
  {
    "text": "line like that uh to actually handle the",
    "start": "510400",
    "end": "512640"
  },
  {
    "text": "panics yeah this this is literally just",
    "start": "512640",
    "end": "515039"
  },
  {
    "text": "making the rust compiler happy that you",
    "start": "515039",
    "end": "516719"
  },
  {
    "text": "actually can't panic uh so that we we",
    "start": "516719",
    "end": "519680"
  },
  {
    "text": "just have to have it there otherwise",
    "start": "519680",
    "end": "521120"
  },
  {
    "text": "rust gets",
    "start": "521120",
    "end": "522320"
  },
  {
    "text": "upset",
    "start": "522320",
    "end": "523440"
  },
  {
    "text": "exactly",
    "start": "523440",
    "end": "524640"
  },
  {
    "text": "so this is actually how you build uh",
    "start": "524640",
    "end": "527279"
  },
  {
    "text": "we still need to",
    "start": "527279",
    "end": "528720"
  },
  {
    "text": "have a nightly tool set uh for me to",
    "start": "528720",
    "end": "532320"
  },
  {
    "text": "make bpf linker and there's als already",
    "start": "532320",
    "end": "535519"
  },
  {
    "text": "a task in there for you to just generate",
    "start": "535519",
    "end": "538080"
  },
  {
    "text": "that program",
    "start": "538080",
    "end": "540720"
  },
  {
    "text": "and let's quickly check out the go",
    "start": "541680",
    "end": "544000"
  },
  {
    "text": "program that we have like after you",
    "start": "544000",
    "end": "545920"
  },
  {
    "text": "compiled that",
    "start": "545920",
    "end": "547600"
  },
  {
    "text": "ebpf program go has a facility to just",
    "start": "547600",
    "end": "550800"
  },
  {
    "text": "embed them into the binaries you just",
    "start": "550800",
    "end": "552959"
  },
  {
    "text": "say that okay this is where that object",
    "start": "552959",
    "end": "555200"
  },
  {
    "text": "file actually",
    "start": "555200",
    "end": "556480"
  },
  {
    "text": "stays and just like embed that to the",
    "start": "556480",
    "end": "558640"
  },
  {
    "text": "library",
    "start": "558640",
    "end": "560560"
  },
  {
    "text": "we actually mentioned that in the rust",
    "start": "560560",
    "end": "563040"
  },
  {
    "text": "uh as well like we need to match the",
    "start": "563040",
    "end": "565440"
  },
  {
    "text": "keys uh so that we can read them in the",
    "start": "565440",
    "end": "568320"
  },
  {
    "text": "user space as well uh in this case like",
    "start": "568320",
    "end": "571839"
  },
  {
    "text": "kind of the memory layout is the same",
    "start": "571839",
    "end": "574160"
  },
  {
    "text": "with the c program and the go program",
    "start": "574160",
    "end": "576640"
  },
  {
    "text": "and we can just like uh",
    "start": "576640",
    "end": "578720"
  },
  {
    "text": "deserialize it",
    "start": "578720",
    "end": "580160"
  },
  {
    "text": "in the user space this is how actually",
    "start": "580160",
    "end": "582720"
  },
  {
    "text": "you use the bpf go to load that module",
    "start": "582720",
    "end": "585279"
  },
  {
    "text": "and the lower the object",
    "start": "585279",
    "end": "588000"
  },
  {
    "text": "and then this is actually how you",
    "start": "588000",
    "end": "591120"
  },
  {
    "text": "start listening to perf events",
    "start": "591120",
    "end": "594720"
  },
  {
    "text": "and then you bring everything together",
    "start": "594720",
    "end": "597120"
  },
  {
    "text": "and you attach your program to that",
    "start": "597120",
    "end": "599279"
  },
  {
    "text": "specific perp event and the data starts",
    "start": "599279",
    "end": "602839"
  },
  {
    "text": "flowing this is you need to just like uh",
    "start": "602839",
    "end": "607120"
  },
  {
    "text": "keep a reference to the maps that you",
    "start": "607120",
    "end": "609360"
  },
  {
    "text": "have and you this you can just like get",
    "start": "609360",
    "end": "611600"
  },
  {
    "text": "that maps using the bpfco and then there",
    "start": "611600",
    "end": "615200"
  },
  {
    "text": "there's another like",
    "start": "615200",
    "end": "616720"
  },
  {
    "text": "kind of nice api that",
    "start": "616720",
    "end": "618959"
  },
  {
    "text": "the bpf exposes you can read them in",
    "start": "618959",
    "end": "621040"
  },
  {
    "text": "batch",
    "start": "621040",
    "end": "622480"
  },
  {
    "text": "you can do your magic in your user space",
    "start": "622480",
    "end": "626240"
  },
  {
    "text": "this is just a snippet to how to build",
    "start": "626240",
    "end": "628240"
  },
  {
    "text": "it uh the bpf core user program",
    "start": "628240",
    "end": "631200"
  },
  {
    "text": "slides are available you can check it",
    "start": "631200",
    "end": "634880"
  },
  {
    "text": "the whole program is",
    "start": "634880",
    "end": "637519"
  },
  {
    "text": "in a single pr you can actually",
    "start": "637519",
    "end": "640240"
  },
  {
    "text": "see the difference how we get from the c",
    "start": "640240",
    "end": "643279"
  },
  {
    "text": "program to a rs program",
    "start": "643279",
    "end": "645519"
  },
  {
    "text": "even with how we actually updated our",
    "start": "645519",
    "end": "647519"
  },
  {
    "text": "build tools what not like github actions",
    "start": "647519",
    "end": "650000"
  },
  {
    "text": "uh just check this pr out if you want to",
    "start": "650000",
    "end": "652560"
  },
  {
    "text": "go down that path",
    "start": "652560",
    "end": "655680"
  },
  {
    "text": "cool",
    "start": "656000",
    "end": "657839"
  },
  {
    "text": "so what is",
    "start": "657839",
    "end": "658839"
  },
  {
    "text": "next the whole idea behind this we are",
    "start": "658839",
    "end": "661680"
  },
  {
    "text": "planning to write rather complicated",
    "start": "661680",
    "end": "663440"
  },
  {
    "text": "profilers uh that runs on the",
    "start": "663440",
    "end": "666240"
  },
  {
    "text": "linux kernel to just support for example",
    "start": "666240",
    "end": "668959"
  },
  {
    "text": "dynamic languages or the vms like",
    "start": "668959",
    "end": "671760"
  },
  {
    "text": "java that's why we just like pick uh",
    "start": "671760",
    "end": "674800"
  },
  {
    "text": "go down this pad",
    "start": "674800",
    "end": "676320"
  },
  {
    "text": "uh at this point we didn't have a lot of",
    "start": "676320",
    "end": "678560"
  },
  {
    "text": "cpc programs uh written for bppf so that",
    "start": "678560",
    "end": "682480"
  },
  {
    "text": "also helped us",
    "start": "682480",
    "end": "683920"
  },
  {
    "text": "um like we are planning to add them in",
    "start": "683920",
    "end": "686720"
  },
  {
    "text": "parker soon",
    "start": "686720",
    "end": "689440"
  },
  {
    "text": "for the eye habits yeah lots of work to",
    "start": "689440",
    "end": "691600"
  },
  {
    "text": "do in ira um",
    "start": "691600",
    "end": "693600"
  },
  {
    "text": "plenty of program types still not",
    "start": "693600",
    "end": "695279"
  },
  {
    "text": "implemented it's an easy thing to do",
    "start": "695279",
    "end": "696880"
  },
  {
    "text": "we're just looking for",
    "start": "696880",
    "end": "698560"
  },
  {
    "text": "users so if you're interested come and",
    "start": "698560",
    "end": "700160"
  },
  {
    "text": "grab me later and i'll be happy to point",
    "start": "700160",
    "end": "702240"
  },
  {
    "text": "you in the right direction",
    "start": "702240",
    "end": "704640"
  },
  {
    "text": "and like most importantly we really want",
    "start": "704640",
    "end": "707120"
  },
  {
    "text": "to pitch our both of our projects we",
    "start": "707120",
    "end": "709120"
  },
  {
    "text": "need help uh we need contributors if",
    "start": "709120",
    "end": "711600"
  },
  {
    "text": "you're interested just like go and find",
    "start": "711600",
    "end": "714320"
  },
  {
    "text": "us we have links everywhere you can",
    "start": "714320",
    "end": "717120"
  },
  {
    "text": "parka as a discord channel i has a",
    "start": "717120",
    "end": "718959"
  },
  {
    "text": "discord channel we are rather active you",
    "start": "718959",
    "end": "721040"
  },
  {
    "text": "can just like come and ask for help and",
    "start": "721040",
    "end": "723360"
  },
  {
    "text": "we can uh actually help you to get into",
    "start": "723360",
    "end": "725519"
  },
  {
    "text": "the ebpf land as well",
    "start": "725519",
    "end": "728720"
  },
  {
    "text": "so thank you for listening and thank you",
    "start": "728720",
    "end": "731360"
  },
  {
    "text": "for bearing the agony with us",
    "start": "731360",
    "end": "733760"
  },
  {
    "text": "it was rather such a mess",
    "start": "733760",
    "end": "736160"
  },
  {
    "text": "sorry for that and these are the links",
    "start": "736160",
    "end": "738240"
  },
  {
    "text": "yeah hit them also a quick shout out to",
    "start": "738240",
    "end": "740399"
  },
  {
    "text": "the bpf and aqua security they really",
    "start": "740399",
    "end": "742639"
  },
  {
    "text": "helped us as well yeah they are also",
    "start": "742639",
    "end": "744480"
  },
  {
    "text": "looking for contributors so yeah please",
    "start": "744480",
    "end": "747600"
  },
  {
    "text": "thanks",
    "start": "747600",
    "end": "749920"
  },
  {
    "text": "all right yes well done for dealing with",
    "start": "753360",
    "end": "756000"
  },
  {
    "text": "all those technical issues uh i see one",
    "start": "756000",
    "end": "758880"
  },
  {
    "text": "question already we'll just take a few",
    "start": "758880",
    "end": "760639"
  },
  {
    "text": "questions",
    "start": "760639",
    "end": "763279"
  },
  {
    "text": "so first of all thank you for your",
    "start": "763279",
    "end": "764800"
  },
  {
    "text": "patience in dealing with all the issues",
    "start": "764800",
    "end": "766480"
  },
  {
    "text": "we really appreciated the talk",
    "start": "766480",
    "end": "768480"
  },
  {
    "text": "um when dealing when writing ebpf and",
    "start": "768480",
    "end": "771279"
  },
  {
    "text": "rust you have to make a lot of unsafe",
    "start": "771279",
    "end": "773279"
  },
  {
    "text": "calls",
    "start": "773279",
    "end": "774880"
  },
  {
    "text": "when you call unsafe you turn off a lot",
    "start": "774880",
    "end": "777440"
  },
  {
    "text": "of the compiler protections borrower",
    "start": "777440",
    "end": "779360"
  },
  {
    "text": "checking etc",
    "start": "779360",
    "end": "781440"
  },
  {
    "text": "what are some ideas or plans that you",
    "start": "781440",
    "end": "783200"
  },
  {
    "text": "have to move away from that so you can",
    "start": "783200",
    "end": "785200"
  },
  {
    "text": "actually gain the full power of the rust",
    "start": "785200",
    "end": "787040"
  },
  {
    "text": "compiler",
    "start": "787040",
    "end": "789120"
  },
  {
    "text": "that's a really good question um so a",
    "start": "789120",
    "end": "792000"
  },
  {
    "text": "lot of it we're trying to abstract away",
    "start": "792000",
    "end": "793680"
  },
  {
    "text": "inside the library itself so you as a",
    "start": "793680",
    "end": "796240"
  },
  {
    "text": "user don't have to do the unsafe work we",
    "start": "796240",
    "end": "798560"
  },
  {
    "text": "will for you so like you just call",
    "start": "798560",
    "end": "801200"
  },
  {
    "text": "hashmap insert and like all of the",
    "start": "801200",
    "end": "803440"
  },
  {
    "text": "unsafe stuff happens in the background",
    "start": "803440",
    "end": "805519"
  },
  {
    "text": "we can't get away from it because",
    "start": "805519",
    "end": "807040"
  },
  {
    "text": "ultimately it's forum function interface",
    "start": "807040",
    "end": "809440"
  },
  {
    "text": "and",
    "start": "809440",
    "end": "810320"
  },
  {
    "text": "changing stuff into raw pointers to pass",
    "start": "810320",
    "end": "812399"
  },
  {
    "text": "into a ce program is inherently unsafe",
    "start": "812399",
    "end": "814800"
  },
  {
    "text": "and working with raw pointers is unsafe",
    "start": "814800",
    "end": "816800"
  },
  {
    "text": "so yeah the real way is just abstract",
    "start": "816800",
    "end": "818560"
  },
  {
    "text": "that away from users",
    "start": "818560",
    "end": "820320"
  },
  {
    "text": "i think that's the plan",
    "start": "820320",
    "end": "823199"
  },
  {
    "text": "more questions",
    "start": "823519",
    "end": "826160"
  },
  {
    "text": "anyone",
    "start": "826959",
    "end": "829680"
  },
  {
    "text": "yes i see another one",
    "start": "829680",
    "end": "832720"
  },
  {
    "text": "so first thank you for the great",
    "start": "836639",
    "end": "838560"
  },
  {
    "text": "presentation enjoyed it the question is",
    "start": "838560",
    "end": "840880"
  },
  {
    "text": "what is the performance overhead",
    "start": "840880",
    "end": "843120"
  },
  {
    "text": "of rust against riding in c",
    "start": "843120",
    "end": "847120"
  },
  {
    "text": "in the kernel of course",
    "start": "847120",
    "end": "848800"
  },
  {
    "text": "um",
    "start": "848800",
    "end": "849920"
  },
  {
    "text": "none",
    "start": "849920",
    "end": "851760"
  },
  {
    "text": "not that i've observed anyway i mean",
    "start": "851760",
    "end": "853360"
  },
  {
    "text": "ultimately it compiles down to",
    "start": "853360",
    "end": "855440"
  },
  {
    "text": "bpf instructions and the",
    "start": "855440",
    "end": "858320"
  },
  {
    "text": "program that you would write in c is",
    "start": "858320",
    "end": "860639"
  },
  {
    "text": "basically the same",
    "start": "860639",
    "end": "863040"
  },
  {
    "text": "rust",
    "start": "863040",
    "end": "865440"
  },
  {
    "text": "around some of the lvm stuff like mem",
    "start": "866639",
    "end": "868560"
  },
  {
    "text": "set and mem copy which we're just",
    "start": "868560",
    "end": "870000"
  },
  {
    "text": "working through but for the most part um",
    "start": "870000",
    "end": "873199"
  },
  {
    "text": "they're identical performance-wise",
    "start": "873199",
    "end": "876639"
  },
  {
    "text": "all right one more question if there is",
    "start": "878000",
    "end": "880160"
  },
  {
    "text": "one",
    "start": "880160",
    "end": "882240"
  },
  {
    "text": "if there is one am i missing anybody",
    "start": "882240",
    "end": "886079"
  },
  {
    "text": "all right so let's give one more giant",
    "start": "886639",
    "end": "888880"
  },
  {
    "text": "round of applause for",
    "start": "888880",
    "end": "891120"
  },
  {
    "text": "all those technical difficulties",
    "start": "891120",
    "end": "894639"
  }
]