[
  {
    "text": "hello we're gonna start now so our talk",
    "start": "1350",
    "end": "6089"
  },
  {
    "text": "today is a deep dive on safety inspire",
    "start": "6089",
    "end": "9410"
  },
  {
    "text": "my name is Emiliano Birnbaum and I work",
    "start": "9410",
    "end": "12360"
  },
  {
    "text": "at a company site tail and we're one of",
    "start": "12360",
    "end": "15089"
  },
  {
    "text": "the maintainer x' of the spiffy inspired",
    "start": "15089",
    "end": "17340"
  },
  {
    "text": "project and i'm co-presenting with my",
    "start": "17340",
    "end": "20820"
  },
  {
    "text": "colleague Andrew Hardy",
    "start": "20820",
    "end": "22260"
  },
  {
    "text": "so Andrew Harding of an engineer at",
    "start": "22260",
    "end": "24840"
  },
  {
    "text": "Saito",
    "start": "24840",
    "end": "25400"
  },
  {
    "text": "great so today what we want to do is",
    "start": "25400",
    "end": "30000"
  },
  {
    "text": "just go over some of the features",
    "start": "30000",
    "end": "31800"
  },
  {
    "text": "inspire a lot of the work that we've",
    "start": "31800",
    "end": "33630"
  },
  {
    "text": "done since our last presentation at coop",
    "start": "33630",
    "end": "37739"
  },
  {
    "text": "con and today we're going to cover",
    "start": "37739",
    "end": "39570"
  },
  {
    "text": "federation jot jot support which we just",
    "start": "39570",
    "end": "45120"
  },
  {
    "text": "added this October and then we're going",
    "start": "45120",
    "end": "47520"
  },
  {
    "text": "to show all this in a non-void demo that",
    "start": "47520",
    "end": "49280"
  },
  {
    "text": "Andrew will walk you through and then",
    "start": "49280",
    "end": "51899"
  },
  {
    "text": "we'll just wrap it up with next steps",
    "start": "51899",
    "end": "54239"
  },
  {
    "text": "and questions from the audience",
    "start": "54239",
    "end": "58410"
  },
  {
    "text": "so before we start if anyone has any",
    "start": "58410",
    "end": "62280"
  },
  {
    "text": "feedback or anything they want to tell",
    "start": "62280",
    "end": "64228"
  },
  {
    "text": "us about spiffy inspire we would love to",
    "start": "64229",
    "end": "66390"
  },
  {
    "text": "hear about it",
    "start": "66390",
    "end": "67310"
  },
  {
    "text": "Jenny Schaefer is our information",
    "start": "67310",
    "end": "69900"
  },
  {
    "text": "architect if you could write to her and",
    "start": "69900",
    "end": "72659"
  },
  {
    "text": "just pinger we'd really like we'd love",
    "start": "72659",
    "end": "75270"
  },
  {
    "text": "to hear from you and and just get you",
    "start": "75270",
    "end": "78180"
  },
  {
    "text": "know your feedback on spiffy spire and",
    "start": "78180",
    "end": "80119"
  },
  {
    "text": "kubernetes support also so just to start",
    "start": "80119",
    "end": "85409"
  },
  {
    "text": "off this is going to be an intermediate",
    "start": "85409",
    "end": "87810"
  },
  {
    "text": "talk the assumption here is that",
    "start": "87810",
    "end": "90380"
  },
  {
    "text": "everyone has heard of the spiffy inspire",
    "start": "90380",
    "end": "93329"
  },
  {
    "text": "and there's some rudimentary",
    "start": "93329",
    "end": "94409"
  },
  {
    "text": "understanding of it if not Andrew Jessup",
    "start": "94409",
    "end": "98700"
  },
  {
    "text": "and Dan Feldman did a talk yesterday",
    "start": "98700",
    "end": "102140"
  },
  {
    "text": "covering this you could you could just",
    "start": "102140",
    "end": "105450"
  },
  {
    "text": "go here or when the video is loaded you",
    "start": "105450",
    "end": "108149"
  },
  {
    "text": "could you could review it there and they",
    "start": "108149",
    "end": "111000"
  },
  {
    "text": "really step through what um what spiffy",
    "start": "111000",
    "end": "113790"
  },
  {
    "text": "inspire is also another Matt Moyer who",
    "start": "113790",
    "end": "118860"
  },
  {
    "text": "works at a VMware now",
    "start": "118860",
    "end": "122790"
  },
  {
    "text": "and Evan Gillman they gave a talk",
    "start": "122790",
    "end": "124830"
  },
  {
    "text": "yesterday on on security there was an",
    "start": "124830",
    "end": "129300"
  },
  {
    "text": "audit that we did thanks of Justin",
    "start": "129300",
    "end": "131430"
  },
  {
    "text": "Capo's and Evan and Matt and Enrico they",
    "start": "131430",
    "end": "135450"
  },
  {
    "text": "put that together",
    "start": "135450",
    "end": "136170"
  },
  {
    "text": "another great talk that if you're",
    "start": "136170",
    "end": "137670"
  },
  {
    "text": "interested in security inspire I would",
    "start": "137670",
    "end": "140730"
  },
  {
    "text": "really recommend that you check that out",
    "start": "140730",
    "end": "143270"
  },
  {
    "text": "so first thing we'll talk about is",
    "start": "143270",
    "end": "146300"
  },
  {
    "text": "Federation and how we support that and",
    "start": "146300",
    "end": "149250"
  },
  {
    "text": "how we see that just today we actually",
    "start": "149250",
    "end": "152340"
  },
  {
    "text": "published a blog post on Federation that",
    "start": "152340",
    "end": "155040"
  },
  {
    "text": "the Dan wrote you could check it out at",
    "start": "155040",
    "end": "157950"
  },
  {
    "text": "our at our blog and it just goes into a",
    "start": "157950",
    "end": "161070"
  },
  {
    "text": "little more detail about what we're",
    "start": "161070",
    "end": "162870"
  },
  {
    "text": "doing so right now with with Federation",
    "start": "162870",
    "end": "168030"
  },
  {
    "text": "the way what we're going to show you is",
    "start": "168030",
    "end": "170810"
  },
  {
    "text": "how you could accomplish that today with",
    "start": "170810",
    "end": "173220"
  },
  {
    "text": "the registration API which I'll talk",
    "start": "173220",
    "end": "175230"
  },
  {
    "text": "about in a second and how we expose that",
    "start": "175230",
    "end": "177840"
  },
  {
    "text": "Federation via the workload API so just",
    "start": "177840",
    "end": "181860"
  },
  {
    "text": "to be clear a currently inspiring server",
    "start": "181860",
    "end": "184530"
  },
  {
    "text": "the workload API is what we've exposed",
    "start": "184530",
    "end": "188070"
  },
  {
    "text": "in the spiffy in the spiffy spec that's",
    "start": "188070",
    "end": "191640"
  },
  {
    "text": "been codified and it is part of the the",
    "start": "191640",
    "end": "194640"
  },
  {
    "text": "spiffy spiffy specification the",
    "start": "194640",
    "end": "197610"
  },
  {
    "text": "registration API and node API our spire",
    "start": "197610",
    "end": "201019"
  },
  {
    "text": "api's we we haven't codified those yet",
    "start": "201019",
    "end": "204209"
  },
  {
    "text": "we might in the future the node API is",
    "start": "204209",
    "end": "207750"
  },
  {
    "text": "is how an agent discovers itself and",
    "start": "207750",
    "end": "211080"
  },
  {
    "text": "talks to the spire server and the",
    "start": "211080",
    "end": "213510"
  },
  {
    "text": "registration API is actually how you",
    "start": "213510",
    "end": "215790"
  },
  {
    "text": "create the the relationships or the",
    "start": "215790",
    "end": "218340"
  },
  {
    "text": "registrations inside of the spire server",
    "start": "218340",
    "end": "220170"
  },
  {
    "text": "that it then are served out by the by",
    "start": "220170",
    "end": "222660"
  },
  {
    "text": "the agents and we just see here so I",
    "start": "222660",
    "end": "226200"
  },
  {
    "text": "just wanted to show you a snippet of the",
    "start": "226200",
    "end": "228120"
  },
  {
    "text": "of the workload API and just show you",
    "start": "228120",
    "end": "231330"
  },
  {
    "text": "how we how we accomplish right now the",
    "start": "231330",
    "end": "233510"
  },
  {
    "text": "the Federation where what we're doing is",
    "start": "233510",
    "end": "236250"
  },
  {
    "text": "that we will when when a workload calls",
    "start": "236250",
    "end": "240390"
  },
  {
    "text": "a Federation API not only does it get",
    "start": "240390",
    "end": "242670"
  },
  {
    "text": "its identity it also gets all the",
    "start": "242670",
    "end": "244320"
  },
  {
    "text": "federated bundles just the bag of",
    "start": "244320",
    "end": "246989"
  },
  {
    "text": "bundles that it's supposed to get and",
    "start": "246989",
    "end": "249500"
  },
  {
    "text": "actually the the spiffy the",
    "start": "249500",
    "end": "253910"
  },
  {
    "text": "the trust domains that it's supposed to",
    "start": "253910",
    "end": "255860"
  },
  {
    "text": "federate with and then it could it it'll",
    "start": "255860",
    "end": "259760"
  },
  {
    "text": "get all that all that material and then",
    "start": "259760",
    "end": "261980"
  },
  {
    "text": "after that it will just use that to",
    "start": "261980",
    "end": "264130"
  },
  {
    "text": "create an MPLS connection to a different",
    "start": "264130",
    "end": "266600"
  },
  {
    "text": "workload so I'm gonna just do a quick",
    "start": "266600",
    "end": "268600"
  },
  {
    "text": "step through on what this looks like so",
    "start": "268600",
    "end": "271190"
  },
  {
    "text": "if you could you know we have two two",
    "start": "271190",
    "end": "274460"
  },
  {
    "text": "different trust domains here we have a",
    "start": "274460",
    "end": "275960"
  },
  {
    "text": "web trust Amane and an echo trust domain",
    "start": "275960",
    "end": "278810"
  },
  {
    "text": "and what we basically do here is we just",
    "start": "278810",
    "end": "283340"
  },
  {
    "text": "push the bundles from one trust domain",
    "start": "283340",
    "end": "286280"
  },
  {
    "text": "to the other and now we we have the the",
    "start": "286280",
    "end": "290330"
  },
  {
    "text": "to the two trusts domains have federated",
    "start": "290330",
    "end": "293360"
  },
  {
    "text": "with each other they have all their",
    "start": "293360",
    "end": "295190"
  },
  {
    "text": "older older material and then the next",
    "start": "295190",
    "end": "298610"
  },
  {
    "text": "step here is that we want to register",
    "start": "298610",
    "end": "301130"
  },
  {
    "text": "those those workloads and again Andrew",
    "start": "301130",
    "end": "303890"
  },
  {
    "text": "will actually show work an example of",
    "start": "303890",
    "end": "305750"
  },
  {
    "text": "this and what you do is you you register",
    "start": "305750",
    "end": "309290"
  },
  {
    "text": "the with a webserver workload with the",
    "start": "309290",
    "end": "311960"
  },
  {
    "text": "spire server and just tell it that it's",
    "start": "311960",
    "end": "314240"
  },
  {
    "text": "going to federate with the with the",
    "start": "314240",
    "end": "315800"
  },
  {
    "text": "other trust domain and vice versa for",
    "start": "315800",
    "end": "318080"
  },
  {
    "text": "the other trust domain at this point the",
    "start": "318080",
    "end": "323510"
  },
  {
    "text": "registration API has been updated I'm",
    "start": "323510",
    "end": "326390"
  },
  {
    "text": "sorry our our our mappings have been",
    "start": "326390",
    "end": "330650"
  },
  {
    "text": "updated and the the workloads will go",
    "start": "330650",
    "end": "333980"
  },
  {
    "text": "through attestation after they go",
    "start": "333980",
    "end": "336200"
  },
  {
    "text": "through attestation we deliver all the",
    "start": "336200",
    "end": "338720"
  },
  {
    "text": "all the correct crypto and all the all",
    "start": "338720",
    "end": "341990"
  },
  {
    "text": "the bundles that they need and at this",
    "start": "341990",
    "end": "344870"
  },
  {
    "text": "point the two workloads could",
    "start": "344870",
    "end": "347570"
  },
  {
    "text": "communicate via MPLS so that's just a",
    "start": "347570",
    "end": "351290"
  },
  {
    "text": "quick explanation of how we're doing",
    "start": "351290",
    "end": "354620"
  },
  {
    "text": "this so what are the next steps right so",
    "start": "354620",
    "end": "358400"
  },
  {
    "text": "right now what we're actually doing is",
    "start": "358400",
    "end": "360280"
  },
  {
    "text": "in our six spec group that meets once a",
    "start": "360280",
    "end": "363590"
  },
  {
    "text": "week and colleague Evan Gillman runs",
    "start": "363590",
    "end": "366650"
  },
  {
    "text": "that we're working through the",
    "start": "366650",
    "end": "368390"
  },
  {
    "text": "Federation API right what we kind of saw",
    "start": "368390",
    "end": "371060"
  },
  {
    "text": "there is that I bootstrap trust between",
    "start": "371060",
    "end": "374210"
  },
  {
    "text": "those two trust domains and what we",
    "start": "374210",
    "end": "376610"
  },
  {
    "text": "really want to do is have an API that",
    "start": "376610",
    "end": "377900"
  },
  {
    "text": "lets you have some form of discovery and",
    "start": "377900",
    "end": "380480"
  },
  {
    "text": "also rotation across these these domains",
    "start": "380480",
    "end": "384050"
  },
  {
    "text": "and this is actually what we're actively",
    "start": "384050",
    "end": "385880"
  },
  {
    "text": "working on right now and we're trying to",
    "start": "385880",
    "end": "389210"
  },
  {
    "text": "see also how we're gonna boot up",
    "start": "389210",
    "end": "390910"
  },
  {
    "text": "bootstrap trust between two different",
    "start": "390910",
    "end": "394250"
  },
  {
    "text": "domains and then that that API will be",
    "start": "394250",
    "end": "400160"
  },
  {
    "text": "codified we'll add that to the spec and",
    "start": "400160",
    "end": "402620"
  },
  {
    "text": "then we'll have the workload API and the",
    "start": "402620",
    "end": "404840"
  },
  {
    "text": "Federation API so the idea here is that",
    "start": "404840",
    "end": "407080"
  },
  {
    "text": "if a control plane is spiffy compliant",
    "start": "407080",
    "end": "412160"
  },
  {
    "text": "where it supports all our api's a",
    "start": "412160",
    "end": "414880"
  },
  {
    "text": "different trust domain that that that",
    "start": "414880",
    "end": "417460"
  },
  {
    "text": "that supports that should be able to",
    "start": "417460",
    "end": "419600"
  },
  {
    "text": "federate with that with that different",
    "start": "419600",
    "end": "421580"
  },
  {
    "text": "domain and then the other thing we're",
    "start": "421580",
    "end": "423890"
  },
  {
    "text": "also working on is a bundle format for",
    "start": "423890",
    "end": "426980"
  },
  {
    "text": "this for these federated bundles and",
    "start": "426980",
    "end": "428620"
  },
  {
    "text": "right now we're landing on a jwk set",
    "start": "428620",
    "end": "433540"
  },
  {
    "text": "which were we're kind of we're going",
    "start": "433540",
    "end": "436190"
  },
  {
    "text": "there for two reasons that it just gives",
    "start": "436190",
    "end": "439430"
  },
  {
    "text": "us a flexibility for various types of",
    "start": "439430",
    "end": "441320"
  },
  {
    "text": "cryptographic keys which on a",
    "start": "441320",
    "end": "443990"
  },
  {
    "text": "future-proof it and also it's widely",
    "start": "443990",
    "end": "445940"
  },
  {
    "text": "supported and deployed primarily for",
    "start": "445940",
    "end": "449770"
  },
  {
    "text": "intra-domain federation so the next",
    "start": "449770",
    "end": "453710"
  },
  {
    "text": "thing we we worked on is jots and that",
    "start": "453710",
    "end": "458840"
  },
  {
    "text": "has been we actually added that as our",
    "start": "458840",
    "end": "462950"
  },
  {
    "text": "second identity document this october",
    "start": "462950",
    "end": "465290"
  },
  {
    "text": "and you know we'd really you know i just",
    "start": "465290",
    "end": "468650"
  },
  {
    "text": "want to really thank evan gilman justin",
    "start": "468650",
    "end": "472310"
  },
  {
    "text": "burke andrew harding spike curtis and",
    "start": "472310",
    "end": "474890"
  },
  {
    "text": "matt Moyer who worked on this and and",
    "start": "474890",
    "end": "478280"
  },
  {
    "text": "you know put a lot of time and effort",
    "start": "478280",
    "end": "480170"
  },
  {
    "text": "into it plus everyone else in the",
    "start": "480170",
    "end": "481760"
  },
  {
    "text": "community that gave us feedback and and",
    "start": "481760",
    "end": "484430"
  },
  {
    "text": "commented on the on the request so",
    "start": "484430",
    "end": "487340"
  },
  {
    "text": "that's out there now and just to show",
    "start": "487340",
    "end": "491270"
  },
  {
    "text": "again another snippet of the the",
    "start": "491270",
    "end": "494330"
  },
  {
    "text": "protobuf definition but i really just",
    "start": "494330",
    "end": "496580"
  },
  {
    "text": "want to highlight this section which is",
    "start": "496580",
    "end": "499900"
  },
  {
    "text": "the methods that we've added to the to",
    "start": "499900",
    "end": "503720"
  },
  {
    "text": "the api where a workload could fetch its",
    "start": "503720",
    "end": "507110"
  },
  {
    "text": "s fade via attestation to the the",
    "start": "507110",
    "end": "510080"
  },
  {
    "text": "workload is attested and we give it the",
    "start": "510080",
    "end": "512180"
  },
  {
    "text": "job that it needs and on the other side",
    "start": "512180",
    "end": "514940"
  },
  {
    "text": "we have different ways of validating",
    "start": "514940",
    "end": "518810"
  },
  {
    "text": "that",
    "start": "518810",
    "end": "519460"
  },
  {
    "text": "if the workload is if it understands the",
    "start": "519460",
    "end": "523710"
  },
  {
    "text": "the the workload API it could just call",
    "start": "523710",
    "end": "526630"
  },
  {
    "text": "validate job where it'll just hand it",
    "start": "526630",
    "end": "528610"
  },
  {
    "text": "back the job that it received and then",
    "start": "528610",
    "end": "530980"
  },
  {
    "text": "the spire agent will validate that or we",
    "start": "530980",
    "end": "534520"
  },
  {
    "text": "could also fetch the bundles and if you",
    "start": "534520",
    "end": "536920"
  },
  {
    "text": "have a side process or library that does",
    "start": "536920",
    "end": "538810"
  },
  {
    "text": "validation we could just get those JW KS",
    "start": "538810",
    "end": "542500"
  },
  {
    "text": "documents and feed it into that process",
    "start": "542500",
    "end": "544810"
  },
  {
    "text": "so I'll just do a quick walkthrough on",
    "start": "544810",
    "end": "548110"
  },
  {
    "text": "what that looks like",
    "start": "548110",
    "end": "549540"
  },
  {
    "text": "so again we're assuming here that the",
    "start": "549540",
    "end": "553930"
  },
  {
    "text": "two trusts domains have federated with",
    "start": "553930",
    "end": "556390"
  },
  {
    "text": "each other the workload goes out",
    "start": "556390",
    "end": "559200"
  },
  {
    "text": "requests a jot that is delivered by the",
    "start": "559200",
    "end": "562720"
  },
  {
    "text": "spire agent shots delivered and then we",
    "start": "562720",
    "end": "566350"
  },
  {
    "text": "create we we have a HTTP request to the",
    "start": "566350",
    "end": "570880"
  },
  {
    "text": "other server on a different trust domain",
    "start": "570880",
    "end": "574230"
  },
  {
    "text": "who when it receives the jot basically",
    "start": "574230",
    "end": "578230"
  },
  {
    "text": "will use the the workload API to",
    "start": "578230",
    "end": "580390"
  },
  {
    "text": "validate it and just get a yes or no and",
    "start": "580390",
    "end": "583390"
  },
  {
    "text": "and that's it so we'll demo that too so",
    "start": "583390",
    "end": "589740"
  },
  {
    "text": "we're gonna I'm gonna hand it off now to",
    "start": "589740",
    "end": "591990"
  },
  {
    "text": "to Andrew again I just wanted to thank",
    "start": "591990",
    "end": "596250"
  },
  {
    "text": "two of my colleagues that couldn't be",
    "start": "596250",
    "end": "598330"
  },
  {
    "text": "here Marco's hydro and Marcos Jacob we",
    "start": "598330",
    "end": "601180"
  },
  {
    "text": "really put a lot of work into this with",
    "start": "601180",
    "end": "602950"
  },
  {
    "text": "Andrew and just too bad that gonna be",
    "start": "602950",
    "end": "605560"
  },
  {
    "text": "here but just wanna make sure their name",
    "start": "605560",
    "end": "607480"
  },
  {
    "text": "gets mentioned Thanks thanks Millie Oh",
    "start": "607480",
    "end": "609820"
  },
  {
    "text": "No",
    "start": "609820",
    "end": "610089"
  },
  {
    "text": "can you guys hear me okay in the back",
    "start": "610089",
    "end": "611850"
  },
  {
    "text": "okay so before I hop into a terminal and",
    "start": "611850",
    "end": "615970"
  },
  {
    "text": "get going on the demo I just want to",
    "start": "615970",
    "end": "617680"
  },
  {
    "text": "take a quick walk through the",
    "start": "617680",
    "end": "618760"
  },
  {
    "text": "architecture the demo so you can",
    "start": "618760",
    "end": "619900"
  },
  {
    "text": "understand the flows that are happening",
    "start": "619900",
    "end": "621180"
  },
  {
    "text": "we're gonna start out with a web browser",
    "start": "621180",
    "end": "623230"
  },
  {
    "text": "and that web browser is gonna be making",
    "start": "623230",
    "end": "625690"
  },
  {
    "text": "a request to a web server and that web",
    "start": "625690",
    "end": "627339"
  },
  {
    "text": "server sitting inside of a container",
    "start": "627339",
    "end": "628600"
  },
  {
    "text": "that's inside of trust domain one so",
    "start": "628600",
    "end": "631209"
  },
  {
    "text": "everything on the left side here in",
    "start": "631209",
    "end": "632589"
  },
  {
    "text": "green that's going to all be belonging",
    "start": "632589",
    "end": "633940"
  },
  {
    "text": "to one trust the main the job with the",
    "start": "633940",
    "end": "636250"
  },
  {
    "text": "web server is to talk to an echo server",
    "start": "636250",
    "end": "638829"
  },
  {
    "text": "sitting in a separate container within",
    "start": "638829",
    "end": "640779"
  },
  {
    "text": "trust the main - now these two trust",
    "start": "640779",
    "end": "643420"
  },
  {
    "text": "domains for the demo purposes are just",
    "start": "643420",
    "end": "644920"
  },
  {
    "text": "containers running on my laptop but you",
    "start": "644920",
    "end": "646839"
  },
  {
    "text": "could imagine these could be two",
    "start": "646839",
    "end": "648910"
  },
  {
    "text": "disparate kubernetes clusters one could",
    "start": "648910",
    "end": "651070"
  },
  {
    "text": "be a sure one could be a",
    "start": "651070",
    "end": "652460"
  },
  {
    "text": "AWS 1 can be GCP 1 could be you know",
    "start": "652460",
    "end": "655310"
  },
  {
    "text": "some on-prem deployment anywhere where",
    "start": "655310",
    "end": "657350"
  },
  {
    "text": "spire can run and where you can get TCP",
    "start": "657350",
    "end": "660860"
  },
  {
    "text": "communication between the two you can do",
    "start": "660860",
    "end": "662780"
  },
  {
    "text": "this",
    "start": "662780",
    "end": "663110"
  },
  {
    "text": "spire based Federation flow so in order",
    "start": "663110",
    "end": "668480"
  },
  {
    "text": "to facilitate secure communication",
    "start": "668480",
    "end": "670340"
  },
  {
    "text": "between these two workloads we're gonna",
    "start": "670340",
    "end": "672020"
  },
  {
    "text": "employ a set of envoy proxies the Envoy",
    "start": "672020",
    "end": "674240"
  },
  {
    "text": "proxy co-located with the webserver is",
    "start": "674240",
    "end": "675980"
  },
  {
    "text": "going to be set up as a forward proxy",
    "start": "675980",
    "end": "677720"
  },
  {
    "text": "that's going to pipe traffic to the",
    "start": "677720",
    "end": "679760"
  },
  {
    "text": "Envoy proxy co-located with the echo",
    "start": "679760",
    "end": "681680"
  },
  {
    "text": "server which is going to be a you know",
    "start": "681680",
    "end": "683330"
  },
  {
    "text": "in the reverse proxy configuration the",
    "start": "683330",
    "end": "686420"
  },
  {
    "text": "Envoy proxies themselves are going to be",
    "start": "686420",
    "end": "688580"
  },
  {
    "text": "obtaining their secret material from the",
    "start": "688580",
    "end": "690710"
  },
  {
    "text": "workload api running on the spire agent",
    "start": "690710",
    "end": "692420"
  },
  {
    "text": "now today boy doesn't know how to talk",
    "start": "692420",
    "end": "694100"
  },
  {
    "text": "to the workload api directly so in",
    "start": "694100",
    "end": "696260"
  },
  {
    "text": "between the two we've injected a spiffy",
    "start": "696260",
    "end": "698960"
  },
  {
    "text": "envoy agent process that's the glue",
    "start": "698960",
    "end": "700640"
  },
  {
    "text": "between it exposes the secret discovery",
    "start": "700640",
    "end": "702950"
  },
  {
    "text": "service API in the external off API that",
    "start": "702950",
    "end": "705980"
  },
  {
    "text": "amelie knows how to talk to and on the",
    "start": "705980",
    "end": "708560"
  },
  {
    "text": "backend it's going to be servicing those",
    "start": "708560",
    "end": "709880"
  },
  {
    "text": "requests or facilitating servicing those",
    "start": "709880",
    "end": "711680"
  },
  {
    "text": "requests by talking to the workload API",
    "start": "711680",
    "end": "714050"
  },
  {
    "text": "running on the spire agent and of course",
    "start": "714050",
    "end": "716240"
  },
  {
    "text": "the spire agent if you're familiar with",
    "start": "716240",
    "end": "718100"
  },
  {
    "text": "the attestation flow and how that works",
    "start": "718100",
    "end": "719870"
  },
  {
    "text": "these two spire agents are going to be",
    "start": "719870",
    "end": "721970"
  },
  {
    "text": "coordinating with spire servers that are",
    "start": "721970",
    "end": "723740"
  },
  {
    "text": "operating out of separate containers",
    "start": "723740",
    "end": "725300"
  },
  {
    "text": "within the same trust domains and as in",
    "start": "725300",
    "end": "728270"
  },
  {
    "text": "Miele I know went through we're gonna",
    "start": "728270",
    "end": "730400"
  },
  {
    "text": "have a step of Federation between these",
    "start": "730400",
    "end": "732350"
  },
  {
    "text": "two trust domains we're gonna have a",
    "start": "732350",
    "end": "733850"
  },
  {
    "text": "transference of trust bundle information",
    "start": "733850",
    "end": "735650"
  },
  {
    "text": "so that workloads in one trust domain",
    "start": "735650",
    "end": "739310"
  },
  {
    "text": "can verify identities that originated",
    "start": "739310",
    "end": "741050"
  },
  {
    "text": "from the other trust Amin okay so in the",
    "start": "741050",
    "end": "744680"
  },
  {
    "text": "first connection flow we're gonna do web",
    "start": "744680",
    "end": "747410"
  },
  {
    "text": "browser again makes a request to the web",
    "start": "747410",
    "end": "748730"
  },
  {
    "text": "server it's going to talk to port 8000",
    "start": "748730",
    "end": "750860"
  },
  {
    "text": "won on this forward proxy and the",
    "start": "750860",
    "end": "754220"
  },
  {
    "text": "forward proxy has been configured to",
    "start": "754220",
    "end": "756050"
  },
  {
    "text": "talk to the STS API running inside this",
    "start": "756050",
    "end": "758840"
  },
  {
    "text": "bit the ANBU agent and it's going to",
    "start": "758840",
    "end": "760640"
  },
  {
    "text": "stream out secrets namely it's going to",
    "start": "760640",
    "end": "762440"
  },
  {
    "text": "stream out a TLS certificate to use in",
    "start": "762440",
    "end": "765980"
  },
  {
    "text": "the client role of the TM TLS handshake",
    "start": "765980",
    "end": "767840"
  },
  {
    "text": "it's can also stream out a set of",
    "start": "767840",
    "end": "770390"
  },
  {
    "text": "trusted root certificates that they can",
    "start": "770390",
    "end": "772280"
  },
  {
    "text": "use to validate the server certificate",
    "start": "772280",
    "end": "774290"
  },
  {
    "text": "presented during M TLS as soon as it has",
    "start": "774290",
    "end": "778610"
  },
  {
    "text": "its secrets when the request comes in",
    "start": "778610",
    "end": "780860"
  },
  {
    "text": "it's going to make that M TLS connection",
    "start": "780860",
    "end": "782060"
  },
  {
    "text": "to port 8000 one on the reverse proxy",
    "start": "782060",
    "end": "784430"
  },
  {
    "text": "which has also been configured",
    "start": "784430",
    "end": "786230"
  },
  {
    "text": "to talk to us TS to pull out a",
    "start": "786230",
    "end": "787610"
  },
  {
    "text": "certificate instead of trusted roots and",
    "start": "787610",
    "end": "789560"
  },
  {
    "text": "assuming that handshake all goes okay",
    "start": "789560",
    "end": "792740"
  },
  {
    "text": "the Envoy proxies can afford the request",
    "start": "792740",
    "end": "794840"
  },
  {
    "text": "on to the echo server okay so that's",
    "start": "794840",
    "end": "797480"
  },
  {
    "text": "that's our first connection direct M TLS",
    "start": "797480",
    "end": "799490"
  },
  {
    "text": "connection between two Envoy proxies our",
    "start": "799490",
    "end": "801950"
  },
  {
    "text": "second scenario the web browser is again",
    "start": "801950",
    "end": "804590"
  },
  {
    "text": "going to talk to the web server this",
    "start": "804590",
    "end": "806030"
  },
  {
    "text": "time it's going to talk to port 8000 T",
    "start": "806030",
    "end": "807680"
  },
  {
    "text": "running on the Envoy forward proxy and",
    "start": "807680",
    "end": "810440"
  },
  {
    "text": "which has been configured to contact the",
    "start": "810440",
    "end": "812780"
  },
  {
    "text": "external off API and the implementation",
    "start": "812780",
    "end": "816350"
  },
  {
    "text": "for the external off API is going to",
    "start": "816350",
    "end": "817670"
  },
  {
    "text": "request the jot to a jot from the",
    "start": "817670",
    "end": "819530"
  },
  {
    "text": "workload API and inject it in the HTTP",
    "start": "819530",
    "end": "822110"
  },
  {
    "text": "request so after that job has been",
    "start": "822110",
    "end": "827780"
  },
  {
    "text": "injected a TLS connection is going to be",
    "start": "827780",
    "end": "830360"
  },
  {
    "text": "made to the layer seven proxy and that",
    "start": "830360",
    "end": "831920"
  },
  {
    "text": "request is gonna be forwarded on through",
    "start": "831920",
    "end": "833360"
  },
  {
    "text": "and they ll subband proxy is going to",
    "start": "833360",
    "end": "836240"
  },
  {
    "text": "turn around and stablish TLS connection",
    "start": "836240",
    "end": "837350"
  },
  {
    "text": "to port 8000 to on the reverse proxy",
    "start": "837350",
    "end": "840440"
  },
  {
    "text": "which of course is using SDS to obtain",
    "start": "840440",
    "end": "843410"
  },
  {
    "text": "the server certificate that it presents",
    "start": "843410",
    "end": "844760"
  },
  {
    "text": "during the handshake once the TLS",
    "start": "844760",
    "end": "847160"
  },
  {
    "text": "handshake is completed the HTTP request",
    "start": "847160",
    "end": "849260"
  },
  {
    "text": "flows all the way through to the Envoy",
    "start": "849260",
    "end": "850670"
  },
  {
    "text": "reverse proxy it's going to talk the",
    "start": "850670",
    "end": "852740"
  },
  {
    "text": "external off API which is going to get",
    "start": "852740",
    "end": "855470"
  },
  {
    "text": "the headers for the request it's going",
    "start": "855470",
    "end": "856910"
  },
  {
    "text": "to strip out the jot token from the",
    "start": "856910",
    "end": "859190"
  },
  {
    "text": "authentication header and it's going to",
    "start": "859190",
    "end": "860720"
  },
  {
    "text": "forward along to the spire agent for",
    "start": "860720",
    "end": "862520"
  },
  {
    "text": "validation and assuming everything",
    "start": "862520",
    "end": "864320"
  },
  {
    "text": "validates okay then it'll get forwarded",
    "start": "864320",
    "end": "866630"
  },
  {
    "text": "on to the echo server alright so give me",
    "start": "866630",
    "end": "871010"
  },
  {
    "text": "just a second here to mess around with",
    "start": "871010",
    "end": "874760"
  },
  {
    "text": "displays these real quick all right is",
    "start": "874760",
    "end": "881390"
  },
  {
    "text": "that font big enough for you guys in the",
    "start": "881390",
    "end": "882740"
  },
  {
    "text": "back perfect okay so first things first",
    "start": "882740",
    "end": "885800"
  },
  {
    "text": "let's start up our containers so we've",
    "start": "885800",
    "end": "892040"
  },
  {
    "text": "got again a container for each of the",
    "start": "892040",
    "end": "893960"
  },
  {
    "text": "spire servers running in these trust",
    "start": "893960",
    "end": "895280"
  },
  {
    "text": "domains a container for the workload",
    "start": "895280",
    "end": "897170"
  },
  {
    "text": "along with the co-located Envoy proxy",
    "start": "897170",
    "end": "898820"
  },
  {
    "text": "and spiffing envoy agent inspire agent",
    "start": "898820",
    "end": "900440"
  },
  {
    "text": "and then a container for the layer seven",
    "start": "900440",
    "end": "902270"
  },
  {
    "text": "proxy so now that our containers are",
    "start": "902270",
    "end": "904880"
  },
  {
    "text": "running let's start up the workloads so",
    "start": "904880",
    "end": "907850"
  },
  {
    "text": "we've got a web server and an echo",
    "start": "907850",
    "end": "908840"
  },
  {
    "text": "server and before we go any farther",
    "start": "908840",
    "end": "911690"
  },
  {
    "text": "setting up our infrastructure let's hop",
    "start": "911690",
    "end": "913520"
  },
  {
    "text": "over to the browser here",
    "start": "913520",
    "end": "917720"
  },
  {
    "text": "and we can see that the web server",
    "start": "917720",
    "end": "919910"
  },
  {
    "text": "presents us with three choices on how to",
    "start": "919910",
    "end": "921590"
  },
  {
    "text": "need how it can connect with the backend",
    "start": "921590",
    "end": "923540"
  },
  {
    "text": "with the echo server so let's just do a",
    "start": "923540",
    "end": "925730"
  },
  {
    "text": "direct connection first to set up our",
    "start": "925730",
    "end": "927260"
  },
  {
    "text": "expectations you can see that the were",
    "start": "927260",
    "end": "930230"
  },
  {
    "text": "shown the headers that were sent by the",
    "start": "930230",
    "end": "932000"
  },
  {
    "text": "web server and headers that were",
    "start": "932000",
    "end": "933620"
  },
  {
    "text": "received by the echo server and since",
    "start": "933620",
    "end": "935240"
  },
  {
    "text": "this is a direct connection between the",
    "start": "935240",
    "end": "936890"
  },
  {
    "text": "two we'd expect them to match and they",
    "start": "936890",
    "end": "938300"
  },
  {
    "text": "do you can see our super-secret password",
    "start": "938300",
    "end": "940250"
  },
  {
    "text": "we're passing along which we don't want",
    "start": "940250",
    "end": "942740"
  },
  {
    "text": "to be in the clear and hence we're gonna",
    "start": "942740",
    "end": "944000"
  },
  {
    "text": "set up some secure communication",
    "start": "944000",
    "end": "945680"
  },
  {
    "text": "infrastructure via Envoy so going back",
    "start": "945680",
    "end": "950480"
  },
  {
    "text": "to our terminal here we're gonna start",
    "start": "950480",
    "end": "954620"
  },
  {
    "text": "the called aspire infrastructure this is",
    "start": "954620",
    "end": "956150"
  },
  {
    "text": "the spire servers the spire agents and",
    "start": "956150",
    "end": "959150"
  },
  {
    "text": "the spiffy envoy agent envoy is already",
    "start": "959150",
    "end": "961790"
  },
  {
    "text": "running in these containers so we don't",
    "start": "961790",
    "end": "962960"
  },
  {
    "text": "need to start it up and then we're going",
    "start": "962960",
    "end": "965510"
  },
  {
    "text": "to do the Federation step before we",
    "start": "965510",
    "end": "968030"
  },
  {
    "text": "federated just show you if I can type",
    "start": "968030",
    "end": "972830"
  },
  {
    "text": "today so we're gonna run this dump",
    "start": "972830",
    "end": "981080"
  },
  {
    "text": "command on the spiffy gombo age of",
    "start": "981080",
    "end": "982370"
  },
  {
    "text": "binary and boy you guys nuts you dad",
    "start": "982370",
    "end": "986650"
  },
  {
    "text": "there we go",
    "start": "986650",
    "end": "988100"
  },
  {
    "text": "and then what that dump command is going",
    "start": "988100",
    "end": "990260"
  },
  {
    "text": "to do it's going to connect to the",
    "start": "990260",
    "end": "991310"
  },
  {
    "text": "currently running spiffy Envoy agent and",
    "start": "991310",
    "end": "993050"
  },
  {
    "text": "just dump all the resources that are",
    "start": "993050",
    "end": "994430"
  },
  {
    "text": "being that are available over SDS let me",
    "start": "994430",
    "end": "997370"
  },
  {
    "text": "see oh we have we have no resources",
    "start": "997370",
    "end": "999170"
  },
  {
    "text": "actually before I do that sorry we were",
    "start": "999170",
    "end": "1001300"
  },
  {
    "text": "talking about Federation what I actually",
    "start": "1001300",
    "end": "1003490"
  },
  {
    "text": "wanted to do it's this step here",
    "start": "1003490",
    "end": "1009690"
  },
  {
    "text": "okay so you really can't see this that",
    "start": "1016300",
    "end": "1019720"
  },
  {
    "text": "well but I've dumped the trust bundle in",
    "start": "1019720",
    "end": "1021880"
  },
  {
    "text": "inside of trust domain 1 and you can see",
    "start": "1021880",
    "end": "1024010"
  },
  {
    "text": "that it's a JW KS document and it's got",
    "start": "1024010",
    "end": "1026620"
  },
  {
    "text": "two keys within it this top key right",
    "start": "1026620",
    "end": "1028930"
  },
  {
    "text": "here is used for validating x.509",
    "start": "1028930",
    "end": "1032170"
  },
  {
    "text": "identities so x.509 s vids you can see",
    "start": "1032170",
    "end": "1034689"
  },
  {
    "text": "the embedded certificate inside that",
    "start": "1034690",
    "end": "1036760"
  },
  {
    "text": "entry and then down here you see a",
    "start": "1036760",
    "end": "1040180"
  },
  {
    "text": "public key that's for validating ja s",
    "start": "1040180",
    "end": "1043780"
  },
  {
    "text": "feds that have originated from this",
    "start": "1043780",
    "end": "1045370"
  },
  {
    "text": "trust domain okay and so like Emiliana",
    "start": "1045370",
    "end": "1048910"
  },
  {
    "text": "mentioned we don't have a federation api",
    "start": "1048910",
    "end": "1050980"
  },
  {
    "text": "that will facilitate this is this",
    "start": "1050980",
    "end": "1053230"
  },
  {
    "text": "federation step fully designed yet so",
    "start": "1053230",
    "end": "1055690"
  },
  {
    "text": "we're gonna cheat a little bit",
    "start": "1055690",
    "end": "1056770"
  },
  {
    "text": "and all we're gonna do is dump that",
    "start": "1056770",
    "end": "1058420"
  },
  {
    "text": "bundle out of trust domain one and pipe",
    "start": "1058420",
    "end": "1062050"
  },
  {
    "text": "that into a set command on trust Amin",
    "start": "1062050",
    "end": "1063880"
  },
  {
    "text": "two and in the same vein dump the bundle",
    "start": "1063880",
    "end": "1066790"
  },
  {
    "text": "on trust Amin two and pipe it to a set",
    "start": "1066790",
    "end": "1069130"
  },
  {
    "text": "command inside trust Amin one",
    "start": "1069130",
    "end": "1070710"
  },
  {
    "text": "all right so let's let's federates -",
    "start": "1070710",
    "end": "1075090"
  },
  {
    "text": "okay now before I did that step I dumped",
    "start": "1075570",
    "end": "1081520"
  },
  {
    "text": "the resources on the STS API running",
    "start": "1081520",
    "end": "1084550"
  },
  {
    "text": "inside the web and echo containers and",
    "start": "1084550",
    "end": "1087970"
  },
  {
    "text": "you can see that no resources have come",
    "start": "1087970",
    "end": "1089470"
  },
  {
    "text": "back and that's because we haven't",
    "start": "1089470",
    "end": "1091000"
  },
  {
    "text": "defined our workloads yet inside spire",
    "start": "1091000",
    "end": "1092650"
  },
  {
    "text": "so let's do that",
    "start": "1092650",
    "end": "1095970"
  },
  {
    "text": "if you can read that what we're doing is",
    "start": "1096570",
    "end": "1101170"
  },
  {
    "text": "inside trust domain one for any process",
    "start": "1101170",
    "end": "1104350"
  },
  {
    "text": "connecting to the spire agent running as",
    "start": "1104350",
    "end": "1107170"
  },
  {
    "text": "the spiffy envoy agent user is going to",
    "start": "1107170",
    "end": "1109840"
  },
  {
    "text": "obtain an S vid with the webserver",
    "start": "1109840",
    "end": "1112570"
  },
  {
    "text": "spiffy ID and we've declared that that",
    "start": "1112570",
    "end": "1115360"
  },
  {
    "text": "workload should federate with trust",
    "start": "1115360",
    "end": "1117280"
  },
  {
    "text": "domain - well sure what that means in a",
    "start": "1117280",
    "end": "1119350"
  },
  {
    "text": "second in the same vein we've got trust",
    "start": "1119350",
    "end": "1122320"
  },
  {
    "text": "domain - we're creating a registration",
    "start": "1122320",
    "end": "1124570"
  },
  {
    "text": "entry for anyone connecting to the",
    "start": "1124570",
    "end": "1126280"
  },
  {
    "text": "workload API as the spiffy envoy agent",
    "start": "1126280",
    "end": "1128260"
  },
  {
    "text": "user is going to obtain an S fed with",
    "start": "1128260",
    "end": "1130840"
  },
  {
    "text": "the spiffy idea of the echo server and",
    "start": "1130840",
    "end": "1133180"
  },
  {
    "text": "we've declared that workload should",
    "start": "1133180",
    "end": "1135100"
  },
  {
    "text": "federate with trust Amin one",
    "start": "1135100",
    "end": "1136590"
  },
  {
    "text": "yes",
    "start": "1136590",
    "end": "1139590"
  },
  {
    "text": "correct yeah yes we kind of have a tooth",
    "start": "1143540",
    "end": "1154530"
  },
  {
    "text": "to face step so the first step is first",
    "start": "1154530",
    "end": "1156570"
  },
  {
    "text": "you have to educate the spire servers",
    "start": "1156570",
    "end": "1157890"
  },
  {
    "text": "running in each of these trust domains",
    "start": "1157890",
    "end": "1159059"
  },
  {
    "text": "about the trust bundle for the other",
    "start": "1159059",
    "end": "1160500"
  },
  {
    "text": "trust domain and this the second leg",
    "start": "1160500",
    "end": "1162809"
  },
  {
    "text": "that we're showing here is on a per",
    "start": "1162809",
    "end": "1164549"
  },
  {
    "text": "workload basis you can say that this",
    "start": "1164549",
    "end": "1166740"
  },
  {
    "text": "workload should be able to verify",
    "start": "1166740",
    "end": "1168000"
  },
  {
    "text": "identities from this other trust domain",
    "start": "1168000",
    "end": "1169890"
  },
  {
    "text": "and so it's not like every workload",
    "start": "1169890",
    "end": "1172350"
  },
  {
    "text": "inside your organization gets the trust",
    "start": "1172350",
    "end": "1173820"
  },
  {
    "text": "bundle information for every trust I",
    "start": "1173820",
    "end": "1175620"
  },
  {
    "text": "mean you've you've federated with its on",
    "start": "1175620",
    "end": "1177690"
  },
  {
    "text": "a per workload basis as currently",
    "start": "1177690",
    "end": "1179220"
  },
  {
    "text": "implemented",
    "start": "1179220",
    "end": "1181640"
  },
  {
    "text": "okay let's hold that off to the queue",
    "start": "1195140",
    "end": "1197120"
  },
  {
    "text": "okay that's a great question okay so",
    "start": "1197120",
    "end": "1202600"
  },
  {
    "text": "let's uh let's run this and create these",
    "start": "1202600",
    "end": "1205730"
  },
  {
    "text": "registration entries and now the the",
    "start": "1205730",
    "end": "1208460"
  },
  {
    "text": "workloads the spire agents running again",
    "start": "1208460",
    "end": "1210559"
  },
  {
    "text": "next to these workloads should have",
    "start": "1210559",
    "end": "1211760"
  },
  {
    "text": "identities for these workloads available",
    "start": "1211760",
    "end": "1213380"
  },
  {
    "text": "and we'll show that by again talking to",
    "start": "1213380",
    "end": "1215299"
  },
  {
    "text": "the SDS API running next to the workload",
    "start": "1215299",
    "end": "1219049"
  },
  {
    "text": "and you can see on the web web spiffy",
    "start": "1219049",
    "end": "1223070"
  },
  {
    "text": "ANBU agent has exposed a TLS certificate",
    "start": "1223070",
    "end": "1226670"
  },
  {
    "text": "with the URI sand for the web server",
    "start": "1226670",
    "end": "1228860"
  },
  {
    "text": "that's the spiffy ID right there along",
    "start": "1228860",
    "end": "1230809"
  },
  {
    "text": "with the private key it's also returned",
    "start": "1230809",
    "end": "1232610"
  },
  {
    "text": "to validation context containing a",
    "start": "1232610",
    "end": "1234290"
  },
  {
    "text": "trusted root certificate for both Trust",
    "start": "1234290",
    "end": "1236630"
  },
  {
    "text": "domain one and trust Amin - we can do",
    "start": "1236630",
    "end": "1244700"
  },
  {
    "text": "the same thing inside the echo container",
    "start": "1244700",
    "end": "1246169"
  },
  {
    "text": "and again we get a certificate out with",
    "start": "1246169",
    "end": "1248299"
  },
  {
    "text": "the spiffy ID for the echo server with",
    "start": "1248299",
    "end": "1250970"
  },
  {
    "text": "its private key and again a validation",
    "start": "1250970",
    "end": "1252860"
  },
  {
    "text": "context with a trusted roof for domain 1",
    "start": "1252860",
    "end": "1255260"
  },
  {
    "text": "and domain 2 also and so speier doesn't",
    "start": "1255260",
    "end": "1258890"
  },
  {
    "text": "have spider takes care of your",
    "start": "1258890",
    "end": "1260210"
  },
  {
    "text": "authentication piece for demo purposes",
    "start": "1260210",
    "end": "1262280"
  },
  {
    "text": "envoy supports you are ice and",
    "start": "1262280",
    "end": "1264919"
  },
  {
    "text": "validation of peer certificates it",
    "start": "1264919",
    "end": "1266419"
  },
  {
    "text": "receives and so we've you can see this",
    "start": "1266419",
    "end": "1269929"
  },
  {
    "text": "list down here this is a loud sands so",
    "start": "1269929",
    "end": "1271910"
  },
  {
    "text": "during the TLS handshake",
    "start": "1271910",
    "end": "1273049"
  },
  {
    "text": "after the certificate has been verified",
    "start": "1273049",
    "end": "1274490"
  },
  {
    "text": "back to it a trusted root it's going to",
    "start": "1274490",
    "end": "1277429"
  },
  {
    "text": "take a look at the URI saying in the",
    "start": "1277429",
    "end": "1278720"
  },
  {
    "text": "pure certificate and make sure it's in",
    "start": "1278720",
    "end": "1280429"
  },
  {
    "text": "this list before authorizing the request",
    "start": "1280429",
    "end": "1282290"
  },
  {
    "text": "so we can show that here",
    "start": "1282290",
    "end": "1289990"
  },
  {
    "text": "inside the configuration for the spiffy",
    "start": "1293630",
    "end": "1295830"
  },
  {
    "text": "envoy agent running on the echo",
    "start": "1295830",
    "end": "1297570"
  },
  {
    "text": "container right here you've got this",
    "start": "1297570",
    "end": "1299400"
  },
  {
    "text": "these x.509 options and that translates",
    "start": "1299400",
    "end": "1301530"
  },
  {
    "text": "into that portion of the validation",
    "start": "1301530",
    "end": "1303270"
  },
  {
    "text": "context that goes back so we've got our",
    "start": "1303270",
    "end": "1306780"
  },
  {
    "text": "registration entries created the SDS API",
    "start": "1306780",
    "end": "1309960"
  },
  {
    "text": "is serving up the right resources to",
    "start": "1309960",
    "end": "1311880"
  },
  {
    "text": "envoy so we should be able to hop back",
    "start": "1311880",
    "end": "1313620"
  },
  {
    "text": "in our browser and do an envoy envoy",
    "start": "1313620",
    "end": "1316080"
  },
  {
    "text": "connection and what you can see is that",
    "start": "1316080",
    "end": "1320070"
  },
  {
    "text": "a bunch of headers have been added to",
    "start": "1320070",
    "end": "1322080"
  },
  {
    "text": "the HTTP request as that's flown through",
    "start": "1322080",
    "end": "1325920"
  },
  {
    "text": "envoy and most notably you have this",
    "start": "1325920",
    "end": "1328620"
  },
  {
    "text": "exported client cert header which",
    "start": "1328620",
    "end": "1331050"
  },
  {
    "text": "contains the URI sand for the identity",
    "start": "1331050",
    "end": "1333330"
  },
  {
    "text": "that forwarded the client cert which is",
    "start": "1333330",
    "end": "1334980"
  },
  {
    "text": "of course the echo server identity that",
    "start": "1334980",
    "end": "1336870"
  },
  {
    "text": "the proxy is using and the URI sand of",
    "start": "1336870",
    "end": "1339750"
  },
  {
    "text": "the client certificate itself that was",
    "start": "1339750",
    "end": "1341220"
  },
  {
    "text": "presented which is the spiffy idea of",
    "start": "1341220",
    "end": "1342900"
  },
  {
    "text": "the front end or the web server okay so",
    "start": "1342900",
    "end": "1346860"
  },
  {
    "text": "what happens now if we break Federation",
    "start": "1346860",
    "end": "1348750"
  },
  {
    "text": "so I'm going to do a step here which is",
    "start": "1348750",
    "end": "1351990"
  },
  {
    "text": "going to update these registration",
    "start": "1351990",
    "end": "1354120"
  },
  {
    "text": "entries for the workloads and it's going",
    "start": "1354120",
    "end": "1355920"
  },
  {
    "text": "to drop that federates with declaration",
    "start": "1355920",
    "end": "1357660"
  },
  {
    "text": "so the to trust our to trust domains",
    "start": "1357660",
    "end": "1359790"
  },
  {
    "text": "still know about each other's bundles",
    "start": "1359790",
    "end": "1360929"
  },
  {
    "text": "but the workloads have been are now not",
    "start": "1360929",
    "end": "1365550"
  },
  {
    "text": "federating with that trust Amin",
    "start": "1365550",
    "end": "1366990"
  },
  {
    "text": "explicitly and so what that means if we",
    "start": "1366990",
    "end": "1370110"
  },
  {
    "text": "were to look at the SDS API again if you",
    "start": "1370110",
    "end": "1375150"
  },
  {
    "text": "look at the validation context we now",
    "start": "1375150",
    "end": "1376679"
  },
  {
    "text": "get back it only has the trusted roofer",
    "start": "1376679",
    "end": "1378690"
  },
  {
    "text": "for our own trust Amin and on the web",
    "start": "1378690",
    "end": "1381210"
  },
  {
    "text": "side and again on the echo server it",
    "start": "1381210",
    "end": "1386250"
  },
  {
    "text": "only has the trust domain the trusted",
    "start": "1386250",
    "end": "1388380"
  },
  {
    "text": "root for the trust domain two of the D",
    "start": "1388380",
    "end": "1390480"
  },
  {
    "text": "echo container runs in and now if we try",
    "start": "1390480",
    "end": "1394050"
  },
  {
    "text": "our connection on Buddha envoy we can",
    "start": "1394050",
    "end": "1397740"
  },
  {
    "text": "see that the forward envoy proxy",
    "start": "1397740",
    "end": "1400290"
  },
  {
    "text": "co-located with the webserver has",
    "start": "1400290",
    "end": "1403500"
  },
  {
    "text": "returned a failure to establish an",
    "start": "1403500",
    "end": "1405600"
  },
  {
    "text": "upstream connection with the reverse",
    "start": "1405600",
    "end": "1407070"
  },
  {
    "text": "Envoy proxy running our co-located with",
    "start": "1407070",
    "end": "1408870"
  },
  {
    "text": "the echo server and what has happened is",
    "start": "1408870",
    "end": "1411120"
  },
  {
    "text": "during the TLS handshake the reverse",
    "start": "1411120",
    "end": "1413790"
  },
  {
    "text": "Envoy proxy presents the certificate for",
    "start": "1413790",
    "end": "1417059"
  },
  {
    "text": "the webserver and the forward Envoy",
    "start": "1417059",
    "end": "1420179"
  },
  {
    "text": "proxy rejects that because it no longer",
    "start": "1420179",
    "end": "1421710"
  },
  {
    "text": "has a trusted root to chain it back to",
    "start": "1421710",
    "end": "1423930"
  },
  {
    "text": "okay so let's let's reef iterate put",
    "start": "1423930",
    "end": "1426370"
  },
  {
    "text": "things back to normal",
    "start": "1426370",
    "end": "1428940"
  },
  {
    "text": "so we've reef iterated and now when we",
    "start": "1429450",
    "end": "1432820"
  },
  {
    "text": "run this eventually as soon as Envoy",
    "start": "1432820",
    "end": "1435550"
  },
  {
    "text": "wakes up to the change we've got got a",
    "start": "1435550",
    "end": "1438940"
  },
  {
    "text": "connectivity established again okay so",
    "start": "1438940",
    "end": "1441910"
  },
  {
    "text": "that's that's our first connection",
    "start": "1441910",
    "end": "1443470"
  },
  {
    "text": "scenario we've done MT LS between two",
    "start": "1443470",
    "end": "1445120"
  },
  {
    "text": "Envoy proxies let's let's do our second",
    "start": "1445120",
    "end": "1447760"
  },
  {
    "text": "connectivity scenario if you remember",
    "start": "1447760",
    "end": "1448960"
  },
  {
    "text": "this is going to go through a layer",
    "start": "1448960",
    "end": "1449890"
  },
  {
    "text": "seven proxy that sits between those two",
    "start": "1449890",
    "end": "1451510"
  },
  {
    "text": "trust amines so I'm gonna start up that",
    "start": "1451510",
    "end": "1454240"
  },
  {
    "text": "layer seven proxy just do it manually",
    "start": "1454240",
    "end": "1456340"
  },
  {
    "text": "real quick",
    "start": "1456340",
    "end": "1457290"
  },
  {
    "text": "oops run this layer seven proxy binary",
    "start": "1457290",
    "end": "1465160"
  },
  {
    "text": "and just for fun I'm gonna direct it to",
    "start": "1465160",
    "end": "1467710"
  },
  {
    "text": "port 8000 one on the reverse proxy and",
    "start": "1467710",
    "end": "1470200"
  },
  {
    "text": "if you remember 8001 is configured to do",
    "start": "1470200",
    "end": "1472120"
  },
  {
    "text": "n TLS it's expecting a client sort to be",
    "start": "1472120",
    "end": "1474280"
  },
  {
    "text": "presented it's expecting to urs and in",
    "start": "1474280",
    "end": "1476440"
  },
  {
    "text": "that client cert to match this list so",
    "start": "1476440",
    "end": "1480190"
  },
  {
    "text": "let's see what happens when we try and",
    "start": "1480190",
    "end": "1481360"
  },
  {
    "text": "go through that port and when we run it",
    "start": "1481360",
    "end": "1486640"
  },
  {
    "text": "we get a failure back so the request is",
    "start": "1486640",
    "end": "1488890"
  },
  {
    "text": "flown all the way into the layer seven",
    "start": "1488890",
    "end": "1490450"
  },
  {
    "text": "proxy it has tried to establish TLS",
    "start": "1490450",
    "end": "1492460"
  },
  {
    "text": "connection with the reverse Envoy proxy",
    "start": "1492460",
    "end": "1495000"
  },
  {
    "text": "but it doesn't present a client",
    "start": "1495000",
    "end": "1496960"
  },
  {
    "text": "certificate and envoy kills the",
    "start": "1496960",
    "end": "1499030"
  },
  {
    "text": "handshake so that's expected let's run",
    "start": "1499030",
    "end": "1506020"
  },
  {
    "text": "this for real now and background it so I",
    "start": "1506020",
    "end": "1509440"
  },
  {
    "text": "get my terminal back",
    "start": "1509440",
    "end": "1512250"
  },
  {
    "text": "and this time we'll send it to the right",
    "start": "1514820",
    "end": "1516799"
  },
  {
    "text": "port on that reverse proxy and now let's",
    "start": "1516799",
    "end": "1520879"
  },
  {
    "text": "run our scenario great so we have a",
    "start": "1520879",
    "end": "1523759"
  },
  {
    "text": "successful connection through you can",
    "start": "1523759",
    "end": "1525799"
  },
  {
    "text": "see this authorization header this was",
    "start": "1525799",
    "end": "1528199"
  },
  {
    "text": "attached by the forward proxy co-located",
    "start": "1528199",
    "end": "1530509"
  },
  {
    "text": "with the web server and it stuffed in",
    "start": "1530509",
    "end": "1533269"
  },
  {
    "text": "the jot token there sorry the job that",
    "start": "1533269",
    "end": "1535909"
  },
  {
    "text": "it obtained from the workload API",
    "start": "1535909",
    "end": "1537699"
  },
  {
    "text": "running on the spire agent and if we",
    "start": "1537699",
    "end": "1540190"
  },
  {
    "text": "take that shot and when we decode it we",
    "start": "1540190",
    "end": "1547879"
  },
  {
    "text": "can see in our claim set a subject ID",
    "start": "1547879",
    "end": "1550489"
  },
  {
    "text": "with the spiffy idea of the web server",
    "start": "1550489",
    "end": "1552069"
  },
  {
    "text": "and an audience value with the spiffy ID",
    "start": "1552069",
    "end": "1555889"
  },
  {
    "text": "of the echo server okay so the again",
    "start": "1555889",
    "end": "1560919"
  },
  {
    "text": "let's see what happens when we break our",
    "start": "1560919",
    "end": "1563569"
  },
  {
    "text": "Federation so I'm going to unfetter",
    "start": "1563569",
    "end": "1565279"
  },
  {
    "text": "eight these two workloads and now let's",
    "start": "1565279",
    "end": "1569629"
  },
  {
    "text": "see what happens when we try and go",
    "start": "1569629",
    "end": "1571639"
  },
  {
    "text": "through that layer seven proxy let me",
    "start": "1571639",
    "end": "1576079"
  },
  {
    "text": "see a failure here so what has happened",
    "start": "1576079",
    "end": "1577159"
  },
  {
    "text": "is the layered the jot token has flowed",
    "start": "1577159",
    "end": "1579319"
  },
  {
    "text": "through the layer seven proxy into the",
    "start": "1579319",
    "end": "1580669"
  },
  {
    "text": "reverse Envoy proxy on the backend it's",
    "start": "1580669",
    "end": "1583069"
  },
  {
    "text": "been passed off to the spiffy envoy",
    "start": "1583069",
    "end": "1584599"
  },
  {
    "text": "agent who has called the workload API to",
    "start": "1584599",
    "end": "1587539"
  },
  {
    "text": "validate that job token and as you can",
    "start": "1587539",
    "end": "1589699"
  },
  {
    "text": "see from the error message here the",
    "start": "1589699",
    "end": "1590809"
  },
  {
    "text": "workload API a has returned to failure",
    "start": "1590809",
    "end": "1592609"
  },
  {
    "text": "to validate because it can't find trust",
    "start": "1592609",
    "end": "1595129"
  },
  {
    "text": "bundle information for this trust domain",
    "start": "1595129",
    "end": "1596899"
  },
  {
    "text": "that the job belongs to so it has failed",
    "start": "1596899",
    "end": "1599119"
  },
  {
    "text": "the validation steps so we can refresh",
    "start": "1599119",
    "end": "1603529"
  },
  {
    "text": "here hope sorry are on the script you",
    "start": "1603529",
    "end": "1607369"
  },
  {
    "text": "can refet irate",
    "start": "1607369",
    "end": "1610029"
  },
  {
    "text": "and everything's now back to normal it's",
    "start": "1614230",
    "end": "1618640"
  },
  {
    "text": "another thing another thing we can do",
    "start": "1618640",
    "end": "1621000"
  },
  {
    "text": "again the spiffy combo agent has a",
    "start": "1621000",
    "end": "1623410"
  },
  {
    "text": "little bit of authorization built into",
    "start": "1623410",
    "end": "1625420"
  },
  {
    "text": "it that we can demonstrate let's go to",
    "start": "1625420",
    "end": "1634720"
  },
  {
    "text": "the configuration for the spiffy envoy",
    "start": "1634720",
    "end": "1637150"
  },
  {
    "text": "agent running a co-located with the echo",
    "start": "1637150",
    "end": "1639310"
  },
  {
    "text": "server and down in this jot section",
    "start": "1639310",
    "end": "1641770"
  },
  {
    "text": "we've gotten a loud list of spiffy IDs",
    "start": "1641770",
    "end": "1645570"
  },
  {
    "text": "that we expect to see in any jots that",
    "start": "1645570",
    "end": "1648520"
  },
  {
    "text": "are handed to us for validation so we",
    "start": "1648520",
    "end": "1650080"
  },
  {
    "text": "can change that spiffy ID in the list",
    "start": "1650080",
    "end": "1653610"
  },
  {
    "text": "and reload the spiffy convoy agent and",
    "start": "1653610",
    "end": "1658930"
  },
  {
    "text": "if you retry our connection scenario we",
    "start": "1658930",
    "end": "1664900"
  },
  {
    "text": "see a failure and this is the job token",
    "start": "1664900",
    "end": "1668710"
  },
  {
    "text": "is fluid all the way through it's been",
    "start": "1668710",
    "end": "1669820"
  },
  {
    "text": "validated by the spire agent and then",
    "start": "1669820",
    "end": "1672100"
  },
  {
    "text": "the spiffy on voyage and says okay now",
    "start": "1672100",
    "end": "1673600"
  },
  {
    "text": "let's validate to let me see if the",
    "start": "1673600",
    "end": "1674950"
  },
  {
    "text": "subject claim is within this authorized",
    "start": "1674950",
    "end": "1676390"
  },
  {
    "text": "list and it of course isn't and so it",
    "start": "1676390",
    "end": "1678460"
  },
  {
    "text": "fills the connection and of course if we",
    "start": "1678460",
    "end": "1681370"
  },
  {
    "text": "restore everything back to two working",
    "start": "1681370",
    "end": "1683500"
  },
  {
    "text": "order",
    "start": "1683500",
    "end": "1685710"
  },
  {
    "text": "then everything's back to normal and",
    "start": "1693120",
    "end": "1697950"
  },
  {
    "text": "that's it for the demo let me hop back",
    "start": "1697950",
    "end": "1702120"
  },
  {
    "text": "to presentation",
    "start": "1702120",
    "end": "1706700"
  },
  {
    "text": "all right so the source code is",
    "start": "1712400",
    "end": "1713810"
  },
  {
    "text": "available we've thrown it up on the",
    "start": "1713810",
    "end": "1715280"
  },
  {
    "text": "spiffy repo or organization up on github",
    "start": "1715280",
    "end": "1717740"
  },
  {
    "text": "we've got the source code for the spiffy",
    "start": "1717740",
    "end": "1719450"
  },
  {
    "text": "envoy agent with some sample",
    "start": "1719450",
    "end": "1720650"
  },
  {
    "text": "configuration files and then all the",
    "start": "1720650",
    "end": "1722780"
  },
  {
    "text": "materials for the demo are also checked",
    "start": "1722780",
    "end": "1724400"
  },
  {
    "text": "in as well",
    "start": "1724400",
    "end": "1726790"
  },
  {
    "text": "[Applause]",
    "start": "1726830",
    "end": "1732149"
  }
]