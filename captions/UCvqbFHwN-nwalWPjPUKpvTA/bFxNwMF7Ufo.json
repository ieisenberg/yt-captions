[
  {
    "text": "hey everyone thank you so much for being",
    "start": "0",
    "end": "2340"
  },
  {
    "text": "here uh my name is Charles and I work at",
    "start": "2340",
    "end": "5339"
  },
  {
    "text": "Snowflake and today I would love to tell",
    "start": "5339",
    "end": "7919"
  },
  {
    "text": "you more about our service match",
    "start": "7919",
    "end": "10139"
  },
  {
    "text": "adoption stories at snowflake",
    "start": "10139",
    "end": "12139"
  },
  {
    "text": "specifically because snowflake Prada is",
    "start": "12139",
    "end": "14639"
  },
  {
    "text": "multi-cloud it means our infrastructure",
    "start": "14639",
    "end": "16859"
  },
  {
    "text": "also has to be multi-cloud so uh a",
    "start": "16859",
    "end": "20460"
  },
  {
    "text": "sizable amount of challenges that we",
    "start": "20460",
    "end": "22020"
  },
  {
    "text": "Face actually stem from this multi-cloud",
    "start": "22020",
    "end": "24660"
  },
  {
    "text": "uh or Cloud agnostic requirements",
    "start": "24660",
    "end": "29300"
  },
  {
    "text": "um",
    "start": "29340",
    "end": "31460"
  },
  {
    "text": "going too fast before we move in uh just",
    "start": "32220",
    "end": "34980"
  },
  {
    "text": "a bit more about me I work on the",
    "start": "34980",
    "end": "36480"
  },
  {
    "text": "container platform team at snowflake",
    "start": "36480",
    "end": "39059"
  },
  {
    "text": "um joint snowflake like more than two",
    "start": "39059",
    "end": "41160"
  },
  {
    "text": "years ago and uh before snowflake I was",
    "start": "41160",
    "end": "44219"
  },
  {
    "text": "at Cruz also doing container stuff",
    "start": "44219",
    "end": "47280"
  },
  {
    "text": "um cruises self-driving car startup and",
    "start": "47280",
    "end": "49800"
  },
  {
    "text": "before cruise I was actually at Google",
    "start": "49800",
    "end": "51239"
  },
  {
    "text": "building the sdo open source project so",
    "start": "51239",
    "end": "54600"
  },
  {
    "text": "being in the in this domain for a little",
    "start": "54600",
    "end": "57420"
  },
  {
    "text": "bit",
    "start": "57420",
    "end": "59600"
  },
  {
    "text": "um so first I want to tell you a bit",
    "start": "60780",
    "end": "62160"
  },
  {
    "text": "more about snowflake",
    "start": "62160",
    "end": "63600"
  },
  {
    "text": "um we went public like two years ago uh",
    "start": "63600",
    "end": "66360"
  },
  {
    "text": "but snowflake started as a data",
    "start": "66360",
    "end": "68400"
  },
  {
    "text": "warehouse it does big data analytics",
    "start": "68400",
    "end": "71820"
  },
  {
    "text": "um finale prints itself as the data",
    "start": "71820",
    "end": "73740"
  },
  {
    "text": "Cloud it does data sharing",
    "start": "73740",
    "end": "76500"
  },
  {
    "text": "um machine learnings and basically",
    "start": "76500",
    "end": "78780"
  },
  {
    "text": "everything related to data",
    "start": "78780",
    "end": "81000"
  },
  {
    "text": "um there are four properties that I",
    "start": "81000",
    "end": "82680"
  },
  {
    "text": "think stands out for snowflake in",
    "start": "82680",
    "end": "85080"
  },
  {
    "text": "general first is multi-cloud as of today",
    "start": "85080",
    "end": "87720"
  },
  {
    "text": "we support Azure gcp and AWS and maybe",
    "start": "87720",
    "end": "90960"
  },
  {
    "text": "adding more in the future it's",
    "start": "90960",
    "end": "92939"
  },
  {
    "text": "multi-tenant snowflake has more than one",
    "start": "92939",
    "end": "95460"
  },
  {
    "text": "customers uh and sometimes more than one",
    "start": "95460",
    "end": "98220"
  },
  {
    "text": "more than one customers would share",
    "start": "98220",
    "end": "100320"
  },
  {
    "text": "um the same compute resources and it's",
    "start": "100320",
    "end": "102659"
  },
  {
    "text": "multi-region we want our",
    "start": "102659",
    "end": "105479"
  },
  {
    "text": "um compute resources to be co-located",
    "start": "105479",
    "end": "107340"
  },
  {
    "text": "with our customers workloads and lastly",
    "start": "107340",
    "end": "109860"
  },
  {
    "text": "is multi-environment uh we're supporting",
    "start": "109860",
    "end": "112500"
  },
  {
    "text": "commercial deployments as well as",
    "start": "112500",
    "end": "114860"
  },
  {
    "text": "Government Cloud there are workloads",
    "start": "114860",
    "end": "118320"
  },
  {
    "text": "that has to comply with itar or vetran",
    "start": "118320",
    "end": "122460"
  },
  {
    "text": "fips compliances and that means our",
    "start": "122460",
    "end": "125219"
  },
  {
    "text": "deployments and infrastructure uh have",
    "start": "125219",
    "end": "127680"
  },
  {
    "text": "to have to conform to those compliance",
    "start": "127680",
    "end": "129899"
  },
  {
    "text": "as well",
    "start": "129899",
    "end": "131220"
  },
  {
    "text": "and",
    "start": "131220",
    "end": "132599"
  },
  {
    "text": "and all those four properties about",
    "start": "132599",
    "end": "134040"
  },
  {
    "text": "snowflake products also applied to our",
    "start": "134040",
    "end": "136020"
  },
  {
    "text": "infrastructure",
    "start": "136020",
    "end": "137580"
  },
  {
    "text": "um so that's a source of the complexity",
    "start": "137580",
    "end": "140099"
  },
  {
    "text": "for sure",
    "start": "140099",
    "end": "142700"
  },
  {
    "text": "um specifically about container platform",
    "start": "143819",
    "end": "145620"
  },
  {
    "text": "as of today we run 170 clusters uh those",
    "start": "145620",
    "end": "149220"
  },
  {
    "text": "are kubernetes clusters and we expect to",
    "start": "149220",
    "end": "151620"
  },
  {
    "text": "build a lot more in the future",
    "start": "151620",
    "end": "154400"
  },
  {
    "text": "we intentionally tried to limit the size",
    "start": "154400",
    "end": "157500"
  },
  {
    "text": "of the cluster trying to limit the blast",
    "start": "157500",
    "end": "159780"
  },
  {
    "text": "radius so we're orchestrating hundreds",
    "start": "159780",
    "end": "163140"
  },
  {
    "text": "of clusters as heard instead of pads",
    "start": "163140",
    "end": "165660"
  },
  {
    "text": "that means we also have a strong",
    "start": "165660",
    "end": "168120"
  },
  {
    "text": "requirements of building scalable",
    "start": "168120",
    "end": "169980"
  },
  {
    "text": "resilient automations to do really",
    "start": "169980",
    "end": "173879"
  },
  {
    "text": "simple things like cluster upgrades or",
    "start": "173879",
    "end": "175440"
  },
  {
    "text": "upgrading all the open source components",
    "start": "175440",
    "end": "177720"
  },
  {
    "text": "that we deployed on the Clusters like",
    "start": "177720",
    "end": "180360"
  },
  {
    "text": "external DNS or a certain manager",
    "start": "180360",
    "end": "183959"
  },
  {
    "text": "um we are using the cloud provider",
    "start": "183959",
    "end": "186780"
  },
  {
    "text": "managed kubernetes so uh they take care",
    "start": "186780",
    "end": "189660"
  },
  {
    "text": "of the control planes and we manage uh",
    "start": "189660",
    "end": "192120"
  },
  {
    "text": "the worker nodes and all of the",
    "start": "192120",
    "end": "193739"
  },
  {
    "text": "workloads and open source components we",
    "start": "193739",
    "end": "195540"
  },
  {
    "text": "deploy onto them so that's one last",
    "start": "195540",
    "end": "198000"
  },
  {
    "text": "thing we have to worry about uh is",
    "start": "198000",
    "end": "200159"
  },
  {
    "text": "multi-tenant just like snowflake product",
    "start": "200159",
    "end": "202860"
  },
  {
    "text": "um in terms of namespace and also",
    "start": "202860",
    "end": "204959"
  },
  {
    "text": "applications running in the cluster",
    "start": "204959",
    "end": "206940"
  },
  {
    "text": "sometimes the same nodes could run 20 30",
    "start": "206940",
    "end": "209760"
  },
  {
    "text": "different containers and they're from",
    "start": "209760",
    "end": "212159"
  },
  {
    "text": "different namespace different",
    "start": "212159",
    "end": "213120"
  },
  {
    "text": "applications",
    "start": "213120",
    "end": "214379"
  },
  {
    "text": "lastly because snowflake is founded in",
    "start": "214379",
    "end": "216659"
  },
  {
    "text": "2012 and that's before kubernetes was a",
    "start": "216659",
    "end": "219300"
  },
  {
    "text": "thing so we still have some applications",
    "start": "219300",
    "end": "221819"
  },
  {
    "text": "running on VM based infrastructure we",
    "start": "221819",
    "end": "224459"
  },
  {
    "text": "just need to make sure that uh VM based",
    "start": "224459",
    "end": "227040"
  },
  {
    "text": "infrastructure can interoperate with the",
    "start": "227040",
    "end": "229019"
  },
  {
    "text": "container environment",
    "start": "229019",
    "end": "232220"
  },
  {
    "text": "um and because of this multi-cloud",
    "start": "235260",
    "end": "237920"
  },
  {
    "text": "architecture it's very important for us",
    "start": "237920",
    "end": "240780"
  },
  {
    "text": "to",
    "start": "240780",
    "end": "241980"
  },
  {
    "text": "as much as we could to preserve This",
    "start": "241980",
    "end": "244140"
  },
  {
    "text": "Cloud agnostic abstraction because the",
    "start": "244140",
    "end": "246659"
  },
  {
    "text": "benefit is that the abstraction would",
    "start": "246659",
    "end": "248879"
  },
  {
    "text": "prevent fragmentation and proliferation",
    "start": "248879",
    "end": "252120"
  },
  {
    "text": "of identities policies and toolings for",
    "start": "252120",
    "end": "256320"
  },
  {
    "text": "example imagine having different cloud",
    "start": "256320",
    "end": "258120"
  },
  {
    "text": "provider CLI Tools in order to connect",
    "start": "258120",
    "end": "260459"
  },
  {
    "text": "to a kubernetes cluster and having",
    "start": "260459",
    "end": "263639"
  },
  {
    "text": "having to use different cloud provider",
    "start": "263639",
    "end": "265680"
  },
  {
    "text": "identities to authenticate yourself and",
    "start": "265680",
    "end": "269040"
  },
  {
    "text": "manage all the credentials associated",
    "start": "269040",
    "end": "271440"
  },
  {
    "text": "with those and around policies like for",
    "start": "271440",
    "end": "275940"
  },
  {
    "text": "example on gcp I would want to configure",
    "start": "275940",
    "end": "278400"
  },
  {
    "text": "some firewall rules",
    "start": "278400",
    "end": "280860"
  },
  {
    "text": "um on each host but on AWS it's called",
    "start": "280860",
    "end": "284100"
  },
  {
    "text": "Security Group roles which is achieving",
    "start": "284100",
    "end": "286320"
  },
  {
    "text": "similar features but they are",
    "start": "286320",
    "end": "288419"
  },
  {
    "text": "drastically different API calls and",
    "start": "288419",
    "end": "291660"
  },
  {
    "text": "authentication is managed differently",
    "start": "291660",
    "end": "293639"
  },
  {
    "text": "and all those little pieces they're",
    "start": "293639",
    "end": "296220"
  },
  {
    "text": "they're creating",
    "start": "296220",
    "end": "298100"
  },
  {
    "text": "frictions in terms of building",
    "start": "298100",
    "end": "299759"
  },
  {
    "text": "automations like essentially you're",
    "start": "299759",
    "end": "301440"
  },
  {
    "text": "writing the same code three times if you",
    "start": "301440",
    "end": "304020"
  },
  {
    "text": "want to support three Cloud providers so",
    "start": "304020",
    "end": "306479"
  },
  {
    "text": "having some Cloud agnostic abstractions",
    "start": "306479",
    "end": "308580"
  },
  {
    "text": "really reduce the complexity for both",
    "start": "308580",
    "end": "310440"
  },
  {
    "text": "development and operation and service",
    "start": "310440",
    "end": "313139"
  },
  {
    "text": "mesh is a key part of it and part of the",
    "start": "313139",
    "end": "315780"
  },
  {
    "text": "reason is that we can push this policy",
    "start": "315780",
    "end": "318600"
  },
  {
    "text": "up into this Cloud agnostic layer for",
    "start": "318600",
    "end": "321720"
  },
  {
    "text": "istio for example we can Define our",
    "start": "321720",
    "end": "324060"
  },
  {
    "text": "traffic routing security telemetries and",
    "start": "324060",
    "end": "327479"
  },
  {
    "text": "all that into the istio API groups",
    "start": "327479",
    "end": "330660"
  },
  {
    "text": "instead of defining that using gcp",
    "start": "330660",
    "end": "333360"
  },
  {
    "text": "specific calls same thing is true for",
    "start": "333360",
    "end": "335699"
  },
  {
    "text": "Calico Network policies and that's layer",
    "start": "335699",
    "end": "338220"
  },
  {
    "text": "four layer Network policies and that's",
    "start": "338220",
    "end": "341460"
  },
  {
    "text": "specifically for applications running",
    "start": "341460",
    "end": "343259"
  },
  {
    "text": "outside of the mesh Opa gatekeeper is a",
    "start": "343259",
    "end": "347100"
  },
  {
    "text": "very flexible and Powerful tools for us",
    "start": "347100",
    "end": "349860"
  },
  {
    "text": "to Define policies like we only want",
    "start": "349860",
    "end": "352500"
  },
  {
    "text": "this list of container images from this",
    "start": "352500",
    "end": "355500"
  },
  {
    "text": "list of hosts to be running on this",
    "start": "355500",
    "end": "357180"
  },
  {
    "text": "cluster for example",
    "start": "357180",
    "end": "359880"
  },
  {
    "text": "um instead of having three different",
    "start": "359880",
    "end": "362100"
  },
  {
    "text": "Celli tools to access VM or kubernetes",
    "start": "362100",
    "end": "364740"
  },
  {
    "text": "will use teleport uh to manage the the",
    "start": "364740",
    "end": "367740"
  },
  {
    "text": "access and also integrate it with OCTA",
    "start": "367740",
    "end": "370440"
  },
  {
    "text": "for identity and group membership uh",
    "start": "370440",
    "end": "373080"
  },
  {
    "text": "we're using group membership mostly for",
    "start": "373080",
    "end": "374639"
  },
  {
    "text": "our back and uh access policy definition",
    "start": "374639",
    "end": "378479"
  },
  {
    "text": "and lastly we use snowflake internally",
    "start": "378479",
    "end": "381120"
  },
  {
    "text": "to uh query the logs and ingesting the",
    "start": "381120",
    "end": "385440"
  },
  {
    "text": "metrics as well as defining alerts uh",
    "start": "385440",
    "end": "389220"
  },
  {
    "text": "well speaking of Doc putting your own",
    "start": "389220",
    "end": "390840"
  },
  {
    "text": "product",
    "start": "390840",
    "end": "392400"
  },
  {
    "text": "okay I want to dive into the service",
    "start": "392400",
    "end": "394680"
  },
  {
    "text": "match adoption story right now and I",
    "start": "394680",
    "end": "396660"
  },
  {
    "text": "want to begin with all the scaling the",
    "start": "396660",
    "end": "398880"
  },
  {
    "text": "Ingress Gateway now obviously you wanted",
    "start": "398880",
    "end": "401220"
  },
  {
    "text": "all the scalar Ingress Gateway because",
    "start": "401220",
    "end": "402840"
  },
  {
    "text": "your traffic is pretty much",
    "start": "402840",
    "end": "404639"
  },
  {
    "text": "unpredictable and also during the night",
    "start": "404639",
    "end": "406620"
  },
  {
    "text": "and weekends the traffic are relatively",
    "start": "406620",
    "end": "408720"
  },
  {
    "text": "small you want to save money uh by all",
    "start": "408720",
    "end": "411780"
  },
  {
    "text": "the scaling and I want to tell you why",
    "start": "411780",
    "end": "414479"
  },
  {
    "text": "it is more than just slap and horizontal",
    "start": "414479",
    "end": "418080"
  },
  {
    "text": "part all scaling uh setting to your",
    "start": "418080",
    "end": "421020"
  },
  {
    "text": "Ingress Gateway and then call you a day",
    "start": "421020",
    "end": "422460"
  },
  {
    "text": "and the reason is because we want to",
    "start": "422460",
    "end": "426539"
  },
  {
    "text": "preserve the source IP address at layer",
    "start": "426539",
    "end": "429600"
  },
  {
    "text": "3. preserving The Source IP is important",
    "start": "429600",
    "end": "432780"
  },
  {
    "text": "for rate limiting and also allow list",
    "start": "432780",
    "end": "435419"
  },
  {
    "text": "policy enforcement and the export for",
    "start": "435419",
    "end": "439080"
  },
  {
    "text": "HTTP header is susceptible for spoofing",
    "start": "439080",
    "end": "442740"
  },
  {
    "text": "and we also have TCP services that",
    "start": "442740",
    "end": "446819"
  },
  {
    "text": "doesn't speak HTTP so we want the IP",
    "start": "446819",
    "end": "449639"
  },
  {
    "text": "address at layer 3.",
    "start": "449639",
    "end": "452900"
  },
  {
    "text": "but we are we're having this special",
    "start": "452960",
    "end": "455819"
  },
  {
    "text": "setup where the Gateway paws are fronted",
    "start": "455819",
    "end": "457919"
  },
  {
    "text": "by a layer 4 load balancer y layer four",
    "start": "457919",
    "end": "461280"
  },
  {
    "text": "because routing the traffic directly to",
    "start": "461280",
    "end": "464039"
  },
  {
    "text": "pause which TCP calls Cloud native load",
    "start": "464039",
    "end": "466979"
  },
  {
    "text": "balancing uh is not the feature",
    "start": "466979",
    "end": "469080"
  },
  {
    "text": "supported by all the cloud providers and",
    "start": "469080",
    "end": "471120"
  },
  {
    "text": "we do uh one uh some consistency across",
    "start": "471120",
    "end": "474780"
  },
  {
    "text": "cloud and we realized that a layer 4",
    "start": "474780",
    "end": "476759"
  },
  {
    "text": "load balancer is",
    "start": "476759",
    "end": "479160"
  },
  {
    "text": "um has the most feature parity across",
    "start": "479160",
    "end": "481380"
  },
  {
    "text": "cloud and for later for load balancer it",
    "start": "481380",
    "end": "483840"
  },
  {
    "text": "has this interesting Behavior where",
    "start": "483840",
    "end": "486060"
  },
  {
    "text": "traffic is routed to the nose",
    "start": "486060",
    "end": "489380"
  },
  {
    "text": "essentially at no port and then it's IP",
    "start": "489380",
    "end": "492180"
  },
  {
    "text": "tabled by the qproxy to the pods so",
    "start": "492180",
    "end": "495180"
  },
  {
    "text": "there's like one extra hop on the nodes",
    "start": "495180",
    "end": "497819"
  },
  {
    "text": "and then to the pods and this Behavior",
    "start": "497819",
    "end": "500099"
  },
  {
    "text": "comes uh important when it comes to IP",
    "start": "500099",
    "end": "504120"
  },
  {
    "text": "address preservation",
    "start": "504120",
    "end": "506879"
  },
  {
    "text": "and",
    "start": "506879",
    "end": "508460"
  },
  {
    "text": "the traditional L4 low balancer setup",
    "start": "508460",
    "end": "512940"
  },
  {
    "text": "um",
    "start": "512940",
    "end": "514260"
  },
  {
    "text": "has this periodic health check to the",
    "start": "514260",
    "end": "517080"
  },
  {
    "text": "nose to make sure that there are",
    "start": "517080",
    "end": "518880"
  },
  {
    "text": "actually pods on the Node serve in the",
    "start": "518880",
    "end": "520860"
  },
  {
    "text": "traffic and on AWS it happens maybe",
    "start": "520860",
    "end": "523560"
  },
  {
    "text": "every 20 seconds this is configurable",
    "start": "523560",
    "end": "526440"
  },
  {
    "text": "but this is a non-zero delay and that",
    "start": "526440",
    "end": "528899"
  },
  {
    "text": "means life cycle management for Gateway",
    "start": "528899",
    "end": "532260"
  },
  {
    "text": "pause is very challenging because when",
    "start": "532260",
    "end": "534120"
  },
  {
    "text": "the Pod is terminated on node n the load",
    "start": "534120",
    "end": "537899"
  },
  {
    "text": "balance would keep sending traffic to",
    "start": "537899",
    "end": "539700"
  },
  {
    "text": "node and until node n is smart as",
    "start": "539700",
    "end": "542940"
  },
  {
    "text": "unhealthy and during that short period",
    "start": "542940",
    "end": "545580"
  },
  {
    "text": "your clients could receive 503s or just",
    "start": "545580",
    "end": "549420"
  },
  {
    "text": "i o timeout because there's no response",
    "start": "549420",
    "end": "553519"
  },
  {
    "text": "and this is shameful to say but for a",
    "start": "554760",
    "end": "558600"
  },
  {
    "text": "while we don't have Auto scaling setups",
    "start": "558600",
    "end": "560339"
  },
  {
    "text": "we just over provisioned the istio",
    "start": "560339",
    "end": "562080"
  },
  {
    "text": "Ingress gateways and in order to",
    "start": "562080",
    "end": "564660"
  },
  {
    "text": "preserve the source IP here's our setup",
    "start": "564660",
    "end": "566700"
  },
  {
    "text": "we run the istio gateways as demon sets",
    "start": "566700",
    "end": "570720"
  },
  {
    "text": "um and we have a dedicated notebook for",
    "start": "570720",
    "end": "572820"
  },
  {
    "text": "istio uh and within that polls every",
    "start": "572820",
    "end": "575160"
  },
  {
    "text": "node had an Ingress Gateway pod running",
    "start": "575160",
    "end": "577620"
  },
  {
    "text": "on it to handle the traffic and we sat",
    "start": "577620",
    "end": "580800"
  },
  {
    "text": "the external traffic policy to local so",
    "start": "580800",
    "end": "583080"
  },
  {
    "text": "there's no additional hops between the",
    "start": "583080",
    "end": "584760"
  },
  {
    "text": "nose where the traffic actually when the",
    "start": "584760",
    "end": "588060"
  },
  {
    "text": "traffic leaves The L4 load balancer and",
    "start": "588060",
    "end": "590100"
  },
  {
    "text": "hits the first node that's the node",
    "start": "590100",
    "end": "591600"
  },
  {
    "text": "that's going to handle the requests",
    "start": "591600",
    "end": "594540"
  },
  {
    "text": "um",
    "start": "594540",
    "end": "595320"
  },
  {
    "text": "otherwise if there's additional bouncing",
    "start": "595320",
    "end": "597600"
  },
  {
    "text": "off of other nodes like the last point",
    "start": "597600",
    "end": "600300"
  },
  {
    "text": "right here the source IP address will be",
    "start": "600300",
    "end": "602940"
  },
  {
    "text": "netted to the proxy node",
    "start": "602940",
    "end": "605100"
  },
  {
    "text": "and that will break your uh rate",
    "start": "605100",
    "end": "607560"
  },
  {
    "text": "limiting or allow list policy",
    "start": "607560",
    "end": "610920"
  },
  {
    "text": "and but at some point we need to",
    "start": "610920",
    "end": "613440"
  },
  {
    "text": "terminate is the okay wait pause for",
    "start": "613440",
    "end": "615660"
  },
  {
    "text": "upgrading sdo or upgrading the no pulls",
    "start": "615660",
    "end": "618660"
  },
  {
    "text": "underlying the that's running the istio",
    "start": "618660",
    "end": "621060"
  },
  {
    "text": "pause",
    "start": "621060",
    "end": "622740"
  },
  {
    "text": "um",
    "start": "622740",
    "end": "624120"
  },
  {
    "text": "the way to do it safely without dropping",
    "start": "624120",
    "end": "626820"
  },
  {
    "text": "traffic is that we first need to",
    "start": "626820",
    "end": "628740"
  },
  {
    "text": "deregister the hosting node from the",
    "start": "628740",
    "end": "630959"
  },
  {
    "text": "cloud load balancer",
    "start": "630959",
    "end": "632519"
  },
  {
    "text": "and making sure that the registration",
    "start": "632519",
    "end": "635100"
  },
  {
    "text": "completes and then we issue the Pod",
    "start": "635100",
    "end": "637860"
  },
  {
    "text": "delete request",
    "start": "637860",
    "end": "639300"
  },
  {
    "text": "and there's a way to do so in a cloud",
    "start": "639300",
    "end": "641040"
  },
  {
    "text": "agnostic Way by applying this note label",
    "start": "641040",
    "end": "644180"
  },
  {
    "text": "and then according the node but of",
    "start": "644180",
    "end": "646980"
  },
  {
    "text": "course you have to develop some custom",
    "start": "646980",
    "end": "648420"
  },
  {
    "text": "tooling to",
    "start": "648420",
    "end": "650180"
  },
  {
    "text": "basically pull the cloud provider API to",
    "start": "650180",
    "end": "653279"
  },
  {
    "text": "make sure that your registration",
    "start": "653279",
    "end": "654480"
  },
  {
    "text": "completes successfully because",
    "start": "654480",
    "end": "656279"
  },
  {
    "text": "everything happens asynchronously",
    "start": "656279",
    "end": "660300"
  },
  {
    "text": "so but we really want Auto scaling",
    "start": "662220",
    "end": "664260"
  },
  {
    "text": "because of the cost saving and also uh",
    "start": "664260",
    "end": "667200"
  },
  {
    "text": "just to be safe when there's a traffic",
    "start": "667200",
    "end": "669720"
  },
  {
    "text": "Spike hitting us our first design is",
    "start": "669720",
    "end": "672839"
  },
  {
    "text": "almost a perfect straw man and feels",
    "start": "672839",
    "end": "675180"
  },
  {
    "text": "very intuitive and easy to implement",
    "start": "675180",
    "end": "677060"
  },
  {
    "text": "which is to use an admission web hook to",
    "start": "677060",
    "end": "679920"
  },
  {
    "text": "intercept all the plot delete requests",
    "start": "679920",
    "end": "682200"
  },
  {
    "text": "for the Gateway Ingress pod and then",
    "start": "682200",
    "end": "686100"
  },
  {
    "text": "just hold that request and at the same",
    "start": "686100",
    "end": "688320"
  },
  {
    "text": "time to register the the node that's",
    "start": "688320",
    "end": "691019"
  },
  {
    "text": "hosting the Pod from the load balancer",
    "start": "691019",
    "end": "693540"
  },
  {
    "text": "and within the registration completes uh",
    "start": "693540",
    "end": "696600"
  },
  {
    "text": "release the partly request",
    "start": "696600",
    "end": "700140"
  },
  {
    "text": "um the the show stopper is that on",
    "start": "700140",
    "end": "702420"
  },
  {
    "text": "kubernetes the admission web hook has a",
    "start": "702420",
    "end": "704880"
  },
  {
    "text": "30 second Max timeout after which the",
    "start": "704880",
    "end": "707880"
  },
  {
    "text": "the pot delete request will be released",
    "start": "707880",
    "end": "710399"
  },
  {
    "text": "regardless and 30 seconds is not enough",
    "start": "710399",
    "end": "712740"
  },
  {
    "text": "to ensure that the node has been",
    "start": "712740",
    "end": "714959"
  },
  {
    "text": "deregistered successfully",
    "start": "714959",
    "end": "718200"
  },
  {
    "text": "so where do we go from here there are",
    "start": "718200",
    "end": "720120"
  },
  {
    "text": "three possible solutions the first is to",
    "start": "720120",
    "end": "722339"
  },
  {
    "text": "explore app data plane to replace the",
    "start": "722339",
    "end": "725279"
  },
  {
    "text": "iptable based uh Q proxy which has the",
    "start": "725279",
    "end": "728940"
  },
  {
    "text": "really nice property of still retaining",
    "start": "728940",
    "end": "731040"
  },
  {
    "text": "The Source IP address despite setting",
    "start": "731040",
    "end": "733140"
  },
  {
    "text": "the external traffic policy to Cluster",
    "start": "733140",
    "end": "735420"
  },
  {
    "text": "so that you can place your pod on any",
    "start": "735420",
    "end": "738959"
  },
  {
    "text": "note you like and the traffic will be",
    "start": "738959",
    "end": "740820"
  },
  {
    "text": "evenly split and you don't have to worry",
    "start": "740820",
    "end": "742500"
  },
  {
    "text": "about uh",
    "start": "742500",
    "end": "744000"
  },
  {
    "text": "happy Source I've been changed but for",
    "start": "744000",
    "end": "747240"
  },
  {
    "text": "us specifically at snowflake we are",
    "start": "747240",
    "end": "749820"
  },
  {
    "text": "curious whether rm64 architecture is",
    "start": "749820",
    "end": "752760"
  },
  {
    "text": "supported and whether this is compliant",
    "start": "752760",
    "end": "757019"
  },
  {
    "text": "um and if not we have to figure out",
    "start": "757019",
    "end": "759540"
  },
  {
    "text": "um either build our custom distro or if",
    "start": "759540",
    "end": "762779"
  },
  {
    "text": "this is a show stopper for us for those",
    "start": "762779",
    "end": "766260"
  },
  {
    "text": "that you don't know or don't deal with",
    "start": "766260",
    "end": "767820"
  },
  {
    "text": "Federal customers fix fips compliant is",
    "start": "767820",
    "end": "771360"
  },
  {
    "text": "basically requiring all the tools and",
    "start": "771360",
    "end": "774120"
  },
  {
    "text": "systems that you run to adopt a federal",
    "start": "774120",
    "end": "778139"
  },
  {
    "text": "approved implementation of all the",
    "start": "778139",
    "end": "780360"
  },
  {
    "text": "cryptographic libraries the native go",
    "start": "780360",
    "end": "783899"
  },
  {
    "text": "crypto library is not fips compliant so",
    "start": "783899",
    "end": "787139"
  },
  {
    "text": "you have to build your application",
    "start": "787139",
    "end": "788639"
  },
  {
    "text": "differently",
    "start": "788639",
    "end": "790920"
  },
  {
    "text": "um the second option is to use a custom",
    "start": "790920",
    "end": "793139"
  },
  {
    "text": "no pull auto skater that pretty much",
    "start": "793139",
    "end": "796440"
  },
  {
    "text": "just worked around the 30 second",
    "start": "796440",
    "end": "799260"
  },
  {
    "text": "restriction that I talked about for the",
    "start": "799260",
    "end": "801720"
  },
  {
    "text": "admission web hook but because this is",
    "start": "801720",
    "end": "804420"
  },
  {
    "text": "on a no pull auto scaling layer there's",
    "start": "804420",
    "end": "807180"
  },
  {
    "text": "really not a timeout uh around node",
    "start": "807180",
    "end": "809880"
  },
  {
    "text": "deregistration",
    "start": "809880",
    "end": "811440"
  },
  {
    "text": "and lastly there's a kubernetes",
    "start": "811440",
    "end": "813300"
  },
  {
    "text": "enhancement proposal trying to address",
    "start": "813300",
    "end": "815760"
  },
  {
    "text": "this exact issue that I just described",
    "start": "815760",
    "end": "818700"
  },
  {
    "text": "the issue is that it's going to be a",
    "start": "818700",
    "end": "821339"
  },
  {
    "text": "long wait it's going to take at least a",
    "start": "821339",
    "end": "823740"
  },
  {
    "text": "few releases for this feature to be",
    "start": "823740",
    "end": "825899"
  },
  {
    "text": "ready and roll out and then the client",
    "start": "825899",
    "end": "829860"
  },
  {
    "text": "and the cloud provider is going to take",
    "start": "829860",
    "end": "831899"
  },
  {
    "text": "a few more quarters to actually adopt",
    "start": "831899",
    "end": "834680"
  },
  {
    "text": "that release",
    "start": "834680",
    "end": "837920"
  },
  {
    "text": "the Second Challenge I want to tell you",
    "start": "839399",
    "end": "840959"
  },
  {
    "text": "more about is day two challenge of",
    "start": "840959",
    "end": "843060"
  },
  {
    "text": "upgrading istio",
    "start": "843060",
    "end": "844980"
  },
  {
    "text": "um",
    "start": "844980",
    "end": "845639"
  },
  {
    "text": "this is we want to do so in a safe way",
    "start": "845639",
    "end": "848519"
  },
  {
    "text": "which is a blue green fashion and we",
    "start": "848519",
    "end": "852120"
  },
  {
    "text": "have to do this upgrade sometimes",
    "start": "852120",
    "end": "854220"
  },
  {
    "text": "several times in the quarter because",
    "start": "854220",
    "end": "856620"
  },
  {
    "text": "istio often releases patch releases that",
    "start": "856620",
    "end": "860160"
  },
  {
    "text": "addresses cves and also the minor",
    "start": "860160",
    "end": "862560"
  },
  {
    "text": "release might go out of the support",
    "start": "862560",
    "end": "864600"
  },
  {
    "text": "window",
    "start": "864600",
    "end": "866279"
  },
  {
    "text": "um upgrading the 170 clusters manually",
    "start": "866279",
    "end": "868500"
  },
  {
    "text": "would be insane because it would be a",
    "start": "868500",
    "end": "871920"
  },
  {
    "text": "lot of work and very error prone so it",
    "start": "871920",
    "end": "874680"
  },
  {
    "text": "requires some custom toolings and",
    "start": "874680",
    "end": "876240"
  },
  {
    "text": "automations specifically internally we",
    "start": "876240",
    "end": "879000"
  },
  {
    "text": "don't we Define this process uh by",
    "start": "879000",
    "end": "881699"
  },
  {
    "text": "following this blue green upgrade",
    "start": "881699",
    "end": "883440"
  },
  {
    "text": "process the Brooklyn upgrade process has",
    "start": "883440",
    "end": "886680"
  },
  {
    "text": "two nice properties we can validate the",
    "start": "886680",
    "end": "889199"
  },
  {
    "text": "new is the release before shifting the",
    "start": "889199",
    "end": "891240"
  },
  {
    "text": "workloads over and we can roll back",
    "start": "891240",
    "end": "893940"
  },
  {
    "text": "quickly if the new version has some bugs",
    "start": "893940",
    "end": "897360"
  },
  {
    "text": "or it doesn't interoperate with the old",
    "start": "897360",
    "end": "899279"
  },
  {
    "text": "istio version that we're currently",
    "start": "899279",
    "end": "901079"
  },
  {
    "text": "running",
    "start": "901079",
    "end": "902339"
  },
  {
    "text": "so I want to show you a really quick",
    "start": "902339",
    "end": "903959"
  },
  {
    "text": "animations of how the blue green upgrade",
    "start": "903959",
    "end": "906000"
  },
  {
    "text": "Works uh so we were on the same page",
    "start": "906000",
    "end": "908600"
  },
  {
    "text": "this process is inspired by the canary",
    "start": "908600",
    "end": "912240"
  },
  {
    "text": "release that the istio community",
    "start": "912240",
    "end": "915300"
  },
  {
    "text": "um proposed but let's assume that every",
    "start": "915300",
    "end": "917459"
  },
  {
    "text": "all these new components is on Blue",
    "start": "917459",
    "end": "920399"
  },
  {
    "text": "right now that includes the control",
    "start": "920399",
    "end": "921959"
  },
  {
    "text": "planes and the sidecar proxy the first",
    "start": "921959",
    "end": "924360"
  },
  {
    "text": "thing we do is to deploy a new version",
    "start": "924360",
    "end": "926339"
  },
  {
    "text": "of istio control plane colleague ring",
    "start": "926339",
    "end": "929699"
  },
  {
    "text": "and then we will select a subset of",
    "start": "929699",
    "end": "932220"
  },
  {
    "text": "namespaces change the you know the is",
    "start": "932220",
    "end": "935699"
  },
  {
    "text": "the revision namespace label to Green so",
    "start": "935699",
    "end": "938519"
  },
  {
    "text": "that a new version of sidecar proxy is",
    "start": "938519",
    "end": "940740"
  },
  {
    "text": "injected now notice that we we're",
    "start": "940740",
    "end": "943500"
  },
  {
    "text": "running blue and green meshes at the",
    "start": "943500",
    "end": "945720"
  },
  {
    "text": "same time in the same cluster",
    "start": "945720",
    "end": "947820"
  },
  {
    "text": "this is important because by separating",
    "start": "947820",
    "end": "951060"
  },
  {
    "text": "a pair of cluster and client into the",
    "start": "951060",
    "end": "953459"
  },
  {
    "text": "two meshes we can test the",
    "start": "953459",
    "end": "955019"
  },
  {
    "text": "interoperability of the two versions of",
    "start": "955019",
    "end": "957779"
  },
  {
    "text": "his Dios",
    "start": "957779",
    "end": "960060"
  },
  {
    "text": "and the test is basically up to uh your",
    "start": "960060",
    "end": "963600"
  },
  {
    "text": "applications like the sets of features",
    "start": "963600",
    "end": "965639"
  },
  {
    "text": "that you use mtla is really limiting",
    "start": "965639",
    "end": "968000"
  },
  {
    "text": "traffic shifting Etc",
    "start": "968000",
    "end": "971760"
  },
  {
    "text": "and lastly we update the rest of the",
    "start": "971760",
    "end": "974160"
  },
  {
    "text": "namespace to the green mesh as well and",
    "start": "974160",
    "end": "977459"
  },
  {
    "text": "then eventually retire the blue control",
    "start": "977459",
    "end": "979620"
  },
  {
    "text": "plane so that's very intuitive uh one",
    "start": "979620",
    "end": "983459"
  },
  {
    "text": "caveat is that before we we retire the",
    "start": "983459",
    "end": "986639"
  },
  {
    "text": "old control plane we need to make sure",
    "start": "986639",
    "end": "988560"
  },
  {
    "text": "that the client traffic",
    "start": "988560",
    "end": "990540"
  },
  {
    "text": "all the client traffic has been drained",
    "start": "990540",
    "end": "992639"
  },
  {
    "text": "to the new uh istio gateways and because",
    "start": "992639",
    "end": "997680"
  },
  {
    "text": "we have essentially two separate",
    "start": "997680",
    "end": "999480"
  },
  {
    "text": "deployments of istio service meshes the",
    "start": "999480",
    "end": "1003079"
  },
  {
    "text": "gateways are fronted by different sets",
    "start": "1003079",
    "end": "1005060"
  },
  {
    "text": "of load balancers",
    "start": "1005060",
    "end": "1006740"
  },
  {
    "text": "and that's an issue because to drain the",
    "start": "1006740",
    "end": "1009380"
  },
  {
    "text": "uh the client traffic over",
    "start": "1009380",
    "end": "1012320"
  },
  {
    "text": "it just means that we the first",
    "start": "1012320",
    "end": "1014600"
  },
  {
    "text": "implementation is to do a DNS cutover",
    "start": "1014600",
    "end": "1017240"
  },
  {
    "text": "so that we update the DNS 8 record for",
    "start": "1017240",
    "end": "1019940"
  },
  {
    "text": "uh the cluster Ingress gateway to point",
    "start": "1019940",
    "end": "1022579"
  },
  {
    "text": "to the new IP address of the new load",
    "start": "1022579",
    "end": "1025280"
  },
  {
    "text": "balancer and we can do it in a cloud",
    "start": "1025280",
    "end": "1027079"
  },
  {
    "text": "agnostic way using Cloud by using",
    "start": "1027079",
    "end": "1029058"
  },
  {
    "text": "external DNS which basically manage your",
    "start": "1029059",
    "end": "1032418"
  },
  {
    "text": "DNS configuration using kubernetes",
    "start": "1032419",
    "end": "1036319"
  },
  {
    "text": "annotation",
    "start": "1036319",
    "end": "1039159"
  },
  {
    "text": "uh this is a a diagram of showing how",
    "start": "1039679",
    "end": "1042798"
  },
  {
    "text": "the DNS update works so on the upper",
    "start": "1042799",
    "end": "1044720"
  },
  {
    "text": "hand side is me updating a DNS worker",
    "start": "1044720",
    "end": "1047540"
  },
  {
    "text": "through our Authority and that server",
    "start": "1047540",
    "end": "1049340"
  },
  {
    "text": "and whichever DNS resolver eventually",
    "start": "1049340",
    "end": "1052460"
  },
  {
    "text": "picks up that update and then I will",
    "start": "1052460",
    "end": "1054799"
  },
  {
    "text": "return the new response to the client",
    "start": "1054799",
    "end": "1058039"
  },
  {
    "text": "and the response can be pointed to",
    "start": "1058039",
    "end": "1059980"
  },
  {
    "text": "either blue or green load balancer",
    "start": "1059980",
    "end": "1064039"
  },
  {
    "text": "now there's a lot of issue with dnas uh",
    "start": "1064039",
    "end": "1067880"
  },
  {
    "text": "primarily because DNS we have no control",
    "start": "1067880",
    "end": "1071539"
  },
  {
    "text": "over client caching for DNS which is the",
    "start": "1071539",
    "end": "1074780"
  },
  {
    "text": "second point right here where shift",
    "start": "1074780",
    "end": "1076400"
  },
  {
    "text": "traffic shifting using DNS is very",
    "start": "1076400",
    "end": "1078260"
  },
  {
    "text": "ineffective",
    "start": "1078260",
    "end": "1080120"
  },
  {
    "text": "um",
    "start": "1080120",
    "end": "1081500"
  },
  {
    "text": "in practice we noticed that after we",
    "start": "1081500",
    "end": "1083539"
  },
  {
    "text": "updated DNS records",
    "start": "1083539",
    "end": "1085400"
  },
  {
    "text": "after two weeks there's still traffic",
    "start": "1085400",
    "end": "1087260"
  },
  {
    "text": "hidden the old",
    "start": "1087260",
    "end": "1089179"
  },
  {
    "text": "um load balancer and there's nothing we",
    "start": "1089179",
    "end": "1091340"
  },
  {
    "text": "can do about it we basically just set a",
    "start": "1091340",
    "end": "1093140"
  },
  {
    "text": "deadline and then after that we gave up",
    "start": "1093140",
    "end": "1094940"
  },
  {
    "text": "and just retire the load balancer",
    "start": "1094940",
    "end": "1098539"
  },
  {
    "text": "but going back to the top where uh for",
    "start": "1098539",
    "end": "1101780"
  },
  {
    "text": "some cloud provider external DNS updates",
    "start": "1101780",
    "end": "1104840"
  },
  {
    "text": "are not Atomic it's done by two API",
    "start": "1104840",
    "end": "1108320"
  },
  {
    "text": "calls delete and then update it's",
    "start": "1108320",
    "end": "1110299"
  },
  {
    "text": "possible for delete to succeed and then",
    "start": "1110299",
    "end": "1112160"
  },
  {
    "text": "update to fail so then uh essentially",
    "start": "1112160",
    "end": "1116299"
  },
  {
    "text": "all the DNS resolution would return NX",
    "start": "1116299",
    "end": "1118460"
  },
  {
    "text": "domain",
    "start": "1118460",
    "end": "1119780"
  },
  {
    "text": "um and that's not great and what's worse",
    "start": "1119780",
    "end": "1122600"
  },
  {
    "text": "is that your client can cache the NX",
    "start": "1122600",
    "end": "1124520"
  },
  {
    "text": "domain response indefinitely",
    "start": "1124520",
    "end": "1127460"
  },
  {
    "text": "um and there's nothing you can change",
    "start": "1127460",
    "end": "1128660"
  },
  {
    "text": "about it and even if both a delete and",
    "start": "1128660",
    "end": "1131840"
  },
  {
    "text": "update API calls",
    "start": "1131840",
    "end": "1133880"
  },
  {
    "text": "succeeded there's a five to ten seconds",
    "start": "1133880",
    "end": "1136520"
  },
  {
    "text": "delay between the two operations and",
    "start": "1136520",
    "end": "1139400"
  },
  {
    "text": "you're going to get NX domain in those",
    "start": "1139400",
    "end": "1141320"
  },
  {
    "text": "tiny window",
    "start": "1141320",
    "end": "1142760"
  },
  {
    "text": "so DNS updates not great so how do we",
    "start": "1142760",
    "end": "1147080"
  },
  {
    "text": "work around this uh this issue",
    "start": "1147080",
    "end": "1151480"
  },
  {
    "text": "essentially don't do DNS update but how",
    "start": "1151480",
    "end": "1154160"
  },
  {
    "text": "do we do that",
    "start": "1154160",
    "end": "1155419"
  },
  {
    "text": "um we can do so with a common set of",
    "start": "1155419",
    "end": "1157220"
  },
  {
    "text": "load balancer that doesn't change with",
    "start": "1157220",
    "end": "1159440"
  },
  {
    "text": "regards to either blue or green",
    "start": "1159440",
    "end": "1162799"
  },
  {
    "text": "um",
    "start": "1162799",
    "end": "1163520"
  },
  {
    "text": "the way to achieve this common sensible",
    "start": "1163520",
    "end": "1165919"
  },
  {
    "text": "balancer is to define a service object",
    "start": "1165919",
    "end": "1168460"
  },
  {
    "text": "without label selection and and",
    "start": "1168460",
    "end": "1172520"
  },
  {
    "text": "configure an endpoints object manually",
    "start": "1172520",
    "end": "1174620"
  },
  {
    "text": "now this is important because if you use",
    "start": "1174620",
    "end": "1177740"
  },
  {
    "text": "a label selector on the surface object",
    "start": "1177740",
    "end": "1179539"
  },
  {
    "text": "you can only select pause from the same",
    "start": "1179539",
    "end": "1181820"
  },
  {
    "text": "namespace where the service resides but",
    "start": "1181820",
    "end": "1184880"
  },
  {
    "text": "because we have is the blue and it's",
    "start": "1184880",
    "end": "1186440"
  },
  {
    "text": "still green and they're from different",
    "start": "1186440",
    "end": "1188120"
  },
  {
    "text": "name spaces we do want to support pause",
    "start": "1188120",
    "end": "1190460"
  },
  {
    "text": "from",
    "start": "1190460",
    "end": "1191480"
  },
  {
    "text": "multiple namespaces so that's why we're",
    "start": "1191480",
    "end": "1194539"
  },
  {
    "text": "using service without a label selector",
    "start": "1194539",
    "end": "1196280"
  },
  {
    "text": "and we're defining this endpoints object",
    "start": "1196280",
    "end": "1198320"
  },
  {
    "text": "to be a list of IP addresses of the",
    "start": "1198320",
    "end": "1201500"
  },
  {
    "text": "selected pause and which could be a mix",
    "start": "1201500",
    "end": "1204080"
  },
  {
    "text": "of blue and green Gateway pods and we",
    "start": "1204080",
    "end": "1206179"
  },
  {
    "text": "build a really simple controller that",
    "start": "1206179",
    "end": "1207860"
  },
  {
    "text": "manage the endpoints object for us so we",
    "start": "1207860",
    "end": "1211280"
  },
  {
    "text": "don't have to do this manually because",
    "start": "1211280",
    "end": "1213020"
  },
  {
    "text": "pods are by definition in ephemeral",
    "start": "1213020",
    "end": "1216820"
  },
  {
    "text": "so here's a really quick animation of",
    "start": "1217400",
    "end": "1219500"
  },
  {
    "text": "this common lb setup initially the",
    "start": "1219500",
    "end": "1223520"
  },
  {
    "text": "common load balancer in Orange points to",
    "start": "1223520",
    "end": "1226760"
  },
  {
    "text": "the the blue istio mesh",
    "start": "1226760",
    "end": "1230600"
  },
  {
    "text": "and then we deploy a new version of",
    "start": "1230600",
    "end": "1232520"
  },
  {
    "text": "istio and notice that it still comes",
    "start": "1232520",
    "end": "1234620"
  },
  {
    "text": "with its own load balancer and those are",
    "start": "1234620",
    "end": "1237559"
  },
  {
    "text": "ephemeral they are there just for",
    "start": "1237559",
    "end": "1239419"
  },
  {
    "text": "testing because we want to make sure",
    "start": "1239419",
    "end": "1241220"
  },
  {
    "text": "that traffic can actually hit the uh is",
    "start": "1241220",
    "end": "1244580"
  },
  {
    "text": "still green gateways and in order to",
    "start": "1244580",
    "end": "1247880"
  },
  {
    "text": "test the new gateways they have to be",
    "start": "1247880",
    "end": "1249980"
  },
  {
    "text": "behind some load balancer but if we add",
    "start": "1249980",
    "end": "1252620"
  },
  {
    "text": "it as a backend for the the common load",
    "start": "1252620",
    "end": "1255200"
  },
  {
    "text": "balancer in yellow they receive",
    "start": "1255200",
    "end": "1257660"
  },
  {
    "text": "production traffic instantaneously and",
    "start": "1257660",
    "end": "1259640"
  },
  {
    "text": "that's not what we want it so we have to",
    "start": "1259640",
    "end": "1261200"
  },
  {
    "text": "have a separate set of load balancer",
    "start": "1261200",
    "end": "1262580"
  },
  {
    "text": "anyway just for testing",
    "start": "1262580",
    "end": "1265720"
  },
  {
    "text": "and then we update the endpoints object",
    "start": "1265880",
    "end": "1268340"
  },
  {
    "text": "within the kubernetes cluster to select",
    "start": "1268340",
    "end": "1270500"
  },
  {
    "text": "the different sets of Gateway parts",
    "start": "1270500",
    "end": "1273320"
  },
  {
    "text": "and lastly we retired the old uh istio",
    "start": "1273320",
    "end": "1276679"
  },
  {
    "text": "mash and also the temporary green load",
    "start": "1276679",
    "end": "1279620"
  },
  {
    "text": "balancer and then all the production",
    "start": "1279620",
    "end": "1281419"
  },
  {
    "text": "traffic are now hidden is still green",
    "start": "1281419",
    "end": "1283940"
  },
  {
    "text": "and notice there's no DNS updates as",
    "start": "1283940",
    "end": "1286400"
  },
  {
    "text": "part of the steps",
    "start": "1286400",
    "end": "1289120"
  },
  {
    "text": "okay well looks like I got some time so",
    "start": "1289880",
    "end": "1292940"
  },
  {
    "text": "I want to cover",
    "start": "1292940",
    "end": "1296000"
  },
  {
    "text": "um",
    "start": "1296000",
    "end": "1297679"
  },
  {
    "text": "this kind of appendix that I prepared",
    "start": "1297679",
    "end": "1300260"
  },
  {
    "text": "um some open questions with multi-cloud",
    "start": "1300260",
    "end": "1301960"
  },
  {
    "text": "istio and kubernetes would help with",
    "start": "1301960",
    "end": "1305780"
  },
  {
    "text": "your multi-cloud adoptions but it's not",
    "start": "1305780",
    "end": "1307700"
  },
  {
    "text": "Panacea specifically there are issues",
    "start": "1307700",
    "end": "1311720"
  },
  {
    "text": "um that has been addressed for example",
    "start": "1311720",
    "end": "1313640"
  },
  {
    "text": "the application that's",
    "start": "1313640",
    "end": "1315799"
  },
  {
    "text": "that's used in the cloud provider",
    "start": "1315799",
    "end": "1317480"
  },
  {
    "text": "services",
    "start": "1317480",
    "end": "1318740"
  },
  {
    "text": "still have to use cloud specific",
    "start": "1318740",
    "end": "1321440"
  },
  {
    "text": "libraries and that means the same logic",
    "start": "1321440",
    "end": "1324799"
  },
  {
    "text": "need to be implemented three times if",
    "start": "1324799",
    "end": "1327140"
  },
  {
    "text": "you want to support say the big three",
    "start": "1327140",
    "end": "1329120"
  },
  {
    "text": "Cloud providers an example would be if",
    "start": "1329120",
    "end": "1331520"
  },
  {
    "text": "your application rise to a blob storage",
    "start": "1331520",
    "end": "1333260"
  },
  {
    "text": "bucket like S3 or GCS or write to a",
    "start": "1333260",
    "end": "1337340"
  },
  {
    "text": "message queue",
    "start": "1337340",
    "end": "1339679"
  },
  {
    "text": "it's the part identity uh",
    "start": "1339679",
    "end": "1343100"
  },
  {
    "text": "which on gke is called vocal identity",
    "start": "1343100",
    "end": "1345380"
  },
  {
    "text": "which translates a kubernetes service",
    "start": "1345380",
    "end": "1347240"
  },
  {
    "text": "account to a cloud service account or",
    "start": "1347240",
    "end": "1349880"
  },
  {
    "text": "role depends on your cloud provider I",
    "start": "1349880",
    "end": "1352159"
  },
  {
    "text": "mean that only solves authentication",
    "start": "1352159",
    "end": "1353720"
  },
  {
    "text": "authorizations to the cloud resources",
    "start": "1353720",
    "end": "1355760"
  },
  {
    "text": "and doesn't solve the actual API Clause",
    "start": "1355760",
    "end": "1358220"
  },
  {
    "text": "of interacting with the cloud and custom",
    "start": "1358220",
    "end": "1360799"
  },
  {
    "text": "resource definitions can solve your",
    "start": "1360799",
    "end": "1362539"
  },
  {
    "text": "resource provisioning",
    "start": "1362539",
    "end": "1364580"
  },
  {
    "text": "um",
    "start": "1364580",
    "end": "1365780"
  },
  {
    "text": "but it doesn't again it doesn't solve",
    "start": "1365780",
    "end": "1368659"
  },
  {
    "text": "interactions of your application is",
    "start": "1368659",
    "end": "1371059"
  },
  {
    "text": "actually using the message queue or the",
    "start": "1371059",
    "end": "1374539"
  },
  {
    "text": "bucket",
    "start": "1374539",
    "end": "1376899"
  },
  {
    "text": "um",
    "start": "1377600",
    "end": "1378260"
  },
  {
    "text": "yeah and Cloud resources and policies",
    "start": "1378260",
    "end": "1380419"
  },
  {
    "text": "that cannot be abstracted away by this",
    "start": "1380419",
    "end": "1382640"
  },
  {
    "text": "Cloud agnostic abstractions remain",
    "start": "1382640",
    "end": "1385220"
  },
  {
    "text": "heterogeneous for example uh in order to",
    "start": "1385220",
    "end": "1388340"
  },
  {
    "text": "manage the cloud DNS records and having",
    "start": "1388340",
    "end": "1393440"
  },
  {
    "text": "a identity that is granted permissions",
    "start": "1393440",
    "end": "1396020"
  },
  {
    "text": "to only create say tax records",
    "start": "1396020",
    "end": "1399380"
  },
  {
    "text": "um that's something you cannot do with",
    "start": "1399380",
    "end": "1401600"
  },
  {
    "text": "kubernetes alone and you have to",
    "start": "1401600",
    "end": "1403220"
  },
  {
    "text": "provision the identities and policies in",
    "start": "1403220",
    "end": "1405919"
  },
  {
    "text": "those respective cloud provider that",
    "start": "1405919",
    "end": "1408799"
  },
  {
    "text": "you're on",
    "start": "1408799",
    "end": "1410720"
  },
  {
    "text": "um",
    "start": "1410720",
    "end": "1411860"
  },
  {
    "text": "so with that I think that is the end of",
    "start": "1411860",
    "end": "1415460"
  },
  {
    "text": "my talk thank you so much for being here",
    "start": "1415460",
    "end": "1418280"
  },
  {
    "text": "and for your time we're hiring globally",
    "start": "1418280",
    "end": "1420559"
  },
  {
    "text": "and if you're interested in multi-cloud",
    "start": "1420559",
    "end": "1422600"
  },
  {
    "text": "distributed systems open source software",
    "start": "1422600",
    "end": "1424700"
  },
  {
    "text": "can talk to me",
    "start": "1424700",
    "end": "1426860"
  },
  {
    "text": "um yeah thank you",
    "start": "1426860",
    "end": "1430120"
  },
  {
    "text": "and we have actually plenty of time for",
    "start": "1430280",
    "end": "1433220"
  },
  {
    "text": "questions uh we have a five minutes",
    "start": "1433220",
    "end": "1434840"
  },
  {
    "text": "until break but uh after this we have a",
    "start": "1434840",
    "end": "1438020"
  },
  {
    "text": "break coffee break so you can get uh",
    "start": "1438020",
    "end": "1439880"
  },
  {
    "text": "coffee in the maybe water because you",
    "start": "1439880",
    "end": "1442700"
  },
  {
    "text": "know coffee dehydrate and you will you",
    "start": "1442700",
    "end": "1445100"
  },
  {
    "text": "know want to sleep more after you drink",
    "start": "1445100",
    "end": "1447140"
  },
  {
    "text": "enough coffee but",
    "start": "1447140",
    "end": "1448880"
  },
  {
    "text": "questions questions questions over there",
    "start": "1448880",
    "end": "1451520"
  },
  {
    "text": "I will bring the microphone just a",
    "start": "1451520",
    "end": "1453380"
  },
  {
    "text": "second",
    "start": "1453380",
    "end": "1455500"
  },
  {
    "text": "uh that Canary upgrade trick without a",
    "start": "1459500",
    "end": "1461900"
  },
  {
    "text": "DNS swing is awesome really cool thanks",
    "start": "1461900",
    "end": "1465320"
  },
  {
    "text": "um I wanted to ask you mentioned that um",
    "start": "1465320",
    "end": "1467720"
  },
  {
    "text": "the exported four header is susceptible",
    "start": "1467720",
    "end": "1469760"
  },
  {
    "text": "to spoofing did um I assume you tried",
    "start": "1469760",
    "end": "1472400"
  },
  {
    "text": "setting num trusted proxies and it",
    "start": "1472400",
    "end": "1474080"
  },
  {
    "text": "didn't work why didn't that work",
    "start": "1474080",
    "end": "1477880"
  },
  {
    "text": "I don't know I think that's a decision",
    "start": "1478159",
    "end": "1480740"
  },
  {
    "text": "imposed by the security teams and that's",
    "start": "1480740",
    "end": "1483140"
  },
  {
    "text": "a decision before my time",
    "start": "1483140",
    "end": "1486080"
  },
  {
    "text": "um",
    "start": "1486080",
    "end": "1486860"
  },
  {
    "text": "but yeah that sounds like something",
    "start": "1486860",
    "end": "1488720"
  },
  {
    "text": "security teams would worry about I'm",
    "start": "1488720",
    "end": "1489860"
  },
  {
    "text": "just curious thanks yep",
    "start": "1489860",
    "end": "1493120"
  },
  {
    "text": "any uh other questions",
    "start": "1494000",
    "end": "1498280"
  },
  {
    "text": "all right so in this case uh let's do uh",
    "start": "1499460",
    "end": "1502520"
  },
  {
    "text": "one more round of applause for Charles",
    "start": "1502520",
    "end": "1504320"
  },
  {
    "text": "and thank you",
    "start": "1504320",
    "end": "1507100"
  }
]