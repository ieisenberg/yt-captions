[
  {
    "text": "hello everyone my name is Resa and I'm a",
    "start": "5520",
    "end": "8320"
  },
  {
    "text": "developer Advocate at",
    "start": "8320",
    "end": "10280"
  },
  {
    "text": "igera today I'm going to talk about",
    "start": "10280",
    "end": "12719"
  },
  {
    "text": "kuber's cluster mesh with open source",
    "start": "12719",
    "end": "16720"
  },
  {
    "text": "Calico um I'm going to start with what",
    "start": "16720",
    "end": "19840"
  },
  {
    "text": "is Project Calico then show you a demo",
    "start": "19840",
    "end": "23119"
  },
  {
    "text": "and walk you through some of the stuff",
    "start": "23119",
    "end": "25920"
  },
  {
    "text": "like bgp overview and cluster mesh all",
    "start": "25920",
    "end": "29480"
  },
  {
    "text": "right so so what is Project",
    "start": "29480",
    "end": "32078"
  },
  {
    "text": "Calico project Calico is a pure layer 3",
    "start": "32079",
    "end": "35680"
  },
  {
    "text": "approach to Virtual networking and",
    "start": "35680",
    "end": "37800"
  },
  {
    "text": "security for highly scalable data",
    "start": "37800",
    "end": "40360"
  },
  {
    "text": "centers we offer Calico a free and open-",
    "start": "40360",
    "end": "44160"
  },
  {
    "text": "Source networking and network security",
    "start": "44160",
    "end": "46879"
  },
  {
    "text": "solution for containers virtual machines",
    "start": "46879",
    "end": "49800"
  },
  {
    "text": "and Native host-based",
    "start": "49800",
    "end": "51960"
  },
  {
    "text": "workloads Calico supports multiple",
    "start": "51960",
    "end": "54520"
  },
  {
    "text": "architectures and platforms such as x86",
    "start": "54520",
    "end": "58160"
  },
  {
    "text": "and arm64 so you can can basically",
    "start": "58160",
    "end": "60680"
  },
  {
    "text": "install it on any environment this",
    "start": "60680",
    "end": "62920"
  },
  {
    "text": "modular architecture make uh Calico a",
    "start": "62920",
    "end": "66240"
  },
  {
    "text": "great choice for any environment and",
    "start": "66240",
    "end": "68920"
  },
  {
    "text": "gives you the required tools to be in",
    "start": "68920",
    "end": "71439"
  },
  {
    "text": "charge of your software defined",
    "start": "71439",
    "end": "73680"
  },
  {
    "text": "networking traffic as I mentioned Calico",
    "start": "73680",
    "end": "77200"
  },
  {
    "text": "has a modular architecture similar to",
    "start": "77200",
    "end": "80720"
  },
  {
    "text": "kubernetes and it offers multiple",
    "start": "80720",
    "end": "83320"
  },
  {
    "text": "choices that gives you the freedom to",
    "start": "83320",
    "end": "85759"
  },
  {
    "text": "tune your Cloud environment in a way",
    "start": "85759",
    "end": "88840"
  },
  {
    "text": "that will be the most optimal for your",
    "start": "88840",
    "end": "91840"
  },
  {
    "text": "scenario today Calico offers four",
    "start": "91840",
    "end": "94840"
  },
  {
    "text": "pluggable data planes that can be",
    "start": "94840",
    "end": "96880"
  },
  {
    "text": "switched on depending on your needs and",
    "start": "96880",
    "end": "100159"
  },
  {
    "text": "environment the standard data plane is",
    "start": "100159",
    "end": "103000"
  },
  {
    "text": "based on IP tables that provides fast",
    "start": "103000",
    "end": "105680"
  },
  {
    "text": "networking security and compatibility to",
    "start": "105680",
    "end": "108320"
  },
  {
    "text": "all environments Calico abpf data plane",
    "start": "108320",
    "end": "111920"
  },
  {
    "text": "is another data plane created by tigera",
    "start": "111920",
    "end": "115439"
  },
  {
    "text": "which uses the power of ebpf programs to",
    "start": "115439",
    "end": "118320"
  },
  {
    "text": "provide blazing fastness networking and",
    "start": "118320",
    "end": "120880"
  },
  {
    "text": "security for your environment ebpf data",
    "start": "120880",
    "end": "124439"
  },
  {
    "text": "plane offers capabilities such as uh",
    "start": "124439",
    "end": "127960"
  },
  {
    "text": "complete coup proxy replacement source",
    "start": "127960",
    "end": "131000"
  },
  {
    "text": "IP preservation and dsur or direct",
    "start": "131000",
    "end": "134200"
  },
  {
    "text": "service",
    "start": "134200",
    "end": "135599"
  },
  {
    "text": "return if you are running a hybrid",
    "start": "135599",
    "end": "138280"
  },
  {
    "text": "environment you can use Calico for",
    "start": "138280",
    "end": "140879"
  },
  {
    "text": "Windows which is based on Microsoft",
    "start": "140879",
    "end": "144800"
  },
  {
    "text": "hns and can deliver networking and",
    "start": "144800",
    "end": "147840"
  },
  {
    "text": "security to your windows nodes",
    "start": "147840",
    "end": "151400"
  },
  {
    "text": "um wepp is the new data plane for Calico",
    "start": "151400",
    "end": "155440"
  },
  {
    "text": "it was an external contribution from",
    "start": "155440",
    "end": "158239"
  },
  {
    "text": "Cisco um currently it is in its beta",
    "start": "158239",
    "end": "162280"
  },
  {
    "text": "phase uh which accelerates the",
    "start": "162280",
    "end": "164560"
  },
  {
    "text": "networking experience by utilizing the",
    "start": "164560",
    "end": "167120"
  },
  {
    "text": "power of user space",
    "start": "167120",
    "end": "169280"
  },
  {
    "text": "programming in fact ebpf and hns are",
    "start": "169280",
    "end": "173560"
  },
  {
    "text": "some of the foundational technologies",
    "start": "173560",
    "end": "176640"
  },
  {
    "text": "that provide networking security",
    "start": "176640",
    "end": "178920"
  },
  {
    "text": "observability image assurance and",
    "start": "178920",
    "end": "181200"
  },
  {
    "text": "runtime tread defense in our Enterprise",
    "start": "181200",
    "end": "184159"
  },
  {
    "text": "Solutions at",
    "start": "184159",
    "end": "186440"
  },
  {
    "text": "igera our community has more than 9,000",
    "start": "186440",
    "end": "190239"
  },
  {
    "text": "slack members and uh 320 contributors on",
    "start": "190239",
    "end": "194920"
  },
  {
    "text": "GitHub there are around 8 million nodes",
    "start": "194920",
    "end": "198319"
  },
  {
    "text": "per day which are covered by Calico",
    "start": "198319",
    "end": "201319"
  },
  {
    "text": "either people testing or they've been",
    "start": "201319",
    "end": "203360"
  },
  {
    "text": "running Calico for six",
    "start": "203360",
    "end": "206720"
  },
  {
    "text": "years with that being said let's get to",
    "start": "206720",
    "end": "210319"
  },
  {
    "text": "the cluster mesh bar all right I've got",
    "start": "210319",
    "end": "215239"
  },
  {
    "text": "two clusters um two self-managed",
    "start": "215239",
    "end": "218879"
  },
  {
    "text": "clusters that I uh created with",
    "start": "218879",
    "end": "222519"
  },
  {
    "text": "terraform uh don't worry everything that",
    "start": "222519",
    "end": "224879"
  },
  {
    "text": "I'm showing you will be available on",
    "start": "224879",
    "end": "227040"
  },
  {
    "text": "GitHub so you don't have to write down",
    "start": "227040",
    "end": "229439"
  },
  {
    "text": "any codes or anything it's just a QR",
    "start": "229439",
    "end": "231879"
  },
  {
    "text": "code that I will share at the end and",
    "start": "231879",
    "end": "234200"
  },
  {
    "text": "you can basically go through everything",
    "start": "234200",
    "end": "236640"
  },
  {
    "text": "that I'm",
    "start": "236640",
    "end": "237879"
  },
  {
    "text": "typing so",
    "start": "237879",
    "end": "240720"
  },
  {
    "text": "and I've got a cube config file that has",
    "start": "240720",
    "end": "244680"
  },
  {
    "text": "access to these clusters each cluster",
    "start": "244680",
    "end": "247439"
  },
  {
    "text": "has uh a control control plane node and",
    "start": "247439",
    "end": "252000"
  },
  {
    "text": "a con and a worker",
    "start": "252000",
    "end": "255320"
  },
  {
    "text": "node all right so first of all",
    "start": "255320",
    "end": "259320"
  },
  {
    "text": "throughout this video I'm going to use",
    "start": "259320",
    "end": "262639"
  },
  {
    "text": "D- context to switch between these two",
    "start": "262639",
    "end": "266080"
  },
  {
    "text": "clusters so cluster a is um a",
    "start": "266080",
    "end": "272000"
  },
  {
    "text": "cluster",
    "start": "272000",
    "end": "274919"
  },
  {
    "text": "in AWS um it's on us West 2 and cluster",
    "start": "274919",
    "end": "281160"
  },
  {
    "text": "b is another cluster on uh Us East",
    "start": "281160",
    "end": "286840"
  },
  {
    "text": "to all right so let's get",
    "start": "286840",
    "end": "292880"
  },
  {
    "text": "started so first of all I'm going to",
    "start": "292880",
    "end": "297320"
  },
  {
    "text": "tell Calico that I want to run bgp in my",
    "start": "297320",
    "end": "302160"
  },
  {
    "text": "clusters now in order to do that I need",
    "start": "302160",
    "end": "306520"
  },
  {
    "text": "to uh figure out an as number or",
    "start": "306520",
    "end": "309880"
  },
  {
    "text": "autonomous number an autonomous number",
    "start": "309880",
    "end": "313360"
  },
  {
    "text": "is uh more like an ID it's a way for our",
    "start": "313360",
    "end": "318400"
  },
  {
    "text": "cluster to represent itself as a router",
    "start": "318400",
    "end": "321960"
  },
  {
    "text": "to other routers I'm also going to uh",
    "start": "321960",
    "end": "325960"
  },
  {
    "text": "write listen Port um this is going to be",
    "start": "325960",
    "end": "329080"
  },
  {
    "text": "the port that bgp will listen on and um",
    "start": "329080",
    "end": "334199"
  },
  {
    "text": "form bgp connections",
    "start": "334199",
    "end": "336919"
  },
  {
    "text": "on um there is no to node mesh which I",
    "start": "336919",
    "end": "341080"
  },
  {
    "text": "disabled it is enabled by",
    "start": "341080",
    "end": "344000"
  },
  {
    "text": "default and uh service cluster IPS so",
    "start": "344000",
    "end": "348680"
  },
  {
    "text": "this is uh very unique here because I do",
    "start": "348680",
    "end": "353360"
  },
  {
    "text": "want my service IPS to be propagated",
    "start": "353360",
    "end": "359039"
  },
  {
    "text": "when routing",
    "start": "359039",
    "end": "360960"
  },
  {
    "text": "happens we'll get to that in a second",
    "start": "360960",
    "end": "364160"
  },
  {
    "text": "all right so cluster a is going to",
    "start": "364160",
    "end": "367599"
  },
  {
    "text": "be",
    "start": "367599",
    "end": "369520"
  },
  {
    "text": "um",
    "start": "369520",
    "end": "372160"
  },
  {
    "text": "65001 and cluster B is going to be",
    "start": "372160",
    "end": "377360"
  },
  {
    "text": "65002 next um I need to create bgp peers",
    "start": "378240",
    "end": "385440"
  },
  {
    "text": "so this step is just to tell Calico that",
    "start": "385440",
    "end": "390599"
  },
  {
    "text": "I want to use bgp but in order to form",
    "start": "390599",
    "end": "393919"
  },
  {
    "text": "bgp I actually need to um tell Calico",
    "start": "393919",
    "end": "399039"
  },
  {
    "text": "that who's going to be my",
    "start": "399039",
    "end": "403400"
  },
  {
    "text": "Pier for that I can",
    "start": "403400",
    "end": "406880"
  },
  {
    "text": "use another unique um resource which is",
    "start": "406880",
    "end": "411960"
  },
  {
    "text": "called bgp Pier um this is cluster a so",
    "start": "411960",
    "end": "416560"
  },
  {
    "text": "I'm basically telling",
    "start": "416560",
    "end": "421400"
  },
  {
    "text": "talico that um use these IP addresses to",
    "start": "422800",
    "end": "427720"
  },
  {
    "text": "talk to autonomous number",
    "start": "427720",
    "end": "432360"
  },
  {
    "text": "65002 and I'm going to do the same thing",
    "start": "432720",
    "end": "436199"
  },
  {
    "text": "for cluster",
    "start": "436199",
    "end": "438039"
  },
  {
    "text": "B but this time I'm using uh",
    "start": "438039",
    "end": "442720"
  },
  {
    "text": "65001 which is the autonomous number of",
    "start": "442720",
    "end": "445879"
  },
  {
    "text": "cluster",
    "start": "445879",
    "end": "448319"
  },
  {
    "text": "a now that the bgp appears and bgp",
    "start": "448319",
    "end": "453039"
  },
  {
    "text": "configuration is done we can take a peek",
    "start": "453039",
    "end": "456680"
  },
  {
    "text": "at what is happening we can actually use",
    "start": "456680",
    "end": "461280"
  },
  {
    "text": "a binary file inside the Calico nood um",
    "start": "461280",
    "end": "465280"
  },
  {
    "text": "so Bert CL is the binary that can talk",
    "start": "465280",
    "end": "468879"
  },
  {
    "text": "to Bert who's doing the whole bgp",
    "start": "468879",
    "end": "472319"
  },
  {
    "text": "peering and routing stuff inside the",
    "start": "472319",
    "end": "475280"
  },
  {
    "text": "Calico node PS now if we look here we we",
    "start": "475280",
    "end": "479599"
  },
  {
    "text": "do have two bgp peers but both are stuck",
    "start": "479599",
    "end": "484280"
  },
  {
    "text": "at the connect",
    "start": "484280",
    "end": "487680"
  },
  {
    "text": "State well this is because at the moment",
    "start": "487680",
    "end": "493199"
  },
  {
    "text": "our two vpcs don't have any routes to",
    "start": "493199",
    "end": "496960"
  },
  {
    "text": "each other um keep in mind that I'm",
    "start": "496960",
    "end": "500680"
  },
  {
    "text": "using two um clusters in two different",
    "start": "500680",
    "end": "505800"
  },
  {
    "text": "vpcs so first of all we need to figure",
    "start": "505800",
    "end": "509080"
  },
  {
    "text": "out way to establish a connection either",
    "start": "509080",
    "end": "513760"
  },
  {
    "text": "a VPN or a tunnel or any sort of thing",
    "start": "513760",
    "end": "519560"
  },
  {
    "text": "now since this these two clusters are on",
    "start": "519560",
    "end": "523680"
  },
  {
    "text": "Amazon we could actually use something",
    "start": "523680",
    "end": "526519"
  },
  {
    "text": "called VPC perod so in order to do that",
    "start": "526519",
    "end": "531080"
  },
  {
    "text": "all I need to do is I need to um get the",
    "start": "531080",
    "end": "536640"
  },
  {
    "text": "ID of my VPC in",
    "start": "536640",
    "end": "539800"
  },
  {
    "text": "um the region us vest 2 and the ID of",
    "start": "539800",
    "end": "546040"
  },
  {
    "text": "the other VPC in Us East to and",
    "start": "546040",
    "end": "551560"
  },
  {
    "text": "actually use a feature or uh use",
    "start": "551560",
    "end": "556560"
  },
  {
    "text": "something called bpc Pier",
    "start": "556560",
    "end": "559279"
  },
  {
    "text": "connection and that will make a request",
    "start": "559279",
    "end": "563480"
  },
  {
    "text": "to Ena to enable a communication between",
    "start": "563480",
    "end": "567760"
  },
  {
    "text": "these two vpcs",
    "start": "567760",
    "end": "571000"
  },
  {
    "text": "now um since these two vpcs are using",
    "start": "571000",
    "end": "577160"
  },
  {
    "text": "different IP cers I also need to uh",
    "start": "577160",
    "end": "582720"
  },
  {
    "text": "enable some sort of routing so if there",
    "start": "582720",
    "end": "586120"
  },
  {
    "text": "is any um device in there that wants to",
    "start": "586120",
    "end": "590120"
  },
  {
    "text": "talk to the other VPC it needs to know",
    "start": "590120",
    "end": "594200"
  },
  {
    "text": "where it should go to so to verify we",
    "start": "594200",
    "end": "598760"
  },
  {
    "text": "could actually do context",
    "start": "598760",
    "end": "603440"
  },
  {
    "text": "cluster a get nodes a wide as you can",
    "start": "603440",
    "end": "609000"
  },
  {
    "text": "see here IP addresses are",
    "start": "609000",
    "end": "613279"
  },
  {
    "text": "172 16 to",
    "start": "613279",
    "end": "617160"
  },
  {
    "text": "107 and my cluster B it's",
    "start": "617160",
    "end": "622279"
  },
  {
    "text": "172 17 um to",
    "start": "622279",
    "end": "626480"
  },
  {
    "text": "157 so these are/ 16 so the first two",
    "start": "626480",
    "end": "632560"
  },
  {
    "text": "octed will never",
    "start": "632560",
    "end": "634480"
  },
  {
    "text": "change all right so now that we got the",
    "start": "634480",
    "end": "638639"
  },
  {
    "text": "cluster names and a VPC",
    "start": "638639",
    "end": "641440"
  },
  {
    "text": "connection let's go make a",
    "start": "641440",
    "end": "644200"
  },
  {
    "text": "route to create a route uh all I need to",
    "start": "644200",
    "end": "647560"
  },
  {
    "text": "do is figure out which routing table so",
    "start": "647560",
    "end": "651079"
  },
  {
    "text": "here since I'm using uh tags I can go",
    "start": "651079",
    "end": "655000"
  },
  {
    "text": "ahead and say all right AWS give me the",
    "start": "655000",
    "end": "659120"
  },
  {
    "text": "route table that I have that is using",
    "start": "659120",
    "end": "663040"
  },
  {
    "text": "this Calico demo",
    "start": "663040",
    "end": "665519"
  },
  {
    "text": "tag and I can store this for cluster a",
    "start": "665519",
    "end": "671000"
  },
  {
    "text": "and cluster B to environment",
    "start": "671000",
    "end": "675839"
  },
  {
    "text": "variables after it's done I can actually",
    "start": "675839",
    "end": "680160"
  },
  {
    "text": "go ahead and figure out what was the ID",
    "start": "680160",
    "end": "685880"
  },
  {
    "text": "for my VPC Pier connection so here is",
    "start": "685880",
    "end": "689639"
  },
  {
    "text": "the VPC per connection",
    "start": "689639",
    "end": "693519"
  },
  {
    "text": "ID and store all of these in my terminal",
    "start": "693519",
    "end": "699360"
  },
  {
    "text": "so all I need to do right now is to just",
    "start": "699360",
    "end": "704440"
  },
  {
    "text": "first um I need to accept the um VPC",
    "start": "704440",
    "end": "709360"
  },
  {
    "text": "peing",
    "start": "709360",
    "end": "711560"
  },
  {
    "text": "connection um that",
    "start": "711560",
    "end": "714360"
  },
  {
    "text": "means um the previous step that we did",
    "start": "714360",
    "end": "718160"
  },
  {
    "text": "with create bpc pering connection it's",
    "start": "718160",
    "end": "721440"
  },
  {
    "text": "just a request somebody needs to um",
    "start": "721440",
    "end": "726120"
  },
  {
    "text": "Grant this request so here I'm accepting",
    "start": "726120",
    "end": "731120"
  },
  {
    "text": "that request now the VPC pering is",
    "start": "731120",
    "end": "734720"
  },
  {
    "text": "established and now I can go",
    "start": "734720",
    "end": "739160"
  },
  {
    "text": "ahead and use all the environment",
    "start": "739160",
    "end": "743040"
  },
  {
    "text": "variables for Route ID uh cluster a and",
    "start": "743040",
    "end": "747440"
  },
  {
    "text": "pure ID to actually",
    "start": "747440",
    "end": "751720"
  },
  {
    "text": "tell uh AWS that I want routing between",
    "start": "751720",
    "end": "756320"
  },
  {
    "text": "these two",
    "start": "756320",
    "end": "759079"
  },
  {
    "text": "vpcs all right now that this is done um",
    "start": "760720",
    "end": "764680"
  },
  {
    "text": "let's go ahead and take a look at our",
    "start": "764680",
    "end": "768240"
  },
  {
    "text": "bgp uh status again well it's still",
    "start": "768240",
    "end": "773000"
  },
  {
    "text": "trying to connect but it can't well one",
    "start": "773000",
    "end": "776760"
  },
  {
    "text": "thing to remind you of is whenever you",
    "start": "776760",
    "end": "780279"
  },
  {
    "text": "are using a cloud provider there",
    "start": "780279",
    "end": "784320"
  },
  {
    "text": "is a security group or some sort of rule",
    "start": "784320",
    "end": "788920"
  },
  {
    "text": "that is preventing you from talking to",
    "start": "788920",
    "end": "792120"
  },
  {
    "text": "other uh Resources by default um what",
    "start": "792120",
    "end": "797040"
  },
  {
    "text": "each cloud provider would tell you is a",
    "start": "797040",
    "end": "800199"
  },
  {
    "text": "cloud provider is secure and safe and",
    "start": "800199",
    "end": "803320"
  },
  {
    "text": "that is because in most Cloud providers",
    "start": "803320",
    "end": "807480"
  },
  {
    "text": "there is an implicit deny for everything",
    "start": "807480",
    "end": "811760"
  },
  {
    "text": "and you need to go ahead and say all",
    "start": "811760",
    "end": "814199"
  },
  {
    "text": "right I need to enable this flow or I",
    "start": "814199",
    "end": "817600"
  },
  {
    "text": "need to enable this communication to",
    "start": "817600",
    "end": "820519"
  },
  {
    "text": "happen so with that in mind and if you",
    "start": "820519",
    "end": "825199"
  },
  {
    "text": "remember we're going to open the port",
    "start": "825199",
    "end": "830040"
  },
  {
    "text": "179 which at the start of this video we",
    "start": "830040",
    "end": "835320"
  },
  {
    "text": "take a look at it at in our btp",
    "start": "835320",
    "end": "838920"
  },
  {
    "text": "connection configuration and it was for",
    "start": "838920",
    "end": "842279"
  },
  {
    "text": "bgp all right so here I'm going to um",
    "start": "842279",
    "end": "847959"
  },
  {
    "text": "grab the security group that my um",
    "start": "847959",
    "end": "851839"
  },
  {
    "text": "cluster a is using I'm going to store",
    "start": "851839",
    "end": "855000"
  },
  {
    "text": "that ID into uh an environment variable",
    "start": "855000",
    "end": "860639"
  },
  {
    "text": "and then I'm going to",
    "start": "860639",
    "end": "863680"
  },
  {
    "text": "authorize that Security Group to uh be",
    "start": "863680",
    "end": "868000"
  },
  {
    "text": "able to communicate on Port",
    "start": "868000",
    "end": "871199"
  },
  {
    "text": "179 if cluster b or cluster B cider is",
    "start": "871199",
    "end": "876880"
  },
  {
    "text": "talking to it so the cider is for VPC on",
    "start": "876880",
    "end": "883399"
  },
  {
    "text": "the other",
    "start": "883399",
    "end": "886079"
  },
  {
    "text": "Zone and I'm going to do the same",
    "start": "886079",
    "end": "890079"
  },
  {
    "text": "thing for the other",
    "start": "890079",
    "end": "894839"
  },
  {
    "text": "cluster",
    "start": "897680",
    "end": "900680"
  },
  {
    "text": "and done so right now if we take another",
    "start": "901519",
    "end": "907480"
  },
  {
    "text": "look at",
    "start": "907480",
    "end": "909440"
  },
  {
    "text": "our um",
    "start": "909440",
    "end": "911240"
  },
  {
    "text": "bgp all the stuff are",
    "start": "911240",
    "end": "914600"
  },
  {
    "text": "established we can also use uh show",
    "start": "914600",
    "end": "918360"
  },
  {
    "text": "route to see which routes are being uh",
    "start": "918360",
    "end": "924480"
  },
  {
    "text": "propagated",
    "start": "924480",
    "end": "926000"
  },
  {
    "text": "so it's a good time for us to hit",
    "start": "926000",
    "end": "930759"
  },
  {
    "text": "another problem so let's see um first",
    "start": "930759",
    "end": "935240"
  },
  {
    "text": "I'm going to create an engine X workload",
    "start": "935240",
    "end": "939000"
  },
  {
    "text": "on my cluster a and I'm going to use um",
    "start": "939000",
    "end": "943800"
  },
  {
    "text": "service for it uh a node Port",
    "start": "943800",
    "end": "947920"
  },
  {
    "text": "service",
    "start": "947920",
    "end": "949519"
  },
  {
    "text": "um",
    "start": "949519",
    "end": "951560"
  },
  {
    "text": "next I'm going to",
    "start": "951560",
    "end": "955759"
  },
  {
    "text": "use couple of commands to get the IP",
    "start": "955759",
    "end": "959399"
  },
  {
    "text": "address to these services and pots and",
    "start": "959399",
    "end": "964399"
  },
  {
    "text": "run a net shoot um pod to actually try",
    "start": "964399",
    "end": "970920"
  },
  {
    "text": "to access this",
    "start": "970920",
    "end": "974360"
  },
  {
    "text": "part all right so first of all let's do",
    "start": "974360",
    "end": "977920"
  },
  {
    "text": "a curl it's not happening and let's do a",
    "start": "977920",
    "end": "981880"
  },
  {
    "text": "curl",
    "start": "981880",
    "end": "984440"
  },
  {
    "text": "for um the service now both are not Happ",
    "start": "984440",
    "end": "988800"
  },
  {
    "text": "happening",
    "start": "988800",
    "end": "990959"
  },
  {
    "text": "well why if you look there is a route so",
    "start": "990959",
    "end": "996360"
  },
  {
    "text": "my pod knows where to",
    "start": "996360",
    "end": "999600"
  },
  {
    "text": "go but um what we need to know is at the",
    "start": "999600",
    "end": "1005000"
  },
  {
    "text": "moment every routing decision happens by",
    "start": "1005000",
    "end": "1009079"
  },
  {
    "text": "our default gateway which is Amazon now",
    "start": "1009079",
    "end": "1014600"
  },
  {
    "text": "Amazon uh doesn't know about the stuff",
    "start": "1014600",
    "end": "1019959"
  },
  {
    "text": "that I",
    "start": "1019959",
    "end": "1021800"
  },
  {
    "text": "have in my cluster so these IP addresses",
    "start": "1021800",
    "end": "1027760"
  },
  {
    "text": "um",
    "start": "1027760",
    "end": "1030079"
  },
  {
    "text": "1053 um 1053 21 these are not the IP",
    "start": "1031720",
    "end": "1037918"
  },
  {
    "text": "addresses that are uh inside Amazon",
    "start": "1037919",
    "end": "1042438"
  },
  {
    "text": "writing table now a neat trick that we",
    "start": "1042439",
    "end": "1046280"
  },
  {
    "text": "can do with Calico is is",
    "start": "1046280",
    "end": "1049520"
  },
  {
    "text": "to tell each cluster that what are the",
    "start": "1049520",
    "end": "1053960"
  },
  {
    "text": "IP addresses that are in the other",
    "start": "1053960",
    "end": "1058960"
  },
  {
    "text": "cluster and tell it to use",
    "start": "1058960",
    "end": "1064280"
  },
  {
    "text": "encapsulation if it wants to talk to",
    "start": "1064280",
    "end": "1067400"
  },
  {
    "text": "those IP addresses so in order to do",
    "start": "1067400",
    "end": "1070799"
  },
  {
    "text": "that I'm going to create two IP pools um",
    "start": "1070799",
    "end": "1076360"
  },
  {
    "text": "for each cluster and one is going to be",
    "start": "1076360",
    "end": "1080640"
  },
  {
    "text": "services that are in the other cluster",
    "start": "1080640",
    "end": "1084880"
  },
  {
    "text": "and the other one is going to be the",
    "start": "1084880",
    "end": "1087039"
  },
  {
    "text": "poid there now there are a couple of",
    "start": "1087039",
    "end": "1089799"
  },
  {
    "text": "things that are very important one is",
    "start": "1089799",
    "end": "1093200"
  },
  {
    "text": "disabled now disabled means I don't want",
    "start": "1093200",
    "end": "1097559"
  },
  {
    "text": "uh Calico to give its local pods in",
    "start": "1097559",
    "end": "1102799"
  },
  {
    "text": "cluster",
    "start": "1102799",
    "end": "1104280"
  },
  {
    "text": "a any of these IPS so that's why it's",
    "start": "1104280",
    "end": "1108760"
  },
  {
    "text": "disabled I also want IP IP mode which is",
    "start": "1108760",
    "end": "1113640"
  },
  {
    "text": "the",
    "start": "1113640",
    "end": "1114480"
  },
  {
    "text": "encapsulation to be used whenever a",
    "start": "1114480",
    "end": "1119080"
  },
  {
    "text": "traffic that wants to go through that IP",
    "start": "1119080",
    "end": "1122039"
  },
  {
    "text": "address is crossing a subnet",
    "start": "1122039",
    "end": "1126280"
  },
  {
    "text": "boundary that means if um let's say",
    "start": "1126280",
    "end": "1131360"
  },
  {
    "text": "1052 uh 01 wants to talk to",
    "start": "1131360",
    "end": "1136679"
  },
  {
    "text": "10530 then then it will use",
    "start": "1137120",
    "end": "1139960"
  },
  {
    "text": "encapsulation because these two IPS are",
    "start": "1139960",
    "end": "1143280"
  },
  {
    "text": "in different broadcast",
    "start": "1143280",
    "end": "1145760"
  },
  {
    "text": "domains I'm going to go ahead and do the",
    "start": "1145760",
    "end": "1149679"
  },
  {
    "text": "same thing for the cluster B part of",
    "start": "1149679",
    "end": "1157440"
  },
  {
    "text": "the all right I'm going to do the same",
    "start": "1157520",
    "end": "1160720"
  },
  {
    "text": "for cluster B",
    "start": "1160720",
    "end": "1163480"
  },
  {
    "text": "here all right now that we got the DI",
    "start": "1163480",
    "end": "1166000"
  },
  {
    "text": "peoples in place um let's go ahead and",
    "start": "1166000",
    "end": "1169559"
  },
  {
    "text": "actually tell Amazon that we are using",
    "start": "1169559",
    "end": "1172960"
  },
  {
    "text": "IP pool so again I'm going to create",
    "start": "1172960",
    "end": "1176760"
  },
  {
    "text": "another security group that allows IP IP",
    "start": "1176760",
    "end": "1180840"
  },
  {
    "text": "traffic between these",
    "start": "1180840",
    "end": "1185120"
  },
  {
    "text": "vpcs and next um I'm going to tell",
    "start": "1185720",
    "end": "1190000"
  },
  {
    "text": "Calico that an external entity will send",
    "start": "1190000",
    "end": "1194919"
  },
  {
    "text": "ipip traffic to it so be prepare to",
    "start": "1194919",
    "end": "1199400"
  },
  {
    "text": "receive it and I'm going to do it on",
    "start": "1199400",
    "end": "1202760"
  },
  {
    "text": "both",
    "start": "1202760",
    "end": "1204840"
  },
  {
    "text": "clusters all right now that everything",
    "start": "1204840",
    "end": "1207480"
  },
  {
    "text": "is configured let's go ahead and run",
    "start": "1207480",
    "end": "1209760"
  },
  {
    "text": "some",
    "start": "1209760",
    "end": "1211600"
  },
  {
    "text": "tests so I",
    "start": "1211600",
    "end": "1214480"
  },
  {
    "text": "do",
    "start": "1214480",
    "end": "1216039"
  },
  {
    "text": "need the IP addresses for the engine",
    "start": "1216039",
    "end": "1221440"
  },
  {
    "text": "xod and I'm going to use my cluster B to",
    "start": "1221440",
    "end": "1226919"
  },
  {
    "text": "actually make a work load",
    "start": "1226919",
    "end": "1230880"
  },
  {
    "text": "and uh",
    "start": "1230880",
    "end": "1234200"
  },
  {
    "text": "Pearl this all right so at the",
    "start": "1234400",
    "end": "1238480"
  },
  {
    "text": "moment I'm in cluster B I'm on another",
    "start": "1238480",
    "end": "1243480"
  },
  {
    "text": "subnet and I can access the uh engine",
    "start": "1243480",
    "end": "1249960"
  },
  {
    "text": "xod",
    "start": "1250000",
    "end": "1251559"
  },
  {
    "text": "um let's try the engine",
    "start": "1251559",
    "end": "1256360"
  },
  {
    "text": "service now this is is not going to work",
    "start": "1256360",
    "end": "1260679"
  },
  {
    "text": "well",
    "start": "1260679",
    "end": "1263679"
  },
  {
    "text": "because um in",
    "start": "1263760",
    "end": "1268360"
  },
  {
    "text": "arenes",
    "start": "1268360",
    "end": "1270279"
  },
  {
    "text": "service uh has couple of um key points",
    "start": "1270279",
    "end": "1276240"
  },
  {
    "text": "or couple of configurations that we need",
    "start": "1276240",
    "end": "1279720"
  },
  {
    "text": "to be aware of one is external traffic",
    "start": "1279720",
    "end": "1284240"
  },
  {
    "text": "policy so by default um external traffic",
    "start": "1284240",
    "end": "1289960"
  },
  {
    "text": "policy is set to",
    "start": "1289960",
    "end": "1294440"
  },
  {
    "text": "Cluster um which is going to be",
    "start": "1294440",
    "end": "1297440"
  },
  {
    "text": "problematic for our",
    "start": "1297440",
    "end": "1300320"
  },
  {
    "text": "scenario and we need to change that to",
    "start": "1300320",
    "end": "1304120"
  },
  {
    "text": "local now if we",
    "start": "1304120",
    "end": "1309679"
  },
  {
    "text": "again go",
    "start": "1309679",
    "end": "1312919"
  },
  {
    "text": "ahead",
    "start": "1313799",
    "end": "1316799"
  },
  {
    "text": "and use the same IP",
    "start": "1317039",
    "end": "1322879"
  },
  {
    "text": "address it should give",
    "start": "1326720",
    "end": "1330840"
  },
  {
    "text": "us some results and with that we have",
    "start": "1330840",
    "end": "1336400"
  },
  {
    "text": "communication between these two clusters",
    "start": "1336400",
    "end": "1339440"
  },
  {
    "text": "that was it um I hope you enjoyed the",
    "start": "1339440",
    "end": "1343039"
  },
  {
    "text": "session and thank you for",
    "start": "1343039",
    "end": "1346240"
  },
  {
    "text": "viewing",
    "start": "1346240",
    "end": "1349240"
  }
]