[
  {
    "text": "welcome everybody my name is Thomas Groff I'm CTO and co-founder of ice surveillance I surveillance initially",
    "start": "0",
    "end": "7379"
  },
  {
    "text": "created cylind before we donated it to the cncf long time kernel developers I'm",
    "start": "7379",
    "end": "12660"
  },
  {
    "text": "coming from the lower levels and also currently chairing the evpf foundation and I'm Liz rice I'm Chief open source",
    "start": "12660",
    "end": "19380"
  },
  {
    "text": "officer at ISO valence um you may if you've been to kubecons in",
    "start": "19380",
    "end": "24900"
  },
  {
    "text": "the past a long long time ago I was a chair of keepcon and I used to be chair",
    "start": "24900",
    "end": "30359"
  },
  {
    "text": "of the technical oversight committee which gave me this amazing privilege of seeing a lot across the whole Cloud",
    "start": "30359",
    "end": "37079"
  },
  {
    "text": "native landscape and when I chose to come and work with ISO villain the capabilities of psyllium and ebpf had",
    "start": "37079",
    "end": "44579"
  },
  {
    "text": "really kind of stuck out to me so I'm very excited to be working in this technology",
    "start": "44579",
    "end": "50219"
  },
  {
    "text": "so we're going to talk a little bit about how many proxies you need to run a service mesh I think in this room we",
    "start": "50219",
    "end": "57600"
  },
  {
    "text": "don't really need to tell you what the service mesh is there for and we probably don't need to tell you the",
    "start": "57600",
    "end": "63120"
  },
  {
    "text": "history of how service mesh allows us to abstract functionality that is common",
    "start": "63120",
    "end": "69900"
  },
  {
    "text": "across multiple applications we no longer need to write that directly into an application or in a library we want",
    "start": "69900",
    "end": "77040"
  },
  {
    "text": "to abstract that out into sort of independent service mesh functionality that sits behind the application",
    "start": "77040",
    "end": "84060"
  },
  {
    "text": "or in front depending on your perspective and for a long time the model was to use",
    "start": "84060",
    "end": "90360"
  },
  {
    "text": "sidecars so you would have a proxy running in a sidecar container",
    "start": "90360",
    "end": "95640"
  },
  {
    "text": "outside of the application providing all these networking and resiliency and",
    "start": "95640",
    "end": "100920"
  },
  {
    "text": "security and observability capabilities that we want to get from a service mesh",
    "start": "100920",
    "end": "108299"
  },
  {
    "text": "but sidecars come with downsides",
    "start": "108299",
    "end": "114119"
  },
  {
    "text": "they're complex to operate they're complex to inject they have additional",
    "start": "114119",
    "end": "119939"
  },
  {
    "text": "resource needs we'll dive into this in a little bit more detail in a moment and",
    "start": "119939",
    "end": "125460"
  },
  {
    "text": "they also require Network packets to take a much more convoluted path through",
    "start": "125460",
    "end": "131580"
  },
  {
    "text": "the stack we when we run in containers our containers typically have their own",
    "start": "131580",
    "end": "137940"
  },
  {
    "text": "network namespace and we have to run a network stack inside the container or",
    "start": "137940",
    "end": "144180"
  },
  {
    "text": "inside the Pod rather and another Network on the host and if we have the proxy running inside",
    "start": "144180",
    "end": "150840"
  },
  {
    "text": "the network namespace for the Pod we've got to kind of connect through that",
    "start": "150840",
    "end": "156060"
  },
  {
    "text": "Network stack twice before we even get as far as the host Network so there's a lot of",
    "start": "156060",
    "end": "163980"
  },
  {
    "text": "path a lot of processing for packets to go through before they've even left the",
    "start": "163980",
    "end": "169319"
  },
  {
    "text": "pod people have also found configuring sidecars pretty complex and I I love",
    "start": "169319",
    "end": "178379"
  },
  {
    "text": "this quote I mean it's it's a couple of years old now three years old now from Kelsey but uh you know complexity",
    "start": "178379",
    "end": "184560"
  },
  {
    "text": "is a real issue with service mesh so",
    "start": "184560",
    "end": "190860"
  },
  {
    "text": "when I joined i7 I remember Thomas telling me that selling was already kind of 80 percent service mesh we were",
    "start": "190860",
    "end": "197819"
  },
  {
    "text": "already providing a lot of the functionality that we expect from a service mesh in psyllium",
    "start": "197819",
    "end": "204900"
  },
  {
    "text": "that is traditionally known as a cni so could we use this as a basis to remove",
    "start": "204900",
    "end": "212959"
  },
  {
    "text": "sidecars and provide a sidecar free service mesh",
    "start": "212959",
    "end": "218519"
  },
  {
    "text": "and long story short we did round this time last year just about a year ago we",
    "start": "218519",
    "end": "224340"
  },
  {
    "text": "announced the psyllium service mesh beta does anybody hear did anybody here try the service smash beta we have a couple",
    "start": "224340",
    "end": "232200"
  },
  {
    "text": "of hands up great excellent um this was a very kind of common comment",
    "start": "232200",
    "end": "239099"
  },
  {
    "text": "that we got from people who signed up for for that beta that they really liked Envoy but they'd found",
    "start": "239099",
    "end": "246080"
  },
  {
    "text": "the overhead the resource usage the complexity of configuring sidecars the",
    "start": "246080",
    "end": "253019"
  },
  {
    "text": "complexity of getting making sure that all their apps were instrumented the additional Network overhead the",
    "start": "253019",
    "end": "259320"
  },
  {
    "text": "latency involved all these things were just putting people off from using",
    "start": "259320",
    "end": "265500"
  },
  {
    "text": "service meshes and so they were excited at the idea of psyllium providing a",
    "start": "265500",
    "end": "271259"
  },
  {
    "text": "service mesh that didn't require sidecars but I think something that that got a",
    "start": "271259",
    "end": "277440"
  },
  {
    "text": "little bit lost when we announced that was that we weren't saying we were completely removing proxies there's still some proxy in there somewhere as",
    "start": "277440",
    "end": "285479"
  },
  {
    "text": "we'll see and now of course we're not the only people talking about sidecar free",
    "start": "285479",
    "end": "291780"
  },
  {
    "text": "service meshes istio now also support a sidecar free model and you know this I",
    "start": "291780",
    "end": "298860"
  },
  {
    "text": "think a lot of thought that actually getting getting away from the sidecar model can give us",
    "start": "298860",
    "end": "305160"
  },
  {
    "text": "a much simpler more beautiful implementation",
    "start": "305160",
    "end": "311699"
  },
  {
    "text": "there's a really great podcast about that ambient mesh the kubernetes podcast",
    "start": "313979",
    "end": "319699"
  },
  {
    "text": "totally recommend if you are interested in ambient mesh taking a listen to that because it's",
    "start": "319699",
    "end": "325800"
  },
  {
    "text": "really really interesting to hear how those Engineers Ethan and Justin",
    "start": "325800",
    "end": "330960"
  },
  {
    "text": "thought about that model and one one of the the quotes from that",
    "start": "330960",
    "end": "336840"
  },
  {
    "text": "was you know that they'd thought for a long time that sidecars were inefficient and that users have a tendency to",
    "start": "336840",
    "end": "343919"
  },
  {
    "text": "allocate resources for the worst case so you can end up in this worst case",
    "start": "343919",
    "end": "350100"
  },
  {
    "text": "scenario of resource allocation",
    "start": "350100",
    "end": "354440"
  },
  {
    "text": "when we moved to uh the cilient model one of the advantages we have is ebpf",
    "start": "355320",
    "end": "362340"
  },
  {
    "text": "where we can push lots of functionality into the kernel we can share resources",
    "start": "362340",
    "end": "369180"
  },
  {
    "text": "when we're using ebpf much more easily partly because we're",
    "start": "369180",
    "end": "375960"
  },
  {
    "text": "not constrained by this idea of having isolated pods when you have a sidecar in a pod by design that sidecar is isolated",
    "start": "375960",
    "end": "383340"
  },
  {
    "text": "from all the other side cars it's in a pod deliberately isolated from everything else",
    "start": "383340",
    "end": "389759"
  },
  {
    "text": "when we push as much as we can of the service mesh functionality into the kernel it is shared and that can be a really",
    "start": "389759",
    "end": "397440"
  },
  {
    "text": "good thing the kernel is there to be shared amongst all the applications that run on it",
    "start": "397440",
    "end": "404900"
  },
  {
    "text": "I talked a bit about the convoluted network path that packets take through",
    "start": "404940",
    "end": "410479"
  },
  {
    "text": "uh through a sidecar and when we moved to a",
    "start": "410479",
    "end": "417240"
  },
  {
    "text": "sidecar free model that shortens the path even through a proxy where that proxy is",
    "start": "417240",
    "end": "423840"
  },
  {
    "text": "sitting on a node somewhere so",
    "start": "423840",
    "end": "429539"
  },
  {
    "text": "the ability to remove sidecars solves a lot of problems but",
    "start": "429539",
    "end": "435360"
  },
  {
    "text": "Thomas where should the site where should the proxy live and uh given my intro maybe you already",
    "start": "435360",
    "end": "442500"
  },
  {
    "text": "have a slight hint given I've been doing kernel development for majority of my career I think",
    "start": "442500",
    "end": "451199"
  },
  {
    "text": "proxy functionality service mesh functionality should be as transparent as invisible as possible and the kernel",
    "start": "451199",
    "end": "457020"
  },
  {
    "text": "is actually a great place for this but this this does not mean that then the coronals need to solve all aspects",
    "start": "457020",
    "end": "464520"
  },
  {
    "text": "Colonel has always been delegating functionality from kernel space user space and we'll see a couple of examples",
    "start": "464520",
    "end": "470520"
  },
  {
    "text": "in the case of Salem services in general there are aspects that are not great",
    "start": "470520",
    "end": "477419"
  },
  {
    "text": "matches to be solved in the kernel such as TLS termination HTTP authorization or complex HTTP",
    "start": "477419",
    "end": "485460"
  },
  {
    "text": "parsing and of course identity management TLS control handshakes and so on we'll get into the into the details",
    "start": "485460",
    "end": "491880"
  },
  {
    "text": "here this means that sodium service mesh has this advantage that we can be ebpf",
    "start": "491880",
    "end": "497520"
  },
  {
    "text": "native when possible and benefit from the performance gains of evpf and then fall back to an Envoy",
    "start": "497520",
    "end": "504599"
  },
  {
    "text": "proxy when ebpf is not the ideal instrument to implement other examples I mentioned that this is",
    "start": "504599",
    "end": "511199"
  },
  {
    "text": "actually have been been the case for for kernel development for ages the kernel is always delegated some functionality",
    "start": "511199",
    "end": "517860"
  },
  {
    "text": "to user space very good example is IDs sorry color running in user space and",
    "start": "517860",
    "end": "523979"
  },
  {
    "text": "doing deep packet inspection using iptables nfq to to punch packets user",
    "start": "523979",
    "end": "529080"
  },
  {
    "text": "space or even just kernel module loading when your laptop loads the Wi-Fi driver it actually the kernel module is getting",
    "start": "529080",
    "end": "536100"
  },
  {
    "text": "loaded through a so-called user space mode helper so let's look at what functionality can",
    "start": "536100",
    "end": "542880"
  },
  {
    "text": "be done in ebpf Native and where do we still need a proxy and then we'll talk about the number of proxies afterward so",
    "start": "542880",
    "end": "549779"
  },
  {
    "text": "there's a lot of functionality that's already possible ebpf native without any",
    "start": "549779",
    "end": "555360"
  },
  {
    "text": "proxy at all purely in kernel space of course any sort of l3l4 forwarding right",
    "start": "555360",
    "end": "563160"
  },
  {
    "text": "any sort of lcl4 load balancing but also Canary rollouts topology of our routing",
    "start": "563160",
    "end": "570019"
  },
  {
    "text": "multi-cluster routing now or policy on layer 3 layer 4 and we'll talk about the",
    "start": "570019",
    "end": "576000"
  },
  {
    "text": "details here mtls as well as a variety of observability functions HTTP TLS or",
    "start": "576000",
    "end": "582839"
  },
  {
    "text": "tracing tcpt DNS TCP UDP or observability and so on when do we still",
    "start": "582839",
    "end": "589380"
  },
  {
    "text": "need a proxy or for use cases such as layer 7 load balancing for example path based load balancing header based load",
    "start": "589380",
    "end": "596100"
  },
  {
    "text": "balancing retries layer 7 rate limiting as well as TLS termination and",
    "start": "596100",
    "end": "601800"
  },
  {
    "text": "origination currently still in the proxy land is now is layer 7 or policy",
    "start": "601800",
    "end": "608459"
  },
  {
    "text": "this is roadmap to be ebpf native but currently not implemented yet so this is the current split which means that we",
    "start": "608459",
    "end": "615180"
  },
  {
    "text": "can benefit from the ebpf performance and simplicity whenever possible and if",
    "start": "615180",
    "end": "620220"
  },
  {
    "text": "we cannot do it in ebpf we essentially fall back to a proxy model",
    "start": "620220",
    "end": "625579"
  },
  {
    "text": "so what do these different possible models of where we put the proxy what what do",
    "start": "626519",
    "end": "632760"
  },
  {
    "text": "they mean in terms of pros and cons because ever since we first discussed having",
    "start": "632760",
    "end": "638459"
  },
  {
    "text": "sidecarless service mesh people have been debating the pros and cons of where",
    "start": "638459",
    "end": "644220"
  },
  {
    "text": "that proxy lives so um",
    "start": "644220",
    "end": "649440"
  },
  {
    "text": "if we think back to the sort of original sidecar model we had potentially a what could be seen as a",
    "start": "649440",
    "end": "656459"
  },
  {
    "text": "security advantage that the proxy shared all the same isolation that the application pod did so it naturally has",
    "start": "656459",
    "end": "664260"
  },
  {
    "text": "access to the applications Secrets it's isolated in the same way as the",
    "start": "664260",
    "end": "669480"
  },
  {
    "text": "application is so from a security model perspective you don't need to think about it anymore because it's the same",
    "start": "669480",
    "end": "676140"
  },
  {
    "text": "as the application and psyllium has supported this model",
    "start": "676140",
    "end": "681899"
  },
  {
    "text": "for sidecars for service mesh for a long time now it's it has been possible and",
    "start": "681899",
    "end": "687660"
  },
  {
    "text": "people are running istio on top of psyllium as the networking layer",
    "start": "687660",
    "end": "692880"
  },
  {
    "text": "that you know that's a completely supported model but if we want to move away from that we",
    "start": "692880",
    "end": "699480"
  },
  {
    "text": "want to not have a proxy for every one of our application pods if we put the",
    "start": "699480",
    "end": "705360"
  },
  {
    "text": "proxy on the Node what does that mean well it means",
    "start": "705360",
    "end": "710880"
  },
  {
    "text": "on the one hand we have it's co-located on the same node so our network path can",
    "start": "710880",
    "end": "717180"
  },
  {
    "text": "be pretty efficient but it does mean that if we have multiple tenants that are not on the",
    "start": "717180",
    "end": "722399"
  },
  {
    "text": "same node they can't all share that same proxy you don't need to have additional",
    "start": "722399",
    "end": "729120"
  },
  {
    "text": "proxies Elsewhere on the network and you can you can have this very um you have a",
    "start": "729120",
    "end": "735540"
  },
  {
    "text": "proxy right next to you which I think is a good thing this is the kind of default",
    "start": "735540",
    "end": "741720"
  },
  {
    "text": "model for psyllium service mesh today where we would have one proxy per node",
    "start": "741720",
    "end": "748800"
  },
  {
    "text": "but we are working on the idea of having multi-tenancy by having multiple",
    "start": "748800",
    "end": "755279"
  },
  {
    "text": "proxies running on the Node so that can give that isolation that people are",
    "start": "755279",
    "end": "761519"
  },
  {
    "text": "potentially looking for another model that we're seeing now is",
    "start": "761519",
    "end": "767700"
  },
  {
    "text": "this idea of having the proxy not necessarily co-located on the same node but somewhere in the network and that",
    "start": "767700",
    "end": "775800"
  },
  {
    "text": "pretty much guarantees that there will be some extra Network hops but it does mean you can share that one proxy",
    "start": "775800",
    "end": "782399"
  },
  {
    "text": "amongst multiple instances that are in the same service",
    "start": "782399",
    "end": "789540"
  },
  {
    "text": "and this is you know I would say a relatively new idea it's something that we're interested in and we'd like to",
    "start": "790200",
    "end": "796079"
  },
  {
    "text": "understand whether psyllium users would like to see this",
    "start": "796079",
    "end": "801720"
  },
  {
    "text": "model because it would certainly be possible to implement that Z tunnel approach in the psyllium layer",
    "start": "801720",
    "end": "810680"
  },
  {
    "text": "but I think most importantly there isn't a single solution for you know you must",
    "start": "811139",
    "end": "816660"
  },
  {
    "text": "have proxies this number this ratio of proxies to applications or this particular location of proxy relative to",
    "start": "816660",
    "end": "824519"
  },
  {
    "text": "your applications for some required for some deployments for",
    "start": "824519",
    "end": "829980"
  },
  {
    "text": "performance reasons you will choose to have a proxy on every node",
    "start": "829980",
    "end": "835680"
  },
  {
    "text": "that will almost certainly give the highest performance and probably reduce complexity in other environments you may",
    "start": "835680",
    "end": "842820"
  },
  {
    "text": "choose to uh emphasize more multi-tenant isolation in that case",
    "start": "842820",
    "end": "850500"
  },
  {
    "text": "you may want to have more proxies perhaps as much as one proxy per application so it does depend somewhat",
    "start": "850500",
    "end": "857100"
  },
  {
    "text": "on your risk model and there is no single answer",
    "start": "857100",
    "end": "863639"
  },
  {
    "text": "what about encryption what about encryption so we talked about number of proxies and we figured it's actually",
    "start": "863639",
    "end": "870420"
  },
  {
    "text": "interesting to look at the most common use cases of why you want to use or why you use a service",
    "start": "870420",
    "end": "877019"
  },
  {
    "text": "mesh and encryption and observability are probably among the top asks that you have so let's look at encryption first",
    "start": "877019",
    "end": "884279"
  },
  {
    "text": "of all if we look at encryption there is two broad models to achieve encryption",
    "start": "884279",
    "end": "890699"
  },
  {
    "text": "we can achieve it at the network level using functionality such as ipsec or",
    "start": "890699",
    "end": "896339"
  },
  {
    "text": "wireguards where we essentially encrypt into higher Network nodes to nodes",
    "start": "896339",
    "end": "902279"
  },
  {
    "text": "Um this can be fine for many use cases and has been the status quo and not working for a long while",
    "start": "902279",
    "end": "907620"
  },
  {
    "text": "but it does rely or it just it does require that you trust your node so if",
    "start": "907620",
    "end": "912959"
  },
  {
    "text": "the node gets compromised the key on that now gets compromised and then the",
    "start": "912959",
    "end": "918060"
  },
  {
    "text": "network encryption gets compromised until the key gets rotated so it uses node identity that can be that can be",
    "start": "918060",
    "end": "925560"
  },
  {
    "text": "great if that is your security assumption what if we want deeper",
    "start": "925560",
    "end": "930899"
  },
  {
    "text": "security better security and actually take it one level uh further obviously mtls comes into play",
    "start": "930899",
    "end": "937980"
  },
  {
    "text": "the downside of mtls as implemented with sidecars is that first of all it is",
    "start": "937980",
    "end": "943920"
  },
  {
    "text": "shared with the layer 7 proxy which means that if the layer 7 proxy gets compromised all certificates and secrets",
    "start": "943920",
    "end": "950880"
  },
  {
    "text": "in that proxy get compromised as well and the second big downside of using side calls for mtls it is that it's",
    "start": "950880",
    "end": "957420"
  },
  {
    "text": "pretty much limited to TCP and in particular Enterprise use cases will require multicast UDP scdp and a",
    "start": "957420",
    "end": "964740"
  },
  {
    "text": "variety of other protocols that need to be supported so we looked at this and and and asked ourselves can we support",
    "start": "964740",
    "end": "970980"
  },
  {
    "text": "an mtls model a mutual authentication model while benefiting from the network",
    "start": "970980",
    "end": "977699"
  },
  {
    "text": "level to support any network protocol and this is what we came up with",
    "start": "977699",
    "end": "983940"
  },
  {
    "text": "um for all the details on how exactly this works I've linked the blog post that goes into the details we'll also",
    "start": "983940",
    "end": "989459"
  },
  {
    "text": "see the pull request with the initial work later on essentially this splits",
    "start": "989459",
    "end": "994560"
  },
  {
    "text": "the authentications piece from the payload from the data path and this",
    "start": "994560",
    "end": "1000139"
  },
  {
    "text": "means that the authentication happens through a regular mtls handshake where",
    "start": "1000139",
    "end": "1005480"
  },
  {
    "text": "we can integrate with spiffy serve manager and so on and to a regular Mutual authentication using certificates",
    "start": "1005480",
    "end": "1011600"
  },
  {
    "text": "that are per service and then instead of TR instead of carrying the actual payload and network",
    "start": "1011600",
    "end": "1018019"
  },
  {
    "text": "data the data in that mtls connection we carry that through the network directly while using the keys to secrets that",
    "start": "1018019",
    "end": "1025938"
  },
  {
    "text": "have been negotiated why the mtls handshake using ipsecond wireguard and",
    "start": "1025939",
    "end": "1032000"
  },
  {
    "text": "we kind of gain the benefits of both models where we get a strong Mutual authentication handshake with mtls while",
    "start": "1032000",
    "end": "1039319"
  },
  {
    "text": "we can support any network protocol without introducing any sort of proxies",
    "start": "1039319",
    "end": "1044418"
  },
  {
    "text": "so we can establish encryption and mutual authentication network-wide without requiring proxies",
    "start": "1044419",
    "end": "1051500"
  },
  {
    "text": "while supporting any protocol let's look at how this actually looks",
    "start": "1051500",
    "end": "1056539"
  },
  {
    "text": "like because let's say you're not using this and you're going you're you're you're going down this road and want to",
    "start": "1056539",
    "end": "1062000"
  },
  {
    "text": "use this we're integrating this into cylinder our policy which is an Integra which is an",
    "start": "1062000",
    "end": "1067039"
  },
  {
    "text": "extension of kubernetes network policy and all Southern users have to do essentially opt into this and say for",
    "start": "1067039",
    "end": "1074059"
  },
  {
    "text": "these connections let's say front-end talking to backend you need to authenticate and as as",
    "start": "1074059",
    "end": "1081100"
  },
  {
    "text": "soon as that intent has been defined authentication is required before the",
    "start": "1081100",
    "end": "1086960"
  },
  {
    "text": "connection can be established the actual Service uh specific",
    "start": "1086960",
    "end": "1093160"
  },
  {
    "text": "certificates or in this case provided by spiffy serve manager integration is also",
    "start": "1093160",
    "end": "1099500"
  },
  {
    "text": "on the roadmap but currently the pull request and the issue that I've listed here on the slide is essentially",
    "start": "1099500",
    "end": "1104600"
  },
  {
    "text": "enabling the spiff integration that allows not only to generate certificates",
    "start": "1104600",
    "end": "1110120"
  },
  {
    "text": "for each service and thus give or make X 509 certificates available to psyllium",
    "start": "1110120",
    "end": "1115940"
  },
  {
    "text": "it also allows us to actually tie Network policy to spiffy IDs which means",
    "start": "1115940",
    "end": "1121940"
  },
  {
    "text": "instead of selecting policy by via kubernetes labels we can actually use a",
    "start": "1121940",
    "end": "1127039"
  },
  {
    "text": "strong spiffy IDs so essentially we solve two problems and ideally because",
    "start": "1127039",
    "end": "1133460"
  },
  {
    "text": "psyllium already has a concept of identity it simply or easily maps to",
    "start": "1133460",
    "end": "1138679"
  },
  {
    "text": "spiffy IDs and spiffy Service keys what about observabilityless well",
    "start": "1138679",
    "end": "1145760"
  },
  {
    "text": "observability is a pretty hot topic for us this week um I want to actually give a shout out to Adam who gave a talk earlier about",
    "start": "1145760",
    "end": "1153200"
  },
  {
    "text": "how you can use ebpf to kind of gather metrics in a very efficient way because",
    "start": "1153200",
    "end": "1158480"
  },
  {
    "text": "basically that sort of shows the sort of underpinnings of what we what we do here",
    "start": "1158480",
    "end": "1163820"
  },
  {
    "text": "and how we're Gathering some really good metrics and then making them available",
    "start": "1163820",
    "end": "1169100"
  },
  {
    "text": "so how am I going to do this okay my",
    "start": "1169100",
    "end": "1174679"
  },
  {
    "text": "actually no I'm going to show one more slide before I do that we this week we're um doing a lot of work with the",
    "start": "1174679",
    "end": "1181400"
  },
  {
    "text": "team at grafana to show off some really nice Integrations between grafana and psyllium I'm just going to show you kind",
    "start": "1181400",
    "end": "1188120"
  },
  {
    "text": "of the tip of the iceberg here I think with this this demo today but uh there's there's some really nice Integrations",
    "start": "1188120",
    "end": "1194900"
  },
  {
    "text": "here so demo time so I have a an open Telemetry demo app",
    "start": "1194900",
    "end": "1201919"
  },
  {
    "text": "I'm going to guess that some people here will be familiar with the app it looks like this I'm going",
    "start": "1201919",
    "end": "1208340"
  },
  {
    "text": "just refresh it just so I've started getting some Network traffic and it's sitting behind an Ingress which",
    "start": "1208340",
    "end": "1217460"
  },
  {
    "text": "is a psyllium it's a kubernetes Ingress with of",
    "start": "1217460",
    "end": "1222500"
  },
  {
    "text": "psyllium type and as a result of that Ingress being created we should have actually let me",
    "start": "1222500",
    "end": "1230299"
  },
  {
    "text": "see if I can find you know I'll show this first",
    "start": "1230299",
    "end": "1235480"
  },
  {
    "text": "this Ingress causes a psyllium Envoy configuration to be created",
    "start": "1235480",
    "end": "1241880"
  },
  {
    "text": "which is that one and hopefully I'm trying to do this with one finger that's",
    "start": "1241880",
    "end": "1246919"
  },
  {
    "text": "why I'm so that Envoy configuration was",
    "start": "1246919",
    "end": "1253400"
  },
  {
    "text": "automatically created from uh the Ingress configuration and what I'm",
    "start": "1253400",
    "end": "1258740"
  },
  {
    "text": "looking for is the bit that says here we go it's",
    "start": "1258740",
    "end": "1264559"
  },
  {
    "text": "basically going to send all traffic from you know slash anything to the demo",
    "start": "1264559",
    "end": "1272660"
  },
  {
    "text": "front end so this is a very very simple uh demo but we are going through an",
    "start": "1272660",
    "end": "1278299"
  },
  {
    "text": "Ingress layer 7 routing here so let's just do a little bit of um",
    "start": "1278299",
    "end": "1286700"
  },
  {
    "text": "telescope shopping to generate a bit of traffic um",
    "start": "1286700",
    "end": "1292460"
  },
  {
    "text": "we can buy these I've bought a lot of telescopes today it's quite quite good",
    "start": "1292460",
    "end": "1299059"
  },
  {
    "text": "come on let's place order I don't know why that didn't doesn't",
    "start": "1299059",
    "end": "1304940"
  },
  {
    "text": "really matter I'm just trying to generate some traffic and when I generate some traffic",
    "start": "1304940",
    "end": "1311419"
  },
  {
    "text": "you can see here at the right hand side those are my requests my most recent requests and here is me just checking",
    "start": "1311419",
    "end": "1316640"
  },
  {
    "text": "that the demo Works a few minutes ago and we get this really nice layer seven",
    "start": "1316640",
    "end": "1322720"
  },
  {
    "text": "metrics generated by psyllium through ebpf a lot of these",
    "start": "1322720",
    "end": "1328340"
  },
  {
    "text": "these metrics are being gathered by using ebpf and they're generated in Prometheus",
    "start": "1328340",
    "end": "1335659"
  },
  {
    "text": "formats so they're very easy to pull into grafana dashboards like this getting",
    "start": "1335659",
    "end": "1341480"
  },
  {
    "text": "things like the duration the the latency rather very nicely graphed out we also get a",
    "start": "1341480",
    "end": "1350179"
  },
  {
    "text": "service map now if you're familiar with psyllium and Hubble you will probably have seen the Hubble service map this",
    "start": "1350179",
    "end": "1357140"
  },
  {
    "text": "this is something that you know we've had in Hubble for a while and you can see individual Network flows as well as",
    "start": "1357140",
    "end": "1363980"
  },
  {
    "text": "the way those flows go to build up an overall service map",
    "start": "1363980",
    "end": "1369200"
  },
  {
    "text": "but we can now also see that service map inside the grafana dashboard I hope",
    "start": "1369200",
    "end": "1377120"
  },
  {
    "text": "there we go yeah so we have this really nice ability to",
    "start": "1377120",
    "end": "1384080"
  },
  {
    "text": "gather metrics as Adam was talking about earlier it's very efficient and",
    "start": "1384080",
    "end": "1389919"
  },
  {
    "text": "Incredibly useful debugging and observability tooling available through this",
    "start": "1389919",
    "end": "1397000"
  },
  {
    "text": "I'll leave it to you to explain the rest yes I think we've seen nice demo obviously this also works for just pure",
    "start": "1398659",
    "end": "1405679"
  },
  {
    "text": "Network observability on the lower levels we've seen the layer 7 obviously a 3D layer for all of this comes",
    "start": "1405679",
    "end": "1411320"
  },
  {
    "text": "integrated into um kind of one set of dashboards very nice that Hubble UI can now directly",
    "start": "1411320",
    "end": "1417740"
  },
  {
    "text": "embed grafana dashboards we can also do tracings or is an example of a integration of spans displayed in",
    "start": "1417740",
    "end": "1427280"
  },
  {
    "text": "grafana Tempo generated by by Hubble as well as the golden single dashboard that we've just seen",
    "start": "1427280",
    "end": "1435279"
  },
  {
    "text": "the last point I think we've looked at observability we looked at encryption mtls Observer and the last part is kind",
    "start": "1435500",
    "end": "1442460"
  },
  {
    "text": "of traffic management so how is it possible to Define and use traffic Management in solemn service mesh and we",
    "start": "1442460",
    "end": "1450020"
  },
  {
    "text": "want to quickly show like what is the state of the individual configuration options that you have Ingress Gateway",
    "start": "1450020",
    "end": "1455480"
  },
  {
    "text": "API and kubernetes services as well as the envoy config the rest of the stack I think is",
    "start": "1455480",
    "end": "1461720"
  },
  {
    "text": "hopefully pretty obvious obviously kubernetes is the control plane itself you don't really need anything beyond that",
    "start": "1461720",
    "end": "1467080"
  },
  {
    "text": "kubernetes Secrets is the current identity management integration we have and on the roadmap is spiffy and serve",
    "start": "1467080",
    "end": "1473120"
  },
  {
    "text": "manager and then the data plane ebpf and on y so let's look at these individual",
    "start": "1473120",
    "end": "1478880"
  },
  {
    "text": "layer 7 traffic management options Ingress Services Gateway API and Envoy",
    "start": "1478880",
    "end": "1484400"
  },
  {
    "text": "config Ingress and Envoy config are already fully supported in 112.",
    "start": "1484400",
    "end": "1489740"
  },
  {
    "text": "um services with annotations and Gateway API are coming in 113. the code is actually complete it's just not merged",
    "start": "1489740",
    "end": "1496400"
  },
  {
    "text": "but it's available in Dev branches for testing if you are interested I've linked the pull request with the branch",
    "start": "1496400",
    "end": "1502220"
  },
  {
    "text": "or links in there Ingress very simple it's simply fully",
    "start": "1502220",
    "end": "1507559"
  },
  {
    "text": "conformant so it's a basic example of path based or path prefix based routing",
    "start": "1507559",
    "end": "1512659"
  },
  {
    "text": "using Ingress and that's what you saw in the previous that's what we saw in the demo exactly",
    "start": "1512659",
    "end": "1518059"
  },
  {
    "text": "service annotations like some of our users said well that's great Ingress is great but we really want to have this",
    "start": "1518059",
    "end": "1523760"
  },
  {
    "text": "most simplest use case possible for layer 7 load balancing so we simply",
    "start": "1523760",
    "end": "1528980"
  },
  {
    "text": "added a bunch of annotations as a kubernetes services to enable least weighted least rated least request grpc",
    "start": "1528980",
    "end": "1537080"
  },
  {
    "text": "load balancing where all you have to do is annotate your kubernetes services with these two annotations and you get",
    "start": "1537080",
    "end": "1542720"
  },
  {
    "text": "transparent grpc load balancing very very simple and it gets better because psyllium has multi-cluster capabilities",
    "start": "1542720",
    "end": "1549500"
  },
  {
    "text": "built in add the natural another annotation to Mark these Services Global and we'll",
    "start": "1549500",
    "end": "1555679"
  },
  {
    "text": "allow this service load balancing Works across clusters now so this is the simple the simplest option right okay",
    "start": "1555679",
    "end": "1562340"
  },
  {
    "text": "Ingress uh services with annotations and now Gateway API right initially or",
    "start": "1562340",
    "end": "1568400"
  },
  {
    "text": "originally called Ingress V2 probably the way forward for most of you how to define traffic Management in the future",
    "start": "1568400",
    "end": "1574960"
  },
  {
    "text": "we have the code complete to support the latest Gateway API spec this is a",
    "start": "1574960",
    "end": "1580820"
  },
  {
    "text": "typical example using the Gateway and HTTP route resource also using path path",
    "start": "1580820",
    "end": "1588140"
  },
  {
    "text": "prefix and then the last option and this is really kind of a low level building block but it's also available to you as",
    "start": "1588140",
    "end": "1594559"
  },
  {
    "text": "users you can actually Define and configure raw Envoy configuration in a",
    "start": "1594559",
    "end": "1600020"
  },
  {
    "text": "custom resource this is how the Ingress controller and the Gateway implementation actually map or use uh",
    "start": "1600020",
    "end": "1607820"
  },
  {
    "text": "sodium service mesh so they essentially translate into slim service mesh but if you want to use this lower level API",
    "start": "1607820",
    "end": "1613820"
  },
  {
    "text": "you're absolutely free to do so this way you can essentially use the full Envoy feature set in your own service mesh",
    "start": "1613820",
    "end": "1620600"
  },
  {
    "text": "definitely as you can even see in the example definitely a lot harder to use and but with a lot more capabilities",
    "start": "1620600",
    "end": "1628279"
  },
  {
    "text": "and that is it from our side I think we have a couple of minutes four questions",
    "start": "1628279",
    "end": "1634840"
  },
  {
    "text": "[Applause] thank you thank you",
    "start": "1635250",
    "end": "1640658"
  },
  {
    "text": "we need to replace Okay so",
    "start": "1644720",
    "end": "1648580"
  },
  {
    "text": "for uh for mtls you mentioned that the there was an initial handshake that was uh mtls and then the data was pushed",
    "start": "1654380",
    "end": "1661159"
  },
  {
    "text": "somewhere separately so that mean that data is encrypted and confidential just correct so mtls is used for the",
    "start": "1661159",
    "end": "1667159"
  },
  {
    "text": "handshake the emptylus handshake generates the secrets the keys and they",
    "start": "1667159",
    "end": "1672500"
  },
  {
    "text": "are handed down to wireguard and ipsec where the symmetric encryption happens in the kernel so hmac and encryption is",
    "start": "1672500",
    "end": "1677779"
  },
  {
    "text": "happening in the kernel but the authentication hand authentication handshake is done in user space using",
    "start": "1677779",
    "end": "1683120"
  },
  {
    "text": "mtls",
    "start": "1683120",
    "end": "1685658"
  },
  {
    "text": "when you use Mutual test do you use that also for exchanging the certificates for",
    "start": "1688940",
    "end": "1694700"
  },
  {
    "text": "the workload and when you use both materials and work out how do you avoid the double encryption",
    "start": "1694700",
    "end": "1701360"
  },
  {
    "text": "because by default Mutual has an encryption right so hopefully I got the question right so",
    "start": "1701360",
    "end": "1706400"
  },
  {
    "text": "we are using um in this in the example shown either kubernetes Secrets or certificates created by spiffy so that those are",
    "start": "1706400",
    "end": "1713900"
  },
  {
    "text": "service specific certificates for the mtls model and in our mtls model the",
    "start": "1713900",
    "end": "1719900"
  },
  {
    "text": "data gets encrypted using ipsecond wireguard so it's there's no additional TLS based encryption there is no double",
    "start": "1719900",
    "end": "1726320"
  },
  {
    "text": "double encryption hopefully I got your question correct otherwise please clarify",
    "start": "1726320",
    "end": "1732080"
  },
  {
    "text": "here I can follow later any other questions",
    "start": "1732080",
    "end": "1739240"
  },
  {
    "text": "I didn't catch on that slide where you showed the service with the annotations was that a service of type load balancer",
    "start": "1748400",
    "end": "1754400"
  },
  {
    "text": "no it is a cluster it's a cluster IP service okay yes um but it would actually also work with",
    "start": "1754400",
    "end": "1760760"
  },
  {
    "text": "of type local answer so psyllium also implements type loopalancer and then the cluster IP portion just comes after it",
    "start": "1760760",
    "end": "1767120"
  },
  {
    "text": "so it also works for node port and load balancer how do you get your Envoy",
    "start": "1767120",
    "end": "1772159"
  },
  {
    "text": "between the load balancer and where it's going we use ebpf to inject Envoy into",
    "start": "1772159",
    "end": "1778039"
  },
  {
    "text": "this picture like cool",
    "start": "1778039",
    "end": "1781539"
  },
  {
    "text": "thank you I see another question I got you I got you I got you no worries",
    "start": "1783740",
    "end": "1790039"
  },
  {
    "text": "it's my my responsibility you had to not get paid for this but you know I I take",
    "start": "1790039",
    "end": "1795200"
  },
  {
    "text": "my responsibility seriously thanks Thomas",
    "start": "1795200",
    "end": "1799120"
  },
  {
    "text": "you're locating the proxy and it was just a proxy on the network is that kind of just taking that simple load balancer",
    "start": "1803840",
    "end": "1811279"
  },
  {
    "text": "concept that we know from from yesteryear that was I guess a nod towards the our",
    "start": "1811279",
    "end": "1817820"
  },
  {
    "text": "understanding of how ambient mesh is doing proxies that they're not specifically located on any given node I",
    "start": "1817820",
    "end": "1823880"
  },
  {
    "text": "mean we've kind of shown it floating in space I think it would be on a node somewhere but the point was more",
    "start": "1823880",
    "end": "1830480"
  },
  {
    "text": "it's not specifically associated with the the node where an application is",
    "start": "1830480",
    "end": "1835760"
  },
  {
    "text": "running it could be in space oh yeah is it fair to say it can be like",
    "start": "1835760",
    "end": "1842480"
  },
  {
    "text": "a part of namespace or something like that kind of a little bit more abstracted yeah I mean I think for both",
    "start": "1842480",
    "end": "1848059"
  },
  {
    "text": "models where it's on the Node or on the network any granularity could work I think it's more just location versus I",
    "start": "1848059",
    "end": "1855140"
  },
  {
    "text": "think the benefit of the network model is that you can share that proxy for the same tenants that are not on the same",
    "start": "1855140",
    "end": "1862159"
  },
  {
    "text": "notes whereas if you're on that note you share it only with tenants on that same note that's the clear difference",
    "start": "1862159",
    "end": "1869419"
  },
  {
    "text": "and I think that's a great example of a trade-off where you might minimize Network hops in order",
    "start": "1869419",
    "end": "1875240"
  },
  {
    "text": "to but you may have to have multiple instances so I think from a selling service merge",
    "start": "1875240",
    "end": "1881720"
  },
  {
    "text": "perspective we're interested to support both models so if you want us to also support like the proxy on the network",
    "start": "1881720",
    "end": "1886880"
  },
  {
    "text": "model and support waypoints file a GitHub issue or just talk to us on slack and we're happy to add it like",
    "start": "1886880",
    "end": "1893299"
  },
  {
    "text": "it's actually very compatible with how we think about service mesh as well okay fantastic talk",
    "start": "1893299",
    "end": "1899240"
  },
  {
    "text": "um it with the like sidecar for every pod you kind of those individual Envoy",
    "start": "1899240",
    "end": "1905419"
  },
  {
    "text": "instances are only going to have their tunnels to whatever that application happens to be talking to right whereas",
    "start": "1905419",
    "end": "1910820"
  },
  {
    "text": "in you know the on the Node one this was I know this came up in the istio example as well it's like on the Node you've now",
    "start": "1910820",
    "end": "1916039"
  },
  {
    "text": "got like a single Envoy instance that's going to have to do all the wire guard or ipsec tunnels from every application",
    "start": "1916039",
    "end": "1922159"
  },
  {
    "text": "on that node to every application that that's talking to like are there any concerns around overloading an instance",
    "start": "1922159",
    "end": "1928880"
  },
  {
    "text": "like I don't know I presume there's been a lot of testing on this I'm kind of curious if you can talk about how that's worked for like larger clusters yes I",
    "start": "1928880",
    "end": "1935299"
  },
  {
    "text": "think the benefit is that uh on the proxy on the Node model to get a revive per second wire guard we don't need any",
    "start": "1935299",
    "end": "1941179"
  },
  {
    "text": "tunnels at all it's purely on the network level and that works for ten thousands of nodes so that that uses",
    "start": "1941179",
    "end": "1946820"
  },
  {
    "text": "this the standard silly Network layer encryption so we're not actually creating tunnels like peer-to-peer",
    "start": "1946820",
    "end": "1952820"
  },
  {
    "text": "tunnels at all and on that on that node well maybe maybe clarify your question",
    "start": "1952820",
    "end": "1958580"
  },
  {
    "text": "because I think I got it wrong based on your but we can also talk outside",
    "start": "1958580",
    "end": "1963460"
  },
  {
    "text": "you know well I think we have a time for one more question and I think I have",
    "start": "1965659",
    "end": "1971120"
  },
  {
    "text": "working for one last question I think it was a great talk I was",
    "start": "1971120",
    "end": "1976760"
  },
  {
    "text": "wondering um for requests that need to go through that Envoy proxy",
    "start": "1976760",
    "end": "1982399"
  },
  {
    "text": "um how do you scale that proxy as the requests increase what mechanism do you",
    "start": "1982399",
    "end": "1990080"
  },
  {
    "text": "have there yeah so Envoy has several mechanisms first of all you can Define the number of listeners like how many",
    "start": "1990080",
    "end": "1997640"
  },
  {
    "text": "threats only can use and then we also limit the resource per listener so when we have a shared Envoy instance we",
    "start": "1997640",
    "end": "2004539"
  },
  {
    "text": "actually configure a separate Lister for every Ingress and for every egress a use case or a part that actually needs",
    "start": "2004539",
    "end": "2011559"
  },
  {
    "text": "and we limit the number of HTTP requests or layer 4 requests or layer 4 connections and scale by the number of",
    "start": "2011559",
    "end": "2019120"
  },
  {
    "text": "threads and obviously it's also subject to the CPU memory limits that you configure",
    "start": "2019120",
    "end": "2026559"
  },
  {
    "text": "all right so um let's get a round of applause to lease and Thomas",
    "start": "2026559",
    "end": "2034380"
  }
]