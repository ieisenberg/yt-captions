[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "all right welcome everyone thank you for coming to see my talk I'm Sebastian I'm",
    "start": "0",
    "end": "5400"
  },
  {
    "text": "a director of engineering at OpenShift and I'm here to talk about the operators and the operator framework and this is",
    "start": "5400",
    "end": "12750"
  },
  {
    "text": "to go a bit deeper into the material than yesterday so first of all I would",
    "start": "12750",
    "end": "18930"
  },
  {
    "text": "like to ask who here has been to the talk yesterday that was an intro to the operator all right quite a few so that way I know",
    "start": "18930",
    "end": "27269"
  },
  {
    "text": "how to modulate what I'm gonna say and what I'm gonna present great so yesterday we talked about operators",
    "start": "27269",
    "end": "33450"
  },
  {
    "text": "what's an operator what the operator framework is and what different components they are I'm gonna go over",
    "start": "33450",
    "end": "39480"
  },
  {
    "text": "this briefly again today and I'm gonna do a couple of the demos that I did yesterday again just so that everybody",
    "start": "39480",
    "end": "45020"
  },
  {
    "text": "sees the same things and but the thing that I'm gonna adds that were we didn't",
    "start": "45020",
    "end": "50760"
  },
  {
    "text": "do yesterday and to go a bit deeper I'm going to be building an operator a very simple operator something that you'll be",
    "start": "50760",
    "end": "55949"
  },
  {
    "text": "able to replicate yourself by just going to the docks and try yourself but the goal here is to show you what it",
    "start": "55949",
    "end": "62520"
  },
  {
    "text": "takes what pieces an operator is made off all right let's get started so",
    "start": "62520",
    "end": "70159"
  },
  {
    "start": "70000",
    "end": "275000"
  },
  {
    "text": "what's an operator a few less slides than yesterday an operator is a way of",
    "start": "70159",
    "end": "77270"
  },
  {
    "text": "building an application and driving an application on top of kubernetes behind",
    "start": "77270",
    "end": "83220"
  },
  {
    "text": "kubernetes api s and the idea is that when you have an application like say",
    "start": "83220",
    "end": "88530"
  },
  {
    "text": "database like Postgres or Cassandra or or something like Redis doesn't matter",
    "start": "88530",
    "end": "95850"
  },
  {
    "text": "any complex application will need a lot of domain-specific knowledge that",
    "start": "95850",
    "end": "101790"
  },
  {
    "text": "domain-specific knowledge can be you can use kubernetes and help yourself to",
    "start": "101790",
    "end": "107549"
  },
  {
    "text": "those generic tools that exist in kubernetes like stateful sets CSI deployments ingress to help you try to",
    "start": "107549",
    "end": "116009"
  },
  {
    "text": "solve some of those domain-specific problems but in the end when it comes to really fully automating an application",
    "start": "116009",
    "end": "122159"
  },
  {
    "text": "and by fully automating I mean handling updates from one version to another without waking people up handling",
    "start": "122159",
    "end": "129360"
  },
  {
    "text": "failure recovery if it's needed scale the application up and down depending on some scenarios all of that should be",
    "start": "129360",
    "end": "135240"
  },
  {
    "text": "handled automatically humans should not be involved in this kind of operation because that kind of breaks the promise",
    "start": "135240",
    "end": "141000"
  },
  {
    "text": "that containers gave us containers promised was hey you package it once and runs n everywhere well that's true for",
    "start": "141000",
    "end": "147120"
  },
  {
    "text": "developers but in production there's so much more that needs to be done and so",
    "start": "147120",
    "end": "152959"
  },
  {
    "text": "operators is a pattern you take all this domain-specific knowledge you put it behind kubernetes api so you extend the",
    "start": "152959",
    "end": "159780"
  },
  {
    "text": "kubernetes api so thanks to CR DS and you're able to then have once build it",
    "start": "159780",
    "end": "165750"
  },
  {
    "text": "once and then be used by users again and again like a cloud service just like you",
    "start": "165750",
    "end": "171600"
  },
  {
    "text": "use RDS in on AWS you go and you ask for new database you need another one you",
    "start": "171600",
    "end": "177420"
  },
  {
    "text": "ask for another one the same thing should be true for any kind of open source or closed source software that's",
    "start": "177420",
    "end": "183150"
  },
  {
    "text": "running on top of kubernetes you should be able to just ask for an instance of it and use it you should not have to",
    "start": "183150",
    "end": "188610"
  },
  {
    "text": "understand how to deploy it and manage it so that's the promise that we're trying to fulfill that's where we're",
    "start": "188610",
    "end": "195120"
  },
  {
    "text": "trying to go with this this is very early stages of all of this but there's been a tremendous amount of people that",
    "start": "195120",
    "end": "202560"
  },
  {
    "text": "jumped on this and wanted to also operate automatically and so across the",
    "start": "202560",
    "end": "208890"
  },
  {
    "text": "industry we've seen more and more things we've come out with our own we have things like Etsy and Prometheus that",
    "start": "208890",
    "end": "214440"
  },
  {
    "text": "allow you to automate at CD and Prometheus completely automatically on top of a Cabrini's framework and these",
    "start": "214440",
    "end": "221190"
  },
  {
    "text": "two come from the Kubik communities themself the sed operator the Prometheus operators maintained by the Prometheus",
    "start": "221190",
    "end": "227280"
  },
  {
    "text": "community and then you also you can have either vendors or communities or authors that are building these operators so you",
    "start": "227280",
    "end": "233609"
  },
  {
    "text": "have things out there like Postgres or a couch base or Redis and we've made a",
    "start": "233609",
    "end": "239430"
  },
  {
    "text": "list there's this URL if you have an operator and you want to contribute to it you can go add it to this list this",
    "start": "239430",
    "end": "246630"
  },
  {
    "text": "is very open we don't require you to use any special technology anybody who has something that applies to this logic as",
    "start": "246630",
    "end": "254459"
  },
  {
    "text": "allowed to come contribute it there eventually we're going to find a way to expose those operators better to",
    "start": "254459",
    "end": "259859"
  },
  {
    "text": "kubernetes clusters I'm going to show a few of these during my demos but that's the bulk of it",
    "start": "259859",
    "end": "265440"
  },
  {
    "text": "that's the idea the idea being not to have to do things over and over again",
    "start": "265440",
    "end": "271280"
  },
  {
    "text": "alright so let's start with the operator framework",
    "start": "271280",
    "end": "276330"
  },
  {
    "start": "275000",
    "end": "470000"
  },
  {
    "text": "what's the operator framework well building an operator is not easy either",
    "start": "276330",
    "end": "281670"
  },
  {
    "text": "you need to know a lot about kubernetes kubernetes is a wonderful API there's a lots that you can do with it but you",
    "start": "281670",
    "end": "287880"
  },
  {
    "text": "need there's a lot of details that you need to know you need to become an expert building automating your",
    "start": "287880",
    "end": "292950"
  },
  {
    "text": "application is something where suddenly you have to be not only an expert in terms of your application but also in",
    "start": "292950",
    "end": "298740"
  },
  {
    "text": "terms of kubernetes that is quite a lot at once what we're trying to do here is",
    "start": "298740",
    "end": "304440"
  },
  {
    "text": "trying to give a set of tools a set of projects that we bundle together but are",
    "start": "304440",
    "end": "310800"
  },
  {
    "text": "all usable independently for nature another to help build operators that's",
    "start": "310800",
    "end": "315930"
  },
  {
    "text": "for example the operator SDK so how do you build an operator how do you package it how do you test it if you're going to",
    "start": "315930",
    "end": "322500"
  },
  {
    "text": "ensure that this is a repeatable process if you're gonna make sure that this is going to be people are going to install",
    "start": "322500",
    "end": "328260"
  },
  {
    "text": "it and Trust it automatically just like people trust apps being updated on their phones then you need to make sure that",
    "start": "328260",
    "end": "334530"
  },
  {
    "text": "tests goes along with it and that people can trust that it's going to work in their environment the operator SDK also",
    "start": "334530",
    "end": "340560"
  },
  {
    "text": "gives you a lot of generic tooling a lot of things can be abstracted a lot of things can be done for a certain set of",
    "start": "340560",
    "end": "347520"
  },
  {
    "text": "class of software like databases or some",
    "start": "347520",
    "end": "353250"
  },
  {
    "text": "things are usable by all software like for example setting up monitoring and making sure that your app once deployed",
    "start": "353250",
    "end": "359040"
  },
  {
    "text": "is automatically monitored by the local Prometheus instance or things like rotating TLS certs upgrades all of this",
    "start": "359040",
    "end": "367020"
  },
  {
    "text": "there's a lot of generic code that can be done and help there and also an abstraction to kubernetes helping people",
    "start": "367020",
    "end": "373770"
  },
  {
    "text": "to not have to deal with all the details but only the higher-level to get started",
    "start": "373770",
    "end": "378930"
  },
  {
    "text": "to be able to focus on their own domain specific codes and their app that they",
    "start": "378930",
    "end": "384180"
  },
  {
    "text": "want to build once you have such an operator and you have built it you need a way to run the operators operator can",
    "start": "384180",
    "end": "391140"
  },
  {
    "text": "run it's just another kubernetes applications or there's nothing special about it but once you start having a lot",
    "start": "391140",
    "end": "396960"
  },
  {
    "text": "of operators they have versions they have their own life and we've built something called the",
    "start": "396960",
    "end": "402620"
  },
  {
    "text": "operator lifecycle manager an operator for operators it helps you subscribe to",
    "start": "402620",
    "end": "407870"
  },
  {
    "text": "different channels of operators know for example that that operator will always be stable that one will always be",
    "start": "407870",
    "end": "414650"
  },
  {
    "text": "preview it allows you to decide what namespace is allowed to have operators and what not and it also allows you to",
    "start": "414650",
    "end": "421190"
  },
  {
    "text": "make sure that upgrades are either handles of operators are handled automatically or if you need somebody to",
    "start": "421190",
    "end": "427160"
  },
  {
    "text": "approve an upgrade all of these things are done by the lifecycle manager and then another component of the framework",
    "start": "427160",
    "end": "434300"
  },
  {
    "text": "is what we call metering there's a whole talk about this on Thursday and I encourage you to go this is about",
    "start": "434300",
    "end": "439420"
  },
  {
    "text": "measuring what's happening in your communities cluster collecting it through Prometheus and then most",
    "start": "439420",
    "end": "445880"
  },
  {
    "text": "importantly being able to create reports on top of it and do things I charge back or show back knowing thanks to logic",
    "start": "445880",
    "end": "453260"
  },
  {
    "text": "inside of an operator for example how much a certain table costs on AWS or how",
    "start": "453260",
    "end": "459020"
  },
  {
    "text": "much you're spending for a certain amount of traffic on the other side that is what metering can do it can aggregate",
    "start": "459020",
    "end": "465770"
  },
  {
    "text": "these metrics and then create reports all right so next thing is demo that's",
    "start": "465770",
    "end": "471830"
  },
  {
    "start": "470000",
    "end": "485000"
  },
  {
    "text": "the main thing that I wanted to show here and we're going to go over a lot of the concept that I've talked about in a",
    "start": "471830",
    "end": "477530"
  },
  {
    "text": "high-level in a more detailed way during this demo alright so let's start with an",
    "start": "477530",
    "end": "486830"
  },
  {
    "start": "485000",
    "end": "503000"
  },
  {
    "text": "open shift cluster which is a normal kubernetes cluster here I'm not going to",
    "start": "486830",
    "end": "492080"
  },
  {
    "text": "be showing things in the UI yet we're gonna first start by building an operator but later on we're gonna come",
    "start": "492080",
    "end": "497780"
  },
  {
    "text": "back and have a few looks at what we can do with the operator lifecycle manager",
    "start": "497780",
    "end": "503020"
  },
  {
    "start": "503000",
    "end": "605000"
  },
  {
    "text": "so what does it take to build an operator maybe I'm gonna make the font",
    "start": "503020",
    "end": "508040"
  },
  {
    "text": "bigger let me do this here there's a lot of command so I'm gonna copy paste there",
    "start": "508040",
    "end": "517280"
  },
  {
    "text": "we go and then okay so the idea here is that all I have",
    "start": "517280",
    "end": "525350"
  },
  {
    "text": "installed as a command is the operator SDK that's a command that I'm going to be using currently I don't have a",
    "start": "525350",
    "end": "532310"
  },
  {
    "text": "project yet and we're going to be building a memcache operator a memcache operator is an operator that you can run",
    "start": "532310",
    "end": "538550"
  },
  {
    "text": "and then if you need a memcache cluster you can just ask I need a memcache cluster and give it",
    "start": "538550",
    "end": "543980"
  },
  {
    "text": "the size of the memcache cluster that you need if one of the memcache instances in that cluster dies the",
    "start": "543980",
    "end": "549319"
  },
  {
    "text": "operator spins it back up so let's start by first creating a directory which",
    "start": "549319",
    "end": "555050"
  },
  {
    "text": "you've had and now we're gonna do something which is called it's the first command you do when you use the operator SDK it's called operators TK new it's is",
    "start": "555050",
    "end": "562610"
  },
  {
    "text": "when you're from zero when you don't it's like get in it and this is going to bootstrap the operators decay directory",
    "start": "562610",
    "end": "570649"
  },
  {
    "text": "and the boilerplate code that you're going to need to start building an operator currently it's installing all",
    "start": "570649",
    "end": "577730"
  },
  {
    "text": "the dependencies the dependency that you're seeing being installed on it here is quite long these are all the dependencies that you need when you want",
    "start": "577730",
    "end": "583459"
  },
  {
    "text": "to start using things and talking to the kubernetes api there's a bit more in there of course that the operators DK",
    "start": "583459",
    "end": "589250"
  },
  {
    "text": "needs but it's still quite an amount of things most of it gets pulled automatically when you take climb go an API machinery but still it's quite a lot",
    "start": "589250",
    "end": "597380"
  },
  {
    "text": "to know and quite a lot to process this is going to be done in just a bit and we're gonna be able to go from there",
    "start": "597380",
    "end": "603790"
  },
  {
    "text": "alright so now I have a directory with a",
    "start": "603790",
    "end": "609139"
  },
  {
    "start": "605000",
    "end": "665000"
  },
  {
    "text": "memcache operator this is doesn't do anything obviously this is an empty shell I could build it if I were to",
    "start": "609139",
    "end": "616009"
  },
  {
    "text": "deploy and build this now it would be an empty API that does nothing so we're",
    "start": "616009",
    "end": "621050"
  },
  {
    "text": "gonna start doing things the first thing that you want to do is if we're going to build a memcache operator we need an API",
    "start": "621050",
    "end": "627800"
  },
  {
    "text": "we need a CR D and we need to be able to tell it what's fields and what options",
    "start": "627800",
    "end": "635870"
  },
  {
    "text": "it takes so the SDK generates all that boilerplate code and scaffolds the rest",
    "start": "635870",
    "end": "642319"
  },
  {
    "text": "of the project so in this case I just ran a command called add API I'm creating API that has the version cache",
    "start": "642319",
    "end": "649279"
  },
  {
    "text": "dot example comm v1 alpha and the kind memcache and what's interesting for us here is to",
    "start": "649279",
    "end": "655929"
  },
  {
    "text": "look at what it looks afterwards let me just copy it over and that's the one",
    "start": "655929",
    "end": "662769"
  },
  {
    "text": "here so if we look at this this is going",
    "start": "662769",
    "end": "669429"
  },
  {
    "start": "665000",
    "end": "725000"
  },
  {
    "text": "to be our API so we're in go code here because we want to express and go code how it's going to look to the operator",
    "start": "669429",
    "end": "675429"
  },
  {
    "text": "now only this is a generated file the thing I've copied it in because I've",
    "start": "675429",
    "end": "680499"
  },
  {
    "text": "altered one thing which is this file and this line here sighs and this line here",
    "start": "680499",
    "end": "685779"
  },
  {
    "text": "node the way see are these work is you have a place where you can submit fields",
    "start": "685779",
    "end": "691059"
  },
  {
    "text": "and then you have a status that's get written that gets written back by the operator and we're currently building an",
    "start": "691059",
    "end": "697449"
  },
  {
    "text": "operator that takes a size the size of the cluster how many memcache instances do I want here and then reports back how",
    "start": "697449",
    "end": "704889"
  },
  {
    "text": "many nodes are actually running here in the status these are the two fields you",
    "start": "704889",
    "end": "710109"
  },
  {
    "text": "see where this can go with more complicated projects more complicated projects will have more inputs and more",
    "start": "710109",
    "end": "715419"
  },
  {
    "text": "outputs and we'll be able to show that the rest is usually generated but it can",
    "start": "715419",
    "end": "722829"
  },
  {
    "text": "be edited if needed the next thing that we need to do is well now that we have",
    "start": "722829",
    "end": "727839"
  },
  {
    "start": "725000",
    "end": "755000"
  },
  {
    "text": "an API we need to act on that API so we need a we need to really need to build a",
    "start": "727839",
    "end": "733809"
  },
  {
    "text": "community controller again we're going to generate most of that code by calling",
    "start": "733809",
    "end": "739089"
  },
  {
    "text": "operator SDK add controller again an API it kind and now I'm going to copy over",
    "start": "739089",
    "end": "745779"
  },
  {
    "text": "the code off the controller this is you",
    "start": "745779",
    "end": "751119"
  },
  {
    "text": "can find all of this on the website itself in the repository and there we",
    "start": "751119",
    "end": "757569"
  },
  {
    "start": "755000",
    "end": "860000"
  },
  {
    "text": "have our controller so this is the code the actual user wrote this is the",
    "start": "757569",
    "end": "763629"
  },
  {
    "text": "business logic this is that is not generated like this whole reconcile function is the heart of the operator",
    "start": "763629",
    "end": "769959"
  },
  {
    "text": "what happens in the reconcile function is it looks at the state it gets called periodically and periodically it then",
    "start": "769959",
    "end": "777669"
  },
  {
    "text": "looks at the state of the world do I have memcache running well do we know",
    "start": "777669",
    "end": "783970"
  },
  {
    "text": "all right let's start memcache it started deployment is it big enough is this the size big",
    "start": "783970",
    "end": "789250"
  },
  {
    "text": "enough yes good no update it and then generates builds status updates and",
    "start": "789250",
    "end": "797140"
  },
  {
    "text": "updates the CR which is here like you can see it here for example what it is",
    "start": "797140",
    "end": "802710"
  },
  {
    "text": "the updates and the idea here is that we constantly get in this loop and this is",
    "start": "802710",
    "end": "808960"
  },
  {
    "text": "how an operator works looking at the state of the world what do I want fixing",
    "start": "808960",
    "end": "814150"
  },
  {
    "text": "that state this is how upgrades would be handled this example doesn't handle an upgrade to be fair and memcache it might",
    "start": "814150",
    "end": "821050"
  },
  {
    "text": "not be that hard but for more complex application you would be looking what version do I have running do I have to run certain",
    "start": "821050",
    "end": "826839"
  },
  {
    "text": "migrations do what do I do to go from point A to point B that's what you care",
    "start": "826839",
    "end": "832330"
  },
  {
    "text": "about in that function and that function is your human the human that's usually behind a pager and wakes up and brings",
    "start": "832330",
    "end": "838630"
  },
  {
    "text": "your servers back up and fixes it and does all that that's what that loop does",
    "start": "838630",
    "end": "844270"
  },
  {
    "text": "we can go way further than that and we're going to show some example that are not just a loop to keep something up",
    "start": "844270",
    "end": "851770"
  },
  {
    "text": "but also something to IP eyes to interact with an operator but that's the",
    "start": "851770",
    "end": "857709"
  },
  {
    "text": "the main goal here all right so now that we've created this we've just copied",
    "start": "857709",
    "end": "863680"
  },
  {
    "start": "860000",
    "end": "950000"
  },
  {
    "text": "code and right we just code then we just edited the file so we're going to generate we need to call the operators",
    "start": "863680",
    "end": "869380"
  },
  {
    "text": "to K to generate the actual code and then we're done we are going to be able",
    "start": "869380",
    "end": "876700"
  },
  {
    "text": "to build it so the first thing we're gonna do is build a docker image that",
    "start": "876700",
    "end": "881920"
  },
  {
    "text": "contains all of this then I do have files here that are generated by the SDK",
    "start": "881920",
    "end": "890650"
  },
  {
    "text": "about how to deploy it though the permissions on the kubernetes cluster the service counts the operator yeah Mel",
    "start": "890650",
    "end": "897820"
  },
  {
    "text": "is the deployment itself of the operator so now I'm going to just quickly swap",
    "start": "897820",
    "end": "903670"
  },
  {
    "text": "the image name for the one that we used you can see quad io s Paul memcache D",
    "start": "903670",
    "end": "909580"
  },
  {
    "text": "that's the one that we used when we built so now our operator will be deployable and now we're going to",
    "start": "909580",
    "end": "915100"
  },
  {
    "text": "quickly push this operator to Quay I've tried this on conference Wi-Fi it's okay so and we weren't able to install the",
    "start": "915100",
    "end": "923880"
  },
  {
    "text": "depths all right slower than last time",
    "start": "923880",
    "end": "933620"
  },
  {
    "text": "but look layer already exists it took all that time to tell us I could cheat",
    "start": "933620",
    "end": "945360"
  },
  {
    "text": "and control see since I've already updated this we're done all right I'm impatient okay so let's now see what",
    "start": "945360",
    "end": "953790"
  },
  {
    "text": "we're gonna do first what's do you need to run an operator first you have the CR",
    "start": "953790",
    "end": "960210"
  },
  {
    "text": "D this was generated by the customer a cisgendered F initial was generated by",
    "start": "960210",
    "end": "965370"
  },
  {
    "text": "the operators decay it can take it's declares what kind of customer resources",
    "start": "965370",
    "end": "970380"
  },
  {
    "text": "we can do in this case we want to start putting new memcache instances with certain sizes so this is to declare the",
    "start": "970380",
    "end": "976890"
  },
  {
    "text": "CR D then so let's first of let's create that one first done then we have the",
    "start": "976890",
    "end": "985290"
  },
  {
    "text": "service account so the service account also a file generated by the SDK that's",
    "start": "985290",
    "end": "992340"
  },
  {
    "text": "the idea that's obviously the operator needs to run as some user that's that's the user they op it runs out and then",
    "start": "992340",
    "end": "998610"
  },
  {
    "text": "the role in the role bindings are the permissions that that certain user has and now we're gonna start deploying the",
    "start": "998610",
    "end": "1007310"
  },
  {
    "start": "1005000",
    "end": "1085000"
  },
  {
    "text": "operator know that we're gonna have a look at because this is a normal",
    "start": "1007310",
    "end": "1012890"
  },
  {
    "text": "kubernetes app this normal kubernetes app here is deploys the memcache",
    "start": "1012890",
    "end": "1019130"
  },
  {
    "text": "operator so it's a deployment it has it uses the service account that we just created it finds in a certain port it",
    "start": "1019130",
    "end": "1027079"
  },
  {
    "text": "uses the image that we created earlier and we have a couple of radius probes and then some environments but that's it",
    "start": "1027079",
    "end": "1034220"
  },
  {
    "text": "like which namespaces we want to be watched the operator name but as you see",
    "start": "1034220",
    "end": "1039680"
  },
  {
    "text": "normal kubernetes application so we're going to deploy that one",
    "start": "1039680",
    "end": "1044230"
  },
  {
    "text": "and now we can do a cube control get deployment",
    "start": "1048600",
    "end": "1054740"
  },
  {
    "text": "great",
    "start": "1061330",
    "end": "1064080"
  },
  {
    "text": "this is definitely slower here there it'll all be let's go to the UI who",
    "start": "1072730",
    "end": "1084220"
  },
  {
    "text": "cares oh of course there we go we have the memcache the",
    "start": "1084220",
    "end": "1090160"
  },
  {
    "text": "operator it's running so the next thing that we want to do is we want to start deploying instances of this you can see",
    "start": "1090160",
    "end": "1096340"
  },
  {
    "text": "that I have two other operators running as well what is how do we instance eh a new a",
    "start": "1096340",
    "end": "1103210"
  },
  {
    "text": "new memcache very easily I give it a name in this case it's called it gube",
    "start": "1103210",
    "end": "1110050"
  },
  {
    "text": "cone memcache D and a size we want three memcache nodes and there we go and so we",
    "start": "1110050",
    "end": "1117640"
  },
  {
    "text": "just cube it go and then we can do it",
    "start": "1117640",
    "end": "1128380"
  },
  {
    "text": "get again our deployment and then we can see that we have cube conman cache D",
    "start": "1128380",
    "end": "1133960"
  },
  {
    "text": "running at the size that we asked for we can also look at the pods oops we can",
    "start": "1133960",
    "end": "1143770"
  },
  {
    "text": "look at the pods we can see that we have three pods running if I were right now you can we connect have a look in the UI",
    "start": "1143770",
    "end": "1149920"
  },
  {
    "start": "1145000",
    "end": "1230000"
  },
  {
    "text": "as well cuz why not and then here you",
    "start": "1149920",
    "end": "1157020"
  },
  {
    "text": "can see all these memcache D operator pods let's kill one mr. fun I delete this pod",
    "start": "1157020",
    "end": "1167610"
  },
  {
    "text": "and I can see that it is gone oh it's",
    "start": "1167970",
    "end": "1176290"
  },
  {
    "text": "been replaced too fast oh is it must have been replaced oh it's",
    "start": "1176290",
    "end": "1183640"
  },
  {
    "text": "still terminating oh I killed the operator nice it's been restarted kubernetes does a",
    "start": "1183640",
    "end": "1190110"
  },
  {
    "text": "few things for you so we're all good it's not bad to kill an operator it'll",
    "start": "1190110",
    "end": "1195240"
  },
  {
    "text": "just come back and continue its job but let's now actually kill a memcache D",
    "start": "1195240",
    "end": "1201350"
  },
  {
    "text": "there we go so it's terminating but it's already back while it's terminating so",
    "start": "1210470",
    "end": "1217070"
  },
  {
    "text": "there we go so we're back so I killed a bunch of things that nothing happens this is what",
    "start": "1217070",
    "end": "1222800"
  },
  {
    "text": "we want right like that's the goal all right okay what can I do with this",
    "start": "1222800",
    "end": "1229730"
  },
  {
    "text": "let's see I have a new API a micro Bernays cluster let's look at all the CR DS you will see",
    "start": "1229730",
    "end": "1238190"
  },
  {
    "text": "once this loads there are a lot of CR DS in there because this is openshift for o",
    "start": "1238190",
    "end": "1243800"
  },
  {
    "text": "and OpenShift for o is fully built on operators so you have so you see our DS for pretty much everything in there if",
    "start": "1243800",
    "end": "1251030"
  },
  {
    "text": "this loads on conference Wi-Fi",
    "start": "1251030",
    "end": "1255970"
  },
  {
    "text": "steaks forever while this loads let's do something else let's edit our thing here",
    "start": "1266990",
    "end": "1275110"
  },
  {
    "text": "let's increase the size obviously we can also have like 10 in there if we want",
    "start": "1275110",
    "end": "1281530"
  },
  {
    "text": "come on miss youla is faster I know all right type memcache DS right like oh",
    "start": "1282850",
    "end": "1294550"
  },
  {
    "text": "why doesn't it slowed I have too big of",
    "start": "1294550",
    "end": "1300350"
  },
  {
    "text": "a list here all right well I'll leave this on the background let's go let's go",
    "start": "1300350",
    "end": "1307340"
  },
  {
    "text": "a tiny bits to this alright so in this",
    "start": "1307340",
    "end": "1314870"
  },
  {
    "text": "example we saw a memcache d-theta thing oh one last thing that I like to show as well is this obviously this is meant to",
    "start": "1314870",
    "end": "1321530"
  },
  {
    "text": "do multiple of these so I can do a memcache D to store this apply and now",
    "start": "1321530",
    "end": "1331900"
  },
  {
    "start": "1325000",
    "end": "1420000"
  },
  {
    "text": "if I get the pods I have two instances running these are two different memcache D for two different applications and",
    "start": "1331900",
    "end": "1338179"
  },
  {
    "text": "they have two different names so all it takes is this instead of having a lot of",
    "start": "1338179",
    "end": "1344000"
  },
  {
    "text": "yamo to deploy memcache D all the time and also knowing how to maintain it you just have to include this tiny mo here",
    "start": "1344000",
    "end": "1351800"
  },
  {
    "text": "with the rest of your application okay oh it loaded beautiful okay so in here",
    "start": "1351800",
    "end": "1359360"
  },
  {
    "text": "we can see that we have memcache D memcache D here and so you can see them",
    "start": "1359360",
    "end": "1365570"
  },
  {
    "text": "it's you can see that I have the two instances running there this is the and",
    "start": "1365570",
    "end": "1370900"
  },
  {
    "text": "that's that's the interesting thing you can you can see that they all have or",
    "start": "1370900",
    "end": "1376750"
  },
  {
    "text": "present as their own API in the in the in the cluster itself alright let's go",
    "start": "1376750",
    "end": "1382700"
  },
  {
    "text": "on with continuing what are other options to build operators you saw a lot",
    "start": "1382700",
    "end": "1387740"
  },
  {
    "text": "of llamó here a lot of go codes there are other options the operator SDK supports what we call ansible operators",
    "start": "1387740",
    "end": "1395840"
  },
  {
    "text": "so if you have already a lot of ansible code go in there operator frame recovery then",
    "start": "1395840",
    "end": "1403700"
  },
  {
    "text": "again I'm showing you things you can show see and repositories on the Internet but here you can see that you have",
    "start": "1403700",
    "end": "1410080"
  },
  {
    "text": "things like the memcache the operator and the memcache the operator one",
    "start": "1410080",
    "end": "1415850"
  },
  {
    "text": "seconds this is not the right thing ansible there we go so here we have an",
    "start": "1415850",
    "end": "1421879"
  },
  {
    "text": "implementation of the same operator that I did but in ansible so it's uses the",
    "start": "1421879",
    "end": "1427100"
  },
  {
    "text": "operator is decay but what it does behind the scenes is it drives ansible code so all you have to do is basically",
    "start": "1427100",
    "end": "1433519"
  },
  {
    "text": "create an ansible role point to it and then you can do things like saying",
    "start": "1433519",
    "end": "1440470"
  },
  {
    "text": "having inputs like you have a size and",
    "start": "1440470",
    "end": "1445539"
  },
  {
    "text": "you have a task that needs to be",
    "start": "1445539",
    "end": "1451429"
  },
  {
    "start": "1450000",
    "end": "1480000"
  },
  {
    "text": "accomplished and for example when you start memcache D and that thing has the",
    "start": "1451429",
    "end": "1456549"
  },
  {
    "text": "the definition to run the the kubernetes definition to run memcache D so that",
    "start": "1456549",
    "end": "1462440"
  },
  {
    "text": "shows you how to do the same thing that I just did with only a bit of ansible",
    "start": "1462440",
    "end": "1468259"
  },
  {
    "text": "and we can do this with helm and ansible and the idea is that in the future you'll be able to mix and match bill",
    "start": "1468259",
    "end": "1474409"
  },
  {
    "text": "code and ansible or go code and helm code if you need to create more complex",
    "start": "1474409",
    "end": "1479559"
  },
  {
    "text": "operators so that's that the last thing",
    "start": "1479559",
    "end": "1484730"
  },
  {
    "start": "1480000",
    "end": "1525000"
  },
  {
    "text": "that I wanted to show here is inside of the OLM the operator lifecycle manager I",
    "start": "1484730",
    "end": "1493009"
  },
  {
    "text": "showed a few of these demo a few pieces of these demos yesterday but I wanted to just show this when it's when everything",
    "start": "1493009",
    "end": "1499730"
  },
  {
    "text": "gets put together so when everything comes together the operators are exposed",
    "start": "1499730",
    "end": "1504919"
  },
  {
    "text": "to the operators lifecycle manager with files that we call cluster service versions it's a big yeah mole that",
    "start": "1504919",
    "end": "1512059"
  },
  {
    "text": "describes what an operator depends on what an operator requires and you can start building the Pennsy grafts between",
    "start": "1512059",
    "end": "1518389"
  },
  {
    "text": "operators and you can start also reporting status in ways that this",
    "start": "1518389",
    "end": "1524320"
  },
  {
    "text": "operator cycle lifecycle manager understands so if you look at the instances currently we don't have any",
    "start": "1524320",
    "end": "1530090"
  },
  {
    "text": "instance running so let's create an sed cluster same thing same way that I created the the other",
    "start": "1530090",
    "end": "1537470"
  },
  {
    "text": "one we're gonna call it example size three create and then we when we create",
    "start": "1537470",
    "end": "1542840"
  },
  {
    "text": "this cluster we can see that it starts up and when we go to that cluster we're",
    "start": "1542840",
    "end": "1549140"
  },
  {
    "text": "waiting now so what we're waiting on is on the operator to return status and to tell us",
    "start": "1549140",
    "end": "1554690"
  },
  {
    "text": "that everything went okay and then the cluster is up so you can go have a look",
    "start": "1554690",
    "end": "1560960"
  },
  {
    "text": "at the resources to see if they're already there so right now we only have one running to running three running so",
    "start": "1560960",
    "end": "1567620"
  },
  {
    "text": "now we have three sed instances running and if we go to the over you can see that the sizes of three pods but there",
    "start": "1567620",
    "end": "1573410"
  },
  {
    "text": "are only two members that are active yet why because this is actual status reported by the operator the operator",
    "start": "1573410",
    "end": "1579770"
  },
  {
    "text": "has custom logic that knows what an sed cluster is and reports it back and then",
    "start": "1579770",
    "end": "1585920"
  },
  {
    "text": "we show that we show that and now you see three members we show that so that you can actually know and depend on the",
    "start": "1585920",
    "end": "1591620"
  },
  {
    "text": "fact that the STD clusters up and not just pause running so these are example of custom logic that can then abstract",
    "start": "1591620",
    "end": "1597650"
  },
  {
    "text": "it and be shown in one way the Etsy operator has more than just being able",
    "start": "1597650",
    "end": "1603500"
  },
  {
    "text": "to do new new new city clusters it can",
    "start": "1603500",
    "end": "1609800"
  },
  {
    "text": "also create a CD backup and restore tasks you have other operators that are doing things like the Prometheus one",
    "start": "1609800",
    "end": "1616520"
  },
  {
    "start": "1610000",
    "end": "1660000"
  },
  {
    "text": "that have you can insert Prometheus rules or service monitors service",
    "start": "1616520",
    "end": "1621620"
  },
  {
    "text": "monitors for example are a yellow object that tell a running its Prometheus",
    "start": "1621620",
    "end": "1626750"
  },
  {
    "text": "cluster to start watching another another operator or another task or",
    "start": "1626750",
    "end": "1632690"
  },
  {
    "text": "anything and the cool thing here is that eventually we're going to get the operators decay to generate those",
    "start": "1632690",
    "end": "1638420"
  },
  {
    "text": "automatically and so once you start playing the dependency game you're going to be able to through all them install a",
    "start": "1638420",
    "end": "1645110"
  },
  {
    "text": "big fleet of software that all depend on each other and start watching and monitoring each",
    "start": "1645110",
    "end": "1651380"
  },
  {
    "text": "other just like intended so that's kind of the Legos that we're putting together to try to make all of this work that's",
    "start": "1651380",
    "end": "1658940"
  },
  {
    "text": "what I wanted to show today I that's it yeah the next things that I wanted to",
    "start": "1658940",
    "end": "1665180"
  },
  {
    "start": "1660000",
    "end": "1695000"
  },
  {
    "text": "say is that there are how to get started please go to the website the operator",
    "start": "1665180",
    "end": "1671990"
  },
  {
    "text": "framework website and go please also go to the OpenShift Commons group where",
    "start": "1671990",
    "end": "1679520"
  },
  {
    "text": "every once a month we have a discussion and we also have a mailing list and a",
    "start": "1679520",
    "end": "1684760"
  },
  {
    "text": "slack channel yep that's it thank you and there are more",
    "start": "1684760",
    "end": "1696440"
  },
  {
    "start": "1695000",
    "end": "1750000"
  },
  {
    "text": "sessions please go to the Neuse other sessions questions",
    "start": "1696440",
    "end": "1701529"
  },
  {
    "text": "so uh thank you thank you for injuries into that it's on now okay um a couple",
    "start": "1711500",
    "end": "1718500"
  },
  {
    "text": "questions I had one of them was related to dependencies and this is an issue I",
    "start": "1718500",
    "end": "1723510"
  },
  {
    "text": "have with with helm when you're installing an operator you have to install it separately you can't say oh",
    "start": "1723510",
    "end": "1729809"
  },
  {
    "text": "this home chart depends on this this operator right so and from what you were describing it then it sounds like you",
    "start": "1729809",
    "end": "1735270"
  },
  {
    "text": "you're working on a way to address that what are your what are your thoughts on that and how do you think you can fix",
    "start": "1735270",
    "end": "1740520"
  },
  {
    "text": "this problem of like well there might be things that depend on different versions of operators and running them both at the same yeah I'm how do they you know",
    "start": "1740520",
    "end": "1747030"
  },
  {
    "text": "how do they talk to the right cuz resources so two things in the operated lifecycle manager where you can require",
    "start": "1747030",
    "end": "1752970"
  },
  {
    "start": "1750000",
    "end": "1800000"
  },
  {
    "text": "other operators depend on other operators but where we're really going is to for operators to tell you what API",
    "start": "1752970",
    "end": "1759510"
  },
  {
    "text": "is they're using inside of a kubernetes cluster if they're depending on certain amount of api's and if we're declaring the api's that are using we can easily",
    "start": "1759510",
    "end": "1766800"
  },
  {
    "text": "say if something is going to work or not in addition to tests versus just depending on versions that you don't",
    "start": "1766800",
    "end": "1772500"
  },
  {
    "text": "know if it's going to work so that's the idea is that thanks to knowing what API is and operator uses and knowing what",
    "start": "1772500",
    "end": "1780860"
  },
  {
    "text": "dependencies are declared when you put it in the CSV for operated lifecycle",
    "start": "1780860",
    "end": "1785880"
  },
  {
    "text": "manager all right thanks Sebastian can you talk a bit more about how a service like a TD could",
    "start": "1785880",
    "end": "1794429"
  },
  {
    "text": "automatically update itself and how an operator writes that so the way it works",
    "start": "1794429",
    "end": "1799470"
  },
  {
    "text": "is you have the operator running at CD operator running and it's deployed new versions of its deployed at a certain",
    "start": "1799470",
    "end": "1806700"
  },
  {
    "start": "1800000",
    "end": "1845000"
  },
  {
    "text": "version that's called at version a of s CD and then you update the operator and",
    "start": "1806700",
    "end": "1811980"
  },
  {
    "text": "this operator is capable of handling version B of n CD and so what it happens",
    "start": "1811980",
    "end": "1818460"
  },
  {
    "text": "is that operator that has the logic the migration logic to go from version a to version B and so it executes that logic",
    "start": "1818460",
    "end": "1825780"
  },
  {
    "text": "and starts rolling it through the clusters that are running and you can decide if it should be automatic or if you should approve each update like",
    "start": "1825780",
    "end": "1832110"
  },
  {
    "text": "that's up to the cluster administrator I was wondering about upgrading to go mode",
    "start": "1832110",
    "end": "1839010"
  },
  {
    "text": "we go I didn't see any issues in the trackers I was wondering if there was timeline or dating to go mod oh we've looked at it",
    "start": "1839010",
    "end": "1847870"
  },
  {
    "start": "1845000",
    "end": "1895000"
  },
  {
    "text": "honestly if the community wants to do it they can start we're gonna get to it it's just not has not been a priority",
    "start": "1847870",
    "end": "1854330"
  },
  {
    "text": "that's it but we will probably it's probably there might be dependencies",
    "start": "1854330",
    "end": "1859580"
  },
  {
    "text": "that we have that have issues with it too it's quite possible right okay two",
    "start": "1859580",
    "end": "1866990"
  },
  {
    "text": "questions actually the first one talks about best practices around create an",
    "start": "1866990",
    "end": "1872030"
  },
  {
    "text": "operator because there are some things on the the site the github page that",
    "start": "1872030",
    "end": "1877940"
  },
  {
    "text": "talks briefly about that yeah but I wanted to see if there's anything coming out that gives people you know best",
    "start": "1877940",
    "end": "1883100"
  },
  {
    "text": "practice around creating that the other question I have also is uh what is your recommendation about running the",
    "start": "1883100",
    "end": "1888800"
  },
  {
    "text": "operator inside or outside the cluster because I know in that documentation it allows you to do both yeah what what do",
    "start": "1888800",
    "end": "1895700"
  },
  {
    "start": "1895000",
    "end": "1940000"
  },
  {
    "text": "you recommend so best practices we're trying to encode the best practices in side of the operator framework but we're",
    "start": "1895700",
    "end": "1902179"
  },
  {
    "text": "also trying to document them so that's that's our goal here and that's an ongoing effort and then running inside",
    "start": "1902179",
    "end": "1908630"
  },
  {
    "text": "or outside the cluster outside the clusters for development if you're on your machine and you really want to iterate quickly that's why you run it",
    "start": "1908630",
    "end": "1914090"
  },
  {
    "text": "outside of the cluster thanks ed the question I have is about managing the",
    "start": "1914090",
    "end": "1920330"
  },
  {
    "text": "underlying kubernetes like objects like pods and deployments is there you know with the memcache one you used a pod",
    "start": "1920330",
    "end": "1927050"
  },
  {
    "text": "is there a reason to use you know manage at the pod level or the replica set level within an operator or is it depend",
    "start": "1927050",
    "end": "1933200"
  },
  {
    "text": "on the use case it's all depends on the use case yeah yeah my question is about",
    "start": "1933200",
    "end": "1940429"
  },
  {
    "start": "1940000",
    "end": "1965000"
  },
  {
    "text": "this dependency dependency graph you talked about is there another operator to manage all these dependencies that's",
    "start": "1940429",
    "end": "1946970"
  },
  {
    "text": "OLM and is it something already existing as it's our working proof no no it's all everything there's not a single thing",
    "start": "1946970",
    "end": "1953600"
  },
  {
    "text": "that I showed here that's not open source on the websites that I showed in the link in the slides and I've uploaded the slides and all of that yeah I think",
    "start": "1953600",
    "end": "1960530"
  },
  {
    "text": "you can use all of that today on any kubernetes cluster doesn't matter I just",
    "start": "1960530",
    "end": "1966020"
  },
  {
    "start": "1965000",
    "end": "2000000"
  },
  {
    "text": "had a quick question about leader election is there anything in the framework that supports that right now or you kind of just dependent on deployments for keeping one cup at a",
    "start": "1966020",
    "end": "1972920"
  },
  {
    "text": "time the SDK itself does leader election okay between its members but there's so much more that could be",
    "start": "1972920",
    "end": "1979399"
  },
  {
    "text": "built like yeah okay there's two questions in the frontier yes one so the",
    "start": "1979399",
    "end": "1992570"
  },
  {
    "text": "question about testing so you kind of touched upon it but I know the looking at all this complexity going up and up",
    "start": "1992570",
    "end": "2000190"
  },
  {
    "start": "2000000",
    "end": "2050000"
  },
  {
    "text": "so how are you gonna test that yeah that's a piece that I didn't show III favorite showing the ansible stuff",
    "start": "2000190",
    "end": "2006070"
  },
  {
    "text": "instead but the idea is when you're building an operator you're also building the tests that go with it and",
    "start": "2006070",
    "end": "2011200"
  },
  {
    "text": "you're we're also trying to add as many generic tests as we can within the framework to make sure that you handle",
    "start": "2011200",
    "end": "2018730"
  },
  {
    "text": "your a lot of these things correctly that's what we're hoping for building making sure that building test and test",
    "start": "2018730",
    "end": "2024759"
  },
  {
    "text": "suite are a part of building an operator and also not letting things run if everything is not green and checked and",
    "start": "2024759",
    "end": "2031480"
  },
  {
    "text": "so when you're gonna get an operator the test will be embedded at least with the for at least with the operator for a",
    "start": "2031480",
    "end": "2036940"
  },
  {
    "text": "framework tests are embedded within the operators so when you get in on the cluster you can run its tests yeah",
    "start": "2036940",
    "end": "2043659"
  },
  {
    "text": "so before an upgrade you can run its tests that depends on the test is being",
    "start": "2043659",
    "end": "2049510"
  },
  {
    "text": "good yeah so a couple questions where was the yamen for the part that",
    "start": "2049510",
    "end": "2055960"
  },
  {
    "start": "2050000",
    "end": "2110000"
  },
  {
    "text": "was deployed is that hard-coded or can that it's yeah I should have shown that that's in the source code yes okay but",
    "start": "2055960",
    "end": "2062290"
  },
  {
    "text": "can that it's not llamo it was a go object so I showed it in ansible like",
    "start": "2062290",
    "end": "2067990"
  },
  {
    "text": "that say me llamo I should in ansible exists SEO objects inside of the source",
    "start": "2067990",
    "end": "2073690"
  },
  {
    "text": "instead we need to make it that configurable like get it through the CRT somehow anything you want it's your go",
    "start": "2073690",
    "end": "2080108"
  },
  {
    "text": "code you can expose any piece okay that's it and the second thing is I used I just used to operate SDK like a couple",
    "start": "2080109",
    "end": "2087190"
  },
  {
    "text": "of weeks ago to create a custom operator but I didn't want to do any of this fancy reconciling stuff I just wanted it",
    "start": "2087190",
    "end": "2093819"
  },
  {
    "text": "more as a watcher to just get the get information from the CRT and just send",
    "start": "2093819",
    "end": "2099700"
  },
  {
    "text": "an API call out is there some sort of a support you're going to have just for like a custom controller like a handler",
    "start": "2099700",
    "end": "2106180"
  },
  {
    "text": "like not come that doesn't come with this whole reconciler so it's not the there there's always a",
    "start": "2106180",
    "end": "2112990"
  },
  {
    "start": "2110000",
    "end": "2160000"
  },
  {
    "text": "loop because you're watching a CR and you're reconciling something but if that's your use case it's doable like",
    "start": "2112990",
    "end": "2118329"
  },
  {
    "text": "there there's people who are building operators that call out to clout api's to do things right to to instantiate AWS",
    "start": "2118329",
    "end": "2125410"
  },
  {
    "text": "instances to to create whatever they want outside of their kubernetes cluster that's also one of the big pluses of the",
    "start": "2125410",
    "end": "2132730"
  },
  {
    "text": "ansible you can like despite not wanting to write code you can also just write a",
    "start": "2132730",
    "end": "2138069"
  },
  {
    "text": "lot of ansible that goes and does things on your physical network thanks is there",
    "start": "2138069",
    "end": "2149710"
  },
  {
    "text": "still a role for for overriding custom controllers at all I mean should this",
    "start": "2149710",
    "end": "2156010"
  },
  {
    "text": "all be handled with operator framework forward no I mean the operator SDK is",
    "start": "2156010",
    "end": "2161829"
  },
  {
    "start": "2160000",
    "end": "2200000"
  },
  {
    "text": "focused on really making it easy to opportu to to build applications right",
    "start": "2161829",
    "end": "2168069"
  },
  {
    "text": "like there there's a lot of lower-level things that you can want and want to do and specialized things that you would want to do with the other API is what we",
    "start": "2168069",
    "end": "2175030"
  },
  {
    "text": "focus on is for people who are building applications to automate them like",
    "start": "2175030",
    "end": "2180339"
  },
  {
    "text": "that's our level that doesn't mean that it's not you can't use the lower-level things to do more detailed work or",
    "start": "2180339",
    "end": "2186730"
  },
  {
    "text": "sometimes you need you need more control right like yeah but it's just it's two different concepts the controller an",
    "start": "2186730",
    "end": "2193359"
  },
  {
    "text": "operator is like a superset of a controller like controllers less than that that's it so my question is more",
    "start": "2193359",
    "end": "2202000"
  },
  {
    "start": "2200000",
    "end": "2250000"
  },
  {
    "text": "from a design of a operator basically so for around the application workflow",
    "start": "2202000",
    "end": "2207670"
  },
  {
    "text": "again so if the application has multiple executable cuts itself what's the best",
    "start": "2207670",
    "end": "2213940"
  },
  {
    "text": "practice to design the operator is it like should should we run a part for",
    "start": "2213940",
    "end": "2220390"
  },
  {
    "text": "every executable should there be one container for each executable just it",
    "start": "2220390",
    "end": "2225849"
  },
  {
    "text": "depends on your application right I would say some some might have one image with all the executables but multiple",
    "start": "2225849",
    "end": "2232420"
  },
  {
    "text": "pods some might have multiple images multiple parts some might have one pod",
    "start": "2232420",
    "end": "2237760"
  },
  {
    "text": "with multiple execute it really depends on the other in the that's normal kubernetes concepts",
    "start": "2237760",
    "end": "2244420"
  },
  {
    "text": "and then you decide if these concepts can should be automated or not alright I",
    "start": "2244420",
    "end": "2250240"
  },
  {
    "text": "think we're over the time yeah I think we're over time can you go back one slide and just like I'm just gonna",
    "start": "2250240",
    "end": "2255550"
  },
  {
    "text": "remind everybody the the cig meeting is the third Friday of every month at 9:00 a.m. Pacific if you sign up for the",
    "start": "2255550",
    "end": "2261880"
  },
  {
    "text": "Google group here down at the bottom you'll get the announcements for it and if you have an operator now and let us",
    "start": "2261880",
    "end": "2268360"
  },
  {
    "text": "know about it we'll make you talk about it and talk about your experiences and get feedback on from you so please do",
    "start": "2268360",
    "end": "2275440"
  },
  {
    "text": "keep in touch",
    "start": "2275440",
    "end": "2277920"
  },
  {
    "text": "[Applause]",
    "start": "2280740",
    "end": "2283450"
  }
]