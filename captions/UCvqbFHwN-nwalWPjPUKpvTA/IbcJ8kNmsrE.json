[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hello",
    "start": "2720",
    "end": "3439"
  },
  {
    "text": "i'm mark roth and i am here to talk",
    "start": "3439",
    "end": "5440"
  },
  {
    "text": "about xds support in grpc",
    "start": "5440",
    "end": "9279"
  },
  {
    "text": "uh here's what we're going to cover",
    "start": "9280",
    "end": "10559"
  },
  {
    "text": "today uh we'll talk about why we're",
    "start": "10559",
    "end": "11840"
  },
  {
    "text": "doing this",
    "start": "11840",
    "end": "12799"
  },
  {
    "text": "what changes we needed in the xds apis",
    "start": "12799",
    "end": "15360"
  },
  {
    "text": "to support non-proxy client like grpc",
    "start": "15360",
    "end": "18080"
  },
  {
    "text": "we'll talk about some gotchas we",
    "start": "18080",
    "end": "19279"
  },
  {
    "text": "discovered in the xcs transport protocol",
    "start": "19279",
    "end": "21600"
  },
  {
    "text": "and we'll talk about what management",
    "start": "21600",
    "end": "23359"
  },
  {
    "text": "server maintainers need to do in order",
    "start": "23359",
    "end": "25599"
  },
  {
    "text": "to support grpc alongside envoy",
    "start": "25599",
    "end": "27599"
  },
  {
    "text": "and then we'll cover our current status",
    "start": "27599",
    "end": "29039"
  },
  {
    "text": "and roadmap so let's dive",
    "start": "29039",
    "end": "31199"
  },
  {
    "text": "in and talk about why so as you know",
    "start": "31199",
    "end": "34239"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "envoy is commonly used as a sidecar",
    "start": "34239",
    "end": "36399"
  },
  {
    "text": "proxy in service measure deployments",
    "start": "36399",
    "end": "38000"
  },
  {
    "text": "there are two main advantages that envoy",
    "start": "38000",
    "end": "40160"
  },
  {
    "text": "brings here",
    "start": "40160",
    "end": "41280"
  },
  {
    "text": "it provides a whole bunch of really nice",
    "start": "41280",
    "end": "42879"
  },
  {
    "text": "traffic management features and it",
    "start": "42879",
    "end": "44399"
  },
  {
    "text": "provides centralized management via xds",
    "start": "44399",
    "end": "48480"
  },
  {
    "start": "48000",
    "end": "48000"
  },
  {
    "text": "so here's a diagram of a typical service",
    "start": "48879",
    "end": "51440"
  },
  {
    "text": "mesh topology",
    "start": "51440",
    "end": "52640"
  },
  {
    "text": "every node in the mesh has an envoy",
    "start": "52640",
    "end": "54160"
  },
  {
    "text": "instance running as a sidecar right next",
    "start": "54160",
    "end": "55520"
  },
  {
    "text": "to the application",
    "start": "55520",
    "end": "56480"
  },
  {
    "text": "the red lines here are data plan",
    "start": "56480",
    "end": "58399"
  },
  {
    "text": "communication you can see that envoy",
    "start": "58399",
    "end": "60079"
  },
  {
    "text": "intercepts all traffic in and out of the",
    "start": "60079",
    "end": "61520"
  },
  {
    "text": "application and manages communication",
    "start": "61520",
    "end": "63120"
  },
  {
    "text": "between the nodes",
    "start": "63120",
    "end": "64559"
  },
  {
    "text": "the blue lines are control plane",
    "start": "64559",
    "end": "66080"
  },
  {
    "text": "communication the envoy instances get",
    "start": "66080",
    "end": "67680"
  },
  {
    "text": "their configs from the xcs server so",
    "start": "67680",
    "end": "72080"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "what's the problem with this approach",
    "start": "72080",
    "end": "73280"
  },
  {
    "text": "why not support xds and grpc",
    "start": "73280",
    "end": "75680"
  },
  {
    "text": "well uh the proxy's add overhead um my",
    "start": "75680",
    "end": "78159"
  },
  {
    "text": "team did a",
    "start": "78159",
    "end": "78960"
  },
  {
    "text": "grpc benchmark comparing the proxy and",
    "start": "78960",
    "end": "80960"
  },
  {
    "text": "proxy list approach",
    "start": "80960",
    "end": "82159"
  },
  {
    "text": "which showed about a three times",
    "start": "82159",
    "end": "83280"
  },
  {
    "text": "improvement in queries per cpu second so",
    "start": "83280",
    "end": "85439"
  },
  {
    "text": "there's a significant cpu overhead to",
    "start": "85439",
    "end": "87040"
  },
  {
    "text": "running the proxies",
    "start": "87040",
    "end": "88080"
  },
  {
    "text": "um there's also a significant latency",
    "start": "88080",
    "end": "90320"
  },
  {
    "text": "improvement i don't have specific data",
    "start": "90320",
    "end": "91680"
  },
  {
    "text": "on that",
    "start": "91680",
    "end": "92320"
  },
  {
    "text": "uh istio does have some data that shows",
    "start": "92320",
    "end": "94159"
  },
  {
    "text": "that uh request latency is significantly",
    "start": "94159",
    "end": "96000"
  },
  {
    "text": "higher with",
    "start": "96000",
    "end": "96720"
  },
  {
    "text": "with the proxies although their",
    "start": "96720",
    "end": "98720"
  },
  {
    "text": "benchmark is not exactly the same",
    "start": "98720",
    "end": "100000"
  },
  {
    "text": "as the one that uh we did in grpc it's",
    "start": "100000",
    "end": "102000"
  },
  {
    "text": "not exactly the same scenario",
    "start": "102000",
    "end": "103600"
  },
  {
    "text": "um so it's it's a little bit of an apple",
    "start": "103600",
    "end": "105040"
  },
  {
    "text": "storage's comparison but it's the best",
    "start": "105040",
    "end": "106399"
  },
  {
    "text": "data that i have to share",
    "start": "106399",
    "end": "107520"
  },
  {
    "text": "uh but certainly i don't think anybody",
    "start": "107520",
    "end": "108880"
  },
  {
    "text": "would doubt that there is additional",
    "start": "108880",
    "end": "110079"
  },
  {
    "text": "latency by by adding those two hops for",
    "start": "110079",
    "end": "112000"
  },
  {
    "text": "all the communication",
    "start": "112000",
    "end": "114000"
  },
  {
    "text": "now for a lot of application for a lot",
    "start": "114000",
    "end": "116000"
  },
  {
    "text": "of applications it makes complete sense",
    "start": "116000",
    "end": "117680"
  },
  {
    "text": "to pay the cost of the",
    "start": "117680",
    "end": "119200"
  },
  {
    "text": "the overhead of the proxies right uh it",
    "start": "119200",
    "end": "121119"
  },
  {
    "text": "avoids having to implement the traffic",
    "start": "121119",
    "end": "123040"
  },
  {
    "text": "management features and control plane",
    "start": "123040",
    "end": "124399"
  },
  {
    "text": "integration in",
    "start": "124399",
    "end": "125280"
  },
  {
    "text": "the application and this is especially",
    "start": "125280",
    "end": "127040"
  },
  {
    "text": "true if there's a large number of",
    "start": "127040",
    "end": "128160"
  },
  {
    "text": "applications that are all going through",
    "start": "128160",
    "end": "129360"
  },
  {
    "text": "envoy right you'd have to pay that cost",
    "start": "129360",
    "end": "131039"
  },
  {
    "text": "multiple times of doing that",
    "start": "131039",
    "end": "132319"
  },
  {
    "text": "implementation for each of those",
    "start": "132319",
    "end": "133599"
  },
  {
    "text": "applications",
    "start": "133599",
    "end": "134560"
  },
  {
    "text": "um so it you know it does make a lot of",
    "start": "134560",
    "end": "136400"
  },
  {
    "text": "sense to uh to to do that for those",
    "start": "136400",
    "end": "138400"
  },
  {
    "text": "applications that you don't want to have",
    "start": "138400",
    "end": "139840"
  },
  {
    "text": "to",
    "start": "139840",
    "end": "140239"
  },
  {
    "text": "add these features to um uh separately",
    "start": "140239",
    "end": "143599"
  },
  {
    "text": "however uh by supporting these features",
    "start": "143599",
    "end": "145520"
  },
  {
    "text": "in grpc applications that use grpc can",
    "start": "145520",
    "end": "148160"
  },
  {
    "text": "get these features for free without the",
    "start": "148160",
    "end": "149920"
  },
  {
    "text": "cost of the proxies",
    "start": "149920",
    "end": "151760"
  },
  {
    "text": "um and so that's that's really the",
    "start": "151760",
    "end": "153200"
  },
  {
    "text": "motivation here",
    "start": "153200",
    "end": "154800"
  },
  {
    "text": "now i should note that we are you know",
    "start": "154800",
    "end": "157040"
  },
  {
    "text": "the motivation here is is not to try to",
    "start": "157040",
    "end": "158879"
  },
  {
    "text": "put envoy out of business right uh",
    "start": "158879",
    "end": "160800"
  },
  {
    "text": "we're not trying to replace envoy um",
    "start": "160800",
    "end": "162640"
  },
  {
    "text": "there's still going to be a whole bunch",
    "start": "162640",
    "end": "163680"
  },
  {
    "text": "of non-grpc applications that that will",
    "start": "163680",
    "end": "165840"
  },
  {
    "text": "need envoy",
    "start": "165840",
    "end": "166800"
  },
  {
    "text": "and uh frankly there are still going to",
    "start": "166800",
    "end": "168319"
  },
  {
    "text": "be you know a number of use cases where",
    "start": "168319",
    "end": "169760"
  },
  {
    "text": "it'll still make sense even for grpc",
    "start": "169760",
    "end": "171280"
  },
  {
    "text": "traffic to continue to go through envoy",
    "start": "171280",
    "end": "172959"
  },
  {
    "text": "so the goal here is really for envoy and",
    "start": "172959",
    "end": "174560"
  },
  {
    "text": "grpc to be able to coexist in the same",
    "start": "174560",
    "end": "176239"
  },
  {
    "text": "service mesh",
    "start": "176239",
    "end": "178800"
  },
  {
    "text": "so here's that same service mesh",
    "start": "178800",
    "end": "180159"
  },
  {
    "start": "179000",
    "end": "179000"
  },
  {
    "text": "topology diagram as before but this time",
    "start": "180159",
    "end": "181920"
  },
  {
    "text": "using proxilis grpc um instead of having",
    "start": "181920",
    "end": "184640"
  },
  {
    "text": "a sidecar proxy on each node the",
    "start": "184640",
    "end": "186400"
  },
  {
    "text": "application just links against grpc",
    "start": "186400",
    "end": "188319"
  },
  {
    "text": "and jpc directly provides the traffic",
    "start": "188319",
    "end": "190720"
  },
  {
    "text": "management features and the control",
    "start": "190720",
    "end": "191920"
  },
  {
    "text": "plane integration",
    "start": "191920",
    "end": "193040"
  },
  {
    "text": "uh by taking in the configuration from",
    "start": "193040",
    "end": "195440"
  },
  {
    "text": "xts so there's no need for the",
    "start": "195440",
    "end": "196800"
  },
  {
    "text": "for the sidecar proxy",
    "start": "196800",
    "end": "199840"
  },
  {
    "text": "all right let's talk about what changes",
    "start": "200720",
    "end": "202159"
  },
  {
    "text": "we needed to make in the xds apis to",
    "start": "202159",
    "end": "204159"
  },
  {
    "start": "204000",
    "end": "204000"
  },
  {
    "text": "make this work",
    "start": "204159",
    "end": "205760"
  },
  {
    "text": "now the xds apis were developed",
    "start": "205760",
    "end": "207599"
  },
  {
    "text": "specifically for envoy so they make the",
    "start": "207599",
    "end": "209680"
  },
  {
    "text": "obvious assumption that the client is",
    "start": "209680",
    "end": "211280"
  },
  {
    "text": "envoy",
    "start": "211280",
    "end": "212080"
  },
  {
    "text": "um and this caused some challenges for",
    "start": "212080",
    "end": "213760"
  },
  {
    "text": "us because not only is grpc not",
    "start": "213760",
    "end": "215760"
  },
  {
    "text": "envoy but it's not even a proxy right",
    "start": "215760",
    "end": "217519"
  },
  {
    "text": "it's a a client and a server",
    "start": "217519",
    "end": "219519"
  },
  {
    "text": "um now we've generally tried to minimize",
    "start": "219519",
    "end": "222799"
  },
  {
    "text": "the places where we needed to make",
    "start": "222799",
    "end": "223920"
  },
  {
    "text": "changes in the api to support grpc",
    "start": "223920",
    "end": "226000"
  },
  {
    "text": "uh for two reasons one we want to make",
    "start": "226000",
    "end": "228400"
  },
  {
    "text": "it really easy for existing envoy",
    "start": "228400",
    "end": "229760"
  },
  {
    "text": "service mesh users to make use of grpc",
    "start": "229760",
    "end": "231760"
  },
  {
    "text": "without having to like you know",
    "start": "231760",
    "end": "233200"
  },
  {
    "text": "duplicate all of their config you know",
    "start": "233200",
    "end": "234799"
  },
  {
    "text": "xcs configuration resources",
    "start": "234799",
    "end": "236560"
  },
  {
    "text": "um and also because we want to allow",
    "start": "236560",
    "end": "238319"
  },
  {
    "text": "grpc and envoy to easily coexist in the",
    "start": "238319",
    "end": "240080"
  },
  {
    "text": "same service mesh as i mentioned earlier",
    "start": "240080",
    "end": "241840"
  },
  {
    "text": "so the more that we can use the existing",
    "start": "241840",
    "end": "244480"
  },
  {
    "text": "infrastructure and leverage that rather",
    "start": "244480",
    "end": "245840"
  },
  {
    "text": "than having to create new stuff you know",
    "start": "245840",
    "end": "247360"
  },
  {
    "text": "the better so we really want to minimize",
    "start": "247360",
    "end": "248799"
  },
  {
    "text": "these changes",
    "start": "248799",
    "end": "250319"
  },
  {
    "text": "but there are two places where android",
    "start": "250319",
    "end": "252400"
  },
  {
    "text": "and grpc are sufficiently different that",
    "start": "252400",
    "end": "254080"
  },
  {
    "text": "we did have to make some changes and",
    "start": "254080",
    "end": "255360"
  },
  {
    "text": "we'll talk about each of those uh",
    "start": "255360",
    "end": "257280"
  },
  {
    "text": "here",
    "start": "257280",
    "end": "259440"
  },
  {
    "text": "the first thing we changed was the way",
    "start": "261600",
    "end": "262880"
  },
  {
    "text": "that the jrc client handles listener",
    "start": "262880",
    "end": "264400"
  },
  {
    "text": "resources",
    "start": "264400",
    "end": "265600"
  },
  {
    "text": "now as you probably know the main xds",
    "start": "265600",
    "end": "267280"
  },
  {
    "text": "apis are lds",
    "start": "267280",
    "end": "269040"
  },
  {
    "text": "rds cds and eds they're generally",
    "start": "269040",
    "end": "271440"
  },
  {
    "text": "chained together in that order",
    "start": "271440",
    "end": "272720"
  },
  {
    "text": "describing the path that request takes",
    "start": "272720",
    "end": "274240"
  },
  {
    "text": "as it moves through envoy",
    "start": "274240",
    "end": "276000"
  },
  {
    "text": "and it all starts with a listener",
    "start": "276000",
    "end": "277199"
  },
  {
    "text": "resource from lds which tells envoy what",
    "start": "277199",
    "end": "279440"
  },
  {
    "text": "pork to listen on",
    "start": "279440",
    "end": "280560"
  },
  {
    "text": "and that concept simply doesn't apply to",
    "start": "280560",
    "end": "282240"
  },
  {
    "text": "the jrpc client right the jvc client",
    "start": "282240",
    "end": "284160"
  },
  {
    "text": "doesn't listen on ports",
    "start": "284160",
    "end": "285680"
  },
  {
    "text": "it uh it you know is told by the",
    "start": "285680",
    "end": "288000"
  },
  {
    "text": "application you know",
    "start": "288000",
    "end": "288960"
  },
  {
    "text": "to send requests to to particular",
    "start": "288960",
    "end": "290880"
  },
  {
    "text": "virtual hosts",
    "start": "290880",
    "end": "293040"
  },
  {
    "text": "now when we're first looking at the xds",
    "start": "293040",
    "end": "295040"
  },
  {
    "text": "api trying to understand",
    "start": "295040",
    "end": "296080"
  },
  {
    "text": "it and trying to figure out how to make",
    "start": "296080",
    "end": "297040"
  },
  {
    "text": "it work for grpc our first attempt to",
    "start": "297040",
    "end": "299280"
  },
  {
    "text": "build a mental model was sort of okay",
    "start": "299280",
    "end": "301199"
  },
  {
    "text": "let's figure out which parts of the api",
    "start": "301199",
    "end": "303039"
  },
  {
    "text": "apply out of the server and which parts",
    "start": "303039",
    "end": "304639"
  },
  {
    "text": "apply to the client and we'll you know",
    "start": "304639",
    "end": "306160"
  },
  {
    "text": "use those in the appropriate places",
    "start": "306160",
    "end": "307600"
  },
  {
    "text": "we thought well okay maybe lds and rds",
    "start": "307600",
    "end": "310479"
  },
  {
    "text": "are really about configuring incoming",
    "start": "310479",
    "end": "312080"
  },
  {
    "text": "requests so we'd use those on the grpc",
    "start": "312080",
    "end": "313840"
  },
  {
    "text": "server",
    "start": "313840",
    "end": "314560"
  },
  {
    "text": "and cds and eds are configuring outgoing",
    "start": "314560",
    "end": "317600"
  },
  {
    "text": "requests so we use those on the grc",
    "start": "317600",
    "end": "319440"
  },
  {
    "text": "client",
    "start": "319440",
    "end": "321280"
  },
  {
    "text": "so it turns out this doesn't actually",
    "start": "321280",
    "end": "322639"
  },
  {
    "text": "work um most of the configuration that",
    "start": "322639",
    "end": "324960"
  },
  {
    "text": "we actually need that's really",
    "start": "324960",
    "end": "326479"
  },
  {
    "text": "interesting to configure things on the",
    "start": "326479",
    "end": "327759"
  },
  {
    "text": "grp's client is actually in lds and rds",
    "start": "327759",
    "end": "330560"
  },
  {
    "text": "uh this is things like um you know",
    "start": "330560",
    "end": "332720"
  },
  {
    "text": "traffic splitting retries timeouts that",
    "start": "332720",
    "end": "334880"
  },
  {
    "text": "sort of thing things that we really do",
    "start": "334880",
    "end": "336000"
  },
  {
    "text": "want to set on the client",
    "start": "336000",
    "end": "337520"
  },
  {
    "text": "um but they're in lds and rds so we were",
    "start": "337520",
    "end": "340720"
  },
  {
    "text": "talking with the",
    "start": "340720",
    "end": "341600"
  },
  {
    "text": "the envoy folks and trying to figure out",
    "start": "341600",
    "end": "343039"
  },
  {
    "text": "you know what the right way to model",
    "start": "343039",
    "end": "344320"
  },
  {
    "text": "this was",
    "start": "344320",
    "end": "344880"
  },
  {
    "text": "and matt claine suggested a new approach",
    "start": "344880",
    "end": "346400"
  },
  {
    "text": "which is something called an api",
    "start": "346400",
    "end": "347680"
  },
  {
    "text": "listener",
    "start": "347680",
    "end": "350080"
  },
  {
    "start": "350000",
    "end": "350000"
  },
  {
    "text": "so what is an api listener the idea here",
    "start": "350720",
    "end": "354560"
  },
  {
    "text": "is to generalize the concept of a",
    "start": "354560",
    "end": "356160"
  },
  {
    "text": "listener",
    "start": "356160",
    "end": "356639"
  },
  {
    "text": "such that there are different types of",
    "start": "356639",
    "end": "358160"
  },
  {
    "text": "listeners and each type of listener",
    "start": "358160",
    "end": "360000"
  },
  {
    "text": "configures a different type of interface",
    "start": "360000",
    "end": "361440"
  },
  {
    "text": "for the application",
    "start": "361440",
    "end": "362639"
  },
  {
    "text": "so you'd have two main classes of",
    "start": "362639",
    "end": "364000"
  },
  {
    "text": "listeners you'd have your existing",
    "start": "364000",
    "end": "365360"
  },
  {
    "text": "socket listeners",
    "start": "365360",
    "end": "366400"
  },
  {
    "text": "like the tcp and udp listeners which",
    "start": "366400",
    "end": "368560"
  },
  {
    "text": "basically configure",
    "start": "368560",
    "end": "369520"
  },
  {
    "text": "a tcp or udp socket for the application",
    "start": "369520",
    "end": "371919"
  },
  {
    "text": "to use",
    "start": "371919",
    "end": "372639"
  },
  {
    "text": "or you have api listeners which will",
    "start": "372639",
    "end": "374160"
  },
  {
    "text": "configure some sort of api for the",
    "start": "374160",
    "end": "375600"
  },
  {
    "text": "application to use",
    "start": "375600",
    "end": "376800"
  },
  {
    "text": "um and the one type of api listener that",
    "start": "376800",
    "end": "378639"
  },
  {
    "text": "we've added is an http api listener",
    "start": "378639",
    "end": "380560"
  },
  {
    "text": "which configures an api",
    "start": "380560",
    "end": "381759"
  },
  {
    "text": "with http like semantics this includes",
    "start": "381759",
    "end": "384400"
  },
  {
    "text": "the grpc api which is basically a subset",
    "start": "384400",
    "end": "386960"
  },
  {
    "text": "of",
    "start": "386960",
    "end": "387520"
  },
  {
    "text": "http functionality because the jrpc",
    "start": "387520",
    "end": "390400"
  },
  {
    "text": "protocol is actually built on http 2.",
    "start": "390400",
    "end": "393039"
  },
  {
    "text": "um the hp api listener should be noted",
    "start": "393039",
    "end": "395280"
  },
  {
    "text": "is also intended to be it's not jpc",
    "start": "395280",
    "end": "397120"
  },
  {
    "text": "specific it's intended to be used by",
    "start": "397120",
    "end": "398400"
  },
  {
    "text": "envoy mobile in the future",
    "start": "398400",
    "end": "399759"
  },
  {
    "text": "and there could be other you know http",
    "start": "399759",
    "end": "401600"
  },
  {
    "text": "you know xcs aware clients that might",
    "start": "401600",
    "end": "403039"
  },
  {
    "text": "use it in the future as well",
    "start": "403039",
    "end": "405520"
  },
  {
    "text": "uh you could also have other types of",
    "start": "405520",
    "end": "407199"
  },
  {
    "text": "api listeners in the future uh for",
    "start": "407199",
    "end": "408880"
  },
  {
    "text": "example",
    "start": "408880",
    "end": "409520"
  },
  {
    "text": "um you know it's easy to imagine that",
    "start": "409520",
    "end": "411360"
  },
  {
    "text": "there could be an sql api listener that",
    "start": "411360",
    "end": "413120"
  },
  {
    "text": "would configure some sort of",
    "start": "413120",
    "end": "414479"
  },
  {
    "text": "of sql based api",
    "start": "414479",
    "end": "417680"
  },
  {
    "text": "uh for for an sql for an xds aware sql",
    "start": "417680",
    "end": "420880"
  },
  {
    "text": "client",
    "start": "420880",
    "end": "423280"
  },
  {
    "text": "now the configuration of an http api",
    "start": "423280",
    "end": "425199"
  },
  {
    "text": "listener",
    "start": "425199",
    "end": "426400"
  },
  {
    "text": "is a subset of the socket listener",
    "start": "426400",
    "end": "428240"
  },
  {
    "text": "configuration",
    "start": "428240",
    "end": "429440"
  },
  {
    "text": "so a socket listener primarily contains",
    "start": "429440",
    "end": "431280"
  },
  {
    "text": "a list of l3 l4",
    "start": "431280",
    "end": "432800"
  },
  {
    "text": "filters where the http connection",
    "start": "432800",
    "end": "435360"
  },
  {
    "text": "manager filter is the last",
    "start": "435360",
    "end": "436960"
  },
  {
    "text": "uh filter in the l3 l4 filter chain and",
    "start": "436960",
    "end": "439599"
  },
  {
    "text": "then it's",
    "start": "439599",
    "end": "440240"
  },
  {
    "text": "that's where all the l7 functionality is",
    "start": "440240",
    "end": "442479"
  },
  {
    "text": "is configured",
    "start": "442479",
    "end": "443759"
  },
  {
    "text": "but in the case of an hp api listener we",
    "start": "443759",
    "end": "445440"
  },
  {
    "text": "don't need any of the l3 or l4",
    "start": "445440",
    "end": "446800"
  },
  {
    "text": "functionality we just need the l7 stuff",
    "start": "446800",
    "end": "448960"
  },
  {
    "text": "so an hp api listener's configuration is",
    "start": "448960",
    "end": "450960"
  },
  {
    "text": "essentially just the configuration for",
    "start": "450960",
    "end": "452560"
  },
  {
    "text": "the http",
    "start": "452560",
    "end": "453360"
  },
  {
    "text": "can http connection manager filter",
    "start": "453360",
    "end": "457680"
  },
  {
    "start": "459000",
    "end": "459000"
  },
  {
    "text": "now the the second change other than",
    "start": "459919",
    "end": "461680"
  },
  {
    "text": "introducing an api listener",
    "start": "461680",
    "end": "463039"
  },
  {
    "text": "the second change that we made for grpc",
    "start": "463039",
    "end": "465199"
  },
  {
    "text": "and xds is related to the special way in",
    "start": "465199",
    "end": "467199"
  },
  {
    "text": "which envoy uses",
    "start": "467199",
    "end": "468319"
  },
  {
    "text": "lds and cds envoy uses those two apis",
    "start": "468319",
    "end": "472479"
  },
  {
    "text": "differently than it uses the other xds",
    "start": "472479",
    "end": "474080"
  },
  {
    "text": "apis",
    "start": "474080",
    "end": "475120"
  },
  {
    "text": "uh and this special behavior doesn't",
    "start": "475120",
    "end": "476479"
  },
  {
    "text": "really make sense for grpc",
    "start": "476479",
    "end": "478240"
  },
  {
    "text": "so the the general xds flow for envoy is",
    "start": "478240",
    "end": "480639"
  },
  {
    "text": "when it starts up it immediately sends",
    "start": "480639",
    "end": "482400"
  },
  {
    "text": "both an lds and a cds query in parallel",
    "start": "482400",
    "end": "485120"
  },
  {
    "text": "uh these basically act as sort of dual",
    "start": "485120",
    "end": "487440"
  },
  {
    "text": "routes for on voice configuration right",
    "start": "487440",
    "end": "489199"
  },
  {
    "text": "all of the other resources are sort of",
    "start": "489199",
    "end": "490639"
  },
  {
    "text": "chained out from the listener and",
    "start": "490639",
    "end": "491759"
  },
  {
    "text": "cluster resources",
    "start": "491759",
    "end": "492800"
  },
  {
    "text": "so for example when envoy receives the",
    "start": "492800",
    "end": "494800"
  },
  {
    "text": "lds response that tells it what rds",
    "start": "494800",
    "end": "496879"
  },
  {
    "text": "resources it needs so it goes and",
    "start": "496879",
    "end": "498080"
  },
  {
    "text": "requests those resources by name",
    "start": "498080",
    "end": "500000"
  },
  {
    "text": "similarly when it receives the cds",
    "start": "500000",
    "end": "501440"
  },
  {
    "text": "response that tells it what eds",
    "start": "501440",
    "end": "502960"
  },
  {
    "text": "resources it needs and it goes and",
    "start": "502960",
    "end": "504000"
  },
  {
    "text": "requests those by name",
    "start": "504000",
    "end": "505360"
  },
  {
    "text": "um and all of the other ancillary xds",
    "start": "505360",
    "end": "507039"
  },
  {
    "text": "apis work the same way as rds and eds",
    "start": "507039",
    "end": "508879"
  },
  {
    "text": "right for example vhds",
    "start": "508879",
    "end": "510560"
  },
  {
    "text": "is chained off of rds and again envoy",
    "start": "510560",
    "end": "513039"
  },
  {
    "text": "asks for the specific resources it needs",
    "start": "513039",
    "end": "514399"
  },
  {
    "text": "by name",
    "start": "514399",
    "end": "515200"
  },
  {
    "text": "so the only two apis that are really",
    "start": "515200",
    "end": "516800"
  },
  {
    "text": "special here are lds and cds the rest of",
    "start": "516800",
    "end": "518880"
  },
  {
    "text": "them are all quite uniform",
    "start": "518880",
    "end": "520320"
  },
  {
    "text": "and lds and cds are special in sort of",
    "start": "520320",
    "end": "522159"
  },
  {
    "text": "two main ways number one",
    "start": "522159",
    "end": "524159"
  },
  {
    "text": "um instead of asking for the specific",
    "start": "524159",
    "end": "525839"
  },
  {
    "text": "resources that it needs by name envoy",
    "start": "525839",
    "end": "527360"
  },
  {
    "text": "makes what we call a wildcard query",
    "start": "527360",
    "end": "529360"
  },
  {
    "text": "uh this is represented as a request",
    "start": "529360",
    "end": "531279"
  },
  {
    "text": "where the resource names list is empty",
    "start": "531279",
    "end": "533040"
  },
  {
    "text": "in other words the client is not",
    "start": "533040",
    "end": "534000"
  },
  {
    "text": "telling the server here are the specific",
    "start": "534000",
    "end": "535760"
  },
  {
    "text": "resources i need it's instead saying",
    "start": "535760",
    "end": "537839"
  },
  {
    "text": "i don't know what i need you tell me and",
    "start": "537839",
    "end": "539760"
  },
  {
    "text": "the server is expected to sort of",
    "start": "539760",
    "end": "541040"
  },
  {
    "text": "magically figure out what resources are",
    "start": "541040",
    "end": "542720"
  },
  {
    "text": "appropriate to send to the client",
    "start": "542720",
    "end": "544399"
  },
  {
    "text": "typically based on the client's node",
    "start": "544399",
    "end": "545760"
  },
  {
    "text": "identity and then it just sends a whole",
    "start": "545760",
    "end": "547839"
  },
  {
    "text": "bunch of resources to the client and",
    "start": "547839",
    "end": "549200"
  },
  {
    "text": "whatever it sends is what the client",
    "start": "549200",
    "end": "550399"
  },
  {
    "text": "will use",
    "start": "550399",
    "end": "551760"
  },
  {
    "text": "um and the other way in which lds and",
    "start": "551760",
    "end": "554480"
  },
  {
    "text": "cds are special is that envoy",
    "start": "554480",
    "end": "556000"
  },
  {
    "text": "automatically makes both of those calls",
    "start": "556000",
    "end": "557440"
  },
  {
    "text": "at startup",
    "start": "557440",
    "end": "558399"
  },
  {
    "text": "um this kind of makes sense for envoy",
    "start": "558399",
    "end": "559920"
  },
  {
    "text": "because as a proxy you know not",
    "start": "559920",
    "end": "561519"
  },
  {
    "text": "something that's built into the",
    "start": "561519",
    "end": "562399"
  },
  {
    "text": "application",
    "start": "562399",
    "end": "563120"
  },
  {
    "text": "envoy can't have any way of knowing a",
    "start": "563120",
    "end": "565360"
  },
  {
    "text": "priori",
    "start": "565360",
    "end": "566240"
  },
  {
    "text": "what ports to listen on or what upstream",
    "start": "566240",
    "end": "567920"
  },
  {
    "text": "clusters it may need to talk to",
    "start": "567920",
    "end": "569519"
  },
  {
    "text": "um and so it needs to know about",
    "start": "569519",
    "end": "570720"
  },
  {
    "text": "everything it might ever need so uh you",
    "start": "570720",
    "end": "572959"
  },
  {
    "text": "know so so making these queries up front",
    "start": "572959",
    "end": "574640"
  },
  {
    "text": "sort of makes sense for envoy",
    "start": "574640",
    "end": "576800"
  },
  {
    "text": "but it doesn't really make sense for",
    "start": "576800",
    "end": "578000"
  },
  {
    "text": "grpc right um jrpc is built into the",
    "start": "578000",
    "end": "580880"
  },
  {
    "text": "application",
    "start": "580880",
    "end": "581680"
  },
  {
    "text": "and when the application creates a jrpc",
    "start": "581680",
    "end": "584800"
  },
  {
    "text": "client channel",
    "start": "584800",
    "end": "585600"
  },
  {
    "text": "it creates the channel to a particular",
    "start": "585600",
    "end": "587360"
  },
  {
    "text": "virtual host so the application knows",
    "start": "587360",
    "end": "589360"
  },
  {
    "text": "exactly what virtualist it's going to be",
    "start": "589360",
    "end": "590800"
  },
  {
    "text": "talked to and",
    "start": "590800",
    "end": "591920"
  },
  {
    "text": "going to be talking to and it knows it's",
    "start": "591920",
    "end": "593200"
  },
  {
    "text": "not going to need anything other than",
    "start": "593200",
    "end": "594720"
  },
  {
    "text": "that",
    "start": "594720",
    "end": "595120"
  },
  {
    "text": "so we don't really want to send the",
    "start": "595120",
    "end": "596320"
  },
  {
    "text": "client info for virtual hosts that it's",
    "start": "596320",
    "end": "597760"
  },
  {
    "text": "never going to use",
    "start": "597760",
    "end": "598959"
  },
  {
    "text": "so in grpc the xds api flow is a little",
    "start": "598959",
    "end": "601120"
  },
  {
    "text": "bit more linear",
    "start": "601120",
    "end": "602240"
  },
  {
    "text": "when the application creates a channel",
    "start": "602240",
    "end": "603519"
  },
  {
    "text": "to a virtual host uh in this case uh",
    "start": "603519",
    "end": "606040"
  },
  {
    "text": "server.example.com um",
    "start": "606040",
    "end": "608720"
  },
  {
    "text": "the uh that triggers grpc to go and make",
    "start": "608720",
    "end": "611839"
  },
  {
    "text": "an lds request for a resource of the",
    "start": "611839",
    "end": "613839"
  },
  {
    "text": "same name",
    "start": "613839",
    "end": "614800"
  },
  {
    "text": "and this resource will be an http api",
    "start": "614800",
    "end": "617519"
  },
  {
    "text": "listener",
    "start": "617519",
    "end": "618480"
  },
  {
    "text": "and it acts as basically a single route",
    "start": "618480",
    "end": "620000"
  },
  {
    "text": "for jrpc's configuration",
    "start": "620000",
    "end": "621519"
  },
  {
    "text": "and everything else is chained off of",
    "start": "621519",
    "end": "622800"
  },
  {
    "text": "there so the lds resource tells us what",
    "start": "622800",
    "end": "624399"
  },
  {
    "text": "rds resources we need",
    "start": "624399",
    "end": "625760"
  },
  {
    "text": "the rds resource tells us what cds",
    "start": "625760",
    "end": "627519"
  },
  {
    "text": "resources we need the cds resources tell",
    "start": "627519",
    "end": "629600"
  },
  {
    "text": "us what eds resources we need",
    "start": "629600",
    "end": "631279"
  },
  {
    "text": "so in effect uh jrpc uses lds and cs",
    "start": "631279",
    "end": "634240"
  },
  {
    "text": "exactly the same way as the other xds",
    "start": "634240",
    "end": "635839"
  },
  {
    "text": "apis it doesn't do the special stuff",
    "start": "635839",
    "end": "637279"
  },
  {
    "text": "that envoy does right",
    "start": "637279",
    "end": "638640"
  },
  {
    "text": "we request the specific resources we",
    "start": "638640",
    "end": "640079"
  },
  {
    "text": "want instead of making wild card",
    "start": "640079",
    "end": "641360"
  },
  {
    "text": "requests",
    "start": "641360",
    "end": "642000"
  },
  {
    "text": "and we don't proactively make lds and",
    "start": "642000",
    "end": "643839"
  },
  {
    "text": "cds requests at startup",
    "start": "643839",
    "end": "645279"
  },
  {
    "text": "the lds requests happen when the client",
    "start": "645279",
    "end": "647519"
  },
  {
    "text": "creates a channel",
    "start": "647519",
    "end": "648399"
  },
  {
    "text": "and the cds requests happen when we get",
    "start": "648399",
    "end": "650160"
  },
  {
    "text": "an rds response",
    "start": "650160",
    "end": "653040"
  },
  {
    "text": "all right so we've talked about what",
    "start": "653920",
    "end": "655360"
  },
  {
    "text": "changes we made to the api to support",
    "start": "655360",
    "end": "657519"
  },
  {
    "text": "non-proxy clients",
    "start": "657519",
    "end": "658640"
  },
  {
    "text": "let's talk about a couple of other",
    "start": "658640",
    "end": "659760"
  },
  {
    "text": "gotchas that we ran into related to the",
    "start": "659760",
    "end": "661519"
  },
  {
    "start": "661000",
    "end": "661000"
  },
  {
    "text": "transport protocol",
    "start": "661519",
    "end": "664079"
  },
  {
    "text": "now very simple xds servers um",
    "start": "664079",
    "end": "667519"
  },
  {
    "text": "the simplest possible xds server",
    "start": "667519",
    "end": "669200"
  },
  {
    "text": "implementation is to basically just say",
    "start": "669200",
    "end": "671519"
  },
  {
    "text": "okay when the client makes a request for",
    "start": "671519",
    "end": "674399"
  },
  {
    "text": "a given resource type i'm just going to",
    "start": "674399",
    "end": "675920"
  },
  {
    "text": "send it every resource i know of of that",
    "start": "675920",
    "end": "678160"
  },
  {
    "text": "type",
    "start": "678160",
    "end": "678720"
  },
  {
    "text": "whether or not it needs it i don't care",
    "start": "678720",
    "end": "680240"
  },
  {
    "text": "i'm just sending it all those resources",
    "start": "680240",
    "end": "682000"
  },
  {
    "text": "right",
    "start": "682000",
    "end": "682560"
  },
  {
    "text": "um and if you do that um you can",
    "start": "682560",
    "end": "684480"
  },
  {
    "text": "actually get away with that and that",
    "start": "684480",
    "end": "685360"
  },
  {
    "text": "should work",
    "start": "685360",
    "end": "685920"
  },
  {
    "text": "pretty much fine with grpc um but",
    "start": "685920",
    "end": "689360"
  },
  {
    "text": "it turns out that for protocols other",
    "start": "689360",
    "end": "691200"
  },
  {
    "text": "than lds and cds",
    "start": "691200",
    "end": "692959"
  },
  {
    "text": "uh the xcs api the transport protocol is",
    "start": "692959",
    "end": "695680"
  },
  {
    "text": "actually designed such that the server",
    "start": "695680",
    "end": "696880"
  },
  {
    "text": "really",
    "start": "696880",
    "end": "697680"
  },
  {
    "text": "only has to send resources when they've",
    "start": "697680",
    "end": "699680"
  },
  {
    "text": "changed so",
    "start": "699680",
    "end": "700959"
  },
  {
    "text": "if you you know if the client is",
    "start": "700959",
    "end": "702560"
  },
  {
    "text": "subscribing to you know",
    "start": "702560",
    "end": "704079"
  },
  {
    "text": "four different rds resources and only",
    "start": "704079",
    "end": "705920"
  },
  {
    "text": "one of them is change the server really",
    "start": "705920",
    "end": "707600"
  },
  {
    "text": "only has to send the one that's changed",
    "start": "707600",
    "end": "708880"
  },
  {
    "text": "it doesn't have to resend the other",
    "start": "708880",
    "end": "710000"
  },
  {
    "text": "three",
    "start": "710000",
    "end": "711680"
  },
  {
    "text": "now in jrpc we try to make things easy",
    "start": "711680",
    "end": "714480"
  },
  {
    "text": "so that we can work with these very",
    "start": "714480",
    "end": "715760"
  },
  {
    "text": "simple xds servers",
    "start": "715760",
    "end": "717200"
  },
  {
    "text": "by saying that you know even though",
    "start": "717200",
    "end": "718320"
  },
  {
    "text": "we're requesting the specific resources",
    "start": "718320",
    "end": "719920"
  },
  {
    "text": "that we need",
    "start": "719920",
    "end": "720720"
  },
  {
    "text": "we're going to ignore any resource that",
    "start": "720720",
    "end": "722320"
  },
  {
    "text": "we receive that wasn't one of the ones",
    "start": "722320",
    "end": "723839"
  },
  {
    "text": "that we asked for",
    "start": "723839",
    "end": "724800"
  },
  {
    "text": "right um which is fine that works pretty",
    "start": "724800",
    "end": "726880"
  },
  {
    "text": "well but there are a couple of",
    "start": "726880",
    "end": "727920"
  },
  {
    "text": "implications about this that you need to",
    "start": "727920",
    "end": "729120"
  },
  {
    "text": "be aware of",
    "start": "729120",
    "end": "730079"
  },
  {
    "text": "if you're if your management server is",
    "start": "730079",
    "end": "731920"
  },
  {
    "text": "trying to be more intelligent and only",
    "start": "731920",
    "end": "733200"
  },
  {
    "text": "send things that have changed right",
    "start": "733200",
    "end": "734880"
  },
  {
    "text": "um so number one the client doesn't um",
    "start": "734880",
    "end": "738000"
  },
  {
    "text": "uh doesn't validate the resources that",
    "start": "738000",
    "end": "740320"
  },
  {
    "text": "it's going to ignore so even if they're",
    "start": "740320",
    "end": "741600"
  },
  {
    "text": "invalid jrpc is not going to knack them",
    "start": "741600",
    "end": "744000"
  },
  {
    "text": "and number two jrc is not going to cache",
    "start": "744000",
    "end": "745760"
  },
  {
    "text": "these resources right if",
    "start": "745760",
    "end": "747120"
  },
  {
    "text": "if the if which means that if a resource",
    "start": "747120",
    "end": "748959"
  },
  {
    "text": "is requested later",
    "start": "748959",
    "end": "750480"
  },
  {
    "text": "um the server must resend it even if it",
    "start": "750480",
    "end": "752160"
  },
  {
    "text": "thinks the client has already seen it",
    "start": "752160",
    "end": "753600"
  },
  {
    "text": "right so to take an example here let's",
    "start": "753600",
    "end": "756240"
  },
  {
    "text": "say that initially the client is only",
    "start": "756240",
    "end": "757920"
  },
  {
    "text": "requesting resource a but the server",
    "start": "757920",
    "end": "759519"
  },
  {
    "text": "decides to send it resources a",
    "start": "759519",
    "end": "761040"
  },
  {
    "text": "and b later on if the client requests a",
    "start": "761040",
    "end": "764160"
  },
  {
    "text": "and b the server needs to resend b",
    "start": "764160",
    "end": "766800"
  },
  {
    "text": "instead of assuming the client already",
    "start": "766800",
    "end": "768079"
  },
  {
    "text": "has it even if b hasn't changed right so",
    "start": "768079",
    "end": "770079"
  },
  {
    "text": "the client has to be aware",
    "start": "770079",
    "end": "771360"
  },
  {
    "text": "sorry the server has to be aware of what",
    "start": "771360",
    "end": "773200"
  },
  {
    "text": "the client has actually subscribed to",
    "start": "773200",
    "end": "774880"
  },
  {
    "text": "and make sure that it's sending it you",
    "start": "774880",
    "end": "776399"
  },
  {
    "text": "know what it needs when it requests it",
    "start": "776399",
    "end": "778320"
  },
  {
    "text": "um this isn't much of an issue for lds",
    "start": "778320",
    "end": "779920"
  },
  {
    "text": "and cds since they actually require that",
    "start": "779920",
    "end": "781600"
  },
  {
    "text": "that all resources are present in",
    "start": "781600",
    "end": "783440"
  },
  {
    "text": "every response anyway but for uh rds eds",
    "start": "783440",
    "end": "786720"
  },
  {
    "text": "and all the other apis",
    "start": "786720",
    "end": "788240"
  },
  {
    "text": "because the server can send only those",
    "start": "788240",
    "end": "789519"
  },
  {
    "text": "resources that have changed this is",
    "start": "789519",
    "end": "791200"
  },
  {
    "text": "something that you have to watch out for",
    "start": "791200",
    "end": "794399"
  },
  {
    "start": "794000",
    "end": "794000"
  },
  {
    "text": "unsubscription is also kind of",
    "start": "796399",
    "end": "797680"
  },
  {
    "text": "interesting when the client is no longer",
    "start": "797680",
    "end": "799519"
  },
  {
    "text": "interested in a resource that can",
    "start": "799519",
    "end": "800639"
  },
  {
    "text": "unsubscribe it does this by",
    "start": "800639",
    "end": "802959"
  },
  {
    "text": "uh sending a new request with the",
    "start": "802959",
    "end": "804720"
  },
  {
    "text": "resource name no longer present in the",
    "start": "804720",
    "end": "806399"
  },
  {
    "text": "request",
    "start": "806399",
    "end": "807200"
  },
  {
    "text": "so for example if the client previously",
    "start": "807200",
    "end": "809120"
  },
  {
    "text": "sent a request for both a",
    "start": "809120",
    "end": "810399"
  },
  {
    "text": "and b and now it wants to unsubscribe to",
    "start": "810399",
    "end": "812320"
  },
  {
    "text": "b it'll send a new request that includes",
    "start": "812320",
    "end": "814399"
  },
  {
    "text": "only a",
    "start": "814399",
    "end": "815920"
  },
  {
    "text": "now there's an edge case here which is",
    "start": "815920",
    "end": "817200"
  },
  {
    "text": "sort of interesting which is what if",
    "start": "817200",
    "end": "819440"
  },
  {
    "text": "the client is subscribed to only one",
    "start": "819440",
    "end": "821040"
  },
  {
    "text": "resource of a particular type and it",
    "start": "821040",
    "end": "822399"
  },
  {
    "text": "wants to unsubscribe",
    "start": "822399",
    "end": "823600"
  },
  {
    "text": "well so then it's going to send a",
    "start": "823600",
    "end": "824560"
  },
  {
    "text": "request where the research the resource",
    "start": "824560",
    "end": "826560"
  },
  {
    "text": "names",
    "start": "826560",
    "end": "827279"
  },
  {
    "text": "list in the request is empty which is",
    "start": "827279",
    "end": "829519"
  },
  {
    "text": "actually exalted the same way that",
    "start": "829519",
    "end": "831199"
  },
  {
    "text": "it's exactly the same way that the",
    "start": "831199",
    "end": "833120"
  },
  {
    "text": "protocol indicates these wild card",
    "start": "833120",
    "end": "834639"
  },
  {
    "text": "queries that envoy uses for",
    "start": "834639",
    "end": "836000"
  },
  {
    "text": "lds and cds so the answer is that a",
    "start": "836000",
    "end": "839760"
  },
  {
    "text": "the way you deal with this is that a",
    "start": "839760",
    "end": "840800"
  },
  {
    "text": "request with no resource names is",
    "start": "840800",
    "end": "842160"
  },
  {
    "text": "interpreted as a wildcard query only on",
    "start": "842160",
    "end": "844160"
  },
  {
    "text": "the first request for that resource type",
    "start": "844160",
    "end": "845680"
  },
  {
    "text": "on a stream",
    "start": "845680",
    "end": "846560"
  },
  {
    "text": "so the decision to use wildcard query",
    "start": "846560",
    "end": "848000"
  },
  {
    "text": "can only be made at the beginning of a",
    "start": "848000",
    "end": "849120"
  },
  {
    "text": "stream",
    "start": "849120",
    "end": "849680"
  },
  {
    "text": "uh if a client has previously sent a",
    "start": "849680",
    "end": "851199"
  },
  {
    "text": "request with none empty resource names",
    "start": "851199",
    "end": "852959"
  },
  {
    "text": "list",
    "start": "852959",
    "end": "853440"
  },
  {
    "text": "a subsequent request with an empty list",
    "start": "853440",
    "end": "855199"
  },
  {
    "text": "means unsubscribe to all it does not",
    "start": "855199",
    "end": "856880"
  },
  {
    "text": "mean wild card",
    "start": "856880",
    "end": "857839"
  },
  {
    "text": "so management servers need to be careful",
    "start": "857839",
    "end": "859120"
  },
  {
    "text": "to get this right",
    "start": "859120",
    "end": "861760"
  },
  {
    "start": "862000",
    "end": "862000"
  },
  {
    "text": "um there are a lot more gotchas in the",
    "start": "862720",
    "end": "864959"
  },
  {
    "text": "transport protocol that we ran into as",
    "start": "864959",
    "end": "866560"
  },
  {
    "text": "we were trying to to",
    "start": "866560",
    "end": "867920"
  },
  {
    "text": "understand it there were actually quite",
    "start": "867920",
    "end": "869040"
  },
  {
    "text": "a few edge cases and and you know",
    "start": "869040",
    "end": "870800"
  },
  {
    "text": "interesting things that are",
    "start": "870800",
    "end": "872079"
  },
  {
    "text": "uh that are sort of um emergent behavior",
    "start": "872079",
    "end": "874560"
  },
  {
    "text": "of of",
    "start": "874560",
    "end": "875199"
  },
  {
    "text": "uh some things that have been put in the",
    "start": "875199",
    "end": "876320"
  },
  {
    "text": "protocol um so i",
    "start": "876320",
    "end": "878320"
  },
  {
    "text": "i'm not gonna cover them all here i",
    "start": "878320",
    "end": "879440"
  },
  {
    "text": "don't have time to get into all of them",
    "start": "879440",
    "end": "880720"
  },
  {
    "text": "unfortunately but",
    "start": "880720",
    "end": "881600"
  },
  {
    "text": "uh what i did do is as we ran into these",
    "start": "881600",
    "end": "883760"
  },
  {
    "text": "we worked with the envoy community to",
    "start": "883760",
    "end": "886160"
  },
  {
    "text": "update the xds documentation to explain",
    "start": "886160",
    "end": "888720"
  },
  {
    "text": "how how these various edge cases are",
    "start": "888720",
    "end": "890399"
  },
  {
    "text": "supposed to work",
    "start": "890399",
    "end": "891360"
  },
  {
    "text": "uh and how clients and servers are",
    "start": "891360",
    "end": "892639"
  },
  {
    "text": "supposed to uh to react when they",
    "start": "892639",
    "end": "894320"
  },
  {
    "text": "encounter them",
    "start": "894320",
    "end": "895040"
  },
  {
    "text": "so for anybody writing your own xds",
    "start": "895040",
    "end": "896560"
  },
  {
    "text": "server i strongly or or just client for",
    "start": "896560",
    "end": "898480"
  },
  {
    "text": "that matter i strongly encourage you to",
    "start": "898480",
    "end": "900160"
  },
  {
    "text": "uh to read the xds spec we've got a lot",
    "start": "900160",
    "end": "901839"
  },
  {
    "text": "of good information in there about how",
    "start": "901839",
    "end": "903120"
  },
  {
    "text": "to handle these various edge cases",
    "start": "903120",
    "end": "904560"
  },
  {
    "text": "and if anything is unclear you can",
    "start": "904560",
    "end": "905839"
  },
  {
    "text": "inquire about it and we can clarify the",
    "start": "905839",
    "end": "907199"
  },
  {
    "text": "documentation even further",
    "start": "907199",
    "end": "910399"
  },
  {
    "text": "all right so let's talk about what um uh",
    "start": "910560",
    "end": "913519"
  },
  {
    "text": "what a management server needs to do to",
    "start": "913519",
    "end": "914959"
  },
  {
    "text": "support grpc",
    "start": "914959",
    "end": "917760"
  },
  {
    "start": "916000",
    "end": "916000"
  },
  {
    "text": "imagine that you have this existing",
    "start": "917760",
    "end": "918880"
  },
  {
    "text": "configuration for use with envoy uh",
    "start": "918880",
    "end": "920880"
  },
  {
    "text": "we've got a tcp listener resource that's",
    "start": "920880",
    "end": "922880"
  },
  {
    "text": "pointing to a route configuration and",
    "start": "922880",
    "end": "924160"
  },
  {
    "text": "that route configuration defines three",
    "start": "924160",
    "end": "925839"
  },
  {
    "text": "virtual hosts",
    "start": "925839",
    "end": "927120"
  },
  {
    "text": "and let's say that you've got grpc",
    "start": "927120",
    "end": "928560"
  },
  {
    "text": "traffic that's currently going through",
    "start": "928560",
    "end": "929759"
  },
  {
    "text": "envoy to those virtual hosts",
    "start": "929759",
    "end": "931440"
  },
  {
    "text": "and now you want to switch to proxy list",
    "start": "931440",
    "end": "932800"
  },
  {
    "text": "grpc how do you do it",
    "start": "932800",
    "end": "935759"
  },
  {
    "text": "so to do that you need to add an http",
    "start": "935759",
    "end": "937759"
  },
  {
    "text": "api listener for each of the virtual",
    "start": "937759",
    "end": "939360"
  },
  {
    "text": "hosts",
    "start": "939360",
    "end": "940160"
  },
  {
    "text": "now as mentioned earlier the http api",
    "start": "940160",
    "end": "942079"
  },
  {
    "text": "listeners don't have l3 l4 filters in",
    "start": "942079",
    "end": "944240"
  },
  {
    "text": "their configuration it's just the http",
    "start": "944240",
    "end": "945680"
  },
  {
    "text": "connection manager",
    "start": "945680",
    "end": "946959"
  },
  {
    "text": "um and so uh but the",
    "start": "946959",
    "end": "950160"
  },
  {
    "text": "configuration in the uh http api",
    "start": "950160",
    "end": "952800"
  },
  {
    "text": "listeners can point to the existing",
    "start": "952800",
    "end": "954480"
  },
  {
    "text": "rds resource which can be shared between",
    "start": "954480",
    "end": "956240"
  },
  {
    "text": "jrpc and enviro you don't have to",
    "start": "956240",
    "end": "957600"
  },
  {
    "text": "duplicate that",
    "start": "957600",
    "end": "958480"
  },
  {
    "text": "uh in most cases",
    "start": "958480",
    "end": "961440"
  },
  {
    "text": "and once you have the new resources set",
    "start": "961519",
    "end": "962959"
  },
  {
    "text": "up all you need to do on the client is",
    "start": "962959",
    "end": "964800"
  },
  {
    "text": "there's a bootstrap file that needs to",
    "start": "964800",
    "end": "966240"
  },
  {
    "text": "be created that tells the client where",
    "start": "966240",
    "end": "967680"
  },
  {
    "text": "the xds server is",
    "start": "967680",
    "end": "969279"
  },
  {
    "text": "um and then you need to just tell jrpc",
    "start": "969279",
    "end": "972079"
  },
  {
    "text": "to use xts by using an xds colon uri",
    "start": "972079",
    "end": "974399"
  },
  {
    "text": "when you create the channel",
    "start": "974399",
    "end": "975759"
  },
  {
    "text": "and then it just works it's magic",
    "start": "975759",
    "end": "979360"
  },
  {
    "start": "980000",
    "end": "980000"
  },
  {
    "text": "now um grpc does validate and cache the",
    "start": "980560",
    "end": "983759"
  },
  {
    "text": "entire route configuration right so",
    "start": "983759",
    "end": "985839"
  },
  {
    "text": "um it can't ignore virtual hosts other",
    "start": "985839",
    "end": "988720"
  },
  {
    "text": "than the one",
    "start": "988720",
    "end": "989519"
  },
  {
    "text": "that that caused it to look at the route",
    "start": "989519",
    "end": "991600"
  },
  {
    "text": "configuration because the application",
    "start": "991600",
    "end": "993279"
  },
  {
    "text": "might later create a channel to another",
    "start": "993279",
    "end": "994800"
  },
  {
    "text": "virtual host that might refer to the",
    "start": "994800",
    "end": "996000"
  },
  {
    "text": "same route configuration right in the",
    "start": "996000",
    "end": "997440"
  },
  {
    "text": "example on the last slide",
    "start": "997440",
    "end": "998959"
  },
  {
    "text": "um if initially the application only",
    "start": "998959",
    "end": "1001040"
  },
  {
    "text": "opens a",
    "start": "1001040",
    "end": "1002399"
  },
  {
    "text": "uh a channel for service one it'll get",
    "start": "1002399",
    "end": "1005279"
  },
  {
    "text": "the route configuration that has all",
    "start": "1005279",
    "end": "1006720"
  },
  {
    "text": "three",
    "start": "1006720",
    "end": "1007120"
  },
  {
    "text": "virtual hosts in it and then later if it",
    "start": "1007120",
    "end": "1009040"
  },
  {
    "text": "opens the channel to service two",
    "start": "1009040",
    "end": "1010720"
  },
  {
    "text": "now it's got a new listener resource",
    "start": "1010720",
    "end": "1012720"
  },
  {
    "text": "that's pointing to that same route",
    "start": "1012720",
    "end": "1013920"
  },
  {
    "text": "configuration which is you know already",
    "start": "1013920",
    "end": "1015759"
  },
  {
    "text": "includes the information for",
    "start": "1015759",
    "end": "1017279"
  },
  {
    "text": "uh service two so we have to cache this",
    "start": "1017279",
    "end": "1019360"
  },
  {
    "text": "and validate it up front so that we've",
    "start": "1019360",
    "end": "1020560"
  },
  {
    "text": "already got it when",
    "start": "1020560",
    "end": "1021759"
  },
  {
    "text": "uh when it actually you know if it's",
    "start": "1021759",
    "end": "1023519"
  },
  {
    "text": "going to be used later",
    "start": "1023519",
    "end": "1026160"
  },
  {
    "text": "um now this it does take up a fair",
    "start": "1026160",
    "end": "1028319"
  },
  {
    "text": "amount of memory in grpc to store all",
    "start": "1028319",
    "end": "1030079"
  },
  {
    "text": "this information",
    "start": "1030079",
    "end": "1031199"
  },
  {
    "text": "so you know if you're in a situation",
    "start": "1031199",
    "end": "1033280"
  },
  {
    "text": "where the",
    "start": "1033280",
    "end": "1034480"
  },
  {
    "text": "route configuration includes a really",
    "start": "1034480",
    "end": "1036319"
  },
  {
    "text": "large number of virtual hosts but grpc",
    "start": "1036319",
    "end": "1038240"
  },
  {
    "text": "is only ever going to use a small subset",
    "start": "1038240",
    "end": "1040160"
  },
  {
    "text": "one way you can avoid giving jrpc all",
    "start": "1040160",
    "end": "1042480"
  },
  {
    "text": "this information that it doesn't need",
    "start": "1042480",
    "end": "1044079"
  },
  {
    "text": "is to just inline the relevant part of",
    "start": "1044079",
    "end": "1045918"
  },
  {
    "text": "the route configuration into the http",
    "start": "1045919",
    "end": "1047438"
  },
  {
    "text": "api listeners that way each listener",
    "start": "1047439",
    "end": "1049600"
  },
  {
    "text": "only grabs the information for the one",
    "start": "1049600",
    "end": "1050880"
  },
  {
    "text": "virtual host that that it it cares about",
    "start": "1050880",
    "end": "1053280"
  },
  {
    "text": "and uh everything just works",
    "start": "1053280",
    "end": "1056799"
  },
  {
    "text": "um you might also run into a case due to",
    "start": "1056799",
    "end": "1059200"
  },
  {
    "text": "a a bug or a mismatching behavior or",
    "start": "1059200",
    "end": "1061520"
  },
  {
    "text": "something where",
    "start": "1061520",
    "end": "1062720"
  },
  {
    "text": "um jrpc might reject a config that envoy",
    "start": "1062720",
    "end": "1065280"
  },
  {
    "text": "would be okay with right so let's say",
    "start": "1065280",
    "end": "1066799"
  },
  {
    "text": "that you have",
    "start": "1066799",
    "end": "1068000"
  },
  {
    "text": "a route configuration that has one",
    "start": "1068000",
    "end": "1070000"
  },
  {
    "text": "virtual host that",
    "start": "1070000",
    "end": "1071280"
  },
  {
    "text": "is used by grpc and another virtualist",
    "start": "1071280",
    "end": "1073200"
  },
  {
    "text": "that's used only by envoy",
    "start": "1073200",
    "end": "1074960"
  },
  {
    "text": "um and jrpc is you know for some reason",
    "start": "1074960",
    "end": "1077919"
  },
  {
    "text": "rejecting the config because the one",
    "start": "1077919",
    "end": "1079280"
  },
  {
    "text": "that's meant for envoy even though grpc",
    "start": "1079280",
    "end": "1080880"
  },
  {
    "text": "will never use it",
    "start": "1080880",
    "end": "1082000"
  },
  {
    "text": "uh is is somehow getting rejected um if",
    "start": "1082000",
    "end": "1084320"
  },
  {
    "text": "that happens",
    "start": "1084320",
    "end": "1085039"
  },
  {
    "text": "that then moving the relevant part of",
    "start": "1085039",
    "end": "1086640"
  },
  {
    "text": "the right configuration into the http",
    "start": "1086640",
    "end": "1088080"
  },
  {
    "text": "api listener is also a decent workaround",
    "start": "1088080",
    "end": "1090000"
  },
  {
    "text": "uh we hope you shouldn't need to do this",
    "start": "1090000",
    "end": "1091840"
  },
  {
    "text": "i only know of one case today where it's",
    "start": "1091840",
    "end": "1093360"
  },
  {
    "text": "a problem i'll mention it later it's",
    "start": "1093360",
    "end": "1094559"
  },
  {
    "text": "something that we're going to be fixing",
    "start": "1094559",
    "end": "1095760"
  },
  {
    "text": "so",
    "start": "1095760",
    "end": "1096080"
  },
  {
    "text": "if you run into this this is a possible",
    "start": "1096080",
    "end": "1097600"
  },
  {
    "text": "workaround but also let us know because",
    "start": "1097600",
    "end": "1099200"
  },
  {
    "text": "we want to",
    "start": "1099200",
    "end": "1099760"
  },
  {
    "text": "we want to avoid the need to actually do",
    "start": "1099760",
    "end": "1101200"
  },
  {
    "text": "this it's just something to keep in your",
    "start": "1101200",
    "end": "1102400"
  },
  {
    "text": "back pocket in case you need it",
    "start": "1102400",
    "end": "1104799"
  },
  {
    "text": "um and you do of course need to support",
    "start": "1104799",
    "end": "1106480"
  },
  {
    "text": "non-wildcard lds and cds requests which",
    "start": "1106480",
    "end": "1109039"
  },
  {
    "text": "envoy will never make but grpc does this",
    "start": "1109039",
    "end": "1111280"
  },
  {
    "text": "will mostly be a no-op for cds because",
    "start": "1111280",
    "end": "1113200"
  },
  {
    "text": "even if you're doing a pure state of the",
    "start": "1113200",
    "end": "1114559"
  },
  {
    "text": "world",
    "start": "1114559",
    "end": "1115360"
  },
  {
    "text": "response where you always send all the",
    "start": "1115360",
    "end": "1116720"
  },
  {
    "text": "resources you know that should work just",
    "start": "1116720",
    "end": "1118400"
  },
  {
    "text": "fine",
    "start": "1118400",
    "end": "1118960"
  },
  {
    "text": "uh in lds the one thing you need to be",
    "start": "1118960",
    "end": "1120559"
  },
  {
    "text": "aware of is that um",
    "start": "1120559",
    "end": "1122320"
  },
  {
    "text": "you need to make sure not to send the",
    "start": "1122320",
    "end": "1123919"
  },
  {
    "text": "api listener resources to envoy when it",
    "start": "1123919",
    "end": "1125840"
  },
  {
    "text": "makes its wild card requests",
    "start": "1125840",
    "end": "1128000"
  },
  {
    "text": "because it won't know what to do with",
    "start": "1128000",
    "end": "1129280"
  },
  {
    "text": "them",
    "start": "1129280",
    "end": "1131200"
  },
  {
    "text": "all right and so finally let's talk",
    "start": "1131200",
    "end": "1132799"
  },
  {
    "text": "about our current status and roadmap",
    "start": "1132799",
    "end": "1136320"
  },
  {
    "text": "for those that may not know there are",
    "start": "1136320",
    "end": "1137679"
  },
  {
    "text": "actually four variants of the xcs",
    "start": "1137679",
    "end": "1139520"
  },
  {
    "text": "transport protocol there's two different",
    "start": "1139520",
    "end": "1141440"
  },
  {
    "text": "dimensions aggregated versus",
    "start": "1141440",
    "end": "1143120"
  },
  {
    "text": "non-aggregated",
    "start": "1143120",
    "end": "1144160"
  },
  {
    "text": "and state of the world versus",
    "start": "1144160",
    "end": "1145200"
  },
  {
    "text": "incremental so you know every",
    "start": "1145200",
    "end": "1146640"
  },
  {
    "text": "combination of those",
    "start": "1146640",
    "end": "1147520"
  },
  {
    "text": "yields four variants jrpc currently",
    "start": "1147520",
    "end": "1150000"
  },
  {
    "text": "supports only the",
    "start": "1150000",
    "end": "1151120"
  },
  {
    "text": "aggregated state of the world variant we",
    "start": "1151120",
    "end": "1153280"
  },
  {
    "text": "will likely support the incremental",
    "start": "1153280",
    "end": "1154799"
  },
  {
    "text": "aggregated variant in the future",
    "start": "1154799",
    "end": "1156720"
  },
  {
    "text": "but we don't have any plans at least",
    "start": "1156720",
    "end": "1158160"
  },
  {
    "text": "right now to support the non-aggregated",
    "start": "1158160",
    "end": "1159840"
  },
  {
    "text": "variants",
    "start": "1159840",
    "end": "1162080"
  },
  {
    "text": "we support xds right now in the jrc",
    "start": "1162080",
    "end": "1164000"
  },
  {
    "text": "client only not yet in the grpc server",
    "start": "1164000",
    "end": "1166000"
  },
  {
    "text": "although that's as",
    "start": "1166000",
    "end": "1167120"
  },
  {
    "text": "you'll see on one of the next slides uh",
    "start": "1167120",
    "end": "1169120"
  },
  {
    "text": "that is uh in the works",
    "start": "1169120",
    "end": "1171440"
  },
  {
    "text": "uh and you can see the list of features",
    "start": "1171440",
    "end": "1172720"
  },
  {
    "text": "that we currently support here with a",
    "start": "1172720",
    "end": "1174000"
  },
  {
    "text": "few noted limitations",
    "start": "1174000",
    "end": "1175280"
  },
  {
    "text": "uh the one i will mention i want to call",
    "start": "1175280",
    "end": "1177039"
  },
  {
    "text": "out is in route matching",
    "start": "1177039",
    "end": "1178320"
  },
  {
    "text": "um the case sensitive field as i",
    "start": "1178320",
    "end": "1180080"
  },
  {
    "text": "mentioned earlier this is the one case",
    "start": "1180080",
    "end": "1181679"
  },
  {
    "text": "where",
    "start": "1181679",
    "end": "1182320"
  },
  {
    "text": "uh jpc will currently reject the config",
    "start": "1182320",
    "end": "1184320"
  },
  {
    "text": "if case sensitive is set to false",
    "start": "1184320",
    "end": "1185919"
  },
  {
    "text": "uh we are going to be fixing that so",
    "start": "1185919",
    "end": "1187280"
  },
  {
    "text": "that you will be able to use case",
    "start": "1187280",
    "end": "1188240"
  },
  {
    "text": "sensitive false if you want and",
    "start": "1188240",
    "end": "1189840"
  },
  {
    "text": "and we will not reject configurations uh",
    "start": "1189840",
    "end": "1192320"
  },
  {
    "text": "that that have that so we do plan to fix",
    "start": "1192320",
    "end": "1193919"
  },
  {
    "text": "that",
    "start": "1193919",
    "end": "1194320"
  },
  {
    "text": "uh in the near future",
    "start": "1194320",
    "end": "1197279"
  },
  {
    "text": "here is a list of features that are on",
    "start": "1197840",
    "end": "1199440"
  },
  {
    "start": "1198000",
    "end": "1198000"
  },
  {
    "text": "our roadmap we've already started",
    "start": "1199440",
    "end": "1201280"
  },
  {
    "text": "uh implementing timeout and circuit",
    "start": "1201280",
    "end": "1202799"
  },
  {
    "text": "breaking support and a bunch of others",
    "start": "1202799",
    "end": "1205039"
  },
  {
    "text": "shown here are in our pipeline you can",
    "start": "1205039",
    "end": "1206960"
  },
  {
    "text": "watch our proposal repo to get",
    "start": "1206960",
    "end": "1208720"
  },
  {
    "text": "notifications when we post",
    "start": "1208720",
    "end": "1210080"
  },
  {
    "text": "uh grfcs which are jrpc's design",
    "start": "1210080",
    "end": "1212559"
  },
  {
    "text": "proposals",
    "start": "1212559",
    "end": "1214640"
  },
  {
    "text": "we uh the one thing that's uh that we",
    "start": "1214640",
    "end": "1216159"
  },
  {
    "text": "know is coming in the not too distant",
    "start": "1216159",
    "end": "1217360"
  },
  {
    "text": "future",
    "start": "1217360",
    "end": "1218000"
  },
  {
    "text": "that we don't yet have an answer for but",
    "start": "1218000",
    "end": "1219520"
  },
  {
    "text": "we're gonna be really thinking about",
    "start": "1219520",
    "end": "1220720"
  },
  {
    "text": "hard is how do we support http filters",
    "start": "1220720",
    "end": "1223039"
  },
  {
    "text": "in uh in grpc uh the reason this is",
    "start": "1223039",
    "end": "1225360"
  },
  {
    "text": "challenging is that",
    "start": "1225360",
    "end": "1226559"
  },
  {
    "text": "um grc already has a sort of um plug-in",
    "start": "1226559",
    "end": "1229600"
  },
  {
    "text": "mechanism called interceptors",
    "start": "1229600",
    "end": "1231120"
  },
  {
    "text": "and grpc interceptors have some",
    "start": "1231120",
    "end": "1232720"
  },
  {
    "text": "architectural differences both in terms",
    "start": "1232720",
    "end": "1234480"
  },
  {
    "text": "of where they are in the stack",
    "start": "1234480",
    "end": "1235600"
  },
  {
    "text": "and in terms of what their capabilities",
    "start": "1235600",
    "end": "1237600"
  },
  {
    "text": "are relative to",
    "start": "1237600",
    "end": "1239360"
  },
  {
    "text": "envoy's http filters so we're gonna have",
    "start": "1239360",
    "end": "1240799"
  },
  {
    "text": "to figure out how to sort of bridge that",
    "start": "1240799",
    "end": "1242000"
  },
  {
    "text": "gap in the api here",
    "start": "1242000",
    "end": "1243360"
  },
  {
    "text": "um and that's something that we know",
    "start": "1243360",
    "end": "1245280"
  },
  {
    "text": "we're gonna need to do both for",
    "start": "1245280",
    "end": "1246880"
  },
  {
    "text": "fault injection and for observability i",
    "start": "1246880",
    "end": "1250000"
  },
  {
    "text": "would encourage you to file bugs in our",
    "start": "1250000",
    "end": "1251919"
  },
  {
    "text": "repo if there are features that you need",
    "start": "1251919",
    "end": "1254000"
  },
  {
    "text": "that either we haven't done yet or",
    "start": "1254000",
    "end": "1255360"
  },
  {
    "text": "aren't on our roadmap",
    "start": "1255360",
    "end": "1256320"
  },
  {
    "text": "um i can't promise that we will",
    "start": "1256320",
    "end": "1257919"
  },
  {
    "text": "prioritize whatever you need but uh",
    "start": "1257919",
    "end": "1259840"
  },
  {
    "text": "it will be very useful for us to know",
    "start": "1259840",
    "end": "1261360"
  },
  {
    "text": "what features users want here",
    "start": "1261360",
    "end": "1262960"
  },
  {
    "text": "that will help guide our development and",
    "start": "1262960",
    "end": "1265120"
  },
  {
    "text": "of course if you want to contribute to",
    "start": "1265120",
    "end": "1266559"
  },
  {
    "text": "the implementation",
    "start": "1266559",
    "end": "1267600"
  },
  {
    "text": "we can help guide you in in doing that",
    "start": "1267600",
    "end": "1269200"
  },
  {
    "text": "as well",
    "start": "1269200",
    "end": "1271440"
  },
  {
    "text": "jpc has three main implementations we",
    "start": "1272640",
    "end": "1274880"
  },
  {
    "text": "have native implementations in both java",
    "start": "1274880",
    "end": "1276559"
  },
  {
    "text": "and go",
    "start": "1276559",
    "end": "1277120"
  },
  {
    "text": "and there is a c core implementation",
    "start": "1277120",
    "end": "1279200"
  },
  {
    "text": "which is",
    "start": "1279200",
    "end": "1280400"
  },
  {
    "text": "used as the underlying implementation",
    "start": "1280400",
    "end": "1281919"
  },
  {
    "text": "for all the languages that you see here",
    "start": "1281919",
    "end": "1284159"
  },
  {
    "text": "i should note that in c sharp there are",
    "start": "1284159",
    "end": "1285679"
  },
  {
    "text": "actually two different implementations",
    "start": "1285679",
    "end": "1287360"
  },
  {
    "text": "there's the one that",
    "start": "1287360",
    "end": "1288720"
  },
  {
    "text": "we provide that is wrapped around c-core",
    "start": "1288720",
    "end": "1291120"
  },
  {
    "text": "and there is a separate",
    "start": "1291120",
    "end": "1292720"
  },
  {
    "text": "native c-sharp implementation for net",
    "start": "1292720",
    "end": "1295120"
  },
  {
    "text": "that is written by microsoft",
    "start": "1295120",
    "end": "1296559"
  },
  {
    "text": "uh that implementation as far as i know",
    "start": "1296559",
    "end": "1298000"
  },
  {
    "text": "does not yet have xds support",
    "start": "1298000",
    "end": "1301039"
  },
  {
    "text": "jrpc also has a native node.js",
    "start": "1301039",
    "end": "1303360"
  },
  {
    "text": "implementation",
    "start": "1303360",
    "end": "1304080"
  },
  {
    "text": "that has just recently started adding",
    "start": "1304080",
    "end": "1305440"
  },
  {
    "text": "xds features this is lagging a little",
    "start": "1305440",
    "end": "1307440"
  },
  {
    "text": "bit behind the other languages in",
    "start": "1307440",
    "end": "1308480"
  },
  {
    "text": "timeline but they are working on",
    "start": "1308480",
    "end": "1309600"
  },
  {
    "text": "catching up",
    "start": "1309600",
    "end": "1312080"
  },
  {
    "text": "there are a few control planes that work",
    "start": "1313840",
    "end": "1315600"
  },
  {
    "text": "with proxies grpc",
    "start": "1315600",
    "end": "1317039"
  },
  {
    "text": "google's traffic director control plane",
    "start": "1317039",
    "end": "1318640"
  },
  {
    "text": "is the main one that we develop and test",
    "start": "1318640",
    "end": "1319919"
  },
  {
    "text": "against",
    "start": "1319919",
    "end": "1320559"
  },
  {
    "text": "and you can look at this uh the the link",
    "start": "1320559",
    "end": "1322559"
  },
  {
    "text": "here goes to a blog post uh that",
    "start": "1322559",
    "end": "1324720"
  },
  {
    "text": "uh talks about google's traffic director",
    "start": "1324720",
    "end": "1326320"
  },
  {
    "text": "product and and how it works",
    "start": "1326320",
    "end": "1327760"
  },
  {
    "text": "and what it supports um istio also has",
    "start": "1327760",
    "end": "1330480"
  },
  {
    "text": "some basic experimental support for",
    "start": "1330480",
    "end": "1332400"
  },
  {
    "text": "proxies grpc",
    "start": "1332400",
    "end": "1333600"
  },
  {
    "text": "um they don't have any documentation for",
    "start": "1333600",
    "end": "1335440"
  },
  {
    "text": "it yet but they do have sort of a test",
    "start": "1335440",
    "end": "1336880"
  },
  {
    "text": "that shows that it works",
    "start": "1336880",
    "end": "1338159"
  },
  {
    "text": "uh so i would encourage people to sort",
    "start": "1338159",
    "end": "1339520"
  },
  {
    "text": "of file bugs against istio if that's you",
    "start": "1339520",
    "end": "1341280"
  },
  {
    "text": "know if this is something you actually",
    "start": "1341280",
    "end": "1342240"
  },
  {
    "text": "want to use in production",
    "start": "1342240",
    "end": "1343200"
  },
  {
    "text": "uh uh you know the more bugs you you",
    "start": "1343200",
    "end": "1345200"
  },
  {
    "text": "know if you file bugs on that and you",
    "start": "1345200",
    "end": "1346799"
  },
  {
    "text": "know express your interest in it",
    "start": "1346799",
    "end": "1348159"
  },
  {
    "text": "uh that will help them prioritize no",
    "start": "1348159",
    "end": "1349679"
  },
  {
    "text": "doubt um and there's a bug open",
    "start": "1349679",
    "end": "1351360"
  },
  {
    "text": "requesting jrpc support and go control",
    "start": "1351360",
    "end": "1352960"
  },
  {
    "text": "plane as well",
    "start": "1352960",
    "end": "1355440"
  },
  {
    "start": "1355000",
    "end": "1355000"
  },
  {
    "text": "uh so i want to leave you with one final",
    "start": "1356240",
    "end": "1357919"
  },
  {
    "text": "thought uh until now there was only one",
    "start": "1357919",
    "end": "1359760"
  },
  {
    "text": "xgas client which was envoy",
    "start": "1359760",
    "end": "1361280"
  },
  {
    "text": "uh now with grpc there are two uh but i",
    "start": "1361280",
    "end": "1363840"
  },
  {
    "text": "think there's gonna be more in the",
    "start": "1363840",
    "end": "1364640"
  },
  {
    "text": "future i don't think this is the last",
    "start": "1364640",
    "end": "1365840"
  },
  {
    "text": "one",
    "start": "1365840",
    "end": "1366559"
  },
  {
    "text": "i've already heard of a couple of cases",
    "start": "1366559",
    "end": "1367919"
  },
  {
    "text": "where people have been talking about",
    "start": "1367919",
    "end": "1369440"
  },
  {
    "text": "building an xds aware http client",
    "start": "1369440",
    "end": "1371440"
  },
  {
    "text": "library",
    "start": "1371440",
    "end": "1372080"
  },
  {
    "text": "and as i mentioned earlier there will",
    "start": "1372080",
    "end": "1373200"
  },
  {
    "text": "likely be cases where people will want",
    "start": "1373200",
    "end": "1374640"
  },
  {
    "text": "xts aware sql clients",
    "start": "1374640",
    "end": "1376480"
  },
  {
    "text": "so you know and i suspect that there",
    "start": "1376480",
    "end": "1378080"
  },
  {
    "text": "will be even other use cases in the",
    "start": "1378080",
    "end": "1379440"
  },
  {
    "text": "future that we haven't thought of yet so",
    "start": "1379440",
    "end": "1381039"
  },
  {
    "text": "i think this is a really exciting time",
    "start": "1381039",
    "end": "1382960"
  },
  {
    "text": "for the xcs ecosystem i think it's",
    "start": "1382960",
    "end": "1384640"
  },
  {
    "text": "becoming",
    "start": "1384640",
    "end": "1385360"
  },
  {
    "text": "richer and more varied and i'm really",
    "start": "1385360",
    "end": "1386960"
  },
  {
    "text": "excited to see where it goes",
    "start": "1386960",
    "end": "1389120"
  },
  {
    "text": "so with that i will take questions thank",
    "start": "1389120",
    "end": "1392200"
  },
  {
    "text": "you",
    "start": "1392200",
    "end": "1395200"
  }
]