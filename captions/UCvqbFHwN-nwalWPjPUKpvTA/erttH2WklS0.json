[
  {
    "start": "0",
    "end": "41000"
  },
  {
    "text": "hello welcome I am Scott Nichols I work",
    "start": "410",
    "end": "4950"
  },
  {
    "text": "on K Native day-to-day at Google this is",
    "start": "4950",
    "end": "8849"
  },
  {
    "text": "the bottleless talk on building a",
    "start": "8849",
    "end": "11280"
  },
  {
    "text": "surrealist chatbot framework we are",
    "start": "11280",
    "end": "16139"
  },
  {
    "text": "going to be building the bottleless",
    "start": "16139",
    "end": "17640"
  },
  {
    "text": "framework together right here we will",
    "start": "17640",
    "end": "21300"
  },
  {
    "text": "optimize for cost and flexibility of",
    "start": "21300",
    "end": "23580"
  },
  {
    "text": "extensions the customer will be my team",
    "start": "23580",
    "end": "26880"
  },
  {
    "text": "or my company while building bottleless",
    "start": "26880",
    "end": "31439"
  },
  {
    "text": "think of opportunities for you to",
    "start": "31439",
    "end": "33780"
  },
  {
    "text": "provide your own framework encapsulation",
    "start": "33780",
    "end": "36780"
  },
  {
    "text": "and reusability are powerful techniques",
    "start": "36780",
    "end": "41420"
  },
  {
    "start": "41000",
    "end": "208000"
  },
  {
    "text": "first some background this started",
    "start": "41809",
    "end": "48329"
  },
  {
    "text": "because I wrote some scripts to do some",
    "start": "48329",
    "end": "50070"
  },
  {
    "text": "useful checks my team started pinging me",
    "start": "50070",
    "end": "53539"
  },
  {
    "text": "asking me about the results of these",
    "start": "53539",
    "end": "55890"
  },
  {
    "text": "scripts here grant is asking me how long",
    "start": "55890",
    "end": "59579"
  },
  {
    "text": "the database has been up I get",
    "start": "59579",
    "end": "62190"
  },
  {
    "text": "interrupted",
    "start": "62190",
    "end": "63030"
  },
  {
    "text": "I run the script and I tell them the",
    "start": "63030",
    "end": "66720"
  },
  {
    "text": "results so my team and I started writing",
    "start": "66720",
    "end": "73189"
  },
  {
    "text": "more useful scripts and we connected",
    "start": "73189",
    "end": "77580"
  },
  {
    "text": "them to our chat server and they they",
    "start": "77580",
    "end": "80820"
  },
  {
    "text": "did little tasks for us at first these",
    "start": "80820",
    "end": "83939"
  },
  {
    "text": "were little one-off programs that ran on",
    "start": "83939",
    "end": "85950"
  },
  {
    "text": "our desktops and this was great because",
    "start": "85950",
    "end": "88470"
  },
  {
    "text": "no more interruptions",
    "start": "88470",
    "end": "91490"
  },
  {
    "text": "now each command each script could",
    "start": "91490",
    "end": "94170"
  },
  {
    "text": "respond to its own command and it was",
    "start": "94170",
    "end": "99119"
  },
  {
    "text": "useful our partner team saw how useful",
    "start": "99119",
    "end": "104909"
  },
  {
    "text": "our chat scripts were and started",
    "start": "104909",
    "end": "107610"
  },
  {
    "text": "writing their own but their scripts use",
    "start": "107610",
    "end": "110369"
  },
  {
    "text": "the talk server not the chat server the",
    "start": "110369",
    "end": "115860"
  },
  {
    "text": "two teams noticed each other scripts and",
    "start": "115860",
    "end": "118340"
  },
  {
    "text": "started working some of them because",
    "start": "118340",
    "end": "121680"
  },
  {
    "text": "each script talked to a different chat",
    "start": "121680",
    "end": "123899"
  },
  {
    "text": "server each had to be modified to work",
    "start": "123899",
    "end": "127310"
  },
  {
    "text": "this started getting out of hand if Bob",
    "start": "127310",
    "end": "131250"
  },
  {
    "text": "went home for the night we stopped being",
    "start": "131250",
    "end": "133680"
  },
  {
    "text": "a",
    "start": "133680",
    "end": "133900"
  },
  {
    "text": "to check the health metrics or deploy",
    "start": "133900",
    "end": "136060"
  },
  {
    "text": "the latest software to QA it turns out",
    "start": "136060",
    "end": "139739"
  },
  {
    "text": "running apps on desktops is not the most",
    "start": "139739",
    "end": "142480"
  },
  {
    "text": "reliable so we did a little work and we",
    "start": "142480",
    "end": "146650"
  },
  {
    "text": "wrapped each script in a container and",
    "start": "146650",
    "end": "148390"
  },
  {
    "text": "push those into kubernetes and we gained",
    "start": "148390",
    "end": "151420"
  },
  {
    "text": "a lot of reliability but we also",
    "start": "151420",
    "end": "153819"
  },
  {
    "text": "realized there was a lot of redundancy",
    "start": "153819",
    "end": "157530"
  },
  {
    "text": "another issue is that each script was",
    "start": "157530",
    "end": "161890"
  },
  {
    "text": "connecting to the chat servers directly",
    "start": "161890",
    "end": "163810"
  },
  {
    "text": "so that code had to be duplicated",
    "start": "163810",
    "end": "166209"
  },
  {
    "text": "everywhere we got the great idea to add",
    "start": "166209",
    "end": "170590"
  },
  {
    "text": "a small adapter between the chat server",
    "start": "170590",
    "end": "173139"
  },
  {
    "text": "and the scripts so we could consolidate",
    "start": "173139",
    "end": "175930"
  },
  {
    "text": "the chat communication logic that forced",
    "start": "175930",
    "end": "179049"
  },
  {
    "text": "us to standardize the commands the",
    "start": "179049",
    "end": "182560"
  },
  {
    "text": "command communication between the",
    "start": "182560",
    "end": "183909"
  },
  {
    "text": "adapters and the scripts we started",
    "start": "183909",
    "end": "189609"
  },
  {
    "text": "writing a lot of scripts this was this",
    "start": "189609",
    "end": "193180"
  },
  {
    "text": "was not great because people started",
    "start": "193180",
    "end": "196109"
  },
  {
    "text": "realizing that each new command took",
    "start": "196109",
    "end": "199180"
  },
  {
    "text": "pods in the cluster each new command met",
    "start": "199180",
    "end": "203769"
  },
  {
    "text": "the chat BOTS started costing us more",
    "start": "203769",
    "end": "205840"
  },
  {
    "text": "money and more infrastructure we knew we",
    "start": "205840",
    "end": "209620"
  },
  {
    "text": "could do better",
    "start": "209620",
    "end": "210989"
  },
  {
    "text": "let's pick apart the aspects that became",
    "start": "210989",
    "end": "213879"
  },
  {
    "text": "important to the team we realized early",
    "start": "213879",
    "end": "219190"
  },
  {
    "text": "that using kubernetes and containers",
    "start": "219190",
    "end": "222370"
  },
  {
    "text": "allowed the developers on my team to",
    "start": "222370",
    "end": "224440"
  },
  {
    "text": "write in whatever language they wanted",
    "start": "224440",
    "end": "227379"
  },
  {
    "text": "as long as we all agreed on the inputs",
    "start": "227379",
    "end": "229659"
  },
  {
    "text": "and the outputs of the container so a",
    "start": "229659",
    "end": "234400"
  },
  {
    "text": "side note formalizing a protocol for",
    "start": "234400",
    "end": "237699"
  },
  {
    "text": "yourself will increase the reliability",
    "start": "237699",
    "end": "239889"
  },
  {
    "text": "of your application standardizing on the",
    "start": "239889",
    "end": "243220"
  },
  {
    "text": "shape of the input and the output frees",
    "start": "243220",
    "end": "246250"
  },
  {
    "text": "you to choose the best language for the",
    "start": "246250",
    "end": "248079"
  },
  {
    "text": "job we also realized the team is only",
    "start": "248079",
    "end": "254260"
  },
  {
    "text": "interacting with the bots for a small",
    "start": "254260",
    "end": "255940"
  },
  {
    "text": "portion of the day and even when we are",
    "start": "255940",
    "end": "258909"
  },
  {
    "text": "interacting with only one chat script at",
    "start": "258909",
    "end": "262750"
  },
  {
    "text": "a time",
    "start": "262750",
    "end": "264180"
  },
  {
    "text": "further the number of commands that we",
    "start": "264180",
    "end": "266470"
  },
  {
    "text": "created increased the overall cost of",
    "start": "266470",
    "end": "268840"
  },
  {
    "text": "the service we wanted to pay for just",
    "start": "268840",
    "end": "271449"
  },
  {
    "text": "when the bot was being useful not idle",
    "start": "271449",
    "end": "276510"
  },
  {
    "text": "if the chat bot supported so more",
    "start": "279300",
    "end": "282940"
  },
  {
    "text": "serverless architecture we could stop",
    "start": "282940",
    "end": "286270"
  },
  {
    "text": "worrying about the idle cost and",
    "start": "286270",
    "end": "288870"
  },
  {
    "text": "reserving of resources when we interact",
    "start": "288870",
    "end": "293260"
  },
  {
    "text": "with the bot what the one command that",
    "start": "293260",
    "end": "295540"
  },
  {
    "text": "should be active and the rest should be",
    "start": "295540",
    "end": "297280"
  },
  {
    "text": "well service not running server list",
    "start": "297280",
    "end": "304210"
  },
  {
    "text": "means no servers are in use when the",
    "start": "304210",
    "end": "306340"
  },
  {
    "text": "application is not actively doing",
    "start": "306340",
    "end": "307840"
  },
  {
    "text": "something useful it scales to zero",
    "start": "307840",
    "end": "310830"
  },
  {
    "text": "server list means elastic it can scale",
    "start": "310830",
    "end": "314320"
  },
  {
    "text": "up very quickly to handle demand server",
    "start": "314320",
    "end": "317590"
  },
  {
    "text": "less is event-driven it's reacting to",
    "start": "317590",
    "end": "321160"
  },
  {
    "text": "something and we only want to pay for",
    "start": "321160",
    "end": "323710"
  },
  {
    "text": "the amount of time our app is doing",
    "start": "323710",
    "end": "325600"
  },
  {
    "text": "something useful okay so our main",
    "start": "325600",
    "end": "329919"
  },
  {
    "start": "326000",
    "end": "517000"
  },
  {
    "text": "requirements ended up being one we use",
    "start": "329919",
    "end": "333310"
  },
  {
    "text": "containers so that everyone can pick the",
    "start": "333310",
    "end": "336490"
  },
  {
    "text": "code language that they want to",
    "start": "336490",
    "end": "338020"
  },
  {
    "text": "implement and to use a server less",
    "start": "338020",
    "end": "342400"
  },
  {
    "text": "technique to reduce the overhead for",
    "start": "342400",
    "end": "345090"
  },
  {
    "text": "having so many chat bot commands and not",
    "start": "345090",
    "end": "348370"
  },
  {
    "text": "paying for the idle time containers",
    "start": "348370",
    "end": "354699"
  },
  {
    "text": "means kubernetes and kubernetes and",
    "start": "354699",
    "end": "358030"
  },
  {
    "text": "serverless is slightly more tricky but",
    "start": "358030",
    "end": "360940"
  },
  {
    "text": "we have a few options",
    "start": "360940",
    "end": "362280"
  },
  {
    "text": "there's FN open Faddis and k native that",
    "start": "362280",
    "end": "366580"
  },
  {
    "text": "come to mind",
    "start": "366580",
    "end": "367300"
  },
  {
    "text": "I will pick King native K native is",
    "start": "367300",
    "end": "373660"
  },
  {
    "text": "setting out to be the building blocks",
    "start": "373660",
    "end": "375099"
  },
  {
    "text": "for several us workloads on kubernetes",
    "start": "375099",
    "end": "378930"
  },
  {
    "text": "Canyon earth provides primitives to",
    "start": "381090",
    "end": "383349"
  },
  {
    "text": "build on serving for functions eventing",
    "start": "383349",
    "end": "387699"
  },
  {
    "text": "for delivery and routing and build for",
    "start": "387699",
    "end": "391030"
  },
  {
    "text": "in cluster creation in cluster container",
    "start": "391030",
    "end": "394240"
  },
  {
    "text": "creation",
    "start": "394240",
    "end": "395300"
  },
  {
    "text": "come check us out on github Canada is a",
    "start": "395300",
    "end": "402229"
  },
  {
    "text": "new project from Google in collaboration",
    "start": "402229",
    "end": "404509"
  },
  {
    "text": "with pivotal sa P Red Hat IBM and many",
    "start": "404509",
    "end": "407210"
  },
  {
    "text": "others Canada builds the serverless",
    "start": "407210",
    "end": "413330"
  },
  {
    "text": "primitives that kubernetes lacks we are",
    "start": "413330",
    "end": "417110"
  },
  {
    "text": "in enabling an ecosystem of service",
    "start": "417110",
    "end": "419120"
  },
  {
    "text": "products be built with portability in",
    "start": "419120",
    "end": "421490"
  },
  {
    "text": "mind back to bottleless at the base of",
    "start": "421490",
    "end": "429949"
  },
  {
    "text": "our stack we have kubernetes for",
    "start": "429949",
    "end": "432289"
  },
  {
    "text": "rock-solid container orchestration",
    "start": "432289",
    "end": "435610"
  },
  {
    "text": "extending kate's we have K native",
    "start": "435610",
    "end": "438379"
  },
  {
    "text": "providing those missing serverless",
    "start": "438379",
    "end": "440180"
  },
  {
    "text": "components building on those is my",
    "start": "440180",
    "end": "444979"
  },
  {
    "text": "bottleless framework and at the top",
    "start": "444979",
    "end": "449300"
  },
  {
    "text": "there's room for features and extensions",
    "start": "449300",
    "end": "451370"
  },
  {
    "text": "my team brings along their plot commands",
    "start": "451370",
    "end": "454849"
  },
  {
    "text": "and the chat server adapters and the",
    "start": "454849",
    "end": "462849"
  },
  {
    "text": "general picture of how this looks we can",
    "start": "462849",
    "end": "465710"
  },
  {
    "text": "have our existing chat server",
    "start": "465710",
    "end": "467990"
  },
  {
    "text": "communicating to a receive adapter the",
    "start": "467990",
    "end": "471020"
  },
  {
    "text": "receive adapter bridges the chat",
    "start": "471020",
    "end": "472699"
  },
  {
    "text": "protocol into a common protocol for the",
    "start": "472699",
    "end": "474800"
  },
  {
    "text": "framework to understand we will need to",
    "start": "474800",
    "end": "477979"
  },
  {
    "text": "parse the incoming messages to",
    "start": "477979",
    "end": "480080"
  },
  {
    "text": "understand if the they are commands or",
    "start": "480080",
    "end": "481880"
  },
  {
    "text": "not and then route then a router to link",
    "start": "481880",
    "end": "486020"
  },
  {
    "text": "a particular command to a service",
    "start": "486020",
    "end": "488000"
  },
  {
    "text": "function that handles it here again the",
    "start": "488000",
    "end": "493580"
  },
  {
    "text": "chat server speaks whatever protocol it",
    "start": "493580",
    "end": "495620"
  },
  {
    "text": "happens to be implemented in we cannot",
    "start": "495620",
    "end": "497870"
  },
  {
    "text": "change that but we can convert it into",
    "start": "497870",
    "end": "500719"
  },
  {
    "text": "something standard into a standard",
    "start": "500719",
    "end": "502909"
  },
  {
    "text": "format here we will take raw chat events",
    "start": "502909",
    "end": "505879"
  },
  {
    "text": "and the receive adapter will output a",
    "start": "505879",
    "end": "508789"
  },
  {
    "text": "new emerging standard cloud events with",
    "start": "508789",
    "end": "511729"
  },
  {
    "text": "an event type say dev bodiless chat",
    "start": "511729",
    "end": "517448"
  },
  {
    "start": "517000",
    "end": "743000"
  },
  {
    "text": "cloud events is a specification for",
    "start": "517449",
    "end": "519740"
  },
  {
    "text": "describing a venting data in a common",
    "start": "519740",
    "end": "522229"
  },
  {
    "text": "way",
    "start": "522229",
    "end": "524440"
  },
  {
    "text": "for example here's a cloud event",
    "start": "528569",
    "end": "531040"
  },
  {
    "text": "envelope as taken from their",
    "start": "531040",
    "end": "534279"
  },
  {
    "text": "specification the point of this is that",
    "start": "534279",
    "end": "537699"
  },
  {
    "text": "the outer wrapper is easy to understand",
    "start": "537699",
    "end": "540220"
  },
  {
    "text": "and route between event producers and",
    "start": "540220",
    "end": "542499"
  },
  {
    "text": "event consumers possibly passing through",
    "start": "542499",
    "end": "545259"
  },
  {
    "text": "middleware we can combine the concepts",
    "start": "545259",
    "end": "549309"
  },
  {
    "text": "of the external chat server and our",
    "start": "549309",
    "end": "552309"
  },
  {
    "text": "internal receive adapter into a new",
    "start": "552309",
    "end": "554740"
  },
  {
    "text": "object called a chat source the source",
    "start": "554740",
    "end": "558459"
  },
  {
    "text": "is a general que native eventing concept",
    "start": "558459",
    "end": "560709"
  },
  {
    "text": "for a component that pushes events into",
    "start": "560709",
    "end": "563860"
  },
  {
    "text": "the cluster we can represent that source",
    "start": "563860",
    "end": "568300"
  },
  {
    "text": "as a custom resource here is the amyl",
    "start": "568300",
    "end": "572050"
  },
  {
    "text": "for our chat source each logical",
    "start": "572050",
    "end": "575410"
  },
  {
    "text": "component in the diagram is represented",
    "start": "575410",
    "end": "577389"
  },
  {
    "text": "inside the source spec the concept of a",
    "start": "577389",
    "end": "582550"
  },
  {
    "text": "source is abstract its role is that it",
    "start": "582550",
    "end": "586329"
  },
  {
    "text": "pushes events into a sync as we are free",
    "start": "586329",
    "end": "589600"
  },
  {
    "text": "and we are free to define anything else",
    "start": "589600",
    "end": "591790"
  },
  {
    "text": "that is interesting for our exact use",
    "start": "591790",
    "end": "594069"
  },
  {
    "text": "case for that source we encapsulate the",
    "start": "594069",
    "end": "600699"
  },
  {
    "text": "logic of the chat server in",
    "start": "600699",
    "end": "602920"
  },
  {
    "text": "communication in the chat source in this",
    "start": "602920",
    "end": "606250"
  },
  {
    "text": "case it converts simple chat messages",
    "start": "606250",
    "end": "608500"
  },
  {
    "text": "into a cloud event this is what the",
    "start": "608500",
    "end": "612579"
  },
  {
    "text": "parse will receive - to do its work with",
    "start": "612579",
    "end": "619509"
  },
  {
    "text": "the chat source here is what we end up",
    "start": "619509",
    "end": "623649"
  },
  {
    "text": "with we have a chat source pushing",
    "start": "623649",
    "end": "626740"
  },
  {
    "text": "events into the parser the parser",
    "start": "626740",
    "end": "629259"
  },
  {
    "text": "produces a bot command and sends them to",
    "start": "629259",
    "end": "632230"
  },
  {
    "text": "the router the router delivers the",
    "start": "632230",
    "end": "635019"
  },
  {
    "text": "command message to the function that",
    "start": "635019",
    "end": "636910"
  },
  {
    "text": "implements that particular command Kay",
    "start": "636910",
    "end": "641620"
  },
  {
    "text": "native is leveraged in these places it",
    "start": "641620",
    "end": "644949"
  },
  {
    "text": "connects the components it enables the",
    "start": "644949",
    "end": "647620"
  },
  {
    "text": "commands let's talk about how",
    "start": "647620",
    "end": "651929"
  },
  {
    "text": "kay native eventing is used to deliver",
    "start": "652299",
    "end": "655670"
  },
  {
    "text": "and deliver events to end points it does",
    "start": "655670",
    "end": "659899"
  },
  {
    "text": "this with an abstraction called channels",
    "start": "659899",
    "end": "662629"
  },
  {
    "text": "and subscriptions channels represent a",
    "start": "662629",
    "end": "668929"
  },
  {
    "text": "delivery method for events in practice",
    "start": "668929",
    "end": "672439"
  },
  {
    "text": "this means in a venting queue something",
    "start": "672439",
    "end": "674989"
  },
  {
    "text": "that allows for a durability of the",
    "start": "674989",
    "end": "677239"
  },
  {
    "text": "event delivery delivery of events Kay",
    "start": "677239",
    "end": "681169"
  },
  {
    "text": "david has distracted this away to be",
    "start": "681169",
    "end": "683689"
  },
  {
    "text": "able to use things like queues without",
    "start": "683689",
    "end": "685819"
  },
  {
    "text": "being tightly bound to a particular",
    "start": "685819",
    "end": "687470"
  },
  {
    "text": "queue implementation a subscription",
    "start": "687470",
    "end": "692689"
  },
  {
    "text": "describes event delivery a subscription",
    "start": "692689",
    "end": "696290"
  },
  {
    "text": "tells the upstream channel to first call",
    "start": "696290",
    "end": "700129"
  },
  {
    "text": "a subscriber function and then continue",
    "start": "700129",
    "end": "702769"
  },
  {
    "text": "the reply to the next channel channels",
    "start": "702769",
    "end": "707899"
  },
  {
    "text": "that have more than one subscription",
    "start": "707899",
    "end": "709369"
  },
  {
    "text": "allow for a fan-out or multiple event",
    "start": "709369",
    "end": "712279"
  },
  {
    "text": "deliveries also shown are the current",
    "start": "712279",
    "end": "716179"
  },
  {
    "text": "ways we support connecting callable",
    "start": "716179",
    "end": "717860"
  },
  {
    "text": "functions and channels those calls are",
    "start": "717860",
    "end": "724369"
  },
  {
    "text": "interesting because you can choose to",
    "start": "724369",
    "end": "726019"
  },
  {
    "text": "use them like a filter here's a pass",
    "start": "726019",
    "end": "728179"
  },
  {
    "text": "through filter or it can mutate the",
    "start": "728179",
    "end": "733279"
  },
  {
    "text": "event or it can filter it in the event",
    "start": "733279",
    "end": "739249"
  },
  {
    "text": "out entirely",
    "start": "739249",
    "end": "741879"
  },
  {
    "start": "743000",
    "end": "971000"
  },
  {
    "text": "let's expand our current bottleless",
    "start": "743400",
    "end": "745350"
  },
  {
    "text": "framework with the eventing components",
    "start": "745350",
    "end": "747029"
  },
  {
    "text": "and see how it would look like in",
    "start": "747029",
    "end": "748890"
  },
  {
    "text": "practice we have these three components",
    "start": "748890",
    "end": "752880"
  },
  {
    "text": "connected the source to the parser to",
    "start": "752880",
    "end": "755100"
  },
  {
    "text": "the router in serverless applications",
    "start": "755100",
    "end": "758130"
  },
  {
    "text": "it's best to never call a function from",
    "start": "758130",
    "end": "760200"
  },
  {
    "text": "another function Kay native eventing",
    "start": "760200",
    "end": "763460"
  },
  {
    "text": "gives us primitives to implement the",
    "start": "763460",
    "end": "765960"
  },
  {
    "text": "best practice channels and subscriptions",
    "start": "765960",
    "end": "768750"
  },
  {
    "text": "and it would look something like this",
    "start": "768750",
    "end": "772520"
  },
  {
    "text": "events flow from the source into a",
    "start": "773839",
    "end": "776100"
  },
  {
    "text": "channel the channel passes the event to",
    "start": "776100",
    "end": "779400"
  },
  {
    "text": "the subscriber subscribers of the",
    "start": "779400",
    "end": "781140"
  },
  {
    "text": "channel for bot lists the subscriber of",
    "start": "781140",
    "end": "783839"
  },
  {
    "text": "the new message Channel is the parser",
    "start": "783839",
    "end": "785970"
  },
  {
    "text": "the parsers job is to examine the new",
    "start": "785970",
    "end": "789750"
  },
  {
    "text": "chat message and see if it fits the",
    "start": "789750",
    "end": "792360"
  },
  {
    "text": "format of a bot command but commands in",
    "start": "792360",
    "end": "795630"
  },
  {
    "text": "bot lists are all chat messages with a",
    "start": "795630",
    "end": "797820"
  },
  {
    "text": "forward slash and then the command if",
    "start": "797820",
    "end": "802230"
  },
  {
    "text": "the parser sees a slash it creates a new",
    "start": "802230",
    "end": "805170"
  },
  {
    "text": "event a bot command and returns this",
    "start": "805170",
    "end": "809820"
  },
  {
    "text": "event otherwise it returns nothing in",
    "start": "809820",
    "end": "813150"
  },
  {
    "text": "response to the incoming message and",
    "start": "813150",
    "end": "814860"
  },
  {
    "text": "nothing is sent to the command channel",
    "start": "814860",
    "end": "819170"
  },
  {
    "text": "if the parser produces a bot command the",
    "start": "819260",
    "end": "822600"
  },
  {
    "text": "message is passed to the botton command",
    "start": "822600",
    "end": "825510"
  },
  {
    "text": "channel the bot commands its events to",
    "start": "825510",
    "end": "829350"
  },
  {
    "text": "the router the job of the router is to",
    "start": "829350",
    "end": "832740"
  },
  {
    "text": "inspect the event the event metadata and",
    "start": "832740",
    "end": "836240"
  },
  {
    "text": "route it to based on the command name",
    "start": "836240",
    "end": "839420"
  },
  {
    "text": "the router looks at the existing",
    "start": "839420",
    "end": "842850"
  },
  {
    "text": "channels and finds the one that matches",
    "start": "842850",
    "end": "845130"
  },
  {
    "text": "the label produced from the command name",
    "start": "845130",
    "end": "848330"
  },
  {
    "text": "the router passes the bot command to the",
    "start": "848330",
    "end": "851400"
  },
  {
    "text": "correct champ",
    "start": "851400",
    "end": "854089"
  },
  {
    "text": "the command channel invokes",
    "start": "857840",
    "end": "859980"
  },
  {
    "text": "the function in forwards response to the",
    "start": "859980",
    "end": "862170"
  },
  {
    "text": "response channel if no channel is found",
    "start": "862170",
    "end": "865350"
  },
  {
    "text": "bottleless will has a default channel to",
    "start": "865350",
    "end": "867360"
  },
  {
    "text": "send an error response a command that is",
    "start": "867360",
    "end": "869970"
  },
  {
    "text": "a command is not very useful without a",
    "start": "869970",
    "end": "872850"
  },
  {
    "text": "way to reply back to the original",
    "start": "872850",
    "end": "874770"
  },
  {
    "text": "requester we need to add a component for",
    "start": "874770",
    "end": "877440"
  },
  {
    "text": "transmitting the responses back to the",
    "start": "877440",
    "end": "879540"
  },
  {
    "text": "chat server the transmit adapter we also",
    "start": "879540",
    "end": "884130"
  },
  {
    "text": "need to a way to remember which user",
    "start": "884130",
    "end": "886560"
  },
  {
    "text": "issued the original command we can use",
    "start": "886560",
    "end": "890880"
  },
  {
    "text": "an extension on cloud events to",
    "start": "890880",
    "end": "893070"
  },
  {
    "text": "correlate events from from which the",
    "start": "893070",
    "end": "896160"
  },
  {
    "text": "original message came here we can see",
    "start": "896160",
    "end": "902600"
  },
  {
    "text": "the channels explicitly called out in",
    "start": "902600",
    "end": "905640"
  },
  {
    "text": "the architecture with implied",
    "start": "905640",
    "end": "906960"
  },
  {
    "text": "subscriptions now the chat source and",
    "start": "906960",
    "end": "911790"
  },
  {
    "text": "the transmit adapter no sorry now we",
    "start": "911790",
    "end": "915030"
  },
  {
    "text": "have the chat source and the transmit",
    "start": "915030",
    "end": "917070"
  },
  {
    "text": "adapter and we will come back to that we",
    "start": "917070",
    "end": "922590"
  },
  {
    "text": "have looked at most of the system but",
    "start": "922590",
    "end": "924240"
  },
  {
    "text": "not actually how the chat bot does its",
    "start": "924240",
    "end": "927510"
  },
  {
    "text": "work what about those commands I said",
    "start": "927510",
    "end": "930750"
  },
  {
    "text": "they are serviced here we can leverage",
    "start": "930750",
    "end": "932880"
  },
  {
    "text": "kenaf sir again we can leverage K native",
    "start": "932880",
    "end": "937110"
  },
  {
    "text": "for service functionality K native",
    "start": "937110",
    "end": "941880"
  },
  {
    "text": "serving provides the abstraction for",
    "start": "941880",
    "end": "944400"
  },
  {
    "text": "running a container as a service",
    "start": "944400",
    "end": "946170"
  },
  {
    "text": "function ake a native service serving",
    "start": "946170",
    "end": "949920"
  },
  {
    "text": "also provides concepts of revisions that",
    "start": "949920",
    "end": "952230"
  },
  {
    "text": "can able can enable deploys for your",
    "start": "952230",
    "end": "956310"
  },
  {
    "text": "functions and tools to help route",
    "start": "956310",
    "end": "959280"
  },
  {
    "text": "traffic to them check out K native",
    "start": "959280",
    "end": "961500"
  },
  {
    "text": "github repo for more information on that",
    "start": "961500",
    "end": "964070"
  },
  {
    "text": "bot lists will leverage the service",
    "start": "964070",
    "end": "966900"
  },
  {
    "text": "object to enable simple service",
    "start": "966900",
    "end": "968700"
  },
  {
    "text": "functionality",
    "start": "968700",
    "end": "971300"
  },
  {
    "start": "971000",
    "end": "1105000"
  },
  {
    "text": "bottleless can provide encapsulations",
    "start": "973240",
    "end": "976119"
  },
  {
    "text": "for objects for our team to build on",
    "start": "976119",
    "end": "978269"
  },
  {
    "text": "let's look for a place to reduce",
    "start": "978269",
    "end": "980649"
  },
  {
    "text": "complexity for our team we have to write",
    "start": "980649",
    "end": "985720"
  },
  {
    "text": "some code to bridge the messages from",
    "start": "985720",
    "end": "987399"
  },
  {
    "text": "the chat server and then the as the",
    "start": "987399",
    "end": "993069"
  },
  {
    "text": "command responds the two components and",
    "start": "993069",
    "end": "995829"
  },
  {
    "text": "then the response object those two",
    "start": "995829",
    "end": "999129"
  },
  {
    "text": "components are linked together because",
    "start": "999129",
    "end": "1000990"
  },
  {
    "text": "they have very similar code that",
    "start": "1000990",
    "end": "1002249"
  },
  {
    "text": "implements them in fact they show they",
    "start": "1002249",
    "end": "1005009"
  },
  {
    "text": "share authentication required to",
    "start": "1005009",
    "end": "1006660"
  },
  {
    "text": "communicate to the chat server perhaps",
    "start": "1006660",
    "end": "1009029"
  },
  {
    "text": "they could share a persistent connection",
    "start": "1009029",
    "end": "1010769"
  },
  {
    "text": "as well if the component has both a",
    "start": "1010769",
    "end": "1015660"
  },
  {
    "text": "receive adapter and a transmit adapter",
    "start": "1015660",
    "end": "1017850"
  },
  {
    "text": "it's called a gateway to make it simple",
    "start": "1017850",
    "end": "1022499"
  },
  {
    "text": "for us to manage and deploy we made a",
    "start": "1022499",
    "end": "1025649"
  },
  {
    "text": "new CR D for bottleless to wrap the up",
    "start": "1025649",
    "end": "1028890"
  },
  {
    "text": "the Gateway as a concept this deploys",
    "start": "1028890",
    "end": "1033418"
  },
  {
    "text": "inside of kubernetes as a logical unit",
    "start": "1033419",
    "end": "1036500"
  },
  {
    "text": "we define a new custom resource",
    "start": "1036500",
    "end": "1038970"
  },
  {
    "text": "definition this plus a controller that",
    "start": "1038970",
    "end": "1042750"
  },
  {
    "text": "runs inside of our cluster that manages",
    "start": "1042750",
    "end": "1045089"
  },
  {
    "text": "the control plane aspect gives us a",
    "start": "1045089",
    "end": "1048120"
  },
  {
    "text": "gateway and then we can create a chat",
    "start": "1048120",
    "end": "1052200"
  },
  {
    "text": "gateway resource like this we provide",
    "start": "1052200",
    "end": "1055679"
  },
  {
    "text": "the remote search chat server and the",
    "start": "1055679",
    "end": "1057840"
  },
  {
    "text": "two channels that the Gateway",
    "start": "1057840",
    "end": "1058950"
  },
  {
    "text": "communicates with to the rest of",
    "start": "1058950",
    "end": "1061380"
  },
  {
    "text": "bottleless and when did when the chat",
    "start": "1061380",
    "end": "1068070"
  },
  {
    "text": "gateway is created our custom controller",
    "start": "1068070",
    "end": "1070649"
  },
  {
    "text": "makes sure that the source and the",
    "start": "1070649",
    "end": "1072179"
  },
  {
    "text": "transmitted adapter are created for us",
    "start": "1072179",
    "end": "1075710"
  },
  {
    "text": "we focus on making the best to chat",
    "start": "1075710",
    "end": "1078779"
  },
  {
    "text": "gateway we can we do this to be able to",
    "start": "1078779",
    "end": "1084240"
  },
  {
    "text": "focus on the app at large without",
    "start": "1084240",
    "end": "1085740"
  },
  {
    "text": "attempting to reconcile and orchestrate",
    "start": "1085740",
    "end": "1089490"
  },
  {
    "text": "the entire application at once and here",
    "start": "1089490",
    "end": "1094460"
  },
  {
    "text": "with the gateway",
    "start": "1094460",
    "end": "1097620"
  },
  {
    "text": "we have reduced the complexity of our",
    "start": "1097620",
    "end": "1099870"
  },
  {
    "text": "application by extending kubernetes how",
    "start": "1099870",
    "end": "1106470"
  },
  {
    "text": "about expanding what bottleless can do",
    "start": "1106470",
    "end": "1110179"
  },
  {
    "text": "we could make it easy to deploy new",
    "start": "1111470",
    "end": "1114360"
  },
  {
    "text": "commands inside of services but because",
    "start": "1114360",
    "end": "1117900"
  },
  {
    "text": "I trust my team I could make a command",
    "start": "1117900",
    "end": "1120929"
  },
  {
    "text": "that automates that feature from within",
    "start": "1120929",
    "end": "1122760"
  },
  {
    "text": "the chat bot framework itself so a",
    "start": "1122760",
    "end": "1125400"
  },
  {
    "text": "learning command and here's what that",
    "start": "1125400",
    "end": "1136500"
  },
  {
    "text": "would look like installed inside the",
    "start": "1136500",
    "end": "1138299"
  },
  {
    "text": "cluster the code has been converted into",
    "start": "1138299",
    "end": "1141240"
  },
  {
    "text": "a container and the channel links it to",
    "start": "1141240",
    "end": "1143970"
  },
  {
    "text": "the router but how can we convert source",
    "start": "1143970",
    "end": "1147750"
  },
  {
    "text": "code into a container kanan of serving",
    "start": "1147750",
    "end": "1151020"
  },
  {
    "text": "and canada build help with this problem",
    "start": "1151020",
    "end": "1154970"
  },
  {
    "text": "2k native provides the fundamentals for",
    "start": "1155029",
    "end": "1158490"
  },
  {
    "text": "a build pipeline that runs inside of",
    "start": "1158490",
    "end": "1160919"
  },
  {
    "text": "core at ease with a little bit of",
    "start": "1160919",
    "end": "1163020"
  },
  {
    "text": "planning bot lists could have a set of",
    "start": "1163020",
    "end": "1166110"
  },
  {
    "text": "build pipelines that take in get URLs",
    "start": "1166110",
    "end": "1168720"
  },
  {
    "text": "and results in a container image great",
    "start": "1168720",
    "end": "1175190"
  },
  {
    "text": "now we can invoke commands get responses",
    "start": "1175190",
    "end": "1179899"
  },
  {
    "text": "install new commands but if we find out",
    "start": "1179899",
    "end": "1183510"
  },
  {
    "text": "this but we find out that the sales team",
    "start": "1183510",
    "end": "1186140"
  },
  {
    "text": "wants to use the bot as well we can have",
    "start": "1186140",
    "end": "1190679"
  },
  {
    "text": "them build upon what we have we can",
    "start": "1190679",
    "end": "1192899"
  },
  {
    "text": "build them a talk server we get a sorry",
    "start": "1192899",
    "end": "1196919"
  },
  {
    "text": "we could build them a talk gateway and",
    "start": "1196919",
    "end": "1200929"
  },
  {
    "text": "with a couple of correlation IDs the",
    "start": "1200929",
    "end": "1203429"
  },
  {
    "text": "messages filter out just fine and",
    "start": "1203429",
    "end": "1206789"
  },
  {
    "text": "because we understand how to produce a",
    "start": "1206789",
    "end": "1209309"
  },
  {
    "text": "cloud event for chat event types we can",
    "start": "1209309",
    "end": "1211770"
  },
  {
    "text": "wire it up to the existing channels",
    "start": "1211770",
    "end": "1213600"
  },
  {
    "text": "without worrying so there it is we made",
    "start": "1213600",
    "end": "1220289"
  },
  {
    "text": "a service chat bot framework we are",
    "start": "1220289",
    "end": "1222870"
  },
  {
    "text": "leveraging service tech empowered by K",
    "start": "1222870",
    "end": "1224970"
  },
  {
    "text": "native to get moving quickly",
    "start": "1224970",
    "end": "1227250"
  },
  {
    "text": "we have extended kubernetes to",
    "start": "1227250",
    "end": "1229080"
  },
  {
    "text": "encapsulate the features of our",
    "start": "1229080",
    "end": "1231360"
  },
  {
    "text": "application I want you I want to want",
    "start": "1231360",
    "end": "1236760"
  },
  {
    "text": "you to leave here with these thoughts",
    "start": "1236760",
    "end": "1238669"
  },
  {
    "text": "link of kubernetes as a way to extend",
    "start": "1238669",
    "end": "1241740"
  },
  {
    "text": "your application development you can",
    "start": "1241740",
    "end": "1244350"
  },
  {
    "text": "build controllers that do very specific",
    "start": "1244350",
    "end": "1246630"
  },
  {
    "text": "things very well and if you are careful",
    "start": "1246630",
    "end": "1249630"
  },
  {
    "text": "about composability you can build very",
    "start": "1249630",
    "end": "1252299"
  },
  {
    "text": "complex applications that are also",
    "start": "1252299",
    "end": "1254429"
  },
  {
    "text": "maintainable Kay native is an example of",
    "start": "1254429",
    "end": "1257820"
  },
  {
    "text": "the power of extending kubernetes to",
    "start": "1257820",
    "end": "1259860"
  },
  {
    "text": "build your own framework and bottleless",
    "start": "1259860",
    "end": "1262409"
  },
  {
    "text": "is an example of building a highly",
    "start": "1262409",
    "end": "1264690"
  },
  {
    "text": "customized framework on top of that",
    "start": "1264690",
    "end": "1268549"
  },
  {
    "text": "thank you",
    "start": "1268549",
    "end": "1271580"
  }
]