[
  {
    "text": "hello everyone hey how's it going um yeah let's get it started my name is Tom",
    "start": "160",
    "end": "6799"
  },
  {
    "text": "um I am the I I'm an open source engineer at a company called testify SEC um we specialize in supply chain",
    "start": "6799",
    "end": "13160"
  },
  {
    "text": "security um for this uh for this talk I'm the chief chat GPT officer so for",
    "start": "13160",
    "end": "20119"
  },
  {
    "text": "any of the chat gpts generated images um you see in this talk that's my contribution um and I'm joined here by",
    "start": "20119",
    "end": "26599"
  },
  {
    "text": "Matias hey I'm Matias uh director of tech with venafi uh with within venafi",
    "start": "26599",
    "end": "32599"
  },
  {
    "text": "I'm focusing on workload identity and a big part of that is spiffy Inspire and",
    "start": "32599",
    "end": "38079"
  },
  {
    "text": "uh like talking to customers about it and making them excited about it yeah so the title of this talk today is the",
    "start": "38079",
    "end": "44559"
  },
  {
    "text": "story of crush the microservice that navigated the cloud native ocean with just a spiffy identity there's going to",
    "start": "44559",
    "end": "50719"
  },
  {
    "text": "be a lot of parallels in this talk between um things that we see in the cloud native world and um ocean creature",
    "start": "50719",
    "end": "57600"
  },
  {
    "text": "characters that I've come up with and also please forgive me I tried everything I did to remove Finding Nemo references from from the images but chat",
    "start": "57600",
    "end": "64239"
  },
  {
    "text": "gbt instantly correlated uh crushed the turtle to well yeah copyright",
    "start": "64239",
    "end": "69479"
  },
  {
    "text": "infringement I guess it's like subtly calling me out for the copyright infringement that I've done on this talk but hopefully I don't get um booed by",
    "start": "69479",
    "end": "76799"
  },
  {
    "text": "the cncf or um sued by by Pixar right",
    "start": "76799",
    "end": "82360"
  },
  {
    "text": "let's get let's get this going I suppose yeah so everybody meet crush crush is a",
    "start": "82360",
    "end": "88799"
  },
  {
    "text": "small turtle shape microservice alone in a large ocean of other",
    "start": "88799",
    "end": "93840"
  },
  {
    "text": "microservices nobody trusted poor Crush in a world where every communication relied on trust Crush felt",
    "start": "93840",
    "end": "102520"
  },
  {
    "text": "outcasted even when he tried to talk to other microservices the other microservices",
    "start": "102520",
    "end": "108799"
  },
  {
    "text": "replied with nothing but 403s Crush felt all",
    "start": "108799",
    "end": "114960"
  },
  {
    "text": "alone almost as if he was in a Docker container like fish pole with nothing mounted to it to change its",
    "start": "114960",
    "end": "121600"
  },
  {
    "text": "fate until an enormous Elder sea turtle",
    "start": "121600",
    "end": "127280"
  },
  {
    "text": "appeared the ocean is a dangerous place the Elder Turtle said just like many other distributed systems the other",
    "start": "127280",
    "end": "134120"
  },
  {
    "text": "microservice creatures need to know that you're a trusted part of the environment but I've tried everything little crush",
    "start": "134120",
    "end": "140480"
  },
  {
    "text": "said I've even tried giving user and postgress to Pongo the postgress puffer",
    "start": "140480",
    "end": "146000"
  },
  {
    "text": "you need your own identity little one the Elder Turtle said otherwise you might even find yourself befriending the",
    "start": "146000",
    "end": "152879"
  },
  {
    "text": "wrong kind of services were you too young to remember that time you met the side car shark with that shouldn't have",
    "start": "152879",
    "end": "159000"
  },
  {
    "text": "been anywhere near you Elder turtle was right that side car",
    "start": "159000",
    "end": "164959"
  },
  {
    "text": "shark really came out of nowhere if it wasn't for Gus the gups glassfish Crush",
    "start": "164959",
    "end": "170040"
  },
  {
    "text": "could have been in major trouble so off crush went to find its",
    "start": "170040",
    "end": "176120"
  },
  {
    "text": "identity I see it as an identity you seek Crush had just met sha the Spy",
    "start": "176120",
    "end": "181800"
  },
  {
    "text": "socket shrimp for the very first time yes the T the young Turtle",
    "start": "181800",
    "end": "187319"
  },
  {
    "text": "responded since I first left the development Reef I haven't managed a single Network call crush the turtle the",
    "start": "187319",
    "end": "194720"
  },
  {
    "text": "shrimp began the Spy server Elder Turtle has given me confirmation of your registration wow the Elder Turtle",
    "start": "194720",
    "end": "201959"
  },
  {
    "text": "orchestrates all the workload entities on the reef Crush asked yes sha replied",
    "start": "201959",
    "end": "207599"
  },
  {
    "text": "the Elder turtle is the roote of trust for all identities on the roef the Elder",
    "start": "207599",
    "end": "212879"
  },
  {
    "text": "Turtle can even give us trust bundles of other um trust domains but the platform",
    "start": "212879",
    "end": "218040"
  },
  {
    "text": "team haven't quite gotten to grips with that yet Sean side so I hereby bestow",
    "start": "218040",
    "end": "223159"
  },
  {
    "text": "upon you an x509 spiffy identity uh verifiable identity document known as an",
    "start": "223159",
    "end": "228680"
  },
  {
    "text": "esid for the trust domain of this great reef an identity card floated through",
    "start": "228680",
    "end": "233760"
  },
  {
    "text": "the water into crush a small flipper wow so now I can have secure communication with everyone",
    "start": "233760",
    "end": "240439"
  },
  {
    "text": "well well that's the idea not really the shrimp the shrimp side the platform seem seem to the",
    "start": "240439",
    "end": "247599"
  },
  {
    "text": "platform team seem to think that this is the answer to all trust and secure communication throughout production but",
    "start": "247599",
    "end": "254760"
  },
  {
    "text": "in reality I swear most cloud services that we use don't accept it and what's possible when talking to some of the",
    "start": "254760",
    "end": "260239"
  },
  {
    "text": "older service fish that are swimming around I really don't know I dread to",
    "start": "260239",
    "end": "265479"
  },
  {
    "text": "think what would happen if you tried speaking with Terren the Tomcat server trout with one one of these sha then",
    "start": "265479",
    "end": "272080"
  },
  {
    "text": "said his goodbyes sending a customary eof to crush before Vanishing back into",
    "start": "272080",
    "end": "277199"
  },
  {
    "text": "the Shadows I can't wait to start communicating with the rest of the",
    "start": "277199",
    "end": "282360"
  },
  {
    "text": "services in production Crush exclaimed and I know just who to start with on the",
    "start": "282360",
    "end": "287400"
  },
  {
    "text": "list Crush jumped onto the east Australia current to prepare secure communication with his uh with his first",
    "start": "287400",
    "end": "294600"
  },
  {
    "text": "2bp well with the web server whale Crush yelled at the top of its lungs sorry",
    "start": "294600",
    "end": "300000"
  },
  {
    "text": "Crush you know that uh that this communication is not secure well MCG gr no look I have an identity now Crush",
    "start": "300000",
    "end": "307199"
  },
  {
    "text": "took out the esid and laid it out in a flipper so now what we're going to do is",
    "start": "307199",
    "end": "312400"
  },
  {
    "text": "we're going to stop the story for a moment while Matias shows us a little demo of what a spy ID or an sfed looks",
    "start": "312400",
    "end": "318919"
  },
  {
    "text": "like yep and so I'm not the greatest prompt engineer so the demos are not",
    "start": "318919",
    "end": "325440"
  },
  {
    "text": "going to be like this animated but what I have done in advance is I've created a simple uh micros service application",
    "start": "325440",
    "end": "332000"
  },
  {
    "text": "that's going to be representing Crush uh it's a called it customer and um I kind",
    "start": "332000",
    "end": "338199"
  },
  {
    "text": "of just I'm retrieving and I'm going to showcase the code in here uh here is a",
    "start": "338199",
    "end": "343560"
  },
  {
    "text": "code and what this does is this connects to the workload API socket and it's then",
    "start": "343560",
    "end": "348919"
  },
  {
    "text": "going to fit fetch all my x509 S fits from the workload API socket and I'm uh",
    "start": "348919",
    "end": "355240"
  },
  {
    "text": "putting them into variables and into a map so that I then then can uh visualize them and I'm now going to a website this",
    "start": "355240",
    "end": "364520"
  },
  {
    "text": "one and this shows me all of the details of my uh workload API socket so if I do",
    "start": "364520",
    "end": "370479"
  },
  {
    "text": "a refresh you will see in here in the locks on the right hand side calls coming in so this is my customer",
    "start": "370479",
    "end": "376160"
  },
  {
    "text": "application which is representing uh my micros service and what we can see in here is like some",
    "start": "376160",
    "end": "382240"
  },
  {
    "text": "details of the um of of my uh application uh first and foremost we",
    "start": "382240",
    "end": "388120"
  },
  {
    "text": "have our spify identity it's represented by this I have deployed uh spire on my kubernetes cluster it's a kubernetes",
    "start": "388120",
    "end": "394639"
  },
  {
    "text": "cluster running in uh Google cloud and I have um kind of done a quite simple hm",
    "start": "394639",
    "end": "401240"
  },
  {
    "text": "chart deploy of spire with very little modification you can also see it set",
    "start": "401240",
    "end": "406759"
  },
  {
    "text": "some extra DNS names and especially later on this is going to be useful to do some extra things as you might see",
    "start": "406759",
    "end": "413560"
  },
  {
    "text": "you can also see all of my certificates are really shortlived uh uh all my times",
    "start": "413560",
    "end": "419800"
  },
  {
    "text": "Toc time so it's 11: uh p.m. there and oh 11:00 p.m. it got almost issued and",
    "start": "419800",
    "end": "426280"
  },
  {
    "text": "it's f it into like almost 3:00 a.m. the next day so for 5 hours my certificate is followed and then it retrieves a new",
    "start": "426280",
    "end": "433120"
  },
  {
    "text": "one and this is representing crush the microservice so we've seen crush the",
    "start": "433120",
    "end": "441160"
  },
  {
    "text": "microservices asfit um and now we're going to continue on with onwards with our secure potentially secure",
    "start": "441160",
    "end": "448039"
  },
  {
    "text": "communication with wellmer the webs service well well isn't that marvelous",
    "start": "448039",
    "end": "453319"
  },
  {
    "text": "wellmer said when I was born I was lucky enough to have been programmed to be able to use my x509 spiffy ID to create",
    "start": "453319",
    "end": "460479"
  },
  {
    "text": "an encrypted Communication channel with other compatible Services should we try",
    "start": "460479",
    "end": "465560"
  },
  {
    "text": "it out hopefully you should be programmed this way too cool now we're going to introduce",
    "start": "465560",
    "end": "471440"
  },
  {
    "text": "well whale as a microservice and uh this is done uh by a new microservice called",
    "start": "471440",
    "end": "477319"
  },
  {
    "text": "the back end and this is normal goang web server and one of the things that I",
    "start": "477319",
    "end": "483560"
  },
  {
    "text": "want to highlight in here it's almost like a normal https web server you would spin up with goang and like very little",
    "start": "483560",
    "end": "489639"
  },
  {
    "text": "modification is actually needed to spify your applications so the way this works",
    "start": "489639",
    "end": "495400"
  },
  {
    "text": "is uh in this first bit we are again uh setting our uh getting our source from",
    "start": "495400",
    "end": "502120"
  },
  {
    "text": "the workload API socket we are also saying which client IDs which py",
    "start": "502120",
    "end": "507639"
  },
  {
    "text": "identities are allowed to talk to our back because like we want to make sure that like not all P IDs are uh",
    "start": "507639",
    "end": "513680"
  },
  {
    "text": "authorized to talk to our web server but only like specific ones and in this case for the purpose of this demo I really",
    "start": "513680",
    "end": "519360"
  },
  {
    "text": "have like set it to like only the customer application or crust the micros service can talk to uh this web server",
    "start": "519360",
    "end": "526560"
  },
  {
    "text": "and then uh I'm putting this all in an https server config and uh adding all of",
    "start": "526560",
    "end": "533560"
  },
  {
    "text": "this and starting my server with listen and serf DLS and that's kind of it like this is now as bus spe specified my",
    "start": "533560",
    "end": "541880"
  },
  {
    "text": "application um when the web service get called we have a simple root Handler",
    "start": "541880",
    "end": "547079"
  },
  {
    "text": "what this does is it first uh get gives a message with successfully connected to",
    "start": "547079",
    "end": "552519"
  },
  {
    "text": "the backend service and it adds the time of the current time to it so and and the",
    "start": "552519",
    "end": "558680"
  },
  {
    "text": "way this then represents into crush and what Crush has to do again Crush talks",
    "start": "558680",
    "end": "565320"
  },
  {
    "text": "to uh the workload API socket to again gets it own identity we also going to sa",
    "start": "565320",
    "end": "571800"
  },
  {
    "text": "for crash you can only talk to well theale or the backend service in this case we're also building up our mtls",
    "start": "571800",
    "end": "579560"
  },
  {
    "text": "client config as you would do a normal mtls client config if you would do that and we are adding our spify bits uh in",
    "start": "579560",
    "end": "587320"
  },
  {
    "text": "here with that one and like we are making our connection uh here with a get the data",
    "start": "587320",
    "end": "594160"
  },
  {
    "text": "from it if you have any problems we returning any errors and we are then showcasing that in our uh website and",
    "start": "594160",
    "end": "602320"
  },
  {
    "text": "this translates to the following so I'm going now to first show the logs of uh",
    "start": "602320",
    "end": "610959"
  },
  {
    "text": "spify",
    "start": "610959",
    "end": "613839"
  },
  {
    "text": "backend so I'm watching the logs of the py back ends and I have a simple like",
    "start": "618200",
    "end": "623720"
  },
  {
    "text": "website with all different buttons that are going to do the actions of today and we're going to start with the p native",
    "start": "623720",
    "end": "630120"
  },
  {
    "text": "uh mtls action and I'm going to click this and you can see here I have locked",
    "start": "630120",
    "end": "636120"
  },
  {
    "text": "got a response from spify spire and it showcases a spify back end so on Cor the",
    "start": "636120",
    "end": "642200"
  },
  {
    "text": "micros service also know like who I talk to on um the back end you can also see",
    "start": "642200",
    "end": "650079"
  },
  {
    "text": "that it has identified that it's coming from the customer and it has responded with this message and this match this",
    "start": "650079",
    "end": "656440"
  },
  {
    "text": "one if I press the button again it does a new and it Updates this but what if you have",
    "start": "656440",
    "end": "663399"
  },
  {
    "text": "like a rogue customer so I have deployed the same micros service is actually the",
    "start": "663399",
    "end": "668600"
  },
  {
    "text": "same micros service with the same credentials but with a different identity so when I now am going to do is",
    "start": "668600",
    "end": "675839"
  },
  {
    "text": "I'm going to repeat scull and doing spy native mtls and you see I'm getting an error back with a bad certificate so",
    "start": "675839",
    "end": "683519"
  },
  {
    "text": "even though this identity is part of the same thrust domain because I'm literally",
    "start": "683519",
    "end": "689440"
  },
  {
    "text": "saying like only Crush can be authorized to talk to me this still gets denied and it still gets the BET certificate back",
    "start": "689440",
    "end": "695480"
  },
  {
    "text": "even though like they have the same rot of trust and you can see this is being locked here uh and this is the identity",
    "start": "695480",
    "end": "702440"
  },
  {
    "text": "of my rogue issuer uh I literally call it Rogue for",
    "start": "702440",
    "end": "708560"
  },
  {
    "text": "Simplicity Okay so we've just seen Crush speaking to wellmer the microservice",
    "start": "712079",
    "end": "718560"
  },
  {
    "text": "whale success sucessfully with using spiffy Spiffy's native libraries and go",
    "start": "718560",
    "end": "724360"
  },
  {
    "text": "uh to configure the web services appropriately um we' as we'd expect that works absolutely fine and there are all",
    "start": "724360",
    "end": "730959"
  },
  {
    "text": "great libraries out there you can do this in Java Java has a library I know python has a library so like most",
    "start": "730959",
    "end": "736240"
  },
  {
    "text": "popular programming languages by now have like libraries for kind of spe",
    "start": "736240",
    "end": "741320"
  },
  {
    "text": "spying your applications so even for Terren the Tom Cat server there is hope",
    "start": "741320",
    "end": "746440"
  },
  {
    "text": "there is hope still isn't that awesome wellmer said now that we both have",
    "start": "746440",
    "end": "752600"
  },
  {
    "text": "spiffy IDs from the same trust domain we can talk to each other all the time and",
    "start": "752600",
    "end": "758240"
  },
  {
    "text": "don't worry Crush it's only you I trust any Rogue Services won't be able to talk to me because their spiffy idri will be",
    "start": "758240",
    "end": "765320"
  },
  {
    "text": "different well Mar reassured crush and on that note Crush flew back into the current off towards the next 2B pal",
    "start": "765320",
    "end": "773760"
  },
  {
    "text": "however this time crush's confident wasn't quite so high Mar the Mainframe morish idolish",
    "start": "773760",
    "end": "781160"
  },
  {
    "text": "saw Crush swimming into the periphery whilst letting out sigh Maurice already couldn't be bothered",
    "start": "781160",
    "end": "787279"
  },
  {
    "text": "with trying to listen to what this young hit microservice had to say hey Maurice do you know what spiffy is Crush asked",
    "start": "787279",
    "end": "794040"
  },
  {
    "text": "Crush I was written in cobal before your parents were born Maurice gloated if it ain't with the IBM resource access",
    "start": "794040",
    "end": "800600"
  },
  {
    "text": "control facility I ain't budging Crush realized that this was a conversation that wasn't going to end well and glided",
    "start": "800600",
    "end": "807399"
  },
  {
    "text": "off into the distance Clarence the cleaning shrimp server",
    "start": "807399",
    "end": "813480"
  },
  {
    "text": "stood before Crush clicking his Jaws jubilant however that is the only way",
    "start": "813480",
    "end": "819639"
  },
  {
    "text": "that Paul Clarence could communicate Crush turned around to see",
    "start": "819639",
    "end": "824920"
  },
  {
    "text": "an octopus floating above them I'm Erica the envoy octopus said the red creature",
    "start": "824920",
    "end": "830720"
  },
  {
    "text": "poor Clarence was written in PHP he doesn't know what spiffy is Erica continued but there is good news that is",
    "start": "830720",
    "end": "838040"
  },
  {
    "text": "why I'm here to help young Crush but how does that work Crush replied feeling confused I am configured",
    "start": "838040",
    "end": "845040"
  },
  {
    "text": "to handle requests on behalf of of Clarence here hand me your rest FID and I will ensure that it is trusted if all",
    "start": "845040",
    "end": "852199"
  },
  {
    "text": "is well I'll make sure I send on your request to Clarence wow thank God you're here Erica",
    "start": "852199",
    "end": "858199"
  },
  {
    "text": "Crush chuckled let's give this a try cool now we're going to Envoy proxy demo",
    "start": "858199",
    "end": "865240"
  },
  {
    "text": "so um first I'm going to showcase the code again so I have like a simple HTTP",
    "start": "865240",
    "end": "872399"
  },
  {
    "text": "service and um there's not much to say like I have a Handler in here in the same way as I had a Handler in my mtls",
    "start": "872399",
    "end": "879079"
  },
  {
    "text": "native application and I'm starting this time on HTTP listen and serve so no",
    "start": "879079",
    "end": "884880"
  },
  {
    "text": "https uh the Handler in here of the information I'm getting back is the same as the previous service just for uh",
    "start": "884880",
    "end": "890800"
  },
  {
    "text": "Simplicity sake but it's a simple HTTP server so it can be everything this is",
    "start": "890800",
    "end": "895839"
  },
  {
    "text": "written in go as like that I know best uh but like can be any language even if you buy like Enterprise Products it can",
    "start": "895839",
    "end": "901920"
  },
  {
    "text": "be that and what I've done is in the deployment um and now I'm going to the",
    "start": "901920",
    "end": "908800"
  },
  {
    "text": "deployment I have configured Envoy as a sidecar container you can see Envoy being configured here and that has",
    "start": "908800",
    "end": "915720"
  },
  {
    "text": "mounted in an Envoy config and uh we're going to take a look at that quite closely as well as the spiffy workload",
    "start": "915720",
    "end": "923000"
  },
  {
    "text": "API and uh it's also configured to be served on uh port",
    "start": "923000",
    "end": "929680"
  },
  {
    "text": "8080 um that's my spy HTP back end and my container Port is is",
    "start": "929680",
    "end": "935759"
  },
  {
    "text": "9,1 so when I go to my config map and this is like an Envoy config and you can",
    "start": "935759",
    "end": "941600"
  },
  {
    "text": "look at that as like but this you would configure on your behalf but I've now actually configured this uh myself and",
    "start": "941600",
    "end": "947920"
  },
  {
    "text": "you can do that as well you don't necessarily need is for this is uh first and foremost and it's it's bit templated",
    "start": "947920",
    "end": "953720"
  },
  {
    "text": "it in with uh Helm uh but this is actually going to request to the SDS uh",
    "start": "953720",
    "end": "961079"
  },
  {
    "text": "the secure secret data storage kind of thing so like it's going to talk to the work",
    "start": "961079",
    "end": "967000"
  },
  {
    "text": "API and it's going to request this uh specific spiffy certificate so like this is going to be requesting the HTP HTTP",
    "start": "967000",
    "end": "974600"
  },
  {
    "text": "backend uh spify certificates when I scroll down a bit more in the config you will see in here that it's going to do",
    "start": "974600",
    "end": "981639"
  },
  {
    "text": "some validation context and it's going to match the type subject alternative names with like the URI and it's going",
    "start": "981639",
    "end": "988440"
  },
  {
    "text": "to match this with our customer um SP identity so envoice for us going to do",
    "start": "988440",
    "end": "995240"
  },
  {
    "text": "the authorization on behalf of our HTTP uh microservices so it's not only going to put mtls in front of it it's also",
    "start": "995240",
    "end": "1001839"
  },
  {
    "text": "going to do the authorization for us and I'm a bit further down in the config uh we are saying this is the trust domain",
    "start": "1001839",
    "end": "1009399"
  },
  {
    "text": "and uh where it can find also like the SDS socket which is part of the spiffy",
    "start": "1009399",
    "end": "1015519"
  },
  {
    "text": "workload API and we are serving like this as all over port",
    "start": "1015519",
    "end": "1021759"
  },
  {
    "text": "8080 um so when I now go to my application I'm going to showcase the",
    "start": "1021759",
    "end": "1029520"
  },
  {
    "text": "locks of the spiffy HTTP backend in this case and they are going to be a bit",
    "start": "1029520",
    "end": "1035760"
  },
  {
    "text": "longer as it's Envoy locks so I'm now going back to here and",
    "start": "1035760",
    "end": "1042880"
  },
  {
    "text": "I say like spiffy with Envoy and an HTP backend so from crush the microservice",
    "start": "1042880",
    "end": "1050120"
  },
  {
    "text": "perspective it's just a normal mtls scy so like we saw earlier the mtls call that it did for the spify native back",
    "start": "1050120",
    "end": "1056880"
  },
  {
    "text": "end for the HTTP backend it's actually the exact same call and there's nothing needs to be changed so like because",
    "start": "1056880",
    "end": "1063400"
  },
  {
    "text": "crash is spey native it does like handle the HP backend as it would",
    "start": "1063400",
    "end": "1069200"
  },
  {
    "text": "be spe native as well only envo in front of it so when I do this again what we",
    "start": "1069200",
    "end": "1074600"
  },
  {
    "text": "will see and I always need to look into the logs in here we can see that it has matched this with like the spify",
    "start": "1074600",
    "end": "1081600"
  },
  {
    "text": "customer one and it does all of the validation and to Showcase that the validation works I'm going again to my",
    "start": "1081600",
    "end": "1087559"
  },
  {
    "text": "rogue application and I'm going to repeat this call and again I'm getting",
    "start": "1087559",
    "end": "1092600"
  },
  {
    "text": "like the failed one and you can see in here uh that it's a connection verify",
    "start": "1092600",
    "end": "1097960"
  },
  {
    "text": "failed because the spify identity didn't match so we are again protecting our",
    "start": "1097960",
    "end": "1104039"
  },
  {
    "text": "workloads and we are able to verify uh everything in there",
    "start": "1104039",
    "end": "1110080"
  },
  {
    "text": "okay awesome on with the story yet another successful request I'm",
    "start": "1111640",
    "end": "1118720"
  },
  {
    "text": "on a roll shouted Crush now I better find the crabs tokens please Santiago the S3",
    "start": "1118720",
    "end": "1126840"
  },
  {
    "text": "bucket crab blocked crush's path for access to the bucket Crush needs the",
    "start": "1126840",
    "end": "1132760"
  },
  {
    "text": "token Santiago the S3 crab was different to others Santiago only accepts tokens as a",
    "start": "1132760",
    "end": "1140080"
  },
  {
    "text": "form of authentication unless Crush wanted to exchange an x509 esid for AWS",
    "start": "1140080",
    "end": "1146440"
  },
  {
    "text": "credentials with Angus the AWS anywhere angular fish feel free to uh research",
    "start": "1146440",
    "end": "1152480"
  },
  {
    "text": "AWS anywhere further out with this story um but yeah unless he wanted to to speak",
    "start": "1152480",
    "end": "1157840"
  },
  {
    "text": "to Angus Crush would have to find another way of getting a token the poor platform team just didn't",
    "start": "1157840",
    "end": "1165200"
  },
  {
    "text": "have time to configure Angus to perform such Magic Crush felt all hope was lost",
    "start": "1165200",
    "end": "1173120"
  },
  {
    "text": "until sha the spocket server uh sorry sha the spocket shrimp reappeared you",
    "start": "1173120",
    "end": "1179840"
  },
  {
    "text": "can request the token from me Crush Sean lamented please note though that conversely to x509 sfeds JWT sfeds must",
    "start": "1179840",
    "end": "1187799"
  },
  {
    "text": "be minted directly from the Elder Turtle Spire server in real time please proceed",
    "start": "1187799",
    "end": "1192880"
  },
  {
    "text": "with caution go forth with your token though just make sure not to give it to untrusted parties Sean",
    "start": "1192880",
    "end": "1201000"
  },
  {
    "text": "warned yes the token we love the token now I authorize you to make requests to",
    "start": "1201080",
    "end": "1206840"
  },
  {
    "text": "my bucket Antonio chuckled and without further Ado another demo yes and now we're going into eds3",
    "start": "1206840",
    "end": "1214240"
  },
  {
    "text": "connection with jot sfit I explained earlier already that my KU cluster is running in GQ so it's Google Cloud but I",
    "start": "1214240",
    "end": "1221320"
  },
  {
    "text": "want to talk to aable yes so as part of my uh Spire setup what I've done is I",
    "start": "1221320",
    "end": "1227640"
  },
  {
    "text": "have configured IDC endpoint which is publicly available and which then can be used by external services to verify uh",
    "start": "1227640",
    "end": "1235159"
  },
  {
    "text": "the jot keys that I get issued uh to my applications and uh this is like the",
    "start": "1235159",
    "end": "1241039"
  },
  {
    "text": "well-known path uh that like is of O endpoint and I have configured this in",
    "start": "1241039",
    "end": "1248240"
  },
  {
    "text": "uh AWS I'm going to log on a bit but like this is my open ID connect uh",
    "start": "1248240",
    "end": "1253679"
  },
  {
    "text": "configuration and I'm trying to see where it is uh this is the provider Ider",
    "start": "1253679",
    "end": "1259440"
  },
  {
    "text": "that's configured and it has like everything set up and then what I've done is I've created a role it's called",
    "start": "1259440",
    "end": "1265320"
  },
  {
    "text": "the demo spify uh role and this has uh permissions to do S3 requests to two",
    "start": "1265320",
    "end": "1275400"
  },
  {
    "text": "buckets the uh to to a bucket the mat P demo bucket and if I go to the trust",
    "start": "1275400",
    "end": "1284080"
  },
  {
    "text": "relationship in here it set up that it needs to use the Federated AR that I uh",
    "start": "1284080",
    "end": "1289799"
  },
  {
    "text": "was showing earlier with my ODC one but it's also going to do the verification",
    "start": "1289799",
    "end": "1295000"
  },
  {
    "text": "again of the spify ID and I'm going to make this a bit bigger that it's like",
    "start": "1295000",
    "end": "1300440"
  },
  {
    "text": "better readable and here you can see this so we have the audience set to demo so you can add audiences to your chot",
    "start": "1300440",
    "end": "1306919"
  },
  {
    "text": "requests and uh in this case I'm doing demo and it's also going to match this on the sub which is my spify identity",
    "start": "1306919",
    "end": "1314200"
  },
  {
    "text": "that I've given and that's how you again like you can do fine grain Access Control to like Cloud providers because",
    "start": "1314200",
    "end": "1319720"
  },
  {
    "text": "like you can really add the spify identity to your cloud provider roles and like do the matching based on that",
    "start": "1319720",
    "end": "1325840"
  },
  {
    "text": "one and I think I'm right in saying that in this case it supports wild carding for if you wanted to say like anything",
    "start": "1325840",
    "end": "1332159"
  },
  {
    "text": "within a particular name space or something like yeah and so this like I have the",
    "start": "1332159",
    "end": "1337360"
  },
  {
    "text": "permissions to uh write read from a stre from my stre bucket and I have set it up",
    "start": "1337360",
    "end": "1342880"
  },
  {
    "text": "the trust relationship between the role and uh the Federation thing",
    "start": "1342880",
    "end": "1349120"
  },
  {
    "text": "I also have like an A3 packet demo uh I'm going to refresh to Showcase that it's fully",
    "start": "1349120",
    "end": "1355279"
  },
  {
    "text": "empty and before actually doing the demo I'm quickly taking you through the code and how this works so I have a setup and",
    "start": "1355279",
    "end": "1364200"
  },
  {
    "text": "actually it's it's fairly simple code and from a code perspective it's like you would be running uh your application",
    "start": "1364200",
    "end": "1371240"
  },
  {
    "text": "as natively naal yes so like in the code itself there is nothing that really hints towards piffy or Spire so set up",
    "start": "1371240",
    "end": "1378960"
  },
  {
    "text": "like a new session with the config I have added a region in here that I want to talk to uh and then I'm creating a",
    "start": "1378960",
    "end": "1385760"
  },
  {
    "text": "new S3 instance and I'm getting an object for example and I'm reading this out and showcasing this and you will see",
    "start": "1385760",
    "end": "1392120"
  },
  {
    "text": "this in a bit so in the code itself there is nothing like that points to S3",
    "start": "1392120",
    "end": "1397760"
  },
  {
    "text": "or to spify Spire better so you might ask how this works and uh to be able to",
    "start": "1397760",
    "end": "1403679"
  },
  {
    "text": "Showcase this I've added a small extra when I go to the docker file of my",
    "start": "1403679",
    "end": "1409120"
  },
  {
    "text": "application I've besides my spiffy demo binary I've also added a binary called",
    "start": "1409120",
    "end": "1416039"
  },
  {
    "text": "spiffy it was assume roll uh it's something originally created by uh square and and they have publicly",
    "start": "1416039",
    "end": "1422200"
  },
  {
    "text": "blocked about it so definitely check that out and this can then be used in conjunction with your uh ADLs config",
    "start": "1422200",
    "end": "1430520"
  },
  {
    "text": "so I have like added an entry point with an init container uh to my customer",
    "start": "1430520",
    "end": "1436840"
  },
  {
    "text": "application and what is does is it creates an ads config file and it's",
    "start": "1436840",
    "end": "1442559"
  },
  {
    "text": "going to create a default profile and it's going to set the credential process so like that's something that ads by",
    "start": "1442559",
    "end": "1448520"
  },
  {
    "text": "default has and when you're requesting a an ads credential it will see this line",
    "start": "1448520",
    "end": "1456320"
  },
  {
    "text": "and it will then run the following binary and what this binary does it make sure that it requests it from the SP API",
    "start": "1456320",
    "end": "1462880"
  },
  {
    "text": "circuit and it's going to form the chot token in the right way so that it can be presented to a",
    "start": "1462880",
    "end": "1468960"
  },
  {
    "text": "and you get authenticated and authorized to AWS so you can see the credentials you need to give the role that you're",
    "start": "1468960",
    "end": "1474600"
  },
  {
    "text": "going to assume so the role you saw earlier in AWS you need to set the audience which is demo in this case and",
    "start": "1474600",
    "end": "1480919"
  },
  {
    "text": "you need to give like where your workload API so at is and the way this gets done is through an init container",
    "start": "1480919",
    "end": "1487559"
  },
  {
    "text": "you can see uh this is the init container that gets run and uh we have",
    "start": "1487559",
    "end": "1492600"
  },
  {
    "text": "like the ads config file monted as a volume mon so this is like an in memory one and then uh my spify customer",
    "start": "1492600",
    "end": "1500559"
  },
  {
    "text": "application consumes this and uh one of the things I had to do extra is set two",
    "start": "1500559",
    "end": "1506520"
  },
  {
    "text": "environment variables and it's this and these are common SDK environment",
    "start": "1506520",
    "end": "1512760"
  },
  {
    "text": "variables so like every ads SDK is aware of these and that's the ads config file where the config file can be found as",
    "start": "1512760",
    "end": "1520320"
  },
  {
    "text": "well as it needs to load that config file and that's all that needs to be done so when I now go to my application",
    "start": "1520320",
    "end": "1527640"
  },
  {
    "text": "back first I'm going to show that when I retrieve a file from an S3 bucket it's",
    "start": "1527640",
    "end": "1533559"
  },
  {
    "text": "going to give an error because my S3 bucket is empty when I now do a right of",
    "start": "1533559",
    "end": "1538880"
  },
  {
    "text": "the file to S3 bucket uh it has successfully uploaded a test file to my uh packet and when I'm",
    "start": "1538880",
    "end": "1548039"
  },
  {
    "text": "now going to do a refresh in here we can see the test file has",
    "start": "1548039",
    "end": "1553640"
  },
  {
    "text": "appeared and when I retrieve the file again we now have this content that is gotting",
    "start": "1553640",
    "end": "1561360"
  },
  {
    "text": "retriev from uh that file if I do this again with my rogue application so",
    "start": "1561360",
    "end": "1566799"
  },
  {
    "text": "retrieve from a file from an S3 bracket it gets denied so even though like it had the same it was assume and",
    "start": "1566799",
    "end": "1573120"
  },
  {
    "text": "everything set up because I have limited the dater to a specific spify identity",
    "start": "1573120",
    "end": "1578840"
  },
  {
    "text": "my rogue identity cannot like assume that role and and then also execute",
    "start": "1578840",
    "end": "1584600"
  },
  {
    "text": "against it and do any s reactions",
    "start": "1584600",
    "end": "1589600"
  },
  {
    "text": "okay so on with the tour my first Network call to a public",
    "start": "1592399",
    "end": "1597799"
  },
  {
    "text": "cloud service so cool Crush was on top of the world you can authenticate to",
    "start": "1597799",
    "end": "1603200"
  },
  {
    "text": "many other services just like this Antonio said you can even authenticate to gcp",
    "start": "1603200",
    "end": "1609720"
  },
  {
    "text": "like this but they don't quite support um x59 SIDS just yet Antonio",
    "start": "1609720",
    "end": "1614799"
  },
  {
    "text": "smirked huh not according to Gerald the gka jellyfish Crush said oh well maybe that's a new feature",
    "start": "1614799",
    "end": "1623039"
  },
  {
    "text": "at least we'll make loads of money on egress charges said Antonio evil evil",
    "start": "1623039",
    "end": "1629880"
  },
  {
    "text": "Antonio exhilarated by The Rush of being able to read from an S3 bucket for the very first time Crush was ready for the",
    "start": "1629880",
    "end": "1637159"
  },
  {
    "text": "next Network call an elderly microservice Turtle stood in the way of crush as he as he",
    "start": "1637159",
    "end": "1643279"
  },
  {
    "text": "was wandering through the reef Hey kid name's malvin the Elder Turtle said",
    "start": "1643279",
    "end": "1648760"
  },
  {
    "text": "the project manager told the development team that I ain't worth evolving malvin said don't worry mvin I'm sure the",
    "start": "1648760",
    "end": "1655200"
  },
  {
    "text": "development team could use my source code is prior art for yours Crush said optimistically crush I'm a pearl web",
    "start": "1655200",
    "end": "1662279"
  },
  {
    "text": "server written by a solo Dev I'm not even sure what happened to that guy because I haven't been changed since",
    "start": "1662279",
    "end": "1667960"
  },
  {
    "text": "2009 Melvin Said I haven't even had so much as a security patch since I was shoved into a container and deployed to",
    "start": "1667960",
    "end": "1674519"
  },
  {
    "text": "kubernetes 5 years ago my days are numbered power but I wish you the best of luck with your new",
    "start": "1674519",
    "end": "1680200"
  },
  {
    "text": "identity malvin skulked off into his home Crush had only one more service to",
    "start": "1680200",
    "end": "1687080"
  },
  {
    "text": "visit one that many requests had been made in the past but to no",
    "start": "1687080",
    "end": "1692159"
  },
  {
    "text": "avail Pongo the postgress Kel puffer stared longingly into young crush's eyes",
    "start": "1692159",
    "end": "1698000"
  },
  {
    "text": "poor Pongo had been by far the best to crush in the days of no identity but still had been unable to help I have an",
    "start": "1698000",
    "end": "1705760"
  },
  {
    "text": "identity Pongo announced Crush how exciting replied Pongo I'm hoping that",
    "start": "1705760",
    "end": "1711240"
  },
  {
    "text": "you can now see me as an authorized user I'm so excited to know all the exciting things you hold on your tables Crush",
    "start": "1711240",
    "end": "1717440"
  },
  {
    "text": "said all you need to do is validate the spiffy the spiffy ID inside my inside",
    "start": "1717440",
    "end": "1722679"
  },
  {
    "text": "the esid and that um and that is in the urri S then you can trust me and send me",
    "start": "1722679",
    "end": "1728760"
  },
  {
    "text": "data with mtls oh Crush Pongo said I wish I could",
    "start": "1728760",
    "end": "1733880"
  },
  {
    "text": "make this easier for you but I'm afraid I'm not natively able to read spiffy IDs continued Pongo however there is still a",
    "start": "1733880",
    "end": "1742120"
  },
  {
    "text": "way Pongo sounded a bit brighter really anyway is better than nothing let's do",
    "start": "1742120",
    "end": "1747320"
  },
  {
    "text": "it Pongo Crush was getting excited essentially I do actually have",
    "start": "1747320",
    "end": "1753360"
  },
  {
    "text": "um an X5 and9 esid myself Pongo started but I'm not actually a spiffy native",
    "start": "1753360",
    "end": "1759720"
  },
  {
    "text": "application I have a spiffy helper side car that helps me get my sfid and then we can talk with mtls",
    "start": "1759720",
    "end": "1767279"
  },
  {
    "text": "however I'm not able to inspect the spiffy ID in the URI sound of the x59 certificate I can only inspect the",
    "start": "1767279",
    "end": "1774320"
  },
  {
    "text": "common name this means that while I'm able to inspect your sford I can only read the common name field and not the",
    "start": "1774320",
    "end": "1781320"
  },
  {
    "text": "URI San the Elder Turtle Spire server is configured to only show uh your service",
    "start": "1781320",
    "end": "1786559"
  },
  {
    "text": "account in the common name and not other information like the name space you reside in or even the trust",
    "start": "1786559",
    "end": "1792240"
  },
  {
    "text": "domain oh Crush muted I think that will be okay though provided you're happy with that Crush",
    "start": "1792240",
    "end": "1798840"
  },
  {
    "text": "asked well this is as good as I can do so it's good enough for me said Pongo",
    "start": "1798840",
    "end": "1804320"
  },
  {
    "text": "let's give it a try cool last demo today uh so we're now going to Showcase post",
    "start": "1804320",
    "end": "1809960"
  },
  {
    "text": "grq with the spiffy Helper and um as Tom already explained poql uh is not aware",
    "start": "1809960",
    "end": "1817320"
  },
  {
    "text": "of spiffy so uh we are can use x509 S fits but we are going to use the CN and",
    "start": "1817320",
    "end": "1824880"
  },
  {
    "text": "as you can see in here it has set this to spiffy customer uh you can add these DNS entries when you are registering",
    "start": "1824880",
    "end": "1831120"
  },
  {
    "text": "your workloads uh registering workloads can either be done manually or through automated processes like you have the SP",
    "start": "1831120",
    "end": "1837440"
  },
  {
    "text": "controller manager for kubernetes that's what I'm using so that's why it's translated to the um to the service",
    "start": "1837440",
    "end": "1844159"
  },
  {
    "text": "account as that's the default that it stakes and for the purpose of this demo this was more than uh good enough but indeed for your production setups you",
    "start": "1844159",
    "end": "1850679"
  },
  {
    "text": "might want to go to something more specific uh what I actually had to do to",
    "start": "1850679",
    "end": "1856000"
  },
  {
    "text": "get this up and running is I've run POG SQL and next to it I've run the spiffy",
    "start": "1856000",
    "end": "1861880"
  },
  {
    "text": "helper as a sidecar container um to pog SQL I had to make very little changes and and more on that in a bit and uh the",
    "start": "1861880",
    "end": "1869440"
  },
  {
    "text": "spiffy Helper and they share uh volume in memory where then the certificates",
    "start": "1869440",
    "end": "1875279"
  },
  {
    "text": "gets exchanged between and to Showcase how like the spify helper works I'm immediately going into the config file",
    "start": "1875279",
    "end": "1881639"
  },
  {
    "text": "of the spify helper and what you are saying there is like when the spify helper comes up it connects to the",
    "start": "1881639",
    "end": "1888159"
  },
  {
    "text": "workload API socket it's going to retrieve this PVS fit and it's going to write this to a specific uh file folder",
    "start": "1888159",
    "end": "1896399"
  },
  {
    "text": "that youve you've Set uh in this case op poql SE and it's going to name the files",
    "start": "1896399",
    "end": "1901679"
  },
  {
    "text": "with a specific name in this case the sfit file name uh and and everything around here and because postgre SQL is",
    "start": "1901679",
    "end": "1909039"
  },
  {
    "text": "not able to automatically detect file changes as like our s fits are really",
    "start": "1909039",
    "end": "1914120"
  },
  {
    "text": "short lift our certificates are very short lift only 5 hours we need to make postel aware like hey there are new",
    "start": "1914120",
    "end": "1920480"
  },
  {
    "text": "certificates and this is being done uh by these two lines after the new",
    "start": "1920480",
    "end": "1926720"
  },
  {
    "text": "certificate files have been written uh we are telling postgre SQL to reload its config and thus become aware of the new",
    "start": "1926720",
    "end": "1933679"
  },
  {
    "text": "uh certificates and uh on the postgressql site I then had to enable",
    "start": "1933679",
    "end": "1940399"
  },
  {
    "text": "SSL um I also had to make I had I did a few things to make it very easy to get",
    "start": "1940399",
    "end": "1946679"
  },
  {
    "text": "postgress call open running first of all it's like when POG SQL initially comes up it creates a database called testb",
    "start": "1946679",
    "end": "1953519"
  },
  {
    "text": "that's where we're going to ride to I'm also creating a spify user and you can see this is a very secure password but",
    "start": "1953519",
    "end": "1958919"
  },
  {
    "text": "we're not using the password so like I don't care about this too much for this Mo for for this part and I'm creating a",
    "start": "1958919",
    "end": "1965200"
  },
  {
    "text": "table and uh granting select and you might ask why do I don't care about like",
    "start": "1965200",
    "end": "1970720"
  },
  {
    "text": "the um password that I've set here is when I go to my uh HBA config and that's",
    "start": "1970720",
    "end": "1976559"
  },
  {
    "text": "how you tell to post well how to do authentication uh you're I'm saying here",
    "start": "1976559",
    "end": "1981960"
  },
  {
    "text": "uh everything that comes in from the public needs to do certificate authorization so you can only do certificate authorization not username",
    "start": "1981960",
    "end": "1988840"
  },
  {
    "text": "and password and um how this looks like on the side of crush is I've have two",
    "start": "1988840",
    "end": "1996799"
  },
  {
    "text": "methods I have uh a post gral retrieval handle Handler as well as a put Handler",
    "start": "1996799",
    "end": "2003120"
  },
  {
    "text": "but it's a setup postgresql connection that has all of the spify bits so if you have like application that makes lots of",
    "start": "2003120",
    "end": "2009039"
  },
  {
    "text": "post connections you can really abstract this away into like one method and and and do this once and it's a bit the same",
    "start": "2009039",
    "end": "2016000"
  },
  {
    "text": "as like initially with the mtls call uh we are getting uh our um certificate",
    "start": "2016000",
    "end": "2022159"
  },
  {
    "text": "from the workload API uh in this case on Crash side we are hacking like we're",
    "start": "2022159",
    "end": "2027679"
  },
  {
    "text": "doing authoriz any but you can further uh limit this but for the purpose of",
    "start": "2027679",
    "end": "2033000"
  },
  {
    "text": "this demo did this and then it has like the normal connection string request to post SQL",
    "start": "2033000",
    "end": "2038480"
  },
  {
    "text": "and um you can see here that I'm doing the connection string I'm adding here",
    "start": "2038480",
    "end": "2043960"
  },
  {
    "text": "the mtls bits for uh spiffy and I'm opening the database with that config",
    "start": "2043960",
    "end": "2049358"
  },
  {
    "text": "file and I'm pinging this kind of thing to make sure that everything is is correctly set up and then uh for the",
    "start": "2049359",
    "end": "2056320"
  },
  {
    "text": "input I am generating some random names and also the date and time and I'm inserting this and then um for retrieval",
    "start": "2056320",
    "end": "2064800"
  },
  {
    "text": "I'm just retrieving that whole whole uh table so when I'm now going to post SQL I'm",
    "start": "2064800",
    "end": "2072040"
  },
  {
    "text": "going to write to post SQL and you can see in here it's state inserted successfully and I'm quickly and I'm",
    "start": "2072040",
    "end": "2079560"
  },
  {
    "text": "doing this again so I now have two records inserted so when I now do retrieve from post gral it has a few",
    "start": "2079560",
    "end": "2086280"
  },
  {
    "text": "more because I did some tests earlier but you can see these are like the last two names I've inserted and uh they've",
    "start": "2086280",
    "end": "2092599"
  },
  {
    "text": "been doing and I'm able to do like these post gr SQL calls when I do this with",
    "start": "2092599",
    "end": "2098160"
  },
  {
    "text": "myog application when I try to retrieve poql denies this because it doesn't isn't",
    "start": "2098160",
    "end": "2104320"
  },
  {
    "text": "aware of the spify identity and it's not allowing the connection in and this is all happening based on the common name",
    "start": "2104320",
    "end": "2110400"
  },
  {
    "text": "so even though you cannot really use the spiffy identity of it you can at least switch to short lft certificates for",
    "start": "2110400",
    "end": "2117160"
  },
  {
    "text": "this one that are issued by your Spire server and and make this work and and this is kind of showcasing that even in",
    "start": "2117160",
    "end": "2123320"
  },
  {
    "text": "hybrid approaches you can still use py and Spire without any problems",
    "start": "2123320",
    "end": "2128640"
  },
  {
    "text": "okay awesome one of the more obscure ones um but nonetheless a way round forward yeah",
    "start": "2128640",
    "end": "2137000"
  },
  {
    "text": "okay let's wrap this up finally Crush began I can now speak to you Pongo but",
    "start": "2137000",
    "end": "2143040"
  },
  {
    "text": "also to a large selection of other services all across production Crush had been on the best Journey",
    "start": "2143040",
    "end": "2149680"
  },
  {
    "text": "yet after a long day holding its breath Crush came up for air and took a quick",
    "start": "2149680",
    "end": "2154800"
  },
  {
    "text": "glance over at the beautiful Seattle skyline according to Ronda the RSS Rockfish there's even a security",
    "start": "2154800",
    "end": "2161119"
  },
  {
    "text": "conference on cool while not everything had gone perfectly Crush could now at",
    "start": "2161119",
    "end": "2166240"
  },
  {
    "text": "least have a way of hopefully keeping the same identity for life with time more and more services in",
    "start": "2166240",
    "end": "2173920"
  },
  {
    "text": "the ocean would support it as a means of secure communication and hopefully even uh",
    "start": "2173920",
    "end": "2180040"
  },
  {
    "text": "services and other reefs such as gcp reef and maybe even Azure Reef will come",
    "start": "2180040",
    "end": "2185200"
  },
  {
    "text": "together to make the ocean one big friendly secure place thank you very much if you'd like",
    "start": "2185200",
    "end": "2191400"
  },
  {
    "text": "to take a look at the source code that Matias um brilliantly wrote for this for all the demos please take a look at the",
    "start": "2191400",
    "end": "2198000"
  },
  {
    "text": "QR code that's on the top right um and yeah thank you for coming and uh yeah",
    "start": "2198000",
    "end": "2203319"
  },
  {
    "text": "hope hopefully that was entertaining and thank you all",
    "start": "2203319",
    "end": "2207680"
  }
]