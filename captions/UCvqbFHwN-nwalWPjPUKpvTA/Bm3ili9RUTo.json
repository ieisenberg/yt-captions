[
  {
    "text": "good morning good afternoon or good evening wherever you happen to be joining me from i'm so delighted you're here we are",
    "start": "719",
    "end": "7120"
  },
  {
    "text": "going to spend the next 35 minutes or so talking about get ops i'm betting that",
    "start": "7120",
    "end": "12160"
  },
  {
    "text": "most of you have some idea of what git ops is",
    "start": "12160",
    "end": "17199"
  },
  {
    "text": "but i'm betting that there's more to it than you might be thinking about and that's what i want to show you in",
    "start": "17199",
    "end": "23359"
  },
  {
    "text": "the next half hour or so by way of a brief introduction my name is cornelia davis i'm the cto at",
    "start": "23359",
    "end": "29679"
  },
  {
    "text": "weaveworks i've been in this industry for a long time about 30 years",
    "start": "29679",
    "end": "34960"
  },
  {
    "text": "my background is in development i've always been a developer there's a little hint there that says",
    "start": "34960",
    "end": "40480"
  },
  {
    "text": "wasn't ops but uh i can definitely consider myself a an ops person now as well been working",
    "start": "40480",
    "end": "46879"
  },
  {
    "text": "in web architecture so gosh for well over 15 years cloud native for nearly a decade",
    "start": "46879",
    "end": "52160"
  },
  {
    "text": "although i'll definitely concede to you that um we we didn't always call it cloud",
    "start": "52160",
    "end": "58160"
  },
  {
    "text": "native we certainly didn't call it cloud native a decade ago um a lot of that experience comes from a",
    "start": "58160",
    "end": "63920"
  },
  {
    "text": "long time working with cloud foundry which was a cloud-native application platform",
    "start": "63920",
    "end": "69119"
  },
  {
    "text": "um that's been out there for quite some time i've been doing kubernetes for nearly four years which doesn't make me a veteran but it doesn't",
    "start": "69119",
    "end": "75759"
  },
  {
    "text": "make me a total noob either um the other thing that i mentioned is that i'm the author of a book called",
    "start": "75759",
    "end": "81680"
  },
  {
    "text": "cloud native patterns which is targeted at the application developer and architect and goes over all of the patterns that",
    "start": "81680",
    "end": "89280"
  },
  {
    "text": "are required to make its software work really well in the cloud being software that works well in a",
    "start": "89280",
    "end": "96560"
  },
  {
    "text": "highly distributed highly distributed environment that is experiencing constant change",
    "start": "96560",
    "end": "103119"
  },
  {
    "text": "now that notion of cloud native is very relevant to the get ops area rather",
    "start": "103119",
    "end": "109280"
  },
  {
    "text": "than focusing on the development of software the software patterns themselves what i want to do with git ops is talk",
    "start": "109280",
    "end": "116479"
  },
  {
    "text": "about cloud native from an operational perspective so come along",
    "start": "116479",
    "end": "122799"
  },
  {
    "text": "so i'm not going to spend a lot of time going into the details of the benefits that come from get offs",
    "start": "122799",
    "end": "129679"
  },
  {
    "text": "we will talk about a few of those things as we go along but there are get ups we're not doing",
    "start": "129679",
    "end": "135040"
  },
  {
    "text": "get ops for get out say there are certain benefits that we want to realize and those benefits really center around",
    "start": "135040",
    "end": "142000"
  },
  {
    "text": "things like security repeatability recovery from",
    "start": "142000",
    "end": "147040"
  },
  {
    "text": "failure productivity gains so that we can do things over and over",
    "start": "147040",
    "end": "154560"
  },
  {
    "text": "reducing toil all of those types of things and the way that we do get offs is going",
    "start": "154560",
    "end": "161040"
  },
  {
    "text": "to have a direct impact on the benefits that we get to enjoy",
    "start": "161040",
    "end": "166959"
  },
  {
    "text": "now get ops is if you will a set of practices and patterns and then of",
    "start": "166959",
    "end": "172319"
  },
  {
    "text": "course tools that help you implement those practices and patterns that really give you that devops",
    "start": "172319",
    "end": "178159"
  },
  {
    "text": "environment that has come to dominate the way that we think about delivering digital assets these days",
    "start": "178159",
    "end": "184879"
  },
  {
    "text": "so given that we want to achieve certain benefits the question then is how do you get ops what is get ops and",
    "start": "184879",
    "end": "192560"
  },
  {
    "text": "how do we do it now i'm betting that most of you have if",
    "start": "192560",
    "end": "198400"
  },
  {
    "text": "an impression of git ops that goes something like this we're going to store code and",
    "start": "198400",
    "end": "204080"
  },
  {
    "text": "increasingly configuration in something like it after all git is the first part of the name get offs",
    "start": "204080",
    "end": "211920"
  },
  {
    "text": "doing things in git is going to cause some automation to happen and that automation is going to",
    "start": "211920",
    "end": "217760"
  },
  {
    "text": "configure some type of a runtime environment now git ops of course is",
    "start": "217760",
    "end": "223440"
  },
  {
    "text": "applicable to both applications that are running in that runtime environment but you'll see",
    "start": "223440",
    "end": "229120"
  },
  {
    "text": "as we go along that it's also very applicable to the configuration of that runtime environment and the",
    "start": "229120",
    "end": "235519"
  },
  {
    "text": "standing up and maintain maintenance of that runtime environment as well oh and of course the whole one of the",
    "start": "235519",
    "end": "243280"
  },
  {
    "text": "whole points of git ops is that the primary user interface for this get ops process is all the way",
    "start": "243280",
    "end": "250319"
  },
  {
    "text": "back on the left hand side of this diagram on the get side so the ux is actually",
    "start": "250319",
    "end": "255920"
  },
  {
    "text": "using git now that doesn't preclude other user experiences but git is it is one of the central ways",
    "start": "255920",
    "end": "263600"
  },
  {
    "text": "that significant ways that we can interact with this get ops environment so rather than",
    "start": "263600",
    "end": "269040"
  },
  {
    "text": "humans touching the right hand side of the slide we're touching the left hand side",
    "start": "269040",
    "end": "274400"
  },
  {
    "text": "so this is if you will the 10 000 foot view of git ops and is this indeed what git ups is and",
    "start": "274400",
    "end": "281919"
  },
  {
    "text": "the answer is yes but details",
    "start": "281919",
    "end": "287600"
  },
  {
    "text": "do matter and how we actually put those pieces together",
    "start": "287600",
    "end": "292639"
  },
  {
    "text": "and most notably how we do the automation that is in the center of that diagram",
    "start": "292639",
    "end": "299360"
  },
  {
    "text": "that is going to have a direct impact on the level of benefits that we enjoy coming from our get ops practices",
    "start": "299360",
    "end": "307120"
  },
  {
    "text": "now i have a confession to make i have been known to call myself a propeller",
    "start": "307120",
    "end": "312240"
  },
  {
    "text": "head before and i am i am a technologist and what we're going to do in the next 30 minutes or so is i'm not",
    "start": "312240",
    "end": "320160"
  },
  {
    "text": "going to present to you the principles of get ops we're gonna derive them so yes i'm a",
    "start": "320160",
    "end": "326800"
  },
  {
    "text": "mathematician at heart and in mathematics we do derivations but if you're not a mathematician",
    "start": "326800",
    "end": "332560"
  },
  {
    "text": "please stick with me because i think you'll enjoy this even if we don't you know do proofs at",
    "start": "332560",
    "end": "339280"
  },
  {
    "text": "that level so i'm going to kick things off by going back to a version of this diagram that we just saw",
    "start": "339280",
    "end": "346639"
  },
  {
    "text": "a moment ago it's perhaps a little bit more detailed but it does launch us on our journey of",
    "start": "346639",
    "end": "352320"
  },
  {
    "text": "this derivation so this is a pattern that i'm sure most of you are familiar with we've got the",
    "start": "352320",
    "end": "357919"
  },
  {
    "text": "developer and the devops engineer they might be the one same person they might be two different individuals",
    "start": "357919",
    "end": "363600"
  },
  {
    "text": "and they're checking their code their source code into a repository they've well established ci practices",
    "start": "363600",
    "end": "370880"
  },
  {
    "text": "that are these days because we're operating in a containerized environment generating those container images",
    "start": "370880",
    "end": "378400"
  },
  {
    "text": "increasingly we're also storing the application configuration in git and then as we alluded to in the",
    "start": "378400",
    "end": "385440"
  },
  {
    "text": "previous slide we're going to use some automation to draw those pieces together",
    "start": "385440",
    "end": "391759"
  },
  {
    "text": "and get them running in some type of a runtime environment and this is kubecon so of course we're",
    "start": "391759",
    "end": "398080"
  },
  {
    "text": "going to talk about that runtime environment being kubernetes now if we take a look at this",
    "start": "398080",
    "end": "404720"
  },
  {
    "text": "and we think about that that automation how do we achieve that automation that i'm alluding to that's",
    "start": "404720",
    "end": "411199"
  },
  {
    "text": "right in the middle there well we've already got some automation in this picture right well understood",
    "start": "411199",
    "end": "416800"
  },
  {
    "text": "and well-established automation and that is the ci system so in fact that might be",
    "start": "416800",
    "end": "422319"
  },
  {
    "text": "the first place that we might look is to say ah well can i just add",
    "start": "422319",
    "end": "427759"
  },
  {
    "text": "to that ci process i mean after all continuous integration is extremely well understood we've been",
    "start": "427759",
    "end": "435039"
  },
  {
    "text": "innovating in that space and maturing that and we have a deep understanding that it's been more than a decade",
    "start": "435039",
    "end": "440720"
  },
  {
    "text": "probably closer to two decades where we've been putting some type of continuous integration processes in",
    "start": "440720",
    "end": "446000"
  },
  {
    "text": "place and we've achieved all sorts of benefits from higher quality and shorter time and repeatability and",
    "start": "446000",
    "end": "454080"
  },
  {
    "text": "the reduction of toil and developer productivity and all of that so it would be natural for us to think",
    "start": "454080",
    "end": "461520"
  },
  {
    "text": "all right well let's go ahead and just insert deployment as a part of that automation but i'm",
    "start": "461520",
    "end": "469120"
  },
  {
    "text": "going to argue to you that continuous integration is not the same as delete continuous delivery and",
    "start": "469120",
    "end": "476400"
  },
  {
    "text": "deployment that there are reasons to separate those out and those reasons include things like if",
    "start": "476400",
    "end": "483199"
  },
  {
    "text": "you are running in a regulated environment you know that you are dealing with separation concerns",
    "start": "483199",
    "end": "489440"
  },
  {
    "text": "developers release code they are the ones that write the code and release it but then operate operators do the",
    "start": "489440",
    "end": "496639"
  },
  {
    "text": "deployment they've got the keys to the production environment they've got a set of rigorous processes that they're",
    "start": "496639",
    "end": "503759"
  },
  {
    "text": "trained that are intentionally not given to the developers again because the separation of concerns",
    "start": "503759",
    "end": "510080"
  },
  {
    "text": "ensures certain levels of security that are difficult to achieve in other ways",
    "start": "510080",
    "end": "515518"
  },
  {
    "text": "another thing is that you're very likely to take that artifact that you're creating in your continuous integration process",
    "start": "515519",
    "end": "522159"
  },
  {
    "text": "and you're going to deploy it to many different environments so there's already kind of an inherent",
    "start": "522159",
    "end": "527360"
  },
  {
    "text": "need for the decoupling so that we can go to those different environments and another reason for",
    "start": "527360",
    "end": "533040"
  },
  {
    "text": "having decoupling is to be able to recreate a deployment that shouldn't and that because we've had",
    "start": "533040",
    "end": "539760"
  },
  {
    "text": "some type of a failure for example and that shouldn't require a new build to be created",
    "start": "539760",
    "end": "546080"
  },
  {
    "text": "so those are some of the reasons why we want to decouple these things so rather than having this picture what",
    "start": "546080",
    "end": "552880"
  },
  {
    "text": "we want to do is we want to draw that deployment back out of continuous integration so",
    "start": "552880",
    "end": "558880"
  },
  {
    "text": "one of the things i'm very fond of saying is that there's no cicd it's not one word there's ci and there's",
    "start": "558880",
    "end": "565839"
  },
  {
    "text": "cd but there's absolute benefit in separating those and that's what we see in this picture",
    "start": "565839",
    "end": "572720"
  },
  {
    "text": "so we no longer have it in the ci process now that cd process is great and",
    "start": "572720",
    "end": "580080"
  },
  {
    "text": "one of the benefits that i didn't mention on the previous slide is that if you are including deployment",
    "start": "580080",
    "end": "586560"
  },
  {
    "text": "as a part of your ci process that generally means that your ci process is being given the keys",
    "start": "586560",
    "end": "592320"
  },
  {
    "text": "to that environment that deployment environment so you've got the keys or you've got the credentials those types of things",
    "start": "592320",
    "end": "599360"
  },
  {
    "text": "which represents a security boundary even if you're not worried about the developers",
    "start": "599360",
    "end": "605040"
  },
  {
    "text": "just having that system the ci system now is an attack surface and that is not at all uncommon",
    "start": "605040",
    "end": "611839"
  },
  {
    "text": "for us to hear those stories where a breach happened because somebody was able to make it into the ci",
    "start": "611839",
    "end": "617440"
  },
  {
    "text": "environment and through that get into the the runtime environment but beyond that if so now we say okay",
    "start": "617440",
    "end": "625120"
  },
  {
    "text": "well the credentials aren't in the ci system and we can constrain those to being in the cd system we can say",
    "start": "625120",
    "end": "630959"
  },
  {
    "text": "that the operators are the ones that are running the cd system so we've got the separation of concerns",
    "start": "630959",
    "end": "637200"
  },
  {
    "text": "what happens if we now have this i'm doing that deployment to a bunch of",
    "start": "637200",
    "end": "642880"
  },
  {
    "text": "different environments dev staging and prod now i'm back to needing",
    "start": "642880",
    "end": "647920"
  },
  {
    "text": "the keys to dev staging and prod all from this kind of centralized hub",
    "start": "647920",
    "end": "655120"
  },
  {
    "text": "and spoke cd system so i'm back to struggling with this security concern",
    "start": "655120",
    "end": "661680"
  },
  {
    "text": "you can also imagine that there might be deployments where we're not talking about three targets we might be talking about",
    "start": "661680",
    "end": "668959"
  },
  {
    "text": "hundreds of factory floors so we're starting to talk about edge deployments",
    "start": "668959",
    "end": "675120"
  },
  {
    "text": "or you might have thousands of coffee shops or sandwich shops um or",
    "start": "675120",
    "end": "682399"
  },
  {
    "text": "you might have tens of thousands of cell towers yes we're starting to see kubernetes",
    "start": "682399",
    "end": "687920"
  },
  {
    "text": "running in cell towers so now in addition to those security challenges i've also got",
    "start": "687920",
    "end": "694240"
  },
  {
    "text": "challenges of network connectivity i've got challenges of scale how many",
    "start": "694240",
    "end": "699519"
  },
  {
    "text": "environments can the centralized system deal with the centralized cd system now there's an easy answer",
    "start": "699519",
    "end": "706560"
  },
  {
    "text": "there's an easy solution to this and that is to just spin things around what we do then is we move the cd",
    "start": "706560",
    "end": "713120"
  },
  {
    "text": "process from being a centralized thing to being out in the run time environments themselves",
    "start": "713120",
    "end": "719440"
  },
  {
    "text": "and so rather than pushing configuration out to those runtime environments what we're going to do is pull the",
    "start": "719440",
    "end": "726160"
  },
  {
    "text": "configuration into those runtime environments from the repositories",
    "start": "726160",
    "end": "732000"
  },
  {
    "text": "now we'll see some patterns in just a little bit on how we can manage that at scale",
    "start": "732000",
    "end": "738079"
  },
  {
    "text": "before we go to those patterns i have to ask the question well if we're pulling then how do we",
    "start": "738079",
    "end": "745519"
  },
  {
    "text": "know when we need to pull the answer is that we don't have to",
    "start": "745519",
    "end": "751839"
  },
  {
    "text": "we certainly can use events we could have something like a get push event trigger",
    "start": "751839",
    "end": "758639"
  },
  {
    "text": "that type of reconciliation but then what happens if the network's down when that trigger happens",
    "start": "758639",
    "end": "765040"
  },
  {
    "text": "you've got to deal with that well the good news is that we already have a pattern that we",
    "start": "765040",
    "end": "772240"
  },
  {
    "text": "know works in this particular scenario we don't have to know when to reconcile because we have",
    "start": "772240",
    "end": "780680"
  },
  {
    "text": "reconciliation loops that run forever and this is the core pattern that",
    "start": "780680",
    "end": "787680"
  },
  {
    "text": "kubernetes really brought mainstream now this reconciliation pattern i have to say",
    "start": "787680",
    "end": "793920"
  },
  {
    "text": "existed before kubernetes it existed in cloud foundry for example where we applied it to the orchestration",
    "start": "793920",
    "end": "801360"
  },
  {
    "text": "we applied it to the um running of container images now those container images predate",
    "start": "801360",
    "end": "808800"
  },
  {
    "text": "originally predated docker so they were it was well before oci and um we built our own reconciliation",
    "start": "808800",
    "end": "817200"
  },
  {
    "text": "engine um in in cloud foundry now cloud foundry applied it to this",
    "start": "817200",
    "end": "822240"
  },
  {
    "text": "very specific use case no question that kubernetes applied it more broadly kubernetes",
    "start": "822240",
    "end": "829040"
  },
  {
    "text": "created this reconciliation platform if you will and we're going to see that",
    "start": "829040",
    "end": "834320"
  },
  {
    "text": "play prominently through the rest of the presentation so we've got this notion of well we can",
    "start": "834320",
    "end": "840480"
  },
  {
    "text": "just inside of these kubernetes clusters run these reconciliation loops that are going to constantly be drawing",
    "start": "840480",
    "end": "847680"
  },
  {
    "text": "in the configuration from those repositories so we have the desired state in the repository",
    "start": "847680",
    "end": "854320"
  },
  {
    "text": "the is watching the actual state of the system and it's doing what it needs to do to",
    "start": "854320",
    "end": "860880"
  },
  {
    "text": "bring those two things together so that pattern that basic reconciliation pattern is",
    "start": "860880",
    "end": "867399"
  },
  {
    "text": "extraordinarily powerful and it enables a whole bunch of",
    "start": "867399",
    "end": "872720"
  },
  {
    "text": "other interesting patterns patterns that i like to call git ops patterns are cloud native",
    "start": "872720",
    "end": "879440"
  },
  {
    "text": "operational patterns so let's talk through some of those now",
    "start": "879440",
    "end": "884480"
  },
  {
    "text": "the first one well actually this is not the first pattern this is more like the you know",
    "start": "884480",
    "end": "890560"
  },
  {
    "text": "maybe third pattern given that we talked about pull and we talked about reconciliation those are certainly two important patterns",
    "start": "890560",
    "end": "898000"
  },
  {
    "text": "but let's talk about this next pattern the pattern that i taught called drift",
    "start": "898000",
    "end": "903199"
  },
  {
    "text": "detection and remediation so we've done this great get ops process where we have",
    "start": "903199",
    "end": "909760"
  },
  {
    "text": "declare put our declarative configuration in git we have a reconciler that is constantly",
    "start": "909760",
    "end": "915120"
  },
  {
    "text": "drawing things the latest things in from git into the runtime environment",
    "start": "915120",
    "end": "920160"
  },
  {
    "text": "and somebody comes along and does a coupe cuddle apply this is the modern day equivalent of",
    "start": "920160",
    "end": "927199"
  },
  {
    "text": "sshing into a box um one of the benefits of course of",
    "start": "927199",
    "end": "932800"
  },
  {
    "text": "storing configuration in git is that kit has a version history and so",
    "start": "932800",
    "end": "938480"
  },
  {
    "text": "if we were to have some type of a catastrophic event and we needed to recreate our environment",
    "start": "938480",
    "end": "945279"
  },
  {
    "text": "well so long as there hasn't been any drift from what we have in the declared configuration we're",
    "start": "945279",
    "end": "952399"
  },
  {
    "text": "golden but again here somebody has done the modern day equivalent of sshing and we have drifted from that",
    "start": "952399",
    "end": "960560"
  },
  {
    "text": "desired state as recorded in the system so what what do we do",
    "start": "960560",
    "end": "965759"
  },
  {
    "text": "well that reconciler is constantly running and now what's happened is that the",
    "start": "965759",
    "end": "972160"
  },
  {
    "text": "actual state has diverged from the desired state and the reconciliation loop can do some",
    "start": "972160",
    "end": "978399"
  },
  {
    "text": "type of remediation now what is the remediation that you want well it can actually go back and say you know",
    "start": "978399",
    "end": "984880"
  },
  {
    "text": "what i'm going to undo that change i'm going to go back to the state that was represented in the git repository",
    "start": "984880",
    "end": "992560"
  },
  {
    "text": "or you might decide that you in fact want to just alert on that and you want to let",
    "start": "992560",
    "end": "997680"
  },
  {
    "text": "somebody know that something's changed that is your prerogative and that's what",
    "start": "997680",
    "end": "1003279"
  },
  {
    "text": "you are going to tool into what i like to start calling a get ops pipeline",
    "start": "1003279",
    "end": "1008399"
  },
  {
    "text": "stringing together these types of behaviors into the patterns that you need for your organization",
    "start": "1008399",
    "end": "1015120"
  },
  {
    "text": "all right so that's one pattern let's talk about another one that i like to call image update automation",
    "start": "1015120",
    "end": "1022160"
  },
  {
    "text": "now i've made a little bit of space in this slide in the middle to show you that what we have is just a",
    "start": "1022160",
    "end": "1027839"
  },
  {
    "text": "basic application deployment we've got some yaml it's stored in the application configuration repository we",
    "start": "1027839",
    "end": "1035438"
  },
  {
    "text": "have an image that's stored in an image registry and of course the yaml points to that particular image my image",
    "start": "1035439",
    "end": "1042160"
  },
  {
    "text": "version 1.0 0.0.1 now that ci process somebody checks in",
    "start": "1042160",
    "end": "1048240"
  },
  {
    "text": "new source code the ci process creates a new version of that container image",
    "start": "1048240",
    "end": "1053840"
  },
  {
    "text": "and now what do we do of course i as an operator could go in and i can",
    "start": "1053840",
    "end": "1059280"
  },
  {
    "text": "update that um that yaml configuration and i can check the new version of that yaml",
    "start": "1059280",
    "end": "1064400"
  },
  {
    "text": "configuration into the git repository and through the magic of that reconciler that i talked about in the in the",
    "start": "1064400",
    "end": "1070640"
  },
  {
    "text": "previous examples um that will get deployed out into the runtime environment",
    "start": "1070640",
    "end": "1077440"
  },
  {
    "text": "but do i need to do that as a human by hand the answer is no how about",
    "start": "1077440",
    "end": "1083679"
  },
  {
    "text": "we throw a reconciler in there that is constantly watching that container image",
    "start": "1083679",
    "end": "1089039"
  },
  {
    "text": "uh a registry and it does the update in the yaml itself does the update in a copy of the ammo",
    "start": "1089039",
    "end": "1095679"
  },
  {
    "text": "that's running within that reconciler environment then i can invoke another reconciler that is",
    "start": "1095679",
    "end": "1103520"
  },
  {
    "text": "going to have the effect of pushing that into the git repository now it could do the commit in the push",
    "start": "1103520",
    "end": "1110160"
  },
  {
    "text": "immediately or you could decide in your get get um get ops pipeline that what you want",
    "start": "1110160",
    "end": "1117039"
  },
  {
    "text": "to do is actually generate a pull request that pull request goes into the repository",
    "start": "1117039",
    "end": "1122799"
  },
  {
    "text": "somebody approves it or maybe it's automatically approved and then what happens well this is the",
    "start": "1122799",
    "end": "1129120"
  },
  {
    "text": "pattern that we already know and love is we have the reconciler that's running inside the runtime environment that",
    "start": "1129120",
    "end": "1135679"
  },
  {
    "text": "pulls the latest version in and has the effect of deploying the updated version of that image so",
    "start": "1135679",
    "end": "1143760"
  },
  {
    "text": "that's another pattern now you might notice in tint that there's a number of",
    "start": "1143760",
    "end": "1149520"
  },
  {
    "text": "reconcilers here you're gonna see where we're where we're going with those reconcilers",
    "start": "1149520",
    "end": "1154880"
  },
  {
    "text": "and how we stitch all those two things together in just a little bit but let's talk about another because uh",
    "start": "1154880",
    "end": "1162480"
  },
  {
    "text": "another pattern and that is environment customizations remember we talked about this earlier so",
    "start": "1162480",
    "end": "1168880"
  },
  {
    "text": "we talked about the fact that i have dev staging and prod and they're all going to be deploying this application",
    "start": "1168880",
    "end": "1175919"
  },
  {
    "text": "and while a lot of the application deployment configuration is going to be exactly the same",
    "start": "1175919",
    "end": "1180960"
  },
  {
    "text": "there's going to be some differences across those so how do we deal with that again let me",
    "start": "1180960",
    "end": "1186880"
  },
  {
    "text": "make a little space in this diagram and i'm going to talk very briefly about",
    "start": "1186880",
    "end": "1192320"
  },
  {
    "text": "customize with the k customize allows us to do this that allows us to store in the",
    "start": "1192320",
    "end": "1199120"
  },
  {
    "text": "application configuration first of all some description of some",
    "start": "1199120",
    "end": "1204559"
  },
  {
    "text": "some uh configuration that has a base so it has some commonality so this",
    "start": "1204559",
    "end": "1210799"
  },
  {
    "text": "deployment my deployment is going to go into dev staging and prod but then it also allows me to apply",
    "start": "1210799",
    "end": "1217360"
  },
  {
    "text": "overlays on top of that essentially overrides on some of the basic things that are in that base",
    "start": "1217360",
    "end": "1223039"
  },
  {
    "text": "pattern now those overrides can be handled by reconcilers so we can actually apply",
    "start": "1223039",
    "end": "1230720"
  },
  {
    "text": "these customizations as a part of our get ops pipeline and those",
    "start": "1230720",
    "end": "1236480"
  },
  {
    "text": "um reconcilers those customized reconcilers can operate independently in each of these different",
    "start": "1236480",
    "end": "1242640"
  },
  {
    "text": "runtime environments so doing environment customizations is an also an important",
    "start": "1242640",
    "end": "1248080"
  },
  {
    "text": "pattern all right so we had started here and those patterns",
    "start": "1248080",
    "end": "1254320"
  },
  {
    "text": "that i just described to you really are addressing this",
    "start": "1254320",
    "end": "1259440"
  },
  {
    "text": "they're saying all right there's a whole bunch of processes there's a whole bunch of",
    "start": "1259440",
    "end": "1264480"
  },
  {
    "text": "detail that's required in this process of taking these application configurations",
    "start": "1264480",
    "end": "1270720"
  },
  {
    "text": "and these image images in the from the image registries and composing them together",
    "start": "1270720",
    "end": "1278159"
  },
  {
    "text": "into the actual declarative state that's going to be running in my runtime environment",
    "start": "1278159",
    "end": "1283360"
  },
  {
    "text": "and i like to call those set of controllers that we've just been talking about the set of reconcilers",
    "start": "1283360",
    "end": "1289120"
  },
  {
    "text": "delivery controllers and hang on a second i said this is about deployment",
    "start": "1289120",
    "end": "1296320"
  },
  {
    "text": "and i don't know that delivery of configuration manifests really encompasses all of deployment",
    "start": "1296320",
    "end": "1304159"
  },
  {
    "text": "so have we achieved deployment well we're getting there but we're not",
    "start": "1304159",
    "end": "1310640"
  },
  {
    "text": "quite there yet so let's look at one more pattern",
    "start": "1310640",
    "end": "1316880"
  },
  {
    "text": "now if we remember we were here recall that in image update automation we had",
    "start": "1316880",
    "end": "1322640"
  },
  {
    "text": "this pattern remember we had reconcilers that were watching the registries and updating the the references in the",
    "start": "1322640",
    "end": "1330080"
  },
  {
    "text": "yaml then we had reconcilers that were interfacing with git to do things like pull requests or maybe",
    "start": "1330080",
    "end": "1337120"
  },
  {
    "text": "automatically committing things into the git repository and then of course we had the reconcilers that",
    "start": "1337120",
    "end": "1342320"
  },
  {
    "text": "were drawing those configurations doing the composition like using using",
    "start": "1342320",
    "end": "1347760"
  },
  {
    "text": "customize like i showed in the last example and then drawing those into the runtime",
    "start": "1347760",
    "end": "1352880"
  },
  {
    "text": "environment now this is a little bit too coarse-grained we need to get a little bit more detailed here",
    "start": "1352880",
    "end": "1359200"
  },
  {
    "text": "and that is to say that technically what we were doing was we weren't getting all the way to the",
    "start": "1359200",
    "end": "1364559"
  },
  {
    "text": "running of those applications what we were effectively doing with those reconcilers is getting to the",
    "start": "1364559",
    "end": "1370320"
  },
  {
    "text": "point where we had drawn that configuration into kubernetes into fcd",
    "start": "1370320",
    "end": "1376880"
  },
  {
    "text": "so now we've landed that in fcd the next step of course to get all the way to runtime",
    "start": "1376880",
    "end": "1383440"
  },
  {
    "text": "is that we have those that we have running pods in the end",
    "start": "1383440",
    "end": "1388640"
  },
  {
    "text": "now how did we get those running pods well you might say that's kubernetes and",
    "start": "1388640",
    "end": "1394880"
  },
  {
    "text": "of course it is but how does kubernetes do it it does it",
    "start": "1394880",
    "end": "1400159"
  },
  {
    "text": "with reconcilers right it has a reconciler for the deployment",
    "start": "1400159",
    "end": "1405360"
  },
  {
    "text": "it has a reconciler for replica sets it has a deployment a reconciler for",
    "start": "1405360",
    "end": "1412480"
  },
  {
    "text": "daemon sets and so on so it is kubernetes that has these what i",
    "start": "1412480",
    "end": "1419039"
  },
  {
    "text": "call runtime controllers that complete the picture now the real magic happens when we start",
    "start": "1419039",
    "end": "1426320"
  },
  {
    "text": "to draw together all of these different reconcilers all of these different controllers",
    "start": "1426320",
    "end": "1432320"
  },
  {
    "text": "across this entire spectrum now all right so kubernetes has these",
    "start": "1432320",
    "end": "1439039"
  },
  {
    "text": "runtime controllers but as i suggested earlier kubernetes isn't just about runtime controllers for",
    "start": "1439039",
    "end": "1445279"
  },
  {
    "text": "pods it's actually a platform for reconciliation loops so what if you want different deployment",
    "start": "1445279",
    "end": "1454559"
  },
  {
    "text": "behavior for example what can you do with that well what if you want",
    "start": "1454559",
    "end": "1461679"
  },
  {
    "text": "canary style rolling upgrades what if you want blue green what if you",
    "start": "1461679",
    "end": "1467279"
  },
  {
    "text": "want a b testing where you're actually going to run both two versions of something in parallel",
    "start": "1467279",
    "end": "1473120"
  },
  {
    "text": "and actually use the metrics coming out of those to make decisions on you know who gets what and and where",
    "start": "1473120",
    "end": "1480640"
  },
  {
    "text": "the traffic goes so different deployment scenarios how does that work well",
    "start": "1480640",
    "end": "1488559"
  },
  {
    "text": "what you can do is you guessed it you can have a reconciler kubernetes",
    "start": "1488559",
    "end": "1495919"
  },
  {
    "text": "ex is allows you to extend the api so you can create a reconciler that for",
    "start": "1495919",
    "end": "1502720"
  },
  {
    "text": "example recognizes when a deployment is happening and provides some additional logic on",
    "start": "1502720",
    "end": "1508960"
  },
  {
    "text": "top of that now as it happens one of the projects that we have worked on",
    "start": "1508960",
    "end": "1514000"
  },
  {
    "text": "here at weaveworks is a project called flagger it is totally open source and it does",
    "start": "1514000",
    "end": "1520080"
  },
  {
    "text": "exactly that it allows you to define a deployment strategy",
    "start": "1520080",
    "end": "1525760"
  },
  {
    "text": "progressive delivery as james governor had coined that term and it allows you to select one of these",
    "start": "1525760",
    "end": "1532799"
  },
  {
    "text": "release strategies canaries a b testing blue green",
    "start": "1532799",
    "end": "1538159"
  },
  {
    "text": "and then it interfaces with ingress either kind of plain vanilla ingress",
    "start": "1538159",
    "end": "1544559"
  },
  {
    "text": "like an engine x or a service mesh and it interfaces with the ingress or",
    "start": "1544559",
    "end": "1550240"
  },
  {
    "text": "the service mesh to do the traffic routing to provide exactly those types of",
    "start": "1550240",
    "end": "1556400"
  },
  {
    "text": "release strategies that you're going for and how is that implemented of course it",
    "start": "1556400",
    "end": "1561760"
  },
  {
    "text": "is implemented as a set of controllers that run in the kubernetes um this project is open source you can",
    "start": "1561760",
    "end": "1568480"
  },
  {
    "text": "find it there at the url and i won't go more into the details but what you can see there and",
    "start": "1568480",
    "end": "1573919"
  },
  {
    "text": "really the point that i'm getting to is that not only are we going to leverage the",
    "start": "1573919",
    "end": "1579200"
  },
  {
    "text": "runtime controllers that are in kubernetes we can also extend things with the runtime",
    "start": "1579200",
    "end": "1584640"
  },
  {
    "text": "controllers ourselves",
    "start": "1584640",
    "end": "1588158"
  },
  {
    "text": "okay that's a lot if we go back to this picture that i",
    "start": "1590159",
    "end": "1595760"
  },
  {
    "text": "just showed you a moment ago there's reconcilers all over this",
    "start": "1595760",
    "end": "1600880"
  },
  {
    "text": "how can i possibly manage that well the first thing that i want to show you is that in fact",
    "start": "1600880",
    "end": "1608240"
  },
  {
    "text": "this is a version of the very first very simple diagram that i started with",
    "start": "1608240",
    "end": "1613840"
  },
  {
    "text": "at the beginning of the presentation let me show that to you again we've got",
    "start": "1613840",
    "end": "1619200"
  },
  {
    "text": "something we've restoring some declarative configuration and git",
    "start": "1619200",
    "end": "1624799"
  },
  {
    "text": "then we have a set of delivery controllers that facilitate the delivery",
    "start": "1624799",
    "end": "1631520"
  },
  {
    "text": "with whatever the pipeline is i want into xcd then i have a set of runtime",
    "start": "1631520",
    "end": "1637360"
  },
  {
    "text": "controllers that actually achieve getting that running in production",
    "start": "1637360",
    "end": "1642559"
  },
  {
    "text": "remember that is we store code and configuration we've got",
    "start": "1642559",
    "end": "1648080"
  },
  {
    "text": "automation and we've got a runtime environment oh and of course the user interface for",
    "start": "1648080",
    "end": "1655440"
  },
  {
    "text": "this entire system is all the way on the left hand side with git",
    "start": "1655440",
    "end": "1661039"
  },
  {
    "text": "so it is if you will that very simple picture that i showed at the beginning but hopefully you're getting the idea",
    "start": "1661039",
    "end": "1667600"
  },
  {
    "text": "now that the way that we do that automation in the middle has to be cloud native cloud native",
    "start": "1667600",
    "end": "1675760"
  },
  {
    "text": "operations is what git ops is all about let me kind of put a bow on this now",
    "start": "1675760",
    "end": "1682559"
  },
  {
    "text": "i like to think of get ops as this those set of delivery controllers",
    "start": "1682559",
    "end": "1687840"
  },
  {
    "text": "and the delivery controllers i haven't been referring to them by name but some of the ones that",
    "start": "1687840",
    "end": "1692960"
  },
  {
    "text": "that i referred to earlier in our derivation where things like that we call the source controller or",
    "start": "1692960",
    "end": "1698320"
  },
  {
    "text": "the customize controller or the image up automation image update automation controller",
    "start": "1698320",
    "end": "1704480"
  },
  {
    "text": "on the runtime side we have the ones that are baked into kubernetes like the replica set controller or the daemon",
    "start": "1704480",
    "end": "1711279"
  },
  {
    "text": "set controller or flagger is an extended controller and yes",
    "start": "1711279",
    "end": "1716720"
  },
  {
    "text": "cluster api controllers those cluster api and get ops match made in",
    "start": "1716720",
    "end": "1723360"
  },
  {
    "text": "heaven they work beautifully together so you take those controllers and then",
    "start": "1723360",
    "end": "1728720"
  },
  {
    "text": "you stitch them together into the pipelines that are relevant for your organization",
    "start": "1728720",
    "end": "1735039"
  },
  {
    "text": "and for your needs and that's what draws together get offs",
    "start": "1735039",
    "end": "1741279"
  },
  {
    "text": "so to go back to this picture we've now completed this entire cycle we've got",
    "start": "1741279",
    "end": "1747200"
  },
  {
    "text": "continuous integration on the far left we talked about the delivery controllers we added on the runtime",
    "start": "1747200",
    "end": "1753200"
  },
  {
    "text": "controllers and you draw all of that together and you get get offs",
    "start": "1753200",
    "end": "1758880"
  },
  {
    "text": "so get offs is not just about delivery it is in fact get",
    "start": "1758880",
    "end": "1764960"
  },
  {
    "text": "offs is the combination of continuous delivery delivery controllers and continuous",
    "start": "1764960",
    "end": "1770720"
  },
  {
    "text": "operations runtime controllers and when you put those things together that's where a lot of magic happens",
    "start": "1770720",
    "end": "1778480"
  },
  {
    "text": "now i had promised you that we were going to derive principles we were going to go",
    "start": "1778480",
    "end": "1784000"
  },
  {
    "text": "back to first principles so often times when i've spoken about get-offs in the past",
    "start": "1784000",
    "end": "1790399"
  },
  {
    "text": "i've started by presenting these principles but today the whole idea was to",
    "start": "1790399",
    "end": "1797279"
  },
  {
    "text": "kind of maybe challenge your assumptions on what git ops is and to derive those principles from",
    "start": "1797279",
    "end": "1803279"
  },
  {
    "text": "scratch but let me now summarize and review those principles",
    "start": "1803279",
    "end": "1808480"
  },
  {
    "text": "that we've just gone over i'm going to start with the bookends on the left hand side we have",
    "start": "1808480",
    "end": "1815840"
  },
  {
    "text": "declarative configuration that's yaml for example",
    "start": "1815840",
    "end": "1821120"
  },
  {
    "text": "on the right hand side we have the software agents so the deployment controllers",
    "start": "1821120",
    "end": "1828320"
  },
  {
    "text": "for example deployment replica set these are two foundational principles that",
    "start": "1828320",
    "end": "1835039"
  },
  {
    "text": "kubernetes brought to the party without those two foundational principles we wouldn't have",
    "start": "1835039",
    "end": "1841039"
  },
  {
    "text": "gitoffs as we have it today that really seated the ability to get",
    "start": "1841039",
    "end": "1846640"
  },
  {
    "text": "this started so we have those two bookends and what we've done with get offs is we've added two more",
    "start": "1846640",
    "end": "1854720"
  },
  {
    "text": "elements on in the middle we've said well if i've got that declarative",
    "start": "1854720",
    "end": "1859840"
  },
  {
    "text": "configuration and i now add storing that declarative configuration",
    "start": "1859840",
    "end": "1866080"
  },
  {
    "text": "in a version version controlled immutable store that has semantics",
    "start": "1866080",
    "end": "1874720"
  },
  {
    "text": "like git then i achieve those benefits of things like roll forward rather than roll back i can",
    "start": "1874720",
    "end": "1882399"
  },
  {
    "text": "always get back to an earlier configuration that i know worked or if i have a disaster i can recover",
    "start": "1882399",
    "end": "1889440"
  },
  {
    "text": "from that disaster very quickly so that is another magical element now",
    "start": "1889440",
    "end": "1895360"
  },
  {
    "text": "yes i also alluded and mentioned several times that it is the user interface",
    "start": "1895360",
    "end": "1900480"
  },
  {
    "text": "it doesn't have to be the user interface and there are some very interesting other user experiences that",
    "start": "1900480",
    "end": "1907039"
  },
  {
    "text": "don't involve necessarily going in and creating a pull request by hand",
    "start": "1907039",
    "end": "1913519"
  },
  {
    "text": "but some of those abstractions those git semantics are important and very very heavily",
    "start": "1913519",
    "end": "1919200"
  },
  {
    "text": "leveraged so i like to say that git plays the role of both a potential user experience as well",
    "start": "1919200",
    "end": "1925120"
  },
  {
    "text": "as a distributed data store that is immutable and has a version history and then",
    "start": "1925120",
    "end": "1930559"
  },
  {
    "text": "finally the third thing the third column over there is that we have this set of delivery",
    "start": "1930559",
    "end": "1937360"
  },
  {
    "text": "controllers that automatically apply but that allow me to build the pipelines that i need",
    "start": "1937360",
    "end": "1944159"
  },
  {
    "text": "to apply those patterns in the entire get ops practice and that's",
    "start": "1944159",
    "end": "1950559"
  },
  {
    "text": "what we've done is we've just derived those four key get ops principles",
    "start": "1950559",
    "end": "1956799"
  },
  {
    "text": "now i won't go over this in detail but you've heard me talk about these get-ups",
    "start": "1956799",
    "end": "1962320"
  },
  {
    "text": "patterns or as i also like to call them cloud-native operational patterns",
    "start": "1962320",
    "end": "1968399"
  },
  {
    "text": "um over the years as we got better and better at microservice architectures we",
    "start": "1968399",
    "end": "1974559"
  },
  {
    "text": "learned a whole suite of patterns that were those cloud native patterns and in fact that's what i cover",
    "start": "1974559",
    "end": "1979840"
  },
  {
    "text": "in my book things like retries and circuit breakers and",
    "start": "1979840",
    "end": "1986960"
  },
  {
    "text": "service discovery and those types of things what we're doing now with cloud native",
    "start": "1988480",
    "end": "1994399"
  },
  {
    "text": "operations and with git ops is that we are deriving these sets of patterns that",
    "start": "1994399",
    "end": "2000880"
  },
  {
    "text": "are going to become ubiquitous in the in the coming years and good gonna be applied for for great",
    "start": "2000880",
    "end": "2007679"
  },
  {
    "text": "gain so with that i thank you for your attention and i hope you enjoy the rest of the",
    "start": "2007679",
    "end": "2013760"
  },
  {
    "text": "conference thank you so much have a great time",
    "start": "2013760",
    "end": "2019840"
  }
]