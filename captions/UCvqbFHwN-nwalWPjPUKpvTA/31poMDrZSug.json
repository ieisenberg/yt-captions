[
  {
    "text": "hello everyone and welcome to sampling and the observability error my name is steve flanders i'm a director",
    "start": "1360",
    "end": "7759"
  },
  {
    "text": "of engineering at splunk i've been in the observability and monitoring space for over the last 10",
    "start": "7759",
    "end": "13440"
  },
  {
    "text": "years working in logging distributed tracing and open source technologies including",
    "start": "13440",
    "end": "19039"
  },
  {
    "text": "open census and open telemetry if you're interested in learning more about me go ahead and follow me on twitter",
    "start": "19039",
    "end": "26480"
  },
  {
    "text": "so today i want to cover a few different aspects first just a very quick introduction around what is",
    "start": "26480",
    "end": "32000"
  },
  {
    "text": "observability then we'll focus in on distributed tracing and how sampling is used with",
    "start": "32000",
    "end": "38079"
  },
  {
    "text": "distributed tracing and then all the different trade-offs depending on the sampling decisions you",
    "start": "38079",
    "end": "43760"
  },
  {
    "text": "decide to make for your environment so first off what is observability",
    "start": "43760",
    "end": "50000"
  },
  {
    "text": "i like this quote from baron that talks about how monitoring is telling you how a system works",
    "start": "50000",
    "end": "55760"
  },
  {
    "text": "usually it's some sort of known thing maybe it's even a static threshold you get alerted on",
    "start": "55760",
    "end": "61039"
  },
  {
    "text": "where observability really lets you ask any question that you want about your environment to figure out why it's not working it's",
    "start": "61039",
    "end": "68320"
  },
  {
    "text": "for more of the unknowns and as you start working more with distributed architectures more cloud",
    "start": "68320",
    "end": "73439"
  },
  {
    "text": "native stacks this becomes super critical because you don't necessarily know who is calling you or what changes in behavior are",
    "start": "73439",
    "end": "79920"
  },
  {
    "text": "going to happen throughout the different services in your environment",
    "start": "79920",
    "end": "85119"
  },
  {
    "text": "now if you've heard of observability you've probably heard of the three pillars of observability namely",
    "start": "85119",
    "end": "90320"
  },
  {
    "text": "logs metrics and traces these different data sources have some similarities and some",
    "start": "90320",
    "end": "95920"
  },
  {
    "text": "differences they all usually have something to do with time but the way that they're",
    "start": "95920",
    "end": "100960"
  },
  {
    "text": "represented are different for example logs are typically unstructured though in more cloud native environments you're",
    "start": "100960",
    "end": "107920"
  },
  {
    "text": "seeing a lot more structured text and it usually contains some amount of metadata you usually use this for last",
    "start": "107920",
    "end": "114000"
  },
  {
    "text": "mile analysis within your environment metrics are more data point driven again time series with",
    "start": "114000",
    "end": "119920"
  },
  {
    "text": "metadata and traditionally metrics are used to alert about a problem",
    "start": "119920",
    "end": "125119"
  },
  {
    "text": "though they're typically more symptoms because as you look at more distributed architectures they don't have context and correlation to get you",
    "start": "125119",
    "end": "132400"
  },
  {
    "text": "really to root cause and that's where traces or distributed tracing comes in again",
    "start": "132400",
    "end": "138080"
  },
  {
    "text": "time-based end-end requests in your environments and even some amount of metric information you typically get your red",
    "start": "138080",
    "end": "144080"
  },
  {
    "text": "metric so request errors and duration again with associated metadata and this is often used for problem isolation for",
    "start": "144080",
    "end": "151120"
  },
  {
    "text": "both availability and performance problems and we're going to focus primarily on the tracing aspect because when you hear",
    "start": "151120",
    "end": "157840"
  },
  {
    "text": "the word sampling it's usually traces that you are sampling to be fair sampling may apply to other data sources",
    "start": "157840",
    "end": "164560"
  },
  {
    "text": "like in logs you have verbosity which is kind of a form of sampling in the case of metrics it's the granularity of how",
    "start": "164560",
    "end": "171519"
  },
  {
    "text": "often you are collecting them or how you actually roll them up and average them that is a form of sampling",
    "start": "171519",
    "end": "177599"
  },
  {
    "text": "but for today we're just going to focus on the tracing aspects now i would be remiss not to mention the",
    "start": "177599",
    "end": "182720"
  },
  {
    "text": "open telemetry project given this this is a cloud native open source summit",
    "start": "182720",
    "end": "187760"
  },
  {
    "text": "open telemetry is actually looking to provide infrastructure around instrumentation",
    "start": "187760",
    "end": "192959"
  },
  {
    "text": "data collection api end-to-end implementation basically all the way uh just before the back end",
    "start": "192959",
    "end": "199040"
  },
  {
    "text": "so it doesn't provide a back-end solution but it provides a vendor agnostic way to send to the back end or back ends of",
    "start": "199040",
    "end": "204720"
  },
  {
    "text": "your choice now i bring this up only because i'll be demoing a little bit later to show how",
    "start": "204720",
    "end": "209920"
  },
  {
    "text": "sampling kind of plays into this world but if you're interested in learning more about this project please do",
    "start": "209920",
    "end": "215200"
  },
  {
    "text": "take a look at it next up distributed tracing so what is distributed tracing i've gone",
    "start": "215200",
    "end": "222239"
  },
  {
    "text": "ahead and taken this picture from the yeager tracing documentation jaeger is an open source project also",
    "start": "222239",
    "end": "228239"
  },
  {
    "text": "part of cncf and definitely worth taking a look at on the left you basically have an",
    "start": "228239",
    "end": "233439"
  },
  {
    "text": "example of an environment where every circle is a microservice and what you're basically seeing is a call",
    "start": "233439",
    "end": "240080"
  },
  {
    "text": "of an end-to-end request throughout the system so what ends up happening is something hits service a this generates a piece of context that",
    "start": "240080",
    "end": "248319"
  },
  {
    "text": "then gets passed to all subsequent downstream calls for example to b to c d and e",
    "start": "248319",
    "end": "254799"
  },
  {
    "text": "how that ends up being represented when it's collected is more of a waterfall view that you see",
    "start": "254799",
    "end": "259840"
  },
  {
    "text": "on the right where a is kind of the end end or root span of the entire transaction it tells you",
    "start": "259840",
    "end": "266160"
  },
  {
    "text": "how long its duration was here you can see like b and e which look more like",
    "start": "266160",
    "end": "271360"
  },
  {
    "text": "independent services calling one another c and d could be for example functional level calls within the same",
    "start": "271360",
    "end": "276960"
  },
  {
    "text": "microservices based application but from this we can actually extract the red metrics requests error and",
    "start": "276960",
    "end": "282720"
  },
  {
    "text": "duration we can also tack on additional metadata and because we have context and",
    "start": "282720",
    "end": "287919"
  },
  {
    "text": "correlation we can actually identify like where errors are occurring and why they're occurring which really",
    "start": "287919",
    "end": "293919"
  },
  {
    "text": "helps us get to problem isolation a lot faster which is super critical in microservices",
    "start": "293919",
    "end": "299199"
  },
  {
    "text": "based environments that are typically polyglot where every service may be owned by a different service owner",
    "start": "299199",
    "end": "305039"
  },
  {
    "text": "and from an on-call perspective you want to minimize things like alert storms which would be very impactful to the team",
    "start": "305039",
    "end": "314160"
  },
  {
    "text": "now let's talk a little bit about sampling and to do that i want to talk about the basics now",
    "start": "314320",
    "end": "320000"
  },
  {
    "text": "sampling is actually a pretty in-depth topic but there are some common things that you'll hear",
    "start": "320000",
    "end": "325280"
  },
  {
    "text": "regarding sampling specifically of tracing information first is the what you've probably heard",
    "start": "325280",
    "end": "331199"
  },
  {
    "text": "of head based or tail based sampling we're actually going to drill into that what the differences are and kind of the",
    "start": "331199",
    "end": "336400"
  },
  {
    "text": "trade-offs of those decisions in addition you have the when when does the sampling decision actually happen",
    "start": "336400",
    "end": "343440"
  },
  {
    "text": "and depending on the pipeline that you've configured there are different stages in which it could occur and i'll explain that more in depth in",
    "start": "343440",
    "end": "349360"
  },
  {
    "text": "just a moment you have the where so within a trace you have spans within spans you have",
    "start": "349360",
    "end": "355360"
  },
  {
    "text": "services and operations you may have attributes which is kind of that metadata or key value pairs",
    "start": "355360",
    "end": "361440"
  },
  {
    "text": "you even have other information like the duration and you may want to make a sampling decision based on these different pieces of the",
    "start": "361440",
    "end": "368479"
  },
  {
    "text": "telemetry data that you're collecting the how is more of the policy-based way",
    "start": "368479",
    "end": "374080"
  },
  {
    "text": "to make a sampling decision like do i want to do it based on some rule or some rate",
    "start": "374080",
    "end": "379280"
  },
  {
    "text": "do i want to based on the duration or a probabilistic way what are the trade-offs of those is",
    "start": "379280",
    "end": "384960"
  },
  {
    "text": "something that we'll cover here as well and then finally the why like why would you do",
    "start": "384960",
    "end": "390319"
  },
  {
    "text": "sampling in the first place and at the end of the day it has everything to do with data and the",
    "start": "390319",
    "end": "396240"
  },
  {
    "text": "impact that the data has to you or the environment or the price",
    "start": "396240",
    "end": "401360"
  },
  {
    "text": "of the solution that you're you're leveraging on the other end so let's first drill into head-based",
    "start": "401360",
    "end": "407919"
  },
  {
    "text": "sampling you may remember the service topology breakdown from the jaeger documentation",
    "start": "407919",
    "end": "413680"
  },
  {
    "text": "here's the same representation if you do head-based sampling what that basically means is",
    "start": "413680",
    "end": "420000"
  },
  {
    "text": "you make a sampling decision on the initial request so if the a service here is the service",
    "start": "420000",
    "end": "425759"
  },
  {
    "text": "that's hit first that's when you're going to decide whether or not to sample that trace now this is very interesting",
    "start": "425759",
    "end": "433199"
  },
  {
    "text": "because the trace is not completed so you don't necessarily know what happens later",
    "start": "433199",
    "end": "438960"
  },
  {
    "text": "now in the case of tail-based sampling you actually wait for the entire end-to-end request to be completed and",
    "start": "438960",
    "end": "445680"
  },
  {
    "text": "then based on the entire request you then make a sampling decision on whether or not you want to process",
    "start": "445680",
    "end": "451680"
  },
  {
    "text": "and store that information that's the primary difference between head and tail but there's a lot more",
    "start": "451680",
    "end": "457520"
  },
  {
    "text": "nuance that we'll cover in just a little bit now where can you actually make a",
    "start": "457520",
    "end": "463440"
  },
  {
    "text": "sampling decision well that depends a lot on the architecture that you've rolled out but it's not uncommon that you have one",
    "start": "463440",
    "end": "470000"
  },
  {
    "text": "or more applications and those applications are instrumented so you could go ahead and make a",
    "start": "470000",
    "end": "475280"
  },
  {
    "text": "sampling decision in the instrumentation itself you probably have rolled out some sort of",
    "start": "475280",
    "end": "480560"
  },
  {
    "text": "agent maybe it actually exists with the application or it's more of a host based agents you have one per host with",
    "start": "480560",
    "end": "486479"
  },
  {
    "text": "multiple applications running on a given host again you could make a sampling decision there you could have some sort of",
    "start": "486479",
    "end": "492319"
  },
  {
    "text": "standalone service or collector or aggregator or proxy usually this is like per data center or",
    "start": "492319",
    "end": "498479"
  },
  {
    "text": "per region and you could make a sampling decision there and then of course the back end whether you're running your own or",
    "start": "498479",
    "end": "504800"
  },
  {
    "text": "you're sending to a third-party sas solution sampling decisions can also be made on the back",
    "start": "504800",
    "end": "510720"
  },
  {
    "text": "end so really anywhere in the entire pipeline you can go ahead and make a sampling decision",
    "start": "510720",
    "end": "516240"
  },
  {
    "text": "but what you can sample when well that kind of matters you can do head-based sampling pretty",
    "start": "516240",
    "end": "522320"
  },
  {
    "text": "much anywhere but in the case of tail-based sampling because we actually have to construct the entire trace before making that",
    "start": "522320",
    "end": "529279"
  },
  {
    "text": "sampling decision it's typically at the surface or back end level a little bit more nuanced it may be",
    "start": "529279",
    "end": "535760"
  },
  {
    "text": "possible to do it in the agent but in general you're talking about having a service or a back end that actually collects all this",
    "start": "535760",
    "end": "542480"
  },
  {
    "text": "information and makes a decision based on an entire trace now",
    "start": "542480",
    "end": "548240"
  },
  {
    "text": "how does tail-based sampling work so i mentioned you probably want to do this at the service or the back end so let's",
    "start": "548240",
    "end": "553600"
  },
  {
    "text": "say here i again have my topology and i have a service deployed so i have three",
    "start": "553600",
    "end": "559360"
  },
  {
    "text": "collectors satellites proxies whatever you want to call them i have three of them in my data center",
    "start": "559360",
    "end": "564959"
  },
  {
    "text": "and they are fronted by a load balancer so that they can all receive the traffic",
    "start": "564959",
    "end": "570560"
  },
  {
    "text": "so let's assume that a request comes in to my microservices-based application a gets hit and it's span gets sent to the first",
    "start": "570560",
    "end": "578160"
  },
  {
    "text": "collector and then b gets hit and it gets set to the first collector as well c gets hit it gets sent to the third",
    "start": "578160",
    "end": "584640"
  },
  {
    "text": "collector d gets hit it goes to the third e goes to the second now we have some sort of maybe round",
    "start": "584640",
    "end": "590000"
  },
  {
    "text": "robin policy base here on the load balancer so while i have a single request the spans",
    "start": "590000",
    "end": "596160"
  },
  {
    "text": "have actually gone to different collectors now this is a problem for tail-based sampling because i need to actually",
    "start": "596160",
    "end": "601839"
  },
  {
    "text": "construct the entire end and trace so what i basically need is trace id based routing now that's typically",
    "start": "601839",
    "end": "609519"
  },
  {
    "text": "pretty hard to do in the load balancer so most solutions today that offer tail base sampling will actually handle it at this",
    "start": "609519",
    "end": "616640"
  },
  {
    "text": "collector level what ends up happening is like collector two here would say hey i realize that",
    "start": "616640",
    "end": "622800"
  },
  {
    "text": "the trace id is already being stored and number one i'm going to actually pass this span i got from e over to number one and",
    "start": "622800",
    "end": "629519"
  },
  {
    "text": "number three would do the exact same thing so the idea is all the spans for a given trace",
    "start": "629519",
    "end": "634560"
  },
  {
    "text": "will appear on the same node and then that node can then go ahead and make a sampling decision based on the policies",
    "start": "634560",
    "end": "640399"
  },
  {
    "text": "and rules that have been defined now as i mentioned sampling is a rather",
    "start": "640399",
    "end": "646800"
  },
  {
    "text": "complex topic where we covered some of the major themes that may come up the way that they kind of stitch",
    "start": "646800",
    "end": "652959"
  },
  {
    "text": "together it depends right like probabilistic type rules you're typically going to see in more of",
    "start": "652959",
    "end": "658720"
  },
  {
    "text": "a head-based sampling solution adapt adaptive and rule-based things are typically more seen on the tail-based",
    "start": "658720",
    "end": "665200"
  },
  {
    "text": "side rate limiting may be able to apply to a given service but may not be applicable",
    "start": "665200",
    "end": "670720"
  },
  {
    "text": "to a given operation so only certain aspects of the span information can be leveraged",
    "start": "670720",
    "end": "676560"
  },
  {
    "text": "and then policies really depend on the service or the backend capabilities whether that's a vendor or an open",
    "start": "676560",
    "end": "682720"
  },
  {
    "text": "source solution these vary greatly upon like what is possible from a configuration",
    "start": "682720",
    "end": "688320"
  },
  {
    "text": "perspective and this is really just the tip of the iceberg there are more nuance here as well but again",
    "start": "688320",
    "end": "693839"
  },
  {
    "text": "the goal is to focus on the primary themes around sampling to give you a better understanding of the topic",
    "start": "693839",
    "end": "700480"
  },
  {
    "text": "with that i'd like to jump into trade-offs so let's start with head-based sampling again some of the pros of this approach",
    "start": "700480",
    "end": "708079"
  },
  {
    "text": "are it's very easy to configure it and to manage it in addition it's great at actually",
    "start": "708079",
    "end": "713839"
  },
  {
    "text": "reducing the amount of data that's being sent which is one of the why reasons of why you do sampling anyway",
    "start": "713839",
    "end": "720079"
  },
  {
    "text": "that happens at the the root service based level that's where you make the sampling decision now the cons are",
    "start": "720079",
    "end": "726959"
  },
  {
    "text": "well i didn't actually wait for the entire request to complete so i don't know if i'm making an",
    "start": "726959",
    "end": "733360"
  },
  {
    "text": "educated or a smart sampling decision i'm just making one very early on another very",
    "start": "733360",
    "end": "739839"
  },
  {
    "text": "big problem is that if i'm making a sampling decision at the beginning then i probably won't have accurate red",
    "start": "739839",
    "end": "745839"
  },
  {
    "text": "metrics because i'm not looking at all of the calls i'm not actually collecting all that data and the net result is really incomplete",
    "start": "745839",
    "end": "753120"
  },
  {
    "text": "observability not only have i reduced the data and i probably don't have representative sets for the things that i care about",
    "start": "753120",
    "end": "759760"
  },
  {
    "text": "even my red metrics are not a hundred percent accurate because i'm not analyzing all that data so in general i",
    "start": "759760",
    "end": "766480"
  },
  {
    "text": "mean if you can avoid this model you typically want to at a minimum you want to have full",
    "start": "766480",
    "end": "771920"
  },
  {
    "text": "fidelity metrics you have accurate slis or red metrics with accurate alerts that you're leveraging",
    "start": "771920",
    "end": "778160"
  },
  {
    "text": "here and typically with head-based sampling you can't do that now there can be some temporary reasons why you might want to",
    "start": "778160",
    "end": "784800"
  },
  {
    "text": "enable head-based sampling maybe it's controlling the data or cost but you just need to know that it really",
    "start": "784800",
    "end": "790720"
  },
  {
    "text": "can impact your observability and typically is not the solution you want to head down",
    "start": "790720",
    "end": "796160"
  },
  {
    "text": "so let's again use a representation of head-based sampling here as i mentioned it gets made at the parent or root level",
    "start": "796160",
    "end": "803760"
  },
  {
    "text": "span so here it would be the a service well what happens if further on i decide i'm not going to sample this",
    "start": "803760",
    "end": "810240"
  },
  {
    "text": "given trace and then when the d service gets called it actually generates an error",
    "start": "810240",
    "end": "816079"
  },
  {
    "text": "well because i made a sampling decision when a was originally called and i decided not to sample",
    "start": "816079",
    "end": "822480"
  },
  {
    "text": "the fact that an error was thrown in d doesn't matter i've now lost that data that really impacts my observability i",
    "start": "822480",
    "end": "829120"
  },
  {
    "text": "can't alert on that scenario like if someone's on call they can't actually pull up that trace",
    "start": "829120",
    "end": "834240"
  },
  {
    "text": "that's a huge impact to my ability to ask any question of my system and to really troubleshoot perform problem",
    "start": "834240",
    "end": "841120"
  },
  {
    "text": "isolation so this is typically not an ideal scenario",
    "start": "841120",
    "end": "846639"
  },
  {
    "text": "tail based sampling on the other side actually provides full fidelity metrics and it allows you to reduce the data",
    "start": "846639",
    "end": "853360"
  },
  {
    "text": "based on anything available in the telemetry data that you're collecting so that's very powerful the cons are",
    "start": "853360",
    "end": "860079"
  },
  {
    "text": "that it's typically hard to manage and it can be quite expensive to actually run these collectors i'm talking about",
    "start": "860079",
    "end": "866399"
  },
  {
    "text": "primarily the customer side vendors typically have ways of mitigating those cost concerns",
    "start": "866399",
    "end": "871760"
  },
  {
    "text": "but if the expectation is that you need to deploy something on your side to do the tail-based sampling that can",
    "start": "871760",
    "end": "877920"
  },
  {
    "text": "become complex you're now talking about a distributed systems problem you have to handle redundancy what",
    "start": "877920",
    "end": "883360"
  },
  {
    "text": "happens if they go down and it can be expensive to run because a hundred percent of the data",
    "start": "883360",
    "end": "888800"
  },
  {
    "text": "needs to be processed and even network traffic can be pretty extensive because we need to pass around",
    "start": "888800",
    "end": "894320"
  },
  {
    "text": "different spans for given trace to the right endpoint node now at the end of the day another con",
    "start": "894320",
    "end": "900160"
  },
  {
    "text": "that i wrote is that you have to analyze all the data anyway like i mentioned all the compute and potentially network",
    "start": "900160",
    "end": "906399"
  },
  {
    "text": "traffic that's involved with that that's actually the primary cost so if you already are going to take that hit",
    "start": "906399",
    "end": "912800"
  },
  {
    "text": "of sampling all that data then then why are you doing tail-based sampling in the first place now there can be good",
    "start": "912800",
    "end": "918560"
  },
  {
    "text": "reasons for it but it's definitely a question you should ask yourself so when you're thinking about this if",
    "start": "918560",
    "end": "925519"
  },
  {
    "text": "you have to sample and we'll talk more about whether you do or not in just a second tail-based sampling is going to be",
    "start": "925519",
    "end": "931360"
  },
  {
    "text": "better than head-based sampling because you now have full fidelity accurate metrics you now have",
    "start": "931360",
    "end": "936800"
  },
  {
    "text": "flexibility in actually being being able to choose what you sample and not",
    "start": "936800",
    "end": "942240"
  },
  {
    "text": "there are some potential cons but the flexibility and choice here is quite powerful",
    "start": "942240",
    "end": "948160"
  },
  {
    "text": "one thing you do need to consider though is you have to factor in both capex and opex when you're determining",
    "start": "948160",
    "end": "954320"
  },
  {
    "text": "the cost of a solution running these satellites or collectors on your side scaling them up",
    "start": "954320",
    "end": "959839"
  },
  {
    "text": "making sure that they're they're upgraded and handling the network traffic that's associated with them that's all part of the cost of",
    "start": "959839",
    "end": "966880"
  },
  {
    "text": "leveraging whatever solution that you are and then one final thing i didn't write this as a con but most tail-based",
    "start": "966880",
    "end": "973360"
  },
  {
    "text": "solutions don't really have enterprise-y features like encryption between the satellites or some sort of",
    "start": "973360",
    "end": "979120"
  },
  {
    "text": "dispatch queue it's usually all in memory this isn't necessarily a big deal it comes down to really business",
    "start": "979120",
    "end": "985040"
  },
  {
    "text": "requirements like a lot of people don't treat tracing data as containing much or any pii",
    "start": "985040",
    "end": "991279"
  },
  {
    "text": "it's not necessarily the end of the world if you lose that data like it's not ideal if you're having an incident or an outage",
    "start": "991279",
    "end": "997199"
  },
  {
    "text": "but at other times maybe it's not as critical if some of that data is lost just something to keep in mind when",
    "start": "997199",
    "end": "1002959"
  },
  {
    "text": "you're actually evaluating these solutions as well so let's again go back to the",
    "start": "1002959",
    "end": "1008399"
  },
  {
    "text": "tail-based sampling example and how it works as i mentioned there are a few different considerations here",
    "start": "1008399",
    "end": "1014240"
  },
  {
    "text": "so let's assume that i have my end-to-end app deployed in i don't know i'm in aws so i'm in a",
    "start": "1014240",
    "end": "1019759"
  },
  {
    "text": "single region and it's going to be deployed in multiple availability zones azs because",
    "start": "1019759",
    "end": "1025360"
  },
  {
    "text": "i want to have high availability in case an ac goes down so these satellites may be deployed in a single",
    "start": "1025360",
    "end": "1032160"
  },
  {
    "text": "az or across multiple for redundancy reasons well the net result there is that if i'm going across az's i need",
    "start": "1032160",
    "end": "1039360"
  },
  {
    "text": "to pay for that network traffic both my services contacting the right node depending on how load balancing is",
    "start": "1039360",
    "end": "1045360"
  },
  {
    "text": "configured as well as the nodes talking to each other to do the trace id based routing",
    "start": "1045360",
    "end": "1050400"
  },
  {
    "text": "that incurs a cost it's even more complex if i actually have an end-to-end request",
    "start": "1050400",
    "end": "1056320"
  },
  {
    "text": "that spans multiple different regions and there are valid use cases for that in that case i might have my services in",
    "start": "1056320",
    "end": "1063200"
  },
  {
    "text": "region one and region two well i have to have this set of satellites in a single region",
    "start": "1063200",
    "end": "1068480"
  },
  {
    "text": "it doesn't matter if it's in one two or even three but all the traffic needs to go to a single region so that i can actually",
    "start": "1068480",
    "end": "1075120"
  },
  {
    "text": "collect a single trace and end well that map now means i might have cross region traffic",
    "start": "1075120",
    "end": "1080799"
  },
  {
    "text": "network wise that i need to pay for as well and then as i mentioned earlier at the",
    "start": "1080799",
    "end": "1085840"
  },
  {
    "text": "end of the day it's really all the overhead of all the traffic needs to be able to be processed by these satellites",
    "start": "1085840",
    "end": "1091840"
  },
  {
    "text": "the amount of compute power memory that this requires can be extensive depending on the solutions that are",
    "start": "1091840",
    "end": "1096960"
  },
  {
    "text": "available there may even be disk related as well that is a cost of leveraging a",
    "start": "1096960",
    "end": "1102559"
  },
  {
    "text": "tail-based sampling solution so now let's go back to the why why would",
    "start": "1102559",
    "end": "1109120"
  },
  {
    "text": "you sample in the first place and these are some of the common reasons that come up",
    "start": "1109120",
    "end": "1114400"
  },
  {
    "text": "one of the biggest is just that scaling is hard like we're not talking about a small amount of data here",
    "start": "1114400",
    "end": "1120000"
  },
  {
    "text": "distributed tracing information is typically significantly more than metrics and it's usually on par with",
    "start": "1120000",
    "end": "1126240"
  },
  {
    "text": "logs maybe a little less in some cases maybe a little more but it's pretty extensive and so the back end",
    "start": "1126240",
    "end": "1133120"
  },
  {
    "text": "required to actually process and store this information is quite a bit and then the front end to",
    "start": "1133120",
    "end": "1138160"
  },
  {
    "text": "be able to query it and display it quickly that's also a hard problem it's a big data",
    "start": "1138160",
    "end": "1143919"
  },
  {
    "text": "problem now this really comes down to are you rolling your own like do you have your own back end is it open source if you",
    "start": "1143919",
    "end": "1149600"
  },
  {
    "text": "built something custom and you're just trying to scale it is that actually your core ip is that where you want to be investing",
    "start": "1149600",
    "end": "1155520"
  },
  {
    "text": "your efforts are you going to buy instead into a vendor solution what do they offer",
    "start": "1155520",
    "end": "1160720"
  },
  {
    "text": "right that there's trade-offs to the decision the next point is just around not all data is equal like if i have a",
    "start": "1160720",
    "end": "1167760"
  },
  {
    "text": "trace that contains an error that's probably much more valuable than a trace that does not contain an error",
    "start": "1167760",
    "end": "1173919"
  },
  {
    "text": "same applies with things like duration like if i have an outlier if i'm like above my p90 or p95 or even p99",
    "start": "1173919",
    "end": "1180960"
  },
  {
    "text": "i probably want to keep that data i want to understand why i want to have more samples of that versus if they're",
    "start": "1180960",
    "end": "1187200"
  },
  {
    "text": "all the same exact average duration do i really need every one sure i need them from a metrics",
    "start": "1187200",
    "end": "1192400"
  },
  {
    "text": "perspective but do i need the individual traces and then maybe like i want production to",
    "start": "1192400",
    "end": "1198799"
  },
  {
    "text": "to not sample i want development to sample heavily just from a cost perspective and from an availability like if dev",
    "start": "1198799",
    "end": "1204240"
  },
  {
    "text": "is down maybe it's not the end of the world in my environment again this comes down to business requirements and the problems you're trying to solve",
    "start": "1204240",
    "end": "1211280"
  },
  {
    "text": "but really the biggest reason that comes up around sampling is cost and when you think of costs you",
    "start": "1211280",
    "end": "1216880"
  },
  {
    "text": "need to think of many things the processing aspects the network egress costs the storage costs of containing all that",
    "start": "1216880",
    "end": "1224480"
  },
  {
    "text": "data and storing it for whatever retention period you care about the whole run it versus buy it like are",
    "start": "1224480",
    "end": "1230159"
  },
  {
    "text": "you rolling your own back end are you rolling your own solution to instrumentation or are you",
    "start": "1230159",
    "end": "1235760"
  },
  {
    "text": "leveraging open source are you doing some open source in some vendor and then finally the cost of",
    "start": "1235760",
    "end": "1241919"
  },
  {
    "text": "downtime like if i sample and i don't have the data that i need if i don't have the observability if i can't answer",
    "start": "1241919",
    "end": "1248159"
  },
  {
    "text": "the questions i need to what does that cost to my business and am i willing to actually pay that",
    "start": "1248159",
    "end": "1253600"
  },
  {
    "text": "so there's a lot of trade-offs and decisions but this is why sampling is a real thing in distributed",
    "start": "1253600",
    "end": "1259760"
  },
  {
    "text": "tracing now i want to kind of warn about the marketing hype and now full disclosure i",
    "start": "1259760",
    "end": "1265679"
  },
  {
    "text": "work for a vendor so this applies just as much the company i work for as any other vendor out there any other",
    "start": "1265679",
    "end": "1271760"
  },
  {
    "text": "marketing people out there but you need to be aware of some things when it comes to sampling",
    "start": "1271760",
    "end": "1277120"
  },
  {
    "text": "like you'll hear sampling is fine because like you have all the data for real-time investigation",
    "start": "1277120",
    "end": "1282880"
  },
  {
    "text": "what does that mean it usually means you have it for a very small window of time we're talking minutes maybe five minutes",
    "start": "1282880",
    "end": "1288880"
  },
  {
    "text": "maybe 15 max sure that's great but what do you do after the fact or",
    "start": "1288880",
    "end": "1294320"
  },
  {
    "text": "we're going to get all the most interesting things for you how do i know how do i trust and verify that how do i",
    "start": "1294320",
    "end": "1299600"
  },
  {
    "text": "tweak that what if i need something else that i think is interesting is that okay again it comes down to",
    "start": "1299600",
    "end": "1305360"
  },
  {
    "text": "business requirements another one is for just around like you have to sample because it's just too",
    "start": "1305360",
    "end": "1311120"
  },
  {
    "text": "much data a lot of this comes out of like the dapper paper that came from google but one of the things you should ask is",
    "start": "1311120",
    "end": "1317360"
  },
  {
    "text": "like am am i working at a fang company where there is just so much data that i",
    "start": "1317360",
    "end": "1322480"
  },
  {
    "text": "absolutely have to do something about it most of us are not in that category and",
    "start": "1322480",
    "end": "1328000"
  },
  {
    "text": "even at millions of spans per second it's not as much of a problem as you might think",
    "start": "1328000",
    "end": "1333440"
  },
  {
    "text": "now eventually you will hit some threshold where you need to start considering it but not every company out there is a",
    "start": "1333440",
    "end": "1339039"
  },
  {
    "text": "google company so you need to take that with a grain of salt as well are you going to manage your own",
    "start": "1339039",
    "end": "1344480"
  },
  {
    "text": "observability back end are you going to use open source are you going to use a vendor solution all of that kind of dictates the amount",
    "start": "1344480",
    "end": "1351760"
  },
  {
    "text": "of data that you can collect and of course the cost associated with that and then finally like",
    "start": "1351760",
    "end": "1356799"
  },
  {
    "text": "what have you done to instrument your applications and if it is so verbose if you do have so much traffic",
    "start": "1356799",
    "end": "1362480"
  },
  {
    "text": "why what problems are you trying to solve is that necessary did you instrument too much do you have",
    "start": "1362480",
    "end": "1368080"
  },
  {
    "text": "too much metadata like is the instrumentation that you provided valuable or not",
    "start": "1368080",
    "end": "1373200"
  },
  {
    "text": "because that might be a better problem to go solve than whether or not you sample the data",
    "start": "1373200",
    "end": "1378480"
  },
  {
    "text": "and then finally just around hey our solution's cheaper because typically of sampling again you",
    "start": "1378480",
    "end": "1383919"
  },
  {
    "text": "have to look at the whole ownership thing tail-based sampling doesn't come for free that cost comes from somewhere",
    "start": "1383919",
    "end": "1389440"
  },
  {
    "text": "either it's on your end or it's on the vendor end but there is a cost associated with it if you sample you're going to lose some",
    "start": "1389440",
    "end": "1396559"
  },
  {
    "text": "amount of observability how much is acceptable typically head base without the full fidelity metrics",
    "start": "1396559",
    "end": "1402159"
  },
  {
    "text": "that's not going to be good enough for most environments but tail-based sampling where i may not have every trace but i do have fully",
    "start": "1402159",
    "end": "1408000"
  },
  {
    "text": "accurate metrics and slis usually that is sufficient and then are your specific business",
    "start": "1408000",
    "end": "1415919"
  },
  {
    "text": "requirements and desired outcomes being met that at the end of the day that's really the most important thing",
    "start": "1415919",
    "end": "1421600"
  },
  {
    "text": "now with that i want to give a quick demo i will actually use the open telemetry project to do this",
    "start": "1421600",
    "end": "1427200"
  },
  {
    "text": "i'm actually going to fire up a docker compose here and i will walk you",
    "start": "1427200",
    "end": "1433520"
  },
  {
    "text": "through what it's doing as it starts running so uh what we basically have is an open",
    "start": "1433520",
    "end": "1440960"
  },
  {
    "text": "telemetry collector and in that open telemetry collector we are going to point to three different",
    "start": "1440960",
    "end": "1448559"
  },
  {
    "text": "jaeger instances so jaeger's distributed tracing back end and what i've done is i've configured",
    "start": "1448559",
    "end": "1454159"
  },
  {
    "text": "three different pipelines uh in the open telemetry collector so basically we're going to receive 100",
    "start": "1454159",
    "end": "1460480"
  },
  {
    "text": "of the traffic and we are going to send it to a jaeger instance",
    "start": "1460480",
    "end": "1465600"
  },
  {
    "text": "we are going to use a probabilistic sampler and send a subset of that traffic to a",
    "start": "1465600",
    "end": "1470960"
  },
  {
    "text": "second jaeger instance and then we're going to leverage tail based sampling and we're going to send it to a third instance",
    "start": "1470960",
    "end": "1476480"
  },
  {
    "text": "this also kind of show you the pros and cons of the of the different approaches now from a configuration perspective the",
    "start": "1476480",
    "end": "1482720"
  },
  {
    "text": "probabilistic sampler the head-based sampling is configured to sample one percent of the traffic again this is customizable",
    "start": "1482720",
    "end": "1489520"
  },
  {
    "text": "so i could say five percent i could say zero point one percent i could say fifty percent it's really configurable to your needs",
    "start": "1489520",
    "end": "1496400"
  },
  {
    "text": "tail-based sampling what we're going to do is we're going to tell it that we have a couple policies",
    "start": "1496400",
    "end": "1502000"
  },
  {
    "text": "one is if it contains an attribute of error equals true then we're going to sample it and the",
    "start": "1502000",
    "end": "1508240"
  },
  {
    "text": "next one is if we have an http status code that is between 400 and 599 again we are going to sample",
    "start": "1508240",
    "end": "1516960"
  },
  {
    "text": "it so this gives me kind of choice these are just some examples you might have different rules or policies or different",
    "start": "1516960",
    "end": "1523760"
  },
  {
    "text": "sampling things that you want to leverage this may configure to meet your needs but hopefully this will give you an idea",
    "start": "1523760",
    "end": "1530240"
  },
  {
    "text": "of how it actually works in practice now on the flip side i mentioned this is a docker",
    "start": "1530240",
    "end": "1535679"
  },
  {
    "text": "compose file so we have three jaeger instances running we have an open telemetry collector",
    "start": "1535679",
    "end": "1541600"
  },
  {
    "text": "running and then we basically have a load generator that's passing traffic to the collector that's basically uh everything here this",
    "start": "1541600",
    "end": "1548480"
  },
  {
    "text": "is based on the open symmetry collector demo that's in the github repository today so let's go ahead and fire up the jaeger",
    "start": "1548480",
    "end": "1556720"
  },
  {
    "text": "instance that's receiving all of the traffic so i'll just pick one of the services and you'll see that there's traffic",
    "start": "1556720",
    "end": "1562480"
  },
  {
    "text": "coming in here the cart service is the one that i'm looking at particularly so tons of traces are coming in",
    "start": "1562480",
    "end": "1568400"
  },
  {
    "text": "that's great i will pick the second one here this is doing probabilistic sampling",
    "start": "1568400",
    "end": "1573600"
  },
  {
    "text": "so again i'll pick the cart service and you'll see there's actually less traces significantly less and",
    "start": "1573600",
    "end": "1579200"
  },
  {
    "text": "that's because we're only sampling one percent of them and then the final one this is the",
    "start": "1579200",
    "end": "1584720"
  },
  {
    "text": "tail-based sampling that is only capturing errors so in this case you'll see again cart service",
    "start": "1584720",
    "end": "1590880"
  },
  {
    "text": "only cart service traces that contain errors are showing up you won't see any spans or traces that",
    "start": "1590880",
    "end": "1597600"
  },
  {
    "text": "contain non-errors because that wouldn't meet the tail based sampling rule so again three different ways of",
    "start": "1597600",
    "end": "1604880"
  },
  {
    "text": "collecting no sampling error-based sampling probabilistic sampling at a one percent rate very easy",
    "start": "1604880",
    "end": "1612400"
  },
  {
    "text": "to get started very easy to kind of configure in your environments and then you can solve more of the scale",
    "start": "1612400",
    "end": "1617440"
  },
  {
    "text": "problems or the different policies that you care about the rules you want to write for making these sampling decisions",
    "start": "1617440",
    "end": "1625360"
  },
  {
    "text": "so some key takeaways from this presentation one is definitely understand your",
    "start": "1625360",
    "end": "1630720"
  },
  {
    "text": "business requirements and the desired outcomes every environment's a little bit different what are you trying to solve",
    "start": "1630720",
    "end": "1636400"
  },
  {
    "text": "for what are the pain points you have what visibility and observability do you really need",
    "start": "1636400",
    "end": "1641679"
  },
  {
    "text": "second understand your sampling options understand their impact to both cost and observability",
    "start": "1641679",
    "end": "1648640"
  },
  {
    "text": "and compare that against your business requirements and desired outcomes and decide what is right for you",
    "start": "1648640",
    "end": "1654080"
  },
  {
    "text": "and then finally beware of the marketing hype there's a lot of a lot of information out there it can be hard to kind of navigate all the noise",
    "start": "1654080",
    "end": "1661120"
  },
  {
    "text": "there's also like traditional more solutions versus cloud native solutions",
    "start": "1661120",
    "end": "1666320"
  },
  {
    "text": "and the thought processes are a little bit different do your own research and again the",
    "start": "1666320",
    "end": "1671440"
  },
  {
    "text": "foundation should be your business requirements and desired outcomes and what you're trying to solve for what you're trying to optimize for and",
    "start": "1671440",
    "end": "1678640"
  },
  {
    "text": "do you actually get the the insights that you need to ensure that your service your business is successful at the end",
    "start": "1678640",
    "end": "1685360"
  },
  {
    "text": "of the day and with that thank you so much for joining me this is really just an",
    "start": "1685360",
    "end": "1690799"
  },
  {
    "text": "introduction to different types of sampling things that you're going to come across specifically for distributed tracing",
    "start": "1690799",
    "end": "1696640"
  },
  {
    "text": "i would love to talk to folks more about it feel free to reach out to me directly and thanks so much for joining",
    "start": "1696640",
    "end": "1703840"
  },
  {
    "text": "okay thank you steve thank you for your sharing and your slides it's very nice and",
    "start": "1707760",
    "end": "1713919"
  },
  {
    "text": "helpful and it it's our q and a online time",
    "start": "1713919",
    "end": "1719279"
  },
  {
    "text": "let's welcome steve hi steve hope you're here uh",
    "start": "1719279",
    "end": "1725760"
  },
  {
    "text": "it's our online a time and let's check out the check box we got three questions for you",
    "start": "1725760",
    "end": "1735360"
  },
  {
    "text": "so please yeah go ahead so the first one is uh will cloud native observability be",
    "start": "1735360",
    "end": "1740399"
  },
  {
    "text": "a topic that will have like a training course and certification i think long term that wouldn't be too",
    "start": "1740399",
    "end": "1746000"
  },
  {
    "text": "surprising uh in fact right now in the cncf they actually started a sig or special interest group on",
    "start": "1746000",
    "end": "1752240"
  },
  {
    "text": "observability and some of these topics are being discussed like what is the best way to start promoting and getting",
    "start": "1752240",
    "end": "1757679"
  },
  {
    "text": "more educated about observability some of the initial thoughts are around more blogs and just",
    "start": "1757679",
    "end": "1763600"
  },
  {
    "text": "other ways of getting material around observability but long term sure like this is an important topic a",
    "start": "1763600",
    "end": "1769600"
  },
  {
    "text": "lot of the projects in cncf are observability based jaeger being a big one fluent",
    "start": "1769600",
    "end": "1775039"
  },
  {
    "text": "fluent bits in there so yeah i think long term that'll happen i'm not aware of any immediate plans for",
    "start": "1775039",
    "end": "1781120"
  },
  {
    "text": "that though next question uh your recommendation to end users that want to build their own",
    "start": "1781120",
    "end": "1787360"
  },
  {
    "text": "solutions for observability yeah so there's start with cncf or start with open source projects",
    "start": "1787360",
    "end": "1793039"
  },
  {
    "text": "there's some good stuff out there like jager is a very very scalable product very easy to get started they actually",
    "start": "1793039",
    "end": "1798960"
  },
  {
    "text": "have decoupled the architecture very well so it's easy to scale up individual components as the the amount",
    "start": "1798960",
    "end": "1804720"
  },
  {
    "text": "of data that you're collecting increases and they can support more streaming based systems if you need it",
    "start": "1804720",
    "end": "1810159"
  },
  {
    "text": "from a logging perspective fluent bit is also very efficient at collecting this data it has rich parsing rules so actually",
    "start": "1810159",
    "end": "1816720"
  },
  {
    "text": "get the data in the format that you care about prometheus again great metricking tool",
    "start": "1816720",
    "end": "1822320"
  },
  {
    "text": "to to collect in more cloud native environments very common becoming kind of the standard way to",
    "start": "1822320",
    "end": "1827520"
  },
  {
    "text": "collect metrics today uh compared to other other mechanisms so you can definitely start with the open",
    "start": "1827520",
    "end": "1833120"
  },
  {
    "text": "source tools and then you'll probably start building on top of them like hey i have prometheus and now i want to have",
    "start": "1833120",
    "end": "1839120"
  },
  {
    "text": "high availability or i want to scale this to a significant a very large scale how do i do that and",
    "start": "1839120",
    "end": "1846320"
  },
  {
    "text": "again there are open source solutions out there to to get you started so from a getting started perspective",
    "start": "1846320",
    "end": "1852000"
  },
  {
    "text": "it's really easy if you're looking for a single tool that provides all the different data sources",
    "start": "1852000",
    "end": "1857440"
  },
  {
    "text": "and a way to kind of quarry against them that's not as common today and as you get to more like enterprise",
    "start": "1857440",
    "end": "1864720"
  },
  {
    "text": "features like i care about massive scale or i care about end-to-end encryption or i care about",
    "start": "1864720",
    "end": "1870240"
  },
  {
    "text": "uh very rich pii or personally identifying information being extracted",
    "start": "1870240",
    "end": "1875279"
  },
  {
    "text": "that can be a little bit harder but there are solutions out there for both open source and",
    "start": "1875279",
    "end": "1880399"
  },
  {
    "text": "and commercial depending on your needs and then final one is around istio and",
    "start": "1880399",
    "end": "1886480"
  },
  {
    "text": "asking if is there any solution to get end-to-end request training working without span context",
    "start": "1886480",
    "end": "1892000"
  },
  {
    "text": "propagation as this will make it easier and motivate more customers to kind of take advantage of",
    "start": "1892000",
    "end": "1897120"
  },
  {
    "text": "this or more end users take advantage of this yes let me break this down for people that are not aware",
    "start": "1897120",
    "end": "1902240"
  },
  {
    "text": "so istio is a service mesh basically how it works is you deport deploy proxies to every one of your",
    "start": "1902240",
    "end": "1908640"
  },
  {
    "text": "applications and all of your traffic between applications get routed across these proxies",
    "start": "1908640",
    "end": "1914720"
  },
  {
    "text": "so because there's a proxy in between you can actually inspect that traffic and as a result one common question is",
    "start": "1914720",
    "end": "1921919"
  },
  {
    "text": "well hey if i'm inspecting this traffic anyway can i get my distributed tracing information from that inspected traffic",
    "start": "1921919",
    "end": "1929279"
  },
  {
    "text": "and the answer is of course yes you definitely can uh now i need i need to take a step back to answer the question",
    "start": "1929279",
    "end": "1935200"
  },
  {
    "text": "with distributed tracing it works via something called context propagation i talked about this a little bit in the presentation",
    "start": "1935200",
    "end": "1942159"
  },
  {
    "text": "uh basically you if i'm thinking about like rpc or remote protocol like type things like",
    "start": "1942159",
    "end": "1948080"
  },
  {
    "text": "let's think of restful services it basically means i need to pass headers across each one of my requests",
    "start": "1948080",
    "end": "1953679"
  },
  {
    "text": "so for example the trace id i have to pass that to every single call i make over the network",
    "start": "1953679",
    "end": "1959039"
  },
  {
    "text": "well what happens if my application doesn't actually accept or pass these headers well then",
    "start": "1959039",
    "end": "1964960"
  },
  {
    "text": "context propagation is broken and as a result my distributed tracing is broken that's a problem so while istio or",
    "start": "1964960",
    "end": "1972320"
  },
  {
    "text": "any service mesh can provide traffic about everything can provide trace",
    "start": "1972320",
    "end": "1977440"
  },
  {
    "text": "information about everything that passes through the proxy it can't guarantee that the headers that",
    "start": "1977440",
    "end": "1982640"
  },
  {
    "text": "are being passed through the proxy that the application actually accepts and propagates to its downstream calls",
    "start": "1982640",
    "end": "1987840"
  },
  {
    "text": "so unfortunately the answer is no there is no easy way yes you can get some rich information",
    "start": "1987840",
    "end": "1994159"
  },
  {
    "text": "from these proxies but if you really want to take advantage of distributed tracing you need to have",
    "start": "1994159",
    "end": "1999440"
  },
  {
    "text": "context propagation in fact if anyone is getting started with observability don't start with a logging tool or a",
    "start": "1999440",
    "end": "2005919"
  },
  {
    "text": "metric tool or tracing tool start with context propagation because that alone enables so much for",
    "start": "2005919",
    "end": "2012080"
  },
  {
    "text": "you in your environment to be able to troubleshoot availability as well as performance problems",
    "start": "2012080",
    "end": "2019679"
  },
  {
    "text": "uh next question is google's hipster is not supporting open",
    "start": "2019679",
    "end": "2025360"
  },
  {
    "text": "telemetry is there any way to get the hipster demo ah okay so yeah so the so open symmetry is the joining of two",
    "start": "2025360",
    "end": "2031360"
  },
  {
    "text": "different projects open tracing and open census open census has something called the",
    "start": "2031360",
    "end": "2037120"
  },
  {
    "text": "hipster demo application so it's basically a poly polyglot micro services",
    "start": "2037120",
    "end": "2042640"
  },
  {
    "text": "application that was instrumented with open census and it was used as a demo environment to kind of show off the power of open",
    "start": "2042640",
    "end": "2049358"
  },
  {
    "text": "census we are actually using it for open symmetry as well so open symmetry merges open census and",
    "start": "2049359",
    "end": "2056720"
  },
  {
    "text": "open tracing together it actually supports the open census format so the fact that the hipster demo app is",
    "start": "2056720",
    "end": "2062800"
  },
  {
    "text": "sending open census is totally fine now i'm assuming the question is just around well hey it doesn't support",
    "start": "2062800",
    "end": "2068560"
  },
  {
    "text": "open telemetry's format which is called otop and that's true it doesn't and the",
    "start": "2068560",
    "end": "2073599"
  },
  {
    "text": "reason for that is because otop was just finalized less than a month ago so it's very new and we were waiting for",
    "start": "2073599",
    "end": "2080800"
  },
  {
    "text": "the tracing spec to become finalized and waiting for the otop protocol to the first version of it to",
    "start": "2080800",
    "end": "2087040"
  },
  {
    "text": "be rolled out that's now done so i think you'll actually see the hipster demo app be instrumented with open symmetry going",
    "start": "2087040",
    "end": "2093440"
  },
  {
    "text": "forward but there's no reason why you can't use it with the open symmetry project today because the open symmetry project does",
    "start": "2093440",
    "end": "2099839"
  },
  {
    "text": "support open census so if you have the collector for example you can receive and export open census",
    "start": "2099839",
    "end": "2105119"
  },
  {
    "text": "format so the same demo application can be used i know that i still use the hipster demo",
    "start": "2105119",
    "end": "2110240"
  },
  {
    "text": "app today when i'm showing off open telemetry there's also a question about how do you get this tracing",
    "start": "2110240",
    "end": "2116560"
  },
  {
    "text": "hipster demo application i don't have the link readily available but i'm pretty sure if you just uh go google uh the uh google",
    "start": "2116560",
    "end": "2124520"
  },
  {
    "text": "microservices demo application it's on github uh i think if you just do google hipster microservices you'll",
    "start": "2124520",
    "end": "2131040"
  },
  {
    "text": "probably find it but on github there is a repository that basically lists many different microservices it shows off all the",
    "start": "2131040",
    "end": "2137599"
  },
  {
    "text": "primary languages so you have like net java javascript python",
    "start": "2137599",
    "end": "2142960"
  },
  {
    "text": "i don't remember all the other ones but the idea here is that you can test what the instrumentation looks like",
    "start": "2142960",
    "end": "2148880"
  },
  {
    "text": "because the instrumentation is language specific and you can see an end to end request calling through these different",
    "start": "2148880",
    "end": "2154880"
  },
  {
    "text": "languages and what that would actually look like in the back end or back ends of your choice",
    "start": "2154880",
    "end": "2161279"
  },
  {
    "text": "so i think that addresses most of the primary questions in the live q a here",
    "start": "2162320",
    "end": "2167680"
  },
  {
    "text": "okay is any other questions far about tinnies okay i think he's no more okay thank you",
    "start": "2167680",
    "end": "2174320"
  },
  {
    "text": "steve thank you so much i never slide by the way thank you thanks so much for having me thank you",
    "start": "2174320",
    "end": "2181400"
  },
  {
    "text": "bye",
    "start": "2181400",
    "end": "2184400"
  }
]